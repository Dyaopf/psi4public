#! Database calculation with psi4-generated input. Should not be used as a model
#! input file but as a canary to avoid breaking database/input parser dependencies.
 
refenergy = -40.195693876290                                                                          #TEST

# This is a psi4 input file auto-generated from the database() wrapper.

PsiMod.print_out('\n')
banner(' Database BASIC Computation: Reagent BASIC-ch4-reagent \n   methane')
PsiMod.print_out('\n')

from PsiMod import *
from molecule import *
from driver import *
from text import *
from inpsight import *
from wrappers import *
from aliases import *
from psiexceptions import *
from util import *
import pickle
geometry("""
0 1
H
H 1 0.74
""","blank_molecule_psi4_yo")

dimer = geometry("""
0 1
C        0.00000000    -0.00014000     1.85916100
H       -0.88855100     0.51306000     1.49468500
H        0.88855100     0.51306000     1.49468500
H        0.00000000    -1.02633900     1.49486800
H        0.00000000     0.00008900     2.94828400
units angstrom
""","dimer")
PsiMod.IO.set_default_namespace("dimer")

PsiMod.set_memory(256000000)

PsiMod.set_global_option('BASIS', '6-31+G*')
PsiMod.set_global_option('CONVERGENCE', 11)
PsiMod.set_global_option('GUESS', 'CORE')
PsiMod.set_global_option('JOBTYPE', 'SP')
PsiMod.set_global_option('PRINT', 1)
PsiMod.set_global_option('REFERENCE', 'RHF')
PsiMod.set_global_option('DF_BASIS_MP2', 'CC-PVDZ-RI')
PsiMod.set_global_option('DF_BASIS_SAPT', 'CC-PVDZ-RI')
PsiMod.set_global_option('DF_BASIS_SCF', 'CC-PVDZ-JKFIT')
PsiMod.set_global_option('SCF_TYPE', 'DF')

PsiMod.set_global_option('BASIS', '6-31+G*')
PsiMod.set_global_option('DF_BASIS_SCF', 'CC-PVDZ-JKFIT')
PsiMod.set_global_option('DF_BASIS_MP2', 'CC-PVDZ-RI')
PsiMod.set_global_option('DF_BASIS_SAPT', 'CC-PVDZ-RI')
molecule = PsiMod.get_active_molecule()
molecule.update_geometry()

pickle_kw = ("""(dp0
S'subset'
p1
(lp2
S'ch4'
p3
asS'name'
p4
S'scf'
p5
sS'db_mode'
p6
S'sow'
p7
sS'db_name'
p8
S'BASIC'
p9
sS'db_func'
p10
cdriver
optimize
p11
s.""")

kwargs = pickle.loads(pickle_kw)
electronic_energy = optimize(**kwargs)

PsiMod.print_variables()
PsiMod.print_out('\nDATABASE RESULT: computation 80955 for reagent BASIC-ch4-reagent yields electronic energy %20.12f\n' % (electronic_energy))
PsiMod.set_variable('NATOM', molecule.natom())

compare_values(refenergy, electronic_energy, 5, 'Optimized reference energy for sown BASIC reagent')  #TEST

clean()
