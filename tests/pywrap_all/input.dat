#! Intercalls among python wrappers- database, cbs, optimize, energy, etc.
#! Though each call below functions individually, running them all in sequence or
#! mixing up the sequence is aspirational at present.
#! Also aspirational is using the intended types of gradients.

ref_DB_E = 0.016075135344  #TEST
ref_DB_CBS_E = 0.034877478903  #TEST
ref_CBS_E = -1.148830624581  #TEST
ref_CBS_E_postopt = -1.17444630 #TEST
ref_OPT_E_0 = -1.140254531567  #TEST
ref_OPT_E_1 = -1.122959828171  #TEST
ref_DB_OPT_E_BASIC = 37075.200420269888  #TEST
ref_DB_OPT_E_S22 = 4.636003565957  #TEST
ref_OPT_CBS_E_0 = -1.174446301062  #TEST

molecule h2 {
    H
    H 1 1.00
}

set globals {
    BASIS 3-21G
    REFERENCE RHF
    SCF_TYPE PK
    PRINT 1
    CONVERGENCE 11
    JOBTYPE SP
    GUESS CORE
}

# database(opt(energy()))
db('mp2','BASIC',db_func=optimize,tabulate=['mp2 total energy','current energy'])
compare_values(ref_DB_OPT_E_BASIC, get_variable('BASIC DATABASE ROOT-MEAN-SQUARE DEVIATION'), 5, "[7] Wrapper database BASIC calling optimize (analytic G) calling energy")  #TEST

# optimize(cbs(energy()))
optimize('mp2',func=cbs,corl_basis='cc-pv[dt]z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='ccsd',delta_basis='3-21g')
compare_values(ref_OPT_CBS_E_0, get_variable('CBS TOTAL ENERGY'), 7, "[1] Wrapper optimize (analytic E) calling complete_basis_set calling energy")  #TEST

# database(energy())
db('mp2','RGC10',subset=['HeHe-0.85','HeHe-1.0'],tabulate=['mp2 total energy'])
compare_values(ref_DB_E, get_variable('RGC10 DATABASE ROOT-MEAN-SQUARE DEVIATION'), 7, "[2] Wrapper database calling energy")  #TEST

# database(cbs(energy()))
db('mp2','RGC10',func=cbs,subset=['HeHe-0.85','HeHe-1.0'],tabulate=['mp2 total energy','current energy'],corl_basis='cc-pV[DT]Z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='ccsd(t)',delta_basis='3-21g')
compare_values(ref_DB_CBS_E, get_variable('RGC10 DATABASE ROOT-MEAN-SQUARE DEVIATION'), 7, "[3] Wrapper database calling complete_basis_set calling energy")  #TEST

# cbs(energy())  use first compare_values for h2 geom above, second for h2 geom after optimization in [1]
cbs(corl_wfn='mp2',corl_basis='cc-pv[dt]z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='ccsd',delta_basis='3-21g',delta2_wfn='ccsd(t)',delta2_wfn_lesser='ccsd',delta2_basis='3-21g')
#compare_values(ref_CBS_E, get_variable('CBS TOTAL ENERGY'), 7, "[4] Wrapper complete_basis_set calling energy")  #TEST
compare_values(ref_CBS_E_postopt, get_variable('CBS TOTAL ENERGY'), 7, "[4] Wrapper complete_basis_set calling energy")  #TEST

# opt(energy())
# TODO switch to mp2 once gradients thoroughly working again
optimize('mp2',dertype='none')
compare_values(ref_OPT_E_0, get_variable('CURRENT ENERGY'), 7, "[5] Wrapper optimize (analytic E) calling energy")  #TEST
optimize('scf')
compare_values(ref_OPT_E_1, get_variable('CURRENT ENERGY'), 7, "[6] Wrapper optimize (analytic G) calling energy")  #TEST

# database(opt(energy()))
#db('mp2','BASIC',db_func=optimize,tabulate=['mp2 total energy','current energy'])
#compare_values(ref_DB_OPT_E_BASIC, get_variable('BASIC DATABASE ROOT-MEAN-SQUARE DEVIATION'), 5, "[7] Wrapper database BASIC calling optimize (analytic G) calling energy")  #TEST
#db('mp2','S22',db_func=optimize,subset=[1],tabulate=['mp2 total energy','current energy'])
#compare_values(ref_DB_OPT_E_S22, get_variable('S22 DATABASE ROOT-MEAN-SQUARE DEVIATION'), 5, "[8] Wrapper database S22 calling optimize (analytic G) calling energy")  #TEST


# opt(energy())
h2.reset_point_group('c1')
h2.fix_orientation(1)
h2.update_geometry()
optimize('mp2')
compare_values(ref_OPT_E_0, get_variable('CURRENT ENERGY'), 7, "[9] Wrapper optimize (analytic E) calling energy")  #TEST

clean()

