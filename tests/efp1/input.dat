# PYTHONPATH must include directory above plugin directory.
#     Define either externally or here, then import plugin.
#sys.path.insert(0, './..')
#import efp

# If EFP potential was updated ref data needs updating too

ref_force = [
     [-0.004883,     -0.003389,      0.000621],  #TEST    
     [-0.000319,      0.000794,      0.003689],  #TEST    
     [-0.000650,      0.000122,      0.000022],  #TEST    
     [ 0.002850,      0.003714,     -0.002373],  #TEST    
     [ 0.000941,     -0.000014,     -0.001263],  #TEST    
     [ 0.000799,      0.000002,      0.004360],  #TEST    
     [-0.000091,      0.000497,      0.001837],  #TEST    
     [ 0.003255,     -0.002735,     -0.004364],  #TEST    
     [-0.001902,      0.001009,     -0.002530] ] #TEST


ref_torque = [                                   #TEST
     [-0.002172,     -0.003548,      0.006235],  #TEST
     [-0.008444,     -0.008035,      0.001560],  #TEST
     [ 0.000562,      0.002723,     -0.003843],  #TEST
     [ 0.007033,     -0.005472,      0.002904],  #TEST
     [-0.002158,     -0.001924,      0.004688],  #TEST
     [-0.004346,      0.002913,      0.003006],  #TEST
     [-0.000217,      0.001300,     -0.000636],  #TEST
     [ 0.005464,      0.002667,     -0.004870],  #TEST
     [-0.000059,      0.003312,      0.004040] ] #TEST

ref_efp = [
     [-0.004883,     -0.003389,      0.000621,     -0.002172,     -0.003548,      0.006235],   #TEST
     [-0.000319,      0.000794,      0.003689,     -0.008444,     -0.008035,      0.001560],   #TEST
     [-0.000650,      0.000122,      0.000022,      0.000562,      0.002723,     -0.003843],   #TEST
     [ 0.002850,      0.003714,     -0.002373,      0.007033,     -0.005472,      0.002904],   #TEST
     [ 0.000941,     -0.000014,     -0.001263,     -0.002158,     -0.001924,      0.004688],   #TEST
     [ 0.000799,      0.000002,      0.004360,     -0.004346,      0.002913,      0.003006],   #TEST
     [-0.000091,      0.000497,      0.001837,     -0.000217,      0.001300,     -0.000636],   #TEST
     [ 0.003255,     -0.002735,     -0.004364,      0.005464,      0.002667,     -0.004870],   #TEST
     [-0.001902,      0.001009,     -0.002530,     -0.000059,      0.003312,      0.004040] ]   #TEST

refF = PsiMod.Matrix(9, 3)                       #TEST
refF.set(ref_force)                              #TEST
refT = PsiMod.Matrix(9, 3)                       #TEST
refT.set(ref_torque)                             #TEST
refEFP = PsiMod.Matrix(9, 6)                    #TEST
refEFP.set(ref_efp)                             #TEST


molecule {
O
H 1 R
H 1 R 2 A

R = .9
A = 104.5
}

molecule efp_spec {
efp h2o_l
   -3.394    -1.900    -3.700 #/* H2O */
   -3.524    -1.089    -3.147
   -2.544    -2.340    -3.445
--
efp nh3_l
   -5.515     1.083     0.968 #/* NH3 */
   -5.161     0.130     0.813
   -4.833     1.766     0.609
--
efp nh3_l
    1.848     0.114     0.130 #/* NH3 */
    1.966     0.674    -0.726
    0.909     0.273     0.517
--
efp nh3_l
   -1.111    -0.084    -4.017 #/* NH3 */
   -1.941     0.488    -3.813
   -0.292     0.525    -4.138
--
efp ch3oh_l
   -2.056     0.767    -0.301 #/* CH3OH */
   -2.999    -0.274    -0.551
   -1.201     0.360     0.258
--
efp h2o_l
   -0.126    -2.228    -0.815 #/* H2O */
    0.310    -2.476     0.037
    0.053    -1.277    -1.011
--
efp h2o_l
   -1.850     1.697     3.172 #/* H2O */
   -1.050     1.592     2.599
   -2.666     1.643     2.614
--
efp ch3oh_l
    1.275    -2.447    -4.673 #/* CH3OH */
    0.709    -3.191    -3.592
    2.213    -1.978    -4.343
--
efp h2o_l
   -5.773    -1.738    -0.926 #/* H2O */
   -5.017    -1.960    -1.522
   -5.469    -1.766     0.014
no_reorient
no_com
}

set {
  basis sto-3g
  efp_disp no
  efp_exch no
#  efp_gradient yes
}

set efp {
  print 1
  dertype first
}

energy('efp')
#energy('efpmolcompute')
compare_values(709.019404868, efp_spec.nuclear_repulsion_energy(ALL), 6, "Nuclear Repulsion Energy:")
compare_values(-0.0066095987170644, get_variable('CURRENT ENERGY'), 5, 'EFP Total (fails at 0.0015 b/c options not passed)')  #TEST

grad = get_gradient()
#compare_matrices(refEFP, grad, 6, "libefp printed gradients, vs. psi4 read-from-libefp gradients") #TEST

# want to be able to say
#gradient('efp')


