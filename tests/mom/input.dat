# Maximum Overlap Method (MOM) Test
#
# MOM is designed to stabilize SCF convergence
# and to target excited Slater determinants directly.
#
# The latter is somewhat dicey, you never know what 
# you are going to find.

Enuc = 8.801466202085710 #TEST
E0 = -76.02141846024246 #TEST 
E56_singlet = -75.27755061182117 #TEST
E46_singlet = -75.09192778268627 #TEST
E56_triplet = -75.79200708284641 # TEST 

# Standard water molecule
molecule water {
0 1
O
H 1 1.0
H 1 1.0 2 104.5
}

water.update_geometry() # TEST
compare_values(Enuc, water.nuclear_repulsion_energy(), 9, "Nuclear Repulsion Energy") #TEST

# => Ground state SCF <= #

# Occupied Orbitals:
#  1 1A1 -20.55 
#  2 2A1  -1.32
#  3 1B2  -0.68 
#  4 3A1  -0.56
#  5 1B1  -0.49
# ----------
#  6 4A1   0.17
#  7 2B2   0.25
#  ......
#
#  Total Energy -76.021418

set globals {
basis cc-pvdz
e_converge 12
d_converge 10
reference rhf
}

E = energy('scf')
compare_values(E0, E, 9, "Ground State SCF Energy") #TEST

# => First excited singlet (AB 1B1->AB 4A1) <= #  

# Total Energy -75.277551

set globals {
reference rhf
# Give the ground-state orbitals 10 iterations to settle
mom_start 10
# Annihilate absolute orbital 5 (the HOMO)
mom_occ [5]
# Create absolute orbital 6 instead (the LUMO)
mom_vir [6]
}

E = energy('scf')
compare_values(E56_singlet, E, 9, "AB 1B1 -> AB 4A1 SCF Energy") #TEST

# => Core-excited singlet (AB 3A1->AB 4A1) <= #  

# Total Energy -75.091928

set globals {
reference rhf
mom_start 10
# Annihilate absolute orbital 4 (the HOMO - 1)
mom_occ [4]
# Create absolute orbital 6 instead (the LUMO)
mom_vir [6]
}

E = energy('scf')
compare_values(E46_singlet, E, 9, "AB 3A1 -> AB 4A1 SCF Energy") #TEST

# => First excited triplet (B 1B1->A 4A1) <= #  

# NOTE: - is used to index beta obitals in UHF
#       + is used to index alpha orbitals in UHF

# Total Energy -75.792007 

set globals {
# Use UHF for spin-flip
reference uhf
mom_start 10
# Annihilate absolute beta orbital 5 (the HOMO)
mom_occ [-5]
# Create absolute alpha orbital 6 instead (the LUMO)
mom_vir [6]
}

E = energy('scf')
compare_values(E56_triplet, E, 9, "B 1B1 -> A 4A1 SCF Energy") #TEST

clean()

