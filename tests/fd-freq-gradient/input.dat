#! SCF STO-3G finite-difference tests

molecule h2o {
  0 1
  O
  H 1 0.9894093
  H 1 0.9894093 2 100.02688
}

set globals {
  basis sto-3g
}

h2o.update_geometry()

displacements = PsiMod.fd_geoms_freq_1(-1)

for n, displacement in enumerate(displacements):
  displacements[n].print_out()

h2o.fix_orientation(1)

ndisp = len(displacements)
print " %d displacements needed." % ndisp
gradients = []

for n, displacement in enumerate(displacements):
  PsiMod.print_out("\n")
  banner("Loading displacement %d of %d" % (n+1, ndisp))
  print "    displacement %d" % (n+1)

  h2o.set_geometry(displacement)

  gradient('scf')

  G = PsiMod.get_gradient()
  gradients.append(G)

  PsiMod.clean()

set findif { print 3 }

PsiMod.fd_freq_1(gradients, -1)

#frequencies('scf',dertype=1)

#fd_freqs = PsiMod.reference_wavefunction().frequencies()
#
## analytic second derivatives from PSI3 (for now)
#anal_freqs = PsiMod.Vector(3)
#anal_freqs.set(0, 0, 2170.045)
#anal_freqs.set(0, 1, 4140.001)
#anal_freqs.set(0, 2, 4391.065)
#
#compare_vectors(anal_freqs, fd_freqs, 1,
# "Analytic (PSI3) vs. Finite-difference (3-pt.) frequencies from gradients to 0.1 cm^-1 (C1)")
#
#del fd_freqs

clean()
