List detailing what has been done:

 * Ensured that the current libraries can compile.

 * Modified src/bin/MakeRules, the rule $(PSITARGET) now makes a library in
     objdir/bin for the modules. libcints.a, libinput.a, libcscf.a

 * Changed "BINOBJ" to "LIBOBJ" in:
     src/bin/input/Makefile
     src/bin/cints/Makefile
     src/bin/cscf/Makefile

 * src/bin/psi4/Makefile contains its own rule for linking.

 * The global infile, outfle, psi_file_prefix has been moved to inside
     the module namespace for cints and cscf. Input's copy of these are 
     still in global namespace for linking with the libraries.

 * main for input, cints, and cscf have been moved inside their respective
     namespace. The main function in psi4 is the only global one left.

 * Explicit calls to the main in input, cints, and cscf are found in psi4's
     main function to test linking.

 * The explicit call to input::main works, but CINTS::main causes a seg fault
     in libpsio. Haven't tracked it down yet.

 * Fixed the seg fault in cints. Modified psio_done to set _default_psio_lib_
     to NULL after the being deleted.

 * There is code somewhere that is writing to memory that is used elsewhere.
     On my machine it reveals itself by changing psi_file_prefix from "psi"
     to "CSCF". It is happening sometime during the call to CINTS::main.
     I tracked the code that is modifying psi_file_prefix to the strcpy
     function call in ip_string_v (ip_data.c) it appears that the strcpy is
     receiving bogus memory addresses. gdb is unable to provide me a call
     stack backtrace outside of this function so it's going to take a little
     longer to nail the bug.

