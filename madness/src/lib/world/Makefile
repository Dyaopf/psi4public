# Makefile.in generated by automake 1.10 from Makefile.am.
# src/lib/world/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/madness
pkglibdir = $(libdir)/madness
pkgincludedir = $(includedir)/madness
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin11.0.0
host_triplet = x86_64-apple-darwin11.0.0
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(thisinclude_HEADERS) $(top_srcdir)/config/MakeGlobal.am
bin_PROGRAMS = world$(EXEEXT) testhashthreaded$(EXEEXT) \
	testdc$(EXEEXT) objexample$(EXEEXT) objexample2$(EXEEXT) \
	testprof$(EXEEXT) helloworld$(EXEEXT) taskexample$(EXEEXT) \
	testatomicint$(EXEEXT) testhashdc$(EXEEXT) array_test$(EXEEXT) \
	gtest_example$(EXEEXT) qtest$(EXEEXT) \
	worldprofile_test$(EXEEXT) worldptr_test$(EXEEXT) \
	worldref_test$(EXEEXT) worldreduce_test$(EXEEXT) \
	functional_test$(EXEEXT)
subdir = src/lib/world
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/config/acx_check_compiler_flags.m4 \
	$(top_srcdir)/config/acx_check_tr1.m4 \
	$(top_srcdir)/config/acx_crayxt.m4 \
	$(top_srcdir)/config/acx_detect_cxx.m4 \
	$(top_srcdir)/config/acx_enable_debugging.m4 \
	$(top_srcdir)/config/acx_enable_optimal.m4 \
	$(top_srcdir)/config/acx_enable_optimization.m4 \
	$(top_srcdir)/config/acx_enable_warn.m4 \
	$(top_srcdir)/config/acx_fortran_symbols.m4 \
	$(top_srcdir)/config/acx_ibmbgp.m4 \
	$(top_srcdir)/config/acx_mac.m4 \
	$(top_srcdir)/config/acx_mpi.m4 \
	$(top_srcdir)/config/acx_posix_memalign.m4 \
	$(top_srcdir)/config/acx_std_abs.m4 \
	$(top_srcdir)/config/acx_unqal_stat_decl.m4 \
	$(top_srcdir)/config/acx_with_boost.m4 \
	$(top_srcdir)/config/acx_with_eigen3.m4 \
	$(top_srcdir)/config/acx_with_google_perf.m4 \
	$(top_srcdir)/config/acx_with_google_test.m4 \
	$(top_srcdir)/config/acx_with_libunwind.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/madness_config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(thisincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libMADworld_a_AR = $(AR) $(ARFLAGS)
libMADworld_a_LIBADD =
am__objects_1 =
am_libMADworld_a_OBJECTS = worldstuff.$(OBJEXT) redirectio.$(OBJEXT) \
	archive_type_names.$(OBJEXT) debug.$(OBJEXT) print.$(OBJEXT) \
	lookup3.$(OBJEXT) worldrmi.$(OBJEXT) safempi.$(OBJEXT) \
	worldpapi.$(OBJEXT) worldref.$(OBJEXT) worldam.$(OBJEXT) \
	worldprofile.$(OBJEXT) worldthread.$(OBJEXT) \
	worldtask.$(OBJEXT) worldgop.$(OBJEXT) \
	deferred_cleanup.$(OBJEXT) worlddep.$(OBJEXT) \
	worldmutex.$(OBJEXT) binfsar.$(OBJEXT) worldmem.$(OBJEXT) \
	textfsar.$(OBJEXT) $(am__objects_1)
libMADworld_a_OBJECTS = $(am_libMADworld_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_array_test_OBJECTS = array_test-array_test.$(OBJEXT)
array_test_OBJECTS = $(am_array_test_OBJECTS)
am__DEPENDENCIES_1 =
array_test_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libMADworld.a
array_test_LINK = $(CXXLD) $(array_test_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_functional_test_OBJECTS =  \
	functional_test-functional_test.$(OBJEXT)
functional_test_OBJECTS = $(am_functional_test_OBJECTS)
functional_test_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libMADworld.a
functional_test_LINK = $(CXXLD) $(functional_test_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_gtest_example_OBJECTS = gtest_example-gtest_example.$(OBJEXT)
gtest_example_OBJECTS = $(am_gtest_example_OBJECTS)
gtest_example_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libMADworld.a
gtest_example_LINK = $(CXXLD) $(gtest_example_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_helloworld_OBJECTS = helloworld.$(OBJEXT)
helloworld_OBJECTS = $(am_helloworld_OBJECTS)
helloworld_DEPENDENCIES = libMADworld.a
am_objexample_OBJECTS = objexample.$(OBJEXT)
objexample_OBJECTS = $(am_objexample_OBJECTS)
objexample_DEPENDENCIES = libMADworld.a
am_objexample2_OBJECTS = objexample2.$(OBJEXT)
objexample2_OBJECTS = $(am_objexample2_OBJECTS)
objexample2_DEPENDENCIES = libMADworld.a
am_qtest_OBJECTS = qtest.$(OBJEXT)
qtest_OBJECTS = $(am_qtest_OBJECTS)
qtest_DEPENDENCIES = libMADworld.a
am_taskexample_OBJECTS = taskexample.$(OBJEXT)
taskexample_OBJECTS = $(am_taskexample_OBJECTS)
taskexample_DEPENDENCIES = libMADworld.a
am_testatomicint_OBJECTS = testatomicint.$(OBJEXT)
testatomicint_OBJECTS = $(am_testatomicint_OBJECTS)
testatomicint_DEPENDENCIES = libMADworld.a
am_testdc_OBJECTS = testdc.$(OBJEXT)
testdc_OBJECTS = $(am_testdc_OBJECTS)
testdc_DEPENDENCIES = libMADworld.a
am_testhashdc_OBJECTS = testhashdc.$(OBJEXT)
testhashdc_OBJECTS = $(am_testhashdc_OBJECTS)
testhashdc_DEPENDENCIES = libMADworld.a
am_testhashthreaded_OBJECTS = testhashthreaded.$(OBJEXT)
testhashthreaded_OBJECTS = $(am_testhashthreaded_OBJECTS)
testhashthreaded_DEPENDENCIES = libMADworld.a
am_testprof_OBJECTS = testprof.$(OBJEXT)
testprof_OBJECTS = $(am_testprof_OBJECTS)
testprof_DEPENDENCIES = libMADworld.a
am_world_OBJECTS = world.$(OBJEXT)
world_OBJECTS = $(am_world_OBJECTS)
world_DEPENDENCIES = libMADworld.a
am_worldprofile_test_OBJECTS = worldprofile_test.$(OBJEXT)
worldprofile_test_OBJECTS = $(am_worldprofile_test_OBJECTS)
worldprofile_test_DEPENDENCIES = libMADworld.a
am_worldptr_test_OBJECTS = worldptr_test-worldptr_test.$(OBJEXT)
worldptr_test_OBJECTS = $(am_worldptr_test_OBJECTS)
worldptr_test_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libMADworld.a
worldptr_test_LINK = $(CXXLD) $(worldptr_test_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_worldreduce_test_OBJECTS =  \
	worldreduce_test-worldreduce_test.$(OBJEXT)
worldreduce_test_OBJECTS = $(am_worldreduce_test_OBJECTS)
worldreduce_test_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libMADworld.a
worldreduce_test_LINK = $(CXXLD) $(worldreduce_test_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_worldref_test_OBJECTS = worldref_test-worldref_test.$(OBJEXT)
worldref_test_OBJECTS = $(am_worldref_test_OBJECTS)
worldref_test_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) libMADworld.a
worldref_test_LINK = $(CXXLD) $(worldref_test_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libMADworld_a_SOURCES) $(array_test_SOURCES) \
	$(functional_test_SOURCES) $(gtest_example_SOURCES) \
	$(helloworld_SOURCES) $(objexample_SOURCES) \
	$(objexample2_SOURCES) $(qtest_SOURCES) $(taskexample_SOURCES) \
	$(testatomicint_SOURCES) $(testdc_SOURCES) \
	$(testhashdc_SOURCES) $(testhashthreaded_SOURCES) \
	$(testprof_SOURCES) $(world_SOURCES) \
	$(worldprofile_test_SOURCES) $(worldptr_test_SOURCES) \
	$(worldreduce_test_SOURCES) $(worldref_test_SOURCES)
DIST_SOURCES = $(libMADworld_a_SOURCES) $(array_test_SOURCES) \
	$(functional_test_SOURCES) $(gtest_example_SOURCES) \
	$(helloworld_SOURCES) $(objexample_SOURCES) \
	$(objexample2_SOURCES) $(qtest_SOURCES) $(taskexample_SOURCES) \
	$(testatomicint_SOURCES) $(testdc_SOURCES) \
	$(testhashdc_SOURCES) $(testhashthreaded_SOURCES) \
	$(testprof_SOURCES) $(world_SOURCES) \
	$(worldprofile_test_SOURCES) $(worldptr_test_SOURCES) \
	$(worldreduce_test_SOURCES) $(worldref_test_SOURCES)
thisincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(thisinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run tar
AUTOCONF = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run automake-1.10
AWK = awk
CC = mpicc
CCAS = mpicc
CCASDEPMODE = depmode=gcc3
CCASFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CCDEPMODE = depmode=gcc3
CFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CPP = mpicc -E
CPPFLAGS = 
CXX = mpicxx
CXXCPP = mpicxx -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = 
DOXYGEN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GDB = gdb
GREP = /usr/bin/grep
GTEST_CPPFLAGS = 
GTEST_CXXFLAGS = 
GTEST_LDFLAGS = 
GTEST_LIBS = 
HAVE_DOT = NO
HAVE_DOXYGEN = NO
HAVE_LATEX = NO
HAVE_PDFLATEX = NO
HAVE_SED = YES
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX = 
LDFLAGS = 
LIBOBJS =  ${LIBOBJDIR}error$U.o
LIBS = -llapack -lblas
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}error$U.lo
MAKEINFO = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run makeinfo
MKDIR_P = ../../../config/install-sh -c -d
MPICC = mpicc
MPICXX = mpicxx
OBJEXT = o
PACKAGE = madness
PACKAGE_BUGREPORT = http://code.google.com/p/m-a-d-n-e-s-s
PACKAGE_NAME = madness
PACKAGE_STRING = madness 0.9
PACKAGE_TARNAME = madness
PACKAGE_VERSION = 0.9
PATH_SEPARATOR = :
PDFLATEX = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.9
XTERM = xterm
abs_builddir = /Users/masaaki/psi4/madness/src/lib/world
abs_srcdir = /Users/masaaki/psi4/madness/src/lib/world
abs_top_builddir = /Users/masaaki/psi4/madness
abs_top_srcdir = /Users/masaaki/psi4/madness
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin11.0.0
build_alias = 
build_cpu = x86_64
build_os = darwin11.0.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin11.0.0
host_alias = 
host_cpu = x86_64
host_os = darwin11.0.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/masaaki/psi4/madness/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/psi4
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../../..
top_srcdir = ../../..

# Define paths for includes (note convention #include <dir/file.h>)
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src/lib  -I$(top_srcdir)/src/apps -I$(top_builddir)/include

# Define directories holding libraries and variables for corresponding libraries
LIBWORLDDIR = $(top_builddir)/src/lib/world
LIBTENSORDIR = $(top_builddir)/src/lib/tensor
LIBLINALGDIR = $(top_builddir)/src/lib/linalg
LIBMISCDIR = $(top_builddir)/src/lib/misc
LIBMRADIR = $(top_builddir)/src/lib/mra
LIBTINYXMLDIR = $(top_builddir)/src/lib/tinyxml
LIBMUPARSERDIR = $(top_builddir)/src/lib/muParser
LIBWORLD = $(LIBWORLDDIR)/libMADworld.a
LIBTENSOR = $(LIBTENSORDIR)/libMADtensor.a
LIBLINALG = $(LIBLINALGDIR)/libMADlinalg.a
LIBMISC = $(LIBMISCDIR)/libMADmisc.a
LIBMRA = $(LIBMRADIR)/libMADmra.a
LIBTINYXML = $(LIBTINYXMLDIR)/libMADtinyxml.a
LIBMUPARSER = $(LIBMUPARSERDIR)/libMADmuparser.a

# Most scientific/numeric applications will link against these libraries
MRALIBS = $(LIBMRA) $(LIBLINALG) $(LIBTENSOR) $(LIBMISC) $(LIBMUPARSER) $(LIBTINYXML) $(LIBWORLD) 
lib_LIBRARIES = libMADworld.a
thisincludedir = $(includedir)/world
thisinclude_HEADERS = archive.h print.h worldam.h worldfut.h worldmpi.h \
	worldtask.h array.h sharedptr.h worldgop.h worldobj.h bufar.h nodefaults.h \
	typestuff.h enable_if.h worlddep.h worldhash.h worldref.h worldtypes.h \
	dqueue.h parar.h vecar.h worldexc.h worldmem.h worldser.h worldthread.h \
	worldrmi.h safempi.h worldpapi.h worldmutex.h print_seq.h worldhashmap.h \
	worldrange.h atomicint.h posixmem.h worldptr.h deferred_cleanup.h world.h \
	worldprofile.h worldtime.h binfsar.h mpiar.h textfsar.h worlddc.h \
	deferred_deleter.h scopedptr.h worldreduce.h worldtask.h taskfn.h make_task.h \
	functional.h 

array_test_SOURCES = array_test.cc
array_test_CPPFLAGS = $(GTEST_CPPFLAGS) $(AM_CPPFLAGS)
array_test_CXXFLAGS = $(GTEST_CXXFLAGS) $(AM_CXXFLAGS)
array_test_LDADD = $(GTEST_LDFLAGS) $(GTEST_LIBS) libMADworld.a
gtest_example_SOURCES = gtest_example.cc
gtest_example_CPPFLAGS = $(GTEST_CPPFLAGS) $(AM_CPPFLAGS)
gtest_example_CXXFLAGS = $(GTEST_CXXFLAGS) $(AM_CXXFLAGS)
gtest_example_LDADD = $(GTEST_LDFLAGS) $(GTEST_LIBS) libMADworld.a
worldptr_test_SOURCES = worldptr_test.cc
worldptr_test_CPPFLAGS = $(GTEST_CPPFLAGS) $(AM_CPPFLAGS)
worldptr_test_CXXFLAGS = $(GTEST_CXXFLAGS) $(AM_CXXFLAGS)
worldptr_test_LDADD = $(GTEST_LDFLAGS) $(GTEST_LIBS) libMADworld.a
worldref_test_SOURCES = worldref_test.cc
worldref_test_CPPFLAGS = $(GTEST_CPPFLAGS) $(AM_CPPFLAGS)
worldref_test_CXXFLAGS = $(GTEST_CXXFLAGS) $(AM_CXXFLAGS)
worldref_test_LDADD = $(GTEST_LDFLAGS) $(GTEST_LIBS) libMADworld.a
worldreduce_test_SOURCES = worldreduce_test.cc
worldreduce_test_CPPFLAGS = $(GTEST_CPPFLAGS) $(AM_CPPFLAGS)
worldreduce_test_CXXFLAGS = $(GTEST_CXXFLAGS) $(AM_CXXFLAGS)
worldreduce_test_LDADD = $(GTEST_LDFLAGS) $(GTEST_LIBS) libMADworld.a
functional_test_SOURCES = functional_test.cc
functional_test_CPPFLAGS = $(GTEST_CPPFLAGS) $(AM_CPPFLAGS)
functional_test_CXXFLAGS = $(GTEST_CXXFLAGS) $(AM_CXXFLAGS)
functional_test_LDADD = $(GTEST_LDFLAGS) $(GTEST_LIBS) libMADworld.a
testprof_SOURCES = testprof.cc
testprof_LDADD = libMADworld.a
testhashdc_SOURCES = testhashdc.cc
testhashdc_LDADD = libMADworld.a
taskexample_SOURCES = taskexample.cc
taskexample_LDADD = libMADworld.a
helloworld_SOURCES = helloworld.cc
helloworld_LDADD = libMADworld.a
testatomicint_SOURCES = testatomicint.cc
testatomicint_LDADD = libMADworld.a
objexample_SOURCES = objexample.cc
objexample_LDADD = libMADworld.a
objexample2_SOURCES = objexample2.cc
objexample2_LDADD = libMADworld.a
testdc_SOURCES = testdc.cc
testdc_LDADD = libMADworld.a
testhashthreaded_SOURCES = testhashthreaded.cc
testhashthreaded_LDADD = libMADworld.a
qtest_SOURCES = qtest.cc
qtest_LDADD = libMADworld.a
world_SOURCES = world.cc
world_LDADD = libMADworld.a
worldprofile_test_SOURCES = worldprofile_test.cc
worldprofile_test_LDADD = libMADworld.a
libMADworld_a_SOURCES = worldstuff.cc redirectio.cc archive_type_names.cc \
	debug.cc print.cc lookup3.c worldrmi.cc safempi.cc worldpapi.cc \
	worldref.cc worldam.cc worldprofile.cc worldthread.cc worldtask.cc \
	worldgop.cc deferred_cleanup.cc worlddep.cc worldmutex.cc binfsar.cc \
	worldmem.cc textfsar.cc \
	$(thisinclude_HEADERS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/MakeGlobal.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/lib/world/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/lib/world/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libMADworld.a: $(libMADworld_a_OBJECTS) $(libMADworld_a_DEPENDENCIES) 
	-rm -f libMADworld.a
	$(libMADworld_a_AR) libMADworld.a $(libMADworld_a_OBJECTS) $(libMADworld_a_LIBADD)
	$(RANLIB) libMADworld.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
array_test$(EXEEXT): $(array_test_OBJECTS) $(array_test_DEPENDENCIES) 
	@rm -f array_test$(EXEEXT)
	$(array_test_LINK) $(array_test_OBJECTS) $(array_test_LDADD) $(LIBS)
functional_test$(EXEEXT): $(functional_test_OBJECTS) $(functional_test_DEPENDENCIES) 
	@rm -f functional_test$(EXEEXT)
	$(functional_test_LINK) $(functional_test_OBJECTS) $(functional_test_LDADD) $(LIBS)
gtest_example$(EXEEXT): $(gtest_example_OBJECTS) $(gtest_example_DEPENDENCIES) 
	@rm -f gtest_example$(EXEEXT)
	$(gtest_example_LINK) $(gtest_example_OBJECTS) $(gtest_example_LDADD) $(LIBS)
helloworld$(EXEEXT): $(helloworld_OBJECTS) $(helloworld_DEPENDENCIES) 
	@rm -f helloworld$(EXEEXT)
	$(CXXLINK) $(helloworld_OBJECTS) $(helloworld_LDADD) $(LIBS)
objexample$(EXEEXT): $(objexample_OBJECTS) $(objexample_DEPENDENCIES) 
	@rm -f objexample$(EXEEXT)
	$(CXXLINK) $(objexample_OBJECTS) $(objexample_LDADD) $(LIBS)
objexample2$(EXEEXT): $(objexample2_OBJECTS) $(objexample2_DEPENDENCIES) 
	@rm -f objexample2$(EXEEXT)
	$(CXXLINK) $(objexample2_OBJECTS) $(objexample2_LDADD) $(LIBS)
qtest$(EXEEXT): $(qtest_OBJECTS) $(qtest_DEPENDENCIES) 
	@rm -f qtest$(EXEEXT)
	$(CXXLINK) $(qtest_OBJECTS) $(qtest_LDADD) $(LIBS)
taskexample$(EXEEXT): $(taskexample_OBJECTS) $(taskexample_DEPENDENCIES) 
	@rm -f taskexample$(EXEEXT)
	$(CXXLINK) $(taskexample_OBJECTS) $(taskexample_LDADD) $(LIBS)
testatomicint$(EXEEXT): $(testatomicint_OBJECTS) $(testatomicint_DEPENDENCIES) 
	@rm -f testatomicint$(EXEEXT)
	$(CXXLINK) $(testatomicint_OBJECTS) $(testatomicint_LDADD) $(LIBS)
testdc$(EXEEXT): $(testdc_OBJECTS) $(testdc_DEPENDENCIES) 
	@rm -f testdc$(EXEEXT)
	$(CXXLINK) $(testdc_OBJECTS) $(testdc_LDADD) $(LIBS)
testhashdc$(EXEEXT): $(testhashdc_OBJECTS) $(testhashdc_DEPENDENCIES) 
	@rm -f testhashdc$(EXEEXT)
	$(CXXLINK) $(testhashdc_OBJECTS) $(testhashdc_LDADD) $(LIBS)
testhashthreaded$(EXEEXT): $(testhashthreaded_OBJECTS) $(testhashthreaded_DEPENDENCIES) 
	@rm -f testhashthreaded$(EXEEXT)
	$(CXXLINK) $(testhashthreaded_OBJECTS) $(testhashthreaded_LDADD) $(LIBS)
testprof$(EXEEXT): $(testprof_OBJECTS) $(testprof_DEPENDENCIES) 
	@rm -f testprof$(EXEEXT)
	$(CXXLINK) $(testprof_OBJECTS) $(testprof_LDADD) $(LIBS)
world$(EXEEXT): $(world_OBJECTS) $(world_DEPENDENCIES) 
	@rm -f world$(EXEEXT)
	$(CXXLINK) $(world_OBJECTS) $(world_LDADD) $(LIBS)
worldprofile_test$(EXEEXT): $(worldprofile_test_OBJECTS) $(worldprofile_test_DEPENDENCIES) 
	@rm -f worldprofile_test$(EXEEXT)
	$(CXXLINK) $(worldprofile_test_OBJECTS) $(worldprofile_test_LDADD) $(LIBS)
worldptr_test$(EXEEXT): $(worldptr_test_OBJECTS) $(worldptr_test_DEPENDENCIES) 
	@rm -f worldptr_test$(EXEEXT)
	$(worldptr_test_LINK) $(worldptr_test_OBJECTS) $(worldptr_test_LDADD) $(LIBS)
worldreduce_test$(EXEEXT): $(worldreduce_test_OBJECTS) $(worldreduce_test_DEPENDENCIES) 
	@rm -f worldreduce_test$(EXEEXT)
	$(worldreduce_test_LINK) $(worldreduce_test_OBJECTS) $(worldreduce_test_LDADD) $(LIBS)
worldref_test$(EXEEXT): $(worldref_test_OBJECTS) $(worldref_test_DEPENDENCIES) 
	@rm -f worldref_test$(EXEEXT)
	$(worldref_test_LINK) $(worldref_test_OBJECTS) $(worldref_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/archive_type_names.Po
include ./$(DEPDIR)/array_test-array_test.Po
include ./$(DEPDIR)/binfsar.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/deferred_cleanup.Po
include ./$(DEPDIR)/functional_test-functional_test.Po
include ./$(DEPDIR)/gtest_example-gtest_example.Po
include ./$(DEPDIR)/helloworld.Po
include ./$(DEPDIR)/lookup3.Po
include ./$(DEPDIR)/objexample.Po
include ./$(DEPDIR)/objexample2.Po
include ./$(DEPDIR)/print.Po
include ./$(DEPDIR)/qtest.Po
include ./$(DEPDIR)/redirectio.Po
include ./$(DEPDIR)/safempi.Po
include ./$(DEPDIR)/taskexample.Po
include ./$(DEPDIR)/testatomicint.Po
include ./$(DEPDIR)/testdc.Po
include ./$(DEPDIR)/testhashdc.Po
include ./$(DEPDIR)/testhashthreaded.Po
include ./$(DEPDIR)/testprof.Po
include ./$(DEPDIR)/textfsar.Po
include ./$(DEPDIR)/world.Po
include ./$(DEPDIR)/worldam.Po
include ./$(DEPDIR)/worlddep.Po
include ./$(DEPDIR)/worldgop.Po
include ./$(DEPDIR)/worldmem.Po
include ./$(DEPDIR)/worldmutex.Po
include ./$(DEPDIR)/worldpapi.Po
include ./$(DEPDIR)/worldprofile.Po
include ./$(DEPDIR)/worldprofile_test.Po
include ./$(DEPDIR)/worldptr_test-worldptr_test.Po
include ./$(DEPDIR)/worldreduce_test-worldreduce_test.Po
include ./$(DEPDIR)/worldref.Po
include ./$(DEPDIR)/worldref_test-worldref_test.Po
include ./$(DEPDIR)/worldrmi.Po
include ./$(DEPDIR)/worldstuff.Po
include ./$(DEPDIR)/worldtask.Po
include ./$(DEPDIR)/worldthread.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

array_test-array_test.o: array_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(array_test_CPPFLAGS) $(CPPFLAGS) $(array_test_CXXFLAGS) $(CXXFLAGS) -MT array_test-array_test.o -MD -MP -MF $(DEPDIR)/array_test-array_test.Tpo -c -o array_test-array_test.o `test -f 'array_test.cc' || echo '$(srcdir)/'`array_test.cc
	mv -f $(DEPDIR)/array_test-array_test.Tpo $(DEPDIR)/array_test-array_test.Po
#	source='array_test.cc' object='array_test-array_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(array_test_CPPFLAGS) $(CPPFLAGS) $(array_test_CXXFLAGS) $(CXXFLAGS) -c -o array_test-array_test.o `test -f 'array_test.cc' || echo '$(srcdir)/'`array_test.cc

array_test-array_test.obj: array_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(array_test_CPPFLAGS) $(CPPFLAGS) $(array_test_CXXFLAGS) $(CXXFLAGS) -MT array_test-array_test.obj -MD -MP -MF $(DEPDIR)/array_test-array_test.Tpo -c -o array_test-array_test.obj `if test -f 'array_test.cc'; then $(CYGPATH_W) 'array_test.cc'; else $(CYGPATH_W) '$(srcdir)/array_test.cc'; fi`
	mv -f $(DEPDIR)/array_test-array_test.Tpo $(DEPDIR)/array_test-array_test.Po
#	source='array_test.cc' object='array_test-array_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(array_test_CPPFLAGS) $(CPPFLAGS) $(array_test_CXXFLAGS) $(CXXFLAGS) -c -o array_test-array_test.obj `if test -f 'array_test.cc'; then $(CYGPATH_W) 'array_test.cc'; else $(CYGPATH_W) '$(srcdir)/array_test.cc'; fi`

functional_test-functional_test.o: functional_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(functional_test_CPPFLAGS) $(CPPFLAGS) $(functional_test_CXXFLAGS) $(CXXFLAGS) -MT functional_test-functional_test.o -MD -MP -MF $(DEPDIR)/functional_test-functional_test.Tpo -c -o functional_test-functional_test.o `test -f 'functional_test.cc' || echo '$(srcdir)/'`functional_test.cc
	mv -f $(DEPDIR)/functional_test-functional_test.Tpo $(DEPDIR)/functional_test-functional_test.Po
#	source='functional_test.cc' object='functional_test-functional_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(functional_test_CPPFLAGS) $(CPPFLAGS) $(functional_test_CXXFLAGS) $(CXXFLAGS) -c -o functional_test-functional_test.o `test -f 'functional_test.cc' || echo '$(srcdir)/'`functional_test.cc

functional_test-functional_test.obj: functional_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(functional_test_CPPFLAGS) $(CPPFLAGS) $(functional_test_CXXFLAGS) $(CXXFLAGS) -MT functional_test-functional_test.obj -MD -MP -MF $(DEPDIR)/functional_test-functional_test.Tpo -c -o functional_test-functional_test.obj `if test -f 'functional_test.cc'; then $(CYGPATH_W) 'functional_test.cc'; else $(CYGPATH_W) '$(srcdir)/functional_test.cc'; fi`
	mv -f $(DEPDIR)/functional_test-functional_test.Tpo $(DEPDIR)/functional_test-functional_test.Po
#	source='functional_test.cc' object='functional_test-functional_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(functional_test_CPPFLAGS) $(CPPFLAGS) $(functional_test_CXXFLAGS) $(CXXFLAGS) -c -o functional_test-functional_test.obj `if test -f 'functional_test.cc'; then $(CYGPATH_W) 'functional_test.cc'; else $(CYGPATH_W) '$(srcdir)/functional_test.cc'; fi`

gtest_example-gtest_example.o: gtest_example.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtest_example_CPPFLAGS) $(CPPFLAGS) $(gtest_example_CXXFLAGS) $(CXXFLAGS) -MT gtest_example-gtest_example.o -MD -MP -MF $(DEPDIR)/gtest_example-gtest_example.Tpo -c -o gtest_example-gtest_example.o `test -f 'gtest_example.cc' || echo '$(srcdir)/'`gtest_example.cc
	mv -f $(DEPDIR)/gtest_example-gtest_example.Tpo $(DEPDIR)/gtest_example-gtest_example.Po
#	source='gtest_example.cc' object='gtest_example-gtest_example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtest_example_CPPFLAGS) $(CPPFLAGS) $(gtest_example_CXXFLAGS) $(CXXFLAGS) -c -o gtest_example-gtest_example.o `test -f 'gtest_example.cc' || echo '$(srcdir)/'`gtest_example.cc

gtest_example-gtest_example.obj: gtest_example.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtest_example_CPPFLAGS) $(CPPFLAGS) $(gtest_example_CXXFLAGS) $(CXXFLAGS) -MT gtest_example-gtest_example.obj -MD -MP -MF $(DEPDIR)/gtest_example-gtest_example.Tpo -c -o gtest_example-gtest_example.obj `if test -f 'gtest_example.cc'; then $(CYGPATH_W) 'gtest_example.cc'; else $(CYGPATH_W) '$(srcdir)/gtest_example.cc'; fi`
	mv -f $(DEPDIR)/gtest_example-gtest_example.Tpo $(DEPDIR)/gtest_example-gtest_example.Po
#	source='gtest_example.cc' object='gtest_example-gtest_example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gtest_example_CPPFLAGS) $(CPPFLAGS) $(gtest_example_CXXFLAGS) $(CXXFLAGS) -c -o gtest_example-gtest_example.obj `if test -f 'gtest_example.cc'; then $(CYGPATH_W) 'gtest_example.cc'; else $(CYGPATH_W) '$(srcdir)/gtest_example.cc'; fi`

worldptr_test-worldptr_test.o: worldptr_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldptr_test_CPPFLAGS) $(CPPFLAGS) $(worldptr_test_CXXFLAGS) $(CXXFLAGS) -MT worldptr_test-worldptr_test.o -MD -MP -MF $(DEPDIR)/worldptr_test-worldptr_test.Tpo -c -o worldptr_test-worldptr_test.o `test -f 'worldptr_test.cc' || echo '$(srcdir)/'`worldptr_test.cc
	mv -f $(DEPDIR)/worldptr_test-worldptr_test.Tpo $(DEPDIR)/worldptr_test-worldptr_test.Po
#	source='worldptr_test.cc' object='worldptr_test-worldptr_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldptr_test_CPPFLAGS) $(CPPFLAGS) $(worldptr_test_CXXFLAGS) $(CXXFLAGS) -c -o worldptr_test-worldptr_test.o `test -f 'worldptr_test.cc' || echo '$(srcdir)/'`worldptr_test.cc

worldptr_test-worldptr_test.obj: worldptr_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldptr_test_CPPFLAGS) $(CPPFLAGS) $(worldptr_test_CXXFLAGS) $(CXXFLAGS) -MT worldptr_test-worldptr_test.obj -MD -MP -MF $(DEPDIR)/worldptr_test-worldptr_test.Tpo -c -o worldptr_test-worldptr_test.obj `if test -f 'worldptr_test.cc'; then $(CYGPATH_W) 'worldptr_test.cc'; else $(CYGPATH_W) '$(srcdir)/worldptr_test.cc'; fi`
	mv -f $(DEPDIR)/worldptr_test-worldptr_test.Tpo $(DEPDIR)/worldptr_test-worldptr_test.Po
#	source='worldptr_test.cc' object='worldptr_test-worldptr_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldptr_test_CPPFLAGS) $(CPPFLAGS) $(worldptr_test_CXXFLAGS) $(CXXFLAGS) -c -o worldptr_test-worldptr_test.obj `if test -f 'worldptr_test.cc'; then $(CYGPATH_W) 'worldptr_test.cc'; else $(CYGPATH_W) '$(srcdir)/worldptr_test.cc'; fi`

worldreduce_test-worldreduce_test.o: worldreduce_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldreduce_test_CPPFLAGS) $(CPPFLAGS) $(worldreduce_test_CXXFLAGS) $(CXXFLAGS) -MT worldreduce_test-worldreduce_test.o -MD -MP -MF $(DEPDIR)/worldreduce_test-worldreduce_test.Tpo -c -o worldreduce_test-worldreduce_test.o `test -f 'worldreduce_test.cc' || echo '$(srcdir)/'`worldreduce_test.cc
	mv -f $(DEPDIR)/worldreduce_test-worldreduce_test.Tpo $(DEPDIR)/worldreduce_test-worldreduce_test.Po
#	source='worldreduce_test.cc' object='worldreduce_test-worldreduce_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldreduce_test_CPPFLAGS) $(CPPFLAGS) $(worldreduce_test_CXXFLAGS) $(CXXFLAGS) -c -o worldreduce_test-worldreduce_test.o `test -f 'worldreduce_test.cc' || echo '$(srcdir)/'`worldreduce_test.cc

worldreduce_test-worldreduce_test.obj: worldreduce_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldreduce_test_CPPFLAGS) $(CPPFLAGS) $(worldreduce_test_CXXFLAGS) $(CXXFLAGS) -MT worldreduce_test-worldreduce_test.obj -MD -MP -MF $(DEPDIR)/worldreduce_test-worldreduce_test.Tpo -c -o worldreduce_test-worldreduce_test.obj `if test -f 'worldreduce_test.cc'; then $(CYGPATH_W) 'worldreduce_test.cc'; else $(CYGPATH_W) '$(srcdir)/worldreduce_test.cc'; fi`
	mv -f $(DEPDIR)/worldreduce_test-worldreduce_test.Tpo $(DEPDIR)/worldreduce_test-worldreduce_test.Po
#	source='worldreduce_test.cc' object='worldreduce_test-worldreduce_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldreduce_test_CPPFLAGS) $(CPPFLAGS) $(worldreduce_test_CXXFLAGS) $(CXXFLAGS) -c -o worldreduce_test-worldreduce_test.obj `if test -f 'worldreduce_test.cc'; then $(CYGPATH_W) 'worldreduce_test.cc'; else $(CYGPATH_W) '$(srcdir)/worldreduce_test.cc'; fi`

worldref_test-worldref_test.o: worldref_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldref_test_CPPFLAGS) $(CPPFLAGS) $(worldref_test_CXXFLAGS) $(CXXFLAGS) -MT worldref_test-worldref_test.o -MD -MP -MF $(DEPDIR)/worldref_test-worldref_test.Tpo -c -o worldref_test-worldref_test.o `test -f 'worldref_test.cc' || echo '$(srcdir)/'`worldref_test.cc
	mv -f $(DEPDIR)/worldref_test-worldref_test.Tpo $(DEPDIR)/worldref_test-worldref_test.Po
#	source='worldref_test.cc' object='worldref_test-worldref_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldref_test_CPPFLAGS) $(CPPFLAGS) $(worldref_test_CXXFLAGS) $(CXXFLAGS) -c -o worldref_test-worldref_test.o `test -f 'worldref_test.cc' || echo '$(srcdir)/'`worldref_test.cc

worldref_test-worldref_test.obj: worldref_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldref_test_CPPFLAGS) $(CPPFLAGS) $(worldref_test_CXXFLAGS) $(CXXFLAGS) -MT worldref_test-worldref_test.obj -MD -MP -MF $(DEPDIR)/worldref_test-worldref_test.Tpo -c -o worldref_test-worldref_test.obj `if test -f 'worldref_test.cc'; then $(CYGPATH_W) 'worldref_test.cc'; else $(CYGPATH_W) '$(srcdir)/worldref_test.cc'; fi`
	mv -f $(DEPDIR)/worldref_test-worldref_test.Tpo $(DEPDIR)/worldref_test-worldref_test.Po
#	source='worldref_test.cc' object='worldref_test-worldref_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(worldref_test_CPPFLAGS) $(CPPFLAGS) $(worldref_test_CXXFLAGS) $(CXXFLAGS) -c -o worldref_test-worldref_test.obj `if test -f 'worldref_test.cc'; then $(CYGPATH_W) 'worldref_test.cc'; else $(CYGPATH_W) '$(srcdir)/worldref_test.cc'; fi`
install-thisincludeHEADERS: $(thisinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(thisincludedir)" || $(MKDIR_P) "$(DESTDIR)$(thisincludedir)"
	@list='$(thisinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(thisincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(thisincludedir)/$$f'"; \
	  $(thisincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(thisincludedir)/$$f"; \
	done

uninstall-thisincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(thisinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(thisincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(thisincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(thisincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-thisincludeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES \
	uninstall-thisincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip \
	install-thisincludeHEADERS installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLIBRARIES uninstall-thisincludeHEADERS


libraries:	$(lib_LIBRARIES)
	for dir in $(SUBDIRS) ; do $(MAKE) -C $$dir $@ ; done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
