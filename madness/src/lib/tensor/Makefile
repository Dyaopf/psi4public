# Makefile.in generated by automake 1.10 from Makefile.am.
# src/lib/tensor/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/madness
pkglibdir = $(libdir)/madness
pkgincludedir = $(includedir)/madness
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin11.0.0
host_triplet = x86_64-apple-darwin11.0.0
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(thisinclude_HEADERS) $(top_srcdir)/config/MakeGlobal.am
bin_PROGRAMS = test$(EXEEXT) oldtest$(EXEEXT) test_mtxmq$(EXEEXT) \
	test_Zmtxmq$(EXEEXT) jimkernel$(EXEEXT) test_scott$(EXEEXT)
am__append_1 = mtxmq_asm.S mtxm_gen.h genmtxm.py
#am__append_2 = mtxmq_asm.S mtxm_gen.h genmtxm.py
subdir = src/lib/tensor
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/config/acx_check_compiler_flags.m4 \
	$(top_srcdir)/config/acx_check_tr1.m4 \
	$(top_srcdir)/config/acx_crayxt.m4 \
	$(top_srcdir)/config/acx_detect_cxx.m4 \
	$(top_srcdir)/config/acx_enable_debugging.m4 \
	$(top_srcdir)/config/acx_enable_optimal.m4 \
	$(top_srcdir)/config/acx_enable_optimization.m4 \
	$(top_srcdir)/config/acx_enable_warn.m4 \
	$(top_srcdir)/config/acx_fortran_symbols.m4 \
	$(top_srcdir)/config/acx_ibmbgp.m4 \
	$(top_srcdir)/config/acx_mac.m4 \
	$(top_srcdir)/config/acx_mpi.m4 \
	$(top_srcdir)/config/acx_posix_memalign.m4 \
	$(top_srcdir)/config/acx_std_abs.m4 \
	$(top_srcdir)/config/acx_unqal_stat_decl.m4 \
	$(top_srcdir)/config/acx_with_boost.m4 \
	$(top_srcdir)/config/acx_with_eigen3.m4 \
	$(top_srcdir)/config/acx_with_google_perf.m4 \
	$(top_srcdir)/config/acx_with_google_test.m4 \
	$(top_srcdir)/config/acx_with_libunwind.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/madness_config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(thisincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libMADtensor_a_AR = $(AR) $(ARFLAGS)
libMADtensor_a_LIBADD =
am__libMADtensor_a_SOURCES_DIST = tensor.cc tensoriter.cc \
	basetensor.cc mtxmq.cc vmath.cc aligned.h mxm.h tensorexcept.h \
	tensoriter_spec.h type_data.h basetensor.h tensor.h \
	tensor_macros.h vector_factory.h mtxmq.h slice.h tensoriter.h \
	tensor_spec.h vmath.h mtxmq_asm.S mtxm_gen.h genmtxm.py
am__objects_1 = mtxmq_asm.$(OBJEXT)
#am__objects_2 = mtxmq_asm.$(OBJEXT)
am_libMADtensor_a_OBJECTS = tensor.$(OBJEXT) tensoriter.$(OBJEXT) \
	basetensor.$(OBJEXT) mtxmq.$(OBJEXT) vmath.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
libMADtensor_a_OBJECTS = $(am_libMADtensor_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_jimkernel_OBJECTS = jimkernel.$(OBJEXT)
jimkernel_OBJECTS = $(am_jimkernel_OBJECTS)
jimkernel_DEPENDENCIES = libMADtensor.a $(LIBMISC) $(LIBWORLD)
am_oldtest_OBJECTS = oldtest.$(OBJEXT)
oldtest_OBJECTS = $(am_oldtest_OBJECTS)
oldtest_DEPENDENCIES = libMADtensor.a $(LIBMISC) $(LIBWORLD)
am_test_OBJECTS = test.$(OBJEXT)
test_OBJECTS = $(am_test_OBJECTS)
test_DEPENDENCIES = libMADtensor.a $(LIBMISC) $(LIBWORLD)
am_test_Zmtxmq_OBJECTS = test_Zmtxmq-test_Zmtxmq.$(OBJEXT)
test_Zmtxmq_OBJECTS = $(am_test_Zmtxmq_OBJECTS)
test_Zmtxmq_DEPENDENCIES = libMADtensor.a $(LIBWORLD)
am_test_mtxmq_OBJECTS = test_mtxmq-test_mtxmq.$(OBJEXT)
test_mtxmq_OBJECTS = $(am_test_mtxmq_OBJECTS)
test_mtxmq_DEPENDENCIES = libMADtensor.a $(LIBWORLD)
am_test_scott_OBJECTS = test_scott.$(OBJEXT)
test_scott_OBJECTS = $(am_test_scott_OBJECTS)
test_scott_DEPENDENCIES = libMADtensor.a $(LIBMISC) $(LIBWORLD)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libMADtensor_a_SOURCES) $(jimkernel_SOURCES) \
	$(oldtest_SOURCES) $(test_SOURCES) $(test_Zmtxmq_SOURCES) \
	$(test_mtxmq_SOURCES) $(test_scott_SOURCES)
DIST_SOURCES = $(am__libMADtensor_a_SOURCES_DIST) $(jimkernel_SOURCES) \
	$(oldtest_SOURCES) $(test_SOURCES) $(test_Zmtxmq_SOURCES) \
	$(test_mtxmq_SOURCES) $(test_scott_SOURCES)
thisincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(thisinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run tar
AUTOCONF = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run automake-1.10
AWK = awk
CC = mpicc
CCAS = mpicc
CCASDEPMODE = depmode=gcc3
CCASFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CCDEPMODE = depmode=gcc3
CFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CPP = mpicc -E
CPPFLAGS = 
CXX = mpicxx
CXXCPP = mpicxx -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O3 -Wall -Wno-strict-aliasing -Wno-deprecated
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = 
DOXYGEN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GDB = gdb
GREP = /usr/bin/grep
GTEST_CPPFLAGS = 
GTEST_CXXFLAGS = 
GTEST_LDFLAGS = 
GTEST_LIBS = 
HAVE_DOT = NO
HAVE_DOXYGEN = NO
HAVE_LATEX = NO
HAVE_PDFLATEX = NO
HAVE_SED = YES
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX = 
LDFLAGS = 
LIBOBJS =  ${LIBOBJDIR}error$U.o
LIBS = -llapack -lblas
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}error$U.lo
MAKEINFO = ${SHELL} /Users/masaaki/psi4/madness/config/missing --run makeinfo
MKDIR_P = ../../../config/install-sh -c -d
MPICC = mpicc
MPICXX = mpicxx
OBJEXT = o
PACKAGE = madness
PACKAGE_BUGREPORT = http://code.google.com/p/m-a-d-n-e-s-s
PACKAGE_NAME = madness
PACKAGE_STRING = madness 0.9
PACKAGE_TARNAME = madness
PACKAGE_VERSION = 0.9
PATH_SEPARATOR = :
PDFLATEX = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.9
XTERM = xterm
abs_builddir = /Users/masaaki/psi4/madness/src/lib/tensor
abs_srcdir = /Users/masaaki/psi4/madness/src/lib/tensor
abs_top_builddir = /Users/masaaki/psi4/madness
abs_top_srcdir = /Users/masaaki/psi4/madness
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin11.0.0
build_alias = 
build_cpu = x86_64
build_os = darwin11.0.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin11.0.0
host_alias = 
host_cpu = x86_64
host_os = darwin11.0.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/masaaki/psi4/madness/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/psi4
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../../..
top_srcdir = ../../..

# Define paths for includes (note convention #include <dir/file.h>)
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src/lib  -I$(top_srcdir)/src/apps -I$(top_builddir)/include

# Define directories holding libraries and variables for corresponding libraries
LIBWORLDDIR = $(top_builddir)/src/lib/world
LIBTENSORDIR = $(top_builddir)/src/lib/tensor
LIBLINALGDIR = $(top_builddir)/src/lib/linalg
LIBMISCDIR = $(top_builddir)/src/lib/misc
LIBMRADIR = $(top_builddir)/src/lib/mra
LIBTINYXMLDIR = $(top_builddir)/src/lib/tinyxml
LIBMUPARSERDIR = $(top_builddir)/src/lib/muParser
LIBWORLD = $(LIBWORLDDIR)/libMADworld.a
LIBTENSOR = $(LIBTENSORDIR)/libMADtensor.a
LIBLINALG = $(LIBLINALGDIR)/libMADlinalg.a
LIBMISC = $(LIBMISCDIR)/libMADmisc.a
LIBMRA = $(LIBMRADIR)/libMADmra.a
LIBTINYXML = $(LIBTINYXMLDIR)/libMADtinyxml.a
LIBMUPARSER = $(LIBMUPARSERDIR)/libMADmuparser.a

# Most scientific/numeric applications will link against these libraries
MRALIBS = $(LIBMRA) $(LIBLINALG) $(LIBTENSOR) $(LIBMISC) $(LIBMUPARSER) $(LIBTINYXML) $(LIBWORLD) 
lib_LIBRARIES = libMADtensor.a
thisincludedir = $(includedir)/tensor
thisinclude_HEADERS = aligned.h     mxm.h     tensorexcept.h  tensoriter_spec.h  type_data.h \
                        basetensor.h  tensor.h        tensor_macros.h    vector_factory.h \
                        mtxmq.h     slice.h   tensoriter.h    tensor_spec.h vmath.h

test_SOURCES = test.cc
test_LDADD = libMADtensor.a $(LIBMISC) $(LIBWORLD) 
oldtest_SOURCES = oldtest.cc
oldtest_LDADD = libMADtensor.a $(LIBMISC) $(LIBWORLD) 
test_scott_SOURCES = test_scott.cc
test_scott_LDADD = libMADtensor.a $(LIBMISC) $(LIBWORLD) 
test_mtxmq_SOURCES = test_mtxmq.cc
test_mtxmq_LDADD = libMADtensor.a $(LIBWORLD)
test_mtxmq_CPPFLAGS = $(AM_CPPFLAGS) -DTIME_DGEMM
jimkernel_SOURCES = jimkernel.cc
jimkernel_LDADD = libMADtensor.a $(LIBMISC) $(LIBWORLD)
test_Zmtxmq_SOURCES = test_Zmtxmq.cc
test_Zmtxmq_LDADD = libMADtensor.a $(LIBWORLD)
test_Zmtxmq_CPPFLAGS = $(AM_CPPFLAGS) -DTIME_DGEMM
libMADtensor_a_SOURCES = tensor.cc tensoriter.cc basetensor.cc \
	mtxmq.cc vmath.cc aligned.h mxm.h tensorexcept.h \
	tensoriter_spec.h type_data.h basetensor.h tensor.h \
	tensor_macros.h vector_factory.h mtxmq.h slice.h tensoriter.h \
	tensor_spec.h vmath.h $(am__append_1) $(am__append_2)
all: all-am

.SUFFIXES:
.SUFFIXES: .S .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/MakeGlobal.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/lib/tensor/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/lib/tensor/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libMADtensor.a: $(libMADtensor_a_OBJECTS) $(libMADtensor_a_DEPENDENCIES) 
	-rm -f libMADtensor.a
	$(libMADtensor_a_AR) libMADtensor.a $(libMADtensor_a_OBJECTS) $(libMADtensor_a_LIBADD)
	$(RANLIB) libMADtensor.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
jimkernel$(EXEEXT): $(jimkernel_OBJECTS) $(jimkernel_DEPENDENCIES) 
	@rm -f jimkernel$(EXEEXT)
	$(CXXLINK) $(jimkernel_OBJECTS) $(jimkernel_LDADD) $(LIBS)
oldtest$(EXEEXT): $(oldtest_OBJECTS) $(oldtest_DEPENDENCIES) 
	@rm -f oldtest$(EXEEXT)
	$(CXXLINK) $(oldtest_OBJECTS) $(oldtest_LDADD) $(LIBS)
test$(EXEEXT): $(test_OBJECTS) $(test_DEPENDENCIES) 
	@rm -f test$(EXEEXT)
	$(CXXLINK) $(test_OBJECTS) $(test_LDADD) $(LIBS)
test_Zmtxmq$(EXEEXT): $(test_Zmtxmq_OBJECTS) $(test_Zmtxmq_DEPENDENCIES) 
	@rm -f test_Zmtxmq$(EXEEXT)
	$(CXXLINK) $(test_Zmtxmq_OBJECTS) $(test_Zmtxmq_LDADD) $(LIBS)
test_mtxmq$(EXEEXT): $(test_mtxmq_OBJECTS) $(test_mtxmq_DEPENDENCIES) 
	@rm -f test_mtxmq$(EXEEXT)
	$(CXXLINK) $(test_mtxmq_OBJECTS) $(test_mtxmq_LDADD) $(LIBS)
test_scott$(EXEEXT): $(test_scott_OBJECTS) $(test_scott_DEPENDENCIES) 
	@rm -f test_scott$(EXEEXT)
	$(CXXLINK) $(test_scott_OBJECTS) $(test_scott_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/basetensor.Po
include ./$(DEPDIR)/jimkernel.Po
include ./$(DEPDIR)/mtxmq.Po
include ./$(DEPDIR)/mtxmq_asm.Po
include ./$(DEPDIR)/oldtest.Po
include ./$(DEPDIR)/tensor.Po
include ./$(DEPDIR)/tensoriter.Po
include ./$(DEPDIR)/test.Po
include ./$(DEPDIR)/test_Zmtxmq-test_Zmtxmq.Po
include ./$(DEPDIR)/test_mtxmq-test_mtxmq.Po
include ./$(DEPDIR)/test_scott.Po
include ./$(DEPDIR)/vmath.Po

.S.o:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

test_Zmtxmq-test_Zmtxmq.o: test_Zmtxmq.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_Zmtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_Zmtxmq-test_Zmtxmq.o -MD -MP -MF $(DEPDIR)/test_Zmtxmq-test_Zmtxmq.Tpo -c -o test_Zmtxmq-test_Zmtxmq.o `test -f 'test_Zmtxmq.cc' || echo '$(srcdir)/'`test_Zmtxmq.cc
	mv -f $(DEPDIR)/test_Zmtxmq-test_Zmtxmq.Tpo $(DEPDIR)/test_Zmtxmq-test_Zmtxmq.Po
#	source='test_Zmtxmq.cc' object='test_Zmtxmq-test_Zmtxmq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_Zmtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_Zmtxmq-test_Zmtxmq.o `test -f 'test_Zmtxmq.cc' || echo '$(srcdir)/'`test_Zmtxmq.cc

test_Zmtxmq-test_Zmtxmq.obj: test_Zmtxmq.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_Zmtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_Zmtxmq-test_Zmtxmq.obj -MD -MP -MF $(DEPDIR)/test_Zmtxmq-test_Zmtxmq.Tpo -c -o test_Zmtxmq-test_Zmtxmq.obj `if test -f 'test_Zmtxmq.cc'; then $(CYGPATH_W) 'test_Zmtxmq.cc'; else $(CYGPATH_W) '$(srcdir)/test_Zmtxmq.cc'; fi`
	mv -f $(DEPDIR)/test_Zmtxmq-test_Zmtxmq.Tpo $(DEPDIR)/test_Zmtxmq-test_Zmtxmq.Po
#	source='test_Zmtxmq.cc' object='test_Zmtxmq-test_Zmtxmq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_Zmtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_Zmtxmq-test_Zmtxmq.obj `if test -f 'test_Zmtxmq.cc'; then $(CYGPATH_W) 'test_Zmtxmq.cc'; else $(CYGPATH_W) '$(srcdir)/test_Zmtxmq.cc'; fi`

test_mtxmq-test_mtxmq.o: test_mtxmq.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_mtxmq-test_mtxmq.o -MD -MP -MF $(DEPDIR)/test_mtxmq-test_mtxmq.Tpo -c -o test_mtxmq-test_mtxmq.o `test -f 'test_mtxmq.cc' || echo '$(srcdir)/'`test_mtxmq.cc
	mv -f $(DEPDIR)/test_mtxmq-test_mtxmq.Tpo $(DEPDIR)/test_mtxmq-test_mtxmq.Po
#	source='test_mtxmq.cc' object='test_mtxmq-test_mtxmq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_mtxmq-test_mtxmq.o `test -f 'test_mtxmq.cc' || echo '$(srcdir)/'`test_mtxmq.cc

test_mtxmq-test_mtxmq.obj: test_mtxmq.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_mtxmq-test_mtxmq.obj -MD -MP -MF $(DEPDIR)/test_mtxmq-test_mtxmq.Tpo -c -o test_mtxmq-test_mtxmq.obj `if test -f 'test_mtxmq.cc'; then $(CYGPATH_W) 'test_mtxmq.cc'; else $(CYGPATH_W) '$(srcdir)/test_mtxmq.cc'; fi`
	mv -f $(DEPDIR)/test_mtxmq-test_mtxmq.Tpo $(DEPDIR)/test_mtxmq-test_mtxmq.Po
#	source='test_mtxmq.cc' object='test_mtxmq-test_mtxmq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mtxmq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_mtxmq-test_mtxmq.obj `if test -f 'test_mtxmq.cc'; then $(CYGPATH_W) 'test_mtxmq.cc'; else $(CYGPATH_W) '$(srcdir)/test_mtxmq.cc'; fi`
install-thisincludeHEADERS: $(thisinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(thisincludedir)" || $(MKDIR_P) "$(DESTDIR)$(thisincludedir)"
	@list='$(thisinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(thisincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(thisincludedir)/$$f'"; \
	  $(thisincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(thisincludedir)/$$f"; \
	done

uninstall-thisincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(thisinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(thisincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(thisincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(thisincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-thisincludeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES \
	uninstall-thisincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip \
	install-thisincludeHEADERS installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLIBRARIES uninstall-thisincludeHEADERS

mtxmq_asm.o:	mtxmq_asm.S mtxm_gen.h
	$(CC) $(CXXFLAGS) $(CPPFLAGS) $(AM_CPPFLAGS) -I. -DX86_64 -c -o $@ $<

mtxm_gen.h:	genmtxm.py 
	python $(srcdir)/genmtxm.py > $@
#mtxmq_asm.o:	mtxmq_asm.S mtxm_gen.h
#	$(CC) $(CXXFLAGS) $(CPPFLAGS) $(AM_CPPFLAGS) -I. -DX86_32 -c -o $@ $<

#mtxm_gen.h:	genmtxm.py 
#	python $(srcdir)/genmtxm.py > $@

tensoriter_spec.h tensor_spec.h:	tempspec.py
	python $(srcdir)/tempspec.py

#TESTPROGS = test test_mtxmq
#TEST1SRC = test.o
#TEST2SRC = test_mtxmq.o
#test_mtxmq:     test_mtxmq.o mtxmq.o mtxmq_asm.o
#        $(CXX) -o $@  $^

libraries:	$(lib_LIBRARIES)
	for dir in $(SUBDIRS) ; do $(MAKE) -C $$dir $@ ; done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
