****************************************************************************
22 January 2008: CDS

I took out 
#include <unistd.h>
#include <sys/time.h>

from structs.h -- seems ok w/out it.
****************************************************************************
23 January 2008: CDS

I'm going to extract the remaining wreadw/wwritw calls over the next
few days.  As I'm working on this, I notice that there's a lot of
leftover junk having to do with file offsets that we used before we
had the convenience of keyword access with libpsio.  This code is (a)
confusing and (b) not used anymore.  This might be a good opportunity
to remove it to keep the code maintained in good shape.  Specifically,
a lot of this has to do with zero_blocks.  Now zero_blocks tries to
keep up with what blocks are zero and avoid unnecessary computations.
But it *also* tries to avoid unnecessary disk storage in MPn calculations.
The former is in and works and is all ok (and is NOT turned off
by Parameters.zero_blocks = 0).  The latter is what is controlled
by Parameters.zero_blocks, and it is all messed up and obsolete (I assume).
Let me try an MPn calculation with it turned on and see if I even
get the same answer.

Hm, I can't even do it, b/c file51 isn't opened properly for the old I/O.
While this could be fixed, I think it would be better to scrap this
Parameters.zero_blocks feature since it is essentially never used,
doesn't work now, and complicates the code.  I think it could be
re-implemented better if it became of interest again.

Before I go ripping this stuff out (as well as the presumably obsolete
file_offsets junk), let me make a couple more test cases that might
check the fancier versions of CIvect I/O; non-A1 open-shells states would
be perfect, as well as different icore options.

Ok, added several new test cases.  I then ripped out all I/O offset
and I/O-related zero block stuff.  Amazingly, all test cases seem
to pass.  This is actually somewhat surprising...

*************************************************************************
6 March 2015: DGAS

First pass at unified naming scheme for CI, MCSCF, and beyond

Per irrep:
frozen_docc    - Absolutely frozen core orbital.
rstr_docc      - Can have rotations, no excitations from.
inactive_docc  - rstr_docc + frozen_docc
----- start CI active
docc           - Doubly occupied orbitals.
socc           - Singly occupied orbitals.
uocc           - Excitations into this space.
----- end CI active
inactive_uocc  - rstr_uocc + frozen_uocc
rstr_uocc      - Can have rotations, no excitations into.
frozen_uocc    - Absolutely frozen virtual orbital.

Totals:
num_fzc_orbs - sum(closed_docc)
num_cor_orbs - sum(rstr_docc)
num_ci_cor_orbs - Set to zero, always was- help CDS!
num_vir_orbs - sum(rstr_uocc)
num_fzv_orbs - sum(closed_uocc)


*************************************************************************
10 March 2015: CDS and DGAS


CalcInfo.num_fzc_orbs - sum(frozen_docc)
CalcInfo.num_rstr_orbs - sum(rstr_docc)
CalcInfo.num_inactive_cor_orbs - sum(rstr_docc)
CalcInfo.num_expl_cor_orbs - Core orbitals in CI. Not being used at the moment, for the future.
