/**********************************************************
* wS_X_functional.cc: definitions for wS_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wS_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wS_X_Functional::wS_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wS_X";
    description_ = "Range-Corrected Slater LSDA";
    citation_ = "Null";

    double omega = 2.9999999999999999E-01;
    params_.push_back(make_pair("omega",omega));

    is_gga_ = false;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wS_X_Functional::~wS_X_Functional()
{
}
void wS_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t99045 = 1.0/pow(rho_a[index],1.0/3.0);
            double t99046 = 1.0/(omega*omega);
            double t99047 = pow(rho_a[index],2.0/3.0);
            double t99048 = exp(t99046*t99047*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t99045*(erf((pow(rho_a[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)+omega*t99045*(t99048-(omega* \
               omega)*1.0/pow(rho_a[index],2.0/3.0)*(t99048-1.0)*(3.774660826274405E31/1.146943242142761E33))*(6.143826841858749E15/ \
               2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15) \
               ;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t99050 = pow(rho_a[index],1.0/3.0);
            double t99051 = 1.0/pow(rho_a[index],1.0/3.0);
            double t99052 = 1.0/(omega*omega);
            double t99053 = pow(rho_a[index],2.0/3.0);
            double t99055 = t99052*t99053*(5.734716210713804E32/3.774660826274405E31);
            double t99054 = exp(-t99055);
            double t99056 = omega*omega;
            double t99057 = t99054-1.0;
            double t99058 = 1.0/pow(rho_a[index],2.0/3.0);
            double t99065 = t99056*t99057*t99058*(3.774660826274405E31/1.146943242142761E33);
            double t99059 = t99054-t99065;
            double t99060 = 1.0/omega;
            double t99061 = 1.0/pow(rho_a[index],4.0/3.0);
            double t99062 = t99050*t99060*(2.394726750740845E16/6.143826841858749E15);
            double t99063 = erf(t99062);
            double t99064 = t99063*(3.991211251234741E15/2.251799813685248E15);
            double t99066 = omega*t99051*t99059*(6.143826841858749E15/2.394726750740845E16);
            double t99067 = t99064+t99066;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t99051*(omega*t99051*((t99054*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t99056*t99057*(1.258220275424802E31/5.734716210713804E32)-t99051*t99052* \
               t99054*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16)-omega* \
               t99061*t99059*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t99060*t99054* \
               t99058*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31)-omega* \
               t99061*t99067*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t99050*(omega*t99051*t99067*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t99071 = 1.0/pow(rho_a[index],1.0/3.0);
            double t99072 = 1.0/pow(rho_a[index],2.0/3.0);
            double t99073 = 1.0/(omega*omega);
            double t99074 = pow(rho_a[index],2.0/3.0);
            double t99076 = t99073*t99074*(5.734716210713804E32/3.774660826274405E31);
            double t99075 = exp(-t99076);
            double t99077 = omega*omega;
            double t99078 = t99075-1.0;
            double t99088 = t99072*t99077*t99078*(3.774660826274405E31/1.146943242142761E33);
            double t99079 = t99075-t99088;
            double t99080 = 1.0/rho_a[index];
            double t99081 = 1.0/sqrt(3.141592653589793);
            double t99082 = 1.0/omega;
            double t99083 = 1.0/pow(rho_a[index],5.0/3.0);
            double t99084 = 1.0/pow(rho_a[index],4.0/3.0);
            double t99085 = t99080*t99075*(1.0/3.0);
            double t99086 = t99083*t99077*t99078*(1.258220275424802E31/5.734716210713804E32);
            double t99096 = t99071*t99073*t99075*(1.146943242142761E33/1.132398247882321E32);
            double t99087 = t99085+t99086-t99096;
            double t99089 = 1.0/pow(rho_a[index],7.0/3.0);
            double t99090 = pow(rho_a[index],1.0/3.0);
            double t99091 = t99090*t99082*(2.394726750740845E16/6.143826841858749E15);
            double t99092 = erf(t99091);
            double t99093 = t99092*(3.991211251234741E15/2.251799813685248E15);
            double t99094 = omega*t99071*t99079*(6.143826841858749E15/2.394726750740845E16);
            double t99095 = t99093+t99094;
            double t99097 = omega*t99071*t99087*(6.143826841858749E15/2.394726750740845E16);
            double t99098 = t99072*t99081*t99082*t99075*(1.493415679873386E30/3.242500344799677E29);
            double t99099 = t99097+t99098-omega*t99084*t99079*(2.047942280619583E15/2.394726750740845E16);
            v_rho_a_rho_a_[index] = t99090*(omega*t99071*t99099*(8.582343170721935E30/1.348111312786328E31)-omega* \
               t99084*t99095*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_a[index],4.0/3.0)*(omega* \
               t99071*(omega*t99071*(1.0/(rho_a[index]*rho_a[index])*t99075*(5.0/9.0)-1.0/(omega*omega*omega*omega) \
               *t99072*t99075*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/3.0)*t99077*t99078* \
               (2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16)+omega*t99084* \
               t99087*(2.047942280619583E15/1.197363375370422E16)-omega*t99079*t99089*(2.047942280619583E15/1.796045063055634E16) \
               +t99081*t99082*t99083*t99075*(1.493415679873386E30/4.863750517199516E29)+1.0/(omega*omega*omega)*t99080* \
               t99081*t99075*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/1.348111312786328E31) \
               +omega*t99084*t99099*(2.860781056907312E30/6.740556563931642E30)-omega*t99095*t99089*(2.860781056907312E30/ \
               1.011083484589746E31))*(1.0/2.0)+t99072*(omega*t99071*t99095*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wS_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t98696 = 1.0/pow(rho_a[index],1.0/3.0);
            double t98697 = 1.0/(omega*omega);
            double t98698 = pow(rho_a[index],2.0/3.0);
            double t98699 = exp(t98697*t98698*(-5.734716210713804E32/3.774660826274405E31));
            double t98700 = 1.0/omega;
            double t98701 = 1.0/pow(rho_b[index],1.0/3.0);
            double t98702 = omega*omega;
            double t98703 = pow(rho_b[index],2.0/3.0);
            double t98704 = exp(t98703*t98697*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_b[index],4.0/3.0)*(omega*t98701*(erf(pow(rho_b[index],1.0/3.0)*t98700* \
               (2.394726750740845E16/6.143826841858749E15))*(3.991211251234741E15/2.251799813685248E15)+omega*t98701* \
               (t98704-1.0/pow(rho_b[index],2.0/3.0)*t98702*(t98704-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               )*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/ \
               2.251799813685248E15)*(1.0/2.0)+pow(rho_a[index],4.0/3.0)*(omega*t98696*(erf(pow(rho_a[index],1.0/ \
               3.0)*t98700*(2.394726750740845E16/6.143826841858749E15))*(3.991211251234741E15/2.251799813685248E15) \
               +omega*t98696*(t98699-1.0/pow(rho_a[index],2.0/3.0)*t98702*(t98699-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               )*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/ \
               2.251799813685248E15)*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t98922 = 1.0/pow(rho_a[index],1.0/3.0);
            double t98923 = 1.0/(omega*omega);
            double t98924 = pow(rho_a[index],2.0/3.0);
            double t98925 = exp(t98923*t98924*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t98922*(erf((pow(rho_a[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)+omega*t98922*(t98925-(omega* \
               omega)*1.0/pow(rho_a[index],2.0/3.0)*(t98925-1.0)*(3.774660826274405E31/1.146943242142761E33))*(6.143826841858749E15/ \
               2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15) \
               *(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t98835 = 1.0/pow(rho_b[index],1.0/3.0);
            double t98836 = 1.0/(omega*omega);
            double t98837 = pow(rho_b[index],2.0/3.0);
            double t98838 = exp(t98836*t98837*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_b[index],4.0/3.0)*(omega*t98835*(erf((pow(rho_b[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)+omega*t98835*(t98838-(omega* \
               omega)*1.0/pow(rho_b[index],2.0/3.0)*(t98838-1.0)*(3.774660826274405E31/1.146943242142761E33))*(6.143826841858749E15/ \
               2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15) \
               *(1.0/2.0);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t98706 = pow(rho_a[index],1.0/3.0);
            double t98707 = 1.0/pow(rho_a[index],1.0/3.0);
            double t98708 = 1.0/(omega*omega);
            double t98709 = pow(rho_a[index],2.0/3.0);
            double t98711 = t98708*t98709*(5.734716210713804E32/3.774660826274405E31);
            double t98710 = exp(-t98711);
            double t98712 = omega*omega;
            double t98713 = t98710-1.0;
            double t98714 = 1.0/pow(rho_a[index],2.0/3.0);
            double t98721 = t98712*t98713*t98714*(3.774660826274405E31/1.146943242142761E33);
            double t98715 = t98710-t98721;
            double t98716 = 1.0/omega;
            double t98717 = 1.0/pow(rho_a[index],4.0/3.0);
            double t98718 = t98706*t98716*(2.394726750740845E16/6.143826841858749E15);
            double t98719 = erf(t98718);
            double t98720 = t98719*(3.991211251234741E15/2.251799813685248E15);
            double t98722 = omega*t98715*t98707*(6.143826841858749E15/2.394726750740845E16);
            double t98723 = t98720+t98722;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t98707*(omega*t98707*((t98710*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t98712*t98713*(1.258220275424802E31/5.734716210713804E32)-t98710*t98707* \
               t98708*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16)-omega* \
               t98715*t98717*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t98710*t98714* \
               t98716*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31)-omega* \
               t98723*t98717*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t98706*(omega*t98723*t98707*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t98927 = pow(rho_a[index],1.0/3.0);
            double t98928 = 1.0/pow(rho_a[index],1.0/3.0);
            double t98929 = 1.0/(omega*omega);
            double t98930 = pow(rho_a[index],2.0/3.0);
            double t98932 = t98930*t98929*(5.734716210713804E32/3.774660826274405E31);
            double t98931 = exp(-t98932);
            double t98933 = omega*omega;
            double t98934 = t98931-1.0;
            double t98935 = 1.0/pow(rho_a[index],2.0/3.0);
            double t98942 = t98933*t98934*t98935*(3.774660826274405E31/1.146943242142761E33);
            double t98936 = t98931-t98942;
            double t98937 = 1.0/omega;
            double t98938 = 1.0/pow(rho_a[index],4.0/3.0);
            double t98939 = t98927*t98937*(2.394726750740845E16/6.143826841858749E15);
            double t98940 = erf(t98939);
            double t98941 = t98940*(3.991211251234741E15/2.251799813685248E15);
            double t98943 = omega*t98936*t98928*(6.143826841858749E15/2.394726750740845E16);
            double t98944 = t98941+t98943;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t98928*(omega*t98928*((t98931*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t98933*t98934*(1.258220275424802E31/5.734716210713804E32)-t98931*t98928* \
               t98929*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16)-omega* \
               t98936*t98938*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t98931*t98935* \
               t98937*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31)-omega* \
               t98944*t98938*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t98927*(omega*t98944*t98928*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t98725 = pow(rho_b[index],1.0/3.0);
            double t98726 = 1.0/pow(rho_b[index],1.0/3.0);
            double t98727 = 1.0/(omega*omega);
            double t98728 = pow(rho_b[index],2.0/3.0);
            double t98730 = t98727*t98728*(5.734716210713804E32/3.774660826274405E31);
            double t98729 = exp(-t98730);
            double t98731 = omega*omega;
            double t98732 = t98729-1.0;
            double t98733 = 1.0/pow(rho_b[index],2.0/3.0);
            double t98740 = t98731*t98732*t98733*(3.774660826274405E31/1.146943242142761E33);
            double t98734 = -t98740+t98729;
            double t98735 = 1.0/omega;
            double t98736 = 1.0/pow(rho_b[index],4.0/3.0);
            double t98737 = t98725*t98735*(2.394726750740845E16/6.143826841858749E15);
            double t98738 = erf(t98737);
            double t98739 = t98738*(3.991211251234741E15/2.251799813685248E15);
            double t98741 = omega*t98734*t98726*(6.143826841858749E15/2.394726750740845E16);
            double t98742 = t98741+t98739;
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t98726*(omega*t98726*((t98729*(1.0/3.0))/rho_b[index]+ \
               1.0/pow(rho_b[index],5.0/3.0)*t98731*t98732*(1.258220275424802E31/5.734716210713804E32)-t98726*t98727* \
               t98729*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16)-omega* \
               t98734*t98736*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t98733*t98735* \
               t98729*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31)-omega* \
               t98742*t98736*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t98725*(omega*t98742*t98726*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t98841 = pow(rho_b[index],1.0/3.0);
            double t98842 = 1.0/pow(rho_b[index],1.0/3.0);
            double t98843 = 1.0/(omega*omega);
            double t98844 = pow(rho_b[index],2.0/3.0);
            double t98846 = t98843*t98844*(5.734716210713804E32/3.774660826274405E31);
            double t98845 = exp(-t98846);
            double t98847 = omega*omega;
            double t98848 = t98845-1.0;
            double t98849 = 1.0/pow(rho_b[index],2.0/3.0);
            double t98856 = t98847*t98848*t98849*(3.774660826274405E31/1.146943242142761E33);
            double t98850 = t98845-t98856;
            double t98851 = 1.0/omega;
            double t98852 = 1.0/pow(rho_b[index],4.0/3.0);
            double t98853 = t98841*t98851*(2.394726750740845E16/6.143826841858749E15);
            double t98854 = erf(t98853);
            double t98855 = t98854*(3.991211251234741E15/2.251799813685248E15);
            double t98857 = omega*t98850*t98842*(6.143826841858749E15/2.394726750740845E16);
            double t98858 = t98855+t98857;
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t98842*(omega*t98842*((t98845*(1.0/3.0))/rho_b[index]+ \
               1.0/pow(rho_b[index],5.0/3.0)*t98847*t98848*(1.258220275424802E31/5.734716210713804E32)-t98842*t98843* \
               t98845*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16)-omega* \
               t98850*t98852*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t98851*t98845* \
               t98849*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31)-omega* \
               t98852*t98858*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t98841*(omega*t98842*t98858*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t98749 = 1.0/pow(rho_a[index],1.0/3.0);
            double t98750 = 1.0/pow(rho_a[index],2.0/3.0);
            double t98751 = 1.0/(omega*omega);
            double t98752 = pow(rho_a[index],2.0/3.0);
            double t98754 = t98751*t98752*(5.734716210713804E32/3.774660826274405E31);
            double t98753 = exp(-t98754);
            double t98755 = omega*omega;
            double t98756 = t98753-1.0;
            double t98766 = t98750*t98755*t98756*(3.774660826274405E31/1.146943242142761E33);
            double t98757 = t98753-t98766;
            double t98758 = 1.0/rho_a[index];
            double t98759 = 1.0/sqrt(3.141592653589793);
            double t98760 = 1.0/omega;
            double t98761 = 1.0/pow(rho_a[index],5.0/3.0);
            double t98762 = 1.0/pow(rho_a[index],4.0/3.0);
            double t98763 = t98753*t98758*(1.0/3.0);
            double t98764 = t98761*t98755*t98756*(1.258220275424802E31/5.734716210713804E32);
            double t98774 = t98751*t98753*t98749*(1.146943242142761E33/1.132398247882321E32);
            double t98765 = t98763+t98764-t98774;
            double t98767 = 1.0/pow(rho_a[index],7.0/3.0);
            double t98768 = pow(rho_a[index],1.0/3.0);
            double t98769 = t98760*t98768*(2.394726750740845E16/6.143826841858749E15);
            double t98770 = erf(t98769);
            double t98771 = t98770*(3.991211251234741E15/2.251799813685248E15);
            double t98772 = omega*t98757*t98749*(6.143826841858749E15/2.394726750740845E16);
            double t98773 = t98771+t98772;
            double t98775 = omega*t98765*t98749*(6.143826841858749E15/2.394726750740845E16);
            double t98776 = t98750*t98760*t98753*t98759*(1.493415679873386E30/3.242500344799677E29);
            double t98777 = t98775+t98776-omega*t98762*t98757*(2.047942280619583E15/2.394726750740845E16);
            v_rho_a_rho_a_[index] = t98768*(omega*t98762*t98773*(2.860781056907312E30/1.348111312786328E31)-omega* \
               t98749*t98777*(8.582343170721935E30/1.348111312786328E31))*(-4.0/3.0)-pow(rho_a[index],4.0/3.0)*(omega* \
               t98749*(omega*t98749*(1.0/(rho_a[index]*rho_a[index])*t98753*(5.0/9.0)-1.0/(omega*omega*omega*omega) \
               *t98750*t98753*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/3.0)*t98755*t98756* \
               (2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16)+omega*t98762* \
               t98765*(2.047942280619583E15/1.197363375370422E16)-omega*t98757*t98767*(2.047942280619583E15/1.796045063055634E16) \
               +t98760*t98761*t98753*t98759*(1.493415679873386E30/4.863750517199516E29)+1.0/(omega*omega*omega)*t98753* \
               t98758*t98759*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/1.348111312786328E31) \
               +omega*t98762*t98777*(2.860781056907312E30/6.740556563931642E30)-omega*t98773*t98767*(2.860781056907312E30/ \
               1.011083484589746E31))*(1.0/2.0)+t98750*(omega*t98773*t98749*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t98952 = 1.0/pow(rho_a[index],1.0/3.0);
            double t98953 = 1.0/pow(rho_a[index],2.0/3.0);
            double t98954 = 1.0/(omega*omega);
            double t98955 = pow(rho_a[index],2.0/3.0);
            double t98957 = t98954*t98955*(5.734716210713804E32/3.774660826274405E31);
            double t98956 = exp(-t98957);
            double t98958 = omega*omega;
            double t98959 = t98956-1.0;
            double t98969 = t98953*t98958*t98959*(3.774660826274405E31/1.146943242142761E33);
            double t98960 = t98956-t98969;
            double t98961 = 1.0/rho_a[index];
            double t98962 = 1.0/sqrt(3.141592653589793);
            double t98963 = 1.0/omega;
            double t98964 = 1.0/pow(rho_a[index],5.0/3.0);
            double t98965 = 1.0/pow(rho_a[index],4.0/3.0);
            double t98966 = t98961*t98956*(1.0/3.0);
            double t98967 = t98964*t98958*t98959*(1.258220275424802E31/5.734716210713804E32);
            double t98977 = t98952*t98954*t98956*(1.146943242142761E33/1.132398247882321E32);
            double t98968 = t98966+t98967-t98977;
            double t98970 = 1.0/pow(rho_a[index],7.0/3.0);
            double t98971 = pow(rho_a[index],1.0/3.0);
            double t98972 = t98971*t98963*(2.394726750740845E16/6.143826841858749E15);
            double t98973 = erf(t98972);
            double t98974 = t98973*(3.991211251234741E15/2.251799813685248E15);
            double t98975 = omega*t98960*t98952*(6.143826841858749E15/2.394726750740845E16);
            double t98976 = t98974+t98975;
            double t98978 = omega*t98952*t98968*(6.143826841858749E15/2.394726750740845E16);
            double t98979 = t98953*t98962*t98963*t98956*(1.493415679873386E30/3.242500344799677E29);
            double t98980 = t98978+t98979-omega*t98960*t98965*(2.047942280619583E15/2.394726750740845E16);
            v_rho_a_rho_a_[index] = t98971*(omega*t98952*t98980*(8.582343170721935E30/1.348111312786328E31)-omega* \
               t98965*t98976*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_a[index],4.0/3.0)*(omega* \
               t98952*(omega*t98952*(1.0/(rho_a[index]*rho_a[index])*t98956*(5.0/9.0)-1.0/(omega*omega*omega*omega) \
               *t98953*t98956*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/3.0)*t98958*t98959* \
               (2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16)-omega*t98960* \
               t98970*(2.047942280619583E15/1.796045063055634E16)+omega*t98965*t98968*(2.047942280619583E15/1.197363375370422E16) \
               +t98962*t98963*t98964*t98956*(1.493415679873386E30/4.863750517199516E29)+1.0/(omega*omega*omega)*t98961* \
               t98962*t98956*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/1.348111312786328E31) \
               +omega*t98980*t98965*(2.860781056907312E30/6.740556563931642E30)-omega*t98970*t98976*(2.860781056907312E30/ \
               1.011083484589746E31))*(1.0/2.0)+t98953*(omega*t98952*t98976*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t98780 = 1.0/pow(rho_b[index],1.0/3.0);
            double t98781 = 1.0/pow(rho_b[index],2.0/3.0);
            double t98782 = 1.0/(omega*omega);
            double t98783 = pow(rho_b[index],2.0/3.0);
            double t98785 = t98782*t98783*(5.734716210713804E32/3.774660826274405E31);
            double t98784 = exp(-t98785);
            double t98786 = omega*omega;
            double t98787 = t98784-1.0;
            double t98797 = t98781*t98786*t98787*(3.774660826274405E31/1.146943242142761E33);
            double t98788 = t98784-t98797;
            double t98789 = 1.0/rho_b[index];
            double t98790 = 1.0/sqrt(3.141592653589793);
            double t98791 = 1.0/omega;
            double t98792 = 1.0/pow(rho_b[index],5.0/3.0);
            double t98793 = 1.0/pow(rho_b[index],4.0/3.0);
            double t98794 = t98784*t98789*(1.0/3.0);
            double t98795 = t98792*t98786*t98787*(1.258220275424802E31/5.734716210713804E32);
            double t98805 = t98780*t98782*t98784*(1.146943242142761E33/1.132398247882321E32);
            double t98796 = -t98805+t98794+t98795;
            double t98798 = 1.0/pow(rho_b[index],7.0/3.0);
            double t98799 = pow(rho_b[index],1.0/3.0);
            double t98800 = t98791*t98799*(2.394726750740845E16/6.143826841858749E15);
            double t98801 = erf(t98800);
            double t98802 = t98801*(3.991211251234741E15/2.251799813685248E15);
            double t98803 = omega*t98780*t98788*(6.143826841858749E15/2.394726750740845E16);
            double t98804 = t98802+t98803;
            double t98806 = omega*t98780*t98796*(6.143826841858749E15/2.394726750740845E16);
            double t98807 = t98781*t98790*t98791*t98784*(1.493415679873386E30/3.242500344799677E29);
            double t98808 = t98806+t98807-omega*t98793*t98788*(2.047942280619583E15/2.394726750740845E16);
            v_rho_b_rho_b_[index] = t98799*(omega*t98804*t98793*(2.860781056907312E30/1.348111312786328E31)-omega* \
               t98780*t98808*(8.582343170721935E30/1.348111312786328E31))*(-4.0/3.0)-pow(rho_b[index],4.0/3.0)*(omega* \
               t98780*(omega*t98780*(1.0/(rho_b[index]*rho_b[index])*t98784*(5.0/9.0)-1.0/(omega*omega*omega*omega) \
               *t98781*t98784*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_b[index],8.0/3.0)*t98786*t98787* \
               (2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16)+omega*t98793* \
               t98796*(2.047942280619583E15/1.197363375370422E16)-omega*t98788*t98798*(2.047942280619583E15/1.796045063055634E16) \
               +t98790*t98791*t98792*t98784*(1.493415679873386E30/4.863750517199516E29)+1.0/(omega*omega*omega)*t98790* \
               t98784*t98789*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/1.348111312786328E31) \
               +omega*t98808*t98793*(2.860781056907312E30/6.740556563931642E30)-omega*t98804*t98798*(2.860781056907312E30/ \
               1.011083484589746E31))*(1.0/2.0)+t98781*(omega*t98804*t98780*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t98867 = 1.0/pow(rho_b[index],1.0/3.0);
            double t98868 = 1.0/pow(rho_b[index],2.0/3.0);
            double t98869 = 1.0/(omega*omega);
            double t98870 = pow(rho_b[index],2.0/3.0);
            double t98872 = t98870*t98869*(5.734716210713804E32/3.774660826274405E31);
            double t98871 = exp(-t98872);
            double t98873 = omega*omega;
            double t98874 = t98871-1.0;
            double t98884 = t98873*t98874*t98868*(3.774660826274405E31/1.146943242142761E33);
            double t98875 = t98871-t98884;
            double t98876 = 1.0/rho_b[index];
            double t98877 = 1.0/sqrt(3.141592653589793);
            double t98878 = 1.0/omega;
            double t98879 = 1.0/pow(rho_b[index],5.0/3.0);
            double t98880 = 1.0/pow(rho_b[index],4.0/3.0);
            double t98881 = t98871*t98876*(1.0/3.0);
            double t98882 = t98873*t98874*t98879*(1.258220275424802E31/5.734716210713804E32);
            double t98892 = t98871*t98867*t98869*(1.146943242142761E33/1.132398247882321E32);
            double t98883 = t98881+t98882-t98892;
            double t98885 = 1.0/pow(rho_b[index],7.0/3.0);
            double t98886 = pow(rho_b[index],1.0/3.0);
            double t98887 = t98886*t98878*(2.394726750740845E16/6.143826841858749E15);
            double t98888 = erf(t98887);
            double t98889 = t98888*(3.991211251234741E15/2.251799813685248E15);
            double t98890 = omega*t98875*t98867*(6.143826841858749E15/2.394726750740845E16);
            double t98891 = t98890+t98889;
            double t98893 = omega*t98883*t98867*(6.143826841858749E15/2.394726750740845E16);
            double t98894 = t98871*t98868*t98877*t98878*(1.493415679873386E30/3.242500344799677E29);
            double t98895 = t98893+t98894-omega*t98880*t98875*(2.047942280619583E15/2.394726750740845E16);
            v_rho_b_rho_b_[index] = t98886*(omega*t98880*t98891*(2.860781056907312E30/1.348111312786328E31)-omega* \
               t98867*t98895*(8.582343170721935E30/1.348111312786328E31))*(-4.0/3.0)-pow(rho_b[index],4.0/3.0)*(omega* \
               t98867*(omega*t98867*(1.0/(rho_b[index]*rho_b[index])*t98871*(5.0/9.0)-1.0/(omega*omega*omega*omega) \
               *t98871*t98868*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_b[index],8.0/3.0)*t98873*t98874* \
               (2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16)+omega*t98880* \
               t98883*(2.047942280619583E15/1.197363375370422E16)-omega*t98875*t98885*(2.047942280619583E15/1.796045063055634E16) \
               +t98871*t98877*t98878*t98879*(1.493415679873386E30/4.863750517199516E29)+1.0/(omega*omega*omega)*t98871* \
               t98876*t98877*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/1.348111312786328E31) \
               +omega*t98880*t98895*(2.860781056907312E30/6.740556563931642E30)-omega*t98891*t98885*(2.860781056907312E30/ \
               1.011083484589746E31))*(1.0/2.0)+t98868*(omega*t98891*t98867*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

