/**********************************************************
* B_X_functional.cc: definitions for B_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "B_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

B_X_Functional::B_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "B_X";
    description_ = "Becke Exchange (S+B88)";
    citation_ = "A.D. Becke, Phys. Rev. A, 38(6):3098-3100, 1988";

    double  = 0.0000000000000000E+00;
    params_.push_back(make_pair("",));
    double d = 4.1999999999999997E-03;
    params_.push_back(make_pair("d",d));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
B_X_Functional::~B_X_Functional()
{
}
void B_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double  = params_[0].second;
    double d = params_[1].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t125452 = sqrt(gamma_aa[index]);
            double t125453 = 1.0/pow(rho_a[index],4.0/3.0);
            functional_[index] = -pow(rho_a[index],4.0/3.0)*((d*gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0) \
               )/(d*t125452*t125453*log(t125452*t125453+sqrt((t125452*t125452)*(t125453*t125453)+1.0))*1.2E1+2.0) \
               +4.190715359480463E15/2.251799813685248E15);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t125455 = sqrt(gamma_aa[index]);
            double t125456 = 1.0/pow(rho_a[index],4.0/3.0);
            double t125457 = t125455*t125456;
            double t125458 = log(t125457+sqrt(t125457*t125457+1.0));
            double t125459 = d*t125455*t125456*t125458*1.2E1;
            double t125460 = t125459+2.0;
            double t125461 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t125462 = 1.0/pow(rho_a[index],8.0/3.0);
            double t125463 = 1.0/t125460;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d*gamma_aa[index]*t125461*t125463*(8.0/3.0)-d*gamma_aa[index]* \
               1.0/(t125460*t125460)*t125462*(d*1.0/pow(rho_a[index],7.0/3.0)*t125455*t125458*1.6E1+d*gamma_aa[index]* \
               t125461*1.0/sqrt(gamma_aa[index]*t125462+1.0)*1.6E1))*(1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]* \
               t125462*t125463+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t125465 = sqrt(gamma_aa[index]);
                double t125466 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125467 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125468 = t125465*t125466;
                double t125469 = log(t125468+sqrt(t125468*t125468+1.0));
                double t125470 = d*t125465*t125466*t125469*1.2E1;
                double t125471 = t125470+2.0;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d*t125467)/t125471-d*gamma_aa[index]*1.0/(t125471* \
                   t125471)*t125467*(d*t125467*1.0/sqrt(gamma_aa[index]*t125467+1.0)*6.0+d*1.0/sqrt(gamma_aa[index])* \
                   t125466*t125469*6.0));
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t125474 = sqrt(gamma_aa[index]);
            double t125475 = 1.0/pow(rho_a[index],4.0/3.0);
            double t125476 = t125474*t125475;
            double t125477 = log(t125476+sqrt(t125476*t125476+1.0));
            double t125478 = d*t125474*t125475*t125477*1.2E1;
            double t125479 = t125478+2.0;
            double t125480 = 1.0/pow(rho_a[index],8.0/3.0);
            double t125483 = gamma_aa[index]*t125480;
            double t125484 = t125483+1.0;
            double t125485 = 1.0/sqrt(t125484);
            double t125486 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t125488 = d*gamma_aa[index]*t125485*t125486*1.6E1;
            double t125489 = 1.0/pow(rho_a[index],7.0/3.0);
            double t125490 = d*t125474*t125477*t125489*1.6E1;
            double t125481 = t125490+t125488;
            double t125482 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t125487 = 1.0/(t125479*t125479);
            double t125491 = 1.0/t125479;
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]*t125491*t125486*(8.0/3.0)-d* \
               gamma_aa[index]*t125480*t125481*t125487)*(4.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(d*gamma_aa[index]* \
               t125480*t125491+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_a[index],4.0/3.0)*(d* \
               gamma_aa[index]*t125482*t125491*(8.8E1/9.0)-d*gamma_aa[index]*t125480*t125487*(d*gamma_aa[index]*t125482* \
               t125485*8.0E1-d*(gamma_aa[index]*gamma_aa[index])*1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t125484,3.0/ \
               2.0)*(6.4E1/3.0)+d*1.0/pow(rho_a[index],1.0E1/3.0)*t125474*t125477*(1.12E2/3.0))+d*gamma_aa[index]* \
               t125480*(t125481*t125481)*1.0/(t125479*t125479*t125479)*2.0-d*gamma_aa[index]*t125481*t125486*t125487* \
               (1.6E1/3.0))*(1.0/2.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t125493 = sqrt(gamma_aa[index]);
                double t125494 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125495 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125496 = t125493*t125494;
                double t125497 = log(t125496+sqrt(t125496*t125496+1.0));
                double t125498 = d*t125493*t125494*t125497*1.2E1;
                double t125499 = t125498+2.0;
                double t125500 = 1.0/t125499;
                double t125501 = 1.0/(t125499*t125499);
                double t125502 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t125503 = gamma_aa[index]*t125495;
                double t125504 = t125503+1.0;
                double t125505 = 1.0/sqrt(t125504);
                double t125506 = d*t125505*t125495*6.0;
                double t125507 = 1.0/sqrt(gamma_aa[index]);
                double t125508 = d*t125507*t125494*t125497*6.0;
                double t125509 = t125506+t125508;
                double t125510 = 1.0/pow(rho_a[index],7.0/3.0);
                double t125511 = d*gamma_aa[index]*t125502*t125505*1.6E1;
                double t125512 = d*t125510*t125493*t125497*1.6E1;
                double t125513 = t125511+t125512;
                v_rho_a_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t125500*t125502*(-8.0/3.0)+d*t125501*t125513* \
                   t125495+d*gamma_aa[index]*t125501*t125495*(d*t125502*t125505*2.4E1+d*t125510*t125507*t125497*8.0-d* \
                   gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t125504,3.0/2.0)*8.0)+d*gamma_aa[index]*t125501* \
                   t125502*t125509*(8.0/3.0)-d*gamma_aa[index]*t125513*t125509*t125495*1.0/(t125499*t125499*t125499)* \
                   2.0)*(-1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*t125500*t125495-d*gamma_aa[index]*t125501*t125509*t125495) \
                   *(2.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t125515 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125516 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125517 = sqrt(gamma_aa[index]);
                double t125518 = t125516*t125517;
                double t125519 = log(t125518+sqrt(t125518*t125518+1.0));
                double t125520 = d*t125516*t125517*t125519*1.2E1;
                double t125521 = t125520+2.0;
                double t125522 = 1.0/(t125521*t125521);
                double t125523 = gamma_aa[index]*t125515;
                double t125524 = t125523+1.0;
                double t125525 = 1.0/sqrt(t125524);
                double t125526 = d*t125515*t125525*6.0;
                double t125527 = 1.0/sqrt(gamma_aa[index]);
                double t125528 = d*t125516*t125527*t125519*6.0;
                double t125529 = t125526+t125528;
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d*t125522*t125515*t125529*-2.0+d*gamma_aa[index]* \
                   1.0/(t125521*t125521*t125521)*t125515*(t125529*t125529)*2.0+d*gamma_aa[index]*t125522*t125515*(d*1.0/ \
                   pow(rho_a[index],1.6E1/3.0)*1.0/pow(t125524,3.0/2.0)*3.0-(d*t125515*t125525*3.0)/gamma_aa[index]+d* \
                   1.0/pow(gamma_aa[index],3.0/2.0)*t125516*t125519*3.0));
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void B_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double  = params_[0].second;
    double d = params_[1].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t124988 = sqrt(gamma_aa[index]);
            double t124989 = 1.0/pow(rho_a[index],4.0/3.0);
            double t124990 = sqrt(gamma_bb[index]);
            double t124991 = 1.0/pow(rho_b[index],4.0/3.0);
            functional_[index] = pow(rho_b[index],4.0/3.0)*((d*gamma_bb[index]*1.0/pow(rho_b[index],8.0/3.0)) \
               /(d*t124990*t124991*log(t124990*t124991+sqrt((t124990*t124990)*(t124991*t124991)+1.0))*1.2E1+2.0)+ \
               4.190715359480463E15/2.251799813685248E15)*(-1.0/2.0)-pow(rho_a[index],4.0/3.0)*((d*gamma_aa[index]* \
               1.0/pow(rho_a[index],8.0/3.0))/(d*t124988*t124989*log(t124988*t124989+sqrt((t124988*t124988)*(t124989* \
               t124989)+1.0))*1.2E1+2.0)+4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t125292 = sqrt(gamma_bb[index]);
            double t125293 = 1.0/pow(rho_b[index],4.0/3.0);
            functional_[index] = pow(rho_a[index],4.0/3.0)*((d*gamma_bb[index]*1.0/pow(rho_b[index],8.0/3.0)) \
               /(d*t125292*t125293*log(t125292*t125293+sqrt((t125292*t125292)*(t125293*t125293)+1.0))*1.2E1+2.0)+ \
               4.190715359480463E15/2.251799813685248E15)*(-1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t125168 = sqrt(gamma_aa[index]);
            double t125169 = 1.0/pow(rho_a[index],4.0/3.0);
            functional_[index] = pow(rho_b[index],4.0/3.0)*((d*gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0)) \
               /(d*t125168*t125169*log(t125168*t125169+sqrt((t125168*t125168)*(t125169*t125169)+1.0))*1.2E1+2.0)+ \
               4.190715359480463E15/2.251799813685248E15)*(-1.0/2.0);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t124993 = sqrt(gamma_aa[index]);
            double t124994 = 1.0/pow(rho_a[index],4.0/3.0);
            double t124995 = t124993*t124994;
            double t124996 = log(t124995+sqrt(t124995*t124995+1.0));
            double t124997 = d*t124993*t124994*t124996*1.2E1;
            double t124998 = t124997+2.0;
            double t124999 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t125000 = 1.0/pow(rho_a[index],8.0/3.0);
            double t125001 = 1.0/t124998;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d*gamma_aa[index]*t125001*t124999*(8.0/3.0)-d*gamma_aa[index]* \
               t125000*1.0/(t124998*t124998)*(d*1.0/pow(rho_a[index],7.0/3.0)*t124993*t124996*1.6E1+d*gamma_aa[index]* \
               t124999*1.0/sqrt(gamma_aa[index]*t125000+1.0)*1.6E1))*(1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]* \
               t125000*t125001+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t125295 = sqrt(gamma_bb[index]);
            double t125296 = 1.0/pow(rho_b[index],4.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],1.0/3.0)*((d*gamma_bb[index]*1.0/pow(rho_b[index],8.0/3.0))/(d* \
               t125295*t125296*log(t125295*t125296+sqrt((t125295*t125295)*(t125296*t125296)+1.0))*1.2E1+2.0)+4.190715359480463E15/ \
               2.251799813685248E15)*(-2.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            double t125171 = sqrt(gamma_aa[index]);
            double t125172 = 1.0/pow(rho_a[index],4.0/3.0);
            double t125173 = t125171*t125172;
            double t125174 = log(t125173+sqrt(t125173*t125173+1.0));
            double t125175 = d*t125171*t125172*t125174*1.2E1;
            double t125176 = t125175+2.0;
            double t125177 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t125178 = 1.0/pow(rho_a[index],8.0/3.0);
            v_rho_a_[index] = pow(rho_b[index],4.0/3.0)*((d*gamma_aa[index]*t125177*(8.0/3.0))/t125176-d*gamma_aa[index]* \
               1.0/(t125176*t125176)*t125178*(d*1.0/pow(rho_a[index],7.0/3.0)*t125171*t125174*1.6E1+d*gamma_aa[index]* \
               t125177*1.0/sqrt(gamma_aa[index]*t125178+1.0)*1.6E1))*(1.0/2.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t125003 = sqrt(gamma_bb[index]);
            double t125004 = 1.0/pow(rho_b[index],4.0/3.0);
            double t125005 = t125003*t125004;
            double t125006 = log(t125005+sqrt(t125005*t125005+1.0));
            double t125007 = d*t125003*t125004*t125006*1.2E1;
            double t125008 = t125007+2.0;
            double t125009 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t125010 = 1.0/pow(rho_b[index],8.0/3.0);
            double t125011 = 1.0/t125008;
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d*gamma_bb[index]*t125011*t125009*(8.0/3.0)-d*gamma_bb[index]* \
               t125010*1.0/(t125008*t125008)*(d*1.0/pow(rho_b[index],7.0/3.0)*t125003*t125006*1.6E1+d*gamma_bb[index]* \
               t125009*1.0/sqrt(gamma_bb[index]*t125010+1.0)*1.6E1))*(1.0/2.0)-pow(rho_b[index],1.0/3.0)*(d*gamma_bb[index]* \
               t125010*t125011+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t125298 = sqrt(gamma_bb[index]);
            double t125299 = 1.0/pow(rho_b[index],4.0/3.0);
            double t125300 = t125298*t125299;
            double t125301 = log(t125300+sqrt(t125300*t125300+1.0));
            double t125302 = d*t125301*t125298*t125299*1.2E1;
            double t125303 = t125302+2.0;
            double t125304 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t125305 = 1.0/pow(rho_b[index],8.0/3.0);
            v_rho_b_[index] = pow(rho_a[index],4.0/3.0)*((d*gamma_bb[index]*t125304*(8.0/3.0))/t125303-d*gamma_bb[index]* \
               1.0/(t125303*t125303)*t125305*(d*1.0/pow(rho_b[index],7.0/3.0)*t125301*t125298*1.6E1+d*gamma_bb[index]* \
               t125304*1.0/sqrt(gamma_bb[index]*t125305+1.0)*1.6E1))*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t125180 = sqrt(gamma_aa[index]);
            double t125181 = 1.0/pow(rho_a[index],4.0/3.0);
            v_rho_b_[index] = pow(rho_b[index],1.0/3.0)*((d*gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0))/(d* \
               t125180*t125181*log(t125180*t125181+sqrt((t125180*t125180)*(t125181*t125181)+1.0))*1.2E1+2.0)+4.190715359480463E15/ \
               2.251799813685248E15)*(-2.0/3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t125013 = sqrt(gamma_aa[index]);
                double t125014 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125015 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125016 = t125013*t125014;
                double t125017 = log(t125016+sqrt(t125016*t125016+1.0));
                double t125018 = d*t125013*t125014*t125017*1.2E1;
                double t125019 = t125018+2.0;
                v_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*((d*t125015)/t125019-d*gamma_aa[index]*t125015*1.0/ \
                   (t125019*t125019)*(d*t125015*1.0/sqrt(gamma_aa[index]*t125015+1.0)*6.0+d*1.0/sqrt(gamma_aa[index]) \
                   *t125014*t125017*6.0))*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t125183 = sqrt(gamma_aa[index]);
                double t125184 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125185 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125186 = t125183*t125184;
                double t125187 = log(t125186+sqrt(t125186*t125186+1.0));
                double t125188 = d*t125183*t125184*t125187*1.2E1;
                double t125189 = t125188+2.0;
                v_gamma_aa_[index] = pow(rho_b[index],4.0/3.0)*((d*t125185)/t125189-d*gamma_aa[index]*t125185*1.0/ \
                   (t125189*t125189)*(d*t125185*1.0/sqrt(gamma_aa[index]*t125185+1.0)*6.0+d*1.0/sqrt(gamma_aa[index]) \
                   *t125184*t125187*6.0))*(-1.0/2.0);
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t125022 = sqrt(gamma_bb[index]);
                double t125023 = 1.0/pow(rho_b[index],4.0/3.0);
                double t125024 = 1.0/pow(rho_b[index],8.0/3.0);
                double t125025 = t125022*t125023;
                double t125026 = log(t125025+sqrt(t125025*t125025+1.0));
                double t125027 = d*t125022*t125023*t125026*1.2E1;
                double t125028 = t125027+2.0;
                v_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*((d*t125024)/t125028-d*gamma_bb[index]*t125024*1.0/ \
                   (t125028*t125028)*(d*t125024*1.0/sqrt(gamma_bb[index]*t125024+1.0)*6.0+d*1.0/sqrt(gamma_bb[index]) \
                   *t125023*t125026*6.0))*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                double t125309 = sqrt(gamma_bb[index]);
                double t125310 = 1.0/pow(rho_b[index],4.0/3.0);
                double t125311 = 1.0/pow(rho_b[index],8.0/3.0);
                double t125312 = t125310*t125309;
                double t125313 = log(t125312+sqrt(t125312*t125312+1.0));
                double t125314 = d*t125310*t125313*t125309*1.2E1;
                double t125315 = t125314+2.0;
                v_gamma_bb_[index] = pow(rho_a[index],4.0/3.0)*((d*t125311)/t125315-d*gamma_bb[index]*t125311*1.0/ \
                   (t125315*t125315)*(d*t125311*1.0/sqrt(gamma_bb[index]*t125311+1.0)*6.0+d*1.0/sqrt(gamma_bb[index]) \
                   *t125310*t125313*6.0))*(-1.0/2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t125032 = sqrt(gamma_aa[index]);
            double t125033 = 1.0/pow(rho_a[index],4.0/3.0);
            double t125034 = t125032*t125033;
            double t125035 = log(t125034+sqrt(t125034*t125034+1.0));
            double t125036 = d*t125032*t125033*t125035*1.2E1;
            double t125037 = t125036+2.0;
            double t125038 = 1.0/pow(rho_a[index],8.0/3.0);
            double t125041 = gamma_aa[index]*t125038;
            double t125042 = t125041+1.0;
            double t125043 = 1.0/sqrt(t125042);
            double t125044 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t125046 = d*gamma_aa[index]*t125043*t125044*1.6E1;
            double t125047 = 1.0/pow(rho_a[index],7.0/3.0);
            double t125048 = d*t125032*t125035*t125047*1.6E1;
            double t125039 = t125046+t125048;
            double t125040 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t125045 = 1.0/(t125037*t125037);
            double t125049 = 1.0/t125037;
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]*t125044*t125049*(8.0/3.0)-d* \
               gamma_aa[index]*t125045*t125038*t125039)*(4.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(d*gamma_aa[index]* \
               t125038*t125049+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_a[index],4.0/3.0)*(d* \
               gamma_aa[index]*t125040*t125049*(8.8E1/9.0)-d*gamma_aa[index]*t125045*t125038*(d*gamma_aa[index]*t125040* \
               t125043*8.0E1-d*(gamma_aa[index]*gamma_aa[index])*1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t125042,3.0/ \
               2.0)*(6.4E1/3.0)+d*1.0/pow(rho_a[index],1.0E1/3.0)*t125032*t125035*(1.12E2/3.0))+d*gamma_aa[index]* \
               1.0/(t125037*t125037*t125037)*t125038*(t125039*t125039)*2.0-d*gamma_aa[index]*t125044*t125045*t125039* \
               (1.6E1/3.0))*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t125319 = sqrt(gamma_bb[index]);
            double t125320 = 1.0/pow(rho_b[index],4.0/3.0);
            v_rho_a_rho_a_[index] = 1.0/pow(rho_a[index],2.0/3.0)*((d*gamma_bb[index]*1.0/pow(rho_b[index],8.0/ \
               3.0))/(d*t125320*t125319*log(t125320*t125319+sqrt((t125320*t125320)*(t125319*t125319)+1.0))*1.2E1+ \
               2.0)+4.190715359480463E15/2.251799813685248E15)*(-2.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            double t125195 = sqrt(gamma_aa[index]);
            double t125196 = 1.0/pow(rho_a[index],4.0/3.0);
            double t125197 = t125195*t125196;
            double t125198 = log(t125197+sqrt(t125197*t125197+1.0));
            double t125199 = d*t125195*t125196*t125198*1.2E1;
            double t125200 = t125199+2.0;
            double t125201 = 1.0/pow(rho_a[index],8.0/3.0);
            double t125204 = gamma_aa[index]*t125201;
            double t125205 = t125204+1.0;
            double t125206 = 1.0/sqrt(t125205);
            double t125207 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t125209 = d*gamma_aa[index]*t125206*t125207*1.6E1;
            double t125210 = 1.0/pow(rho_a[index],7.0/3.0);
            double t125211 = d*t125210*t125195*t125198*1.6E1;
            double t125202 = t125211+t125209;
            double t125203 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t125208 = 1.0/(t125200*t125200);
            v_rho_a_rho_a_[index] = pow(rho_b[index],4.0/3.0)*((d*gamma_aa[index]*t125203*(8.8E1/9.0))/t125200- \
               d*gamma_aa[index]*t125201*t125208*(d*gamma_aa[index]*t125203*t125206*8.0E1-d*(gamma_aa[index]*gamma_aa[index]) \
               *1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t125205,3.0/2.0)*(6.4E1/3.0)+d*1.0/pow(rho_a[index],1.0E1/ \
               3.0)*t125195*t125198*(1.12E2/3.0))+d*gamma_aa[index]*1.0/(t125200*t125200*t125200)*t125201*(t125202* \
               t125202)*2.0-d*gamma_aa[index]*t125202*t125207*t125208*(1.6E1/3.0))*(-1.0/2.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            double t125322 = sqrt(gamma_bb[index]);
            double t125323 = 1.0/pow(rho_b[index],4.0/3.0);
            double t125324 = t125322*t125323;
            double t125325 = log(t125324+sqrt(t125324*t125324+1.0));
            double t125326 = d*t125322*t125323*t125325*1.2E1;
            double t125327 = t125326+2.0;
            double t125328 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t125329 = 1.0/pow(rho_b[index],8.0/3.0);
            v_rho_a_rho_b_[index] = pow(rho_a[index],1.0/3.0)*((d*gamma_bb[index]*t125328*(8.0/3.0))/t125327- \
               d*gamma_bb[index]*1.0/(t125327*t125327)*t125329*(d*1.0/pow(rho_b[index],7.0/3.0)*t125322*t125325*1.6E1+ \
               d*gamma_bb[index]*t125328*1.0/sqrt(gamma_bb[index]*t125329+1.0)*1.6E1))*(2.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            double t125213 = sqrt(gamma_aa[index]);
            double t125214 = 1.0/pow(rho_a[index],4.0/3.0);
            double t125215 = t125213*t125214;
            double t125216 = log(t125215+sqrt(t125215*t125215+1.0));
            double t125217 = d*t125213*t125214*t125216*1.2E1;
            double t125218 = t125217+2.0;
            double t125219 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t125220 = 1.0/pow(rho_a[index],8.0/3.0);
            v_rho_a_rho_b_[index] = pow(rho_b[index],1.0/3.0)*((d*gamma_aa[index]*t125219*(8.0/3.0))/t125218- \
               d*gamma_aa[index]*t125220*1.0/(t125218*t125218)*(d*1.0/pow(rho_a[index],7.0/3.0)*t125213*t125216*1.6E1+ \
               d*gamma_aa[index]*t125219*1.0/sqrt(gamma_aa[index]*t125220+1.0)*1.6E1))*(2.0/3.0);
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t125052 = sqrt(gamma_bb[index]);
            double t125053 = 1.0/pow(rho_b[index],4.0/3.0);
            double t125054 = t125052*t125053;
            double t125055 = log(t125054+sqrt(t125054*t125054+1.0));
            double t125056 = d*t125052*t125053*t125055*1.2E1;
            double t125057 = t125056+2.0;
            double t125058 = 1.0/pow(rho_b[index],8.0/3.0);
            double t125061 = gamma_bb[index]*t125058;
            double t125062 = t125061+1.0;
            double t125063 = 1.0/sqrt(t125062);
            double t125064 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t125066 = d*gamma_bb[index]*t125063*t125064*1.6E1;
            double t125067 = 1.0/pow(rho_b[index],7.0/3.0);
            double t125068 = d*t125052*t125055*t125067*1.6E1;
            double t125059 = t125066+t125068;
            double t125060 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t125065 = 1.0/(t125057*t125057);
            double t125069 = 1.0/t125057;
            v_rho_b_rho_b_[index] = pow(rho_b[index],1.0/3.0)*(d*gamma_bb[index]*t125064*t125069*(8.0/3.0)-d* \
               gamma_bb[index]*t125065*t125058*t125059)*(4.0/3.0)-1.0/pow(rho_b[index],2.0/3.0)*(d*gamma_bb[index]* \
               t125058*t125069+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_b[index],4.0/3.0)*(d* \
               gamma_bb[index]*t125060*t125069*(8.8E1/9.0)-d*gamma_bb[index]*t125065*t125058*(d*gamma_bb[index]*t125060* \
               t125063*8.0E1-d*(gamma_bb[index]*gamma_bb[index])*1.0/pow(rho_b[index],2.2E1/3.0)*1.0/pow(t125062,3.0/ \
               2.0)*(6.4E1/3.0)+d*1.0/pow(rho_b[index],1.0E1/3.0)*t125052*t125055*(1.12E2/3.0))+d*gamma_bb[index]* \
               1.0/(t125057*t125057*t125057)*t125058*(t125059*t125059)*2.0-d*gamma_bb[index]*t125064*t125065*t125059* \
               (1.6E1/3.0))*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t125331 = sqrt(gamma_bb[index]);
            double t125332 = 1.0/pow(rho_b[index],4.0/3.0);
            double t125333 = t125331*t125332;
            double t125334 = log(t125333+sqrt(t125333*t125333+1.0));
            double t125335 = d*t125331*t125332*t125334*1.2E1;
            double t125336 = t125335+2.0;
            double t125337 = 1.0/pow(rho_b[index],8.0/3.0);
            double t125340 = gamma_bb[index]*t125337;
            double t125341 = t125340+1.0;
            double t125342 = 1.0/sqrt(t125341);
            double t125343 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t125345 = d*gamma_bb[index]*t125342*t125343*1.6E1;
            double t125346 = 1.0/pow(rho_b[index],7.0/3.0);
            double t125347 = d*t125331*t125334*t125346*1.6E1;
            double t125338 = t125345+t125347;
            double t125339 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t125344 = 1.0/(t125336*t125336);
            v_rho_b_rho_b_[index] = pow(rho_a[index],4.0/3.0)*((d*gamma_bb[index]*t125339*(8.8E1/9.0))/t125336- \
               d*gamma_bb[index]*t125344*t125337*(d*gamma_bb[index]*t125342*t125339*8.0E1-d*(gamma_bb[index]*gamma_bb[index]) \
               *1.0/pow(rho_b[index],2.2E1/3.0)*1.0/pow(t125341,3.0/2.0)*(6.4E1/3.0)+d*1.0/pow(rho_b[index],1.0E1/ \
               3.0)*t125331*t125334*(1.12E2/3.0))+d*gamma_bb[index]*1.0/(t125336*t125336*t125336)*t125337*(t125338* \
               t125338)*2.0-d*gamma_bb[index]*t125343*t125344*t125338*(1.6E1/3.0))*(-1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t125222 = sqrt(gamma_aa[index]);
            double t125223 = 1.0/pow(rho_a[index],4.0/3.0);
            v_rho_b_rho_b_[index] = 1.0/pow(rho_b[index],2.0/3.0)*((d*gamma_aa[index]*1.0/pow(rho_a[index],8.0/ \
               3.0))/(d*t125222*t125223*log(t125222*t125223+sqrt((t125222*t125222)*(t125223*t125223)+1.0))*1.2E1+ \
               2.0)+4.190715359480463E15/2.251799813685248E15)*(-2.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t125071 = sqrt(gamma_aa[index]);
                double t125072 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125073 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125074 = t125071*t125072;
                double t125075 = log(t125074+sqrt(t125074*t125074+1.0));
                double t125076 = d*t125071*t125072*t125075*1.2E1;
                double t125077 = t125076+2.0;
                double t125078 = 1.0/t125077;
                double t125079 = 1.0/(t125077*t125077);
                double t125080 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t125081 = gamma_aa[index]*t125073;
                double t125082 = t125081+1.0;
                double t125083 = 1.0/sqrt(t125082);
                double t125084 = d*t125073*t125083*6.0;
                double t125085 = 1.0/sqrt(gamma_aa[index]);
                double t125086 = d*t125072*t125075*t125085*6.0;
                double t125087 = t125084+t125086;
                double t125088 = 1.0/pow(rho_a[index],7.0/3.0);
                double t125089 = d*gamma_aa[index]*t125080*t125083*1.6E1;
                double t125090 = d*t125071*t125075*t125088*1.6E1;
                double t125091 = t125090+t125089;
                v_rho_a_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t125080*t125078*(-8.0/3.0)+d*t125073*t125091* \
                   t125079+d*gamma_aa[index]*t125073*t125079*(d*t125080*t125083*2.4E1+d*t125075*t125085*t125088*8.0-d* \
                   gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t125082,3.0/2.0)*8.0)+d*gamma_aa[index]*t125080* \
                   t125087*t125079*(8.0/3.0)-d*gamma_aa[index]*t125073*t125091*1.0/(t125077*t125077*t125077)*t125087* \
                   2.0)*(-1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*t125073*t125078-d*gamma_aa[index]*t125073*t125087*t125079) \
                   *(2.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t125225 = sqrt(gamma_aa[index]);
                double t125226 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125227 = t125225*t125226;
                double t125228 = log(t125227+sqrt(t125227*t125227+1.0));
                double t125229 = d*t125225*t125226*t125228*1.2E1;
                double t125230 = t125229+2.0;
                double t125231 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t125232 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125233 = gamma_aa[index]*t125232;
                double t125234 = t125233+1.0;
                double t125235 = 1.0/sqrt(t125234);
                double t125236 = 1.0/(t125230*t125230);
                double t125237 = 1.0/sqrt(gamma_aa[index]);
                double t125238 = 1.0/pow(rho_a[index],7.0/3.0);
                double t125239 = d*t125232*t125235*6.0;
                double t125240 = d*t125226*t125228*t125237*6.0;
                double t125241 = t125240+t125239;
                double t125242 = d*gamma_aa[index]*t125231*t125235*1.6E1;
                double t125243 = d*t125225*t125228*t125238*1.6E1;
                double t125244 = t125242+t125243;
                v_rho_a_gamma_aa_[index] = pow(rho_b[index],4.0/3.0)*((d*t125231*(-8.0/3.0))/t125230+d*t125232*t125244* \
                   t125236+d*gamma_aa[index]*t125232*t125236*(d*t125231*t125235*2.4E1+d*t125228*t125237*t125238*8.0-d* \
                   gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t125234,3.0/2.0)*8.0)+d*gamma_aa[index]*t125231* \
                   t125241*t125236*(8.0/3.0)-d*gamma_aa[index]*1.0/(t125230*t125230*t125230)*t125232*t125241*t125244* \
                   2.0)*(-1.0/2.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                double t125351 = sqrt(gamma_bb[index]);
                double t125352 = 1.0/pow(rho_b[index],4.0/3.0);
                double t125353 = 1.0/pow(rho_b[index],8.0/3.0);
                double t125354 = t125351*t125352;
                double t125355 = log(t125354+sqrt(t125354*t125354+1.0));
                double t125356 = d*t125351*t125352*t125355*1.2E1;
                double t125357 = t125356+2.0;
                v_rho_a_gamma_bb_[index] = pow(rho_a[index],1.0/3.0)*((d*t125353)/t125357-d*gamma_bb[index]*t125353* \
                   1.0/(t125357*t125357)*(d*t125353*1.0/sqrt(gamma_bb[index]*t125353+1.0)*6.0+d*1.0/sqrt(gamma_bb[index]) \
                   *t125352*t125355*6.0))*(-2.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t125248 = sqrt(gamma_aa[index]);
                double t125249 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125250 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125251 = t125248*t125249;
                double t125252 = log(t125251+sqrt(t125251*t125251+1.0));
                double t125253 = d*t125252*t125248*t125249*1.2E1;
                double t125254 = t125253+2.0;
                v_rho_b_gamma_aa_[index] = pow(rho_b[index],1.0/3.0)*((d*t125250)/t125254-d*gamma_aa[index]*t125250* \
                   1.0/(t125254*t125254)*(d*t125250*1.0/sqrt(gamma_aa[index]*t125250+1.0)*6.0+d*1.0/sqrt(gamma_aa[index]) \
                   *t125252*t125249*6.0))*(-2.0/3.0);
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t125097 = sqrt(gamma_bb[index]);
                double t125098 = 1.0/pow(rho_b[index],4.0/3.0);
                double t125099 = 1.0/pow(rho_b[index],8.0/3.0);
                double t125100 = t125097*t125098;
                double t125101 = log(t125100+sqrt(t125100*t125100+1.0));
                double t125102 = d*t125101*t125097*t125098*1.2E1;
                double t125103 = t125102+2.0;
                double t125104 = 1.0/t125103;
                double t125105 = 1.0/(t125103*t125103);
                double t125106 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t125107 = gamma_bb[index]*t125099;
                double t125108 = t125107+1.0;
                double t125109 = 1.0/sqrt(t125108);
                double t125110 = d*t125109*t125099*6.0;
                double t125111 = 1.0/sqrt(gamma_bb[index]);
                double t125112 = d*t125101*t125111*t125098*6.0;
                double t125113 = t125110+t125112;
                double t125114 = 1.0/pow(rho_b[index],7.0/3.0);
                double t125115 = d*gamma_bb[index]*t125106*t125109*1.6E1;
                double t125116 = d*t125101*t125114*t125097*1.6E1;
                double t125117 = t125115+t125116;
                v_rho_b_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*(d*t125104*t125106*(-8.0/3.0)+d*t125105*t125117* \
                   t125099+d*gamma_bb[index]*t125105*t125099*(d*t125106*t125109*2.4E1+d*t125101*t125111*t125114*8.0-d* \
                   gamma_bb[index]*1.0/pow(rho_b[index],1.9E1/3.0)*1.0/pow(t125108,3.0/2.0)*8.0)+d*gamma_bb[index]*t125113* \
                   t125105*t125106*(8.0/3.0)-d*gamma_bb[index]*1.0/(t125103*t125103*t125103)*t125113*t125117*t125099* \
                   2.0)*(-1.0/2.0)-pow(rho_b[index],1.0/3.0)*(d*t125104*t125099-d*gamma_bb[index]*t125113*t125105*t125099) \
                   *(2.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t125361 = sqrt(gamma_bb[index]);
                double t125362 = 1.0/pow(rho_b[index],4.0/3.0);
                double t125363 = t125361*t125362;
                double t125364 = log(t125363+sqrt(t125363*t125363+1.0));
                double t125365 = d*t125361*t125362*t125364*1.2E1;
                double t125366 = t125365+2.0;
                double t125367 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t125368 = 1.0/pow(rho_b[index],8.0/3.0);
                double t125369 = gamma_bb[index]*t125368;
                double t125370 = t125369+1.0;
                double t125371 = 1.0/sqrt(t125370);
                double t125372 = 1.0/(t125366*t125366);
                double t125373 = 1.0/sqrt(gamma_bb[index]);
                double t125374 = 1.0/pow(rho_b[index],7.0/3.0);
                double t125375 = d*t125371*t125368*6.0;
                double t125376 = d*t125362*t125364*t125373*6.0;
                double t125377 = t125375+t125376;
                double t125378 = d*gamma_bb[index]*t125371*t125367*1.6E1;
                double t125379 = d*t125361*t125364*t125374*1.6E1;
                double t125380 = t125378+t125379;
                v_rho_b_gamma_bb_[index] = pow(rho_a[index],4.0/3.0)*((d*t125367*(-8.0/3.0))/t125366+d*t125380*t125372* \
                   t125368+d*gamma_bb[index]*t125372*t125368*(d*t125371*t125367*2.4E1+d*t125364*t125373*t125374*8.0-d* \
                   gamma_bb[index]*1.0/pow(rho_b[index],1.9E1/3.0)*1.0/pow(t125370,3.0/2.0)*8.0)+d*gamma_bb[index]*t125372* \
                   t125367*t125377*(8.0/3.0)-d*gamma_bb[index]*t125380*1.0/(t125366*t125366*t125366)*t125368*t125377* \
                   2.0)*(-1.0/2.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t125119 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125120 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125121 = sqrt(gamma_aa[index]);
                double t125122 = t125120*t125121;
                double t125123 = log(t125122+sqrt(t125122*t125122+1.0));
                double t125124 = d*t125120*t125121*t125123*1.2E1;
                double t125125 = t125124+2.0;
                double t125126 = 1.0/(t125125*t125125);
                double t125127 = gamma_aa[index]*t125119;
                double t125128 = t125127+1.0;
                double t125129 = 1.0/sqrt(t125128);
                double t125130 = d*t125119*t125129*6.0;
                double t125131 = 1.0/sqrt(gamma_aa[index]);
                double t125132 = d*t125120*t125131*t125123*6.0;
                double t125133 = t125130+t125132;
                v_gamma_aa_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t125133*t125126*t125119*-2.0+d*gamma_aa[index]* \
                   (t125133*t125133)*1.0/(t125125*t125125*t125125)*t125119*2.0+d*gamma_aa[index]*t125126*t125119*(d*1.0/ \
                   pow(rho_a[index],1.6E1/3.0)*1.0/pow(t125128,3.0/2.0)*3.0+d*1.0/pow(gamma_aa[index],3.0/2.0)*t125120* \
                   t125123*3.0-(d*t125119*t125129*3.0)/gamma_aa[index]))*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t125258 = 1.0/pow(rho_a[index],8.0/3.0);
                double t125259 = 1.0/pow(rho_a[index],4.0/3.0);
                double t125260 = sqrt(gamma_aa[index]);
                double t125261 = t125260*t125259;
                double t125262 = log(t125261+sqrt(t125261*t125261+1.0));
                double t125263 = d*t125260*t125262*t125259*1.2E1;
                double t125264 = t125263+2.0;
                double t125265 = 1.0/(t125264*t125264);
                double t125266 = gamma_aa[index]*t125258;
                double t125267 = t125266+1.0;
                double t125268 = 1.0/sqrt(t125267);
                double t125269 = d*t125258*t125268*6.0;
                double t125270 = 1.0/sqrt(gamma_aa[index]);
                double t125271 = d*t125270*t125262*t125259*6.0;
                double t125272 = t125271+t125269;
                v_gamma_aa_gamma_aa_[index] = pow(rho_b[index],4.0/3.0)*(d*t125272*t125265*t125258*-2.0+d*gamma_aa[index]* \
                   (t125272*t125272)*1.0/(t125264*t125264*t125264)*t125258*2.0+d*gamma_aa[index]*t125265*t125258*(d*1.0/ \
                   pow(rho_a[index],1.6E1/3.0)*1.0/pow(t125267,3.0/2.0)*3.0+d*1.0/pow(gamma_aa[index],3.0/2.0)*t125262* \
                   t125259*3.0-(d*t125258*t125268*3.0)/gamma_aa[index]))*(-1.0/2.0);
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t125139 = 1.0/pow(rho_b[index],8.0/3.0);
                double t125140 = 1.0/pow(rho_b[index],4.0/3.0);
                double t125141 = sqrt(gamma_bb[index]);
                double t125142 = t125140*t125141;
                double t125143 = log(t125142+sqrt(t125142*t125142+1.0));
                double t125144 = d*t125140*t125141*t125143*1.2E1;
                double t125145 = t125144+2.0;
                double t125146 = 1.0/(t125145*t125145);
                double t125147 = gamma_bb[index]*t125139;
                double t125148 = t125147+1.0;
                double t125149 = 1.0/sqrt(t125148);
                double t125150 = d*t125139*t125149*6.0;
                double t125151 = 1.0/sqrt(gamma_bb[index]);
                double t125152 = d*t125140*t125151*t125143*6.0;
                double t125153 = t125150+t125152;
                v_gamma_bb_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*(d*t125153*t125146*t125139*-2.0+d*gamma_bb[index]* \
                   (t125153*t125153)*1.0/(t125145*t125145*t125145)*t125139*2.0+d*gamma_bb[index]*t125146*t125139*(d*1.0/ \
                   pow(rho_b[index],1.6E1/3.0)*1.0/pow(t125148,3.0/2.0)*3.0+d*1.0/pow(gamma_bb[index],3.0/2.0)*t125140* \
                   t125143*3.0-(d*t125139*t125149*3.0)/gamma_bb[index]))*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                double t125387 = 1.0/pow(rho_b[index],8.0/3.0);
                double t125388 = 1.0/pow(rho_b[index],4.0/3.0);
                double t125389 = sqrt(gamma_bb[index]);
                double t125390 = t125388*t125389;
                double t125391 = log(t125390+sqrt(t125390*t125390+1.0));
                double t125392 = d*t125391*t125388*t125389*1.2E1;
                double t125393 = t125392+2.0;
                double t125394 = 1.0/(t125393*t125393);
                double t125395 = gamma_bb[index]*t125387;
                double t125396 = t125395+1.0;
                double t125397 = 1.0/sqrt(t125396);
                double t125398 = d*t125387*t125397*6.0;
                double t125399 = 1.0/sqrt(gamma_bb[index]);
                double t125400 = d*t125391*t125388*t125399*6.0;
                double t125401 = t125400+t125398;
                v_gamma_bb_gamma_bb_[index] = pow(rho_a[index],4.0/3.0)*(d*t125401*t125394*t125387*-2.0+d*gamma_bb[index]* \
                   (t125401*t125401)*1.0/(t125393*t125393*t125393)*t125387*2.0+d*gamma_bb[index]*t125394*t125387*(d*1.0/ \
                   pow(rho_b[index],1.6E1/3.0)*1.0/pow(t125396,3.0/2.0)*3.0+d*1.0/pow(gamma_bb[index],3.0/2.0)*t125391* \
                   t125388*3.0-(d*t125387*t125397*3.0)/gamma_bb[index]))*(-1.0/2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

