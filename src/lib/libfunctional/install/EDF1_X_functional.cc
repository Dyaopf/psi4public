/**********************************************************
* EDF1_X_functional.cc: definitions for EDF1_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 06-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "EDF1_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

EDF1_X_Functional::EDF1_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "EDF1_X";
    description_ = "Empirical Density Function #1 (Exchange only)";
    citation_ = "R.D. Adamson, P.M.W. Gill, and J.A. Pople, Chem. Phys. Lett., 284, 6-11, 1998";

    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double d1 = 3.5000000000000001E-03;
    params_.push_back(make_pair("d1",d1));
    double d2 = 4.1999999999999997E-03;
    params_.push_back(make_pair("d2",d2));
    double e0 = 1.0309520000000001E+00;
    params_.push_back(make_pair("e0",e0));
    double e1 = 1.0401700000000000E+01;
    params_.push_back(make_pair("e1",e1));
    double e2 = -8.4479299999999995E+00;
    params_.push_back(make_pair("e2",e2));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
EDF1_X_Functional::~EDF1_X_Functional()
{
}
void EDF1_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double c0 = params_[0].second;
    double d1 = params_[1].second;
    double d2 = params_[2].second;
    double e0 = params_[3].second;
    double e1 = params_[4].second;
    double e2 = params_[5].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t27688 = sqrt(gamma_aa[index]);
            double t27689 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27690 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27691 = t27688*t27689;
            double t27692 = log(t27691+sqrt(t27691*t27691+1.0));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t27690)/(d1*t27692* \
               t27688*t27689*6.0+1.0)+(d2*e2*gamma_aa[index]*t27690)/(d2*t27692*t27688*t27689*6.0+1.0))*-2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t27694 = sqrt(gamma_aa[index]);
            double t27695 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27696 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27697 = t27694*t27695;
            double t27698 = log(t27697+sqrt(t27697*t27697+1.0));
            double t27699 = d1*t27694*t27695*t27698*6.0;
            double t27700 = t27699+1.0;
            double t27701 = 1.0/t27700;
            double t27702 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27703 = d2*t27694*t27695*t27698*6.0;
            double t27704 = t27703+1.0;
            double t27705 = 1.0/t27704;
            double t27706 = gamma_aa[index]*t27696;
            double t27707 = t27706+1.0;
            double t27708 = 1.0/sqrt(t27707);
            double t27709 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27701*t27702*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t27702*t27705*(8.0/3.0)-d1*e1*gamma_aa[index]*1.0/(t27700*t27700)*t27696*(d1*gamma_aa[index]* \
               t27702*t27708*8.0+d1*t27709*t27694*t27698*8.0)-d2*e2*gamma_aa[index]*1.0/(t27704*t27704)*t27696*(d2* \
               gamma_aa[index]*t27702*t27708*8.0+d2*t27709*t27694*t27698*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t27701*t27696+d2*e2*gamma_aa[index]*t27705*t27696)*(4.0/3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t27711 = sqrt(gamma_aa[index]);
                double t27712 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27713 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27714 = t27711*t27712;
                double t27715 = log(t27714+sqrt(t27714*t27714+1.0));
                double t27716 = d1*t27711*t27712*t27715*6.0;
                double t27717 = t27716+1.0;
                double t27718 = gamma_aa[index]*t27713;
                double t27719 = t27718+1.0;
                double t27720 = 1.0/sqrt(t27719);
                double t27721 = 1.0/sqrt(gamma_aa[index]);
                double t27722 = d2*t27711*t27712*t27715*6.0;
                double t27723 = t27722+1.0;
                v_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*((d1*e1*t27713)/t27717+(d2*e2*t27713)/t27723-d1*e1* \
                   gamma_aa[index]*t27713*1.0/(t27717*t27717)*(d1*t27720*t27713*3.0+d1*t27712*t27721*t27715*3.0)-d2*e2* \
                   gamma_aa[index]*t27713*1.0/(t27723*t27723)*(d2*t27720*t27713*3.0+d2*t27712*t27721*t27715*3.0))*-2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t27726 = sqrt(gamma_aa[index]);
            double t27727 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27728 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27729 = t27726*t27727;
            double t27730 = log(t27729+sqrt(t27729*t27729+1.0));
            double t27731 = d1*t27730*t27726*t27727*6.0;
            double t27732 = t27731+1.0;
            double t27733 = 1.0/t27732;
            double t27734 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27735 = d2*t27730*t27726*t27727*6.0;
            double t27736 = t27735+1.0;
            double t27737 = 1.0/t27736;
            double t27738 = gamma_aa[index]*t27728;
            double t27739 = t27738+1.0;
            double t27740 = 1.0/sqrt(t27739);
            double t27741 = 1.0/pow(rho_a[index],7.0/3.0);
            double t27742 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t27743 = 1.0/(t27732*t27732);
            double t27744 = d1*gamma_aa[index]*t27740*t27734*8.0;
            double t27745 = d1*t27730*t27741*t27726*8.0;
            double t27746 = t27744+t27745;
            double t27747 = 1.0/(t27736*t27736);
            double t27748 = d2*gamma_aa[index]*t27740*t27734*8.0;
            double t27749 = d2*t27730*t27741*t27726*8.0;
            double t27750 = t27748+t27749;
            double t27751 = gamma_aa[index]*gamma_aa[index];
            double t27752 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t27753 = 1.0/pow(t27739,3.0/2.0);
            double t27754 = 1.0/pow(rho_a[index],1.0E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27733*t27742*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t27742*t27737*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t27743*t27728*(d1*gamma_aa[index]* \
               t27740*t27742*4.0E1+d1*t27730*t27726*t27754*(5.6E1/3.0)-d1*t27751*t27752*t27753*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t27728*t27747*(d2*gamma_aa[index]*t27740*t27742*4.0E1+d2*t27730*t27726*t27754*(5.6E1/ \
               3.0)-d2*t27751*t27752*t27753*(3.2E1/3.0))+d1*e1*gamma_aa[index]*1.0/(t27732*t27732*t27732)*t27728* \
               (t27746*t27746)*2.0+d2*e2*gamma_aa[index]*(t27750*t27750)*1.0/(t27736*t27736*t27736)*t27728*2.0-d1* \
               e1*gamma_aa[index]*t27734*t27743*t27746*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t27750*t27734*t27747*(1.6E1/ \
               3.0))+pow(rho_a[index],1.0/3.0)*(d1*e1*gamma_aa[index]*t27733*t27734*(8.0/3.0)+d2*e2*gamma_aa[index]* \
               t27734*t27737*(8.0/3.0)-d1*e1*gamma_aa[index]*t27743*t27728*t27746-d2*e2*gamma_aa[index]*t27750*t27728* \
               t27747)*(8.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t27733*t27728+d2*e2* \
               gamma_aa[index]*t27728*t27737)*(4.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t27756 = sqrt(gamma_aa[index]);
                double t27757 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27758 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27759 = t27756*t27757;
                double t27760 = log(t27759+sqrt(t27759*t27759+1.0));
                double t27761 = d1*t27760*t27756*t27757*6.0;
                double t27762 = t27761+1.0;
                double t27763 = gamma_aa[index]*t27758;
                double t27764 = t27763+1.0;
                double t27765 = 1.0/sqrt(t27764);
                double t27766 = 1.0/sqrt(gamma_aa[index]);
                double t27767 = d2*t27760*t27756*t27757*6.0;
                double t27768 = t27767+1.0;
                double t27769 = 1.0/t27762;
                double t27770 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t27771 = 1.0/t27768;
                double t27772 = 1.0/(t27762*t27762);
                double t27773 = 1.0/(t27768*t27768);
                double t27774 = 1.0/pow(rho_a[index],7.0/3.0);
                double t27775 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t27776 = 1.0/pow(t27764,3.0/2.0);
                double t27777 = d1*t27765*t27758*3.0;
                double t27778 = d1*t27760*t27757*t27766*3.0;
                double t27779 = t27777+t27778;
                double t27780 = d2*t27765*t27758*3.0;
                double t27781 = d2*t27760*t27757*t27766*3.0;
                double t27782 = t27780+t27781;
                double t27783 = d1*gamma_aa[index]*t27770*t27765*8.0;
                double t27784 = d1*t27760*t27756*t27774*8.0;
                double t27785 = t27783+t27784;
                double t27786 = d2*gamma_aa[index]*t27770*t27765*8.0;
                double t27787 = d2*t27760*t27756*t27774*8.0;
                double t27788 = t27786+t27787;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27770*t27769*(-8.0/3.0)-d2*e2*t27770* \
                   t27771*(8.0/3.0)+d1*e1*t27772*t27758*t27785+d2*e2*t27773*t27758*t27788+d1*e1*gamma_aa[index]*t27772* \
                   t27758*(d1*t27770*t27765*1.2E1-d1*gamma_aa[index]*t27775*t27776*4.0+d1*t27760*t27774*t27766*4.0)+d2* \
                   e2*gamma_aa[index]*t27773*t27758*(d2*t27770*t27765*1.2E1-d2*gamma_aa[index]*t27775*t27776*4.0+d2*t27760* \
                   t27774*t27766*4.0)+d1*e1*gamma_aa[index]*t27770*t27772*t27779*(8.0/3.0)+d2*e2*gamma_aa[index]*t27770* \
                   t27773*t27782*(8.0/3.0)-d1*e1*gamma_aa[index]*1.0/(t27762*t27762*t27762)*t27758*t27785*t27779*2.0- \
                   d2*e2*gamma_aa[index]*t27782*t27758*1.0/(t27768*t27768*t27768)*t27788*2.0)-pow(rho_a[index],1.0/3.0) \
                   *(d1*e1*t27758*t27769+d2*e2*t27771*t27758-d1*e1*gamma_aa[index]*t27772*t27758*t27779-d2*e2*gamma_aa[index]* \
                   t27773*t27782*t27758)*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t27790 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27791 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27792 = sqrt(gamma_aa[index]);
                double t27793 = t27791*t27792;
                double t27794 = log(t27793+sqrt(t27793*t27793+1.0));
                double t27795 = gamma_aa[index]*t27790;
                double t27796 = t27795+1.0;
                double t27797 = 1.0/sqrt(t27796);
                double t27798 = 1.0/sqrt(gamma_aa[index]);
                double t27799 = d1*t27790*t27797*3.0;
                double t27800 = d1*t27791*t27794*t27798*3.0;
                double t27801 = t27800+t27799;
                double t27802 = d1*t27791*t27792*t27794*6.0;
                double t27803 = t27802+1.0;
                double t27804 = d2*t27790*t27797*3.0;
                double t27805 = d2*t27791*t27794*t27798*3.0;
                double t27806 = t27804+t27805;
                double t27807 = d2*t27791*t27792*t27794*6.0;
                double t27808 = t27807+1.0;
                double t27809 = 1.0/(t27803*t27803);
                double t27810 = 1.0/(t27808*t27808);
                double t27811 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t27812 = 1.0/pow(t27796,3.0/2.0);
                double t27813 = 1.0/gamma_aa[index];
                double t27814 = 1.0/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*t27801*t27790*t27809*-2.0-d2*e2*t27810* \
                   t27806*t27790*2.0+d1*e1*gamma_aa[index]*(t27801*t27801)*1.0/(t27803*t27803*t27803)*t27790*2.0+d2*e2* \
                   gamma_aa[index]*(t27806*t27806)*t27790*1.0/(t27808*t27808*t27808)*2.0+d1*e1*gamma_aa[index]*t27790* \
                   t27809*(d1*t27811*t27812*(3.0/2.0)+d1*t27814*t27791*t27794*(3.0/2.0)-d1*t27813*t27790*t27797*(3.0/ \
                   2.0))+d2*e2*gamma_aa[index]*t27810*t27790*(d2*t27811*t27812*(3.0/2.0)+d2*t27814*t27791*t27794*(3.0/ \
                   2.0)-d2*t27813*t27790*t27797*(3.0/2.0)))*-2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void EDF1_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double c0 = params_[0].second;
    double d1 = params_[1].second;
    double d2 = params_[2].second;
    double e0 = params_[3].second;
    double e1 = params_[4].second;
    double e2 = params_[5].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27060 = sqrt(gamma_aa[index]);
            double t27061 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27062 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27063 = t27060*t27061;
            double t27064 = log(t27063+sqrt(t27063*t27063+1.0));
            double t27065 = sqrt(gamma_bb[index]);
            double t27066 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27067 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27068 = t27065*t27066;
            double t27069 = log(t27068+sqrt(t27068*t27068+1.0));
            functional_[index] = -pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t27062)/(d1*t27060* \
               t27061*t27064*6.0+1.0)+(d2*e2*gamma_aa[index]*t27062)/(d2*t27060*t27061*t27064*6.0+1.0))-pow(rho_b[index],4.0/ \
               3.0)*(-c0*e0+(d1*e1*gamma_bb[index]*t27067)/(d1*t27065*t27066*t27069*6.0+1.0)+(d2*e2*gamma_bb[index]* \
               t27067)/(d2*t27065*t27066*t27069*6.0+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t27495 = sqrt(gamma_aa[index]);
            double t27496 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27497 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27498 = t27495*t27496;
            double t27499 = log(t27498+sqrt(t27498*t27498+1.0));
            functional_[index] = -pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t27497)/(d1*t27495* \
               t27496*t27499*6.0+1.0)+(d2*e2*gamma_aa[index]*t27497)/(d2*t27495*t27496*t27499*6.0+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t27338 = sqrt(gamma_bb[index]);
            double t27339 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27340 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27341 = t27338*t27339;
            double t27342 = log(t27341+sqrt(t27341*t27341+1.0));
            functional_[index] = -pow(rho_b[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_bb[index]*t27340)/(d1*t27342* \
               t27338*t27339*6.0+1.0)+(d2*e2*gamma_bb[index]*t27340)/(d2*t27342*t27338*t27339*6.0+1.0));
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27071 = sqrt(gamma_aa[index]);
            double t27072 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27073 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27074 = t27071*t27072;
            double t27075 = log(t27074+sqrt(t27074*t27074+1.0));
            double t27076 = d1*t27071*t27072*t27075*6.0;
            double t27077 = t27076+1.0;
            double t27078 = 1.0/t27077;
            double t27079 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27080 = d2*t27071*t27072*t27075*6.0;
            double t27081 = t27080+1.0;
            double t27082 = 1.0/t27081;
            double t27083 = gamma_aa[index]*t27073;
            double t27084 = t27083+1.0;
            double t27085 = 1.0/sqrt(t27084);
            double t27086 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27078*t27079*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t27082*t27079*(8.0/3.0)-d1*e1*gamma_aa[index]*t27073*1.0/(t27077*t27077)*(d1*gamma_aa[index]* \
               t27085*t27079*8.0+d1*t27071*t27075*t27086*8.0)-d2*e2*gamma_aa[index]*1.0/(t27081*t27081)*t27073*(d2* \
               gamma_aa[index]*t27085*t27079*8.0+d2*t27071*t27075*t27086*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t27073*t27078+d2*e2*gamma_aa[index]*t27073*t27082)*(4.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t27501 = sqrt(gamma_aa[index]);
            double t27502 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27503 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27504 = t27501*t27502;
            double t27505 = log(t27504+sqrt(t27504*t27504+1.0));
            double t27506 = d1*t27501*t27502*t27505*6.0;
            double t27507 = t27506+1.0;
            double t27508 = 1.0/t27507;
            double t27509 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27510 = d2*t27501*t27502*t27505*6.0;
            double t27511 = t27510+1.0;
            double t27512 = 1.0/t27511;
            double t27513 = gamma_aa[index]*t27503;
            double t27514 = t27513+1.0;
            double t27515 = 1.0/sqrt(t27514);
            double t27516 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27508*t27509*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t27512*t27509*(8.0/3.0)-d1*e1*gamma_aa[index]*t27503*1.0/(t27507*t27507)*(d1*gamma_aa[index]* \
               t27515*t27509*8.0+d1*t27501*t27505*t27516*8.0)-d2*e2*gamma_aa[index]*1.0/(t27511*t27511)*t27503*(d2* \
               gamma_aa[index]*t27515*t27509*8.0+d2*t27501*t27505*t27516*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t27503*t27508+d2*e2*gamma_aa[index]*t27503*t27512)*(4.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27088 = sqrt(gamma_bb[index]);
            double t27089 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27090 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27091 = t27088*t27089;
            double t27092 = log(t27091+sqrt(t27091*t27091+1.0));
            double t27093 = d1*t27092*t27088*t27089*6.0;
            double t27094 = t27093+1.0;
            double t27095 = 1.0/t27094;
            double t27096 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27097 = d2*t27092*t27088*t27089*6.0;
            double t27098 = t27097+1.0;
            double t27099 = 1.0/t27098;
            double t27100 = gamma_bb[index]*t27090;
            double t27101 = t27100+1.0;
            double t27102 = 1.0/sqrt(t27101);
            double t27103 = 1.0/pow(rho_b[index],7.0/3.0);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27095*t27096*(8.0/3.0)+d2*e2* \
               gamma_bb[index]*t27096*t27099*(8.0/3.0)-d1*e1*gamma_bb[index]*t27090*1.0/(t27094*t27094)*(d1*gamma_bb[index]* \
               t27102*t27096*8.0+d1*t27103*t27092*t27088*8.0)-d2*e2*gamma_bb[index]*t27090*1.0/(t27098*t27098)*(d2* \
               gamma_bb[index]*t27102*t27096*8.0+d2*t27103*t27092*t27088*8.0))-pow(rho_b[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_bb[index]*t27090*t27095+d2*e2*gamma_bb[index]*t27090*t27099)*(4.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t27345 = sqrt(gamma_bb[index]);
            double t27346 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27347 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27348 = t27345*t27346;
            double t27349 = log(t27348+sqrt(t27348*t27348+1.0));
            double t27350 = d1*t27345*t27346*t27349*6.0;
            double t27351 = t27350+1.0;
            double t27352 = 1.0/t27351;
            double t27353 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27354 = d2*t27345*t27346*t27349*6.0;
            double t27355 = t27354+1.0;
            double t27356 = 1.0/t27355;
            double t27357 = gamma_bb[index]*t27347;
            double t27358 = t27357+1.0;
            double t27359 = 1.0/sqrt(t27358);
            double t27360 = 1.0/pow(rho_b[index],7.0/3.0);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27352*t27353*(8.0/3.0)+d2*e2* \
               gamma_bb[index]*t27353*t27356*(8.0/3.0)-d1*e1*gamma_bb[index]*1.0/(t27351*t27351)*t27347*(d1*gamma_bb[index]* \
               t27353*t27359*8.0+d1*t27360*t27345*t27349*8.0)-d2*e2*gamma_bb[index]*1.0/(t27355*t27355)*t27347*(d2* \
               gamma_bb[index]*t27353*t27359*8.0+d2*t27360*t27345*t27349*8.0))-pow(rho_b[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_bb[index]*t27352*t27347+d2*e2*gamma_bb[index]*t27347*t27356)*(4.0/3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27105 = sqrt(gamma_aa[index]);
                double t27106 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27107 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27108 = t27105*t27106;
                double t27109 = log(t27108+sqrt(t27108*t27108+1.0));
                double t27110 = d1*t27105*t27106*t27109*6.0;
                double t27111 = t27110+1.0;
                double t27112 = gamma_aa[index]*t27107;
                double t27113 = t27112+1.0;
                double t27114 = 1.0/sqrt(t27113);
                double t27115 = 1.0/sqrt(gamma_aa[index]);
                double t27116 = d2*t27105*t27106*t27109*6.0;
                double t27117 = t27116+1.0;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d1*e1*t27107)/t27111+(d2*e2*t27107)/t27117-d1*e1* \
                   gamma_aa[index]*1.0/(t27111*t27111)*t27107*(d1*t27114*t27107*3.0+d1*t27106*t27115*t27109*3.0)-d2*e2* \
                   gamma_aa[index]*t27107*1.0/(t27117*t27117)*(d2*t27114*t27107*3.0+d2*t27106*t27115*t27109*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t27519 = sqrt(gamma_aa[index]);
                double t27520 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27521 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27522 = t27520*t27519;
                double t27523 = log(t27522+sqrt(t27522*t27522+1.0));
                double t27524 = d1*t27520*t27523*t27519*6.0;
                double t27525 = t27524+1.0;
                double t27526 = gamma_aa[index]*t27521;
                double t27527 = t27526+1.0;
                double t27528 = 1.0/sqrt(t27527);
                double t27529 = 1.0/sqrt(gamma_aa[index]);
                double t27530 = d2*t27520*t27523*t27519*6.0;
                double t27531 = t27530+1.0;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d1*e1*t27521)/t27525+(d2*e2*t27521)/t27531-d1*e1* \
                   gamma_aa[index]*t27521*1.0/(t27525*t27525)*(d1*t27521*t27528*3.0+d1*t27520*t27523*t27529*3.0)-d2*e2* \
                   gamma_aa[index]*t27521*1.0/(t27531*t27531)*(d2*t27521*t27528*3.0+d2*t27520*t27523*t27529*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27120 = sqrt(gamma_bb[index]);
                double t27121 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27122 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27123 = t27120*t27121;
                double t27124 = log(t27123+sqrt(t27123*t27123+1.0));
                double t27125 = d1*t27120*t27121*t27124*6.0;
                double t27126 = t27125+1.0;
                double t27127 = gamma_bb[index]*t27122;
                double t27128 = t27127+1.0;
                double t27129 = 1.0/sqrt(t27128);
                double t27130 = 1.0/sqrt(gamma_bb[index]);
                double t27131 = d2*t27120*t27121*t27124*6.0;
                double t27132 = t27131+1.0;
                v_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*((d1*e1*t27122)/t27126+(d2*e2*t27122)/t27132-d1*e1* \
                   gamma_bb[index]*t27122*1.0/(t27126*t27126)*(d1*t27122*t27129*3.0+d1*t27121*t27130*t27124*3.0)-d2*e2* \
                   gamma_bb[index]*t27122*1.0/(t27132*t27132)*(d2*t27122*t27129*3.0+d2*t27121*t27130*t27124*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27364 = sqrt(gamma_bb[index]);
                double t27365 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27366 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27367 = t27364*t27365;
                double t27368 = log(t27367+sqrt(t27367*t27367+1.0));
                double t27369 = d1*t27364*t27365*t27368*6.0;
                double t27370 = t27369+1.0;
                double t27371 = gamma_bb[index]*t27366;
                double t27372 = t27371+1.0;
                double t27373 = 1.0/sqrt(t27372);
                double t27374 = 1.0/sqrt(gamma_bb[index]);
                double t27375 = d2*t27364*t27365*t27368*6.0;
                double t27376 = t27375+1.0;
                v_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*((d1*e1*t27366)/t27370+(d2*e2*t27366)/t27376-d1*e1* \
                   gamma_bb[index]*1.0/(t27370*t27370)*t27366*(d1*t27373*t27366*3.0+d1*t27365*t27374*t27368*3.0)-d2*e2* \
                   gamma_bb[index]*t27366*1.0/(t27376*t27376)*(d2*t27373*t27366*3.0+d2*t27365*t27374*t27368*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27136 = sqrt(gamma_aa[index]);
            double t27137 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27138 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27139 = t27136*t27137;
            double t27140 = log(t27139+sqrt(t27139*t27139+1.0));
            double t27141 = d1*t27140*t27136*t27137*6.0;
            double t27142 = t27141+1.0;
            double t27143 = 1.0/t27142;
            double t27144 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27145 = d2*t27140*t27136*t27137*6.0;
            double t27146 = t27145+1.0;
            double t27147 = 1.0/t27146;
            double t27148 = gamma_aa[index]*t27138;
            double t27149 = t27148+1.0;
            double t27150 = 1.0/sqrt(t27149);
            double t27151 = 1.0/pow(rho_a[index],7.0/3.0);
            double t27152 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t27153 = 1.0/(t27142*t27142);
            double t27154 = d1*gamma_aa[index]*t27150*t27144*8.0;
            double t27155 = d1*t27140*t27151*t27136*8.0;
            double t27156 = t27154+t27155;
            double t27157 = 1.0/(t27146*t27146);
            double t27158 = d2*gamma_aa[index]*t27150*t27144*8.0;
            double t27159 = d2*t27140*t27151*t27136*8.0;
            double t27160 = t27158+t27159;
            double t27161 = gamma_aa[index]*gamma_aa[index];
            double t27162 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t27163 = 1.0/pow(t27149,3.0/2.0);
            double t27164 = 1.0/pow(rho_a[index],1.0E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27143*t27152*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t27152*t27147*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t27153*t27138*(d1*gamma_aa[index]* \
               t27150*t27152*4.0E1+d1*t27140*t27136*t27164*(5.6E1/3.0)-d1*t27161*t27162*t27163*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t27138*t27157*(d2*gamma_aa[index]*t27150*t27152*4.0E1+d2*t27140*t27136*t27164*(5.6E1/ \
               3.0)-d2*t27161*t27162*t27163*(3.2E1/3.0))+d1*e1*gamma_aa[index]*1.0/(t27142*t27142*t27142)*t27138* \
               (t27156*t27156)*2.0+d2*e2*gamma_aa[index]*(t27160*t27160)*1.0/(t27146*t27146*t27146)*t27138*2.0-d1* \
               e1*gamma_aa[index]*t27144*t27153*t27156*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t27160*t27144*t27157*(1.6E1/ \
               3.0))+pow(rho_a[index],1.0/3.0)*(d1*e1*gamma_aa[index]*t27143*t27144*(8.0/3.0)+d2*e2*gamma_aa[index]* \
               t27144*t27147*(8.0/3.0)-d1*e1*gamma_aa[index]*t27153*t27138*t27156-d2*e2*gamma_aa[index]*t27160*t27138* \
               t27157)*(8.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t27143*t27138+d2*e2* \
               gamma_aa[index]*t27138*t27147)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t27537 = sqrt(gamma_aa[index]);
            double t27538 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27539 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27540 = t27537*t27538;
            double t27541 = log(t27540+sqrt(t27540*t27540+1.0));
            double t27542 = d1*t27541*t27537*t27538*6.0;
            double t27543 = t27542+1.0;
            double t27544 = 1.0/t27543;
            double t27545 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27546 = d2*t27541*t27537*t27538*6.0;
            double t27547 = t27546+1.0;
            double t27548 = 1.0/t27547;
            double t27549 = gamma_aa[index]*t27539;
            double t27550 = t27549+1.0;
            double t27551 = 1.0/sqrt(t27550);
            double t27552 = 1.0/pow(rho_a[index],7.0/3.0);
            double t27553 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t27554 = 1.0/(t27543*t27543);
            double t27555 = d1*gamma_aa[index]*t27551*t27545*8.0;
            double t27556 = d1*t27541*t27552*t27537*8.0;
            double t27557 = t27555+t27556;
            double t27558 = 1.0/(t27547*t27547);
            double t27559 = d2*gamma_aa[index]*t27551*t27545*8.0;
            double t27560 = d2*t27541*t27552*t27537*8.0;
            double t27561 = t27560+t27559;
            double t27562 = gamma_aa[index]*gamma_aa[index];
            double t27563 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t27564 = 1.0/pow(t27550,3.0/2.0);
            double t27565 = 1.0/pow(rho_a[index],1.0E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27544*t27553*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t27553*t27548*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t27554*t27539*(d1*gamma_aa[index]* \
               t27551*t27553*4.0E1+d1*t27541*t27537*t27565*(5.6E1/3.0)-d1*t27562*t27563*t27564*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t27539*t27558*(d2*gamma_aa[index]*t27551*t27553*4.0E1+d2*t27541*t27537*t27565*(5.6E1/ \
               3.0)-d2*t27562*t27563*t27564*(3.2E1/3.0))+d1*e1*gamma_aa[index]*1.0/(t27543*t27543*t27543)*t27539* \
               (t27557*t27557)*2.0+d2*e2*gamma_aa[index]*(t27561*t27561)*1.0/(t27547*t27547*t27547)*t27539*2.0-d1* \
               e1*gamma_aa[index]*t27545*t27554*t27557*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t27561*t27545*t27558*(1.6E1/ \
               3.0))+pow(rho_a[index],1.0/3.0)*(d1*e1*gamma_aa[index]*t27544*t27545*(8.0/3.0)+d2*e2*gamma_aa[index]* \
               t27545*t27548*(8.0/3.0)-d1*e1*gamma_aa[index]*t27554*t27539*t27557-d2*e2*gamma_aa[index]*t27561*t27539* \
               t27558)*(8.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t27544*t27539+d2*e2* \
               gamma_aa[index]*t27539*t27548)*(4.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27167 = sqrt(gamma_bb[index]);
            double t27168 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27169 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27170 = t27167*t27168;
            double t27171 = log(t27170+sqrt(t27170*t27170+1.0));
            double t27172 = d1*t27171*t27167*t27168*6.0;
            double t27173 = t27172+1.0;
            double t27174 = 1.0/t27173;
            double t27175 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27176 = d2*t27171*t27167*t27168*6.0;
            double t27177 = t27176+1.0;
            double t27178 = 1.0/t27177;
            double t27179 = gamma_bb[index]*t27169;
            double t27180 = t27179+1.0;
            double t27181 = 1.0/sqrt(t27180);
            double t27182 = 1.0/pow(rho_b[index],7.0/3.0);
            double t27183 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t27184 = 1.0/(t27173*t27173);
            double t27185 = d1*gamma_bb[index]*t27181*t27175*8.0;
            double t27186 = d1*t27171*t27182*t27167*8.0;
            double t27187 = t27185+t27186;
            double t27188 = 1.0/(t27177*t27177);
            double t27189 = d2*gamma_bb[index]*t27181*t27175*8.0;
            double t27190 = d2*t27171*t27182*t27167*8.0;
            double t27191 = t27190+t27189;
            double t27192 = gamma_bb[index]*gamma_bb[index];
            double t27193 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t27194 = 1.0/pow(t27180,3.0/2.0);
            double t27195 = 1.0/pow(rho_b[index],1.0E1/3.0);
            v_rho_b_rho_b_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27174*t27183*(8.8E1/9.0) \
               +d2*e2*gamma_bb[index]*t27183*t27178*(8.8E1/9.0)-d1*e1*gamma_bb[index]*t27184*t27169*(d1*gamma_bb[index]* \
               t27181*t27183*4.0E1+d1*t27171*t27167*t27195*(5.6E1/3.0)-d1*t27192*t27193*t27194*(3.2E1/3.0))-d2*e2* \
               gamma_bb[index]*t27169*t27188*(d2*gamma_bb[index]*t27181*t27183*4.0E1+d2*t27171*t27167*t27195*(5.6E1/ \
               3.0)-d2*t27192*t27193*t27194*(3.2E1/3.0))+d1*e1*gamma_bb[index]*1.0/(t27173*t27173*t27173)*t27169* \
               (t27187*t27187)*2.0+d2*e2*gamma_bb[index]*(t27191*t27191)*1.0/(t27177*t27177*t27177)*t27169*2.0-d1* \
               e1*gamma_bb[index]*t27175*t27184*t27187*(1.6E1/3.0)-d2*e2*gamma_bb[index]*t27191*t27175*t27188*(1.6E1/ \
               3.0))+pow(rho_b[index],1.0/3.0)*(d1*e1*gamma_bb[index]*t27174*t27175*(8.0/3.0)+d2*e2*gamma_bb[index]* \
               t27175*t27178*(8.0/3.0)-d1*e1*gamma_bb[index]*t27184*t27169*t27187-d2*e2*gamma_bb[index]*t27191*t27169* \
               t27188)*(8.0/3.0)-1.0/pow(rho_b[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_bb[index]*t27174*t27169+d2*e2* \
               gamma_bb[index]*t27169*t27178)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t27382 = sqrt(gamma_bb[index]);
            double t27383 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27384 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27385 = t27382*t27383;
            double t27386 = log(t27385+sqrt(t27385*t27385+1.0));
            double t27387 = d1*t27382*t27383*t27386*6.0;
            double t27388 = t27387+1.0;
            double t27389 = 1.0/t27388;
            double t27390 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27391 = d2*t27382*t27383*t27386*6.0;
            double t27392 = t27391+1.0;
            double t27393 = 1.0/t27392;
            double t27394 = gamma_bb[index]*t27384;
            double t27395 = t27394+1.0;
            double t27396 = 1.0/sqrt(t27395);
            double t27397 = 1.0/pow(rho_b[index],7.0/3.0);
            double t27398 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t27399 = 1.0/(t27388*t27388);
            double t27400 = d1*gamma_bb[index]*t27390*t27396*8.0;
            double t27401 = d1*t27382*t27386*t27397*8.0;
            double t27402 = t27400+t27401;
            double t27403 = 1.0/(t27392*t27392);
            double t27404 = d2*gamma_bb[index]*t27390*t27396*8.0;
            double t27405 = d2*t27382*t27386*t27397*8.0;
            double t27406 = t27404+t27405;
            double t27407 = gamma_bb[index]*gamma_bb[index];
            double t27408 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t27409 = 1.0/pow(t27395,3.0/2.0);
            double t27410 = 1.0/pow(rho_b[index],1.0E1/3.0);
            v_rho_b_rho_b_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27389*t27398*(8.8E1/9.0) \
               +d2*e2*gamma_bb[index]*t27393*t27398*(8.8E1/9.0)-d1*e1*gamma_bb[index]*t27384*t27399*(d1*gamma_bb[index]* \
               t27396*t27398*4.0E1+d1*t27410*t27382*t27386*(5.6E1/3.0)-d1*t27407*t27408*t27409*(3.2E1/3.0))-d2*e2* \
               gamma_bb[index]*t27403*t27384*(d2*gamma_bb[index]*t27396*t27398*4.0E1+d2*t27410*t27382*t27386*(5.6E1/ \
               3.0)-d2*t27407*t27408*t27409*(3.2E1/3.0))+d1*e1*gamma_bb[index]*(t27402*t27402)*t27384*1.0/(t27388* \
               t27388*t27388)*2.0+d2*e2*gamma_bb[index]*(t27406*t27406)*1.0/(t27392*t27392*t27392)*t27384*2.0-d1* \
               e1*gamma_bb[index]*t27402*t27390*t27399*(1.6E1/3.0)-d2*e2*gamma_bb[index]*t27403*t27406*t27390*(1.6E1/ \
               3.0))+pow(rho_b[index],1.0/3.0)*(d1*e1*gamma_bb[index]*t27390*t27389*(8.0/3.0)+d2*e2*gamma_bb[index]* \
               t27390*t27393*(8.0/3.0)-d1*e1*gamma_bb[index]*t27402*t27384*t27399-d2*e2*gamma_bb[index]*t27403*t27406* \
               t27384)*(8.0/3.0)-1.0/pow(rho_b[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_bb[index]*t27384*t27389+d2*e2* \
               gamma_bb[index]*t27384*t27393)*(4.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27197 = sqrt(gamma_aa[index]);
                double t27198 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27199 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27200 = t27197*t27198;
                double t27201 = log(t27200+sqrt(t27200*t27200+1.0));
                double t27202 = d1*t27201*t27197*t27198*6.0;
                double t27203 = t27202+1.0;
                double t27204 = gamma_aa[index]*t27199;
                double t27205 = t27204+1.0;
                double t27206 = 1.0/sqrt(t27205);
                double t27207 = 1.0/sqrt(gamma_aa[index]);
                double t27208 = d2*t27201*t27197*t27198*6.0;
                double t27209 = t27208+1.0;
                double t27210 = 1.0/t27203;
                double t27211 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t27212 = 1.0/t27209;
                double t27213 = 1.0/(t27203*t27203);
                double t27214 = 1.0/(t27209*t27209);
                double t27215 = 1.0/pow(rho_a[index],7.0/3.0);
                double t27216 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t27217 = 1.0/pow(t27205,3.0/2.0);
                double t27218 = d1*t27206*t27199*3.0;
                double t27219 = d1*t27201*t27207*t27198*3.0;
                double t27220 = t27218+t27219;
                double t27221 = d2*t27206*t27199*3.0;
                double t27222 = d2*t27201*t27207*t27198*3.0;
                double t27223 = t27221+t27222;
                double t27224 = d1*gamma_aa[index]*t27211*t27206*8.0;
                double t27225 = d1*t27201*t27215*t27197*8.0;
                double t27226 = t27224+t27225;
                double t27227 = d2*gamma_aa[index]*t27211*t27206*8.0;
                double t27228 = d2*t27201*t27215*t27197*8.0;
                double t27229 = t27227+t27228;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27210*t27211*(-8.0/3.0)-d2*e2*t27211* \
                   t27212*(8.0/3.0)+d1*e1*t27213*t27226*t27199+d2*e2*t27214*t27229*t27199+d1*e1*gamma_aa[index]*t27213* \
                   t27199*(d1*t27211*t27206*1.2E1-d1*gamma_aa[index]*t27216*t27217*4.0+d1*t27201*t27215*t27207*4.0)+d2* \
                   e2*gamma_aa[index]*t27214*t27199*(d2*t27211*t27206*1.2E1-d2*gamma_aa[index]*t27216*t27217*4.0+d2*t27201* \
                   t27215*t27207*4.0)+d1*e1*gamma_aa[index]*t27211*t27220*t27213*(8.0/3.0)+d2*e2*gamma_aa[index]*t27211* \
                   t27214*t27223*(8.0/3.0)-d1*e1*gamma_aa[index]*t27220*1.0/(t27203*t27203*t27203)*t27226*t27199*2.0- \
                   d2*e2*gamma_aa[index]*t27223*1.0/(t27209*t27209*t27209)*t27229*t27199*2.0)-pow(rho_a[index],1.0/3.0) \
                   *(d1*e1*t27210*t27199+d2*e2*t27212*t27199-d1*e1*gamma_aa[index]*t27220*t27213*t27199-d2*e2*gamma_aa[index]* \
                   t27214*t27223*t27199)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t27569 = sqrt(gamma_aa[index]);
                double t27570 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27571 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27572 = t27570*t27569;
                double t27573 = log(t27572+sqrt(t27572*t27572+1.0));
                double t27574 = d1*t27570*t27573*t27569*6.0;
                double t27575 = t27574+1.0;
                double t27576 = gamma_aa[index]*t27571;
                double t27577 = t27576+1.0;
                double t27578 = 1.0/sqrt(t27577);
                double t27579 = 1.0/sqrt(gamma_aa[index]);
                double t27580 = d2*t27570*t27573*t27569*6.0;
                double t27581 = t27580+1.0;
                double t27582 = 1.0/t27575;
                double t27583 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t27584 = 1.0/t27581;
                double t27585 = 1.0/(t27575*t27575);
                double t27586 = 1.0/(t27581*t27581);
                double t27587 = 1.0/pow(rho_a[index],7.0/3.0);
                double t27588 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t27589 = 1.0/pow(t27577,3.0/2.0);
                double t27590 = d1*t27571*t27578*3.0;
                double t27591 = d1*t27570*t27573*t27579*3.0;
                double t27592 = t27590+t27591;
                double t27593 = d2*t27571*t27578*3.0;
                double t27594 = d2*t27570*t27573*t27579*3.0;
                double t27595 = t27593+t27594;
                double t27596 = d1*gamma_aa[index]*t27583*t27578*8.0;
                double t27597 = d1*t27573*t27569*t27587*8.0;
                double t27598 = t27596+t27597;
                double t27599 = d2*gamma_aa[index]*t27583*t27578*8.0;
                double t27600 = d2*t27573*t27569*t27587*8.0;
                double t27601 = t27600+t27599;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27582*t27583*(-8.0/3.0)-d2*e2*t27583* \
                   t27584*(8.0/3.0)+d1*e1*t27571*t27585*t27598+d2*e2*t27601*t27571*t27586+d1*e1*gamma_aa[index]*t27571* \
                   t27585*(d1*t27583*t27578*1.2E1-d1*gamma_aa[index]*t27588*t27589*4.0+d1*t27573*t27587*t27579*4.0)+d2* \
                   e2*gamma_aa[index]*t27571*t27586*(d2*t27583*t27578*1.2E1-d2*gamma_aa[index]*t27588*t27589*4.0+d2*t27573* \
                   t27587*t27579*4.0)+d1*e1*gamma_aa[index]*t27583*t27592*t27585*(8.0/3.0)+d2*e2*gamma_aa[index]*t27583* \
                   t27586*t27595*(8.0/3.0)-d1*e1*gamma_aa[index]*t27571*t27592*1.0/(t27575*t27575*t27575)*t27598*2.0- \
                   d2*e2*gamma_aa[index]*t27601*t27571*1.0/(t27581*t27581*t27581)*t27595*2.0)-pow(rho_a[index],1.0/3.0) \
                   *(d1*e1*t27571*t27582+d2*e2*t27571*t27584-d1*e1*gamma_aa[index]*t27571*t27592*t27585-d2*e2*gamma_aa[index]* \
                   t27571*t27586*t27595)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27235 = sqrt(gamma_bb[index]);
                double t27236 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27237 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27238 = t27235*t27236;
                double t27239 = log(t27238+sqrt(t27238*t27238+1.0));
                double t27240 = d1*t27235*t27236*t27239*6.0;
                double t27241 = t27240+1.0;
                double t27242 = gamma_bb[index]*t27237;
                double t27243 = t27242+1.0;
                double t27244 = 1.0/sqrt(t27243);
                double t27245 = 1.0/sqrt(gamma_bb[index]);
                double t27246 = d2*t27235*t27236*t27239*6.0;
                double t27247 = t27246+1.0;
                double t27248 = 1.0/t27241;
                double t27249 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t27250 = 1.0/t27247;
                double t27251 = 1.0/(t27241*t27241);
                double t27252 = 1.0/(t27247*t27247);
                double t27253 = 1.0/pow(rho_b[index],7.0/3.0);
                double t27254 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t27255 = 1.0/pow(t27243,3.0/2.0);
                double t27256 = d1*t27244*t27237*3.0;
                double t27257 = d1*t27236*t27245*t27239*3.0;
                double t27258 = t27256+t27257;
                double t27259 = d2*t27244*t27237*3.0;
                double t27260 = d2*t27236*t27245*t27239*3.0;
                double t27261 = t27260+t27259;
                double t27262 = d1*gamma_bb[index]*t27244*t27249*8.0;
                double t27263 = d1*t27235*t27253*t27239*8.0;
                double t27264 = t27262+t27263;
                double t27265 = d2*gamma_bb[index]*t27244*t27249*8.0;
                double t27266 = d2*t27235*t27253*t27239*8.0;
                double t27267 = t27265+t27266;
                v_rho_b_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27248*t27249*(-8.0/3.0)-d2*e2*t27250* \
                   t27249*(8.0/3.0)+d1*e1*t27251*t27237*t27264+d2*e2*t27252*t27237*t27267+d1*e1*gamma_bb[index]*t27251* \
                   t27237*(d1*t27244*t27249*1.2E1-d1*gamma_bb[index]*t27254*t27255*4.0+d1*t27253*t27245*t27239*4.0)+d2* \
                   e2*gamma_bb[index]*t27252*t27237*(d2*t27244*t27249*1.2E1-d2*gamma_bb[index]*t27254*t27255*4.0+d2*t27253* \
                   t27245*t27239*4.0)+d1*e1*gamma_bb[index]*t27251*t27249*t27258*(8.0/3.0)+d2*e2*gamma_bb[index]*t27252* \
                   t27261*t27249*(8.0/3.0)-d1*e1*gamma_bb[index]*1.0/(t27241*t27241*t27241)*t27237*t27264*t27258*2.0- \
                   d2*e2*gamma_bb[index]*t27261*t27237*1.0/(t27247*t27247*t27247)*t27267*2.0)-pow(rho_b[index],1.0/3.0) \
                   *(d1*e1*t27237*t27248+d2*e2*t27250*t27237-d1*e1*gamma_bb[index]*t27251*t27237*t27258-d2*e2*gamma_bb[index]* \
                   t27252*t27261*t27237)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27417 = sqrt(gamma_bb[index]);
                double t27418 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27419 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27420 = t27417*t27418;
                double t27421 = log(t27420+sqrt(t27420*t27420+1.0));
                double t27422 = d1*t27421*t27417*t27418*6.0;
                double t27423 = t27422+1.0;
                double t27424 = gamma_bb[index]*t27419;
                double t27425 = t27424+1.0;
                double t27426 = 1.0/sqrt(t27425);
                double t27427 = 1.0/sqrt(gamma_bb[index]);
                double t27428 = d2*t27421*t27417*t27418*6.0;
                double t27429 = t27428+1.0;
                double t27430 = 1.0/t27423;
                double t27431 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t27432 = 1.0/t27429;
                double t27433 = 1.0/(t27423*t27423);
                double t27434 = 1.0/(t27429*t27429);
                double t27435 = 1.0/pow(rho_b[index],7.0/3.0);
                double t27436 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t27437 = 1.0/pow(t27425,3.0/2.0);
                double t27438 = d1*t27426*t27419*3.0;
                double t27439 = d1*t27421*t27418*t27427*3.0;
                double t27440 = t27438+t27439;
                double t27441 = d2*t27426*t27419*3.0;
                double t27442 = d2*t27421*t27418*t27427*3.0;
                double t27443 = t27441+t27442;
                double t27444 = d1*gamma_bb[index]*t27431*t27426*8.0;
                double t27445 = d1*t27421*t27417*t27435*8.0;
                double t27446 = t27444+t27445;
                double t27447 = d2*gamma_bb[index]*t27431*t27426*8.0;
                double t27448 = d2*t27421*t27417*t27435*8.0;
                double t27449 = t27447+t27448;
                v_rho_b_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27430*t27431*(-8.0/3.0)-d2*e2*t27431* \
                   t27432*(8.0/3.0)+d1*e1*t27433*t27419*t27446+d2*e2*t27434*t27419*t27449+d1*e1*gamma_bb[index]*t27433* \
                   t27419*(d1*t27431*t27426*1.2E1-d1*gamma_bb[index]*t27436*t27437*4.0+d1*t27421*t27435*t27427*4.0)+d2* \
                   e2*gamma_bb[index]*t27434*t27419*(d2*t27431*t27426*1.2E1-d2*gamma_bb[index]*t27436*t27437*4.0+d2*t27421* \
                   t27435*t27427*4.0)+d1*e1*gamma_bb[index]*t27431*t27440*t27433*(8.0/3.0)+d2*e2*gamma_bb[index]*t27431* \
                   t27434*t27443*(8.0/3.0)-d1*e1*gamma_bb[index]*t27440*1.0/(t27423*t27423*t27423)*t27419*t27446*2.0- \
                   d2*e2*gamma_bb[index]*t27443*t27419*1.0/(t27429*t27429*t27429)*t27449*2.0)-pow(rho_b[index],1.0/3.0) \
                   *(d1*e1*t27430*t27419+d2*e2*t27432*t27419-d1*e1*gamma_bb[index]*t27440*t27433*t27419-d2*e2*gamma_bb[index]* \
                   t27434*t27443*t27419)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27269 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27270 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27271 = sqrt(gamma_aa[index]);
                double t27272 = t27270*t27271;
                double t27273 = log(t27272+sqrt(t27272*t27272+1.0));
                double t27274 = gamma_aa[index]*t27269;
                double t27275 = t27274+1.0;
                double t27276 = 1.0/sqrt(t27275);
                double t27277 = 1.0/sqrt(gamma_aa[index]);
                double t27278 = d1*t27276*t27269*3.0;
                double t27279 = d1*t27270*t27273*t27277*3.0;
                double t27280 = t27278+t27279;
                double t27281 = d1*t27270*t27271*t27273*6.0;
                double t27282 = t27281+1.0;
                double t27283 = d2*t27276*t27269*3.0;
                double t27284 = d2*t27270*t27273*t27277*3.0;
                double t27285 = t27283+t27284;
                double t27286 = d2*t27270*t27271*t27273*6.0;
                double t27287 = t27286+1.0;
                double t27288 = 1.0/(t27282*t27282);
                double t27289 = 1.0/(t27287*t27287);
                double t27290 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t27291 = 1.0/pow(t27275,3.0/2.0);
                double t27292 = 1.0/gamma_aa[index];
                double t27293 = 1.0/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27280*t27269*t27288*-2.0-d2*e2*t27285* \
                   t27269*t27289*2.0+d1*e1*gamma_aa[index]*(t27280*t27280)*1.0/(t27282*t27282*t27282)*t27269*2.0+d2*e2* \
                   gamma_aa[index]*(t27285*t27285)*t27269*1.0/(t27287*t27287*t27287)*2.0+d1*e1*gamma_aa[index]*t27269* \
                   t27288*(d1*t27290*t27291*(3.0/2.0)+d1*t27270*t27273*t27293*(3.0/2.0)-d1*t27292*t27276*t27269*(3.0/ \
                   2.0))+d2*e2*gamma_aa[index]*t27269*t27289*(d2*t27290*t27291*(3.0/2.0)+d2*t27270*t27273*t27293*(3.0/ \
                   2.0)-d2*t27292*t27276*t27269*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                double t27608 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27609 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27610 = sqrt(gamma_aa[index]);
                double t27611 = t27610*t27609;
                double t27612 = log(t27611+sqrt(t27611*t27611+1.0));
                double t27613 = gamma_aa[index]*t27608;
                double t27614 = t27613+1.0;
                double t27615 = 1.0/sqrt(t27614);
                double t27616 = 1.0/sqrt(gamma_aa[index]);
                double t27617 = d1*t27615*t27608*3.0;
                double t27618 = d1*t27612*t27616*t27609*3.0;
                double t27619 = t27617+t27618;
                double t27620 = d1*t27610*t27612*t27609*6.0;
                double t27621 = t27620+1.0;
                double t27622 = d2*t27615*t27608*3.0;
                double t27623 = d2*t27612*t27616*t27609*3.0;
                double t27624 = t27622+t27623;
                double t27625 = d2*t27610*t27612*t27609*6.0;
                double t27626 = t27625+1.0;
                double t27627 = 1.0/(t27621*t27621);
                double t27628 = 1.0/(t27626*t27626);
                double t27629 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t27630 = 1.0/pow(t27614,3.0/2.0);
                double t27631 = 1.0/gamma_aa[index];
                double t27632 = 1.0/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27608*t27627*t27619*-2.0-d2*e2*t27624* \
                   t27608*t27628*2.0+d1*e1*gamma_aa[index]*1.0/(t27621*t27621*t27621)*t27608*(t27619*t27619)*2.0+d2*e2* \
                   gamma_aa[index]*(t27624*t27624)*t27608*1.0/(t27626*t27626*t27626)*2.0+d1*e1*gamma_aa[index]*t27608* \
                   t27627*(d1*t27630*t27629*(3.0/2.0)+d1*t27612*t27632*t27609*(3.0/2.0)-d1*t27631*t27615*t27608*(3.0/ \
                   2.0))+d2*e2*gamma_aa[index]*t27608*t27628*(d2*t27630*t27629*(3.0/2.0)+d2*t27612*t27632*t27609*(3.0/ \
                   2.0)-d2*t27631*t27615*t27608*(3.0/2.0)));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27299 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27300 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27301 = sqrt(gamma_bb[index]);
                double t27302 = t27300*t27301;
                double t27303 = log(t27302+sqrt(t27302*t27302+1.0));
                double t27304 = gamma_bb[index]*t27299;
                double t27305 = t27304+1.0;
                double t27306 = 1.0/sqrt(t27305);
                double t27307 = 1.0/sqrt(gamma_bb[index]);
                double t27308 = d1*t27306*t27299*3.0;
                double t27309 = d1*t27300*t27303*t27307*3.0;
                double t27310 = t27308+t27309;
                double t27311 = d1*t27300*t27301*t27303*6.0;
                double t27312 = t27311+1.0;
                double t27313 = d2*t27306*t27299*3.0;
                double t27314 = d2*t27300*t27303*t27307*3.0;
                double t27315 = t27313+t27314;
                double t27316 = d2*t27300*t27301*t27303*6.0;
                double t27317 = t27316+1.0;
                double t27318 = 1.0/(t27312*t27312);
                double t27319 = 1.0/(t27317*t27317);
                double t27320 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t27321 = 1.0/pow(t27305,3.0/2.0);
                double t27322 = 1.0/gamma_bb[index];
                double t27323 = 1.0/pow(gamma_bb[index],3.0/2.0);
                v_gamma_bb_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27310*t27318*t27299*-2.0-d2*e2*t27315* \
                   t27319*t27299*2.0+d1*e1*gamma_bb[index]*(t27310*t27310)*1.0/(t27312*t27312*t27312)*t27299*2.0+d2*e2* \
                   gamma_bb[index]*(t27315*t27315)*1.0/(t27317*t27317*t27317)*t27299*2.0+d1*e1*gamma_bb[index]*t27318* \
                   t27299*(d1*t27320*t27321*(3.0/2.0)+d1*t27300*t27303*t27323*(3.0/2.0)-d1*t27322*t27306*t27299*(3.0/ \
                   2.0))+d2*e2*gamma_bb[index]*t27319*t27299*(d2*t27320*t27321*(3.0/2.0)+d2*t27300*t27303*t27323*(3.0/ \
                   2.0)-d2*t27322*t27306*t27299*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27456 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27457 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27458 = sqrt(gamma_bb[index]);
                double t27459 = t27457*t27458;
                double t27460 = log(t27459+sqrt(t27459*t27459+1.0));
                double t27461 = gamma_bb[index]*t27456;
                double t27462 = t27461+1.0;
                double t27463 = 1.0/sqrt(t27462);
                double t27464 = 1.0/sqrt(gamma_bb[index]);
                double t27465 = d1*t27463*t27456*3.0;
                double t27466 = d1*t27460*t27464*t27457*3.0;
                double t27467 = t27465+t27466;
                double t27468 = d1*t27460*t27457*t27458*6.0;
                double t27469 = t27468+1.0;
                double t27470 = d2*t27463*t27456*3.0;
                double t27471 = d2*t27460*t27464*t27457*3.0;
                double t27472 = t27470+t27471;
                double t27473 = d2*t27460*t27457*t27458*6.0;
                double t27474 = t27473+1.0;
                double t27475 = 1.0/(t27469*t27469);
                double t27476 = 1.0/(t27474*t27474);
                double t27477 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t27478 = 1.0/pow(t27462,3.0/2.0);
                double t27479 = 1.0/gamma_bb[index];
                double t27480 = 1.0/pow(gamma_bb[index],3.0/2.0);
                v_gamma_bb_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27456*t27475*t27467*-2.0-d2*e2*t27472* \
                   t27456*t27476*2.0+d1*e1*gamma_bb[index]*t27456*(t27467*t27467)*1.0/(t27469*t27469*t27469)*2.0+d2*e2* \
                   gamma_bb[index]*(t27472*t27472)*t27456*1.0/(t27474*t27474*t27474)*2.0+d1*e1*gamma_bb[index]*t27456* \
                   t27475*(d1*t27477*t27478*(3.0/2.0)+d1*t27460*t27480*t27457*(3.0/2.0)-d1*t27463*t27456*t27479*(3.0/ \
                   2.0))+d2*e2*gamma_bb[index]*t27456*t27476*(d2*t27477*t27478*(3.0/2.0)+d2*t27460*t27480*t27457*(3.0/ \
                   2.0)-d2*t27463*t27456*t27479*(3.0/2.0)));
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

