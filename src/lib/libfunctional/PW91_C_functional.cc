/**********************************************************
* PW91_C_functional.cc: definitions for PW91_C_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "PW91_C_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

PW91_C_Functional::PW91_C_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "PW91_C";
    description_ = "PW91 Correlation";
    citation_ = "J.P. Perdew, et. al., Phys. Rev. B., 46(11), 6671-6687, 1992";
    
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double pi_m12 = 5.6418958354775628E-01;
    params_.push_back(make_pair("pi_m12",pi_m12));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double alph = 8.9999999999999997E-02;
    params_.push_back(make_pair("alph",alph));
    double bet = 6.6726322680061109E-02;
    params_.push_back(make_pair("bet",bet));
    double nu = 1.5755920349483143E+01;
    params_.push_back(make_pair("nu",nu));
    double Cc0 = 4.2350000000000000E-03;
    params_.push_back(make_pair("Cc0",Cc0));
    double Cx = -1.6670000000000001E-03;
    params_.push_back(make_pair("Cx",Cx));
    double Cc1 = 2.5680000000000001E+00;
    params_.push_back(make_pair("Cc1",Cc1));
    double Cc2 = 2.3265999999999998E+01;
    params_.push_back(make_pair("Cc2",Cc2));
    double Cc3 = 7.3889999999999997E-03;
    params_.push_back(make_pair("Cc3",Cc3));
    double Cc4 = 8.7230000000000008E+00;
    params_.push_back(make_pair("Cc4",Cc4));
    double Cc5 = 4.7199999999999998E-01;
    params_.push_back(make_pair("Cc5",Cc5));
    double Cc6 = 7.3889999999999997E-02;
    params_.push_back(make_pair("Cc6",Cc6));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
PW91_C_Functional::~PW91_C_Functional()
{
}
void PW91_C_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double c = params_[0].second;
    double two_13 = params_[1].second;
    double k = params_[2].second;
    double pi_m12 = params_[3].second;
    double d2fz0 = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double alph = params_[23].second;
    double bet = params_[24].second;
    double nu = params_[25].second;
    double Cc0 = params_[26].second;
    double Cx = params_[27].second;
    double Cc1 = params_[28].second;
    double Cc2 = params_[29].second;
    double Cc3 = params_[30].second;
    double Cc4 = params_[31].second;
    double Cc5 = params_[32].second;
    double Cc6 = params_[33].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t17008 = 1/bet;
            double t17009 = rho_a[index]*2.0;
            double t17010 = 1/pow(t17009,1.0/3.0);
            double t17011 = c*t17010;
            double t17012 = 1/(bet*bet);
            double t17013 = gamma_aa[index]*gamma_aa[index];
            double t17014 = 1/(k*k);
            double t17015 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t17016 = 1/c0p;
            double t17017 = sqrt(t17011);
            double t17018 = b1p*t17017;
            double t17019 = pow(t17011,3.0/2.0);
            double t17020 = b3p*t17019;
            double t17021 = b2p*c*t17010;
            double t17022 = c*c;
            double t17023 = 1/pow(t17009,2.0/3.0);
            double t17024 = b4p*t17022*t17023;
            double t17025 = t17020+t17021+t17024+t17018;
            double t17026 = 1/t17025;
            double t17027 = t17016*t17026*(1.0/2.0);
            double t17028 = t17027+1.0;
            double t17029 = log(t17028);
            double t17030 = a1p*c*t17010;
            double t17031 = t17030+1.0;
            double t17032 = alph*c0p*t17012*t17031*t17029*4.0;
            double t17033 = exp(t17032);
            double t17034 = t17033-1.0;
            double t17035 = 1/pow(t17009,1.4E1/3.0);
            double t17036 = 1/k;
            double t17037 = 1/(pi_m12*pi_m12);
            double t17038 = 1/t17034;
            double t17039 = 1/pow(t17009,7.0/3.0);
            functional_[index] = rho_a[index]*(((bet*bet)*log((alph*t17008*(gamma_aa[index]*t17036*t17037*t17039* \
               (1.0/4.0)+alph*t17013*t17014*t17015*t17008*t17035*t17038*(1.0/8.0))*2.0)/((alph*alph)*t17012*t17013* \
               t17014*t17015*1/(t17034*t17034)*t17035*(1.0/4.0)+alph*gamma_aa[index]*t17008*t17036*t17037*t17038* \
               t17039*(1.0/2.0)+1.0)+1.0)*(-1.0/2.0))/alph+c0p*t17031*t17029*2.0+gamma_aa[index]*nu*t17036*t17037* \
               t17039*exp(gamma_aa[index]*t17014*1/pow(t17009,8.0/3.0)*-1.0E2)*(Cc0+Cx*(1.0E1/7.0)-(Cc1*(1.0/1.0E3) \
               +Cc2*c*t17010*(1.0/1.0E3)+Cc3*t17022*t17023*(1.0/1.0E3))/(Cc4*c*t17010+Cc5*t17022*t17023+(Cc6*c*t17022* \
               (1.0/2.0))/rho_a[index]+1.0))*(1.0/4.0))*-2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t17041 = rho_a[index]*2.0;
            double t17042 = 1/pow(t17041,1.0/3.0);
            double t17043 = c*t17042;
            double t17044 = sqrt(t17043);
            double t17045 = b1p*t17044;
            double t17046 = pow(t17043,3.0/2.0);
            double t17047 = b3p*t17046;
            double t17048 = b2p*c*t17042;
            double t17049 = c*c;
            double t17050 = 1/pow(t17041,2.0/3.0);
            double t17051 = b4p*t17050*t17049;
            double t17052 = t17051+t17045+t17047+t17048;
            double t17053 = 1/pow(t17041,4.0/3.0);
            double t17054 = 1/bet;
            double t17055 = 1/c0p;
            double t17056 = 1/t17052;
            double t17057 = t17055*t17056*(1.0/2.0);
            double t17058 = t17057+1.0;
            double t17059 = a1p*c*t17042;
            double t17060 = t17059+1.0;
            double t17061 = gamma_aa[index]*gamma_aa[index];
            double t17062 = 1/(k*k);
            double t17063 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t17064 = 1/(bet*bet);
            double t17065 = log(t17058);
            double t17066 = alph*c0p*t17060*t17064*t17065*4.0;
            double t17067 = exp(t17066);
            double t17068 = t17067-1.0;
            double t17069 = 1/t17058;
            double t17070 = 1/(t17052*t17052);
            double t17071 = b2p*c*t17053*(1.0/3.0);
            double t17072 = 1/pow(t17041,5.0/3.0);
            double t17073 = b4p*t17072*t17049*(2.0/3.0);
            double t17074 = 1/sqrt(t17043);
            double t17075 = b1p*c*t17053*t17074*(1.0/6.0);
            double t17076 = b3p*c*t17044*t17053*(1.0/2.0);
            double t17077 = t17071+t17073+t17075+t17076;
            double t17078 = t17060*t17070*t17077*t17069;
            double t17079 = alph*alph;
            double t17080 = 1/(t17068*t17068);
            double t17081 = 1/pow(t17041,1.4E1/3.0);
            double t17082 = 1/k;
            double t17083 = 1/(pi_m12*pi_m12);
            double t17084 = 1/t17068;
            double t17085 = 1/pow(t17041,7.0/3.0);
            double t17086 = t17061*t17062*t17080*t17063*t17081*t17064*t17079*(1.0/4.0);
            double t17087 = alph*gamma_aa[index]*t17054*t17082*t17083*t17084*t17085*(1.0/2.0);
            double t17088 = t17086+t17087+1.0;
            double t17089 = 1/pow(t17041,1.7E1/3.0);
            double t17090 = 1/pow(t17041,1.0E1/3.0);
            double t17091 = 1/(bet*bet*bet);
            double t17093 = a1p*c*c0p*t17053*t17065*(2.0/3.0);
            double t17092 = -t17093+t17078;
            double t17094 = gamma_aa[index]*t17082*t17083*t17085*(1.0/4.0);
            double t17095 = alph*t17061*t17062*t17054*t17063*t17081*t17084*(1.0/8.0);
            double t17096 = t17094+t17095;
            double t17097 = 1/t17088;
            double t17098 = Cc4*c*t17042;
            double t17099 = 1/rho_a[index];
            double t17100 = Cc6*c*t17049*t17099*(1.0/2.0);
            double t17101 = Cc5*t17050*t17049;
            double t17102 = t17100+t17101+t17098+1.0;
            double t17103 = 1/pow(t17041,8.0/3.0);
            double t17110 = gamma_aa[index]*t17103*t17062*1.0E2;
            double t17104 = exp(-t17110);
            double t17105 = Cc1*(1.0/1.0E3);
            double t17106 = Cc2*c*t17042*(1.0/1.0E3);
            double t17107 = Cc3*t17050*t17049*(1.0/1.0E3);
            double t17108 = t17105+t17106+t17107;
            double t17109 = 1/t17102;
            double t17111 = Cx*(1.0E1/7.0);
            double t17117 = t17108*t17109;
            double t17112 = Cc0+t17111-t17117;
            double t17113 = 1/alph;
            double t17114 = bet*bet;
            double t17115 = alph*t17054*t17096*t17097*2.0;
            double t17116 = t17115+1.0;
            v_rho_a_[index] = rho_a[index]*(-t17093+t17078+(t17113*t17114*(alph*t17054*t17097*(gamma_aa[index]* \
               t17090*t17082*t17083*(7.0/1.2E1)+alph*t17061*t17062*t17054*t17063*t17084*t17089*(7.0/1.2E1)+t17061* \
               t17062*t17080*t17063*t17081*t17091*t17092*t17067*t17079*(1.0/4.0))*2.0-alph*t17054*t17096*1/(t17088* \
               t17088)*(alph*gamma_aa[index]*t17054*t17090*t17082*t17083*t17084*(7.0/6.0)+t17061*t17062*t17080*t17063* \
               t17064*t17079*t17089*(7.0/6.0)+gamma_aa[index]*t17080*t17082*t17091*t17083*t17092*t17067*t17085*t17079+ \
               alph*1/(bet*bet*bet*bet)*t17061*t17062*t17063*t17081*t17092*t17067*1/(t17068*t17068*t17068)*t17079) \
               *2.0)*(1.0/2.0))/t17116+1/(k*k*k)*nu*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index])*t17112*t17104*t17061*t17083*(2.5E1/2.4E1)-gamma_aa[index]*nu*t17112*t17104*t17090*t17082* \
               t17083*(7.0/1.2E1)+gamma_aa[index]*nu*t17104*t17082*t17083*t17085*(t17109*(Cc2*c*t17053*(1.0/3.0E3) \
               +Cc3*t17072*t17049*(1.0/1.5E3))-1/(t17102*t17102)*t17108*(Cc4*c*t17053*(1.0/3.0)+Cc5*t17072*t17049* \
               (2.0/3.0)+Cc6*c*1/(rho_a[index]*rho_a[index])*t17049*(1.0/4.0)))*(1.0/4.0))*-2.0+t17113*t17114*log(t17116) \
               *(1.0/2.0)-c0p*t17060*t17065*2.0-gamma_aa[index]*nu*t17112*t17104*t17082*t17083*t17085*(1.0/4.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t17119 = 1/bet;
                double t17120 = rho_a[index]*2.0;
                double t17121 = 1/pow(t17120,1.0/3.0);
                double t17122 = c*t17121;
                double t17123 = 1/(bet*bet);
                double t17124 = 1/(k*k);
                double t17125 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t17126 = 1/c0p;
                double t17127 = sqrt(t17122);
                double t17128 = b1p*t17127;
                double t17129 = pow(t17122,3.0/2.0);
                double t17130 = b3p*t17129;
                double t17131 = b2p*c*t17121;
                double t17132 = c*c;
                double t17133 = 1/pow(t17120,2.0/3.0);
                double t17134 = b4p*t17132*t17133;
                double t17135 = t17130+t17131+t17134+t17128;
                double t17136 = 1/t17135;
                double t17137 = t17126*t17136*(1.0/2.0);
                double t17138 = t17137+1.0;
                double t17139 = log(t17138);
                double t17140 = a1p*c*t17121;
                double t17141 = t17140+1.0;
                double t17142 = alph*c0p*t17123*t17141*t17139*4.0;
                double t17143 = exp(t17142);
                double t17144 = t17143-1.0;
                double t17145 = 1/pow(t17120,1.4E1/3.0);
                double t17146 = 1/k;
                double t17147 = 1/(pi_m12*pi_m12);
                double t17148 = 1/t17144;
                double t17149 = 1/pow(t17120,7.0/3.0);
                double t17150 = alph*alph;
                double t17151 = 1/(t17144*t17144);
                double t17152 = gamma_aa[index]*gamma_aa[index];
                double t17153 = t17123*t17150*t17124*t17151*t17125*t17152*t17145*(1.0/4.0);
                double t17154 = alph*gamma_aa[index]*t17119*t17146*t17147*t17148*t17149*(1.0/2.0);
                double t17155 = t17153+t17154+1.0;
                double t17156 = gamma_aa[index]*t17146*t17147*t17149*(1.0/4.0);
                double t17157 = alph*t17124*t17125*t17152*t17145*t17119*t17148*(1.0/8.0);
                double t17158 = t17156+t17157;
                double t17159 = 1/t17155;
                double t17160 = 1/pow(t17120,8.0/3.0);
                double t17180 = gamma_aa[index]*t17124*t17160*1.0E2;
                double t17161 = exp(-t17180);
                double t17162 = Cx*(1.0E1/7.0);
                double t17163 = Cc1*(1.0/1.0E3);
                double t17164 = Cc2*c*t17121*(1.0/1.0E3);
                double t17165 = Cc3*t17132*t17133*(1.0/1.0E3);
                double t17166 = t17163+t17164+t17165;
                double t17167 = Cc4*c*t17121;
                double t17168 = 1/rho_a[index];
                double t17169 = Cc6*c*t17132*t17168*(1.0/2.0);
                double t17170 = Cc5*t17132*t17133;
                double t17171 = t17170+t17167+t17169+1.0;
                double t17172 = 1/t17171;
                double t17181 = t17172*t17166;
                double t17173 = Cc0+t17162-t17181;
                double t17174 = 1/alph;
                double t17175 = bet*bet;
                double t17176 = 1/(t17155*t17155);
                double t17177 = alph*t17119*t17158*t17159*2.0;
                double t17178 = t17177+1.0;
                double t17179 = 1/t17178;
                double t17182 = 1/(k*k*k);
                double t17183 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                v_gamma_aa_[index] = rho_a[index]*(t17174*t17175*t17179*(alph*t17119*t17159*(t17146*t17147*t17149* \
                   (1.0/8.0)+alph*gamma_aa[index]*t17124*t17125*t17145*t17119*t17148*(1.0/8.0))*2.0-alph*t17119*t17158* \
                   t17176*(alph*t17119*t17146*t17147*t17148*t17149*(1.0/4.0)+gamma_aa[index]*t17123*t17150*t17124*t17151* \
                   t17125*t17145*(1.0/4.0))*2.0)*(1.0/2.0)-nu*t17161*t17146*t17173*t17147*t17149*(1.0/8.0)+gamma_aa[index]* \
                   nu*t17161*t17173*t17182*t17147*t17183*(2.5E1/6.4E1))*2.0+rho_a[index]*(t17174*t17175*t17179*(alph* \
                   t17119*t17159*(t17146*t17147*t17149*(1.0/1.6E1)+alph*gamma_aa[index]*t17124*t17125*t17145*t17119*t17148* \
                   (1.0/1.6E1))*2.0-alph*t17119*t17158*t17176*(alph*t17119*t17146*t17147*t17148*t17149*(1.0/8.0)+gamma_aa[index]* \
                   t17123*t17150*t17124*t17151*t17125*t17145*(1.0/8.0))*2.0)*(1.0/2.0)-nu*t17161*t17146*t17173*t17147* \
                   t17149*(1.0/1.6E1)+gamma_aa[index]*nu*t17161*t17173*t17182*t17147*t17183*(2.5E1/1.28E2))*4.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
                
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
                    
            //V_gamma_aa_gamma_aa
                    
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
                    
            //V_tau_a_tau_a
                   
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                       
            }
        }
    }
}
void PW91_C_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double c = params_[0].second;
    double two_13 = params_[1].second;
    double k = params_[2].second;
    double pi_m12 = params_[3].second;
    double d2fz0 = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double alph = params_[23].second;
    double bet = params_[24].second;
    double nu = params_[25].second;
    double Cc0 = params_[26].second;
    double Cx = params_[27].second;
    double Cc1 = params_[28].second;
    double Cc2 = params_[29].second;
    double Cc3 = params_[30].second;
    double Cc4 = params_[31].second;
    double Cc5 = params_[32].second;
    double Cc6 = params_[33].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t15066 = rho_a[index]+rho_b[index];
            double t15067 = 1/pow(t15066,1.0/3.0);
            double t15068 = c*t15067;
            double t15069 = 1/t15066;
            double t15070 = rho_a[index]-rho_b[index];
            double t15071 = t15070*t15069;
            double t15072 = 1/bet;
            double t15073 = t15071+1.0;
            double t15074 = pow(t15073,2.0/3.0);
            double t15075 = t15074*(1.0/2.0);
            double t15076 = -t15071+1.0;
            double t15077 = pow(t15076,2.0/3.0);
            double t15078 = t15077*(1.0/2.0);
            double t15079 = t15075+t15078;
            double t15080 = 1/c0p;
            double t15081 = sqrt(t15068);
            double t15082 = b1p*t15081;
            double t15083 = pow(t15068,3.0/2.0);
            double t15084 = b3p*t15083;
            double t15085 = c*c;
            double t15086 = 1/pow(t15066,2.0/3.0);
            double t15087 = b4p*t15085*t15086;
            double t15088 = b2p*c*t15067;
            double t15089 = t15082+t15084+t15087+t15088;
            double t15090 = 1/t15089;
            double t15091 = t15080*t15090*(1.0/2.0);
            double t15092 = t15091+1.0;
            double t15093 = log(t15092);
            double t15094 = a1p*c*t15067;
            double t15095 = t15094+1.0;
            double t15096 = c0p*t15093*t15095*2.0;
            double t15097 = t15070*t15070;
            double t15098 = two_13*2.0;
            double t15099 = t15098-2.0;
            double t15100 = 1/t15099;
            double t15101 = 1/(t15066*t15066*t15066*t15066);
            double t15102 = t15097*t15097;
            double t15103 = pow(t15073,4.0/3.0);
            double t15104 = pow(t15076,4.0/3.0);
            double t15105 = t15103+t15104-2.0;
            double t15106 = gamma_ab[index]*2.0;
            double t15107 = gamma_aa[index]+gamma_bb[index]+t15106;
            double t15108 = 1/(bet*bet);
            double t15109 = 1/(k*k);
            double t15110 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t15111 = 1/(t15079*t15079*t15079);
            double t15112 = 1/c0f;
            double t15113 = b1f*t15081;
            double t15114 = b3f*t15083;
            double t15115 = b4f*t15085*t15086;
            double t15116 = b2f*c*t15067;
            double t15117 = t15113+t15114+t15115+t15116;
            double t15118 = 1/t15117;
            double t15119 = t15112*t15118*(1.0/2.0);
            double t15120 = t15119+1.0;
            double t15121 = log(t15120);
            double t15122 = a1f*c*t15067;
            double t15123 = t15122+1.0;
            double t15150 = c0f*t15121*t15123*2.0;
            double t15124 = -t15150+t15096;
            double t15125 = 1/d2fz0;
            double t15126 = 1/Aa;
            double t15127 = b1a*t15081;
            double t15128 = b3a*t15083;
            double t15129 = b4a*t15085*t15086;
            double t15130 = b2a*c*t15067;
            double t15131 = t15130+t15127+t15128+t15129;
            double t15132 = 1/t15131;
            double t15133 = t15132*t15126*(1.0/2.0);
            double t15134 = t15133+1.0;
            double t15135 = log(t15134);
            double t15136 = a1a*c*t15067;
            double t15137 = t15136+1.0;
            double t15138 = t15101*t15102;
            double t15139 = t15138-1.0;
            double t15140 = Aa*t15100*t15105*t15125*t15135*t15137*t15139*2.0;
            double t15141 = t15140+t15096-t15100*t15101*t15102*t15105*t15124;
            double t15142 = alph*t15111*t15141*t15108*2.0;
            double t15143 = exp(t15142);
            double t15144 = t15143-1.0;
            double t15145 = 1/pow(t15066,1.4E1/3.0);
            double t15146 = 1/(t15079*t15079*t15079*t15079);
            double t15147 = t15107*t15107;
            double t15148 = 1/k;
            double t15149 = 1/(pi_m12*pi_m12);
            double t15151 = 1/pow(t15066,7.0/3.0);
            double t15152 = 1/(t15079*t15079);
            double t15153 = t15079*t15079;
            double t15154 = t15150-t15096;
            double t15155 = t15100*t15101*t15102*t15105*t15154;
            functional_[index] = -t15066*(t15140+t15155+t15096-((bet*bet)*t15153*t15079*log((alph*t15072*(t15151* \
               t15107*t15152*t15148*t15149*(1.0/1.6E1)+(alph*t15110*t15072*t15109*t15145*t15146*t15147*(1.0/1.28E2) \
               )/t15144)*2.0)/((alph*t15151*t15107*t15152*t15072*t15148*t15149*(1.0/8.0))/(exp(alph*t15111*t15108* \
               (t15140+t15155+t15096)*2.0)-1.0)+(alph*alph)*t15110*t15108*1/(t15144*t15144)*t15109*t15145*t15146* \
               t15147*(1.0/6.4E1)+1.0)+1.0)*(1.0/2.0))/alph+nu*t15151*t15107*t15148*t15149*t15079*exp(t15107*t15153* \
               t15109*1/pow(t15066,8.0/3.0)*-2.5E1)*(Cc0+Cx*(1.0E1/7.0)-(Cc1*(1.0/1.0E3)+Cc2*c*t15067*(1.0/1.0E3) \
               +Cc3*t15085*t15086*(1.0/1.0E3))/(Cc4*c*t15067+Cc5*t15085*t15086+Cc6*c*t15085*t15069+1.0))*(1.0/1.6E1) \
               );
        } else if (rho_a[index] > cutoff_) {
            double t16444 = rho_a[index]+rho_b[index];
            double t16445 = 1/bet;
            double t16446 = 1/pow(t16444,1.0/3.0);
            double t16447 = c*t16446;
            double t16448 = pow(2.0,1.0/3.0);
            double t16449 = sqrt(t16447);
            double t16450 = pow(t16447,3.0/2.0);
            double t16451 = c*c;
            double t16452 = 1/pow(t16444,2.0/3.0);
            double t16453 = 1/c0p;
            double t16454 = b1p*t16449;
            double t16455 = b3p*t16450;
            double t16456 = b4p*t16451*t16452;
            double t16457 = b2p*c*t16446;
            double t16458 = t16454+t16455+t16456+t16457;
            double t16459 = 1/t16458;
            double t16460 = t16453*t16459*(1.0/2.0);
            double t16461 = t16460+1.0;
            double t16462 = log(t16461);
            double t16463 = a1p*c*t16446;
            double t16464 = t16463+1.0;
            double t16465 = c0p*t16462*t16464*2.0;
            double t16466 = gamma_ab[index]*2.0;
            double t16467 = gamma_aa[index]+gamma_bb[index]+t16466;
            double t16468 = 1/(bet*bet);
            double t16469 = 1/(k*k);
            double t16470 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t16471 = 1/pow(t16444,1.4E1/3.0);
            double t16472 = t16448*2.0;
            double t16473 = t16472-2.0;
            double t16474 = two_13*2.0;
            double t16475 = t16474-2.0;
            double t16476 = 1/t16475;
            double t16477 = 1/c0f;
            double t16478 = b1f*t16449;
            double t16479 = b3f*t16450;
            double t16480 = b4f*t16451*t16452;
            double t16481 = b2f*c*t16446;
            double t16482 = t16480+t16481+t16478+t16479;
            double t16483 = 1/t16482;
            double t16484 = t16483*t16477*(1.0/2.0);
            double t16485 = t16484+1.0;
            double t16486 = log(t16485);
            double t16487 = a1f*c*t16446;
            double t16488 = t16487+1.0;
            double t16499 = c0f*t16486*t16488*2.0;
            double t16489 = t16465-t16499;
            double t16500 = t16473*t16476*t16489;
            double t16490 = -t16500+t16465;
            double t16491 = alph*t16490*t16468*4.0;
            double t16492 = exp(t16491);
            double t16493 = t16492-1.0;
            double t16494 = t16467*t16467;
            double t16495 = pow(2.0,2.0/3.0);
            double t16496 = 1/k;
            double t16497 = 1/(pi_m12*pi_m12);
            double t16498 = 1/pow(t16444,7.0/3.0);
            double t16501 = 1/t16493;
            functional_[index] = t16444*(t16500-t16465+((bet*bet)*log((alph*t16445*(t16467*t16495*t16496*t16497* \
               t16498*(1.0/1.6E1)+alph*t16501*t16470*t16471*t16445*t16448*t16494*t16469*(1.0/6.4E1))*2.0)/((alph* \
               alph)*t16470*t16471*t16448*1/(t16493*t16493)*t16494*t16468*t16469*(1.0/3.2E1)+alph*t16501*t16445*t16467* \
               t16495*t16496*t16497*t16498*(1.0/8.0)+1.0)+1.0)*(1.0/4.0))/alph-nu*t16467*t16495*t16496*t16497*t16498* \
               exp(1/pow(t16444,8.0/3.0)*t16448*t16467*t16469*(-2.5E1/2.0))*(Cc0+Cx*(1.0E1/7.0)-(Cc1*(1.0/1.0E3)+ \
               Cc2*c*t16446*(1.0/1.0E3)+Cc3*t16451*t16452*(1.0/1.0E3))/(Cc4*c*t16446+Cc5*t16451*t16452+(Cc6*c*t16451) \
               /t16444+1.0))*(1.0/3.2E1));
        } else if (rho_b[index] > cutoff_) {
            double t15880 = rho_a[index]+rho_b[index];
            double t15881 = 1/bet;
            double t15882 = 1/pow(t15880,1.0/3.0);
            double t15883 = c*t15882;
            double t15884 = pow(2.0,1.0/3.0);
            double t15885 = sqrt(t15883);
            double t15886 = pow(t15883,3.0/2.0);
            double t15887 = c*c;
            double t15888 = 1/pow(t15880,2.0/3.0);
            double t15889 = 1/c0p;
            double t15890 = b1p*t15885;
            double t15891 = b3p*t15886;
            double t15892 = b4p*t15887*t15888;
            double t15893 = b2p*c*t15882;
            double t15894 = t15890+t15891+t15892+t15893;
            double t15895 = 1/t15894;
            double t15896 = t15895*t15889*(1.0/2.0);
            double t15897 = t15896+1.0;
            double t15898 = log(t15897);
            double t15899 = a1p*c*t15882;
            double t15900 = t15899+1.0;
            double t15901 = c0p*t15900*t15898*2.0;
            double t15902 = gamma_ab[index]*2.0;
            double t15903 = gamma_aa[index]+gamma_bb[index]+t15902;
            double t15904 = 1/(bet*bet);
            double t15905 = 1/(k*k);
            double t15906 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t15907 = 1/pow(t15880,1.4E1/3.0);
            double t15908 = t15884*2.0;
            double t15909 = t15908-2.0;
            double t15910 = two_13*2.0;
            double t15911 = t15910-2.0;
            double t15912 = 1/t15911;
            double t15913 = 1/c0f;
            double t15914 = b1f*t15885;
            double t15915 = b3f*t15886;
            double t15916 = b4f*t15887*t15888;
            double t15917 = b2f*c*t15882;
            double t15918 = t15914+t15915+t15916+t15917;
            double t15919 = 1/t15918;
            double t15920 = t15913*t15919*(1.0/2.0);
            double t15921 = t15920+1.0;
            double t15922 = log(t15921);
            double t15923 = a1f*c*t15882;
            double t15924 = t15923+1.0;
            double t15935 = c0f*t15922*t15924*2.0;
            double t15925 = t15901-t15935;
            double t15936 = t15912*t15925*t15909;
            double t15926 = t15901-t15936;
            double t15927 = alph*t15904*t15926*4.0;
            double t15928 = exp(t15927);
            double t15929 = t15928-1.0;
            double t15930 = t15903*t15903;
            double t15931 = pow(2.0,2.0/3.0);
            double t15932 = 1/k;
            double t15933 = 1/(pi_m12*pi_m12);
            double t15934 = 1/pow(t15880,7.0/3.0);
            double t15937 = 1/t15929;
            functional_[index] = -t15880*(t15901-t15936-((bet*bet)*log((alph*t15881*(t15903*t15931*t15932*t15933* \
               t15934*(1.0/1.6E1)+alph*t15930*t15905*t15906*t15907*t15881*t15937*t15884*(1.0/6.4E1))*2.0)/((alph* \
               alph)*t15930*t15904*t15905*t15906*t15907*t15884*1/(t15929*t15929)*(1.0/3.2E1)+alph*t15903*t15931*t15932* \
               t15933*t15934*t15881*t15937*(1.0/8.0)+1.0)+1.0)*(1.0/4.0))/alph+nu*t15903*t15931*t15932*t15933*t15934* \
               exp(t15903*t15905*1/pow(t15880,8.0/3.0)*t15884*(-2.5E1/2.0))*(Cc0+Cx*(1.0E1/7.0)-(Cc1*(1.0/1.0E3)+ \
               Cc2*c*t15882*(1.0/1.0E3)+Cc3*t15887*t15888*(1.0/1.0E3))/(Cc4*c*t15882+Cc5*t15887*t15888+(Cc6*c*t15887) \
               /t15880+1.0))*(1.0/3.2E1));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t15157 = rho_a[index]+rho_b[index];
            double t15158 = 1/pow(t15157,1.0/3.0);
            double t15159 = c*t15158;
            double t15160 = sqrt(t15159);
            double t15161 = b1p*t15160;
            double t15162 = pow(t15159,3.0/2.0);
            double t15163 = b3p*t15162;
            double t15164 = c*c;
            double t15165 = 1/pow(t15157,2.0/3.0);
            double t15166 = b4p*t15164*t15165;
            double t15167 = b2p*c*t15158;
            double t15168 = t15161+t15163+t15166+t15167;
            double t15169 = 1/pow(t15157,4.0/3.0);
            double t15170 = 1/t15157;
            double t15171 = rho_a[index]-rho_b[index];
            double t15172 = t15170*t15171;
            double t15173 = 1/bet;
            double t15174 = t15172+1.0;
            double t15175 = pow(t15174,2.0/3.0);
            double t15176 = t15175*(1.0/2.0);
            double t15177 = -t15172+1.0;
            double t15178 = pow(t15177,2.0/3.0);
            double t15179 = t15178*(1.0/2.0);
            double t15180 = t15176+t15179;
            double t15181 = 1/c0p;
            double t15182 = 1/t15168;
            double t15183 = t15181*t15182*(1.0/2.0);
            double t15184 = t15183+1.0;
            double t15185 = a1p*c*t15158;
            double t15186 = t15185+1.0;
            double t15187 = log(t15184);
            double t15188 = c0p*t15186*t15187*2.0;
            double t15189 = t15171*t15171;
            double t15190 = two_13*2.0;
            double t15191 = t15190-2.0;
            double t15192 = 1/t15191;
            double t15193 = 1/(t15157*t15157*t15157*t15157);
            double t15194 = t15189*t15189;
            double t15195 = pow(t15174,4.0/3.0);
            double t15196 = pow(t15177,4.0/3.0);
            double t15197 = t15195+t15196-2.0;
            double t15198 = gamma_ab[index]*2.0;
            double t15199 = gamma_aa[index]+gamma_bb[index]+t15198;
            double t15200 = 1/(bet*bet);
            double t15201 = 1/(k*k);
            double t15202 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t15203 = 1/(t15180*t15180*t15180);
            double t15204 = 1/c0f;
            double t15205 = b1f*t15160;
            double t15206 = b3f*t15162;
            double t15207 = b4f*t15164*t15165;
            double t15208 = b2f*c*t15158;
            double t15209 = t15205+t15206+t15207+t15208;
            double t15210 = 1/t15209;
            double t15211 = t15210*t15204*(1.0/2.0);
            double t15212 = t15211+1.0;
            double t15213 = log(t15212);
            double t15214 = a1f*c*t15158;
            double t15215 = t15214+1.0;
            double t15242 = c0f*t15213*t15215*2.0;
            double t15216 = -t15242+t15188;
            double t15217 = 1/d2fz0;
            double t15218 = 1/Aa;
            double t15219 = b1a*t15160;
            double t15220 = b3a*t15162;
            double t15221 = b4a*t15164*t15165;
            double t15222 = b2a*c*t15158;
            double t15223 = t15220+t15221+t15222+t15219;
            double t15224 = 1/t15223;
            double t15225 = t15224*t15218*(1.0/2.0);
            double t15226 = t15225+1.0;
            double t15227 = log(t15226);
            double t15228 = a1a*c*t15158;
            double t15229 = t15228+1.0;
            double t15230 = t15193*t15194;
            double t15231 = t15230-1.0;
            double t15232 = Aa*t15231*t15217*t15227*t15192*t15229*t15197*2.0;
            double t15233 = t15232+t15188-t15216*t15192*t15193*t15194*t15197;
            double t15234 = alph*t15200*t15203*t15233*2.0;
            double t15235 = exp(t15234);
            double t15236 = t15235-1.0;
            double t15237 = 1/pow(t15157,1.4E1/3.0);
            double t15238 = 1/(t15180*t15180*t15180*t15180);
            double t15239 = t15199*t15199;
            double t15240 = 1/k;
            double t15241 = 1/(pi_m12*pi_m12);
            double t15243 = 1/pow(t15157,7.0/3.0);
            double t15244 = 1/(t15180*t15180);
            double t15245 = 1/(t15157*t15157);
            double t15264 = t15171*t15245;
            double t15246 = t15170-t15264;
            double t15247 = 1/alph;
            double t15248 = bet*bet;
            double t15249 = t15240*t15241*t15243*t15244*t15199*(1.0/1.6E1);
            double t15250 = t15242-t15188;
            double t15251 = t15250*t15192*t15193*t15194*t15197;
            double t15252 = t15232+t15251+t15188;
            double t15253 = alph*t15200*t15203*t15252*2.0;
            double t15254 = exp(t15253);
            double t15255 = t15254-1.0;
            double t15256 = 1/t15255;
            double t15257 = alph*alph;
            double t15258 = alph*t15240*t15241*t15243*t15244*t15173*t15256*t15199*(1.0/8.0);
            double t15259 = 1/(t15255*t15255);
            double t15260 = t15200*t15201*t15202*t15237*t15238*t15239*t15257*t15259*(1.0/6.4E1);
            double t15261 = t15260+t15258+1.0;
            double t15262 = 1/t15261;
            double t15263 = 1/pow(t15174,1.0/3.0);
            double t15265 = t15263*t15246*(1.0/3.0);
            double t15266 = 1/pow(t15177,1.0/3.0);
            double t15268 = t15246*t15266*(1.0/3.0);
            double t15267 = t15265-t15268;
            double t15269 = 1/t15184;
            double t15270 = 1/(t15168*t15168);
            double t15271 = 1/pow(t15157,5.0/3.0);
            double t15272 = b4p*t15271*t15164*(2.0/3.0);
            double t15273 = b2p*c*t15169*(1.0/3.0);
            double t15274 = 1/sqrt(t15159);
            double t15275 = b1p*c*t15274*t15169*(1.0/6.0);
            double t15276 = b3p*c*t15160*t15169*(1.0/2.0);
            double t15277 = t15272+t15273+t15275+t15276;
            double t15278 = t15270*t15186*t15277*t15269;
            double t15279 = 1/(t15157*t15157*t15157*t15157*t15157);
            double t15280 = pow(t15174,1.0/3.0);
            double t15281 = t15280*t15246*(4.0/3.0);
            double t15282 = pow(t15177,1.0/3.0);
            double t15290 = t15246*t15282*(4.0/3.0);
            double t15283 = t15281-t15290;
            double t15284 = alph*t15201*t15202*t15173*t15237*t15238*t15256*t15239*(1.0/1.28E2);
            double t15285 = t15284+t15249;
            double t15286 = 1/pow(t15157,1.7E1/3.0);
            double t15287 = 1/pow(t15157,1.0E1/3.0);
            double t15288 = 1/(t15180*t15180*t15180*t15180*t15180);
            double t15289 = t15250*t15171*t15192*t15193*t15197*t15189*4.0;
            double t15291 = t15250*t15192*t15193*t15283*t15194;
            double t15292 = 1/t15212;
            double t15293 = 1/(t15209*t15209);
            double t15294 = b4f*t15271*t15164*(2.0/3.0);
            double t15295 = b2f*c*t15169*(1.0/3.0);
            double t15296 = b1f*c*t15274*t15169*(1.0/6.0);
            double t15297 = b3f*c*t15160*t15169*(1.0/2.0);
            double t15298 = t15294+t15295+t15296+t15297;
            double t15299 = a1f*c*c0f*t15213*t15169*(2.0/3.0);
            double t15301 = a1p*c*c0p*t15169*t15187*(2.0/3.0);
            double t15314 = t15215*t15292*t15293*t15298;
            double t15300 = -t15301-t15314+t15278+t15299;
            double t15302 = t15194*t15279*4.0;
            double t15315 = t15171*t15193*t15189*4.0;
            double t15303 = t15302-t15315;
            double t15304 = Aa*t15231*t15217*t15227*t15192*t15229*t15283*2.0;
            double t15305 = 1/t15226;
            double t15306 = 1/(t15223*t15223);
            double t15307 = b4a*t15271*t15164*(2.0/3.0);
            double t15308 = b2a*c*t15169*(1.0/3.0);
            double t15309 = b1a*c*t15274*t15169*(1.0/6.0);
            double t15310 = b3a*c*t15160*t15169*(1.0/2.0);
            double t15311 = t15310+t15307+t15308+t15309;
            double t15312 = t15311*t15231*t15305*t15306*t15217*t15192*t15229*t15197;
            double t15313 = t15250*t15192*t15194*t15197*t15279*4.0;
            double t15316 = Aa*t15303*t15217*t15227*t15192*t15229*t15197*2.0;
            double t15317 = Aa*a1a*c*t15231*t15217*t15227*t15192*t15169*t15197*(2.0/3.0);
            double t15318 = alph*t15200*t15252*t15238*t15267*6.0;
            double t15319 = t15180*t15180;
            double t15320 = t15301+t15314-t15278-t15299;
            double t15321 = t15320*t15192*t15193*t15194*t15197;
            double t15322 = 1/pow(t15157,8.0/3.0);
            double t15333 = t15201*t15322*t15319*t15199*2.5E1;
            double t15323 = exp(-t15333);
            double t15324 = Cc5*t15164*t15165;
            double t15325 = Cc6*c*t15170*t15164;
            double t15326 = Cc4*c*t15158;
            double t15327 = t15324+t15325+t15326+1.0;
            double t15328 = 1/t15327;
            double t15329 = Cc1*(1.0/1.0E3);
            double t15330 = Cc3*t15164*t15165*(1.0/1.0E3);
            double t15331 = Cc2*c*t15158*(1.0/1.0E3);
            double t15332 = t15330+t15331+t15329;
            double t15334 = Cx*(1.0E1/7.0);
            double t15336 = t15332*t15328;
            double t15335 = Cc0+t15334-t15336;
            double t15337 = t15300*t15192*t15193*t15194*t15197;
            double t15338 = t15301-t15312-t15304+t15313+t15316+t15317-t15291+t15337-t15278-t15289;
            double t15339 = alph*t15200*t15203*t15338*2.0;
            double t15340 = t15318+t15339;
            double t15341 = alph*t15262*t15173*t15285*2.0;
            double t15342 = t15341+1.0;
            v_rho_a_[index] = -t15232-t15251-t15188-t15157*(-t15301+t15312+t15321+t15304-t15313-t15316-t15317+ \
               t15291+t15278+t15289-t15247*t15319*t15248*t15267*log((alph*t15173*(t15249+(alph*t15201*t15202*t15173* \
               t15237*t15238*t15239*(1.0/1.28E2))/t15236)*2.0)/(t15258+t15200*t15201*t15202*1/(t15236*t15236)*t15237* \
               t15238*t15239*t15257*(1.0/6.4E1)+1.0)+1.0)*(3.0/2.0)+(t15180*t15247*t15319*t15248*(alph*t15262*t15173* \
               (t15240*t15241*t15244*t15287*t15199*(7.0/4.8E1)+t15203*t15240*t15241*t15243*t15267*t15199*(1.0/8.0) \
               +alph*t15201*t15202*t15173*t15238*t15256*t15239*t15286*(7.0/1.92E2)+alph*t15201*t15202*t15173*t15237* \
               t15256*t15239*t15267*t15288*(1.0/3.2E1)-alph*t15201*t15202*t15340*t15173*t15254*t15237*t15238*t15239* \
               t15259*(1.0/1.28E2))*2.0-alph*1/(t15261*t15261)*t15173*t15285*(t15200*t15201*t15202*t15238*t15239* \
               t15257*t15259*t15286*(7.0/9.6E1)+alph*t15240*t15241*t15244*t15173*t15256*t15287*t15199*(7.0/2.4E1) \
               +alph*t15203*t15240*t15241*t15243*t15173*t15256*t15267*t15199*(1.0/4.0)+t15200*t15201*t15202*t15237* \
               t15239*t15257*t15267*t15259*t15288*(1.0/1.6E1)-alph*t15240*t15241*t15243*t15244*t15173*t15254*t15259* \
               t15199*(t15318-alph*t15200*t15203*(-t15301+t15312+t15321+t15304-t15313-t15316-t15317+t15291+t15278+ \
               t15289)*2.0)*(1.0/8.0)-t15200*t15201*t15202*t15340*t15254*t15237*1/(t15255*t15255*t15255)*t15238*t15239* \
               t15257*(1.0/3.2E1))*2.0)*(1.0/2.0))/t15342+nu*t15240*t15241*t15323*t15180*t15243*t15199*(t15328*(Cc2* \
               c*t15169*(1.0/3.0E3)+Cc3*t15271*t15164*(1.0/1.5E3))-t15332*1/(t15327*t15327)*(Cc4*c*t15169*(1.0/3.0) \
               +Cc5*t15271*t15164*(2.0/3.0)+Cc6*c*t15164*t15245))*(1.0/1.6E1)+nu*t15240*t15241*t15323*t15243*t15335* \
               t15267*t15199*(1.0/1.6E1)-nu*t15240*t15241*t15323*t15180*t15335*t15287*t15199*(7.0/4.8E1)+nu*t15240* \
               t15241*t15323*t15180*t15243*t15335*t15199*(t15201*1/pow(t15157,1.1E1/3.0)*t15319*t15199*(2.0E2/3.0) \
               -t15201*t15322*t15180*t15267*t15199*5.0E1)*(1.0/1.6E1))+t15180*t15247*t15319*t15248*log(t15342)*(1.0/ \
               2.0)-nu*t15240*t15241*t15323*t15180*t15243*t15335*t15199*(1.0/1.6E1);
        } else if (rho_a[index] > cutoff_) {
            double t16503 = rho_a[index]+rho_b[index];
            double t16504 = 1/pow(t16503,1.0/3.0);
            double t16505 = c*t16504;
            double t16506 = sqrt(t16505);
            double t16507 = b1f*t16506;
            double t16508 = pow(t16505,3.0/2.0);
            double t16509 = b3f*t16508;
            double t16510 = c*c;
            double t16511 = 1/pow(t16503,2.0/3.0);
            double t16512 = b4f*t16510*t16511;
            double t16513 = b2f*c*t16504;
            double t16514 = t16512+t16513+t16507+t16509;
            double t16515 = 1/pow(t16503,4.0/3.0);
            double t16516 = b1p*t16506;
            double t16517 = b3p*t16508;
            double t16518 = b4p*t16510*t16511;
            double t16519 = b2p*c*t16504;
            double t16520 = t16516+t16517+t16518+t16519;
            double t16521 = 1/pow(t16503,5.0/3.0);
            double t16522 = 1/sqrt(t16505);
            double t16523 = 1/c0f;
            double t16524 = 1/t16514;
            double t16525 = t16523*t16524*(1.0/2.0);
            double t16526 = t16525+1.0;
            double t16527 = 1/c0p;
            double t16528 = 1/t16520;
            double t16529 = t16527*t16528*(1.0/2.0);
            double t16530 = t16529+1.0;
            double t16531 = pow(2.0,1.0/3.0);
            double t16532 = 1/bet;
            double t16533 = log(t16530);
            double t16534 = a1p*c*t16504;
            double t16535 = t16534+1.0;
            double t16536 = t16531*2.0;
            double t16537 = t16536-2.0;
            double t16538 = two_13*2.0;
            double t16539 = t16538-2.0;
            double t16540 = 1/t16539;
            double t16541 = log(t16526);
            double t16542 = a1f*c*t16504;
            double t16543 = t16542+1.0;
            double t16544 = c0p*t16533*t16535*2.0;
            double t16545 = gamma_ab[index]*2.0;
            double t16546 = gamma_aa[index]+gamma_bb[index]+t16545;
            double t16547 = 1/(bet*bet);
            double t16548 = 1/(k*k);
            double t16549 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t16550 = 1/pow(t16503,1.4E1/3.0);
            double t16561 = c0f*t16541*t16543*2.0;
            double t16551 = -t16561+t16544;
            double t16552 = t16544-t16540*t16551*t16537;
            double t16553 = alph*t16552*t16547*4.0;
            double t16554 = exp(t16553);
            double t16555 = t16554-1.0;
            double t16556 = t16546*t16546;
            double t16557 = pow(2.0,2.0/3.0);
            double t16558 = 1/k;
            double t16559 = 1/(pi_m12*pi_m12);
            double t16560 = 1/pow(t16503,7.0/3.0);
            double t16562 = t16561-t16544;
            double t16563 = t16540*t16562*t16537;
            double t16564 = t16544+t16563;
            double t16565 = alph*t16564*t16547*4.0;
            double t16566 = exp(t16565);
            double t16567 = t16566-1.0;
            double t16568 = 1/t16567;
            double t16569 = alph*alph;
            double t16570 = 1/t16526;
            double t16571 = 1/(t16514*t16514);
            double t16572 = b4f*t16510*t16521*(2.0/3.0);
            double t16573 = b2f*c*t16515*(1.0/3.0);
            double t16574 = b1f*c*t16522*t16515*(1.0/6.0);
            double t16575 = b3f*c*t16506*t16515*(1.0/2.0);
            double t16576 = t16572+t16573+t16574+t16575;
            double t16577 = t16543*t16570*t16571*t16576;
            double t16578 = 1/t16530;
            double t16579 = 1/(t16520*t16520);
            double t16580 = b4p*t16510*t16521*(2.0/3.0);
            double t16581 = b2p*c*t16515*(1.0/3.0);
            double t16582 = b1p*c*t16522*t16515*(1.0/6.0);
            double t16583 = b3p*c*t16506*t16515*(1.0/2.0);
            double t16584 = t16580+t16581+t16582+t16583;
            double t16585 = a1p*c*c0p*t16515*t16533*(2.0/3.0);
            double t16588 = t16535*t16584*t16578*t16579;
            double t16597 = a1f*c*c0f*t16541*t16515*(2.0/3.0);
            double t16586 = t16585+t16577-t16588-t16597;
            double t16587 = t16540*t16537*t16586;
            double t16589 = 1/(t16567*t16567);
            double t16590 = alph*t16532*t16560*t16546*t16557*t16558*t16559*t16568*(1.0/8.0);
            double t16591 = t16560*t16546*t16557*t16558*t16559*(1.0/1.6E1);
            double t16592 = t16531*t16550*t16547*t16556*t16548*t16549*t16569*t16589*(1.0/3.2E1);
            double t16593 = t16590+t16592+1.0;
            double t16594 = 1/pow(t16503,1.7E1/3.0);
            double t16595 = 1/pow(t16503,1.0E1/3.0);
            double t16596 = 1/(bet*bet*bet);
            double t16598 = -t16585+t16587+t16588;
            double t16599 = 1/pow(t16503,8.0/3.0);
            double t16613 = t16531*t16546*t16548*t16599*(2.5E1/2.0);
            double t16600 = exp(-t16613);
            double t16601 = Cx*(1.0E1/7.0);
            double t16602 = Cc1*(1.0/1.0E3);
            double t16603 = Cc3*t16510*t16511*(1.0/1.0E3);
            double t16604 = Cc2*c*t16504*(1.0/1.0E3);
            double t16605 = t16602+t16603+t16604;
            double t16606 = Cc5*t16510*t16511;
            double t16607 = 1/t16503;
            double t16608 = Cc6*c*t16510*t16607;
            double t16609 = Cc4*c*t16504;
            double t16610 = t16606+t16608+t16609+1.0;
            double t16611 = 1/t16610;
            double t16619 = t16611*t16605;
            double t16612 = Cc0+t16601-t16619;
            double t16614 = 1/alph;
            double t16615 = bet*bet;
            double t16616 = alph*t16531*t16532*t16550*t16556*t16548*t16549*t16568*(1.0/6.4E1);
            double t16617 = t16616+t16591;
            double t16618 = 1/t16593;
            v_rho_a_[index] = -t16544-t16563-t16503*(-t16585+t16587+t16588+(t16614*t16615*(alph*t16532*t16618* \
               (t16546*t16557*t16558*t16559*t16595*(7.0/4.8E1)+alph*t16531*t16532*t16556*t16548*t16549*t16594*t16568* \
               (7.0/9.6E1)+t16531*t16550*t16556*t16548*t16566*t16549*t16569*t16596*t16589*t16598*(1.0/1.6E1))*2.0- \
               alph*t16532*t16617*1/(t16593*t16593)*(t16531*t16547*t16556*t16548*t16549*t16594*t16569*t16589*(7.0/ \
               4.8E1)+alph*t16532*t16546*t16557*t16558*t16559*t16568*t16595*(7.0/2.4E1)+t16560*t16546*t16557*t16566* \
               t16558*t16559*t16569*t16596*t16589*t16598*(1.0/2.0)+alph*1/(bet*bet*bet*bet)*t16531*t16550*t16556* \
               t16548*t16566*t16549*1/(t16567*t16567*t16567)*t16569*t16598*(1.0/4.0))*2.0)*(1.0/4.0))/((alph*t16532* \
               (t16591+(alph*t16531*t16532*t16550*t16556*t16548*t16549*(1.0/6.4E1))/t16555)*2.0)/(t16590+t16531*t16550* \
               1/(t16555*t16555)*t16547*t16556*t16548*t16549*t16569*(1.0/3.2E1)+1.0)+1.0)+1/(k*k*k)*nu*t16600*1/(t16503* \
               t16503*t16503*t16503*t16503*t16503)*t16612*t16556*t16559*(2.5E1/1.2E1)+nu*t16600*t16560*t16546*t16557* \
               t16558*t16559*(t16611*(Cc2*c*t16515*(1.0/3.0E3)+Cc3*t16510*t16521*(1.0/1.5E3))-1/(t16610*t16610)*t16605* \
               (Cc4*c*t16515*(1.0/3.0)+Cc5*t16510*t16521*(2.0/3.0)+Cc6*c*t16510*1/(t16503*t16503)))*(1.0/3.2E1)-nu* \
               t16600*t16612*t16546*t16557*t16558*t16559*t16595*(7.0/9.6E1))+t16614*t16615*log(alph*t16532*t16617* \
               t16618*2.0+1.0)*(1.0/4.0)-nu*t16600*t16612*t16560*t16546*t16557*t16558*t16559*(1.0/3.2E1);
        } else if (rho_b[index] > cutoff_) {
            double t15939 = rho_a[index]+rho_b[index];
            double t15940 = 1/pow(t15939,1.0/3.0);
            double t15941 = c*t15940;
            double t15942 = sqrt(t15941);
            double t15943 = b1f*t15942;
            double t15944 = pow(t15941,3.0/2.0);
            double t15945 = b3f*t15944;
            double t15946 = c*c;
            double t15947 = 1/pow(t15939,2.0/3.0);
            double t15948 = b4f*t15946*t15947;
            double t15949 = b2f*c*t15940;
            double t15950 = t15943+t15945+t15948+t15949;
            double t15951 = 1/pow(t15939,4.0/3.0);
            double t15952 = b1p*t15942;
            double t15953 = b3p*t15944;
            double t15954 = b4p*t15946*t15947;
            double t15955 = b2p*c*t15940;
            double t15956 = t15952+t15953+t15954+t15955;
            double t15957 = 1/pow(t15939,5.0/3.0);
            double t15958 = 1/sqrt(t15941);
            double t15959 = 1/c0f;
            double t15960 = 1/t15950;
            double t15961 = t15960*t15959*(1.0/2.0);
            double t15962 = t15961+1.0;
            double t15963 = 1/c0p;
            double t15964 = 1/t15956;
            double t15965 = t15963*t15964*(1.0/2.0);
            double t15966 = t15965+1.0;
            double t15967 = pow(2.0,1.0/3.0);
            double t15968 = 1/bet;
            double t15969 = log(t15966);
            double t15970 = a1p*c*t15940;
            double t15971 = t15970+1.0;
            double t15972 = t15967*2.0;
            double t15973 = t15972-2.0;
            double t15974 = two_13*2.0;
            double t15975 = t15974-2.0;
            double t15976 = 1/t15975;
            double t15977 = log(t15962);
            double t15978 = a1f*c*t15940;
            double t15979 = t15978+1.0;
            double t15980 = c0p*t15971*t15969*2.0;
            double t15981 = gamma_ab[index]*2.0;
            double t15982 = gamma_aa[index]+gamma_bb[index]+t15981;
            double t15983 = 1/(bet*bet);
            double t15984 = 1/(k*k);
            double t15985 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t15986 = 1/pow(t15939,1.4E1/3.0);
            double t15997 = c0f*t15977*t15979*2.0;
            double t15987 = t15980-t15997;
            double t15998 = t15973*t15976*t15987;
            double t15988 = t15980-t15998;
            double t15989 = alph*t15983*t15988*4.0;
            double t15990 = exp(t15989);
            double t15991 = t15990-1.0;
            double t15992 = t15982*t15982;
            double t15993 = pow(2.0,2.0/3.0);
            double t15994 = 1/k;
            double t15995 = 1/(pi_m12*pi_m12);
            double t15996 = 1/pow(t15939,7.0/3.0);
            double t15999 = 1/t15991;
            double t16000 = alph*alph;
            double t16001 = 1/(t15991*t15991);
            double t16002 = 1/t15962;
            double t16003 = 1/(t15950*t15950);
            double t16004 = b4f*t15946*t15957*(2.0/3.0);
            double t16005 = b2f*c*t15951*(1.0/3.0);
            double t16006 = b1f*c*t15951*t15958*(1.0/6.0);
            double t16007 = b3f*c*t15942*t15951*(1.0/2.0);
            double t16008 = t16004+t16005+t16006+t16007;
            double t16009 = t15979*t16002*t16003*t16008;
            double t16010 = 1/t15966;
            double t16011 = 1/(t15956*t15956);
            double t16012 = b4p*t15946*t15957*(2.0/3.0);
            double t16013 = b2p*c*t15951*(1.0/3.0);
            double t16014 = b1p*c*t15951*t15958*(1.0/6.0);
            double t16015 = b3p*c*t15942*t15951*(1.0/2.0);
            double t16016 = t16012+t16013+t16014+t16015;
            double t16017 = a1p*c*c0p*t15951*t15969*(2.0/3.0);
            double t16020 = t15971*t16010*t16011*t16016;
            double t16031 = a1f*c*c0f*t15951*t15977*(2.0/3.0);
            double t16018 = -t16020-t16031+t16017+t16009;
            double t16019 = t15973*t15976*t16018;
            double t16021 = t15983*t15992*t15984*t15967*t15985*t15986*t16000*t16001*(1.0/3.2E1);
            double t16022 = alph*t15982*t15993*t15994*t15968*t15995*t15996*t15999*(1.0/8.0);
            double t16023 = t16021+t16022+1.0;
            double t16024 = 1/t16023;
            double t16025 = t15982*t15993*t15994*t15995*t15996*(1.0/1.6E1);
            double t16026 = alph*t15992*t15984*t15967*t15985*t15968*t15986*t15999*(1.0/6.4E1);
            double t16027 = t16025+t16026;
            double t16028 = 1/pow(t15939,1.7E1/3.0);
            double t16029 = 1/pow(t15939,1.0E1/3.0);
            double t16030 = 1/(bet*bet*bet);
            double t16032 = t16020-t16017+t16019;
            double t16033 = 1/pow(t15939,8.0/3.0);
            double t16047 = t15982*t15984*t15967*t16033*(2.5E1/2.0);
            double t16034 = exp(-t16047);
            double t16035 = Cx*(1.0E1/7.0);
            double t16036 = Cc1*(1.0/1.0E3);
            double t16037 = Cc3*t15946*t15947*(1.0/1.0E3);
            double t16038 = Cc2*c*t15940*(1.0/1.0E3);
            double t16039 = t16036+t16037+t16038;
            double t16040 = Cc5*t15946*t15947;
            double t16041 = 1/t15939;
            double t16042 = Cc6*c*t15946*t16041;
            double t16043 = Cc4*c*t15940;
            double t16044 = t16040+t16042+t16043+1.0;
            double t16045 = 1/t16044;
            double t16052 = t16045*t16039;
            double t16046 = Cc0-t16052+t16035;
            double t16048 = 1/alph;
            double t16049 = bet*bet;
            double t16050 = alph*t15968*t16024*t16027*2.0;
            double t16051 = t16050+1.0;
            v_rho_a_[index] = -t15980-t15939*(t16020-t16017+t16019+(t16048*t16049*(alph*t15968*t16024*(t15982* \
               t15993*t15994*t15995*t16029*(7.0/4.8E1)+alph*t15992*t15984*t15967*t15985*t15968*t15999*t16028*(7.0/ \
               9.6E1)+t15990*t15992*t15984*t15967*t15985*t15986*t16000*t16001*t16030*t16032*(1.0/1.6E1))*2.0-alph* \
               t15968*1/(t16023*t16023)*t16027*(t15983*t15992*t15984*t15967*t15985*t16000*t16001*t16028*(7.0/4.8E1) \
               +alph*t15982*t15993*t15994*t15968*t15995*t15999*t16029*(7.0/2.4E1)+t15990*t15982*t15993*t15994*t15995* \
               t15996*t16000*t16001*t16030*t16032*(1.0/2.0)+alph*1/(bet*bet*bet*bet)*t15990*1/(t15991*t15991*t15991) \
               *t15992*t15984*t15967*t15985*t15986*t16000*t16032*(1.0/4.0))*2.0)*(1.0/4.0))/t16051+1/(k*k*k)*nu*t15992* \
               1/(t15939*t15939*t15939*t15939*t15939*t15939)*t15995*t16034*t16046*(2.5E1/1.2E1)+nu*t15982*t15993* \
               t15994*t15995*t15996*t16034*(t16045*(Cc2*c*t15951*(1.0/3.0E3)+Cc3*t15946*t15957*(1.0/1.5E3))-1/(t16044* \
               t16044)*t16039*(Cc4*c*t15951*(1.0/3.0)+Cc5*t15946*t15957*(2.0/3.0)+Cc6*c*t15946*1/(t15939*t15939)) \
               )*(1.0/3.2E1)-nu*t15982*t15993*t15994*t15995*t16034*t16046*t16029*(7.0/9.6E1))+t16048*t16049*log(t16051) \
               *(1.0/4.0)+t15973*t15976*(t15980-t15997)-nu*t15982*t15993*t15994*t15995*t15996*t16034*t16046*(1.0/ \
               3.2E1);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t15344 = rho_a[index]+rho_b[index];
            double t15345 = 1/pow(t15344,1.0/3.0);
            double t15346 = c*t15345;
            double t15347 = sqrt(t15346);
            double t15348 = b1p*t15347;
            double t15349 = pow(t15346,3.0/2.0);
            double t15350 = b3p*t15349;
            double t15351 = c*c;
            double t15352 = 1/pow(t15344,2.0/3.0);
            double t15353 = b4p*t15351*t15352;
            double t15354 = b2p*c*t15345;
            double t15355 = t15350+t15353+t15354+t15348;
            double t15356 = 1/pow(t15344,4.0/3.0);
            double t15357 = 1/t15344;
            double t15358 = rho_a[index]-rho_b[index];
            double t15359 = t15357*t15358;
            double t15360 = 1/bet;
            double t15361 = t15359+1.0;
            double t15362 = pow(t15361,2.0/3.0);
            double t15363 = t15362*(1.0/2.0);
            double t15364 = -t15359+1.0;
            double t15365 = pow(t15364,2.0/3.0);
            double t15366 = t15365*(1.0/2.0);
            double t15367 = t15363+t15366;
            double t15368 = 1/c0p;
            double t15369 = 1/t15355;
            double t15370 = t15368*t15369*(1.0/2.0);
            double t15371 = t15370+1.0;
            double t15372 = a1p*c*t15345;
            double t15373 = t15372+1.0;
            double t15374 = log(t15371);
            double t15375 = c0p*t15373*t15374*2.0;
            double t15376 = t15358*t15358;
            double t15377 = two_13*2.0;
            double t15378 = t15377-2.0;
            double t15379 = 1/t15378;
            double t15380 = 1/(t15344*t15344*t15344*t15344);
            double t15381 = t15376*t15376;
            double t15382 = pow(t15361,4.0/3.0);
            double t15383 = pow(t15364,4.0/3.0);
            double t15384 = t15382+t15383-2.0;
            double t15385 = gamma_ab[index]*2.0;
            double t15386 = gamma_aa[index]+gamma_bb[index]+t15385;
            double t15387 = 1/(bet*bet);
            double t15388 = 1/(k*k);
            double t15389 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t15390 = 1/(t15367*t15367*t15367);
            double t15391 = 1/c0f;
            double t15392 = b1f*t15347;
            double t15393 = b3f*t15349;
            double t15394 = b4f*t15351*t15352;
            double t15395 = b2f*c*t15345;
            double t15396 = t15392+t15393+t15394+t15395;
            double t15397 = 1/t15396;
            double t15398 = t15391*t15397*(1.0/2.0);
            double t15399 = t15398+1.0;
            double t15400 = log(t15399);
            double t15401 = a1f*c*t15345;
            double t15402 = t15401+1.0;
            double t15429 = c0f*t15400*t15402*2.0;
            double t15403 = t15375-t15429;
            double t15404 = 1/d2fz0;
            double t15405 = 1/Aa;
            double t15406 = b1a*t15347;
            double t15407 = b3a*t15349;
            double t15408 = b4a*t15351*t15352;
            double t15409 = b2a*c*t15345;
            double t15410 = t15406+t15407+t15408+t15409;
            double t15411 = 1/t15410;
            double t15412 = t15411*t15405*(1.0/2.0);
            double t15413 = t15412+1.0;
            double t15414 = log(t15413);
            double t15415 = a1a*c*t15345;
            double t15416 = t15415+1.0;
            double t15417 = t15380*t15381;
            double t15418 = t15417-1.0;
            double t15419 = Aa*t15404*t15414*t15416*t15418*t15384*t15379*2.0;
            double t15430 = t15403*t15380*t15381*t15384*t15379;
            double t15420 = -t15430+t15419+t15375;
            double t15421 = alph*t15420*t15390*t15387*2.0;
            double t15422 = exp(t15421);
            double t15423 = t15422-1.0;
            double t15424 = 1/pow(t15344,1.4E1/3.0);
            double t15425 = 1/(t15367*t15367*t15367*t15367);
            double t15426 = t15386*t15386;
            double t15427 = 1/k;
            double t15428 = 1/(pi_m12*pi_m12);
            double t15431 = 1/t15423;
            double t15432 = 1/pow(t15344,7.0/3.0);
            double t15433 = 1/(t15367*t15367);
            double t15434 = 1/(t15344*t15344);
            double t15435 = t15434*t15358;
            double t15436 = t15435+t15357;
            double t15437 = 1/alph;
            double t15438 = bet*bet;
            double t15439 = t15432*t15433*t15427*t15428*t15386*(1.0/1.6E1);
            double t15440 = alph*t15431*t15360*t15424*t15425*t15426*t15388*t15389*(1.0/1.28E2);
            double t15441 = t15440+t15439;
            double t15442 = alph*alph;
            double t15443 = 1/(t15423*t15423);
            double t15444 = t15424*t15442*t15425*t15443*t15426*t15387*t15388*t15389*(1.0/6.4E1);
            double t15445 = alph*t15431*t15360*t15432*t15433*t15427*t15428*t15386*(1.0/8.0);
            double t15446 = t15444+t15445+1.0;
            double t15447 = 1/t15446;
            double t15448 = alph*t15360*t15441*t15447*2.0;
            double t15449 = t15448+1.0;
            double t15450 = 1/pow(t15361,1.0/3.0);
            double t15451 = t15450*t15436*(1.0/3.0);
            double t15452 = 1/pow(t15364,1.0/3.0);
            double t15454 = t15452*t15436*(1.0/3.0);
            double t15453 = t15451-t15454;
            double t15455 = 1/t15371;
            double t15456 = 1/(t15355*t15355);
            double t15457 = 1/pow(t15344,5.0/3.0);
            double t15458 = b4p*t15351*t15457*(2.0/3.0);
            double t15459 = b2p*c*t15356*(1.0/3.0);
            double t15460 = 1/sqrt(t15346);
            double t15461 = b1p*c*t15460*t15356*(1.0/6.0);
            double t15462 = b3p*c*t15347*t15356*(1.0/2.0);
            double t15463 = t15461+t15462+t15458+t15459;
            double t15464 = 1/(t15344*t15344*t15344*t15344*t15344);
            double t15465 = pow(t15361,1.0/3.0);
            double t15466 = t15436*t15465*(4.0/3.0);
            double t15467 = pow(t15364,1.0/3.0);
            double t15475 = t15436*t15467*(4.0/3.0);
            double t15468 = t15466-t15475;
            double t15469 = t15373*t15463*t15455*t15456;
            double t15470 = 1/pow(t15344,1.7E1/3.0);
            double t15471 = 1/pow(t15344,1.0E1/3.0);
            double t15472 = 1/(t15367*t15367*t15367*t15367*t15367);
            double t15473 = t15403*t15380*t15384*t15358*t15376*t15379*4.0;
            double t15474 = t15403*t15381*t15464*t15384*t15379*4.0;
            double t15476 = t15403*t15380*t15381*t15468*t15379;
            double t15477 = 1/t15399;
            double t15478 = 1/(t15396*t15396);
            double t15479 = b4f*t15351*t15457*(2.0/3.0);
            double t15480 = b2f*c*t15356*(1.0/3.0);
            double t15481 = b1f*c*t15460*t15356*(1.0/6.0);
            double t15482 = b3f*c*t15347*t15356*(1.0/2.0);
            double t15483 = t15480+t15481+t15482+t15479;
            double t15484 = a1f*c*c0f*t15400*t15356*(2.0/3.0);
            double t15485 = t15380*t15358*t15376*4.0;
            double t15486 = t15381*t15464*4.0;
            double t15487 = t15485+t15486;
            double t15488 = 1/t15413;
            double t15489 = 1/(t15410*t15410);
            double t15490 = b4a*t15351*t15457*(2.0/3.0);
            double t15491 = b2a*c*t15356*(1.0/3.0);
            double t15492 = b1a*c*t15460*t15356*(1.0/6.0);
            double t15493 = b3a*c*t15347*t15356*(1.0/2.0);
            double t15494 = t15490+t15491+t15492+t15493;
            double t15495 = t15404*t15416*t15418*t15384*t15494*t15379*t15488*t15489;
            double t15497 = a1p*c*c0p*t15356*t15374*(2.0/3.0);
            double t15499 = t15402*t15483*t15477*t15478;
            double t15496 = t15484+t15469-t15497-t15499;
            double t15498 = alph*t15420*t15425*t15453*t15387*6.0;
            double t15504 = t15380*t15381*t15384*t15379*t15496;
            double t15505 = Aa*t15404*t15414*t15416*t15418*t15468*t15379*2.0;
            double t15506 = Aa*t15404*t15414*t15416*t15384*t15379*t15487*2.0;
            double t15507 = Aa*a1a*c*t15404*t15414*t15418*t15356*t15384*t15379*(2.0/3.0);
            double t15500 = -t15504-t15505-t15506-t15507+t15473+t15474+t15476+t15495+t15469-t15497;
            double t15501 = alph*t15500*t15390*t15387*2.0;
            double t15502 = t15501+t15498;
            double t15503 = t15367*t15367;
            double t15508 = 1/pow(t15344,8.0/3.0);
            double t15519 = t15503*t15508*t15386*t15388*2.5E1;
            double t15509 = exp(-t15519);
            double t15510 = Cc5*t15351*t15352;
            double t15511 = Cc6*c*t15351*t15357;
            double t15512 = Cc4*c*t15345;
            double t15513 = t15510+t15511+t15512+1.0;
            double t15514 = 1/t15513;
            double t15515 = Cc1*(1.0/1.0E3);
            double t15516 = Cc3*t15351*t15352*(1.0/1.0E3);
            double t15517 = Cc2*c*t15345*(1.0/1.0E3);
            double t15518 = t15515+t15516+t15517;
            double t15520 = Cx*(1.0E1/7.0);
            double t15522 = t15514*t15518;
            double t15521 = Cc0+t15520-t15522;
            double t15523 = log(t15449);
            v_rho_b_[index] = -t15419-t15375-t15344*(-t15504-t15505-t15506-t15507+t15473+t15474+t15476+t15495+ \
               t15469-t15497+t15503*t15523*t15453*t15437*t15438*(3.0/2.0)+(t15503*t15437*t15438*t15367*(alph*t15360* \
               t15447*(t15433*t15471*t15427*t15428*t15386*(7.0/4.8E1)-t15432*t15390*t15453*t15427*t15428*t15386*(1.0/ \
               8.0)+alph*t15431*t15360*t15425*t15470*t15426*t15388*t15389*(7.0/1.92E2)-alph*t15431*t15360*t15424* \
               t15426*t15453*t15472*t15388*t15389*(1.0/3.2E1)+alph*t15502*t15422*t15360*t15424*t15425*t15443*t15426* \
               t15388*t15389*(1.0/1.28E2))*2.0-alph*t15360*t15441*1/(t15446*t15446)*(t15442*t15425*t15443*t15470* \
               t15426*t15387*t15388*t15389*(7.0/9.6E1)+alph*t15431*t15360*t15433*t15471*t15427*t15428*t15386*(7.0/ \
               2.4E1)-alph*t15431*t15360*t15432*t15390*t15453*t15427*t15428*t15386*(1.0/4.0)-t15424*t15442*t15443* \
               t15426*t15453*t15472*t15387*t15388*t15389*(1.0/1.6E1)+t15502*t15422*1/(t15423*t15423*t15423)*t15424* \
               t15442*t15425*t15426*t15387*t15388*t15389*(1.0/3.2E1)+alph*t15502*t15422*t15360*t15432*t15433*t15443* \
               t15427*t15428*t15386*(1.0/8.0))*2.0)*(1.0/2.0))/t15449+nu*t15432*t15427*t15428*t15509*t15367*t15386* \
               (t15514*(Cc2*c*t15356*(1.0/3.0E3)+Cc3*t15351*t15457*(1.0/1.5E3))-1/(t15513*t15513)*t15518*(Cc4*c*t15356* \
               (1.0/3.0)+Cc5*t15351*t15457*(2.0/3.0)+Cc6*c*t15351*t15434))*(1.0/1.6E1)-nu*t15521*t15432*t15453*t15427* \
               t15428*t15509*t15386*(1.0/1.6E1)-nu*t15521*t15471*t15427*t15428*t15509*t15367*t15386*(7.0/4.8E1)+nu* \
               t15521*t15432*t15427*t15428*t15509*t15367*t15386*(t15503*1/pow(t15344,1.1E1/3.0)*t15386*t15388*(2.0E2/ \
               3.0)+t15453*t15508*t15367*t15386*t15388*5.0E1)*(1.0/1.6E1))+t15503*t15523*t15437*t15438*t15367*(1.0/ \
               2.0)+t15380*t15381*t15384*t15379*(t15375-t15429)-nu*t15521*t15432*t15427*t15428*t15509*t15367*t15386* \
               (1.0/1.6E1);
        } else if (rho_a[index] > cutoff_) {
            double t16621 = rho_a[index]+rho_b[index];
            double t16622 = 1/pow(t16621,1.0/3.0);
            double t16623 = c*t16622;
            double t16624 = sqrt(t16623);
            double t16625 = b1f*t16624;
            double t16626 = pow(t16623,3.0/2.0);
            double t16627 = b3f*t16626;
            double t16628 = c*c;
            double t16629 = 1/pow(t16621,2.0/3.0);
            double t16630 = b4f*t16628*t16629;
            double t16631 = b2f*c*t16622;
            double t16632 = t16630+t16631+t16625+t16627;
            double t16633 = 1/pow(t16621,4.0/3.0);
            double t16634 = b1p*t16624;
            double t16635 = b3p*t16626;
            double t16636 = b4p*t16628*t16629;
            double t16637 = b2p*c*t16622;
            double t16638 = t16634+t16635+t16636+t16637;
            double t16639 = 1/pow(t16621,5.0/3.0);
            double t16640 = 1/sqrt(t16623);
            double t16641 = 1/c0f;
            double t16642 = 1/t16632;
            double t16643 = t16641*t16642*(1.0/2.0);
            double t16644 = t16643+1.0;
            double t16645 = 1/c0p;
            double t16646 = 1/t16638;
            double t16647 = t16645*t16646*(1.0/2.0);
            double t16648 = t16647+1.0;
            double t16649 = pow(2.0,1.0/3.0);
            double t16650 = 1/bet;
            double t16651 = log(t16648);
            double t16652 = a1p*c*t16622;
            double t16653 = t16652+1.0;
            double t16654 = t16649*2.0;
            double t16655 = t16654-2.0;
            double t16656 = two_13*2.0;
            double t16657 = t16656-2.0;
            double t16658 = 1/t16657;
            double t16659 = log(t16644);
            double t16660 = a1f*c*t16622;
            double t16661 = t16660+1.0;
            double t16662 = c0p*t16651*t16653*2.0;
            double t16663 = gamma_ab[index]*2.0;
            double t16664 = gamma_aa[index]+gamma_bb[index]+t16663;
            double t16665 = 1/(bet*bet);
            double t16666 = 1/(k*k);
            double t16667 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t16668 = 1/pow(t16621,1.4E1/3.0);
            double t16679 = c0f*t16661*t16659*2.0;
            double t16669 = t16662-t16679;
            double t16680 = t16655*t16658*t16669;
            double t16670 = t16662-t16680;
            double t16671 = alph*t16670*t16665*4.0;
            double t16672 = exp(t16671);
            double t16673 = t16672-1.0;
            double t16674 = t16664*t16664;
            double t16675 = pow(2.0,2.0/3.0);
            double t16676 = 1/k;
            double t16677 = 1/(pi_m12*pi_m12);
            double t16678 = 1/pow(t16621,7.0/3.0);
            double t16681 = 1/t16673;
            double t16682 = alph*alph;
            double t16683 = 1/(t16673*t16673);
            double t16684 = 1/t16644;
            double t16685 = 1/(t16632*t16632);
            double t16686 = b4f*t16628*t16639*(2.0/3.0);
            double t16687 = b2f*c*t16633*(1.0/3.0);
            double t16688 = b1f*c*t16640*t16633*(1.0/6.0);
            double t16689 = b3f*c*t16624*t16633*(1.0/2.0);
            double t16690 = t16686+t16687+t16688+t16689;
            double t16691 = t16661*t16690*t16684*t16685;
            double t16692 = 1/t16648;
            double t16693 = 1/(t16638*t16638);
            double t16694 = b4p*t16628*t16639*(2.0/3.0);
            double t16695 = b2p*c*t16633*(1.0/3.0);
            double t16696 = b1p*c*t16640*t16633*(1.0/6.0);
            double t16697 = b3p*c*t16624*t16633*(1.0/2.0);
            double t16698 = t16694+t16695+t16696+t16697;
            double t16699 = a1p*c*c0p*t16633*t16651*(2.0/3.0);
            double t16702 = t16653*t16692*t16693*t16698;
            double t16713 = a1f*c*c0f*t16633*t16659*(2.0/3.0);
            double t16700 = -t16702-t16713+t16691+t16699;
            double t16701 = t16700*t16655*t16658;
            double t16703 = t16682*t16665*t16674*t16683*t16666*t16649*t16667*t16668*(1.0/3.2E1);
            double t16704 = alph*t16650*t16681*t16664*t16675*t16676*t16677*t16678*(1.0/8.0);
            double t16705 = t16703+t16704+1.0;
            double t16706 = 1/t16705;
            double t16707 = t16664*t16675*t16676*t16677*t16678*(1.0/1.6E1);
            double t16708 = alph*t16650*t16681*t16674*t16666*t16649*t16667*t16668*(1.0/6.4E1);
            double t16709 = t16707+t16708;
            double t16710 = 1/pow(t16621,1.7E1/3.0);
            double t16711 = 1/pow(t16621,1.0E1/3.0);
            double t16712 = 1/(bet*bet*bet);
            double t16714 = t16701+t16702-t16699;
            double t16715 = 1/pow(t16621,8.0/3.0);
            double t16729 = t16715*t16664*t16666*t16649*(2.5E1/2.0);
            double t16716 = exp(-t16729);
            double t16717 = Cx*(1.0E1/7.0);
            double t16718 = Cc1*(1.0/1.0E3);
            double t16719 = Cc3*t16628*t16629*(1.0/1.0E3);
            double t16720 = Cc2*c*t16622*(1.0/1.0E3);
            double t16721 = t16720+t16718+t16719;
            double t16722 = Cc5*t16628*t16629;
            double t16723 = 1/t16621;
            double t16724 = Cc6*c*t16723*t16628;
            double t16725 = Cc4*c*t16622;
            double t16726 = t16722+t16724+t16725+1.0;
            double t16727 = 1/t16726;
            double t16734 = t16721*t16727;
            double t16728 = Cc0-t16734+t16717;
            double t16730 = 1/alph;
            double t16731 = bet*bet;
            double t16732 = alph*t16650*t16706*t16709*2.0;
            double t16733 = t16732+1.0;
            v_rho_b_[index] = -t16662-t16621*(t16701+t16702-t16699+(t16730*t16731*(alph*t16650*t16706*(t16711* \
               t16664*t16675*t16676*t16677*(7.0/4.8E1)+alph*t16710*t16650*t16681*t16674*t16666*t16649*t16667*(7.0/ \
               9.6E1)+t16712*t16714*t16672*t16682*t16674*t16683*t16666*t16649*t16667*t16668*(1.0/1.6E1))*2.0-alph* \
               t16650*1/(t16705*t16705)*t16709*(t16710*t16682*t16665*t16674*t16683*t16666*t16649*t16667*(7.0/4.8E1) \
               +alph*t16711*t16650*t16681*t16664*t16675*t16676*t16677*(7.0/2.4E1)+t16712*t16714*t16672*t16664*t16682* \
               t16683*t16675*t16676*t16677*t16678*(1.0/2.0)+alph*1/(bet*bet*bet*bet)*t16714*t16672*1/(t16673*t16673* \
               t16673)*t16682*t16674*t16666*t16649*t16667*t16668*(1.0/4.0))*2.0)*(1.0/4.0))/t16733+1/(k*k*k)*nu*1/ \
               (t16621*t16621*t16621*t16621*t16621*t16621)*t16716*t16674*t16728*t16677*(2.5E1/1.2E1)+nu*t16716*t16664* \
               t16675*t16676*t16677*t16678*(t16727*(Cc2*c*t16633*(1.0/3.0E3)+Cc3*t16628*t16639*(1.0/1.5E3))-t16721* \
               1/(t16726*t16726)*(Cc4*c*t16633*(1.0/3.0)+Cc5*t16628*t16639*(2.0/3.0)+Cc6*c*1/(t16621*t16621)*t16628) \
               )*(1.0/3.2E1)-nu*t16711*t16716*t16664*t16728*t16675*t16676*t16677*(7.0/9.6E1))+t16730*t16731*log(t16733) \
               *(1.0/4.0)+t16655*t16658*(t16662-t16679)-nu*t16716*t16664*t16728*t16675*t16676*t16677*t16678*(1.0/ \
               3.2E1);
        } else if (rho_b[index] > cutoff_) {
            double t16054 = rho_a[index]+rho_b[index];
            double t16055 = 1/pow(t16054,1.0/3.0);
            double t16056 = c*t16055;
            double t16057 = sqrt(t16056);
            double t16058 = b1f*t16057;
            double t16059 = pow(t16056,3.0/2.0);
            double t16060 = b3f*t16059;
            double t16061 = c*c;
            double t16062 = 1/pow(t16054,2.0/3.0);
            double t16063 = b4f*t16061*t16062;
            double t16064 = b2f*c*t16055;
            double t16065 = t16060+t16063+t16064+t16058;
            double t16066 = 1/pow(t16054,4.0/3.0);
            double t16067 = b1p*t16057;
            double t16068 = b3p*t16059;
            double t16069 = b4p*t16061*t16062;
            double t16070 = b2p*c*t16055;
            double t16071 = t16070+t16067+t16068+t16069;
            double t16072 = 1/pow(t16054,5.0/3.0);
            double t16073 = 1/sqrt(t16056);
            double t16074 = 1/c0f;
            double t16075 = 1/t16065;
            double t16076 = t16074*t16075*(1.0/2.0);
            double t16077 = t16076+1.0;
            double t16078 = 1/c0p;
            double t16079 = 1/t16071;
            double t16080 = t16078*t16079*(1.0/2.0);
            double t16081 = t16080+1.0;
            double t16082 = pow(2.0,1.0/3.0);
            double t16083 = 1/bet;
            double t16084 = log(t16081);
            double t16085 = a1p*c*t16055;
            double t16086 = t16085+1.0;
            double t16087 = t16082*2.0;
            double t16088 = t16087-2.0;
            double t16089 = two_13*2.0;
            double t16090 = t16089-2.0;
            double t16091 = 1/t16090;
            double t16092 = log(t16077);
            double t16093 = a1f*c*t16055;
            double t16094 = t16093+1.0;
            double t16095 = c0p*t16084*t16086*2.0;
            double t16096 = gamma_ab[index]*2.0;
            double t16097 = gamma_aa[index]+gamma_bb[index]+t16096;
            double t16098 = 1/(bet*bet);
            double t16099 = 1/(k*k);
            double t16100 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
            double t16101 = 1/pow(t16054,1.4E1/3.0);
            double t16112 = c0f*t16092*t16094*2.0;
            double t16102 = -t16112+t16095;
            double t16103 = t16095-t16102*t16091*t16088;
            double t16104 = alph*t16103*t16098*4.0;
            double t16105 = exp(t16104);
            double t16106 = t16105-1.0;
            double t16107 = t16097*t16097;
            double t16108 = pow(2.0,2.0/3.0);
            double t16109 = 1/k;
            double t16110 = 1/(pi_m12*pi_m12);
            double t16111 = 1/pow(t16054,7.0/3.0);
            double t16113 = t16112-t16095;
            double t16114 = t16113*t16091*t16088;
            double t16115 = t16114+t16095;
            double t16116 = alph*t16115*t16098*4.0;
            double t16117 = exp(t16116);
            double t16118 = t16117-1.0;
            double t16119 = 1/t16118;
            double t16120 = alph*alph;
            double t16121 = 1/t16077;
            double t16122 = 1/(t16065*t16065);
            double t16123 = b4f*t16061*t16072*(2.0/3.0);
            double t16124 = b2f*c*t16066*(1.0/3.0);
            double t16125 = b1f*c*t16073*t16066*(1.0/6.0);
            double t16126 = b3f*c*t16057*t16066*(1.0/2.0);
            double t16127 = t16123+t16124+t16125+t16126;
            double t16128 = t16121*t16122*t16127*t16094;
            double t16129 = 1/t16081;
            double t16130 = 1/(t16071*t16071);
            double t16131 = b4p*t16061*t16072*(2.0/3.0);
            double t16132 = b2p*c*t16066*(1.0/3.0);
            double t16133 = b1p*c*t16073*t16066*(1.0/6.0);
            double t16134 = b3p*c*t16057*t16066*(1.0/2.0);
            double t16135 = t16131+t16132+t16133+t16134;
            double t16136 = a1p*c*c0p*t16066*t16084*(2.0/3.0);
            double t16139 = t16130*t16135*t16129*t16086;
            double t16148 = a1f*c*c0f*t16092*t16066*(2.0/3.0);
            double t16137 = t16136+t16128-t16139-t16148;
            double t16138 = t16091*t16137*t16088;
            double t16140 = 1/(t16118*t16118);
            double t16141 = alph*t16110*t16111*t16108*t16109*t16083*t16119*t16097*(1.0/8.0);
            double t16142 = t16110*t16111*t16108*t16109*t16097*(1.0/1.6E1);
            double t16143 = t16100*t16101*t16120*t16140*t16107*t16082*t16098*t16099*(1.0/3.2E1);
            double t16144 = t16141+t16143+1.0;
            double t16145 = 1/pow(t16054,1.7E1/3.0);
            double t16146 = 1/pow(t16054,1.0E1/3.0);
            double t16147 = 1/(bet*bet*bet);
            double t16149 = -t16136+t16138+t16139;
            double t16150 = 1/pow(t16054,8.0/3.0);
            double t16164 = t16150*t16082*t16097*t16099*(2.5E1/2.0);
            double t16151 = exp(-t16164);
            double t16152 = Cx*(1.0E1/7.0);
            double t16153 = Cc1*(1.0/1.0E3);
            double t16154 = Cc3*t16061*t16062*(1.0/1.0E3);
            double t16155 = Cc2*c*t16055*(1.0/1.0E3);
            double t16156 = t16153+t16154+t16155;
            double t16157 = Cc5*t16061*t16062;
            double t16158 = 1/t16054;
            double t16159 = Cc6*c*t16061*t16158;
            double t16160 = Cc4*c*t16055;
            double t16161 = t16160+t16157+t16159+1.0;
            double t16162 = 1/t16161;
            double t16170 = t16162*t16156;
            double t16163 = Cc0+t16152-t16170;
            double t16165 = 1/alph;
            double t16166 = bet*bet;
            double t16167 = alph*t16100*t16101*t16107*t16082*t16083*t16119*t16099*(1.0/6.4E1);
            double t16168 = t16142+t16167;
            double t16169 = 1/t16144;
            v_rho_b_[index] = -t16114-t16095-t16054*(-t16136+t16138+t16139+(t16165*t16166*(alph*t16083*t16169* \
               (t16110*t16108*t16109*t16146*t16097*(7.0/4.8E1)+alph*t16100*t16107*t16082*t16145*t16083*t16119*t16099* \
               (7.0/9.6E1)+t16100*t16101*t16120*t16140*t16107*t16117*t16082*t16147*t16149*t16099*(1.0/1.6E1))*2.0- \
               alph*1/(t16144*t16144)*t16083*t16168*(t16100*t16120*t16140*t16107*t16082*t16145*t16098*t16099*(7.0/ \
               4.8E1)+alph*t16110*t16108*t16109*t16083*t16119*t16146*t16097*(7.0/2.4E1)+t16110*t16111*t16120*t16140* \
               t16108*t16117*t16109*t16147*t16149*t16097*(1.0/2.0)+alph*1/(bet*bet*bet*bet)*t16100*t16101*t16120* \
               t16107*t16117*t16082*1/(t16118*t16118*t16118)*t16149*t16099*(1.0/4.0))*2.0)*(1.0/4.0))/((alph*t16083* \
               (t16142+(alph*t16100*t16101*t16107*t16082*t16083*t16099*(1.0/6.4E1))/t16106)*2.0)/(t16141+t16100*t16101* \
               t16120*1/(t16106*t16106)*t16107*t16082*t16098*t16099*(1.0/3.2E1)+1.0)+1.0)+1/(k*k*k)*nu*t16110*t16151* \
               t16107*1/(t16054*t16054*t16054*t16054*t16054*t16054)*t16163*(2.5E1/1.2E1)+nu*t16110*t16111*t16151* \
               t16108*t16109*t16097*(t16162*(Cc2*c*t16066*(1.0/3.0E3)+Cc3*t16061*t16072*(1.0/1.5E3))-1/(t16161*t16161) \
               *t16156*(Cc4*c*t16066*(1.0/3.0)+Cc5*t16061*t16072*(2.0/3.0)+Cc6*c*t16061*1/(t16054*t16054)))*(1.0/ \
               3.2E1)-nu*t16110*t16151*t16108*t16109*t16163*t16146*t16097*(7.0/9.6E1))+t16165*t16166*log(alph*t16083* \
               t16168*t16169*2.0+1.0)*(1.0/4.0)-nu*t16110*t16111*t16151*t16108*t16109*t16163*t16097*(1.0/3.2E1);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t15525 = rho_a[index]+rho_b[index];
                double t15526 = 1/t15525;
                double t15527 = rho_a[index]-rho_b[index];
                double t15528 = t15526*t15527;
                double t15529 = 1/bet;
                double t15530 = t15528+1.0;
                double t15531 = pow(t15530,2.0/3.0);
                double t15532 = t15531*(1.0/2.0);
                double t15533 = -t15528+1.0;
                double t15534 = pow(t15533,2.0/3.0);
                double t15535 = t15534*(1.0/2.0);
                double t15536 = t15532+t15535;
                double t15537 = 1/pow(t15525,1.0/3.0);
                double t15538 = c*t15537;
                double t15539 = sqrt(t15538);
                double t15540 = pow(t15538,3.0/2.0);
                double t15541 = c*c;
                double t15542 = 1/pow(t15525,2.0/3.0);
                double t15543 = 1/c0p;
                double t15544 = b1p*t15539;
                double t15545 = b3p*t15540;
                double t15546 = b4p*t15541*t15542;
                double t15547 = b2p*c*t15537;
                double t15548 = t15544+t15545+t15546+t15547;
                double t15549 = 1/t15548;
                double t15550 = t15543*t15549*(1.0/2.0);
                double t15551 = t15550+1.0;
                double t15552 = log(t15551);
                double t15553 = a1p*c*t15537;
                double t15554 = t15553+1.0;
                double t15555 = c0p*t15552*t15554*2.0;
                double t15556 = t15527*t15527;
                double t15557 = two_13*2.0;
                double t15558 = t15557-2.0;
                double t15559 = 1/t15558;
                double t15560 = 1/(t15525*t15525*t15525*t15525);
                double t15561 = t15556*t15556;
                double t15562 = pow(t15530,4.0/3.0);
                double t15563 = pow(t15533,4.0/3.0);
                double t15564 = t15562+t15563-2.0;
                double t15565 = gamma_ab[index]*2.0;
                double t15566 = gamma_aa[index]+gamma_bb[index]+t15565;
                double t15567 = 1/(bet*bet);
                double t15568 = 1/(k*k);
                double t15569 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t15570 = 1/(t15536*t15536*t15536);
                double t15571 = 1/c0f;
                double t15572 = b1f*t15539;
                double t15573 = b3f*t15540;
                double t15574 = b4f*t15541*t15542;
                double t15575 = b2f*c*t15537;
                double t15576 = t15572+t15573+t15574+t15575;
                double t15577 = 1/t15576;
                double t15578 = t15571*t15577*(1.0/2.0);
                double t15579 = t15578+1.0;
                double t15580 = log(t15579);
                double t15581 = a1f*c*t15537;
                double t15582 = t15581+1.0;
                double t15609 = c0f*t15580*t15582*2.0;
                double t15583 = t15555-t15609;
                double t15584 = 1/d2fz0;
                double t15585 = 1/Aa;
                double t15586 = b1a*t15539;
                double t15587 = b3a*t15540;
                double t15588 = b4a*t15541*t15542;
                double t15589 = b2a*c*t15537;
                double t15590 = t15586+t15587+t15588+t15589;
                double t15591 = 1/t15590;
                double t15592 = t15591*t15585*(1.0/2.0);
                double t15593 = t15592+1.0;
                double t15594 = log(t15593);
                double t15595 = a1a*c*t15537;
                double t15596 = t15595+1.0;
                double t15597 = t15560*t15561;
                double t15598 = t15597-1.0;
                double t15599 = Aa*t15564*t15584*t15594*t15559*t15596*t15598*2.0;
                double t15610 = t15560*t15561*t15564*t15583*t15559;
                double t15600 = -t15610+t15555+t15599;
                double t15601 = alph*t15600*t15570*t15567*2.0;
                double t15602 = exp(t15601);
                double t15603 = t15602-1.0;
                double t15604 = 1/pow(t15525,1.4E1/3.0);
                double t15605 = 1/(t15536*t15536*t15536*t15536);
                double t15606 = t15566*t15566;
                double t15607 = 1/k;
                double t15608 = 1/(pi_m12*pi_m12);
                double t15611 = 1/t15603;
                double t15612 = 1/pow(t15525,7.0/3.0);
                double t15613 = 1/(t15536*t15536);
                double t15614 = alph*alph;
                double t15615 = 1/(t15603*t15603);
                double t15616 = t15604*t15605*t15614*t15606*t15615*t15567*t15568*t15569*(1.0/6.4E1);
                double t15617 = alph*t15611*t15612*t15613*t15607*t15608*t15529*t15566*(1.0/8.0);
                double t15618 = t15616+t15617+1.0;
                double t15619 = 1/t15618;
                double t15620 = t15612*t15613*t15607*t15608*t15566*(1.0/1.6E1);
                double t15621 = alph*t15611*t15604*t15605*t15606*t15529*t15568*t15569*(1.0/1.28E2);
                double t15622 = t15620+t15621;
                double t15623 = gamma_aa[index]*2.0;
                double t15624 = gamma_ab[index]*4.0;
                double t15625 = gamma_bb[index]*2.0;
                double t15626 = t15623+t15624+t15625;
                double t15627 = t15536*t15536;
                double t15628 = 1/pow(t15525,8.0/3.0);
                double t15629 = exp(t15627*t15628*t15566*t15568*-2.5E1);
                double t15630 = Cx*(1.0E1/7.0);
                double t15631 = Cc1*(1.0/1.0E3);
                double t15632 = Cc3*t15541*t15542*(1.0/1.0E3);
                double t15633 = Cc2*c*t15537*(1.0/1.0E3);
                double t15634 = t15631+t15632+t15633;
                double t15635 = Cc5*t15541*t15542;
                double t15636 = Cc6*c*t15541*t15526;
                double t15637 = Cc4*c*t15537;
                double t15638 = t15635+t15636+t15637+1.0;
                double t15639 = 1/t15638;
                double t15640 = Cc0+t15630-t15634*t15639;
                v_gamma_aa_[index] = t15525*(((bet*bet)*t15536*t15627*(alph*t15529*t15619*(t15612*t15613*t15607*t15608* \
                   (1.0/1.6E1)+alph*t15611*t15604*t15605*t15626*t15529*t15568*t15569*(1.0/1.28E2))*2.0-alph*t15622*1/ \
                   (t15618*t15618)*t15529*(alph*t15611*t15612*t15613*t15607*t15608*t15529*(1.0/8.0)+t15604*t15605*t15614* \
                   t15615*t15626*t15567*t15568*t15569*(1.0/6.4E1))*2.0)*(1.0/2.0))/(alph*(alph*t15622*t15529*t15619*2.0+ \
                   1.0))-nu*t15612*t15640*t15607*t15536*t15608*t15629*(1.0/1.6E1)+1/(k*k*k)*nu*t15640*1/(t15525*t15525* \
                   t15525*t15525*t15525)*t15536*t15608*t15627*t15566*t15629*(2.5E1/1.6E1));
            } else if (rho_a[index] > cutoff_) {
                double t16736 = rho_a[index]+rho_b[index];
                double t16737 = 1/bet;
                double t16738 = 1/pow(t16736,1.0/3.0);
                double t16739 = c*t16738;
                double t16740 = pow(2.0,1.0/3.0);
                double t16741 = sqrt(t16739);
                double t16742 = pow(t16739,3.0/2.0);
                double t16743 = c*c;
                double t16744 = 1/pow(t16736,2.0/3.0);
                double t16745 = 1/c0p;
                double t16746 = b1p*t16741;
                double t16747 = b3p*t16742;
                double t16748 = b4p*t16743*t16744;
                double t16749 = b2p*c*t16738;
                double t16750 = t16746+t16747+t16748+t16749;
                double t16751 = 1/t16750;
                double t16752 = t16751*t16745*(1.0/2.0);
                double t16753 = t16752+1.0;
                double t16754 = log(t16753);
                double t16755 = a1p*c*t16738;
                double t16756 = t16755+1.0;
                double t16757 = c0p*t16754*t16756*2.0;
                double t16758 = 1/(bet*bet);
                double t16759 = 1/(k*k);
                double t16760 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t16761 = 1/pow(t16736,1.4E1/3.0);
                double t16762 = t16740*2.0;
                double t16763 = t16762-2.0;
                double t16764 = two_13*2.0;
                double t16765 = t16764-2.0;
                double t16766 = 1/t16765;
                double t16767 = 1/c0f;
                double t16768 = b1f*t16741;
                double t16769 = b3f*t16742;
                double t16770 = b4f*t16743*t16744;
                double t16771 = b2f*c*t16738;
                double t16772 = t16770+t16771+t16768+t16769;
                double t16773 = 1/t16772;
                double t16774 = t16773*t16767*(1.0/2.0);
                double t16775 = t16774+1.0;
                double t16776 = log(t16775);
                double t16777 = a1f*c*t16738;
                double t16778 = t16777+1.0;
                double t16789 = c0f*t16776*t16778*2.0;
                double t16779 = t16757-t16789;
                double t16790 = t16763*t16766*t16779;
                double t16780 = -t16790+t16757;
                double t16781 = alph*t16780*t16758*4.0;
                double t16782 = exp(t16781);
                double t16783 = t16782-1.0;
                double t16792 = gamma_ab[index]*2.0;
                double t16784 = gamma_aa[index]+gamma_bb[index]+t16792;
                double t16785 = pow(2.0,2.0/3.0);
                double t16786 = 1/k;
                double t16787 = 1/(pi_m12*pi_m12);
                double t16788 = 1/pow(t16736,7.0/3.0);
                double t16791 = 1/t16783;
                double t16793 = alph*alph;
                double t16794 = 1/(t16783*t16783);
                double t16795 = gamma_aa[index]*2.0;
                double t16796 = gamma_ab[index]*4.0;
                double t16797 = gamma_bb[index]*2.0;
                double t16798 = t16795+t16796+t16797;
                double t16799 = t16784*t16784;
                double t16800 = t16740*t16760*t16761*t16793*t16758*t16794*t16759*t16799*(1.0/3.2E1);
                double t16801 = alph*t16737*t16791*t16784*t16785*t16786*t16787*t16788*(1.0/8.0);
                double t16802 = t16800+t16801+1.0;
                double t16803 = t16784*t16785*t16786*t16787*t16788*(1.0/1.6E1);
                double t16804 = alph*t16740*t16760*t16761*t16737*t16791*t16759*t16799*(1.0/6.4E1);
                double t16805 = t16803+t16804;
                double t16806 = 1/t16802;
                double t16807 = 1/pow(t16736,8.0/3.0);
                double t16808 = exp(t16740*t16807*t16784*t16759*(-2.5E1/2.0));
                double t16809 = Cx*(1.0E1/7.0);
                double t16810 = Cc1*(1.0/1.0E3);
                double t16811 = Cc3*t16743*t16744*(1.0/1.0E3);
                double t16812 = Cc2*c*t16738*(1.0/1.0E3);
                double t16813 = t16810+t16811+t16812;
                double t16814 = Cc5*t16743*t16744;
                double t16815 = 1/t16736;
                double t16816 = Cc6*c*t16743*t16815;
                double t16817 = Cc4*c*t16738;
                double t16818 = t16814+t16816+t16817+1.0;
                double t16819 = 1/t16818;
                double t16820 = Cc0+t16809-t16813*t16819;
                v_gamma_aa_[index] = t16736*(((bet*bet)*(alph*t16806*t16737*(t16785*t16786*t16787*t16788*(1.0/1.6E1) \
                   +alph*t16740*t16760*t16761*t16737*t16791*t16759*t16798*(1.0/6.4E1))*2.0-alph*1/(t16802*t16802)*t16805* \
                   t16737*(alph*t16737*t16791*t16785*t16786*t16787*t16788*(1.0/8.0)+t16740*t16760*t16761*t16793*t16758* \
                   t16794*t16759*t16798*(1.0/3.2E1))*2.0)*(1.0/4.0))/(alph*(alph*t16805*t16806*t16737*2.0+1.0))+1/(k* \
                   k*k)*nu*t16820*1/(t16736*t16736*t16736*t16736*t16736)*t16808*t16784*t16787*(2.5E1/3.2E1)-nu*t16820* \
                   t16808*t16785*t16786*t16787*t16788*(1.0/3.2E1));
            } else if (rho_b[index] > cutoff_) {
                double t16172 = rho_a[index]+rho_b[index];
                double t16173 = 1/bet;
                double t16174 = 1/pow(t16172,1.0/3.0);
                double t16175 = c*t16174;
                double t16176 = pow(2.0,1.0/3.0);
                double t16177 = sqrt(t16175);
                double t16178 = pow(t16175,3.0/2.0);
                double t16179 = c*c;
                double t16180 = 1/pow(t16172,2.0/3.0);
                double t16181 = 1/c0p;
                double t16182 = b1p*t16177;
                double t16183 = b3p*t16178;
                double t16184 = b4p*t16180*t16179;
                double t16185 = b2p*c*t16174;
                double t16186 = t16182+t16183+t16184+t16185;
                double t16187 = 1/t16186;
                double t16188 = t16181*t16187*(1.0/2.0);
                double t16189 = t16188+1.0;
                double t16190 = log(t16189);
                double t16191 = a1p*c*t16174;
                double t16192 = t16191+1.0;
                double t16193 = c0p*t16190*t16192*2.0;
                double t16194 = 1/(bet*bet);
                double t16195 = 1/(k*k);
                double t16196 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t16197 = 1/pow(t16172,1.4E1/3.0);
                double t16198 = t16176*2.0;
                double t16199 = t16198-2.0;
                double t16200 = two_13*2.0;
                double t16201 = t16200-2.0;
                double t16202 = 1/t16201;
                double t16203 = 1/c0f;
                double t16204 = b1f*t16177;
                double t16205 = b3f*t16178;
                double t16206 = b4f*t16180*t16179;
                double t16207 = b2f*c*t16174;
                double t16208 = t16204+t16205+t16206+t16207;
                double t16209 = 1/t16208;
                double t16210 = t16203*t16209*(1.0/2.0);
                double t16211 = t16210+1.0;
                double t16212 = log(t16211);
                double t16213 = a1f*c*t16174;
                double t16214 = t16213+1.0;
                double t16225 = c0f*t16212*t16214*2.0;
                double t16215 = -t16225+t16193;
                double t16216 = t16193-t16202*t16215*t16199;
                double t16217 = alph*t16216*t16194*4.0;
                double t16218 = exp(t16217);
                double t16219 = t16218-1.0;
                double t16226 = gamma_ab[index]*2.0;
                double t16220 = gamma_aa[index]+gamma_bb[index]+t16226;
                double t16221 = pow(2.0,2.0/3.0);
                double t16222 = 1/k;
                double t16223 = 1/(pi_m12*pi_m12);
                double t16224 = 1/pow(t16172,7.0/3.0);
                double t16227 = t16225-t16193;
                double t16228 = t16202*t16227*t16199;
                double t16229 = t16228+t16193;
                double t16230 = alph*t16229*t16194*4.0;
                double t16231 = exp(t16230);
                double t16232 = t16231-1.0;
                double t16233 = 1/t16232;
                double t16234 = alph*alph;
                double t16235 = gamma_aa[index]*2.0;
                double t16236 = gamma_ab[index]*4.0;
                double t16237 = gamma_bb[index]*2.0;
                double t16238 = t16235+t16236+t16237;
                double t16239 = t16220*t16220;
                double t16240 = 1/(t16232*t16232);
                double t16241 = alph*t16220*t16221*t16222*t16223*t16224*t16233*t16173*(1.0/8.0);
                double t16242 = t16220*t16221*t16222*t16223*t16224*(1.0/1.6E1);
                double t16243 = alph*t16233*t16173*t16176*t16239*t16195*t16196*t16197*(1.0/6.4E1);
                double t16244 = t16242+t16243;
                double t16245 = t16240*t16234*t16176*t16194*t16239*t16195*t16196*t16197*(1.0/3.2E1);
                double t16246 = t16241+t16245+1.0;
                double t16247 = 1/pow(t16172,8.0/3.0);
                double t16248 = exp(t16220*t16247*t16176*t16195*(-2.5E1/2.0));
                double t16249 = Cx*(1.0E1/7.0);
                double t16250 = Cc1*(1.0/1.0E3);
                double t16251 = Cc3*t16180*t16179*(1.0/1.0E3);
                double t16252 = Cc2*c*t16174*(1.0/1.0E3);
                double t16253 = t16250+t16251+t16252;
                double t16254 = Cc5*t16180*t16179;
                double t16255 = 1/t16172;
                double t16256 = Cc6*c*t16255*t16179;
                double t16257 = Cc4*c*t16174;
                double t16258 = t16254+t16256+t16257+1.0;
                double t16259 = 1/t16258;
                double t16260 = Cc0+t16249-t16253*t16259;
                v_gamma_aa_[index] = t16172*(((bet*bet)*((alph*t16173*(t16221*t16222*t16223*t16224*(1.0/1.6E1)+(alph* \
                   t16173*t16238*t16176*t16195*t16196*t16197*(1.0/6.4E1))/t16219)*2.0)/(t16241+t16234*1/(t16219*t16219) \
                   *t16176*t16194*t16239*t16195*t16196*t16197*(1.0/3.2E1)+1.0)-alph*t16244*t16173*1/(t16246*t16246)*(alph* \
                   t16221*t16222*t16223*t16224*t16233*t16173*(1.0/8.0)+t16240*t16234*t16238*t16176*t16194*t16195*t16196* \
                   t16197*(1.0/3.2E1))*2.0)*(1.0/4.0))/(alph*((alph*t16244*t16173*2.0)/t16246+1.0))+1/(k*k*k)*nu*t16220* \
                   t16223*t16260*1/(t16172*t16172*t16172*t16172*t16172)*t16248*(2.5E1/3.2E1)-nu*t16221*t16222*t16223* \
                   t16224*t16260*t16248*(1.0/3.2E1));
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t15642 = rho_a[index]+rho_b[index];
                double t15643 = 1/t15642;
                double t15644 = rho_a[index]-rho_b[index];
                double t15645 = t15643*t15644;
                double t15646 = 1/bet;
                double t15647 = t15645+1.0;
                double t15648 = pow(t15647,2.0/3.0);
                double t15649 = t15648*(1.0/2.0);
                double t15650 = -t15645+1.0;
                double t15651 = pow(t15650,2.0/3.0);
                double t15652 = t15651*(1.0/2.0);
                double t15653 = t15652+t15649;
                double t15654 = 1/pow(t15642,1.0/3.0);
                double t15655 = c*t15654;
                double t15656 = sqrt(t15655);
                double t15657 = pow(t15655,3.0/2.0);
                double t15658 = c*c;
                double t15659 = 1/pow(t15642,2.0/3.0);
                double t15660 = 1/c0p;
                double t15661 = b1p*t15656;
                double t15662 = b3p*t15657;
                double t15663 = b4p*t15658*t15659;
                double t15664 = b2p*c*t15654;
                double t15665 = t15661+t15662+t15663+t15664;
                double t15666 = 1/t15665;
                double t15667 = t15660*t15666*(1.0/2.0);
                double t15668 = t15667+1.0;
                double t15669 = log(t15668);
                double t15670 = a1p*c*t15654;
                double t15671 = t15670+1.0;
                double t15672 = c0p*t15671*t15669*2.0;
                double t15673 = t15644*t15644;
                double t15674 = two_13*2.0;
                double t15675 = t15674-2.0;
                double t15676 = 1/t15675;
                double t15677 = 1/(t15642*t15642*t15642*t15642);
                double t15678 = t15673*t15673;
                double t15679 = pow(t15647,4.0/3.0);
                double t15680 = pow(t15650,4.0/3.0);
                double t15681 = t15680+t15679-2.0;
                double t15682 = gamma_ab[index]*2.0;
                double t15683 = gamma_aa[index]+gamma_bb[index]+t15682;
                double t15684 = 1/(bet*bet);
                double t15685 = 1/(k*k);
                double t15686 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t15687 = 1/(t15653*t15653*t15653);
                double t15688 = 1/c0f;
                double t15689 = b1f*t15656;
                double t15690 = b3f*t15657;
                double t15691 = b4f*t15658*t15659;
                double t15692 = b2f*c*t15654;
                double t15693 = t15690+t15691+t15692+t15689;
                double t15694 = 1/t15693;
                double t15695 = t15694*t15688*(1.0/2.0);
                double t15696 = t15695+1.0;
                double t15697 = log(t15696);
                double t15698 = a1f*c*t15654;
                double t15699 = t15698+1.0;
                double t15726 = c0f*t15697*t15699*2.0;
                double t15700 = t15672-t15726;
                double t15701 = 1/d2fz0;
                double t15702 = 1/Aa;
                double t15703 = b1a*t15656;
                double t15704 = b3a*t15657;
                double t15705 = b4a*t15658*t15659;
                double t15706 = b2a*c*t15654;
                double t15707 = t15703+t15704+t15705+t15706;
                double t15708 = 1/t15707;
                double t15709 = t15702*t15708*(1.0/2.0);
                double t15710 = t15709+1.0;
                double t15711 = log(t15710);
                double t15712 = a1a*c*t15654;
                double t15713 = t15712+1.0;
                double t15714 = t15677*t15678;
                double t15715 = t15714-1.0;
                double t15716 = Aa*t15701*t15711*t15713*t15715*t15681*t15676*2.0;
                double t15727 = t15700*t15681*t15676*t15677*t15678;
                double t15717 = t15716+t15672-t15727;
                double t15718 = alph*t15717*t15684*t15687*2.0;
                double t15719 = exp(t15718);
                double t15720 = t15719-1.0;
                double t15721 = 1/pow(t15642,1.4E1/3.0);
                double t15722 = 1/(t15653*t15653*t15653*t15653);
                double t15723 = t15683*t15683;
                double t15724 = 1/k;
                double t15725 = 1/(pi_m12*pi_m12);
                double t15728 = 1/t15720;
                double t15729 = 1/pow(t15642,7.0/3.0);
                double t15730 = 1/(t15653*t15653);
                double t15731 = alph*alph;
                double t15732 = 1/(t15720*t15720);
                double t15733 = t15721*t15722*t15731*t15723*t15732*t15684*t15685*t15686*(1.0/6.4E1);
                double t15734 = alph*t15730*t15724*t15725*t15646*t15683*t15728*t15729*(1.0/8.0);
                double t15735 = t15733+t15734+1.0;
                double t15736 = 1/t15735;
                double t15737 = t15730*t15724*t15725*t15683*t15729*(1.0/1.6E1);
                double t15738 = alph*t15721*t15722*t15723*t15646*t15728*t15685*t15686*(1.0/1.28E2);
                double t15739 = t15737+t15738;
                double t15740 = gamma_aa[index]*4.0;
                double t15741 = gamma_ab[index]*8.0;
                double t15742 = gamma_bb[index]*4.0;
                double t15743 = t15740+t15741+t15742;
                double t15744 = t15653*t15653;
                double t15745 = 1/pow(t15642,8.0/3.0);
                double t15746 = exp(t15744*t15745*t15683*t15685*-2.5E1);
                double t15747 = Cx*(1.0E1/7.0);
                double t15748 = Cc1*(1.0/1.0E3);
                double t15749 = Cc3*t15658*t15659*(1.0/1.0E3);
                double t15750 = Cc2*c*t15654*(1.0/1.0E3);
                double t15751 = t15750+t15748+t15749;
                double t15752 = Cc5*t15658*t15659;
                double t15753 = Cc6*c*t15643*t15658;
                double t15754 = Cc4*c*t15654;
                double t15755 = t15752+t15753+t15754+1.0;
                double t15756 = 1/t15755;
                double t15757 = Cc0+t15747-t15751*t15756;
                v_gamma_ab_[index] = t15642*(((bet*bet)*t15653*t15744*(alph*t15646*t15736*(t15730*t15724*t15725*t15729* \
                   (1.0/8.0)+alph*t15721*t15722*t15743*t15646*t15728*t15685*t15686*(1.0/1.28E2))*2.0-alph*1/(t15735*t15735) \
                   *t15646*t15739*(alph*t15730*t15724*t15725*t15646*t15728*t15729*(1.0/4.0)+t15721*t15722*t15731*t15732* \
                   t15743*t15684*t15685*t15686*(1.0/6.4E1))*2.0)*(1.0/2.0))/(alph*(alph*t15646*t15736*t15739*2.0+1.0) \
                   )-nu*t15724*t15653*t15725*t15746*t15729*t15757*(1.0/8.0)+1/(k*k*k)*nu*1/(t15642*t15642*t15642*t15642* \
                   t15642)*t15653*t15725*t15744*t15683*t15746*t15757*(2.5E1/8.0));
            } else if (rho_a[index] > cutoff_) {
                double t16822 = rho_a[index]+rho_b[index];
                double t16823 = 1/bet;
                double t16824 = 1/pow(t16822,1.0/3.0);
                double t16825 = c*t16824;
                double t16826 = pow(2.0,1.0/3.0);
                double t16827 = sqrt(t16825);
                double t16828 = pow(t16825,3.0/2.0);
                double t16829 = c*c;
                double t16830 = 1/pow(t16822,2.0/3.0);
                double t16831 = 1/c0p;
                double t16832 = b1p*t16827;
                double t16833 = b3p*t16828;
                double t16834 = b4p*t16830*t16829;
                double t16835 = b2p*c*t16824;
                double t16836 = t16832+t16833+t16834+t16835;
                double t16837 = 1/t16836;
                double t16838 = t16831*t16837*(1.0/2.0);
                double t16839 = t16838+1.0;
                double t16840 = log(t16839);
                double t16841 = a1p*c*t16824;
                double t16842 = t16841+1.0;
                double t16843 = c0p*t16840*t16842*2.0;
                double t16844 = 1/(bet*bet);
                double t16845 = 1/(k*k);
                double t16846 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t16847 = 1/pow(t16822,1.4E1/3.0);
                double t16848 = t16826*2.0;
                double t16849 = t16848-2.0;
                double t16850 = two_13*2.0;
                double t16851 = t16850-2.0;
                double t16852 = 1/t16851;
                double t16853 = 1/c0f;
                double t16854 = b1f*t16827;
                double t16855 = b3f*t16828;
                double t16856 = b4f*t16830*t16829;
                double t16857 = b2f*c*t16824;
                double t16858 = t16854+t16855+t16856+t16857;
                double t16859 = 1/t16858;
                double t16860 = t16853*t16859*(1.0/2.0);
                double t16861 = t16860+1.0;
                double t16862 = log(t16861);
                double t16863 = a1f*c*t16824;
                double t16864 = t16863+1.0;
                double t16875 = c0f*t16862*t16864*2.0;
                double t16865 = t16843-t16875;
                double t16876 = t16852*t16865*t16849;
                double t16866 = t16843-t16876;
                double t16867 = alph*t16844*t16866*4.0;
                double t16868 = exp(t16867);
                double t16869 = t16868-1.0;
                double t16878 = gamma_ab[index]*2.0;
                double t16870 = gamma_aa[index]+gamma_bb[index]+t16878;
                double t16871 = pow(2.0,2.0/3.0);
                double t16872 = 1/k;
                double t16873 = 1/(pi_m12*pi_m12);
                double t16874 = 1/pow(t16822,7.0/3.0);
                double t16877 = 1/t16869;
                double t16879 = alph*alph;
                double t16880 = 1/(t16869*t16869);
                double t16881 = gamma_aa[index]*4.0;
                double t16882 = gamma_ab[index]*8.0;
                double t16883 = gamma_bb[index]*4.0;
                double t16884 = t16881+t16882+t16883;
                double t16885 = t16870*t16870;
                double t16886 = t16826*t16844*t16880*t16845*t16846*t16847*t16885*t16879*(1.0/3.2E1);
                double t16887 = alph*t16823*t16870*t16871*t16872*t16873*t16874*t16877*(1.0/8.0);
                double t16888 = t16886+t16887+1.0;
                double t16889 = t16870*t16871*t16872*t16873*t16874*(1.0/1.6E1);
                double t16890 = alph*t16823*t16826*t16845*t16846*t16847*t16885*t16877*(1.0/6.4E1);
                double t16891 = t16890+t16889;
                double t16892 = 1/t16888;
                double t16893 = 1/pow(t16822,8.0/3.0);
                double t16894 = exp(t16870*t16826*t16845*t16893*(-2.5E1/2.0));
                double t16895 = Cx*(1.0E1/7.0);
                double t16896 = Cc1*(1.0/1.0E3);
                double t16897 = Cc3*t16830*t16829*(1.0/1.0E3);
                double t16898 = Cc2*c*t16824*(1.0/1.0E3);
                double t16899 = t16896+t16897+t16898;
                double t16900 = Cc5*t16830*t16829;
                double t16901 = 1/t16822;
                double t16902 = Cc6*c*t16901*t16829;
                double t16903 = Cc4*c*t16824;
                double t16904 = t16900+t16902+t16903+1.0;
                double t16905 = 1/t16904;
                double t16906 = Cc0+t16895-t16905*t16899;
                v_gamma_ab_[index] = t16822*(((bet*bet)*(alph*t16823*t16892*(t16871*t16872*t16873*t16874*(1.0/8.0) \
                   +alph*t16823*t16826*t16845*t16846*t16847*t16884*t16877*(1.0/6.4E1))*2.0-alph*t16823*t16891*1/(t16888* \
                   t16888)*(alph*t16823*t16871*t16872*t16873*t16874*t16877*(1.0/4.0)+t16826*t16844*t16880*t16845*t16846* \
                   t16847*t16884*t16879*(1.0/3.2E1))*2.0)*(1.0/4.0))/(alph*(alph*t16823*t16891*t16892*2.0+1.0))+1/(k* \
                   k*k)*nu*1/(t16822*t16822*t16822*t16822*t16822)*t16870*t16906*t16873*t16894*(2.5E1/1.6E1)-nu*t16906* \
                   t16871*t16872*t16873*t16874*t16894*(1.0/1.6E1));
            } else if (rho_b[index] > cutoff_) {
                double t16262 = rho_a[index]+rho_b[index];
                double t16263 = 1/bet;
                double t16264 = 1/pow(t16262,1.0/3.0);
                double t16265 = c*t16264;
                double t16266 = pow(2.0,1.0/3.0);
                double t16267 = sqrt(t16265);
                double t16268 = pow(t16265,3.0/2.0);
                double t16269 = c*c;
                double t16270 = 1/pow(t16262,2.0/3.0);
                double t16271 = 1/c0p;
                double t16272 = b1p*t16267;
                double t16273 = b3p*t16268;
                double t16274 = b4p*t16270*t16269;
                double t16275 = b2p*c*t16264;
                double t16276 = t16272+t16273+t16274+t16275;
                double t16277 = 1/t16276;
                double t16278 = t16271*t16277*(1.0/2.0);
                double t16279 = t16278+1.0;
                double t16280 = log(t16279);
                double t16281 = a1p*c*t16264;
                double t16282 = t16281+1.0;
                double t16283 = c0p*t16280*t16282*2.0;
                double t16284 = 1/(bet*bet);
                double t16285 = 1/(k*k);
                double t16286 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t16287 = 1/pow(t16262,1.4E1/3.0);
                double t16288 = t16266*2.0;
                double t16289 = t16288-2.0;
                double t16290 = two_13*2.0;
                double t16291 = t16290-2.0;
                double t16292 = 1/t16291;
                double t16293 = 1/c0f;
                double t16294 = b1f*t16267;
                double t16295 = b3f*t16268;
                double t16296 = b4f*t16270*t16269;
                double t16297 = b2f*c*t16264;
                double t16298 = t16294+t16295+t16296+t16297;
                double t16299 = 1/t16298;
                double t16300 = t16293*t16299*(1.0/2.0);
                double t16301 = t16300+1.0;
                double t16302 = log(t16301);
                double t16303 = a1f*c*t16264;
                double t16304 = t16303+1.0;
                double t16315 = c0f*t16302*t16304*2.0;
                double t16305 = -t16315+t16283;
                double t16306 = t16283-t16305*t16292*t16289;
                double t16307 = alph*t16306*t16284*4.0;
                double t16308 = exp(t16307);
                double t16309 = t16308-1.0;
                double t16316 = gamma_ab[index]*2.0;
                double t16310 = gamma_aa[index]+gamma_bb[index]+t16316;
                double t16311 = pow(2.0,2.0/3.0);
                double t16312 = 1/k;
                double t16313 = 1/(pi_m12*pi_m12);
                double t16314 = 1/pow(t16262,7.0/3.0);
                double t16317 = t16315-t16283;
                double t16318 = t16317*t16292*t16289;
                double t16319 = t16318+t16283;
                double t16320 = alph*t16319*t16284*4.0;
                double t16321 = exp(t16320);
                double t16322 = t16321-1.0;
                double t16323 = 1/t16322;
                double t16324 = alph*alph;
                double t16325 = gamma_aa[index]*4.0;
                double t16326 = gamma_ab[index]*8.0;
                double t16327 = gamma_bb[index]*4.0;
                double t16328 = t16325+t16326+t16327;
                double t16329 = t16310*t16310;
                double t16330 = 1/(t16322*t16322);
                double t16331 = alph*t16310*t16311*t16312*t16313*t16314*t16323*t16263*(1.0/8.0);
                double t16332 = t16310*t16311*t16312*t16313*t16314*(1.0/1.6E1);
                double t16333 = alph*t16323*t16263*t16266*t16329*t16285*t16286*t16287*(1.0/6.4E1);
                double t16334 = t16332+t16333;
                double t16335 = t16330*t16324*t16266*t16284*t16329*t16285*t16286*t16287*(1.0/3.2E1);
                double t16336 = t16331+t16335+1.0;
                double t16337 = 1/pow(t16262,8.0/3.0);
                double t16338 = exp(t16310*t16337*t16266*t16285*(-2.5E1/2.0));
                double t16339 = Cx*(1.0E1/7.0);
                double t16340 = Cc1*(1.0/1.0E3);
                double t16341 = Cc3*t16270*t16269*(1.0/1.0E3);
                double t16342 = Cc2*c*t16264*(1.0/1.0E3);
                double t16343 = t16340+t16341+t16342;
                double t16344 = Cc5*t16270*t16269;
                double t16345 = 1/t16262;
                double t16346 = Cc6*c*t16345*t16269;
                double t16347 = Cc4*c*t16264;
                double t16348 = t16344+t16346+t16347+1.0;
                double t16349 = 1/t16348;
                double t16350 = Cc0+t16339-t16343*t16349;
                v_gamma_ab_[index] = t16262*(((bet*bet)*((alph*t16263*(t16311*t16312*t16313*t16314*(1.0/8.0)+(alph* \
                   t16263*t16328*t16266*t16285*t16286*t16287*(1.0/6.4E1))/t16309)*2.0)/(t16331+t16324*1/(t16309*t16309) \
                   *t16266*t16284*t16329*t16285*t16286*t16287*(1.0/3.2E1)+1.0)-alph*t16334*t16263*1/(t16336*t16336)*(alph* \
                   t16311*t16312*t16313*t16314*t16323*t16263*(1.0/4.0)+t16330*t16324*t16328*t16266*t16284*t16285*t16286* \
                   t16287*(1.0/3.2E1))*2.0)*(1.0/4.0))/(alph*((alph*t16334*t16263*2.0)/t16336+1.0))+1/(k*k*k)*nu*t16310* \
                   t16313*t16350*1/(t16262*t16262*t16262*t16262*t16262)*t16338*(2.5E1/1.6E1)-nu*t16311*t16312*t16313* \
                   t16314*t16350*t16338*(1.0/1.6E1));
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t15759 = rho_a[index]+rho_b[index];
                double t15760 = 1/t15759;
                double t15761 = rho_a[index]-rho_b[index];
                double t15762 = t15760*t15761;
                double t15763 = 1/bet;
                double t15764 = t15762+1.0;
                double t15765 = pow(t15764,2.0/3.0);
                double t15766 = t15765*(1.0/2.0);
                double t15767 = -t15762+1.0;
                double t15768 = pow(t15767,2.0/3.0);
                double t15769 = t15768*(1.0/2.0);
                double t15770 = t15766+t15769;
                double t15771 = 1/pow(t15759,1.0/3.0);
                double t15772 = c*t15771;
                double t15773 = sqrt(t15772);
                double t15774 = pow(t15772,3.0/2.0);
                double t15775 = c*c;
                double t15776 = 1/pow(t15759,2.0/3.0);
                double t15777 = 1/c0p;
                double t15778 = b1p*t15773;
                double t15779 = b3p*t15774;
                double t15780 = b4p*t15775*t15776;
                double t15781 = b2p*c*t15771;
                double t15782 = t15780+t15781+t15778+t15779;
                double t15783 = 1/t15782;
                double t15784 = t15783*t15777*(1.0/2.0);
                double t15785 = t15784+1.0;
                double t15786 = log(t15785);
                double t15787 = a1p*c*t15771;
                double t15788 = t15787+1.0;
                double t15789 = c0p*t15786*t15788*2.0;
                double t15790 = t15761*t15761;
                double t15791 = two_13*2.0;
                double t15792 = t15791-2.0;
                double t15793 = 1/t15792;
                double t15794 = 1/(t15759*t15759*t15759*t15759);
                double t15795 = t15790*t15790;
                double t15796 = pow(t15764,4.0/3.0);
                double t15797 = pow(t15767,4.0/3.0);
                double t15798 = t15796+t15797-2.0;
                double t15799 = gamma_ab[index]*2.0;
                double t15800 = gamma_aa[index]+gamma_bb[index]+t15799;
                double t15801 = 1/(bet*bet);
                double t15802 = 1/(k*k);
                double t15803 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t15804 = 1/(t15770*t15770*t15770);
                double t15805 = 1/c0f;
                double t15806 = b1f*t15773;
                double t15807 = b3f*t15774;
                double t15808 = b4f*t15775*t15776;
                double t15809 = b2f*c*t15771;
                double t15810 = t15806+t15807+t15808+t15809;
                double t15811 = 1/t15810;
                double t15812 = t15811*t15805*(1.0/2.0);
                double t15813 = t15812+1.0;
                double t15814 = log(t15813);
                double t15815 = a1f*c*t15771;
                double t15816 = t15815+1.0;
                double t15843 = c0f*t15814*t15816*2.0;
                double t15817 = -t15843+t15789;
                double t15818 = 1/d2fz0;
                double t15819 = 1/Aa;
                double t15820 = b1a*t15773;
                double t15821 = b3a*t15774;
                double t15822 = b4a*t15775*t15776;
                double t15823 = b2a*c*t15771;
                double t15824 = t15820+t15821+t15822+t15823;
                double t15825 = 1/t15824;
                double t15826 = t15825*t15819*(1.0/2.0);
                double t15827 = t15826+1.0;
                double t15828 = log(t15827);
                double t15829 = a1a*c*t15771;
                double t15830 = t15829+1.0;
                double t15831 = t15794*t15795;
                double t15832 = t15831-1.0;
                double t15833 = Aa*t15830*t15832*t15818*t15828*t15793*t15798*2.0;
                double t15834 = t15833+t15789-t15817*t15793*t15794*t15795*t15798;
                double t15835 = alph*t15801*t15804*t15834*2.0;
                double t15836 = exp(t15835);
                double t15837 = t15836-1.0;
                double t15838 = 1/pow(t15759,1.4E1/3.0);
                double t15839 = 1/(t15770*t15770*t15770*t15770);
                double t15840 = t15800*t15800;
                double t15841 = 1/k;
                double t15842 = 1/(pi_m12*pi_m12);
                double t15844 = 1/pow(t15759,7.0/3.0);
                double t15845 = 1/(t15770*t15770);
                double t15846 = t15843-t15789;
                double t15847 = t15846*t15793*t15794*t15795*t15798;
                double t15848 = t15833+t15847+t15789;
                double t15849 = alph*t15801*t15804*t15848*2.0;
                double t15850 = exp(t15849);
                double t15851 = t15850-1.0;
                double t15852 = 1/t15851;
                double t15853 = alph*alph;
                double t15854 = alph*t15800*t15841*t15842*t15852*t15763*t15844*t15845*(1.0/8.0);
                double t15855 = t15800*t15841*t15842*t15844*t15845*(1.0/1.6E1);
                double t15856 = 1/(t15851*t15851);
                double t15857 = gamma_aa[index]*2.0;
                double t15858 = gamma_ab[index]*4.0;
                double t15859 = gamma_bb[index]*2.0;
                double t15860 = t15857+t15858+t15859;
                double t15861 = t15801*t15802*t15803*t15840*t15853*t15838*t15856*t15839*(1.0/6.4E1);
                double t15862 = t15861+t15854+1.0;
                double t15863 = t15770*t15770;
                double t15864 = 1/pow(t15759,8.0/3.0);
                double t15865 = exp(t15800*t15802*t15863*t15864*-2.5E1);
                double t15866 = Cx*(1.0E1/7.0);
                double t15867 = Cc1*(1.0/1.0E3);
                double t15868 = Cc3*t15775*t15776*(1.0/1.0E3);
                double t15869 = Cc2*c*t15771*(1.0/1.0E3);
                double t15870 = t15867+t15868+t15869;
                double t15871 = Cc5*t15775*t15776;
                double t15872 = Cc6*c*t15760*t15775;
                double t15873 = Cc4*c*t15771;
                double t15874 = t15871+t15872+t15873+1.0;
                double t15875 = 1/t15874;
                double t15876 = Cc0+t15866-t15870*t15875;
                v_gamma_bb_[index] = t15759*(((bet*bet)*t15770*t15863*((alph*t15763*(t15841*t15842*t15844*t15845* \
                   (1.0/1.6E1)+alph*t15802*t15803*t15860*t15852*t15763*t15838*t15839*(1.0/1.28E2))*2.0)/t15862-alph*t15763* \
                   1/(t15862*t15862)*(t15855+alph*t15802*t15803*t15840*t15852*t15763*t15838*t15839*(1.0/1.28E2))*(alph* \
                   t15841*t15842*t15852*t15763*t15844*t15845*(1.0/8.0)+t15801*t15802*t15803*t15860*t15853*t15838*t15856* \
                   t15839*(1.0/6.4E1))*2.0)*(1.0/2.0))/(alph*((alph*t15763*(t15855+(alph*t15802*t15803*t15840*t15763* \
                   t15838*t15839*(1.0/1.28E2))/t15837)*2.0)/(t15854+t15801*t15802*t15803*t15840*t15853*1/(t15837*t15837) \
                   *t15838*t15839*(1.0/6.4E1)+1.0)+1.0))-nu*t15841*t15770*t15842*t15844*t15865*t15876*(1.0/1.6E1)+1/(k* \
                   k*k)*nu*t15800*t15770*t15842*t15863*t15865*1/(t15759*t15759*t15759*t15759*t15759)*t15876*(2.5E1/1.6E1) \
                   );
            } else if (rho_a[index] > cutoff_) {
                double t16908 = rho_a[index]+rho_b[index];
                double t16909 = 1/bet;
                double t16910 = 1/pow(t16908,1.0/3.0);
                double t16911 = c*t16910;
                double t16912 = pow(2.0,1.0/3.0);
                double t16913 = sqrt(t16911);
                double t16914 = pow(t16911,3.0/2.0);
                double t16915 = c*c;
                double t16916 = 1/pow(t16908,2.0/3.0);
                double t16917 = 1/c0p;
                double t16918 = b1p*t16913;
                double t16919 = b3p*t16914;
                double t16920 = b4p*t16915*t16916;
                double t16921 = b2p*c*t16910;
                double t16922 = t16920+t16921+t16918+t16919;
                double t16923 = 1/t16922;
                double t16924 = t16923*t16917*(1.0/2.0);
                double t16925 = t16924+1.0;
                double t16926 = log(t16925);
                double t16927 = a1p*c*t16910;
                double t16928 = t16927+1.0;
                double t16929 = c0p*t16926*t16928*2.0;
                double t16930 = 1/(bet*bet);
                double t16931 = 1/(k*k);
                double t16932 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t16933 = 1/pow(t16908,1.4E1/3.0);
                double t16934 = t16912*2.0;
                double t16935 = t16934-2.0;
                double t16936 = two_13*2.0;
                double t16937 = t16936-2.0;
                double t16938 = 1/t16937;
                double t16939 = 1/c0f;
                double t16940 = b1f*t16913;
                double t16941 = b3f*t16914;
                double t16942 = b4f*t16915*t16916;
                double t16943 = b2f*c*t16910;
                double t16944 = t16940+t16941+t16942+t16943;
                double t16945 = 1/t16944;
                double t16946 = t16945*t16939*(1.0/2.0);
                double t16947 = t16946+1.0;
                double t16948 = log(t16947);
                double t16949 = a1f*c*t16910;
                double t16950 = t16949+1.0;
                double t16961 = c0f*t16950*t16948*2.0;
                double t16951 = -t16961+t16929;
                double t16952 = t16929-t16951*t16935*t16938;
                double t16953 = alph*t16930*t16952*4.0;
                double t16954 = exp(t16953);
                double t16955 = t16954-1.0;
                double t16962 = gamma_ab[index]*2.0;
                double t16956 = gamma_aa[index]+gamma_bb[index]+t16962;
                double t16957 = pow(2.0,2.0/3.0);
                double t16958 = 1/k;
                double t16959 = 1/(pi_m12*pi_m12);
                double t16960 = 1/pow(t16908,7.0/3.0);
                double t16963 = t16961-t16929;
                double t16964 = t16935*t16963*t16938;
                double t16965 = t16964+t16929;
                double t16966 = alph*t16930*t16965*4.0;
                double t16967 = exp(t16966);
                double t16968 = t16967-1.0;
                double t16969 = 1/t16968;
                double t16970 = alph*alph;
                double t16971 = gamma_aa[index]*2.0;
                double t16972 = gamma_ab[index]*4.0;
                double t16973 = gamma_bb[index]*2.0;
                double t16974 = t16971+t16972+t16973;
                double t16975 = t16956*t16956;
                double t16976 = 1/(t16968*t16968);
                double t16977 = alph*t16960*t16909*t16956*t16957*t16958*t16959*t16969*(1.0/8.0);
                double t16978 = t16960*t16956*t16957*t16958*t16959*(1.0/1.6E1);
                double t16979 = alph*t16912*t16931*t16932*t16933*t16909*t16975*t16969*(1.0/6.4E1);
                double t16980 = t16978+t16979;
                double t16981 = t16912*t16930*t16931*t16932*t16933*t16970*t16975*t16976*(1.0/3.2E1);
                double t16982 = t16981+t16977+1.0;
                double t16983 = 1/pow(t16908,8.0/3.0);
                double t16984 = exp(t16912*t16931*t16956*t16983*(-2.5E1/2.0));
                double t16985 = Cx*(1.0E1/7.0);
                double t16986 = Cc1*(1.0/1.0E3);
                double t16987 = Cc3*t16915*t16916*(1.0/1.0E3);
                double t16988 = Cc2*c*t16910*(1.0/1.0E3);
                double t16989 = t16986+t16987+t16988;
                double t16990 = Cc5*t16915*t16916;
                double t16991 = 1/t16908;
                double t16992 = Cc6*c*t16915*t16991;
                double t16993 = Cc4*c*t16910;
                double t16994 = t16990+t16992+t16993+1.0;
                double t16995 = 1/t16994;
                double t16996 = Cc0+t16985-t16995*t16989;
                v_gamma_bb_[index] = t16908*(((bet*bet)*((alph*t16909*(t16960*t16957*t16958*t16959*(1.0/1.6E1)+(alph* \
                   t16912*t16931*t16932*t16933*t16909*t16974*(1.0/6.4E1))/t16955)*2.0)/(t16977+t16912*t16930*t16931*t16932* \
                   t16933*t16970*1/(t16955*t16955)*t16975*(1.0/3.2E1)+1.0)-alph*t16980*t16909*1/(t16982*t16982)*(alph* \
                   t16960*t16909*t16957*t16958*t16959*t16969*(1.0/8.0)+t16912*t16930*t16931*t16932*t16933*t16970*t16974* \
                   t16976*(1.0/3.2E1))*2.0)*(1.0/4.0))/(alph*((alph*t16980*t16909*2.0)/t16982+1.0))+1/(k*k*k)*nu*1/(t16908* \
                   t16908*t16908*t16908*t16908)*t16956*t16984*t16959*t16996*(2.5E1/3.2E1)-nu*t16960*t16957*t16984*t16958* \
                   t16959*t16996*(1.0/3.2E1));
            } else if (rho_b[index] > cutoff_) {
                double t16352 = rho_a[index]+rho_b[index];
                double t16353 = 1/bet;
                double t16354 = 1/pow(t16352,1.0/3.0);
                double t16355 = c*t16354;
                double t16356 = pow(2.0,1.0/3.0);
                double t16357 = sqrt(t16355);
                double t16358 = pow(t16355,3.0/2.0);
                double t16359 = c*c;
                double t16360 = 1/pow(t16352,2.0/3.0);
                double t16361 = 1/c0p;
                double t16362 = b1p*t16357;
                double t16363 = b3p*t16358;
                double t16364 = b4p*t16360*t16359;
                double t16365 = b2p*c*t16354;
                double t16366 = t16362+t16363+t16364+t16365;
                double t16367 = 1/t16366;
                double t16368 = t16361*t16367*(1.0/2.0);
                double t16369 = t16368+1.0;
                double t16370 = log(t16369);
                double t16371 = a1p*c*t16354;
                double t16372 = t16371+1.0;
                double t16373 = c0p*t16370*t16372*2.0;
                double t16374 = 1/(bet*bet);
                double t16375 = 1/(k*k);
                double t16376 = 1/(pi_m12*pi_m12*pi_m12*pi_m12);
                double t16377 = 1/pow(t16352,1.4E1/3.0);
                double t16378 = t16356*2.0;
                double t16379 = t16378-2.0;
                double t16380 = two_13*2.0;
                double t16381 = t16380-2.0;
                double t16382 = 1/t16381;
                double t16383 = 1/c0f;
                double t16384 = b1f*t16357;
                double t16385 = b3f*t16358;
                double t16386 = b4f*t16360*t16359;
                double t16387 = b2f*c*t16354;
                double t16388 = t16384+t16385+t16386+t16387;
                double t16389 = 1/t16388;
                double t16390 = t16383*t16389*(1.0/2.0);
                double t16391 = t16390+1.0;
                double t16392 = log(t16391);
                double t16393 = a1f*c*t16354;
                double t16394 = t16393+1.0;
                double t16405 = c0f*t16392*t16394*2.0;
                double t16395 = -t16405+t16373;
                double t16396 = t16373-t16382*t16395*t16379;
                double t16397 = alph*t16374*t16396*4.0;
                double t16398 = exp(t16397);
                double t16399 = t16398-1.0;
                double t16406 = gamma_ab[index]*2.0;
                double t16400 = gamma_aa[index]+gamma_bb[index]+t16406;
                double t16401 = pow(2.0,2.0/3.0);
                double t16402 = 1/k;
                double t16403 = 1/(pi_m12*pi_m12);
                double t16404 = 1/pow(t16352,7.0/3.0);
                double t16407 = t16405-t16373;
                double t16408 = t16407*t16382*t16379;
                double t16409 = t16408+t16373;
                double t16410 = alph*t16409*t16374*4.0;
                double t16411 = exp(t16410);
                double t16412 = t16411-1.0;
                double t16413 = 1/t16412;
                double t16414 = alph*alph;
                double t16415 = gamma_aa[index]*2.0;
                double t16416 = gamma_ab[index]*4.0;
                double t16417 = gamma_bb[index]*2.0;
                double t16418 = t16415+t16416+t16417;
                double t16419 = t16400*t16400;
                double t16420 = 1/(t16412*t16412);
                double t16421 = alph*t16400*t16401*t16402*t16403*t16404*t16413*t16353*(1.0/8.0);
                double t16422 = t16400*t16401*t16402*t16403*t16404*(1.0/1.6E1);
                double t16423 = alph*t16413*t16353*t16356*t16419*t16375*t16376*t16377*(1.0/6.4E1);
                double t16424 = t16422+t16423;
                double t16425 = t16420*t16414*t16356*t16374*t16419*t16375*t16376*t16377*(1.0/3.2E1);
                double t16426 = t16421+t16425+1.0;
                double t16427 = 1/pow(t16352,8.0/3.0);
                double t16428 = exp(t16400*t16427*t16356*t16375*(-2.5E1/2.0));
                double t16429 = Cx*(1.0E1/7.0);
                double t16430 = Cc1*(1.0/1.0E3);
                double t16431 = Cc3*t16360*t16359*(1.0/1.0E3);
                double t16432 = Cc2*c*t16354*(1.0/1.0E3);
                double t16433 = t16430+t16431+t16432;
                double t16434 = Cc5*t16360*t16359;
                double t16435 = 1/t16352;
                double t16436 = Cc6*c*t16435*t16359;
                double t16437 = Cc4*c*t16354;
                double t16438 = t16434+t16436+t16437+1.0;
                double t16439 = 1/t16438;
                double t16440 = Cc0+t16429-t16433*t16439;
                v_gamma_bb_[index] = t16352*(((bet*bet)*((alph*t16353*(t16401*t16402*t16403*t16404*(1.0/1.6E1)+(alph* \
                   t16353*t16418*t16356*t16375*t16376*t16377*(1.0/6.4E1))/t16399)*2.0)/(t16421+t16414*t16356*t16374*t16419* \
                   t16375*t16376*t16377*1/(t16399*t16399)*(1.0/3.2E1)+1.0)-alph*t16424*t16353*1/(t16426*t16426)*(alph* \
                   t16401*t16402*t16403*t16404*t16413*t16353*(1.0/8.0)+t16420*t16414*t16418*t16356*t16374*t16375*t16376* \
                   t16377*(1.0/3.2E1))*2.0)*(1.0/4.0))/(alph*((alph*t16424*t16353*2.0)/t16426+1.0))+1/(k*k*k)*nu*t16400* \
                   t16403*t16440*1/(t16352*t16352*t16352*t16352*t16352)*t16428*(2.5E1/3.2E1)-nu*t16401*t16402*t16403* \
                   t16404*t16440*t16428*(1.0/3.2E1));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        
        //V_rho_a_rho_b
        
        //V_rho_b_rho_b
        
        if (is_gga_) {

            //V_rho_a_gamma_aa
            
            //V_rho_a_gamma_ab
            
            //V_rho_a_gamma_bb
            
            //V_rho_b_gamma_aa
            
            //V_rho_b_gamma_ab
            
            //V_rho_b_gamma_bb
            
            //V_gamma_aa_gamma_aa
            
            //V_gamma_aa_gamma_ab
            
            //V_gamma_aa_gamma_bb
            
            //V_gamma_ab_gamma_ab
            
            //V_gamma_ab_gamma_bb
            
            //V_gamma_bb_gamma_bb
            
        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            
            //V_rho_a_tau_b
            
            //V_rho_b_tau_a
            
            //V_rho_b_tau_b
            
            //V_tau_a_tau_a
            
            //V_tau_a_tau_b
            
            //V_tau_b_tau_b
            
            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                            	
                //V_gamma_aa_tau_b
                            	
                //V_gamma_ab_tau_a
                            	
                //V_gamma_ab_tau_b
                            	
                //V_gamma_bb_tau_a
                            	
                //V_gamma_bb_tau_b
                          
            }  
        }
    }
}

}}

