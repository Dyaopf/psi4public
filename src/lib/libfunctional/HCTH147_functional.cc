/**********************************************************
* HCTH147_functional.cc: definitions for HCTH147_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "HCTH147_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

HCTH147_Functional::HCTH147_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "HCTH147";
    description_ = "HCTH147 Power Series GGA";
    citation_ = "A.D. Boese, et. al., J. Chem. Phys., 112(4), 1670-1678, 2000";
    
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 5.4235199999999995E-01;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 7.0146400000000000E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -2.8382200000000001E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 3.5032899999999998E+01;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = -2.0428400000000000E+01;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 5.6257599999999996E-01;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = 1.7143599999999998E-02;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = -1.3063600000000000E+00;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = 1.0574699999999999E+00;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 8.8542900000000002E-01;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 1.0902499999999999E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = -7.9919399999999996E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 5.5721200000000000E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = -5.8676000000000004E+00;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = 3.0454400000000001E+00;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
HCTH147_Functional::~HCTH147_Functional()
{
}
void HCTH147_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t62127 = 1/pow(rho_a[index],1.0/3.0);
            double t62128 = c*t62127;
            double t62129 = sqrt(t62128);
            double t62130 = pow(t62128,3.0/2.0);
            double t62131 = c*c;
            double t62132 = 1/pow(rho_a[index],2.0/3.0);
            double t62133 = 1/c0p;
            double t62134 = b1p*t62129;
            double t62135 = b3p*t62130;
            double t62136 = b4p*t62131*t62132;
            double t62137 = b2p*c*t62127;
            double t62138 = t62134+t62135+t62136+t62137;
            double t62139 = 1/t62138;
            double t62140 = t62133*t62139*(1.0/2.0);
            double t62141 = t62140+1.0;
            double t62142 = log(t62141);
            double t62143 = a1p*c*t62127;
            double t62144 = t62143+1.0;
            double t62145 = rho_a[index]*2.0;
            double t62146 = 1/pow(t62145,1.0/3.0);
            double t62147 = c*t62146;
            double t62148 = gamma_aa[index]*gamma_aa[index];
            double t62149 = gcab*gcab;
            double t62150 = t62148*t62148;
            double t62151 = t62149*t62149;
            double t62152 = 1/pow(rho_a[index],3.2E1/3.0);
            double t62153 = 1/pow(rho_a[index],8.0/3.0);
            double t62154 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t62155 = 1/pow(rho_a[index],1.6E1/3.0);
            double t62156 = pow(2.0,1.0/3.0);
            double t62157 = t62156*2.0;
            double t62158 = t62157-2.0;
            double t62159 = two_13*2.0;
            double t62160 = t62159-2.0;
            double t62161 = 1/t62160;
            double t62162 = 1/c0f;
            double t62163 = b1f*t62129;
            double t62164 = b3f*t62130;
            double t62165 = b4f*t62131*t62132;
            double t62166 = b2f*c*t62127;
            double t62167 = t62163+t62164+t62165+t62166;
            double t62168 = 1/t62167;
            double t62169 = t62162*t62168*(1.0/2.0);
            double t62170 = t62169+1.0;
            double t62171 = log(t62170);
            double t62172 = a1f*c*t62127;
            double t62173 = t62172+1.0;
            double t62174 = c0f*t62171*t62173*2.0;
            double t62175 = c0p*t62142*t62144*2.0;
            double t62176 = gcaa*gcaa;
            double t62177 = t62176*t62176;
            double t62178 = gx*gx;
            double t62179 = t62178*t62178;
            functional_[index] = (rho_a[index]*(t62175+t62161*t62158*(t62174-c0p*t62142*t62144*2.0))*2.0-c0p* \
               rho_a[index]*log((t62133*(1.0/2.0))/(b1p*sqrt(t62147)+b3p*pow(t62147,3.0/2.0)+b4p*t62131*1/pow(t62145,2.0/ \
               3.0)+b2p*c*t62146)+1.0)*(a1p*c*t62146+1.0)*4.0)*(ccab0+(ccab2*t62155*t62148*t62149)/(gamma_aa[index]* \
               gcab*t62153*2.0+t62155*t62148*t62149+1.0)+(ccab1*gamma_aa[index]*gcab*t62153)/(gamma_aa[index]*gcab* \
               t62153+1.0)+(ccab4*t62150*t62151*t62152)/(gamma_aa[index]*gcab*t62153*4.0+t62150*t62151*t62152+t62155* \
               t62148*t62149*6.0+gamma_aa[index]*gcab*t62154*t62148*t62149*4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t62154* \
               t62148*t62149)/(gamma_aa[index]*gcab*t62153*3.0+t62155*t62148*t62149*3.0+gamma_aa[index]*gcab*t62154* \
               t62148*t62149+1.0))-rho_a[index]*(t62175+t62161*t62158*(t62174-t62175))*(ccaa0+(ccaa2*t62155*t62148* \
               t62176)/(gamma_aa[index]*gcaa*t62153*2.0+t62155*t62148*t62176+1.0)+(ccaa1*gamma_aa[index]*gcaa*t62153) \
               /(gamma_aa[index]*gcaa*t62153+1.0)+(ccaa4*t62150*t62152*t62177)/(gamma_aa[index]*gcaa*t62153*4.0+t62150* \
               t62152*t62177+t62155*t62148*t62176*6.0+gamma_aa[index]*gcaa*t62154*t62148*t62176*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t62154*t62148*t62176)/(gamma_aa[index]*gcaa*t62153*3.0+t62155*t62148*t62176*3.0+gamma_aa[index]* \
               gcaa*t62154*t62148*t62176+1.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t62155*t62148*t62178)/(gamma_aa[index]* \
               gx*t62153*2.0+t62155*t62148*t62178+1.0)+(cx1*gamma_aa[index]*gx*t62153)/(gamma_aa[index]*gx*t62153+ \
               1.0)+(cx4*t62150*t62152*t62179)/(gamma_aa[index]*gx*t62153*4.0+t62150*t62152*t62179+t62155*t62148* \
               t62178*6.0+gamma_aa[index]*gx*t62154*t62148*t62178*4.0+1.0)+(cx3*gamma_aa[index]*gx*t62154*t62148* \
               t62178)/(gamma_aa[index]*gx*t62153*3.0+t62155*t62148*t62178*3.0+gamma_aa[index]*gx*t62154*t62148*t62178+ \
               1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t62181 = gamma_aa[index]*gamma_aa[index];
            double t62182 = gcab*gcab;
            double t62183 = t62181*t62181;
            double t62184 = t62182*t62182;
            double t62185 = 1/pow(rho_a[index],3.2E1/3.0);
            double t62186 = 1/pow(rho_a[index],8.0/3.0);
            double t62187 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t62188 = 1/pow(rho_a[index],1.6E1/3.0);
            double t62189 = rho_a[index]*2.0;
            double t62190 = 1/pow(t62189,1.0/3.0);
            double t62191 = c*t62190;
            double t62192 = sqrt(t62191);
            double t62193 = b1p*t62192;
            double t62194 = pow(t62191,3.0/2.0);
            double t62195 = b3p*t62194;
            double t62196 = b2p*c*t62190;
            double t62197 = c*c;
            double t62198 = 1/pow(t62189,2.0/3.0);
            double t62199 = b4p*t62197*t62198;
            double t62200 = t62193+t62195+t62196+t62199;
            double t62201 = 1/pow(t62189,4.0/3.0);
            double t62202 = 1/c0p;
            double t62203 = 1/t62200;
            double t62204 = t62202*t62203*(1.0/2.0);
            double t62205 = t62204+1.0;
            double t62206 = 1/pow(rho_a[index],1.0/3.0);
            double t62207 = c*t62206;
            double t62208 = sqrt(t62207);
            double t62209 = b1f*t62208;
            double t62210 = pow(t62207,3.0/2.0);
            double t62211 = b3f*t62210;
            double t62212 = 1/pow(rho_a[index],2.0/3.0);
            double t62213 = b4f*t62212*t62197;
            double t62214 = b2f*c*t62206;
            double t62215 = t62211+t62213+t62214+t62209;
            double t62216 = 1/pow(rho_a[index],4.0/3.0);
            double t62217 = b1p*t62208;
            double t62218 = b3p*t62210;
            double t62219 = b4p*t62212*t62197;
            double t62220 = b2p*c*t62206;
            double t62221 = t62220+t62217+t62218+t62219;
            double t62222 = 1/pow(rho_a[index],5.0/3.0);
            double t62223 = 1/sqrt(t62207);
            double t62224 = 1/c0f;
            double t62225 = 1/t62215;
            double t62226 = t62224*t62225*(1.0/2.0);
            double t62227 = t62226+1.0;
            double t62228 = 1/t62221;
            double t62229 = t62202*t62228*(1.0/2.0);
            double t62230 = t62229+1.0;
            double t62231 = a1p*c*t62206;
            double t62232 = t62231+1.0;
            double t62233 = 1/t62230;
            double t62234 = 1/(t62221*t62221);
            double t62235 = b4p*t62222*t62197*(2.0/3.0);
            double t62236 = b2p*c*t62216*(1.0/3.0);
            double t62237 = b1p*c*t62223*t62216*(1.0/6.0);
            double t62238 = b3p*c*t62216*t62208*(1.0/2.0);
            double t62239 = t62235+t62236+t62237+t62238;
            double t62240 = t62232*t62233*t62234*t62239;
            double t62241 = log(t62230);
            double t62242 = log(t62205);
            double t62243 = a1p*c*t62190;
            double t62244 = t62243+1.0;
            double t62245 = pow(2.0,1.0/3.0);
            double t62246 = t62245*2.0;
            double t62247 = t62246-2.0;
            double t62248 = two_13*2.0;
            double t62249 = t62248-2.0;
            double t62250 = 1/t62249;
            double t62251 = log(t62227);
            double t62252 = a1f*c*t62206;
            double t62253 = t62252+1.0;
            double t62254 = c0f*t62251*t62253*2.0;
            double t62256 = c0p*t62232*t62241*2.0;
            double t62255 = t62254-t62256;
            double t62257 = gcaa*gcaa;
            double t62258 = t62257*t62257;
            double t62259 = t62250*t62255*t62247;
            double t62260 = t62256+t62259;
            double t62261 = gamma_aa[index]*gcab*t62186*4.0;
            double t62262 = gamma_aa[index]*gcab*t62181*t62182*t62187*4.0;
            double t62263 = t62181*t62182*t62188*6.0;
            double t62264 = t62183*t62184*t62185;
            double t62265 = t62261+t62262+t62263+t62264+1.0;
            double t62266 = 1/t62265;
            double t62267 = gamma_aa[index]*gcab*t62186;
            double t62268 = t62267+1.0;
            double t62269 = 1/t62268;
            double t62270 = gamma_aa[index]*gcab*t62186*3.0;
            double t62271 = gamma_aa[index]*gcab*t62181*t62182*t62187;
            double t62272 = t62181*t62182*t62188*3.0;
            double t62273 = t62270+t62271+t62272+1.0;
            double t62274 = 1/t62273;
            double t62275 = gamma_aa[index]*gcab*t62186*2.0;
            double t62276 = t62181*t62182*t62188;
            double t62277 = t62275+t62276+1.0;
            double t62278 = 1/t62277;
            double t62279 = 1/pow(rho_a[index],1.9E1/3.0);
            double t62280 = 1/pow(rho_a[index],1.1E1/3.0);
            double t62281 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t62282 = 1/pow(rho_a[index],3.5E1/3.0);
            double t62283 = gamma_aa[index]*gcaa*t62186*4.0;
            double t62284 = gamma_aa[index]*gcaa*t62181*t62257*t62187*4.0;
            double t62285 = t62181*t62257*t62188*6.0;
            double t62286 = t62183*t62185*t62258;
            double t62287 = t62283+t62284+t62285+t62286+1.0;
            double t62288 = 1/t62287;
            double t62289 = gamma_aa[index]*gcaa*t62186;
            double t62290 = t62289+1.0;
            double t62291 = 1/t62290;
            double t62292 = gamma_aa[index]*gcaa*t62186*3.0;
            double t62293 = gamma_aa[index]*gcaa*t62181*t62257*t62187;
            double t62294 = t62181*t62257*t62188*3.0;
            double t62295 = t62292+t62293+t62294+1.0;
            double t62296 = 1/t62295;
            double t62297 = gamma_aa[index]*gcaa*t62186*2.0;
            double t62298 = t62181*t62257*t62188;
            double t62299 = t62297+t62298+1.0;
            double t62300 = 1/t62299;
            double t62301 = gx*gx;
            double t62302 = t62301*t62301;
            double t62303 = gamma_aa[index]*gx*t62186*4.0;
            double t62304 = gamma_aa[index]*gx*t62301*t62181*t62187*4.0;
            double t62305 = t62301*t62181*t62188*6.0;
            double t62306 = t62302*t62183*t62185;
            double t62307 = t62303+t62304+t62305+t62306+1.0;
            double t62308 = 1/t62307;
            double t62309 = gamma_aa[index]*gx*t62186;
            double t62310 = t62309+1.0;
            double t62311 = 1/t62310;
            double t62312 = gamma_aa[index]*gx*t62186*3.0;
            double t62313 = gamma_aa[index]*gx*t62301*t62181*t62187;
            double t62314 = t62301*t62181*t62188*3.0;
            double t62315 = t62312+t62313+t62314+1.0;
            double t62316 = 1/t62315;
            double t62317 = gamma_aa[index]*gx*t62186*2.0;
            double t62318 = t62301*t62181*t62188;
            double t62319 = t62317+t62318+1.0;
            double t62320 = 1/t62319;
            double t62321 = 1/t62227;
            double t62322 = 1/(t62215*t62215);
            double t62323 = b4f*t62222*t62197*(2.0/3.0);
            double t62324 = b2f*c*t62216*(1.0/3.0);
            double t62325 = b1f*c*t62223*t62216*(1.0/6.0);
            double t62326 = b3f*c*t62216*t62208*(1.0/2.0);
            double t62327 = t62323+t62324+t62325+t62326;
            double t62328 = a1f*c*c0f*t62251*t62216*(2.0/3.0);
            double t62329 = a1p*c*c0p*t62241*t62216*(2.0/3.0);
            double t62330 = ccaa4*t62183*t62185*t62258*t62288;
            double t62331 = ccaa1*gamma_aa[index]*gcaa*t62291*t62186;
            double t62332 = ccaa3*gamma_aa[index]*gcaa*t62181*t62257*t62187*t62296;
            double t62333 = ccaa2*t62300*t62181*t62257*t62188;
            double t62334 = ccaa0+t62330+t62331+t62332+t62333;
            v_rho_a_[index] = -(rho_a[index]*t62260*2.0-c0p*rho_a[index]*t62242*t62244*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t62280*t62269*(4.0/3.0)+ccab4*t62183*t62282*t62184*t62266*(1.6E1/3.0)+ccab2*t62181*t62182*t62278* \
               t62279*(8.0/3.0)-ccab1*t62181*t62182*1/(t62268*t62268)*t62279*(4.0/3.0)-ccab2*t62181*t62182*1/(t62277* \
               t62277)*t62188*(gamma_aa[index]*gcab*t62280*(8.0/3.0)+t62181*t62182*t62279*(8.0/3.0))-ccab4*t62183* \
               t62184*1/(t62265*t62265)*t62185*(gamma_aa[index]*gcab*t62280*(1.6E1/3.0)+t62183*t62282*t62184*(1.6E1/ \
               3.0)+t62181*t62182*t62279*1.6E1+gamma_aa[index]*gcab*t62181*t62182*t62281*1.6E1)+ccab3*gamma_aa[index]* \
               gcab*t62181*t62182*t62281*t62274*4.0-ccab3*gamma_aa[index]*gcab*t62181*t62182*1/(t62273*t62273)*t62187* \
               (gamma_aa[index]*gcab*t62280*4.0+t62181*t62182*t62279*8.0+gamma_aa[index]*gcab*t62181*t62182*t62281* \
               4.0))-t62260*t62334-(rho_a[index]*((1/(t62200*t62200)*t62244*(b4p*t62197*1/pow(t62189,5.0/3.0)*(2.0/ \
               3.0)+b2p*c*t62201*(1.0/3.0)+b3p*c*t62201*t62192*(1.0/2.0)+b1p*c*t62201*1/sqrt(t62191)*(1.0/6.0)))/ \
               t62205-a1p*c*c0p*t62201*t62242*(2.0/3.0))*2.0+rho_a[index]*(-t62240+t62329+t62250*t62247*(t62240+t62328- \
               t62321*t62322*t62253*t62327-a1p*c*c0p*t62241*t62216*(2.0/3.0)))-c0p*t62232*t62241*2.0+c0p*t62242*t62244* \
               2.0-t62250*t62255*t62247)*(ccab0+ccab1*gamma_aa[index]*gcab*t62186*t62269+ccab2*t62181*t62182*t62188* \
               t62278+ccab4*t62183*t62184*t62185*t62266+ccab3*gamma_aa[index]*gcab*t62181*t62182*t62274*t62187)+rho_a[index]* \
               t62260*(ccaa1*gamma_aa[index]*gcaa*t62280*t62291*(8.0/3.0)+ccaa2*t62300*t62181*t62257*t62279*(1.6E1/ \
               3.0)+ccaa4*t62183*t62282*t62258*t62288*(3.2E1/3.0)-ccaa1*t62181*1/(t62290*t62290)*t62257*t62279*(8.0/ \
               3.0)-ccaa2*t62181*t62257*t62188*1/(t62299*t62299)*(gamma_aa[index]*gcaa*t62280*(1.6E1/3.0)+t62181* \
               t62257*t62279*(1.6E1/3.0))-ccaa4*t62183*t62185*t62258*1/(t62287*t62287)*(gamma_aa[index]*gcaa*t62280* \
               (3.2E1/3.0)+t62183*t62282*t62258*(3.2E1/3.0)+t62181*t62257*t62279*3.2E1+gamma_aa[index]*gcaa*t62181* \
               t62281*t62257*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t62181*t62281*t62257*t62296*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t62181*t62257*t62187*1/(t62295*t62295)*(gamma_aa[index]*gcaa*t62280*8.0+t62181*t62257*t62279* \
               1.6E1+gamma_aa[index]*gcaa*t62181*t62281*t62257*8.0))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]* \
               gx*t62311*t62186+cx2*t62301*t62320*t62181*t62188+cx4*t62302*t62308*t62183*t62185+cx3*gamma_aa[index]* \
               gx*t62301*t62181*t62316*t62187)*(4.0/3.0)+rho_a[index]*t62334*(-t62240+t62329+t62250*t62247*(t62240+ \
               t62328-t62329-t62321*t62322*t62253*t62327))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t62311* \
               t62280*(8.0/3.0)+cx2*t62301*t62320*t62181*t62279*(1.6E1/3.0)+cx4*t62302*t62308*t62183*t62282*(3.2E1/ \
               3.0)-cx1*t62301*1/(t62310*t62310)*t62181*t62279*(8.0/3.0)-cx2*t62301*t62181*1/(t62319*t62319)*t62188* \
               (gamma_aa[index]*gx*t62280*(1.6E1/3.0)+t62301*t62181*t62279*(1.6E1/3.0))-cx4*t62302*1/(t62307*t62307) \
               *t62183*t62185*(gamma_aa[index]*gx*t62280*(3.2E1/3.0)+t62302*t62183*t62282*(3.2E1/3.0)+t62301*t62181* \
               t62279*3.2E1+gamma_aa[index]*gx*t62301*t62181*t62281*3.2E1)+cx3*gamma_aa[index]*gx*t62301*t62181*t62316* \
               t62281*8.0-cx3*gamma_aa[index]*gx*t62301*1/(t62315*t62315)*t62181*t62187*(gamma_aa[index]*gx*t62280* \
               8.0+t62301*t62181*t62279*1.6E1+gamma_aa[index]*gx*t62301*t62181*t62281*8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t62336 = 1/pow(rho_a[index],1.0/3.0);
                double t62337 = c*t62336;
                double t62338 = sqrt(t62337);
                double t62339 = pow(t62337,3.0/2.0);
                double t62340 = c*c;
                double t62341 = 1/pow(rho_a[index],2.0/3.0);
                double t62342 = 1/c0p;
                double t62343 = b1p*t62338;
                double t62344 = b3p*t62339;
                double t62345 = b4p*t62340*t62341;
                double t62346 = b2p*c*t62336;
                double t62347 = t62343+t62344+t62345+t62346;
                double t62348 = 1/t62347;
                double t62349 = t62342*t62348*(1.0/2.0);
                double t62350 = t62349+1.0;
                double t62351 = log(t62350);
                double t62352 = a1p*c*t62336;
                double t62353 = t62352+1.0;
                double t62354 = rho_a[index]*2.0;
                double t62355 = 1/pow(t62354,1.0/3.0);
                double t62356 = c*t62355;
                double t62357 = 1/pow(rho_a[index],8.0/3.0);
                double t62358 = gamma_aa[index]*gamma_aa[index];
                double t62359 = gcab*gcab;
                double t62360 = t62359*t62359;
                double t62361 = 1/pow(rho_a[index],3.2E1/3.0);
                double t62362 = 1/pow(rho_a[index],1.6E1/3.0);
                double t62363 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t62364 = gamma_aa[index]*gcab*t62357;
                double t62365 = t62364+1.0;
                double t62366 = gamma_aa[index]*gcab*t62357*3.0;
                double t62367 = gamma_aa[index]*gcab*t62363*t62358*t62359;
                double t62368 = t62362*t62358*t62359*3.0;
                double t62369 = t62366+t62367+t62368+1.0;
                double t62370 = t62358*t62358;
                double t62371 = gamma_aa[index]*gcab*t62357*4.0;
                double t62372 = gamma_aa[index]*gcab*t62363*t62358*t62359*4.0;
                double t62373 = t62362*t62358*t62359*6.0;
                double t62374 = t62360*t62361*t62370;
                double t62375 = t62371+t62372+t62373+t62374+1.0;
                double t62376 = gamma_aa[index]*gcab*t62357*2.0;
                double t62377 = t62362*t62358*t62359;
                double t62378 = t62376+t62377+1.0;
                double t62379 = gx*gx;
                double t62380 = t62379*t62379;
                double t62381 = gamma_aa[index]*gx*t62357;
                double t62382 = t62381+1.0;
                double t62383 = gamma_aa[index]*gx*t62357*3.0;
                double t62384 = gamma_aa[index]*gx*t62363*t62358*t62379;
                double t62385 = t62362*t62358*t62379*3.0;
                double t62386 = t62383+t62384+t62385+1.0;
                double t62387 = gamma_aa[index]*gx*t62357*4.0;
                double t62388 = gamma_aa[index]*gx*t62363*t62358*t62379*4.0;
                double t62389 = t62362*t62358*t62379*6.0;
                double t62390 = t62361*t62370*t62380;
                double t62391 = t62390+t62387+t62388+t62389+1.0;
                double t62392 = gamma_aa[index]*gx*t62357*2.0;
                double t62393 = t62362*t62358*t62379;
                double t62394 = t62392+t62393+1.0;
                double t62395 = pow(2.0,1.0/3.0);
                double t62396 = t62395*2.0;
                double t62397 = t62396-2.0;
                double t62398 = two_13*2.0;
                double t62399 = t62398-2.0;
                double t62400 = 1/t62399;
                double t62401 = 1/c0f;
                double t62402 = b1f*t62338;
                double t62403 = b3f*t62339;
                double t62404 = b4f*t62340*t62341;
                double t62405 = b2f*c*t62336;
                double t62406 = t62402+t62403+t62404+t62405;
                double t62407 = 1/t62406;
                double t62408 = t62401*t62407*(1.0/2.0);
                double t62409 = t62408+1.0;
                double t62410 = log(t62409);
                double t62411 = a1f*c*t62336;
                double t62412 = t62411+1.0;
                double t62413 = c0f*t62410*t62412*2.0;
                double t62414 = c0p*t62351*t62353*2.0;
                double t62415 = gcaa*gcaa;
                double t62416 = t62415*t62415;
                double t62417 = gamma_aa[index]*gcaa*t62357;
                double t62418 = t62417+1.0;
                double t62419 = gamma_aa[index]*gcaa*t62357*3.0;
                double t62420 = gamma_aa[index]*gcaa*t62415*t62363*t62358;
                double t62421 = t62415*t62362*t62358*3.0;
                double t62422 = t62420+t62421+t62419+1.0;
                double t62423 = gamma_aa[index]*gcaa*t62357*4.0;
                double t62424 = gamma_aa[index]*gcaa*t62415*t62363*t62358*4.0;
                double t62425 = t62415*t62362*t62358*6.0;
                double t62426 = t62361*t62370*t62416;
                double t62427 = t62423+t62424+t62425+t62426+1.0;
                double t62428 = gamma_aa[index]*gcaa*t62357*2.0;
                double t62429 = t62415*t62362*t62358;
                double t62430 = t62428+t62429+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t62414+t62400*t62397*(t62413-c0p*t62351*t62353*2.0))*2.0-c0p* \
                   rho_a[index]*log((t62342*(1.0/2.0))/(b1p*sqrt(t62356)+b3p*pow(t62356,3.0/2.0)+b4p*t62340*1/pow(t62354,2.0/ \
                   3.0)+b2p*c*t62355)+1.0)*(a1p*c*t62355+1.0)*4.0)*((ccab1*gcab*t62357*(1.0/2.0))/t62365-ccab1*gamma_aa[index]* \
                   t62362*1/(t62365*t62365)*t62359*(1.0/2.0)+(ccab2*gamma_aa[index]*t62362*t62359)/t62378-ccab2*t62362* \
                   t62358*t62359*1/(t62378*t62378)*(gcab*t62357+gamma_aa[index]*t62362*t62359)+(ccab4*gamma_aa[index]* \
                   t62360*t62361*t62358*2.0)/t62375+(ccab3*gcab*t62363*t62358*t62359*(3.0/2.0))/t62369-ccab4*t62360*t62361* \
                   t62370*1/(t62375*t62375)*(gcab*t62357*2.0+gamma_aa[index]*t62362*t62359*6.0+gamma_aa[index]*t62360* \
                   t62361*t62358*2.0+gcab*t62363*t62358*t62359*6.0)-ccab3*gamma_aa[index]*gcab*t62363*t62358*t62359*1/ \
                   (t62369*t62369)*(gcab*t62357*(3.0/2.0)+gamma_aa[index]*t62362*t62359*3.0+gcab*t62363*t62358*t62359* \
                   (3.0/2.0)))*2.0-rho_a[index]*(t62414+t62400*t62397*(t62413-t62414))*((ccaa1*gcaa*t62357)/t62418+(ccaa2* \
                   gamma_aa[index]*t62415*t62362*2.0)/t62430-ccaa1*gamma_aa[index]*t62415*t62362*1/(t62418*t62418)-ccaa2* \
                   1/(t62430*t62430)*t62415*t62362*t62358*(gcaa*t62357*2.0+gamma_aa[index]*t62415*t62362*2.0)+(ccaa4* \
                   gamma_aa[index]*t62361*t62416*t62358*4.0)/t62427+(ccaa3*gcaa*t62415*t62363*t62358*3.0)/t62422-ccaa4* \
                   t62361*t62370*t62416*1/(t62427*t62427)*(gcaa*t62357*4.0+gamma_aa[index]*t62415*t62362*1.2E1+gamma_aa[index]* \
                   t62361*t62416*t62358*4.0+gcaa*t62415*t62363*t62358*1.2E1)-ccaa3*gamma_aa[index]*gcaa*1/(t62422*t62422) \
                   *t62415*t62363*t62358*(gcaa*t62357*3.0+gamma_aa[index]*t62415*t62362*6.0+gcaa*t62415*t62363*t62358* \
                   3.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*((cx1*gx*t62357)/t62382-cx1*gamma_aa[index]*t62362*1/(t62382* \
                   t62382)*t62379+(cx2*gamma_aa[index]*t62362*t62379*2.0)/t62394-cx2*t62362*t62358*1/(t62394*t62394)* \
                   t62379*(gx*t62357*2.0+gamma_aa[index]*t62362*t62379*2.0)+(cx4*gamma_aa[index]*t62361*t62380*t62358* \
                   4.0)/t62391+(cx3*gx*t62363*t62358*t62379*3.0)/t62386-cx4*t62361*t62370*t62380*1/(t62391*t62391)*(gx* \
                   t62357*4.0+gamma_aa[index]*t62362*t62379*1.2E1+gamma_aa[index]*t62361*t62380*t62358*4.0+gx*t62363* \
                   t62358*t62379*1.2E1)-cx3*gamma_aa[index]*gx*t62363*t62358*1/(t62386*t62386)*t62379*(gx*t62357*3.0+ \
                   gamma_aa[index]*t62362*t62379*6.0+gx*t62363*t62358*t62379*3.0))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t62433 = rho_a[index]*2.0;
            double t62434 = 1/pow(t62433,1.0/3.0);
            double t62435 = c*t62434;
            double t62436 = sqrt(t62435);
            double t62437 = b1p*t62436;
            double t62438 = pow(t62435,3.0/2.0);
            double t62439 = b3p*t62438;
            double t62440 = b2p*c*t62434;
            double t62441 = c*c;
            double t62442 = 1/pow(t62433,2.0/3.0);
            double t62443 = b4p*t62441*t62442;
            double t62444 = t62440+t62443+t62437+t62439;
            double t62445 = 1/pow(t62433,8.0/3.0);
            double t62446 = 1/pow(t62433,7.0/3.0);
            double t62447 = 1/sqrt(t62435);
            double t62448 = 1/c0p;
            double t62449 = 1/t62444;
            double t62450 = t62448*t62449*(1.0/2.0);
            double t62451 = t62450+1.0;
            double t62452 = 1/t62451;
            double t62453 = a1p*c*t62434;
            double t62454 = t62453+1.0;
            double t62455 = 1/pow(t62433,4.0/3.0);
            double t62457 = b2p*c*t62455*(1.0/3.0);
            double t62458 = 1/pow(t62433,5.0/3.0);
            double t62459 = b4p*t62441*t62458*(2.0/3.0);
            double t62460 = b1p*c*t62455*t62447*(1.0/6.0);
            double t62461 = b3p*c*t62436*t62455*(1.0/2.0);
            double t62456 = t62460+t62461+t62457+t62459;
            double t62462 = t62456*t62456;
            double t62463 = 1/(t62444*t62444);
            double t62464 = log(t62451);
            double t62465 = gamma_aa[index]*gamma_aa[index];
            double t62466 = gcab*gcab;
            double t62467 = t62465*t62465;
            double t62468 = t62466*t62466;
            double t62469 = 1/pow(rho_a[index],3.2E1/3.0);
            double t62470 = 1/pow(rho_a[index],8.0/3.0);
            double t62471 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t62472 = 1/pow(rho_a[index],1.6E1/3.0);
            double t62473 = two_13*2.0;
            double t62474 = t62473-2.0;
            double t62475 = 1/t62474;
            double t62476 = 1/pow(rho_a[index],1.0/3.0);
            double t62477 = c*t62476;
            double t62478 = sqrt(t62477);
            double t62479 = pow(t62477,3.0/2.0);
            double t62480 = 1/pow(rho_a[index],2.0/3.0);
            double t62481 = b1p*t62478;
            double t62482 = b3p*t62479;
            double t62483 = b4p*t62441*t62480;
            double t62484 = b2p*c*t62476;
            double t62485 = t62481+t62482+t62483+t62484;
            double t62486 = 1/t62485;
            double t62487 = t62448*t62486*(1.0/2.0);
            double t62488 = t62487+1.0;
            double t62489 = log(t62488);
            double t62490 = a1p*c*t62476;
            double t62491 = t62490+1.0;
            double t62492 = gamma_aa[index]*gcab*t62470*4.0;
            double t62493 = gamma_aa[index]*gcab*t62471*t62465*t62466*4.0;
            double t62494 = t62472*t62465*t62466*6.0;
            double t62495 = t62467*t62468*t62469;
            double t62496 = t62492+t62493+t62494+t62495+1.0;
            double t62497 = 1/t62496;
            double t62498 = gamma_aa[index]*gcab*t62470;
            double t62499 = t62498+1.0;
            double t62500 = 1/t62499;
            double t62501 = gamma_aa[index]*gcab*t62470*3.0;
            double t62502 = gamma_aa[index]*gcab*t62471*t62465*t62466;
            double t62503 = t62472*t62465*t62466*3.0;
            double t62504 = t62501+t62502+t62503+1.0;
            double t62505 = 1/t62504;
            double t62506 = gamma_aa[index]*gcab*t62470*2.0;
            double t62507 = t62472*t62465*t62466;
            double t62508 = t62506+t62507+1.0;
            double t62509 = 1/t62508;
            double t62510 = 1/pow(rho_a[index],1.0E1);
            double t62511 = 1/pow(rho_a[index],2.2E1/3.0);
            double t62513 = 1/pow(rho_a[index],1.1E1/3.0);
            double t62514 = 1/pow(rho_a[index],1.9E1/3.0);
            double t62516 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t62523 = 1/pow(rho_a[index],3.5E1/3.0);
            double t62524 = gamma_aa[index]*gcab*t62513*(1.6E1/3.0);
            double t62525 = gamma_aa[index]*gcab*t62516*t62465*t62466*1.6E1;
            double t62526 = t62514*t62465*t62466*1.6E1;
            double t62527 = t62523*t62467*t62468*(1.6E1/3.0);
            double t62512 = t62524+t62525+t62526+t62527;
            double t62530 = gamma_aa[index]*gcab*t62513*(8.0/3.0);
            double t62531 = t62514*t62465*t62466*(8.0/3.0);
            double t62515 = t62530+t62531;
            double t62517 = 1/pow(rho_a[index],1.4E1/3.0);
            double t62518 = 1/(t62504*t62504);
            double t62519 = gamma_aa[index]*gcab*t62513*4.0;
            double t62520 = gamma_aa[index]*gcab*t62516*t62465*t62466*4.0;
            double t62521 = t62514*t62465*t62466*8.0;
            double t62522 = t62520+t62521+t62519;
            double t62528 = 1/pow(rho_a[index],3.8E1/3.0);
            double t62529 = 1/(t62496*t62496);
            double t62532 = 1/(t62508*t62508);
            double t62533 = pow(2.0,1.0/3.0);
            double t62534 = t62533*2.0;
            double t62535 = t62534-2.0;
            double t62536 = a1f*c*t62476;
            double t62537 = t62536+1.0;
            double t62538 = 1/c0f;
            double t62539 = b1f*t62478;
            double t62540 = b3f*t62479;
            double t62541 = b4f*t62441*t62480;
            double t62542 = b2f*c*t62476;
            double t62543 = t62540+t62541+t62542+t62539;
            double t62544 = 1/t62543;
            double t62545 = t62544*t62538*(1.0/2.0);
            double t62546 = t62545+1.0;
            double t62547 = 1/pow(rho_a[index],4.0/3.0);
            double t62548 = 1/pow(rho_a[index],5.0/3.0);
            double t62549 = 1/sqrt(t62477);
            double t62550 = log(t62546);
            double t62551 = 1/t62488;
            double t62552 = 1/(t62485*t62485);
            double t62553 = b4p*t62441*t62548*(2.0/3.0);
            double t62554 = b2p*c*t62547*(1.0/3.0);
            double t62555 = b1p*c*t62547*t62549*(1.0/6.0);
            double t62556 = b3p*c*t62547*t62478*(1.0/2.0);
            double t62557 = t62553+t62554+t62555+t62556;
            double t62558 = t62551*t62552*t62491*t62557;
            double t62559 = gcaa*gcaa;
            double t62560 = t62559*t62559;
            double t62561 = 1/t62546;
            double t62562 = 1/(t62543*t62543);
            double t62563 = b4f*t62441*t62548*(2.0/3.0);
            double t62564 = b2f*c*t62547*(1.0/3.0);
            double t62565 = b1f*c*t62547*t62549*(1.0/6.0);
            double t62566 = b3f*c*t62547*t62478*(1.0/2.0);
            double t62567 = t62563+t62564+t62565+t62566;
            double t62568 = a1f*c*c0f*t62550*t62547*(2.0/3.0);
            double t62569 = a1p*c*c0p*t62547*t62489*(2.0/3.0);
            double t62570 = c0f*t62550*t62537*2.0;
            double t62571 = c0p*t62491*t62489*2.0;
            double t62572 = 1/(t62499*t62499);
            double t62573 = ccab4*t62467*t62468*t62469*t62497;
            double t62574 = ccab1*gamma_aa[index]*gcab*t62500*t62470;
            double t62575 = ccab3*gamma_aa[index]*gcab*t62505*t62471*t62465*t62466;
            double t62576 = ccab2*t62472*t62509*t62465*t62466;
            double t62577 = ccab0+t62573+t62574+t62575+t62576;
            double t62578 = b2p*c*t62446*(4.0/9.0);
            double t62579 = b4p*t62441*t62445*(1.0E1/9.0);
            double t62580 = 1/pow(t62435,3.0/2.0);
            double t62581 = b3p*t62441*t62445*t62447*(1.0/1.2E1);
            double t62582 = b1p*c*t62446*t62447*(2.0/9.0);
            double t62583 = b3p*c*t62436*t62446*(2.0/3.0);
            double t62584 = t62581+t62582+t62583+t62578+t62579-b1p*t62441*t62445*t62580*(1.0/3.6E1);
            double t62585 = t62452*t62454*t62463*t62584;
            double t62586 = 1/(t62444*t62444*t62444);
            double t62587 = 1/(t62451*t62451);
            double t62588 = 1/(t62444*t62444*t62444*t62444);
            double t62589 = t62462*t62454*t62448*t62587*t62588*(1.0/2.0);
            double t62590 = 1/d2fz0;
            double t62591 = 1/(rho_a[index]*rho_a[index]);
            double t62592 = 1/Aa;
            double t62593 = b1a*t62436;
            double t62594 = b3a*t62438;
            double t62595 = b2a*c*t62434;
            double t62596 = b4a*t62441*t62442;
            double t62597 = t62593+t62594+t62595+t62596;
            double t62598 = 1/t62597;
            double t62599 = t62592*t62598*(1.0/2.0);
            double t62600 = t62599+1.0;
            double t62601 = log(t62600);
            double t62602 = a1a*c*t62434;
            double t62603 = t62602+1.0;
            double t62604 = a1p*c*t62452*t62463*t62455*t62456*(2.0/3.0);
            double t62605 = 1/pow(rho_a[index],7.0/3.0);
            double t62606 = 1/pow(t62477,3.0/2.0);
            double t62607 = t62567*t62567;
            double t62608 = t62557*t62557;
            double t62609 = 1/(t62485*t62485*t62485);
            double t62610 = t62551*t62491*t62608*t62609*2.0;
            double t62611 = b4p*t62441*t62470*(1.0E1/9.0);
            double t62612 = b2p*c*t62605*(4.0/9.0);
            double t62613 = b3p*t62441*t62470*t62549*(1.0/1.2E1);
            double t62614 = b1p*c*t62605*t62549*(2.0/9.0);
            double t62615 = b3p*c*t62605*t62478*(2.0/3.0);
            double t62725 = b1p*t62441*t62470*t62606*(1.0/3.6E1);
            double t62616 = t62611+t62612+t62613+t62614+t62615-t62725;
            double t62617 = 1/(t62488*t62488);
            double t62618 = 1/(t62485*t62485*t62485*t62485);
            double t62619 = a1p*c*c0p*t62605*t62489*(8.0/9.0);
            double t62654 = t62561*t62562*t62537*t62567;
            double t62620 = -t62654+t62558+t62568-t62569;
            double t62621 = a1p*c*c0p*t62455*t62464*(4.0/3.0);
            double t62622 = t62570-t62571;
            double t62623 = gamma_aa[index]*gcaa*t62470*4.0;
            double t62624 = gamma_aa[index]*gcaa*t62471*t62465*t62559*4.0;
            double t62625 = t62472*t62465*t62559*6.0;
            double t62626 = t62560*t62467*t62469;
            double t62627 = t62623+t62624+t62625+t62626+1.0;
            double t62628 = 1/t62627;
            double t62629 = gamma_aa[index]*gcaa*t62470;
            double t62630 = t62629+1.0;
            double t62631 = 1/t62630;
            double t62632 = gamma_aa[index]*gcaa*t62470*3.0;
            double t62633 = gamma_aa[index]*gcaa*t62471*t62465*t62559;
            double t62634 = t62472*t62465*t62559*3.0;
            double t62635 = t62632+t62633+t62634+1.0;
            double t62636 = 1/t62635;
            double t62637 = gamma_aa[index]*gcaa*t62470*2.0;
            double t62638 = t62472*t62465*t62559;
            double t62639 = t62637+t62638+1.0;
            double t62640 = 1/t62639;
            double t62641 = t62622*t62535*t62475;
            double t62642 = t62641+t62571;
            double t62643 = 1/(t62499*t62499*t62499);
            double t62644 = ccab1*gamma_aa[index]*gcab*t62510*t62643*t62465*t62466*(3.2E1/9.0);
            double t62645 = t62512*t62512;
            double t62646 = 1/(t62496*t62496*t62496);
            double t62647 = ccab4*t62645*t62646*t62467*t62468*t62469*2.0;
            double t62648 = t62515*t62515;
            double t62649 = 1/(t62508*t62508*t62508);
            double t62650 = ccab2*t62472*t62465*t62466*t62648*t62649*2.0;
            double t62651 = t62522*t62522;
            double t62652 = 1/(t62504*t62504*t62504);
            double t62653 = ccab3*gamma_aa[index]*gcab*t62471*t62651*t62652*t62465*t62466*2.0;
            double t62655 = ccaa4*t62523*t62560*t62628*t62467*(3.2E1/3.0);
            double t62656 = ccaa1*gamma_aa[index]*gcaa*t62513*t62631*(8.0/3.0);
            double t62657 = ccaa3*gamma_aa[index]*gcaa*t62516*t62465*t62636*t62559*8.0;
            double t62658 = ccaa2*t62514*t62640*t62465*t62559*(1.6E1/3.0);
            double t62659 = 1/(t62630*t62630);
            double t62660 = gamma_aa[index]*gcaa*t62513*8.0;
            double t62661 = gamma_aa[index]*gcaa*t62516*t62465*t62559*8.0;
            double t62662 = t62514*t62465*t62559*1.6E1;
            double t62663 = t62660+t62661+t62662;
            double t62664 = 1/(t62635*t62635);
            double t62665 = gamma_aa[index]*gcaa*t62513*(3.2E1/3.0);
            double t62666 = gamma_aa[index]*gcaa*t62516*t62465*t62559*3.2E1;
            double t62667 = t62514*t62465*t62559*3.2E1;
            double t62668 = t62523*t62560*t62467*(3.2E1/3.0);
            double t62669 = t62665+t62666+t62667+t62668;
            double t62670 = 1/(t62627*t62627);
            double t62671 = gamma_aa[index]*gcaa*t62513*(1.6E1/3.0);
            double t62672 = t62514*t62465*t62559*(1.6E1/3.0);
            double t62673 = t62671+t62672;
            double t62674 = 1/(t62639*t62639);
            double t62675 = t62655+t62656+t62657+t62658-ccaa1*t62514*t62465*t62559*t62659*(8.0/3.0)-ccaa2*t62472* \
               t62465*t62673*t62674*t62559-ccaa4*t62560*t62670*t62467*t62469*t62669-ccaa3*gamma_aa[index]*gcaa*t62471* \
               t62465*t62663*t62664*t62559;
            double t62676 = gx*gx;
            double t62677 = t62676*t62676;
            double t62678 = gamma_aa[index]*gx*t62470;
            double t62679 = t62678+1.0;
            double t62699 = gamma_aa[index]*gx*t62513*(3.2E1/3.0);
            double t62700 = gamma_aa[index]*gx*t62516*t62465*t62676*3.2E1;
            double t62701 = t62514*t62465*t62676*3.2E1;
            double t62702 = t62523*t62467*t62677*(3.2E1/3.0);
            double t62680 = t62700+t62701+t62702+t62699;
            double t62681 = gamma_aa[index]*gx*t62470*4.0;
            double t62682 = gamma_aa[index]*gx*t62471*t62465*t62676*4.0;
            double t62683 = t62472*t62465*t62676*6.0;
            double t62684 = t62467*t62469*t62677;
            double t62685 = t62681+t62682+t62683+t62684+1.0;
            double t62704 = gamma_aa[index]*gx*t62513*(1.6E1/3.0);
            double t62705 = t62514*t62465*t62676*(1.6E1/3.0);
            double t62686 = t62704+t62705;
            double t62687 = gamma_aa[index]*gx*t62470*2.0;
            double t62688 = t62472*t62465*t62676;
            double t62689 = t62687+t62688+1.0;
            double t62690 = gamma_aa[index]*gx*t62470*3.0;
            double t62691 = gamma_aa[index]*gx*t62471*t62465*t62676;
            double t62692 = t62472*t62465*t62676*3.0;
            double t62693 = t62690+t62691+t62692+1.0;
            double t62694 = 1/(t62693*t62693);
            double t62695 = gamma_aa[index]*gx*t62513*8.0;
            double t62696 = gamma_aa[index]*gx*t62516*t62465*t62676*8.0;
            double t62697 = t62514*t62465*t62676*1.6E1;
            double t62698 = t62695+t62696+t62697;
            double t62703 = 1/(t62685*t62685);
            double t62706 = 1/(t62689*t62689);
            double t62707 = 1/t62685;
            double t62708 = 1/t62679;
            double t62709 = 1/t62693;
            double t62710 = 1/t62689;
            double t62711 = 1/(t62679*t62679);
            double t62712 = ccaa4*t62560*t62628*t62467*t62469;
            double t62713 = ccaa1*gamma_aa[index]*gcaa*t62631*t62470;
            double t62714 = ccaa3*gamma_aa[index]*gcaa*t62471*t62465*t62636*t62559;
            double t62715 = ccaa2*t62640*t62472*t62465*t62559;
            double t62716 = ccaa0+t62712+t62713+t62714+t62715;
            double t62717 = 1/(t62543*t62543*t62543);
            double t62718 = b4f*t62441*t62470*(1.0E1/9.0);
            double t62719 = b2f*c*t62605*(4.0/9.0);
            double t62720 = b3f*t62441*t62470*t62549*(1.0/1.2E1);
            double t62721 = b1f*c*t62605*t62549*(2.0/9.0);
            double t62722 = b3f*c*t62605*t62478*(2.0/3.0);
            double t62723 = t62720+t62721+t62722+t62718+t62719-b1f*t62441*t62470*t62606*(1.0/3.6E1);
            double t62724 = t62561*t62723*t62562*t62537;
            double t62726 = t62551*t62552*t62616*t62491;
            double t62727 = 1/(t62546*t62546);
            double t62728 = 1/(t62543*t62543*t62543*t62543);
            double t62729 = t62607*t62537*t62538*t62727*t62728*(1.0/2.0);
            double t62730 = t62491*t62608*t62617*t62618*t62448*(1.0/2.0);
            double t62731 = a1f*c*t62561*t62562*t62547*t62567*(2.0/3.0);
            double t62732 = a1p*c*t62551*t62552*t62547*t62557*(2.0/3.0);
            v_rho_a_rho_a_[index] = -t62577*(-t62621-rho_a[index]*(t62604+t62585+t62589-t62452*t62462*t62454* \
               t62586*2.0-a1p*c*c0p*t62446*t62464*(8.0/9.0)+Aa*t62601*t62603*t62590*t62591*t62475*(4.0/9.0))*2.0+ \
               rho_a[index]*(-t62610+t62730+t62732+t62726-t62619+t62535*t62475*(t62610+t62731+t62724+t62619+t62729- \
               t62551*t62552*t62616*t62491-t62561*t62607*t62537*t62717*2.0-a1f*c*c0f*t62550*t62605*(8.0/9.0)-t62491* \
               t62608*t62617*t62618*t62448*(1.0/2.0)-a1p*c*t62551*t62552*t62547*t62557*(2.0/3.0)))+t62620*t62535* \
               t62475*2.0+t62452*t62454*t62463*t62456*2.0-t62551*t62552*t62491*t62557*2.0+a1p*c*c0p*t62547*t62489* \
               (4.0/3.0))+t62642*t62675*2.0+(rho_a[index]*(t62571+t62535*t62475*(t62570-c0p*t62491*t62489*2.0))*2.0- \
               c0p*rho_a[index]*t62454*t62464*4.0)*(t62650+t62644+t62653+t62647+ccab1*gamma_aa[index]*gcab*t62500* \
               t62517*(4.4E1/9.0)-ccab1*t62511*t62572*t62465*t62466*(7.6E1/9.0)+ccab2*t62511*t62509*t62465*t62466* \
               (4.0E1/3.0)+ccab4*t62528*t62467*t62468*t62497*(3.68E2/9.0)-ccab2*t62514*t62532*t62515*t62465*t62466* \
               (1.6E1/3.0)-ccab4*t62512*t62523*t62529*t62467*t62468*(3.2E1/3.0)-ccab2*t62532*t62472*t62465*t62466* \
               (gamma_aa[index]*gcab*t62517*(8.8E1/9.0)+t62511*t62465*t62466*(4.0E1/3.0))-ccab4*t62529*t62467*t62468* \
               t62469*(gamma_aa[index]*gcab*t62517*(1.76E2/9.0)+t62511*t62465*t62466*8.0E1+t62528*t62467*t62468*(3.68E2/ \
               9.0)+gamma_aa[index]*gcab*t62510*t62465*t62466*(3.04E2/3.0))+ccab3*gamma_aa[index]*gcab*t62510*t62505* \
               t62465*t62466*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t62471*t62518*t62465*t62466*(gamma_aa[index]* \
               gcab*t62517*(4.4E1/3.0)+t62511*t62465*t62466*4.0E1+gamma_aa[index]*gcab*t62510*t62465*t62466*(7.6E1/ \
               3.0))-ccab3*gamma_aa[index]*gcab*t62522*t62516*t62518*t62465*t62466*8.0)+t62716*(-t62558+t62569+t62535* \
               t62475*(t62558+t62568-t62561*t62562*t62537*t62567-a1p*c*c0p*t62547*t62489*(2.0/3.0)))*2.0+(-t62571+ \
               rho_a[index]*(-t62558+t62569+t62620*t62535*t62475)+rho_a[index]*(t62452*t62454*t62463*t62456-a1p*c* \
               c0p*t62455*t62464*(2.0/3.0))*2.0+c0p*t62454*t62464*2.0-t62622*t62535*t62475)*(ccab1*gamma_aa[index]* \
               gcab*t62500*t62513*(4.0/3.0)-ccab1*t62514*t62572*t62465*t62466*(4.0/3.0)+ccab2*t62514*t62509*t62465* \
               t62466*(8.0/3.0)+ccab4*t62523*t62467*t62468*t62497*(1.6E1/3.0)-ccab2*t62532*t62515*t62472*t62465*t62466- \
               ccab4*t62512*t62529*t62467*t62468*t62469+ccab3*gamma_aa[index]*gcab*t62505*t62516*t62465*t62466*4.0- \
               ccab3*gamma_aa[index]*gcab*t62522*t62471*t62518*t62465*t62466)*4.0+(rho_a[index]*t62642*2.0-c0p*rho_a[index]* \
               t62454*t62464*4.0)*(t62650+t62644+t62653+t62647-ccab1*t62511*t62572*t62465*t62466*(3.2E1/9.0)+ccab2* \
               t62511*t62509*t62465*t62466*(3.2E1/9.0)-ccab2*t62532*t62528*t62467*t62468*(3.2E1/9.0)+ccab4*t62528* \
               t62467*t62468*t62497*(6.4E1/3.0)-ccab2*t62514*t62532*t62515*t62465*t62466*(1.6E1/3.0)-ccab4*t62512* \
               t62523*t62529*t62467*t62468*(3.2E1/3.0)-ccab4*t62529*t62467*t62468*t62469*(t62511*t62465*t62466*(6.4E1/ \
               3.0)+t62528*t62467*t62468*(6.4E1/3.0)+gamma_aa[index]*gcab*t62510*t62465*t62466*(1.28E2/3.0))+ccab3* \
               gamma_aa[index]*gcab*t62510*t62505*t62465*t62466*(3.2E1/3.0)-ccab3*gamma_aa[index]*gcab*t62471*t62518* \
               t62465*t62466*(t62511*t62465*t62466*(3.2E1/3.0)+gamma_aa[index]*gcab*t62510*t62465*t62466*(3.2E1/3.0) \
               )-ccab3*gamma_aa[index]*gcab*t62522*t62516*t62518*t62465*t62466*8.0)+t62577*(t62621+rho_a[index]*(t62604+ \
               t62585+t62589-t62452*t62462*t62454*t62586*2.0-a1p*c*c0p*t62446*t62464*(8.0/9.0)-Aa*t62601*t62603*t62590* \
               t62591*t62475*(4.0/9.0))*2.0-t62452*t62454*t62463*t62456*2.0)+rho_a[index]*t62675*(t62558-t62569+t62535* \
               t62475*(t62654-t62558-t62568+t62569))*2.0-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t62513* \
               t62708*(8.0/3.0)-cx1*t62711*t62514*t62465*t62676*(8.0/3.0)+cx2*t62710*t62514*t62465*t62676*(1.6E1/ \
               3.0)+cx4*t62523*t62707*t62467*t62677*(3.2E1/3.0)-cx2*t62472*t62706*t62465*t62676*t62686-cx4*t62703* \
               t62680*t62467*t62469*t62677+cx3*gamma_aa[index]*gx*t62516*t62465*t62709*t62676*8.0-cx3*gamma_aa[index]* \
               gx*t62471*t62465*t62676*t62694*t62698)*(8.0/3.0)-rho_a[index]*t62642*(ccaa1*gamma_aa[index]*gcaa*t62631* \
               t62517*(8.8E1/9.0)+ccaa2*t62511*t62640*t62465*t62559*(3.04E2/9.0)-ccaa1*t62511*t62465*t62559*t62659* \
               2.4E1+ccaa4*t62560*t62528*t62628*t62467*(1.12E3/9.0)-ccaa4*t62523*t62560*t62670*t62467*t62669*(6.4E1/ \
               3.0)-ccaa2*t62514*t62465*t62673*t62674*t62559*(3.2E1/3.0)-ccaa2*t62472*t62465*t62674*t62559*(gamma_aa[index]* \
               gcaa*t62517*(1.76E2/9.0)+t62511*t62465*t62559*(3.04E2/9.0))-ccaa4*t62560*t62670*t62467*t62469*(gamma_aa[index]* \
               gcaa*t62517*(3.52E2/9.0)+t62511*t62465*t62559*(6.08E2/3.0)+t62560*t62528*t62467*(1.12E3/9.0)+gamma_aa[index]* \
               gcaa*t62510*t62465*t62559*2.88E2)+ccaa2*t62472*t62465*(t62673*t62673)*1/(t62639*t62639*t62639)*t62559* \
               2.0+ccaa4*t62560*1/(t62627*t62627*t62627)*t62467*t62469*(t62669*t62669)*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t62510*t62465*t62636*t62559*7.2E1+ccaa1*gamma_aa[index]*gcaa*t62510*1/(t62630*t62630*t62630)* \
               t62465*t62559*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t62471*1/(t62635*t62635*t62635)*t62465*(t62663* \
               t62663)*t62559*2.0-ccaa3*gamma_aa[index]*gcaa*t62471*t62465*t62664*t62559*(gamma_aa[index]*gcaa*t62517* \
               (8.8E1/3.0)+t62511*t62465*t62559*(3.04E2/3.0)+gamma_aa[index]*gcaa*t62510*t62465*t62559*7.2E1)-ccaa3* \
               gamma_aa[index]*gcaa*t62516*t62465*t62663*t62664*t62559*1.6E1)+rho_a[index]*t62716*(-t62610+t62730+ \
               t62732+t62726-t62619+t62535*t62475*(t62610-t62730+t62731-t62732+t62724-t62726+t62619+t62729-t62561* \
               t62607*t62537*t62717*2.0-a1f*c*c0f*t62550*t62605*(8.0/9.0)))+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t62517*t62708*(8.8E1/9.0)-cx1*t62511*t62711*t62465*t62676*2.4E1+cx2*t62511*t62710*t62465*t62676* \
               (3.04E2/9.0)+cx4*t62707*t62528*t62467*t62677*(1.12E3/9.0)-cx2*t62514*t62706*t62465*t62676*t62686*(3.2E1/ \
               3.0)-cx4*t62523*t62703*t62680*t62467*t62677*(6.4E1/3.0)-cx2*t62472*t62706*t62465*t62676*(gamma_aa[index]* \
               gx*t62517*(1.76E2/9.0)+t62511*t62465*t62676*(3.04E2/9.0))-cx4*t62703*t62467*t62469*t62677*(gamma_aa[index]* \
               gx*t62517*(3.52E2/9.0)+t62511*t62465*t62676*(6.08E2/3.0)+t62528*t62467*t62677*(1.12E3/9.0)+gamma_aa[index]* \
               gx*t62510*t62465*t62676*2.88E2)+cx2*t62472*t62465*t62676*(t62686*t62686)*1/(t62689*t62689*t62689)* \
               2.0+cx4*(t62680*t62680)*t62467*t62469*1/(t62685*t62685*t62685)*t62677*2.0+cx3*gamma_aa[index]*gx*t62510* \
               t62465*t62709*t62676*7.2E1+cx1*gamma_aa[index]*gx*t62510*t62465*t62676*1/(t62679*t62679*t62679)*(1.28E2/ \
               9.0)+cx3*gamma_aa[index]*gx*t62471*t62465*1/(t62693*t62693*t62693)*t62676*(t62698*t62698)*2.0-cx3* \
               gamma_aa[index]*gx*t62471*t62465*t62676*t62694*(gamma_aa[index]*gx*t62517*(8.8E1/3.0)+t62511*t62465* \
               t62676*(3.04E2/3.0)+gamma_aa[index]*gx*t62510*t62465*t62676*7.2E1)-cx3*gamma_aa[index]*gx*t62516*t62465* \
               t62676*t62694*t62698*1.6E1)+c0*t62480*(cx0+cx1*gamma_aa[index]*gx*t62470*t62708+cx2*t62710*t62472* \
               t62465*t62676+cx4*t62707*t62467*t62469*t62677+cx3*gamma_aa[index]*gx*t62471*t62465*t62709*t62676)* \
               (4.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t62734 = 1/pow(rho_a[index],1.0/3.0);
                double t62735 = c*t62734;
                double t62736 = sqrt(t62735);
                double t62737 = pow(t62735,3.0/2.0);
                double t62738 = c*c;
                double t62739 = 1/pow(rho_a[index],2.0/3.0);
                double t62740 = 1/c0p;
                double t62741 = b1p*t62736;
                double t62742 = b3p*t62737;
                double t62743 = b4p*t62738*t62739;
                double t62744 = b2p*c*t62734;
                double t62745 = t62741+t62742+t62743+t62744;
                double t62746 = 1/t62745;
                double t62747 = t62740*t62746*(1.0/2.0);
                double t62748 = t62747+1.0;
                double t62749 = log(t62748);
                double t62750 = a1p*c*t62734;
                double t62751 = t62750+1.0;
                double t62752 = 1/pow(rho_a[index],8.0/3.0);
                double t62753 = gamma_aa[index]*gamma_aa[index];
                double t62754 = gcaa*gcaa;
                double t62755 = t62754*t62754;
                double t62756 = 1/pow(rho_a[index],3.2E1/3.0);
                double t62757 = 1/pow(rho_a[index],1.6E1/3.0);
                double t62758 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t62759 = gamma_aa[index]*gcaa*t62752;
                double t62760 = t62759+1.0;
                double t62761 = gamma_aa[index]*gcaa*t62752*3.0;
                double t62762 = gamma_aa[index]*gcaa*t62753*t62754*t62758;
                double t62763 = t62753*t62754*t62757*3.0;
                double t62764 = t62761+t62762+t62763+1.0;
                double t62765 = t62753*t62753;
                double t62766 = gamma_aa[index]*gcaa*t62752*4.0;
                double t62767 = gamma_aa[index]*gcaa*t62753*t62754*t62758*4.0;
                double t62768 = t62753*t62754*t62757*6.0;
                double t62769 = t62755*t62756*t62765;
                double t62770 = t62766+t62767+t62768+t62769+1.0;
                double t62771 = gamma_aa[index]*gcaa*t62752*2.0;
                double t62772 = t62753*t62754*t62757;
                double t62773 = t62771+t62772+1.0;
                double t62774 = pow(2.0,1.0/3.0);
                double t62775 = t62774*2.0;
                double t62776 = t62775-2.0;
                double t62777 = two_13*2.0;
                double t62778 = t62777-2.0;
                double t62779 = 1/t62778;
                double t62780 = 1/c0f;
                double t62781 = b1f*t62736;
                double t62782 = b3f*t62737;
                double t62783 = b4f*t62738*t62739;
                double t62784 = b2f*c*t62734;
                double t62785 = t62781+t62782+t62783+t62784;
                double t62786 = 1/t62785;
                double t62787 = t62780*t62786*(1.0/2.0);
                double t62788 = t62787+1.0;
                double t62789 = log(t62788);
                double t62790 = a1f*c*t62734;
                double t62791 = t62790+1.0;
                double t62792 = c0f*t62791*t62789*2.0;
                double t62793 = c0p*t62751*t62749*2.0;
                double t62794 = rho_a[index]*2.0;
                double t62795 = 1/pow(t62794,1.0/3.0);
                double t62796 = c*t62795;
                double t62797 = gcab*gcab;
                double t62798 = t62797*t62797;
                double t62799 = 1/pow(rho_a[index],1.9E1/3.0);
                double t62800 = 1/pow(rho_a[index],3.5E1/3.0);
                double t62801 = gamma_aa[index]*gcab*t62752*2.0;
                double t62802 = t62753*t62757*t62797;
                double t62803 = t62801+t62802+1.0;
                double t62804 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t62805 = gamma_aa[index]*gcab*t62752;
                double t62806 = t62805+1.0;
                double t62807 = gamma_aa[index]*gcab*t62752*3.0;
                double t62808 = gamma_aa[index]*gcab*t62753*t62758*t62797;
                double t62809 = t62753*t62757*t62797*3.0;
                double t62810 = t62807+t62808+t62809+1.0;
                double t62811 = gamma_aa[index]*gcab*t62752*4.0;
                double t62812 = gamma_aa[index]*gcab*t62753*t62758*t62797*4.0;
                double t62813 = t62753*t62757*t62797*6.0;
                double t62814 = t62756*t62765*t62798;
                double t62815 = t62811+t62812+t62813+t62814+1.0;
                double t62816 = 1/pow(rho_a[index],1.1E1/3.0);
                double t62817 = 1/(t62803*t62803);
                double t62818 = 1/(t62810*t62810);
                double t62819 = 1/(t62815*t62815);
                double t62820 = gamma_aa[index]*gcab*t62816*(8.0/3.0);
                double t62821 = t62753*t62797*t62799*(8.0/3.0);
                double t62822 = t62820+t62821;
                double t62823 = gcab*t62752;
                double t62824 = gamma_aa[index]*t62757*t62797;
                double t62825 = t62823+t62824;
                double t62826 = gcab*t62752*(3.0/2.0);
                double t62827 = gamma_aa[index]*t62757*t62797*3.0;
                double t62828 = gcab*t62753*t62758*t62797*(3.0/2.0);
                double t62829 = t62826+t62827+t62828;
                double t62830 = gamma_aa[index]*gcab*t62816*4.0;
                double t62831 = gamma_aa[index]*gcab*t62804*t62753*t62797*4.0;
                double t62832 = t62753*t62797*t62799*8.0;
                double t62833 = t62830+t62831+t62832;
                double t62834 = gamma_aa[index]*gcab*t62816*(1.6E1/3.0);
                double t62835 = gamma_aa[index]*gcab*t62804*t62753*t62797*1.6E1;
                double t62836 = t62753*t62797*t62799*1.6E1;
                double t62837 = t62800*t62765*t62798*(1.6E1/3.0);
                double t62838 = t62834+t62835+t62836+t62837;
                double t62839 = gcab*t62752*2.0;
                double t62840 = gamma_aa[index]*t62757*t62797*6.0;
                double t62841 = gcab*t62753*t62758*t62797*6.0;
                double t62842 = gamma_aa[index]*t62753*t62756*t62798*2.0;
                double t62843 = t62840+t62841+t62842+t62839;
                double t62844 = t62792-t62793;
                double t62845 = t62844*t62776*t62779;
                double t62846 = t62845+t62793;
                double t62847 = rho_a[index]*t62846*2.0;
                double t62848 = sqrt(t62796);
                double t62849 = b1p*t62848;
                double t62850 = pow(t62796,3.0/2.0);
                double t62851 = b3p*t62850;
                double t62852 = b2p*c*t62795;
                double t62853 = 1/pow(t62794,2.0/3.0);
                double t62854 = b4p*t62853*t62738;
                double t62855 = t62851+t62852+t62854+t62849;
                double t62856 = 1/t62855;
                double t62857 = t62740*t62856*(1.0/2.0);
                double t62858 = t62857+1.0;
                double t62859 = log(t62858);
                double t62860 = a1p*c*t62795;
                double t62861 = t62860+1.0;
                double t62862 = t62847-c0p*rho_a[index]*t62861*t62859*4.0;
                double t62863 = 1/t62815;
                double t62864 = 1/t62803;
                double t62865 = 1/t62810;
                double t62866 = 1/(t62806*t62806);
                double t62867 = 1/(t62806*t62806*t62806);
                double t62868 = ccab3*gcab*t62833*t62753*t62818*t62758*t62797*(3.0/2.0);
                double t62869 = ccab2*gamma_aa[index]*t62822*t62817*t62757*t62797;
                double t62870 = ccab3*gamma_aa[index]*gcab*t62804*t62753*t62818*t62829*t62797*4.0;
                double t62871 = ccab4*gamma_aa[index]*t62753*t62756*t62819*t62838*t62798*2.0;
                double t62872 = ccab4*t62800*t62843*t62765*t62819*t62798*(1.6E1/3.0);
                double t62873 = ccab2*t62753*t62825*t62817*t62797*t62799*(8.0/3.0);
                double t62874 = gamma_aa[index]*t62797*t62799*4.0;
                double t62875 = 1/(t62803*t62803*t62803);
                double t62876 = 1/(t62810*t62810*t62810);
                double t62877 = 1/(t62815*t62815*t62815);
                double t62878 = 1/pow(t62794,4.0/3.0);
                double t62879 = 1/pow(rho_a[index],4.0/3.0);
                double t62880 = 1/pow(rho_a[index],5.0/3.0);
                double t62881 = 1/sqrt(t62735);
                double t62882 = 1/t62748;
                double t62883 = 1/(t62745*t62745);
                double t62884 = b4p*t62880*t62738*(2.0/3.0);
                double t62885 = b2p*c*t62879*(1.0/3.0);
                double t62886 = b1p*c*t62881*t62879*(1.0/6.0);
                double t62887 = b3p*c*t62736*t62879*(1.0/2.0);
                double t62888 = t62884+t62885+t62886+t62887;
                double t62889 = t62751*t62882*t62883*t62888;
                double t62890 = 1/t62806;
                double t62891 = gx*gx;
                double t62892 = t62891*t62891;
                double t62893 = gamma_aa[index]*gx*t62752;
                double t62894 = t62893+1.0;
                double t62895 = gamma_aa[index]*gx*t62752*3.0;
                double t62896 = gamma_aa[index]*gx*t62753*t62891*t62758;
                double t62897 = t62753*t62891*t62757*3.0;
                double t62898 = t62895+t62896+t62897+1.0;
                double t62899 = gamma_aa[index]*gx*t62752*4.0;
                double t62900 = gamma_aa[index]*gx*t62753*t62891*t62758*4.0;
                double t62901 = t62753*t62891*t62757*6.0;
                double t62902 = t62756*t62765*t62892;
                double t62903 = t62900+t62901+t62902+t62899+1.0;
                double t62904 = gamma_aa[index]*gx*t62752*2.0;
                double t62905 = t62753*t62891*t62757;
                double t62906 = t62904+t62905+1.0;
                double t62907 = 1/t62760;
                double t62908 = 1/t62770;
                double t62909 = 1/t62773;
                double t62910 = 1/t62764;
                double t62911 = 1/(t62760*t62760);
                double t62912 = 1/(t62764*t62764);
                double t62913 = 1/(t62773*t62773);
                double t62914 = gcaa*t62752*3.0;
                double t62915 = gamma_aa[index]*t62754*t62757*6.0;
                double t62916 = gcaa*t62753*t62754*t62758*3.0;
                double t62917 = t62914+t62915+t62916;
                double t62918 = 1/(t62770*t62770);
                double t62919 = gcaa*t62752*4.0;
                double t62920 = gamma_aa[index]*t62754*t62757*1.2E1;
                double t62921 = gcaa*t62753*t62754*t62758*1.2E1;
                double t62922 = gamma_aa[index]*t62753*t62755*t62756*4.0;
                double t62923 = t62920+t62921+t62922+t62919;
                double t62924 = gcaa*t62752*2.0;
                double t62925 = gamma_aa[index]*t62754*t62757*2.0;
                double t62926 = t62924+t62925;
                double t62927 = gamma_aa[index]*gcaa*t62816*(1.6E1/3.0);
                double t62928 = t62753*t62754*t62799*(1.6E1/3.0);
                double t62929 = t62927+t62928;
                double t62930 = gamma_aa[index]*gcaa*t62816*8.0;
                double t62931 = gamma_aa[index]*gcaa*t62804*t62753*t62754*8.0;
                double t62932 = t62753*t62754*t62799*1.6E1;
                double t62933 = t62930+t62931+t62932;
                double t62934 = gamma_aa[index]*gcaa*t62816*(3.2E1/3.0);
                double t62935 = gamma_aa[index]*gcaa*t62804*t62753*t62754*3.2E1;
                double t62936 = t62753*t62754*t62799*3.2E1;
                double t62937 = t62800*t62755*t62765*(3.2E1/3.0);
                double t62938 = t62934+t62935+t62936+t62937;
                double t62939 = 1/t62788;
                double t62940 = 1/(t62785*t62785);
                double t62941 = b4f*t62880*t62738*(2.0/3.0);
                double t62942 = b2f*c*t62879*(1.0/3.0);
                double t62943 = b1f*c*t62881*t62879*(1.0/6.0);
                double t62944 = b3f*c*t62736*t62879*(1.0/2.0);
                double t62945 = t62941+t62942+t62943+t62944;
                double t62946 = a1f*c*c0f*t62789*t62879*(2.0/3.0);
                double t62947 = a1p*c*c0p*t62749*t62879*(2.0/3.0);
                double t62948 = ccaa1*gcaa*t62752*t62907;
                double t62949 = ccaa4*gamma_aa[index]*t62753*t62755*t62908*t62756*4.0;
                double t62950 = ccaa2*gamma_aa[index]*t62754*t62909*t62757*2.0;
                double t62951 = ccaa3*gcaa*t62910*t62753*t62754*t62758*3.0;
                double t62952 = t62950+t62951+t62948+t62949-ccaa1*gamma_aa[index]*t62911*t62754*t62757-ccaa2*t62913* \
                   t62753*t62754*t62926*t62757-ccaa4*t62923*t62755*t62756*t62765*t62918-ccaa3*gamma_aa[index]*gcaa*t62912* \
                   t62753*t62754*t62917*t62758;
                double t62953 = 1/t62894;
                double t62954 = 1/t62903;
                double t62955 = 1/t62906;
                double t62956 = 1/t62898;
                double t62957 = 1/(t62894*t62894);
                double t62958 = 1/(t62898*t62898);
                double t62959 = 1/(t62906*t62906);
                double t62960 = gx*t62752*3.0;
                double t62961 = gamma_aa[index]*t62891*t62757*6.0;
                double t62962 = gx*t62753*t62891*t62758*3.0;
                double t62963 = t62960+t62961+t62962;
                double t62964 = 1/(t62903*t62903);
                double t62965 = gx*t62752*4.0;
                double t62966 = gamma_aa[index]*t62891*t62757*1.2E1;
                double t62967 = gx*t62753*t62891*t62758*1.2E1;
                double t62968 = gamma_aa[index]*t62753*t62756*t62892*4.0;
                double t62969 = t62965+t62966+t62967+t62968;
                double t62970 = gx*t62752*2.0;
                double t62971 = gamma_aa[index]*t62891*t62757*2.0;
                double t62972 = t62970+t62971;
                double t62973 = gamma_aa[index]*gx*t62816*(1.6E1/3.0);
                double t62974 = t62753*t62891*t62799*(1.6E1/3.0);
                double t62975 = t62973+t62974;
                double t62976 = gamma_aa[index]*gx*t62816*8.0;
                double t62977 = gamma_aa[index]*gx*t62804*t62753*t62891*8.0;
                double t62978 = t62753*t62891*t62799*1.6E1;
                double t62979 = t62976+t62977+t62978;
                double t62980 = gamma_aa[index]*gx*t62816*(3.2E1/3.0);
                double t62981 = gamma_aa[index]*gx*t62804*t62753*t62891*3.2E1;
                double t62982 = t62753*t62891*t62799*3.2E1;
                double t62983 = t62800*t62765*t62892*(3.2E1/3.0);
                double t62984 = t62980+t62981+t62982+t62983;
                v_rho_a_gamma_aa_[index] = t62862*(t62870+t62871+t62872+t62873+t62868+t62869-ccab2*gamma_aa[index]* \
                   t62864*t62797*t62799*(4.0/3.0)+ccab1*gamma_aa[index]*t62866*t62797*t62799*(4.0/3.0)+ccab4*t62756*t62765* \
                   t62819*t62798*(gamma_aa[index]*t62797*t62799*8.0+gamma_aa[index]*t62800*t62753*t62798*8.0+gcab*t62804* \
                   t62753*t62797*1.6E1)+ccab2*gamma_aa[index]*t62800*t62753*t62817*t62798*(4.0/3.0)-ccab4*gamma_aa[index]* \
                   t62800*t62753*t62863*t62798*8.0-ccab1*gcab*t62804*t62753*t62867*t62797*(4.0/3.0)-ccab3*gcab*t62804* \
                   t62753*t62865*t62797*4.0-ccab2*t62822*t62753*t62825*t62757*t62875*t62797*2.0-ccab4*t62843*t62756*t62765* \
                   t62838*t62877*t62798*2.0+ccab3*gamma_aa[index]*gcab*t62753*t62818*t62758*t62797*(t62874+gcab*t62804* \
                   t62753*t62797*4.0)-ccab3*gamma_aa[index]*gcab*t62833*t62753*t62829*t62758*t62876*t62797*2.0)-t62952* \
                   (t62793+t62776*t62779*(t62792-c0p*t62751*t62749*2.0))-(-t62845-t62793+rho_a[index]*((t62861*1/(t62855* \
                   t62855)*(b4p*t62738*1/pow(t62794,5.0/3.0)*(2.0/3.0)+b2p*c*t62878*(1.0/3.0)+b3p*c*t62848*t62878*(1.0/ \
                   2.0)+b1p*c*1/sqrt(t62796)*t62878*(1.0/6.0)))/t62858-a1p*c*c0p*t62859*t62878*(2.0/3.0))*2.0+rho_a[index]* \
                   (t62947-t62889+t62776*t62779*(t62946+t62889-t62940*t62791*t62945*t62939-a1p*c*c0p*t62749*t62879*(2.0/ \
                   3.0)))+c0p*t62861*t62859*2.0)*(ccab1*gcab*t62752*t62890*(1.0/2.0)+ccab2*gamma_aa[index]*t62864*t62757* \
                   t62797-ccab1*gamma_aa[index]*t62757*t62866*t62797*(1.0/2.0)-ccab2*t62753*t62825*t62817*t62757*t62797- \
                   ccab4*t62843*t62756*t62765*t62819*t62798+ccab4*gamma_aa[index]*t62753*t62863*t62756*t62798*2.0+ccab3* \
                   gcab*t62753*t62865*t62758*t62797*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t62753*t62818*t62829*t62758* \
                   t62797)*2.0+t62862*(t62870+t62871+t62872+t62873+t62868+t62869-ccab1*gcab*t62816*t62890*(4.0/3.0)-ccab2* \
                   gamma_aa[index]*t62864*t62797*t62799*4.0+ccab1*gamma_aa[index]*t62866*t62797*t62799*(8.0/3.0)+ccab4* \
                   t62756*t62765*t62819*t62798*(gcab*t62816*(1.6E1/3.0)+gamma_aa[index]*t62797*t62799*2.4E1+gamma_aa[index]* \
                   t62800*t62753*t62798*(4.0E1/3.0)+gcab*t62804*t62753*t62797*3.2E1)+ccab2*t62753*t62817*t62757*t62797* \
                   (t62874+gcab*t62816*(8.0/3.0))-ccab4*gamma_aa[index]*t62800*t62753*t62863*t62798*(4.0E1/3.0)-ccab1* \
                   gcab*t62804*t62753*t62867*t62797*(4.0/3.0)-ccab3*gcab*t62804*t62753*t62865*t62797*8.0-ccab2*t62822* \
                   t62753*t62825*t62757*t62875*t62797*2.0-ccab4*t62843*t62756*t62765*t62838*t62877*t62798*2.0+ccab3*gamma_aa[index]* \
                   gcab*t62753*t62818*t62758*t62797*(gcab*t62816*4.0+gamma_aa[index]*t62797*t62799*1.2E1+gcab*t62804* \
                   t62753*t62797*8.0)-ccab3*gamma_aa[index]*gcab*t62833*t62753*t62829*t62758*t62876*t62797*2.0)-rho_a[index]* \
                   t62846*(ccaa1*gcaa*t62816*t62907*(-8.0/3.0)+ccaa1*gamma_aa[index]*t62911*t62754*t62799*8.0-ccaa2*gamma_aa[index]* \
                   t62754*t62909*t62799*(3.2E1/3.0)+ccaa4*t62800*t62923*t62755*t62765*t62918*(3.2E1/3.0)+ccaa2*t62913* \
                   t62753*t62754*t62926*t62799*(1.6E1/3.0)+ccaa4*t62755*t62756*t62765*t62918*(gcaa*t62816*(3.2E1/3.0) \
                   +gamma_aa[index]*t62754*t62799*6.4E1+gamma_aa[index]*t62800*t62753*t62755*(1.28E2/3.0)+gcaa*t62804* \
                   t62753*t62754*9.6E1)-ccaa1*gcaa*t62804*1/(t62760*t62760*t62760)*t62753*t62754*(1.6E1/3.0)+ccaa2*t62913* \
                   t62753*t62754*t62757*(gcaa*t62816*(1.6E1/3.0)+gamma_aa[index]*t62754*t62799*(3.2E1/3.0))-ccaa4*gamma_aa[index]* \
                   t62800*t62753*t62755*t62908*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t62913*t62754*t62757*t62929*2.0-ccaa3* \
                   gcaa*t62910*t62804*t62753*t62754*2.4E1+ccaa4*gamma_aa[index]*t62753*t62755*t62756*t62918*t62938*4.0+ \
                   ccaa3*gcaa*t62912*t62753*t62933*t62754*t62758*3.0-ccaa4*1/(t62770*t62770*t62770)*t62923*t62755*t62756* \
                   t62765*t62938*2.0-ccaa2*t62753*t62754*1/(t62773*t62773*t62773)*t62926*t62757*t62929*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t62912*t62753*t62754*t62758*(gcaa*t62816*8.0+gamma_aa[index]*t62754*t62799*3.2E1+gcaa*t62804* \
                   t62753*t62754*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t62804*t62912*t62753*t62754*t62917*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*t62753*t62933*t62754*1/(t62764*t62764*t62764)*t62917*t62758*2.0)+c0*pow(rho_a[index],4.0/3.0) \
                   *(cx1*gx*t62816*t62953*(-8.0/3.0)+cx1*gamma_aa[index]*t62891*t62957*t62799*8.0-cx2*gamma_aa[index]* \
                   t62891*t62955*t62799*(3.2E1/3.0)+cx2*t62753*t62891*t62972*t62959*t62799*(1.6E1/3.0)+cx4*t62800*t62765* \
                   t62892*t62964*t62969*(3.2E1/3.0)+cx4*t62756*t62765*t62892*t62964*(gx*t62816*(3.2E1/3.0)+gamma_aa[index]* \
                   t62891*t62799*6.4E1+gamma_aa[index]*t62800*t62753*t62892*(1.28E2/3.0)+gx*t62804*t62753*t62891*9.6E1) \
                   -cx1*gx*t62804*t62753*t62891*1/(t62894*t62894*t62894)*(1.6E1/3.0)+cx2*t62753*t62891*t62757*t62959* \
                   (gx*t62816*(1.6E1/3.0)+gamma_aa[index]*t62891*t62799*(3.2E1/3.0))+cx2*gamma_aa[index]*t62891*t62757* \
                   t62975*t62959*2.0-cx4*gamma_aa[index]*t62800*t62753*t62954*t62892*(1.28E2/3.0)-cx3*gx*t62804*t62753* \
                   t62891*t62956*2.4E1+cx4*gamma_aa[index]*t62753*t62756*t62892*t62964*t62984*4.0+cx3*gx*t62753*t62891* \
                   t62758*t62958*t62979*3.0-cx2*t62753*1/(t62906*t62906*t62906)*t62891*t62972*t62757*t62975*2.0-cx4*1/ \
                   (t62903*t62903*t62903)*t62756*t62765*t62892*t62984*t62969*2.0+cx3*gamma_aa[index]*gx*t62753*t62891* \
                   t62758*t62958*(gx*t62816*8.0+gamma_aa[index]*t62891*t62799*3.2E1+gx*t62804*t62753*t62891*2.4E1)+cx3* \
                   gamma_aa[index]*gx*t62804*t62753*t62891*t62963*t62958*8.0-cx3*gamma_aa[index]*gx*t62753*t62891*t62963* \
                   t62758*1/(t62898*t62898*t62898)*t62979*2.0)+rho_a[index]*t62952*(t62947-t62889+t62776*t62779*(t62946- \
                   t62947+t62889-t62940*t62791*t62945*t62939))+c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t62752*t62953-cx1* \
                   gamma_aa[index]*t62891*t62757*t62957+cx2*gamma_aa[index]*t62891*t62757*t62955*2.0-cx2*t62753*t62891* \
                   t62972*t62757*t62959-cx4*t62756*t62765*t62892*t62964*t62969+cx4*gamma_aa[index]*t62753*t62756*t62954* \
                   t62892*4.0+cx3*gx*t62753*t62891*t62758*t62956*3.0-cx3*gamma_aa[index]*gx*t62753*t62891*t62963*t62758* \
                   t62958)*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t62986 = 1/pow(rho_a[index],1.0/3.0);
                double t62987 = c*t62986;
                double t62988 = sqrt(t62987);
                double t62989 = pow(t62987,3.0/2.0);
                double t62990 = c*c;
                double t62991 = 1/pow(rho_a[index],2.0/3.0);
                double t62992 = 1/c0p;
                double t62993 = b1p*t62988;
                double t62994 = b3p*t62989;
                double t62995 = b4p*t62990*t62991;
                double t62996 = b2p*c*t62986;
                double t62997 = t62993+t62994+t62995+t62996;
                double t62998 = 1/t62997;
                double t62999 = t62992*t62998*(1.0/2.0);
                double t63000 = t62999+1.0;
                double t63001 = log(t63000);
                double t63002 = a1p*c*t62986;
                double t63003 = t63002+1.0;
                double t63004 = rho_a[index]*2.0;
                double t63005 = 1/pow(t63004,1.0/3.0);
                double t63006 = c*t63005;
                double t63007 = gcab*gcab;
                double t63008 = 1/pow(rho_a[index],1.6E1/3.0);
                double t63009 = 1/pow(rho_a[index],8.0/3.0);
                double t63010 = gamma_aa[index]*gamma_aa[index];
                double t63011 = t63007*t63007;
                double t63012 = 1/pow(rho_a[index],3.2E1/3.0);
                double t63013 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t63014 = gamma_aa[index]*gcab*t63009;
                double t63015 = t63014+1.0;
                double t63016 = gamma_aa[index]*gcab*t63009*2.0;
                double t63017 = t63010*t63007*t63008;
                double t63018 = t63016+t63017+1.0;
                double t63019 = gamma_aa[index]*gcab*t63009*3.0;
                double t63020 = gamma_aa[index]*gcab*t63010*t63013*t63007;
                double t63021 = t63010*t63007*t63008*3.0;
                double t63022 = t63020+t63021+t63019+1.0;
                double t63023 = t63010*t63010;
                double t63039 = gcab*t63009*2.0;
                double t63040 = gamma_aa[index]*t63007*t63008*6.0;
                double t63041 = gcab*t63010*t63013*t63007*6.0;
                double t63042 = gamma_aa[index]*t63010*t63011*t63012*2.0;
                double t63024 = t63040+t63041+t63042+t63039;
                double t63025 = gamma_aa[index]*gcab*t63009*4.0;
                double t63026 = gamma_aa[index]*gcab*t63010*t63013*t63007*4.0;
                double t63027 = t63010*t63007*t63008*6.0;
                double t63028 = t63011*t63012*t63023;
                double t63029 = t63025+t63026+t63027+t63028+1.0;
                double t63032 = gcab*t63009;
                double t63033 = gamma_aa[index]*t63007*t63008;
                double t63030 = t63032+t63033;
                double t63031 = 1/(t63022*t63022);
                double t63034 = 1/(t63018*t63018);
                double t63035 = gcab*t63009*(3.0/2.0);
                double t63036 = gamma_aa[index]*t63007*t63008*3.0;
                double t63037 = gcab*t63010*t63013*t63007*(3.0/2.0);
                double t63038 = t63035+t63036+t63037;
                double t63043 = 1/(t63029*t63029);
                double t63044 = gx*gx;
                double t63045 = t63044*t63044;
                double t63046 = gamma_aa[index]*gx*t63009;
                double t63047 = t63046+1.0;
                double t63048 = gamma_aa[index]*gx*t63009*2.0;
                double t63049 = t63010*t63008*t63044;
                double t63050 = t63048+t63049+1.0;
                double t63051 = gamma_aa[index]*gx*t63009*3.0;
                double t63052 = gamma_aa[index]*gx*t63010*t63013*t63044;
                double t63053 = t63010*t63008*t63044*3.0;
                double t63054 = t63051+t63052+t63053+1.0;
                double t63070 = gx*t63009*4.0;
                double t63071 = gamma_aa[index]*t63008*t63044*1.2E1;
                double t63072 = gx*t63010*t63013*t63044*1.2E1;
                double t63073 = gamma_aa[index]*t63010*t63012*t63045*4.0;
                double t63055 = t63070+t63071+t63072+t63073;
                double t63056 = gamma_aa[index]*gx*t63009*4.0;
                double t63057 = gamma_aa[index]*gx*t63010*t63013*t63044*4.0;
                double t63058 = t63010*t63008*t63044*6.0;
                double t63059 = t63012*t63023*t63045;
                double t63060 = t63056+t63057+t63058+t63059+1.0;
                double t63063 = gx*t63009*2.0;
                double t63064 = gamma_aa[index]*t63008*t63044*2.0;
                double t63061 = t63063+t63064;
                double t63062 = 1/(t63054*t63054);
                double t63065 = 1/(t63050*t63050);
                double t63066 = gx*t63009*3.0;
                double t63067 = gamma_aa[index]*t63008*t63044*6.0;
                double t63068 = gx*t63010*t63013*t63044*3.0;
                double t63069 = t63066+t63067+t63068;
                double t63074 = 1/(t63060*t63060);
                double t63075 = pow(2.0,1.0/3.0);
                double t63076 = t63075*2.0;
                double t63077 = t63076-2.0;
                double t63078 = two_13*2.0;
                double t63079 = t63078-2.0;
                double t63080 = 1/t63079;
                double t63081 = 1/c0f;
                double t63082 = b1f*t62988;
                double t63083 = b3f*t62989;
                double t63084 = b4f*t62990*t62991;
                double t63085 = b2f*c*t62986;
                double t63086 = t63082+t63083+t63084+t63085;
                double t63087 = 1/t63086;
                double t63088 = t63081*t63087*(1.0/2.0);
                double t63089 = t63088+1.0;
                double t63090 = log(t63089);
                double t63091 = a1f*c*t62986;
                double t63092 = t63091+1.0;
                double t63093 = c0f*t63090*t63092*2.0;
                double t63094 = c0p*t63001*t63003*2.0;
                double t63095 = gcaa*gcaa;
                double t63096 = t63095*t63095;
                double t63097 = gamma_aa[index]*gcaa*t63009;
                double t63098 = t63097+1.0;
                double t63099 = gamma_aa[index]*gcaa*t63009*2.0;
                double t63100 = t63010*t63008*t63095;
                double t63101 = t63100+t63099+1.0;
                double t63102 = gamma_aa[index]*gcaa*t63009*3.0;
                double t63103 = gamma_aa[index]*gcaa*t63010*t63013*t63095;
                double t63104 = t63010*t63008*t63095*3.0;
                double t63105 = t63102+t63103+t63104+1.0;
                double t63121 = gcaa*t63009*4.0;
                double t63122 = gamma_aa[index]*t63008*t63095*1.2E1;
                double t63123 = gcaa*t63010*t63013*t63095*1.2E1;
                double t63124 = gamma_aa[index]*t63010*t63012*t63096*4.0;
                double t63106 = t63121+t63122+t63123+t63124;
                double t63107 = gamma_aa[index]*gcaa*t63009*4.0;
                double t63108 = gamma_aa[index]*gcaa*t63010*t63013*t63095*4.0;
                double t63109 = t63010*t63008*t63095*6.0;
                double t63110 = t63012*t63023*t63096;
                double t63111 = t63110+t63107+t63108+t63109+1.0;
                double t63114 = gcaa*t63009*2.0;
                double t63115 = gamma_aa[index]*t63008*t63095*2.0;
                double t63112 = t63114+t63115;
                double t63113 = 1/(t63105*t63105);
                double t63116 = 1/(t63101*t63101);
                double t63117 = gcaa*t63009*3.0;
                double t63118 = gamma_aa[index]*t63008*t63095*6.0;
                double t63119 = gcaa*t63010*t63013*t63095*3.0;
                double t63120 = t63117+t63118+t63119;
                double t63125 = 1/(t63111*t63111);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t63094+t63080*t63077*(t63093-c0p*t63001*t63003*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t62992*(1.0/2.0))/(b1p*sqrt(t63006)+b3p*pow(t63006,3.0/2.0)+b4p*t62990* \
                   1/pow(t63004,2.0/3.0)+b2p*c*t63005)+1.0)*(a1p*c*t63005+1.0)*4.0)*(ccab1*1/(t63015*t63015)*t63007*t63008* \
                   (1.0/2.0)-(ccab2*t63007*t63008*(1.0/2.0))/t63018+ccab2*t63010*t63011*t63012*t63034*(1.0/2.0)-(ccab4* \
                   t63010*t63011*t63012*3.0)/t63029+ccab4*t63011*t63012*t63023*t63043*(t63007*t63008*3.0+t63010*t63011* \
                   t63012*3.0+gamma_aa[index]*gcab*t63013*t63007*6.0)-(ccab3*gamma_aa[index]*gcab*t63013*t63007*(3.0/ \
                   2.0))/t63022-ccab1*gamma_aa[index]*gcab*t63013*1/(t63015*t63015*t63015)*t63007*(1.0/2.0)-ccab2*t63010* \
                   (t63030*t63030)*t63007*t63008*1/(t63018*t63018*t63018)*2.0-ccab4*t63011*t63012*t63023*(t63024*t63024) \
                   *1/(t63029*t63029*t63029)*2.0+ccab2*gamma_aa[index]*t63030*t63007*t63034*t63008*2.0+ccab4*gamma_aa[index]* \
                   t63010*t63011*t63012*t63024*t63043*4.0+ccab3*gcab*t63010*t63013*t63031*t63007*t63038*3.0+ccab3*gamma_aa[index]* \
                   gcab*t63010*t63013*t63031*t63007*(t63007*t63008*(3.0/2.0)+gamma_aa[index]*gcab*t63013*t63007*(3.0/ \
                   2.0))-ccab3*gamma_aa[index]*gcab*t63010*t63013*1/(t63022*t63022*t63022)*t63007*(t63038*t63038)*2.0) \
                   *-4.0-rho_a[index]*(t63094+t63080*t63077*(t63093-t63094))*((ccaa2*t63008*t63095*2.0)/t63101-ccaa1* \
                   t63008*t63095*1/(t63098*t63098)*2.0-ccaa2*t63010*t63012*t63116*t63096*2.0+(ccaa4*t63010*t63012*t63096* \
                   1.2E1)/t63111-ccaa4*t63012*t63023*t63125*t63096*(t63008*t63095*1.2E1+t63010*t63012*t63096*1.2E1+gamma_aa[index]* \
                   gcaa*t63013*t63095*2.4E1)+(ccaa3*gamma_aa[index]*gcaa*t63013*t63095*6.0)/t63105+ccaa1*gamma_aa[index]* \
                   gcaa*t63013*t63095*1/(t63098*t63098*t63098)*2.0+ccaa2*t63010*1/(t63101*t63101*t63101)*(t63112*t63112) \
                   *t63008*t63095*2.0+ccaa4*t63012*1/(t63111*t63111*t63111)*t63023*(t63106*t63106)*t63096*2.0-ccaa2*gamma_aa[index]* \
                   t63112*t63008*t63116*t63095*4.0-ccaa4*gamma_aa[index]*t63010*t63012*t63106*t63125*t63096*8.0-ccaa3* \
                   gcaa*t63010*t63120*t63013*t63113*t63095*6.0-ccaa3*gamma_aa[index]*gcaa*t63010*t63013*t63113*t63095* \
                   (t63008*t63095*6.0+gamma_aa[index]*gcaa*t63013*t63095*6.0)+ccaa3*gamma_aa[index]*gcaa*t63010*(t63120* \
                   t63120)*t63013*1/(t63105*t63105*t63105)*t63095*2.0)*2.0-c0*pow(rho_a[index],4.0/3.0)*(cx1*t63008*t63044* \
                   1/(t63047*t63047)*2.0-(cx2*t63008*t63044*2.0)/t63050+cx2*t63010*t63012*t63045*t63065*2.0-(cx4*t63010* \
                   t63012*t63045*1.2E1)/t63060+cx4*t63012*t63023*t63045*t63074*(t63008*t63044*1.2E1+t63010*t63012*t63045* \
                   1.2E1+gamma_aa[index]*gx*t63013*t63044*2.4E1)-cx1*gamma_aa[index]*gx*t63013*t63044*1/(t63047*t63047* \
                   t63047)*2.0-(cx3*gamma_aa[index]*gx*t63013*t63044*6.0)/t63054-cx2*t63010*1/(t63050*t63050*t63050)* \
                   (t63061*t63061)*t63008*t63044*2.0-cx4*t63012*t63023*1/(t63060*t63060*t63060)*t63045*(t63055*t63055) \
                   *2.0+cx2*gamma_aa[index]*t63061*t63008*t63044*t63065*4.0+cx4*gamma_aa[index]*t63010*t63012*t63045* \
                   t63055*t63074*8.0+cx3*gx*t63010*t63013*t63044*t63062*t63069*6.0+cx3*gamma_aa[index]*gx*t63010*t63013* \
                   t63044*t63062*(t63008*t63044*6.0+gamma_aa[index]*gx*t63013*t63044*6.0)-cx3*gamma_aa[index]*gx*t63010* \
                   t63013*t63044*1/(t63054*t63054*t63054)*(t63069*t63069)*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void HCTH147_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t57303 = 1/pow(rho_a[index],1.0/3.0);
            double t57304 = c*t57303;
            double t57305 = sqrt(t57304);
            double t57306 = pow(t57304,3.0/2.0);
            double t57307 = c*c;
            double t57308 = 1/pow(rho_a[index],2.0/3.0);
            double t57309 = 1/c0p;
            double t57310 = b1p*t57305;
            double t57311 = b3p*t57306;
            double t57312 = b4p*t57307*t57308;
            double t57313 = b2p*c*t57303;
            double t57314 = t57310+t57311+t57312+t57313;
            double t57315 = 1/t57314;
            double t57316 = t57315*t57309*(1.0/2.0);
            double t57317 = t57316+1.0;
            double t57318 = log(t57317);
            double t57319 = a1p*c*t57303;
            double t57320 = t57319+1.0;
            double t57321 = pow(2.0,1.0/3.0);
            double t57322 = t57321*2.0;
            double t57323 = t57322-2.0;
            double t57324 = two_13*2.0;
            double t57325 = t57324-2.0;
            double t57326 = 1/t57325;
            double t57327 = 1/c0f;
            double t57328 = 1/pow(rho_b[index],1.0/3.0);
            double t57329 = c*t57328;
            double t57330 = sqrt(t57329);
            double t57331 = pow(t57329,3.0/2.0);
            double t57332 = 1/pow(rho_b[index],2.0/3.0);
            double t57333 = b1p*t57330;
            double t57334 = b3p*t57331;
            double t57335 = b4p*t57332*t57307;
            double t57336 = b2p*c*t57328;
            double t57337 = t57333+t57334+t57335+t57336;
            double t57338 = 1/t57337;
            double t57339 = t57309*t57338*(1.0/2.0);
            double t57340 = t57339+1.0;
            double t57341 = log(t57340);
            double t57342 = a1p*c*t57328;
            double t57343 = t57342+1.0;
            double t57344 = c0p*t57341*t57343*2.0;
            double t57345 = rho_a[index]+rho_b[index];
            double t57346 = 1/pow(t57345,1.0/3.0);
            double t57347 = c*t57346;
            double t57348 = sqrt(t57347);
            double t57349 = pow(t57347,3.0/2.0);
            double t57350 = 1/pow(t57345,2.0/3.0);
            double t57351 = b1p*t57348;
            double t57352 = b3p*t57349;
            double t57353 = b4p*t57350*t57307;
            double t57354 = b2p*c*t57346;
            double t57355 = t57351+t57352+t57353+t57354;
            double t57356 = 1/t57355;
            double t57357 = t57309*t57356*(1.0/2.0);
            double t57358 = t57357+1.0;
            double t57359 = log(t57358);
            double t57360 = a1p*c*t57346;
            double t57361 = t57360+1.0;
            double t57362 = c0p*t57361*t57359*2.0;
            double t57363 = rho_a[index]-rho_b[index];
            double t57364 = t57363*t57363;
            double t57365 = 1/t57345;
            double t57366 = t57363*t57365;
            double t57367 = 1/(t57345*t57345*t57345*t57345);
            double t57368 = t57364*t57364;
            double t57369 = t57366+1.0;
            double t57370 = pow(t57369,4.0/3.0);
            double t57371 = -t57366+1.0;
            double t57372 = pow(t57371,4.0/3.0);
            double t57373 = t57370+t57372-2.0;
            double t57376 = 1/pow(rho_a[index],8.0/3.0);
            double t57377 = gamma_aa[index]*t57376*(1.0/2.0);
            double t57378 = 1/pow(rho_b[index],8.0/3.0);
            double t57379 = gamma_bb[index]*t57378*(1.0/2.0);
            double t57374 = t57377+t57379;
            double t57375 = gcab*gcab;
            double t57380 = t57374*t57374;
            double t57381 = t57375*t57375;
            double t57382 = t57380*t57380;
            double t57383 = c0p*t57320*t57318*2.0;
            double t57384 = b1f*t57305;
            double t57385 = b3f*t57306;
            double t57386 = b4f*t57307*t57308;
            double t57387 = b2f*c*t57303;
            double t57388 = t57384+t57385+t57386+t57387;
            double t57389 = 1/t57388;
            double t57390 = t57327*t57389*(1.0/2.0);
            double t57391 = t57390+1.0;
            double t57392 = log(t57391);
            double t57393 = a1f*c*t57303;
            double t57394 = t57393+1.0;
            double t57395 = t57383-c0f*t57392*t57394*2.0;
            double t57396 = t57383-t57323*t57326*t57395;
            double t57397 = gamma_aa[index]*gamma_aa[index];
            double t57398 = gcaa*gcaa;
            double t57399 = t57397*t57397;
            double t57400 = t57398*t57398;
            double t57401 = 1/pow(rho_a[index],3.2E1/3.0);
            double t57402 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t57403 = 1/pow(rho_a[index],1.6E1/3.0);
            double t57404 = b1f*t57330;
            double t57405 = b3f*t57331;
            double t57406 = b4f*t57332*t57307;
            double t57407 = b2f*c*t57328;
            double t57408 = t57404+t57405+t57406+t57407;
            double t57409 = 1/t57408;
            double t57410 = t57327*t57409*(1.0/2.0);
            double t57411 = t57410+1.0;
            double t57412 = log(t57411);
            double t57413 = a1f*c*t57328;
            double t57414 = t57413+1.0;
            double t57415 = t57344-c0f*t57412*t57414*2.0;
            double t57416 = t57344-t57323*t57415*t57326;
            double t57417 = gamma_bb[index]*gamma_bb[index];
            double t57418 = t57417*t57417;
            double t57419 = 1/pow(rho_b[index],3.2E1/3.0);
            double t57420 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t57421 = 1/pow(rho_b[index],1.6E1/3.0);
            double t57422 = gx*gx;
            double t57423 = t57422*t57422;
            functional_[index] = (rho_b[index]*t57416+rho_a[index]*t57396-t57345*(t57362-t57326*t57373*t57367* \
               t57368*(t57362-c0f*log((t57327*(1.0/2.0))/(b1f*t57348+b3f*t57349+b2f*c*t57346+b4f*t57350*t57307)+1.0) \
               *(a1f*c*t57346+1.0)*2.0)+(Aa*t57326*t57373*log((1.0/2.0)/(Aa*(b1a*t57348+b3a*t57349+b2a*c*t57346+b4a* \
               t57350*t57307))+1.0)*(t57367*t57368-1.0)*(a1a*c*t57346+1.0)*2.0)/d2fz0))*(ccab0+(ccab4*t57381*t57382) \
               /(gcab*t57374*4.0+t57381*t57382+t57380*t57375*6.0+gcab*t57380*t57374*t57375*4.0+1.0)+(ccab1*gcab*t57374) \
               /(gcab*t57374+1.0)+(ccab2*t57380*t57375)/(gcab*t57374*2.0+t57380*t57375+1.0)+(ccab3*gcab*t57380*t57374* \
               t57375)/(gcab*t57374*3.0+t57380*t57375*3.0+gcab*t57380*t57374*t57375+1.0))+c0*pow(rho_b[index],4.0/ \
               3.0)*(cx0+(cx2*t57421*t57422*t57417)/(gamma_bb[index]*gx*t57378*2.0+t57421*t57422*t57417+1.0)+(cx1* \
               gamma_bb[index]*gx*t57378)/(gamma_bb[index]*gx*t57378+1.0)+(cx4*t57423*t57418*t57419)/(gamma_bb[index]* \
               gx*t57378*4.0+t57421*t57422*t57417*6.0+t57423*t57418*t57419+gamma_bb[index]*gx*t57420*t57422*t57417* \
               4.0+1.0)+(cx3*gamma_bb[index]*gx*t57420*t57422*t57417)/(gamma_bb[index]*gx*t57378*3.0+t57421*t57422* \
               t57417*3.0+gamma_bb[index]*gx*t57420*t57422*t57417+1.0))+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t57403* \
               t57422*t57397)/(gamma_aa[index]*gx*t57376*2.0+t57403*t57422*t57397+1.0)+(cx1*gamma_aa[index]*gx*t57376) \
               /(gamma_aa[index]*gx*t57376+1.0)+(cx4*t57401*t57423*t57399)/(gamma_aa[index]*gx*t57376*4.0+t57403* \
               t57422*t57397*6.0+t57401*t57423*t57399+gamma_aa[index]*gx*t57402*t57422*t57397*4.0+1.0)+(cx3*gamma_aa[index]* \
               gx*t57402*t57422*t57397)/(gamma_aa[index]*gx*t57376*3.0+t57403*t57422*t57397*3.0+gamma_aa[index]*gx* \
               t57402*t57422*t57397+1.0))-rho_b[index]*t57416*(ccaa0+(ccaa2*t57421*t57417*t57398)/(gamma_bb[index]* \
               gcaa*t57378*2.0+t57421*t57417*t57398+1.0)+(ccaa1*gamma_bb[index]*gcaa*t57378)/(gamma_bb[index]*gcaa* \
               t57378+1.0)+(ccaa4*t57400*t57418*t57419)/(gamma_bb[index]*gcaa*t57378*4.0+t57400*t57418*t57419+t57421* \
               t57417*t57398*6.0+gamma_bb[index]*gcaa*t57420*t57417*t57398*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t57420* \
               t57417*t57398)/(gamma_bb[index]*gcaa*t57378*3.0+t57421*t57417*t57398*3.0+gamma_bb[index]*gcaa*t57420* \
               t57417*t57398+1.0))-rho_a[index]*t57396*(ccaa0+(ccaa2*t57403*t57397*t57398)/(gamma_aa[index]*gcaa* \
               t57376*2.0+t57403*t57397*t57398+1.0)+(ccaa1*gamma_aa[index]*gcaa*t57376)/(gamma_aa[index]*gcaa*t57376+ \
               1.0)+(ccaa4*t57400*t57401*t57399)/(gamma_aa[index]*gcaa*t57376*4.0+t57400*t57401*t57399+t57403*t57397* \
               t57398*6.0+gamma_aa[index]*gcaa*t57402*t57397*t57398*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t57402*t57397* \
               t57398)/(gamma_aa[index]*gcaa*t57376*3.0+t57403*t57397*t57398*3.0+gamma_aa[index]*gcaa*t57402*t57397* \
               t57398+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t61452 = 1/pow(rho_a[index],1.0/3.0);
            double t61453 = c*t61452;
            double t61454 = sqrt(t61453);
            double t61455 = pow(t61453,3.0/2.0);
            double t61456 = c*c;
            double t61457 = 1/pow(rho_a[index],2.0/3.0);
            double t61458 = 1/c0p;
            double t61459 = b1p*t61454;
            double t61460 = b3p*t61455;
            double t61461 = b4p*t61456*t61457;
            double t61462 = b2p*c*t61452;
            double t61463 = t61460+t61461+t61462+t61459;
            double t61464 = 1/t61463;
            double t61465 = t61464*t61458*(1.0/2.0);
            double t61466 = t61465+1.0;
            double t61467 = log(t61466);
            double t61468 = a1p*c*t61452;
            double t61469 = t61468+1.0;
            double t61470 = gamma_aa[index]*gamma_aa[index];
            double t61471 = gcaa*gcaa;
            double t61472 = t61470*t61470;
            double t61473 = t61471*t61471;
            double t61474 = 1/pow(rho_a[index],3.2E1/3.0);
            double t61475 = 1/pow(rho_a[index],8.0/3.0);
            double t61476 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t61477 = 1/pow(rho_a[index],1.6E1/3.0);
            double t61478 = gx*gx;
            double t61479 = t61478*t61478;
            functional_[index] = c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t61470*t61477*t61478)/(gamma_aa[index]* \
               gx*t61475*2.0+t61470*t61477*t61478+1.0)+(cx1*gamma_aa[index]*gx*t61475)/(gamma_aa[index]*gx*t61475+ \
               1.0)+(cx4*t61472*t61474*t61479)/(gamma_aa[index]*gx*t61475*4.0+t61470*t61477*t61478*6.0+t61472*t61474* \
               t61479+gamma_aa[index]*gx*t61470*t61476*t61478*4.0+1.0)+(cx3*gamma_aa[index]*gx*t61470*t61476*t61478) \
               /(gamma_aa[index]*gx*t61475*3.0+t61470*t61477*t61478*3.0+gamma_aa[index]*gx*t61470*t61476*t61478+1.0) \
               )-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t61454+b3f*t61455+b2f*c*t61452+ \
               b4f*t61456*t61457))+1.0)*(a1f*c*t61452+1.0)*2.0-c0p*t61467*t61469*2.0))/(two_13*2.0-2.0)+c0p*t61467* \
               t61469*2.0)*(ccaa0+(ccaa2*t61470*t61471*t61477)/(gamma_aa[index]*gcaa*t61475*2.0+t61470*t61471*t61477+ \
               1.0)+(ccaa1*gamma_aa[index]*gcaa*t61475)/(gamma_aa[index]*gcaa*t61475+1.0)+(ccaa4*t61472*t61473*t61474) \
               /(gamma_aa[index]*gcaa*t61475*4.0+t61470*t61471*t61477*6.0+t61472*t61473*t61474+gamma_aa[index]*gcaa* \
               t61470*t61471*t61476*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t61470*t61471*t61476)/(gamma_aa[index]*gcaa* \
               t61475*3.0+t61470*t61471*t61477*3.0+gamma_aa[index]*gcaa*t61470*t61471*t61476+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t60813 = 1/pow(rho_b[index],1.0/3.0);
            double t60814 = c*t60813;
            double t60815 = sqrt(t60814);
            double t60816 = pow(t60814,3.0/2.0);
            double t60817 = c*c;
            double t60818 = 1/pow(rho_b[index],2.0/3.0);
            double t60819 = 1/c0p;
            double t60820 = b1p*t60815;
            double t60821 = b3p*t60816;
            double t60822 = b4p*t60817*t60818;
            double t60823 = b2p*c*t60813;
            double t60824 = t60820+t60821+t60822+t60823;
            double t60825 = 1/t60824;
            double t60826 = t60825*t60819*(1.0/2.0);
            double t60827 = t60826+1.0;
            double t60828 = log(t60827);
            double t60829 = a1p*c*t60813;
            double t60830 = t60829+1.0;
            double t60831 = gamma_bb[index]*gamma_bb[index];
            double t60832 = gcaa*gcaa;
            double t60833 = t60831*t60831;
            double t60834 = t60832*t60832;
            double t60835 = 1/pow(rho_b[index],3.2E1/3.0);
            double t60836 = 1/pow(rho_b[index],8.0/3.0);
            double t60837 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t60838 = 1/pow(rho_b[index],1.6E1/3.0);
            double t60839 = gx*gx;
            double t60840 = t60839*t60839;
            functional_[index] = c0*pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t60831*t60838*t60839)/(gamma_bb[index]* \
               gx*t60836*2.0+t60831*t60838*t60839+1.0)+(cx1*gamma_bb[index]*gx*t60836)/(gamma_bb[index]*gx*t60836+ \
               1.0)+(cx4*t60840*t60833*t60835)/(gamma_bb[index]*gx*t60836*4.0+t60840*t60833*t60835+t60831*t60838* \
               t60839*6.0+gamma_bb[index]*gx*t60831*t60837*t60839*4.0+1.0)+(cx3*gamma_bb[index]*gx*t60831*t60837* \
               t60839)/(gamma_bb[index]*gx*t60836*3.0+t60831*t60838*t60839*3.0+gamma_bb[index]*gx*t60831*t60837*t60839+ \
               1.0))-rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t60815+b3f*t60816+b2f* \
               c*t60813+b4f*t60817*t60818))+1.0)*(a1f*c*t60813+1.0)*2.0-c0p*t60830*t60828*2.0))/(two_13*2.0-2.0)+ \
               c0p*t60830*t60828*2.0)*(ccaa0+(ccaa2*t60831*t60832*t60838)/(gamma_bb[index]*gcaa*t60836*2.0+t60831* \
               t60832*t60838+1.0)+(ccaa1*gamma_bb[index]*gcaa*t60836)/(gamma_bb[index]*gcaa*t60836+1.0)+(ccaa4*t60833* \
               t60834*t60835)/(gamma_bb[index]*gcaa*t60836*4.0+t60831*t60832*t60838*6.0+t60833*t60834*t60835+gamma_bb[index]* \
               gcaa*t60831*t60832*t60837*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t60831*t60832*t60837)/(gamma_bb[index]* \
               gcaa*t60836*3.0+t60831*t60832*t60838*3.0+gamma_bb[index]*gcaa*t60831*t60832*t60837+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t57425 = 1/pow(rho_a[index],1.0/3.0);
            double t57426 = c*t57425;
            double t57427 = sqrt(t57426);
            double t57428 = pow(t57426,3.0/2.0);
            double t57429 = c*c;
            double t57430 = 1/pow(rho_a[index],2.0/3.0);
            double t57431 = 1/c0p;
            double t57432 = b1p*t57427;
            double t57433 = b3p*t57428;
            double t57434 = b4p*t57430*t57429;
            double t57435 = b2p*c*t57425;
            double t57436 = t57432+t57433+t57434+t57435;
            double t57437 = 1/t57436;
            double t57438 = t57431*t57437*(1.0/2.0);
            double t57439 = t57438+1.0;
            double t57440 = log(t57439);
            double t57441 = a1p*c*t57425;
            double t57442 = t57441+1.0;
            double t57443 = gamma_aa[index]*gamma_aa[index];
            double t57444 = gcaa*gcaa;
            double t57445 = t57443*t57443;
            double t57446 = t57444*t57444;
            double t57447 = 1/pow(rho_a[index],3.2E1/3.0);
            double t57448 = 1/pow(rho_a[index],8.0/3.0);
            double t57449 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t57450 = 1/pow(rho_a[index],1.6E1/3.0);
            double t57451 = pow(2.0,1.0/3.0);
            double t57452 = t57451*2.0;
            double t57453 = t57452-2.0;
            double t57454 = two_13*2.0;
            double t57455 = t57454-2.0;
            double t57456 = 1/t57455;
            double t57457 = 1/c0f;
            double t57458 = b1f*t57427;
            double t57459 = b3f*t57428;
            double t57460 = b4f*t57430*t57429;
            double t57461 = b2f*c*t57425;
            double t57462 = t57460+t57461+t57458+t57459;
            double t57463 = 1/t57462;
            double t57464 = t57463*t57457*(1.0/2.0);
            double t57465 = t57464+1.0;
            double t57466 = log(t57465);
            double t57467 = a1f*c*t57425;
            double t57468 = t57467+1.0;
            double t57469 = c0f*t57466*t57468*2.0;
            double t57470 = c0p*t57440*t57442*2.0;
            double t57471 = 1/pow(rho_b[index],1.0/3.0);
            double t57472 = c*t57471;
            double t57473 = sqrt(t57472);
            double t57474 = pow(t57472,3.0/2.0);
            double t57475 = 1/pow(rho_b[index],2.0/3.0);
            double t57476 = b1p*t57473;
            double t57477 = b3p*t57474;
            double t57478 = b4p*t57429*t57475;
            double t57479 = b2p*c*t57471;
            double t57480 = t57476+t57477+t57478+t57479;
            double t57481 = 1/t57480;
            double t57482 = t57431*t57481*(1.0/2.0);
            double t57483 = t57482+1.0;
            double t57484 = log(t57483);
            double t57485 = a1p*c*t57471;
            double t57486 = t57485+1.0;
            double t57487 = c0p*t57484*t57486*2.0;
            double t57488 = rho_a[index]+rho_b[index];
            double t57489 = 1/pow(t57488,1.0/3.0);
            double t57490 = c*t57489;
            double t57491 = sqrt(t57490);
            double t57492 = pow(t57490,3.0/2.0);
            double t57493 = 1/pow(t57488,2.0/3.0);
            double t57494 = b1p*t57491;
            double t57495 = b3p*t57492;
            double t57496 = b4p*t57429*t57493;
            double t57497 = b2p*c*t57489;
            double t57498 = t57494+t57495+t57496+t57497;
            double t57499 = 1/t57498;
            double t57500 = t57431*t57499*(1.0/2.0);
            double t57501 = t57500+1.0;
            double t57502 = log(t57501);
            double t57503 = a1p*c*t57489;
            double t57504 = t57503+1.0;
            double t57505 = c0p*t57502*t57504*2.0;
            double t57506 = rho_a[index]-rho_b[index];
            double t57507 = t57506*t57506;
            double t57508 = 1/t57488;
            double t57509 = t57506*t57508;
            double t57510 = 1/(t57488*t57488*t57488*t57488);
            double t57511 = t57507*t57507;
            double t57512 = t57509+1.0;
            double t57513 = pow(t57512,4.0/3.0);
            double t57514 = -t57509+1.0;
            double t57515 = pow(t57514,4.0/3.0);
            double t57516 = t57513+t57515-2.0;
            double t57517 = gcab*gcab;
            double t57521 = gamma_aa[index]*t57448*(1.0/2.0);
            double t57522 = 1/pow(rho_b[index],8.0/3.0);
            double t57523 = gamma_bb[index]*t57522*(1.0/2.0);
            double t57518 = t57521+t57523;
            double t57519 = t57518*t57518;
            double t57520 = 1/pow(rho_a[index],1.1E1/3.0);
            double t57524 = t57517*t57517;
            double t57525 = t57519*t57519;
            double t57526 = t57517*t57519*6.0;
            double t57527 = gcab*t57517*t57518*t57519*4.0;
            double t57528 = t57524*t57525;
            double t57529 = gcab*t57518*4.0;
            double t57530 = t57526+t57527+t57528+t57529+1.0;
            double t57531 = gcab*t57518;
            double t57532 = t57531+1.0;
            double t57533 = t57517*t57519;
            double t57534 = gcab*t57518*2.0;
            double t57535 = t57533+t57534+1.0;
            double t57536 = t57517*t57519*3.0;
            double t57537 = gcab*t57517*t57518*t57519;
            double t57538 = gcab*t57518*3.0;
            double t57539 = t57536+t57537+t57538+1.0;
            double t57540 = 1/t57535;
            double t57541 = 1/t57539;
            double t57542 = 1/t57532;
            double t57543 = 1/t57530;
            double t57544 = 1/pow(t57488,4.0/3.0);
            double t57545 = b1f*t57491;
            double t57546 = b3f*t57492;
            double t57547 = b4f*t57429*t57493;
            double t57548 = b2f*c*t57489;
            double t57549 = t57545+t57546+t57547+t57548;
            double t57550 = 1/t57549;
            double t57551 = t57550*t57457*(1.0/2.0);
            double t57552 = t57551+1.0;
            double t57553 = log(t57552);
            double t57554 = a1f*c*t57489;
            double t57555 = t57554+1.0;
            double t57557 = c0f*t57553*t57555*2.0;
            double t57556 = t57505-t57557;
            double t57558 = 1/(t57488*t57488);
            double t57585 = t57506*t57558;
            double t57559 = t57508-t57585;
            double t57560 = 1/pow(t57488,5.0/3.0);
            double t57561 = 1/sqrt(t57490);
            double t57562 = 1/t57501;
            double t57563 = 1/(t57498*t57498);
            double t57564 = b4p*t57560*t57429*(2.0/3.0);
            double t57565 = b2p*c*t57544*(1.0/3.0);
            double t57566 = b1p*c*t57561*t57544*(1.0/6.0);
            double t57567 = b3p*c*t57544*t57491*(1.0/2.0);
            double t57568 = t57564+t57565+t57566+t57567;
            double t57569 = t57504*t57562*t57563*t57568;
            double t57570 = 1/d2fz0;
            double t57571 = 1/Aa;
            double t57572 = b1a*t57491;
            double t57573 = b3a*t57492;
            double t57574 = b4a*t57429*t57493;
            double t57575 = b2a*c*t57489;
            double t57576 = t57572+t57573+t57574+t57575;
            double t57577 = 1/t57576;
            double t57578 = t57571*t57577*(1.0/2.0);
            double t57579 = t57578+1.0;
            double t57580 = log(t57579);
            double t57581 = a1a*c*t57489;
            double t57582 = t57581+1.0;
            double t57583 = 1/(t57488*t57488*t57488*t57488*t57488);
            double t57584 = pow(t57512,1.0/3.0);
            double t57586 = t57584*t57559*(4.0/3.0);
            double t57587 = pow(t57514,1.0/3.0);
            double t57588 = t57586-t57559*t57587*(4.0/3.0);
            double t57589 = t57510*t57511;
            double t57590 = t57589-1.0;
            double t57591 = 1/pow(rho_a[index],4.0/3.0);
            double t57592 = 1/pow(rho_a[index],5.0/3.0);
            double t57593 = 1/sqrt(t57426);
            double t57594 = 1/t57439;
            double t57595 = 1/(t57436*t57436);
            double t57596 = b4p*t57429*t57592*(2.0/3.0);
            double t57597 = b2p*c*t57591*(1.0/3.0);
            double t57598 = b1p*c*t57591*t57593*(1.0/6.0);
            double t57599 = b3p*c*t57427*t57591*(1.0/2.0);
            double t57600 = t57596+t57597+t57598+t57599;
            double t57601 = t57600*t57442*t57594*t57595;
            double t57602 = Aa*t57516*t57570*t57580*t57590*t57456*t57582*2.0;
            double t57603 = t57470-t57469;
            double t57604 = t57603*t57453*t57456;
            double t57605 = gamma_aa[index]*gcaa*t57448*4.0;
            double t57606 = gamma_aa[index]*gcaa*t57443*t57444*t57449*4.0;
            double t57607 = t57450*t57443*t57444*6.0;
            double t57608 = t57445*t57446*t57447;
            double t57609 = t57605+t57606+t57607+t57608+1.0;
            double t57610 = 1/t57609;
            double t57611 = gamma_aa[index]*gcaa*t57448;
            double t57612 = t57611+1.0;
            double t57613 = 1/t57612;
            double t57614 = gamma_aa[index]*gcaa*t57448*3.0;
            double t57615 = gamma_aa[index]*gcaa*t57443*t57444*t57449;
            double t57616 = t57450*t57443*t57444*3.0;
            double t57617 = t57614+t57615+t57616+1.0;
            double t57618 = 1/t57617;
            double t57619 = gamma_aa[index]*gcaa*t57448*2.0;
            double t57620 = t57450*t57443*t57444;
            double t57621 = t57620+t57619+1.0;
            double t57622 = 1/t57621;
            double t57623 = 1/pow(rho_a[index],1.9E1/3.0);
            double t57624 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t57625 = 1/pow(rho_a[index],3.5E1/3.0);
            double t57626 = gx*gx;
            double t57627 = t57626*t57626;
            double t57628 = gamma_aa[index]*gx*t57448*4.0;
            double t57629 = gamma_aa[index]*gx*t57443*t57626*t57449*4.0;
            double t57630 = t57450*t57443*t57626*6.0;
            double t57631 = t57445*t57447*t57627;
            double t57632 = t57630+t57631+t57628+t57629+1.0;
            double t57633 = 1/t57632;
            double t57634 = gamma_aa[index]*gx*t57448;
            double t57635 = t57634+1.0;
            double t57636 = 1/t57635;
            double t57637 = gamma_aa[index]*gx*t57448*3.0;
            double t57638 = gamma_aa[index]*gx*t57443*t57626*t57449;
            double t57639 = t57450*t57443*t57626*3.0;
            double t57640 = t57637+t57638+t57639+1.0;
            double t57641 = 1/t57640;
            double t57642 = gamma_aa[index]*gx*t57448*2.0;
            double t57643 = t57450*t57443*t57626;
            double t57644 = t57642+t57643+1.0;
            double t57645 = 1/t57644;
            double t57646 = 1/t57465;
            double t57647 = 1/(t57462*t57462);
            double t57648 = b4f*t57429*t57592*(2.0/3.0);
            double t57649 = b2f*c*t57591*(1.0/3.0);
            double t57650 = b1f*c*t57591*t57593*(1.0/6.0);
            double t57651 = b3f*c*t57427*t57591*(1.0/2.0);
            double t57652 = t57650+t57651+t57648+t57649;
            double t57653 = a1f*c*c0f*t57591*t57466*(2.0/3.0);
            double t57654 = a1p*c*c0p*t57440*t57591*(2.0/3.0);
            double t57655 = ccaa4*t57610*t57445*t57446*t57447;
            double t57656 = ccaa1*gamma_aa[index]*gcaa*t57613*t57448;
            double t57657 = ccaa3*gamma_aa[index]*gcaa*t57443*t57444*t57618*t57449;
            double t57658 = ccaa2*t57450*t57622*t57443*t57444;
            double t57659 = ccaa0+t57655+t57656+t57657+t57658;
            v_rho_a_[index] = -(ccab0+ccab1*gcab*t57542*t57518+ccab2*t57540*t57517*t57519+ccab4*t57524*t57525* \
               t57543+ccab3*gcab*t57541*t57517*t57518*t57519)*(t57602+t57505+t57604-t57470+rho_a[index]*(-t57601+ \
               t57654+t57453*t57456*(t57601+t57653-t57652*t57646*t57647*t57468-a1p*c*c0p*t57440*t57591*(2.0/3.0)) \
               )-t57488*(-t57569+t57510*t57511*t57516*t57456*(t57569-(t57555*1/(t57549*t57549)*(b2f*c*t57544*(1.0/ \
               3.0)+b4f*t57560*t57429*(2.0/3.0)+b1f*c*t57561*t57544*(1.0/6.0)+b3f*c*t57544*t57491*(1.0/2.0)))/t57552+ \
               a1f*c*c0f*t57544*t57553*(2.0/3.0)-a1p*c*c0p*t57502*t57544*(2.0/3.0))+a1p*c*c0p*t57502*t57544*(2.0/ \
               3.0)+t57510*t57511*t57456*t57556*t57588-t57511*t57516*t57456*t57556*t57583*4.0+t57510*t57506*t57507* \
               t57516*t57456*t57556*4.0+Aa*t57516*t57570*t57580*t57456*t57582*(t57511*t57583*4.0-t57510*t57506*t57507* \
               4.0)*2.0-Aa*t57570*t57580*t57590*t57456*t57582*t57588*2.0-(t57516*t57570*t57590*t57456*t57582*1/(t57576* \
               t57576)*(b2a*c*t57544*(1.0/3.0)+b4a*t57560*t57429*(2.0/3.0)+b1a*c*t57561*t57544*(1.0/6.0)+b3a*c*t57544* \
               t57491*(1.0/2.0)))/t57579+Aa*a1a*c*t57516*t57570*t57544*t57580*t57590*t57456*(2.0/3.0))-t57510*t57511* \
               t57516*t57456*t57556)-t57659*(t57470+t57453*t57456*(t57469-c0p*t57440*t57442*2.0))-(rho_a[index]*(t57470- \
               t57603*t57453*t57456)+rho_b[index]*(t57487-t57453*t57456*(t57487-c0f*log((t57457*(1.0/2.0))/(b1f*t57473+ \
               b3f*t57474+b2f*c*t57471+b4f*t57429*t57475)+1.0)*(a1f*c*t57471+1.0)*2.0))-t57488*(t57602+t57505-t57510* \
               t57511*t57516*t57456*t57556))*(ccab1*gamma_aa[index]*gcab*t57520*t57542*(4.0/3.0)-ccab2*t57517*1/(t57535* \
               t57535)*t57519*(gamma_aa[index]*gcab*t57520*(8.0/3.0)+gamma_aa[index]*t57520*t57517*t57518*(8.0/3.0) \
               )-ccab4*1/(t57530*t57530)*t57524*t57525*(gamma_aa[index]*gcab*t57520*(1.6E1/3.0)+gamma_aa[index]*t57520* \
               t57517*t57518*1.6E1+gamma_aa[index]*gcab*t57520*t57517*t57519*1.6E1+gamma_aa[index]*t57520*t57524* \
               t57518*t57519*(1.6E1/3.0))-ccab1*gamma_aa[index]*t57520*1/(t57532*t57532)*t57517*t57518*(4.0/3.0)+ \
               ccab2*gamma_aa[index]*t57520*t57540*t57517*t57518*(8.0/3.0)-ccab3*gcab*t57517*t57518*t57519*1/(t57539* \
               t57539)*(gamma_aa[index]*gcab*t57520*4.0+gamma_aa[index]*t57520*t57517*t57518*8.0+gamma_aa[index]* \
               gcab*t57520*t57517*t57519*4.0)+ccab3*gamma_aa[index]*gcab*t57520*t57541*t57517*t57519*4.0+ccab4*gamma_aa[index]* \
               t57520*t57524*t57543*t57518*t57519*(1.6E1/3.0))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]* \
               gx*t57636*t57448+cx2*t57450*t57443*t57626*t57645+cx4*t57633*t57445*t57447*t57627+cx3*gamma_aa[index]* \
               gx*t57443*t57641*t57626*t57449)*(4.0/3.0)+rho_a[index]*t57659*(-t57601+t57654+t57453*t57456*(t57601+ \
               t57653-t57654-t57652*t57646*t57647*t57468))-rho_a[index]*(t57604-t57470)*(ccaa1*gamma_aa[index]*gcaa* \
               t57520*t57613*(8.0/3.0)+ccaa2*t57622*t57443*t57623*t57444*(1.6E1/3.0)+ccaa4*t57610*t57445*t57625*t57446* \
               (3.2E1/3.0)-ccaa1*1/(t57612*t57612)*t57443*t57623*t57444*(8.0/3.0)-ccaa2*t57450*1/(t57621*t57621)* \
               t57443*t57444*(gamma_aa[index]*gcaa*t57520*(1.6E1/3.0)+t57443*t57623*t57444*(1.6E1/3.0))-ccaa4*t57445* \
               t57446*t57447*1/(t57609*t57609)*(gamma_aa[index]*gcaa*t57520*(3.2E1/3.0)+t57443*t57623*t57444*3.2E1+ \
               t57445*t57625*t57446*(3.2E1/3.0)+gamma_aa[index]*gcaa*t57443*t57444*t57624*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t57443*t57444*t57624*t57618*8.0-ccaa3*gamma_aa[index]*gcaa*t57443*t57444*1/(t57617*t57617)*t57449* \
               (gamma_aa[index]*gcaa*t57520*8.0+t57443*t57623*t57444*1.6E1+gamma_aa[index]*gcaa*t57443*t57444*t57624* \
               8.0))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t57520*t57636*(8.0/3.0)+cx2*t57443*t57623* \
               t57626*t57645*(1.6E1/3.0)+cx4*t57633*t57445*t57625*t57627*(3.2E1/3.0)-cx1*t57443*t57623*t57626*1/(t57635* \
               t57635)*(8.0/3.0)-cx2*t57450*t57443*t57626*1/(t57644*t57644)*(gamma_aa[index]*gx*t57520*(1.6E1/3.0) \
               +t57443*t57623*t57626*(1.6E1/3.0))-cx4*1/(t57632*t57632)*t57445*t57447*t57627*(gamma_aa[index]*gx* \
               t57520*(3.2E1/3.0)+t57443*t57623*t57626*3.2E1+t57445*t57625*t57627*(3.2E1/3.0)+gamma_aa[index]*gx* \
               t57443*t57624*t57626*3.2E1)+cx3*gamma_aa[index]*gx*t57443*t57641*t57624*t57626*8.0-cx3*gamma_aa[index]* \
               gx*1/(t57640*t57640)*t57443*t57626*t57449*(gamma_aa[index]*gx*t57520*8.0+t57443*t57623*t57626*1.6E1+ \
               gamma_aa[index]*gx*t57443*t57624*t57626*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t61481 = 1/pow(rho_a[index],1.0/3.0);
            double t61482 = c*t61481;
            double t61483 = sqrt(t61482);
            double t61484 = pow(t61482,3.0/2.0);
            double t61485 = c*c;
            double t61486 = 1/pow(rho_a[index],2.0/3.0);
            double t61487 = 1/c0p;
            double t61488 = b1p*t61483;
            double t61489 = b3p*t61484;
            double t61490 = b4p*t61485*t61486;
            double t61491 = b2p*c*t61481;
            double t61492 = t61490+t61491+t61488+t61489;
            double t61493 = 1/t61492;
            double t61494 = t61493*t61487*(1.0/2.0);
            double t61495 = t61494+1.0;
            double t61496 = log(t61495);
            double t61497 = a1p*c*t61481;
            double t61498 = t61497+1.0;
            double t61499 = gamma_aa[index]*gamma_aa[index];
            double t61500 = gcaa*gcaa;
            double t61501 = t61499*t61499;
            double t61502 = t61500*t61500;
            double t61503 = 1/pow(rho_a[index],3.2E1/3.0);
            double t61504 = 1/pow(rho_a[index],8.0/3.0);
            double t61505 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t61506 = 1/pow(rho_a[index],1.6E1/3.0);
            double t61507 = pow(2.0,1.0/3.0);
            double t61508 = t61507*2.0;
            double t61509 = t61508-2.0;
            double t61510 = two_13*2.0;
            double t61511 = t61510-2.0;
            double t61512 = 1/t61511;
            double t61513 = 1/c0f;
            double t61514 = b1f*t61483;
            double t61515 = b3f*t61484;
            double t61516 = b4f*t61485*t61486;
            double t61517 = b2f*c*t61481;
            double t61518 = t61514+t61515+t61516+t61517;
            double t61519 = 1/t61518;
            double t61520 = t61513*t61519*(1.0/2.0);
            double t61521 = t61520+1.0;
            double t61522 = log(t61521);
            double t61523 = a1f*c*t61481;
            double t61524 = t61523+1.0;
            double t61525 = c0f*t61522*t61524*2.0;
            double t61526 = c0p*t61496*t61498*2.0;
            double t61527 = gamma_aa[index]*gcaa*t61504*4.0;
            double t61528 = gamma_aa[index]*gcaa*t61500*t61505*t61499*4.0;
            double t61529 = t61500*t61506*t61499*6.0;
            double t61530 = t61501*t61502*t61503;
            double t61531 = t61530+t61527+t61528+t61529+1.0;
            double t61532 = 1/t61531;
            double t61533 = gamma_aa[index]*gcaa*t61504;
            double t61534 = t61533+1.0;
            double t61535 = 1/t61534;
            double t61536 = gamma_aa[index]*gcaa*t61504*3.0;
            double t61537 = gamma_aa[index]*gcaa*t61500*t61505*t61499;
            double t61538 = t61500*t61506*t61499*3.0;
            double t61539 = t61536+t61537+t61538+1.0;
            double t61540 = 1/t61539;
            double t61541 = gamma_aa[index]*gcaa*t61504*2.0;
            double t61542 = t61500*t61506*t61499;
            double t61543 = t61541+t61542+1.0;
            double t61544 = 1/t61543;
            double t61545 = 1/pow(rho_a[index],1.9E1/3.0);
            double t61546 = 1/pow(rho_a[index],1.1E1/3.0);
            double t61547 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t61548 = 1/pow(rho_a[index],3.5E1/3.0);
            double t61549 = gx*gx;
            double t61550 = t61549*t61549;
            double t61551 = gamma_aa[index]*gx*t61504*4.0;
            double t61552 = gamma_aa[index]*gx*t61505*t61549*t61499*4.0;
            double t61553 = t61506*t61549*t61499*6.0;
            double t61554 = t61501*t61503*t61550;
            double t61555 = t61551+t61552+t61553+t61554+1.0;
            double t61556 = 1/t61555;
            double t61557 = gamma_aa[index]*gx*t61504;
            double t61558 = t61557+1.0;
            double t61559 = 1/t61558;
            double t61560 = gamma_aa[index]*gx*t61504*3.0;
            double t61561 = gamma_aa[index]*gx*t61505*t61549*t61499;
            double t61562 = t61506*t61549*t61499*3.0;
            double t61563 = t61560+t61561+t61562+1.0;
            double t61564 = 1/t61563;
            double t61565 = gamma_aa[index]*gx*t61504*2.0;
            double t61566 = t61506*t61549*t61499;
            double t61567 = t61565+t61566+1.0;
            double t61568 = 1/t61567;
            double t61569 = 1/pow(rho_a[index],4.0/3.0);
            double t61570 = 1/pow(rho_a[index],5.0/3.0);
            double t61571 = 1/sqrt(t61482);
            double t61572 = 1/t61495;
            double t61573 = 1/(t61492*t61492);
            double t61574 = b4p*t61570*t61485*(2.0/3.0);
            double t61575 = b2p*c*t61569*(1.0/3.0);
            double t61576 = b1p*c*t61571*t61569*(1.0/6.0);
            double t61577 = b3p*c*t61483*t61569*(1.0/2.0);
            double t61578 = t61574+t61575+t61576+t61577;
            double t61579 = t61572*t61573*t61578*t61498;
            double t61580 = ccaa4*t61501*t61502*t61503*t61532;
            double t61581 = ccaa1*gamma_aa[index]*gcaa*t61504*t61535;
            double t61582 = ccaa3*gamma_aa[index]*gcaa*t61500*t61540*t61505*t61499;
            double t61583 = ccaa2*t61500*t61506*t61544*t61499;
            double t61584 = ccaa0+t61580+t61581+t61582+t61583;
            v_rho_a_[index] = -t61584*(t61526+t61512*t61509*(t61525-c0p*t61496*t61498*2.0))+rho_a[index]*t61584* \
               (-t61579+t61512*t61509*(t61579-(t61524*1/(t61518*t61518)*(b2f*c*t61569*(1.0/3.0)+b4f*t61570*t61485* \
               (2.0/3.0)+b1f*c*t61571*t61569*(1.0/6.0)+b3f*c*t61483*t61569*(1.0/2.0)))/t61521+a1f*c*c0f*t61522*t61569* \
               (2.0/3.0)-a1p*c*c0p*t61496*t61569*(2.0/3.0))+a1p*c*c0p*t61496*t61569*(2.0/3.0))+c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+cx1*gamma_aa[index]*gx*t61504*t61559+cx2*t61506*t61549*t61568*t61499+cx4*t61501*t61503*t61550* \
               t61556+cx3*gamma_aa[index]*gx*t61505*t61564*t61549*t61499)*(4.0/3.0)+rho_a[index]*(t61526+t61512*t61509* \
               (t61525-t61526))*(ccaa1*gamma_aa[index]*gcaa*t61535*t61546*(8.0/3.0)+ccaa4*t61501*t61502*t61532*t61548* \
               (3.2E1/3.0)+ccaa2*t61500*t61544*t61545*t61499*(1.6E1/3.0)-ccaa1*t61500*1/(t61534*t61534)*t61545*t61499* \
               (8.0/3.0)-ccaa2*t61500*t61506*1/(t61543*t61543)*t61499*(gamma_aa[index]*gcaa*t61546*(1.6E1/3.0)+t61500* \
               t61545*t61499*(1.6E1/3.0))-ccaa4*t61501*t61502*t61503*1/(t61531*t61531)*(gamma_aa[index]*gcaa*t61546* \
               (3.2E1/3.0)+t61501*t61502*t61548*(3.2E1/3.0)+t61500*t61545*t61499*3.2E1+gamma_aa[index]*gcaa*t61500* \
               t61547*t61499*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t61500*t61540*t61547*t61499*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t61500*t61505*1/(t61539*t61539)*t61499*(gamma_aa[index]*gcaa*t61546*8.0+t61500*t61545*t61499* \
               1.6E1+gamma_aa[index]*gcaa*t61500*t61547*t61499*8.0))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t61546*t61559*(8.0/3.0)+cx2*t61545*t61549*t61568*t61499*(1.6E1/3.0)+cx4*t61501*t61550*t61556*t61548* \
               (3.2E1/3.0)-cx1*t61545*t61549*1/(t61558*t61558)*t61499*(8.0/3.0)-cx2*t61506*t61549*1/(t61567*t61567) \
               *t61499*(gamma_aa[index]*gx*t61546*(1.6E1/3.0)+t61545*t61549*t61499*(1.6E1/3.0))-cx4*t61501*t61503* \
               t61550*1/(t61555*t61555)*(gamma_aa[index]*gx*t61546*(3.2E1/3.0)+t61501*t61550*t61548*(3.2E1/3.0)+t61545* \
               t61549*t61499*3.2E1+gamma_aa[index]*gx*t61547*t61549*t61499*3.2E1)+cx3*gamma_aa[index]*gx*t61564*t61547* \
               t61549*t61499*8.0-cx3*gamma_aa[index]*gx*t61505*1/(t61563*t61563)*t61549*t61499*(gamma_aa[index]*gx* \
               t61546*8.0+t61545*t61549*t61499*1.6E1+gamma_aa[index]*gx*t61547*t61549*t61499*8.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t57661 = 1/pow(rho_b[index],1.0/3.0);
            double t57662 = c*t57661;
            double t57663 = sqrt(t57662);
            double t57664 = pow(t57662,3.0/2.0);
            double t57665 = c*c;
            double t57666 = 1/pow(rho_b[index],2.0/3.0);
            double t57667 = 1/c0p;
            double t57668 = b1p*t57663;
            double t57669 = b3p*t57664;
            double t57670 = b4p*t57665*t57666;
            double t57671 = b2p*c*t57661;
            double t57672 = t57670+t57671+t57668+t57669;
            double t57673 = 1/t57672;
            double t57674 = t57673*t57667*(1.0/2.0);
            double t57675 = t57674+1.0;
            double t57676 = log(t57675);
            double t57677 = a1p*c*t57661;
            double t57678 = t57677+1.0;
            double t57679 = gamma_bb[index]*gamma_bb[index];
            double t57680 = gcaa*gcaa;
            double t57681 = t57679*t57679;
            double t57682 = t57680*t57680;
            double t57683 = 1/pow(rho_b[index],3.2E1/3.0);
            double t57684 = 1/pow(rho_b[index],8.0/3.0);
            double t57685 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t57686 = 1/pow(rho_b[index],1.6E1/3.0);
            double t57687 = pow(2.0,1.0/3.0);
            double t57688 = t57687*2.0;
            double t57689 = t57688-2.0;
            double t57690 = two_13*2.0;
            double t57691 = t57690-2.0;
            double t57692 = 1/t57691;
            double t57693 = 1/c0f;
            double t57694 = 1/pow(rho_a[index],1.0/3.0);
            double t57695 = c*t57694;
            double t57696 = sqrt(t57695);
            double t57697 = pow(t57695,3.0/2.0);
            double t57698 = 1/pow(rho_a[index],2.0/3.0);
            double t57699 = b1p*t57696;
            double t57700 = b3p*t57697;
            double t57701 = b4p*t57665*t57698;
            double t57702 = b2p*c*t57694;
            double t57703 = t57700+t57701+t57702+t57699;
            double t57704 = 1/t57703;
            double t57705 = t57704*t57667*(1.0/2.0);
            double t57706 = t57705+1.0;
            double t57707 = log(t57706);
            double t57708 = a1p*c*t57694;
            double t57709 = t57708+1.0;
            double t57710 = c0p*t57707*t57709*2.0;
            double t57711 = b1f*t57663;
            double t57712 = b3f*t57664;
            double t57713 = b4f*t57665*t57666;
            double t57714 = b2f*c*t57661;
            double t57715 = t57711+t57712+t57713+t57714;
            double t57716 = 1/t57715;
            double t57717 = t57716*t57693*(1.0/2.0);
            double t57718 = t57717+1.0;
            double t57719 = log(t57718);
            double t57720 = a1f*c*t57661;
            double t57721 = t57720+1.0;
            double t57722 = c0f*t57721*t57719*2.0;
            double t57723 = c0p*t57676*t57678*2.0;
            double t57724 = rho_a[index]+rho_b[index];
            double t57725 = 1/pow(t57724,1.0/3.0);
            double t57726 = c*t57725;
            double t57727 = sqrt(t57726);
            double t57728 = pow(t57726,3.0/2.0);
            double t57729 = 1/pow(t57724,2.0/3.0);
            double t57730 = b1p*t57727;
            double t57731 = b3p*t57728;
            double t57732 = b4p*t57665*t57729;
            double t57733 = b2p*c*t57725;
            double t57734 = t57730+t57731+t57732+t57733;
            double t57735 = 1/t57734;
            double t57736 = t57735*t57667*(1.0/2.0);
            double t57737 = t57736+1.0;
            double t57738 = log(t57737);
            double t57739 = a1p*c*t57725;
            double t57740 = t57739+1.0;
            double t57741 = c0p*t57740*t57738*2.0;
            double t57742 = rho_a[index]-rho_b[index];
            double t57743 = t57742*t57742;
            double t57744 = 1/t57724;
            double t57745 = t57742*t57744;
            double t57746 = 1/(t57724*t57724*t57724*t57724);
            double t57747 = t57743*t57743;
            double t57748 = t57745+1.0;
            double t57749 = pow(t57748,4.0/3.0);
            double t57750 = -t57745+1.0;
            double t57751 = pow(t57750,4.0/3.0);
            double t57752 = t57751+t57749-2.0;
            double t57753 = gcab*gcab;
            double t57757 = 1/pow(rho_a[index],8.0/3.0);
            double t57758 = gamma_aa[index]*t57757*(1.0/2.0);
            double t57759 = gamma_bb[index]*t57684*(1.0/2.0);
            double t57754 = t57758+t57759;
            double t57755 = t57754*t57754;
            double t57756 = 1/pow(rho_b[index],1.1E1/3.0);
            double t57760 = t57753*t57753;
            double t57761 = t57755*t57755;
            double t57762 = t57753*t57755*6.0;
            double t57763 = gcab*t57753*t57754*t57755*4.0;
            double t57764 = t57760*t57761;
            double t57765 = gcab*t57754*4.0;
            double t57766 = t57762+t57763+t57764+t57765+1.0;
            double t57767 = gcab*t57754;
            double t57768 = t57767+1.0;
            double t57769 = t57753*t57755;
            double t57770 = gcab*t57754*2.0;
            double t57771 = t57770+t57769+1.0;
            double t57772 = t57753*t57755*3.0;
            double t57773 = gcab*t57753*t57754*t57755;
            double t57774 = gcab*t57754*3.0;
            double t57775 = t57772+t57773+t57774+1.0;
            double t57776 = 1/t57771;
            double t57777 = 1/t57775;
            double t57778 = 1/t57768;
            double t57779 = 1/t57766;
            double t57780 = 1/pow(t57724,4.0/3.0);
            double t57781 = b1f*t57727;
            double t57782 = b3f*t57728;
            double t57783 = b4f*t57665*t57729;
            double t57784 = b2f*c*t57725;
            double t57785 = t57781+t57782+t57783+t57784;
            double t57786 = 1/t57785;
            double t57787 = t57693*t57786*(1.0/2.0);
            double t57788 = t57787+1.0;
            double t57789 = log(t57788);
            double t57790 = a1f*c*t57725;
            double t57791 = t57790+1.0;
            double t57793 = c0f*t57791*t57789*2.0;
            double t57792 = t57741-t57793;
            double t57794 = 1/(t57724*t57724);
            double t57795 = t57742*t57794;
            double t57796 = t57744+t57795;
            double t57797 = 1/pow(t57724,5.0/3.0);
            double t57798 = 1/sqrt(t57726);
            double t57799 = 1/t57737;
            double t57800 = 1/(t57734*t57734);
            double t57801 = b4p*t57665*t57797*(2.0/3.0);
            double t57802 = b2p*c*t57780*(1.0/3.0);
            double t57803 = b1p*c*t57780*t57798*(1.0/6.0);
            double t57804 = b3p*c*t57780*t57727*(1.0/2.0);
            double t57805 = t57801+t57802+t57803+t57804;
            double t57806 = 1/d2fz0;
            double t57807 = 1/Aa;
            double t57808 = b1a*t57727;
            double t57809 = b3a*t57728;
            double t57810 = b4a*t57665*t57729;
            double t57811 = b2a*c*t57725;
            double t57812 = t57810+t57811+t57808+t57809;
            double t57813 = 1/t57812;
            double t57814 = t57813*t57807*(1.0/2.0);
            double t57815 = t57814+1.0;
            double t57816 = log(t57815);
            double t57817 = a1a*c*t57725;
            double t57818 = t57817+1.0;
            double t57819 = 1/(t57724*t57724*t57724*t57724*t57724);
            double t57820 = pow(t57748,1.0/3.0);
            double t57821 = t57820*t57796*(4.0/3.0);
            double t57822 = pow(t57750,1.0/3.0);
            double t57823 = t57821-t57822*t57796*(4.0/3.0);
            double t57824 = t57746*t57747;
            double t57825 = t57824-1.0;
            double t57826 = t57800*t57740*t57805*t57799;
            double t57827 = 1/pow(rho_b[index],4.0/3.0);
            double t57828 = 1/pow(rho_b[index],5.0/3.0);
            double t57829 = 1/sqrt(t57662);
            double t57830 = 1/t57675;
            double t57831 = 1/(t57672*t57672);
            double t57832 = b4p*t57665*t57828*(2.0/3.0);
            double t57833 = b2p*c*t57827*(1.0/3.0);
            double t57834 = b1p*c*t57827*t57829*(1.0/6.0);
            double t57835 = b3p*c*t57663*t57827*(1.0/2.0);
            double t57836 = t57832+t57833+t57834+t57835;
            double t57837 = t57830*t57831*t57836*t57678;
            double t57838 = t57722-t57723;
            double t57839 = t57692*t57838*t57689;
            double t57840 = Aa*t57752*t57806*t57816*t57825*t57692*t57818*2.0;
            double t57841 = t57723+t57839;
            double t57842 = gamma_bb[index]*gcaa*t57684*4.0;
            double t57843 = gamma_bb[index]*gcaa*t57680*t57685*t57679*4.0;
            double t57844 = t57680*t57686*t57679*6.0;
            double t57845 = t57681*t57682*t57683;
            double t57846 = t57842+t57843+t57844+t57845+1.0;
            double t57847 = 1/t57846;
            double t57848 = gamma_bb[index]*gcaa*t57684;
            double t57849 = t57848+1.0;
            double t57850 = 1/t57849;
            double t57851 = gamma_bb[index]*gcaa*t57684*3.0;
            double t57852 = gamma_bb[index]*gcaa*t57680*t57685*t57679;
            double t57853 = t57680*t57686*t57679*3.0;
            double t57854 = t57851+t57852+t57853+1.0;
            double t57855 = 1/t57854;
            double t57856 = gamma_bb[index]*gcaa*t57684*2.0;
            double t57857 = t57680*t57686*t57679;
            double t57858 = t57856+t57857+1.0;
            double t57859 = 1/t57858;
            double t57860 = 1/pow(rho_b[index],1.9E1/3.0);
            double t57861 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t57862 = 1/pow(rho_b[index],3.5E1/3.0);
            double t57863 = gx*gx;
            double t57864 = t57863*t57863;
            double t57865 = gamma_bb[index]*gx*t57684*4.0;
            double t57866 = gamma_bb[index]*gx*t57863*t57685*t57679*4.0;
            double t57867 = t57863*t57686*t57679*6.0;
            double t57868 = t57681*t57683*t57864;
            double t57869 = t57865+t57866+t57867+t57868+1.0;
            double t57870 = 1/t57869;
            double t57871 = gamma_bb[index]*gx*t57684;
            double t57872 = t57871+1.0;
            double t57873 = 1/t57872;
            double t57874 = gamma_bb[index]*gx*t57684*3.0;
            double t57875 = gamma_bb[index]*gx*t57863*t57685*t57679;
            double t57876 = t57863*t57686*t57679*3.0;
            double t57877 = t57874+t57875+t57876+1.0;
            double t57878 = 1/t57877;
            double t57879 = gamma_bb[index]*gx*t57684*2.0;
            double t57880 = t57863*t57686*t57679;
            double t57881 = t57880+t57879+1.0;
            double t57882 = 1/t57881;
            double t57883 = 1/t57718;
            double t57884 = 1/(t57715*t57715);
            double t57885 = b4f*t57665*t57828*(2.0/3.0);
            double t57886 = b2f*c*t57827*(1.0/3.0);
            double t57887 = b1f*c*t57827*t57829*(1.0/6.0);
            double t57888 = b3f*c*t57663*t57827*(1.0/2.0);
            double t57889 = t57885+t57886+t57887+t57888;
            double t57890 = a1f*c*c0f*t57719*t57827*(2.0/3.0);
            double t57891 = a1p*c*c0p*t57827*t57676*(2.0/3.0);
            double t57892 = ccaa4*t57681*t57682*t57683*t57847;
            double t57893 = ccaa1*gamma_bb[index]*gcaa*t57850*t57684;
            double t57894 = ccaa3*gamma_bb[index]*gcaa*t57680*t57855*t57685*t57679;
            double t57895 = ccaa2*t57680*t57686*t57679*t57859;
            double t57896 = ccaa0+t57892+t57893+t57894+t57895;
            v_rho_b_[index] = -(ccab0+ccab1*gcab*t57754*t57778+ccab2*t57753*t57755*t57776+ccab4*t57760*t57761* \
               t57779+ccab3*gcab*t57753*t57754*t57755*t57777)*(-t57723+t57741+t57840-t57839+t57724*(t57826-t57752* \
               t57692*t57746*t57747*(t57826-(t57791*1/(t57785*t57785)*(b2f*c*t57780*(1.0/3.0)+b4f*t57665*t57797*(2.0/ \
               3.0)+b1f*c*t57780*t57798*(1.0/6.0)+b3f*c*t57780*t57727*(1.0/2.0)))/t57788+a1f*c*c0f*t57780*t57789* \
               (2.0/3.0)-a1p*c*c0p*t57780*t57738*(2.0/3.0))-a1p*c*c0p*t57780*t57738*(2.0/3.0)+t57823*t57692*t57746* \
               t57747*t57792+t57752*t57692*t57747*t57792*t57819*4.0+t57742*t57743*t57752*t57692*t57746*t57792*4.0- \
               Aa*t57752*t57806*t57816*t57692*t57818*(t57747*t57819*4.0+t57742*t57743*t57746*4.0)*2.0-Aa*t57823*t57806* \
               t57816*t57825*t57692*t57818*2.0+(1/(t57812*t57812)*t57752*t57806*t57825*t57692*t57818*(b2a*c*t57780* \
               (1.0/3.0)+b4a*t57665*t57797*(2.0/3.0)+b1a*c*t57780*t57798*(1.0/6.0)+b3a*c*t57780*t57727*(1.0/2.0)) \
               )/t57815-Aa*a1a*c*t57752*t57806*t57780*t57816*t57825*t57692*(2.0/3.0))+rho_b[index]*(-t57837+t57891+ \
               t57692*t57689*(t57890+t57837-t57721*t57883*t57884*t57889-a1p*c*c0p*t57827*t57676*(2.0/3.0)))-t57752* \
               t57692*t57746*t57747*t57792)-t57896*(t57723+t57692*t57689*(t57722-c0p*t57676*t57678*2.0))-(rho_b[index]* \
               t57841+rho_a[index]*(t57710-t57692*t57689*(t57710-c0f*log((t57693*(1.0/2.0))/(b1f*t57696+b3f*t57697+ \
               b2f*c*t57694+b4f*t57665*t57698)+1.0)*(a1f*c*t57694+1.0)*2.0))-t57724*(t57741+t57840-t57752*t57692* \
               t57746*t57747*t57792))*(ccab1*gamma_bb[index]*gcab*t57756*t57778*(4.0/3.0)-ccab2*t57753*1/(t57771* \
               t57771)*t57755*(gamma_bb[index]*gcab*t57756*(8.0/3.0)+gamma_bb[index]*t57753*t57754*t57756*(8.0/3.0) \
               )-ccab4*t57760*t57761*1/(t57766*t57766)*(gamma_bb[index]*gcab*t57756*(1.6E1/3.0)+gamma_bb[index]*t57753* \
               t57754*t57756*1.6E1+gamma_bb[index]*gcab*t57753*t57755*t57756*1.6E1+gamma_bb[index]*t57760*t57754* \
               t57755*t57756*(1.6E1/3.0))-ccab1*gamma_bb[index]*t57753*t57754*t57756*1/(t57768*t57768)*(4.0/3.0)+ \
               ccab2*gamma_bb[index]*t57753*t57754*t57756*t57776*(8.0/3.0)-ccab3*gcab*t57753*t57754*t57755*1/(t57775* \
               t57775)*(gamma_bb[index]*gcab*t57756*4.0+gamma_bb[index]*t57753*t57754*t57756*8.0+gamma_bb[index]* \
               gcab*t57753*t57755*t57756*4.0)+ccab3*gamma_bb[index]*gcab*t57753*t57755*t57756*t57777*4.0+ccab4*gamma_bb[index]* \
               t57760*t57754*t57755*t57756*t57779*(1.6E1/3.0))+rho_b[index]*t57841*(ccaa1*gamma_bb[index]*gcaa*t57850* \
               t57756*(8.0/3.0)+ccaa4*t57681*t57682*t57862*t57847*(3.2E1/3.0)+ccaa2*t57680*t57860*t57679*t57859*(1.6E1/ \
               3.0)-ccaa1*t57680*t57860*1/(t57849*t57849)*t57679*(8.0/3.0)-ccaa2*t57680*t57686*1/(t57858*t57858)* \
               t57679*(gamma_bb[index]*gcaa*t57756*(1.6E1/3.0)+t57680*t57860*t57679*(1.6E1/3.0))-ccaa4*t57681*t57682* \
               t57683*1/(t57846*t57846)*(gamma_bb[index]*gcaa*t57756*(3.2E1/3.0)+t57681*t57682*t57862*(3.2E1/3.0) \
               +t57680*t57860*t57679*3.2E1+gamma_bb[index]*gcaa*t57680*t57861*t57679*3.2E1)+ccaa3*gamma_bb[index]* \
               gcaa*t57680*t57861*t57855*t57679*8.0-ccaa3*gamma_bb[index]*gcaa*t57680*1/(t57854*t57854)*t57685*t57679* \
               (gamma_bb[index]*gcaa*t57756*8.0+t57680*t57860*t57679*1.6E1+gamma_bb[index]*gcaa*t57680*t57861*t57679* \
               8.0))+c0*pow(rho_b[index],1.0/3.0)*(cx0+cx1*gamma_bb[index]*gx*t57684*t57873+cx2*t57863*t57882*t57686* \
               t57679+cx4*t57681*t57870*t57683*t57864+cx3*gamma_bb[index]*gx*t57863*t57685*t57679*t57878)*(4.0/3.0) \
               +rho_b[index]*t57896*(-t57837+t57891+t57692*t57689*(t57890+t57837-t57891-t57721*t57883*t57884*t57889) \
               )-c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t57756*t57873*(8.0/3.0)+cx2*t57860*t57863*t57882* \
               t57679*(1.6E1/3.0)+cx4*t57681*t57870*t57862*t57864*(3.2E1/3.0)-cx1*t57860*t57863*1/(t57872*t57872) \
               *t57679*(8.0/3.0)-cx2*t57863*1/(t57881*t57881)*t57686*t57679*(gamma_bb[index]*gx*t57756*(1.6E1/3.0) \
               +t57860*t57863*t57679*(1.6E1/3.0))-cx4*t57681*t57683*t57864*1/(t57869*t57869)*(gamma_bb[index]*gx* \
               t57756*(3.2E1/3.0)+t57681*t57862*t57864*(3.2E1/3.0)+t57860*t57863*t57679*3.2E1+gamma_bb[index]*gx* \
               t57861*t57863*t57679*3.2E1)+cx3*gamma_bb[index]*gx*t57861*t57863*t57679*t57878*8.0-cx3*gamma_bb[index]* \
               gx*t57863*t57685*t57679*1/(t57877*t57877)*(gamma_bb[index]*gx*t57756*8.0+t57860*t57863*t57679*1.6E1+ \
               gamma_bb[index]*gx*t57861*t57863*t57679*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t60843 = 1/pow(rho_b[index],1.0/3.0);
            double t60844 = c*t60843;
            double t60845 = sqrt(t60844);
            double t60846 = pow(t60844,3.0/2.0);
            double t60847 = c*c;
            double t60848 = 1/pow(rho_b[index],2.0/3.0);
            double t60849 = 1/c0p;
            double t60850 = b1p*t60845;
            double t60851 = b3p*t60846;
            double t60852 = b4p*t60847*t60848;
            double t60853 = b2p*c*t60843;
            double t60854 = t60850+t60851+t60852+t60853;
            double t60855 = 1/t60854;
            double t60856 = t60855*t60849*(1.0/2.0);
            double t60857 = t60856+1.0;
            double t60858 = log(t60857);
            double t60859 = a1p*c*t60843;
            double t60860 = t60859+1.0;
            double t60861 = gamma_bb[index]*gamma_bb[index];
            double t60862 = gcaa*gcaa;
            double t60863 = t60861*t60861;
            double t60864 = t60862*t60862;
            double t60865 = 1/pow(rho_b[index],3.2E1/3.0);
            double t60866 = 1/pow(rho_b[index],8.0/3.0);
            double t60867 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t60868 = 1/pow(rho_b[index],1.6E1/3.0);
            double t60869 = pow(2.0,1.0/3.0);
            double t60870 = t60869*2.0;
            double t60871 = t60870-2.0;
            double t60872 = two_13*2.0;
            double t60873 = t60872-2.0;
            double t60874 = 1/t60873;
            double t60875 = 1/c0f;
            double t60876 = b1f*t60845;
            double t60877 = b3f*t60846;
            double t60878 = b4f*t60847*t60848;
            double t60879 = b2f*c*t60843;
            double t60880 = t60876+t60877+t60878+t60879;
            double t60881 = 1/t60880;
            double t60882 = t60881*t60875*(1.0/2.0);
            double t60883 = t60882+1.0;
            double t60884 = log(t60883);
            double t60885 = a1f*c*t60843;
            double t60886 = t60885+1.0;
            double t60887 = c0f*t60884*t60886*2.0;
            double t60888 = c0p*t60860*t60858*2.0;
            double t60889 = gamma_bb[index]*gcaa*t60866*4.0;
            double t60890 = gamma_bb[index]*gcaa*t60861*t60862*t60867*4.0;
            double t60891 = t60861*t60862*t60868*6.0;
            double t60892 = t60863*t60864*t60865;
            double t60893 = t60890+t60891+t60892+t60889+1.0;
            double t60894 = 1/t60893;
            double t60895 = gamma_bb[index]*gcaa*t60866;
            double t60896 = t60895+1.0;
            double t60897 = 1/t60896;
            double t60898 = gamma_bb[index]*gcaa*t60866*3.0;
            double t60899 = gamma_bb[index]*gcaa*t60861*t60862*t60867;
            double t60900 = t60861*t60862*t60868*3.0;
            double t60901 = t60900+t60898+t60899+1.0;
            double t60902 = 1/t60901;
            double t60903 = gamma_bb[index]*gcaa*t60866*2.0;
            double t60904 = t60861*t60862*t60868;
            double t60905 = t60903+t60904+1.0;
            double t60906 = 1/t60905;
            double t60907 = 1/pow(rho_b[index],1.9E1/3.0);
            double t60908 = 1/pow(rho_b[index],1.1E1/3.0);
            double t60909 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t60910 = 1/pow(rho_b[index],3.5E1/3.0);
            double t60911 = gx*gx;
            double t60912 = t60911*t60911;
            double t60913 = gamma_bb[index]*gx*t60866*4.0;
            double t60914 = gamma_bb[index]*gx*t60911*t60861*t60867*4.0;
            double t60915 = t60911*t60861*t60868*6.0;
            double t60916 = t60912*t60863*t60865;
            double t60917 = t60913+t60914+t60915+t60916+1.0;
            double t60918 = 1/t60917;
            double t60919 = gamma_bb[index]*gx*t60866;
            double t60920 = t60919+1.0;
            double t60921 = 1/t60920;
            double t60922 = gamma_bb[index]*gx*t60866*3.0;
            double t60923 = gamma_bb[index]*gx*t60911*t60861*t60867;
            double t60924 = t60911*t60861*t60868*3.0;
            double t60925 = t60922+t60923+t60924+1.0;
            double t60926 = 1/t60925;
            double t60927 = gamma_bb[index]*gx*t60866*2.0;
            double t60928 = t60911*t60861*t60868;
            double t60929 = t60927+t60928+1.0;
            double t60930 = 1/t60929;
            double t60931 = 1/pow(rho_b[index],4.0/3.0);
            double t60932 = 1/pow(rho_b[index],5.0/3.0);
            double t60933 = 1/sqrt(t60844);
            double t60934 = 1/t60857;
            double t60935 = 1/(t60854*t60854);
            double t60936 = b4p*t60932*t60847*(2.0/3.0);
            double t60937 = b2p*c*t60931*(1.0/3.0);
            double t60938 = b1p*c*t60931*t60933*(1.0/6.0);
            double t60939 = b3p*c*t60931*t60845*(1.0/2.0);
            double t60940 = t60936+t60937+t60938+t60939;
            double t60941 = t60940*t60860*t60934*t60935;
            double t60942 = ccaa4*t60863*t60864*t60865*t60894;
            double t60943 = ccaa1*gamma_bb[index]*gcaa*t60866*t60897;
            double t60944 = ccaa3*gamma_bb[index]*gcaa*t60902*t60861*t60862*t60867;
            double t60945 = ccaa2*t60861*t60906*t60862*t60868;
            double t60946 = ccaa0+t60942+t60943+t60944+t60945;
            v_rho_b_[index] = -t60946*(t60888+t60871*t60874*(t60887-c0p*t60860*t60858*2.0))+rho_b[index]*t60946* \
               (-t60941+t60871*t60874*(t60941-(1/(t60880*t60880)*t60886*(b2f*c*t60931*(1.0/3.0)+b4f*t60932*t60847* \
               (2.0/3.0)+b1f*c*t60931*t60933*(1.0/6.0)+b3f*c*t60931*t60845*(1.0/2.0)))/t60883+a1f*c*c0f*t60931*t60884* \
               (2.0/3.0)-a1p*c*c0p*t60931*t60858*(2.0/3.0))+a1p*c*c0p*t60931*t60858*(2.0/3.0))+c0*pow(rho_b[index],1.0/ \
               3.0)*(cx0+cx1*gamma_bb[index]*gx*t60921*t60866+cx2*t60911*t60930*t60861*t60868+cx4*t60912*t60863*t60918* \
               t60865+cx3*gamma_bb[index]*gx*t60911*t60861*t60926*t60867)*(4.0/3.0)+rho_b[index]*(t60888+t60871*t60874* \
               (t60887-t60888))*(ccaa1*gamma_bb[index]*gcaa*t60908*t60897*(8.0/3.0)+ccaa2*t60861*t60906*t60862*t60907* \
               (1.6E1/3.0)+ccaa4*t60910*t60863*t60864*t60894*(3.2E1/3.0)-ccaa1*t60861*t60862*t60907*1/(t60896*t60896) \
               *(8.0/3.0)-ccaa2*1/(t60905*t60905)*t60861*t60862*t60868*(gamma_bb[index]*gcaa*t60908*(1.6E1/3.0)+t60861* \
               t60862*t60907*(1.6E1/3.0))-ccaa4*t60863*t60864*t60865*1/(t60893*t60893)*(gamma_bb[index]*gcaa*t60908* \
               (3.2E1/3.0)+t60910*t60863*t60864*(3.2E1/3.0)+t60861*t60862*t60907*3.2E1+gamma_bb[index]*gcaa*t60861* \
               t60862*t60909*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t60902*t60861*t60862*t60909*8.0-ccaa3*gamma_bb[index]* \
               gcaa*1/(t60901*t60901)*t60861*t60862*t60867*(gamma_bb[index]*gcaa*t60908*8.0+t60861*t60862*t60907* \
               1.6E1+gamma_bb[index]*gcaa*t60861*t60862*t60909*8.0))-c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]* \
               gx*t60921*t60908*(8.0/3.0)+cx2*t60911*t60930*t60861*t60907*(1.6E1/3.0)+cx4*t60910*t60912*t60863*t60918* \
               (3.2E1/3.0)-cx1*t60911*1/(t60920*t60920)*t60861*t60907*(8.0/3.0)-cx2*t60911*t60861*1/(t60929*t60929) \
               *t60868*(gamma_bb[index]*gx*t60908*(1.6E1/3.0)+t60911*t60861*t60907*(1.6E1/3.0))-cx4*t60912*t60863* \
               1/(t60917*t60917)*t60865*(gamma_bb[index]*gx*t60908*(3.2E1/3.0)+t60910*t60912*t60863*(3.2E1/3.0)+t60911* \
               t60861*t60907*3.2E1+gamma_bb[index]*gx*t60911*t60861*t60909*3.2E1)+cx3*gamma_bb[index]*gx*t60911*t60861* \
               t60926*t60909*8.0-cx3*gamma_bb[index]*gx*t60911*t60861*1/(t60925*t60925)*t60867*(gamma_bb[index]*gx* \
               t60908*8.0+t60911*t60861*t60907*1.6E1+gamma_bb[index]*gx*t60911*t60861*t60909*8.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t57898 = 1/pow(rho_a[index],1.0/3.0);
                double t57899 = c*t57898;
                double t57900 = sqrt(t57899);
                double t57901 = pow(t57899,3.0/2.0);
                double t57902 = c*c;
                double t57903 = 1/pow(rho_a[index],2.0/3.0);
                double t57904 = 1/c0p;
                double t57905 = b1p*t57900;
                double t57906 = b3p*t57901;
                double t57907 = b4p*t57902*t57903;
                double t57908 = b2p*c*t57898;
                double t57909 = t57905+t57906+t57907+t57908;
                double t57910 = 1/t57909;
                double t57911 = t57910*t57904*(1.0/2.0);
                double t57912 = t57911+1.0;
                double t57913 = log(t57912);
                double t57914 = a1p*c*t57898;
                double t57915 = t57914+1.0;
                double t57916 = pow(2.0,1.0/3.0);
                double t57917 = t57916*2.0;
                double t57918 = t57917-2.0;
                double t57919 = two_13*2.0;
                double t57920 = t57919-2.0;
                double t57921 = 1/t57920;
                double t57922 = 1/c0f;
                double t57923 = 1/pow(rho_b[index],1.0/3.0);
                double t57924 = c*t57923;
                double t57925 = sqrt(t57924);
                double t57926 = pow(t57924,3.0/2.0);
                double t57927 = 1/pow(rho_b[index],2.0/3.0);
                double t57928 = b1p*t57925;
                double t57929 = b3p*t57926;
                double t57930 = b4p*t57902*t57927;
                double t57931 = b2p*c*t57923;
                double t57932 = t57930+t57931+t57928+t57929;
                double t57933 = 1/t57932;
                double t57934 = t57904*t57933*(1.0/2.0);
                double t57935 = t57934+1.0;
                double t57936 = log(t57935);
                double t57937 = a1p*c*t57923;
                double t57938 = t57937+1.0;
                double t57939 = c0p*t57936*t57938*2.0;
                double t57940 = rho_a[index]+rho_b[index];
                double t57941 = 1/pow(t57940,1.0/3.0);
                double t57942 = c*t57941;
                double t57943 = sqrt(t57942);
                double t57944 = pow(t57942,3.0/2.0);
                double t57945 = 1/pow(t57940,2.0/3.0);
                double t57946 = b1p*t57943;
                double t57947 = b3p*t57944;
                double t57948 = b4p*t57902*t57945;
                double t57949 = b2p*c*t57941;
                double t57950 = t57946+t57947+t57948+t57949;
                double t57951 = 1/t57950;
                double t57952 = t57904*t57951*(1.0/2.0);
                double t57953 = t57952+1.0;
                double t57954 = log(t57953);
                double t57955 = a1p*c*t57941;
                double t57956 = t57955+1.0;
                double t57957 = c0p*t57954*t57956*2.0;
                double t57958 = rho_a[index]-rho_b[index];
                double t57959 = t57958*t57958;
                double t57960 = 1/t57940;
                double t57961 = t57960*t57958;
                double t57962 = 1/(t57940*t57940*t57940*t57940);
                double t57963 = t57959*t57959;
                double t57964 = t57961+1.0;
                double t57965 = pow(t57964,4.0/3.0);
                double t57966 = -t57961+1.0;
                double t57967 = pow(t57966,4.0/3.0);
                double t57968 = t57965+t57967-2.0;
                double t57969 = 1/pow(rho_a[index],8.0/3.0);
                double t57970 = gamma_aa[index]*t57969*(1.0/2.0);
                double t57971 = 1/pow(rho_b[index],8.0/3.0);
                double t57972 = gamma_bb[index]*t57971*(1.0/2.0);
                double t57973 = t57970+t57972;
                double t57974 = gcab*t57973;
                double t57975 = t57974+1.0;
                double t57976 = gcab*gcab;
                double t57977 = t57973*t57973;
                double t57978 = t57976*t57976;
                double t57979 = t57977*t57977;
                double t57980 = t57976*t57977;
                double t57981 = gcab*t57973*2.0;
                double t57982 = t57980+t57981+1.0;
                double t57983 = t57976*t57977*3.0;
                double t57984 = gcab*t57973*t57976*t57977;
                double t57985 = gcab*t57973*3.0;
                double t57986 = t57983+t57984+t57985+1.0;
                double t57987 = t57976*t57977*6.0;
                double t57988 = gcab*t57973*t57976*t57977*4.0;
                double t57989 = t57978*t57979;
                double t57990 = gcab*t57973*4.0;
                double t57991 = t57990+t57987+t57988+t57989+1.0;
                double t57992 = c0p*t57913*t57915*2.0;
                double t57993 = gamma_aa[index]*gamma_aa[index];
                double t57994 = gx*gx;
                double t57995 = t57994*t57994;
                double t57996 = 1/pow(rho_a[index],3.2E1/3.0);
                double t57997 = 1/pow(rho_a[index],1.6E1/3.0);
                double t57998 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t57999 = gamma_aa[index]*gx*t57969;
                double t58000 = t57999+1.0;
                double t58001 = gamma_aa[index]*gx*t57969*3.0;
                double t58002 = gamma_aa[index]*gx*t57993*t57994*t57998;
                double t58003 = t57993*t57994*t57997*3.0;
                double t58004 = t58001+t58002+t58003+1.0;
                double t58005 = t57993*t57993;
                double t58006 = gamma_aa[index]*gx*t57969*4.0;
                double t58007 = gamma_aa[index]*gx*t57993*t57994*t57998*4.0;
                double t58008 = t57993*t57994*t57997*6.0;
                double t58009 = t57995*t57996*t58005;
                double t58010 = t58006+t58007+t58008+t58009+1.0;
                double t58011 = gamma_aa[index]*gx*t57969*2.0;
                double t58012 = t57993*t57994*t57997;
                double t58013 = t58011+t58012+1.0;
                double t58014 = b1f*t57900;
                double t58015 = b3f*t57901;
                double t58016 = b4f*t57902*t57903;
                double t58017 = b2f*c*t57898;
                double t58018 = t58014+t58015+t58016+t58017;
                double t58019 = 1/t58018;
                double t58020 = t57922*t58019*(1.0/2.0);
                double t58021 = t58020+1.0;
                double t58022 = log(t58021);
                double t58023 = a1f*c*t57898;
                double t58024 = t58023+1.0;
                double t58025 = t57992-c0f*t58022*t58024*2.0;
                double t58026 = t57992-t57921*t57918*t58025;
                double t58027 = gcaa*gcaa;
                double t58028 = t58027*t58027;
                double t58029 = gamma_aa[index]*gcaa*t57969;
                double t58030 = t58029+1.0;
                double t58031 = gamma_aa[index]*gcaa*t57969*3.0;
                double t58032 = gamma_aa[index]*gcaa*t57993*t57998*t58027;
                double t58033 = t57993*t57997*t58027*3.0;
                double t58034 = t58031+t58032+t58033+1.0;
                double t58035 = gamma_aa[index]*gcaa*t57969*4.0;
                double t58036 = gamma_aa[index]*gcaa*t57993*t57998*t58027*4.0;
                double t58037 = t57993*t57997*t58027*6.0;
                double t58038 = t57996*t58005*t58028;
                double t58039 = t58035+t58036+t58037+t58038+1.0;
                double t58040 = gamma_aa[index]*gcaa*t57969*2.0;
                double t58041 = t57993*t57997*t58027;
                double t58042 = t58040+t58041+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t58026+rho_b[index]*(t57939-t57921*t57918*(t57939-c0f*log((t57922* \
                   (1.0/2.0))/(b1f*t57925+b3f*t57926+b2f*c*t57923+b4f*t57902*t57927)+1.0)*(a1f*c*t57923+1.0)*2.0))-t57940* \
                   (t57957-t57921*t57962*t57963*t57968*(t57957-c0f*log((t57922*(1.0/2.0))/(b1f*t57943+b3f*t57944+b2f* \
                   c*t57941+b4f*t57902*t57945)+1.0)*(a1f*c*t57941+1.0)*2.0)+(Aa*t57921*t57968*log((1.0/2.0)/(Aa*(b1a* \
                   t57943+b3a*t57944+b2a*c*t57941+b4a*t57902*t57945))+1.0)*(t57962*t57963-1.0)*(a1a*c*t57941+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t57969*(1.0/2.0))/t57975-ccab4*1/(t57991*t57991)*t57978*t57979*(gcab*t57969* \
                   2.0+t57973*t57976*t57969*6.0+gcab*t57976*t57977*t57969*6.0+t57973*t57977*t57969*t57978*2.0)-ccab2* \
                   1/(t57982*t57982)*t57976*t57977*(gcab*t57969+t57973*t57976*t57969)+(ccab2*t57973*t57976*t57969)/t57982- \
                   ccab1*t57973*1/(t57975*t57975)*t57976*t57969*(1.0/2.0)+(ccab3*gcab*t57976*t57977*t57969*(3.0/2.0)) \
                   /t57986+(ccab4*t57973*t57977*t57969*t57978*2.0)/t57991-ccab3*gcab*t57973*t57976*t57977*1/(t57986*t57986) \
                   *(gcab*t57969*(3.0/2.0)+t57973*t57976*t57969*3.0+gcab*t57976*t57977*t57969*(3.0/2.0)))-rho_a[index]* \
                   t58026*((ccaa1*gcaa*t57969)/t58030-ccaa1*gamma_aa[index]*t57997*1/(t58030*t58030)*t58027+(ccaa2*gamma_aa[index]* \
                   t57997*t58027*2.0)/t58042-ccaa2*t57993*t57997*1/(t58042*t58042)*t58027*(gcaa*t57969*2.0+gamma_aa[index]* \
                   t57997*t58027*2.0)+(ccaa4*gamma_aa[index]*t57993*t57996*t58028*4.0)/t58039+(ccaa3*gcaa*t57993*t57998* \
                   t58027*3.0)/t58034-ccaa4*t57996*t58005*t58028*1/(t58039*t58039)*(gcaa*t57969*4.0+gamma_aa[index]*t57997* \
                   t58027*1.2E1+gamma_aa[index]*t57993*t57996*t58028*4.0+gcaa*t57993*t57998*t58027*1.2E1)-ccaa3*gamma_aa[index]* \
                   gcaa*t57993*t57998*1/(t58034*t58034)*t58027*(gcaa*t57969*3.0+gamma_aa[index]*t57997*t58027*6.0+gcaa* \
                   t57993*t57998*t58027*3.0))+c0*pow(rho_a[index],4.0/3.0)*((cx1*gx*t57969)/t58000-cx1*gamma_aa[index]* \
                   t57994*t57997*1/(t58000*t58000)+(cx2*gamma_aa[index]*t57994*t57997*2.0)/t58013-cx2*t57993*t57994*t57997* \
                   1/(t58013*t58013)*(gx*t57969*2.0+gamma_aa[index]*t57994*t57997*2.0)+(cx4*gamma_aa[index]*t57993*t57995* \
                   t57996*4.0)/t58010+(cx3*gx*t57993*t57994*t57998*3.0)/t58004-cx4*t57995*t57996*1/(t58010*t58010)*t58005* \
                   (gx*t57969*4.0+gamma_aa[index]*t57994*t57997*1.2E1+gamma_aa[index]*t57993*t57995*t57996*4.0+gx*t57993* \
                   t57994*t57998*1.2E1)-cx3*gamma_aa[index]*gx*t57993*t57994*t57998*1/(t58004*t58004)*(gx*t57969*3.0+ \
                   gamma_aa[index]*t57994*t57997*6.0+gx*t57993*t57994*t57998*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t61587 = 1/pow(rho_a[index],8.0/3.0);
                double t61588 = gamma_aa[index]*gamma_aa[index];
                double t61589 = gx*gx;
                double t61590 = t61589*t61589;
                double t61591 = 1/pow(rho_a[index],3.2E1/3.0);
                double t61592 = 1/pow(rho_a[index],1.6E1/3.0);
                double t61593 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t61594 = gamma_aa[index]*gx*t61587;
                double t61595 = t61594+1.0;
                double t61596 = gamma_aa[index]*gx*t61587*3.0;
                double t61597 = gamma_aa[index]*gx*t61593*t61588*t61589;
                double t61598 = t61592*t61588*t61589*3.0;
                double t61599 = t61596+t61597+t61598+1.0;
                double t61600 = t61588*t61588;
                double t61601 = gamma_aa[index]*gx*t61587*4.0;
                double t61602 = gamma_aa[index]*gx*t61593*t61588*t61589*4.0;
                double t61603 = t61592*t61588*t61589*6.0;
                double t61604 = t61600*t61590*t61591;
                double t61605 = t61601+t61602+t61603+t61604+1.0;
                double t61606 = gamma_aa[index]*gx*t61587*2.0;
                double t61607 = t61592*t61588*t61589;
                double t61608 = t61606+t61607+1.0;
                double t61609 = 1/pow(rho_a[index],1.0/3.0);
                double t61610 = c*t61609;
                double t61611 = sqrt(t61610);
                double t61612 = pow(t61610,3.0/2.0);
                double t61613 = c*c;
                double t61614 = 1/pow(rho_a[index],2.0/3.0);
                double t61615 = 1/c0p;
                double t61616 = b1p*t61611;
                double t61617 = b3p*t61612;
                double t61618 = b4p*t61613*t61614;
                double t61619 = b2p*c*t61609;
                double t61620 = t61616+t61617+t61618+t61619;
                double t61621 = 1/t61620;
                double t61622 = t61621*t61615*(1.0/2.0);
                double t61623 = t61622+1.0;
                double t61624 = log(t61623);
                double t61625 = a1p*c*t61609;
                double t61626 = t61625+1.0;
                double t61627 = gcaa*gcaa;
                double t61628 = t61627*t61627;
                double t61629 = gamma_aa[index]*gcaa*t61587;
                double t61630 = t61629+1.0;
                double t61631 = gamma_aa[index]*gcaa*t61587*3.0;
                double t61632 = gamma_aa[index]*gcaa*t61627*t61593*t61588;
                double t61633 = t61627*t61592*t61588*3.0;
                double t61634 = t61631+t61632+t61633+1.0;
                double t61635 = gamma_aa[index]*gcaa*t61587*4.0;
                double t61636 = gamma_aa[index]*gcaa*t61627*t61593*t61588*4.0;
                double t61637 = t61627*t61592*t61588*6.0;
                double t61638 = t61600*t61591*t61628;
                double t61639 = t61635+t61636+t61637+t61638+1.0;
                double t61640 = gamma_aa[index]*gcaa*t61587*2.0;
                double t61641 = t61627*t61592*t61588;
                double t61642 = t61640+t61641+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t61611+ \
                   b3f*t61612+b2f*c*t61609+b4f*t61613*t61614))+1.0)*(a1f*c*t61609+1.0)*2.0-c0p*t61624*t61626*2.0))/(two_13* \
                   2.0-2.0)+c0p*t61624*t61626*2.0)*((ccaa1*gcaa*t61587)/t61630-ccaa1*gamma_aa[index]*1/(t61630*t61630) \
                   *t61627*t61592+(ccaa2*gamma_aa[index]*t61627*t61592*2.0)/t61642-ccaa2*1/(t61642*t61642)*t61627*t61592* \
                   t61588*(gcaa*t61587*2.0+gamma_aa[index]*t61627*t61592*2.0)+(ccaa4*gamma_aa[index]*t61591*t61628*t61588* \
                   4.0)/t61639+(ccaa3*gcaa*t61627*t61593*t61588*3.0)/t61634-ccaa4*t61600*t61591*t61628*1/(t61639*t61639) \
                   *(gcaa*t61587*4.0+gamma_aa[index]*t61627*t61592*1.2E1+gamma_aa[index]*t61591*t61628*t61588*4.0+gcaa* \
                   t61627*t61593*t61588*1.2E1)-ccaa3*gamma_aa[index]*gcaa*1/(t61634*t61634)*t61627*t61593*t61588*(gcaa* \
                   t61587*3.0+gamma_aa[index]*t61627*t61592*6.0+gcaa*t61627*t61593*t61588*3.0))+c0*pow(rho_a[index],4.0/ \
                   3.0)*((cx1*gx*t61587)/t61595-cx1*gamma_aa[index]*t61592*1/(t61595*t61595)*t61589+(cx2*gamma_aa[index]* \
                   t61592*t61589*2.0)/t61608-cx2*1/(t61608*t61608)*t61592*t61588*t61589*(gx*t61587*2.0+gamma_aa[index]* \
                   t61592*t61589*2.0)+(cx4*gamma_aa[index]*t61590*t61591*t61588*4.0)/t61605+(cx3*gx*t61593*t61588*t61589* \
                   3.0)/t61599-cx4*t61600*1/(t61605*t61605)*t61590*t61591*(gx*t61587*4.0+gamma_aa[index]*t61592*t61589* \
                   1.2E1+gamma_aa[index]*t61590*t61591*t61588*4.0+gx*t61593*t61588*t61589*1.2E1)-cx3*gamma_aa[index]* \
                   gx*t61593*t61588*t61589*1/(t61599*t61599)*(gx*t61587*3.0+gamma_aa[index]*t61592*t61589*6.0+gx*t61593* \
                   t61588*t61589*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t58045 = 1/pow(rho_a[index],1.0/3.0);
                double t58046 = c*t58045;
                double t58047 = sqrt(t58046);
                double t58048 = pow(t58046,3.0/2.0);
                double t58049 = c*c;
                double t58050 = 1/pow(rho_a[index],2.0/3.0);
                double t58051 = 1/c0p;
                double t58052 = b1p*t58047;
                double t58053 = b3p*t58048;
                double t58054 = b4p*t58050*t58049;
                double t58055 = b2p*c*t58045;
                double t58056 = t58052+t58053+t58054+t58055;
                double t58057 = 1/t58056;
                double t58058 = t58051*t58057*(1.0/2.0);
                double t58059 = t58058+1.0;
                double t58060 = log(t58059);
                double t58061 = a1p*c*t58045;
                double t58062 = t58061+1.0;
                double t58063 = pow(2.0,1.0/3.0);
                double t58064 = t58063*2.0;
                double t58065 = t58064-2.0;
                double t58066 = two_13*2.0;
                double t58067 = t58066-2.0;
                double t58068 = 1/t58067;
                double t58069 = 1/c0f;
                double t58070 = 1/pow(rho_b[index],1.0/3.0);
                double t58071 = c*t58070;
                double t58072 = sqrt(t58071);
                double t58073 = pow(t58071,3.0/2.0);
                double t58074 = 1/pow(rho_b[index],2.0/3.0);
                double t58075 = b1p*t58072;
                double t58076 = b3p*t58073;
                double t58077 = b4p*t58074*t58049;
                double t58078 = b2p*c*t58070;
                double t58079 = t58075+t58076+t58077+t58078;
                double t58080 = 1/t58079;
                double t58081 = t58051*t58080*(1.0/2.0);
                double t58082 = t58081+1.0;
                double t58083 = log(t58082);
                double t58084 = a1p*c*t58070;
                double t58085 = t58084+1.0;
                double t58086 = c0p*t58083*t58085*2.0;
                double t58087 = rho_a[index]+rho_b[index];
                double t58088 = 1/pow(t58087,1.0/3.0);
                double t58089 = c*t58088;
                double t58090 = sqrt(t58089);
                double t58091 = pow(t58089,3.0/2.0);
                double t58092 = 1/pow(t58087,2.0/3.0);
                double t58093 = b1p*t58090;
                double t58094 = b3p*t58091;
                double t58095 = b4p*t58092*t58049;
                double t58096 = b2p*c*t58088;
                double t58097 = t58093+t58094+t58095+t58096;
                double t58098 = 1/t58097;
                double t58099 = t58051*t58098*(1.0/2.0);
                double t58100 = t58099+1.0;
                double t58101 = log(t58100);
                double t58102 = a1p*c*t58088;
                double t58103 = t58102+1.0;
                double t58104 = c0p*t58101*t58103*2.0;
                double t58105 = rho_a[index]-rho_b[index];
                double t58106 = t58105*t58105;
                double t58107 = 1/t58087;
                double t58108 = t58105*t58107;
                double t58109 = 1/(t58087*t58087*t58087*t58087);
                double t58110 = t58106*t58106;
                double t58111 = t58108+1.0;
                double t58112 = pow(t58111,4.0/3.0);
                double t58113 = -t58108+1.0;
                double t58114 = pow(t58113,4.0/3.0);
                double t58115 = t58112+t58114-2.0;
                double t58116 = 1/pow(rho_b[index],8.0/3.0);
                double t58117 = 1/pow(rho_a[index],8.0/3.0);
                double t58118 = gamma_aa[index]*t58117*(1.0/2.0);
                double t58119 = gamma_bb[index]*t58116*(1.0/2.0);
                double t58120 = t58118+t58119;
                double t58121 = gcab*t58120;
                double t58122 = t58121+1.0;
                double t58123 = gcab*gcab;
                double t58124 = t58120*t58120;
                double t58125 = t58123*t58123;
                double t58126 = t58124*t58124;
                double t58127 = t58123*t58124;
                double t58128 = gcab*t58120*2.0;
                double t58129 = t58127+t58128+1.0;
                double t58130 = t58123*t58124*3.0;
                double t58131 = gcab*t58120*t58123*t58124;
                double t58132 = gcab*t58120*3.0;
                double t58133 = t58130+t58131+t58132+1.0;
                double t58134 = t58123*t58124*6.0;
                double t58135 = gcab*t58120*t58123*t58124*4.0;
                double t58136 = t58125*t58126;
                double t58137 = gcab*t58120*4.0;
                double t58138 = t58134+t58135+t58136+t58137+1.0;
                double t58139 = c0p*t58060*t58062*2.0;
                double t58140 = gamma_bb[index]*gamma_bb[index];
                double t58141 = gx*gx;
                double t58142 = t58141*t58141;
                double t58143 = 1/pow(rho_b[index],3.2E1/3.0);
                double t58144 = 1/pow(rho_b[index],1.6E1/3.0);
                double t58145 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t58146 = gamma_bb[index]*gx*t58116;
                double t58147 = t58146+1.0;
                double t58148 = gamma_bb[index]*gx*t58116*3.0;
                double t58149 = gamma_bb[index]*gx*t58140*t58141*t58145;
                double t58150 = t58140*t58141*t58144*3.0;
                double t58151 = t58150+t58148+t58149+1.0;
                double t58152 = t58140*t58140;
                double t58153 = gamma_bb[index]*gx*t58116*4.0;
                double t58154 = gamma_bb[index]*gx*t58140*t58141*t58145*4.0;
                double t58155 = t58140*t58141*t58144*6.0;
                double t58156 = t58142*t58143*t58152;
                double t58157 = t58153+t58154+t58155+t58156+1.0;
                double t58158 = gamma_bb[index]*gx*t58116*2.0;
                double t58159 = t58140*t58141*t58144;
                double t58160 = t58158+t58159+1.0;
                double t58161 = b1f*t58072;
                double t58162 = b3f*t58073;
                double t58163 = b4f*t58074*t58049;
                double t58164 = b2f*c*t58070;
                double t58165 = t58161+t58162+t58163+t58164;
                double t58166 = 1/t58165;
                double t58167 = t58166*t58069*(1.0/2.0);
                double t58168 = t58167+1.0;
                double t58169 = log(t58168);
                double t58170 = a1f*c*t58070;
                double t58171 = t58170+1.0;
                double t58172 = t58086-c0f*t58171*t58169*2.0;
                double t58173 = t58086-t58172*t58065*t58068;
                double t58174 = gcaa*gcaa;
                double t58175 = t58174*t58174;
                double t58176 = gamma_bb[index]*gcaa*t58116;
                double t58177 = t58176+1.0;
                double t58178 = gamma_bb[index]*gcaa*t58116*3.0;
                double t58179 = gamma_bb[index]*gcaa*t58140*t58145*t58174;
                double t58180 = t58140*t58144*t58174*3.0;
                double t58181 = t58180+t58178+t58179+1.0;
                double t58182 = gamma_bb[index]*gcaa*t58116*4.0;
                double t58183 = gamma_bb[index]*gcaa*t58140*t58145*t58174*4.0;
                double t58184 = t58140*t58144*t58174*6.0;
                double t58185 = t58143*t58152*t58175;
                double t58186 = t58182+t58183+t58184+t58185+1.0;
                double t58187 = gamma_bb[index]*gcaa*t58116*2.0;
                double t58188 = t58140*t58144*t58174;
                double t58189 = t58187+t58188+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t58173+rho_a[index]*(t58139-t58065*t58068*(t58139-c0f*log((t58069* \
                   (1.0/2.0))/(b1f*t58047+b3f*t58048+b2f*c*t58045+b4f*t58050*t58049)+1.0)*(a1f*c*t58045+1.0)*2.0))-t58087* \
                   (t58104-t58110*t58115*t58109*t58068*(t58104-c0f*log((t58069*(1.0/2.0))/(b1f*t58090+b3f*t58091+b2f* \
                   c*t58088+b4f*t58092*t58049)+1.0)*(a1f*c*t58088+1.0)*2.0)+(Aa*t58115*t58068*log((1.0/2.0)/(Aa*(b1a* \
                   t58090+b3a*t58091+b2a*c*t58088+b4a*t58092*t58049))+1.0)*(t58110*t58109-1.0)*(a1a*c*t58088+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t58116*(1.0/2.0))/t58122-ccab4*t58125*t58126*1/(t58138*t58138)*(gcab*t58116* \
                   2.0+t58120*t58123*t58116*6.0+gcab*t58123*t58124*t58116*6.0+t58120*t58124*t58116*t58125*2.0)-ccab2* \
                   t58123*t58124*1/(t58129*t58129)*(gcab*t58116+t58120*t58123*t58116)-ccab1*t58120*1/(t58122*t58122)* \
                   t58123*t58116*(1.0/2.0)+(ccab2*t58120*t58123*t58116)/t58129+(ccab3*gcab*t58123*t58124*t58116*(3.0/ \
                   2.0))/t58133+(ccab4*t58120*t58124*t58116*t58125*2.0)/t58138-ccab3*gcab*t58120*t58123*t58124*1/(t58133* \
                   t58133)*(gcab*t58116*(3.0/2.0)+t58120*t58123*t58116*3.0+gcab*t58123*t58124*t58116*(3.0/2.0)))-rho_b[index]* \
                   t58173*((ccaa1*gcaa*t58116)/t58177-ccaa1*gamma_bb[index]*t58144*t58174*1/(t58177*t58177)+(ccaa2*gamma_bb[index]* \
                   t58144*t58174*2.0)/t58189-ccaa2*t58140*t58144*t58174*1/(t58189*t58189)*(gcaa*t58116*2.0+gamma_bb[index]* \
                   t58144*t58174*2.0)+(ccaa4*gamma_bb[index]*t58140*t58143*t58175*4.0)/t58186+(ccaa3*gcaa*t58140*t58145* \
                   t58174*3.0)/t58181-ccaa4*t58143*t58152*t58175*1/(t58186*t58186)*(gcaa*t58116*4.0+gamma_bb[index]*t58144* \
                   t58174*1.2E1+gamma_bb[index]*t58140*t58143*t58175*4.0+gcaa*t58140*t58145*t58174*1.2E1)-ccaa3*gamma_bb[index]* \
                   gcaa*t58140*t58145*1/(t58181*t58181)*t58174*(gcaa*t58116*3.0+gamma_bb[index]*t58144*t58174*6.0+gcaa* \
                   t58140*t58145*t58174*3.0))+c0*pow(rho_b[index],4.0/3.0)*((cx1*gx*t58116)/t58147-cx1*gamma_bb[index]* \
                   t58141*t58144*1/(t58147*t58147)+(cx2*gamma_bb[index]*t58141*t58144*2.0)/t58160-cx2*t58140*t58141*1/ \
                   (t58160*t58160)*t58144*(gx*t58116*2.0+gamma_bb[index]*t58141*t58144*2.0)+(cx4*gamma_bb[index]*t58140* \
                   t58142*t58143*4.0)/t58157+(cx3*gx*t58140*t58141*t58145*3.0)/t58151-cx4*t58142*t58143*t58152*1/(t58157* \
                   t58157)*(gx*t58116*4.0+gamma_bb[index]*t58141*t58144*1.2E1+gamma_bb[index]*t58140*t58142*t58143*4.0+ \
                   gx*t58140*t58141*t58145*1.2E1)-cx3*gamma_bb[index]*gx*t58140*t58141*1/(t58151*t58151)*t58145*(gx*t58116* \
                   3.0+gamma_bb[index]*t58141*t58144*6.0+gx*t58140*t58141*t58145*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t60950 = 1/pow(rho_b[index],8.0/3.0);
                double t60951 = gamma_bb[index]*gamma_bb[index];
                double t60952 = gx*gx;
                double t60953 = t60952*t60952;
                double t60954 = 1/pow(rho_b[index],3.2E1/3.0);
                double t60955 = 1/pow(rho_b[index],1.6E1/3.0);
                double t60956 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t60957 = gamma_bb[index]*gx*t60950;
                double t60958 = t60957+1.0;
                double t60959 = gamma_bb[index]*gx*t60950*3.0;
                double t60960 = gamma_bb[index]*gx*t60951*t60952*t60956;
                double t60961 = t60951*t60952*t60955*3.0;
                double t60962 = t60960+t60961+t60959+1.0;
                double t60963 = t60951*t60951;
                double t60964 = gamma_bb[index]*gx*t60950*4.0;
                double t60965 = gamma_bb[index]*gx*t60951*t60952*t60956*4.0;
                double t60966 = t60951*t60952*t60955*6.0;
                double t60967 = t60953*t60954*t60963;
                double t60968 = t60964+t60965+t60966+t60967+1.0;
                double t60969 = gamma_bb[index]*gx*t60950*2.0;
                double t60970 = t60951*t60952*t60955;
                double t60971 = t60970+t60969+1.0;
                double t60972 = 1/pow(rho_b[index],1.0/3.0);
                double t60973 = c*t60972;
                double t60974 = sqrt(t60973);
                double t60975 = pow(t60973,3.0/2.0);
                double t60976 = c*c;
                double t60977 = 1/pow(rho_b[index],2.0/3.0);
                double t60978 = 1/c0p;
                double t60979 = b1p*t60974;
                double t60980 = b3p*t60975;
                double t60981 = b4p*t60976*t60977;
                double t60982 = b2p*c*t60972;
                double t60983 = t60980+t60981+t60982+t60979;
                double t60984 = 1/t60983;
                double t60985 = t60984*t60978*(1.0/2.0);
                double t60986 = t60985+1.0;
                double t60987 = log(t60986);
                double t60988 = a1p*c*t60972;
                double t60989 = t60988+1.0;
                double t60990 = gcaa*gcaa;
                double t60991 = t60990*t60990;
                double t60992 = gamma_bb[index]*gcaa*t60950;
                double t60993 = t60992+1.0;
                double t60994 = gamma_bb[index]*gcaa*t60950*3.0;
                double t60995 = gamma_bb[index]*gcaa*t60951*t60990*t60956;
                double t60996 = t60951*t60990*t60955*3.0;
                double t60997 = t60994+t60995+t60996+1.0;
                double t60998 = gamma_bb[index]*gcaa*t60950*4.0;
                double t60999 = gamma_bb[index]*gcaa*t60951*t60990*t60956*4.0;
                double t61000 = t60951*t60990*t60955*6.0;
                double t61001 = t60954*t60963*t60991;
                double t61002 = t60998+t60999+t61000+t61001+1.0;
                double t61003 = gamma_bb[index]*gcaa*t60950*2.0;
                double t61004 = t60951*t60990*t60955;
                double t61005 = t61003+t61004+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t60974+ \
                   b3f*t60975+b2f*c*t60972+b4f*t60976*t60977))+1.0)*(a1f*c*t60972+1.0)*2.0-c0p*t60987*t60989*2.0))/(two_13* \
                   2.0-2.0)+c0p*t60987*t60989*2.0)*((ccaa1*gcaa*t60950)/t60993-ccaa1*gamma_bb[index]*t60990*t60955*1/ \
                   (t60993*t60993)+(ccaa2*gamma_bb[index]*t60990*t60955*2.0)/t61005-ccaa2*t60951*t60990*t60955*1/(t61005* \
                   t61005)*(gcaa*t60950*2.0+gamma_bb[index]*t60990*t60955*2.0)+(ccaa4*gamma_bb[index]*t60951*t60954*t60991* \
                   4.0)/t61002+(ccaa3*gcaa*t60951*t60990*t60956*3.0)/t60997-ccaa4*t60954*t60963*t60991*1/(t61002*t61002) \
                   *(gcaa*t60950*4.0+gamma_bb[index]*t60990*t60955*1.2E1+gamma_bb[index]*t60951*t60954*t60991*4.0+gcaa* \
                   t60951*t60990*t60956*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t60951*t60990*t60956*1/(t60997*t60997)*(gcaa* \
                   t60950*3.0+gamma_bb[index]*t60990*t60955*6.0+gcaa*t60951*t60990*t60956*3.0))+c0*pow(rho_b[index],4.0/ \
                   3.0)*((cx1*gx*t60950)/t60958-cx1*gamma_bb[index]*t60952*t60955*1/(t60958*t60958)+(cx2*gamma_bb[index]* \
                   t60952*t60955*2.0)/t60971-cx2*t60951*t60952*1/(t60971*t60971)*t60955*(gx*t60950*2.0+gamma_bb[index]* \
                   t60952*t60955*2.0)+(cx4*gamma_bb[index]*t60951*t60953*t60954*4.0)/t60968+(cx3*gx*t60951*t60952*t60956* \
                   3.0)/t60962-cx4*t60953*t60954*t60963*1/(t60968*t60968)*(gx*t60950*4.0+gamma_bb[index]*t60952*t60955* \
                   1.2E1+gamma_bb[index]*t60951*t60953*t60954*4.0+gx*t60951*t60952*t60956*1.2E1)-cx3*gamma_bb[index]* \
                   gx*t60951*t60952*1/(t60962*t60962)*t60956*(gx*t60950*3.0+gamma_bb[index]*t60952*t60955*6.0+gx*t60951* \
                   t60952*t60956*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t58193 = rho_a[index]+rho_b[index];
            double t58194 = 1/pow(t58193,1.0/3.0);
            double t58195 = c*t58194;
            double t58196 = sqrt(t58195);
            double t58197 = b1p*t58196;
            double t58198 = pow(t58195,3.0/2.0);
            double t58199 = b3p*t58198;
            double t58200 = c*c;
            double t58201 = 1/pow(t58193,2.0/3.0);
            double t58202 = b4p*t58200*t58201;
            double t58203 = b2p*c*t58194;
            double t58204 = t58202+t58203+t58197+t58199;
            double t58205 = 1/pow(t58193,4.0/3.0);
            double t58206 = 1/c0p;
            double t58207 = 1/t58204;
            double t58208 = t58206*t58207*(1.0/2.0);
            double t58209 = t58208+1.0;
            double t58210 = a1p*c*t58194;
            double t58211 = t58210+1.0;
            double t58212 = rho_a[index]-rho_b[index];
            double t58213 = t58212*t58212;
            double t58214 = 1/t58193;
            double t58215 = t58212*t58214;
            double t58216 = two_13*2.0;
            double t58217 = t58216-2.0;
            double t58218 = 1/t58217;
            double t58219 = 1/c0f;
            double t58220 = b1f*t58196;
            double t58221 = b3f*t58198;
            double t58222 = b4f*t58200*t58201;
            double t58223 = b2f*c*t58194;
            double t58224 = t58220+t58221+t58222+t58223;
            double t58225 = 1/t58224;
            double t58226 = t58225*t58219*(1.0/2.0);
            double t58227 = t58226+1.0;
            double t58228 = log(t58227);
            double t58229 = a1f*c*t58194;
            double t58230 = t58229+1.0;
            double t58231 = log(t58209);
            double t58241 = c0f*t58230*t58228*2.0;
            double t58242 = c0p*t58211*t58231*2.0;
            double t58232 = t58241-t58242;
            double t58233 = t58215+1.0;
            double t58234 = pow(t58233,4.0/3.0);
            double t58235 = -t58215+1.0;
            double t58236 = pow(t58235,4.0/3.0);
            double t58237 = t58234+t58236-2.0;
            double t58238 = 1/(t58193*t58193);
            double t58269 = t58212*t58238;
            double t58239 = t58214-t58269;
            double t58240 = 1/(t58193*t58193*t58193*t58193);
            double t58243 = t58213*t58213;
            double t58244 = 1/pow(t58193,5.0/3.0);
            double t58245 = 1/sqrt(t58195);
            double t58246 = 1/t58209;
            double t58247 = 1/(t58204*t58204);
            double t58248 = b4p*t58200*t58244*(2.0/3.0);
            double t58249 = b2p*c*t58205*(1.0/3.0);
            double t58250 = b1p*c*t58205*t58245*(1.0/6.0);
            double t58251 = b3p*c*t58205*t58196*(1.0/2.0);
            double t58252 = t58250+t58251+t58248+t58249;
            double t58253 = t58211*t58252*t58246*t58247;
            double t58254 = 1/(t58193*t58193*t58193*t58193*t58193);
            double t58255 = 1/d2fz0;
            double t58256 = 1/Aa;
            double t58257 = b1a*t58196;
            double t58258 = b3a*t58198;
            double t58259 = b4a*t58200*t58201;
            double t58260 = b2a*c*t58194;
            double t58261 = t58260+t58257+t58258+t58259;
            double t58262 = 1/t58261;
            double t58263 = t58262*t58256*(1.0/2.0);
            double t58264 = t58263+1.0;
            double t58265 = log(t58264);
            double t58266 = a1a*c*t58194;
            double t58267 = t58266+1.0;
            double t58268 = pow(t58233,1.0/3.0);
            double t58270 = t58239*t58268*(4.0/3.0);
            double t58271 = pow(t58235,1.0/3.0);
            double t58346 = t58271*t58239*(4.0/3.0);
            double t58272 = t58270-t58346;
            double t58273 = t58240*t58243;
            double t58274 = t58273-1.0;
            double t58275 = 1/pow(rho_a[index],1.0/3.0);
            double t58276 = c*t58275;
            double t58277 = sqrt(t58276);
            double t58278 = b1f*t58277;
            double t58279 = pow(t58276,3.0/2.0);
            double t58280 = b3f*t58279;
            double t58281 = 1/pow(rho_a[index],2.0/3.0);
            double t58282 = b4f*t58200*t58281;
            double t58283 = b2f*c*t58275;
            double t58284 = t58280+t58282+t58283+t58278;
            double t58285 = 1/pow(rho_a[index],4.0/3.0);
            double t58286 = b1p*t58277;
            double t58287 = b3p*t58279;
            double t58288 = b4p*t58200*t58281;
            double t58289 = b2p*c*t58275;
            double t58290 = t58286+t58287+t58288+t58289;
            double t58291 = 1/pow(rho_a[index],5.0/3.0);
            double t58292 = 1/sqrt(t58276);
            double t58293 = 1/t58284;
            double t58294 = t58219*t58293*(1.0/2.0);
            double t58295 = t58294+1.0;
            double t58296 = 1/t58290;
            double t58297 = t58206*t58296*(1.0/2.0);
            double t58298 = t58297+1.0;
            double t58299 = a1p*c*t58275;
            double t58300 = t58299+1.0;
            double t58301 = 1/t58298;
            double t58302 = 1/(t58290*t58290);
            double t58303 = b4p*t58200*t58291*(2.0/3.0);
            double t58304 = b2p*c*t58285*(1.0/3.0);
            double t58305 = b1p*c*t58292*t58285*(1.0/6.0);
            double t58306 = b3p*c*t58285*t58277*(1.0/2.0);
            double t58307 = t58303+t58304+t58305+t58306;
            double t58308 = t58300*t58301*t58302*t58307;
            double t58309 = log(t58298);
            double t58310 = pow(2.0,1.0/3.0);
            double t58311 = t58310*2.0;
            double t58312 = t58311-2.0;
            double t58313 = log(t58295);
            double t58314 = a1f*c*t58275;
            double t58315 = t58314+1.0;
            double t58316 = gcab*gcab;
            double t58320 = 1/pow(rho_a[index],8.0/3.0);
            double t58321 = gamma_aa[index]*t58320*(1.0/2.0);
            double t58322 = 1/pow(rho_b[index],8.0/3.0);
            double t58323 = gamma_bb[index]*t58322*(1.0/2.0);
            double t58317 = t58321+t58323;
            double t58318 = t58317*t58317;
            double t58319 = 1/pow(rho_a[index],1.1E1/3.0);
            double t58324 = t58316*t58316;
            double t58325 = t58318*t58318;
            double t58326 = t58316*t58318*6.0;
            double t58327 = gcab*t58316*t58317*t58318*4.0;
            double t58328 = t58324*t58325;
            double t58329 = gcab*t58317*4.0;
            double t58330 = t58326+t58327+t58328+t58329+1.0;
            double t58331 = gcab*t58317;
            double t58332 = t58331+1.0;
            double t58333 = t58316*t58318;
            double t58334 = gcab*t58317*2.0;
            double t58335 = t58333+t58334+1.0;
            double t58336 = t58316*t58318*3.0;
            double t58337 = gcab*t58316*t58317*t58318;
            double t58338 = gcab*t58317*3.0;
            double t58339 = t58336+t58337+t58338+1.0;
            double t58340 = 1/t58335;
            double t58341 = 1/t58339;
            double t58342 = 1/t58332;
            double t58343 = 1/t58330;
            double t58344 = 1/pow(t58193,7.0/3.0);
            double t58345 = 1/pow(t58193,8.0/3.0);
            double t58347 = 1/t58227;
            double t58348 = 1/(t58224*t58224);
            double t58349 = b4f*t58200*t58244*(2.0/3.0);
            double t58350 = b2f*c*t58205*(1.0/3.0);
            double t58351 = b1f*c*t58205*t58245*(1.0/6.0);
            double t58352 = b3f*c*t58205*t58196*(1.0/2.0);
            double t58353 = t58350+t58351+t58352+t58349;
            double t58354 = a1f*c*c0f*t58205*t58228*(2.0/3.0);
            double t58356 = t58230*t58353*t58347*t58348;
            double t58357 = a1p*c*c0p*t58231*t58205*(2.0/3.0);
            double t58355 = t58253+t58354-t58356-t58357;
            double t58358 = t58252*t58252;
            double t58359 = 1/pow(t58195,3.0/2.0);
            double t58360 = b4p*t58200*t58345*(1.0E1/9.0);
            double t58361 = b2p*c*t58344*(4.0/9.0);
            double t58362 = b1p*c*t58245*t58344*(2.0/9.0);
            double t58363 = b3p*c*t58344*t58196*(2.0/3.0);
            double t58364 = b3p*t58200*t58245*t58345*(1.0/1.2E1);
            double t58365 = t58360+t58361+t58362+t58363+t58364-b1p*t58200*t58345*t58359*(1.0/3.6E1);
            double t58366 = 1/(t58204*t58204*t58204);
            double t58367 = t58211*t58246*t58366*t58358*2.0;
            double t58368 = t58353*t58353;
            double t58369 = 1/(t58209*t58209);
            double t58370 = 1/(t58204*t58204*t58204*t58204);
            double t58371 = t58238*2.0;
            double t58372 = 1/(t58193*t58193*t58193);
            double t58379 = t58212*t58372*2.0;
            double t58373 = t58371-t58379;
            double t58374 = t58239*t58239;
            double t58375 = a1p*c*c0p*t58231*t58344*(8.0/9.0);
            double t58376 = 1/(t58193*t58193*t58193*t58193*t58193*t58193);
            double t58377 = t58243*t58254*4.0;
            double t58387 = t58212*t58213*t58240*4.0;
            double t58378 = t58377-t58387;
            double t58380 = t58271*t58373*(4.0/3.0);
            double t58381 = 1/pow(t58233,2.0/3.0);
            double t58382 = t58381*t58374*(4.0/9.0);
            double t58383 = 1/pow(t58235,2.0/3.0);
            double t58384 = t58374*t58383*(4.0/9.0);
            double t58385 = t58380+t58382+t58384-t58373*t58268*(4.0/3.0);
            double t58386 = 1/t58264;
            double t58388 = 1/(t58261*t58261);
            double t58389 = b4a*t58200*t58244*(2.0/3.0);
            double t58390 = b2a*c*t58205*(1.0/3.0);
            double t58391 = b1a*c*t58205*t58245*(1.0/6.0);
            double t58392 = b3a*c*t58205*t58196*(1.0/2.0);
            double t58393 = t58390+t58391+t58392+t58389;
            double t58394 = t58393*t58393;
            double t58395 = t58211*t58246*t58247*t58365;
            double t58396 = 1/t58295;
            double t58397 = b4f*t58200*t58291*(2.0/3.0);
            double t58398 = b2f*c*t58285*(1.0/3.0);
            double t58399 = b1f*c*t58292*t58285*(1.0/6.0);
            double t58400 = b3f*c*t58285*t58277*(1.0/2.0);
            double t58401 = t58400+t58397+t58398+t58399;
            double t58402 = 1/(t58284*t58284);
            double t58403 = 1/pow(rho_a[index],7.0/3.0);
            double t58404 = 1/pow(t58276,3.0/2.0);
            double t58405 = t58401*t58401;
            double t58406 = t58307*t58307;
            double t58407 = 1/(t58290*t58290*t58290);
            double t58408 = t58300*t58301*t58406*t58407*2.0;
            double t58409 = b4p*t58200*t58320*(1.0E1/9.0);
            double t58410 = b2p*c*t58403*(4.0/9.0);
            double t58411 = b3p*t58200*t58320*t58292*(1.0/1.2E1);
            double t58412 = b1p*c*t58403*t58292*(2.0/9.0);
            double t58413 = b3p*c*t58403*t58277*(2.0/3.0);
            double t58568 = b1p*t58200*t58320*t58404*(1.0/3.6E1);
            double t58414 = t58410+t58411+t58412+t58413+t58409-t58568;
            double t58415 = 1/(t58298*t58298);
            double t58416 = 1/(t58290*t58290*t58290*t58290);
            double t58417 = a1p*c*c0p*t58403*t58309*(8.0/9.0);
            double t58418 = a1f*c*c0f*t58313*t58285*(2.0/3.0);
            double t58419 = a1p*c*c0p*t58309*t58285*(2.0/3.0);
            double t58420 = t58211*t58206*t58370*t58358*t58369*(1.0/2.0);
            double t58421 = a1p*c*t58205*t58252*t58246*t58247*(2.0/3.0);
            double t58493 = t58401*t58402*t58315*t58396;
            double t58422 = t58308+t58418-t58419-t58493;
            double t58423 = gamma_aa[index]*gamma_aa[index];
            double t58424 = gcaa*gcaa;
            double t58425 = t58423*t58423;
            double t58426 = t58424*t58424;
            double t58427 = 1/pow(rho_a[index],3.2E1/3.0);
            double t58428 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t58429 = 1/pow(rho_a[index],1.6E1/3.0);
            double t58430 = c0f*t58313*t58315*2.0;
            double t58432 = c0p*t58300*t58309*2.0;
            double t58431 = t58430-t58432;
            double t58433 = 1/pow(rho_b[index],1.0/3.0);
            double t58434 = c*t58433;
            double t58435 = sqrt(t58434);
            double t58436 = pow(t58434,3.0/2.0);
            double t58437 = 1/pow(rho_b[index],2.0/3.0);
            double t58438 = b1p*t58435;
            double t58439 = b3p*t58436;
            double t58440 = b4p*t58200*t58437;
            double t58441 = b2p*c*t58433;
            double t58442 = t58440+t58441+t58438+t58439;
            double t58443 = 1/t58442;
            double t58444 = t58206*t58443*(1.0/2.0);
            double t58445 = t58444+1.0;
            double t58446 = log(t58445);
            double t58447 = a1p*c*t58433;
            double t58448 = t58447+1.0;
            double t58449 = c0p*t58446*t58448*2.0;
            double t58450 = t58240*t58232*t58243*t58218*t58237;
            double t58451 = Aa*t58218*t58237*t58255*t58265*t58274*t58267*2.0;
            double t58452 = gamma_aa[index]*gcab*t58319*(1.6E1/3.0);
            double t58453 = gamma_aa[index]*gcab*t58316*t58318*t58319*1.6E1;
            double t58454 = gamma_aa[index]*t58324*t58317*t58318*t58319*(1.6E1/3.0);
            double t58455 = gamma_aa[index]*t58316*t58317*t58319*1.6E1;
            double t58456 = t58452+t58453+t58454+t58455;
            double t58457 = 1/(t58332*t58332);
            double t58458 = 1/pow(rho_a[index],2.2E1/3.0);
            double t58459 = gamma_aa[index]*gcab*t58319*(8.0/3.0);
            double t58460 = gamma_aa[index]*t58316*t58317*t58319*(8.0/3.0);
            double t58461 = t58460+t58459;
            double t58462 = 1/(t58339*t58339);
            double t58463 = 1/pow(rho_a[index],1.4E1/3.0);
            double t58464 = 1/(t58330*t58330);
            double t58465 = 1/(t58335*t58335);
            double t58466 = gamma_aa[index]*gcab*t58319*4.0;
            double t58467 = gamma_aa[index]*gcab*t58316*t58318*t58319*4.0;
            double t58468 = gamma_aa[index]*t58316*t58317*t58319*8.0;
            double t58469 = t58466+t58467+t58468;
            double t58470 = t58312*t58431*t58218;
            double t58471 = t58432+t58470;
            double t58472 = gamma_aa[index]*gcaa*t58320*4.0;
            double t58473 = gamma_aa[index]*gcaa*t58423*t58424*t58428*4.0;
            double t58474 = t58423*t58424*t58429*6.0;
            double t58475 = t58425*t58426*t58427;
            double t58476 = t58472+t58473+t58474+t58475+1.0;
            double t58477 = 1/t58476;
            double t58478 = gamma_aa[index]*gcaa*t58320;
            double t58479 = t58478+1.0;
            double t58480 = 1/t58479;
            double t58481 = gamma_aa[index]*gcaa*t58320*3.0;
            double t58482 = gamma_aa[index]*gcaa*t58423*t58424*t58428;
            double t58483 = t58423*t58424*t58429*3.0;
            double t58484 = t58481+t58482+t58483+1.0;
            double t58485 = 1/t58484;
            double t58486 = gamma_aa[index]*gcaa*t58320*2.0;
            double t58487 = t58423*t58424*t58429;
            double t58488 = t58486+t58487+1.0;
            double t58489 = 1/t58488;
            double t58490 = 1/pow(rho_a[index],1.9E1/3.0);
            double t58491 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t58492 = 1/pow(rho_a[index],3.5E1/3.0);
            double t58494 = t58312*t58422*t58218;
            double t58495 = ccaa4*t58425*t58426*t58492*t58477*(3.2E1/3.0);
            double t58496 = ccaa1*gamma_aa[index]*gcaa*t58480*t58319*(8.0/3.0);
            double t58497 = ccaa3*gamma_aa[index]*gcaa*t58423*t58424*t58491*t58485*8.0;
            double t58498 = ccaa2*t58423*t58424*t58490*t58489*(1.6E1/3.0);
            double t58499 = 1/(t58479*t58479);
            double t58500 = gamma_aa[index]*gcaa*t58319*8.0;
            double t58501 = gamma_aa[index]*gcaa*t58423*t58424*t58491*8.0;
            double t58502 = t58423*t58424*t58490*1.6E1;
            double t58503 = t58500+t58501+t58502;
            double t58504 = 1/(t58484*t58484);
            double t58505 = gamma_aa[index]*gcaa*t58319*(3.2E1/3.0);
            double t58506 = gamma_aa[index]*gcaa*t58423*t58424*t58491*3.2E1;
            double t58507 = t58423*t58424*t58490*3.2E1;
            double t58508 = t58425*t58426*t58492*(3.2E1/3.0);
            double t58509 = t58505+t58506+t58507+t58508;
            double t58510 = 1/(t58476*t58476);
            double t58511 = gamma_aa[index]*gcaa*t58319*(1.6E1/3.0);
            double t58512 = t58423*t58424*t58490*(1.6E1/3.0);
            double t58513 = t58511+t58512;
            double t58514 = 1/(t58488*t58488);
            double t58515 = t58495+t58496+t58497+t58498-ccaa1*t58423*t58424*t58490*t58499*(8.0/3.0)-ccaa2*t58423* \
               t58513*t58424*t58514*t58429-ccaa4*t58510*t58425*t58426*t58427*t58509-ccaa3*gamma_aa[index]*gcaa*t58503* \
               t58423*t58504*t58424*t58428;
            double t58516 = -t58308+t58419+t58494;
            double t58517 = gx*gx;
            double t58518 = t58517*t58517;
            double t58519 = 1/pow(rho_a[index],1.0E1);
            double t58520 = gamma_aa[index]*gx*t58320;
            double t58521 = t58520+1.0;
            double t58541 = gamma_aa[index]*gx*t58319*(3.2E1/3.0);
            double t58542 = gamma_aa[index]*gx*t58423*t58517*t58491*3.2E1;
            double t58543 = t58423*t58490*t58517*3.2E1;
            double t58544 = t58425*t58518*t58492*(3.2E1/3.0);
            double t58522 = t58541+t58542+t58543+t58544;
            double t58523 = gamma_aa[index]*gx*t58320*4.0;
            double t58524 = gamma_aa[index]*gx*t58423*t58517*t58428*4.0;
            double t58525 = t58423*t58517*t58429*6.0;
            double t58526 = t58425*t58427*t58518;
            double t58527 = t58523+t58524+t58525+t58526+1.0;
            double t58547 = gamma_aa[index]*gx*t58319*(1.6E1/3.0);
            double t58548 = t58423*t58490*t58517*(1.6E1/3.0);
            double t58528 = t58547+t58548;
            double t58529 = gamma_aa[index]*gx*t58320*2.0;
            double t58530 = t58423*t58517*t58429;
            double t58531 = t58530+t58529+1.0;
            double t58532 = gamma_aa[index]*gx*t58320*3.0;
            double t58533 = gamma_aa[index]*gx*t58423*t58517*t58428;
            double t58534 = t58423*t58517*t58429*3.0;
            double t58535 = t58532+t58533+t58534+1.0;
            double t58536 = 1/(t58535*t58535);
            double t58537 = gamma_aa[index]*gx*t58319*8.0;
            double t58538 = gamma_aa[index]*gx*t58423*t58517*t58491*8.0;
            double t58539 = t58423*t58490*t58517*1.6E1;
            double t58540 = t58537+t58538+t58539;
            double t58545 = 1/pow(rho_a[index],3.8E1/3.0);
            double t58546 = 1/(t58527*t58527);
            double t58549 = 1/(t58531*t58531);
            double t58550 = 1/t58527;
            double t58551 = 1/t58521;
            double t58552 = 1/t58535;
            double t58553 = 1/t58531;
            double t58554 = 1/(t58521*t58521);
            double t58555 = ccaa4*t58425*t58426*t58427*t58477;
            double t58556 = ccaa1*gamma_aa[index]*gcaa*t58320*t58480;
            double t58557 = ccaa3*gamma_aa[index]*gcaa*t58423*t58424*t58428*t58485;
            double t58558 = ccaa2*t58423*t58424*t58429*t58489;
            double t58559 = ccaa0+t58555+t58556+t58557+t58558;
            double t58560 = 1/(t58284*t58284*t58284);
            double t58561 = b4f*t58200*t58320*(1.0E1/9.0);
            double t58562 = b2f*c*t58403*(4.0/9.0);
            double t58563 = b3f*t58200*t58320*t58292*(1.0/1.2E1);
            double t58564 = b1f*c*t58403*t58292*(2.0/9.0);
            double t58565 = b3f*c*t58403*t58277*(2.0/3.0);
            double t58566 = t58561+t58562+t58563+t58564+t58565-b1f*t58200*t58320*t58404*(1.0/3.6E1);
            double t58567 = t58402*t58315*t58566*t58396;
            double t58569 = t58300*t58301*t58302*t58414;
            double t58570 = 1/(t58295*t58295);
            double t58571 = 1/(t58284*t58284*t58284*t58284);
            double t58572 = t58315*t58405*t58219*t58570*t58571*(1.0/2.0);
            double t58573 = t58300*t58206*t58406*t58415*t58416*(1.0/2.0);
            double t58574 = a1f*c*t58401*t58402*t58285*t58396*(2.0/3.0);
            double t58575 = a1p*c*t58301*t58302*t58307*t58285*(2.0/3.0);
            v_rho_a_rho_a_[index] = -(ccab0+ccab1*gcab*t58342*t58317+ccab2*t58340*t58316*t58318+ccab4*t58324* \
               t58325*t58343+ccab3*gcab*t58341*t58316*t58317*t58318)*(rho_a[index]*(-t58408-t58417+t58573+t58575+ \
               t58569+t58312*t58218*(t58408+t58417+t58572+t58574+t58567-t58300*t58301*t58302*t58414-t58315*t58405* \
               t58560*t58396*2.0-a1f*c*c0f*t58313*t58403*(8.0/9.0)-t58300*t58206*t58406*t58415*t58416*(1.0/2.0)-a1p* \
               c*t58301*t58302*t58307*t58285*(2.0/3.0)))+t58193*(-t58420-t58421+t58375+t58367-t58395+t58240*t58243* \
               t58218*t58237*(t58420+t58421-t58375-t58367+t58395+t58230*1/(t58224*t58224*t58224)*t58347*t58368*2.0- \
               t58230*t58347*t58348*(b2f*c*t58344*(4.0/9.0)+b4f*t58200*t58345*(1.0E1/9.0)+b1f*c*t58245*t58344*(2.0/ \
               9.0)+b3f*c*t58344*t58196*(2.0/3.0)-b1f*t58200*t58345*t58359*(1.0/3.6E1)+b3f*t58200*t58245*t58345*(1.0/ \
               1.2E1))-t58230*1/(t58224*t58224*t58224*t58224)*1/(t58227*t58227)*t58219*t58368*(1.0/2.0)+a1f*c*c0f* \
               t58344*t58228*(8.0/9.0)-a1f*c*t58205*t58353*t58347*t58348*(2.0/3.0))+t58213*t58240*t58232*t58218*t58237* \
               1.2E1+t58240*t58232*t58243*t58218*t58385-t58232*t58243*t58218*t58254*t58272*8.0-t58240*t58243*t58218* \
               t58272*t58355*2.0+t58232*t58243*t58218*t58237*t58376*2.0E1+t58243*t58218*t58254*t58237*t58355*8.0+ \
               t58212*t58213*t58240*t58232*t58218*t58272*8.0-t58212*t58213*t58232*t58218*t58254*t58237*3.2E1-t58212* \
               t58213*t58240*t58218*t58237*t58355*8.0-Aa*t58218*t58272*t58255*t58265*t58267*t58378*4.0+Aa*t58218* \
               t58255*t58265*t58274*t58267*t58385*2.0+Aa*t58218*t58237*t58255*t58265*t58267*(t58213*t58240*1.2E1+ \
               t58243*t58376*2.0E1-t58212*t58213*t58254*3.2E1)*2.0+t58218*t58272*t58255*t58274*t58267*t58393*t58386* \
               t58388*2.0-t58218*t58237*t58255*t58267*t58393*t58386*t58378*t58388*2.0+1/(t58261*t58261*t58261)*t58218* \
               t58237*t58255*t58274*t58267*t58394*t58386*2.0-t58218*t58237*t58255*t58274*t58267*t58386*t58388*(b2a* \
               c*t58344*(4.0/9.0)+b4a*t58200*t58345*(1.0E1/9.0)+b1a*c*t58245*t58344*(2.0/9.0)+b3a*c*t58344*t58196* \
               (2.0/3.0)-b1a*t58200*t58345*t58359*(1.0/3.6E1)+b3a*t58200*t58245*t58345*(1.0/1.2E1))-Aa*a1a*c*t58205* \
               t58218*t58272*t58255*t58265*t58274*(4.0/3.0)+Aa*a1a*c*t58218*t58344*t58237*t58255*t58265*t58274*(8.0/ \
               9.0)+Aa*a1a*c*t58205*t58218*t58237*t58255*t58265*t58378*(4.0/3.0)-1/(t58261*t58261*t58261*t58261)* \
               t58218*t58237*t58255*1/(t58264*t58264)*t58256*t58274*t58267*t58394*(1.0/2.0)-a1a*c*t58205*t58218*t58237* \
               t58255*t58274*t58393*t58386*t58388*(2.0/3.0))+t58312*t58422*t58218*2.0-t58300*t58301*t58302*t58307* \
               2.0+t58211*t58252*t58246*t58247*2.0-a1p*c*c0p*t58231*t58205*(4.0/3.0)+a1p*c*c0p*t58309*t58285*(4.0/ \
               3.0)+t58240*t58232*t58243*t58218*t58272*2.0-t58232*t58243*t58218*t58254*t58237*8.0-t58240*t58243*t58218* \
               t58237*t58355*2.0+t58212*t58213*t58240*t58232*t58218*t58237*8.0+Aa*t58218*t58272*t58255*t58265*t58274* \
               t58267*4.0-Aa*t58218*t58237*t58255*t58265*t58267*t58378*4.0+t58218*t58237*t58255*t58274*t58267*t58393* \
               t58386*t58388*2.0-Aa*a1a*c*t58205*t58218*t58237*t58255*t58265*t58274*(4.0/3.0))+(rho_a[index]*t58471+ \
               rho_b[index]*(t58449-t58312*t58218*(t58449-c0f*log((t58219*(1.0/2.0))/(b1f*t58435+b3f*t58436+b2f*c* \
               t58433+b4f*t58200*t58437)+1.0)*(a1f*c*t58433+1.0)*2.0))-t58193*(t58242+t58450+t58451))*(-ccab2*t58316* \
               t58318*t58465*(gamma_aa[index]*gcab*t58463*(8.8E1/9.0)+t58423*t58316*t58458*(3.2E1/9.0)+gamma_aa[index]* \
               t58316*t58317*t58463*(8.8E1/9.0))+ccab4*1/(t58330*t58330*t58330)*t58324*t58325*(t58456*t58456)*2.0+ \
               ccab2*t58316*1/(t58335*t58335*t58335)*(t58461*t58461)*t58318*2.0+ccab1*gamma_aa[index]*gcab*t58342* \
               t58463*(4.4E1/9.0)+ccab2*t58340*t58423*t58316*t58458*(3.2E1/9.0)-ccab1*t58423*t58316*t58457*t58458* \
               (3.2E1/9.0)-ccab4*t58324*t58325*t58464*(gamma_aa[index]*gcab*t58463*(1.76E2/9.0)+t58423*t58316*t58458* \
               (6.4E1/3.0)+gamma_aa[index]*t58316*t58317*t58463*(1.76E2/3.0)+t58324*t58423*t58318*t58458*(6.4E1/3.0) \
               +gamma_aa[index]*gcab*t58316*t58318*t58463*(1.76E2/3.0)+gamma_aa[index]*t58324*t58317*t58318*t58463* \
               (1.76E2/9.0)+gcab*t58423*t58316*t58317*t58458*(1.28E2/3.0))+ccab4*t58324*t58423*t58343*t58318*t58458* \
               (6.4E1/3.0)+ccab2*gamma_aa[index]*t58340*t58316*t58317*t58463*(8.8E1/9.0)-ccab1*gamma_aa[index]*t58316* \
               t58317*t58463*t58457*(4.4E1/9.0)+ccab3*gcab*t58316*t58317*t58318*1/(t58339*t58339*t58339)*(t58469* \
               t58469)*2.0+ccab3*gamma_aa[index]*gcab*t58341*t58316*t58318*t58463*(4.4E1/3.0)+ccab4*gamma_aa[index]* \
               t58324*t58343*t58317*t58318*t58463*(1.76E2/9.0)-ccab2*gamma_aa[index]*t58316*t58317*t58461*t58319* \
               t58465*(1.6E1/3.0)+ccab3*gcab*t58341*t58423*t58316*t58317*t58458*(3.2E1/3.0)+ccab1*gcab*1/(t58332* \
               t58332*t58332)*t58423*t58316*t58317*t58458*(3.2E1/9.0)-ccab3*gcab*t58316*t58317*t58318*t58462*(gamma_aa[index]* \
               gcab*t58463*(4.4E1/3.0)+t58423*t58316*t58458*(3.2E1/3.0)+gamma_aa[index]*t58316*t58317*t58463*(8.8E1/ \
               3.0)+gamma_aa[index]*gcab*t58316*t58318*t58463*(4.4E1/3.0)+gcab*t58423*t58316*t58317*t58458*(3.2E1/ \
               3.0))-ccab3*gamma_aa[index]*gcab*t58316*t58318*t58462*t58319*t58469*8.0-ccab4*gamma_aa[index]*t58324* \
               t58317*t58318*t58319*t58464*t58456*(3.2E1/3.0))+t58515*t58471*2.0+t58516*t58559*2.0+(t58242+t58450+ \
               t58451+rho_a[index]*(-t58308+t58419+t58312*t58218*(t58308+t58418-t58401*t58402*t58315*t58396-a1p*c* \
               c0p*t58309*t58285*(2.0/3.0)))+t58193*(t58253-a1p*c*c0p*t58231*t58205*(2.0/3.0)+t58240*t58232*t58243* \
               t58218*t58272-t58232*t58243*t58218*t58254*t58237*4.0-t58240*t58243*t58218*t58237*t58355+t58212*t58213* \
               t58240*t58232*t58218*t58237*4.0+Aa*t58218*t58272*t58255*t58265*t58274*t58267*2.0-Aa*t58218*t58237* \
               t58255*t58265*t58267*t58378*2.0+t58218*t58237*t58255*t58274*t58267*t58393*t58386*t58388-Aa*a1a*c*t58205* \
               t58218*t58237*t58255*t58265*t58274*(2.0/3.0))-c0p*t58300*t58309*2.0-t58312*t58431*t58218)*(ccab1*gamma_aa[index]* \
               gcab*t58342*t58319*(4.0/3.0)-ccab2*t58316*t58461*t58318*t58465-ccab4*t58324*t58325*t58464*t58456+ccab2* \
               gamma_aa[index]*t58340*t58316*t58317*t58319*(8.0/3.0)-ccab1*gamma_aa[index]*t58316*t58317*t58319*t58457* \
               (4.0/3.0)+ccab3*gamma_aa[index]*gcab*t58341*t58316*t58318*t58319*4.0+ccab4*gamma_aa[index]*t58324* \
               t58343*t58317*t58318*t58319*(1.6E1/3.0)-ccab3*gcab*t58316*t58317*t58318*t58462*t58469)*2.0-c0*pow(rho_a[index],1.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t58551*t58319*(8.0/3.0)-cx1*t58423*t58490*t58517*t58554*(8.0/3.0)+cx2* \
               t58423*t58490*t58517*t58553*(1.6E1/3.0)+cx4*t58550*t58425*t58518*t58492*(3.2E1/3.0)-cx2*t58423*t58517* \
               t58429*t58528*t58549-cx4*t58522*t58425*t58427*t58518*t58546+cx3*gamma_aa[index]*gx*t58423*t58552*t58517* \
               t58491*8.0-cx3*gamma_aa[index]*gx*t58423*t58540*t58517*t58428*t58536)*(8.0/3.0)-rho_a[index]*t58471* \
               (ccaa1*gamma_aa[index]*gcaa*t58480*t58463*(8.8E1/9.0)-ccaa1*t58423*t58424*t58458*t58499*2.4E1+ccaa2* \
               t58423*t58424*t58458*t58489*(3.04E2/9.0)+ccaa4*t58425*t58426*t58545*t58477*(1.12E3/9.0)-ccaa2*t58423* \
               t58513*t58424*t58514*t58490*(3.2E1/3.0)-ccaa4*t58510*t58425*t58426*t58509*t58492*(6.4E1/3.0)-ccaa2* \
               t58423*t58424*t58514*t58429*(gamma_aa[index]*gcaa*t58463*(1.76E2/9.0)+t58423*t58424*t58458*(3.04E2/ \
               9.0))-ccaa4*t58510*t58425*t58426*t58427*(gamma_aa[index]*gcaa*t58463*(3.52E2/9.0)+t58423*t58424*t58458* \
               (6.08E2/3.0)+t58425*t58426*t58545*(1.12E3/9.0)+gamma_aa[index]*gcaa*t58423*t58424*t58519*2.88E2)+ccaa2* \
               t58423*(t58513*t58513)*t58424*t58429*1/(t58488*t58488*t58488)*2.0+ccaa4*t58425*t58426*t58427*(t58509* \
               t58509)*1/(t58476*t58476*t58476)*2.0+ccaa3*gamma_aa[index]*gcaa*t58423*t58424*t58519*t58485*7.2E1+ \
               ccaa1*gamma_aa[index]*gcaa*t58423*t58424*t58519*1/(t58479*t58479*t58479)*(1.28E2/9.0)+ccaa3*gamma_aa[index]* \
               gcaa*(t58503*t58503)*t58423*t58424*t58428*1/(t58484*t58484*t58484)*2.0-ccaa3*gamma_aa[index]*gcaa* \
               t58423*t58504*t58424*t58428*(gamma_aa[index]*gcaa*t58463*(8.8E1/3.0)+t58423*t58424*t58458*(3.04E2/ \
               3.0)+gamma_aa[index]*gcaa*t58423*t58424*t58519*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t58503*t58423*t58504* \
               t58424*t58491*1.6E1)+rho_a[index]*t58559*(-t58408-t58417+t58573+t58575+t58569+t58312*t58218*(t58408+ \
               t58417+t58572-t58573+t58574-t58575+t58567-t58569-t58315*t58405*t58560*t58396*2.0-a1f*c*c0f*t58313* \
               t58403*(8.0/9.0)))-rho_a[index]*t58515*t58516*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t58551*t58463*(8.8E1/9.0)-cx1*t58423*t58517*t58554*t58458*2.4E1+cx2*t58423*t58517*t58553*t58458* \
               (3.04E2/9.0)+cx4*t58550*t58425*t58518*t58545*(1.12E3/9.0)-cx2*t58423*t58490*t58517*t58528*t58549*(3.2E1/ \
               3.0)-cx4*t58522*t58425*t58518*t58492*t58546*(6.4E1/3.0)-cx2*t58423*t58517*t58429*t58549*(gamma_aa[index]* \
               gx*t58463*(1.76E2/9.0)+t58423*t58517*t58458*(3.04E2/9.0))-cx4*t58425*t58427*t58518*t58546*(gamma_aa[index]* \
               gx*t58463*(3.52E2/9.0)+t58423*t58517*t58458*(6.08E2/3.0)+t58425*t58518*t58545*(1.12E3/9.0)+gamma_aa[index]* \
               gx*t58423*t58517*t58519*2.88E2)+cx2*t58423*1/(t58531*t58531*t58531)*t58517*t58429*(t58528*t58528)* \
               2.0+cx4*(t58522*t58522)*t58425*t58427*t58518*1/(t58527*t58527*t58527)*2.0+cx3*gamma_aa[index]*gx*t58423* \
               t58552*t58517*t58519*7.2E1+cx1*gamma_aa[index]*gx*1/(t58521*t58521*t58521)*t58423*t58517*t58519*(1.28E2/ \
               9.0)+cx3*gamma_aa[index]*gx*t58423*(t58540*t58540)*t58517*1/(t58535*t58535*t58535)*t58428*2.0-cx3* \
               gamma_aa[index]*gx*t58423*t58517*t58428*t58536*(gamma_aa[index]*gx*t58463*(8.8E1/3.0)+t58423*t58517* \
               t58458*(3.04E2/3.0)+gamma_aa[index]*gx*t58423*t58517*t58519*7.2E1)-cx3*gamma_aa[index]*gx*t58423*t58540* \
               t58517*t58491*t58536*1.6E1)+c0*t58281*(cx0+cx1*gamma_aa[index]*gx*t58320*t58551+cx2*t58423*t58517* \
               t58553*t58429+cx4*t58550*t58425*t58427*t58518+cx3*gamma_aa[index]*gx*t58423*t58552*t58517*t58428)* \
               (4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t61648 = 1/pow(rho_a[index],1.0/3.0);
            double t61649 = c*t61648;
            double t61650 = sqrt(t61649);
            double t61651 = b1f*t61650;
            double t61652 = pow(t61649,3.0/2.0);
            double t61653 = b3f*t61652;
            double t61654 = c*c;
            double t61655 = 1/pow(rho_a[index],2.0/3.0);
            double t61656 = b4f*t61654*t61655;
            double t61657 = b2f*c*t61648;
            double t61658 = t61651+t61653+t61656+t61657;
            double t61659 = 1/pow(rho_a[index],4.0/3.0);
            double t61660 = b1p*t61650;
            double t61661 = b3p*t61652;
            double t61662 = b4p*t61654*t61655;
            double t61663 = b2p*c*t61648;
            double t61664 = t61660+t61661+t61662+t61663;
            double t61665 = 1/pow(rho_a[index],5.0/3.0);
            double t61666 = 1/sqrt(t61649);
            double t61667 = 1/c0f;
            double t61668 = 1/t61658;
            double t61669 = t61667*t61668*(1.0/2.0);
            double t61670 = t61669+1.0;
            double t61671 = 1/c0p;
            double t61672 = 1/t61664;
            double t61673 = t61671*t61672*(1.0/2.0);
            double t61674 = t61673+1.0;
            double t61675 = a1p*c*t61648;
            double t61676 = t61675+1.0;
            double t61677 = 1/t61674;
            double t61678 = 1/(t61664*t61664);
            double t61679 = b4p*t61654*t61665*(2.0/3.0);
            double t61680 = b2p*c*t61659*(1.0/3.0);
            double t61681 = b1p*c*t61666*t61659*(1.0/6.0);
            double t61682 = b3p*c*t61650*t61659*(1.0/2.0);
            double t61683 = t61680+t61681+t61682+t61679;
            double t61684 = t61683*t61676*t61677*t61678;
            double t61685 = log(t61674);
            double t61686 = gamma_aa[index]*gamma_aa[index];
            double t61687 = gcaa*gcaa;
            double t61688 = t61686*t61686;
            double t61689 = t61687*t61687;
            double t61690 = 1/pow(rho_a[index],3.2E1/3.0);
            double t61691 = 1/pow(rho_a[index],8.0/3.0);
            double t61692 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t61693 = 1/pow(rho_a[index],1.6E1/3.0);
            double t61694 = pow(2.0,1.0/3.0);
            double t61695 = t61694*2.0;
            double t61696 = t61695-2.0;
            double t61697 = two_13*2.0;
            double t61698 = t61697-2.0;
            double t61699 = 1/t61698;
            double t61700 = log(t61670);
            double t61701 = a1f*c*t61648;
            double t61702 = t61701+1.0;
            double t61703 = gamma_aa[index]*gcaa*t61691*4.0;
            double t61704 = gamma_aa[index]*gcaa*t61692*t61686*t61687*4.0;
            double t61705 = t61693*t61686*t61687*6.0;
            double t61706 = t61690*t61688*t61689;
            double t61707 = t61703+t61704+t61705+t61706+1.0;
            double t61708 = 1/t61707;
            double t61709 = gamma_aa[index]*gcaa*t61691;
            double t61710 = t61709+1.0;
            double t61711 = 1/t61710;
            double t61712 = gamma_aa[index]*gcaa*t61691*3.0;
            double t61713 = gamma_aa[index]*gcaa*t61692*t61686*t61687;
            double t61714 = t61693*t61686*t61687*3.0;
            double t61715 = t61712+t61713+t61714+1.0;
            double t61716 = 1/t61715;
            double t61717 = gamma_aa[index]*gcaa*t61691*2.0;
            double t61718 = t61693*t61686*t61687;
            double t61719 = t61717+t61718+1.0;
            double t61720 = 1/t61719;
            double t61721 = 1/pow(rho_a[index],1.9E1/3.0);
            double t61722 = 1/pow(rho_a[index],1.1E1/3.0);
            double t61723 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t61724 = 1/pow(rho_a[index],3.5E1/3.0);
            double t61725 = 1/t61670;
            double t61726 = 1/(t61658*t61658);
            double t61727 = b4f*t61654*t61665*(2.0/3.0);
            double t61728 = b2f*c*t61659*(1.0/3.0);
            double t61729 = b1f*c*t61666*t61659*(1.0/6.0);
            double t61730 = b3f*c*t61650*t61659*(1.0/2.0);
            double t61731 = t61730+t61727+t61728+t61729;
            double t61732 = a1f*c*c0f*t61700*t61659*(2.0/3.0);
            double t61733 = a1p*c*c0p*t61685*t61659*(2.0/3.0);
            double t61734 = ccaa4*t61724*t61708*t61688*t61689*(3.2E1/3.0);
            double t61735 = ccaa1*gamma_aa[index]*gcaa*t61711*t61722*(8.0/3.0);
            double t61736 = ccaa3*gamma_aa[index]*gcaa*t61723*t61716*t61686*t61687*8.0;
            double t61737 = ccaa2*t61720*t61721*t61686*t61687*(1.6E1/3.0);
            double t61738 = 1/(t61710*t61710);
            double t61739 = gamma_aa[index]*gcaa*t61722*8.0;
            double t61740 = gamma_aa[index]*gcaa*t61723*t61686*t61687*8.0;
            double t61741 = t61721*t61686*t61687*1.6E1;
            double t61742 = t61740+t61741+t61739;
            double t61743 = 1/(t61715*t61715);
            double t61744 = gamma_aa[index]*gcaa*t61722*(3.2E1/3.0);
            double t61745 = gamma_aa[index]*gcaa*t61723*t61686*t61687*3.2E1;
            double t61746 = t61721*t61686*t61687*3.2E1;
            double t61747 = t61724*t61688*t61689*(3.2E1/3.0);
            double t61748 = t61744+t61745+t61746+t61747;
            double t61749 = 1/(t61707*t61707);
            double t61750 = gamma_aa[index]*gcaa*t61722*(1.6E1/3.0);
            double t61751 = t61721*t61686*t61687*(1.6E1/3.0);
            double t61752 = t61750+t61751;
            double t61753 = 1/(t61719*t61719);
            double t61754 = t61734+t61735+t61736+t61737-ccaa1*t61721*t61738*t61686*t61687*(8.0/3.0)-ccaa2*t61752* \
               t61753*t61693*t61686*t61687-ccaa4*t61690*t61748*t61749*t61688*t61689-ccaa3*gamma_aa[index]*gcaa*t61742* \
               t61743*t61692*t61686*t61687;
            double t61755 = gx*gx;
            double t61756 = t61755*t61755;
            double t61757 = 1/pow(rho_a[index],1.0E1);
            double t61758 = gamma_aa[index]*gx*t61691;
            double t61759 = t61758+1.0;
            double t61760 = 1/pow(rho_a[index],2.2E1/3.0);
            double t61781 = gamma_aa[index]*gx*t61722*(3.2E1/3.0);
            double t61782 = gamma_aa[index]*gx*t61723*t61755*t61686*3.2E1;
            double t61783 = t61721*t61755*t61686*3.2E1;
            double t61784 = t61724*t61756*t61688*(3.2E1/3.0);
            double t61761 = t61781+t61782+t61783+t61784;
            double t61762 = gamma_aa[index]*gx*t61691*4.0;
            double t61763 = gamma_aa[index]*gx*t61692*t61755*t61686*4.0;
            double t61764 = t61755*t61693*t61686*6.0;
            double t61765 = t61690*t61756*t61688;
            double t61766 = t61762+t61763+t61764+t61765+1.0;
            double t61787 = gamma_aa[index]*gx*t61722*(1.6E1/3.0);
            double t61788 = t61721*t61755*t61686*(1.6E1/3.0);
            double t61767 = t61787+t61788;
            double t61768 = gamma_aa[index]*gx*t61691*2.0;
            double t61769 = t61755*t61693*t61686;
            double t61770 = t61768+t61769+1.0;
            double t61771 = gamma_aa[index]*gx*t61691*3.0;
            double t61772 = gamma_aa[index]*gx*t61692*t61755*t61686;
            double t61773 = t61755*t61693*t61686*3.0;
            double t61774 = t61771+t61772+t61773+1.0;
            double t61775 = 1/pow(rho_a[index],1.4E1/3.0);
            double t61776 = 1/(t61774*t61774);
            double t61777 = gamma_aa[index]*gx*t61722*8.0;
            double t61778 = gamma_aa[index]*gx*t61723*t61755*t61686*8.0;
            double t61779 = t61721*t61755*t61686*1.6E1;
            double t61780 = t61777+t61778+t61779;
            double t61785 = 1/pow(rho_a[index],3.8E1/3.0);
            double t61786 = 1/(t61766*t61766);
            double t61789 = 1/(t61770*t61770);
            double t61790 = 1/t61766;
            double t61791 = 1/t61759;
            double t61792 = 1/t61774;
            double t61793 = 1/t61770;
            double t61794 = c0f*t61700*t61702*2.0;
            double t61795 = c0p*t61676*t61685*2.0;
            double t61796 = 1/(t61759*t61759);
            double t61797 = ccaa4*t61690*t61708*t61688*t61689;
            double t61798 = ccaa1*gamma_aa[index]*gcaa*t61711*t61691;
            double t61799 = ccaa3*gamma_aa[index]*gcaa*t61716*t61692*t61686*t61687;
            double t61800 = ccaa2*t61720*t61693*t61686*t61687;
            double t61801 = ccaa0+t61800+t61797+t61798+t61799;
            double t61802 = 1/pow(rho_a[index],7.0/3.0);
            double t61803 = 1/pow(t61649,3.0/2.0);
            double t61804 = t61731*t61731;
            double t61805 = t61683*t61683;
            double t61806 = 1/(t61664*t61664*t61664);
            double t61807 = t61805*t61806*t61676*t61677*2.0;
            double t61808 = b4p*t61654*t61691*(1.0E1/9.0);
            double t61809 = b2p*c*t61802*(4.0/9.0);
            double t61810 = b3p*t61654*t61691*t61666*(1.0/1.2E1);
            double t61811 = b1p*c*t61802*t61666*(2.0/9.0);
            double t61812 = b3p*c*t61802*t61650*(2.0/3.0);
            double t61813 = t61810+t61811+t61812+t61808+t61809-b1p*t61803*t61654*t61691*(1.0/3.6E1);
            double t61814 = 1/(t61674*t61674);
            double t61815 = 1/(t61664*t61664*t61664*t61664);
            double t61816 = a1p*c*c0p*t61802*t61685*(8.0/9.0);
            v_rho_a_rho_a_[index] = t61754*(t61795+t61696*t61699*(t61794-c0p*t61676*t61685*2.0))*2.0+t61801*(t61733- \
               t61684+t61696*t61699*(t61732+t61684-t61702*t61731*t61725*t61726-a1p*c*c0p*t61685*t61659*(2.0/3.0)) \
               )*2.0-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t61722*t61791*(8.0/3.0)-cx1*t61721*t61755* \
               t61686*t61796*(8.0/3.0)+cx2*t61721*t61755*t61793*t61686*(1.6E1/3.0)+cx4*t61724*t61790*t61756*t61688* \
               (3.2E1/3.0)-cx2*t61755*t61693*t61686*t61767*t61789-cx4*t61761*t61690*t61756*t61786*t61688+cx3*gamma_aa[index]* \
               gx*t61723*t61755*t61792*t61686*8.0-cx3*gamma_aa[index]*gx*t61780*t61692*t61755*t61686*t61776)*(8.0/ \
               3.0)+rho_a[index]*t61801*(-t61807-t61816+t61696*t61699*(t61807+t61816-t61813*t61676*t61677*t61678- \
               t61702*t61804*t61725*1/(t61658*t61658*t61658)*2.0+t61702*t61725*t61726*(b2f*c*t61802*(4.0/9.0)+b4f* \
               t61654*t61691*(1.0E1/9.0)+b1f*c*t61802*t61666*(2.0/9.0)+b3f*c*t61802*t61650*(2.0/3.0)-b1f*t61803*t61654* \
               t61691*(1.0/3.6E1)+b3f*t61654*t61691*t61666*(1.0/1.2E1))+t61702*t61804*1/(t61670*t61670)*1/(t61658* \
               t61658*t61658*t61658)*t61667*(1.0/2.0)-a1f*c*c0f*t61700*t61802*(8.0/9.0)-t61805*t61814*t61671*t61815* \
               t61676*(1.0/2.0)+a1f*c*t61731*t61725*t61726*t61659*(2.0/3.0)-a1p*c*t61683*t61659*t61677*t61678*(2.0/ \
               3.0))+t61813*t61676*t61677*t61678+t61805*t61814*t61671*t61815*t61676*(1.0/2.0)+a1p*c*t61683*t61659* \
               t61677*t61678*(2.0/3.0))-rho_a[index]*t61754*(t61733-t61684+t61696*t61699*(t61732-t61733+t61684-t61702* \
               t61731*t61725*t61726))*2.0-rho_a[index]*(t61795+t61696*t61699*(t61794-t61795))*(ccaa1*gamma_aa[index]* \
               gcaa*t61711*t61775*(8.8E1/9.0)+ccaa2*t61720*t61760*t61686*t61687*(3.04E2/9.0)-ccaa1*t61760*t61738* \
               t61686*t61687*2.4E1+ccaa4*t61708*t61785*t61688*t61689*(1.12E3/9.0)-ccaa2*t61721*t61752*t61753*t61686* \
               t61687*(3.2E1/3.0)-ccaa4*t61724*t61748*t61749*t61688*t61689*(6.4E1/3.0)-ccaa2*t61753*t61693*t61686* \
               t61687*(gamma_aa[index]*gcaa*t61775*(1.76E2/9.0)+t61760*t61686*t61687*(3.04E2/9.0))-ccaa4*t61690*t61749* \
               t61688*t61689*(gamma_aa[index]*gcaa*t61775*(3.52E2/9.0)+t61760*t61686*t61687*(6.08E2/3.0)+t61785*t61688* \
               t61689*(1.12E3/9.0)+gamma_aa[index]*gcaa*t61757*t61686*t61687*2.88E2)+ccaa2*(t61752*t61752)*1/(t61719* \
               t61719*t61719)*t61693*t61686*t61687*2.0+ccaa4*1/(t61707*t61707*t61707)*t61690*(t61748*t61748)*t61688* \
               t61689*2.0+ccaa3*gamma_aa[index]*gcaa*t61716*t61757*t61686*t61687*7.2E1+ccaa1*gamma_aa[index]*gcaa* \
               1/(t61710*t61710*t61710)*t61757*t61686*t61687*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*1/(t61715*t61715* \
               t61715)*(t61742*t61742)*t61692*t61686*t61687*2.0-ccaa3*gamma_aa[index]*gcaa*t61743*t61692*t61686*t61687* \
               (gamma_aa[index]*gcaa*t61775*(8.8E1/3.0)+t61760*t61686*t61687*(3.04E2/3.0)+gamma_aa[index]*gcaa*t61757* \
               t61686*t61687*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t61723*t61742*t61743*t61686*t61687*1.6E1)+c0*pow(rho_a[index],4.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t61791*t61775*(8.8E1/9.0)-cx1*t61760*t61755*t61686*t61796*2.4E1+cx2*t61760* \
               t61755*t61793*t61686*(3.04E2/9.0)+cx4*t61790*t61756*t61785*t61688*(1.12E3/9.0)-cx2*t61721*t61755*t61686* \
               t61767*t61789*(3.2E1/3.0)-cx4*t61724*t61761*t61756*t61786*t61688*(6.4E1/3.0)-cx2*t61755*t61693*t61686* \
               t61789*(gamma_aa[index]*gx*t61775*(1.76E2/9.0)+t61760*t61755*t61686*(3.04E2/9.0))-cx4*t61690*t61756* \
               t61786*t61688*(gamma_aa[index]*gx*t61775*(3.52E2/9.0)+t61760*t61755*t61686*(6.08E2/3.0)+t61756*t61785* \
               t61688*(1.12E3/9.0)+gamma_aa[index]*gx*t61755*t61757*t61686*2.88E2)+cx2*1/(t61770*t61770*t61770)*t61755* \
               t61693*t61686*(t61767*t61767)*2.0+cx4*(t61761*t61761)*t61690*t61756*1/(t61766*t61766*t61766)*t61688* \
               2.0+cx3*gamma_aa[index]*gx*t61755*t61792*t61757*t61686*7.2E1+cx1*gamma_aa[index]*gx*t61755*t61757* \
               t61686*1/(t61759*t61759*t61759)*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*(t61780*t61780)*t61692*t61755* \
               1/(t61774*t61774*t61774)*t61686*2.0-cx3*gamma_aa[index]*gx*t61692*t61755*t61686*t61776*(gamma_aa[index]* \
               gx*t61775*(8.8E1/3.0)+t61760*t61755*t61686*(3.04E2/3.0)+gamma_aa[index]*gx*t61755*t61757*t61686*7.2E1) \
               -cx3*gamma_aa[index]*gx*t61723*t61780*t61755*t61686*t61776*1.6E1)+c0*t61655*(cx0+cx1*gamma_aa[index]* \
               gx*t61691*t61791+cx2*t61755*t61693*t61793*t61686+cx4*t61690*t61790*t61756*t61688+cx3*gamma_aa[index]* \
               gx*t61692*t61755*t61792*t61686)*(4.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t58577 = rho_a[index]+rho_b[index];
            double t58578 = 1/pow(t58577,1.0/3.0);
            double t58579 = c*t58578;
            double t58580 = sqrt(t58579);
            double t58581 = b1p*t58580;
            double t58582 = pow(t58579,3.0/2.0);
            double t58583 = b3p*t58582;
            double t58584 = c*c;
            double t58585 = 1/pow(t58577,2.0/3.0);
            double t58586 = b4p*t58584*t58585;
            double t58587 = b2p*c*t58578;
            double t58588 = t58581+t58583+t58586+t58587;
            double t58589 = 1/pow(t58577,4.0/3.0);
            double t58590 = 1/c0p;
            double t58591 = 1/t58588;
            double t58592 = t58590*t58591*(1.0/2.0);
            double t58593 = t58592+1.0;
            double t58594 = a1p*c*t58578;
            double t58595 = t58594+1.0;
            double t58596 = rho_a[index]-rho_b[index];
            double t58597 = t58596*t58596;
            double t58598 = 1/t58577;
            double t58599 = t58596*t58598;
            double t58600 = two_13*2.0;
            double t58601 = t58600-2.0;
            double t58602 = 1/t58601;
            double t58603 = 1/c0f;
            double t58604 = b1f*t58580;
            double t58605 = b3f*t58582;
            double t58606 = b4f*t58584*t58585;
            double t58607 = b2f*c*t58578;
            double t58608 = t58604+t58605+t58606+t58607;
            double t58609 = 1/t58608;
            double t58610 = t58603*t58609*(1.0/2.0);
            double t58611 = t58610+1.0;
            double t58612 = log(t58611);
            double t58613 = a1f*c*t58578;
            double t58614 = t58613+1.0;
            double t58615 = log(t58593);
            double t58625 = c0f*t58612*t58614*2.0;
            double t58626 = c0p*t58615*t58595*2.0;
            double t58616 = t58625-t58626;
            double t58617 = t58599+1.0;
            double t58618 = pow(t58617,4.0/3.0);
            double t58619 = -t58599+1.0;
            double t58620 = pow(t58619,4.0/3.0);
            double t58621 = t58620+t58618-2.0;
            double t58622 = 1/(t58577*t58577);
            double t58653 = t58622*t58596;
            double t58623 = -t58653+t58598;
            double t58624 = 1/(t58577*t58577*t58577*t58577);
            double t58627 = t58597*t58597;
            double t58628 = 1/pow(t58577,5.0/3.0);
            double t58629 = 1/sqrt(t58579);
            double t58630 = 1/t58593;
            double t58631 = 1/(t58588*t58588);
            double t58632 = b4p*t58628*t58584*(2.0/3.0);
            double t58633 = b2p*c*t58589*(1.0/3.0);
            double t58634 = b1p*c*t58629*t58589*(1.0/6.0);
            double t58635 = b3p*c*t58580*t58589*(1.0/2.0);
            double t58636 = t58632+t58633+t58634+t58635;
            double t58637 = t58630*t58631*t58636*t58595;
            double t58638 = 1/(t58577*t58577*t58577*t58577*t58577);
            double t58639 = 1/d2fz0;
            double t58640 = 1/Aa;
            double t58641 = b1a*t58580;
            double t58642 = b3a*t58582;
            double t58643 = b4a*t58584*t58585;
            double t58644 = b2a*c*t58578;
            double t58645 = t58641+t58642+t58643+t58644;
            double t58646 = 1/t58645;
            double t58647 = t58640*t58646*(1.0/2.0);
            double t58648 = t58647+1.0;
            double t58649 = log(t58648);
            double t58650 = a1a*c*t58578;
            double t58651 = t58650+1.0;
            double t58652 = pow(t58617,1.0/3.0);
            double t58654 = t58623*t58652*(4.0/3.0);
            double t58655 = pow(t58619,1.0/3.0);
            double t58799 = t58623*t58655*(4.0/3.0);
            double t58656 = t58654-t58799;
            double t58657 = t58624*t58627;
            double t58658 = t58657-1.0;
            double t58659 = 1/pow(rho_a[index],1.0/3.0);
            double t58660 = c*t58659;
            double t58661 = sqrt(t58660);
            double t58662 = b1f*t58661;
            double t58663 = pow(t58660,3.0/2.0);
            double t58664 = b3f*t58663;
            double t58665 = 1/pow(rho_a[index],2.0/3.0);
            double t58666 = b4f*t58584*t58665;
            double t58667 = b2f*c*t58659;
            double t58668 = t58662+t58664+t58666+t58667;
            double t58669 = 1/pow(rho_a[index],4.0/3.0);
            double t58670 = b1p*t58661;
            double t58671 = b3p*t58663;
            double t58672 = b4p*t58584*t58665;
            double t58673 = b2p*c*t58659;
            double t58674 = t58670+t58671+t58672+t58673;
            double t58675 = 1/pow(rho_a[index],5.0/3.0);
            double t58676 = 1/sqrt(t58660);
            double t58677 = 1/t58668;
            double t58678 = t58603*t58677*(1.0/2.0);
            double t58679 = t58678+1.0;
            double t58680 = 1/t58674;
            double t58681 = t58590*t58680*(1.0/2.0);
            double t58682 = t58681+1.0;
            double t58683 = a1p*c*t58659;
            double t58684 = t58683+1.0;
            double t58685 = 1/t58682;
            double t58686 = 1/(t58674*t58674);
            double t58687 = b4p*t58584*t58675*(2.0/3.0);
            double t58688 = b2p*c*t58669*(1.0/3.0);
            double t58689 = b1p*c*t58676*t58669*(1.0/6.0);
            double t58690 = b3p*c*t58661*t58669*(1.0/2.0);
            double t58691 = t58690+t58687+t58688+t58689;
            double t58692 = t58691*t58684*t58685*t58686;
            double t58693 = log(t58682);
            double t58694 = pow(2.0,1.0/3.0);
            double t58695 = t58694*2.0;
            double t58696 = t58695-2.0;
            double t58697 = log(t58679);
            double t58698 = a1f*c*t58659;
            double t58699 = t58698+1.0;
            double t58700 = gcab*gcab;
            double t58704 = 1/pow(rho_a[index],8.0/3.0);
            double t58705 = gamma_aa[index]*t58704*(1.0/2.0);
            double t58706 = 1/pow(rho_b[index],8.0/3.0);
            double t58707 = gamma_bb[index]*t58706*(1.0/2.0);
            double t58701 = t58705+t58707;
            double t58702 = t58701*t58701;
            double t58703 = 1/pow(rho_b[index],1.1E1/3.0);
            double t58708 = t58700*t58700;
            double t58709 = t58702*t58702;
            double t58710 = t58700*t58702*6.0;
            double t58711 = gcab*t58700*t58701*t58702*4.0;
            double t58712 = t58708*t58709;
            double t58713 = gcab*t58701*4.0;
            double t58714 = t58710+t58711+t58712+t58713+1.0;
            double t58715 = gcab*t58701;
            double t58716 = t58715+1.0;
            double t58717 = t58700*t58702;
            double t58718 = gcab*t58701*2.0;
            double t58719 = t58717+t58718+1.0;
            double t58720 = t58700*t58702*3.0;
            double t58721 = gcab*t58700*t58701*t58702;
            double t58722 = gcab*t58701*3.0;
            double t58723 = t58720+t58721+t58722+1.0;
            double t58724 = t58602*t58621*t58624*t58616*t58596*t58597*4.0;
            double t58725 = t58653+t58598;
            double t58726 = 1/t58611;
            double t58727 = 1/(t58608*t58608);
            double t58728 = b4f*t58628*t58584*(2.0/3.0);
            double t58729 = b2f*c*t58589*(1.0/3.0);
            double t58730 = b1f*c*t58629*t58589*(1.0/6.0);
            double t58731 = b3f*c*t58580*t58589*(1.0/2.0);
            double t58732 = t58730+t58731+t58728+t58729;
            double t58733 = a1f*c*c0f*t58612*t58589*(2.0/3.0);
            double t58734 = t58627*t58638*4.0;
            double t58735 = t58652*t58725*(4.0/3.0);
            double t58798 = t58725*t58655*(4.0/3.0);
            double t58736 = t58735-t58798;
            double t58737 = 1/t58648;
            double t58738 = 1/(t58645*t58645);
            double t58739 = b4a*t58628*t58584*(2.0/3.0);
            double t58740 = b2a*c*t58589*(1.0/3.0);
            double t58741 = b1a*c*t58629*t58589*(1.0/6.0);
            double t58742 = b3a*c*t58580*t58589*(1.0/2.0);
            double t58743 = t58740+t58741+t58742+t58739;
            double t58744 = t58602*t58621*t58651*t58743*t58737*t58639*t58738*t58658;
            double t58745 = 1/pow(rho_b[index],1.0/3.0);
            double t58746 = c*t58745;
            double t58747 = sqrt(t58746);
            double t58748 = b1f*t58747;
            double t58749 = pow(t58746,3.0/2.0);
            double t58750 = b3f*t58749;
            double t58751 = 1/pow(rho_b[index],2.0/3.0);
            double t58752 = b4f*t58751*t58584;
            double t58753 = b2f*c*t58745;
            double t58754 = t58750+t58752+t58753+t58748;
            double t58755 = 1/pow(rho_b[index],4.0/3.0);
            double t58756 = b1p*t58747;
            double t58757 = b3p*t58749;
            double t58758 = b4p*t58751*t58584;
            double t58759 = b2p*c*t58745;
            double t58760 = t58756+t58757+t58758+t58759;
            double t58761 = 1/pow(rho_b[index],5.0/3.0);
            double t58762 = 1/sqrt(t58746);
            double t58763 = 1/t58754;
            double t58764 = t58603*t58763*(1.0/2.0);
            double t58765 = t58764+1.0;
            double t58766 = 1/t58760;
            double t58767 = t58590*t58766*(1.0/2.0);
            double t58768 = t58767+1.0;
            double t58769 = a1p*c*t58745;
            double t58770 = t58769+1.0;
            double t58771 = 1/t58768;
            double t58772 = 1/(t58760*t58760);
            double t58773 = b4p*t58761*t58584*(2.0/3.0);
            double t58774 = b2p*c*t58755*(1.0/3.0);
            double t58775 = b1p*c*t58762*t58755*(1.0/6.0);
            double t58776 = b3p*c*t58755*t58747*(1.0/2.0);
            double t58777 = t58773+t58774+t58775+t58776;
            double t58778 = t58770*t58771*t58772*t58777;
            double t58779 = log(t58768);
            double t58780 = log(t58765);
            double t58781 = a1f*c*t58745;
            double t58782 = t58781+1.0;
            double t58783 = t58602*t58621*t58624*t58616*t58627;
            double t58784 = Aa*t58602*t58621*t58651*t58639*t58649*t58658*2.0;
            double t58785 = 1/pow(rho_a[index],1.1E1/3.0);
            double t58786 = 1/(t58723*t58723);
            double t58787 = 1/t58716;
            double t58788 = 1/(t58714*t58714);
            double t58789 = 1/(t58719*t58719);
            double t58790 = 1/t58714;
            double t58791 = 1/(t58716*t58716);
            double t58792 = 1/t58719;
            double t58793 = 1/t58723;
            double t58795 = a1p*c*c0p*t58615*t58589*(2.0/3.0);
            double t58800 = t58614*t58732*t58726*t58727;
            double t58794 = -t58800+t58733+t58637-t58795;
            double t58796 = 1/pow(t58577,7.0/3.0);
            double t58797 = 1/pow(t58577,8.0/3.0);
            double t58801 = t58636*t58636;
            double t58802 = 1/pow(t58579,3.0/2.0);
            double t58803 = b4p*t58584*t58797*(1.0E1/9.0);
            double t58804 = b2p*c*t58796*(4.0/9.0);
            double t58805 = b1p*c*t58629*t58796*(2.0/9.0);
            double t58806 = b3p*c*t58580*t58796*(2.0/3.0);
            double t58807 = b3p*t58584*t58629*t58797*(1.0/1.2E1);
            double t58808 = t58803+t58804+t58805+t58806+t58807-b1p*t58802*t58584*t58797*(1.0/3.6E1);
            double t58809 = t58630*t58631*t58808*t58595;
            double t58810 = 1/(t58588*t58588*t58588);
            double t58811 = t58732*t58732;
            double t58812 = 1/(t58593*t58593);
            double t58813 = 1/(t58588*t58588*t58588*t58588);
            double t58814 = t58801*t58812*t58813*t58590*t58595*(1.0/2.0);
            double t58815 = t58800-t58733-t58637+t58795;
            double t58816 = 1/(t58577*t58577*t58577);
            double t58817 = a1p*c*t58630*t58631*t58636*t58589*(2.0/3.0);
            double t58818 = 1/(t58577*t58577*t58577*t58577*t58577*t58577);
            double t58819 = t58624*t58596*t58597*4.0;
            double t58820 = t58734+t58819;
            double t58821 = t58816*t58655*t58596*(8.0/3.0);
            double t58822 = 1/pow(t58617,2.0/3.0);
            double t58823 = t58623*t58822*t58725*(4.0/9.0);
            double t58824 = 1/pow(t58619,2.0/3.0);
            double t58825 = t58623*t58725*t58824*(4.0/9.0);
            double t58826 = t58821+t58823+t58825-t58652*t58816*t58596*(8.0/3.0);
            double t58827 = t58743*t58743;
            double t58828 = t58734-t58819;
            double t58829 = t58602*t58624*t58616*t58627*t58736;
            double t58830 = t58602*t58624*t58616*t58627*t58656;
            double t58831 = Aa*t58602*t58621*t58820*t58651*t58639*t58649*2.0;
            double t58832 = Aa*t58602*t58651*t58736*t58639*t58649*t58658*2.0;
            double t58833 = Aa*t58602*t58651*t58656*t58639*t58649*t58658*2.0;
            double t58834 = c0f*t58697*t58699*2.0;
            double t58836 = c0p*t58684*t58693*2.0;
            double t58835 = t58834-t58836;
            double t58837 = c0f*t58780*t58782*2.0;
            double t58839 = c0p*t58770*t58779*2.0;
            double t58838 = t58837-t58839;
            double t58840 = gamma_aa[index]*gcab*t58785*(8.0/3.0);
            double t58841 = gamma_aa[index]*t58700*t58701*t58785*(8.0/3.0);
            double t58842 = t58840+t58841;
            double t58843 = gamma_bb[index]*gcab*t58703*(8.0/3.0);
            double t58844 = gamma_bb[index]*t58700*t58701*t58703*(8.0/3.0);
            double t58845 = t58843+t58844;
            double t58846 = gamma_aa[index]*gcab*t58785*(1.6E1/3.0);
            double t58847 = gamma_aa[index]*gcab*t58700*t58702*t58785*1.6E1;
            double t58848 = gamma_aa[index]*t58701*t58702*t58708*t58785*(1.6E1/3.0);
            double t58849 = gamma_aa[index]*t58700*t58701*t58785*1.6E1;
            double t58850 = t58846+t58847+t58848+t58849;
            double t58851 = gamma_bb[index]*gcab*t58703*(1.6E1/3.0);
            double t58852 = gamma_bb[index]*gcab*t58700*t58702*t58703*1.6E1;
            double t58853 = gamma_bb[index]*t58701*t58702*t58703*t58708*(1.6E1/3.0);
            double t58854 = gamma_bb[index]*t58700*t58701*t58703*1.6E1;
            double t58855 = t58851+t58852+t58853+t58854;
            double t58856 = gamma_aa[index]*gcab*t58785*4.0;
            double t58857 = gamma_aa[index]*gcab*t58700*t58702*t58785*4.0;
            double t58858 = gamma_aa[index]*t58700*t58701*t58785*8.0;
            double t58859 = t58856+t58857+t58858;
            double t58860 = gamma_bb[index]*gcab*t58703*4.0;
            double t58861 = gamma_bb[index]*gcab*t58700*t58702*t58703*4.0;
            double t58862 = gamma_bb[index]*t58700*t58701*t58703*8.0;
            double t58863 = t58860+t58861+t58862;
            v_rho_a_rho_b_[index] = (t58626+t58783+t58784+rho_a[index]*(-t58692+t58602*t58696*(t58692-(1/(t58668* \
               t58668)*t58699*(b2f*c*t58669*(1.0/3.0)+b4f*t58584*t58675*(2.0/3.0)+b1f*c*t58676*t58669*(1.0/6.0)+b3f* \
               c*t58661*t58669*(1.0/2.0)))/t58679+a1f*c*c0f*t58669*t58697*(2.0/3.0)-a1p*c*c0p*t58693*t58669*(2.0/ \
               3.0))+a1p*c*c0p*t58693*t58669*(2.0/3.0))+t58577*(t58830+t58724+t58833+t58744+t58637-a1p*c*c0p*t58615* \
               t58589*(2.0/3.0)-t58602*t58621*t58616*t58627*t58638*4.0-t58602*t58621*t58624*t58627*t58794-Aa*t58602* \
               t58621*t58651*t58639*t58649*(t58734-t58624*t58596*t58597*4.0)*2.0-Aa*a1a*c*t58602*t58621*t58639*t58649* \
               t58658*t58589*(2.0/3.0))-c0p*t58684*t58693*2.0-t58602*t58835*t58696)*(ccab1*gamma_bb[index]*gcab*t58703* \
               t58787*(4.0/3.0)-ccab2*t58700*t58702*t58845*t58789-ccab4*t58708*t58709*t58855*t58788-ccab1*gamma_bb[index]* \
               t58700*t58701*t58703*t58791*(4.0/3.0)+ccab2*gamma_bb[index]*t58700*t58701*t58703*t58792*(8.0/3.0)+ \
               ccab3*gamma_bb[index]*gcab*t58700*t58702*t58703*t58793*4.0+ccab4*gamma_bb[index]*t58701*t58702*t58703* \
               t58708*t58790*(1.6E1/3.0)-ccab3*gcab*t58700*t58701*t58702*t58863*t58786)-(rho_a[index]*(t58836+t58602* \
               t58835*t58696)+rho_b[index]*(t58839+t58602*t58838*t58696)-t58577*(t58626+t58783+t58784))*(ccab4*t58708* \
               t58709*t58788*(gamma_aa[index]*gamma_bb[index]*t58700*t58703*t58785*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]* \
               t58702*t58703*t58708*t58785*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t58700*t58701*t58703* \
               t58785*(1.28E2/3.0))-ccab2*t58700*t58702*t58842*1/(t58719*t58719*t58719)*t58845*2.0-ccab4*1/(t58714* \
               t58714*t58714)*t58850*t58708*t58709*t58855*2.0+ccab3*gcab*t58700*t58701*t58702*t58786*(gamma_aa[index]* \
               gamma_bb[index]*t58700*t58703*t58785*(3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t58700*t58701* \
               t58703*t58785*(3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]*t58700*t58703*t58791*t58785*(3.2E1/ \
               9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t58700*t58703*t58792*t58785*(3.2E1/9.0)+ccab2*gamma_bb[index]* \
               t58700*t58701*t58703*t58842*t58789*(8.0/3.0)+ccab2*gamma_aa[index]*t58700*t58701*t58845*t58785*t58789* \
               (8.0/3.0)-ccab3*gcab*t58700*t58701*t58702*1/(t58723*t58723*t58723)*t58863*t58859*2.0-ccab4*gamma_aa[index]* \
               gamma_bb[index]*t58702*t58703*t58708*t58790*t58785*(6.4E1/3.0)+ccab2*gamma_aa[index]*gamma_bb[index]* \
               t58702*t58703*t58708*t58785*t58789*(3.2E1/9.0)+ccab3*gamma_bb[index]*gcab*t58700*t58702*t58703*t58786* \
               t58859*4.0+ccab3*gamma_aa[index]*gcab*t58700*t58702*t58863*t58785*t58786*4.0+ccab4*gamma_bb[index]* \
               t58701*t58702*t58703*t58850*t58708*t58788*(1.6E1/3.0)+ccab4*gamma_aa[index]*t58701*t58702*t58708*t58855* \
               t58785*t58788*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t58700*t58701*t58703*t58793*t58785* \
               (3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t58700*t58701*t58703*1/(t58716*t58716*t58716) \
               *t58785*(3.2E1/9.0))+(ccab0+ccab1*gcab*t58701*t58787+ccab2*t58700*t58702*t58792+ccab4*t58708*t58709* \
               t58790+ccab3*gcab*t58700*t58701*t58702*t58793)*(-t58830+t58831+t58832-t58833+t58829+t58577*(t58814+ \
               t58817+t58809-t58630*t58801*t58810*t58595*2.0-a1p*c*c0p*t58615*t58796*(8.0/9.0)-t58602*t58621*t58624* \
               t58627*(t58814+t58817+t58809-t58630*t58801*t58810*t58595*2.0+t58811*t58614*1/(t58608*t58608*t58608) \
               *t58726*2.0-t58614*t58726*t58727*(b2f*c*t58796*(4.0/9.0)+b4f*t58584*t58797*(1.0E1/9.0)+b1f*c*t58629* \
               t58796*(2.0/9.0)+b3f*c*t58580*t58796*(2.0/3.0)-b1f*t58802*t58584*t58797*(1.0/3.6E1)+b3f*t58584*t58629* \
               t58797*(1.0/1.2E1))-1/(t58611*t58611)*t58603*t58811*t58614*1/(t58608*t58608*t58608*t58608)*(1.0/2.0) \
               +a1f*c*c0f*t58612*t58796*(8.0/9.0)-a1p*c*c0p*t58615*t58796*(8.0/9.0)-a1f*c*t58732*t58726*t58727*t58589* \
               (2.0/3.0))-t58602*t58621*t58616*t58627*t58818*2.0E1+t58602*t58621*t58624*t58616*t58597*1.2E1+t58602* \
               t58621*t58815*t58627*t58638*8.0+t58602*t58624*t58616*t58627*t58826+t58602*t58624*t58815*t58627*t58736- \
               t58602*t58624*t58815*t58627*t58656-t58602*t58616*t58627*t58736*t58638*4.0+t58602*t58616*t58627*t58638* \
               t58656*4.0+t58602*t58624*t58616*t58736*t58596*t58597*4.0+t58602*t58624*t58616*t58656*t58596*t58597* \
               4.0+Aa*t58602*t58820*t58651*t58656*t58639*t58649*2.0-Aa*t58602*t58651*t58736*t58639*t58828*t58649* \
               2.0+Aa*t58602*t58651*t58826*t58639*t58649*t58658*2.0-Aa*t58602*t58621*t58651*t58639*t58649*(t58627* \
               t58818*2.0E1-t58624*t58597*1.2E1)*2.0+t58602*t58621*t58820*t58651*t58743*t58737*t58639*t58738+t58602* \
               t58621*t58651*t58743*t58737*t58639*t58738*t58828+t58602*t58651*t58743*t58736*t58737*t58639*t58738* \
               t58658-t58602*t58651*t58743*t58656*t58737*t58639*t58738*t58658-t58602*t58621*t58651*1/(t58645*t58645* \
               t58645)*t58737*t58827*t58639*t58658*2.0+t58602*t58621*t58651*t58737*t58639*t58738*t58658*(b2a*c*t58796* \
               (4.0/9.0)+b4a*t58584*t58797*(1.0E1/9.0)+b1a*c*t58629*t58796*(2.0/9.0)+b3a*c*t58580*t58796*(2.0/3.0) \
               -b1a*t58802*t58584*t58797*(1.0/3.6E1)+b3a*t58584*t58629*t58797*(1.0/1.2E1))-Aa*a1a*c*t58602*t58621* \
               t58820*t58639*t58649*t58589*(2.0/3.0)-Aa*a1a*c*t58602*t58621*t58639*t58828*t58649*t58589*(2.0/3.0) \
               -Aa*a1a*c*t58602*t58621*t58639*t58649*t58658*t58796*(8.0/9.0)-Aa*a1a*c*t58602*t58736*t58639*t58649* \
               t58658*t58589*(2.0/3.0)+Aa*a1a*c*t58602*t58656*t58639*t58649*t58658*t58589*(2.0/3.0)+t58602*t58621* \
               t58640*t58651*1/(t58645*t58645*t58645*t58645)*t58827*t58639*1/(t58648*t58648)*t58658*(1.0/2.0)+a1a* \
               c*t58602*t58621*t58743*t58737*t58639*t58738*t58658*t58589*(2.0/3.0))-t58630*t58631*t58636*t58595*2.0+ \
               a1p*c*c0p*t58615*t58589*(4.0/3.0)-t58602*t58621*t58624*t58815*t58627*2.0+t58602*t58621*t58616*t58627* \
               t58638*8.0+Aa*t58602*t58621*t58651*t58639*t58649*(t58734-t58819)*2.0-t58602*t58621*t58651*t58743*t58737* \
               t58639*t58738*t58658*2.0+Aa*a1a*c*t58602*t58621*t58639*t58649*t58658*t58589*(4.0/3.0))+(t58626+t58783+ \
               t58784-t58577*(t58831+t58724+t58832-t58744-t58637+t58829+t58795+t58602*t58621*t58616*t58627*t58638* \
               4.0+t58602*t58621*t58624*t58627*t58794+Aa*a1a*c*t58602*t58621*t58639*t58649*t58658*t58589*(2.0/3.0) \
               )+rho_b[index]*(-t58778+t58602*t58696*(t58778-(1/(t58754*t58754)*t58782*(b2f*c*t58755*(1.0/3.0)+b4f* \
               t58761*t58584*(2.0/3.0)+b1f*c*t58762*t58755*(1.0/6.0)+b3f*c*t58755*t58747*(1.0/2.0)))/t58765+a1f*c* \
               c0f*t58780*t58755*(2.0/3.0)-a1p*c*c0p*t58755*t58779*(2.0/3.0))+a1p*c*c0p*t58755*t58779*(2.0/3.0))- \
               c0p*t58770*t58779*2.0-t58602*t58838*t58696)*(ccab1*gamma_aa[index]*gcab*t58785*t58787*(4.0/3.0)-ccab2* \
               t58700*t58702*t58842*t58789-ccab4*t58850*t58708*t58709*t58788-ccab1*gamma_aa[index]*t58700*t58701* \
               t58791*t58785*(4.0/3.0)+ccab2*gamma_aa[index]*t58700*t58701*t58792*t58785*(8.0/3.0)+ccab3*gamma_aa[index]* \
               gcab*t58700*t58702*t58793*t58785*4.0+ccab4*gamma_aa[index]*t58701*t58702*t58708*t58790*t58785*(1.6E1/ \
               3.0)-ccab3*gcab*t58700*t58701*t58702*t58786*t58859);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t58865 = rho_a[index]+rho_b[index];
            double t58866 = 1/pow(t58865,1.0/3.0);
            double t58867 = c*t58866;
            double t58868 = sqrt(t58867);
            double t58869 = b1p*t58868;
            double t58870 = pow(t58867,3.0/2.0);
            double t58871 = b3p*t58870;
            double t58872 = c*c;
            double t58873 = 1/pow(t58865,2.0/3.0);
            double t58874 = b4p*t58872*t58873;
            double t58875 = b2p*c*t58866;
            double t58876 = t58871+t58874+t58875+t58869;
            double t58877 = 1/pow(t58865,4.0/3.0);
            double t58878 = 1/c0p;
            double t58879 = 1/t58876;
            double t58880 = t58878*t58879*(1.0/2.0);
            double t58881 = t58880+1.0;
            double t58882 = a1p*c*t58866;
            double t58883 = t58882+1.0;
            double t58884 = rho_a[index]-rho_b[index];
            double t58885 = t58884*t58884;
            double t58886 = 1/t58865;
            double t58887 = t58884*t58886;
            double t58888 = two_13*2.0;
            double t58889 = t58888-2.0;
            double t58890 = 1/t58889;
            double t58891 = 1/c0f;
            double t58892 = b1f*t58868;
            double t58893 = b3f*t58870;
            double t58894 = b4f*t58872*t58873;
            double t58895 = b2f*c*t58866;
            double t58896 = t58892+t58893+t58894+t58895;
            double t58897 = 1/t58896;
            double t58898 = t58891*t58897*(1.0/2.0);
            double t58899 = t58898+1.0;
            double t58900 = log(t58899);
            double t58901 = a1f*c*t58866;
            double t58902 = t58901+1.0;
            double t58903 = log(t58881);
            double t58914 = c0f*t58900*t58902*2.0;
            double t58915 = c0p*t58903*t58883*2.0;
            double t58904 = t58914-t58915;
            double t58905 = t58887+1.0;
            double t58906 = pow(t58905,4.0/3.0);
            double t58907 = -t58887+1.0;
            double t58908 = pow(t58907,4.0/3.0);
            double t58909 = t58906+t58908-2.0;
            double t58910 = 1/(t58865*t58865);
            double t58911 = t58910*t58884;
            double t58912 = t58911+t58886;
            double t58913 = 1/(t58865*t58865*t58865*t58865);
            double t58916 = t58885*t58885;
            double t58917 = 1/pow(t58865,5.0/3.0);
            double t58918 = 1/sqrt(t58867);
            double t58919 = 1/t58881;
            double t58920 = 1/(t58876*t58876);
            double t58921 = b4p*t58872*t58917*(2.0/3.0);
            double t58922 = b2p*c*t58877*(1.0/3.0);
            double t58923 = b1p*c*t58918*t58877*(1.0/6.0);
            double t58924 = b3p*c*t58868*t58877*(1.0/2.0);
            double t58925 = t58921+t58922+t58923+t58924;
            double t58926 = 1/(t58865*t58865*t58865*t58865*t58865);
            double t58927 = 1/d2fz0;
            double t58928 = 1/Aa;
            double t58929 = b1a*t58868;
            double t58930 = b3a*t58870;
            double t58931 = b4a*t58872*t58873;
            double t58932 = b2a*c*t58866;
            double t58933 = t58930+t58931+t58932+t58929;
            double t58934 = 1/t58933;
            double t58935 = t58934*t58928*(1.0/2.0);
            double t58936 = t58935+1.0;
            double t58937 = log(t58936);
            double t58938 = a1a*c*t58866;
            double t58939 = t58938+1.0;
            double t58940 = pow(t58905,1.0/3.0);
            double t58941 = t58912*t58940*(4.0/3.0);
            double t58942 = pow(t58907,1.0/3.0);
            double t59018 = t58912*t58942*(4.0/3.0);
            double t58943 = t58941-t59018;
            double t58944 = t58913*t58916;
            double t58945 = t58944-1.0;
            double t58946 = 1/pow(rho_b[index],1.0/3.0);
            double t58947 = c*t58946;
            double t58948 = sqrt(t58947);
            double t58949 = b1f*t58948;
            double t58950 = pow(t58947,3.0/2.0);
            double t58951 = b3f*t58950;
            double t58952 = 1/pow(rho_b[index],2.0/3.0);
            double t58953 = b4f*t58952*t58872;
            double t58954 = b2f*c*t58946;
            double t58955 = t58951+t58953+t58954+t58949;
            double t58956 = 1/pow(rho_b[index],4.0/3.0);
            double t58957 = b1p*t58948;
            double t58958 = b3p*t58950;
            double t58959 = b4p*t58952*t58872;
            double t58960 = b2p*c*t58946;
            double t58961 = t58960+t58957+t58958+t58959;
            double t58962 = 1/pow(rho_b[index],5.0/3.0);
            double t58963 = 1/sqrt(t58947);
            double t58964 = 1/t58955;
            double t58965 = t58891*t58964*(1.0/2.0);
            double t58966 = t58965+1.0;
            double t58967 = 1/t58961;
            double t58968 = t58967*t58878*(1.0/2.0);
            double t58969 = t58968+1.0;
            double t58970 = a1p*c*t58946;
            double t58971 = t58970+1.0;
            double t58972 = 1/t58969;
            double t58973 = 1/(t58961*t58961);
            double t58974 = b4p*t58872*t58962*(2.0/3.0);
            double t58975 = b2p*c*t58956*(1.0/3.0);
            double t58976 = b1p*c*t58963*t58956*(1.0/6.0);
            double t58977 = b3p*c*t58956*t58948*(1.0/2.0);
            double t58978 = t58974+t58975+t58976+t58977;
            double t58979 = t58971*t58972*t58973*t58978;
            double t58980 = log(t58969);
            double t58981 = pow(2.0,1.0/3.0);
            double t58982 = t58981*2.0;
            double t58983 = t58982-2.0;
            double t58984 = log(t58966);
            double t58985 = a1f*c*t58946;
            double t58986 = t58985+1.0;
            double t58987 = gcab*gcab;
            double t58991 = 1/pow(rho_a[index],8.0/3.0);
            double t58992 = gamma_aa[index]*t58991*(1.0/2.0);
            double t58993 = 1/pow(rho_b[index],8.0/3.0);
            double t58994 = gamma_bb[index]*t58993*(1.0/2.0);
            double t58988 = t58992+t58994;
            double t58989 = t58988*t58988;
            double t58990 = 1/pow(rho_b[index],1.1E1/3.0);
            double t58995 = t58987*t58987;
            double t58996 = t58989*t58989;
            double t58997 = t58987*t58989*6.0;
            double t58998 = gcab*t58987*t58988*t58989*4.0;
            double t58999 = t58995*t58996;
            double t59000 = gcab*t58988*4.0;
            double t59001 = t58997+t58998+t58999+t59000+1.0;
            double t59002 = gcab*t58988;
            double t59003 = t59002+1.0;
            double t59004 = t58987*t58989;
            double t59005 = gcab*t58988*2.0;
            double t59006 = t59004+t59005+1.0;
            double t59007 = t58987*t58989*3.0;
            double t59008 = gcab*t58987*t58988*t58989;
            double t59009 = gcab*t58988*3.0;
            double t59010 = t59007+t59008+t59009+1.0;
            double t59011 = a1p*c*c0p*t58903*t58877*(2.0/3.0);
            double t59012 = 1/t59006;
            double t59013 = 1/t59010;
            double t59014 = 1/t59003;
            double t59015 = 1/t59001;
            double t59016 = 1/pow(t58865,7.0/3.0);
            double t59017 = 1/pow(t58865,8.0/3.0);
            double t59019 = 1/t58899;
            double t59020 = 1/(t58896*t58896);
            double t59021 = b4f*t58872*t58917*(2.0/3.0);
            double t59022 = b2f*c*t58877*(1.0/3.0);
            double t59023 = b1f*c*t58918*t58877*(1.0/6.0);
            double t59024 = b3f*c*t58868*t58877*(1.0/2.0);
            double t59025 = t59021+t59022+t59023+t59024;
            double t59026 = t58902*t59020*t59025*t59019;
            double t59028 = t58920*t58925*t58883*t58919;
            double t59029 = a1f*c*c0f*t58900*t58877*(2.0/3.0);
            double t59027 = t59011+t59026-t59028-t59029;
            double t59030 = t58925*t58925;
            double t59031 = 1/pow(t58867,3.0/2.0);
            double t59032 = b4p*t58872*t59017*(1.0E1/9.0);
            double t59033 = b2p*c*t59016*(4.0/9.0);
            double t59034 = b1p*c*t58918*t59016*(2.0/9.0);
            double t59035 = b3p*c*t58868*t59016*(2.0/3.0);
            double t59036 = b3p*t58872*t58918*t59017*(1.0/1.2E1);
            double t59037 = t59032+t59033+t59034+t59035+t59036-b1p*t58872*t59031*t59017*(1.0/3.6E1);
            double t59038 = 1/(t58876*t58876*t58876);
            double t59039 = t58883*t58919*t59030*t59038*2.0;
            double t59040 = t59025*t59025;
            double t59041 = 1/(t58881*t58881);
            double t59042 = 1/(t58876*t58876*t58876*t58876);
            double t59043 = t58910*2.0;
            double t59044 = 1/(t58865*t58865*t58865);
            double t59045 = t58884*t59044*2.0;
            double t59046 = t59043+t59045;
            double t59047 = t58912*t58912;
            double t59048 = a1p*c*c0p*t58903*t59016*(8.0/9.0);
            double t59049 = 1/(t58865*t58865*t58865*t58865*t58865*t58865);
            double t59050 = t58913*t58884*t58885*4.0;
            double t59051 = t58916*t58926*4.0;
            double t59052 = t59050+t59051;
            double t59053 = t58940*t59046*(4.0/3.0);
            double t59054 = 1/pow(t58905,2.0/3.0);
            double t59055 = t59054*t59047*(4.0/9.0);
            double t59056 = 1/pow(t58907,2.0/3.0);
            double t59057 = t59047*t59056*(4.0/9.0);
            double t59058 = t59053+t59055+t59057-t58942*t59046*(4.0/3.0);
            double t59059 = 1/t58936;
            double t59060 = 1/(t58933*t58933);
            double t59061 = b4a*t58872*t58917*(2.0/3.0);
            double t59062 = b2a*c*t58877*(1.0/3.0);
            double t59063 = b1a*c*t58918*t58877*(1.0/6.0);
            double t59064 = b3a*c*t58868*t58877*(1.0/2.0);
            double t59065 = t59061+t59062+t59063+t59064;
            double t59066 = t59065*t59065;
            double t59067 = 1/t58966;
            double t59068 = b4f*t58872*t58962*(2.0/3.0);
            double t59069 = b2f*c*t58956*(1.0/3.0);
            double t59070 = b1f*c*t58963*t58956*(1.0/6.0);
            double t59071 = b3f*c*t58956*t58948*(1.0/2.0);
            double t59072 = t59070+t59071+t59068+t59069;
            double t59073 = 1/(t58955*t58955);
            double t59074 = 1/pow(rho_b[index],7.0/3.0);
            double t59075 = 1/pow(t58947,3.0/2.0);
            double t59076 = t59072*t59072;
            double t59077 = t58978*t58978;
            double t59078 = 1/(t58961*t58961*t58961);
            double t59079 = t58971*t58972*t59077*t59078*2.0;
            double t59080 = b4p*t58872*t58993*(1.0E1/9.0);
            double t59081 = b2p*c*t59074*(4.0/9.0);
            double t59082 = b3p*t58872*t58963*t58993*(1.0/1.2E1);
            double t59083 = b1p*c*t58963*t59074*(2.0/9.0);
            double t59084 = b3p*c*t58948*t59074*(2.0/3.0);
            double t59237 = b1p*t58872*t58993*t59075*(1.0/3.6E1);
            double t59085 = t59080+t59081+t59082+t59083+t59084-t59237;
            double t59086 = 1/(t58969*t58969);
            double t59087 = 1/(t58961*t58961*t58961*t58961);
            double t59088 = a1p*c*c0p*t58980*t59074*(8.0/9.0);
            double t59089 = a1f*c*c0f*t58956*t58984*(2.0/3.0);
            double t59090 = a1p*c*c0p*t58980*t58956*(2.0/3.0);
            double t59162 = t58986*t59072*t59073*t59067;
            double t59091 = t58979-t59090-t59162+t59089;
            double t59092 = gamma_bb[index]*gamma_bb[index];
            double t59093 = gcaa*gcaa;
            double t59094 = t59092*t59092;
            double t59095 = t59093*t59093;
            double t59096 = 1/pow(rho_b[index],3.2E1/3.0);
            double t59097 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t59098 = 1/pow(rho_b[index],1.6E1/3.0);
            double t59099 = 1/pow(rho_a[index],1.0/3.0);
            double t59100 = c*t59099;
            double t59101 = sqrt(t59100);
            double t59102 = pow(t59100,3.0/2.0);
            double t59103 = 1/pow(rho_a[index],2.0/3.0);
            double t59104 = b1p*t59101;
            double t59105 = b3p*t59102;
            double t59106 = b4p*t58872*t59103;
            double t59107 = b2p*c*t59099;
            double t59108 = t59104+t59105+t59106+t59107;
            double t59109 = 1/t59108;
            double t59110 = t58878*t59109*(1.0/2.0);
            double t59111 = t59110+1.0;
            double t59112 = log(t59111);
            double t59113 = a1p*c*t59099;
            double t59114 = t59113+1.0;
            double t59115 = c0p*t59112*t59114*2.0;
            double t59116 = c0f*t58984*t58986*2.0;
            double t59118 = c0p*t58971*t58980*2.0;
            double t59117 = t59116-t59118;
            double t59119 = t58904*t58913*t58916*t58890*t58909;
            double t59120 = Aa*t58890*t58909*t58927*t58945*t58937*t58939*2.0;
            double t59121 = gamma_bb[index]*gcab*t58990*(1.6E1/3.0);
            double t59122 = gamma_bb[index]*gcab*t58990*t58987*t58989*1.6E1;
            double t59123 = gamma_bb[index]*t58990*t58995*t58988*t58989*(1.6E1/3.0);
            double t59124 = gamma_bb[index]*t58990*t58987*t58988*1.6E1;
            double t59125 = t59121+t59122+t59123+t59124;
            double t59126 = 1/(t59003*t59003);
            double t59127 = 1/pow(rho_b[index],2.2E1/3.0);
            double t59128 = gamma_bb[index]*gcab*t58990*(8.0/3.0);
            double t59129 = gamma_bb[index]*t58990*t58987*t58988*(8.0/3.0);
            double t59130 = t59128+t59129;
            double t59131 = 1/(t59010*t59010);
            double t59132 = 1/pow(rho_b[index],1.4E1/3.0);
            double t59133 = 1/(t59001*t59001);
            double t59134 = 1/(t59006*t59006);
            double t59135 = gamma_bb[index]*gcab*t58990*4.0;
            double t59136 = gamma_bb[index]*gcab*t58990*t58987*t58989*4.0;
            double t59137 = gamma_bb[index]*t58990*t58987*t58988*8.0;
            double t59138 = t59135+t59136+t59137;
            double t59139 = t58890*t58983*t59117;
            double t59140 = t59118+t59139;
            double t59141 = gamma_bb[index]*gcaa*t58993*4.0;
            double t59142 = gamma_bb[index]*gcaa*t59092*t59093*t59097*4.0;
            double t59143 = t59092*t59093*t59098*6.0;
            double t59144 = t59094*t59095*t59096;
            double t59145 = t59141+t59142+t59143+t59144+1.0;
            double t59146 = 1/t59145;
            double t59147 = gamma_bb[index]*gcaa*t58993;
            double t59148 = t59147+1.0;
            double t59149 = 1/t59148;
            double t59150 = gamma_bb[index]*gcaa*t58993*3.0;
            double t59151 = gamma_bb[index]*gcaa*t59092*t59093*t59097;
            double t59152 = t59092*t59093*t59098*3.0;
            double t59153 = t59150+t59151+t59152+1.0;
            double t59154 = 1/t59153;
            double t59155 = gamma_bb[index]*gcaa*t58993*2.0;
            double t59156 = t59092*t59093*t59098;
            double t59157 = t59155+t59156+1.0;
            double t59158 = 1/t59157;
            double t59159 = 1/pow(rho_b[index],1.9E1/3.0);
            double t59160 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t59161 = 1/pow(rho_b[index],3.5E1/3.0);
            double t59163 = t58890*t58983*t59091;
            double t59164 = ccaa4*t59161*t59146*t59094*t59095*(3.2E1/3.0);
            double t59165 = ccaa1*gamma_bb[index]*gcaa*t58990*t59149*(8.0/3.0);
            double t59166 = ccaa3*gamma_bb[index]*gcaa*t59160*t59154*t59092*t59093*8.0;
            double t59167 = ccaa2*t59092*t59093*t59158*t59159*(1.6E1/3.0);
            double t59168 = 1/(t59148*t59148);
            double t59169 = gamma_bb[index]*gcaa*t58990*8.0;
            double t59170 = gamma_bb[index]*gcaa*t59160*t59092*t59093*8.0;
            double t59171 = t59092*t59093*t59159*1.6E1;
            double t59172 = t59170+t59171+t59169;
            double t59173 = 1/(t59153*t59153);
            double t59174 = gamma_bb[index]*gcaa*t58990*(3.2E1/3.0);
            double t59175 = gamma_bb[index]*gcaa*t59160*t59092*t59093*3.2E1;
            double t59176 = t59092*t59093*t59159*3.2E1;
            double t59177 = t59161*t59094*t59095*(3.2E1/3.0);
            double t59178 = t59174+t59175+t59176+t59177;
            double t59179 = 1/(t59145*t59145);
            double t59180 = gamma_bb[index]*gcaa*t58990*(1.6E1/3.0);
            double t59181 = t59092*t59093*t59159*(1.6E1/3.0);
            double t59182 = t59180+t59181;
            double t59183 = 1/(t59157*t59157);
            double t59184 = t59164+t59165+t59166+t59167-ccaa1*t59092*t59093*t59159*t59168*(8.0/3.0)-ccaa2*t59092* \
               t59182*t59093*t59183*t59098-ccaa4*t59094*t59095*t59096*t59178*t59179-ccaa3*gamma_bb[index]*gcaa*t59172* \
               t59092*t59173*t59093*t59097;
            double t59185 = -t58979+t59090+t59163;
            double t59186 = gx*gx;
            double t59187 = t59186*t59186;
            double t59188 = 1/pow(rho_b[index],1.0E1);
            double t59189 = gamma_bb[index]*gx*t58993;
            double t59190 = t59189+1.0;
            double t59210 = gamma_bb[index]*gx*t58990*(3.2E1/3.0);
            double t59211 = gamma_bb[index]*gx*t59160*t59092*t59186*3.2E1;
            double t59212 = t59092*t59159*t59186*3.2E1;
            double t59213 = t59161*t59094*t59187*(3.2E1/3.0);
            double t59191 = t59210+t59211+t59212+t59213;
            double t59192 = gamma_bb[index]*gx*t58993*4.0;
            double t59193 = gamma_bb[index]*gx*t59092*t59186*t59097*4.0;
            double t59194 = t59092*t59186*t59098*6.0;
            double t59195 = t59094*t59096*t59187;
            double t59196 = t59192+t59193+t59194+t59195+1.0;
            double t59216 = gamma_bb[index]*gx*t58990*(1.6E1/3.0);
            double t59217 = t59092*t59159*t59186*(1.6E1/3.0);
            double t59197 = t59216+t59217;
            double t59198 = gamma_bb[index]*gx*t58993*2.0;
            double t59199 = t59092*t59186*t59098;
            double t59200 = t59198+t59199+1.0;
            double t59201 = gamma_bb[index]*gx*t58993*3.0;
            double t59202 = gamma_bb[index]*gx*t59092*t59186*t59097;
            double t59203 = t59092*t59186*t59098*3.0;
            double t59204 = t59201+t59202+t59203+1.0;
            double t59205 = 1/(t59204*t59204);
            double t59206 = gamma_bb[index]*gx*t58990*8.0;
            double t59207 = gamma_bb[index]*gx*t59160*t59092*t59186*8.0;
            double t59208 = t59092*t59159*t59186*1.6E1;
            double t59209 = t59206+t59207+t59208;
            double t59214 = 1/pow(rho_b[index],3.8E1/3.0);
            double t59215 = 1/(t59196*t59196);
            double t59218 = 1/(t59200*t59200);
            double t59219 = 1/t59196;
            double t59220 = 1/t59190;
            double t59221 = 1/t59204;
            double t59222 = 1/t59200;
            double t59223 = 1/(t59190*t59190);
            double t59224 = ccaa4*t59146*t59094*t59095*t59096;
            double t59225 = ccaa1*gamma_bb[index]*gcaa*t58993*t59149;
            double t59226 = ccaa3*gamma_bb[index]*gcaa*t59154*t59092*t59093*t59097;
            double t59227 = ccaa2*t59092*t59093*t59158*t59098;
            double t59228 = ccaa0+t59224+t59225+t59226+t59227;
            double t59229 = 1/(t58955*t58955*t58955);
            double t59230 = b4f*t58872*t58993*(1.0E1/9.0);
            double t59231 = b2f*c*t59074*(4.0/9.0);
            double t59232 = b3f*t58872*t58963*t58993*(1.0/1.2E1);
            double t59233 = b1f*c*t58963*t59074*(2.0/9.0);
            double t59234 = b3f*c*t58948*t59074*(2.0/3.0);
            double t59235 = t59230+t59231+t59232+t59233+t59234-b1f*t58872*t58993*t59075*(1.0/3.6E1);
            double t59236 = t58986*t59073*t59235*t59067;
            double t59238 = t58971*t58972*t58973*t59085;
            double t59239 = 1/(t58966*t58966);
            double t59240 = 1/(t58955*t58955*t58955*t58955);
            double t59241 = t58891*t58986*t59240*t59076*t59239*(1.0/2.0);
            double t59242 = t58971*t58878*t59077*t59086*t59087*(1.0/2.0);
            double t59243 = a1f*c*t58956*t59072*t59073*t59067*(2.0/3.0);
            double t59244 = a1p*c*t58972*t58973*t58956*t58978*(2.0/3.0);
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t58988*t59014+ccab2*t58987*t58989*t59012+ccab4*t58995*t58996* \
               t59015+ccab3*gcab*t58987*t58988*t58989*t59013)*(-rho_b[index]*(t59242+t59244+t59238-t59079-t59088+ \
               t58890*t58983*(t59241+t59243+t59236+t59079+t59088-t58971*t58972*t58973*t59085-t58986*t59067*t59076* \
               t59229*2.0-a1f*c*c0f*t58984*t59074*(8.0/9.0)-t58971*t58878*t59077*t59086*t59087*(1.0/2.0)-a1p*c*t58972* \
               t58973*t58956*t58978*(2.0/3.0)))-t58865*(t59039+t59048-t58920*t58883*t58919*t59037-t58913*t58916*t58890* \
               t58909*(t59039+t59048-t58920*t58883*t58919*t59037-t58902*1/(t58896*t58896*t58896)*t59040*t59019*2.0+ \
               t58902*t59020*t59019*(b2f*c*t59016*(4.0/9.0)+b4f*t58872*t59017*(1.0E1/9.0)+b1f*c*t58918*t59016*(2.0/ \
               9.0)+b3f*c*t58868*t59016*(2.0/3.0)-b1f*t58872*t59031*t59017*(1.0/3.6E1)+b3f*t58872*t58918*t59017*(1.0/ \
               1.2E1))+t58902*t58891*1/(t58896*t58896*t58896*t58896)*1/(t58899*t58899)*t59040*(1.0/2.0)-a1f*c*c0f* \
               t58900*t59016*(8.0/9.0)-t58883*t58878*t59030*t59041*t59042*(1.0/2.0)+a1f*c*t58877*t59020*t59025*t59019* \
               (2.0/3.0)-a1p*c*t58920*t58925*t58919*t58877*(2.0/3.0))+t58904*t58916*t58943*t58890*t58926*8.0+t58904* \
               t58913*t58890*t58909*t58885*1.2E1-t58913*t58916*t58943*t58890*t59027*2.0+t58904*t58913*t58916*t58890* \
               t59058+t58904*t58916*t58890*t58909*t59049*2.0E1-t58916*t58890*t58926*t58909*t59027*8.0-t58883*t58878* \
               t59030*t59041*t59042*(1.0/2.0)+t58904*t58913*t58943*t58890*t58884*t58885*8.0+t58904*t58890*t58926* \
               t58909*t58884*t58885*3.2E1-t58913*t58890*t58909*t58884*t58885*t59027*8.0-a1p*c*t58920*t58925*t58919* \
               t58877*(2.0/3.0)+Aa*t58943*t58890*t58927*t58937*t58939*t59052*4.0+Aa*t58890*t58927*t58945*t58937*t58939* \
               t59058*2.0+Aa*t58890*t58909*t58927*t58937*t58939*(t58913*t58885*1.2E1+t58916*t59049*2.0E1+t58926*t58884* \
               t58885*3.2E1)*2.0-t58943*t58890*t58927*t58945*t58939*t59060*t59065*t59059*2.0-t58890*t58909*t58927* \
               t58939*t59060*t59052*t59065*t59059*2.0+1/(t58933*t58933*t58933)*t58890*t58909*t58927*t58945*t58939* \
               t59066*t59059*2.0-t58890*t58909*t58927*t58945*t58939*t59060*t59059*(b2a*c*t59016*(4.0/9.0)+b4a*t58872* \
               t59017*(1.0E1/9.0)+b1a*c*t58918*t59016*(2.0/9.0)+b3a*c*t58868*t59016*(2.0/3.0)-b1a*t58872*t59031*t59017* \
               (1.0/3.6E1)+b3a*t58872*t58918*t59017*(1.0/1.2E1))+Aa*a1a*c*t58943*t58890*t58927*t58945*t58937*t58877* \
               (4.0/3.0)+Aa*a1a*c*t58890*t58909*t58927*t58945*t58937*t59016*(8.0/9.0)+Aa*a1a*c*t58890*t58909*t58927* \
               t58937*t58877*t59052*(4.0/3.0)-1/(t58933*t58933*t58933*t58933)*t58890*t58909*t58927*1/(t58936*t58936) \
               *t58945*t58928*t58939*t59066*(1.0/2.0)-a1a*c*t58890*t58909*t58927*t58945*t58877*t59060*t59065*t59059* \
               (2.0/3.0))-t58890*t58983*t59091*2.0-t58920*t58925*t58883*t58919*2.0+t58971*t58972*t58973*t58978*2.0+ \
               a1p*c*c0p*t58903*t58877*(4.0/3.0)-a1p*c*c0p*t58980*t58956*(4.0/3.0)+t58904*t58913*t58916*t58943*t58890* \
               2.0+t58904*t58916*t58890*t58926*t58909*8.0-t58913*t58916*t58890*t58909*t59027*2.0+t58904*t58913*t58890* \
               t58909*t58884*t58885*8.0+Aa*t58943*t58890*t58927*t58945*t58937*t58939*4.0+Aa*t58890*t58909*t58927* \
               t58937*t58939*t59052*4.0-t58890*t58909*t58927*t58945*t58939*t59060*t59065*t59059*2.0+Aa*a1a*c*t58890* \
               t58909*t58927*t58945*t58937*t58877*(4.0/3.0))+(rho_b[index]*t59140+rho_a[index]*(t59115-t58890*t58983* \
               (t59115-c0f*log((t58891*(1.0/2.0))/(b1f*t59101+b3f*t59102+b2f*c*t59099+b4f*t58872*t59103)+1.0)*(a1f* \
               c*t59099+1.0)*2.0))-t58865*(t58915+t59120+t59119))*(-ccab2*t58987*t58989*t59134*(gamma_bb[index]*gcab* \
               t59132*(8.8E1/9.0)+t58987*t59127*t59092*(3.2E1/9.0)+gamma_bb[index]*t58987*t58988*t59132*(8.8E1/9.0) \
               )+ccab4*t58995*t58996*1/(t59001*t59001*t59001)*(t59125*t59125)*2.0+ccab2*t58987*t58989*(t59130*t59130) \
               *1/(t59006*t59006*t59006)*2.0+ccab1*gamma_bb[index]*gcab*t59014*t59132*(4.4E1/9.0)+ccab2*t58987*t59012* \
               t59127*t59092*(3.2E1/9.0)-ccab1*t58987*t59126*t59127*t59092*(3.2E1/9.0)-ccab4*t58995*t58996*t59133* \
               (gamma_bb[index]*gcab*t59132*(1.76E2/9.0)+t58987*t59127*t59092*(6.4E1/3.0)+gamma_bb[index]*t58987* \
               t58988*t59132*(1.76E2/3.0)+t58995*t58989*t59127*t59092*(6.4E1/3.0)+gamma_bb[index]*gcab*t58987*t58989* \
               t59132*(1.76E2/3.0)+gamma_bb[index]*t58995*t58988*t58989*t59132*(1.76E2/9.0)+gcab*t58987*t58988*t59127* \
               t59092*(1.28E2/3.0))+ccab4*t58995*t58989*t59015*t59127*t59092*(6.4E1/3.0)+ccab2*gamma_bb[index]*t58987* \
               t58988*t59012*t59132*(8.8E1/9.0)-ccab1*gamma_bb[index]*t58987*t58988*t59132*t59126*(4.4E1/9.0)+ccab3* \
               gcab*t58987*t58988*t58989*1/(t59010*t59010*t59010)*(t59138*t59138)*2.0+ccab3*gamma_bb[index]*gcab* \
               t58987*t58989*t59013*t59132*(4.4E1/3.0)-ccab2*gamma_bb[index]*t58990*t58987*t58988*t59130*t59134*(1.6E1/ \
               3.0)+ccab4*gamma_bb[index]*t58995*t58988*t58989*t59015*t59132*(1.76E2/9.0)+ccab3*gcab*t58987*t58988* \
               t59013*t59127*t59092*(3.2E1/3.0)+ccab1*gcab*t58987*t58988*1/(t59003*t59003*t59003)*t59127*t59092*(3.2E1/ \
               9.0)-ccab3*gcab*t58987*t58988*t58989*t59131*(gamma_bb[index]*gcab*t59132*(4.4E1/3.0)+t58987*t59127* \
               t59092*(3.2E1/3.0)+gamma_bb[index]*t58987*t58988*t59132*(8.8E1/3.0)+gamma_bb[index]*gcab*t58987*t58989* \
               t59132*(4.4E1/3.0)+gcab*t58987*t58988*t59127*t59092*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t58990* \
               t58987*t58989*t59131*t59138*8.0-ccab4*gamma_bb[index]*t58990*t58995*t58988*t58989*t59133*t59125*(3.2E1/ \
               3.0))+(t58915+t59120+t59119+rho_b[index]*(-t58979+t59090+t58890*t58983*(t58979+t59089-t58986*t59072* \
               t59073*t59067-a1p*c*c0p*t58980*t58956*(2.0/3.0)))-t58865*(t59011-t58920*t58925*t58883*t58919+t58904* \
               t58913*t58916*t58943*t58890+t58904*t58916*t58890*t58926*t58909*4.0-t58913*t58916*t58890*t58909*t59027+ \
               t58904*t58913*t58890*t58909*t58884*t58885*4.0+Aa*t58943*t58890*t58927*t58945*t58937*t58939*2.0+Aa* \
               t58890*t58909*t58927*t58937*t58939*t59052*2.0-t58890*t58909*t58927*t58945*t58939*t59060*t59065*t59059+ \
               Aa*a1a*c*t58890*t58909*t58927*t58945*t58937*t58877*(2.0/3.0))-c0p*t58971*t58980*2.0-t58890*t58983* \
               t59117)*(ccab1*gamma_bb[index]*gcab*t58990*t59014*(4.0/3.0)-ccab2*t58987*t58989*t59130*t59134-ccab4* \
               t58995*t58996*t59133*t59125+ccab2*gamma_bb[index]*t58990*t58987*t58988*t59012*(8.0/3.0)-ccab1*gamma_bb[index]* \
               t58990*t58987*t58988*t59126*(4.0/3.0)+ccab3*gamma_bb[index]*gcab*t58990*t58987*t58989*t59013*4.0+ccab4* \
               gamma_bb[index]*t58990*t58995*t58988*t58989*t59015*(1.6E1/3.0)-ccab3*gcab*t58987*t58988*t58989*t59131* \
               t59138)*2.0+t59140*t59184*2.0+t59228*t59185*2.0-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]* \
               gx*t58990*t59220*(8.0/3.0)-cx1*t59223*t59092*t59159*t59186*(8.0/3.0)+cx2*t59222*t59092*t59159*t59186* \
               (1.6E1/3.0)+cx4*t59161*t59219*t59094*t59187*(3.2E1/3.0)-cx2*t59092*t59218*t59186*t59098*t59197-cx4* \
               t59215*t59191*t59094*t59096*t59187+cx3*gamma_bb[index]*gx*t59221*t59160*t59092*t59186*8.0-cx3*gamma_bb[index]* \
               gx*t59205*t59092*t59209*t59186*t59097)*(8.0/3.0)-rho_b[index]*t59140*(ccaa1*gamma_bb[index]*gcaa*t59132* \
               t59149*(8.8E1/9.0)-ccaa1*t59127*t59092*t59093*t59168*2.4E1+ccaa2*t59127*t59092*t59093*t59158*(3.04E2/ \
               9.0)+ccaa4*t59214*t59146*t59094*t59095*(1.12E3/9.0)-ccaa2*t59092*t59182*t59093*t59183*t59159*(3.2E1/ \
               3.0)-ccaa4*t59161*t59094*t59095*t59178*t59179*(6.4E1/3.0)-ccaa2*t59092*t59093*t59183*t59098*(gamma_bb[index]* \
               gcaa*t59132*(1.76E2/9.0)+t59127*t59092*t59093*(3.04E2/9.0))-ccaa4*t59094*t59095*t59096*t59179*(gamma_bb[index]* \
               gcaa*t59132*(3.52E2/9.0)+t59127*t59092*t59093*(6.08E2/3.0)+t59214*t59094*t59095*(1.12E3/9.0)+gamma_bb[index]* \
               gcaa*t59092*t59093*t59188*2.88E2)+ccaa2*t59092*(t59182*t59182)*t59093*1/(t59157*t59157*t59157)*t59098* \
               2.0+ccaa4*1/(t59145*t59145*t59145)*t59094*t59095*t59096*(t59178*t59178)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t59154*t59092*t59093*t59188*7.2E1+ccaa1*gamma_bb[index]*gcaa*t59092*t59093*1/(t59148*t59148*t59148) \
               *t59188*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*1/(t59153*t59153*t59153)*(t59172*t59172)*t59092*t59093* \
               t59097*2.0-ccaa3*gamma_bb[index]*gcaa*t59092*t59173*t59093*t59097*(gamma_bb[index]*gcaa*t59132*(8.8E1/ \
               3.0)+t59127*t59092*t59093*(3.04E2/3.0)+gamma_bb[index]*gcaa*t59092*t59093*t59188*7.2E1)-ccaa3*gamma_bb[index]* \
               gcaa*t59160*t59172*t59092*t59173*t59093*1.6E1)+rho_b[index]*t59228*(t59242+t59244+t59238-t59079-t59088+ \
               t58890*t58983*(t59241-t59242+t59243-t59244+t59236-t59238+t59079+t59088-t58986*t59067*t59076*t59229* \
               2.0-a1f*c*c0f*t58984*t59074*(8.0/9.0)))-rho_b[index]*t59184*t59185*2.0+c0*pow(rho_b[index],4.0/3.0) \
               *(cx1*gamma_bb[index]*gx*t59220*t59132*(8.8E1/9.0)-cx1*t59223*t59127*t59092*t59186*2.4E1+cx2*t59222* \
               t59127*t59092*t59186*(3.04E2/9.0)+cx4*t59214*t59219*t59094*t59187*(1.12E3/9.0)-cx2*t59092*t59218*t59159* \
               t59186*t59197*(3.2E1/3.0)-cx4*t59161*t59215*t59191*t59094*t59187*(6.4E1/3.0)-cx2*t59092*t59218*t59186* \
               t59098*(gamma_bb[index]*gx*t59132*(1.76E2/9.0)+t59127*t59092*t59186*(3.04E2/9.0))-cx4*t59215*t59094* \
               t59096*t59187*(gamma_bb[index]*gx*t59132*(3.52E2/9.0)+t59214*t59094*t59187*(1.12E3/9.0)+t59127*t59092* \
               t59186*(6.08E2/3.0)+gamma_bb[index]*gx*t59092*t59186*t59188*2.88E2)+cx2*1/(t59200*t59200*t59200)*t59092* \
               t59186*t59098*(t59197*t59197)*2.0+cx4*(t59191*t59191)*t59094*t59096*t59187*1/(t59196*t59196*t59196) \
               *2.0+cx3*gamma_bb[index]*gx*t59221*t59092*t59186*t59188*7.2E1+cx1*gamma_bb[index]*gx*1/(t59190*t59190* \
               t59190)*t59092*t59186*t59188*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*1/(t59204*t59204*t59204)*t59092*(t59209* \
               t59209)*t59186*t59097*2.0-cx3*gamma_bb[index]*gx*t59205*t59092*t59186*t59097*(gamma_bb[index]*gx*t59132* \
               (8.8E1/3.0)+t59127*t59092*t59186*(3.04E2/3.0)+gamma_bb[index]*gx*t59092*t59186*t59188*7.2E1)-cx3*gamma_bb[index]* \
               gx*t59160*t59205*t59092*t59209*t59186*1.6E1)+c0*t58952*(cx0+cx1*gamma_bb[index]*gx*t58993*t59220+cx2* \
               t59222*t59092*t59186*t59098+cx4*t59219*t59094*t59096*t59187+cx3*gamma_bb[index]*gx*t59221*t59092*t59186* \
               t59097)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t61011 = 1/pow(rho_b[index],1.0/3.0);
            double t61012 = c*t61011;
            double t61013 = sqrt(t61012);
            double t61014 = b1f*t61013;
            double t61015 = pow(t61012,3.0/2.0);
            double t61016 = b3f*t61015;
            double t61017 = c*c;
            double t61018 = 1/pow(rho_b[index],2.0/3.0);
            double t61019 = b4f*t61017*t61018;
            double t61020 = b2f*c*t61011;
            double t61021 = t61020+t61014+t61016+t61019;
            double t61022 = 1/pow(rho_b[index],4.0/3.0);
            double t61023 = b1p*t61013;
            double t61024 = b3p*t61015;
            double t61025 = b4p*t61017*t61018;
            double t61026 = b2p*c*t61011;
            double t61027 = t61023+t61024+t61025+t61026;
            double t61028 = 1/pow(rho_b[index],5.0/3.0);
            double t61029 = 1/sqrt(t61012);
            double t61030 = 1/c0f;
            double t61031 = 1/t61021;
            double t61032 = t61030*t61031*(1.0/2.0);
            double t61033 = t61032+1.0;
            double t61034 = 1/c0p;
            double t61035 = 1/t61027;
            double t61036 = t61034*t61035*(1.0/2.0);
            double t61037 = t61036+1.0;
            double t61038 = a1p*c*t61011;
            double t61039 = t61038+1.0;
            double t61040 = 1/t61037;
            double t61041 = 1/(t61027*t61027);
            double t61042 = b4p*t61017*t61028*(2.0/3.0);
            double t61043 = b2p*c*t61022*(1.0/3.0);
            double t61044 = b1p*c*t61022*t61029*(1.0/6.0);
            double t61045 = b3p*c*t61013*t61022*(1.0/2.0);
            double t61046 = t61042+t61043+t61044+t61045;
            double t61047 = t61040*t61041*t61046*t61039;
            double t61048 = log(t61037);
            double t61049 = gamma_bb[index]*gamma_bb[index];
            double t61050 = gcaa*gcaa;
            double t61051 = t61049*t61049;
            double t61052 = t61050*t61050;
            double t61053 = 1/pow(rho_b[index],3.2E1/3.0);
            double t61054 = 1/pow(rho_b[index],8.0/3.0);
            double t61055 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t61056 = 1/pow(rho_b[index],1.6E1/3.0);
            double t61057 = pow(2.0,1.0/3.0);
            double t61058 = t61057*2.0;
            double t61059 = t61058-2.0;
            double t61060 = two_13*2.0;
            double t61061 = t61060-2.0;
            double t61062 = 1/t61061;
            double t61063 = log(t61033);
            double t61064 = a1f*c*t61011;
            double t61065 = t61064+1.0;
            double t61066 = gamma_bb[index]*gcaa*t61054*4.0;
            double t61067 = gamma_bb[index]*gcaa*t61050*t61055*t61049*4.0;
            double t61068 = t61050*t61056*t61049*6.0;
            double t61069 = t61051*t61052*t61053;
            double t61070 = t61066+t61067+t61068+t61069+1.0;
            double t61071 = 1/t61070;
            double t61072 = gamma_bb[index]*gcaa*t61054;
            double t61073 = t61072+1.0;
            double t61074 = 1/t61073;
            double t61075 = gamma_bb[index]*gcaa*t61054*3.0;
            double t61076 = gamma_bb[index]*gcaa*t61050*t61055*t61049;
            double t61077 = t61050*t61056*t61049*3.0;
            double t61078 = t61075+t61076+t61077+1.0;
            double t61079 = 1/t61078;
            double t61080 = gamma_bb[index]*gcaa*t61054*2.0;
            double t61081 = t61050*t61056*t61049;
            double t61082 = t61080+t61081+1.0;
            double t61083 = 1/t61082;
            double t61084 = 1/pow(rho_b[index],1.9E1/3.0);
            double t61085 = 1/pow(rho_b[index],1.1E1/3.0);
            double t61086 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t61087 = 1/pow(rho_b[index],3.5E1/3.0);
            double t61088 = 1/t61033;
            double t61089 = 1/(t61021*t61021);
            double t61090 = b4f*t61017*t61028*(2.0/3.0);
            double t61091 = b2f*c*t61022*(1.0/3.0);
            double t61092 = b1f*c*t61022*t61029*(1.0/6.0);
            double t61093 = b3f*c*t61013*t61022*(1.0/2.0);
            double t61094 = t61090+t61091+t61092+t61093;
            double t61095 = a1f*c*c0f*t61022*t61063*(2.0/3.0);
            double t61096 = a1p*c*c0p*t61022*t61048*(2.0/3.0);
            double t61097 = ccaa4*t61051*t61052*t61071*t61087*(3.2E1/3.0);
            double t61098 = ccaa1*gamma_bb[index]*gcaa*t61074*t61085*(8.0/3.0);
            double t61099 = ccaa3*gamma_bb[index]*gcaa*t61050*t61049*t61086*t61079*8.0;
            double t61100 = ccaa2*t61050*t61083*t61084*t61049*(1.6E1/3.0);
            double t61101 = 1/(t61073*t61073);
            double t61102 = gamma_bb[index]*gcaa*t61085*8.0;
            double t61103 = gamma_bb[index]*gcaa*t61050*t61049*t61086*8.0;
            double t61104 = t61050*t61084*t61049*1.6E1;
            double t61105 = t61102+t61103+t61104;
            double t61106 = 1/(t61078*t61078);
            double t61107 = gamma_bb[index]*gcaa*t61085*(3.2E1/3.0);
            double t61108 = gamma_bb[index]*gcaa*t61050*t61049*t61086*3.2E1;
            double t61109 = t61050*t61084*t61049*3.2E1;
            double t61110 = t61051*t61052*t61087*(3.2E1/3.0);
            double t61111 = t61110+t61107+t61108+t61109;
            double t61112 = 1/(t61070*t61070);
            double t61113 = gamma_bb[index]*gcaa*t61085*(1.6E1/3.0);
            double t61114 = t61050*t61084*t61049*(1.6E1/3.0);
            double t61115 = t61113+t61114;
            double t61116 = 1/(t61082*t61082);
            double t61117 = t61100+t61097+t61098+t61099-ccaa1*t61101*t61050*t61084*t61049*(8.0/3.0)-ccaa4*t61111* \
               t61112*t61051*t61052*t61053-ccaa2*t61050*t61115*t61116*t61056*t61049-ccaa3*gamma_bb[index]*gcaa*t61050* \
               t61105*t61106*t61055*t61049;
            double t61118 = gx*gx;
            double t61119 = t61118*t61118;
            double t61120 = 1/pow(rho_b[index],1.0E1);
            double t61121 = gamma_bb[index]*gx*t61054;
            double t61122 = t61121+1.0;
            double t61123 = 1/pow(rho_b[index],2.2E1/3.0);
            double t61144 = gamma_bb[index]*gx*t61085*(3.2E1/3.0);
            double t61145 = gamma_bb[index]*gx*t61118*t61049*t61086*3.2E1;
            double t61146 = t61118*t61084*t61049*3.2E1;
            double t61147 = t61051*t61119*t61087*(3.2E1/3.0);
            double t61124 = t61144+t61145+t61146+t61147;
            double t61125 = gamma_bb[index]*gx*t61054*4.0;
            double t61126 = gamma_bb[index]*gx*t61055*t61118*t61049*4.0;
            double t61127 = t61118*t61056*t61049*6.0;
            double t61128 = t61051*t61053*t61119;
            double t61129 = t61125+t61126+t61127+t61128+1.0;
            double t61150 = gamma_bb[index]*gx*t61085*(1.6E1/3.0);
            double t61151 = t61118*t61084*t61049*(1.6E1/3.0);
            double t61130 = t61150+t61151;
            double t61131 = gamma_bb[index]*gx*t61054*2.0;
            double t61132 = t61118*t61056*t61049;
            double t61133 = t61131+t61132+1.0;
            double t61134 = gamma_bb[index]*gx*t61054*3.0;
            double t61135 = gamma_bb[index]*gx*t61055*t61118*t61049;
            double t61136 = t61118*t61056*t61049*3.0;
            double t61137 = t61134+t61135+t61136+1.0;
            double t61138 = 1/pow(rho_b[index],1.4E1/3.0);
            double t61139 = 1/(t61137*t61137);
            double t61140 = gamma_bb[index]*gx*t61085*8.0;
            double t61141 = gamma_bb[index]*gx*t61118*t61049*t61086*8.0;
            double t61142 = t61118*t61084*t61049*1.6E1;
            double t61143 = t61140+t61141+t61142;
            double t61148 = 1/pow(rho_b[index],3.8E1/3.0);
            double t61149 = 1/(t61129*t61129);
            double t61152 = 1/(t61133*t61133);
            double t61153 = 1/t61129;
            double t61154 = 1/t61122;
            double t61155 = 1/t61137;
            double t61156 = 1/t61133;
            double t61157 = c0f*t61063*t61065*2.0;
            double t61158 = c0p*t61039*t61048*2.0;
            double t61159 = 1/(t61122*t61122);
            double t61160 = ccaa4*t61051*t61052*t61053*t61071;
            double t61161 = ccaa1*gamma_bb[index]*gcaa*t61054*t61074;
            double t61162 = ccaa3*gamma_bb[index]*gcaa*t61050*t61055*t61049*t61079;
            double t61163 = ccaa2*t61050*t61056*t61083*t61049;
            double t61164 = ccaa0+t61160+t61161+t61162+t61163;
            double t61165 = 1/pow(rho_b[index],7.0/3.0);
            double t61166 = 1/pow(t61012,3.0/2.0);
            double t61167 = t61094*t61094;
            double t61168 = t61046*t61046;
            double t61169 = 1/(t61027*t61027*t61027);
            double t61170 = t61040*t61039*t61168*t61169*2.0;
            double t61171 = b4p*t61017*t61054*(1.0E1/9.0);
            double t61172 = b2p*c*t61165*(4.0/9.0);
            double t61173 = b3p*t61017*t61054*t61029*(1.0/1.2E1);
            double t61174 = b1p*c*t61029*t61165*(2.0/9.0);
            double t61175 = b3p*c*t61013*t61165*(2.0/3.0);
            double t61176 = t61171+t61172+t61173+t61174+t61175-b1p*t61017*t61054*t61166*(1.0/3.6E1);
            double t61177 = 1/(t61037*t61037);
            double t61178 = 1/(t61027*t61027*t61027*t61027);
            double t61179 = a1p*c*c0p*t61048*t61165*(8.0/9.0);
            v_rho_b_rho_b_[index] = t61117*(t61158+t61062*t61059*(t61157-c0p*t61039*t61048*2.0))*2.0+t61164*(- \
               t61047+t61096+t61062*t61059*(t61047+t61095-t61065*t61094*t61088*t61089-a1p*c*c0p*t61022*t61048*(2.0/ \
               3.0)))*2.0-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]*gx*t61154*t61085*(8.0/3.0)-cx1*t61118* \
               t61084*t61049*t61159*(8.0/3.0)+cx2*t61118*t61084*t61156*t61049*(1.6E1/3.0)+cx4*t61051*t61153*t61119* \
               t61087*(3.2E1/3.0)-cx2*t61130*t61152*t61118*t61056*t61049-cx4*t61051*t61124*t61053*t61119*t61149+cx3* \
               gamma_bb[index]*gx*t61118*t61155*t61049*t61086*8.0-cx3*gamma_bb[index]*gx*t61143*t61055*t61118*t61049* \
               t61139)*(8.0/3.0)+rho_b[index]*t61164*(-t61170-t61179+t61062*t61059*(t61170+t61179-t61040*t61041*t61039* \
               t61176-1/(t61021*t61021*t61021)*t61065*t61167*t61088*2.0+t61065*t61088*t61089*(b2f*c*t61165*(4.0/9.0) \
               +b4f*t61017*t61054*(1.0E1/9.0)+b1f*c*t61029*t61165*(2.0/9.0)+b3f*c*t61013*t61165*(2.0/3.0)-b1f*t61017* \
               t61054*t61166*(1.0/3.6E1)+b3f*t61017*t61054*t61029*(1.0/1.2E1))+1/(t61021*t61021*t61021*t61021)*t61030* \
               1/(t61033*t61033)*t61065*t61167*(1.0/2.0)-a1f*c*c0f*t61063*t61165*(8.0/9.0)-t61034*t61039*t61168*t61177* \
               t61178*(1.0/2.0)+a1f*c*t61022*t61094*t61088*t61089*(2.0/3.0)-a1p*c*t61022*t61040*t61041*t61046*(2.0/ \
               3.0))+t61040*t61041*t61039*t61176+t61034*t61039*t61168*t61177*t61178*(1.0/2.0)+a1p*c*t61022*t61040* \
               t61041*t61046*(2.0/3.0))-rho_b[index]*t61117*(-t61047+t61096+t61062*t61059*(t61047+t61095-t61096-t61065* \
               t61094*t61088*t61089))*2.0-rho_b[index]*(t61158+t61062*t61059*(t61157-t61158))*(ccaa1*gamma_bb[index]* \
               gcaa*t61074*t61138*(8.8E1/9.0)-ccaa1*t61101*t61050*t61123*t61049*2.4E1+ccaa2*t61050*t61123*t61083* \
               t61049*(3.04E2/9.0)+ccaa4*t61051*t61052*t61071*t61148*(1.12E3/9.0)-ccaa4*t61111*t61112*t61051*t61052* \
               t61087*(6.4E1/3.0)-ccaa2*t61050*t61115*t61116*t61084*t61049*(3.2E1/3.0)-ccaa2*t61050*t61116*t61056* \
               t61049*(gamma_bb[index]*gcaa*t61138*(1.76E2/9.0)+t61050*t61123*t61049*(3.04E2/9.0))-ccaa4*t61112*t61051* \
               t61052*t61053*(gamma_bb[index]*gcaa*t61138*(3.52E2/9.0)+t61050*t61123*t61049*(6.08E2/3.0)+t61051*t61052* \
               t61148*(1.12E3/9.0)+gamma_bb[index]*gcaa*t61120*t61050*t61049*2.88E2)+ccaa4*(t61111*t61111)*t61051* \
               t61052*1/(t61070*t61070*t61070)*t61053*2.0+ccaa2*t61050*(t61115*t61115)*1/(t61082*t61082*t61082)*t61056* \
               t61049*2.0+ccaa3*gamma_bb[index]*gcaa*t61120*t61050*t61049*t61079*7.2E1+ccaa1*gamma_bb[index]*gcaa* \
               t61120*t61050*1/(t61073*t61073*t61073)*t61049*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t61050*(t61105* \
               t61105)*t61055*t61049*1/(t61078*t61078*t61078)*2.0-ccaa3*gamma_bb[index]*gcaa*t61050*t61106*t61055* \
               t61049*(gamma_bb[index]*gcaa*t61138*(8.8E1/3.0)+t61050*t61123*t61049*(3.04E2/3.0)+gamma_bb[index]* \
               gcaa*t61120*t61050*t61049*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t61050*t61105*t61106*t61049*t61086*1.6E1) \
               +c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t61154*t61138*(8.8E1/9.0)-cx1*t61123*t61118* \
               t61049*t61159*2.4E1+cx2*t61123*t61118*t61156*t61049*(3.04E2/9.0)+cx4*t61051*t61153*t61119*t61148*(1.12E3/ \
               9.0)-cx2*t61130*t61152*t61118*t61084*t61049*(3.2E1/3.0)-cx4*t61051*t61124*t61119*t61149*t61087*(6.4E1/ \
               3.0)-cx2*t61152*t61118*t61056*t61049*(gamma_bb[index]*gx*t61138*(1.76E2/9.0)+t61123*t61118*t61049* \
               (3.04E2/9.0))-cx4*t61051*t61053*t61119*t61149*(gamma_bb[index]*gx*t61138*(3.52E2/9.0)+t61123*t61118* \
               t61049*(6.08E2/3.0)+t61051*t61119*t61148*(1.12E3/9.0)+gamma_bb[index]*gx*t61120*t61118*t61049*2.88E2) \
               +cx2*(t61130*t61130)*1/(t61133*t61133*t61133)*t61118*t61056*t61049*2.0+cx4*t61051*(t61124*t61124)* \
               t61053*t61119*1/(t61129*t61129*t61129)*2.0+cx3*gamma_bb[index]*gx*t61120*t61118*t61155*t61049*7.2E1+ \
               cx1*gamma_bb[index]*gx*t61120*1/(t61122*t61122*t61122)*t61118*t61049*(1.28E2/9.0)+cx3*gamma_bb[index]* \
               gx*(t61143*t61143)*t61055*t61118*1/(t61137*t61137*t61137)*t61049*2.0-cx3*gamma_bb[index]*gx*t61055* \
               t61118*t61049*t61139*(gamma_bb[index]*gx*t61138*(8.8E1/3.0)+t61123*t61118*t61049*(3.04E2/3.0)+gamma_bb[index]* \
               gx*t61120*t61118*t61049*7.2E1)-cx3*gamma_bb[index]*gx*t61143*t61118*t61049*t61139*t61086*1.6E1)+c0* \
               t61018*(cx0+cx1*gamma_bb[index]*gx*t61054*t61154+cx2*t61118*t61056*t61156*t61049+cx4*t61051*t61053* \
               t61153*t61119+cx3*gamma_bb[index]*gx*t61055*t61118*t61155*t61049)*(4.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t59246 = 1/pow(rho_a[index],1.0/3.0);
                double t59247 = c*t59246;
                double t59248 = sqrt(t59247);
                double t59249 = pow(t59247,3.0/2.0);
                double t59250 = c*c;
                double t59251 = 1/pow(rho_a[index],2.0/3.0);
                double t59252 = 1/c0p;
                double t59253 = b1p*t59248;
                double t59254 = b3p*t59249;
                double t59255 = b4p*t59250*t59251;
                double t59256 = b2p*c*t59246;
                double t59257 = t59253+t59254+t59255+t59256;
                double t59258 = 1/t59257;
                double t59259 = t59252*t59258*(1.0/2.0);
                double t59260 = t59259+1.0;
                double t59261 = log(t59260);
                double t59262 = a1p*c*t59246;
                double t59263 = t59262+1.0;
                double t59264 = 1/pow(rho_a[index],8.0/3.0);
                double t59265 = gamma_aa[index]*gamma_aa[index];
                double t59266 = gcaa*gcaa;
                double t59267 = t59266*t59266;
                double t59268 = 1/pow(rho_a[index],3.2E1/3.0);
                double t59269 = 1/pow(rho_a[index],1.6E1/3.0);
                double t59270 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t59271 = gamma_aa[index]*gcaa*t59264;
                double t59272 = t59271+1.0;
                double t59273 = gamma_aa[index]*gcaa*t59264*3.0;
                double t59274 = gamma_aa[index]*gcaa*t59270*t59265*t59266;
                double t59275 = t59265*t59266*t59269*3.0;
                double t59276 = t59273+t59274+t59275+1.0;
                double t59277 = t59265*t59265;
                double t59278 = gamma_aa[index]*gcaa*t59264*4.0;
                double t59279 = gamma_aa[index]*gcaa*t59270*t59265*t59266*4.0;
                double t59280 = t59265*t59266*t59269*6.0;
                double t59281 = t59267*t59268*t59277;
                double t59282 = t59280+t59281+t59278+t59279+1.0;
                double t59283 = gamma_aa[index]*gcaa*t59264*2.0;
                double t59284 = t59265*t59266*t59269;
                double t59285 = t59283+t59284+1.0;
                double t59286 = rho_a[index]+rho_b[index];
                double t59287 = 1/pow(t59286,1.0/3.0);
                double t59288 = c*t59287;
                double t59289 = sqrt(t59288);
                double t59290 = b1p*t59289;
                double t59291 = pow(t59288,3.0/2.0);
                double t59292 = b3p*t59291;
                double t59293 = 1/pow(t59286,2.0/3.0);
                double t59294 = b4p*t59250*t59293;
                double t59295 = b2p*c*t59287;
                double t59296 = t59290+t59292+t59294+t59295;
                double t59297 = 1/pow(t59286,4.0/3.0);
                double t59298 = two_13*2.0;
                double t59299 = t59298-2.0;
                double t59300 = 1/t59299;
                double t59301 = 1/c0f;
                double t59302 = 1/t59296;
                double t59303 = t59302*t59252*(1.0/2.0);
                double t59304 = t59303+1.0;
                double t59305 = a1p*c*t59287;
                double t59306 = t59305+1.0;
                double t59307 = rho_a[index]-rho_b[index];
                double t59308 = t59307*t59307;
                double t59309 = 1/t59286;
                double t59310 = t59307*t59309;
                double t59311 = b1f*t59289;
                double t59312 = b3f*t59291;
                double t59313 = b4f*t59250*t59293;
                double t59314 = b2f*c*t59287;
                double t59315 = t59311+t59312+t59313+t59314;
                double t59316 = 1/t59315;
                double t59317 = t59301*t59316*(1.0/2.0);
                double t59318 = t59317+1.0;
                double t59319 = log(t59318);
                double t59320 = a1f*c*t59287;
                double t59321 = t59320+1.0;
                double t59322 = log(t59304);
                double t59332 = c0f*t59321*t59319*2.0;
                double t59333 = c0p*t59322*t59306*2.0;
                double t59323 = t59332-t59333;
                double t59324 = t59310+1.0;
                double t59325 = pow(t59324,4.0/3.0);
                double t59326 = -t59310+1.0;
                double t59327 = pow(t59326,4.0/3.0);
                double t59328 = t59325+t59327-2.0;
                double t59329 = 1/(t59286*t59286);
                double t59360 = t59307*t59329;
                double t59330 = -t59360+t59309;
                double t59331 = 1/(t59286*t59286*t59286*t59286);
                double t59334 = t59308*t59308;
                double t59335 = 1/pow(t59286,5.0/3.0);
                double t59336 = 1/sqrt(t59288);
                double t59337 = 1/t59304;
                double t59338 = 1/(t59296*t59296);
                double t59339 = b4p*t59250*t59335*(2.0/3.0);
                double t59340 = b2p*c*t59297*(1.0/3.0);
                double t59341 = b1p*c*t59336*t59297*(1.0/6.0);
                double t59342 = b3p*c*t59297*t59289*(1.0/2.0);
                double t59343 = t59340+t59341+t59342+t59339;
                double t59344 = t59306*t59343*t59337*t59338;
                double t59345 = 1/(t59286*t59286*t59286*t59286*t59286);
                double t59346 = 1/d2fz0;
                double t59347 = 1/Aa;
                double t59348 = b1a*t59289;
                double t59349 = b3a*t59291;
                double t59350 = b4a*t59250*t59293;
                double t59351 = b2a*c*t59287;
                double t59352 = t59350+t59351+t59348+t59349;
                double t59353 = 1/t59352;
                double t59354 = t59353*t59347*(1.0/2.0);
                double t59355 = t59354+1.0;
                double t59356 = log(t59355);
                double t59357 = a1a*c*t59287;
                double t59358 = t59357+1.0;
                double t59359 = pow(t59324,1.0/3.0);
                double t59361 = t59330*t59359*(4.0/3.0);
                double t59362 = pow(t59326,1.0/3.0);
                double t59363 = t59361-t59330*t59362*(4.0/3.0);
                double t59364 = t59331*t59334;
                double t59365 = t59364-1.0;
                double t59366 = pow(2.0,1.0/3.0);
                double t59367 = t59366*2.0;
                double t59368 = t59367-2.0;
                double t59369 = a1f*c*t59246;
                double t59370 = t59369+1.0;
                double t59371 = b1f*t59248;
                double t59372 = b3f*t59249;
                double t59373 = b4f*t59250*t59251;
                double t59374 = b2f*c*t59246;
                double t59375 = t59371+t59372+t59373+t59374;
                double t59376 = 1/t59375;
                double t59377 = t59301*t59376*(1.0/2.0);
                double t59378 = t59377+1.0;
                double t59379 = 1/pow(rho_a[index],4.0/3.0);
                double t59380 = 1/pow(rho_a[index],5.0/3.0);
                double t59381 = 1/sqrt(t59247);
                double t59382 = log(t59378);
                double t59383 = 1/t59260;
                double t59384 = 1/(t59257*t59257);
                double t59385 = b4p*t59250*t59380*(2.0/3.0);
                double t59386 = b2p*c*t59379*(1.0/3.0);
                double t59387 = b1p*c*t59381*t59379*(1.0/6.0);
                double t59388 = b3p*c*t59248*t59379*(1.0/2.0);
                double t59389 = t59385+t59386+t59387+t59388;
                double t59390 = t59263*t59383*t59384*t59389;
                double t59391 = c0f*t59370*t59382*2.0;
                double t59392 = c0p*t59261*t59263*2.0;
                double t59393 = gamma_aa[index]*t59264*(1.0/2.0);
                double t59394 = 1/pow(rho_b[index],8.0/3.0);
                double t59395 = gamma_bb[index]*t59394*(1.0/2.0);
                double t59396 = t59393+t59395;
                double t59397 = gcab*t59396;
                double t59398 = t59397+1.0;
                double t59399 = gcab*gcab;
                double t59400 = t59396*t59396;
                double t59401 = t59399*t59399;
                double t59402 = t59400*t59400;
                double t59403 = t59400*t59399;
                double t59404 = gcab*t59396*2.0;
                double t59405 = t59403+t59404+1.0;
                double t59406 = t59400*t59399*3.0;
                double t59407 = gcab*t59400*t59396*t59399;
                double t59408 = gcab*t59396*3.0;
                double t59409 = t59406+t59407+t59408+1.0;
                double t59410 = t59400*t59399*6.0;
                double t59411 = gcab*t59400*t59396*t59399*4.0;
                double t59412 = t59401*t59402;
                double t59413 = gcab*t59396*4.0;
                double t59414 = t59410+t59411+t59412+t59413+1.0;
                double t59415 = t59391-t59392;
                double t59416 = 1/pow(rho_b[index],1.0/3.0);
                double t59417 = c*t59416;
                double t59418 = sqrt(t59417);
                double t59419 = pow(t59417,3.0/2.0);
                double t59420 = 1/pow(rho_b[index],2.0/3.0);
                double t59421 = b1p*t59418;
                double t59422 = b3p*t59419;
                double t59423 = b4p*t59420*t59250;
                double t59424 = b2p*c*t59416;
                double t59425 = t59421+t59422+t59423+t59424;
                double t59426 = 1/t59425;
                double t59427 = t59252*t59426*(1.0/2.0);
                double t59428 = t59427+1.0;
                double t59429 = log(t59428);
                double t59430 = a1p*c*t59416;
                double t59431 = t59430+1.0;
                double t59432 = c0p*t59431*t59429*2.0;
                double t59433 = t59300*t59331*t59323*t59334*t59328;
                double t59434 = Aa*t59300*t59328*t59346*t59356*t59365*t59358*2.0;
                double t59435 = 1/t59398;
                double t59436 = 1/pow(rho_a[index],1.1E1/3.0);
                double t59437 = 1/(t59398*t59398);
                double t59438 = 1/t59405;
                double t59439 = 1/(t59409*t59409);
                double t59440 = 1/pow(rho_a[index],1.9E1/3.0);
                double t59441 = 1/(t59405*t59405);
                double t59442 = 1/t59409;
                double t59443 = 1/t59414;
                double t59444 = 1/(t59414*t59414);
                double t59445 = gcab*t59264*2.0;
                double t59446 = t59264*t59396*t59399*6.0;
                double t59447 = gcab*t59400*t59264*t59399*6.0;
                double t59448 = t59400*t59401*t59264*t59396*2.0;
                double t59449 = t59445+t59446+t59447+t59448;
                double t59450 = gamma_aa[index]*gcab*t59436*(8.0/3.0);
                double t59451 = gamma_aa[index]*t59436*t59396*t59399*(8.0/3.0);
                double t59452 = t59450+t59451;
                double t59453 = gcab*t59264;
                double t59454 = t59264*t59396*t59399;
                double t59455 = t59453+t59454;
                double t59456 = gamma_aa[index]*gcab*t59436*(1.6E1/3.0);
                double t59457 = gamma_aa[index]*gcab*t59400*t59436*t59399*1.6E1;
                double t59458 = gamma_aa[index]*t59400*t59401*t59436*t59396*(1.6E1/3.0);
                double t59459 = gamma_aa[index]*t59436*t59396*t59399*1.6E1;
                double t59460 = t59456+t59457+t59458+t59459;
                double t59461 = gcab*t59264*(3.0/2.0);
                double t59462 = t59264*t59396*t59399*3.0;
                double t59463 = gcab*t59400*t59264*t59399*(3.0/2.0);
                double t59464 = t59461+t59462+t59463;
                double t59465 = gamma_aa[index]*gcab*t59436*4.0;
                double t59466 = gamma_aa[index]*gcab*t59400*t59436*t59399*4.0;
                double t59467 = gamma_aa[index]*t59436*t59396*t59399*8.0;
                double t59468 = t59465+t59466+t59467;
                double t59469 = gx*gx;
                double t59470 = t59469*t59469;
                double t59471 = gamma_aa[index]*gx*t59264;
                double t59472 = t59471+1.0;
                double t59473 = gamma_aa[index]*gx*t59264*3.0;
                double t59474 = gamma_aa[index]*gx*t59270*t59265*t59469;
                double t59475 = t59265*t59269*t59469*3.0;
                double t59476 = t59473+t59474+t59475+1.0;
                double t59477 = gamma_aa[index]*gx*t59264*4.0;
                double t59478 = gamma_aa[index]*gx*t59270*t59265*t59469*4.0;
                double t59479 = t59265*t59269*t59469*6.0;
                double t59480 = t59470*t59268*t59277;
                double t59481 = t59480+t59477+t59478+t59479+1.0;
                double t59482 = gamma_aa[index]*gx*t59264*2.0;
                double t59483 = t59265*t59269*t59469;
                double t59484 = t59482+t59483+1.0;
                double t59485 = t59300*t59415*t59368;
                double t59486 = t59392+t59485;
                double t59487 = 1/t59272;
                double t59488 = 1/t59282;
                double t59489 = 1/t59285;
                double t59490 = 1/t59276;
                double t59491 = 1/(t59272*t59272);
                double t59492 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t59493 = 1/(t59276*t59276);
                double t59494 = 1/(t59285*t59285);
                double t59495 = gcaa*t59264*3.0;
                double t59496 = gamma_aa[index]*t59266*t59269*6.0;
                double t59497 = gcaa*t59270*t59265*t59266*3.0;
                double t59498 = t59495+t59496+t59497;
                double t59499 = 1/pow(rho_a[index],3.5E1/3.0);
                double t59500 = 1/(t59282*t59282);
                double t59501 = gcaa*t59264*4.0;
                double t59502 = gamma_aa[index]*t59266*t59269*1.2E1;
                double t59503 = gcaa*t59270*t59265*t59266*1.2E1;
                double t59504 = gamma_aa[index]*t59265*t59267*t59268*4.0;
                double t59505 = t59501+t59502+t59503+t59504;
                double t59506 = gcaa*t59264*2.0;
                double t59507 = gamma_aa[index]*t59266*t59269*2.0;
                double t59508 = t59506+t59507;
                double t59509 = gamma_aa[index]*gcaa*t59436*(1.6E1/3.0);
                double t59510 = t59440*t59265*t59266*(1.6E1/3.0);
                double t59511 = t59510+t59509;
                double t59512 = gamma_aa[index]*gcaa*t59436*8.0;
                double t59513 = gamma_aa[index]*gcaa*t59265*t59266*t59492*8.0;
                double t59514 = t59440*t59265*t59266*1.6E1;
                double t59515 = t59512+t59513+t59514;
                double t59516 = gamma_aa[index]*gcaa*t59436*(3.2E1/3.0);
                double t59517 = gamma_aa[index]*gcaa*t59265*t59266*t59492*3.2E1;
                double t59518 = t59440*t59265*t59266*3.2E1;
                double t59519 = t59267*t59277*t59499*(3.2E1/3.0);
                double t59520 = t59516+t59517+t59518+t59519;
                double t59521 = 1/t59378;
                double t59522 = 1/(t59375*t59375);
                double t59523 = b4f*t59250*t59380*(2.0/3.0);
                double t59524 = b2f*c*t59379*(1.0/3.0);
                double t59525 = b1f*c*t59381*t59379*(1.0/6.0);
                double t59526 = b3f*c*t59248*t59379*(1.0/2.0);
                double t59527 = t59523+t59524+t59525+t59526;
                double t59528 = a1f*c*c0f*t59382*t59379*(2.0/3.0);
                double t59529 = a1p*c*c0p*t59261*t59379*(2.0/3.0);
                double t59530 = ccaa1*gcaa*t59264*t59487;
                double t59531 = ccaa4*gamma_aa[index]*t59265*t59267*t59268*t59488*4.0;
                double t59532 = ccaa2*gamma_aa[index]*t59266*t59269*t59489*2.0;
                double t59533 = ccaa3*gcaa*t59270*t59265*t59490*t59266*3.0;
                double t59534 = t59530+t59531+t59532+t59533-ccaa1*gamma_aa[index]*t59266*t59491*t59269-ccaa4*t59500* \
                   t59505*t59267*t59268*t59277-ccaa2*t59265*t59508*t59266*t59269*t59494-ccaa3*gamma_aa[index]*gcaa*t59270* \
                   t59265*t59266*t59493*t59498;
                double t59535 = 1/t59472;
                double t59536 = 1/t59481;
                double t59537 = 1/t59484;
                double t59538 = 1/t59476;
                double t59539 = 1/(t59472*t59472);
                double t59540 = 1/(t59476*t59476);
                double t59541 = 1/(t59484*t59484);
                double t59542 = gx*t59264*3.0;
                double t59543 = gamma_aa[index]*t59269*t59469*6.0;
                double t59544 = gx*t59270*t59265*t59469*3.0;
                double t59545 = t59542+t59543+t59544;
                double t59546 = 1/(t59481*t59481);
                double t59547 = gx*t59264*4.0;
                double t59548 = gamma_aa[index]*t59269*t59469*1.2E1;
                double t59549 = gx*t59270*t59265*t59469*1.2E1;
                double t59550 = gamma_aa[index]*t59470*t59265*t59268*4.0;
                double t59551 = t59550+t59547+t59548+t59549;
                double t59552 = gx*t59264*2.0;
                double t59553 = gamma_aa[index]*t59269*t59469*2.0;
                double t59554 = t59552+t59553;
                double t59555 = gamma_aa[index]*gx*t59436*(1.6E1/3.0);
                double t59556 = t59440*t59265*t59469*(1.6E1/3.0);
                double t59557 = t59555+t59556;
                double t59558 = gamma_aa[index]*gx*t59436*8.0;
                double t59559 = gamma_aa[index]*gx*t59265*t59492*t59469*8.0;
                double t59560 = t59440*t59265*t59469*1.6E1;
                double t59561 = t59560+t59558+t59559;
                double t59562 = gamma_aa[index]*gx*t59436*(3.2E1/3.0);
                double t59563 = gamma_aa[index]*gx*t59265*t59492*t59469*3.2E1;
                double t59564 = t59440*t59265*t59469*3.2E1;
                double t59565 = t59470*t59277*t59499*(3.2E1/3.0);
                double t59566 = t59562+t59563+t59564+t59565;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t59486+rho_b[index]*(t59432-t59300*t59368*(t59432-c0f*log((t59301* \
                   (1.0/2.0))/(b1f*t59418+b3f*t59419+b2f*c*t59416+b4f*t59420*t59250)+1.0)*(a1f*c*t59416+1.0)*2.0))-t59286* \
                   (t59333+t59433+t59434))*(ccab1*gcab*t59435*t59436*(4.0/3.0)-ccab2*t59400*t59441*t59399*(gcab*t59436* \
                   (8.0/3.0)+gamma_aa[index]*t59440*t59399*(4.0/3.0)+t59436*t59396*t59399*(8.0/3.0))-ccab4*t59401*t59402* \
                   t59444*(gcab*t59436*(1.6E1/3.0)+gamma_aa[index]*t59440*t59399*8.0+t59436*t59396*t59399*1.6E1+gamma_aa[index]* \
                   t59400*t59401*t59440*8.0+gcab*t59400*t59436*t59399*1.6E1+t59400*t59401*t59436*t59396*(1.6E1/3.0)+gamma_aa[index]* \
                   gcab*t59440*t59396*t59399*1.6E1)-ccab1*gamma_aa[index]*t59440*t59437*t59399*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t59440*t59438*t59399*(4.0/3.0)-ccab1*t59436*t59437*t59396*t59399*(4.0/3.0)+ccab2*t59436*t59438*t59396* \
                   t59399*(8.0/3.0)+ccab4*t59400*t59401*t59443*t59436*t59396*(1.6E1/3.0)-ccab2*t59441*t59452*t59264*t59396* \
                   t59399+ccab4*t59401*t59402*1/(t59414*t59414*t59414)*t59460*t59449*2.0+ccab2*t59400*1/(t59405*t59405* \
                   t59405)*t59452*t59455*t59399*2.0+ccab4*gamma_aa[index]*t59400*t59401*t59440*t59443*8.0+ccab3*gcab* \
                   t59400*t59442*t59436*t59399*4.0+ccab3*gamma_aa[index]*gcab*t59440*t59442*t59396*t59399*4.0-ccab2*gamma_aa[index]* \
                   t59441*t59436*t59455*t59396*t59399*(8.0/3.0)-ccab3*gcab*t59400*t59264*t59439*t59468*t59399*(3.0/2.0) \
                   -ccab4*t59400*t59401*t59460*t59264*t59444*t59396*2.0-ccab3*gcab*t59400*t59439*t59396*t59399*(gcab* \
                   t59436*4.0+gamma_aa[index]*t59440*t59399*4.0+t59436*t59396*t59399*8.0+gcab*t59400*t59436*t59399*4.0+ \
                   gamma_aa[index]*gcab*t59440*t59396*t59399*4.0)+ccab1*gamma_aa[index]*gcab*t59440*t59396*1/(t59398* \
                   t59398*t59398)*t59399*(4.0/3.0)+ccab3*gcab*t59400*1/(t59409*t59409*t59409)*t59464*t59396*t59468*t59399* \
                   2.0-ccab3*gamma_aa[index]*gcab*t59400*t59436*t59464*t59439*t59399*4.0-ccab4*gamma_aa[index]*t59400* \
                   t59401*t59444*t59436*t59449*t59396*(1.6E1/3.0))-t59534*(t59392+t59300*t59368*(t59391-c0p*t59261*t59263* \
                   2.0))-(t59333+t59433+t59434-t59392+t59286*(t59344-t59300*t59331*t59334*t59328*(t59344-(t59321*1/(t59315* \
                   t59315)*(b2f*c*t59297*(1.0/3.0)+b4f*t59250*t59335*(2.0/3.0)+b1f*c*t59336*t59297*(1.0/6.0)+b3f*c*t59297* \
                   t59289*(1.0/2.0)))/t59318+a1f*c*c0f*t59319*t59297*(2.0/3.0)-a1p*c*c0p*t59322*t59297*(2.0/3.0))-a1p* \
                   c*c0p*t59322*t59297*(2.0/3.0)+t59300*t59331*t59323*t59334*t59363-t59300*t59323*t59334*t59345*t59328* \
                   4.0+t59300*t59331*t59323*t59307*t59308*t59328*4.0-Aa*t59300*t59328*t59346*t59356*t59358*(t59334*t59345* \
                   4.0-t59331*t59307*t59308*4.0)*2.0+Aa*t59300*t59363*t59346*t59356*t59365*t59358*2.0+(t59300*1/(t59352* \
                   t59352)*t59328*t59346*t59365*t59358*(b2a*c*t59297*(1.0/3.0)+b4a*t59250*t59335*(2.0/3.0)+b1a*c*t59336* \
                   t59297*(1.0/6.0)+b3a*c*t59297*t59289*(1.0/2.0)))/t59355-Aa*a1a*c*t59300*t59328*t59346*t59356*t59365* \
                   t59297*(2.0/3.0))+rho_a[index]*(-t59390+t59529+t59300*t59368*(t59390+t59528-t59521*t59522*t59370*t59527- \
                   a1p*c*c0p*t59261*t59379*(2.0/3.0)))-t59300*t59415*t59368)*(ccab1*gcab*t59264*t59435*(1.0/2.0)-ccab4* \
                   t59401*t59402*t59444*t59449-ccab2*t59400*t59441*t59455*t59399-ccab1*t59264*t59437*t59396*t59399*(1.0/ \
                   2.0)+ccab2*t59264*t59438*t59396*t59399+ccab4*t59400*t59401*t59443*t59264*t59396*2.0+ccab3*gcab*t59400* \
                   t59442*t59264*t59399*(3.0/2.0)-ccab3*gcab*t59400*t59464*t59439*t59396*t59399)-rho_a[index]*t59486* \
                   (ccaa1*gcaa*t59436*t59487*(-8.0/3.0)+ccaa1*gamma_aa[index]*t59440*t59266*t59491*8.0-ccaa2*gamma_aa[index]* \
                   t59440*t59266*t59489*(3.2E1/3.0)+ccaa2*t59440*t59265*t59508*t59266*t59494*(1.6E1/3.0)+ccaa4*t59500* \
                   t59505*t59267*t59277*t59499*(3.2E1/3.0)+ccaa4*t59500*t59267*t59268*t59277*(gcaa*t59436*(3.2E1/3.0) \
                   +gamma_aa[index]*t59440*t59266*6.4E1+gamma_aa[index]*t59265*t59267*t59499*(1.28E2/3.0)+gcaa*t59265* \
                   t59266*t59492*9.6E1)-ccaa1*gcaa*1/(t59272*t59272*t59272)*t59265*t59266*t59492*(1.6E1/3.0)+ccaa2*t59265* \
                   t59266*t59269*t59494*(gcaa*t59436*(1.6E1/3.0)+gamma_aa[index]*t59440*t59266*(3.2E1/3.0))+ccaa2*gamma_aa[index]* \
                   t59511*t59266*t59269*t59494*2.0-ccaa4*gamma_aa[index]*t59265*t59267*t59488*t59499*(1.28E2/3.0)-ccaa3* \
                   gcaa*t59265*t59490*t59266*t59492*2.4E1+ccaa4*gamma_aa[index]*t59500*t59520*t59265*t59267*t59268*4.0+ \
                   ccaa3*gcaa*t59270*t59515*t59265*t59266*t59493*3.0-ccaa4*t59520*t59505*1/(t59282*t59282*t59282)*t59267* \
                   t59268*t59277*2.0-ccaa2*t59511*t59265*t59508*t59266*1/(t59285*t59285*t59285)*t59269*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t59270*t59265*t59266*t59493*(gcaa*t59436*8.0+gamma_aa[index]*t59440*t59266*3.2E1+gcaa*t59265* \
                   t59266*t59492*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t59265*t59266*t59492*t59493*t59498*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*t59270*t59515*t59265*t59266*1/(t59276*t59276*t59276)*t59498*2.0)+c0*pow(rho_a[index],4.0/3.0) \
                   *(cx1*gx*t59436*t59535*(-8.0/3.0)+cx1*gamma_aa[index]*t59440*t59539*t59469*8.0-cx2*gamma_aa[index]* \
                   t59440*t59537*t59469*(3.2E1/3.0)+cx2*t59440*t59541*t59265*t59554*t59469*(1.6E1/3.0)+cx4*t59470*t59551* \
                   t59546*t59277*t59499*(3.2E1/3.0)+cx4*t59470*t59546*t59268*t59277*(gx*t59436*(3.2E1/3.0)+gamma_aa[index]* \
                   t59440*t59469*6.4E1+gamma_aa[index]*t59470*t59265*t59499*(1.28E2/3.0)+gx*t59265*t59492*t59469*9.6E1) \
                   -cx1*gx*t59265*1/(t59472*t59472*t59472)*t59492*t59469*(1.6E1/3.0)+cx2*t59541*t59265*t59269*t59469* \
                   (gx*t59436*(1.6E1/3.0)+gamma_aa[index]*t59440*t59469*(3.2E1/3.0))+cx2*gamma_aa[index]*t59541*t59269* \
                   t59557*t59469*2.0-cx4*gamma_aa[index]*t59470*t59265*t59536*t59499*(1.28E2/3.0)-cx3*gx*t59265*t59492* \
                   t59538*t59469*2.4E1+cx4*gamma_aa[index]*t59470*t59265*t59546*t59268*t59566*4.0+cx3*gx*t59270*t59540* \
                   t59561*t59265*t59469*3.0-cx2*t59265*t59554*1/(t59484*t59484*t59484)*t59269*t59557*t59469*2.0-cx4*t59470* \
                   t59551*1/(t59481*t59481*t59481)*t59268*t59277*t59566*2.0+cx3*gamma_aa[index]*gx*t59270*t59540*t59265* \
                   t59469*(gx*t59436*8.0+gamma_aa[index]*t59440*t59469*3.2E1+gx*t59265*t59492*t59469*2.4E1)+cx3*gamma_aa[index]* \
                   gx*t59540*t59265*t59545*t59492*t59469*8.0-cx3*gamma_aa[index]*gx*t59270*t59561*t59265*t59545*1/(t59476* \
                   t59476*t59476)*t59469*2.0)+rho_a[index]*t59534*(-t59390+t59529+t59300*t59368*(t59390+t59528-t59529- \
                   t59521*t59522*t59370*t59527))+c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t59264*t59535-cx1*gamma_aa[index]* \
                   t59269*t59539*t59469+cx2*gamma_aa[index]*t59537*t59269*t59469*2.0-cx2*t59541*t59265*t59554*t59269* \
                   t59469-cx4*t59470*t59551*t59546*t59268*t59277+cx4*gamma_aa[index]*t59470*t59265*t59536*t59268*4.0+ \
                   cx3*gx*t59270*t59265*t59538*t59469*3.0-cx3*gamma_aa[index]*gx*t59270*t59540*t59265*t59545*t59469)* \
                   (4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t61820 = 1/pow(rho_a[index],1.0/3.0);
                double t61821 = c*t61820;
                double t61822 = sqrt(t61821);
                double t61823 = pow(t61821,3.0/2.0);
                double t61824 = c*c;
                double t61825 = 1/pow(rho_a[index],2.0/3.0);
                double t61826 = 1/c0p;
                double t61827 = b1p*t61822;
                double t61828 = b3p*t61823;
                double t61829 = b4p*t61824*t61825;
                double t61830 = b2p*c*t61820;
                double t61831 = t61830+t61827+t61828+t61829;
                double t61832 = 1/t61831;
                double t61833 = t61832*t61826*(1.0/2.0);
                double t61834 = t61833+1.0;
                double t61835 = log(t61834);
                double t61836 = a1p*c*t61820;
                double t61837 = t61836+1.0;
                double t61838 = 1/pow(rho_a[index],8.0/3.0);
                double t61839 = gamma_aa[index]*gamma_aa[index];
                double t61840 = gcaa*gcaa;
                double t61841 = t61840*t61840;
                double t61842 = 1/pow(rho_a[index],3.2E1/3.0);
                double t61843 = 1/pow(rho_a[index],1.6E1/3.0);
                double t61844 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t61845 = gamma_aa[index]*gcaa*t61838;
                double t61846 = t61845+1.0;
                double t61847 = gamma_aa[index]*gcaa*t61838*3.0;
                double t61848 = gamma_aa[index]*gcaa*t61840*t61844*t61839;
                double t61849 = t61840*t61843*t61839*3.0;
                double t61850 = t61847+t61848+t61849+1.0;
                double t61851 = t61839*t61839;
                double t61852 = gamma_aa[index]*gcaa*t61838*4.0;
                double t61853 = gamma_aa[index]*gcaa*t61840*t61844*t61839*4.0;
                double t61854 = t61840*t61843*t61839*6.0;
                double t61855 = t61841*t61842*t61851;
                double t61856 = t61852+t61853+t61854+t61855+1.0;
                double t61857 = gamma_aa[index]*gcaa*t61838*2.0;
                double t61858 = t61840*t61843*t61839;
                double t61859 = t61857+t61858+1.0;
                double t61860 = gx*gx;
                double t61861 = t61860*t61860;
                double t61862 = gamma_aa[index]*gx*t61838;
                double t61863 = t61862+1.0;
                double t61864 = gamma_aa[index]*gx*t61838*3.0;
                double t61865 = gamma_aa[index]*gx*t61860*t61844*t61839;
                double t61866 = t61860*t61843*t61839*3.0;
                double t61867 = t61864+t61865+t61866+1.0;
                double t61868 = gamma_aa[index]*gx*t61838*4.0;
                double t61869 = gamma_aa[index]*gx*t61860*t61844*t61839*4.0;
                double t61870 = t61860*t61843*t61839*6.0;
                double t61871 = t61842*t61851*t61861;
                double t61872 = t61870+t61871+t61868+t61869+1.0;
                double t61873 = gamma_aa[index]*gx*t61838*2.0;
                double t61874 = t61860*t61843*t61839;
                double t61875 = t61873+t61874+1.0;
                double t61876 = pow(2.0,1.0/3.0);
                double t61877 = t61876*2.0;
                double t61878 = t61877-2.0;
                double t61879 = two_13*2.0;
                double t61880 = t61879-2.0;
                double t61881 = 1/t61880;
                double t61882 = 1/c0f;
                double t61883 = b1f*t61822;
                double t61884 = b3f*t61823;
                double t61885 = b4f*t61824*t61825;
                double t61886 = b2f*c*t61820;
                double t61887 = t61883+t61884+t61885+t61886;
                double t61888 = 1/t61887;
                double t61889 = t61882*t61888*(1.0/2.0);
                double t61890 = t61889+1.0;
                double t61891 = log(t61890);
                double t61892 = a1f*c*t61820;
                double t61893 = t61892+1.0;
                double t61894 = c0f*t61891*t61893*2.0;
                double t61895 = c0p*t61835*t61837*2.0;
                double t61896 = 1/t61846;
                double t61897 = 1/t61856;
                double t61898 = 1/t61859;
                double t61899 = 1/t61850;
                double t61900 = 1/pow(rho_a[index],1.9E1/3.0);
                double t61901 = 1/(t61846*t61846);
                double t61902 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t61903 = 1/pow(rho_a[index],1.1E1/3.0);
                double t61904 = 1/(t61850*t61850);
                double t61905 = 1/(t61859*t61859);
                double t61906 = gcaa*t61838*3.0;
                double t61907 = gamma_aa[index]*t61840*t61843*6.0;
                double t61908 = gcaa*t61840*t61844*t61839*3.0;
                double t61909 = t61906+t61907+t61908;
                double t61910 = 1/pow(rho_a[index],3.5E1/3.0);
                double t61911 = 1/(t61856*t61856);
                double t61912 = gcaa*t61838*4.0;
                double t61913 = gamma_aa[index]*t61840*t61843*1.2E1;
                double t61914 = gcaa*t61840*t61844*t61839*1.2E1;
                double t61915 = gamma_aa[index]*t61841*t61842*t61839*4.0;
                double t61916 = t61912+t61913+t61914+t61915;
                double t61917 = gcaa*t61838*2.0;
                double t61918 = gamma_aa[index]*t61840*t61843*2.0;
                double t61919 = t61917+t61918;
                double t61920 = gamma_aa[index]*gcaa*t61903*(1.6E1/3.0);
                double t61921 = t61900*t61840*t61839*(1.6E1/3.0);
                double t61922 = t61920+t61921;
                double t61923 = gamma_aa[index]*gcaa*t61903*8.0;
                double t61924 = gamma_aa[index]*gcaa*t61902*t61840*t61839*8.0;
                double t61925 = t61900*t61840*t61839*1.6E1;
                double t61926 = t61923+t61924+t61925;
                double t61927 = gamma_aa[index]*gcaa*t61903*(3.2E1/3.0);
                double t61928 = gamma_aa[index]*gcaa*t61902*t61840*t61839*3.2E1;
                double t61929 = t61900*t61840*t61839*3.2E1;
                double t61930 = t61910*t61841*t61851*(3.2E1/3.0);
                double t61931 = t61930+t61927+t61928+t61929;
                double t61932 = 1/pow(rho_a[index],4.0/3.0);
                double t61933 = 1/pow(rho_a[index],5.0/3.0);
                double t61934 = 1/sqrt(t61821);
                double t61935 = 1/t61834;
                double t61936 = 1/(t61831*t61831);
                double t61937 = b4p*t61824*t61933*(2.0/3.0);
                double t61938 = b2p*c*t61932*(1.0/3.0);
                double t61939 = b1p*c*t61932*t61934*(1.0/6.0);
                double t61940 = b3p*c*t61822*t61932*(1.0/2.0);
                double t61941 = t61940+t61937+t61938+t61939;
                double t61942 = t61941*t61935*t61837*t61936;
                double t61943 = ccaa1*gcaa*t61838*t61896;
                double t61944 = ccaa4*gamma_aa[index]*t61841*t61842*t61839*t61897*4.0;
                double t61945 = ccaa2*gamma_aa[index]*t61840*t61843*t61898*2.0;
                double t61946 = ccaa3*gcaa*t61840*t61844*t61839*t61899*3.0;
                double t61947 = t61943+t61944+t61945+t61946-ccaa1*gamma_aa[index]*t61901*t61840*t61843-ccaa4*t61911* \
                   t61841*t61842*t61851*t61916-ccaa2*t61840*t61905*t61843*t61919*t61839-ccaa3*gamma_aa[index]*gcaa*t61840* \
                   t61904*t61844*t61909*t61839;
                double t61948 = 1/t61863;
                double t61949 = 1/t61872;
                double t61950 = 1/t61875;
                double t61951 = 1/t61867;
                double t61952 = 1/(t61863*t61863);
                double t61953 = 1/(t61867*t61867);
                double t61954 = 1/(t61875*t61875);
                double t61955 = gx*t61838*3.0;
                double t61956 = gamma_aa[index]*t61860*t61843*6.0;
                double t61957 = gx*t61860*t61844*t61839*3.0;
                double t61958 = t61955+t61956+t61957;
                double t61959 = 1/(t61872*t61872);
                double t61960 = gx*t61838*4.0;
                double t61961 = gamma_aa[index]*t61860*t61843*1.2E1;
                double t61962 = gx*t61860*t61844*t61839*1.2E1;
                double t61963 = gamma_aa[index]*t61842*t61861*t61839*4.0;
                double t61964 = t61960+t61961+t61962+t61963;
                double t61965 = gx*t61838*2.0;
                double t61966 = gamma_aa[index]*t61860*t61843*2.0;
                double t61967 = t61965+t61966;
                double t61968 = gamma_aa[index]*gx*t61903*(1.6E1/3.0);
                double t61969 = t61900*t61860*t61839*(1.6E1/3.0);
                double t61970 = t61968+t61969;
                double t61971 = gamma_aa[index]*gx*t61903*8.0;
                double t61972 = gamma_aa[index]*gx*t61902*t61860*t61839*8.0;
                double t61973 = t61900*t61860*t61839*1.6E1;
                double t61974 = t61971+t61972+t61973;
                double t61975 = gamma_aa[index]*gx*t61903*(3.2E1/3.0);
                double t61976 = gamma_aa[index]*gx*t61902*t61860*t61839*3.2E1;
                double t61977 = t61900*t61860*t61839*3.2E1;
                double t61978 = t61910*t61851*t61861*(3.2E1/3.0);
                double t61979 = t61975+t61976+t61977+t61978;
                v_rho_a_gamma_aa_[index] = -t61947*(t61895+t61881*t61878*(t61894-c0p*t61835*t61837*2.0))+rho_a[index]* \
                   t61947*(-t61942+t61881*t61878*(t61942-(t61893*1/(t61887*t61887)*(b2f*c*t61932*(1.0/3.0)+b4f*t61824* \
                   t61933*(2.0/3.0)+b1f*c*t61932*t61934*(1.0/6.0)+b3f*c*t61822*t61932*(1.0/2.0)))/t61890+a1f*c*c0f*t61932* \
                   t61891*(2.0/3.0)-a1p*c*c0p*t61932*t61835*(2.0/3.0))+a1p*c*c0p*t61932*t61835*(2.0/3.0))-rho_a[index]* \
                   (t61895+t61881*t61878*(t61894-t61895))*(ccaa1*gcaa*t61903*t61896*(-8.0/3.0)+ccaa1*gamma_aa[index]* \
                   t61900*t61901*t61840*8.0-ccaa2*gamma_aa[index]*t61900*t61840*t61898*(3.2E1/3.0)+ccaa4*t61910*t61911* \
                   t61841*t61851*t61916*(3.2E1/3.0)+ccaa2*t61900*t61840*t61905*t61919*t61839*(1.6E1/3.0)+ccaa4*t61911* \
                   t61841*t61842*t61851*(gcaa*t61903*(3.2E1/3.0)+gamma_aa[index]*t61900*t61840*6.4E1+gamma_aa[index]* \
                   t61910*t61841*t61839*(1.28E2/3.0)+gcaa*t61902*t61840*t61839*9.6E1)-ccaa1*gcaa*t61902*t61840*1/(t61846* \
                   t61846*t61846)*t61839*(1.6E1/3.0)+ccaa2*t61840*t61905*t61843*t61839*(gcaa*t61903*(1.6E1/3.0)+gamma_aa[index]* \
                   t61900*t61840*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t61840*t61922*t61905*t61843*2.0-ccaa4*gamma_aa[index]* \
                   t61910*t61841*t61839*t61897*(1.28E2/3.0)-ccaa3*gcaa*t61902*t61840*t61839*t61899*2.4E1+ccaa4*gamma_aa[index]* \
                   t61911*t61841*t61931*t61842*t61839*4.0+ccaa3*gcaa*t61840*t61904*t61844*t61926*t61839*3.0-ccaa4*t61841* \
                   t61931*t61842*t61851*t61916*1/(t61856*t61856*t61856)*2.0-ccaa2*t61840*t61922*t61843*t61919*t61839* \
                   1/(t61859*t61859*t61859)*2.0+ccaa3*gamma_aa[index]*gcaa*t61840*t61904*t61844*t61839*(gcaa*t61903*8.0+ \
                   gamma_aa[index]*t61900*t61840*3.2E1+gcaa*t61902*t61840*t61839*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t61902* \
                   t61840*t61904*t61909*t61839*8.0-ccaa3*gamma_aa[index]*gcaa*t61840*1/(t61850*t61850*t61850)*t61844* \
                   t61926*t61909*t61839*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t61903*t61948*(-8.0/3.0)+cx1*gamma_aa[index]* \
                   t61900*t61860*t61952*8.0-cx2*gamma_aa[index]*t61900*t61860*t61950*(3.2E1/3.0)+cx2*t61900*t61860*t61954* \
                   t61839*t61967*(1.6E1/3.0)+cx4*t61910*t61851*t61861*t61964*t61959*(3.2E1/3.0)+cx4*t61842*t61851*t61861* \
                   t61959*(gx*t61903*(3.2E1/3.0)+gamma_aa[index]*t61900*t61860*6.4E1+gamma_aa[index]*t61910*t61861*t61839* \
                   (1.28E2/3.0)+gx*t61902*t61860*t61839*9.6E1)-cx1*gx*t61902*t61860*1/(t61863*t61863*t61863)*t61839*(1.6E1/ \
                   3.0)+cx2*t61860*t61843*t61954*t61839*(gx*t61903*(1.6E1/3.0)+gamma_aa[index]*t61900*t61860*(3.2E1/3.0) \
                   )+cx2*gamma_aa[index]*t61860*t61843*t61970*t61954*2.0-cx4*gamma_aa[index]*t61910*t61861*t61839*t61949* \
                   (1.28E2/3.0)-cx3*gx*t61902*t61860*t61951*t61839*2.4E1+cx4*gamma_aa[index]*t61842*t61861*t61839*t61959* \
                   t61979*4.0+cx3*gx*t61860*t61844*t61953*t61839*t61974*3.0-cx2*t61860*t61843*t61970*t61839*1/(t61875* \
                   t61875*t61875)*t61967*2.0-cx4*t61842*t61851*t61861*1/(t61872*t61872*t61872)*t61964*t61979*2.0+cx3* \
                   gamma_aa[index]*gx*t61860*t61844*t61953*t61839*(gx*t61903*8.0+gamma_aa[index]*t61900*t61860*3.2E1+ \
                   gx*t61902*t61860*t61839*2.4E1)+cx3*gamma_aa[index]*gx*t61902*t61860*t61953*t61839*t61958*8.0-cx3*gamma_aa[index]* \
                   gx*t61860*t61844*t61839*t61974*1/(t61867*t61867*t61867)*t61958*2.0)+c0*pow(rho_a[index],1.0/3.0)*(cx1* \
                   gx*t61838*t61948-cx1*gamma_aa[index]*t61860*t61843*t61952+cx2*gamma_aa[index]*t61860*t61950*t61843* \
                   2.0-cx2*t61860*t61843*t61954*t61839*t61967-cx4*t61842*t61851*t61861*t61964*t61959+cx4*gamma_aa[index]* \
                   t61842*t61861*t61839*t61949*4.0+cx3*gx*t61860*t61951*t61844*t61839*3.0-cx3*gamma_aa[index]*gx*t61860* \
                   t61844*t61953*t61839*t61958)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t59569 = rho_a[index]+rho_b[index];
                double t59570 = 1/pow(t59569,1.0/3.0);
                double t59571 = c*t59570;
                double t59572 = sqrt(t59571);
                double t59573 = b1p*t59572;
                double t59574 = pow(t59571,3.0/2.0);
                double t59575 = b3p*t59574;
                double t59576 = c*c;
                double t59577 = 1/pow(t59569,2.0/3.0);
                double t59578 = b4p*t59576*t59577;
                double t59579 = b2p*c*t59570;
                double t59580 = t59573+t59575+t59578+t59579;
                double t59581 = 1/pow(t59569,4.0/3.0);
                double t59582 = 1/c0p;
                double t59583 = 1/t59580;
                double t59584 = t59582*t59583*(1.0/2.0);
                double t59585 = t59584+1.0;
                double t59586 = a1p*c*t59570;
                double t59587 = t59586+1.0;
                double t59588 = rho_a[index]-rho_b[index];
                double t59589 = t59588*t59588;
                double t59590 = 1/t59569;
                double t59591 = t59590*t59588;
                double t59592 = two_13*2.0;
                double t59593 = t59592-2.0;
                double t59594 = 1/t59593;
                double t59595 = 1/c0f;
                double t59596 = b1f*t59572;
                double t59597 = b3f*t59574;
                double t59598 = b4f*t59576*t59577;
                double t59599 = b2f*c*t59570;
                double t59600 = t59596+t59597+t59598+t59599;
                double t59601 = 1/t59600;
                double t59602 = t59601*t59595*(1.0/2.0);
                double t59603 = t59602+1.0;
                double t59604 = log(t59603);
                double t59605 = a1f*c*t59570;
                double t59606 = t59605+1.0;
                double t59607 = log(t59585);
                double t59617 = c0f*t59604*t59606*2.0;
                double t59618 = c0p*t59607*t59587*2.0;
                double t59608 = t59617-t59618;
                double t59609 = t59591+1.0;
                double t59610 = pow(t59609,4.0/3.0);
                double t59611 = -t59591+1.0;
                double t59612 = pow(t59611,4.0/3.0);
                double t59613 = t59610+t59612-2.0;
                double t59614 = 1/(t59569*t59569);
                double t59645 = t59614*t59588;
                double t59615 = t59590-t59645;
                double t59616 = 1/(t59569*t59569*t59569*t59569);
                double t59619 = t59589*t59589;
                double t59620 = 1/pow(t59569,5.0/3.0);
                double t59621 = 1/sqrt(t59571);
                double t59622 = 1/t59585;
                double t59623 = 1/(t59580*t59580);
                double t59624 = b4p*t59620*t59576*(2.0/3.0);
                double t59625 = b2p*c*t59581*(1.0/3.0);
                double t59626 = b1p*c*t59621*t59581*(1.0/6.0);
                double t59627 = b3p*c*t59572*t59581*(1.0/2.0);
                double t59628 = t59624+t59625+t59626+t59627;
                double t59629 = t59622*t59623*t59628*t59587;
                double t59630 = 1/(t59569*t59569*t59569*t59569*t59569);
                double t59631 = 1/d2fz0;
                double t59632 = 1/Aa;
                double t59633 = b1a*t59572;
                double t59634 = b3a*t59574;
                double t59635 = b4a*t59576*t59577;
                double t59636 = b2a*c*t59570;
                double t59637 = t59633+t59634+t59635+t59636;
                double t59638 = 1/t59637;
                double t59639 = t59632*t59638*(1.0/2.0);
                double t59640 = t59639+1.0;
                double t59641 = log(t59640);
                double t59642 = a1a*c*t59570;
                double t59643 = t59642+1.0;
                double t59644 = pow(t59609,1.0/3.0);
                double t59646 = t59615*t59644*(4.0/3.0);
                double t59647 = pow(t59611,1.0/3.0);
                double t59648 = t59646-t59615*t59647*(4.0/3.0);
                double t59649 = t59616*t59619;
                double t59650 = t59649-1.0;
                double t59651 = 1/pow(rho_a[index],1.0/3.0);
                double t59652 = c*t59651;
                double t59653 = sqrt(t59652);
                double t59654 = b1f*t59653;
                double t59655 = pow(t59652,3.0/2.0);
                double t59656 = b3f*t59655;
                double t59657 = 1/pow(rho_a[index],2.0/3.0);
                double t59658 = b4f*t59576*t59657;
                double t59659 = b2f*c*t59651;
                double t59660 = t59654+t59656+t59658+t59659;
                double t59661 = 1/pow(rho_a[index],4.0/3.0);
                double t59662 = b1p*t59653;
                double t59663 = b3p*t59655;
                double t59664 = b4p*t59576*t59657;
                double t59665 = b2p*c*t59651;
                double t59666 = t59662+t59663+t59664+t59665;
                double t59667 = 1/pow(rho_a[index],5.0/3.0);
                double t59668 = 1/sqrt(t59652);
                double t59669 = 1/t59660;
                double t59670 = t59595*t59669*(1.0/2.0);
                double t59671 = t59670+1.0;
                double t59672 = 1/t59666;
                double t59673 = t59582*t59672*(1.0/2.0);
                double t59674 = t59673+1.0;
                double t59675 = a1p*c*t59651;
                double t59676 = t59675+1.0;
                double t59677 = 1/t59674;
                double t59678 = 1/(t59666*t59666);
                double t59679 = b4p*t59576*t59667*(2.0/3.0);
                double t59680 = b2p*c*t59661*(1.0/3.0);
                double t59681 = b1p*c*t59661*t59668*(1.0/6.0);
                double t59682 = b3p*c*t59661*t59653*(1.0/2.0);
                double t59683 = t59680+t59681+t59682+t59679;
                double t59684 = t59683*t59676*t59677*t59678;
                double t59685 = log(t59674);
                double t59686 = pow(2.0,1.0/3.0);
                double t59687 = t59686*2.0;
                double t59688 = t59687-2.0;
                double t59689 = log(t59671);
                double t59690 = a1f*c*t59651;
                double t59691 = t59690+1.0;
                double t59692 = 1/pow(rho_b[index],8.0/3.0);
                double t59693 = 1/pow(rho_a[index],8.0/3.0);
                double t59694 = gamma_aa[index]*t59693*(1.0/2.0);
                double t59695 = gamma_bb[index]*t59692*(1.0/2.0);
                double t59696 = t59694+t59695;
                double t59697 = gcab*t59696;
                double t59698 = t59697+1.0;
                double t59699 = gcab*gcab;
                double t59700 = t59696*t59696;
                double t59701 = t59699*t59699;
                double t59702 = t59700*t59700;
                double t59703 = t59700*t59699;
                double t59704 = gcab*t59696*2.0;
                double t59705 = t59703+t59704+1.0;
                double t59706 = t59700*t59699*3.0;
                double t59707 = gcab*t59700*t59696*t59699;
                double t59708 = gcab*t59696*3.0;
                double t59709 = t59706+t59707+t59708+1.0;
                double t59710 = t59700*t59699*6.0;
                double t59711 = gcab*t59700*t59696*t59699*4.0;
                double t59712 = t59701*t59702;
                double t59713 = gcab*t59696*4.0;
                double t59714 = t59710+t59711+t59712+t59713+1.0;
                double t59715 = c0f*t59691*t59689*2.0;
                double t59717 = c0p*t59676*t59685*2.0;
                double t59716 = t59715-t59717;
                double t59718 = 1/pow(rho_b[index],1.0/3.0);
                double t59719 = c*t59718;
                double t59720 = sqrt(t59719);
                double t59721 = pow(t59719,3.0/2.0);
                double t59722 = 1/pow(rho_b[index],2.0/3.0);
                double t59723 = b1p*t59720;
                double t59724 = b3p*t59721;
                double t59725 = b4p*t59722*t59576;
                double t59726 = b2p*c*t59718;
                double t59727 = t59723+t59724+t59725+t59726;
                double t59728 = 1/t59727;
                double t59729 = t59582*t59728*(1.0/2.0);
                double t59730 = t59729+1.0;
                double t59731 = log(t59730);
                double t59732 = a1p*c*t59718;
                double t59733 = t59732+1.0;
                double t59734 = c0p*t59731*t59733*2.0;
                double t59735 = t59613*t59616*t59608*t59619*t59594;
                double t59736 = Aa*t59613*t59631*t59641*t59650*t59643*t59594*2.0;
                double t59737 = 1/pow(rho_a[index],1.1E1/3.0);
                double t59738 = 1/(t59709*t59709);
                double t59739 = 1/(t59714*t59714);
                double t59740 = gcab*t59692*2.0;
                double t59741 = t59692*t59696*t59699*6.0;
                double t59742 = gcab*t59700*t59692*t59699*6.0;
                double t59743 = t59700*t59701*t59692*t59696*2.0;
                double t59744 = t59740+t59741+t59742+t59743;
                double t59745 = 1/(t59705*t59705);
                double t59746 = gamma_aa[index]*gcab*t59737*(8.0/3.0);
                double t59747 = gamma_aa[index]*t59737*t59696*t59699*(8.0/3.0);
                double t59748 = t59746+t59747;
                double t59749 = gcab*t59692;
                double t59750 = t59692*t59696*t59699;
                double t59751 = t59750+t59749;
                double t59752 = gamma_aa[index]*gcab*t59737*(1.6E1/3.0);
                double t59753 = gamma_aa[index]*gcab*t59700*t59737*t59699*1.6E1;
                double t59754 = gamma_aa[index]*t59700*t59701*t59737*t59696*(1.6E1/3.0);
                double t59755 = gamma_aa[index]*t59737*t59696*t59699*1.6E1;
                double t59756 = t59752+t59753+t59754+t59755;
                double t59757 = 1/(t59698*t59698);
                double t59758 = 1/t59705;
                double t59759 = gcab*t59692*(3.0/2.0);
                double t59760 = t59692*t59696*t59699*3.0;
                double t59761 = gcab*t59700*t59692*t59699*(3.0/2.0);
                double t59762 = t59760+t59761+t59759;
                double t59763 = gamma_aa[index]*gcab*t59737*4.0;
                double t59764 = gamma_aa[index]*gcab*t59700*t59737*t59699*4.0;
                double t59765 = gamma_aa[index]*t59737*t59696*t59699*8.0;
                double t59766 = t59763+t59764+t59765;
                double t59767 = 1/t59709;
                double t59768 = 1/t59714;
                v_rho_a_gamma_bb_[index] = -(t59618+t59735+t59736+t59569*(t59629-t59613*t59616*t59619*t59594*(t59629- \
                   (1/(t59600*t59600)*t59606*(b2f*c*t59581*(1.0/3.0)+b4f*t59620*t59576*(2.0/3.0)+b1f*c*t59621*t59581* \
                   (1.0/6.0)+b3f*c*t59572*t59581*(1.0/2.0)))/t59603+a1f*c*c0f*t59604*t59581*(2.0/3.0)-a1p*c*c0p*t59607* \
                   t59581*(2.0/3.0))-a1p*c*c0p*t59607*t59581*(2.0/3.0)-t59630*t59613*t59608*t59619*t59594*4.0+t59616* \
                   t59608*t59619*t59594*t59648+t59613*t59616*t59608*t59594*t59588*t59589*4.0-Aa*t59613*t59631*t59641* \
                   t59643*t59594*(t59630*t59619*4.0-t59616*t59588*t59589*4.0)*2.0+Aa*t59631*t59641*t59650*t59643*t59594* \
                   t59648*2.0+(t59613*t59631*t59650*t59643*1/(t59637*t59637)*t59594*(b2a*c*t59581*(1.0/3.0)+b4a*t59620* \
                   t59576*(2.0/3.0)+b1a*c*t59621*t59581*(1.0/6.0)+b3a*c*t59572*t59581*(1.0/2.0)))/t59640-Aa*a1a*c*t59613* \
                   t59631*t59641*t59650*t59581*t59594*(2.0/3.0))+rho_a[index]*(-t59684+t59594*t59688*(t59684-(1/(t59660* \
                   t59660)*t59691*(b2f*c*t59661*(1.0/3.0)+b4f*t59576*t59667*(2.0/3.0)+b1f*c*t59661*t59668*(1.0/6.0)+b3f* \
                   c*t59661*t59653*(1.0/2.0)))/t59671+a1f*c*c0f*t59661*t59689*(2.0/3.0)-a1p*c*c0p*t59661*t59685*(2.0/ \
                   3.0))+a1p*c*c0p*t59661*t59685*(2.0/3.0))-c0p*t59676*t59685*2.0-t59716*t59594*t59688)*((ccab1*gcab* \
                   t59692*(1.0/2.0))/t59698-ccab4*t59701*t59702*t59744*t59739-ccab2*t59700*t59751*t59745*t59699-ccab1* \
                   t59692*t59757*t59696*t59699*(1.0/2.0)+ccab2*t59692*t59758*t59696*t59699+ccab4*t59700*t59701*t59692* \
                   t59696*t59768*2.0+ccab3*gcab*t59700*t59692*t59767*t59699*(3.0/2.0)-ccab3*gcab*t59700*t59762*t59738* \
                   t59696*t59699)+(rho_a[index]*(t59717+t59716*t59594*t59688)+rho_b[index]*(t59734-t59594*t59688*(t59734- \
                   c0f*log((t59595*(1.0/2.0))/(b1f*t59720+b3f*t59721+b2f*c*t59718+b4f*t59722*t59576)+1.0)*(a1f*c*t59718+ \
                   1.0)*2.0))-t59569*(t59618+t59735+t59736))*(ccab4*t59701*t59702*t59739*(gamma_aa[index]*t59692*t59737* \
                   t59699*8.0+gamma_aa[index]*t59700*t59701*t59692*t59737*8.0+gamma_aa[index]*gcab*t59692*t59737*t59696* \
                   t59699*1.6E1)+ccab2*t59745*t59692*t59748*t59696*t59699-ccab4*t59701*t59702*1/(t59714*t59714*t59714) \
                   *t59744*t59756*2.0-ccab2*t59700*1/(t59705*t59705*t59705)*t59751*t59748*t59699*2.0+ccab1*gamma_aa[index]* \
                   t59692*t59737*t59757*t59699*(4.0/3.0)-ccab2*gamma_aa[index]*t59692*t59737*t59758*t59699*(4.0/3.0)+ \
                   ccab2*gamma_aa[index]*t59700*t59701*t59745*t59692*t59737*(4.0/3.0)-ccab4*gamma_aa[index]*t59700*t59701* \
                   t59692*t59737*t59768*8.0+ccab2*gamma_aa[index]*t59751*t59745*t59737*t59696*t59699*(8.0/3.0)+ccab3* \
                   gcab*t59700*t59692*t59738*t59766*t59699*(3.0/2.0)+ccab4*t59700*t59701*t59692*t59756*t59739*t59696* \
                   2.0+ccab3*gcab*t59700*t59738*t59696*t59699*(gamma_aa[index]*t59692*t59737*t59699*4.0+gamma_aa[index]* \
                   gcab*t59692*t59737*t59696*t59699*4.0)-ccab1*gamma_aa[index]*gcab*t59692*t59737*t59696*1/(t59698*t59698* \
                   t59698)*t59699*(4.0/3.0)-ccab3*gcab*t59700*t59762*1/(t59709*t59709*t59709)*t59766*t59696*t59699*2.0+ \
                   ccab3*gamma_aa[index]*gcab*t59700*t59762*t59737*t59738*t59699*4.0-ccab3*gamma_aa[index]*gcab*t59692* \
                   t59737*t59767*t59696*t59699*4.0+ccab4*gamma_aa[index]*t59700*t59701*t59744*t59737*t59739*t59696*(1.6E1/ \
                   3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t59770 = rho_a[index]+rho_b[index];
                double t59771 = 1/pow(t59770,1.0/3.0);
                double t59772 = c*t59771;
                double t59773 = sqrt(t59772);
                double t59774 = b1p*t59773;
                double t59775 = pow(t59772,3.0/2.0);
                double t59776 = b3p*t59775;
                double t59777 = c*c;
                double t59778 = 1/pow(t59770,2.0/3.0);
                double t59779 = b4p*t59777*t59778;
                double t59780 = b2p*c*t59771;
                double t59781 = t59780+t59774+t59776+t59779;
                double t59782 = 1/pow(t59770,4.0/3.0);
                double t59783 = 1/c0p;
                double t59784 = 1/t59781;
                double t59785 = t59783*t59784*(1.0/2.0);
                double t59786 = t59785+1.0;
                double t59787 = a1p*c*t59771;
                double t59788 = t59787+1.0;
                double t59789 = rho_a[index]-rho_b[index];
                double t59790 = t59789*t59789;
                double t59791 = 1/t59770;
                double t59792 = t59791*t59789;
                double t59793 = two_13*2.0;
                double t59794 = t59793-2.0;
                double t59795 = 1/t59794;
                double t59796 = 1/c0f;
                double t59797 = b1f*t59773;
                double t59798 = b3f*t59775;
                double t59799 = b4f*t59777*t59778;
                double t59800 = b2f*c*t59771;
                double t59801 = t59800+t59797+t59798+t59799;
                double t59802 = 1/t59801;
                double t59803 = t59802*t59796*(1.0/2.0);
                double t59804 = t59803+1.0;
                double t59805 = log(t59804);
                double t59806 = a1f*c*t59771;
                double t59807 = t59806+1.0;
                double t59808 = log(t59786);
                double t59819 = c0f*t59805*t59807*2.0;
                double t59820 = c0p*t59808*t59788*2.0;
                double t59809 = -t59820+t59819;
                double t59810 = t59792+1.0;
                double t59811 = pow(t59810,4.0/3.0);
                double t59812 = -t59792+1.0;
                double t59813 = pow(t59812,4.0/3.0);
                double t59814 = t59811+t59813-2.0;
                double t59815 = 1/(t59770*t59770);
                double t59816 = t59815*t59789;
                double t59817 = t59816+t59791;
                double t59818 = 1/(t59770*t59770*t59770*t59770);
                double t59821 = t59790*t59790;
                double t59822 = 1/pow(t59770,5.0/3.0);
                double t59823 = 1/sqrt(t59772);
                double t59824 = 1/t59786;
                double t59825 = 1/(t59781*t59781);
                double t59826 = b4p*t59822*t59777*(2.0/3.0);
                double t59827 = b2p*c*t59782*(1.0/3.0);
                double t59828 = b1p*c*t59823*t59782*(1.0/6.0);
                double t59829 = b3p*c*t59773*t59782*(1.0/2.0);
                double t59830 = t59826+t59827+t59828+t59829;
                double t59831 = 1/(t59770*t59770*t59770*t59770*t59770);
                double t59832 = 1/d2fz0;
                double t59833 = 1/Aa;
                double t59834 = b1a*t59773;
                double t59835 = b3a*t59775;
                double t59836 = b4a*t59777*t59778;
                double t59837 = b2a*c*t59771;
                double t59838 = t59834+t59835+t59836+t59837;
                double t59839 = 1/t59838;
                double t59840 = t59833*t59839*(1.0/2.0);
                double t59841 = t59840+1.0;
                double t59842 = log(t59841);
                double t59843 = a1a*c*t59771;
                double t59844 = t59843+1.0;
                double t59845 = pow(t59810,1.0/3.0);
                double t59846 = t59817*t59845*(4.0/3.0);
                double t59847 = pow(t59812,1.0/3.0);
                double t59848 = t59846-t59817*t59847*(4.0/3.0);
                double t59849 = t59821*t59818;
                double t59850 = t59849-1.0;
                double t59851 = 1/pow(rho_b[index],1.0/3.0);
                double t59852 = c*t59851;
                double t59853 = sqrt(t59852);
                double t59854 = b1f*t59853;
                double t59855 = pow(t59852,3.0/2.0);
                double t59856 = b3f*t59855;
                double t59857 = 1/pow(rho_b[index],2.0/3.0);
                double t59858 = b4f*t59857*t59777;
                double t59859 = b2f*c*t59851;
                double t59860 = t59854+t59856+t59858+t59859;
                double t59861 = 1/pow(rho_b[index],4.0/3.0);
                double t59862 = b1p*t59853;
                double t59863 = b3p*t59855;
                double t59864 = b4p*t59857*t59777;
                double t59865 = b2p*c*t59851;
                double t59866 = t59862+t59863+t59864+t59865;
                double t59867 = 1/pow(rho_b[index],5.0/3.0);
                double t59868 = 1/sqrt(t59852);
                double t59869 = 1/t59860;
                double t59870 = t59796*t59869*(1.0/2.0);
                double t59871 = t59870+1.0;
                double t59872 = 1/t59866;
                double t59873 = t59872*t59783*(1.0/2.0);
                double t59874 = t59873+1.0;
                double t59875 = a1p*c*t59851;
                double t59876 = t59875+1.0;
                double t59877 = 1/t59874;
                double t59878 = 1/(t59866*t59866);
                double t59879 = b4p*t59777*t59867*(2.0/3.0);
                double t59880 = b2p*c*t59861*(1.0/3.0);
                double t59881 = b1p*c*t59861*t59868*(1.0/6.0);
                double t59882 = b3p*c*t59861*t59853*(1.0/2.0);
                double t59883 = t59880+t59881+t59882+t59879;
                double t59884 = t59883*t59876*t59877*t59878;
                double t59885 = log(t59874);
                double t59886 = pow(2.0,1.0/3.0);
                double t59887 = t59886*2.0;
                double t59888 = t59887-2.0;
                double t59889 = log(t59871);
                double t59890 = a1f*c*t59851;
                double t59891 = t59890+1.0;
                double t59892 = 1/pow(rho_a[index],8.0/3.0);
                double t59893 = gamma_aa[index]*t59892*(1.0/2.0);
                double t59894 = 1/pow(rho_b[index],8.0/3.0);
                double t59895 = gamma_bb[index]*t59894*(1.0/2.0);
                double t59896 = t59893+t59895;
                double t59897 = gcab*t59896;
                double t59898 = t59897+1.0;
                double t59899 = gcab*gcab;
                double t59900 = t59896*t59896;
                double t59901 = t59899*t59899;
                double t59902 = t59900*t59900;
                double t59903 = t59900*t59899;
                double t59904 = gcab*t59896*2.0;
                double t59905 = t59903+t59904+1.0;
                double t59906 = t59900*t59899*3.0;
                double t59907 = gcab*t59900*t59896*t59899;
                double t59908 = gcab*t59896*3.0;
                double t59909 = t59906+t59907+t59908+1.0;
                double t59910 = t59900*t59899*6.0;
                double t59911 = gcab*t59900*t59896*t59899*4.0;
                double t59912 = t59901*t59902;
                double t59913 = gcab*t59896*4.0;
                double t59914 = t59910+t59911+t59912+t59913+1.0;
                double t59915 = a1p*c*c0p*t59808*t59782*(2.0/3.0);
                double t59916 = 1/pow(rho_a[index],1.0/3.0);
                double t59917 = c*t59916;
                double t59918 = sqrt(t59917);
                double t59919 = pow(t59917,3.0/2.0);
                double t59920 = 1/pow(rho_a[index],2.0/3.0);
                double t59921 = b1p*t59918;
                double t59922 = b3p*t59919;
                double t59923 = b4p*t59920*t59777;
                double t59924 = b2p*c*t59916;
                double t59925 = t59921+t59922+t59923+t59924;
                double t59926 = 1/t59925;
                double t59927 = t59926*t59783*(1.0/2.0);
                double t59928 = t59927+1.0;
                double t59929 = log(t59928);
                double t59930 = a1p*c*t59916;
                double t59931 = t59930+1.0;
                double t59932 = c0p*t59931*t59929*2.0;
                double t59933 = c0f*t59891*t59889*2.0;
                double t59935 = c0p*t59876*t59885*2.0;
                double t59934 = t59933-t59935;
                double t59936 = t59821*t59814*t59809*t59818*t59795;
                double t59937 = Aa*t59814*t59832*t59850*t59842*t59844*t59795*2.0;
                double t59938 = 1/pow(rho_b[index],1.1E1/3.0);
                double t59939 = 1/(t59909*t59909);
                double t59940 = 1/(t59914*t59914);
                double t59941 = gcab*t59892*2.0;
                double t59942 = t59892*t59896*t59899*6.0;
                double t59943 = gcab*t59900*t59892*t59899*6.0;
                double t59944 = t59900*t59901*t59892*t59896*2.0;
                double t59945 = t59941+t59942+t59943+t59944;
                double t59946 = 1/(t59905*t59905);
                double t59947 = gamma_bb[index]*gcab*t59938*(8.0/3.0);
                double t59948 = gamma_bb[index]*t59938*t59896*t59899*(8.0/3.0);
                double t59949 = t59947+t59948;
                double t59950 = gcab*t59892;
                double t59951 = t59892*t59896*t59899;
                double t59952 = t59950+t59951;
                double t59953 = gamma_bb[index]*gcab*t59938*(1.6E1/3.0);
                double t59954 = gamma_bb[index]*gcab*t59900*t59938*t59899*1.6E1;
                double t59955 = gamma_bb[index]*t59900*t59901*t59938*t59896*(1.6E1/3.0);
                double t59956 = gamma_bb[index]*t59938*t59896*t59899*1.6E1;
                double t59957 = t59953+t59954+t59955+t59956;
                double t59958 = 1/(t59898*t59898);
                double t59959 = 1/t59905;
                double t59960 = gcab*t59892*(3.0/2.0);
                double t59961 = t59892*t59896*t59899*3.0;
                double t59962 = gcab*t59900*t59892*t59899*(3.0/2.0);
                double t59963 = t59960+t59961+t59962;
                double t59964 = gamma_bb[index]*gcab*t59938*4.0;
                double t59965 = gamma_bb[index]*gcab*t59900*t59938*t59899*4.0;
                double t59966 = gamma_bb[index]*t59938*t59896*t59899*8.0;
                double t59967 = t59964+t59965+t59966;
                double t59968 = 1/t59909;
                double t59969 = 1/t59914;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t59935+t59934*t59795*t59888)+rho_a[index]*(t59932-t59795* \
                   t59888*(t59932-c0f*log((t59796*(1.0/2.0))/(b1f*t59918+b3f*t59919+b2f*c*t59916+b4f*t59920*t59777)+1.0) \
                   *(a1f*c*t59916+1.0)*2.0))-t59770*(t59820+t59936+t59937))*(ccab4*t59901*t59902*t59940*(gamma_bb[index]* \
                   t59892*t59938*t59899*8.0+gamma_bb[index]*t59900*t59901*t59892*t59938*8.0+gamma_bb[index]*gcab*t59892* \
                   t59938*t59896*t59899*1.6E1)+ccab2*t59892*t59946*t59949*t59896*t59899-ccab4*t59901*t59902*1/(t59914* \
                   t59914*t59914)*t59945*t59957*2.0-ccab2*t59900*1/(t59905*t59905*t59905)*t59952*t59949*t59899*2.0+ccab1* \
                   gamma_bb[index]*t59892*t59938*t59958*t59899*(4.0/3.0)-ccab2*gamma_bb[index]*t59892*t59938*t59959*t59899* \
                   (4.0/3.0)+ccab2*gamma_bb[index]*t59900*t59901*t59892*t59946*t59938*(4.0/3.0)-ccab4*gamma_bb[index]* \
                   t59900*t59901*t59892*t59938*t59969*8.0+ccab2*gamma_bb[index]*t59952*t59946*t59938*t59896*t59899*(8.0/ \
                   3.0)+ccab3*gcab*t59900*t59892*t59939*t59967*t59899*(3.0/2.0)+ccab4*t59900*t59901*t59940*t59892*t59957* \
                   t59896*2.0+ccab3*gcab*t59900*t59939*t59896*t59899*(gamma_bb[index]*t59892*t59938*t59899*4.0+gamma_bb[index]* \
                   gcab*t59892*t59938*t59896*t59899*4.0)-ccab1*gamma_bb[index]*gcab*t59892*t59938*t59896*1/(t59898*t59898* \
                   t59898)*t59899*(4.0/3.0)-ccab3*gcab*t59900*1/(t59909*t59909*t59909)*t59963*t59967*t59896*t59899*2.0+ \
                   ccab3*gamma_bb[index]*gcab*t59900*t59963*t59938*t59939*t59899*4.0-ccab3*gamma_bb[index]*gcab*t59892* \
                   t59938*t59896*t59968*t59899*4.0+ccab4*gamma_bb[index]*t59900*t59901*t59940*t59945*t59938*t59896*(1.6E1/ \
                   3.0))-(t59820+t59936+t59937+rho_b[index]*(-t59884+t59795*t59888*(t59884-(1/(t59860*t59860)*t59891* \
                   (b2f*c*t59861*(1.0/3.0)+b4f*t59777*t59867*(2.0/3.0)+b1f*c*t59861*t59868*(1.0/6.0)+b3f*c*t59861*t59853* \
                   (1.0/2.0)))/t59871+a1f*c*c0f*t59861*t59889*(2.0/3.0)-a1p*c*c0p*t59861*t59885*(2.0/3.0))+a1p*c*c0p* \
                   t59861*t59885*(2.0/3.0))-t59770*(t59915-t59830*t59824*t59825*t59788+t59821*t59831*t59814*t59809*t59795* \
                   4.0+t59821*t59809*t59818*t59848*t59795-t59821*t59814*t59818*t59795*(t59915-t59830*t59824*t59825*t59788+ \
                   (1/(t59801*t59801)*t59807*(b2f*c*t59782*(1.0/3.0)+b4f*t59822*t59777*(2.0/3.0)+b1f*c*t59823*t59782* \
                   (1.0/6.0)+b3f*c*t59773*t59782*(1.0/2.0)))/t59804-a1f*c*c0f*t59805*t59782*(2.0/3.0))+t59814*t59790* \
                   t59809*t59818*t59795*t59789*4.0+Aa*t59814*t59832*t59842*t59844*t59795*(t59821*t59831*4.0+t59790*t59818* \
                   t59789*4.0)*2.0+Aa*t59832*t59850*t59842*t59844*t59848*t59795*2.0-(t59814*t59832*t59850*t59844*1/(t59838* \
                   t59838)*t59795*(b2a*c*t59782*(1.0/3.0)+b4a*t59822*t59777*(2.0/3.0)+b1a*c*t59823*t59782*(1.0/6.0)+b3a* \
                   c*t59773*t59782*(1.0/2.0)))/t59841+Aa*a1a*c*t59814*t59832*t59850*t59842*t59782*t59795*(2.0/3.0))-c0p* \
                   t59876*t59885*2.0-t59934*t59795*t59888)*((ccab1*gcab*t59892*(1.0/2.0))/t59898-ccab4*t59901*t59902* \
                   t59940*t59945-ccab2*t59900*t59952*t59946*t59899-ccab1*t59892*t59958*t59896*t59899*(1.0/2.0)+ccab2* \
                   t59892*t59896*t59959*t59899+ccab4*t59900*t59901*t59892*t59896*t59969*2.0+ccab3*gcab*t59900*t59892* \
                   t59968*t59899*(3.0/2.0)-ccab3*gcab*t59900*t59963*t59939*t59896*t59899);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t59972 = 1/pow(rho_b[index],1.0/3.0);
                double t59973 = c*t59972;
                double t59974 = sqrt(t59973);
                double t59975 = pow(t59973,3.0/2.0);
                double t59976 = c*c;
                double t59977 = 1/pow(rho_b[index],2.0/3.0);
                double t59978 = 1/c0p;
                double t59979 = b1p*t59974;
                double t59980 = b3p*t59975;
                double t59981 = b4p*t59976*t59977;
                double t59982 = b2p*c*t59972;
                double t59983 = t59980+t59981+t59982+t59979;
                double t59984 = 1/t59983;
                double t59985 = t59984*t59978*(1.0/2.0);
                double t59986 = t59985+1.0;
                double t59987 = log(t59986);
                double t59988 = a1p*c*t59972;
                double t59989 = t59988+1.0;
                double t59990 = 1/pow(rho_b[index],8.0/3.0);
                double t59991 = gamma_bb[index]*gamma_bb[index];
                double t59992 = gcaa*gcaa;
                double t59993 = t59992*t59992;
                double t59994 = 1/pow(rho_b[index],3.2E1/3.0);
                double t59995 = 1/pow(rho_b[index],1.6E1/3.0);
                double t59996 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t59997 = gamma_bb[index]*gcaa*t59990;
                double t59998 = t59997+1.0;
                double t59999 = gamma_bb[index]*gcaa*t59990*3.0;
                double t60000 = gamma_bb[index]*gcaa*t59991*t59992*t59996;
                double t60001 = t59991*t59992*t59995*3.0;
                double t60002 = t59999+t60000+t60001+1.0;
                double t60003 = t59991*t59991;
                double t60004 = gamma_bb[index]*gcaa*t59990*4.0;
                double t60005 = gamma_bb[index]*gcaa*t59991*t59992*t59996*4.0;
                double t60006 = t59991*t59992*t59995*6.0;
                double t60007 = t59993*t59994*t60003;
                double t60008 = t60004+t60005+t60006+t60007+1.0;
                double t60009 = gamma_bb[index]*gcaa*t59990*2.0;
                double t60010 = t59991*t59992*t59995;
                double t60011 = t60010+t60009+1.0;
                double t60012 = rho_a[index]+rho_b[index];
                double t60013 = 1/pow(t60012,1.0/3.0);
                double t60014 = c*t60013;
                double t60015 = sqrt(t60014);
                double t60016 = b1p*t60015;
                double t60017 = pow(t60014,3.0/2.0);
                double t60018 = b3p*t60017;
                double t60019 = 1/pow(t60012,2.0/3.0);
                double t60020 = b4p*t59976*t60019;
                double t60021 = b2p*c*t60013;
                double t60022 = t60020+t60021+t60016+t60018;
                double t60023 = 1/pow(t60012,4.0/3.0);
                double t60024 = two_13*2.0;
                double t60025 = t60024-2.0;
                double t60026 = 1/t60025;
                double t60027 = 1/c0f;
                double t60028 = 1/t60022;
                double t60029 = t59978*t60028*(1.0/2.0);
                double t60030 = t60029+1.0;
                double t60031 = a1p*c*t60013;
                double t60032 = t60031+1.0;
                double t60033 = rho_a[index]-rho_b[index];
                double t60034 = t60033*t60033;
                double t60035 = 1/t60012;
                double t60036 = t60033*t60035;
                double t60037 = b1f*t60015;
                double t60038 = b3f*t60017;
                double t60039 = b4f*t59976*t60019;
                double t60040 = b2f*c*t60013;
                double t60041 = t60040+t60037+t60038+t60039;
                double t60042 = 1/t60041;
                double t60043 = t60042*t60027*(1.0/2.0);
                double t60044 = t60043+1.0;
                double t60045 = log(t60044);
                double t60046 = a1f*c*t60013;
                double t60047 = t60046+1.0;
                double t60048 = log(t60030);
                double t60059 = c0f*t60045*t60047*2.0;
                double t60060 = c0p*t60032*t60048*2.0;
                double t60049 = -t60060+t60059;
                double t60050 = t60036+1.0;
                double t60051 = pow(t60050,4.0/3.0);
                double t60052 = -t60036+1.0;
                double t60053 = pow(t60052,4.0/3.0);
                double t60054 = t60051+t60053-2.0;
                double t60055 = 1/(t60012*t60012);
                double t60056 = t60033*t60055;
                double t60057 = t60035+t60056;
                double t60058 = 1/(t60012*t60012*t60012*t60012);
                double t60061 = t60034*t60034;
                double t60062 = 1/pow(t60012,5.0/3.0);
                double t60063 = 1/sqrt(t60014);
                double t60064 = 1/t60030;
                double t60065 = 1/(t60022*t60022);
                double t60066 = b4p*t59976*t60062*(2.0/3.0);
                double t60067 = b2p*c*t60023*(1.0/3.0);
                double t60068 = b1p*c*t60023*t60063*(1.0/6.0);
                double t60069 = b3p*c*t60023*t60015*(1.0/2.0);
                double t60070 = t60066+t60067+t60068+t60069;
                double t60071 = 1/(t60012*t60012*t60012*t60012*t60012);
                double t60072 = 1/d2fz0;
                double t60073 = 1/Aa;
                double t60074 = b1a*t60015;
                double t60075 = b3a*t60017;
                double t60076 = b4a*t59976*t60019;
                double t60077 = b2a*c*t60013;
                double t60078 = t60074+t60075+t60076+t60077;
                double t60079 = 1/t60078;
                double t60080 = t60073*t60079*(1.0/2.0);
                double t60081 = t60080+1.0;
                double t60082 = log(t60081);
                double t60083 = a1a*c*t60013;
                double t60084 = t60083+1.0;
                double t60085 = pow(t60050,1.0/3.0);
                double t60086 = t60057*t60085*(4.0/3.0);
                double t60087 = pow(t60052,1.0/3.0);
                double t60088 = t60086-t60057*t60087*(4.0/3.0);
                double t60089 = t60061*t60058;
                double t60090 = t60089-1.0;
                double t60091 = pow(2.0,1.0/3.0);
                double t60092 = t60091*2.0;
                double t60093 = t60092-2.0;
                double t60094 = a1f*c*t59972;
                double t60095 = t60094+1.0;
                double t60096 = b1f*t59974;
                double t60097 = b3f*t59975;
                double t60098 = b4f*t59976*t59977;
                double t60099 = b2f*c*t59972;
                double t60100 = t60096+t60097+t60098+t60099;
                double t60101 = 1/t60100;
                double t60102 = t60101*t60027*(1.0/2.0);
                double t60103 = t60102+1.0;
                double t60104 = 1/pow(rho_b[index],4.0/3.0);
                double t60105 = 1/pow(rho_b[index],5.0/3.0);
                double t60106 = 1/sqrt(t59973);
                double t60107 = log(t60103);
                double t60108 = 1/t59986;
                double t60109 = 1/(t59983*t59983);
                double t60110 = b4p*t59976*t60105*(2.0/3.0);
                double t60111 = b2p*c*t60104*(1.0/3.0);
                double t60112 = b1p*c*t60104*t60106*(1.0/6.0);
                double t60113 = b3p*c*t59974*t60104*(1.0/2.0);
                double t60114 = t60110+t60111+t60112+t60113;
                double t60115 = t59989*t60114*t60108*t60109;
                double t60116 = c0p*t59987*t59989*2.0;
                double t60158 = c0f*t60107*t60095*2.0;
                double t60117 = t60116-t60158;
                double t60118 = 1/pow(rho_a[index],8.0/3.0);
                double t60119 = gamma_aa[index]*t60118*(1.0/2.0);
                double t60120 = gamma_bb[index]*t59990*(1.0/2.0);
                double t60121 = t60120+t60119;
                double t60122 = gcab*t60121;
                double t60123 = t60122+1.0;
                double t60124 = gcab*gcab;
                double t60125 = t60121*t60121;
                double t60126 = t60124*t60124;
                double t60127 = t60125*t60125;
                double t60128 = t60124*t60125;
                double t60129 = gcab*t60121*2.0;
                double t60130 = t60128+t60129+1.0;
                double t60131 = t60124*t60125*3.0;
                double t60132 = gcab*t60121*t60124*t60125;
                double t60133 = gcab*t60121*3.0;
                double t60134 = t60131+t60132+t60133+1.0;
                double t60135 = t60124*t60125*6.0;
                double t60136 = gcab*t60121*t60124*t60125*4.0;
                double t60137 = t60126*t60127;
                double t60138 = gcab*t60121*4.0;
                double t60139 = t60135+t60136+t60137+t60138+1.0;
                double t60140 = a1p*c*c0p*t60023*t60048*(2.0/3.0);
                double t60141 = 1/pow(rho_a[index],1.0/3.0);
                double t60142 = c*t60141;
                double t60143 = sqrt(t60142);
                double t60144 = pow(t60142,3.0/2.0);
                double t60145 = 1/pow(rho_a[index],2.0/3.0);
                double t60146 = b1p*t60143;
                double t60147 = b3p*t60144;
                double t60148 = b4p*t59976*t60145;
                double t60149 = b2p*c*t60141;
                double t60150 = t60146+t60147+t60148+t60149;
                double t60151 = 1/t60150;
                double t60152 = t59978*t60151*(1.0/2.0);
                double t60153 = t60152+1.0;
                double t60154 = log(t60153);
                double t60155 = a1p*c*t60141;
                double t60156 = t60155+1.0;
                double t60157 = c0p*t60154*t60156*2.0;
                double t60159 = t60026*t60117*t60093;
                double t60160 = t60061*t60026*t60054*t60049*t60058;
                double t60161 = Aa*t60026*t60054*t60072*t60090*t60082*t60084*2.0;
                double t60162 = 1/t60123;
                double t60163 = 1/pow(rho_b[index],1.1E1/3.0);
                double t60164 = 1/(t60123*t60123);
                double t60165 = 1/t60130;
                double t60166 = 1/(t60134*t60134);
                double t60167 = 1/pow(rho_b[index],1.9E1/3.0);
                double t60168 = 1/(t60130*t60130);
                double t60169 = 1/t60134;
                double t60170 = 1/t60139;
                double t60171 = 1/(t60139*t60139);
                double t60172 = gcab*t59990*2.0;
                double t60173 = t59990*t60121*t60124*6.0;
                double t60174 = gcab*t59990*t60124*t60125*6.0;
                double t60175 = t59990*t60121*t60125*t60126*2.0;
                double t60176 = t60172+t60173+t60174+t60175;
                double t60177 = gamma_bb[index]*gcab*t60163*(8.0/3.0);
                double t60178 = gamma_bb[index]*t60121*t60124*t60163*(8.0/3.0);
                double t60179 = t60177+t60178;
                double t60180 = gcab*t59990;
                double t60181 = t59990*t60121*t60124;
                double t60182 = t60180+t60181;
                double t60183 = gamma_bb[index]*gcab*t60163*(1.6E1/3.0);
                double t60184 = gamma_bb[index]*gcab*t60124*t60125*t60163*1.6E1;
                double t60185 = gamma_bb[index]*t60121*t60125*t60126*t60163*(1.6E1/3.0);
                double t60186 = gamma_bb[index]*t60121*t60124*t60163*1.6E1;
                double t60187 = t60183+t60184+t60185+t60186;
                double t60188 = gcab*t59990*(3.0/2.0);
                double t60189 = t59990*t60121*t60124*3.0;
                double t60190 = gcab*t59990*t60124*t60125*(3.0/2.0);
                double t60191 = t60190+t60188+t60189;
                double t60192 = gamma_bb[index]*gcab*t60163*4.0;
                double t60193 = gamma_bb[index]*gcab*t60124*t60125*t60163*4.0;
                double t60194 = gamma_bb[index]*t60121*t60124*t60163*8.0;
                double t60195 = t60192+t60193+t60194;
                double t60196 = gx*gx;
                double t60197 = t60196*t60196;
                double t60198 = gamma_bb[index]*gx*t59990;
                double t60199 = t60198+1.0;
                double t60200 = gamma_bb[index]*gx*t59990*3.0;
                double t60201 = gamma_bb[index]*gx*t59991*t59996*t60196;
                double t60202 = t59991*t59995*t60196*3.0;
                double t60203 = t60200+t60201+t60202+1.0;
                double t60204 = gamma_bb[index]*gx*t59990*4.0;
                double t60205 = gamma_bb[index]*gx*t59991*t59996*t60196*4.0;
                double t60206 = t59991*t59995*t60196*6.0;
                double t60207 = t59994*t60003*t60197;
                double t60208 = t60204+t60205+t60206+t60207+1.0;
                double t60209 = gamma_bb[index]*gx*t59990*2.0;
                double t60210 = t59991*t59995*t60196;
                double t60211 = t60210+t60209+1.0;
                double t60212 = t60116-t60159;
                double t60213 = 1/t59998;
                double t60214 = 1/t60008;
                double t60215 = 1/t60011;
                double t60216 = 1/t60002;
                double t60217 = 1/(t59998*t59998);
                double t60218 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t60219 = 1/(t60002*t60002);
                double t60220 = 1/(t60011*t60011);
                double t60221 = gcaa*t59990*3.0;
                double t60222 = gamma_bb[index]*t59992*t59995*6.0;
                double t60223 = gcaa*t59991*t59992*t59996*3.0;
                double t60224 = t60221+t60222+t60223;
                double t60225 = 1/pow(rho_b[index],3.5E1/3.0);
                double t60226 = 1/(t60008*t60008);
                double t60227 = gcaa*t59990*4.0;
                double t60228 = gamma_bb[index]*t59992*t59995*1.2E1;
                double t60229 = gcaa*t59991*t59992*t59996*1.2E1;
                double t60230 = gamma_bb[index]*t59991*t59993*t59994*4.0;
                double t60231 = t60230+t60227+t60228+t60229;
                double t60232 = gcaa*t59990*2.0;
                double t60233 = gamma_bb[index]*t59992*t59995*2.0;
                double t60234 = t60232+t60233;
                double t60235 = gamma_bb[index]*gcaa*t60163*(1.6E1/3.0);
                double t60236 = t59991*t59992*t60167*(1.6E1/3.0);
                double t60237 = t60235+t60236;
                double t60238 = gamma_bb[index]*gcaa*t60163*8.0;
                double t60239 = gamma_bb[index]*gcaa*t59991*t59992*t60218*8.0;
                double t60240 = t59991*t59992*t60167*1.6E1;
                double t60241 = t60240+t60238+t60239;
                double t60242 = gamma_bb[index]*gcaa*t60163*(3.2E1/3.0);
                double t60243 = gamma_bb[index]*gcaa*t59991*t59992*t60218*3.2E1;
                double t60244 = t59991*t59992*t60167*3.2E1;
                double t60245 = t59993*t60003*t60225*(3.2E1/3.0);
                double t60246 = t60242+t60243+t60244+t60245;
                double t60247 = 1/t60103;
                double t60248 = 1/(t60100*t60100);
                double t60249 = b4f*t59976*t60105*(2.0/3.0);
                double t60250 = b2f*c*t60104*(1.0/3.0);
                double t60251 = b1f*c*t60104*t60106*(1.0/6.0);
                double t60252 = b3f*c*t59974*t60104*(1.0/2.0);
                double t60253 = t60250+t60251+t60252+t60249;
                double t60254 = a1f*c*c0f*t60104*t60107*(2.0/3.0);
                double t60255 = a1p*c*c0p*t59987*t60104*(2.0/3.0);
                double t60256 = ccaa1*gcaa*t59990*t60213;
                double t60257 = ccaa4*gamma_bb[index]*t59991*t59993*t59994*t60214*4.0;
                double t60258 = ccaa2*gamma_bb[index]*t59992*t59995*t60215*2.0;
                double t60259 = ccaa3*gcaa*t59991*t59992*t59996*t60216*3.0;
                double t60260 = t60256+t60257+t60258+t60259-ccaa1*gamma_bb[index]*t59992*t59995*t60217-ccaa2*t59991* \
                   t59992*t59995*t60220*t60234-ccaa4*t59993*t59994*t60003*t60231*t60226-ccaa3*gamma_bb[index]*gcaa*t59991* \
                   t59992*t59996*t60224*t60219;
                double t60261 = 1/t60199;
                double t60262 = 1/t60208;
                double t60263 = 1/t60211;
                double t60264 = 1/t60203;
                double t60265 = 1/(t60199*t60199);
                double t60266 = 1/(t60203*t60203);
                double t60267 = 1/(t60211*t60211);
                double t60268 = gx*t59990*3.0;
                double t60269 = gamma_bb[index]*t59995*t60196*6.0;
                double t60270 = gx*t59991*t59996*t60196*3.0;
                double t60271 = t60270+t60268+t60269;
                double t60272 = 1/(t60208*t60208);
                double t60273 = gx*t59990*4.0;
                double t60274 = gamma_bb[index]*t59995*t60196*1.2E1;
                double t60275 = gx*t59991*t59996*t60196*1.2E1;
                double t60276 = gamma_bb[index]*t59991*t59994*t60197*4.0;
                double t60277 = t60273+t60274+t60275+t60276;
                double t60278 = gx*t59990*2.0;
                double t60279 = gamma_bb[index]*t59995*t60196*2.0;
                double t60280 = t60278+t60279;
                double t60281 = gamma_bb[index]*gx*t60163*(1.6E1/3.0);
                double t60282 = t59991*t60167*t60196*(1.6E1/3.0);
                double t60283 = t60281+t60282;
                double t60284 = gamma_bb[index]*gx*t60163*8.0;
                double t60285 = gamma_bb[index]*gx*t59991*t60218*t60196*8.0;
                double t60286 = t59991*t60167*t60196*1.6E1;
                double t60287 = t60284+t60285+t60286;
                double t60288 = gamma_bb[index]*gx*t60163*(3.2E1/3.0);
                double t60289 = gamma_bb[index]*gx*t59991*t60218*t60196*3.2E1;
                double t60290 = t59991*t60167*t60196*3.2E1;
                double t60291 = t60003*t60225*t60197*(3.2E1/3.0);
                double t60292 = t60290+t60291+t60288+t60289;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t60212+rho_a[index]*(t60157-t60026*t60093*(t60157-c0f*log((t60027* \
                   (1.0/2.0))/(b1f*t60143+b3f*t60144+b2f*c*t60141+b4f*t59976*t60145)+1.0)*(a1f*c*t60141+1.0)*2.0))-t60012* \
                   (t60060+t60160+t60161))*(ccab1*gcab*t60162*t60163*(4.0/3.0)-ccab2*t60124*t60125*t60168*(gcab*t60163* \
                   (8.0/3.0)+gamma_bb[index]*t60124*t60167*(4.0/3.0)+t60121*t60124*t60163*(8.0/3.0))-ccab4*t60126*t60171* \
                   t60127*(gcab*t60163*(1.6E1/3.0)+gamma_bb[index]*t60124*t60167*8.0+t60121*t60124*t60163*1.6E1+gamma_bb[index]* \
                   t60125*t60126*t60167*8.0+gcab*t60124*t60125*t60163*1.6E1+t60121*t60125*t60126*t60163*(1.6E1/3.0)+gamma_bb[index]* \
                   gcab*t60121*t60124*t60167*1.6E1)-ccab1*gamma_bb[index]*t60124*t60164*t60167*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t60124*t60165*t60167*(4.0/3.0)-ccab1*t60121*t60124*t60163*t60164*(4.0/3.0)+ccab2*t60121*t60124*t60163* \
                   t60165*(8.0/3.0)-ccab2*t59990*t60121*t60124*t60168*t60179+ccab4*t60121*t60125*t60170*t60126*t60163* \
                   (1.6E1/3.0)+ccab2*1/(t60130*t60130*t60130)*t60124*t60125*t60182*t60179*2.0+ccab4*t60126*t60127*1/(t60139* \
                   t60139*t60139)*t60176*t60187*2.0+ccab4*gamma_bb[index]*t60125*t60170*t60126*t60167*8.0+ccab3*gcab* \
                   t60124*t60125*t60163*t60169*4.0+ccab3*gamma_bb[index]*gcab*t60121*t60124*t60167*t60169*4.0-ccab2*gamma_bb[index]* \
                   t60121*t60124*t60163*t60182*t60168*(8.0/3.0)-ccab3*gcab*t59990*t60124*t60125*t60166*t60195*(3.0/2.0) \
                   -ccab4*t59990*t60121*t60125*t60126*t60171*t60187*2.0-ccab3*gcab*t60121*t60124*t60125*t60166*(gcab* \
                   t60163*4.0+gamma_bb[index]*t60124*t60167*4.0+t60121*t60124*t60163*8.0+gcab*t60124*t60125*t60163*4.0+ \
                   gamma_bb[index]*gcab*t60121*t60124*t60167*4.0)+ccab1*gamma_bb[index]*gcab*t60121*1/(t60123*t60123* \
                   t60123)*t60124*t60167*(4.0/3.0)+ccab3*gcab*t60121*t60124*t60125*1/(t60134*t60134*t60134)*t60191*t60195* \
                   2.0-ccab3*gamma_bb[index]*gcab*t60124*t60125*t60163*t60191*t60166*4.0-ccab4*gamma_bb[index]*t60121* \
                   t60125*t60126*t60171*t60163*t60176*(1.6E1/3.0))-(t60060+t60160-t60116+t60161+t60159+rho_b[index]*(- \
                   t60115+t60255+t60026*t60093*(t60115+t60254-t60253*t60247*t60095*t60248-a1p*c*c0p*t59987*t60104*(2.0/ \
                   3.0)))-t60012*(t60140-t60032*t60070*t60064*t60065+t60061*t60026*t60071*t60054*t60049*4.0+t60061*t60026* \
                   t60049*t60058*t60088-t60061*t60026*t60054*t60058*(t60140-t60032*t60070*t60064*t60065+(1/(t60041*t60041) \
                   *t60047*(b2f*c*t60023*(1.0/3.0)+b4f*t59976*t60062*(2.0/3.0)+b1f*c*t60023*t60063*(1.0/6.0)+b3f*c*t60023* \
                   t60015*(1.0/2.0)))/t60044-a1f*c*c0f*t60023*t60045*(2.0/3.0))+t60033*t60034*t60026*t60054*t60049*t60058* \
                   4.0+Aa*t60026*t60054*t60072*t60082*t60084*(t60061*t60071*4.0+t60033*t60034*t60058*4.0)*2.0+Aa*t60026* \
                   t60072*t60090*t60082*t60084*t60088*2.0-(t60026*t60054*t60072*t60090*t60084*1/(t60078*t60078)*(b2a* \
                   c*t60023*(1.0/3.0)+b4a*t59976*t60062*(2.0/3.0)+b1a*c*t60023*t60063*(1.0/6.0)+b3a*c*t60023*t60015*(1.0/ \
                   2.0)))/t60081+Aa*a1a*c*t60023*t60026*t60054*t60072*t60090*t60082*(2.0/3.0)))*(ccab1*gcab*t59990*t60162* \
                   (1.0/2.0)-ccab1*t59990*t60121*t60124*t60164*(1.0/2.0)+ccab2*t59990*t60121*t60124*t60165-ccab2*t60124* \
                   t60125*t60182*t60168-ccab4*t60126*t60171*t60127*t60176+ccab4*t59990*t60121*t60125*t60170*t60126*2.0+ \
                   ccab3*gcab*t59990*t60124*t60125*t60169*(3.0/2.0)-ccab3*gcab*t60121*t60124*t60125*t60191*t60166)-t60260* \
                   (t60116-t60026*t60117*t60093)-rho_b[index]*t60212*(ccaa1*gcaa*t60213*t60163*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t59992*t60215*t60167*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t59992*t60217*t60167*8.0+ccaa2*t59991*t59992* \
                   t60220*t60234*t60167*(1.6E1/3.0)+ccaa4*t59993*t60003*t60231*t60225*t60226*(3.2E1/3.0)+ccaa4*t59993* \
                   t59994*t60003*t60226*(gcaa*t60163*(3.2E1/3.0)+gamma_bb[index]*t59992*t60167*6.4E1+gamma_bb[index]* \
                   t59991*t59993*t60225*(1.28E2/3.0)+gcaa*t59991*t59992*t60218*9.6E1)-ccaa1*gcaa*t59991*t59992*1/(t59998* \
                   t59998*t59998)*t60218*(1.6E1/3.0)+ccaa2*t59991*t59992*t59995*t60220*(gcaa*t60163*(1.6E1/3.0)+gamma_bb[index]* \
                   t59992*t60167*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t59991*t59993*t60214*t60225*(1.28E2/3.0)+ccaa2*gamma_bb[index]* \
                   t59992*t59995*t60220*t60237*2.0-ccaa3*gcaa*t59991*t59992*t60216*t60218*2.4E1+ccaa4*gamma_bb[index]* \
                   t59991*t59993*t59994*t60226*t60246*4.0+ccaa3*gcaa*t59991*t59992*t59996*t60241*t60219*3.0-ccaa2*t59991* \
                   t59992*t59995*1/(t60011*t60011*t60011)*t60234*t60237*2.0-ccaa4*t59993*t59994*t60003*t60231*1/(t60008* \
                   t60008*t60008)*t60246*2.0+ccaa3*gamma_bb[index]*gcaa*t59991*t59992*t59996*t60219*(gcaa*t60163*8.0+ \
                   gamma_bb[index]*t59992*t60167*3.2E1+gcaa*t59991*t59992*t60218*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t59991* \
                   t59992*t60224*t60218*t60219*8.0-ccaa3*gamma_bb[index]*gcaa*t59991*t59992*t59996*1/(t60002*t60002*t60002) \
                   *t60241*t60224*2.0)+c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t60261*t60163*(-8.0/3.0)+cx1*gamma_bb[index]* \
                   t60265*t60167*t60196*8.0-cx2*gamma_bb[index]*t60263*t60167*t60196*(3.2E1/3.0)+cx2*t59991*t60280*t60167* \
                   t60267*t60196*(1.6E1/3.0)+cx4*t60003*t60225*t60272*t60277*t60197*(3.2E1/3.0)+cx4*t59994*t60003*t60272* \
                   t60197*(gx*t60163*(3.2E1/3.0)+gamma_bb[index]*t60167*t60196*6.4E1+gamma_bb[index]*t59991*t60225*t60197* \
                   (1.28E2/3.0)+gx*t59991*t60218*t60196*9.6E1)-cx1*gx*t59991*t60218*t60196*1/(t60199*t60199*t60199)*(1.6E1/ \
                   3.0)+cx2*t59991*t59995*t60267*t60196*(gx*t60163*(1.6E1/3.0)+gamma_bb[index]*t60167*t60196*(3.2E1/3.0) \
                   )+cx2*gamma_bb[index]*t59995*t60283*t60267*t60196*2.0-cx4*gamma_bb[index]*t59991*t60225*t60262*t60197* \
                   (1.28E2/3.0)-cx3*gx*t59991*t60218*t60264*t60196*2.4E1+cx4*gamma_bb[index]*t59991*t59994*t60272*t60292* \
                   t60197*4.0+cx3*gx*t59991*t59996*t60266*t60196*t60287*3.0-cx2*t59991*t59995*1/(t60211*t60211*t60211) \
                   *t60280*t60283*t60196*2.0-cx4*t59994*t60003*1/(t60208*t60208*t60208)*t60292*t60277*t60197*2.0+cx3* \
                   gamma_bb[index]*gx*t59991*t59996*t60266*t60196*(gx*t60163*8.0+gamma_bb[index]*t60167*t60196*3.2E1+ \
                   gx*t59991*t60218*t60196*2.4E1)+cx3*gamma_bb[index]*gx*t59991*t60271*t60218*t60266*t60196*8.0-cx3*gamma_bb[index]* \
                   gx*t59991*t59996*1/(t60203*t60203*t60203)*t60271*t60196*t60287*2.0)+rho_b[index]*t60260*(-t60115+t60255+ \
                   t60026*t60093*(t60115+t60254-t60255-t60253*t60247*t60095*t60248))+c0*pow(rho_b[index],1.0/3.0)*(cx1* \
                   gx*t59990*t60261-cx1*gamma_bb[index]*t59995*t60265*t60196+cx2*gamma_bb[index]*t59995*t60263*t60196* \
                   2.0-cx2*t59991*t59995*t60280*t60267*t60196-cx4*t59994*t60003*t60272*t60277*t60197+cx4*gamma_bb[index]* \
                   t59991*t59994*t60262*t60197*4.0+cx3*gx*t59991*t59996*t60264*t60196*3.0-cx3*gamma_bb[index]*gx*t59991* \
                   t59996*t60271*t60266*t60196)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t61186 = 1/pow(rho_b[index],1.0/3.0);
                double t61187 = c*t61186;
                double t61188 = sqrt(t61187);
                double t61189 = pow(t61187,3.0/2.0);
                double t61190 = c*c;
                double t61191 = 1/pow(rho_b[index],2.0/3.0);
                double t61192 = 1/c0p;
                double t61193 = b1p*t61188;
                double t61194 = b3p*t61189;
                double t61195 = b4p*t61190*t61191;
                double t61196 = b2p*c*t61186;
                double t61197 = t61193+t61194+t61195+t61196;
                double t61198 = 1/t61197;
                double t61199 = t61192*t61198*(1.0/2.0);
                double t61200 = t61199+1.0;
                double t61201 = log(t61200);
                double t61202 = a1p*c*t61186;
                double t61203 = t61202+1.0;
                double t61204 = 1/pow(rho_b[index],8.0/3.0);
                double t61205 = gamma_bb[index]*gamma_bb[index];
                double t61206 = gcaa*gcaa;
                double t61207 = t61206*t61206;
                double t61208 = 1/pow(rho_b[index],3.2E1/3.0);
                double t61209 = 1/pow(rho_b[index],1.6E1/3.0);
                double t61210 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t61211 = gamma_bb[index]*gcaa*t61204;
                double t61212 = t61211+1.0;
                double t61213 = gamma_bb[index]*gcaa*t61204*3.0;
                double t61214 = gamma_bb[index]*gcaa*t61210*t61205*t61206;
                double t61215 = t61205*t61206*t61209*3.0;
                double t61216 = t61213+t61214+t61215+1.0;
                double t61217 = t61205*t61205;
                double t61218 = gamma_bb[index]*gcaa*t61204*4.0;
                double t61219 = gamma_bb[index]*gcaa*t61210*t61205*t61206*4.0;
                double t61220 = t61205*t61206*t61209*6.0;
                double t61221 = t61207*t61208*t61217;
                double t61222 = t61220+t61221+t61218+t61219+1.0;
                double t61223 = gamma_bb[index]*gcaa*t61204*2.0;
                double t61224 = t61205*t61206*t61209;
                double t61225 = t61223+t61224+1.0;
                double t61226 = gx*gx;
                double t61227 = t61226*t61226;
                double t61228 = gamma_bb[index]*gx*t61204;
                double t61229 = t61228+1.0;
                double t61230 = gamma_bb[index]*gx*t61204*3.0;
                double t61231 = gamma_bb[index]*gx*t61210*t61205*t61226;
                double t61232 = t61205*t61226*t61209*3.0;
                double t61233 = t61230+t61231+t61232+1.0;
                double t61234 = gamma_bb[index]*gx*t61204*4.0;
                double t61235 = gamma_bb[index]*gx*t61210*t61205*t61226*4.0;
                double t61236 = t61205*t61226*t61209*6.0;
                double t61237 = t61208*t61217*t61227;
                double t61238 = t61234+t61235+t61236+t61237+1.0;
                double t61239 = gamma_bb[index]*gx*t61204*2.0;
                double t61240 = t61205*t61226*t61209;
                double t61241 = t61240+t61239+1.0;
                double t61242 = pow(2.0,1.0/3.0);
                double t61243 = t61242*2.0;
                double t61244 = t61243-2.0;
                double t61245 = two_13*2.0;
                double t61246 = t61245-2.0;
                double t61247 = 1/t61246;
                double t61248 = 1/c0f;
                double t61249 = b1f*t61188;
                double t61250 = b3f*t61189;
                double t61251 = b4f*t61190*t61191;
                double t61252 = b2f*c*t61186;
                double t61253 = t61250+t61251+t61252+t61249;
                double t61254 = 1/t61253;
                double t61255 = t61254*t61248*(1.0/2.0);
                double t61256 = t61255+1.0;
                double t61257 = log(t61256);
                double t61258 = a1f*c*t61186;
                double t61259 = t61258+1.0;
                double t61260 = c0f*t61257*t61259*2.0;
                double t61261 = c0p*t61201*t61203*2.0;
                double t61262 = 1/t61212;
                double t61263 = 1/t61222;
                double t61264 = 1/t61225;
                double t61265 = 1/t61216;
                double t61266 = 1/pow(rho_b[index],1.9E1/3.0);
                double t61267 = 1/(t61212*t61212);
                double t61268 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t61269 = 1/pow(rho_b[index],1.1E1/3.0);
                double t61270 = 1/(t61216*t61216);
                double t61271 = 1/(t61225*t61225);
                double t61272 = gcaa*t61204*3.0;
                double t61273 = gamma_bb[index]*t61206*t61209*6.0;
                double t61274 = gcaa*t61210*t61205*t61206*3.0;
                double t61275 = t61272+t61273+t61274;
                double t61276 = 1/pow(rho_b[index],3.5E1/3.0);
                double t61277 = 1/(t61222*t61222);
                double t61278 = gcaa*t61204*4.0;
                double t61279 = gamma_bb[index]*t61206*t61209*1.2E1;
                double t61280 = gcaa*t61210*t61205*t61206*1.2E1;
                double t61281 = gamma_bb[index]*t61205*t61207*t61208*4.0;
                double t61282 = t61280+t61281+t61278+t61279;
                double t61283 = gcaa*t61204*2.0;
                double t61284 = gamma_bb[index]*t61206*t61209*2.0;
                double t61285 = t61283+t61284;
                double t61286 = gamma_bb[index]*gcaa*t61269*(1.6E1/3.0);
                double t61287 = t61205*t61206*t61266*(1.6E1/3.0);
                double t61288 = t61286+t61287;
                double t61289 = gamma_bb[index]*gcaa*t61269*8.0;
                double t61290 = gamma_bb[index]*gcaa*t61205*t61206*t61268*8.0;
                double t61291 = t61205*t61206*t61266*1.6E1;
                double t61292 = t61290+t61291+t61289;
                double t61293 = gamma_bb[index]*gcaa*t61269*(3.2E1/3.0);
                double t61294 = gamma_bb[index]*gcaa*t61205*t61206*t61268*3.2E1;
                double t61295 = t61205*t61206*t61266*3.2E1;
                double t61296 = t61207*t61217*t61276*(3.2E1/3.0);
                double t61297 = t61293+t61294+t61295+t61296;
                double t61298 = 1/pow(rho_b[index],4.0/3.0);
                double t61299 = 1/pow(rho_b[index],5.0/3.0);
                double t61300 = 1/sqrt(t61187);
                double t61301 = 1/t61200;
                double t61302 = 1/(t61197*t61197);
                double t61303 = b4p*t61190*t61299*(2.0/3.0);
                double t61304 = b2p*c*t61298*(1.0/3.0);
                double t61305 = b1p*c*t61300*t61298*(1.0/6.0);
                double t61306 = b3p*c*t61188*t61298*(1.0/2.0);
                double t61307 = t61303+t61304+t61305+t61306;
                double t61308 = t61301*t61203*t61302*t61307;
                double t61309 = ccaa1*gcaa*t61204*t61262;
                double t61310 = ccaa4*gamma_bb[index]*t61205*t61207*t61208*t61263*4.0;
                double t61311 = ccaa2*gamma_bb[index]*t61206*t61209*t61264*2.0;
                double t61312 = ccaa3*gcaa*t61210*t61205*t61206*t61265*3.0;
                double t61313 = t61310+t61311+t61312+t61309-ccaa1*gamma_bb[index]*t61206*t61209*t61267-ccaa2*t61205* \
                   t61206*t61271*t61209*t61285-ccaa4*t61207*t61208*t61217*t61282*t61277-ccaa3*gamma_bb[index]*gcaa*t61210* \
                   t61205*t61206*t61270*t61275;
                double t61314 = 1/t61229;
                double t61315 = 1/t61238;
                double t61316 = 1/t61241;
                double t61317 = 1/t61233;
                double t61318 = 1/(t61229*t61229);
                double t61319 = 1/(t61233*t61233);
                double t61320 = 1/(t61241*t61241);
                double t61321 = gx*t61204*3.0;
                double t61322 = gamma_bb[index]*t61226*t61209*6.0;
                double t61323 = gx*t61210*t61205*t61226*3.0;
                double t61324 = t61321+t61322+t61323;
                double t61325 = 1/(t61238*t61238);
                double t61326 = gx*t61204*4.0;
                double t61327 = gamma_bb[index]*t61226*t61209*1.2E1;
                double t61328 = gx*t61210*t61205*t61226*1.2E1;
                double t61329 = gamma_bb[index]*t61205*t61208*t61227*4.0;
                double t61330 = t61326+t61327+t61328+t61329;
                double t61331 = gx*t61204*2.0;
                double t61332 = gamma_bb[index]*t61226*t61209*2.0;
                double t61333 = t61331+t61332;
                double t61334 = gamma_bb[index]*gx*t61269*(1.6E1/3.0);
                double t61335 = t61205*t61226*t61266*(1.6E1/3.0);
                double t61336 = t61334+t61335;
                double t61337 = gamma_bb[index]*gx*t61269*8.0;
                double t61338 = gamma_bb[index]*gx*t61205*t61226*t61268*8.0;
                double t61339 = t61205*t61226*t61266*1.6E1;
                double t61340 = t61337+t61338+t61339;
                double t61341 = gamma_bb[index]*gx*t61269*(3.2E1/3.0);
                double t61342 = gamma_bb[index]*gx*t61205*t61226*t61268*3.2E1;
                double t61343 = t61205*t61226*t61266*3.2E1;
                double t61344 = t61217*t61227*t61276*(3.2E1/3.0);
                double t61345 = t61341+t61342+t61343+t61344;
                v_rho_b_gamma_bb_[index] = -t61313*(t61261+t61244*t61247*(t61260-c0p*t61201*t61203*2.0))+rho_b[index]* \
                   t61313*(-t61308+t61244*t61247*(t61308-(1/(t61253*t61253)*t61259*(b2f*c*t61298*(1.0/3.0)+b4f*t61190* \
                   t61299*(2.0/3.0)+b1f*c*t61300*t61298*(1.0/6.0)+b3f*c*t61188*t61298*(1.0/2.0)))/t61256+a1f*c*c0f*t61257* \
                   t61298*(2.0/3.0)-a1p*c*c0p*t61201*t61298*(2.0/3.0))+a1p*c*c0p*t61201*t61298*(2.0/3.0))-rho_b[index]* \
                   (t61261+t61244*t61247*(t61260-t61261))*(ccaa1*gcaa*t61262*t61269*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t61206*t61264*t61266*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t61206*t61266*t61267*8.0+ccaa2*t61205*t61206* \
                   t61271*t61266*t61285*(1.6E1/3.0)+ccaa4*t61207*t61217*t61282*t61276*t61277*(3.2E1/3.0)+ccaa4*t61207* \
                   t61208*t61217*t61277*(gcaa*t61269*(3.2E1/3.0)+gamma_bb[index]*t61206*t61266*6.4E1+gamma_bb[index]* \
                   t61205*t61207*t61276*(1.28E2/3.0)+gcaa*t61205*t61206*t61268*9.6E1)-ccaa1*gcaa*1/(t61212*t61212*t61212) \
                   *t61205*t61206*t61268*(1.6E1/3.0)+ccaa2*t61205*t61206*t61271*t61209*(gcaa*t61269*(1.6E1/3.0)+gamma_bb[index]* \
                   t61206*t61266*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t61205*t61207*t61263*t61276*(1.28E2/3.0)+ccaa2*gamma_bb[index]* \
                   t61206*t61271*t61209*t61288*2.0-ccaa3*gcaa*t61205*t61206*t61265*t61268*2.4E1+ccaa4*gamma_bb[index]* \
                   t61205*t61207*t61208*t61277*t61297*4.0+ccaa3*gcaa*t61210*t61205*t61206*t61270*t61292*3.0-ccaa4*1/(t61222* \
                   t61222*t61222)*t61207*t61208*t61217*t61282*t61297*2.0-ccaa2*t61205*t61206*1/(t61225*t61225*t61225) \
                   *t61209*t61285*t61288*2.0+ccaa3*gamma_bb[index]*gcaa*t61210*t61205*t61206*t61270*(gcaa*t61269*8.0+ \
                   gamma_bb[index]*t61206*t61266*3.2E1+gcaa*t61205*t61206*t61268*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t61205* \
                   t61206*t61270*t61275*t61268*8.0-ccaa3*gamma_bb[index]*gcaa*t61210*t61205*t61206*1/(t61216*t61216*t61216) \
                   *t61292*t61275*2.0)+c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t61314*t61269*(-8.0/3.0)+cx1*gamma_bb[index]* \
                   t61226*t61318*t61266*8.0-cx2*gamma_bb[index]*t61226*t61316*t61266*(3.2E1/3.0)+cx2*t61320*t61205*t61333* \
                   t61226*t61266*(1.6E1/3.0)+cx4*t61330*t61217*t61325*t61227*t61276*(3.2E1/3.0)+cx4*t61208*t61217*t61325* \
                   t61227*(gx*t61269*(3.2E1/3.0)+gamma_bb[index]*t61226*t61266*6.4E1+gamma_bb[index]*t61205*t61227*t61276* \
                   (1.28E2/3.0)+gx*t61205*t61226*t61268*9.6E1)-cx1*gx*t61205*t61226*1/(t61229*t61229*t61229)*t61268*(1.6E1/ \
                   3.0)+cx2*t61320*t61205*t61226*t61209*(gx*t61269*(1.6E1/3.0)+gamma_bb[index]*t61226*t61266*(3.2E1/3.0) \
                   )+cx2*gamma_bb[index]*t61320*t61226*t61209*t61336*2.0-cx4*gamma_bb[index]*t61205*t61315*t61227*t61276* \
                   (1.28E2/3.0)-cx3*gx*t61205*t61226*t61317*t61268*2.4E1+cx4*gamma_bb[index]*t61205*t61208*t61325*t61227* \
                   t61345*4.0+cx3*gx*t61210*t61205*t61340*t61226*t61319*3.0-cx2*t61205*1/(t61241*t61241*t61241)*t61333* \
                   t61226*t61209*t61336*2.0-cx4*t61330*t61208*t61217*t61227*t61345*1/(t61238*t61238*t61238)*2.0+cx3*gamma_bb[index]* \
                   gx*t61210*t61205*t61226*t61319*(gx*t61269*8.0+gamma_bb[index]*t61226*t61266*3.2E1+gx*t61205*t61226* \
                   t61268*2.4E1)+cx3*gamma_bb[index]*gx*t61205*t61324*t61226*t61319*t61268*8.0-cx3*gamma_bb[index]*gx* \
                   t61210*t61205*t61340*1/(t61233*t61233*t61233)*t61324*t61226*2.0)+c0*pow(rho_b[index],1.0/3.0)*(cx1* \
                   gx*t61204*t61314-cx1*gamma_bb[index]*t61226*t61209*t61318+cx2*gamma_bb[index]*t61226*t61316*t61209* \
                   2.0-cx2*t61320*t61205*t61333*t61226*t61209-cx4*t61330*t61208*t61217*t61325*t61227+cx4*gamma_bb[index]* \
                   t61205*t61315*t61208*t61227*4.0+cx3*gx*t61210*t61205*t61226*t61317*3.0-cx3*gamma_bb[index]*gx*t61210* \
                   t61205*t61324*t61226*t61319)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t60294 = 1/pow(rho_a[index],1.0/3.0);
                double t60295 = c*t60294;
                double t60296 = sqrt(t60295);
                double t60297 = pow(t60295,3.0/2.0);
                double t60298 = c*c;
                double t60299 = 1/pow(rho_a[index],2.0/3.0);
                double t60300 = 1/c0p;
                double t60301 = b1p*t60296;
                double t60302 = b3p*t60297;
                double t60303 = b4p*t60298*t60299;
                double t60304 = b2p*c*t60294;
                double t60305 = t60301+t60302+t60303+t60304;
                double t60306 = 1/t60305;
                double t60307 = t60300*t60306*(1.0/2.0);
                double t60308 = t60307+1.0;
                double t60309 = log(t60308);
                double t60310 = a1p*c*t60294;
                double t60311 = t60310+1.0;
                double t60312 = pow(2.0,1.0/3.0);
                double t60313 = t60312*2.0;
                double t60314 = t60313-2.0;
                double t60315 = two_13*2.0;
                double t60316 = t60315-2.0;
                double t60317 = 1/t60316;
                double t60318 = 1/c0f;
                double t60319 = 1/pow(rho_b[index],1.0/3.0);
                double t60320 = c*t60319;
                double t60321 = sqrt(t60320);
                double t60322 = pow(t60320,3.0/2.0);
                double t60323 = 1/pow(rho_b[index],2.0/3.0);
                double t60324 = b1p*t60321;
                double t60325 = b3p*t60322;
                double t60326 = b4p*t60323*t60298;
                double t60327 = b2p*c*t60319;
                double t60328 = t60324+t60325+t60326+t60327;
                double t60329 = 1/t60328;
                double t60330 = t60300*t60329*(1.0/2.0);
                double t60331 = t60330+1.0;
                double t60332 = log(t60331);
                double t60333 = a1p*c*t60319;
                double t60334 = t60333+1.0;
                double t60335 = c0p*t60332*t60334*2.0;
                double t60336 = rho_a[index]+rho_b[index];
                double t60337 = 1/pow(t60336,1.0/3.0);
                double t60338 = c*t60337;
                double t60339 = sqrt(t60338);
                double t60340 = pow(t60338,3.0/2.0);
                double t60341 = 1/pow(t60336,2.0/3.0);
                double t60342 = b1p*t60339;
                double t60343 = b3p*t60340;
                double t60344 = b4p*t60341*t60298;
                double t60345 = b2p*c*t60337;
                double t60346 = t60342+t60343+t60344+t60345;
                double t60347 = 1/t60346;
                double t60348 = t60300*t60347*(1.0/2.0);
                double t60349 = t60348+1.0;
                double t60350 = log(t60349);
                double t60351 = a1p*c*t60337;
                double t60352 = t60351+1.0;
                double t60353 = c0p*t60350*t60352*2.0;
                double t60354 = rho_a[index]-rho_b[index];
                double t60355 = t60354*t60354;
                double t60356 = 1/t60336;
                double t60357 = t60354*t60356;
                double t60358 = 1/(t60336*t60336*t60336*t60336);
                double t60359 = t60355*t60355;
                double t60360 = t60357+1.0;
                double t60361 = pow(t60360,4.0/3.0);
                double t60362 = -t60357+1.0;
                double t60363 = pow(t60362,4.0/3.0);
                double t60364 = t60361+t60363-2.0;
                double t60365 = gcab*gcab;
                double t60366 = 1/pow(rho_a[index],1.6E1/3.0);
                double t60367 = 1/pow(rho_a[index],8.0/3.0);
                double t60368 = gamma_aa[index]*t60367*(1.0/2.0);
                double t60369 = 1/pow(rho_b[index],8.0/3.0);
                double t60370 = gamma_bb[index]*t60369*(1.0/2.0);
                double t60371 = t60370+t60368;
                double t60372 = gcab*t60371;
                double t60373 = t60372+1.0;
                double t60374 = t60371*t60371;
                double t60375 = t60365*t60374;
                double t60376 = gcab*t60371*2.0;
                double t60377 = t60375+t60376+1.0;
                double t60378 = t60365*t60365;
                double t60395 = gcab*t60367*2.0;
                double t60396 = t60371*t60365*t60367*6.0;
                double t60397 = gcab*t60365*t60374*t60367*6.0;
                double t60398 = t60371*t60374*t60367*t60378*2.0;
                double t60379 = t60395+t60396+t60397+t60398;
                double t60380 = t60374*t60374;
                double t60400 = gcab*t60367*(3.0/2.0);
                double t60401 = t60371*t60365*t60367*3.0;
                double t60402 = gcab*t60365*t60374*t60367*(3.0/2.0);
                double t60381 = t60400+t60401+t60402;
                double t60382 = t60365*t60374*3.0;
                double t60383 = gcab*t60371*t60365*t60374;
                double t60384 = gcab*t60371*3.0;
                double t60385 = t60382+t60383+t60384+1.0;
                double t60392 = gcab*t60367;
                double t60393 = t60371*t60365*t60367;
                double t60386 = t60392+t60393;
                double t60387 = t60365*t60374*6.0;
                double t60388 = gcab*t60371*t60365*t60374*4.0;
                double t60389 = t60380*t60378;
                double t60390 = gcab*t60371*4.0;
                double t60391 = t60390+t60387+t60388+t60389+1.0;
                double t60394 = 1/(t60377*t60377);
                double t60399 = 1/(t60391*t60391);
                double t60403 = 1/(t60385*t60385);
                double t60404 = gx*gx;
                double t60405 = gamma_aa[index]*gamma_aa[index];
                double t60406 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t60407 = t60404*t60404;
                double t60408 = 1/pow(rho_a[index],3.2E1/3.0);
                double t60409 = gamma_aa[index]*gx*t60367;
                double t60410 = t60409+1.0;
                double t60411 = gamma_aa[index]*gx*t60367*2.0;
                double t60412 = t60404*t60405*t60366;
                double t60413 = t60411+t60412+1.0;
                double t60414 = gamma_aa[index]*gx*t60367*3.0;
                double t60415 = gamma_aa[index]*gx*t60404*t60405*t60406;
                double t60416 = t60404*t60405*t60366*3.0;
                double t60417 = t60414+t60415+t60416+1.0;
                double t60418 = t60405*t60405;
                double t60434 = gx*t60367*4.0;
                double t60435 = gamma_aa[index]*t60404*t60366*1.2E1;
                double t60436 = gx*t60404*t60405*t60406*1.2E1;
                double t60437 = gamma_aa[index]*t60405*t60407*t60408*4.0;
                double t60419 = t60434+t60435+t60436+t60437;
                double t60420 = gamma_aa[index]*gx*t60367*4.0;
                double t60421 = gamma_aa[index]*gx*t60404*t60405*t60406*4.0;
                double t60422 = t60404*t60405*t60366*6.0;
                double t60423 = t60407*t60408*t60418;
                double t60424 = t60420+t60421+t60422+t60423+1.0;
                double t60427 = gx*t60367*2.0;
                double t60428 = gamma_aa[index]*t60404*t60366*2.0;
                double t60425 = t60427+t60428;
                double t60426 = 1/(t60417*t60417);
                double t60429 = 1/(t60413*t60413);
                double t60430 = gx*t60367*3.0;
                double t60431 = gamma_aa[index]*t60404*t60366*6.0;
                double t60432 = gx*t60404*t60405*t60406*3.0;
                double t60433 = t60430+t60431+t60432;
                double t60438 = 1/(t60424*t60424);
                double t60439 = b1f*t60296;
                double t60440 = b3f*t60297;
                double t60441 = b4f*t60298*t60299;
                double t60442 = b2f*c*t60294;
                double t60443 = t60440+t60441+t60442+t60439;
                double t60444 = 1/t60443;
                double t60445 = t60318*t60444*(1.0/2.0);
                double t60446 = t60445+1.0;
                double t60447 = log(t60446);
                double t60448 = a1f*c*t60294;
                double t60449 = t60448+1.0;
                double t60450 = c0f*t60447*t60449*2.0;
                double t60451 = c0p*t60311*t60309*2.0;
                double t60452 = gcaa*gcaa;
                double t60453 = t60452*t60452;
                double t60454 = gamma_aa[index]*gcaa*t60367;
                double t60455 = t60454+1.0;
                double t60456 = gamma_aa[index]*gcaa*t60367*2.0;
                double t60457 = t60405*t60452*t60366;
                double t60458 = t60456+t60457+1.0;
                double t60459 = gamma_aa[index]*gcaa*t60367*3.0;
                double t60460 = gamma_aa[index]*gcaa*t60405*t60406*t60452;
                double t60461 = t60405*t60452*t60366*3.0;
                double t60462 = t60460+t60461+t60459+1.0;
                double t60478 = gcaa*t60367*4.0;
                double t60479 = gamma_aa[index]*t60452*t60366*1.2E1;
                double t60480 = gcaa*t60405*t60406*t60452*1.2E1;
                double t60481 = gamma_aa[index]*t60405*t60408*t60453*4.0;
                double t60463 = t60480+t60481+t60478+t60479;
                double t60464 = gamma_aa[index]*gcaa*t60367*4.0;
                double t60465 = gamma_aa[index]*gcaa*t60405*t60406*t60452*4.0;
                double t60466 = t60405*t60452*t60366*6.0;
                double t60467 = t60408*t60453*t60418;
                double t60468 = t60464+t60465+t60466+t60467+1.0;
                double t60471 = gcaa*t60367*2.0;
                double t60472 = gamma_aa[index]*t60452*t60366*2.0;
                double t60469 = t60471+t60472;
                double t60470 = 1/(t60462*t60462);
                double t60473 = 1/(t60458*t60458);
                double t60474 = gcaa*t60367*3.0;
                double t60475 = gamma_aa[index]*t60452*t60366*6.0;
                double t60476 = gcaa*t60405*t60406*t60452*3.0;
                double t60477 = t60474+t60475+t60476;
                double t60482 = 1/(t60468*t60468);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t60451+t60314*t60317*(t60450-c0p*t60311*t60309*2.0) \
                   )+rho_b[index]*(t60335-t60314*t60317*(t60335-c0f*log((t60318*(1.0/2.0))/(b1f*t60321+b3f*t60322+b2f* \
                   c*t60319+b4f*t60323*t60298)+1.0)*(a1f*c*t60319+1.0)*2.0))-t60336*(t60353-t60317*t60364*t60358*t60359* \
                   (t60353-c0f*log((t60318*(1.0/2.0))/(b1f*t60339+b3f*t60340+b2f*c*t60337+b4f*t60341*t60298)+1.0)*(a1f* \
                   c*t60337+1.0)*2.0)+(Aa*t60317*t60364*log((1.0/2.0)/(Aa*(b1a*t60339+b3a*t60340+b2a*c*t60337+b4a*t60341* \
                   t60298))+1.0)*(t60358*t60359-1.0)*(a1a*c*t60337+1.0)*2.0)/d2fz0))*(ccab1*1/(t60373*t60373)*t60365* \
                   t60366*(1.0/2.0)-(ccab2*t60365*t60366*(1.0/2.0))/t60377-ccab2*t60365*t60374*1/(t60377*t60377*t60377) \
                   *(t60386*t60386)*2.0-ccab4*t60380*1/(t60391*t60391*t60391)*t60378*(t60379*t60379)*2.0+ccab2*t60374* \
                   t60366*t60394*t60378*(1.0/2.0)+ccab4*t60380*t60378*t60399*(t60365*t60366*3.0+t60374*t60366*t60378* \
                   3.0+gcab*t60371*t60365*t60366*6.0)-(ccab4*t60374*t60366*t60378*3.0)/t60391+ccab2*t60371*t60365*t60367* \
                   t60394*t60386*2.0-ccab1*gcab*t60371*1/(t60373*t60373*t60373)*t60365*t60366*(1.0/2.0)-(ccab3*gcab*t60371* \
                   t60365*t60366*(3.0/2.0))/t60385-ccab3*gcab*t60371*(t60381*t60381)*t60365*t60374*1/(t60385*t60385*t60385) \
                   *2.0+ccab3*gcab*t60403*t60381*t60365*t60374*t60367*3.0+ccab4*t60371*t60374*t60367*t60378*t60379*t60399* \
                   4.0+ccab3*gcab*t60403*t60371*t60365*t60374*(t60365*t60366*(3.0/2.0)+gcab*t60371*t60365*t60366*(3.0/ \
                   2.0)))+rho_a[index]*(t60451+t60314*t60317*(t60450-t60451))*(ccaa1*t60452*1/(t60455*t60455)*t60366* \
                   2.0-(ccaa2*t60452*t60366*2.0)/t60458+ccaa2*t60405*t60408*t60453*t60473*2.0-(ccaa4*t60405*t60408*t60453* \
                   1.2E1)/t60468+ccaa4*t60408*t60453*t60418*t60482*(t60452*t60366*1.2E1+t60405*t60408*t60453*1.2E1+gamma_aa[index]* \
                   gcaa*t60406*t60452*2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t60406*t60452*6.0)/t60462-ccaa1*gamma_aa[index]* \
                   gcaa*t60406*t60452*1/(t60455*t60455*t60455)*2.0-ccaa4*t60408*t60453*t60418*(t60463*t60463)*1/(t60468* \
                   t60468*t60468)*2.0-ccaa2*t60405*t60452*t60366*1/(t60458*t60458*t60458)*(t60469*t60469)*2.0+ccaa2*gamma_aa[index]* \
                   t60452*t60473*t60366*t60469*4.0+ccaa4*gamma_aa[index]*t60405*t60408*t60453*t60463*t60482*8.0+ccaa3* \
                   gcaa*t60405*t60406*t60452*t60470*t60477*6.0+ccaa3*gamma_aa[index]*gcaa*t60405*t60406*t60452*t60470* \
                   (t60452*t60366*6.0+gamma_aa[index]*gcaa*t60406*t60452*6.0)-ccaa3*gamma_aa[index]*gcaa*t60405*t60406* \
                   t60452*1/(t60462*t60462*t60462)*(t60477*t60477)*2.0)-c0*pow(rho_a[index],4.0/3.0)*(cx1*1/(t60410*t60410) \
                   *t60404*t60366*2.0-(cx2*t60404*t60366*2.0)/t60413+cx2*t60405*t60407*t60408*t60429*2.0-(cx4*t60405* \
                   t60407*t60408*1.2E1)/t60424+cx4*t60407*t60408*t60418*t60438*(t60404*t60366*1.2E1+t60405*t60407*t60408* \
                   1.2E1+gamma_aa[index]*gx*t60404*t60406*2.4E1)-cx1*gamma_aa[index]*gx*1/(t60410*t60410*t60410)*t60404* \
                   t60406*2.0-(cx3*gamma_aa[index]*gx*t60404*t60406*6.0)/t60417-cx2*t60404*1/(t60413*t60413*t60413)*t60405* \
                   (t60425*t60425)*t60366*2.0-cx4*1/(t60424*t60424*t60424)*t60407*t60408*t60418*(t60419*t60419)*2.0+cx2* \
                   gamma_aa[index]*t60404*t60425*t60366*t60429*4.0+cx4*gamma_aa[index]*t60405*t60407*t60408*t60419*t60438* \
                   8.0+cx3*gx*t60404*t60405*t60406*t60433*t60426*6.0+cx3*gamma_aa[index]*gx*t60404*t60405*t60406*t60426* \
                   (t60404*t60366*6.0+gamma_aa[index]*gx*t60404*t60406*6.0)-cx3*gamma_aa[index]*gx*t60404*t60405*t60406* \
                   (t60433*t60433)*1/(t60417*t60417*t60417)*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t61986 = gx*gx;
                double t61987 = 1/pow(rho_a[index],1.6E1/3.0);
                double t61988 = 1/pow(rho_a[index],8.0/3.0);
                double t61989 = gamma_aa[index]*gamma_aa[index];
                double t61990 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t61991 = t61986*t61986;
                double t61992 = 1/pow(rho_a[index],3.2E1/3.0);
                double t61993 = gamma_aa[index]*gx*t61988;
                double t61994 = t61993+1.0;
                double t61995 = gamma_aa[index]*gx*t61988*2.0;
                double t61996 = t61986*t61987*t61989;
                double t61997 = t61995+t61996+1.0;
                double t61998 = gamma_aa[index]*gx*t61988*3.0;
                double t61999 = gamma_aa[index]*gx*t61990*t61986*t61989;
                double t62000 = t61986*t61987*t61989*3.0;
                double t62001 = t61998+t61999+t62000+1.0;
                double t62002 = t61989*t61989;
                double t62018 = gx*t61988*4.0;
                double t62019 = gamma_aa[index]*t61986*t61987*1.2E1;
                double t62020 = gx*t61990*t61986*t61989*1.2E1;
                double t62021 = gamma_aa[index]*t61991*t61992*t61989*4.0;
                double t62003 = t62020+t62021+t62018+t62019;
                double t62004 = gamma_aa[index]*gx*t61988*4.0;
                double t62005 = gamma_aa[index]*gx*t61990*t61986*t61989*4.0;
                double t62006 = t61986*t61987*t61989*6.0;
                double t62007 = t61991*t61992*t62002;
                double t62008 = t62004+t62005+t62006+t62007+1.0;
                double t62011 = gx*t61988*2.0;
                double t62012 = gamma_aa[index]*t61986*t61987*2.0;
                double t62009 = t62011+t62012;
                double t62010 = 1/(t62001*t62001);
                double t62013 = 1/(t61997*t61997);
                double t62014 = gx*t61988*3.0;
                double t62015 = gamma_aa[index]*t61986*t61987*6.0;
                double t62016 = gx*t61990*t61986*t61989*3.0;
                double t62017 = t62014+t62015+t62016;
                double t62022 = 1/(t62008*t62008);
                double t62023 = 1/pow(rho_a[index],1.0/3.0);
                double t62024 = c*t62023;
                double t62025 = sqrt(t62024);
                double t62026 = pow(t62024,3.0/2.0);
                double t62027 = c*c;
                double t62028 = 1/pow(rho_a[index],2.0/3.0);
                double t62029 = 1/c0p;
                double t62030 = b1p*t62025;
                double t62031 = b3p*t62026;
                double t62032 = b4p*t62027*t62028;
                double t62033 = b2p*c*t62023;
                double t62034 = t62030+t62031+t62032+t62033;
                double t62035 = 1/t62034;
                double t62036 = t62035*t62029*(1.0/2.0);
                double t62037 = t62036+1.0;
                double t62038 = log(t62037);
                double t62039 = a1p*c*t62023;
                double t62040 = t62039+1.0;
                double t62041 = gcaa*gcaa;
                double t62042 = t62041*t62041;
                double t62043 = gamma_aa[index]*gcaa*t61988;
                double t62044 = t62043+1.0;
                double t62045 = gamma_aa[index]*gcaa*t61988*2.0;
                double t62046 = t61987*t61989*t62041;
                double t62047 = t62045+t62046+1.0;
                double t62048 = gamma_aa[index]*gcaa*t61988*3.0;
                double t62049 = gamma_aa[index]*gcaa*t61990*t61989*t62041;
                double t62050 = t61987*t61989*t62041*3.0;
                double t62051 = t62050+t62048+t62049+1.0;
                double t62067 = gcaa*t61988*4.0;
                double t62068 = gamma_aa[index]*t61987*t62041*1.2E1;
                double t62069 = gcaa*t61990*t61989*t62041*1.2E1;
                double t62070 = gamma_aa[index]*t61992*t61989*t62042*4.0;
                double t62052 = t62070+t62067+t62068+t62069;
                double t62053 = gamma_aa[index]*gcaa*t61988*4.0;
                double t62054 = gamma_aa[index]*gcaa*t61990*t61989*t62041*4.0;
                double t62055 = t61987*t61989*t62041*6.0;
                double t62056 = t61992*t62002*t62042;
                double t62057 = t62053+t62054+t62055+t62056+1.0;
                double t62060 = gcaa*t61988*2.0;
                double t62061 = gamma_aa[index]*t61987*t62041*2.0;
                double t62058 = t62060+t62061;
                double t62059 = 1/(t62051*t62051);
                double t62062 = 1/(t62047*t62047);
                double t62063 = gcaa*t61988*3.0;
                double t62064 = gamma_aa[index]*t61987*t62041*6.0;
                double t62065 = gcaa*t61990*t61989*t62041*3.0;
                double t62066 = t62063+t62064+t62065;
                double t62071 = 1/(t62057*t62057);
                v_gamma_aa_gamma_aa_[index] = -c0*pow(rho_a[index],4.0/3.0)*(cx1*1/(t61994*t61994)*t61986*t61987* \
                   2.0-(cx2*t61986*t61987*2.0)/t61997+cx2*t61991*t61992*t61989*t62013*2.0-(cx4*t61991*t61992*t61989*1.2E1) \
                   /t62008+cx4*t61991*t61992*t62002*t62022*(t61986*t61987*1.2E1+t61991*t61992*t61989*1.2E1+gamma_aa[index]* \
                   gx*t61990*t61986*2.4E1)-cx1*gamma_aa[index]*gx*t61990*1/(t61994*t61994*t61994)*t61986*2.0-(cx3*gamma_aa[index]* \
                   gx*t61990*t61986*6.0)/t62001-cx2*t61986*t61987*1/(t61997*t61997*t61997)*t61989*(t62009*t62009)*2.0- \
                   cx4*t61991*t61992*t62002*(t62003*t62003)*1/(t62008*t62008*t62008)*2.0+cx2*gamma_aa[index]*t61986*t61987* \
                   t62013*t62009*4.0+cx4*gamma_aa[index]*t61991*t61992*t61989*t62003*t62022*8.0+cx3*gx*t61990*t61986* \
                   t61989*t62010*t62017*6.0+cx3*gamma_aa[index]*gx*t61990*t61986*t61989*t62010*(t61986*t61987*6.0+gamma_aa[index]* \
                   gx*t61990*t61986*6.0)-cx3*gamma_aa[index]*gx*t61990*t61986*t61989*1/(t62001*t62001*t62001)*(t62017* \
                   t62017)*2.0)+rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t62025+b3f*t62026+ \
                   b2f*c*t62023+b4f*t62027*t62028))+1.0)*(a1f*c*t62023+1.0)*2.0-c0p*t62040*t62038*2.0))/(two_13*2.0-2.0) \
                   +c0p*t62040*t62038*2.0)*(ccaa1*t61987*t62041*1/(t62044*t62044)*2.0-(ccaa2*t61987*t62041*2.0)/t62047+ \
                   ccaa2*t61992*t61989*t62042*t62062*2.0-(ccaa4*t61992*t61989*t62042*1.2E1)/t62057+ccaa4*t61992*t62002* \
                   t62042*t62071*(t61987*t62041*1.2E1+t61992*t61989*t62042*1.2E1+gamma_aa[index]*gcaa*t61990*t62041*2.4E1) \
                   -(ccaa3*gamma_aa[index]*gcaa*t61990*t62041*6.0)/t62051-ccaa1*gamma_aa[index]*gcaa*t61990*t62041*1/ \
                   (t62044*t62044*t62044)*2.0-ccaa2*t61987*t61989*t62041*1/(t62047*t62047*t62047)*(t62058*t62058)*2.0- \
                   ccaa4*t61992*t62002*t62042*(t62052*t62052)*1/(t62057*t62057*t62057)*2.0+ccaa2*gamma_aa[index]*t61987* \
                   t62041*t62062*t62058*4.0+ccaa4*gamma_aa[index]*t61992*t61989*t62042*t62052*t62071*8.0+ccaa3*gcaa*t61990* \
                   t61989*t62041*t62066*t62059*6.0+ccaa3*gamma_aa[index]*gcaa*t61990*t61989*t62041*t62059*(t61987*t62041* \
                   6.0+gamma_aa[index]*gcaa*t61990*t62041*6.0)-ccaa3*gamma_aa[index]*gcaa*t61990*t61989*t62041*1/(t62051* \
                   t62051*t62051)*(t62066*t62066)*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t60485 = 1/pow(rho_a[index],1.0/3.0);
                double t60486 = c*t60485;
                double t60487 = sqrt(t60486);
                double t60488 = pow(t60486,3.0/2.0);
                double t60489 = c*c;
                double t60490 = 1/pow(rho_a[index],2.0/3.0);
                double t60491 = 1/c0p;
                double t60492 = b1p*t60487;
                double t60493 = b3p*t60488;
                double t60494 = b4p*t60490*t60489;
                double t60495 = b2p*c*t60485;
                double t60496 = t60492+t60493+t60494+t60495;
                double t60497 = 1/t60496;
                double t60498 = t60491*t60497*(1.0/2.0);
                double t60499 = t60498+1.0;
                double t60500 = log(t60499);
                double t60501 = a1p*c*t60485;
                double t60502 = t60501+1.0;
                double t60503 = pow(2.0,1.0/3.0);
                double t60504 = t60503*2.0;
                double t60505 = t60504-2.0;
                double t60506 = two_13*2.0;
                double t60507 = t60506-2.0;
                double t60508 = 1/t60507;
                double t60509 = 1/c0f;
                double t60510 = 1/pow(rho_b[index],1.0/3.0);
                double t60511 = c*t60510;
                double t60512 = sqrt(t60511);
                double t60513 = pow(t60511,3.0/2.0);
                double t60514 = 1/pow(rho_b[index],2.0/3.0);
                double t60515 = b1p*t60512;
                double t60516 = b3p*t60513;
                double t60517 = b4p*t60514*t60489;
                double t60518 = b2p*c*t60510;
                double t60519 = t60515+t60516+t60517+t60518;
                double t60520 = 1/t60519;
                double t60521 = t60520*t60491*(1.0/2.0);
                double t60522 = t60521+1.0;
                double t60523 = log(t60522);
                double t60524 = a1p*c*t60510;
                double t60525 = t60524+1.0;
                double t60526 = c0p*t60523*t60525*2.0;
                double t60527 = rho_a[index]+rho_b[index];
                double t60528 = 1/pow(t60527,1.0/3.0);
                double t60529 = c*t60528;
                double t60530 = sqrt(t60529);
                double t60531 = pow(t60529,3.0/2.0);
                double t60532 = 1/pow(t60527,2.0/3.0);
                double t60533 = b1p*t60530;
                double t60534 = b3p*t60531;
                double t60535 = b4p*t60532*t60489;
                double t60536 = b2p*c*t60528;
                double t60537 = t60533+t60534+t60535+t60536;
                double t60538 = 1/t60537;
                double t60539 = t60491*t60538*(1.0/2.0);
                double t60540 = t60539+1.0;
                double t60541 = log(t60540);
                double t60542 = a1p*c*t60528;
                double t60543 = t60542+1.0;
                double t60544 = c0p*t60541*t60543*2.0;
                double t60545 = rho_a[index]-rho_b[index];
                double t60546 = t60545*t60545;
                double t60547 = 1/t60527;
                double t60548 = t60545*t60547;
                double t60549 = 1/(t60527*t60527*t60527*t60527);
                double t60550 = t60546*t60546;
                double t60551 = t60548+1.0;
                double t60552 = pow(t60551,4.0/3.0);
                double t60553 = -t60548+1.0;
                double t60554 = pow(t60553,4.0/3.0);
                double t60555 = t60552+t60554-2.0;
                double t60556 = gcab*gcab;
                double t60559 = 1/pow(rho_a[index],8.0/3.0);
                double t60560 = 1/pow(rho_b[index],8.0/3.0);
                double t60561 = gamma_aa[index]*t60559*(1.0/2.0);
                double t60562 = gamma_bb[index]*t60560*(1.0/2.0);
                double t60557 = t60561+t60562;
                double t60558 = t60557*t60557;
                double t60563 = t60556*t60556;
                double t60564 = t60558*t60558;
                double t60565 = t60556*t60558*3.0;
                double t60566 = gcab*t60556*t60557*t60558;
                double t60567 = gcab*t60557*3.0;
                double t60568 = t60565+t60566+t60567+1.0;
                double t60569 = t60556*t60558;
                double t60570 = gcab*t60557*2.0;
                double t60571 = t60570+t60569+1.0;
                double t60572 = t60556*t60558*6.0;
                double t60573 = gcab*t60556*t60557*t60558*4.0;
                double t60574 = t60563*t60564;
                double t60575 = gcab*t60557*4.0;
                double t60576 = t60572+t60573+t60574+t60575+1.0;
                double t60577 = 1/(t60571*t60571);
                double t60578 = gcab*t60559;
                double t60579 = t60556*t60557*t60559;
                double t60580 = t60578+t60579;
                double t60581 = gcab*t60560;
                double t60582 = t60560*t60556*t60557;
                double t60583 = t60581+t60582;
                double t60584 = gcab*t60557;
                double t60585 = t60584+1.0;
                double t60586 = gcab*t60559*2.0;
                double t60587 = t60556*t60557*t60559*6.0;
                double t60588 = gcab*t60556*t60558*t60559*6.0;
                double t60589 = t60563*t60557*t60558*t60559*2.0;
                double t60590 = t60586+t60587+t60588+t60589;
                double t60591 = 1/(t60576*t60576);
                double t60592 = gcab*t60560*2.0;
                double t60593 = t60560*t60556*t60557*6.0;
                double t60594 = gcab*t60560*t60556*t60558*6.0;
                double t60595 = t60560*t60563*t60557*t60558*2.0;
                double t60596 = t60592+t60593+t60594+t60595;
                double t60597 = gcab*t60559*(3.0/2.0);
                double t60598 = t60556*t60557*t60559*3.0;
                double t60599 = gcab*t60556*t60558*t60559*(3.0/2.0);
                double t60600 = t60597+t60598+t60599;
                double t60601 = 1/(t60568*t60568);
                double t60602 = gcab*t60560*(3.0/2.0);
                double t60603 = t60560*t60556*t60557*3.0;
                double t60604 = gcab*t60560*t60556*t60558*(3.0/2.0);
                double t60605 = t60602+t60603+t60604;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t60526-t60505*t60508*(t60526-c0f*log((t60509*(1.0/2.0) \
                   )/(b1f*t60512+b3f*t60513+b2f*c*t60510+b4f*t60514*t60489)+1.0)*(a1f*c*t60510+1.0)*2.0))+t60527*(t60544- \
                   t60550*t60508*t60555*t60549*(t60544-c0f*log((t60509*(1.0/2.0))/(b1f*t60530+b3f*t60531+b2f*c*t60528+ \
                   b4f*t60532*t60489)+1.0)*(a1f*c*t60528+1.0)*2.0)+(Aa*t60508*t60555*log((1.0/2.0)/(Aa*(b1a*t60530+b3a* \
                   t60531+b2a*c*t60528+b4a*t60532*t60489))+1.0)*(t60550*t60549-1.0)*(a1a*c*t60528+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t60505*t60508*(c0p*t60500*t60502*2.0-c0f*log((t60509*(1.0/2.0))/(b1f*t60487+b3f*t60488+b2f*c*t60485+ \
                   b4f*t60490*t60489)+1.0)*(a1f*c*t60485+1.0)*2.0)-c0p*t60500*t60502*2.0))*(ccab4*t60563*t60564*t60591* \
                   (t60560*t60556*t60559*3.0+t60560*t60563*t60558*t60559*3.0+gcab*t60560*t60556*t60557*t60559*6.0)-(ccab2* \
                   t60560*t60556*t60559*(1.0/2.0))/t60571+ccab1*t60560*t60556*1/(t60585*t60585)*t60559*(1.0/2.0)+ccab2* \
                   t60560*t60580*t60556*t60557*t60577+ccab2*t60560*t60563*t60558*t60559*t60577*(1.0/2.0)+ccab2*t60556* \
                   t60583*t60557*t60559*t60577-ccab2*1/(t60571*t60571*t60571)*t60580*t60556*t60583*t60558*2.0-(ccab4* \
                   t60560*t60563*t60558*t60559*3.0)/t60576-ccab4*t60563*t60590*t60564*1/(t60576*t60576*t60576)*t60596* \
                   2.0+ccab3*gcab*t60600*t60601*t60560*t60556*t60558*(3.0/2.0)+ccab3*gcab*t60601*t60605*t60556*t60558* \
                   t60559*(3.0/2.0)+ccab4*t60560*t60563*t60590*t60591*t60557*t60558*2.0+ccab4*t60563*t60591*t60557*t60558* \
                   t60559*t60596*2.0+ccab3*gcab*t60601*t60556*t60557*t60558*(t60560*t60556*t60559*(3.0/2.0)+gcab*t60560* \
                   t60556*t60557*t60559*(3.0/2.0))-ccab1*gcab*t60560*t60556*t60557*1/(t60585*t60585*t60585)*t60559*(1.0/ \
                   2.0)-(ccab3*gcab*t60560*t60556*t60557*t60559*(3.0/2.0))/t60568-ccab3*gcab*t60600*t60605*t60556*t60557* \
                   t60558*1/(t60568*t60568*t60568)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t60609 = 1/pow(rho_a[index],1.0/3.0);
                double t60610 = c*t60609;
                double t60611 = sqrt(t60610);
                double t60612 = pow(t60610,3.0/2.0);
                double t60613 = c*c;
                double t60614 = 1/pow(rho_a[index],2.0/3.0);
                double t60615 = 1/c0p;
                double t60616 = b1p*t60611;
                double t60617 = b3p*t60612;
                double t60618 = b4p*t60613*t60614;
                double t60619 = b2p*c*t60609;
                double t60620 = t60616+t60617+t60618+t60619;
                double t60621 = 1/t60620;
                double t60622 = t60621*t60615*(1.0/2.0);
                double t60623 = t60622+1.0;
                double t60624 = log(t60623);
                double t60625 = a1p*c*t60609;
                double t60626 = t60625+1.0;
                double t60627 = pow(2.0,1.0/3.0);
                double t60628 = t60627*2.0;
                double t60629 = t60628-2.0;
                double t60630 = two_13*2.0;
                double t60631 = t60630-2.0;
                double t60632 = 1/t60631;
                double t60633 = 1/c0f;
                double t60634 = 1/pow(rho_b[index],1.0/3.0);
                double t60635 = c*t60634;
                double t60636 = sqrt(t60635);
                double t60637 = pow(t60635,3.0/2.0);
                double t60638 = 1/pow(rho_b[index],2.0/3.0);
                double t60639 = b1p*t60636;
                double t60640 = b3p*t60637;
                double t60641 = b4p*t60613*t60638;
                double t60642 = b2p*c*t60634;
                double t60643 = t60640+t60641+t60642+t60639;
                double t60644 = 1/t60643;
                double t60645 = t60615*t60644*(1.0/2.0);
                double t60646 = t60645+1.0;
                double t60647 = log(t60646);
                double t60648 = a1p*c*t60634;
                double t60649 = t60648+1.0;
                double t60650 = c0p*t60647*t60649*2.0;
                double t60651 = rho_a[index]+rho_b[index];
                double t60652 = 1/pow(t60651,1.0/3.0);
                double t60653 = c*t60652;
                double t60654 = sqrt(t60653);
                double t60655 = pow(t60653,3.0/2.0);
                double t60656 = 1/pow(t60651,2.0/3.0);
                double t60657 = b1p*t60654;
                double t60658 = b3p*t60655;
                double t60659 = b4p*t60613*t60656;
                double t60660 = b2p*c*t60652;
                double t60661 = t60660+t60657+t60658+t60659;
                double t60662 = 1/t60661;
                double t60663 = t60615*t60662*(1.0/2.0);
                double t60664 = t60663+1.0;
                double t60665 = log(t60664);
                double t60666 = a1p*c*t60652;
                double t60667 = t60666+1.0;
                double t60668 = c0p*t60665*t60667*2.0;
                double t60669 = rho_a[index]-rho_b[index];
                double t60670 = t60669*t60669;
                double t60671 = 1/t60651;
                double t60672 = t60671*t60669;
                double t60673 = 1/(t60651*t60651*t60651*t60651);
                double t60674 = t60670*t60670;
                double t60675 = t60672+1.0;
                double t60676 = pow(t60675,4.0/3.0);
                double t60677 = -t60672+1.0;
                double t60678 = pow(t60677,4.0/3.0);
                double t60679 = t60676+t60678-2.0;
                double t60680 = gcab*gcab;
                double t60681 = 1/pow(rho_b[index],1.6E1/3.0);
                double t60682 = 1/pow(rho_a[index],8.0/3.0);
                double t60683 = gamma_aa[index]*t60682*(1.0/2.0);
                double t60684 = 1/pow(rho_b[index],8.0/3.0);
                double t60685 = gamma_bb[index]*t60684*(1.0/2.0);
                double t60686 = t60683+t60685;
                double t60687 = gcab*t60686;
                double t60688 = t60687+1.0;
                double t60689 = t60686*t60686;
                double t60690 = t60680*t60689;
                double t60691 = gcab*t60686*2.0;
                double t60692 = t60690+t60691+1.0;
                double t60693 = t60680*t60680;
                double t60710 = gcab*t60684*2.0;
                double t60711 = t60680*t60684*t60686*6.0;
                double t60712 = gcab*t60680*t60684*t60689*6.0;
                double t60713 = t60684*t60693*t60686*t60689*2.0;
                double t60694 = t60710+t60711+t60712+t60713;
                double t60695 = t60689*t60689;
                double t60715 = gcab*t60684*(3.0/2.0);
                double t60716 = t60680*t60684*t60686*3.0;
                double t60717 = gcab*t60680*t60684*t60689*(3.0/2.0);
                double t60696 = t60715+t60716+t60717;
                double t60697 = t60680*t60689*3.0;
                double t60698 = gcab*t60680*t60686*t60689;
                double t60699 = gcab*t60686*3.0;
                double t60700 = t60697+t60698+t60699+1.0;
                double t60707 = gcab*t60684;
                double t60708 = t60680*t60684*t60686;
                double t60701 = t60707+t60708;
                double t60702 = t60680*t60689*6.0;
                double t60703 = gcab*t60680*t60686*t60689*4.0;
                double t60704 = t60693*t60695;
                double t60705 = gcab*t60686*4.0;
                double t60706 = t60702+t60703+t60704+t60705+1.0;
                double t60709 = 1/(t60692*t60692);
                double t60714 = 1/(t60706*t60706);
                double t60718 = 1/(t60700*t60700);
                double t60719 = c0p*t60624*t60626*2.0;
                double t60720 = gx*gx;
                double t60721 = gamma_bb[index]*gamma_bb[index];
                double t60722 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t60723 = t60720*t60720;
                double t60724 = 1/pow(rho_b[index],3.2E1/3.0);
                double t60725 = gamma_bb[index]*gx*t60684;
                double t60726 = t60725+1.0;
                double t60727 = gamma_bb[index]*gx*t60684*2.0;
                double t60728 = t60720*t60721*t60681;
                double t60729 = t60727+t60728+1.0;
                double t60730 = gamma_bb[index]*gx*t60684*3.0;
                double t60731 = gamma_bb[index]*gx*t60720*t60721*t60722;
                double t60732 = t60720*t60721*t60681*3.0;
                double t60733 = t60730+t60731+t60732+1.0;
                double t60734 = t60721*t60721;
                double t60750 = gx*t60684*4.0;
                double t60751 = gamma_bb[index]*t60720*t60681*1.2E1;
                double t60752 = gx*t60720*t60721*t60722*1.2E1;
                double t60753 = gamma_bb[index]*t60721*t60723*t60724*4.0;
                double t60735 = t60750+t60751+t60752+t60753;
                double t60736 = gamma_bb[index]*gx*t60684*4.0;
                double t60737 = gamma_bb[index]*gx*t60720*t60721*t60722*4.0;
                double t60738 = t60720*t60721*t60681*6.0;
                double t60739 = t60723*t60724*t60734;
                double t60740 = t60736+t60737+t60738+t60739+1.0;
                double t60743 = gx*t60684*2.0;
                double t60744 = gamma_bb[index]*t60720*t60681*2.0;
                double t60741 = t60743+t60744;
                double t60742 = 1/(t60733*t60733);
                double t60745 = 1/(t60729*t60729);
                double t60746 = gx*t60684*3.0;
                double t60747 = gamma_bb[index]*t60720*t60681*6.0;
                double t60748 = gx*t60720*t60721*t60722*3.0;
                double t60749 = t60746+t60747+t60748;
                double t60754 = 1/(t60740*t60740);
                double t60755 = b1f*t60636;
                double t60756 = b3f*t60637;
                double t60757 = b4f*t60613*t60638;
                double t60758 = b2f*c*t60634;
                double t60759 = t60755+t60756+t60757+t60758;
                double t60760 = 1/t60759;
                double t60761 = t60633*t60760*(1.0/2.0);
                double t60762 = t60761+1.0;
                double t60763 = log(t60762);
                double t60764 = a1f*c*t60634;
                double t60765 = t60764+1.0;
                double t60766 = t60650-c0f*t60763*t60765*2.0;
                double t60767 = t60650-t60632*t60629*t60766;
                double t60768 = gcaa*gcaa;
                double t60769 = t60768*t60768;
                double t60770 = gamma_bb[index]*gcaa*t60684;
                double t60771 = t60770+1.0;
                double t60772 = gamma_bb[index]*gcaa*t60684*2.0;
                double t60773 = t60721*t60681*t60768;
                double t60774 = t60772+t60773+1.0;
                double t60775 = gamma_bb[index]*gcaa*t60684*3.0;
                double t60776 = gamma_bb[index]*gcaa*t60721*t60722*t60768;
                double t60777 = t60721*t60681*t60768*3.0;
                double t60778 = t60775+t60776+t60777+1.0;
                double t60794 = gcaa*t60684*4.0;
                double t60795 = gamma_bb[index]*t60681*t60768*1.2E1;
                double t60796 = gcaa*t60721*t60722*t60768*1.2E1;
                double t60797 = gamma_bb[index]*t60721*t60724*t60769*4.0;
                double t60779 = t60794+t60795+t60796+t60797;
                double t60780 = gamma_bb[index]*gcaa*t60684*4.0;
                double t60781 = gamma_bb[index]*gcaa*t60721*t60722*t60768*4.0;
                double t60782 = t60721*t60681*t60768*6.0;
                double t60783 = t60724*t60734*t60769;
                double t60784 = t60780+t60781+t60782+t60783+1.0;
                double t60787 = gcaa*t60684*2.0;
                double t60788 = gamma_bb[index]*t60681*t60768*2.0;
                double t60785 = t60787+t60788;
                double t60786 = 1/(t60778*t60778);
                double t60789 = 1/(t60774*t60774);
                double t60790 = gcaa*t60684*3.0;
                double t60791 = gamma_bb[index]*t60681*t60768*6.0;
                double t60792 = gcaa*t60721*t60722*t60768*3.0;
                double t60793 = t60790+t60791+t60792;
                double t60798 = 1/(t60784*t60784);
                v_gamma_bb_gamma_bb_[index] = (rho_b[index]*t60767+rho_a[index]*(t60719-t60632*t60629*(t60719-c0f* \
                   log((t60633*(1.0/2.0))/(b1f*t60611+b3f*t60612+b2f*c*t60609+b4f*t60613*t60614)+1.0)*(a1f*c*t60609+1.0) \
                   *2.0))-t60651*(t60668-t60632*t60673*t60674*t60679*(t60668-c0f*log((t60633*(1.0/2.0))/(b1f*t60654+b3f* \
                   t60655+b2f*c*t60652+b4f*t60613*t60656)+1.0)*(a1f*c*t60652+1.0)*2.0)+(Aa*t60632*t60679*log((1.0/2.0) \
                   /(Aa*(b1a*t60654+b3a*t60655+b2a*c*t60652+b4a*t60613*t60656))+1.0)*(t60673*t60674-1.0)*(a1a*c*t60652+ \
                   1.0)*2.0)/d2fz0))*((ccab2*t60680*t60681*(1.0/2.0))/t60692-ccab1*t60680*t60681*1/(t60688*t60688)*(1.0/ \
                   2.0)+ccab2*(t60701*t60701)*t60680*1/(t60692*t60692*t60692)*t60689*2.0+ccab4*1/(t60706*t60706*t60706) \
                   *t60693*(t60694*t60694)*t60695*2.0-ccab2*t60681*t60709*t60693*t60689*(1.0/2.0)-ccab4*t60714*t60693* \
                   t60695*(t60680*t60681*3.0+t60681*t60693*t60689*3.0+gcab*t60680*t60681*t60686*6.0)+(ccab4*t60681*t60693* \
                   t60689*3.0)/t60706-ccab2*t60701*t60680*t60709*t60684*t60686*2.0+(ccab3*gcab*t60680*t60681*t60686*(3.0/ \
                   2.0))/t60700+ccab1*gcab*t60680*t60681*t60686*1/(t60688*t60688*t60688)*(1.0/2.0)+ccab3*gcab*1/(t60700* \
                   t60700*t60700)*t60680*t60686*(t60696*t60696)*t60689*2.0-ccab3*gcab*t60680*t60718*t60684*t60696*t60689* \
                   3.0-ccab4*t60714*t60684*t60693*t60694*t60686*t60689*4.0-ccab3*gcab*t60680*t60718*t60686*t60689*(t60680* \
                   t60681*(3.0/2.0)+gcab*t60680*t60681*t60686*(3.0/2.0)))-c0*pow(rho_b[index],4.0/3.0)*(cx1*t60720*t60681* \
                   1/(t60726*t60726)*2.0-(cx2*t60720*t60681*2.0)/t60729+cx2*t60721*t60723*t60724*t60745*2.0-(cx4*t60721* \
                   t60723*t60724*1.2E1)/t60740+cx4*t60723*t60724*t60734*t60754*(t60720*t60681*1.2E1+t60721*t60723*t60724* \
                   1.2E1+gamma_bb[index]*gx*t60720*t60722*2.4E1)-cx1*gamma_bb[index]*gx*t60720*t60722*1/(t60726*t60726* \
                   t60726)*2.0-(cx3*gamma_bb[index]*gx*t60720*t60722*6.0)/t60733-cx2*t60720*t60721*(t60741*t60741)*t60681* \
                   1/(t60729*t60729*t60729)*2.0-cx4*1/(t60740*t60740*t60740)*t60723*t60724*t60734*(t60735*t60735)*2.0+ \
                   cx2*gamma_bb[index]*t60720*t60741*t60681*t60745*4.0+cx4*gamma_bb[index]*t60721*t60723*t60724*t60735* \
                   t60754*8.0+cx3*gx*t60720*t60721*t60722*t60742*t60749*6.0+cx3*gamma_bb[index]*gx*t60720*t60721*t60722* \
                   t60742*(t60720*t60681*6.0+gamma_bb[index]*gx*t60720*t60722*6.0)-cx3*gamma_bb[index]*gx*t60720*t60721* \
                   t60722*1/(t60733*t60733*t60733)*(t60749*t60749)*2.0)+rho_b[index]*t60767*(ccaa1*t60681*1/(t60771*t60771) \
                   *t60768*2.0-(ccaa2*t60681*t60768*2.0)/t60774+ccaa2*t60721*t60724*t60769*t60789*2.0-(ccaa4*t60721*t60724* \
                   t60769*1.2E1)/t60784+ccaa4*t60724*t60734*t60769*t60798*(t60681*t60768*1.2E1+t60721*t60724*t60769*1.2E1+ \
                   gamma_bb[index]*gcaa*t60722*t60768*2.4E1)-ccaa1*gamma_bb[index]*gcaa*t60722*1/(t60771*t60771*t60771) \
                   *t60768*2.0-(ccaa3*gamma_bb[index]*gcaa*t60722*t60768*6.0)/t60778-ccaa2*t60721*t60681*1/(t60774*t60774* \
                   t60774)*(t60785*t60785)*t60768*2.0-ccaa4*t60724*t60734*1/(t60784*t60784*t60784)*t60769*(t60779*t60779) \
                   *2.0+ccaa2*gamma_bb[index]*t60681*t60785*t60768*t60789*4.0+ccaa4*gamma_bb[index]*t60721*t60724*t60769* \
                   t60779*t60798*8.0+ccaa3*gcaa*t60721*t60722*t60793*t60768*t60786*6.0+ccaa3*gamma_bb[index]*gcaa*t60721* \
                   t60722*t60768*t60786*(t60681*t60768*6.0+gamma_bb[index]*gcaa*t60722*t60768*6.0)-ccaa3*gamma_bb[index]* \
                   gcaa*t60721*t60722*(t60793*t60793)*t60768*1/(t60778*t60778*t60778)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t61352 = gx*gx;
                double t61353 = 1/pow(rho_b[index],1.6E1/3.0);
                double t61354 = 1/pow(rho_b[index],8.0/3.0);
                double t61355 = gamma_bb[index]*gamma_bb[index];
                double t61356 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t61357 = t61352*t61352;
                double t61358 = 1/pow(rho_b[index],3.2E1/3.0);
                double t61359 = gamma_bb[index]*gx*t61354;
                double t61360 = t61359+1.0;
                double t61361 = gamma_bb[index]*gx*t61354*2.0;
                double t61362 = t61352*t61353*t61355;
                double t61363 = t61361+t61362+1.0;
                double t61364 = gamma_bb[index]*gx*t61354*3.0;
                double t61365 = gamma_bb[index]*gx*t61352*t61355*t61356;
                double t61366 = t61352*t61353*t61355*3.0;
                double t61367 = t61364+t61365+t61366+1.0;
                double t61368 = t61355*t61355;
                double t61384 = gx*t61354*4.0;
                double t61385 = gamma_bb[index]*t61352*t61353*1.2E1;
                double t61386 = gx*t61352*t61355*t61356*1.2E1;
                double t61387 = gamma_bb[index]*t61355*t61357*t61358*4.0;
                double t61369 = t61384+t61385+t61386+t61387;
                double t61370 = gamma_bb[index]*gx*t61354*4.0;
                double t61371 = gamma_bb[index]*gx*t61352*t61355*t61356*4.0;
                double t61372 = t61352*t61353*t61355*6.0;
                double t61373 = t61357*t61358*t61368;
                double t61374 = t61370+t61371+t61372+t61373+1.0;
                double t61377 = gx*t61354*2.0;
                double t61378 = gamma_bb[index]*t61352*t61353*2.0;
                double t61375 = t61377+t61378;
                double t61376 = 1/(t61367*t61367);
                double t61379 = 1/(t61363*t61363);
                double t61380 = gx*t61354*3.0;
                double t61381 = gamma_bb[index]*t61352*t61353*6.0;
                double t61382 = gx*t61352*t61355*t61356*3.0;
                double t61383 = t61380+t61381+t61382;
                double t61388 = 1/(t61374*t61374);
                double t61389 = 1/pow(rho_b[index],1.0/3.0);
                double t61390 = c*t61389;
                double t61391 = sqrt(t61390);
                double t61392 = pow(t61390,3.0/2.0);
                double t61393 = c*c;
                double t61394 = 1/pow(rho_b[index],2.0/3.0);
                double t61395 = 1/c0p;
                double t61396 = b1p*t61391;
                double t61397 = b3p*t61392;
                double t61398 = b4p*t61393*t61394;
                double t61399 = b2p*c*t61389;
                double t61400 = t61396+t61397+t61398+t61399;
                double t61401 = 1/t61400;
                double t61402 = t61401*t61395*(1.0/2.0);
                double t61403 = t61402+1.0;
                double t61404 = log(t61403);
                double t61405 = a1p*c*t61389;
                double t61406 = t61405+1.0;
                double t61407 = gcaa*gcaa;
                double t61408 = t61407*t61407;
                double t61409 = gamma_bb[index]*gcaa*t61354;
                double t61410 = t61409+1.0;
                double t61411 = gamma_bb[index]*gcaa*t61354*2.0;
                double t61412 = t61353*t61407*t61355;
                double t61413 = t61411+t61412+1.0;
                double t61414 = gamma_bb[index]*gcaa*t61354*3.0;
                double t61415 = gamma_bb[index]*gcaa*t61407*t61355*t61356;
                double t61416 = t61353*t61407*t61355*3.0;
                double t61417 = t61414+t61415+t61416+1.0;
                double t61433 = gcaa*t61354*4.0;
                double t61434 = gamma_bb[index]*t61353*t61407*1.2E1;
                double t61435 = gcaa*t61407*t61355*t61356*1.2E1;
                double t61436 = gamma_bb[index]*t61408*t61355*t61358*4.0;
                double t61418 = t61433+t61434+t61435+t61436;
                double t61419 = gamma_bb[index]*gcaa*t61354*4.0;
                double t61420 = gamma_bb[index]*gcaa*t61407*t61355*t61356*4.0;
                double t61421 = t61353*t61407*t61355*6.0;
                double t61422 = t61408*t61358*t61368;
                double t61423 = t61420+t61421+t61422+t61419+1.0;
                double t61426 = gcaa*t61354*2.0;
                double t61427 = gamma_bb[index]*t61353*t61407*2.0;
                double t61424 = t61426+t61427;
                double t61425 = 1/(t61417*t61417);
                double t61428 = 1/(t61413*t61413);
                double t61429 = gcaa*t61354*3.0;
                double t61430 = gamma_bb[index]*t61353*t61407*6.0;
                double t61431 = gcaa*t61407*t61355*t61356*3.0;
                double t61432 = t61430+t61431+t61429;
                double t61437 = 1/(t61423*t61423);
                v_gamma_bb_gamma_bb_[index] = -c0*pow(rho_b[index],4.0/3.0)*(cx1*1/(t61360*t61360)*t61352*t61353* \
                   2.0-(cx2*t61352*t61353*2.0)/t61363+cx2*t61355*t61357*t61358*t61379*2.0-(cx4*t61355*t61357*t61358*1.2E1) \
                   /t61374+cx4*t61357*t61358*t61368*t61388*(t61352*t61353*1.2E1+t61355*t61357*t61358*1.2E1+gamma_bb[index]* \
                   gx*t61352*t61356*2.4E1)-cx1*gamma_bb[index]*gx*1/(t61360*t61360*t61360)*t61352*t61356*2.0-(cx3*gamma_bb[index]* \
                   gx*t61352*t61356*6.0)/t61367-cx2*t61352*t61353*1/(t61363*t61363*t61363)*t61355*(t61375*t61375)*2.0- \
                   cx4*1/(t61374*t61374*t61374)*t61357*t61358*t61368*(t61369*t61369)*2.0+cx2*gamma_bb[index]*t61352*t61353* \
                   t61375*t61379*4.0+cx4*gamma_bb[index]*t61355*t61357*t61358*t61369*t61388*8.0+cx3*gx*t61352*t61355* \
                   t61356*t61383*t61376*6.0+cx3*gamma_bb[index]*gx*t61352*t61355*t61356*t61376*(t61352*t61353*6.0+gamma_bb[index]* \
                   gx*t61352*t61356*6.0)-cx3*gamma_bb[index]*gx*t61352*t61355*t61356*(t61383*t61383)*1/(t61367*t61367* \
                   t61367)*2.0)+rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t61391+b3f*t61392+ \
                   b2f*c*t61389+b4f*t61393*t61394))+1.0)*(a1f*c*t61389+1.0)*2.0-c0p*t61404*t61406*2.0))/(two_13*2.0-2.0) \
                   +c0p*t61404*t61406*2.0)*(ccaa1*1/(t61410*t61410)*t61353*t61407*2.0-(ccaa2*t61353*t61407*2.0)/t61413+ \
                   ccaa2*t61408*t61355*t61428*t61358*2.0-(ccaa4*t61408*t61355*t61358*1.2E1)/t61423+ccaa4*t61408*t61437* \
                   t61358*t61368*(t61353*t61407*1.2E1+t61408*t61355*t61358*1.2E1+gamma_bb[index]*gcaa*t61407*t61356*2.4E1) \
                   -ccaa1*gamma_bb[index]*gcaa*1/(t61410*t61410*t61410)*t61407*t61356*2.0-(ccaa3*gamma_bb[index]*gcaa* \
                   t61407*t61356*6.0)/t61417-ccaa2*1/(t61413*t61413*t61413)*(t61424*t61424)*t61353*t61407*t61355*2.0- \
                   ccaa4*1/(t61423*t61423*t61423)*t61408*(t61418*t61418)*t61358*t61368*2.0+ccaa2*gamma_bb[index]*t61424* \
                   t61353*t61407*t61428*4.0+ccaa4*gamma_bb[index]*t61408*t61355*t61418*t61437*t61358*8.0+ccaa3*gcaa*t61432* \
                   t61407*t61425*t61355*t61356*6.0+ccaa3*gamma_bb[index]*gcaa*t61407*t61425*t61355*t61356*(t61353*t61407* \
                   6.0+gamma_bb[index]*gcaa*t61407*t61356*6.0)-ccaa3*gamma_bb[index]*gcaa*(t61432*t61432)*t61407*1/(t61417* \
                   t61417*t61417)*t61355*t61356*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

