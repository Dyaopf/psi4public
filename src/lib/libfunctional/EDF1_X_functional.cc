/**********************************************************
* EDF1_X_functional.cc: definitions for EDF1_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 25-May-2011
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "EDF1_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

EDF1_X_Functional::EDF1_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "EDF1_X";
    description_ = "Empirical Density Function #1 (Exchange only)";
    citation_ = "R.D. Adamson, P.M.W. Gill, and J.A. Pople, Chem. Phys. Lett., 284, 6-11, 1998";
    
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double d1 = 3.5000000000000001E-03;
    params_.push_back(make_pair("d1",d1));
    double d2 = 4.1999999999999997E-03;
    params_.push_back(make_pair("d2",d2));
    double e0 = 1.0309520000000001E+00;
    params_.push_back(make_pair("e0",e0));
    double e1 = 1.0401700000000000E+01;
    params_.push_back(make_pair("e1",e1));
    double e2 = -8.4479299999999995E+00;
    params_.push_back(make_pair("e2",e2));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
EDF1_X_Functional::~EDF1_X_Functional()
{
}
void EDF1_X_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* gamma_aa;
    const double* tau_a;

    rho_a = prop->getDensityA();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
    }

    double c0 = params_[0].second;
    double d1 = params_[1].second;
    double d2 = params_[2].second;
    double e0 = params_[3].second;
    double e1 = params_[4].second;
    double e2 = params_[5].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t27960 = sqrt(gamma_aa[index]);
            double t27961 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27962 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27963 = t27960*t27961;
            double t27964 = log(t27963+sqrt(t27963*t27963+1.0));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t27962)/(d1*t27960* \
               t27961*t27964*6.0+1.0)+(d2*e2*gamma_aa[index]*t27962)/(d2*t27960*t27961*t27964*6.0+1.0))*-2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t27966 = sqrt(gamma_aa[index]);
            double t27967 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27968 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27969 = t27966*t27967;
            double t27970 = log(t27969+sqrt(t27969*t27969+1.0));
            double t27971 = d1*t27970*t27966*t27967*6.0;
            double t27972 = t27971+1.0;
            double t27973 = 1.0/t27972;
            double t27974 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27975 = d2*t27970*t27966*t27967*6.0;
            double t27976 = t27975+1.0;
            double t27977 = 1.0/t27976;
            double t27978 = gamma_aa[index]*t27968;
            double t27979 = t27978+1.0;
            double t27980 = 1.0/sqrt(t27979);
            double t27981 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27973*t27974*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t27974*t27977*(8.0/3.0)-d1*e1*gamma_aa[index]*1.0/(t27972*t27972)*t27968*(d1*gamma_aa[index]* \
               t27980*t27974*8.0+d1*t27970*t27981*t27966*8.0)-d2*e2*gamma_aa[index]*1.0/(t27976*t27976)*t27968*(d2* \
               gamma_aa[index]*t27980*t27974*8.0+d2*t27970*t27981*t27966*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t27973*t27968+d2*e2*gamma_aa[index]*t27968*t27977)*(4.0/3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t27983 = sqrt(gamma_aa[index]);
                double t27984 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27985 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27986 = t27983*t27984;
                double t27987 = log(t27986+sqrt(t27986*t27986+1.0));
                double t27988 = d1*t27983*t27984*t27987*6.0;
                double t27989 = t27988+1.0;
                double t27990 = gamma_aa[index]*t27985;
                double t27991 = t27990+1.0;
                double t27992 = 1.0/sqrt(t27991);
                double t27993 = 1.0/sqrt(gamma_aa[index]);
                double t27994 = d2*t27983*t27984*t27987*6.0;
                double t27995 = t27994+1.0;
                v_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*((d1*e1*t27985)/t27989+(d2*e2*t27985)/t27995-d1*e1* \
                   gamma_aa[index]*t27985*1.0/(t27989*t27989)*(d1*t27992*t27985*3.0+d1*t27984*t27993*t27987*3.0)-d2*e2* \
                   gamma_aa[index]*t27985*1.0/(t27995*t27995)*(d2*t27992*t27985*3.0+d2*t27984*t27993*t27987*3.0))*-2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t27998 = sqrt(gamma_aa[index]);
            double t27999 = 1.0/pow(rho_a[index],4.0/3.0);
            double t28000 = 1.0/pow(rho_a[index],8.0/3.0);
            double t28001 = t27998*t27999;
            double t28002 = log(t28001+sqrt(t28001*t28001+1.0));
            double t28003 = d1*t27998*t27999*t28002*6.0;
            double t28004 = t28003+1.0;
            double t28005 = 1.0/t28004;
            double t28006 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t28007 = d2*t27998*t27999*t28002*6.0;
            double t28008 = t28007+1.0;
            double t28009 = 1.0/t28008;
            double t28010 = gamma_aa[index]*t28000;
            double t28011 = t28010+1.0;
            double t28012 = 1.0/sqrt(t28011);
            double t28013 = 1.0/pow(rho_a[index],7.0/3.0);
            double t28014 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t28015 = 1.0/(t28004*t28004);
            double t28016 = d1*gamma_aa[index]*t28012*t28006*8.0;
            double t28017 = d1*t27998*t28002*t28013*8.0;
            double t28018 = t28016+t28017;
            double t28019 = 1.0/(t28008*t28008);
            double t28020 = d2*gamma_aa[index]*t28012*t28006*8.0;
            double t28021 = d2*t27998*t28002*t28013*8.0;
            double t28022 = t28020+t28021;
            double t28023 = gamma_aa[index]*gamma_aa[index];
            double t28024 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t28025 = 1.0/pow(t28011,3.0/2.0);
            double t28026 = 1.0/pow(rho_a[index],1.0E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t28005*t28014*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t28014*t28009*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t28000*t28015*(d1*gamma_aa[index]* \
               t28012*t28014*4.0E1+d1*t27998*t28002*t28026*(5.6E1/3.0)-d1*t28023*t28024*t28025*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t28000*t28019*(d2*gamma_aa[index]*t28012*t28014*4.0E1+d2*t27998*t28002*t28026*(5.6E1/ \
               3.0)-d2*t28023*t28024*t28025*(3.2E1/3.0))+d1*e1*gamma_aa[index]*t28000*1.0/(t28004*t28004*t28004)* \
               (t28018*t28018)*2.0+d2*e2*gamma_aa[index]*t28000*(t28022*t28022)*1.0/(t28008*t28008*t28008)*2.0-d1* \
               e1*gamma_aa[index]*t28006*t28015*t28018*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t28022*t28006*t28019*(1.6E1/ \
               3.0))+pow(rho_a[index],1.0/3.0)*(d1*e1*gamma_aa[index]*t28005*t28006*(8.0/3.0)+d2*e2*gamma_aa[index]* \
               t28006*t28009*(8.0/3.0)-d1*e1*gamma_aa[index]*t28000*t28015*t28018-d2*e2*gamma_aa[index]*t28000*t28022* \
               t28019)*(8.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t28000*t28005+d2*e2* \
               gamma_aa[index]*t28000*t28009)*(4.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t28028 = sqrt(gamma_aa[index]);
                double t28029 = 1.0/pow(rho_a[index],4.0/3.0);
                double t28030 = 1.0/pow(rho_a[index],8.0/3.0);
                double t28031 = t28028*t28029;
                double t28032 = log(t28031+sqrt(t28031*t28031+1.0));
                double t28033 = d1*t28032*t28028*t28029*6.0;
                double t28034 = t28033+1.0;
                double t28035 = gamma_aa[index]*t28030;
                double t28036 = t28035+1.0;
                double t28037 = 1.0/sqrt(t28036);
                double t28038 = 1.0/sqrt(gamma_aa[index]);
                double t28039 = d2*t28032*t28028*t28029*6.0;
                double t28040 = t28039+1.0;
                double t28041 = 1.0/t28034;
                double t28042 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t28043 = 1.0/t28040;
                double t28044 = 1.0/(t28034*t28034);
                double t28045 = 1.0/(t28040*t28040);
                double t28046 = 1.0/pow(rho_a[index],7.0/3.0);
                double t28047 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t28048 = 1.0/pow(t28036,3.0/2.0);
                double t28049 = d1*t28030*t28037*3.0;
                double t28050 = d1*t28032*t28029*t28038*3.0;
                double t28051 = t28050+t28049;
                double t28052 = d2*t28030*t28037*3.0;
                double t28053 = d2*t28032*t28029*t28038*3.0;
                double t28054 = t28052+t28053;
                double t28055 = d1*gamma_aa[index]*t28042*t28037*8.0;
                double t28056 = d1*t28032*t28028*t28046*8.0;
                double t28057 = t28055+t28056;
                double t28058 = d2*gamma_aa[index]*t28042*t28037*8.0;
                double t28059 = d2*t28032*t28028*t28046*8.0;
                double t28060 = t28058+t28059;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t28041*t28042*(-8.0/3.0)-d2*e2*t28042* \
                   t28043*(8.0/3.0)+d1*e1*t28030*t28044*t28057+d2*e2*t28030*t28060*t28045+d1*e1*gamma_aa[index]*t28030* \
                   t28044*(d1*t28042*t28037*1.2E1-d1*gamma_aa[index]*t28047*t28048*4.0+d1*t28032*t28046*t28038*4.0)+d2* \
                   e2*gamma_aa[index]*t28030*t28045*(d2*t28042*t28037*1.2E1-d2*gamma_aa[index]*t28047*t28048*4.0+d2*t28032* \
                   t28046*t28038*4.0)+d1*e1*gamma_aa[index]*t28042*t28051*t28044*(8.0/3.0)+d2*e2*gamma_aa[index]*t28042* \
                   t28045*t28054*(8.0/3.0)-d1*e1*gamma_aa[index]*t28030*t28051*1.0/(t28034*t28034*t28034)*t28057*2.0- \
                   d2*e2*gamma_aa[index]*t28030*1.0/(t28040*t28040*t28040)*t28060*t28054*2.0)-pow(rho_a[index],1.0/3.0) \
                   *(d1*e1*t28030*t28041+d2*e2*t28030*t28043-d1*e1*gamma_aa[index]*t28030*t28051*t28044-d2*e2*gamma_aa[index]* \
                   t28030*t28045*t28054)*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t28062 = 1.0/pow(rho_a[index],8.0/3.0);
                double t28063 = 1.0/pow(rho_a[index],4.0/3.0);
                double t28064 = sqrt(gamma_aa[index]);
                double t28065 = t28063*t28064;
                double t28066 = log(t28065+sqrt(t28065*t28065+1.0));
                double t28067 = gamma_aa[index]*t28062;
                double t28068 = t28067+1.0;
                double t28069 = 1.0/sqrt(t28068);
                double t28070 = 1.0/sqrt(gamma_aa[index]);
                double t28071 = d1*t28062*t28069*3.0;
                double t28072 = d1*t28070*t28063*t28066*3.0;
                double t28073 = t28071+t28072;
                double t28074 = d1*t28063*t28064*t28066*6.0;
                double t28075 = t28074+1.0;
                double t28076 = d2*t28062*t28069*3.0;
                double t28077 = d2*t28070*t28063*t28066*3.0;
                double t28078 = t28076+t28077;
                double t28079 = d2*t28063*t28064*t28066*6.0;
                double t28080 = t28079+1.0;
                double t28081 = 1.0/(t28075*t28075);
                double t28082 = 1.0/(t28080*t28080);
                double t28083 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t28084 = 1.0/pow(t28068,3.0/2.0);
                double t28085 = 1.0/gamma_aa[index];
                double t28086 = 1.0/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*t28062*t28081*t28073*-2.0-d2*e2*t28062* \
                   t28082*t28078*2.0+d1*e1*gamma_aa[index]*t28062*(t28073*t28073)*1.0/(t28075*t28075*t28075)*2.0+d2*e2* \
                   gamma_aa[index]*t28062*1.0/(t28080*t28080*t28080)*(t28078*t28078)*2.0+d1*e1*gamma_aa[index]*t28062* \
                   t28081*(d1*t28083*t28084*(3.0/2.0)+d1*t28063*t28066*t28086*(3.0/2.0)-d1*t28062*t28085*t28069*(3.0/ \
                   2.0))+d2*e2*gamma_aa[index]*t28062*t28082*(d2*t28083*t28084*(3.0/2.0)+d2*t28063*t28066*t28086*(3.0/ \
                   2.0)-d2*t28062*t28085*t28069*(3.0/2.0)))*-2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void EDF1_X_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* rho_b;
    const double* gamma_aa;
    const double* gamma_ab;
    const double* gamma_bb;
    const double* tau_a;
    const double* tau_b;

    rho_a = prop->getDensityA();
    rho_b = prop->getDensityB();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
        gamma_ab = prop->getDensityGradientSquaredAB();
        gamma_bb = prop->getDensityGradientSquaredBB();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
        tau_b = prop->getKEDensityB();
    }

    double c0 = params_[0].second;
    double d1 = params_[1].second;
    double d2 = params_[2].second;
    double e0 = params_[3].second;
    double e1 = params_[4].second;
    double e2 = params_[5].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27332 = sqrt(gamma_aa[index]);
            double t27333 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27334 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27335 = t27332*t27333;
            double t27336 = log(t27335+sqrt(t27335*t27335+1.0));
            double t27337 = sqrt(gamma_bb[index]);
            double t27338 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27339 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27340 = t27337*t27338;
            double t27341 = log(t27340+sqrt(t27340*t27340+1.0));
            functional_[index] = -pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t27334)/(d1*t27332* \
               t27333*t27336*6.0+1.0)+(d2*e2*gamma_aa[index]*t27334)/(d2*t27332*t27333*t27336*6.0+1.0))-pow(rho_b[index],4.0/ \
               3.0)*(-c0*e0+(d1*e1*gamma_bb[index]*t27339)/(d1*t27341*t27337*t27338*6.0+1.0)+(d2*e2*gamma_bb[index]* \
               t27339)/(d2*t27341*t27337*t27338*6.0+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t27767 = sqrt(gamma_aa[index]);
            double t27768 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27769 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27770 = t27767*t27768;
            double t27771 = log(t27770+sqrt(t27770*t27770+1.0));
            functional_[index] = -pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t27769)/(d1*t27771* \
               t27767*t27768*6.0+1.0)+(d2*e2*gamma_aa[index]*t27769)/(d2*t27771*t27767*t27768*6.0+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t27610 = sqrt(gamma_bb[index]);
            double t27611 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27612 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27613 = t27610*t27611;
            double t27614 = log(t27613+sqrt(t27613*t27613+1.0));
            functional_[index] = -pow(rho_b[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_bb[index]*t27612)/(d1*t27610* \
               t27611*t27614*6.0+1.0)+(d2*e2*gamma_bb[index]*t27612)/(d2*t27610*t27611*t27614*6.0+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27343 = sqrt(gamma_aa[index]);
            double t27344 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27345 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27346 = t27343*t27344;
            double t27347 = log(t27346+sqrt(t27346*t27346+1.0));
            double t27348 = d1*t27343*t27344*t27347*6.0;
            double t27349 = t27348+1.0;
            double t27350 = 1.0/t27349;
            double t27351 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27352 = d2*t27343*t27344*t27347*6.0;
            double t27353 = t27352+1.0;
            double t27354 = 1.0/t27353;
            double t27355 = gamma_aa[index]*t27345;
            double t27356 = t27355+1.0;
            double t27357 = 1.0/sqrt(t27356);
            double t27358 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27350*t27351*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t27351*t27354*(8.0/3.0)-d1*e1*gamma_aa[index]*t27345*1.0/(t27349*t27349)*(d1*gamma_aa[index]* \
               t27351*t27357*8.0+d1*t27343*t27347*t27358*8.0)-d2*e2*gamma_aa[index]*1.0/(t27353*t27353)*t27345*(d2* \
               gamma_aa[index]*t27351*t27357*8.0+d2*t27343*t27347*t27358*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t27350*t27345+d2*e2*gamma_aa[index]*t27345*t27354)*(4.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t27773 = sqrt(gamma_aa[index]);
            double t27774 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27775 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27776 = t27773*t27774;
            double t27777 = log(t27776+sqrt(t27776*t27776+1.0));
            double t27778 = d1*t27773*t27774*t27777*6.0;
            double t27779 = t27778+1.0;
            double t27780 = 1.0/t27779;
            double t27781 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27782 = d2*t27773*t27774*t27777*6.0;
            double t27783 = t27782+1.0;
            double t27784 = 1.0/t27783;
            double t27785 = gamma_aa[index]*t27775;
            double t27786 = t27785+1.0;
            double t27787 = 1.0/sqrt(t27786);
            double t27788 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27780*t27781*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t27781*t27784*(8.0/3.0)-d1*e1*gamma_aa[index]*t27775*1.0/(t27779*t27779)*(d1*gamma_aa[index]* \
               t27781*t27787*8.0+d1*t27773*t27777*t27788*8.0)-d2*e2*gamma_aa[index]*1.0/(t27783*t27783)*t27775*(d2* \
               gamma_aa[index]*t27781*t27787*8.0+d2*t27773*t27777*t27788*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t27780*t27775+d2*e2*gamma_aa[index]*t27775*t27784)*(4.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27360 = sqrt(gamma_bb[index]);
            double t27361 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27362 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27363 = t27360*t27361;
            double t27364 = log(t27363+sqrt(t27363*t27363+1.0));
            double t27365 = d1*t27360*t27361*t27364*6.0;
            double t27366 = t27365+1.0;
            double t27367 = 1.0/t27366;
            double t27368 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27369 = d2*t27360*t27361*t27364*6.0;
            double t27370 = t27369+1.0;
            double t27371 = 1.0/t27370;
            double t27372 = gamma_bb[index]*t27362;
            double t27373 = t27372+1.0;
            double t27374 = 1.0/sqrt(t27373);
            double t27375 = 1.0/pow(rho_b[index],7.0/3.0);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27367*t27368*(8.0/3.0)+d2*e2* \
               gamma_bb[index]*t27371*t27368*(8.0/3.0)-d1*e1*gamma_bb[index]*t27362*1.0/(t27366*t27366)*(d1*gamma_bb[index]* \
               t27374*t27368*8.0+d1*t27360*t27364*t27375*8.0)-d2*e2*gamma_bb[index]*1.0/(t27370*t27370)*t27362*(d2* \
               gamma_bb[index]*t27374*t27368*8.0+d2*t27360*t27364*t27375*8.0))-pow(rho_b[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_bb[index]*t27362*t27367+d2*e2*gamma_bb[index]*t27362*t27371)*(4.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t27617 = sqrt(gamma_bb[index]);
            double t27618 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27619 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27620 = t27617*t27618;
            double t27621 = log(t27620+sqrt(t27620*t27620+1.0));
            double t27622 = d1*t27621*t27617*t27618*6.0;
            double t27623 = t27622+1.0;
            double t27624 = 1.0/t27623;
            double t27625 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27626 = d2*t27621*t27617*t27618*6.0;
            double t27627 = t27626+1.0;
            double t27628 = 1.0/t27627;
            double t27629 = gamma_bb[index]*t27619;
            double t27630 = t27629+1.0;
            double t27631 = 1.0/sqrt(t27630);
            double t27632 = 1.0/pow(rho_b[index],7.0/3.0);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27624*t27625*(8.0/3.0)+d2*e2* \
               gamma_bb[index]*t27625*t27628*(8.0/3.0)-d1*e1*gamma_bb[index]*1.0/(t27623*t27623)*t27619*(d1*gamma_bb[index]* \
               t27631*t27625*8.0+d1*t27621*t27632*t27617*8.0)-d2*e2*gamma_bb[index]*1.0/(t27627*t27627)*t27619*(d2* \
               gamma_bb[index]*t27631*t27625*8.0+d2*t27621*t27632*t27617*8.0))-pow(rho_b[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_bb[index]*t27624*t27619+d2*e2*gamma_bb[index]*t27619*t27628)*(4.0/3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27377 = sqrt(gamma_aa[index]);
                double t27378 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27379 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27380 = t27377*t27378;
                double t27381 = log(t27380+sqrt(t27380*t27380+1.0));
                double t27382 = d1*t27381*t27377*t27378*6.0;
                double t27383 = t27382+1.0;
                double t27384 = gamma_aa[index]*t27379;
                double t27385 = t27384+1.0;
                double t27386 = 1.0/sqrt(t27385);
                double t27387 = 1.0/sqrt(gamma_aa[index]);
                double t27388 = d2*t27381*t27377*t27378*6.0;
                double t27389 = t27388+1.0;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d1*e1*t27379)/t27383+(d2*e2*t27379)/t27389-d1*e1* \
                   gamma_aa[index]*1.0/(t27383*t27383)*t27379*(d1*t27386*t27379*3.0+d1*t27381*t27378*t27387*3.0)-d2*e2* \
                   gamma_aa[index]*t27379*1.0/(t27389*t27389)*(d2*t27386*t27379*3.0+d2*t27381*t27378*t27387*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t27791 = sqrt(gamma_aa[index]);
                double t27792 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27793 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27794 = t27791*t27792;
                double t27795 = log(t27794+sqrt(t27794*t27794+1.0));
                double t27796 = d1*t27791*t27792*t27795*6.0;
                double t27797 = t27796+1.0;
                double t27798 = gamma_aa[index]*t27793;
                double t27799 = t27798+1.0;
                double t27800 = 1.0/sqrt(t27799);
                double t27801 = 1.0/sqrt(gamma_aa[index]);
                double t27802 = d2*t27791*t27792*t27795*6.0;
                double t27803 = t27802+1.0;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d1*e1*t27793)/t27797+(d2*e2*t27793)/t27803-d1*e1* \
                   gamma_aa[index]*t27793*1.0/(t27797*t27797)*(d1*t27800*t27793*3.0+d1*t27801*t27792*t27795*3.0)-d2*e2* \
                   gamma_aa[index]*1.0/(t27803*t27803)*t27793*(d2*t27800*t27793*3.0+d2*t27801*t27792*t27795*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27392 = sqrt(gamma_bb[index]);
                double t27393 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27394 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27395 = t27392*t27393;
                double t27396 = log(t27395+sqrt(t27395*t27395+1.0));
                double t27397 = d1*t27392*t27393*t27396*6.0;
                double t27398 = t27397+1.0;
                double t27399 = gamma_bb[index]*t27394;
                double t27400 = t27399+1.0;
                double t27401 = 1.0/sqrt(t27400);
                double t27402 = 1.0/sqrt(gamma_bb[index]);
                double t27403 = d2*t27392*t27393*t27396*6.0;
                double t27404 = t27403+1.0;
                v_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*((d1*e1*t27394)/t27398+(d2*e2*t27394)/t27404-d1*e1* \
                   gamma_bb[index]*t27394*1.0/(t27398*t27398)*(d1*t27401*t27394*3.0+d1*t27402*t27393*t27396*3.0)-d2*e2* \
                   gamma_bb[index]*1.0/(t27404*t27404)*t27394*(d2*t27401*t27394*3.0+d2*t27402*t27393*t27396*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27636 = sqrt(gamma_bb[index]);
                double t27637 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27638 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27639 = t27636*t27637;
                double t27640 = log(t27639+sqrt(t27639*t27639+1.0));
                double t27641 = d1*t27640*t27636*t27637*6.0;
                double t27642 = t27641+1.0;
                double t27643 = gamma_bb[index]*t27638;
                double t27644 = t27643+1.0;
                double t27645 = 1.0/sqrt(t27644);
                double t27646 = 1.0/sqrt(gamma_bb[index]);
                double t27647 = d2*t27640*t27636*t27637*6.0;
                double t27648 = t27647+1.0;
                v_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*((d1*e1*t27638)/t27642+(d2*e2*t27638)/t27648-d1*e1* \
                   gamma_bb[index]*1.0/(t27642*t27642)*t27638*(d1*t27645*t27638*3.0+d1*t27640*t27637*t27646*3.0)-d2*e2* \
                   gamma_bb[index]*t27638*1.0/(t27648*t27648)*(d2*t27645*t27638*3.0+d2*t27640*t27637*t27646*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27408 = sqrt(gamma_aa[index]);
            double t27409 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27410 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27411 = t27408*t27409;
            double t27412 = log(t27411+sqrt(t27411*t27411+1.0));
            double t27413 = d1*t27412*t27408*t27409*6.0;
            double t27414 = t27413+1.0;
            double t27415 = 1.0/t27414;
            double t27416 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27417 = d2*t27412*t27408*t27409*6.0;
            double t27418 = t27417+1.0;
            double t27419 = 1.0/t27418;
            double t27420 = gamma_aa[index]*t27410;
            double t27421 = t27420+1.0;
            double t27422 = 1.0/sqrt(t27421);
            double t27423 = 1.0/pow(rho_a[index],7.0/3.0);
            double t27424 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t27425 = 1.0/(t27414*t27414);
            double t27426 = d1*gamma_aa[index]*t27422*t27416*8.0;
            double t27427 = d1*t27412*t27423*t27408*8.0;
            double t27428 = t27426+t27427;
            double t27429 = 1.0/(t27418*t27418);
            double t27430 = d2*gamma_aa[index]*t27422*t27416*8.0;
            double t27431 = d2*t27412*t27423*t27408*8.0;
            double t27432 = t27430+t27431;
            double t27433 = gamma_aa[index]*gamma_aa[index];
            double t27434 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t27435 = 1.0/pow(t27421,3.0/2.0);
            double t27436 = 1.0/pow(rho_a[index],1.0E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27415*t27424*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t27424*t27419*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t27410*t27425*(d1*gamma_aa[index]* \
               t27422*t27424*4.0E1+d1*t27412*t27408*t27436*(5.6E1/3.0)-d1*t27433*t27434*t27435*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t27410*t27429*(d2*gamma_aa[index]*t27422*t27424*4.0E1+d2*t27412*t27408*t27436*(5.6E1/ \
               3.0)-d2*t27433*t27434*t27435*(3.2E1/3.0))+d1*e1*gamma_aa[index]*t27410*1.0/(t27414*t27414*t27414)* \
               (t27428*t27428)*2.0+d2*e2*gamma_aa[index]*t27410*(t27432*t27432)*1.0/(t27418*t27418*t27418)*2.0-d1* \
               e1*gamma_aa[index]*t27416*t27425*t27428*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t27432*t27416*t27429*(1.6E1/ \
               3.0))+pow(rho_a[index],1.0/3.0)*(d1*e1*gamma_aa[index]*t27415*t27416*(8.0/3.0)+d2*e2*gamma_aa[index]* \
               t27416*t27419*(8.0/3.0)-d1*e1*gamma_aa[index]*t27410*t27425*t27428-d2*e2*gamma_aa[index]*t27410*t27432* \
               t27429)*(8.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t27410*t27415+d2*e2* \
               gamma_aa[index]*t27410*t27419)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t27809 = sqrt(gamma_aa[index]);
            double t27810 = 1.0/pow(rho_a[index],4.0/3.0);
            double t27811 = 1.0/pow(rho_a[index],8.0/3.0);
            double t27812 = t27810*t27809;
            double t27813 = log(t27812+sqrt(t27812*t27812+1.0));
            double t27814 = d1*t27810*t27813*t27809*6.0;
            double t27815 = t27814+1.0;
            double t27816 = 1.0/t27815;
            double t27817 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t27818 = d2*t27810*t27813*t27809*6.0;
            double t27819 = t27818+1.0;
            double t27820 = 1.0/t27819;
            double t27821 = gamma_aa[index]*t27811;
            double t27822 = t27821+1.0;
            double t27823 = 1.0/sqrt(t27822);
            double t27824 = 1.0/pow(rho_a[index],7.0/3.0);
            double t27825 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t27826 = 1.0/(t27815*t27815);
            double t27827 = d1*gamma_aa[index]*t27823*t27817*8.0;
            double t27828 = d1*t27813*t27824*t27809*8.0;
            double t27829 = t27827+t27828;
            double t27830 = 1.0/(t27819*t27819);
            double t27831 = d2*gamma_aa[index]*t27823*t27817*8.0;
            double t27832 = d2*t27813*t27824*t27809*8.0;
            double t27833 = t27831+t27832;
            double t27834 = gamma_aa[index]*gamma_aa[index];
            double t27835 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t27836 = 1.0/pow(t27822,3.0/2.0);
            double t27837 = 1.0/pow(rho_a[index],1.0E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t27816*t27825*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t27820*t27825*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t27811*t27826*(d1*gamma_aa[index]* \
               t27823*t27825*4.0E1+d1*t27813*t27809*t27837*(5.6E1/3.0)-d1*t27834*t27835*t27836*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t27811*t27830*(d2*gamma_aa[index]*t27823*t27825*4.0E1+d2*t27813*t27809*t27837*(5.6E1/ \
               3.0)-d2*t27834*t27835*t27836*(3.2E1/3.0))+d1*e1*gamma_aa[index]*t27811*1.0/(t27815*t27815*t27815)* \
               (t27829*t27829)*2.0+d2*e2*gamma_aa[index]*t27811*(t27833*t27833)*1.0/(t27819*t27819*t27819)*2.0-d1* \
               e1*gamma_aa[index]*t27817*t27826*t27829*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t27830*t27833*t27817*(1.6E1/ \
               3.0))+pow(rho_a[index],1.0/3.0)*(d1*e1*gamma_aa[index]*t27816*t27817*(8.0/3.0)+d2*e2*gamma_aa[index]* \
               t27820*t27817*(8.0/3.0)-d1*e1*gamma_aa[index]*t27811*t27826*t27829-d2*e2*gamma_aa[index]*t27811*t27830* \
               t27833)*(8.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t27811*t27816+d2*e2* \
               gamma_aa[index]*t27811*t27820)*(4.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t27439 = sqrt(gamma_bb[index]);
            double t27440 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27441 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27442 = t27440*t27439;
            double t27443 = log(t27442+sqrt(t27442*t27442+1.0));
            double t27444 = d1*t27440*t27443*t27439*6.0;
            double t27445 = t27444+1.0;
            double t27446 = 1.0/t27445;
            double t27447 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27448 = d2*t27440*t27443*t27439*6.0;
            double t27449 = t27448+1.0;
            double t27450 = 1.0/t27449;
            double t27451 = gamma_bb[index]*t27441;
            double t27452 = t27451+1.0;
            double t27453 = 1.0/sqrt(t27452);
            double t27454 = 1.0/pow(rho_b[index],7.0/3.0);
            double t27455 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t27456 = 1.0/(t27445*t27445);
            double t27457 = d1*gamma_bb[index]*t27453*t27447*8.0;
            double t27458 = d1*t27443*t27454*t27439*8.0;
            double t27459 = t27457+t27458;
            double t27460 = 1.0/(t27449*t27449);
            double t27461 = d2*gamma_bb[index]*t27453*t27447*8.0;
            double t27462 = d2*t27443*t27454*t27439*8.0;
            double t27463 = t27461+t27462;
            double t27464 = gamma_bb[index]*gamma_bb[index];
            double t27465 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t27466 = 1.0/pow(t27452,3.0/2.0);
            double t27467 = 1.0/pow(rho_b[index],1.0E1/3.0);
            v_rho_b_rho_b_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27446*t27455*(8.8E1/9.0) \
               +d2*e2*gamma_bb[index]*t27450*t27455*(8.8E1/9.0)-d1*e1*gamma_bb[index]*t27441*t27456*(d1*gamma_bb[index]* \
               t27453*t27455*4.0E1+d1*t27443*t27439*t27467*(5.6E1/3.0)-d1*t27464*t27465*t27466*(3.2E1/3.0))-d2*e2* \
               gamma_bb[index]*t27441*t27460*(d2*gamma_bb[index]*t27453*t27455*4.0E1+d2*t27443*t27439*t27467*(5.6E1/ \
               3.0)-d2*t27464*t27465*t27466*(3.2E1/3.0))+d1*e1*gamma_bb[index]*t27441*1.0/(t27445*t27445*t27445)* \
               (t27459*t27459)*2.0+d2*e2*gamma_bb[index]*t27441*(t27463*t27463)*1.0/(t27449*t27449*t27449)*2.0-d1* \
               e1*gamma_bb[index]*t27447*t27456*t27459*(1.6E1/3.0)-d2*e2*gamma_bb[index]*t27460*t27463*t27447*(1.6E1/ \
               3.0))+pow(rho_b[index],1.0/3.0)*(d1*e1*gamma_bb[index]*t27446*t27447*(8.0/3.0)+d2*e2*gamma_bb[index]* \
               t27450*t27447*(8.0/3.0)-d1*e1*gamma_bb[index]*t27441*t27456*t27459-d2*e2*gamma_bb[index]*t27441*t27460* \
               t27463)*(8.0/3.0)-1.0/pow(rho_b[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_bb[index]*t27441*t27446+d2*e2* \
               gamma_bb[index]*t27441*t27450)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t27654 = sqrt(gamma_bb[index]);
            double t27655 = 1.0/pow(rho_b[index],4.0/3.0);
            double t27656 = 1.0/pow(rho_b[index],8.0/3.0);
            double t27657 = t27654*t27655;
            double t27658 = log(t27657+sqrt(t27657*t27657+1.0));
            double t27659 = d1*t27654*t27655*t27658*6.0;
            double t27660 = t27659+1.0;
            double t27661 = 1.0/t27660;
            double t27662 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t27663 = d2*t27654*t27655*t27658*6.0;
            double t27664 = t27663+1.0;
            double t27665 = 1.0/t27664;
            double t27666 = gamma_bb[index]*t27656;
            double t27667 = t27666+1.0;
            double t27668 = 1.0/sqrt(t27667);
            double t27669 = 1.0/pow(rho_b[index],7.0/3.0);
            double t27670 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t27671 = 1.0/(t27660*t27660);
            double t27672 = d1*gamma_bb[index]*t27662*t27668*8.0;
            double t27673 = d1*t27654*t27658*t27669*8.0;
            double t27674 = t27672+t27673;
            double t27675 = 1.0/(t27664*t27664);
            double t27676 = d2*gamma_bb[index]*t27662*t27668*8.0;
            double t27677 = d2*t27654*t27658*t27669*8.0;
            double t27678 = t27676+t27677;
            double t27679 = gamma_bb[index]*gamma_bb[index];
            double t27680 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t27681 = 1.0/pow(t27667,3.0/2.0);
            double t27682 = 1.0/pow(rho_b[index],1.0E1/3.0);
            v_rho_b_rho_b_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t27661*t27670*(8.8E1/9.0) \
               +d2*e2*gamma_bb[index]*t27670*t27665*(8.8E1/9.0)-d1*e1*gamma_bb[index]*t27671*t27656*(d1*gamma_bb[index]* \
               t27670*t27668*4.0E1+d1*t27654*t27682*t27658*(5.6E1/3.0)-d1*t27680*t27681*t27679*(3.2E1/3.0))-d2*e2* \
               gamma_bb[index]*t27656*t27675*(d2*gamma_bb[index]*t27670*t27668*4.0E1+d2*t27654*t27682*t27658*(5.6E1/ \
               3.0)-d2*t27680*t27681*t27679*(3.2E1/3.0))+d1*e1*gamma_bb[index]*1.0/(t27660*t27660*t27660)*t27656* \
               (t27674*t27674)*2.0+d2*e2*gamma_bb[index]*1.0/(t27664*t27664*t27664)*t27656*(t27678*t27678)*2.0-d1* \
               e1*gamma_bb[index]*t27662*t27671*t27674*(1.6E1/3.0)-d2*e2*gamma_bb[index]*t27662*t27675*t27678*(1.6E1/ \
               3.0))+pow(rho_b[index],1.0/3.0)*(d1*e1*gamma_bb[index]*t27661*t27662*(8.0/3.0)+d2*e2*gamma_bb[index]* \
               t27662*t27665*(8.0/3.0)-d1*e1*gamma_bb[index]*t27671*t27656*t27674-d2*e2*gamma_bb[index]*t27656*t27675* \
               t27678)*(8.0/3.0)-1.0/pow(rho_b[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_bb[index]*t27661*t27656+d2*e2* \
               gamma_bb[index]*t27656*t27665)*(4.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27469 = sqrt(gamma_aa[index]);
                double t27470 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27471 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27472 = t27470*t27469;
                double t27473 = log(t27472+sqrt(t27472*t27472+1.0));
                double t27474 = d1*t27470*t27473*t27469*6.0;
                double t27475 = t27474+1.0;
                double t27476 = gamma_aa[index]*t27471;
                double t27477 = t27476+1.0;
                double t27478 = 1.0/sqrt(t27477);
                double t27479 = 1.0/sqrt(gamma_aa[index]);
                double t27480 = d2*t27470*t27473*t27469*6.0;
                double t27481 = t27480+1.0;
                double t27482 = 1.0/t27475;
                double t27483 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t27484 = 1.0/t27481;
                double t27485 = 1.0/(t27475*t27475);
                double t27486 = 1.0/(t27481*t27481);
                double t27487 = 1.0/pow(rho_a[index],7.0/3.0);
                double t27488 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t27489 = 1.0/pow(t27477,3.0/2.0);
                double t27490 = d1*t27471*t27478*3.0;
                double t27491 = d1*t27470*t27473*t27479*3.0;
                double t27492 = t27490+t27491;
                double t27493 = d2*t27471*t27478*3.0;
                double t27494 = d2*t27470*t27473*t27479*3.0;
                double t27495 = t27493+t27494;
                double t27496 = d1*gamma_aa[index]*t27483*t27478*8.0;
                double t27497 = d1*t27473*t27469*t27487*8.0;
                double t27498 = t27496+t27497;
                double t27499 = d2*gamma_aa[index]*t27483*t27478*8.0;
                double t27500 = d2*t27473*t27469*t27487*8.0;
                double t27501 = t27500+t27499;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27482*t27483*(-8.0/3.0)-d2*e2*t27483* \
                   t27484*(8.0/3.0)+d1*e1*t27471*t27485*t27498+d2*e2*t27501*t27471*t27486+d1*e1*gamma_aa[index]*t27471* \
                   t27485*(d1*t27483*t27478*1.2E1-d1*gamma_aa[index]*t27488*t27489*4.0+d1*t27473*t27487*t27479*4.0)+d2* \
                   e2*gamma_aa[index]*t27471*t27486*(d2*t27483*t27478*1.2E1-d2*gamma_aa[index]*t27488*t27489*4.0+d2*t27473* \
                   t27487*t27479*4.0)+d1*e1*gamma_aa[index]*t27483*t27492*t27485*(8.0/3.0)+d2*e2*gamma_aa[index]*t27483* \
                   t27486*t27495*(8.0/3.0)-d1*e1*gamma_aa[index]*t27471*t27492*1.0/(t27475*t27475*t27475)*t27498*2.0- \
                   d2*e2*gamma_aa[index]*t27501*t27471*1.0/(t27481*t27481*t27481)*t27495*2.0)-pow(rho_a[index],1.0/3.0) \
                   *(d1*e1*t27471*t27482+d2*e2*t27471*t27484-d1*e1*gamma_aa[index]*t27471*t27492*t27485-d2*e2*gamma_aa[index]* \
                   t27471*t27486*t27495)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t27841 = sqrt(gamma_aa[index]);
                double t27842 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27843 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27844 = t27841*t27842;
                double t27845 = log(t27844+sqrt(t27844*t27844+1.0));
                double t27846 = d1*t27841*t27842*t27845*6.0;
                double t27847 = t27846+1.0;
                double t27848 = gamma_aa[index]*t27843;
                double t27849 = t27848+1.0;
                double t27850 = 1.0/sqrt(t27849);
                double t27851 = 1.0/sqrt(gamma_aa[index]);
                double t27852 = d2*t27841*t27842*t27845*6.0;
                double t27853 = t27852+1.0;
                double t27854 = 1.0/t27847;
                double t27855 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t27856 = 1.0/t27853;
                double t27857 = 1.0/(t27847*t27847);
                double t27858 = 1.0/(t27853*t27853);
                double t27859 = 1.0/pow(rho_a[index],7.0/3.0);
                double t27860 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t27861 = 1.0/pow(t27849,3.0/2.0);
                double t27862 = d1*t27850*t27843*3.0;
                double t27863 = d1*t27842*t27851*t27845*3.0;
                double t27864 = t27862+t27863;
                double t27865 = d2*t27850*t27843*3.0;
                double t27866 = d2*t27842*t27851*t27845*3.0;
                double t27867 = t27865+t27866;
                double t27868 = d1*gamma_aa[index]*t27850*t27855*8.0;
                double t27869 = d1*t27841*t27845*t27859*8.0;
                double t27870 = t27868+t27869;
                double t27871 = d2*gamma_aa[index]*t27850*t27855*8.0;
                double t27872 = d2*t27841*t27845*t27859*8.0;
                double t27873 = t27871+t27872;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27854*t27855*(-8.0/3.0)-d2*e2*t27855* \
                   t27856*(8.0/3.0)+d1*e1*t27843*t27870*t27857+d2*e2*t27843*t27873*t27858+d1*e1*gamma_aa[index]*t27843* \
                   t27857*(d1*t27850*t27855*1.2E1-d1*gamma_aa[index]*t27860*t27861*4.0+d1*t27851*t27845*t27859*4.0)+d2* \
                   e2*gamma_aa[index]*t27843*t27858*(d2*t27850*t27855*1.2E1-d2*gamma_aa[index]*t27860*t27861*4.0+d2*t27851* \
                   t27845*t27859*4.0)+d1*e1*gamma_aa[index]*t27855*t27864*t27857*(8.0/3.0)+d2*e2*gamma_aa[index]*t27855* \
                   t27858*t27867*(8.0/3.0)-d1*e1*gamma_aa[index]*t27843*t27870*t27864*1.0/(t27847*t27847*t27847)*2.0- \
                   d2*e2*gamma_aa[index]*t27843*1.0/(t27853*t27853*t27853)*t27873*t27867*2.0)-pow(rho_a[index],1.0/3.0) \
                   *(d1*e1*t27843*t27854+d2*e2*t27843*t27856-d1*e1*gamma_aa[index]*t27843*t27864*t27857-d2*e2*gamma_aa[index]* \
                   t27843*t27858*t27867)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27507 = sqrt(gamma_bb[index]);
                double t27508 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27509 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27510 = t27507*t27508;
                double t27511 = log(t27510+sqrt(t27510*t27510+1.0));
                double t27512 = d1*t27511*t27507*t27508*6.0;
                double t27513 = t27512+1.0;
                double t27514 = gamma_bb[index]*t27509;
                double t27515 = t27514+1.0;
                double t27516 = 1.0/sqrt(t27515);
                double t27517 = 1.0/sqrt(gamma_bb[index]);
                double t27518 = d2*t27511*t27507*t27508*6.0;
                double t27519 = t27518+1.0;
                double t27520 = 1.0/t27513;
                double t27521 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t27522 = 1.0/t27519;
                double t27523 = 1.0/(t27513*t27513);
                double t27524 = 1.0/(t27519*t27519);
                double t27525 = 1.0/pow(rho_b[index],7.0/3.0);
                double t27526 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t27527 = 1.0/pow(t27515,3.0/2.0);
                double t27528 = d1*t27516*t27509*3.0;
                double t27529 = d1*t27511*t27508*t27517*3.0;
                double t27530 = t27528+t27529;
                double t27531 = d2*t27516*t27509*3.0;
                double t27532 = d2*t27511*t27508*t27517*3.0;
                double t27533 = t27531+t27532;
                double t27534 = d1*gamma_bb[index]*t27521*t27516*8.0;
                double t27535 = d1*t27511*t27507*t27525*8.0;
                double t27536 = t27534+t27535;
                double t27537 = d2*gamma_bb[index]*t27521*t27516*8.0;
                double t27538 = d2*t27511*t27507*t27525*8.0;
                double t27539 = t27537+t27538;
                v_rho_b_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27520*t27521*(-8.0/3.0)-d2*e2*t27521* \
                   t27522*(8.0/3.0)+d1*e1*t27523*t27509*t27536+d2*e2*t27524*t27509*t27539+d1*e1*gamma_bb[index]*t27523* \
                   t27509*(d1*t27521*t27516*1.2E1-d1*gamma_bb[index]*t27526*t27527*4.0+d1*t27511*t27525*t27517*4.0)+d2* \
                   e2*gamma_bb[index]*t27524*t27509*(d2*t27521*t27516*1.2E1-d2*gamma_bb[index]*t27526*t27527*4.0+d2*t27511* \
                   t27525*t27517*4.0)+d1*e1*gamma_bb[index]*t27521*t27530*t27523*(8.0/3.0)+d2*e2*gamma_bb[index]*t27521* \
                   t27524*t27533*(8.0/3.0)-d1*e1*gamma_bb[index]*t27530*1.0/(t27513*t27513*t27513)*t27509*t27536*2.0- \
                   d2*e2*gamma_bb[index]*t27533*t27509*1.0/(t27519*t27519*t27519)*t27539*2.0)-pow(rho_b[index],1.0/3.0) \
                   *(d1*e1*t27520*t27509+d2*e2*t27522*t27509-d1*e1*gamma_bb[index]*t27530*t27523*t27509-d2*e2*gamma_bb[index]* \
                   t27524*t27533*t27509)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27689 = sqrt(gamma_bb[index]);
                double t27690 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27691 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27692 = t27690*t27689;
                double t27693 = log(t27692+sqrt(t27692*t27692+1.0));
                double t27694 = d1*t27690*t27693*t27689*6.0;
                double t27695 = t27694+1.0;
                double t27696 = gamma_bb[index]*t27691;
                double t27697 = t27696+1.0;
                double t27698 = 1.0/sqrt(t27697);
                double t27699 = 1.0/sqrt(gamma_bb[index]);
                double t27700 = d2*t27690*t27693*t27689*6.0;
                double t27701 = t27700+1.0;
                double t27702 = 1.0/t27695;
                double t27703 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t27704 = 1.0/t27701;
                double t27705 = 1.0/(t27695*t27695);
                double t27706 = 1.0/(t27701*t27701);
                double t27707 = 1.0/pow(rho_b[index],7.0/3.0);
                double t27708 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t27709 = 1.0/pow(t27697,3.0/2.0);
                double t27710 = d1*t27691*t27698*3.0;
                double t27711 = d1*t27690*t27693*t27699*3.0;
                double t27712 = t27710+t27711;
                double t27713 = d2*t27691*t27698*3.0;
                double t27714 = d2*t27690*t27693*t27699*3.0;
                double t27715 = t27713+t27714;
                double t27716 = d1*gamma_bb[index]*t27703*t27698*8.0;
                double t27717 = d1*t27707*t27693*t27689*8.0;
                double t27718 = t27716+t27717;
                double t27719 = d2*gamma_bb[index]*t27703*t27698*8.0;
                double t27720 = d2*t27707*t27693*t27689*8.0;
                double t27721 = t27720+t27719;
                v_rho_b_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27702*t27703*(-8.0/3.0)-d2*e2*t27703* \
                   t27704*(8.0/3.0)+d1*e1*t27705*t27691*t27718+d2*e2*t27721*t27706*t27691+d1*e1*gamma_bb[index]*t27705* \
                   t27691*(d1*t27703*t27698*1.2E1-d1*gamma_bb[index]*t27708*t27709*4.0+d1*t27707*t27693*t27699*4.0)+d2* \
                   e2*gamma_bb[index]*t27706*t27691*(d2*t27703*t27698*1.2E1-d2*gamma_bb[index]*t27708*t27709*4.0+d2*t27707* \
                   t27693*t27699*4.0)+d1*e1*gamma_bb[index]*t27703*t27712*t27705*(8.0/3.0)+d2*e2*gamma_bb[index]*t27703* \
                   t27706*t27715*(8.0/3.0)-d1*e1*gamma_bb[index]*t27712*t27691*t27718*1.0/(t27695*t27695*t27695)*2.0- \
                   d2*e2*gamma_bb[index]*1.0/(t27701*t27701*t27701)*t27721*t27715*t27691*2.0)-pow(rho_b[index],1.0/3.0) \
                   *(d1*e1*t27702*t27691+d2*e2*t27704*t27691-d1*e1*gamma_bb[index]*t27712*t27705*t27691-d2*e2*gamma_bb[index]* \
                   t27706*t27715*t27691)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27541 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27542 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27543 = sqrt(gamma_aa[index]);
                double t27544 = t27542*t27543;
                double t27545 = log(t27544+sqrt(t27544*t27544+1.0));
                double t27546 = gamma_aa[index]*t27541;
                double t27547 = t27546+1.0;
                double t27548 = 1.0/sqrt(t27547);
                double t27549 = 1.0/sqrt(gamma_aa[index]);
                double t27550 = d1*t27541*t27548*3.0;
                double t27551 = d1*t27542*t27545*t27549*3.0;
                double t27552 = t27550+t27551;
                double t27553 = d1*t27542*t27543*t27545*6.0;
                double t27554 = t27553+1.0;
                double t27555 = d2*t27541*t27548*3.0;
                double t27556 = d2*t27542*t27545*t27549*3.0;
                double t27557 = t27555+t27556;
                double t27558 = d2*t27542*t27543*t27545*6.0;
                double t27559 = t27558+1.0;
                double t27560 = 1.0/(t27554*t27554);
                double t27561 = 1.0/(t27559*t27559);
                double t27562 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t27563 = 1.0/pow(t27547,3.0/2.0);
                double t27564 = 1.0/gamma_aa[index];
                double t27565 = 1.0/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27541*t27560*t27552*-2.0-d2*e2*t27541* \
                   t27561*t27557*2.0+d1*e1*gamma_aa[index]*t27541*(t27552*t27552)*1.0/(t27554*t27554*t27554)*2.0+d2*e2* \
                   gamma_aa[index]*t27541*(t27557*t27557)*1.0/(t27559*t27559*t27559)*2.0+d1*e1*gamma_aa[index]*t27541* \
                   t27560*(d1*t27562*t27563*(3.0/2.0)+d1*t27542*t27545*t27565*(3.0/2.0)-d1*t27541*t27564*t27548*(3.0/ \
                   2.0))+d2*e2*gamma_aa[index]*t27541*t27561*(d2*t27562*t27563*(3.0/2.0)+d2*t27542*t27545*t27565*(3.0/ \
                   2.0)-d2*t27541*t27564*t27548*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                double t27880 = 1.0/pow(rho_a[index],8.0/3.0);
                double t27881 = 1.0/pow(rho_a[index],4.0/3.0);
                double t27882 = sqrt(gamma_aa[index]);
                double t27883 = t27881*t27882;
                double t27884 = log(t27883+sqrt(t27883*t27883+1.0));
                double t27885 = gamma_aa[index]*t27880;
                double t27886 = t27885+1.0;
                double t27887 = 1.0/sqrt(t27886);
                double t27888 = 1.0/sqrt(gamma_aa[index]);
                double t27889 = d1*t27880*t27887*3.0;
                double t27890 = d1*t27881*t27884*t27888*3.0;
                double t27891 = t27890+t27889;
                double t27892 = d1*t27881*t27882*t27884*6.0;
                double t27893 = t27892+1.0;
                double t27894 = d2*t27880*t27887*3.0;
                double t27895 = d2*t27881*t27884*t27888*3.0;
                double t27896 = t27894+t27895;
                double t27897 = d2*t27881*t27882*t27884*6.0;
                double t27898 = t27897+1.0;
                double t27899 = 1.0/(t27893*t27893);
                double t27900 = 1.0/(t27898*t27898);
                double t27901 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t27902 = 1.0/pow(t27886,3.0/2.0);
                double t27903 = 1.0/gamma_aa[index];
                double t27904 = 1.0/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t27880*t27891*t27899*-2.0-d2*e2*t27900* \
                   t27880*t27896*2.0+d1*e1*gamma_aa[index]*t27880*(t27891*t27891)*1.0/(t27893*t27893*t27893)*2.0+d2*e2* \
                   gamma_aa[index]*t27880*(t27896*t27896)*1.0/(t27898*t27898*t27898)*2.0+d1*e1*gamma_aa[index]*t27880* \
                   t27899*(d1*t27901*t27902*(3.0/2.0)+d1*t27904*t27881*t27884*(3.0/2.0)-d1*t27903*t27880*t27887*(3.0/ \
                   2.0))+d2*e2*gamma_aa[index]*t27900*t27880*(d2*t27901*t27902*(3.0/2.0)+d2*t27904*t27881*t27884*(3.0/ \
                   2.0)-d2*t27903*t27880*t27887*(3.0/2.0)));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t27571 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27572 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27573 = sqrt(gamma_bb[index]);
                double t27574 = t27572*t27573;
                double t27575 = log(t27574+sqrt(t27574*t27574+1.0));
                double t27576 = gamma_bb[index]*t27571;
                double t27577 = t27576+1.0;
                double t27578 = 1.0/sqrt(t27577);
                double t27579 = 1.0/sqrt(gamma_bb[index]);
                double t27580 = d1*t27571*t27578*3.0;
                double t27581 = d1*t27572*t27575*t27579*3.0;
                double t27582 = t27580+t27581;
                double t27583 = d1*t27572*t27573*t27575*6.0;
                double t27584 = t27583+1.0;
                double t27585 = d2*t27571*t27578*3.0;
                double t27586 = d2*t27572*t27575*t27579*3.0;
                double t27587 = t27585+t27586;
                double t27588 = d2*t27572*t27573*t27575*6.0;
                double t27589 = t27588+1.0;
                double t27590 = 1.0/(t27584*t27584);
                double t27591 = 1.0/(t27589*t27589);
                double t27592 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t27593 = 1.0/pow(t27577,3.0/2.0);
                double t27594 = 1.0/gamma_bb[index];
                double t27595 = 1.0/pow(gamma_bb[index],3.0/2.0);
                v_gamma_bb_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27571*t27590*t27582*-2.0-d2*e2*t27571* \
                   t27591*t27587*2.0+d1*e1*gamma_bb[index]*t27571*(t27582*t27582)*1.0/(t27584*t27584*t27584)*2.0+d2*e2* \
                   gamma_bb[index]*t27571*(t27587*t27587)*1.0/(t27589*t27589*t27589)*2.0+d1*e1*gamma_bb[index]*t27571* \
                   t27590*(d1*t27592*t27593*(3.0/2.0)+d1*t27572*t27575*t27595*(3.0/2.0)-d1*t27571*t27594*t27578*(3.0/ \
                   2.0))+d2*e2*gamma_bb[index]*t27571*t27591*(d2*t27592*t27593*(3.0/2.0)+d2*t27572*t27575*t27595*(3.0/ \
                   2.0)-d2*t27571*t27594*t27578*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27728 = 1.0/pow(rho_b[index],8.0/3.0);
                double t27729 = 1.0/pow(rho_b[index],4.0/3.0);
                double t27730 = sqrt(gamma_bb[index]);
                double t27731 = t27730*t27729;
                double t27732 = log(t27731+sqrt(t27731*t27731+1.0));
                double t27733 = gamma_bb[index]*t27728;
                double t27734 = t27733+1.0;
                double t27735 = 1.0/sqrt(t27734);
                double t27736 = 1.0/sqrt(gamma_bb[index]);
                double t27737 = d1*t27735*t27728*3.0;
                double t27738 = d1*t27732*t27736*t27729*3.0;
                double t27739 = t27737+t27738;
                double t27740 = d1*t27730*t27732*t27729*6.0;
                double t27741 = t27740+1.0;
                double t27742 = d2*t27735*t27728*3.0;
                double t27743 = d2*t27732*t27736*t27729*3.0;
                double t27744 = t27742+t27743;
                double t27745 = d2*t27730*t27732*t27729*6.0;
                double t27746 = t27745+1.0;
                double t27747 = 1.0/(t27741*t27741);
                double t27748 = 1.0/(t27746*t27746);
                double t27749 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t27750 = 1.0/pow(t27734,3.0/2.0);
                double t27751 = 1.0/gamma_bb[index];
                double t27752 = 1.0/pow(gamma_bb[index],3.0/2.0);
                v_gamma_bb_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t27728*t27747*t27739*-2.0-d2*e2*t27744* \
                   t27728*t27748*2.0+d1*e1*gamma_bb[index]*1.0/(t27741*t27741*t27741)*t27728*(t27739*t27739)*2.0+d2*e2* \
                   gamma_bb[index]*(t27744*t27744)*t27728*1.0/(t27746*t27746*t27746)*2.0+d1*e1*gamma_bb[index]*t27728* \
                   t27747*(d1*t27750*t27749*(3.0/2.0)+d1*t27732*t27752*t27729*(3.0/2.0)-d1*t27751*t27735*t27728*(3.0/ \
                   2.0))+d2*e2*gamma_bb[index]*t27728*t27748*(d2*t27750*t27749*(3.0/2.0)+d2*t27732*t27752*t27729*(3.0/ \
                   2.0)-d2*t27751*t27735*t27728*(3.0/2.0)));
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

