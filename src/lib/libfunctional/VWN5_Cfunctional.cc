#include <libmints/vector.h>
#include "VWN5_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

VWN5_CFunctional::VWN5_CFunctional()
{
    name_ = "VWN5_C";
    description_ = "    VWN5 Correlation Functional\n";
    citation_ = "    S.H. Vosko, L. Wilk, and M. Nusair, Can. J. Phys., 58, 1200-1211, 1980\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = false;
    meta_ = false;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["d2fz0"] =   1.7099209341613653E+00;
    parameters_["EcP_1"] =   3.1090699999999999E-02;
    parameters_["EcP_2"] =  -1.0498000000000000E-01;
    parameters_["EcP_3"] =   3.7274400000000001E+00;
    parameters_["EcP_4"] =   1.2935200000000000E+01;
    parameters_["EcF_1"] =   1.5545349999999999E-02;
    parameters_["EcF_2"] =  -3.2500000000000001E-01;
    parameters_["EcF_3"] =   7.0604199999999997E+00;
    parameters_["EcF_4"] =   1.8057800000000000E+01;
    parameters_["Ac_1"] =  -1.6886863940389629E-02;
    parameters_["Ac_2"] =  -4.7584000000000003E-03;
    parameters_["Ac_3"] =   1.1310700000000000E+00;
    parameters_["Ac_4"] =   1.3004500000000000E+01;
    parameters_["two_13"] =   1.2599210498948732E+00;
}
VWN5_CFunctional::~VWN5_CFunctional()
{
}
void VWN5_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double c = parameters_["c"];
    double d2fz0 = parameters_["d2fz0"];
    double EcP_1 = parameters_["EcP_1"];
    double EcP_2 = parameters_["EcP_2"];
    double EcP_3 = parameters_["EcP_3"];
    double EcP_4 = parameters_["EcP_4"];
    double EcF_1 = parameters_["EcF_1"];
    double EcF_2 = parameters_["EcF_2"];
    double EcF_3 = parameters_["EcF_3"];
    double EcF_4 = parameters_["EcF_4"];
    double Ac_1 = parameters_["Ac_1"];
    double Ac_2 = parameters_["Ac_2"];
    double Ac_3 = parameters_["Ac_3"];
    double Ac_4 = parameters_["Ac_4"];
    double two_13 = parameters_["two_13"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t3443 = rho_a+rho_b;
                double t3444 = 1.0/pow(t3443,1.0/3.0);
                double t3445 = c*t3444;
                double t3446 = sqrt(t3445);
                double t3447 = EcP_4*4.0;
                double t3448 = EcP_3*EcP_3;
                double t3449 = t3447-t3448;
                double t3450 = EcP_2-t3446;
                double t3451 = EcP_3*t3446;
                double t3452 = EcP_4+t3451+t3445;
                double t3453 = 1.0/t3452;
                double t3454 = sqrt(t3449);
                double t3455 = t3446*2.0;
                double t3456 = EcP_3+t3455;
                double t3457 = 1.0/t3456;
                double t3458 = t3454*t3457;
                double t3459 = atan(t3458);
                double t3460 = 1.0/sqrt(t3449);
                double t3461 = EcF_4*4.0;
                double t3462 = EcF_3*EcF_3;
                double t3463 = t3461-t3462;
                double t3464 = EcF_2-t3446;
                double t3465 = EcF_3*t3446;
                double t3466 = EcF_4+t3445+t3465;
                double t3467 = 1.0/t3466;
                double t3468 = sqrt(t3463);
                double t3469 = EcF_3+t3455;
                double t3470 = 1.0/t3469;
                double t3471 = t3470*t3468;
                double t3472 = atan(t3471);
                double t3473 = 1.0/sqrt(t3463);
                double t3474 = c*t3444*t3453;
                double t3475 = log(t3474);
                double t3476 = EcP_3*t3460*t3459*2.0;
                double t3477 = t3450*t3450;
                double t3478 = t3453*t3477;
                double t3479 = log(t3478);
                double t3480 = EcP_2*4.0;
                double t3481 = EcP_3*2.0;
                double t3482 = t3480+t3481;
                double t3483 = t3460*t3482*t3459;
                double t3484 = t3483+t3479;
                double t3485 = EcP_2*EcP_2;
                double t3486 = EcP_2*EcP_3;
                double t3487 = EcP_4+t3485+t3486;
                double t3488 = 1.0/t3487;
                double t3489 = t3475+t3476-EcP_2*EcP_3*t3484*t3488;
                double t3490 = EcP_1*t3489;
                v[Q] += scale * t3443*(t3490-((pow(2.0,1.0/3.0)*2.0-2.0)*(t3490-EcF_1*(log(c*t3444*t3467)+EcF_3*t3472*t3473*2.0-(EcF_2*EcF_3*(log((t3464*t3464)*t3467)+t3472*t3473*(EcF_2*4.0+EcF_3*2.0)))/(EcF_4+EcF_2*EcF_2+EcF_2*EcF_3))))/(two_13*2.0-2.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t3492 = rho_a+rho_b;
                double t3493 = 1.0/pow(t3492,1.0/3.0);
                double t3494 = c*t3493;
                double t3495 = sqrt(t3494);
                double t3496 = EcP_4*4.0;
                double t3497 = EcP_3*EcP_3;
                double t3498 = t3496-t3497;
                double t3499 = EcP_2-t3495;
                double t3500 = EcP_3*t3495;
                double t3501 = EcP_4+t3494+t3500;
                double t3502 = 1.0/t3501;
                double t3503 = sqrt(t3498);
                double t3504 = t3495*2.0;
                double t3505 = EcP_3+t3504;
                double t3506 = 1.0/t3505;
                double t3507 = t3503*t3506;
                double t3508 = atan(t3507);
                double t3509 = 1.0/sqrt(t3498);
                double t3510 = 1.0/pow(t3492,4.0/3.0);
                double t3511 = c*t3510*(1.0/3.0);
                double t3512 = 1.0/sqrt(t3494);
                double t3513 = EcP_3*c*t3510*t3512*(1.0/6.0);
                double t3514 = t3511+t3513;
                double t3515 = t3499*t3499;
                double t3516 = 1.0/(t3501*t3501);
                double t3517 = EcP_2*4.0;
                double t3518 = EcP_3*2.0;
                double t3519 = t3517+t3518;
                double t3520 = 1.0/(t3505*t3505);
                double t3521 = EcP_2*EcP_2;
                double t3522 = EcP_2*EcP_3;
                double t3523 = EcP_4+t3521+t3522;
                double t3524 = 1.0/t3523;
                double t3525 = t3498*t3520;
                double t3526 = t3525+1.0;
                double t3527 = 1.0/t3526;
                double t3528 = 1.0/c;
                double t3529 = EcF_3*t3495;
                double t3530 = EcF_4+t3494+t3529;
                double t3531 = pow(t3492,1.0/3.0);
                double t3532 = EcF_3*c*t3510*t3512*(1.0/6.0);
                double t3533 = t3511+t3532;
                double t3534 = EcF_2-t3495;
                double t3535 = 1.0/(t3530*t3530);
                double t3536 = 1.0/t3530;
                double t3537 = EcF_3+t3504;
                double t3538 = 1.0/(t3537*t3537);
                double t3539 = EcF_4*4.0;
                double t3540 = EcF_3*EcF_3;
                double t3541 = t3540-t3539;
                double t3542 = t3541*t3538;
                double t3543 = t3542-1.0;
                double t3544 = 1.0/t3543;
                double t3545 = c*t3510*t3502*(1.0/3.0);
                double t3546 = t3545-c*t3493*t3514*t3516;
                double t3547 = t3501*t3531*t3528*t3546;
                double t3548 = t3514*t3515*t3516;
                double t3549 = c*t3499*t3510*t3502*t3512*(1.0/3.0);
                double t3550 = t3548+t3549;
                double t3551 = 1.0/(t3499*t3499);
                double t3552 = t3501*t3550*t3551;
                double t3553 = c*t3510*t3520*t3512*t3527*t3519*(1.0/3.0);
                double t3554 = t3552+t3553;
                double t3555 = EcP_2*EcP_3*t3524*t3554;
                double t3556 = t3555+t3547-EcP_3*c*t3510*t3520*t3512*t3527*(2.0/3.0);
                double t3557 = EcP_1*t3556;
                double t3558 = pow(2.0,1.0/3.0);
                double t3559 = t3558*2.0;
                double t3560 = t3559-2.0;
                double t3561 = two_13*2.0;
                double t3562 = t3561-2.0;
                double t3563 = 1.0/t3562;
                double t3564 = -t3540+t3539;
                double t3565 = t3534*t3534;
                double t3566 = sqrt(t3564);
                double t3567 = 1.0/t3537;
                double t3568 = t3566*t3567;
                double t3569 = atan(t3568);
                double t3570 = 1.0/sqrt(t3564);
                double t3571 = EcF_2*4.0;
                double t3572 = EcF_3*2.0;
                double t3573 = t3571+t3572;
                double t3574 = EcF_2*EcF_2;
                double t3575 = EcF_2*EcF_3;
                double t3576 = EcF_4+t3574+t3575;
                double t3577 = 1.0/t3576;
                double t3578 = c*t3493*t3502;
                double t3579 = log(t3578);
                double t3580 = EcP_3*t3508*t3509*2.0;
                double t3581 = t3502*t3515;
                double t3582 = log(t3581);
                double t3583 = t3508*t3509*t3519;
                double t3584 = t3582+t3583;
                double t3585 = t3580+t3579-EcP_2*EcP_3*t3524*t3584;
                double t3586 = EcP_1*t3585;
                v_rho_a[Q] += scale * t3586-t3492*(t3557-t3560*t3563*(t3557-EcF_1*(EcF_2*EcF_3*t3577*(t3530*1.0/(t3534*t3534)*(t3533*t3535*t3565+c*t3510*t3512*t3534*t3536*(1.0/3.0))-c*t3510*t3512*t3544*t3573*t3538*(1.0/3.0))+t3530*t3531*t3528*(c*t3510*t3536*(1.0/3.0)-c*t3493*t3533*t3535)+EcF_3*c*t3510*t3512*t3544*t3538*(2.0/3.0))))-t3560*t3563*(t3586-EcF_1*(log(c*t3493*t3536)+EcF_3*t3570*t3569*2.0-EcF_2*EcF_3*t3577*(log(t3536*t3565)+t3570*t3573*t3569)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t3588 = rho_a+rho_b;
                double t3589 = 1.0/pow(t3588,1.0/3.0);
                double t3590 = c*t3589;
                double t3591 = sqrt(t3590);
                double t3592 = EcP_4*4.0;
                double t3593 = EcP_3*EcP_3;
                double t3594 = t3592-t3593;
                double t3595 = EcP_2-t3591;
                double t3596 = EcP_3*t3591;
                double t3597 = EcP_4+t3590+t3596;
                double t3598 = 1.0/t3597;
                double t3599 = sqrt(t3594);
                double t3600 = t3591*2.0;
                double t3601 = EcP_3+t3600;
                double t3602 = 1.0/t3601;
                double t3603 = t3599*t3602;
                double t3604 = atan(t3603);
                double t3605 = 1.0/sqrt(t3594);
                double t3606 = 1.0/pow(t3588,4.0/3.0);
                double t3607 = c*t3606*(1.0/3.0);
                double t3608 = 1.0/sqrt(t3590);
                double t3609 = EcP_3*c*t3606*t3608*(1.0/6.0);
                double t3610 = t3607+t3609;
                double t3611 = t3595*t3595;
                double t3612 = 1.0/(t3597*t3597);
                double t3613 = EcP_2*4.0;
                double t3614 = EcP_3*2.0;
                double t3615 = t3613+t3614;
                double t3616 = 1.0/(t3601*t3601);
                double t3617 = EcP_2*EcP_2;
                double t3618 = EcP_2*EcP_3;
                double t3619 = EcP_4+t3617+t3618;
                double t3620 = 1.0/t3619;
                double t3621 = t3594*t3616;
                double t3622 = t3621+1.0;
                double t3623 = 1.0/t3622;
                double t3624 = 1.0/c;
                double t3625 = EcF_3*t3591;
                double t3626 = EcF_4+t3590+t3625;
                double t3627 = pow(t3588,1.0/3.0);
                double t3628 = EcF_3*c*t3606*t3608*(1.0/6.0);
                double t3629 = t3607+t3628;
                double t3630 = EcF_2-t3591;
                double t3631 = 1.0/(t3626*t3626);
                double t3632 = 1.0/t3626;
                double t3633 = EcF_3+t3600;
                double t3634 = 1.0/(t3633*t3633);
                double t3635 = EcF_4*4.0;
                double t3636 = EcF_3*EcF_3;
                double t3637 = t3635-t3636;
                double t3638 = t3634*t3637;
                double t3639 = t3638+1.0;
                double t3640 = 1.0/t3639;
                double t3641 = c*t3598*t3606*(1.0/3.0);
                double t3642 = t3641-c*t3589*t3610*t3612;
                double t3643 = t3597*t3624*t3642*t3627;
                double t3644 = t3610*t3611*t3612;
                double t3645 = c*t3595*t3598*t3606*t3608*(1.0/3.0);
                double t3646 = t3644+t3645;
                double t3647 = 1.0/(t3595*t3595);
                double t3648 = t3597*t3646*t3647;
                double t3649 = c*t3623*t3606*t3615*t3616*t3608*(1.0/3.0);
                double t3650 = t3648+t3649;
                double t3651 = EcP_2*EcP_3*t3620*t3650;
                double t3652 = t3651+t3643-EcP_3*c*t3623*t3606*t3616*t3608*(2.0/3.0);
                double t3653 = EcP_1*t3652;
                double t3654 = pow(2.0,1.0/3.0);
                double t3655 = t3654*2.0;
                double t3656 = t3655-2.0;
                double t3657 = two_13*2.0;
                double t3658 = t3657-2.0;
                double t3659 = 1.0/t3658;
                double t3660 = t3630*t3630;
                double t3661 = sqrt(t3637);
                double t3662 = 1.0/t3633;
                double t3663 = t3661*t3662;
                double t3664 = atan(t3663);
                double t3665 = 1.0/sqrt(t3637);
                double t3666 = EcF_2*4.0;
                double t3667 = EcF_3*2.0;
                double t3668 = t3666+t3667;
                double t3669 = EcF_2*EcF_2;
                double t3670 = EcF_2*EcF_3;
                double t3671 = EcF_4+t3670+t3669;
                double t3672 = 1.0/t3671;
                double t3673 = c*t3589*t3598;
                double t3674 = log(t3673);
                double t3675 = EcP_3*t3604*t3605*2.0;
                double t3676 = t3598*t3611;
                double t3677 = log(t3676);
                double t3678 = t3604*t3605*t3615;
                double t3679 = t3677+t3678;
                double t3680 = t3674+t3675-EcP_2*EcP_3*t3620*t3679;
                double t3681 = EcP_1*t3680;
                v_rho_b[Q] += scale * t3681-t3588*(t3653-t3656*t3659*(t3653-EcF_1*(EcF_2*EcF_3*t3672*(1.0/(t3630*t3630)*t3626*(t3631*t3660*t3629+c*t3630*t3632*t3606*t3608*(1.0/3.0))+c*t3640*t3606*t3634*t3608*t3668*(1.0/3.0))+t3624*t3626*t3627*(c*t3632*t3606*(1.0/3.0)-c*t3589*t3631*t3629)-EcF_3*c*t3640*t3606*t3634*t3608*(2.0/3.0))))-t3656*t3659*(t3681-EcF_1*(log(c*t3589*t3632)+EcF_3*t3664*t3665*2.0-EcF_2*EcF_3*t3672*(log(t3632*t3660)+t3664*t3665*t3668)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t3688 = rho_a+rho_b;
                double t3689 = 1.0/pow(t3688,1.0/3.0);
                double t3690 = c*t3689;
                double t3691 = 1.0/pow(t3688,4.0/3.0);
                double t3692 = sqrt(t3690);
                double t3693 = EcP_3*t3692;
                double t3694 = EcP_4+t3690+t3693;
                double t3695 = c*t3691*(1.0/3.0);
                double t3696 = 1.0/sqrt(t3690);
                double t3697 = EcP_3*c*t3691*t3696*(1.0/6.0);
                double t3698 = t3695+t3697;
                double t3699 = EcP_2-t3692;
                double t3700 = 1.0/(t3694*t3694);
                double t3701 = 1.0/t3694;
                double t3702 = t3692*2.0;
                double t3703 = EcP_3+t3702;
                double t3704 = 1.0/(t3703*t3703);
                double t3705 = EcP_4*4.0;
                double t3706 = EcP_3*EcP_3;
                double t3707 = t3705-t3706;
                double t3708 = t3704*t3707;
                double t3709 = t3708+1.0;
                double t3710 = 1.0/t3709;
                double t3711 = 1.0/c;
                double t3712 = c*t3691*t3701*(1.0/3.0);
                double t3715 = c*t3689*t3698*t3700;
                double t3713 = t3712-t3715;
                double t3714 = pow(t3688,1.0/3.0);
                double t3716 = 1.0/pow(t3688,7.0/3.0);
                double t3717 = EcP_2*EcP_2;
                double t3718 = EcP_2*EcP_3;
                double t3719 = EcP_4+t3717+t3718;
                double t3720 = 1.0/t3719;
                double t3721 = t3699*t3699;
                double t3722 = t3698*t3700*t3721;
                double t3723 = c*t3691*t3696*t3699*t3701*(1.0/3.0);
                double t3724 = t3722+t3723;
                double t3725 = 1.0/(t3699*t3699);
                double t3726 = c*t3716*(4.0/9.0);
                double t3727 = EcP_3*c*t3696*t3716*(2.0/9.0);
                double t3728 = c*c;
                double t3729 = 1.0/pow(t3688,8.0/3.0);
                double t3730 = 1.0/pow(t3690,3.0/2.0);
                double t3775 = EcP_3*t3730*t3728*t3729*(1.0/3.6E1);
                double t3731 = t3726+t3727-t3775;
                double t3732 = t3698*t3698;
                double t3733 = 1.0/(t3694*t3694*t3694);
                double t3734 = EcP_2*4.0;
                double t3735 = EcP_3*2.0;
                double t3736 = t3734+t3735;
                double t3737 = 1.0/(t3703*t3703*t3703);
                double t3738 = 1.0/(t3703*t3703*t3703*t3703*t3703);
                double t3739 = 1.0/(t3709*t3709);
                double t3740 = EcF_3*t3692;
                double t3741 = EcF_4+t3690+t3740;
                double t3742 = EcF_3*c*t3691*t3696*(1.0/6.0);
                double t3743 = t3695+t3742;
                double t3744 = 1.0/t3741;
                double t3745 = c*t3691*t3744*(1.0/3.0);
                double t3746 = 1.0/(t3741*t3741);
                double t3801 = c*t3689*t3743*t3746;
                double t3747 = t3745-t3801;
                double t3748 = 1.0/pow(t3688,2.0/3.0);
                double t3749 = EcF_2-t3692;
                double t3750 = 1.0/(t3749*t3749);
                double t3751 = t3749*t3749;
                double t3752 = EcF_3*c*t3696*t3716*(2.0/9.0);
                double t3753 = t3752+t3726-EcF_3*t3730*t3728*t3729*(1.0/3.6E1);
                double t3754 = t3743*t3743;
                double t3755 = 1.0/(t3741*t3741*t3741);
                double t3756 = EcF_3+t3702;
                double t3757 = EcF_2*4.0;
                double t3758 = EcF_3*2.0;
                double t3759 = t3757+t3758;
                double t3760 = 1.0/(t3756*t3756);
                double t3761 = EcF_4*4.0;
                double t3762 = EcF_3*EcF_3;
                double t3763 = t3761-t3762;
                double t3764 = t3760*t3763;
                double t3765 = t3764+1.0;
                double t3766 = 1.0/t3765;
                double t3767 = t3751*t3743*t3746;
                double t3768 = c*t3691*t3696*t3744*t3749*(1.0/3.0);
                double t3769 = t3767+t3768;
                double t3770 = 1.0/(t3756*t3756*t3756);
                double t3771 = 1.0/(t3756*t3756*t3756*t3756*t3756);
                double t3772 = 1.0/(t3765*t3765);
                double t3773 = t3698*t3711*t3713*t3714;
                double t3774 = c*t3701*t3716*(4.0/9.0);
                double t3776 = c*t3689*t3732*t3733*2.0;
                double t3777 = t3774+t3776-c*t3691*t3698*t3700*(2.0/3.0)-c*t3689*t3700*t3731;
                double t3778 = t3694*t3711*t3714*t3777;
                double t3779 = t3698*t3724*t3725;
                double t3780 = c*t3701*t3716*(1.0/1.8E1);
                double t3781 = t3721*t3732*t3733*2.0;
                double t3782 = t3699*t3701*t3730*t3728*t3729*(1.0/1.8E1);
                double t3783 = c*t3691*t3696*t3698*t3699*t3700*(2.0/3.0);
                double t3784 = t3780+t3781+t3782+t3783-t3700*t3721*t3731-c*t3696*t3699*t3701*t3716*(4.0/9.0);
                double t3785 = c*t3696*t3710*t3704*t3716*t3736*(4.0/9.0);
                double t3786 = 1.0/(t3699*t3699*t3699);
                double t3787 = c*t3691*t3694*t3696*t3724*t3786*(1.0/3.0);
                double t3788 = c*t3707*t3716*t3736*t3738*t3739*(2.0/9.0);
                double t3789 = t3785+t3787+t3779+t3788-t3694*t3725*t3784-c*t3710*t3716*t3736*t3737*(2.0/9.0)-t3710*t3730*t3704*t3736*t3728*t3729*(1.0/1.8E1);
                double t3790 = EcP_2*EcP_3*t3720*t3789;
                double t3791 = EcP_3*c*t3710*t3716*t3737*(4.0/9.0);
                double t3792 = EcP_3*t3710*t3730*t3704*t3728*t3729*(1.0/9.0);
                double t3793 = t3790+t3773+t3791+t3792+t3778-t3694*t3711*t3713*t3748*(1.0/3.0)-EcP_3*c*t3696*t3710*t3704*t3716*(8.0/9.0)-EcP_3*c*t3707*t3716*t3738*t3739*(4.0/9.0);
                double t3794 = EcP_1*t3793;
                double t3795 = pow(2.0,1.0/3.0);
                double t3796 = t3795*2.0;
                double t3797 = t3796-2.0;
                double t3798 = two_13*2.0;
                double t3799 = t3798-2.0;
                double t3800 = 1.0/t3799;
                double t3802 = EcF_2*EcF_2;
                double t3803 = EcF_2*EcF_3;
                double t3804 = EcF_4+t3802+t3803;
                double t3805 = 1.0/t3804;
                double t3806 = t3694*t3711*t3713*t3714;
                double t3807 = t3694*t3724*t3725;
                double t3808 = c*t3691*t3696*t3710*t3704*t3736*(1.0/3.0);
                double t3809 = t3807+t3808;
                double t3810 = EcP_2*EcP_3*t3720*t3809;
                double t3811 = t3810+t3806-EcP_3*c*t3691*t3696*t3710*t3704*(2.0/3.0);
                v_rho_a_rho_a[Q] += scale * EcP_1*t3811*-2.0+t3688*(t3794-t3797*t3800*(t3794-EcF_1*(t3711*t3714*t3741*(c*t3716*t3744*(4.0/9.0)-c*t3691*t3743*t3746*(2.0/3.0)-c*t3689*t3753*t3746+c*t3689*t3754*t3755*2.0)+t3711*t3714*t3743*t3747-t3711*t3741*t3747*t3748*(1.0/3.0)+EcF_2*EcF_3*t3805*(-t3741*t3750*(c*t3716*t3744*(1.0/1.8E1)-t3751*t3753*t3746+t3751*t3754*t3755*2.0-c*t3696*t3716*t3744*t3749*(4.0/9.0)+t3730*t3744*t3728*t3729*t3749*(1.0/1.8E1)+c*t3691*t3696*t3743*t3746*t3749*(2.0/3.0))+t3750*t3743*t3769-c*t3716*t3770*t3766*t3759*(2.0/9.0)+c*t3696*t3760*t3716*t3766*t3759*(4.0/9.0)+c*t3716*t3771*t3763*t3772*t3759*(2.0/9.0)-t3730*t3760*t3728*t3729*t3766*t3759*(1.0/1.8E1)+c*t3691*t3696*t3741*1.0/(t3749*t3749*t3749)*t3769*(1.0/3.0))+EcF_3*c*t3716*t3770*t3766*(4.0/9.0)-EcF_3*c*t3696*t3760*t3716*t3766*(8.0/9.0)-EcF_3*c*t3716*t3771*t3763*t3772*(4.0/9.0)+EcF_3*t3730*t3760*t3728*t3729*t3766*(1.0/9.0))))+t3797*t3800*(EcP_1*t3811-EcF_1*(t3711*t3714*t3741*t3747+EcF_2*EcF_3*t3805*(t3741*t3750*t3769+c*t3691*t3696*t3760*t3766*t3759*(1.0/3.0))-EcF_3*c*t3691*t3696*t3760*t3766*(2.0/3.0)))*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t3813 = rho_a+rho_b;
                double t3814 = 1.0/pow(t3813,1.0/3.0);
                double t3815 = c*t3814;
                double t3816 = 1.0/pow(t3813,4.0/3.0);
                double t3817 = sqrt(t3815);
                double t3818 = EcP_3*t3817;
                double t3819 = EcP_4+t3815+t3818;
                double t3820 = c*t3816*(1.0/3.0);
                double t3821 = 1.0/sqrt(t3815);
                double t3822 = EcP_3*c*t3821*t3816*(1.0/6.0);
                double t3823 = t3820+t3822;
                double t3824 = EcP_2-t3817;
                double t3825 = 1.0/(t3819*t3819);
                double t3826 = 1.0/t3819;
                double t3827 = t3817*2.0;
                double t3828 = EcP_3+t3827;
                double t3829 = 1.0/(t3828*t3828);
                double t3830 = EcP_4*4.0;
                double t3831 = EcP_3*EcP_3;
                double t3832 = t3830-t3831;
                double t3833 = t3832*t3829;
                double t3834 = t3833+1.0;
                double t3835 = 1.0/t3834;
                double t3836 = 1.0/c;
                double t3837 = c*t3816*t3826*(1.0/3.0);
                double t3840 = c*t3814*t3823*t3825;
                double t3838 = -t3840+t3837;
                double t3839 = pow(t3813,1.0/3.0);
                double t3841 = 1.0/pow(t3813,7.0/3.0);
                double t3842 = EcP_2*EcP_2;
                double t3843 = EcP_2*EcP_3;
                double t3844 = EcP_4+t3842+t3843;
                double t3845 = 1.0/t3844;
                double t3846 = t3824*t3824;
                double t3847 = t3823*t3825*t3846;
                double t3848 = c*t3821*t3824*t3816*t3826*(1.0/3.0);
                double t3849 = t3847+t3848;
                double t3850 = 1.0/(t3824*t3824);
                double t3851 = c*t3841*(4.0/9.0);
                double t3852 = EcP_3*c*t3821*t3841*(2.0/9.0);
                double t3853 = c*c;
                double t3854 = 1.0/pow(t3813,8.0/3.0);
                double t3855 = 1.0/pow(t3815,3.0/2.0);
                double t3900 = EcP_3*t3853*t3854*t3855*(1.0/3.6E1);
                double t3856 = t3851+t3852-t3900;
                double t3857 = t3823*t3823;
                double t3858 = 1.0/(t3819*t3819*t3819);
                double t3859 = EcP_2*4.0;
                double t3860 = EcP_3*2.0;
                double t3861 = t3860+t3859;
                double t3862 = 1.0/(t3828*t3828*t3828);
                double t3863 = 1.0/(t3828*t3828*t3828*t3828*t3828);
                double t3864 = 1.0/(t3834*t3834);
                double t3865 = EcF_3*t3817;
                double t3866 = EcF_4+t3815+t3865;
                double t3867 = EcF_3*c*t3821*t3816*(1.0/6.0);
                double t3868 = t3820+t3867;
                double t3869 = 1.0/t3866;
                double t3870 = c*t3816*t3869*(1.0/3.0);
                double t3871 = 1.0/(t3866*t3866);
                double t3926 = c*t3814*t3871*t3868;
                double t3872 = t3870-t3926;
                double t3873 = 1.0/pow(t3813,2.0/3.0);
                double t3874 = EcF_2-t3817;
                double t3875 = 1.0/(t3874*t3874);
                double t3876 = t3874*t3874;
                double t3877 = EcF_3*c*t3821*t3841*(2.0/9.0);
                double t3878 = t3851+t3877-EcF_3*t3853*t3854*t3855*(1.0/3.6E1);
                double t3879 = t3868*t3868;
                double t3880 = 1.0/(t3866*t3866*t3866);
                double t3881 = EcF_3+t3827;
                double t3882 = EcF_2*4.0;
                double t3883 = EcF_3*2.0;
                double t3884 = t3882+t3883;
                double t3885 = 1.0/(t3881*t3881);
                double t3886 = EcF_4*4.0;
                double t3887 = EcF_3*EcF_3;
                double t3888 = t3886-t3887;
                double t3889 = t3885*t3888;
                double t3890 = t3889+1.0;
                double t3891 = 1.0/t3890;
                double t3892 = t3871*t3876*t3868;
                double t3893 = c*t3821*t3816*t3874*t3869*(1.0/3.0);
                double t3894 = t3892+t3893;
                double t3895 = 1.0/(t3881*t3881*t3881);
                double t3896 = 1.0/(t3881*t3881*t3881*t3881*t3881);
                double t3897 = 1.0/(t3890*t3890);
                double t3898 = t3823*t3836*t3838*t3839;
                double t3899 = c*t3841*t3826*(4.0/9.0);
                double t3901 = c*t3814*t3857*t3858*2.0;
                double t3902 = t3899+t3901-c*t3823*t3816*t3825*(2.0/3.0)-c*t3814*t3825*t3856;
                double t3903 = t3836*t3819*t3839*t3902;
                double t3904 = t3823*t3850*t3849;
                double t3905 = c*t3841*t3826*(1.0/1.8E1);
                double t3906 = t3846*t3857*t3858*2.0;
                double t3907 = t3824*t3826*t3853*t3854*t3855*(1.0/1.8E1);
                double t3908 = c*t3821*t3823*t3824*t3816*t3825*(2.0/3.0);
                double t3909 = t3905+t3906+t3907+t3908-t3825*t3846*t3856-c*t3821*t3841*t3824*t3826*(4.0/9.0);
                double t3910 = c*t3821*t3841*t3861*t3835*t3829*(4.0/9.0);
                double t3911 = 1.0/(t3824*t3824*t3824);
                double t3912 = c*t3821*t3816*t3819*t3849*t3911*(1.0/3.0);
                double t3913 = c*t3832*t3841*t3861*t3863*t3864*(2.0/9.0);
                double t3914 = t3910+t3912+t3904+t3913-t3850*t3819*t3909-c*t3841*t3861*t3835*t3862*(2.0/9.0)-t3861*t3835*t3853*t3854*t3855*t3829*(1.0/1.8E1);
                double t3915 = EcP_2*EcP_3*t3845*t3914;
                double t3916 = EcP_3*c*t3841*t3835*t3862*(4.0/9.0);
                double t3917 = EcP_3*t3835*t3853*t3854*t3855*t3829*(1.0/9.0);
                double t3918 = t3898+t3903+t3915+t3916+t3917-t3836*t3819*t3873*t3838*(1.0/3.0)-EcP_3*c*t3821*t3841*t3835*t3829*(8.0/9.0)-EcP_3*c*t3832*t3841*t3863*t3864*(4.0/9.0);
                double t3919 = EcP_1*t3918;
                double t3920 = pow(2.0,1.0/3.0);
                double t3921 = t3920*2.0;
                double t3922 = t3921-2.0;
                double t3923 = two_13*2.0;
                double t3924 = t3923-2.0;
                double t3925 = 1.0/t3924;
                double t3927 = EcF_2*EcF_2;
                double t3928 = EcF_2*EcF_3;
                double t3929 = EcF_4+t3927+t3928;
                double t3930 = 1.0/t3929;
                double t3931 = t3836*t3819*t3838*t3839;
                double t3932 = t3850*t3819*t3849;
                double t3933 = c*t3821*t3816*t3861*t3835*t3829*(1.0/3.0);
                double t3934 = t3932+t3933;
                double t3935 = EcP_2*EcP_3*t3845*t3934;
                double t3936 = t3931+t3935-EcP_3*c*t3821*t3816*t3835*t3829*(2.0/3.0);
                v_rho_a_rho_b[Q] += scale * EcP_1*t3936*-2.0+t3813*(t3919-t3922*t3925*(t3919-EcF_1*(t3836*t3839*t3866*(c*t3841*t3869*(4.0/9.0)-c*t3814*t3871*t3878+c*t3814*t3880*t3879*2.0-c*t3816*t3871*t3868*(2.0/3.0))-t3836*t3872*t3873*t3866*(1.0/3.0)+t3836*t3872*t3839*t3868+EcF_2*EcF_3*t3930*(-t3866*t3875*(c*t3841*t3869*(1.0/1.8E1)-t3871*t3876*t3878+t3880*t3876*t3879*2.0-c*t3821*t3841*t3874*t3869*(4.0/9.0)+t3853*t3854*t3855*t3874*t3869*(1.0/1.8E1)+c*t3821*t3816*t3871*t3874*t3868*(2.0/3.0))+t3875*t3894*t3868-c*t3841*t3891*t3884*t3895*(2.0/9.0)+c*t3821*t3841*t3891*t3884*t3885*(4.0/9.0)+c*t3841*t3884*t3896*t3888*t3897*(2.0/9.0)-t3853*t3854*t3855*t3891*t3884*t3885*(1.0/1.8E1)+c*t3821*t3816*1.0/(t3874*t3874*t3874)*t3866*t3894*(1.0/3.0))+EcF_3*c*t3841*t3891*t3895*(4.0/9.0)-EcF_3*c*t3821*t3841*t3891*t3885*(8.0/9.0)-EcF_3*c*t3841*t3896*t3888*t3897*(4.0/9.0)+EcF_3*t3853*t3854*t3855*t3891*t3885*(1.0/9.0))))+t3922*t3925*(EcP_1*t3936-EcF_1*(t3836*t3872*t3839*t3866+EcF_2*EcF_3*t3930*(t3866*t3875*t3894+c*t3821*t3816*t3891*t3884*t3885*(1.0/3.0))-EcF_3*c*t3821*t3816*t3891*t3885*(2.0/3.0)))*2.0;
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t3938 = rho_a+rho_b;
                double t3939 = 1.0/pow(t3938,1.0/3.0);
                double t3940 = c*t3939;
                double t3941 = 1.0/pow(t3938,4.0/3.0);
                double t3942 = sqrt(t3940);
                double t3943 = EcP_3*t3942;
                double t3944 = EcP_4+t3940+t3943;
                double t3945 = c*t3941*(1.0/3.0);
                double t3946 = 1.0/sqrt(t3940);
                double t3947 = EcP_3*c*t3941*t3946*(1.0/6.0);
                double t3948 = t3945+t3947;
                double t3949 = EcP_2-t3942;
                double t3950 = 1.0/(t3944*t3944);
                double t3951 = 1.0/t3944;
                double t3952 = t3942*2.0;
                double t3953 = EcP_3+t3952;
                double t3954 = 1.0/(t3953*t3953);
                double t3955 = EcP_4*4.0;
                double t3956 = EcP_3*EcP_3;
                double t3957 = t3955-t3956;
                double t3958 = t3954*t3957;
                double t3959 = t3958+1.0;
                double t3960 = 1.0/t3959;
                double t3961 = 1.0/c;
                double t3962 = c*t3941*t3951*(1.0/3.0);
                double t3965 = c*t3950*t3939*t3948;
                double t3963 = t3962-t3965;
                double t3964 = pow(t3938,1.0/3.0);
                double t3966 = 1.0/pow(t3938,7.0/3.0);
                double t3967 = EcP_2*EcP_2;
                double t3968 = EcP_2*EcP_3;
                double t3969 = EcP_4+t3967+t3968;
                double t3970 = 1.0/t3969;
                double t3971 = t3949*t3949;
                double t3972 = t3950*t3971*t3948;
                double t3973 = c*t3941*t3951*t3946*t3949*(1.0/3.0);
                double t3974 = t3972+t3973;
                double t3975 = 1.0/(t3949*t3949);
                double t3976 = c*t3966*(4.0/9.0);
                double t3977 = EcP_3*c*t3946*t3966*(2.0/9.0);
                double t3978 = c*c;
                double t3979 = 1.0/pow(t3938,8.0/3.0);
                double t3980 = 1.0/pow(t3940,3.0/2.0);
                double t4025 = EcP_3*t3980*t3978*t3979*(1.0/3.6E1);
                double t3981 = t3976+t3977-t4025;
                double t3982 = t3948*t3948;
                double t3983 = 1.0/(t3944*t3944*t3944);
                double t3984 = EcP_2*4.0;
                double t3985 = EcP_3*2.0;
                double t3986 = t3984+t3985;
                double t3987 = 1.0/(t3953*t3953*t3953);
                double t3988 = 1.0/(t3953*t3953*t3953*t3953*t3953);
                double t3989 = 1.0/(t3959*t3959);
                double t3990 = EcF_3*t3942;
                double t3991 = EcF_4+t3940+t3990;
                double t3992 = EcF_3*c*t3941*t3946*(1.0/6.0);
                double t3993 = t3945+t3992;
                double t3994 = 1.0/t3991;
                double t3995 = c*t3941*t3994*(1.0/3.0);
                double t3996 = 1.0/(t3991*t3991);
                double t4051 = c*t3939*t3993*t3996;
                double t3997 = t3995-t4051;
                double t3998 = 1.0/pow(t3938,2.0/3.0);
                double t3999 = EcF_2-t3942;
                double t4000 = 1.0/(t3999*t3999);
                double t4001 = t3999*t3999;
                double t4002 = EcF_3*c*t3946*t3966*(2.0/9.0);
                double t4003 = t3976+t4002-EcF_3*t3980*t3978*t3979*(1.0/3.6E1);
                double t4004 = t3993*t3993;
                double t4005 = 1.0/(t3991*t3991*t3991);
                double t4006 = EcF_3+t3952;
                double t4007 = EcF_2*4.0;
                double t4008 = EcF_3*2.0;
                double t4009 = t4007+t4008;
                double t4010 = 1.0/(t4006*t4006);
                double t4011 = EcF_4*4.0;
                double t4012 = EcF_3*EcF_3;
                double t4013 = t4011-t4012;
                double t4014 = t4010*t4013;
                double t4015 = t4014+1.0;
                double t4016 = 1.0/t4015;
                double t4017 = t3993*t3996*t4001;
                double t4018 = c*t3941*t3946*t3994*t3999*(1.0/3.0);
                double t4019 = t4017+t4018;
                double t4020 = 1.0/(t4006*t4006*t4006);
                double t4021 = 1.0/(t4006*t4006*t4006*t4006*t4006);
                double t4022 = 1.0/(t4015*t4015);
                double t4023 = t3961*t3963*t3964*t3948;
                double t4024 = c*t3951*t3966*(4.0/9.0);
                double t4026 = c*t3982*t3983*t3939*2.0;
                double t4027 = t4024+t4026-c*t3941*t3950*t3948*(2.0/3.0)-c*t3950*t3981*t3939;
                double t4028 = t3961*t3944*t3964*t4027;
                double t4029 = t3974*t3948*t3975;
                double t4030 = c*t3951*t3966*(1.0/1.8E1);
                double t4031 = t3971*t3982*t3983*2.0;
                double t4032 = t3951*t3980*t3949*t3978*t3979*(1.0/1.8E1);
                double t4033 = c*t3941*t3950*t3946*t3948*t3949*(2.0/3.0);
                double t4034 = t4030+t4031+t4032+t4033-t3950*t3971*t3981-c*t3951*t3946*t3966*t3949*(4.0/9.0);
                double t4035 = c*t3960*t3954*t3946*t3966*t3986*(4.0/9.0);
                double t4036 = 1.0/(t3949*t3949*t3949);
                double t4037 = c*t3941*t3944*t3946*t3974*t4036*(1.0/3.0);
                double t4038 = c*t3957*t3966*t3986*t3988*t3989*(2.0/9.0);
                double t4039 = t4035+t4037+t4029+t4038-t3944*t3975*t4034-c*t3960*t3966*t3986*t3987*(2.0/9.0)-t3960*t3980*t3954*t3986*t3978*t3979*(1.0/1.8E1);
                double t4040 = EcP_2*EcP_3*t3970*t4039;
                double t4041 = EcP_3*c*t3960*t3966*t3987*(4.0/9.0);
                double t4042 = EcP_3*t3960*t3980*t3954*t3978*t3979*(1.0/9.0);
                double t4043 = t4040+t4023+t4041+t4042+t4028-t3961*t3944*t3963*t3998*(1.0/3.0)-EcP_3*c*t3960*t3954*t3946*t3966*(8.0/9.0)-EcP_3*c*t3957*t3966*t3988*t3989*(4.0/9.0);
                double t4044 = EcP_1*t4043;
                double t4045 = pow(2.0,1.0/3.0);
                double t4046 = t4045*2.0;
                double t4047 = t4046-2.0;
                double t4048 = two_13*2.0;
                double t4049 = t4048-2.0;
                double t4050 = 1.0/t4049;
                double t4052 = EcF_2*EcF_2;
                double t4053 = EcF_2*EcF_3;
                double t4054 = EcF_4+t4052+t4053;
                double t4055 = 1.0/t4054;
                double t4056 = t3961*t3944*t3963*t3964;
                double t4057 = t3944*t3974*t3975;
                double t4058 = c*t3941*t3960*t3954*t3946*t3986*(1.0/3.0);
                double t4059 = t4057+t4058;
                double t4060 = EcP_2*EcP_3*t3970*t4059;
                double t4061 = t4060+t4056-EcP_3*c*t3941*t3960*t3954*t3946*(2.0/3.0);
                v_rho_b_rho_b[Q] += scale * EcP_1*t4061*-2.0+t3938*(t4044-t4050*t4047*(t4044-EcF_1*(t3961*t3964*t3991*(c*t3966*t3994*(4.0/9.0)-c*t3941*t3993*t3996*(2.0/3.0)-c*t3939*t3996*t4003+c*t3939*t4004*t4005*2.0)+t3961*t3964*t3993*t3997-t3961*t3991*t3997*t3998*(1.0/3.0)+EcF_2*EcF_3*t4055*(-t3991*t4000*(c*t3966*t3994*(1.0/1.8E1)-t3996*t4001*t4003+t4001*t4004*t4005*2.0-c*t3946*t3966*t3994*t3999*(4.0/9.0)+t3980*t3994*t3978*t3979*t3999*(1.0/1.8E1)+c*t3941*t3946*t3993*t3996*t3999*(2.0/3.0))+t3993*t4000*t4019-c*t3966*t4020*t4016*t4009*(2.0/9.0)+c*t3946*t3966*t4010*t4016*t4009*(4.0/9.0)+c*t3966*t4021*t4013*t4022*t4009*(2.0/9.0)-t3980*t3978*t3979*t4010*t4016*t4009*(1.0/1.8E1)+c*t3941*t3946*t3991*1.0/(t3999*t3999*t3999)*t4019*(1.0/3.0))+EcF_3*c*t3966*t4020*t4016*(4.0/9.0)-EcF_3*c*t3946*t3966*t4010*t4016*(8.0/9.0)-EcF_3*c*t3966*t4021*t4013*t4022*(4.0/9.0)+EcF_3*t3980*t3978*t3979*t4010*t4016*(1.0/9.0))))+t4050*t4047*(EcP_1*t4061-EcF_1*(t3961*t3964*t3991*t3997+EcF_2*EcF_3*t4055*(t3991*t4000*t4019+c*t3941*t3946*t4010*t4016*t4009*(1.0/3.0))-EcF_3*c*t3941*t3946*t4010*t4016*(2.0/3.0)))*2.0;
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t4088 = rho_a+rho_b;
                double t4089 = 1.0/pow(t4088,1.0/3.0);
                double t4090 = c*t4089;
                double t4091 = sqrt(t4090);
                double t4092 = EcP_4*4.0;
                double t4093 = EcP_3*EcP_3;
                double t4094 = t4092-t4093;
                double t4095 = EcP_2-t4091;
                double t4096 = EcP_3*t4091;
                double t4097 = EcP_4+t4090+t4096;
                double t4098 = 1.0/t4097;
                double t4099 = sqrt(t4094);
                double t4100 = t4091*2.0;
                double t4101 = EcP_3+t4100;
                double t4102 = 1.0/t4101;
                double t4103 = t4099*t4102;
                double t4104 = atan(t4103);
                double t4105 = 1.0/sqrt(t4094);
                double t4106 = EcF_4*4.0;
                double t4107 = EcF_3*EcF_3;
                double t4108 = t4106-t4107;
                double t4109 = EcF_2-t4091;
                double t4110 = EcF_3*t4091;
                double t4111 = EcF_4+t4090+t4110;
                double t4112 = 1.0/t4111;
                double t4113 = sqrt(t4108);
                double t4114 = EcF_3+t4100;
                double t4115 = 1.0/t4114;
                double t4116 = t4113*t4115;
                double t4117 = atan(t4116);
                double t4118 = 1.0/sqrt(t4108);
                double t4119 = c*t4089*t4098;
                double t4120 = log(t4119);
                double t4121 = EcP_3*t4104*t4105*2.0;
                double t4122 = t4095*t4095;
                double t4123 = t4098*t4122;
                double t4124 = log(t4123);
                double t4125 = EcP_2*4.0;
                double t4126 = EcP_3*2.0;
                double t4127 = t4125+t4126;
                double t4128 = t4104*t4105*t4127;
                double t4129 = t4124+t4128;
                double t4130 = EcP_2*EcP_2;
                double t4131 = EcP_2*EcP_3;
                double t4132 = EcP_4+t4130+t4131;
                double t4133 = 1.0/t4132;
                double t4134 = t4120+t4121-EcP_2*EcP_3*t4133*t4129;
                double t4135 = EcP_1*t4134;
                v[Q] += scale * t4088*(t4135-((pow(2.0,1.0/3.0)*2.0-2.0)*(t4135-EcF_1*(log(c*t4089*t4112)+EcF_3*t4117*t4118*2.0-(EcF_2*EcF_3*(log(t4112*(t4109*t4109))+t4117*t4118*(EcF_2*4.0+EcF_3*2.0)))/(EcF_4+EcF_2*EcF_2+EcF_2*EcF_3))))/(two_13*2.0-2.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t4137 = rho_a+rho_b;
                double t4138 = 1.0/pow(t4137,1.0/3.0);
                double t4139 = c*t4138;
                double t4140 = sqrt(t4139);
                double t4141 = EcP_4*4.0;
                double t4142 = EcP_3*EcP_3;
                double t4143 = t4141-t4142;
                double t4144 = EcP_2-t4140;
                double t4145 = EcP_3*t4140;
                double t4146 = EcP_4+t4145+t4139;
                double t4147 = 1.0/t4146;
                double t4148 = sqrt(t4143);
                double t4149 = t4140*2.0;
                double t4150 = EcP_3+t4149;
                double t4151 = 1.0/t4150;
                double t4152 = t4151*t4148;
                double t4153 = atan(t4152);
                double t4154 = 1.0/sqrt(t4143);
                double t4155 = 1.0/pow(t4137,4.0/3.0);
                double t4156 = c*t4155*(1.0/3.0);
                double t4157 = 1.0/sqrt(t4139);
                double t4158 = EcP_3*c*t4155*t4157*(1.0/6.0);
                double t4159 = t4156+t4158;
                double t4160 = t4144*t4144;
                double t4161 = 1.0/(t4146*t4146);
                double t4162 = EcP_2*4.0;
                double t4163 = EcP_3*2.0;
                double t4164 = t4162+t4163;
                double t4165 = 1.0/(t4150*t4150);
                double t4166 = EcP_2*EcP_2;
                double t4167 = EcP_2*EcP_3;
                double t4168 = EcP_4+t4166+t4167;
                double t4169 = 1.0/t4168;
                double t4170 = t4143*t4165;
                double t4171 = t4170+1.0;
                double t4172 = 1.0/t4171;
                double t4173 = 1.0/c;
                double t4174 = EcF_3*t4140;
                double t4175 = EcF_4+t4174+t4139;
                double t4176 = pow(t4137,1.0/3.0);
                double t4177 = EcF_3*c*t4155*t4157*(1.0/6.0);
                double t4178 = t4156+t4177;
                double t4179 = EcF_2-t4140;
                double t4180 = 1.0/(t4175*t4175);
                double t4181 = 1.0/t4175;
                double t4182 = EcF_3+t4149;
                double t4183 = 1.0/(t4182*t4182);
                double t4184 = EcF_4*4.0;
                double t4185 = EcF_3*EcF_3;
                double t4186 = t4184-t4185;
                double t4187 = t4183*t4186;
                double t4188 = t4187+1.0;
                double t4189 = 1.0/t4188;
                double t4190 = c*t4155*t4147*(1.0/3.0);
                double t4191 = t4190-c*t4161*t4138*t4159;
                double t4192 = t4146*t4173*t4191*t4176;
                double t4193 = t4160*t4161*t4159;
                double t4194 = c*t4144*t4155*t4147*t4157*(1.0/3.0);
                double t4195 = t4193+t4194;
                double t4196 = 1.0/(t4144*t4144);
                double t4197 = t4146*t4195*t4196;
                double t4198 = c*t4172*t4155*t4164*t4165*t4157*(1.0/3.0);
                double t4199 = t4197+t4198;
                double t4200 = EcP_2*EcP_3*t4169*t4199;
                double t4201 = t4192+t4200-EcP_3*c*t4172*t4155*t4165*t4157*(2.0/3.0);
                double t4202 = EcP_1*t4201;
                double t4203 = pow(2.0,1.0/3.0);
                double t4204 = t4203*2.0;
                double t4205 = t4204-2.0;
                double t4206 = two_13*2.0;
                double t4207 = t4206-2.0;
                double t4208 = 1.0/t4207;
                double t4209 = t4179*t4179;
                double t4210 = sqrt(t4186);
                double t4211 = 1.0/t4182;
                double t4212 = t4210*t4211;
                double t4213 = atan(t4212);
                double t4214 = 1.0/sqrt(t4186);
                double t4215 = EcF_2*4.0;
                double t4216 = EcF_3*2.0;
                double t4217 = t4215+t4216;
                double t4218 = EcF_2*EcF_2;
                double t4219 = EcF_2*EcF_3;
                double t4220 = EcF_4+t4218+t4219;
                double t4221 = 1.0/t4220;
                double t4222 = c*t4138*t4147;
                double t4223 = log(t4222);
                double t4224 = EcP_3*t4153*t4154*2.0;
                double t4225 = t4160*t4147;
                double t4226 = log(t4225);
                double t4227 = t4153*t4154*t4164;
                double t4228 = t4226+t4227;
                double t4229 = t4223+t4224-EcP_2*EcP_3*t4169*t4228;
                double t4230 = EcP_1*t4229;
                v_rho_a[Q] += scale * t4230-t4137*(t4202-t4205*t4208*(t4202-EcF_1*(EcF_2*EcF_3*t4221*(t4175*1.0/(t4179*t4179)*(t4180*t4178*t4209+c*t4181*t4155*t4157*t4179*(1.0/3.0))+c*t4155*t4183*t4157*t4189*t4217*(1.0/3.0))+t4173*t4175*t4176*(c*t4181*t4155*(1.0/3.0)-c*t4180*t4138*t4178)-EcF_3*c*t4155*t4183*t4157*t4189*(2.0/3.0))))-t4205*t4208*(t4230-EcF_1*(log(c*t4181*t4138)+EcF_3*t4213*t4214*2.0-EcF_2*EcF_3*t4221*(log(t4181*t4209)+t4213*t4214*t4217)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t4232 = rho_a+rho_b;
                double t4233 = 1.0/pow(t4232,1.0/3.0);
                double t4234 = c*t4233;
                double t4235 = sqrt(t4234);
                double t4236 = EcP_4*4.0;
                double t4237 = EcP_3*EcP_3;
                double t4238 = t4236-t4237;
                double t4239 = EcP_2-t4235;
                double t4240 = EcP_3*t4235;
                double t4241 = EcP_4+t4240+t4234;
                double t4242 = 1.0/t4241;
                double t4243 = sqrt(t4238);
                double t4244 = t4235*2.0;
                double t4245 = EcP_3+t4244;
                double t4246 = 1.0/t4245;
                double t4247 = t4243*t4246;
                double t4248 = atan(t4247);
                double t4249 = 1.0/sqrt(t4238);
                double t4250 = 1.0/pow(t4232,4.0/3.0);
                double t4251 = c*t4250*(1.0/3.0);
                double t4252 = 1.0/sqrt(t4234);
                double t4253 = EcP_3*c*t4250*t4252*(1.0/6.0);
                double t4254 = t4251+t4253;
                double t4255 = t4239*t4239;
                double t4256 = 1.0/(t4241*t4241);
                double t4257 = EcP_2*4.0;
                double t4258 = EcP_3*2.0;
                double t4259 = t4257+t4258;
                double t4260 = 1.0/(t4245*t4245);
                double t4261 = EcP_2*EcP_2;
                double t4262 = EcP_2*EcP_3;
                double t4263 = EcP_4+t4261+t4262;
                double t4264 = 1.0/t4263;
                double t4265 = t4260*t4238;
                double t4266 = t4265+1.0;
                double t4267 = 1.0/t4266;
                double t4268 = 1.0/c;
                double t4269 = EcF_3*t4235;
                double t4270 = EcF_4+t4234+t4269;
                double t4271 = pow(t4232,1.0/3.0);
                double t4272 = EcF_3*c*t4250*t4252*(1.0/6.0);
                double t4273 = t4251+t4272;
                double t4274 = EcF_2-t4235;
                double t4275 = 1.0/(t4270*t4270);
                double t4276 = 1.0/t4270;
                double t4277 = EcF_3+t4244;
                double t4278 = 1.0/(t4277*t4277);
                double t4279 = EcF_4*4.0;
                double t4280 = EcF_3*EcF_3;
                double t4281 = t4280-t4279;
                double t4282 = t4281*t4278;
                double t4283 = t4282-1.0;
                double t4284 = 1.0/t4283;
                double t4285 = c*t4250*t4242*(1.0/3.0);
                double t4286 = t4285-c*t4233*t4254*t4256;
                double t4287 = t4241*t4271*t4268*t4286;
                double t4288 = t4254*t4255*t4256;
                double t4289 = c*t4250*t4242*t4252*t4239*(1.0/3.0);
                double t4290 = t4288+t4289;
                double t4291 = 1.0/(t4239*t4239);
                double t4292 = t4241*t4290*t4291;
                double t4293 = c*t4250*t4260*t4252*t4267*t4259*(1.0/3.0);
                double t4294 = t4292+t4293;
                double t4295 = EcP_2*EcP_3*t4264*t4294;
                double t4296 = t4295+t4287-EcP_3*c*t4250*t4260*t4252*t4267*(2.0/3.0);
                double t4297 = EcP_1*t4296;
                double t4298 = pow(2.0,1.0/3.0);
                double t4299 = t4298*2.0;
                double t4300 = t4299-2.0;
                double t4301 = two_13*2.0;
                double t4302 = t4301-2.0;
                double t4303 = 1.0/t4302;
                double t4304 = -t4280+t4279;
                double t4305 = t4274*t4274;
                double t4306 = sqrt(t4304);
                double t4307 = 1.0/t4277;
                double t4308 = t4306*t4307;
                double t4309 = atan(t4308);
                double t4310 = 1.0/sqrt(t4304);
                double t4311 = EcF_2*4.0;
                double t4312 = EcF_3*2.0;
                double t4313 = t4311+t4312;
                double t4314 = EcF_2*EcF_2;
                double t4315 = EcF_2*EcF_3;
                double t4316 = EcF_4+t4314+t4315;
                double t4317 = 1.0/t4316;
                double t4318 = c*t4233*t4242;
                double t4319 = log(t4318);
                double t4320 = EcP_3*t4248*t4249*2.0;
                double t4321 = t4242*t4255;
                double t4322 = log(t4321);
                double t4323 = t4248*t4249*t4259;
                double t4324 = t4322+t4323;
                double t4325 = t4320+t4319-EcP_2*EcP_3*t4264*t4324;
                double t4326 = EcP_1*t4325;
                v_rho_b[Q] += scale * t4326-t4232*(t4297-t4300*t4303*(t4297-EcF_1*(EcF_2*EcF_3*t4317*(t4270*1.0/(t4274*t4274)*(t4273*t4275*t4305+c*t4250*t4252*t4274*t4276*(1.0/3.0))-c*t4250*t4252*t4284*t4278*t4313*(1.0/3.0))+t4270*t4271*t4268*(c*t4250*t4276*(1.0/3.0)-c*t4233*t4273*t4275)+EcF_3*c*t4250*t4252*t4284*t4278*(2.0/3.0))))-t4300*t4303*(t4326-EcF_1*(log(c*t4233*t4276)+EcF_3*t4310*t4309*2.0-EcF_2*EcF_3*t4317*(log(t4276*t4305)+t4310*t4313*t4309)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t4333 = rho_a+rho_b;
                double t4334 = 1.0/pow(t4333,1.0/3.0);
                double t4335 = c*t4334;
                double t4336 = 1.0/pow(t4333,4.0/3.0);
                double t4337 = sqrt(t4335);
                double t4338 = EcP_3*t4337;
                double t4339 = EcP_4+t4335+t4338;
                double t4340 = c*t4336*(1.0/3.0);
                double t4341 = 1.0/sqrt(t4335);
                double t4342 = EcP_3*c*t4341*t4336*(1.0/6.0);
                double t4343 = t4340+t4342;
                double t4344 = EcP_2-t4337;
                double t4345 = 1.0/(t4339*t4339);
                double t4346 = 1.0/t4339;
                double t4347 = t4337*2.0;
                double t4348 = EcP_3+t4347;
                double t4349 = 1.0/(t4348*t4348);
                double t4350 = EcP_4*4.0;
                double t4351 = EcP_3*EcP_3;
                double t4352 = t4350-t4351;
                double t4353 = t4352*t4349;
                double t4354 = t4353+1.0;
                double t4355 = 1.0/t4354;
                double t4356 = 1.0/c;
                double t4357 = c*t4336*t4346*(1.0/3.0);
                double t4360 = c*t4334*t4343*t4345;
                double t4358 = -t4360+t4357;
                double t4359 = pow(t4333,1.0/3.0);
                double t4361 = 1.0/pow(t4333,7.0/3.0);
                double t4362 = EcP_2*EcP_2;
                double t4363 = EcP_2*EcP_3;
                double t4364 = EcP_4+t4362+t4363;
                double t4365 = 1.0/t4364;
                double t4366 = t4344*t4344;
                double t4367 = t4343*t4345*t4366;
                double t4368 = c*t4341*t4344*t4336*t4346*(1.0/3.0);
                double t4369 = t4367+t4368;
                double t4370 = 1.0/(t4344*t4344);
                double t4371 = c*t4361*(4.0/9.0);
                double t4372 = EcP_3*c*t4341*t4361*(2.0/9.0);
                double t4373 = c*c;
                double t4374 = 1.0/pow(t4333,8.0/3.0);
                double t4375 = 1.0/pow(t4335,3.0/2.0);
                double t4420 = EcP_3*t4373*t4374*t4375*(1.0/3.6E1);
                double t4376 = t4371+t4372-t4420;
                double t4377 = t4343*t4343;
                double t4378 = 1.0/(t4339*t4339*t4339);
                double t4379 = EcP_2*4.0;
                double t4380 = EcP_3*2.0;
                double t4381 = t4380+t4379;
                double t4382 = 1.0/(t4348*t4348*t4348);
                double t4383 = 1.0/(t4348*t4348*t4348*t4348*t4348);
                double t4384 = 1.0/(t4354*t4354);
                double t4385 = EcF_3*t4337;
                double t4386 = EcF_4+t4335+t4385;
                double t4387 = EcF_3*c*t4341*t4336*(1.0/6.0);
                double t4388 = t4340+t4387;
                double t4389 = 1.0/t4386;
                double t4390 = c*t4336*t4389*(1.0/3.0);
                double t4391 = 1.0/(t4386*t4386);
                double t4446 = c*t4334*t4391*t4388;
                double t4392 = t4390-t4446;
                double t4393 = 1.0/pow(t4333,2.0/3.0);
                double t4394 = EcF_2-t4337;
                double t4395 = 1.0/(t4394*t4394);
                double t4396 = t4394*t4394;
                double t4397 = EcF_3*c*t4341*t4361*(2.0/9.0);
                double t4398 = t4371+t4397-EcF_3*t4373*t4374*t4375*(1.0/3.6E1);
                double t4399 = t4388*t4388;
                double t4400 = 1.0/(t4386*t4386*t4386);
                double t4401 = EcF_3+t4347;
                double t4402 = EcF_2*4.0;
                double t4403 = EcF_3*2.0;
                double t4404 = t4402+t4403;
                double t4405 = 1.0/(t4401*t4401);
                double t4406 = EcF_4*4.0;
                double t4407 = EcF_3*EcF_3;
                double t4408 = t4406-t4407;
                double t4409 = t4405*t4408;
                double t4410 = t4409+1.0;
                double t4411 = 1.0/t4410;
                double t4412 = t4391*t4396*t4388;
                double t4413 = c*t4341*t4336*t4394*t4389*(1.0/3.0);
                double t4414 = t4412+t4413;
                double t4415 = 1.0/(t4401*t4401*t4401);
                double t4416 = 1.0/(t4401*t4401*t4401*t4401*t4401);
                double t4417 = 1.0/(t4410*t4410);
                double t4418 = t4343*t4356*t4358*t4359;
                double t4419 = c*t4361*t4346*(4.0/9.0);
                double t4421 = c*t4334*t4377*t4378*2.0;
                double t4422 = t4421+t4419-c*t4343*t4336*t4345*(2.0/3.0)-c*t4334*t4345*t4376;
                double t4423 = t4356*t4339*t4359*t4422;
                double t4424 = t4343*t4370*t4369;
                double t4425 = c*t4361*t4346*(1.0/1.8E1);
                double t4426 = t4366*t4377*t4378*2.0;
                double t4427 = t4344*t4346*t4373*t4374*t4375*(1.0/1.8E1);
                double t4428 = c*t4341*t4343*t4344*t4336*t4345*(2.0/3.0);
                double t4429 = t4425+t4426+t4427+t4428-t4345*t4366*t4376-c*t4341*t4361*t4344*t4346*(4.0/9.0);
                double t4430 = c*t4341*t4361*t4381*t4355*t4349*(4.0/9.0);
                double t4431 = 1.0/(t4344*t4344*t4344);
                double t4432 = c*t4341*t4336*t4339*t4369*t4431*(1.0/3.0);
                double t4433 = c*t4352*t4361*t4381*t4383*t4384*(2.0/9.0);
                double t4434 = t4430+t4432+t4424+t4433-t4370*t4339*t4429-c*t4361*t4381*t4355*t4382*(2.0/9.0)-t4381*t4355*t4373*t4374*t4375*t4349*(1.0/1.8E1);
                double t4435 = EcP_2*EcP_3*t4365*t4434;
                double t4436 = EcP_3*c*t4361*t4355*t4382*(4.0/9.0);
                double t4437 = EcP_3*t4355*t4373*t4374*t4375*t4349*(1.0/9.0);
                double t4438 = t4423+t4435+t4418+t4436+t4437-t4356*t4339*t4393*t4358*(1.0/3.0)-EcP_3*c*t4341*t4361*t4355*t4349*(8.0/9.0)-EcP_3*c*t4352*t4361*t4383*t4384*(4.0/9.0);
                double t4439 = EcP_1*t4438;
                double t4440 = pow(2.0,1.0/3.0);
                double t4441 = t4440*2.0;
                double t4442 = t4441-2.0;
                double t4443 = two_13*2.0;
                double t4444 = t4443-2.0;
                double t4445 = 1.0/t4444;
                double t4447 = EcF_2*EcF_2;
                double t4448 = EcF_2*EcF_3;
                double t4449 = EcF_4+t4447+t4448;
                double t4450 = 1.0/t4449;
                double t4451 = t4356*t4339*t4358*t4359;
                double t4452 = t4370*t4339*t4369;
                double t4453 = c*t4341*t4336*t4381*t4355*t4349*(1.0/3.0);
                double t4454 = t4452+t4453;
                double t4455 = EcP_2*EcP_3*t4365*t4454;
                double t4456 = t4451+t4455-EcP_3*c*t4341*t4336*t4355*t4349*(2.0/3.0);
                v_rho_a_rho_a[Q] += scale * EcP_1*t4456*-2.0+t4333*(t4439-t4442*t4445*(t4439-EcF_1*(t4356*t4359*t4386*(c*t4361*t4389*(4.0/9.0)-c*t4334*t4391*t4398-c*t4336*t4391*t4388*(2.0/3.0)+c*t4334*t4399*t4400*2.0)-t4356*t4392*t4393*t4386*(1.0/3.0)+t4356*t4392*t4359*t4388+EcF_2*EcF_3*t4450*(-t4386*t4395*(c*t4361*t4389*(1.0/1.8E1)-t4391*t4396*t4398+t4396*t4399*t4400*2.0-c*t4341*t4361*t4394*t4389*(4.0/9.0)+t4373*t4374*t4375*t4394*t4389*(1.0/1.8E1)+c*t4341*t4336*t4391*t4394*t4388*(2.0/3.0))+t4395*t4388*t4414-c*t4361*t4411*t4404*t4415*(2.0/9.0)+c*t4341*t4361*t4411*t4404*t4405*(4.0/9.0)+c*t4361*t4404*t4416*t4408*t4417*(2.0/9.0)-t4373*t4374*t4375*t4411*t4404*t4405*(1.0/1.8E1)+c*t4341*t4336*1.0/(t4394*t4394*t4394)*t4386*t4414*(1.0/3.0))+EcF_3*c*t4361*t4411*t4415*(4.0/9.0)-EcF_3*c*t4341*t4361*t4411*t4405*(8.0/9.0)-EcF_3*c*t4361*t4416*t4408*t4417*(4.0/9.0)+EcF_3*t4373*t4374*t4375*t4411*t4405*(1.0/9.0))))+t4442*t4445*(EcP_1*t4456-EcF_1*(t4356*t4392*t4359*t4386+EcF_2*EcF_3*t4450*(t4386*t4395*t4414+c*t4341*t4336*t4411*t4404*t4405*(1.0/3.0))-EcF_3*c*t4341*t4336*t4411*t4405*(2.0/3.0)))*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t4458 = rho_a+rho_b;
                double t4459 = 1.0/pow(t4458,1.0/3.0);
                double t4460 = c*t4459;
                double t4461 = 1.0/pow(t4458,4.0/3.0);
                double t4462 = sqrt(t4460);
                double t4463 = EcP_3*t4462;
                double t4464 = EcP_4+t4460+t4463;
                double t4465 = c*t4461*(1.0/3.0);
                double t4466 = 1.0/sqrt(t4460);
                double t4467 = EcP_3*c*t4461*t4466*(1.0/6.0);
                double t4468 = t4465+t4467;
                double t4469 = EcP_2-t4462;
                double t4470 = 1.0/(t4464*t4464);
                double t4471 = 1.0/t4464;
                double t4472 = t4462*2.0;
                double t4473 = EcP_3+t4472;
                double t4474 = 1.0/(t4473*t4473);
                double t4475 = EcP_4*4.0;
                double t4476 = EcP_3*EcP_3;
                double t4477 = t4475-t4476;
                double t4478 = t4474*t4477;
                double t4479 = t4478+1.0;
                double t4480 = 1.0/t4479;
                double t4481 = 1.0/c;
                double t4482 = c*t4461*t4471*(1.0/3.0);
                double t4485 = c*t4470*t4459*t4468;
                double t4483 = t4482-t4485;
                double t4484 = pow(t4458,1.0/3.0);
                double t4486 = 1.0/pow(t4458,7.0/3.0);
                double t4487 = EcP_2*EcP_2;
                double t4488 = EcP_2*EcP_3;
                double t4489 = EcP_4+t4487+t4488;
                double t4490 = 1.0/t4489;
                double t4491 = t4469*t4469;
                double t4492 = t4470*t4491*t4468;
                double t4493 = c*t4461*t4471*t4466*t4469*(1.0/3.0);
                double t4494 = t4492+t4493;
                double t4495 = 1.0/(t4469*t4469);
                double t4496 = c*t4486*(4.0/9.0);
                double t4497 = EcP_3*c*t4466*t4486*(2.0/9.0);
                double t4498 = c*c;
                double t4499 = 1.0/pow(t4458,8.0/3.0);
                double t4500 = 1.0/pow(t4460,3.0/2.0);
                double t4545 = EcP_3*t4498*t4499*t4500*(1.0/3.6E1);
                double t4501 = t4496+t4497-t4545;
                double t4502 = t4468*t4468;
                double t4503 = 1.0/(t4464*t4464*t4464);
                double t4504 = EcP_2*4.0;
                double t4505 = EcP_3*2.0;
                double t4506 = t4504+t4505;
                double t4507 = 1.0/(t4473*t4473*t4473);
                double t4508 = 1.0/(t4473*t4473*t4473*t4473*t4473);
                double t4509 = 1.0/(t4479*t4479);
                double t4510 = EcF_3*t4462;
                double t4511 = EcF_4+t4460+t4510;
                double t4512 = EcF_3*c*t4461*t4466*(1.0/6.0);
                double t4513 = t4465+t4512;
                double t4514 = 1.0/t4511;
                double t4515 = c*t4461*t4514*(1.0/3.0);
                double t4516 = 1.0/(t4511*t4511);
                double t4571 = c*t4459*t4513*t4516;
                double t4517 = t4515-t4571;
                double t4518 = 1.0/pow(t4458,2.0/3.0);
                double t4519 = EcF_2-t4462;
                double t4520 = 1.0/(t4519*t4519);
                double t4521 = t4519*t4519;
                double t4522 = EcF_3*c*t4466*t4486*(2.0/9.0);
                double t4523 = t4496+t4522-EcF_3*t4498*t4499*t4500*(1.0/3.6E1);
                double t4524 = t4513*t4513;
                double t4525 = 1.0/(t4511*t4511*t4511);
                double t4526 = EcF_3+t4472;
                double t4527 = EcF_2*4.0;
                double t4528 = EcF_3*2.0;
                double t4529 = t4527+t4528;
                double t4530 = 1.0/(t4526*t4526);
                double t4531 = EcF_4*4.0;
                double t4532 = EcF_3*EcF_3;
                double t4533 = t4531-t4532;
                double t4534 = t4530*t4533;
                double t4535 = t4534+1.0;
                double t4536 = 1.0/t4535;
                double t4537 = t4521*t4513*t4516;
                double t4538 = c*t4461*t4466*t4514*t4519*(1.0/3.0);
                double t4539 = t4537+t4538;
                double t4540 = 1.0/(t4526*t4526*t4526);
                double t4541 = 1.0/(t4526*t4526*t4526*t4526*t4526);
                double t4542 = 1.0/(t4535*t4535);
                double t4543 = t4481*t4483*t4484*t4468;
                double t4544 = c*t4471*t4486*(4.0/9.0);
                double t4546 = c*t4459*t4502*t4503*2.0;
                double t4547 = t4544+t4546-c*t4461*t4470*t4468*(2.0/3.0)-c*t4470*t4459*t4501;
                double t4548 = t4481*t4464*t4484*t4547;
                double t4549 = t4494*t4468*t4495;
                double t4550 = c*t4471*t4486*(1.0/1.8E1);
                double t4551 = t4491*t4502*t4503*2.0;
                double t4552 = t4471*t4469*t4498*t4499*t4500*(1.0/1.8E1);
                double t4553 = c*t4461*t4470*t4466*t4468*t4469*(2.0/3.0);
                double t4554 = t4550+t4551+t4552+t4553-t4470*t4491*t4501-c*t4471*t4466*t4486*t4469*(4.0/9.0);
                double t4555 = c*t4480*t4474*t4466*t4486*t4506*(4.0/9.0);
                double t4556 = 1.0/(t4469*t4469*t4469);
                double t4557 = c*t4461*t4464*t4466*t4494*t4556*(1.0/3.0);
                double t4558 = c*t4477*t4486*t4506*t4508*t4509*(2.0/9.0);
                double t4559 = t4555+t4557+t4549+t4558-t4464*t4495*t4554-c*t4480*t4486*t4506*t4507*(2.0/9.0)-t4480*t4474*t4498*t4499*t4500*t4506*(1.0/1.8E1);
                double t4560 = EcP_2*EcP_3*t4490*t4559;
                double t4561 = EcP_3*c*t4480*t4486*t4507*(4.0/9.0);
                double t4562 = EcP_3*t4480*t4474*t4498*t4499*t4500*(1.0/9.0);
                double t4563 = t4560+t4543+t4561+t4562+t4548-t4481*t4464*t4483*t4518*(1.0/3.0)-EcP_3*c*t4480*t4474*t4466*t4486*(8.0/9.0)-EcP_3*c*t4477*t4486*t4508*t4509*(4.0/9.0);
                double t4564 = EcP_1*t4563;
                double t4565 = pow(2.0,1.0/3.0);
                double t4566 = t4565*2.0;
                double t4567 = t4566-2.0;
                double t4568 = two_13*2.0;
                double t4569 = t4568-2.0;
                double t4570 = 1.0/t4569;
                double t4572 = EcF_2*EcF_2;
                double t4573 = EcF_2*EcF_3;
                double t4574 = EcF_4+t4572+t4573;
                double t4575 = 1.0/t4574;
                double t4576 = t4481*t4464*t4483*t4484;
                double t4577 = t4464*t4494*t4495;
                double t4578 = c*t4461*t4480*t4474*t4466*t4506*(1.0/3.0);
                double t4579 = t4577+t4578;
                double t4580 = EcP_2*EcP_3*t4490*t4579;
                double t4581 = t4580+t4576-EcP_3*c*t4461*t4480*t4474*t4466*(2.0/3.0);
                v_rho_a_rho_b[Q] += scale * EcP_1*t4581*-2.0+t4458*(t4564-t4570*t4567*(t4564-EcF_1*(t4481*t4484*t4511*(c*t4486*t4514*(4.0/9.0)-c*t4461*t4513*t4516*(2.0/3.0)-c*t4459*t4523*t4516+c*t4459*t4524*t4525*2.0)+t4481*t4484*t4513*t4517-t4481*t4511*t4517*t4518*(1.0/3.0)+EcF_2*EcF_3*t4575*(-t4511*t4520*(c*t4486*t4514*(1.0/1.8E1)-t4521*t4523*t4516+t4521*t4524*t4525*2.0-c*t4466*t4486*t4514*t4519*(4.0/9.0)+t4498*t4499*t4500*t4514*t4519*(1.0/1.8E1)+c*t4461*t4466*t4513*t4516*t4519*(2.0/3.0))+t4520*t4513*t4539-c*t4486*t4540*t4536*t4529*(2.0/9.0)+c*t4466*t4486*t4530*t4536*t4529*(4.0/9.0)+c*t4486*t4541*t4533*t4542*t4529*(2.0/9.0)-t4498*t4499*t4500*t4530*t4536*t4529*(1.0/1.8E1)+c*t4461*t4466*t4511*1.0/(t4519*t4519*t4519)*t4539*(1.0/3.0))+EcF_3*c*t4486*t4540*t4536*(4.0/9.0)-EcF_3*c*t4466*t4486*t4530*t4536*(8.0/9.0)-EcF_3*c*t4486*t4541*t4533*t4542*(4.0/9.0)+EcF_3*t4498*t4499*t4500*t4530*t4536*(1.0/9.0))))+t4570*t4567*(EcP_1*t4581-EcF_1*(t4481*t4484*t4511*t4517+EcF_2*EcF_3*t4575*(t4511*t4520*t4539+c*t4461*t4466*t4530*t4536*t4529*(1.0/3.0))-EcF_3*c*t4461*t4466*t4530*t4536*(2.0/3.0)))*2.0;
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t4583 = rho_a+rho_b;
                double t4584 = 1.0/pow(t4583,1.0/3.0);
                double t4585 = c*t4584;
                double t4586 = 1.0/pow(t4583,4.0/3.0);
                double t4587 = sqrt(t4585);
                double t4588 = EcP_3*t4587;
                double t4589 = EcP_4+t4585+t4588;
                double t4590 = c*t4586*(1.0/3.0);
                double t4591 = 1.0/sqrt(t4585);
                double t4592 = EcP_3*c*t4591*t4586*(1.0/6.0);
                double t4593 = t4590+t4592;
                double t4594 = EcP_2-t4587;
                double t4595 = 1.0/(t4589*t4589);
                double t4596 = 1.0/t4589;
                double t4597 = t4587*2.0;
                double t4598 = EcP_3+t4597;
                double t4599 = 1.0/(t4598*t4598);
                double t4600 = EcP_4*4.0;
                double t4601 = EcP_3*EcP_3;
                double t4602 = t4600-t4601;
                double t4603 = t4599*t4602;
                double t4604 = t4603+1.0;
                double t4605 = 1.0/t4604;
                double t4606 = 1.0/c;
                double t4607 = c*t4586*t4596*(1.0/3.0);
                double t4610 = c*t4584*t4593*t4595;
                double t4608 = -t4610+t4607;
                double t4609 = pow(t4583,1.0/3.0);
                double t4611 = 1.0/pow(t4583,7.0/3.0);
                double t4612 = EcP_2*EcP_2;
                double t4613 = EcP_2*EcP_3;
                double t4614 = EcP_4+t4612+t4613;
                double t4615 = 1.0/t4614;
                double t4616 = t4594*t4594;
                double t4617 = t4593*t4595*t4616;
                double t4618 = c*t4591*t4594*t4586*t4596*(1.0/3.0);
                double t4619 = t4617+t4618;
                double t4620 = 1.0/(t4594*t4594);
                double t4621 = c*t4611*(4.0/9.0);
                double t4622 = EcP_3*c*t4591*t4611*(2.0/9.0);
                double t4623 = c*c;
                double t4624 = 1.0/pow(t4583,8.0/3.0);
                double t4625 = 1.0/pow(t4585,3.0/2.0);
                double t4670 = EcP_3*t4623*t4624*t4625*(1.0/3.6E1);
                double t4626 = t4621+t4622-t4670;
                double t4627 = t4593*t4593;
                double t4628 = 1.0/(t4589*t4589*t4589);
                double t4629 = EcP_2*4.0;
                double t4630 = EcP_3*2.0;
                double t4631 = t4630+t4629;
                double t4632 = 1.0/(t4598*t4598*t4598);
                double t4633 = 1.0/(t4598*t4598*t4598*t4598*t4598);
                double t4634 = 1.0/(t4604*t4604);
                double t4635 = EcF_3*t4587;
                double t4636 = EcF_4+t4585+t4635;
                double t4637 = EcF_3*c*t4591*t4586*(1.0/6.0);
                double t4638 = t4590+t4637;
                double t4639 = 1.0/t4636;
                double t4640 = c*t4586*t4639*(1.0/3.0);
                double t4641 = 1.0/(t4636*t4636);
                double t4696 = c*t4584*t4641*t4638;
                double t4642 = t4640-t4696;
                double t4643 = 1.0/pow(t4583,2.0/3.0);
                double t4644 = EcF_2-t4587;
                double t4645 = 1.0/(t4644*t4644);
                double t4646 = t4644*t4644;
                double t4647 = EcF_3*c*t4591*t4611*(2.0/9.0);
                double t4648 = t4621+t4647-EcF_3*t4623*t4624*t4625*(1.0/3.6E1);
                double t4649 = t4638*t4638;
                double t4650 = 1.0/(t4636*t4636*t4636);
                double t4651 = EcF_3+t4597;
                double t4652 = EcF_2*4.0;
                double t4653 = EcF_3*2.0;
                double t4654 = t4652+t4653;
                double t4655 = 1.0/(t4651*t4651);
                double t4656 = EcF_4*4.0;
                double t4657 = EcF_3*EcF_3;
                double t4658 = t4656-t4657;
                double t4659 = t4655*t4658;
                double t4660 = t4659+1.0;
                double t4661 = 1.0/t4660;
                double t4662 = t4641*t4646*t4638;
                double t4663 = c*t4591*t4586*t4644*t4639*(1.0/3.0);
                double t4664 = t4662+t4663;
                double t4665 = 1.0/(t4651*t4651*t4651);
                double t4666 = 1.0/(t4651*t4651*t4651*t4651*t4651);
                double t4667 = 1.0/(t4660*t4660);
                double t4668 = t4593*t4606*t4608*t4609;
                double t4669 = c*t4596*t4611*(4.0/9.0);
                double t4671 = c*t4584*t4627*t4628*2.0;
                double t4672 = t4671+t4669-c*t4593*t4586*t4595*(2.0/3.0)-c*t4584*t4595*t4626;
                double t4673 = t4589*t4606*t4609*t4672;
                double t4674 = t4593*t4620*t4619;
                double t4675 = c*t4596*t4611*(1.0/1.8E1);
                double t4676 = t4616*t4627*t4628*2.0;
                double t4677 = t4594*t4596*t4623*t4624*t4625*(1.0/1.8E1);
                double t4678 = c*t4591*t4593*t4594*t4586*t4595*(2.0/3.0);
                double t4679 = t4675+t4676+t4677+t4678-t4595*t4616*t4626-c*t4591*t4594*t4596*t4611*(4.0/9.0);
                double t4680 = c*t4591*t4599*t4611*t4631*t4605*(4.0/9.0);
                double t4681 = 1.0/(t4594*t4594*t4594);
                double t4682 = c*t4591*t4586*t4589*t4681*t4619*(1.0/3.0);
                double t4683 = c*t4602*t4611*t4631*t4633*t4634*(2.0/9.0);
                double t4684 = t4680+t4682+t4674+t4683-t4589*t4620*t4679-c*t4611*t4631*t4605*t4632*(2.0/9.0)-t4599*t4631*t4605*t4623*t4624*t4625*(1.0/1.8E1);
                double t4685 = EcP_2*EcP_3*t4615*t4684;
                double t4686 = EcP_3*c*t4611*t4605*t4632*(4.0/9.0);
                double t4687 = EcP_3*t4599*t4605*t4623*t4624*t4625*(1.0/9.0);
                double t4688 = t4673+t4685+t4668+t4686+t4687-t4589*t4606*t4643*t4608*(1.0/3.0)-EcP_3*c*t4591*t4599*t4611*t4605*(8.0/9.0)-EcP_3*c*t4602*t4611*t4633*t4634*(4.0/9.0);
                double t4689 = EcP_1*t4688;
                double t4690 = pow(2.0,1.0/3.0);
                double t4691 = t4690*2.0;
                double t4692 = t4691-2.0;
                double t4693 = two_13*2.0;
                double t4694 = t4693-2.0;
                double t4695 = 1.0/t4694;
                double t4697 = EcF_2*EcF_2;
                double t4698 = EcF_2*EcF_3;
                double t4699 = EcF_4+t4697+t4698;
                double t4700 = 1.0/t4699;
                double t4701 = t4589*t4606*t4608*t4609;
                double t4702 = t4589*t4620*t4619;
                double t4703 = c*t4591*t4586*t4599*t4631*t4605*(1.0/3.0);
                double t4704 = t4702+t4703;
                double t4705 = EcP_2*EcP_3*t4615*t4704;
                double t4706 = t4701+t4705-EcP_3*c*t4591*t4586*t4599*t4605*(2.0/3.0);
                v_rho_b_rho_b[Q] += scale * EcP_1*t4706*-2.0+t4583*(t4689-t4692*t4695*(t4689-EcF_1*(t4606*t4609*t4636*(c*t4611*t4639*(4.0/9.0)-c*t4584*t4641*t4648+c*t4584*t4650*t4649*2.0-c*t4586*t4641*t4638*(2.0/3.0))-t4606*t4642*t4643*t4636*(1.0/3.0)+t4606*t4642*t4609*t4638+EcF_2*EcF_3*t4700*(-t4636*t4645*(c*t4611*t4639*(1.0/1.8E1)-t4641*t4646*t4648+t4650*t4646*t4649*2.0-c*t4591*t4611*t4644*t4639*(4.0/9.0)+t4623*t4624*t4625*t4644*t4639*(1.0/1.8E1)+c*t4591*t4586*t4641*t4644*t4638*(2.0/3.0))+t4645*t4664*t4638-c*t4611*t4661*t4654*t4665*(2.0/9.0)+c*t4591*t4611*t4661*t4654*t4655*(4.0/9.0)+c*t4611*t4654*t4666*t4658*t4667*(2.0/9.0)-t4623*t4624*t4625*t4661*t4654*t4655*(1.0/1.8E1)+c*t4591*t4586*1.0/(t4644*t4644*t4644)*t4636*t4664*(1.0/3.0))+EcF_3*c*t4611*t4661*t4665*(4.0/9.0)-EcF_3*c*t4591*t4611*t4661*t4655*(8.0/9.0)-EcF_3*c*t4611*t4666*t4658*t4667*(4.0/9.0)+EcF_3*t4623*t4624*t4625*t4661*t4655*(1.0/9.0))))+t4692*t4695*(EcP_1*t4706-EcF_1*(t4606*t4642*t4609*t4636+EcF_2*EcF_3*t4700*(t4636*t4645*t4664+c*t4591*t4586*t4661*t4654*t4655*(1.0/3.0))-EcF_3*c*t4591*t4586*t4661*t4655*(2.0/3.0)))*2.0;
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t2138 = rho_a+rho_b;
                double t2139 = 1.0/pow(t2138,1.0/3.0);
                double t2140 = c*t2139;
                double t2141 = sqrt(t2140);
                double t2142 = EcP_4*4.0;
                double t2143 = EcP_3*EcP_3;
                double t2144 = t2142-t2143;
                double t2145 = EcP_2-t2141;
                double t2146 = EcP_3*t2141;
                double t2147 = EcP_4+t2140+t2146;
                double t2148 = 1.0/t2147;
                double t2149 = sqrt(t2144);
                double t2150 = t2141*2.0;
                double t2151 = EcP_3+t2150;
                double t2152 = 1.0/t2151;
                double t2153 = t2152*t2149;
                double t2154 = atan(t2153);
                double t2155 = 1.0/sqrt(t2144);
                double t2156 = rho_a-rho_b;
                double t2157 = t2156*t2156;
                double t2158 = EcF_4*4.0;
                double t2159 = EcF_3*EcF_3;
                double t2160 = t2158-t2159;
                double t2161 = EcF_2-t2141;
                double t2162 = EcF_3*t2141;
                double t2163 = EcF_4+t2140+t2162;
                double t2164 = 1.0/t2163;
                double t2165 = sqrt(t2160);
                double t2166 = EcF_3+t2150;
                double t2167 = 1.0/t2166;
                double t2168 = t2165*t2167;
                double t2169 = atan(t2168);
                double t2170 = 1.0/sqrt(t2160);
                double t2171 = c*t2139*t2148;
                double t2172 = log(t2171);
                double t2173 = EcP_3*t2154*t2155*2.0;
                double t2174 = t2145*t2145;
                double t2175 = t2174*t2148;
                double t2176 = log(t2175);
                double t2177 = EcP_2*4.0;
                double t2178 = EcP_3*2.0;
                double t2179 = t2177+t2178;
                double t2180 = t2154*t2155*t2179;
                double t2181 = t2180+t2176;
                double t2182 = EcP_2*EcP_2;
                double t2183 = EcP_2*EcP_3;
                double t2184 = EcP_4+t2182+t2183;
                double t2185 = 1.0/t2184;
                double t2186 = t2172+t2173-EcP_2*EcP_3*t2181*t2185;
                double t2187 = EcP_1*t2186;
                double t2188 = Ac_4*4.0;
                double t2189 = Ac_3*Ac_3;
                double t2190 = t2188-t2189;
                double t2191 = Ac_2-t2141;
                double t2192 = Ac_3*t2141;
                double t2193 = Ac_4+t2140+t2192;
                double t2194 = 1.0/t2193;
                double t2195 = sqrt(t2190);
                double t2196 = Ac_3+t2150;
                double t2197 = 1.0/t2196;
                double t2198 = t2195*t2197;
                double t2199 = atan(t2198);
                double t2200 = 1.0/sqrt(t2190);
                double t2201 = 1.0/t2138;
                double t2202 = t2156*t2201;
                double t2203 = c*t2139*t2194;
                double t2204 = log(t2203);
                double t2205 = Ac_3*t2199*t2200*2.0;
                double t2206 = t2191*t2191;
                double t2207 = t2194*t2206;
                double t2208 = log(t2207);
                double t2209 = Ac_2*4.0;
                double t2210 = Ac_3*2.0;
                double t2211 = t2210+t2209;
                double t2212 = t2199*t2200*t2211;
                double t2213 = t2212+t2208;
                double t2214 = Ac_2*Ac_2;
                double t2215 = Ac_2*Ac_3;
                double t2216 = Ac_4+t2214+t2215;
                double t2217 = 1.0/t2216;
                double t2218 = t2204+t2205-Ac_2*Ac_3*t2213*t2217;
                v[Q] += scale * t2138*(t2187-(Ac_1*t2218*(1.0/(t2138*t2138*t2138*t2138)*(t2157*t2157)*((d2fz0*(t2187-EcF_1*(log(c*t2164*t2139)+EcF_3*t2170*t2169*2.0-(EcF_2*EcF_3*(log((t2161*t2161)*t2164)+t2170*t2169*(EcF_2*4.0+EcF_3*2.0)))/(EcF_4+EcF_2*EcF_2+EcF_2*EcF_3))))/(Ac_1*t2218)+1.0)-1.0)*(pow(t2202+1.0,4.0/3.0)+pow(-t2202+1.0,4.0/3.0)-2.0))/(d2fz0*(two_13*2.0-2.0)));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t2220 = rho_a+rho_b;
                double t2221 = 1.0/pow(t2220,1.0/3.0);
                double t2222 = c*t2221;
                double t2223 = sqrt(t2222);
                double t2224 = EcP_4*4.0;
                double t2225 = EcP_3*EcP_3;
                double t2226 = t2224-t2225;
                double t2227 = EcP_2-t2223;
                double t2228 = EcP_3*t2223;
                double t2229 = EcP_4+t2222+t2228;
                double t2230 = 1.0/t2229;
                double t2231 = sqrt(t2226);
                double t2232 = t2223*2.0;
                double t2233 = EcP_3+t2232;
                double t2234 = 1.0/t2233;
                double t2235 = t2231*t2234;
                double t2236 = atan(t2235);
                double t2237 = 1.0/sqrt(t2226);
                double t2238 = 1.0/pow(t2220,4.0/3.0);
                double t2239 = c*t2238*(1.0/3.0);
                double t2240 = 1.0/sqrt(t2222);
                double t2241 = EcP_3*c*t2240*t2238*(1.0/6.0);
                double t2242 = t2241+t2239;
                double t2243 = t2227*t2227;
                double t2244 = 1.0/(t2229*t2229);
                double t2245 = EcP_2*4.0;
                double t2246 = EcP_3*2.0;
                double t2247 = t2245+t2246;
                double t2248 = 1.0/(t2233*t2233);
                double t2249 = EcP_2*EcP_2;
                double t2250 = EcP_2*EcP_3;
                double t2251 = EcP_4+t2250+t2249;
                double t2252 = 1.0/t2251;
                double t2253 = t2226*t2248;
                double t2254 = t2253+1.0;
                double t2255 = 1.0/t2254;
                double t2256 = 1.0/t2220;
                double t2257 = rho_a-rho_b;
                double t2258 = t2256*t2257;
                double t2259 = Ac_4*4.0;
                double t2260 = Ac_3*Ac_3;
                double t2261 = -t2260+t2259;
                double t2262 = Ac_2-t2223;
                double t2263 = Ac_3*t2223;
                double t2264 = Ac_4+t2222+t2263;
                double t2265 = 1.0/t2264;
                double t2266 = sqrt(t2261);
                double t2267 = Ac_3+t2232;
                double t2268 = 1.0/t2267;
                double t2269 = t2266*t2268;
                double t2270 = atan(t2269);
                double t2271 = 1.0/sqrt(t2261);
                double t2272 = 1.0/c;
                double t2273 = EcF_3*t2223;
                double t2274 = EcF_4+t2222+t2273;
                double t2275 = pow(t2220,1.0/3.0);
                double t2276 = EcF_3*c*t2240*t2238*(1.0/6.0);
                double t2277 = t2239+t2276;
                double t2278 = EcF_2-t2223;
                double t2279 = 1.0/(t2274*t2274);
                double t2280 = 1.0/t2274;
                double t2281 = EcF_3+t2232;
                double t2282 = 1.0/(t2281*t2281);
                double t2283 = EcF_4*4.0;
                double t2284 = EcF_3*EcF_3;
                double t2285 = t2283-t2284;
                double t2286 = t2282*t2285;
                double t2287 = t2286+1.0;
                double t2288 = 1.0/t2287;
                double t2289 = c*t2230*t2238*(1.0/3.0);
                double t2290 = t2289-c*t2221*t2242*t2244;
                double t2291 = t2272*t2290*t2229*t2275;
                double t2292 = t2242*t2243*t2244;
                double t2293 = c*t2230*t2240*t2227*t2238*(1.0/3.0);
                double t2294 = t2292+t2293;
                double t2295 = 1.0/(t2227*t2227);
                double t2296 = t2229*t2294*t2295;
                double t2297 = c*t2240*t2255*t2238*t2247*t2248*(1.0/3.0);
                double t2298 = t2296+t2297;
                double t2299 = EcP_2*EcP_3*t2252*t2298;
                double t2300 = t2291+t2299-EcP_3*c*t2240*t2255*t2238*t2248*(2.0/3.0);
                double t2301 = EcP_1*t2300;
                double t2302 = c*t2221*t2265;
                double t2303 = log(t2302);
                double t2304 = Ac_3*t2270*t2271*2.0;
                double t2305 = t2262*t2262;
                double t2306 = t2265*t2305;
                double t2307 = log(t2306);
                double t2308 = Ac_2*4.0;
                double t2309 = Ac_3*2.0;
                double t2310 = t2308+t2309;
                double t2311 = t2270*t2271*t2310;
                double t2312 = t2311+t2307;
                double t2313 = Ac_2*Ac_2;
                double t2314 = Ac_2*Ac_3;
                double t2315 = Ac_4+t2313+t2314;
                double t2316 = 1.0/t2315;
                double t2341 = Ac_2*Ac_3*t2312*t2316;
                double t2317 = t2303+t2304-t2341;
                double t2318 = 1.0/Ac_1;
                double t2319 = t2278*t2278;
                double t2320 = sqrt(t2285);
                double t2321 = 1.0/t2281;
                double t2322 = t2320*t2321;
                double t2323 = atan(t2322);
                double t2324 = 1.0/sqrt(t2285);
                double t2325 = EcF_2*4.0;
                double t2326 = EcF_3*2.0;
                double t2327 = t2325+t2326;
                double t2328 = EcF_2*EcF_2;
                double t2329 = EcF_2*EcF_3;
                double t2330 = EcF_4+t2328+t2329;
                double t2331 = 1.0/t2330;
                double t2332 = c*t2221*t2230;
                double t2333 = log(t2332);
                double t2334 = EcP_3*t2236*t2237*2.0;
                double t2335 = t2230*t2243;
                double t2336 = log(t2335);
                double t2337 = t2236*t2237*t2247;
                double t2338 = t2336+t2337;
                double t2359 = EcP_2*EcP_3*t2252*t2338;
                double t2339 = t2333+t2334-t2359;
                double t2340 = EcP_1*t2339;
                double t2342 = Ac_3*c*t2240*t2238*(1.0/6.0);
                double t2343 = t2239+t2342;
                double t2344 = 1.0/(t2264*t2264);
                double t2345 = 1.0/(t2267*t2267);
                double t2346 = t2261*t2345;
                double t2347 = t2346+1.0;
                double t2348 = 1.0/t2347;
                double t2349 = t2257*t2257;
                double t2350 = 1.0/(t2220*t2220*t2220*t2220);
                double t2351 = c*t2221*t2280;
                double t2352 = log(t2351);
                double t2353 = EcF_3*t2323*t2324*2.0;
                double t2354 = t2280*t2319;
                double t2355 = log(t2354);
                double t2356 = t2323*t2324*t2327;
                double t2357 = t2355+t2356;
                double t2363 = EcF_2*EcF_3*t2331*t2357;
                double t2358 = t2352+t2353-t2363;
                double t2360 = 1.0/t2317;
                double t2364 = EcF_1*t2358;
                double t2361 = t2340-t2364;
                double t2362 = t2349*t2349;
                double t2365 = d2fz0*t2360*t2361*t2318;
                double t2366 = t2365+1.0;
                double t2367 = 1.0/d2fz0;
                double t2368 = two_13*2.0;
                double t2369 = t2368-2.0;
                double t2370 = 1.0/t2369;
                double t2371 = t2258+1.0;
                double t2372 = pow(t2371,4.0/3.0);
                double t2373 = -t2258+1.0;
                double t2374 = pow(t2373,4.0/3.0);
                double t2375 = t2372+t2374-2.0;
                double t2376 = c*t2238*t2265*(1.0/3.0);
                double t2377 = t2376-c*t2221*t2343*t2344;
                double t2378 = t2272*t2264*t2275*t2377;
                double t2379 = t2305*t2343*t2344;
                double t2380 = c*t2240*t2262*t2238*t2265*(1.0/3.0);
                double t2381 = t2380+t2379;
                double t2382 = 1.0/(t2262*t2262);
                double t2383 = t2264*t2381*t2382;
                double t2384 = c*t2240*t2238*t2310*t2345*t2348*(1.0/3.0);
                double t2385 = t2383+t2384;
                double t2386 = Ac_2*Ac_3*t2316*t2385;
                double t2387 = t2386+t2378-Ac_3*c*t2240*t2238*t2345*t2348*(2.0/3.0);
                double t2388 = 1.0/(t2220*t2220);
                double t2389 = t2256-t2257*t2388;
                double t2390 = t2350*t2362*t2366;
                double t2391 = t2390-1.0;
                v_rho_a[Q] += scale * t2340-t2220*(t2301-Ac_1*t2370*t2317*t2375*t2367*(1.0/(t2220*t2220*t2220*t2220*t2220)*t2362*t2366*4.0+t2350*t2362*(d2fz0*t2360*t2318*(t2301-EcF_1*(EcF_2*EcF_3*t2331*(t2274*1.0/(t2278*t2278)*(t2277*t2279*t2319+c*t2240*t2280*t2238*t2278*(1.0/3.0))+c*t2240*t2282*t2238*t2288*t2327*(1.0/3.0))+t2272*t2274*t2275*(c*t2280*t2238*(1.0/3.0)-c*t2221*t2277*t2279)-EcF_3*c*t2240*t2282*t2238*t2288*(2.0/3.0)))-d2fz0*t2361*1.0/(t2317*t2317)*t2318*t2387)-t2257*t2350*t2366*t2349*4.0)+Ac_1*t2370*t2317*t2391*t2367*(pow(t2371,1.0/3.0)*t2389*(4.0/3.0)-pow(t2373,1.0/3.0)*t2389*(4.0/3.0))-Ac_1*t2370*t2391*t2375*t2367*t2387)-Ac_1*t2370*t2317*t2391*t2375*t2367;
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t2393 = rho_a+rho_b;
                double t2394 = 1.0/pow(t2393,1.0/3.0);
                double t2395 = c*t2394;
                double t2396 = sqrt(t2395);
                double t2397 = EcP_4*4.0;
                double t2398 = EcP_3*EcP_3;
                double t2399 = t2397-t2398;
                double t2400 = EcP_2-t2396;
                double t2401 = EcP_3*t2396;
                double t2402 = EcP_4+t2395+t2401;
                double t2403 = 1.0/t2402;
                double t2404 = sqrt(t2399);
                double t2405 = t2396*2.0;
                double t2406 = EcP_3+t2405;
                double t2407 = 1.0/t2406;
                double t2408 = t2404*t2407;
                double t2409 = atan(t2408);
                double t2410 = 1.0/sqrt(t2399);
                double t2411 = 1.0/pow(t2393,4.0/3.0);
                double t2412 = c*t2411*(1.0/3.0);
                double t2413 = 1.0/sqrt(t2395);
                double t2414 = EcP_3*c*t2411*t2413*(1.0/6.0);
                double t2415 = t2412+t2414;
                double t2416 = t2400*t2400;
                double t2417 = 1.0/(t2402*t2402);
                double t2418 = EcP_2*4.0;
                double t2419 = EcP_3*2.0;
                double t2420 = t2418+t2419;
                double t2421 = 1.0/(t2406*t2406);
                double t2422 = EcP_2*EcP_2;
                double t2423 = EcP_2*EcP_3;
                double t2424 = EcP_4+t2422+t2423;
                double t2425 = 1.0/t2424;
                double t2426 = t2399*t2421;
                double t2427 = t2426+1.0;
                double t2428 = 1.0/t2427;
                double t2429 = 1.0/t2393;
                double t2430 = rho_a-rho_b;
                double t2431 = t2430*t2429;
                double t2432 = Ac_4*4.0;
                double t2433 = Ac_3*Ac_3;
                double t2434 = t2432-t2433;
                double t2435 = Ac_2-t2396;
                double t2436 = Ac_3*t2396;
                double t2437 = Ac_4+t2395+t2436;
                double t2438 = 1.0/t2437;
                double t2439 = sqrt(t2434);
                double t2440 = Ac_3+t2405;
                double t2441 = 1.0/t2440;
                double t2442 = t2441*t2439;
                double t2443 = atan(t2442);
                double t2444 = 1.0/sqrt(t2434);
                double t2445 = 1.0/c;
                double t2446 = EcF_3*t2396;
                double t2447 = EcF_4+t2395+t2446;
                double t2448 = pow(t2393,1.0/3.0);
                double t2449 = EcF_3*c*t2411*t2413*(1.0/6.0);
                double t2450 = t2412+t2449;
                double t2451 = EcF_2-t2396;
                double t2452 = 1.0/(t2447*t2447);
                double t2453 = 1.0/t2447;
                double t2454 = EcF_3+t2405;
                double t2455 = 1.0/(t2454*t2454);
                double t2456 = EcF_4*4.0;
                double t2457 = EcF_3*EcF_3;
                double t2458 = t2456-t2457;
                double t2459 = t2455*t2458;
                double t2460 = t2459+1.0;
                double t2461 = 1.0/t2460;
                double t2462 = c*t2411*t2403*(1.0/3.0);
                double t2463 = t2462-c*t2394*t2415*t2417;
                double t2464 = t2402*t2445*t2463*t2448;
                double t2465 = t2415*t2416*t2417;
                double t2466 = c*t2400*t2411*t2403*t2413*(1.0/3.0);
                double t2467 = t2465+t2466;
                double t2468 = 1.0/(t2400*t2400);
                double t2469 = t2402*t2467*t2468;
                double t2470 = c*t2411*t2420*t2421*t2413*t2428*(1.0/3.0);
                double t2471 = t2470+t2469;
                double t2472 = EcP_2*EcP_3*t2425*t2471;
                double t2473 = t2472+t2464-EcP_3*c*t2411*t2421*t2413*t2428*(2.0/3.0);
                double t2474 = EcP_1*t2473;
                double t2475 = c*t2394*t2438;
                double t2476 = log(t2475);
                double t2477 = Ac_3*t2443*t2444*2.0;
                double t2478 = t2435*t2435;
                double t2479 = t2438*t2478;
                double t2480 = log(t2479);
                double t2481 = Ac_2*4.0;
                double t2482 = Ac_3*2.0;
                double t2483 = t2481+t2482;
                double t2484 = t2443*t2444*t2483;
                double t2485 = t2480+t2484;
                double t2486 = Ac_2*Ac_2;
                double t2487 = Ac_2*Ac_3;
                double t2488 = Ac_4+t2486+t2487;
                double t2489 = 1.0/t2488;
                double t2514 = Ac_2*Ac_3*t2485*t2489;
                double t2490 = t2476+t2477-t2514;
                double t2491 = 1.0/Ac_1;
                double t2492 = t2451*t2451;
                double t2493 = sqrt(t2458);
                double t2494 = 1.0/t2454;
                double t2495 = t2493*t2494;
                double t2496 = atan(t2495);
                double t2497 = 1.0/sqrt(t2458);
                double t2498 = EcF_2*4.0;
                double t2499 = EcF_3*2.0;
                double t2500 = t2498+t2499;
                double t2501 = EcF_2*EcF_2;
                double t2502 = EcF_2*EcF_3;
                double t2503 = EcF_4+t2501+t2502;
                double t2504 = 1.0/t2503;
                double t2505 = c*t2394*t2403;
                double t2506 = log(t2505);
                double t2507 = EcP_3*t2410*t2409*2.0;
                double t2508 = t2403*t2416;
                double t2509 = log(t2508);
                double t2510 = t2410*t2420*t2409;
                double t2511 = t2510+t2509;
                double t2532 = EcP_2*EcP_3*t2425*t2511;
                double t2512 = -t2532+t2506+t2507;
                double t2513 = EcP_1*t2512;
                double t2515 = Ac_3*c*t2411*t2413*(1.0/6.0);
                double t2516 = t2412+t2515;
                double t2517 = 1.0/(t2437*t2437);
                double t2518 = 1.0/(t2440*t2440);
                double t2519 = t2434*t2518;
                double t2520 = t2519+1.0;
                double t2521 = 1.0/t2520;
                double t2522 = t2430*t2430;
                double t2523 = 1.0/(t2393*t2393*t2393*t2393);
                double t2524 = c*t2394*t2453;
                double t2525 = log(t2524);
                double t2526 = EcF_3*t2496*t2497*2.0;
                double t2527 = t2453*t2492;
                double t2528 = log(t2527);
                double t2529 = t2496*t2497*t2500;
                double t2530 = t2528+t2529;
                double t2536 = EcF_2*EcF_3*t2530*t2504;
                double t2531 = t2525+t2526-t2536;
                double t2533 = 1.0/t2490;
                double t2537 = EcF_1*t2531;
                double t2534 = t2513-t2537;
                double t2535 = t2522*t2522;
                double t2538 = d2fz0*t2491*t2533*t2534;
                double t2539 = t2538+1.0;
                double t2540 = 1.0/d2fz0;
                double t2541 = two_13*2.0;
                double t2542 = t2541-2.0;
                double t2543 = 1.0/t2542;
                double t2544 = t2431+1.0;
                double t2545 = pow(t2544,4.0/3.0);
                double t2546 = -t2431+1.0;
                double t2547 = pow(t2546,4.0/3.0);
                double t2548 = t2545+t2547-2.0;
                double t2549 = c*t2411*t2438*(1.0/3.0);
                double t2550 = t2549-c*t2394*t2516*t2517;
                double t2551 = t2445*t2437*t2448*t2550;
                double t2552 = t2478*t2516*t2517;
                double t2553 = c*t2411*t2413*t2435*t2438*(1.0/3.0);
                double t2554 = t2552+t2553;
                double t2555 = 1.0/(t2435*t2435);
                double t2556 = t2437*t2554*t2555;
                double t2557 = c*t2411*t2413*t2483*t2521*t2518*(1.0/3.0);
                double t2558 = t2556+t2557;
                double t2559 = Ac_2*Ac_3*t2489*t2558;
                double t2560 = t2551+t2559-Ac_3*c*t2411*t2413*t2521*t2518*(2.0/3.0);
                double t2561 = 1.0/(t2393*t2393);
                double t2562 = t2430*t2561;
                double t2563 = t2429+t2562;
                double t2564 = t2523*t2535*t2539;
                double t2565 = t2564-1.0;
                v_rho_b[Q] += scale * t2513+t2393*(-t2474+Ac_1*t2490*t2540*t2543*t2548*(1.0/(t2393*t2393*t2393*t2393*t2393)*t2535*t2539*4.0+t2523*t2535*(d2fz0*t2491*t2533*(t2474-EcF_1*(EcF_2*EcF_3*t2504*(1.0/(t2451*t2451)*t2447*(t2450*t2452*t2492+c*t2411*t2413*t2451*t2453*(1.0/3.0))+c*t2411*t2413*t2461*t2455*t2500*(1.0/3.0))+t2445*t2447*t2448*(c*t2411*t2453*(1.0/3.0)-c*t2394*t2450*t2452)-EcF_3*c*t2411*t2413*t2461*t2455*(2.0/3.0)))-d2fz0*1.0/(t2490*t2490)*t2491*t2560*t2534)+t2430*t2522*t2523*t2539*4.0)+Ac_1*t2490*t2540*t2543*t2565*(pow(t2544,1.0/3.0)*t2563*(4.0/3.0)-t2563*pow(t2546,1.0/3.0)*(4.0/3.0))+Ac_1*t2540*t2560*t2543*t2565*t2548)-Ac_1*t2490*t2540*t2543*t2565*t2548;
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t2572 = rho_a+rho_b;
                double t2573 = 1.0/pow(t2572,1.0/3.0);
                double t2574 = c*t2573;
                double t2575 = 1.0/pow(t2572,4.0/3.0);
                double t2576 = sqrt(t2574);
                double t2577 = EcP_3*t2576;
                double t2578 = EcP_4+t2574+t2577;
                double t2579 = c*t2575*(1.0/3.0);
                double t2580 = 1.0/sqrt(t2574);
                double t2581 = EcP_3*c*t2580*t2575*(1.0/6.0);
                double t2582 = t2581+t2579;
                double t2583 = 1.0/c;
                double t2584 = 1.0/t2578;
                double t2585 = c*t2575*t2584*(1.0/3.0);
                double t2586 = 1.0/(t2578*t2578);
                double t2720 = c*t2573*t2582*t2586;
                double t2587 = t2585-t2720;
                double t2588 = pow(t2572,1.0/3.0);
                double t2589 = 1.0/pow(t2572,7.0/3.0);
                double t2590 = EcP_2-t2576;
                double t2591 = 1.0/(t2590*t2590);
                double t2592 = t2590*t2590;
                double t2593 = c*t2589*(4.0/9.0);
                double t2594 = EcP_3*c*t2580*t2589*(2.0/9.0);
                double t2595 = c*c;
                double t2596 = 1.0/pow(t2572,8.0/3.0);
                double t2597 = 1.0/pow(t2574,3.0/2.0);
                double t2723 = EcP_3*t2595*t2596*t2597*(1.0/3.6E1);
                double t2598 = t2593+t2594-t2723;
                double t2599 = t2582*t2582;
                double t2600 = 1.0/(t2578*t2578*t2578);
                double t2601 = t2576*2.0;
                double t2602 = EcP_3+t2601;
                double t2603 = EcP_2*4.0;
                double t2604 = EcP_3*2.0;
                double t2605 = t2603+t2604;
                double t2606 = 1.0/(t2602*t2602);
                double t2607 = EcP_4*4.0;
                double t2608 = EcP_3*EcP_3;
                double t2609 = t2607-t2608;
                double t2610 = t2606*t2609;
                double t2611 = t2610+1.0;
                double t2612 = 1.0/t2611;
                double t2613 = t2582*t2592*t2586;
                double t2614 = c*t2580*t2590*t2575*t2584*(1.0/3.0);
                double t2615 = t2613+t2614;
                double t2616 = 1.0/(t2602*t2602*t2602);
                double t2617 = 1.0/(t2602*t2602*t2602*t2602*t2602);
                double t2618 = 1.0/(t2611*t2611);
                double t2619 = rho_a-rho_b;
                double t2620 = t2619*t2619;
                double t2621 = EcF_4*4.0;
                double t2622 = EcF_3*EcF_3;
                double t2623 = t2621-t2622;
                double t2624 = EcF_2-t2576;
                double t2625 = EcF_3*t2576;
                double t2626 = EcF_4+t2574+t2625;
                double t2627 = 1.0/t2626;
                double t2628 = sqrt(t2623);
                double t2629 = EcF_3+t2601;
                double t2630 = 1.0/t2629;
                double t2631 = t2630*t2628;
                double t2632 = atan(t2631);
                double t2633 = 1.0/sqrt(t2623);
                double t2634 = sqrt(t2609);
                double t2635 = 1.0/t2602;
                double t2636 = t2634*t2635;
                double t2637 = atan(t2636);
                double t2638 = 1.0/sqrt(t2609);
                double t2639 = EcP_2*EcP_2;
                double t2640 = EcP_2*EcP_3;
                double t2641 = EcP_4+t2640+t2639;
                double t2642 = 1.0/t2641;
                double t2643 = Ac_4*4.0;
                double t2644 = Ac_3*Ac_3;
                double t2645 = t2643-t2644;
                double t2646 = Ac_2-t2576;
                double t2647 = Ac_3*t2576;
                double t2648 = Ac_4+t2574+t2647;
                double t2649 = 1.0/t2648;
                double t2650 = sqrt(t2645);
                double t2651 = Ac_3+t2601;
                double t2652 = 1.0/t2651;
                double t2653 = t2650*t2652;
                double t2654 = atan(t2653);
                double t2655 = 1.0/sqrt(t2645);
                double t2656 = c*t2573*t2649;
                double t2657 = log(t2656);
                double t2658 = Ac_3*t2654*t2655*2.0;
                double t2659 = t2646*t2646;
                double t2660 = t2649*t2659;
                double t2661 = log(t2660);
                double t2662 = Ac_2*4.0;
                double t2663 = Ac_3*2.0;
                double t2664 = t2662+t2663;
                double t2665 = t2654*t2655*t2664;
                double t2666 = t2661+t2665;
                double t2667 = Ac_2*Ac_2;
                double t2668 = Ac_2*Ac_3;
                double t2669 = Ac_4+t2667+t2668;
                double t2670 = 1.0/t2669;
                double t2687 = Ac_2*Ac_3*t2670*t2666;
                double t2671 = t2657+t2658-t2687;
                double t2672 = 1.0/t2572;
                double t2673 = t2672*t2619;
                double t2674 = 1.0/(t2572*t2572);
                double t2675 = t2674*2.0;
                double t2676 = 1.0/(t2572*t2572*t2572);
                double t2677 = t2675-t2619*t2676*2.0;
                double t2678 = t2673+1.0;
                double t2681 = t2619*t2674;
                double t2679 = t2672-t2681;
                double t2680 = -t2673+1.0;
                double t2682 = t2679*t2679;
                double t2683 = 1.0/d2fz0;
                double t2684 = two_13*2.0;
                double t2685 = t2684-2.0;
                double t2686 = 1.0/t2685;
                double t2688 = 1.0/(t2572*t2572*t2572*t2572);
                double t2689 = t2620*t2620;
                double t2690 = 1.0/Ac_1;
                double t2691 = EcF_3*c*t2580*t2575*(1.0/6.0);
                double t2692 = t2579+t2691;
                double t2693 = c*t2575*t2627*(1.0/3.0);
                double t2694 = 1.0/(t2626*t2626);
                double t2744 = c*t2573*t2692*t2694;
                double t2695 = t2693-t2744;
                double t2696 = 1.0/pow(t2572,2.0/3.0);
                double t2697 = EcF_2*EcF_2;
                double t2698 = EcF_2*EcF_3;
                double t2699 = EcF_4+t2697+t2698;
                double t2700 = 1.0/t2699;
                double t2701 = t2624*t2624;
                double t2702 = 1.0/(t2624*t2624);
                double t2703 = EcF_3*c*t2580*t2589*(2.0/9.0);
                double t2704 = t2593+t2703-EcF_3*t2595*t2596*t2597*(1.0/3.6E1);
                double t2705 = t2692*t2692;
                double t2706 = 1.0/(t2626*t2626*t2626);
                double t2707 = EcF_2*4.0;
                double t2708 = EcF_3*2.0;
                double t2709 = t2707+t2708;
                double t2710 = 1.0/(t2629*t2629);
                double t2711 = t2623*t2710;
                double t2712 = t2711+1.0;
                double t2713 = 1.0/t2712;
                double t2714 = t2692*t2694*t2701;
                double t2715 = c*t2580*t2575*t2624*t2627*(1.0/3.0);
                double t2716 = t2714+t2715;
                double t2717 = 1.0/(t2629*t2629*t2629);
                double t2718 = 1.0/(t2629*t2629*t2629*t2629*t2629);
                double t2719 = 1.0/(t2712*t2712);
                double t2721 = t2582*t2583*t2587*t2588;
                double t2722 = c*t2584*t2589*(4.0/9.0);
                double t2724 = c*t2573*t2599*t2600*2.0;
                double t2725 = t2722+t2724-c*t2582*t2575*t2586*(2.0/3.0)-c*t2573*t2586*t2598;
                double t2726 = t2583*t2578*t2588*t2725;
                double t2727 = t2582*t2591*t2615;
                double t2728 = c*t2584*t2589*(1.0/1.8E1);
                double t2729 = t2592*t2599*t2600*2.0;
                double t2730 = t2590*t2584*t2595*t2596*t2597*(1.0/1.8E1);
                double t2731 = c*t2580*t2590*t2582*t2575*t2586*(2.0/3.0);
                double t2732 = t2730+t2731+t2728+t2729-t2592*t2586*t2598-c*t2580*t2590*t2584*t2589*(4.0/9.0);
                double t2733 = c*t2580*t2589*t2612*t2605*t2606*(4.0/9.0);
                double t2734 = 1.0/(t2590*t2590*t2590);
                double t2735 = c*t2580*t2575*t2578*t2615*t2734*(1.0/3.0);
                double t2736 = c*t2589*t2605*t2617*t2609*t2618*(2.0/9.0);
                double t2737 = t2733+t2735+t2727+t2736-t2591*t2578*t2732-c*t2589*t2612*t2605*t2616*(2.0/9.0)-t2595*t2596*t2597*t2612*t2605*t2606*(1.0/1.8E1);
                double t2738 = EcP_2*EcP_3*t2642*t2737;
                double t2739 = EcP_3*c*t2589*t2612*t2616*(4.0/9.0);
                double t2740 = EcP_3*t2595*t2596*t2597*t2612*t2606*(1.0/9.0);
                double t2741 = t2721+t2740+t2726+t2738+t2739-t2583*t2578*t2587*t2696*(1.0/3.0)-EcP_3*c*t2580*t2589*t2612*t2606*(8.0/9.0)-EcP_3*c*t2589*t2617*t2609*t2618*(4.0/9.0);
                double t2742 = EcP_1*t2741;
                double t2743 = 1.0/t2671;
                double t2745 = Ac_3*c*t2580*t2575*(1.0/6.0);
                double t2746 = t2579+t2745;
                double t2747 = 1.0/(t2648*t2648);
                double t2748 = 1.0/(t2651*t2651);
                double t2749 = t2645*t2748;
                double t2750 = t2749+1.0;
                double t2751 = 1.0/t2750;
                double t2752 = c*t2573*t2627;
                double t2753 = log(t2752);
                double t2754 = EcF_3*t2632*t2633*2.0;
                double t2755 = t2627*t2701;
                double t2756 = log(t2755);
                double t2757 = t2632*t2633*t2709;
                double t2758 = t2756+t2757;
                double t2782 = EcF_2*EcF_3*t2700*t2758;
                double t2759 = t2753+t2754-t2782;
                double t2760 = EcF_1*t2759;
                double t2761 = c*t2573*t2584;
                double t2762 = log(t2761);
                double t2763 = EcP_3*t2637*t2638*2.0;
                double t2764 = t2592*t2584;
                double t2765 = log(t2764);
                double t2766 = t2605*t2637*t2638;
                double t2767 = t2765+t2766;
                double t2783 = EcP_2*EcP_3*t2642*t2767;
                double t2768 = t2762+t2763-t2783;
                double t2784 = EcP_1*t2768;
                double t2769 = t2760-t2784;
                double t2770 = c*t2575*t2649*(1.0/3.0);
                double t2786 = c*t2573*t2746*t2747;
                double t2771 = t2770-t2786;
                double t2772 = t2583*t2588*t2648*t2771;
                double t2773 = t2659*t2746*t2747;
                double t2774 = c*t2580*t2575*t2646*t2649*(1.0/3.0);
                double t2775 = t2773+t2774;
                double t2776 = 1.0/(t2646*t2646);
                double t2777 = t2648*t2775*t2776;
                double t2778 = c*t2580*t2575*t2664*t2751*t2748*(1.0/3.0);
                double t2779 = t2777+t2778;
                double t2780 = Ac_2*Ac_3*t2670*t2779;
                double t2808 = Ac_3*c*t2580*t2575*t2751*t2748*(2.0/3.0);
                double t2781 = t2780+t2772-t2808;
                double t2785 = 1.0/(t2671*t2671);
                double t2787 = Ac_3*c*t2580*t2589*(2.0/9.0);
                double t2831 = Ac_3*t2595*t2596*t2597*(1.0/3.6E1);
                double t2788 = t2593+t2787-t2831;
                double t2789 = t2746*t2746;
                double t2790 = 1.0/(t2648*t2648*t2648);
                double t2791 = 1.0/(t2651*t2651*t2651);
                double t2792 = 1.0/(t2651*t2651*t2651*t2651*t2651);
                double t2793 = 1.0/(t2750*t2750);
                double t2794 = t2583*t2588*t2626*t2695;
                double t2795 = t2626*t2702*t2716;
                double t2796 = c*t2580*t2575*t2710*t2713*t2709*(1.0/3.0);
                double t2797 = t2795+t2796;
                double t2798 = EcF_2*EcF_3*t2700*t2797;
                double t2809 = EcF_3*c*t2580*t2575*t2710*t2713*(2.0/3.0);
                double t2799 = t2794+t2798-t2809;
                double t2800 = EcF_1*t2799;
                double t2801 = t2583*t2578*t2587*t2588;
                double t2802 = t2591*t2578*t2615;
                double t2803 = c*t2580*t2575*t2612*t2605*t2606*(1.0/3.0);
                double t2804 = t2802+t2803;
                double t2805 = EcP_2*EcP_3*t2642*t2804;
                double t2810 = EcP_3*c*t2580*t2575*t2612*t2606*(2.0/3.0);
                double t2806 = t2801-t2810+t2805;
                double t2811 = EcP_1*t2806;
                double t2807 = t2800-t2811;
                double t2812 = d2fz0*t2690*t2743*t2807;
                double t2819 = d2fz0*t2690*t2781*t2785*t2769;
                double t2813 = t2812-t2819;
                double t2814 = d2fz0*t2690*t2743*t2769;
                double t2815 = t2814-1.0;
                double t2816 = 1.0/(t2572*t2572*t2572*t2572*t2572);
                double t2817 = pow(t2678,1.0/3.0);
                double t2818 = pow(t2680,1.0/3.0);
                double t2820 = t2679*t2817*(4.0/3.0);
                double t2852 = t2679*t2818*(4.0/3.0);
                double t2821 = t2820-t2852;
                double t2822 = t2688*t2689*t2815;
                double t2823 = t2822+1.0;
                double t2824 = pow(t2678,4.0/3.0);
                double t2825 = pow(t2680,4.0/3.0);
                double t2826 = t2824+t2825-2.0;
                double t2827 = t2688*t2689*t2813;
                double t2828 = t2689*t2815*t2816*4.0;
                double t2851 = t2620*t2619*t2688*t2815*4.0;
                double t2829 = -t2851+t2827+t2828;
                double t2830 = c*t2589*t2649*(4.0/9.0);
                double t2832 = c*t2573*t2790*t2789*2.0;
                double t2833 = t2830+t2832-c*t2575*t2746*t2747*(2.0/3.0)-c*t2573*t2747*t2788;
                double t2834 = t2583*t2588*t2648*t2833;
                double t2835 = t2746*t2775*t2776;
                double t2836 = c*t2589*t2649*(1.0/1.8E1);
                double t2837 = t2659*t2790*t2789*2.0;
                double t2838 = t2595*t2596*t2597*t2646*t2649*(1.0/1.8E1);
                double t2839 = c*t2580*t2575*t2646*t2746*t2747*(2.0/3.0);
                double t2840 = t2836+t2837+t2838+t2839-t2659*t2747*t2788-c*t2580*t2589*t2646*t2649*(4.0/9.0);
                double t2841 = c*t2580*t2589*t2664*t2751*t2748*(4.0/9.0);
                double t2842 = 1.0/(t2646*t2646*t2646);
                double t2843 = c*t2580*t2575*t2648*t2775*t2842*(1.0/3.0);
                double t2844 = c*t2589*t2645*t2664*t2792*t2793*(2.0/9.0);
                double t2845 = t2841+t2843+t2835+t2844-t2648*t2776*t2840-c*t2589*t2664*t2751*t2791*(2.0/9.0)-t2595*t2596*t2597*t2664*t2751*t2748*(1.0/1.8E1);
                double t2846 = Ac_2*Ac_3*t2670*t2845;
                double t2847 = t2583*t2588*t2771*t2746;
                double t2848 = Ac_3*c*t2589*t2751*t2791*(4.0/9.0);
                double t2849 = Ac_3*t2595*t2596*t2597*t2751*t2748*(1.0/9.0);
                double t2850 = t2834+t2846+t2847+t2848+t2849-t2583*t2648*t2696*t2771*(1.0/3.0)-Ac_3*c*t2580*t2589*t2751*t2748*(8.0/9.0)-Ac_3*c*t2589*t2645*t2792*t2793*(4.0/9.0);
                v_rho_a_rho_a[Q] += scale * EcP_1*t2806*-2.0+t2572*(t2742+Ac_1*t2671*t2683*t2686*t2826*(1.0/(t2572*t2572*t2572*t2572*t2572*t2572)*t2689*t2815*2.0E1+t2620*t2688*t2815*1.2E1+t2689*t2813*t2816*8.0-t2688*t2689*(d2fz0*t2690*t2743*(t2742-EcF_1*(t2583*t2588*t2626*(c*t2589*t2627*(4.0/9.0)-c*t2575*t2692*t2694*(2.0/3.0)-c*t2573*t2694*t2704+c*t2573*t2705*t2706*2.0)+t2583*t2588*t2692*t2695-t2583*t2626*t2695*t2696*(1.0/3.0)+EcF_2*EcF_3*t2700*(-t2626*t2702*(c*t2589*t2627*(1.0/1.8E1)-t2694*t2701*t2704+t2701*t2705*t2706*2.0-c*t2580*t2589*t2624*t2627*(4.0/9.0)+t2595*t2596*t2597*t2624*t2627*(1.0/1.8E1)+c*t2580*t2575*t2624*t2692*t2694*(2.0/3.0))+t2692*t2702*t2716-c*t2589*t2713*t2717*t2709*(2.0/9.0)+c*t2580*t2589*t2710*t2713*t2709*(4.0/9.0)+c*t2589*t2623*t2709*t2718*t2719*(2.0/9.0)-t2595*t2596*t2597*t2710*t2713*t2709*(1.0/1.8E1)+c*t2580*t2575*1.0/(t2624*t2624*t2624)*t2626*t2716*(1.0/3.0))+EcF_3*c*t2589*t2713*t2717*(4.0/9.0)-EcF_3*c*t2580*t2589*t2710*t2713*(8.0/9.0)-EcF_3*c*t2589*t2623*t2718*t2719*(4.0/9.0)+EcF_3*t2595*t2596*t2597*t2710*t2713*(1.0/9.0)))-d2fz0*1.0/(t2671*t2671*t2671)*t2690*(t2781*t2781)*t2769*2.0+d2fz0*t2690*t2781*t2785*t2807*2.0+d2fz0*t2690*t2785*t2769*t2850)-t2620*t2619*t2688*t2813*8.0-t2620*t2619*t2815*t2816*3.2E1)+Ac_1*t2671*t2683*t2686*t2823*(t2677*t2817*(-4.0/3.0)+t2677*t2818*(4.0/3.0)+1.0/pow(t2680,2.0/3.0)*t2682*(4.0/9.0)+t2682*1.0/pow(t2678,2.0/3.0)*(4.0/9.0))-Ac_1*t2671*t2683*t2686*t2821*t2829*2.0-Ac_1*t2683*t2686*t2781*t2821*t2823*2.0+Ac_1*t2683*t2686*t2781*t2826*t2829*2.0+Ac_1*t2683*t2686*t2823*t2850*t2826)+Ac_1*t2671*t2683*t2686*t2821*t2823*2.0-Ac_1*t2671*t2683*t2686*t2826*t2829*2.0-Ac_1*t2683*t2686*t2781*t2823*t2826*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t2854 = rho_a+rho_b;
                double t2855 = 1.0/pow(t2854,1.0/3.0);
                double t2856 = c*t2855;
                double t2857 = 1.0/pow(t2854,4.0/3.0);
                double t2858 = sqrt(t2856);
                double t2859 = EcP_3*t2858;
                double t2860 = EcP_4+t2856+t2859;
                double t2861 = c*t2857*(1.0/3.0);
                double t2862 = 1.0/sqrt(t2856);
                double t2863 = EcP_3*c*t2862*t2857*(1.0/6.0);
                double t2864 = t2861+t2863;
                double t2865 = EcP_2-t2858;
                double t2866 = 1.0/(t2860*t2860);
                double t2867 = 1.0/t2860;
                double t2868 = t2858*2.0;
                double t2869 = EcP_3+t2868;
                double t2870 = 1.0/(t2869*t2869);
                double t2871 = EcP_4*4.0;
                double t2872 = EcP_3*EcP_3;
                double t2873 = t2871-t2872;
                double t2874 = t2870*t2873;
                double t2875 = t2874+1.0;
                double t2876 = 1.0/t2875;
                double t2877 = 1.0/c;
                double t2878 = c*t2857*t2867*(1.0/3.0);
                double t2881 = c*t2855*t2864*t2866;
                double t2879 = -t2881+t2878;
                double t2880 = pow(t2854,1.0/3.0);
                double t2882 = 1.0/pow(t2854,7.0/3.0);
                double t2883 = EcP_2*EcP_2;
                double t2884 = EcP_2*EcP_3;
                double t2885 = EcP_4+t2883+t2884;
                double t2886 = 1.0/t2885;
                double t2887 = t2865*t2865;
                double t2888 = t2864*t2866*t2887;
                double t2889 = c*t2862*t2865*t2857*t2867*(1.0/3.0);
                double t2890 = t2888+t2889;
                double t2891 = 1.0/(t2865*t2865);
                double t2892 = c*t2882*(4.0/9.0);
                double t2893 = EcP_3*c*t2862*t2882*(2.0/9.0);
                double t2894 = c*c;
                double t2895 = 1.0/pow(t2854,8.0/3.0);
                double t2896 = 1.0/pow(t2856,3.0/2.0);
                double t3085 = EcP_3*t2894*t2895*t2896*(1.0/3.6E1);
                double t2897 = t2892+t2893-t3085;
                double t2898 = t2864*t2864;
                double t2899 = 1.0/(t2860*t2860*t2860);
                double t2900 = EcP_2*4.0;
                double t2901 = EcP_3*2.0;
                double t2902 = t2900+t2901;
                double t2903 = 1.0/(t2869*t2869*t2869);
                double t2904 = 1.0/(t2869*t2869*t2869*t2869*t2869);
                double t2905 = 1.0/(t2875*t2875);
                double t2906 = rho_a-rho_b;
                double t2907 = t2906*t2906;
                double t2908 = EcF_4*4.0;
                double t2909 = EcF_3*EcF_3;
                double t2910 = t2908-t2909;
                double t2911 = EcF_2-t2858;
                double t2912 = EcF_3*t2858;
                double t2913 = EcF_4+t2856+t2912;
                double t2914 = 1.0/t2913;
                double t2915 = sqrt(t2910);
                double t2916 = EcF_3+t2868;
                double t2917 = 1.0/t2916;
                double t2918 = t2915*t2917;
                double t2919 = atan(t2918);
                double t2920 = 1.0/sqrt(t2910);
                double t2921 = sqrt(t2873);
                double t2922 = 1.0/t2869;
                double t2923 = t2921*t2922;
                double t2924 = atan(t2923);
                double t2925 = 1.0/sqrt(t2873);
                double t2926 = Ac_4*4.0;
                double t2927 = Ac_3*Ac_3;
                double t2928 = t2926-t2927;
                double t2929 = Ac_2-t2858;
                double t2930 = Ac_3*t2858;
                double t2931 = Ac_4+t2856+t2930;
                double t2932 = 1.0/t2931;
                double t2933 = sqrt(t2928);
                double t2934 = Ac_3+t2868;
                double t2935 = 1.0/t2934;
                double t2936 = t2933*t2935;
                double t2937 = atan(t2936);
                double t2938 = 1.0/sqrt(t2928);
                double t2939 = c*t2855*t2932;
                double t2940 = log(t2939);
                double t2941 = Ac_3*t2937*t2938*2.0;
                double t2942 = t2929*t2929;
                double t2943 = t2932*t2942;
                double t2944 = log(t2943);
                double t2945 = Ac_2*4.0;
                double t2946 = Ac_3*2.0;
                double t2947 = t2945+t2946;
                double t2948 = t2937*t2938*t2947;
                double t2949 = t2944+t2948;
                double t2950 = Ac_2*Ac_2;
                double t2951 = Ac_2*Ac_3;
                double t2952 = Ac_4+t2950+t2951;
                double t2953 = 1.0/t2952;
                double t2970 = Ac_2*Ac_3*t2953*t2949;
                double t2954 = t2940+t2941-t2970;
                double t2955 = 1.0/t2854;
                double t2956 = t2906*t2955;
                double t2957 = 1.0/(t2854*t2854*t2854);
                double t2958 = t2956+1.0;
                double t2959 = 1.0/(t2854*t2854);
                double t2960 = t2906*t2959;
                double t2961 = -t2956+1.0;
                double t2962 = t2960+t2955;
                double t2963 = t2960-t2955;
                double t2964 = 1.0/d2fz0;
                double t2965 = two_13*2.0;
                double t2966 = t2965-2.0;
                double t2967 = 1.0/t2966;
                double t2968 = pow(t2958,1.0/3.0);
                double t2969 = pow(t2961,1.0/3.0);
                double t2971 = 1.0/(t2854*t2854*t2854*t2854);
                double t2972 = 1.0/Ac_1;
                double t2973 = EcF_3*c*t2862*t2857*(1.0/6.0);
                double t2974 = t2861+t2973;
                double t2975 = t2911*t2911;
                double t2976 = 1.0/(t2913*t2913);
                double t2977 = EcF_2*4.0;
                double t2978 = EcF_3*2.0;
                double t2979 = t2977+t2978;
                double t2980 = 1.0/(t2916*t2916);
                double t2981 = EcF_2*EcF_2;
                double t2982 = EcF_2*EcF_3;
                double t2983 = EcF_4+t2981+t2982;
                double t2984 = 1.0/t2983;
                double t2985 = t2910*t2980;
                double t2986 = t2985+1.0;
                double t2987 = 1.0/t2986;
                double t2988 = t2860*t2880*t2877*t2879;
                double t2989 = t2860*t2890*t2891;
                double t2990 = c*t2870*t2862*t2857*t2876*t2902*(1.0/3.0);
                double t2991 = t2990+t2989;
                double t2992 = EcP_2*EcP_3*t2886*t2991;
                double t3038 = EcP_3*c*t2870*t2862*t2857*t2876*(2.0/3.0);
                double t2993 = t2992+t2988-t3038;
                double t2994 = 1.0/t2954;
                double t2995 = c*t2855*t2914;
                double t2996 = log(t2995);
                double t2997 = EcF_3*t2920*t2919*2.0;
                double t2998 = t2914*t2975;
                double t2999 = log(t2998);
                double t3000 = t2920*t2919*t2979;
                double t3001 = t2999+t3000;
                double t3021 = EcF_2*EcF_3*t2984*t3001;
                double t3002 = t2996+t2997-t3021;
                double t3003 = EcF_1*t3002;
                double t3004 = c*t2855*t2867;
                double t3005 = log(t3004);
                double t3006 = EcP_3*t2924*t2925*2.0;
                double t3007 = t2867*t2887;
                double t3008 = log(t3007);
                double t3009 = t2902*t2924*t2925;
                double t3010 = t3008+t3009;
                double t3022 = EcP_2*EcP_3*t2886*t3010;
                double t3011 = -t3022+t3005+t3006;
                double t3023 = EcP_1*t3011;
                double t3012 = t3003-t3023;
                double t3013 = Ac_3*c*t2862*t2857*(1.0/6.0);
                double t3014 = t2861+t3013;
                double t3015 = 1.0/(t2931*t2931);
                double t3016 = 1.0/(t2934*t2934);
                double t3017 = t2928*t3016;
                double t3018 = t3017+1.0;
                double t3019 = 1.0/t3018;
                double t3020 = t2907*t2907;
                double t3024 = d2fz0*t2972*t2994*t3012;
                double t3025 = t3024-1.0;
                double t3026 = c*t2857*t2914*(1.0/3.0);
                double t3067 = c*t2855*t2974*t2976;
                double t3027 = t3026-t3067;
                double t3028 = t2880*t2877*t2913*t3027;
                double t3029 = t2974*t2975*t2976;
                double t3030 = c*t2862*t2857*t2911*t2914*(1.0/3.0);
                double t3031 = t3030+t3029;
                double t3032 = 1.0/(t2911*t2911);
                double t3033 = t2913*t3031*t3032;
                double t3034 = c*t2862*t2857*t2980*t2987*t2979*(1.0/3.0);
                double t3035 = t3033+t3034;
                double t3036 = EcF_2*EcF_3*t2984*t3035;
                double t3068 = EcF_3*c*t2862*t2857*t2980*t2987*(2.0/3.0);
                double t3037 = t3036+t3028-t3068;
                double t3039 = EcP_1*t2993;
                double t3069 = EcF_1*t3037;
                double t3040 = t3039-t3069;
                double t3041 = d2fz0*t2972*t2994*t3040;
                double t3042 = 1.0/(t2954*t2954);
                double t3043 = c*t2857*t2932*(1.0/3.0);
                double t3064 = c*t2855*t3014*t3015;
                double t3044 = t3043-t3064;
                double t3045 = t2880*t2877*t2931*t3044;
                double t3046 = t2942*t3014*t3015;
                double t3047 = c*t2862*t2857*t2932*t2929*(1.0/3.0);
                double t3048 = t3046+t3047;
                double t3049 = 1.0/(t2929*t2929);
                double t3050 = t2931*t3048*t3049;
                double t3051 = c*t2862*t2857*t2947*t3016*t3019*(1.0/3.0);
                double t3052 = t3050+t3051;
                double t3053 = Ac_2*Ac_3*t2953*t3052;
                double t3065 = Ac_3*c*t2862*t2857*t3016*t3019*(2.0/3.0);
                double t3054 = t3053+t3045-t3065;
                double t3055 = d2fz0*t2972*t3012*t3042*t3054;
                double t3056 = t3041+t3055;
                double t3057 = t2971*t3020*t3056;
                double t3058 = t2906*t2907*t2971*t3025*4.0;
                double t3059 = 1.0/(t2854*t2854*t2854*t2854*t2854);
                double t3060 = t2962*t2968*(4.0/3.0);
                double t3133 = t2962*t2969*(4.0/3.0);
                double t3061 = t3060-t3133;
                double t3062 = t2971*t3020*t3025;
                double t3063 = t3062+1.0;
                double t3066 = t2963*t2968*(4.0/3.0);
                double t3070 = t3020*t3025*t3059*4.0;
                double t3071 = pow(t2958,4.0/3.0);
                double t3072 = pow(t2961,4.0/3.0);
                double t3073 = t3071+t3072-2.0;
                double t3074 = t3070-t3057+t3058;
                double t3075 = 1.0/pow(t2854,2.0/3.0);
                double t3076 = EcF_3*c*t2862*t2882*(2.0/9.0);
                double t3077 = t2892+t3076-EcF_3*t2894*t2895*t2896*(1.0/3.6E1);
                double t3078 = t2974*t2974;
                double t3079 = 1.0/(t2913*t2913*t2913);
                double t3080 = 1.0/(t2916*t2916*t2916);
                double t3081 = 1.0/(t2916*t2916*t2916*t2916*t2916);
                double t3082 = 1.0/(t2986*t2986);
                double t3083 = t2880*t2864*t2877*t2879;
                double t3084 = c*t2882*t2867*(4.0/9.0);
                double t3086 = c*t2855*t2898*t2899*2.0;
                double t3087 = t3084+t3086-c*t2864*t2857*t2866*(2.0/3.0)-c*t2855*t2866*t2897;
                double t3088 = t2860*t2880*t2877*t3087;
                double t3089 = t2890*t2864*t2891;
                double t3090 = c*t2882*t2867*(1.0/1.8E1);
                double t3091 = t2887*t2898*t2899*2.0;
                double t3092 = t2865*t2867*t2894*t2895*t2896*(1.0/1.8E1);
                double t3093 = c*t2862*t2864*t2865*t2857*t2866*(2.0/3.0);
                double t3094 = t3090+t3091+t3092+t3093-t2866*t2887*t2897-c*t2862*t2882*t2865*t2867*(4.0/9.0);
                double t3095 = c*t2870*t2862*t2882*t2876*t2902*(4.0/9.0);
                double t3096 = 1.0/(t2865*t2865*t2865);
                double t3097 = c*t2860*t2862*t2890*t2857*t3096*(1.0/3.0);
                double t3098 = c*t2873*t2882*t2902*t2904*t2905*(2.0/9.0);
                double t3099 = t3095+t3097+t3089+t3098-t2860*t2891*t3094-c*t2882*t2876*t2902*t2903*(2.0/9.0)-t2870*t2876*t2894*t2895*t2896*t2902*(1.0/1.8E1);
                double t3100 = EcP_2*EcP_3*t2886*t3099;
                double t3101 = EcP_3*c*t2882*t2876*t2903*(4.0/9.0);
                double t3102 = EcP_3*t2870*t2876*t2894*t2895*t2896*(1.0/9.0);
                double t3103 = t3083+t3088+t3100+t3101+t3102-t2860*t2877*t2879*t3075*(1.0/3.0)-EcP_3*c*t2870*t2862*t2882*t2876*(8.0/9.0)-EcP_3*c*t2873*t2882*t2904*t2905*(4.0/9.0);
                double t3104 = EcP_1*t3103;
                double t3105 = Ac_3*c*t2862*t2882*(2.0/9.0);
                double t3113 = Ac_3*t2894*t2895*t2896*(1.0/3.6E1);
                double t3106 = t2892-t3113+t3105;
                double t3107 = t3014*t3014;
                double t3108 = 1.0/(t2931*t2931*t2931);
                double t3109 = 1.0/(t2934*t2934*t2934);
                double t3110 = 1.0/(t2934*t2934*t2934*t2934*t2934);
                double t3111 = 1.0/(t3018*t3018);
                double t3112 = c*t2882*t2932*(4.0/9.0);
                double t3114 = c*t2855*t3107*t3108*2.0;
                double t3115 = t3112+t3114-c*t2857*t3014*t3015*(2.0/3.0)-c*t2855*t3015*t3106;
                double t3116 = t2880*t2877*t2931*t3115;
                double t3117 = t3014*t3048*t3049;
                double t3118 = c*t2882*t2932*(1.0/1.8E1);
                double t3119 = t2942*t3107*t3108*2.0;
                double t3120 = t2894*t2895*t2896*t2932*t2929*(1.0/1.8E1);
                double t3121 = c*t2862*t2857*t2929*t3014*t3015*(2.0/3.0);
                double t3122 = t3120+t3121+t3118+t3119-t2942*t3015*t3106-c*t2862*t2882*t2932*t2929*(4.0/9.0);
                double t3123 = c*t2862*t2882*t2947*t3016*t3019*(4.0/9.0);
                double t3124 = 1.0/(t2929*t2929*t2929);
                double t3125 = c*t2862*t2857*t2931*t3048*t3124*(1.0/3.0);
                double t3126 = c*t2882*t2928*t2947*t3110*t3111*(2.0/9.0);
                double t3127 = t3123+t3125+t3117+t3126-t2931*t3049*t3122-c*t2882*t2947*t3019*t3109*(2.0/9.0)-t2894*t2895*t2896*t2947*t3016*t3019*(1.0/1.8E1);
                double t3128 = Ac_2*Ac_3*t2953*t3127;
                double t3129 = t2880*t2877*t3014*t3044;
                double t3130 = Ac_3*c*t2882*t3019*t3109*(4.0/9.0);
                double t3131 = Ac_3*t2894*t2895*t2896*t3016*t3019*(1.0/9.0);
                double t3132 = t3130+t3131+t3116+t3128+t3129-t2877*t2931*t3044*t3075*(1.0/3.0)-Ac_3*c*t2862*t2882*t3016*t3019*(8.0/9.0)-Ac_3*c*t2882*t2928*t3110*t3111*(4.0/9.0);
                v_rho_a_rho_b[Q] += scale * EcP_1*t2993*-2.0+t2854*(t3104-Ac_1*t2954*t2964*t2967*t3073*(1.0/(t2854*t2854*t2854*t2854*t2854*t2854)*t3020*t3025*-2.0E1+t2907*t2971*t3025*1.2E1+t3020*t3056*t3059*8.0+t2971*t3020*(d2fz0*t2972*t2994*(t3104-EcF_1*(t2880*t2877*t2913*(c*t2882*t2914*(4.0/9.0)-c*t2857*t2974*t2976*(2.0/3.0)-c*t2855*t2976*t3077+c*t2855*t3078*t3079*2.0)+t2880*t2877*t2974*t3027-t2877*t2913*t3027*t3075*(1.0/3.0)+EcF_2*EcF_3*t2984*(-t2913*t3032*(c*t2882*t2914*(1.0/1.8E1)-t2975*t2976*t3077+t2975*t3078*t3079*2.0-c*t2862*t2882*t2911*t2914*(4.0/9.0)+t2894*t2895*t2896*t2911*t2914*(1.0/1.8E1)+c*t2862*t2857*t2911*t2974*t2976*(2.0/3.0))+t2974*t3031*t3032-c*t2882*t2987*t2979*t3080*(2.0/9.0)+c*t2862*t2882*t2980*t2987*t2979*(4.0/9.0)+c*t2882*t2910*t2979*t3081*t3082*(2.0/9.0)-t2894*t2895*t2896*t2980*t2987*t2979*(1.0/1.8E1)+c*t2862*t2857*1.0/(t2911*t2911*t2911)*t2913*t3031*(1.0/3.0))+EcF_3*c*t2882*t2987*t3080*(4.0/9.0)-EcF_3*c*t2862*t2882*t2980*t2987*(8.0/9.0)-EcF_3*c*t2882*t2910*t3081*t3082*(4.0/9.0)+EcF_3*t2894*t2895*t2896*t2980*t2987*(1.0/9.0)))-d2fz0*1.0/(t2954*t2954*t2954)*t2972*t3012*(t3054*t3054)*2.0-d2fz0*t2972*t3040*t3042*t3054*2.0+d2fz0*t2972*t3012*t3042*t3132))-Ac_1*t2954*t2964*t2967*t3061*(t3057+t3058-t3020*t3025*t3059*4.0)+Ac_1*t2954*t2964*t2967*t3063*(1.0/pow(t2961,2.0/3.0)*t2962*t2963*(4.0/9.0)+t2962*t2963*1.0/pow(t2958,2.0/3.0)*(4.0/9.0)+t2906*t2957*t2968*(8.0/3.0)-t2906*t2957*t2969*(8.0/3.0))-Ac_1*t2964*t2967*t3054*t3073*(-t3070+t3057+t3058)+Ac_1*t2954*t2964*t2967*t3074*(t3066-t2969*(t2960-t2955)*(4.0/3.0))+Ac_1*t2964*t2967*t3054*t3063*(t3066-t2969*(t2960-t2955)*(4.0/3.0))+Ac_1*t2964*t2967*t3061*t3054*t3063+Ac_1*t2964*t2967*t3054*t3073*t3074+Ac_1*t2964*t2967*t3063*t3073*t3132)-Ac_1*t2954*t2964*t2967*t3063*(t3066-t2963*t2969*(4.0/3.0))+Ac_1*t2954*t2964*t2967*t3073*(-t3070+t3057+t3058)-Ac_1*t2954*t2964*t2967*t3061*t3063-Ac_1*t2954*t2964*t2967*t3073*t3074-Ac_1*t2964*t2967*t3054*t3063*t3073*2.0;
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t3135 = rho_a+rho_b;
                double t3136 = 1.0/pow(t3135,1.0/3.0);
                double t3137 = c*t3136;
                double t3138 = 1.0/pow(t3135,4.0/3.0);
                double t3139 = sqrt(t3137);
                double t3140 = EcP_3*t3139;
                double t3141 = EcP_4+t3140+t3137;
                double t3142 = c*t3138*(1.0/3.0);
                double t3143 = 1.0/sqrt(t3137);
                double t3144 = EcP_3*c*t3143*t3138*(1.0/6.0);
                double t3145 = t3142+t3144;
                double t3146 = 1.0/c;
                double t3147 = 1.0/t3141;
                double t3148 = c*t3138*t3147*(1.0/3.0);
                double t3149 = 1.0/(t3141*t3141);
                double t3284 = c*t3136*t3145*t3149;
                double t3150 = t3148-t3284;
                double t3151 = pow(t3135,1.0/3.0);
                double t3152 = 1.0/pow(t3135,7.0/3.0);
                double t3153 = EcP_2-t3139;
                double t3154 = 1.0/(t3153*t3153);
                double t3155 = t3153*t3153;
                double t3156 = c*t3152*(4.0/9.0);
                double t3157 = EcP_3*c*t3143*t3152*(2.0/9.0);
                double t3158 = c*c;
                double t3159 = 1.0/pow(t3135,8.0/3.0);
                double t3160 = 1.0/pow(t3137,3.0/2.0);
                double t3287 = EcP_3*t3160*t3158*t3159*(1.0/3.6E1);
                double t3161 = t3156+t3157-t3287;
                double t3162 = t3145*t3145;
                double t3163 = 1.0/(t3141*t3141*t3141);
                double t3164 = t3139*2.0;
                double t3165 = EcP_3+t3164;
                double t3166 = EcP_2*4.0;
                double t3167 = EcP_3*2.0;
                double t3168 = t3166+t3167;
                double t3169 = 1.0/(t3165*t3165);
                double t3170 = EcP_4*4.0;
                double t3171 = EcP_3*EcP_3;
                double t3172 = t3170-t3171;
                double t3173 = t3172*t3169;
                double t3174 = t3173+1.0;
                double t3175 = 1.0/t3174;
                double t3176 = t3145*t3155*t3149;
                double t3177 = c*t3143*t3153*t3138*t3147*(1.0/3.0);
                double t3178 = t3176+t3177;
                double t3179 = 1.0/(t3165*t3165*t3165);
                double t3180 = 1.0/(t3165*t3165*t3165*t3165*t3165);
                double t3181 = 1.0/(t3174*t3174);
                double t3182 = rho_a-rho_b;
                double t3183 = t3182*t3182;
                double t3184 = EcF_4*4.0;
                double t3185 = EcF_3*EcF_3;
                double t3186 = t3184-t3185;
                double t3187 = EcF_2-t3139;
                double t3188 = EcF_3*t3139;
                double t3189 = EcF_4+t3137+t3188;
                double t3190 = 1.0/t3189;
                double t3191 = sqrt(t3186);
                double t3192 = EcF_3+t3164;
                double t3193 = 1.0/t3192;
                double t3194 = t3191*t3193;
                double t3195 = atan(t3194);
                double t3196 = 1.0/sqrt(t3186);
                double t3197 = sqrt(t3172);
                double t3198 = 1.0/t3165;
                double t3199 = t3197*t3198;
                double t3200 = atan(t3199);
                double t3201 = 1.0/sqrt(t3172);
                double t3202 = EcP_2*EcP_2;
                double t3203 = EcP_2*EcP_3;
                double t3204 = EcP_4+t3202+t3203;
                double t3205 = 1.0/t3204;
                double t3206 = Ac_4*4.0;
                double t3207 = Ac_3*Ac_3;
                double t3208 = t3206-t3207;
                double t3209 = Ac_2-t3139;
                double t3210 = Ac_3*t3139;
                double t3211 = Ac_4+t3137+t3210;
                double t3212 = 1.0/t3211;
                double t3213 = sqrt(t3208);
                double t3214 = Ac_3+t3164;
                double t3215 = 1.0/t3214;
                double t3216 = t3213*t3215;
                double t3217 = atan(t3216);
                double t3218 = 1.0/sqrt(t3208);
                double t3219 = c*t3136*t3212;
                double t3220 = log(t3219);
                double t3221 = Ac_3*t3217*t3218*2.0;
                double t3222 = t3209*t3209;
                double t3223 = t3212*t3222;
                double t3224 = log(t3223);
                double t3225 = Ac_2*4.0;
                double t3226 = Ac_3*2.0;
                double t3227 = t3225+t3226;
                double t3228 = t3217*t3218*t3227;
                double t3229 = t3224+t3228;
                double t3230 = Ac_2*Ac_2;
                double t3231 = Ac_2*Ac_3;
                double t3232 = Ac_4+t3230+t3231;
                double t3233 = 1.0/t3232;
                double t3251 = Ac_2*Ac_3*t3233*t3229;
                double t3234 = t3220+t3221-t3251;
                double t3235 = 1.0/t3135;
                double t3236 = t3182*t3235;
                double t3237 = 1.0/(t3135*t3135);
                double t3238 = t3237*2.0;
                double t3239 = 1.0/(t3135*t3135*t3135);
                double t3240 = t3182*t3239*2.0;
                double t3241 = t3240+t3238;
                double t3242 = t3236+1.0;
                double t3245 = t3182*t3237;
                double t3243 = t3235+t3245;
                double t3244 = -t3236+1.0;
                double t3246 = t3243*t3243;
                double t3247 = 1.0/d2fz0;
                double t3248 = two_13*2.0;
                double t3249 = t3248-2.0;
                double t3250 = 1.0/t3249;
                double t3252 = 1.0/(t3135*t3135*t3135*t3135);
                double t3253 = t3183*t3183;
                double t3254 = 1.0/Ac_1;
                double t3255 = EcF_3*c*t3143*t3138*(1.0/6.0);
                double t3256 = t3142+t3255;
                double t3257 = c*t3190*t3138*(1.0/3.0);
                double t3258 = 1.0/(t3189*t3189);
                double t3308 = c*t3136*t3256*t3258;
                double t3259 = t3257-t3308;
                double t3260 = 1.0/pow(t3135,2.0/3.0);
                double t3261 = EcF_2*EcF_2;
                double t3262 = EcF_2*EcF_3;
                double t3263 = EcF_4+t3261+t3262;
                double t3264 = 1.0/t3263;
                double t3265 = t3187*t3187;
                double t3266 = 1.0/(t3187*t3187);
                double t3267 = EcF_3*c*t3143*t3152*(2.0/9.0);
                double t3268 = t3156+t3267-EcF_3*t3160*t3158*t3159*(1.0/3.6E1);
                double t3269 = t3256*t3256;
                double t3270 = 1.0/(t3189*t3189*t3189);
                double t3271 = EcF_2*4.0;
                double t3272 = EcF_3*2.0;
                double t3273 = t3271+t3272;
                double t3274 = 1.0/(t3192*t3192);
                double t3275 = t3186*t3274;
                double t3276 = t3275+1.0;
                double t3277 = 1.0/t3276;
                double t3278 = t3256*t3265*t3258;
                double t3279 = c*t3143*t3190*t3138*t3187*(1.0/3.0);
                double t3280 = t3278+t3279;
                double t3281 = 1.0/(t3192*t3192*t3192);
                double t3282 = 1.0/(t3192*t3192*t3192*t3192*t3192);
                double t3283 = 1.0/(t3276*t3276);
                double t3285 = t3150*t3151*t3145*t3146;
                double t3286 = c*t3152*t3147*(4.0/9.0);
                double t3288 = c*t3162*t3136*t3163*2.0;
                double t3289 = t3286+t3288-c*t3161*t3136*t3149-c*t3145*t3138*t3149*(2.0/3.0);
                double t3290 = t3141*t3151*t3146*t3289;
                double t3291 = t3145*t3154*t3178;
                double t3292 = c*t3152*t3147*(1.0/1.8E1);
                double t3293 = t3162*t3163*t3155*2.0;
                double t3294 = t3160*t3153*t3147*t3158*t3159*(1.0/1.8E1);
                double t3295 = c*t3143*t3153*t3145*t3138*t3149*(2.0/3.0);
                double t3296 = t3292+t3293+t3294+t3295-t3161*t3155*t3149-c*t3143*t3152*t3153*t3147*(4.0/9.0);
                double t3297 = c*t3143*t3152*t3175*t3168*t3169*(4.0/9.0);
                double t3298 = 1.0/(t3153*t3153*t3153);
                double t3299 = c*t3141*t3143*t3138*t3178*t3298*(1.0/3.0);
                double t3300 = c*t3152*t3180*t3172*t3181*t3168*(2.0/9.0);
                double t3301 = t3291+t3297+t3299+t3300-t3141*t3154*t3296-c*t3152*t3175*t3168*t3179*(2.0/9.0)-t3160*t3175*t3158*t3159*t3168*t3169*(1.0/1.8E1);
                double t3302 = EcP_2*EcP_3*t3205*t3301;
                double t3303 = EcP_3*c*t3152*t3175*t3179*(4.0/9.0);
                double t3304 = EcP_3*t3160*t3175*t3158*t3159*t3169*(1.0/9.0);
                double t3305 = t3290+t3285+t3302+t3303+t3304-t3141*t3150*t3146*t3260*(1.0/3.0)-EcP_3*c*t3152*t3180*t3172*t3181*(4.0/9.0)-EcP_3*c*t3143*t3152*t3175*t3169*(8.0/9.0);
                double t3306 = EcP_1*t3305;
                double t3307 = 1.0/t3234;
                double t3309 = Ac_3*c*t3143*t3138*(1.0/6.0);
                double t3310 = t3142+t3309;
                double t3311 = 1.0/(t3211*t3211);
                double t3312 = 1.0/(t3214*t3214);
                double t3313 = t3208*t3312;
                double t3314 = t3313+1.0;
                double t3315 = 1.0/t3314;
                double t3316 = c*t3136*t3190;
                double t3317 = log(t3316);
                double t3318 = EcF_3*t3195*t3196*2.0;
                double t3319 = t3190*t3265;
                double t3320 = log(t3319);
                double t3321 = t3195*t3196*t3273;
                double t3322 = t3320+t3321;
                double t3346 = EcF_2*EcF_3*t3264*t3322;
                double t3323 = t3317+t3318-t3346;
                double t3324 = EcF_1*t3323;
                double t3325 = c*t3136*t3147;
                double t3326 = log(t3325);
                double t3327 = EcP_3*t3200*t3201*2.0;
                double t3328 = t3155*t3147;
                double t3329 = log(t3328);
                double t3330 = t3168*t3200*t3201;
                double t3331 = t3330+t3329;
                double t3347 = EcP_2*EcP_3*t3205*t3331;
                double t3332 = t3326+t3327-t3347;
                double t3348 = EcP_1*t3332;
                double t3333 = t3324-t3348;
                double t3334 = c*t3138*t3212*(1.0/3.0);
                double t3350 = c*t3136*t3310*t3311;
                double t3335 = -t3350+t3334;
                double t3336 = t3151*t3146*t3211*t3335;
                double t3337 = t3222*t3310*t3311;
                double t3338 = c*t3143*t3138*t3212*t3209*(1.0/3.0);
                double t3339 = t3337+t3338;
                double t3340 = 1.0/(t3209*t3209);
                double t3341 = t3211*t3340*t3339;
                double t3342 = c*t3143*t3138*t3227*t3312*t3315*(1.0/3.0);
                double t3343 = t3341+t3342;
                double t3344 = Ac_2*Ac_3*t3233*t3343;
                double t3372 = Ac_3*c*t3143*t3138*t3312*t3315*(2.0/3.0);
                double t3345 = t3344+t3336-t3372;
                double t3349 = 1.0/(t3234*t3234);
                double t3351 = Ac_3*c*t3143*t3152*(2.0/9.0);
                double t3396 = Ac_3*t3160*t3158*t3159*(1.0/3.6E1);
                double t3352 = t3156+t3351-t3396;
                double t3353 = t3310*t3310;
                double t3354 = 1.0/(t3211*t3211*t3211);
                double t3355 = 1.0/(t3214*t3214*t3214);
                double t3356 = 1.0/(t3214*t3214*t3214*t3214*t3214);
                double t3357 = 1.0/(t3314*t3314);
                double t3358 = t3151*t3146*t3189*t3259;
                double t3359 = t3189*t3280*t3266;
                double t3360 = c*t3143*t3138*t3273*t3274*t3277*(1.0/3.0);
                double t3361 = t3360+t3359;
                double t3362 = EcF_2*EcF_3*t3264*t3361;
                double t3373 = EcF_3*c*t3143*t3138*t3274*t3277*(2.0/3.0);
                double t3363 = t3362-t3373+t3358;
                double t3364 = EcF_1*t3363;
                double t3365 = t3141*t3150*t3151*t3146;
                double t3366 = t3141*t3154*t3178;
                double t3367 = c*t3143*t3138*t3175*t3168*t3169*(1.0/3.0);
                double t3368 = t3366+t3367;
                double t3369 = EcP_2*EcP_3*t3205*t3368;
                double t3374 = EcP_3*c*t3143*t3138*t3175*t3169*(2.0/3.0);
                double t3370 = t3365-t3374+t3369;
                double t3375 = EcP_1*t3370;
                double t3371 = t3364-t3375;
                double t3376 = d2fz0*t3254*t3307*t3371;
                double t3383 = d2fz0*t3254*t3333*t3345*t3349;
                double t3377 = -t3383+t3376;
                double t3378 = d2fz0*t3254*t3333*t3307;
                double t3379 = t3378-1.0;
                double t3380 = 1.0/(t3135*t3135*t3135*t3135*t3135);
                double t3381 = pow(t3242,1.0/3.0);
                double t3382 = pow(t3244,1.0/3.0);
                double t3384 = t3243*t3381*(4.0/3.0);
                double t3416 = t3243*t3382*(4.0/3.0);
                double t3385 = t3384-t3416;
                double t3386 = t3252*t3253*t3379;
                double t3387 = t3386+1.0;
                double t3388 = pow(t3242,4.0/3.0);
                double t3389 = pow(t3244,4.0/3.0);
                double t3390 = t3388+t3389-2.0;
                double t3391 = t3252*t3253*t3377;
                double t3392 = t3182*t3183*t3252*t3379*4.0;
                double t3393 = t3253*t3380*t3379*4.0;
                double t3394 = t3391+t3392+t3393;
                double t3395 = c*t3152*t3212*(4.0/9.0);
                double t3397 = c*t3136*t3353*t3354*2.0;
                double t3398 = t3395+t3397-c*t3138*t3310*t3311*(2.0/3.0)-c*t3136*t3311*t3352;
                double t3399 = t3151*t3146*t3211*t3398;
                double t3400 = t3310*t3340*t3339;
                double t3401 = c*t3152*t3212*(1.0/1.8E1);
                double t3402 = t3222*t3353*t3354*2.0;
                double t3403 = t3160*t3158*t3159*t3212*t3209*(1.0/1.8E1);
                double t3404 = c*t3143*t3138*t3209*t3310*t3311*(2.0/3.0);
                double t3405 = t3401+t3402+t3403+t3404-t3222*t3311*t3352-c*t3143*t3152*t3212*t3209*(4.0/9.0);
                double t3406 = c*t3143*t3152*t3227*t3312*t3315*(4.0/9.0);
                double t3407 = 1.0/(t3209*t3209*t3209);
                double t3408 = c*t3143*t3138*t3211*t3339*t3407*(1.0/3.0);
                double t3409 = c*t3152*t3208*t3227*t3356*t3357*(2.0/9.0);
                double t3410 = t3400+t3406+t3408+t3409-t3211*t3340*t3405-c*t3152*t3227*t3315*t3355*(2.0/9.0)-t3160*t3158*t3159*t3227*t3312*t3315*(1.0/1.8E1);
                double t3411 = Ac_2*Ac_3*t3233*t3410;
                double t3412 = t3151*t3146*t3310*t3335;
                double t3413 = Ac_3*c*t3152*t3315*t3355*(4.0/9.0);
                double t3414 = Ac_3*t3160*t3158*t3159*t3312*t3315*(1.0/9.0);
                double t3415 = t3399+t3411+t3412+t3413+t3414-t3146*t3211*t3260*t3335*(1.0/3.0)-Ac_3*c*t3143*t3152*t3312*t3315*(8.0/9.0)-Ac_3*c*t3152*t3208*t3356*t3357*(4.0/9.0);
                v_rho_b_rho_b[Q] += scale * EcP_1*t3370*-2.0+t3135*(t3306+Ac_1*t3250*t3234*t3247*t3390*(1.0/(t3135*t3135*t3135*t3135*t3135*t3135)*t3253*t3379*2.0E1+t3183*t3252*t3379*1.2E1+t3253*t3380*t3377*8.0-t3252*t3253*(d2fz0*t3254*t3307*(t3306-EcF_1*(t3151*t3146*t3189*(c*t3152*t3190*(4.0/9.0)+c*t3136*t3270*t3269*2.0-c*t3138*t3256*t3258*(2.0/3.0)-c*t3136*t3258*t3268)+t3151*t3146*t3256*t3259-t3146*t3189*t3260*t3259*(1.0/3.0)+EcF_2*EcF_3*t3264*(-t3189*t3266*(c*t3152*t3190*(1.0/1.8E1)+t3270*t3265*t3269*2.0-t3265*t3258*t3268-c*t3143*t3152*t3190*t3187*(4.0/9.0)+t3160*t3190*t3158*t3159*t3187*(1.0/1.8E1)+c*t3143*t3138*t3187*t3256*t3258*(2.0/3.0))+t3280*t3256*t3266-c*t3152*t3281*t3273*t3277*(2.0/9.0)+c*t3143*t3152*t3273*t3274*t3277*(4.0/9.0)+c*t3152*t3186*t3273*t3282*t3283*(2.0/9.0)-t3160*t3158*t3159*t3273*t3274*t3277*(1.0/1.8E1)+c*t3143*t3138*1.0/(t3187*t3187*t3187)*t3189*t3280*(1.0/3.0))+EcF_3*c*t3152*t3281*t3277*(4.0/9.0)-EcF_3*c*t3143*t3152*t3274*t3277*(8.0/9.0)-EcF_3*c*t3152*t3186*t3282*t3283*(4.0/9.0)+EcF_3*t3160*t3158*t3159*t3274*t3277*(1.0/9.0)))-d2fz0*1.0/(t3234*t3234*t3234)*t3254*t3333*(t3345*t3345)*2.0+d2fz0*t3254*t3371*t3345*t3349*2.0+d2fz0*t3254*t3333*t3349*t3415)+t3182*t3183*t3252*t3377*8.0+t3182*t3183*t3380*t3379*3.2E1)+Ac_1*t3250*t3234*t3247*t3387*(t3241*t3381*(4.0/3.0)-t3241*t3382*(4.0/3.0)+1.0/pow(t3242,2.0/3.0)*t3246*(4.0/9.0)+1.0/pow(t3244,2.0/3.0)*t3246*(4.0/9.0))+Ac_1*t3250*t3234*t3247*t3385*t3394*2.0+Ac_1*t3250*t3247*t3345*t3390*t3394*2.0+Ac_1*t3250*t3247*t3345*t3385*t3387*2.0+Ac_1*t3250*t3247*t3390*t3387*t3415)-Ac_1*t3250*t3234*t3247*t3390*t3394*2.0-Ac_1*t3250*t3234*t3247*t3385*t3387*2.0-Ac_1*t3250*t3247*t3345*t3390*t3387*2.0;
            }
            
        }
    }
}

}
