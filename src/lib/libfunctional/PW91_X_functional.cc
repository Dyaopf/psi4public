/**********************************************************
* PW91_X_functional.cc: definitions for PW91_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 25-May-2011
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "PW91_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

PW91_X_Functional::PW91_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "PW91_X";
    description_ = "Perdew 91 Exchange Functional";
    citation_ = "J.P. Perdew et. al., Phys. Rev. B., 46(11), 6671-6687, (1992)";
    
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double e = -2.3873241463784300E-01;
    params_.push_back(make_pair("e",e));
    double C1 = 1.9645000000000001E-01;
    params_.push_back(make_pair("C1",C1));
    double C2 = 7.7956000000000003E+00;
    params_.push_back(make_pair("C2",C2));
    double C3 = 2.7429999999999999E-01;
    params_.push_back(make_pair("C3",C3));
    double C4 = 1.5079999999999999E-01;
    params_.push_back(make_pair("C4",C4));
    double C5 = 4.0000000000000001E-03;
    params_.push_back(make_pair("C5",C5));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
PW91_X_Functional::~PW91_X_Functional()
{
}
void PW91_X_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* gamma_aa;
    const double* tau_a;

    rho_a = prop->getDensityA();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
    }

    double k = params_[0].second;
    double e = params_[1].second;
    double C1 = params_[2].second;
    double C2 = params_[3].second;
    double C3 = params_[4].second;
    double C4 = params_[5].second;
    double C5 = params_[6].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t2679 = 1.0/(k*k);
            double t2680 = rho_a[index]*2.0;
            double t2681 = 1.0/pow(t2680,8.0/3.0);
            double t2682 = 1.0/k;
            double t2683 = gamma_aa[index]*4.0;
            double t2684 = sqrt(t2683);
            double t2685 = 1.0/pow(t2680,4.0/3.0);
            double t2686 = C2*t2682*t2684*t2685*(1.0/2.0);
            double t2687 = log(t2686+sqrt(t2686*t2686+1.0));
            double t2688 = C1*t2682*t2684*t2685*t2687*(1.0/2.0);
            functional_[index] = (e*k*rho_a[index]*pow(t2680,1.0/3.0)*(t2688+gamma_aa[index]*t2681*t2679*(C3- \
               C4*exp(gamma_aa[index]*t2681*t2679*-1.0E2))+1.0)*2.0)/(t2688+C5*(gamma_aa[index]*gamma_aa[index])* \
               1.0/(k*k*k*k)*1.0/pow(t2680,1.6E1/3.0)+1.0);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t2690 = 1.0/(k*k);
            double t2691 = rho_a[index]*2.0;
            double t2692 = 1.0/pow(t2691,8.0/3.0);
            double t2693 = 1.0/k;
            double t2694 = gamma_aa[index]*4.0;
            double t2695 = sqrt(t2694);
            double t2696 = 1.0/pow(t2691,4.0/3.0);
            double t2697 = C2*t2693*t2695*t2696*(1.0/2.0);
            double t2698 = log(t2697+sqrt(t2697*t2697+1.0));
            double t2699 = C1*t2693*t2695*t2696*t2698*(1.0/2.0);
            double t2700 = pow(t2691,1.0/3.0);
            double t2701 = gamma_aa[index]*gamma_aa[index];
            double t2702 = 1.0/(k*k*k*k);
            double t2703 = 1.0/pow(t2691,1.6E1/3.0);
            double t2704 = C5*t2701*t2702*t2703;
            double t2705 = t2699+t2704+1.0;
            double t2706 = 1.0/t2705;
            double t2709 = gamma_aa[index]*t2690*t2692*1.0E2;
            double t2707 = exp(-t2709);
            double t2711 = C4*t2707;
            double t2708 = C3-t2711;
            double t2710 = 1.0/pow(t2691,1.1E1/3.0);
            double t2712 = gamma_aa[index]*t2690*t2692*t2708;
            double t2713 = t2699+t2712+1.0;
            double t2714 = 1.0/pow(t2691,1.9E1/3.0);
            double t2715 = 1.0/pow(t2691,7.0/3.0);
            double t2716 = C1*t2693*t2695*t2698*t2715*(4.0/3.0);
            double t2717 = C2*C2;
            double t2718 = gamma_aa[index]*t2690*t2692*t2717;
            double t2719 = t2718+1.0;
            double t2720 = 1.0/sqrt(t2719);
            double t2721 = C1*C2*gamma_aa[index]*t2690*t2710*t2720*(8.0/3.0);
            v_rho_a_[index] = e*k*t2700*t2713*t2706+e*k*rho_a[index]*1.0/pow(t2691,2.0/3.0)*t2713*t2706*(2.0/ \
               3.0)-e*k*rho_a[index]*t2700*t2706*(t2721+t2716+gamma_aa[index]*t2690*t2710*t2708*(1.6E1/3.0)+C4*t2701* \
               t2702*t2714*t2707*(1.6E3/3.0))+e*k*rho_a[index]*t2700*t2713*1.0/(t2705*t2705)*(t2721+t2716+C5*t2701* \
               t2702*t2714*(3.2E1/3.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t2723 = rho_a[index]*2.0;
                double t2724 = 1.0/k;
                double t2725 = gamma_aa[index]*4.0;
                double t2726 = sqrt(t2725);
                double t2727 = 1.0/pow(t2723,4.0/3.0);
                double t2728 = 1.0/(k*k);
                double t2729 = 1.0/pow(t2723,8.0/3.0);
                double t2730 = 1.0/(k*k*k*k);
                double t2743 = gamma_aa[index]*t2728*t2729*1.0E2;
                double t2731 = exp(-t2743);
                double t2732 = 1.0/pow(t2723,1.6E1/3.0);
                double t2733 = C2*t2724*t2726*t2727*(1.0/2.0);
                double t2734 = log(t2733+sqrt(t2733*t2733+1.0));
                double t2735 = pow(t2723,1.0/3.0);
                double t2736 = C2*C2;
                double t2737 = gamma_aa[index]*t2736*t2728*t2729;
                double t2738 = t2737+1.0;
                double t2739 = 1.0/sqrt(t2738);
                double t2740 = C1*C2*t2728*t2729*t2739*(1.0/2.0);
                double t2741 = 1.0/sqrt(t2725);
                double t2742 = C1*t2741*t2724*t2734*t2727;
                double t2744 = C3-C4*t2731;
                double t2745 = C1*t2724*t2734*t2726*t2727*(1.0/2.0);
                double t2746 = gamma_aa[index]*gamma_aa[index];
                double t2747 = C5*t2730*t2732*t2746;
                double t2748 = t2745+t2747+1.0;
                v_gamma_aa_[index] = (e*k*rho_a[index]*t2735*(t2740+t2742+t2744*t2728*t2729+C4*gamma_aa[index]*t2730* \
                   t2731*t2732*1.0E2)*2.0)/t2748-e*k*rho_a[index]*t2735*1.0/(t2748*t2748)*(t2740+t2742+C5*gamma_aa[index]* \
                   t2730*t2732*2.0)*(t2745+gamma_aa[index]*t2744*t2728*t2729+1.0)*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t2751 = rho_a[index]*2.0;
            double t2752 = 1.0/k;
            double t2753 = gamma_aa[index]*4.0;
            double t2754 = sqrt(t2753);
            double t2755 = 1.0/pow(t2751,4.0/3.0);
            double t2756 = 1.0/(k*k);
            double t2757 = gamma_aa[index]*gamma_aa[index];
            double t2758 = 1.0/(k*k*k*k);
            double t2759 = 1.0/pow(t2751,8.0/3.0);
            double t2764 = gamma_aa[index]*t2756*t2759*1.0E2;
            double t2760 = exp(-t2764);
            double t2761 = C2*t2752*t2754*t2755*(1.0/2.0);
            double t2762 = log(t2761+sqrt(t2761*t2761+1.0));
            double t2763 = 1.0/pow(t2751,1.1E1/3.0);
            double t2780 = C4*t2760;
            double t2765 = C3-t2780;
            double t2766 = C1*t2752*t2762*t2754*t2755*(1.0/2.0);
            double t2767 = 1.0/pow(t2751,1.6E1/3.0);
            double t2768 = C5*t2757*t2758*t2767;
            double t2769 = t2766+t2768+1.0;
            double t2770 = 1.0/t2769;
            double t2771 = pow(t2751,1.0/3.0);
            double t2772 = 1.0/pow(t2751,1.9E1/3.0);
            double t2773 = 1.0/pow(t2751,7.0/3.0);
            double t2774 = C1*t2752*t2762*t2754*t2773*(4.0/3.0);
            double t2775 = C2*C2;
            double t2776 = gamma_aa[index]*t2756*t2775*t2759;
            double t2777 = t2776+1.0;
            double t2778 = 1.0/sqrt(t2777);
            double t2779 = C1*C2*gamma_aa[index]*t2763*t2756*t2778*(8.0/3.0);
            double t2781 = gamma_aa[index]*t2756*t2765*t2759;
            double t2782 = t2781+t2766+1.0;
            double t2783 = 1.0/pow(t2751,2.0/3.0);
            double t2784 = gamma_aa[index]*t2763*t2756*t2765*(1.6E1/3.0);
            double t2785 = C4*t2760*t2772*t2757*t2758*(1.6E3/3.0);
            double t2786 = t2774+t2784+t2785+t2779;
            double t2787 = 1.0/pow(t2751,2.2E1/3.0);
            double t2788 = 1.0/pow(t2751,1.4E1/3.0);
            double t2789 = C5*t2772*t2757*t2758*(3.2E1/3.0);
            double t2790 = t2774+t2779+t2789;
            double t2791 = 1.0/(t2769*t2769);
            double t2792 = 1.0/pow(t2751,1.0E1/3.0);
            double t2793 = C1*t2752*t2762*t2754*t2792*(5.6E1/9.0);
            double t2794 = 1.0/pow(t2777,3.0/2.0);
            double t2795 = C1*C2*gamma_aa[index]*t2756*t2778*t2788*(8.0E1/3.0);
            v_rho_a_rho_a_[index] = e*k*t2770*t2782*t2783*(4.0/3.0)-e*k*t2770*t2771*t2786*2.0+e*k*t2771*t2790* \
               t2782*t2791*2.0+e*k*rho_a[index]*t2770*t2771*(t2793+t2795+gamma_aa[index]*t2756*t2765*t2788*(3.52E2/ \
               9.0)+C4*t2760*t2757*t2758*t2787*9.6E3-C4*gamma_aa[index]*1.0/(k*k*k*k*k*k)*1.0/pow(rho_a[index],1.0E1) \
               *t2760*t2757*(2.5E3/9.0)-C1*C2*t2757*t2775*t2758*t2794*t2787*(6.4E1/9.0))-e*k*rho_a[index]*1.0/pow(t2751,5.0/ \
               3.0)*t2770*t2782*(8.0/9.0)-e*k*rho_a[index]*t2770*t2783*t2786*(4.0/3.0)+e*k*rho_a[index]*t2771*(t2790* \
               t2790)*t2782*1.0/(t2769*t2769*t2769)*2.0-e*k*rho_a[index]*t2771*t2782*t2791*(t2793+t2795+C5*t2757* \
               t2758*t2787*(1.216E3/9.0)-C1*C2*t2757*t2775*t2758*t2794*t2787*(6.4E1/9.0))+e*k*rho_a[index]*t2790* \
               t2782*t2791*t2783*(4.0/3.0)-e*k*rho_a[index]*t2771*t2790*t2791*t2786*2.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t2797 = rho_a[index]*2.0;
                double t2798 = 1.0/k;
                double t2799 = gamma_aa[index]*4.0;
                double t2800 = sqrt(t2799);
                double t2801 = 1.0/pow(t2797,4.0/3.0);
                double t2802 = 1.0/(k*k);
                double t2803 = 1.0/pow(t2797,8.0/3.0);
                double t2804 = 1.0/(k*k*k*k);
                double t2815 = gamma_aa[index]*t2802*t2803*1.0E2;
                double t2805 = exp(-t2815);
                double t2806 = 1.0/pow(t2797,1.6E1/3.0);
                double t2807 = C2*t2798*t2800*t2801*(1.0/2.0);
                double t2808 = log(t2807+sqrt(t2807*t2807+1.0));
                double t2809 = pow(t2797,1.0/3.0);
                double t2810 = gamma_aa[index]*gamma_aa[index];
                double t2811 = C5*t2810*t2804*t2806;
                double t2812 = C1*t2798*t2800*t2801*t2808*(1.0/2.0);
                double t2813 = t2811+t2812+1.0;
                double t2814 = 1.0/t2813;
                double t2824 = C4*t2805;
                double t2816 = C3-t2824;
                double t2817 = C2*C2;
                double t2818 = gamma_aa[index]*t2802*t2803*t2817;
                double t2819 = t2818+1.0;
                double t2820 = 1.0/sqrt(t2819);
                double t2821 = 1.0/pow(t2797,1.1E1/3.0);
                double t2822 = 1.0/sqrt(t2799);
                double t2823 = 1.0/pow(t2797,1.9E1/3.0);
                double t2825 = t2802*t2803*t2816;
                double t2826 = C1*C2*t2802*t2820*t2803*(1.0/2.0);
                double t2827 = C4*gamma_aa[index]*t2804*t2805*t2806*1.0E2;
                double t2828 = C1*t2798*t2801*t2822*t2808;
                double t2829 = t2825+t2826+t2827+t2828;
                double t2830 = 1.0/pow(t2797,7.0/3.0);
                double t2831 = 1.0/(t2813*t2813);
                double t2832 = gamma_aa[index]*t2802*t2803*t2816;
                double t2833 = t2812+t2832+1.0;
                double t2834 = C1*C2*t2802*t2820*t2821*4.0;
                double t2835 = C1*t2798*t2830*t2822*t2808*(8.0/3.0);
                double t2836 = 1.0/pow(t2819,3.0/2.0);
                double t2837 = C5*gamma_aa[index]*t2804*t2806*2.0;
                double t2838 = t2826+t2828+t2837;
                double t2839 = C1*t2798*t2800*t2830*t2808*(4.0/3.0);
                double t2840 = C1*C2*gamma_aa[index]*t2802*t2820*t2821*(8.0/3.0);
                double t2841 = 1.0/pow(t2797,2.0/3.0);
                double t2842 = C5*t2810*t2804*t2823*(3.2E1/3.0);
                double t2843 = t2840+t2842+t2839;
                v_rho_a_gamma_aa_[index] = e*k*t2814*t2809*t2829-e*k*t2831*t2833*t2809*t2838-e*k*rho_a[index]*t2814* \
                   t2809*(t2834+t2835+t2802*t2821*t2816*(1.6E1/3.0)-C4*1.0/(k*k*k*k*k*k)*1.0/(rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t2810* \
                   t2805*(6.25E2/6.0)+C4*gamma_aa[index]*t2804*t2805*t2823*1.6E3-C1*C2*gamma_aa[index]*t2804*t2823*t2817* \
                   t2836*(4.0/3.0))+e*k*rho_a[index]*t2814*t2841*t2829*(2.0/3.0)+e*k*rho_a[index]*t2831*t2833*t2809*(t2834+ \
                   t2835+C5*gamma_aa[index]*t2804*t2823*(6.4E1/3.0)-C1*C2*gamma_aa[index]*t2804*t2823*t2817*t2836*(4.0/ \
                   3.0))-e*k*rho_a[index]*t2831*t2841*t2833*t2838*(2.0/3.0)+e*k*rho_a[index]*t2831*t2843*t2809*t2829+ \
                   e*k*rho_a[index]*t2831*t2809*t2838*(t2840+t2839+gamma_aa[index]*t2802*t2821*t2816*(1.6E1/3.0)+C4*t2810* \
                   t2804*t2805*t2823*(1.6E3/3.0))-e*k*rho_a[index]*1.0/(t2813*t2813*t2813)*t2833*t2843*t2809*t2838*2.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t2845 = rho_a[index]*2.0;
                double t2846 = 1.0/k;
                double t2847 = gamma_aa[index]*4.0;
                double t2848 = sqrt(t2847);
                double t2849 = 1.0/pow(t2845,4.0/3.0);
                double t2850 = 1.0/(k*k*k*k);
                double t2851 = 1.0/pow(t2845,1.6E1/3.0);
                double t2852 = C2*C2;
                double t2853 = 1.0/(k*k);
                double t2854 = 1.0/pow(t2845,8.0/3.0);
                double t2863 = gamma_aa[index]*t2853*t2854*1.0E2;
                double t2855 = exp(-t2863);
                double t2856 = C2*t2846*t2848*t2849*(1.0/2.0);
                double t2857 = log(t2856+sqrt(t2856*t2856+1.0));
                double t2858 = gamma_aa[index]*t2852*t2853*t2854;
                double t2859 = t2858+1.0;
                double t2860 = pow(t2845,1.0/3.0);
                double t2861 = 1.0/sqrt(t2859);
                double t2876 = C5*gamma_aa[index]*t2850*t2851*2.0;
                double t2877 = C1*C2*t2861*t2853*t2854*(1.0/2.0);
                double t2878 = 1.0/sqrt(t2847);
                double t2879 = C1*t2846*t2857*t2849*t2878;
                double t2862 = t2876+t2877+t2879;
                double t2864 = C1*t2846*t2848*t2857*t2849*(1.0/2.0);
                double t2865 = gamma_aa[index]*gamma_aa[index];
                double t2866 = C5*t2850*t2851*t2865;
                double t2867 = t2864+t2866+1.0;
                double t2881 = C4*t2855;
                double t2868 = C3-t2881;
                double t2869 = gamma_aa[index]*t2853*t2854*t2868;
                double t2870 = t2864+t2869+1.0;
                double t2871 = 1.0/pow(t2859,3.0/2.0);
                double t2872 = C1*C2*t2850*t2851*t2852*t2871*(1.0/4.0);
                double t2873 = 1.0/pow(t2847,3.0/2.0);
                double t2874 = C1*t2846*t2873*t2857*t2849*2.0;
                double t2875 = 1.0/gamma_aa[index];
                double t2880 = 1.0/(t2867*t2867);
                v_gamma_aa_gamma_aa_[index] = (e*k*rho_a[index]*t2860*(t2872+t2874-C4*t2850*t2851*t2855*2.0E2+C4* \
                   gamma_aa[index]*1.0/(k*k*k*k*k*k)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index])*t2855*(6.25E2/1.6E1)-C1*C2*t2861*t2853*t2854*t2875*(1.0/4.0) \
                   )*-2.0)/t2867+e*k*rho_a[index]*t2860*t2870*(t2862*t2862)*1.0/(t2867*t2867*t2867)*4.0-e*k*rho_a[index]* \
                   t2860*t2862*t2880*(t2877+t2879+t2853*t2854*t2868+C4*gamma_aa[index]*t2850*t2851*t2855*1.0E2)*4.0+e* \
                   k*rho_a[index]*t2860*t2870*t2880*(t2872+t2874-C5*t2850*t2851*2.0-C1*C2*t2861*t2853*t2854*t2875*(1.0/ \
                   4.0))*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void PW91_X_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* rho_b;
    const double* gamma_aa;
    const double* gamma_ab;
    const double* gamma_bb;
    const double* tau_a;
    const double* tau_b;

    rho_a = prop->getDensityA();
    rho_b = prop->getDensityB();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
        gamma_ab = prop->getDensityGradientSquaredAB();
        gamma_bb = prop->getDensityGradientSquaredBB();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
        tau_b = prop->getKEDensityB();
    }

    double k = params_[0].second;
    double e = params_[1].second;
    double C1 = params_[2].second;
    double C2 = params_[3].second;
    double C3 = params_[4].second;
    double C4 = params_[5].second;
    double C5 = params_[6].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1748 = 1.0/(k*k);
            double t1749 = rho_a[index]*2.0;
            double t1750 = 1.0/pow(t1749,8.0/3.0);
            double t1751 = 1.0/k;
            double t1752 = gamma_aa[index]*4.0;
            double t1753 = sqrt(t1752);
            double t1754 = 1.0/pow(t1749,4.0/3.0);
            double t1755 = C2*t1751*t1753*t1754*(1.0/2.0);
            double t1756 = log(t1755+sqrt(t1755*t1755+1.0));
            double t1757 = C1*t1751*t1753*t1754*t1756*(1.0/2.0);
            double t1758 = rho_b[index]*2.0;
            double t1759 = 1.0/pow(t1758,8.0/3.0);
            double t1760 = gamma_bb[index]*4.0;
            double t1761 = sqrt(t1760);
            double t1762 = 1.0/pow(t1758,4.0/3.0);
            double t1763 = 1.0/(k*k*k*k);
            double t1764 = C2*t1751*t1761*t1762*(1.0/2.0);
            double t1765 = log(t1764+sqrt(t1764*t1764+1.0));
            double t1766 = C1*t1751*t1761*t1762*t1765*(1.0/2.0);
            functional_[index] = (e*k*rho_a[index]*pow(t1749,1.0/3.0)*(t1757+gamma_aa[index]*t1750*t1748*(C3- \
               C4*exp(gamma_aa[index]*t1750*t1748*-1.0E2))+1.0))/(t1757+C5*(gamma_aa[index]*gamma_aa[index])*t1763* \
               1.0/pow(t1749,1.6E1/3.0)+1.0)+(e*k*rho_b[index]*pow(t1758,1.0/3.0)*(t1766+gamma_bb[index]*t1748*t1759* \
               (C3-C4*exp(gamma_bb[index]*t1748*t1759*-1.0E2))+1.0))/(t1766+C5*(gamma_bb[index]*gamma_bb[index])* \
               t1763*1.0/pow(t1758,1.6E1/3.0)+1.0);
        } else if (rho_a[index] > cutoff_) {
            double t2410 = 1.0/(k*k);
            double t2411 = rho_a[index]*2.0;
            double t2412 = 1.0/pow(t2411,8.0/3.0);
            double t2413 = 1.0/k;
            double t2414 = gamma_aa[index]*4.0;
            double t2415 = sqrt(t2414);
            double t2416 = 1.0/pow(t2411,4.0/3.0);
            double t2417 = C2*t2413*t2415*t2416*(1.0/2.0);
            double t2418 = log(t2417+sqrt(t2417*t2417+1.0));
            double t2419 = C1*t2413*t2415*t2416*t2418*(1.0/2.0);
            functional_[index] = (e*k*rho_a[index]*pow(t2411,1.0/3.0)*(t2419+gamma_aa[index]*t2410*t2412*(C3- \
               C4*exp(gamma_aa[index]*t2410*t2412*-1.0E2))+1.0))/(t2419+C5*(gamma_aa[index]*gamma_aa[index])*1.0/ \
               (k*k*k*k)*1.0/pow(t2411,1.6E1/3.0)+1.0);
        } else if (rho_b[index] > cutoff_) {
            double t2177 = 1.0/(k*k);
            double t2178 = rho_b[index]*2.0;
            double t2179 = 1.0/pow(t2178,8.0/3.0);
            double t2180 = 1.0/k;
            double t2181 = gamma_bb[index]*4.0;
            double t2182 = sqrt(t2181);
            double t2183 = 1.0/pow(t2178,4.0/3.0);
            double t2184 = C2*t2180*t2182*t2183*(1.0/2.0);
            double t2185 = log(t2184+sqrt(t2184*t2184+1.0));
            double t2186 = C1*t2180*t2182*t2183*t2185*(1.0/2.0);
            functional_[index] = (e*k*rho_b[index]*pow(t2178,1.0/3.0)*(t2186+gamma_bb[index]*t2177*t2179*(C3- \
               C4*exp(gamma_bb[index]*t2177*t2179*-1.0E2))+1.0))/(t2186+C5*(gamma_bb[index]*gamma_bb[index])*1.0/ \
               (k*k*k*k)*1.0/pow(t2178,1.6E1/3.0)+1.0);
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1768 = 1.0/(k*k);
            double t1769 = rho_a[index]*2.0;
            double t1770 = 1.0/pow(t1769,8.0/3.0);
            double t1771 = 1.0/k;
            double t1772 = gamma_aa[index]*4.0;
            double t1773 = sqrt(t1772);
            double t1774 = 1.0/pow(t1769,4.0/3.0);
            double t1775 = C2*t1771*t1773*t1774*(1.0/2.0);
            double t1776 = log(t1775+sqrt(t1775*t1775+1.0));
            double t1777 = C1*t1771*t1773*t1774*t1776*(1.0/2.0);
            double t1778 = pow(t1769,1.0/3.0);
            double t1779 = gamma_aa[index]*gamma_aa[index];
            double t1780 = 1.0/(k*k*k*k);
            double t1781 = 1.0/pow(t1769,1.6E1/3.0);
            double t1782 = C5*t1780*t1781*t1779;
            double t1783 = t1782+t1777+1.0;
            double t1784 = 1.0/t1783;
            double t1787 = gamma_aa[index]*t1770*t1768*1.0E2;
            double t1785 = exp(-t1787);
            double t1789 = C4*t1785;
            double t1786 = C3-t1789;
            double t1788 = 1.0/pow(t1769,1.1E1/3.0);
            double t1790 = gamma_aa[index]*t1770*t1768*t1786;
            double t1791 = t1790+t1777+1.0;
            double t1792 = 1.0/pow(t1769,1.9E1/3.0);
            double t1793 = 1.0/pow(t1769,7.0/3.0);
            double t1794 = C1*t1771*t1773*t1793*t1776*(4.0/3.0);
            double t1795 = C2*C2;
            double t1796 = gamma_aa[index]*t1770*t1768*t1795;
            double t1797 = t1796+1.0;
            double t1798 = 1.0/sqrt(t1797);
            double t1799 = C1*C2*gamma_aa[index]*t1768*t1788*t1798*(8.0/3.0);
            v_rho_a_[index] = e*k*t1791*t1784*t1778+e*k*rho_a[index]*t1791*t1784*1.0/pow(t1769,2.0/3.0)*(2.0/ \
               3.0)-e*k*rho_a[index]*t1784*t1778*(t1794+t1799+gamma_aa[index]*t1768*t1786*t1788*(1.6E1/3.0)+C4*t1780* \
               t1792*t1785*t1779*(1.6E3/3.0))+e*k*rho_a[index]*t1791*1.0/(t1783*t1783)*t1778*(t1794+t1799+C5*t1780* \
               t1792*t1779*(3.2E1/3.0));
        } else if (rho_a[index] > cutoff_) {
            double t2421 = 1.0/(k*k);
            double t2422 = rho_a[index]*2.0;
            double t2423 = 1.0/pow(t2422,8.0/3.0);
            double t2424 = 1.0/k;
            double t2425 = gamma_aa[index]*4.0;
            double t2426 = sqrt(t2425);
            double t2427 = 1.0/pow(t2422,4.0/3.0);
            double t2428 = C2*t2424*t2426*t2427*(1.0/2.0);
            double t2429 = log(t2428+sqrt(t2428*t2428+1.0));
            double t2430 = C1*t2424*t2426*t2427*t2429*(1.0/2.0);
            double t2431 = pow(t2422,1.0/3.0);
            double t2432 = gamma_aa[index]*gamma_aa[index];
            double t2433 = 1.0/(k*k*k*k);
            double t2434 = 1.0/pow(t2422,1.6E1/3.0);
            double t2435 = C5*t2432*t2433*t2434;
            double t2436 = t2430+t2435+1.0;
            double t2437 = 1.0/t2436;
            double t2440 = gamma_aa[index]*t2421*t2423*1.0E2;
            double t2438 = exp(-t2440);
            double t2442 = C4*t2438;
            double t2439 = C3-t2442;
            double t2441 = 1.0/pow(t2422,1.1E1/3.0);
            double t2443 = gamma_aa[index]*t2421*t2423*t2439;
            double t2444 = t2430+t2443+1.0;
            double t2445 = 1.0/pow(t2422,1.9E1/3.0);
            double t2446 = 1.0/pow(t2422,7.0/3.0);
            double t2447 = C1*t2424*t2426*t2446*t2429*(4.0/3.0);
            double t2448 = C2*C2;
            double t2449 = gamma_aa[index]*t2421*t2423*t2448;
            double t2450 = t2449+1.0;
            double t2451 = 1.0/sqrt(t2450);
            double t2452 = C1*C2*gamma_aa[index]*t2421*t2441*t2451*(8.0/3.0);
            v_rho_a_[index] = e*k*t2431*t2444*t2437+e*k*rho_a[index]*1.0/pow(t2422,2.0/3.0)*t2444*t2437*(2.0/ \
               3.0)-e*k*rho_a[index]*t2431*t2437*(t2452+t2447+gamma_aa[index]*t2421*t2441*t2439*(1.6E1/3.0)+C4*t2432* \
               t2433*t2445*t2438*(1.6E3/3.0))+e*k*rho_a[index]*t2431*t2444*1.0/(t2436*t2436)*(t2452+t2447+C5*t2432* \
               t2433*t2445*(3.2E1/3.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1801 = 1.0/(k*k);
            double t1802 = rho_b[index]*2.0;
            double t1803 = 1.0/pow(t1802,8.0/3.0);
            double t1804 = 1.0/k;
            double t1805 = gamma_bb[index]*4.0;
            double t1806 = sqrt(t1805);
            double t1807 = 1.0/pow(t1802,4.0/3.0);
            double t1808 = C2*t1804*t1806*t1807*(1.0/2.0);
            double t1809 = log(t1808+sqrt(t1808*t1808+1.0));
            double t1810 = C1*t1804*t1806*t1807*t1809*(1.0/2.0);
            double t1811 = pow(t1802,1.0/3.0);
            double t1812 = gamma_bb[index]*gamma_bb[index];
            double t1813 = 1.0/(k*k*k*k);
            double t1814 = 1.0/pow(t1802,1.6E1/3.0);
            double t1815 = C5*t1812*t1813*t1814;
            double t1816 = t1810+t1815+1.0;
            double t1817 = 1.0/t1816;
            double t1820 = gamma_bb[index]*t1801*t1803*1.0E2;
            double t1818 = exp(-t1820);
            double t1822 = C4*t1818;
            double t1819 = C3-t1822;
            double t1821 = 1.0/pow(t1802,1.1E1/3.0);
            double t1823 = gamma_bb[index]*t1801*t1803*t1819;
            double t1824 = t1810+t1823+1.0;
            double t1825 = 1.0/pow(t1802,1.9E1/3.0);
            double t1826 = 1.0/pow(t1802,7.0/3.0);
            double t1827 = C1*t1804*t1806*t1826*t1809*(4.0/3.0);
            double t1828 = C2*C2;
            double t1829 = gamma_bb[index]*t1801*t1803*t1828;
            double t1830 = t1829+1.0;
            double t1831 = 1.0/sqrt(t1830);
            double t1832 = C1*C2*gamma_bb[index]*t1801*t1821*t1831*(8.0/3.0);
            v_rho_b_[index] = e*k*t1811*t1824*t1817+e*k*rho_b[index]*1.0/pow(t1802,2.0/3.0)*t1824*t1817*(2.0/ \
               3.0)-e*k*rho_b[index]*t1811*t1817*(t1832+t1827+gamma_bb[index]*t1801*t1821*t1819*(1.6E1/3.0)+C4*t1812* \
               t1813*t1825*t1818*(1.6E3/3.0))+e*k*rho_b[index]*t1811*t1824*1.0/(t1816*t1816)*(t1832+t1827+C5*t1812* \
               t1813*t1825*(3.2E1/3.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t2189 = 1.0/(k*k);
            double t2190 = rho_b[index]*2.0;
            double t2191 = 1.0/pow(t2190,8.0/3.0);
            double t2192 = 1.0/k;
            double t2193 = gamma_bb[index]*4.0;
            double t2194 = sqrt(t2193);
            double t2195 = 1.0/pow(t2190,4.0/3.0);
            double t2196 = C2*t2192*t2194*t2195*(1.0/2.0);
            double t2197 = log(t2196+sqrt(t2196*t2196+1.0));
            double t2198 = C1*t2192*t2194*t2195*t2197*(1.0/2.0);
            double t2199 = pow(t2190,1.0/3.0);
            double t2200 = gamma_bb[index]*gamma_bb[index];
            double t2201 = 1.0/(k*k*k*k);
            double t2202 = 1.0/pow(t2190,1.6E1/3.0);
            double t2203 = C5*t2200*t2201*t2202;
            double t2204 = t2198+t2203+1.0;
            double t2205 = 1.0/t2204;
            double t2208 = gamma_bb[index]*t2191*t2189*1.0E2;
            double t2206 = exp(-t2208);
            double t2210 = C4*t2206;
            double t2207 = C3-t2210;
            double t2209 = 1.0/pow(t2190,1.1E1/3.0);
            double t2211 = gamma_bb[index]*t2191*t2189*t2207;
            double t2212 = t2198+t2211+1.0;
            double t2213 = 1.0/pow(t2190,1.9E1/3.0);
            double t2214 = 1.0/pow(t2190,7.0/3.0);
            double t2215 = C1*t2192*t2194*t2197*t2214*(4.0/3.0);
            double t2216 = C2*C2;
            double t2217 = gamma_bb[index]*t2191*t2189*t2216;
            double t2218 = t2217+1.0;
            double t2219 = 1.0/sqrt(t2218);
            double t2220 = C1*C2*gamma_bb[index]*t2189*t2209*t2219*(8.0/3.0);
            v_rho_b_[index] = e*k*t2199*t2212*t2205+e*k*rho_b[index]*1.0/pow(t2190,2.0/3.0)*t2212*t2205*(2.0/ \
               3.0)-e*k*rho_b[index]*t2199*t2205*(t2220+t2215+gamma_bb[index]*t2189*t2207*t2209*(1.6E1/3.0)+C4*t2200* \
               t2201*t2213*t2206*(1.6E3/3.0))+e*k*rho_b[index]*t2199*t2212*1.0/(t2204*t2204)*(t2220+t2215+C5*t2200* \
               t2201*t2213*(3.2E1/3.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1834 = rho_a[index]*2.0;
                double t1835 = 1.0/k;
                double t1836 = gamma_aa[index]*4.0;
                double t1837 = sqrt(t1836);
                double t1838 = 1.0/pow(t1834,4.0/3.0);
                double t1839 = 1.0/(k*k);
                double t1840 = 1.0/pow(t1834,8.0/3.0);
                double t1841 = 1.0/(k*k*k*k);
                double t1854 = gamma_aa[index]*t1840*t1839*1.0E2;
                double t1842 = exp(-t1854);
                double t1843 = 1.0/pow(t1834,1.6E1/3.0);
                double t1844 = C2*t1835*t1837*t1838*(1.0/2.0);
                double t1845 = log(t1844+sqrt(t1844*t1844+1.0));
                double t1846 = pow(t1834,1.0/3.0);
                double t1847 = C2*C2;
                double t1848 = gamma_aa[index]*t1840*t1847*t1839;
                double t1849 = t1848+1.0;
                double t1850 = 1.0/sqrt(t1849);
                double t1851 = C1*C2*t1840*t1850*t1839*(1.0/2.0);
                double t1852 = 1.0/sqrt(t1836);
                double t1853 = C1*t1852*t1835*t1845*t1838;
                double t1855 = C3-C4*t1842;
                double t1856 = C1*t1835*t1845*t1837*t1838*(1.0/2.0);
                double t1857 = gamma_aa[index]*gamma_aa[index];
                double t1858 = C5*t1841*t1843*t1857;
                double t1859 = t1856+t1858+1.0;
                v_gamma_aa_[index] = (e*k*rho_a[index]*t1846*(t1851+t1853+t1840*t1855*t1839+C4*gamma_aa[index]*t1841* \
                   t1842*t1843*1.0E2))/t1859-e*k*rho_a[index]*t1846*1.0/(t1859*t1859)*(t1851+t1853+C5*gamma_aa[index]* \
                   t1841*t1843*2.0)*(t1856+gamma_aa[index]*t1840*t1855*t1839+1.0);
            } else if (rho_a[index] > cutoff_) {
                double t2455 = rho_a[index]*2.0;
                double t2456 = 1.0/k;
                double t2457 = gamma_aa[index]*4.0;
                double t2458 = sqrt(t2457);
                double t2459 = 1.0/pow(t2455,4.0/3.0);
                double t2460 = 1.0/(k*k);
                double t2461 = 1.0/pow(t2455,8.0/3.0);
                double t2462 = 1.0/(k*k*k*k);
                double t2475 = gamma_aa[index]*t2460*t2461*1.0E2;
                double t2463 = exp(-t2475);
                double t2464 = 1.0/pow(t2455,1.6E1/3.0);
                double t2465 = C2*t2456*t2458*t2459*(1.0/2.0);
                double t2466 = log(t2465+sqrt(t2465*t2465+1.0));
                double t2467 = pow(t2455,1.0/3.0);
                double t2468 = C2*C2;
                double t2469 = gamma_aa[index]*t2460*t2461*t2468;
                double t2470 = t2469+1.0;
                double t2471 = 1.0/sqrt(t2470);
                double t2472 = C1*C2*t2460*t2461*t2471*(1.0/2.0);
                double t2473 = 1.0/sqrt(t2457);
                double t2474 = C1*t2473*t2456*t2466*t2459;
                double t2476 = C3-C4*t2463;
                double t2477 = C1*t2456*t2466*t2458*t2459*(1.0/2.0);
                double t2478 = gamma_aa[index]*gamma_aa[index];
                double t2479 = C5*t2462*t2464*t2478;
                double t2480 = t2477+t2479+1.0;
                v_gamma_aa_[index] = (e*k*rho_a[index]*t2467*(t2472+t2474+t2460*t2461*t2476+C4*gamma_aa[index]*t2462* \
                   t2463*t2464*1.0E2))/t2480-e*k*rho_a[index]*1.0/(t2480*t2480)*t2467*(t2472+t2474+C5*gamma_aa[index]* \
                   t2462*t2464*2.0)*(t2477+gamma_aa[index]*t2460*t2461*t2476+1.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1862 = rho_b[index]*2.0;
                double t1863 = 1.0/k;
                double t1864 = gamma_bb[index]*4.0;
                double t1865 = sqrt(t1864);
                double t1866 = 1.0/pow(t1862,4.0/3.0);
                double t1867 = 1.0/(k*k);
                double t1868 = 1.0/pow(t1862,8.0/3.0);
                double t1869 = 1.0/(k*k*k*k);
                double t1882 = gamma_bb[index]*t1867*t1868*1.0E2;
                double t1870 = exp(-t1882);
                double t1871 = 1.0/pow(t1862,1.6E1/3.0);
                double t1872 = C2*t1863*t1865*t1866*(1.0/2.0);
                double t1873 = log(t1872+sqrt(t1872*t1872+1.0));
                double t1874 = pow(t1862,1.0/3.0);
                double t1875 = C2*C2;
                double t1876 = gamma_bb[index]*t1875*t1867*t1868;
                double t1877 = t1876+1.0;
                double t1878 = 1.0/sqrt(t1877);
                double t1879 = C1*C2*t1867*t1868*t1878*(1.0/2.0);
                double t1880 = 1.0/sqrt(t1864);
                double t1881 = C1*t1880*t1863*t1873*t1866;
                double t1883 = C3-C4*t1870;
                double t1884 = C1*t1863*t1873*t1865*t1866*(1.0/2.0);
                double t1885 = gamma_bb[index]*gamma_bb[index];
                double t1886 = C5*t1871*t1885*t1869;
                double t1887 = t1884+t1886+1.0;
                v_gamma_bb_[index] = (e*k*rho_b[index]*t1874*(t1881+t1879+t1883*t1867*t1868+C4*gamma_bb[index]*t1870* \
                   t1871*t1869*1.0E2))/t1887-e*k*rho_b[index]*t1874*1.0/(t1887*t1887)*(t1881+t1879+C5*gamma_bb[index]* \
                   t1871*t1869*2.0)*(t1884+gamma_bb[index]*t1883*t1867*t1868+1.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t2224 = rho_b[index]*2.0;
                double t2225 = 1.0/k;
                double t2226 = gamma_bb[index]*4.0;
                double t2227 = sqrt(t2226);
                double t2228 = 1.0/pow(t2224,4.0/3.0);
                double t2229 = 1.0/(k*k);
                double t2230 = 1.0/pow(t2224,8.0/3.0);
                double t2231 = 1.0/(k*k*k*k);
                double t2244 = gamma_bb[index]*t2230*t2229*1.0E2;
                double t2232 = exp(-t2244);
                double t2233 = 1.0/pow(t2224,1.6E1/3.0);
                double t2234 = C2*t2225*t2227*t2228*(1.0/2.0);
                double t2235 = log(t2234+sqrt(t2234*t2234+1.0));
                double t2236 = pow(t2224,1.0/3.0);
                double t2237 = C2*C2;
                double t2238 = gamma_bb[index]*t2230*t2237*t2229;
                double t2239 = t2238+1.0;
                double t2240 = 1.0/sqrt(t2239);
                double t2241 = C1*C2*t2230*t2240*t2229*(1.0/2.0);
                double t2242 = 1.0/sqrt(t2226);
                double t2243 = C1*t2242*t2225*t2235*t2228;
                double t2245 = C3-C4*t2232;
                double t2246 = C1*t2225*t2235*t2227*t2228*(1.0/2.0);
                double t2247 = gamma_bb[index]*gamma_bb[index];
                double t2248 = C5*t2231*t2233*t2247;
                double t2249 = t2246+t2248+1.0;
                v_gamma_bb_[index] = (e*k*rho_b[index]*t2236*(t2241+t2243+t2230*t2245*t2229+C4*gamma_bb[index]*t2231* \
                   t2232*t2233*1.0E2))/t2249-e*k*rho_b[index]*t2236*1.0/(t2249*t2249)*(t2241+t2243+C5*gamma_bb[index]* \
                   t2231*t2233*2.0)*(t2246+gamma_bb[index]*t2230*t2245*t2229+1.0);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1891 = rho_a[index]*2.0;
            double t1892 = 1.0/k;
            double t1893 = gamma_aa[index]*4.0;
            double t1894 = sqrt(t1893);
            double t1895 = 1.0/pow(t1891,4.0/3.0);
            double t1896 = 1.0/(k*k);
            double t1897 = gamma_aa[index]*gamma_aa[index];
            double t1898 = 1.0/(k*k*k*k);
            double t1899 = 1.0/pow(t1891,8.0/3.0);
            double t1904 = gamma_aa[index]*t1896*t1899*1.0E2;
            double t1900 = exp(-t1904);
            double t1901 = C2*t1892*t1894*t1895*(1.0/2.0);
            double t1902 = log(t1901+sqrt(t1901*t1901+1.0));
            double t1903 = 1.0/pow(t1891,1.1E1/3.0);
            double t1920 = C4*t1900;
            double t1905 = C3-t1920;
            double t1906 = C1*t1892*t1894*t1895*t1902*(1.0/2.0);
            double t1907 = 1.0/pow(t1891,1.6E1/3.0);
            double t1908 = C5*t1897*t1898*t1907;
            double t1909 = t1906+t1908+1.0;
            double t1910 = 1.0/t1909;
            double t1911 = pow(t1891,1.0/3.0);
            double t1912 = 1.0/pow(t1891,1.9E1/3.0);
            double t1913 = 1.0/pow(t1891,7.0/3.0);
            double t1914 = C1*t1892*t1894*t1902*t1913*(4.0/3.0);
            double t1915 = C2*C2;
            double t1916 = gamma_aa[index]*t1896*t1899*t1915;
            double t1917 = t1916+1.0;
            double t1918 = 1.0/sqrt(t1917);
            double t1919 = C1*C2*gamma_aa[index]*t1896*t1903*t1918*(8.0/3.0);
            double t1921 = gamma_aa[index]*t1896*t1899*t1905;
            double t1922 = t1921+t1906+1.0;
            double t1923 = 1.0/pow(t1891,2.0/3.0);
            double t1924 = gamma_aa[index]*t1896*t1903*t1905*(1.6E1/3.0);
            double t1925 = C4*t1897*t1898*t1900*t1912*(1.6E3/3.0);
            double t1926 = t1914+t1924+t1925+t1919;
            double t1927 = 1.0/pow(t1891,2.2E1/3.0);
            double t1928 = 1.0/pow(t1891,1.4E1/3.0);
            double t1929 = C5*t1897*t1898*t1912*(3.2E1/3.0);
            double t1930 = t1914+t1919+t1929;
            double t1931 = 1.0/(t1909*t1909);
            double t1932 = 1.0/pow(t1891,1.0E1/3.0);
            double t1933 = C1*t1892*t1894*t1902*t1932*(5.6E1/9.0);
            double t1934 = 1.0/pow(t1917,3.0/2.0);
            double t1935 = C1*C2*gamma_aa[index]*t1896*t1918*t1928*(8.0E1/3.0);
            v_rho_a_rho_a_[index] = e*k*t1910*t1922*t1923*(4.0/3.0)-e*k*t1910*t1911*t1926*2.0+e*k*t1911*t1930* \
               t1922*t1931*2.0+e*k*rho_a[index]*t1910*t1911*(t1933+t1935+gamma_aa[index]*t1896*t1905*t1928*(3.52E2/ \
               9.0)+C4*t1897*t1898*t1900*t1927*9.6E3-C4*gamma_aa[index]*1.0/(k*k*k*k*k*k)*1.0/pow(rho_a[index],1.0E1) \
               *t1897*t1900*(2.5E3/9.0)-C1*C2*t1897*t1898*t1915*t1934*t1927*(6.4E1/9.0))-e*k*rho_a[index]*1.0/pow(t1891,5.0/ \
               3.0)*t1910*t1922*(8.0/9.0)-e*k*rho_a[index]*t1910*t1923*t1926*(4.0/3.0)+e*k*rho_a[index]*t1911*(t1930* \
               t1930)*t1922*1.0/(t1909*t1909*t1909)*2.0-e*k*rho_a[index]*t1911*t1922*t1931*(t1933+t1935+C5*t1897* \
               t1898*t1927*(1.216E3/9.0)-C1*C2*t1897*t1898*t1915*t1934*t1927*(6.4E1/9.0))+e*k*rho_a[index]*t1930* \
               t1922*t1931*t1923*(4.0/3.0)-e*k*rho_a[index]*t1911*t1930*t1931*t1926*2.0;
        } else if (rho_a[index] > cutoff_) {
            double t2486 = rho_a[index]*2.0;
            double t2487 = 1.0/k;
            double t2488 = gamma_aa[index]*4.0;
            double t2489 = sqrt(t2488);
            double t2490 = 1.0/pow(t2486,4.0/3.0);
            double t2491 = 1.0/(k*k);
            double t2492 = gamma_aa[index]*gamma_aa[index];
            double t2493 = 1.0/(k*k*k*k);
            double t2494 = 1.0/pow(t2486,8.0/3.0);
            double t2499 = gamma_aa[index]*t2491*t2494*1.0E2;
            double t2495 = exp(-t2499);
            double t2496 = C2*t2490*t2487*t2489*(1.0/2.0);
            double t2497 = log(t2496+sqrt(t2496*t2496+1.0));
            double t2498 = 1.0/pow(t2486,1.1E1/3.0);
            double t2515 = C4*t2495;
            double t2500 = C3-t2515;
            double t2501 = C1*t2490*t2487*t2497*t2489*(1.0/2.0);
            double t2502 = 1.0/pow(t2486,1.6E1/3.0);
            double t2503 = C5*t2492*t2493*t2502;
            double t2504 = t2501+t2503+1.0;
            double t2505 = 1.0/t2504;
            double t2506 = pow(t2486,1.0/3.0);
            double t2507 = 1.0/pow(t2486,1.9E1/3.0);
            double t2508 = 1.0/pow(t2486,7.0/3.0);
            double t2509 = C1*t2487*t2497*t2489*t2508*(4.0/3.0);
            double t2510 = C2*C2;
            double t2511 = gamma_aa[index]*t2491*t2494*t2510;
            double t2512 = t2511+1.0;
            double t2513 = 1.0/sqrt(t2512);
            double t2514 = C1*C2*gamma_aa[index]*t2491*t2498*t2513*(8.0/3.0);
            double t2516 = gamma_aa[index]*t2491*t2494*t2500;
            double t2517 = t2501+t2516+1.0;
            double t2518 = 1.0/pow(t2486,2.0/3.0);
            double t2519 = gamma_aa[index]*t2491*t2498*t2500*(1.6E1/3.0);
            double t2520 = C4*t2492*t2493*t2495*t2507*(1.6E3/3.0);
            double t2521 = t2520+t2514+t2509+t2519;
            double t2522 = 1.0/pow(t2486,2.2E1/3.0);
            double t2523 = 1.0/pow(t2486,1.4E1/3.0);
            double t2524 = C5*t2492*t2493*t2507*(3.2E1/3.0);
            double t2525 = t2514+t2524+t2509;
            double t2526 = 1.0/(t2504*t2504);
            double t2527 = 1.0/pow(t2486,1.0E1/3.0);
            double t2528 = C1*t2487*t2497*t2489*t2527*(5.6E1/9.0);
            double t2529 = 1.0/pow(t2512,3.0/2.0);
            double t2530 = C1*C2*gamma_aa[index]*t2491*t2513*t2523*(8.0E1/3.0);
            v_rho_a_rho_a_[index] = e*k*t2521*t2505*t2506*-2.0+e*k*t2505*t2517*t2518*(4.0/3.0)+e*k*t2506*t2525* \
               t2517*t2526*2.0+e*k*rho_a[index]*t2505*t2506*(t2530+t2528+gamma_aa[index]*t2491*t2500*t2523*(3.52E2/ \
               9.0)+C4*t2492*t2493*t2495*t2522*9.6E3-C4*gamma_aa[index]*1.0/(k*k*k*k*k*k)*1.0/pow(rho_a[index],1.0E1) \
               *t2492*t2495*(2.5E3/9.0)-C1*C2*t2492*t2493*t2510*t2522*t2529*(6.4E1/9.0))-e*k*rho_a[index]*1.0/pow(t2486,5.0/ \
               3.0)*t2505*t2517*(8.0/9.0)-e*k*rho_a[index]*t2521*t2505*t2518*(4.0/3.0)+e*k*rho_a[index]*1.0/(t2504* \
               t2504*t2504)*t2506*(t2525*t2525)*t2517*2.0-e*k*rho_a[index]*t2506*t2517*t2526*(t2530+t2528+C5*t2492* \
               t2493*t2522*(1.216E3/9.0)-C1*C2*t2492*t2493*t2510*t2522*t2529*(6.4E1/9.0))-e*k*rho_a[index]*t2521* \
               t2506*t2525*t2526*2.0+e*k*rho_a[index]*t2525*t2517*t2526*t2518*(4.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1938 = rho_b[index]*2.0;
            double t1939 = 1.0/k;
            double t1940 = gamma_bb[index]*4.0;
            double t1941 = sqrt(t1940);
            double t1942 = 1.0/pow(t1938,4.0/3.0);
            double t1943 = 1.0/(k*k);
            double t1944 = gamma_bb[index]*gamma_bb[index];
            double t1945 = 1.0/(k*k*k*k);
            double t1946 = 1.0/pow(t1938,8.0/3.0);
            double t1951 = gamma_bb[index]*t1943*t1946*1.0E2;
            double t1947 = exp(-t1951);
            double t1948 = C2*t1941*t1942*t1939*(1.0/2.0);
            double t1949 = log(t1948+sqrt(t1948*t1948+1.0));
            double t1950 = 1.0/pow(t1938,1.1E1/3.0);
            double t1967 = C4*t1947;
            double t1952 = C3-t1967;
            double t1953 = C1*t1941*t1942*t1939*t1949*(1.0/2.0);
            double t1954 = 1.0/pow(t1938,1.6E1/3.0);
            double t1955 = C5*t1944*t1945*t1954;
            double t1956 = t1953+t1955+1.0;
            double t1957 = 1.0/t1956;
            double t1958 = pow(t1938,1.0/3.0);
            double t1959 = 1.0/pow(t1938,1.9E1/3.0);
            double t1960 = 1.0/pow(t1938,7.0/3.0);
            double t1961 = C1*t1941*t1960*t1939*t1949*(4.0/3.0);
            double t1962 = C2*C2;
            double t1963 = gamma_bb[index]*t1943*t1962*t1946;
            double t1964 = t1963+1.0;
            double t1965 = 1.0/sqrt(t1964);
            double t1966 = C1*C2*gamma_bb[index]*t1950*t1943*t1965*(8.0/3.0);
            double t1968 = gamma_bb[index]*t1943*t1952*t1946;
            double t1969 = t1953+t1968+1.0;
            double t1970 = 1.0/pow(t1938,2.0/3.0);
            double t1971 = gamma_bb[index]*t1950*t1943*t1952*(1.6E1/3.0);
            double t1972 = C4*t1944*t1945*t1947*t1959*(1.6E3/3.0);
            double t1973 = t1961+t1971+t1972+t1966;
            double t1974 = 1.0/pow(t1938,2.2E1/3.0);
            double t1975 = 1.0/pow(t1938,1.4E1/3.0);
            double t1976 = C5*t1944*t1945*t1959*(3.2E1/3.0);
            double t1977 = t1961+t1966+t1976;
            double t1978 = 1.0/(t1956*t1956);
            double t1979 = 1.0/pow(t1938,1.0E1/3.0);
            double t1980 = C1*t1941*t1939*t1949*t1979*(5.6E1/9.0);
            double t1981 = 1.0/pow(t1964,3.0/2.0);
            double t1982 = C1*C2*gamma_bb[index]*t1943*t1965*t1975*(8.0E1/3.0);
            v_rho_b_rho_b_[index] = e*k*t1970*t1957*t1969*(4.0/3.0)-e*k*t1973*t1957*t1958*2.0+e*k*t1958*t1977* \
               t1969*t1978*2.0+e*k*rho_b[index]*t1957*t1958*(t1980+t1982+gamma_bb[index]*t1943*t1952*t1975*(3.52E2/ \
               9.0)+C4*t1944*t1945*t1947*t1974*9.6E3-C4*gamma_bb[index]*1.0/(k*k*k*k*k*k)*1.0/pow(rho_b[index],1.0E1) \
               *t1944*t1947*(2.5E3/9.0)-C1*C2*t1944*t1962*t1945*t1981*t1974*(6.4E1/9.0))-e*k*rho_b[index]*1.0/pow(t1938,5.0/ \
               3.0)*t1957*t1969*(8.0/9.0)-e*k*rho_b[index]*t1970*t1973*t1957*(4.0/3.0)+e*k*rho_b[index]*1.0/(t1956* \
               t1956*t1956)*t1958*(t1977*t1977)*t1969*2.0-e*k*rho_b[index]*t1958*t1969*t1978*(t1980+t1982+C5*t1944* \
               t1945*t1974*(1.216E3/9.0)-C1*C2*t1944*t1962*t1945*t1981*t1974*(6.4E1/9.0))+e*k*rho_b[index]*t1970* \
               t1977*t1969*t1978*(4.0/3.0)-e*k*rho_b[index]*t1973*t1958*t1977*t1978*2.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t2255 = rho_b[index]*2.0;
            double t2256 = 1.0/k;
            double t2257 = gamma_bb[index]*4.0;
            double t2258 = sqrt(t2257);
            double t2259 = 1.0/pow(t2255,4.0/3.0);
            double t2260 = 1.0/(k*k);
            double t2261 = gamma_bb[index]*gamma_bb[index];
            double t2262 = 1.0/(k*k*k*k);
            double t2263 = 1.0/pow(t2255,8.0/3.0);
            double t2268 = gamma_bb[index]*t2260*t2263*1.0E2;
            double t2264 = exp(-t2268);
            double t2265 = C2*t2256*t2258*t2259*(1.0/2.0);
            double t2266 = log(t2265+sqrt(t2265*t2265+1.0));
            double t2267 = 1.0/pow(t2255,1.1E1/3.0);
            double t2284 = C4*t2264;
            double t2269 = C3-t2284;
            double t2270 = C1*t2256*t2266*t2258*t2259*(1.0/2.0);
            double t2271 = 1.0/pow(t2255,1.6E1/3.0);
            double t2272 = C5*t2261*t2262*t2271;
            double t2273 = t2270+t2272+1.0;
            double t2274 = 1.0/t2273;
            double t2275 = pow(t2255,1.0/3.0);
            double t2276 = 1.0/pow(t2255,1.9E1/3.0);
            double t2277 = 1.0/pow(t2255,7.0/3.0);
            double t2278 = C1*t2256*t2266*t2258*t2277*(4.0/3.0);
            double t2279 = C2*C2;
            double t2280 = gamma_bb[index]*t2260*t2263*t2279;
            double t2281 = t2280+1.0;
            double t2282 = 1.0/sqrt(t2281);
            double t2283 = C1*C2*gamma_bb[index]*t2260*t2282*t2267*(8.0/3.0);
            double t2285 = gamma_bb[index]*t2260*t2263*t2269;
            double t2286 = t2270+t2285+1.0;
            double t2287 = 1.0/pow(t2255,2.0/3.0);
            double t2288 = gamma_bb[index]*t2260*t2267*t2269*(1.6E1/3.0);
            double t2289 = C4*t2261*t2262*t2264*t2276*(1.6E3/3.0);
            double t2290 = t2283+t2278+t2288+t2289;
            double t2291 = 1.0/pow(t2255,2.2E1/3.0);
            double t2292 = 1.0/pow(t2255,1.4E1/3.0);
            double t2293 = C5*t2261*t2262*t2276*(3.2E1/3.0);
            double t2294 = t2283+t2293+t2278;
            double t2295 = 1.0/(t2273*t2273);
            double t2296 = 1.0/pow(t2255,1.0E1/3.0);
            double t2297 = C1*t2256*t2266*t2258*t2296*(5.6E1/9.0);
            double t2298 = 1.0/pow(t2281,3.0/2.0);
            double t2299 = C1*C2*gamma_bb[index]*t2260*t2282*t2292*(8.0E1/3.0);
            v_rho_b_rho_b_[index] = e*k*t2290*t2274*t2275*-2.0+e*k*t2274*t2286*t2287*(4.0/3.0)+e*k*t2275*t2294* \
               t2286*t2295*2.0+e*k*rho_b[index]*t2274*t2275*(t2297+t2299+gamma_bb[index]*t2260*t2292*t2269*(3.52E2/ \
               9.0)+C4*t2261*t2262*t2264*t2291*9.6E3-C4*gamma_bb[index]*1.0/(k*k*k*k*k*k)*1.0/pow(rho_b[index],1.0E1) \
               *t2261*t2264*(2.5E3/9.0)-C1*C2*t2261*t2262*t2291*t2279*t2298*(6.4E1/9.0))-e*k*rho_b[index]*1.0/pow(t2255,5.0/ \
               3.0)*t2274*t2286*(8.0/9.0)-e*k*rho_b[index]*t2290*t2274*t2287*(4.0/3.0)+e*k*rho_b[index]*1.0/(t2273* \
               t2273*t2273)*t2275*(t2294*t2294)*t2286*2.0-e*k*rho_b[index]*t2275*t2286*t2295*(t2297+t2299+C5*t2261* \
               t2262*t2291*(1.216E3/9.0)-C1*C2*t2261*t2262*t2291*t2279*t2298*(6.4E1/9.0))-e*k*rho_b[index]*t2290* \
               t2275*t2294*t2295*2.0+e*k*rho_b[index]*t2294*t2286*t2295*t2287*(4.0/3.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1984 = rho_a[index]*2.0;
                double t1985 = 1.0/k;
                double t1986 = gamma_aa[index]*4.0;
                double t1987 = sqrt(t1986);
                double t1988 = 1.0/pow(t1984,4.0/3.0);
                double t1989 = 1.0/(k*k);
                double t1990 = 1.0/pow(t1984,8.0/3.0);
                double t1991 = 1.0/(k*k*k*k);
                double t2002 = gamma_aa[index]*t1990*t1989*1.0E2;
                double t1992 = exp(-t2002);
                double t1993 = 1.0/pow(t1984,1.6E1/3.0);
                double t1994 = C2*t1985*t1987*t1988*(1.0/2.0);
                double t1995 = log(t1994+sqrt(t1994*t1994+1.0));
                double t1996 = pow(t1984,1.0/3.0);
                double t1997 = gamma_aa[index]*gamma_aa[index];
                double t1998 = C5*t1991*t1993*t1997;
                double t1999 = C1*t1985*t1995*t1987*t1988*(1.0/2.0);
                double t2000 = t1998+t1999+1.0;
                double t2001 = 1.0/t2000;
                double t2011 = C4*t1992;
                double t2003 = C3-t2011;
                double t2004 = C2*C2;
                double t2005 = gamma_aa[index]*t1990*t1989*t2004;
                double t2006 = t2005+1.0;
                double t2007 = 1.0/sqrt(t2006);
                double t2008 = 1.0/pow(t1984,1.1E1/3.0);
                double t2009 = 1.0/sqrt(t1986);
                double t2010 = 1.0/pow(t1984,1.9E1/3.0);
                double t2012 = t1990*t1989*t2003;
                double t2013 = C1*C2*t1990*t1989*t2007*(1.0/2.0);
                double t2014 = C4*gamma_aa[index]*t1991*t1992*t1993*1.0E2;
                double t2015 = C1*t1985*t1995*t1988*t2009;
                double t2016 = t2012+t2013+t2014+t2015;
                double t2017 = 1.0/pow(t1984,7.0/3.0);
                double t2018 = 1.0/(t2000*t2000);
                double t2019 = gamma_aa[index]*t1990*t1989*t2003;
                double t2020 = t1999+t2019+1.0;
                double t2021 = C1*C2*t1989*t2007*t2008*4.0;
                double t2022 = C1*t1985*t1995*t2017*t2009*(8.0/3.0);
                double t2023 = 1.0/pow(t2006,3.0/2.0);
                double t2024 = C5*gamma_aa[index]*t1991*t1993*2.0;
                double t2025 = t2013+t2015+t2024;
                double t2026 = C1*t1985*t1995*t1987*t2017*(4.0/3.0);
                double t2027 = C1*C2*gamma_aa[index]*t1989*t2007*t2008*(8.0/3.0);
                double t2028 = 1.0/pow(t1984,2.0/3.0);
                double t2029 = C5*t1991*t1997*t2010*(3.2E1/3.0);
                double t2030 = t2026+t2027+t2029;
                v_rho_a_gamma_aa_[index] = e*k*t1996*t2001*t2016-e*k*t1996*t2020*t2025*t2018-e*k*rho_a[index]*t1996* \
                   t2001*(t2021+t2022+t1989*t2003*t2008*(1.6E1/3.0)-C4*1.0/(k*k*k*k*k*k)*1.0/(rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t1992* \
                   t1997*(6.25E2/6.0)+C4*gamma_aa[index]*t1991*t1992*t2010*1.6E3-C1*C2*gamma_aa[index]*t1991*t2010*t2004* \
                   t2023*(4.0/3.0))+e*k*rho_a[index]*t2001*t2016*t2028*(2.0/3.0)+e*k*rho_a[index]*t1996*t2020*t2018*(t2021+ \
                   t2022+C5*gamma_aa[index]*t1991*t2010*(6.4E1/3.0)-C1*C2*gamma_aa[index]*t1991*t2010*t2004*t2023*(4.0/ \
                   3.0))+e*k*rho_a[index]*t1996*t2030*t2016*t2018-e*k*rho_a[index]*t2020*t2025*t2018*t2028*(2.0/3.0)+ \
                   e*k*rho_a[index]*t1996*t2025*t2018*(t2026+t2027+gamma_aa[index]*t1989*t2003*t2008*(1.6E1/3.0)+C4*t1991* \
                   t1992*t1997*t2010*(1.6E3/3.0))-e*k*rho_a[index]*t1996*1.0/(t2000*t2000*t2000)*t2020*t2030*t2025*2.0;
            } else if (rho_a[index] > cutoff_) {
                double t2534 = rho_a[index]*2.0;
                double t2535 = 1.0/k;
                double t2536 = gamma_aa[index]*4.0;
                double t2537 = sqrt(t2536);
                double t2538 = 1.0/pow(t2534,4.0/3.0);
                double t2539 = 1.0/(k*k);
                double t2540 = 1.0/pow(t2534,8.0/3.0);
                double t2541 = 1.0/(k*k*k*k);
                double t2552 = gamma_aa[index]*t2540*t2539*1.0E2;
                double t2542 = exp(-t2552);
                double t2543 = 1.0/pow(t2534,1.6E1/3.0);
                double t2544 = C2*t2535*t2537*t2538*(1.0/2.0);
                double t2545 = log(t2544+sqrt(t2544*t2544+1.0));
                double t2546 = pow(t2534,1.0/3.0);
                double t2547 = gamma_aa[index]*gamma_aa[index];
                double t2548 = C5*t2541*t2543*t2547;
                double t2549 = C1*t2535*t2545*t2537*t2538*(1.0/2.0);
                double t2550 = t2548+t2549+1.0;
                double t2551 = 1.0/t2550;
                double t2561 = C4*t2542;
                double t2553 = C3-t2561;
                double t2554 = C2*C2;
                double t2555 = gamma_aa[index]*t2540*t2554*t2539;
                double t2556 = t2555+1.0;
                double t2557 = 1.0/sqrt(t2556);
                double t2558 = 1.0/pow(t2534,1.1E1/3.0);
                double t2559 = 1.0/sqrt(t2536);
                double t2560 = 1.0/pow(t2534,1.9E1/3.0);
                double t2562 = t2540*t2553*t2539;
                double t2563 = C1*C2*t2540*t2539*t2557*(1.0/2.0);
                double t2564 = C4*gamma_aa[index]*t2541*t2542*t2543*1.0E2;
                double t2565 = C1*t2535*t2545*t2538*t2559;
                double t2566 = t2562+t2563+t2564+t2565;
                double t2567 = 1.0/pow(t2534,7.0/3.0);
                double t2568 = 1.0/(t2550*t2550);
                double t2569 = gamma_aa[index]*t2540*t2553*t2539;
                double t2570 = t2549+t2569+1.0;
                double t2571 = C1*C2*t2539*t2557*t2558*4.0;
                double t2572 = C1*t2535*t2545*t2567*t2559*(8.0/3.0);
                double t2573 = 1.0/pow(t2556,3.0/2.0);
                double t2574 = C5*gamma_aa[index]*t2541*t2543*2.0;
                double t2575 = t2563+t2565+t2574;
                double t2576 = C1*t2535*t2545*t2537*t2567*(4.0/3.0);
                double t2577 = C1*C2*gamma_aa[index]*t2539*t2557*t2558*(8.0/3.0);
                double t2578 = 1.0/pow(t2534,2.0/3.0);
                double t2579 = C5*t2541*t2560*t2547*(3.2E1/3.0);
                double t2580 = t2576+t2577+t2579;
                v_rho_a_gamma_aa_[index] = e*k*t2551*t2546*t2566-e*k*t2570*t2546*t2575*t2568-e*k*rho_a[index]*t2551* \
                   t2546*(t2571+t2572+t2553*t2539*t2558*(1.6E1/3.0)-C4*1.0/(k*k*k*k*k*k)*1.0/(rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t2542* \
                   t2547*(6.25E2/6.0)+C4*gamma_aa[index]*t2541*t2542*t2560*1.6E3-C1*C2*gamma_aa[index]*t2541*t2560*t2554* \
                   t2573*(4.0/3.0))+e*k*rho_a[index]*t2551*t2566*t2578*(2.0/3.0)+e*k*rho_a[index]*t2570*t2546*t2568*(t2571+ \
                   t2572+C5*gamma_aa[index]*t2541*t2560*(6.4E1/3.0)-C1*C2*gamma_aa[index]*t2541*t2560*t2554*t2573*(4.0/ \
                   3.0))+e*k*rho_a[index]*t2580*t2546*t2566*t2568-e*k*rho_a[index]*t2570*t2575*t2568*t2578*(2.0/3.0)+ \
                   e*k*rho_a[index]*t2546*t2575*t2568*(t2576+t2577+gamma_aa[index]*t2553*t2539*t2558*(1.6E1/3.0)+C4*t2541* \
                   t2542*t2560*t2547*(1.6E3/3.0))-e*k*rho_a[index]*1.0/(t2550*t2550*t2550)*t2570*t2580*t2546*t2575*2.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2036 = rho_b[index]*2.0;
                double t2037 = 1.0/k;
                double t2038 = gamma_bb[index]*4.0;
                double t2039 = sqrt(t2038);
                double t2040 = 1.0/pow(t2036,4.0/3.0);
                double t2041 = 1.0/(k*k);
                double t2042 = 1.0/pow(t2036,8.0/3.0);
                double t2043 = 1.0/(k*k*k*k);
                double t2054 = gamma_bb[index]*t2041*t2042*1.0E2;
                double t2044 = exp(-t2054);
                double t2045 = 1.0/pow(t2036,1.6E1/3.0);
                double t2046 = C2*t2040*t2037*t2039*(1.0/2.0);
                double t2047 = log(t2046+sqrt(t2046*t2046+1.0));
                double t2048 = pow(t2036,1.0/3.0);
                double t2049 = gamma_bb[index]*gamma_bb[index];
                double t2050 = C5*t2043*t2045*t2049;
                double t2051 = C1*t2040*t2037*t2047*t2039*(1.0/2.0);
                double t2052 = t2050+t2051+1.0;
                double t2053 = 1.0/t2052;
                double t2063 = C4*t2044;
                double t2055 = C3-t2063;
                double t2056 = C2*C2;
                double t2057 = gamma_bb[index]*t2041*t2042*t2056;
                double t2058 = t2057+1.0;
                double t2059 = 1.0/sqrt(t2058);
                double t2060 = 1.0/pow(t2036,1.1E1/3.0);
                double t2061 = 1.0/sqrt(t2038);
                double t2062 = 1.0/pow(t2036,1.9E1/3.0);
                double t2064 = t2041*t2042*t2055;
                double t2065 = C1*C2*t2041*t2042*t2059*(1.0/2.0);
                double t2066 = C4*gamma_bb[index]*t2043*t2044*t2045*1.0E2;
                double t2067 = C1*t2040*t2061*t2037*t2047;
                double t2068 = t2064+t2065+t2066+t2067;
                double t2069 = 1.0/pow(t2036,7.0/3.0);
                double t2070 = 1.0/(t2052*t2052);
                double t2071 = gamma_bb[index]*t2041*t2042*t2055;
                double t2072 = t2051+t2071+1.0;
                double t2073 = C1*C2*t2041*t2060*t2059*4.0;
                double t2074 = C1*t2061*t2037*t2047*t2069*(8.0/3.0);
                double t2075 = 1.0/pow(t2058,3.0/2.0);
                double t2076 = C5*gamma_bb[index]*t2043*t2045*2.0;
                double t2077 = t2065+t2067+t2076;
                double t2078 = C1*t2037*t2047*t2039*t2069*(4.0/3.0);
                double t2079 = C1*C2*gamma_bb[index]*t2041*t2060*t2059*(8.0/3.0);
                double t2080 = 1.0/pow(t2036,2.0/3.0);
                double t2081 = C5*t2043*t2062*t2049*(3.2E1/3.0);
                double t2082 = t2081+t2078+t2079;
                v_rho_b_gamma_bb_[index] = e*k*t2053*t2048*t2068-e*k*t2070*t2072*t2048*t2077-e*k*rho_b[index]*t2053* \
                   t2048*(t2073+t2074+t2041*t2060*t2055*(1.6E1/3.0)-C4*1.0/(k*k*k*k*k*k)*1.0/(rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t2044* \
                   t2049*(6.25E2/6.0)+C4*gamma_bb[index]*t2043*t2044*t2062*1.6E3-C1*C2*gamma_bb[index]*t2043*t2062*t2056* \
                   t2075*(4.0/3.0))+e*k*rho_b[index]*t2053*t2080*t2068*(2.0/3.0)+e*k*rho_b[index]*t2070*t2072*t2048*(t2073+ \
                   t2074+C5*gamma_bb[index]*t2043*t2062*(6.4E1/3.0)-C1*C2*gamma_bb[index]*t2043*t2062*t2056*t2075*(4.0/ \
                   3.0))-e*k*rho_b[index]*t2070*t2080*t2072*t2077*(2.0/3.0)+e*k*rho_b[index]*t2070*t2082*t2048*t2068+ \
                   e*k*rho_b[index]*t2070*t2048*t2077*(t2078+t2079+gamma_bb[index]*t2041*t2060*t2055*(1.6E1/3.0)+C4*t2043* \
                   t2044*t2062*t2049*(1.6E3/3.0))-e*k*rho_b[index]*1.0/(t2052*t2052*t2052)*t2072*t2082*t2048*t2077*2.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t2306 = rho_b[index]*2.0;
                double t2307 = 1.0/k;
                double t2308 = gamma_bb[index]*4.0;
                double t2309 = sqrt(t2308);
                double t2310 = 1.0/pow(t2306,4.0/3.0);
                double t2311 = 1.0/(k*k);
                double t2312 = 1.0/pow(t2306,8.0/3.0);
                double t2313 = 1.0/(k*k*k*k);
                double t2324 = gamma_bb[index]*t2311*t2312*1.0E2;
                double t2314 = exp(-t2324);
                double t2315 = 1.0/pow(t2306,1.6E1/3.0);
                double t2316 = C2*t2310*t2307*t2309*(1.0/2.0);
                double t2317 = log(t2316+sqrt(t2316*t2316+1.0));
                double t2318 = pow(t2306,1.0/3.0);
                double t2319 = gamma_bb[index]*gamma_bb[index];
                double t2320 = C5*t2313*t2315*t2319;
                double t2321 = C1*t2310*t2307*t2317*t2309*(1.0/2.0);
                double t2322 = t2320+t2321+1.0;
                double t2323 = 1.0/t2322;
                double t2333 = C4*t2314;
                double t2325 = C3-t2333;
                double t2326 = C2*C2;
                double t2327 = gamma_bb[index]*t2311*t2312*t2326;
                double t2328 = t2327+1.0;
                double t2329 = 1.0/sqrt(t2328);
                double t2330 = 1.0/pow(t2306,1.1E1/3.0);
                double t2331 = 1.0/sqrt(t2308);
                double t2332 = 1.0/pow(t2306,1.9E1/3.0);
                double t2334 = t2311*t2312*t2325;
                double t2335 = C1*C2*t2311*t2312*t2329*(1.0/2.0);
                double t2336 = C4*gamma_bb[index]*t2313*t2314*t2315*1.0E2;
                double t2337 = C1*t2310*t2331*t2307*t2317;
                double t2338 = t2334+t2335+t2336+t2337;
                double t2339 = 1.0/pow(t2306,7.0/3.0);
                double t2340 = 1.0/(t2322*t2322);
                double t2341 = gamma_bb[index]*t2311*t2312*t2325;
                double t2342 = t2321+t2341+1.0;
                double t2343 = C1*C2*t2311*t2330*t2329*4.0;
                double t2344 = C1*t2331*t2307*t2317*t2339*(8.0/3.0);
                double t2345 = 1.0/pow(t2328,3.0/2.0);
                double t2346 = C5*gamma_bb[index]*t2313*t2315*2.0;
                double t2347 = t2335+t2337+t2346;
                double t2348 = C1*t2307*t2317*t2309*t2339*(4.0/3.0);
                double t2349 = C1*C2*gamma_bb[index]*t2311*t2330*t2329*(8.0/3.0);
                double t2350 = 1.0/pow(t2306,2.0/3.0);
                double t2351 = C5*t2313*t2332*t2319*(3.2E1/3.0);
                double t2352 = t2351+t2348+t2349;
                v_rho_b_gamma_bb_[index] = e*k*t2323*t2318*t2338-e*k*t2340*t2342*t2318*t2347-e*k*rho_b[index]*t2323* \
                   t2318*(t2343+t2344+t2311*t2330*t2325*(1.6E1/3.0)-C4*1.0/(k*k*k*k*k*k)*1.0/(rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t2314* \
                   t2319*(6.25E2/6.0)+C4*gamma_bb[index]*t2313*t2314*t2332*1.6E3-C1*C2*gamma_bb[index]*t2313*t2332*t2326* \
                   t2345*(4.0/3.0))+e*k*rho_b[index]*t2323*t2350*t2338*(2.0/3.0)+e*k*rho_b[index]*t2340*t2342*t2318*(t2343+ \
                   t2344+C5*gamma_bb[index]*t2313*t2332*(6.4E1/3.0)-C1*C2*gamma_bb[index]*t2313*t2332*t2326*t2345*(4.0/ \
                   3.0))-e*k*rho_b[index]*t2340*t2350*t2342*t2347*(2.0/3.0)+e*k*rho_b[index]*t2340*t2352*t2318*t2338+ \
                   e*k*rho_b[index]*t2340*t2318*t2347*(t2348+t2349+gamma_bb[index]*t2311*t2330*t2325*(1.6E1/3.0)+C4*t2313* \
                   t2314*t2332*t2319*(1.6E3/3.0))-e*k*rho_b[index]*1.0/(t2322*t2322*t2322)*t2342*t2352*t2318*t2347*2.0;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2084 = rho_a[index]*2.0;
                double t2085 = 1.0/k;
                double t2086 = gamma_aa[index]*4.0;
                double t2087 = sqrt(t2086);
                double t2088 = 1.0/pow(t2084,4.0/3.0);
                double t2089 = 1.0/(k*k*k*k);
                double t2090 = 1.0/pow(t2084,1.6E1/3.0);
                double t2091 = C2*C2;
                double t2092 = 1.0/(k*k);
                double t2093 = 1.0/pow(t2084,8.0/3.0);
                double t2102 = gamma_aa[index]*t2092*t2093*1.0E2;
                double t2094 = exp(-t2102);
                double t2095 = C2*t2085*t2087*t2088*(1.0/2.0);
                double t2096 = log(t2095+sqrt(t2095*t2095+1.0));
                double t2097 = gamma_aa[index]*t2091*t2092*t2093;
                double t2098 = t2097+1.0;
                double t2099 = pow(t2084,1.0/3.0);
                double t2100 = 1.0/sqrt(t2098);
                double t2115 = C5*gamma_aa[index]*t2090*t2089*2.0;
                double t2116 = C1*C2*t2092*t2093*t2100*(1.0/2.0);
                double t2117 = 1.0/sqrt(t2086);
                double t2118 = C1*t2085*t2096*t2088*t2117;
                double t2101 = t2115+t2116+t2118;
                double t2103 = C1*t2085*t2087*t2096*t2088*(1.0/2.0);
                double t2104 = gamma_aa[index]*gamma_aa[index];
                double t2105 = C5*t2090*t2089*t2104;
                double t2106 = t2103+t2105+1.0;
                double t2120 = C4*t2094;
                double t2107 = C3-t2120;
                double t2108 = gamma_aa[index]*t2092*t2093*t2107;
                double t2109 = t2103+t2108+1.0;
                double t2110 = 1.0/pow(t2098,3.0/2.0);
                double t2111 = C1*C2*t2090*t2091*t2089*t2110*(1.0/4.0);
                double t2112 = 1.0/pow(t2086,3.0/2.0);
                double t2113 = C1*t2085*t2096*t2088*t2112*2.0;
                double t2114 = 1.0/gamma_aa[index];
                double t2119 = 1.0/(t2106*t2106);
                v_gamma_aa_gamma_aa_[index] = -(e*k*rho_a[index]*t2099*(t2111+t2113-C4*t2090*t2094*t2089*2.0E2+C4* \
                   gamma_aa[index]*1.0/(k*k*k*k*k*k)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index])*t2094*(6.25E2/1.6E1)-C1*C2*t2092*t2093*t2100*t2114*(1.0/4.0) \
                   ))/t2106+e*k*rho_a[index]*t2099*(t2101*t2101)*1.0/(t2106*t2106*t2106)*t2109*2.0-e*k*rho_a[index]*t2099* \
                   t2101*t2119*(t2116+t2118+t2092*t2093*t2107+C4*gamma_aa[index]*t2090*t2094*t2089*1.0E2)*2.0+e*k*rho_a[index]* \
                   t2099*t2109*t2119*(t2111+t2113-C5*t2090*t2089*2.0-C1*C2*t2092*t2093*t2100*t2114*(1.0/4.0));
            } else if (rho_a[index] > cutoff_) {
                double t2587 = rho_a[index]*2.0;
                double t2588 = 1.0/k;
                double t2589 = gamma_aa[index]*4.0;
                double t2590 = sqrt(t2589);
                double t2591 = 1.0/pow(t2587,4.0/3.0);
                double t2592 = 1.0/(k*k*k*k);
                double t2593 = 1.0/pow(t2587,1.6E1/3.0);
                double t2594 = C2*C2;
                double t2595 = 1.0/(k*k);
                double t2596 = 1.0/pow(t2587,8.0/3.0);
                double t2605 = gamma_aa[index]*t2595*t2596*1.0E2;
                double t2597 = exp(-t2605);
                double t2598 = C2*t2590*t2591*t2588*(1.0/2.0);
                double t2599 = log(t2598+sqrt(t2598*t2598+1.0));
                double t2600 = gamma_aa[index]*t2594*t2595*t2596;
                double t2601 = t2600+1.0;
                double t2602 = pow(t2587,1.0/3.0);
                double t2603 = 1.0/sqrt(t2601);
                double t2618 = C5*gamma_aa[index]*t2592*t2593*2.0;
                double t2619 = C1*C2*t2595*t2596*t2603*(1.0/2.0);
                double t2620 = 1.0/sqrt(t2589);
                double t2621 = C1*t2591*t2588*t2599*t2620;
                double t2604 = t2621+t2618+t2619;
                double t2606 = C1*t2590*t2591*t2588*t2599*(1.0/2.0);
                double t2607 = gamma_aa[index]*gamma_aa[index];
                double t2608 = C5*t2592*t2593*t2607;
                double t2609 = t2606+t2608+1.0;
                double t2623 = C4*t2597;
                double t2610 = C3-t2623;
                double t2611 = gamma_aa[index]*t2595*t2596*t2610;
                double t2612 = t2611+t2606+1.0;
                double t2613 = 1.0/pow(t2601,3.0/2.0);
                double t2614 = C1*C2*t2592*t2593*t2594*t2613*(1.0/4.0);
                double t2615 = 1.0/pow(t2589,3.0/2.0);
                double t2616 = C1*t2591*t2588*t2599*t2615*2.0;
                double t2617 = 1.0/gamma_aa[index];
                double t2622 = 1.0/(t2609*t2609);
                v_gamma_aa_gamma_aa_[index] = -(e*k*rho_a[index]*t2602*(t2614+t2616-C4*t2592*t2593*t2597*2.0E2+C4* \
                   gamma_aa[index]*1.0/(k*k*k*k*k*k)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index])*t2597*(6.25E2/1.6E1)-C1*C2*t2595*t2596*t2603*t2617*(1.0/4.0) \
                   ))/t2609+e*k*rho_a[index]*t2602*t2612*(t2604*t2604)*1.0/(t2609*t2609*t2609)*2.0-e*k*rho_a[index]*t2602* \
                   t2604*t2622*(t2621+t2619+t2595*t2596*t2610+C4*gamma_aa[index]*t2592*t2593*t2597*1.0E2)*2.0+e*k*rho_a[index]* \
                   t2602*t2612*t2622*(t2614+t2616-C5*t2592*t2593*2.0-C1*C2*t2595*t2596*t2603*t2617*(1.0/4.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2126 = rho_b[index]*2.0;
                double t2127 = 1.0/k;
                double t2128 = gamma_bb[index]*4.0;
                double t2129 = sqrt(t2128);
                double t2130 = 1.0/pow(t2126,4.0/3.0);
                double t2131 = 1.0/(k*k*k*k);
                double t2132 = 1.0/pow(t2126,1.6E1/3.0);
                double t2133 = C2*C2;
                double t2134 = 1.0/(k*k);
                double t2135 = 1.0/pow(t2126,8.0/3.0);
                double t2144 = gamma_bb[index]*t2134*t2135*1.0E2;
                double t2136 = exp(-t2144);
                double t2137 = C2*t2130*t2127*t2129*(1.0/2.0);
                double t2138 = log(t2137+sqrt(t2137*t2137+1.0));
                double t2139 = gamma_bb[index]*t2133*t2134*t2135;
                double t2140 = t2139+1.0;
                double t2141 = pow(t2126,1.0/3.0);
                double t2142 = 1.0/sqrt(t2140);
                double t2157 = C5*gamma_bb[index]*t2131*t2132*2.0;
                double t2158 = C1*C2*t2142*t2134*t2135*(1.0/2.0);
                double t2159 = 1.0/sqrt(t2128);
                double t2160 = C1*t2130*t2127*t2138*t2159;
                double t2143 = t2160+t2157+t2158;
                double t2145 = C1*t2130*t2127*t2129*t2138*(1.0/2.0);
                double t2146 = gamma_bb[index]*gamma_bb[index];
                double t2147 = C5*t2131*t2132*t2146;
                double t2148 = t2145+t2147+1.0;
                double t2162 = C4*t2136;
                double t2149 = C3-t2162;
                double t2150 = gamma_bb[index]*t2134*t2135*t2149;
                double t2151 = t2150+t2145+1.0;
                double t2152 = 1.0/pow(t2140,3.0/2.0);
                double t2153 = C1*C2*t2131*t2132*t2133*t2152*(1.0/4.0);
                double t2154 = 1.0/pow(t2128,3.0/2.0);
                double t2155 = C1*t2130*t2127*t2154*t2138*2.0;
                double t2156 = 1.0/gamma_bb[index];
                double t2161 = 1.0/(t2148*t2148);
                v_gamma_bb_gamma_bb_[index] = -(e*k*rho_b[index]*t2141*(t2153+t2155-C4*t2131*t2132*t2136*2.0E2+C4* \
                   gamma_bb[index]*1.0/(k*k*k*k*k*k)*1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index])*t2136*(6.25E2/1.6E1)-C1*C2*t2142*t2134*t2135*t2156*(1.0/4.0) \
                   ))/t2148+e*k*rho_b[index]*t2141*t2151*(t2143*t2143)*1.0/(t2148*t2148*t2148)*2.0-e*k*rho_b[index]*t2141* \
                   t2143*t2161*(t2160+t2158+t2134*t2135*t2149+C4*gamma_bb[index]*t2131*t2132*t2136*1.0E2)*2.0+e*k*rho_b[index]* \
                   t2141*t2151*t2161*(t2153+t2155-C5*t2131*t2132*2.0-C1*C2*t2142*t2134*t2135*t2156*(1.0/4.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t2359 = rho_b[index]*2.0;
                double t2360 = 1.0/k;
                double t2361 = gamma_bb[index]*4.0;
                double t2362 = sqrt(t2361);
                double t2363 = 1.0/pow(t2359,4.0/3.0);
                double t2364 = 1.0/(k*k*k*k);
                double t2365 = 1.0/pow(t2359,1.6E1/3.0);
                double t2366 = C2*C2;
                double t2367 = 1.0/(k*k);
                double t2368 = 1.0/pow(t2359,8.0/3.0);
                double t2377 = gamma_bb[index]*t2367*t2368*1.0E2;
                double t2369 = exp(-t2377);
                double t2370 = C2*t2360*t2362*t2363*(1.0/2.0);
                double t2371 = log(t2370+sqrt(t2370*t2370+1.0));
                double t2372 = gamma_bb[index]*t2366*t2367*t2368;
                double t2373 = t2372+1.0;
                double t2374 = pow(t2359,1.0/3.0);
                double t2375 = 1.0/sqrt(t2373);
                double t2390 = C5*gamma_bb[index]*t2364*t2365*2.0;
                double t2391 = C1*C2*t2375*t2367*t2368*(1.0/2.0);
                double t2392 = 1.0/sqrt(t2361);
                double t2393 = C1*t2360*t2371*t2363*t2392;
                double t2376 = t2390+t2391+t2393;
                double t2378 = C1*t2360*t2362*t2371*t2363*(1.0/2.0);
                double t2379 = gamma_bb[index]*gamma_bb[index];
                double t2380 = C5*t2364*t2365*t2379;
                double t2381 = t2380+t2378+1.0;
                double t2395 = C4*t2369;
                double t2382 = C3-t2395;
                double t2383 = gamma_bb[index]*t2382*t2367*t2368;
                double t2384 = t2383+t2378+1.0;
                double t2385 = 1.0/pow(t2373,3.0/2.0);
                double t2386 = C1*C2*t2364*t2365*t2366*t2385*(1.0/4.0);
                double t2387 = 1.0/pow(t2361,3.0/2.0);
                double t2388 = C1*t2360*t2371*t2363*t2387*2.0;
                double t2389 = 1.0/gamma_bb[index];
                double t2394 = 1.0/(t2381*t2381);
                v_gamma_bb_gamma_bb_[index] = -(e*k*rho_b[index]*t2374*(t2386+t2388-C4*t2364*t2365*t2369*2.0E2+C4* \
                   gamma_bb[index]*1.0/(k*k*k*k*k*k)*1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index])*t2369*(6.25E2/1.6E1)-C1*C2*t2375*t2367*t2368*t2389*(1.0/4.0) \
                   ))/t2381+e*k*rho_b[index]*1.0/(t2381*t2381*t2381)*t2374*t2384*(t2376*t2376)*2.0-e*k*rho_b[index]*t2374* \
                   t2376*t2394*(t2391+t2393+t2382*t2367*t2368+C4*gamma_bb[index]*t2364*t2365*t2369*1.0E2)*2.0+e*k*rho_b[index]* \
                   t2374*t2384*t2394*(t2386+t2388-C5*t2364*t2365*2.0-C1*C2*t2375*t2367*t2368*t2389*(1.0/4.0));
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

