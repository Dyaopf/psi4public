/**********************************************************
* HCTH_functional.cc: definitions for HCTH_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "HCTH_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

HCTH_Functional::HCTH_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "HCTH";
    description_ = "HCTH Power Series GGA";
    citation_ = "F.A. Hamprecht et. al., J. Chem. Phys., 109(15), 6264-6271";
    
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 7.2997400000000001E-01;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 3.3528699999999998E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.1542999999999999E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 8.0856399999999997E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = -4.4785700000000004E+00;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 2.2260099999999999E-01;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -3.3862200000000002E-02;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = -1.2517000000000000E-02;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -8.0249599999999999E-01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 1.5539600000000000E+00;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 1.0931999999999999E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = -7.4405600000000005E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 5.5991999999999997E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = -6.7854900000000002E+00;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = 4.4935700000000001E+00;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
HCTH_Functional::~HCTH_Functional()
{
}
void HCTH_Functional::computeRKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t50451 = 1/pow(rho_a[index],1.0/3.0);
            double t50452 = c*t50451;
            double t50453 = sqrt(t50452);
            double t50454 = pow(t50452,3.0/2.0);
            double t50455 = c*c;
            double t50456 = 1/pow(rho_a[index],2.0/3.0);
            double t50457 = 1/c0p;
            double t50458 = b1p*t50453;
            double t50459 = b3p*t50454;
            double t50460 = b4p*t50455*t50456;
            double t50461 = b2p*c*t50451;
            double t50462 = t50460+t50461+t50458+t50459;
            double t50463 = 1/t50462;
            double t50464 = t50463*t50457*(1.0/2.0);
            double t50465 = t50464+1.0;
            double t50466 = log(t50465);
            double t50467 = a1p*c*t50451;
            double t50468 = t50467+1.0;
            double t50469 = rho_a[index]*2.0;
            double t50470 = 1/pow(t50469,1.0/3.0);
            double t50471 = c*t50470;
            double t50472 = gamma_aa[index]*gamma_aa[index];
            double t50473 = gcab*gcab;
            double t50474 = t50472*t50472;
            double t50475 = t50473*t50473;
            double t50476 = 1/pow(rho_a[index],3.2E1/3.0);
            double t50477 = 1/pow(rho_a[index],8.0/3.0);
            double t50478 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50479 = 1/pow(rho_a[index],1.6E1/3.0);
            double t50480 = pow(2.0,1.0/3.0);
            double t50481 = t50480*2.0;
            double t50482 = t50481-2.0;
            double t50483 = two_13*2.0;
            double t50484 = t50483-2.0;
            double t50485 = 1/t50484;
            double t50486 = 1/c0f;
            double t50487 = b1f*t50453;
            double t50488 = b3f*t50454;
            double t50489 = b4f*t50455*t50456;
            double t50490 = b2f*c*t50451;
            double t50491 = t50490+t50487+t50488+t50489;
            double t50492 = 1/t50491;
            double t50493 = t50492*t50486*(1.0/2.0);
            double t50494 = t50493+1.0;
            double t50495 = log(t50494);
            double t50496 = a1f*c*t50451;
            double t50497 = t50496+1.0;
            double t50498 = c0f*t50495*t50497*2.0;
            double t50499 = c0p*t50466*t50468*2.0;
            double t50500 = gcaa*gcaa;
            double t50501 = t50500*t50500;
            double t50502 = gx*gx;
            double t50503 = t50502*t50502;
            functional_[index] = (rho_a[index]*(t50499+t50482*t50485*(t50498-c0p*t50466*t50468*2.0))*2.0-c0p* \
               rho_a[index]*log((t50457*(1.0/2.0))/(b1p*sqrt(t50471)+b3p*pow(t50471,3.0/2.0)+b4p*t50455*1/pow(t50469,2.0/ \
               3.0)+b2p*c*t50470)+1.0)*(a1p*c*t50470+1.0)*4.0)*(ccab0+(ccab2*t50472*t50473*t50479)/(gamma_aa[index]* \
               gcab*t50477*2.0+t50472*t50473*t50479+1.0)+(ccab1*gamma_aa[index]*gcab*t50477)/(gamma_aa[index]*gcab* \
               t50477+1.0)+(ccab4*t50474*t50475*t50476)/(gamma_aa[index]*gcab*t50477*4.0+t50472*t50473*t50479*6.0+ \
               t50474*t50475*t50476+gamma_aa[index]*gcab*t50472*t50473*t50478*4.0+1.0)+(ccab3*gamma_aa[index]*gcab* \
               t50472*t50473*t50478)/(gamma_aa[index]*gcab*t50477*3.0+t50472*t50473*t50479*3.0+gamma_aa[index]*gcab* \
               t50472*t50473*t50478+1.0))-rho_a[index]*(t50499+t50482*t50485*(t50498-t50499))*(ccaa0+(ccaa2*t50500* \
               t50472*t50479)/(gamma_aa[index]*gcaa*t50477*2.0+t50500*t50472*t50479+1.0)+(ccaa1*gamma_aa[index]*gcaa* \
               t50477)/(gamma_aa[index]*gcaa*t50477+1.0)+(ccaa4*t50501*t50474*t50476)/(gamma_aa[index]*gcaa*t50477* \
               4.0+t50500*t50472*t50479*6.0+t50501*t50474*t50476+gamma_aa[index]*gcaa*t50500*t50472*t50478*4.0+1.0) \
               +(ccaa3*gamma_aa[index]*gcaa*t50500*t50472*t50478)/(gamma_aa[index]*gcaa*t50477*3.0+t50500*t50472* \
               t50479*3.0+gamma_aa[index]*gcaa*t50500*t50472*t50478+1.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2* \
               t50502*t50472*t50479)/(gamma_aa[index]*gx*t50477*2.0+t50502*t50472*t50479+1.0)+(cx1*gamma_aa[index]* \
               gx*t50477)/(gamma_aa[index]*gx*t50477+1.0)+(cx4*t50503*t50474*t50476)/(gamma_aa[index]*gx*t50477*4.0+ \
               t50502*t50472*t50479*6.0+t50503*t50474*t50476+gamma_aa[index]*gx*t50502*t50472*t50478*4.0+1.0)+(cx3* \
               gamma_aa[index]*gx*t50502*t50472*t50478)/(gamma_aa[index]*gx*t50477*3.0+t50502*t50472*t50479*3.0+gamma_aa[index]* \
               gx*t50502*t50472*t50478+1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t50505 = gamma_aa[index]*gamma_aa[index];
            double t50506 = gcab*gcab;
            double t50507 = t50505*t50505;
            double t50508 = t50506*t50506;
            double t50509 = 1/pow(rho_a[index],3.2E1/3.0);
            double t50510 = 1/pow(rho_a[index],8.0/3.0);
            double t50511 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50512 = 1/pow(rho_a[index],1.6E1/3.0);
            double t50513 = rho_a[index]*2.0;
            double t50514 = 1/pow(t50513,1.0/3.0);
            double t50515 = c*t50514;
            double t50516 = sqrt(t50515);
            double t50517 = b1p*t50516;
            double t50518 = pow(t50515,3.0/2.0);
            double t50519 = b3p*t50518;
            double t50520 = b2p*c*t50514;
            double t50521 = c*c;
            double t50522 = 1/pow(t50513,2.0/3.0);
            double t50523 = b4p*t50521*t50522;
            double t50524 = t50520+t50523+t50517+t50519;
            double t50525 = 1/pow(t50513,4.0/3.0);
            double t50526 = 1/c0p;
            double t50527 = 1/t50524;
            double t50528 = t50526*t50527*(1.0/2.0);
            double t50529 = t50528+1.0;
            double t50530 = 1/pow(rho_a[index],1.0/3.0);
            double t50531 = c*t50530;
            double t50532 = sqrt(t50531);
            double t50533 = b1f*t50532;
            double t50534 = pow(t50531,3.0/2.0);
            double t50535 = b3f*t50534;
            double t50536 = 1/pow(rho_a[index],2.0/3.0);
            double t50537 = b4f*t50521*t50536;
            double t50538 = b2f*c*t50530;
            double t50539 = t50533+t50535+t50537+t50538;
            double t50540 = 1/pow(rho_a[index],4.0/3.0);
            double t50541 = b1p*t50532;
            double t50542 = b3p*t50534;
            double t50543 = b4p*t50521*t50536;
            double t50544 = b2p*c*t50530;
            double t50545 = t50541+t50542+t50543+t50544;
            double t50546 = 1/pow(rho_a[index],5.0/3.0);
            double t50547 = 1/sqrt(t50531);
            double t50548 = 1/c0f;
            double t50549 = 1/t50539;
            double t50550 = t50548*t50549*(1.0/2.0);
            double t50551 = t50550+1.0;
            double t50552 = 1/t50545;
            double t50553 = t50552*t50526*(1.0/2.0);
            double t50554 = t50553+1.0;
            double t50555 = a1p*c*t50530;
            double t50556 = t50555+1.0;
            double t50557 = 1/t50554;
            double t50558 = 1/(t50545*t50545);
            double t50559 = b4p*t50521*t50546*(2.0/3.0);
            double t50560 = b2p*c*t50540*(1.0/3.0);
            double t50561 = b1p*c*t50540*t50547*(1.0/6.0);
            double t50562 = b3p*c*t50540*t50532*(1.0/2.0);
            double t50563 = t50560+t50561+t50562+t50559;
            double t50564 = t50563*t50556*t50557*t50558;
            double t50565 = log(t50554);
            double t50566 = log(t50529);
            double t50567 = a1p*c*t50514;
            double t50568 = t50567+1.0;
            double t50569 = pow(2.0,1.0/3.0);
            double t50570 = t50569*2.0;
            double t50571 = t50570-2.0;
            double t50572 = two_13*2.0;
            double t50573 = t50572-2.0;
            double t50574 = 1/t50573;
            double t50575 = log(t50551);
            double t50576 = a1f*c*t50530;
            double t50577 = t50576+1.0;
            double t50578 = c0f*t50575*t50577*2.0;
            double t50580 = c0p*t50556*t50565*2.0;
            double t50579 = -t50580+t50578;
            double t50581 = gcaa*gcaa;
            double t50582 = t50581*t50581;
            double t50583 = t50571*t50574*t50579;
            double t50584 = t50580+t50583;
            double t50585 = gamma_aa[index]*gcab*t50510*4.0;
            double t50586 = gamma_aa[index]*gcab*t50511*t50505*t50506*4.0;
            double t50587 = t50512*t50505*t50506*6.0;
            double t50588 = t50507*t50508*t50509;
            double t50589 = t50585+t50586+t50587+t50588+1.0;
            double t50590 = 1/t50589;
            double t50591 = gamma_aa[index]*gcab*t50510;
            double t50592 = t50591+1.0;
            double t50593 = 1/t50592;
            double t50594 = gamma_aa[index]*gcab*t50510*3.0;
            double t50595 = gamma_aa[index]*gcab*t50511*t50505*t50506;
            double t50596 = t50512*t50505*t50506*3.0;
            double t50597 = t50594+t50595+t50596+1.0;
            double t50598 = 1/t50597;
            double t50599 = gamma_aa[index]*gcab*t50510*2.0;
            double t50600 = t50512*t50505*t50506;
            double t50601 = t50600+t50599+1.0;
            double t50602 = 1/t50601;
            double t50603 = 1/pow(rho_a[index],1.9E1/3.0);
            double t50604 = 1/pow(rho_a[index],1.1E1/3.0);
            double t50605 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t50606 = 1/pow(rho_a[index],3.5E1/3.0);
            double t50607 = gamma_aa[index]*gcaa*t50510*4.0;
            double t50608 = gamma_aa[index]*gcaa*t50511*t50505*t50581*4.0;
            double t50609 = t50512*t50505*t50581*6.0;
            double t50610 = t50507*t50509*t50582;
            double t50611 = t50610+t50607+t50608+t50609+1.0;
            double t50612 = 1/t50611;
            double t50613 = gamma_aa[index]*gcaa*t50510;
            double t50614 = t50613+1.0;
            double t50615 = 1/t50614;
            double t50616 = gamma_aa[index]*gcaa*t50510*3.0;
            double t50617 = gamma_aa[index]*gcaa*t50511*t50505*t50581;
            double t50618 = t50512*t50505*t50581*3.0;
            double t50619 = t50616+t50617+t50618+1.0;
            double t50620 = 1/t50619;
            double t50621 = gamma_aa[index]*gcaa*t50510*2.0;
            double t50622 = t50512*t50505*t50581;
            double t50623 = t50621+t50622+1.0;
            double t50624 = 1/t50623;
            double t50625 = gx*gx;
            double t50626 = t50625*t50625;
            double t50627 = gamma_aa[index]*gx*t50510*4.0;
            double t50628 = gamma_aa[index]*gx*t50511*t50505*t50625*4.0;
            double t50629 = t50512*t50505*t50625*6.0;
            double t50630 = t50507*t50509*t50626;
            double t50631 = t50630+t50627+t50628+t50629+1.0;
            double t50632 = 1/t50631;
            double t50633 = gamma_aa[index]*gx*t50510;
            double t50634 = t50633+1.0;
            double t50635 = 1/t50634;
            double t50636 = gamma_aa[index]*gx*t50510*3.0;
            double t50637 = gamma_aa[index]*gx*t50511*t50505*t50625;
            double t50638 = t50512*t50505*t50625*3.0;
            double t50639 = t50636+t50637+t50638+1.0;
            double t50640 = 1/t50639;
            double t50641 = gamma_aa[index]*gx*t50510*2.0;
            double t50642 = t50512*t50505*t50625;
            double t50643 = t50641+t50642+1.0;
            double t50644 = 1/t50643;
            double t50645 = 1/t50551;
            double t50646 = 1/(t50539*t50539);
            double t50647 = b4f*t50521*t50546*(2.0/3.0);
            double t50648 = b2f*c*t50540*(1.0/3.0);
            double t50649 = b1f*c*t50540*t50547*(1.0/6.0);
            double t50650 = b3f*c*t50540*t50532*(1.0/2.0);
            double t50651 = t50650+t50647+t50648+t50649;
            double t50652 = a1f*c*c0f*t50540*t50575*(2.0/3.0);
            double t50653 = a1p*c*c0p*t50540*t50565*(2.0/3.0);
            double t50654 = ccaa4*t50612*t50507*t50509*t50582;
            double t50655 = ccaa1*gamma_aa[index]*gcaa*t50510*t50615;
            double t50656 = ccaa3*gamma_aa[index]*gcaa*t50511*t50620*t50505*t50581;
            double t50657 = ccaa2*t50512*t50505*t50624*t50581;
            double t50658 = ccaa0+t50654+t50655+t50656+t50657;
            v_rho_a_[index] = -(rho_a[index]*t50584*2.0-c0p*rho_a[index]*t50566*t50568*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t50604*t50593*(4.0/3.0)+ccab2*t50602*t50603*t50505*t50506*(8.0/3.0)+ccab4*t50507*t50606*t50508* \
               t50590*(1.6E1/3.0)-ccab1*t50603*t50505*t50506*1/(t50592*t50592)*(4.0/3.0)-ccab2*1/(t50601*t50601)* \
               t50512*t50505*t50506*(gamma_aa[index]*gcab*t50604*(8.0/3.0)+t50603*t50505*t50506*(8.0/3.0))-ccab4* \
               t50507*t50508*t50509*1/(t50589*t50589)*(gamma_aa[index]*gcab*t50604*(1.6E1/3.0)+t50603*t50505*t50506* \
               1.6E1+t50507*t50606*t50508*(1.6E1/3.0)+gamma_aa[index]*gcab*t50505*t50506*t50605*1.6E1)+ccab3*gamma_aa[index]* \
               gcab*t50505*t50506*t50605*t50598*4.0-ccab3*gamma_aa[index]*gcab*t50511*t50505*t50506*1/(t50597*t50597) \
               *(gamma_aa[index]*gcab*t50604*4.0+t50603*t50505*t50506*8.0+gamma_aa[index]*gcab*t50505*t50506*t50605* \
               4.0))-t50584*t50658-(rho_a[index]*((1/(t50524*t50524)*t50568*(b4p*t50521*1/pow(t50513,5.0/3.0)*(2.0/ \
               3.0)+b2p*c*t50525*(1.0/3.0)+b3p*c*t50516*t50525*(1.0/2.0)+b1p*c*1/sqrt(t50515)*t50525*(1.0/6.0)))/ \
               t50529-a1p*c*c0p*t50525*t50566*(2.0/3.0))*2.0+rho_a[index]*(t50653-t50564+t50571*t50574*(t50652+t50564- \
               t50651*t50645*t50646*t50577-a1p*c*c0p*t50540*t50565*(2.0/3.0)))-c0p*t50556*t50565*2.0+c0p*t50566*t50568* \
               2.0-t50571*t50574*t50579)*(ccab0+ccab1*gamma_aa[index]*gcab*t50510*t50593+ccab2*t50512*t50602*t50505* \
               t50506+ccab4*t50507*t50508*t50509*t50590+ccab3*gamma_aa[index]*gcab*t50511*t50505*t50506*t50598)+rho_a[index]* \
               t50584*(ccaa1*gamma_aa[index]*gcaa*t50604*t50615*(8.0/3.0)+ccaa2*t50603*t50505*t50624*t50581*(1.6E1/ \
               3.0)+ccaa4*t50612*t50507*t50606*t50582*(3.2E1/3.0)-ccaa1*t50603*t50505*1/(t50614*t50614)*t50581*(8.0/ \
               3.0)-ccaa2*t50512*t50505*1/(t50623*t50623)*t50581*(gamma_aa[index]*gcaa*t50604*(1.6E1/3.0)+t50603* \
               t50505*t50581*(1.6E1/3.0))-ccaa4*1/(t50611*t50611)*t50507*t50509*t50582*(gamma_aa[index]*gcaa*t50604* \
               (3.2E1/3.0)+t50603*t50505*t50581*3.2E1+t50507*t50606*t50582*(3.2E1/3.0)+gamma_aa[index]*gcaa*t50505* \
               t50605*t50581*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t50620*t50505*t50605*t50581*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t50511*t50505*t50581*1/(t50619*t50619)*(gamma_aa[index]*gcaa*t50604*8.0+t50603*t50505*t50581* \
               1.6E1+gamma_aa[index]*gcaa*t50505*t50605*t50581*8.0))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]* \
               gx*t50510*t50635+cx2*t50512*t50505*t50625*t50644+cx4*t50632*t50507*t50509*t50626+cx3*gamma_aa[index]* \
               gx*t50511*t50505*t50640*t50625)*(4.0/3.0)+rho_a[index]*t50658*(t50653-t50564+t50571*t50574*(t50652- \
               t50653+t50564-t50651*t50645*t50646*t50577))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t50604* \
               t50635*(8.0/3.0)+cx2*t50603*t50505*t50625*t50644*(1.6E1/3.0)+cx4*t50632*t50507*t50606*t50626*(3.2E1/ \
               3.0)-cx1*t50603*t50505*t50625*1/(t50634*t50634)*(8.0/3.0)-cx2*t50512*t50505*t50625*1/(t50643*t50643) \
               *(gamma_aa[index]*gx*t50604*(1.6E1/3.0)+t50603*t50505*t50625*(1.6E1/3.0))-cx4*1/(t50631*t50631)*t50507* \
               t50509*t50626*(gamma_aa[index]*gx*t50604*(3.2E1/3.0)+t50603*t50505*t50625*3.2E1+t50507*t50606*t50626* \
               (3.2E1/3.0)+gamma_aa[index]*gx*t50505*t50605*t50625*3.2E1)+cx3*gamma_aa[index]*gx*t50505*t50640*t50605* \
               t50625*8.0-cx3*gamma_aa[index]*gx*t50511*t50505*t50625*1/(t50639*t50639)*(gamma_aa[index]*gx*t50604* \
               8.0+t50603*t50505*t50625*1.6E1+gamma_aa[index]*gx*t50505*t50605*t50625*8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t50660 = 1/pow(rho_a[index],1.0/3.0);
                double t50661 = c*t50660;
                double t50662 = sqrt(t50661);
                double t50663 = pow(t50661,3.0/2.0);
                double t50664 = c*c;
                double t50665 = 1/pow(rho_a[index],2.0/3.0);
                double t50666 = 1/c0p;
                double t50667 = b1p*t50662;
                double t50668 = b3p*t50663;
                double t50669 = b4p*t50664*t50665;
                double t50670 = b2p*c*t50660;
                double t50671 = t50670+t50667+t50668+t50669;
                double t50672 = 1/t50671;
                double t50673 = t50672*t50666*(1.0/2.0);
                double t50674 = t50673+1.0;
                double t50675 = log(t50674);
                double t50676 = a1p*c*t50660;
                double t50677 = t50676+1.0;
                double t50678 = rho_a[index]*2.0;
                double t50679 = 1/pow(t50678,1.0/3.0);
                double t50680 = c*t50679;
                double t50681 = 1/pow(rho_a[index],8.0/3.0);
                double t50682 = gamma_aa[index]*gamma_aa[index];
                double t50683 = gcab*gcab;
                double t50684 = t50683*t50683;
                double t50685 = 1/pow(rho_a[index],3.2E1/3.0);
                double t50686 = 1/pow(rho_a[index],1.6E1/3.0);
                double t50687 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t50688 = gamma_aa[index]*gcab*t50681;
                double t50689 = t50688+1.0;
                double t50690 = gamma_aa[index]*gcab*t50681*3.0;
                double t50691 = gamma_aa[index]*gcab*t50682*t50683*t50687;
                double t50692 = t50682*t50683*t50686*3.0;
                double t50693 = t50690+t50691+t50692+1.0;
                double t50694 = t50682*t50682;
                double t50695 = gamma_aa[index]*gcab*t50681*4.0;
                double t50696 = gamma_aa[index]*gcab*t50682*t50683*t50687*4.0;
                double t50697 = t50682*t50683*t50686*6.0;
                double t50698 = t50684*t50685*t50694;
                double t50699 = t50695+t50696+t50697+t50698+1.0;
                double t50700 = gamma_aa[index]*gcab*t50681*2.0;
                double t50701 = t50682*t50683*t50686;
                double t50702 = t50700+t50701+1.0;
                double t50703 = gx*gx;
                double t50704 = t50703*t50703;
                double t50705 = gamma_aa[index]*gx*t50681;
                double t50706 = t50705+1.0;
                double t50707 = gamma_aa[index]*gx*t50681*3.0;
                double t50708 = gamma_aa[index]*gx*t50703*t50682*t50687;
                double t50709 = t50703*t50682*t50686*3.0;
                double t50710 = t50707+t50708+t50709+1.0;
                double t50711 = gamma_aa[index]*gx*t50681*4.0;
                double t50712 = gamma_aa[index]*gx*t50703*t50682*t50687*4.0;
                double t50713 = t50703*t50682*t50686*6.0;
                double t50714 = t50704*t50685*t50694;
                double t50715 = t50711+t50712+t50713+t50714+1.0;
                double t50716 = gamma_aa[index]*gx*t50681*2.0;
                double t50717 = t50703*t50682*t50686;
                double t50718 = t50716+t50717+1.0;
                double t50719 = pow(2.0,1.0/3.0);
                double t50720 = t50719*2.0;
                double t50721 = t50720-2.0;
                double t50722 = two_13*2.0;
                double t50723 = t50722-2.0;
                double t50724 = 1/t50723;
                double t50725 = 1/c0f;
                double t50726 = b1f*t50662;
                double t50727 = b3f*t50663;
                double t50728 = b4f*t50664*t50665;
                double t50729 = b2f*c*t50660;
                double t50730 = t50726+t50727+t50728+t50729;
                double t50731 = 1/t50730;
                double t50732 = t50731*t50725*(1.0/2.0);
                double t50733 = t50732+1.0;
                double t50734 = log(t50733);
                double t50735 = a1f*c*t50660;
                double t50736 = t50735+1.0;
                double t50737 = c0f*t50734*t50736*2.0;
                double t50738 = c0p*t50675*t50677*2.0;
                double t50739 = gcaa*gcaa;
                double t50740 = t50739*t50739;
                double t50741 = gamma_aa[index]*gcaa*t50681;
                double t50742 = t50741+1.0;
                double t50743 = gamma_aa[index]*gcaa*t50681*3.0;
                double t50744 = gamma_aa[index]*gcaa*t50682*t50739*t50687;
                double t50745 = t50682*t50739*t50686*3.0;
                double t50746 = t50743+t50744+t50745+1.0;
                double t50747 = gamma_aa[index]*gcaa*t50681*4.0;
                double t50748 = gamma_aa[index]*gcaa*t50682*t50739*t50687*4.0;
                double t50749 = t50682*t50739*t50686*6.0;
                double t50750 = t50740*t50685*t50694;
                double t50751 = t50750+t50747+t50748+t50749+1.0;
                double t50752 = gamma_aa[index]*gcaa*t50681*2.0;
                double t50753 = t50682*t50739*t50686;
                double t50754 = t50752+t50753+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t50738+t50721*t50724*(t50737-c0p*t50675*t50677*2.0))*2.0-c0p* \
                   rho_a[index]*log((t50666*(1.0/2.0))/(b1p*sqrt(t50680)+b3p*pow(t50680,3.0/2.0)+b4p*t50664*1/pow(t50678,2.0/ \
                   3.0)+b2p*c*t50679)+1.0)*(a1p*c*t50679+1.0)*4.0)*((ccab1*gcab*t50681*(1.0/2.0))/t50689+(ccab2*gamma_aa[index]* \
                   t50683*t50686)/t50702-ccab1*gamma_aa[index]*t50683*t50686*1/(t50689*t50689)*(1.0/2.0)-ccab2*1/(t50702* \
                   t50702)*t50682*t50683*t50686*(gcab*t50681+gamma_aa[index]*t50683*t50686)+(ccab4*gamma_aa[index]*t50682* \
                   t50684*t50685*2.0)/t50699+(ccab3*gcab*t50682*t50683*t50687*(3.0/2.0))/t50693-ccab4*t50684*t50685*t50694* \
                   1/(t50699*t50699)*(gcab*t50681*2.0+gamma_aa[index]*t50683*t50686*6.0+gamma_aa[index]*t50682*t50684* \
                   t50685*2.0+gcab*t50682*t50683*t50687*6.0)-ccab3*gamma_aa[index]*gcab*t50682*t50683*1/(t50693*t50693) \
                   *t50687*(gcab*t50681*(3.0/2.0)+gamma_aa[index]*t50683*t50686*3.0+gcab*t50682*t50683*t50687*(3.0/2.0) \
                   ))*2.0-rho_a[index]*(t50738+t50721*t50724*(t50737-t50738))*((ccaa1*gcaa*t50681)/t50742-ccaa1*gamma_aa[index]* \
                   1/(t50742*t50742)*t50739*t50686+(ccaa2*gamma_aa[index]*t50739*t50686*2.0)/t50754-ccaa2*t50682*1/(t50754* \
                   t50754)*t50739*t50686*(gcaa*t50681*2.0+gamma_aa[index]*t50739*t50686*2.0)+(ccaa4*gamma_aa[index]*t50740* \
                   t50682*t50685*4.0)/t50751+(ccaa3*gcaa*t50682*t50739*t50687*3.0)/t50746-ccaa4*t50740*1/(t50751*t50751) \
                   *t50685*t50694*(gcaa*t50681*4.0+gamma_aa[index]*t50739*t50686*1.2E1+gamma_aa[index]*t50740*t50682* \
                   t50685*4.0+gcaa*t50682*t50739*t50687*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t50682*1/(t50746*t50746)*t50739* \
                   t50687*(gcaa*t50681*3.0+gamma_aa[index]*t50739*t50686*6.0+gcaa*t50682*t50739*t50687*3.0))*2.0+c0*pow(rho_a[index],4.0/ \
                   3.0)*((cx1*gx*t50681)/t50706-cx1*gamma_aa[index]*t50703*1/(t50706*t50706)*t50686+(cx2*gamma_aa[index]* \
                   t50703*t50686*2.0)/t50718-cx2*t50703*t50682*1/(t50718*t50718)*t50686*(gx*t50681*2.0+gamma_aa[index]* \
                   t50703*t50686*2.0)+(cx4*gamma_aa[index]*t50704*t50682*t50685*4.0)/t50715+(cx3*gx*t50703*t50682*t50687* \
                   3.0)/t50710-cx4*t50704*1/(t50715*t50715)*t50685*t50694*(gx*t50681*4.0+gamma_aa[index]*t50703*t50686* \
                   1.2E1+gamma_aa[index]*t50704*t50682*t50685*4.0+gx*t50703*t50682*t50687*1.2E1)-cx3*gamma_aa[index]* \
                   gx*1/(t50710*t50710)*t50703*t50682*t50687*(gx*t50681*3.0+gamma_aa[index]*t50703*t50686*6.0+gx*t50703* \
                   t50682*t50687*3.0))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t50757 = rho_a[index]*2.0;
            double t50758 = 1/pow(t50757,1.0/3.0);
            double t50759 = c*t50758;
            double t50760 = sqrt(t50759);
            double t50761 = b1p*t50760;
            double t50762 = pow(t50759,3.0/2.0);
            double t50763 = b3p*t50762;
            double t50764 = b2p*c*t50758;
            double t50765 = c*c;
            double t50766 = 1/pow(t50757,2.0/3.0);
            double t50767 = b4p*t50765*t50766;
            double t50768 = t50761+t50763+t50764+t50767;
            double t50769 = 1/pow(t50757,8.0/3.0);
            double t50770 = 1/pow(t50757,7.0/3.0);
            double t50771 = 1/sqrt(t50759);
            double t50772 = 1/c0p;
            double t50773 = 1/t50768;
            double t50774 = t50772*t50773*(1.0/2.0);
            double t50775 = t50774+1.0;
            double t50776 = 1/t50775;
            double t50777 = a1p*c*t50758;
            double t50778 = t50777+1.0;
            double t50779 = 1/pow(t50757,4.0/3.0);
            double t50781 = b2p*c*t50779*(1.0/3.0);
            double t50782 = 1/pow(t50757,5.0/3.0);
            double t50783 = b4p*t50782*t50765*(2.0/3.0);
            double t50784 = b1p*c*t50771*t50779*(1.0/6.0);
            double t50785 = b3p*c*t50760*t50779*(1.0/2.0);
            double t50780 = t50781+t50783+t50784+t50785;
            double t50786 = t50780*t50780;
            double t50787 = 1/(t50768*t50768);
            double t50788 = log(t50775);
            double t50789 = gamma_aa[index]*gamma_aa[index];
            double t50790 = gcab*gcab;
            double t50791 = t50789*t50789;
            double t50792 = t50790*t50790;
            double t50793 = 1/pow(rho_a[index],3.2E1/3.0);
            double t50794 = 1/pow(rho_a[index],8.0/3.0);
            double t50795 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50796 = 1/pow(rho_a[index],1.6E1/3.0);
            double t50797 = two_13*2.0;
            double t50798 = t50797-2.0;
            double t50799 = 1/t50798;
            double t50800 = 1/pow(rho_a[index],1.0/3.0);
            double t50801 = c*t50800;
            double t50802 = sqrt(t50801);
            double t50803 = pow(t50801,3.0/2.0);
            double t50804 = 1/pow(rho_a[index],2.0/3.0);
            double t50805 = b1p*t50802;
            double t50806 = b3p*t50803;
            double t50807 = b4p*t50804*t50765;
            double t50808 = b2p*c*t50800;
            double t50809 = t50805+t50806+t50807+t50808;
            double t50810 = 1/t50809;
            double t50811 = t50810*t50772*(1.0/2.0);
            double t50812 = t50811+1.0;
            double t50813 = log(t50812);
            double t50814 = a1p*c*t50800;
            double t50815 = t50814+1.0;
            double t50816 = gamma_aa[index]*gcab*t50794*4.0;
            double t50817 = gamma_aa[index]*gcab*t50790*t50795*t50789*4.0;
            double t50818 = t50790*t50796*t50789*6.0;
            double t50819 = t50791*t50792*t50793;
            double t50820 = t50816+t50817+t50818+t50819+1.0;
            double t50821 = 1/t50820;
            double t50822 = gamma_aa[index]*gcab*t50794;
            double t50823 = t50822+1.0;
            double t50824 = 1/t50823;
            double t50825 = gamma_aa[index]*gcab*t50794*3.0;
            double t50826 = gamma_aa[index]*gcab*t50790*t50795*t50789;
            double t50827 = t50790*t50796*t50789*3.0;
            double t50828 = t50825+t50826+t50827+1.0;
            double t50829 = 1/t50828;
            double t50830 = gamma_aa[index]*gcab*t50794*2.0;
            double t50831 = t50790*t50796*t50789;
            double t50832 = t50830+t50831+1.0;
            double t50833 = 1/t50832;
            double t50834 = 1/pow(rho_a[index],1.0E1);
            double t50835 = 1/pow(rho_a[index],2.2E1/3.0);
            double t50837 = 1/pow(rho_a[index],1.1E1/3.0);
            double t50838 = 1/pow(rho_a[index],1.9E1/3.0);
            double t50840 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t50847 = 1/pow(rho_a[index],3.5E1/3.0);
            double t50848 = gamma_aa[index]*gcab*t50837*(1.6E1/3.0);
            double t50849 = gamma_aa[index]*gcab*t50840*t50790*t50789*1.6E1;
            double t50850 = t50790*t50838*t50789*1.6E1;
            double t50851 = t50791*t50792*t50847*(1.6E1/3.0);
            double t50836 = t50850+t50851+t50848+t50849;
            double t50854 = gamma_aa[index]*gcab*t50837*(8.0/3.0);
            double t50855 = t50790*t50838*t50789*(8.0/3.0);
            double t50839 = t50854+t50855;
            double t50841 = 1/pow(rho_a[index],1.4E1/3.0);
            double t50842 = 1/(t50828*t50828);
            double t50843 = gamma_aa[index]*gcab*t50837*4.0;
            double t50844 = gamma_aa[index]*gcab*t50840*t50790*t50789*4.0;
            double t50845 = t50790*t50838*t50789*8.0;
            double t50846 = t50843+t50844+t50845;
            double t50852 = 1/pow(rho_a[index],3.8E1/3.0);
            double t50853 = 1/(t50820*t50820);
            double t50856 = 1/(t50832*t50832);
            double t50857 = pow(2.0,1.0/3.0);
            double t50858 = t50857*2.0;
            double t50859 = t50858-2.0;
            double t50860 = a1f*c*t50800;
            double t50861 = t50860+1.0;
            double t50862 = 1/c0f;
            double t50863 = b1f*t50802;
            double t50864 = b3f*t50803;
            double t50865 = b4f*t50804*t50765;
            double t50866 = b2f*c*t50800;
            double t50867 = t50863+t50864+t50865+t50866;
            double t50868 = 1/t50867;
            double t50869 = t50862*t50868*(1.0/2.0);
            double t50870 = t50869+1.0;
            double t50871 = 1/pow(rho_a[index],4.0/3.0);
            double t50872 = 1/pow(rho_a[index],5.0/3.0);
            double t50873 = 1/sqrt(t50801);
            double t50874 = log(t50870);
            double t50875 = 1/t50812;
            double t50876 = 1/(t50809*t50809);
            double t50877 = b4p*t50872*t50765*(2.0/3.0);
            double t50878 = b2p*c*t50871*(1.0/3.0);
            double t50879 = b1p*c*t50871*t50873*(1.0/6.0);
            double t50880 = b3p*c*t50802*t50871*(1.0/2.0);
            double t50881 = t50880+t50877+t50878+t50879;
            double t50882 = t50815*t50881*t50875*t50876;
            double t50883 = gcaa*gcaa;
            double t50884 = t50883*t50883;
            double t50885 = 1/t50870;
            double t50886 = 1/(t50867*t50867);
            double t50887 = b4f*t50872*t50765*(2.0/3.0);
            double t50888 = b2f*c*t50871*(1.0/3.0);
            double t50889 = b1f*c*t50871*t50873*(1.0/6.0);
            double t50890 = b3f*c*t50802*t50871*(1.0/2.0);
            double t50891 = t50890+t50887+t50888+t50889;
            double t50892 = a1f*c*c0f*t50871*t50874*(2.0/3.0);
            double t50893 = a1p*c*c0p*t50813*t50871*(2.0/3.0);
            double t50894 = c0f*t50861*t50874*2.0;
            double t50895 = c0p*t50813*t50815*2.0;
            double t50896 = 1/(t50823*t50823);
            double t50897 = ccab4*t50821*t50791*t50792*t50793;
            double t50898 = ccab1*gamma_aa[index]*gcab*t50824*t50794;
            double t50899 = ccab3*gamma_aa[index]*gcab*t50790*t50829*t50795*t50789;
            double t50900 = ccab2*t50833*t50790*t50796*t50789;
            double t50901 = ccab0+t50900+t50897+t50898+t50899;
            double t50902 = b2p*c*t50770*(4.0/9.0);
            double t50903 = b4p*t50765*t50769*(1.0E1/9.0);
            double t50904 = 1/pow(t50759,3.0/2.0);
            double t50905 = b3p*t50771*t50765*t50769*(1.0/1.2E1);
            double t50906 = b1p*c*t50770*t50771*(2.0/9.0);
            double t50907 = b3p*c*t50760*t50770*(2.0/3.0);
            double t50908 = t50902+t50903+t50905+t50906+t50907-b1p*t50904*t50765*t50769*(1.0/3.6E1);
            double t50909 = t50908*t50776*t50778*t50787;
            double t50910 = 1/(t50768*t50768*t50768);
            double t50911 = 1/(t50775*t50775);
            double t50912 = 1/(t50768*t50768*t50768*t50768);
            double t50913 = t50911*t50912*t50772*t50786*t50778*(1.0/2.0);
            double t50914 = 1/d2fz0;
            double t50915 = 1/(rho_a[index]*rho_a[index]);
            double t50916 = 1/Aa;
            double t50917 = b1a*t50760;
            double t50918 = b3a*t50762;
            double t50919 = b2a*c*t50758;
            double t50920 = b4a*t50765*t50766;
            double t50921 = t50920+t50917+t50918+t50919;
            double t50922 = 1/t50921;
            double t50923 = t50922*t50916*(1.0/2.0);
            double t50924 = t50923+1.0;
            double t50925 = log(t50924);
            double t50926 = a1a*c*t50758;
            double t50927 = t50926+1.0;
            double t50928 = a1p*c*t50780*t50776*t50787*t50779*(2.0/3.0);
            double t50929 = 1/pow(rho_a[index],7.0/3.0);
            double t50930 = 1/pow(t50801,3.0/2.0);
            double t50931 = t50891*t50891;
            double t50932 = t50881*t50881;
            double t50933 = 1/(t50809*t50809*t50809);
            double t50934 = t50815*t50932*t50933*t50875*2.0;
            double t50935 = b4p*t50765*t50794*(1.0E1/9.0);
            double t50936 = b2p*c*t50929*(4.0/9.0);
            double t50937 = b3p*t50765*t50873*t50794*(1.0/1.2E1);
            double t50938 = b1p*c*t50873*t50929*(2.0/9.0);
            double t50939 = b3p*c*t50802*t50929*(2.0/3.0);
            double t51051 = b1p*t50930*t50765*t50794*(1.0/3.6E1);
            double t50940 = t50935+t50936+t50937+t50938+t50939-t51051;
            double t50941 = 1/(t50812*t50812);
            double t50942 = 1/(t50809*t50809*t50809*t50809);
            double t50943 = a1p*c*c0p*t50813*t50929*(8.0/9.0);
            double t50978 = t50861*t50891*t50885*t50886;
            double t50944 = t50882+t50892-t50893-t50978;
            double t50945 = a1p*c*c0p*t50779*t50788*(4.0/3.0);
            double t50946 = t50894-t50895;
            double t50947 = gamma_aa[index]*gcaa*t50794*4.0;
            double t50948 = gamma_aa[index]*gcaa*t50883*t50795*t50789*4.0;
            double t50949 = t50883*t50796*t50789*6.0;
            double t50950 = t50791*t50793*t50884;
            double t50951 = t50950+t50947+t50948+t50949+1.0;
            double t50952 = 1/t50951;
            double t50953 = gamma_aa[index]*gcaa*t50794;
            double t50954 = t50953+1.0;
            double t50955 = 1/t50954;
            double t50956 = gamma_aa[index]*gcaa*t50794*3.0;
            double t50957 = gamma_aa[index]*gcaa*t50883*t50795*t50789;
            double t50958 = t50883*t50796*t50789*3.0;
            double t50959 = t50956+t50957+t50958+1.0;
            double t50960 = 1/t50959;
            double t50961 = gamma_aa[index]*gcaa*t50794*2.0;
            double t50962 = t50883*t50796*t50789;
            double t50963 = t50961+t50962+1.0;
            double t50964 = 1/t50963;
            double t50965 = t50946*t50859*t50799;
            double t50966 = t50965+t50895;
            double t50967 = 1/(t50823*t50823*t50823);
            double t50968 = ccab1*gamma_aa[index]*gcab*t50834*t50790*t50967*t50789*(3.2E1/9.0);
            double t50969 = t50836*t50836;
            double t50970 = 1/(t50820*t50820*t50820);
            double t50971 = ccab4*t50970*t50791*t50792*t50793*t50969*2.0;
            double t50972 = t50839*t50839;
            double t50973 = 1/(t50832*t50832*t50832);
            double t50974 = ccab2*t50790*t50972*t50973*t50796*t50789*2.0;
            double t50975 = t50846*t50846;
            double t50976 = 1/(t50828*t50828*t50828);
            double t50977 = ccab3*gamma_aa[index]*gcab*t50790*t50795*t50975*t50976*t50789*2.0;
            double t50979 = t50944*t50859*t50799;
            double t50980 = ccaa4*t50952*t50791*t50847*t50884*(3.2E1/3.0);
            double t50981 = ccaa1*gamma_aa[index]*gcaa*t50837*t50955*(8.0/3.0);
            double t50982 = ccaa3*gamma_aa[index]*gcaa*t50840*t50960*t50883*t50789*8.0;
            double t50983 = ccaa2*t50838*t50883*t50964*t50789*(1.6E1/3.0);
            double t50984 = 1/(t50954*t50954);
            double t50985 = gamma_aa[index]*gcaa*t50837*8.0;
            double t50986 = gamma_aa[index]*gcaa*t50840*t50883*t50789*8.0;
            double t50987 = t50838*t50883*t50789*1.6E1;
            double t50988 = t50985+t50986+t50987;
            double t50989 = 1/(t50959*t50959);
            double t50990 = gamma_aa[index]*gcaa*t50837*(3.2E1/3.0);
            double t50991 = gamma_aa[index]*gcaa*t50840*t50883*t50789*3.2E1;
            double t50992 = t50838*t50883*t50789*3.2E1;
            double t50993 = t50791*t50847*t50884*(3.2E1/3.0);
            double t50994 = t50990+t50991+t50992+t50993;
            double t50995 = 1/(t50951*t50951);
            double t50996 = gamma_aa[index]*gcaa*t50837*(1.6E1/3.0);
            double t50997 = t50838*t50883*t50789*(1.6E1/3.0);
            double t50998 = t50996+t50997;
            double t50999 = 1/(t50963*t50963);
            double t51000 = t50980+t50981+t50982+t50983-ccaa1*t50838*t50883*t50984*t50789*(8.0/3.0)-ccaa4*t50791* \
               t50793*t50884*t50994*t50995-ccaa2*t50883*t50796*t50789*t50998*t50999-ccaa3*gamma_aa[index]*gcaa*t50883* \
               t50795*t50789*t50988*t50989;
            double t51001 = -t50882+t50893+t50979;
            double t51002 = gx*gx;
            double t51003 = t51002*t51002;
            double t51004 = gamma_aa[index]*gx*t50794;
            double t51005 = t51004+1.0;
            double t51025 = gamma_aa[index]*gx*t50837*(3.2E1/3.0);
            double t51026 = gamma_aa[index]*gx*t50840*t50789*t51002*3.2E1;
            double t51027 = t50838*t50789*t51002*3.2E1;
            double t51028 = t50791*t50847*t51003*(3.2E1/3.0);
            double t51006 = t51025+t51026+t51027+t51028;
            double t51007 = gamma_aa[index]*gx*t50794*4.0;
            double t51008 = gamma_aa[index]*gx*t50795*t50789*t51002*4.0;
            double t51009 = t50796*t50789*t51002*6.0;
            double t51010 = t50791*t50793*t51003;
            double t51011 = t51010+t51007+t51008+t51009+1.0;
            double t51030 = gamma_aa[index]*gx*t50837*(1.6E1/3.0);
            double t51031 = t50838*t50789*t51002*(1.6E1/3.0);
            double t51012 = t51030+t51031;
            double t51013 = gamma_aa[index]*gx*t50794*2.0;
            double t51014 = t50796*t50789*t51002;
            double t51015 = t51013+t51014+1.0;
            double t51016 = gamma_aa[index]*gx*t50794*3.0;
            double t51017 = gamma_aa[index]*gx*t50795*t50789*t51002;
            double t51018 = t50796*t50789*t51002*3.0;
            double t51019 = t51016+t51017+t51018+1.0;
            double t51020 = 1/(t51019*t51019);
            double t51021 = gamma_aa[index]*gx*t50837*8.0;
            double t51022 = gamma_aa[index]*gx*t50840*t50789*t51002*8.0;
            double t51023 = t50838*t50789*t51002*1.6E1;
            double t51024 = t51021+t51022+t51023;
            double t51029 = 1/(t51011*t51011);
            double t51032 = 1/(t51015*t51015);
            double t51033 = 1/t51011;
            double t51034 = 1/t51005;
            double t51035 = 1/t51019;
            double t51036 = 1/t51015;
            double t51037 = 1/(t51005*t51005);
            double t51038 = ccaa4*t50952*t50791*t50793*t50884;
            double t51039 = ccaa1*gamma_aa[index]*gcaa*t50955*t50794;
            double t51040 = ccaa3*gamma_aa[index]*gcaa*t50960*t50883*t50795*t50789;
            double t51041 = ccaa2*t50883*t50964*t50796*t50789;
            double t51042 = ccaa0+t51040+t51041+t51038+t51039;
            double t51043 = 1/(t50867*t50867*t50867);
            double t51044 = b4f*t50765*t50794*(1.0E1/9.0);
            double t51045 = b2f*c*t50929*(4.0/9.0);
            double t51046 = b3f*t50765*t50873*t50794*(1.0/1.2E1);
            double t51047 = b1f*c*t50873*t50929*(2.0/9.0);
            double t51048 = b3f*c*t50802*t50929*(2.0/3.0);
            double t51049 = t51044+t51045+t51046+t51047+t51048-b1f*t50930*t50765*t50794*(1.0/3.6E1);
            double t51050 = t50861*t50885*t50886*t51049;
            double t51052 = t50940*t50815*t50875*t50876;
            double t51053 = 1/(t50870*t50870);
            double t51054 = 1/(t50867*t50867*t50867*t50867);
            double t51055 = t50931*t50861*t50862*t51053*t51054*(1.0/2.0);
            double t51056 = t50815*t50932*t50941*t50942*t50772*(1.0/2.0);
            double t51057 = a1f*c*t50871*t50891*t50885*t50886*(2.0/3.0);
            double t51058 = a1p*c*t50871*t50881*t50875*t50876*(2.0/3.0);
            v_rho_a_rho_a_[index] = -t50901*(-t50945-rho_a[index]*(t50913+t50909+t50928-t50910*t50776*t50786* \
               t50778*2.0-a1p*c*c0p*t50770*t50788*(8.0/9.0)+Aa*t50914*t50915*t50925*t50927*t50799*(4.0/9.0))*2.0+ \
               rho_a[index]*(-t50934-t50943+t51052+t51056+t51058+t50859*t50799*(t50934+t50943+t51050+t51055+t51057- \
               t50940*t50815*t50875*t50876-t50931*t50861*t50885*t51043*2.0-a1f*c*c0f*t50874*t50929*(8.0/9.0)-t50815* \
               t50932*t50941*t50942*t50772*(1.0/2.0)-a1p*c*t50871*t50881*t50875*t50876*(2.0/3.0)))+t50944*t50859* \
               t50799*2.0-t50815*t50881*t50875*t50876*2.0+t50780*t50776*t50778*t50787*2.0+a1p*c*c0p*t50813*t50871* \
               (4.0/3.0))+t50966*t51000*2.0+(rho_a[index]*(t50895+t50859*t50799*(t50894-c0p*t50813*t50815*2.0))*2.0- \
               c0p*rho_a[index]*t50778*t50788*4.0)*(t50971+t50974+t50968+t50977+ccab1*gamma_aa[index]*gcab*t50841* \
               t50824*(4.4E1/9.0)+ccab4*t50821*t50852*t50791*t50792*(3.68E2/9.0)+ccab2*t50833*t50790*t50835*t50789* \
               (4.0E1/3.0)-ccab1*t50790*t50835*t50896*t50789*(7.6E1/9.0)-ccab4*t50853*t50791*t50836*t50792*t50847* \
               (3.2E1/3.0)-ccab2*t50790*t50838*t50856*t50839*t50789*(1.6E1/3.0)-ccab2*t50790*t50856*t50796*t50789* \
               (gamma_aa[index]*gcab*t50841*(8.8E1/9.0)+t50790*t50835*t50789*(4.0E1/3.0))-ccab4*t50853*t50791*t50792* \
               t50793*(gamma_aa[index]*gcab*t50841*(1.76E2/9.0)+t50852*t50791*t50792*(3.68E2/9.0)+t50790*t50835*t50789* \
               8.0E1+gamma_aa[index]*gcab*t50834*t50790*t50789*(3.04E2/3.0))+ccab3*gamma_aa[index]*gcab*t50834*t50790* \
               t50829*t50789*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t50842*t50790*t50795*t50789*(gamma_aa[index]* \
               gcab*t50841*(4.4E1/3.0)+t50790*t50835*t50789*4.0E1+gamma_aa[index]*gcab*t50834*t50790*t50789*(7.6E1/ \
               3.0))-ccab3*gamma_aa[index]*gcab*t50840*t50842*t50790*t50846*t50789*8.0)+t51042*(-t50882+t50893+t50859* \
               t50799*(t50882+t50892-t50861*t50891*t50885*t50886-a1p*c*c0p*t50813*t50871*(2.0/3.0)))*2.0+(rho_a[index]* \
               t50966*2.0-c0p*rho_a[index]*t50778*t50788*4.0)*(t50971+t50974+t50968+t50977+ccab4*t50821*t50852*t50791* \
               t50792*(6.4E1/3.0)-ccab2*t50852*t50791*t50792*t50856*(3.2E1/9.0)+ccab2*t50833*t50790*t50835*t50789* \
               (3.2E1/9.0)-ccab1*t50790*t50835*t50896*t50789*(3.2E1/9.0)-ccab4*t50853*t50791*t50836*t50792*t50847* \
               (3.2E1/3.0)-ccab2*t50790*t50838*t50856*t50839*t50789*(1.6E1/3.0)-ccab4*t50853*t50791*t50792*t50793* \
               (t50852*t50791*t50792*(6.4E1/3.0)+t50790*t50835*t50789*(6.4E1/3.0)+gamma_aa[index]*gcab*t50834*t50790* \
               t50789*(1.28E2/3.0))+ccab3*gamma_aa[index]*gcab*t50834*t50790*t50829*t50789*(3.2E1/3.0)-ccab3*gamma_aa[index]* \
               gcab*t50842*t50790*t50795*t50789*(t50790*t50835*t50789*(3.2E1/3.0)+gamma_aa[index]*gcab*t50834*t50790* \
               t50789*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t50840*t50842*t50790*t50846*t50789*8.0)+t50901*(t50945+ \
               rho_a[index]*(t50913+t50909+t50928-t50910*t50776*t50786*t50778*2.0-a1p*c*c0p*t50770*t50788*(8.0/9.0) \
               -Aa*t50914*t50915*t50925*t50927*t50799*(4.0/9.0))*2.0-t50780*t50776*t50778*t50787*2.0)+(-t50895+rho_a[index]* \
               t51001+rho_a[index]*(t50780*t50776*t50778*t50787-a1p*c*c0p*t50779*t50788*(2.0/3.0))*2.0+c0p*t50778* \
               t50788*2.0-t50946*t50859*t50799)*(ccab1*gamma_aa[index]*gcab*t50824*t50837*(4.0/3.0)+ccab4*t50821* \
               t50791*t50792*t50847*(1.6E1/3.0)+ccab2*t50833*t50790*t50838*t50789*(8.0/3.0)-ccab1*t50790*t50838*t50896* \
               t50789*(4.0/3.0)-ccab4*t50853*t50791*t50836*t50792*t50793-ccab2*t50790*t50856*t50839*t50796*t50789+ \
               ccab3*gamma_aa[index]*gcab*t50840*t50790*t50829*t50789*4.0-ccab3*gamma_aa[index]*gcab*t50842*t50790* \
               t50846*t50795*t50789)*4.0-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t50837*t51034*(8.0/ \
               3.0)-cx1*t50838*t50789*t51002*t51037*(8.0/3.0)+cx2*t50838*t50789*t51002*t51036*(1.6E1/3.0)+cx4*t50791* \
               t50847*t51003*t51033*(3.2E1/3.0)-cx2*t50796*t50789*t51002*t51012*t51032-cx4*t50791*t50793*t51003*t51006* \
               t51029+cx3*gamma_aa[index]*gx*t50840*t50789*t51002*t51035*8.0-cx3*gamma_aa[index]*gx*t50795*t50789* \
               t51002*t51020*t51024)*(8.0/3.0)-rho_a[index]*t50966*(ccaa1*gamma_aa[index]*gcaa*t50841*t50955*(8.8E1/ \
               9.0)+ccaa4*t50852*t50952*t50791*t50884*(1.12E3/9.0)+ccaa2*t50835*t50883*t50964*t50789*(3.04E2/9.0) \
               -ccaa1*t50835*t50883*t50984*t50789*2.4E1-ccaa4*t50791*t50847*t50884*t50994*t50995*(6.4E1/3.0)-ccaa2* \
               t50838*t50883*t50789*t50998*t50999*(3.2E1/3.0)-ccaa2*t50883*t50796*t50789*t50999*(gamma_aa[index]* \
               gcaa*t50841*(1.76E2/9.0)+t50835*t50883*t50789*(3.04E2/9.0))-ccaa4*t50791*t50793*t50884*t50995*(gamma_aa[index]* \
               gcaa*t50841*(3.52E2/9.0)+t50852*t50791*t50884*(1.12E3/9.0)+t50835*t50883*t50789*(6.08E2/3.0)+gamma_aa[index]* \
               gcaa*t50834*t50883*t50789*2.88E2)+ccaa4*1/(t50951*t50951*t50951)*t50791*t50793*t50884*(t50994*t50994) \
               *2.0+ccaa2*1/(t50963*t50963*t50963)*t50883*t50796*t50789*(t50998*t50998)*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t50834*t50960*t50883*t50789*7.2E1+ccaa1*gamma_aa[index]*gcaa*t50834*1/(t50954*t50954*t50954)* \
               t50883*t50789*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t50883*t50795*1/(t50959*t50959*t50959)*t50789* \
               (t50988*t50988)*2.0-ccaa3*gamma_aa[index]*gcaa*t50883*t50795*t50789*t50989*(gamma_aa[index]*gcaa*t50841* \
               (8.8E1/3.0)+t50835*t50883*t50789*(3.04E2/3.0)+gamma_aa[index]*gcaa*t50834*t50883*t50789*7.2E1)-ccaa3* \
               gamma_aa[index]*gcaa*t50840*t50883*t50789*t50988*t50989*1.6E1)+rho_a[index]*t51042*(-t50934-t50943+ \
               t51052+t51056+t51058+t50859*t50799*(t50934+t50943+t51050-t51052+t51055-t51056+t51057-t51058-t50931* \
               t50861*t50885*t51043*2.0-a1f*c*c0f*t50874*t50929*(8.0/9.0)))-rho_a[index]*t51000*t51001*2.0+c0*pow(rho_a[index],4.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t50841*t51034*(8.8E1/9.0)-cx1*t50835*t50789*t51002*t51037*2.4E1+cx2*t50835* \
               t50789*t51002*t51036*(3.04E2/9.0)+cx4*t50852*t50791*t51003*t51033*(1.12E3/9.0)-cx2*t50838*t50789*t51002* \
               t51012*t51032*(3.2E1/3.0)-cx4*t50791*t50847*t51003*t51006*t51029*(6.4E1/3.0)-cx2*t50796*t50789*t51002* \
               t51032*(gamma_aa[index]*gx*t50841*(1.76E2/9.0)+t50835*t50789*t51002*(3.04E2/9.0))-cx4*t50791*t50793* \
               t51003*t51029*(gamma_aa[index]*gx*t50841*(3.52E2/9.0)+t50852*t50791*t51003*(1.12E3/9.0)+t50835*t50789* \
               t51002*(6.08E2/3.0)+gamma_aa[index]*gx*t50834*t50789*t51002*2.88E2)+cx2*t50796*t50789*t51002*(t51012* \
               t51012)*1/(t51015*t51015*t51015)*2.0+cx4*t50791*t50793*1/(t51011*t51011*t51011)*t51003*(t51006*t51006) \
               *2.0+cx3*gamma_aa[index]*gx*t50834*t50789*t51002*t51035*7.2E1+cx1*gamma_aa[index]*gx*t50834*t50789* \
               t51002*1/(t51005*t51005*t51005)*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t50795*t50789*t51002*(t51024*t51024) \
               *1/(t51019*t51019*t51019)*2.0-cx3*gamma_aa[index]*gx*t50795*t50789*t51002*t51020*(gamma_aa[index]* \
               gx*t50841*(8.8E1/3.0)+t50835*t50789*t51002*(3.04E2/3.0)+gamma_aa[index]*gx*t50834*t50789*t51002*7.2E1) \
               -cx3*gamma_aa[index]*gx*t50840*t50789*t51002*t51020*t51024*1.6E1)+c0*t50804*(cx0+cx1*gamma_aa[index]* \
               gx*t50794*t51034+cx2*t50796*t50789*t51002*t51036+cx4*t50791*t50793*t51003*t51033+cx3*gamma_aa[index]* \
               gx*t50795*t50789*t51002*t51035)*(4.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t51060 = 1/pow(rho_a[index],1.0/3.0);
                double t51061 = c*t51060;
                double t51062 = sqrt(t51061);
                double t51063 = pow(t51061,3.0/2.0);
                double t51064 = c*c;
                double t51065 = 1/pow(rho_a[index],2.0/3.0);
                double t51066 = 1/c0p;
                double t51067 = b1p*t51062;
                double t51068 = b3p*t51063;
                double t51069 = b4p*t51064*t51065;
                double t51070 = b2p*c*t51060;
                double t51071 = t51070+t51067+t51068+t51069;
                double t51072 = 1/t51071;
                double t51073 = t51072*t51066*(1.0/2.0);
                double t51074 = t51073+1.0;
                double t51075 = log(t51074);
                double t51076 = a1p*c*t51060;
                double t51077 = t51076+1.0;
                double t51078 = 1/pow(rho_a[index],8.0/3.0);
                double t51079 = gamma_aa[index]*gamma_aa[index];
                double t51080 = gcaa*gcaa;
                double t51081 = t51080*t51080;
                double t51082 = 1/pow(rho_a[index],3.2E1/3.0);
                double t51083 = 1/pow(rho_a[index],1.6E1/3.0);
                double t51084 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t51085 = gamma_aa[index]*gcaa*t51078;
                double t51086 = t51085+1.0;
                double t51087 = gamma_aa[index]*gcaa*t51078*3.0;
                double t51088 = gamma_aa[index]*gcaa*t51080*t51084*t51079;
                double t51089 = t51080*t51083*t51079*3.0;
                double t51090 = t51087+t51088+t51089+1.0;
                double t51091 = t51079*t51079;
                double t51092 = gamma_aa[index]*gcaa*t51078*4.0;
                double t51093 = gamma_aa[index]*gcaa*t51080*t51084*t51079*4.0;
                double t51094 = t51080*t51083*t51079*6.0;
                double t51095 = t51081*t51082*t51091;
                double t51096 = t51092+t51093+t51094+t51095+1.0;
                double t51097 = gamma_aa[index]*gcaa*t51078*2.0;
                double t51098 = t51080*t51083*t51079;
                double t51099 = t51097+t51098+1.0;
                double t51100 = pow(2.0,1.0/3.0);
                double t51101 = t51100*2.0;
                double t51102 = t51101-2.0;
                double t51103 = two_13*2.0;
                double t51104 = t51103-2.0;
                double t51105 = 1/t51104;
                double t51106 = 1/c0f;
                double t51107 = b1f*t51062;
                double t51108 = b3f*t51063;
                double t51109 = b4f*t51064*t51065;
                double t51110 = b2f*c*t51060;
                double t51111 = t51110+t51107+t51108+t51109;
                double t51112 = 1/t51111;
                double t51113 = t51112*t51106*(1.0/2.0);
                double t51114 = t51113+1.0;
                double t51115 = log(t51114);
                double t51116 = a1f*c*t51060;
                double t51117 = t51116+1.0;
                double t51118 = c0f*t51115*t51117*2.0;
                double t51119 = c0p*t51075*t51077*2.0;
                double t51120 = rho_a[index]*2.0;
                double t51121 = 1/pow(t51120,1.0/3.0);
                double t51122 = c*t51121;
                double t51123 = gcab*gcab;
                double t51124 = t51123*t51123;
                double t51125 = 1/pow(rho_a[index],1.9E1/3.0);
                double t51126 = 1/pow(rho_a[index],3.5E1/3.0);
                double t51127 = gamma_aa[index]*gcab*t51078*2.0;
                double t51128 = t51123*t51083*t51079;
                double t51129 = t51127+t51128+1.0;
                double t51130 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t51131 = gamma_aa[index]*gcab*t51078;
                double t51132 = t51131+1.0;
                double t51133 = gamma_aa[index]*gcab*t51078*3.0;
                double t51134 = gamma_aa[index]*gcab*t51123*t51084*t51079;
                double t51135 = t51123*t51083*t51079*3.0;
                double t51136 = t51133+t51134+t51135+1.0;
                double t51137 = gamma_aa[index]*gcab*t51078*4.0;
                double t51138 = gamma_aa[index]*gcab*t51123*t51084*t51079*4.0;
                double t51139 = t51123*t51083*t51079*6.0;
                double t51140 = t51124*t51082*t51091;
                double t51141 = t51140+t51137+t51138+t51139+1.0;
                double t51142 = 1/pow(rho_a[index],1.1E1/3.0);
                double t51143 = 1/(t51129*t51129);
                double t51144 = 1/(t51136*t51136);
                double t51145 = 1/(t51141*t51141);
                double t51146 = gamma_aa[index]*gcab*t51142*(8.0/3.0);
                double t51147 = t51123*t51125*t51079*(8.0/3.0);
                double t51148 = t51146+t51147;
                double t51149 = gcab*t51078;
                double t51150 = gamma_aa[index]*t51123*t51083;
                double t51151 = t51150+t51149;
                double t51152 = gcab*t51078*(3.0/2.0);
                double t51153 = gamma_aa[index]*t51123*t51083*3.0;
                double t51154 = gcab*t51123*t51084*t51079*(3.0/2.0);
                double t51155 = t51152+t51153+t51154;
                double t51156 = gamma_aa[index]*gcab*t51142*4.0;
                double t51157 = gamma_aa[index]*gcab*t51130*t51123*t51079*4.0;
                double t51158 = t51123*t51125*t51079*8.0;
                double t51159 = t51156+t51157+t51158;
                double t51160 = gamma_aa[index]*gcab*t51142*(1.6E1/3.0);
                double t51161 = gamma_aa[index]*gcab*t51130*t51123*t51079*1.6E1;
                double t51162 = t51123*t51125*t51079*1.6E1;
                double t51163 = t51124*t51126*t51091*(1.6E1/3.0);
                double t51164 = t51160+t51161+t51162+t51163;
                double t51165 = gcab*t51078*2.0;
                double t51166 = gamma_aa[index]*t51123*t51083*6.0;
                double t51167 = gcab*t51123*t51084*t51079*6.0;
                double t51168 = gamma_aa[index]*t51124*t51082*t51079*2.0;
                double t51169 = t51165+t51166+t51167+t51168;
                double t51170 = t51118-t51119;
                double t51171 = t51102*t51105*t51170;
                double t51172 = t51171+t51119;
                double t51173 = rho_a[index]*t51172*2.0;
                double t51174 = sqrt(t51122);
                double t51175 = b1p*t51174;
                double t51176 = pow(t51122,3.0/2.0);
                double t51177 = b3p*t51176;
                double t51178 = b2p*c*t51121;
                double t51179 = 1/pow(t51120,2.0/3.0);
                double t51180 = b4p*t51064*t51179;
                double t51181 = t51180+t51175+t51177+t51178;
                double t51182 = 1/t51181;
                double t51183 = t51182*t51066*(1.0/2.0);
                double t51184 = t51183+1.0;
                double t51185 = log(t51184);
                double t51186 = a1p*c*t51121;
                double t51187 = t51186+1.0;
                double t51188 = t51173-c0p*rho_a[index]*t51185*t51187*4.0;
                double t51189 = 1/t51141;
                double t51190 = 1/t51129;
                double t51191 = 1/t51136;
                double t51192 = 1/(t51132*t51132);
                double t51193 = 1/(t51132*t51132*t51132);
                double t51194 = ccab3*gcab*t51123*t51144*t51084*t51159*t51079*(3.0/2.0);
                double t51195 = ccab2*gamma_aa[index]*t51123*t51143*t51083*t51148;
                double t51196 = ccab3*gamma_aa[index]*gcab*t51130*t51123*t51144*t51155*t51079*4.0;
                double t51197 = ccab4*gamma_aa[index]*t51124*t51082*t51145*t51164*t51079*2.0;
                double t51198 = ccab4*t51124*t51126*t51091*t51145*t51169*(1.6E1/3.0);
                double t51199 = ccab2*t51123*t51151*t51125*t51143*t51079*(8.0/3.0);
                double t51200 = gamma_aa[index]*t51123*t51125*4.0;
                double t51201 = 1/(t51129*t51129*t51129);
                double t51202 = 1/(t51136*t51136*t51136);
                double t51203 = 1/(t51141*t51141*t51141);
                double t51204 = 1/pow(t51120,4.0/3.0);
                double t51205 = 1/pow(rho_a[index],4.0/3.0);
                double t51206 = 1/pow(rho_a[index],5.0/3.0);
                double t51207 = 1/sqrt(t51061);
                double t51208 = 1/t51074;
                double t51209 = 1/(t51071*t51071);
                double t51210 = b4p*t51206*t51064*(2.0/3.0);
                double t51211 = b2p*c*t51205*(1.0/3.0);
                double t51212 = b1p*c*t51205*t51207*(1.0/6.0);
                double t51213 = b3p*c*t51205*t51062*(1.0/2.0);
                double t51214 = t51210+t51211+t51212+t51213;
                double t51215 = t51214*t51208*t51209*t51077;
                double t51216 = 1/t51132;
                double t51217 = gx*gx;
                double t51218 = t51217*t51217;
                double t51219 = gamma_aa[index]*gx*t51078;
                double t51220 = t51219+1.0;
                double t51221 = gamma_aa[index]*gx*t51078*3.0;
                double t51222 = gamma_aa[index]*gx*t51217*t51084*t51079;
                double t51223 = t51217*t51083*t51079*3.0;
                double t51224 = t51221+t51222+t51223+1.0;
                double t51225 = gamma_aa[index]*gx*t51078*4.0;
                double t51226 = gamma_aa[index]*gx*t51217*t51084*t51079*4.0;
                double t51227 = t51217*t51083*t51079*6.0;
                double t51228 = t51082*t51091*t51218;
                double t51229 = t51225+t51226+t51227+t51228+1.0;
                double t51230 = gamma_aa[index]*gx*t51078*2.0;
                double t51231 = t51217*t51083*t51079;
                double t51232 = t51230+t51231+1.0;
                double t51233 = 1/t51086;
                double t51234 = 1/t51096;
                double t51235 = 1/t51099;
                double t51236 = 1/t51090;
                double t51237 = 1/(t51086*t51086);
                double t51238 = 1/(t51090*t51090);
                double t51239 = 1/(t51099*t51099);
                double t51240 = gcaa*t51078*3.0;
                double t51241 = gamma_aa[index]*t51080*t51083*6.0;
                double t51242 = gcaa*t51080*t51084*t51079*3.0;
                double t51243 = t51240+t51241+t51242;
                double t51244 = 1/(t51096*t51096);
                double t51245 = gcaa*t51078*4.0;
                double t51246 = gamma_aa[index]*t51080*t51083*1.2E1;
                double t51247 = gcaa*t51080*t51084*t51079*1.2E1;
                double t51248 = gamma_aa[index]*t51081*t51082*t51079*4.0;
                double t51249 = t51245+t51246+t51247+t51248;
                double t51250 = gcaa*t51078*2.0;
                double t51251 = gamma_aa[index]*t51080*t51083*2.0;
                double t51252 = t51250+t51251;
                double t51253 = gamma_aa[index]*gcaa*t51142*(1.6E1/3.0);
                double t51254 = t51080*t51125*t51079*(1.6E1/3.0);
                double t51255 = t51253+t51254;
                double t51256 = gamma_aa[index]*gcaa*t51142*8.0;
                double t51257 = gamma_aa[index]*gcaa*t51130*t51080*t51079*8.0;
                double t51258 = t51080*t51125*t51079*1.6E1;
                double t51259 = t51256+t51257+t51258;
                double t51260 = gamma_aa[index]*gcaa*t51142*(3.2E1/3.0);
                double t51261 = gamma_aa[index]*gcaa*t51130*t51080*t51079*3.2E1;
                double t51262 = t51080*t51125*t51079*3.2E1;
                double t51263 = t51081*t51126*t51091*(3.2E1/3.0);
                double t51264 = t51260+t51261+t51262+t51263;
                double t51265 = 1/t51114;
                double t51266 = 1/(t51111*t51111);
                double t51267 = b4f*t51206*t51064*(2.0/3.0);
                double t51268 = b2f*c*t51205*(1.0/3.0);
                double t51269 = b1f*c*t51205*t51207*(1.0/6.0);
                double t51270 = b3f*c*t51205*t51062*(1.0/2.0);
                double t51271 = t51270+t51267+t51268+t51269;
                double t51272 = a1f*c*c0f*t51115*t51205*(2.0/3.0);
                double t51273 = a1p*c*c0p*t51205*t51075*(2.0/3.0);
                double t51274 = ccaa1*gcaa*t51233*t51078;
                double t51275 = ccaa4*gamma_aa[index]*t51081*t51234*t51082*t51079*4.0;
                double t51276 = ccaa2*gamma_aa[index]*t51080*t51235*t51083*2.0;
                double t51277 = ccaa3*gcaa*t51080*t51236*t51084*t51079*3.0;
                double t51278 = t51274+t51275+t51276+t51277-ccaa1*gamma_aa[index]*t51080*t51083*t51237-ccaa4*t51081* \
                   t51082*t51091*t51244*t51249-ccaa2*t51080*t51252*t51083*t51239*t51079-ccaa3*gamma_aa[index]*gcaa*t51080* \
                   t51243*t51084*t51238*t51079;
                double t51279 = 1/t51220;
                double t51280 = 1/t51229;
                double t51281 = 1/t51232;
                double t51282 = 1/t51224;
                double t51283 = 1/(t51220*t51220);
                double t51284 = 1/(t51224*t51224);
                double t51285 = 1/(t51232*t51232);
                double t51286 = gx*t51078*3.0;
                double t51287 = gamma_aa[index]*t51217*t51083*6.0;
                double t51288 = gx*t51217*t51084*t51079*3.0;
                double t51289 = t51286+t51287+t51288;
                double t51290 = 1/(t51229*t51229);
                double t51291 = gx*t51078*4.0;
                double t51292 = gamma_aa[index]*t51217*t51083*1.2E1;
                double t51293 = gx*t51217*t51084*t51079*1.2E1;
                double t51294 = gamma_aa[index]*t51082*t51218*t51079*4.0;
                double t51295 = t51291+t51292+t51293+t51294;
                double t51296 = gx*t51078*2.0;
                double t51297 = gamma_aa[index]*t51217*t51083*2.0;
                double t51298 = t51296+t51297;
                double t51299 = gamma_aa[index]*gx*t51142*(1.6E1/3.0);
                double t51300 = t51125*t51217*t51079*(1.6E1/3.0);
                double t51301 = t51300+t51299;
                double t51302 = gamma_aa[index]*gx*t51142*8.0;
                double t51303 = gamma_aa[index]*gx*t51130*t51217*t51079*8.0;
                double t51304 = t51125*t51217*t51079*1.6E1;
                double t51305 = t51302+t51303+t51304;
                double t51306 = gamma_aa[index]*gx*t51142*(3.2E1/3.0);
                double t51307 = gamma_aa[index]*gx*t51130*t51217*t51079*3.2E1;
                double t51308 = t51125*t51217*t51079*3.2E1;
                double t51309 = t51126*t51091*t51218*(3.2E1/3.0);
                double t51310 = t51306+t51307+t51308+t51309;
                v_rho_a_gamma_aa_[index] = t51188*(t51194+t51195+t51196+t51197+t51198+t51199-ccab2*gamma_aa[index]* \
                   t51123*t51125*t51190*(4.0/3.0)+ccab1*gamma_aa[index]*t51123*t51125*t51192*(4.0/3.0)+ccab4*t51124*t51082* \
                   t51091*t51145*(gamma_aa[index]*t51123*t51125*8.0+gamma_aa[index]*t51124*t51126*t51079*8.0+gcab*t51130* \
                   t51123*t51079*1.6E1)+ccab2*gamma_aa[index]*t51124*t51143*t51126*t51079*(4.0/3.0)-ccab4*gamma_aa[index]* \
                   t51124*t51126*t51079*t51189*8.0-ccab1*gcab*t51130*t51123*t51193*t51079*(4.0/3.0)-ccab3*gcab*t51130* \
                   t51123*t51191*t51079*4.0-ccab2*t51201*t51123*t51151*t51083*t51148*t51079*2.0-ccab4*t51203*t51124*t51082* \
                   t51091*t51164*t51169*2.0+ccab3*gamma_aa[index]*gcab*t51123*t51144*t51084*t51079*(t51200+gcab*t51130* \
                   t51123*t51079*4.0)-ccab3*gamma_aa[index]*gcab*t51202*t51123*t51155*t51084*t51159*t51079*2.0)-t51278* \
                   (t51119+t51102*t51105*(t51118-c0p*t51075*t51077*2.0))-(-t51171-t51119+rho_a[index]*((1/(t51181*t51181) \
                   *t51187*(b4p*1/pow(t51120,5.0/3.0)*t51064*(2.0/3.0)+b2p*c*t51204*(1.0/3.0)+b3p*c*t51204*t51174*(1.0/ \
                   2.0)+b1p*c*1/sqrt(t51122)*t51204*(1.0/6.0)))/t51184-a1p*c*c0p*t51204*t51185*(2.0/3.0))*2.0+rho_a[index]* \
                   (-t51215+t51273+t51102*t51105*(t51215+t51272-t51117*t51271*t51265*t51266-a1p*c*c0p*t51205*t51075*(2.0/ \
                   3.0)))+c0p*t51185*t51187*2.0)*(ccab1*gcab*t51216*t51078*(1.0/2.0)+ccab2*gamma_aa[index]*t51123*t51190* \
                   t51083-ccab1*gamma_aa[index]*t51123*t51083*t51192*(1.0/2.0)-ccab2*t51123*t51151*t51143*t51083*t51079- \
                   ccab4*t51124*t51082*t51091*t51145*t51169+ccab4*gamma_aa[index]*t51124*t51082*t51079*t51189*2.0+ccab3* \
                   gcab*t51123*t51191*t51084*t51079*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t51123*t51144*t51155*t51084* \
                   t51079)*2.0+t51188*(t51194+t51195+t51196+t51197+t51198+t51199-ccab1*gcab*t51142*t51216*(4.0/3.0)-ccab2* \
                   gamma_aa[index]*t51123*t51125*t51190*4.0+ccab1*gamma_aa[index]*t51123*t51125*t51192*(8.0/3.0)+ccab4* \
                   t51124*t51082*t51091*t51145*(gcab*t51142*(1.6E1/3.0)+gamma_aa[index]*t51123*t51125*2.4E1+gamma_aa[index]* \
                   t51124*t51126*t51079*(4.0E1/3.0)+gcab*t51130*t51123*t51079*3.2E1)+ccab2*t51123*t51143*t51083*t51079* \
                   (t51200+gcab*t51142*(8.0/3.0))-ccab4*gamma_aa[index]*t51124*t51126*t51079*t51189*(4.0E1/3.0)-ccab1* \
                   gcab*t51130*t51123*t51193*t51079*(4.0/3.0)-ccab3*gcab*t51130*t51123*t51191*t51079*8.0-ccab2*t51201* \
                   t51123*t51151*t51083*t51148*t51079*2.0-ccab4*t51203*t51124*t51082*t51091*t51164*t51169*2.0+ccab3*gamma_aa[index]* \
                   gcab*t51123*t51144*t51084*t51079*(gcab*t51142*4.0+gamma_aa[index]*t51123*t51125*1.2E1+gcab*t51130* \
                   t51123*t51079*8.0)-ccab3*gamma_aa[index]*gcab*t51202*t51123*t51155*t51084*t51159*t51079*2.0)-rho_a[index]* \
                   t51172*(ccaa1*gcaa*t51142*t51233*(-8.0/3.0)-ccaa2*gamma_aa[index]*t51080*t51125*t51235*(3.2E1/3.0) \
                   +ccaa1*gamma_aa[index]*t51080*t51125*t51237*8.0+ccaa2*t51080*t51125*t51252*t51239*t51079*(1.6E1/3.0) \
                   +ccaa4*t51081*t51126*t51091*t51244*t51249*(3.2E1/3.0)+ccaa4*t51081*t51082*t51091*t51244*(gcaa*t51142* \
                   (3.2E1/3.0)+gamma_aa[index]*t51080*t51125*6.4E1+gamma_aa[index]*t51081*t51126*t51079*(1.28E2/3.0)+ \
                   gcaa*t51130*t51080*t51079*9.6E1)-ccaa1*gcaa*t51130*t51080*1/(t51086*t51086*t51086)*t51079*(1.6E1/3.0) \
                   +ccaa2*t51080*t51083*t51239*t51079*(gcaa*t51142*(1.6E1/3.0)+gamma_aa[index]*t51080*t51125*(3.2E1/3.0) \
                   )+ccaa2*gamma_aa[index]*t51080*t51083*t51255*t51239*2.0-ccaa4*gamma_aa[index]*t51081*t51126*t51234* \
                   t51079*(1.28E2/3.0)-ccaa3*gcaa*t51130*t51080*t51236*t51079*2.4E1+ccaa4*gamma_aa[index]*t51081*t51082* \
                   t51244*t51264*t51079*4.0+ccaa3*gcaa*t51080*t51084*t51238*t51079*t51259*3.0-ccaa4*t51081*t51082*t51091* \
                   t51264*1/(t51096*t51096*t51096)*t51249*2.0-ccaa2*t51080*t51252*t51083*t51255*t51079*1/(t51099*t51099* \
                   t51099)*2.0+ccaa3*gamma_aa[index]*gcaa*t51080*t51084*t51238*t51079*(gcaa*t51142*8.0+gamma_aa[index]* \
                   t51080*t51125*3.2E1+gcaa*t51130*t51080*t51079*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t51130*t51080*t51243* \
                   t51238*t51079*8.0-ccaa3*gamma_aa[index]*gcaa*t51080*1/(t51090*t51090*t51090)*t51243*t51084*t51079* \
                   t51259*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t51142*t51279*(-8.0/3.0)+cx1*gamma_aa[index]*t51125* \
                   t51217*t51283*8.0-cx2*gamma_aa[index]*t51125*t51217*t51281*(3.2E1/3.0)+cx2*t51125*t51217*t51285*t51079* \
                   t51298*(1.6E1/3.0)+cx4*t51126*t51091*t51218*t51290*t51295*(3.2E1/3.0)+cx4*t51082*t51091*t51218*t51290* \
                   (gx*t51142*(3.2E1/3.0)+gamma_aa[index]*t51125*t51217*6.4E1+gamma_aa[index]*t51126*t51218*t51079*(1.28E2/ \
                   3.0)+gx*t51130*t51217*t51079*9.6E1)-cx1*gx*t51130*1/(t51220*t51220*t51220)*t51217*t51079*(1.6E1/3.0) \
                   +cx2*t51217*t51083*t51285*t51079*(gx*t51142*(1.6E1/3.0)+gamma_aa[index]*t51125*t51217*(3.2E1/3.0)) \
                   +cx2*gamma_aa[index]*t51301*t51217*t51083*t51285*2.0-cx4*gamma_aa[index]*t51126*t51280*t51218*t51079* \
                   (1.28E2/3.0)-cx3*gx*t51130*t51217*t51282*t51079*2.4E1+cx4*gamma_aa[index]*t51310*t51082*t51218*t51290* \
                   t51079*4.0+cx3*gx*t51305*t51217*t51084*t51284*t51079*3.0-cx2*t51301*1/(t51232*t51232*t51232)*t51217* \
                   t51083*t51079*t51298*2.0-cx4*t51310*t51082*t51091*t51218*1/(t51229*t51229*t51229)*t51295*2.0+cx3*gamma_aa[index]* \
                   gx*t51217*t51084*t51284*t51079*(gx*t51142*8.0+gamma_aa[index]*t51125*t51217*3.2E1+gx*t51130*t51217* \
                   t51079*2.4E1)+cx3*gamma_aa[index]*gx*t51130*t51217*t51284*t51079*t51289*8.0-cx3*gamma_aa[index]*gx* \
                   1/(t51224*t51224*t51224)*t51305*t51217*t51084*t51079*t51289*2.0)+rho_a[index]*t51278*(-t51215+t51273+ \
                   t51102*t51105*(t51215+t51272-t51273-t51117*t51271*t51265*t51266))+c0*pow(rho_a[index],1.0/3.0)*(cx1* \
                   gx*t51078*t51279-cx1*gamma_aa[index]*t51217*t51083*t51283+cx2*gamma_aa[index]*t51217*t51083*t51281* \
                   2.0-cx2*t51217*t51083*t51285*t51079*t51298-cx4*t51082*t51091*t51218*t51290*t51295+cx4*gamma_aa[index]* \
                   t51082*t51280*t51218*t51079*4.0+cx3*gx*t51217*t51084*t51282*t51079*3.0-cx3*gamma_aa[index]*gx*t51217* \
                   t51084*t51284*t51079*t51289)*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t51312 = 1/pow(rho_a[index],1.0/3.0);
                double t51313 = c*t51312;
                double t51314 = sqrt(t51313);
                double t51315 = pow(t51313,3.0/2.0);
                double t51316 = c*c;
                double t51317 = 1/pow(rho_a[index],2.0/3.0);
                double t51318 = 1/c0p;
                double t51319 = b1p*t51314;
                double t51320 = b3p*t51315;
                double t51321 = b4p*t51316*t51317;
                double t51322 = b2p*c*t51312;
                double t51323 = t51320+t51321+t51322+t51319;
                double t51324 = 1/t51323;
                double t51325 = t51324*t51318*(1.0/2.0);
                double t51326 = t51325+1.0;
                double t51327 = log(t51326);
                double t51328 = a1p*c*t51312;
                double t51329 = t51328+1.0;
                double t51330 = rho_a[index]*2.0;
                double t51331 = 1/pow(t51330,1.0/3.0);
                double t51332 = c*t51331;
                double t51333 = gcab*gcab;
                double t51334 = 1/pow(rho_a[index],1.6E1/3.0);
                double t51335 = 1/pow(rho_a[index],8.0/3.0);
                double t51336 = gamma_aa[index]*gamma_aa[index];
                double t51337 = t51333*t51333;
                double t51338 = 1/pow(rho_a[index],3.2E1/3.0);
                double t51339 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t51340 = gamma_aa[index]*gcab*t51335;
                double t51341 = t51340+1.0;
                double t51342 = gamma_aa[index]*gcab*t51335*2.0;
                double t51343 = t51333*t51334*t51336;
                double t51344 = t51342+t51343+1.0;
                double t51345 = gamma_aa[index]*gcab*t51335*3.0;
                double t51346 = gamma_aa[index]*gcab*t51333*t51336*t51339;
                double t51347 = t51333*t51334*t51336*3.0;
                double t51348 = t51345+t51346+t51347+1.0;
                double t51349 = t51336*t51336;
                double t51365 = gcab*t51335*2.0;
                double t51366 = gamma_aa[index]*t51333*t51334*6.0;
                double t51367 = gcab*t51333*t51336*t51339*6.0;
                double t51368 = gamma_aa[index]*t51336*t51337*t51338*2.0;
                double t51350 = t51365+t51366+t51367+t51368;
                double t51351 = gamma_aa[index]*gcab*t51335*4.0;
                double t51352 = gamma_aa[index]*gcab*t51333*t51336*t51339*4.0;
                double t51353 = t51333*t51334*t51336*6.0;
                double t51354 = t51337*t51338*t51349;
                double t51355 = t51351+t51352+t51353+t51354+1.0;
                double t51358 = gcab*t51335;
                double t51359 = gamma_aa[index]*t51333*t51334;
                double t51356 = t51358+t51359;
                double t51357 = 1/(t51348*t51348);
                double t51360 = 1/(t51344*t51344);
                double t51361 = gcab*t51335*(3.0/2.0);
                double t51362 = gamma_aa[index]*t51333*t51334*3.0;
                double t51363 = gcab*t51333*t51336*t51339*(3.0/2.0);
                double t51364 = t51361+t51362+t51363;
                double t51369 = 1/(t51355*t51355);
                double t51370 = gx*gx;
                double t51371 = t51370*t51370;
                double t51372 = gamma_aa[index]*gx*t51335;
                double t51373 = t51372+1.0;
                double t51374 = gamma_aa[index]*gx*t51335*2.0;
                double t51375 = t51334*t51370*t51336;
                double t51376 = t51374+t51375+1.0;
                double t51377 = gamma_aa[index]*gx*t51335*3.0;
                double t51378 = gamma_aa[index]*gx*t51370*t51336*t51339;
                double t51379 = t51334*t51370*t51336*3.0;
                double t51380 = t51377+t51378+t51379+1.0;
                double t51396 = gx*t51335*4.0;
                double t51397 = gamma_aa[index]*t51334*t51370*1.2E1;
                double t51398 = gx*t51370*t51336*t51339*1.2E1;
                double t51399 = gamma_aa[index]*t51371*t51336*t51338*4.0;
                double t51381 = t51396+t51397+t51398+t51399;
                double t51382 = gamma_aa[index]*gx*t51335*4.0;
                double t51383 = gamma_aa[index]*gx*t51370*t51336*t51339*4.0;
                double t51384 = t51334*t51370*t51336*6.0;
                double t51385 = t51371*t51338*t51349;
                double t51386 = t51382+t51383+t51384+t51385+1.0;
                double t51389 = gx*t51335*2.0;
                double t51390 = gamma_aa[index]*t51334*t51370*2.0;
                double t51387 = t51390+t51389;
                double t51388 = 1/(t51380*t51380);
                double t51391 = 1/(t51376*t51376);
                double t51392 = gx*t51335*3.0;
                double t51393 = gamma_aa[index]*t51334*t51370*6.0;
                double t51394 = gx*t51370*t51336*t51339*3.0;
                double t51395 = t51392+t51393+t51394;
                double t51400 = 1/(t51386*t51386);
                double t51401 = pow(2.0,1.0/3.0);
                double t51402 = t51401*2.0;
                double t51403 = t51402-2.0;
                double t51404 = two_13*2.0;
                double t51405 = t51404-2.0;
                double t51406 = 1/t51405;
                double t51407 = 1/c0f;
                double t51408 = b1f*t51314;
                double t51409 = b3f*t51315;
                double t51410 = b4f*t51316*t51317;
                double t51411 = b2f*c*t51312;
                double t51412 = t51410+t51411+t51408+t51409;
                double t51413 = 1/t51412;
                double t51414 = t51413*t51407*(1.0/2.0);
                double t51415 = t51414+1.0;
                double t51416 = log(t51415);
                double t51417 = a1f*c*t51312;
                double t51418 = t51417+1.0;
                double t51419 = c0f*t51416*t51418*2.0;
                double t51420 = c0p*t51327*t51329*2.0;
                double t51421 = gcaa*gcaa;
                double t51422 = t51421*t51421;
                double t51423 = gamma_aa[index]*gcaa*t51335;
                double t51424 = t51423+1.0;
                double t51425 = gamma_aa[index]*gcaa*t51335*2.0;
                double t51426 = t51421*t51334*t51336;
                double t51427 = t51425+t51426+1.0;
                double t51428 = gamma_aa[index]*gcaa*t51335*3.0;
                double t51429 = gamma_aa[index]*gcaa*t51421*t51336*t51339;
                double t51430 = t51421*t51334*t51336*3.0;
                double t51431 = t51430+t51428+t51429+1.0;
                double t51447 = gcaa*t51335*4.0;
                double t51448 = gamma_aa[index]*t51421*t51334*1.2E1;
                double t51449 = gcaa*t51421*t51336*t51339*1.2E1;
                double t51450 = gamma_aa[index]*t51422*t51336*t51338*4.0;
                double t51432 = t51450+t51447+t51448+t51449;
                double t51433 = gamma_aa[index]*gcaa*t51335*4.0;
                double t51434 = gamma_aa[index]*gcaa*t51421*t51336*t51339*4.0;
                double t51435 = t51421*t51334*t51336*6.0;
                double t51436 = t51422*t51338*t51349;
                double t51437 = t51433+t51434+t51435+t51436+1.0;
                double t51440 = gcaa*t51335*2.0;
                double t51441 = gamma_aa[index]*t51421*t51334*2.0;
                double t51438 = t51440+t51441;
                double t51439 = 1/(t51431*t51431);
                double t51442 = 1/(t51427*t51427);
                double t51443 = gcaa*t51335*3.0;
                double t51444 = gamma_aa[index]*t51421*t51334*6.0;
                double t51445 = gcaa*t51421*t51336*t51339*3.0;
                double t51446 = t51443+t51444+t51445;
                double t51451 = 1/(t51437*t51437);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t51420+t51403*t51406*(t51419-c0p*t51327*t51329*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t51318*(1.0/2.0))/(b1p*sqrt(t51332)+b3p*pow(t51332,3.0/2.0)+b4p*1/pow(t51330,2.0/ \
                   3.0)*t51316+b2p*c*t51331)+1.0)*(a1p*c*t51331+1.0)*4.0)*(ccab1*1/(t51341*t51341)*t51333*t51334*(1.0/ \
                   2.0)-(ccab2*t51333*t51334*(1.0/2.0))/t51344+ccab2*t51360*t51336*t51337*t51338*(1.0/2.0)-(ccab4*t51336* \
                   t51337*t51338*3.0)/t51355+ccab4*t51337*t51338*t51349*t51369*(t51333*t51334*3.0+t51336*t51337*t51338* \
                   3.0+gamma_aa[index]*gcab*t51333*t51339*6.0)-ccab1*gamma_aa[index]*gcab*1/(t51341*t51341*t51341)*t51333* \
                   t51339*(1.0/2.0)-(ccab3*gamma_aa[index]*gcab*t51333*t51339*(3.0/2.0))/t51348-ccab2*t51333*t51334*1/ \
                   (t51344*t51344*t51344)*t51336*(t51356*t51356)*2.0-ccab4*(t51350*t51350)*t51337*1/(t51355*t51355*t51355) \
                   *t51338*t51349*2.0+ccab2*gamma_aa[index]*t51333*t51360*t51334*t51356*2.0+ccab4*gamma_aa[index]*t51350* \
                   t51336*t51337*t51338*t51369*4.0+ccab3*gcab*t51333*t51336*t51364*t51339*t51357*3.0+ccab3*gamma_aa[index]* \
                   gcab*t51333*t51336*t51339*t51357*(t51333*t51334*(3.0/2.0)+gamma_aa[index]*gcab*t51333*t51339*(3.0/ \
                   2.0))-ccab3*gamma_aa[index]*gcab*t51333*t51336*(t51364*t51364)*t51339*1/(t51348*t51348*t51348)*2.0) \
                   *-4.0+rho_a[index]*(t51420-t51403*t51406*(t51420-t51419))*(ccaa1*t51421*t51334*1/(t51424*t51424)*2.0- \
                   (ccaa2*t51421*t51334*2.0)/t51427+ccaa2*t51422*t51442*t51336*t51338*2.0-(ccaa4*t51422*t51336*t51338* \
                   1.2E1)/t51437+ccaa4*t51422*t51451*t51338*t51349*(t51421*t51334*1.2E1+t51422*t51336*t51338*1.2E1+gamma_aa[index]* \
                   gcaa*t51421*t51339*2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t51421*t51339*6.0)/t51431-ccaa1*gamma_aa[index]* \
                   gcaa*t51421*1/(t51424*t51424*t51424)*t51339*2.0-ccaa2*t51421*t51334*t51336*1/(t51427*t51427*t51427) \
                   *(t51438*t51438)*2.0-ccaa4*t51422*(t51432*t51432)*t51338*1/(t51437*t51437*t51437)*t51349*2.0+ccaa2* \
                   gamma_aa[index]*t51421*t51334*t51442*t51438*4.0+ccaa4*gamma_aa[index]*t51422*t51432*t51451*t51336* \
                   t51338*8.0+ccaa3*gcaa*t51421*t51336*t51446*t51339*t51439*6.0+ccaa3*gamma_aa[index]*gcaa*t51421*t51336* \
                   t51339*t51439*(t51421*t51334*6.0+gamma_aa[index]*gcaa*t51421*t51339*6.0)-ccaa3*gamma_aa[index]*gcaa* \
                   t51421*1/(t51431*t51431*t51431)*t51336*(t51446*t51446)*t51339*2.0)*2.0-c0*pow(rho_a[index],4.0/3.0) \
                   *(cx1*t51334*t51370*1/(t51373*t51373)*2.0-(cx2*t51334*t51370*2.0)/t51376+cx2*t51371*t51336*t51391* \
                   t51338*2.0-(cx4*t51371*t51336*t51338*1.2E1)/t51386+cx4*t51400*t51371*t51338*t51349*(t51334*t51370* \
                   1.2E1+t51371*t51336*t51338*1.2E1+gamma_aa[index]*gx*t51370*t51339*2.4E1)-cx1*gamma_aa[index]*gx*t51370* \
                   1/(t51373*t51373*t51373)*t51339*2.0-(cx3*gamma_aa[index]*gx*t51370*t51339*6.0)/t51380-cx2*t51334*t51370* \
                   t51336*1/(t51376*t51376*t51376)*(t51387*t51387)*2.0-cx4*t51371*(t51381*t51381)*t51338*t51349*1/(t51386* \
                   t51386*t51386)*2.0+cx2*gamma_aa[index]*t51334*t51370*t51391*t51387*4.0+cx4*gamma_aa[index]*t51400* \
                   t51371*t51336*t51381*t51338*8.0+cx3*gx*t51370*t51336*t51339*t51395*t51388*6.0+cx3*gamma_aa[index]* \
                   gx*t51370*t51336*t51339*t51388*(t51334*t51370*6.0+gamma_aa[index]*gx*t51370*t51339*6.0)-cx3*gamma_aa[index]* \
                   gx*t51370*1/(t51380*t51380*t51380)*t51336*t51339*(t51395*t51395)*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void HCTH_Functional::computeUKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t45631 = 1/pow(rho_a[index],1.0/3.0);
            double t45632 = c*t45631;
            double t45633 = sqrt(t45632);
            double t45634 = pow(t45632,3.0/2.0);
            double t45635 = c*c;
            double t45636 = 1/pow(rho_a[index],2.0/3.0);
            double t45637 = 1/c0p;
            double t45638 = b1p*t45633;
            double t45639 = b3p*t45634;
            double t45640 = b4p*t45635*t45636;
            double t45641 = b2p*c*t45631;
            double t45642 = t45640+t45641+t45638+t45639;
            double t45643 = 1/t45642;
            double t45644 = t45643*t45637*(1.0/2.0);
            double t45645 = t45644+1.0;
            double t45646 = log(t45645);
            double t45647 = a1p*c*t45631;
            double t45648 = t45647+1.0;
            double t45649 = pow(2.0,1.0/3.0);
            double t45650 = t45649*2.0;
            double t45651 = t45650-2.0;
            double t45652 = two_13*2.0;
            double t45653 = t45652-2.0;
            double t45654 = 1/t45653;
            double t45655 = 1/c0f;
            double t45656 = 1/pow(rho_b[index],1.0/3.0);
            double t45657 = c*t45656;
            double t45658 = sqrt(t45657);
            double t45659 = pow(t45657,3.0/2.0);
            double t45660 = 1/pow(rho_b[index],2.0/3.0);
            double t45661 = b1p*t45658;
            double t45662 = b3p*t45659;
            double t45663 = b4p*t45660*t45635;
            double t45664 = b2p*c*t45656;
            double t45665 = t45661+t45662+t45663+t45664;
            double t45666 = 1/t45665;
            double t45667 = t45637*t45666*(1.0/2.0);
            double t45668 = t45667+1.0;
            double t45669 = log(t45668);
            double t45670 = a1p*c*t45656;
            double t45671 = t45670+1.0;
            double t45672 = c0p*t45671*t45669*2.0;
            double t45673 = rho_a[index]+rho_b[index];
            double t45674 = 1/pow(t45673,1.0/3.0);
            double t45675 = c*t45674;
            double t45676 = sqrt(t45675);
            double t45677 = pow(t45675,3.0/2.0);
            double t45678 = 1/pow(t45673,2.0/3.0);
            double t45679 = b1p*t45676;
            double t45680 = b3p*t45677;
            double t45681 = b4p*t45635*t45678;
            double t45682 = b2p*c*t45674;
            double t45683 = t45680+t45681+t45682+t45679;
            double t45684 = 1/t45683;
            double t45685 = t45637*t45684*(1.0/2.0);
            double t45686 = t45685+1.0;
            double t45687 = log(t45686);
            double t45688 = a1p*c*t45674;
            double t45689 = t45688+1.0;
            double t45690 = c0p*t45687*t45689*2.0;
            double t45691 = rho_a[index]-rho_b[index];
            double t45692 = t45691*t45691;
            double t45693 = 1/t45673;
            double t45694 = t45691*t45693;
            double t45695 = 1/(t45673*t45673*t45673*t45673);
            double t45696 = t45692*t45692;
            double t45697 = t45694+1.0;
            double t45698 = pow(t45697,4.0/3.0);
            double t45699 = -t45694+1.0;
            double t45700 = pow(t45699,4.0/3.0);
            double t45701 = t45700+t45698-2.0;
            double t45704 = 1/pow(rho_a[index],8.0/3.0);
            double t45705 = gamma_aa[index]*t45704*(1.0/2.0);
            double t45706 = 1/pow(rho_b[index],8.0/3.0);
            double t45707 = gamma_bb[index]*t45706*(1.0/2.0);
            double t45702 = t45705+t45707;
            double t45703 = gcab*gcab;
            double t45708 = t45702*t45702;
            double t45709 = t45703*t45703;
            double t45710 = t45708*t45708;
            double t45711 = c0p*t45646*t45648*2.0;
            double t45712 = b1f*t45633;
            double t45713 = b3f*t45634;
            double t45714 = b4f*t45635*t45636;
            double t45715 = b2f*c*t45631;
            double t45716 = t45712+t45713+t45714+t45715;
            double t45717 = 1/t45716;
            double t45718 = t45717*t45655*(1.0/2.0);
            double t45719 = t45718+1.0;
            double t45720 = log(t45719);
            double t45721 = a1f*c*t45631;
            double t45722 = t45721+1.0;
            double t45723 = t45711-c0f*t45720*t45722*2.0;
            double t45724 = t45711-t45651*t45723*t45654;
            double t45725 = gamma_aa[index]*gamma_aa[index];
            double t45726 = gcaa*gcaa;
            double t45727 = t45725*t45725;
            double t45728 = t45726*t45726;
            double t45729 = 1/pow(rho_a[index],3.2E1/3.0);
            double t45730 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t45731 = 1/pow(rho_a[index],1.6E1/3.0);
            double t45732 = b1f*t45658;
            double t45733 = b3f*t45659;
            double t45734 = b4f*t45660*t45635;
            double t45735 = b2f*c*t45656;
            double t45736 = t45732+t45733+t45734+t45735;
            double t45737 = 1/t45736;
            double t45738 = t45655*t45737*(1.0/2.0);
            double t45739 = t45738+1.0;
            double t45740 = log(t45739);
            double t45741 = a1f*c*t45656;
            double t45742 = t45741+1.0;
            double t45743 = t45672-c0f*t45740*t45742*2.0;
            double t45744 = t45672-t45651*t45743*t45654;
            double t45745 = gamma_bb[index]*gamma_bb[index];
            double t45746 = t45745*t45745;
            double t45747 = 1/pow(rho_b[index],3.2E1/3.0);
            double t45748 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t45749 = 1/pow(rho_b[index],1.6E1/3.0);
            double t45750 = gx*gx;
            double t45751 = t45750*t45750;
            functional_[index] = (rho_a[index]*t45724+rho_b[index]*t45744-t45673*(t45690-t45701*t45654*t45695* \
               t45696*(t45690-c0f*log((t45655*(1.0/2.0))/(b1f*t45676+b3f*t45677+b2f*c*t45674+b4f*t45635*t45678)+1.0) \
               *(a1f*c*t45674+1.0)*2.0)+(Aa*t45701*t45654*log((1.0/2.0)/(Aa*(b1a*t45676+b3a*t45677+b2a*c*t45674+b4a* \
               t45635*t45678))+1.0)*(t45695*t45696-1.0)*(a1a*c*t45674+1.0)*2.0)/d2fz0))*(ccab0+(ccab4*t45710*t45709) \
               /(gcab*t45702*4.0+t45710*t45709+t45703*t45708*6.0+gcab*t45702*t45703*t45708*4.0+1.0)+(ccab1*gcab*t45702) \
               /(gcab*t45702+1.0)+(ccab2*t45703*t45708)/(gcab*t45702*2.0+t45703*t45708+1.0)+(ccab3*gcab*t45702*t45703* \
               t45708)/(gcab*t45702*3.0+t45703*t45708*3.0+gcab*t45702*t45703*t45708+1.0))+c0*pow(rho_a[index],4.0/ \
               3.0)*(cx0+(cx2*t45731*t45750*t45725)/(gamma_aa[index]*gx*t45704*2.0+t45731*t45750*t45725+1.0)+(cx1* \
               gamma_aa[index]*gx*t45704)/(gamma_aa[index]*gx*t45704+1.0)+(cx4*t45751*t45727*t45729)/(gamma_aa[index]* \
               gx*t45704*4.0+t45731*t45750*t45725*6.0+t45751*t45727*t45729+gamma_aa[index]*gx*t45730*t45750*t45725* \
               4.0+1.0)+(cx3*gamma_aa[index]*gx*t45730*t45750*t45725)/(gamma_aa[index]*gx*t45704*3.0+t45731*t45750* \
               t45725*3.0+gamma_aa[index]*gx*t45730*t45750*t45725+1.0))+c0*pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t45750* \
               t45745*t45749)/(gamma_bb[index]*gx*t45706*2.0+t45750*t45745*t45749+1.0)+(cx1*gamma_bb[index]*gx*t45706) \
               /(gamma_bb[index]*gx*t45706+1.0)+(cx4*t45751*t45746*t45747)/(gamma_bb[index]*gx*t45706*4.0+t45750* \
               t45745*t45749*6.0+t45751*t45746*t45747+gamma_bb[index]*gx*t45750*t45745*t45748*4.0+1.0)+(cx3*gamma_bb[index]* \
               gx*t45750*t45745*t45748)/(gamma_bb[index]*gx*t45706*3.0+t45750*t45745*t45749*3.0+gamma_bb[index]*gx* \
               t45750*t45745*t45748+1.0))-rho_a[index]*t45724*(ccaa0+(ccaa2*t45731*t45725*t45726)/(gamma_aa[index]* \
               gcaa*t45704*2.0+t45731*t45725*t45726+1.0)+(ccaa1*gamma_aa[index]*gcaa*t45704)/(gamma_aa[index]*gcaa* \
               t45704+1.0)+(ccaa4*t45727*t45728*t45729)/(gamma_aa[index]*gcaa*t45704*4.0+t45731*t45725*t45726*6.0+ \
               t45727*t45728*t45729+gamma_aa[index]*gcaa*t45730*t45725*t45726*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t45730*t45725*t45726)/(gamma_aa[index]*gcaa*t45704*3.0+t45731*t45725*t45726*3.0+gamma_aa[index]*gcaa* \
               t45730*t45725*t45726+1.0))-rho_b[index]*t45744*(ccaa0+(ccaa2*t45726*t45745*t45749)/(gamma_bb[index]* \
               gcaa*t45706*2.0+t45726*t45745*t45749+1.0)+(ccaa1*gamma_bb[index]*gcaa*t45706)/(gamma_bb[index]*gcaa* \
               t45706+1.0)+(ccaa4*t45728*t45746*t45747)/(gamma_bb[index]*gcaa*t45706*4.0+t45726*t45745*t45749*6.0+ \
               t45728*t45746*t45747+gamma_bb[index]*gcaa*t45726*t45745*t45748*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa* \
               t45726*t45745*t45748)/(gamma_bb[index]*gcaa*t45706*3.0+t45726*t45745*t45749*3.0+gamma_bb[index]*gcaa* \
               t45726*t45745*t45748+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t49776 = 1/pow(rho_a[index],1.0/3.0);
            double t49777 = c*t49776;
            double t49778 = sqrt(t49777);
            double t49779 = pow(t49777,3.0/2.0);
            double t49780 = c*c;
            double t49781 = 1/pow(rho_a[index],2.0/3.0);
            double t49782 = 1/c0p;
            double t49783 = b1p*t49778;
            double t49784 = b3p*t49779;
            double t49785 = b4p*t49780*t49781;
            double t49786 = b2p*c*t49776;
            double t49787 = t49783+t49784+t49785+t49786;
            double t49788 = 1/t49787;
            double t49789 = t49782*t49788*(1.0/2.0);
            double t49790 = t49789+1.0;
            double t49791 = log(t49790);
            double t49792 = a1p*c*t49776;
            double t49793 = t49792+1.0;
            double t49794 = gamma_aa[index]*gamma_aa[index];
            double t49795 = gcaa*gcaa;
            double t49796 = t49794*t49794;
            double t49797 = t49795*t49795;
            double t49798 = 1/pow(rho_a[index],3.2E1/3.0);
            double t49799 = 1/pow(rho_a[index],8.0/3.0);
            double t49800 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t49801 = 1/pow(rho_a[index],1.6E1/3.0);
            double t49802 = gx*gx;
            double t49803 = t49802*t49802;
            functional_[index] = c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t49801*t49802*t49794)/(gamma_aa[index]* \
               gx*t49799*2.0+t49801*t49802*t49794+1.0)+(cx1*gamma_aa[index]*gx*t49799)/(gamma_aa[index]*gx*t49799+ \
               1.0)+(cx4*t49803*t49796*t49798)/(gamma_aa[index]*gx*t49799*4.0+t49801*t49802*t49794*6.0+t49803*t49796* \
               t49798+gamma_aa[index]*gx*t49800*t49802*t49794*4.0+1.0)+(cx3*gamma_aa[index]*gx*t49800*t49802*t49794) \
               /(gamma_aa[index]*gx*t49799*3.0+t49801*t49802*t49794*3.0+gamma_aa[index]*gx*t49800*t49802*t49794+1.0) \
               )-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t49778+b3f*t49779+b2f*c*t49776+ \
               b4f*t49780*t49781))+1.0)*(a1f*c*t49776+1.0)*2.0-c0p*t49791*t49793*2.0))/(two_13*2.0-2.0)+c0p*t49791* \
               t49793*2.0)*(ccaa0+(ccaa2*t49801*t49794*t49795)/(gamma_aa[index]*gcaa*t49799*2.0+t49801*t49794*t49795+ \
               1.0)+(ccaa1*gamma_aa[index]*gcaa*t49799)/(gamma_aa[index]*gcaa*t49799+1.0)+(ccaa4*t49796*t49797*t49798) \
               /(gamma_aa[index]*gcaa*t49799*4.0+t49801*t49794*t49795*6.0+t49796*t49797*t49798+gamma_aa[index]*gcaa* \
               t49800*t49794*t49795*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t49800*t49794*t49795)/(gamma_aa[index]*gcaa* \
               t49799*3.0+t49801*t49794*t49795*3.0+gamma_aa[index]*gcaa*t49800*t49794*t49795+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t49137 = 1/pow(rho_b[index],1.0/3.0);
            double t49138 = c*t49137;
            double t49139 = sqrt(t49138);
            double t49140 = pow(t49138,3.0/2.0);
            double t49141 = c*c;
            double t49142 = 1/pow(rho_b[index],2.0/3.0);
            double t49143 = 1/c0p;
            double t49144 = b1p*t49139;
            double t49145 = b3p*t49140;
            double t49146 = b4p*t49141*t49142;
            double t49147 = b2p*c*t49137;
            double t49148 = t49144+t49145+t49146+t49147;
            double t49149 = 1/t49148;
            double t49150 = t49143*t49149*(1.0/2.0);
            double t49151 = t49150+1.0;
            double t49152 = log(t49151);
            double t49153 = a1p*c*t49137;
            double t49154 = t49153+1.0;
            double t49155 = gamma_bb[index]*gamma_bb[index];
            double t49156 = gcaa*gcaa;
            double t49157 = t49155*t49155;
            double t49158 = t49156*t49156;
            double t49159 = 1/pow(rho_b[index],3.2E1/3.0);
            double t49160 = 1/pow(rho_b[index],8.0/3.0);
            double t49161 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t49162 = 1/pow(rho_b[index],1.6E1/3.0);
            double t49163 = gx*gx;
            double t49164 = t49163*t49163;
            functional_[index] = c0*pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t49162*t49163*t49155)/(gamma_bb[index]* \
               gx*t49160*2.0+t49162*t49163*t49155+1.0)+(cx1*gamma_bb[index]*gx*t49160)/(gamma_bb[index]*gx*t49160+ \
               1.0)+(cx4*t49164*t49157*t49159)/(gamma_bb[index]*gx*t49160*4.0+t49162*t49163*t49155*6.0+t49164*t49157* \
               t49159+gamma_bb[index]*gx*t49161*t49163*t49155*4.0+1.0)+(cx3*gamma_bb[index]*gx*t49161*t49163*t49155) \
               /(gamma_bb[index]*gx*t49160*3.0+t49162*t49163*t49155*3.0+gamma_bb[index]*gx*t49161*t49163*t49155+1.0) \
               )-rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t49139+b3f*t49140+b2f*c*t49137+ \
               b4f*t49141*t49142))+1.0)*(a1f*c*t49137+1.0)*2.0-c0p*t49152*t49154*2.0))/(two_13*2.0-2.0)+c0p*t49152* \
               t49154*2.0)*(ccaa0+(ccaa2*t49162*t49155*t49156)/(gamma_bb[index]*gcaa*t49160*2.0+t49162*t49155*t49156+ \
               1.0)+(ccaa1*gamma_bb[index]*gcaa*t49160)/(gamma_bb[index]*gcaa*t49160+1.0)+(ccaa4*t49157*t49158*t49159) \
               /(gamma_bb[index]*gcaa*t49160*4.0+t49162*t49155*t49156*6.0+t49157*t49158*t49159+gamma_bb[index]*gcaa* \
               t49161*t49155*t49156*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t49161*t49155*t49156)/(gamma_bb[index]*gcaa* \
               t49160*3.0+t49162*t49155*t49156*3.0+gamma_bb[index]*gcaa*t49161*t49155*t49156+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t45753 = 1/pow(rho_a[index],1.0/3.0);
            double t45754 = c*t45753;
            double t45755 = sqrt(t45754);
            double t45756 = pow(t45754,3.0/2.0);
            double t45757 = c*c;
            double t45758 = 1/pow(rho_a[index],2.0/3.0);
            double t45759 = 1/c0p;
            double t45760 = b1p*t45755;
            double t45761 = b3p*t45756;
            double t45762 = b4p*t45757*t45758;
            double t45763 = b2p*c*t45753;
            double t45764 = t45760+t45761+t45762+t45763;
            double t45765 = 1/t45764;
            double t45766 = t45765*t45759*(1.0/2.0);
            double t45767 = t45766+1.0;
            double t45768 = log(t45767);
            double t45769 = a1p*c*t45753;
            double t45770 = t45769+1.0;
            double t45771 = gamma_aa[index]*gamma_aa[index];
            double t45772 = gcaa*gcaa;
            double t45773 = t45771*t45771;
            double t45774 = t45772*t45772;
            double t45775 = 1/pow(rho_a[index],3.2E1/3.0);
            double t45776 = 1/pow(rho_a[index],8.0/3.0);
            double t45777 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t45778 = 1/pow(rho_a[index],1.6E1/3.0);
            double t45779 = pow(2.0,1.0/3.0);
            double t45780 = t45779*2.0;
            double t45781 = t45780-2.0;
            double t45782 = two_13*2.0;
            double t45783 = t45782-2.0;
            double t45784 = 1/t45783;
            double t45785 = 1/c0f;
            double t45786 = b1f*t45755;
            double t45787 = b3f*t45756;
            double t45788 = b4f*t45757*t45758;
            double t45789 = b2f*c*t45753;
            double t45790 = t45786+t45787+t45788+t45789;
            double t45791 = 1/t45790;
            double t45792 = t45791*t45785*(1.0/2.0);
            double t45793 = t45792+1.0;
            double t45794 = log(t45793);
            double t45795 = a1f*c*t45753;
            double t45796 = t45795+1.0;
            double t45797 = c0f*t45794*t45796*2.0;
            double t45798 = c0p*t45770*t45768*2.0;
            double t45799 = 1/pow(rho_b[index],1.0/3.0);
            double t45800 = c*t45799;
            double t45801 = sqrt(t45800);
            double t45802 = pow(t45800,3.0/2.0);
            double t45803 = 1/pow(rho_b[index],2.0/3.0);
            double t45804 = b1p*t45801;
            double t45805 = b3p*t45802;
            double t45806 = b4p*t45803*t45757;
            double t45807 = b2p*c*t45799;
            double t45808 = t45804+t45805+t45806+t45807;
            double t45809 = 1/t45808;
            double t45810 = t45809*t45759*(1.0/2.0);
            double t45811 = t45810+1.0;
            double t45812 = log(t45811);
            double t45813 = a1p*c*t45799;
            double t45814 = t45813+1.0;
            double t45815 = c0p*t45812*t45814*2.0;
            double t45816 = rho_a[index]+rho_b[index];
            double t45817 = 1/pow(t45816,1.0/3.0);
            double t45818 = c*t45817;
            double t45819 = sqrt(t45818);
            double t45820 = pow(t45818,3.0/2.0);
            double t45821 = 1/pow(t45816,2.0/3.0);
            double t45822 = b1p*t45819;
            double t45823 = b3p*t45820;
            double t45824 = b4p*t45821*t45757;
            double t45825 = b2p*c*t45817;
            double t45826 = t45822+t45823+t45824+t45825;
            double t45827 = 1/t45826;
            double t45828 = t45827*t45759*(1.0/2.0);
            double t45829 = t45828+1.0;
            double t45830 = log(t45829);
            double t45831 = a1p*c*t45817;
            double t45832 = t45831+1.0;
            double t45833 = c0p*t45830*t45832*2.0;
            double t45834 = rho_a[index]-rho_b[index];
            double t45835 = t45834*t45834;
            double t45836 = 1/t45816;
            double t45837 = t45834*t45836;
            double t45838 = 1/(t45816*t45816*t45816*t45816);
            double t45839 = t45835*t45835;
            double t45840 = t45837+1.0;
            double t45841 = pow(t45840,4.0/3.0);
            double t45842 = -t45837+1.0;
            double t45843 = pow(t45842,4.0/3.0);
            double t45844 = t45841+t45843-2.0;
            double t45845 = gcab*gcab;
            double t45849 = gamma_aa[index]*t45776*(1.0/2.0);
            double t45850 = 1/pow(rho_b[index],8.0/3.0);
            double t45851 = gamma_bb[index]*t45850*(1.0/2.0);
            double t45846 = t45851+t45849;
            double t45847 = t45846*t45846;
            double t45848 = 1/pow(rho_a[index],1.1E1/3.0);
            double t45852 = t45845*t45845;
            double t45853 = t45847*t45847;
            double t45854 = t45845*t45847*6.0;
            double t45855 = gcab*t45845*t45846*t45847*4.0;
            double t45856 = t45852*t45853;
            double t45857 = gcab*t45846*4.0;
            double t45858 = t45854+t45855+t45856+t45857+1.0;
            double t45859 = gcab*t45846;
            double t45860 = t45859+1.0;
            double t45861 = t45845*t45847;
            double t45862 = gcab*t45846*2.0;
            double t45863 = t45861+t45862+1.0;
            double t45864 = t45845*t45847*3.0;
            double t45865 = gcab*t45845*t45846*t45847;
            double t45866 = gcab*t45846*3.0;
            double t45867 = t45864+t45865+t45866+1.0;
            double t45868 = 1/t45863;
            double t45869 = 1/t45867;
            double t45870 = 1/t45860;
            double t45871 = 1/t45858;
            double t45872 = 1/pow(t45816,4.0/3.0);
            double t45873 = b1f*t45819;
            double t45874 = b3f*t45820;
            double t45875 = b4f*t45821*t45757;
            double t45876 = b2f*c*t45817;
            double t45877 = t45873+t45874+t45875+t45876;
            double t45878 = 1/t45877;
            double t45879 = t45785*t45878*(1.0/2.0);
            double t45880 = t45879+1.0;
            double t45881 = log(t45880);
            double t45882 = a1f*c*t45817;
            double t45883 = t45882+1.0;
            double t45885 = c0f*t45881*t45883*2.0;
            double t45884 = t45833-t45885;
            double t45886 = 1/(t45816*t45816);
            double t45913 = t45834*t45886;
            double t45887 = -t45913+t45836;
            double t45888 = 1/pow(t45816,5.0/3.0);
            double t45889 = 1/sqrt(t45818);
            double t45890 = 1/t45829;
            double t45891 = 1/(t45826*t45826);
            double t45892 = b4p*t45757*t45888*(2.0/3.0);
            double t45893 = b2p*c*t45872*(1.0/3.0);
            double t45894 = b1p*c*t45872*t45889*(1.0/6.0);
            double t45895 = b3p*c*t45872*t45819*(1.0/2.0);
            double t45896 = t45892+t45893+t45894+t45895;
            double t45897 = t45832*t45890*t45891*t45896;
            double t45898 = 1/d2fz0;
            double t45899 = 1/Aa;
            double t45900 = b1a*t45819;
            double t45901 = b3a*t45820;
            double t45902 = b4a*t45821*t45757;
            double t45903 = b2a*c*t45817;
            double t45904 = t45900+t45901+t45902+t45903;
            double t45905 = 1/t45904;
            double t45906 = t45905*t45899*(1.0/2.0);
            double t45907 = t45906+1.0;
            double t45908 = log(t45907);
            double t45909 = a1a*c*t45817;
            double t45910 = t45909+1.0;
            double t45911 = 1/(t45816*t45816*t45816*t45816*t45816);
            double t45912 = pow(t45840,1.0/3.0);
            double t45914 = t45912*t45887*(4.0/3.0);
            double t45915 = pow(t45842,1.0/3.0);
            double t45916 = t45914-t45915*t45887*(4.0/3.0);
            double t45917 = t45838*t45839;
            double t45918 = t45917-1.0;
            double t45919 = 1/pow(rho_a[index],4.0/3.0);
            double t45920 = 1/pow(rho_a[index],5.0/3.0);
            double t45921 = 1/sqrt(t45754);
            double t45922 = 1/t45767;
            double t45923 = 1/(t45764*t45764);
            double t45924 = b4p*t45920*t45757*(2.0/3.0);
            double t45925 = b2p*c*t45919*(1.0/3.0);
            double t45926 = b1p*c*t45921*t45919*(1.0/6.0);
            double t45927 = b3p*c*t45755*t45919*(1.0/2.0);
            double t45928 = t45924+t45925+t45926+t45927;
            double t45929 = t45922*t45770*t45923*t45928;
            double t45930 = t45797-t45798;
            double t45931 = t45930*t45781*t45784;
            double t45932 = Aa*t45910*t45844*t45908*t45918*t45784*t45898*2.0;
            double t45933 = t45931+t45798;
            double t45934 = gamma_aa[index]*gcaa*t45776*4.0;
            double t45935 = gamma_aa[index]*gcaa*t45771*t45772*t45777*4.0;
            double t45936 = t45771*t45772*t45778*6.0;
            double t45937 = t45773*t45774*t45775;
            double t45938 = t45934+t45935+t45936+t45937+1.0;
            double t45939 = 1/t45938;
            double t45940 = gamma_aa[index]*gcaa*t45776;
            double t45941 = t45940+1.0;
            double t45942 = 1/t45941;
            double t45943 = gamma_aa[index]*gcaa*t45776*3.0;
            double t45944 = gamma_aa[index]*gcaa*t45771*t45772*t45777;
            double t45945 = t45771*t45772*t45778*3.0;
            double t45946 = t45943+t45944+t45945+1.0;
            double t45947 = 1/t45946;
            double t45948 = gamma_aa[index]*gcaa*t45776*2.0;
            double t45949 = t45771*t45772*t45778;
            double t45950 = t45948+t45949+1.0;
            double t45951 = 1/t45950;
            double t45952 = 1/pow(rho_a[index],1.9E1/3.0);
            double t45953 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t45954 = 1/pow(rho_a[index],3.5E1/3.0);
            double t45955 = gx*gx;
            double t45956 = t45955*t45955;
            double t45957 = gamma_aa[index]*gx*t45776*4.0;
            double t45958 = gamma_aa[index]*gx*t45771*t45955*t45777*4.0;
            double t45959 = t45771*t45955*t45778*6.0;
            double t45960 = t45773*t45775*t45956;
            double t45961 = t45960+t45957+t45958+t45959+1.0;
            double t45962 = 1/t45961;
            double t45963 = gamma_aa[index]*gx*t45776;
            double t45964 = t45963+1.0;
            double t45965 = 1/t45964;
            double t45966 = gamma_aa[index]*gx*t45776*3.0;
            double t45967 = gamma_aa[index]*gx*t45771*t45955*t45777;
            double t45968 = t45771*t45955*t45778*3.0;
            double t45969 = t45966+t45967+t45968+1.0;
            double t45970 = 1/t45969;
            double t45971 = gamma_aa[index]*gx*t45776*2.0;
            double t45972 = t45771*t45955*t45778;
            double t45973 = t45971+t45972+1.0;
            double t45974 = 1/t45973;
            double t45975 = 1/t45793;
            double t45976 = 1/(t45790*t45790);
            double t45977 = b4f*t45920*t45757*(2.0/3.0);
            double t45978 = b2f*c*t45919*(1.0/3.0);
            double t45979 = b1f*c*t45921*t45919*(1.0/6.0);
            double t45980 = b3f*c*t45755*t45919*(1.0/2.0);
            double t45981 = t45980+t45977+t45978+t45979;
            double t45982 = a1f*c*c0f*t45919*t45794*(2.0/3.0);
            double t45983 = a1p*c*c0p*t45919*t45768*(2.0/3.0);
            double t45984 = ccaa4*t45773*t45774*t45775*t45939;
            double t45985 = ccaa1*gamma_aa[index]*gcaa*t45942*t45776;
            double t45986 = ccaa3*gamma_aa[index]*gcaa*t45771*t45772*t45947*t45777;
            double t45987 = ccaa2*t45771*t45951*t45772*t45778;
            double t45988 = ccaa0+t45984+t45985+t45986+t45987;
            v_rho_a_[index] = (ccab0+ccab1*gcab*t45870*t45846+ccab4*t45852*t45853*t45871+ccab2*t45845*t45847* \
               t45868+ccab3*gcab*t45845*t45846*t45847*t45869)*(t45931-t45833-t45932+t45798-rho_a[index]*(-t45929+ \
               t45983+t45781*t45784*(t45982+t45929-t45981*t45975*t45796*t45976-a1p*c*c0p*t45919*t45768*(2.0/3.0)) \
               )+t45816*(-t45897+t45844*t45784*t45838*t45839*(t45897-(t45883*1/(t45877*t45877)*(b2f*c*t45872*(1.0/ \
               3.0)+b4f*t45757*t45888*(2.0/3.0)+b1f*c*t45872*t45889*(1.0/6.0)+b3f*c*t45872*t45819*(1.0/2.0)))/t45880+ \
               a1f*c*c0f*t45872*t45881*(2.0/3.0)-a1p*c*c0p*t45830*t45872*(2.0/3.0))+a1p*c*c0p*t45830*t45872*(2.0/ \
               3.0)-t45911*t45844*t45784*t45839*t45884*4.0+t45916*t45784*t45838*t45839*t45884+t45834*t45835*t45844* \
               t45784*t45838*t45884*4.0+Aa*t45910*t45844*t45908*t45784*t45898*(t45911*t45839*4.0-t45834*t45835*t45838* \
               4.0)*2.0-Aa*t45910*t45916*t45908*t45918*t45784*t45898*2.0-(t45910*1/(t45904*t45904)*t45844*t45918* \
               t45784*t45898*(b2a*c*t45872*(1.0/3.0)+b4a*t45757*t45888*(2.0/3.0)+b1a*c*t45872*t45889*(1.0/6.0)+b3a* \
               c*t45872*t45819*(1.0/2.0)))/t45907+Aa*a1a*c*t45844*t45872*t45908*t45918*t45784*t45898*(2.0/3.0))+t45844* \
               t45784*t45838*t45839*t45884)-t45988*(t45798+t45781*t45784*(t45797-c0p*t45770*t45768*2.0))-(rho_a[index]* \
               t45933+rho_b[index]*(t45815-t45781*t45784*(t45815-c0f*log((t45785*(1.0/2.0))/(b1f*t45801+b3f*t45802+ \
               b2f*c*t45799+b4f*t45803*t45757)+1.0)*(a1f*c*t45799+1.0)*2.0))-t45816*(t45833+t45932-t45844*t45784* \
               t45838*t45839*t45884))*(ccab1*gamma_aa[index]*gcab*t45870*t45848*(4.0/3.0)-ccab2*t45845*1/(t45863* \
               t45863)*t45847*(gamma_aa[index]*gcab*t45848*(8.0/3.0)+gamma_aa[index]*t45845*t45846*t45848*(8.0/3.0) \
               )-ccab4*t45852*t45853*1/(t45858*t45858)*(gamma_aa[index]*gcab*t45848*(1.6E1/3.0)+gamma_aa[index]*t45845* \
               t45846*t45848*1.6E1+gamma_aa[index]*gcab*t45845*t45847*t45848*1.6E1+gamma_aa[index]*t45852*t45846* \
               t45847*t45848*(1.6E1/3.0))-ccab1*gamma_aa[index]*1/(t45860*t45860)*t45845*t45846*t45848*(4.0/3.0)+ \
               ccab2*gamma_aa[index]*t45845*t45846*t45848*t45868*(8.0/3.0)-ccab3*gcab*t45845*t45846*t45847*1/(t45867* \
               t45867)*(gamma_aa[index]*gcab*t45848*4.0+gamma_aa[index]*t45845*t45846*t45848*8.0+gamma_aa[index]* \
               gcab*t45845*t45847*t45848*4.0)+ccab3*gamma_aa[index]*gcab*t45845*t45847*t45848*t45869*4.0+ccab4*gamma_aa[index]* \
               t45852*t45871*t45846*t45847*t45848*(1.6E1/3.0))+rho_a[index]*t45933*(ccaa1*gamma_aa[index]*gcaa*t45942* \
               t45848*(8.0/3.0)+ccaa2*t45771*t45951*t45772*t45952*(1.6E1/3.0)+ccaa4*t45773*t45774*t45954*t45939*(3.2E1/ \
               3.0)-ccaa1*1/(t45941*t45941)*t45771*t45772*t45952*(8.0/3.0)-ccaa2*1/(t45950*t45950)*t45771*t45772* \
               t45778*(gamma_aa[index]*gcaa*t45848*(1.6E1/3.0)+t45771*t45772*t45952*(1.6E1/3.0))-ccaa4*t45773*t45774* \
               t45775*1/(t45938*t45938)*(gamma_aa[index]*gcaa*t45848*(3.2E1/3.0)+t45771*t45772*t45952*3.2E1+t45773* \
               t45774*t45954*(3.2E1/3.0)+gamma_aa[index]*gcaa*t45771*t45772*t45953*3.2E1)+ccaa3*gamma_aa[index]*gcaa* \
               t45771*t45772*t45953*t45947*8.0-ccaa3*gamma_aa[index]*gcaa*t45771*t45772*1/(t45946*t45946)*t45777* \
               (gamma_aa[index]*gcaa*t45848*8.0+t45771*t45772*t45952*1.6E1+gamma_aa[index]*gcaa*t45771*t45772*t45953* \
               8.0))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]*gx*t45776*t45965+cx2*t45771*t45955*t45974* \
               t45778+cx4*t45773*t45962*t45775*t45956+cx3*gamma_aa[index]*gx*t45771*t45970*t45955*t45777)*(4.0/3.0) \
               +rho_a[index]*t45988*(-t45929+t45983+t45781*t45784*(t45982+t45929-t45983-t45981*t45975*t45796*t45976) \
               )-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t45848*t45965*(8.0/3.0)+cx2*t45771*t45952*t45955* \
               t45974*(1.6E1/3.0)+cx4*t45773*t45962*t45954*t45956*(3.2E1/3.0)-cx1*t45771*t45952*t45955*1/(t45964* \
               t45964)*(8.0/3.0)-cx2*t45771*t45955*1/(t45973*t45973)*t45778*(gamma_aa[index]*gx*t45848*(1.6E1/3.0) \
               +t45771*t45952*t45955*(1.6E1/3.0))-cx4*1/(t45961*t45961)*t45773*t45775*t45956*(gamma_aa[index]*gx* \
               t45848*(3.2E1/3.0)+t45771*t45952*t45955*3.2E1+t45773*t45954*t45956*(3.2E1/3.0)+gamma_aa[index]*gx* \
               t45771*t45953*t45955*3.2E1)+cx3*gamma_aa[index]*gx*t45771*t45970*t45953*t45955*8.0-cx3*gamma_aa[index]* \
               gx*t45771*t45955*t45777*1/(t45969*t45969)*(gamma_aa[index]*gx*t45848*8.0+t45771*t45952*t45955*1.6E1+ \
               gamma_aa[index]*gx*t45771*t45953*t45955*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t49805 = 1/pow(rho_a[index],1.0/3.0);
            double t49806 = c*t49805;
            double t49807 = sqrt(t49806);
            double t49808 = pow(t49806,3.0/2.0);
            double t49809 = c*c;
            double t49810 = 1/pow(rho_a[index],2.0/3.0);
            double t49811 = 1/c0p;
            double t49812 = b1p*t49807;
            double t49813 = b3p*t49808;
            double t49814 = b4p*t49810*t49809;
            double t49815 = b2p*c*t49805;
            double t49816 = t49812+t49813+t49814+t49815;
            double t49817 = 1/t49816;
            double t49818 = t49811*t49817*(1.0/2.0);
            double t49819 = t49818+1.0;
            double t49820 = log(t49819);
            double t49821 = a1p*c*t49805;
            double t49822 = t49821+1.0;
            double t49823 = gamma_aa[index]*gamma_aa[index];
            double t49824 = gcaa*gcaa;
            double t49825 = t49823*t49823;
            double t49826 = t49824*t49824;
            double t49827 = 1/pow(rho_a[index],3.2E1/3.0);
            double t49828 = 1/pow(rho_a[index],8.0/3.0);
            double t49829 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t49830 = 1/pow(rho_a[index],1.6E1/3.0);
            double t49831 = pow(2.0,1.0/3.0);
            double t49832 = t49831*2.0;
            double t49833 = t49832-2.0;
            double t49834 = two_13*2.0;
            double t49835 = t49834-2.0;
            double t49836 = 1/t49835;
            double t49837 = 1/c0f;
            double t49838 = b1f*t49807;
            double t49839 = b3f*t49808;
            double t49840 = b4f*t49810*t49809;
            double t49841 = b2f*c*t49805;
            double t49842 = t49840+t49841+t49838+t49839;
            double t49843 = 1/t49842;
            double t49844 = t49843*t49837*(1.0/2.0);
            double t49845 = t49844+1.0;
            double t49846 = log(t49845);
            double t49847 = a1f*c*t49805;
            double t49848 = t49847+1.0;
            double t49849 = c0f*t49846*t49848*2.0;
            double t49850 = c0p*t49820*t49822*2.0;
            double t49851 = gamma_aa[index]*gcaa*t49828*4.0;
            double t49852 = gamma_aa[index]*gcaa*t49823*t49824*t49829*4.0;
            double t49853 = t49830*t49823*t49824*6.0;
            double t49854 = t49825*t49826*t49827;
            double t49855 = t49851+t49852+t49853+t49854+1.0;
            double t49856 = 1/t49855;
            double t49857 = gamma_aa[index]*gcaa*t49828;
            double t49858 = t49857+1.0;
            double t49859 = 1/t49858;
            double t49860 = gamma_aa[index]*gcaa*t49828*3.0;
            double t49861 = gamma_aa[index]*gcaa*t49823*t49824*t49829;
            double t49862 = t49830*t49823*t49824*3.0;
            double t49863 = t49860+t49861+t49862+1.0;
            double t49864 = 1/t49863;
            double t49865 = gamma_aa[index]*gcaa*t49828*2.0;
            double t49866 = t49830*t49823*t49824;
            double t49867 = t49865+t49866+1.0;
            double t49868 = 1/t49867;
            double t49869 = 1/pow(rho_a[index],1.9E1/3.0);
            double t49870 = 1/pow(rho_a[index],1.1E1/3.0);
            double t49871 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t49872 = 1/pow(rho_a[index],3.5E1/3.0);
            double t49873 = gx*gx;
            double t49874 = t49873*t49873;
            double t49875 = gamma_aa[index]*gx*t49828*4.0;
            double t49876 = gamma_aa[index]*gx*t49823*t49873*t49829*4.0;
            double t49877 = t49830*t49823*t49873*6.0;
            double t49878 = t49825*t49827*t49874;
            double t49879 = t49875+t49876+t49877+t49878+1.0;
            double t49880 = 1/t49879;
            double t49881 = gamma_aa[index]*gx*t49828;
            double t49882 = t49881+1.0;
            double t49883 = 1/t49882;
            double t49884 = gamma_aa[index]*gx*t49828*3.0;
            double t49885 = gamma_aa[index]*gx*t49823*t49873*t49829;
            double t49886 = t49830*t49823*t49873*3.0;
            double t49887 = t49884+t49885+t49886+1.0;
            double t49888 = 1/t49887;
            double t49889 = gamma_aa[index]*gx*t49828*2.0;
            double t49890 = t49830*t49823*t49873;
            double t49891 = t49890+t49889+1.0;
            double t49892 = 1/t49891;
            double t49893 = 1/pow(rho_a[index],4.0/3.0);
            double t49894 = 1/pow(rho_a[index],5.0/3.0);
            double t49895 = 1/sqrt(t49806);
            double t49896 = 1/t49819;
            double t49897 = 1/(t49816*t49816);
            double t49898 = b4p*t49809*t49894*(2.0/3.0);
            double t49899 = b2p*c*t49893*(1.0/3.0);
            double t49900 = b1p*c*t49893*t49895*(1.0/6.0);
            double t49901 = b3p*c*t49807*t49893*(1.0/2.0);
            double t49902 = t49900+t49901+t49898+t49899;
            double t49903 = t49902*t49822*t49896*t49897;
            double t49904 = ccaa4*t49825*t49826*t49827*t49856;
            double t49905 = ccaa1*gamma_aa[index]*gcaa*t49828*t49859;
            double t49906 = ccaa3*gamma_aa[index]*gcaa*t49823*t49824*t49864*t49829;
            double t49907 = ccaa2*t49830*t49823*t49824*t49868;
            double t49908 = ccaa0+t49904+t49905+t49906+t49907;
            v_rho_a_[index] = -t49908*(t49850+t49833*t49836*(t49849-c0p*t49820*t49822*2.0))+rho_a[index]*t49908* \
               (-t49903+t49833*t49836*(t49903-(1/(t49842*t49842)*t49848*(b2f*c*t49893*(1.0/3.0)+b4f*t49809*t49894* \
               (2.0/3.0)+b1f*c*t49893*t49895*(1.0/6.0)+b3f*c*t49807*t49893*(1.0/2.0)))/t49845+a1f*c*c0f*t49846*t49893* \
               (2.0/3.0)-a1p*c*c0p*t49820*t49893*(2.0/3.0))+a1p*c*c0p*t49820*t49893*(2.0/3.0))+c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+cx1*gamma_aa[index]*gx*t49828*t49883+cx2*t49830*t49823*t49873*t49892+cx4*t49825*t49880*t49827* \
               t49874+cx3*gamma_aa[index]*gx*t49823*t49873*t49829*t49888)*(4.0/3.0)+rho_a[index]*(t49850-t49833*t49836* \
               (t49850-t49849))*(ccaa1*gamma_aa[index]*gcaa*t49870*t49859*(8.0/3.0)+ccaa4*t49825*t49826*t49872*t49856* \
               (3.2E1/3.0)+ccaa2*t49823*t49824*t49868*t49869*(1.6E1/3.0)-ccaa1*t49823*t49824*1/(t49858*t49858)*t49869* \
               (8.0/3.0)-ccaa2*t49830*t49823*t49824*1/(t49867*t49867)*(gamma_aa[index]*gcaa*t49870*(1.6E1/3.0)+t49823* \
               t49824*t49869*(1.6E1/3.0))-ccaa4*t49825*t49826*t49827*1/(t49855*t49855)*(gamma_aa[index]*gcaa*t49870* \
               (3.2E1/3.0)+t49825*t49826*t49872*(3.2E1/3.0)+t49823*t49824*t49869*3.2E1+gamma_aa[index]*gcaa*t49823* \
               t49824*t49871*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t49823*t49824*t49871*t49864*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t49823*t49824*1/(t49863*t49863)*t49829*(gamma_aa[index]*gcaa*t49870*8.0+t49823*t49824*t49869* \
               1.6E1+gamma_aa[index]*gcaa*t49823*t49824*t49871*8.0))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t49870*t49883*(8.0/3.0)+cx2*t49823*t49873*t49892*t49869*(1.6E1/3.0)+cx4*t49825*t49880*t49872*t49874* \
               (3.2E1/3.0)-cx1*t49823*t49873*1/(t49882*t49882)*t49869*(8.0/3.0)-cx2*t49830*t49823*t49873*1/(t49891* \
               t49891)*(gamma_aa[index]*gx*t49870*(1.6E1/3.0)+t49823*t49873*t49869*(1.6E1/3.0))-cx4*t49825*t49827* \
               t49874*1/(t49879*t49879)*(gamma_aa[index]*gx*t49870*(3.2E1/3.0)+t49825*t49872*t49874*(3.2E1/3.0)+t49823* \
               t49873*t49869*3.2E1+gamma_aa[index]*gx*t49823*t49871*t49873*3.2E1)+cx3*gamma_aa[index]*gx*t49823*t49871* \
               t49873*t49888*8.0-cx3*gamma_aa[index]*gx*t49823*t49873*t49829*1/(t49887*t49887)*(gamma_aa[index]*gx* \
               t49870*8.0+t49823*t49873*t49869*1.6E1+gamma_aa[index]*gx*t49823*t49871*t49873*8.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t45990 = 1/pow(rho_b[index],1.0/3.0);
            double t45991 = c*t45990;
            double t45992 = sqrt(t45991);
            double t45993 = pow(t45991,3.0/2.0);
            double t45994 = c*c;
            double t45995 = 1/pow(rho_b[index],2.0/3.0);
            double t45996 = 1/c0p;
            double t45997 = b1p*t45992;
            double t45998 = b3p*t45993;
            double t45999 = b4p*t45994*t45995;
            double t46000 = b2p*c*t45990;
            double t46001 = t45997+t45998+t45999+t46000;
            double t46002 = 1/t46001;
            double t46003 = t45996*t46002*(1.0/2.0);
            double t46004 = t46003+1.0;
            double t46005 = log(t46004);
            double t46006 = a1p*c*t45990;
            double t46007 = t46006+1.0;
            double t46008 = gamma_bb[index]*gamma_bb[index];
            double t46009 = gcaa*gcaa;
            double t46010 = t46008*t46008;
            double t46011 = t46009*t46009;
            double t46012 = 1/pow(rho_b[index],3.2E1/3.0);
            double t46013 = 1/pow(rho_b[index],8.0/3.0);
            double t46014 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t46015 = 1/pow(rho_b[index],1.6E1/3.0);
            double t46016 = pow(2.0,1.0/3.0);
            double t46017 = t46016*2.0;
            double t46018 = t46017-2.0;
            double t46019 = two_13*2.0;
            double t46020 = t46019-2.0;
            double t46021 = 1/t46020;
            double t46022 = 1/c0f;
            double t46023 = 1/pow(rho_a[index],1.0/3.0);
            double t46024 = c*t46023;
            double t46025 = sqrt(t46024);
            double t46026 = pow(t46024,3.0/2.0);
            double t46027 = 1/pow(rho_a[index],2.0/3.0);
            double t46028 = b1p*t46025;
            double t46029 = b3p*t46026;
            double t46030 = b4p*t45994*t46027;
            double t46031 = b2p*c*t46023;
            double t46032 = t46030+t46031+t46028+t46029;
            double t46033 = 1/t46032;
            double t46034 = t45996*t46033*(1.0/2.0);
            double t46035 = t46034+1.0;
            double t46036 = log(t46035);
            double t46037 = a1p*c*t46023;
            double t46038 = t46037+1.0;
            double t46039 = c0p*t46036*t46038*2.0;
            double t46040 = b1f*t45992;
            double t46041 = b3f*t45993;
            double t46042 = b4f*t45994*t45995;
            double t46043 = b2f*c*t45990;
            double t46044 = t46040+t46041+t46042+t46043;
            double t46045 = 1/t46044;
            double t46046 = t46022*t46045*(1.0/2.0);
            double t46047 = t46046+1.0;
            double t46048 = log(t46047);
            double t46049 = a1f*c*t45990;
            double t46050 = t46049+1.0;
            double t46051 = c0f*t46050*t46048*2.0;
            double t46052 = c0p*t46005*t46007*2.0;
            double t46053 = rho_a[index]+rho_b[index];
            double t46054 = 1/pow(t46053,1.0/3.0);
            double t46055 = c*t46054;
            double t46056 = sqrt(t46055);
            double t46057 = pow(t46055,3.0/2.0);
            double t46058 = 1/pow(t46053,2.0/3.0);
            double t46059 = b1p*t46056;
            double t46060 = b3p*t46057;
            double t46061 = b4p*t45994*t46058;
            double t46062 = b2p*c*t46054;
            double t46063 = t46060+t46061+t46062+t46059;
            double t46064 = 1/t46063;
            double t46065 = t45996*t46064*(1.0/2.0);
            double t46066 = t46065+1.0;
            double t46067 = log(t46066);
            double t46068 = a1p*c*t46054;
            double t46069 = t46068+1.0;
            double t46070 = c0p*t46067*t46069*2.0;
            double t46071 = rho_a[index]-rho_b[index];
            double t46072 = t46071*t46071;
            double t46073 = 1/t46053;
            double t46074 = t46071*t46073;
            double t46075 = 1/(t46053*t46053*t46053*t46053);
            double t46076 = t46072*t46072;
            double t46077 = t46074+1.0;
            double t46078 = pow(t46077,4.0/3.0);
            double t46079 = -t46074+1.0;
            double t46080 = pow(t46079,4.0/3.0);
            double t46081 = t46080+t46078-2.0;
            double t46082 = gcab*gcab;
            double t46086 = 1/pow(rho_a[index],8.0/3.0);
            double t46087 = gamma_aa[index]*t46086*(1.0/2.0);
            double t46088 = gamma_bb[index]*t46013*(1.0/2.0);
            double t46083 = t46087+t46088;
            double t46084 = t46083*t46083;
            double t46085 = 1/pow(rho_b[index],1.1E1/3.0);
            double t46089 = t46082*t46082;
            double t46090 = t46084*t46084;
            double t46091 = t46082*t46084*6.0;
            double t46092 = gcab*t46082*t46083*t46084*4.0;
            double t46093 = t46090*t46089;
            double t46094 = gcab*t46083*4.0;
            double t46095 = t46091+t46092+t46093+t46094+1.0;
            double t46096 = gcab*t46083;
            double t46097 = t46096+1.0;
            double t46098 = t46082*t46084;
            double t46099 = gcab*t46083*2.0;
            double t46100 = t46098+t46099+1.0;
            double t46101 = t46082*t46084*3.0;
            double t46102 = gcab*t46082*t46083*t46084;
            double t46103 = gcab*t46083*3.0;
            double t46104 = t46101+t46102+t46103+1.0;
            double t46105 = 1/t46100;
            double t46106 = 1/t46104;
            double t46107 = 1/t46097;
            double t46108 = 1/t46095;
            double t46109 = 1/pow(t46053,4.0/3.0);
            double t46110 = b1f*t46056;
            double t46111 = b3f*t46057;
            double t46112 = b4f*t45994*t46058;
            double t46113 = b2f*c*t46054;
            double t46114 = t46110+t46111+t46112+t46113;
            double t46115 = 1/t46114;
            double t46116 = t46022*t46115*(1.0/2.0);
            double t46117 = t46116+1.0;
            double t46118 = log(t46117);
            double t46119 = a1f*c*t46054;
            double t46120 = t46119+1.0;
            double t46122 = c0f*t46120*t46118*2.0;
            double t46121 = -t46122+t46070;
            double t46123 = 1/(t46053*t46053);
            double t46124 = t46123*t46071;
            double t46125 = t46124+t46073;
            double t46126 = t46122-t46070;
            double t46127 = 1/pow(t46053,5.0/3.0);
            double t46128 = 1/sqrt(t46055);
            double t46129 = 1/t46066;
            double t46130 = 1/(t46063*t46063);
            double t46131 = b4p*t45994*t46127*(2.0/3.0);
            double t46132 = b2p*c*t46109*(1.0/3.0);
            double t46133 = b1p*c*t46109*t46128*(1.0/6.0);
            double t46134 = b3p*c*t46109*t46056*(1.0/2.0);
            double t46135 = t46131+t46132+t46133+t46134;
            double t46136 = 1/d2fz0;
            double t46137 = 1/Aa;
            double t46138 = b1a*t46056;
            double t46139 = b3a*t46057;
            double t46140 = b4a*t45994*t46058;
            double t46141 = b2a*c*t46054;
            double t46142 = t46140+t46141+t46138+t46139;
            double t46143 = 1/t46142;
            double t46144 = t46143*t46137*(1.0/2.0);
            double t46145 = t46144+1.0;
            double t46146 = log(t46145);
            double t46147 = a1a*c*t46054;
            double t46148 = t46147+1.0;
            double t46149 = 1/(t46053*t46053*t46053*t46053*t46053);
            double t46150 = pow(t46077,1.0/3.0);
            double t46151 = t46150*t46125*(4.0/3.0);
            double t46152 = pow(t46079,1.0/3.0);
            double t46153 = t46151-t46125*t46152*(4.0/3.0);
            double t46154 = t46075*t46076;
            double t46155 = t46154-1.0;
            double t46156 = 1/pow(rho_b[index],4.0/3.0);
            double t46157 = 1/pow(rho_b[index],5.0/3.0);
            double t46158 = 1/sqrt(t45991);
            double t46159 = 1/t46004;
            double t46160 = 1/(t46001*t46001);
            double t46161 = b4p*t45994*t46157*(2.0/3.0);
            double t46162 = b2p*c*t46156*(1.0/3.0);
            double t46163 = b1p*c*t46156*t46158*(1.0/6.0);
            double t46164 = b3p*c*t45992*t46156*(1.0/2.0);
            double t46165 = t46161+t46162+t46163+t46164;
            double t46166 = t46007*t46160*t46165*t46159;
            double t46167 = t46051-t46052;
            double t46168 = t46021*t46018*t46167;
            double t46169 = Aa*t46021*t46081*t46136*t46146*t46155*t46148*2.0;
            double t46170 = a1p*c*c0p*t46109*t46067*(2.0/3.0);
            double t46171 = t46052+t46168;
            double t46172 = gamma_bb[index]*gcaa*t46013*4.0;
            double t46173 = gamma_bb[index]*gcaa*t46014*t46008*t46009*4.0;
            double t46174 = t46015*t46008*t46009*6.0;
            double t46175 = t46010*t46011*t46012;
            double t46176 = t46172+t46173+t46174+t46175+1.0;
            double t46177 = 1/t46176;
            double t46178 = gamma_bb[index]*gcaa*t46013;
            double t46179 = t46178+1.0;
            double t46180 = 1/t46179;
            double t46181 = gamma_bb[index]*gcaa*t46013*3.0;
            double t46182 = gamma_bb[index]*gcaa*t46014*t46008*t46009;
            double t46183 = t46015*t46008*t46009*3.0;
            double t46184 = t46181+t46182+t46183+1.0;
            double t46185 = 1/t46184;
            double t46186 = gamma_bb[index]*gcaa*t46013*2.0;
            double t46187 = t46015*t46008*t46009;
            double t46188 = t46186+t46187+1.0;
            double t46189 = 1/t46188;
            double t46190 = 1/pow(rho_b[index],1.9E1/3.0);
            double t46191 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t46192 = 1/pow(rho_b[index],3.5E1/3.0);
            double t46193 = gx*gx;
            double t46194 = t46193*t46193;
            double t46195 = gamma_bb[index]*gx*t46013*4.0;
            double t46196 = gamma_bb[index]*gx*t46014*t46008*t46193*4.0;
            double t46197 = t46015*t46008*t46193*6.0;
            double t46198 = t46010*t46012*t46194;
            double t46199 = t46195+t46196+t46197+t46198+1.0;
            double t46200 = 1/t46199;
            double t46201 = gamma_bb[index]*gx*t46013;
            double t46202 = t46201+1.0;
            double t46203 = 1/t46202;
            double t46204 = gamma_bb[index]*gx*t46013*3.0;
            double t46205 = gamma_bb[index]*gx*t46014*t46008*t46193;
            double t46206 = t46015*t46008*t46193*3.0;
            double t46207 = t46204+t46205+t46206+1.0;
            double t46208 = 1/t46207;
            double t46209 = gamma_bb[index]*gx*t46013*2.0;
            double t46210 = t46015*t46008*t46193;
            double t46211 = t46210+t46209+1.0;
            double t46212 = 1/t46211;
            double t46213 = 1/t46047;
            double t46214 = 1/(t46044*t46044);
            double t46215 = b4f*t45994*t46157*(2.0/3.0);
            double t46216 = b2f*c*t46156*(1.0/3.0);
            double t46217 = b1f*c*t46156*t46158*(1.0/6.0);
            double t46218 = b3f*c*t45992*t46156*(1.0/2.0);
            double t46219 = t46215+t46216+t46217+t46218;
            double t46220 = a1f*c*c0f*t46048*t46156*(2.0/3.0);
            double t46221 = a1p*c*c0p*t46005*t46156*(2.0/3.0);
            double t46222 = ccaa4*t46010*t46011*t46012*t46177;
            double t46223 = ccaa1*gamma_bb[index]*gcaa*t46013*t46180;
            double t46224 = ccaa3*gamma_bb[index]*gcaa*t46014*t46008*t46009*t46185;
            double t46225 = ccaa2*t46015*t46008*t46009*t46189;
            double t46226 = ccaa0+t46222+t46223+t46224+t46225;
            v_rho_b_[index] = -t46226*(t46052+t46021*t46018*(t46051-c0p*t46005*t46007*2.0))-(ccab0+ccab1*gcab* \
               t46107*t46083+ccab2*t46105*t46082*t46084+ccab4*t46090*t46108*t46089+ccab3*gcab*t46106*t46082*t46083* \
               t46084)*(-t46052+t46070-t46168+t46169+rho_b[index]*(t46221-t46166+t46021*t46018*(t46220+t46166-t46050* \
               t46213*t46214*t46219-a1p*c*c0p*t46005*t46156*(2.0/3.0)))-t46053*(t46170-t46130*t46135*t46129*t46069+ \
               t46021*t46126*t46153*t46075*t46076+t46021*t46081*t46126*t46076*t46149*4.0-t46021*t46081*t46075*t46076* \
               (t46170-t46130*t46135*t46129*t46069+(t46120*1/(t46114*t46114)*(b2f*c*t46109*(1.0/3.0)+b4f*t45994*t46127* \
               (2.0/3.0)+b1f*c*t46109*t46128*(1.0/6.0)+b3f*c*t46109*t46056*(1.0/2.0)))/t46117-a1f*c*c0f*t46109*t46118* \
               (2.0/3.0))-t46021*t46121*t46071*t46072*t46081*t46075*4.0+Aa*t46021*t46081*t46136*t46146*t46148*(t46076* \
               t46149*4.0+t46071*t46072*t46075*4.0)*2.0+Aa*t46021*t46153*t46136*t46146*t46155*t46148*2.0-(t46021* \
               1/(t46142*t46142)*t46081*t46136*t46155*t46148*(b2a*c*t46109*(1.0/3.0)+b4a*t45994*t46127*(2.0/3.0)+ \
               b1a*c*t46109*t46128*(1.0/6.0)+b3a*c*t46109*t46056*(1.0/2.0)))/t46145+Aa*a1a*c*t46021*t46081*t46109* \
               t46136*t46146*t46155*(2.0/3.0))+t46021*t46081*t46126*t46075*t46076)-(rho_b[index]*t46171+rho_a[index]* \
               (t46039-t46021*t46018*(t46039-c0f*log((t46022*(1.0/2.0))/(b1f*t46025+b3f*t46026+b2f*c*t46023+b4f*t45994* \
               t46027)+1.0)*(a1f*c*t46023+1.0)*2.0))-t46053*(t46070+t46169-t46021*t46121*t46081*t46075*t46076))*(ccab1* \
               gamma_bb[index]*gcab*t46107*t46085*(4.0/3.0)-ccab2*1/(t46100*t46100)*t46082*t46084*(gamma_bb[index]* \
               gcab*t46085*(8.0/3.0)+gamma_bb[index]*t46082*t46083*t46085*(8.0/3.0))-ccab4*t46090*1/(t46095*t46095) \
               *t46089*(gamma_bb[index]*gcab*t46085*(1.6E1/3.0)+gamma_bb[index]*t46082*t46083*t46085*1.6E1+gamma_bb[index]* \
               gcab*t46082*t46084*t46085*1.6E1+gamma_bb[index]*t46083*t46084*t46085*t46089*(1.6E1/3.0))-ccab1*gamma_bb[index]* \
               t46082*t46083*t46085*1/(t46097*t46097)*(4.0/3.0)+ccab2*gamma_bb[index]*t46105*t46082*t46083*t46085* \
               (8.0/3.0)-ccab3*gcab*1/(t46104*t46104)*t46082*t46083*t46084*(gamma_bb[index]*gcab*t46085*4.0+gamma_bb[index]* \
               t46082*t46083*t46085*8.0+gamma_bb[index]*gcab*t46082*t46084*t46085*4.0)+ccab3*gamma_bb[index]*gcab* \
               t46106*t46082*t46084*t46085*4.0+ccab4*gamma_bb[index]*t46108*t46083*t46084*t46085*t46089*(1.6E1/3.0) \
               )+rho_b[index]*t46171*(ccaa1*gamma_bb[index]*gcaa*t46180*t46085*(8.0/3.0)+ccaa4*t46010*t46011*t46192* \
               t46177*(3.2E1/3.0)+ccaa2*t46008*t46009*t46190*t46189*(1.6E1/3.0)-ccaa1*t46008*t46009*t46190*1/(t46179* \
               t46179)*(8.0/3.0)-ccaa2*t46015*t46008*t46009*1/(t46188*t46188)*(gamma_bb[index]*gcaa*t46085*(1.6E1/ \
               3.0)+t46008*t46009*t46190*(1.6E1/3.0))-ccaa4*t46010*t46011*t46012*1/(t46176*t46176)*(gamma_bb[index]* \
               gcaa*t46085*(3.2E1/3.0)+t46010*t46011*t46192*(3.2E1/3.0)+t46008*t46009*t46190*3.2E1+gamma_bb[index]* \
               gcaa*t46008*t46009*t46191*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t46008*t46009*t46191*t46185*8.0-ccaa3* \
               gamma_bb[index]*gcaa*t46014*t46008*t46009*1/(t46184*t46184)*(gamma_bb[index]*gcaa*t46085*8.0+t46008* \
               t46009*t46190*1.6E1+gamma_bb[index]*gcaa*t46008*t46009*t46191*8.0))+c0*pow(rho_b[index],1.0/3.0)*(cx0+ \
               cx1*gamma_bb[index]*gx*t46013*t46203+cx2*t46212*t46015*t46008*t46193+cx4*t46010*t46200*t46012*t46194+ \
               cx3*gamma_bb[index]*gx*t46014*t46008*t46208*t46193)*(4.0/3.0)+rho_b[index]*t46226*(t46221-t46166+t46021* \
               t46018*(t46220-t46221+t46166-t46050*t46213*t46214*t46219))-c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]* \
               gx*t46203*t46085*(8.0/3.0)+cx2*t46212*t46008*t46190*t46193*(1.6E1/3.0)+cx4*t46010*t46200*t46192*t46194* \
               (3.2E1/3.0)-cx1*1/(t46202*t46202)*t46008*t46190*t46193*(8.0/3.0)-cx2*1/(t46211*t46211)*t46015*t46008* \
               t46193*(gamma_bb[index]*gx*t46085*(1.6E1/3.0)+t46008*t46190*t46193*(1.6E1/3.0))-cx4*t46010*t46012* \
               t46194*1/(t46199*t46199)*(gamma_bb[index]*gx*t46085*(3.2E1/3.0)+t46010*t46192*t46194*(3.2E1/3.0)+t46008* \
               t46190*t46193*3.2E1+gamma_bb[index]*gx*t46008*t46191*t46193*3.2E1)+cx3*gamma_bb[index]*gx*t46008*t46208* \
               t46191*t46193*8.0-cx3*gamma_bb[index]*gx*t46014*t46008*1/(t46207*t46207)*t46193*(gamma_bb[index]*gx* \
               t46085*8.0+t46008*t46190*t46193*1.6E1+gamma_bb[index]*gx*t46008*t46191*t46193*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t49167 = 1/pow(rho_b[index],1.0/3.0);
            double t49168 = c*t49167;
            double t49169 = sqrt(t49168);
            double t49170 = pow(t49168,3.0/2.0);
            double t49171 = c*c;
            double t49172 = 1/pow(rho_b[index],2.0/3.0);
            double t49173 = 1/c0p;
            double t49174 = b1p*t49169;
            double t49175 = b3p*t49170;
            double t49176 = b4p*t49171*t49172;
            double t49177 = b2p*c*t49167;
            double t49178 = t49174+t49175+t49176+t49177;
            double t49179 = 1/t49178;
            double t49180 = t49173*t49179*(1.0/2.0);
            double t49181 = t49180+1.0;
            double t49182 = log(t49181);
            double t49183 = a1p*c*t49167;
            double t49184 = t49183+1.0;
            double t49185 = gamma_bb[index]*gamma_bb[index];
            double t49186 = gcaa*gcaa;
            double t49187 = t49185*t49185;
            double t49188 = t49186*t49186;
            double t49189 = 1/pow(rho_b[index],3.2E1/3.0);
            double t49190 = 1/pow(rho_b[index],8.0/3.0);
            double t49191 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t49192 = 1/pow(rho_b[index],1.6E1/3.0);
            double t49193 = pow(2.0,1.0/3.0);
            double t49194 = t49193*2.0;
            double t49195 = t49194-2.0;
            double t49196 = two_13*2.0;
            double t49197 = t49196-2.0;
            double t49198 = 1/t49197;
            double t49199 = 1/c0f;
            double t49200 = b1f*t49169;
            double t49201 = b3f*t49170;
            double t49202 = b4f*t49171*t49172;
            double t49203 = b2f*c*t49167;
            double t49204 = t49200+t49201+t49202+t49203;
            double t49205 = 1/t49204;
            double t49206 = t49205*t49199*(1.0/2.0);
            double t49207 = t49206+1.0;
            double t49208 = log(t49207);
            double t49209 = a1f*c*t49167;
            double t49210 = t49209+1.0;
            double t49211 = c0f*t49210*t49208*2.0;
            double t49212 = c0p*t49182*t49184*2.0;
            double t49213 = gamma_bb[index]*gcaa*t49190*4.0;
            double t49214 = gamma_bb[index]*gcaa*t49191*t49185*t49186*4.0;
            double t49215 = t49192*t49185*t49186*6.0;
            double t49216 = t49187*t49188*t49189;
            double t49217 = t49213+t49214+t49215+t49216+1.0;
            double t49218 = 1/t49217;
            double t49219 = gamma_bb[index]*gcaa*t49190;
            double t49220 = t49219+1.0;
            double t49221 = 1/t49220;
            double t49222 = gamma_bb[index]*gcaa*t49190*3.0;
            double t49223 = gamma_bb[index]*gcaa*t49191*t49185*t49186;
            double t49224 = t49192*t49185*t49186*3.0;
            double t49225 = t49222+t49223+t49224+1.0;
            double t49226 = 1/t49225;
            double t49227 = gamma_bb[index]*gcaa*t49190*2.0;
            double t49228 = t49192*t49185*t49186;
            double t49229 = t49227+t49228+1.0;
            double t49230 = 1/t49229;
            double t49231 = 1/pow(rho_b[index],1.9E1/3.0);
            double t49232 = 1/pow(rho_b[index],1.1E1/3.0);
            double t49233 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t49234 = 1/pow(rho_b[index],3.5E1/3.0);
            double t49235 = gx*gx;
            double t49236 = t49235*t49235;
            double t49237 = gamma_bb[index]*gx*t49190*4.0;
            double t49238 = gamma_bb[index]*gx*t49235*t49191*t49185*4.0;
            double t49239 = t49235*t49192*t49185*6.0;
            double t49240 = t49236*t49187*t49189;
            double t49241 = t49240+t49237+t49238+t49239+1.0;
            double t49242 = 1/t49241;
            double t49243 = gamma_bb[index]*gx*t49190;
            double t49244 = t49243+1.0;
            double t49245 = 1/t49244;
            double t49246 = gamma_bb[index]*gx*t49190*3.0;
            double t49247 = gamma_bb[index]*gx*t49235*t49191*t49185;
            double t49248 = t49235*t49192*t49185*3.0;
            double t49249 = t49246+t49247+t49248+1.0;
            double t49250 = 1/t49249;
            double t49251 = gamma_bb[index]*gx*t49190*2.0;
            double t49252 = t49235*t49192*t49185;
            double t49253 = t49251+t49252+1.0;
            double t49254 = 1/t49253;
            double t49255 = 1/pow(rho_b[index],4.0/3.0);
            double t49256 = 1/pow(rho_b[index],5.0/3.0);
            double t49257 = 1/sqrt(t49168);
            double t49258 = 1/t49181;
            double t49259 = 1/(t49178*t49178);
            double t49260 = b4p*t49171*t49256*(2.0/3.0);
            double t49261 = b2p*c*t49255*(1.0/3.0);
            double t49262 = b1p*c*t49255*t49257*(1.0/6.0);
            double t49263 = b3p*c*t49255*t49169*(1.0/2.0);
            double t49264 = t49260+t49261+t49262+t49263;
            double t49265 = t49264*t49184*t49258*t49259;
            double t49266 = ccaa4*t49218*t49187*t49188*t49189;
            double t49267 = ccaa1*gamma_bb[index]*gcaa*t49221*t49190;
            double t49268 = ccaa3*gamma_bb[index]*gcaa*t49226*t49191*t49185*t49186;
            double t49269 = ccaa2*t49230*t49192*t49185*t49186;
            double t49270 = ccaa0+t49266+t49267+t49268+t49269;
            v_rho_b_[index] = -t49270*(t49212+t49195*t49198*(t49211-c0p*t49182*t49184*2.0))+rho_b[index]*t49270* \
               (-t49265+t49195*t49198*(t49265-(t49210*1/(t49204*t49204)*(b2f*c*t49255*(1.0/3.0)+b4f*t49171*t49256* \
               (2.0/3.0)+b1f*c*t49255*t49257*(1.0/6.0)+b3f*c*t49255*t49169*(1.0/2.0)))/t49207+a1f*c*c0f*t49208*t49255* \
               (2.0/3.0)-a1p*c*c0p*t49182*t49255*(2.0/3.0))+a1p*c*c0p*t49182*t49255*(2.0/3.0))+c0*pow(rho_b[index],1.0/ \
               3.0)*(cx0+cx1*gamma_bb[index]*gx*t49190*t49245+cx2*t49235*t49254*t49192*t49185+cx4*t49242*t49236*t49187* \
               t49189+cx3*gamma_bb[index]*gx*t49250*t49235*t49191*t49185)*(4.0/3.0)+rho_b[index]*(t49212+t49195*t49198* \
               (t49211-t49212))*(ccaa1*gamma_bb[index]*gcaa*t49221*t49232*(8.0/3.0)+ccaa2*t49230*t49231*t49185*t49186* \
               (1.6E1/3.0)+ccaa4*t49234*t49218*t49187*t49188*(3.2E1/3.0)-ccaa1*1/(t49220*t49220)*t49231*t49185*t49186* \
               (8.0/3.0)-ccaa2*t49192*1/(t49229*t49229)*t49185*t49186*(gamma_bb[index]*gcaa*t49232*(1.6E1/3.0)+t49231* \
               t49185*t49186*(1.6E1/3.0))-ccaa4*1/(t49217*t49217)*t49187*t49188*t49189*(gamma_bb[index]*gcaa*t49232* \
               (3.2E1/3.0)+t49231*t49185*t49186*3.2E1+t49234*t49187*t49188*(3.2E1/3.0)+gamma_bb[index]*gcaa*t49233* \
               t49185*t49186*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t49233*t49226*t49185*t49186*8.0-ccaa3*gamma_bb[index]* \
               gcaa*1/(t49225*t49225)*t49191*t49185*t49186*(gamma_bb[index]*gcaa*t49232*8.0+t49231*t49185*t49186* \
               1.6E1+gamma_bb[index]*gcaa*t49233*t49185*t49186*8.0))-c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]* \
               gx*t49232*t49245*(8.0/3.0)+cx2*t49231*t49235*t49254*t49185*(1.6E1/3.0)+cx4*t49242*t49234*t49236*t49187* \
               (3.2E1/3.0)-cx1*t49231*t49235*1/(t49244*t49244)*t49185*(8.0/3.0)-cx2*t49235*1/(t49253*t49253)*t49192* \
               t49185*(gamma_bb[index]*gx*t49232*(1.6E1/3.0)+t49231*t49235*t49185*(1.6E1/3.0))-cx4*1/(t49241*t49241) \
               *t49236*t49187*t49189*(gamma_bb[index]*gx*t49232*(3.2E1/3.0)+t49231*t49235*t49185*3.2E1+t49234*t49236* \
               t49187*(3.2E1/3.0)+gamma_bb[index]*gx*t49233*t49235*t49185*3.2E1)+cx3*gamma_bb[index]*gx*t49250*t49233* \
               t49235*t49185*8.0-cx3*gamma_bb[index]*gx*t49235*t49191*t49185*1/(t49249*t49249)*(gamma_bb[index]*gx* \
               t49232*8.0+t49231*t49235*t49185*1.6E1+gamma_bb[index]*gx*t49233*t49235*t49185*8.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t46228 = 1/pow(rho_a[index],1.0/3.0);
                double t46229 = c*t46228;
                double t46230 = sqrt(t46229);
                double t46231 = pow(t46229,3.0/2.0);
                double t46232 = c*c;
                double t46233 = 1/pow(rho_a[index],2.0/3.0);
                double t46234 = 1/c0p;
                double t46235 = b1p*t46230;
                double t46236 = b3p*t46231;
                double t46237 = b4p*t46232*t46233;
                double t46238 = b2p*c*t46228;
                double t46239 = t46235+t46236+t46237+t46238;
                double t46240 = 1/t46239;
                double t46241 = t46240*t46234*(1.0/2.0);
                double t46242 = t46241+1.0;
                double t46243 = log(t46242);
                double t46244 = a1p*c*t46228;
                double t46245 = t46244+1.0;
                double t46246 = pow(2.0,1.0/3.0);
                double t46247 = t46246*2.0;
                double t46248 = t46247-2.0;
                double t46249 = two_13*2.0;
                double t46250 = t46249-2.0;
                double t46251 = 1/t46250;
                double t46252 = 1/c0f;
                double t46253 = 1/pow(rho_b[index],1.0/3.0);
                double t46254 = c*t46253;
                double t46255 = sqrt(t46254);
                double t46256 = pow(t46254,3.0/2.0);
                double t46257 = 1/pow(rho_b[index],2.0/3.0);
                double t46258 = b1p*t46255;
                double t46259 = b3p*t46256;
                double t46260 = b4p*t46232*t46257;
                double t46261 = b2p*c*t46253;
                double t46262 = t46260+t46261+t46258+t46259;
                double t46263 = 1/t46262;
                double t46264 = t46234*t46263*(1.0/2.0);
                double t46265 = t46264+1.0;
                double t46266 = log(t46265);
                double t46267 = a1p*c*t46253;
                double t46268 = t46267+1.0;
                double t46269 = c0p*t46266*t46268*2.0;
                double t46270 = rho_a[index]+rho_b[index];
                double t46271 = 1/pow(t46270,1.0/3.0);
                double t46272 = c*t46271;
                double t46273 = sqrt(t46272);
                double t46274 = pow(t46272,3.0/2.0);
                double t46275 = 1/pow(t46270,2.0/3.0);
                double t46276 = b1p*t46273;
                double t46277 = b3p*t46274;
                double t46278 = b4p*t46232*t46275;
                double t46279 = b2p*c*t46271;
                double t46280 = t46276+t46277+t46278+t46279;
                double t46281 = 1/t46280;
                double t46282 = t46234*t46281*(1.0/2.0);
                double t46283 = t46282+1.0;
                double t46284 = log(t46283);
                double t46285 = a1p*c*t46271;
                double t46286 = t46285+1.0;
                double t46287 = c0p*t46284*t46286*2.0;
                double t46288 = rho_a[index]-rho_b[index];
                double t46289 = t46288*t46288;
                double t46290 = 1/t46270;
                double t46291 = t46290*t46288;
                double t46292 = 1/(t46270*t46270*t46270*t46270);
                double t46293 = t46289*t46289;
                double t46294 = t46291+1.0;
                double t46295 = pow(t46294,4.0/3.0);
                double t46296 = -t46291+1.0;
                double t46297 = pow(t46296,4.0/3.0);
                double t46298 = t46295+t46297-2.0;
                double t46299 = 1/pow(rho_a[index],8.0/3.0);
                double t46300 = gamma_aa[index]*t46299*(1.0/2.0);
                double t46301 = 1/pow(rho_b[index],8.0/3.0);
                double t46302 = gamma_bb[index]*t46301*(1.0/2.0);
                double t46303 = t46300+t46302;
                double t46304 = gcab*t46303;
                double t46305 = t46304+1.0;
                double t46306 = gcab*gcab;
                double t46307 = t46303*t46303;
                double t46308 = t46306*t46306;
                double t46309 = t46307*t46307;
                double t46310 = t46306*t46307;
                double t46311 = gcab*t46303*2.0;
                double t46312 = t46310+t46311+1.0;
                double t46313 = t46306*t46307*3.0;
                double t46314 = gcab*t46303*t46306*t46307;
                double t46315 = gcab*t46303*3.0;
                double t46316 = t46313+t46314+t46315+1.0;
                double t46317 = t46306*t46307*6.0;
                double t46318 = gcab*t46303*t46306*t46307*4.0;
                double t46319 = t46308*t46309;
                double t46320 = gcab*t46303*4.0;
                double t46321 = t46320+t46317+t46318+t46319+1.0;
                double t46322 = c0p*t46243*t46245*2.0;
                double t46323 = gamma_aa[index]*gamma_aa[index];
                double t46324 = gx*gx;
                double t46325 = t46324*t46324;
                double t46326 = 1/pow(rho_a[index],3.2E1/3.0);
                double t46327 = 1/pow(rho_a[index],1.6E1/3.0);
                double t46328 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t46329 = gamma_aa[index]*gx*t46299;
                double t46330 = t46329+1.0;
                double t46331 = gamma_aa[index]*gx*t46299*3.0;
                double t46332 = gamma_aa[index]*gx*t46323*t46324*t46328;
                double t46333 = t46323*t46324*t46327*3.0;
                double t46334 = t46331+t46332+t46333+1.0;
                double t46335 = t46323*t46323;
                double t46336 = gamma_aa[index]*gx*t46299*4.0;
                double t46337 = gamma_aa[index]*gx*t46323*t46324*t46328*4.0;
                double t46338 = t46323*t46324*t46327*6.0;
                double t46339 = t46325*t46326*t46335;
                double t46340 = t46336+t46337+t46338+t46339+1.0;
                double t46341 = gamma_aa[index]*gx*t46299*2.0;
                double t46342 = t46323*t46324*t46327;
                double t46343 = t46341+t46342+1.0;
                double t46344 = b1f*t46230;
                double t46345 = b3f*t46231;
                double t46346 = b4f*t46232*t46233;
                double t46347 = b2f*c*t46228;
                double t46348 = t46344+t46345+t46346+t46347;
                double t46349 = 1/t46348;
                double t46350 = t46252*t46349*(1.0/2.0);
                double t46351 = t46350+1.0;
                double t46352 = log(t46351);
                double t46353 = a1f*c*t46228;
                double t46354 = t46353+1.0;
                double t46355 = t46322-c0f*t46352*t46354*2.0;
                double t46356 = t46322-t46251*t46355*t46248;
                double t46357 = gcaa*gcaa;
                double t46358 = t46357*t46357;
                double t46359 = gamma_aa[index]*gcaa*t46299;
                double t46360 = t46359+1.0;
                double t46361 = gamma_aa[index]*gcaa*t46299*3.0;
                double t46362 = gamma_aa[index]*gcaa*t46323*t46328*t46357;
                double t46363 = t46323*t46327*t46357*3.0;
                double t46364 = t46361+t46362+t46363+1.0;
                double t46365 = gamma_aa[index]*gcaa*t46299*4.0;
                double t46366 = gamma_aa[index]*gcaa*t46323*t46328*t46357*4.0;
                double t46367 = t46323*t46327*t46357*6.0;
                double t46368 = t46326*t46335*t46358;
                double t46369 = t46365+t46366+t46367+t46368+1.0;
                double t46370 = gamma_aa[index]*gcaa*t46299*2.0;
                double t46371 = t46323*t46327*t46357;
                double t46372 = t46370+t46371+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t46356+rho_b[index]*(t46269-t46251*t46248*(t46269-c0f*log((t46252* \
                   (1.0/2.0))/(b1f*t46255+b3f*t46256+b2f*c*t46253+b4f*t46232*t46257)+1.0)*(a1f*c*t46253+1.0)*2.0))-t46270* \
                   (t46287-t46251*t46292*t46293*t46298*(t46287-c0f*log((t46252*(1.0/2.0))/(b1f*t46273+b3f*t46274+b2f* \
                   c*t46271+b4f*t46232*t46275)+1.0)*(a1f*c*t46271+1.0)*2.0)+(Aa*t46251*t46298*log((1.0/2.0)/(Aa*(b1a* \
                   t46273+b3a*t46274+b2a*c*t46271+b4a*t46232*t46275))+1.0)*(t46292*t46293-1.0)*(a1a*c*t46271+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t46299*(1.0/2.0))/t46305-ccab4*1/(t46321*t46321)*t46308*t46309*(gcab*t46299* \
                   2.0+t46303*t46306*t46299*6.0+gcab*t46306*t46307*t46299*6.0+t46303*t46307*t46308*t46299*2.0)-ccab2* \
                   1/(t46312*t46312)*t46306*t46307*(gcab*t46299+t46303*t46306*t46299)+(ccab2*t46303*t46306*t46299)/t46312- \
                   ccab1*t46303*1/(t46305*t46305)*t46306*t46299*(1.0/2.0)+(ccab3*gcab*t46306*t46307*t46299*(3.0/2.0)) \
                   /t46316+(ccab4*t46303*t46307*t46308*t46299*2.0)/t46321-ccab3*gcab*t46303*t46306*t46307*1/(t46316*t46316) \
                   *(gcab*t46299*(3.0/2.0)+t46303*t46306*t46299*3.0+gcab*t46306*t46307*t46299*(3.0/2.0)))-rho_a[index]* \
                   t46356*((ccaa1*gcaa*t46299)/t46360-ccaa1*gamma_aa[index]*1/(t46360*t46360)*t46327*t46357+(ccaa2*gamma_aa[index]* \
                   t46327*t46357*2.0)/t46372-ccaa2*t46323*t46327*1/(t46372*t46372)*t46357*(gcaa*t46299*2.0+gamma_aa[index]* \
                   t46327*t46357*2.0)+(ccaa4*gamma_aa[index]*t46323*t46326*t46358*4.0)/t46369+(ccaa3*gcaa*t46323*t46328* \
                   t46357*3.0)/t46364-ccaa4*t46326*t46335*t46358*1/(t46369*t46369)*(gcaa*t46299*4.0+gamma_aa[index]*t46327* \
                   t46357*1.2E1+gamma_aa[index]*t46323*t46326*t46358*4.0+gcaa*t46323*t46328*t46357*1.2E1)-ccaa3*gamma_aa[index]* \
                   gcaa*t46323*t46328*1/(t46364*t46364)*t46357*(gcaa*t46299*3.0+gamma_aa[index]*t46327*t46357*6.0+gcaa* \
                   t46323*t46328*t46357*3.0))+c0*pow(rho_a[index],4.0/3.0)*((cx1*gx*t46299)/t46330-cx1*gamma_aa[index]* \
                   1/(t46330*t46330)*t46324*t46327+(cx2*gamma_aa[index]*t46324*t46327*2.0)/t46343-cx2*t46323*t46324*1/ \
                   (t46343*t46343)*t46327*(gx*t46299*2.0+gamma_aa[index]*t46324*t46327*2.0)+(cx4*gamma_aa[index]*t46323* \
                   t46325*t46326*4.0)/t46340+(cx3*gx*t46323*t46324*t46328*3.0)/t46334-cx4*1/(t46340*t46340)*t46325*t46326* \
                   t46335*(gx*t46299*4.0+gamma_aa[index]*t46324*t46327*1.2E1+gamma_aa[index]*t46323*t46325*t46326*4.0+ \
                   gx*t46323*t46324*t46328*1.2E1)-cx3*gamma_aa[index]*gx*t46323*t46324*1/(t46334*t46334)*t46328*(gx*t46299* \
                   3.0+gamma_aa[index]*t46324*t46327*6.0+gx*t46323*t46324*t46328*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t49911 = 1/pow(rho_a[index],8.0/3.0);
                double t49912 = gamma_aa[index]*gamma_aa[index];
                double t49913 = gx*gx;
                double t49914 = t49913*t49913;
                double t49915 = 1/pow(rho_a[index],3.2E1/3.0);
                double t49916 = 1/pow(rho_a[index],1.6E1/3.0);
                double t49917 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t49918 = gamma_aa[index]*gx*t49911;
                double t49919 = t49918+1.0;
                double t49920 = gamma_aa[index]*gx*t49911*3.0;
                double t49921 = gamma_aa[index]*gx*t49912*t49913*t49917;
                double t49922 = t49912*t49913*t49916*3.0;
                double t49923 = t49920+t49921+t49922+1.0;
                double t49924 = t49912*t49912;
                double t49925 = gamma_aa[index]*gx*t49911*4.0;
                double t49926 = gamma_aa[index]*gx*t49912*t49913*t49917*4.0;
                double t49927 = t49912*t49913*t49916*6.0;
                double t49928 = t49914*t49915*t49924;
                double t49929 = t49925+t49926+t49927+t49928+1.0;
                double t49930 = gamma_aa[index]*gx*t49911*2.0;
                double t49931 = t49912*t49913*t49916;
                double t49932 = t49930+t49931+1.0;
                double t49933 = 1/pow(rho_a[index],1.0/3.0);
                double t49934 = c*t49933;
                double t49935 = sqrt(t49934);
                double t49936 = pow(t49934,3.0/2.0);
                double t49937 = c*c;
                double t49938 = 1/pow(rho_a[index],2.0/3.0);
                double t49939 = 1/c0p;
                double t49940 = b1p*t49935;
                double t49941 = b3p*t49936;
                double t49942 = b4p*t49937*t49938;
                double t49943 = b2p*c*t49933;
                double t49944 = t49940+t49941+t49942+t49943;
                double t49945 = 1/t49944;
                double t49946 = t49945*t49939*(1.0/2.0);
                double t49947 = t49946+1.0;
                double t49948 = log(t49947);
                double t49949 = a1p*c*t49933;
                double t49950 = t49949+1.0;
                double t49951 = gcaa*gcaa;
                double t49952 = t49951*t49951;
                double t49953 = gamma_aa[index]*gcaa*t49911;
                double t49954 = t49953+1.0;
                double t49955 = gamma_aa[index]*gcaa*t49911*3.0;
                double t49956 = gamma_aa[index]*gcaa*t49912*t49951*t49917;
                double t49957 = t49912*t49951*t49916*3.0;
                double t49958 = t49955+t49956+t49957+1.0;
                double t49959 = gamma_aa[index]*gcaa*t49911*4.0;
                double t49960 = gamma_aa[index]*gcaa*t49912*t49951*t49917*4.0;
                double t49961 = t49912*t49951*t49916*6.0;
                double t49962 = t49915*t49924*t49952;
                double t49963 = t49960+t49961+t49962+t49959+1.0;
                double t49964 = gamma_aa[index]*gcaa*t49911*2.0;
                double t49965 = t49912*t49951*t49916;
                double t49966 = t49964+t49965+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t49935+ \
                   b3f*t49936+b2f*c*t49933+b4f*t49937*t49938))+1.0)*(a1f*c*t49933+1.0)*2.0-c0p*t49950*t49948*2.0))/(two_13* \
                   2.0-2.0)+c0p*t49950*t49948*2.0)*((ccaa1*gcaa*t49911)/t49954-ccaa1*gamma_aa[index]*t49951*t49916*1/ \
                   (t49954*t49954)+(ccaa2*gamma_aa[index]*t49951*t49916*2.0)/t49966-ccaa2*t49912*t49951*t49916*1/(t49966* \
                   t49966)*(gcaa*t49911*2.0+gamma_aa[index]*t49951*t49916*2.0)+(ccaa4*gamma_aa[index]*t49912*t49915*t49952* \
                   4.0)/t49963+(ccaa3*gcaa*t49912*t49951*t49917*3.0)/t49958-ccaa4*t49915*t49924*t49952*1/(t49963*t49963) \
                   *(gcaa*t49911*4.0+gamma_aa[index]*t49951*t49916*1.2E1+gamma_aa[index]*t49912*t49915*t49952*4.0+gcaa* \
                   t49912*t49951*t49917*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t49912*t49951*t49917*1/(t49958*t49958)*(gcaa* \
                   t49911*3.0+gamma_aa[index]*t49951*t49916*6.0+gcaa*t49912*t49951*t49917*3.0))+c0*pow(rho_a[index],4.0/ \
                   3.0)*((cx1*gx*t49911)/t49919-cx1*gamma_aa[index]*t49913*t49916*1/(t49919*t49919)+(cx2*gamma_aa[index]* \
                   t49913*t49916*2.0)/t49932-cx2*t49912*t49913*1/(t49932*t49932)*t49916*(gx*t49911*2.0+gamma_aa[index]* \
                   t49913*t49916*2.0)+(cx4*gamma_aa[index]*t49912*t49914*t49915*4.0)/t49929+(cx3*gx*t49912*t49913*t49917* \
                   3.0)/t49923-cx4*t49914*t49915*t49924*1/(t49929*t49929)*(gx*t49911*4.0+gamma_aa[index]*t49913*t49916* \
                   1.2E1+gamma_aa[index]*t49912*t49914*t49915*4.0+gx*t49912*t49913*t49917*1.2E1)-cx3*gamma_aa[index]* \
                   gx*t49912*t49913*1/(t49923*t49923)*t49917*(gx*t49911*3.0+gamma_aa[index]*t49913*t49916*6.0+gx*t49912* \
                   t49913*t49917*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t46375 = 1/pow(rho_a[index],1.0/3.0);
                double t46376 = c*t46375;
                double t46377 = sqrt(t46376);
                double t46378 = pow(t46376,3.0/2.0);
                double t46379 = c*c;
                double t46380 = 1/pow(rho_a[index],2.0/3.0);
                double t46381 = 1/c0p;
                double t46382 = b1p*t46377;
                double t46383 = b3p*t46378;
                double t46384 = b4p*t46380*t46379;
                double t46385 = b2p*c*t46375;
                double t46386 = t46382+t46383+t46384+t46385;
                double t46387 = 1/t46386;
                double t46388 = t46381*t46387*(1.0/2.0);
                double t46389 = t46388+1.0;
                double t46390 = log(t46389);
                double t46391 = a1p*c*t46375;
                double t46392 = t46391+1.0;
                double t46393 = pow(2.0,1.0/3.0);
                double t46394 = t46393*2.0;
                double t46395 = t46394-2.0;
                double t46396 = two_13*2.0;
                double t46397 = t46396-2.0;
                double t46398 = 1/t46397;
                double t46399 = 1/c0f;
                double t46400 = 1/pow(rho_b[index],1.0/3.0);
                double t46401 = c*t46400;
                double t46402 = sqrt(t46401);
                double t46403 = pow(t46401,3.0/2.0);
                double t46404 = 1/pow(rho_b[index],2.0/3.0);
                double t46405 = b1p*t46402;
                double t46406 = b3p*t46403;
                double t46407 = b4p*t46404*t46379;
                double t46408 = b2p*c*t46400;
                double t46409 = t46405+t46406+t46407+t46408;
                double t46410 = 1/t46409;
                double t46411 = t46410*t46381*(1.0/2.0);
                double t46412 = t46411+1.0;
                double t46413 = log(t46412);
                double t46414 = a1p*c*t46400;
                double t46415 = t46414+1.0;
                double t46416 = c0p*t46413*t46415*2.0;
                double t46417 = rho_a[index]+rho_b[index];
                double t46418 = 1/pow(t46417,1.0/3.0);
                double t46419 = c*t46418;
                double t46420 = sqrt(t46419);
                double t46421 = pow(t46419,3.0/2.0);
                double t46422 = 1/pow(t46417,2.0/3.0);
                double t46423 = b1p*t46420;
                double t46424 = b3p*t46421;
                double t46425 = b4p*t46422*t46379;
                double t46426 = b2p*c*t46418;
                double t46427 = t46423+t46424+t46425+t46426;
                double t46428 = 1/t46427;
                double t46429 = t46381*t46428*(1.0/2.0);
                double t46430 = t46429+1.0;
                double t46431 = log(t46430);
                double t46432 = a1p*c*t46418;
                double t46433 = t46432+1.0;
                double t46434 = c0p*t46431*t46433*2.0;
                double t46435 = rho_a[index]-rho_b[index];
                double t46436 = t46435*t46435;
                double t46437 = 1/t46417;
                double t46438 = t46435*t46437;
                double t46439 = 1/(t46417*t46417*t46417*t46417);
                double t46440 = t46436*t46436;
                double t46441 = t46438+1.0;
                double t46442 = pow(t46441,4.0/3.0);
                double t46443 = -t46438+1.0;
                double t46444 = pow(t46443,4.0/3.0);
                double t46445 = t46442+t46444-2.0;
                double t46446 = 1/pow(rho_b[index],8.0/3.0);
                double t46447 = 1/pow(rho_a[index],8.0/3.0);
                double t46448 = gamma_aa[index]*t46447*(1.0/2.0);
                double t46449 = gamma_bb[index]*t46446*(1.0/2.0);
                double t46450 = t46448+t46449;
                double t46451 = gcab*t46450;
                double t46452 = t46451+1.0;
                double t46453 = gcab*gcab;
                double t46454 = t46450*t46450;
                double t46455 = t46453*t46453;
                double t46456 = t46454*t46454;
                double t46457 = t46453*t46454;
                double t46458 = gcab*t46450*2.0;
                double t46459 = t46457+t46458+1.0;
                double t46460 = t46453*t46454*3.0;
                double t46461 = gcab*t46450*t46453*t46454;
                double t46462 = gcab*t46450*3.0;
                double t46463 = t46460+t46461+t46462+1.0;
                double t46464 = t46453*t46454*6.0;
                double t46465 = gcab*t46450*t46453*t46454*4.0;
                double t46466 = t46455*t46456;
                double t46467 = gcab*t46450*4.0;
                double t46468 = t46464+t46465+t46466+t46467+1.0;
                double t46469 = c0p*t46390*t46392*2.0;
                double t46470 = gamma_bb[index]*gamma_bb[index];
                double t46471 = gx*gx;
                double t46472 = t46471*t46471;
                double t46473 = 1/pow(rho_b[index],3.2E1/3.0);
                double t46474 = 1/pow(rho_b[index],1.6E1/3.0);
                double t46475 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t46476 = gamma_bb[index]*gx*t46446;
                double t46477 = t46476+1.0;
                double t46478 = gamma_bb[index]*gx*t46446*3.0;
                double t46479 = gamma_bb[index]*gx*t46470*t46471*t46475;
                double t46480 = t46470*t46471*t46474*3.0;
                double t46481 = t46480+t46478+t46479+1.0;
                double t46482 = t46470*t46470;
                double t46483 = gamma_bb[index]*gx*t46446*4.0;
                double t46484 = gamma_bb[index]*gx*t46470*t46471*t46475*4.0;
                double t46485 = t46470*t46471*t46474*6.0;
                double t46486 = t46472*t46473*t46482;
                double t46487 = t46483+t46484+t46485+t46486+1.0;
                double t46488 = gamma_bb[index]*gx*t46446*2.0;
                double t46489 = t46470*t46471*t46474;
                double t46490 = t46488+t46489+1.0;
                double t46491 = b1f*t46402;
                double t46492 = b3f*t46403;
                double t46493 = b4f*t46404*t46379;
                double t46494 = b2f*c*t46400;
                double t46495 = t46491+t46492+t46493+t46494;
                double t46496 = 1/t46495;
                double t46497 = t46496*t46399*(1.0/2.0);
                double t46498 = t46497+1.0;
                double t46499 = log(t46498);
                double t46500 = a1f*c*t46400;
                double t46501 = t46500+1.0;
                double t46502 = t46416-c0f*t46501*t46499*2.0;
                double t46503 = t46416-t46502*t46395*t46398;
                double t46504 = gcaa*gcaa;
                double t46505 = t46504*t46504;
                double t46506 = gamma_bb[index]*gcaa*t46446;
                double t46507 = t46506+1.0;
                double t46508 = gamma_bb[index]*gcaa*t46446*3.0;
                double t46509 = gamma_bb[index]*gcaa*t46504*t46470*t46475;
                double t46510 = t46504*t46470*t46474*3.0;
                double t46511 = t46510+t46508+t46509+1.0;
                double t46512 = gamma_bb[index]*gcaa*t46446*4.0;
                double t46513 = gamma_bb[index]*gcaa*t46504*t46470*t46475*4.0;
                double t46514 = t46504*t46470*t46474*6.0;
                double t46515 = t46505*t46473*t46482;
                double t46516 = t46512+t46513+t46514+t46515+1.0;
                double t46517 = gamma_bb[index]*gcaa*t46446*2.0;
                double t46518 = t46504*t46470*t46474;
                double t46519 = t46517+t46518+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t46503+rho_a[index]*(t46469-t46395*t46398*(t46469-c0f*log((t46399* \
                   (1.0/2.0))/(b1f*t46377+b3f*t46378+b2f*c*t46375+b4f*t46380*t46379)+1.0)*(a1f*c*t46375+1.0)*2.0))-t46417* \
                   (t46434-t46440*t46445*t46439*t46398*(t46434-c0f*log((t46399*(1.0/2.0))/(b1f*t46420+b3f*t46421+b2f* \
                   c*t46418+b4f*t46422*t46379)+1.0)*(a1f*c*t46418+1.0)*2.0)+(Aa*t46445*t46398*log((1.0/2.0)/(Aa*(b1a* \
                   t46420+b3a*t46421+b2a*c*t46418+b4a*t46422*t46379))+1.0)*(t46440*t46439-1.0)*(a1a*c*t46418+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t46446*(1.0/2.0))/t46452-ccab4*t46455*t46456*1/(t46468*t46468)*(gcab*t46446* \
                   2.0+t46450*t46453*t46446*6.0+gcab*t46453*t46454*t46446*6.0+t46450*t46454*t46446*t46455*2.0)-ccab2* \
                   t46453*t46454*1/(t46459*t46459)*(gcab*t46446+t46450*t46453*t46446)-ccab1*t46450*1/(t46452*t46452)* \
                   t46453*t46446*(1.0/2.0)+(ccab2*t46450*t46453*t46446)/t46459+(ccab3*gcab*t46453*t46454*t46446*(3.0/ \
                   2.0))/t46463+(ccab4*t46450*t46454*t46446*t46455*2.0)/t46468-ccab3*gcab*t46450*t46453*t46454*1/(t46463* \
                   t46463)*(gcab*t46446*(3.0/2.0)+t46450*t46453*t46446*3.0+gcab*t46453*t46454*t46446*(3.0/2.0)))-rho_b[index]* \
                   t46503*((ccaa1*gcaa*t46446)/t46507-ccaa1*gamma_bb[index]*t46504*1/(t46507*t46507)*t46474+(ccaa2*gamma_bb[index]* \
                   t46504*t46474*2.0)/t46519-ccaa2*t46504*t46470*t46474*1/(t46519*t46519)*(gcaa*t46446*2.0+gamma_bb[index]* \
                   t46504*t46474*2.0)+(ccaa4*gamma_bb[index]*t46505*t46470*t46473*4.0)/t46516+(ccaa3*gcaa*t46504*t46470* \
                   t46475*3.0)/t46511-ccaa4*t46505*1/(t46516*t46516)*t46473*t46482*(gcaa*t46446*4.0+gamma_bb[index]*t46504* \
                   t46474*1.2E1+gamma_bb[index]*t46505*t46470*t46473*4.0+gcaa*t46504*t46470*t46475*1.2E1)-ccaa3*gamma_bb[index]* \
                   gcaa*1/(t46511*t46511)*t46504*t46470*t46475*(gcaa*t46446*3.0+gamma_bb[index]*t46504*t46474*6.0+gcaa* \
                   t46504*t46470*t46475*3.0))+c0*pow(rho_b[index],4.0/3.0)*((cx1*gx*t46446)/t46477-cx1*gamma_bb[index]* \
                   t46471*t46474*1/(t46477*t46477)+(cx2*gamma_bb[index]*t46471*t46474*2.0)/t46490-cx2*t46470*t46471*1/ \
                   (t46490*t46490)*t46474*(gx*t46446*2.0+gamma_bb[index]*t46471*t46474*2.0)+(cx4*gamma_bb[index]*t46470* \
                   t46472*t46473*4.0)/t46487+(cx3*gx*t46470*t46471*t46475*3.0)/t46481-cx4*t46472*t46473*t46482*1/(t46487* \
                   t46487)*(gx*t46446*4.0+gamma_bb[index]*t46471*t46474*1.2E1+gamma_bb[index]*t46470*t46472*t46473*4.0+ \
                   gx*t46470*t46471*t46475*1.2E1)-cx3*gamma_bb[index]*gx*t46470*t46471*1/(t46481*t46481)*t46475*(gx*t46446* \
                   3.0+gamma_bb[index]*t46471*t46474*6.0+gx*t46470*t46471*t46475*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t49274 = 1/pow(rho_b[index],8.0/3.0);
                double t49275 = gamma_bb[index]*gamma_bb[index];
                double t49276 = gx*gx;
                double t49277 = t49276*t49276;
                double t49278 = 1/pow(rho_b[index],3.2E1/3.0);
                double t49279 = 1/pow(rho_b[index],1.6E1/3.0);
                double t49280 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49281 = gamma_bb[index]*gx*t49274;
                double t49282 = t49281+1.0;
                double t49283 = gamma_bb[index]*gx*t49274*3.0;
                double t49284 = gamma_bb[index]*gx*t49280*t49275*t49276;
                double t49285 = t49275*t49276*t49279*3.0;
                double t49286 = t49283+t49284+t49285+1.0;
                double t49287 = t49275*t49275;
                double t49288 = gamma_bb[index]*gx*t49274*4.0;
                double t49289 = gamma_bb[index]*gx*t49280*t49275*t49276*4.0;
                double t49290 = t49275*t49276*t49279*6.0;
                double t49291 = t49277*t49278*t49287;
                double t49292 = t49290+t49291+t49288+t49289+1.0;
                double t49293 = gamma_bb[index]*gx*t49274*2.0;
                double t49294 = t49275*t49276*t49279;
                double t49295 = t49293+t49294+1.0;
                double t49296 = 1/pow(rho_b[index],1.0/3.0);
                double t49297 = c*t49296;
                double t49298 = sqrt(t49297);
                double t49299 = pow(t49297,3.0/2.0);
                double t49300 = c*c;
                double t49301 = 1/pow(rho_b[index],2.0/3.0);
                double t49302 = 1/c0p;
                double t49303 = b1p*t49298;
                double t49304 = b3p*t49299;
                double t49305 = b4p*t49300*t49301;
                double t49306 = b2p*c*t49296;
                double t49307 = t49303+t49304+t49305+t49306;
                double t49308 = 1/t49307;
                double t49309 = t49302*t49308*(1.0/2.0);
                double t49310 = t49309+1.0;
                double t49311 = log(t49310);
                double t49312 = a1p*c*t49296;
                double t49313 = t49312+1.0;
                double t49314 = gcaa*gcaa;
                double t49315 = t49314*t49314;
                double t49316 = gamma_bb[index]*gcaa*t49274;
                double t49317 = t49316+1.0;
                double t49318 = gamma_bb[index]*gcaa*t49274*3.0;
                double t49319 = gamma_bb[index]*gcaa*t49314*t49280*t49275;
                double t49320 = t49314*t49275*t49279*3.0;
                double t49321 = t49320+t49318+t49319+1.0;
                double t49322 = gamma_bb[index]*gcaa*t49274*4.0;
                double t49323 = gamma_bb[index]*gcaa*t49314*t49280*t49275*4.0;
                double t49324 = t49314*t49275*t49279*6.0;
                double t49325 = t49315*t49278*t49287;
                double t49326 = t49322+t49323+t49324+t49325+1.0;
                double t49327 = gamma_bb[index]*gcaa*t49274*2.0;
                double t49328 = t49314*t49275*t49279;
                double t49329 = t49327+t49328+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t49298+ \
                   b3f*t49299+b2f*c*t49296+b4f*t49300*t49301))+1.0)*(a1f*c*t49296+1.0)*2.0-c0p*t49311*t49313*2.0))/(two_13* \
                   2.0-2.0)+c0p*t49311*t49313*2.0)*((ccaa1*gcaa*t49274)/t49317-ccaa1*gamma_bb[index]*t49314*1/(t49317* \
                   t49317)*t49279+(ccaa2*gamma_bb[index]*t49314*t49279*2.0)/t49329-ccaa2*t49314*t49275*1/(t49329*t49329) \
                   *t49279*(gcaa*t49274*2.0+gamma_bb[index]*t49314*t49279*2.0)+(ccaa4*gamma_bb[index]*t49315*t49275*t49278* \
                   4.0)/t49326+(ccaa3*gcaa*t49314*t49280*t49275*3.0)/t49321-ccaa4*t49315*1/(t49326*t49326)*t49278*t49287* \
                   (gcaa*t49274*4.0+gamma_bb[index]*t49314*t49279*1.2E1+gamma_bb[index]*t49315*t49275*t49278*4.0+gcaa* \
                   t49314*t49280*t49275*1.2E1)-ccaa3*gamma_bb[index]*gcaa*1/(t49321*t49321)*t49314*t49280*t49275*(gcaa* \
                   t49274*3.0+gamma_bb[index]*t49314*t49279*6.0+gcaa*t49314*t49280*t49275*3.0))+c0*pow(rho_b[index],4.0/ \
                   3.0)*((cx1*gx*t49274)/t49282-cx1*gamma_bb[index]*1/(t49282*t49282)*t49276*t49279+(cx2*gamma_bb[index]* \
                   t49276*t49279*2.0)/t49295-cx2*t49275*t49276*1/(t49295*t49295)*t49279*(gx*t49274*2.0+gamma_bb[index]* \
                   t49276*t49279*2.0)+(cx4*gamma_bb[index]*t49275*t49277*t49278*4.0)/t49292+(cx3*gx*t49280*t49275*t49276* \
                   3.0)/t49286-cx4*1/(t49292*t49292)*t49277*t49278*t49287*(gx*t49274*4.0+gamma_bb[index]*t49276*t49279* \
                   1.2E1+gamma_bb[index]*t49275*t49277*t49278*4.0+gx*t49280*t49275*t49276*1.2E1)-cx3*gamma_bb[index]* \
                   gx*t49280*t49275*t49276*1/(t49286*t49286)*(gx*t49274*3.0+gamma_bb[index]*t49276*t49279*6.0+gx*t49280* \
                   t49275*t49276*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t46523 = rho_a[index]+rho_b[index];
            double t46524 = 1/pow(t46523,1.0/3.0);
            double t46525 = c*t46524;
            double t46526 = sqrt(t46525);
            double t46527 = b1p*t46526;
            double t46528 = pow(t46525,3.0/2.0);
            double t46529 = b3p*t46528;
            double t46530 = c*c;
            double t46531 = 1/pow(t46523,2.0/3.0);
            double t46532 = b4p*t46530*t46531;
            double t46533 = b2p*c*t46524;
            double t46534 = t46532+t46533+t46527+t46529;
            double t46535 = 1/pow(t46523,4.0/3.0);
            double t46536 = 1/c0p;
            double t46537 = 1/t46534;
            double t46538 = t46536*t46537*(1.0/2.0);
            double t46539 = t46538+1.0;
            double t46540 = a1p*c*t46524;
            double t46541 = t46540+1.0;
            double t46542 = rho_a[index]-rho_b[index];
            double t46543 = t46542*t46542;
            double t46544 = 1/t46523;
            double t46545 = t46542*t46544;
            double t46546 = two_13*2.0;
            double t46547 = t46546-2.0;
            double t46548 = 1/t46547;
            double t46549 = 1/c0f;
            double t46550 = b1f*t46526;
            double t46551 = b3f*t46528;
            double t46552 = b4f*t46530*t46531;
            double t46553 = b2f*c*t46524;
            double t46554 = t46550+t46551+t46552+t46553;
            double t46555 = 1/t46554;
            double t46556 = t46555*t46549*(1.0/2.0);
            double t46557 = t46556+1.0;
            double t46558 = log(t46557);
            double t46559 = a1f*c*t46524;
            double t46560 = t46559+1.0;
            double t46561 = log(t46539);
            double t46571 = c0f*t46560*t46558*2.0;
            double t46572 = c0p*t46541*t46561*2.0;
            double t46562 = t46571-t46572;
            double t46563 = t46545+1.0;
            double t46564 = pow(t46563,4.0/3.0);
            double t46565 = -t46545+1.0;
            double t46566 = pow(t46565,4.0/3.0);
            double t46567 = t46564+t46566-2.0;
            double t46568 = 1/(t46523*t46523);
            double t46599 = t46542*t46568;
            double t46569 = t46544-t46599;
            double t46570 = 1/(t46523*t46523*t46523*t46523);
            double t46573 = t46543*t46543;
            double t46574 = 1/pow(t46523,5.0/3.0);
            double t46575 = 1/sqrt(t46525);
            double t46576 = 1/t46539;
            double t46577 = 1/(t46534*t46534);
            double t46578 = b4p*t46530*t46574*(2.0/3.0);
            double t46579 = b2p*c*t46535*(1.0/3.0);
            double t46580 = b1p*c*t46535*t46575*(1.0/6.0);
            double t46581 = b3p*c*t46526*t46535*(1.0/2.0);
            double t46582 = t46580+t46581+t46578+t46579;
            double t46583 = t46541*t46582*t46576*t46577;
            double t46584 = 1/(t46523*t46523*t46523*t46523*t46523);
            double t46585 = 1/d2fz0;
            double t46586 = 1/Aa;
            double t46587 = b1a*t46526;
            double t46588 = b3a*t46528;
            double t46589 = b4a*t46530*t46531;
            double t46590 = b2a*c*t46524;
            double t46591 = t46590+t46587+t46588+t46589;
            double t46592 = 1/t46591;
            double t46593 = t46592*t46586*(1.0/2.0);
            double t46594 = t46593+1.0;
            double t46595 = log(t46594);
            double t46596 = a1a*c*t46524;
            double t46597 = t46596+1.0;
            double t46598 = pow(t46563,1.0/3.0);
            double t46600 = t46569*t46598*(4.0/3.0);
            double t46601 = pow(t46565,1.0/3.0);
            double t46676 = t46601*t46569*(4.0/3.0);
            double t46602 = t46600-t46676;
            double t46603 = t46570*t46573;
            double t46604 = t46603-1.0;
            double t46605 = 1/pow(rho_a[index],1.0/3.0);
            double t46606 = c*t46605;
            double t46607 = sqrt(t46606);
            double t46608 = b1f*t46607;
            double t46609 = pow(t46606,3.0/2.0);
            double t46610 = b3f*t46609;
            double t46611 = 1/pow(rho_a[index],2.0/3.0);
            double t46612 = b4f*t46530*t46611;
            double t46613 = b2f*c*t46605;
            double t46614 = t46610+t46612+t46613+t46608;
            double t46615 = 1/pow(rho_a[index],4.0/3.0);
            double t46616 = b1p*t46607;
            double t46617 = b3p*t46609;
            double t46618 = b4p*t46530*t46611;
            double t46619 = b2p*c*t46605;
            double t46620 = t46616+t46617+t46618+t46619;
            double t46621 = 1/pow(rho_a[index],5.0/3.0);
            double t46622 = 1/sqrt(t46606);
            double t46623 = 1/t46614;
            double t46624 = t46623*t46549*(1.0/2.0);
            double t46625 = t46624+1.0;
            double t46626 = 1/t46620;
            double t46627 = t46536*t46626*(1.0/2.0);
            double t46628 = t46627+1.0;
            double t46629 = a1p*c*t46605;
            double t46630 = t46629+1.0;
            double t46631 = 1/t46628;
            double t46632 = 1/(t46620*t46620);
            double t46633 = b4p*t46530*t46621*(2.0/3.0);
            double t46634 = b2p*c*t46615*(1.0/3.0);
            double t46635 = b1p*c*t46622*t46615*(1.0/6.0);
            double t46636 = b3p*c*t46615*t46607*(1.0/2.0);
            double t46637 = t46633+t46634+t46635+t46636;
            double t46638 = t46630*t46631*t46632*t46637;
            double t46639 = log(t46628);
            double t46640 = pow(2.0,1.0/3.0);
            double t46641 = t46640*2.0;
            double t46642 = t46641-2.0;
            double t46643 = log(t46625);
            double t46644 = a1f*c*t46605;
            double t46645 = t46644+1.0;
            double t46646 = gcab*gcab;
            double t46650 = 1/pow(rho_a[index],8.0/3.0);
            double t46651 = gamma_aa[index]*t46650*(1.0/2.0);
            double t46652 = 1/pow(rho_b[index],8.0/3.0);
            double t46653 = gamma_bb[index]*t46652*(1.0/2.0);
            double t46647 = t46651+t46653;
            double t46648 = t46647*t46647;
            double t46649 = 1/pow(rho_a[index],1.1E1/3.0);
            double t46654 = t46646*t46646;
            double t46655 = t46648*t46648;
            double t46656 = t46646*t46648*6.0;
            double t46657 = gcab*t46646*t46647*t46648*4.0;
            double t46658 = t46654*t46655;
            double t46659 = gcab*t46647*4.0;
            double t46660 = t46656+t46657+t46658+t46659+1.0;
            double t46661 = gcab*t46647;
            double t46662 = t46661+1.0;
            double t46663 = t46646*t46648;
            double t46664 = gcab*t46647*2.0;
            double t46665 = t46663+t46664+1.0;
            double t46666 = t46646*t46648*3.0;
            double t46667 = gcab*t46646*t46647*t46648;
            double t46668 = gcab*t46647*3.0;
            double t46669 = t46666+t46667+t46668+1.0;
            double t46670 = 1/t46665;
            double t46671 = 1/t46669;
            double t46672 = 1/t46662;
            double t46673 = 1/t46660;
            double t46674 = 1/pow(t46523,7.0/3.0);
            double t46675 = 1/pow(t46523,8.0/3.0);
            double t46677 = 1/t46557;
            double t46678 = 1/(t46554*t46554);
            double t46679 = b4f*t46530*t46574*(2.0/3.0);
            double t46680 = b2f*c*t46535*(1.0/3.0);
            double t46681 = b1f*c*t46535*t46575*(1.0/6.0);
            double t46682 = b3f*c*t46526*t46535*(1.0/2.0);
            double t46683 = t46680+t46681+t46682+t46679;
            double t46684 = a1f*c*c0f*t46535*t46558*(2.0/3.0);
            double t46686 = t46560*t46683*t46677*t46678;
            double t46687 = a1p*c*c0p*t46561*t46535*(2.0/3.0);
            double t46685 = t46583+t46684-t46686-t46687;
            double t46688 = t46582*t46582;
            double t46689 = 1/pow(t46525,3.0/2.0);
            double t46690 = b4p*t46530*t46675*(1.0E1/9.0);
            double t46691 = b2p*c*t46674*(4.0/9.0);
            double t46692 = b1p*c*t46575*t46674*(2.0/9.0);
            double t46693 = b3p*c*t46526*t46674*(2.0/3.0);
            double t46694 = b3p*t46530*t46575*t46675*(1.0/1.2E1);
            double t46695 = t46690+t46691+t46692+t46693+t46694-b1p*t46530*t46675*t46689*(1.0/3.6E1);
            double t46696 = 1/(t46534*t46534*t46534);
            double t46697 = t46541*t46576*t46696*t46688*2.0;
            double t46698 = t46683*t46683;
            double t46699 = 1/(t46539*t46539);
            double t46700 = 1/(t46534*t46534*t46534*t46534);
            double t46701 = t46568*2.0;
            double t46702 = 1/(t46523*t46523*t46523);
            double t46709 = t46702*t46542*2.0;
            double t46703 = t46701-t46709;
            double t46704 = t46569*t46569;
            double t46705 = a1p*c*c0p*t46561*t46674*(8.0/9.0);
            double t46706 = 1/(t46523*t46523*t46523*t46523*t46523*t46523);
            double t46707 = t46573*t46584*4.0;
            double t46717 = t46542*t46543*t46570*4.0;
            double t46708 = t46707-t46717;
            double t46710 = t46601*t46703*(4.0/3.0);
            double t46711 = 1/pow(t46563,2.0/3.0);
            double t46712 = t46711*t46704*(4.0/9.0);
            double t46713 = 1/pow(t46565,2.0/3.0);
            double t46714 = t46704*t46713*(4.0/9.0);
            double t46715 = t46710+t46712+t46714-t46703*t46598*(4.0/3.0);
            double t46716 = 1/t46594;
            double t46718 = 1/(t46591*t46591);
            double t46719 = b4a*t46530*t46574*(2.0/3.0);
            double t46720 = b2a*c*t46535*(1.0/3.0);
            double t46721 = b1a*c*t46535*t46575*(1.0/6.0);
            double t46722 = b3a*c*t46526*t46535*(1.0/2.0);
            double t46723 = t46720+t46721+t46722+t46719;
            double t46724 = t46723*t46723;
            double t46725 = t46541*t46576*t46577*t46695;
            double t46726 = 1/t46625;
            double t46727 = b4f*t46530*t46621*(2.0/3.0);
            double t46728 = b2f*c*t46615*(1.0/3.0);
            double t46729 = b1f*c*t46622*t46615*(1.0/6.0);
            double t46730 = b3f*c*t46615*t46607*(1.0/2.0);
            double t46731 = t46730+t46727+t46728+t46729;
            double t46732 = 1/(t46614*t46614);
            double t46733 = 1/pow(rho_a[index],7.0/3.0);
            double t46734 = 1/pow(t46606,3.0/2.0);
            double t46735 = t46731*t46731;
            double t46736 = t46637*t46637;
            double t46737 = 1/(t46620*t46620*t46620);
            double t46738 = t46630*t46631*t46736*t46737*2.0;
            double t46739 = b4p*t46530*t46650*(1.0E1/9.0);
            double t46740 = b2p*c*t46733*(4.0/9.0);
            double t46741 = b3p*t46530*t46622*t46650*(1.0/1.2E1);
            double t46742 = b1p*c*t46622*t46733*(2.0/9.0);
            double t46743 = b3p*c*t46607*t46733*(2.0/3.0);
            double t46895 = b1p*t46530*t46650*t46734*(1.0/3.6E1);
            double t46744 = t46740+t46741+t46742+t46743+t46739-t46895;
            double t46745 = 1/(t46628*t46628);
            double t46746 = 1/(t46620*t46620*t46620*t46620);
            double t46747 = a1p*c*c0p*t46733*t46639*(8.0/9.0);
            double t46748 = a1f*c*c0f*t46615*t46643*(2.0/3.0);
            double t46749 = a1p*c*c0p*t46615*t46639*(2.0/3.0);
            double t46750 = t46700*t46541*t46536*t46688*t46699*(1.0/2.0);
            double t46822 = t46731*t46732*t46645*t46726;
            double t46751 = -t46822+t46638+t46748-t46749;
            double t46752 = gamma_aa[index]*gamma_aa[index];
            double t46753 = gcaa*gcaa;
            double t46754 = t46752*t46752;
            double t46755 = t46753*t46753;
            double t46756 = 1/pow(rho_a[index],3.2E1/3.0);
            double t46757 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t46758 = 1/pow(rho_a[index],1.6E1/3.0);
            double t46759 = c0f*t46643*t46645*2.0;
            double t46761 = c0p*t46630*t46639*2.0;
            double t46760 = -t46761+t46759;
            double t46762 = 1/pow(rho_b[index],1.0/3.0);
            double t46763 = c*t46762;
            double t46764 = sqrt(t46763);
            double t46765 = pow(t46763,3.0/2.0);
            double t46766 = 1/pow(rho_b[index],2.0/3.0);
            double t46767 = b1p*t46764;
            double t46768 = b3p*t46765;
            double t46769 = b4p*t46530*t46766;
            double t46770 = b2p*c*t46762;
            double t46771 = t46770+t46767+t46768+t46769;
            double t46772 = 1/t46771;
            double t46773 = t46536*t46772*(1.0/2.0);
            double t46774 = t46773+1.0;
            double t46775 = log(t46774);
            double t46776 = a1p*c*t46762;
            double t46777 = t46776+1.0;
            double t46778 = c0p*t46775*t46777*2.0;
            double t46779 = t46570*t46562*t46573*t46548*t46567;
            double t46780 = Aa*t46604*t46548*t46567*t46585*t46595*t46597*2.0;
            double t46781 = gamma_aa[index]*gcab*t46649*(1.6E1/3.0);
            double t46782 = gamma_aa[index]*gcab*t46646*t46648*t46649*1.6E1;
            double t46783 = gamma_aa[index]*t46654*t46647*t46648*t46649*(1.6E1/3.0);
            double t46784 = gamma_aa[index]*t46646*t46647*t46649*1.6E1;
            double t46785 = t46781+t46782+t46783+t46784;
            double t46786 = 1/(t46662*t46662);
            double t46787 = 1/pow(rho_a[index],2.2E1/3.0);
            double t46788 = gamma_aa[index]*gcab*t46649*(8.0/3.0);
            double t46789 = gamma_aa[index]*t46646*t46647*t46649*(8.0/3.0);
            double t46790 = t46788+t46789;
            double t46791 = 1/(t46669*t46669);
            double t46792 = 1/pow(rho_a[index],1.4E1/3.0);
            double t46793 = 1/(t46660*t46660);
            double t46794 = 1/(t46665*t46665);
            double t46795 = gamma_aa[index]*gcab*t46649*4.0;
            double t46796 = gamma_aa[index]*gcab*t46646*t46648*t46649*4.0;
            double t46797 = gamma_aa[index]*t46646*t46647*t46649*8.0;
            double t46798 = t46795+t46796+t46797;
            double t46799 = t46642*t46760*t46548;
            double t46800 = t46761+t46799;
            double t46801 = gamma_aa[index]*gcaa*t46650*4.0;
            double t46802 = gamma_aa[index]*gcaa*t46752*t46753*t46757*4.0;
            double t46803 = t46752*t46753*t46758*6.0;
            double t46804 = t46754*t46755*t46756;
            double t46805 = t46801+t46802+t46803+t46804+1.0;
            double t46806 = 1/t46805;
            double t46807 = gamma_aa[index]*gcaa*t46650;
            double t46808 = t46807+1.0;
            double t46809 = 1/t46808;
            double t46810 = gamma_aa[index]*gcaa*t46650*3.0;
            double t46811 = gamma_aa[index]*gcaa*t46752*t46753*t46757;
            double t46812 = t46752*t46753*t46758*3.0;
            double t46813 = t46810+t46811+t46812+1.0;
            double t46814 = 1/t46813;
            double t46815 = gamma_aa[index]*gcaa*t46650*2.0;
            double t46816 = t46752*t46753*t46758;
            double t46817 = t46815+t46816+1.0;
            double t46818 = 1/t46817;
            double t46819 = 1/pow(rho_a[index],1.9E1/3.0);
            double t46820 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t46821 = 1/pow(rho_a[index],3.5E1/3.0);
            double t46823 = ccaa4*t46821*t46806*t46754*t46755*(3.2E1/3.0);
            double t46824 = ccaa1*gamma_aa[index]*gcaa*t46809*t46649*(8.0/3.0);
            double t46825 = ccaa3*gamma_aa[index]*gcaa*t46820*t46814*t46752*t46753*8.0;
            double t46826 = ccaa2*t46752*t46753*t46818*t46819*(1.6E1/3.0);
            double t46827 = 1/(t46808*t46808);
            double t46828 = gamma_aa[index]*gcaa*t46649*8.0;
            double t46829 = gamma_aa[index]*gcaa*t46820*t46752*t46753*8.0;
            double t46830 = t46752*t46753*t46819*1.6E1;
            double t46831 = t46830+t46828+t46829;
            double t46832 = 1/(t46813*t46813);
            double t46833 = gamma_aa[index]*gcaa*t46649*(3.2E1/3.0);
            double t46834 = gamma_aa[index]*gcaa*t46820*t46752*t46753*3.2E1;
            double t46835 = t46752*t46753*t46819*3.2E1;
            double t46836 = t46821*t46754*t46755*(3.2E1/3.0);
            double t46837 = t46833+t46834+t46835+t46836;
            double t46838 = 1/(t46805*t46805);
            double t46839 = gamma_aa[index]*gcaa*t46649*(1.6E1/3.0);
            double t46840 = t46752*t46753*t46819*(1.6E1/3.0);
            double t46841 = t46840+t46839;
            double t46842 = 1/(t46817*t46817);
            double t46843 = t46823+t46824+t46825+t46826-ccaa1*t46752*t46753*t46827*t46819*(8.0/3.0)-ccaa2*t46841* \
               t46752*t46842*t46753*t46758-ccaa4*t46754*t46755*t46756*t46837*t46838-ccaa3*gamma_aa[index]*gcaa*t46831* \
               t46832*t46752*t46753*t46757;
            double t46844 = gx*gx;
            double t46845 = t46844*t46844;
            double t46846 = 1/pow(rho_a[index],1.0E1);
            double t46847 = gamma_aa[index]*gx*t46650;
            double t46848 = t46847+1.0;
            double t46868 = gamma_aa[index]*gx*t46649*(3.2E1/3.0);
            double t46869 = gamma_aa[index]*gx*t46820*t46752*t46844*3.2E1;
            double t46870 = t46752*t46844*t46819*3.2E1;
            double t46871 = t46821*t46754*t46845*(3.2E1/3.0);
            double t46849 = t46870+t46871+t46868+t46869;
            double t46850 = gamma_aa[index]*gx*t46650*4.0;
            double t46851 = gamma_aa[index]*gx*t46752*t46844*t46757*4.0;
            double t46852 = t46752*t46844*t46758*6.0;
            double t46853 = t46754*t46845*t46756;
            double t46854 = t46850+t46851+t46852+t46853+1.0;
            double t46874 = gamma_aa[index]*gx*t46649*(1.6E1/3.0);
            double t46875 = t46752*t46844*t46819*(1.6E1/3.0);
            double t46855 = t46874+t46875;
            double t46856 = gamma_aa[index]*gx*t46650*2.0;
            double t46857 = t46752*t46844*t46758;
            double t46858 = t46856+t46857+1.0;
            double t46859 = gamma_aa[index]*gx*t46650*3.0;
            double t46860 = gamma_aa[index]*gx*t46752*t46844*t46757;
            double t46861 = t46752*t46844*t46758*3.0;
            double t46862 = t46860+t46861+t46859+1.0;
            double t46863 = 1/(t46862*t46862);
            double t46864 = gamma_aa[index]*gx*t46649*8.0;
            double t46865 = gamma_aa[index]*gx*t46820*t46752*t46844*8.0;
            double t46866 = t46752*t46844*t46819*1.6E1;
            double t46867 = t46864+t46865+t46866;
            double t46872 = 1/pow(rho_a[index],3.8E1/3.0);
            double t46873 = 1/(t46854*t46854);
            double t46876 = 1/(t46858*t46858);
            double t46877 = 1/t46854;
            double t46878 = 1/t46848;
            double t46879 = 1/t46862;
            double t46880 = 1/t46858;
            double t46881 = 1/(t46848*t46848);
            double t46882 = ccaa4*t46806*t46754*t46755*t46756;
            double t46883 = ccaa1*gamma_aa[index]*gcaa*t46650*t46809;
            double t46884 = ccaa3*gamma_aa[index]*gcaa*t46814*t46752*t46753*t46757;
            double t46885 = ccaa2*t46752*t46753*t46818*t46758;
            double t46886 = ccaa0+t46882+t46883+t46884+t46885;
            double t46887 = 1/(t46614*t46614*t46614);
            double t46888 = b4f*t46530*t46650*(1.0E1/9.0);
            double t46889 = b2f*c*t46733*(4.0/9.0);
            double t46890 = b3f*t46530*t46622*t46650*(1.0/1.2E1);
            double t46891 = b1f*c*t46622*t46733*(2.0/9.0);
            double t46892 = b3f*c*t46607*t46733*(2.0/3.0);
            double t46893 = t46890+t46891+t46892+t46888+t46889-b1f*t46530*t46650*t46734*(1.0/3.6E1);
            double t46894 = t46732*t46645*t46726*t46893;
            double t46896 = t46630*t46631*t46632*t46744;
            double t46897 = 1/(t46625*t46625);
            double t46898 = 1/(t46614*t46614*t46614*t46614);
            double t46899 = t46645*t46735*t46549*t46897*t46898*(1.0/2.0);
            double t46900 = t46630*t46536*t46736*t46745*t46746*(1.0/2.0);
            double t46901 = a1f*c*t46731*t46615*t46732*t46726*(2.0/3.0);
            double t46902 = a1p*c*t46631*t46632*t46615*t46637*(2.0/3.0);
            v_rho_a_rho_a_[index] = (rho_a[index]*t46800+rho_b[index]*(t46778-t46642*t46548*(t46778-c0f*log((t46549* \
               (1.0/2.0))/(b1f*t46764+b3f*t46765+b2f*c*t46762+b4f*t46530*t46766)+1.0)*(a1f*c*t46762+1.0)*2.0))-t46523* \
               (t46572+t46780+t46779))*(-ccab2*t46646*t46648*t46794*(gamma_aa[index]*gcab*t46792*(8.8E1/9.0)+t46752* \
               t46646*t46787*(3.2E1/9.0)+gamma_aa[index]*t46646*t46647*t46792*(8.8E1/9.0))+ccab4*1/(t46660*t46660* \
               t46660)*t46654*t46655*(t46785*t46785)*2.0+ccab2*t46646*(t46790*t46790)*1/(t46665*t46665*t46665)*t46648* \
               2.0+ccab1*gamma_aa[index]*gcab*t46672*t46792*(4.4E1/9.0)+ccab2*t46670*t46752*t46646*t46787*(3.2E1/ \
               9.0)-ccab1*t46752*t46646*t46786*t46787*(3.2E1/9.0)-ccab4*t46654*t46655*t46793*(gamma_aa[index]*gcab* \
               t46792*(1.76E2/9.0)+t46752*t46646*t46787*(6.4E1/3.0)+gamma_aa[index]*t46646*t46647*t46792*(1.76E2/ \
               3.0)+t46752*t46654*t46648*t46787*(6.4E1/3.0)+gamma_aa[index]*gcab*t46646*t46648*t46792*(1.76E2/3.0) \
               +gamma_aa[index]*t46654*t46647*t46648*t46792*(1.76E2/9.0)+gcab*t46752*t46646*t46647*t46787*(1.28E2/ \
               3.0))+ccab4*t46752*t46654*t46673*t46648*t46787*(6.4E1/3.0)+ccab2*gamma_aa[index]*t46670*t46646*t46647* \
               t46792*(8.8E1/9.0)-ccab1*gamma_aa[index]*t46646*t46647*t46792*t46786*(4.4E1/9.0)+ccab3*gcab*t46646* \
               t46647*t46648*1/(t46669*t46669*t46669)*(t46798*t46798)*2.0+ccab3*gamma_aa[index]*gcab*t46671*t46646* \
               t46648*t46792*(4.4E1/3.0)+ccab4*gamma_aa[index]*t46654*t46673*t46647*t46648*t46792*(1.76E2/9.0)-ccab2* \
               gamma_aa[index]*t46646*t46790*t46647*t46649*t46794*(1.6E1/3.0)+ccab3*gcab*t46671*t46752*t46646*t46647* \
               t46787*(3.2E1/3.0)+ccab1*gcab*1/(t46662*t46662*t46662)*t46752*t46646*t46647*t46787*(3.2E1/9.0)-ccab3* \
               gcab*t46646*t46647*t46791*t46648*(gamma_aa[index]*gcab*t46792*(4.4E1/3.0)+t46752*t46646*t46787*(3.2E1/ \
               3.0)+gamma_aa[index]*t46646*t46647*t46792*(8.8E1/3.0)+gamma_aa[index]*gcab*t46646*t46648*t46792*(4.4E1/ \
               3.0)+gcab*t46752*t46646*t46647*t46787*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t46646*t46791*t46648* \
               t46649*t46798*8.0-ccab4*gamma_aa[index]*t46654*t46647*t46648*t46649*t46793*t46785*(3.2E1/3.0))+t46886* \
               (-t46638+t46749+t46642*t46751*t46548)*2.0+t46800*t46843*2.0+(t46572+t46780+t46779+rho_a[index]*(-t46638+ \
               t46749+t46642*t46548*(t46638+t46748-t46731*t46732*t46645*t46726-a1p*c*c0p*t46615*t46639*(2.0/3.0)) \
               )+t46523*(t46583-a1p*c*c0p*t46561*t46535*(2.0/3.0)+t46602*t46570*t46562*t46573*t46548-t46562*t46573* \
               t46548*t46584*t46567*4.0-t46570*t46573*t46548*t46567*t46685+t46542*t46543*t46570*t46562*t46548*t46567* \
               4.0+Aa*t46602*t46604*t46548*t46585*t46595*t46597*2.0-Aa*t46708*t46548*t46567*t46585*t46595*t46597* \
               2.0+t46604*t46723*t46716*t46718*t46548*t46567*t46585*t46597-Aa*a1a*c*t46604*t46535*t46548*t46567*t46585* \
               t46595*(2.0/3.0))-c0p*t46630*t46639*2.0-t46642*t46760*t46548)*(ccab1*gamma_aa[index]*gcab*t46672*t46649* \
               (4.0/3.0)-ccab2*t46646*t46790*t46648*t46794-ccab4*t46654*t46655*t46793*t46785+ccab2*gamma_aa[index]* \
               t46670*t46646*t46647*t46649*(8.0/3.0)-ccab1*gamma_aa[index]*t46646*t46647*t46649*t46786*(4.0/3.0)+ \
               ccab3*gamma_aa[index]*gcab*t46671*t46646*t46648*t46649*4.0+ccab4*gamma_aa[index]*t46654*t46673*t46647* \
               t46648*t46649*(1.6E1/3.0)-ccab3*gcab*t46646*t46647*t46791*t46648*t46798)*2.0-(ccab0+ccab1*gcab*t46672* \
               t46647+ccab2*t46670*t46646*t46648+ccab4*t46654*t46655*t46673+ccab3*gcab*t46671*t46646*t46647*t46648) \
               *(-t46523*(-t46705+t46750+t46725-t46697+t46570*t46573*t46548*t46567*(t46705-t46750-t46725+t46697-t46560* \
               1/(t46554*t46554*t46554)*t46677*t46698*2.0+t46560*t46677*t46678*(b2f*c*t46674*(4.0/9.0)+b4f*t46530* \
               t46675*(1.0E1/9.0)+b1f*c*t46575*t46674*(2.0/9.0)+b3f*c*t46526*t46674*(2.0/3.0)-b1f*t46530*t46675*t46689* \
               (1.0/3.6E1)+b3f*t46530*t46575*t46675*(1.0/1.2E1))+t46560*1/(t46554*t46554*t46554*t46554)*1/(t46557* \
               t46557)*t46549*t46698*(1.0/2.0)-a1f*c*c0f*t46674*t46558*(8.0/9.0)+a1f*c*t46535*t46683*t46677*t46678* \
               (2.0/3.0)-a1p*c*t46535*t46582*t46576*t46577*(2.0/3.0))+t46602*t46562*t46573*t46548*t46584*8.0-t46570* \
               t46562*t46715*t46573*t46548+t46602*t46570*t46573*t46548*t46685*2.0-t46543*t46570*t46562*t46548*t46567* \
               1.2E1-t46562*t46706*t46573*t46548*t46567*2.0E1-t46573*t46548*t46584*t46567*t46685*8.0-t46602*t46542* \
               t46543*t46570*t46562*t46548*8.0+t46542*t46543*t46562*t46548*t46584*t46567*3.2E1+t46542*t46543*t46570* \
               t46548*t46567*t46685*8.0+a1p*c*t46535*t46582*t46576*t46577*(2.0/3.0)+Aa*t46602*t46708*t46548*t46585* \
               t46595*t46597*4.0-Aa*t46604*t46715*t46548*t46585*t46595*t46597*2.0-Aa*t46548*t46567*t46585*t46595* \
               t46597*(t46543*t46570*1.2E1+t46706*t46573*2.0E1-t46542*t46543*t46584*3.2E1)*2.0-t46602*t46604*t46723* \
               t46716*t46718*t46548*t46585*t46597*2.0+t46723*t46716*t46708*t46718*t46548*t46567*t46585*t46597*2.0- \
               t46604*t46724*t46716*1/(t46591*t46591*t46591)*t46548*t46567*t46585*t46597*2.0+t46604*t46716*t46718* \
               t46548*t46567*t46585*t46597*(b2a*c*t46674*(4.0/9.0)+b4a*t46530*t46675*(1.0E1/9.0)+b1a*c*t46575*t46674* \
               (2.0/9.0)+b3a*c*t46526*t46674*(2.0/3.0)-b1a*t46530*t46675*t46689*(1.0/3.6E1)+b3a*t46530*t46575*t46675* \
               (1.0/1.2E1))+Aa*a1a*c*t46602*t46604*t46535*t46548*t46585*t46595*(4.0/3.0)-Aa*a1a*c*t46604*t46548*t46674* \
               t46567*t46585*t46595*(8.0/9.0)-Aa*a1a*c*t46535*t46708*t46548*t46567*t46585*t46595*(4.0/3.0)+t46604* \
               t46724*1/(t46591*t46591*t46591*t46591)*t46548*t46567*t46585*1/(t46594*t46594)*t46586*t46597*(1.0/2.0) \
               +a1a*c*t46604*t46723*t46535*t46716*t46718*t46548*t46567*t46585*(2.0/3.0))+rho_a[index]*(t46900+t46902- \
               t46738-t46747+t46896+t46642*t46548*(t46901+t46738+t46747+t46894+t46899-t46630*t46631*t46632*t46744- \
               t46645*t46726*t46735*t46887*2.0-a1f*c*c0f*t46643*t46733*(8.0/9.0)-t46630*t46536*t46736*t46745*t46746* \
               (1.0/2.0)-a1p*c*t46631*t46632*t46615*t46637*(2.0/3.0)))+t46642*t46751*t46548*2.0-t46630*t46631*t46632* \
               t46637*2.0+t46541*t46582*t46576*t46577*2.0-a1p*c*c0p*t46561*t46535*(4.0/3.0)+a1p*c*c0p*t46615*t46639* \
               (4.0/3.0)+t46602*t46570*t46562*t46573*t46548*2.0-t46562*t46573*t46548*t46584*t46567*8.0-t46570*t46573* \
               t46548*t46567*t46685*2.0+t46542*t46543*t46570*t46562*t46548*t46567*8.0+Aa*t46602*t46604*t46548*t46585* \
               t46595*t46597*4.0-Aa*t46708*t46548*t46567*t46585*t46595*t46597*4.0+t46604*t46723*t46716*t46718*t46548* \
               t46567*t46585*t46597*2.0-Aa*a1a*c*t46604*t46535*t46548*t46567*t46585*t46595*(4.0/3.0))+rho_a[index]* \
               t46843*(t46638-t46749+t46642*t46548*(t46822-t46638-t46748+t46749))*2.0+rho_a[index]*t46886*(t46900+ \
               t46902-t46738-t46747+t46896-t46642*t46548*(t46900-t46901+t46902-t46738-t46747-t46894+t46896-t46899+ \
               t46645*t46726*t46735*t46887*2.0+a1f*c*c0f*t46643*t46733*(8.0/9.0)))-c0*pow(rho_a[index],1.0/3.0)*(cx1* \
               gamma_aa[index]*gx*t46649*t46878*(8.0/3.0)-cx1*t46752*t46844*t46881*t46819*(8.0/3.0)+cx2*t46752*t46844* \
               t46880*t46819*(1.6E1/3.0)+cx4*t46821*t46754*t46845*t46877*(3.2E1/3.0)-cx2*t46752*t46844*t46855*t46758* \
               t46876-cx4*t46754*t46845*t46756*t46873*t46849+cx3*gamma_aa[index]*gx*t46820*t46752*t46844*t46879*8.0- \
               cx3*gamma_aa[index]*gx*t46752*t46844*t46863*t46757*t46867)*(8.0/3.0)-rho_a[index]*t46800*(ccaa1*gamma_aa[index]* \
               gcaa*t46809*t46792*(8.8E1/9.0)+ccaa4*t46806*t46754*t46755*t46872*(1.12E3/9.0)-ccaa1*t46752*t46753* \
               t46827*t46787*2.4E1+ccaa2*t46752*t46753*t46818*t46787*(3.04E2/9.0)-ccaa2*t46841*t46752*t46842*t46753* \
               t46819*(3.2E1/3.0)-ccaa4*t46821*t46754*t46755*t46837*t46838*(6.4E1/3.0)-ccaa2*t46752*t46842*t46753* \
               t46758*(gamma_aa[index]*gcaa*t46792*(1.76E2/9.0)+t46752*t46753*t46787*(3.04E2/9.0))-ccaa4*t46754*t46755* \
               t46756*t46838*(gamma_aa[index]*gcaa*t46792*(3.52E2/9.0)+t46754*t46755*t46872*(1.12E3/9.0)+t46752*t46753* \
               t46787*(6.08E2/3.0)+gamma_aa[index]*gcaa*t46752*t46753*t46846*2.88E2)+ccaa2*(t46841*t46841)*t46752* \
               t46753*1/(t46817*t46817*t46817)*t46758*2.0+ccaa4*1/(t46805*t46805*t46805)*t46754*t46755*t46756*(t46837* \
               t46837)*2.0+ccaa3*gamma_aa[index]*gcaa*t46814*t46752*t46753*t46846*7.2E1+ccaa1*gamma_aa[index]*gcaa* \
               t46752*t46753*1/(t46808*t46808*t46808)*t46846*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*1/(t46813*t46813* \
               t46813)*(t46831*t46831)*t46752*t46753*t46757*2.0-ccaa3*gamma_aa[index]*gcaa*t46832*t46752*t46753*t46757* \
               (gamma_aa[index]*gcaa*t46792*(8.8E1/3.0)+t46752*t46753*t46787*(3.04E2/3.0)+gamma_aa[index]*gcaa*t46752* \
               t46753*t46846*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t46820*t46831*t46832*t46752*t46753*1.6E1)+c0*pow(rho_a[index],4.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t46792*t46878*(8.8E1/9.0)-cx1*t46752*t46844*t46881*t46787*2.4E1+cx2*t46752* \
               t46844*t46880*t46787*(3.04E2/9.0)+cx4*t46754*t46845*t46872*t46877*(1.12E3/9.0)-cx2*t46752*t46844*t46819* \
               t46855*t46876*(3.2E1/3.0)-cx4*t46821*t46754*t46845*t46873*t46849*(6.4E1/3.0)-cx2*t46752*t46844*t46758* \
               t46876*(gamma_aa[index]*gx*t46792*(1.76E2/9.0)+t46752*t46844*t46787*(3.04E2/9.0))-cx4*t46754*t46845* \
               t46756*t46873*(gamma_aa[index]*gx*t46792*(3.52E2/9.0)+t46754*t46845*t46872*(1.12E3/9.0)+t46752*t46844* \
               t46787*(6.08E2/3.0)+gamma_aa[index]*gx*t46752*t46844*t46846*2.88E2)+cx2*t46752*t46844*(t46855*t46855) \
               *t46758*1/(t46858*t46858*t46858)*2.0+cx4*t46754*t46845*1/(t46854*t46854*t46854)*t46756*(t46849*t46849) \
               *2.0+cx3*gamma_aa[index]*gx*t46752*t46844*t46846*t46879*7.2E1+cx1*gamma_aa[index]*gx*t46752*t46844* \
               t46846*1/(t46848*t46848*t46848)*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t46752*t46844*1/(t46862*t46862* \
               t46862)*t46757*(t46867*t46867)*2.0-cx3*gamma_aa[index]*gx*t46752*t46844*t46863*t46757*(gamma_aa[index]* \
               gx*t46792*(8.8E1/3.0)+t46752*t46844*t46787*(3.04E2/3.0)+gamma_aa[index]*gx*t46752*t46844*t46846*7.2E1) \
               -cx3*gamma_aa[index]*gx*t46820*t46752*t46844*t46863*t46867*1.6E1)+c0*t46611*(cx0+cx1*gamma_aa[index]* \
               gx*t46650*t46878+cx2*t46752*t46844*t46880*t46758+cx4*t46754*t46845*t46756*t46877+cx3*gamma_aa[index]* \
               gx*t46752*t46844*t46757*t46879)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t49972 = 1/pow(rho_a[index],1.0/3.0);
            double t49973 = c*t49972;
            double t49974 = sqrt(t49973);
            double t49975 = b1f*t49974;
            double t49976 = pow(t49973,3.0/2.0);
            double t49977 = b3f*t49976;
            double t49978 = c*c;
            double t49979 = 1/pow(rho_a[index],2.0/3.0);
            double t49980 = b4f*t49978*t49979;
            double t49981 = b2f*c*t49972;
            double t49982 = t49980+t49981+t49975+t49977;
            double t49983 = 1/pow(rho_a[index],4.0/3.0);
            double t49984 = b1p*t49974;
            double t49985 = b3p*t49976;
            double t49986 = b4p*t49978*t49979;
            double t49987 = b2p*c*t49972;
            double t49988 = t49984+t49985+t49986+t49987;
            double t49989 = 1/pow(rho_a[index],5.0/3.0);
            double t49990 = 1/sqrt(t49973);
            double t49991 = 1/c0f;
            double t49992 = 1/t49982;
            double t49993 = t49991*t49992*(1.0/2.0);
            double t49994 = t49993+1.0;
            double t49995 = 1/c0p;
            double t49996 = 1/t49988;
            double t49997 = t49995*t49996*(1.0/2.0);
            double t49998 = t49997+1.0;
            double t49999 = a1p*c*t49972;
            double t50000 = t49999+1.0;
            double t50001 = 1/t49998;
            double t50002 = 1/(t49988*t49988);
            double t50003 = b4p*t49978*t49989*(2.0/3.0);
            double t50004 = b2p*c*t49983*(1.0/3.0);
            double t50005 = b1p*c*t49990*t49983*(1.0/6.0);
            double t50006 = b3p*c*t49974*t49983*(1.0/2.0);
            double t50007 = t50003+t50004+t50005+t50006;
            double t50008 = t50000*t50001*t50002*t50007;
            double t50009 = log(t49998);
            double t50010 = gamma_aa[index]*gamma_aa[index];
            double t50011 = gcaa*gcaa;
            double t50012 = t50010*t50010;
            double t50013 = t50011*t50011;
            double t50014 = 1/pow(rho_a[index],3.2E1/3.0);
            double t50015 = 1/pow(rho_a[index],8.0/3.0);
            double t50016 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50017 = 1/pow(rho_a[index],1.6E1/3.0);
            double t50018 = pow(2.0,1.0/3.0);
            double t50019 = t50018*2.0;
            double t50020 = t50019-2.0;
            double t50021 = two_13*2.0;
            double t50022 = t50021-2.0;
            double t50023 = 1/t50022;
            double t50024 = log(t49994);
            double t50025 = a1f*c*t49972;
            double t50026 = t50025+1.0;
            double t50027 = gamma_aa[index]*gcaa*t50015*4.0;
            double t50028 = gamma_aa[index]*gcaa*t50010*t50011*t50016*4.0;
            double t50029 = t50010*t50011*t50017*6.0;
            double t50030 = t50012*t50013*t50014;
            double t50031 = t50030+t50027+t50028+t50029+1.0;
            double t50032 = 1/t50031;
            double t50033 = gamma_aa[index]*gcaa*t50015;
            double t50034 = t50033+1.0;
            double t50035 = 1/t50034;
            double t50036 = gamma_aa[index]*gcaa*t50015*3.0;
            double t50037 = gamma_aa[index]*gcaa*t50010*t50011*t50016;
            double t50038 = t50010*t50011*t50017*3.0;
            double t50039 = t50036+t50037+t50038+1.0;
            double t50040 = 1/t50039;
            double t50041 = gamma_aa[index]*gcaa*t50015*2.0;
            double t50042 = t50010*t50011*t50017;
            double t50043 = t50041+t50042+1.0;
            double t50044 = 1/t50043;
            double t50045 = 1/pow(rho_a[index],1.9E1/3.0);
            double t50046 = 1/pow(rho_a[index],1.1E1/3.0);
            double t50047 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t50048 = 1/pow(rho_a[index],3.5E1/3.0);
            double t50049 = 1/t49994;
            double t50050 = 1/(t49982*t49982);
            double t50051 = b4f*t49978*t49989*(2.0/3.0);
            double t50052 = b2f*c*t49983*(1.0/3.0);
            double t50053 = b1f*c*t49990*t49983*(1.0/6.0);
            double t50054 = b3f*c*t49974*t49983*(1.0/2.0);
            double t50055 = t50051+t50052+t50053+t50054;
            double t50056 = a1f*c*c0f*t49983*t50024*(2.0/3.0);
            double t50057 = a1p*c*c0p*t49983*t50009*(2.0/3.0);
            double t50058 = ccaa4*t50012*t50013*t50032*t50048*(3.2E1/3.0);
            double t50059 = ccaa1*gamma_aa[index]*gcaa*t50035*t50046*(8.0/3.0);
            double t50060 = ccaa3*gamma_aa[index]*gcaa*t50010*t50011*t50040*t50047*8.0;
            double t50061 = ccaa2*t50010*t50011*t50044*t50045*(1.6E1/3.0);
            double t50062 = 1/(t50034*t50034);
            double t50063 = gamma_aa[index]*gcaa*t50046*8.0;
            double t50064 = gamma_aa[index]*gcaa*t50010*t50011*t50047*8.0;
            double t50065 = t50010*t50011*t50045*1.6E1;
            double t50066 = t50063+t50064+t50065;
            double t50067 = 1/(t50039*t50039);
            double t50068 = gamma_aa[index]*gcaa*t50046*(3.2E1/3.0);
            double t50069 = gamma_aa[index]*gcaa*t50010*t50011*t50047*3.2E1;
            double t50070 = t50010*t50011*t50045*3.2E1;
            double t50071 = t50012*t50013*t50048*(3.2E1/3.0);
            double t50072 = t50070+t50071+t50068+t50069;
            double t50073 = 1/(t50031*t50031);
            double t50074 = gamma_aa[index]*gcaa*t50046*(1.6E1/3.0);
            double t50075 = t50010*t50011*t50045*(1.6E1/3.0);
            double t50076 = t50074+t50075;
            double t50077 = 1/(t50043*t50043);
            double t50078 = t50060+t50061+t50058+t50059-ccaa1*t50010*t50011*t50062*t50045*(8.0/3.0)-ccaa4*t50012* \
               t50013*t50014*t50072*t50073-ccaa2*t50010*t50011*t50017*t50076*t50077-ccaa3*gamma_aa[index]*gcaa*t50010* \
               t50011*t50016*t50066*t50067;
            double t50079 = gx*gx;
            double t50080 = t50079*t50079;
            double t50081 = 1/pow(rho_a[index],1.0E1);
            double t50082 = gamma_aa[index]*gx*t50015;
            double t50083 = t50082+1.0;
            double t50084 = 1/pow(rho_a[index],2.2E1/3.0);
            double t50105 = gamma_aa[index]*gx*t50046*(3.2E1/3.0);
            double t50106 = gamma_aa[index]*gx*t50010*t50047*t50079*3.2E1;
            double t50107 = t50010*t50045*t50079*3.2E1;
            double t50108 = t50012*t50080*t50048*(3.2E1/3.0);
            double t50085 = t50105+t50106+t50107+t50108;
            double t50086 = gamma_aa[index]*gx*t50015*4.0;
            double t50087 = gamma_aa[index]*gx*t50010*t50016*t50079*4.0;
            double t50088 = t50010*t50017*t50079*6.0;
            double t50089 = t50012*t50014*t50080;
            double t50090 = t50086+t50087+t50088+t50089+1.0;
            double t50111 = gamma_aa[index]*gx*t50046*(1.6E1/3.0);
            double t50112 = t50010*t50045*t50079*(1.6E1/3.0);
            double t50091 = t50111+t50112;
            double t50092 = gamma_aa[index]*gx*t50015*2.0;
            double t50093 = t50010*t50017*t50079;
            double t50094 = t50092+t50093+1.0;
            double t50095 = gamma_aa[index]*gx*t50015*3.0;
            double t50096 = gamma_aa[index]*gx*t50010*t50016*t50079;
            double t50097 = t50010*t50017*t50079*3.0;
            double t50098 = t50095+t50096+t50097+1.0;
            double t50099 = 1/pow(rho_a[index],1.4E1/3.0);
            double t50100 = 1/(t50098*t50098);
            double t50101 = gamma_aa[index]*gx*t50046*8.0;
            double t50102 = gamma_aa[index]*gx*t50010*t50047*t50079*8.0;
            double t50103 = t50010*t50045*t50079*1.6E1;
            double t50104 = t50101+t50102+t50103;
            double t50109 = 1/pow(rho_a[index],3.8E1/3.0);
            double t50110 = 1/(t50090*t50090);
            double t50113 = 1/(t50094*t50094);
            double t50114 = 1/t50090;
            double t50115 = 1/t50083;
            double t50116 = 1/t50098;
            double t50117 = 1/t50094;
            double t50118 = c0f*t50024*t50026*2.0;
            double t50119 = c0p*t50000*t50009*2.0;
            double t50120 = 1/(t50083*t50083);
            double t50121 = ccaa4*t50012*t50013*t50014*t50032;
            double t50122 = ccaa1*gamma_aa[index]*gcaa*t50015*t50035;
            double t50123 = ccaa3*gamma_aa[index]*gcaa*t50010*t50011*t50040*t50016;
            double t50124 = ccaa2*t50010*t50011*t50017*t50044;
            double t50125 = ccaa0+t50121+t50122+t50123+t50124;
            double t50126 = 1/pow(rho_a[index],7.0/3.0);
            double t50127 = 1/pow(t49973,3.0/2.0);
            double t50128 = t50055*t50055;
            double t50129 = t50007*t50007;
            double t50130 = 1/(t49988*t49988*t49988);
            double t50131 = t50000*t50001*t50130*t50129*2.0;
            double t50132 = b4p*t49978*t50015*(1.0E1/9.0);
            double t50133 = b2p*c*t50126*(4.0/9.0);
            double t50134 = b3p*t49990*t49978*t50015*(1.0/1.2E1);
            double t50135 = b1p*c*t49990*t50126*(2.0/9.0);
            double t50136 = b3p*c*t49974*t50126*(2.0/3.0);
            double t50137 = t50132+t50133+t50134+t50135+t50136-b1p*t49978*t50015*t50127*(1.0/3.6E1);
            double t50138 = 1/(t49998*t49998);
            double t50139 = 1/(t49988*t49988*t49988*t49988);
            double t50140 = a1p*c*c0p*t50009*t50126*(8.0/9.0);
            v_rho_a_rho_a_[index] = t50078*(t50119+t50020*t50023*(t50118-c0p*t50000*t50009*2.0))*2.0+t50125*(- \
               t50008+t50057+t50020*t50023*(t50008+t50056-t50050*t50026*t50055*t50049-a1p*c*c0p*t49983*t50009*(2.0/ \
               3.0)))*2.0-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t50115*t50046*(8.0/3.0)-cx1*t50010* \
               t50120*t50045*t50079*(8.0/3.0)+cx2*t50010*t50045*t50117*t50079*(1.6E1/3.0)+cx4*t50012*t50114*t50080* \
               t50048*(3.2E1/3.0)-cx2*t50010*t50113*t50017*t50091*t50079-cx4*t50110*t50012*t50014*t50080*t50085+cx3* \
               gamma_aa[index]*gx*t50010*t50116*t50047*t50079*8.0-cx3*gamma_aa[index]*gx*t50010*t50100*t50104*t50016* \
               t50079)*(8.0/3.0)+rho_a[index]*t50125*(-t50131-t50140+t50020*t50023*(t50131+t50140-t50000*t50001*t50002* \
               t50137-1/(t49982*t49982*t49982)*t50026*t50128*t50049*2.0+t50050*t50026*t50049*(b2f*c*t50126*(4.0/9.0) \
               +b4f*t49978*t50015*(1.0E1/9.0)+b1f*c*t49990*t50126*(2.0/9.0)+b3f*c*t49974*t50126*(2.0/3.0)-b1f*t49978* \
               t50015*t50127*(1.0/3.6E1)+b3f*t49990*t49978*t50015*(1.0/1.2E1))+1/(t49982*t49982*t49982*t49982)*t49991* \
               1/(t49994*t49994)*t50026*t50128*(1.0/2.0)-a1f*c*c0f*t50024*t50126*(8.0/9.0)-t49995*t50000*t50129*t50138* \
               t50139*(1.0/2.0)+a1f*c*t49983*t50050*t50055*t50049*(2.0/3.0)-a1p*c*t49983*t50001*t50002*t50007*(2.0/ \
               3.0))+t50000*t50001*t50002*t50137+t49995*t50000*t50129*t50138*t50139*(1.0/2.0)+a1p*c*t49983*t50001* \
               t50002*t50007*(2.0/3.0))-rho_a[index]*t50078*(-t50008+t50057+t50020*t50023*(t50008+t50056-t50057-t50050* \
               t50026*t50055*t50049))*2.0-rho_a[index]*(t50119+t50020*t50023*(t50118-t50119))*(ccaa1*gamma_aa[index]* \
               gcaa*t50035*t50099*(8.8E1/9.0)-ccaa1*t50010*t50011*t50062*t50084*2.4E1+ccaa2*t50010*t50011*t50044* \
               t50084*(3.04E2/9.0)+ccaa4*t50012*t50013*t50032*t50109*(1.12E3/9.0)-ccaa2*t50010*t50011*t50045*t50076* \
               t50077*(3.2E1/3.0)-ccaa4*t50012*t50013*t50072*t50073*t50048*(6.4E1/3.0)-ccaa2*t50010*t50011*t50017* \
               t50077*(gamma_aa[index]*gcaa*t50099*(1.76E2/9.0)+t50010*t50011*t50084*(3.04E2/9.0))-ccaa4*t50012*t50013* \
               t50014*t50073*(gamma_aa[index]*gcaa*t50099*(3.52E2/9.0)+t50010*t50011*t50084*(6.08E2/3.0)+t50012*t50013* \
               t50109*(1.12E3/9.0)+gamma_aa[index]*gcaa*t50010*t50011*t50081*2.88E2)+ccaa4*t50012*t50013*1/(t50031* \
               t50031*t50031)*t50014*(t50072*t50072)*2.0+ccaa2*t50010*t50011*1/(t50043*t50043*t50043)*t50017*(t50076* \
               t50076)*2.0+ccaa3*gamma_aa[index]*gcaa*t50010*t50011*t50040*t50081*7.2E1+ccaa1*gamma_aa[index]*gcaa* \
               t50010*t50011*1/(t50034*t50034*t50034)*t50081*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t50010*t50011* \
               t50016*1/(t50039*t50039*t50039)*(t50066*t50066)*2.0-ccaa3*gamma_aa[index]*gcaa*t50010*t50011*t50016* \
               t50067*(gamma_aa[index]*gcaa*t50099*(8.8E1/3.0)+t50010*t50011*t50084*(3.04E2/3.0)+gamma_aa[index]* \
               gcaa*t50010*t50011*t50081*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t50010*t50011*t50047*t50066*t50067*1.6E1) \
               +c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t50115*t50099*(8.8E1/9.0)-cx1*t50010*t50120* \
               t50084*t50079*2.4E1+cx2*t50010*t50117*t50084*t50079*(3.04E2/9.0)+cx4*t50012*t50114*t50080*t50109*(1.12E3/ \
               9.0)-cx2*t50010*t50113*t50045*t50091*t50079*(3.2E1/3.0)-cx4*t50110*t50012*t50080*t50048*t50085*(6.4E1/ \
               3.0)-cx2*t50010*t50113*t50017*t50079*(gamma_aa[index]*gx*t50099*(1.76E2/9.0)+t50010*t50084*t50079* \
               (3.04E2/9.0))-cx4*t50110*t50012*t50014*t50080*(gamma_aa[index]*gx*t50099*(3.52E2/9.0)+t50012*t50080* \
               t50109*(1.12E3/9.0)+t50010*t50084*t50079*(6.08E2/3.0)+gamma_aa[index]*gx*t50010*t50081*t50079*2.88E2) \
               +cx2*t50010*t50017*(t50091*t50091)*1/(t50094*t50094*t50094)*t50079*2.0+cx4*t50012*t50014*t50080*1/ \
               (t50090*t50090*t50090)*(t50085*t50085)*2.0+cx3*gamma_aa[index]*gx*t50010*t50116*t50081*t50079*7.2E1+ \
               cx1*gamma_aa[index]*gx*t50010*t50081*1/(t50083*t50083*t50083)*t50079*(1.28E2/9.0)+cx3*gamma_aa[index]* \
               gx*t50010*(t50104*t50104)*t50016*t50079*1/(t50098*t50098*t50098)*2.0-cx3*gamma_aa[index]*gx*t50010* \
               t50100*t50016*t50079*(gamma_aa[index]*gx*t50099*(8.8E1/3.0)+t50010*t50084*t50079*(3.04E2/3.0)+gamma_aa[index]* \
               gx*t50010*t50081*t50079*7.2E1)-cx3*gamma_aa[index]*gx*t50010*t50100*t50104*t50047*t50079*1.6E1)+c0* \
               t49979*(cx0+cx1*gamma_aa[index]*gx*t50015*t50115+cx2*t50010*t50017*t50117*t50079+cx4*t50012*t50014* \
               t50114*t50080+cx3*gamma_aa[index]*gx*t50010*t50016*t50116*t50079)*(4.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t46904 = rho_a[index]+rho_b[index];
            double t46905 = 1/pow(t46904,1.0/3.0);
            double t46906 = c*t46905;
            double t46907 = sqrt(t46906);
            double t46908 = b1p*t46907;
            double t46909 = pow(t46906,3.0/2.0);
            double t46910 = b3p*t46909;
            double t46911 = c*c;
            double t46912 = 1/pow(t46904,2.0/3.0);
            double t46913 = b4p*t46911*t46912;
            double t46914 = b2p*c*t46905;
            double t46915 = t46910+t46913+t46914+t46908;
            double t46916 = 1/pow(t46904,4.0/3.0);
            double t46917 = 1/c0p;
            double t46918 = 1/t46915;
            double t46919 = t46917*t46918*(1.0/2.0);
            double t46920 = t46919+1.0;
            double t46921 = a1p*c*t46905;
            double t46922 = t46921+1.0;
            double t46923 = rho_a[index]-rho_b[index];
            double t46924 = t46923*t46923;
            double t46925 = 1/t46904;
            double t46926 = t46923*t46925;
            double t46927 = two_13*2.0;
            double t46928 = t46927-2.0;
            double t46929 = 1/t46928;
            double t46930 = 1/c0f;
            double t46931 = b1f*t46907;
            double t46932 = b3f*t46909;
            double t46933 = b4f*t46911*t46912;
            double t46934 = b2f*c*t46905;
            double t46935 = t46931+t46932+t46933+t46934;
            double t46936 = 1/t46935;
            double t46937 = t46930*t46936*(1.0/2.0);
            double t46938 = t46937+1.0;
            double t46939 = log(t46938);
            double t46940 = a1f*c*t46905;
            double t46941 = t46940+1.0;
            double t46942 = log(t46920);
            double t46952 = c0f*t46941*t46939*2.0;
            double t46953 = c0p*t46922*t46942*2.0;
            double t46943 = t46952-t46953;
            double t46944 = t46926+1.0;
            double t46945 = pow(t46944,4.0/3.0);
            double t46946 = -t46926+1.0;
            double t46947 = pow(t46946,4.0/3.0);
            double t46948 = t46945+t46947-2.0;
            double t46949 = 1/(t46904*t46904);
            double t46980 = t46923*t46949;
            double t46950 = t46925-t46980;
            double t46951 = 1/(t46904*t46904*t46904*t46904);
            double t46954 = t46924*t46924;
            double t46955 = 1/pow(t46904,5.0/3.0);
            double t46956 = 1/sqrt(t46906);
            double t46957 = 1/t46920;
            double t46958 = 1/(t46915*t46915);
            double t46959 = b4p*t46911*t46955*(2.0/3.0);
            double t46960 = b2p*c*t46916*(1.0/3.0);
            double t46961 = b1p*c*t46916*t46956*(1.0/6.0);
            double t46962 = b3p*c*t46907*t46916*(1.0/2.0);
            double t46963 = t46960+t46961+t46962+t46959;
            double t46964 = t46922*t46963*t46957*t46958;
            double t46965 = 1/(t46904*t46904*t46904*t46904*t46904);
            double t46966 = 1/d2fz0;
            double t46967 = 1/Aa;
            double t46968 = b1a*t46907;
            double t46969 = b3a*t46909;
            double t46970 = b4a*t46911*t46912;
            double t46971 = b2a*c*t46905;
            double t46972 = t46970+t46971+t46968+t46969;
            double t46973 = 1/t46972;
            double t46974 = t46973*t46967*(1.0/2.0);
            double t46975 = t46974+1.0;
            double t46976 = log(t46975);
            double t46977 = a1a*c*t46905;
            double t46978 = t46977+1.0;
            double t46979 = pow(t46944,1.0/3.0);
            double t46981 = t46950*t46979*(4.0/3.0);
            double t46982 = pow(t46946,1.0/3.0);
            double t47126 = t46950*t46982*(4.0/3.0);
            double t46983 = t46981-t47126;
            double t46984 = t46951*t46954;
            double t46985 = t46984-1.0;
            double t46986 = 1/pow(rho_a[index],1.0/3.0);
            double t46987 = c*t46986;
            double t46988 = sqrt(t46987);
            double t46989 = b1f*t46988;
            double t46990 = pow(t46987,3.0/2.0);
            double t46991 = b3f*t46990;
            double t46992 = 1/pow(rho_a[index],2.0/3.0);
            double t46993 = b4f*t46911*t46992;
            double t46994 = b2f*c*t46986;
            double t46995 = t46991+t46993+t46994+t46989;
            double t46996 = 1/pow(rho_a[index],4.0/3.0);
            double t46997 = b1p*t46988;
            double t46998 = b3p*t46990;
            double t46999 = b4p*t46911*t46992;
            double t47000 = b2p*c*t46986;
            double t47001 = t46997+t46998+t46999+t47000;
            double t47002 = 1/pow(rho_a[index],5.0/3.0);
            double t47003 = 1/sqrt(t46987);
            double t47004 = 1/t46995;
            double t47005 = t46930*t47004*(1.0/2.0);
            double t47006 = t47005+1.0;
            double t47007 = 1/t47001;
            double t47008 = t46917*t47007*(1.0/2.0);
            double t47009 = t47008+1.0;
            double t47010 = a1p*c*t46986;
            double t47011 = t47010+1.0;
            double t47012 = 1/t47009;
            double t47013 = 1/(t47001*t47001);
            double t47014 = b4p*t46911*t47002*(2.0/3.0);
            double t47015 = b2p*c*t46996*(1.0/3.0);
            double t47016 = b1p*c*t46996*t47003*(1.0/6.0);
            double t47017 = b3p*c*t46996*t46988*(1.0/2.0);
            double t47018 = t47014+t47015+t47016+t47017;
            double t47019 = t47011*t47012*t47013*t47018;
            double t47020 = log(t47009);
            double t47021 = pow(2.0,1.0/3.0);
            double t47022 = t47021*2.0;
            double t47023 = t47022-2.0;
            double t47024 = log(t47006);
            double t47025 = a1f*c*t46986;
            double t47026 = t47025+1.0;
            double t47027 = gcab*gcab;
            double t47031 = 1/pow(rho_a[index],8.0/3.0);
            double t47032 = gamma_aa[index]*t47031*(1.0/2.0);
            double t47033 = 1/pow(rho_b[index],8.0/3.0);
            double t47034 = gamma_bb[index]*t47033*(1.0/2.0);
            double t47028 = t47032+t47034;
            double t47029 = t47028*t47028;
            double t47030 = 1/pow(rho_b[index],1.1E1/3.0);
            double t47035 = t47027*t47027;
            double t47036 = t47029*t47029;
            double t47037 = t47027*t47029*6.0;
            double t47038 = gcab*t47027*t47028*t47029*4.0;
            double t47039 = t47035*t47036;
            double t47040 = gcab*t47028*4.0;
            double t47041 = t47040+t47037+t47038+t47039+1.0;
            double t47042 = gcab*t47028;
            double t47043 = t47042+1.0;
            double t47044 = t47027*t47029;
            double t47045 = gcab*t47028*2.0;
            double t47046 = t47044+t47045+1.0;
            double t47047 = t47027*t47029*3.0;
            double t47048 = gcab*t47027*t47028*t47029;
            double t47049 = gcab*t47028*3.0;
            double t47050 = t47047+t47048+t47049+1.0;
            double t47051 = t46923*t46924*t46951*t46943*t46929*t46948*4.0;
            double t47052 = t46925+t46980;
            double t47053 = 1/t46938;
            double t47054 = 1/(t46935*t46935);
            double t47055 = b4f*t46911*t46955*(2.0/3.0);
            double t47056 = b2f*c*t46916*(1.0/3.0);
            double t47057 = b1f*c*t46916*t46956*(1.0/6.0);
            double t47058 = b3f*c*t46907*t46916*(1.0/2.0);
            double t47059 = t47055+t47056+t47057+t47058;
            double t47060 = a1f*c*c0f*t46916*t46939*(2.0/3.0);
            double t47061 = t46954*t46965*4.0;
            double t47062 = t46982*t47052*(4.0/3.0);
            double t47125 = t46979*t47052*(4.0/3.0);
            double t47063 = t47062-t47125;
            double t47064 = 1/t46975;
            double t47065 = 1/(t46972*t46972);
            double t47066 = b4a*t46911*t46955*(2.0/3.0);
            double t47067 = b2a*c*t46916*(1.0/3.0);
            double t47068 = b1a*c*t46916*t46956*(1.0/6.0);
            double t47069 = b3a*c*t46907*t46916*(1.0/2.0);
            double t47070 = t47066+t47067+t47068+t47069;
            double t47071 = t46929*t46948*t46966*t46985*t46978*t47070*t47064*t47065;
            double t47072 = 1/pow(rho_b[index],1.0/3.0);
            double t47073 = c*t47072;
            double t47074 = sqrt(t47073);
            double t47075 = b1f*t47074;
            double t47076 = pow(t47073,3.0/2.0);
            double t47077 = b3f*t47076;
            double t47078 = 1/pow(rho_b[index],2.0/3.0);
            double t47079 = b4f*t46911*t47078;
            double t47080 = b2f*c*t47072;
            double t47081 = t47080+t47075+t47077+t47079;
            double t47082 = 1/pow(rho_b[index],4.0/3.0);
            double t47083 = b1p*t47074;
            double t47084 = b3p*t47076;
            double t47085 = b4p*t46911*t47078;
            double t47086 = b2p*c*t47072;
            double t47087 = t47083+t47084+t47085+t47086;
            double t47088 = 1/pow(rho_b[index],5.0/3.0);
            double t47089 = 1/sqrt(t47073);
            double t47090 = 1/t47081;
            double t47091 = t46930*t47090*(1.0/2.0);
            double t47092 = t47091+1.0;
            double t47093 = 1/t47087;
            double t47094 = t46917*t47093*(1.0/2.0);
            double t47095 = t47094+1.0;
            double t47096 = a1p*c*t47072;
            double t47097 = t47096+1.0;
            double t47098 = 1/t47095;
            double t47099 = 1/(t47087*t47087);
            double t47100 = b4p*t46911*t47088*(2.0/3.0);
            double t47101 = b2p*c*t47082*(1.0/3.0);
            double t47102 = b1p*c*t47082*t47089*(1.0/6.0);
            double t47103 = b3p*c*t47082*t47074*(1.0/2.0);
            double t47104 = t47100+t47101+t47102+t47103;
            double t47105 = t47104*t47097*t47098*t47099;
            double t47106 = log(t47095);
            double t47107 = log(t47092);
            double t47108 = a1f*c*t47072;
            double t47109 = t47108+1.0;
            double t47110 = t46951*t46943*t46954*t46929*t46948;
            double t47111 = Aa*t46929*t46948*t46966*t46976*t46985*t46978*2.0;
            double t47112 = 1/pow(rho_a[index],1.1E1/3.0);
            double t47113 = 1/(t47050*t47050);
            double t47114 = 1/t47043;
            double t47115 = 1/(t47041*t47041);
            double t47116 = 1/(t47046*t47046);
            double t47117 = 1/t47041;
            double t47118 = 1/(t47043*t47043);
            double t47119 = 1/t47046;
            double t47120 = 1/t47050;
            double t47122 = a1p*c*c0p*t46942*t46916*(2.0/3.0);
            double t47127 = t46941*t47053*t47054*t47059;
            double t47121 = t46964-t47122+t47060-t47127;
            double t47123 = 1/pow(t46904,7.0/3.0);
            double t47124 = 1/pow(t46904,8.0/3.0);
            double t47128 = t46963*t46963;
            double t47129 = 1/pow(t46906,3.0/2.0);
            double t47130 = b4p*t46911*t47124*(1.0E1/9.0);
            double t47131 = b2p*c*t47123*(4.0/9.0);
            double t47132 = b1p*c*t46956*t47123*(2.0/9.0);
            double t47133 = b3p*c*t46907*t47123*(2.0/3.0);
            double t47134 = b3p*t46911*t46956*t47124*(1.0/1.2E1);
            double t47135 = t47130+t47131+t47132+t47133+t47134-b1p*t46911*t47124*t47129*(1.0/3.6E1);
            double t47136 = t46922*t46957*t46958*t47135;
            double t47137 = 1/(t46915*t46915*t46915);
            double t47138 = t47059*t47059;
            double t47139 = 1/(t46920*t46920);
            double t47140 = 1/(t46915*t46915*t46915*t46915);
            double t47141 = t46922*t46917*t47140*t47128*t47139*(1.0/2.0);
            double t47142 = 1/(t46904*t46904*t46904);
            double t47143 = a1p*c*t46916*t46963*t46957*t46958*(2.0/3.0);
            double t47144 = 1/(t46904*t46904*t46904*t46904*t46904*t46904);
            double t47145 = t46923*t46924*t46951*4.0;
            double t47146 = t47061+t47145;
            double t47147 = t46923*t46982*t47142*(8.0/3.0);
            double t47148 = 1/pow(t46944,2.0/3.0);
            double t47149 = t46950*t47052*t47148*(4.0/9.0);
            double t47150 = 1/pow(t46946,2.0/3.0);
            double t47151 = t46950*t47150*t47052*(4.0/9.0);
            double t47152 = t47151+t47147+t47149-t46923*t46979*t47142*(8.0/3.0);
            double t47153 = t47070*t47070;
            double t47154 = t47061-t47145;
            double t47155 = t46951*t46943*t46954*t46929*t46983;
            double t47156 = Aa*t46929*t46948*t46966*t46976*t46978*t47146*2.0;
            double t47157 = Aa*t46929*t46983*t46966*t46976*t46985*t46978*2.0;
            double t47158 = c0f*t47024*t47026*2.0;
            double t47160 = c0p*t47011*t47020*2.0;
            double t47159 = -t47160+t47158;
            double t47161 = c0f*t47107*t47109*2.0;
            double t47163 = c0p*t47106*t47097*2.0;
            double t47162 = t47161-t47163;
            double t47164 = gamma_aa[index]*gcab*t47112*(8.0/3.0);
            double t47165 = gamma_aa[index]*t47112*t47027*t47028*(8.0/3.0);
            double t47166 = t47164+t47165;
            double t47167 = gamma_bb[index]*gcab*t47030*(8.0/3.0);
            double t47168 = gamma_bb[index]*t47030*t47027*t47028*(8.0/3.0);
            double t47169 = t47167+t47168;
            double t47170 = gamma_aa[index]*gcab*t47112*(1.6E1/3.0);
            double t47171 = gamma_aa[index]*gcab*t47112*t47027*t47029*1.6E1;
            double t47172 = gamma_aa[index]*t47112*t47035*t47028*t47029*(1.6E1/3.0);
            double t47173 = gamma_aa[index]*t47112*t47027*t47028*1.6E1;
            double t47174 = t47170+t47171+t47172+t47173;
            double t47175 = gamma_bb[index]*gcab*t47030*(1.6E1/3.0);
            double t47176 = gamma_bb[index]*gcab*t47030*t47027*t47029*1.6E1;
            double t47177 = gamma_bb[index]*t47030*t47035*t47028*t47029*(1.6E1/3.0);
            double t47178 = gamma_bb[index]*t47030*t47027*t47028*1.6E1;
            double t47179 = t47175+t47176+t47177+t47178;
            double t47180 = gamma_aa[index]*gcab*t47112*4.0;
            double t47181 = gamma_aa[index]*gcab*t47112*t47027*t47029*4.0;
            double t47182 = gamma_aa[index]*t47112*t47027*t47028*8.0;
            double t47183 = t47180+t47181+t47182;
            double t47184 = gamma_bb[index]*gcab*t47030*4.0;
            double t47185 = gamma_bb[index]*gcab*t47030*t47027*t47029*4.0;
            double t47186 = gamma_bb[index]*t47030*t47027*t47028*8.0;
            double t47187 = t47184+t47185+t47186;
            v_rho_a_rho_b_[index] = (t46953+t47110+t47111+rho_a[index]*(-t47019+t46929*t47023*(t47019-(1/(t46995* \
               t46995)*t47026*(b2f*c*t46996*(1.0/3.0)+b4f*t46911*t47002*(2.0/3.0)+b1f*c*t46996*t47003*(1.0/6.0)+b3f* \
               c*t46996*t46988*(1.0/2.0)))/t47006+a1f*c*c0f*t46996*t47024*(2.0/3.0)-a1p*c*c0p*t46996*t47020*(2.0/ \
               3.0))+a1p*c*c0p*t46996*t47020*(2.0/3.0))+t46904*(t46964+t47051+t47071+t47155+t47157-a1p*c*c0p*t46942* \
               t46916*(2.0/3.0)-t46943*t46954*t46929*t46965*t46948*4.0-t46951*t46954*t46929*t46948*t47121-Aa*t46929* \
               t46948*t46966*t46976*t46978*(t47061-t46923*t46924*t46951*4.0)*2.0-Aa*a1a*c*t46916*t46929*t46948*t46966* \
               t46976*t46985*(2.0/3.0))-c0p*t47011*t47020*2.0-t46929*t47023*t47159)*(ccab1*gamma_bb[index]*gcab*t47030* \
               t47114*(4.0/3.0)-ccab4*t47115*t47035*t47036*t47179-ccab2*t47116*t47027*t47029*t47169-ccab1*gamma_bb[index]* \
               t47030*t47027*t47028*t47118*(4.0/3.0)+ccab2*gamma_bb[index]*t47030*t47027*t47028*t47119*(8.0/3.0)+ \
               ccab3*gamma_bb[index]*gcab*t47030*t47120*t47027*t47029*4.0+ccab4*gamma_bb[index]*t47030*t47035*t47117* \
               t47028*t47029*(1.6E1/3.0)-ccab3*gcab*t47113*t47027*t47028*t47029*t47187)+(ccab0+ccab1*gcab*t47114* \
               t47028+ccab4*t47035*t47036*t47117+ccab2*t47027*t47029*t47119+ccab3*gcab*t47120*t47027*t47028*t47029) \
               *(-t47155+t47156-t47157+t46904*(t47141+t47143+t47136-t46922*t46957*t47128*t47137*2.0+t46951*t46954* \
               t46929*t46983*(t46964-t47122+t47060-t47127)+t46951*t46954*t46929*(t47062-t47125)*(t46964-t47122+t47060- \
               t47127)-a1p*c*c0p*t46942*t47123*(8.0/9.0)-t46951*t46954*t46929*t46948*(t47141+t47143+t47136-t46922* \
               t46957*t47128*t47137*2.0+t46941*1/(t46935*t46935*t46935)*t47053*t47138*2.0-t46941*t47053*t47054*(b2f* \
               c*t47123*(4.0/9.0)+b4f*t46911*t47124*(1.0E1/9.0)+b1f*c*t46956*t47123*(2.0/9.0)+b3f*c*t46907*t47123* \
               (2.0/3.0)-b1f*t46911*t47124*t47129*(1.0/3.6E1)+b3f*t46911*t46956*t47124*(1.0/1.2E1))-t46930*t46941* \
               1/(t46935*t46935*t46935*t46935)*1/(t46938*t46938)*t47138*(1.0/2.0)+a1f*c*c0f*t46939*t47123*(8.0/9.0) \
               -a1p*c*c0p*t46942*t47123*(8.0/9.0)-a1f*c*t46916*t47053*t47054*t47059*(2.0/3.0))+t46924*t46951*t46943* \
               t46929*t46948*1.2E1+t46943*t46954*t46929*t46965*t46983*4.0+t46951*t46943*t46954*t46929*t47152-t46954* \
               t46929*t46965*t46948*t47121*8.0-t46943*t46954*t46929*t46948*t47144*2.0E1+t46943*t46954*t46929*t46965* \
               (t47062-t47125)*4.0+t46923*t46924*t46951*t46943*t46929*t46983*4.0-t46923*t46924*t46951*t46943*t46929* \
               t47063*4.0+Aa*t46929*t46966*t46976*t46985*t46978*t47152*2.0+Aa*t46929*t46983*t46966*t46976*t46978* \
               t47146*2.0+Aa*t46929*t46966*t46976*t46978*t47154*(t47062-t47125)*2.0+Aa*t46929*t46948*t46966*t46976* \
               t46978*(t46924*t46951*1.2E1-t46954*t47144*2.0E1)*2.0-t46929*t46983*t46966*t46985*t46978*t47070*t47064* \
               t47065+t46929*t46948*t46966*t46978*t47070*t47064*t47154*t47065-t46929*t46966*t46985*t46978*t47070* \
               t47063*t47064*t47065+t46929*t46948*t46966*t46978*t47070*t47064*t47065*t47146-1/(t46972*t46972*t46972) \
               *t46929*t46948*t46966*t46985*t46978*t47153*t47064*2.0+t46929*t46948*t46966*t46985*t46978*t47064*t47065* \
               (b2a*c*t47123*(4.0/9.0)+b4a*t46911*t47124*(1.0E1/9.0)+b1a*c*t46956*t47123*(2.0/9.0)+b3a*c*t46907*t47123* \
               (2.0/3.0)-b1a*t46911*t47124*t47129*(1.0/3.6E1)+b3a*t46911*t46956*t47124*(1.0/1.2E1))+Aa*a1a*c*t46916* \
               t46929*t46983*t46966*t46976*t46985*(2.0/3.0)-Aa*a1a*c*t46916*t46929*t46948*t46966*t46976*t47154*(2.0/ \
               3.0)-Aa*a1a*c*t46916*t46929*t46948*t46966*t46976*t47146*(2.0/3.0)-Aa*a1a*c*t46929*t46948*t46966*t46976* \
               t46985*t47123*(8.0/9.0)+1/(t46972*t46972*t46972*t46972)*t46929*t46948*t46966*1/(t46975*t46975)*t46967* \
               t46985*t46978*t47153*(1.0/2.0)+Aa*a1a*c*t46916*t46929*t46966*t46976*t46985*(t47062-t47125)*(2.0/3.0) \
               +a1a*c*t46916*t46929*t46948*t46966*t46985*t47070*t47064*t47065*(2.0/3.0))-t46922*t46963*t46957*t46958* \
               2.0+t46951*t46954*t46929*t46948*(t46964-t47122+t47060-t47127)*2.0+a1p*c*c0p*t46942*t46916*(4.0/3.0) \
               +t46943*t46954*t46929*t46965*t46948*8.0-t46951*t46943*t46954*t46929*t47063-Aa*t46929*t46966*t46976* \
               t46985*t46978*t47063*2.0+Aa*t46929*t46948*t46966*t46976*t46978*(t47061-t47145)*2.0-t46929*t46948*t46966* \
               t46985*t46978*t47070*t47064*t47065*2.0+Aa*a1a*c*t46916*t46929*t46948*t46966*t46976*t46985*(4.0/3.0) \
               )-(rho_b[index]*(t47163+t46929*t47023*t47162)+rho_a[index]*(t47160+t46929*t47023*t47159)-t46904*(t46953+ \
               t47110+t47111))*(ccab4*t47115*t47035*t47036*(gamma_aa[index]*gamma_bb[index]*t47030*t47112*t47027* \
               (6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*t47030*t47112*t47035*t47029*(6.4E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t47030*t47112*t47027*t47028*(1.28E2/3.0))-ccab4*1/(t47041*t47041*t47041)*t47035* \
               t47036*t47174*t47179*2.0-ccab2*t47027*1/(t47046*t47046*t47046)*t47029*t47166*t47169*2.0+ccab3*gcab* \
               t47113*t47027*t47028*t47029*(gamma_aa[index]*gamma_bb[index]*t47030*t47112*t47027*(3.2E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t47030*t47112*t47027*t47028*(3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]* \
               t47030*t47112*t47027*t47118*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t47030*t47112*t47027* \
               t47119*(3.2E1/9.0)+ccab2*gamma_bb[index]*t47030*t47116*t47027*t47028*t47166*(8.0/3.0)+ccab2*gamma_aa[index]* \
               t47112*t47116*t47027*t47028*t47169*(8.0/3.0)-ccab3*gcab*1/(t47050*t47050*t47050)*t47027*t47028*t47029* \
               t47183*t47187*2.0+ccab2*gamma_aa[index]*gamma_bb[index]*t47030*t47112*t47035*t47116*t47029*(3.2E1/ \
               9.0)-ccab4*gamma_aa[index]*gamma_bb[index]*t47030*t47112*t47035*t47117*t47029*(6.4E1/3.0)+ccab3*gamma_bb[index]* \
               gcab*t47030*t47113*t47027*t47029*t47183*4.0+ccab3*gamma_aa[index]*gcab*t47112*t47113*t47027*t47029* \
               t47187*4.0+ccab4*gamma_bb[index]*t47030*t47115*t47035*t47028*t47029*t47174*(1.6E1/3.0)+ccab4*gamma_aa[index]* \
               t47112*t47115*t47035*t47028*t47029*t47179*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t47030* \
               t47120*t47112*t47027*t47028*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t47030*t47112*1/ \
               (t47043*t47043*t47043)*t47027*t47028*(3.2E1/9.0))+(t46953+t47110+t47111-t46904*(-t46964+t47122+t47051- \
               t47071+t47156+t46943*t46954*t46929*t46965*t46948*4.0-t46951*t46943*t46954*t46929*t47063+t46951*t46954* \
               t46929*t46948*t47121-Aa*t46929*t46966*t46976*t46985*t46978*t47063*2.0+Aa*a1a*c*t46916*t46929*t46948* \
               t46966*t46976*t46985*(2.0/3.0))+rho_b[index]*(-t47105+t46929*t47023*(t47105-(1/(t47081*t47081)*t47109* \
               (b2f*c*t47082*(1.0/3.0)+b4f*t46911*t47088*(2.0/3.0)+b1f*c*t47082*t47089*(1.0/6.0)+b3f*c*t47082*t47074* \
               (1.0/2.0)))/t47092+a1f*c*c0f*t47107*t47082*(2.0/3.0)-a1p*c*c0p*t47106*t47082*(2.0/3.0))+a1p*c*c0p* \
               t47106*t47082*(2.0/3.0))-c0p*t47106*t47097*2.0-t46929*t47023*t47162)*(ccab1*gamma_aa[index]*gcab*t47112* \
               t47114*(4.0/3.0)-ccab4*t47115*t47035*t47036*t47174-ccab2*t47116*t47027*t47029*t47166-ccab1*gamma_aa[index]* \
               t47112*t47027*t47028*t47118*(4.0/3.0)+ccab2*gamma_aa[index]*t47112*t47027*t47028*t47119*(8.0/3.0)+ \
               ccab3*gamma_aa[index]*gcab*t47120*t47112*t47027*t47029*4.0+ccab4*gamma_aa[index]*t47112*t47035*t47117* \
               t47028*t47029*(1.6E1/3.0)-ccab3*gcab*t47113*t47027*t47028*t47029*t47183);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t47189 = rho_a[index]+rho_b[index];
            double t47190 = 1/pow(t47189,1.0/3.0);
            double t47191 = c*t47190;
            double t47192 = sqrt(t47191);
            double t47193 = b1p*t47192;
            double t47194 = pow(t47191,3.0/2.0);
            double t47195 = b3p*t47194;
            double t47196 = c*c;
            double t47197 = 1/pow(t47189,2.0/3.0);
            double t47198 = b4p*t47196*t47197;
            double t47199 = b2p*c*t47190;
            double t47200 = t47193+t47195+t47198+t47199;
            double t47201 = 1/pow(t47189,4.0/3.0);
            double t47202 = 1/c0p;
            double t47203 = 1/t47200;
            double t47204 = t47202*t47203*(1.0/2.0);
            double t47205 = t47204+1.0;
            double t47206 = a1p*c*t47190;
            double t47207 = t47206+1.0;
            double t47208 = rho_a[index]-rho_b[index];
            double t47209 = t47208*t47208;
            double t47210 = 1/t47189;
            double t47211 = t47210*t47208;
            double t47212 = two_13*2.0;
            double t47213 = t47212-2.0;
            double t47214 = 1/t47213;
            double t47215 = 1/c0f;
            double t47216 = b1f*t47192;
            double t47217 = b3f*t47194;
            double t47218 = b4f*t47196*t47197;
            double t47219 = b2f*c*t47190;
            double t47220 = t47216+t47217+t47218+t47219;
            double t47221 = 1/t47220;
            double t47222 = t47221*t47215*(1.0/2.0);
            double t47223 = t47222+1.0;
            double t47224 = log(t47223);
            double t47225 = a1f*c*t47190;
            double t47226 = t47225+1.0;
            double t47227 = log(t47205);
            double t47238 = c0f*t47224*t47226*2.0;
            double t47239 = c0p*t47207*t47227*2.0;
            double t47228 = t47238-t47239;
            double t47229 = t47211+1.0;
            double t47230 = pow(t47229,4.0/3.0);
            double t47231 = -t47211+1.0;
            double t47232 = pow(t47231,4.0/3.0);
            double t47233 = t47230+t47232-2.0;
            double t47234 = 1/(t47189*t47189);
            double t47235 = t47234*t47208;
            double t47236 = t47210+t47235;
            double t47237 = 1/(t47189*t47189*t47189*t47189);
            double t47240 = t47209*t47209;
            double t47241 = 1/pow(t47189,5.0/3.0);
            double t47242 = 1/sqrt(t47191);
            double t47243 = 1/t47205;
            double t47244 = 1/(t47200*t47200);
            double t47245 = b4p*t47241*t47196*(2.0/3.0);
            double t47246 = b2p*c*t47201*(1.0/3.0);
            double t47247 = b1p*c*t47201*t47242*(1.0/6.0);
            double t47248 = b3p*c*t47201*t47192*(1.0/2.0);
            double t47249 = t47245+t47246+t47247+t47248;
            double t47250 = 1/(t47189*t47189*t47189*t47189*t47189);
            double t47251 = 1/d2fz0;
            double t47252 = 1/Aa;
            double t47253 = b1a*t47192;
            double t47254 = b3a*t47194;
            double t47255 = b4a*t47196*t47197;
            double t47256 = b2a*c*t47190;
            double t47257 = t47253+t47254+t47255+t47256;
            double t47258 = 1/t47257;
            double t47259 = t47252*t47258*(1.0/2.0);
            double t47260 = t47259+1.0;
            double t47261 = log(t47260);
            double t47262 = a1a*c*t47190;
            double t47263 = t47262+1.0;
            double t47264 = pow(t47229,1.0/3.0);
            double t47265 = t47236*t47264*(4.0/3.0);
            double t47266 = pow(t47231,1.0/3.0);
            double t47342 = t47236*t47266*(4.0/3.0);
            double t47267 = -t47342+t47265;
            double t47268 = t47240*t47237;
            double t47269 = t47268-1.0;
            double t47270 = 1/pow(rho_b[index],1.0/3.0);
            double t47271 = c*t47270;
            double t47272 = sqrt(t47271);
            double t47273 = b1f*t47272;
            double t47274 = pow(t47271,3.0/2.0);
            double t47275 = b3f*t47274;
            double t47276 = 1/pow(rho_b[index],2.0/3.0);
            double t47277 = b4f*t47276*t47196;
            double t47278 = b2f*c*t47270;
            double t47279 = t47273+t47275+t47277+t47278;
            double t47280 = 1/pow(rho_b[index],4.0/3.0);
            double t47281 = b1p*t47272;
            double t47282 = b3p*t47274;
            double t47283 = b4p*t47276*t47196;
            double t47284 = b2p*c*t47270;
            double t47285 = t47281+t47282+t47283+t47284;
            double t47286 = 1/pow(rho_b[index],5.0/3.0);
            double t47287 = 1/sqrt(t47271);
            double t47288 = 1/t47279;
            double t47289 = t47215*t47288*(1.0/2.0);
            double t47290 = t47289+1.0;
            double t47291 = 1/t47285;
            double t47292 = t47202*t47291*(1.0/2.0);
            double t47293 = t47292+1.0;
            double t47294 = a1p*c*t47270;
            double t47295 = t47294+1.0;
            double t47296 = 1/t47293;
            double t47297 = 1/(t47285*t47285);
            double t47298 = b4p*t47196*t47286*(2.0/3.0);
            double t47299 = b2p*c*t47280*(1.0/3.0);
            double t47300 = b1p*c*t47280*t47287*(1.0/6.0);
            double t47301 = b3p*c*t47280*t47272*(1.0/2.0);
            double t47302 = t47300+t47301+t47298+t47299;
            double t47303 = t47302*t47295*t47296*t47297;
            double t47304 = log(t47293);
            double t47305 = pow(2.0,1.0/3.0);
            double t47306 = t47305*2.0;
            double t47307 = t47306-2.0;
            double t47308 = log(t47290);
            double t47309 = a1f*c*t47270;
            double t47310 = t47309+1.0;
            double t47311 = gcab*gcab;
            double t47315 = 1/pow(rho_a[index],8.0/3.0);
            double t47316 = gamma_aa[index]*t47315*(1.0/2.0);
            double t47317 = 1/pow(rho_b[index],8.0/3.0);
            double t47318 = gamma_bb[index]*t47317*(1.0/2.0);
            double t47312 = t47316+t47318;
            double t47313 = t47312*t47312;
            double t47314 = 1/pow(rho_b[index],1.1E1/3.0);
            double t47319 = t47311*t47311;
            double t47320 = t47313*t47313;
            double t47321 = t47311*t47313*6.0;
            double t47322 = gcab*t47311*t47312*t47313*4.0;
            double t47323 = t47320*t47319;
            double t47324 = gcab*t47312*4.0;
            double t47325 = t47321+t47322+t47323+t47324+1.0;
            double t47326 = gcab*t47312;
            double t47327 = t47326+1.0;
            double t47328 = t47311*t47313;
            double t47329 = gcab*t47312*2.0;
            double t47330 = t47328+t47329+1.0;
            double t47331 = t47311*t47313*3.0;
            double t47332 = gcab*t47311*t47312*t47313;
            double t47333 = gcab*t47312*3.0;
            double t47334 = t47331+t47332+t47333+1.0;
            double t47335 = a1p*c*c0p*t47201*t47227*(2.0/3.0);
            double t47336 = 1/t47330;
            double t47337 = 1/t47334;
            double t47338 = 1/t47327;
            double t47339 = 1/t47325;
            double t47340 = 1/pow(t47189,7.0/3.0);
            double t47341 = 1/pow(t47189,8.0/3.0);
            double t47343 = 1/t47223;
            double t47344 = 1/(t47220*t47220);
            double t47345 = b4f*t47241*t47196*(2.0/3.0);
            double t47346 = b2f*c*t47201*(1.0/3.0);
            double t47347 = b1f*c*t47201*t47242*(1.0/6.0);
            double t47348 = b3f*c*t47201*t47192*(1.0/2.0);
            double t47349 = t47345+t47346+t47347+t47348;
            double t47350 = t47226*t47343*t47344*t47349;
            double t47352 = t47207*t47243*t47244*t47249;
            double t47353 = a1f*c*c0f*t47201*t47224*(2.0/3.0);
            double t47351 = t47350-t47352+t47335-t47353;
            double t47354 = t47249*t47249;
            double t47355 = 1/pow(t47191,3.0/2.0);
            double t47356 = b4p*t47341*t47196*(1.0E1/9.0);
            double t47357 = b2p*c*t47340*(4.0/9.0);
            double t47358 = b1p*c*t47340*t47242*(2.0/9.0);
            double t47359 = b3p*c*t47340*t47192*(2.0/3.0);
            double t47360 = b3p*t47242*t47341*t47196*(1.0/1.2E1);
            double t47361 = t47360+t47356+t47357+t47358+t47359-b1p*t47341*t47355*t47196*(1.0/3.6E1);
            double t47362 = 1/(t47200*t47200*t47200);
            double t47363 = t47207*t47243*t47362*t47354*2.0;
            double t47364 = t47349*t47349;
            double t47365 = 1/(t47205*t47205);
            double t47366 = 1/(t47200*t47200*t47200*t47200);
            double t47367 = t47234*2.0;
            double t47368 = 1/(t47189*t47189*t47189);
            double t47369 = t47208*t47368*2.0;
            double t47370 = t47367+t47369;
            double t47371 = t47236*t47236;
            double t47372 = a1p*c*c0p*t47340*t47227*(8.0/9.0);
            double t47373 = 1/(t47189*t47189*t47189*t47189*t47189*t47189);
            double t47374 = t47208*t47209*t47237*4.0;
            double t47375 = t47240*t47250*4.0;
            double t47376 = t47374+t47375;
            double t47377 = t47370*t47264*(4.0/3.0);
            double t47378 = 1/pow(t47229,2.0/3.0);
            double t47379 = t47371*t47378*(4.0/9.0);
            double t47380 = 1/pow(t47231,2.0/3.0);
            double t47381 = t47371*t47380*(4.0/9.0);
            double t47382 = t47381+t47377+t47379-t47370*t47266*(4.0/3.0);
            double t47383 = 1/t47260;
            double t47384 = 1/(t47257*t47257);
            double t47385 = b4a*t47241*t47196*(2.0/3.0);
            double t47386 = b2a*c*t47201*(1.0/3.0);
            double t47387 = b1a*c*t47201*t47242*(1.0/6.0);
            double t47388 = b3a*c*t47201*t47192*(1.0/2.0);
            double t47389 = t47385+t47386+t47387+t47388;
            double t47390 = t47389*t47389;
            double t47391 = 1/t47290;
            double t47392 = b4f*t47196*t47286*(2.0/3.0);
            double t47393 = b2f*c*t47280*(1.0/3.0);
            double t47394 = b1f*c*t47280*t47287*(1.0/6.0);
            double t47395 = b3f*c*t47280*t47272*(1.0/2.0);
            double t47396 = t47392+t47393+t47394+t47395;
            double t47397 = 1/(t47279*t47279);
            double t47398 = 1/pow(rho_b[index],7.0/3.0);
            double t47399 = 1/pow(t47271,3.0/2.0);
            double t47400 = t47396*t47396;
            double t47401 = t47302*t47302;
            double t47402 = 1/(t47285*t47285*t47285);
            double t47403 = t47401*t47402*t47295*t47296*2.0;
            double t47404 = b4p*t47317*t47196*(1.0E1/9.0);
            double t47405 = b2p*c*t47398*(4.0/9.0);
            double t47406 = b3p*t47317*t47196*t47287*(1.0/1.2E1);
            double t47407 = b1p*c*t47287*t47398*(2.0/9.0);
            double t47408 = b3p*c*t47272*t47398*(2.0/3.0);
            double t47561 = b1p*t47317*t47196*t47399*(1.0/3.6E1);
            double t47409 = t47404+t47405+t47406+t47407+t47408-t47561;
            double t47410 = 1/(t47293*t47293);
            double t47411 = 1/(t47285*t47285*t47285*t47285);
            double t47412 = a1p*c*c0p*t47304*t47398*(8.0/9.0);
            double t47413 = a1f*c*c0f*t47280*t47308*(2.0/3.0);
            double t47414 = a1p*c*c0p*t47304*t47280*(2.0/3.0);
            double t47486 = t47310*t47391*t47396*t47397;
            double t47415 = t47303+t47413-t47414-t47486;
            double t47416 = gamma_bb[index]*gamma_bb[index];
            double t47417 = gcaa*gcaa;
            double t47418 = t47416*t47416;
            double t47419 = t47417*t47417;
            double t47420 = 1/pow(rho_b[index],3.2E1/3.0);
            double t47421 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t47422 = 1/pow(rho_b[index],1.6E1/3.0);
            double t47423 = 1/pow(rho_a[index],1.0/3.0);
            double t47424 = c*t47423;
            double t47425 = sqrt(t47424);
            double t47426 = pow(t47424,3.0/2.0);
            double t47427 = 1/pow(rho_a[index],2.0/3.0);
            double t47428 = b1p*t47425;
            double t47429 = b3p*t47426;
            double t47430 = b4p*t47427*t47196;
            double t47431 = b2p*c*t47423;
            double t47432 = t47430+t47431+t47428+t47429;
            double t47433 = 1/t47432;
            double t47434 = t47202*t47433*(1.0/2.0);
            double t47435 = t47434+1.0;
            double t47436 = log(t47435);
            double t47437 = a1p*c*t47423;
            double t47438 = t47437+1.0;
            double t47439 = c0p*t47436*t47438*2.0;
            double t47440 = c0f*t47310*t47308*2.0;
            double t47442 = c0p*t47304*t47295*2.0;
            double t47441 = t47440-t47442;
            double t47443 = t47240*t47214*t47233*t47228*t47237;
            double t47444 = Aa*t47214*t47233*t47251*t47261*t47263*t47269*2.0;
            double t47445 = gamma_bb[index]*gcab*t47314*(1.6E1/3.0);
            double t47446 = gamma_bb[index]*gcab*t47311*t47313*t47314*1.6E1;
            double t47447 = gamma_bb[index]*t47312*t47313*t47314*t47319*(1.6E1/3.0);
            double t47448 = gamma_bb[index]*t47311*t47312*t47314*1.6E1;
            double t47449 = t47445+t47446+t47447+t47448;
            double t47450 = 1/(t47327*t47327);
            double t47451 = 1/pow(rho_b[index],2.2E1/3.0);
            double t47452 = gamma_bb[index]*gcab*t47314*(8.0/3.0);
            double t47453 = gamma_bb[index]*t47311*t47312*t47314*(8.0/3.0);
            double t47454 = t47452+t47453;
            double t47455 = 1/(t47334*t47334);
            double t47456 = 1/pow(rho_b[index],1.4E1/3.0);
            double t47457 = 1/(t47325*t47325);
            double t47458 = 1/(t47330*t47330);
            double t47459 = gamma_bb[index]*gcab*t47314*4.0;
            double t47460 = gamma_bb[index]*gcab*t47311*t47313*t47314*4.0;
            double t47461 = gamma_bb[index]*t47311*t47312*t47314*8.0;
            double t47462 = t47460+t47461+t47459;
            double t47463 = t47214*t47441*t47307;
            double t47464 = t47442+t47463;
            double t47465 = gamma_bb[index]*gcaa*t47317*4.0;
            double t47466 = gamma_bb[index]*gcaa*t47421*t47416*t47417*4.0;
            double t47467 = t47422*t47416*t47417*6.0;
            double t47468 = t47420*t47418*t47419;
            double t47469 = t47465+t47466+t47467+t47468+1.0;
            double t47470 = 1/t47469;
            double t47471 = gamma_bb[index]*gcaa*t47317;
            double t47472 = t47471+1.0;
            double t47473 = 1/t47472;
            double t47474 = gamma_bb[index]*gcaa*t47317*3.0;
            double t47475 = gamma_bb[index]*gcaa*t47421*t47416*t47417;
            double t47476 = t47422*t47416*t47417*3.0;
            double t47477 = t47474+t47475+t47476+1.0;
            double t47478 = 1/t47477;
            double t47479 = gamma_bb[index]*gcaa*t47317*2.0;
            double t47480 = t47422*t47416*t47417;
            double t47481 = t47480+t47479+1.0;
            double t47482 = 1/t47481;
            double t47483 = 1/pow(rho_b[index],1.9E1/3.0);
            double t47484 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t47485 = 1/pow(rho_b[index],3.5E1/3.0);
            double t47487 = t47214*t47307*t47415;
            double t47488 = ccaa4*t47470*t47418*t47419*t47485*(3.2E1/3.0);
            double t47489 = ccaa1*gamma_bb[index]*gcaa*t47314*t47473*(8.0/3.0);
            double t47490 = ccaa3*gamma_bb[index]*gcaa*t47416*t47417*t47484*t47478*8.0;
            double t47491 = ccaa2*t47416*t47417*t47482*t47483*(1.6E1/3.0);
            double t47492 = 1/(t47472*t47472);
            double t47493 = gamma_bb[index]*gcaa*t47314*8.0;
            double t47494 = gamma_bb[index]*gcaa*t47416*t47417*t47484*8.0;
            double t47495 = t47416*t47417*t47483*1.6E1;
            double t47496 = t47493+t47494+t47495;
            double t47497 = 1/(t47477*t47477);
            double t47498 = gamma_bb[index]*gcaa*t47314*(3.2E1/3.0);
            double t47499 = gamma_bb[index]*gcaa*t47416*t47417*t47484*3.2E1;
            double t47500 = t47416*t47417*t47483*3.2E1;
            double t47501 = t47418*t47419*t47485*(3.2E1/3.0);
            double t47502 = t47500+t47501+t47498+t47499;
            double t47503 = 1/(t47469*t47469);
            double t47504 = gamma_bb[index]*gcaa*t47314*(1.6E1/3.0);
            double t47505 = t47416*t47417*t47483*(1.6E1/3.0);
            double t47506 = t47504+t47505;
            double t47507 = 1/(t47481*t47481);
            double t47508 = t47490+t47491+t47488+t47489-ccaa1*t47416*t47417*t47483*t47492*(8.0/3.0)-ccaa4*t47420* \
               t47502*t47503*t47418*t47419-ccaa2*t47422*t47416*t47506*t47417*t47507-ccaa3*gamma_bb[index]*gcaa*t47421* \
               t47416*t47417*t47496*t47497;
            double t47509 = -t47303+t47414+t47487;
            double t47510 = gx*gx;
            double t47511 = t47510*t47510;
            double t47512 = 1/pow(rho_b[index],1.0E1);
            double t47513 = gamma_bb[index]*gx*t47317;
            double t47514 = t47513+1.0;
            double t47534 = gamma_bb[index]*gx*t47314*(3.2E1/3.0);
            double t47535 = gamma_bb[index]*gx*t47510*t47416*t47484*3.2E1;
            double t47536 = t47510*t47416*t47483*3.2E1;
            double t47537 = t47511*t47418*t47485*(3.2E1/3.0);
            double t47515 = t47534+t47535+t47536+t47537;
            double t47516 = gamma_bb[index]*gx*t47317*4.0;
            double t47517 = gamma_bb[index]*gx*t47510*t47421*t47416*4.0;
            double t47518 = t47510*t47422*t47416*6.0;
            double t47519 = t47420*t47511*t47418;
            double t47520 = t47516+t47517+t47518+t47519+1.0;
            double t47540 = gamma_bb[index]*gx*t47314*(1.6E1/3.0);
            double t47541 = t47510*t47416*t47483*(1.6E1/3.0);
            double t47521 = t47540+t47541;
            double t47522 = gamma_bb[index]*gx*t47317*2.0;
            double t47523 = t47510*t47422*t47416;
            double t47524 = t47522+t47523+1.0;
            double t47525 = gamma_bb[index]*gx*t47317*3.0;
            double t47526 = gamma_bb[index]*gx*t47510*t47421*t47416;
            double t47527 = t47510*t47422*t47416*3.0;
            double t47528 = t47525+t47526+t47527+1.0;
            double t47529 = 1/(t47528*t47528);
            double t47530 = gamma_bb[index]*gx*t47314*8.0;
            double t47531 = gamma_bb[index]*gx*t47510*t47416*t47484*8.0;
            double t47532 = t47510*t47416*t47483*1.6E1;
            double t47533 = t47530+t47531+t47532;
            double t47538 = 1/pow(rho_b[index],3.8E1/3.0);
            double t47539 = 1/(t47520*t47520);
            double t47542 = 1/(t47524*t47524);
            double t47543 = 1/t47520;
            double t47544 = 1/t47514;
            double t47545 = 1/t47528;
            double t47546 = 1/t47524;
            double t47547 = 1/(t47514*t47514);
            double t47548 = ccaa4*t47420*t47470*t47418*t47419;
            double t47549 = ccaa1*gamma_bb[index]*gcaa*t47317*t47473;
            double t47550 = ccaa3*gamma_bb[index]*gcaa*t47421*t47416*t47417*t47478;
            double t47551 = ccaa2*t47422*t47416*t47417*t47482;
            double t47552 = ccaa0+t47550+t47551+t47548+t47549;
            double t47553 = 1/(t47279*t47279*t47279);
            double t47554 = b4f*t47317*t47196*(1.0E1/9.0);
            double t47555 = b2f*c*t47398*(4.0/9.0);
            double t47556 = b3f*t47317*t47196*t47287*(1.0/1.2E1);
            double t47557 = b1f*c*t47287*t47398*(2.0/9.0);
            double t47558 = b3f*c*t47272*t47398*(2.0/3.0);
            double t47559 = t47554+t47555+t47556+t47557+t47558-b1f*t47317*t47196*t47399*(1.0/3.6E1);
            double t47560 = t47310*t47391*t47397*t47559;
            double t47562 = t47409*t47295*t47296*t47297;
            double t47563 = 1/(t47290*t47290);
            double t47564 = 1/(t47279*t47279*t47279*t47279);
            double t47565 = t47310*t47400*t47215*t47563*t47564*(1.0/2.0);
            double t47566 = t47202*t47401*t47410*t47411*t47295*(1.0/2.0);
            double t47567 = a1f*c*t47280*t47391*t47396*t47397*(2.0/3.0);
            double t47568 = a1p*c*t47302*t47280*t47296*t47297*(2.0/3.0);
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t47312*t47338+ccab2*t47311*t47313*t47336+ccab4*t47320*t47319* \
               t47339+ccab3*gcab*t47311*t47312*t47313*t47337)*(-rho_b[index]*(-t47403-t47412+t47562+t47566+t47568+ \
               t47214*t47307*(t47403+t47412+t47560+t47565+t47567-t47310*t47400*t47391*t47553*2.0-t47409*t47295*t47296* \
               t47297-a1f*c*c0f*t47308*t47398*(8.0/9.0)-t47202*t47401*t47410*t47411*t47295*(1.0/2.0)-a1p*c*t47302* \
               t47280*t47296*t47297*(2.0/3.0)))-t47189*(t47363+t47372-t47207*t47243*t47244*t47361-t47240*t47214*t47233* \
               t47237*(t47363+t47372-t47207*t47243*t47244*t47361-1/(t47220*t47220*t47220)*t47226*t47343*t47364*2.0+ \
               t47226*t47343*t47344*(b2f*c*t47340*(4.0/9.0)+b4f*t47341*t47196*(1.0E1/9.0)+b1f*c*t47340*t47242*(2.0/ \
               9.0)+b3f*c*t47340*t47192*(2.0/3.0)-b1f*t47341*t47355*t47196*(1.0/3.6E1)+b3f*t47242*t47341*t47196*(1.0/ \
               1.2E1))+1/(t47220*t47220*t47220*t47220)*1/(t47223*t47223)*t47215*t47226*t47364*(1.0/2.0)-a1f*c*c0f* \
               t47340*t47224*(8.0/9.0)-t47202*t47207*t47354*t47365*t47366*(1.0/2.0)+a1f*c*t47201*t47343*t47344*t47349* \
               (2.0/3.0)-a1p*c*t47201*t47243*t47244*t47249*(2.0/3.0))-t47240*t47214*t47250*t47233*t47351*8.0+t47240* \
               t47214*t47233*t47228*t47373*2.0E1+t47240*t47214*t47250*t47228*t47267*8.0-t47240*t47214*t47351*t47237* \
               t47267*2.0+t47240*t47214*t47228*t47237*t47382+t47214*t47233*t47209*t47228*t47237*1.2E1-t47202*t47207* \
               t47354*t47365*t47366*(1.0/2.0)+t47214*t47250*t47233*t47208*t47209*t47228*3.2E1-t47214*t47233*t47351* \
               t47208*t47209*t47237*8.0+t47214*t47208*t47209*t47228*t47237*t47267*8.0-a1p*c*t47201*t47243*t47244* \
               t47249*(2.0/3.0)+Aa*t47214*t47251*t47261*t47263*t47382*t47269*2.0+Aa*t47214*t47251*t47261*t47263*t47267* \
               t47376*4.0+Aa*t47214*t47233*t47251*t47261*t47263*(t47240*t47373*2.0E1+t47209*t47237*1.2E1+t47250*t47208* \
               t47209*3.2E1)*2.0-t47214*t47233*t47251*t47263*t47383*t47384*t47376*t47389*2.0-t47214*t47251*t47263* \
               t47383*t47267*t47384*t47269*t47389*2.0+t47214*t47233*t47251*t47263*t47390*1/(t47257*t47257*t47257) \
               *t47383*t47269*2.0-t47214*t47233*t47251*t47263*t47383*t47384*t47269*(b2a*c*t47340*(4.0/9.0)+b4a*t47341* \
               t47196*(1.0E1/9.0)+b1a*c*t47340*t47242*(2.0/9.0)+b3a*c*t47340*t47192*(2.0/3.0)-b1a*t47341*t47355*t47196* \
               (1.0/3.6E1)+b3a*t47242*t47341*t47196*(1.0/1.2E1))+Aa*a1a*c*t47201*t47214*t47233*t47251*t47261*t47376* \
               (4.0/3.0)+Aa*a1a*c*t47214*t47340*t47233*t47251*t47261*t47269*(8.0/9.0)+Aa*a1a*c*t47201*t47214*t47251* \
               t47261*t47267*t47269*(4.0/3.0)-t47214*t47233*t47251*1/(t47260*t47260)*t47252*t47263*t47390*1/(t47257* \
               t47257*t47257*t47257)*t47269*(1.0/2.0)-a1a*c*t47201*t47214*t47233*t47251*t47383*t47384*t47269*t47389* \
               (2.0/3.0))-t47214*t47307*t47415*2.0-t47207*t47243*t47244*t47249*2.0+t47302*t47295*t47296*t47297*2.0+ \
               a1p*c*c0p*t47201*t47227*(4.0/3.0)-a1p*c*c0p*t47304*t47280*(4.0/3.0)+t47240*t47214*t47250*t47233*t47228* \
               8.0-t47240*t47214*t47233*t47351*t47237*2.0+t47240*t47214*t47228*t47237*t47267*2.0+t47214*t47233*t47208* \
               t47209*t47228*t47237*8.0+Aa*t47214*t47233*t47251*t47261*t47263*t47376*4.0+Aa*t47214*t47251*t47261* \
               t47263*t47267*t47269*4.0-t47214*t47233*t47251*t47263*t47383*t47384*t47269*t47389*2.0+Aa*a1a*c*t47201* \
               t47214*t47233*t47251*t47261*t47269*(4.0/3.0))+(rho_b[index]*t47464+rho_a[index]*(t47439-t47214*t47307* \
               (t47439-c0f*log((t47215*(1.0/2.0))/(b1f*t47425+b3f*t47426+b2f*c*t47423+b4f*t47427*t47196)+1.0)*(a1f* \
               c*t47423+1.0)*2.0))-t47189*(t47443+t47444+t47239))*(-ccab2*t47311*t47313*t47458*(gamma_bb[index]*gcab* \
               t47456*(8.8E1/9.0)+t47311*t47451*t47416*(3.2E1/9.0)+gamma_bb[index]*t47311*t47312*t47456*(8.8E1/9.0) \
               )+ccab2*t47311*1/(t47330*t47330*t47330)*t47313*(t47454*t47454)*2.0+ccab4*t47320*1/(t47325*t47325*t47325) \
               *t47319*(t47449*t47449)*2.0+ccab1*gamma_bb[index]*gcab*t47338*t47456*(4.4E1/9.0)-ccab1*t47311*t47450* \
               t47451*t47416*(3.2E1/9.0)+ccab2*t47311*t47451*t47416*t47336*(3.2E1/9.0)-ccab4*t47320*t47319*t47457* \
               (gamma_bb[index]*gcab*t47456*(1.76E2/9.0)+t47311*t47451*t47416*(6.4E1/3.0)+gamma_bb[index]*t47311* \
               t47312*t47456*(1.76E2/3.0)+t47313*t47451*t47416*t47319*(6.4E1/3.0)+gamma_bb[index]*gcab*t47311*t47313* \
               t47456*(1.76E2/3.0)+gamma_bb[index]*t47312*t47313*t47319*t47456*(1.76E2/9.0)+gcab*t47311*t47312*t47451* \
               t47416*(1.28E2/3.0))+ccab4*t47313*t47451*t47416*t47319*t47339*(6.4E1/3.0)-ccab1*gamma_bb[index]*t47311* \
               t47312*t47450*t47456*(4.4E1/9.0)+ccab2*gamma_bb[index]*t47311*t47312*t47336*t47456*(8.8E1/9.0)+ccab3* \
               gcab*t47311*t47312*t47313*1/(t47334*t47334*t47334)*(t47462*t47462)*2.0+ccab3*gamma_bb[index]*gcab* \
               t47311*t47313*t47337*t47456*(4.4E1/3.0)-ccab2*gamma_bb[index]*t47311*t47312*t47314*t47454*t47458*(1.6E1/ \
               3.0)+ccab4*gamma_bb[index]*t47312*t47313*t47319*t47339*t47456*(1.76E2/9.0)+ccab3*gcab*t47311*t47312* \
               t47451*t47416*t47337*(3.2E1/3.0)+ccab1*gcab*t47311*t47312*t47451*t47416*1/(t47327*t47327*t47327)*(3.2E1/ \
               9.0)-ccab3*gcab*t47311*t47312*t47313*t47455*(gamma_bb[index]*gcab*t47456*(4.4E1/3.0)+t47311*t47451* \
               t47416*(3.2E1/3.0)+gamma_bb[index]*t47311*t47312*t47456*(8.8E1/3.0)+gamma_bb[index]*gcab*t47311*t47313* \
               t47456*(4.4E1/3.0)+gcab*t47311*t47312*t47451*t47416*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t47311* \
               t47313*t47314*t47462*t47455*8.0-ccab4*gamma_bb[index]*t47312*t47313*t47314*t47319*t47457*t47449*(3.2E1/ \
               3.0))+(t47443+t47444+t47239+rho_b[index]*(-t47303+t47414+t47214*t47307*(t47303+t47413-t47310*t47391* \
               t47396*t47397-a1p*c*c0p*t47304*t47280*(2.0/3.0)))-t47189*(t47335-t47207*t47243*t47244*t47249+t47240* \
               t47214*t47250*t47233*t47228*4.0-t47240*t47214*t47233*t47351*t47237+t47240*t47214*t47228*t47237*t47267+ \
               t47214*t47233*t47208*t47209*t47228*t47237*4.0+Aa*t47214*t47233*t47251*t47261*t47263*t47376*2.0+Aa* \
               t47214*t47251*t47261*t47263*t47267*t47269*2.0-t47214*t47233*t47251*t47263*t47383*t47384*t47269*t47389+ \
               Aa*a1a*c*t47201*t47214*t47233*t47251*t47261*t47269*(2.0/3.0))-c0p*t47304*t47295*2.0-t47214*t47441* \
               t47307)*(ccab1*gamma_bb[index]*gcab*t47314*t47338*(4.0/3.0)-ccab2*t47311*t47313*t47454*t47458-ccab4* \
               t47320*t47319*t47457*t47449-ccab1*gamma_bb[index]*t47311*t47312*t47314*t47450*(4.0/3.0)+ccab2*gamma_bb[index]* \
               t47311*t47312*t47314*t47336*(8.0/3.0)+ccab3*gamma_bb[index]*gcab*t47311*t47313*t47314*t47337*4.0+ccab4* \
               gamma_bb[index]*t47312*t47313*t47314*t47319*t47339*(1.6E1/3.0)-ccab3*gcab*t47311*t47312*t47313*t47462* \
               t47455)*2.0+t47552*t47509*2.0+t47508*t47464*2.0-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]* \
               gx*t47314*t47544*(8.0/3.0)-cx1*t47510*t47416*t47483*t47547*(8.0/3.0)+cx2*t47510*t47416*t47483*t47546* \
               (1.6E1/3.0)+cx4*t47511*t47543*t47418*t47485*(3.2E1/3.0)-cx2*t47510*t47422*t47521*t47416*t47542-cx4* \
               t47420*t47511*t47515*t47418*t47539+cx3*gamma_bb[index]*gx*t47510*t47416*t47545*t47484*8.0-cx3*gamma_bb[index]* \
               gx*t47510*t47421*t47416*t47533*t47529)*(8.0/3.0)-rho_b[index]*t47464*(ccaa1*gamma_bb[index]*gcaa*t47473* \
               t47456*(8.8E1/9.0)-ccaa1*t47451*t47416*t47417*t47492*2.4E1+ccaa2*t47451*t47416*t47417*t47482*(3.04E2/ \
               9.0)+ccaa4*t47470*t47418*t47419*t47538*(1.12E3/9.0)-ccaa2*t47416*t47506*t47417*t47507*t47483*(3.2E1/ \
               3.0)-ccaa4*t47502*t47503*t47418*t47419*t47485*(6.4E1/3.0)-ccaa2*t47422*t47416*t47417*t47507*(gamma_bb[index]* \
               gcaa*t47456*(1.76E2/9.0)+t47451*t47416*t47417*(3.04E2/9.0))-ccaa4*t47420*t47503*t47418*t47419*(gamma_bb[index]* \
               gcaa*t47456*(3.52E2/9.0)+t47451*t47416*t47417*(6.08E2/3.0)+t47418*t47419*t47538*(1.12E3/9.0)+gamma_bb[index]* \
               gcaa*t47512*t47416*t47417*2.88E2)+ccaa2*t47422*t47416*(t47506*t47506)*t47417*1/(t47481*t47481*t47481) \
               *2.0+ccaa4*t47420*(t47502*t47502)*t47418*t47419*1/(t47469*t47469*t47469)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t47512*t47416*t47417*t47478*7.2E1+ccaa1*gamma_bb[index]*gcaa*t47512*t47416*t47417*1/(t47472*t47472* \
               t47472)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t47421*t47416*t47417*1/(t47477*t47477*t47477)*(t47496* \
               t47496)*2.0-ccaa3*gamma_bb[index]*gcaa*t47421*t47416*t47417*t47497*(gamma_bb[index]*gcaa*t47456*(8.8E1/ \
               3.0)+t47451*t47416*t47417*(3.04E2/3.0)+gamma_bb[index]*gcaa*t47512*t47416*t47417*7.2E1)-ccaa3*gamma_bb[index]* \
               gcaa*t47416*t47417*t47484*t47496*t47497*1.6E1)+rho_b[index]*t47552*(-t47403-t47412+t47562+t47566+t47568+ \
               t47214*t47307*(t47403+t47412+t47560-t47562+t47565-t47566+t47567-t47568-t47310*t47400*t47391*t47553* \
               2.0-a1f*c*c0f*t47308*t47398*(8.0/9.0)))-rho_b[index]*t47508*t47509*2.0+c0*pow(rho_b[index],4.0/3.0) \
               *(cx1*gamma_bb[index]*gx*t47544*t47456*(8.8E1/9.0)-cx1*t47510*t47451*t47416*t47547*2.4E1+cx2*t47510* \
               t47451*t47416*t47546*(3.04E2/9.0)+cx4*t47511*t47543*t47418*t47538*(1.12E3/9.0)-cx2*t47510*t47521*t47416* \
               t47542*t47483*(3.2E1/3.0)-cx4*t47511*t47515*t47418*t47485*t47539*(6.4E1/3.0)-cx2*t47510*t47422*t47416* \
               t47542*(gamma_bb[index]*gx*t47456*(1.76E2/9.0)+t47510*t47451*t47416*(3.04E2/9.0))-cx4*t47420*t47511* \
               t47418*t47539*(gamma_bb[index]*gx*t47456*(3.52E2/9.0)+t47510*t47451*t47416*(6.08E2/3.0)+t47511*t47418* \
               t47538*(1.12E3/9.0)+gamma_bb[index]*gx*t47510*t47512*t47416*2.88E2)+cx2*t47510*t47422*(t47521*t47521) \
               *t47416*1/(t47524*t47524*t47524)*2.0+cx4*t47420*t47511*1/(t47520*t47520*t47520)*(t47515*t47515)*t47418* \
               2.0+cx3*gamma_bb[index]*gx*t47510*t47512*t47416*t47545*7.2E1+cx1*gamma_bb[index]*gx*t47510*t47512* \
               1/(t47514*t47514*t47514)*t47416*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t47510*t47421*t47416*(t47533*t47533) \
               *1/(t47528*t47528*t47528)*2.0-cx3*gamma_bb[index]*gx*t47510*t47421*t47416*t47529*(gamma_bb[index]* \
               gx*t47456*(8.8E1/3.0)+t47510*t47451*t47416*(3.04E2/3.0)+gamma_bb[index]*gx*t47510*t47512*t47416*7.2E1) \
               -cx3*gamma_bb[index]*gx*t47510*t47416*t47533*t47484*t47529*1.6E1)+c0*t47276*(cx0+cx1*gamma_bb[index]* \
               gx*t47317*t47544+cx2*t47510*t47422*t47416*t47546+cx4*t47420*t47511*t47543*t47418+cx3*gamma_bb[index]* \
               gx*t47510*t47421*t47416*t47545)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t49335 = 1/pow(rho_b[index],1.0/3.0);
            double t49336 = c*t49335;
            double t49337 = sqrt(t49336);
            double t49338 = b1f*t49337;
            double t49339 = pow(t49336,3.0/2.0);
            double t49340 = b3f*t49339;
            double t49341 = c*c;
            double t49342 = 1/pow(rho_b[index],2.0/3.0);
            double t49343 = b4f*t49341*t49342;
            double t49344 = b2f*c*t49335;
            double t49345 = t49340+t49343+t49344+t49338;
            double t49346 = 1/pow(rho_b[index],4.0/3.0);
            double t49347 = b1p*t49337;
            double t49348 = b3p*t49339;
            double t49349 = b4p*t49341*t49342;
            double t49350 = b2p*c*t49335;
            double t49351 = t49350+t49347+t49348+t49349;
            double t49352 = 1/pow(rho_b[index],5.0/3.0);
            double t49353 = 1/sqrt(t49336);
            double t49354 = 1/c0f;
            double t49355 = 1/t49345;
            double t49356 = t49354*t49355*(1.0/2.0);
            double t49357 = t49356+1.0;
            double t49358 = 1/c0p;
            double t49359 = 1/t49351;
            double t49360 = t49358*t49359*(1.0/2.0);
            double t49361 = t49360+1.0;
            double t49362 = a1p*c*t49335;
            double t49363 = t49362+1.0;
            double t49364 = 1/t49361;
            double t49365 = 1/(t49351*t49351);
            double t49366 = b4p*t49341*t49352*(2.0/3.0);
            double t49367 = b2p*c*t49346*(1.0/3.0);
            double t49368 = b1p*c*t49353*t49346*(1.0/6.0);
            double t49369 = b3p*c*t49337*t49346*(1.0/2.0);
            double t49370 = t49366+t49367+t49368+t49369;
            double t49371 = t49370*t49363*t49364*t49365;
            double t49372 = log(t49361);
            double t49373 = gamma_bb[index]*gamma_bb[index];
            double t49374 = gcaa*gcaa;
            double t49375 = t49373*t49373;
            double t49376 = t49374*t49374;
            double t49377 = 1/pow(rho_b[index],3.2E1/3.0);
            double t49378 = 1/pow(rho_b[index],8.0/3.0);
            double t49379 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t49380 = 1/pow(rho_b[index],1.6E1/3.0);
            double t49381 = pow(2.0,1.0/3.0);
            double t49382 = t49381*2.0;
            double t49383 = t49382-2.0;
            double t49384 = two_13*2.0;
            double t49385 = t49384-2.0;
            double t49386 = 1/t49385;
            double t49387 = log(t49357);
            double t49388 = a1f*c*t49335;
            double t49389 = t49388+1.0;
            double t49390 = gamma_bb[index]*gcaa*t49378*4.0;
            double t49391 = gamma_bb[index]*gcaa*t49373*t49374*t49379*4.0;
            double t49392 = t49380*t49373*t49374*6.0;
            double t49393 = t49375*t49376*t49377;
            double t49394 = t49390+t49391+t49392+t49393+1.0;
            double t49395 = 1/t49394;
            double t49396 = gamma_bb[index]*gcaa*t49378;
            double t49397 = t49396+1.0;
            double t49398 = 1/t49397;
            double t49399 = gamma_bb[index]*gcaa*t49378*3.0;
            double t49400 = gamma_bb[index]*gcaa*t49373*t49374*t49379;
            double t49401 = t49380*t49373*t49374*3.0;
            double t49402 = t49400+t49401+t49399+1.0;
            double t49403 = 1/t49402;
            double t49404 = gamma_bb[index]*gcaa*t49378*2.0;
            double t49405 = t49380*t49373*t49374;
            double t49406 = t49404+t49405+1.0;
            double t49407 = 1/t49406;
            double t49408 = 1/pow(rho_b[index],1.9E1/3.0);
            double t49409 = 1/pow(rho_b[index],1.1E1/3.0);
            double t49410 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t49411 = 1/pow(rho_b[index],3.5E1/3.0);
            double t49412 = 1/t49357;
            double t49413 = 1/(t49345*t49345);
            double t49414 = b4f*t49341*t49352*(2.0/3.0);
            double t49415 = b2f*c*t49346*(1.0/3.0);
            double t49416 = b1f*c*t49353*t49346*(1.0/6.0);
            double t49417 = b3f*c*t49337*t49346*(1.0/2.0);
            double t49418 = t49414+t49415+t49416+t49417;
            double t49419 = a1f*c*c0f*t49346*t49387*(2.0/3.0);
            double t49420 = a1p*c*c0p*t49372*t49346*(2.0/3.0);
            double t49421 = ccaa4*t49411*t49375*t49376*t49395*(3.2E1/3.0);
            double t49422 = ccaa1*gamma_bb[index]*gcaa*t49409*t49398*(8.0/3.0);
            double t49423 = ccaa3*gamma_bb[index]*gcaa*t49410*t49403*t49373*t49374*8.0;
            double t49424 = ccaa2*t49407*t49408*t49373*t49374*(1.6E1/3.0);
            double t49425 = 1/(t49397*t49397);
            double t49426 = gamma_bb[index]*gcaa*t49409*8.0;
            double t49427 = gamma_bb[index]*gcaa*t49410*t49373*t49374*8.0;
            double t49428 = t49408*t49373*t49374*1.6E1;
            double t49429 = t49426+t49427+t49428;
            double t49430 = 1/(t49402*t49402);
            double t49431 = gamma_bb[index]*gcaa*t49409*(3.2E1/3.0);
            double t49432 = gamma_bb[index]*gcaa*t49410*t49373*t49374*3.2E1;
            double t49433 = t49408*t49373*t49374*3.2E1;
            double t49434 = t49411*t49375*t49376*(3.2E1/3.0);
            double t49435 = t49431+t49432+t49433+t49434;
            double t49436 = 1/(t49394*t49394);
            double t49437 = gamma_bb[index]*gcaa*t49409*(1.6E1/3.0);
            double t49438 = t49408*t49373*t49374*(1.6E1/3.0);
            double t49439 = t49437+t49438;
            double t49440 = 1/(t49406*t49406);
            double t49441 = t49421+t49422+t49423+t49424-ccaa1*t49425*t49408*t49373*t49374*(8.0/3.0)-ccaa2*t49440* \
               t49380*t49373*t49374*t49439-ccaa4*t49435*t49436*t49375*t49376*t49377-ccaa3*gamma_bb[index]*gcaa*t49430* \
               t49373*t49374*t49429*t49379;
            double t49442 = gx*gx;
            double t49443 = t49442*t49442;
            double t49444 = 1/pow(rho_b[index],1.0E1);
            double t49445 = gamma_bb[index]*gx*t49378;
            double t49446 = t49445+1.0;
            double t49447 = 1/pow(rho_b[index],2.2E1/3.0);
            double t49468 = gamma_bb[index]*gx*t49409*(3.2E1/3.0);
            double t49469 = gamma_bb[index]*gx*t49410*t49442*t49373*3.2E1;
            double t49470 = t49442*t49408*t49373*3.2E1;
            double t49471 = t49411*t49443*t49375*(3.2E1/3.0);
            double t49448 = t49470+t49471+t49468+t49469;
            double t49449 = gamma_bb[index]*gx*t49378*4.0;
            double t49450 = gamma_bb[index]*gx*t49442*t49373*t49379*4.0;
            double t49451 = t49442*t49380*t49373*6.0;
            double t49452 = t49443*t49375*t49377;
            double t49453 = t49450+t49451+t49452+t49449+1.0;
            double t49474 = gamma_bb[index]*gx*t49409*(1.6E1/3.0);
            double t49475 = t49442*t49408*t49373*(1.6E1/3.0);
            double t49454 = t49474+t49475;
            double t49455 = gamma_bb[index]*gx*t49378*2.0;
            double t49456 = t49442*t49380*t49373;
            double t49457 = t49455+t49456+1.0;
            double t49458 = gamma_bb[index]*gx*t49378*3.0;
            double t49459 = gamma_bb[index]*gx*t49442*t49373*t49379;
            double t49460 = t49442*t49380*t49373*3.0;
            double t49461 = t49460+t49458+t49459+1.0;
            double t49462 = 1/pow(rho_b[index],1.4E1/3.0);
            double t49463 = 1/(t49461*t49461);
            double t49464 = gamma_bb[index]*gx*t49409*8.0;
            double t49465 = gamma_bb[index]*gx*t49410*t49442*t49373*8.0;
            double t49466 = t49442*t49408*t49373*1.6E1;
            double t49467 = t49464+t49465+t49466;
            double t49472 = 1/pow(rho_b[index],3.8E1/3.0);
            double t49473 = 1/(t49453*t49453);
            double t49476 = 1/(t49457*t49457);
            double t49477 = 1/t49453;
            double t49478 = 1/t49446;
            double t49479 = 1/t49461;
            double t49480 = 1/t49457;
            double t49481 = c0f*t49387*t49389*2.0;
            double t49482 = c0p*t49363*t49372*2.0;
            double t49483 = 1/(t49446*t49446);
            double t49484 = ccaa4*t49375*t49376*t49377*t49395;
            double t49485 = ccaa1*gamma_bb[index]*gcaa*t49378*t49398;
            double t49486 = ccaa3*gamma_bb[index]*gcaa*t49403*t49373*t49374*t49379;
            double t49487 = ccaa2*t49380*t49407*t49373*t49374;
            double t49488 = ccaa0+t49484+t49485+t49486+t49487;
            double t49489 = 1/pow(rho_b[index],7.0/3.0);
            double t49490 = 1/pow(t49336,3.0/2.0);
            double t49491 = t49418*t49418;
            double t49492 = t49370*t49370;
            double t49493 = 1/(t49351*t49351*t49351);
            double t49494 = t49363*t49364*t49492*t49493*2.0;
            double t49495 = b4p*t49341*t49378*(1.0E1/9.0);
            double t49496 = b2p*c*t49489*(4.0/9.0);
            double t49497 = b3p*t49341*t49353*t49378*(1.0/1.2E1);
            double t49498 = b1p*c*t49353*t49489*(2.0/9.0);
            double t49499 = b3p*c*t49337*t49489*(2.0/3.0);
            double t49500 = t49495+t49496+t49497+t49498+t49499-b1p*t49341*t49490*t49378*(1.0/3.6E1);
            double t49501 = 1/(t49361*t49361);
            double t49502 = 1/(t49351*t49351*t49351*t49351);
            double t49503 = a1p*c*c0p*t49372*t49489*(8.0/9.0);
            v_rho_b_rho_b_[index] = t49441*(t49482+t49383*t49386*(t49481-c0p*t49363*t49372*2.0))*2.0+t49488*(t49420- \
               t49371+t49383*t49386*(t49371+t49419-t49412*t49413*t49418*t49389-a1p*c*c0p*t49372*t49346*(2.0/3.0)) \
               )*2.0-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]*gx*t49409*t49478*(8.0/3.0)-cx1*t49442*t49408* \
               t49373*t49483*(8.0/3.0)+cx2*t49442*t49408*t49480*t49373*(1.6E1/3.0)+cx4*t49411*t49443*t49375*t49477* \
               (3.2E1/3.0)-cx2*t49442*t49380*t49373*t49454*t49476-cx4*t49443*t49473*t49375*t49448*t49377+cx3*gamma_bb[index]* \
               gx*t49410*t49442*t49373*t49479*8.0-cx3*gamma_bb[index]*gx*t49442*t49373*t49463*t49467*t49379)*(8.0/ \
               3.0)+rho_b[index]*t49488*(-t49503-t49494+t49383*t49386*(t49503+t49494-t49500*t49363*t49364*t49365- \
               t49412*1/(t49345*t49345*t49345)*t49491*t49389*2.0+t49412*t49413*t49389*(b2f*c*t49489*(4.0/9.0)+b4f* \
               t49341*t49378*(1.0E1/9.0)+b1f*c*t49353*t49489*(2.0/9.0)+b3f*c*t49337*t49489*(2.0/3.0)-b1f*t49341*t49490* \
               t49378*(1.0/3.6E1)+b3f*t49341*t49353*t49378*(1.0/1.2E1))+1/(t49345*t49345*t49345*t49345)*t49354*t49491* \
               1/(t49357*t49357)*t49389*(1.0/2.0)-a1f*c*c0f*t49387*t49489*(8.0/9.0)-t49501*t49502*t49363*t49492*t49358* \
               (1.0/2.0)+a1f*c*t49412*t49413*t49346*t49418*(2.0/3.0)-a1p*c*t49370*t49346*t49364*t49365*(2.0/3.0)) \
               +t49500*t49363*t49364*t49365+t49501*t49502*t49363*t49492*t49358*(1.0/2.0)+a1p*c*t49370*t49346*t49364* \
               t49365*(2.0/3.0))+rho_b[index]*t49441*(-t49420+t49371+t49383*t49386*(t49420-t49371-t49419+t49412*t49413* \
               t49418*t49389))*2.0-rho_b[index]*(t49482+t49383*t49386*(t49481-t49482))*(ccaa1*gamma_bb[index]*gcaa* \
               t49462*t49398*(8.8E1/9.0)-ccaa1*t49425*t49373*t49374*t49447*2.4E1+ccaa2*t49407*t49373*t49374*t49447* \
               (3.04E2/9.0)+ccaa4*t49472*t49375*t49376*t49395*(1.12E3/9.0)-ccaa2*t49440*t49408*t49373*t49374*t49439* \
               (3.2E1/3.0)-ccaa4*t49411*t49435*t49436*t49375*t49376*(6.4E1/3.0)-ccaa2*t49440*t49380*t49373*t49374* \
               (gamma_bb[index]*gcaa*t49462*(1.76E2/9.0)+t49373*t49374*t49447*(3.04E2/9.0))-ccaa4*t49436*t49375*t49376* \
               t49377*(gamma_bb[index]*gcaa*t49462*(3.52E2/9.0)+t49373*t49374*t49447*(6.08E2/3.0)+t49472*t49375*t49376* \
               (1.12E3/9.0)+gamma_bb[index]*gcaa*t49444*t49373*t49374*2.88E2)+ccaa2*1/(t49406*t49406*t49406)*t49380* \
               t49373*t49374*(t49439*t49439)*2.0+ccaa4*(t49435*t49435)*t49375*t49376*1/(t49394*t49394*t49394)*t49377* \
               2.0+ccaa3*gamma_bb[index]*gcaa*t49403*t49444*t49373*t49374*7.2E1+ccaa1*gamma_bb[index]*gcaa*t49444* \
               t49373*t49374*1/(t49397*t49397*t49397)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*1/(t49402*t49402*t49402) \
               *t49373*t49374*(t49429*t49429)*t49379*2.0-ccaa3*gamma_bb[index]*gcaa*t49430*t49373*t49374*t49379*(gamma_bb[index]* \
               gcaa*t49462*(8.8E1/3.0)+t49373*t49374*t49447*(3.04E2/3.0)+gamma_bb[index]*gcaa*t49444*t49373*t49374* \
               7.2E1)-ccaa3*gamma_bb[index]*gcaa*t49410*t49430*t49373*t49374*t49429*1.6E1)+c0*pow(rho_b[index],4.0/ \
               3.0)*(cx1*gamma_bb[index]*gx*t49462*t49478*(8.8E1/9.0)-cx1*t49442*t49373*t49447*t49483*2.4E1+cx2*t49442* \
               t49480*t49373*t49447*(3.04E2/9.0)+cx4*t49443*t49472*t49375*t49477*(1.12E3/9.0)-cx2*t49442*t49408*t49373* \
               t49454*t49476*(3.2E1/3.0)-cx4*t49411*t49443*t49473*t49375*t49448*(6.4E1/3.0)-cx2*t49442*t49380*t49373* \
               t49476*(gamma_bb[index]*gx*t49462*(1.76E2/9.0)+t49442*t49373*t49447*(3.04E2/9.0))-cx4*t49443*t49473* \
               t49375*t49377*(gamma_bb[index]*gx*t49462*(3.52E2/9.0)+t49442*t49373*t49447*(6.08E2/3.0)+t49443*t49472* \
               t49375*(1.12E3/9.0)+gamma_bb[index]*gx*t49442*t49444*t49373*2.88E2)+cx2*t49442*t49380*t49373*(t49454* \
               t49454)*1/(t49457*t49457*t49457)*2.0+cx4*t49443*1/(t49453*t49453*t49453)*t49375*(t49448*t49448)*t49377* \
               2.0+cx3*gamma_bb[index]*gx*t49442*t49444*t49373*t49479*7.2E1+cx1*gamma_bb[index]*gx*t49442*t49444* \
               t49373*1/(t49446*t49446*t49446)*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t49442*1/(t49461*t49461*t49461) \
               *t49373*(t49467*t49467)*t49379*2.0-cx3*gamma_bb[index]*gx*t49442*t49373*t49463*t49379*(gamma_bb[index]* \
               gx*t49462*(8.8E1/3.0)+t49442*t49373*t49447*(3.04E2/3.0)+gamma_bb[index]*gx*t49442*t49444*t49373*7.2E1) \
               -cx3*gamma_bb[index]*gx*t49410*t49442*t49373*t49463*t49467*1.6E1)+c0*t49342*(cx0+cx1*gamma_bb[index]* \
               gx*t49378*t49478+cx2*t49442*t49380*t49480*t49373+cx4*t49443*t49375*t49377*t49477+cx3*gamma_bb[index]* \
               gx*t49442*t49373*t49379*t49479)*(4.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t47570 = 1/pow(rho_a[index],1.0/3.0);
                double t47571 = c*t47570;
                double t47572 = sqrt(t47571);
                double t47573 = pow(t47571,3.0/2.0);
                double t47574 = c*c;
                double t47575 = 1/pow(rho_a[index],2.0/3.0);
                double t47576 = 1/c0p;
                double t47577 = b1p*t47572;
                double t47578 = b3p*t47573;
                double t47579 = b4p*t47574*t47575;
                double t47580 = b2p*c*t47570;
                double t47581 = t47580+t47577+t47578+t47579;
                double t47582 = 1/t47581;
                double t47583 = t47582*t47576*(1.0/2.0);
                double t47584 = t47583+1.0;
                double t47585 = log(t47584);
                double t47586 = a1p*c*t47570;
                double t47587 = t47586+1.0;
                double t47588 = 1/pow(rho_a[index],8.0/3.0);
                double t47589 = gamma_aa[index]*gamma_aa[index];
                double t47590 = gcaa*gcaa;
                double t47591 = t47590*t47590;
                double t47592 = 1/pow(rho_a[index],3.2E1/3.0);
                double t47593 = 1/pow(rho_a[index],1.6E1/3.0);
                double t47594 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t47595 = gamma_aa[index]*gcaa*t47588;
                double t47596 = t47595+1.0;
                double t47597 = gamma_aa[index]*gcaa*t47588*3.0;
                double t47598 = gamma_aa[index]*gcaa*t47590*t47594*t47589;
                double t47599 = t47590*t47593*t47589*3.0;
                double t47600 = t47597+t47598+t47599+1.0;
                double t47601 = t47589*t47589;
                double t47602 = gamma_aa[index]*gcaa*t47588*4.0;
                double t47603 = gamma_aa[index]*gcaa*t47590*t47594*t47589*4.0;
                double t47604 = t47590*t47593*t47589*6.0;
                double t47605 = t47601*t47591*t47592;
                double t47606 = t47602+t47603+t47604+t47605+1.0;
                double t47607 = gamma_aa[index]*gcaa*t47588*2.0;
                double t47608 = t47590*t47593*t47589;
                double t47609 = t47607+t47608+1.0;
                double t47610 = rho_a[index]+rho_b[index];
                double t47611 = 1/pow(t47610,1.0/3.0);
                double t47612 = c*t47611;
                double t47613 = sqrt(t47612);
                double t47614 = b1p*t47613;
                double t47615 = pow(t47612,3.0/2.0);
                double t47616 = b3p*t47615;
                double t47617 = 1/pow(t47610,2.0/3.0);
                double t47618 = b4p*t47617*t47574;
                double t47619 = b2p*c*t47611;
                double t47620 = t47614+t47616+t47618+t47619;
                double t47621 = 1/pow(t47610,4.0/3.0);
                double t47622 = two_13*2.0;
                double t47623 = t47622-2.0;
                double t47624 = 1/t47623;
                double t47625 = 1/c0f;
                double t47626 = 1/t47620;
                double t47627 = t47626*t47576*(1.0/2.0);
                double t47628 = t47627+1.0;
                double t47629 = a1p*c*t47611;
                double t47630 = t47629+1.0;
                double t47631 = rho_a[index]-rho_b[index];
                double t47632 = t47631*t47631;
                double t47633 = 1/t47610;
                double t47634 = t47631*t47633;
                double t47635 = b1f*t47613;
                double t47636 = b3f*t47615;
                double t47637 = b4f*t47617*t47574;
                double t47638 = b2f*c*t47611;
                double t47639 = t47635+t47636+t47637+t47638;
                double t47640 = 1/t47639;
                double t47641 = t47640*t47625*(1.0/2.0);
                double t47642 = t47641+1.0;
                double t47643 = log(t47642);
                double t47644 = a1f*c*t47611;
                double t47645 = t47644+1.0;
                double t47646 = log(t47628);
                double t47656 = c0f*t47643*t47645*2.0;
                double t47657 = c0p*t47630*t47646*2.0;
                double t47647 = t47656-t47657;
                double t47648 = t47634+1.0;
                double t47649 = pow(t47648,4.0/3.0);
                double t47650 = -t47634+1.0;
                double t47651 = pow(t47650,4.0/3.0);
                double t47652 = t47651+t47649-2.0;
                double t47653 = 1/(t47610*t47610);
                double t47684 = t47631*t47653;
                double t47654 = t47633-t47684;
                double t47655 = 1/(t47610*t47610*t47610*t47610);
                double t47658 = t47632*t47632;
                double t47659 = 1/pow(t47610,5.0/3.0);
                double t47660 = 1/sqrt(t47612);
                double t47661 = 1/t47628;
                double t47662 = 1/(t47620*t47620);
                double t47663 = b4p*t47574*t47659*(2.0/3.0);
                double t47664 = b2p*c*t47621*(1.0/3.0);
                double t47665 = b1p*c*t47621*t47660*(1.0/6.0);
                double t47666 = b3p*c*t47621*t47613*(1.0/2.0);
                double t47667 = t47663+t47664+t47665+t47666;
                double t47668 = t47630*t47661*t47662*t47667;
                double t47669 = 1/(t47610*t47610*t47610*t47610*t47610);
                double t47670 = 1/d2fz0;
                double t47671 = 1/Aa;
                double t47672 = b1a*t47613;
                double t47673 = b3a*t47615;
                double t47674 = b4a*t47617*t47574;
                double t47675 = b2a*c*t47611;
                double t47676 = t47672+t47673+t47674+t47675;
                double t47677 = 1/t47676;
                double t47678 = t47671*t47677*(1.0/2.0);
                double t47679 = t47678+1.0;
                double t47680 = log(t47679);
                double t47681 = a1a*c*t47611;
                double t47682 = t47681+1.0;
                double t47683 = pow(t47648,1.0/3.0);
                double t47685 = t47654*t47683*(4.0/3.0);
                double t47686 = pow(t47650,1.0/3.0);
                double t47687 = t47685-t47654*t47686*(4.0/3.0);
                double t47688 = t47655*t47658;
                double t47689 = t47688-1.0;
                double t47690 = pow(2.0,1.0/3.0);
                double t47691 = t47690*2.0;
                double t47692 = t47691-2.0;
                double t47693 = a1f*c*t47570;
                double t47694 = t47693+1.0;
                double t47695 = b1f*t47572;
                double t47696 = b3f*t47573;
                double t47697 = b4f*t47574*t47575;
                double t47698 = b2f*c*t47570;
                double t47699 = t47695+t47696+t47697+t47698;
                double t47700 = 1/t47699;
                double t47701 = t47700*t47625*(1.0/2.0);
                double t47702 = t47701+1.0;
                double t47703 = 1/pow(rho_a[index],4.0/3.0);
                double t47704 = 1/pow(rho_a[index],5.0/3.0);
                double t47705 = 1/sqrt(t47571);
                double t47706 = log(t47702);
                double t47707 = 1/t47584;
                double t47708 = 1/(t47581*t47581);
                double t47709 = b4p*t47704*t47574*(2.0/3.0);
                double t47710 = b2p*c*t47703*(1.0/3.0);
                double t47711 = b1p*c*t47703*t47705*(1.0/6.0);
                double t47712 = b3p*c*t47703*t47572*(1.0/2.0);
                double t47713 = t47710+t47711+t47712+t47709;
                double t47714 = t47713*t47707*t47708*t47587;
                double t47715 = c0f*t47706*t47694*2.0;
                double t47716 = c0p*t47585*t47587*2.0;
                double t47717 = gamma_aa[index]*t47588*(1.0/2.0);
                double t47718 = 1/pow(rho_b[index],8.0/3.0);
                double t47719 = gamma_bb[index]*t47718*(1.0/2.0);
                double t47720 = t47717+t47719;
                double t47721 = gcab*t47720;
                double t47722 = t47721+1.0;
                double t47723 = gcab*gcab;
                double t47724 = t47720*t47720;
                double t47725 = t47723*t47723;
                double t47726 = t47724*t47724;
                double t47727 = t47723*t47724;
                double t47728 = gcab*t47720*2.0;
                double t47729 = t47727+t47728+1.0;
                double t47730 = t47723*t47724*3.0;
                double t47731 = gcab*t47720*t47723*t47724;
                double t47732 = gcab*t47720*3.0;
                double t47733 = t47730+t47731+t47732+1.0;
                double t47734 = t47723*t47724*6.0;
                double t47735 = gcab*t47720*t47723*t47724*4.0;
                double t47736 = t47725*t47726;
                double t47737 = gcab*t47720*4.0;
                double t47738 = t47734+t47735+t47736+t47737+1.0;
                double t47739 = t47715-t47716;
                double t47740 = 1/pow(rho_b[index],1.0/3.0);
                double t47741 = c*t47740;
                double t47742 = sqrt(t47741);
                double t47743 = pow(t47741,3.0/2.0);
                double t47744 = 1/pow(rho_b[index],2.0/3.0);
                double t47745 = b1p*t47742;
                double t47746 = b3p*t47743;
                double t47747 = b4p*t47744*t47574;
                double t47748 = b2p*c*t47740;
                double t47749 = t47745+t47746+t47747+t47748;
                double t47750 = 1/t47749;
                double t47751 = t47750*t47576*(1.0/2.0);
                double t47752 = t47751+1.0;
                double t47753 = log(t47752);
                double t47754 = a1p*c*t47740;
                double t47755 = t47754+1.0;
                double t47756 = c0p*t47753*t47755*2.0;
                double t47757 = t47624*t47652*t47655*t47647*t47658;
                double t47758 = Aa*t47624*t47652*t47670*t47680*t47682*t47689*2.0;
                double t47759 = 1/t47722;
                double t47760 = 1/pow(rho_a[index],1.1E1/3.0);
                double t47761 = 1/(t47722*t47722);
                double t47762 = 1/t47729;
                double t47763 = 1/(t47733*t47733);
                double t47764 = 1/pow(rho_a[index],1.9E1/3.0);
                double t47765 = 1/(t47729*t47729);
                double t47766 = 1/t47733;
                double t47767 = 1/t47738;
                double t47768 = 1/(t47738*t47738);
                double t47769 = gcab*t47588*2.0;
                double t47770 = t47720*t47723*t47588*6.0;
                double t47771 = gcab*t47723*t47724*t47588*6.0;
                double t47772 = t47720*t47724*t47725*t47588*2.0;
                double t47773 = t47770+t47771+t47772+t47769;
                double t47774 = gamma_aa[index]*gcab*t47760*(8.0/3.0);
                double t47775 = gamma_aa[index]*t47720*t47723*t47760*(8.0/3.0);
                double t47776 = t47774+t47775;
                double t47777 = gcab*t47588;
                double t47778 = t47720*t47723*t47588;
                double t47779 = t47777+t47778;
                double t47780 = gamma_aa[index]*gcab*t47760*(1.6E1/3.0);
                double t47781 = gamma_aa[index]*gcab*t47723*t47724*t47760*1.6E1;
                double t47782 = gamma_aa[index]*t47720*t47724*t47760*t47725*(1.6E1/3.0);
                double t47783 = gamma_aa[index]*t47720*t47723*t47760*1.6E1;
                double t47784 = t47780+t47781+t47782+t47783;
                double t47785 = gcab*t47588*(3.0/2.0);
                double t47786 = t47720*t47723*t47588*3.0;
                double t47787 = gcab*t47723*t47724*t47588*(3.0/2.0);
                double t47788 = t47785+t47786+t47787;
                double t47789 = gamma_aa[index]*gcab*t47760*4.0;
                double t47790 = gamma_aa[index]*gcab*t47723*t47724*t47760*4.0;
                double t47791 = gamma_aa[index]*t47720*t47723*t47760*8.0;
                double t47792 = t47790+t47791+t47789;
                double t47793 = gx*gx;
                double t47794 = t47793*t47793;
                double t47795 = gamma_aa[index]*gx*t47588;
                double t47796 = t47795+1.0;
                double t47797 = gamma_aa[index]*gx*t47588*3.0;
                double t47798 = gamma_aa[index]*gx*t47594*t47793*t47589;
                double t47799 = t47593*t47793*t47589*3.0;
                double t47800 = t47797+t47798+t47799+1.0;
                double t47801 = gamma_aa[index]*gx*t47588*4.0;
                double t47802 = gamma_aa[index]*gx*t47594*t47793*t47589*4.0;
                double t47803 = t47593*t47793*t47589*6.0;
                double t47804 = t47601*t47592*t47794;
                double t47805 = t47801+t47802+t47803+t47804+1.0;
                double t47806 = gamma_aa[index]*gx*t47588*2.0;
                double t47807 = t47593*t47793*t47589;
                double t47808 = t47806+t47807+1.0;
                double t47809 = t47624*t47692*t47739;
                double t47810 = t47716+t47809;
                double t47811 = 1/t47596;
                double t47812 = 1/t47606;
                double t47813 = 1/t47609;
                double t47814 = 1/t47600;
                double t47815 = 1/(t47596*t47596);
                double t47816 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t47817 = 1/(t47600*t47600);
                double t47818 = 1/(t47609*t47609);
                double t47819 = gcaa*t47588*3.0;
                double t47820 = gamma_aa[index]*t47590*t47593*6.0;
                double t47821 = gcaa*t47590*t47594*t47589*3.0;
                double t47822 = t47820+t47821+t47819;
                double t47823 = 1/pow(rho_a[index],3.5E1/3.0);
                double t47824 = 1/(t47606*t47606);
                double t47825 = gcaa*t47588*4.0;
                double t47826 = gamma_aa[index]*t47590*t47593*1.2E1;
                double t47827 = gcaa*t47590*t47594*t47589*1.2E1;
                double t47828 = gamma_aa[index]*t47591*t47592*t47589*4.0;
                double t47829 = t47825+t47826+t47827+t47828;
                double t47830 = gcaa*t47588*2.0;
                double t47831 = gamma_aa[index]*t47590*t47593*2.0;
                double t47832 = t47830+t47831;
                double t47833 = gamma_aa[index]*gcaa*t47760*(1.6E1/3.0);
                double t47834 = t47590*t47764*t47589*(1.6E1/3.0);
                double t47835 = t47833+t47834;
                double t47836 = gamma_aa[index]*gcaa*t47760*8.0;
                double t47837 = gamma_aa[index]*gcaa*t47590*t47816*t47589*8.0;
                double t47838 = t47590*t47764*t47589*1.6E1;
                double t47839 = t47836+t47837+t47838;
                double t47840 = gamma_aa[index]*gcaa*t47760*(3.2E1/3.0);
                double t47841 = gamma_aa[index]*gcaa*t47590*t47816*t47589*3.2E1;
                double t47842 = t47590*t47764*t47589*3.2E1;
                double t47843 = t47601*t47823*t47591*(3.2E1/3.0);
                double t47844 = t47840+t47841+t47842+t47843;
                double t47845 = 1/t47702;
                double t47846 = 1/(t47699*t47699);
                double t47847 = b4f*t47704*t47574*(2.0/3.0);
                double t47848 = b2f*c*t47703*(1.0/3.0);
                double t47849 = b1f*c*t47703*t47705*(1.0/6.0);
                double t47850 = b3f*c*t47703*t47572*(1.0/2.0);
                double t47851 = t47850+t47847+t47848+t47849;
                double t47852 = a1f*c*c0f*t47703*t47706*(2.0/3.0);
                double t47853 = a1p*c*c0p*t47703*t47585*(2.0/3.0);
                double t47854 = ccaa1*gcaa*t47811*t47588;
                double t47855 = ccaa4*gamma_aa[index]*t47812*t47591*t47592*t47589*4.0;
                double t47856 = ccaa2*gamma_aa[index]*t47813*t47590*t47593*2.0;
                double t47857 = ccaa3*gcaa*t47814*t47590*t47594*t47589*3.0;
                double t47858 = t47854+t47855+t47856+t47857-ccaa1*gamma_aa[index]*t47590*t47815*t47593-ccaa4*t47601* \
                   t47824*t47591*t47592*t47829-ccaa2*t47832*t47590*t47593*t47818*t47589-ccaa3*gamma_aa[index]*gcaa*t47822* \
                   t47590*t47817*t47594*t47589;
                double t47859 = 1/t47796;
                double t47860 = 1/t47805;
                double t47861 = 1/t47808;
                double t47862 = 1/t47800;
                double t47863 = 1/(t47796*t47796);
                double t47864 = 1/(t47800*t47800);
                double t47865 = 1/(t47808*t47808);
                double t47866 = gx*t47588*3.0;
                double t47867 = gamma_aa[index]*t47593*t47793*6.0;
                double t47868 = gx*t47594*t47793*t47589*3.0;
                double t47869 = t47866+t47867+t47868;
                double t47870 = 1/(t47805*t47805);
                double t47871 = gx*t47588*4.0;
                double t47872 = gamma_aa[index]*t47593*t47793*1.2E1;
                double t47873 = gx*t47594*t47793*t47589*1.2E1;
                double t47874 = gamma_aa[index]*t47592*t47794*t47589*4.0;
                double t47875 = t47871+t47872+t47873+t47874;
                double t47876 = gx*t47588*2.0;
                double t47877 = gamma_aa[index]*t47593*t47793*2.0;
                double t47878 = t47876+t47877;
                double t47879 = gamma_aa[index]*gx*t47760*(1.6E1/3.0);
                double t47880 = t47764*t47793*t47589*(1.6E1/3.0);
                double t47881 = t47880+t47879;
                double t47882 = gamma_aa[index]*gx*t47760*8.0;
                double t47883 = gamma_aa[index]*gx*t47816*t47793*t47589*8.0;
                double t47884 = t47764*t47793*t47589*1.6E1;
                double t47885 = t47882+t47883+t47884;
                double t47886 = gamma_aa[index]*gx*t47760*(3.2E1/3.0);
                double t47887 = gamma_aa[index]*gx*t47816*t47793*t47589*3.2E1;
                double t47888 = t47764*t47793*t47589*3.2E1;
                double t47889 = t47601*t47823*t47794*(3.2E1/3.0);
                double t47890 = t47886+t47887+t47888+t47889;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t47810+rho_b[index]*(t47756-t47624*t47692*(t47756-c0f*log((t47625* \
                   (1.0/2.0))/(b1f*t47742+b3f*t47743+b2f*c*t47740+b4f*t47744*t47574)+1.0)*(a1f*c*t47740+1.0)*2.0))-t47610* \
                   (t47657+t47757+t47758))*(ccab1*gcab*t47760*t47759*(4.0/3.0)-ccab2*t47723*t47724*t47765*(gcab*t47760* \
                   (8.0/3.0)+gamma_aa[index]*t47723*t47764*(4.0/3.0)+t47720*t47723*t47760*(8.0/3.0))-ccab4*t47725*t47726* \
                   t47768*(gcab*t47760*(1.6E1/3.0)+gamma_aa[index]*t47723*t47764*8.0+t47720*t47723*t47760*1.6E1+gamma_aa[index]* \
                   t47724*t47725*t47764*8.0+gcab*t47723*t47724*t47760*1.6E1+t47720*t47724*t47760*t47725*(1.6E1/3.0)+gamma_aa[index]* \
                   gcab*t47720*t47723*t47764*1.6E1)-ccab1*gamma_aa[index]*t47723*t47761*t47764*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t47723*t47762*t47764*(4.0/3.0)-ccab1*t47720*t47723*t47760*t47761*(4.0/3.0)+ccab2*t47720*t47723*t47760* \
                   t47762*(8.0/3.0)+ccab4*t47720*t47724*t47760*t47725*t47767*(1.6E1/3.0)-ccab2*t47720*t47723*t47765*t47776* \
                   t47588+ccab4*t47725*t47726*t47773*1/(t47738*t47738*t47738)*t47784*2.0+ccab2*t47723*t47724*1/(t47729* \
                   t47729*t47729)*t47776*t47779*2.0+ccab4*gamma_aa[index]*t47724*t47725*t47764*t47767*8.0+ccab3*gcab* \
                   t47723*t47724*t47760*t47766*4.0+ccab3*gamma_aa[index]*gcab*t47720*t47723*t47764*t47766*4.0-ccab2*gamma_aa[index]* \
                   t47720*t47723*t47760*t47765*t47779*(8.0/3.0)-ccab3*gcab*t47723*t47724*t47763*t47792*t47588*(3.0/2.0) \
                   -ccab4*t47720*t47724*t47725*t47784*t47588*t47768*2.0-ccab3*gcab*t47720*t47723*t47724*t47763*(gcab* \
                   t47760*4.0+gamma_aa[index]*t47723*t47764*4.0+t47720*t47723*t47760*8.0+gcab*t47723*t47724*t47760*4.0+ \
                   gamma_aa[index]*gcab*t47720*t47723*t47764*4.0)+ccab1*gamma_aa[index]*gcab*t47720*1/(t47722*t47722* \
                   t47722)*t47723*t47764*(4.0/3.0)+ccab3*gcab*t47720*t47723*t47724*1/(t47733*t47733*t47733)*t47792*t47788* \
                   2.0-ccab3*gamma_aa[index]*gcab*t47723*t47724*t47760*t47763*t47788*4.0-ccab4*gamma_aa[index]*t47720* \
                   t47724*t47760*t47725*t47773*t47768*(1.6E1/3.0))-t47858*(t47716+t47624*t47692*(t47715-c0p*t47585*t47587* \
                   2.0))-(-t47716+t47657+t47757+t47758+t47610*(t47668-t47624*t47652*t47655*t47658*(t47668-(t47645*1/(t47639* \
                   t47639)*(b2f*c*t47621*(1.0/3.0)+b4f*t47574*t47659*(2.0/3.0)+b1f*c*t47621*t47660*(1.0/6.0)+b3f*c*t47621* \
                   t47613*(1.0/2.0)))/t47642+a1f*c*c0f*t47621*t47643*(2.0/3.0)-a1p*c*c0p*t47621*t47646*(2.0/3.0))-a1p* \
                   c*c0p*t47621*t47646*(2.0/3.0)-t47624*t47652*t47647*t47658*t47669*4.0+t47624*t47655*t47647*t47658*t47687+ \
                   t47631*t47632*t47624*t47652*t47655*t47647*4.0-Aa*t47624*t47652*t47670*t47680*t47682*(t47658*t47669* \
                   4.0-t47631*t47632*t47655*4.0)*2.0+Aa*t47624*t47670*t47680*t47682*t47687*t47689*2.0+(t47624*t47652* \
                   t47670*t47682*1/(t47676*t47676)*t47689*(b2a*c*t47621*(1.0/3.0)+b4a*t47574*t47659*(2.0/3.0)+b1a*c*t47621* \
                   t47660*(1.0/6.0)+b3a*c*t47621*t47613*(1.0/2.0)))/t47679-Aa*a1a*c*t47621*t47624*t47652*t47670*t47680* \
                   t47689*(2.0/3.0))+rho_a[index]*(-t47714+t47853+t47624*t47692*(t47714+t47852-t47851*t47845*t47846*t47694- \
                   a1p*c*c0p*t47703*t47585*(2.0/3.0)))-t47624*t47692*t47739)*(ccab1*gcab*t47588*t47759*(1.0/2.0)-ccab1* \
                   t47720*t47723*t47761*t47588*(1.0/2.0)+ccab2*t47720*t47723*t47762*t47588-ccab2*t47723*t47724*t47765* \
                   t47779-ccab4*t47725*t47726*t47773*t47768+ccab4*t47720*t47724*t47725*t47767*t47588*2.0+ccab3*gcab*t47723* \
                   t47724*t47766*t47588*(3.0/2.0)-ccab3*gcab*t47720*t47723*t47724*t47763*t47788)-rho_a[index]*t47810* \
                   (ccaa1*gcaa*t47811*t47760*(-8.0/3.0)-ccaa2*gamma_aa[index]*t47813*t47590*t47764*(3.2E1/3.0)+ccaa1* \
                   gamma_aa[index]*t47590*t47815*t47764*8.0+ccaa4*t47601*t47823*t47824*t47591*t47829*(3.2E1/3.0)+ccaa2* \
                   t47832*t47590*t47764*t47818*t47589*(1.6E1/3.0)+ccaa4*t47601*t47824*t47591*t47592*(gcaa*t47760*(3.2E1/ \
                   3.0)+gamma_aa[index]*t47590*t47764*6.4E1+gamma_aa[index]*t47823*t47591*t47589*(1.28E2/3.0)+gcaa*t47590* \
                   t47816*t47589*9.6E1)-ccaa1*gcaa*t47590*t47816*1/(t47596*t47596*t47596)*t47589*(1.6E1/3.0)+ccaa2*t47590* \
                   t47593*t47818*t47589*(gcaa*t47760*(1.6E1/3.0)+gamma_aa[index]*t47590*t47764*(3.2E1/3.0))-ccaa4*gamma_aa[index]* \
                   t47812*t47823*t47591*t47589*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t47590*t47835*t47593*t47818*2.0-ccaa3* \
                   gcaa*t47814*t47590*t47816*t47589*2.4E1+ccaa4*gamma_aa[index]*t47824*t47591*t47592*t47844*t47589*4.0+ \
                   ccaa3*gcaa*t47590*t47817*t47594*t47839*t47589*3.0-ccaa4*t47601*1/(t47606*t47606*t47606)*t47591*t47592* \
                   t47844*t47829*2.0-ccaa2*t47832*t47590*1/(t47609*t47609*t47609)*t47835*t47593*t47589*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t47590*t47817*t47594*t47589*(gcaa*t47760*8.0+gamma_aa[index]*t47590*t47764*3.2E1+gcaa*t47590* \
                   t47816*t47589*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t47822*t47590*t47816*t47817*t47589*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*1/(t47600*t47600*t47600)*t47822*t47590*t47594*t47839*t47589*2.0)+c0*pow(rho_a[index],4.0/3.0) \
                   *(cx1*gx*t47760*t47859*(-8.0/3.0)+cx1*gamma_aa[index]*t47764*t47863*t47793*8.0-cx2*gamma_aa[index]* \
                   t47861*t47764*t47793*(3.2E1/3.0)+cx2*t47764*t47793*t47865*t47589*t47878*(1.6E1/3.0)+cx4*t47601*t47823* \
                   t47870*t47794*t47875*(3.2E1/3.0)+cx4*t47601*t47870*t47592*t47794*(gx*t47760*(3.2E1/3.0)+gamma_aa[index]* \
                   t47764*t47793*6.4E1+gamma_aa[index]*t47823*t47794*t47589*(1.28E2/3.0)+gx*t47816*t47793*t47589*9.6E1) \
                   -cx1*gx*t47816*t47793*t47589*1/(t47796*t47796*t47796)*(1.6E1/3.0)+cx2*t47593*t47793*t47865*t47589* \
                   (gx*t47760*(1.6E1/3.0)+gamma_aa[index]*t47764*t47793*(3.2E1/3.0))+cx2*gamma_aa[index]*t47593*t47881* \
                   t47793*t47865*2.0-cx4*gamma_aa[index]*t47823*t47860*t47794*t47589*(1.28E2/3.0)-cx3*gx*t47816*t47862* \
                   t47793*t47589*2.4E1+cx4*gamma_aa[index]*t47870*t47592*t47890*t47794*t47589*4.0+cx3*gx*t47594*t47864* \
                   t47793*t47885*t47589*3.0-cx2*1/(t47808*t47808*t47808)*t47593*t47881*t47793*t47589*t47878*2.0-cx4*t47601* \
                   1/(t47805*t47805*t47805)*t47592*t47890*t47794*t47875*2.0+cx3*gamma_aa[index]*gx*t47594*t47864*t47793* \
                   t47589*(gx*t47760*8.0+gamma_aa[index]*t47764*t47793*3.2E1+gx*t47816*t47793*t47589*2.4E1)+cx3*gamma_aa[index]* \
                   gx*t47816*t47864*t47793*t47589*t47869*8.0-cx3*gamma_aa[index]*gx*1/(t47800*t47800*t47800)*t47594*t47793* \
                   t47885*t47589*t47869*2.0)+rho_a[index]*t47858*(-t47714+t47853+t47624*t47692*(t47714+t47852-t47853- \
                   t47851*t47845*t47846*t47694))+c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t47588*t47859-cx1*gamma_aa[index]* \
                   t47593*t47863*t47793+cx2*gamma_aa[index]*t47861*t47593*t47793*2.0-cx2*t47593*t47793*t47865*t47589* \
                   t47878-cx4*t47601*t47870*t47592*t47794*t47875+cx4*gamma_aa[index]*t47860*t47592*t47794*t47589*4.0+ \
                   cx3*gx*t47862*t47594*t47793*t47589*3.0-cx3*gamma_aa[index]*gx*t47594*t47864*t47793*t47589*t47869)* \
                   (4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t50144 = 1/pow(rho_a[index],1.0/3.0);
                double t50145 = c*t50144;
                double t50146 = sqrt(t50145);
                double t50147 = pow(t50145,3.0/2.0);
                double t50148 = c*c;
                double t50149 = 1/pow(rho_a[index],2.0/3.0);
                double t50150 = 1/c0p;
                double t50151 = b1p*t50146;
                double t50152 = b3p*t50147;
                double t50153 = b4p*t50148*t50149;
                double t50154 = b2p*c*t50144;
                double t50155 = t50151+t50152+t50153+t50154;
                double t50156 = 1/t50155;
                double t50157 = t50150*t50156*(1.0/2.0);
                double t50158 = t50157+1.0;
                double t50159 = log(t50158);
                double t50160 = a1p*c*t50144;
                double t50161 = t50160+1.0;
                double t50162 = 1/pow(rho_a[index],8.0/3.0);
                double t50163 = gamma_aa[index]*gamma_aa[index];
                double t50164 = gcaa*gcaa;
                double t50165 = t50164*t50164;
                double t50166 = 1/pow(rho_a[index],3.2E1/3.0);
                double t50167 = 1/pow(rho_a[index],1.6E1/3.0);
                double t50168 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t50169 = gamma_aa[index]*gcaa*t50162;
                double t50170 = t50169+1.0;
                double t50171 = gamma_aa[index]*gcaa*t50162*3.0;
                double t50172 = gamma_aa[index]*gcaa*t50163*t50164*t50168;
                double t50173 = t50163*t50164*t50167*3.0;
                double t50174 = t50171+t50172+t50173+1.0;
                double t50175 = t50163*t50163;
                double t50176 = gamma_aa[index]*gcaa*t50162*4.0;
                double t50177 = gamma_aa[index]*gcaa*t50163*t50164*t50168*4.0;
                double t50178 = t50163*t50164*t50167*6.0;
                double t50179 = t50165*t50166*t50175;
                double t50180 = t50176+t50177+t50178+t50179+1.0;
                double t50181 = gamma_aa[index]*gcaa*t50162*2.0;
                double t50182 = t50163*t50164*t50167;
                double t50183 = t50181+t50182+1.0;
                double t50184 = gx*gx;
                double t50185 = t50184*t50184;
                double t50186 = gamma_aa[index]*gx*t50162;
                double t50187 = t50186+1.0;
                double t50188 = gamma_aa[index]*gx*t50162*3.0;
                double t50189 = gamma_aa[index]*gx*t50163*t50184*t50168;
                double t50190 = t50163*t50184*t50167*3.0;
                double t50191 = t50190+t50188+t50189+1.0;
                double t50192 = gamma_aa[index]*gx*t50162*4.0;
                double t50193 = gamma_aa[index]*gx*t50163*t50184*t50168*4.0;
                double t50194 = t50163*t50184*t50167*6.0;
                double t50195 = t50166*t50175*t50185;
                double t50196 = t50192+t50193+t50194+t50195+1.0;
                double t50197 = gamma_aa[index]*gx*t50162*2.0;
                double t50198 = t50163*t50184*t50167;
                double t50199 = t50197+t50198+1.0;
                double t50200 = pow(2.0,1.0/3.0);
                double t50201 = t50200*2.0;
                double t50202 = t50201-2.0;
                double t50203 = two_13*2.0;
                double t50204 = t50203-2.0;
                double t50205 = 1/t50204;
                double t50206 = 1/c0f;
                double t50207 = b1f*t50146;
                double t50208 = b3f*t50147;
                double t50209 = b4f*t50148*t50149;
                double t50210 = b2f*c*t50144;
                double t50211 = t50210+t50207+t50208+t50209;
                double t50212 = 1/t50211;
                double t50213 = t50212*t50206*(1.0/2.0);
                double t50214 = t50213+1.0;
                double t50215 = log(t50214);
                double t50216 = a1f*c*t50144;
                double t50217 = t50216+1.0;
                double t50218 = c0f*t50215*t50217*2.0;
                double t50219 = c0p*t50161*t50159*2.0;
                double t50220 = 1/t50170;
                double t50221 = 1/t50180;
                double t50222 = 1/t50183;
                double t50223 = 1/t50174;
                double t50224 = 1/pow(rho_a[index],1.9E1/3.0);
                double t50225 = 1/(t50170*t50170);
                double t50226 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t50227 = 1/pow(rho_a[index],1.1E1/3.0);
                double t50228 = 1/(t50174*t50174);
                double t50229 = 1/(t50183*t50183);
                double t50230 = gcaa*t50162*3.0;
                double t50231 = gamma_aa[index]*t50164*t50167*6.0;
                double t50232 = gcaa*t50163*t50164*t50168*3.0;
                double t50233 = t50230+t50231+t50232;
                double t50234 = 1/pow(rho_a[index],3.5E1/3.0);
                double t50235 = 1/(t50180*t50180);
                double t50236 = gcaa*t50162*4.0;
                double t50237 = gamma_aa[index]*t50164*t50167*1.2E1;
                double t50238 = gcaa*t50163*t50164*t50168*1.2E1;
                double t50239 = gamma_aa[index]*t50163*t50165*t50166*4.0;
                double t50240 = t50236+t50237+t50238+t50239;
                double t50241 = gcaa*t50162*2.0;
                double t50242 = gamma_aa[index]*t50164*t50167*2.0;
                double t50243 = t50241+t50242;
                double t50244 = gamma_aa[index]*gcaa*t50227*(1.6E1/3.0);
                double t50245 = t50224*t50163*t50164*(1.6E1/3.0);
                double t50246 = t50244+t50245;
                double t50247 = gamma_aa[index]*gcaa*t50227*8.0;
                double t50248 = gamma_aa[index]*gcaa*t50163*t50226*t50164*8.0;
                double t50249 = t50224*t50163*t50164*1.6E1;
                double t50250 = t50247+t50248+t50249;
                double t50251 = gamma_aa[index]*gcaa*t50227*(3.2E1/3.0);
                double t50252 = gamma_aa[index]*gcaa*t50163*t50226*t50164*3.2E1;
                double t50253 = t50224*t50163*t50164*3.2E1;
                double t50254 = t50234*t50165*t50175*(3.2E1/3.0);
                double t50255 = t50251+t50252+t50253+t50254;
                double t50256 = 1/pow(rho_a[index],4.0/3.0);
                double t50257 = 1/pow(rho_a[index],5.0/3.0);
                double t50258 = 1/sqrt(t50145);
                double t50259 = 1/t50158;
                double t50260 = 1/(t50155*t50155);
                double t50261 = b4p*t50148*t50257*(2.0/3.0);
                double t50262 = b2p*c*t50256*(1.0/3.0);
                double t50263 = b1p*c*t50256*t50258*(1.0/6.0);
                double t50264 = b3p*c*t50146*t50256*(1.0/2.0);
                double t50265 = t50261+t50262+t50263+t50264;
                double t50266 = t50161*t50260*t50265*t50259;
                double t50267 = ccaa1*gcaa*t50220*t50162;
                double t50268 = ccaa4*gamma_aa[index]*t50221*t50163*t50165*t50166*4.0;
                double t50269 = ccaa2*gamma_aa[index]*t50222*t50164*t50167*2.0;
                double t50270 = ccaa3*gcaa*t50223*t50163*t50164*t50168*3.0;
                double t50271 = t50270+t50267+t50268+t50269-ccaa1*gamma_aa[index]*t50225*t50164*t50167-ccaa4*t50240* \
                   t50235*t50165*t50166*t50175-ccaa2*t50243*t50163*t50164*t50229*t50167-ccaa3*gamma_aa[index]*gcaa*t50233* \
                   t50163*t50164*t50228*t50168;
                double t50272 = 1/t50187;
                double t50273 = 1/t50196;
                double t50274 = 1/t50199;
                double t50275 = 1/t50191;
                double t50276 = 1/(t50187*t50187);
                double t50277 = 1/(t50191*t50191);
                double t50278 = 1/(t50199*t50199);
                double t50279 = gx*t50162*3.0;
                double t50280 = gamma_aa[index]*t50184*t50167*6.0;
                double t50281 = gx*t50163*t50184*t50168*3.0;
                double t50282 = t50280+t50281+t50279;
                double t50283 = 1/(t50196*t50196);
                double t50284 = gx*t50162*4.0;
                double t50285 = gamma_aa[index]*t50184*t50167*1.2E1;
                double t50286 = gx*t50163*t50184*t50168*1.2E1;
                double t50287 = gamma_aa[index]*t50163*t50166*t50185*4.0;
                double t50288 = t50284+t50285+t50286+t50287;
                double t50289 = gx*t50162*2.0;
                double t50290 = gamma_aa[index]*t50184*t50167*2.0;
                double t50291 = t50290+t50289;
                double t50292 = gamma_aa[index]*gx*t50227*(1.6E1/3.0);
                double t50293 = t50224*t50163*t50184*(1.6E1/3.0);
                double t50294 = t50292+t50293;
                double t50295 = gamma_aa[index]*gx*t50227*8.0;
                double t50296 = gamma_aa[index]*gx*t50163*t50226*t50184*8.0;
                double t50297 = t50224*t50163*t50184*1.6E1;
                double t50298 = t50295+t50296+t50297;
                double t50299 = gamma_aa[index]*gx*t50227*(3.2E1/3.0);
                double t50300 = gamma_aa[index]*gx*t50163*t50226*t50184*3.2E1;
                double t50301 = t50224*t50163*t50184*3.2E1;
                double t50302 = t50234*t50175*t50185*(3.2E1/3.0);
                double t50303 = t50300+t50301+t50302+t50299;
                v_rho_a_gamma_aa_[index] = -t50271*(t50219+t50202*t50205*(t50218-c0p*t50161*t50159*2.0))+rho_a[index]* \
                   t50271*(-t50266+t50202*t50205*(t50266-(1/(t50211*t50211)*t50217*(b2f*c*t50256*(1.0/3.0)+b4f*t50148* \
                   t50257*(2.0/3.0)+b1f*c*t50256*t50258*(1.0/6.0)+b3f*c*t50146*t50256*(1.0/2.0)))/t50214+a1f*c*c0f*t50215* \
                   t50256*(2.0/3.0)-a1p*c*c0p*t50256*t50159*(2.0/3.0))+a1p*c*c0p*t50256*t50159*(2.0/3.0))-rho_a[index]* \
                   (t50219+t50202*t50205*(t50218-t50219))*(ccaa1*gcaa*t50220*t50227*(-8.0/3.0)-ccaa2*gamma_aa[index]* \
                   t50222*t50224*t50164*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t50224*t50225*t50164*8.0+ccaa2*t50224*t50243* \
                   t50163*t50164*t50229*(1.6E1/3.0)+ccaa4*t50240*t50234*t50235*t50165*t50175*(3.2E1/3.0)+ccaa4*t50235* \
                   t50165*t50166*t50175*(gcaa*t50227*(3.2E1/3.0)+gamma_aa[index]*t50224*t50164*6.4E1+gamma_aa[index]* \
                   t50234*t50163*t50165*(1.28E2/3.0)+gcaa*t50163*t50226*t50164*9.6E1)-ccaa1*gcaa*1/(t50170*t50170*t50170) \
                   *t50163*t50226*t50164*(1.6E1/3.0)+ccaa2*t50163*t50164*t50229*t50167*(gcaa*t50227*(1.6E1/3.0)+gamma_aa[index]* \
                   t50224*t50164*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t50221*t50234*t50163*t50165*(1.28E2/3.0)+ccaa2*gamma_aa[index]* \
                   t50164*t50246*t50229*t50167*2.0-ccaa3*gcaa*t50223*t50163*t50226*t50164*2.4E1+ccaa4*gamma_aa[index]* \
                   t50163*t50235*t50165*t50255*t50166*4.0+ccaa3*gcaa*t50250*t50163*t50164*t50228*t50168*3.0-ccaa4*t50240* \
                   1/(t50180*t50180*t50180)*t50165*t50255*t50166*t50175*2.0-ccaa2*t50243*t50163*t50164*1/(t50183*t50183* \
                   t50183)*t50246*t50167*2.0+ccaa3*gamma_aa[index]*gcaa*t50163*t50164*t50228*t50168*(gcaa*t50227*8.0+ \
                   gamma_aa[index]*t50224*t50164*3.2E1+gcaa*t50163*t50226*t50164*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t50233* \
                   t50163*t50226*t50164*t50228*8.0-ccaa3*gamma_aa[index]*gcaa*t50250*t50233*t50163*t50164*1/(t50174*t50174* \
                   t50174)*t50168*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t50227*t50272*(-8.0/3.0)+cx1*gamma_aa[index]* \
                   t50224*t50184*t50276*8.0-cx2*gamma_aa[index]*t50224*t50184*t50274*(3.2E1/3.0)+cx2*t50224*t50163*t50291* \
                   t50184*t50278*(1.6E1/3.0)+cx4*t50234*t50175*t50283*t50185*t50288*(3.2E1/3.0)+cx4*t50166*t50175*t50283* \
                   t50185*(gx*t50227*(3.2E1/3.0)+gamma_aa[index]*t50224*t50184*6.4E1+gamma_aa[index]*t50234*t50163*t50185* \
                   (1.28E2/3.0)+gx*t50163*t50226*t50184*9.6E1)-cx1*gx*t50163*t50226*t50184*1/(t50187*t50187*t50187)*(1.6E1/ \
                   3.0)+cx2*t50163*t50184*t50167*t50278*(gx*t50227*(1.6E1/3.0)+gamma_aa[index]*t50224*t50184*(3.2E1/3.0) \
                   )+cx2*gamma_aa[index]*t50184*t50167*t50294*t50278*2.0-cx4*gamma_aa[index]*t50234*t50163*t50273*t50185* \
                   (1.28E2/3.0)-cx3*gx*t50163*t50226*t50184*t50275*2.4E1+cx4*gamma_aa[index]*t50303*t50163*t50166*t50283* \
                   t50185*4.0+cx3*gx*t50163*t50184*t50168*t50277*t50298*3.0-cx2*t50163*t50291*t50184*t50167*t50294*1/ \
                   (t50199*t50199*t50199)*2.0-cx4*t50303*t50166*t50175*t50185*1/(t50196*t50196*t50196)*t50288*2.0+cx3* \
                   gamma_aa[index]*gx*t50163*t50184*t50168*t50277*(gx*t50227*8.0+gamma_aa[index]*t50224*t50184*3.2E1+ \
                   gx*t50163*t50226*t50184*2.4E1)+cx3*gamma_aa[index]*gx*t50163*t50226*t50282*t50184*t50277*8.0-cx3*gamma_aa[index]* \
                   gx*t50163*1/(t50191*t50191*t50191)*t50282*t50184*t50168*t50298*2.0)+c0*pow(rho_a[index],1.0/3.0)*(cx1* \
                   gx*t50162*t50272-cx1*gamma_aa[index]*t50184*t50167*t50276+cx2*gamma_aa[index]*t50184*t50274*t50167* \
                   2.0-cx2*t50163*t50291*t50184*t50167*t50278-cx4*t50166*t50175*t50283*t50185*t50288+cx4*gamma_aa[index]* \
                   t50163*t50273*t50166*t50185*4.0+cx3*gx*t50163*t50184*t50275*t50168*3.0-cx3*gamma_aa[index]*gx*t50163* \
                   t50282*t50184*t50168*t50277)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t47893 = rho_a[index]+rho_b[index];
                double t47894 = 1/pow(t47893,1.0/3.0);
                double t47895 = c*t47894;
                double t47896 = sqrt(t47895);
                double t47897 = b1p*t47896;
                double t47898 = pow(t47895,3.0/2.0);
                double t47899 = b3p*t47898;
                double t47900 = c*c;
                double t47901 = 1/pow(t47893,2.0/3.0);
                double t47902 = b4p*t47900*t47901;
                double t47903 = b2p*c*t47894;
                double t47904 = t47902+t47903+t47897+t47899;
                double t47905 = 1/pow(t47893,4.0/3.0);
                double t47906 = 1/c0p;
                double t47907 = 1/t47904;
                double t47908 = t47906*t47907*(1.0/2.0);
                double t47909 = t47908+1.0;
                double t47910 = a1p*c*t47894;
                double t47911 = t47910+1.0;
                double t47912 = rho_a[index]-rho_b[index];
                double t47913 = t47912*t47912;
                double t47914 = 1/t47893;
                double t47915 = t47912*t47914;
                double t47916 = two_13*2.0;
                double t47917 = t47916-2.0;
                double t47918 = 1/t47917;
                double t47919 = 1/c0f;
                double t47920 = b1f*t47896;
                double t47921 = b3f*t47898;
                double t47922 = b4f*t47900*t47901;
                double t47923 = b2f*c*t47894;
                double t47924 = t47920+t47921+t47922+t47923;
                double t47925 = 1/t47924;
                double t47926 = t47925*t47919*(1.0/2.0);
                double t47927 = t47926+1.0;
                double t47928 = log(t47927);
                double t47929 = a1f*c*t47894;
                double t47930 = t47929+1.0;
                double t47931 = log(t47909);
                double t47941 = c0f*t47930*t47928*2.0;
                double t47942 = c0p*t47911*t47931*2.0;
                double t47932 = t47941-t47942;
                double t47933 = t47915+1.0;
                double t47934 = pow(t47933,4.0/3.0);
                double t47935 = -t47915+1.0;
                double t47936 = pow(t47935,4.0/3.0);
                double t47937 = t47934+t47936-2.0;
                double t47938 = 1/(t47893*t47893);
                double t47969 = t47912*t47938;
                double t47939 = t47914-t47969;
                double t47940 = 1/(t47893*t47893*t47893*t47893);
                double t47943 = t47913*t47913;
                double t47944 = 1/pow(t47893,5.0/3.0);
                double t47945 = 1/sqrt(t47895);
                double t47946 = 1/t47909;
                double t47947 = 1/(t47904*t47904);
                double t47948 = b4p*t47900*t47944*(2.0/3.0);
                double t47949 = b2p*c*t47905*(1.0/3.0);
                double t47950 = b1p*c*t47905*t47945*(1.0/6.0);
                double t47951 = b3p*c*t47905*t47896*(1.0/2.0);
                double t47952 = t47950+t47951+t47948+t47949;
                double t47953 = t47911*t47952*t47946*t47947;
                double t47954 = 1/(t47893*t47893*t47893*t47893*t47893);
                double t47955 = 1/d2fz0;
                double t47956 = 1/Aa;
                double t47957 = b1a*t47896;
                double t47958 = b3a*t47898;
                double t47959 = b4a*t47900*t47901;
                double t47960 = b2a*c*t47894;
                double t47961 = t47960+t47957+t47958+t47959;
                double t47962 = 1/t47961;
                double t47963 = t47962*t47956*(1.0/2.0);
                double t47964 = t47963+1.0;
                double t47965 = log(t47964);
                double t47966 = a1a*c*t47894;
                double t47967 = t47966+1.0;
                double t47968 = pow(t47933,1.0/3.0);
                double t47970 = t47939*t47968*(4.0/3.0);
                double t47971 = pow(t47935,1.0/3.0);
                double t47972 = t47970-t47971*t47939*(4.0/3.0);
                double t47973 = t47940*t47943;
                double t47974 = t47973-1.0;
                double t47975 = 1/pow(rho_a[index],1.0/3.0);
                double t47976 = c*t47975;
                double t47977 = sqrt(t47976);
                double t47978 = b1f*t47977;
                double t47979 = pow(t47976,3.0/2.0);
                double t47980 = b3f*t47979;
                double t47981 = 1/pow(rho_a[index],2.0/3.0);
                double t47982 = b4f*t47900*t47981;
                double t47983 = b2f*c*t47975;
                double t47984 = t47980+t47982+t47983+t47978;
                double t47985 = 1/pow(rho_a[index],4.0/3.0);
                double t47986 = b1p*t47977;
                double t47987 = b3p*t47979;
                double t47988 = b4p*t47900*t47981;
                double t47989 = b2p*c*t47975;
                double t47990 = t47986+t47987+t47988+t47989;
                double t47991 = 1/pow(rho_a[index],5.0/3.0);
                double t47992 = 1/sqrt(t47976);
                double t47993 = 1/t47984;
                double t47994 = t47919*t47993*(1.0/2.0);
                double t47995 = t47994+1.0;
                double t47996 = 1/t47990;
                double t47997 = t47906*t47996*(1.0/2.0);
                double t47998 = t47997+1.0;
                double t47999 = a1p*c*t47975;
                double t48000 = t47999+1.0;
                double t48001 = 1/t47998;
                double t48002 = 1/(t47990*t47990);
                double t48003 = b4p*t47900*t47991*(2.0/3.0);
                double t48004 = b2p*c*t47985*(1.0/3.0);
                double t48005 = b1p*c*t47992*t47985*(1.0/6.0);
                double t48006 = b3p*c*t47985*t47977*(1.0/2.0);
                double t48007 = t48003+t48004+t48005+t48006;
                double t48008 = t48000*t48001*t48002*t48007;
                double t48009 = log(t47998);
                double t48010 = pow(2.0,1.0/3.0);
                double t48011 = t48010*2.0;
                double t48012 = t48011-2.0;
                double t48013 = log(t47995);
                double t48014 = a1f*c*t47975;
                double t48015 = t48014+1.0;
                double t48016 = 1/pow(rho_b[index],8.0/3.0);
                double t48017 = 1/pow(rho_a[index],8.0/3.0);
                double t48018 = gamma_aa[index]*t48017*(1.0/2.0);
                double t48019 = gamma_bb[index]*t48016*(1.0/2.0);
                double t48020 = t48018+t48019;
                double t48021 = gcab*t48020;
                double t48022 = t48021+1.0;
                double t48023 = gcab*gcab;
                double t48024 = t48020*t48020;
                double t48025 = t48023*t48023;
                double t48026 = t48024*t48024;
                double t48027 = t48023*t48024;
                double t48028 = gcab*t48020*2.0;
                double t48029 = t48027+t48028+1.0;
                double t48030 = t48023*t48024*3.0;
                double t48031 = gcab*t48020*t48023*t48024;
                double t48032 = gcab*t48020*3.0;
                double t48033 = t48030+t48031+t48032+1.0;
                double t48034 = t48023*t48024*6.0;
                double t48035 = gcab*t48020*t48023*t48024*4.0;
                double t48036 = t48025*t48026;
                double t48037 = gcab*t48020*4.0;
                double t48038 = t48034+t48035+t48036+t48037+1.0;
                double t48039 = c0f*t48013*t48015*2.0;
                double t48041 = c0p*t48000*t48009*2.0;
                double t48040 = -t48041+t48039;
                double t48042 = 1/pow(rho_b[index],1.0/3.0);
                double t48043 = c*t48042;
                double t48044 = sqrt(t48043);
                double t48045 = pow(t48043,3.0/2.0);
                double t48046 = 1/pow(rho_b[index],2.0/3.0);
                double t48047 = b1p*t48044;
                double t48048 = b3p*t48045;
                double t48049 = b4p*t47900*t48046;
                double t48050 = b2p*c*t48042;
                double t48051 = t48050+t48047+t48048+t48049;
                double t48052 = 1/t48051;
                double t48053 = t47906*t48052*(1.0/2.0);
                double t48054 = t48053+1.0;
                double t48055 = log(t48054);
                double t48056 = a1p*c*t48042;
                double t48057 = t48056+1.0;
                double t48058 = c0p*t48055*t48057*2.0;
                double t48059 = t47940*t47932*t47943*t47918*t47937;
                double t48060 = Aa*t47918*t47937*t47955*t47965*t47974*t47967*2.0;
                double t48061 = 1/pow(rho_a[index],1.1E1/3.0);
                double t48062 = 1/(t48033*t48033);
                double t48063 = 1/(t48038*t48038);
                double t48064 = gcab*t48016*2.0;
                double t48065 = t48020*t48023*t48016*6.0;
                double t48066 = gcab*t48023*t48024*t48016*6.0;
                double t48067 = t48020*t48024*t48016*t48025*2.0;
                double t48068 = t48064+t48065+t48066+t48067;
                double t48069 = 1/(t48029*t48029);
                double t48070 = gamma_aa[index]*gcab*t48061*(8.0/3.0);
                double t48071 = gamma_aa[index]*t48020*t48023*t48061*(8.0/3.0);
                double t48072 = t48070+t48071;
                double t48073 = gcab*t48016;
                double t48074 = t48020*t48023*t48016;
                double t48075 = t48073+t48074;
                double t48076 = gamma_aa[index]*gcab*t48061*(1.6E1/3.0);
                double t48077 = gamma_aa[index]*gcab*t48023*t48024*t48061*1.6E1;
                double t48078 = gamma_aa[index]*t48020*t48024*t48025*t48061*(1.6E1/3.0);
                double t48079 = gamma_aa[index]*t48020*t48023*t48061*1.6E1;
                double t48080 = t48076+t48077+t48078+t48079;
                double t48081 = 1/(t48022*t48022);
                double t48082 = 1/t48029;
                double t48083 = gcab*t48016*(3.0/2.0);
                double t48084 = t48020*t48023*t48016*3.0;
                double t48085 = gcab*t48023*t48024*t48016*(3.0/2.0);
                double t48086 = t48083+t48084+t48085;
                double t48087 = gamma_aa[index]*gcab*t48061*4.0;
                double t48088 = gamma_aa[index]*gcab*t48023*t48024*t48061*4.0;
                double t48089 = gamma_aa[index]*t48020*t48023*t48061*8.0;
                double t48090 = t48087+t48088+t48089;
                double t48091 = 1/t48033;
                double t48092 = 1/t48038;
                v_rho_a_gamma_bb_[index] = -(t47942+t48060+t48059+t47893*(t47953-t47940*t47943*t47918*t47937*(t47953- \
                   (t47930*1/(t47924*t47924)*(b2f*c*t47905*(1.0/3.0)+b4f*t47900*t47944*(2.0/3.0)+b1f*c*t47905*t47945* \
                   (1.0/6.0)+b3f*c*t47905*t47896*(1.0/2.0)))/t47927+a1f*c*c0f*t47905*t47928*(2.0/3.0)-a1p*c*c0p*t47931* \
                   t47905*(2.0/3.0))-a1p*c*c0p*t47931*t47905*(2.0/3.0)+t47940*t47932*t47943*t47918*t47972-t47932*t47943* \
                   t47918*t47954*t47937*4.0+t47912*t47913*t47940*t47932*t47918*t47937*4.0-Aa*t47918*t47937*t47955*t47965* \
                   t47967*(t47943*t47954*4.0-t47912*t47913*t47940*4.0)*2.0+Aa*t47918*t47972*t47955*t47965*t47974*t47967* \
                   2.0+(1/(t47961*t47961)*t47918*t47937*t47955*t47974*t47967*(b2a*c*t47905*(1.0/3.0)+b4a*t47900*t47944* \
                   (2.0/3.0)+b1a*c*t47905*t47945*(1.0/6.0)+b3a*c*t47905*t47896*(1.0/2.0)))/t47964-Aa*a1a*c*t47905*t47918* \
                   t47937*t47955*t47965*t47974*(2.0/3.0))+rho_a[index]*(-t48008+t47918*t48012*(t48008-(1/(t47984*t47984) \
                   *t48015*(b2f*c*t47985*(1.0/3.0)+b4f*t47900*t47991*(2.0/3.0)+b1f*c*t47992*t47985*(1.0/6.0)+b3f*c*t47985* \
                   t47977*(1.0/2.0)))/t47995+a1f*c*c0f*t47985*t48013*(2.0/3.0)-a1p*c*c0p*t47985*t48009*(2.0/3.0))+a1p* \
                   c*c0p*t47985*t48009*(2.0/3.0))-c0p*t48000*t48009*2.0-t47918*t48012*t48040)*((ccab1*gcab*t48016*(1.0/ \
                   2.0))/t48022-ccab1*t48020*t48023*t48016*t48081*(1.0/2.0)+ccab2*t48020*t48023*t48016*t48082-ccab2*t48023* \
                   t48024*t48075*t48069-ccab4*t48025*t48026*t48063*t48068+ccab4*t48020*t48024*t48016*t48025*t48092*2.0+ \
                   ccab3*gcab*t48023*t48024*t48016*t48091*(3.0/2.0)-ccab3*gcab*t48020*t48023*t48024*t48062*t48086)+(rho_a[index]* \
                   (t48041+t47918*t48012*t48040)+rho_b[index]*(t48058-t47918*t48012*(t48058-c0f*log((t47919*(1.0/2.0) \
                   )/(b1f*t48044+b3f*t48045+b2f*c*t48042+b4f*t47900*t48046)+1.0)*(a1f*c*t48042+1.0)*2.0))-t47893*(t47942+ \
                   t48060+t48059))*(ccab4*t48025*t48026*t48063*(gamma_aa[index]*t48023*t48016*t48061*8.0+gamma_aa[index]* \
                   t48024*t48016*t48025*t48061*8.0+gamma_aa[index]*gcab*t48020*t48023*t48016*t48061*1.6E1)+ccab2*t48020* \
                   t48023*t48016*t48072*t48069-ccab2*t48023*t48024*t48072*1/(t48029*t48029*t48029)*t48075*2.0-ccab4*t48025* \
                   t48026*t48080*1/(t48038*t48038*t48038)*t48068*2.0+ccab1*gamma_aa[index]*t48023*t48016*t48061*t48081* \
                   (4.0/3.0)-ccab2*gamma_aa[index]*t48023*t48016*t48061*t48082*(4.0/3.0)-ccab4*gamma_aa[index]*t48024* \
                   t48016*t48025*t48061*t48092*8.0+ccab2*gamma_aa[index]*t48020*t48023*t48061*t48075*t48069*(8.0/3.0) \
                   +ccab2*gamma_aa[index]*t48024*t48016*t48025*t48061*t48069*(4.0/3.0)+ccab3*gcab*t48023*t48024*t48016* \
                   t48062*t48090*(3.0/2.0)+ccab4*t48020*t48024*t48016*t48025*t48080*t48063*2.0+ccab3*gcab*t48020*t48023* \
                   t48024*t48062*(gamma_aa[index]*t48023*t48016*t48061*4.0+gamma_aa[index]*gcab*t48020*t48023*t48016* \
                   t48061*4.0)-ccab1*gamma_aa[index]*gcab*t48020*1/(t48022*t48022*t48022)*t48023*t48016*t48061*(4.0/3.0) \
                   -ccab3*gcab*t48020*t48023*t48024*1/(t48033*t48033*t48033)*t48090*t48086*2.0-ccab3*gamma_aa[index]* \
                   gcab*t48020*t48023*t48016*t48061*t48091*4.0+ccab3*gamma_aa[index]*gcab*t48023*t48024*t48061*t48062* \
                   t48086*4.0+ccab4*gamma_aa[index]*t48020*t48024*t48025*t48061*t48063*t48068*(1.6E1/3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48094 = rho_a[index]+rho_b[index];
                double t48095 = 1/pow(t48094,1.0/3.0);
                double t48096 = c*t48095;
                double t48097 = sqrt(t48096);
                double t48098 = b1p*t48097;
                double t48099 = pow(t48096,3.0/2.0);
                double t48100 = b3p*t48099;
                double t48101 = c*c;
                double t48102 = 1/pow(t48094,2.0/3.0);
                double t48103 = b4p*t48101*t48102;
                double t48104 = b2p*c*t48095;
                double t48105 = t48100+t48103+t48104+t48098;
                double t48106 = 1/pow(t48094,4.0/3.0);
                double t48107 = 1/c0p;
                double t48108 = 1/t48105;
                double t48109 = t48107*t48108*(1.0/2.0);
                double t48110 = t48109+1.0;
                double t48111 = a1p*c*t48095;
                double t48112 = t48111+1.0;
                double t48113 = rho_a[index]-rho_b[index];
                double t48114 = t48113*t48113;
                double t48115 = 1/t48094;
                double t48116 = t48113*t48115;
                double t48117 = two_13*2.0;
                double t48118 = t48117-2.0;
                double t48119 = 1/t48118;
                double t48120 = 1/c0f;
                double t48121 = b1f*t48097;
                double t48122 = b3f*t48099;
                double t48123 = b4f*t48101*t48102;
                double t48124 = b2f*c*t48095;
                double t48125 = t48121+t48122+t48123+t48124;
                double t48126 = 1/t48125;
                double t48127 = t48120*t48126*(1.0/2.0);
                double t48128 = t48127+1.0;
                double t48129 = log(t48128);
                double t48130 = a1f*c*t48095;
                double t48131 = t48130+1.0;
                double t48132 = log(t48110);
                double t48143 = c0f*t48131*t48129*2.0;
                double t48144 = c0p*t48112*t48132*2.0;
                double t48133 = t48143-t48144;
                double t48134 = t48116+1.0;
                double t48135 = pow(t48134,4.0/3.0);
                double t48136 = -t48116+1.0;
                double t48137 = pow(t48136,4.0/3.0);
                double t48138 = t48135+t48137-2.0;
                double t48139 = 1/(t48094*t48094);
                double t48140 = t48113*t48139;
                double t48141 = t48140+t48115;
                double t48142 = 1/(t48094*t48094*t48094*t48094);
                double t48145 = t48114*t48114;
                double t48146 = 1/pow(t48094,5.0/3.0);
                double t48147 = 1/sqrt(t48096);
                double t48148 = 1/t48110;
                double t48149 = 1/(t48105*t48105);
                double t48150 = b4p*t48101*t48146*(2.0/3.0);
                double t48151 = b2p*c*t48106*(1.0/3.0);
                double t48152 = b1p*c*t48106*t48147*(1.0/6.0);
                double t48153 = b3p*c*t48106*t48097*(1.0/2.0);
                double t48154 = t48150+t48151+t48152+t48153;
                double t48155 = 1/(t48094*t48094*t48094*t48094*t48094);
                double t48156 = 1/d2fz0;
                double t48157 = 1/Aa;
                double t48158 = b1a*t48097;
                double t48159 = b3a*t48099;
                double t48160 = b4a*t48101*t48102;
                double t48161 = b2a*c*t48095;
                double t48162 = t48160+t48161+t48158+t48159;
                double t48163 = 1/t48162;
                double t48164 = t48163*t48157*(1.0/2.0);
                double t48165 = t48164+1.0;
                double t48166 = log(t48165);
                double t48167 = a1a*c*t48095;
                double t48168 = t48167+1.0;
                double t48169 = pow(t48134,1.0/3.0);
                double t48170 = t48141*t48169*(4.0/3.0);
                double t48171 = pow(t48136,1.0/3.0);
                double t48172 = t48170-t48141*t48171*(4.0/3.0);
                double t48173 = t48142*t48145;
                double t48174 = t48173-1.0;
                double t48175 = 1/pow(rho_b[index],1.0/3.0);
                double t48176 = c*t48175;
                double t48177 = sqrt(t48176);
                double t48178 = b1f*t48177;
                double t48179 = pow(t48176,3.0/2.0);
                double t48180 = b3f*t48179;
                double t48181 = 1/pow(rho_b[index],2.0/3.0);
                double t48182 = b4f*t48101*t48181;
                double t48183 = b2f*c*t48175;
                double t48184 = t48180+t48182+t48183+t48178;
                double t48185 = 1/pow(rho_b[index],4.0/3.0);
                double t48186 = b1p*t48177;
                double t48187 = b3p*t48179;
                double t48188 = b4p*t48101*t48181;
                double t48189 = b2p*c*t48175;
                double t48190 = t48186+t48187+t48188+t48189;
                double t48191 = 1/pow(rho_b[index],5.0/3.0);
                double t48192 = 1/sqrt(t48176);
                double t48193 = 1/t48184;
                double t48194 = t48120*t48193*(1.0/2.0);
                double t48195 = t48194+1.0;
                double t48196 = 1/t48190;
                double t48197 = t48107*t48196*(1.0/2.0);
                double t48198 = t48197+1.0;
                double t48199 = a1p*c*t48175;
                double t48200 = t48199+1.0;
                double t48201 = 1/t48198;
                double t48202 = 1/(t48190*t48190);
                double t48203 = b4p*t48101*t48191*(2.0/3.0);
                double t48204 = b2p*c*t48185*(1.0/3.0);
                double t48205 = b1p*c*t48192*t48185*(1.0/6.0);
                double t48206 = b3p*c*t48185*t48177*(1.0/2.0);
                double t48207 = t48203+t48204+t48205+t48206;
                double t48208 = t48200*t48201*t48202*t48207;
                double t48209 = log(t48198);
                double t48210 = pow(2.0,1.0/3.0);
                double t48211 = t48210*2.0;
                double t48212 = t48211-2.0;
                double t48213 = log(t48195);
                double t48214 = a1f*c*t48175;
                double t48215 = t48214+1.0;
                double t48216 = 1/pow(rho_a[index],8.0/3.0);
                double t48217 = gamma_aa[index]*t48216*(1.0/2.0);
                double t48218 = 1/pow(rho_b[index],8.0/3.0);
                double t48219 = gamma_bb[index]*t48218*(1.0/2.0);
                double t48220 = t48217+t48219;
                double t48221 = gcab*t48220;
                double t48222 = t48221+1.0;
                double t48223 = gcab*gcab;
                double t48224 = t48220*t48220;
                double t48225 = t48223*t48223;
                double t48226 = t48224*t48224;
                double t48227 = t48223*t48224;
                double t48228 = gcab*t48220*2.0;
                double t48229 = t48227+t48228+1.0;
                double t48230 = t48223*t48224*3.0;
                double t48231 = gcab*t48220*t48223*t48224;
                double t48232 = gcab*t48220*3.0;
                double t48233 = t48230+t48231+t48232+1.0;
                double t48234 = t48223*t48224*6.0;
                double t48235 = gcab*t48220*t48223*t48224*4.0;
                double t48236 = t48225*t48226;
                double t48237 = gcab*t48220*4.0;
                double t48238 = t48234+t48235+t48236+t48237+1.0;
                double t48239 = a1p*c*c0p*t48132*t48106*(2.0/3.0);
                double t48240 = 1/pow(rho_a[index],1.0/3.0);
                double t48241 = c*t48240;
                double t48242 = sqrt(t48241);
                double t48243 = pow(t48241,3.0/2.0);
                double t48244 = 1/pow(rho_a[index],2.0/3.0);
                double t48245 = b1p*t48242;
                double t48246 = b3p*t48243;
                double t48247 = b4p*t48101*t48244;
                double t48248 = b2p*c*t48240;
                double t48249 = t48245+t48246+t48247+t48248;
                double t48250 = 1/t48249;
                double t48251 = t48250*t48107*(1.0/2.0);
                double t48252 = t48251+1.0;
                double t48253 = log(t48252);
                double t48254 = a1p*c*t48240;
                double t48255 = t48254+1.0;
                double t48256 = c0p*t48253*t48255*2.0;
                double t48257 = c0f*t48213*t48215*2.0;
                double t48259 = c0p*t48200*t48209*2.0;
                double t48258 = t48257-t48259;
                double t48260 = t48133*t48142*t48145*t48119*t48138;
                double t48261 = Aa*t48119*t48138*t48156*t48174*t48166*t48168*2.0;
                double t48262 = 1/pow(rho_b[index],1.1E1/3.0);
                double t48263 = 1/(t48233*t48233);
                double t48264 = 1/(t48238*t48238);
                double t48265 = gcab*t48216*2.0;
                double t48266 = t48220*t48223*t48216*6.0;
                double t48267 = gcab*t48223*t48224*t48216*6.0;
                double t48268 = t48220*t48224*t48216*t48225*2.0;
                double t48269 = t48265+t48266+t48267+t48268;
                double t48270 = 1/(t48229*t48229);
                double t48271 = gamma_bb[index]*gcab*t48262*(8.0/3.0);
                double t48272 = gamma_bb[index]*t48220*t48223*t48262*(8.0/3.0);
                double t48273 = t48271+t48272;
                double t48274 = gcab*t48216;
                double t48275 = t48220*t48223*t48216;
                double t48276 = t48274+t48275;
                double t48277 = gamma_bb[index]*gcab*t48262*(1.6E1/3.0);
                double t48278 = gamma_bb[index]*gcab*t48223*t48224*t48262*1.6E1;
                double t48279 = gamma_bb[index]*t48220*t48224*t48225*t48262*(1.6E1/3.0);
                double t48280 = gamma_bb[index]*t48220*t48223*t48262*1.6E1;
                double t48281 = t48280+t48277+t48278+t48279;
                double t48282 = 1/(t48222*t48222);
                double t48283 = 1/t48229;
                double t48284 = gcab*t48216*(3.0/2.0);
                double t48285 = t48220*t48223*t48216*3.0;
                double t48286 = gcab*t48223*t48224*t48216*(3.0/2.0);
                double t48287 = t48284+t48285+t48286;
                double t48288 = gamma_bb[index]*gcab*t48262*4.0;
                double t48289 = gamma_bb[index]*gcab*t48223*t48224*t48262*4.0;
                double t48290 = gamma_bb[index]*t48220*t48223*t48262*8.0;
                double t48291 = t48290+t48288+t48289;
                double t48292 = 1/t48233;
                double t48293 = 1/t48238;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t48259+t48212*t48119*t48258)+rho_a[index]*(t48256-t48212* \
                   t48119*(t48256-c0f*log((t48120*(1.0/2.0))/(b1f*t48242+b3f*t48243+b2f*c*t48240+b4f*t48101*t48244)+1.0) \
                   *(a1f*c*t48240+1.0)*2.0))-t48094*(t48260+t48144+t48261))*(ccab4*t48225*t48226*t48264*(gamma_bb[index]* \
                   t48223*t48216*t48262*8.0+gamma_bb[index]*t48224*t48216*t48225*t48262*8.0+gamma_bb[index]*gcab*t48220* \
                   t48223*t48216*t48262*1.6E1)+ccab2*t48220*t48223*t48216*t48270*t48273-ccab2*t48223*t48224*t48273*1/ \
                   (t48229*t48229*t48229)*t48276*2.0-ccab4*t48225*t48226*t48281*1/(t48238*t48238*t48238)*t48269*2.0+ccab1* \
                   gamma_bb[index]*t48223*t48216*t48262*t48282*(4.0/3.0)-ccab2*gamma_bb[index]*t48223*t48216*t48262*t48283* \
                   (4.0/3.0)+ccab2*gamma_bb[index]*t48220*t48223*t48270*t48262*t48276*(8.0/3.0)+ccab2*gamma_bb[index]* \
                   t48224*t48216*t48225*t48270*t48262*(4.0/3.0)-ccab4*gamma_bb[index]*t48224*t48216*t48225*t48262*t48293* \
                   8.0+ccab3*gcab*t48223*t48224*t48216*t48263*t48291*(3.0/2.0)+ccab4*t48220*t48224*t48216*t48225*t48281* \
                   t48264*2.0+ccab3*gcab*t48220*t48223*t48224*t48263*(gamma_bb[index]*t48223*t48216*t48262*4.0+gamma_bb[index]* \
                   gcab*t48220*t48223*t48216*t48262*4.0)-ccab1*gamma_bb[index]*gcab*t48220*1/(t48222*t48222*t48222)*t48223* \
                   t48216*t48262*(4.0/3.0)-ccab3*gcab*t48220*t48223*t48224*1/(t48233*t48233*t48233)*t48291*t48287*2.0- \
                   ccab3*gamma_bb[index]*gcab*t48220*t48223*t48216*t48262*t48292*4.0+ccab3*gamma_bb[index]*gcab*t48223* \
                   t48224*t48262*t48263*t48287*4.0+ccab4*gamma_bb[index]*t48220*t48224*t48225*t48262*t48264*t48269*(1.6E1/ \
                   3.0))-(t48260+t48144+t48261+rho_b[index]*(-t48208+t48212*t48119*(t48208-(t48215*1/(t48184*t48184)* \
                   (b2f*c*t48185*(1.0/3.0)+b4f*t48101*t48191*(2.0/3.0)+b1f*c*t48192*t48185*(1.0/6.0)+b3f*c*t48185*t48177* \
                   (1.0/2.0)))/t48195+a1f*c*c0f*t48213*t48185*(2.0/3.0)-a1p*c*c0p*t48209*t48185*(2.0/3.0))+a1p*c*c0p* \
                   t48209*t48185*(2.0/3.0))-t48094*(t48239-t48112*t48154*t48148*t48149+t48133*t48142*t48145*t48172*t48119+ \
                   t48133*t48145*t48119*t48155*t48138*4.0-t48142*t48145*t48119*t48138*(t48239-t48112*t48154*t48148*t48149+ \
                   (t48131*1/(t48125*t48125)*(b2f*c*t48106*(1.0/3.0)+b4f*t48101*t48146*(2.0/3.0)+b1f*c*t48106*t48147* \
                   (1.0/6.0)+b3f*c*t48106*t48097*(1.0/2.0)))/t48128-a1f*c*c0f*t48106*t48129*(2.0/3.0))+t48113*t48114* \
                   t48133*t48142*t48119*t48138*4.0+Aa*t48119*t48138*t48156*t48166*t48168*(t48145*t48155*4.0+t48113*t48114* \
                   t48142*4.0)*2.0+Aa*t48172*t48119*t48156*t48174*t48166*t48168*2.0-(1/(t48162*t48162)*t48119*t48138* \
                   t48156*t48174*t48168*(b2a*c*t48106*(1.0/3.0)+b4a*t48101*t48146*(2.0/3.0)+b1a*c*t48106*t48147*(1.0/ \
                   6.0)+b3a*c*t48106*t48097*(1.0/2.0)))/t48165+Aa*a1a*c*t48106*t48119*t48138*t48156*t48174*t48166*(2.0/ \
                   3.0))-c0p*t48200*t48209*2.0-t48212*t48119*t48258)*((ccab1*gcab*t48216*(1.0/2.0))/t48222-ccab1*t48220* \
                   t48223*t48216*t48282*(1.0/2.0)+ccab2*t48220*t48223*t48216*t48283-ccab2*t48223*t48224*t48270*t48276- \
                   ccab4*t48225*t48226*t48264*t48269+ccab4*t48220*t48224*t48216*t48225*t48293*2.0+ccab3*gcab*t48223*t48224* \
                   t48216*t48292*(3.0/2.0)-ccab3*gcab*t48220*t48223*t48224*t48263*t48287);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48296 = 1/pow(rho_b[index],1.0/3.0);
                double t48297 = c*t48296;
                double t48298 = sqrt(t48297);
                double t48299 = pow(t48297,3.0/2.0);
                double t48300 = c*c;
                double t48301 = 1/pow(rho_b[index],2.0/3.0);
                double t48302 = 1/c0p;
                double t48303 = b1p*t48298;
                double t48304 = b3p*t48299;
                double t48305 = b4p*t48300*t48301;
                double t48306 = b2p*c*t48296;
                double t48307 = t48303+t48304+t48305+t48306;
                double t48308 = 1/t48307;
                double t48309 = t48302*t48308*(1.0/2.0);
                double t48310 = t48309+1.0;
                double t48311 = log(t48310);
                double t48312 = a1p*c*t48296;
                double t48313 = t48312+1.0;
                double t48314 = 1/pow(rho_b[index],8.0/3.0);
                double t48315 = gamma_bb[index]*gamma_bb[index];
                double t48316 = gcaa*gcaa;
                double t48317 = t48316*t48316;
                double t48318 = 1/pow(rho_b[index],3.2E1/3.0);
                double t48319 = 1/pow(rho_b[index],1.6E1/3.0);
                double t48320 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t48321 = gamma_bb[index]*gcaa*t48314;
                double t48322 = t48321+1.0;
                double t48323 = gamma_bb[index]*gcaa*t48314*3.0;
                double t48324 = gamma_bb[index]*gcaa*t48320*t48315*t48316;
                double t48325 = t48315*t48316*t48319*3.0;
                double t48326 = t48323+t48324+t48325+1.0;
                double t48327 = t48315*t48315;
                double t48328 = gamma_bb[index]*gcaa*t48314*4.0;
                double t48329 = gamma_bb[index]*gcaa*t48320*t48315*t48316*4.0;
                double t48330 = t48315*t48316*t48319*6.0;
                double t48331 = t48317*t48318*t48327;
                double t48332 = t48330+t48331+t48328+t48329+1.0;
                double t48333 = gamma_bb[index]*gcaa*t48314*2.0;
                double t48334 = t48315*t48316*t48319;
                double t48335 = t48333+t48334+1.0;
                double t48336 = rho_a[index]+rho_b[index];
                double t48337 = 1/pow(t48336,1.0/3.0);
                double t48338 = c*t48337;
                double t48339 = sqrt(t48338);
                double t48340 = b1p*t48339;
                double t48341 = pow(t48338,3.0/2.0);
                double t48342 = b3p*t48341;
                double t48343 = 1/pow(t48336,2.0/3.0);
                double t48344 = b4p*t48300*t48343;
                double t48345 = b2p*c*t48337;
                double t48346 = t48340+t48342+t48344+t48345;
                double t48347 = 1/pow(t48336,4.0/3.0);
                double t48348 = two_13*2.0;
                double t48349 = t48348-2.0;
                double t48350 = 1/t48349;
                double t48351 = 1/c0f;
                double t48352 = 1/t48346;
                double t48353 = t48302*t48352*(1.0/2.0);
                double t48354 = t48353+1.0;
                double t48355 = a1p*c*t48337;
                double t48356 = t48355+1.0;
                double t48357 = rho_a[index]-rho_b[index];
                double t48358 = t48357*t48357;
                double t48359 = 1/t48336;
                double t48360 = t48357*t48359;
                double t48361 = b1f*t48339;
                double t48362 = b3f*t48341;
                double t48363 = b4f*t48300*t48343;
                double t48364 = b2f*c*t48337;
                double t48365 = t48361+t48362+t48363+t48364;
                double t48366 = 1/t48365;
                double t48367 = t48351*t48366*(1.0/2.0);
                double t48368 = t48367+1.0;
                double t48369 = log(t48368);
                double t48370 = a1f*c*t48337;
                double t48371 = t48370+1.0;
                double t48372 = log(t48354);
                double t48383 = c0f*t48371*t48369*2.0;
                double t48384 = c0p*t48372*t48356*2.0;
                double t48373 = t48383-t48384;
                double t48374 = t48360+1.0;
                double t48375 = pow(t48374,4.0/3.0);
                double t48376 = -t48360+1.0;
                double t48377 = pow(t48376,4.0/3.0);
                double t48378 = t48375+t48377-2.0;
                double t48379 = 1/(t48336*t48336);
                double t48380 = t48357*t48379;
                double t48381 = t48380+t48359;
                double t48382 = 1/(t48336*t48336*t48336*t48336);
                double t48385 = t48358*t48358;
                double t48386 = 1/pow(t48336,5.0/3.0);
                double t48387 = 1/sqrt(t48338);
                double t48388 = 1/t48354;
                double t48389 = 1/(t48346*t48346);
                double t48390 = b4p*t48300*t48386*(2.0/3.0);
                double t48391 = b2p*c*t48347*(1.0/3.0);
                double t48392 = b1p*c*t48347*t48387*(1.0/6.0);
                double t48393 = b3p*c*t48347*t48339*(1.0/2.0);
                double t48394 = t48390+t48391+t48392+t48393;
                double t48395 = 1/(t48336*t48336*t48336*t48336*t48336);
                double t48396 = 1/d2fz0;
                double t48397 = 1/Aa;
                double t48398 = b1a*t48339;
                double t48399 = b3a*t48341;
                double t48400 = b4a*t48300*t48343;
                double t48401 = b2a*c*t48337;
                double t48402 = t48400+t48401+t48398+t48399;
                double t48403 = 1/t48402;
                double t48404 = t48403*t48397*(1.0/2.0);
                double t48405 = t48404+1.0;
                double t48406 = log(t48405);
                double t48407 = a1a*c*t48337;
                double t48408 = t48407+1.0;
                double t48409 = pow(t48374,1.0/3.0);
                double t48410 = t48381*t48409*(4.0/3.0);
                double t48411 = pow(t48376,1.0/3.0);
                double t48412 = t48410-t48411*t48381*(4.0/3.0);
                double t48413 = t48382*t48385;
                double t48414 = t48413-1.0;
                double t48415 = pow(2.0,1.0/3.0);
                double t48416 = t48415*2.0;
                double t48417 = t48416-2.0;
                double t48418 = a1f*c*t48296;
                double t48419 = t48418+1.0;
                double t48420 = b1f*t48298;
                double t48421 = b3f*t48299;
                double t48422 = b4f*t48300*t48301;
                double t48423 = b2f*c*t48296;
                double t48424 = t48420+t48421+t48422+t48423;
                double t48425 = 1/t48424;
                double t48426 = t48351*t48425*(1.0/2.0);
                double t48427 = t48426+1.0;
                double t48428 = 1/pow(rho_b[index],4.0/3.0);
                double t48429 = 1/pow(rho_b[index],5.0/3.0);
                double t48430 = 1/sqrt(t48297);
                double t48431 = log(t48427);
                double t48432 = 1/t48310;
                double t48433 = 1/(t48307*t48307);
                double t48434 = b4p*t48300*t48429*(2.0/3.0);
                double t48435 = b2p*c*t48428*(1.0/3.0);
                double t48436 = b1p*c*t48430*t48428*(1.0/6.0);
                double t48437 = b3p*c*t48428*t48298*(1.0/2.0);
                double t48438 = t48434+t48435+t48436+t48437;
                double t48439 = t48313*t48432*t48433*t48438;
                double t48440 = c0f*t48431*t48419*2.0;
                double t48441 = c0p*t48311*t48313*2.0;
                double t48442 = 1/pow(rho_a[index],8.0/3.0);
                double t48443 = gamma_aa[index]*t48442*(1.0/2.0);
                double t48444 = gamma_bb[index]*t48314*(1.0/2.0);
                double t48445 = t48443+t48444;
                double t48446 = gcab*t48445;
                double t48447 = t48446+1.0;
                double t48448 = gcab*gcab;
                double t48449 = t48445*t48445;
                double t48450 = t48448*t48448;
                double t48451 = t48449*t48449;
                double t48452 = t48448*t48449;
                double t48453 = gcab*t48445*2.0;
                double t48454 = t48452+t48453+1.0;
                double t48455 = t48448*t48449*3.0;
                double t48456 = gcab*t48445*t48448*t48449;
                double t48457 = gcab*t48445*3.0;
                double t48458 = t48455+t48456+t48457+1.0;
                double t48459 = t48448*t48449*6.0;
                double t48460 = gcab*t48445*t48448*t48449*4.0;
                double t48461 = t48450*t48451;
                double t48462 = gcab*t48445*4.0;
                double t48463 = t48460+t48461+t48462+t48459+1.0;
                double t48464 = a1p*c*c0p*t48372*t48347*(2.0/3.0);
                double t48465 = 1/pow(rho_a[index],1.0/3.0);
                double t48466 = c*t48465;
                double t48467 = sqrt(t48466);
                double t48468 = pow(t48466,3.0/2.0);
                double t48469 = 1/pow(rho_a[index],2.0/3.0);
                double t48470 = b1p*t48467;
                double t48471 = b3p*t48468;
                double t48472 = b4p*t48300*t48469;
                double t48473 = b2p*c*t48465;
                double t48474 = t48470+t48471+t48472+t48473;
                double t48475 = 1/t48474;
                double t48476 = t48302*t48475*(1.0/2.0);
                double t48477 = t48476+1.0;
                double t48478 = log(t48477);
                double t48479 = a1p*c*t48465;
                double t48480 = t48479+1.0;
                double t48481 = c0p*t48480*t48478*2.0;
                double t48482 = t48440-t48441;
                double t48483 = t48350*t48373*t48382*t48385*t48378;
                double t48484 = Aa*t48350*t48414*t48406*t48408*t48378*t48396*2.0;
                double t48485 = 1/t48447;
                double t48486 = 1/pow(rho_b[index],1.1E1/3.0);
                double t48487 = 1/(t48447*t48447);
                double t48488 = 1/t48454;
                double t48489 = 1/(t48458*t48458);
                double t48490 = 1/pow(rho_b[index],1.9E1/3.0);
                double t48491 = 1/(t48454*t48454);
                double t48492 = 1/t48458;
                double t48493 = 1/t48463;
                double t48494 = 1/(t48463*t48463);
                double t48495 = gcab*t48314*2.0;
                double t48496 = t48314*t48445*t48448*6.0;
                double t48497 = gcab*t48314*t48448*t48449*6.0;
                double t48498 = t48314*t48450*t48445*t48449*2.0;
                double t48499 = t48495+t48496+t48497+t48498;
                double t48500 = gamma_bb[index]*gcab*t48486*(8.0/3.0);
                double t48501 = gamma_bb[index]*t48445*t48448*t48486*(8.0/3.0);
                double t48502 = t48500+t48501;
                double t48503 = gcab*t48314;
                double t48504 = t48314*t48445*t48448;
                double t48505 = t48503+t48504;
                double t48506 = gamma_bb[index]*gcab*t48486*(1.6E1/3.0);
                double t48507 = gamma_bb[index]*gcab*t48448*t48449*t48486*1.6E1;
                double t48508 = gamma_bb[index]*t48450*t48445*t48449*t48486*(1.6E1/3.0);
                double t48509 = gamma_bb[index]*t48445*t48448*t48486*1.6E1;
                double t48510 = t48506+t48507+t48508+t48509;
                double t48511 = gcab*t48314*(3.0/2.0);
                double t48512 = t48314*t48445*t48448*3.0;
                double t48513 = gcab*t48314*t48448*t48449*(3.0/2.0);
                double t48514 = t48511+t48512+t48513;
                double t48515 = gamma_bb[index]*gcab*t48486*4.0;
                double t48516 = gamma_bb[index]*gcab*t48448*t48449*t48486*4.0;
                double t48517 = gamma_bb[index]*t48445*t48448*t48486*8.0;
                double t48518 = t48515+t48516+t48517;
                double t48519 = gx*gx;
                double t48520 = t48519*t48519;
                double t48521 = gamma_bb[index]*gx*t48314;
                double t48522 = t48521+1.0;
                double t48523 = gamma_bb[index]*gx*t48314*3.0;
                double t48524 = gamma_bb[index]*gx*t48320*t48315*t48519;
                double t48525 = t48315*t48319*t48519*3.0;
                double t48526 = t48523+t48524+t48525+1.0;
                double t48527 = gamma_bb[index]*gx*t48314*4.0;
                double t48528 = gamma_bb[index]*gx*t48320*t48315*t48519*4.0;
                double t48529 = t48315*t48319*t48519*6.0;
                double t48530 = t48520*t48318*t48327;
                double t48531 = t48530+t48527+t48528+t48529+1.0;
                double t48532 = gamma_bb[index]*gx*t48314*2.0;
                double t48533 = t48315*t48319*t48519;
                double t48534 = t48532+t48533+1.0;
                double t48535 = t48350*t48417*t48482;
                double t48536 = t48441+t48535;
                double t48537 = 1/t48322;
                double t48538 = 1/t48332;
                double t48539 = 1/t48335;
                double t48540 = 1/t48326;
                double t48541 = 1/(t48322*t48322);
                double t48542 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t48543 = 1/(t48326*t48326);
                double t48544 = 1/(t48335*t48335);
                double t48545 = gcaa*t48314*3.0;
                double t48546 = gamma_bb[index]*t48316*t48319*6.0;
                double t48547 = gcaa*t48320*t48315*t48316*3.0;
                double t48548 = t48545+t48546+t48547;
                double t48549 = 1/pow(rho_b[index],3.5E1/3.0);
                double t48550 = 1/(t48332*t48332);
                double t48551 = gcaa*t48314*4.0;
                double t48552 = gamma_bb[index]*t48316*t48319*1.2E1;
                double t48553 = gcaa*t48320*t48315*t48316*1.2E1;
                double t48554 = gamma_bb[index]*t48315*t48317*t48318*4.0;
                double t48555 = t48551+t48552+t48553+t48554;
                double t48556 = gcaa*t48314*2.0;
                double t48557 = gamma_bb[index]*t48316*t48319*2.0;
                double t48558 = t48556+t48557;
                double t48559 = gamma_bb[index]*gcaa*t48486*(1.6E1/3.0);
                double t48560 = t48315*t48316*t48490*(1.6E1/3.0);
                double t48561 = t48560+t48559;
                double t48562 = gamma_bb[index]*gcaa*t48486*8.0;
                double t48563 = gamma_bb[index]*gcaa*t48315*t48316*t48542*8.0;
                double t48564 = t48315*t48316*t48490*1.6E1;
                double t48565 = t48562+t48563+t48564;
                double t48566 = gamma_bb[index]*gcaa*t48486*(3.2E1/3.0);
                double t48567 = gamma_bb[index]*gcaa*t48315*t48316*t48542*3.2E1;
                double t48568 = t48315*t48316*t48490*3.2E1;
                double t48569 = t48317*t48327*t48549*(3.2E1/3.0);
                double t48570 = t48566+t48567+t48568+t48569;
                double t48571 = 1/t48427;
                double t48572 = 1/(t48424*t48424);
                double t48573 = b4f*t48300*t48429*(2.0/3.0);
                double t48574 = b2f*c*t48428*(1.0/3.0);
                double t48575 = b1f*c*t48430*t48428*(1.0/6.0);
                double t48576 = b3f*c*t48428*t48298*(1.0/2.0);
                double t48577 = t48573+t48574+t48575+t48576;
                double t48578 = a1f*c*c0f*t48431*t48428*(2.0/3.0);
                double t48579 = a1p*c*c0p*t48311*t48428*(2.0/3.0);
                double t48580 = ccaa1*gcaa*t48314*t48537;
                double t48581 = ccaa4*gamma_bb[index]*t48315*t48317*t48318*t48538*4.0;
                double t48582 = ccaa2*gamma_bb[index]*t48316*t48319*t48539*2.0;
                double t48583 = ccaa3*gcaa*t48320*t48315*t48540*t48316*3.0;
                double t48584 = t48580+t48581+t48582+t48583-ccaa1*gamma_bb[index]*t48316*t48541*t48319-ccaa4*t48550* \
                   t48317*t48318*t48327*t48555-ccaa2*t48315*t48316*t48319*t48544*t48558-ccaa3*gamma_bb[index]*gcaa*t48320* \
                   t48315*t48316*t48543*t48548;
                double t48585 = 1/t48522;
                double t48586 = 1/t48531;
                double t48587 = 1/t48534;
                double t48588 = 1/t48526;
                double t48589 = 1/(t48522*t48522);
                double t48590 = 1/(t48526*t48526);
                double t48591 = 1/(t48534*t48534);
                double t48592 = gx*t48314*3.0;
                double t48593 = gamma_bb[index]*t48319*t48519*6.0;
                double t48594 = gx*t48320*t48315*t48519*3.0;
                double t48595 = t48592+t48593+t48594;
                double t48596 = 1/(t48531*t48531);
                double t48597 = gx*t48314*4.0;
                double t48598 = gamma_bb[index]*t48319*t48519*1.2E1;
                double t48599 = gx*t48320*t48315*t48519*1.2E1;
                double t48600 = gamma_bb[index]*t48520*t48315*t48318*4.0;
                double t48601 = t48600+t48597+t48598+t48599;
                double t48602 = gx*t48314*2.0;
                double t48603 = gamma_bb[index]*t48319*t48519*2.0;
                double t48604 = t48602+t48603;
                double t48605 = gamma_bb[index]*gx*t48486*(1.6E1/3.0);
                double t48606 = t48315*t48490*t48519*(1.6E1/3.0);
                double t48607 = t48605+t48606;
                double t48608 = gamma_bb[index]*gx*t48486*8.0;
                double t48609 = gamma_bb[index]*gx*t48315*t48542*t48519*8.0;
                double t48610 = t48315*t48490*t48519*1.6E1;
                double t48611 = t48610+t48608+t48609;
                double t48612 = gamma_bb[index]*gx*t48486*(3.2E1/3.0);
                double t48613 = gamma_bb[index]*gx*t48315*t48542*t48519*3.2E1;
                double t48614 = t48315*t48490*t48519*3.2E1;
                double t48615 = t48520*t48327*t48549*(3.2E1/3.0);
                double t48616 = t48612+t48613+t48614+t48615;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t48536+rho_a[index]*(t48481-t48350*t48417*(t48481-c0f*log((t48351* \
                   (1.0/2.0))/(b1f*t48467+b3f*t48468+b2f*c*t48465+b4f*t48300*t48469)+1.0)*(a1f*c*t48465+1.0)*2.0))-t48336* \
                   (t48384+t48483+t48484))*(ccab1*gcab*t48485*t48486*(4.0/3.0)-ccab2*t48491*t48448*t48449*(gcab*t48486* \
                   (8.0/3.0)+gamma_bb[index]*t48490*t48448*(4.0/3.0)+t48445*t48448*t48486*(8.0/3.0))-ccab4*t48450*t48451* \
                   t48494*(gcab*t48486*(1.6E1/3.0)+gamma_bb[index]*t48490*t48448*8.0+t48445*t48448*t48486*1.6E1+gamma_bb[index]* \
                   t48450*t48490*t48449*8.0+gcab*t48448*t48449*t48486*1.6E1+t48450*t48445*t48449*t48486*(1.6E1/3.0)+gamma_bb[index]* \
                   gcab*t48445*t48490*t48448*1.6E1)-ccab1*gamma_bb[index]*t48490*t48448*t48487*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t48490*t48448*t48488*(4.0/3.0)-ccab1*t48445*t48448*t48486*t48487*(4.0/3.0)+ccab2*t48445*t48448*t48486* \
                   t48488*(8.0/3.0)-ccab2*t48502*t48314*t48445*t48491*t48448+ccab4*t48450*t48445*t48493*t48449*t48486* \
                   (1.6E1/3.0)+ccab4*t48510*t48450*t48451*1/(t48463*t48463*t48463)*t48499*2.0+ccab2*t48502*t48505*1/(t48454* \
                   t48454*t48454)*t48448*t48449*2.0+ccab4*gamma_bb[index]*t48450*t48490*t48493*t48449*8.0+ccab3*gcab* \
                   t48492*t48448*t48449*t48486*4.0+ccab3*gamma_bb[index]*gcab*t48445*t48490*t48492*t48448*4.0-ccab2*gamma_bb[index]* \
                   t48505*t48445*t48491*t48448*t48486*(8.0/3.0)-ccab3*gcab*t48314*t48518*t48448*t48449*t48489*(3.0/2.0) \
                   -ccab4*t48510*t48314*t48450*t48445*t48449*t48494*2.0-ccab3*gcab*t48445*t48448*t48449*t48489*(gcab* \
                   t48486*4.0+gamma_bb[index]*t48490*t48448*4.0+t48445*t48448*t48486*8.0+gcab*t48448*t48449*t48486*4.0+ \
                   gamma_bb[index]*gcab*t48445*t48490*t48448*4.0)+ccab1*gamma_bb[index]*gcab*t48445*t48490*1/(t48447* \
                   t48447*t48447)*t48448*(4.0/3.0)+ccab3*gcab*t48514*t48445*t48518*t48448*t48449*1/(t48458*t48458*t48458) \
                   *2.0-ccab3*gamma_bb[index]*gcab*t48514*t48448*t48449*t48486*t48489*4.0-ccab4*gamma_bb[index]*t48450* \
                   t48445*t48449*t48494*t48486*t48499*(1.6E1/3.0))-(-t48441+t48384+t48483+t48484+rho_b[index]*(-t48439+ \
                   t48579+t48350*t48417*(t48439+t48578-t48571*t48419*t48572*t48577-a1p*c*c0p*t48311*t48428*(2.0/3.0)) \
                   )-t48336*(t48464-t48356*t48394*t48388*t48389+t48412*t48350*t48373*t48382*t48385+t48350*t48373*t48385* \
                   t48395*t48378*4.0-t48350*t48382*t48385*t48378*(t48464-t48356*t48394*t48388*t48389+(t48371*1/(t48365* \
                   t48365)*(b2f*c*t48347*(1.0/3.0)+b4f*t48300*t48386*(2.0/3.0)+b1f*c*t48347*t48387*(1.0/6.0)+b3f*c*t48347* \
                   t48339*(1.0/2.0)))/t48368-a1f*c*c0f*t48347*t48369*(2.0/3.0))+t48350*t48373*t48382*t48357*t48358*t48378* \
                   4.0+Aa*t48350*t48406*t48408*t48378*t48396*(t48385*t48395*4.0+t48382*t48357*t48358*4.0)*2.0+Aa*t48412* \
                   t48350*t48414*t48406*t48408*t48396*2.0-(1/(t48402*t48402)*t48350*t48414*t48408*t48378*t48396*(b2a* \
                   c*t48347*(1.0/3.0)+b4a*t48300*t48386*(2.0/3.0)+b1a*c*t48347*t48387*(1.0/6.0)+b3a*c*t48347*t48339*(1.0/ \
                   2.0)))/t48405+Aa*a1a*c*t48350*t48414*t48406*t48347*t48378*t48396*(2.0/3.0))-t48350*t48417*t48482)* \
                   (ccab1*gcab*t48314*t48485*(1.0/2.0)-ccab1*t48314*t48445*t48448*t48487*(1.0/2.0)+ccab2*t48314*t48445* \
                   t48448*t48488-ccab2*t48505*t48491*t48448*t48449-ccab4*t48450*t48451*t48494*t48499+ccab4*t48314*t48450* \
                   t48445*t48493*t48449*2.0+ccab3*gcab*t48314*t48492*t48448*t48449*(3.0/2.0)-ccab3*gcab*t48514*t48445* \
                   t48448*t48449*t48489)-t48584*(t48441+t48350*t48417*(t48440-c0p*t48311*t48313*2.0))-rho_b[index]*t48536* \
                   (ccaa1*gcaa*t48537*t48486*(-8.0/3.0)+ccaa1*gamma_bb[index]*t48316*t48541*t48490*8.0-ccaa2*gamma_bb[index]* \
                   t48316*t48490*t48539*(3.2E1/3.0)+ccaa2*t48315*t48316*t48490*t48544*t48558*(1.6E1/3.0)+ccaa4*t48550* \
                   t48317*t48327*t48555*t48549*(3.2E1/3.0)+ccaa4*t48550*t48317*t48318*t48327*(gcaa*t48486*(3.2E1/3.0) \
                   +gamma_bb[index]*t48316*t48490*6.4E1+gamma_bb[index]*t48315*t48317*t48549*(1.28E2/3.0)+gcaa*t48315* \
                   t48316*t48542*9.6E1)-ccaa1*gcaa*1/(t48322*t48322*t48322)*t48315*t48316*t48542*(1.6E1/3.0)+ccaa2*t48315* \
                   t48316*t48319*t48544*(gcaa*t48486*(1.6E1/3.0)+gamma_bb[index]*t48316*t48490*(3.2E1/3.0))+ccaa2*gamma_bb[index]* \
                   t48316*t48561*t48319*t48544*2.0-ccaa4*gamma_bb[index]*t48315*t48317*t48538*t48549*(1.28E2/3.0)-ccaa3* \
                   gcaa*t48315*t48540*t48316*t48542*2.4E1+ccaa4*gamma_bb[index]*t48315*t48550*t48317*t48318*t48570*4.0+ \
                   ccaa3*gcaa*t48320*t48315*t48316*t48543*t48565*3.0-ccaa4*1/(t48332*t48332*t48332)*t48317*t48318*t48327* \
                   t48570*t48555*2.0-ccaa2*t48315*t48316*1/(t48335*t48335*t48335)*t48561*t48319*t48558*2.0+ccaa3*gamma_bb[index]* \
                   gcaa*t48320*t48315*t48316*t48543*(gcaa*t48486*8.0+gamma_bb[index]*t48316*t48490*3.2E1+gcaa*t48315* \
                   t48316*t48542*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t48315*t48316*t48542*t48543*t48548*8.0-ccaa3*gamma_bb[index]* \
                   gcaa*t48320*t48315*t48316*1/(t48326*t48326*t48326)*t48565*t48548*2.0)+c0*pow(rho_b[index],4.0/3.0) \
                   *(cx1*gx*t48486*t48585*(-8.0/3.0)+cx1*gamma_bb[index]*t48490*t48519*t48589*8.0-cx2*gamma_bb[index]* \
                   t48490*t48519*t48587*(3.2E1/3.0)+cx2*t48315*t48604*t48490*t48519*t48591*(1.6E1/3.0)+cx4*t48520*t48601* \
                   t48327*t48549*t48596*(3.2E1/3.0)+cx4*t48520*t48318*t48327*t48596*(gx*t48486*(3.2E1/3.0)+gamma_bb[index]* \
                   t48490*t48519*6.4E1+gamma_bb[index]*t48520*t48315*t48549*(1.28E2/3.0)+gx*t48315*t48542*t48519*9.6E1) \
                   -cx1*gx*t48315*1/(t48522*t48522*t48522)*t48542*t48519*(1.6E1/3.0)+cx2*t48315*t48319*t48519*t48591* \
                   (gx*t48486*(1.6E1/3.0)+gamma_bb[index]*t48490*t48519*(3.2E1/3.0))+cx2*gamma_bb[index]*t48319*t48607* \
                   t48519*t48591*2.0-cx4*gamma_bb[index]*t48520*t48315*t48549*t48586*(1.28E2/3.0)-cx3*gx*t48315*t48542* \
                   t48519*t48588*2.4E1+cx4*gamma_bb[index]*t48520*t48315*t48318*t48616*t48596*4.0+cx3*gx*t48320*t48611* \
                   t48315*t48590*t48519*3.0-cx2*t48315*t48604*1/(t48534*t48534*t48534)*t48319*t48607*t48519*2.0-cx4*t48520* \
                   t48601*1/(t48531*t48531*t48531)*t48318*t48327*t48616*2.0+cx3*gamma_bb[index]*gx*t48320*t48315*t48590* \
                   t48519*(gx*t48486*8.0+gamma_bb[index]*t48490*t48519*3.2E1+gx*t48315*t48542*t48519*2.4E1)+cx3*gamma_bb[index]* \
                   gx*t48315*t48542*t48590*t48519*t48595*8.0-cx3*gamma_bb[index]*gx*t48320*t48611*t48315*1/(t48526*t48526* \
                   t48526)*t48519*t48595*2.0)+rho_b[index]*t48584*(-t48439+t48579+t48350*t48417*(t48439+t48578-t48579- \
                   t48571*t48419*t48572*t48577))+c0*pow(rho_b[index],1.0/3.0)*(cx1*gx*t48314*t48585-cx1*gamma_bb[index]* \
                   t48319*t48519*t48589+cx2*gamma_bb[index]*t48319*t48519*t48587*2.0-cx2*t48315*t48604*t48319*t48519* \
                   t48591-cx4*t48520*t48601*t48318*t48327*t48596+cx4*gamma_bb[index]*t48520*t48315*t48318*t48586*4.0+ \
                   cx3*gx*t48320*t48315*t48519*t48588*3.0-cx3*gamma_bb[index]*gx*t48320*t48315*t48590*t48519*t48595)* \
                   (4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t49510 = 1/pow(rho_b[index],1.0/3.0);
                double t49511 = c*t49510;
                double t49512 = sqrt(t49511);
                double t49513 = pow(t49511,3.0/2.0);
                double t49514 = c*c;
                double t49515 = 1/pow(rho_b[index],2.0/3.0);
                double t49516 = 1/c0p;
                double t49517 = b1p*t49512;
                double t49518 = b3p*t49513;
                double t49519 = b4p*t49514*t49515;
                double t49520 = b2p*c*t49510;
                double t49521 = t49520+t49517+t49518+t49519;
                double t49522 = 1/t49521;
                double t49523 = t49522*t49516*(1.0/2.0);
                double t49524 = t49523+1.0;
                double t49525 = log(t49524);
                double t49526 = a1p*c*t49510;
                double t49527 = t49526+1.0;
                double t49528 = 1/pow(rho_b[index],8.0/3.0);
                double t49529 = gamma_bb[index]*gamma_bb[index];
                double t49530 = gcaa*gcaa;
                double t49531 = t49530*t49530;
                double t49532 = 1/pow(rho_b[index],3.2E1/3.0);
                double t49533 = 1/pow(rho_b[index],1.6E1/3.0);
                double t49534 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49535 = gamma_bb[index]*gcaa*t49528;
                double t49536 = t49535+1.0;
                double t49537 = gamma_bb[index]*gcaa*t49528*3.0;
                double t49538 = gamma_bb[index]*gcaa*t49530*t49534*t49529;
                double t49539 = t49530*t49533*t49529*3.0;
                double t49540 = t49537+t49538+t49539+1.0;
                double t49541 = t49529*t49529;
                double t49542 = gamma_bb[index]*gcaa*t49528*4.0;
                double t49543 = gamma_bb[index]*gcaa*t49530*t49534*t49529*4.0;
                double t49544 = t49530*t49533*t49529*6.0;
                double t49545 = t49531*t49532*t49541;
                double t49546 = t49542+t49543+t49544+t49545+1.0;
                double t49547 = gamma_bb[index]*gcaa*t49528*2.0;
                double t49548 = t49530*t49533*t49529;
                double t49549 = t49547+t49548+1.0;
                double t49550 = gx*gx;
                double t49551 = t49550*t49550;
                double t49552 = gamma_bb[index]*gx*t49528;
                double t49553 = t49552+1.0;
                double t49554 = gamma_bb[index]*gx*t49528*3.0;
                double t49555 = gamma_bb[index]*gx*t49550*t49534*t49529;
                double t49556 = t49550*t49533*t49529*3.0;
                double t49557 = t49554+t49555+t49556+1.0;
                double t49558 = gamma_bb[index]*gx*t49528*4.0;
                double t49559 = gamma_bb[index]*gx*t49550*t49534*t49529*4.0;
                double t49560 = t49550*t49533*t49529*6.0;
                double t49561 = t49532*t49541*t49551;
                double t49562 = t49560+t49561+t49558+t49559+1.0;
                double t49563 = gamma_bb[index]*gx*t49528*2.0;
                double t49564 = t49550*t49533*t49529;
                double t49565 = t49563+t49564+1.0;
                double t49566 = pow(2.0,1.0/3.0);
                double t49567 = t49566*2.0;
                double t49568 = t49567-2.0;
                double t49569 = two_13*2.0;
                double t49570 = t49569-2.0;
                double t49571 = 1/t49570;
                double t49572 = 1/c0f;
                double t49573 = b1f*t49512;
                double t49574 = b3f*t49513;
                double t49575 = b4f*t49514*t49515;
                double t49576 = b2f*c*t49510;
                double t49577 = t49573+t49574+t49575+t49576;
                double t49578 = 1/t49577;
                double t49579 = t49572*t49578*(1.0/2.0);
                double t49580 = t49579+1.0;
                double t49581 = log(t49580);
                double t49582 = a1f*c*t49510;
                double t49583 = t49582+1.0;
                double t49584 = c0f*t49581*t49583*2.0;
                double t49585 = c0p*t49525*t49527*2.0;
                double t49586 = 1/t49536;
                double t49587 = 1/t49546;
                double t49588 = 1/t49549;
                double t49589 = 1/t49540;
                double t49590 = 1/pow(rho_b[index],1.9E1/3.0);
                double t49591 = 1/(t49536*t49536);
                double t49592 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t49593 = 1/pow(rho_b[index],1.1E1/3.0);
                double t49594 = 1/(t49540*t49540);
                double t49595 = 1/(t49549*t49549);
                double t49596 = gcaa*t49528*3.0;
                double t49597 = gamma_bb[index]*t49530*t49533*6.0;
                double t49598 = gcaa*t49530*t49534*t49529*3.0;
                double t49599 = t49596+t49597+t49598;
                double t49600 = 1/pow(rho_b[index],3.5E1/3.0);
                double t49601 = 1/(t49546*t49546);
                double t49602 = gcaa*t49528*4.0;
                double t49603 = gamma_bb[index]*t49530*t49533*1.2E1;
                double t49604 = gcaa*t49530*t49534*t49529*1.2E1;
                double t49605 = gamma_bb[index]*t49531*t49532*t49529*4.0;
                double t49606 = t49602+t49603+t49604+t49605;
                double t49607 = gcaa*t49528*2.0;
                double t49608 = gamma_bb[index]*t49530*t49533*2.0;
                double t49609 = t49607+t49608;
                double t49610 = gamma_bb[index]*gcaa*t49593*(1.6E1/3.0);
                double t49611 = t49530*t49590*t49529*(1.6E1/3.0);
                double t49612 = t49610+t49611;
                double t49613 = gamma_bb[index]*gcaa*t49593*8.0;
                double t49614 = gamma_bb[index]*gcaa*t49530*t49529*t49592*8.0;
                double t49615 = t49530*t49590*t49529*1.6E1;
                double t49616 = t49613+t49614+t49615;
                double t49617 = gamma_bb[index]*gcaa*t49593*(3.2E1/3.0);
                double t49618 = gamma_bb[index]*gcaa*t49530*t49529*t49592*3.2E1;
                double t49619 = t49530*t49590*t49529*3.2E1;
                double t49620 = t49600*t49531*t49541*(3.2E1/3.0);
                double t49621 = t49620+t49617+t49618+t49619;
                double t49622 = 1/pow(rho_b[index],4.0/3.0);
                double t49623 = 1/pow(rho_b[index],5.0/3.0);
                double t49624 = 1/sqrt(t49511);
                double t49625 = 1/t49524;
                double t49626 = 1/(t49521*t49521);
                double t49627 = b4p*t49514*t49623*(2.0/3.0);
                double t49628 = b2p*c*t49622*(1.0/3.0);
                double t49629 = b1p*c*t49622*t49624*(1.0/6.0);
                double t49630 = b3p*c*t49512*t49622*(1.0/2.0);
                double t49631 = t49630+t49627+t49628+t49629;
                double t49632 = t49631*t49625*t49527*t49626;
                double t49633 = ccaa1*gcaa*t49528*t49586;
                double t49634 = ccaa4*gamma_bb[index]*t49531*t49532*t49529*t49587*4.0;
                double t49635 = ccaa2*gamma_bb[index]*t49530*t49533*t49588*2.0;
                double t49636 = ccaa3*gcaa*t49530*t49534*t49529*t49589*3.0;
                double t49637 = t49633+t49634+t49635+t49636-ccaa1*gamma_bb[index]*t49530*t49533*t49591-ccaa4*t49601* \
                   t49531*t49532*t49541*t49606-ccaa2*t49530*t49533*t49609*t49529*t49595-ccaa3*gamma_bb[index]*gcaa*t49530* \
                   t49534*t49529*t49594*t49599;
                double t49638 = 1/t49553;
                double t49639 = 1/t49562;
                double t49640 = 1/t49565;
                double t49641 = 1/t49557;
                double t49642 = 1/(t49553*t49553);
                double t49643 = 1/(t49557*t49557);
                double t49644 = 1/(t49565*t49565);
                double t49645 = gx*t49528*3.0;
                double t49646 = gamma_bb[index]*t49550*t49533*6.0;
                double t49647 = gx*t49550*t49534*t49529*3.0;
                double t49648 = t49645+t49646+t49647;
                double t49649 = 1/(t49562*t49562);
                double t49650 = gx*t49528*4.0;
                double t49651 = gamma_bb[index]*t49550*t49533*1.2E1;
                double t49652 = gx*t49550*t49534*t49529*1.2E1;
                double t49653 = gamma_bb[index]*t49532*t49551*t49529*4.0;
                double t49654 = t49650+t49651+t49652+t49653;
                double t49655 = gx*t49528*2.0;
                double t49656 = gamma_bb[index]*t49550*t49533*2.0;
                double t49657 = t49655+t49656;
                double t49658 = gamma_bb[index]*gx*t49593*(1.6E1/3.0);
                double t49659 = t49550*t49590*t49529*(1.6E1/3.0);
                double t49660 = t49658+t49659;
                double t49661 = gamma_bb[index]*gx*t49593*8.0;
                double t49662 = gamma_bb[index]*gx*t49550*t49529*t49592*8.0;
                double t49663 = t49550*t49590*t49529*1.6E1;
                double t49664 = t49661+t49662+t49663;
                double t49665 = gamma_bb[index]*gx*t49593*(3.2E1/3.0);
                double t49666 = gamma_bb[index]*gx*t49550*t49529*t49592*3.2E1;
                double t49667 = t49550*t49590*t49529*3.2E1;
                double t49668 = t49600*t49541*t49551*(3.2E1/3.0);
                double t49669 = t49665+t49666+t49667+t49668;
                v_rho_b_gamma_bb_[index] = -t49637*(t49585+t49571*t49568*(t49584-c0p*t49525*t49527*2.0))+rho_b[index]* \
                   t49637*(-t49632+t49571*t49568*(t49632-(t49583*1/(t49577*t49577)*(b2f*c*t49622*(1.0/3.0)+b4f*t49514* \
                   t49623*(2.0/3.0)+b1f*c*t49622*t49624*(1.0/6.0)+b3f*c*t49512*t49622*(1.0/2.0)))/t49580+a1f*c*c0f*t49622* \
                   t49581*(2.0/3.0)-a1p*c*c0p*t49622*t49525*(2.0/3.0))+a1p*c*c0p*t49622*t49525*(2.0/3.0))-rho_b[index]* \
                   (t49585+t49571*t49568*(t49584-t49585))*(ccaa1*gcaa*t49593*t49586*(-8.0/3.0)+ccaa1*gamma_bb[index]* \
                   t49530*t49590*t49591*8.0-ccaa2*gamma_bb[index]*t49530*t49590*t49588*(3.2E1/3.0)+ccaa4*t49600*t49601* \
                   t49531*t49541*t49606*(3.2E1/3.0)+ccaa2*t49530*t49590*t49609*t49529*t49595*(1.6E1/3.0)+ccaa4*t49601* \
                   t49531*t49532*t49541*(gcaa*t49593*(3.2E1/3.0)+gamma_bb[index]*t49530*t49590*6.4E1+gamma_bb[index]* \
                   t49600*t49531*t49529*(1.28E2/3.0)+gcaa*t49530*t49529*t49592*9.6E1)-ccaa1*gcaa*t49530*1/(t49536*t49536* \
                   t49536)*t49529*t49592*(1.6E1/3.0)+ccaa2*t49530*t49533*t49529*t49595*(gcaa*t49593*(1.6E1/3.0)+gamma_bb[index]* \
                   t49530*t49590*(3.2E1/3.0))+ccaa2*gamma_bb[index]*t49530*t49612*t49533*t49595*2.0-ccaa4*gamma_bb[index]* \
                   t49600*t49531*t49529*t49587*(1.28E2/3.0)-ccaa3*gcaa*t49530*t49529*t49592*t49589*2.4E1+ccaa4*gamma_bb[index]* \
                   t49601*t49531*t49621*t49532*t49529*4.0+ccaa3*gcaa*t49530*t49534*t49616*t49529*t49594*3.0-ccaa4*t49531* \
                   t49621*t49532*t49541*t49606*1/(t49546*t49546*t49546)*2.0-ccaa2*t49530*t49612*t49533*t49609*t49529* \
                   1/(t49549*t49549*t49549)*2.0+ccaa3*gamma_bb[index]*gcaa*t49530*t49534*t49529*t49594*(gcaa*t49593*8.0+ \
                   gamma_bb[index]*t49530*t49590*3.2E1+gcaa*t49530*t49529*t49592*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t49530* \
                   t49529*t49592*t49594*t49599*8.0-ccaa3*gamma_bb[index]*gcaa*t49530*1/(t49540*t49540*t49540)*t49534* \
                   t49616*t49529*t49599*2.0)+c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t49593*t49638*(-8.0/3.0)+cx1*gamma_bb[index]* \
                   t49550*t49642*t49590*8.0-cx2*gamma_bb[index]*t49550*t49640*t49590*(3.2E1/3.0)+cx2*t49550*t49590*t49644* \
                   t49529*t49657*(1.6E1/3.0)+cx4*t49600*t49541*t49551*t49654*t49649*(3.2E1/3.0)+cx4*t49532*t49541*t49551* \
                   t49649*(gx*t49593*(3.2E1/3.0)+gamma_bb[index]*t49550*t49590*6.4E1+gamma_bb[index]*t49600*t49551*t49529* \
                   (1.28E2/3.0)+gx*t49550*t49529*t49592*9.6E1)-cx1*gx*t49550*1/(t49553*t49553*t49553)*t49529*t49592*(1.6E1/ \
                   3.0)+cx2*t49550*t49533*t49644*t49529*(gx*t49593*(1.6E1/3.0)+gamma_bb[index]*t49550*t49590*(3.2E1/3.0) \
                   )+cx2*gamma_bb[index]*t49550*t49533*t49660*t49644*2.0-cx4*gamma_bb[index]*t49600*t49551*t49529*t49639* \
                   (1.28E2/3.0)-cx3*gx*t49550*t49641*t49529*t49592*2.4E1+cx4*gamma_bb[index]*t49532*t49551*t49529*t49649* \
                   t49669*4.0+cx3*gx*t49550*t49534*t49643*t49529*t49664*3.0-cx2*t49550*t49533*t49660*t49529*1/(t49565* \
                   t49565*t49565)*t49657*2.0-cx4*t49532*t49541*t49551*1/(t49562*t49562*t49562)*t49654*t49669*2.0+cx3* \
                   gamma_bb[index]*gx*t49550*t49534*t49643*t49529*(gx*t49593*8.0+gamma_bb[index]*t49550*t49590*3.2E1+ \
                   gx*t49550*t49529*t49592*2.4E1)+cx3*gamma_bb[index]*gx*t49550*t49643*t49529*t49592*t49648*8.0-cx3*gamma_bb[index]* \
                   gx*t49550*t49534*t49529*t49664*1/(t49557*t49557*t49557)*t49648*2.0)+c0*pow(rho_b[index],1.0/3.0)*(cx1* \
                   gx*t49528*t49638-cx1*gamma_bb[index]*t49550*t49533*t49642+cx2*gamma_bb[index]*t49550*t49640*t49533* \
                   2.0-cx2*t49550*t49533*t49644*t49529*t49657-cx4*t49532*t49541*t49551*t49654*t49649+cx4*gamma_bb[index]* \
                   t49532*t49551*t49529*t49639*4.0+cx3*gx*t49550*t49641*t49534*t49529*3.0-cx3*gamma_bb[index]*gx*t49550* \
                   t49534*t49643*t49529*t49648)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48618 = 1/pow(rho_a[index],1.0/3.0);
                double t48619 = c*t48618;
                double t48620 = sqrt(t48619);
                double t48621 = pow(t48619,3.0/2.0);
                double t48622 = c*c;
                double t48623 = 1/pow(rho_a[index],2.0/3.0);
                double t48624 = 1/c0p;
                double t48625 = b1p*t48620;
                double t48626 = b3p*t48621;
                double t48627 = b4p*t48622*t48623;
                double t48628 = b2p*c*t48618;
                double t48629 = t48625+t48626+t48627+t48628;
                double t48630 = 1/t48629;
                double t48631 = t48630*t48624*(1.0/2.0);
                double t48632 = t48631+1.0;
                double t48633 = log(t48632);
                double t48634 = a1p*c*t48618;
                double t48635 = t48634+1.0;
                double t48636 = pow(2.0,1.0/3.0);
                double t48637 = t48636*2.0;
                double t48638 = t48637-2.0;
                double t48639 = two_13*2.0;
                double t48640 = t48639-2.0;
                double t48641 = 1/t48640;
                double t48642 = 1/c0f;
                double t48643 = 1/pow(rho_b[index],1.0/3.0);
                double t48644 = c*t48643;
                double t48645 = sqrt(t48644);
                double t48646 = pow(t48644,3.0/2.0);
                double t48647 = 1/pow(rho_b[index],2.0/3.0);
                double t48648 = b1p*t48645;
                double t48649 = b3p*t48646;
                double t48650 = b4p*t48622*t48647;
                double t48651 = b2p*c*t48643;
                double t48652 = t48650+t48651+t48648+t48649;
                double t48653 = 1/t48652;
                double t48654 = t48624*t48653*(1.0/2.0);
                double t48655 = t48654+1.0;
                double t48656 = log(t48655);
                double t48657 = a1p*c*t48643;
                double t48658 = t48657+1.0;
                double t48659 = c0p*t48656*t48658*2.0;
                double t48660 = rho_a[index]+rho_b[index];
                double t48661 = 1/pow(t48660,1.0/3.0);
                double t48662 = c*t48661;
                double t48663 = sqrt(t48662);
                double t48664 = pow(t48662,3.0/2.0);
                double t48665 = 1/pow(t48660,2.0/3.0);
                double t48666 = b1p*t48663;
                double t48667 = b3p*t48664;
                double t48668 = b4p*t48622*t48665;
                double t48669 = b2p*c*t48661;
                double t48670 = t48666+t48667+t48668+t48669;
                double t48671 = 1/t48670;
                double t48672 = t48624*t48671*(1.0/2.0);
                double t48673 = t48672+1.0;
                double t48674 = log(t48673);
                double t48675 = a1p*c*t48661;
                double t48676 = t48675+1.0;
                double t48677 = c0p*t48674*t48676*2.0;
                double t48678 = rho_a[index]-rho_b[index];
                double t48679 = t48678*t48678;
                double t48680 = 1/t48660;
                double t48681 = t48680*t48678;
                double t48682 = 1/(t48660*t48660*t48660*t48660);
                double t48683 = t48679*t48679;
                double t48684 = t48681+1.0;
                double t48685 = pow(t48684,4.0/3.0);
                double t48686 = -t48681+1.0;
                double t48687 = pow(t48686,4.0/3.0);
                double t48688 = t48685+t48687-2.0;
                double t48689 = gcab*gcab;
                double t48690 = 1/pow(rho_a[index],1.6E1/3.0);
                double t48691 = 1/pow(rho_a[index],8.0/3.0);
                double t48692 = gamma_aa[index]*t48691*(1.0/2.0);
                double t48693 = 1/pow(rho_b[index],8.0/3.0);
                double t48694 = gamma_bb[index]*t48693*(1.0/2.0);
                double t48695 = t48692+t48694;
                double t48696 = gcab*t48695;
                double t48697 = t48696+1.0;
                double t48698 = t48695*t48695;
                double t48699 = t48689*t48698;
                double t48700 = gcab*t48695*2.0;
                double t48701 = t48700+t48699+1.0;
                double t48702 = t48689*t48689;
                double t48719 = gcab*t48691*2.0;
                double t48720 = t48691*t48695*t48689*6.0;
                double t48721 = gcab*t48691*t48689*t48698*6.0;
                double t48722 = t48702*t48691*t48695*t48698*2.0;
                double t48703 = t48720+t48721+t48722+t48719;
                double t48704 = t48698*t48698;
                double t48724 = gcab*t48691*(3.0/2.0);
                double t48725 = t48691*t48695*t48689*3.0;
                double t48726 = gcab*t48691*t48689*t48698*(3.0/2.0);
                double t48705 = t48724+t48725+t48726;
                double t48706 = t48689*t48698*3.0;
                double t48707 = gcab*t48695*t48689*t48698;
                double t48708 = gcab*t48695*3.0;
                double t48709 = t48706+t48707+t48708+1.0;
                double t48716 = gcab*t48691;
                double t48717 = t48691*t48695*t48689;
                double t48710 = t48716+t48717;
                double t48711 = t48689*t48698*6.0;
                double t48712 = gcab*t48695*t48689*t48698*4.0;
                double t48713 = t48702*t48704;
                double t48714 = gcab*t48695*4.0;
                double t48715 = t48711+t48712+t48713+t48714+1.0;
                double t48718 = 1/(t48701*t48701);
                double t48723 = 1/(t48715*t48715);
                double t48727 = 1/(t48709*t48709);
                double t48728 = c0p*t48633*t48635*2.0;
                double t48729 = gx*gx;
                double t48730 = gamma_aa[index]*gamma_aa[index];
                double t48731 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t48732 = t48729*t48729;
                double t48733 = 1/pow(rho_a[index],3.2E1/3.0);
                double t48734 = gamma_aa[index]*gx*t48691;
                double t48735 = t48734+1.0;
                double t48736 = gamma_aa[index]*gx*t48691*2.0;
                double t48737 = t48730*t48690*t48729;
                double t48738 = t48736+t48737+1.0;
                double t48739 = gamma_aa[index]*gx*t48691*3.0;
                double t48740 = gamma_aa[index]*gx*t48730*t48731*t48729;
                double t48741 = t48730*t48690*t48729*3.0;
                double t48742 = t48740+t48741+t48739+1.0;
                double t48743 = t48730*t48730;
                double t48759 = gx*t48691*4.0;
                double t48760 = gamma_aa[index]*t48690*t48729*1.2E1;
                double t48761 = gx*t48730*t48731*t48729*1.2E1;
                double t48762 = gamma_aa[index]*t48730*t48732*t48733*4.0;
                double t48744 = t48760+t48761+t48762+t48759;
                double t48745 = gamma_aa[index]*gx*t48691*4.0;
                double t48746 = gamma_aa[index]*gx*t48730*t48731*t48729*4.0;
                double t48747 = t48730*t48690*t48729*6.0;
                double t48748 = t48732*t48733*t48743;
                double t48749 = t48745+t48746+t48747+t48748+1.0;
                double t48752 = gx*t48691*2.0;
                double t48753 = gamma_aa[index]*t48690*t48729*2.0;
                double t48750 = t48752+t48753;
                double t48751 = 1/(t48742*t48742);
                double t48754 = 1/(t48738*t48738);
                double t48755 = gx*t48691*3.0;
                double t48756 = gamma_aa[index]*t48690*t48729*6.0;
                double t48757 = gx*t48730*t48731*t48729*3.0;
                double t48758 = t48755+t48756+t48757;
                double t48763 = 1/(t48749*t48749);
                double t48764 = b1f*t48620;
                double t48765 = b3f*t48621;
                double t48766 = b4f*t48622*t48623;
                double t48767 = b2f*c*t48618;
                double t48768 = t48764+t48765+t48766+t48767;
                double t48769 = 1/t48768;
                double t48770 = t48642*t48769*(1.0/2.0);
                double t48771 = t48770+1.0;
                double t48772 = log(t48771);
                double t48773 = a1f*c*t48618;
                double t48774 = t48773+1.0;
                double t48775 = t48728-c0f*t48772*t48774*2.0;
                double t48776 = t48728-t48641*t48638*t48775;
                double t48777 = gcaa*gcaa;
                double t48778 = t48777*t48777;
                double t48779 = gamma_aa[index]*gcaa*t48691;
                double t48780 = t48779+1.0;
                double t48781 = gamma_aa[index]*gcaa*t48691*2.0;
                double t48782 = t48730*t48690*t48777;
                double t48783 = t48781+t48782+1.0;
                double t48784 = gamma_aa[index]*gcaa*t48691*3.0;
                double t48785 = gamma_aa[index]*gcaa*t48730*t48731*t48777;
                double t48786 = t48730*t48690*t48777*3.0;
                double t48787 = t48784+t48785+t48786+1.0;
                double t48803 = gcaa*t48691*4.0;
                double t48804 = gamma_aa[index]*t48690*t48777*1.2E1;
                double t48805 = gcaa*t48730*t48731*t48777*1.2E1;
                double t48806 = gamma_aa[index]*t48730*t48733*t48778*4.0;
                double t48788 = t48803+t48804+t48805+t48806;
                double t48789 = gamma_aa[index]*gcaa*t48691*4.0;
                double t48790 = gamma_aa[index]*gcaa*t48730*t48731*t48777*4.0;
                double t48791 = t48730*t48690*t48777*6.0;
                double t48792 = t48733*t48743*t48778;
                double t48793 = t48790+t48791+t48792+t48789+1.0;
                double t48796 = gcaa*t48691*2.0;
                double t48797 = gamma_aa[index]*t48690*t48777*2.0;
                double t48794 = t48796+t48797;
                double t48795 = 1/(t48787*t48787);
                double t48798 = 1/(t48783*t48783);
                double t48799 = gcaa*t48691*3.0;
                double t48800 = gamma_aa[index]*t48690*t48777*6.0;
                double t48801 = gcaa*t48730*t48731*t48777*3.0;
                double t48802 = t48800+t48801+t48799;
                double t48807 = 1/(t48793*t48793);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*t48776+rho_b[index]*(t48659-t48641*t48638*(t48659-c0f* \
                   log((t48642*(1.0/2.0))/(b1f*t48645+b3f*t48646+b2f*c*t48643+b4f*t48622*t48647)+1.0)*(a1f*c*t48643+1.0) \
                   *2.0))-t48660*(t48677-t48641*t48682*t48683*t48688*(t48677-c0f*log((t48642*(1.0/2.0))/(b1f*t48663+b3f* \
                   t48664+b2f*c*t48661+b4f*t48622*t48665)+1.0)*(a1f*c*t48661+1.0)*2.0)+(Aa*t48641*t48688*log((1.0/2.0) \
                   /(Aa*(b1a*t48663+b3a*t48664+b2a*c*t48661+b4a*t48622*t48665))+1.0)*(t48682*t48683-1.0)*(a1a*c*t48661+ \
                   1.0)*2.0)/d2fz0))*((ccab2*t48690*t48689*(1.0/2.0))/t48701-ccab1*t48690*1/(t48697*t48697)*t48689*(1.0/ \
                   2.0)+ccab4*t48702*(t48703*t48703)*t48704*1/(t48715*t48715*t48715)*2.0+ccab2*1/(t48701*t48701*t48701) \
                   *(t48710*t48710)*t48689*t48698*2.0-ccab2*t48702*t48690*t48718*t48698*(1.0/2.0)-ccab4*t48702*t48704* \
                   t48723*(t48690*t48689*3.0+t48702*t48690*t48698*3.0+gcab*t48690*t48695*t48689*6.0)+(ccab4*t48702*t48690* \
                   t48698*3.0)/t48715-ccab2*t48710*t48691*t48718*t48695*t48689*2.0+(ccab3*gcab*t48690*t48695*t48689*(3.0/ \
                   2.0))/t48709+ccab1*gcab*t48690*t48695*1/(t48697*t48697*t48697)*t48689*(1.0/2.0)+ccab3*gcab*(t48705* \
                   t48705)*1/(t48709*t48709*t48709)*t48695*t48689*t48698*2.0-ccab3*gcab*t48705*t48691*t48727*t48689*t48698* \
                   3.0-ccab4*t48702*t48703*t48723*t48691*t48695*t48698*4.0-ccab3*gcab*t48727*t48695*t48689*t48698*(t48690* \
                   t48689*(3.0/2.0)+gcab*t48690*t48695*t48689*(3.0/2.0)))-c0*pow(rho_a[index],4.0/3.0)*(cx1*t48690*1/ \
                   (t48735*t48735)*t48729*2.0-(cx2*t48690*t48729*2.0)/t48738+cx2*t48730*t48732*t48733*t48754*2.0-(cx4* \
                   t48730*t48732*t48733*1.2E1)/t48749+cx4*t48732*t48733*t48743*t48763*(t48690*t48729*1.2E1+t48730*t48732* \
                   t48733*1.2E1+gamma_aa[index]*gx*t48731*t48729*2.4E1)-cx1*gamma_aa[index]*gx*t48731*1/(t48735*t48735* \
                   t48735)*t48729*2.0-(cx3*gamma_aa[index]*gx*t48731*t48729*6.0)/t48742-cx2*t48730*(t48750*t48750)*t48690* \
                   t48729*1/(t48738*t48738*t48738)*2.0-cx4*t48732*t48733*t48743*(t48744*t48744)*1/(t48749*t48749*t48749) \
                   *2.0+cx2*gamma_aa[index]*t48750*t48690*t48754*t48729*4.0+cx4*gamma_aa[index]*t48730*t48732*t48733* \
                   t48744*t48763*8.0+cx3*gx*t48730*t48731*t48751*t48729*t48758*6.0+cx3*gamma_aa[index]*gx*t48730*t48731* \
                   t48751*t48729*(t48690*t48729*6.0+gamma_aa[index]*gx*t48731*t48729*6.0)-cx3*gamma_aa[index]*gx*t48730* \
                   t48731*1/(t48742*t48742*t48742)*t48729*(t48758*t48758)*2.0)+rho_a[index]*t48776*(ccaa1*t48690*1/(t48780* \
                   t48780)*t48777*2.0-(ccaa2*t48690*t48777*2.0)/t48783+ccaa2*t48730*t48733*t48778*t48798*2.0-(ccaa4*t48730* \
                   t48733*t48778*1.2E1)/t48793+ccaa4*t48733*t48743*t48807*t48778*(t48690*t48777*1.2E1+t48730*t48733*t48778* \
                   1.2E1+gamma_aa[index]*gcaa*t48731*t48777*2.4E1)-ccaa1*gamma_aa[index]*gcaa*t48731*1/(t48780*t48780* \
                   t48780)*t48777*2.0-(ccaa3*gamma_aa[index]*gcaa*t48731*t48777*6.0)/t48787-ccaa2*t48730*t48690*1/(t48783* \
                   t48783*t48783)*(t48794*t48794)*t48777*2.0-ccaa4*t48733*t48743*1/(t48793*t48793*t48793)*t48778*(t48788* \
                   t48788)*2.0+ccaa2*gamma_aa[index]*t48690*t48794*t48777*t48798*4.0+ccaa4*gamma_aa[index]*t48730*t48733* \
                   t48807*t48778*t48788*8.0+ccaa3*gcaa*t48730*t48802*t48731*t48777*t48795*6.0+ccaa3*gamma_aa[index]*gcaa* \
                   t48730*t48731*t48777*t48795*(t48690*t48777*6.0+gamma_aa[index]*gcaa*t48731*t48777*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*t48730*(t48802*t48802)*t48731*t48777*1/(t48787*t48787*t48787)*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t50310 = gx*gx;
                double t50311 = 1/pow(rho_a[index],1.6E1/3.0);
                double t50312 = 1/pow(rho_a[index],8.0/3.0);
                double t50313 = gamma_aa[index]*gamma_aa[index];
                double t50314 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t50315 = t50310*t50310;
                double t50316 = 1/pow(rho_a[index],3.2E1/3.0);
                double t50317 = gamma_aa[index]*gx*t50312;
                double t50318 = t50317+1.0;
                double t50319 = gamma_aa[index]*gx*t50312*2.0;
                double t50320 = t50310*t50311*t50313;
                double t50321 = t50320+t50319+1.0;
                double t50322 = gamma_aa[index]*gx*t50312*3.0;
                double t50323 = gamma_aa[index]*gx*t50310*t50313*t50314;
                double t50324 = t50310*t50311*t50313*3.0;
                double t50325 = t50322+t50323+t50324+1.0;
                double t50326 = t50313*t50313;
                double t50342 = gx*t50312*4.0;
                double t50343 = gamma_aa[index]*t50310*t50311*1.2E1;
                double t50344 = gx*t50310*t50313*t50314*1.2E1;
                double t50345 = gamma_aa[index]*t50313*t50315*t50316*4.0;
                double t50327 = t50342+t50343+t50344+t50345;
                double t50328 = gamma_aa[index]*gx*t50312*4.0;
                double t50329 = gamma_aa[index]*gx*t50310*t50313*t50314*4.0;
                double t50330 = t50310*t50311*t50313*6.0;
                double t50331 = t50315*t50316*t50326;
                double t50332 = t50330+t50331+t50328+t50329+1.0;
                double t50335 = gx*t50312*2.0;
                double t50336 = gamma_aa[index]*t50310*t50311*2.0;
                double t50333 = t50335+t50336;
                double t50334 = 1/(t50325*t50325);
                double t50337 = 1/(t50321*t50321);
                double t50338 = gx*t50312*3.0;
                double t50339 = gamma_aa[index]*t50310*t50311*6.0;
                double t50340 = gx*t50310*t50313*t50314*3.0;
                double t50341 = t50340+t50338+t50339;
                double t50346 = 1/(t50332*t50332);
                double t50347 = 1/pow(rho_a[index],1.0/3.0);
                double t50348 = c*t50347;
                double t50349 = sqrt(t50348);
                double t50350 = pow(t50348,3.0/2.0);
                double t50351 = c*c;
                double t50352 = 1/pow(rho_a[index],2.0/3.0);
                double t50353 = 1/c0p;
                double t50354 = b1p*t50349;
                double t50355 = b3p*t50350;
                double t50356 = b4p*t50351*t50352;
                double t50357 = b2p*c*t50347;
                double t50358 = t50354+t50355+t50356+t50357;
                double t50359 = 1/t50358;
                double t50360 = t50353*t50359*(1.0/2.0);
                double t50361 = t50360+1.0;
                double t50362 = log(t50361);
                double t50363 = a1p*c*t50347;
                double t50364 = t50363+1.0;
                double t50365 = gcaa*gcaa;
                double t50366 = t50365*t50365;
                double t50367 = gamma_aa[index]*gcaa*t50312;
                double t50368 = t50367+1.0;
                double t50369 = gamma_aa[index]*gcaa*t50312*2.0;
                double t50370 = t50311*t50313*t50365;
                double t50371 = t50370+t50369+1.0;
                double t50372 = gamma_aa[index]*gcaa*t50312*3.0;
                double t50373 = gamma_aa[index]*gcaa*t50313*t50314*t50365;
                double t50374 = t50311*t50313*t50365*3.0;
                double t50375 = t50372+t50373+t50374+1.0;
                double t50391 = gcaa*t50312*4.0;
                double t50392 = gamma_aa[index]*t50311*t50365*1.2E1;
                double t50393 = gcaa*t50313*t50314*t50365*1.2E1;
                double t50394 = gamma_aa[index]*t50313*t50316*t50366*4.0;
                double t50376 = t50391+t50392+t50393+t50394;
                double t50377 = gamma_aa[index]*gcaa*t50312*4.0;
                double t50378 = gamma_aa[index]*gcaa*t50313*t50314*t50365*4.0;
                double t50379 = t50311*t50313*t50365*6.0;
                double t50380 = t50316*t50326*t50366;
                double t50381 = t50380+t50377+t50378+t50379+1.0;
                double t50384 = gcaa*t50312*2.0;
                double t50385 = gamma_aa[index]*t50311*t50365*2.0;
                double t50382 = t50384+t50385;
                double t50383 = 1/(t50375*t50375);
                double t50386 = 1/(t50371*t50371);
                double t50387 = gcaa*t50312*3.0;
                double t50388 = gamma_aa[index]*t50311*t50365*6.0;
                double t50389 = gcaa*t50313*t50314*t50365*3.0;
                double t50390 = t50387+t50388+t50389;
                double t50395 = 1/(t50381*t50381);
                v_gamma_aa_gamma_aa_[index] = -c0*pow(rho_a[index],4.0/3.0)*(cx1*t50310*t50311*1/(t50318*t50318)* \
                   2.0-(cx2*t50310*t50311*2.0)/t50321+cx2*t50313*t50315*t50316*t50337*2.0-(cx4*t50313*t50315*t50316*1.2E1) \
                   /t50332+cx4*t50315*t50316*t50326*t50346*(t50310*t50311*1.2E1+t50313*t50315*t50316*1.2E1+gamma_aa[index]* \
                   gx*t50310*t50314*2.4E1)-cx1*gamma_aa[index]*gx*t50310*t50314*1/(t50318*t50318*t50318)*2.0-(cx3*gamma_aa[index]* \
                   gx*t50310*t50314*6.0)/t50325-cx2*t50310*t50311*1/(t50321*t50321*t50321)*t50313*(t50333*t50333)*2.0- \
                   cx4*1/(t50332*t50332*t50332)*t50315*t50316*t50326*(t50327*t50327)*2.0+cx2*gamma_aa[index]*t50310*t50311* \
                   t50333*t50337*4.0+cx4*gamma_aa[index]*t50313*t50315*t50316*t50327*t50346*8.0+cx3*gx*t50310*t50313* \
                   t50314*t50341*t50334*6.0+cx3*gamma_aa[index]*gx*t50310*t50313*t50314*t50334*(t50310*t50311*6.0+gamma_aa[index]* \
                   gx*t50310*t50314*6.0)-cx3*gamma_aa[index]*gx*t50310*t50313*t50314*(t50341*t50341)*1/(t50325*t50325* \
                   t50325)*2.0)-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t50349+b3f*t50350+ \
                   b2f*c*t50347+b4f*t50351*t50352))+1.0)*(a1f*c*t50347+1.0)*2.0-c0p*t50362*t50364*2.0))/(two_13*2.0-2.0) \
                   +c0p*t50362*t50364*2.0)*((ccaa2*t50311*t50365*2.0)/t50371-ccaa1*t50311*t50365*1/(t50368*t50368)*2.0- \
                   ccaa2*t50313*t50316*t50366*t50386*2.0+(ccaa4*t50313*t50316*t50366*1.2E1)/t50381-ccaa4*t50316*t50326* \
                   t50366*t50395*(t50311*t50365*1.2E1+t50313*t50316*t50366*1.2E1+gamma_aa[index]*gcaa*t50314*t50365*2.4E1) \
                   +(ccaa3*gamma_aa[index]*gcaa*t50314*t50365*6.0)/t50375+ccaa1*gamma_aa[index]*gcaa*t50314*t50365*1/ \
                   (t50368*t50368*t50368)*2.0+ccaa2*t50311*t50313*1/(t50371*t50371*t50371)*(t50382*t50382)*t50365*2.0+ \
                   ccaa4*t50316*t50326*1/(t50381*t50381*t50381)*t50366*(t50376*t50376)*2.0-ccaa2*gamma_aa[index]*t50311* \
                   t50382*t50365*t50386*4.0-ccaa4*gamma_aa[index]*t50313*t50316*t50366*t50376*t50395*8.0-ccaa3*gcaa*t50313* \
                   t50314*t50390*t50365*t50383*6.0-ccaa3*gamma_aa[index]*gcaa*t50313*t50314*t50365*t50383*(t50311*t50365* \
                   6.0+gamma_aa[index]*gcaa*t50314*t50365*6.0)+ccaa3*gamma_aa[index]*gcaa*t50313*t50314*(t50390*t50390) \
                   *t50365*1/(t50375*t50375*t50375)*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48810 = 1/pow(rho_a[index],1.0/3.0);
                double t48811 = c*t48810;
                double t48812 = sqrt(t48811);
                double t48813 = pow(t48811,3.0/2.0);
                double t48814 = c*c;
                double t48815 = 1/pow(rho_a[index],2.0/3.0);
                double t48816 = 1/c0p;
                double t48817 = b1p*t48812;
                double t48818 = b3p*t48813;
                double t48819 = b4p*t48814*t48815;
                double t48820 = b2p*c*t48810;
                double t48821 = t48820+t48817+t48818+t48819;
                double t48822 = 1/t48821;
                double t48823 = t48822*t48816*(1.0/2.0);
                double t48824 = t48823+1.0;
                double t48825 = log(t48824);
                double t48826 = a1p*c*t48810;
                double t48827 = t48826+1.0;
                double t48828 = pow(2.0,1.0/3.0);
                double t48829 = t48828*2.0;
                double t48830 = t48829-2.0;
                double t48831 = two_13*2.0;
                double t48832 = t48831-2.0;
                double t48833 = 1/t48832;
                double t48834 = 1/c0f;
                double t48835 = 1/pow(rho_b[index],1.0/3.0);
                double t48836 = c*t48835;
                double t48837 = sqrt(t48836);
                double t48838 = pow(t48836,3.0/2.0);
                double t48839 = 1/pow(rho_b[index],2.0/3.0);
                double t48840 = b1p*t48837;
                double t48841 = b3p*t48838;
                double t48842 = b4p*t48814*t48839;
                double t48843 = b2p*c*t48835;
                double t48844 = t48840+t48841+t48842+t48843;
                double t48845 = 1/t48844;
                double t48846 = t48816*t48845*(1.0/2.0);
                double t48847 = t48846+1.0;
                double t48848 = log(t48847);
                double t48849 = a1p*c*t48835;
                double t48850 = t48849+1.0;
                double t48851 = c0p*t48850*t48848*2.0;
                double t48852 = rho_a[index]+rho_b[index];
                double t48853 = 1/pow(t48852,1.0/3.0);
                double t48854 = c*t48853;
                double t48855 = sqrt(t48854);
                double t48856 = pow(t48854,3.0/2.0);
                double t48857 = 1/pow(t48852,2.0/3.0);
                double t48858 = b1p*t48855;
                double t48859 = b3p*t48856;
                double t48860 = b4p*t48814*t48857;
                double t48861 = b2p*c*t48853;
                double t48862 = t48860+t48861+t48858+t48859;
                double t48863 = 1/t48862;
                double t48864 = t48816*t48863*(1.0/2.0);
                double t48865 = t48864+1.0;
                double t48866 = log(t48865);
                double t48867 = a1p*c*t48853;
                double t48868 = t48867+1.0;
                double t48869 = c0p*t48866*t48868*2.0;
                double t48870 = rho_a[index]-rho_b[index];
                double t48871 = t48870*t48870;
                double t48872 = 1/t48852;
                double t48873 = t48870*t48872;
                double t48874 = 1/(t48852*t48852*t48852*t48852);
                double t48875 = t48871*t48871;
                double t48876 = t48873+1.0;
                double t48877 = pow(t48876,4.0/3.0);
                double t48878 = -t48873+1.0;
                double t48879 = pow(t48878,4.0/3.0);
                double t48880 = t48877+t48879-2.0;
                double t48881 = gcab*gcab;
                double t48884 = 1/pow(rho_a[index],8.0/3.0);
                double t48885 = 1/pow(rho_b[index],8.0/3.0);
                double t48886 = gamma_aa[index]*t48884*(1.0/2.0);
                double t48887 = gamma_bb[index]*t48885*(1.0/2.0);
                double t48882 = t48886+t48887;
                double t48883 = t48882*t48882;
                double t48888 = t48881*t48881;
                double t48889 = t48883*t48883;
                double t48890 = t48881*t48883*3.0;
                double t48891 = gcab*t48881*t48882*t48883;
                double t48892 = gcab*t48882*3.0;
                double t48893 = t48890+t48891+t48892+1.0;
                double t48894 = t48881*t48883;
                double t48895 = gcab*t48882*2.0;
                double t48896 = t48894+t48895+1.0;
                double t48897 = t48881*t48883*6.0;
                double t48898 = gcab*t48881*t48882*t48883*4.0;
                double t48899 = t48888*t48889;
                double t48900 = gcab*t48882*4.0;
                double t48901 = t48900+t48897+t48898+t48899+1.0;
                double t48902 = 1/(t48896*t48896);
                double t48903 = gcab*t48884;
                double t48904 = t48881*t48882*t48884;
                double t48905 = t48903+t48904;
                double t48906 = gcab*t48885;
                double t48907 = t48881*t48882*t48885;
                double t48908 = t48906+t48907;
                double t48909 = gcab*t48882;
                double t48910 = t48909+1.0;
                double t48911 = gcab*t48884*2.0;
                double t48912 = t48881*t48882*t48884*6.0;
                double t48913 = gcab*t48881*t48883*t48884*6.0;
                double t48914 = t48882*t48883*t48884*t48888*2.0;
                double t48915 = t48911+t48912+t48913+t48914;
                double t48916 = 1/(t48901*t48901);
                double t48917 = gcab*t48885*2.0;
                double t48918 = t48881*t48882*t48885*6.0;
                double t48919 = gcab*t48881*t48883*t48885*6.0;
                double t48920 = t48882*t48883*t48885*t48888*2.0;
                double t48921 = t48920+t48917+t48918+t48919;
                double t48922 = gcab*t48884*(3.0/2.0);
                double t48923 = t48881*t48882*t48884*3.0;
                double t48924 = gcab*t48881*t48883*t48884*(3.0/2.0);
                double t48925 = t48922+t48923+t48924;
                double t48926 = 1/(t48893*t48893);
                double t48927 = gcab*t48885*(3.0/2.0);
                double t48928 = t48881*t48882*t48885*3.0;
                double t48929 = gcab*t48881*t48883*t48885*(3.0/2.0);
                double t48930 = t48927+t48928+t48929;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t48851-t48830*t48833*(t48851-c0f*log((t48834*(1.0/2.0) \
                   )/(b1f*t48837+b3f*t48838+b2f*c*t48835+b4f*t48814*t48839)+1.0)*(a1f*c*t48835+1.0)*2.0))+t48852*(t48869- \
                   t48833*t48880*t48874*t48875*(t48869-c0f*log((t48834*(1.0/2.0))/(b1f*t48855+b3f*t48856+b2f*c*t48853+ \
                   b4f*t48814*t48857)+1.0)*(a1f*c*t48853+1.0)*2.0)+(Aa*t48833*t48880*log((1.0/2.0)/(Aa*(b1a*t48855+b3a* \
                   t48856+b2a*c*t48853+b4a*t48814*t48857))+1.0)*(t48874*t48875-1.0)*(a1a*c*t48853+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t48830*t48833*(c0p*t48825*t48827*2.0-c0f*log((t48834*(1.0/2.0))/(b1f*t48812+b3f*t48813+b2f*c*t48810+ \
                   b4f*t48814*t48815)+1.0)*(a1f*c*t48810+1.0)*2.0)-c0p*t48825*t48827*2.0))*(ccab4*t48916*t48888*t48889* \
                   (t48881*t48884*t48885*3.0+t48883*t48884*t48885*t48888*3.0+gcab*t48881*t48882*t48884*t48885*6.0)+ccab1* \
                   1/(t48910*t48910)*t48881*t48884*t48885*(1.0/2.0)-(ccab2*t48881*t48884*t48885*(1.0/2.0))/t48896+ccab2* \
                   t48902*t48905*t48881*t48882*t48885+ccab2*t48902*t48881*t48908*t48882*t48884+ccab2*t48902*t48883*t48884* \
                   t48885*t48888*(1.0/2.0)-ccab4*1/(t48901*t48901*t48901)*t48921*t48915*t48888*t48889*2.0-ccab2*t48905* \
                   t48881*t48908*t48883*1/(t48896*t48896*t48896)*2.0-(ccab4*t48883*t48884*t48885*t48888*3.0)/t48901+ccab3* \
                   gcab*t48930*t48881*t48926*t48883*t48884*(3.0/2.0)+ccab3*gcab*t48925*t48881*t48926*t48883*t48885*(3.0/ \
                   2.0)+ccab4*t48921*t48916*t48882*t48883*t48884*t48888*2.0+ccab4*t48915*t48916*t48882*t48883*t48885* \
                   t48888*2.0+ccab3*gcab*t48881*t48926*t48882*t48883*(t48881*t48884*t48885*(3.0/2.0)+gcab*t48881*t48882* \
                   t48884*t48885*(3.0/2.0))-ccab1*gcab*1/(t48910*t48910*t48910)*t48881*t48882*t48884*t48885*(1.0/2.0) \
                   -(ccab3*gcab*t48881*t48882*t48884*t48885*(3.0/2.0))/t48893-ccab3*gcab*t48930*t48925*t48881*t48882* \
                   t48883*1/(t48893*t48893*t48893)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48934 = 1/pow(rho_a[index],1.0/3.0);
                double t48935 = c*t48934;
                double t48936 = sqrt(t48935);
                double t48937 = pow(t48935,3.0/2.0);
                double t48938 = c*c;
                double t48939 = 1/pow(rho_a[index],2.0/3.0);
                double t48940 = 1/c0p;
                double t48941 = b1p*t48936;
                double t48942 = b3p*t48937;
                double t48943 = b4p*t48938*t48939;
                double t48944 = b2p*c*t48934;
                double t48945 = t48941+t48942+t48943+t48944;
                double t48946 = 1/t48945;
                double t48947 = t48940*t48946*(1.0/2.0);
                double t48948 = t48947+1.0;
                double t48949 = log(t48948);
                double t48950 = a1p*c*t48934;
                double t48951 = t48950+1.0;
                double t48952 = pow(2.0,1.0/3.0);
                double t48953 = t48952*2.0;
                double t48954 = t48953-2.0;
                double t48955 = two_13*2.0;
                double t48956 = t48955-2.0;
                double t48957 = 1/t48956;
                double t48958 = 1/c0f;
                double t48959 = 1/pow(rho_b[index],1.0/3.0);
                double t48960 = c*t48959;
                double t48961 = sqrt(t48960);
                double t48962 = pow(t48960,3.0/2.0);
                double t48963 = 1/pow(rho_b[index],2.0/3.0);
                double t48964 = b1p*t48961;
                double t48965 = b3p*t48962;
                double t48966 = b4p*t48963*t48938;
                double t48967 = b2p*c*t48959;
                double t48968 = t48964+t48965+t48966+t48967;
                double t48969 = 1/t48968;
                double t48970 = t48940*t48969*(1.0/2.0);
                double t48971 = t48970+1.0;
                double t48972 = log(t48971);
                double t48973 = a1p*c*t48959;
                double t48974 = t48973+1.0;
                double t48975 = c0p*t48972*t48974*2.0;
                double t48976 = rho_a[index]+rho_b[index];
                double t48977 = 1/pow(t48976,1.0/3.0);
                double t48978 = c*t48977;
                double t48979 = sqrt(t48978);
                double t48980 = pow(t48978,3.0/2.0);
                double t48981 = 1/pow(t48976,2.0/3.0);
                double t48982 = b1p*t48979;
                double t48983 = b3p*t48980;
                double t48984 = b4p*t48981*t48938;
                double t48985 = b2p*c*t48977;
                double t48986 = t48982+t48983+t48984+t48985;
                double t48987 = 1/t48986;
                double t48988 = t48940*t48987*(1.0/2.0);
                double t48989 = t48988+1.0;
                double t48990 = log(t48989);
                double t48991 = a1p*c*t48977;
                double t48992 = t48991+1.0;
                double t48993 = c0p*t48990*t48992*2.0;
                double t48994 = rho_a[index]-rho_b[index];
                double t48995 = t48994*t48994;
                double t48996 = 1/t48976;
                double t48997 = t48994*t48996;
                double t48998 = 1/(t48976*t48976*t48976*t48976);
                double t48999 = t48995*t48995;
                double t49000 = t48997+1.0;
                double t49001 = pow(t49000,4.0/3.0);
                double t49002 = -t48997+1.0;
                double t49003 = pow(t49002,4.0/3.0);
                double t49004 = t49001+t49003-2.0;
                double t49005 = gcab*gcab;
                double t49006 = 1/pow(rho_b[index],1.6E1/3.0);
                double t49007 = 1/pow(rho_a[index],8.0/3.0);
                double t49008 = gamma_aa[index]*t49007*(1.0/2.0);
                double t49009 = 1/pow(rho_b[index],8.0/3.0);
                double t49010 = gamma_bb[index]*t49009*(1.0/2.0);
                double t49011 = t49010+t49008;
                double t49012 = gcab*t49011;
                double t49013 = t49012+1.0;
                double t49014 = t49011*t49011;
                double t49015 = t49005*t49014;
                double t49016 = gcab*t49011*2.0;
                double t49017 = t49015+t49016+1.0;
                double t49018 = t49005*t49005;
                double t49035 = gcab*t49009*2.0;
                double t49036 = t49011*t49005*t49009*6.0;
                double t49037 = gcab*t49005*t49014*t49009*6.0;
                double t49038 = t49011*t49014*t49009*t49018*2.0;
                double t49019 = t49035+t49036+t49037+t49038;
                double t49020 = t49014*t49014;
                double t49040 = gcab*t49009*(3.0/2.0);
                double t49041 = t49011*t49005*t49009*3.0;
                double t49042 = gcab*t49005*t49014*t49009*(3.0/2.0);
                double t49021 = t49040+t49041+t49042;
                double t49022 = t49005*t49014*3.0;
                double t49023 = gcab*t49011*t49005*t49014;
                double t49024 = gcab*t49011*3.0;
                double t49025 = t49022+t49023+t49024+1.0;
                double t49032 = gcab*t49009;
                double t49033 = t49011*t49005*t49009;
                double t49026 = t49032+t49033;
                double t49027 = t49005*t49014*6.0;
                double t49028 = gcab*t49011*t49005*t49014*4.0;
                double t49029 = t49020*t49018;
                double t49030 = gcab*t49011*4.0;
                double t49031 = t49030+t49027+t49028+t49029+1.0;
                double t49034 = 1/(t49017*t49017);
                double t49039 = 1/(t49031*t49031);
                double t49043 = 1/(t49025*t49025);
                double t49044 = gx*gx;
                double t49045 = gamma_bb[index]*gamma_bb[index];
                double t49046 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49047 = t49044*t49044;
                double t49048 = 1/pow(rho_b[index],3.2E1/3.0);
                double t49049 = gamma_bb[index]*gx*t49009;
                double t49050 = t49049+1.0;
                double t49051 = gamma_bb[index]*gx*t49009*2.0;
                double t49052 = t49006*t49044*t49045;
                double t49053 = t49051+t49052+1.0;
                double t49054 = gamma_bb[index]*gx*t49009*3.0;
                double t49055 = gamma_bb[index]*gx*t49044*t49045*t49046;
                double t49056 = t49006*t49044*t49045*3.0;
                double t49057 = t49054+t49055+t49056+1.0;
                double t49058 = t49045*t49045;
                double t49074 = gx*t49009*4.0;
                double t49075 = gamma_bb[index]*t49006*t49044*1.2E1;
                double t49076 = gx*t49044*t49045*t49046*1.2E1;
                double t49077 = gamma_bb[index]*t49045*t49047*t49048*4.0;
                double t49059 = t49074+t49075+t49076+t49077;
                double t49060 = gamma_bb[index]*gx*t49009*4.0;
                double t49061 = gamma_bb[index]*gx*t49044*t49045*t49046*4.0;
                double t49062 = t49006*t49044*t49045*6.0;
                double t49063 = t49047*t49048*t49058;
                double t49064 = t49060+t49061+t49062+t49063+1.0;
                double t49067 = gx*t49009*2.0;
                double t49068 = gamma_bb[index]*t49006*t49044*2.0;
                double t49065 = t49067+t49068;
                double t49066 = 1/(t49057*t49057);
                double t49069 = 1/(t49053*t49053);
                double t49070 = gx*t49009*3.0;
                double t49071 = gamma_bb[index]*t49006*t49044*6.0;
                double t49072 = gx*t49044*t49045*t49046*3.0;
                double t49073 = t49070+t49071+t49072;
                double t49078 = 1/(t49064*t49064);
                double t49079 = b1f*t48961;
                double t49080 = b3f*t48962;
                double t49081 = b4f*t48963*t48938;
                double t49082 = b2f*c*t48959;
                double t49083 = t49080+t49081+t49082+t49079;
                double t49084 = 1/t49083;
                double t49085 = t48958*t49084*(1.0/2.0);
                double t49086 = t49085+1.0;
                double t49087 = log(t49086);
                double t49088 = a1f*c*t48959;
                double t49089 = t49088+1.0;
                double t49090 = t48975-c0f*t49087*t49089*2.0;
                double t49091 = t48975-t48954*t48957*t49090;
                double t49092 = gcaa*gcaa;
                double t49093 = t49092*t49092;
                double t49094 = gamma_bb[index]*gcaa*t49009;
                double t49095 = t49094+1.0;
                double t49096 = gamma_bb[index]*gcaa*t49009*2.0;
                double t49097 = t49006*t49045*t49092;
                double t49098 = t49096+t49097+1.0;
                double t49099 = gamma_bb[index]*gcaa*t49009*3.0;
                double t49100 = gamma_bb[index]*gcaa*t49045*t49046*t49092;
                double t49101 = t49006*t49045*t49092*3.0;
                double t49102 = t49100+t49101+t49099+1.0;
                double t49118 = gcaa*t49009*4.0;
                double t49119 = gamma_bb[index]*t49006*t49092*1.2E1;
                double t49120 = gcaa*t49045*t49046*t49092*1.2E1;
                double t49121 = gamma_bb[index]*t49045*t49048*t49093*4.0;
                double t49103 = t49120+t49121+t49118+t49119;
                double t49104 = gamma_bb[index]*gcaa*t49009*4.0;
                double t49105 = gamma_bb[index]*gcaa*t49045*t49046*t49092*4.0;
                double t49106 = t49006*t49045*t49092*6.0;
                double t49107 = t49048*t49093*t49058;
                double t49108 = t49104+t49105+t49106+t49107+1.0;
                double t49111 = gcaa*t49009*2.0;
                double t49112 = gamma_bb[index]*t49006*t49092*2.0;
                double t49109 = t49111+t49112;
                double t49110 = 1/(t49102*t49102);
                double t49113 = 1/(t49098*t49098);
                double t49114 = gcaa*t49009*3.0;
                double t49115 = gamma_bb[index]*t49006*t49092*6.0;
                double t49116 = gcaa*t49045*t49046*t49092*3.0;
                double t49117 = t49114+t49115+t49116;
                double t49122 = 1/(t49108*t49108);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t49091+t48976*(t48993-t48957*t48998*t48999*t49004*(t48993- \
                   c0f*log((t48958*(1.0/2.0))/(b1f*t48979+b3f*t48980+b2f*c*t48977+b4f*t48981*t48938)+1.0)*(a1f*c*t48977+ \
                   1.0)*2.0)+(Aa*t48957*t49004*log((1.0/2.0)/(Aa*(b1a*t48979+b3a*t48980+b2a*c*t48977+b4a*t48981*t48938) \
                   )+1.0)*(t48998*t48999-1.0)*(a1a*c*t48977+1.0)*2.0)/d2fz0)+rho_a[index]*(t48954*t48957*(c0p*t48951* \
                   t48949*2.0-c0f*log((t48958*(1.0/2.0))/(b1f*t48936+b3f*t48937+b2f*c*t48934+b4f*t48938*t48939)+1.0)* \
                   (a1f*c*t48934+1.0)*2.0)-c0p*t48951*t48949*2.0))*(ccab1*1/(t49013*t49013)*t49005*t49006*(1.0/2.0)-(ccab2* \
                   t49005*t49006*(1.0/2.0))/t49017-ccab2*t49005*t49014*1/(t49017*t49017*t49017)*(t49026*t49026)*2.0-ccab4* \
                   t49020*1/(t49031*t49031*t49031)*t49018*(t49019*t49019)*2.0+ccab2*t49014*t49006*t49034*t49018*(1.0/ \
                   2.0)+ccab4*t49020*t49018*t49039*(t49005*t49006*3.0+t49014*t49006*t49018*3.0+gcab*t49011*t49005*t49006* \
                   6.0)-(ccab4*t49014*t49006*t49018*3.0)/t49031+ccab2*t49011*t49005*t49034*t49026*t49009*2.0-ccab1*gcab* \
                   t49011*1/(t49013*t49013*t49013)*t49005*t49006*(1.0/2.0)-(ccab3*gcab*t49011*t49005*t49006*(3.0/2.0) \
                   )/t49025-ccab3*gcab*t49011*(t49021*t49021)*t49005*t49014*1/(t49025*t49025*t49025)*2.0+ccab3*gcab*t49021* \
                   t49005*t49014*t49043*t49009*3.0+ccab4*t49011*t49014*t49009*t49018*t49019*t49039*4.0+ccab3*gcab*t49011* \
                   t49005*t49014*t49043*(t49005*t49006*(3.0/2.0)+gcab*t49011*t49005*t49006*(3.0/2.0)))-c0*pow(rho_b[index],4.0/ \
                   3.0)*(cx1*1/(t49050*t49050)*t49006*t49044*2.0-(cx2*t49006*t49044*2.0)/t49053+cx2*t49045*t49047*t49048* \
                   t49069*2.0-(cx4*t49045*t49047*t49048*1.2E1)/t49064+cx4*t49047*t49048*t49058*t49078*(t49006*t49044* \
                   1.2E1+t49045*t49047*t49048*1.2E1+gamma_bb[index]*gx*t49044*t49046*2.4E1)-cx1*gamma_bb[index]*gx*1/ \
                   (t49050*t49050*t49050)*t49044*t49046*2.0-(cx3*gamma_bb[index]*gx*t49044*t49046*6.0)/t49057-cx2*t49006* \
                   t49044*1/(t49053*t49053*t49053)*t49045*(t49065*t49065)*2.0-cx4*1/(t49064*t49064*t49064)*t49047*t49048* \
                   t49058*(t49059*t49059)*2.0+cx2*gamma_bb[index]*t49006*t49044*t49065*t49069*4.0+cx4*gamma_bb[index]* \
                   t49045*t49047*t49048*t49059*t49078*8.0+cx3*gx*t49044*t49045*t49046*t49073*t49066*6.0+cx3*gamma_bb[index]* \
                   gx*t49044*t49045*t49046*t49066*(t49006*t49044*6.0+gamma_bb[index]*gx*t49044*t49046*6.0)-cx3*gamma_bb[index]* \
                   gx*t49044*t49045*t49046*(t49073*t49073)*1/(t49057*t49057*t49057)*2.0)+rho_b[index]*t49091*(ccaa1*t49006* \
                   t49092*1/(t49095*t49095)*2.0-(ccaa2*t49006*t49092*2.0)/t49098+ccaa2*t49113*t49045*t49048*t49093*2.0- \
                   (ccaa4*t49045*t49048*t49093*1.2E1)/t49108+ccaa4*t49122*t49048*t49093*t49058*(t49006*t49092*1.2E1+t49045* \
                   t49048*t49093*1.2E1+gamma_bb[index]*gcaa*t49046*t49092*2.4E1)-(ccaa3*gamma_bb[index]*gcaa*t49046*t49092* \
                   6.0)/t49102-ccaa1*gamma_bb[index]*gcaa*t49046*t49092*1/(t49095*t49095*t49095)*2.0-ccaa4*(t49103*t49103) \
                   *1/(t49108*t49108*t49108)*t49048*t49093*t49058*2.0-ccaa2*t49006*t49045*(t49109*t49109)*t49092*1/(t49098* \
                   t49098*t49098)*2.0+ccaa2*gamma_bb[index]*t49113*t49006*t49109*t49092*4.0+ccaa4*gamma_bb[index]*t49103* \
                   t49122*t49045*t49048*t49093*8.0+ccaa3*gcaa*t49110*t49045*t49117*t49046*t49092*6.0+ccaa3*gamma_bb[index]* \
                   gcaa*t49110*t49045*t49046*t49092*(t49006*t49092*6.0+gamma_bb[index]*gcaa*t49046*t49092*6.0)-ccaa3* \
                   gamma_bb[index]*gcaa*1/(t49102*t49102*t49102)*t49045*(t49117*t49117)*t49046*t49092*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t49676 = gx*gx;
                double t49677 = 1/pow(rho_b[index],1.6E1/3.0);
                double t49678 = 1/pow(rho_b[index],8.0/3.0);
                double t49679 = gamma_bb[index]*gamma_bb[index];
                double t49680 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49681 = t49676*t49676;
                double t49682 = 1/pow(rho_b[index],3.2E1/3.0);
                double t49683 = gamma_bb[index]*gx*t49678;
                double t49684 = t49683+1.0;
                double t49685 = gamma_bb[index]*gx*t49678*2.0;
                double t49686 = t49676*t49677*t49679;
                double t49687 = t49685+t49686+1.0;
                double t49688 = gamma_bb[index]*gx*t49678*3.0;
                double t49689 = gamma_bb[index]*gx*t49680*t49676*t49679;
                double t49690 = t49676*t49677*t49679*3.0;
                double t49691 = t49690+t49688+t49689+1.0;
                double t49692 = t49679*t49679;
                double t49708 = gx*t49678*4.0;
                double t49709 = gamma_bb[index]*t49676*t49677*1.2E1;
                double t49710 = gx*t49680*t49676*t49679*1.2E1;
                double t49711 = gamma_bb[index]*t49681*t49682*t49679*4.0;
                double t49693 = t49710+t49711+t49708+t49709;
                double t49694 = gamma_bb[index]*gx*t49678*4.0;
                double t49695 = gamma_bb[index]*gx*t49680*t49676*t49679*4.0;
                double t49696 = t49676*t49677*t49679*6.0;
                double t49697 = t49681*t49682*t49692;
                double t49698 = t49694+t49695+t49696+t49697+1.0;
                double t49701 = gx*t49678*2.0;
                double t49702 = gamma_bb[index]*t49676*t49677*2.0;
                double t49699 = t49701+t49702;
                double t49700 = 1/(t49691*t49691);
                double t49703 = 1/(t49687*t49687);
                double t49704 = gx*t49678*3.0;
                double t49705 = gamma_bb[index]*t49676*t49677*6.0;
                double t49706 = gx*t49680*t49676*t49679*3.0;
                double t49707 = t49704+t49705+t49706;
                double t49712 = 1/(t49698*t49698);
                double t49713 = 1/pow(rho_b[index],1.0/3.0);
                double t49714 = c*t49713;
                double t49715 = sqrt(t49714);
                double t49716 = pow(t49714,3.0/2.0);
                double t49717 = c*c;
                double t49718 = 1/pow(rho_b[index],2.0/3.0);
                double t49719 = 1/c0p;
                double t49720 = b1p*t49715;
                double t49721 = b3p*t49716;
                double t49722 = b4p*t49717*t49718;
                double t49723 = b2p*c*t49713;
                double t49724 = t49720+t49721+t49722+t49723;
                double t49725 = 1/t49724;
                double t49726 = t49725*t49719*(1.0/2.0);
                double t49727 = t49726+1.0;
                double t49728 = log(t49727);
                double t49729 = a1p*c*t49713;
                double t49730 = t49729+1.0;
                double t49731 = gcaa*gcaa;
                double t49732 = t49731*t49731;
                double t49733 = gamma_bb[index]*gcaa*t49678;
                double t49734 = t49733+1.0;
                double t49735 = gamma_bb[index]*gcaa*t49678*2.0;
                double t49736 = t49731*t49677*t49679;
                double t49737 = t49735+t49736+1.0;
                double t49738 = gamma_bb[index]*gcaa*t49678*3.0;
                double t49739 = gamma_bb[index]*gcaa*t49731*t49680*t49679;
                double t49740 = t49731*t49677*t49679*3.0;
                double t49741 = t49740+t49738+t49739+1.0;
                double t49757 = gcaa*t49678*4.0;
                double t49758 = gamma_bb[index]*t49731*t49677*1.2E1;
                double t49759 = gcaa*t49731*t49680*t49679*1.2E1;
                double t49760 = gamma_bb[index]*t49732*t49682*t49679*4.0;
                double t49742 = t49760+t49757+t49758+t49759;
                double t49743 = gamma_bb[index]*gcaa*t49678*4.0;
                double t49744 = gamma_bb[index]*gcaa*t49731*t49680*t49679*4.0;
                double t49745 = t49731*t49677*t49679*6.0;
                double t49746 = t49732*t49682*t49692;
                double t49747 = t49743+t49744+t49745+t49746+1.0;
                double t49750 = gcaa*t49678*2.0;
                double t49751 = gamma_bb[index]*t49731*t49677*2.0;
                double t49748 = t49750+t49751;
                double t49749 = 1/(t49741*t49741);
                double t49752 = 1/(t49737*t49737);
                double t49753 = gcaa*t49678*3.0;
                double t49754 = gamma_bb[index]*t49731*t49677*6.0;
                double t49755 = gcaa*t49731*t49680*t49679*3.0;
                double t49756 = t49753+t49754+t49755;
                double t49761 = 1/(t49747*t49747);
                v_gamma_bb_gamma_bb_[index] = -c0*pow(rho_b[index],4.0/3.0)*(cx1*1/(t49684*t49684)*t49676*t49677* \
                   2.0-(cx2*t49676*t49677*2.0)/t49687+cx2*t49703*t49681*t49682*t49679*2.0-(cx4*t49681*t49682*t49679*1.2E1) \
                   /t49698+cx4*t49712*t49681*t49682*t49692*(t49676*t49677*1.2E1+t49681*t49682*t49679*1.2E1+gamma_bb[index]* \
                   gx*t49680*t49676*2.4E1)-cx1*gamma_bb[index]*gx*t49680*1/(t49684*t49684*t49684)*t49676*2.0-(cx3*gamma_bb[index]* \
                   gx*t49680*t49676*6.0)/t49691-cx2*t49676*t49677*1/(t49687*t49687*t49687)*t49679*(t49699*t49699)*2.0- \
                   cx4*t49681*t49682*t49692*(t49693*t49693)*1/(t49698*t49698*t49698)*2.0+cx2*gamma_bb[index]*t49703*t49676* \
                   t49677*t49699*4.0+cx4*gamma_bb[index]*t49712*t49681*t49682*t49693*t49679*8.0+cx3*gx*t49700*t49680* \
                   t49707*t49676*t49679*6.0+cx3*gamma_bb[index]*gx*t49700*t49680*t49676*t49679*(t49676*t49677*6.0+gamma_bb[index]* \
                   gx*t49680*t49676*6.0)-cx3*gamma_bb[index]*gx*t49680*(t49707*t49707)*1/(t49691*t49691*t49691)*t49676* \
                   t49679*2.0)+rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t49715+b3f*t49716+ \
                   b2f*c*t49713+b4f*t49717*t49718))+1.0)*(a1f*c*t49713+1.0)*2.0-c0p*t49730*t49728*2.0))/(two_13*2.0-2.0) \
                   +c0p*t49730*t49728*2.0)*(ccaa1*t49731*1/(t49734*t49734)*t49677*2.0-(ccaa2*t49731*t49677*2.0)/t49737+ \
                   ccaa2*t49732*t49752*t49682*t49679*2.0-(ccaa4*t49732*t49682*t49679*1.2E1)/t49747+ccaa4*t49732*t49761* \
                   t49682*t49692*(t49731*t49677*1.2E1+t49732*t49682*t49679*1.2E1+gamma_bb[index]*gcaa*t49731*t49680*2.4E1) \
                   -(ccaa3*gamma_bb[index]*gcaa*t49731*t49680*6.0)/t49741-ccaa1*gamma_bb[index]*gcaa*t49731*t49680*1/ \
                   (t49734*t49734*t49734)*2.0-ccaa4*t49732*(t49742*t49742)*t49682*t49692*1/(t49747*t49747*t49747)*2.0- \
                   ccaa2*t49731*1/(t49737*t49737*t49737)*(t49748*t49748)*t49677*t49679*2.0+ccaa2*gamma_bb[index]*t49731* \
                   t49752*t49748*t49677*4.0+ccaa4*gamma_bb[index]*t49732*t49742*t49761*t49682*t49679*8.0+ccaa3*gcaa*t49731* \
                   t49680*t49756*t49749*t49679*6.0+ccaa3*gamma_bb[index]*gcaa*t49731*t49680*t49749*t49679*(t49731*t49677* \
                   6.0+gamma_bb[index]*gcaa*t49731*t49680*6.0)-ccaa3*gamma_bb[index]*gcaa*t49731*1/(t49741*t49741*t49741) \
                   *t49680*(t49756*t49756)*t49679*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

