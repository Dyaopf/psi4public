/**********************************************************
* HCTH_functional.cc: definitions for HCTH_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 25-May-2011
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "HCTH_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

HCTH_Functional::HCTH_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "HCTH";
    description_ = "HCTH Power Series GGA";
    citation_ = "F.A. Hamprecht et. al., J. Chem. Phys., 109(15), 6264-6271";
    
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 7.2997400000000001E-01;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 3.3528699999999998E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.1542999999999999E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 8.0856399999999997E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = -4.4785700000000004E+00;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 2.2260099999999999E-01;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -3.3862200000000002E-02;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = -1.2517000000000000E-02;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -8.0249599999999999E-01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 1.5539600000000000E+00;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 1.0931999999999999E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = -7.4405600000000005E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 5.5991999999999997E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = -6.7854900000000002E+00;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = 4.4935700000000001E+00;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
HCTH_Functional::~HCTH_Functional()
{
}
void HCTH_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* gamma_aa;
    const double* tau_a;

    rho_a = prop->getDensityA();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t50728 = 1.0/pow(rho_a[index],1.0/3.0);
            double t50729 = c*t50728;
            double t50730 = sqrt(t50729);
            double t50731 = pow(t50729,3.0/2.0);
            double t50732 = c*c;
            double t50733 = 1.0/pow(rho_a[index],2.0/3.0);
            double t50734 = 1.0/c0p;
            double t50735 = b1p*t50730;
            double t50736 = b3p*t50731;
            double t50737 = b4p*t50732*t50733;
            double t50738 = b2p*c*t50728;
            double t50739 = t50735+t50736+t50737+t50738;
            double t50740 = 1.0/t50739;
            double t50741 = t50740*t50734*(1.0/2.0);
            double t50742 = t50741+1.0;
            double t50743 = log(t50742);
            double t50744 = a1p*c*t50728;
            double t50745 = t50744+1.0;
            double t50746 = rho_a[index]*2.0;
            double t50747 = 1.0/pow(t50746,1.0/3.0);
            double t50748 = c*t50747;
            double t50749 = gamma_aa[index]*gamma_aa[index];
            double t50750 = gcab*gcab;
            double t50751 = t50749*t50749;
            double t50752 = t50750*t50750;
            double t50753 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t50754 = 1.0/pow(rho_a[index],8.0/3.0);
            double t50755 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50756 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t50757 = pow(2.0,1.0/3.0);
            double t50758 = t50757*2.0;
            double t50759 = t50758-2.0;
            double t50760 = two_13*2.0;
            double t50761 = t50760-2.0;
            double t50762 = 1.0/t50761;
            double t50763 = 1.0/c0f;
            double t50764 = b1f*t50730;
            double t50765 = b3f*t50731;
            double t50766 = b4f*t50732*t50733;
            double t50767 = b2f*c*t50728;
            double t50768 = t50764+t50765+t50766+t50767;
            double t50769 = 1.0/t50768;
            double t50770 = t50763*t50769*(1.0/2.0);
            double t50771 = t50770+1.0;
            double t50772 = log(t50771);
            double t50773 = a1f*c*t50728;
            double t50774 = t50773+1.0;
            double t50775 = c0f*t50772*t50774*2.0;
            double t50776 = c0p*t50743*t50745*2.0;
            double t50777 = gcaa*gcaa;
            double t50778 = t50777*t50777;
            double t50779 = gx*gx;
            double t50780 = t50779*t50779;
            functional_[index] = (rho_a[index]*(t50776+t50762*t50759*(t50775-c0p*t50743*t50745*2.0))*2.0-c0p* \
               rho_a[index]*log((t50734*(1.0/2.0))/(b1p*sqrt(t50748)+b3p*pow(t50748,3.0/2.0)+b4p*t50732*1.0/pow(t50746,2.0/ \
               3.0)+b2p*c*t50747)+1.0)*(a1p*c*t50747+1.0)*4.0)*(ccab0+(ccab2*t50750*t50756*t50749)/(gamma_aa[index]* \
               gcab*t50754*2.0+t50750*t50756*t50749+1.0)+(ccab1*gamma_aa[index]*gcab*t50754)/(gamma_aa[index]*gcab* \
               t50754+1.0)+(ccab4*t50751*t50752*t50753)/(gamma_aa[index]*gcab*t50754*4.0+t50751*t50752*t50753+t50750* \
               t50756*t50749*6.0+gamma_aa[index]*gcab*t50750*t50755*t50749*4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t50750* \
               t50755*t50749)/(gamma_aa[index]*gcab*t50754*3.0+t50750*t50756*t50749*3.0+gamma_aa[index]*gcab*t50750* \
               t50755*t50749+1.0))-rho_a[index]*(t50776+t50762*t50759*(t50775-t50776))*(ccaa0+(ccaa2*t50756*t50749* \
               t50777)/(gamma_aa[index]*gcaa*t50754*2.0+t50756*t50749*t50777+1.0)+(ccaa1*gamma_aa[index]*gcaa*t50754) \
               /(gamma_aa[index]*gcaa*t50754+1.0)+(ccaa4*t50751*t50753*t50778)/(gamma_aa[index]*gcaa*t50754*4.0+t50751* \
               t50753*t50778+t50756*t50749*t50777*6.0+gamma_aa[index]*gcaa*t50755*t50749*t50777*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t50755*t50749*t50777)/(gamma_aa[index]*gcaa*t50754*3.0+t50756*t50749*t50777*3.0+gamma_aa[index]* \
               gcaa*t50755*t50749*t50777+1.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t50756*t50749*t50779)/(gamma_aa[index]* \
               gx*t50754*2.0+t50756*t50749*t50779+1.0)+(cx1*gamma_aa[index]*gx*t50754)/(gamma_aa[index]*gx*t50754+ \
               1.0)+(cx4*t50751*t50753*t50780)/(gamma_aa[index]*gx*t50754*4.0+t50751*t50753*t50780+t50756*t50749* \
               t50779*6.0+gamma_aa[index]*gx*t50755*t50749*t50779*4.0+1.0)+(cx3*gamma_aa[index]*gx*t50755*t50749* \
               t50779)/(gamma_aa[index]*gx*t50754*3.0+t50756*t50749*t50779*3.0+gamma_aa[index]*gx*t50755*t50749*t50779+ \
               1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t50782 = gamma_aa[index]*gamma_aa[index];
            double t50783 = gcab*gcab;
            double t50784 = t50782*t50782;
            double t50785 = t50783*t50783;
            double t50786 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t50787 = 1.0/pow(rho_a[index],8.0/3.0);
            double t50788 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50789 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t50790 = rho_a[index]*2.0;
            double t50791 = 1.0/pow(t50790,1.0/3.0);
            double t50792 = c*t50791;
            double t50793 = sqrt(t50792);
            double t50794 = b1p*t50793;
            double t50795 = pow(t50792,3.0/2.0);
            double t50796 = b3p*t50795;
            double t50797 = b2p*c*t50791;
            double t50798 = c*c;
            double t50799 = 1.0/pow(t50790,2.0/3.0);
            double t50800 = b4p*t50798*t50799;
            double t50801 = t50800+t50794+t50796+t50797;
            double t50802 = 1.0/pow(t50790,4.0/3.0);
            double t50803 = 1.0/c0p;
            double t50804 = 1.0/t50801;
            double t50805 = t50803*t50804*(1.0/2.0);
            double t50806 = t50805+1.0;
            double t50807 = 1.0/pow(rho_a[index],1.0/3.0);
            double t50808 = c*t50807;
            double t50809 = sqrt(t50808);
            double t50810 = b1f*t50809;
            double t50811 = pow(t50808,3.0/2.0);
            double t50812 = b3f*t50811;
            double t50813 = 1.0/pow(rho_a[index],2.0/3.0);
            double t50814 = b4f*t50813*t50798;
            double t50815 = b2f*c*t50807;
            double t50816 = t50810+t50812+t50814+t50815;
            double t50817 = 1.0/pow(rho_a[index],4.0/3.0);
            double t50818 = b1p*t50809;
            double t50819 = b3p*t50811;
            double t50820 = b4p*t50813*t50798;
            double t50821 = b2p*c*t50807;
            double t50822 = t50820+t50821+t50818+t50819;
            double t50823 = 1.0/pow(rho_a[index],5.0/3.0);
            double t50824 = 1.0/sqrt(t50808);
            double t50825 = 1.0/c0f;
            double t50826 = 1.0/t50816;
            double t50827 = t50825*t50826*(1.0/2.0);
            double t50828 = t50827+1.0;
            double t50829 = 1.0/t50822;
            double t50830 = t50803*t50829*(1.0/2.0);
            double t50831 = t50830+1.0;
            double t50832 = a1p*c*t50807;
            double t50833 = t50832+1.0;
            double t50834 = 1.0/t50831;
            double t50835 = 1.0/(t50822*t50822);
            double t50836 = b4p*t50823*t50798*(2.0/3.0);
            double t50837 = b2p*c*t50817*(1.0/3.0);
            double t50838 = b1p*c*t50824*t50817*(1.0/6.0);
            double t50839 = b3p*c*t50817*t50809*(1.0/2.0);
            double t50840 = t50836+t50837+t50838+t50839;
            double t50841 = t50840*t50833*t50834*t50835;
            double t50842 = log(t50831);
            double t50843 = log(t50806);
            double t50844 = a1p*c*t50791;
            double t50845 = t50844+1.0;
            double t50846 = pow(2.0,1.0/3.0);
            double t50847 = t50846*2.0;
            double t50848 = t50847-2.0;
            double t50849 = two_13*2.0;
            double t50850 = t50849-2.0;
            double t50851 = 1.0/t50850;
            double t50852 = log(t50828);
            double t50853 = a1f*c*t50807;
            double t50854 = t50853+1.0;
            double t50855 = c0f*t50852*t50854*2.0;
            double t50857 = c0p*t50833*t50842*2.0;
            double t50856 = t50855-t50857;
            double t50858 = gcaa*gcaa;
            double t50859 = t50858*t50858;
            double t50860 = t50851*t50856*t50848;
            double t50861 = t50860+t50857;
            double t50862 = gamma_aa[index]*gcab*t50787*4.0;
            double t50863 = gamma_aa[index]*gcab*t50782*t50783*t50788*4.0;
            double t50864 = t50782*t50783*t50789*6.0;
            double t50865 = t50784*t50785*t50786;
            double t50866 = t50862+t50863+t50864+t50865+1.0;
            double t50867 = 1.0/t50866;
            double t50868 = gamma_aa[index]*gcab*t50787;
            double t50869 = t50868+1.0;
            double t50870 = 1.0/t50869;
            double t50871 = gamma_aa[index]*gcab*t50787*3.0;
            double t50872 = gamma_aa[index]*gcab*t50782*t50783*t50788;
            double t50873 = t50782*t50783*t50789*3.0;
            double t50874 = t50871+t50872+t50873+1.0;
            double t50875 = 1.0/t50874;
            double t50876 = gamma_aa[index]*gcab*t50787*2.0;
            double t50877 = t50782*t50783*t50789;
            double t50878 = t50876+t50877+1.0;
            double t50879 = 1.0/t50878;
            double t50880 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t50881 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t50882 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t50883 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t50884 = gamma_aa[index]*gcaa*t50787*4.0;
            double t50885 = gamma_aa[index]*gcaa*t50782*t50858*t50788*4.0;
            double t50886 = t50782*t50858*t50789*6.0;
            double t50887 = t50784*t50786*t50859;
            double t50888 = t50884+t50885+t50886+t50887+1.0;
            double t50889 = 1.0/t50888;
            double t50890 = gamma_aa[index]*gcaa*t50787;
            double t50891 = t50890+1.0;
            double t50892 = 1.0/t50891;
            double t50893 = gamma_aa[index]*gcaa*t50787*3.0;
            double t50894 = gamma_aa[index]*gcaa*t50782*t50858*t50788;
            double t50895 = t50782*t50858*t50789*3.0;
            double t50896 = t50893+t50894+t50895+1.0;
            double t50897 = 1.0/t50896;
            double t50898 = gamma_aa[index]*gcaa*t50787*2.0;
            double t50899 = t50782*t50858*t50789;
            double t50900 = t50898+t50899+1.0;
            double t50901 = 1.0/t50900;
            double t50902 = gx*gx;
            double t50903 = t50902*t50902;
            double t50904 = gamma_aa[index]*gx*t50787*4.0;
            double t50905 = gamma_aa[index]*gx*t50902*t50782*t50788*4.0;
            double t50906 = t50902*t50782*t50789*6.0;
            double t50907 = t50903*t50784*t50786;
            double t50908 = t50904+t50905+t50906+t50907+1.0;
            double t50909 = 1.0/t50908;
            double t50910 = gamma_aa[index]*gx*t50787;
            double t50911 = t50910+1.0;
            double t50912 = 1.0/t50911;
            double t50913 = gamma_aa[index]*gx*t50787*3.0;
            double t50914 = gamma_aa[index]*gx*t50902*t50782*t50788;
            double t50915 = t50902*t50782*t50789*3.0;
            double t50916 = t50913+t50914+t50915+1.0;
            double t50917 = 1.0/t50916;
            double t50918 = gamma_aa[index]*gx*t50787*2.0;
            double t50919 = t50902*t50782*t50789;
            double t50920 = t50918+t50919+1.0;
            double t50921 = 1.0/t50920;
            double t50922 = 1.0/t50828;
            double t50923 = 1.0/(t50816*t50816);
            double t50924 = b4f*t50823*t50798*(2.0/3.0);
            double t50925 = b2f*c*t50817*(1.0/3.0);
            double t50926 = b1f*c*t50824*t50817*(1.0/6.0);
            double t50927 = b3f*c*t50817*t50809*(1.0/2.0);
            double t50928 = t50924+t50925+t50926+t50927;
            double t50929 = a1f*c*c0f*t50852*t50817*(2.0/3.0);
            double t50930 = a1p*c*c0p*t50842*t50817*(2.0/3.0);
            double t50931 = ccaa4*t50784*t50786*t50859*t50889;
            double t50932 = ccaa1*gamma_aa[index]*gcaa*t50892*t50787;
            double t50933 = ccaa3*gamma_aa[index]*gcaa*t50782*t50858*t50788*t50897;
            double t50934 = ccaa2*t50901*t50782*t50858*t50789;
            double t50935 = ccaa0+t50931+t50932+t50933+t50934;
            v_rho_a_[index] = -(rho_a[index]*t50861*2.0-c0p*rho_a[index]*t50843*t50845*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t50870*t50881*(4.0/3.0)+ccab2*t50880*t50782*t50783*t50879*(8.0/3.0)+ccab4*t50784*t50883*t50785* \
               t50867*(1.6E1/3.0)-ccab1*t50880*t50782*t50783*1.0/(t50869*t50869)*(4.0/3.0)-ccab2*t50782*t50783*1.0/ \
               (t50878*t50878)*t50789*(gamma_aa[index]*gcab*t50881*(8.0/3.0)+t50880*t50782*t50783*(8.0/3.0))-ccab4* \
               t50784*t50785*1.0/(t50866*t50866)*t50786*(gamma_aa[index]*gcab*t50881*(1.6E1/3.0)+t50880*t50782*t50783* \
               1.6E1+t50784*t50883*t50785*(1.6E1/3.0)+gamma_aa[index]*gcab*t50782*t50783*t50882*1.6E1)+ccab3*gamma_aa[index]* \
               gcab*t50782*t50783*t50882*t50875*4.0-ccab3*gamma_aa[index]*gcab*t50782*t50783*1.0/(t50874*t50874)* \
               t50788*(gamma_aa[index]*gcab*t50881*4.0+t50880*t50782*t50783*8.0+gamma_aa[index]*gcab*t50782*t50783* \
               t50882*4.0))-t50861*t50935-(rho_a[index]*((1.0/(t50801*t50801)*t50845*(b4p*1.0/pow(t50790,5.0/3.0) \
               *t50798*(2.0/3.0)+b2p*c*t50802*(1.0/3.0)+b3p*c*t50802*t50793*(1.0/2.0)+b1p*c*t50802*1.0/sqrt(t50792) \
               *(1.0/6.0)))/t50806-a1p*c*c0p*t50802*t50843*(2.0/3.0))*2.0+rho_a[index]*(t50930-t50841+t50851*t50848* \
               (t50841+t50929-t50922*t50923*t50854*t50928-a1p*c*c0p*t50842*t50817*(2.0/3.0)))-c0p*t50833*t50842*2.0+ \
               c0p*t50843*t50845*2.0-t50851*t50856*t50848)*(ccab0+ccab1*gamma_aa[index]*gcab*t50870*t50787+ccab2* \
               t50782*t50783*t50789*t50879+ccab4*t50784*t50785*t50786*t50867+ccab3*gamma_aa[index]*gcab*t50782*t50783* \
               t50875*t50788)+rho_a[index]*t50861*(ccaa1*gamma_aa[index]*gcaa*t50881*t50892*(8.0/3.0)+ccaa2*t50901* \
               t50880*t50782*t50858*(1.6E1/3.0)+ccaa4*t50784*t50883*t50859*t50889*(3.2E1/3.0)-ccaa1*t50880*t50782* \
               1.0/(t50891*t50891)*t50858*(8.0/3.0)-ccaa2*1.0/(t50900*t50900)*t50782*t50858*t50789*(gamma_aa[index]* \
               gcaa*t50881*(1.6E1/3.0)+t50880*t50782*t50858*(1.6E1/3.0))-ccaa4*t50784*t50786*t50859*1.0/(t50888*t50888) \
               *(gamma_aa[index]*gcaa*t50881*(3.2E1/3.0)+t50880*t50782*t50858*3.2E1+t50784*t50883*t50859*(3.2E1/3.0) \
               +gamma_aa[index]*gcaa*t50782*t50882*t50858*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t50782*t50882*t50858* \
               t50897*8.0-ccaa3*gamma_aa[index]*gcaa*t50782*t50858*t50788*1.0/(t50896*t50896)*(gamma_aa[index]*gcaa* \
               t50881*8.0+t50880*t50782*t50858*1.6E1+gamma_aa[index]*gcaa*t50782*t50882*t50858*8.0))+c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+cx1*gamma_aa[index]*gx*t50912*t50787+cx2*t50902*t50921*t50782*t50789+cx4*t50903*t50909*t50784* \
               t50786+cx3*gamma_aa[index]*gx*t50902*t50782*t50917*t50788)*(4.0/3.0)-c0*pow(rho_a[index],4.0/3.0)* \
               (cx1*gamma_aa[index]*gx*t50912*t50881*(8.0/3.0)+cx2*t50902*t50921*t50880*t50782*(1.6E1/3.0)+cx4*t50903* \
               t50909*t50784*t50883*(3.2E1/3.0)-cx1*t50902*1.0/(t50911*t50911)*t50880*t50782*(8.0/3.0)-cx2*t50902* \
               1.0/(t50920*t50920)*t50782*t50789*(gamma_aa[index]*gx*t50881*(1.6E1/3.0)+t50902*t50880*t50782*(1.6E1/ \
               3.0))-cx4*t50903*1.0/(t50908*t50908)*t50784*t50786*(gamma_aa[index]*gx*t50881*(3.2E1/3.0)+t50902*t50880* \
               t50782*3.2E1+t50903*t50784*t50883*(3.2E1/3.0)+gamma_aa[index]*gx*t50902*t50782*t50882*3.2E1)+cx3*gamma_aa[index]* \
               gx*t50902*t50782*t50917*t50882*8.0-cx3*gamma_aa[index]*gx*t50902*1.0/(t50916*t50916)*t50782*t50788* \
               (gamma_aa[index]*gx*t50881*8.0+t50902*t50880*t50782*1.6E1+gamma_aa[index]*gx*t50902*t50782*t50882* \
               8.0))-rho_a[index]*t50935*(-t50930+t50841+t50851*t50848*(t50930-t50841-t50929+t50922*t50923*t50854* \
               t50928));
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t50937 = 1.0/pow(rho_a[index],1.0/3.0);
                double t50938 = c*t50937;
                double t50939 = sqrt(t50938);
                double t50940 = pow(t50938,3.0/2.0);
                double t50941 = c*c;
                double t50942 = 1.0/pow(rho_a[index],2.0/3.0);
                double t50943 = 1.0/c0p;
                double t50944 = b1p*t50939;
                double t50945 = b3p*t50940;
                double t50946 = b4p*t50941*t50942;
                double t50947 = b2p*c*t50937;
                double t50948 = t50944+t50945+t50946+t50947;
                double t50949 = 1.0/t50948;
                double t50950 = t50943*t50949*(1.0/2.0);
                double t50951 = t50950+1.0;
                double t50952 = log(t50951);
                double t50953 = a1p*c*t50937;
                double t50954 = t50953+1.0;
                double t50955 = rho_a[index]*2.0;
                double t50956 = 1.0/pow(t50955,1.0/3.0);
                double t50957 = c*t50956;
                double t50958 = 1.0/pow(rho_a[index],8.0/3.0);
                double t50959 = gamma_aa[index]*gamma_aa[index];
                double t50960 = gcab*gcab;
                double t50961 = t50960*t50960;
                double t50962 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t50963 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t50964 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t50965 = gamma_aa[index]*gcab*t50958;
                double t50966 = t50965+1.0;
                double t50967 = gamma_aa[index]*gcab*t50958*3.0;
                double t50968 = gamma_aa[index]*gcab*t50960*t50964*t50959;
                double t50969 = t50960*t50963*t50959*3.0;
                double t50970 = t50967+t50968+t50969+1.0;
                double t50971 = t50959*t50959;
                double t50972 = gamma_aa[index]*gcab*t50958*4.0;
                double t50973 = gamma_aa[index]*gcab*t50960*t50964*t50959*4.0;
                double t50974 = t50960*t50963*t50959*6.0;
                double t50975 = t50961*t50962*t50971;
                double t50976 = t50972+t50973+t50974+t50975+1.0;
                double t50977 = gamma_aa[index]*gcab*t50958*2.0;
                double t50978 = t50960*t50963*t50959;
                double t50979 = t50977+t50978+1.0;
                double t50980 = gx*gx;
                double t50981 = t50980*t50980;
                double t50982 = gamma_aa[index]*gx*t50958;
                double t50983 = t50982+1.0;
                double t50984 = gamma_aa[index]*gx*t50958*3.0;
                double t50985 = gamma_aa[index]*gx*t50980*t50964*t50959;
                double t50986 = t50980*t50963*t50959*3.0;
                double t50987 = t50984+t50985+t50986+1.0;
                double t50988 = gamma_aa[index]*gx*t50958*4.0;
                double t50989 = gamma_aa[index]*gx*t50980*t50964*t50959*4.0;
                double t50990 = t50980*t50963*t50959*6.0;
                double t50991 = t50962*t50971*t50981;
                double t50992 = t50990+t50991+t50988+t50989+1.0;
                double t50993 = gamma_aa[index]*gx*t50958*2.0;
                double t50994 = t50980*t50963*t50959;
                double t50995 = t50993+t50994+1.0;
                double t50996 = pow(2.0,1.0/3.0);
                double t50997 = t50996*2.0;
                double t50998 = t50997-2.0;
                double t50999 = two_13*2.0;
                double t51000 = t50999-2.0;
                double t51001 = 1.0/t51000;
                double t51002 = 1.0/c0f;
                double t51003 = b1f*t50939;
                double t51004 = b3f*t50940;
                double t51005 = b4f*t50941*t50942;
                double t51006 = b2f*c*t50937;
                double t51007 = t51003+t51004+t51005+t51006;
                double t51008 = 1.0/t51007;
                double t51009 = t51002*t51008*(1.0/2.0);
                double t51010 = t51009+1.0;
                double t51011 = log(t51010);
                double t51012 = a1f*c*t50937;
                double t51013 = t51012+1.0;
                double t51014 = c0f*t51011*t51013*2.0;
                double t51015 = c0p*t50952*t50954*2.0;
                double t51016 = gcaa*gcaa;
                double t51017 = t51016*t51016;
                double t51018 = gamma_aa[index]*gcaa*t50958;
                double t51019 = t51018+1.0;
                double t51020 = gamma_aa[index]*gcaa*t50958*3.0;
                double t51021 = gamma_aa[index]*gcaa*t50964*t50959*t51016;
                double t51022 = t50963*t50959*t51016*3.0;
                double t51023 = t51020+t51021+t51022+1.0;
                double t51024 = gamma_aa[index]*gcaa*t50958*4.0;
                double t51025 = gamma_aa[index]*gcaa*t50964*t50959*t51016*4.0;
                double t51026 = t50963*t50959*t51016*6.0;
                double t51027 = t50962*t50971*t51017;
                double t51028 = t51024+t51025+t51026+t51027+1.0;
                double t51029 = gamma_aa[index]*gcaa*t50958*2.0;
                double t51030 = t50963*t50959*t51016;
                double t51031 = t51030+t51029+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t51015+t50998*t51001*(t51014-c0p*t50952*t50954*2.0))*2.0-c0p* \
                   rho_a[index]*log((t50943*(1.0/2.0))/(b1p*sqrt(t50957)+b3p*pow(t50957,3.0/2.0)+b4p*t50941*1.0/pow(t50955,2.0/ \
                   3.0)+b2p*c*t50956)+1.0)*(a1p*c*t50956+1.0)*4.0)*((ccab1*gcab*t50958*(1.0/2.0))/t50966-ccab1*gamma_aa[index]* \
                   t50960*t50963*1.0/(t50966*t50966)*(1.0/2.0)+(ccab2*gamma_aa[index]*t50960*t50963)/t50979-ccab2*t50960* \
                   t50963*t50959*1.0/(t50979*t50979)*(gcab*t50958+gamma_aa[index]*t50960*t50963)+(ccab4*gamma_aa[index]* \
                   t50961*t50962*t50959*2.0)/t50976+(ccab3*gcab*t50960*t50964*t50959*(3.0/2.0))/t50970-ccab4*t50961*t50962* \
                   t50971*1.0/(t50976*t50976)*(gcab*t50958*2.0+gamma_aa[index]*t50960*t50963*6.0+gamma_aa[index]*t50961* \
                   t50962*t50959*2.0+gcab*t50960*t50964*t50959*6.0)-ccab3*gamma_aa[index]*gcab*t50960*1.0/(t50970*t50970) \
                   *t50964*t50959*(gcab*t50958*(3.0/2.0)+gamma_aa[index]*t50960*t50963*3.0+gcab*t50960*t50964*t50959* \
                   (3.0/2.0)))*2.0-rho_a[index]*(t51015+t50998*t51001*(t51014-t51015))*((ccaa1*gcaa*t50958)/t51019+(ccaa2* \
                   gamma_aa[index]*t50963*t51016*2.0)/t51031-ccaa1*gamma_aa[index]*t50963*t51016*1.0/(t51019*t51019)- \
                   ccaa2*t50963*t50959*1.0/(t51031*t51031)*t51016*(gcaa*t50958*2.0+gamma_aa[index]*t50963*t51016*2.0) \
                   +(ccaa4*gamma_aa[index]*t50962*t50959*t51017*4.0)/t51028+(ccaa3*gcaa*t50964*t50959*t51016*3.0)/t51023- \
                   ccaa4*t50962*t50971*t51017*1.0/(t51028*t51028)*(gcaa*t50958*4.0+gamma_aa[index]*t50963*t51016*1.2E1+ \
                   gamma_aa[index]*t50962*t50959*t51017*4.0+gcaa*t50964*t50959*t51016*1.2E1)-ccaa3*gamma_aa[index]*gcaa* \
                   t50964*t50959*1.0/(t51023*t51023)*t51016*(gcaa*t50958*3.0+gamma_aa[index]*t50963*t51016*6.0+gcaa*t50964* \
                   t50959*t51016*3.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*((cx1*gx*t50958)/t50983-cx1*gamma_aa[index]*t50980* \
                   t50963*1.0/(t50983*t50983)+(cx2*gamma_aa[index]*t50980*t50963*2.0)/t50995-cx2*t50980*t50963*t50959* \
                   1.0/(t50995*t50995)*(gx*t50958*2.0+gamma_aa[index]*t50980*t50963*2.0)+(cx4*gamma_aa[index]*t50962* \
                   t50981*t50959*4.0)/t50992+(cx3*gx*t50980*t50964*t50959*3.0)/t50987-cx4*t50962*t50971*t50981*1.0/(t50992* \
                   t50992)*(gx*t50958*4.0+gamma_aa[index]*t50980*t50963*1.2E1+gamma_aa[index]*t50962*t50981*t50959*4.0+ \
                   gx*t50980*t50964*t50959*1.2E1)-cx3*gamma_aa[index]*gx*t50980*t50964*t50959*1.0/(t50987*t50987)*(gx* \
                   t50958*3.0+gamma_aa[index]*t50980*t50963*6.0+gx*t50980*t50964*t50959*3.0))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t51034 = rho_a[index]*2.0;
            double t51035 = 1.0/pow(t51034,1.0/3.0);
            double t51036 = c*t51035;
            double t51037 = sqrt(t51036);
            double t51038 = b1p*t51037;
            double t51039 = pow(t51036,3.0/2.0);
            double t51040 = b3p*t51039;
            double t51041 = b2p*c*t51035;
            double t51042 = c*c;
            double t51043 = 1.0/pow(t51034,2.0/3.0);
            double t51044 = b4p*t51042*t51043;
            double t51045 = t51040+t51041+t51044+t51038;
            double t51046 = 1.0/pow(t51034,8.0/3.0);
            double t51047 = 1.0/pow(t51034,7.0/3.0);
            double t51048 = 1.0/sqrt(t51036);
            double t51049 = 1.0/c0p;
            double t51050 = 1.0/t51045;
            double t51051 = t51050*t51049*(1.0/2.0);
            double t51052 = t51051+1.0;
            double t51053 = 1.0/t51052;
            double t51054 = a1p*c*t51035;
            double t51055 = t51054+1.0;
            double t51056 = 1.0/pow(t51034,4.0/3.0);
            double t51058 = b2p*c*t51056*(1.0/3.0);
            double t51059 = 1.0/pow(t51034,5.0/3.0);
            double t51060 = b4p*t51042*t51059*(2.0/3.0);
            double t51061 = b1p*c*t51056*t51048*(1.0/6.0);
            double t51062 = b3p*c*t51037*t51056*(1.0/2.0);
            double t51057 = t51060+t51061+t51062+t51058;
            double t51063 = t51057*t51057;
            double t51064 = 1.0/(t51045*t51045);
            double t51065 = log(t51052);
            double t51066 = gamma_aa[index]*gamma_aa[index];
            double t51067 = gcab*gcab;
            double t51068 = t51066*t51066;
            double t51069 = t51067*t51067;
            double t51070 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t51071 = 1.0/pow(rho_a[index],8.0/3.0);
            double t51072 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t51073 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t51074 = two_13*2.0;
            double t51075 = t51074-2.0;
            double t51076 = 1.0/t51075;
            double t51077 = 1.0/pow(rho_a[index],1.0/3.0);
            double t51078 = c*t51077;
            double t51079 = sqrt(t51078);
            double t51080 = pow(t51078,3.0/2.0);
            double t51081 = 1.0/pow(rho_a[index],2.0/3.0);
            double t51082 = b1p*t51079;
            double t51083 = b3p*t51080;
            double t51084 = b4p*t51042*t51081;
            double t51085 = b2p*c*t51077;
            double t51086 = t51082+t51083+t51084+t51085;
            double t51087 = 1.0/t51086;
            double t51088 = t51049*t51087*(1.0/2.0);
            double t51089 = t51088+1.0;
            double t51090 = log(t51089);
            double t51091 = a1p*c*t51077;
            double t51092 = t51091+1.0;
            double t51093 = gamma_aa[index]*gcab*t51071*4.0;
            double t51094 = gamma_aa[index]*gcab*t51072*t51066*t51067*4.0;
            double t51095 = t51073*t51066*t51067*6.0;
            double t51096 = t51070*t51068*t51069;
            double t51097 = t51093+t51094+t51095+t51096+1.0;
            double t51098 = 1.0/t51097;
            double t51099 = gamma_aa[index]*gcab*t51071;
            double t51100 = t51099+1.0;
            double t51101 = 1.0/t51100;
            double t51102 = gamma_aa[index]*gcab*t51071*3.0;
            double t51103 = gamma_aa[index]*gcab*t51072*t51066*t51067;
            double t51104 = t51073*t51066*t51067*3.0;
            double t51105 = t51102+t51103+t51104+1.0;
            double t51106 = 1.0/t51105;
            double t51107 = gamma_aa[index]*gcab*t51071*2.0;
            double t51108 = t51073*t51066*t51067;
            double t51109 = t51107+t51108+1.0;
            double t51110 = 1.0/t51109;
            double t51111 = 1.0/pow(rho_a[index],1.0E1);
            double t51112 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t51114 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t51115 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t51117 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t51124 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t51125 = gamma_aa[index]*gcab*t51114*(1.6E1/3.0);
            double t51126 = gamma_aa[index]*gcab*t51117*t51066*t51067*1.6E1;
            double t51127 = t51115*t51066*t51067*1.6E1;
            double t51128 = t51124*t51068*t51069*(1.6E1/3.0);
            double t51113 = t51125+t51126+t51127+t51128;
            double t51131 = gamma_aa[index]*gcab*t51114*(8.0/3.0);
            double t51132 = t51115*t51066*t51067*(8.0/3.0);
            double t51116 = t51131+t51132;
            double t51118 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t51119 = 1.0/(t51105*t51105);
            double t51120 = gamma_aa[index]*gcab*t51114*4.0;
            double t51121 = gamma_aa[index]*gcab*t51117*t51066*t51067*4.0;
            double t51122 = t51115*t51066*t51067*8.0;
            double t51123 = t51120+t51121+t51122;
            double t51129 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t51130 = 1.0/(t51097*t51097);
            double t51133 = 1.0/(t51109*t51109);
            double t51134 = pow(2.0,1.0/3.0);
            double t51135 = t51134*2.0;
            double t51136 = t51135-2.0;
            double t51137 = a1f*c*t51077;
            double t51138 = t51137+1.0;
            double t51139 = 1.0/c0f;
            double t51140 = b1f*t51079;
            double t51141 = b3f*t51080;
            double t51142 = b4f*t51042*t51081;
            double t51143 = b2f*c*t51077;
            double t51144 = t51140+t51141+t51142+t51143;
            double t51145 = 1.0/t51144;
            double t51146 = t51145*t51139*(1.0/2.0);
            double t51147 = t51146+1.0;
            double t51148 = 1.0/pow(rho_a[index],4.0/3.0);
            double t51149 = 1.0/pow(rho_a[index],5.0/3.0);
            double t51150 = 1.0/sqrt(t51078);
            double t51151 = log(t51147);
            double t51152 = 1.0/t51089;
            double t51153 = 1.0/(t51086*t51086);
            double t51154 = b4p*t51042*t51149*(2.0/3.0);
            double t51155 = b2p*c*t51148*(1.0/3.0);
            double t51156 = b1p*c*t51150*t51148*(1.0/6.0);
            double t51157 = b3p*c*t51148*t51079*(1.0/2.0);
            double t51158 = t51154+t51155+t51156+t51157;
            double t51159 = t51152*t51153*t51092*t51158;
            double t51160 = gcaa*gcaa;
            double t51161 = t51160*t51160;
            double t51162 = 1.0/t51147;
            double t51163 = 1.0/(t51144*t51144);
            double t51164 = b4f*t51042*t51149*(2.0/3.0);
            double t51165 = b2f*c*t51148*(1.0/3.0);
            double t51166 = b1f*c*t51150*t51148*(1.0/6.0);
            double t51167 = b3f*c*t51148*t51079*(1.0/2.0);
            double t51168 = t51164+t51165+t51166+t51167;
            double t51169 = a1f*c*c0f*t51151*t51148*(2.0/3.0);
            double t51170 = a1p*c*c0p*t51090*t51148*(2.0/3.0);
            double t51171 = c0f*t51151*t51138*2.0;
            double t51172 = c0p*t51090*t51092*2.0;
            double t51173 = 1.0/(t51100*t51100);
            double t51174 = ccab4*t51070*t51068*t51069*t51098;
            double t51175 = ccab1*gamma_aa[index]*gcab*t51101*t51071;
            double t51176 = ccab3*gamma_aa[index]*gcab*t51106*t51072*t51066*t51067;
            double t51177 = ccab2*t51110*t51073*t51066*t51067;
            double t51178 = ccab0+t51174+t51175+t51176+t51177;
            double t51179 = b2p*c*t51047*(4.0/9.0);
            double t51180 = b4p*t51042*t51046*(1.0E1/9.0);
            double t51181 = 1.0/pow(t51036,3.0/2.0);
            double t51182 = b3p*t51042*t51046*t51048*(1.0/1.2E1);
            double t51183 = b1p*c*t51047*t51048*(2.0/9.0);
            double t51184 = b3p*c*t51037*t51047*(2.0/3.0);
            double t51185 = t51180+t51182+t51183+t51184+t51179-b1p*t51042*t51046*t51181*(1.0/3.6E1);
            double t51186 = t51053*t51055*t51064*t51185;
            double t51187 = 1.0/(t51045*t51045*t51045);
            double t51188 = 1.0/(t51052*t51052);
            double t51189 = 1.0/(t51045*t51045*t51045*t51045);
            double t51190 = t51063*t51055*t51049*t51188*t51189*(1.0/2.0);
            double t51191 = 1.0/d2fz0;
            double t51192 = 1.0/(rho_a[index]*rho_a[index]);
            double t51193 = 1.0/Aa;
            double t51194 = b1a*t51037;
            double t51195 = b3a*t51039;
            double t51196 = b2a*c*t51035;
            double t51197 = b4a*t51042*t51043;
            double t51198 = t51194+t51195+t51196+t51197;
            double t51199 = 1.0/t51198;
            double t51200 = t51193*t51199*(1.0/2.0);
            double t51201 = t51200+1.0;
            double t51202 = log(t51201);
            double t51203 = a1a*c*t51035;
            double t51204 = t51203+1.0;
            double t51205 = a1p*c*t51053*t51064*t51056*t51057*(2.0/3.0);
            double t51206 = 1.0/pow(rho_a[index],7.0/3.0);
            double t51207 = 1.0/pow(t51078,3.0/2.0);
            double t51208 = t51168*t51168;
            double t51209 = t51158*t51158;
            double t51210 = 1.0/(t51086*t51086*t51086);
            double t51211 = t51210*t51152*t51092*t51209*2.0;
            double t51212 = b4p*t51042*t51071*(1.0E1/9.0);
            double t51213 = b2p*c*t51206*(4.0/9.0);
            double t51214 = b3p*t51042*t51150*t51071*(1.0/1.2E1);
            double t51215 = b1p*c*t51150*t51206*(2.0/9.0);
            double t51216 = b3p*c*t51206*t51079*(2.0/3.0);
            double t51328 = b1p*t51042*t51071*t51207*(1.0/3.6E1);
            double t51217 = t51212+t51213+t51214+t51215+t51216-t51328;
            double t51218 = 1.0/(t51089*t51089);
            double t51219 = 1.0/(t51086*t51086*t51086*t51086);
            double t51220 = a1p*c*c0p*t51206*t51090*(8.0/9.0);
            double t51221 = t51162*t51163*t51138*t51168;
            double t51222 = t51221+t51170-t51159-t51169;
            double t51223 = a1p*c*c0p*t51056*t51065*(4.0/3.0);
            double t51224 = t51171-t51172;
            double t51225 = t51224*t51136*t51076;
            double t51226 = gamma_aa[index]*gcaa*t51071*4.0;
            double t51227 = gamma_aa[index]*gcaa*t51160*t51072*t51066*4.0;
            double t51228 = t51160*t51073*t51066*6.0;
            double t51229 = t51070*t51161*t51068;
            double t51230 = t51226+t51227+t51228+t51229+1.0;
            double t51231 = 1.0/t51230;
            double t51232 = gamma_aa[index]*gcaa*t51071;
            double t51233 = t51232+1.0;
            double t51234 = 1.0/t51233;
            double t51235 = gamma_aa[index]*gcaa*t51071*3.0;
            double t51236 = gamma_aa[index]*gcaa*t51160*t51072*t51066;
            double t51237 = t51160*t51073*t51066*3.0;
            double t51238 = t51235+t51236+t51237+1.0;
            double t51239 = 1.0/t51238;
            double t51240 = gamma_aa[index]*gcaa*t51071*2.0;
            double t51241 = t51160*t51073*t51066;
            double t51242 = t51240+t51241+1.0;
            double t51243 = 1.0/t51242;
            double t51244 = t51225+t51172;
            double t51245 = 1.0/(t51100*t51100*t51100);
            double t51246 = ccab1*gamma_aa[index]*gcab*t51111*t51245*t51066*t51067*(3.2E1/9.0);
            double t51247 = t51113*t51113;
            double t51248 = 1.0/(t51097*t51097*t51097);
            double t51249 = ccab4*t51070*t51247*t51068*t51248*t51069*2.0;
            double t51250 = t51116*t51116;
            double t51251 = 1.0/(t51109*t51109*t51109);
            double t51252 = ccab2*t51250*t51251*t51073*t51066*t51067*2.0;
            double t51253 = t51123*t51123;
            double t51254 = 1.0/(t51105*t51105*t51105);
            double t51255 = ccab3*gamma_aa[index]*gcab*t51072*t51253*t51254*t51066*t51067*2.0;
            double t51256 = t51222*t51136*t51076;
            double t51257 = -t51170+t51256+t51159;
            double t51258 = ccaa4*t51231*t51124*t51161*t51068*(3.2E1/3.0);
            double t51259 = ccaa1*gamma_aa[index]*gcaa*t51114*t51234*(8.0/3.0);
            double t51260 = ccaa3*gamma_aa[index]*gcaa*t51160*t51117*t51066*t51239*8.0;
            double t51261 = ccaa2*t51115*t51160*t51243*t51066*(1.6E1/3.0);
            double t51262 = 1.0/(t51233*t51233);
            double t51263 = gamma_aa[index]*gcaa*t51114*8.0;
            double t51264 = gamma_aa[index]*gcaa*t51160*t51117*t51066*8.0;
            double t51265 = t51115*t51160*t51066*1.6E1;
            double t51266 = t51263+t51264+t51265;
            double t51267 = 1.0/(t51238*t51238);
            double t51268 = gamma_aa[index]*gcaa*t51114*(3.2E1/3.0);
            double t51269 = gamma_aa[index]*gcaa*t51160*t51117*t51066*3.2E1;
            double t51270 = t51115*t51160*t51066*3.2E1;
            double t51271 = t51124*t51161*t51068*(3.2E1/3.0);
            double t51272 = t51270+t51271+t51268+t51269;
            double t51273 = 1.0/(t51230*t51230);
            double t51274 = gamma_aa[index]*gcaa*t51114*(1.6E1/3.0);
            double t51275 = t51115*t51160*t51066*(1.6E1/3.0);
            double t51276 = t51274+t51275;
            double t51277 = 1.0/(t51242*t51242);
            double t51278 = t51260+t51261+t51258+t51259-ccaa1*t51115*t51160*t51262*t51066*(8.0/3.0)-ccaa4*t51070* \
               t51161*t51272*t51273*t51068-ccaa2*t51160*t51073*t51066*t51276*t51277-ccaa3*gamma_aa[index]*gcaa*t51160* \
               t51072*t51066*t51266*t51267;
            double t51279 = gx*gx;
            double t51280 = t51279*t51279;
            double t51281 = gamma_aa[index]*gx*t51071;
            double t51282 = t51281+1.0;
            double t51302 = gamma_aa[index]*gx*t51114*(3.2E1/3.0);
            double t51303 = gamma_aa[index]*gx*t51117*t51066*t51279*3.2E1;
            double t51304 = t51115*t51066*t51279*3.2E1;
            double t51305 = t51124*t51280*t51068*(3.2E1/3.0);
            double t51283 = t51302+t51303+t51304+t51305;
            double t51284 = gamma_aa[index]*gx*t51071*4.0;
            double t51285 = gamma_aa[index]*gx*t51072*t51066*t51279*4.0;
            double t51286 = t51073*t51066*t51279*6.0;
            double t51287 = t51070*t51280*t51068;
            double t51288 = t51284+t51285+t51286+t51287+1.0;
            double t51307 = gamma_aa[index]*gx*t51114*(1.6E1/3.0);
            double t51308 = t51115*t51066*t51279*(1.6E1/3.0);
            double t51289 = t51307+t51308;
            double t51290 = gamma_aa[index]*gx*t51071*2.0;
            double t51291 = t51073*t51066*t51279;
            double t51292 = t51290+t51291+1.0;
            double t51293 = gamma_aa[index]*gx*t51071*3.0;
            double t51294 = gamma_aa[index]*gx*t51072*t51066*t51279;
            double t51295 = t51073*t51066*t51279*3.0;
            double t51296 = t51293+t51294+t51295+1.0;
            double t51297 = 1.0/(t51296*t51296);
            double t51298 = gamma_aa[index]*gx*t51114*8.0;
            double t51299 = gamma_aa[index]*gx*t51117*t51066*t51279*8.0;
            double t51300 = t51115*t51066*t51279*1.6E1;
            double t51301 = t51300+t51298+t51299;
            double t51306 = 1.0/(t51288*t51288);
            double t51309 = 1.0/(t51292*t51292);
            double t51310 = 1.0/t51288;
            double t51311 = 1.0/t51282;
            double t51312 = 1.0/t51296;
            double t51313 = 1.0/t51292;
            double t51314 = 1.0/(t51282*t51282);
            double t51315 = ccaa4*t51231*t51070*t51161*t51068;
            double t51316 = ccaa1*gamma_aa[index]*gcaa*t51071*t51234;
            double t51317 = ccaa3*gamma_aa[index]*gcaa*t51160*t51072*t51066*t51239;
            double t51318 = ccaa2*t51160*t51243*t51073*t51066;
            double t51319 = ccaa0+t51315+t51316+t51317+t51318;
            double t51320 = 1.0/(t51144*t51144*t51144);
            double t51321 = b4f*t51042*t51071*(1.0E1/9.0);
            double t51322 = b2f*c*t51206*(4.0/9.0);
            double t51323 = b3f*t51042*t51150*t51071*(1.0/1.2E1);
            double t51324 = b1f*c*t51150*t51206*(2.0/9.0);
            double t51325 = b3f*c*t51206*t51079*(2.0/3.0);
            double t51326 = t51321+t51322+t51323+t51324+t51325-b1f*t51042*t51071*t51207*(1.0/3.6E1);
            double t51327 = t51162*t51163*t51326*t51138;
            double t51329 = t51152*t51153*t51217*t51092;
            double t51330 = 1.0/(t51147*t51147);
            double t51331 = 1.0/(t51144*t51144*t51144*t51144);
            double t51332 = t51330*t51331*t51208*t51138*t51139*(1.0/2.0);
            double t51333 = t51092*t51209*t51218*t51219*t51049*(1.0/2.0);
            double t51334 = a1f*c*t51162*t51163*t51148*t51168*(2.0/3.0);
            double t51335 = a1p*c*t51152*t51153*t51148*t51158*(2.0/3.0);
            v_rho_a_rho_a_[index] = (t51225+t51172+rho_a[index]*t51257-rho_a[index]*(t51053*t51055*t51064*t51057- \
               a1p*c*c0p*t51056*t51065*(2.0/3.0))*2.0-c0p*t51055*t51065*2.0)*(ccab1*gamma_aa[index]*gcab*t51101*t51114* \
               (4.0/3.0)+ccab2*t51110*t51115*t51066*t51067*(8.0/3.0)-ccab1*t51115*t51173*t51066*t51067*(4.0/3.0)+ \
               ccab4*t51124*t51068*t51069*t51098*(1.6E1/3.0)-ccab4*t51130*t51113*t51070*t51068*t51069-ccab2*t51133* \
               t51116*t51073*t51066*t51067+ccab3*gamma_aa[index]*gcab*t51106*t51117*t51066*t51067*4.0-ccab3*gamma_aa[index]* \
               gcab*t51123*t51072*t51119*t51066*t51067)*-4.0+t51244*t51278*2.0+(rho_a[index]*(t51172+t51136*t51076* \
               (t51171-c0p*t51090*t51092*2.0))*2.0-c0p*rho_a[index]*t51055*t51065*4.0)*(t51252+t51246+t51255+t51249+ \
               ccab1*gamma_aa[index]*gcab*t51101*t51118*(4.4E1/9.0)+ccab2*t51110*t51112*t51066*t51067*(4.0E1/3.0) \
               -ccab1*t51112*t51173*t51066*t51067*(7.6E1/9.0)+ccab4*t51129*t51068*t51069*t51098*(3.68E2/9.0)-ccab2* \
               t51115*t51133*t51116*t51066*t51067*(1.6E1/3.0)-ccab4*t51130*t51113*t51124*t51068*t51069*(3.2E1/3.0) \
               -ccab2*t51133*t51073*t51066*t51067*(gamma_aa[index]*gcab*t51118*(8.8E1/9.0)+t51112*t51066*t51067*(4.0E1/ \
               3.0))-ccab4*t51130*t51070*t51068*t51069*(gamma_aa[index]*gcab*t51118*(1.76E2/9.0)+t51112*t51066*t51067* \
               8.0E1+t51129*t51068*t51069*(3.68E2/9.0)+gamma_aa[index]*gcab*t51111*t51066*t51067*(3.04E2/3.0))+ccab3* \
               gamma_aa[index]*gcab*t51111*t51106*t51066*t51067*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t51072*t51119* \
               t51066*t51067*(gamma_aa[index]*gcab*t51118*(4.4E1/3.0)+t51112*t51066*t51067*4.0E1+gamma_aa[index]* \
               gcab*t51111*t51066*t51067*(7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t51123*t51117*t51119*t51066*t51067* \
               8.0)+t51319*(t51170-t51159+t51136*t51076*(t51159+t51169-t51162*t51163*t51138*t51168-a1p*c*c0p*t51090* \
               t51148*(2.0/3.0)))*2.0+t51178*(t51223+rho_a[index]*(t51205+t51190+t51186-t51053*t51063*t51055*t51187* \
               2.0-a1p*c*c0p*t51047*t51065*(8.0/9.0)+Aa*t51202*t51204*t51191*t51192*t51076*(4.0/9.0))*2.0-rho_a[index]* \
               (-t51211-t51220+t51333+t51335+t51329+t51136*t51076*(t51211+t51220+t51332+t51334+t51327-t51320*t51162* \
               t51208*t51138*2.0-t51152*t51153*t51217*t51092-a1f*c*c0f*t51151*t51206*(8.0/9.0)-t51092*t51209*t51218* \
               t51219*t51049*(1.0/2.0)-a1p*c*t51152*t51153*t51148*t51158*(2.0/3.0)))+t51222*t51136*t51076*2.0-t51053* \
               t51055*t51064*t51057*2.0+t51152*t51153*t51092*t51158*2.0-a1p*c*c0p*t51090*t51148*(4.0/3.0))+(rho_a[index]* \
               t51244*2.0-c0p*rho_a[index]*t51055*t51065*4.0)*(t51252+t51246+t51255+t51249+ccab2*t51110*t51112*t51066* \
               t51067*(3.2E1/9.0)-ccab1*t51112*t51173*t51066*t51067*(3.2E1/9.0)-ccab2*t51133*t51129*t51068*t51069* \
               (3.2E1/9.0)+ccab4*t51129*t51068*t51069*t51098*(6.4E1/3.0)-ccab2*t51115*t51133*t51116*t51066*t51067* \
               (1.6E1/3.0)-ccab4*t51130*t51113*t51124*t51068*t51069*(3.2E1/3.0)-ccab4*t51130*t51070*t51068*t51069* \
               (t51112*t51066*t51067*(6.4E1/3.0)+t51129*t51068*t51069*(6.4E1/3.0)+gamma_aa[index]*gcab*t51111*t51066* \
               t51067*(1.28E2/3.0))+ccab3*gamma_aa[index]*gcab*t51111*t51106*t51066*t51067*(3.2E1/3.0)-ccab3*gamma_aa[index]* \
               gcab*t51072*t51119*t51066*t51067*(t51112*t51066*t51067*(3.2E1/3.0)+gamma_aa[index]*gcab*t51111*t51066* \
               t51067*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t51123*t51117*t51119*t51066*t51067*8.0)+t51178*(t51223+ \
               rho_a[index]*(t51205+t51190+t51186-t51053*t51063*t51055*t51187*2.0-a1p*c*c0p*t51047*t51065*(8.0/9.0) \
               -Aa*t51202*t51204*t51191*t51192*t51076*(4.0/9.0))*2.0-t51053*t51055*t51064*t51057*2.0)-c0*pow(rho_a[index],1.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t51311*t51114*(8.0/3.0)-cx1*t51115*t51314*t51066*t51279*(8.0/3.0)+cx2* \
               t51115*t51313*t51066*t51279*(1.6E1/3.0)+cx4*t51310*t51124*t51280*t51068*(3.2E1/3.0)-cx2*t51073*t51066* \
               t51309*t51279*t51289-cx4*t51070*t51306*t51280*t51283*t51068+cx3*gamma_aa[index]*gx*t51312*t51117*t51066* \
               t51279*8.0-cx3*gamma_aa[index]*gx*t51301*t51072*t51066*t51279*t51297)*(8.0/3.0)-rho_a[index]*t51244* \
               (ccaa1*gamma_aa[index]*gcaa*t51234*t51118*(8.8E1/9.0)-ccaa1*t51112*t51160*t51262*t51066*2.4E1+ccaa2* \
               t51112*t51160*t51243*t51066*(3.04E2/9.0)+ccaa4*t51231*t51161*t51129*t51068*(1.12E3/9.0)-ccaa4*t51124* \
               t51161*t51272*t51273*t51068*(6.4E1/3.0)-ccaa2*t51115*t51160*t51066*t51276*t51277*(3.2E1/3.0)-ccaa2* \
               t51160*t51073*t51066*t51277*(gamma_aa[index]*gcaa*t51118*(1.76E2/9.0)+t51112*t51160*t51066*(3.04E2/ \
               9.0))-ccaa4*t51070*t51161*t51273*t51068*(gamma_aa[index]*gcaa*t51118*(3.52E2/9.0)+t51112*t51160*t51066* \
               (6.08E2/3.0)+t51161*t51129*t51068*(1.12E3/9.0)+gamma_aa[index]*gcaa*t51111*t51160*t51066*2.88E2)+ccaa4* \
               1.0/(t51230*t51230*t51230)*t51070*t51161*(t51272*t51272)*t51068*2.0+ccaa2*t51160*1.0/(t51242*t51242* \
               t51242)*t51073*t51066*(t51276*t51276)*2.0+ccaa3*gamma_aa[index]*gcaa*t51111*t51160*t51066*t51239*7.2E1+ \
               ccaa1*gamma_aa[index]*gcaa*t51111*t51160*1.0/(t51233*t51233*t51233)*t51066*(1.28E2/9.0)+ccaa3*gamma_aa[index]* \
               gcaa*t51160*t51072*t51066*1.0/(t51238*t51238*t51238)*(t51266*t51266)*2.0-ccaa3*gamma_aa[index]*gcaa* \
               t51160*t51072*t51066*t51267*(gamma_aa[index]*gcaa*t51118*(8.8E1/3.0)+t51112*t51160*t51066*(3.04E2/ \
               3.0)+gamma_aa[index]*gcaa*t51111*t51160*t51066*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t51160*t51117*t51066* \
               t51266*t51267*1.6E1)+rho_a[index]*t51319*(-t51211-t51220+t51333+t51335+t51329+t51136*t51076*(t51211+ \
               t51220+t51332-t51333+t51334-t51335+t51327-t51329-t51320*t51162*t51208*t51138*2.0-a1f*c*c0f*t51151* \
               t51206*(8.0/9.0)))+rho_a[index]*t51257*t51278*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t51311*t51118*(8.8E1/9.0)-cx1*t51112*t51314*t51066*t51279*2.4E1+cx2*t51112*t51313*t51066*t51279* \
               (3.04E2/9.0)+cx4*t51310*t51280*t51129*t51068*(1.12E3/9.0)-cx2*t51115*t51066*t51309*t51279*t51289*(3.2E1/ \
               3.0)-cx4*t51124*t51306*t51280*t51283*t51068*(6.4E1/3.0)-cx2*t51073*t51066*t51309*t51279*(gamma_aa[index]* \
               gx*t51118*(1.76E2/9.0)+t51112*t51066*t51279*(3.04E2/9.0))-cx4*t51070*t51306*t51280*t51068*(gamma_aa[index]* \
               gx*t51118*(3.52E2/9.0)+t51112*t51066*t51279*(6.08E2/3.0)+t51280*t51129*t51068*(1.12E3/9.0)+gamma_aa[index]* \
               gx*t51111*t51066*t51279*2.88E2)+cx2*t51073*t51066*1.0/(t51292*t51292*t51292)*t51279*(t51289*t51289) \
               *2.0+cx4*t51070*t51280*(t51283*t51283)*t51068*1.0/(t51288*t51288*t51288)*2.0+cx3*gamma_aa[index]*gx* \
               t51111*t51312*t51066*t51279*7.2E1+cx1*gamma_aa[index]*gx*t51111*t51066*1.0/(t51282*t51282*t51282)* \
               t51279*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*(t51301*t51301)*t51072*t51066*1.0/(t51296*t51296*t51296) \
               *t51279*2.0-cx3*gamma_aa[index]*gx*t51072*t51066*t51279*t51297*(gamma_aa[index]*gx*t51118*(8.8E1/3.0) \
               +t51112*t51066*t51279*(3.04E2/3.0)+gamma_aa[index]*gx*t51111*t51066*t51279*7.2E1)-cx3*gamma_aa[index]* \
               gx*t51301*t51117*t51066*t51279*t51297*1.6E1)+c0*t51081*(cx0+cx1*gamma_aa[index]*gx*t51311*t51071+cx2* \
               t51313*t51073*t51066*t51279+cx4*t51310*t51070*t51280*t51068+cx3*gamma_aa[index]*gx*t51312*t51072*t51066* \
               t51279)*(4.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t51337 = 1.0/pow(rho_a[index],1.0/3.0);
                double t51338 = c*t51337;
                double t51339 = sqrt(t51338);
                double t51340 = pow(t51338,3.0/2.0);
                double t51341 = c*c;
                double t51342 = 1.0/pow(rho_a[index],2.0/3.0);
                double t51343 = 1.0/c0p;
                double t51344 = b1p*t51339;
                double t51345 = b3p*t51340;
                double t51346 = b4p*t51341*t51342;
                double t51347 = b2p*c*t51337;
                double t51348 = t51344+t51345+t51346+t51347;
                double t51349 = 1.0/t51348;
                double t51350 = t51343*t51349*(1.0/2.0);
                double t51351 = t51350+1.0;
                double t51352 = log(t51351);
                double t51353 = a1p*c*t51337;
                double t51354 = t51353+1.0;
                double t51355 = 1.0/pow(rho_a[index],8.0/3.0);
                double t51356 = gamma_aa[index]*gamma_aa[index];
                double t51357 = gcaa*gcaa;
                double t51358 = t51357*t51357;
                double t51359 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t51360 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t51361 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t51362 = gamma_aa[index]*gcaa*t51355;
                double t51363 = t51362+1.0;
                double t51364 = gamma_aa[index]*gcaa*t51355*3.0;
                double t51365 = gamma_aa[index]*gcaa*t51361*t51356*t51357;
                double t51366 = t51360*t51356*t51357*3.0;
                double t51367 = t51364+t51365+t51366+1.0;
                double t51368 = t51356*t51356;
                double t51369 = gamma_aa[index]*gcaa*t51355*4.0;
                double t51370 = gamma_aa[index]*gcaa*t51361*t51356*t51357*4.0;
                double t51371 = t51360*t51356*t51357*6.0;
                double t51372 = t51358*t51359*t51368;
                double t51373 = t51370+t51371+t51372+t51369+1.0;
                double t51374 = gamma_aa[index]*gcaa*t51355*2.0;
                double t51375 = t51360*t51356*t51357;
                double t51376 = t51374+t51375+1.0;
                double t51377 = pow(2.0,1.0/3.0);
                double t51378 = t51377*2.0;
                double t51379 = t51378-2.0;
                double t51380 = two_13*2.0;
                double t51381 = t51380-2.0;
                double t51382 = 1.0/t51381;
                double t51383 = 1.0/c0f;
                double t51384 = b1f*t51339;
                double t51385 = b3f*t51340;
                double t51386 = b4f*t51341*t51342;
                double t51387 = b2f*c*t51337;
                double t51388 = t51384+t51385+t51386+t51387;
                double t51389 = 1.0/t51388;
                double t51390 = t51383*t51389*(1.0/2.0);
                double t51391 = t51390+1.0;
                double t51392 = log(t51391);
                double t51393 = a1f*c*t51337;
                double t51394 = t51393+1.0;
                double t51395 = c0f*t51392*t51394*2.0;
                double t51396 = c0p*t51352*t51354*2.0;
                double t51397 = rho_a[index]*2.0;
                double t51398 = 1.0/pow(t51397,1.0/3.0);
                double t51399 = c*t51398;
                double t51400 = gcab*gcab;
                double t51401 = t51400*t51400;
                double t51402 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t51403 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t51404 = gamma_aa[index]*gcab*t51355*2.0;
                double t51405 = t51400*t51360*t51356;
                double t51406 = t51404+t51405+1.0;
                double t51407 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t51408 = gamma_aa[index]*gcab*t51355;
                double t51409 = t51408+1.0;
                double t51410 = gamma_aa[index]*gcab*t51355*3.0;
                double t51411 = gamma_aa[index]*gcab*t51400*t51361*t51356;
                double t51412 = t51400*t51360*t51356*3.0;
                double t51413 = t51410+t51411+t51412+1.0;
                double t51414 = gamma_aa[index]*gcab*t51355*4.0;
                double t51415 = gamma_aa[index]*gcab*t51400*t51361*t51356*4.0;
                double t51416 = t51400*t51360*t51356*6.0;
                double t51417 = t51401*t51359*t51368;
                double t51418 = t51414+t51415+t51416+t51417+1.0;
                double t51419 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t51420 = 1.0/(t51406*t51406);
                double t51421 = 1.0/(t51413*t51413);
                double t51422 = 1.0/(t51418*t51418);
                double t51423 = gamma_aa[index]*gcab*t51419*(8.0/3.0);
                double t51424 = t51400*t51402*t51356*(8.0/3.0);
                double t51425 = t51423+t51424;
                double t51426 = gcab*t51355;
                double t51427 = gamma_aa[index]*t51400*t51360;
                double t51428 = t51426+t51427;
                double t51429 = gcab*t51355*(3.0/2.0);
                double t51430 = gamma_aa[index]*t51400*t51360*3.0;
                double t51431 = gcab*t51400*t51361*t51356*(3.0/2.0);
                double t51432 = t51430+t51431+t51429;
                double t51433 = gamma_aa[index]*gcab*t51419*4.0;
                double t51434 = gamma_aa[index]*gcab*t51400*t51407*t51356*4.0;
                double t51435 = t51400*t51402*t51356*8.0;
                double t51436 = t51433+t51434+t51435;
                double t51437 = gamma_aa[index]*gcab*t51419*(1.6E1/3.0);
                double t51438 = gamma_aa[index]*gcab*t51400*t51407*t51356*1.6E1;
                double t51439 = t51400*t51402*t51356*1.6E1;
                double t51440 = t51401*t51403*t51368*(1.6E1/3.0);
                double t51441 = t51440+t51437+t51438+t51439;
                double t51442 = gcab*t51355*2.0;
                double t51443 = gamma_aa[index]*t51400*t51360*6.0;
                double t51444 = gcab*t51400*t51361*t51356*6.0;
                double t51445 = gamma_aa[index]*t51401*t51356*t51359*2.0;
                double t51446 = t51442+t51443+t51444+t51445;
                double t51447 = t51395-t51396;
                double t51448 = t51382*t51447*t51379;
                double t51449 = t51448+t51396;
                double t51450 = rho_a[index]*t51449*2.0;
                double t51451 = sqrt(t51399);
                double t51452 = b1p*t51451;
                double t51453 = pow(t51399,3.0/2.0);
                double t51454 = b3p*t51453;
                double t51455 = b2p*c*t51398;
                double t51456 = 1.0/pow(t51397,2.0/3.0);
                double t51457 = b4p*t51341*t51456;
                double t51458 = t51452+t51454+t51455+t51457;
                double t51459 = 1.0/t51458;
                double t51460 = t51343*t51459*(1.0/2.0);
                double t51461 = t51460+1.0;
                double t51462 = log(t51461);
                double t51463 = a1p*c*t51398;
                double t51464 = t51463+1.0;
                double t51465 = t51450-c0p*rho_a[index]*t51462*t51464*4.0;
                double t51466 = 1.0/t51418;
                double t51467 = 1.0/t51406;
                double t51468 = 1.0/t51413;
                double t51469 = 1.0/(t51409*t51409);
                double t51470 = 1.0/(t51409*t51409*t51409);
                double t51471 = ccab3*gcab*t51400*t51421*t51361*t51436*t51356*(3.0/2.0);
                double t51472 = ccab2*gamma_aa[index]*t51400*t51420*t51360*t51425;
                double t51473 = ccab3*gamma_aa[index]*gcab*t51400*t51421*t51432*t51407*t51356*4.0;
                double t51474 = ccab4*gamma_aa[index]*t51401*t51422*t51441*t51356*t51359*2.0;
                double t51475 = ccab4*t51401*t51403*t51422*t51446*t51368*(1.6E1/3.0);
                double t51476 = ccab2*t51400*t51402*t51420*t51356*t51428*(8.0/3.0);
                double t51477 = gamma_aa[index]*t51400*t51402*4.0;
                double t51478 = 1.0/(t51406*t51406*t51406);
                double t51479 = 1.0/(t51413*t51413*t51413);
                double t51480 = 1.0/(t51418*t51418*t51418);
                double t51481 = 1.0/pow(t51397,4.0/3.0);
                double t51482 = 1.0/pow(rho_a[index],4.0/3.0);
                double t51483 = 1.0/pow(rho_a[index],5.0/3.0);
                double t51484 = 1.0/sqrt(t51338);
                double t51485 = 1.0/t51351;
                double t51486 = 1.0/(t51348*t51348);
                double t51487 = b4p*t51341*t51483*(2.0/3.0);
                double t51488 = b2p*c*t51482*(1.0/3.0);
                double t51489 = b1p*c*t51482*t51484*(1.0/6.0);
                double t51490 = b3p*c*t51482*t51339*(1.0/2.0);
                double t51491 = t51490+t51487+t51488+t51489;
                double t51492 = t51354*t51491*t51485*t51486;
                double t51493 = 1.0/t51409;
                double t51494 = gx*gx;
                double t51495 = t51494*t51494;
                double t51496 = gamma_aa[index]*gx*t51355;
                double t51497 = t51496+1.0;
                double t51498 = gamma_aa[index]*gx*t51355*3.0;
                double t51499 = gamma_aa[index]*gx*t51361*t51356*t51494;
                double t51500 = t51360*t51356*t51494*3.0;
                double t51501 = t51500+t51498+t51499+1.0;
                double t51502 = gamma_aa[index]*gx*t51355*4.0;
                double t51503 = gamma_aa[index]*gx*t51361*t51356*t51494*4.0;
                double t51504 = t51360*t51356*t51494*6.0;
                double t51505 = t51359*t51368*t51495;
                double t51506 = t51502+t51503+t51504+t51505+1.0;
                double t51507 = gamma_aa[index]*gx*t51355*2.0;
                double t51508 = t51360*t51356*t51494;
                double t51509 = t51507+t51508+1.0;
                double t51510 = 1.0/t51363;
                double t51511 = 1.0/t51373;
                double t51512 = 1.0/t51376;
                double t51513 = 1.0/t51367;
                double t51514 = 1.0/(t51363*t51363);
                double t51515 = 1.0/(t51367*t51367);
                double t51516 = 1.0/(t51376*t51376);
                double t51517 = gcaa*t51355*3.0;
                double t51518 = gamma_aa[index]*t51360*t51357*6.0;
                double t51519 = gcaa*t51361*t51356*t51357*3.0;
                double t51520 = t51517+t51518+t51519;
                double t51521 = 1.0/(t51373*t51373);
                double t51522 = gcaa*t51355*4.0;
                double t51523 = gamma_aa[index]*t51360*t51357*1.2E1;
                double t51524 = gcaa*t51361*t51356*t51357*1.2E1;
                double t51525 = gamma_aa[index]*t51356*t51358*t51359*4.0;
                double t51526 = t51522+t51523+t51524+t51525;
                double t51527 = gcaa*t51355*2.0;
                double t51528 = gamma_aa[index]*t51360*t51357*2.0;
                double t51529 = t51527+t51528;
                double t51530 = gamma_aa[index]*gcaa*t51419*(1.6E1/3.0);
                double t51531 = t51402*t51356*t51357*(1.6E1/3.0);
                double t51532 = t51530+t51531;
                double t51533 = gamma_aa[index]*gcaa*t51419*8.0;
                double t51534 = gamma_aa[index]*gcaa*t51407*t51356*t51357*8.0;
                double t51535 = t51402*t51356*t51357*1.6E1;
                double t51536 = t51533+t51534+t51535;
                double t51537 = gamma_aa[index]*gcaa*t51419*(3.2E1/3.0);
                double t51538 = gamma_aa[index]*gcaa*t51407*t51356*t51357*3.2E1;
                double t51539 = t51402*t51356*t51357*3.2E1;
                double t51540 = t51403*t51358*t51368*(3.2E1/3.0);
                double t51541 = t51540+t51537+t51538+t51539;
                double t51542 = 1.0/t51391;
                double t51543 = 1.0/(t51388*t51388);
                double t51544 = b4f*t51341*t51483*(2.0/3.0);
                double t51545 = b2f*c*t51482*(1.0/3.0);
                double t51546 = b1f*c*t51482*t51484*(1.0/6.0);
                double t51547 = b3f*c*t51482*t51339*(1.0/2.0);
                double t51548 = t51544+t51545+t51546+t51547;
                double t51549 = a1f*c*c0f*t51392*t51482*(2.0/3.0);
                double t51550 = a1p*c*c0p*t51352*t51482*(2.0/3.0);
                double t51551 = ccaa1*gcaa*t51510*t51355;
                double t51552 = ccaa4*gamma_aa[index]*t51511*t51356*t51358*t51359*4.0;
                double t51553 = ccaa2*gamma_aa[index]*t51512*t51360*t51357*2.0;
                double t51554 = ccaa3*gcaa*t51513*t51361*t51356*t51357*3.0;
                double t51555 = t51551+t51552+t51553+t51554-ccaa1*gamma_aa[index]*t51360*t51514*t51357-ccaa2*t51360* \
                   t51516*t51356*t51357*t51529-ccaa4*t51521*t51526*t51358*t51359*t51368-ccaa3*gamma_aa[index]*gcaa*t51520* \
                   t51361*t51515*t51356*t51357;
                double t51556 = 1.0/t51497;
                double t51557 = 1.0/t51506;
                double t51558 = 1.0/t51509;
                double t51559 = 1.0/t51501;
                double t51560 = 1.0/(t51497*t51497);
                double t51561 = 1.0/(t51501*t51501);
                double t51562 = 1.0/(t51509*t51509);
                double t51563 = gx*t51355*3.0;
                double t51564 = gamma_aa[index]*t51360*t51494*6.0;
                double t51565 = gx*t51361*t51356*t51494*3.0;
                double t51566 = t51563+t51564+t51565;
                double t51567 = 1.0/(t51506*t51506);
                double t51568 = gx*t51355*4.0;
                double t51569 = gamma_aa[index]*t51360*t51494*1.2E1;
                double t51570 = gx*t51361*t51356*t51494*1.2E1;
                double t51571 = gamma_aa[index]*t51356*t51359*t51495*4.0;
                double t51572 = t51570+t51571+t51568+t51569;
                double t51573 = gx*t51355*2.0;
                double t51574 = gamma_aa[index]*t51360*t51494*2.0;
                double t51575 = t51573+t51574;
                double t51576 = gamma_aa[index]*gx*t51419*(1.6E1/3.0);
                double t51577 = t51402*t51356*t51494*(1.6E1/3.0);
                double t51578 = t51576+t51577;
                double t51579 = gamma_aa[index]*gx*t51419*8.0;
                double t51580 = gamma_aa[index]*gx*t51407*t51356*t51494*8.0;
                double t51581 = t51402*t51356*t51494*1.6E1;
                double t51582 = t51580+t51581+t51579;
                double t51583 = gamma_aa[index]*gx*t51419*(3.2E1/3.0);
                double t51584 = gamma_aa[index]*gx*t51407*t51356*t51494*3.2E1;
                double t51585 = t51402*t51356*t51494*3.2E1;
                double t51586 = t51403*t51368*t51495*(3.2E1/3.0);
                double t51587 = t51583+t51584+t51585+t51586;
                v_rho_a_gamma_aa_[index] = t51465*(t51471+t51472+t51473+t51474+t51475+t51476-ccab2*gamma_aa[index]* \
                   t51400*t51402*t51467*(4.0/3.0)+ccab1*gamma_aa[index]*t51400*t51402*t51469*(4.0/3.0)+ccab4*t51401*t51422* \
                   t51359*t51368*(gamma_aa[index]*t51400*t51402*8.0+gamma_aa[index]*t51401*t51403*t51356*8.0+gcab*t51400* \
                   t51407*t51356*1.6E1)+ccab2*gamma_aa[index]*t51401*t51420*t51403*t51356*(4.0/3.0)-ccab4*gamma_aa[index]* \
                   t51401*t51403*t51356*t51466*8.0-ccab1*gcab*t51400*t51407*t51470*t51356*(4.0/3.0)-ccab3*gcab*t51400* \
                   t51407*t51356*t51468*4.0-ccab2*t51400*t51360*t51425*t51356*t51428*t51478*2.0-ccab4*t51401*t51441*t51480* \
                   t51446*t51359*t51368*2.0+ccab3*gamma_aa[index]*gcab*t51400*t51421*t51361*t51356*(t51477+gcab*t51400* \
                   t51407*t51356*4.0)-ccab3*gamma_aa[index]*gcab*t51400*t51432*t51361*t51436*t51356*t51479*2.0)-t51555* \
                   (t51396+t51382*t51379*(t51395-c0p*t51352*t51354*2.0))-(-t51448-t51396+rho_a[index]*((t51464*1.0/(t51458* \
                   t51458)*(b4p*t51341*1.0/pow(t51397,5.0/3.0)*(2.0/3.0)+b2p*c*t51481*(1.0/3.0)+b3p*c*t51451*t51481*(1.0/ \
                   2.0)+b1p*c*t51481*1.0/sqrt(t51399)*(1.0/6.0)))/t51461-a1p*c*c0p*t51462*t51481*(2.0/3.0))*2.0+rho_a[index]* \
                   (t51550-t51492+t51382*t51379*(t51492+t51549-t51542*t51543*t51394*t51548-a1p*c*c0p*t51352*t51482*(2.0/ \
                   3.0)))+c0p*t51462*t51464*2.0)*(ccab1*gcab*t51355*t51493*(1.0/2.0)+ccab2*gamma_aa[index]*t51400*t51360* \
                   t51467-ccab1*gamma_aa[index]*t51400*t51360*t51469*(1.0/2.0)-ccab2*t51400*t51420*t51360*t51356*t51428- \
                   ccab4*t51401*t51422*t51446*t51359*t51368+ccab4*gamma_aa[index]*t51401*t51356*t51466*t51359*2.0+ccab3* \
                   gcab*t51400*t51361*t51356*t51468*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t51400*t51421*t51432*t51361* \
                   t51356)*2.0+t51465*(t51471+t51472+t51473+t51474+t51475+t51476-ccab1*gcab*t51419*t51493*(4.0/3.0)-ccab2* \
                   gamma_aa[index]*t51400*t51402*t51467*4.0+ccab1*gamma_aa[index]*t51400*t51402*t51469*(8.0/3.0)+ccab4* \
                   t51401*t51422*t51359*t51368*(gcab*t51419*(1.6E1/3.0)+gamma_aa[index]*t51400*t51402*2.4E1+gamma_aa[index]* \
                   t51401*t51403*t51356*(4.0E1/3.0)+gcab*t51400*t51407*t51356*3.2E1)+ccab2*t51400*t51420*t51360*t51356* \
                   (t51477+gcab*t51419*(8.0/3.0))-ccab4*gamma_aa[index]*t51401*t51403*t51356*t51466*(4.0E1/3.0)-ccab1* \
                   gcab*t51400*t51407*t51470*t51356*(4.0/3.0)-ccab3*gcab*t51400*t51407*t51356*t51468*8.0-ccab2*t51400* \
                   t51360*t51425*t51356*t51428*t51478*2.0-ccab4*t51401*t51441*t51480*t51446*t51359*t51368*2.0+ccab3*gamma_aa[index]* \
                   gcab*t51400*t51421*t51361*t51356*(gcab*t51419*4.0+gamma_aa[index]*t51400*t51402*1.2E1+gcab*t51400* \
                   t51407*t51356*8.0)-ccab3*gamma_aa[index]*gcab*t51400*t51432*t51361*t51436*t51356*t51479*2.0)-rho_a[index]* \
                   t51449*(ccaa1*gcaa*t51510*t51419*(-8.0/3.0)-ccaa2*gamma_aa[index]*t51402*t51512*t51357*(3.2E1/3.0) \
                   +ccaa1*gamma_aa[index]*t51402*t51514*t51357*8.0+ccaa2*t51402*t51516*t51356*t51357*t51529*(1.6E1/3.0) \
                   +ccaa4*t51403*t51521*t51526*t51358*t51368*(3.2E1/3.0)+ccaa4*t51521*t51358*t51359*t51368*(gcaa*t51419* \
                   (3.2E1/3.0)+gamma_aa[index]*t51402*t51357*6.4E1+gamma_aa[index]*t51403*t51356*t51358*(1.28E2/3.0)+ \
                   gcaa*t51407*t51356*t51357*9.6E1)-ccaa1*gcaa*t51407*1.0/(t51363*t51363*t51363)*t51356*t51357*(1.6E1/ \
                   3.0)+ccaa2*t51360*t51516*t51356*t51357*(gcaa*t51419*(1.6E1/3.0)+gamma_aa[index]*t51402*t51357*(3.2E1/ \
                   3.0))+ccaa2*gamma_aa[index]*t51360*t51532*t51516*t51357*2.0-ccaa4*gamma_aa[index]*t51403*t51511*t51356* \
                   t51358*(1.28E2/3.0)-ccaa3*gcaa*t51513*t51407*t51356*t51357*2.4E1+ccaa4*gamma_aa[index]*t51521*t51541* \
                   t51356*t51358*t51359*4.0+ccaa3*gcaa*t51361*t51515*t51356*t51536*t51357*3.0-ccaa2*t51360*t51532*t51356* \
                   t51357*1.0/(t51376*t51376*t51376)*t51529*2.0-ccaa4*t51541*1.0/(t51373*t51373*t51373)*t51526*t51358* \
                   t51359*t51368*2.0+ccaa3*gamma_aa[index]*gcaa*t51361*t51515*t51356*t51357*(gcaa*t51419*8.0+gamma_aa[index]* \
                   t51402*t51357*3.2E1+gcaa*t51407*t51356*t51357*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t51520*t51407*t51515* \
                   t51356*t51357*8.0-ccaa3*gamma_aa[index]*gcaa*t51520*t51361*t51356*t51536*t51357*1.0/(t51367*t51367* \
                   t51367)*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t51419*t51556*(-8.0/3.0)+cx1*gamma_aa[index]*t51402* \
                   t51560*t51494*8.0-cx2*gamma_aa[index]*t51402*t51494*t51558*(3.2E1/3.0)+cx2*t51402*t51562*t51356*t51494* \
                   t51575*(1.6E1/3.0)+cx4*t51403*t51572*t51368*t51495*t51567*(3.2E1/3.0)+cx4*t51359*t51368*t51495*t51567* \
                   (gx*t51419*(3.2E1/3.0)+gamma_aa[index]*t51402*t51494*6.4E1+gamma_aa[index]*t51403*t51356*t51495*(1.28E2/ \
                   3.0)+gx*t51407*t51356*t51494*9.6E1)-cx1*gx*t51407*t51356*t51494*1.0/(t51497*t51497*t51497)*(1.6E1/ \
                   3.0)+cx2*t51360*t51562*t51356*t51494*(gx*t51419*(1.6E1/3.0)+gamma_aa[index]*t51402*t51494*(3.2E1/3.0) \
                   )+cx2*gamma_aa[index]*t51360*t51562*t51494*t51578*2.0-cx4*gamma_aa[index]*t51403*t51356*t51557*t51495* \
                   (1.28E2/3.0)-cx3*gx*t51407*t51356*t51494*t51559*2.4E1+cx4*gamma_aa[index]*t51356*t51359*t51495*t51567* \
                   t51587*4.0+cx3*gx*t51361*t51561*t51356*t51582*t51494*3.0-cx2*t51360*t51356*1.0/(t51509*t51509*t51509) \
                   *t51494*t51575*t51578*2.0-cx4*1.0/(t51506*t51506*t51506)*t51572*t51359*t51368*t51495*t51587*2.0+cx3* \
                   gamma_aa[index]*gx*t51361*t51561*t51356*t51494*(gx*t51419*8.0+gamma_aa[index]*t51402*t51494*3.2E1+ \
                   gx*t51407*t51356*t51494*2.4E1)+cx3*gamma_aa[index]*gx*t51407*t51561*t51356*t51494*t51566*8.0-cx3*gamma_aa[index]* \
                   gx*1.0/(t51501*t51501*t51501)*t51361*t51356*t51582*t51494*t51566*2.0)-rho_a[index]*t51555*(-t51550+ \
                   t51492+t51382*t51379*(t51550-t51492-t51549+t51542*t51543*t51394*t51548))+c0*pow(rho_a[index],1.0/3.0) \
                   *(cx1*gx*t51355*t51556-cx1*gamma_aa[index]*t51360*t51560*t51494+cx2*gamma_aa[index]*t51360*t51494* \
                   t51558*2.0-cx2*t51360*t51562*t51356*t51494*t51575-cx4*t51572*t51359*t51368*t51495*t51567+cx4*gamma_aa[index]* \
                   t51356*t51359*t51557*t51495*4.0+cx3*gx*t51361*t51356*t51494*t51559*3.0-cx3*gamma_aa[index]*gx*t51361* \
                   t51561*t51356*t51494*t51566)*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t51589 = 1.0/pow(rho_a[index],1.0/3.0);
                double t51590 = c*t51589;
                double t51591 = sqrt(t51590);
                double t51592 = pow(t51590,3.0/2.0);
                double t51593 = c*c;
                double t51594 = 1.0/pow(rho_a[index],2.0/3.0);
                double t51595 = 1.0/c0p;
                double t51596 = b1p*t51591;
                double t51597 = b3p*t51592;
                double t51598 = b4p*t51593*t51594;
                double t51599 = b2p*c*t51589;
                double t51600 = t51596+t51597+t51598+t51599;
                double t51601 = 1.0/t51600;
                double t51602 = t51601*t51595*(1.0/2.0);
                double t51603 = t51602+1.0;
                double t51604 = log(t51603);
                double t51605 = a1p*c*t51589;
                double t51606 = t51605+1.0;
                double t51607 = rho_a[index]*2.0;
                double t51608 = 1.0/pow(t51607,1.0/3.0);
                double t51609 = c*t51608;
                double t51610 = gcab*gcab;
                double t51611 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t51612 = 1.0/pow(rho_a[index],8.0/3.0);
                double t51613 = gamma_aa[index]*gamma_aa[index];
                double t51614 = t51610*t51610;
                double t51615 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t51616 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t51617 = gamma_aa[index]*gcab*t51612;
                double t51618 = t51617+1.0;
                double t51619 = gamma_aa[index]*gcab*t51612*2.0;
                double t51620 = t51610*t51611*t51613;
                double t51621 = t51620+t51619+1.0;
                double t51622 = gamma_aa[index]*gcab*t51612*3.0;
                double t51623 = gamma_aa[index]*gcab*t51610*t51613*t51616;
                double t51624 = t51610*t51611*t51613*3.0;
                double t51625 = t51622+t51623+t51624+1.0;
                double t51626 = t51613*t51613;
                double t51642 = gcab*t51612*2.0;
                double t51643 = gamma_aa[index]*t51610*t51611*6.0;
                double t51644 = gcab*t51610*t51613*t51616*6.0;
                double t51645 = gamma_aa[index]*t51613*t51614*t51615*2.0;
                double t51627 = t51642+t51643+t51644+t51645;
                double t51628 = gamma_aa[index]*gcab*t51612*4.0;
                double t51629 = gamma_aa[index]*gcab*t51610*t51613*t51616*4.0;
                double t51630 = t51610*t51611*t51613*6.0;
                double t51631 = t51614*t51615*t51626;
                double t51632 = t51630+t51631+t51628+t51629+1.0;
                double t51635 = gcab*t51612;
                double t51636 = gamma_aa[index]*t51610*t51611;
                double t51633 = t51635+t51636;
                double t51634 = 1.0/(t51625*t51625);
                double t51637 = 1.0/(t51621*t51621);
                double t51638 = gcab*t51612*(3.0/2.0);
                double t51639 = gamma_aa[index]*t51610*t51611*3.0;
                double t51640 = gcab*t51610*t51613*t51616*(3.0/2.0);
                double t51641 = t51640+t51638+t51639;
                double t51646 = 1.0/(t51632*t51632);
                double t51647 = gx*gx;
                double t51648 = t51647*t51647;
                double t51649 = gamma_aa[index]*gx*t51612;
                double t51650 = t51649+1.0;
                double t51651 = gamma_aa[index]*gx*t51612*2.0;
                double t51652 = t51611*t51613*t51647;
                double t51653 = t51651+t51652+1.0;
                double t51654 = gamma_aa[index]*gx*t51612*3.0;
                double t51655 = gamma_aa[index]*gx*t51613*t51616*t51647;
                double t51656 = t51611*t51613*t51647*3.0;
                double t51657 = t51654+t51655+t51656+1.0;
                double t51673 = gx*t51612*4.0;
                double t51674 = gamma_aa[index]*t51611*t51647*1.2E1;
                double t51675 = gx*t51613*t51616*t51647*1.2E1;
                double t51676 = gamma_aa[index]*t51613*t51615*t51648*4.0;
                double t51658 = t51673+t51674+t51675+t51676;
                double t51659 = gamma_aa[index]*gx*t51612*4.0;
                double t51660 = gamma_aa[index]*gx*t51613*t51616*t51647*4.0;
                double t51661 = t51611*t51613*t51647*6.0;
                double t51662 = t51615*t51626*t51648;
                double t51663 = t51660+t51661+t51662+t51659+1.0;
                double t51666 = gx*t51612*2.0;
                double t51667 = gamma_aa[index]*t51611*t51647*2.0;
                double t51664 = t51666+t51667;
                double t51665 = 1.0/(t51657*t51657);
                double t51668 = 1.0/(t51653*t51653);
                double t51669 = gx*t51612*3.0;
                double t51670 = gamma_aa[index]*t51611*t51647*6.0;
                double t51671 = gx*t51613*t51616*t51647*3.0;
                double t51672 = t51670+t51671+t51669;
                double t51677 = 1.0/(t51663*t51663);
                double t51678 = pow(2.0,1.0/3.0);
                double t51679 = t51678*2.0;
                double t51680 = t51679-2.0;
                double t51681 = two_13*2.0;
                double t51682 = t51681-2.0;
                double t51683 = 1.0/t51682;
                double t51684 = 1.0/c0f;
                double t51685 = b1f*t51591;
                double t51686 = b3f*t51592;
                double t51687 = b4f*t51593*t51594;
                double t51688 = b2f*c*t51589;
                double t51689 = t51685+t51686+t51687+t51688;
                double t51690 = 1.0/t51689;
                double t51691 = t51690*t51684*(1.0/2.0);
                double t51692 = t51691+1.0;
                double t51693 = log(t51692);
                double t51694 = a1f*c*t51589;
                double t51695 = t51694+1.0;
                double t51696 = c0f*t51693*t51695*2.0;
                double t51697 = c0p*t51604*t51606*2.0;
                double t51698 = gcaa*gcaa;
                double t51699 = t51698*t51698;
                double t51700 = gamma_aa[index]*gcaa*t51612;
                double t51701 = t51700+1.0;
                double t51702 = gamma_aa[index]*gcaa*t51612*2.0;
                double t51703 = t51611*t51613*t51698;
                double t51704 = t51702+t51703+1.0;
                double t51705 = gamma_aa[index]*gcaa*t51612*3.0;
                double t51706 = gamma_aa[index]*gcaa*t51613*t51616*t51698;
                double t51707 = t51611*t51613*t51698*3.0;
                double t51708 = t51705+t51706+t51707+1.0;
                double t51724 = gcaa*t51612*4.0;
                double t51725 = gamma_aa[index]*t51611*t51698*1.2E1;
                double t51726 = gcaa*t51613*t51616*t51698*1.2E1;
                double t51727 = gamma_aa[index]*t51613*t51615*t51699*4.0;
                double t51709 = t51724+t51725+t51726+t51727;
                double t51710 = gamma_aa[index]*gcaa*t51612*4.0;
                double t51711 = gamma_aa[index]*gcaa*t51613*t51616*t51698*4.0;
                double t51712 = t51611*t51613*t51698*6.0;
                double t51713 = t51615*t51626*t51699;
                double t51714 = t51710+t51711+t51712+t51713+1.0;
                double t51717 = gcaa*t51612*2.0;
                double t51718 = gamma_aa[index]*t51611*t51698*2.0;
                double t51715 = t51717+t51718;
                double t51716 = 1.0/(t51708*t51708);
                double t51719 = 1.0/(t51704*t51704);
                double t51720 = gcaa*t51612*3.0;
                double t51721 = gamma_aa[index]*t51611*t51698*6.0;
                double t51722 = gcaa*t51613*t51616*t51698*3.0;
                double t51723 = t51720+t51721+t51722;
                double t51728 = 1.0/(t51714*t51714);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t51697+t51680*t51683*(t51696-c0p*t51604*t51606*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t51595*(1.0/2.0))/(b1p*sqrt(t51609)+b3p*pow(t51609,3.0/2.0)+b4p*1.0/pow(t51607,2.0/ \
                   3.0)*t51593+b2p*c*t51608)+1.0)*(a1p*c*t51608+1.0)*4.0)*((ccab2*t51610*t51611*(1.0/2.0))/t51621-ccab1* \
                   t51610*t51611*1.0/(t51618*t51618)*(1.0/2.0)-ccab2*t51613*t51614*t51615*t51637*(1.0/2.0)+(ccab4*t51613* \
                   t51614*t51615*3.0)/t51632-ccab4*t51614*t51615*t51626*t51646*(t51610*t51611*3.0+t51613*t51614*t51615* \
                   3.0+gamma_aa[index]*gcab*t51610*t51616*6.0)+(ccab3*gamma_aa[index]*gcab*t51610*t51616*(3.0/2.0))/t51625+ \
                   ccab1*gamma_aa[index]*gcab*t51610*t51616*1.0/(t51618*t51618*t51618)*(1.0/2.0)+ccab2*t51610*t51611* \
                   1.0/(t51621*t51621*t51621)*t51613*(t51633*t51633)*2.0+ccab4*t51614*1.0/(t51632*t51632*t51632)*t51615* \
                   t51626*(t51627*t51627)*2.0-ccab2*gamma_aa[index]*t51610*t51611*t51633*t51637*2.0-ccab4*gamma_aa[index]* \
                   t51613*t51614*t51615*t51627*t51646*4.0-ccab3*gcab*t51610*t51613*t51641*t51616*t51634*3.0-ccab3*gamma_aa[index]* \
                   gcab*t51610*t51613*t51616*t51634*(t51610*t51611*(3.0/2.0)+gamma_aa[index]*gcab*t51610*t51616*(3.0/ \
                   2.0))+ccab3*gamma_aa[index]*gcab*t51610*t51613*(t51641*t51641)*t51616*1.0/(t51625*t51625*t51625)*2.0) \
                   *4.0+rho_a[index]*(t51697+t51680*t51683*(t51696-t51697))*(ccaa1*t51611*1.0/(t51701*t51701)*t51698* \
                   2.0-(ccaa2*t51611*t51698*2.0)/t51704+ccaa2*t51613*t51615*t51719*t51699*2.0-(ccaa4*t51613*t51615*t51699* \
                   1.2E1)/t51714+ccaa4*t51615*t51626*t51728*t51699*(t51611*t51698*1.2E1+t51613*t51615*t51699*1.2E1+gamma_aa[index]* \
                   gcaa*t51616*t51698*2.4E1)-ccaa1*gamma_aa[index]*gcaa*1.0/(t51701*t51701*t51701)*t51616*t51698*2.0- \
                   (ccaa3*gamma_aa[index]*gcaa*t51616*t51698*6.0)/t51708-ccaa2*t51611*t51613*1.0/(t51704*t51704*t51704) \
                   *(t51715*t51715)*t51698*2.0-ccaa4*t51615*1.0/(t51714*t51714*t51714)*t51626*(t51709*t51709)*t51699* \
                   2.0+ccaa2*gamma_aa[index]*t51611*t51715*t51719*t51698*4.0+ccaa4*gamma_aa[index]*t51613*t51615*t51709* \
                   t51728*t51699*8.0+ccaa3*gcaa*t51613*t51723*t51616*t51716*t51698*6.0+ccaa3*gamma_aa[index]*gcaa*t51613* \
                   t51616*t51716*t51698*(t51611*t51698*6.0+gamma_aa[index]*gcaa*t51616*t51698*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*t51613*(t51723*t51723)*t51616*1.0/(t51708*t51708*t51708)*t51698*2.0)*2.0-c0*pow(rho_a[index],4.0/ \
                   3.0)*(cx1*t51611*1.0/(t51650*t51650)*t51647*2.0-(cx2*t51611*t51647*2.0)/t51653+cx2*t51613*t51615*t51648* \
                   t51668*2.0-(cx4*t51613*t51615*t51648*1.2E1)/t51663+cx4*t51615*t51626*t51648*t51677*(t51611*t51647* \
                   1.2E1+t51613*t51615*t51648*1.2E1+gamma_aa[index]*gx*t51616*t51647*2.4E1)-cx1*gamma_aa[index]*gx*1.0/ \
                   (t51650*t51650*t51650)*t51616*t51647*2.0-(cx3*gamma_aa[index]*gx*t51616*t51647*6.0)/t51657-cx2*t51611* \
                   t51613*1.0/(t51653*t51653*t51653)*(t51664*t51664)*t51647*2.0-cx4*t51615*t51626*1.0/(t51663*t51663* \
                   t51663)*t51648*(t51658*t51658)*2.0+cx2*gamma_aa[index]*t51611*t51664*t51647*t51668*4.0+cx4*gamma_aa[index]* \
                   t51613*t51615*t51648*t51658*t51677*8.0+cx3*gx*t51613*t51616*t51672*t51647*t51665*6.0+cx3*gamma_aa[index]* \
                   gx*t51613*t51616*t51647*t51665*(t51611*t51647*6.0+gamma_aa[index]*gx*t51616*t51647*6.0)-cx3*gamma_aa[index]* \
                   gx*t51613*t51616*(t51672*t51672)*t51647*1.0/(t51657*t51657*t51657)*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void HCTH_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* rho_b;
    const double* gamma_aa;
    const double* gamma_ab;
    const double* gamma_bb;
    const double* tau_a;
    const double* tau_b;

    rho_a = prop->getDensityA();
    rho_b = prop->getDensityB();
    if (is_gga_) {
        gamma_aa = prop->getDensityGradientSquaredAA();
        gamma_ab = prop->getDensityGradientSquaredAB();
        gamma_bb = prop->getDensityGradientSquaredBB();
    }
    if (is_meta_) {
        tau_a = prop->getKEDensityA();
        tau_b = prop->getKEDensityB();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t45904 = 1.0/pow(rho_a[index],1.0/3.0);
            double t45905 = c*t45904;
            double t45906 = sqrt(t45905);
            double t45907 = pow(t45905,3.0/2.0);
            double t45908 = c*c;
            double t45909 = 1.0/pow(rho_a[index],2.0/3.0);
            double t45910 = 1.0/c0p;
            double t45911 = b1p*t45906;
            double t45912 = b3p*t45907;
            double t45913 = b4p*t45908*t45909;
            double t45914 = b2p*c*t45904;
            double t45915 = t45911+t45912+t45913+t45914;
            double t45916 = 1.0/t45915;
            double t45917 = t45910*t45916*(1.0/2.0);
            double t45918 = t45917+1.0;
            double t45919 = log(t45918);
            double t45920 = a1p*c*t45904;
            double t45921 = t45920+1.0;
            double t45922 = pow(2.0,1.0/3.0);
            double t45923 = t45922*2.0;
            double t45924 = t45923-2.0;
            double t45925 = two_13*2.0;
            double t45926 = t45925-2.0;
            double t45927 = 1.0/t45926;
            double t45928 = 1.0/c0f;
            double t45929 = 1.0/pow(rho_b[index],1.0/3.0);
            double t45930 = c*t45929;
            double t45931 = sqrt(t45930);
            double t45932 = pow(t45930,3.0/2.0);
            double t45933 = 1.0/pow(rho_b[index],2.0/3.0);
            double t45934 = b1p*t45931;
            double t45935 = b3p*t45932;
            double t45936 = b4p*t45933*t45908;
            double t45937 = b2p*c*t45929;
            double t45938 = t45934+t45935+t45936+t45937;
            double t45939 = 1.0/t45938;
            double t45940 = t45910*t45939*(1.0/2.0);
            double t45941 = t45940+1.0;
            double t45942 = log(t45941);
            double t45943 = a1p*c*t45929;
            double t45944 = t45943+1.0;
            double t45945 = c0p*t45942*t45944*2.0;
            double t45946 = rho_a[index]+rho_b[index];
            double t45947 = 1.0/pow(t45946,1.0/3.0);
            double t45948 = c*t45947;
            double t45949 = sqrt(t45948);
            double t45950 = pow(t45948,3.0/2.0);
            double t45951 = 1.0/pow(t45946,2.0/3.0);
            double t45952 = b1p*t45949;
            double t45953 = b3p*t45950;
            double t45954 = b4p*t45951*t45908;
            double t45955 = b2p*c*t45947;
            double t45956 = t45952+t45953+t45954+t45955;
            double t45957 = 1.0/t45956;
            double t45958 = t45910*t45957*(1.0/2.0);
            double t45959 = t45958+1.0;
            double t45960 = log(t45959);
            double t45961 = a1p*c*t45947;
            double t45962 = t45961+1.0;
            double t45963 = c0p*t45960*t45962*2.0;
            double t45964 = rho_a[index]-rho_b[index];
            double t45965 = t45964*t45964;
            double t45966 = 1.0/t45946;
            double t45967 = t45964*t45966;
            double t45968 = 1.0/(t45946*t45946*t45946*t45946);
            double t45969 = t45965*t45965;
            double t45970 = t45967+1.0;
            double t45971 = pow(t45970,4.0/3.0);
            double t45972 = -t45967+1.0;
            double t45973 = pow(t45972,4.0/3.0);
            double t45974 = t45971+t45973-2.0;
            double t45977 = 1.0/pow(rho_a[index],8.0/3.0);
            double t45978 = gamma_aa[index]*t45977*(1.0/2.0);
            double t45979 = 1.0/pow(rho_b[index],8.0/3.0);
            double t45980 = gamma_bb[index]*t45979*(1.0/2.0);
            double t45975 = t45980+t45978;
            double t45976 = gcab*gcab;
            double t45981 = t45975*t45975;
            double t45982 = t45976*t45976;
            double t45983 = t45981*t45981;
            double t45984 = c0p*t45921*t45919*2.0;
            double t45985 = b1f*t45906;
            double t45986 = b3f*t45907;
            double t45987 = b4f*t45908*t45909;
            double t45988 = b2f*c*t45904;
            double t45989 = t45985+t45986+t45987+t45988;
            double t45990 = 1.0/t45989;
            double t45991 = t45990*t45928*(1.0/2.0);
            double t45992 = t45991+1.0;
            double t45993 = log(t45992);
            double t45994 = a1f*c*t45904;
            double t45995 = t45994+1.0;
            double t45996 = t45984-c0f*t45993*t45995*2.0;
            double t45997 = t45984-t45924*t45927*t45996;
            double t45998 = gamma_aa[index]*gamma_aa[index];
            double t45999 = gcaa*gcaa;
            double t46000 = t45998*t45998;
            double t46001 = t45999*t45999;
            double t46002 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t46003 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t46004 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t46005 = b1f*t45931;
            double t46006 = b3f*t45932;
            double t46007 = b4f*t45933*t45908;
            double t46008 = b2f*c*t45929;
            double t46009 = t46005+t46006+t46007+t46008;
            double t46010 = 1.0/t46009;
            double t46011 = t45928*t46010*(1.0/2.0);
            double t46012 = t46011+1.0;
            double t46013 = log(t46012);
            double t46014 = a1f*c*t45929;
            double t46015 = t46014+1.0;
            double t46016 = t45945-c0f*t46013*t46015*2.0;
            double t46017 = t45945-t45924*t45927*t46016;
            double t46018 = gamma_bb[index]*gamma_bb[index];
            double t46019 = t46018*t46018;
            double t46020 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t46021 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t46022 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t46023 = gx*gx;
            double t46024 = t46023*t46023;
            functional_[index] = (rho_a[index]*t45997+rho_b[index]*t46017-t45946*(t45963-t45927*t45974*t45968* \
               t45969*(t45963-c0f*log((t45928*(1.0/2.0))/(b1f*t45949+b3f*t45950+b2f*c*t45947+b4f*t45951*t45908)+1.0) \
               *(a1f*c*t45947+1.0)*2.0)+(Aa*t45927*t45974*log((1.0/2.0)/(Aa*(b1a*t45949+b3a*t45950+b2a*c*t45947+b4a* \
               t45951*t45908))+1.0)*(t45968*t45969-1.0)*(a1a*c*t45947+1.0)*2.0)/d2fz0))*(ccab0+(ccab4*t45982*t45983) \
               /(gcab*t45975*4.0+t45982*t45983+t45981*t45976*6.0+gcab*t45981*t45975*t45976*4.0+1.0)+(ccab1*gcab*t45975) \
               /(gcab*t45975+1.0)+(ccab2*t45981*t45976)/(gcab*t45975*2.0+t45981*t45976+1.0)+(ccab3*gcab*t45981*t45975* \
               t45976)/(gcab*t45975*3.0+t45981*t45976*3.0+gcab*t45981*t45975*t45976+1.0))+c0*pow(rho_a[index],4.0/ \
               3.0)*(cx0+(cx2*t45998*t46004*t46023)/(gamma_aa[index]*gx*t45977*2.0+t45998*t46004*t46023+1.0)+(cx1* \
               gamma_aa[index]*gx*t45977)/(gamma_aa[index]*gx*t45977+1.0)+(cx4*t46000*t46002*t46024)/(gamma_aa[index]* \
               gx*t45977*4.0+t45998*t46004*t46023*6.0+t46000*t46002*t46024+gamma_aa[index]*gx*t45998*t46003*t46023* \
               4.0+1.0)+(cx3*gamma_aa[index]*gx*t45998*t46003*t46023)/(gamma_aa[index]*gx*t45977*3.0+t45998*t46004* \
               t46023*3.0+gamma_aa[index]*gx*t45998*t46003*t46023+1.0))+c0*pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t46022* \
               t46023*t46018)/(gamma_bb[index]*gx*t45979*2.0+t46022*t46023*t46018+1.0)+(cx1*gamma_bb[index]*gx*t45979) \
               /(gamma_bb[index]*gx*t45979+1.0)+(cx4*t46020*t46024*t46019)/(gamma_bb[index]*gx*t45979*4.0+t46020* \
               t46024*t46019+t46022*t46023*t46018*6.0+gamma_bb[index]*gx*t46021*t46023*t46018*4.0+1.0)+(cx3*gamma_bb[index]* \
               gx*t46021*t46023*t46018)/(gamma_bb[index]*gx*t45979*3.0+t46022*t46023*t46018*3.0+gamma_bb[index]*gx* \
               t46021*t46023*t46018+1.0))-rho_a[index]*t45997*(ccaa0+(ccaa2*t45998*t45999*t46004)/(gamma_aa[index]* \
               gcaa*t45977*2.0+t45998*t45999*t46004+1.0)+(ccaa1*gamma_aa[index]*gcaa*t45977)/(gamma_aa[index]*gcaa* \
               t45977+1.0)+(ccaa4*t46000*t46001*t46002)/(gamma_aa[index]*gcaa*t45977*4.0+t45998*t45999*t46004*6.0+ \
               t46000*t46001*t46002+gamma_aa[index]*gcaa*t45998*t45999*t46003*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t45998*t45999*t46003)/(gamma_aa[index]*gcaa*t45977*3.0+t45998*t45999*t46004*3.0+gamma_aa[index]*gcaa* \
               t45998*t45999*t46003+1.0))-rho_b[index]*t46017*(ccaa0+(ccaa2*t45999*t46022*t46018)/(gamma_bb[index]* \
               gcaa*t45979*2.0+t45999*t46022*t46018+1.0)+(ccaa1*gamma_bb[index]*gcaa*t45979)/(gamma_bb[index]*gcaa* \
               t45979+1.0)+(ccaa4*t46001*t46020*t46019)/(gamma_bb[index]*gcaa*t45979*4.0+t45999*t46022*t46018*6.0+ \
               t46001*t46020*t46019+gamma_bb[index]*gcaa*t45999*t46021*t46018*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa* \
               t45999*t46021*t46018)/(gamma_bb[index]*gcaa*t45979*3.0+t45999*t46022*t46018*3.0+gamma_bb[index]*gcaa* \
               t45999*t46021*t46018+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t50053 = 1.0/pow(rho_a[index],1.0/3.0);
            double t50054 = c*t50053;
            double t50055 = sqrt(t50054);
            double t50056 = pow(t50054,3.0/2.0);
            double t50057 = c*c;
            double t50058 = 1.0/pow(rho_a[index],2.0/3.0);
            double t50059 = 1.0/c0p;
            double t50060 = b1p*t50055;
            double t50061 = b3p*t50056;
            double t50062 = b4p*t50057*t50058;
            double t50063 = b2p*c*t50053;
            double t50064 = t50060+t50061+t50062+t50063;
            double t50065 = 1.0/t50064;
            double t50066 = t50065*t50059*(1.0/2.0);
            double t50067 = t50066+1.0;
            double t50068 = log(t50067);
            double t50069 = a1p*c*t50053;
            double t50070 = t50069+1.0;
            double t50071 = gamma_aa[index]*gamma_aa[index];
            double t50072 = gcaa*gcaa;
            double t50073 = t50071*t50071;
            double t50074 = t50072*t50072;
            double t50075 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t50076 = 1.0/pow(rho_a[index],8.0/3.0);
            double t50077 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50078 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t50079 = gx*gx;
            double t50080 = t50079*t50079;
            functional_[index] = c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t50071*t50078*t50079)/(gamma_aa[index]* \
               gx*t50076*2.0+t50071*t50078*t50079+1.0)+(cx1*gamma_aa[index]*gx*t50076)/(gamma_aa[index]*gx*t50076+ \
               1.0)+(cx4*t50080*t50073*t50075)/(gamma_aa[index]*gx*t50076*4.0+t50080*t50073*t50075+t50071*t50078* \
               t50079*6.0+gamma_aa[index]*gx*t50071*t50077*t50079*4.0+1.0)+(cx3*gamma_aa[index]*gx*t50071*t50077* \
               t50079)/(gamma_aa[index]*gx*t50076*3.0+t50071*t50078*t50079*3.0+gamma_aa[index]*gx*t50071*t50077*t50079+ \
               1.0))-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t50055+b3f*t50056+b2f* \
               c*t50053+b4f*t50057*t50058))+1.0)*(a1f*c*t50053+1.0)*2.0-c0p*t50070*t50068*2.0))/(two_13*2.0-2.0)+ \
               c0p*t50070*t50068*2.0)*(ccaa0+(ccaa2*t50071*t50072*t50078)/(gamma_aa[index]*gcaa*t50076*2.0+t50071* \
               t50072*t50078+1.0)+(ccaa1*gamma_aa[index]*gcaa*t50076)/(gamma_aa[index]*gcaa*t50076+1.0)+(ccaa4*t50073* \
               t50074*t50075)/(gamma_aa[index]*gcaa*t50076*4.0+t50071*t50072*t50078*6.0+t50073*t50074*t50075+gamma_aa[index]* \
               gcaa*t50071*t50072*t50077*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t50071*t50072*t50077)/(gamma_aa[index]* \
               gcaa*t50076*3.0+t50071*t50072*t50078*3.0+gamma_aa[index]*gcaa*t50071*t50072*t50077+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t49414 = 1.0/pow(rho_b[index],1.0/3.0);
            double t49415 = c*t49414;
            double t49416 = sqrt(t49415);
            double t49417 = pow(t49415,3.0/2.0);
            double t49418 = c*c;
            double t49419 = 1.0/pow(rho_b[index],2.0/3.0);
            double t49420 = 1.0/c0p;
            double t49421 = b1p*t49416;
            double t49422 = b3p*t49417;
            double t49423 = b4p*t49418*t49419;
            double t49424 = b2p*c*t49414;
            double t49425 = t49421+t49422+t49423+t49424;
            double t49426 = 1.0/t49425;
            double t49427 = t49420*t49426*(1.0/2.0);
            double t49428 = t49427+1.0;
            double t49429 = log(t49428);
            double t49430 = a1p*c*t49414;
            double t49431 = t49430+1.0;
            double t49432 = gamma_bb[index]*gamma_bb[index];
            double t49433 = gcaa*gcaa;
            double t49434 = t49432*t49432;
            double t49435 = t49433*t49433;
            double t49436 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t49437 = 1.0/pow(rho_b[index],8.0/3.0);
            double t49438 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t49439 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t49440 = gx*gx;
            double t49441 = t49440*t49440;
            functional_[index] = c0*pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t49440*t49432*t49439)/(gamma_bb[index]* \
               gx*t49437*2.0+t49440*t49432*t49439+1.0)+(cx1*gamma_bb[index]*gx*t49437)/(gamma_bb[index]*gx*t49437+ \
               1.0)+(cx4*t49441*t49434*t49436)/(gamma_bb[index]*gx*t49437*4.0+t49440*t49432*t49439*6.0+t49441*t49434* \
               t49436+gamma_bb[index]*gx*t49440*t49432*t49438*4.0+1.0)+(cx3*gamma_bb[index]*gx*t49440*t49432*t49438) \
               /(gamma_bb[index]*gx*t49437*3.0+t49440*t49432*t49439*3.0+gamma_bb[index]*gx*t49440*t49432*t49438+1.0) \
               )-rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t49416+b3f*t49417+b2f*c*t49414+ \
               b4f*t49418*t49419))+1.0)*(a1f*c*t49414+1.0)*2.0-c0p*t49431*t49429*2.0))/(two_13*2.0-2.0)+c0p*t49431* \
               t49429*2.0)*(ccaa0+(ccaa2*t49432*t49433*t49439)/(gamma_bb[index]*gcaa*t49437*2.0+t49432*t49433*t49439+ \
               1.0)+(ccaa1*gamma_bb[index]*gcaa*t49437)/(gamma_bb[index]*gcaa*t49437+1.0)+(ccaa4*t49434*t49435*t49436) \
               /(gamma_bb[index]*gcaa*t49437*4.0+t49432*t49433*t49439*6.0+t49434*t49435*t49436+gamma_bb[index]*gcaa* \
               t49432*t49433*t49438*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t49432*t49433*t49438)/(gamma_bb[index]*gcaa* \
               t49437*3.0+t49432*t49433*t49439*3.0+gamma_bb[index]*gcaa*t49432*t49433*t49438+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t46026 = 1.0/pow(rho_a[index],1.0/3.0);
            double t46027 = c*t46026;
            double t46028 = sqrt(t46027);
            double t46029 = pow(t46027,3.0/2.0);
            double t46030 = c*c;
            double t46031 = 1.0/pow(rho_a[index],2.0/3.0);
            double t46032 = 1.0/c0p;
            double t46033 = b1p*t46028;
            double t46034 = b3p*t46029;
            double t46035 = b4p*t46030*t46031;
            double t46036 = b2p*c*t46026;
            double t46037 = t46033+t46034+t46035+t46036;
            double t46038 = 1.0/t46037;
            double t46039 = t46032*t46038*(1.0/2.0);
            double t46040 = t46039+1.0;
            double t46041 = log(t46040);
            double t46042 = a1p*c*t46026;
            double t46043 = t46042+1.0;
            double t46044 = gamma_aa[index]*gamma_aa[index];
            double t46045 = gcaa*gcaa;
            double t46046 = t46044*t46044;
            double t46047 = t46045*t46045;
            double t46048 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t46049 = 1.0/pow(rho_a[index],8.0/3.0);
            double t46050 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t46051 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t46052 = pow(2.0,1.0/3.0);
            double t46053 = t46052*2.0;
            double t46054 = t46053-2.0;
            double t46055 = two_13*2.0;
            double t46056 = t46055-2.0;
            double t46057 = 1.0/t46056;
            double t46058 = 1.0/c0f;
            double t46059 = b1f*t46028;
            double t46060 = b3f*t46029;
            double t46061 = b4f*t46030*t46031;
            double t46062 = b2f*c*t46026;
            double t46063 = t46060+t46061+t46062+t46059;
            double t46064 = 1.0/t46063;
            double t46065 = t46064*t46058*(1.0/2.0);
            double t46066 = t46065+1.0;
            double t46067 = log(t46066);
            double t46068 = a1f*c*t46026;
            double t46069 = t46068+1.0;
            double t46070 = c0f*t46067*t46069*2.0;
            double t46071 = c0p*t46041*t46043*2.0;
            double t46072 = 1.0/pow(rho_b[index],1.0/3.0);
            double t46073 = c*t46072;
            double t46074 = sqrt(t46073);
            double t46075 = pow(t46073,3.0/2.0);
            double t46076 = 1.0/pow(rho_b[index],2.0/3.0);
            double t46077 = b1p*t46074;
            double t46078 = b3p*t46075;
            double t46079 = b4p*t46030*t46076;
            double t46080 = b2p*c*t46072;
            double t46081 = t46080+t46077+t46078+t46079;
            double t46082 = 1.0/t46081;
            double t46083 = t46032*t46082*(1.0/2.0);
            double t46084 = t46083+1.0;
            double t46085 = log(t46084);
            double t46086 = a1p*c*t46072;
            double t46087 = t46086+1.0;
            double t46088 = c0p*t46085*t46087*2.0;
            double t46089 = rho_a[index]+rho_b[index];
            double t46090 = 1.0/pow(t46089,1.0/3.0);
            double t46091 = c*t46090;
            double t46092 = sqrt(t46091);
            double t46093 = pow(t46091,3.0/2.0);
            double t46094 = 1.0/pow(t46089,2.0/3.0);
            double t46095 = b1p*t46092;
            double t46096 = b3p*t46093;
            double t46097 = b4p*t46030*t46094;
            double t46098 = b2p*c*t46090;
            double t46099 = t46095+t46096+t46097+t46098;
            double t46100 = 1.0/t46099;
            double t46101 = t46100*t46032*(1.0/2.0);
            double t46102 = t46101+1.0;
            double t46103 = log(t46102);
            double t46104 = a1p*c*t46090;
            double t46105 = t46104+1.0;
            double t46106 = c0p*t46103*t46105*2.0;
            double t46107 = rho_a[index]-rho_b[index];
            double t46108 = t46107*t46107;
            double t46109 = 1.0/t46089;
            double t46110 = t46107*t46109;
            double t46111 = 1.0/(t46089*t46089*t46089*t46089);
            double t46112 = t46108*t46108;
            double t46113 = t46110+1.0;
            double t46114 = pow(t46113,4.0/3.0);
            double t46115 = -t46110+1.0;
            double t46116 = pow(t46115,4.0/3.0);
            double t46117 = t46114+t46116-2.0;
            double t46118 = gcab*gcab;
            double t46122 = gamma_aa[index]*t46049*(1.0/2.0);
            double t46123 = 1.0/pow(rho_b[index],8.0/3.0);
            double t46124 = gamma_bb[index]*t46123*(1.0/2.0);
            double t46119 = t46122+t46124;
            double t46120 = t46119*t46119;
            double t46121 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t46125 = t46118*t46118;
            double t46126 = t46120*t46120;
            double t46127 = t46120*t46118*6.0;
            double t46128 = gcab*t46120*t46118*t46119*4.0;
            double t46129 = t46125*t46126;
            double t46130 = gcab*t46119*4.0;
            double t46131 = t46130+t46127+t46128+t46129+1.0;
            double t46132 = gcab*t46119;
            double t46133 = t46132+1.0;
            double t46134 = t46120*t46118;
            double t46135 = gcab*t46119*2.0;
            double t46136 = t46134+t46135+1.0;
            double t46137 = t46120*t46118*3.0;
            double t46138 = gcab*t46120*t46118*t46119;
            double t46139 = gcab*t46119*3.0;
            double t46140 = t46137+t46138+t46139+1.0;
            double t46141 = 1.0/t46136;
            double t46142 = 1.0/t46140;
            double t46143 = 1.0/t46133;
            double t46144 = 1.0/t46131;
            double t46145 = 1.0/pow(t46089,4.0/3.0);
            double t46146 = b1f*t46092;
            double t46147 = b3f*t46093;
            double t46148 = b4f*t46030*t46094;
            double t46149 = b2f*c*t46090;
            double t46150 = t46146+t46147+t46148+t46149;
            double t46151 = 1.0/t46150;
            double t46152 = t46151*t46058*(1.0/2.0);
            double t46153 = t46152+1.0;
            double t46154 = log(t46153);
            double t46155 = a1f*c*t46090;
            double t46156 = t46155+1.0;
            double t46158 = c0f*t46154*t46156*2.0;
            double t46157 = t46106-t46158;
            double t46159 = 1.0/(t46089*t46089);
            double t46186 = t46107*t46159;
            double t46160 = t46109-t46186;
            double t46161 = 1.0/pow(t46089,5.0/3.0);
            double t46162 = 1.0/sqrt(t46091);
            double t46163 = 1.0/t46102;
            double t46164 = 1.0/(t46099*t46099);
            double t46165 = b4p*t46030*t46161*(2.0/3.0);
            double t46166 = b2p*c*t46145*(1.0/3.0);
            double t46167 = b1p*c*t46162*t46145*(1.0/6.0);
            double t46168 = b3p*c*t46145*t46092*(1.0/2.0);
            double t46169 = t46165+t46166+t46167+t46168;
            double t46170 = t46105*t46163*t46164*t46169;
            double t46171 = 1.0/d2fz0;
            double t46172 = 1.0/Aa;
            double t46173 = b1a*t46092;
            double t46174 = b3a*t46093;
            double t46175 = b4a*t46030*t46094;
            double t46176 = b2a*c*t46090;
            double t46177 = t46173+t46174+t46175+t46176;
            double t46178 = 1.0/t46177;
            double t46179 = t46172*t46178*(1.0/2.0);
            double t46180 = t46179+1.0;
            double t46181 = log(t46180);
            double t46182 = a1a*c*t46090;
            double t46183 = t46182+1.0;
            double t46184 = 1.0/(t46089*t46089*t46089*t46089*t46089);
            double t46185 = pow(t46113,1.0/3.0);
            double t46187 = t46160*t46185*(4.0/3.0);
            double t46188 = pow(t46115,1.0/3.0);
            double t46189 = t46187-t46160*t46188*(4.0/3.0);
            double t46190 = t46111*t46112;
            double t46191 = t46190-1.0;
            double t46192 = 1.0/pow(rho_a[index],4.0/3.0);
            double t46193 = 1.0/pow(rho_a[index],5.0/3.0);
            double t46194 = 1.0/sqrt(t46027);
            double t46195 = 1.0/t46040;
            double t46196 = 1.0/(t46037*t46037);
            double t46197 = b4p*t46030*t46193*(2.0/3.0);
            double t46198 = b2p*c*t46192*(1.0/3.0);
            double t46199 = b1p*c*t46192*t46194*(1.0/6.0);
            double t46200 = b3p*c*t46028*t46192*(1.0/2.0);
            double t46201 = t46200+t46197+t46198+t46199;
            double t46202 = t46201*t46043*t46195*t46196;
            double t46203 = t46070-t46071;
            double t46204 = t46203*t46054*t46057;
            double t46205 = Aa*t46117*t46171*t46181*t46191*t46057*t46183*2.0;
            double t46206 = t46204+t46071;
            double t46207 = gamma_aa[index]*gcaa*t46049*4.0;
            double t46208 = gamma_aa[index]*gcaa*t46050*t46044*t46045*4.0;
            double t46209 = t46051*t46044*t46045*6.0;
            double t46210 = t46046*t46047*t46048;
            double t46211 = t46210+t46207+t46208+t46209+1.0;
            double t46212 = 1.0/t46211;
            double t46213 = gamma_aa[index]*gcaa*t46049;
            double t46214 = t46213+1.0;
            double t46215 = 1.0/t46214;
            double t46216 = gamma_aa[index]*gcaa*t46049*3.0;
            double t46217 = gamma_aa[index]*gcaa*t46050*t46044*t46045;
            double t46218 = t46051*t46044*t46045*3.0;
            double t46219 = t46216+t46217+t46218+1.0;
            double t46220 = 1.0/t46219;
            double t46221 = gamma_aa[index]*gcaa*t46049*2.0;
            double t46222 = t46051*t46044*t46045;
            double t46223 = t46221+t46222+1.0;
            double t46224 = 1.0/t46223;
            double t46225 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t46226 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t46227 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t46228 = gx*gx;
            double t46229 = t46228*t46228;
            double t46230 = gamma_aa[index]*gx*t46049*4.0;
            double t46231 = gamma_aa[index]*gx*t46050*t46044*t46228*4.0;
            double t46232 = t46051*t46044*t46228*6.0;
            double t46233 = t46046*t46048*t46229;
            double t46234 = t46230+t46231+t46232+t46233+1.0;
            double t46235 = 1.0/t46234;
            double t46236 = gamma_aa[index]*gx*t46049;
            double t46237 = t46236+1.0;
            double t46238 = 1.0/t46237;
            double t46239 = gamma_aa[index]*gx*t46049*3.0;
            double t46240 = gamma_aa[index]*gx*t46050*t46044*t46228;
            double t46241 = t46051*t46044*t46228*3.0;
            double t46242 = t46240+t46241+t46239+1.0;
            double t46243 = 1.0/t46242;
            double t46244 = gamma_aa[index]*gx*t46049*2.0;
            double t46245 = t46051*t46044*t46228;
            double t46246 = t46244+t46245+1.0;
            double t46247 = 1.0/t46246;
            double t46248 = 1.0/t46066;
            double t46249 = 1.0/(t46063*t46063);
            double t46250 = b4f*t46030*t46193*(2.0/3.0);
            double t46251 = b2f*c*t46192*(1.0/3.0);
            double t46252 = b1f*c*t46192*t46194*(1.0/6.0);
            double t46253 = b3f*c*t46028*t46192*(1.0/2.0);
            double t46254 = t46250+t46251+t46252+t46253;
            double t46255 = a1f*c*c0f*t46192*t46067*(2.0/3.0);
            double t46256 = a1p*c*c0p*t46041*t46192*(2.0/3.0);
            double t46257 = ccaa4*t46212*t46046*t46047*t46048;
            double t46258 = ccaa1*gamma_aa[index]*gcaa*t46215*t46049;
            double t46259 = ccaa3*gamma_aa[index]*gcaa*t46220*t46050*t46044*t46045;
            double t46260 = ccaa2*t46051*t46044*t46224*t46045;
            double t46261 = ccaa0+t46260+t46257+t46258+t46259;
            v_rho_a_[index] = (ccab0+ccab1*gcab*t46143*t46119+ccab2*t46120*t46141*t46118+ccab4*t46125*t46126* \
               t46144+ccab3*gcab*t46120*t46142*t46118*t46119)*(t46204-t46106-t46205+t46071-rho_a[index]*(-t46202+ \
               t46256+t46054*t46057*(t46202+t46255-t46254*t46248*t46069*t46249-a1p*c*c0p*t46041*t46192*(2.0/3.0)) \
               )+t46089*(-t46170+t46111*t46112*t46117*t46057*(t46170-(1.0/(t46150*t46150)*t46156*(b2f*c*t46145*(1.0/ \
               3.0)+b4f*t46030*t46161*(2.0/3.0)+b1f*c*t46162*t46145*(1.0/6.0)+b3f*c*t46145*t46092*(1.0/2.0)))/t46153+ \
               a1f*c*c0f*t46145*t46154*(2.0/3.0)-a1p*c*c0p*t46103*t46145*(2.0/3.0))+a1p*c*c0p*t46103*t46145*(2.0/ \
               3.0)+t46111*t46112*t46057*t46157*t46189-t46112*t46117*t46057*t46157*t46184*4.0+t46111*t46107*t46108* \
               t46117*t46057*t46157*4.0+Aa*t46117*t46171*t46181*t46057*t46183*(t46112*t46184*4.0-t46111*t46107*t46108* \
               4.0)*2.0-Aa*t46171*t46181*t46191*t46057*t46183*t46189*2.0-(t46117*t46171*t46191*t46057*t46183*1.0/ \
               (t46177*t46177)*(b2a*c*t46145*(1.0/3.0)+b4a*t46030*t46161*(2.0/3.0)+b1a*c*t46162*t46145*(1.0/6.0)+ \
               b3a*c*t46145*t46092*(1.0/2.0)))/t46180+Aa*a1a*c*t46117*t46171*t46145*t46181*t46191*t46057*(2.0/3.0) \
               )+t46111*t46112*t46117*t46057*t46157)-t46261*(t46071+t46054*t46057*(t46070-c0p*t46041*t46043*2.0)) \
               -(rho_a[index]*t46206+rho_b[index]*(t46088-t46054*t46057*(t46088-c0f*log((t46058*(1.0/2.0))/(b1f*t46074+ \
               b3f*t46075+b2f*c*t46072+b4f*t46030*t46076)+1.0)*(a1f*c*t46072+1.0)*2.0))-t46089*(t46106+t46205-t46111* \
               t46112*t46117*t46057*t46157))*(ccab1*gamma_aa[index]*gcab*t46121*t46143*(4.0/3.0)-ccab2*t46120*t46118* \
               1.0/(t46136*t46136)*(gamma_aa[index]*gcab*t46121*(8.0/3.0)+gamma_aa[index]*t46121*t46118*t46119*(8.0/ \
               3.0))-ccab4*1.0/(t46131*t46131)*t46125*t46126*(gamma_aa[index]*gcab*t46121*(1.6E1/3.0)+gamma_aa[index]* \
               t46121*t46118*t46119*1.6E1+gamma_aa[index]*gcab*t46120*t46121*t46118*1.6E1+gamma_aa[index]*t46120* \
               t46121*t46125*t46119*(1.6E1/3.0))-ccab1*gamma_aa[index]*t46121*1.0/(t46133*t46133)*t46118*t46119*(4.0/ \
               3.0)+ccab2*gamma_aa[index]*t46121*t46141*t46118*t46119*(8.0/3.0)-ccab3*gcab*t46120*1.0/(t46140*t46140) \
               *t46118*t46119*(gamma_aa[index]*gcab*t46121*4.0+gamma_aa[index]*t46121*t46118*t46119*8.0+gamma_aa[index]* \
               gcab*t46120*t46121*t46118*4.0)+ccab3*gamma_aa[index]*gcab*t46120*t46121*t46142*t46118*4.0+ccab4*gamma_aa[index]* \
               t46120*t46121*t46125*t46144*t46119*(1.6E1/3.0))+rho_a[index]*t46206*(ccaa1*gamma_aa[index]*gcaa*t46121* \
               t46215*(8.0/3.0)+ccaa2*t46044*t46224*t46045*t46225*(1.6E1/3.0)+ccaa4*t46212*t46046*t46047*t46227*(3.2E1/ \
               3.0)-ccaa1*1.0/(t46214*t46214)*t46044*t46045*t46225*(8.0/3.0)-ccaa2*t46051*1.0/(t46223*t46223)*t46044* \
               t46045*(gamma_aa[index]*gcaa*t46121*(1.6E1/3.0)+t46044*t46045*t46225*(1.6E1/3.0))-ccaa4*1.0/(t46211* \
               t46211)*t46046*t46047*t46048*(gamma_aa[index]*gcaa*t46121*(3.2E1/3.0)+t46044*t46045*t46225*3.2E1+t46046* \
               t46047*t46227*(3.2E1/3.0)+gamma_aa[index]*gcaa*t46044*t46045*t46226*3.2E1)+ccaa3*gamma_aa[index]*gcaa* \
               t46220*t46044*t46045*t46226*8.0-ccaa3*gamma_aa[index]*gcaa*t46050*t46044*t46045*1.0/(t46219*t46219) \
               *(gamma_aa[index]*gcaa*t46121*8.0+t46044*t46045*t46225*1.6E1+gamma_aa[index]*gcaa*t46044*t46045*t46226* \
               8.0))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]*gx*t46049*t46238+cx2*t46051*t46044*t46228* \
               t46247+cx4*t46046*t46235*t46048*t46229+cx3*gamma_aa[index]*gx*t46050*t46044*t46243*t46228)*(4.0/3.0) \
               +rho_a[index]*t46261*(-t46202+t46256+t46054*t46057*(t46202+t46255-t46256-t46254*t46248*t46069*t46249) \
               )-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t46121*t46238*(8.0/3.0)+cx2*t46044*t46225*t46228* \
               t46247*(1.6E1/3.0)+cx4*t46046*t46235*t46227*t46229*(3.2E1/3.0)-cx1*t46044*t46225*t46228*1.0/(t46237* \
               t46237)*(8.0/3.0)-cx2*t46051*t46044*t46228*1.0/(t46246*t46246)*(gamma_aa[index]*gx*t46121*(1.6E1/3.0) \
               +t46044*t46225*t46228*(1.6E1/3.0))-cx4*1.0/(t46234*t46234)*t46046*t46048*t46229*(gamma_aa[index]*gx* \
               t46121*(3.2E1/3.0)+t46044*t46225*t46228*3.2E1+t46046*t46227*t46229*(3.2E1/3.0)+gamma_aa[index]*gx* \
               t46044*t46226*t46228*3.2E1)+cx3*gamma_aa[index]*gx*t46044*t46243*t46226*t46228*8.0-cx3*gamma_aa[index]* \
               gx*t46050*t46044*1.0/(t46242*t46242)*t46228*(gamma_aa[index]*gx*t46121*8.0+t46044*t46225*t46228*1.6E1+ \
               gamma_aa[index]*gx*t46044*t46226*t46228*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t50082 = 1.0/pow(rho_a[index],1.0/3.0);
            double t50083 = c*t50082;
            double t50084 = sqrt(t50083);
            double t50085 = pow(t50083,3.0/2.0);
            double t50086 = c*c;
            double t50087 = 1.0/pow(rho_a[index],2.0/3.0);
            double t50088 = 1.0/c0p;
            double t50089 = b1p*t50084;
            double t50090 = b3p*t50085;
            double t50091 = b4p*t50086*t50087;
            double t50092 = b2p*c*t50082;
            double t50093 = t50090+t50091+t50092+t50089;
            double t50094 = 1.0/t50093;
            double t50095 = t50094*t50088*(1.0/2.0);
            double t50096 = t50095+1.0;
            double t50097 = log(t50096);
            double t50098 = a1p*c*t50082;
            double t50099 = t50098+1.0;
            double t50100 = gamma_aa[index]*gamma_aa[index];
            double t50101 = gcaa*gcaa;
            double t50102 = t50100*t50100;
            double t50103 = t50101*t50101;
            double t50104 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t50105 = 1.0/pow(rho_a[index],8.0/3.0);
            double t50106 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50107 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t50108 = pow(2.0,1.0/3.0);
            double t50109 = t50108*2.0;
            double t50110 = t50109-2.0;
            double t50111 = two_13*2.0;
            double t50112 = t50111-2.0;
            double t50113 = 1.0/t50112;
            double t50114 = 1.0/c0f;
            double t50115 = b1f*t50084;
            double t50116 = b3f*t50085;
            double t50117 = b4f*t50086*t50087;
            double t50118 = b2f*c*t50082;
            double t50119 = t50115+t50116+t50117+t50118;
            double t50120 = 1.0/t50119;
            double t50121 = t50120*t50114*(1.0/2.0);
            double t50122 = t50121+1.0;
            double t50123 = log(t50122);
            double t50124 = a1f*c*t50082;
            double t50125 = t50124+1.0;
            double t50126 = c0f*t50123*t50125*2.0;
            double t50127 = c0p*t50097*t50099*2.0;
            double t50128 = gamma_aa[index]*gcaa*t50105*4.0;
            double t50129 = gamma_aa[index]*gcaa*t50100*t50101*t50106*4.0;
            double t50130 = t50100*t50101*t50107*6.0;
            double t50131 = t50102*t50103*t50104;
            double t50132 = t50130+t50131+t50128+t50129+1.0;
            double t50133 = 1.0/t50132;
            double t50134 = gamma_aa[index]*gcaa*t50105;
            double t50135 = t50134+1.0;
            double t50136 = 1.0/t50135;
            double t50137 = gamma_aa[index]*gcaa*t50105*3.0;
            double t50138 = gamma_aa[index]*gcaa*t50100*t50101*t50106;
            double t50139 = t50100*t50101*t50107*3.0;
            double t50140 = t50137+t50138+t50139+1.0;
            double t50141 = 1.0/t50140;
            double t50142 = gamma_aa[index]*gcaa*t50105*2.0;
            double t50143 = t50100*t50101*t50107;
            double t50144 = t50142+t50143+1.0;
            double t50145 = 1.0/t50144;
            double t50146 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t50147 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t50148 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t50149 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t50150 = gx*gx;
            double t50151 = t50150*t50150;
            double t50152 = gamma_aa[index]*gx*t50105*4.0;
            double t50153 = gamma_aa[index]*gx*t50100*t50150*t50106*4.0;
            double t50154 = t50100*t50150*t50107*6.0;
            double t50155 = t50102*t50104*t50151;
            double t50156 = t50152+t50153+t50154+t50155+1.0;
            double t50157 = 1.0/t50156;
            double t50158 = gamma_aa[index]*gx*t50105;
            double t50159 = t50158+1.0;
            double t50160 = 1.0/t50159;
            double t50161 = gamma_aa[index]*gx*t50105*3.0;
            double t50162 = gamma_aa[index]*gx*t50100*t50150*t50106;
            double t50163 = t50100*t50150*t50107*3.0;
            double t50164 = t50161+t50162+t50163+1.0;
            double t50165 = 1.0/t50164;
            double t50166 = gamma_aa[index]*gx*t50105*2.0;
            double t50167 = t50100*t50150*t50107;
            double t50168 = t50166+t50167+1.0;
            double t50169 = 1.0/t50168;
            double t50170 = 1.0/pow(rho_a[index],4.0/3.0);
            double t50171 = 1.0/pow(rho_a[index],5.0/3.0);
            double t50172 = 1.0/sqrt(t50083);
            double t50173 = 1.0/t50096;
            double t50174 = 1.0/(t50093*t50093);
            double t50175 = b4p*t50171*t50086*(2.0/3.0);
            double t50176 = b2p*c*t50170*(1.0/3.0);
            double t50177 = b1p*c*t50170*t50172*(1.0/6.0);
            double t50178 = b3p*c*t50170*t50084*(1.0/2.0);
            double t50179 = t50175+t50176+t50177+t50178;
            double t50180 = t50173*t50174*t50179*t50099;
            double t50181 = ccaa4*t50102*t50103*t50104*t50133;
            double t50182 = ccaa1*gamma_aa[index]*gcaa*t50105*t50136;
            double t50183 = ccaa3*gamma_aa[index]*gcaa*t50100*t50101*t50141*t50106;
            double t50184 = ccaa2*t50100*t50101*t50107*t50145;
            double t50185 = ccaa0+t50181+t50182+t50183+t50184;
            v_rho_a_[index] = -t50185*(t50127+t50110*t50113*(t50126-c0p*t50097*t50099*2.0))+rho_a[index]*t50185* \
               (-t50180+t50110*t50113*(t50180-(t50125*1.0/(t50119*t50119)*(b2f*c*t50170*(1.0/3.0)+b4f*t50171*t50086* \
               (2.0/3.0)+b1f*c*t50170*t50172*(1.0/6.0)+b3f*c*t50170*t50084*(1.0/2.0)))/t50122+a1f*c*c0f*t50123*t50170* \
               (2.0/3.0)-a1p*c*c0p*t50170*t50097*(2.0/3.0))+a1p*c*c0p*t50170*t50097*(2.0/3.0))+c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+cx1*gamma_aa[index]*gx*t50105*t50160+cx2*t50100*t50150*t50107*t50169+cx4*t50102*t50104*t50151* \
               t50157+cx3*gamma_aa[index]*gx*t50100*t50150*t50106*t50165)*(4.0/3.0)+rho_a[index]*(t50127+t50110*t50113* \
               (t50126-t50127))*(ccaa1*gamma_aa[index]*gcaa*t50136*t50147*(8.0/3.0)+ccaa2*t50100*t50101*t50145*t50146* \
               (1.6E1/3.0)+ccaa4*t50102*t50103*t50133*t50149*(3.2E1/3.0)-ccaa1*t50100*t50101*1.0/(t50135*t50135)* \
               t50146*(8.0/3.0)-ccaa2*t50100*t50101*t50107*1.0/(t50144*t50144)*(gamma_aa[index]*gcaa*t50147*(1.6E1/ \
               3.0)+t50100*t50101*t50146*(1.6E1/3.0))-ccaa4*t50102*t50103*t50104*1.0/(t50132*t50132)*(gamma_aa[index]* \
               gcaa*t50147*(3.2E1/3.0)+t50100*t50101*t50146*3.2E1+t50102*t50103*t50149*(3.2E1/3.0)+gamma_aa[index]* \
               gcaa*t50100*t50101*t50148*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t50100*t50101*t50141*t50148*8.0-ccaa3* \
               gamma_aa[index]*gcaa*t50100*t50101*1.0/(t50140*t50140)*t50106*(gamma_aa[index]*gcaa*t50147*8.0+t50100* \
               t50101*t50146*1.6E1+gamma_aa[index]*gcaa*t50100*t50101*t50148*8.0))-c0*pow(rho_a[index],4.0/3.0)*(cx1* \
               gamma_aa[index]*gx*t50160*t50147*(8.0/3.0)+cx2*t50100*t50150*t50146*t50169*(1.6E1/3.0)+cx4*t50102* \
               t50151*t50157*t50149*(3.2E1/3.0)-cx1*t50100*t50150*t50146*1.0/(t50159*t50159)*(8.0/3.0)-cx2*t50100* \
               t50150*t50107*1.0/(t50168*t50168)*(gamma_aa[index]*gx*t50147*(1.6E1/3.0)+t50100*t50150*t50146*(1.6E1/ \
               3.0))-cx4*t50102*t50104*t50151*1.0/(t50156*t50156)*(gamma_aa[index]*gx*t50147*(3.2E1/3.0)+t50100*t50150* \
               t50146*3.2E1+t50102*t50151*t50149*(3.2E1/3.0)+gamma_aa[index]*gx*t50100*t50150*t50148*3.2E1)+cx3*gamma_aa[index]* \
               gx*t50100*t50150*t50165*t50148*8.0-cx3*gamma_aa[index]*gx*t50100*t50150*t50106*1.0/(t50164*t50164) \
               *(gamma_aa[index]*gx*t50147*8.0+t50100*t50150*t50146*1.6E1+gamma_aa[index]*gx*t50100*t50150*t50148* \
               8.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t46263 = 1.0/pow(rho_b[index],1.0/3.0);
            double t46264 = c*t46263;
            double t46265 = sqrt(t46264);
            double t46266 = pow(t46264,3.0/2.0);
            double t46267 = c*c;
            double t46268 = 1.0/pow(rho_b[index],2.0/3.0);
            double t46269 = 1.0/c0p;
            double t46270 = b1p*t46265;
            double t46271 = b3p*t46266;
            double t46272 = b4p*t46267*t46268;
            double t46273 = b2p*c*t46263;
            double t46274 = t46270+t46271+t46272+t46273;
            double t46275 = 1.0/t46274;
            double t46276 = t46275*t46269*(1.0/2.0);
            double t46277 = t46276+1.0;
            double t46278 = log(t46277);
            double t46279 = a1p*c*t46263;
            double t46280 = t46279+1.0;
            double t46281 = gamma_bb[index]*gamma_bb[index];
            double t46282 = gcaa*gcaa;
            double t46283 = t46281*t46281;
            double t46284 = t46282*t46282;
            double t46285 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t46286 = 1.0/pow(rho_b[index],8.0/3.0);
            double t46287 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t46288 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t46289 = pow(2.0,1.0/3.0);
            double t46290 = t46289*2.0;
            double t46291 = t46290-2.0;
            double t46292 = two_13*2.0;
            double t46293 = t46292-2.0;
            double t46294 = 1.0/t46293;
            double t46295 = 1.0/c0f;
            double t46296 = 1.0/pow(rho_a[index],1.0/3.0);
            double t46297 = c*t46296;
            double t46298 = sqrt(t46297);
            double t46299 = pow(t46297,3.0/2.0);
            double t46300 = 1.0/pow(rho_a[index],2.0/3.0);
            double t46301 = b1p*t46298;
            double t46302 = b3p*t46299;
            double t46303 = b4p*t46300*t46267;
            double t46304 = b2p*c*t46296;
            double t46305 = t46301+t46302+t46303+t46304;
            double t46306 = 1.0/t46305;
            double t46307 = t46306*t46269*(1.0/2.0);
            double t46308 = t46307+1.0;
            double t46309 = log(t46308);
            double t46310 = a1p*c*t46296;
            double t46311 = t46310+1.0;
            double t46312 = c0p*t46311*t46309*2.0;
            double t46313 = b1f*t46265;
            double t46314 = b3f*t46266;
            double t46315 = b4f*t46267*t46268;
            double t46316 = b2f*c*t46263;
            double t46317 = t46313+t46314+t46315+t46316;
            double t46318 = 1.0/t46317;
            double t46319 = t46318*t46295*(1.0/2.0);
            double t46320 = t46319+1.0;
            double t46321 = log(t46320);
            double t46322 = a1f*c*t46263;
            double t46323 = t46322+1.0;
            double t46324 = c0f*t46321*t46323*2.0;
            double t46325 = c0p*t46280*t46278*2.0;
            double t46326 = rho_a[index]+rho_b[index];
            double t46327 = 1.0/pow(t46326,1.0/3.0);
            double t46328 = c*t46327;
            double t46329 = sqrt(t46328);
            double t46330 = pow(t46328,3.0/2.0);
            double t46331 = 1.0/pow(t46326,2.0/3.0);
            double t46332 = b1p*t46329;
            double t46333 = b3p*t46330;
            double t46334 = b4p*t46331*t46267;
            double t46335 = b2p*c*t46327;
            double t46336 = t46332+t46333+t46334+t46335;
            double t46337 = 1.0/t46336;
            double t46338 = t46337*t46269*(1.0/2.0);
            double t46339 = t46338+1.0;
            double t46340 = log(t46339);
            double t46341 = a1p*c*t46327;
            double t46342 = t46341+1.0;
            double t46343 = c0p*t46340*t46342*2.0;
            double t46344 = rho_a[index]-rho_b[index];
            double t46345 = t46344*t46344;
            double t46346 = 1.0/t46326;
            double t46347 = t46344*t46346;
            double t46348 = 1.0/(t46326*t46326*t46326*t46326);
            double t46349 = t46345*t46345;
            double t46350 = t46347+1.0;
            double t46351 = pow(t46350,4.0/3.0);
            double t46352 = -t46347+1.0;
            double t46353 = pow(t46352,4.0/3.0);
            double t46354 = t46351+t46353-2.0;
            double t46355 = gcab*gcab;
            double t46359 = 1.0/pow(rho_a[index],8.0/3.0);
            double t46360 = gamma_aa[index]*t46359*(1.0/2.0);
            double t46361 = gamma_bb[index]*t46286*(1.0/2.0);
            double t46356 = t46360+t46361;
            double t46357 = t46356*t46356;
            double t46358 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t46362 = t46355*t46355;
            double t46363 = t46357*t46357;
            double t46364 = t46355*t46357*6.0;
            double t46365 = gcab*t46355*t46356*t46357*4.0;
            double t46366 = t46362*t46363;
            double t46367 = gcab*t46356*4.0;
            double t46368 = t46364+t46365+t46366+t46367+1.0;
            double t46369 = gcab*t46356;
            double t46370 = t46369+1.0;
            double t46371 = t46355*t46357;
            double t46372 = gcab*t46356*2.0;
            double t46373 = t46371+t46372+1.0;
            double t46374 = t46355*t46357*3.0;
            double t46375 = gcab*t46355*t46356*t46357;
            double t46376 = gcab*t46356*3.0;
            double t46377 = t46374+t46375+t46376+1.0;
            double t46378 = 1.0/t46373;
            double t46379 = 1.0/t46377;
            double t46380 = 1.0/t46370;
            double t46381 = 1.0/t46368;
            double t46382 = 1.0/pow(t46326,4.0/3.0);
            double t46383 = b1f*t46329;
            double t46384 = b3f*t46330;
            double t46385 = b4f*t46331*t46267;
            double t46386 = b2f*c*t46327;
            double t46387 = t46383+t46384+t46385+t46386;
            double t46388 = 1.0/t46387;
            double t46389 = t46295*t46388*(1.0/2.0);
            double t46390 = t46389+1.0;
            double t46391 = log(t46390);
            double t46392 = a1f*c*t46327;
            double t46393 = t46392+1.0;
            double t46395 = c0f*t46391*t46393*2.0;
            double t46394 = t46343-t46395;
            double t46396 = 1.0/(t46326*t46326);
            double t46397 = t46344*t46396;
            double t46398 = t46346+t46397;
            double t46399 = 1.0/pow(t46326,5.0/3.0);
            double t46400 = 1.0/sqrt(t46328);
            double t46401 = 1.0/t46339;
            double t46402 = 1.0/(t46336*t46336);
            double t46403 = b4p*t46267*t46399*(2.0/3.0);
            double t46404 = b2p*c*t46382*(1.0/3.0);
            double t46405 = b1p*c*t46400*t46382*(1.0/6.0);
            double t46406 = b3p*c*t46382*t46329*(1.0/2.0);
            double t46407 = t46403+t46404+t46405+t46406;
            double t46408 = 1.0/d2fz0;
            double t46409 = 1.0/Aa;
            double t46410 = b1a*t46329;
            double t46411 = b3a*t46330;
            double t46412 = b4a*t46331*t46267;
            double t46413 = b2a*c*t46327;
            double t46414 = t46410+t46411+t46412+t46413;
            double t46415 = 1.0/t46414;
            double t46416 = t46415*t46409*(1.0/2.0);
            double t46417 = t46416+1.0;
            double t46418 = log(t46417);
            double t46419 = a1a*c*t46327;
            double t46420 = t46419+1.0;
            double t46421 = 1.0/(t46326*t46326*t46326*t46326*t46326);
            double t46422 = pow(t46350,1.0/3.0);
            double t46423 = t46422*t46398*(4.0/3.0);
            double t46424 = pow(t46352,1.0/3.0);
            double t46425 = t46423-t46424*t46398*(4.0/3.0);
            double t46426 = t46348*t46349;
            double t46427 = t46426-1.0;
            double t46428 = t46401*t46402*t46342*t46407;
            double t46429 = 1.0/pow(rho_b[index],4.0/3.0);
            double t46430 = 1.0/pow(rho_b[index],5.0/3.0);
            double t46431 = 1.0/sqrt(t46264);
            double t46432 = 1.0/t46277;
            double t46433 = 1.0/(t46274*t46274);
            double t46434 = b4p*t46430*t46267*(2.0/3.0);
            double t46435 = b2p*c*t46429*(1.0/3.0);
            double t46436 = b1p*c*t46431*t46429*(1.0/6.0);
            double t46437 = b3p*c*t46265*t46429*(1.0/2.0);
            double t46438 = t46434+t46435+t46436+t46437;
            double t46439 = t46432*t46280*t46433*t46438;
            double t46440 = t46324-t46325;
            double t46441 = t46440*t46291*t46294;
            double t46442 = Aa*t46420*t46354*t46408*t46418*t46427*t46294*2.0;
            double t46443 = t46441+t46325;
            double t46444 = gamma_bb[index]*gcaa*t46286*4.0;
            double t46445 = gamma_bb[index]*gcaa*t46281*t46282*t46287*4.0;
            double t46446 = t46281*t46282*t46288*6.0;
            double t46447 = t46283*t46284*t46285;
            double t46448 = t46444+t46445+t46446+t46447+1.0;
            double t46449 = 1.0/t46448;
            double t46450 = gamma_bb[index]*gcaa*t46286;
            double t46451 = t46450+1.0;
            double t46452 = 1.0/t46451;
            double t46453 = gamma_bb[index]*gcaa*t46286*3.0;
            double t46454 = gamma_bb[index]*gcaa*t46281*t46282*t46287;
            double t46455 = t46281*t46282*t46288*3.0;
            double t46456 = t46453+t46454+t46455+1.0;
            double t46457 = 1.0/t46456;
            double t46458 = gamma_bb[index]*gcaa*t46286*2.0;
            double t46459 = t46281*t46282*t46288;
            double t46460 = t46458+t46459+1.0;
            double t46461 = 1.0/t46460;
            double t46462 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t46463 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t46464 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t46465 = gx*gx;
            double t46466 = t46465*t46465;
            double t46467 = gamma_bb[index]*gx*t46286*4.0;
            double t46468 = gamma_bb[index]*gx*t46281*t46465*t46287*4.0;
            double t46469 = t46281*t46465*t46288*6.0;
            double t46470 = t46283*t46285*t46466;
            double t46471 = t46470+t46467+t46468+t46469+1.0;
            double t46472 = 1.0/t46471;
            double t46473 = gamma_bb[index]*gx*t46286;
            double t46474 = t46473+1.0;
            double t46475 = 1.0/t46474;
            double t46476 = gamma_bb[index]*gx*t46286*3.0;
            double t46477 = gamma_bb[index]*gx*t46281*t46465*t46287;
            double t46478 = t46281*t46465*t46288*3.0;
            double t46479 = t46476+t46477+t46478+1.0;
            double t46480 = 1.0/t46479;
            double t46481 = gamma_bb[index]*gx*t46286*2.0;
            double t46482 = t46281*t46465*t46288;
            double t46483 = t46481+t46482+1.0;
            double t46484 = 1.0/t46483;
            double t46485 = 1.0/t46320;
            double t46486 = 1.0/(t46317*t46317);
            double t46487 = b4f*t46430*t46267*(2.0/3.0);
            double t46488 = b2f*c*t46429*(1.0/3.0);
            double t46489 = b1f*c*t46431*t46429*(1.0/6.0);
            double t46490 = b3f*c*t46265*t46429*(1.0/2.0);
            double t46491 = t46490+t46487+t46488+t46489;
            double t46492 = a1f*c*c0f*t46321*t46429*(2.0/3.0);
            double t46493 = a1p*c*c0p*t46429*t46278*(2.0/3.0);
            double t46494 = ccaa4*t46283*t46284*t46285*t46449;
            double t46495 = ccaa1*gamma_bb[index]*gcaa*t46452*t46286;
            double t46496 = ccaa3*gamma_bb[index]*gcaa*t46281*t46282*t46457*t46287;
            double t46497 = ccaa2*t46281*t46461*t46282*t46288;
            double t46498 = ccaa0+t46494+t46495+t46496+t46497;
            v_rho_b_[index] = -(ccab0+ccab1*gcab*t46380*t46356+ccab4*t46362*t46363*t46381+ccab2*t46355*t46357* \
               t46378+ccab3*gcab*t46355*t46356*t46357*t46379)*(-t46441-t46325+t46343+t46442+t46326*(t46428-t46354* \
               t46294*t46348*t46349*(t46428-(t46393*1.0/(t46387*t46387)*(b2f*c*t46382*(1.0/3.0)+b4f*t46267*t46399* \
               (2.0/3.0)+b1f*c*t46400*t46382*(1.0/6.0)+b3f*c*t46382*t46329*(1.0/2.0)))/t46390+a1f*c*c0f*t46382*t46391* \
               (2.0/3.0)-a1p*c*c0p*t46340*t46382*(2.0/3.0))-a1p*c*c0p*t46340*t46382*(2.0/3.0)+t46421*t46354*t46294* \
               t46349*t46394*4.0+t46425*t46294*t46348*t46349*t46394+t46344*t46345*t46354*t46294*t46348*t46394*4.0- \
               Aa*t46420*t46354*t46408*t46418*t46294*(t46421*t46349*4.0+t46344*t46345*t46348*4.0)*2.0-Aa*t46420*t46425* \
               t46408*t46418*t46427*t46294*2.0+(t46420*1.0/(t46414*t46414)*t46354*t46408*t46427*t46294*(b2a*c*t46382* \
               (1.0/3.0)+b4a*t46267*t46399*(2.0/3.0)+b1a*c*t46400*t46382*(1.0/6.0)+b3a*c*t46382*t46329*(1.0/2.0)) \
               )/t46417-Aa*a1a*c*t46354*t46408*t46382*t46418*t46427*t46294*(2.0/3.0))+rho_b[index]*(-t46439+t46493+ \
               t46291*t46294*(t46492+t46439-t46323*t46491*t46485*t46486-a1p*c*c0p*t46429*t46278*(2.0/3.0)))-t46354* \
               t46294*t46348*t46349*t46394)-t46498*(t46325+t46291*t46294*(t46324-c0p*t46280*t46278*2.0))-(rho_b[index]* \
               t46443+rho_a[index]*(t46312-t46291*t46294*(t46312-c0f*log((t46295*(1.0/2.0))/(b1f*t46298+b3f*t46299+ \
               b2f*c*t46296+b4f*t46300*t46267)+1.0)*(a1f*c*t46296+1.0)*2.0))-t46326*(t46343+t46442-t46354*t46294* \
               t46348*t46349*t46394))*(ccab1*gamma_bb[index]*gcab*t46380*t46358*(4.0/3.0)-ccab2*t46355*1.0/(t46373* \
               t46373)*t46357*(gamma_bb[index]*gcab*t46358*(8.0/3.0)+gamma_bb[index]*t46355*t46356*t46358*(8.0/3.0) \
               )-ccab4*t46362*t46363*1.0/(t46368*t46368)*(gamma_bb[index]*gcab*t46358*(1.6E1/3.0)+gamma_bb[index]* \
               t46355*t46356*t46358*1.6E1+gamma_bb[index]*gcab*t46355*t46357*t46358*1.6E1+gamma_bb[index]*t46362* \
               t46356*t46357*t46358*(1.6E1/3.0))-ccab1*gamma_bb[index]*1.0/(t46370*t46370)*t46355*t46356*t46358*(4.0/ \
               3.0)+ccab2*gamma_bb[index]*t46355*t46356*t46358*t46378*(8.0/3.0)-ccab3*gcab*t46355*t46356*t46357*1.0/ \
               (t46377*t46377)*(gamma_bb[index]*gcab*t46358*4.0+gamma_bb[index]*t46355*t46356*t46358*8.0+gamma_bb[index]* \
               gcab*t46355*t46357*t46358*4.0)+ccab3*gamma_bb[index]*gcab*t46355*t46357*t46358*t46379*4.0+ccab4*gamma_bb[index]* \
               t46362*t46381*t46356*t46357*t46358*(1.6E1/3.0))+rho_b[index]*t46443*(ccaa1*gamma_bb[index]*gcaa*t46452* \
               t46358*(8.0/3.0)+ccaa2*t46281*t46461*t46282*t46462*(1.6E1/3.0)+ccaa4*t46283*t46284*t46464*t46449*(3.2E1/ \
               3.0)-ccaa1*1.0/(t46451*t46451)*t46281*t46282*t46462*(8.0/3.0)-ccaa2*1.0/(t46460*t46460)*t46281*t46282* \
               t46288*(gamma_bb[index]*gcaa*t46358*(1.6E1/3.0)+t46281*t46282*t46462*(1.6E1/3.0))-ccaa4*t46283*t46284* \
               t46285*1.0/(t46448*t46448)*(gamma_bb[index]*gcaa*t46358*(3.2E1/3.0)+t46281*t46282*t46462*3.2E1+t46283* \
               t46284*t46464*(3.2E1/3.0)+gamma_bb[index]*gcaa*t46281*t46282*t46463*3.2E1)+ccaa3*gamma_bb[index]*gcaa* \
               t46281*t46282*t46463*t46457*8.0-ccaa3*gamma_bb[index]*gcaa*t46281*t46282*1.0/(t46456*t46456)*t46287* \
               (gamma_bb[index]*gcaa*t46358*8.0+t46281*t46282*t46462*1.6E1+gamma_bb[index]*gcaa*t46281*t46282*t46463* \
               8.0))+c0*pow(rho_b[index],1.0/3.0)*(cx0+cx1*gamma_bb[index]*gx*t46286*t46475+cx2*t46281*t46465*t46484* \
               t46288+cx4*t46283*t46472*t46285*t46466+cx3*gamma_bb[index]*gx*t46281*t46480*t46465*t46287)*(4.0/3.0) \
               +rho_b[index]*t46498*(-t46439+t46493+t46291*t46294*(t46492+t46439-t46493-t46323*t46491*t46485*t46486) \
               )-c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t46358*t46475*(8.0/3.0)+cx2*t46281*t46462*t46465* \
               t46484*(1.6E1/3.0)+cx4*t46283*t46472*t46464*t46466*(3.2E1/3.0)-cx1*t46281*t46462*t46465*1.0/(t46474* \
               t46474)*(8.0/3.0)-cx2*t46281*t46465*1.0/(t46483*t46483)*t46288*(gamma_bb[index]*gx*t46358*(1.6E1/3.0) \
               +t46281*t46462*t46465*(1.6E1/3.0))-cx4*1.0/(t46471*t46471)*t46283*t46285*t46466*(gamma_bb[index]*gx* \
               t46358*(3.2E1/3.0)+t46281*t46462*t46465*3.2E1+t46283*t46464*t46466*(3.2E1/3.0)+gamma_bb[index]*gx* \
               t46281*t46463*t46465*3.2E1)+cx3*gamma_bb[index]*gx*t46281*t46480*t46463*t46465*8.0-cx3*gamma_bb[index]* \
               gx*t46281*t46465*t46287*1.0/(t46479*t46479)*(gamma_bb[index]*gx*t46358*8.0+t46281*t46462*t46465*1.6E1+ \
               gamma_bb[index]*gx*t46281*t46463*t46465*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t49444 = 1.0/pow(rho_b[index],1.0/3.0);
            double t49445 = c*t49444;
            double t49446 = sqrt(t49445);
            double t49447 = pow(t49445,3.0/2.0);
            double t49448 = c*c;
            double t49449 = 1.0/pow(rho_b[index],2.0/3.0);
            double t49450 = 1.0/c0p;
            double t49451 = b1p*t49446;
            double t49452 = b3p*t49447;
            double t49453 = b4p*t49448*t49449;
            double t49454 = b2p*c*t49444;
            double t49455 = t49451+t49452+t49453+t49454;
            double t49456 = 1.0/t49455;
            double t49457 = t49450*t49456*(1.0/2.0);
            double t49458 = t49457+1.0;
            double t49459 = log(t49458);
            double t49460 = a1p*c*t49444;
            double t49461 = t49460+1.0;
            double t49462 = gamma_bb[index]*gamma_bb[index];
            double t49463 = gcaa*gcaa;
            double t49464 = t49462*t49462;
            double t49465 = t49463*t49463;
            double t49466 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t49467 = 1.0/pow(rho_b[index],8.0/3.0);
            double t49468 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t49469 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t49470 = pow(2.0,1.0/3.0);
            double t49471 = t49470*2.0;
            double t49472 = t49471-2.0;
            double t49473 = two_13*2.0;
            double t49474 = t49473-2.0;
            double t49475 = 1.0/t49474;
            double t49476 = 1.0/c0f;
            double t49477 = b1f*t49446;
            double t49478 = b3f*t49447;
            double t49479 = b4f*t49448*t49449;
            double t49480 = b2f*c*t49444;
            double t49481 = t49480+t49477+t49478+t49479;
            double t49482 = 1.0/t49481;
            double t49483 = t49482*t49476*(1.0/2.0);
            double t49484 = t49483+1.0;
            double t49485 = log(t49484);
            double t49486 = a1f*c*t49444;
            double t49487 = t49486+1.0;
            double t49488 = c0f*t49485*t49487*2.0;
            double t49489 = c0p*t49461*t49459*2.0;
            double t49490 = gamma_bb[index]*gcaa*t49467*4.0;
            double t49491 = gamma_bb[index]*gcaa*t49462*t49463*t49468*4.0;
            double t49492 = t49462*t49463*t49469*6.0;
            double t49493 = t49464*t49465*t49466;
            double t49494 = t49490+t49491+t49492+t49493+1.0;
            double t49495 = 1.0/t49494;
            double t49496 = gamma_bb[index]*gcaa*t49467;
            double t49497 = t49496+1.0;
            double t49498 = 1.0/t49497;
            double t49499 = gamma_bb[index]*gcaa*t49467*3.0;
            double t49500 = gamma_bb[index]*gcaa*t49462*t49463*t49468;
            double t49501 = t49462*t49463*t49469*3.0;
            double t49502 = t49500+t49501+t49499+1.0;
            double t49503 = 1.0/t49502;
            double t49504 = gamma_bb[index]*gcaa*t49467*2.0;
            double t49505 = t49462*t49463*t49469;
            double t49506 = t49504+t49505+1.0;
            double t49507 = 1.0/t49506;
            double t49508 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t49509 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t49510 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t49511 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t49512 = gx*gx;
            double t49513 = t49512*t49512;
            double t49514 = gamma_bb[index]*gx*t49467*4.0;
            double t49515 = gamma_bb[index]*gx*t49512*t49462*t49468*4.0;
            double t49516 = t49512*t49462*t49469*6.0;
            double t49517 = t49513*t49464*t49466;
            double t49518 = t49514+t49515+t49516+t49517+1.0;
            double t49519 = 1.0/t49518;
            double t49520 = gamma_bb[index]*gx*t49467;
            double t49521 = t49520+1.0;
            double t49522 = 1.0/t49521;
            double t49523 = gamma_bb[index]*gx*t49467*3.0;
            double t49524 = gamma_bb[index]*gx*t49512*t49462*t49468;
            double t49525 = t49512*t49462*t49469*3.0;
            double t49526 = t49523+t49524+t49525+1.0;
            double t49527 = 1.0/t49526;
            double t49528 = gamma_bb[index]*gx*t49467*2.0;
            double t49529 = t49512*t49462*t49469;
            double t49530 = t49528+t49529+1.0;
            double t49531 = 1.0/t49530;
            double t49532 = 1.0/pow(rho_b[index],4.0/3.0);
            double t49533 = 1.0/pow(rho_b[index],5.0/3.0);
            double t49534 = 1.0/sqrt(t49445);
            double t49535 = 1.0/t49458;
            double t49536 = 1.0/(t49455*t49455);
            double t49537 = b4p*t49533*t49448*(2.0/3.0);
            double t49538 = b2p*c*t49532*(1.0/3.0);
            double t49539 = b1p*c*t49532*t49534*(1.0/6.0);
            double t49540 = b3p*c*t49532*t49446*(1.0/2.0);
            double t49541 = t49540+t49537+t49538+t49539;
            double t49542 = t49541*t49461*t49535*t49536;
            double t49543 = ccaa4*t49464*t49465*t49466*t49495;
            double t49544 = ccaa1*gamma_bb[index]*gcaa*t49467*t49498;
            double t49545 = ccaa3*gamma_bb[index]*gcaa*t49503*t49462*t49463*t49468;
            double t49546 = ccaa2*t49462*t49507*t49463*t49469;
            double t49547 = ccaa0+t49543+t49544+t49545+t49546;
            v_rho_b_[index] = -t49547*(t49489+t49472*t49475*(t49488-c0p*t49461*t49459*2.0))+rho_b[index]*t49547* \
               (-t49542+t49472*t49475*(t49542-(1.0/(t49481*t49481)*t49487*(b2f*c*t49532*(1.0/3.0)+b4f*t49533*t49448* \
               (2.0/3.0)+b1f*c*t49532*t49534*(1.0/6.0)+b3f*c*t49532*t49446*(1.0/2.0)))/t49484+a1f*c*c0f*t49532*t49485* \
               (2.0/3.0)-a1p*c*c0p*t49532*t49459*(2.0/3.0))+a1p*c*c0p*t49532*t49459*(2.0/3.0))+c0*pow(rho_b[index],1.0/ \
               3.0)*(cx0+cx1*gamma_bb[index]*gx*t49522*t49467+cx2*t49512*t49531*t49462*t49469+cx4*t49513*t49464*t49519* \
               t49466+cx3*gamma_bb[index]*gx*t49512*t49462*t49527*t49468)*(4.0/3.0)+rho_b[index]*(t49489+t49472*t49475* \
               (t49488-t49489))*(ccaa1*gamma_bb[index]*gcaa*t49509*t49498*(8.0/3.0)+ccaa2*t49462*t49507*t49463*t49508* \
               (1.6E1/3.0)+ccaa4*t49511*t49464*t49465*t49495*(3.2E1/3.0)-ccaa1*t49462*t49463*t49508*1.0/(t49497*t49497) \
               *(8.0/3.0)-ccaa2*1.0/(t49506*t49506)*t49462*t49463*t49469*(gamma_bb[index]*gcaa*t49509*(1.6E1/3.0) \
               +t49462*t49463*t49508*(1.6E1/3.0))-ccaa4*t49464*t49465*t49466*1.0/(t49494*t49494)*(gamma_bb[index]* \
               gcaa*t49509*(3.2E1/3.0)+t49511*t49464*t49465*(3.2E1/3.0)+t49462*t49463*t49508*3.2E1+gamma_bb[index]* \
               gcaa*t49510*t49462*t49463*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t49510*t49503*t49462*t49463*8.0-ccaa3* \
               gamma_bb[index]*gcaa*1.0/(t49502*t49502)*t49462*t49463*t49468*(gamma_bb[index]*gcaa*t49509*8.0+t49462* \
               t49463*t49508*1.6E1+gamma_bb[index]*gcaa*t49510*t49462*t49463*8.0))-c0*pow(rho_b[index],4.0/3.0)*(cx1* \
               gamma_bb[index]*gx*t49522*t49509*(8.0/3.0)+cx2*t49512*t49531*t49462*t49508*(1.6E1/3.0)+cx4*t49511* \
               t49513*t49464*t49519*(3.2E1/3.0)-cx1*t49512*1.0/(t49521*t49521)*t49462*t49508*(8.0/3.0)-cx2*t49512* \
               1.0/(t49530*t49530)*t49462*t49469*(gamma_bb[index]*gx*t49509*(1.6E1/3.0)+t49512*t49462*t49508*(1.6E1/ \
               3.0))-cx4*t49513*t49464*1.0/(t49518*t49518)*t49466*(gamma_bb[index]*gx*t49509*(3.2E1/3.0)+t49511*t49513* \
               t49464*(3.2E1/3.0)+t49512*t49462*t49508*3.2E1+gamma_bb[index]*gx*t49510*t49512*t49462*3.2E1)+cx3*gamma_bb[index]* \
               gx*t49510*t49512*t49462*t49527*8.0-cx3*gamma_bb[index]*gx*t49512*t49462*1.0/(t49526*t49526)*t49468* \
               (gamma_bb[index]*gx*t49509*8.0+t49512*t49462*t49508*1.6E1+gamma_bb[index]*gx*t49510*t49512*t49462* \
               8.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t46500 = 1.0/pow(rho_a[index],1.0/3.0);
                double t46501 = c*t46500;
                double t46502 = sqrt(t46501);
                double t46503 = pow(t46501,3.0/2.0);
                double t46504 = c*c;
                double t46505 = 1.0/pow(rho_a[index],2.0/3.0);
                double t46506 = 1.0/c0p;
                double t46507 = b1p*t46502;
                double t46508 = b3p*t46503;
                double t46509 = b4p*t46504*t46505;
                double t46510 = b2p*c*t46500;
                double t46511 = t46510+t46507+t46508+t46509;
                double t46512 = 1.0/t46511;
                double t46513 = t46512*t46506*(1.0/2.0);
                double t46514 = t46513+1.0;
                double t46515 = log(t46514);
                double t46516 = a1p*c*t46500;
                double t46517 = t46516+1.0;
                double t46518 = pow(2.0,1.0/3.0);
                double t46519 = t46518*2.0;
                double t46520 = t46519-2.0;
                double t46521 = two_13*2.0;
                double t46522 = t46521-2.0;
                double t46523 = 1.0/t46522;
                double t46524 = 1.0/c0f;
                double t46525 = 1.0/pow(rho_b[index],1.0/3.0);
                double t46526 = c*t46525;
                double t46527 = sqrt(t46526);
                double t46528 = pow(t46526,3.0/2.0);
                double t46529 = 1.0/pow(rho_b[index],2.0/3.0);
                double t46530 = b1p*t46527;
                double t46531 = b3p*t46528;
                double t46532 = b4p*t46504*t46529;
                double t46533 = b2p*c*t46525;
                double t46534 = t46530+t46531+t46532+t46533;
                double t46535 = 1.0/t46534;
                double t46536 = t46506*t46535*(1.0/2.0);
                double t46537 = t46536+1.0;
                double t46538 = log(t46537);
                double t46539 = a1p*c*t46525;
                double t46540 = t46539+1.0;
                double t46541 = c0p*t46540*t46538*2.0;
                double t46542 = rho_a[index]+rho_b[index];
                double t46543 = 1.0/pow(t46542,1.0/3.0);
                double t46544 = c*t46543;
                double t46545 = sqrt(t46544);
                double t46546 = pow(t46544,3.0/2.0);
                double t46547 = 1.0/pow(t46542,2.0/3.0);
                double t46548 = b1p*t46545;
                double t46549 = b3p*t46546;
                double t46550 = b4p*t46504*t46547;
                double t46551 = b2p*c*t46543;
                double t46552 = t46550+t46551+t46548+t46549;
                double t46553 = 1.0/t46552;
                double t46554 = t46506*t46553*(1.0/2.0);
                double t46555 = t46554+1.0;
                double t46556 = log(t46555);
                double t46557 = a1p*c*t46543;
                double t46558 = t46557+1.0;
                double t46559 = c0p*t46556*t46558*2.0;
                double t46560 = rho_a[index]-rho_b[index];
                double t46561 = t46560*t46560;
                double t46562 = 1.0/t46542;
                double t46563 = t46560*t46562;
                double t46564 = 1.0/(t46542*t46542*t46542*t46542);
                double t46565 = t46561*t46561;
                double t46566 = t46563+1.0;
                double t46567 = pow(t46566,4.0/3.0);
                double t46568 = -t46563+1.0;
                double t46569 = pow(t46568,4.0/3.0);
                double t46570 = t46567+t46569-2.0;
                double t46571 = 1.0/pow(rho_a[index],8.0/3.0);
                double t46572 = gamma_aa[index]*t46571*(1.0/2.0);
                double t46573 = 1.0/pow(rho_b[index],8.0/3.0);
                double t46574 = gamma_bb[index]*t46573*(1.0/2.0);
                double t46575 = t46572+t46574;
                double t46576 = gcab*t46575;
                double t46577 = t46576+1.0;
                double t46578 = gcab*gcab;
                double t46579 = t46575*t46575;
                double t46580 = t46578*t46578;
                double t46581 = t46579*t46579;
                double t46582 = t46578*t46579;
                double t46583 = gcab*t46575*2.0;
                double t46584 = t46582+t46583+1.0;
                double t46585 = t46578*t46579*3.0;
                double t46586 = gcab*t46575*t46578*t46579;
                double t46587 = gcab*t46575*3.0;
                double t46588 = t46585+t46586+t46587+1.0;
                double t46589 = t46578*t46579*6.0;
                double t46590 = gcab*t46575*t46578*t46579*4.0;
                double t46591 = t46580*t46581;
                double t46592 = gcab*t46575*4.0;
                double t46593 = t46590+t46591+t46592+t46589+1.0;
                double t46594 = c0p*t46515*t46517*2.0;
                double t46595 = gamma_aa[index]*gamma_aa[index];
                double t46596 = gx*gx;
                double t46597 = t46596*t46596;
                double t46598 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t46599 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t46600 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t46601 = gamma_aa[index]*gx*t46571;
                double t46602 = t46601+1.0;
                double t46603 = gamma_aa[index]*gx*t46571*3.0;
                double t46604 = gamma_aa[index]*gx*t46600*t46595*t46596;
                double t46605 = t46595*t46596*t46599*3.0;
                double t46606 = t46603+t46604+t46605+1.0;
                double t46607 = t46595*t46595;
                double t46608 = gamma_aa[index]*gx*t46571*4.0;
                double t46609 = gamma_aa[index]*gx*t46600*t46595*t46596*4.0;
                double t46610 = t46595*t46596*t46599*6.0;
                double t46611 = t46607*t46597*t46598;
                double t46612 = t46610+t46611+t46608+t46609+1.0;
                double t46613 = gamma_aa[index]*gx*t46571*2.0;
                double t46614 = t46595*t46596*t46599;
                double t46615 = t46613+t46614+1.0;
                double t46616 = b1f*t46502;
                double t46617 = b3f*t46503;
                double t46618 = b4f*t46504*t46505;
                double t46619 = b2f*c*t46500;
                double t46620 = t46616+t46617+t46618+t46619;
                double t46621 = 1.0/t46620;
                double t46622 = t46621*t46524*(1.0/2.0);
                double t46623 = t46622+1.0;
                double t46624 = log(t46623);
                double t46625 = a1f*c*t46500;
                double t46626 = t46625+1.0;
                double t46627 = t46594-c0f*t46624*t46626*2.0;
                double t46628 = t46594-t46520*t46523*t46627;
                double t46629 = gcaa*gcaa;
                double t46630 = t46629*t46629;
                double t46631 = gamma_aa[index]*gcaa*t46571;
                double t46632 = t46631+1.0;
                double t46633 = gamma_aa[index]*gcaa*t46571*3.0;
                double t46634 = gamma_aa[index]*gcaa*t46600*t46629*t46595;
                double t46635 = t46629*t46595*t46599*3.0;
                double t46636 = t46633+t46634+t46635+1.0;
                double t46637 = gamma_aa[index]*gcaa*t46571*4.0;
                double t46638 = gamma_aa[index]*gcaa*t46600*t46629*t46595*4.0;
                double t46639 = t46629*t46595*t46599*6.0;
                double t46640 = t46630*t46607*t46598;
                double t46641 = t46640+t46637+t46638+t46639+1.0;
                double t46642 = gamma_aa[index]*gcaa*t46571*2.0;
                double t46643 = t46629*t46595*t46599;
                double t46644 = t46642+t46643+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t46628+rho_b[index]*(t46541-t46520*t46523*(t46541-c0f*log((t46524* \
                   (1.0/2.0))/(b1f*t46527+b3f*t46528+b2f*c*t46525+b4f*t46504*t46529)+1.0)*(a1f*c*t46525+1.0)*2.0))-t46542* \
                   (t46559-t46523*t46570*t46564*t46565*(t46559-c0f*log((t46524*(1.0/2.0))/(b1f*t46545+b3f*t46546+b2f* \
                   c*t46543+b4f*t46504*t46547)+1.0)*(a1f*c*t46543+1.0)*2.0)+(Aa*t46523*t46570*log((1.0/2.0)/(Aa*(b1a* \
                   t46545+b3a*t46546+b2a*c*t46543+b4a*t46504*t46547))+1.0)*(t46564*t46565-1.0)*(a1a*c*t46543+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t46571*(1.0/2.0))/t46577-ccab4*t46580*t46581*1.0/(t46593*t46593)*(gcab*t46571* \
                   2.0+t46571*t46575*t46578*6.0+gcab*t46571*t46578*t46579*6.0+t46571*t46580*t46575*t46579*2.0)-ccab2* \
                   1.0/(t46584*t46584)*t46578*t46579*(gcab*t46571+t46571*t46575*t46578)+(ccab2*t46571*t46575*t46578)/ \
                   t46584-ccab1*t46571*t46575*1.0/(t46577*t46577)*t46578*(1.0/2.0)+(ccab3*gcab*t46571*t46578*t46579*(3.0/ \
                   2.0))/t46588+(ccab4*t46571*t46580*t46575*t46579*2.0)/t46593-ccab3*gcab*t46575*t46578*t46579*1.0/(t46588* \
                   t46588)*(gcab*t46571*(3.0/2.0)+t46571*t46575*t46578*3.0+gcab*t46571*t46578*t46579*(3.0/2.0)))-rho_a[index]* \
                   t46628*((ccaa1*gcaa*t46571)/t46632-ccaa1*gamma_aa[index]*1.0/(t46632*t46632)*t46629*t46599+(ccaa2* \
                   gamma_aa[index]*t46629*t46599*2.0)/t46644-ccaa2*1.0/(t46644*t46644)*t46629*t46595*t46599*(gcaa*t46571* \
                   2.0+gamma_aa[index]*t46629*t46599*2.0)+(ccaa4*gamma_aa[index]*t46630*t46595*t46598*4.0)/t46641+(ccaa3* \
                   gcaa*t46600*t46629*t46595*3.0)/t46636-ccaa4*t46630*1.0/(t46641*t46641)*t46607*t46598*(gcaa*t46571* \
                   4.0+gamma_aa[index]*t46629*t46599*1.2E1+gamma_aa[index]*t46630*t46595*t46598*4.0+gcaa*t46600*t46629* \
                   t46595*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t46600*1.0/(t46636*t46636)*t46629*t46595*(gcaa*t46571*3.0+ \
                   gamma_aa[index]*t46629*t46599*6.0+gcaa*t46600*t46629*t46595*3.0))+c0*pow(rho_a[index],4.0/3.0)*((cx1* \
                   gx*t46571)/t46602-cx1*gamma_aa[index]*1.0/(t46602*t46602)*t46596*t46599+(cx2*gamma_aa[index]*t46596* \
                   t46599*2.0)/t46615-cx2*1.0/(t46615*t46615)*t46595*t46596*t46599*(gx*t46571*2.0+gamma_aa[index]*t46596* \
                   t46599*2.0)+(cx4*gamma_aa[index]*t46595*t46597*t46598*4.0)/t46612+(cx3*gx*t46600*t46595*t46596*3.0) \
                   /t46606-cx4*1.0/(t46612*t46612)*t46607*t46597*t46598*(gx*t46571*4.0+gamma_aa[index]*t46596*t46599* \
                   1.2E1+gamma_aa[index]*t46595*t46597*t46598*4.0+gx*t46600*t46595*t46596*1.2E1)-cx3*gamma_aa[index]* \
                   gx*t46600*1.0/(t46606*t46606)*t46595*t46596*(gx*t46571*3.0+gamma_aa[index]*t46596*t46599*6.0+gx*t46600* \
                   t46595*t46596*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t50188 = 1.0/pow(rho_a[index],8.0/3.0);
                double t50189 = gamma_aa[index]*gamma_aa[index];
                double t50190 = gx*gx;
                double t50191 = t50190*t50190;
                double t50192 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t50193 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t50194 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t50195 = gamma_aa[index]*gx*t50188;
                double t50196 = t50195+1.0;
                double t50197 = gamma_aa[index]*gx*t50188*3.0;
                double t50198 = gamma_aa[index]*gx*t50190*t50194*t50189;
                double t50199 = t50190*t50193*t50189*3.0;
                double t50200 = t50197+t50198+t50199+1.0;
                double t50201 = t50189*t50189;
                double t50202 = gamma_aa[index]*gx*t50188*4.0;
                double t50203 = gamma_aa[index]*gx*t50190*t50194*t50189*4.0;
                double t50204 = t50190*t50193*t50189*6.0;
                double t50205 = t50201*t50191*t50192;
                double t50206 = t50202+t50203+t50204+t50205+1.0;
                double t50207 = gamma_aa[index]*gx*t50188*2.0;
                double t50208 = t50190*t50193*t50189;
                double t50209 = t50207+t50208+1.0;
                double t50210 = 1.0/pow(rho_a[index],1.0/3.0);
                double t50211 = c*t50210;
                double t50212 = sqrt(t50211);
                double t50213 = pow(t50211,3.0/2.0);
                double t50214 = c*c;
                double t50215 = 1.0/pow(rho_a[index],2.0/3.0);
                double t50216 = 1.0/c0p;
                double t50217 = b1p*t50212;
                double t50218 = b3p*t50213;
                double t50219 = b4p*t50214*t50215;
                double t50220 = b2p*c*t50210;
                double t50221 = t50220+t50217+t50218+t50219;
                double t50222 = 1.0/t50221;
                double t50223 = t50222*t50216*(1.0/2.0);
                double t50224 = t50223+1.0;
                double t50225 = log(t50224);
                double t50226 = a1p*c*t50210;
                double t50227 = t50226+1.0;
                double t50228 = gcaa*gcaa;
                double t50229 = t50228*t50228;
                double t50230 = gamma_aa[index]*gcaa*t50188;
                double t50231 = t50230+1.0;
                double t50232 = gamma_aa[index]*gcaa*t50188*3.0;
                double t50233 = gamma_aa[index]*gcaa*t50228*t50194*t50189;
                double t50234 = t50228*t50193*t50189*3.0;
                double t50235 = t50232+t50233+t50234+1.0;
                double t50236 = gamma_aa[index]*gcaa*t50188*4.0;
                double t50237 = gamma_aa[index]*gcaa*t50228*t50194*t50189*4.0;
                double t50238 = t50228*t50193*t50189*6.0;
                double t50239 = t50201*t50192*t50229;
                double t50240 = t50236+t50237+t50238+t50239+1.0;
                double t50241 = gamma_aa[index]*gcaa*t50188*2.0;
                double t50242 = t50228*t50193*t50189;
                double t50243 = t50241+t50242+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t50212+ \
                   b3f*t50213+b2f*c*t50210+b4f*t50214*t50215))+1.0)*(a1f*c*t50210+1.0)*2.0-c0p*t50225*t50227*2.0))/(two_13* \
                   2.0-2.0)+c0p*t50225*t50227*2.0)*((ccaa1*gcaa*t50188)/t50231-ccaa1*gamma_aa[index]*1.0/(t50231*t50231) \
                   *t50228*t50193+(ccaa2*gamma_aa[index]*t50228*t50193*2.0)/t50243-ccaa2*1.0/(t50243*t50243)*t50228*t50193* \
                   t50189*(gcaa*t50188*2.0+gamma_aa[index]*t50228*t50193*2.0)+(ccaa4*gamma_aa[index]*t50192*t50229*t50189* \
                   4.0)/t50240+(ccaa3*gcaa*t50228*t50194*t50189*3.0)/t50235-ccaa4*t50201*1.0/(t50240*t50240)*t50192*t50229* \
                   (gcaa*t50188*4.0+gamma_aa[index]*t50228*t50193*1.2E1+gamma_aa[index]*t50192*t50229*t50189*4.0+gcaa* \
                   t50228*t50194*t50189*1.2E1)-ccaa3*gamma_aa[index]*gcaa*1.0/(t50235*t50235)*t50228*t50194*t50189*(gcaa* \
                   t50188*3.0+gamma_aa[index]*t50228*t50193*6.0+gcaa*t50228*t50194*t50189*3.0))+c0*pow(rho_a[index],4.0/ \
                   3.0)*((cx1*gx*t50188)/t50196-cx1*gamma_aa[index]*t50190*t50193*1.0/(t50196*t50196)+(cx2*gamma_aa[index]* \
                   t50190*t50193*2.0)/t50209-cx2*t50190*1.0/(t50209*t50209)*t50193*t50189*(gx*t50188*2.0+gamma_aa[index]* \
                   t50190*t50193*2.0)+(cx4*gamma_aa[index]*t50191*t50192*t50189*4.0)/t50206+(cx3*gx*t50190*t50194*t50189* \
                   3.0)/t50200-cx4*t50201*1.0/(t50206*t50206)*t50191*t50192*(gx*t50188*4.0+gamma_aa[index]*t50190*t50193* \
                   1.2E1+gamma_aa[index]*t50191*t50192*t50189*4.0+gx*t50190*t50194*t50189*1.2E1)-cx3*gamma_aa[index]* \
                   gx*1.0/(t50200*t50200)*t50190*t50194*t50189*(gx*t50188*3.0+gamma_aa[index]*t50190*t50193*6.0+gx*t50190* \
                   t50194*t50189*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t46647 = 1.0/pow(rho_a[index],1.0/3.0);
                double t46648 = c*t46647;
                double t46649 = sqrt(t46648);
                double t46650 = pow(t46648,3.0/2.0);
                double t46651 = c*c;
                double t46652 = 1.0/pow(rho_a[index],2.0/3.0);
                double t46653 = 1.0/c0p;
                double t46654 = b1p*t46649;
                double t46655 = b3p*t46650;
                double t46656 = b4p*t46651*t46652;
                double t46657 = b2p*c*t46647;
                double t46658 = t46654+t46655+t46656+t46657;
                double t46659 = 1.0/t46658;
                double t46660 = t46653*t46659*(1.0/2.0);
                double t46661 = t46660+1.0;
                double t46662 = log(t46661);
                double t46663 = a1p*c*t46647;
                double t46664 = t46663+1.0;
                double t46665 = pow(2.0,1.0/3.0);
                double t46666 = t46665*2.0;
                double t46667 = t46666-2.0;
                double t46668 = two_13*2.0;
                double t46669 = t46668-2.0;
                double t46670 = 1.0/t46669;
                double t46671 = 1.0/c0f;
                double t46672 = 1.0/pow(rho_b[index],1.0/3.0);
                double t46673 = c*t46672;
                double t46674 = sqrt(t46673);
                double t46675 = pow(t46673,3.0/2.0);
                double t46676 = 1.0/pow(rho_b[index],2.0/3.0);
                double t46677 = b1p*t46674;
                double t46678 = b3p*t46675;
                double t46679 = b4p*t46651*t46676;
                double t46680 = b2p*c*t46672;
                double t46681 = t46680+t46677+t46678+t46679;
                double t46682 = 1.0/t46681;
                double t46683 = t46653*t46682*(1.0/2.0);
                double t46684 = t46683+1.0;
                double t46685 = log(t46684);
                double t46686 = a1p*c*t46672;
                double t46687 = t46686+1.0;
                double t46688 = c0p*t46685*t46687*2.0;
                double t46689 = rho_a[index]+rho_b[index];
                double t46690 = 1.0/pow(t46689,1.0/3.0);
                double t46691 = c*t46690;
                double t46692 = sqrt(t46691);
                double t46693 = pow(t46691,3.0/2.0);
                double t46694 = 1.0/pow(t46689,2.0/3.0);
                double t46695 = b1p*t46692;
                double t46696 = b3p*t46693;
                double t46697 = b4p*t46651*t46694;
                double t46698 = b2p*c*t46690;
                double t46699 = t46695+t46696+t46697+t46698;
                double t46700 = 1.0/t46699;
                double t46701 = t46700*t46653*(1.0/2.0);
                double t46702 = t46701+1.0;
                double t46703 = log(t46702);
                double t46704 = a1p*c*t46690;
                double t46705 = t46704+1.0;
                double t46706 = c0p*t46703*t46705*2.0;
                double t46707 = rho_a[index]-rho_b[index];
                double t46708 = t46707*t46707;
                double t46709 = 1.0/t46689;
                double t46710 = t46707*t46709;
                double t46711 = 1.0/(t46689*t46689*t46689*t46689);
                double t46712 = t46708*t46708;
                double t46713 = t46710+1.0;
                double t46714 = pow(t46713,4.0/3.0);
                double t46715 = -t46710+1.0;
                double t46716 = pow(t46715,4.0/3.0);
                double t46717 = t46714+t46716-2.0;
                double t46718 = 1.0/pow(rho_b[index],8.0/3.0);
                double t46719 = 1.0/pow(rho_a[index],8.0/3.0);
                double t46720 = gamma_aa[index]*t46719*(1.0/2.0);
                double t46721 = gamma_bb[index]*t46718*(1.0/2.0);
                double t46722 = t46720+t46721;
                double t46723 = gcab*t46722;
                double t46724 = t46723+1.0;
                double t46725 = gcab*gcab;
                double t46726 = t46722*t46722;
                double t46727 = t46725*t46725;
                double t46728 = t46726*t46726;
                double t46729 = t46725*t46726;
                double t46730 = gcab*t46722*2.0;
                double t46731 = t46730+t46729+1.0;
                double t46732 = t46725*t46726*3.0;
                double t46733 = gcab*t46722*t46725*t46726;
                double t46734 = gcab*t46722*3.0;
                double t46735 = t46732+t46733+t46734+1.0;
                double t46736 = t46725*t46726*6.0;
                double t46737 = gcab*t46722*t46725*t46726*4.0;
                double t46738 = t46727*t46728;
                double t46739 = gcab*t46722*4.0;
                double t46740 = t46736+t46737+t46738+t46739+1.0;
                double t46741 = c0p*t46662*t46664*2.0;
                double t46742 = gamma_bb[index]*gamma_bb[index];
                double t46743 = gx*gx;
                double t46744 = t46743*t46743;
                double t46745 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t46746 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t46747 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t46748 = gamma_bb[index]*gx*t46718;
                double t46749 = t46748+1.0;
                double t46750 = gamma_bb[index]*gx*t46718*3.0;
                double t46751 = gamma_bb[index]*gx*t46742*t46743*t46747;
                double t46752 = t46742*t46743*t46746*3.0;
                double t46753 = t46750+t46751+t46752+1.0;
                double t46754 = t46742*t46742;
                double t46755 = gamma_bb[index]*gx*t46718*4.0;
                double t46756 = gamma_bb[index]*gx*t46742*t46743*t46747*4.0;
                double t46757 = t46742*t46743*t46746*6.0;
                double t46758 = t46744*t46745*t46754;
                double t46759 = t46755+t46756+t46757+t46758+1.0;
                double t46760 = gamma_bb[index]*gx*t46718*2.0;
                double t46761 = t46742*t46743*t46746;
                double t46762 = t46760+t46761+1.0;
                double t46763 = b1f*t46674;
                double t46764 = b3f*t46675;
                double t46765 = b4f*t46651*t46676;
                double t46766 = b2f*c*t46672;
                double t46767 = t46763+t46764+t46765+t46766;
                double t46768 = 1.0/t46767;
                double t46769 = t46671*t46768*(1.0/2.0);
                double t46770 = t46769+1.0;
                double t46771 = log(t46770);
                double t46772 = a1f*c*t46672;
                double t46773 = t46772+1.0;
                double t46774 = t46688-c0f*t46771*t46773*2.0;
                double t46775 = t46688-t46670*t46774*t46667;
                double t46776 = gcaa*gcaa;
                double t46777 = t46776*t46776;
                double t46778 = gamma_bb[index]*gcaa*t46718;
                double t46779 = t46778+1.0;
                double t46780 = gamma_bb[index]*gcaa*t46718*3.0;
                double t46781 = gamma_bb[index]*gcaa*t46742*t46747*t46776;
                double t46782 = t46742*t46746*t46776*3.0;
                double t46783 = t46780+t46781+t46782+1.0;
                double t46784 = gamma_bb[index]*gcaa*t46718*4.0;
                double t46785 = gamma_bb[index]*gcaa*t46742*t46747*t46776*4.0;
                double t46786 = t46742*t46746*t46776*6.0;
                double t46787 = t46745*t46754*t46777;
                double t46788 = t46784+t46785+t46786+t46787+1.0;
                double t46789 = gamma_bb[index]*gcaa*t46718*2.0;
                double t46790 = t46742*t46746*t46776;
                double t46791 = t46790+t46789+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t46775+rho_a[index]*(t46741-t46670*t46667*(t46741-c0f*log((t46671* \
                   (1.0/2.0))/(b1f*t46649+b3f*t46650+b2f*c*t46647+b4f*t46651*t46652)+1.0)*(a1f*c*t46647+1.0)*2.0))-t46689* \
                   (t46706-t46711*t46712*t46670*t46717*(t46706-c0f*log((t46671*(1.0/2.0))/(b1f*t46692+b3f*t46693+b2f* \
                   c*t46690+b4f*t46651*t46694)+1.0)*(a1f*c*t46690+1.0)*2.0)+(Aa*t46670*t46717*log((1.0/2.0)/(Aa*(b1a* \
                   t46692+b3a*t46693+b2a*c*t46690+b4a*t46651*t46694))+1.0)*(t46711*t46712-1.0)*(a1a*c*t46690+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t46718*(1.0/2.0))/t46724-ccab4*1.0/(t46740*t46740)*t46727*t46728*(gcab*t46718* \
                   2.0+t46722*t46725*t46718*6.0+gcab*t46725*t46726*t46718*6.0+t46722*t46726*t46718*t46727*2.0)-ccab2* \
                   1.0/(t46731*t46731)*t46725*t46726*(gcab*t46718+t46722*t46725*t46718)+(ccab2*t46722*t46725*t46718)/ \
                   t46731-ccab1*t46722*1.0/(t46724*t46724)*t46725*t46718*(1.0/2.0)+(ccab3*gcab*t46725*t46726*t46718*(3.0/ \
                   2.0))/t46735+(ccab4*t46722*t46726*t46718*t46727*2.0)/t46740-ccab3*gcab*t46722*t46725*t46726*1.0/(t46735* \
                   t46735)*(gcab*t46718*(3.0/2.0)+t46722*t46725*t46718*3.0+gcab*t46725*t46726*t46718*(3.0/2.0)))-rho_b[index]* \
                   t46775*((ccaa1*gcaa*t46718)/t46779+(ccaa2*gamma_bb[index]*t46746*t46776*2.0)/t46791-ccaa1*gamma_bb[index]* \
                   t46746*t46776*1.0/(t46779*t46779)-ccaa2*t46742*t46746*1.0/(t46791*t46791)*t46776*(gcaa*t46718*2.0+ \
                   gamma_bb[index]*t46746*t46776*2.0)+(ccaa4*gamma_bb[index]*t46742*t46745*t46777*4.0)/t46788+(ccaa3* \
                   gcaa*t46742*t46747*t46776*3.0)/t46783-ccaa4*t46745*t46754*t46777*1.0/(t46788*t46788)*(gcaa*t46718* \
                   4.0+gamma_bb[index]*t46746*t46776*1.2E1+gamma_bb[index]*t46742*t46745*t46777*4.0+gcaa*t46742*t46747* \
                   t46776*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t46742*t46747*1.0/(t46783*t46783)*t46776*(gcaa*t46718*3.0+ \
                   gamma_bb[index]*t46746*t46776*6.0+gcaa*t46742*t46747*t46776*3.0))+c0*pow(rho_b[index],4.0/3.0)*((cx1* \
                   gx*t46718)/t46749-cx1*gamma_bb[index]*t46743*t46746*1.0/(t46749*t46749)+(cx2*gamma_bb[index]*t46743* \
                   t46746*2.0)/t46762-cx2*t46742*t46743*1.0/(t46762*t46762)*t46746*(gx*t46718*2.0+gamma_bb[index]*t46743* \
                   t46746*2.0)+(cx4*gamma_bb[index]*t46742*t46744*t46745*4.0)/t46759+(cx3*gx*t46742*t46743*t46747*3.0) \
                   /t46753-cx4*t46744*t46745*t46754*1.0/(t46759*t46759)*(gx*t46718*4.0+gamma_bb[index]*t46743*t46746* \
                   1.2E1+gamma_bb[index]*t46742*t46744*t46745*4.0+gx*t46742*t46743*t46747*1.2E1)-cx3*gamma_bb[index]* \
                   gx*t46742*t46743*1.0/(t46753*t46753)*t46747*(gx*t46718*3.0+gamma_bb[index]*t46743*t46746*6.0+gx*t46742* \
                   t46743*t46747*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t49551 = 1.0/pow(rho_b[index],8.0/3.0);
                double t49552 = gamma_bb[index]*gamma_bb[index];
                double t49553 = gx*gx;
                double t49554 = t49553*t49553;
                double t49555 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t49556 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t49557 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49558 = gamma_bb[index]*gx*t49551;
                double t49559 = t49558+1.0;
                double t49560 = gamma_bb[index]*gx*t49551*3.0;
                double t49561 = gamma_bb[index]*gx*t49552*t49553*t49557;
                double t49562 = t49552*t49553*t49556*3.0;
                double t49563 = t49560+t49561+t49562+1.0;
                double t49564 = t49552*t49552;
                double t49565 = gamma_bb[index]*gx*t49551*4.0;
                double t49566 = gamma_bb[index]*gx*t49552*t49553*t49557*4.0;
                double t49567 = t49552*t49553*t49556*6.0;
                double t49568 = t49554*t49555*t49564;
                double t49569 = t49565+t49566+t49567+t49568+1.0;
                double t49570 = gamma_bb[index]*gx*t49551*2.0;
                double t49571 = t49552*t49553*t49556;
                double t49572 = t49570+t49571+1.0;
                double t49573 = 1.0/pow(rho_b[index],1.0/3.0);
                double t49574 = c*t49573;
                double t49575 = sqrt(t49574);
                double t49576 = pow(t49574,3.0/2.0);
                double t49577 = c*c;
                double t49578 = 1.0/pow(rho_b[index],2.0/3.0);
                double t49579 = 1.0/c0p;
                double t49580 = b1p*t49575;
                double t49581 = b3p*t49576;
                double t49582 = b4p*t49577*t49578;
                double t49583 = b2p*c*t49573;
                double t49584 = t49580+t49581+t49582+t49583;
                double t49585 = 1.0/t49584;
                double t49586 = t49585*t49579*(1.0/2.0);
                double t49587 = t49586+1.0;
                double t49588 = log(t49587);
                double t49589 = a1p*c*t49573;
                double t49590 = t49589+1.0;
                double t49591 = gcaa*gcaa;
                double t49592 = t49591*t49591;
                double t49593 = gamma_bb[index]*gcaa*t49551;
                double t49594 = t49593+1.0;
                double t49595 = gamma_bb[index]*gcaa*t49551*3.0;
                double t49596 = gamma_bb[index]*gcaa*t49552*t49591*t49557;
                double t49597 = t49552*t49591*t49556*3.0;
                double t49598 = t49595+t49596+t49597+1.0;
                double t49599 = gamma_bb[index]*gcaa*t49551*4.0;
                double t49600 = gamma_bb[index]*gcaa*t49552*t49591*t49557*4.0;
                double t49601 = t49552*t49591*t49556*6.0;
                double t49602 = t49555*t49564*t49592;
                double t49603 = t49600+t49601+t49602+t49599+1.0;
                double t49604 = gamma_bb[index]*gcaa*t49551*2.0;
                double t49605 = t49552*t49591*t49556;
                double t49606 = t49604+t49605+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t49575+ \
                   b3f*t49576+b2f*c*t49573+b4f*t49577*t49578))+1.0)*(a1f*c*t49573+1.0)*2.0-c0p*t49590*t49588*2.0))/(two_13* \
                   2.0-2.0)+c0p*t49590*t49588*2.0)*((ccaa1*gcaa*t49551)/t49594+(ccaa2*gamma_bb[index]*t49591*t49556*2.0) \
                   /t49606-ccaa1*gamma_bb[index]*t49591*t49556*1.0/(t49594*t49594)-ccaa2*t49552*1.0/(t49606*t49606)*t49591* \
                   t49556*(gcaa*t49551*2.0+gamma_bb[index]*t49591*t49556*2.0)+(ccaa4*gamma_bb[index]*t49552*t49555*t49592* \
                   4.0)/t49603+(ccaa3*gcaa*t49552*t49591*t49557*3.0)/t49598-ccaa4*1.0/(t49603*t49603)*t49555*t49564*t49592* \
                   (gcaa*t49551*4.0+gamma_bb[index]*t49591*t49556*1.2E1+gamma_bb[index]*t49552*t49555*t49592*4.0+gcaa* \
                   t49552*t49591*t49557*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t49552*t49591*t49557*1.0/(t49598*t49598)*(gcaa* \
                   t49551*3.0+gamma_bb[index]*t49591*t49556*6.0+gcaa*t49552*t49591*t49557*3.0))+c0*pow(rho_b[index],4.0/ \
                   3.0)*((cx1*gx*t49551)/t49559-cx1*gamma_bb[index]*t49553*t49556*1.0/(t49559*t49559)+(cx2*gamma_bb[index]* \
                   t49553*t49556*2.0)/t49572-cx2*t49552*t49553*1.0/(t49572*t49572)*t49556*(gx*t49551*2.0+gamma_bb[index]* \
                   t49553*t49556*2.0)+(cx4*gamma_bb[index]*t49552*t49554*t49555*4.0)/t49569+(cx3*gx*t49552*t49553*t49557* \
                   3.0)/t49563-cx4*t49554*t49555*t49564*1.0/(t49569*t49569)*(gx*t49551*4.0+gamma_bb[index]*t49553*t49556* \
                   1.2E1+gamma_bb[index]*t49552*t49554*t49555*4.0+gx*t49552*t49553*t49557*1.2E1)-cx3*gamma_bb[index]* \
                   gx*t49552*t49553*1.0/(t49563*t49563)*t49557*(gx*t49551*3.0+gamma_bb[index]*t49553*t49556*6.0+gx*t49552* \
                   t49553*t49557*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t46795 = rho_a[index]+rho_b[index];
            double t46796 = 1.0/pow(t46795,1.0/3.0);
            double t46797 = c*t46796;
            double t46798 = sqrt(t46797);
            double t46799 = b1p*t46798;
            double t46800 = pow(t46797,3.0/2.0);
            double t46801 = b3p*t46800;
            double t46802 = c*c;
            double t46803 = 1.0/pow(t46795,2.0/3.0);
            double t46804 = b4p*t46802*t46803;
            double t46805 = b2p*c*t46796;
            double t46806 = t46801+t46804+t46805+t46799;
            double t46807 = 1.0/pow(t46795,4.0/3.0);
            double t46808 = 1.0/c0p;
            double t46809 = 1.0/t46806;
            double t46810 = t46808*t46809*(1.0/2.0);
            double t46811 = t46810+1.0;
            double t46812 = a1p*c*t46796;
            double t46813 = t46812+1.0;
            double t46814 = rho_a[index]-rho_b[index];
            double t46815 = t46814*t46814;
            double t46816 = 1.0/t46795;
            double t46817 = t46814*t46816;
            double t46818 = two_13*2.0;
            double t46819 = t46818-2.0;
            double t46820 = 1.0/t46819;
            double t46821 = 1.0/c0f;
            double t46822 = b1f*t46798;
            double t46823 = b3f*t46800;
            double t46824 = b4f*t46802*t46803;
            double t46825 = b2f*c*t46796;
            double t46826 = t46822+t46823+t46824+t46825;
            double t46827 = 1.0/t46826;
            double t46828 = t46821*t46827*(1.0/2.0);
            double t46829 = t46828+1.0;
            double t46830 = log(t46829);
            double t46831 = a1f*c*t46796;
            double t46832 = t46831+1.0;
            double t46833 = log(t46811);
            double t46843 = c0f*t46830*t46832*2.0;
            double t46844 = c0p*t46813*t46833*2.0;
            double t46834 = t46843-t46844;
            double t46835 = t46817+1.0;
            double t46836 = pow(t46835,4.0/3.0);
            double t46837 = -t46817+1.0;
            double t46838 = pow(t46837,4.0/3.0);
            double t46839 = t46836+t46838-2.0;
            double t46840 = 1.0/(t46795*t46795);
            double t46871 = t46840*t46814;
            double t46841 = t46816-t46871;
            double t46842 = 1.0/(t46795*t46795*t46795*t46795);
            double t46845 = t46815*t46815;
            double t46846 = 1.0/pow(t46795,5.0/3.0);
            double t46847 = 1.0/sqrt(t46797);
            double t46848 = 1.0/t46811;
            double t46849 = 1.0/(t46806*t46806);
            double t46850 = b4p*t46802*t46846*(2.0/3.0);
            double t46851 = b2p*c*t46807*(1.0/3.0);
            double t46852 = b1p*c*t46807*t46847*(1.0/6.0);
            double t46853 = b3p*c*t46807*t46798*(1.0/2.0);
            double t46854 = t46850+t46851+t46852+t46853;
            double t46855 = t46813*t46854*t46848*t46849;
            double t46856 = 1.0/(t46795*t46795*t46795*t46795*t46795);
            double t46857 = 1.0/d2fz0;
            double t46858 = 1.0/Aa;
            double t46859 = b1a*t46798;
            double t46860 = b3a*t46800;
            double t46861 = b4a*t46802*t46803;
            double t46862 = b2a*c*t46796;
            double t46863 = t46860+t46861+t46862+t46859;
            double t46864 = 1.0/t46863;
            double t46865 = t46864*t46858*(1.0/2.0);
            double t46866 = t46865+1.0;
            double t46867 = log(t46866);
            double t46868 = a1a*c*t46796;
            double t46869 = t46868+1.0;
            double t46870 = pow(t46835,1.0/3.0);
            double t46872 = t46841*t46870*(4.0/3.0);
            double t46873 = pow(t46837,1.0/3.0);
            double t46948 = t46841*t46873*(4.0/3.0);
            double t46874 = t46872-t46948;
            double t46875 = t46842*t46845;
            double t46876 = t46875-1.0;
            double t46877 = 1.0/pow(rho_a[index],1.0/3.0);
            double t46878 = c*t46877;
            double t46879 = sqrt(t46878);
            double t46880 = b1f*t46879;
            double t46881 = pow(t46878,3.0/2.0);
            double t46882 = b3f*t46881;
            double t46883 = 1.0/pow(rho_a[index],2.0/3.0);
            double t46884 = b4f*t46802*t46883;
            double t46885 = b2f*c*t46877;
            double t46886 = t46880+t46882+t46884+t46885;
            double t46887 = 1.0/pow(rho_a[index],4.0/3.0);
            double t46888 = b1p*t46879;
            double t46889 = b3p*t46881;
            double t46890 = b4p*t46802*t46883;
            double t46891 = b2p*c*t46877;
            double t46892 = t46890+t46891+t46888+t46889;
            double t46893 = 1.0/pow(rho_a[index],5.0/3.0);
            double t46894 = 1.0/sqrt(t46878);
            double t46895 = 1.0/t46886;
            double t46896 = t46821*t46895*(1.0/2.0);
            double t46897 = t46896+1.0;
            double t46898 = 1.0/t46892;
            double t46899 = t46808*t46898*(1.0/2.0);
            double t46900 = t46899+1.0;
            double t46901 = a1p*c*t46877;
            double t46902 = t46901+1.0;
            double t46903 = 1.0/t46900;
            double t46904 = 1.0/(t46892*t46892);
            double t46905 = b4p*t46802*t46893*(2.0/3.0);
            double t46906 = b2p*c*t46887*(1.0/3.0);
            double t46907 = b1p*c*t46894*t46887*(1.0/6.0);
            double t46908 = b3p*c*t46887*t46879*(1.0/2.0);
            double t46909 = t46905+t46906+t46907+t46908;
            double t46910 = t46902*t46903*t46904*t46909;
            double t46911 = log(t46900);
            double t46912 = pow(2.0,1.0/3.0);
            double t46913 = t46912*2.0;
            double t46914 = t46913-2.0;
            double t46915 = log(t46897);
            double t46916 = a1f*c*t46877;
            double t46917 = t46916+1.0;
            double t46918 = gcab*gcab;
            double t46922 = 1.0/pow(rho_a[index],8.0/3.0);
            double t46923 = gamma_aa[index]*t46922*(1.0/2.0);
            double t46924 = 1.0/pow(rho_b[index],8.0/3.0);
            double t46925 = gamma_bb[index]*t46924*(1.0/2.0);
            double t46919 = t46923+t46925;
            double t46920 = t46919*t46919;
            double t46921 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t46926 = t46918*t46918;
            double t46927 = t46920*t46920;
            double t46928 = t46920*t46918*6.0;
            double t46929 = gcab*t46920*t46918*t46919*4.0;
            double t46930 = t46926*t46927;
            double t46931 = gcab*t46919*4.0;
            double t46932 = t46930+t46931+t46928+t46929+1.0;
            double t46933 = gcab*t46919;
            double t46934 = t46933+1.0;
            double t46935 = t46920*t46918;
            double t46936 = gcab*t46919*2.0;
            double t46937 = t46935+t46936+1.0;
            double t46938 = t46920*t46918*3.0;
            double t46939 = gcab*t46920*t46918*t46919;
            double t46940 = gcab*t46919*3.0;
            double t46941 = t46940+t46938+t46939+1.0;
            double t46942 = 1.0/t46937;
            double t46943 = 1.0/t46941;
            double t46944 = 1.0/t46934;
            double t46945 = 1.0/t46932;
            double t46946 = 1.0/pow(t46795,7.0/3.0);
            double t46947 = 1.0/pow(t46795,8.0/3.0);
            double t46949 = 1.0/t46829;
            double t46950 = 1.0/(t46826*t46826);
            double t46951 = b4f*t46802*t46846*(2.0/3.0);
            double t46952 = b2f*c*t46807*(1.0/3.0);
            double t46953 = b1f*c*t46807*t46847*(1.0/6.0);
            double t46954 = b3f*c*t46807*t46798*(1.0/2.0);
            double t46955 = t46951+t46952+t46953+t46954;
            double t46956 = a1f*c*c0f*t46830*t46807*(2.0/3.0);
            double t46958 = t46832*t46950*t46955*t46949;
            double t46959 = a1p*c*c0p*t46833*t46807*(2.0/3.0);
            double t46957 = t46855+t46956-t46958-t46959;
            double t46960 = t46854*t46854;
            double t46961 = 1.0/pow(t46797,3.0/2.0);
            double t46962 = b4p*t46802*t46947*(1.0E1/9.0);
            double t46963 = b2p*c*t46946*(4.0/9.0);
            double t46964 = b1p*c*t46847*t46946*(2.0/9.0);
            double t46965 = b3p*c*t46946*t46798*(2.0/3.0);
            double t46966 = b3p*t46802*t46847*t46947*(1.0/1.2E1);
            double t46967 = t46962+t46963+t46964+t46965+t46966-b1p*t46802*t46961*t46947*(1.0/3.6E1);
            double t46968 = 1.0/(t46806*t46806*t46806);
            double t46969 = t46813*t46960*t46848*t46968*2.0;
            double t46970 = t46955*t46955;
            double t46971 = 1.0/(t46811*t46811);
            double t46972 = 1.0/(t46806*t46806*t46806*t46806);
            double t46973 = t46840*2.0;
            double t46974 = 1.0/(t46795*t46795*t46795);
            double t46981 = t46814*t46974*2.0;
            double t46975 = -t46981+t46973;
            double t46976 = t46841*t46841;
            double t46977 = a1p*c*c0p*t46833*t46946*(8.0/9.0);
            double t46978 = 1.0/(t46795*t46795*t46795*t46795*t46795*t46795);
            double t46979 = t46845*t46856*4.0;
            double t46989 = t46814*t46815*t46842*4.0;
            double t46980 = t46979-t46989;
            double t46982 = t46873*t46975*(4.0/3.0);
            double t46983 = 1.0/pow(t46835,2.0/3.0);
            double t46984 = t46983*t46976*(4.0/9.0);
            double t46985 = 1.0/pow(t46837,2.0/3.0);
            double t46986 = t46976*t46985*(4.0/9.0);
            double t46987 = t46982+t46984+t46986-t46870*t46975*(4.0/3.0);
            double t46988 = 1.0/t46866;
            double t46990 = 1.0/(t46863*t46863);
            double t46991 = b4a*t46802*t46846*(2.0/3.0);
            double t46992 = b2a*c*t46807*(1.0/3.0);
            double t46993 = b1a*c*t46807*t46847*(1.0/6.0);
            double t46994 = b3a*c*t46807*t46798*(1.0/2.0);
            double t46995 = t46991+t46992+t46993+t46994;
            double t46996 = t46995*t46995;
            double t46997 = t46813*t46848*t46849*t46967;
            double t46998 = 1.0/t46897;
            double t46999 = b4f*t46802*t46893*(2.0/3.0);
            double t47000 = b2f*c*t46887*(1.0/3.0);
            double t47001 = b1f*c*t46894*t46887*(1.0/6.0);
            double t47002 = b3f*c*t46887*t46879*(1.0/2.0);
            double t47003 = t46999+t47000+t47001+t47002;
            double t47004 = 1.0/(t46886*t46886);
            double t47005 = 1.0/pow(rho_a[index],7.0/3.0);
            double t47006 = 1.0/pow(t46878,3.0/2.0);
            double t47007 = t47003*t47003;
            double t47008 = t46909*t46909;
            double t47009 = 1.0/(t46892*t46892*t46892);
            double t47010 = t46902*t46903*t47008*t47009*2.0;
            double t47011 = b4p*t46802*t46922*(1.0E1/9.0);
            double t47012 = b2p*c*t47005*(4.0/9.0);
            double t47013 = b3p*t46802*t46922*t46894*(1.0/1.2E1);
            double t47014 = b1p*c*t46894*t47005*(2.0/9.0);
            double t47015 = b3p*c*t46879*t47005*(2.0/3.0);
            double t47169 = b1p*t46802*t46922*t47006*(1.0/3.6E1);
            double t47016 = t47011+t47012+t47013+t47014+t47015-t47169;
            double t47017 = 1.0/(t46900*t46900);
            double t47018 = 1.0/(t46892*t46892*t46892*t46892);
            double t47019 = a1p*c*c0p*t46911*t47005*(8.0/9.0);
            double t47020 = a1f*c*c0f*t46915*t46887*(2.0/3.0);
            double t47021 = a1p*c*c0p*t46911*t46887*(2.0/3.0);
            double t47022 = t46813*t46960*t46808*t46971*t46972*(1.0/2.0);
            double t47094 = t46917*t46998*t47003*t47004;
            double t47023 = t46910+t47020-t47021-t47094;
            double t47024 = gamma_aa[index]*gamma_aa[index];
            double t47025 = gcaa*gcaa;
            double t47026 = t47024*t47024;
            double t47027 = t47025*t47025;
            double t47028 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t47029 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t47030 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t47031 = c0f*t46915*t46917*2.0;
            double t47033 = c0p*t46902*t46911*2.0;
            double t47032 = t47031-t47033;
            double t47034 = 1.0/pow(rho_b[index],1.0/3.0);
            double t47035 = c*t47034;
            double t47036 = sqrt(t47035);
            double t47037 = pow(t47035,3.0/2.0);
            double t47038 = 1.0/pow(rho_b[index],2.0/3.0);
            double t47039 = b1p*t47036;
            double t47040 = b3p*t47037;
            double t47041 = b4p*t46802*t47038;
            double t47042 = b2p*c*t47034;
            double t47043 = t47040+t47041+t47042+t47039;
            double t47044 = 1.0/t47043;
            double t47045 = t46808*t47044*(1.0/2.0);
            double t47046 = t47045+1.0;
            double t47047 = log(t47046);
            double t47048 = a1p*c*t47034;
            double t47049 = t47048+1.0;
            double t47050 = c0p*t47047*t47049*2.0;
            double t47051 = t46820*t46842*t46834*t46845*t46839;
            double t47052 = Aa*t46820*t46839*t46857*t46867*t46876*t46869*2.0;
            double t47053 = gamma_aa[index]*gcab*t46921*(1.6E1/3.0);
            double t47054 = gamma_aa[index]*gcab*t46920*t46921*t46918*1.6E1;
            double t47055 = gamma_aa[index]*t46920*t46921*t46926*t46919*(1.6E1/3.0);
            double t47056 = gamma_aa[index]*t46921*t46918*t46919*1.6E1;
            double t47057 = t47053+t47054+t47055+t47056;
            double t47058 = 1.0/(t46934*t46934);
            double t47059 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t47060 = gamma_aa[index]*gcab*t46921*(8.0/3.0);
            double t47061 = gamma_aa[index]*t46921*t46918*t46919*(8.0/3.0);
            double t47062 = t47060+t47061;
            double t47063 = 1.0/(t46941*t46941);
            double t47064 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t47065 = 1.0/(t46932*t46932);
            double t47066 = 1.0/(t46937*t46937);
            double t47067 = gamma_aa[index]*gcab*t46921*4.0;
            double t47068 = gamma_aa[index]*gcab*t46920*t46921*t46918*4.0;
            double t47069 = gamma_aa[index]*t46921*t46918*t46919*8.0;
            double t47070 = t47067+t47068+t47069;
            double t47071 = t46820*t46914*t47032;
            double t47072 = t47033+t47071;
            double t47073 = gamma_aa[index]*gcaa*t46922*4.0;
            double t47074 = gamma_aa[index]*gcaa*t47024*t47025*t47029*4.0;
            double t47075 = t47030*t47024*t47025*6.0;
            double t47076 = t47026*t47027*t47028;
            double t47077 = t47073+t47074+t47075+t47076+1.0;
            double t47078 = 1.0/t47077;
            double t47079 = gamma_aa[index]*gcaa*t46922;
            double t47080 = t47079+1.0;
            double t47081 = 1.0/t47080;
            double t47082 = gamma_aa[index]*gcaa*t46922*3.0;
            double t47083 = gamma_aa[index]*gcaa*t47024*t47025*t47029;
            double t47084 = t47030*t47024*t47025*3.0;
            double t47085 = t47082+t47083+t47084+1.0;
            double t47086 = 1.0/t47085;
            double t47087 = gamma_aa[index]*gcaa*t46922*2.0;
            double t47088 = t47030*t47024*t47025;
            double t47089 = t47087+t47088+1.0;
            double t47090 = 1.0/t47089;
            double t47091 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t47092 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t47093 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t47095 = t46820*t46914*t47023;
            double t47096 = ccaa4*t47026*t47027*t47093*t47078*(3.2E1/3.0);
            double t47097 = ccaa1*gamma_aa[index]*gcaa*t46921*t47081*(8.0/3.0);
            double t47098 = ccaa3*gamma_aa[index]*gcaa*t47024*t47025*t47092*t47086*8.0;
            double t47099 = ccaa2*t47024*t47025*t47090*t47091*(1.6E1/3.0);
            double t47100 = 1.0/(t47080*t47080);
            double t47101 = gamma_aa[index]*gcaa*t46921*8.0;
            double t47102 = gamma_aa[index]*gcaa*t47024*t47025*t47092*8.0;
            double t47103 = t47024*t47025*t47091*1.6E1;
            double t47104 = t47101+t47102+t47103;
            double t47105 = 1.0/(t47085*t47085);
            double t47106 = gamma_aa[index]*gcaa*t46921*(3.2E1/3.0);
            double t47107 = gamma_aa[index]*gcaa*t47024*t47025*t47092*3.2E1;
            double t47108 = t47024*t47025*t47091*3.2E1;
            double t47109 = t47026*t47027*t47093*(3.2E1/3.0);
            double t47110 = t47106+t47107+t47108+t47109;
            double t47111 = 1.0/(t47077*t47077);
            double t47112 = gamma_aa[index]*gcaa*t46921*(1.6E1/3.0);
            double t47113 = t47024*t47025*t47091*(1.6E1/3.0);
            double t47114 = t47112+t47113;
            double t47115 = 1.0/(t47089*t47089);
            double t47116 = t47096+t47097+t47098+t47099-ccaa1*t47100*t47024*t47025*t47091*(8.0/3.0)-ccaa2*t47030* \
               t47024*t47114*t47025*t47115-ccaa4*t47110*t47111*t47026*t47027*t47028-ccaa3*gamma_aa[index]*gcaa*t47104* \
               t47024*t47105*t47025*t47029;
            double t47117 = -t46910+t47021+t47095;
            double t47118 = gx*gx;
            double t47119 = t47118*t47118;
            double t47120 = 1.0/pow(rho_a[index],1.0E1);
            double t47121 = gamma_aa[index]*gx*t46922;
            double t47122 = t47121+1.0;
            double t47142 = gamma_aa[index]*gx*t46921*(3.2E1/3.0);
            double t47143 = gamma_aa[index]*gx*t47024*t47118*t47092*3.2E1;
            double t47144 = t47024*t47091*t47118*3.2E1;
            double t47145 = t47026*t47119*t47093*(3.2E1/3.0);
            double t47123 = t47142+t47143+t47144+t47145;
            double t47124 = gamma_aa[index]*gx*t46922*4.0;
            double t47125 = gamma_aa[index]*gx*t47024*t47118*t47029*4.0;
            double t47126 = t47030*t47024*t47118*6.0;
            double t47127 = t47026*t47028*t47119;
            double t47128 = t47124+t47125+t47126+t47127+1.0;
            double t47148 = gamma_aa[index]*gx*t46921*(1.6E1/3.0);
            double t47149 = t47024*t47091*t47118*(1.6E1/3.0);
            double t47129 = t47148+t47149;
            double t47130 = gamma_aa[index]*gx*t46922*2.0;
            double t47131 = t47030*t47024*t47118;
            double t47132 = t47130+t47131+1.0;
            double t47133 = gamma_aa[index]*gx*t46922*3.0;
            double t47134 = gamma_aa[index]*gx*t47024*t47118*t47029;
            double t47135 = t47030*t47024*t47118*3.0;
            double t47136 = t47133+t47134+t47135+1.0;
            double t47137 = 1.0/(t47136*t47136);
            double t47138 = gamma_aa[index]*gx*t46921*8.0;
            double t47139 = gamma_aa[index]*gx*t47024*t47118*t47092*8.0;
            double t47140 = t47024*t47091*t47118*1.6E1;
            double t47141 = t47140+t47138+t47139;
            double t47146 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t47147 = 1.0/(t47128*t47128);
            double t47150 = 1.0/(t47132*t47132);
            double t47151 = 1.0/t47128;
            double t47152 = 1.0/t47122;
            double t47153 = 1.0/t47136;
            double t47154 = 1.0/t47132;
            double t47155 = 1.0/(t47122*t47122);
            double t47156 = ccaa4*t47026*t47027*t47028*t47078;
            double t47157 = ccaa1*gamma_aa[index]*gcaa*t46922*t47081;
            double t47158 = ccaa3*gamma_aa[index]*gcaa*t47024*t47025*t47029*t47086;
            double t47159 = ccaa2*t47030*t47024*t47025*t47090;
            double t47160 = ccaa0+t47156+t47157+t47158+t47159;
            double t47161 = 1.0/(t46886*t46886*t46886);
            double t47162 = b4f*t46802*t46922*(1.0E1/9.0);
            double t47163 = b2f*c*t47005*(4.0/9.0);
            double t47164 = b3f*t46802*t46922*t46894*(1.0/1.2E1);
            double t47165 = b1f*c*t46894*t47005*(2.0/9.0);
            double t47166 = b3f*c*t46879*t47005*(2.0/3.0);
            double t47167 = t47162+t47163+t47164+t47165+t47166-b1f*t46802*t46922*t47006*(1.0/3.6E1);
            double t47168 = t46917*t46998*t47004*t47167;
            double t47170 = t46902*t46903*t46904*t47016;
            double t47171 = 1.0/(t46897*t46897);
            double t47172 = 1.0/(t46886*t46886*t46886*t46886);
            double t47173 = t46821*t46917*t47007*t47171*t47172*(1.0/2.0);
            double t47174 = t46902*t46808*t47008*t47017*t47018*(1.0/2.0);
            double t47175 = a1f*c*t46887*t46998*t47003*t47004*(2.0/3.0);
            double t47176 = a1p*c*t46903*t46904*t46909*t46887*(2.0/3.0);
            v_rho_a_rho_a_[index] = (rho_a[index]*t47072+rho_b[index]*(t47050-t46820*t46914*(t47050-c0f*log((t46821* \
               (1.0/2.0))/(b1f*t47036+b3f*t47037+b2f*c*t47034+b4f*t46802*t47038)+1.0)*(a1f*c*t47034+1.0)*2.0))-t46795* \
               (t46844+t47051+t47052))*(-ccab2*t46920*t46918*t47066*(gamma_aa[index]*gcab*t47064*(8.8E1/9.0)+t46918* \
               t47024*t47059*(3.2E1/9.0)+gamma_aa[index]*t46918*t46919*t47064*(8.8E1/9.0))+ccab2*t46920*t46918*1.0/ \
               (t46937*t46937*t46937)*(t47062*t47062)*2.0+ccab4*1.0/(t46932*t46932*t46932)*t46926*t46927*(t47057* \
               t47057)*2.0+ccab1*gamma_aa[index]*gcab*t46944*t47064*(4.4E1/9.0)+ccab2*t46942*t46918*t47024*t47059* \
               (3.2E1/9.0)-ccab1*t46918*t47024*t47058*t47059*(3.2E1/9.0)-ccab4*t46926*t46927*t47065*(gamma_aa[index]* \
               gcab*t47064*(1.76E2/9.0)+t46918*t47024*t47059*(6.4E1/3.0)+gamma_aa[index]*t46918*t46919*t47064*(1.76E2/ \
               3.0)+t46920*t46926*t47024*t47059*(6.4E1/3.0)+gamma_aa[index]*gcab*t46920*t46918*t47064*(1.76E2/3.0) \
               +gamma_aa[index]*t46920*t46926*t46919*t47064*(1.76E2/9.0)+gcab*t46918*t46919*t47024*t47059*(1.28E2/ \
               3.0))+ccab4*t46920*t46926*t46945*t47024*t47059*(6.4E1/3.0)+ccab2*gamma_aa[index]*t46942*t46918*t46919* \
               t47064*(8.8E1/9.0)-ccab1*gamma_aa[index]*t46918*t46919*t47064*t47058*(4.4E1/9.0)+ccab3*gcab*t46920* \
               1.0/(t46941*t46941*t46941)*t46918*t46919*(t47070*t47070)*2.0+ccab3*gamma_aa[index]*gcab*t46920*t46943* \
               t46918*t47064*(4.4E1/3.0)+ccab4*gamma_aa[index]*t46920*t46926*t46945*t46919*t47064*(1.76E2/9.0)-ccab2* \
               gamma_aa[index]*t46921*t46918*t46919*t47062*t47066*(1.6E1/3.0)+ccab3*gcab*t46943*t46918*t46919*t47024* \
               t47059*(3.2E1/3.0)+ccab1*gcab*1.0/(t46934*t46934*t46934)*t46918*t46919*t47024*t47059*(3.2E1/9.0)-ccab3* \
               gcab*t46920*t46918*t46919*t47063*(gamma_aa[index]*gcab*t47064*(4.4E1/3.0)+t46918*t47024*t47059*(3.2E1/ \
               3.0)+gamma_aa[index]*t46918*t46919*t47064*(8.8E1/3.0)+gamma_aa[index]*gcab*t46920*t46918*t47064*(4.4E1/ \
               3.0)+gcab*t46918*t46919*t47024*t47059*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t46920*t46921*t46918* \
               t47070*t47063*8.0-ccab4*gamma_aa[index]*t46920*t46921*t46926*t46919*t47065*t47057*(3.2E1/3.0))+t47160* \
               t47117*2.0+t47116*t47072*2.0+(t46844+t47051+t47052+rho_a[index]*(-t46910+t47021+t46820*t46914*(t46910+ \
               t47020-t46917*t46998*t47003*t47004-a1p*c*c0p*t46911*t46887*(2.0/3.0)))+t46795*(t46855-a1p*c*c0p*t46833* \
               t46807*(2.0/3.0)+t46820*t46842*t46834*t46845*t46874-t46820*t46834*t46845*t46856*t46839*4.0-t46820* \
               t46842*t46845*t46839*t46957+t46820*t46814*t46815*t46842*t46834*t46839*4.0-Aa*t46820*t46980*t46839* \
               t46857*t46867*t46869*2.0+Aa*t46820*t46874*t46857*t46867*t46876*t46869*2.0+t46820*t46990*t46839*t46857* \
               t46876*t46869*t46995*t46988-Aa*a1a*c*t46820*t46807*t46839*t46857*t46867*t46876*(2.0/3.0))-c0p*t46902* \
               t46911*2.0-t46820*t46914*t47032)*(ccab1*gamma_aa[index]*gcab*t46921*t46944*(4.0/3.0)-ccab2*t46920* \
               t46918*t47062*t47066-ccab4*t46926*t46927*t47065*t47057+ccab2*gamma_aa[index]*t46921*t46942*t46918* \
               t46919*(8.0/3.0)-ccab1*gamma_aa[index]*t46921*t46918*t46919*t47058*(4.0/3.0)+ccab3*gamma_aa[index]* \
               gcab*t46920*t46921*t46943*t46918*4.0+ccab4*gamma_aa[index]*t46920*t46921*t46926*t46945*t46919*(1.6E1/ \
               3.0)-ccab3*gcab*t46920*t46918*t46919*t47070*t47063)*2.0-(ccab0+ccab1*gcab*t46944*t46919+ccab2*t46920* \
               t46942*t46918+ccab4*t46926*t46927*t46945+ccab3*gcab*t46920*t46943*t46918*t46919)*(-t46795*(-t46977- \
               t46969+t46997+t47022+t46820*t46842*t46845*t46839*(t46977+t46969-t46997-t47022-t46832*1.0/(t46826*t46826* \
               t46826)*t46970*t46949*2.0+t46832*t46950*t46949*(b2f*c*t46946*(4.0/9.0)+b4f*t46802*t46947*(1.0E1/9.0) \
               +b1f*c*t46847*t46946*(2.0/9.0)+b3f*c*t46946*t46798*(2.0/3.0)-b1f*t46802*t46961*t46947*(1.0/3.6E1)+ \
               b3f*t46802*t46847*t46947*(1.0/1.2E1))+t46821*t46832*1.0/(t46826*t46826*t46826*t46826)*t46970*1.0/(t46829* \
               t46829)*(1.0/2.0)-a1f*c*c0f*t46830*t46946*(8.0/9.0)+a1f*c*t46950*t46807*t46955*t46949*(2.0/3.0)-a1p* \
               c*t46807*t46854*t46848*t46849*(2.0/3.0))-t46820*t46815*t46842*t46834*t46839*1.2E1-t46820*t46842*t46834* \
               t46845*t46987+t46820*t46834*t46845*t46856*t46874*8.0+t46820*t46842*t46845*t46874*t46957*2.0-t46820* \
               t46834*t46845*t46839*t46978*2.0E1-t46820*t46845*t46856*t46839*t46957*8.0-t46820*t46814*t46815*t46842* \
               t46834*t46874*8.0+t46820*t46814*t46815*t46834*t46856*t46839*3.2E1+t46820*t46814*t46815*t46842*t46839* \
               t46957*8.0+a1p*c*t46807*t46854*t46848*t46849*(2.0/3.0)+Aa*t46820*t46980*t46874*t46857*t46867*t46869* \
               4.0-Aa*t46820*t46857*t46867*t46876*t46869*t46987*2.0-Aa*t46820*t46839*t46857*t46867*t46869*(t46815* \
               t46842*1.2E1+t46845*t46978*2.0E1-t46814*t46815*t46856*3.2E1)*2.0+t46820*t46980*t46990*t46839*t46857* \
               t46869*t46995*t46988*2.0-t46820*t46990*t46874*t46857*t46876*t46869*t46995*t46988*2.0-t46820*1.0/(t46863* \
               t46863*t46863)*t46839*t46857*t46876*t46869*t46996*t46988*2.0+t46820*t46990*t46839*t46857*t46876*t46869* \
               t46988*(b2a*c*t46946*(4.0/9.0)+b4a*t46802*t46947*(1.0E1/9.0)+b1a*c*t46847*t46946*(2.0/9.0)+b3a*c*t46946* \
               t46798*(2.0/3.0)-b1a*t46802*t46961*t46947*(1.0/3.6E1)+b3a*t46802*t46847*t46947*(1.0/1.2E1))-Aa*a1a* \
               c*t46820*t46807*t46980*t46839*t46857*t46867*(4.0/3.0)+Aa*a1a*c*t46820*t46807*t46874*t46857*t46867* \
               t46876*(4.0/3.0)-Aa*a1a*c*t46820*t46946*t46839*t46857*t46867*t46876*(8.0/9.0)+t46820*1.0/(t46863*t46863* \
               t46863*t46863)*t46839*t46857*1.0/(t46866*t46866)*t46858*t46876*t46869*t46996*(1.0/2.0)+a1a*c*t46820* \
               t46807*t46990*t46839*t46857*t46876*t46995*t46988*(2.0/3.0))+rho_a[index]*(-t47010+t47170-t47019+t47174+ \
               t47176+t46820*t46914*(t47010+t47019+t47173+t47175+t47168-t46902*t46903*t46904*t47016-t46917*t46998* \
               t47007*t47161*2.0-a1f*c*c0f*t46915*t47005*(8.0/9.0)-t46902*t46808*t47008*t47017*t47018*(1.0/2.0)-a1p* \
               c*t46903*t46904*t46909*t46887*(2.0/3.0)))+t46820*t46914*t47023*2.0-t46902*t46903*t46904*t46909*2.0+ \
               t46813*t46854*t46848*t46849*2.0-a1p*c*c0p*t46833*t46807*(4.0/3.0)+a1p*c*c0p*t46911*t46887*(4.0/3.0) \
               +t46820*t46842*t46834*t46845*t46874*2.0-t46820*t46834*t46845*t46856*t46839*8.0-t46820*t46842*t46845* \
               t46839*t46957*2.0+t46820*t46814*t46815*t46842*t46834*t46839*8.0-Aa*t46820*t46980*t46839*t46857*t46867* \
               t46869*4.0+Aa*t46820*t46874*t46857*t46867*t46876*t46869*4.0+t46820*t46990*t46839*t46857*t46876*t46869* \
               t46995*t46988*2.0-Aa*a1a*c*t46820*t46807*t46839*t46857*t46867*t46876*(4.0/3.0))-c0*pow(rho_a[index],1.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t46921*t47152*(8.0/3.0)-cx1*t47024*t47091*t47118*t47155*(8.0/3.0)+cx2* \
               t47024*t47091*t47118*t47154*(1.6E1/3.0)+cx4*t47151*t47026*t47119*t47093*(3.2E1/3.0)-cx2*t47030*t47024* \
               t47150*t47118*t47129-cx4*t47123*t47026*t47028*t47119*t47147+cx3*gamma_aa[index]*gx*t47024*t47153*t47118* \
               t47092*8.0-cx3*gamma_aa[index]*gx*t47024*t47141*t47118*t47029*t47137)*(8.0/3.0)-rho_a[index]*t47072* \
               (ccaa1*gamma_aa[index]*gcaa*t47081*t47064*(8.8E1/9.0)-ccaa1*t47100*t47024*t47025*t47059*2.4E1+ccaa2* \
               t47024*t47025*t47090*t47059*(3.04E2/9.0)+ccaa4*t47026*t47027*t47146*t47078*(1.12E3/9.0)-ccaa2*t47024* \
               t47114*t47025*t47115*t47091*(3.2E1/3.0)-ccaa4*t47110*t47111*t47026*t47027*t47093*(6.4E1/3.0)-ccaa2* \
               t47030*t47024*t47025*t47115*(gamma_aa[index]*gcaa*t47064*(1.76E2/9.0)+t47024*t47025*t47059*(3.04E2/ \
               9.0))-ccaa4*t47111*t47026*t47027*t47028*(gamma_aa[index]*gcaa*t47064*(3.52E2/9.0)+t47024*t47025*t47059* \
               (6.08E2/3.0)+t47026*t47027*t47146*(1.12E3/9.0)+gamma_aa[index]*gcaa*t47120*t47024*t47025*2.88E2)+ccaa2* \
               t47030*t47024*(t47114*t47114)*t47025*1.0/(t47089*t47089*t47089)*2.0+ccaa4*(t47110*t47110)*t47026*t47027* \
               t47028*1.0/(t47077*t47077*t47077)*2.0+ccaa3*gamma_aa[index]*gcaa*t47120*t47024*t47025*t47086*7.2E1+ \
               ccaa1*gamma_aa[index]*gcaa*t47120*t47024*t47025*1.0/(t47080*t47080*t47080)*(1.28E2/9.0)+ccaa3*gamma_aa[index]* \
               gcaa*(t47104*t47104)*t47024*t47025*t47029*1.0/(t47085*t47085*t47085)*2.0-ccaa3*gamma_aa[index]*gcaa* \
               t47024*t47105*t47025*t47029*(gamma_aa[index]*gcaa*t47064*(8.8E1/3.0)+t47024*t47025*t47059*(3.04E2/ \
               3.0)+gamma_aa[index]*gcaa*t47120*t47024*t47025*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t47104*t47024*t47105* \
               t47025*t47092*1.6E1)+rho_a[index]*t47160*(-t47010+t47170-t47019+t47174+t47176+t46820*t46914*(t47010- \
               t47170+t47019+t47173-t47174+t47175-t47176+t47168-t46917*t46998*t47007*t47161*2.0-a1f*c*c0f*t46915* \
               t47005*(8.0/9.0)))-rho_a[index]*t47116*t47117*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t47152*t47064*(8.8E1/9.0)-cx1*t47024*t47118*t47155*t47059*2.4E1+cx2*t47024*t47118*t47154*t47059* \
               (3.04E2/9.0)+cx4*t47151*t47026*t47119*t47146*(1.12E3/9.0)-cx2*t47024*t47150*t47091*t47118*t47129*(3.2E1/ \
               3.0)-cx4*t47123*t47026*t47119*t47093*t47147*(6.4E1/3.0)-cx2*t47030*t47024*t47150*t47118*(gamma_aa[index]* \
               gx*t47064*(1.76E2/9.0)+t47024*t47118*t47059*(3.04E2/9.0))-cx4*t47026*t47028*t47119*t47147*(gamma_aa[index]* \
               gx*t47064*(3.52E2/9.0)+t47024*t47118*t47059*(6.08E2/3.0)+t47026*t47119*t47146*(1.12E3/9.0)+gamma_aa[index]* \
               gx*t47120*t47024*t47118*2.88E2)+cx2*t47030*t47024*1.0/(t47132*t47132*t47132)*t47118*(t47129*t47129) \
               *2.0+cx4*(t47123*t47123)*t47026*t47028*t47119*1.0/(t47128*t47128*t47128)*2.0+cx3*gamma_aa[index]*gx* \
               t47120*t47024*t47153*t47118*7.2E1+cx1*gamma_aa[index]*gx*t47120*1.0/(t47122*t47122*t47122)*t47024* \
               t47118*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t47024*(t47141*t47141)*t47118*1.0/(t47136*t47136*t47136) \
               *t47029*2.0-cx3*gamma_aa[index]*gx*t47024*t47118*t47029*t47137*(gamma_aa[index]*gx*t47064*(8.8E1/3.0) \
               +t47024*t47118*t47059*(3.04E2/3.0)+gamma_aa[index]*gx*t47120*t47024*t47118*7.2E1)-cx3*gamma_aa[index]* \
               gx*t47024*t47141*t47118*t47092*t47137*1.6E1)+c0*t46883*(cx0+cx1*gamma_aa[index]*gx*t46922*t47152+cx2* \
               t47030*t47024*t47118*t47154+cx4*t47151*t47026*t47028*t47119+cx3*gamma_aa[index]*gx*t47024*t47153*t47118* \
               t47029)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t50249 = 1.0/pow(rho_a[index],1.0/3.0);
            double t50250 = c*t50249;
            double t50251 = sqrt(t50250);
            double t50252 = b1f*t50251;
            double t50253 = pow(t50250,3.0/2.0);
            double t50254 = b3f*t50253;
            double t50255 = c*c;
            double t50256 = 1.0/pow(rho_a[index],2.0/3.0);
            double t50257 = b4f*t50255*t50256;
            double t50258 = b2f*c*t50249;
            double t50259 = t50252+t50254+t50257+t50258;
            double t50260 = 1.0/pow(rho_a[index],4.0/3.0);
            double t50261 = b1p*t50251;
            double t50262 = b3p*t50253;
            double t50263 = b4p*t50255*t50256;
            double t50264 = b2p*c*t50249;
            double t50265 = t50261+t50262+t50263+t50264;
            double t50266 = 1.0/pow(rho_a[index],5.0/3.0);
            double t50267 = 1.0/sqrt(t50250);
            double t50268 = 1.0/c0f;
            double t50269 = 1.0/t50259;
            double t50270 = t50268*t50269*(1.0/2.0);
            double t50271 = t50270+1.0;
            double t50272 = 1.0/c0p;
            double t50273 = 1.0/t50265;
            double t50274 = t50272*t50273*(1.0/2.0);
            double t50275 = t50274+1.0;
            double t50276 = a1p*c*t50249;
            double t50277 = t50276+1.0;
            double t50278 = 1.0/t50275;
            double t50279 = 1.0/(t50265*t50265);
            double t50280 = b4p*t50255*t50266*(2.0/3.0);
            double t50281 = b2p*c*t50260*(1.0/3.0);
            double t50282 = b1p*c*t50260*t50267*(1.0/6.0);
            double t50283 = b3p*c*t50251*t50260*(1.0/2.0);
            double t50284 = t50280+t50281+t50282+t50283;
            double t50285 = t50284*t50277*t50278*t50279;
            double t50286 = log(t50275);
            double t50287 = gamma_aa[index]*gamma_aa[index];
            double t50288 = gcaa*gcaa;
            double t50289 = t50287*t50287;
            double t50290 = t50288*t50288;
            double t50291 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t50292 = 1.0/pow(rho_a[index],8.0/3.0);
            double t50293 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t50294 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t50295 = pow(2.0,1.0/3.0);
            double t50296 = t50295*2.0;
            double t50297 = t50296-2.0;
            double t50298 = two_13*2.0;
            double t50299 = t50298-2.0;
            double t50300 = 1.0/t50299;
            double t50301 = log(t50271);
            double t50302 = a1f*c*t50249;
            double t50303 = t50302+1.0;
            double t50304 = gamma_aa[index]*gcaa*t50292*4.0;
            double t50305 = gamma_aa[index]*gcaa*t50293*t50287*t50288*4.0;
            double t50306 = t50294*t50287*t50288*6.0;
            double t50307 = t50290*t50291*t50289;
            double t50308 = t50304+t50305+t50306+t50307+1.0;
            double t50309 = 1.0/t50308;
            double t50310 = gamma_aa[index]*gcaa*t50292;
            double t50311 = t50310+1.0;
            double t50312 = 1.0/t50311;
            double t50313 = gamma_aa[index]*gcaa*t50292*3.0;
            double t50314 = gamma_aa[index]*gcaa*t50293*t50287*t50288;
            double t50315 = t50294*t50287*t50288*3.0;
            double t50316 = t50313+t50314+t50315+1.0;
            double t50317 = 1.0/t50316;
            double t50318 = gamma_aa[index]*gcaa*t50292*2.0;
            double t50319 = t50294*t50287*t50288;
            double t50320 = t50318+t50319+1.0;
            double t50321 = 1.0/t50320;
            double t50322 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t50323 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t50324 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t50325 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t50326 = 1.0/t50271;
            double t50327 = 1.0/(t50259*t50259);
            double t50328 = b4f*t50255*t50266*(2.0/3.0);
            double t50329 = b2f*c*t50260*(1.0/3.0);
            double t50330 = b1f*c*t50260*t50267*(1.0/6.0);
            double t50331 = b3f*c*t50251*t50260*(1.0/2.0);
            double t50332 = t50330+t50331+t50328+t50329;
            double t50333 = a1f*c*c0f*t50301*t50260*(2.0/3.0);
            double t50334 = a1p*c*c0p*t50260*t50286*(2.0/3.0);
            double t50335 = ccaa4*t50325*t50290*t50309*t50289*(3.2E1/3.0);
            double t50336 = ccaa1*gamma_aa[index]*gcaa*t50312*t50323*(8.0/3.0);
            double t50337 = ccaa3*gamma_aa[index]*gcaa*t50324*t50317*t50287*t50288*8.0;
            double t50338 = ccaa2*t50321*t50322*t50287*t50288*(1.6E1/3.0);
            double t50339 = 1.0/(t50311*t50311);
            double t50340 = gamma_aa[index]*gcaa*t50323*8.0;
            double t50341 = gamma_aa[index]*gcaa*t50324*t50287*t50288*8.0;
            double t50342 = t50322*t50287*t50288*1.6E1;
            double t50343 = t50340+t50341+t50342;
            double t50344 = 1.0/(t50316*t50316);
            double t50345 = gamma_aa[index]*gcaa*t50323*(3.2E1/3.0);
            double t50346 = gamma_aa[index]*gcaa*t50324*t50287*t50288*3.2E1;
            double t50347 = t50322*t50287*t50288*3.2E1;
            double t50348 = t50325*t50290*t50289*(3.2E1/3.0);
            double t50349 = t50345+t50346+t50347+t50348;
            double t50350 = 1.0/(t50308*t50308);
            double t50351 = gamma_aa[index]*gcaa*t50323*(1.6E1/3.0);
            double t50352 = t50322*t50287*t50288*(1.6E1/3.0);
            double t50353 = t50351+t50352;
            double t50354 = 1.0/(t50320*t50320);
            double t50355 = t50335+t50336+t50337+t50338-ccaa1*t50322*t50339*t50287*t50288*(8.0/3.0)-ccaa4*t50350* \
               t50290*t50291*t50349*t50289-ccaa2*t50353*t50354*t50294*t50287*t50288-ccaa3*gamma_aa[index]*gcaa*t50343* \
               t50344*t50293*t50287*t50288;
            double t50356 = gx*gx;
            double t50357 = t50356*t50356;
            double t50358 = 1.0/pow(rho_a[index],1.0E1);
            double t50359 = gamma_aa[index]*gx*t50292;
            double t50360 = t50359+1.0;
            double t50361 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t50382 = gamma_aa[index]*gx*t50323*(3.2E1/3.0);
            double t50383 = gamma_aa[index]*gx*t50324*t50356*t50287*3.2E1;
            double t50384 = t50322*t50356*t50287*3.2E1;
            double t50385 = t50325*t50357*t50289*(3.2E1/3.0);
            double t50362 = t50382+t50383+t50384+t50385;
            double t50363 = gamma_aa[index]*gx*t50292*4.0;
            double t50364 = gamma_aa[index]*gx*t50293*t50356*t50287*4.0;
            double t50365 = t50356*t50294*t50287*6.0;
            double t50366 = t50291*t50357*t50289;
            double t50367 = t50363+t50364+t50365+t50366+1.0;
            double t50388 = gamma_aa[index]*gx*t50323*(1.6E1/3.0);
            double t50389 = t50322*t50356*t50287*(1.6E1/3.0);
            double t50368 = t50388+t50389;
            double t50369 = gamma_aa[index]*gx*t50292*2.0;
            double t50370 = t50356*t50294*t50287;
            double t50371 = t50370+t50369+1.0;
            double t50372 = gamma_aa[index]*gx*t50292*3.0;
            double t50373 = gamma_aa[index]*gx*t50293*t50356*t50287;
            double t50374 = t50356*t50294*t50287*3.0;
            double t50375 = t50372+t50373+t50374+1.0;
            double t50376 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t50377 = 1.0/(t50375*t50375);
            double t50378 = gamma_aa[index]*gx*t50323*8.0;
            double t50379 = gamma_aa[index]*gx*t50324*t50356*t50287*8.0;
            double t50380 = t50322*t50356*t50287*1.6E1;
            double t50381 = t50380+t50378+t50379;
            double t50386 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t50387 = 1.0/(t50367*t50367);
            double t50390 = 1.0/(t50371*t50371);
            double t50391 = 1.0/t50367;
            double t50392 = 1.0/t50360;
            double t50393 = 1.0/t50375;
            double t50394 = 1.0/t50371;
            double t50395 = c0f*t50301*t50303*2.0;
            double t50396 = c0p*t50277*t50286*2.0;
            double t50397 = 1.0/(t50360*t50360);
            double t50398 = ccaa4*t50290*t50291*t50309*t50289;
            double t50399 = ccaa1*gamma_aa[index]*gcaa*t50312*t50292;
            double t50400 = ccaa3*gamma_aa[index]*gcaa*t50317*t50293*t50287*t50288;
            double t50401 = ccaa2*t50321*t50294*t50287*t50288;
            double t50402 = ccaa0+t50400+t50401+t50398+t50399;
            double t50403 = 1.0/pow(rho_a[index],7.0/3.0);
            double t50404 = 1.0/pow(t50250,3.0/2.0);
            double t50405 = t50332*t50332;
            double t50406 = t50284*t50284;
            double t50407 = 1.0/(t50265*t50265*t50265);
            double t50408 = t50406*t50407*t50277*t50278*2.0;
            double t50409 = b4p*t50255*t50292*(1.0E1/9.0);
            double t50410 = b2p*c*t50403*(4.0/9.0);
            double t50411 = b3p*t50255*t50292*t50267*(1.0/1.2E1);
            double t50412 = b1p*c*t50403*t50267*(2.0/9.0);
            double t50413 = b3p*c*t50403*t50251*(2.0/3.0);
            double t50414 = t50410+t50411+t50412+t50413+t50409-b1p*t50404*t50255*t50292*(1.0/3.6E1);
            double t50415 = 1.0/(t50275*t50275);
            double t50416 = 1.0/(t50265*t50265*t50265*t50265);
            double t50417 = a1p*c*c0p*t50403*t50286*(8.0/9.0);
            v_rho_a_rho_a_[index] = t50355*(t50396+t50300*t50297*(t50395-c0p*t50277*t50286*2.0))*2.0+t50402*(t50334- \
               t50285+t50300*t50297*(t50333+t50285-t50303*t50332*t50326*t50327-a1p*c*c0p*t50260*t50286*(2.0/3.0)) \
               )*2.0-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t50323*t50392*(8.0/3.0)-cx1*t50322*t50356* \
               t50287*t50397*(8.0/3.0)+cx2*t50322*t50356*t50394*t50287*(1.6E1/3.0)+cx4*t50325*t50391*t50357*t50289* \
               (3.2E1/3.0)-cx2*t50390*t50356*t50294*t50287*t50368-cx4*t50362*t50291*t50357*t50387*t50289+cx3*gamma_aa[index]* \
               gx*t50324*t50356*t50393*t50287*8.0-cx3*gamma_aa[index]*gx*t50381*t50293*t50356*t50287*t50377)*(8.0/ \
               3.0)+rho_a[index]*t50402*(-t50408-t50417+t50300*t50297*(t50408+t50417-t50414*t50277*t50278*t50279- \
               t50303*t50405*t50326*1.0/(t50259*t50259*t50259)*2.0+t50303*t50326*t50327*(b2f*c*t50403*(4.0/9.0)+b4f* \
               t50255*t50292*(1.0E1/9.0)+b1f*c*t50403*t50267*(2.0/9.0)+b3f*c*t50403*t50251*(2.0/3.0)-b1f*t50404*t50255* \
               t50292*(1.0/3.6E1)+b3f*t50255*t50292*t50267*(1.0/1.2E1))+t50303*t50405*1.0/(t50271*t50271)*1.0/(t50259* \
               t50259*t50259*t50259)*t50268*(1.0/2.0)-a1f*c*c0f*t50301*t50403*(8.0/9.0)-t50406*t50415*t50272*t50416* \
               t50277*(1.0/2.0)+a1f*c*t50260*t50332*t50326*t50327*(2.0/3.0)-a1p*c*t50260*t50284*t50278*t50279*(2.0/ \
               3.0))+t50414*t50277*t50278*t50279+t50406*t50415*t50272*t50416*t50277*(1.0/2.0)+a1p*c*t50260*t50284* \
               t50278*t50279*(2.0/3.0))-rho_a[index]*t50355*(t50334-t50285+t50300*t50297*(t50333-t50334+t50285-t50303* \
               t50332*t50326*t50327))*2.0-rho_a[index]*(t50396+t50300*t50297*(t50395-t50396))*(ccaa1*gamma_aa[index]* \
               gcaa*t50312*t50376*(8.8E1/9.0)+ccaa2*t50321*t50361*t50287*t50288*(3.04E2/9.0)-ccaa1*t50361*t50339* \
               t50287*t50288*2.4E1+ccaa4*t50290*t50309*t50386*t50289*(1.12E3/9.0)-ccaa2*t50322*t50353*t50354*t50287* \
               t50288*(3.2E1/3.0)-ccaa4*t50350*t50325*t50290*t50349*t50289*(6.4E1/3.0)-ccaa2*t50354*t50294*t50287* \
               t50288*(gamma_aa[index]*gcaa*t50376*(1.76E2/9.0)+t50361*t50287*t50288*(3.04E2/9.0))-ccaa4*t50350*t50290* \
               t50291*t50289*(gamma_aa[index]*gcaa*t50376*(3.52E2/9.0)+t50361*t50287*t50288*(6.08E2/3.0)+t50290*t50386* \
               t50289*(1.12E3/9.0)+gamma_aa[index]*gcaa*t50358*t50287*t50288*2.88E2)+ccaa2*1.0/(t50320*t50320*t50320) \
               *(t50353*t50353)*t50294*t50287*t50288*2.0+ccaa4*t50290*1.0/(t50308*t50308*t50308)*t50291*(t50349*t50349) \
               *t50289*2.0+ccaa3*gamma_aa[index]*gcaa*t50317*t50358*t50287*t50288*7.2E1+ccaa1*gamma_aa[index]*gcaa* \
               1.0/(t50311*t50311*t50311)*t50358*t50287*t50288*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*1.0/(t50316* \
               t50316*t50316)*(t50343*t50343)*t50293*t50287*t50288*2.0-ccaa3*gamma_aa[index]*gcaa*t50344*t50293*t50287* \
               t50288*(gamma_aa[index]*gcaa*t50376*(8.8E1/3.0)+t50361*t50287*t50288*(3.04E2/3.0)+gamma_aa[index]* \
               gcaa*t50358*t50287*t50288*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t50324*t50343*t50344*t50287*t50288*1.6E1) \
               +c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t50392*t50376*(8.8E1/9.0)-cx1*t50361*t50356* \
               t50287*t50397*2.4E1+cx2*t50361*t50356*t50394*t50287*(3.04E2/9.0)+cx4*t50391*t50357*t50386*t50289*(1.12E3/ \
               9.0)-cx2*t50322*t50390*t50356*t50287*t50368*(3.2E1/3.0)-cx4*t50325*t50362*t50357*t50387*t50289*(6.4E1/ \
               3.0)-cx2*t50390*t50356*t50294*t50287*(gamma_aa[index]*gx*t50376*(1.76E2/9.0)+t50361*t50356*t50287* \
               (3.04E2/9.0))-cx4*t50291*t50357*t50387*t50289*(gamma_aa[index]*gx*t50376*(3.52E2/9.0)+t50361*t50356* \
               t50287*(6.08E2/3.0)+t50357*t50386*t50289*(1.12E3/9.0)+gamma_aa[index]*gx*t50356*t50358*t50287*2.88E2) \
               +cx2*1.0/(t50371*t50371*t50371)*t50356*t50294*t50287*(t50368*t50368)*2.0+cx4*(t50362*t50362)*t50291* \
               t50357*1.0/(t50367*t50367*t50367)*t50289*2.0+cx3*gamma_aa[index]*gx*t50356*t50393*t50358*t50287*7.2E1+ \
               cx1*gamma_aa[index]*gx*1.0/(t50360*t50360*t50360)*t50356*t50358*t50287*(1.28E2/9.0)+cx3*gamma_aa[index]* \
               gx*(t50381*t50381)*t50293*t50356*1.0/(t50375*t50375*t50375)*t50287*2.0-cx3*gamma_aa[index]*gx*t50293* \
               t50356*t50287*t50377*(gamma_aa[index]*gx*t50376*(8.8E1/3.0)+t50361*t50356*t50287*(3.04E2/3.0)+gamma_aa[index]* \
               gx*t50356*t50358*t50287*7.2E1)-cx3*gamma_aa[index]*gx*t50324*t50381*t50356*t50287*t50377*1.6E1)+c0* \
               t50256*(cx0+cx1*gamma_aa[index]*gx*t50292*t50392+cx2*t50356*t50294*t50394*t50287+cx4*t50291*t50391* \
               t50357*t50289+cx3*gamma_aa[index]*gx*t50293*t50356*t50393*t50287)*(4.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t47178 = rho_a[index]+rho_b[index];
            double t47179 = 1.0/pow(t47178,1.0/3.0);
            double t47180 = c*t47179;
            double t47181 = sqrt(t47180);
            double t47182 = b1p*t47181;
            double t47183 = pow(t47180,3.0/2.0);
            double t47184 = b3p*t47183;
            double t47185 = c*c;
            double t47186 = 1.0/pow(t47178,2.0/3.0);
            double t47187 = b4p*t47185*t47186;
            double t47188 = b2p*c*t47179;
            double t47189 = t47182+t47184+t47187+t47188;
            double t47190 = 1.0/pow(t47178,4.0/3.0);
            double t47191 = 1.0/c0p;
            double t47192 = 1.0/t47189;
            double t47193 = t47191*t47192*(1.0/2.0);
            double t47194 = t47193+1.0;
            double t47195 = a1p*c*t47179;
            double t47196 = t47195+1.0;
            double t47197 = rho_a[index]-rho_b[index];
            double t47198 = t47197*t47197;
            double t47199 = 1.0/t47178;
            double t47200 = t47197*t47199;
            double t47201 = two_13*2.0;
            double t47202 = t47201-2.0;
            double t47203 = 1.0/t47202;
            double t47204 = 1.0/c0f;
            double t47205 = b1f*t47181;
            double t47206 = b3f*t47183;
            double t47207 = b4f*t47185*t47186;
            double t47208 = b2f*c*t47179;
            double t47209 = t47205+t47206+t47207+t47208;
            double t47210 = 1.0/t47209;
            double t47211 = t47210*t47204*(1.0/2.0);
            double t47212 = t47211+1.0;
            double t47213 = log(t47212);
            double t47214 = a1f*c*t47179;
            double t47215 = t47214+1.0;
            double t47216 = log(t47194);
            double t47226 = c0f*t47213*t47215*2.0;
            double t47227 = c0p*t47216*t47196*2.0;
            double t47217 = t47226-t47227;
            double t47218 = t47200+1.0;
            double t47219 = pow(t47218,4.0/3.0);
            double t47220 = -t47200+1.0;
            double t47221 = pow(t47220,4.0/3.0);
            double t47222 = t47221+t47219-2.0;
            double t47223 = 1.0/(t47178*t47178);
            double t47254 = t47223*t47197;
            double t47224 = -t47254+t47199;
            double t47225 = 1.0/(t47178*t47178*t47178*t47178);
            double t47228 = t47198*t47198;
            double t47229 = 1.0/pow(t47178,5.0/3.0);
            double t47230 = 1.0/sqrt(t47180);
            double t47231 = 1.0/t47194;
            double t47232 = 1.0/(t47189*t47189);
            double t47233 = b4p*t47229*t47185*(2.0/3.0);
            double t47234 = b2p*c*t47190*(1.0/3.0);
            double t47235 = b1p*c*t47230*t47190*(1.0/6.0);
            double t47236 = b3p*c*t47181*t47190*(1.0/2.0);
            double t47237 = t47233+t47234+t47235+t47236;
            double t47238 = t47231*t47232*t47237*t47196;
            double t47239 = 1.0/(t47178*t47178*t47178*t47178*t47178);
            double t47240 = 1.0/d2fz0;
            double t47241 = 1.0/Aa;
            double t47242 = b1a*t47181;
            double t47243 = b3a*t47183;
            double t47244 = b4a*t47185*t47186;
            double t47245 = b2a*c*t47179;
            double t47246 = t47242+t47243+t47244+t47245;
            double t47247 = 1.0/t47246;
            double t47248 = t47241*t47247*(1.0/2.0);
            double t47249 = t47248+1.0;
            double t47250 = log(t47249);
            double t47251 = a1a*c*t47179;
            double t47252 = t47251+1.0;
            double t47253 = pow(t47218,1.0/3.0);
            double t47255 = t47224*t47253*(4.0/3.0);
            double t47256 = pow(t47220,1.0/3.0);
            double t47400 = t47224*t47256*(4.0/3.0);
            double t47257 = -t47400+t47255;
            double t47258 = t47225*t47228;
            double t47259 = t47258-1.0;
            double t47260 = 1.0/pow(rho_a[index],1.0/3.0);
            double t47261 = c*t47260;
            double t47262 = sqrt(t47261);
            double t47263 = b1f*t47262;
            double t47264 = pow(t47261,3.0/2.0);
            double t47265 = b3f*t47264;
            double t47266 = 1.0/pow(rho_a[index],2.0/3.0);
            double t47267 = b4f*t47185*t47266;
            double t47268 = b2f*c*t47260;
            double t47269 = t47263+t47265+t47267+t47268;
            double t47270 = 1.0/pow(rho_a[index],4.0/3.0);
            double t47271 = b1p*t47262;
            double t47272 = b3p*t47264;
            double t47273 = b4p*t47185*t47266;
            double t47274 = b2p*c*t47260;
            double t47275 = t47271+t47272+t47273+t47274;
            double t47276 = 1.0/pow(rho_a[index],5.0/3.0);
            double t47277 = 1.0/sqrt(t47261);
            double t47278 = 1.0/t47269;
            double t47279 = t47204*t47278*(1.0/2.0);
            double t47280 = t47279+1.0;
            double t47281 = 1.0/t47275;
            double t47282 = t47191*t47281*(1.0/2.0);
            double t47283 = t47282+1.0;
            double t47284 = a1p*c*t47260;
            double t47285 = t47284+1.0;
            double t47286 = 1.0/t47283;
            double t47287 = 1.0/(t47275*t47275);
            double t47288 = b4p*t47185*t47276*(2.0/3.0);
            double t47289 = b2p*c*t47270*(1.0/3.0);
            double t47290 = b1p*c*t47270*t47277*(1.0/6.0);
            double t47291 = b3p*c*t47270*t47262*(1.0/2.0);
            double t47292 = t47290+t47291+t47288+t47289;
            double t47293 = t47292*t47285*t47286*t47287;
            double t47294 = log(t47283);
            double t47295 = pow(2.0,1.0/3.0);
            double t47296 = t47295*2.0;
            double t47297 = t47296-2.0;
            double t47298 = log(t47280);
            double t47299 = a1f*c*t47260;
            double t47300 = t47299+1.0;
            double t47301 = gcab*gcab;
            double t47305 = 1.0/pow(rho_a[index],8.0/3.0);
            double t47306 = gamma_aa[index]*t47305*(1.0/2.0);
            double t47307 = 1.0/pow(rho_b[index],8.0/3.0);
            double t47308 = gamma_bb[index]*t47307*(1.0/2.0);
            double t47302 = t47306+t47308;
            double t47303 = t47302*t47302;
            double t47304 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t47309 = t47301*t47301;
            double t47310 = t47303*t47303;
            double t47311 = t47301*t47303*6.0;
            double t47312 = gcab*t47301*t47302*t47303*4.0;
            double t47313 = t47310*t47309;
            double t47314 = gcab*t47302*4.0;
            double t47315 = t47311+t47312+t47313+t47314+1.0;
            double t47316 = gcab*t47302;
            double t47317 = t47316+1.0;
            double t47318 = t47301*t47303;
            double t47319 = gcab*t47302*2.0;
            double t47320 = t47318+t47319+1.0;
            double t47321 = t47301*t47303*3.0;
            double t47322 = gcab*t47301*t47302*t47303;
            double t47323 = gcab*t47302*3.0;
            double t47324 = t47321+t47322+t47323+1.0;
            double t47325 = t47203*t47222*t47225*t47217*t47197*t47198*4.0;
            double t47326 = t47254+t47199;
            double t47327 = 1.0/t47212;
            double t47328 = 1.0/(t47209*t47209);
            double t47329 = b4f*t47229*t47185*(2.0/3.0);
            double t47330 = b2f*c*t47190*(1.0/3.0);
            double t47331 = b1f*c*t47230*t47190*(1.0/6.0);
            double t47332 = b3f*c*t47181*t47190*(1.0/2.0);
            double t47333 = t47330+t47331+t47332+t47329;
            double t47334 = a1f*c*c0f*t47213*t47190*(2.0/3.0);
            double t47335 = t47228*t47239*4.0;
            double t47336 = t47253*t47326*(4.0/3.0);
            double t47399 = t47326*t47256*(4.0/3.0);
            double t47337 = t47336-t47399;
            double t47338 = 1.0/t47249;
            double t47339 = 1.0/(t47246*t47246);
            double t47340 = b4a*t47229*t47185*(2.0/3.0);
            double t47341 = b2a*c*t47190*(1.0/3.0);
            double t47342 = b1a*c*t47230*t47190*(1.0/6.0);
            double t47343 = b3a*c*t47181*t47190*(1.0/2.0);
            double t47344 = t47340+t47341+t47342+t47343;
            double t47345 = t47203*t47222*t47240*t47252*t47344*t47338*t47339*t47259;
            double t47346 = 1.0/pow(rho_b[index],1.0/3.0);
            double t47347 = c*t47346;
            double t47348 = sqrt(t47347);
            double t47349 = b1f*t47348;
            double t47350 = pow(t47347,3.0/2.0);
            double t47351 = b3f*t47350;
            double t47352 = 1.0/pow(rho_b[index],2.0/3.0);
            double t47353 = b4f*t47352*t47185;
            double t47354 = b2f*c*t47346;
            double t47355 = t47351+t47353+t47354+t47349;
            double t47356 = 1.0/pow(rho_b[index],4.0/3.0);
            double t47357 = b1p*t47348;
            double t47358 = b3p*t47350;
            double t47359 = b4p*t47352*t47185;
            double t47360 = b2p*c*t47346;
            double t47361 = t47360+t47357+t47358+t47359;
            double t47362 = 1.0/pow(rho_b[index],5.0/3.0);
            double t47363 = 1.0/sqrt(t47347);
            double t47364 = 1.0/t47355;
            double t47365 = t47204*t47364*(1.0/2.0);
            double t47366 = t47365+1.0;
            double t47367 = 1.0/t47361;
            double t47368 = t47191*t47367*(1.0/2.0);
            double t47369 = t47368+1.0;
            double t47370 = a1p*c*t47346;
            double t47371 = t47370+1.0;
            double t47372 = 1.0/t47369;
            double t47373 = 1.0/(t47361*t47361);
            double t47374 = b4p*t47362*t47185*(2.0/3.0);
            double t47375 = b2p*c*t47356*(1.0/3.0);
            double t47376 = b1p*c*t47363*t47356*(1.0/6.0);
            double t47377 = b3p*c*t47356*t47348*(1.0/2.0);
            double t47378 = t47374+t47375+t47376+t47377;
            double t47379 = t47371*t47372*t47373*t47378;
            double t47380 = log(t47369);
            double t47381 = log(t47366);
            double t47382 = a1f*c*t47346;
            double t47383 = t47382+1.0;
            double t47384 = t47203*t47222*t47225*t47217*t47228;
            double t47385 = Aa*t47203*t47222*t47240*t47250*t47252*t47259*2.0;
            double t47386 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t47387 = 1.0/(t47324*t47324);
            double t47388 = 1.0/t47317;
            double t47389 = 1.0/(t47315*t47315);
            double t47390 = 1.0/(t47320*t47320);
            double t47391 = 1.0/t47315;
            double t47392 = 1.0/(t47317*t47317);
            double t47393 = 1.0/t47320;
            double t47394 = 1.0/t47324;
            double t47396 = a1p*c*c0p*t47216*t47190*(2.0/3.0);
            double t47401 = t47215*t47333*t47327*t47328;
            double t47395 = -t47401+t47334+t47238-t47396;
            double t47397 = 1.0/pow(t47178,7.0/3.0);
            double t47398 = 1.0/pow(t47178,8.0/3.0);
            double t47402 = t47237*t47237;
            double t47403 = 1.0/pow(t47180,3.0/2.0);
            double t47404 = b4p*t47185*t47398*(1.0E1/9.0);
            double t47405 = b2p*c*t47397*(4.0/9.0);
            double t47406 = b1p*c*t47230*t47397*(2.0/9.0);
            double t47407 = b3p*c*t47181*t47397*(2.0/3.0);
            double t47408 = b3p*t47230*t47185*t47398*(1.0/1.2E1);
            double t47409 = t47404+t47405+t47406+t47407+t47408-b1p*t47403*t47185*t47398*(1.0/3.6E1);
            double t47410 = t47231*t47232*t47409*t47196;
            double t47411 = 1.0/(t47189*t47189*t47189);
            double t47412 = t47333*t47333;
            double t47413 = 1.0/(t47194*t47194);
            double t47414 = 1.0/(t47189*t47189*t47189*t47189);
            double t47415 = t47402*t47413*t47414*t47191*t47196*(1.0/2.0);
            double t47416 = t47401-t47334-t47238+t47396;
            double t47417 = 1.0/(t47178*t47178*t47178);
            double t47418 = a1p*c*t47231*t47232*t47190*t47237*(2.0/3.0);
            double t47419 = 1.0/(t47178*t47178*t47178*t47178*t47178*t47178);
            double t47420 = t47225*t47197*t47198*4.0;
            double t47421 = t47420+t47335;
            double t47422 = t47417*t47256*t47197*(8.0/3.0);
            double t47423 = 1.0/pow(t47218,2.0/3.0);
            double t47424 = t47224*t47423*t47326*(4.0/9.0);
            double t47425 = 1.0/pow(t47220,2.0/3.0);
            double t47426 = t47224*t47326*t47425*(4.0/9.0);
            double t47427 = t47422+t47424+t47426-t47253*t47417*t47197*(8.0/3.0);
            double t47428 = t47420-t47335;
            double t47429 = t47344*t47344;
            double t47430 = t47203*t47225*t47217*t47228*t47337;
            double t47431 = t47203*t47225*t47217*t47228*t47257;
            double t47432 = Aa*t47203*t47222*t47240*t47250*t47421*t47252*2.0;
            double t47433 = Aa*t47203*t47240*t47250*t47252*t47337*t47259*2.0;
            double t47434 = Aa*t47203*t47240*t47250*t47252*t47257*t47259*2.0;
            double t47435 = c0f*t47300*t47298*2.0;
            double t47437 = c0p*t47285*t47294*2.0;
            double t47436 = t47435-t47437;
            double t47438 = c0f*t47381*t47383*2.0;
            double t47440 = c0p*t47371*t47380*2.0;
            double t47439 = -t47440+t47438;
            double t47441 = gamma_aa[index]*gcab*t47386*(8.0/3.0);
            double t47442 = gamma_aa[index]*t47301*t47302*t47386*(8.0/3.0);
            double t47443 = t47441+t47442;
            double t47444 = gamma_bb[index]*gcab*t47304*(8.0/3.0);
            double t47445 = gamma_bb[index]*t47301*t47302*t47304*(8.0/3.0);
            double t47446 = t47444+t47445;
            double t47447 = gamma_aa[index]*gcab*t47386*(1.6E1/3.0);
            double t47448 = gamma_aa[index]*gcab*t47301*t47303*t47386*1.6E1;
            double t47449 = gamma_aa[index]*t47302*t47303*t47309*t47386*(1.6E1/3.0);
            double t47450 = gamma_aa[index]*t47301*t47302*t47386*1.6E1;
            double t47451 = t47450+t47447+t47448+t47449;
            double t47452 = gamma_bb[index]*gcab*t47304*(1.6E1/3.0);
            double t47453 = gamma_bb[index]*gcab*t47301*t47303*t47304*1.6E1;
            double t47454 = gamma_bb[index]*t47302*t47303*t47304*t47309*(1.6E1/3.0);
            double t47455 = gamma_bb[index]*t47301*t47302*t47304*1.6E1;
            double t47456 = t47452+t47453+t47454+t47455;
            double t47457 = gamma_aa[index]*gcab*t47386*4.0;
            double t47458 = gamma_aa[index]*gcab*t47301*t47303*t47386*4.0;
            double t47459 = gamma_aa[index]*t47301*t47302*t47386*8.0;
            double t47460 = t47457+t47458+t47459;
            double t47461 = gamma_bb[index]*gcab*t47304*4.0;
            double t47462 = gamma_bb[index]*gcab*t47301*t47303*t47304*4.0;
            double t47463 = gamma_bb[index]*t47301*t47302*t47304*8.0;
            double t47464 = t47461+t47462+t47463;
            v_rho_a_rho_b_[index] = (t47227+t47384+t47385+rho_a[index]*(-t47293+t47203*t47297*(t47293-(t47300* \
               1.0/(t47269*t47269)*(b2f*c*t47270*(1.0/3.0)+b4f*t47185*t47276*(2.0/3.0)+b1f*c*t47270*t47277*(1.0/6.0) \
               +b3f*c*t47270*t47262*(1.0/2.0)))/t47280+a1f*c*c0f*t47270*t47298*(2.0/3.0)-a1p*c*c0p*t47270*t47294* \
               (2.0/3.0))+a1p*c*c0p*t47270*t47294*(2.0/3.0))+t47178*(t47431+t47325+t47434+t47345+t47238-a1p*c*c0p* \
               t47216*t47190*(2.0/3.0)-t47203*t47222*t47217*t47228*t47239*4.0-t47203*t47222*t47225*t47228*t47395- \
               Aa*t47203*t47222*t47240*t47250*t47252*(t47335-t47225*t47197*t47198*4.0)*2.0-Aa*a1a*c*t47203*t47222* \
               t47240*t47250*t47190*t47259*(2.0/3.0))-c0p*t47285*t47294*2.0-t47203*t47436*t47297)*(ccab1*gamma_bb[index]* \
               gcab*t47304*t47388*(4.0/3.0)-ccab2*t47301*t47303*t47390*t47446-ccab4*t47310*t47309*t47456*t47389-ccab1* \
               gamma_bb[index]*t47301*t47302*t47304*t47392*(4.0/3.0)+ccab2*gamma_bb[index]*t47301*t47302*t47304*t47393* \
               (8.0/3.0)+ccab3*gamma_bb[index]*gcab*t47301*t47303*t47304*t47394*4.0+ccab4*gamma_bb[index]*t47302* \
               t47303*t47304*t47309*t47391*(1.6E1/3.0)-ccab3*gcab*t47301*t47302*t47303*t47464*t47387)+(ccab0+ccab1* \
               gcab*t47302*t47388+ccab2*t47301*t47303*t47393+ccab4*t47310*t47309*t47391+ccab3*gcab*t47301*t47302* \
               t47303*t47394)*(t47430-t47431+t47432+t47433-t47434+t47178*(t47410+t47415+t47418-t47231*t47402*t47411* \
               t47196*2.0-a1p*c*c0p*t47216*t47397*(8.0/9.0)-t47203*t47222*t47225*t47228*(t47410+t47415+t47418-t47231* \
               t47402*t47411*t47196*2.0+t47412*t47215*1.0/(t47209*t47209*t47209)*t47327*2.0-t47215*t47327*t47328* \
               (b2f*c*t47397*(4.0/9.0)+b4f*t47185*t47398*(1.0E1/9.0)+b1f*c*t47230*t47397*(2.0/9.0)+b3f*c*t47181*t47397* \
               (2.0/3.0)-b1f*t47403*t47185*t47398*(1.0/3.6E1)+b3f*t47230*t47185*t47398*(1.0/1.2E1))-1.0/(t47212*t47212) \
               *t47204*t47412*t47215*1.0/(t47209*t47209*t47209*t47209)*(1.0/2.0)+a1f*c*c0f*t47213*t47397*(8.0/9.0) \
               -a1p*c*c0p*t47216*t47397*(8.0/9.0)-a1f*c*t47333*t47190*t47327*t47328*(2.0/3.0))-t47203*t47222*t47217* \
               t47228*t47419*2.0E1+t47203*t47222*t47225*t47217*t47198*1.2E1+t47203*t47222*t47416*t47228*t47239*8.0+ \
               t47203*t47225*t47217*t47228*t47427+t47203*t47225*t47416*t47228*t47337-t47203*t47225*t47416*t47228* \
               t47257-t47203*t47217*t47228*t47337*t47239*4.0+t47203*t47217*t47228*t47239*t47257*4.0+t47203*t47225* \
               t47217*t47337*t47197*t47198*4.0+t47203*t47225*t47217*t47257*t47197*t47198*4.0+Aa*t47203*t47240*t47250* \
               t47421*t47252*t47257*2.0+Aa*t47203*t47240*t47250*t47252*t47337*t47428*2.0+Aa*t47203*t47240*t47250* \
               t47252*t47427*t47259*2.0-Aa*t47203*t47222*t47240*t47250*t47252*(t47228*t47419*2.0E1-t47225*t47198* \
               1.2E1)*2.0+t47203*t47222*t47240*t47421*t47252*t47344*t47338*t47339-t47203*t47222*t47240*t47252*t47344* \
               t47338*t47428*t47339+t47203*t47240*t47252*t47344*t47337*t47338*t47339*t47259-t47203*t47240*t47252* \
               t47344*t47257*t47338*t47339*t47259-t47203*t47222*t47240*t47252*1.0/(t47246*t47246*t47246)*t47338*t47429* \
               t47259*2.0+t47203*t47222*t47240*t47252*t47338*t47339*t47259*(b2a*c*t47397*(4.0/9.0)+b4a*t47185*t47398* \
               (1.0E1/9.0)+b1a*c*t47230*t47397*(2.0/9.0)+b3a*c*t47181*t47397*(2.0/3.0)-b1a*t47403*t47185*t47398*(1.0/ \
               3.6E1)+b3a*t47230*t47185*t47398*(1.0/1.2E1))-Aa*a1a*c*t47203*t47222*t47240*t47250*t47421*t47190*(2.0/ \
               3.0)+Aa*a1a*c*t47203*t47222*t47240*t47250*t47190*t47428*(2.0/3.0)-Aa*a1a*c*t47203*t47240*t47250*t47190* \
               t47337*t47259*(2.0/3.0)+Aa*a1a*c*t47203*t47240*t47250*t47190*t47257*t47259*(2.0/3.0)-Aa*a1a*c*t47203* \
               t47222*t47240*t47250*t47259*t47397*(8.0/9.0)+t47203*t47222*t47240*t47241*t47252*1.0/(t47246*t47246* \
               t47246*t47246)*1.0/(t47249*t47249)*t47429*t47259*(1.0/2.0)+a1a*c*t47203*t47222*t47240*t47190*t47344* \
               t47338*t47339*t47259*(2.0/3.0))-t47231*t47232*t47237*t47196*2.0+a1p*c*c0p*t47216*t47190*(4.0/3.0)- \
               t47203*t47222*t47225*t47416*t47228*2.0+t47203*t47222*t47217*t47228*t47239*8.0-Aa*t47203*t47222*t47240* \
               t47250*t47252*t47428*2.0-t47203*t47222*t47240*t47252*t47344*t47338*t47339*t47259*2.0+Aa*a1a*c*t47203* \
               t47222*t47240*t47250*t47190*t47259*(4.0/3.0))-(rho_b[index]*(t47440+t47203*t47439*t47297)+rho_a[index]* \
               (t47437+t47203*t47436*t47297)-t47178*(t47227+t47384+t47385))*(ccab4*t47310*t47309*t47389*(gamma_aa[index]* \
               gamma_bb[index]*t47301*t47304*t47386*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*t47303*t47304*t47309* \
               t47386*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t47301*t47302*t47304*t47386*(1.28E2/3.0))- \
               ccab2*t47301*1.0/(t47320*t47320*t47320)*t47303*t47443*t47446*2.0-ccab4*t47310*1.0/(t47315*t47315*t47315) \
               *t47451*t47309*t47456*2.0+ccab3*gcab*t47301*t47302*t47303*t47387*(gamma_aa[index]*gamma_bb[index]* \
               t47301*t47304*t47386*(3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t47301*t47302*t47304*t47386* \
               (3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]*t47301*t47304*t47392*t47386*(3.2E1/9.0)-ccab2*gamma_aa[index]* \
               gamma_bb[index]*t47301*t47304*t47393*t47386*(3.2E1/9.0)+ccab2*gamma_bb[index]*t47301*t47302*t47304* \
               t47443*t47390*(8.0/3.0)+ccab2*gamma_aa[index]*t47301*t47302*t47390*t47446*t47386*(8.0/3.0)-ccab3*gcab* \
               t47301*t47302*t47303*1.0/(t47324*t47324*t47324)*t47460*t47464*2.0+ccab2*gamma_aa[index]*gamma_bb[index]* \
               t47303*t47304*t47309*t47390*t47386*(3.2E1/9.0)-ccab4*gamma_aa[index]*gamma_bb[index]*t47303*t47304* \
               t47309*t47391*t47386*(6.4E1/3.0)+ccab3*gamma_bb[index]*gcab*t47301*t47303*t47304*t47460*t47387*4.0+ \
               ccab3*gamma_aa[index]*gcab*t47301*t47303*t47464*t47386*t47387*4.0+ccab4*gamma_bb[index]*t47302*t47303* \
               t47304*t47451*t47309*t47389*(1.6E1/3.0)+ccab4*gamma_aa[index]*t47302*t47303*t47309*t47456*t47386*t47389* \
               (1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t47301*t47302*t47304*t47394*t47386*(3.2E1/3.0) \
               -ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t47301*t47302*t47304*1.0/(t47317*t47317*t47317)*t47386* \
               (3.2E1/9.0))+(t47227+t47384+t47385-t47178*(t47430+t47432+t47325+t47433-t47345-t47238+t47396+t47203* \
               t47222*t47217*t47228*t47239*4.0+t47203*t47222*t47225*t47228*t47395+Aa*a1a*c*t47203*t47222*t47240*t47250* \
               t47190*t47259*(2.0/3.0))+rho_b[index]*(-t47379+t47203*t47297*(t47379-(1.0/(t47355*t47355)*t47383*(b2f* \
               c*t47356*(1.0/3.0)+b4f*t47362*t47185*(2.0/3.0)+b1f*c*t47363*t47356*(1.0/6.0)+b3f*c*t47356*t47348*(1.0/ \
               2.0)))/t47366+a1f*c*c0f*t47381*t47356*(2.0/3.0)-a1p*c*c0p*t47380*t47356*(2.0/3.0))+a1p*c*c0p*t47380* \
               t47356*(2.0/3.0))-c0p*t47371*t47380*2.0-t47203*t47439*t47297)*(ccab1*gamma_aa[index]*gcab*t47386*t47388* \
               (4.0/3.0)-ccab2*t47301*t47303*t47443*t47390-ccab4*t47310*t47451*t47309*t47389-ccab1*gamma_aa[index]* \
               t47301*t47302*t47392*t47386*(4.0/3.0)+ccab2*gamma_aa[index]*t47301*t47302*t47393*t47386*(8.0/3.0)+ \
               ccab3*gamma_aa[index]*gcab*t47301*t47303*t47394*t47386*4.0+ccab4*gamma_aa[index]*t47302*t47303*t47309* \
               t47391*t47386*(1.6E1/3.0)-ccab3*gcab*t47301*t47302*t47303*t47460*t47387);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t47466 = rho_a[index]+rho_b[index];
            double t47467 = 1.0/pow(t47466,1.0/3.0);
            double t47468 = c*t47467;
            double t47469 = sqrt(t47468);
            double t47470 = b1p*t47469;
            double t47471 = pow(t47468,3.0/2.0);
            double t47472 = b3p*t47471;
            double t47473 = c*c;
            double t47474 = 1.0/pow(t47466,2.0/3.0);
            double t47475 = b4p*t47473*t47474;
            double t47476 = b2p*c*t47467;
            double t47477 = t47470+t47472+t47475+t47476;
            double t47478 = 1.0/pow(t47466,4.0/3.0);
            double t47479 = 1.0/c0p;
            double t47480 = 1.0/t47477;
            double t47481 = t47480*t47479*(1.0/2.0);
            double t47482 = t47481+1.0;
            double t47483 = a1p*c*t47467;
            double t47484 = t47483+1.0;
            double t47485 = rho_a[index]-rho_b[index];
            double t47486 = t47485*t47485;
            double t47487 = 1.0/t47466;
            double t47488 = t47485*t47487;
            double t47489 = two_13*2.0;
            double t47490 = t47489-2.0;
            double t47491 = 1.0/t47490;
            double t47492 = 1.0/c0f;
            double t47493 = b1f*t47469;
            double t47494 = b3f*t47471;
            double t47495 = b4f*t47473*t47474;
            double t47496 = b2f*c*t47467;
            double t47497 = t47493+t47494+t47495+t47496;
            double t47498 = 1.0/t47497;
            double t47499 = t47492*t47498*(1.0/2.0);
            double t47500 = t47499+1.0;
            double t47501 = log(t47500);
            double t47502 = a1f*c*t47467;
            double t47503 = t47502+1.0;
            double t47504 = log(t47482);
            double t47515 = c0f*t47501*t47503*2.0;
            double t47516 = c0p*t47504*t47484*2.0;
            double t47505 = t47515-t47516;
            double t47506 = t47488+1.0;
            double t47507 = pow(t47506,4.0/3.0);
            double t47508 = -t47488+1.0;
            double t47509 = pow(t47508,4.0/3.0);
            double t47510 = t47507+t47509-2.0;
            double t47511 = 1.0/(t47466*t47466);
            double t47512 = t47511*t47485;
            double t47513 = t47512+t47487;
            double t47514 = 1.0/(t47466*t47466*t47466*t47466);
            double t47517 = t47486*t47486;
            double t47518 = 1.0/pow(t47466,5.0/3.0);
            double t47519 = 1.0/sqrt(t47468);
            double t47520 = 1.0/t47482;
            double t47521 = 1.0/(t47477*t47477);
            double t47522 = b4p*t47473*t47518*(2.0/3.0);
            double t47523 = b2p*c*t47478*(1.0/3.0);
            double t47524 = b1p*c*t47519*t47478*(1.0/6.0);
            double t47525 = b3p*c*t47469*t47478*(1.0/2.0);
            double t47526 = t47522+t47523+t47524+t47525;
            double t47527 = 1.0/(t47466*t47466*t47466*t47466*t47466);
            double t47528 = 1.0/d2fz0;
            double t47529 = 1.0/Aa;
            double t47530 = b1a*t47469;
            double t47531 = b3a*t47471;
            double t47532 = b4a*t47473*t47474;
            double t47533 = b2a*c*t47467;
            double t47534 = t47530+t47531+t47532+t47533;
            double t47535 = 1.0/t47534;
            double t47536 = t47535*t47529*(1.0/2.0);
            double t47537 = t47536+1.0;
            double t47538 = log(t47537);
            double t47539 = a1a*c*t47467;
            double t47540 = t47539+1.0;
            double t47541 = pow(t47506,1.0/3.0);
            double t47542 = t47513*t47541*(4.0/3.0);
            double t47543 = pow(t47508,1.0/3.0);
            double t47619 = t47513*t47543*(4.0/3.0);
            double t47544 = t47542-t47619;
            double t47545 = t47514*t47517;
            double t47546 = t47545-1.0;
            double t47547 = 1.0/pow(rho_b[index],1.0/3.0);
            double t47548 = c*t47547;
            double t47549 = sqrt(t47548);
            double t47550 = b1f*t47549;
            double t47551 = pow(t47548,3.0/2.0);
            double t47552 = b3f*t47551;
            double t47553 = 1.0/pow(rho_b[index],2.0/3.0);
            double t47554 = b4f*t47553*t47473;
            double t47555 = b2f*c*t47547;
            double t47556 = t47550+t47552+t47554+t47555;
            double t47557 = 1.0/pow(rho_b[index],4.0/3.0);
            double t47558 = b1p*t47549;
            double t47559 = b3p*t47551;
            double t47560 = b4p*t47553*t47473;
            double t47561 = b2p*c*t47547;
            double t47562 = t47560+t47561+t47558+t47559;
            double t47563 = 1.0/pow(rho_b[index],5.0/3.0);
            double t47564 = 1.0/sqrt(t47548);
            double t47565 = 1.0/t47556;
            double t47566 = t47492*t47565*(1.0/2.0);
            double t47567 = t47566+1.0;
            double t47568 = 1.0/t47562;
            double t47569 = t47568*t47479*(1.0/2.0);
            double t47570 = t47569+1.0;
            double t47571 = a1p*c*t47547;
            double t47572 = t47571+1.0;
            double t47573 = 1.0/t47570;
            double t47574 = 1.0/(t47562*t47562);
            double t47575 = b4p*t47473*t47563*(2.0/3.0);
            double t47576 = b2p*c*t47557*(1.0/3.0);
            double t47577 = b1p*c*t47564*t47557*(1.0/6.0);
            double t47578 = b3p*c*t47557*t47549*(1.0/2.0);
            double t47579 = t47575+t47576+t47577+t47578;
            double t47580 = t47572*t47573*t47574*t47579;
            double t47581 = log(t47570);
            double t47582 = pow(2.0,1.0/3.0);
            double t47583 = t47582*2.0;
            double t47584 = t47583-2.0;
            double t47585 = log(t47567);
            double t47586 = a1f*c*t47547;
            double t47587 = t47586+1.0;
            double t47588 = gcab*gcab;
            double t47592 = 1.0/pow(rho_a[index],8.0/3.0);
            double t47593 = gamma_aa[index]*t47592*(1.0/2.0);
            double t47594 = 1.0/pow(rho_b[index],8.0/3.0);
            double t47595 = gamma_bb[index]*t47594*(1.0/2.0);
            double t47589 = t47593+t47595;
            double t47590 = t47589*t47589;
            double t47591 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t47596 = t47588*t47588;
            double t47597 = t47590*t47590;
            double t47598 = t47590*t47588*6.0;
            double t47599 = gcab*t47590*t47588*t47589*4.0;
            double t47600 = t47596*t47597;
            double t47601 = gcab*t47589*4.0;
            double t47602 = t47600+t47601+t47598+t47599+1.0;
            double t47603 = gcab*t47589;
            double t47604 = t47603+1.0;
            double t47605 = t47590*t47588;
            double t47606 = gcab*t47589*2.0;
            double t47607 = t47605+t47606+1.0;
            double t47608 = t47590*t47588*3.0;
            double t47609 = gcab*t47590*t47588*t47589;
            double t47610 = gcab*t47589*3.0;
            double t47611 = t47610+t47608+t47609+1.0;
            double t47612 = a1p*c*c0p*t47504*t47478*(2.0/3.0);
            double t47613 = 1.0/t47607;
            double t47614 = 1.0/t47611;
            double t47615 = 1.0/t47604;
            double t47616 = 1.0/t47602;
            double t47617 = 1.0/pow(t47466,7.0/3.0);
            double t47618 = 1.0/pow(t47466,8.0/3.0);
            double t47620 = 1.0/t47500;
            double t47621 = 1.0/(t47497*t47497);
            double t47622 = b4f*t47473*t47518*(2.0/3.0);
            double t47623 = b2f*c*t47478*(1.0/3.0);
            double t47624 = b1f*c*t47519*t47478*(1.0/6.0);
            double t47625 = b3f*c*t47469*t47478*(1.0/2.0);
            double t47626 = t47622+t47623+t47624+t47625;
            double t47627 = t47503*t47620*t47621*t47626;
            double t47629 = t47520*t47521*t47526*t47484;
            double t47630 = a1f*c*c0f*t47501*t47478*(2.0/3.0);
            double t47628 = t47612-t47630+t47627-t47629;
            double t47631 = t47526*t47526;
            double t47632 = 1.0/pow(t47468,3.0/2.0);
            double t47633 = b4p*t47473*t47618*(1.0E1/9.0);
            double t47634 = b2p*c*t47617*(4.0/9.0);
            double t47635 = b1p*c*t47617*t47519*(2.0/9.0);
            double t47636 = b3p*c*t47617*t47469*(2.0/3.0);
            double t47637 = b3p*t47473*t47519*t47618*(1.0/1.2E1);
            double t47638 = t47633+t47634+t47635+t47636+t47637-b1p*t47632*t47473*t47618*(1.0/3.6E1);
            double t47639 = 1.0/(t47477*t47477*t47477);
            double t47640 = t47520*t47631*t47484*t47639*2.0;
            double t47641 = t47626*t47626;
            double t47642 = 1.0/(t47482*t47482);
            double t47643 = 1.0/(t47477*t47477*t47477*t47477);
            double t47644 = t47511*2.0;
            double t47645 = 1.0/(t47466*t47466*t47466);
            double t47646 = t47645*t47485*2.0;
            double t47647 = t47644+t47646;
            double t47648 = t47513*t47513;
            double t47649 = a1p*c*c0p*t47504*t47617*(8.0/9.0);
            double t47650 = 1.0/(t47466*t47466*t47466*t47466*t47466*t47466);
            double t47651 = t47514*t47485*t47486*4.0;
            double t47652 = t47517*t47527*4.0;
            double t47653 = t47651+t47652;
            double t47654 = t47541*t47647*(4.0/3.0);
            double t47655 = 1.0/pow(t47506,2.0/3.0);
            double t47656 = t47655*t47648*(4.0/9.0);
            double t47657 = 1.0/pow(t47508,2.0/3.0);
            double t47658 = t47648*t47657*(4.0/9.0);
            double t47659 = t47654+t47656+t47658-t47543*t47647*(4.0/3.0);
            double t47660 = 1.0/t47537;
            double t47661 = 1.0/(t47534*t47534);
            double t47662 = b4a*t47473*t47518*(2.0/3.0);
            double t47663 = b2a*c*t47478*(1.0/3.0);
            double t47664 = b1a*c*t47519*t47478*(1.0/6.0);
            double t47665 = b3a*c*t47469*t47478*(1.0/2.0);
            double t47666 = t47662+t47663+t47664+t47665;
            double t47667 = t47666*t47666;
            double t47668 = 1.0/t47567;
            double t47669 = b4f*t47473*t47563*(2.0/3.0);
            double t47670 = b2f*c*t47557*(1.0/3.0);
            double t47671 = b1f*c*t47564*t47557*(1.0/6.0);
            double t47672 = b3f*c*t47557*t47549*(1.0/2.0);
            double t47673 = t47670+t47671+t47672+t47669;
            double t47674 = 1.0/(t47556*t47556);
            double t47675 = 1.0/pow(rho_b[index],7.0/3.0);
            double t47676 = 1.0/pow(t47548,3.0/2.0);
            double t47677 = t47673*t47673;
            double t47678 = t47579*t47579;
            double t47679 = 1.0/(t47562*t47562*t47562);
            double t47680 = t47572*t47573*t47678*t47679*2.0;
            double t47681 = b4p*t47473*t47594*(1.0E1/9.0);
            double t47682 = b2p*c*t47675*(4.0/9.0);
            double t47683 = b3p*t47473*t47564*t47594*(1.0/1.2E1);
            double t47684 = b1p*c*t47564*t47675*(2.0/9.0);
            double t47685 = b3p*c*t47549*t47675*(2.0/3.0);
            double t47838 = b1p*t47473*t47594*t47676*(1.0/3.6E1);
            double t47686 = t47681+t47682+t47683+t47684+t47685-t47838;
            double t47687 = 1.0/(t47570*t47570);
            double t47688 = 1.0/(t47562*t47562*t47562*t47562);
            double t47689 = a1p*c*c0p*t47581*t47675*(8.0/9.0);
            double t47690 = a1f*c*c0f*t47557*t47585*(2.0/3.0);
            double t47691 = a1p*c*c0p*t47581*t47557*(2.0/3.0);
            double t47763 = t47673*t47674*t47587*t47668;
            double t47692 = t47580+t47690-t47691-t47763;
            double t47693 = gamma_bb[index]*gamma_bb[index];
            double t47694 = gcaa*gcaa;
            double t47695 = t47693*t47693;
            double t47696 = t47694*t47694;
            double t47697 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t47698 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t47699 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t47700 = 1.0/pow(rho_a[index],1.0/3.0);
            double t47701 = c*t47700;
            double t47702 = sqrt(t47701);
            double t47703 = pow(t47701,3.0/2.0);
            double t47704 = 1.0/pow(rho_a[index],2.0/3.0);
            double t47705 = b1p*t47702;
            double t47706 = b3p*t47703;
            double t47707 = b4p*t47704*t47473;
            double t47708 = b2p*c*t47700;
            double t47709 = t47705+t47706+t47707+t47708;
            double t47710 = 1.0/t47709;
            double t47711 = t47710*t47479*(1.0/2.0);
            double t47712 = t47711+1.0;
            double t47713 = log(t47712);
            double t47714 = a1p*c*t47700;
            double t47715 = t47714+1.0;
            double t47716 = c0p*t47713*t47715*2.0;
            double t47717 = c0f*t47585*t47587*2.0;
            double t47719 = c0p*t47572*t47581*2.0;
            double t47718 = t47717-t47719;
            double t47720 = t47510*t47505*t47514*t47517*t47491;
            double t47721 = Aa*t47510*t47540*t47491*t47528*t47546*t47538*2.0;
            double t47722 = gamma_bb[index]*gcab*t47591*(1.6E1/3.0);
            double t47723 = gamma_bb[index]*gcab*t47590*t47591*t47588*1.6E1;
            double t47724 = gamma_bb[index]*t47590*t47591*t47596*t47589*(1.6E1/3.0);
            double t47725 = gamma_bb[index]*t47591*t47588*t47589*1.6E1;
            double t47726 = t47722+t47723+t47724+t47725;
            double t47727 = 1.0/(t47604*t47604);
            double t47728 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t47729 = gamma_bb[index]*gcab*t47591*(8.0/3.0);
            double t47730 = gamma_bb[index]*t47591*t47588*t47589*(8.0/3.0);
            double t47731 = t47730+t47729;
            double t47732 = 1.0/(t47611*t47611);
            double t47733 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t47734 = 1.0/(t47602*t47602);
            double t47735 = 1.0/(t47607*t47607);
            double t47736 = gamma_bb[index]*gcab*t47591*4.0;
            double t47737 = gamma_bb[index]*gcab*t47590*t47591*t47588*4.0;
            double t47738 = gamma_bb[index]*t47591*t47588*t47589*8.0;
            double t47739 = t47736+t47737+t47738;
            double t47740 = t47491*t47718*t47584;
            double t47741 = t47740+t47719;
            double t47742 = gamma_bb[index]*gcaa*t47594*4.0;
            double t47743 = gamma_bb[index]*gcaa*t47693*t47694*t47698*4.0;
            double t47744 = t47693*t47694*t47699*6.0;
            double t47745 = t47695*t47696*t47697;
            double t47746 = t47742+t47743+t47744+t47745+1.0;
            double t47747 = 1.0/t47746;
            double t47748 = gamma_bb[index]*gcaa*t47594;
            double t47749 = t47748+1.0;
            double t47750 = 1.0/t47749;
            double t47751 = gamma_bb[index]*gcaa*t47594*3.0;
            double t47752 = gamma_bb[index]*gcaa*t47693*t47694*t47698;
            double t47753 = t47693*t47694*t47699*3.0;
            double t47754 = t47751+t47752+t47753+1.0;
            double t47755 = 1.0/t47754;
            double t47756 = gamma_bb[index]*gcaa*t47594*2.0;
            double t47757 = t47693*t47694*t47699;
            double t47758 = t47756+t47757+1.0;
            double t47759 = 1.0/t47758;
            double t47760 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t47761 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t47762 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t47764 = t47491*t47584*t47692;
            double t47765 = ccaa4*t47762*t47747*t47695*t47696*(3.2E1/3.0);
            double t47766 = ccaa1*gamma_bb[index]*gcaa*t47750*t47591*(8.0/3.0);
            double t47767 = ccaa3*gamma_bb[index]*gcaa*t47761*t47755*t47693*t47694*8.0;
            double t47768 = ccaa2*t47760*t47693*t47694*t47759*(1.6E1/3.0);
            double t47769 = 1.0/(t47749*t47749);
            double t47770 = gamma_bb[index]*gcaa*t47591*8.0;
            double t47771 = gamma_bb[index]*gcaa*t47761*t47693*t47694*8.0;
            double t47772 = t47760*t47693*t47694*1.6E1;
            double t47773 = t47770+t47771+t47772;
            double t47774 = 1.0/(t47754*t47754);
            double t47775 = gamma_bb[index]*gcaa*t47591*(3.2E1/3.0);
            double t47776 = gamma_bb[index]*gcaa*t47761*t47693*t47694*3.2E1;
            double t47777 = t47760*t47693*t47694*3.2E1;
            double t47778 = t47762*t47695*t47696*(3.2E1/3.0);
            double t47779 = t47775+t47776+t47777+t47778;
            double t47780 = 1.0/(t47746*t47746);
            double t47781 = gamma_bb[index]*gcaa*t47591*(1.6E1/3.0);
            double t47782 = t47760*t47693*t47694*(1.6E1/3.0);
            double t47783 = t47781+t47782;
            double t47784 = 1.0/(t47758*t47758);
            double t47785 = t47765+t47766+t47767+t47768-ccaa1*t47760*t47693*t47694*t47769*(8.0/3.0)-ccaa2*t47693* \
               t47783*t47694*t47784*t47699-ccaa4*t47780*t47695*t47696*t47697*t47779-ccaa3*gamma_bb[index]*gcaa*t47773* \
               t47693*t47774*t47694*t47698;
            double t47786 = -t47580+t47691+t47764;
            double t47787 = gx*gx;
            double t47788 = t47787*t47787;
            double t47789 = 1.0/pow(rho_b[index],1.0E1);
            double t47790 = gamma_bb[index]*gx*t47594;
            double t47791 = t47790+1.0;
            double t47811 = gamma_bb[index]*gx*t47591*(3.2E1/3.0);
            double t47812 = gamma_bb[index]*gx*t47761*t47693*t47787*3.2E1;
            double t47813 = t47760*t47693*t47787*3.2E1;
            double t47814 = t47762*t47695*t47788*(3.2E1/3.0);
            double t47792 = t47811+t47812+t47813+t47814;
            double t47793 = gamma_bb[index]*gx*t47594*4.0;
            double t47794 = gamma_bb[index]*gx*t47693*t47787*t47698*4.0;
            double t47795 = t47693*t47787*t47699*6.0;
            double t47796 = t47695*t47697*t47788;
            double t47797 = t47793+t47794+t47795+t47796+1.0;
            double t47817 = gamma_bb[index]*gx*t47591*(1.6E1/3.0);
            double t47818 = t47760*t47693*t47787*(1.6E1/3.0);
            double t47798 = t47817+t47818;
            double t47799 = gamma_bb[index]*gx*t47594*2.0;
            double t47800 = t47693*t47787*t47699;
            double t47801 = t47800+t47799+1.0;
            double t47802 = gamma_bb[index]*gx*t47594*3.0;
            double t47803 = gamma_bb[index]*gx*t47693*t47787*t47698;
            double t47804 = t47693*t47787*t47699*3.0;
            double t47805 = t47802+t47803+t47804+1.0;
            double t47806 = 1.0/(t47805*t47805);
            double t47807 = gamma_bb[index]*gx*t47591*8.0;
            double t47808 = gamma_bb[index]*gx*t47761*t47693*t47787*8.0;
            double t47809 = t47760*t47693*t47787*1.6E1;
            double t47810 = t47807+t47808+t47809;
            double t47815 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t47816 = 1.0/(t47797*t47797);
            double t47819 = 1.0/(t47801*t47801);
            double t47820 = 1.0/t47797;
            double t47821 = 1.0/t47791;
            double t47822 = 1.0/t47805;
            double t47823 = 1.0/t47801;
            double t47824 = 1.0/(t47791*t47791);
            double t47825 = ccaa4*t47747*t47695*t47696*t47697;
            double t47826 = ccaa1*gamma_bb[index]*gcaa*t47750*t47594;
            double t47827 = ccaa3*gamma_bb[index]*gcaa*t47755*t47693*t47694*t47698;
            double t47828 = ccaa2*t47693*t47694*t47759*t47699;
            double t47829 = ccaa0+t47825+t47826+t47827+t47828;
            double t47830 = 1.0/(t47556*t47556*t47556);
            double t47831 = b4f*t47473*t47594*(1.0E1/9.0);
            double t47832 = b2f*c*t47675*(4.0/9.0);
            double t47833 = b3f*t47473*t47564*t47594*(1.0/1.2E1);
            double t47834 = b1f*c*t47564*t47675*(2.0/9.0);
            double t47835 = b3f*c*t47549*t47675*(2.0/3.0);
            double t47836 = t47831+t47832+t47833+t47834+t47835-b1f*t47473*t47594*t47676*(1.0/3.6E1);
            double t47837 = t47674*t47836*t47587*t47668;
            double t47839 = t47572*t47573*t47574*t47686;
            double t47840 = 1.0/(t47567*t47567);
            double t47841 = 1.0/(t47556*t47556*t47556*t47556);
            double t47842 = t47840*t47841*t47492*t47587*t47677*(1.0/2.0);
            double t47843 = t47572*t47479*t47678*t47687*t47688*(1.0/2.0);
            double t47844 = a1f*c*t47673*t47557*t47674*t47668*(2.0/3.0);
            double t47845 = a1p*c*t47573*t47574*t47557*t47579*(2.0/3.0);
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t47615*t47589+ccab2*t47613*t47590*t47588+ccab4*t47616*t47596* \
               t47597+ccab3*gcab*t47614*t47590*t47588*t47589)*(-rho_b[index]*(-t47680+t47843+t47845+t47839-t47689+ \
               t47491*t47584*(t47680+t47842+t47844+t47837+t47689-t47572*t47573*t47574*t47686-t47830*t47587*t47668* \
               t47677*2.0-a1f*c*c0f*t47585*t47675*(8.0/9.0)-t47572*t47479*t47678*t47687*t47688*(1.0/2.0)-a1p*c*t47573* \
               t47574*t47557*t47579*(2.0/3.0)))-t47466*(t47640+t47649-t47520*t47521*t47484*t47638-t47510*t47514*t47517* \
               t47491*(t47640+t47649-t47520*t47521*t47484*t47638-t47503*t47620*t47641*1.0/(t47497*t47497*t47497)* \
               2.0+t47503*t47620*t47621*(b2f*c*t47617*(4.0/9.0)+b4f*t47473*t47618*(1.0E1/9.0)+b1f*c*t47617*t47519* \
               (2.0/9.0)+b3f*c*t47617*t47469*(2.0/3.0)-b1f*t47632*t47473*t47618*(1.0/3.6E1)+b3f*t47473*t47519*t47618* \
               (1.0/1.2E1))+1.0/(t47500*t47500)*t47503*t47641*t47492*1.0/(t47497*t47497*t47497*t47497)*(1.0/2.0)- \
               a1f*c*c0f*t47501*t47617*(8.0/9.0)-t47631*t47642*t47643*t47484*t47479*(1.0/2.0)+a1f*c*t47620*t47621* \
               t47626*t47478*(2.0/3.0)-a1p*c*t47520*t47521*t47526*t47478*(2.0/3.0))+t47510*t47505*t47650*t47517*t47491* \
               2.0E1+t47510*t47505*t47514*t47491*t47486*1.2E1-t47510*t47517*t47491*t47527*t47628*8.0+t47505*t47517* \
               t47544*t47491*t47527*8.0-t47514*t47517*t47544*t47491*t47628*2.0+t47505*t47514*t47517*t47491*t47659- \
               t47631*t47642*t47643*t47484*t47479*(1.0/2.0)+t47510*t47505*t47491*t47527*t47485*t47486*3.2E1-t47510* \
               t47514*t47491*t47628*t47485*t47486*8.0+t47505*t47514*t47544*t47491*t47485*t47486*8.0-a1p*c*t47520* \
               t47521*t47526*t47478*(2.0/3.0)+Aa*t47540*t47544*t47491*t47653*t47528*t47538*4.0+Aa*t47540*t47491*t47528* \
               t47546*t47538*t47659*2.0+Aa*t47510*t47540*t47491*t47528*t47538*(t47650*t47517*2.0E1+t47514*t47486* \
               1.2E1+t47527*t47485*t47486*3.2E1)*2.0-t47510*t47540*t47660*t47661*t47491*t47653*t47528*t47666*2.0- \
               t47540*t47660*t47544*t47661*t47491*t47528*t47546*t47666*2.0+t47510*t47540*1.0/(t47534*t47534*t47534) \
               *t47660*t47491*t47528*t47546*t47667*2.0-t47510*t47540*t47660*t47661*t47491*t47528*t47546*(b2a*c*t47617* \
               (4.0/9.0)+b4a*t47473*t47618*(1.0E1/9.0)+b1a*c*t47617*t47519*(2.0/9.0)+b3a*c*t47617*t47469*(2.0/3.0) \
               -b1a*t47632*t47473*t47618*(1.0/3.6E1)+b3a*t47473*t47519*t47618*(1.0/1.2E1))+Aa*a1a*c*t47510*t47491* \
               t47617*t47528*t47546*t47538*(8.0/9.0)+Aa*a1a*c*t47510*t47491*t47653*t47528*t47538*t47478*(4.0/3.0) \
               +Aa*a1a*c*t47544*t47491*t47528*t47546*t47538*t47478*(4.0/3.0)-t47510*t47540*1.0/(t47534*t47534*t47534* \
               t47534)*t47491*t47528*1.0/(t47537*t47537)*t47546*t47529*t47667*(1.0/2.0)-a1a*c*t47510*t47660*t47661* \
               t47491*t47528*t47546*t47666*t47478*(2.0/3.0))-t47491*t47584*t47692*2.0-t47520*t47521*t47526*t47484* \
               2.0+t47572*t47573*t47574*t47579*2.0+a1p*c*c0p*t47504*t47478*(4.0/3.0)-a1p*c*c0p*t47581*t47557*(4.0/ \
               3.0)+t47510*t47505*t47517*t47491*t47527*8.0-t47510*t47514*t47517*t47491*t47628*2.0+t47505*t47514*t47517* \
               t47544*t47491*2.0+t47510*t47505*t47514*t47491*t47485*t47486*8.0+Aa*t47510*t47540*t47491*t47653*t47528* \
               t47538*4.0+Aa*t47540*t47544*t47491*t47528*t47546*t47538*4.0-t47510*t47540*t47660*t47661*t47491*t47528* \
               t47546*t47666*2.0+Aa*a1a*c*t47510*t47491*t47528*t47546*t47538*t47478*(4.0/3.0))+(rho_b[index]*t47741+ \
               rho_a[index]*(t47716-t47491*t47584*(t47716-c0f*log((t47492*(1.0/2.0))/(b1f*t47702+b3f*t47703+b2f*c* \
               t47700+b4f*t47704*t47473)+1.0)*(a1f*c*t47700+1.0)*2.0))-t47466*(t47720+t47721+t47516))*(-ccab2*t47590* \
               t47735*t47588*(gamma_bb[index]*gcab*t47733*(8.8E1/9.0)+t47728*t47693*t47588*(3.2E1/9.0)+gamma_bb[index]* \
               t47733*t47588*t47589*(8.8E1/9.0))+ccab2*(t47731*t47731)*1.0/(t47607*t47607*t47607)*t47590*t47588*2.0+ \
               ccab4*1.0/(t47602*t47602*t47602)*(t47726*t47726)*t47596*t47597*2.0+ccab1*gamma_bb[index]*gcab*t47615* \
               t47733*(4.4E1/9.0)+ccab2*t47613*t47728*t47693*t47588*(3.2E1/9.0)-ccab1*t47727*t47728*t47693*t47588* \
               (3.2E1/9.0)-ccab4*t47734*t47596*t47597*(gamma_bb[index]*gcab*t47733*(1.76E2/9.0)+t47728*t47693*t47588* \
               (6.4E1/3.0)+gamma_bb[index]*t47733*t47588*t47589*(1.76E2/3.0)+t47590*t47728*t47693*t47596*(6.4E1/3.0) \
               +gamma_bb[index]*gcab*t47733*t47590*t47588*(1.76E2/3.0)+gamma_bb[index]*t47733*t47590*t47596*t47589* \
               (1.76E2/9.0)+gcab*t47728*t47693*t47588*t47589*(1.28E2/3.0))+ccab4*t47616*t47590*t47728*t47693*t47596* \
               (6.4E1/3.0)+ccab2*gamma_bb[index]*t47613*t47733*t47588*t47589*(8.8E1/9.0)-ccab1*gamma_bb[index]*t47733* \
               t47727*t47588*t47589*(4.4E1/9.0)+ccab3*gcab*1.0/(t47611*t47611*t47611)*t47590*(t47739*t47739)*t47588* \
               t47589*2.0+ccab3*gamma_bb[index]*gcab*t47614*t47733*t47590*t47588*(4.4E1/3.0)-ccab2*gamma_bb[index]* \
               t47731*t47591*t47735*t47588*t47589*(1.6E1/3.0)+ccab4*gamma_bb[index]*t47616*t47733*t47590*t47596*t47589* \
               (1.76E2/9.0)+ccab3*gcab*t47614*t47728*t47693*t47588*t47589*(3.2E1/3.0)+ccab1*gcab*1.0/(t47604*t47604* \
               t47604)*t47728*t47693*t47588*t47589*(3.2E1/9.0)-ccab3*gcab*t47732*t47590*t47588*t47589*(gamma_bb[index]* \
               gcab*t47733*(4.4E1/3.0)+t47728*t47693*t47588*(3.2E1/3.0)+gamma_bb[index]*t47733*t47588*t47589*(8.8E1/ \
               3.0)+gamma_bb[index]*gcab*t47733*t47590*t47588*(4.4E1/3.0)+gcab*t47728*t47693*t47588*t47589*(3.2E1/ \
               3.0))-ccab3*gamma_bb[index]*gcab*t47732*t47590*t47591*t47739*t47588*8.0-ccab4*gamma_bb[index]*t47590* \
               t47734*t47591*t47726*t47596*t47589*(3.2E1/3.0))+(t47720+t47721+t47516+rho_b[index]*(-t47580+t47691+ \
               t47491*t47584*(t47580+t47690-t47673*t47674*t47587*t47668-a1p*c*c0p*t47581*t47557*(2.0/3.0)))-t47466* \
               (t47612-t47520*t47521*t47526*t47484+t47510*t47505*t47517*t47491*t47527*4.0-t47510*t47514*t47517*t47491* \
               t47628+t47505*t47514*t47517*t47544*t47491+t47510*t47505*t47514*t47491*t47485*t47486*4.0+Aa*t47510* \
               t47540*t47491*t47653*t47528*t47538*2.0+Aa*t47540*t47544*t47491*t47528*t47546*t47538*2.0-t47510*t47540* \
               t47660*t47661*t47491*t47528*t47546*t47666+Aa*a1a*c*t47510*t47491*t47528*t47546*t47538*t47478*(2.0/ \
               3.0))-c0p*t47572*t47581*2.0-t47491*t47718*t47584)*(ccab1*gamma_bb[index]*gcab*t47615*t47591*(4.0/3.0) \
               -ccab2*t47731*t47590*t47735*t47588-ccab4*t47734*t47726*t47596*t47597+ccab2*gamma_bb[index]*t47613* \
               t47591*t47588*t47589*(8.0/3.0)-ccab1*gamma_bb[index]*t47591*t47727*t47588*t47589*(4.0/3.0)+ccab3*gamma_bb[index]* \
               gcab*t47614*t47590*t47591*t47588*4.0+ccab4*gamma_bb[index]*t47616*t47590*t47591*t47596*t47589*(1.6E1/ \
               3.0)-ccab3*gcab*t47732*t47590*t47739*t47588*t47589)*2.0+t47741*t47785*2.0+t47829*t47786*2.0-c0*pow(rho_b[index],1.0/ \
               3.0)*(cx1*gamma_bb[index]*gx*t47821*t47591*(8.0/3.0)-cx1*t47760*t47824*t47693*t47787*(8.0/3.0)+cx2* \
               t47760*t47823*t47693*t47787*(1.6E1/3.0)+cx4*t47820*t47762*t47695*t47788*(3.2E1/3.0)-cx2*t47693*t47819* \
               t47787*t47699*t47798-cx4*t47816*t47792*t47695*t47697*t47788+cx3*gamma_bb[index]*gx*t47822*t47761*t47693* \
               t47787*8.0-cx3*gamma_bb[index]*gx*t47810*t47806*t47693*t47787*t47698)*(8.0/3.0)-rho_b[index]*t47741* \
               (ccaa1*gamma_bb[index]*gcaa*t47750*t47733*(8.8E1/9.0)-ccaa1*t47728*t47693*t47694*t47769*2.4E1+ccaa2* \
               t47728*t47693*t47694*t47759*(3.04E2/9.0)+ccaa4*t47815*t47747*t47695*t47696*(1.12E3/9.0)-ccaa2*t47760* \
               t47693*t47783*t47694*t47784*(3.2E1/3.0)-ccaa4*t47762*t47780*t47695*t47696*t47779*(6.4E1/3.0)-ccaa2* \
               t47693*t47694*t47784*t47699*(gamma_bb[index]*gcaa*t47733*(1.76E2/9.0)+t47728*t47693*t47694*(3.04E2/ \
               9.0))-ccaa4*t47780*t47695*t47696*t47697*(gamma_bb[index]*gcaa*t47733*(3.52E2/9.0)+t47728*t47693*t47694* \
               (6.08E2/3.0)+t47815*t47695*t47696*(1.12E3/9.0)+gamma_bb[index]*gcaa*t47693*t47694*t47789*2.88E2)+ccaa2* \
               t47693*(t47783*t47783)*t47694*1.0/(t47758*t47758*t47758)*t47699*2.0+ccaa4*1.0/(t47746*t47746*t47746) \
               *t47695*t47696*t47697*(t47779*t47779)*2.0+ccaa3*gamma_bb[index]*gcaa*t47755*t47693*t47694*t47789*7.2E1+ \
               ccaa1*gamma_bb[index]*gcaa*t47693*t47694*1.0/(t47749*t47749*t47749)*t47789*(1.28E2/9.0)+ccaa3*gamma_bb[index]* \
               gcaa*1.0/(t47754*t47754*t47754)*(t47773*t47773)*t47693*t47694*t47698*2.0-ccaa3*gamma_bb[index]*gcaa* \
               t47693*t47774*t47694*t47698*(gamma_bb[index]*gcaa*t47733*(8.8E1/3.0)+t47728*t47693*t47694*(3.04E2/ \
               3.0)+gamma_bb[index]*gcaa*t47693*t47694*t47789*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t47761*t47773*t47693* \
               t47774*t47694*1.6E1)+rho_b[index]*t47829*(-t47680+t47843+t47845+t47839-t47689+t47491*t47584*(t47680+ \
               t47842-t47843+t47844-t47845+t47837-t47839+t47689-t47830*t47587*t47668*t47677*2.0-a1f*c*c0f*t47585* \
               t47675*(8.0/9.0)))-rho_b[index]*t47785*t47786*2.0+c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]* \
               gx*t47821*t47733*(8.8E1/9.0)-cx1*t47824*t47728*t47693*t47787*2.4E1+cx2*t47823*t47728*t47693*t47787* \
               (3.04E2/9.0)+cx4*t47820*t47815*t47695*t47788*(1.12E3/9.0)-cx2*t47760*t47693*t47819*t47787*t47798*(3.2E1/ \
               3.0)-cx4*t47762*t47816*t47792*t47695*t47788*(6.4E1/3.0)-cx2*t47693*t47819*t47787*t47699*(gamma_bb[index]* \
               gx*t47733*(1.76E2/9.0)+t47728*t47693*t47787*(3.04E2/9.0))-cx4*t47816*t47695*t47697*t47788*(gamma_bb[index]* \
               gx*t47733*(3.52E2/9.0)+t47815*t47695*t47788*(1.12E3/9.0)+t47728*t47693*t47787*(6.08E2/3.0)+gamma_bb[index]* \
               gx*t47693*t47787*t47789*2.88E2)+cx2*1.0/(t47801*t47801*t47801)*t47693*t47787*t47699*(t47798*t47798) \
               *2.0+cx4*(t47792*t47792)*t47695*t47697*t47788*1.0/(t47797*t47797*t47797)*2.0+cx3*gamma_bb[index]*gx* \
               t47822*t47693*t47787*t47789*7.2E1+cx1*gamma_bb[index]*gx*1.0/(t47791*t47791*t47791)*t47693*t47787* \
               t47789*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*(t47810*t47810)*1.0/(t47805*t47805*t47805)*t47693*t47787* \
               t47698*2.0-cx3*gamma_bb[index]*gx*t47806*t47693*t47787*t47698*(gamma_bb[index]*gx*t47733*(8.8E1/3.0) \
               +t47728*t47693*t47787*(3.04E2/3.0)+gamma_bb[index]*gx*t47693*t47787*t47789*7.2E1)-cx3*gamma_bb[index]* \
               gx*t47810*t47761*t47806*t47693*t47787*1.6E1)+c0*t47553*(cx0+cx1*gamma_bb[index]*gx*t47821*t47594+cx2* \
               t47823*t47693*t47787*t47699+cx4*t47820*t47695*t47697*t47788+cx3*gamma_bb[index]*gx*t47822*t47693*t47787* \
               t47698)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t49612 = 1.0/pow(rho_b[index],1.0/3.0);
            double t49613 = c*t49612;
            double t49614 = sqrt(t49613);
            double t49615 = b1f*t49614;
            double t49616 = pow(t49613,3.0/2.0);
            double t49617 = b3f*t49616;
            double t49618 = c*c;
            double t49619 = 1.0/pow(rho_b[index],2.0/3.0);
            double t49620 = b4f*t49618*t49619;
            double t49621 = b2f*c*t49612;
            double t49622 = t49620+t49621+t49615+t49617;
            double t49623 = 1.0/pow(rho_b[index],4.0/3.0);
            double t49624 = b1p*t49614;
            double t49625 = b3p*t49616;
            double t49626 = b4p*t49618*t49619;
            double t49627 = b2p*c*t49612;
            double t49628 = t49624+t49625+t49626+t49627;
            double t49629 = 1.0/pow(rho_b[index],5.0/3.0);
            double t49630 = 1.0/sqrt(t49613);
            double t49631 = 1.0/c0f;
            double t49632 = 1.0/t49622;
            double t49633 = t49631*t49632*(1.0/2.0);
            double t49634 = t49633+1.0;
            double t49635 = 1.0/c0p;
            double t49636 = 1.0/t49628;
            double t49637 = t49635*t49636*(1.0/2.0);
            double t49638 = t49637+1.0;
            double t49639 = a1p*c*t49612;
            double t49640 = t49639+1.0;
            double t49641 = 1.0/t49638;
            double t49642 = 1.0/(t49628*t49628);
            double t49643 = b4p*t49618*t49629*(2.0/3.0);
            double t49644 = b2p*c*t49623*(1.0/3.0);
            double t49645 = b1p*c*t49630*t49623*(1.0/6.0);
            double t49646 = b3p*c*t49614*t49623*(1.0/2.0);
            double t49647 = t49643+t49644+t49645+t49646;
            double t49648 = t49640*t49641*t49642*t49647;
            double t49649 = log(t49638);
            double t49650 = gamma_bb[index]*gamma_bb[index];
            double t49651 = gcaa*gcaa;
            double t49652 = t49650*t49650;
            double t49653 = t49651*t49651;
            double t49654 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t49655 = 1.0/pow(rho_b[index],8.0/3.0);
            double t49656 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t49657 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t49658 = pow(2.0,1.0/3.0);
            double t49659 = t49658*2.0;
            double t49660 = t49659-2.0;
            double t49661 = two_13*2.0;
            double t49662 = t49661-2.0;
            double t49663 = 1.0/t49662;
            double t49664 = log(t49634);
            double t49665 = a1f*c*t49612;
            double t49666 = t49665+1.0;
            double t49667 = gamma_bb[index]*gcaa*t49655*4.0;
            double t49668 = gamma_bb[index]*gcaa*t49650*t49651*t49656*4.0;
            double t49669 = t49650*t49651*t49657*6.0;
            double t49670 = t49652*t49653*t49654;
            double t49671 = t49670+t49667+t49668+t49669+1.0;
            double t49672 = 1.0/t49671;
            double t49673 = gamma_bb[index]*gcaa*t49655;
            double t49674 = t49673+1.0;
            double t49675 = 1.0/t49674;
            double t49676 = gamma_bb[index]*gcaa*t49655*3.0;
            double t49677 = gamma_bb[index]*gcaa*t49650*t49651*t49656;
            double t49678 = t49650*t49651*t49657*3.0;
            double t49679 = t49676+t49677+t49678+1.0;
            double t49680 = 1.0/t49679;
            double t49681 = gamma_bb[index]*gcaa*t49655*2.0;
            double t49682 = t49650*t49651*t49657;
            double t49683 = t49681+t49682+1.0;
            double t49684 = 1.0/t49683;
            double t49685 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t49686 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t49687 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t49688 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t49689 = 1.0/t49634;
            double t49690 = 1.0/(t49622*t49622);
            double t49691 = b4f*t49618*t49629*(2.0/3.0);
            double t49692 = b2f*c*t49623*(1.0/3.0);
            double t49693 = b1f*c*t49630*t49623*(1.0/6.0);
            double t49694 = b3f*c*t49614*t49623*(1.0/2.0);
            double t49695 = t49691+t49692+t49693+t49694;
            double t49696 = a1f*c*c0f*t49623*t49664*(2.0/3.0);
            double t49697 = a1p*c*c0p*t49623*t49649*(2.0/3.0);
            double t49698 = ccaa4*t49652*t49653*t49672*t49688*(3.2E1/3.0);
            double t49699 = ccaa1*gamma_bb[index]*gcaa*t49675*t49686*(8.0/3.0);
            double t49700 = ccaa3*gamma_bb[index]*gcaa*t49650*t49651*t49680*t49687*8.0;
            double t49701 = ccaa2*t49650*t49651*t49684*t49685*(1.6E1/3.0);
            double t49702 = 1.0/(t49674*t49674);
            double t49703 = gamma_bb[index]*gcaa*t49686*8.0;
            double t49704 = gamma_bb[index]*gcaa*t49650*t49651*t49687*8.0;
            double t49705 = t49650*t49651*t49685*1.6E1;
            double t49706 = t49703+t49704+t49705;
            double t49707 = 1.0/(t49679*t49679);
            double t49708 = gamma_bb[index]*gcaa*t49686*(3.2E1/3.0);
            double t49709 = gamma_bb[index]*gcaa*t49650*t49651*t49687*3.2E1;
            double t49710 = t49650*t49651*t49685*3.2E1;
            double t49711 = t49652*t49653*t49688*(3.2E1/3.0);
            double t49712 = t49710+t49711+t49708+t49709;
            double t49713 = 1.0/(t49671*t49671);
            double t49714 = gamma_bb[index]*gcaa*t49686*(1.6E1/3.0);
            double t49715 = t49650*t49651*t49685*(1.6E1/3.0);
            double t49716 = t49714+t49715;
            double t49717 = 1.0/(t49683*t49683);
            double t49718 = t49700+t49701+t49698+t49699-ccaa1*t49702*t49650*t49651*t49685*(8.0/3.0)-ccaa4*t49712* \
               t49713*t49652*t49653*t49654-ccaa2*t49650*t49651*t49716*t49717*t49657-ccaa3*gamma_bb[index]*gcaa*t49650* \
               t49651*t49706*t49707*t49656;
            double t49719 = gx*gx;
            double t49720 = t49719*t49719;
            double t49721 = 1.0/pow(rho_b[index],1.0E1);
            double t49722 = gamma_bb[index]*gx*t49655;
            double t49723 = t49722+1.0;
            double t49724 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t49745 = gamma_bb[index]*gx*t49686*(3.2E1/3.0);
            double t49746 = gamma_bb[index]*gx*t49650*t49719*t49687*3.2E1;
            double t49747 = t49650*t49719*t49685*3.2E1;
            double t49748 = t49720*t49652*t49688*(3.2E1/3.0);
            double t49725 = t49745+t49746+t49747+t49748;
            double t49726 = gamma_bb[index]*gx*t49655*4.0;
            double t49727 = gamma_bb[index]*gx*t49650*t49656*t49719*4.0;
            double t49728 = t49650*t49719*t49657*6.0;
            double t49729 = t49720*t49652*t49654;
            double t49730 = t49726+t49727+t49728+t49729+1.0;
            double t49751 = gamma_bb[index]*gx*t49686*(1.6E1/3.0);
            double t49752 = t49650*t49719*t49685*(1.6E1/3.0);
            double t49731 = t49751+t49752;
            double t49732 = gamma_bb[index]*gx*t49655*2.0;
            double t49733 = t49650*t49719*t49657;
            double t49734 = t49732+t49733+1.0;
            double t49735 = gamma_bb[index]*gx*t49655*3.0;
            double t49736 = gamma_bb[index]*gx*t49650*t49656*t49719;
            double t49737 = t49650*t49719*t49657*3.0;
            double t49738 = t49735+t49736+t49737+1.0;
            double t49739 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t49740 = 1.0/(t49738*t49738);
            double t49741 = gamma_bb[index]*gx*t49686*8.0;
            double t49742 = gamma_bb[index]*gx*t49650*t49719*t49687*8.0;
            double t49743 = t49650*t49719*t49685*1.6E1;
            double t49744 = t49741+t49742+t49743;
            double t49749 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t49750 = 1.0/(t49730*t49730);
            double t49753 = 1.0/(t49734*t49734);
            double t49754 = 1.0/t49730;
            double t49755 = 1.0/t49723;
            double t49756 = 1.0/t49738;
            double t49757 = 1.0/t49734;
            double t49758 = c0f*t49664*t49666*2.0;
            double t49759 = c0p*t49640*t49649*2.0;
            double t49760 = 1.0/(t49723*t49723);
            double t49761 = ccaa4*t49652*t49653*t49654*t49672;
            double t49762 = ccaa1*gamma_bb[index]*gcaa*t49655*t49675;
            double t49763 = ccaa3*gamma_bb[index]*gcaa*t49650*t49651*t49680*t49656;
            double t49764 = ccaa2*t49650*t49651*t49657*t49684;
            double t49765 = ccaa0+t49761+t49762+t49763+t49764;
            double t49766 = 1.0/pow(rho_b[index],7.0/3.0);
            double t49767 = 1.0/pow(t49613,3.0/2.0);
            double t49768 = t49695*t49695;
            double t49769 = t49647*t49647;
            double t49770 = 1.0/(t49628*t49628*t49628);
            double t49771 = t49640*t49641*t49770*t49769*2.0;
            double t49772 = b4p*t49618*t49655*(1.0E1/9.0);
            double t49773 = b2p*c*t49766*(4.0/9.0);
            double t49774 = b3p*t49630*t49618*t49655*(1.0/1.2E1);
            double t49775 = b1p*c*t49630*t49766*(2.0/9.0);
            double t49776 = b3p*c*t49614*t49766*(2.0/3.0);
            double t49777 = t49772+t49773+t49774+t49775+t49776-b1p*t49618*t49655*t49767*(1.0/3.6E1);
            double t49778 = 1.0/(t49638*t49638);
            double t49779 = 1.0/(t49628*t49628*t49628*t49628);
            double t49780 = a1p*c*c0p*t49649*t49766*(8.0/9.0);
            v_rho_b_rho_b_[index] = t49718*(t49759+t49660*t49663*(t49758-c0p*t49640*t49649*2.0))*2.0+t49765*(- \
               t49648+t49697+t49660*t49663*(t49648+t49696-t49690*t49666*t49695*t49689-a1p*c*c0p*t49623*t49649*(2.0/ \
               3.0)))*2.0-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]*gx*t49755*t49686*(8.0/3.0)-cx1*t49650* \
               t49760*t49719*t49685*(8.0/3.0)+cx2*t49650*t49719*t49685*t49757*(1.6E1/3.0)+cx4*t49720*t49652*t49754* \
               t49688*(3.2E1/3.0)-cx2*t49650*t49731*t49753*t49719*t49657-cx4*t49720*t49750*t49652*t49725*t49654+cx3* \
               gamma_bb[index]*gx*t49650*t49719*t49756*t49687*8.0-cx3*gamma_bb[index]*gx*t49650*t49740*t49744*t49656* \
               t49719)*(8.0/3.0)+rho_b[index]*t49765*(-t49771-t49780+t49660*t49663*(t49771+t49780-t49640*t49641*t49642* \
               t49777-1.0/(t49622*t49622*t49622)*t49666*t49768*t49689*2.0+t49690*t49666*t49689*(b2f*c*t49766*(4.0/ \
               9.0)+b4f*t49618*t49655*(1.0E1/9.0)+b1f*c*t49630*t49766*(2.0/9.0)+b3f*c*t49614*t49766*(2.0/3.0)-b1f* \
               t49618*t49655*t49767*(1.0/3.6E1)+b3f*t49630*t49618*t49655*(1.0/1.2E1))+1.0/(t49622*t49622*t49622*t49622) \
               *t49631*1.0/(t49634*t49634)*t49666*t49768*(1.0/2.0)-a1f*c*c0f*t49664*t49766*(8.0/9.0)-t49640*t49635* \
               t49769*t49778*t49779*(1.0/2.0)+a1f*c*t49623*t49690*t49695*t49689*(2.0/3.0)-a1p*c*t49623*t49641*t49642* \
               t49647*(2.0/3.0))+t49640*t49641*t49642*t49777+t49640*t49635*t49769*t49778*t49779*(1.0/2.0)+a1p*c*t49623* \
               t49641*t49642*t49647*(2.0/3.0))-rho_b[index]*t49718*(-t49648+t49697+t49660*t49663*(t49648+t49696-t49697- \
               t49690*t49666*t49695*t49689))*2.0-rho_b[index]*(t49759+t49660*t49663*(t49758-t49759))*(ccaa1*gamma_bb[index]* \
               gcaa*t49675*t49739*(8.8E1/9.0)-ccaa1*t49702*t49650*t49651*t49724*2.4E1+ccaa2*t49650*t49651*t49724* \
               t49684*(3.04E2/9.0)+ccaa4*t49652*t49653*t49672*t49749*(1.12E3/9.0)-ccaa2*t49650*t49651*t49716*t49717* \
               t49685*(3.2E1/3.0)-ccaa4*t49712*t49713*t49652*t49653*t49688*(6.4E1/3.0)-ccaa2*t49650*t49651*t49717* \
               t49657*(gamma_bb[index]*gcaa*t49739*(1.76E2/9.0)+t49650*t49651*t49724*(3.04E2/9.0))-ccaa4*t49713*t49652* \
               t49653*t49654*(gamma_bb[index]*gcaa*t49739*(3.52E2/9.0)+t49650*t49651*t49724*(6.08E2/3.0)+t49652*t49653* \
               t49749*(1.12E3/9.0)+gamma_bb[index]*gcaa*t49721*t49650*t49651*2.88E2)+ccaa4*(t49712*t49712)*t49652* \
               t49653*1.0/(t49671*t49671*t49671)*t49654*2.0+ccaa2*t49650*t49651*(t49716*t49716)*1.0/(t49683*t49683* \
               t49683)*t49657*2.0+ccaa3*gamma_bb[index]*gcaa*t49721*t49650*t49651*t49680*7.2E1+ccaa1*gamma_bb[index]* \
               gcaa*t49721*t49650*t49651*1.0/(t49674*t49674*t49674)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t49650* \
               t49651*(t49706*t49706)*t49656*1.0/(t49679*t49679*t49679)*2.0-ccaa3*gamma_bb[index]*gcaa*t49650*t49651* \
               t49707*t49656*(gamma_bb[index]*gcaa*t49739*(8.8E1/3.0)+t49650*t49651*t49724*(3.04E2/3.0)+gamma_bb[index]* \
               gcaa*t49721*t49650*t49651*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t49650*t49651*t49706*t49707*t49687*1.6E1) \
               +c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t49755*t49739*(8.8E1/9.0)-cx1*t49650*t49724* \
               t49760*t49719*2.4E1+cx2*t49650*t49724*t49719*t49757*(3.04E2/9.0)+cx4*t49720*t49652*t49754*t49749*(1.12E3/ \
               9.0)-cx2*t49650*t49731*t49753*t49719*t49685*(3.2E1/3.0)-cx4*t49720*t49750*t49652*t49725*t49688*(6.4E1/ \
               3.0)-cx2*t49650*t49753*t49719*t49657*(gamma_bb[index]*gx*t49739*(1.76E2/9.0)+t49650*t49724*t49719* \
               (3.04E2/9.0))-cx4*t49720*t49750*t49652*t49654*(gamma_bb[index]*gx*t49739*(3.52E2/9.0)+t49650*t49724* \
               t49719*(6.08E2/3.0)+t49720*t49652*t49749*(1.12E3/9.0)+gamma_bb[index]*gx*t49721*t49650*t49719*2.88E2) \
               +cx2*t49650*(t49731*t49731)*1.0/(t49734*t49734*t49734)*t49719*t49657*2.0+cx4*t49720*1.0/(t49730*t49730* \
               t49730)*t49652*(t49725*t49725)*t49654*2.0+cx3*gamma_bb[index]*gx*t49721*t49650*t49719*t49756*7.2E1+ \
               cx1*gamma_bb[index]*gx*t49721*t49650*1.0/(t49723*t49723*t49723)*t49719*(1.28E2/9.0)+cx3*gamma_bb[index]* \
               gx*t49650*(t49744*t49744)*t49656*t49719*1.0/(t49738*t49738*t49738)*2.0-cx3*gamma_bb[index]*gx*t49650* \
               t49740*t49656*t49719*(gamma_bb[index]*gx*t49739*(8.8E1/3.0)+t49650*t49724*t49719*(3.04E2/3.0)+gamma_bb[index]* \
               gx*t49721*t49650*t49719*7.2E1)-cx3*gamma_bb[index]*gx*t49650*t49740*t49744*t49719*t49687*1.6E1)+c0* \
               t49619*(cx0+cx1*gamma_bb[index]*gx*t49655*t49755+cx2*t49650*t49719*t49657*t49757+cx4*t49720*t49652* \
               t49654*t49754+cx3*gamma_bb[index]*gx*t49650*t49656*t49719*t49756)*(4.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t47847 = 1.0/pow(rho_a[index],1.0/3.0);
                double t47848 = c*t47847;
                double t47849 = sqrt(t47848);
                double t47850 = pow(t47848,3.0/2.0);
                double t47851 = c*c;
                double t47852 = 1.0/pow(rho_a[index],2.0/3.0);
                double t47853 = 1.0/c0p;
                double t47854 = b1p*t47849;
                double t47855 = b3p*t47850;
                double t47856 = b4p*t47851*t47852;
                double t47857 = b2p*c*t47847;
                double t47858 = t47854+t47855+t47856+t47857;
                double t47859 = 1.0/t47858;
                double t47860 = t47853*t47859*(1.0/2.0);
                double t47861 = t47860+1.0;
                double t47862 = log(t47861);
                double t47863 = a1p*c*t47847;
                double t47864 = t47863+1.0;
                double t47865 = 1.0/pow(rho_a[index],8.0/3.0);
                double t47866 = gamma_aa[index]*gamma_aa[index];
                double t47867 = gcaa*gcaa;
                double t47868 = t47867*t47867;
                double t47869 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t47870 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t47871 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t47872 = gamma_aa[index]*gcaa*t47865;
                double t47873 = t47872+1.0;
                double t47874 = gamma_aa[index]*gcaa*t47865*3.0;
                double t47875 = gamma_aa[index]*gcaa*t47871*t47866*t47867;
                double t47876 = t47870*t47866*t47867*3.0;
                double t47877 = t47874+t47875+t47876+1.0;
                double t47878 = t47866*t47866;
                double t47879 = gamma_aa[index]*gcaa*t47865*4.0;
                double t47880 = gamma_aa[index]*gcaa*t47871*t47866*t47867*4.0;
                double t47881 = t47870*t47866*t47867*6.0;
                double t47882 = t47868*t47869*t47878;
                double t47883 = t47880+t47881+t47882+t47879+1.0;
                double t47884 = gamma_aa[index]*gcaa*t47865*2.0;
                double t47885 = t47870*t47866*t47867;
                double t47886 = t47884+t47885+1.0;
                double t47887 = rho_a[index]+rho_b[index];
                double t47888 = 1.0/pow(t47887,1.0/3.0);
                double t47889 = c*t47888;
                double t47890 = sqrt(t47889);
                double t47891 = b1p*t47890;
                double t47892 = pow(t47889,3.0/2.0);
                double t47893 = b3p*t47892;
                double t47894 = 1.0/pow(t47887,2.0/3.0);
                double t47895 = b4p*t47851*t47894;
                double t47896 = b2p*c*t47888;
                double t47897 = t47891+t47893+t47895+t47896;
                double t47898 = 1.0/pow(t47887,4.0/3.0);
                double t47899 = two_13*2.0;
                double t47900 = t47899-2.0;
                double t47901 = 1.0/t47900;
                double t47902 = 1.0/c0f;
                double t47903 = 1.0/t47897;
                double t47904 = t47903*t47853*(1.0/2.0);
                double t47905 = t47904+1.0;
                double t47906 = a1p*c*t47888;
                double t47907 = t47906+1.0;
                double t47908 = rho_a[index]-rho_b[index];
                double t47909 = t47908*t47908;
                double t47910 = 1.0/t47887;
                double t47911 = t47910*t47908;
                double t47912 = b1f*t47890;
                double t47913 = b3f*t47892;
                double t47914 = b4f*t47851*t47894;
                double t47915 = b2f*c*t47888;
                double t47916 = t47912+t47913+t47914+t47915;
                double t47917 = 1.0/t47916;
                double t47918 = t47902*t47917*(1.0/2.0);
                double t47919 = t47918+1.0;
                double t47920 = log(t47919);
                double t47921 = a1f*c*t47888;
                double t47922 = t47921+1.0;
                double t47923 = log(t47905);
                double t47933 = c0f*t47920*t47922*2.0;
                double t47934 = c0p*t47923*t47907*2.0;
                double t47924 = t47933-t47934;
                double t47925 = t47911+1.0;
                double t47926 = pow(t47925,4.0/3.0);
                double t47927 = -t47911+1.0;
                double t47928 = pow(t47927,4.0/3.0);
                double t47929 = t47926+t47928-2.0;
                double t47930 = 1.0/(t47887*t47887);
                double t47961 = t47930*t47908;
                double t47931 = t47910-t47961;
                double t47932 = 1.0/(t47887*t47887*t47887*t47887);
                double t47935 = t47909*t47909;
                double t47936 = 1.0/pow(t47887,5.0/3.0);
                double t47937 = 1.0/sqrt(t47889);
                double t47938 = 1.0/t47905;
                double t47939 = 1.0/(t47897*t47897);
                double t47940 = b4p*t47851*t47936*(2.0/3.0);
                double t47941 = b2p*c*t47898*(1.0/3.0);
                double t47942 = b1p*c*t47937*t47898*(1.0/6.0);
                double t47943 = b3p*c*t47890*t47898*(1.0/2.0);
                double t47944 = t47940+t47941+t47942+t47943;
                double t47945 = t47907*t47944*t47938*t47939;
                double t47946 = 1.0/(t47887*t47887*t47887*t47887*t47887);
                double t47947 = 1.0/d2fz0;
                double t47948 = 1.0/Aa;
                double t47949 = b1a*t47890;
                double t47950 = b3a*t47892;
                double t47951 = b4a*t47851*t47894;
                double t47952 = b2a*c*t47888;
                double t47953 = t47950+t47951+t47952+t47949;
                double t47954 = 1.0/t47953;
                double t47955 = t47954*t47948*(1.0/2.0);
                double t47956 = t47955+1.0;
                double t47957 = log(t47956);
                double t47958 = a1a*c*t47888;
                double t47959 = t47958+1.0;
                double t47960 = pow(t47925,1.0/3.0);
                double t47962 = t47931*t47960*(4.0/3.0);
                double t47963 = pow(t47927,1.0/3.0);
                double t47964 = t47962-t47931*t47963*(4.0/3.0);
                double t47965 = t47932*t47935;
                double t47966 = t47965-1.0;
                double t47967 = pow(2.0,1.0/3.0);
                double t47968 = t47967*2.0;
                double t47969 = t47968-2.0;
                double t47970 = a1f*c*t47847;
                double t47971 = t47970+1.0;
                double t47972 = b1f*t47849;
                double t47973 = b3f*t47850;
                double t47974 = b4f*t47851*t47852;
                double t47975 = b2f*c*t47847;
                double t47976 = t47972+t47973+t47974+t47975;
                double t47977 = 1.0/t47976;
                double t47978 = t47902*t47977*(1.0/2.0);
                double t47979 = t47978+1.0;
                double t47980 = 1.0/pow(rho_a[index],4.0/3.0);
                double t47981 = 1.0/pow(rho_a[index],5.0/3.0);
                double t47982 = 1.0/sqrt(t47848);
                double t47983 = log(t47979);
                double t47984 = 1.0/t47861;
                double t47985 = 1.0/(t47858*t47858);
                double t47986 = b4p*t47851*t47981*(2.0/3.0);
                double t47987 = b2p*c*t47980*(1.0/3.0);
                double t47988 = b1p*c*t47980*t47982*(1.0/6.0);
                double t47989 = b3p*c*t47980*t47849*(1.0/2.0);
                double t47990 = t47986+t47987+t47988+t47989;
                double t47991 = t47864*t47990*t47984*t47985;
                double t47992 = c0f*t47971*t47983*2.0;
                double t47993 = c0p*t47862*t47864*2.0;
                double t47994 = gamma_aa[index]*t47865*(1.0/2.0);
                double t47995 = 1.0/pow(rho_b[index],8.0/3.0);
                double t47996 = gamma_bb[index]*t47995*(1.0/2.0);
                double t47997 = t47994+t47996;
                double t47998 = gcab*t47997;
                double t47999 = t47998+1.0;
                double t48000 = gcab*gcab;
                double t48001 = t47997*t47997;
                double t48002 = t48000*t48000;
                double t48003 = t48001*t48001;
                double t48004 = t48000*t48001;
                double t48005 = gcab*t47997*2.0;
                double t48006 = t48004+t48005+1.0;
                double t48007 = t48000*t48001*3.0;
                double t48008 = gcab*t47997*t48000*t48001;
                double t48009 = gcab*t47997*3.0;
                double t48010 = t48007+t48008+t48009+1.0;
                double t48011 = t48000*t48001*6.0;
                double t48012 = gcab*t47997*t48000*t48001*4.0;
                double t48013 = t48002*t48003;
                double t48014 = gcab*t47997*4.0;
                double t48015 = t48011+t48012+t48013+t48014+1.0;
                double t48016 = t47992-t47993;
                double t48017 = 1.0/pow(rho_b[index],1.0/3.0);
                double t48018 = c*t48017;
                double t48019 = sqrt(t48018);
                double t48020 = pow(t48018,3.0/2.0);
                double t48021 = 1.0/pow(rho_b[index],2.0/3.0);
                double t48022 = b1p*t48019;
                double t48023 = b3p*t48020;
                double t48024 = b4p*t47851*t48021;
                double t48025 = b2p*c*t48017;
                double t48026 = t48022+t48023+t48024+t48025;
                double t48027 = 1.0/t48026;
                double t48028 = t47853*t48027*(1.0/2.0);
                double t48029 = t48028+1.0;
                double t48030 = log(t48029);
                double t48031 = a1p*c*t48017;
                double t48032 = t48031+1.0;
                double t48033 = c0p*t48030*t48032*2.0;
                double t48034 = t47901*t47932*t47924*t47935*t47929;
                double t48035 = Aa*t47901*t47929*t47947*t47957*t47966*t47959*2.0;
                double t48036 = 1.0/t47999;
                double t48037 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t48038 = 1.0/(t47999*t47999);
                double t48039 = 1.0/t48006;
                double t48040 = 1.0/(t48010*t48010);
                double t48041 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t48042 = 1.0/(t48006*t48006);
                double t48043 = 1.0/t48010;
                double t48044 = 1.0/t48015;
                double t48045 = 1.0/(t48015*t48015);
                double t48046 = gcab*t47865*2.0;
                double t48047 = t47865*t47997*t48000*6.0;
                double t48048 = gcab*t47865*t48000*t48001*6.0;
                double t48049 = t47865*t47997*t48001*t48002*2.0;
                double t48050 = t48046+t48047+t48048+t48049;
                double t48051 = gamma_aa[index]*gcab*t48037*(8.0/3.0);
                double t48052 = gamma_aa[index]*t47997*t48000*t48037*(8.0/3.0);
                double t48053 = t48051+t48052;
                double t48054 = gcab*t47865;
                double t48055 = t47865*t47997*t48000;
                double t48056 = t48054+t48055;
                double t48057 = gamma_aa[index]*gcab*t48037*(1.6E1/3.0);
                double t48058 = gamma_aa[index]*gcab*t48000*t48001*t48037*1.6E1;
                double t48059 = gamma_aa[index]*t47997*t48001*t48002*t48037*(1.6E1/3.0);
                double t48060 = gamma_aa[index]*t47997*t48000*t48037*1.6E1;
                double t48061 = t48060+t48057+t48058+t48059;
                double t48062 = gcab*t47865*(3.0/2.0);
                double t48063 = t47865*t47997*t48000*3.0;
                double t48064 = gcab*t47865*t48000*t48001*(3.0/2.0);
                double t48065 = t48062+t48063+t48064;
                double t48066 = gamma_aa[index]*gcab*t48037*4.0;
                double t48067 = gamma_aa[index]*gcab*t48000*t48001*t48037*4.0;
                double t48068 = gamma_aa[index]*t47997*t48000*t48037*8.0;
                double t48069 = t48066+t48067+t48068;
                double t48070 = gx*gx;
                double t48071 = t48070*t48070;
                double t48072 = gamma_aa[index]*gx*t47865;
                double t48073 = t48072+1.0;
                double t48074 = gamma_aa[index]*gx*t47865*3.0;
                double t48075 = gamma_aa[index]*gx*t47871*t47866*t48070;
                double t48076 = t47870*t47866*t48070*3.0;
                double t48077 = t48074+t48075+t48076+1.0;
                double t48078 = gamma_aa[index]*gx*t47865*4.0;
                double t48079 = gamma_aa[index]*gx*t47871*t47866*t48070*4.0;
                double t48080 = t47870*t47866*t48070*6.0;
                double t48081 = t47869*t47878*t48071;
                double t48082 = t48080+t48081+t48078+t48079+1.0;
                double t48083 = gamma_aa[index]*gx*t47865*2.0;
                double t48084 = t47870*t47866*t48070;
                double t48085 = t48083+t48084+1.0;
                double t48086 = t47901*t47969*t48016;
                double t48087 = t47993+t48086;
                double t48088 = 1.0/t47873;
                double t48089 = 1.0/t47883;
                double t48090 = 1.0/t47886;
                double t48091 = 1.0/t47877;
                double t48092 = 1.0/(t47873*t47873);
                double t48093 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t48094 = 1.0/(t47877*t47877);
                double t48095 = 1.0/(t47886*t47886);
                double t48096 = gcaa*t47865*3.0;
                double t48097 = gamma_aa[index]*t47870*t47867*6.0;
                double t48098 = gcaa*t47871*t47866*t47867*3.0;
                double t48099 = t48096+t48097+t48098;
                double t48100 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t48101 = 1.0/(t47883*t47883);
                double t48102 = gcaa*t47865*4.0;
                double t48103 = gamma_aa[index]*t47870*t47867*1.2E1;
                double t48104 = gcaa*t47871*t47866*t47867*1.2E1;
                double t48105 = gamma_aa[index]*t47866*t47868*t47869*4.0;
                double t48106 = t48102+t48103+t48104+t48105;
                double t48107 = gcaa*t47865*2.0;
                double t48108 = gamma_aa[index]*t47870*t47867*2.0;
                double t48109 = t48107+t48108;
                double t48110 = gamma_aa[index]*gcaa*t48037*(1.6E1/3.0);
                double t48111 = t47866*t47867*t48041*(1.6E1/3.0);
                double t48112 = t48110+t48111;
                double t48113 = gamma_aa[index]*gcaa*t48037*8.0;
                double t48114 = gamma_aa[index]*gcaa*t47866*t47867*t48093*8.0;
                double t48115 = t47866*t47867*t48041*1.6E1;
                double t48116 = t48113+t48114+t48115;
                double t48117 = gamma_aa[index]*gcaa*t48037*(3.2E1/3.0);
                double t48118 = gamma_aa[index]*gcaa*t47866*t47867*t48093*3.2E1;
                double t48119 = t47866*t47867*t48041*3.2E1;
                double t48120 = t47868*t47878*t48100*(3.2E1/3.0);
                double t48121 = t48120+t48117+t48118+t48119;
                double t48122 = 1.0/t47979;
                double t48123 = 1.0/(t47976*t47976);
                double t48124 = b4f*t47851*t47981*(2.0/3.0);
                double t48125 = b2f*c*t47980*(1.0/3.0);
                double t48126 = b1f*c*t47980*t47982*(1.0/6.0);
                double t48127 = b3f*c*t47980*t47849*(1.0/2.0);
                double t48128 = t48124+t48125+t48126+t48127;
                double t48129 = a1f*c*c0f*t47980*t47983*(2.0/3.0);
                double t48130 = a1p*c*c0p*t47862*t47980*(2.0/3.0);
                double t48131 = ccaa1*gcaa*t47865*t48088;
                double t48132 = ccaa4*gamma_aa[index]*t47866*t47868*t47869*t48089*4.0;
                double t48133 = ccaa2*gamma_aa[index]*t47870*t47867*t48090*2.0;
                double t48134 = ccaa3*gcaa*t47871*t47866*t47867*t48091*3.0;
                double t48135 = t48131+t48132+t48133+t48134-ccaa1*gamma_aa[index]*t47870*t47867*t48092-ccaa4*t47868* \
                   t47869*t47878*t48101*t48106-ccaa2*t47870*t47866*t47867*t48109*t48095-ccaa3*gamma_aa[index]*gcaa*t47871* \
                   t47866*t47867*t48094*t48099;
                double t48136 = 1.0/t48073;
                double t48137 = 1.0/t48082;
                double t48138 = 1.0/t48085;
                double t48139 = 1.0/t48077;
                double t48140 = 1.0/(t48073*t48073);
                double t48141 = 1.0/(t48077*t48077);
                double t48142 = 1.0/(t48085*t48085);
                double t48143 = gx*t47865*3.0;
                double t48144 = gamma_aa[index]*t47870*t48070*6.0;
                double t48145 = gx*t47871*t47866*t48070*3.0;
                double t48146 = t48143+t48144+t48145;
                double t48147 = 1.0/(t48082*t48082);
                double t48148 = gx*t47865*4.0;
                double t48149 = gamma_aa[index]*t47870*t48070*1.2E1;
                double t48150 = gx*t47871*t47866*t48070*1.2E1;
                double t48151 = gamma_aa[index]*t47866*t47869*t48071*4.0;
                double t48152 = t48150+t48151+t48148+t48149;
                double t48153 = gx*t47865*2.0;
                double t48154 = gamma_aa[index]*t47870*t48070*2.0;
                double t48155 = t48153+t48154;
                double t48156 = gamma_aa[index]*gx*t48037*(1.6E1/3.0);
                double t48157 = t47866*t48041*t48070*(1.6E1/3.0);
                double t48158 = t48156+t48157;
                double t48159 = gamma_aa[index]*gx*t48037*8.0;
                double t48160 = gamma_aa[index]*gx*t47866*t48070*t48093*8.0;
                double t48161 = t47866*t48041*t48070*1.6E1;
                double t48162 = t48160+t48161+t48159;
                double t48163 = gamma_aa[index]*gx*t48037*(3.2E1/3.0);
                double t48164 = gamma_aa[index]*gx*t47866*t48070*t48093*3.2E1;
                double t48165 = t47866*t48041*t48070*3.2E1;
                double t48166 = t47878*t48100*t48071*(3.2E1/3.0);
                double t48167 = t48163+t48164+t48165+t48166;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t48087+rho_b[index]*(t48033-t47901*t47969*(t48033-c0f*log((t47902* \
                   (1.0/2.0))/(b1f*t48019+b3f*t48020+b2f*c*t48017+b4f*t47851*t48021)+1.0)*(a1f*c*t48017+1.0)*2.0))-t47887* \
                   (t47934+t48034+t48035))*(ccab1*gcab*t48036*t48037*(4.0/3.0)-ccab2*t48000*t48001*t48042*(gcab*t48037* \
                   (8.0/3.0)+gamma_aa[index]*t48000*t48041*(4.0/3.0)+t47997*t48000*t48037*(8.0/3.0))-ccab4*t48002*t48003* \
                   t48045*(gcab*t48037*(1.6E1/3.0)+gamma_aa[index]*t48000*t48041*8.0+t47997*t48000*t48037*1.6E1+gamma_aa[index]* \
                   t48001*t48002*t48041*8.0+gcab*t48000*t48001*t48037*1.6E1+t47997*t48001*t48002*t48037*(1.6E1/3.0)+gamma_aa[index]* \
                   gcab*t47997*t48000*t48041*1.6E1)-ccab1*gamma_aa[index]*t48000*t48041*t48038*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t48000*t48041*t48039*(4.0/3.0)-ccab1*t47997*t48000*t48037*t48038*(4.0/3.0)+ccab2*t47997*t48000*t48037* \
                   t48039*(8.0/3.0)-ccab2*t47865*t47997*t48000*t48042*t48053+ccab4*t47997*t48001*t48002*t48044*t48037* \
                   (1.6E1/3.0)+ccab4*t48002*t48003*t48050*1.0/(t48015*t48015*t48015)*t48061*2.0+ccab2*t48000*t48001*1.0/ \
                   (t48006*t48006*t48006)*t48053*t48056*2.0+ccab4*gamma_aa[index]*t48001*t48002*t48041*t48044*8.0+ccab3* \
                   gcab*t48000*t48001*t48043*t48037*4.0+ccab3*gamma_aa[index]*gcab*t47997*t48000*t48041*t48043*4.0-ccab2* \
                   gamma_aa[index]*t47997*t48000*t48042*t48037*t48056*(8.0/3.0)-ccab3*gcab*t47865*t48000*t48001*t48040* \
                   t48069*(3.0/2.0)-ccab4*t47865*t47997*t48001*t48002*t48061*t48045*2.0-ccab3*gcab*t47997*t48000*t48001* \
                   t48040*(gcab*t48037*4.0+gamma_aa[index]*t48000*t48041*4.0+t47997*t48000*t48037*8.0+gcab*t48000*t48001* \
                   t48037*4.0+gamma_aa[index]*gcab*t47997*t48000*t48041*4.0)+ccab1*gamma_aa[index]*gcab*t47997*1.0/(t47999* \
                   t47999*t47999)*t48000*t48041*(4.0/3.0)+ccab3*gcab*t47997*t48000*t48001*1.0/(t48010*t48010*t48010)* \
                   t48065*t48069*2.0-ccab3*gamma_aa[index]*gcab*t48000*t48001*t48040*t48037*t48065*4.0-ccab4*gamma_aa[index]* \
                   t47997*t48001*t48002*t48050*t48045*t48037*(1.6E1/3.0))-t48135*(t47993+t47901*t47969*(t47992-c0p*t47862* \
                   t47864*2.0))-(t47934-t47993+t48034+t48035+t47887*(t47945-t47901*t47932*t47935*t47929*(t47945-(t47922* \
                   1.0/(t47916*t47916)*(b2f*c*t47898*(1.0/3.0)+b4f*t47851*t47936*(2.0/3.0)+b1f*c*t47937*t47898*(1.0/6.0) \
                   +b3f*c*t47890*t47898*(1.0/2.0)))/t47919+a1f*c*c0f*t47920*t47898*(2.0/3.0)-a1p*c*c0p*t47923*t47898* \
                   (2.0/3.0))-a1p*c*c0p*t47923*t47898*(2.0/3.0)+t47901*t47932*t47924*t47935*t47964-t47901*t47924*t47935* \
                   t47946*t47929*4.0+t47901*t47932*t47924*t47908*t47909*t47929*4.0-Aa*t47901*t47929*t47947*t47957*t47959* \
                   (t47935*t47946*4.0-t47932*t47908*t47909*4.0)*2.0+Aa*t47901*t47964*t47947*t47957*t47966*t47959*2.0+ \
                   (t47901*1.0/(t47953*t47953)*t47929*t47947*t47966*t47959*(b2a*c*t47898*(1.0/3.0)+b4a*t47851*t47936* \
                   (2.0/3.0)+b1a*c*t47937*t47898*(1.0/6.0)+b3a*c*t47890*t47898*(1.0/2.0)))/t47956-Aa*a1a*c*t47901*t47929* \
                   t47947*t47957*t47966*t47898*(2.0/3.0))+rho_a[index]*(-t47991+t48130+t47901*t47969*(t47991+t48129-t47971* \
                   t48122*t48123*t48128-a1p*c*c0p*t47862*t47980*(2.0/3.0)))-t47901*t47969*t48016)*(ccab1*gcab*t47865* \
                   t48036*(1.0/2.0)-ccab1*t47865*t47997*t48000*t48038*(1.0/2.0)+ccab2*t47865*t47997*t48000*t48039-ccab2* \
                   t48000*t48001*t48042*t48056-ccab4*t48002*t48003*t48050*t48045+ccab4*t47865*t47997*t48001*t48002*t48044* \
                   2.0+ccab3*gcab*t47865*t48000*t48001*t48043*(3.0/2.0)-ccab3*gcab*t47997*t48000*t48001*t48040*t48065) \
                   -rho_a[index]*t48087*(ccaa1*gcaa*t48037*t48088*(-8.0/3.0)-ccaa2*gamma_aa[index]*t47867*t48041*t48090* \
                   (3.2E1/3.0)+ccaa1*gamma_aa[index]*t47867*t48041*t48092*8.0+ccaa4*t47868*t47878*t48100*t48101*t48106* \
                   (3.2E1/3.0)+ccaa2*t47866*t47867*t48041*t48109*t48095*(1.6E1/3.0)+ccaa4*t47868*t47869*t47878*t48101* \
                   (gcaa*t48037*(3.2E1/3.0)+gamma_aa[index]*t47867*t48041*6.4E1+gamma_aa[index]*t47866*t47868*t48100* \
                   (1.28E2/3.0)+gcaa*t47866*t47867*t48093*9.6E1)-ccaa1*gcaa*1.0/(t47873*t47873*t47873)*t47866*t47867* \
                   t48093*(1.6E1/3.0)+ccaa2*t47870*t47866*t47867*t48095*(gcaa*t48037*(1.6E1/3.0)+gamma_aa[index]*t47867* \
                   t48041*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t47870*t47867*t48112*t48095*2.0-ccaa4*gamma_aa[index]*t47866* \
                   t47868*t48100*t48089*(1.28E2/3.0)-ccaa3*gcaa*t47866*t47867*t48091*t48093*2.4E1+ccaa4*gamma_aa[index]* \
                   t47866*t47868*t47869*t48101*t48121*4.0+ccaa3*gcaa*t47871*t47866*t47867*t48116*t48094*3.0-ccaa2*t47870* \
                   t47866*t47867*1.0/(t47886*t47886*t47886)*t48112*t48109*2.0-ccaa4*1.0/(t47883*t47883*t47883)*t47868* \
                   t47869*t47878*t48121*t48106*2.0+ccaa3*gamma_aa[index]*gcaa*t47871*t47866*t47867*t48094*(gcaa*t48037* \
                   8.0+gamma_aa[index]*t47867*t48041*3.2E1+gcaa*t47866*t47867*t48093*2.4E1)+ccaa3*gamma_aa[index]*gcaa* \
                   t47866*t47867*t48093*t48094*t48099*8.0-ccaa3*gamma_aa[index]*gcaa*t47871*t47866*t47867*1.0/(t47877* \
                   t47877*t47877)*t48116*t48099*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t48037*t48136*(-8.0/3.0)+cx1* \
                   gamma_aa[index]*t48041*t48140*t48070*8.0-cx2*gamma_aa[index]*t48041*t48070*t48138*(3.2E1/3.0)+cx2* \
                   t47866*t48041*t48070*t48142*t48155*(1.6E1/3.0)+cx4*t47878*t48100*t48071*t48152*t48147*(3.2E1/3.0)+ \
                   cx4*t47869*t47878*t48071*t48147*(gx*t48037*(3.2E1/3.0)+gamma_aa[index]*t48041*t48070*6.4E1+gamma_aa[index]* \
                   t47866*t48100*t48071*(1.28E2/3.0)+gx*t47866*t48070*t48093*9.6E1)-cx1*gx*t47866*t48070*1.0/(t48073* \
                   t48073*t48073)*t48093*(1.6E1/3.0)+cx2*t47870*t47866*t48070*t48142*(gx*t48037*(1.6E1/3.0)+gamma_aa[index]* \
                   t48041*t48070*(3.2E1/3.0))+cx2*gamma_aa[index]*t47870*t48070*t48142*t48158*2.0-cx4*gamma_aa[index]* \
                   t47866*t48100*t48071*t48137*(1.28E2/3.0)-cx3*gx*t47866*t48070*t48093*t48139*2.4E1+cx4*gamma_aa[index]* \
                   t47866*t47869*t48071*t48147*t48167*4.0+cx3*gx*t47871*t47866*t48141*t48070*t48162*3.0-cx2*t47870*t47866* \
                   t48070*t48155*1.0/(t48085*t48085*t48085)*t48158*2.0-cx4*t47869*t47878*t48071*t48152*1.0/(t48082*t48082* \
                   t48082)*t48167*2.0+cx3*gamma_aa[index]*gx*t47871*t47866*t48141*t48070*(gx*t48037*8.0+gamma_aa[index]* \
                   t48041*t48070*3.2E1+gx*t47866*t48070*t48093*2.4E1)+cx3*gamma_aa[index]*gx*t47866*t48141*t48070*t48146* \
                   t48093*8.0-cx3*gamma_aa[index]*gx*t47871*t47866*t48070*t48162*t48146*1.0/(t48077*t48077*t48077)*2.0) \
                   +rho_a[index]*t48135*(-t47991+t48130+t47901*t47969*(t47991-t48130+t48129-t47971*t48122*t48123*t48128) \
                   )+c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t47865*t48136-cx1*gamma_aa[index]*t47870*t48140*t48070+cx2* \
                   gamma_aa[index]*t47870*t48070*t48138*2.0-cx2*t47870*t47866*t48070*t48142*t48155-cx4*t47869*t47878* \
                   t48071*t48152*t48147+cx4*gamma_aa[index]*t47866*t47869*t48071*t48137*4.0+cx3*gx*t47871*t47866*t48070* \
                   t48139*3.0-cx3*gamma_aa[index]*gx*t47871*t47866*t48141*t48070*t48146)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t50421 = 1.0/pow(rho_a[index],1.0/3.0);
                double t50422 = c*t50421;
                double t50423 = sqrt(t50422);
                double t50424 = pow(t50422,3.0/2.0);
                double t50425 = c*c;
                double t50426 = 1.0/pow(rho_a[index],2.0/3.0);
                double t50427 = 1.0/c0p;
                double t50428 = b1p*t50423;
                double t50429 = b3p*t50424;
                double t50430 = b4p*t50425*t50426;
                double t50431 = b2p*c*t50421;
                double t50432 = t50430+t50431+t50428+t50429;
                double t50433 = 1.0/t50432;
                double t50434 = t50433*t50427*(1.0/2.0);
                double t50435 = t50434+1.0;
                double t50436 = log(t50435);
                double t50437 = a1p*c*t50421;
                double t50438 = t50437+1.0;
                double t50439 = 1.0/pow(rho_a[index],8.0/3.0);
                double t50440 = gamma_aa[index]*gamma_aa[index];
                double t50441 = gcaa*gcaa;
                double t50442 = t50441*t50441;
                double t50443 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t50444 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t50445 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t50446 = gamma_aa[index]*gcaa*t50439;
                double t50447 = t50446+1.0;
                double t50448 = gamma_aa[index]*gcaa*t50439*3.0;
                double t50449 = gamma_aa[index]*gcaa*t50440*t50441*t50445;
                double t50450 = t50440*t50441*t50444*3.0;
                double t50451 = t50450+t50448+t50449+1.0;
                double t50452 = t50440*t50440;
                double t50453 = gamma_aa[index]*gcaa*t50439*4.0;
                double t50454 = gamma_aa[index]*gcaa*t50440*t50441*t50445*4.0;
                double t50455 = t50440*t50441*t50444*6.0;
                double t50456 = t50442*t50443*t50452;
                double t50457 = t50453+t50454+t50455+t50456+1.0;
                double t50458 = gamma_aa[index]*gcaa*t50439*2.0;
                double t50459 = t50440*t50441*t50444;
                double t50460 = t50458+t50459+1.0;
                double t50461 = gx*gx;
                double t50462 = t50461*t50461;
                double t50463 = gamma_aa[index]*gx*t50439;
                double t50464 = t50463+1.0;
                double t50465 = gamma_aa[index]*gx*t50439*3.0;
                double t50466 = gamma_aa[index]*gx*t50440*t50461*t50445;
                double t50467 = t50440*t50461*t50444*3.0;
                double t50468 = t50465+t50466+t50467+1.0;
                double t50469 = gamma_aa[index]*gx*t50439*4.0;
                double t50470 = gamma_aa[index]*gx*t50440*t50461*t50445*4.0;
                double t50471 = t50440*t50461*t50444*6.0;
                double t50472 = t50443*t50452*t50462;
                double t50473 = t50470+t50471+t50472+t50469+1.0;
                double t50474 = gamma_aa[index]*gx*t50439*2.0;
                double t50475 = t50440*t50461*t50444;
                double t50476 = t50474+t50475+1.0;
                double t50477 = pow(2.0,1.0/3.0);
                double t50478 = t50477*2.0;
                double t50479 = t50478-2.0;
                double t50480 = two_13*2.0;
                double t50481 = t50480-2.0;
                double t50482 = 1.0/t50481;
                double t50483 = 1.0/c0f;
                double t50484 = b1f*t50423;
                double t50485 = b3f*t50424;
                double t50486 = b4f*t50425*t50426;
                double t50487 = b2f*c*t50421;
                double t50488 = t50484+t50485+t50486+t50487;
                double t50489 = 1.0/t50488;
                double t50490 = t50483*t50489*(1.0/2.0);
                double t50491 = t50490+1.0;
                double t50492 = log(t50491);
                double t50493 = a1f*c*t50421;
                double t50494 = t50493+1.0;
                double t50495 = c0f*t50492*t50494*2.0;
                double t50496 = c0p*t50436*t50438*2.0;
                double t50497 = 1.0/t50447;
                double t50498 = 1.0/t50457;
                double t50499 = 1.0/t50460;
                double t50500 = 1.0/t50451;
                double t50501 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t50502 = 1.0/(t50447*t50447);
                double t50503 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t50504 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t50505 = 1.0/(t50451*t50451);
                double t50506 = 1.0/(t50460*t50460);
                double t50507 = gcaa*t50439*3.0;
                double t50508 = gamma_aa[index]*t50441*t50444*6.0;
                double t50509 = gcaa*t50440*t50441*t50445*3.0;
                double t50510 = t50507+t50508+t50509;
                double t50511 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t50512 = 1.0/(t50457*t50457);
                double t50513 = gcaa*t50439*4.0;
                double t50514 = gamma_aa[index]*t50441*t50444*1.2E1;
                double t50515 = gcaa*t50440*t50441*t50445*1.2E1;
                double t50516 = gamma_aa[index]*t50440*t50442*t50443*4.0;
                double t50517 = t50513+t50514+t50515+t50516;
                double t50518 = gcaa*t50439*2.0;
                double t50519 = gamma_aa[index]*t50441*t50444*2.0;
                double t50520 = t50518+t50519;
                double t50521 = gamma_aa[index]*gcaa*t50504*(1.6E1/3.0);
                double t50522 = t50501*t50440*t50441*(1.6E1/3.0);
                double t50523 = t50521+t50522;
                double t50524 = gamma_aa[index]*gcaa*t50504*8.0;
                double t50525 = gamma_aa[index]*gcaa*t50440*t50503*t50441*8.0;
                double t50526 = t50501*t50440*t50441*1.6E1;
                double t50527 = t50524+t50525+t50526;
                double t50528 = gamma_aa[index]*gcaa*t50504*(3.2E1/3.0);
                double t50529 = gamma_aa[index]*gcaa*t50440*t50503*t50441*3.2E1;
                double t50530 = t50501*t50440*t50441*3.2E1;
                double t50531 = t50511*t50442*t50452*(3.2E1/3.0);
                double t50532 = t50530+t50531+t50528+t50529;
                double t50533 = 1.0/pow(rho_a[index],4.0/3.0);
                double t50534 = 1.0/pow(rho_a[index],5.0/3.0);
                double t50535 = 1.0/sqrt(t50422);
                double t50536 = 1.0/t50435;
                double t50537 = 1.0/(t50432*t50432);
                double t50538 = b4p*t50425*t50534*(2.0/3.0);
                double t50539 = b2p*c*t50533*(1.0/3.0);
                double t50540 = b1p*c*t50533*t50535*(1.0/6.0);
                double t50541 = b3p*c*t50423*t50533*(1.0/2.0);
                double t50542 = t50540+t50541+t50538+t50539;
                double t50543 = t50542*t50536*t50438*t50537;
                double t50544 = ccaa1*gcaa*t50439*t50497;
                double t50545 = ccaa4*gamma_aa[index]*t50440*t50442*t50443*t50498*4.0;
                double t50546 = ccaa2*gamma_aa[index]*t50441*t50444*t50499*2.0;
                double t50547 = ccaa3*gcaa*t50500*t50440*t50441*t50445*3.0;
                double t50548 = t50544+t50545+t50546+t50547-ccaa1*gamma_aa[index]*t50502*t50441*t50444-ccaa2*t50520* \
                   t50440*t50441*t50506*t50444-ccaa4*t50512*t50442*t50443*t50452*t50517-ccaa3*gamma_aa[index]*gcaa*t50510* \
                   t50440*t50441*t50505*t50445;
                double t50549 = 1.0/t50464;
                double t50550 = 1.0/t50473;
                double t50551 = 1.0/t50476;
                double t50552 = 1.0/t50468;
                double t50553 = 1.0/(t50464*t50464);
                double t50554 = 1.0/(t50468*t50468);
                double t50555 = 1.0/(t50476*t50476);
                double t50556 = gx*t50439*3.0;
                double t50557 = gamma_aa[index]*t50461*t50444*6.0;
                double t50558 = gx*t50440*t50461*t50445*3.0;
                double t50559 = t50556+t50557+t50558;
                double t50560 = 1.0/(t50473*t50473);
                double t50561 = gx*t50439*4.0;
                double t50562 = gamma_aa[index]*t50461*t50444*1.2E1;
                double t50563 = gx*t50440*t50461*t50445*1.2E1;
                double t50564 = gamma_aa[index]*t50440*t50443*t50462*4.0;
                double t50565 = t50561+t50562+t50563+t50564;
                double t50566 = gx*t50439*2.0;
                double t50567 = gamma_aa[index]*t50461*t50444*2.0;
                double t50568 = t50566+t50567;
                double t50569 = gamma_aa[index]*gx*t50504*(1.6E1/3.0);
                double t50570 = t50501*t50440*t50461*(1.6E1/3.0);
                double t50571 = t50570+t50569;
                double t50572 = gamma_aa[index]*gx*t50504*8.0;
                double t50573 = gamma_aa[index]*gx*t50440*t50503*t50461*8.0;
                double t50574 = t50501*t50440*t50461*1.6E1;
                double t50575 = t50572+t50573+t50574;
                double t50576 = gamma_aa[index]*gx*t50504*(3.2E1/3.0);
                double t50577 = gamma_aa[index]*gx*t50440*t50503*t50461*3.2E1;
                double t50578 = t50501*t50440*t50461*3.2E1;
                double t50579 = t50511*t50452*t50462*(3.2E1/3.0);
                double t50580 = t50576+t50577+t50578+t50579;
                v_rho_a_gamma_aa_[index] = -t50548*(t50496+t50482*t50479*(t50495-c0p*t50436*t50438*2.0))+rho_a[index]* \
                   t50548*(-t50543+t50482*t50479*(t50543-(t50494*1.0/(t50488*t50488)*(b2f*c*t50533*(1.0/3.0)+b4f*t50425* \
                   t50534*(2.0/3.0)+b1f*c*t50533*t50535*(1.0/6.0)+b3f*c*t50423*t50533*(1.0/2.0)))/t50491+a1f*c*c0f*t50533* \
                   t50492*(2.0/3.0)-a1p*c*c0p*t50533*t50436*(2.0/3.0))+a1p*c*c0p*t50533*t50436*(2.0/3.0))-rho_a[index]* \
                   (t50496+t50482*t50479*(t50495-t50496))*(ccaa1*gcaa*t50504*t50497*(-8.0/3.0)+ccaa1*gamma_aa[index]* \
                   t50501*t50502*t50441*8.0-ccaa2*gamma_aa[index]*t50501*t50441*t50499*(3.2E1/3.0)+ccaa2*t50501*t50520* \
                   t50440*t50441*t50506*(1.6E1/3.0)+ccaa4*t50511*t50512*t50442*t50452*t50517*(3.2E1/3.0)+ccaa4*t50512* \
                   t50442*t50443*t50452*(gcaa*t50504*(3.2E1/3.0)+gamma_aa[index]*t50501*t50441*6.4E1+gamma_aa[index]* \
                   t50511*t50440*t50442*(1.28E2/3.0)+gcaa*t50440*t50503*t50441*9.6E1)-ccaa1*gcaa*t50440*t50503*t50441* \
                   1.0/(t50447*t50447*t50447)*(1.6E1/3.0)+ccaa2*t50440*t50441*t50506*t50444*(gcaa*t50504*(1.6E1/3.0)+ \
                   gamma_aa[index]*t50501*t50441*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t50441*t50523*t50506*t50444*2.0-ccaa4* \
                   gamma_aa[index]*t50511*t50440*t50442*t50498*(1.28E2/3.0)-ccaa3*gcaa*t50500*t50440*t50503*t50441*2.4E1+ \
                   ccaa4*gamma_aa[index]*t50440*t50512*t50442*t50532*t50443*4.0+ccaa3*gcaa*t50440*t50441*t50505*t50445* \
                   t50527*3.0-ccaa2*t50520*t50440*t50441*1.0/(t50460*t50460*t50460)*t50523*t50444*2.0-ccaa4*t50442*t50532* \
                   t50443*t50452*t50517*1.0/(t50457*t50457*t50457)*2.0+ccaa3*gamma_aa[index]*gcaa*t50440*t50441*t50505* \
                   t50445*(gcaa*t50504*8.0+gamma_aa[index]*t50501*t50441*3.2E1+gcaa*t50440*t50503*t50441*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t50510*t50440*t50503*t50441*t50505*8.0-ccaa3*gamma_aa[index]*gcaa*t50510*t50440* \
                   t50441*1.0/(t50451*t50451*t50451)*t50445*t50527*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t50504*t50549* \
                   (-8.0/3.0)+cx1*gamma_aa[index]*t50501*t50461*t50553*8.0-cx2*gamma_aa[index]*t50501*t50461*t50551*(3.2E1/ \
                   3.0)+cx2*t50501*t50440*t50461*t50555*t50568*(1.6E1/3.0)+cx4*t50511*t50452*t50560*t50462*t50565*(3.2E1/ \
                   3.0)+cx4*t50443*t50452*t50560*t50462*(gx*t50504*(3.2E1/3.0)+gamma_aa[index]*t50501*t50461*6.4E1+gamma_aa[index]* \
                   t50511*t50440*t50462*(1.28E2/3.0)+gx*t50440*t50503*t50461*9.6E1)-cx1*gx*t50440*t50503*t50461*1.0/(t50464* \
                   t50464*t50464)*(1.6E1/3.0)+cx2*t50440*t50461*t50444*t50555*(gx*t50504*(1.6E1/3.0)+gamma_aa[index]* \
                   t50501*t50461*(3.2E1/3.0))+cx2*gamma_aa[index]*t50461*t50444*t50571*t50555*2.0-cx4*gamma_aa[index]* \
                   t50511*t50440*t50550*t50462*(1.28E2/3.0)-cx3*gx*t50440*t50503*t50461*t50552*2.4E1+cx4*gamma_aa[index]* \
                   t50440*t50443*t50560*t50462*t50580*4.0+cx3*gx*t50440*t50461*t50445*t50554*t50575*3.0-cx2*t50440*t50461* \
                   t50444*t50571*1.0/(t50476*t50476*t50476)*t50568*2.0-cx4*t50443*t50452*t50462*t50580*1.0/(t50473*t50473* \
                   t50473)*t50565*2.0+cx3*gamma_aa[index]*gx*t50440*t50461*t50445*t50554*(gx*t50504*8.0+gamma_aa[index]* \
                   t50501*t50461*3.2E1+gx*t50440*t50503*t50461*2.4E1)+cx3*gamma_aa[index]*gx*t50440*t50503*t50461*t50554* \
                   t50559*8.0-cx3*gamma_aa[index]*gx*t50440*t50461*t50445*t50575*1.0/(t50468*t50468*t50468)*t50559*2.0) \
                   +c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t50439*t50549-cx1*gamma_aa[index]*t50461*t50444*t50553+cx2*gamma_aa[index]* \
                   t50461*t50551*t50444*2.0-cx2*t50440*t50461*t50444*t50555*t50568-cx4*t50443*t50452*t50560*t50462*t50565+ \
                   cx4*gamma_aa[index]*t50440*t50550*t50443*t50462*4.0+cx3*gx*t50440*t50461*t50552*t50445*3.0-cx3*gamma_aa[index]* \
                   gx*t50440*t50461*t50445*t50554*t50559)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48170 = rho_a[index]+rho_b[index];
                double t48171 = 1.0/pow(t48170,1.0/3.0);
                double t48172 = c*t48171;
                double t48173 = sqrt(t48172);
                double t48174 = b1p*t48173;
                double t48175 = pow(t48172,3.0/2.0);
                double t48176 = b3p*t48175;
                double t48177 = c*c;
                double t48178 = 1.0/pow(t48170,2.0/3.0);
                double t48179 = b4p*t48177*t48178;
                double t48180 = b2p*c*t48171;
                double t48181 = t48180+t48174+t48176+t48179;
                double t48182 = 1.0/pow(t48170,4.0/3.0);
                double t48183 = 1.0/c0p;
                double t48184 = 1.0/t48181;
                double t48185 = t48183*t48184*(1.0/2.0);
                double t48186 = t48185+1.0;
                double t48187 = a1p*c*t48171;
                double t48188 = t48187+1.0;
                double t48189 = rho_a[index]-rho_b[index];
                double t48190 = t48189*t48189;
                double t48191 = 1.0/t48170;
                double t48192 = t48191*t48189;
                double t48193 = two_13*2.0;
                double t48194 = t48193-2.0;
                double t48195 = 1.0/t48194;
                double t48196 = 1.0/c0f;
                double t48197 = b1f*t48173;
                double t48198 = b3f*t48175;
                double t48199 = b4f*t48177*t48178;
                double t48200 = b2f*c*t48171;
                double t48201 = t48200+t48197+t48198+t48199;
                double t48202 = 1.0/t48201;
                double t48203 = t48202*t48196*(1.0/2.0);
                double t48204 = t48203+1.0;
                double t48205 = log(t48204);
                double t48206 = a1f*c*t48171;
                double t48207 = t48206+1.0;
                double t48208 = log(t48186);
                double t48218 = c0f*t48205*t48207*2.0;
                double t48219 = c0p*t48208*t48188*2.0;
                double t48209 = t48218-t48219;
                double t48210 = t48192+1.0;
                double t48211 = pow(t48210,4.0/3.0);
                double t48212 = -t48192+1.0;
                double t48213 = pow(t48212,4.0/3.0);
                double t48214 = t48211+t48213-2.0;
                double t48215 = 1.0/(t48170*t48170);
                double t48246 = t48215*t48189;
                double t48216 = t48191-t48246;
                double t48217 = 1.0/(t48170*t48170*t48170*t48170);
                double t48220 = t48190*t48190;
                double t48221 = 1.0/pow(t48170,5.0/3.0);
                double t48222 = 1.0/sqrt(t48172);
                double t48223 = 1.0/t48186;
                double t48224 = 1.0/(t48181*t48181);
                double t48225 = b4p*t48221*t48177*(2.0/3.0);
                double t48226 = b2p*c*t48182*(1.0/3.0);
                double t48227 = b1p*c*t48222*t48182*(1.0/6.0);
                double t48228 = b3p*c*t48173*t48182*(1.0/2.0);
                double t48229 = t48225+t48226+t48227+t48228;
                double t48230 = t48223*t48224*t48229*t48188;
                double t48231 = 1.0/(t48170*t48170*t48170*t48170*t48170);
                double t48232 = 1.0/d2fz0;
                double t48233 = 1.0/Aa;
                double t48234 = b1a*t48173;
                double t48235 = b3a*t48175;
                double t48236 = b4a*t48177*t48178;
                double t48237 = b2a*c*t48171;
                double t48238 = t48234+t48235+t48236+t48237;
                double t48239 = 1.0/t48238;
                double t48240 = t48233*t48239*(1.0/2.0);
                double t48241 = t48240+1.0;
                double t48242 = log(t48241);
                double t48243 = a1a*c*t48171;
                double t48244 = t48243+1.0;
                double t48245 = pow(t48210,1.0/3.0);
                double t48247 = t48216*t48245*(4.0/3.0);
                double t48248 = pow(t48212,1.0/3.0);
                double t48249 = t48247-t48216*t48248*(4.0/3.0);
                double t48250 = t48220*t48217;
                double t48251 = t48250-1.0;
                double t48252 = 1.0/pow(rho_a[index],1.0/3.0);
                double t48253 = c*t48252;
                double t48254 = sqrt(t48253);
                double t48255 = b1f*t48254;
                double t48256 = pow(t48253,3.0/2.0);
                double t48257 = b3f*t48256;
                double t48258 = 1.0/pow(rho_a[index],2.0/3.0);
                double t48259 = b4f*t48177*t48258;
                double t48260 = b2f*c*t48252;
                double t48261 = t48260+t48255+t48257+t48259;
                double t48262 = 1.0/pow(rho_a[index],4.0/3.0);
                double t48263 = b1p*t48254;
                double t48264 = b3p*t48256;
                double t48265 = b4p*t48177*t48258;
                double t48266 = b2p*c*t48252;
                double t48267 = t48263+t48264+t48265+t48266;
                double t48268 = 1.0/pow(rho_a[index],5.0/3.0);
                double t48269 = 1.0/sqrt(t48253);
                double t48270 = 1.0/t48261;
                double t48271 = t48270*t48196*(1.0/2.0);
                double t48272 = t48271+1.0;
                double t48273 = 1.0/t48267;
                double t48274 = t48183*t48273*(1.0/2.0);
                double t48275 = t48274+1.0;
                double t48276 = a1p*c*t48252;
                double t48277 = t48276+1.0;
                double t48278 = 1.0/t48275;
                double t48279 = 1.0/(t48267*t48267);
                double t48280 = b4p*t48177*t48268*(2.0/3.0);
                double t48281 = b2p*c*t48262*(1.0/3.0);
                double t48282 = b1p*c*t48262*t48269*(1.0/6.0);
                double t48283 = b3p*c*t48262*t48254*(1.0/2.0);
                double t48284 = t48280+t48281+t48282+t48283;
                double t48285 = t48284*t48277*t48278*t48279;
                double t48286 = log(t48275);
                double t48287 = pow(2.0,1.0/3.0);
                double t48288 = t48287*2.0;
                double t48289 = t48288-2.0;
                double t48290 = log(t48272);
                double t48291 = a1f*c*t48252;
                double t48292 = t48291+1.0;
                double t48293 = 1.0/pow(rho_b[index],8.0/3.0);
                double t48294 = 1.0/pow(rho_a[index],8.0/3.0);
                double t48295 = gamma_aa[index]*t48294*(1.0/2.0);
                double t48296 = gamma_bb[index]*t48293*(1.0/2.0);
                double t48297 = t48295+t48296;
                double t48298 = gcab*t48297;
                double t48299 = t48298+1.0;
                double t48300 = gcab*gcab;
                double t48301 = t48297*t48297;
                double t48302 = t48300*t48300;
                double t48303 = t48301*t48301;
                double t48304 = t48300*t48301;
                double t48305 = gcab*t48297*2.0;
                double t48306 = t48304+t48305+1.0;
                double t48307 = t48300*t48301*3.0;
                double t48308 = gcab*t48300*t48301*t48297;
                double t48309 = gcab*t48297*3.0;
                double t48310 = t48307+t48308+t48309+1.0;
                double t48311 = t48300*t48301*6.0;
                double t48312 = gcab*t48300*t48301*t48297*4.0;
                double t48313 = t48302*t48303;
                double t48314 = gcab*t48297*4.0;
                double t48315 = t48311+t48312+t48313+t48314+1.0;
                double t48316 = c0f*t48290*t48292*2.0;
                double t48318 = c0p*t48277*t48286*2.0;
                double t48317 = t48316-t48318;
                double t48319 = 1.0/pow(rho_b[index],1.0/3.0);
                double t48320 = c*t48319;
                double t48321 = sqrt(t48320);
                double t48322 = pow(t48320,3.0/2.0);
                double t48323 = 1.0/pow(rho_b[index],2.0/3.0);
                double t48324 = b1p*t48321;
                double t48325 = b3p*t48322;
                double t48326 = b4p*t48323*t48177;
                double t48327 = b2p*c*t48319;
                double t48328 = t48324+t48325+t48326+t48327;
                double t48329 = 1.0/t48328;
                double t48330 = t48183*t48329*(1.0/2.0);
                double t48331 = t48330+1.0;
                double t48332 = log(t48331);
                double t48333 = a1p*c*t48319;
                double t48334 = t48333+1.0;
                double t48335 = c0p*t48332*t48334*2.0;
                double t48336 = t48220*t48214*t48217*t48209*t48195;
                double t48337 = Aa*t48214*t48232*t48242*t48251*t48244*t48195*2.0;
                double t48338 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t48339 = 1.0/(t48310*t48310);
                double t48340 = 1.0/(t48315*t48315);
                double t48341 = gcab*t48293*2.0;
                double t48342 = t48300*t48293*t48297*6.0;
                double t48343 = gcab*t48300*t48301*t48293*6.0;
                double t48344 = t48301*t48302*t48293*t48297*2.0;
                double t48345 = t48341+t48342+t48343+t48344;
                double t48346 = 1.0/(t48306*t48306);
                double t48347 = gamma_aa[index]*gcab*t48338*(8.0/3.0);
                double t48348 = gamma_aa[index]*t48300*t48338*t48297*(8.0/3.0);
                double t48349 = t48347+t48348;
                double t48350 = gcab*t48293;
                double t48351 = t48300*t48293*t48297;
                double t48352 = t48350+t48351;
                double t48353 = gamma_aa[index]*gcab*t48338*(1.6E1/3.0);
                double t48354 = gamma_aa[index]*gcab*t48300*t48301*t48338*1.6E1;
                double t48355 = gamma_aa[index]*t48301*t48302*t48338*t48297*(1.6E1/3.0);
                double t48356 = gamma_aa[index]*t48300*t48338*t48297*1.6E1;
                double t48357 = t48353+t48354+t48355+t48356;
                double t48358 = 1.0/(t48299*t48299);
                double t48359 = 1.0/t48306;
                double t48360 = gcab*t48293*(3.0/2.0);
                double t48361 = t48300*t48293*t48297*3.0;
                double t48362 = gcab*t48300*t48301*t48293*(3.0/2.0);
                double t48363 = t48360+t48361+t48362;
                double t48364 = gamma_aa[index]*gcab*t48338*4.0;
                double t48365 = gamma_aa[index]*gcab*t48300*t48301*t48338*4.0;
                double t48366 = gamma_aa[index]*t48300*t48338*t48297*8.0;
                double t48367 = t48364+t48365+t48366;
                double t48368 = 1.0/t48310;
                double t48369 = 1.0/t48315;
                v_rho_a_gamma_bb_[index] = -(t48219+t48336+t48337+t48170*(t48230-t48220*t48214*t48217*t48195*(t48230- \
                   (1.0/(t48201*t48201)*t48207*(b2f*c*t48182*(1.0/3.0)+b4f*t48221*t48177*(2.0/3.0)+b1f*c*t48222*t48182* \
                   (1.0/6.0)+b3f*c*t48173*t48182*(1.0/2.0)))/t48204+a1f*c*c0f*t48205*t48182*(2.0/3.0)-a1p*c*c0p*t48208* \
                   t48182*(2.0/3.0))-a1p*c*c0p*t48208*t48182*(2.0/3.0)-t48220*t48231*t48214*t48209*t48195*4.0+t48220* \
                   t48217*t48209*t48195*t48249+t48214*t48190*t48217*t48209*t48195*t48189*4.0-Aa*t48214*t48232*t48242* \
                   t48244*t48195*(t48220*t48231*4.0-t48190*t48217*t48189*4.0)*2.0+Aa*t48232*t48242*t48251*t48244*t48195* \
                   t48249*2.0+(t48214*t48232*t48251*t48244*1.0/(t48238*t48238)*t48195*(b2a*c*t48182*(1.0/3.0)+b4a*t48221* \
                   t48177*(2.0/3.0)+b1a*c*t48222*t48182*(1.0/6.0)+b3a*c*t48173*t48182*(1.0/2.0)))/t48241-Aa*a1a*c*t48214* \
                   t48232*t48242*t48251*t48182*t48195*(2.0/3.0))+rho_a[index]*(-t48285+t48195*t48289*(t48285-(1.0/(t48261* \
                   t48261)*t48292*(b2f*c*t48262*(1.0/3.0)+b4f*t48177*t48268*(2.0/3.0)+b1f*c*t48262*t48269*(1.0/6.0)+b3f* \
                   c*t48262*t48254*(1.0/2.0)))/t48272+a1f*c*c0f*t48262*t48290*(2.0/3.0)-a1p*c*c0p*t48262*t48286*(2.0/ \
                   3.0))+a1p*c*c0p*t48262*t48286*(2.0/3.0))-c0p*t48277*t48286*2.0-t48317*t48195*t48289)*((ccab1*gcab* \
                   t48293*(1.0/2.0))/t48299-ccab2*t48300*t48301*t48352*t48346-ccab4*t48302*t48303*t48340*t48345-ccab1* \
                   t48300*t48293*t48358*t48297*(1.0/2.0)+ccab2*t48300*t48293*t48359*t48297+ccab4*t48301*t48302*t48293* \
                   t48297*t48369*2.0+ccab3*gcab*t48300*t48301*t48293*t48368*(3.0/2.0)-ccab3*gcab*t48300*t48301*t48363* \
                   t48339*t48297)+(rho_a[index]*(t48318+t48317*t48195*t48289)+rho_b[index]*(t48335-t48195*t48289*(t48335- \
                   c0f*log((t48196*(1.0/2.0))/(b1f*t48321+b3f*t48322+b2f*c*t48319+b4f*t48323*t48177)+1.0)*(a1f*c*t48319+ \
                   1.0)*2.0))-t48170*(t48219+t48336+t48337))*(ccab4*t48302*t48303*t48340*(gamma_aa[index]*t48300*t48293* \
                   t48338*8.0+gamma_aa[index]*t48301*t48302*t48293*t48338*8.0+gamma_aa[index]*gcab*t48300*t48293*t48338* \
                   t48297*1.6E1)+ccab2*t48300*t48346*t48293*t48349*t48297-ccab2*t48300*t48301*1.0/(t48306*t48306*t48306) \
                   *t48352*t48349*2.0-ccab4*t48302*t48303*1.0/(t48315*t48315*t48315)*t48345*t48357*2.0+ccab1*gamma_aa[index]* \
                   t48300*t48293*t48338*t48358*(4.0/3.0)-ccab2*gamma_aa[index]*t48300*t48293*t48338*t48359*(4.0/3.0)+ \
                   ccab2*gamma_aa[index]*t48301*t48302*t48346*t48293*t48338*(4.0/3.0)-ccab4*gamma_aa[index]*t48301*t48302* \
                   t48293*t48338*t48369*8.0+ccab2*gamma_aa[index]*t48300*t48352*t48346*t48338*t48297*(8.0/3.0)+ccab3* \
                   gcab*t48300*t48301*t48293*t48339*t48367*(3.0/2.0)+ccab4*t48301*t48302*t48340*t48293*t48357*t48297* \
                   2.0+ccab3*gcab*t48300*t48301*t48339*t48297*(gamma_aa[index]*t48300*t48293*t48338*4.0+gamma_aa[index]* \
                   gcab*t48300*t48293*t48338*t48297*4.0)-ccab1*gamma_aa[index]*gcab*t48300*t48293*t48338*t48297*1.0/(t48299* \
                   t48299*t48299)*(4.0/3.0)-ccab3*gcab*t48300*t48301*1.0/(t48310*t48310*t48310)*t48363*t48367*t48297* \
                   2.0+ccab3*gamma_aa[index]*gcab*t48300*t48301*t48363*t48338*t48339*4.0-ccab3*gamma_aa[index]*gcab*t48300* \
                   t48293*t48338*t48368*t48297*4.0+ccab4*gamma_aa[index]*t48301*t48302*t48340*t48345*t48338*t48297*(1.6E1/ \
                   3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48371 = rho_a[index]+rho_b[index];
                double t48372 = 1.0/pow(t48371,1.0/3.0);
                double t48373 = c*t48372;
                double t48374 = sqrt(t48373);
                double t48375 = b1p*t48374;
                double t48376 = pow(t48373,3.0/2.0);
                double t48377 = b3p*t48376;
                double t48378 = c*c;
                double t48379 = 1.0/pow(t48371,2.0/3.0);
                double t48380 = b4p*t48378*t48379;
                double t48381 = b2p*c*t48372;
                double t48382 = t48380+t48381+t48375+t48377;
                double t48383 = 1.0/pow(t48371,4.0/3.0);
                double t48384 = 1.0/c0p;
                double t48385 = 1.0/t48382;
                double t48386 = t48384*t48385*(1.0/2.0);
                double t48387 = t48386+1.0;
                double t48388 = a1p*c*t48372;
                double t48389 = t48388+1.0;
                double t48390 = rho_a[index]-rho_b[index];
                double t48391 = t48390*t48390;
                double t48392 = 1.0/t48371;
                double t48393 = t48390*t48392;
                double t48394 = two_13*2.0;
                double t48395 = t48394-2.0;
                double t48396 = 1.0/t48395;
                double t48397 = 1.0/c0f;
                double t48398 = b1f*t48374;
                double t48399 = b3f*t48376;
                double t48400 = b4f*t48378*t48379;
                double t48401 = b2f*c*t48372;
                double t48402 = t48400+t48401+t48398+t48399;
                double t48403 = 1.0/t48402;
                double t48404 = t48403*t48397*(1.0/2.0);
                double t48405 = t48404+1.0;
                double t48406 = log(t48405);
                double t48407 = a1f*c*t48372;
                double t48408 = t48407+1.0;
                double t48409 = log(t48387);
                double t48420 = c0f*t48406*t48408*2.0;
                double t48421 = c0p*t48409*t48389*2.0;
                double t48410 = t48420-t48421;
                double t48411 = t48393+1.0;
                double t48412 = pow(t48411,4.0/3.0);
                double t48413 = -t48393+1.0;
                double t48414 = pow(t48413,4.0/3.0);
                double t48415 = t48412+t48414-2.0;
                double t48416 = 1.0/(t48371*t48371);
                double t48417 = t48416*t48390;
                double t48418 = t48417+t48392;
                double t48419 = 1.0/(t48371*t48371*t48371*t48371);
                double t48422 = t48391*t48391;
                double t48423 = 1.0/pow(t48371,5.0/3.0);
                double t48424 = 1.0/sqrt(t48373);
                double t48425 = 1.0/t48387;
                double t48426 = 1.0/(t48382*t48382);
                double t48427 = b4p*t48423*t48378*(2.0/3.0);
                double t48428 = b2p*c*t48383*(1.0/3.0);
                double t48429 = b1p*c*t48424*t48383*(1.0/6.0);
                double t48430 = b3p*c*t48374*t48383*(1.0/2.0);
                double t48431 = t48430+t48427+t48428+t48429;
                double t48432 = 1.0/(t48371*t48371*t48371*t48371*t48371);
                double t48433 = 1.0/d2fz0;
                double t48434 = 1.0/Aa;
                double t48435 = b1a*t48374;
                double t48436 = b3a*t48376;
                double t48437 = b4a*t48378*t48379;
                double t48438 = b2a*c*t48372;
                double t48439 = t48435+t48436+t48437+t48438;
                double t48440 = 1.0/t48439;
                double t48441 = t48440*t48434*(1.0/2.0);
                double t48442 = t48441+1.0;
                double t48443 = log(t48442);
                double t48444 = a1a*c*t48372;
                double t48445 = t48444+1.0;
                double t48446 = pow(t48411,1.0/3.0);
                double t48447 = t48418*t48446*(4.0/3.0);
                double t48448 = pow(t48413,1.0/3.0);
                double t48449 = t48447-t48418*t48448*(4.0/3.0);
                double t48450 = t48422*t48419;
                double t48451 = t48450-1.0;
                double t48452 = 1.0/pow(rho_b[index],1.0/3.0);
                double t48453 = c*t48452;
                double t48454 = sqrt(t48453);
                double t48455 = b1f*t48454;
                double t48456 = pow(t48453,3.0/2.0);
                double t48457 = b3f*t48456;
                double t48458 = 1.0/pow(rho_b[index],2.0/3.0);
                double t48459 = b4f*t48458*t48378;
                double t48460 = b2f*c*t48452;
                double t48461 = t48460+t48455+t48457+t48459;
                double t48462 = 1.0/pow(rho_b[index],4.0/3.0);
                double t48463 = b1p*t48454;
                double t48464 = b3p*t48456;
                double t48465 = b4p*t48458*t48378;
                double t48466 = b2p*c*t48452;
                double t48467 = t48463+t48464+t48465+t48466;
                double t48468 = 1.0/pow(rho_b[index],5.0/3.0);
                double t48469 = 1.0/sqrt(t48453);
                double t48470 = 1.0/t48461;
                double t48471 = t48470*t48397*(1.0/2.0);
                double t48472 = t48471+1.0;
                double t48473 = 1.0/t48467;
                double t48474 = t48473*t48384*(1.0/2.0);
                double t48475 = t48474+1.0;
                double t48476 = a1p*c*t48452;
                double t48477 = t48476+1.0;
                double t48478 = 1.0/t48475;
                double t48479 = 1.0/(t48467*t48467);
                double t48480 = b4p*t48378*t48468*(2.0/3.0);
                double t48481 = b2p*c*t48462*(1.0/3.0);
                double t48482 = b1p*c*t48462*t48469*(1.0/6.0);
                double t48483 = b3p*c*t48462*t48454*(1.0/2.0);
                double t48484 = t48480+t48481+t48482+t48483;
                double t48485 = t48484*t48477*t48478*t48479;
                double t48486 = log(t48475);
                double t48487 = pow(2.0,1.0/3.0);
                double t48488 = t48487*2.0;
                double t48489 = t48488-2.0;
                double t48490 = log(t48472);
                double t48491 = a1f*c*t48452;
                double t48492 = t48491+1.0;
                double t48493 = 1.0/pow(rho_a[index],8.0/3.0);
                double t48494 = gamma_aa[index]*t48493*(1.0/2.0);
                double t48495 = 1.0/pow(rho_b[index],8.0/3.0);
                double t48496 = gamma_bb[index]*t48495*(1.0/2.0);
                double t48497 = t48494+t48496;
                double t48498 = gcab*t48497;
                double t48499 = t48498+1.0;
                double t48500 = gcab*gcab;
                double t48501 = t48497*t48497;
                double t48502 = t48500*t48500;
                double t48503 = t48501*t48501;
                double t48504 = t48500*t48501;
                double t48505 = gcab*t48497*2.0;
                double t48506 = t48504+t48505+1.0;
                double t48507 = t48500*t48501*3.0;
                double t48508 = gcab*t48500*t48501*t48497;
                double t48509 = gcab*t48497*3.0;
                double t48510 = t48507+t48508+t48509+1.0;
                double t48511 = t48500*t48501*6.0;
                double t48512 = gcab*t48500*t48501*t48497*4.0;
                double t48513 = t48502*t48503;
                double t48514 = gcab*t48497*4.0;
                double t48515 = t48511+t48512+t48513+t48514+1.0;
                double t48516 = a1p*c*c0p*t48409*t48383*(2.0/3.0);
                double t48517 = 1.0/pow(rho_a[index],1.0/3.0);
                double t48518 = c*t48517;
                double t48519 = sqrt(t48518);
                double t48520 = pow(t48518,3.0/2.0);
                double t48521 = 1.0/pow(rho_a[index],2.0/3.0);
                double t48522 = b1p*t48519;
                double t48523 = b3p*t48520;
                double t48524 = b4p*t48521*t48378;
                double t48525 = b2p*c*t48517;
                double t48526 = t48522+t48523+t48524+t48525;
                double t48527 = 1.0/t48526;
                double t48528 = t48527*t48384*(1.0/2.0);
                double t48529 = t48528+1.0;
                double t48530 = log(t48529);
                double t48531 = a1p*c*t48517;
                double t48532 = t48531+1.0;
                double t48533 = c0p*t48530*t48532*2.0;
                double t48534 = c0f*t48490*t48492*2.0;
                double t48536 = c0p*t48477*t48486*2.0;
                double t48535 = t48534-t48536;
                double t48537 = t48410*t48422*t48415*t48419*t48396;
                double t48538 = Aa*t48415*t48433*t48451*t48443*t48445*t48396*2.0;
                double t48539 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t48540 = 1.0/(t48510*t48510);
                double t48541 = 1.0/(t48515*t48515);
                double t48542 = gcab*t48493*2.0;
                double t48543 = t48500*t48493*t48497*6.0;
                double t48544 = gcab*t48500*t48501*t48493*6.0;
                double t48545 = t48501*t48502*t48493*t48497*2.0;
                double t48546 = t48542+t48543+t48544+t48545;
                double t48547 = 1.0/(t48506*t48506);
                double t48548 = gamma_bb[index]*gcab*t48539*(8.0/3.0);
                double t48549 = gamma_bb[index]*t48500*t48539*t48497*(8.0/3.0);
                double t48550 = t48548+t48549;
                double t48551 = gcab*t48493;
                double t48552 = t48500*t48493*t48497;
                double t48553 = t48551+t48552;
                double t48554 = gamma_bb[index]*gcab*t48539*(1.6E1/3.0);
                double t48555 = gamma_bb[index]*gcab*t48500*t48501*t48539*1.6E1;
                double t48556 = gamma_bb[index]*t48501*t48502*t48539*t48497*(1.6E1/3.0);
                double t48557 = gamma_bb[index]*t48500*t48539*t48497*1.6E1;
                double t48558 = t48554+t48555+t48556+t48557;
                double t48559 = 1.0/(t48499*t48499);
                double t48560 = 1.0/t48506;
                double t48561 = gcab*t48493*(3.0/2.0);
                double t48562 = t48500*t48493*t48497*3.0;
                double t48563 = gcab*t48500*t48501*t48493*(3.0/2.0);
                double t48564 = t48561+t48562+t48563;
                double t48565 = gamma_bb[index]*gcab*t48539*4.0;
                double t48566 = gamma_bb[index]*gcab*t48500*t48501*t48539*4.0;
                double t48567 = gamma_bb[index]*t48500*t48539*t48497*8.0;
                double t48568 = t48565+t48566+t48567;
                double t48569 = 1.0/t48510;
                double t48570 = 1.0/t48515;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t48536+t48535*t48396*t48489)+rho_a[index]*(t48533-t48396* \
                   t48489*(t48533-c0f*log((t48397*(1.0/2.0))/(b1f*t48519+b3f*t48520+b2f*c*t48517+b4f*t48521*t48378)+1.0) \
                   *(a1f*c*t48517+1.0)*2.0))-t48371*(t48421+t48537+t48538))*(ccab4*t48502*t48503*t48541*(gamma_bb[index]* \
                   t48500*t48493*t48539*8.0+gamma_bb[index]*t48501*t48502*t48493*t48539*8.0+gamma_bb[index]*gcab*t48500* \
                   t48493*t48539*t48497*1.6E1)+ccab2*t48500*t48550*t48493*t48547*t48497-ccab2*t48500*t48501*t48550*1.0/ \
                   (t48506*t48506*t48506)*t48553*2.0-ccab4*t48502*t48503*1.0/(t48515*t48515*t48515)*t48546*t48558*2.0- \
                   ccab2*gamma_bb[index]*t48500*t48560*t48493*t48539*(4.0/3.0)+ccab1*gamma_bb[index]*t48500*t48493*t48539* \
                   t48559*(4.0/3.0)-ccab4*gamma_bb[index]*t48501*t48502*t48570*t48493*t48539*8.0+ccab2*gamma_bb[index]* \
                   t48501*t48502*t48493*t48547*t48539*(4.0/3.0)+ccab2*gamma_bb[index]*t48500*t48553*t48547*t48539*t48497* \
                   (8.0/3.0)+ccab3*gcab*t48500*t48501*t48540*t48493*t48568*(3.0/2.0)+ccab4*t48501*t48502*t48541*t48493* \
                   t48558*t48497*2.0+ccab3*gcab*t48500*t48501*t48540*t48497*(gamma_bb[index]*t48500*t48493*t48539*4.0+ \
                   gamma_bb[index]*gcab*t48500*t48493*t48539*t48497*4.0)-ccab1*gamma_bb[index]*gcab*t48500*t48493*t48539* \
                   t48497*1.0/(t48499*t48499*t48499)*(4.0/3.0)-ccab3*gcab*t48500*t48501*1.0/(t48510*t48510*t48510)*t48564* \
                   t48568*t48497*2.0+ccab3*gamma_bb[index]*gcab*t48500*t48501*t48540*t48564*t48539*4.0-ccab3*gamma_bb[index]* \
                   gcab*t48500*t48493*t48539*t48497*t48569*4.0+ccab4*gamma_bb[index]*t48501*t48502*t48541*t48546*t48539* \
                   t48497*(1.6E1/3.0))-(t48421+t48537+t48538+rho_b[index]*(-t48485+t48396*t48489*(t48485-(1.0/(t48461* \
                   t48461)*t48492*(b2f*c*t48462*(1.0/3.0)+b4f*t48378*t48468*(2.0/3.0)+b1f*c*t48462*t48469*(1.0/6.0)+b3f* \
                   c*t48462*t48454*(1.0/2.0)))/t48472+a1f*c*c0f*t48462*t48490*(2.0/3.0)-a1p*c*c0p*t48462*t48486*(2.0/ \
                   3.0))+a1p*c*c0p*t48462*t48486*(2.0/3.0))-t48371*(t48516-t48431*t48425*t48426*t48389+t48410*t48422* \
                   t48432*t48415*t48396*4.0+t48410*t48422*t48419*t48449*t48396-t48422*t48415*t48419*t48396*(t48516-t48431* \
                   t48425*t48426*t48389+(1.0/(t48402*t48402)*t48408*(b2f*c*t48383*(1.0/3.0)+b4f*t48423*t48378*(2.0/3.0) \
                   +b1f*c*t48424*t48383*(1.0/6.0)+b3f*c*t48374*t48383*(1.0/2.0)))/t48405-a1f*c*c0f*t48406*t48383*(2.0/ \
                   3.0))+t48410*t48415*t48390*t48391*t48419*t48396*4.0+Aa*t48415*t48433*t48443*t48445*t48396*(t48422* \
                   t48432*4.0+t48390*t48391*t48419*4.0)*2.0+Aa*t48433*t48451*t48443*t48445*t48449*t48396*2.0-(t48415* \
                   t48433*t48451*t48445*1.0/(t48439*t48439)*t48396*(b2a*c*t48383*(1.0/3.0)+b4a*t48423*t48378*(2.0/3.0) \
                   +b1a*c*t48424*t48383*(1.0/6.0)+b3a*c*t48374*t48383*(1.0/2.0)))/t48442+Aa*a1a*c*t48415*t48433*t48451* \
                   t48443*t48383*t48396*(2.0/3.0))-c0p*t48477*t48486*2.0-t48535*t48396*t48489)*((ccab1*gcab*t48493*(1.0/ \
                   2.0))/t48499-ccab2*t48500*t48501*t48553*t48547-ccab4*t48502*t48503*t48541*t48546+ccab2*t48500*t48560* \
                   t48493*t48497-ccab1*t48500*t48493*t48559*t48497*(1.0/2.0)+ccab4*t48501*t48502*t48570*t48493*t48497* \
                   2.0+ccab3*gcab*t48500*t48501*t48493*t48569*(3.0/2.0)-ccab3*gcab*t48500*t48501*t48540*t48564*t48497) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48573 = 1.0/pow(rho_b[index],1.0/3.0);
                double t48574 = c*t48573;
                double t48575 = sqrt(t48574);
                double t48576 = pow(t48574,3.0/2.0);
                double t48577 = c*c;
                double t48578 = 1.0/pow(rho_b[index],2.0/3.0);
                double t48579 = 1.0/c0p;
                double t48580 = b1p*t48575;
                double t48581 = b3p*t48576;
                double t48582 = b4p*t48577*t48578;
                double t48583 = b2p*c*t48573;
                double t48584 = t48580+t48581+t48582+t48583;
                double t48585 = 1.0/t48584;
                double t48586 = t48585*t48579*(1.0/2.0);
                double t48587 = t48586+1.0;
                double t48588 = log(t48587);
                double t48589 = a1p*c*t48573;
                double t48590 = t48589+1.0;
                double t48591 = 1.0/pow(rho_b[index],8.0/3.0);
                double t48592 = gamma_bb[index]*gamma_bb[index];
                double t48593 = gcaa*gcaa;
                double t48594 = t48593*t48593;
                double t48595 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t48596 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t48597 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t48598 = gamma_bb[index]*gcaa*t48591;
                double t48599 = t48598+1.0;
                double t48600 = gamma_bb[index]*gcaa*t48591*3.0;
                double t48601 = gamma_bb[index]*gcaa*t48592*t48593*t48597;
                double t48602 = t48592*t48593*t48596*3.0;
                double t48603 = t48600+t48601+t48602+1.0;
                double t48604 = t48592*t48592;
                double t48605 = gamma_bb[index]*gcaa*t48591*4.0;
                double t48606 = gamma_bb[index]*gcaa*t48592*t48593*t48597*4.0;
                double t48607 = t48592*t48593*t48596*6.0;
                double t48608 = t48604*t48594*t48595;
                double t48609 = t48605+t48606+t48607+t48608+1.0;
                double t48610 = gamma_bb[index]*gcaa*t48591*2.0;
                double t48611 = t48592*t48593*t48596;
                double t48612 = t48610+t48611+1.0;
                double t48613 = rho_a[index]+rho_b[index];
                double t48614 = 1.0/pow(t48613,1.0/3.0);
                double t48615 = c*t48614;
                double t48616 = sqrt(t48615);
                double t48617 = b1p*t48616;
                double t48618 = pow(t48615,3.0/2.0);
                double t48619 = b3p*t48618;
                double t48620 = 1.0/pow(t48613,2.0/3.0);
                double t48621 = b4p*t48620*t48577;
                double t48622 = b2p*c*t48614;
                double t48623 = t48621+t48622+t48617+t48619;
                double t48624 = 1.0/pow(t48613,4.0/3.0);
                double t48625 = two_13*2.0;
                double t48626 = t48625-2.0;
                double t48627 = 1.0/t48626;
                double t48628 = 1.0/c0f;
                double t48629 = 1.0/t48623;
                double t48630 = t48629*t48579*(1.0/2.0);
                double t48631 = t48630+1.0;
                double t48632 = a1p*c*t48614;
                double t48633 = t48632+1.0;
                double t48634 = rho_a[index]-rho_b[index];
                double t48635 = t48634*t48634;
                double t48636 = 1.0/t48613;
                double t48637 = t48634*t48636;
                double t48638 = b1f*t48616;
                double t48639 = b3f*t48618;
                double t48640 = b4f*t48620*t48577;
                double t48641 = b2f*c*t48614;
                double t48642 = t48640+t48641+t48638+t48639;
                double t48643 = 1.0/t48642;
                double t48644 = t48643*t48628*(1.0/2.0);
                double t48645 = t48644+1.0;
                double t48646 = log(t48645);
                double t48647 = a1f*c*t48614;
                double t48648 = t48647+1.0;
                double t48649 = log(t48631);
                double t48660 = c0f*t48646*t48648*2.0;
                double t48661 = c0p*t48633*t48649*2.0;
                double t48650 = t48660-t48661;
                double t48651 = t48637+1.0;
                double t48652 = pow(t48651,4.0/3.0);
                double t48653 = -t48637+1.0;
                double t48654 = pow(t48653,4.0/3.0);
                double t48655 = t48652+t48654-2.0;
                double t48656 = 1.0/(t48613*t48613);
                double t48657 = t48634*t48656;
                double t48658 = t48636+t48657;
                double t48659 = 1.0/(t48613*t48613*t48613*t48613);
                double t48662 = t48635*t48635;
                double t48663 = 1.0/pow(t48613,5.0/3.0);
                double t48664 = 1.0/sqrt(t48615);
                double t48665 = 1.0/t48631;
                double t48666 = 1.0/(t48623*t48623);
                double t48667 = b4p*t48663*t48577*(2.0/3.0);
                double t48668 = b2p*c*t48624*(1.0/3.0);
                double t48669 = b1p*c*t48624*t48664*(1.0/6.0);
                double t48670 = b3p*c*t48624*t48616*(1.0/2.0);
                double t48671 = t48670+t48667+t48668+t48669;
                double t48672 = 1.0/(t48613*t48613*t48613*t48613*t48613);
                double t48673 = 1.0/d2fz0;
                double t48674 = 1.0/Aa;
                double t48675 = b1a*t48616;
                double t48676 = b3a*t48618;
                double t48677 = b4a*t48620*t48577;
                double t48678 = b2a*c*t48614;
                double t48679 = t48675+t48676+t48677+t48678;
                double t48680 = 1.0/t48679;
                double t48681 = t48680*t48674*(1.0/2.0);
                double t48682 = t48681+1.0;
                double t48683 = log(t48682);
                double t48684 = a1a*c*t48614;
                double t48685 = t48684+1.0;
                double t48686 = pow(t48651,1.0/3.0);
                double t48687 = t48658*t48686*(4.0/3.0);
                double t48688 = pow(t48653,1.0/3.0);
                double t48689 = t48687-t48658*t48688*(4.0/3.0);
                double t48690 = t48662*t48659;
                double t48691 = t48690-1.0;
                double t48692 = pow(2.0,1.0/3.0);
                double t48693 = t48692*2.0;
                double t48694 = t48693-2.0;
                double t48695 = a1f*c*t48573;
                double t48696 = t48695+1.0;
                double t48697 = b1f*t48575;
                double t48698 = b3f*t48576;
                double t48699 = b4f*t48577*t48578;
                double t48700 = b2f*c*t48573;
                double t48701 = t48700+t48697+t48698+t48699;
                double t48702 = 1.0/t48701;
                double t48703 = t48702*t48628*(1.0/2.0);
                double t48704 = t48703+1.0;
                double t48705 = 1.0/pow(rho_b[index],4.0/3.0);
                double t48706 = 1.0/pow(rho_b[index],5.0/3.0);
                double t48707 = 1.0/sqrt(t48574);
                double t48708 = log(t48704);
                double t48709 = 1.0/t48587;
                double t48710 = 1.0/(t48584*t48584);
                double t48711 = b4p*t48706*t48577*(2.0/3.0);
                double t48712 = b2p*c*t48705*(1.0/3.0);
                double t48713 = b1p*c*t48705*t48707*(1.0/6.0);
                double t48714 = b3p*c*t48705*t48575*(1.0/2.0);
                double t48715 = t48711+t48712+t48713+t48714;
                double t48716 = t48710*t48715*t48590*t48709;
                double t48717 = c0f*t48708*t48696*2.0;
                double t48718 = c0p*t48590*t48588*2.0;
                double t48719 = 1.0/pow(rho_a[index],8.0/3.0);
                double t48720 = gamma_aa[index]*t48719*(1.0/2.0);
                double t48721 = gamma_bb[index]*t48591*(1.0/2.0);
                double t48722 = t48720+t48721;
                double t48723 = gcab*t48722;
                double t48724 = t48723+1.0;
                double t48725 = gcab*gcab;
                double t48726 = t48722*t48722;
                double t48727 = t48725*t48725;
                double t48728 = t48726*t48726;
                double t48729 = t48725*t48726;
                double t48730 = gcab*t48722*2.0;
                double t48731 = t48730+t48729+1.0;
                double t48732 = t48725*t48726*3.0;
                double t48733 = gcab*t48722*t48725*t48726;
                double t48734 = gcab*t48722*3.0;
                double t48735 = t48732+t48733+t48734+1.0;
                double t48736 = t48725*t48726*6.0;
                double t48737 = gcab*t48722*t48725*t48726*4.0;
                double t48738 = t48727*t48728;
                double t48739 = gcab*t48722*4.0;
                double t48740 = t48736+t48737+t48738+t48739+1.0;
                double t48741 = a1p*c*c0p*t48624*t48649*(2.0/3.0);
                double t48742 = 1.0/pow(rho_a[index],1.0/3.0);
                double t48743 = c*t48742;
                double t48744 = sqrt(t48743);
                double t48745 = pow(t48743,3.0/2.0);
                double t48746 = 1.0/pow(rho_a[index],2.0/3.0);
                double t48747 = b1p*t48744;
                double t48748 = b3p*t48745;
                double t48749 = b4p*t48746*t48577;
                double t48750 = b2p*c*t48742;
                double t48751 = t48750+t48747+t48748+t48749;
                double t48752 = 1.0/t48751;
                double t48753 = t48752*t48579*(1.0/2.0);
                double t48754 = t48753+1.0;
                double t48755 = log(t48754);
                double t48756 = a1p*c*t48742;
                double t48757 = t48756+1.0;
                double t48758 = c0p*t48755*t48757*2.0;
                double t48759 = t48717-t48718;
                double t48760 = t48650*t48662*t48627*t48655*t48659;
                double t48761 = Aa*t48627*t48655*t48673*t48691*t48683*t48685*2.0;
                double t48762 = 1.0/t48724;
                double t48763 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t48764 = 1.0/(t48724*t48724);
                double t48765 = 1.0/t48731;
                double t48766 = 1.0/(t48735*t48735);
                double t48767 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t48768 = 1.0/(t48731*t48731);
                double t48769 = 1.0/t48735;
                double t48770 = 1.0/t48740;
                double t48771 = 1.0/(t48740*t48740);
                double t48772 = gcab*t48591*2.0;
                double t48773 = t48722*t48725*t48591*6.0;
                double t48774 = gcab*t48725*t48591*t48726*6.0;
                double t48775 = t48722*t48591*t48726*t48727*2.0;
                double t48776 = t48772+t48773+t48774+t48775;
                double t48777 = gamma_bb[index]*gcab*t48763*(8.0/3.0);
                double t48778 = gamma_bb[index]*t48722*t48725*t48763*(8.0/3.0);
                double t48779 = t48777+t48778;
                double t48780 = gcab*t48591;
                double t48781 = t48722*t48725*t48591;
                double t48782 = t48780+t48781;
                double t48783 = gamma_bb[index]*gcab*t48763*(1.6E1/3.0);
                double t48784 = gamma_bb[index]*gcab*t48725*t48726*t48763*1.6E1;
                double t48785 = gamma_bb[index]*t48722*t48726*t48727*t48763*(1.6E1/3.0);
                double t48786 = gamma_bb[index]*t48722*t48725*t48763*1.6E1;
                double t48787 = t48783+t48784+t48785+t48786;
                double t48788 = gcab*t48591*(3.0/2.0);
                double t48789 = t48722*t48725*t48591*3.0;
                double t48790 = gcab*t48725*t48591*t48726*(3.0/2.0);
                double t48791 = t48790+t48788+t48789;
                double t48792 = gamma_bb[index]*gcab*t48763*4.0;
                double t48793 = gamma_bb[index]*gcab*t48725*t48726*t48763*4.0;
                double t48794 = gamma_bb[index]*t48722*t48725*t48763*8.0;
                double t48795 = t48792+t48793+t48794;
                double t48796 = gx*gx;
                double t48797 = t48796*t48796;
                double t48798 = gamma_bb[index]*gx*t48591;
                double t48799 = t48798+1.0;
                double t48800 = gamma_bb[index]*gx*t48591*3.0;
                double t48801 = gamma_bb[index]*gx*t48592*t48597*t48796;
                double t48802 = t48592*t48596*t48796*3.0;
                double t48803 = t48800+t48801+t48802+1.0;
                double t48804 = gamma_bb[index]*gx*t48591*4.0;
                double t48805 = gamma_bb[index]*gx*t48592*t48597*t48796*4.0;
                double t48806 = t48592*t48596*t48796*6.0;
                double t48807 = t48604*t48595*t48797;
                double t48808 = t48804+t48805+t48806+t48807+1.0;
                double t48809 = gamma_bb[index]*gx*t48591*2.0;
                double t48810 = t48592*t48596*t48796;
                double t48811 = t48810+t48809+1.0;
                double t48812 = t48627*t48694*t48759;
                double t48813 = t48812+t48718;
                double t48814 = 1.0/t48599;
                double t48815 = 1.0/t48609;
                double t48816 = 1.0/t48612;
                double t48817 = 1.0/t48603;
                double t48818 = 1.0/(t48599*t48599);
                double t48819 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t48820 = 1.0/(t48603*t48603);
                double t48821 = 1.0/(t48612*t48612);
                double t48822 = gcaa*t48591*3.0;
                double t48823 = gamma_bb[index]*t48593*t48596*6.0;
                double t48824 = gcaa*t48592*t48593*t48597*3.0;
                double t48825 = t48822+t48823+t48824;
                double t48826 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t48827 = 1.0/(t48609*t48609);
                double t48828 = gcaa*t48591*4.0;
                double t48829 = gamma_bb[index]*t48593*t48596*1.2E1;
                double t48830 = gcaa*t48592*t48593*t48597*1.2E1;
                double t48831 = gamma_bb[index]*t48592*t48594*t48595*4.0;
                double t48832 = t48830+t48831+t48828+t48829;
                double t48833 = gcaa*t48591*2.0;
                double t48834 = gamma_bb[index]*t48593*t48596*2.0;
                double t48835 = t48833+t48834;
                double t48836 = gamma_bb[index]*gcaa*t48763*(1.6E1/3.0);
                double t48837 = t48592*t48593*t48767*(1.6E1/3.0);
                double t48838 = t48836+t48837;
                double t48839 = gamma_bb[index]*gcaa*t48763*8.0;
                double t48840 = gamma_bb[index]*gcaa*t48592*t48593*t48819*8.0;
                double t48841 = t48592*t48593*t48767*1.6E1;
                double t48842 = t48840+t48841+t48839;
                double t48843 = gamma_bb[index]*gcaa*t48763*(3.2E1/3.0);
                double t48844 = gamma_bb[index]*gcaa*t48592*t48593*t48819*3.2E1;
                double t48845 = t48592*t48593*t48767*3.2E1;
                double t48846 = t48604*t48826*t48594*(3.2E1/3.0);
                double t48847 = t48843+t48844+t48845+t48846;
                double t48848 = 1.0/t48704;
                double t48849 = 1.0/(t48701*t48701);
                double t48850 = b4f*t48706*t48577*(2.0/3.0);
                double t48851 = b2f*c*t48705*(1.0/3.0);
                double t48852 = b1f*c*t48705*t48707*(1.0/6.0);
                double t48853 = b3f*c*t48705*t48575*(1.0/2.0);
                double t48854 = t48850+t48851+t48852+t48853;
                double t48855 = a1f*c*c0f*t48705*t48708*(2.0/3.0);
                double t48856 = a1p*c*c0p*t48705*t48588*(2.0/3.0);
                double t48857 = ccaa1*gcaa*t48814*t48591;
                double t48858 = ccaa4*gamma_bb[index]*t48815*t48592*t48594*t48595*4.0;
                double t48859 = ccaa2*gamma_bb[index]*t48816*t48593*t48596*2.0;
                double t48860 = ccaa3*gcaa*t48592*t48817*t48593*t48597*3.0;
                double t48861 = t48860+t48857+t48858+t48859-ccaa1*gamma_bb[index]*t48593*t48818*t48596-ccaa4*t48604* \
                   t48832*t48827*t48594*t48595-ccaa2*t48821*t48592*t48835*t48593*t48596-ccaa3*gamma_bb[index]*gcaa*t48820* \
                   t48825*t48592*t48593*t48597;
                double t48862 = 1.0/t48799;
                double t48863 = 1.0/t48808;
                double t48864 = 1.0/t48811;
                double t48865 = 1.0/t48803;
                double t48866 = 1.0/(t48799*t48799);
                double t48867 = 1.0/(t48803*t48803);
                double t48868 = 1.0/(t48811*t48811);
                double t48869 = gx*t48591*3.0;
                double t48870 = gamma_bb[index]*t48596*t48796*6.0;
                double t48871 = gx*t48592*t48597*t48796*3.0;
                double t48872 = t48870+t48871+t48869;
                double t48873 = 1.0/(t48808*t48808);
                double t48874 = gx*t48591*4.0;
                double t48875 = gamma_bb[index]*t48596*t48796*1.2E1;
                double t48876 = gx*t48592*t48597*t48796*1.2E1;
                double t48877 = gamma_bb[index]*t48592*t48595*t48797*4.0;
                double t48878 = t48874+t48875+t48876+t48877;
                double t48879 = gx*t48591*2.0;
                double t48880 = gamma_bb[index]*t48596*t48796*2.0;
                double t48881 = t48880+t48879;
                double t48882 = gamma_bb[index]*gx*t48763*(1.6E1/3.0);
                double t48883 = t48592*t48767*t48796*(1.6E1/3.0);
                double t48884 = t48882+t48883;
                double t48885 = gamma_bb[index]*gx*t48763*8.0;
                double t48886 = gamma_bb[index]*gx*t48592*t48819*t48796*8.0;
                double t48887 = t48592*t48767*t48796*1.6E1;
                double t48888 = t48885+t48886+t48887;
                double t48889 = gamma_bb[index]*gx*t48763*(3.2E1/3.0);
                double t48890 = gamma_bb[index]*gx*t48592*t48819*t48796*3.2E1;
                double t48891 = t48592*t48767*t48796*3.2E1;
                double t48892 = t48604*t48826*t48797*(3.2E1/3.0);
                double t48893 = t48890+t48891+t48892+t48889;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t48813+rho_a[index]*(t48758-t48627*t48694*(t48758-c0f*log((t48628* \
                   (1.0/2.0))/(b1f*t48744+b3f*t48745+b2f*c*t48742+b4f*t48746*t48577)+1.0)*(a1f*c*t48742+1.0)*2.0))-t48613* \
                   (t48661+t48760+t48761))*(ccab1*gcab*t48762*t48763*(4.0/3.0)-ccab2*t48725*t48726*t48768*(gcab*t48763* \
                   (8.0/3.0)+gamma_bb[index]*t48725*t48767*(4.0/3.0)+t48722*t48725*t48763*(8.0/3.0))-ccab4*t48771*t48727* \
                   t48728*(gcab*t48763*(1.6E1/3.0)+gamma_bb[index]*t48725*t48767*8.0+t48722*t48725*t48763*1.6E1+gamma_bb[index]* \
                   t48726*t48727*t48767*8.0+gcab*t48725*t48726*t48763*1.6E1+t48722*t48726*t48727*t48763*(1.6E1/3.0)+gamma_bb[index]* \
                   gcab*t48722*t48725*t48767*1.6E1)-ccab1*gamma_bb[index]*t48725*t48764*t48767*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t48725*t48765*t48767*(4.0/3.0)-ccab1*t48722*t48725*t48763*t48764*(4.0/3.0)+ccab2*t48722*t48725*t48763* \
                   t48765*(8.0/3.0)+ccab4*t48722*t48770*t48726*t48727*t48763*(1.6E1/3.0)-ccab2*t48722*t48725*t48591*t48768* \
                   t48779+ccab2*1.0/(t48731*t48731*t48731)*t48725*t48726*t48782*t48779*2.0+ccab4*1.0/(t48740*t48740*t48740) \
                   *t48727*t48728*t48776*t48787*2.0+ccab4*gamma_bb[index]*t48770*t48726*t48727*t48767*8.0+ccab3*gcab* \
                   t48725*t48726*t48763*t48769*4.0+ccab3*gamma_bb[index]*gcab*t48722*t48725*t48767*t48769*4.0-ccab2*gamma_bb[index]* \
                   t48722*t48725*t48763*t48782*t48768*(8.0/3.0)-ccab3*gcab*t48725*t48591*t48726*t48766*t48795*(3.0/2.0) \
                   -ccab4*t48722*t48591*t48726*t48771*t48727*t48787*2.0-ccab3*gcab*t48722*t48725*t48726*t48766*(gcab* \
                   t48763*4.0+gamma_bb[index]*t48725*t48767*4.0+t48722*t48725*t48763*8.0+gcab*t48725*t48726*t48763*4.0+ \
                   gamma_bb[index]*gcab*t48722*t48725*t48767*4.0)+ccab1*gamma_bb[index]*gcab*t48722*1.0/(t48724*t48724* \
                   t48724)*t48725*t48767*(4.0/3.0)+ccab3*gcab*t48722*t48725*t48726*1.0/(t48735*t48735*t48735)*t48791* \
                   t48795*2.0-ccab3*gamma_bb[index]*gcab*t48725*t48726*t48763*t48791*t48766*4.0-ccab4*gamma_bb[index]* \
                   t48722*t48726*t48771*t48727*t48763*t48776*(1.6E1/3.0))-(t48661+t48760+t48761-t48718+rho_b[index]*(- \
                   t48716+t48856+t48627*t48694*(t48716+t48855-t48854*t48848*t48696*t48849-a1p*c*c0p*t48705*t48588*(2.0/ \
                   3.0)))-t48613*(t48741-t48633*t48671*t48665*t48666+t48650*t48662*t48627*t48672*t48655*4.0+t48650*t48662* \
                   t48627*t48659*t48689-t48662*t48627*t48655*t48659*(t48741-t48633*t48671*t48665*t48666+(1.0/(t48642* \
                   t48642)*t48648*(b2f*c*t48624*(1.0/3.0)+b4f*t48663*t48577*(2.0/3.0)+b1f*c*t48624*t48664*(1.0/6.0)+b3f* \
                   c*t48624*t48616*(1.0/2.0)))/t48645-a1f*c*c0f*t48624*t48646*(2.0/3.0))+t48650*t48634*t48635*t48627* \
                   t48655*t48659*4.0+Aa*t48627*t48655*t48673*t48683*t48685*(t48662*t48672*4.0+t48634*t48635*t48659*4.0) \
                   *2.0+Aa*t48627*t48673*t48691*t48683*t48685*t48689*2.0-(t48627*t48655*t48673*t48691*t48685*1.0/(t48679* \
                   t48679)*(b2a*c*t48624*(1.0/3.0)+b4a*t48663*t48577*(2.0/3.0)+b1a*c*t48624*t48664*(1.0/6.0)+b3a*c*t48624* \
                   t48616*(1.0/2.0)))/t48682+Aa*a1a*c*t48624*t48627*t48655*t48673*t48691*t48683*(2.0/3.0))-t48627*t48694* \
                   t48759)*(ccab1*gcab*t48591*t48762*(1.0/2.0)-ccab1*t48722*t48725*t48591*t48764*(1.0/2.0)+ccab2*t48722* \
                   t48725*t48591*t48765-ccab2*t48725*t48726*t48782*t48768-ccab4*t48771*t48727*t48728*t48776+ccab4*t48722* \
                   t48770*t48591*t48726*t48727*2.0+ccab3*gcab*t48725*t48591*t48726*t48769*(3.0/2.0)-ccab3*gcab*t48722* \
                   t48725*t48726*t48791*t48766)-t48861*(t48718+t48627*t48694*(t48717-c0p*t48590*t48588*2.0))-rho_b[index]* \
                   t48813*(ccaa1*gcaa*t48814*t48763*(-8.0/3.0)-ccaa2*gamma_bb[index]*t48816*t48593*t48767*(3.2E1/3.0) \
                   +ccaa1*gamma_bb[index]*t48593*t48818*t48767*8.0+ccaa4*t48604*t48832*t48826*t48827*t48594*(3.2E1/3.0) \
                   +ccaa2*t48821*t48592*t48835*t48593*t48767*(1.6E1/3.0)+ccaa4*t48604*t48827*t48594*t48595*(gcaa*t48763* \
                   (3.2E1/3.0)+gamma_bb[index]*t48593*t48767*6.4E1+gamma_bb[index]*t48592*t48826*t48594*(1.28E2/3.0)+ \
                   gcaa*t48592*t48593*t48819*9.6E1)-ccaa1*gcaa*t48592*t48593*t48819*1.0/(t48599*t48599*t48599)*(1.6E1/ \
                   3.0)+ccaa2*t48821*t48592*t48593*t48596*(gcaa*t48763*(1.6E1/3.0)+gamma_bb[index]*t48593*t48767*(3.2E1/ \
                   3.0))-ccaa4*gamma_bb[index]*t48815*t48592*t48826*t48594*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t48821* \
                   t48593*t48838*t48596*2.0-ccaa3*gcaa*t48592*t48817*t48593*t48819*2.4E1+ccaa4*gamma_bb[index]*t48592* \
                   t48827*t48594*t48595*t48847*4.0+ccaa3*gcaa*t48820*t48842*t48592*t48593*t48597*3.0-ccaa4*t48604*t48832* \
                   1.0/(t48609*t48609*t48609)*t48594*t48595*t48847*2.0-ccaa2*1.0/(t48612*t48612*t48612)*t48592*t48835* \
                   t48593*t48838*t48596*2.0+ccaa3*gamma_bb[index]*gcaa*t48820*t48592*t48593*t48597*(gcaa*t48763*8.0+gamma_bb[index]* \
                   t48593*t48767*3.2E1+gcaa*t48592*t48593*t48819*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t48820*t48825*t48592* \
                   t48593*t48819*8.0-ccaa3*gamma_bb[index]*gcaa*1.0/(t48603*t48603*t48603)*t48842*t48825*t48592*t48593* \
                   t48597*2.0)+c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t48763*t48862*(-8.0/3.0)+cx1*gamma_bb[index]*t48767* \
                   t48866*t48796*8.0-cx2*gamma_bb[index]*t48864*t48767*t48796*(3.2E1/3.0)+cx2*t48592*t48881*t48767*t48796* \
                   t48868*(1.6E1/3.0)+cx4*t48604*t48826*t48873*t48797*t48878*(3.2E1/3.0)+cx4*t48604*t48873*t48595*t48797* \
                   (gx*t48763*(3.2E1/3.0)+gamma_bb[index]*t48767*t48796*6.4E1+gamma_bb[index]*t48592*t48826*t48797*(1.28E2/ \
                   3.0)+gx*t48592*t48819*t48796*9.6E1)-cx1*gx*t48592*t48819*t48796*1.0/(t48799*t48799*t48799)*(1.6E1/ \
                   3.0)+cx2*t48592*t48596*t48796*t48868*(gx*t48763*(1.6E1/3.0)+gamma_bb[index]*t48767*t48796*(3.2E1/3.0) \
                   )+cx2*gamma_bb[index]*t48596*t48884*t48796*t48868*2.0-cx4*gamma_bb[index]*t48592*t48826*t48863*t48797* \
                   (1.28E2/3.0)-cx3*gx*t48592*t48819*t48865*t48796*2.4E1+cx4*gamma_bb[index]*t48592*t48873*t48595*t48893* \
                   t48797*4.0+cx3*gx*t48592*t48597*t48867*t48796*t48888*3.0-cx2*1.0/(t48811*t48811*t48811)*t48592*t48881* \
                   t48596*t48884*t48796*2.0-cx4*t48604*1.0/(t48808*t48808*t48808)*t48595*t48893*t48797*t48878*2.0+cx3* \
                   gamma_bb[index]*gx*t48592*t48597*t48867*t48796*(gx*t48763*8.0+gamma_bb[index]*t48767*t48796*3.2E1+ \
                   gx*t48592*t48819*t48796*2.4E1)+cx3*gamma_bb[index]*gx*t48592*t48872*t48819*t48867*t48796*8.0-cx3*gamma_bb[index]* \
                   gx*1.0/(t48803*t48803*t48803)*t48592*t48872*t48597*t48796*t48888*2.0)+rho_b[index]*t48861*(-t48716+ \
                   t48856+t48627*t48694*(t48716+t48855-t48856-t48854*t48848*t48696*t48849))+c0*pow(rho_b[index],1.0/3.0) \
                   *(cx1*gx*t48591*t48862-cx1*gamma_bb[index]*t48596*t48866*t48796+cx2*gamma_bb[index]*t48864*t48596* \
                   t48796*2.0-cx2*t48592*t48881*t48596*t48796*t48868-cx4*t48604*t48873*t48595*t48797*t48878+cx4*gamma_bb[index]* \
                   t48592*t48863*t48595*t48797*4.0+cx3*gx*t48592*t48865*t48597*t48796*3.0-cx3*gamma_bb[index]*gx*t48592* \
                   t48872*t48597*t48867*t48796)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t49787 = 1.0/pow(rho_b[index],1.0/3.0);
                double t49788 = c*t49787;
                double t49789 = sqrt(t49788);
                double t49790 = pow(t49788,3.0/2.0);
                double t49791 = c*c;
                double t49792 = 1.0/pow(rho_b[index],2.0/3.0);
                double t49793 = 1.0/c0p;
                double t49794 = b1p*t49789;
                double t49795 = b3p*t49790;
                double t49796 = b4p*t49791*t49792;
                double t49797 = b2p*c*t49787;
                double t49798 = t49794+t49795+t49796+t49797;
                double t49799 = 1.0/t49798;
                double t49800 = t49793*t49799*(1.0/2.0);
                double t49801 = t49800+1.0;
                double t49802 = log(t49801);
                double t49803 = a1p*c*t49787;
                double t49804 = t49803+1.0;
                double t49805 = 1.0/pow(rho_b[index],8.0/3.0);
                double t49806 = gamma_bb[index]*gamma_bb[index];
                double t49807 = gcaa*gcaa;
                double t49808 = t49807*t49807;
                double t49809 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t49810 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t49811 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49812 = gamma_bb[index]*gcaa*t49805;
                double t49813 = t49812+1.0;
                double t49814 = gamma_bb[index]*gcaa*t49805*3.0;
                double t49815 = gamma_bb[index]*gcaa*t49811*t49806*t49807;
                double t49816 = t49810*t49806*t49807*3.0;
                double t49817 = t49814+t49815+t49816+1.0;
                double t49818 = t49806*t49806;
                double t49819 = gamma_bb[index]*gcaa*t49805*4.0;
                double t49820 = gamma_bb[index]*gcaa*t49811*t49806*t49807*4.0;
                double t49821 = t49810*t49806*t49807*6.0;
                double t49822 = t49808*t49809*t49818;
                double t49823 = t49820+t49821+t49822+t49819+1.0;
                double t49824 = gamma_bb[index]*gcaa*t49805*2.0;
                double t49825 = t49810*t49806*t49807;
                double t49826 = t49824+t49825+1.0;
                double t49827 = gx*gx;
                double t49828 = t49827*t49827;
                double t49829 = gamma_bb[index]*gx*t49805;
                double t49830 = t49829+1.0;
                double t49831 = gamma_bb[index]*gx*t49805*3.0;
                double t49832 = gamma_bb[index]*gx*t49811*t49806*t49827;
                double t49833 = t49810*t49806*t49827*3.0;
                double t49834 = t49831+t49832+t49833+1.0;
                double t49835 = gamma_bb[index]*gx*t49805*4.0;
                double t49836 = gamma_bb[index]*gx*t49811*t49806*t49827*4.0;
                double t49837 = t49810*t49806*t49827*6.0;
                double t49838 = t49809*t49818*t49828;
                double t49839 = t49835+t49836+t49837+t49838+1.0;
                double t49840 = gamma_bb[index]*gx*t49805*2.0;
                double t49841 = t49810*t49806*t49827;
                double t49842 = t49840+t49841+1.0;
                double t49843 = pow(2.0,1.0/3.0);
                double t49844 = t49843*2.0;
                double t49845 = t49844-2.0;
                double t49846 = two_13*2.0;
                double t49847 = t49846-2.0;
                double t49848 = 1.0/t49847;
                double t49849 = 1.0/c0f;
                double t49850 = b1f*t49789;
                double t49851 = b3f*t49790;
                double t49852 = b4f*t49791*t49792;
                double t49853 = b2f*c*t49787;
                double t49854 = t49850+t49851+t49852+t49853;
                double t49855 = 1.0/t49854;
                double t49856 = t49855*t49849*(1.0/2.0);
                double t49857 = t49856+1.0;
                double t49858 = log(t49857);
                double t49859 = a1f*c*t49787;
                double t49860 = t49859+1.0;
                double t49861 = c0f*t49860*t49858*2.0;
                double t49862 = c0p*t49802*t49804*2.0;
                double t49863 = 1.0/t49813;
                double t49864 = 1.0/t49823;
                double t49865 = 1.0/t49826;
                double t49866 = 1.0/t49817;
                double t49867 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t49868 = 1.0/(t49813*t49813);
                double t49869 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t49870 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t49871 = 1.0/(t49817*t49817);
                double t49872 = 1.0/(t49826*t49826);
                double t49873 = gcaa*t49805*3.0;
                double t49874 = gamma_bb[index]*t49810*t49807*6.0;
                double t49875 = gcaa*t49811*t49806*t49807*3.0;
                double t49876 = t49873+t49874+t49875;
                double t49877 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t49878 = 1.0/(t49823*t49823);
                double t49879 = gcaa*t49805*4.0;
                double t49880 = gamma_bb[index]*t49810*t49807*1.2E1;
                double t49881 = gcaa*t49811*t49806*t49807*1.2E1;
                double t49882 = gamma_bb[index]*t49806*t49808*t49809*4.0;
                double t49883 = t49880+t49881+t49882+t49879;
                double t49884 = gcaa*t49805*2.0;
                double t49885 = gamma_bb[index]*t49810*t49807*2.0;
                double t49886 = t49884+t49885;
                double t49887 = gamma_bb[index]*gcaa*t49870*(1.6E1/3.0);
                double t49888 = t49806*t49807*t49867*(1.6E1/3.0);
                double t49889 = t49887+t49888;
                double t49890 = gamma_bb[index]*gcaa*t49870*8.0;
                double t49891 = gamma_bb[index]*gcaa*t49806*t49807*t49869*8.0;
                double t49892 = t49806*t49807*t49867*1.6E1;
                double t49893 = t49890+t49891+t49892;
                double t49894 = gamma_bb[index]*gcaa*t49870*(3.2E1/3.0);
                double t49895 = gamma_bb[index]*gcaa*t49806*t49807*t49869*3.2E1;
                double t49896 = t49806*t49807*t49867*3.2E1;
                double t49897 = t49808*t49818*t49877*(3.2E1/3.0);
                double t49898 = t49894+t49895+t49896+t49897;
                double t49899 = 1.0/pow(rho_b[index],4.0/3.0);
                double t49900 = 1.0/pow(rho_b[index],5.0/3.0);
                double t49901 = 1.0/sqrt(t49788);
                double t49902 = 1.0/t49801;
                double t49903 = 1.0/(t49798*t49798);
                double t49904 = b4p*t49900*t49791*(2.0/3.0);
                double t49905 = b2p*c*t49899*(1.0/3.0);
                double t49906 = b1p*c*t49901*t49899*(1.0/6.0);
                double t49907 = b3p*c*t49789*t49899*(1.0/2.0);
                double t49908 = t49904+t49905+t49906+t49907;
                double t49909 = t49902*t49804*t49903*t49908;
                double t49910 = ccaa1*gcaa*t49805*t49863;
                double t49911 = ccaa4*gamma_bb[index]*t49806*t49808*t49809*t49864*4.0;
                double t49912 = ccaa2*gamma_bb[index]*t49810*t49807*t49865*2.0;
                double t49913 = ccaa3*gcaa*t49811*t49806*t49807*t49866*3.0;
                double t49914 = t49910+t49911+t49912+t49913-ccaa1*gamma_bb[index]*t49810*t49807*t49868-ccaa2*t49810* \
                   t49806*t49807*t49872*t49886-ccaa4*t49808*t49809*t49818*t49883*t49878-ccaa3*gamma_bb[index]*gcaa*t49811* \
                   t49806*t49807*t49871*t49876;
                double t49915 = 1.0/t49830;
                double t49916 = 1.0/t49839;
                double t49917 = 1.0/t49842;
                double t49918 = 1.0/t49834;
                double t49919 = 1.0/(t49830*t49830);
                double t49920 = 1.0/(t49834*t49834);
                double t49921 = 1.0/(t49842*t49842);
                double t49922 = gx*t49805*3.0;
                double t49923 = gamma_bb[index]*t49810*t49827*6.0;
                double t49924 = gx*t49811*t49806*t49827*3.0;
                double t49925 = t49922+t49923+t49924;
                double t49926 = 1.0/(t49839*t49839);
                double t49927 = gx*t49805*4.0;
                double t49928 = gamma_bb[index]*t49810*t49827*1.2E1;
                double t49929 = gx*t49811*t49806*t49827*1.2E1;
                double t49930 = gamma_bb[index]*t49806*t49809*t49828*4.0;
                double t49931 = t49930+t49927+t49928+t49929;
                double t49932 = gx*t49805*2.0;
                double t49933 = gamma_bb[index]*t49810*t49827*2.0;
                double t49934 = t49932+t49933;
                double t49935 = gamma_bb[index]*gx*t49870*(1.6E1/3.0);
                double t49936 = t49806*t49827*t49867*(1.6E1/3.0);
                double t49937 = t49935+t49936;
                double t49938 = gamma_bb[index]*gx*t49870*8.0;
                double t49939 = gamma_bb[index]*gx*t49806*t49827*t49869*8.0;
                double t49940 = t49806*t49827*t49867*1.6E1;
                double t49941 = t49940+t49938+t49939;
                double t49942 = gamma_bb[index]*gx*t49870*(3.2E1/3.0);
                double t49943 = gamma_bb[index]*gx*t49806*t49827*t49869*3.2E1;
                double t49944 = t49806*t49827*t49867*3.2E1;
                double t49945 = t49818*t49828*t49877*(3.2E1/3.0);
                double t49946 = t49942+t49943+t49944+t49945;
                v_rho_b_gamma_bb_[index] = -t49914*(t49862+t49845*t49848*(t49861-c0p*t49802*t49804*2.0))+rho_b[index]* \
                   t49914*(-t49909+t49845*t49848*(t49909-(t49860*1.0/(t49854*t49854)*(b2f*c*t49899*(1.0/3.0)+b4f*t49900* \
                   t49791*(2.0/3.0)+b1f*c*t49901*t49899*(1.0/6.0)+b3f*c*t49789*t49899*(1.0/2.0)))/t49857+a1f*c*c0f*t49858* \
                   t49899*(2.0/3.0)-a1p*c*c0p*t49802*t49899*(2.0/3.0))+a1p*c*c0p*t49802*t49899*(2.0/3.0))-rho_b[index]* \
                   (t49862+t49845*t49848*(t49861-t49862))*(ccaa1*gcaa*t49870*t49863*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t49807*t49865*t49867*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t49807*t49867*t49868*8.0+ccaa2*t49806*t49807* \
                   t49872*t49867*t49886*(1.6E1/3.0)+ccaa4*t49808*t49818*t49883*t49877*t49878*(3.2E1/3.0)+ccaa4*t49808* \
                   t49809*t49818*t49878*(gcaa*t49870*(3.2E1/3.0)+gamma_bb[index]*t49807*t49867*6.4E1+gamma_bb[index]* \
                   t49806*t49808*t49877*(1.28E2/3.0)+gcaa*t49806*t49807*t49869*9.6E1)-ccaa1*gcaa*1.0/(t49813*t49813*t49813) \
                   *t49806*t49807*t49869*(1.6E1/3.0)+ccaa2*t49810*t49806*t49807*t49872*(gcaa*t49870*(1.6E1/3.0)+gamma_bb[index]* \
                   t49807*t49867*(3.2E1/3.0))+ccaa2*gamma_bb[index]*t49810*t49807*t49872*t49889*2.0-ccaa4*gamma_bb[index]* \
                   t49806*t49808*t49864*t49877*(1.28E2/3.0)-ccaa3*gcaa*t49806*t49807*t49866*t49869*2.4E1+ccaa4*gamma_bb[index]* \
                   t49806*t49808*t49809*t49878*t49898*4.0+ccaa3*gcaa*t49811*t49806*t49807*t49871*t49893*3.0-ccaa2*t49810* \
                   t49806*t49807*1.0/(t49826*t49826*t49826)*t49886*t49889*2.0-ccaa4*1.0/(t49823*t49823*t49823)*t49808* \
                   t49809*t49818*t49883*t49898*2.0+ccaa3*gamma_bb[index]*gcaa*t49811*t49806*t49807*t49871*(gcaa*t49870* \
                   8.0+gamma_bb[index]*t49807*t49867*3.2E1+gcaa*t49806*t49807*t49869*2.4E1)+ccaa3*gamma_bb[index]*gcaa* \
                   t49806*t49807*t49871*t49876*t49869*8.0-ccaa3*gamma_bb[index]*gcaa*t49811*t49806*t49807*1.0/(t49817* \
                   t49817*t49817)*t49893*t49876*2.0)+c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t49870*t49915*(-8.0/3.0)+cx1* \
                   gamma_bb[index]*t49827*t49919*t49867*8.0-cx2*gamma_bb[index]*t49827*t49917*t49867*(3.2E1/3.0)+cx2* \
                   t49921*t49806*t49934*t49827*t49867*(1.6E1/3.0)+cx4*t49931*t49818*t49926*t49828*t49877*(3.2E1/3.0)+ \
                   cx4*t49809*t49818*t49926*t49828*(gx*t49870*(3.2E1/3.0)+gamma_bb[index]*t49827*t49867*6.4E1+gamma_bb[index]* \
                   t49806*t49828*t49877*(1.28E2/3.0)+gx*t49806*t49827*t49869*9.6E1)-cx1*gx*1.0/(t49830*t49830*t49830) \
                   *t49806*t49827*t49869*(1.6E1/3.0)+cx2*t49810*t49921*t49806*t49827*(gx*t49870*(1.6E1/3.0)+gamma_bb[index]* \
                   t49827*t49867*(3.2E1/3.0))+cx2*gamma_bb[index]*t49810*t49921*t49827*t49937*2.0-cx4*gamma_bb[index]* \
                   t49806*t49916*t49828*t49877*(1.28E2/3.0)-cx3*gx*t49806*t49827*t49918*t49869*2.4E1+cx4*gamma_bb[index]* \
                   t49806*t49809*t49926*t49828*t49946*4.0+cx3*gx*t49811*t49920*t49806*t49941*t49827*3.0-cx2*t49810*t49806* \
                   1.0/(t49842*t49842*t49842)*t49934*t49827*t49937*2.0-cx4*t49931*t49809*t49818*t49828*t49946*1.0/(t49839* \
                   t49839*t49839)*2.0+cx3*gamma_bb[index]*gx*t49811*t49920*t49806*t49827*(gx*t49870*8.0+gamma_bb[index]* \
                   t49827*t49867*3.2E1+gx*t49806*t49827*t49869*2.4E1)+cx3*gamma_bb[index]*gx*t49920*t49806*t49925*t49827* \
                   t49869*8.0-cx3*gamma_bb[index]*gx*t49811*t49806*t49941*1.0/(t49834*t49834*t49834)*t49925*t49827*2.0) \
                   +c0*pow(rho_b[index],1.0/3.0)*(cx1*gx*t49805*t49915-cx1*gamma_bb[index]*t49810*t49827*t49919+cx2*gamma_bb[index]* \
                   t49810*t49827*t49917*2.0-cx2*t49810*t49921*t49806*t49934*t49827-cx4*t49931*t49809*t49818*t49926*t49828+ \
                   cx4*gamma_bb[index]*t49806*t49916*t49809*t49828*4.0+cx3*gx*t49811*t49806*t49827*t49918*3.0-cx3*gamma_bb[index]* \
                   gx*t49811*t49920*t49806*t49925*t49827)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t48895 = 1.0/pow(rho_a[index],1.0/3.0);
                double t48896 = c*t48895;
                double t48897 = sqrt(t48896);
                double t48898 = pow(t48896,3.0/2.0);
                double t48899 = c*c;
                double t48900 = 1.0/pow(rho_a[index],2.0/3.0);
                double t48901 = 1.0/c0p;
                double t48902 = b1p*t48897;
                double t48903 = b3p*t48898;
                double t48904 = b4p*t48900*t48899;
                double t48905 = b2p*c*t48895;
                double t48906 = t48902+t48903+t48904+t48905;
                double t48907 = 1.0/t48906;
                double t48908 = t48901*t48907*(1.0/2.0);
                double t48909 = t48908+1.0;
                double t48910 = log(t48909);
                double t48911 = a1p*c*t48895;
                double t48912 = t48911+1.0;
                double t48913 = pow(2.0,1.0/3.0);
                double t48914 = t48913*2.0;
                double t48915 = t48914-2.0;
                double t48916 = two_13*2.0;
                double t48917 = t48916-2.0;
                double t48918 = 1.0/t48917;
                double t48919 = 1.0/c0f;
                double t48920 = 1.0/pow(rho_b[index],1.0/3.0);
                double t48921 = c*t48920;
                double t48922 = sqrt(t48921);
                double t48923 = pow(t48921,3.0/2.0);
                double t48924 = 1.0/pow(rho_b[index],2.0/3.0);
                double t48925 = b1p*t48922;
                double t48926 = b3p*t48923;
                double t48927 = b4p*t48924*t48899;
                double t48928 = b2p*c*t48920;
                double t48929 = t48925+t48926+t48927+t48928;
                double t48930 = 1.0/t48929;
                double t48931 = t48901*t48930*(1.0/2.0);
                double t48932 = t48931+1.0;
                double t48933 = log(t48932);
                double t48934 = a1p*c*t48920;
                double t48935 = t48934+1.0;
                double t48936 = c0p*t48933*t48935*2.0;
                double t48937 = rho_a[index]+rho_b[index];
                double t48938 = 1.0/pow(t48937,1.0/3.0);
                double t48939 = c*t48938;
                double t48940 = sqrt(t48939);
                double t48941 = pow(t48939,3.0/2.0);
                double t48942 = 1.0/pow(t48937,2.0/3.0);
                double t48943 = b1p*t48940;
                double t48944 = b3p*t48941;
                double t48945 = b4p*t48942*t48899;
                double t48946 = b2p*c*t48938;
                double t48947 = t48943+t48944+t48945+t48946;
                double t48948 = 1.0/t48947;
                double t48949 = t48901*t48948*(1.0/2.0);
                double t48950 = t48949+1.0;
                double t48951 = log(t48950);
                double t48952 = a1p*c*t48938;
                double t48953 = t48952+1.0;
                double t48954 = c0p*t48951*t48953*2.0;
                double t48955 = rho_a[index]-rho_b[index];
                double t48956 = t48955*t48955;
                double t48957 = 1.0/t48937;
                double t48958 = t48955*t48957;
                double t48959 = 1.0/(t48937*t48937*t48937*t48937);
                double t48960 = t48956*t48956;
                double t48961 = t48958+1.0;
                double t48962 = pow(t48961,4.0/3.0);
                double t48963 = -t48958+1.0;
                double t48964 = pow(t48963,4.0/3.0);
                double t48965 = t48962+t48964-2.0;
                double t48966 = gcab*gcab;
                double t48967 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t48968 = 1.0/pow(rho_a[index],8.0/3.0);
                double t48969 = gamma_aa[index]*t48968*(1.0/2.0);
                double t48970 = 1.0/pow(rho_b[index],8.0/3.0);
                double t48971 = gamma_bb[index]*t48970*(1.0/2.0);
                double t48972 = t48971+t48969;
                double t48973 = gcab*t48972;
                double t48974 = t48973+1.0;
                double t48975 = t48972*t48972;
                double t48976 = t48966*t48975;
                double t48977 = gcab*t48972*2.0;
                double t48978 = t48976+t48977+1.0;
                double t48979 = t48966*t48966;
                double t48996 = gcab*t48968*2.0;
                double t48997 = t48972*t48966*t48968*6.0;
                double t48998 = gcab*t48966*t48975*t48968*6.0;
                double t48999 = t48972*t48975*t48968*t48979*2.0;
                double t48980 = t48996+t48997+t48998+t48999;
                double t48981 = t48975*t48975;
                double t49001 = gcab*t48968*(3.0/2.0);
                double t49002 = t48972*t48966*t48968*3.0;
                double t49003 = gcab*t48966*t48975*t48968*(3.0/2.0);
                double t48982 = t49001+t49002+t49003;
                double t48983 = t48966*t48975*3.0;
                double t48984 = gcab*t48972*t48966*t48975;
                double t48985 = gcab*t48972*3.0;
                double t48986 = t48983+t48984+t48985+1.0;
                double t48993 = gcab*t48968;
                double t48994 = t48972*t48966*t48968;
                double t48987 = t48993+t48994;
                double t48988 = t48966*t48975*6.0;
                double t48989 = gcab*t48972*t48966*t48975*4.0;
                double t48990 = t48981*t48979;
                double t48991 = gcab*t48972*4.0;
                double t48992 = t48990+t48991+t48988+t48989+1.0;
                double t48995 = 1.0/(t48978*t48978);
                double t49000 = 1.0/(t48992*t48992);
                double t49004 = 1.0/(t48986*t48986);
                double t49005 = gx*gx;
                double t49006 = gamma_aa[index]*gamma_aa[index];
                double t49007 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t49008 = t49005*t49005;
                double t49009 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t49010 = gamma_aa[index]*gx*t48968;
                double t49011 = t49010+1.0;
                double t49012 = gamma_aa[index]*gx*t48968*2.0;
                double t49013 = t48967*t49005*t49006;
                double t49014 = t49012+t49013+1.0;
                double t49015 = gamma_aa[index]*gx*t48968*3.0;
                double t49016 = gamma_aa[index]*gx*t49005*t49006*t49007;
                double t49017 = t48967*t49005*t49006*3.0;
                double t49018 = t49015+t49016+t49017+1.0;
                double t49019 = t49006*t49006;
                double t49035 = gx*t48968*4.0;
                double t49036 = gamma_aa[index]*t48967*t49005*1.2E1;
                double t49037 = gx*t49005*t49006*t49007*1.2E1;
                double t49038 = gamma_aa[index]*t49006*t49008*t49009*4.0;
                double t49020 = t49035+t49036+t49037+t49038;
                double t49021 = gamma_aa[index]*gx*t48968*4.0;
                double t49022 = gamma_aa[index]*gx*t49005*t49006*t49007*4.0;
                double t49023 = t48967*t49005*t49006*6.0;
                double t49024 = t49008*t49009*t49019;
                double t49025 = t49021+t49022+t49023+t49024+1.0;
                double t49028 = gx*t48968*2.0;
                double t49029 = gamma_aa[index]*t48967*t49005*2.0;
                double t49026 = t49028+t49029;
                double t49027 = 1.0/(t49018*t49018);
                double t49030 = 1.0/(t49014*t49014);
                double t49031 = gx*t48968*3.0;
                double t49032 = gamma_aa[index]*t48967*t49005*6.0;
                double t49033 = gx*t49005*t49006*t49007*3.0;
                double t49034 = t49031+t49032+t49033;
                double t49039 = 1.0/(t49025*t49025);
                double t49040 = b1f*t48897;
                double t49041 = b3f*t48898;
                double t49042 = b4f*t48900*t48899;
                double t49043 = b2f*c*t48895;
                double t49044 = t49040+t49041+t49042+t49043;
                double t49045 = 1.0/t49044;
                double t49046 = t48919*t49045*(1.0/2.0);
                double t49047 = t49046+1.0;
                double t49048 = log(t49047);
                double t49049 = a1f*c*t48895;
                double t49050 = t49049+1.0;
                double t49051 = c0f*t49050*t49048*2.0;
                double t49052 = c0p*t48910*t48912*2.0;
                double t49053 = gcaa*gcaa;
                double t49054 = t49053*t49053;
                double t49055 = gamma_aa[index]*gcaa*t48968;
                double t49056 = t49055+1.0;
                double t49057 = gamma_aa[index]*gcaa*t48968*2.0;
                double t49058 = t48967*t49006*t49053;
                double t49059 = t49057+t49058+1.0;
                double t49060 = gamma_aa[index]*gcaa*t48968*3.0;
                double t49061 = gamma_aa[index]*gcaa*t49006*t49007*t49053;
                double t49062 = t48967*t49006*t49053*3.0;
                double t49063 = t49060+t49061+t49062+1.0;
                double t49079 = gcaa*t48968*4.0;
                double t49080 = gamma_aa[index]*t48967*t49053*1.2E1;
                double t49081 = gcaa*t49006*t49007*t49053*1.2E1;
                double t49082 = gamma_aa[index]*t49006*t49009*t49054*4.0;
                double t49064 = t49080+t49081+t49082+t49079;
                double t49065 = gamma_aa[index]*gcaa*t48968*4.0;
                double t49066 = gamma_aa[index]*gcaa*t49006*t49007*t49053*4.0;
                double t49067 = t48967*t49006*t49053*6.0;
                double t49068 = t49009*t49054*t49019;
                double t49069 = t49065+t49066+t49067+t49068+1.0;
                double t49072 = gcaa*t48968*2.0;
                double t49073 = gamma_aa[index]*t48967*t49053*2.0;
                double t49070 = t49072+t49073;
                double t49071 = 1.0/(t49063*t49063);
                double t49074 = 1.0/(t49059*t49059);
                double t49075 = gcaa*t48968*3.0;
                double t49076 = gamma_aa[index]*t48967*t49053*6.0;
                double t49077 = gcaa*t49006*t49007*t49053*3.0;
                double t49078 = t49075+t49076+t49077;
                double t49083 = 1.0/(t49069*t49069);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t49052+t48915*t48918*(t49051-c0p*t48910*t48912*2.0) \
                   )+rho_b[index]*(t48936-t48915*t48918*(t48936-c0f*log((t48919*(1.0/2.0))/(b1f*t48922+b3f*t48923+b2f* \
                   c*t48920+b4f*t48924*t48899)+1.0)*(a1f*c*t48920+1.0)*2.0))-t48937*(t48954-t48960*t48918*t48965*t48959* \
                   (t48954-c0f*log((t48919*(1.0/2.0))/(b1f*t48940+b3f*t48941+b2f*c*t48938+b4f*t48942*t48899)+1.0)*(a1f* \
                   c*t48938+1.0)*2.0)+(Aa*t48918*t48965*log((1.0/2.0)/(Aa*(b1a*t48940+b3a*t48941+b2a*c*t48938+b4a*t48942* \
                   t48899))+1.0)*(t48960*t48959-1.0)*(a1a*c*t48938+1.0)*2.0)/d2fz0))*(ccab1*1.0/(t48974*t48974)*t48966* \
                   t48967*(1.0/2.0)-(ccab2*t48966*t48967*(1.0/2.0))/t48978-ccab4*(t48980*t48980)*t48981*1.0/(t48992*t48992* \
                   t48992)*t48979*2.0-ccab2*t48966*t48975*1.0/(t48978*t48978*t48978)*(t48987*t48987)*2.0+ccab2*t48975* \
                   t48967*t48995*t48979*(1.0/2.0)+ccab4*t48981*t48979*t49000*(t48966*t48967*3.0+t48975*t48967*t48979* \
                   3.0+gcab*t48972*t48966*t48967*6.0)-(ccab4*t48975*t48967*t48979*3.0)/t48992+ccab2*t48972*t48966*t48968* \
                   t48995*t48987*2.0-ccab1*gcab*t48972*1.0/(t48974*t48974*t48974)*t48966*t48967*(1.0/2.0)-(ccab3*gcab* \
                   t48972*t48966*t48967*(3.0/2.0))/t48986-ccab3*gcab*t48972*(t48982*t48982)*t48966*t48975*1.0/(t48986* \
                   t48986*t48986)*2.0+ccab3*gcab*t48982*t48966*t48975*t48968*t49004*3.0+ccab4*t48980*t48972*t48975*t48968* \
                   t48979*t49000*4.0+ccab3*gcab*t48972*t48966*t48975*t49004*(t48966*t48967*(3.0/2.0)+gcab*t48972*t48966* \
                   t48967*(3.0/2.0)))+rho_a[index]*(t49052+t48915*t48918*(t49051-t49052))*(ccaa1*t48967*t49053*1.0/(t49056* \
                   t49056)*2.0-(ccaa2*t48967*t49053*2.0)/t49059+ccaa2*t49006*t49009*t49054*t49074*2.0-(ccaa4*t49006*t49009* \
                   t49054*1.2E1)/t49069+ccaa4*t49009*t49054*t49019*t49083*(t48967*t49053*1.2E1+t49006*t49009*t49054*1.2E1+ \
                   gamma_aa[index]*gcaa*t49007*t49053*2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t49007*t49053*6.0)/t49063-ccaa1* \
                   gamma_aa[index]*gcaa*t49007*t49053*1.0/(t49056*t49056*t49056)*2.0-ccaa2*t48967*t49006*(t49070*t49070) \
                   *t49053*1.0/(t49059*t49059*t49059)*2.0-ccaa4*t49009*t49054*t49019*(t49064*t49064)*1.0/(t49069*t49069* \
                   t49069)*2.0+ccaa2*gamma_aa[index]*t48967*t49070*t49053*t49074*4.0+ccaa4*gamma_aa[index]*t49006*t49009* \
                   t49054*t49064*t49083*8.0+ccaa3*gcaa*t49006*t49007*t49053*t49071*t49078*6.0+ccaa3*gamma_aa[index]*gcaa* \
                   t49006*t49007*t49053*t49071*(t48967*t49053*6.0+gamma_aa[index]*gcaa*t49007*t49053*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*t49006*t49007*t49053*1.0/(t49063*t49063*t49063)*(t49078*t49078)*2.0)-c0*pow(rho_a[index],4.0/ \
                   3.0)*(cx1*t48967*1.0/(t49011*t49011)*t49005*2.0-(cx2*t48967*t49005*2.0)/t49014+cx2*t49030*t49006*t49008* \
                   t49009*2.0-(cx4*t49006*t49008*t49009*1.2E1)/t49025+cx4*t49008*t49009*t49019*t49039*(t48967*t49005* \
                   1.2E1+t49006*t49008*t49009*1.2E1+gamma_aa[index]*gx*t49005*t49007*2.4E1)-cx1*gamma_aa[index]*gx*1.0/ \
                   (t49011*t49011*t49011)*t49005*t49007*2.0-(cx3*gamma_aa[index]*gx*t49005*t49007*6.0)/t49018-cx2*t48967* \
                   t49005*1.0/(t49014*t49014*t49014)*t49006*(t49026*t49026)*2.0-cx4*(t49020*t49020)*1.0/(t49025*t49025* \
                   t49025)*t49008*t49009*t49019*2.0+cx2*gamma_aa[index]*t48967*t49030*t49005*t49026*4.0+cx4*gamma_aa[index]* \
                   t49020*t49006*t49008*t49009*t49039*8.0+cx3*gx*t49005*t49006*t49007*t49034*t49027*6.0+cx3*gamma_aa[index]* \
                   gx*t49005*t49006*t49007*t49027*(t48967*t49005*6.0+gamma_aa[index]*gx*t49005*t49007*6.0)-cx3*gamma_aa[index]* \
                   gx*t49005*t49006*t49007*(t49034*t49034)*1.0/(t49018*t49018*t49018)*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t50587 = gx*gx;
                double t50588 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t50589 = 1.0/pow(rho_a[index],8.0/3.0);
                double t50590 = gamma_aa[index]*gamma_aa[index];
                double t50591 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t50592 = t50587*t50587;
                double t50593 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t50594 = gamma_aa[index]*gx*t50589;
                double t50595 = t50594+1.0;
                double t50596 = gamma_aa[index]*gx*t50589*2.0;
                double t50597 = t50590*t50587*t50588;
                double t50598 = t50596+t50597+1.0;
                double t50599 = gamma_aa[index]*gx*t50589*3.0;
                double t50600 = gamma_aa[index]*gx*t50590*t50591*t50587;
                double t50601 = t50590*t50587*t50588*3.0;
                double t50602 = t50600+t50601+t50599+1.0;
                double t50603 = t50590*t50590;
                double t50619 = gx*t50589*4.0;
                double t50620 = gamma_aa[index]*t50587*t50588*1.2E1;
                double t50621 = gx*t50590*t50591*t50587*1.2E1;
                double t50622 = gamma_aa[index]*t50590*t50592*t50593*4.0;
                double t50604 = t50620+t50621+t50622+t50619;
                double t50605 = gamma_aa[index]*gx*t50589*4.0;
                double t50606 = gamma_aa[index]*gx*t50590*t50591*t50587*4.0;
                double t50607 = t50590*t50587*t50588*6.0;
                double t50608 = t50603*t50592*t50593;
                double t50609 = t50605+t50606+t50607+t50608+1.0;
                double t50612 = gx*t50589*2.0;
                double t50613 = gamma_aa[index]*t50587*t50588*2.0;
                double t50610 = t50612+t50613;
                double t50611 = 1.0/(t50602*t50602);
                double t50614 = 1.0/(t50598*t50598);
                double t50615 = gx*t50589*3.0;
                double t50616 = gamma_aa[index]*t50587*t50588*6.0;
                double t50617 = gx*t50590*t50591*t50587*3.0;
                double t50618 = t50615+t50616+t50617;
                double t50623 = 1.0/(t50609*t50609);
                double t50624 = 1.0/pow(rho_a[index],1.0/3.0);
                double t50625 = c*t50624;
                double t50626 = sqrt(t50625);
                double t50627 = pow(t50625,3.0/2.0);
                double t50628 = c*c;
                double t50629 = 1.0/pow(rho_a[index],2.0/3.0);
                double t50630 = 1.0/c0p;
                double t50631 = b1p*t50626;
                double t50632 = b3p*t50627;
                double t50633 = b4p*t50628*t50629;
                double t50634 = b2p*c*t50624;
                double t50635 = t50631+t50632+t50633+t50634;
                double t50636 = 1.0/t50635;
                double t50637 = t50630*t50636*(1.0/2.0);
                double t50638 = t50637+1.0;
                double t50639 = log(t50638);
                double t50640 = a1p*c*t50624;
                double t50641 = t50640+1.0;
                double t50642 = gcaa*gcaa;
                double t50643 = t50642*t50642;
                double t50644 = gamma_aa[index]*gcaa*t50589;
                double t50645 = t50644+1.0;
                double t50646 = gamma_aa[index]*gcaa*t50589*2.0;
                double t50647 = t50642*t50590*t50588;
                double t50648 = t50646+t50647+1.0;
                double t50649 = gamma_aa[index]*gcaa*t50589*3.0;
                double t50650 = gamma_aa[index]*gcaa*t50642*t50590*t50591;
                double t50651 = t50642*t50590*t50588*3.0;
                double t50652 = t50650+t50651+t50649+1.0;
                double t50668 = gcaa*t50589*4.0;
                double t50669 = gamma_aa[index]*t50642*t50588*1.2E1;
                double t50670 = gcaa*t50642*t50590*t50591*1.2E1;
                double t50671 = gamma_aa[index]*t50643*t50590*t50593*4.0;
                double t50653 = t50670+t50671+t50668+t50669;
                double t50654 = gamma_aa[index]*gcaa*t50589*4.0;
                double t50655 = gamma_aa[index]*gcaa*t50642*t50590*t50591*4.0;
                double t50656 = t50642*t50590*t50588*6.0;
                double t50657 = t50603*t50643*t50593;
                double t50658 = t50654+t50655+t50656+t50657+1.0;
                double t50661 = gcaa*t50589*2.0;
                double t50662 = gamma_aa[index]*t50642*t50588*2.0;
                double t50659 = t50661+t50662;
                double t50660 = 1.0/(t50652*t50652);
                double t50663 = 1.0/(t50648*t50648);
                double t50664 = gcaa*t50589*3.0;
                double t50665 = gamma_aa[index]*t50642*t50588*6.0;
                double t50666 = gcaa*t50642*t50590*t50591*3.0;
                double t50667 = t50664+t50665+t50666;
                double t50672 = 1.0/(t50658*t50658);
                v_gamma_aa_gamma_aa_[index] = -c0*pow(rho_a[index],4.0/3.0)*(cx1*1.0/(t50595*t50595)*t50587*t50588* \
                   2.0-(cx2*t50587*t50588*2.0)/t50598+cx2*t50614*t50590*t50592*t50593*2.0-(cx4*t50590*t50592*t50593*1.2E1) \
                   /t50609+cx4*t50603*t50623*t50592*t50593*(t50587*t50588*1.2E1+t50590*t50592*t50593*1.2E1+gamma_aa[index]* \
                   gx*t50591*t50587*2.4E1)-cx1*gamma_aa[index]*gx*t50591*1.0/(t50595*t50595*t50595)*t50587*2.0-(cx3*gamma_aa[index]* \
                   gx*t50591*t50587*6.0)/t50602-cx2*(t50610*t50610)*t50590*t50587*t50588*1.0/(t50598*t50598*t50598)*2.0- \
                   cx4*t50603*(t50604*t50604)*1.0/(t50609*t50609*t50609)*t50592*t50593*2.0+cx2*gamma_aa[index]*t50610* \
                   t50614*t50587*t50588*4.0+cx4*gamma_aa[index]*t50604*t50623*t50590*t50592*t50593*8.0+cx3*gx*t50611* \
                   t50590*t50591*t50618*t50587*6.0+cx3*gamma_aa[index]*gx*t50611*t50590*t50591*t50587*(t50587*t50588* \
                   6.0+gamma_aa[index]*gx*t50591*t50587*6.0)-cx3*gamma_aa[index]*gx*1.0/(t50602*t50602*t50602)*t50590* \
                   t50591*(t50618*t50618)*t50587*2.0)+rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t50626+b3f*t50627+b2f*c*t50624+b4f*t50628*t50629))+1.0)*(a1f*c*t50624+1.0)*2.0-c0p*t50641*t50639* \
                   2.0))/(two_13*2.0-2.0)+c0p*t50641*t50639*2.0)*(ccaa1*t50642*1.0/(t50645*t50645)*t50588*2.0-(ccaa2* \
                   t50642*t50588*2.0)/t50648+ccaa2*t50643*t50590*t50663*t50593*2.0-(ccaa4*t50643*t50590*t50593*1.2E1) \
                   /t50658+ccaa4*t50603*t50643*t50672*t50593*(t50642*t50588*1.2E1+t50643*t50590*t50593*1.2E1+gamma_aa[index]* \
                   gcaa*t50642*t50591*2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t50642*t50591*6.0)/t50652-ccaa1*gamma_aa[index]* \
                   gcaa*t50642*t50591*1.0/(t50645*t50645*t50645)*2.0-ccaa4*t50603*t50643*(t50653*t50653)*t50593*1.0/(t50658* \
                   t50658*t50658)*2.0-ccaa2*t50642*t50590*1.0/(t50648*t50648*t50648)*(t50659*t50659)*t50588*2.0+ccaa2* \
                   gamma_aa[index]*t50642*t50663*t50659*t50588*4.0+ccaa4*gamma_aa[index]*t50643*t50590*t50653*t50672* \
                   t50593*8.0+ccaa3*gcaa*t50642*t50660*t50590*t50591*t50667*6.0+ccaa3*gamma_aa[index]*gcaa*t50642*t50660* \
                   t50590*t50591*(t50642*t50588*6.0+gamma_aa[index]*gcaa*t50642*t50591*6.0)-ccaa3*gamma_aa[index]*gcaa* \
                   t50642*1.0/(t50652*t50652*t50652)*t50590*t50591*(t50667*t50667)*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t49086 = 1.0/pow(rho_a[index],1.0/3.0);
                double t49087 = c*t49086;
                double t49088 = sqrt(t49087);
                double t49089 = pow(t49087,3.0/2.0);
                double t49090 = c*c;
                double t49091 = 1.0/pow(rho_a[index],2.0/3.0);
                double t49092 = 1.0/c0p;
                double t49093 = b1p*t49088;
                double t49094 = b3p*t49089;
                double t49095 = b4p*t49090*t49091;
                double t49096 = b2p*c*t49086;
                double t49097 = t49093+t49094+t49095+t49096;
                double t49098 = 1.0/t49097;
                double t49099 = t49092*t49098*(1.0/2.0);
                double t49100 = t49099+1.0;
                double t49101 = log(t49100);
                double t49102 = a1p*c*t49086;
                double t49103 = t49102+1.0;
                double t49104 = pow(2.0,1.0/3.0);
                double t49105 = t49104*2.0;
                double t49106 = t49105-2.0;
                double t49107 = two_13*2.0;
                double t49108 = t49107-2.0;
                double t49109 = 1.0/t49108;
                double t49110 = 1.0/c0f;
                double t49111 = 1.0/pow(rho_b[index],1.0/3.0);
                double t49112 = c*t49111;
                double t49113 = sqrt(t49112);
                double t49114 = pow(t49112,3.0/2.0);
                double t49115 = 1.0/pow(rho_b[index],2.0/3.0);
                double t49116 = b1p*t49113;
                double t49117 = b3p*t49114;
                double t49118 = b4p*t49115*t49090;
                double t49119 = b2p*c*t49111;
                double t49120 = t49116+t49117+t49118+t49119;
                double t49121 = 1.0/t49120;
                double t49122 = t49121*t49092*(1.0/2.0);
                double t49123 = t49122+1.0;
                double t49124 = log(t49123);
                double t49125 = a1p*c*t49111;
                double t49126 = t49125+1.0;
                double t49127 = c0p*t49124*t49126*2.0;
                double t49128 = rho_a[index]+rho_b[index];
                double t49129 = 1.0/pow(t49128,1.0/3.0);
                double t49130 = c*t49129;
                double t49131 = sqrt(t49130);
                double t49132 = pow(t49130,3.0/2.0);
                double t49133 = 1.0/pow(t49128,2.0/3.0);
                double t49134 = b1p*t49131;
                double t49135 = b3p*t49132;
                double t49136 = b4p*t49133*t49090;
                double t49137 = b2p*c*t49129;
                double t49138 = t49134+t49135+t49136+t49137;
                double t49139 = 1.0/t49138;
                double t49140 = t49092*t49139*(1.0/2.0);
                double t49141 = t49140+1.0;
                double t49142 = log(t49141);
                double t49143 = a1p*c*t49129;
                double t49144 = t49143+1.0;
                double t49145 = c0p*t49142*t49144*2.0;
                double t49146 = rho_a[index]-rho_b[index];
                double t49147 = t49146*t49146;
                double t49148 = 1.0/t49128;
                double t49149 = t49146*t49148;
                double t49150 = 1.0/(t49128*t49128*t49128*t49128);
                double t49151 = t49147*t49147;
                double t49152 = t49149+1.0;
                double t49153 = pow(t49152,4.0/3.0);
                double t49154 = -t49149+1.0;
                double t49155 = pow(t49154,4.0/3.0);
                double t49156 = t49153+t49155-2.0;
                double t49157 = gcab*gcab;
                double t49160 = 1.0/pow(rho_a[index],8.0/3.0);
                double t49161 = 1.0/pow(rho_b[index],8.0/3.0);
                double t49162 = gamma_aa[index]*t49160*(1.0/2.0);
                double t49163 = gamma_bb[index]*t49161*(1.0/2.0);
                double t49158 = t49162+t49163;
                double t49159 = t49158*t49158;
                double t49164 = t49157*t49157;
                double t49165 = t49159*t49159;
                double t49166 = t49157*t49159*3.0;
                double t49167 = gcab*t49157*t49158*t49159;
                double t49168 = gcab*t49158*3.0;
                double t49169 = t49166+t49167+t49168+1.0;
                double t49170 = t49157*t49159;
                double t49171 = gcab*t49158*2.0;
                double t49172 = t49170+t49171+1.0;
                double t49173 = t49157*t49159*6.0;
                double t49174 = gcab*t49157*t49158*t49159*4.0;
                double t49175 = t49164*t49165;
                double t49176 = gcab*t49158*4.0;
                double t49177 = t49173+t49174+t49175+t49176+1.0;
                double t49178 = 1.0/(t49172*t49172);
                double t49179 = gcab*t49160;
                double t49180 = t49160*t49157*t49158;
                double t49181 = t49180+t49179;
                double t49182 = gcab*t49161;
                double t49183 = t49161*t49157*t49158;
                double t49184 = t49182+t49183;
                double t49185 = gcab*t49158;
                double t49186 = t49185+1.0;
                double t49187 = gcab*t49160*2.0;
                double t49188 = t49160*t49157*t49158*6.0;
                double t49189 = gcab*t49160*t49157*t49159*6.0;
                double t49190 = t49160*t49164*t49158*t49159*2.0;
                double t49191 = t49190+t49187+t49188+t49189;
                double t49192 = 1.0/(t49177*t49177);
                double t49193 = gcab*t49161*2.0;
                double t49194 = t49161*t49157*t49158*6.0;
                double t49195 = gcab*t49161*t49157*t49159*6.0;
                double t49196 = t49161*t49164*t49158*t49159*2.0;
                double t49197 = t49193+t49194+t49195+t49196;
                double t49198 = gcab*t49160*(3.0/2.0);
                double t49199 = t49160*t49157*t49158*3.0;
                double t49200 = gcab*t49160*t49157*t49159*(3.0/2.0);
                double t49201 = t49200+t49198+t49199;
                double t49202 = 1.0/(t49169*t49169);
                double t49203 = gcab*t49161*(3.0/2.0);
                double t49204 = t49161*t49157*t49158*3.0;
                double t49205 = gcab*t49161*t49157*t49159*(3.0/2.0);
                double t49206 = t49203+t49204+t49205;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t49127-t49106*t49109*(t49127-c0f*log((t49110*(1.0/2.0) \
                   )/(b1f*t49113+b3f*t49114+b2f*c*t49111+b4f*t49115*t49090)+1.0)*(a1f*c*t49111+1.0)*2.0))+t49128*(t49145- \
                   t49150*t49151*t49109*t49156*(t49145-c0f*log((t49110*(1.0/2.0))/(b1f*t49131+b3f*t49132+b2f*c*t49129+ \
                   b4f*t49133*t49090)+1.0)*(a1f*c*t49129+1.0)*2.0)+(Aa*t49109*t49156*log((1.0/2.0)/(Aa*(b1a*t49131+b3a* \
                   t49132+b2a*c*t49129+b4a*t49133*t49090))+1.0)*(t49150*t49151-1.0)*(a1a*c*t49129+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t49106*t49109*(c0p*t49101*t49103*2.0-c0f*log((t49110*(1.0/2.0))/(b1f*t49088+b3f*t49089+b2f*c*t49086+ \
                   b4f*t49090*t49091)+1.0)*(a1f*c*t49086+1.0)*2.0)-c0p*t49101*t49103*2.0))*(ccab4*t49164*t49165*t49192* \
                   (t49160*t49161*t49157*3.0+t49160*t49161*t49164*t49159*3.0+gcab*t49160*t49161*t49157*t49158*6.0)-(ccab2* \
                   t49160*t49161*t49157*(1.0/2.0))/t49172+ccab1*t49160*t49161*t49157*1.0/(t49186*t49186)*(1.0/2.0)+ccab2* \
                   t49160*t49161*t49164*t49159*t49178*(1.0/2.0)+ccab2*t49161*t49181*t49157*t49158*t49178+ccab2*t49160* \
                   t49157*t49184*t49158*t49178-(ccab4*t49160*t49161*t49164*t49159*3.0)/t49177-ccab2*1.0/(t49172*t49172* \
                   t49172)*t49181*t49157*t49184*t49159*2.0-ccab4*t49164*t49191*t49165*1.0/(t49177*t49177*t49177)*t49197* \
                   2.0+ccab3*gcab*t49201*t49202*t49161*t49157*t49159*(3.0/2.0)+ccab3*gcab*t49202*t49160*t49206*t49157* \
                   t49159*(3.0/2.0)+ccab4*t49161*t49164*t49191*t49192*t49158*t49159*2.0+ccab4*t49160*t49164*t49192*t49158* \
                   t49159*t49197*2.0+ccab3*gcab*t49202*t49157*t49158*t49159*(t49160*t49161*t49157*(3.0/2.0)+gcab*t49160* \
                   t49161*t49157*t49158*(3.0/2.0))-ccab1*gcab*t49160*t49161*t49157*t49158*1.0/(t49186*t49186*t49186)* \
                   (1.0/2.0)-(ccab3*gcab*t49160*t49161*t49157*t49158*(3.0/2.0))/t49169-ccab3*gcab*t49201*t49206*t49157* \
                   t49158*t49159*1.0/(t49169*t49169*t49169)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t49210 = 1.0/pow(rho_a[index],1.0/3.0);
                double t49211 = c*t49210;
                double t49212 = sqrt(t49211);
                double t49213 = pow(t49211,3.0/2.0);
                double t49214 = c*c;
                double t49215 = 1.0/pow(rho_a[index],2.0/3.0);
                double t49216 = 1.0/c0p;
                double t49217 = b1p*t49212;
                double t49218 = b3p*t49213;
                double t49219 = b4p*t49214*t49215;
                double t49220 = b2p*c*t49210;
                double t49221 = t49220+t49217+t49218+t49219;
                double t49222 = 1.0/t49221;
                double t49223 = t49222*t49216*(1.0/2.0);
                double t49224 = t49223+1.0;
                double t49225 = log(t49224);
                double t49226 = a1p*c*t49210;
                double t49227 = t49226+1.0;
                double t49228 = pow(2.0,1.0/3.0);
                double t49229 = t49228*2.0;
                double t49230 = t49229-2.0;
                double t49231 = two_13*2.0;
                double t49232 = t49231-2.0;
                double t49233 = 1.0/t49232;
                double t49234 = 1.0/c0f;
                double t49235 = 1.0/pow(rho_b[index],1.0/3.0);
                double t49236 = c*t49235;
                double t49237 = sqrt(t49236);
                double t49238 = pow(t49236,3.0/2.0);
                double t49239 = 1.0/pow(rho_b[index],2.0/3.0);
                double t49240 = b1p*t49237;
                double t49241 = b3p*t49238;
                double t49242 = b4p*t49214*t49239;
                double t49243 = b2p*c*t49235;
                double t49244 = t49240+t49241+t49242+t49243;
                double t49245 = 1.0/t49244;
                double t49246 = t49216*t49245*(1.0/2.0);
                double t49247 = t49246+1.0;
                double t49248 = log(t49247);
                double t49249 = a1p*c*t49235;
                double t49250 = t49249+1.0;
                double t49251 = c0p*t49250*t49248*2.0;
                double t49252 = rho_a[index]+rho_b[index];
                double t49253 = 1.0/pow(t49252,1.0/3.0);
                double t49254 = c*t49253;
                double t49255 = sqrt(t49254);
                double t49256 = pow(t49254,3.0/2.0);
                double t49257 = 1.0/pow(t49252,2.0/3.0);
                double t49258 = b1p*t49255;
                double t49259 = b3p*t49256;
                double t49260 = b4p*t49214*t49257;
                double t49261 = b2p*c*t49253;
                double t49262 = t49260+t49261+t49258+t49259;
                double t49263 = 1.0/t49262;
                double t49264 = t49216*t49263*(1.0/2.0);
                double t49265 = t49264+1.0;
                double t49266 = log(t49265);
                double t49267 = a1p*c*t49253;
                double t49268 = t49267+1.0;
                double t49269 = c0p*t49266*t49268*2.0;
                double t49270 = rho_a[index]-rho_b[index];
                double t49271 = t49270*t49270;
                double t49272 = 1.0/t49252;
                double t49273 = t49270*t49272;
                double t49274 = 1.0/(t49252*t49252*t49252*t49252);
                double t49275 = t49271*t49271;
                double t49276 = t49273+1.0;
                double t49277 = pow(t49276,4.0/3.0);
                double t49278 = -t49273+1.0;
                double t49279 = pow(t49278,4.0/3.0);
                double t49280 = t49277+t49279-2.0;
                double t49281 = gcab*gcab;
                double t49282 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t49283 = 1.0/pow(rho_a[index],8.0/3.0);
                double t49284 = gamma_aa[index]*t49283*(1.0/2.0);
                double t49285 = 1.0/pow(rho_b[index],8.0/3.0);
                double t49286 = gamma_bb[index]*t49285*(1.0/2.0);
                double t49287 = t49284+t49286;
                double t49288 = gcab*t49287;
                double t49289 = t49288+1.0;
                double t49290 = t49287*t49287;
                double t49291 = t49281*t49290;
                double t49292 = gcab*t49287*2.0;
                double t49293 = t49291+t49292+1.0;
                double t49294 = t49281*t49281;
                double t49311 = gcab*t49285*2.0;
                double t49312 = t49281*t49285*t49287*6.0;
                double t49313 = gcab*t49281*t49290*t49285*6.0;
                double t49314 = t49290*t49285*t49294*t49287*2.0;
                double t49295 = t49311+t49312+t49313+t49314;
                double t49296 = t49290*t49290;
                double t49316 = gcab*t49285*(3.0/2.0);
                double t49317 = t49281*t49285*t49287*3.0;
                double t49318 = gcab*t49281*t49290*t49285*(3.0/2.0);
                double t49297 = t49316+t49317+t49318;
                double t49298 = t49281*t49290*3.0;
                double t49299 = gcab*t49281*t49290*t49287;
                double t49300 = gcab*t49287*3.0;
                double t49301 = t49300+t49298+t49299+1.0;
                double t49308 = gcab*t49285;
                double t49309 = t49281*t49285*t49287;
                double t49302 = t49308+t49309;
                double t49303 = t49281*t49290*6.0;
                double t49304 = gcab*t49281*t49290*t49287*4.0;
                double t49305 = t49294*t49296;
                double t49306 = gcab*t49287*4.0;
                double t49307 = t49303+t49304+t49305+t49306+1.0;
                double t49310 = 1.0/(t49293*t49293);
                double t49315 = 1.0/(t49307*t49307);
                double t49319 = 1.0/(t49301*t49301);
                double t49320 = c0p*t49225*t49227*2.0;
                double t49321 = gx*gx;
                double t49322 = gamma_bb[index]*gamma_bb[index];
                double t49323 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49324 = t49321*t49321;
                double t49325 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t49326 = gamma_bb[index]*gx*t49285;
                double t49327 = t49326+1.0;
                double t49328 = gamma_bb[index]*gx*t49285*2.0;
                double t49329 = t49321*t49322*t49282;
                double t49330 = t49328+t49329+1.0;
                double t49331 = gamma_bb[index]*gx*t49285*3.0;
                double t49332 = gamma_bb[index]*gx*t49321*t49322*t49323;
                double t49333 = t49321*t49322*t49282*3.0;
                double t49334 = t49331+t49332+t49333+1.0;
                double t49335 = t49322*t49322;
                double t49351 = gx*t49285*4.0;
                double t49352 = gamma_bb[index]*t49321*t49282*1.2E1;
                double t49353 = gx*t49321*t49322*t49323*1.2E1;
                double t49354 = gamma_bb[index]*t49322*t49324*t49325*4.0;
                double t49336 = t49351+t49352+t49353+t49354;
                double t49337 = gamma_bb[index]*gx*t49285*4.0;
                double t49338 = gamma_bb[index]*gx*t49321*t49322*t49323*4.0;
                double t49339 = t49321*t49322*t49282*6.0;
                double t49340 = t49324*t49325*t49335;
                double t49341 = t49340+t49337+t49338+t49339+1.0;
                double t49344 = gx*t49285*2.0;
                double t49345 = gamma_bb[index]*t49321*t49282*2.0;
                double t49342 = t49344+t49345;
                double t49343 = 1.0/(t49334*t49334);
                double t49346 = 1.0/(t49330*t49330);
                double t49347 = gx*t49285*3.0;
                double t49348 = gamma_bb[index]*t49321*t49282*6.0;
                double t49349 = gx*t49321*t49322*t49323*3.0;
                double t49350 = t49347+t49348+t49349;
                double t49355 = 1.0/(t49341*t49341);
                double t49356 = b1f*t49237;
                double t49357 = b3f*t49238;
                double t49358 = b4f*t49214*t49239;
                double t49359 = b2f*c*t49235;
                double t49360 = t49356+t49357+t49358+t49359;
                double t49361 = 1.0/t49360;
                double t49362 = t49234*t49361*(1.0/2.0);
                double t49363 = t49362+1.0;
                double t49364 = log(t49363);
                double t49365 = a1f*c*t49235;
                double t49366 = t49365+1.0;
                double t49367 = t49251-c0f*t49364*t49366*2.0;
                double t49368 = t49251-t49230*t49233*t49367;
                double t49369 = gcaa*gcaa;
                double t49370 = t49369*t49369;
                double t49371 = gamma_bb[index]*gcaa*t49285;
                double t49372 = t49371+1.0;
                double t49373 = gamma_bb[index]*gcaa*t49285*2.0;
                double t49374 = t49322*t49282*t49369;
                double t49375 = t49373+t49374+1.0;
                double t49376 = gamma_bb[index]*gcaa*t49285*3.0;
                double t49377 = gamma_bb[index]*gcaa*t49322*t49323*t49369;
                double t49378 = t49322*t49282*t49369*3.0;
                double t49379 = t49376+t49377+t49378+1.0;
                double t49395 = gcaa*t49285*4.0;
                double t49396 = gamma_bb[index]*t49282*t49369*1.2E1;
                double t49397 = gcaa*t49322*t49323*t49369*1.2E1;
                double t49398 = gamma_bb[index]*t49322*t49325*t49370*4.0;
                double t49380 = t49395+t49396+t49397+t49398;
                double t49381 = gamma_bb[index]*gcaa*t49285*4.0;
                double t49382 = gamma_bb[index]*gcaa*t49322*t49323*t49369*4.0;
                double t49383 = t49322*t49282*t49369*6.0;
                double t49384 = t49325*t49370*t49335;
                double t49385 = t49381+t49382+t49383+t49384+1.0;
                double t49388 = gcaa*t49285*2.0;
                double t49389 = gamma_bb[index]*t49282*t49369*2.0;
                double t49386 = t49388+t49389;
                double t49387 = 1.0/(t49379*t49379);
                double t49390 = 1.0/(t49375*t49375);
                double t49391 = gcaa*t49285*3.0;
                double t49392 = gamma_bb[index]*t49282*t49369*6.0;
                double t49393 = gcaa*t49322*t49323*t49369*3.0;
                double t49394 = t49391+t49392+t49393;
                double t49399 = 1.0/(t49385*t49385);
                v_gamma_bb_gamma_bb_[index] = (rho_b[index]*t49368+rho_a[index]*(t49320-t49230*t49233*(t49320-c0f* \
                   log((t49234*(1.0/2.0))/(b1f*t49212+b3f*t49213+b2f*c*t49210+b4f*t49214*t49215)+1.0)*(a1f*c*t49210+1.0) \
                   *2.0))-t49252*(t49269-t49233*t49280*t49274*t49275*(t49269-c0f*log((t49234*(1.0/2.0))/(b1f*t49255+b3f* \
                   t49256+b2f*c*t49253+b4f*t49214*t49257)+1.0)*(a1f*c*t49253+1.0)*2.0)+(Aa*t49233*t49280*log((1.0/2.0) \
                   /(Aa*(b1a*t49255+b3a*t49256+b2a*c*t49253+b4a*t49214*t49257))+1.0)*(t49274*t49275-1.0)*(a1a*c*t49253+ \
                   1.0)*2.0)/d2fz0))*((ccab2*t49281*t49282*(1.0/2.0))/t49293-ccab1*t49281*t49282*1.0/(t49289*t49289)* \
                   (1.0/2.0)+ccab2*(t49302*t49302)*t49281*t49290*1.0/(t49293*t49293*t49293)*2.0+ccab4*1.0/(t49307*t49307* \
                   t49307)*t49294*(t49295*t49295)*t49296*2.0-ccab2*t49310*t49290*t49282*t49294*(1.0/2.0)-ccab4*t49315* \
                   t49294*t49296*(t49281*t49282*3.0+t49290*t49282*t49294*3.0+gcab*t49281*t49282*t49287*6.0)+(ccab4*t49290* \
                   t49282*t49294*3.0)/t49307-ccab2*t49310*t49302*t49281*t49285*t49287*2.0+(ccab3*gcab*t49281*t49282*t49287* \
                   (3.0/2.0))/t49301+ccab1*gcab*t49281*t49282*t49287*1.0/(t49289*t49289*t49289)*(1.0/2.0)+ccab3*gcab* \
                   1.0/(t49301*t49301*t49301)*t49281*t49290*t49287*(t49297*t49297)*2.0-ccab3*gcab*t49281*t49290*t49319* \
                   t49285*t49297*3.0-ccab4*t49315*t49290*t49285*t49294*t49295*t49287*4.0-ccab3*gcab*t49281*t49290*t49319* \
                   t49287*(t49281*t49282*(3.0/2.0)+gcab*t49281*t49282*t49287*(3.0/2.0)))-c0*pow(rho_b[index],4.0/3.0) \
                   *(cx1*t49321*t49282*1.0/(t49327*t49327)*2.0-(cx2*t49321*t49282*2.0)/t49330+cx2*t49322*t49324*t49325* \
                   t49346*2.0-(cx4*t49322*t49324*t49325*1.2E1)/t49341+cx4*t49324*t49325*t49335*t49355*(t49321*t49282* \
                   1.2E1+t49322*t49324*t49325*1.2E1+gamma_bb[index]*gx*t49321*t49323*2.4E1)-cx1*gamma_bb[index]*gx*t49321* \
                   t49323*1.0/(t49327*t49327*t49327)*2.0-(cx3*gamma_bb[index]*gx*t49321*t49323*6.0)/t49334-cx2*t49321* \
                   1.0/(t49330*t49330*t49330)*t49322*(t49342*t49342)*t49282*2.0-cx4*1.0/(t49341*t49341*t49341)*t49324* \
                   t49325*t49335*(t49336*t49336)*2.0+cx2*gamma_bb[index]*t49321*t49342*t49282*t49346*4.0+cx4*gamma_bb[index]* \
                   t49322*t49324*t49325*t49336*t49355*8.0+cx3*gx*t49321*t49322*t49323*t49350*t49343*6.0+cx3*gamma_bb[index]* \
                   gx*t49321*t49322*t49323*t49343*(t49321*t49282*6.0+gamma_bb[index]*gx*t49321*t49323*6.0)-cx3*gamma_bb[index]* \
                   gx*t49321*t49322*t49323*(t49350*t49350)*1.0/(t49334*t49334*t49334)*2.0)+rho_b[index]*t49368*(ccaa1* \
                   t49282*1.0/(t49372*t49372)*t49369*2.0-(ccaa2*t49282*t49369*2.0)/t49375+ccaa2*t49322*t49325*t49370* \
                   t49390*2.0-(ccaa4*t49322*t49325*t49370*1.2E1)/t49385+ccaa4*t49325*t49370*t49335*t49399*(t49282*t49369* \
                   1.2E1+t49322*t49325*t49370*1.2E1+gamma_bb[index]*gcaa*t49323*t49369*2.4E1)-ccaa1*gamma_bb[index]*gcaa* \
                   t49323*1.0/(t49372*t49372*t49372)*t49369*2.0-(ccaa3*gamma_bb[index]*gcaa*t49323*t49369*6.0)/t49379- \
                   ccaa4*t49325*t49370*t49335*(t49380*t49380)*1.0/(t49385*t49385*t49385)*2.0-ccaa2*t49322*t49282*1.0/ \
                   (t49375*t49375*t49375)*(t49386*t49386)*t49369*2.0+ccaa2*gamma_bb[index]*t49282*t49390*t49386*t49369* \
                   4.0+ccaa4*gamma_bb[index]*t49322*t49325*t49370*t49380*t49399*8.0+ccaa3*gcaa*t49322*t49323*t49394*t49369* \
                   t49387*6.0+ccaa3*gamma_bb[index]*gcaa*t49322*t49323*t49369*t49387*(t49282*t49369*6.0+gamma_bb[index]* \
                   gcaa*t49323*t49369*6.0)-ccaa3*gamma_bb[index]*gcaa*t49322*t49323*(t49394*t49394)*t49369*1.0/(t49379* \
                   t49379*t49379)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t49953 = gx*gx;
                double t49954 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t49955 = 1.0/pow(rho_b[index],8.0/3.0);
                double t49956 = gamma_bb[index]*gamma_bb[index];
                double t49957 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t49958 = t49953*t49953;
                double t49959 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t49960 = gamma_bb[index]*gx*t49955;
                double t49961 = t49960+1.0;
                double t49962 = gamma_bb[index]*gx*t49955*2.0;
                double t49963 = t49953*t49954*t49956;
                double t49964 = t49962+t49963+1.0;
                double t49965 = gamma_bb[index]*gx*t49955*3.0;
                double t49966 = gamma_bb[index]*gx*t49953*t49956*t49957;
                double t49967 = t49953*t49954*t49956*3.0;
                double t49968 = t49965+t49966+t49967+1.0;
                double t49969 = t49956*t49956;
                double t49985 = gx*t49955*4.0;
                double t49986 = gamma_bb[index]*t49953*t49954*1.2E1;
                double t49987 = gx*t49953*t49956*t49957*1.2E1;
                double t49988 = gamma_bb[index]*t49956*t49958*t49959*4.0;
                double t49970 = t49985+t49986+t49987+t49988;
                double t49971 = gamma_bb[index]*gx*t49955*4.0;
                double t49972 = gamma_bb[index]*gx*t49953*t49956*t49957*4.0;
                double t49973 = t49953*t49954*t49956*6.0;
                double t49974 = t49958*t49959*t49969;
                double t49975 = t49971+t49972+t49973+t49974+1.0;
                double t49978 = gx*t49955*2.0;
                double t49979 = gamma_bb[index]*t49953*t49954*2.0;
                double t49976 = t49978+t49979;
                double t49977 = 1.0/(t49968*t49968);
                double t49980 = 1.0/(t49964*t49964);
                double t49981 = gx*t49955*3.0;
                double t49982 = gamma_bb[index]*t49953*t49954*6.0;
                double t49983 = gx*t49953*t49956*t49957*3.0;
                double t49984 = t49981+t49982+t49983;
                double t49989 = 1.0/(t49975*t49975);
                double t49990 = 1.0/pow(rho_b[index],1.0/3.0);
                double t49991 = c*t49990;
                double t49992 = sqrt(t49991);
                double t49993 = pow(t49991,3.0/2.0);
                double t49994 = c*c;
                double t49995 = 1.0/pow(rho_b[index],2.0/3.0);
                double t49996 = 1.0/c0p;
                double t49997 = b1p*t49992;
                double t49998 = b3p*t49993;
                double t49999 = b4p*t49994*t49995;
                double t50000 = b2p*c*t49990;
                double t50001 = t49997+t49998+t49999+t50000;
                double t50002 = 1.0/t50001;
                double t50003 = t49996*t50002*(1.0/2.0);
                double t50004 = t50003+1.0;
                double t50005 = log(t50004);
                double t50006 = a1p*c*t49990;
                double t50007 = t50006+1.0;
                double t50008 = gcaa*gcaa;
                double t50009 = t50008*t50008;
                double t50010 = gamma_bb[index]*gcaa*t49955;
                double t50011 = t50010+1.0;
                double t50012 = gamma_bb[index]*gcaa*t49955*2.0;
                double t50013 = t49954*t49956*t50008;
                double t50014 = t50012+t50013+1.0;
                double t50015 = gamma_bb[index]*gcaa*t49955*3.0;
                double t50016 = gamma_bb[index]*gcaa*t49956*t49957*t50008;
                double t50017 = t49954*t49956*t50008*3.0;
                double t50018 = t50015+t50016+t50017+1.0;
                double t50034 = gcaa*t49955*4.0;
                double t50035 = gamma_bb[index]*t49954*t50008*1.2E1;
                double t50036 = gcaa*t49956*t49957*t50008*1.2E1;
                double t50037 = gamma_bb[index]*t49956*t49959*t50009*4.0;
                double t50019 = t50034+t50035+t50036+t50037;
                double t50020 = gamma_bb[index]*gcaa*t49955*4.0;
                double t50021 = gamma_bb[index]*gcaa*t49956*t49957*t50008*4.0;
                double t50022 = t49954*t49956*t50008*6.0;
                double t50023 = t49959*t49969*t50009;
                double t50024 = t50020+t50021+t50022+t50023+1.0;
                double t50027 = gcaa*t49955*2.0;
                double t50028 = gamma_bb[index]*t49954*t50008*2.0;
                double t50025 = t50027+t50028;
                double t50026 = 1.0/(t50018*t50018);
                double t50029 = 1.0/(t50014*t50014);
                double t50030 = gcaa*t49955*3.0;
                double t50031 = gamma_bb[index]*t49954*t50008*6.0;
                double t50032 = gcaa*t49956*t49957*t50008*3.0;
                double t50033 = t50030+t50031+t50032;
                double t50038 = 1.0/(t50024*t50024);
                v_gamma_bb_gamma_bb_[index] = -c0*pow(rho_b[index],4.0/3.0)*(cx1*1.0/(t49961*t49961)*t49953*t49954* \
                   2.0-(cx2*t49953*t49954*2.0)/t49964+cx2*t49980*t49956*t49958*t49959*2.0-(cx4*t49956*t49958*t49959*1.2E1) \
                   /t49975+cx4*t49958*t49959*t49969*t49989*(t49953*t49954*1.2E1+t49956*t49958*t49959*1.2E1+gamma_bb[index]* \
                   gx*t49953*t49957*2.4E1)-cx1*gamma_bb[index]*gx*1.0/(t49961*t49961*t49961)*t49953*t49957*2.0-(cx3*gamma_bb[index]* \
                   gx*t49953*t49957*6.0)/t49968-cx2*t49953*t49954*1.0/(t49964*t49964*t49964)*t49956*(t49976*t49976)*2.0- \
                   cx4*(t49970*t49970)*1.0/(t49975*t49975*t49975)*t49958*t49959*t49969*2.0+cx2*gamma_bb[index]*t49953* \
                   t49980*t49954*t49976*4.0+cx4*gamma_bb[index]*t49970*t49956*t49958*t49959*t49989*8.0+cx3*gx*t49953* \
                   t49956*t49957*t49984*t49977*6.0+cx3*gamma_bb[index]*gx*t49953*t49956*t49957*t49977*(t49953*t49954* \
                   6.0+gamma_bb[index]*gx*t49953*t49957*6.0)-cx3*gamma_bb[index]*gx*t49953*t49956*t49957*(t49984*t49984) \
                   *1.0/(t49968*t49968*t49968)*2.0)+rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t49992+b3f*t49993+b2f*c*t49990+b4f*t49994*t49995))+1.0)*(a1f*c*t49990+1.0)*2.0-c0p*t50005*t50007* \
                   2.0))/(two_13*2.0-2.0)+c0p*t50005*t50007*2.0)*(ccaa1*t49954*1.0/(t50011*t50011)*t50008*2.0-(ccaa2* \
                   t49954*t50008*2.0)/t50014+ccaa2*t49956*t49959*t50009*t50029*2.0-(ccaa4*t49956*t49959*t50009*1.2E1) \
                   /t50024+ccaa4*t49959*t49969*t50009*t50038*(t49954*t50008*1.2E1+t49956*t49959*t50009*1.2E1+gamma_bb[index]* \
                   gcaa*t49957*t50008*2.4E1)-ccaa1*gamma_bb[index]*gcaa*t49957*1.0/(t50011*t50011*t50011)*t50008*2.0- \
                   (ccaa3*gamma_bb[index]*gcaa*t49957*t50008*6.0)/t50018-ccaa2*t49954*t49956*1.0/(t50014*t50014*t50014) \
                   *(t50025*t50025)*t50008*2.0-ccaa4*t49959*t49969*1.0/(t50024*t50024*t50024)*t50009*(t50019*t50019)* \
                   2.0+ccaa2*gamma_bb[index]*t49954*t50025*t50008*t50029*4.0+ccaa4*gamma_bb[index]*t49956*t49959*t50009* \
                   t50019*t50038*8.0+ccaa3*gcaa*t49956*t49957*t50033*t50008*t50026*6.0+ccaa3*gamma_bb[index]*gcaa*t49956* \
                   t49957*t50008*t50026*(t49954*t50008*6.0+gamma_bb[index]*gcaa*t49957*t50008*6.0)-ccaa3*gamma_bb[index]* \
                   gcaa*t49956*t49957*(t50033*t50033)*t50008*1.0/(t50018*t50018*t50018)*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

