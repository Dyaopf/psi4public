#include <libmints/vector.h>
#include "B974_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

B974_CFunctional::B974_CFunctional()
{
    name_ = "B974_C";
    description_ = "    4th-Order B97 Correlation Expansion\n";
    citation_ = "    A.D. Boese, et. al., J. Chem. Phys., 112(4), 1670-1678, 2000\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = true;
    meta_ = false;
    parameters_["two_13"] =   1.2599210498948732E+00;
    parameters_["d2fz0"] =   1.7099210000000000E+00;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["Aa"] =   1.6886999999999999E-02;
    parameters_["a1a"] =   1.1125000000000000E-01;
    parameters_["b1a"] =   1.0356999999999999E+01;
    parameters_["b2a"] =   3.6231000000000000E+00;
    parameters_["b3a"] =   8.8026000000000004E-01;
    parameters_["b4a"] =   4.9670999999999998E-01;
    parameters_["c0p"] =   3.1091000000000001E-02;
    parameters_["a1p"] =   2.1370000000000000E-01;
    parameters_["b1p"] =   7.5956999999999999E+00;
    parameters_["b2p"] =   3.5876000000000001E+00;
    parameters_["b3p"] =   1.6382000000000001E+00;
    parameters_["b4p"] =   4.9293999999999999E-01;
    parameters_["c0f"] =   1.5545000000000000E-02;
    parameters_["a1f"] =   2.0548000000000000E-01;
    parameters_["b1f"] =   1.4118900000000000E+01;
    parameters_["b2f"] =   6.1977000000000002E+00;
    parameters_["b3f"] =   3.3662000000000001E+00;
    parameters_["b4f"] =   6.2517000000000000E-01;
    parameters_["gcab"] =   6.0000000000000001E-03;
    parameters_["gcaa"] =   2.0000000000000001E-01;
    parameters_["ccab0"] =   5.1473000000000002E-01;
    parameters_["ccab1"] =   6.9298200000000003E+00;
    parameters_["ccab2"] =  -2.4707300000000000E+01;
    parameters_["ccab3"] =   2.3109800000000000E+01;
    parameters_["ccab4"] =  -1.1323399999999999E+01;
    parameters_["ccaa0"] =   4.8950800000000000E-01;
    parameters_["ccaa1"] =  -2.6069900000000001E-01;
    parameters_["ccaa2"] =   4.3291700000000000E-01;
    parameters_["ccaa3"] =  -1.9924700000000000E+00;
    parameters_["ccaa4"] =   2.4853100000000001E+00;
}
B974_CFunctional::~B974_CFunctional()
{
}
void B974_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double two_13 = parameters_["two_13"];
    double d2fz0 = parameters_["d2fz0"];
    double c = parameters_["c"];
    double Aa = parameters_["Aa"];
    double a1a = parameters_["a1a"];
    double b1a = parameters_["b1a"];
    double b2a = parameters_["b2a"];
    double b3a = parameters_["b3a"];
    double b4a = parameters_["b4a"];
    double c0p = parameters_["c0p"];
    double a1p = parameters_["a1p"];
    double b1p = parameters_["b1p"];
    double b2p = parameters_["b2p"];
    double b3p = parameters_["b3p"];
    double b4p = parameters_["b4p"];
    double c0f = parameters_["c0f"];
    double a1f = parameters_["a1f"];
    double b1f = parameters_["b1f"];
    double b2f = parameters_["b2f"];
    double b3f = parameters_["b3f"];
    double b4f = parameters_["b4f"];
    double gcab = parameters_["gcab"];
    double gcaa = parameters_["gcaa"];
    double ccab0 = parameters_["ccab0"];
    double ccab1 = parameters_["ccab1"];
    double ccab2 = parameters_["ccab2"];
    double ccab3 = parameters_["ccab3"];
    double ccab4 = parameters_["ccab4"];
    double ccaa0 = parameters_["ccaa0"];
    double ccaa1 = parameters_["ccaa1"];
    double ccaa2 = parameters_["ccaa2"];
    double ccaa3 = parameters_["ccaa3"];
    double ccaa4 = parameters_["ccaa4"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t62015 = 1.0/pow(rho_b,1.0/3.0);
                double t62016 = c*t62015;
                double t62017 = sqrt(t62016);
                double t62018 = pow(t62016,3.0/2.0);
                double t62019 = c*c;
                double t62020 = 1.0/pow(rho_b,2.0/3.0);
                double t62021 = 1.0/c0p;
                double t62022 = b1p*t62017;
                double t62023 = b3p*t62018;
                double t62024 = b4p*t62020*t62019;
                double t62025 = b2p*c*t62015;
                double t62026 = t62022+t62023+t62024+t62025;
                double t62027 = 1.0/t62026;
                double t62028 = t62021*t62027*(1.0/2.0);
                double t62029 = t62028+1.0;
                double t62030 = log(t62029);
                double t62031 = a1p*c*t62015;
                double t62032 = t62031+1.0;
                double t62033 = gamma_bb*gamma_bb;
                double t62034 = gcaa*gcaa;
                double t62035 = t62033*t62033;
                double t62036 = t62034*t62034;
                double t62037 = 1.0/pow(rho_b,3.2E1/3.0);
                double t62038 = 1.0/pow(rho_b,8.0/3.0);
                double t62039 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62040 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t62017+b3f*t62018+b2f*c*t62015+b4f*t62020*t62019))+1.0)*(a1f*c*t62015+1.0)*2.0-c0p*t62030*t62032*2.0))/(two_13*2.0-2.0)+c0p*t62030*t62032*2.0)*(ccaa0+(ccaa2*t62040*t62033*t62034)/(gamma_bb*gcaa*t62038*2.0+t62040*t62033*t62034+1.0)+(ccaa1*gamma_bb*gcaa*t62038)/(gamma_bb*gcaa*t62038+1.0)+(ccaa4*t62035*t62036*t62037)/(gamma_bb*gcaa*t62038*4.0+t62040*t62033*t62034*6.0+t62035*t62036*t62037+gamma_bb*gcaa*t62033*t62034*t62039*4.0+1.0)+(ccaa3*gamma_bb*gcaa*t62033*t62034*t62039)/(gamma_bb*gcaa*t62038*3.0+t62040*t62033*t62034*3.0+gamma_bb*gcaa*t62033*t62034*t62039+1.0));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t62043 = 1.0/pow(rho_b,1.0/3.0);
                double t62044 = c*t62043;
                double t62045 = sqrt(t62044);
                double t62046 = pow(t62044,3.0/2.0);
                double t62047 = c*c;
                double t62048 = 1.0/pow(rho_b,2.0/3.0);
                double t62049 = 1.0/c0p;
                double t62050 = b1p*t62045;
                double t62051 = b3p*t62046;
                double t62052 = b4p*t62047*t62048;
                double t62053 = b2p*c*t62043;
                double t62054 = t62050+t62051+t62052+t62053;
                double t62055 = 1.0/t62054;
                double t62056 = t62055*t62049*(1.0/2.0);
                double t62057 = t62056+1.0;
                double t62058 = log(t62057);
                double t62059 = a1p*c*t62043;
                double t62060 = t62059+1.0;
                double t62061 = gamma_bb*gamma_bb;
                double t62062 = gcaa*gcaa;
                double t62063 = t62061*t62061;
                double t62064 = t62062*t62062;
                double t62065 = 1.0/pow(rho_b,3.2E1/3.0);
                double t62066 = 1.0/pow(rho_b,8.0/3.0);
                double t62067 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62068 = 1.0/pow(rho_b,1.6E1/3.0);
                double t62069 = pow(2.0,1.0/3.0);
                double t62070 = t62069*2.0;
                double t62071 = t62070-2.0;
                double t62072 = two_13*2.0;
                double t62073 = t62072-2.0;
                double t62074 = 1.0/t62073;
                double t62075 = 1.0/c0f;
                double t62076 = b1f*t62045;
                double t62077 = b3f*t62046;
                double t62078 = b4f*t62047*t62048;
                double t62079 = b2f*c*t62043;
                double t62080 = t62076+t62077+t62078+t62079;
                double t62081 = 1.0/t62080;
                double t62082 = t62081*t62075*(1.0/2.0);
                double t62083 = t62082+1.0;
                double t62084 = log(t62083);
                double t62085 = a1f*c*t62043;
                double t62086 = t62085+1.0;
                double t62087 = c0f*t62084*t62086*2.0;
                double t62088 = c0p*t62060*t62058*2.0;
                double t62089 = gamma_bb*gcaa*t62066*4.0;
                double t62090 = gamma_bb*gcaa*t62061*t62062*t62067*4.0;
                double t62091 = t62061*t62062*t62068*6.0;
                double t62092 = t62063*t62064*t62065;
                double t62093 = t62090+t62091+t62092+t62089+1.0;
                double t62094 = 1.0/t62093;
                double t62095 = gamma_bb*gcaa*t62066;
                double t62096 = t62095+1.0;
                double t62097 = 1.0/t62096;
                double t62098 = gamma_bb*gcaa*t62066*3.0;
                double t62099 = gamma_bb*gcaa*t62061*t62062*t62067;
                double t62100 = t62061*t62062*t62068*3.0;
                double t62101 = t62100+t62098+t62099+1.0;
                double t62102 = 1.0/t62101;
                double t62103 = gamma_bb*gcaa*t62066*2.0;
                double t62104 = t62061*t62062*t62068;
                double t62105 = t62103+t62104+1.0;
                double t62106 = 1.0/t62105;
                double t62107 = 1.0/pow(rho_b,1.9E1/3.0);
                double t62108 = 1.0/pow(rho_b,1.1E1/3.0);
                double t62109 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62110 = 1.0/pow(rho_b,3.5E1/3.0);
                double t62111 = 1.0/pow(rho_b,4.0/3.0);
                double t62112 = 1.0/pow(rho_b,5.0/3.0);
                double t62113 = 1.0/sqrt(t62044);
                double t62114 = 1.0/t62057;
                double t62115 = 1.0/(t62054*t62054);
                double t62116 = b4p*t62112*t62047*(2.0/3.0);
                double t62117 = b2p*c*t62111*(1.0/3.0);
                double t62118 = b1p*c*t62111*t62113*(1.0/6.0);
                double t62119 = b3p*c*t62111*t62045*(1.0/2.0);
                double t62120 = t62116+t62117+t62118+t62119;
                double t62121 = t62120*t62060*t62114*t62115;
                double t62122 = ccaa4*t62063*t62064*t62065*t62094;
                double t62123 = ccaa1*gamma_bb*gcaa*t62066*t62097;
                double t62124 = ccaa3*gamma_bb*gcaa*t62102*t62061*t62062*t62067;
                double t62125 = ccaa2*t62061*t62106*t62062*t62068;
                double t62126 = ccaa0+t62122+t62123+t62124+t62125;
                v_rho_b[Q] += scale * -t62126*(t62088+t62071*t62074*(t62087-c0p*t62060*t62058*2.0))+rho_b*t62126*(-t62121+t62071*t62074*(t62121-(1.0/(t62080*t62080)*t62086*(b2f*c*t62111*(1.0/3.0)+b4f*t62112*t62047*(2.0/3.0)+b1f*c*t62111*t62113*(1.0/6.0)+b3f*c*t62111*t62045*(1.0/2.0)))/t62083+a1f*c*c0f*t62111*t62084*(2.0/3.0)-a1p*c*c0p*t62111*t62058*(2.0/3.0))+a1p*c*c0p*t62111*t62058*(2.0/3.0))+rho_b*(t62088+t62071*t62074*(t62087-t62088))*(ccaa1*gamma_bb*gcaa*t62108*t62097*(8.0/3.0)+ccaa2*t62061*t62106*t62062*t62107*(1.6E1/3.0)+ccaa4*t62110*t62063*t62064*t62094*(3.2E1/3.0)-ccaa1*t62061*t62062*t62107*1.0/(t62096*t62096)*(8.0/3.0)-ccaa2*1.0/(t62105*t62105)*t62061*t62062*t62068*(gamma_bb*gcaa*t62108*(1.6E1/3.0)+t62061*t62062*t62107*(1.6E1/3.0))-ccaa4*t62063*t62064*t62065*1.0/(t62093*t62093)*(gamma_bb*gcaa*t62108*(3.2E1/3.0)+t62110*t62063*t62064*(3.2E1/3.0)+t62061*t62062*t62107*3.2E1+gamma_bb*gcaa*t62061*t62062*t62109*3.2E1)+ccaa3*gamma_bb*gcaa*t62102*t62061*t62062*t62109*8.0-ccaa3*gamma_bb*gcaa*1.0/(t62101*t62101)*t62061*t62062*t62067*(gamma_bb*gcaa*t62108*8.0+t62061*t62062*t62107*1.6E1+gamma_bb*gcaa*t62061*t62062*t62109*8.0));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t62130 = 1.0/pow(rho_b,1.0/3.0);
                double t62131 = c*t62130;
                double t62132 = sqrt(t62131);
                double t62133 = pow(t62131,3.0/2.0);
                double t62134 = c*c;
                double t62135 = 1.0/pow(rho_b,2.0/3.0);
                double t62136 = 1.0/c0p;
                double t62137 = b1p*t62132;
                double t62138 = b3p*t62133;
                double t62139 = b4p*t62134*t62135;
                double t62140 = b2p*c*t62130;
                double t62141 = t62140+t62137+t62138+t62139;
                double t62142 = 1.0/t62141;
                double t62143 = t62142*t62136*(1.0/2.0);
                double t62144 = t62143+1.0;
                double t62145 = log(t62144);
                double t62146 = a1p*c*t62130;
                double t62147 = t62146+1.0;
                double t62148 = 1.0/pow(rho_b,8.0/3.0);
                double t62149 = gamma_bb*gamma_bb;
                double t62150 = gcaa*gcaa;
                double t62151 = t62150*t62150;
                double t62152 = 1.0/pow(rho_b,3.2E1/3.0);
                double t62153 = 1.0/pow(rho_b,1.6E1/3.0);
                double t62154 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62155 = gamma_bb*gcaa*t62148;
                double t62156 = t62155+1.0;
                double t62157 = gamma_bb*gcaa*t62148*3.0;
                double t62158 = gamma_bb*gcaa*t62150*t62154*t62149;
                double t62159 = t62150*t62153*t62149*3.0;
                double t62160 = t62157+t62158+t62159+1.0;
                double t62161 = t62149*t62149;
                double t62162 = gamma_bb*gcaa*t62148*4.0;
                double t62163 = gamma_bb*gcaa*t62150*t62154*t62149*4.0;
                double t62164 = t62150*t62153*t62149*6.0;
                double t62165 = t62151*t62152*t62161;
                double t62166 = t62162+t62163+t62164+t62165+1.0;
                double t62167 = gamma_bb*gcaa*t62148*2.0;
                double t62168 = t62150*t62153*t62149;
                double t62169 = t62167+t62168+1.0;
                v_gamma_bb[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t62132+b3f*t62133+b2f*c*t62130+b4f*t62134*t62135))+1.0)*(a1f*c*t62130+1.0)*2.0-c0p*t62145*t62147*2.0))/(two_13*2.0-2.0)+c0p*t62145*t62147*2.0)*((ccaa1*gcaa*t62148)/t62156-ccaa1*gamma_bb*t62150*t62153*1.0/(t62156*t62156)+(ccaa2*gamma_bb*t62150*t62153*2.0)/t62169-ccaa2*t62150*t62153*t62149*1.0/(t62169*t62169)*(gcaa*t62148*2.0+gamma_bb*t62150*t62153*2.0)+(ccaa4*gamma_bb*t62151*t62152*t62149*4.0)/t62166+(ccaa3*gcaa*t62150*t62154*t62149*3.0)/t62160-ccaa4*t62151*t62152*t62161*1.0/(t62166*t62166)*(gcaa*t62148*4.0+gamma_bb*t62150*t62153*1.2E1+gamma_bb*t62151*t62152*t62149*4.0+gcaa*t62150*t62154*t62149*1.2E1)-ccaa3*gamma_bb*gcaa*t62150*1.0/(t62160*t62160)*t62154*t62149*(gcaa*t62148*3.0+gamma_bb*t62150*t62153*6.0+gcaa*t62150*t62154*t62149*3.0));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t62175 = 1.0/pow(rho_b,1.0/3.0);
                double t62176 = c*t62175;
                double t62177 = sqrt(t62176);
                double t62178 = b1f*t62177;
                double t62179 = pow(t62176,3.0/2.0);
                double t62180 = b3f*t62179;
                double t62181 = c*c;
                double t62182 = 1.0/pow(rho_b,2.0/3.0);
                double t62183 = b4f*t62181*t62182;
                double t62184 = b2f*c*t62175;
                double t62185 = t62180+t62183+t62184+t62178;
                double t62186 = 1.0/pow(rho_b,4.0/3.0);
                double t62187 = b1p*t62177;
                double t62188 = b3p*t62179;
                double t62189 = b4p*t62181*t62182;
                double t62190 = b2p*c*t62175;
                double t62191 = t62190+t62187+t62188+t62189;
                double t62192 = 1.0/pow(rho_b,5.0/3.0);
                double t62193 = 1.0/sqrt(t62176);
                double t62194 = 1.0/c0f;
                double t62195 = 1.0/t62185;
                double t62196 = t62194*t62195*(1.0/2.0);
                double t62197 = t62196+1.0;
                double t62198 = 1.0/c0p;
                double t62199 = 1.0/t62191;
                double t62200 = t62198*t62199*(1.0/2.0);
                double t62201 = t62200+1.0;
                double t62202 = a1p*c*t62175;
                double t62203 = t62202+1.0;
                double t62204 = 1.0/t62201;
                double t62205 = 1.0/(t62191*t62191);
                double t62206 = b4p*t62181*t62192*(2.0/3.0);
                double t62207 = b2p*c*t62186*(1.0/3.0);
                double t62208 = b1p*c*t62193*t62186*(1.0/6.0);
                double t62209 = b3p*c*t62177*t62186*(1.0/2.0);
                double t62210 = t62206+t62207+t62208+t62209;
                double t62211 = t62210*t62203*t62204*t62205;
                double t62212 = log(t62201);
                double t62213 = gamma_bb*gamma_bb;
                double t62214 = gcaa*gcaa;
                double t62215 = t62213*t62213;
                double t62216 = t62214*t62214;
                double t62217 = 1.0/pow(rho_b,3.2E1/3.0);
                double t62218 = 1.0/pow(rho_b,8.0/3.0);
                double t62219 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62220 = 1.0/pow(rho_b,1.6E1/3.0);
                double t62221 = pow(2.0,1.0/3.0);
                double t62222 = t62221*2.0;
                double t62223 = t62222-2.0;
                double t62224 = two_13*2.0;
                double t62225 = t62224-2.0;
                double t62226 = 1.0/t62225;
                double t62227 = log(t62197);
                double t62228 = a1f*c*t62175;
                double t62229 = t62228+1.0;
                double t62230 = gamma_bb*gcaa*t62218*4.0;
                double t62231 = gamma_bb*gcaa*t62213*t62214*t62219*4.0;
                double t62232 = t62220*t62213*t62214*6.0;
                double t62233 = t62215*t62216*t62217;
                double t62234 = t62230+t62231+t62232+t62233+1.0;
                double t62235 = 1.0/t62234;
                double t62236 = gamma_bb*gcaa*t62218;
                double t62237 = t62236+1.0;
                double t62238 = 1.0/t62237;
                double t62239 = gamma_bb*gcaa*t62218*3.0;
                double t62240 = gamma_bb*gcaa*t62213*t62214*t62219;
                double t62241 = t62220*t62213*t62214*3.0;
                double t62242 = t62240+t62241+t62239+1.0;
                double t62243 = 1.0/t62242;
                double t62244 = gamma_bb*gcaa*t62218*2.0;
                double t62245 = t62220*t62213*t62214;
                double t62246 = t62244+t62245+1.0;
                double t62247 = 1.0/t62246;
                double t62248 = 1.0/pow(rho_b,1.9E1/3.0);
                double t62249 = 1.0/pow(rho_b,1.1E1/3.0);
                double t62250 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62251 = 1.0/pow(rho_b,3.5E1/3.0);
                double t62252 = 1.0/t62197;
                double t62253 = 1.0/(t62185*t62185);
                double t62254 = b4f*t62181*t62192*(2.0/3.0);
                double t62255 = b2f*c*t62186*(1.0/3.0);
                double t62256 = b1f*c*t62193*t62186*(1.0/6.0);
                double t62257 = b3f*c*t62177*t62186*(1.0/2.0);
                double t62258 = t62254+t62255+t62256+t62257;
                double t62259 = a1f*c*c0f*t62227*t62186*(2.0/3.0);
                double t62260 = a1p*c*c0p*t62212*t62186*(2.0/3.0);
                double t62261 = ccaa4*t62215*t62251*t62216*t62235*(3.2E1/3.0);
                double t62262 = ccaa1*gamma_bb*gcaa*t62238*t62249*(8.0/3.0);
                double t62263 = ccaa3*gamma_bb*gcaa*t62213*t62214*t62250*t62243*8.0;
                double t62264 = ccaa2*t62213*t62214*t62247*t62248*(1.6E1/3.0);
                double t62265 = 1.0/(t62237*t62237);
                double t62266 = gamma_bb*gcaa*t62249*8.0;
                double t62267 = gamma_bb*gcaa*t62213*t62214*t62250*8.0;
                double t62268 = t62213*t62214*t62248*1.6E1;
                double t62269 = t62266+t62267+t62268;
                double t62270 = 1.0/(t62242*t62242);
                double t62271 = gamma_bb*gcaa*t62249*(3.2E1/3.0);
                double t62272 = gamma_bb*gcaa*t62213*t62214*t62250*3.2E1;
                double t62273 = t62213*t62214*t62248*3.2E1;
                double t62274 = t62215*t62251*t62216*(3.2E1/3.0);
                double t62275 = t62271+t62272+t62273+t62274;
                double t62276 = 1.0/(t62234*t62234);
                double t62277 = gamma_bb*gcaa*t62249*(1.6E1/3.0);
                double t62278 = t62213*t62214*t62248*(1.6E1/3.0);
                double t62279 = t62277+t62278;
                double t62280 = 1.0/(t62246*t62246);
                double t62281 = t62261+t62262+t62263+t62264-ccaa1*t62213*t62214*t62265*t62248*(8.0/3.0)-ccaa2*t62220*t62213*t62214*t62280*t62279-ccaa4*t62215*t62216*t62217*t62275*t62276-ccaa3*gamma_bb*gcaa*t62213*t62214*t62270*t62219*t62269;
                double t62282 = c0f*t62227*t62229*2.0;
                double t62283 = c0p*t62203*t62212*2.0;
                double t62284 = 1.0/pow(rho_b,1.0E1);
                double t62285 = 1.0/pow(rho_b,2.2E1/3.0);
                double t62286 = 1.0/pow(rho_b,1.4E1/3.0);
                double t62287 = 1.0/pow(rho_b,3.8E1/3.0);
                double t62288 = ccaa4*t62215*t62216*t62217*t62235;
                double t62289 = ccaa1*gamma_bb*gcaa*t62218*t62238;
                double t62290 = ccaa3*gamma_bb*gcaa*t62213*t62214*t62243*t62219;
                double t62291 = ccaa2*t62220*t62213*t62214*t62247;
                double t62292 = ccaa0+t62290+t62291+t62288+t62289;
                double t62293 = 1.0/pow(rho_b,7.0/3.0);
                double t62294 = 1.0/pow(t62176,3.0/2.0);
                double t62295 = t62258*t62258;
                double t62296 = t62210*t62210;
                double t62297 = 1.0/(t62191*t62191*t62191);
                double t62298 = t62203*t62204*t62296*t62297*2.0;
                double t62299 = b4p*t62181*t62218*(1.0E1/9.0);
                double t62300 = b2p*c*t62293*(4.0/9.0);
                double t62301 = b3p*t62181*t62218*t62193*(1.0/1.2E1);
                double t62302 = b1p*c*t62193*t62293*(2.0/9.0);
                double t62303 = b3p*c*t62293*t62177*(2.0/3.0);
                double t62304 = t62300+t62301+t62302+t62303+t62299-b1p*t62181*t62218*t62294*(1.0/3.6E1);
                double t62305 = 1.0/(t62201*t62201);
                double t62306 = 1.0/(t62191*t62191*t62191*t62191);
                double t62307 = a1p*c*c0p*t62212*t62293*(8.0/9.0);
                v_rho_b_rho_b[Q] += scale * t62281*(t62283+t62223*t62226*(t62282-c0p*t62203*t62212*2.0))*2.0+t62292*(-t62211+t62260+t62223*t62226*(t62211+t62259-t62252*t62253*t62229*t62258-a1p*c*c0p*t62212*t62186*(2.0/3.0)))*2.0+rho_b*t62292*(-t62307-t62298+t62223*t62226*(t62307+t62298-t62203*t62204*t62205*t62304-t62252*t62229*1.0/(t62185*t62185*t62185)*t62295*2.0+t62252*t62253*t62229*(b2f*c*t62293*(4.0/9.0)+b4f*t62181*t62218*(1.0E1/9.0)+b1f*c*t62193*t62293*(2.0/9.0)+b3f*c*t62293*t62177*(2.0/3.0)-b1f*t62181*t62218*t62294*(1.0/3.6E1)+b3f*t62181*t62218*t62193*(1.0/1.2E1))+t62229*1.0/(t62185*t62185*t62185*t62185)*t62194*t62295*1.0/(t62197*t62197)*(1.0/2.0)-a1f*c*c0f*t62227*t62293*(8.0/9.0)-t62203*t62305*t62306*t62296*t62198*(1.0/2.0)+a1f*c*t62252*t62253*t62186*t62258*(2.0/3.0)-a1p*c*t62210*t62204*t62205*t62186*(2.0/3.0))+t62203*t62204*t62205*t62304+t62203*t62305*t62306*t62296*t62198*(1.0/2.0)+a1p*c*t62210*t62204*t62205*t62186*(2.0/3.0))-rho_b*t62281*(-t62211+t62260+t62223*t62226*(t62211-t62260+t62259-t62252*t62253*t62229*t62258))*2.0-rho_b*(t62283+t62223*t62226*(t62282-t62283))*(ccaa1*gamma_bb*gcaa*t62238*t62286*(8.8E1/9.0)-ccaa1*t62213*t62214*t62265*t62285*2.4E1+ccaa2*t62213*t62214*t62247*t62285*(3.04E2/9.0)+ccaa4*t62215*t62216*t62235*t62287*(1.12E3/9.0)-ccaa2*t62213*t62214*t62280*t62248*t62279*(3.2E1/3.0)-ccaa4*t62215*t62251*t62216*t62275*t62276*(6.4E1/3.0)-ccaa2*t62220*t62213*t62214*t62280*(gamma_bb*gcaa*t62286*(1.76E2/9.0)+t62213*t62214*t62285*(3.04E2/9.0))-ccaa4*t62215*t62216*t62217*t62276*(gamma_bb*gcaa*t62286*(3.52E2/9.0)+t62213*t62214*t62285*(6.08E2/3.0)+t62215*t62216*t62287*(1.12E3/9.0)+gamma_bb*gcaa*t62213*t62214*t62284*2.88E2)+ccaa2*t62220*t62213*t62214*1.0/(t62246*t62246*t62246)*(t62279*t62279)*2.0+ccaa4*t62215*t62216*1.0/(t62234*t62234*t62234)*t62217*(t62275*t62275)*2.0+ccaa3*gamma_bb*gcaa*t62213*t62214*t62243*t62284*7.2E1+ccaa1*gamma_bb*gcaa*t62213*t62214*1.0/(t62237*t62237*t62237)*t62284*(1.28E2/9.0)+ccaa3*gamma_bb*gcaa*t62213*t62214*1.0/(t62242*t62242*t62242)*t62219*(t62269*t62269)*2.0-ccaa3*gamma_bb*gcaa*t62213*t62214*t62270*t62219*(gamma_bb*gcaa*t62286*(8.8E1/3.0)+t62213*t62214*t62285*(3.04E2/3.0)+gamma_bb*gcaa*t62213*t62214*t62284*7.2E1)-ccaa3*gamma_bb*gcaa*t62213*t62214*t62250*t62270*t62269*1.6E1);
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t62432 = 1.0/pow(rho_b,1.0/3.0);
                double t62433 = c*t62432;
                double t62434 = sqrt(t62433);
                double t62435 = pow(t62433,3.0/2.0);
                double t62436 = c*c;
                double t62437 = 1.0/pow(rho_b,2.0/3.0);
                double t62438 = 1.0/c0p;
                double t62439 = b1p*t62434;
                double t62440 = b3p*t62435;
                double t62441 = b4p*t62436*t62437;
                double t62442 = b2p*c*t62432;
                double t62443 = t62440+t62441+t62442+t62439;
                double t62444 = 1.0/t62443;
                double t62445 = t62444*t62438*(1.0/2.0);
                double t62446 = t62445+1.0;
                double t62447 = log(t62446);
                double t62448 = a1p*c*t62432;
                double t62449 = t62448+1.0;
                double t62450 = gcaa*gcaa;
                double t62451 = 1.0/pow(rho_b,1.6E1/3.0);
                double t62452 = 1.0/pow(rho_b,8.0/3.0);
                double t62453 = gamma_bb*gamma_bb;
                double t62454 = t62450*t62450;
                double t62455 = 1.0/pow(rho_b,3.2E1/3.0);
                double t62456 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62457 = gamma_bb*gcaa*t62452;
                double t62458 = t62457+1.0;
                double t62459 = gamma_bb*gcaa*t62452*2.0;
                double t62460 = t62450*t62451*t62453;
                double t62461 = t62460+t62459+1.0;
                double t62462 = gamma_bb*gcaa*t62452*3.0;
                double t62463 = gamma_bb*gcaa*t62450*t62453*t62456;
                double t62464 = t62450*t62451*t62453*3.0;
                double t62465 = t62462+t62463+t62464+1.0;
                double t62466 = t62453*t62453;
                double t62482 = gcaa*t62452*4.0;
                double t62483 = gamma_bb*t62450*t62451*1.2E1;
                double t62484 = gcaa*t62450*t62453*t62456*1.2E1;
                double t62485 = gamma_bb*t62453*t62454*t62455*4.0;
                double t62467 = t62482+t62483+t62484+t62485;
                double t62468 = gamma_bb*gcaa*t62452*4.0;
                double t62469 = gamma_bb*gcaa*t62450*t62453*t62456*4.0;
                double t62470 = t62450*t62451*t62453*6.0;
                double t62471 = t62454*t62455*t62466;
                double t62472 = t62470+t62471+t62468+t62469+1.0;
                double t62475 = gcaa*t62452*2.0;
                double t62476 = gamma_bb*t62450*t62451*2.0;
                double t62473 = t62475+t62476;
                double t62474 = 1.0/(t62465*t62465);
                double t62477 = 1.0/(t62461*t62461);
                double t62478 = gcaa*t62452*3.0;
                double t62479 = gamma_bb*t62450*t62451*6.0;
                double t62480 = gcaa*t62450*t62453*t62456*3.0;
                double t62481 = t62480+t62478+t62479;
                double t62486 = 1.0/(t62472*t62472);
                v_gamma_bb_gamma_bb[Q] += scale * -rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t62434+b3f*t62435+b2f*c*t62432+b4f*t62436*t62437))+1.0)*(a1f*c*t62432+1.0)*2.0-c0p*t62447*t62449*2.0))/(two_13*2.0-2.0)+c0p*t62447*t62449*2.0)*((ccaa2*t62450*t62451*2.0)/t62461-ccaa1*t62450*t62451*1.0/(t62458*t62458)*2.0-ccaa2*t62453*t62454*t62455*t62477*2.0+(ccaa4*t62453*t62454*t62455*1.2E1)/t62472-ccaa4*t62454*t62455*t62466*t62486*(t62450*t62451*1.2E1+t62453*t62454*t62455*1.2E1+gamma_bb*gcaa*t62450*t62456*2.4E1)+(ccaa3*gamma_bb*gcaa*t62450*t62456*6.0)/t62465+ccaa1*gamma_bb*gcaa*t62450*t62456*1.0/(t62458*t62458*t62458)*2.0+ccaa2*t62450*t62451*1.0/(t62461*t62461*t62461)*t62453*(t62473*t62473)*2.0+ccaa4*t62454*1.0/(t62472*t62472*t62472)*t62455*t62466*(t62467*t62467)*2.0-ccaa2*gamma_bb*t62450*t62451*t62473*t62477*4.0-ccaa4*gamma_bb*t62453*t62454*t62455*t62467*t62486*8.0-ccaa3*gcaa*t62450*t62453*t62481*t62456*t62474*6.0-ccaa3*gamma_bb*gcaa*t62450*t62453*t62456*t62474*(t62450*t62451*6.0+gamma_bb*gcaa*t62450*t62456*6.0)+ccaa3*gamma_bb*gcaa*t62450*t62453*(t62481*t62481)*t62456*1.0/(t62465*t62465*t62465)*2.0);
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t62314 = 1.0/pow(rho_b,1.0/3.0);
                double t62315 = c*t62314;
                double t62316 = sqrt(t62315);
                double t62317 = pow(t62315,3.0/2.0);
                double t62318 = c*c;
                double t62319 = 1.0/pow(rho_b,2.0/3.0);
                double t62320 = 1.0/c0p;
                double t62321 = b1p*t62316;
                double t62322 = b3p*t62317;
                double t62323 = b4p*t62318*t62319;
                double t62324 = b2p*c*t62314;
                double t62325 = t62321+t62322+t62323+t62324;
                double t62326 = 1.0/t62325;
                double t62327 = t62320*t62326*(1.0/2.0);
                double t62328 = t62327+1.0;
                double t62329 = log(t62328);
                double t62330 = a1p*c*t62314;
                double t62331 = t62330+1.0;
                double t62332 = 1.0/pow(rho_b,8.0/3.0);
                double t62333 = gamma_bb*gamma_bb;
                double t62334 = gcaa*gcaa;
                double t62335 = t62334*t62334;
                double t62336 = 1.0/pow(rho_b,3.2E1/3.0);
                double t62337 = 1.0/pow(rho_b,1.6E1/3.0);
                double t62338 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62339 = gamma_bb*gcaa*t62332;
                double t62340 = t62339+1.0;
                double t62341 = gamma_bb*gcaa*t62332*3.0;
                double t62342 = gamma_bb*gcaa*t62333*t62334*t62338;
                double t62343 = t62333*t62334*t62337*3.0;
                double t62344 = t62341+t62342+t62343+1.0;
                double t62345 = t62333*t62333;
                double t62346 = gamma_bb*gcaa*t62332*4.0;
                double t62347 = gamma_bb*gcaa*t62333*t62334*t62338*4.0;
                double t62348 = t62333*t62334*t62337*6.0;
                double t62349 = t62335*t62336*t62345;
                double t62350 = t62346+t62347+t62348+t62349+1.0;
                double t62351 = gamma_bb*gcaa*t62332*2.0;
                double t62352 = t62333*t62334*t62337;
                double t62353 = t62351+t62352+1.0;
                double t62354 = pow(2.0,1.0/3.0);
                double t62355 = t62354*2.0;
                double t62356 = t62355-2.0;
                double t62357 = two_13*2.0;
                double t62358 = t62357-2.0;
                double t62359 = 1.0/t62358;
                double t62360 = 1.0/c0f;
                double t62361 = b1f*t62316;
                double t62362 = b3f*t62317;
                double t62363 = b4f*t62318*t62319;
                double t62364 = b2f*c*t62314;
                double t62365 = t62361+t62362+t62363+t62364;
                double t62366 = 1.0/t62365;
                double t62367 = t62360*t62366*(1.0/2.0);
                double t62368 = t62367+1.0;
                double t62369 = log(t62368);
                double t62370 = a1f*c*t62314;
                double t62371 = t62370+1.0;
                double t62372 = c0f*t62371*t62369*2.0;
                double t62373 = c0p*t62331*t62329*2.0;
                double t62374 = 1.0/t62340;
                double t62375 = 1.0/t62350;
                double t62376 = 1.0/t62353;
                double t62377 = 1.0/t62344;
                double t62378 = 1.0/pow(rho_b,1.9E1/3.0);
                double t62379 = 1.0/(t62340*t62340);
                double t62380 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t62381 = 1.0/pow(rho_b,1.1E1/3.0);
                double t62382 = 1.0/(t62344*t62344);
                double t62383 = 1.0/(t62353*t62353);
                double t62384 = gcaa*t62332*3.0;
                double t62385 = gamma_bb*t62334*t62337*6.0;
                double t62386 = gcaa*t62333*t62334*t62338*3.0;
                double t62387 = t62384+t62385+t62386;
                double t62388 = 1.0/pow(rho_b,3.5E1/3.0);
                double t62389 = 1.0/(t62350*t62350);
                double t62390 = gcaa*t62332*4.0;
                double t62391 = gamma_bb*t62334*t62337*1.2E1;
                double t62392 = gcaa*t62333*t62334*t62338*1.2E1;
                double t62393 = gamma_bb*t62333*t62335*t62336*4.0;
                double t62394 = t62390+t62391+t62392+t62393;
                double t62395 = gcaa*t62332*2.0;
                double t62396 = gamma_bb*t62334*t62337*2.0;
                double t62397 = t62395+t62396;
                double t62398 = gamma_bb*gcaa*t62381*(1.6E1/3.0);
                double t62399 = t62333*t62334*t62378*(1.6E1/3.0);
                double t62400 = t62398+t62399;
                double t62401 = gamma_bb*gcaa*t62381*8.0;
                double t62402 = gamma_bb*gcaa*t62333*t62334*t62380*8.0;
                double t62403 = t62333*t62334*t62378*1.6E1;
                double t62404 = t62401+t62402+t62403;
                double t62405 = gamma_bb*gcaa*t62381*(3.2E1/3.0);
                double t62406 = gamma_bb*gcaa*t62333*t62334*t62380*3.2E1;
                double t62407 = t62333*t62334*t62378*3.2E1;
                double t62408 = t62335*t62345*t62388*(3.2E1/3.0);
                double t62409 = t62405+t62406+t62407+t62408;
                double t62410 = 1.0/pow(rho_b,4.0/3.0);
                double t62411 = 1.0/pow(rho_b,5.0/3.0);
                double t62412 = 1.0/sqrt(t62315);
                double t62413 = 1.0/t62328;
                double t62414 = 1.0/(t62325*t62325);
                double t62415 = b4p*t62411*t62318*(2.0/3.0);
                double t62416 = b2p*c*t62410*(1.0/3.0);
                double t62417 = b1p*c*t62410*t62412*(1.0/6.0);
                double t62418 = b3p*c*t62410*t62316*(1.0/2.0);
                double t62419 = t62415+t62416+t62417+t62418;
                double t62420 = t62331*t62413*t62414*t62419;
                double t62421 = ccaa1*gcaa*t62332*t62374;
                double t62422 = ccaa4*gamma_bb*t62333*t62335*t62336*t62375*4.0;
                double t62423 = ccaa2*gamma_bb*t62334*t62337*t62376*2.0;
                double t62424 = ccaa3*gcaa*t62333*t62334*t62338*t62377*3.0;
                double t62425 = t62421+t62422+t62423+t62424-ccaa1*gamma_bb*t62334*t62337*t62379-ccaa2*t62333*t62334*t62337*t62383*t62397-ccaa4*t62335*t62336*t62345*t62394*t62389-ccaa3*gamma_bb*gcaa*t62333*t62334*t62382*t62338*t62387;
                v_rho_b_gamma_bb[Q] += scale * -t62425*(t62373+t62356*t62359*(t62372-c0p*t62331*t62329*2.0))+rho_b*t62425*(-t62420+t62356*t62359*(t62420-(t62371*1.0/(t62365*t62365)*(b2f*c*t62410*(1.0/3.0)+b4f*t62411*t62318*(2.0/3.0)+b1f*c*t62410*t62412*(1.0/6.0)+b3f*c*t62410*t62316*(1.0/2.0)))/t62368+a1f*c*c0f*t62410*t62369*(2.0/3.0)-a1p*c*c0p*t62410*t62329*(2.0/3.0))+a1p*c*c0p*t62410*t62329*(2.0/3.0))-rho_b*(t62373+t62356*t62359*(t62372-t62373))*(ccaa1*gcaa*t62381*t62374*(-8.0/3.0)-ccaa2*gamma_bb*t62334*t62376*t62378*(3.2E1/3.0)+ccaa1*gamma_bb*t62334*t62378*t62379*8.0+ccaa2*t62333*t62334*t62383*t62378*t62397*(1.6E1/3.0)+ccaa4*t62335*t62345*t62394*t62388*t62389*(3.2E1/3.0)+ccaa4*t62335*t62336*t62345*t62389*(gcaa*t62381*(3.2E1/3.0)+gamma_bb*t62334*t62378*6.4E1+gamma_bb*t62333*t62335*t62388*(1.28E2/3.0)+gcaa*t62333*t62334*t62380*9.6E1)-ccaa1*gcaa*1.0/(t62340*t62340*t62340)*t62333*t62334*t62380*(1.6E1/3.0)+ccaa2*t62333*t62334*t62337*t62383*(gcaa*t62381*(1.6E1/3.0)+gamma_bb*t62334*t62378*(3.2E1/3.0))+ccaa2*gamma_bb*t62400*t62334*t62337*t62383*2.0-ccaa4*gamma_bb*t62333*t62335*t62375*t62388*(1.28E2/3.0)-ccaa3*gcaa*t62333*t62334*t62380*t62377*2.4E1+ccaa4*gamma_bb*t62333*t62335*t62336*t62409*t62389*4.0+ccaa3*gcaa*t62404*t62333*t62334*t62382*t62338*3.0-ccaa2*t62400*t62333*t62334*1.0/(t62353*t62353*t62353)*t62337*t62397*2.0-ccaa4*1.0/(t62350*t62350*t62350)*t62335*t62336*t62345*t62409*t62394*2.0+ccaa3*gamma_bb*gcaa*t62333*t62334*t62382*t62338*(gcaa*t62381*8.0+gamma_bb*t62334*t62378*3.2E1+gcaa*t62333*t62334*t62380*2.4E1)+ccaa3*gamma_bb*gcaa*t62333*t62334*t62380*t62382*t62387*8.0-ccaa3*gamma_bb*gcaa*t62404*t62333*t62334*1.0/(t62344*t62344*t62344)*t62338*t62387*2.0);
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t62501 = 1.0/pow(rho_a,1.0/3.0);
                double t62502 = c*t62501;
                double t62503 = sqrt(t62502);
                double t62504 = pow(t62502,3.0/2.0);
                double t62505 = c*c;
                double t62506 = 1.0/pow(rho_a,2.0/3.0);
                double t62507 = 1.0/c0p;
                double t62508 = b1p*t62503;
                double t62509 = b3p*t62504;
                double t62510 = b4p*t62505*t62506;
                double t62511 = b2p*c*t62501;
                double t62512 = t62510+t62511+t62508+t62509;
                double t62513 = 1.0/t62512;
                double t62514 = t62513*t62507*(1.0/2.0);
                double t62515 = t62514+1.0;
                double t62516 = log(t62515);
                double t62517 = a1p*c*t62501;
                double t62518 = t62517+1.0;
                double t62519 = gamma_aa*gamma_aa;
                double t62520 = gcaa*gcaa;
                double t62521 = t62519*t62519;
                double t62522 = t62520*t62520;
                double t62523 = 1.0/pow(rho_a,3.2E1/3.0);
                double t62524 = 1.0/pow(rho_a,8.0/3.0);
                double t62525 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62526 = 1.0/pow(rho_a,1.6E1/3.0);
                v[Q] += scale * -rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t62503+b3f*t62504+b2f*c*t62501+b4f*t62505*t62506))+1.0)*(a1f*c*t62501+1.0)*2.0-c0p*t62516*t62518*2.0))/(two_13*2.0-2.0)+c0p*t62516*t62518*2.0)*(ccaa0+(ccaa2*t62520*t62526*t62519)/(gamma_aa*gcaa*t62524*2.0+t62520*t62526*t62519+1.0)+(ccaa1*gamma_aa*gcaa*t62524)/(gamma_aa*gcaa*t62524+1.0)+(ccaa4*t62521*t62522*t62523)/(gamma_aa*gcaa*t62524*4.0+t62521*t62522*t62523+t62520*t62526*t62519*6.0+gamma_aa*gcaa*t62520*t62525*t62519*4.0+1.0)+(ccaa3*gamma_aa*gcaa*t62520*t62525*t62519)/(gamma_aa*gcaa*t62524*3.0+t62520*t62526*t62519*3.0+gamma_aa*gcaa*t62520*t62525*t62519+1.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t62528 = 1.0/pow(rho_a,1.0/3.0);
                double t62529 = c*t62528;
                double t62530 = sqrt(t62529);
                double t62531 = pow(t62529,3.0/2.0);
                double t62532 = c*c;
                double t62533 = 1.0/pow(rho_a,2.0/3.0);
                double t62534 = 1.0/c0p;
                double t62535 = b1p*t62530;
                double t62536 = b3p*t62531;
                double t62537 = b4p*t62532*t62533;
                double t62538 = b2p*c*t62528;
                double t62539 = t62535+t62536+t62537+t62538;
                double t62540 = 1.0/t62539;
                double t62541 = t62540*t62534*(1.0/2.0);
                double t62542 = t62541+1.0;
                double t62543 = log(t62542);
                double t62544 = a1p*c*t62528;
                double t62545 = t62544+1.0;
                double t62546 = gamma_aa*gamma_aa;
                double t62547 = gcaa*gcaa;
                double t62548 = t62546*t62546;
                double t62549 = t62547*t62547;
                double t62550 = 1.0/pow(rho_a,3.2E1/3.0);
                double t62551 = 1.0/pow(rho_a,8.0/3.0);
                double t62552 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62553 = 1.0/pow(rho_a,1.6E1/3.0);
                double t62554 = pow(2.0,1.0/3.0);
                double t62555 = t62554*2.0;
                double t62556 = t62555-2.0;
                double t62557 = two_13*2.0;
                double t62558 = t62557-2.0;
                double t62559 = 1.0/t62558;
                double t62560 = 1.0/c0f;
                double t62561 = b1f*t62530;
                double t62562 = b3f*t62531;
                double t62563 = b4f*t62532*t62533;
                double t62564 = b2f*c*t62528;
                double t62565 = t62561+t62562+t62563+t62564;
                double t62566 = 1.0/t62565;
                double t62567 = t62560*t62566*(1.0/2.0);
                double t62568 = t62567+1.0;
                double t62569 = log(t62568);
                double t62570 = a1f*c*t62528;
                double t62571 = t62570+1.0;
                double t62572 = c0f*t62571*t62569*2.0;
                double t62573 = c0p*t62543*t62545*2.0;
                double t62574 = gamma_aa*gcaa*t62551*4.0;
                double t62575 = gamma_aa*gcaa*t62552*t62546*t62547*4.0;
                double t62576 = t62553*t62546*t62547*6.0;
                double t62577 = t62550*t62548*t62549;
                double t62578 = t62574+t62575+t62576+t62577+1.0;
                double t62579 = 1.0/t62578;
                double t62580 = gamma_aa*gcaa*t62551;
                double t62581 = t62580+1.0;
                double t62582 = 1.0/t62581;
                double t62583 = gamma_aa*gcaa*t62551*3.0;
                double t62584 = gamma_aa*gcaa*t62552*t62546*t62547;
                double t62585 = t62553*t62546*t62547*3.0;
                double t62586 = t62583+t62584+t62585+1.0;
                double t62587 = 1.0/t62586;
                double t62588 = gamma_aa*gcaa*t62551*2.0;
                double t62589 = t62553*t62546*t62547;
                double t62590 = t62588+t62589+1.0;
                double t62591 = 1.0/t62590;
                double t62592 = 1.0/pow(rho_a,1.9E1/3.0);
                double t62593 = 1.0/pow(rho_a,1.1E1/3.0);
                double t62594 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62595 = 1.0/pow(rho_a,3.5E1/3.0);
                double t62596 = 1.0/pow(rho_a,4.0/3.0);
                double t62597 = 1.0/pow(rho_a,5.0/3.0);
                double t62598 = 1.0/sqrt(t62529);
                double t62599 = 1.0/t62542;
                double t62600 = 1.0/(t62539*t62539);
                double t62601 = b4p*t62532*t62597*(2.0/3.0);
                double t62602 = b2p*c*t62596*(1.0/3.0);
                double t62603 = b1p*c*t62596*t62598*(1.0/6.0);
                double t62604 = b3p*c*t62530*t62596*(1.0/2.0);
                double t62605 = t62601+t62602+t62603+t62604;
                double t62606 = t62600*t62605*t62545*t62599;
                double t62607 = ccaa4*t62550*t62548*t62549*t62579;
                double t62608 = ccaa1*gamma_aa*gcaa*t62551*t62582;
                double t62609 = ccaa3*gamma_aa*gcaa*t62552*t62546*t62547*t62587;
                double t62610 = ccaa2*t62553*t62546*t62591*t62547;
                double t62611 = ccaa0+t62610+t62607+t62608+t62609;
                v_rho_a[Q] += scale * -t62611*(t62573+t62556*t62559*(t62572-c0p*t62543*t62545*2.0))+rho_a*t62611*(-t62606+t62556*t62559*(t62606-(t62571*1.0/(t62565*t62565)*(b2f*c*t62596*(1.0/3.0)+b4f*t62532*t62597*(2.0/3.0)+b1f*c*t62596*t62598*(1.0/6.0)+b3f*c*t62530*t62596*(1.0/2.0)))/t62568+a1f*c*c0f*t62569*t62596*(2.0/3.0)-a1p*c*c0p*t62543*t62596*(2.0/3.0))+a1p*c*c0p*t62543*t62596*(2.0/3.0))+rho_a*(t62573+t62556*t62559*(t62572-t62573))*(ccaa1*gamma_aa*gcaa*t62582*t62593*(8.0/3.0)+ccaa2*t62546*t62591*t62547*t62592*(1.6E1/3.0)+ccaa4*t62548*t62549*t62595*t62579*(3.2E1/3.0)-ccaa1*1.0/(t62581*t62581)*t62546*t62547*t62592*(8.0/3.0)-ccaa2*t62553*1.0/(t62590*t62590)*t62546*t62547*(gamma_aa*gcaa*t62593*(1.6E1/3.0)+t62546*t62547*t62592*(1.6E1/3.0))-ccaa4*t62550*t62548*t62549*1.0/(t62578*t62578)*(gamma_aa*gcaa*t62593*(3.2E1/3.0)+t62546*t62547*t62592*3.2E1+t62548*t62549*t62595*(3.2E1/3.0)+gamma_aa*gcaa*t62546*t62547*t62594*3.2E1)+ccaa3*gamma_aa*gcaa*t62546*t62547*t62594*t62587*8.0-ccaa3*gamma_aa*gcaa*t62552*t62546*t62547*1.0/(t62586*t62586)*(gamma_aa*gcaa*t62593*8.0+t62546*t62547*t62592*1.6E1+gamma_aa*gcaa*t62546*t62547*t62594*8.0));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t62614 = 1.0/pow(rho_a,1.0/3.0);
                double t62615 = c*t62614;
                double t62616 = sqrt(t62615);
                double t62617 = pow(t62615,3.0/2.0);
                double t62618 = c*c;
                double t62619 = 1.0/pow(rho_a,2.0/3.0);
                double t62620 = 1.0/c0p;
                double t62621 = b1p*t62616;
                double t62622 = b3p*t62617;
                double t62623 = b4p*t62618*t62619;
                double t62624 = b2p*c*t62614;
                double t62625 = t62621+t62622+t62623+t62624;
                double t62626 = 1.0/t62625;
                double t62627 = t62620*t62626*(1.0/2.0);
                double t62628 = t62627+1.0;
                double t62629 = log(t62628);
                double t62630 = a1p*c*t62614;
                double t62631 = t62630+1.0;
                double t62632 = 1.0/pow(rho_a,8.0/3.0);
                double t62633 = gamma_aa*gamma_aa;
                double t62634 = gcaa*gcaa;
                double t62635 = t62634*t62634;
                double t62636 = 1.0/pow(rho_a,3.2E1/3.0);
                double t62637 = 1.0/pow(rho_a,1.6E1/3.0);
                double t62638 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62639 = gamma_aa*gcaa*t62632;
                double t62640 = t62639+1.0;
                double t62641 = gamma_aa*gcaa*t62632*3.0;
                double t62642 = gamma_aa*gcaa*t62633*t62634*t62638;
                double t62643 = t62633*t62634*t62637*3.0;
                double t62644 = t62641+t62642+t62643+1.0;
                double t62645 = t62633*t62633;
                double t62646 = gamma_aa*gcaa*t62632*4.0;
                double t62647 = gamma_aa*gcaa*t62633*t62634*t62638*4.0;
                double t62648 = t62633*t62634*t62637*6.0;
                double t62649 = t62635*t62636*t62645;
                double t62650 = t62646+t62647+t62648+t62649+1.0;
                double t62651 = gamma_aa*gcaa*t62632*2.0;
                double t62652 = t62633*t62634*t62637;
                double t62653 = t62651+t62652+1.0;
                v_gamma_aa[Q] += scale * -rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t62616+b3f*t62617+b2f*c*t62614+b4f*t62618*t62619))+1.0)*(a1f*c*t62614+1.0)*2.0-c0p*t62631*t62629*2.0))/(two_13*2.0-2.0)+c0p*t62631*t62629*2.0)*((ccaa1*gcaa*t62632)/t62640-ccaa1*gamma_aa*1.0/(t62640*t62640)*t62634*t62637+(ccaa2*gamma_aa*t62634*t62637*2.0)/t62653-ccaa2*t62633*t62634*1.0/(t62653*t62653)*t62637*(gcaa*t62632*2.0+gamma_aa*t62634*t62637*2.0)+(ccaa4*gamma_aa*t62633*t62635*t62636*4.0)/t62650+(ccaa3*gcaa*t62633*t62634*t62638*3.0)/t62644-ccaa4*1.0/(t62650*t62650)*t62635*t62636*t62645*(gcaa*t62632*4.0+gamma_aa*t62634*t62637*1.2E1+gamma_aa*t62633*t62635*t62636*4.0+gcaa*t62633*t62634*t62638*1.2E1)-ccaa3*gamma_aa*gcaa*t62633*t62634*1.0/(t62644*t62644)*t62638*(gcaa*t62632*3.0+gamma_aa*t62634*t62637*6.0+gcaa*t62633*t62634*t62638*3.0));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t62659 = 1.0/pow(rho_a,1.0/3.0);
                double t62660 = c*t62659;
                double t62661 = sqrt(t62660);
                double t62662 = b1f*t62661;
                double t62663 = pow(t62660,3.0/2.0);
                double t62664 = b3f*t62663;
                double t62665 = c*c;
                double t62666 = 1.0/pow(rho_a,2.0/3.0);
                double t62667 = b4f*t62665*t62666;
                double t62668 = b2f*c*t62659;
                double t62669 = t62662+t62664+t62667+t62668;
                double t62670 = 1.0/pow(rho_a,4.0/3.0);
                double t62671 = b1p*t62661;
                double t62672 = b3p*t62663;
                double t62673 = b4p*t62665*t62666;
                double t62674 = b2p*c*t62659;
                double t62675 = t62671+t62672+t62673+t62674;
                double t62676 = 1.0/pow(rho_a,5.0/3.0);
                double t62677 = 1.0/sqrt(t62660);
                double t62678 = 1.0/c0f;
                double t62679 = 1.0/t62669;
                double t62680 = t62678*t62679*(1.0/2.0);
                double t62681 = t62680+1.0;
                double t62682 = 1.0/c0p;
                double t62683 = 1.0/t62675;
                double t62684 = t62682*t62683*(1.0/2.0);
                double t62685 = t62684+1.0;
                double t62686 = a1p*c*t62659;
                double t62687 = t62686+1.0;
                double t62688 = 1.0/t62685;
                double t62689 = 1.0/(t62675*t62675);
                double t62690 = b4p*t62665*t62676*(2.0/3.0);
                double t62691 = b2p*c*t62670*(1.0/3.0);
                double t62692 = b1p*c*t62670*t62677*(1.0/6.0);
                double t62693 = b3p*c*t62661*t62670*(1.0/2.0);
                double t62694 = t62690+t62691+t62692+t62693;
                double t62695 = t62694*t62687*t62688*t62689;
                double t62696 = log(t62685);
                double t62697 = gamma_aa*gamma_aa;
                double t62698 = gcaa*gcaa;
                double t62699 = t62697*t62697;
                double t62700 = t62698*t62698;
                double t62701 = 1.0/pow(rho_a,3.2E1/3.0);
                double t62702 = 1.0/pow(rho_a,8.0/3.0);
                double t62703 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62704 = 1.0/pow(rho_a,1.6E1/3.0);
                double t62705 = pow(2.0,1.0/3.0);
                double t62706 = t62705*2.0;
                double t62707 = t62706-2.0;
                double t62708 = two_13*2.0;
                double t62709 = t62708-2.0;
                double t62710 = 1.0/t62709;
                double t62711 = log(t62681);
                double t62712 = a1f*c*t62659;
                double t62713 = t62712+1.0;
                double t62714 = gamma_aa*gcaa*t62702*4.0;
                double t62715 = gamma_aa*gcaa*t62703*t62697*t62698*4.0;
                double t62716 = t62704*t62697*t62698*6.0;
                double t62717 = t62700*t62701*t62699;
                double t62718 = t62714+t62715+t62716+t62717+1.0;
                double t62719 = 1.0/t62718;
                double t62720 = gamma_aa*gcaa*t62702;
                double t62721 = t62720+1.0;
                double t62722 = 1.0/t62721;
                double t62723 = gamma_aa*gcaa*t62702*3.0;
                double t62724 = gamma_aa*gcaa*t62703*t62697*t62698;
                double t62725 = t62704*t62697*t62698*3.0;
                double t62726 = t62723+t62724+t62725+1.0;
                double t62727 = 1.0/t62726;
                double t62728 = gamma_aa*gcaa*t62702*2.0;
                double t62729 = t62704*t62697*t62698;
                double t62730 = t62728+t62729+1.0;
                double t62731 = 1.0/t62730;
                double t62732 = 1.0/pow(rho_a,1.9E1/3.0);
                double t62733 = 1.0/pow(rho_a,1.1E1/3.0);
                double t62734 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62735 = 1.0/pow(rho_a,3.5E1/3.0);
                double t62736 = 1.0/t62681;
                double t62737 = 1.0/(t62669*t62669);
                double t62738 = b4f*t62665*t62676*(2.0/3.0);
                double t62739 = b2f*c*t62670*(1.0/3.0);
                double t62740 = b1f*c*t62670*t62677*(1.0/6.0);
                double t62741 = b3f*c*t62661*t62670*(1.0/2.0);
                double t62742 = t62740+t62741+t62738+t62739;
                double t62743 = a1f*c*c0f*t62711*t62670*(2.0/3.0);
                double t62744 = a1p*c*c0p*t62670*t62696*(2.0/3.0);
                double t62745 = ccaa4*t62700*t62735*t62719*t62699*(3.2E1/3.0);
                double t62746 = ccaa1*gamma_aa*gcaa*t62722*t62733*(8.0/3.0);
                double t62747 = ccaa3*gamma_aa*gcaa*t62734*t62727*t62697*t62698*8.0;
                double t62748 = ccaa2*t62731*t62732*t62697*t62698*(1.6E1/3.0);
                double t62749 = 1.0/(t62721*t62721);
                double t62750 = gamma_aa*gcaa*t62733*8.0;
                double t62751 = gamma_aa*gcaa*t62734*t62697*t62698*8.0;
                double t62752 = t62732*t62697*t62698*1.6E1;
                double t62753 = t62750+t62751+t62752;
                double t62754 = 1.0/(t62726*t62726);
                double t62755 = gamma_aa*gcaa*t62733*(3.2E1/3.0);
                double t62756 = gamma_aa*gcaa*t62734*t62697*t62698*3.2E1;
                double t62757 = t62732*t62697*t62698*3.2E1;
                double t62758 = t62700*t62735*t62699*(3.2E1/3.0);
                double t62759 = t62755+t62756+t62757+t62758;
                double t62760 = 1.0/(t62718*t62718);
                double t62761 = gamma_aa*gcaa*t62733*(1.6E1/3.0);
                double t62762 = t62732*t62697*t62698*(1.6E1/3.0);
                double t62763 = t62761+t62762;
                double t62764 = 1.0/(t62730*t62730);
                double t62765 = t62745+t62746+t62747+t62748-ccaa1*t62732*t62749*t62697*t62698*(8.0/3.0)-ccaa4*t62700*t62701*t62760*t62759*t62699-ccaa2*t62704*t62763*t62764*t62697*t62698-ccaa3*gamma_aa*gcaa*t62703*t62753*t62754*t62697*t62698;
                double t62766 = c0f*t62711*t62713*2.0;
                double t62767 = c0p*t62687*t62696*2.0;
                double t62768 = 1.0/pow(rho_a,1.0E1);
                double t62769 = 1.0/pow(rho_a,2.2E1/3.0);
                double t62770 = 1.0/pow(rho_a,1.4E1/3.0);
                double t62771 = 1.0/pow(rho_a,3.8E1/3.0);
                double t62772 = ccaa4*t62700*t62701*t62719*t62699;
                double t62773 = ccaa1*gamma_aa*gcaa*t62702*t62722;
                double t62774 = ccaa3*gamma_aa*gcaa*t62703*t62727*t62697*t62698;
                double t62775 = ccaa2*t62704*t62731*t62697*t62698;
                double t62776 = ccaa0+t62772+t62773+t62774+t62775;
                double t62777 = 1.0/pow(rho_a,7.0/3.0);
                double t62778 = 1.0/pow(t62660,3.0/2.0);
                double t62779 = t62742*t62742;
                double t62780 = t62694*t62694;
                double t62781 = 1.0/(t62675*t62675*t62675);
                double t62782 = t62780*t62781*t62687*t62688*2.0;
                double t62783 = b4p*t62702*t62665*(1.0E1/9.0);
                double t62784 = b2p*c*t62777*(4.0/9.0);
                double t62785 = b3p*t62702*t62665*t62677*(1.0/1.2E1);
                double t62786 = b1p*c*t62677*t62777*(2.0/9.0);
                double t62787 = b3p*c*t62661*t62777*(2.0/3.0);
                double t62788 = t62783+t62784+t62785+t62786+t62787-b1p*t62702*t62665*t62778*(1.0/3.6E1);
                double t62789 = 1.0/(t62685*t62685);
                double t62790 = 1.0/(t62675*t62675*t62675*t62675);
                double t62791 = a1p*c*c0p*t62696*t62777*(8.0/9.0);
                v_rho_a_rho_a[Q] += scale * t62765*(t62767+t62710*t62707*(t62766-c0p*t62687*t62696*2.0))*2.0+t62776*(t62744-t62695+t62710*t62707*(t62743+t62695-t62713*t62742*t62736*t62737-a1p*c*c0p*t62670*t62696*(2.0/3.0)))*2.0+rho_a*t62776*(-t62782-t62791+t62710*t62707*(t62782+t62791-t62687*t62688*t62689*t62788-t62713*t62736*1.0/(t62669*t62669*t62669)*t62779*2.0+t62713*t62736*t62737*(b2f*c*t62777*(4.0/9.0)+b4f*t62702*t62665*(1.0E1/9.0)+b1f*c*t62677*t62777*(2.0/9.0)+b3f*c*t62661*t62777*(2.0/3.0)-b1f*t62702*t62665*t62778*(1.0/3.6E1)+b3f*t62702*t62665*t62677*(1.0/1.2E1))+t62713*1.0/(t62681*t62681)*1.0/(t62669*t62669*t62669*t62669)*t62678*t62779*(1.0/2.0)-a1f*c*c0f*t62711*t62777*(8.0/9.0)-t62780*t62682*t62790*t62687*t62789*(1.0/2.0)+a1f*c*t62670*t62742*t62736*t62737*(2.0/3.0)-a1p*c*t62670*t62694*t62688*t62689*(2.0/3.0))+t62687*t62688*t62689*t62788+t62780*t62682*t62790*t62687*t62789*(1.0/2.0)+a1p*c*t62670*t62694*t62688*t62689*(2.0/3.0))-rho_a*t62765*(t62744-t62695+t62710*t62707*(t62743-t62744+t62695-t62713*t62742*t62736*t62737))*2.0-rho_a*(t62767+t62710*t62707*(t62766-t62767))*(ccaa1*gamma_aa*gcaa*t62722*t62770*(8.8E1/9.0)+ccaa4*t62700*t62771*t62719*t62699*(1.12E3/9.0)+ccaa2*t62731*t62697*t62769*t62698*(3.04E2/9.0)-ccaa1*t62749*t62697*t62769*t62698*2.4E1-ccaa4*t62700*t62760*t62735*t62759*t62699*(6.4E1/3.0)-ccaa2*t62732*t62763*t62764*t62697*t62698*(3.2E1/3.0)-ccaa2*t62704*t62764*t62697*t62698*(gamma_aa*gcaa*t62770*(1.76E2/9.0)+t62697*t62769*t62698*(3.04E2/9.0))-ccaa4*t62700*t62701*t62760*t62699*(gamma_aa*gcaa*t62770*(3.52E2/9.0)+t62700*t62771*t62699*(1.12E3/9.0)+t62697*t62769*t62698*(6.08E2/3.0)+gamma_aa*gcaa*t62768*t62697*t62698*2.88E2)+ccaa4*t62700*t62701*1.0/(t62718*t62718*t62718)*(t62759*t62759)*t62699*2.0+ccaa2*1.0/(t62730*t62730*t62730)*t62704*(t62763*t62763)*t62697*t62698*2.0+ccaa3*gamma_aa*gcaa*t62727*t62768*t62697*t62698*7.2E1+ccaa1*gamma_aa*gcaa*1.0/(t62721*t62721*t62721)*t62768*t62697*t62698*(1.28E2/9.0)+ccaa3*gamma_aa*gcaa*t62703*1.0/(t62726*t62726*t62726)*(t62753*t62753)*t62697*t62698*2.0-ccaa3*gamma_aa*gcaa*t62703*t62754*t62697*t62698*(gamma_aa*gcaa*t62770*(8.8E1/3.0)+t62697*t62769*t62698*(3.04E2/3.0)+gamma_aa*gcaa*t62768*t62697*t62698*7.2E1)-ccaa3*gamma_aa*gcaa*t62734*t62753*t62754*t62697*t62698*1.6E1);
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t62913 = 1.0/pow(rho_a,1.0/3.0);
                double t62914 = c*t62913;
                double t62915 = sqrt(t62914);
                double t62916 = pow(t62914,3.0/2.0);
                double t62917 = c*c;
                double t62918 = 1.0/pow(rho_a,2.0/3.0);
                double t62919 = 1.0/c0p;
                double t62920 = b1p*t62915;
                double t62921 = b3p*t62916;
                double t62922 = b4p*t62917*t62918;
                double t62923 = b2p*c*t62913;
                double t62924 = t62920+t62921+t62922+t62923;
                double t62925 = 1.0/t62924;
                double t62926 = t62925*t62919*(1.0/2.0);
                double t62927 = t62926+1.0;
                double t62928 = log(t62927);
                double t62929 = a1p*c*t62913;
                double t62930 = t62929+1.0;
                double t62931 = gcaa*gcaa;
                double t62932 = 1.0/pow(rho_a,1.6E1/3.0);
                double t62933 = 1.0/pow(rho_a,8.0/3.0);
                double t62934 = gamma_aa*gamma_aa;
                double t62935 = t62931*t62931;
                double t62936 = 1.0/pow(rho_a,3.2E1/3.0);
                double t62937 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62938 = gamma_aa*gcaa*t62933;
                double t62939 = t62938+1.0;
                double t62940 = gamma_aa*gcaa*t62933*2.0;
                double t62941 = t62931*t62932*t62934;
                double t62942 = t62940+t62941+1.0;
                double t62943 = gamma_aa*gcaa*t62933*3.0;
                double t62944 = gamma_aa*gcaa*t62931*t62934*t62937;
                double t62945 = t62931*t62932*t62934*3.0;
                double t62946 = t62943+t62944+t62945+1.0;
                double t62947 = t62934*t62934;
                double t62963 = gcaa*t62933*4.0;
                double t62964 = gamma_aa*t62931*t62932*1.2E1;
                double t62965 = gcaa*t62931*t62934*t62937*1.2E1;
                double t62966 = gamma_aa*t62934*t62935*t62936*4.0;
                double t62948 = t62963+t62964+t62965+t62966;
                double t62949 = gamma_aa*gcaa*t62933*4.0;
                double t62950 = gamma_aa*gcaa*t62931*t62934*t62937*4.0;
                double t62951 = t62931*t62932*t62934*6.0;
                double t62952 = t62935*t62936*t62947;
                double t62953 = t62950+t62951+t62952+t62949+1.0;
                double t62956 = gcaa*t62933*2.0;
                double t62957 = gamma_aa*t62931*t62932*2.0;
                double t62954 = t62956+t62957;
                double t62955 = 1.0/(t62946*t62946);
                double t62958 = 1.0/(t62942*t62942);
                double t62959 = gcaa*t62933*3.0;
                double t62960 = gamma_aa*t62931*t62932*6.0;
                double t62961 = gcaa*t62931*t62934*t62937*3.0;
                double t62962 = t62960+t62961+t62959;
                double t62967 = 1.0/(t62953*t62953);
                v_gamma_aa_gamma_aa[Q] += scale * -rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t62915+b3f*t62916+b2f*c*t62913+b4f*t62917*t62918))+1.0)*(a1f*c*t62913+1.0)*2.0-c0p*t62930*t62928*2.0))/(two_13*2.0-2.0)+c0p*t62930*t62928*2.0)*((ccaa2*t62931*t62932*2.0)/t62942-ccaa1*t62931*t62932*1.0/(t62939*t62939)*2.0-ccaa2*t62934*t62935*t62936*t62958*2.0+(ccaa4*t62934*t62935*t62936*1.2E1)/t62953-ccaa4*t62935*t62936*t62947*t62967*(t62931*t62932*1.2E1+t62934*t62935*t62936*1.2E1+gamma_aa*gcaa*t62931*t62937*2.4E1)+(ccaa3*gamma_aa*gcaa*t62931*t62937*6.0)/t62946+ccaa1*gamma_aa*gcaa*t62931*t62937*1.0/(t62939*t62939*t62939)*2.0+ccaa2*t62931*t62932*1.0/(t62942*t62942*t62942)*t62934*(t62954*t62954)*2.0+ccaa4*t62935*1.0/(t62953*t62953*t62953)*t62936*t62947*(t62948*t62948)*2.0-ccaa2*gamma_aa*t62931*t62932*t62954*t62958*4.0-ccaa4*gamma_aa*t62934*t62935*t62936*t62948*t62967*8.0-ccaa3*gcaa*t62931*t62934*t62962*t62937*t62955*6.0-ccaa3*gamma_aa*gcaa*t62931*t62934*t62937*t62955*(t62931*t62932*6.0+gamma_aa*gcaa*t62931*t62937*6.0)+ccaa3*gamma_aa*gcaa*t62931*t62934*(t62962*t62962)*t62937*1.0/(t62946*t62946*t62946)*2.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t62795 = 1.0/pow(rho_a,1.0/3.0);
                double t62796 = c*t62795;
                double t62797 = sqrt(t62796);
                double t62798 = pow(t62796,3.0/2.0);
                double t62799 = c*c;
                double t62800 = 1.0/pow(rho_a,2.0/3.0);
                double t62801 = 1.0/c0p;
                double t62802 = b1p*t62797;
                double t62803 = b3p*t62798;
                double t62804 = b4p*t62800*t62799;
                double t62805 = b2p*c*t62795;
                double t62806 = t62802+t62803+t62804+t62805;
                double t62807 = 1.0/t62806;
                double t62808 = t62801*t62807*(1.0/2.0);
                double t62809 = t62808+1.0;
                double t62810 = log(t62809);
                double t62811 = a1p*c*t62795;
                double t62812 = t62811+1.0;
                double t62813 = 1.0/pow(rho_a,8.0/3.0);
                double t62814 = gamma_aa*gamma_aa;
                double t62815 = gcaa*gcaa;
                double t62816 = t62815*t62815;
                double t62817 = 1.0/pow(rho_a,3.2E1/3.0);
                double t62818 = 1.0/pow(rho_a,1.6E1/3.0);
                double t62819 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62820 = gamma_aa*gcaa*t62813;
                double t62821 = t62820+1.0;
                double t62822 = gamma_aa*gcaa*t62813*3.0;
                double t62823 = gamma_aa*gcaa*t62814*t62815*t62819;
                double t62824 = t62814*t62815*t62818*3.0;
                double t62825 = t62822+t62823+t62824+1.0;
                double t62826 = t62814*t62814;
                double t62827 = gamma_aa*gcaa*t62813*4.0;
                double t62828 = gamma_aa*gcaa*t62814*t62815*t62819*4.0;
                double t62829 = t62814*t62815*t62818*6.0;
                double t62830 = t62816*t62817*t62826;
                double t62831 = t62830+t62827+t62828+t62829+1.0;
                double t62832 = gamma_aa*gcaa*t62813*2.0;
                double t62833 = t62814*t62815*t62818;
                double t62834 = t62832+t62833+1.0;
                double t62835 = pow(2.0,1.0/3.0);
                double t62836 = t62835*2.0;
                double t62837 = t62836-2.0;
                double t62838 = two_13*2.0;
                double t62839 = t62838-2.0;
                double t62840 = 1.0/t62839;
                double t62841 = 1.0/c0f;
                double t62842 = b1f*t62797;
                double t62843 = b3f*t62798;
                double t62844 = b4f*t62800*t62799;
                double t62845 = b2f*c*t62795;
                double t62846 = t62842+t62843+t62844+t62845;
                double t62847 = 1.0/t62846;
                double t62848 = t62841*t62847*(1.0/2.0);
                double t62849 = t62848+1.0;
                double t62850 = log(t62849);
                double t62851 = a1f*c*t62795;
                double t62852 = t62851+1.0;
                double t62853 = c0f*t62850*t62852*2.0;
                double t62854 = c0p*t62810*t62812*2.0;
                double t62855 = 1.0/t62821;
                double t62856 = 1.0/t62831;
                double t62857 = 1.0/t62834;
                double t62858 = 1.0/t62825;
                double t62859 = 1.0/pow(rho_a,1.9E1/3.0);
                double t62860 = 1.0/(t62821*t62821);
                double t62861 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t62862 = 1.0/pow(rho_a,1.1E1/3.0);
                double t62863 = 1.0/(t62825*t62825);
                double t62864 = 1.0/(t62834*t62834);
                double t62865 = gcaa*t62813*3.0;
                double t62866 = gamma_aa*t62815*t62818*6.0;
                double t62867 = gcaa*t62814*t62815*t62819*3.0;
                double t62868 = t62865+t62866+t62867;
                double t62869 = 1.0/pow(rho_a,3.5E1/3.0);
                double t62870 = 1.0/(t62831*t62831);
                double t62871 = gcaa*t62813*4.0;
                double t62872 = gamma_aa*t62815*t62818*1.2E1;
                double t62873 = gcaa*t62814*t62815*t62819*1.2E1;
                double t62874 = gamma_aa*t62814*t62816*t62817*4.0;
                double t62875 = t62871+t62872+t62873+t62874;
                double t62876 = gcaa*t62813*2.0;
                double t62877 = gamma_aa*t62815*t62818*2.0;
                double t62878 = t62876+t62877;
                double t62879 = gamma_aa*gcaa*t62862*(1.6E1/3.0);
                double t62880 = t62814*t62815*t62859*(1.6E1/3.0);
                double t62881 = t62880+t62879;
                double t62882 = gamma_aa*gcaa*t62862*8.0;
                double t62883 = gamma_aa*gcaa*t62814*t62815*t62861*8.0;
                double t62884 = t62814*t62815*t62859*1.6E1;
                double t62885 = t62882+t62883+t62884;
                double t62886 = gamma_aa*gcaa*t62862*(3.2E1/3.0);
                double t62887 = gamma_aa*gcaa*t62814*t62815*t62861*3.2E1;
                double t62888 = t62814*t62815*t62859*3.2E1;
                double t62889 = t62816*t62826*t62869*(3.2E1/3.0);
                double t62890 = t62886+t62887+t62888+t62889;
                double t62891 = 1.0/pow(rho_a,4.0/3.0);
                double t62892 = 1.0/pow(rho_a,5.0/3.0);
                double t62893 = 1.0/sqrt(t62796);
                double t62894 = 1.0/t62809;
                double t62895 = 1.0/(t62806*t62806);
                double t62896 = b4p*t62892*t62799*(2.0/3.0);
                double t62897 = b2p*c*t62891*(1.0/3.0);
                double t62898 = b1p*c*t62891*t62893*(1.0/6.0);
                double t62899 = b3p*c*t62891*t62797*(1.0/2.0);
                double t62900 = t62896+t62897+t62898+t62899;
                double t62901 = t62900*t62812*t62894*t62895;
                double t62902 = ccaa1*gcaa*t62813*t62855;
                double t62903 = ccaa4*gamma_aa*t62814*t62816*t62817*t62856*4.0;
                double t62904 = ccaa2*gamma_aa*t62815*t62818*t62857*2.0;
                double t62905 = ccaa3*gcaa*t62814*t62815*t62819*t62858*3.0;
                double t62906 = t62902+t62903+t62904+t62905-ccaa1*gamma_aa*t62815*t62860*t62818-ccaa4*t62816*t62870*t62817*t62826*t62875-ccaa2*t62814*t62815*t62818*t62864*t62878-ccaa3*gamma_aa*gcaa*t62814*t62815*t62863*t62819*t62868;
                v_rho_a_gamma_aa[Q] += scale * -t62906*(t62854+t62840*t62837*(t62853-c0p*t62810*t62812*2.0))+rho_a*t62906*(-t62901+t62840*t62837*(t62901-(t62852*1.0/(t62846*t62846)*(b2f*c*t62891*(1.0/3.0)+b4f*t62892*t62799*(2.0/3.0)+b1f*c*t62891*t62893*(1.0/6.0)+b3f*c*t62891*t62797*(1.0/2.0)))/t62849+a1f*c*c0f*t62850*t62891*(2.0/3.0)-a1p*c*c0p*t62810*t62891*(2.0/3.0))+a1p*c*c0p*t62810*t62891*(2.0/3.0))-rho_a*(t62854+t62840*t62837*(t62853-t62854))*(ccaa1*gcaa*t62862*t62855*(-8.0/3.0)+ccaa1*gamma_aa*t62815*t62860*t62859*8.0-ccaa2*gamma_aa*t62815*t62857*t62859*(3.2E1/3.0)+ccaa2*t62814*t62815*t62864*t62859*t62878*(1.6E1/3.0)+ccaa4*t62816*t62870*t62826*t62875*t62869*(3.2E1/3.0)+ccaa4*t62816*t62870*t62817*t62826*(gcaa*t62862*(3.2E1/3.0)+gamma_aa*t62815*t62859*6.4E1+gamma_aa*t62814*t62816*t62869*(1.28E2/3.0)+gcaa*t62814*t62815*t62861*9.6E1)-ccaa1*gcaa*1.0/(t62821*t62821*t62821)*t62814*t62815*t62861*(1.6E1/3.0)+ccaa2*t62814*t62815*t62818*t62864*(gcaa*t62862*(1.6E1/3.0)+gamma_aa*t62815*t62859*(3.2E1/3.0))+ccaa2*gamma_aa*t62815*t62818*t62881*t62864*2.0-ccaa4*gamma_aa*t62814*t62816*t62856*t62869*(1.28E2/3.0)-ccaa3*gcaa*t62814*t62815*t62861*t62858*2.4E1+ccaa4*gamma_aa*t62814*t62816*t62870*t62817*t62890*4.0+ccaa3*gcaa*t62814*t62815*t62863*t62819*t62885*3.0-ccaa4*1.0/(t62831*t62831*t62831)*t62816*t62817*t62826*t62890*t62875*2.0-ccaa2*t62814*t62815*1.0/(t62834*t62834*t62834)*t62818*t62881*t62878*2.0+ccaa3*gamma_aa*gcaa*t62814*t62815*t62863*t62819*(gcaa*t62862*8.0+gamma_aa*t62815*t62859*3.2E1+gcaa*t62814*t62815*t62861*2.4E1)+ccaa3*gamma_aa*gcaa*t62814*t62815*t62861*t62863*t62868*8.0-ccaa3*gamma_aa*gcaa*t62814*t62815*1.0/(t62825*t62825*t62825)*t62819*t62885*t62868*2.0);
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t58810 = 1.0/pow(rho_a,1.0/3.0);
                double t58811 = c*t58810;
                double t58812 = sqrt(t58811);
                double t58813 = pow(t58811,3.0/2.0);
                double t58814 = c*c;
                double t58815 = 1.0/pow(rho_a,2.0/3.0);
                double t58816 = 1.0/c0p;
                double t58817 = b1p*t58812;
                double t58818 = b3p*t58813;
                double t58819 = b4p*t58814*t58815;
                double t58820 = b2p*c*t58810;
                double t58821 = t58820+t58817+t58818+t58819;
                double t58822 = 1.0/t58821;
                double t58823 = t58822*t58816*(1.0/2.0);
                double t58824 = t58823+1.0;
                double t58825 = log(t58824);
                double t58826 = a1p*c*t58810;
                double t58827 = t58826+1.0;
                double t58828 = pow(2.0,1.0/3.0);
                double t58829 = t58828*2.0;
                double t58830 = t58829-2.0;
                double t58831 = two_13*2.0;
                double t58832 = t58831-2.0;
                double t58833 = 1.0/t58832;
                double t58834 = 1.0/c0f;
                double t58835 = 1.0/pow(rho_b,1.0/3.0);
                double t58836 = c*t58835;
                double t58837 = sqrt(t58836);
                double t58838 = pow(t58836,3.0/2.0);
                double t58839 = 1.0/pow(rho_b,2.0/3.0);
                double t58840 = b1p*t58837;
                double t58841 = b3p*t58838;
                double t58842 = b4p*t58814*t58839;
                double t58843 = b2p*c*t58835;
                double t58844 = t58840+t58841+t58842+t58843;
                double t58845 = 1.0/t58844;
                double t58846 = t58816*t58845*(1.0/2.0);
                double t58847 = t58846+1.0;
                double t58848 = log(t58847);
                double t58849 = a1p*c*t58835;
                double t58850 = t58849+1.0;
                double t58851 = c0p*t58850*t58848*2.0;
                double t58852 = rho_a+rho_b;
                double t58853 = 1.0/pow(t58852,1.0/3.0);
                double t58854 = c*t58853;
                double t58855 = sqrt(t58854);
                double t58856 = pow(t58854,3.0/2.0);
                double t58857 = 1.0/pow(t58852,2.0/3.0);
                double t58858 = b1p*t58855;
                double t58859 = b3p*t58856;
                double t58860 = b4p*t58814*t58857;
                double t58861 = b2p*c*t58853;
                double t58862 = t58860+t58861+t58858+t58859;
                double t58863 = 1.0/t58862;
                double t58864 = t58816*t58863*(1.0/2.0);
                double t58865 = t58864+1.0;
                double t58866 = log(t58865);
                double t58867 = a1p*c*t58853;
                double t58868 = t58867+1.0;
                double t58869 = c0p*t58866*t58868*2.0;
                double t58870 = rho_a-rho_b;
                double t58871 = t58870*t58870;
                double t58872 = 1.0/t58852;
                double t58873 = t58870*t58872;
                double t58874 = 1.0/(t58852*t58852*t58852*t58852);
                double t58875 = t58871*t58871;
                double t58876 = t58873+1.0;
                double t58877 = pow(t58876,4.0/3.0);
                double t58878 = -t58873+1.0;
                double t58879 = pow(t58878,4.0/3.0);
                double t58880 = t58877+t58879-2.0;
                double t58883 = 1.0/pow(rho_a,8.0/3.0);
                double t58884 = gamma_aa*t58883*(1.0/2.0);
                double t58885 = 1.0/pow(rho_b,8.0/3.0);
                double t58886 = gamma_bb*t58885*(1.0/2.0);
                double t58881 = t58884+t58886;
                double t58882 = gcab*gcab;
                double t58887 = t58881*t58881;
                double t58888 = t58882*t58882;
                double t58889 = t58887*t58887;
                double t58890 = c0p*t58825*t58827*2.0;
                double t58891 = b1f*t58812;
                double t58892 = b3f*t58813;
                double t58893 = b4f*t58814*t58815;
                double t58894 = b2f*c*t58810;
                double t58895 = t58891+t58892+t58893+t58894;
                double t58896 = 1.0/t58895;
                double t58897 = t58834*t58896*(1.0/2.0);
                double t58898 = t58897+1.0;
                double t58899 = log(t58898);
                double t58900 = a1f*c*t58810;
                double t58901 = t58900+1.0;
                double t58902 = t58890-c0f*t58901*t58899*2.0;
                double t58903 = t58890-t58830*t58902*t58833;
                double t58904 = gamma_aa*gamma_aa;
                double t58905 = gcaa*gcaa;
                double t58906 = t58904*t58904;
                double t58907 = t58905*t58905;
                double t58908 = 1.0/pow(rho_a,3.2E1/3.0);
                double t58909 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t58910 = 1.0/pow(rho_a,1.6E1/3.0);
                double t58911 = b1f*t58837;
                double t58912 = b3f*t58838;
                double t58913 = b4f*t58814*t58839;
                double t58914 = b2f*c*t58835;
                double t58915 = t58911+t58912+t58913+t58914;
                double t58916 = 1.0/t58915;
                double t58917 = t58834*t58916*(1.0/2.0);
                double t58918 = t58917+1.0;
                double t58919 = log(t58918);
                double t58920 = a1f*c*t58835;
                double t58921 = t58920+1.0;
                double t58922 = t58851-c0f*t58921*t58919*2.0;
                double t58923 = t58851-t58830*t58922*t58833;
                double t58924 = gamma_bb*gamma_bb;
                double t58925 = t58924*t58924;
                double t58926 = 1.0/pow(rho_b,3.2E1/3.0);
                double t58927 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t58928 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * (rho_a*t58903+rho_b*t58923-t58852*(t58869-t58833*t58880*t58874*t58875*(t58869-c0f*log((t58834*(1.0/2.0))/(b1f*t58855+b3f*t58856+b2f*c*t58853+b4f*t58814*t58857)+1.0)*(a1f*c*t58853+1.0)*2.0)+(Aa*t58833*t58880*log((1.0/2.0)/(Aa*(b1a*t58855+b3a*t58856+b2a*c*t58853+b4a*t58814*t58857))+1.0)*(t58874*t58875-1.0)*(a1a*c*t58853+1.0)*2.0)/d2fz0))*(ccab0+(ccab4*t58888*t58889)/(gcab*t58881*4.0+t58882*t58887*6.0+t58888*t58889+gcab*t58881*t58882*t58887*4.0+1.0)+(ccab1*gcab*t58881)/(gcab*t58881+1.0)+(ccab2*t58882*t58887)/(gcab*t58881*2.0+t58882*t58887+1.0)+(ccab3*gcab*t58881*t58882*t58887)/(gcab*t58881*3.0+t58882*t58887*3.0+gcab*t58881*t58882*t58887+1.0))-rho_a*t58903*(ccaa0+(ccaa2*t58910*t58904*t58905)/(gamma_aa*gcaa*t58883*2.0+t58910*t58904*t58905+1.0)+(ccaa1*gamma_aa*gcaa*t58883)/(gamma_aa*gcaa*t58883+1.0)+(ccaa4*t58906*t58907*t58908)/(gamma_aa*gcaa*t58883*4.0+t58910*t58904*t58905*6.0+t58906*t58907*t58908+gamma_aa*gcaa*t58904*t58905*t58909*4.0+1.0)+(ccaa3*gamma_aa*gcaa*t58904*t58905*t58909)/(gamma_aa*gcaa*t58883*3.0+t58910*t58904*t58905*3.0+gamma_aa*gcaa*t58904*t58905*t58909+1.0))-rho_b*t58923*(ccaa0+(ccaa2*t58905*t58924*t58928)/(gamma_bb*gcaa*t58885*2.0+t58905*t58924*t58928+1.0)+(ccaa1*gamma_bb*gcaa*t58885)/(gamma_bb*gcaa*t58885+1.0)+(ccaa4*t58907*t58925*t58926)/(gamma_bb*gcaa*t58885*4.0+t58905*t58924*t58928*6.0+t58907*t58925*t58926+gamma_bb*gcaa*t58905*t58924*t58927*4.0+1.0)+(ccaa3*gamma_bb*gcaa*t58905*t58924*t58927)/(gamma_bb*gcaa*t58885*3.0+t58905*t58924*t58928*3.0+gamma_bb*gcaa*t58905*t58924*t58927+1.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t58930 = 1.0/pow(rho_a,1.0/3.0);
                double t58931 = c*t58930;
                double t58932 = sqrt(t58931);
                double t58933 = pow(t58931,3.0/2.0);
                double t58934 = c*c;
                double t58935 = 1.0/pow(rho_a,2.0/3.0);
                double t58936 = 1.0/c0p;
                double t58937 = b1p*t58932;
                double t58938 = b3p*t58933;
                double t58939 = b4p*t58934*t58935;
                double t58940 = b2p*c*t58930;
                double t58941 = t58940+t58937+t58938+t58939;
                double t58942 = 1.0/t58941;
                double t58943 = t58942*t58936*(1.0/2.0);
                double t58944 = t58943+1.0;
                double t58945 = log(t58944);
                double t58946 = a1p*c*t58930;
                double t58947 = t58946+1.0;
                double t58948 = gamma_aa*gamma_aa;
                double t58949 = gcaa*gcaa;
                double t58950 = t58948*t58948;
                double t58951 = t58949*t58949;
                double t58952 = 1.0/pow(rho_a,3.2E1/3.0);
                double t58953 = 1.0/pow(rho_a,8.0/3.0);
                double t58954 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t58955 = 1.0/pow(rho_a,1.6E1/3.0);
                double t58956 = pow(2.0,1.0/3.0);
                double t58957 = t58956*2.0;
                double t58958 = t58957-2.0;
                double t58959 = two_13*2.0;
                double t58960 = t58959-2.0;
                double t58961 = 1.0/t58960;
                double t58962 = 1.0/c0f;
                double t58963 = b1f*t58932;
                double t58964 = b3f*t58933;
                double t58965 = b4f*t58934*t58935;
                double t58966 = b2f*c*t58930;
                double t58967 = t58963+t58964+t58965+t58966;
                double t58968 = 1.0/t58967;
                double t58969 = t58962*t58968*(1.0/2.0);
                double t58970 = t58969+1.0;
                double t58971 = log(t58970);
                double t58972 = a1f*c*t58930;
                double t58973 = t58972+1.0;
                double t58974 = c0f*t58971*t58973*2.0;
                double t58975 = c0p*t58945*t58947*2.0;
                double t58976 = 1.0/pow(rho_b,1.0/3.0);
                double t58977 = c*t58976;
                double t58978 = sqrt(t58977);
                double t58979 = pow(t58977,3.0/2.0);
                double t58980 = 1.0/pow(rho_b,2.0/3.0);
                double t58981 = b1p*t58978;
                double t58982 = b3p*t58979;
                double t58983 = b4p*t58934*t58980;
                double t58984 = b2p*c*t58976;
                double t58985 = t58981+t58982+t58983+t58984;
                double t58986 = 1.0/t58985;
                double t58987 = t58936*t58986*(1.0/2.0);
                double t58988 = t58987+1.0;
                double t58989 = log(t58988);
                double t58990 = a1p*c*t58976;
                double t58991 = t58990+1.0;
                double t58992 = c0p*t58991*t58989*2.0;
                double t58993 = rho_a+rho_b;
                double t58994 = 1.0/pow(t58993,1.0/3.0);
                double t58995 = c*t58994;
                double t58996 = sqrt(t58995);
                double t58997 = pow(t58995,3.0/2.0);
                double t58998 = 1.0/pow(t58993,2.0/3.0);
                double t58999 = b1p*t58996;
                double t59000 = b3p*t58997;
                double t59001 = b4p*t58934*t58998;
                double t59002 = b2p*c*t58994;
                double t59003 = t58999+t59000+t59001+t59002;
                double t59004 = 1.0/t59003;
                double t59005 = t58936*t59004*(1.0/2.0);
                double t59006 = t59005+1.0;
                double t59007 = log(t59006);
                double t59008 = a1p*c*t58994;
                double t59009 = t59008+1.0;
                double t59010 = c0p*t59007*t59009*2.0;
                double t59011 = rho_a-rho_b;
                double t59012 = t59011*t59011;
                double t59013 = 1.0/t58993;
                double t59014 = t59011*t59013;
                double t59015 = 1.0/(t58993*t58993*t58993*t58993);
                double t59016 = t59012*t59012;
                double t59017 = t59014+1.0;
                double t59018 = pow(t59017,4.0/3.0);
                double t59019 = -t59014+1.0;
                double t59020 = pow(t59019,4.0/3.0);
                double t59021 = t59020+t59018-2.0;
                double t59022 = gcab*gcab;
                double t59026 = gamma_aa*t58953*(1.0/2.0);
                double t59027 = 1.0/pow(rho_b,8.0/3.0);
                double t59028 = gamma_bb*t59027*(1.0/2.0);
                double t59023 = t59026+t59028;
                double t59024 = t59023*t59023;
                double t59025 = 1.0/pow(rho_a,1.1E1/3.0);
                double t59029 = t59022*t59022;
                double t59030 = t59024*t59024;
                double t59031 = t59022*t59024*6.0;
                double t59032 = gcab*t59022*t59023*t59024*4.0;
                double t59033 = t59030*t59029;
                double t59034 = gcab*t59023*4.0;
                double t59035 = t59031+t59032+t59033+t59034+1.0;
                double t59036 = gcab*t59023;
                double t59037 = t59036+1.0;
                double t59038 = t59022*t59024;
                double t59039 = gcab*t59023*2.0;
                double t59040 = t59038+t59039+1.0;
                double t59041 = t59022*t59024*3.0;
                double t59042 = gcab*t59022*t59023*t59024;
                double t59043 = gcab*t59023*3.0;
                double t59044 = t59041+t59042+t59043+1.0;
                double t59045 = 1.0/t59040;
                double t59046 = 1.0/t59044;
                double t59047 = 1.0/t59037;
                double t59048 = 1.0/t59035;
                double t59049 = 1.0/pow(t58993,4.0/3.0);
                double t59050 = b1f*t58996;
                double t59051 = b3f*t58997;
                double t59052 = b4f*t58934*t58998;
                double t59053 = b2f*c*t58994;
                double t59054 = t59050+t59051+t59052+t59053;
                double t59055 = 1.0/t59054;
                double t59056 = t58962*t59055*(1.0/2.0);
                double t59057 = t59056+1.0;
                double t59058 = log(t59057);
                double t59059 = a1f*c*t58994;
                double t59060 = t59059+1.0;
                double t59062 = c0f*t59060*t59058*2.0;
                double t59061 = t59010-t59062;
                double t59063 = 1.0/(t58993*t58993);
                double t59090 = t59011*t59063;
                double t59064 = t59013-t59090;
                double t59065 = 1.0/pow(t58993,5.0/3.0);
                double t59066 = 1.0/sqrt(t58995);
                double t59067 = 1.0/t59006;
                double t59068 = 1.0/(t59003*t59003);
                double t59069 = b4p*t58934*t59065*(2.0/3.0);
                double t59070 = b2p*c*t59049*(1.0/3.0);
                double t59071 = b1p*c*t59066*t59049*(1.0/6.0);
                double t59072 = b3p*c*t58996*t59049*(1.0/2.0);
                double t59073 = t59070+t59071+t59072+t59069;
                double t59074 = t59009*t59073*t59067*t59068;
                double t59075 = 1.0/d2fz0;
                double t59076 = 1.0/Aa;
                double t59077 = b1a*t58996;
                double t59078 = b3a*t58997;
                double t59079 = b4a*t58934*t58998;
                double t59080 = b2a*c*t58994;
                double t59081 = t59080+t59077+t59078+t59079;
                double t59082 = 1.0/t59081;
                double t59083 = t59082*t59076*(1.0/2.0);
                double t59084 = t59083+1.0;
                double t59085 = log(t59084);
                double t59086 = a1a*c*t58994;
                double t59087 = t59086+1.0;
                double t59088 = 1.0/(t58993*t58993*t58993*t58993*t58993);
                double t59089 = pow(t59017,1.0/3.0);
                double t59091 = t59064*t59089*(4.0/3.0);
                double t59092 = pow(t59019,1.0/3.0);
                double t59093 = t59091-t59064*t59092*(4.0/3.0);
                double t59094 = t59015*t59016;
                double t59095 = t59094-1.0;
                double t59096 = 1.0/pow(rho_a,4.0/3.0);
                double t59097 = 1.0/pow(rho_a,5.0/3.0);
                double t59098 = 1.0/sqrt(t58931);
                double t59099 = 1.0/t58944;
                double t59100 = 1.0/(t58941*t58941);
                double t59101 = b4p*t58934*t59097*(2.0/3.0);
                double t59102 = b2p*c*t59096*(1.0/3.0);
                double t59103 = b1p*c*t59096*t59098*(1.0/6.0);
                double t59104 = b3p*c*t58932*t59096*(1.0/2.0);
                double t59105 = t59101+t59102+t59103+t59104;
                double t59106 = t58947*t59100*t59105*t59099;
                double t59107 = t58974-t58975;
                double t59108 = t58961*t58958*t59107;
                double t59109 = Aa*t58961*t59021*t59075*t59085*t59095*t59087*2.0;
                double t59110 = t58975+t59108;
                double t59111 = gamma_aa*gcaa*t58953*4.0;
                double t59112 = gamma_aa*gcaa*t58954*t58948*t58949*4.0;
                double t59113 = t58955*t58948*t58949*6.0;
                double t59114 = t58950*t58951*t58952;
                double t59115 = t59111+t59112+t59113+t59114+1.0;
                double t59116 = 1.0/t59115;
                double t59117 = gamma_aa*gcaa*t58953;
                double t59118 = t59117+1.0;
                double t59119 = 1.0/t59118;
                double t59120 = gamma_aa*gcaa*t58953*3.0;
                double t59121 = gamma_aa*gcaa*t58954*t58948*t58949;
                double t59122 = t58955*t58948*t58949*3.0;
                double t59123 = t59120+t59121+t59122+1.0;
                double t59124 = 1.0/t59123;
                double t59125 = gamma_aa*gcaa*t58953*2.0;
                double t59126 = t58955*t58948*t58949;
                double t59127 = t59125+t59126+1.0;
                double t59128 = 1.0/t59127;
                double t59129 = 1.0/pow(rho_a,1.9E1/3.0);
                double t59130 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t59131 = 1.0/pow(rho_a,3.5E1/3.0);
                double t59132 = 1.0/t58970;
                double t59133 = 1.0/(t58967*t58967);
                double t59134 = b4f*t58934*t59097*(2.0/3.0);
                double t59135 = b2f*c*t59096*(1.0/3.0);
                double t59136 = b1f*c*t59096*t59098*(1.0/6.0);
                double t59137 = b3f*c*t58932*t59096*(1.0/2.0);
                double t59138 = t59134+t59135+t59136+t59137;
                double t59139 = a1f*c*c0f*t58971*t59096*(2.0/3.0);
                double t59140 = a1p*c*c0p*t58945*t59096*(2.0/3.0);
                double t59141 = ccaa4*t58950*t58951*t58952*t59116;
                double t59142 = ccaa1*gamma_aa*gcaa*t58953*t59119;
                double t59143 = ccaa3*gamma_aa*gcaa*t58954*t58948*t58949*t59124;
                double t59144 = ccaa2*t58955*t58948*t58949*t59128;
                double t59145 = ccaa0+t59141+t59142+t59143+t59144;
                v_rho_a[Q] += scale * (ccab0+ccab1*gcab*t59023*t59047+ccab2*t59022*t59024*t59045+ccab4*t59030*t59029*t59048+ccab3*gcab*t59022*t59023*t59024*t59046)*(t58975-t59010+t59108-t59109-rho_a*(t59140-t59106+t58961*t58958*(t59106+t59139-t58973*t59132*t59133*t59138-a1p*c*c0p*t58945*t59096*(2.0/3.0)))+t58993*(-t59074+t58961*t59021*t59015*t59016*(t59074-(t59060*1.0/(t59054*t59054)*(b2f*c*t59049*(1.0/3.0)+b4f*t58934*t59065*(2.0/3.0)+b1f*c*t59066*t59049*(1.0/6.0)+b3f*c*t58996*t59049*(1.0/2.0)))/t59057+a1f*c*c0f*t59049*t59058*(2.0/3.0)-a1p*c*c0p*t59007*t59049*(2.0/3.0))+a1p*c*c0p*t59007*t59049*(2.0/3.0)+t58961*t59015*t59016*t59061*t59093-t58961*t59021*t59016*t59061*t59088*4.0+t58961*t59011*t59012*t59021*t59015*t59061*4.0+Aa*t58961*t59021*t59075*t59085*t59087*(t59016*t59088*4.0-t59011*t59012*t59015*4.0)*2.0-Aa*t58961*t59075*t59093*t59085*t59095*t59087*2.0-(t58961*t59021*1.0/(t59081*t59081)*t59075*t59095*t59087*(b2a*c*t59049*(1.0/3.0)+b4a*t58934*t59065*(2.0/3.0)+b1a*c*t59066*t59049*(1.0/6.0)+b3a*c*t58996*t59049*(1.0/2.0)))/t59084+Aa*a1a*c*t58961*t59021*t59075*t59049*t59085*t59095*(2.0/3.0))+t58961*t59021*t59015*t59016*t59061)-t59145*(t58975+t58961*t58958*(t58974-c0p*t58945*t58947*2.0))-(rho_a*t59110+rho_b*(t58992-t58961*t58958*(t58992-c0f*log((t58962*(1.0/2.0))/(b1f*t58978+b3f*t58979+b2f*c*t58976+b4f*t58934*t58980)+1.0)*(a1f*c*t58976+1.0)*2.0))-t58993*(t59010+t59109-t58961*t59021*t59015*t59016*t59061))*(ccab1*gamma_aa*gcab*t59025*t59047*(4.0/3.0)-ccab2*t59022*1.0/(t59040*t59040)*t59024*(gamma_aa*gcab*t59025*(8.0/3.0)+gamma_aa*t59022*t59023*t59025*(8.0/3.0))-ccab4*t59030*1.0/(t59035*t59035)*t59029*(gamma_aa*gcab*t59025*(1.6E1/3.0)+gamma_aa*t59022*t59023*t59025*1.6E1+gamma_aa*gcab*t59022*t59024*t59025*1.6E1+gamma_aa*t59023*t59024*t59025*t59029*(1.6E1/3.0))-ccab1*gamma_aa*t59022*t59023*t59025*1.0/(t59037*t59037)*(4.0/3.0)+ccab2*gamma_aa*t59022*t59023*t59025*t59045*(8.0/3.0)-ccab3*gcab*t59022*t59023*t59024*1.0/(t59044*t59044)*(gamma_aa*gcab*t59025*4.0+gamma_aa*t59022*t59023*t59025*8.0+gamma_aa*gcab*t59022*t59024*t59025*4.0)+ccab3*gamma_aa*gcab*t59022*t59024*t59025*t59046*4.0+ccab4*gamma_aa*t59023*t59024*t59025*t59029*t59048*(1.6E1/3.0))+rho_a*t59110*(ccaa1*gamma_aa*gcaa*t59025*t59119*(8.0/3.0)+ccaa4*t58950*t58951*t59131*t59116*(3.2E1/3.0)+ccaa2*t58948*t58949*t59128*t59129*(1.6E1/3.0)-ccaa1*t58948*t58949*1.0/(t59118*t59118)*t59129*(8.0/3.0)-ccaa2*t58955*t58948*t58949*1.0/(t59127*t59127)*(gamma_aa*gcaa*t59025*(1.6E1/3.0)+t58948*t58949*t59129*(1.6E1/3.0))-ccaa4*t58950*t58951*t58952*1.0/(t59115*t59115)*(gamma_aa*gcaa*t59025*(3.2E1/3.0)+t58950*t58951*t59131*(3.2E1/3.0)+t58948*t58949*t59129*3.2E1+gamma_aa*gcaa*t58948*t58949*t59130*3.2E1)+ccaa3*gamma_aa*gcaa*t58948*t58949*t59130*t59124*8.0-ccaa3*gamma_aa*gcaa*t58954*t58948*t58949*1.0/(t59123*t59123)*(gamma_aa*gcaa*t59025*8.0+t58948*t58949*t59129*1.6E1+gamma_aa*gcaa*t58948*t58949*t59130*8.0))-rho_a*t59145*(-t59140+t59106+t58961*t58958*(t59140-t59106-t59139+t58973*t59132*t59133*t59138));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t59147 = 1.0/pow(rho_b,1.0/3.0);
                double t59148 = c*t59147;
                double t59149 = sqrt(t59148);
                double t59150 = pow(t59148,3.0/2.0);
                double t59151 = c*c;
                double t59152 = 1.0/pow(rho_b,2.0/3.0);
                double t59153 = 1.0/c0p;
                double t59154 = b1p*t59149;
                double t59155 = b3p*t59150;
                double t59156 = b4p*t59151*t59152;
                double t59157 = b2p*c*t59147;
                double t59158 = t59154+t59155+t59156+t59157;
                double t59159 = 1.0/t59158;
                double t59160 = t59153*t59159*(1.0/2.0);
                double t59161 = t59160+1.0;
                double t59162 = log(t59161);
                double t59163 = a1p*c*t59147;
                double t59164 = t59163+1.0;
                double t59165 = gamma_bb*gamma_bb;
                double t59166 = gcaa*gcaa;
                double t59167 = t59165*t59165;
                double t59168 = t59166*t59166;
                double t59169 = 1.0/pow(rho_b,3.2E1/3.0);
                double t59170 = 1.0/pow(rho_b,8.0/3.0);
                double t59171 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t59172 = 1.0/pow(rho_b,1.6E1/3.0);
                double t59173 = pow(2.0,1.0/3.0);
                double t59174 = t59173*2.0;
                double t59175 = t59174-2.0;
                double t59176 = two_13*2.0;
                double t59177 = t59176-2.0;
                double t59178 = 1.0/t59177;
                double t59179 = 1.0/c0f;
                double t59180 = 1.0/pow(rho_a,1.0/3.0);
                double t59181 = c*t59180;
                double t59182 = sqrt(t59181);
                double t59183 = pow(t59181,3.0/2.0);
                double t59184 = 1.0/pow(rho_a,2.0/3.0);
                double t59185 = b1p*t59182;
                double t59186 = b3p*t59183;
                double t59187 = b4p*t59151*t59184;
                double t59188 = b2p*c*t59180;
                double t59189 = t59185+t59186+t59187+t59188;
                double t59190 = 1.0/t59189;
                double t59191 = t59153*t59190*(1.0/2.0);
                double t59192 = t59191+1.0;
                double t59193 = log(t59192);
                double t59194 = a1p*c*t59180;
                double t59195 = t59194+1.0;
                double t59196 = c0p*t59193*t59195*2.0;
                double t59197 = b1f*t59149;
                double t59198 = b3f*t59150;
                double t59199 = b4f*t59151*t59152;
                double t59200 = b2f*c*t59147;
                double t59201 = t59200+t59197+t59198+t59199;
                double t59202 = 1.0/t59201;
                double t59203 = t59202*t59179*(1.0/2.0);
                double t59204 = t59203+1.0;
                double t59205 = log(t59204);
                double t59206 = a1f*c*t59147;
                double t59207 = t59206+1.0;
                double t59208 = c0f*t59205*t59207*2.0;
                double t59209 = c0p*t59162*t59164*2.0;
                double t59210 = rho_a+rho_b;
                double t59211 = 1.0/pow(t59210,1.0/3.0);
                double t59212 = c*t59211;
                double t59213 = sqrt(t59212);
                double t59214 = pow(t59212,3.0/2.0);
                double t59215 = 1.0/pow(t59210,2.0/3.0);
                double t59216 = b1p*t59213;
                double t59217 = b3p*t59214;
                double t59218 = b4p*t59151*t59215;
                double t59219 = b2p*c*t59211;
                double t59220 = t59216+t59217+t59218+t59219;
                double t59221 = 1.0/t59220;
                double t59222 = t59221*t59153*(1.0/2.0);
                double t59223 = t59222+1.0;
                double t59224 = log(t59223);
                double t59225 = a1p*c*t59211;
                double t59226 = t59225+1.0;
                double t59227 = c0p*t59224*t59226*2.0;
                double t59228 = rho_a-rho_b;
                double t59229 = t59228*t59228;
                double t59230 = 1.0/t59210;
                double t59231 = t59230*t59228;
                double t59232 = 1.0/(t59210*t59210*t59210*t59210);
                double t59233 = t59229*t59229;
                double t59234 = t59231+1.0;
                double t59235 = pow(t59234,4.0/3.0);
                double t59236 = -t59231+1.0;
                double t59237 = pow(t59236,4.0/3.0);
                double t59238 = t59235+t59237-2.0;
                double t59239 = gcab*gcab;
                double t59243 = 1.0/pow(rho_a,8.0/3.0);
                double t59244 = gamma_aa*t59243*(1.0/2.0);
                double t59245 = gamma_bb*t59170*(1.0/2.0);
                double t59240 = t59244+t59245;
                double t59241 = t59240*t59240;
                double t59242 = 1.0/pow(rho_b,1.1E1/3.0);
                double t59246 = t59239*t59239;
                double t59247 = t59241*t59241;
                double t59248 = t59241*t59239*6.0;
                double t59249 = gcab*t59240*t59241*t59239*4.0;
                double t59250 = t59246*t59247;
                double t59251 = gcab*t59240*4.0;
                double t59252 = t59250+t59251+t59248+t59249+1.0;
                double t59253 = gcab*t59240;
                double t59254 = t59253+1.0;
                double t59255 = t59241*t59239;
                double t59256 = gcab*t59240*2.0;
                double t59257 = t59255+t59256+1.0;
                double t59258 = t59241*t59239*3.0;
                double t59259 = gcab*t59240*t59241*t59239;
                double t59260 = gcab*t59240*3.0;
                double t59261 = t59260+t59258+t59259+1.0;
                double t59262 = 1.0/t59257;
                double t59263 = 1.0/t59261;
                double t59264 = 1.0/t59254;
                double t59265 = 1.0/t59252;
                double t59266 = 1.0/pow(t59210,4.0/3.0);
                double t59267 = b1f*t59213;
                double t59268 = b3f*t59214;
                double t59269 = b4f*t59151*t59215;
                double t59270 = b2f*c*t59211;
                double t59271 = t59270+t59267+t59268+t59269;
                double t59272 = 1.0/t59271;
                double t59273 = t59272*t59179*(1.0/2.0);
                double t59274 = t59273+1.0;
                double t59275 = log(t59274);
                double t59276 = a1f*c*t59211;
                double t59277 = t59276+1.0;
                double t59279 = c0f*t59275*t59277*2.0;
                double t59278 = t59227-t59279;
                double t59280 = 1.0/(t59210*t59210);
                double t59281 = t59280*t59228;
                double t59282 = t59230+t59281;
                double t59283 = 1.0/pow(t59210,5.0/3.0);
                double t59284 = 1.0/sqrt(t59212);
                double t59285 = 1.0/t59223;
                double t59286 = 1.0/(t59220*t59220);
                double t59287 = b4p*t59151*t59283*(2.0/3.0);
                double t59288 = b2p*c*t59266*(1.0/3.0);
                double t59289 = b1p*c*t59266*t59284*(1.0/6.0);
                double t59290 = b3p*c*t59213*t59266*(1.0/2.0);
                double t59291 = t59290+t59287+t59288+t59289;
                double t59292 = 1.0/d2fz0;
                double t59293 = 1.0/Aa;
                double t59294 = b1a*t59213;
                double t59295 = b3a*t59214;
                double t59296 = b4a*t59151*t59215;
                double t59297 = b2a*c*t59211;
                double t59298 = t59294+t59295+t59296+t59297;
                double t59299 = 1.0/t59298;
                double t59300 = t59293*t59299*(1.0/2.0);
                double t59301 = t59300+1.0;
                double t59302 = log(t59301);
                double t59303 = a1a*c*t59211;
                double t59304 = t59303+1.0;
                double t59305 = 1.0/(t59210*t59210*t59210*t59210*t59210);
                double t59306 = pow(t59234,1.0/3.0);
                double t59307 = t59306*t59282*(4.0/3.0);
                double t59308 = pow(t59236,1.0/3.0);
                double t59309 = t59307-t59308*t59282*(4.0/3.0);
                double t59310 = t59232*t59233;
                double t59311 = t59310-1.0;
                double t59312 = t59226*t59291*t59285*t59286;
                double t59313 = 1.0/pow(rho_b,4.0/3.0);
                double t59314 = 1.0/pow(rho_b,5.0/3.0);
                double t59315 = 1.0/sqrt(t59148);
                double t59316 = 1.0/t59161;
                double t59317 = 1.0/(t59158*t59158);
                double t59318 = b4p*t59151*t59314*(2.0/3.0);
                double t59319 = b2p*c*t59313*(1.0/3.0);
                double t59320 = b1p*c*t59313*t59315*(1.0/6.0);
                double t59321 = b3p*c*t59313*t59149*(1.0/2.0);
                double t59322 = t59320+t59321+t59318+t59319;
                double t59323 = t59322*t59316*t59164*t59317;
                double t59324 = t59208-t59209;
                double t59325 = t59324*t59175*t59178;
                double t59326 = Aa*t59302*t59311*t59304*t59238*t59292*t59178*2.0;
                double t59327 = t59325+t59209;
                double t59328 = gamma_bb*gcaa*t59170*4.0;
                double t59329 = gamma_bb*gcaa*t59171*t59165*t59166*4.0;
                double t59330 = t59172*t59165*t59166*6.0;
                double t59331 = t59167*t59168*t59169;
                double t59332 = t59330+t59331+t59328+t59329+1.0;
                double t59333 = 1.0/t59332;
                double t59334 = gamma_bb*gcaa*t59170;
                double t59335 = t59334+1.0;
                double t59336 = 1.0/t59335;
                double t59337 = gamma_bb*gcaa*t59170*3.0;
                double t59338 = gamma_bb*gcaa*t59171*t59165*t59166;
                double t59339 = t59172*t59165*t59166*3.0;
                double t59340 = t59337+t59338+t59339+1.0;
                double t59341 = 1.0/t59340;
                double t59342 = gamma_bb*gcaa*t59170*2.0;
                double t59343 = t59172*t59165*t59166;
                double t59344 = t59342+t59343+1.0;
                double t59345 = 1.0/t59344;
                double t59346 = 1.0/pow(rho_b,1.9E1/3.0);
                double t59347 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t59348 = 1.0/pow(rho_b,3.5E1/3.0);
                double t59349 = 1.0/t59204;
                double t59350 = 1.0/(t59201*t59201);
                double t59351 = b4f*t59151*t59314*(2.0/3.0);
                double t59352 = b2f*c*t59313*(1.0/3.0);
                double t59353 = b1f*c*t59313*t59315*(1.0/6.0);
                double t59354 = b3f*c*t59313*t59149*(1.0/2.0);
                double t59355 = t59351+t59352+t59353+t59354;
                double t59356 = a1f*c*c0f*t59205*t59313*(2.0/3.0);
                double t59357 = a1p*c*c0p*t59313*t59162*(2.0/3.0);
                double t59358 = ccaa4*t59333*t59167*t59168*t59169;
                double t59359 = ccaa1*gamma_bb*gcaa*t59170*t59336;
                double t59360 = ccaa3*gamma_bb*gcaa*t59341*t59171*t59165*t59166;
                double t59361 = ccaa2*t59172*t59165*t59345*t59166;
                double t59362 = ccaa0+t59360+t59361+t59358+t59359;
                v_rho_b[Q] += scale * -(ccab0+ccab1*gcab*t59240*t59264+ccab2*t59241*t59262*t59239+ccab4*t59246*t59247*t59265+ccab3*gcab*t59240*t59241*t59263*t59239)*(-t59325-t59209+t59227+t59326+t59210*(t59312-t59232*t59233*t59238*t59178*(t59312-(1.0/(t59271*t59271)*t59277*(b2f*c*t59266*(1.0/3.0)+b4f*t59151*t59283*(2.0/3.0)+b1f*c*t59266*t59284*(1.0/6.0)+b3f*c*t59213*t59266*(1.0/2.0)))/t59274+a1f*c*c0f*t59266*t59275*(2.0/3.0)-a1p*c*c0p*t59224*t59266*(2.0/3.0))-a1p*c*c0p*t59224*t59266*(2.0/3.0)+t59232*t59233*t59309*t59178*t59278+t59233*t59305*t59238*t59178*t59278*4.0+t59232*t59228*t59229*t59238*t59178*t59278*4.0-Aa*t59302*t59304*t59238*t59292*t59178*(t59233*t59305*4.0+t59232*t59228*t59229*4.0)*2.0-Aa*t59302*t59311*t59304*t59309*t59292*t59178*2.0+(t59311*t59304*t59238*t59292*t59178*1.0/(t59298*t59298)*(b2a*c*t59266*(1.0/3.0)+b4a*t59151*t59283*(2.0/3.0)+b1a*c*t59266*t59284*(1.0/6.0)+b3a*c*t59213*t59266*(1.0/2.0)))/t59301-Aa*a1a*c*t59302*t59311*t59238*t59292*t59266*t59178*(2.0/3.0))+rho_b*(-t59323+t59357+t59175*t59178*(t59323+t59356-t59350*t59207*t59355*t59349-a1p*c*c0p*t59313*t59162*(2.0/3.0)))-t59232*t59233*t59238*t59178*t59278)-t59362*(t59209+t59175*t59178*(t59208-c0p*t59162*t59164*2.0))-(rho_b*t59327+rho_a*(t59196-t59175*t59178*(t59196-c0f*log((t59179*(1.0/2.0))/(b1f*t59182+b3f*t59183+b2f*c*t59180+b4f*t59151*t59184)+1.0)*(a1f*c*t59180+1.0)*2.0))-t59210*(t59227+t59326-t59232*t59233*t59238*t59178*t59278))*(ccab1*gamma_bb*gcab*t59242*t59264*(4.0/3.0)-ccab2*t59241*t59239*1.0/(t59257*t59257)*(gamma_bb*gcab*t59242*(8.0/3.0)+gamma_bb*t59240*t59242*t59239*(8.0/3.0))-ccab4*1.0/(t59252*t59252)*t59246*t59247*(gamma_bb*gcab*t59242*(1.6E1/3.0)+gamma_bb*t59240*t59242*t59239*1.6E1+gamma_bb*gcab*t59241*t59242*t59239*1.6E1+gamma_bb*t59240*t59241*t59242*t59246*(1.6E1/3.0))-ccab1*gamma_bb*t59240*t59242*1.0/(t59254*t59254)*t59239*(4.0/3.0)+ccab2*gamma_bb*t59240*t59242*t59262*t59239*(8.0/3.0)-ccab3*gcab*t59240*t59241*1.0/(t59261*t59261)*t59239*(gamma_bb*gcab*t59242*4.0+gamma_bb*t59240*t59242*t59239*8.0+gamma_bb*gcab*t59241*t59242*t59239*4.0)+ccab3*gamma_bb*gcab*t59241*t59242*t59263*t59239*4.0+ccab4*gamma_bb*t59240*t59241*t59242*t59246*t59265*(1.6E1/3.0))+rho_b*t59327*(ccaa1*gamma_bb*gcaa*t59242*t59336*(8.0/3.0)+ccaa2*t59165*t59345*t59166*t59346*(1.6E1/3.0)+ccaa4*t59333*t59167*t59168*t59348*(3.2E1/3.0)-ccaa1*1.0/(t59335*t59335)*t59165*t59166*t59346*(8.0/3.0)-ccaa2*t59172*1.0/(t59344*t59344)*t59165*t59166*(gamma_bb*gcaa*t59242*(1.6E1/3.0)+t59165*t59166*t59346*(1.6E1/3.0))-ccaa4*1.0/(t59332*t59332)*t59167*t59168*t59169*(gamma_bb*gcaa*t59242*(3.2E1/3.0)+t59165*t59166*t59346*3.2E1+t59167*t59168*t59348*(3.2E1/3.0)+gamma_bb*gcaa*t59165*t59166*t59347*3.2E1)+ccaa3*gamma_bb*gcaa*t59341*t59165*t59166*t59347*8.0-ccaa3*gamma_bb*gcaa*1.0/(t59340*t59340)*t59171*t59165*t59166*(gamma_bb*gcaa*t59242*8.0+t59165*t59166*t59346*1.6E1+gamma_bb*gcaa*t59165*t59166*t59347*8.0))+rho_b*t59362*(-t59323+t59357+t59175*t59178*(t59323+t59356-t59357-t59350*t59207*t59355*t59349));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t59364 = 1.0/pow(rho_a,1.0/3.0);
                double t59365 = c*t59364;
                double t59366 = sqrt(t59365);
                double t59367 = pow(t59365,3.0/2.0);
                double t59368 = c*c;
                double t59369 = 1.0/pow(rho_a,2.0/3.0);
                double t59370 = 1.0/c0p;
                double t59371 = b1p*t59366;
                double t59372 = b3p*t59367;
                double t59373 = b4p*t59368*t59369;
                double t59374 = b2p*c*t59364;
                double t59375 = t59371+t59372+t59373+t59374;
                double t59376 = 1.0/t59375;
                double t59377 = t59370*t59376*(1.0/2.0);
                double t59378 = t59377+1.0;
                double t59379 = log(t59378);
                double t59380 = a1p*c*t59364;
                double t59381 = t59380+1.0;
                double t59382 = pow(2.0,1.0/3.0);
                double t59383 = t59382*2.0;
                double t59384 = t59383-2.0;
                double t59385 = two_13*2.0;
                double t59386 = t59385-2.0;
                double t59387 = 1.0/t59386;
                double t59388 = 1.0/c0f;
                double t59389 = 1.0/pow(rho_b,1.0/3.0);
                double t59390 = c*t59389;
                double t59391 = sqrt(t59390);
                double t59392 = pow(t59390,3.0/2.0);
                double t59393 = 1.0/pow(rho_b,2.0/3.0);
                double t59394 = b1p*t59391;
                double t59395 = b3p*t59392;
                double t59396 = b4p*t59393*t59368;
                double t59397 = b2p*c*t59389;
                double t59398 = t59394+t59395+t59396+t59397;
                double t59399 = 1.0/t59398;
                double t59400 = t59370*t59399*(1.0/2.0);
                double t59401 = t59400+1.0;
                double t59402 = log(t59401);
                double t59403 = a1p*c*t59389;
                double t59404 = t59403+1.0;
                double t59405 = c0p*t59402*t59404*2.0;
                double t59406 = rho_a+rho_b;
                double t59407 = 1.0/pow(t59406,1.0/3.0);
                double t59408 = c*t59407;
                double t59409 = sqrt(t59408);
                double t59410 = pow(t59408,3.0/2.0);
                double t59411 = 1.0/pow(t59406,2.0/3.0);
                double t59412 = b1p*t59409;
                double t59413 = b3p*t59410;
                double t59414 = b4p*t59411*t59368;
                double t59415 = b2p*c*t59407;
                double t59416 = t59412+t59413+t59414+t59415;
                double t59417 = 1.0/t59416;
                double t59418 = t59370*t59417*(1.0/2.0);
                double t59419 = t59418+1.0;
                double t59420 = log(t59419);
                double t59421 = a1p*c*t59407;
                double t59422 = t59421+1.0;
                double t59423 = c0p*t59420*t59422*2.0;
                double t59424 = rho_a-rho_b;
                double t59425 = t59424*t59424;
                double t59426 = 1.0/t59406;
                double t59427 = t59424*t59426;
                double t59428 = 1.0/(t59406*t59406*t59406*t59406);
                double t59429 = t59425*t59425;
                double t59430 = t59427+1.0;
                double t59431 = pow(t59430,4.0/3.0);
                double t59432 = -t59427+1.0;
                double t59433 = pow(t59432,4.0/3.0);
                double t59434 = t59431+t59433-2.0;
                double t59435 = 1.0/pow(rho_a,8.0/3.0);
                double t59436 = gamma_aa*t59435*(1.0/2.0);
                double t59437 = 1.0/pow(rho_b,8.0/3.0);
                double t59438 = gamma_bb*t59437*(1.0/2.0);
                double t59439 = t59436+t59438;
                double t59440 = gcab*t59439;
                double t59441 = t59440+1.0;
                double t59442 = gcab*gcab;
                double t59443 = t59439*t59439;
                double t59444 = t59442*t59442;
                double t59445 = t59443*t59443;
                double t59446 = t59442*t59443;
                double t59447 = gcab*t59439*2.0;
                double t59448 = t59446+t59447+1.0;
                double t59449 = t59442*t59443*3.0;
                double t59450 = gcab*t59442*t59443*t59439;
                double t59451 = gcab*t59439*3.0;
                double t59452 = t59450+t59451+t59449+1.0;
                double t59453 = t59442*t59443*6.0;
                double t59454 = gcab*t59442*t59443*t59439*4.0;
                double t59455 = t59444*t59445;
                double t59456 = gcab*t59439*4.0;
                double t59457 = t59453+t59454+t59455+t59456+1.0;
                double t59458 = c0p*t59381*t59379*2.0;
                double t59459 = b1f*t59366;
                double t59460 = b3f*t59367;
                double t59461 = b4f*t59368*t59369;
                double t59462 = b2f*c*t59364;
                double t59463 = t59460+t59461+t59462+t59459;
                double t59464 = 1.0/t59463;
                double t59465 = t59464*t59388*(1.0/2.0);
                double t59466 = t59465+1.0;
                double t59467 = log(t59466);
                double t59468 = a1f*c*t59364;
                double t59469 = t59468+1.0;
                double t59470 = t59458-c0f*t59467*t59469*2.0;
                double t59471 = t59458-t59470*t59384*t59387;
                double t59472 = gamma_aa*gamma_aa;
                double t59473 = gcaa*gcaa;
                double t59474 = t59473*t59473;
                double t59475 = 1.0/pow(rho_a,3.2E1/3.0);
                double t59476 = 1.0/pow(rho_a,1.6E1/3.0);
                double t59477 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t59478 = gamma_aa*gcaa*t59435;
                double t59479 = t59478+1.0;
                double t59480 = gamma_aa*gcaa*t59435*3.0;
                double t59481 = gamma_aa*gcaa*t59472*t59473*t59477;
                double t59482 = t59472*t59473*t59476*3.0;
                double t59483 = t59480+t59481+t59482+1.0;
                double t59484 = t59472*t59472;
                double t59485 = gamma_aa*gcaa*t59435*4.0;
                double t59486 = gamma_aa*gcaa*t59472*t59473*t59477*4.0;
                double t59487 = t59472*t59473*t59476*6.0;
                double t59488 = t59474*t59475*t59484;
                double t59489 = t59485+t59486+t59487+t59488+1.0;
                double t59490 = gamma_aa*gcaa*t59435*2.0;
                double t59491 = t59472*t59473*t59476;
                double t59492 = t59490+t59491+1.0;
                v_gamma_aa[Q] += scale * (rho_a*t59471+rho_b*(t59405-t59384*t59387*(t59405-c0f*log((t59388*(1.0/2.0))/(b1f*t59391+b3f*t59392+b2f*c*t59389+b4f*t59393*t59368)+1.0)*(a1f*c*t59389+1.0)*2.0))-t59406*(t59423-t59434*t59428*t59429*t59387*(t59423-c0f*log((t59388*(1.0/2.0))/(b1f*t59409+b3f*t59410+b2f*c*t59407+b4f*t59411*t59368)+1.0)*(a1f*c*t59407+1.0)*2.0)+(Aa*t59434*t59387*log((1.0/2.0)/(Aa*(b1a*t59409+b3a*t59410+b2a*c*t59407+b4a*t59411*t59368))+1.0)*(t59428*t59429-1.0)*(a1a*c*t59407+1.0)*2.0)/d2fz0))*((ccab1*gcab*t59435*(1.0/2.0))/t59441-ccab4*t59444*t59445*1.0/(t59457*t59457)*(gcab*t59435*2.0+t59442*t59435*t59439*6.0+gcab*t59442*t59443*t59435*6.0+t59443*t59435*t59444*t59439*2.0)-ccab2*t59442*t59443*1.0/(t59448*t59448)*(gcab*t59435+t59442*t59435*t59439)-ccab1*1.0/(t59441*t59441)*t59442*t59435*t59439*(1.0/2.0)+(ccab2*t59442*t59435*t59439)/t59448+(ccab3*gcab*t59442*t59443*t59435*(3.0/2.0))/t59452+(ccab4*t59443*t59435*t59444*t59439*2.0)/t59457-ccab3*gcab*t59442*t59443*1.0/(t59452*t59452)*t59439*(gcab*t59435*(3.0/2.0)+t59442*t59435*t59439*3.0+gcab*t59442*t59443*t59435*(3.0/2.0)))-rho_a*t59471*((ccaa1*gcaa*t59435)/t59479+(ccaa2*gamma_aa*t59473*t59476*2.0)/t59492-ccaa1*gamma_aa*t59473*t59476*1.0/(t59479*t59479)-ccaa2*t59472*t59473*1.0/(t59492*t59492)*t59476*(gcaa*t59435*2.0+gamma_aa*t59473*t59476*2.0)+(ccaa4*gamma_aa*t59472*t59474*t59475*4.0)/t59489+(ccaa3*gcaa*t59472*t59473*t59477*3.0)/t59483-ccaa4*t59474*t59475*t59484*1.0/(t59489*t59489)*(gcaa*t59435*4.0+gamma_aa*t59473*t59476*1.2E1+gamma_aa*t59472*t59474*t59475*4.0+gcaa*t59472*t59473*t59477*1.2E1)-ccaa3*gamma_aa*gcaa*t59472*t59473*1.0/(t59483*t59483)*t59477*(gcaa*t59435*3.0+gamma_aa*t59473*t59476*6.0+gcaa*t59472*t59473*t59477*3.0));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t59495 = 1.0/pow(rho_a,1.0/3.0);
                double t59496 = c*t59495;
                double t59497 = sqrt(t59496);
                double t59498 = pow(t59496,3.0/2.0);
                double t59499 = c*c;
                double t59500 = 1.0/pow(rho_a,2.0/3.0);
                double t59501 = 1.0/c0p;
                double t59502 = b1p*t59497;
                double t59503 = b3p*t59498;
                double t59504 = b4p*t59500*t59499;
                double t59505 = b2p*c*t59495;
                double t59506 = t59502+t59503+t59504+t59505;
                double t59507 = 1.0/t59506;
                double t59508 = t59501*t59507*(1.0/2.0);
                double t59509 = t59508+1.0;
                double t59510 = log(t59509);
                double t59511 = a1p*c*t59495;
                double t59512 = t59511+1.0;
                double t59513 = pow(2.0,1.0/3.0);
                double t59514 = t59513*2.0;
                double t59515 = t59514-2.0;
                double t59516 = two_13*2.0;
                double t59517 = t59516-2.0;
                double t59518 = 1.0/t59517;
                double t59519 = 1.0/c0f;
                double t59520 = 1.0/pow(rho_b,1.0/3.0);
                double t59521 = c*t59520;
                double t59522 = sqrt(t59521);
                double t59523 = pow(t59521,3.0/2.0);
                double t59524 = 1.0/pow(rho_b,2.0/3.0);
                double t59525 = b1p*t59522;
                double t59526 = b3p*t59523;
                double t59527 = b4p*t59524*t59499;
                double t59528 = b2p*c*t59520;
                double t59529 = t59525+t59526+t59527+t59528;
                double t59530 = 1.0/t59529;
                double t59531 = t59501*t59530*(1.0/2.0);
                double t59532 = t59531+1.0;
                double t59533 = log(t59532);
                double t59534 = a1p*c*t59520;
                double t59535 = t59534+1.0;
                double t59536 = c0p*t59533*t59535*2.0;
                double t59537 = rho_a+rho_b;
                double t59538 = 1.0/pow(t59537,1.0/3.0);
                double t59539 = c*t59538;
                double t59540 = sqrt(t59539);
                double t59541 = pow(t59539,3.0/2.0);
                double t59542 = 1.0/pow(t59537,2.0/3.0);
                double t59543 = b1p*t59540;
                double t59544 = b3p*t59541;
                double t59545 = b4p*t59542*t59499;
                double t59546 = b2p*c*t59538;
                double t59547 = t59543+t59544+t59545+t59546;
                double t59548 = 1.0/t59547;
                double t59549 = t59501*t59548*(1.0/2.0);
                double t59550 = t59549+1.0;
                double t59551 = log(t59550);
                double t59552 = a1p*c*t59538;
                double t59553 = t59552+1.0;
                double t59554 = c0p*t59551*t59553*2.0;
                double t59555 = rho_a-rho_b;
                double t59556 = t59555*t59555;
                double t59557 = 1.0/t59537;
                double t59558 = t59555*t59557;
                double t59559 = 1.0/(t59537*t59537*t59537*t59537);
                double t59560 = t59556*t59556;
                double t59561 = t59558+1.0;
                double t59562 = pow(t59561,4.0/3.0);
                double t59563 = -t59558+1.0;
                double t59564 = pow(t59563,4.0/3.0);
                double t59565 = t59562+t59564-2.0;
                double t59566 = 1.0/pow(rho_b,8.0/3.0);
                double t59567 = 1.0/pow(rho_a,8.0/3.0);
                double t59568 = gamma_aa*t59567*(1.0/2.0);
                double t59569 = gamma_bb*t59566*(1.0/2.0);
                double t59570 = t59568+t59569;
                double t59571 = gcab*t59570;
                double t59572 = t59571+1.0;
                double t59573 = gcab*gcab;
                double t59574 = t59570*t59570;
                double t59575 = t59573*t59573;
                double t59576 = t59574*t59574;
                double t59577 = t59573*t59574;
                double t59578 = gcab*t59570*2.0;
                double t59579 = t59577+t59578+1.0;
                double t59580 = t59573*t59574*3.0;
                double t59581 = gcab*t59570*t59573*t59574;
                double t59582 = gcab*t59570*3.0;
                double t59583 = t59580+t59581+t59582+1.0;
                double t59584 = t59573*t59574*6.0;
                double t59585 = gcab*t59570*t59573*t59574*4.0;
                double t59586 = t59575*t59576;
                double t59587 = gcab*t59570*4.0;
                double t59588 = t59584+t59585+t59586+t59587+1.0;
                double t59589 = c0p*t59510*t59512*2.0;
                double t59590 = b1f*t59522;
                double t59591 = b3f*t59523;
                double t59592 = b4f*t59524*t59499;
                double t59593 = b2f*c*t59520;
                double t59594 = t59590+t59591+t59592+t59593;
                double t59595 = 1.0/t59594;
                double t59596 = t59519*t59595*(1.0/2.0);
                double t59597 = t59596+1.0;
                double t59598 = log(t59597);
                double t59599 = a1f*c*t59520;
                double t59600 = t59599+1.0;
                double t59601 = t59536-c0f*t59600*t59598*2.0;
                double t59602 = t59536-t59601*t59515*t59518;
                double t59603 = gamma_bb*gamma_bb;
                double t59604 = gcaa*gcaa;
                double t59605 = t59604*t59604;
                double t59606 = 1.0/pow(rho_b,3.2E1/3.0);
                double t59607 = 1.0/pow(rho_b,1.6E1/3.0);
                double t59608 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t59609 = gamma_bb*gcaa*t59566;
                double t59610 = t59609+1.0;
                double t59611 = gamma_bb*gcaa*t59566*3.0;
                double t59612 = gamma_bb*gcaa*t59603*t59604*t59608;
                double t59613 = t59603*t59604*t59607*3.0;
                double t59614 = t59611+t59612+t59613+1.0;
                double t59615 = t59603*t59603;
                double t59616 = gamma_bb*gcaa*t59566*4.0;
                double t59617 = gamma_bb*gcaa*t59603*t59604*t59608*4.0;
                double t59618 = t59603*t59604*t59607*6.0;
                double t59619 = t59605*t59606*t59615;
                double t59620 = t59616+t59617+t59618+t59619+1.0;
                double t59621 = gamma_bb*gcaa*t59566*2.0;
                double t59622 = t59603*t59604*t59607;
                double t59623 = t59621+t59622+1.0;
                v_gamma_bb[Q] += scale * (rho_b*t59602+rho_a*(t59589-t59515*t59518*(t59589-c0f*log((t59519*(1.0/2.0))/(b1f*t59497+b3f*t59498+b2f*c*t59495+b4f*t59500*t59499)+1.0)*(a1f*c*t59495+1.0)*2.0))-t59537*(t59554-t59560*t59518*t59565*t59559*(t59554-c0f*log((t59519*(1.0/2.0))/(b1f*t59540+b3f*t59541+b2f*c*t59538+b4f*t59542*t59499)+1.0)*(a1f*c*t59538+1.0)*2.0)+(Aa*t59518*t59565*log((1.0/2.0)/(Aa*(b1a*t59540+b3a*t59541+b2a*c*t59538+b4a*t59542*t59499))+1.0)*(t59560*t59559-1.0)*(a1a*c*t59538+1.0)*2.0)/d2fz0))*((ccab1*gcab*t59566*(1.0/2.0))/t59572-ccab4*t59575*t59576*1.0/(t59588*t59588)*(gcab*t59566*2.0+t59570*t59573*t59566*6.0+gcab*t59573*t59574*t59566*6.0+t59570*t59574*t59566*t59575*2.0)-ccab2*t59573*t59574*1.0/(t59579*t59579)*(gcab*t59566+t59570*t59573*t59566)-ccab1*t59570*1.0/(t59572*t59572)*t59573*t59566*(1.0/2.0)+(ccab2*t59570*t59573*t59566)/t59579+(ccab3*gcab*t59573*t59574*t59566*(3.0/2.0))/t59583+(ccab4*t59570*t59574*t59566*t59575*2.0)/t59588-ccab3*gcab*t59570*t59573*t59574*1.0/(t59583*t59583)*(gcab*t59566*(3.0/2.0)+t59570*t59573*t59566*3.0+gcab*t59573*t59574*t59566*(3.0/2.0)))-rho_b*t59602*((ccaa1*gcaa*t59566)/t59610-ccaa1*gamma_bb*1.0/(t59610*t59610)*t59604*t59607+(ccaa2*gamma_bb*t59604*t59607*2.0)/t59623-ccaa2*t59603*t59604*1.0/(t59623*t59623)*t59607*(gcaa*t59566*2.0+gamma_bb*t59604*t59607*2.0)+(ccaa4*gamma_bb*t59603*t59605*t59606*4.0)/t59620+(ccaa3*gcaa*t59603*t59604*t59608*3.0)/t59614-ccaa4*1.0/(t59620*t59620)*t59605*t59606*t59615*(gcaa*t59566*4.0+gamma_bb*t59604*t59607*1.2E1+gamma_bb*t59603*t59605*t59606*4.0+gcaa*t59603*t59604*t59608*1.2E1)-ccaa3*gamma_bb*gcaa*t59603*t59604*1.0/(t59614*t59614)*t59608*(gcaa*t59566*3.0+gamma_bb*t59604*t59607*6.0+gcaa*t59603*t59604*t59608*3.0));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t59627 = rho_a+rho_b;
                double t59628 = 1.0/pow(t59627,1.0/3.0);
                double t59629 = c*t59628;
                double t59630 = sqrt(t59629);
                double t59631 = b1p*t59630;
                double t59632 = pow(t59629,3.0/2.0);
                double t59633 = b3p*t59632;
                double t59634 = c*c;
                double t59635 = 1.0/pow(t59627,2.0/3.0);
                double t59636 = b4p*t59634*t59635;
                double t59637 = b2p*c*t59628;
                double t59638 = t59631+t59633+t59636+t59637;
                double t59639 = 1.0/pow(t59627,4.0/3.0);
                double t59640 = 1.0/c0p;
                double t59641 = 1.0/t59638;
                double t59642 = t59640*t59641*(1.0/2.0);
                double t59643 = t59642+1.0;
                double t59644 = a1p*c*t59628;
                double t59645 = t59644+1.0;
                double t59646 = rho_a-rho_b;
                double t59647 = t59646*t59646;
                double t59648 = 1.0/t59627;
                double t59649 = t59646*t59648;
                double t59650 = two_13*2.0;
                double t59651 = t59650-2.0;
                double t59652 = 1.0/t59651;
                double t59653 = 1.0/c0f;
                double t59654 = b1f*t59630;
                double t59655 = b3f*t59632;
                double t59656 = b4f*t59634*t59635;
                double t59657 = b2f*c*t59628;
                double t59658 = t59654+t59655+t59656+t59657;
                double t59659 = 1.0/t59658;
                double t59660 = t59653*t59659*(1.0/2.0);
                double t59661 = t59660+1.0;
                double t59662 = log(t59661);
                double t59663 = a1f*c*t59628;
                double t59664 = t59663+1.0;
                double t59665 = log(t59643);
                double t59675 = c0f*t59662*t59664*2.0;
                double t59676 = c0p*t59645*t59665*2.0;
                double t59666 = t59675-t59676;
                double t59667 = t59649+1.0;
                double t59668 = pow(t59667,4.0/3.0);
                double t59669 = -t59649+1.0;
                double t59670 = pow(t59669,4.0/3.0);
                double t59671 = t59670+t59668-2.0;
                double t59672 = 1.0/(t59627*t59627);
                double t59703 = t59672*t59646;
                double t59673 = -t59703+t59648;
                double t59674 = 1.0/(t59627*t59627*t59627*t59627);
                double t59677 = t59647*t59647;
                double t59678 = 1.0/pow(t59627,5.0/3.0);
                double t59679 = 1.0/sqrt(t59629);
                double t59680 = 1.0/t59643;
                double t59681 = 1.0/(t59638*t59638);
                double t59682 = b4p*t59634*t59678*(2.0/3.0);
                double t59683 = b2p*c*t59639*(1.0/3.0);
                double t59684 = b1p*c*t59639*t59679*(1.0/6.0);
                double t59685 = b3p*c*t59630*t59639*(1.0/2.0);
                double t59686 = t59682+t59683+t59684+t59685;
                double t59687 = t59680*t59645*t59681*t59686;
                double t59688 = 1.0/(t59627*t59627*t59627*t59627*t59627);
                double t59689 = 1.0/d2fz0;
                double t59690 = 1.0/Aa;
                double t59691 = b1a*t59630;
                double t59692 = b3a*t59632;
                double t59693 = b4a*t59634*t59635;
                double t59694 = b2a*c*t59628;
                double t59695 = t59691+t59692+t59693+t59694;
                double t59696 = 1.0/t59695;
                double t59697 = t59690*t59696*(1.0/2.0);
                double t59698 = t59697+1.0;
                double t59699 = log(t59698);
                double t59700 = a1a*c*t59628;
                double t59701 = t59700+1.0;
                double t59702 = pow(t59667,1.0/3.0);
                double t59704 = t59702*t59673*(4.0/3.0);
                double t59705 = pow(t59669,1.0/3.0);
                double t59780 = t59705*t59673*(4.0/3.0);
                double t59706 = t59704-t59780;
                double t59707 = t59674*t59677;
                double t59708 = t59707-1.0;
                double t59709 = 1.0/pow(rho_a,1.0/3.0);
                double t59710 = c*t59709;
                double t59711 = sqrt(t59710);
                double t59712 = b1f*t59711;
                double t59713 = pow(t59710,3.0/2.0);
                double t59714 = b3f*t59713;
                double t59715 = 1.0/pow(rho_a,2.0/3.0);
                double t59716 = b4f*t59634*t59715;
                double t59717 = b2f*c*t59709;
                double t59718 = t59712+t59714+t59716+t59717;
                double t59719 = 1.0/pow(rho_a,4.0/3.0);
                double t59720 = b1p*t59711;
                double t59721 = b3p*t59713;
                double t59722 = b4p*t59634*t59715;
                double t59723 = b2p*c*t59709;
                double t59724 = t59720+t59721+t59722+t59723;
                double t59725 = 1.0/pow(rho_a,5.0/3.0);
                double t59726 = 1.0/sqrt(t59710);
                double t59727 = 1.0/t59718;
                double t59728 = t59653*t59727*(1.0/2.0);
                double t59729 = t59728+1.0;
                double t59730 = 1.0/t59724;
                double t59731 = t59640*t59730*(1.0/2.0);
                double t59732 = t59731+1.0;
                double t59733 = a1p*c*t59709;
                double t59734 = t59733+1.0;
                double t59735 = 1.0/t59732;
                double t59736 = 1.0/(t59724*t59724);
                double t59737 = b4p*t59634*t59725*(2.0/3.0);
                double t59738 = b2p*c*t59719*(1.0/3.0);
                double t59739 = b1p*c*t59726*t59719*(1.0/6.0);
                double t59740 = b3p*c*t59711*t59719*(1.0/2.0);
                double t59741 = t59740+t59737+t59738+t59739;
                double t59742 = t59741*t59734*t59735*t59736;
                double t59743 = log(t59732);
                double t59744 = pow(2.0,1.0/3.0);
                double t59745 = t59744*2.0;
                double t59746 = t59745-2.0;
                double t59747 = log(t59729);
                double t59748 = a1f*c*t59709;
                double t59749 = t59748+1.0;
                double t59750 = gcab*gcab;
                double t59754 = 1.0/pow(rho_a,8.0/3.0);
                double t59755 = gamma_aa*t59754*(1.0/2.0);
                double t59756 = 1.0/pow(rho_b,8.0/3.0);
                double t59757 = gamma_bb*t59756*(1.0/2.0);
                double t59751 = t59755+t59757;
                double t59752 = t59751*t59751;
                double t59753 = 1.0/pow(rho_a,1.1E1/3.0);
                double t59758 = t59750*t59750;
                double t59759 = t59752*t59752;
                double t59760 = t59750*t59752*6.0;
                double t59761 = gcab*t59750*t59751*t59752*4.0;
                double t59762 = t59758*t59759;
                double t59763 = gcab*t59751*4.0;
                double t59764 = t59760+t59761+t59762+t59763+1.0;
                double t59765 = gcab*t59751;
                double t59766 = t59765+1.0;
                double t59767 = t59750*t59752;
                double t59768 = gcab*t59751*2.0;
                double t59769 = t59767+t59768+1.0;
                double t59770 = t59750*t59752*3.0;
                double t59771 = gcab*t59750*t59751*t59752;
                double t59772 = gcab*t59751*3.0;
                double t59773 = t59770+t59771+t59772+1.0;
                double t59774 = 1.0/t59769;
                double t59775 = 1.0/t59773;
                double t59776 = 1.0/t59766;
                double t59777 = 1.0/t59764;
                double t59778 = 1.0/pow(t59627,7.0/3.0);
                double t59779 = 1.0/pow(t59627,8.0/3.0);
                double t59781 = 1.0/t59661;
                double t59782 = 1.0/(t59658*t59658);
                double t59783 = b4f*t59634*t59678*(2.0/3.0);
                double t59784 = b2f*c*t59639*(1.0/3.0);
                double t59785 = b1f*c*t59639*t59679*(1.0/6.0);
                double t59786 = b3f*c*t59630*t59639*(1.0/2.0);
                double t59787 = t59783+t59784+t59785+t59786;
                double t59788 = a1f*c*c0f*t59662*t59639*(2.0/3.0);
                double t59790 = t59664*t59781*t59782*t59787;
                double t59791 = a1p*c*c0p*t59665*t59639*(2.0/3.0);
                double t59789 = -t59790-t59791+t59687+t59788;
                double t59792 = t59686*t59686;
                double t59793 = 1.0/pow(t59629,3.0/2.0);
                double t59794 = b4p*t59634*t59779*(1.0E1/9.0);
                double t59795 = b2p*c*t59778*(4.0/9.0);
                double t59796 = b1p*c*t59679*t59778*(2.0/9.0);
                double t59797 = b3p*c*t59630*t59778*(2.0/3.0);
                double t59798 = b3p*t59634*t59679*t59779*(1.0/1.2E1);
                double t59799 = t59794+t59795+t59796+t59797+t59798-b1p*t59634*t59793*t59779*(1.0/3.6E1);
                double t59800 = 1.0/(t59638*t59638*t59638);
                double t59801 = t59800*t59680*t59645*t59792*2.0;
                double t59802 = t59787*t59787;
                double t59803 = 1.0/(t59643*t59643);
                double t59804 = 1.0/(t59638*t59638*t59638*t59638);
                double t59805 = t59790+t59791-t59687-t59788;
                double t59806 = t59672*2.0;
                double t59807 = 1.0/(t59627*t59627*t59627);
                double t59814 = t59807*t59646*2.0;
                double t59808 = -t59814+t59806;
                double t59809 = t59673*t59673;
                double t59810 = a1p*c*c0p*t59665*t59778*(8.0/9.0);
                double t59811 = 1.0/(t59627*t59627*t59627*t59627*t59627*t59627);
                double t59812 = t59677*t59688*4.0;
                double t59822 = t59646*t59647*t59674*4.0;
                double t59813 = t59812-t59822;
                double t59815 = t59705*t59808*(4.0/3.0);
                double t59816 = 1.0/pow(t59667,2.0/3.0);
                double t59817 = t59816*t59809*(4.0/9.0);
                double t59818 = 1.0/pow(t59669,2.0/3.0);
                double t59819 = t59809*t59818*(4.0/9.0);
                double t59820 = t59815+t59817+t59819-t59702*t59808*(4.0/3.0);
                double t59821 = 1.0/t59698;
                double t59823 = 1.0/(t59695*t59695);
                double t59824 = b4a*t59634*t59678*(2.0/3.0);
                double t59825 = b2a*c*t59639*(1.0/3.0);
                double t59826 = b1a*c*t59639*t59679*(1.0/6.0);
                double t59827 = b3a*c*t59630*t59639*(1.0/2.0);
                double t59828 = t59824+t59825+t59826+t59827;
                double t59829 = t59828*t59828;
                double t59830 = t59680*t59645*t59681*t59799;
                double t59831 = 1.0/t59729;
                double t59832 = b4f*t59634*t59725*(2.0/3.0);
                double t59833 = b2f*c*t59719*(1.0/3.0);
                double t59834 = b1f*c*t59726*t59719*(1.0/6.0);
                double t59835 = b3f*c*t59711*t59719*(1.0/2.0);
                double t59836 = t59832+t59833+t59834+t59835;
                double t59837 = 1.0/(t59718*t59718);
                double t59838 = 1.0/pow(rho_a,7.0/3.0);
                double t59839 = 1.0/pow(t59710,3.0/2.0);
                double t59840 = t59836*t59836;
                double t59841 = t59741*t59741;
                double t59842 = 1.0/(t59724*t59724*t59724);
                double t59843 = t59841*t59734*t59842*t59735*2.0;
                double t59844 = b4p*t59634*t59754*(1.0E1/9.0);
                double t59845 = b2p*c*t59838*(4.0/9.0);
                double t59846 = b3p*t59634*t59726*t59754*(1.0/1.2E1);
                double t59847 = b1p*c*t59726*t59838*(2.0/9.0);
                double t59848 = b3p*c*t59711*t59838*(2.0/3.0);
                double t59966 = b1p*t59634*t59754*t59839*(1.0/3.6E1);
                double t59849 = t59844+t59845+t59846+t59847+t59848-t59966;
                double t59850 = 1.0/(t59732*t59732);
                double t59851 = 1.0/(t59724*t59724*t59724*t59724);
                double t59852 = a1p*c*c0p*t59743*t59838*(8.0/9.0);
                double t59853 = a1f*c*c0f*t59719*t59747*(2.0/3.0);
                double t59854 = a1p*c*c0p*t59743*t59719*(2.0/3.0);
                double t59855 = t59640*t59803*t59804*t59645*t59792*(1.0/2.0);
                double t59927 = t59831*t59836*t59837*t59749;
                double t59856 = t59742+t59853-t59854-t59927;
                double t59857 = gamma_aa*gamma_aa;
                double t59858 = gcaa*gcaa;
                double t59859 = t59857*t59857;
                double t59860 = t59858*t59858;
                double t59861 = 1.0/pow(rho_a,3.2E1/3.0);
                double t59862 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t59863 = 1.0/pow(rho_a,1.6E1/3.0);
                double t59864 = c0f*t59747*t59749*2.0;
                double t59866 = c0p*t59734*t59743*2.0;
                double t59865 = t59864-t59866;
                double t59867 = 1.0/pow(rho_b,1.0/3.0);
                double t59868 = c*t59867;
                double t59869 = sqrt(t59868);
                double t59870 = pow(t59868,3.0/2.0);
                double t59871 = 1.0/pow(rho_b,2.0/3.0);
                double t59872 = b1p*t59869;
                double t59873 = b3p*t59870;
                double t59874 = b4p*t59634*t59871;
                double t59875 = b2p*c*t59867;
                double t59876 = t59872+t59873+t59874+t59875;
                double t59877 = 1.0/t59876;
                double t59878 = t59640*t59877*(1.0/2.0);
                double t59879 = t59878+1.0;
                double t59880 = log(t59879);
                double t59881 = a1p*c*t59867;
                double t59882 = t59881+1.0;
                double t59883 = c0p*t59880*t59882*2.0;
                double t59884 = t59652*t59671*t59674*t59666*t59677;
                double t59885 = Aa*t59701*t59652*t59671*t59708*t59689*t59699*2.0;
                double t59886 = gamma_aa*gcab*t59753*(1.6E1/3.0);
                double t59887 = gamma_aa*gcab*t59750*t59752*t59753*1.6E1;
                double t59888 = gamma_aa*t59751*t59752*t59753*t59758*(1.6E1/3.0);
                double t59889 = gamma_aa*t59750*t59751*t59753*1.6E1;
                double t59890 = t59886+t59887+t59888+t59889;
                double t59891 = 1.0/(t59766*t59766);
                double t59892 = 1.0/pow(rho_a,2.2E1/3.0);
                double t59893 = gamma_aa*gcab*t59753*(8.0/3.0);
                double t59894 = gamma_aa*t59750*t59751*t59753*(8.0/3.0);
                double t59895 = t59893+t59894;
                double t59896 = 1.0/(t59773*t59773);
                double t59897 = 1.0/pow(rho_a,1.4E1/3.0);
                double t59898 = 1.0/(t59764*t59764);
                double t59899 = 1.0/(t59769*t59769);
                double t59900 = gamma_aa*gcab*t59753*4.0;
                double t59901 = gamma_aa*gcab*t59750*t59752*t59753*4.0;
                double t59902 = gamma_aa*t59750*t59751*t59753*8.0;
                double t59903 = t59900+t59901+t59902;
                double t59904 = t59652*t59746*t59865;
                double t59905 = t59904+t59866;
                double t59906 = gamma_aa*gcaa*t59754*4.0;
                double t59907 = gamma_aa*gcaa*t59862*t59857*t59858*4.0;
                double t59908 = t59863*t59857*t59858*6.0;
                double t59909 = t59860*t59861*t59859;
                double t59910 = t59906+t59907+t59908+t59909+1.0;
                double t59911 = 1.0/t59910;
                double t59912 = gamma_aa*gcaa*t59754;
                double t59913 = t59912+1.0;
                double t59914 = 1.0/t59913;
                double t59915 = gamma_aa*gcaa*t59754*3.0;
                double t59916 = gamma_aa*gcaa*t59862*t59857*t59858;
                double t59917 = t59863*t59857*t59858*3.0;
                double t59918 = t59915+t59916+t59917+1.0;
                double t59919 = 1.0/t59918;
                double t59920 = gamma_aa*gcaa*t59754*2.0;
                double t59921 = t59863*t59857*t59858;
                double t59922 = t59920+t59921+1.0;
                double t59923 = 1.0/t59922;
                double t59924 = 1.0/pow(rho_a,1.9E1/3.0);
                double t59925 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t59926 = 1.0/pow(rho_a,3.5E1/3.0);
                double t59928 = t59652*t59746*t59856;
                double t59929 = ccaa4*t59911*t59860*t59926*t59859*(3.2E1/3.0);
                double t59930 = ccaa1*gamma_aa*gcaa*t59914*t59753*(8.0/3.0);
                double t59931 = ccaa3*gamma_aa*gcaa*t59925*t59919*t59857*t59858*8.0;
                double t59932 = ccaa2*t59923*t59924*t59857*t59858*(1.6E1/3.0);
                double t59933 = 1.0/(t59913*t59913);
                double t59934 = gamma_aa*gcaa*t59753*8.0;
                double t59935 = gamma_aa*gcaa*t59925*t59857*t59858*8.0;
                double t59936 = t59924*t59857*t59858*1.6E1;
                double t59937 = t59934+t59935+t59936;
                double t59938 = 1.0/(t59918*t59918);
                double t59939 = gamma_aa*gcaa*t59753*(3.2E1/3.0);
                double t59940 = gamma_aa*gcaa*t59925*t59857*t59858*3.2E1;
                double t59941 = t59924*t59857*t59858*3.2E1;
                double t59942 = t59860*t59926*t59859*(3.2E1/3.0);
                double t59943 = t59940+t59941+t59942+t59939;
                double t59944 = 1.0/(t59910*t59910);
                double t59945 = gamma_aa*gcaa*t59753*(1.6E1/3.0);
                double t59946 = t59924*t59857*t59858*(1.6E1/3.0);
                double t59947 = t59945+t59946;
                double t59948 = 1.0/(t59922*t59922);
                double t59949 = t59930+t59931+t59932+t59929-ccaa1*t59924*t59933*t59857*t59858*(8.0/3.0)-ccaa4*t59860*t59861*t59943*t59944*t59859-ccaa2*t59863*t59857*t59947*t59858*t59948-ccaa3*gamma_aa*gcaa*t59862*t59937*t59857*t59938*t59858;
                double t59950 = -t59742+t59854+t59928;
                double t59951 = 1.0/pow(rho_a,1.0E1);
                double t59952 = 1.0/pow(rho_a,3.8E1/3.0);
                double t59953 = ccaa4*t59911*t59860*t59861*t59859;
                double t59954 = ccaa1*gamma_aa*gcaa*t59914*t59754;
                double t59955 = ccaa3*gamma_aa*gcaa*t59862*t59919*t59857*t59858;
                double t59956 = ccaa2*t59923*t59863*t59857*t59858;
                double t59957 = ccaa0+t59953+t59954+t59955+t59956;
                double t59958 = 1.0/(t59718*t59718*t59718);
                double t59959 = b4f*t59634*t59754*(1.0E1/9.0);
                double t59960 = b2f*c*t59838*(4.0/9.0);
                double t59961 = b3f*t59634*t59726*t59754*(1.0/1.2E1);
                double t59962 = b1f*c*t59726*t59838*(2.0/9.0);
                double t59963 = b3f*c*t59711*t59838*(2.0/3.0);
                double t59964 = t59960+t59961+t59962+t59963+t59959-b1f*t59634*t59754*t59839*(1.0/3.6E1);
                double t59965 = t59831*t59837*t59964*t59749;
                double t59967 = t59734*t59735*t59736*t59849;
                double t59968 = 1.0/(t59729*t59729);
                double t59969 = 1.0/(t59718*t59718*t59718*t59718);
                double t59970 = t59840*t59653*t59749*t59968*t59969*(1.0/2.0);
                double t59971 = t59640*t59841*t59850*t59734*t59851*(1.0/2.0);
                double t59972 = a1f*c*t59831*t59719*t59836*t59837*(2.0/3.0);
                double t59973 = a1p*c*t59741*t59735*t59736*t59719*(2.0/3.0);
                v_rho_a_rho_a[Q] += scale * (rho_a*t59905+rho_b*(t59883-t59652*t59746*(t59883-c0f*log((t59653*(1.0/2.0))/(b1f*t59869+b3f*t59870+b2f*c*t59867+b4f*t59634*t59871)+1.0)*(a1f*c*t59867+1.0)*2.0))-t59627*(t59676+t59884+t59885))*(-ccab2*t59750*t59752*t59899*(gamma_aa*gcab*t59897*(8.8E1/9.0)+t59750*t59892*t59857*(3.2E1/9.0)+gamma_aa*t59750*t59751*t59897*(8.8E1/9.0))+ccab2*t59750*t59752*1.0/(t59769*t59769*t59769)*(t59895*t59895)*2.0+ccab4*1.0/(t59764*t59764*t59764)*(t59890*t59890)*t59758*t59759*2.0+ccab1*gamma_aa*gcab*t59776*t59897*(4.4E1/9.0)-ccab1*t59750*t59891*t59892*t59857*(3.2E1/9.0)+ccab2*t59750*t59774*t59892*t59857*(3.2E1/9.0)-ccab4*t59758*t59759*t59898*(gamma_aa*gcab*t59897*(1.76E2/9.0)+t59750*t59892*t59857*(6.4E1/3.0)+gamma_aa*t59750*t59751*t59897*(1.76E2/3.0)+t59752*t59892*t59758*t59857*(6.4E1/3.0)+gamma_aa*gcab*t59750*t59752*t59897*(1.76E2/3.0)+gamma_aa*t59751*t59752*t59758*t59897*(1.76E2/9.0)+gcab*t59750*t59751*t59892*t59857*(1.28E2/3.0))+ccab4*t59752*t59892*t59758*t59857*t59777*(6.4E1/3.0)-ccab1*gamma_aa*t59750*t59751*t59891*t59897*(4.4E1/9.0)+ccab2*gamma_aa*t59750*t59751*t59774*t59897*(8.8E1/9.0)+ccab3*gcab*t59750*(t59903*t59903)*t59751*t59752*1.0/(t59773*t59773*t59773)*2.0+ccab3*gamma_aa*gcab*t59750*t59752*t59775*t59897*(4.4E1/3.0)-ccab2*gamma_aa*t59750*t59751*t59753*t59895*t59899*(1.6E1/3.0)+ccab4*gamma_aa*t59751*t59752*t59758*t59777*t59897*(1.76E2/9.0)+ccab3*gcab*t59750*t59751*t59775*t59892*t59857*(3.2E1/3.0)+ccab1*gcab*t59750*t59751*1.0/(t59766*t59766*t59766)*t59892*t59857*(3.2E1/9.0)-ccab3*gcab*t59750*t59751*t59752*t59896*(gamma_aa*gcab*t59897*(4.4E1/3.0)+t59750*t59892*t59857*(3.2E1/3.0)+gamma_aa*t59750*t59751*t59897*(8.8E1/3.0)+gamma_aa*gcab*t59750*t59752*t59897*(4.4E1/3.0)+gcab*t59750*t59751*t59892*t59857*(3.2E1/3.0))-ccab3*gamma_aa*gcab*t59750*t59903*t59752*t59753*t59896*8.0-ccab4*gamma_aa*t59751*t59752*t59753*t59890*t59758*t59898*(3.2E1/3.0))+t59950*t59957*2.0+t59905*t59949*2.0+(t59676+t59884+t59885+rho_a*(-t59742+t59854+t59652*t59746*(t59742+t59853-t59831*t59836*t59837*t59749-a1p*c*c0p*t59743*t59719*(2.0/3.0)))+t59627*(t59687-a1p*c*c0p*t59665*t59639*(2.0/3.0)+t59652*t59706*t59674*t59666*t59677-t59652*t59671*t59666*t59677*t59688*4.0-t59652*t59671*t59674*t59677*t59789+t59652*t59671*t59646*t59647*t59674*t59666*4.0-Aa*t59701*t59813*t59652*t59671*t59689*t59699*2.0+Aa*t59701*t59652*t59706*t59708*t59689*t59699*2.0+t59701*t59821*t59652*t59823*t59671*t59708*t59828*t59689-Aa*a1a*c*t59652*t59671*t59708*t59639*t59689*t59699*(2.0/3.0))-c0p*t59734*t59743*2.0-t59652*t59746*t59865)*(ccab1*gamma_aa*gcab*t59753*t59776*(4.0/3.0)-ccab2*t59750*t59752*t59895*t59899-ccab4*t59890*t59758*t59759*t59898-ccab1*gamma_aa*t59750*t59751*t59753*t59891*(4.0/3.0)+ccab2*gamma_aa*t59750*t59751*t59753*t59774*(8.0/3.0)+ccab3*gamma_aa*gcab*t59750*t59752*t59753*t59775*4.0+ccab4*gamma_aa*t59751*t59752*t59753*t59758*t59777*(1.6E1/3.0)-ccab3*gcab*t59750*t59903*t59751*t59752*t59896)*2.0-(ccab0+ccab1*gcab*t59751*t59776+ccab2*t59750*t59752*t59774+ccab4*t59758*t59759*t59777+ccab3*gcab*t59750*t59751*t59752*t59775)*(-t59627*(-t59801-t59810+t59830+t59855+t59652*t59671*t59674*t59677*(t59801+t59810-t59830-t59855-t59802*t59664*t59781*1.0/(t59658*t59658*t59658)*2.0+t59664*t59781*t59782*(b2f*c*t59778*(4.0/9.0)+b4f*t59634*t59779*(1.0E1/9.0)+b1f*c*t59679*t59778*(2.0/9.0)+b3f*c*t59630*t59778*(2.0/3.0)-b1f*t59634*t59793*t59779*(1.0/3.6E1)+b3f*t59634*t59679*t59779*(1.0/1.2E1))+t59802*1.0/(t59661*t59661)*t59653*t59664*1.0/(t59658*t59658*t59658*t59658)*(1.0/2.0)-a1f*c*c0f*t59662*t59778*(8.0/9.0)+a1f*c*t59781*t59782*t59639*t59787*(2.0/3.0)-a1p*c*t59680*t59681*t59639*t59686*(2.0/3.0))-t59811*t59652*t59671*t59666*t59677*2.0E1-t59652*t59706*t59805*t59674*t59677*2.0-t59820*t59652*t59674*t59666*t59677-t59652*t59671*t59647*t59674*t59666*1.2E1+t59652*t59805*t59671*t59677*t59688*8.0+t59652*t59706*t59666*t59677*t59688*8.0-t59652*t59706*t59646*t59647*t59674*t59666*8.0+t59652*t59671*t59646*t59647*t59666*t59688*3.2E1+t59652*t59671*t59646*t59647*t59674*t59789*8.0+a1p*c*t59680*t59681*t59639*t59686*(2.0/3.0)-Aa*t59701*t59820*t59652*t59708*t59689*t59699*2.0+Aa*t59701*t59813*t59652*t59706*t59689*t59699*4.0-Aa*t59701*t59652*t59671*t59689*t59699*(t59811*t59677*2.0E1+t59647*t59674*1.2E1-t59646*t59647*t59688*3.2E1)*2.0+t59701*t59821*t59813*t59652*t59823*t59671*t59828*t59689*2.0-t59701*t59821*t59652*t59706*t59823*t59708*t59828*t59689*2.0-t59701*t59821*t59652*t59671*t59708*t59829*1.0/(t59695*t59695*t59695)*t59689*2.0+t59701*t59821*t59652*t59823*t59671*t59708*t59689*(b2a*c*t59778*(4.0/9.0)+b4a*t59634*t59779*(1.0E1/9.0)+b1a*c*t59679*t59778*(2.0/9.0)+b3a*c*t59630*t59778*(2.0/3.0)-b1a*t59634*t59793*t59779*(1.0/3.6E1)+b3a*t59634*t59679*t59779*(1.0/1.2E1))-Aa*a1a*c*t59813*t59652*t59671*t59639*t59689*t59699*(4.0/3.0)+Aa*a1a*c*t59652*t59706*t59708*t59639*t59689*t59699*(4.0/3.0)-Aa*a1a*c*t59652*t59671*t59708*t59778*t59689*t59699*(8.0/9.0)+t59701*t59652*t59671*t59690*t59708*t59829*1.0/(t59695*t59695*t59695*t59695)*t59689*1.0/(t59698*t59698)*(1.0/2.0)+a1a*c*t59821*t59652*t59823*t59671*t59708*t59639*t59828*t59689*(2.0/3.0))+rho_a*(-t59843-t59852+t59971+t59973+t59967+t59652*t59746*(t59843+t59852+t59970+t59972+t59965-t59831*t59840*t59749*t59958*2.0-t59734*t59735*t59736*t59849-a1f*c*c0f*t59747*t59838*(8.0/9.0)-t59640*t59841*t59850*t59734*t59851*(1.0/2.0)-a1p*c*t59741*t59735*t59736*t59719*(2.0/3.0)))+t59652*t59746*t59856*2.0-t59741*t59734*t59735*t59736*2.0+t59680*t59645*t59681*t59686*2.0+a1p*c*c0p*t59743*t59719*(4.0/3.0)-a1p*c*c0p*t59665*t59639*(4.0/3.0)+t59652*t59805*t59671*t59674*t59677*2.0+t59652*t59706*t59674*t59666*t59677*2.0-t59652*t59671*t59666*t59677*t59688*8.0+t59652*t59671*t59646*t59647*t59674*t59666*8.0-Aa*t59701*t59813*t59652*t59671*t59689*t59699*4.0+Aa*t59701*t59652*t59706*t59708*t59689*t59699*4.0+t59701*t59821*t59652*t59823*t59671*t59708*t59828*t59689*2.0-Aa*a1a*c*t59652*t59671*t59708*t59639*t59689*t59699*(4.0/3.0))-rho_a*t59905*(ccaa1*gamma_aa*gcaa*t59914*t59897*(8.8E1/9.0)+ccaa4*t59911*t59860*t59952*t59859*(1.12E3/9.0)-ccaa1*t59933*t59892*t59857*t59858*2.4E1+ccaa2*t59923*t59892*t59857*t59858*(3.04E2/9.0)-ccaa4*t59860*t59943*t59926*t59944*t59859*(6.4E1/3.0)-ccaa2*t59924*t59857*t59947*t59858*t59948*(3.2E1/3.0)-ccaa2*t59863*t59857*t59858*t59948*(gamma_aa*gcaa*t59897*(1.76E2/9.0)+t59892*t59857*t59858*(3.04E2/9.0))-ccaa4*t59860*t59861*t59944*t59859*(gamma_aa*gcaa*t59897*(3.52E2/9.0)+t59860*t59952*t59859*(1.12E3/9.0)+t59892*t59857*t59858*(6.08E2/3.0)+gamma_aa*gcaa*t59951*t59857*t59858*2.88E2)+ccaa4*1.0/(t59910*t59910*t59910)*t59860*t59861*(t59943*t59943)*t59859*2.0+ccaa2*1.0/(t59922*t59922*t59922)*t59863*t59857*(t59947*t59947)*t59858*2.0+ccaa3*gamma_aa*gcaa*t59951*t59919*t59857*t59858*7.2E1+ccaa1*gamma_aa*gcaa*1.0/(t59913*t59913*t59913)*t59951*t59857*t59858*(1.28E2/9.0)+ccaa3*gamma_aa*gcaa*t59862*1.0/(t59918*t59918*t59918)*(t59937*t59937)*t59857*t59858*2.0-ccaa3*gamma_aa*gcaa*t59862*t59857*t59938*t59858*(gamma_aa*gcaa*t59897*(8.8E1/3.0)+t59892*t59857*t59858*(3.04E2/3.0)+gamma_aa*gcaa*t59951*t59857*t59858*7.2E1)-ccaa3*gamma_aa*gcaa*t59925*t59937*t59857*t59938*t59858*1.6E1)+rho_a*t59957*(-t59843-t59852+t59971+t59973+t59967+t59652*t59746*(t59843+t59852+t59970-t59971+t59972-t59973+t59965-t59967-t59831*t59840*t59749*t59958*2.0-a1f*c*c0f*t59747*t59838*(8.0/9.0)))-rho_a*t59950*t59949*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t59975 = rho_a+rho_b;
                double t59976 = 1.0/pow(t59975,1.0/3.0);
                double t59977 = c*t59976;
                double t59978 = sqrt(t59977);
                double t59979 = b1p*t59978;
                double t59980 = pow(t59977,3.0/2.0);
                double t59981 = b3p*t59980;
                double t59982 = c*c;
                double t59983 = 1.0/pow(t59975,2.0/3.0);
                double t59984 = b4p*t59982*t59983;
                double t59985 = b2p*c*t59976;
                double t59986 = t59981+t59984+t59985+t59979;
                double t59987 = 1.0/pow(t59975,4.0/3.0);
                double t59988 = 1.0/c0p;
                double t59989 = 1.0/t59986;
                double t59990 = t59988*t59989*(1.0/2.0);
                double t59991 = t59990+1.0;
                double t59992 = a1p*c*t59976;
                double t59993 = t59992+1.0;
                double t59994 = rho_a-rho_b;
                double t59995 = t59994*t59994;
                double t59996 = 1.0/t59975;
                double t59997 = t59994*t59996;
                double t59998 = two_13*2.0;
                double t59999 = t59998-2.0;
                double t60000 = 1.0/t59999;
                double t60001 = 1.0/c0f;
                double t60002 = b1f*t59978;
                double t60003 = b3f*t59980;
                double t60004 = b4f*t59982*t59983;
                double t60005 = b2f*c*t59976;
                double t60006 = t60002+t60003+t60004+t60005;
                double t60007 = 1.0/t60006;
                double t60008 = t60001*t60007*(1.0/2.0);
                double t60009 = t60008+1.0;
                double t60010 = log(t60009);
                double t60011 = a1f*c*t59976;
                double t60012 = t60011+1.0;
                double t60013 = log(t59991);
                double t60014 = c0p*t59993*t60013*2.0;
                double t60015 = t59997+1.0;
                double t60016 = pow(t60015,4.0/3.0);
                double t60017 = -t59997+1.0;
                double t60018 = pow(t60017,4.0/3.0);
                double t60019 = t60016+t60018-2.0;
                double t60020 = 1.0/(t59975*t59975);
                double t60050 = t59994*t60020;
                double t60021 = t59996-t60050;
                double t60022 = 1.0/(t59975*t59975*t59975*t59975);
                double t60023 = t59995*t59995;
                double t60097 = c0f*t60010*t60012*2.0;
                double t60024 = t60014-t60097;
                double t60025 = 1.0/pow(t59975,5.0/3.0);
                double t60026 = 1.0/sqrt(t59977);
                double t60027 = 1.0/t59991;
                double t60028 = 1.0/(t59986*t59986);
                double t60029 = b4p*t59982*t60025*(2.0/3.0);
                double t60030 = b2p*c*t59987*(1.0/3.0);
                double t60031 = b1p*c*t59987*t60026*(1.0/6.0);
                double t60032 = b3p*c*t59978*t59987*(1.0/2.0);
                double t60033 = t60030+t60031+t60032+t60029;
                double t60034 = t59993*t60033*t60027*t60028;
                double t60035 = 1.0/(t59975*t59975*t59975*t59975*t59975);
                double t60036 = 1.0/d2fz0;
                double t60037 = 1.0/Aa;
                double t60038 = b1a*t59978;
                double t60039 = b3a*t59980;
                double t60040 = b4a*t59982*t59983;
                double t60041 = b2a*c*t59976;
                double t60042 = t60040+t60041+t60038+t60039;
                double t60043 = 1.0/t60042;
                double t60044 = t60043*t60037*(1.0/2.0);
                double t60045 = t60044+1.0;
                double t60046 = log(t60045);
                double t60047 = a1a*c*t59976;
                double t60048 = t60047+1.0;
                double t60049 = pow(t60015,1.0/3.0);
                double t60051 = t60021*t60049*(4.0/3.0);
                double t60052 = pow(t60017,1.0/3.0);
                double t60195 = t60021*t60052*(4.0/3.0);
                double t60053 = t60051-t60195;
                double t60054 = t60022*t60023;
                double t60055 = t60054-1.0;
                double t60056 = 1.0/pow(rho_a,1.0/3.0);
                double t60057 = c*t60056;
                double t60058 = sqrt(t60057);
                double t60059 = b1f*t60058;
                double t60060 = pow(t60057,3.0/2.0);
                double t60061 = b3f*t60060;
                double t60062 = 1.0/pow(rho_a,2.0/3.0);
                double t60063 = b4f*t59982*t60062;
                double t60064 = b2f*c*t60056;
                double t60065 = t60061+t60063+t60064+t60059;
                double t60066 = 1.0/pow(rho_a,4.0/3.0);
                double t60067 = b1p*t60058;
                double t60068 = b3p*t60060;
                double t60069 = b4p*t59982*t60062;
                double t60070 = b2p*c*t60056;
                double t60071 = t60070+t60067+t60068+t60069;
                double t60072 = 1.0/pow(rho_a,5.0/3.0);
                double t60073 = 1.0/sqrt(t60057);
                double t60074 = 1.0/t60065;
                double t60075 = t60001*t60074*(1.0/2.0);
                double t60076 = t60075+1.0;
                double t60077 = 1.0/t60071;
                double t60078 = t59988*t60077*(1.0/2.0);
                double t60079 = t60078+1.0;
                double t60080 = a1p*c*t60056;
                double t60081 = t60080+1.0;
                double t60082 = 1.0/t60079;
                double t60083 = 1.0/(t60071*t60071);
                double t60084 = b4p*t59982*t60072*(2.0/3.0);
                double t60085 = b2p*c*t60066*(1.0/3.0);
                double t60086 = b1p*c*t60073*t60066*(1.0/6.0);
                double t60087 = b3p*c*t60066*t60058*(1.0/2.0);
                double t60088 = t60084+t60085+t60086+t60087;
                double t60089 = t60081*t60082*t60083*t60088;
                double t60090 = log(t60079);
                double t60091 = pow(2.0,1.0/3.0);
                double t60092 = t60091*2.0;
                double t60093 = t60092-2.0;
                double t60094 = log(t60076);
                double t60095 = a1f*c*t60056;
                double t60096 = t60095+1.0;
                double t60098 = gcab*gcab;
                double t60102 = 1.0/pow(rho_a,8.0/3.0);
                double t60103 = gamma_aa*t60102*(1.0/2.0);
                double t60104 = 1.0/pow(rho_b,8.0/3.0);
                double t60105 = gamma_bb*t60104*(1.0/2.0);
                double t60099 = t60103+t60105;
                double t60100 = t60099*t60099;
                double t60101 = 1.0/pow(rho_b,1.1E1/3.0);
                double t60106 = t60098*t60098;
                double t60107 = t60100*t60100;
                double t60108 = t60100*t60098*6.0;
                double t60109 = gcab*t60100*t60098*t60099*4.0;
                double t60110 = t60106*t60107;
                double t60111 = gcab*t60099*4.0;
                double t60112 = t60110+t60111+t60108+t60109+1.0;
                double t60113 = gcab*t60099;
                double t60114 = t60113+1.0;
                double t60115 = t60100*t60098;
                double t60116 = gcab*t60099*2.0;
                double t60117 = t60115+t60116+1.0;
                double t60118 = t60100*t60098*3.0;
                double t60119 = gcab*t60100*t60098*t60099;
                double t60120 = gcab*t60099*3.0;
                double t60121 = t60120+t60118+t60119+1.0;
                double t60122 = t59994*t59995*t60000*t60022*t60024*t60019*4.0;
                double t60123 = t59996+t60050;
                double t60124 = 1.0/t60009;
                double t60125 = 1.0/(t60006*t60006);
                double t60126 = b4f*t59982*t60025*(2.0/3.0);
                double t60127 = b2f*c*t59987*(1.0/3.0);
                double t60128 = b1f*c*t59987*t60026*(1.0/6.0);
                double t60129 = b3f*c*t59978*t59987*(1.0/2.0);
                double t60130 = t60126+t60127+t60128+t60129;
                double t60131 = a1f*c*c0f*t59987*t60010*(2.0/3.0);
                double t60132 = a1p*c*c0p*t59987*t60013*(2.0/3.0);
                double t60133 = t60023*t60035*4.0;
                double t60134 = t60123*t60052*(4.0/3.0);
                double t60194 = t60123*t60049*(4.0/3.0);
                double t60135 = t60134-t60194;
                double t60136 = 1.0/t60045;
                double t60137 = 1.0/(t60042*t60042);
                double t60138 = b4a*t59982*t60025*(2.0/3.0);
                double t60139 = b2a*c*t59987*(1.0/3.0);
                double t60140 = b1a*c*t59987*t60026*(1.0/6.0);
                double t60141 = b3a*c*t59978*t59987*(1.0/2.0);
                double t60142 = t60140+t60141+t60138+t60139;
                double t60143 = Aa*a1a*c*t59987*t60000*t60036*t60019*t60046*t60055*(2.0/3.0);
                double t60144 = 1.0/pow(rho_b,1.0/3.0);
                double t60145 = c*t60144;
                double t60146 = sqrt(t60145);
                double t60147 = b1f*t60146;
                double t60148 = pow(t60145,3.0/2.0);
                double t60149 = b3f*t60148;
                double t60150 = 1.0/pow(rho_b,2.0/3.0);
                double t60151 = b4f*t59982*t60150;
                double t60152 = b2f*c*t60144;
                double t60153 = t60151+t60152+t60147+t60149;
                double t60154 = 1.0/pow(rho_b,4.0/3.0);
                double t60155 = b1p*t60146;
                double t60156 = b3p*t60148;
                double t60157 = b4p*t59982*t60150;
                double t60158 = b2p*c*t60144;
                double t60159 = t60155+t60156+t60157+t60158;
                double t60160 = 1.0/pow(rho_b,5.0/3.0);
                double t60161 = 1.0/sqrt(t60145);
                double t60162 = 1.0/t60153;
                double t60163 = t60001*t60162*(1.0/2.0);
                double t60164 = t60163+1.0;
                double t60165 = 1.0/t60159;
                double t60166 = t59988*t60165*(1.0/2.0);
                double t60167 = t60166+1.0;
                double t60168 = a1p*c*t60144;
                double t60169 = t60168+1.0;
                double t60170 = 1.0/t60167;
                double t60171 = 1.0/(t60159*t60159);
                double t60172 = b4p*t59982*t60160*(2.0/3.0);
                double t60173 = b2p*c*t60154*(1.0/3.0);
                double t60174 = b1p*c*t60161*t60154*(1.0/6.0);
                double t60175 = b3p*c*t60154*t60146*(1.0/2.0);
                double t60176 = t60172+t60173+t60174+t60175;
                double t60177 = t60170*t60171*t60176*t60169;
                double t60178 = log(t60167);
                double t60179 = log(t60164);
                double t60180 = a1f*c*t60144;
                double t60181 = t60180+1.0;
                double t60182 = 1.0/pow(rho_a,1.1E1/3.0);
                double t60183 = 1.0/(t60121*t60121);
                double t60184 = 1.0/t60114;
                double t60185 = 1.0/(t60112*t60112);
                double t60186 = 1.0/(t60117*t60117);
                double t60187 = 1.0/t60112;
                double t60188 = 1.0/(t60114*t60114);
                double t60189 = 1.0/t60117;
                double t60190 = 1.0/t60121;
                double t60191 = t60000*t60022*t60023*t60024*t60019;
                double t60192 = 1.0/pow(t59975,7.0/3.0);
                double t60193 = 1.0/pow(t59975,8.0/3.0);
                double t60211 = t60012*t60130*t60124*t60125;
                double t60196 = -t60211+t60131-t60132+t60034;
                double t60197 = t60033*t60033;
                double t60198 = 1.0/pow(t59977,3.0/2.0);
                double t60199 = b4p*t59982*t60193*(1.0E1/9.0);
                double t60200 = b2p*c*t60192*(4.0/9.0);
                double t60201 = b1p*c*t60026*t60192*(2.0/9.0);
                double t60202 = b3p*c*t59978*t60192*(2.0/3.0);
                double t60203 = b3p*t59982*t60026*t60193*(1.0/1.2E1);
                double t60204 = t60200+t60201+t60202+t60203+t60199-b1p*t59982*t60193*t60198*(1.0/3.6E1);
                double t60205 = t59993*t60204*t60027*t60028;
                double t60206 = 1.0/(t59986*t59986*t59986);
                double t60207 = t60130*t60130;
                double t60208 = 1.0/(t59991*t59991);
                double t60209 = 1.0/(t59986*t59986*t59986*t59986);
                double t60210 = t59993*t59988*t60208*t60209*t60197*(1.0/2.0);
                double t60212 = t60211-t60131+t60132-t60034;
                double t60213 = 1.0/(t59975*t59975*t59975);
                double t60214 = a1p*c*t59987*t60033*t60027*t60028*(2.0/3.0);
                double t60215 = 1.0/(t59975*t59975*t59975*t59975*t59975*t59975);
                double t60216 = t59994*t59995*t60022*4.0;
                double t60217 = t60133+t60216;
                double t60218 = t59994*t60213*t60052*(8.0/3.0);
                double t60219 = 1.0/pow(t60015,2.0/3.0);
                double t60220 = t60021*t60123*t60219*(4.0/9.0);
                double t60221 = 1.0/pow(t60017,2.0/3.0);
                double t60222 = t60021*t60221*t60123*(4.0/9.0);
                double t60223 = t60220+t60222+t60218-t59994*t60213*t60049*(8.0/3.0);
                double t60224 = t60142*t60142;
                double t60225 = t60133-t60216;
                double t60226 = t59993*t60206*t60027*t60197*2.0;
                double t60227 = a1p*c*c0p*t60013*t60192*(8.0/9.0);
                double t60228 = Aa*t60000*t60036*t60135*t60046*t60055*t60048*2.0;
                double t60229 = t60000*t60022*t60023*t60024*t60053;
                double t60230 = c0f*t60094*t60096*2.0;
                double t60231 = c0p*t60081*t60090*2.0;
                double t60232 = c0f*t60181*t60179*2.0;
                double t60234 = c0p*t60169*t60178*2.0;
                double t60233 = t60232-t60234;
                double t60235 = Aa*t60000*t60036*t60019*t60046*t60055*t60048*2.0;
                double t60236 = gamma_aa*gcab*t60182*(8.0/3.0);
                double t60237 = gamma_aa*t60182*t60098*t60099*(8.0/3.0);
                double t60238 = t60236+t60237;
                double t60239 = gamma_bb*gcab*t60101*(8.0/3.0);
                double t60240 = gamma_bb*t60101*t60098*t60099*(8.0/3.0);
                double t60241 = t60240+t60239;
                double t60242 = gamma_aa*gcab*t60182*(1.6E1/3.0);
                double t60243 = gamma_aa*gcab*t60100*t60182*t60098*1.6E1;
                double t60244 = gamma_aa*t60100*t60106*t60182*t60099*(1.6E1/3.0);
                double t60245 = gamma_aa*t60182*t60098*t60099*1.6E1;
                double t60246 = t60242+t60243+t60244+t60245;
                double t60247 = gamma_bb*gcab*t60101*(1.6E1/3.0);
                double t60248 = gamma_bb*gcab*t60100*t60101*t60098*1.6E1;
                double t60249 = gamma_bb*t60100*t60101*t60106*t60099*(1.6E1/3.0);
                double t60250 = gamma_bb*t60101*t60098*t60099*1.6E1;
                double t60251 = t60250+t60247+t60248+t60249;
                double t60252 = gamma_aa*gcab*t60182*4.0;
                double t60253 = gamma_aa*gcab*t60100*t60182*t60098*4.0;
                double t60254 = gamma_aa*t60182*t60098*t60099*8.0;
                double t60255 = t60252+t60253+t60254;
                double t60256 = gamma_bb*gcab*t60101*4.0;
                double t60257 = gamma_bb*gcab*t60100*t60101*t60098*4.0;
                double t60258 = gamma_bb*t60101*t60098*t60099*8.0;
                double t60259 = t60256+t60257+t60258;
                v_rho_a_rho_b[Q] += scale * (t60014+t60235-t60191+t59975*(t60122-t60132+t60034-t60143+t60228-t60000*t60022*t60023*t60024*t60135+t60000*t60023*t60024*t60035*t60019*4.0-t60000*t60022*t60023*t60019*t60196-Aa*t60000*t60036*t60019*t60046*t60217*t60048*2.0+t60000*t60142*t60036*t60019*t60055*t60136*t60137*t60048)+rho_b*(-t60177+t60000*t60093*(t60177-(1.0/(t60153*t60153)*t60181*(b2f*c*t60154*(1.0/3.0)+b4f*t59982*t60160*(2.0/3.0)+b1f*c*t60161*t60154*(1.0/6.0)+b3f*c*t60154*t60146*(1.0/2.0)))/t60164+a1f*c*c0f*t60154*t60179*(2.0/3.0)-a1p*c*c0p*t60154*t60178*(2.0/3.0))+a1p*c*c0p*t60154*t60178*(2.0/3.0))-c0p*t60169*t60178*2.0-t60000*t60233*t60093)*(ccab1*gamma_aa*gcab*t60182*t60184*(4.0/3.0)-ccab4*t60106*t60107*t60246*t60185-ccab2*t60100*t60238*t60186*t60098-ccab1*gamma_aa*t60182*t60098*t60188*t60099*(4.0/3.0)+ccab2*gamma_aa*t60182*t60098*t60099*t60189*(8.0/3.0)+ccab3*gamma_aa*gcab*t60100*t60190*t60182*t60098*4.0+ccab4*gamma_aa*t60100*t60106*t60182*t60187*t60099*(1.6E1/3.0)-ccab3*gcab*t60100*t60183*t60255*t60098*t60099)-(rho_b*(t60234+t60000*t60233*t60093)+rho_a*(t60231+t60000*t60093*(t60230-t60231))-t59975*(t60014+t60235-t60191))*(ccab4*t60106*t60107*t60185*(gamma_aa*gamma_bb*t60101*t60182*t60098*(6.4E1/3.0)+gamma_aa*gamma_bb*t60100*t60101*t60106*t60182*(6.4E1/3.0)+gamma_aa*gamma_bb*gcab*t60101*t60182*t60098*t60099*(1.28E2/3.0))-ccab4*1.0/(t60112*t60112*t60112)*t60106*t60107*t60251*t60246*2.0-ccab2*t60100*t60241*1.0/(t60117*t60117*t60117)*t60238*t60098*2.0+ccab3*gcab*t60100*t60183*t60098*t60099*(gamma_aa*gamma_bb*t60101*t60182*t60098*(3.2E1/3.0)+gamma_aa*gamma_bb*gcab*t60101*t60182*t60098*t60099*(3.2E1/3.0))+ccab1*gamma_aa*gamma_bb*t60101*t60182*t60098*t60188*(3.2E1/9.0)-ccab2*gamma_aa*gamma_bb*t60101*t60182*t60098*t60189*(3.2E1/9.0)+ccab2*gamma_bb*t60101*t60238*t60186*t60098*t60099*(8.0/3.0)+ccab2*gamma_aa*t60241*t60182*t60186*t60098*t60099*(8.0/3.0)-ccab3*gcab*t60100*1.0/(t60121*t60121*t60121)*t60255*t60259*t60098*t60099*2.0+ccab2*gamma_aa*gamma_bb*t60100*t60101*t60106*t60182*t60186*(3.2E1/9.0)-ccab4*gamma_aa*gamma_bb*t60100*t60101*t60106*t60182*t60187*(6.4E1/3.0)+ccab3*gamma_bb*gcab*t60100*t60101*t60183*t60255*t60098*4.0+ccab3*gamma_aa*gcab*t60100*t60182*t60183*t60259*t60098*4.0+ccab4*gamma_bb*t60100*t60101*t60106*t60246*t60185*t60099*(1.6E1/3.0)+ccab4*gamma_aa*t60100*t60106*t60251*t60182*t60185*t60099*(1.6E1/3.0)-ccab3*gamma_aa*gamma_bb*gcab*t60101*t60190*t60182*t60098*t60099*(3.2E1/3.0)-ccab1*gamma_aa*gamma_bb*gcab*t60101*1.0/(t60114*t60114*t60114)*t60182*t60098*t60099*(3.2E1/9.0))-(ccab0+ccab1*gcab*t60184*t60099+ccab4*t60106*t60107*t60187+ccab2*t60100*t60098*t60189+ccab3*gcab*t60100*t60190*t60098*t60099)*(t60228-t60229+t59975*(-t60210-t60205-t60214+t60226+t60227+t60000*t60022*t60023*t60019*(t60210+t60205+t60214-t60226-t60227+t60012*1.0/(t60006*t60006*t60006)*t60124*t60207*2.0-t60012*t60124*t60125*(b2f*c*t60192*(4.0/9.0)+b4f*t59982*t60193*(1.0E1/9.0)+b1f*c*t60026*t60192*(2.0/9.0)+b3f*c*t59978*t60192*(2.0/3.0)-b1f*t59982*t60193*t60198*(1.0/3.6E1)+b3f*t59982*t60026*t60193*(1.0/1.2E1))-t60001*t60012*1.0/(t60006*t60006*t60006*t60006)*1.0/(t60009*t60009)*t60207*(1.0/2.0)+a1f*c*c0f*t60010*t60192*(8.0/9.0)-a1f*c*t59987*t60130*t60124*t60125*(2.0/3.0))+t59995*t60000*t60022*t60024*t60019*1.2E1+t60000*t60022*t60023*t60212*t60053+t60000*t60022*t60023*t60024*t60223+t60000*t60022*t60023*t60212*t60135+t60000*t60023*t60024*t60035*t60053*4.0+t60000*t60023*t60024*t60035*t60135*4.0-t60000*t60023*t60024*t60215*t60019*2.0E1+t60000*t60023*t60035*t60019*t60196*8.0+t59994*t59995*t60000*t60022*t60024*t60053*4.0-t59994*t59995*t60000*t60022*t60024*t60135*4.0-Aa*t60000*t60223*t60036*t60046*t60055*t60048*2.0-Aa*t60000*t60053*t60036*t60046*t60217*t60048*2.0-Aa*t60000*t60036*t60135*t60225*t60046*t60048*2.0-Aa*t60000*t60036*t60019*t60046*t60048*(t59995*t60022*1.2E1-t60023*t60215*2.0E1)*2.0+t60000*t60142*t60053*t60036*t60055*t60136*t60137*t60048+t60000*t60142*t60036*t60135*t60055*t60136*t60137*t60048-t60000*t60142*t60036*t60225*t60019*t60136*t60137*t60048-t60000*t60142*t60036*t60019*t60136*t60217*t60137*t60048+t60000*1.0/(t60042*t60042*t60042)*t60224*t60036*t60019*t60055*t60136*t60048*2.0-t60000*t60036*t60019*t60055*t60136*t60137*t60048*(b2a*c*t60192*(4.0/9.0)+b4a*t59982*t60193*(1.0E1/9.0)+b1a*c*t60026*t60192*(2.0/9.0)+b3a*c*t59978*t60192*(2.0/3.0)-b1a*t59982*t60193*t60198*(1.0/3.6E1)+b3a*t59982*t60026*t60193*(1.0/1.2E1))-Aa*a1a*c*t59987*t60000*t60053*t60036*t60046*t60055*(2.0/3.0)-Aa*a1a*c*t59987*t60000*t60036*t60135*t60046*t60055*(2.0/3.0)+Aa*a1a*c*t59987*t60000*t60036*t60225*t60019*t60046*(2.0/3.0)+Aa*a1a*c*t59987*t60000*t60036*t60019*t60046*t60217*(2.0/3.0)+Aa*a1a*c*t60000*t60036*t60019*t60046*t60055*t60192*(8.0/9.0)-t60000*1.0/(t60042*t60042*t60042*t60042)*t60224*t60036*1.0/(t60045*t60045)*t60019*t60037*t60055*t60048*(1.0/2.0)-a1a*c*t59987*t60000*t60142*t60036*t60019*t60055*t60136*t60137*(2.0/3.0))+t59993*t60033*t60027*t60028*2.0-a1p*c*c0p*t59987*t60013*(4.0/3.0)+t60000*t60022*t60023*t60212*t60019*2.0-t60000*t60022*t60023*t60024*t60135+t60000*t60023*t60024*t60035*t60019*8.0+Aa*t60000*t60053*t60036*t60046*t60055*t60048*2.0-Aa*t60000*t60036*t60225*t60019*t60046*t60048*2.0-Aa*t60000*t60036*t60019*t60046*t60217*t60048*2.0+t60000*t60142*t60036*t60019*t60055*t60136*t60137*t60048*2.0-Aa*a1a*c*t59987*t60000*t60036*t60019*t60046*t60055*(4.0/3.0))-(-t60014+t60231+t60191+t59975*(t60122+t60132-t60034+t60143+t60229+t60000*t60022*t60023*t60019*(t60131+t60034-t60012*t60130*t60124*t60125-a1p*c*c0p*t59987*t60013*(2.0/3.0))-t60000*t60023*t60024*t60035*t60019*4.0-Aa*t60000*t60053*t60036*t60046*t60055*t60048*2.0+Aa*t60000*t60036*t60019*t60046*t60048*(t60133-t59994*t59995*t60022*4.0)*2.0-t60000*t60142*t60036*t60019*t60055*t60136*t60137*t60048)-rho_a*(-t60089+t60000*t60093*(t60089-(1.0/(t60065*t60065)*t60096*(b2f*c*t60066*(1.0/3.0)+b4f*t59982*t60072*(2.0/3.0)+b1f*c*t60073*t60066*(1.0/6.0)+b3f*c*t60066*t60058*(1.0/2.0)))/t60076+a1f*c*c0f*t60066*t60094*(2.0/3.0)-a1p*c*c0p*t60090*t60066*(2.0/3.0))+a1p*c*c0p*t60090*t60066*(2.0/3.0))+t60000*t60093*(t60230-c0p*t60081*t60090*2.0)-Aa*t60000*t60036*t60019*t60046*t60055*t60048*2.0)*(ccab1*gamma_bb*gcab*t60101*t60184*(4.0/3.0)-ccab4*t60106*t60107*t60251*t60185-ccab2*t60100*t60241*t60186*t60098-ccab1*gamma_bb*t60101*t60098*t60188*t60099*(4.0/3.0)+ccab2*gamma_bb*t60101*t60098*t60099*t60189*(8.0/3.0)+ccab3*gamma_bb*gcab*t60100*t60101*t60190*t60098*4.0+ccab4*gamma_bb*t60100*t60101*t60106*t60187*t60099*(1.6E1/3.0)-ccab3*gcab*t60100*t60183*t60259*t60098*t60099);
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t60261 = rho_a+rho_b;
                double t60262 = 1.0/pow(t60261,1.0/3.0);
                double t60263 = c*t60262;
                double t60264 = sqrt(t60263);
                double t60265 = b1p*t60264;
                double t60266 = pow(t60263,3.0/2.0);
                double t60267 = b3p*t60266;
                double t60268 = c*c;
                double t60269 = 1.0/pow(t60261,2.0/3.0);
                double t60270 = b4p*t60268*t60269;
                double t60271 = b2p*c*t60262;
                double t60272 = t60270+t60271+t60265+t60267;
                double t60273 = 1.0/pow(t60261,4.0/3.0);
                double t60274 = 1.0/c0p;
                double t60275 = 1.0/t60272;
                double t60276 = t60274*t60275*(1.0/2.0);
                double t60277 = t60276+1.0;
                double t60278 = a1p*c*t60262;
                double t60279 = t60278+1.0;
                double t60280 = rho_a-rho_b;
                double t60281 = t60280*t60280;
                double t60282 = 1.0/t60261;
                double t60283 = t60280*t60282;
                double t60284 = two_13*2.0;
                double t60285 = t60284-2.0;
                double t60286 = 1.0/t60285;
                double t60287 = 1.0/c0f;
                double t60288 = b1f*t60264;
                double t60289 = b3f*t60266;
                double t60290 = b4f*t60268*t60269;
                double t60291 = b2f*c*t60262;
                double t60292 = t60290+t60291+t60288+t60289;
                double t60293 = 1.0/t60292;
                double t60294 = t60293*t60287*(1.0/2.0);
                double t60295 = t60294+1.0;
                double t60296 = log(t60295);
                double t60297 = a1f*c*t60262;
                double t60298 = t60297+1.0;
                double t60299 = log(t60277);
                double t60310 = c0f*t60296*t60298*2.0;
                double t60311 = c0p*t60279*t60299*2.0;
                double t60300 = t60310-t60311;
                double t60301 = t60283+1.0;
                double t60302 = pow(t60301,4.0/3.0);
                double t60303 = -t60283+1.0;
                double t60304 = pow(t60303,4.0/3.0);
                double t60305 = t60302+t60304-2.0;
                double t60306 = 1.0/(t60261*t60261);
                double t60307 = t60306*t60280;
                double t60308 = t60307+t60282;
                double t60309 = 1.0/(t60261*t60261*t60261*t60261);
                double t60312 = t60281*t60281;
                double t60313 = 1.0/pow(t60261,5.0/3.0);
                double t60314 = 1.0/sqrt(t60263);
                double t60315 = 1.0/t60277;
                double t60316 = 1.0/(t60272*t60272);
                double t60317 = b4p*t60313*t60268*(2.0/3.0);
                double t60318 = b2p*c*t60273*(1.0/3.0);
                double t60319 = b1p*c*t60314*t60273*(1.0/6.0);
                double t60320 = b3p*c*t60264*t60273*(1.0/2.0);
                double t60321 = t60320+t60317+t60318+t60319;
                double t60322 = 1.0/(t60261*t60261*t60261*t60261*t60261);
                double t60323 = 1.0/d2fz0;
                double t60324 = 1.0/Aa;
                double t60325 = b1a*t60264;
                double t60326 = b3a*t60266;
                double t60327 = b4a*t60268*t60269;
                double t60328 = b2a*c*t60262;
                double t60329 = t60325+t60326+t60327+t60328;
                double t60330 = 1.0/t60329;
                double t60331 = t60330*t60324*(1.0/2.0);
                double t60332 = t60331+1.0;
                double t60333 = log(t60332);
                double t60334 = a1a*c*t60262;
                double t60335 = t60334+1.0;
                double t60336 = pow(t60301,1.0/3.0);
                double t60337 = t60308*t60336*(4.0/3.0);
                double t60338 = pow(t60303,1.0/3.0);
                double t60414 = t60308*t60338*(4.0/3.0);
                double t60339 = -t60414+t60337;
                double t60340 = t60312*t60309;
                double t60341 = t60340-1.0;
                double t60342 = 1.0/pow(rho_b,1.0/3.0);
                double t60343 = c*t60342;
                double t60344 = sqrt(t60343);
                double t60345 = b1f*t60344;
                double t60346 = pow(t60343,3.0/2.0);
                double t60347 = b3f*t60346;
                double t60348 = 1.0/pow(rho_b,2.0/3.0);
                double t60349 = b4f*t60348*t60268;
                double t60350 = b2f*c*t60342;
                double t60351 = t60350+t60345+t60347+t60349;
                double t60352 = 1.0/pow(rho_b,4.0/3.0);
                double t60353 = b1p*t60344;
                double t60354 = b3p*t60346;
                double t60355 = b4p*t60348*t60268;
                double t60356 = b2p*c*t60342;
                double t60357 = t60353+t60354+t60355+t60356;
                double t60358 = 1.0/pow(rho_b,5.0/3.0);
                double t60359 = 1.0/sqrt(t60343);
                double t60360 = 1.0/t60351;
                double t60361 = t60360*t60287*(1.0/2.0);
                double t60362 = t60361+1.0;
                double t60363 = 1.0/t60357;
                double t60364 = t60363*t60274*(1.0/2.0);
                double t60365 = t60364+1.0;
                double t60366 = a1p*c*t60342;
                double t60367 = t60366+1.0;
                double t60368 = 1.0/t60365;
                double t60369 = 1.0/(t60357*t60357);
                double t60370 = b4p*t60268*t60358*(2.0/3.0);
                double t60371 = b2p*c*t60352*(1.0/3.0);
                double t60372 = b1p*c*t60352*t60359*(1.0/6.0);
                double t60373 = b3p*c*t60352*t60344*(1.0/2.0);
                double t60374 = t60370+t60371+t60372+t60373;
                double t60375 = t60374*t60367*t60368*t60369;
                double t60376 = log(t60365);
                double t60377 = pow(2.0,1.0/3.0);
                double t60378 = t60377*2.0;
                double t60379 = t60378-2.0;
                double t60380 = log(t60362);
                double t60381 = a1f*c*t60342;
                double t60382 = t60381+1.0;
                double t60383 = gcab*gcab;
                double t60387 = 1.0/pow(rho_a,8.0/3.0);
                double t60388 = gamma_aa*t60387*(1.0/2.0);
                double t60389 = 1.0/pow(rho_b,8.0/3.0);
                double t60390 = gamma_bb*t60389*(1.0/2.0);
                double t60384 = t60390+t60388;
                double t60385 = t60384*t60384;
                double t60386 = 1.0/pow(rho_b,1.1E1/3.0);
                double t60391 = t60383*t60383;
                double t60392 = t60385*t60385;
                double t60393 = t60383*t60385*6.0;
                double t60394 = gcab*t60383*t60384*t60385*4.0;
                double t60395 = t60391*t60392;
                double t60396 = gcab*t60384*4.0;
                double t60397 = t60393+t60394+t60395+t60396+1.0;
                double t60398 = gcab*t60384;
                double t60399 = t60398+1.0;
                double t60400 = t60383*t60385;
                double t60401 = gcab*t60384*2.0;
                double t60402 = t60400+t60401+1.0;
                double t60403 = t60383*t60385*3.0;
                double t60404 = gcab*t60383*t60384*t60385;
                double t60405 = gcab*t60384*3.0;
                double t60406 = t60403+t60404+t60405+1.0;
                double t60407 = a1p*c*c0p*t60273*t60299*(2.0/3.0);
                double t60408 = 1.0/t60402;
                double t60409 = 1.0/t60406;
                double t60410 = 1.0/t60399;
                double t60411 = 1.0/t60397;
                double t60412 = 1.0/pow(t60261,7.0/3.0);
                double t60413 = 1.0/pow(t60261,8.0/3.0);
                double t60415 = 1.0/t60295;
                double t60416 = 1.0/(t60292*t60292);
                double t60417 = b4f*t60313*t60268*(2.0/3.0);
                double t60418 = b2f*c*t60273*(1.0/3.0);
                double t60419 = b1f*c*t60314*t60273*(1.0/6.0);
                double t60420 = b3f*c*t60264*t60273*(1.0/2.0);
                double t60421 = t60420+t60417+t60418+t60419;
                double t60422 = t60421*t60415*t60416*t60298;
                double t60424 = t60321*t60315*t60316*t60279;
                double t60425 = a1f*c*c0f*t60273*t60296*(2.0/3.0);
                double t60423 = t60422-t60424+t60407-t60425;
                double t60426 = t60321*t60321;
                double t60427 = 1.0/pow(t60263,3.0/2.0);
                double t60428 = b4p*t60413*t60268*(1.0E1/9.0);
                double t60429 = b2p*c*t60412*(4.0/9.0);
                double t60430 = b1p*c*t60412*t60314*(2.0/9.0);
                double t60431 = b3p*c*t60412*t60264*(2.0/3.0);
                double t60432 = b3p*t60314*t60413*t60268*(1.0/1.2E1);
                double t60433 = t60430+t60431+t60432+t60428+t60429-b1p*t60413*t60427*t60268*(1.0/3.6E1);
                double t60434 = 1.0/(t60272*t60272*t60272);
                double t60435 = t60315*t60434*t60426*t60279*2.0;
                double t60436 = t60421*t60421;
                double t60437 = 1.0/(t60277*t60277);
                double t60438 = 1.0/(t60272*t60272*t60272*t60272);
                double t60439 = t60306*2.0;
                double t60440 = 1.0/(t60261*t60261*t60261);
                double t60441 = t60440*t60280*2.0;
                double t60442 = t60441+t60439;
                double t60443 = t60308*t60308;
                double t60444 = a1p*c*c0p*t60412*t60299*(8.0/9.0);
                double t60445 = 1.0/(t60261*t60261*t60261*t60261*t60261*t60261);
                double t60446 = t60280*t60281*t60309*4.0;
                double t60447 = t60312*t60322*4.0;
                double t60448 = t60446+t60447;
                double t60449 = t60442*t60336*(4.0/3.0);
                double t60450 = 1.0/pow(t60301,2.0/3.0);
                double t60451 = t60450*t60443*(4.0/9.0);
                double t60452 = 1.0/pow(t60303,2.0/3.0);
                double t60453 = t60443*t60452*(4.0/9.0);
                double t60454 = t60451+t60453+t60449-t60442*t60338*(4.0/3.0);
                double t60455 = 1.0/t60332;
                double t60456 = 1.0/(t60329*t60329);
                double t60457 = b4a*t60313*t60268*(2.0/3.0);
                double t60458 = b2a*c*t60273*(1.0/3.0);
                double t60459 = b1a*c*t60314*t60273*(1.0/6.0);
                double t60460 = b3a*c*t60264*t60273*(1.0/2.0);
                double t60461 = t60460+t60457+t60458+t60459;
                double t60462 = t60461*t60461;
                double t60463 = 1.0/t60362;
                double t60464 = b4f*t60268*t60358*(2.0/3.0);
                double t60465 = b2f*c*t60352*(1.0/3.0);
                double t60466 = b1f*c*t60352*t60359*(1.0/6.0);
                double t60467 = b3f*c*t60352*t60344*(1.0/2.0);
                double t60468 = t60464+t60465+t60466+t60467;
                double t60469 = 1.0/(t60351*t60351);
                double t60470 = 1.0/pow(rho_b,7.0/3.0);
                double t60471 = 1.0/pow(t60343,3.0/2.0);
                double t60472 = t60468*t60468;
                double t60473 = t60374*t60374;
                double t60474 = 1.0/(t60357*t60357*t60357);
                double t60475 = t60473*t60474*t60367*t60368*2.0;
                double t60476 = b4p*t60268*t60389*(1.0E1/9.0);
                double t60477 = b2p*c*t60470*(4.0/9.0);
                double t60478 = b3p*t60268*t60359*t60389*(1.0/1.2E1);
                double t60479 = b1p*c*t60470*t60359*(2.0/9.0);
                double t60480 = b3p*c*t60344*t60470*(2.0/3.0);
                double t60597 = b1p*t60471*t60268*t60389*(1.0/3.6E1);
                double t60481 = t60480+t60476+t60477+t60478+t60479-t60597;
                double t60482 = 1.0/(t60365*t60365);
                double t60483 = 1.0/(t60357*t60357*t60357*t60357);
                double t60484 = a1p*c*c0p*t60470*t60376*(8.0/9.0);
                double t60485 = a1f*c*c0f*t60352*t60380*(2.0/3.0);
                double t60486 = a1p*c*c0p*t60352*t60376*(2.0/3.0);
                double t60558 = t60382*t60463*t60468*t60469;
                double t60487 = t60375+t60485-t60486-t60558;
                double t60488 = gamma_bb*gamma_bb;
                double t60489 = gcaa*gcaa;
                double t60490 = t60488*t60488;
                double t60491 = t60489*t60489;
                double t60492 = 1.0/pow(rho_b,3.2E1/3.0);
                double t60493 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t60494 = 1.0/pow(rho_b,1.6E1/3.0);
                double t60495 = 1.0/pow(rho_a,1.0/3.0);
                double t60496 = c*t60495;
                double t60497 = sqrt(t60496);
                double t60498 = pow(t60496,3.0/2.0);
                double t60499 = 1.0/pow(rho_a,2.0/3.0);
                double t60500 = b1p*t60497;
                double t60501 = b3p*t60498;
                double t60502 = b4p*t60268*t60499;
                double t60503 = b2p*c*t60495;
                double t60504 = t60500+t60501+t60502+t60503;
                double t60505 = 1.0/t60504;
                double t60506 = t60505*t60274*(1.0/2.0);
                double t60507 = t60506+1.0;
                double t60508 = log(t60507);
                double t60509 = a1p*c*t60495;
                double t60510 = t60509+1.0;
                double t60511 = c0p*t60510*t60508*2.0;
                double t60512 = c0f*t60380*t60382*2.0;
                double t60514 = c0p*t60367*t60376*2.0;
                double t60513 = t60512-t60514;
                double t60515 = t60300*t60312*t60305*t60309*t60286;
                double t60516 = Aa*t60305*t60323*t60341*t60333*t60335*t60286*2.0;
                double t60517 = gamma_bb*gcab*t60386*(1.6E1/3.0);
                double t60518 = gamma_bb*gcab*t60383*t60385*t60386*1.6E1;
                double t60519 = gamma_bb*t60391*t60384*t60385*t60386*(1.6E1/3.0);
                double t60520 = gamma_bb*t60383*t60384*t60386*1.6E1;
                double t60521 = t60520+t60517+t60518+t60519;
                double t60522 = 1.0/(t60399*t60399);
                double t60523 = 1.0/pow(rho_b,2.2E1/3.0);
                double t60524 = gamma_bb*gcab*t60386*(8.0/3.0);
                double t60525 = gamma_bb*t60383*t60384*t60386*(8.0/3.0);
                double t60526 = t60524+t60525;
                double t60527 = 1.0/(t60406*t60406);
                double t60528 = 1.0/pow(rho_b,1.4E1/3.0);
                double t60529 = 1.0/(t60397*t60397);
                double t60530 = 1.0/(t60402*t60402);
                double t60531 = gamma_bb*gcab*t60386*4.0;
                double t60532 = gamma_bb*gcab*t60383*t60385*t60386*4.0;
                double t60533 = gamma_bb*t60383*t60384*t60386*8.0;
                double t60534 = t60531+t60532+t60533;
                double t60535 = t60513*t60286*t60379;
                double t60536 = t60514+t60535;
                double t60537 = gamma_bb*gcaa*t60389*4.0;
                double t60538 = gamma_bb*gcaa*t60493*t60488*t60489*4.0;
                double t60539 = t60494*t60488*t60489*6.0;
                double t60540 = t60490*t60491*t60492;
                double t60541 = t60540+t60537+t60538+t60539+1.0;
                double t60542 = 1.0/t60541;
                double t60543 = gamma_bb*gcaa*t60389;
                double t60544 = t60543+1.0;
                double t60545 = 1.0/t60544;
                double t60546 = gamma_bb*gcaa*t60389*3.0;
                double t60547 = gamma_bb*gcaa*t60493*t60488*t60489;
                double t60548 = t60494*t60488*t60489*3.0;
                double t60549 = t60546+t60547+t60548+1.0;
                double t60550 = 1.0/t60549;
                double t60551 = gamma_bb*gcaa*t60389*2.0;
                double t60552 = t60494*t60488*t60489;
                double t60553 = t60551+t60552+1.0;
                double t60554 = 1.0/t60553;
                double t60555 = 1.0/pow(rho_b,1.9E1/3.0);
                double t60556 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t60557 = 1.0/pow(rho_b,3.5E1/3.0);
                double t60559 = t60286*t60379*t60487;
                double t60560 = ccaa4*t60542*t60490*t60491*t60557*(3.2E1/3.0);
                double t60561 = ccaa1*gamma_bb*gcaa*t60545*t60386*(8.0/3.0);
                double t60562 = ccaa3*gamma_bb*gcaa*t60550*t60556*t60488*t60489*8.0;
                double t60563 = ccaa2*t60554*t60555*t60488*t60489*(1.6E1/3.0);
                double t60564 = 1.0/(t60544*t60544);
                double t60565 = gamma_bb*gcaa*t60386*8.0;
                double t60566 = gamma_bb*gcaa*t60556*t60488*t60489*8.0;
                double t60567 = t60555*t60488*t60489*1.6E1;
                double t60568 = t60565+t60566+t60567;
                double t60569 = 1.0/(t60549*t60549);
                double t60570 = gamma_bb*gcaa*t60386*(3.2E1/3.0);
                double t60571 = gamma_bb*gcaa*t60556*t60488*t60489*3.2E1;
                double t60572 = t60555*t60488*t60489*3.2E1;
                double t60573 = t60490*t60491*t60557*(3.2E1/3.0);
                double t60574 = t60570+t60571+t60572+t60573;
                double t60575 = 1.0/(t60541*t60541);
                double t60576 = gamma_bb*gcaa*t60386*(1.6E1/3.0);
                double t60577 = t60555*t60488*t60489*(1.6E1/3.0);
                double t60578 = t60576+t60577;
                double t60579 = 1.0/(t60553*t60553);
                double t60580 = t60560+t60561+t60562+t60563-ccaa1*t60555*t60564*t60488*t60489*(8.0/3.0)-ccaa4*t60490*t60491*t60492*t60574*t60575-ccaa2*t60494*t60488*t60578*t60489*t60579-ccaa3*gamma_bb*gcaa*t60493*t60568*t60488*t60569*t60489;
                double t60581 = -t60375+t60486+t60559;
                double t60582 = 1.0/pow(rho_b,1.0E1);
                double t60583 = 1.0/pow(rho_b,3.8E1/3.0);
                double t60584 = ccaa4*t60542*t60490*t60491*t60492;
                double t60585 = ccaa1*gamma_bb*gcaa*t60545*t60389;
                double t60586 = ccaa3*gamma_bb*gcaa*t60550*t60493*t60488*t60489;
                double t60587 = ccaa2*t60554*t60494*t60488*t60489;
                double t60588 = ccaa0+t60584+t60585+t60586+t60587;
                double t60589 = 1.0/(t60351*t60351*t60351);
                double t60590 = b4f*t60268*t60389*(1.0E1/9.0);
                double t60591 = b2f*c*t60470*(4.0/9.0);
                double t60592 = b3f*t60268*t60359*t60389*(1.0/1.2E1);
                double t60593 = b1f*c*t60470*t60359*(2.0/9.0);
                double t60594 = b3f*c*t60344*t60470*(2.0/3.0);
                double t60595 = t60590+t60591+t60592+t60593+t60594-b1f*t60471*t60268*t60389*(1.0/3.6E1);
                double t60596 = t60382*t60463*t60469*t60595;
                double t60598 = t60481*t60367*t60368*t60369;
                double t60599 = 1.0/(t60362*t60362);
                double t60600 = 1.0/(t60351*t60351*t60351*t60351);
                double t60601 = t60600*t60382*t60472*t60287*t60599*(1.0/2.0);
                double t60602 = t60274*t60473*t60482*t60483*t60367*(1.0/2.0);
                double t60603 = a1f*c*t60352*t60463*t60468*t60469*(2.0/3.0);
                double t60604 = a1p*c*t60352*t60374*t60368*t60369*(2.0/3.0);
                v_rho_b_rho_b[Q] += scale * (ccab0+ccab1*gcab*t60410*t60384+ccab4*t60411*t60391*t60392+ccab2*t60408*t60383*t60385+ccab3*gcab*t60409*t60383*t60384*t60385)*(-rho_b*(t60602+t60604-t60475-t60484+t60598+t60286*t60379*(t60601+t60603+t60475+t60484+t60596-t60382*t60463*t60472*t60589*2.0-t60481*t60367*t60368*t60369-a1f*c*c0f*t60380*t60470*(8.0/9.0)-t60274*t60473*t60482*t60483*t60367*(1.0/2.0)-a1p*c*t60352*t60374*t60368*t60369*(2.0/3.0)))-t60261*(t60435+t60444-t60315*t60316*t60433*t60279-t60312*t60305*t60309*t60286*(t60435+t60444-t60315*t60316*t60433*t60279-t60415*1.0/(t60292*t60292*t60292)*t60436*t60298*2.0+t60415*t60416*t60298*(b2f*c*t60412*(4.0/9.0)+b4f*t60413*t60268*(1.0E1/9.0)+b1f*c*t60412*t60314*(2.0/9.0)+b3f*c*t60412*t60264*(2.0/3.0)-b1f*t60413*t60427*t60268*(1.0/3.6E1)+b3f*t60314*t60413*t60268*(1.0/1.2E1))+1.0/(t60292*t60292*t60292*t60292)*t60436*1.0/(t60295*t60295)*t60287*t60298*(1.0/2.0)-a1f*c*c0f*t60412*t60296*(8.0/9.0)-t60426*t60274*t60437*t60438*t60279*(1.0/2.0)+a1f*c*t60421*t60415*t60416*t60273*(2.0/3.0)-a1p*c*t60321*t60315*t60316*t60273*(2.0/3.0))+t60300*t60312*t60305*t60445*t60286*2.0E1-t60312*t60322*t60305*t60423*t60286*8.0+t60300*t60312*t60322*t60339*t60286*8.0+t60300*t60312*t60309*t60454*t60286+t60300*t60305*t60281*t60309*t60286*1.2E1-t60312*t60423*t60309*t60339*t60286*2.0-t60426*t60274*t60437*t60438*t60279*(1.0/2.0)+t60300*t60322*t60305*t60280*t60281*t60286*3.2E1-t60305*t60423*t60280*t60281*t60309*t60286*8.0+t60300*t60280*t60281*t60309*t60339*t60286*8.0-a1p*c*t60321*t60315*t60316*t60273*(2.0/3.0)+Aa*t60323*t60341*t60333*t60335*t60454*t60286*2.0+Aa*t60323*t60333*t60335*t60339*t60286*t60448*4.0+Aa*t60305*t60323*t60333*t60335*t60286*(t60312*t60445*2.0E1+t60281*t60309*1.2E1+t60322*t60280*t60281*3.2E1)*2.0-t60323*t60341*t60335*t60461*t60455*t60339*t60456*t60286*2.0-t60305*t60323*t60335*t60461*t60455*t60456*t60286*t60448*2.0+t60305*t60323*t60341*t60335*t60462*1.0/(t60329*t60329*t60329)*t60455*t60286*2.0-t60305*t60323*t60341*t60335*t60455*t60456*t60286*(b2a*c*t60412*(4.0/9.0)+b4a*t60413*t60268*(1.0E1/9.0)+b1a*c*t60412*t60314*(2.0/9.0)+b3a*c*t60412*t60264*(2.0/3.0)-b1a*t60413*t60427*t60268*(1.0/3.6E1)+b3a*t60314*t60413*t60268*(1.0/1.2E1))+Aa*a1a*c*t60412*t60305*t60323*t60341*t60333*t60286*(8.0/9.0)+Aa*a1a*c*t60323*t60341*t60333*t60273*t60339*t60286*(4.0/3.0)+Aa*a1a*c*t60305*t60323*t60333*t60273*t60286*t60448*(4.0/3.0)-t60305*t60323*1.0/(t60332*t60332)*t60341*t60324*t60335*t60462*1.0/(t60329*t60329*t60329*t60329)*t60286*(1.0/2.0)-a1a*c*t60305*t60323*t60341*t60461*t60273*t60455*t60456*t60286*(2.0/3.0))-t60286*t60379*t60487*2.0-t60321*t60315*t60316*t60279*2.0+t60374*t60367*t60368*t60369*2.0-a1p*c*c0p*t60352*t60376*(4.0/3.0)+a1p*c*c0p*t60273*t60299*(4.0/3.0)+t60300*t60312*t60322*t60305*t60286*8.0-t60312*t60305*t60423*t60309*t60286*2.0+t60300*t60312*t60309*t60339*t60286*2.0+t60300*t60305*t60280*t60281*t60309*t60286*8.0+Aa*t60323*t60341*t60333*t60335*t60339*t60286*4.0+Aa*t60305*t60323*t60333*t60335*t60286*t60448*4.0-t60305*t60323*t60341*t60335*t60461*t60455*t60456*t60286*2.0+Aa*a1a*c*t60305*t60323*t60341*t60333*t60273*t60286*(4.0/3.0))+(rho_b*t60536+rho_a*(t60511-t60286*t60379*(t60511-c0f*log((t60287*(1.0/2.0))/(b1f*t60497+b3f*t60498+b2f*c*t60495+b4f*t60268*t60499)+1.0)*(a1f*c*t60495+1.0)*2.0))-t60261*(t60311+t60515+t60516))*(-ccab2*t60530*t60383*t60385*(gamma_bb*gcab*t60528*(8.8E1/9.0)+t60523*t60383*t60488*(3.2E1/9.0)+gamma_bb*t60383*t60384*t60528*(8.8E1/9.0))+ccab2*1.0/(t60402*t60402*t60402)*(t60526*t60526)*t60383*t60385*2.0+ccab4*(t60521*t60521)*t60391*t60392*1.0/(t60397*t60397*t60397)*2.0+ccab1*gamma_bb*gcab*t60410*t60528*(4.4E1/9.0)-ccab1*t60522*t60523*t60383*t60488*(3.2E1/9.0)+ccab2*t60523*t60408*t60383*t60488*(3.2E1/9.0)-ccab4*t60391*t60392*t60529*(gamma_bb*gcab*t60528*(1.76E2/9.0)+t60523*t60383*t60488*(6.4E1/3.0)+gamma_bb*t60383*t60384*t60528*(1.76E2/3.0)+t60523*t60391*t60385*t60488*(6.4E1/3.0)+gamma_bb*gcab*t60383*t60528*t60385*(1.76E2/3.0)+gamma_bb*t60391*t60384*t60528*t60385*(1.76E2/9.0)+gcab*t60523*t60383*t60384*t60488*(1.28E2/3.0))+ccab4*t60411*t60523*t60391*t60385*t60488*(6.4E1/3.0)-ccab1*gamma_bb*t60522*t60383*t60384*t60528*(4.4E1/9.0)+ccab2*gamma_bb*t60408*t60383*t60384*t60528*(8.8E1/9.0)+ccab3*gcab*1.0/(t60406*t60406*t60406)*(t60534*t60534)*t60383*t60384*t60385*2.0+ccab3*gamma_bb*gcab*t60409*t60383*t60528*t60385*(4.4E1/3.0)-ccab2*gamma_bb*t60530*t60526*t60383*t60384*t60386*(1.6E1/3.0)+ccab4*gamma_bb*t60411*t60391*t60384*t60528*t60385*(1.76E2/9.0)+ccab3*gcab*t60523*t60409*t60383*t60384*t60488*(3.2E1/3.0)+ccab1*gcab*t60523*t60383*t60384*t60488*1.0/(t60399*t60399*t60399)*(3.2E1/9.0)-ccab3*gcab*t60383*t60527*t60384*t60385*(gamma_bb*gcab*t60528*(4.4E1/3.0)+t60523*t60383*t60488*(3.2E1/3.0)+gamma_bb*t60383*t60384*t60528*(8.8E1/3.0)+gamma_bb*gcab*t60383*t60528*t60385*(4.4E1/3.0)+gcab*t60523*t60383*t60384*t60488*(3.2E1/3.0))-ccab3*gamma_bb*gcab*t60534*t60383*t60527*t60385*t60386*8.0-ccab4*gamma_bb*t60521*t60391*t60384*t60385*t60529*t60386*(3.2E1/3.0))+(t60311+t60515+t60516+rho_b*(-t60375+t60486+t60286*t60379*(t60375+t60485-t60382*t60463*t60468*t60469-a1p*c*c0p*t60352*t60376*(2.0/3.0)))-t60261*(t60407-t60321*t60315*t60316*t60279+t60300*t60312*t60322*t60305*t60286*4.0-t60312*t60305*t60423*t60309*t60286+t60300*t60312*t60309*t60339*t60286+t60300*t60305*t60280*t60281*t60309*t60286*4.0+Aa*t60323*t60341*t60333*t60335*t60339*t60286*2.0+Aa*t60305*t60323*t60333*t60335*t60286*t60448*2.0-t60305*t60323*t60341*t60335*t60461*t60455*t60456*t60286+Aa*a1a*c*t60305*t60323*t60341*t60333*t60273*t60286*(2.0/3.0))-c0p*t60367*t60376*2.0-t60513*t60286*t60379)*(ccab1*gamma_bb*gcab*t60410*t60386*(4.0/3.0)-ccab2*t60530*t60526*t60383*t60385-ccab4*t60521*t60391*t60392*t60529-ccab1*gamma_bb*t60522*t60383*t60384*t60386*(4.0/3.0)+ccab2*gamma_bb*t60408*t60383*t60384*t60386*(8.0/3.0)+ccab3*gamma_bb*gcab*t60409*t60383*t60385*t60386*4.0+ccab4*gamma_bb*t60411*t60391*t60384*t60385*t60386*(1.6E1/3.0)-ccab3*gcab*t60534*t60383*t60527*t60384*t60385)*2.0+t60580*t60536*2.0+t60581*t60588*2.0-rho_b*t60536*(ccaa1*gamma_bb*gcaa*t60545*t60528*(8.8E1/9.0)+ccaa4*t60542*t60490*t60491*t60583*(1.12E3/9.0)-ccaa1*t60523*t60564*t60488*t60489*2.4E1+ccaa2*t60523*t60554*t60488*t60489*(3.04E2/9.0)-ccaa4*t60490*t60491*t60574*t60557*t60575*(6.4E1/3.0)-ccaa2*t60555*t60488*t60578*t60489*t60579*(3.2E1/3.0)-ccaa2*t60494*t60488*t60489*t60579*(gamma_bb*gcaa*t60528*(1.76E2/9.0)+t60523*t60488*t60489*(3.04E2/9.0))-ccaa4*t60490*t60491*t60492*t60575*(gamma_bb*gcaa*t60528*(3.52E2/9.0)+t60490*t60491*t60583*(1.12E3/9.0)+t60523*t60488*t60489*(6.08E2/3.0)+gamma_bb*gcaa*t60582*t60488*t60489*2.88E2)+ccaa4*1.0/(t60541*t60541*t60541)*t60490*t60491*t60492*(t60574*t60574)*2.0+ccaa2*1.0/(t60553*t60553*t60553)*t60494*t60488*(t60578*t60578)*t60489*2.0+ccaa3*gamma_bb*gcaa*t60550*t60582*t60488*t60489*7.2E1+ccaa1*gamma_bb*gcaa*1.0/(t60544*t60544*t60544)*t60582*t60488*t60489*(1.28E2/9.0)+ccaa3*gamma_bb*gcaa*t60493*1.0/(t60549*t60549*t60549)*(t60568*t60568)*t60488*t60489*2.0-ccaa3*gamma_bb*gcaa*t60493*t60488*t60569*t60489*(gamma_bb*gcaa*t60528*(8.8E1/3.0)+t60523*t60488*t60489*(3.04E2/3.0)+gamma_bb*gcaa*t60582*t60488*t60489*7.2E1)-ccaa3*gamma_bb*gcaa*t60556*t60568*t60488*t60569*t60489*1.6E1)+rho_b*t60588*(t60602+t60604-t60475-t60484+t60598+t60286*t60379*(t60601-t60602+t60603-t60604+t60475+t60484+t60596-t60598-t60382*t60463*t60472*t60589*2.0-a1f*c*c0f*t60380*t60470*(8.0/9.0)))-rho_b*t60580*t60581*2.0;
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t61558 = 1.0/pow(rho_a,1.0/3.0);
                double t61559 = c*t61558;
                double t61560 = sqrt(t61559);
                double t61561 = pow(t61559,3.0/2.0);
                double t61562 = c*c;
                double t61563 = 1.0/pow(rho_a,2.0/3.0);
                double t61564 = 1.0/c0p;
                double t61565 = b1p*t61560;
                double t61566 = b3p*t61561;
                double t61567 = b4p*t61562*t61563;
                double t61568 = b2p*c*t61558;
                double t61569 = t61565+t61566+t61567+t61568;
                double t61570 = 1.0/t61569;
                double t61571 = t61570*t61564*(1.0/2.0);
                double t61572 = t61571+1.0;
                double t61573 = log(t61572);
                double t61574 = a1p*c*t61558;
                double t61575 = t61574+1.0;
                double t61576 = pow(2.0,1.0/3.0);
                double t61577 = t61576*2.0;
                double t61578 = t61577-2.0;
                double t61579 = two_13*2.0;
                double t61580 = t61579-2.0;
                double t61581 = 1.0/t61580;
                double t61582 = 1.0/c0f;
                double t61583 = 1.0/pow(rho_b,1.0/3.0);
                double t61584 = c*t61583;
                double t61585 = sqrt(t61584);
                double t61586 = pow(t61584,3.0/2.0);
                double t61587 = 1.0/pow(rho_b,2.0/3.0);
                double t61588 = b1p*t61585;
                double t61589 = b3p*t61586;
                double t61590 = b4p*t61562*t61587;
                double t61591 = b2p*c*t61583;
                double t61592 = t61590+t61591+t61588+t61589;
                double t61593 = 1.0/t61592;
                double t61594 = t61564*t61593*(1.0/2.0);
                double t61595 = t61594+1.0;
                double t61596 = log(t61595);
                double t61597 = a1p*c*t61583;
                double t61598 = t61597+1.0;
                double t61599 = c0p*t61596*t61598*2.0;
                double t61600 = rho_a+rho_b;
                double t61601 = 1.0/pow(t61600,1.0/3.0);
                double t61602 = c*t61601;
                double t61603 = sqrt(t61602);
                double t61604 = pow(t61602,3.0/2.0);
                double t61605 = 1.0/pow(t61600,2.0/3.0);
                double t61606 = b1p*t61603;
                double t61607 = b3p*t61604;
                double t61608 = b4p*t61605*t61562;
                double t61609 = b2p*c*t61601;
                double t61610 = t61606+t61607+t61608+t61609;
                double t61611 = 1.0/t61610;
                double t61612 = t61611*t61564*(1.0/2.0);
                double t61613 = t61612+1.0;
                double t61614 = log(t61613);
                double t61615 = a1p*c*t61601;
                double t61616 = t61615+1.0;
                double t61617 = c0p*t61614*t61616*2.0;
                double t61618 = rho_a-rho_b;
                double t61619 = t61618*t61618;
                double t61620 = 1.0/t61600;
                double t61621 = t61620*t61618;
                double t61622 = 1.0/(t61600*t61600*t61600*t61600);
                double t61623 = t61619*t61619;
                double t61624 = t61621+1.0;
                double t61625 = pow(t61624,4.0/3.0);
                double t61626 = -t61621+1.0;
                double t61627 = pow(t61626,4.0/3.0);
                double t61628 = t61625+t61627-2.0;
                double t61629 = gcab*gcab;
                double t61630 = 1.0/pow(rho_a,1.6E1/3.0);
                double t61631 = 1.0/pow(rho_a,8.0/3.0);
                double t61632 = gamma_aa*t61631*(1.0/2.0);
                double t61633 = 1.0/pow(rho_b,8.0/3.0);
                double t61634 = gamma_bb*t61633*(1.0/2.0);
                double t61635 = t61632+t61634;
                double t61636 = gcab*t61635;
                double t61637 = t61636+1.0;
                double t61638 = t61635*t61635;
                double t61639 = t61629*t61638;
                double t61640 = gcab*t61635*2.0;
                double t61641 = t61640+t61639+1.0;
                double t61642 = t61629*t61629;
                double t61659 = gcab*t61631*2.0;
                double t61660 = t61631*t61635*t61629*6.0;
                double t61661 = gcab*t61631*t61629*t61638*6.0;
                double t61662 = t61631*t61642*t61635*t61638*2.0;
                double t61643 = t61660+t61661+t61662+t61659;
                double t61644 = t61638*t61638;
                double t61664 = gcab*t61631*(3.0/2.0);
                double t61665 = t61631*t61635*t61629*3.0;
                double t61666 = gcab*t61631*t61629*t61638*(3.0/2.0);
                double t61645 = t61664+t61665+t61666;
                double t61646 = t61629*t61638*3.0;
                double t61647 = gcab*t61635*t61629*t61638;
                double t61648 = gcab*t61635*3.0;
                double t61649 = t61646+t61647+t61648+1.0;
                double t61656 = gcab*t61631;
                double t61657 = t61631*t61635*t61629;
                double t61650 = t61656+t61657;
                double t61651 = t61629*t61638*6.0;
                double t61652 = gcab*t61635*t61629*t61638*4.0;
                double t61653 = t61642*t61644;
                double t61654 = gcab*t61635*4.0;
                double t61655 = t61651+t61652+t61653+t61654+1.0;
                double t61658 = 1.0/(t61641*t61641);
                double t61663 = 1.0/(t61655*t61655);
                double t61667 = 1.0/(t61649*t61649);
                double t61668 = c0p*t61573*t61575*2.0;
                double t61669 = b1f*t61560;
                double t61670 = b3f*t61561;
                double t61671 = b4f*t61562*t61563;
                double t61672 = b2f*c*t61558;
                double t61673 = t61670+t61671+t61672+t61669;
                double t61674 = 1.0/t61673;
                double t61675 = t61582*t61674*(1.0/2.0);
                double t61676 = t61675+1.0;
                double t61677 = log(t61676);
                double t61678 = a1f*c*t61558;
                double t61679 = t61678+1.0;
                double t61680 = t61668-c0f*t61677*t61679*2.0;
                double t61681 = t61668-t61581*t61680*t61578;
                double t61682 = gcaa*gcaa;
                double t61683 = gamma_aa*gamma_aa;
                double t61684 = t61682*t61682;
                double t61685 = 1.0/pow(rho_a,3.2E1/3.0);
                double t61686 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t61687 = gamma_aa*gcaa*t61631;
                double t61688 = t61687+1.0;
                double t61689 = gamma_aa*gcaa*t61631*2.0;
                double t61690 = t61630*t61682*t61683;
                double t61691 = t61690+t61689+1.0;
                double t61692 = gamma_aa*gcaa*t61631*3.0;
                double t61693 = gamma_aa*gcaa*t61682*t61683*t61686;
                double t61694 = t61630*t61682*t61683*3.0;
                double t61695 = t61692+t61693+t61694+1.0;
                double t61696 = t61683*t61683;
                double t61712 = gcaa*t61631*4.0;
                double t61713 = gamma_aa*t61630*t61682*1.2E1;
                double t61714 = gcaa*t61682*t61683*t61686*1.2E1;
                double t61715 = gamma_aa*t61683*t61684*t61685*4.0;
                double t61697 = t61712+t61713+t61714+t61715;
                double t61698 = gamma_aa*gcaa*t61631*4.0;
                double t61699 = gamma_aa*gcaa*t61682*t61683*t61686*4.0;
                double t61700 = t61630*t61682*t61683*6.0;
                double t61701 = t61684*t61685*t61696;
                double t61702 = t61700+t61701+t61698+t61699+1.0;
                double t61705 = gcaa*t61631*2.0;
                double t61706 = gamma_aa*t61630*t61682*2.0;
                double t61703 = t61705+t61706;
                double t61704 = 1.0/(t61695*t61695);
                double t61707 = 1.0/(t61691*t61691);
                double t61708 = gcaa*t61631*3.0;
                double t61709 = gamma_aa*t61630*t61682*6.0;
                double t61710 = gcaa*t61682*t61683*t61686*3.0;
                double t61711 = t61710+t61708+t61709;
                double t61716 = 1.0/(t61702*t61702);
                v_gamma_aa_gamma_aa[Q] += scale * (rho_a*t61681+rho_b*(t61599-t61581*t61578*(t61599-c0f*log((t61582*(1.0/2.0))/(b1f*t61585+b3f*t61586+b2f*c*t61583+b4f*t61562*t61587)+1.0)*(a1f*c*t61583+1.0)*2.0))-t61600*(t61617-t61622*t61623*t61581*t61628*(t61617-c0f*log((t61582*(1.0/2.0))/(b1f*t61603+b3f*t61604+b2f*c*t61601+b4f*t61605*t61562)+1.0)*(a1f*c*t61601+1.0)*2.0)+(Aa*t61581*t61628*log((1.0/2.0)/(Aa*(b1a*t61603+b3a*t61604+b2a*c*t61601+b4a*t61605*t61562))+1.0)*(t61622*t61623-1.0)*(a1a*c*t61601+1.0)*2.0)/d2fz0))*((ccab2*t61630*t61629*(1.0/2.0))/t61641-ccab1*t61630*1.0/(t61637*t61637)*t61629*(1.0/2.0)+ccab2*1.0/(t61641*t61641*t61641)*(t61650*t61650)*t61629*t61638*2.0+ccab4*t61642*(t61643*t61643)*t61644*1.0/(t61655*t61655*t61655)*2.0-ccab2*t61630*t61642*t61638*t61658*(1.0/2.0)-ccab4*t61642*t61644*t61663*(t61630*t61629*3.0+t61630*t61642*t61638*3.0+gcab*t61630*t61635*t61629*6.0)+(ccab4*t61630*t61642*t61638*3.0)/t61655-ccab2*t61631*t61650*t61635*t61629*t61658*2.0+ccab1*gcab*t61630*t61635*1.0/(t61637*t61637*t61637)*t61629*(1.0/2.0)+(ccab3*gcab*t61630*t61635*t61629*(3.0/2.0))/t61649+ccab3*gcab*t61635*(t61645*t61645)*t61629*t61638*1.0/(t61649*t61649*t61649)*2.0-ccab3*gcab*t61631*t61645*t61629*t61638*t61667*3.0-ccab4*t61631*t61642*t61643*t61635*t61663*t61638*4.0-ccab3*gcab*t61635*t61629*t61638*t61667*(t61630*t61629*(3.0/2.0)+gcab*t61630*t61635*t61629*(3.0/2.0)))-rho_a*t61681*((ccaa2*t61630*t61682*2.0)/t61691-ccaa1*t61630*t61682*1.0/(t61688*t61688)*2.0-ccaa2*t61707*t61683*t61684*t61685*2.0+(ccaa4*t61683*t61684*t61685*1.2E1)/t61702-ccaa4*t61716*t61684*t61685*t61696*(t61630*t61682*1.2E1+t61683*t61684*t61685*1.2E1+gamma_aa*gcaa*t61682*t61686*2.4E1)+(ccaa3*gamma_aa*gcaa*t61682*t61686*6.0)/t61695+ccaa1*gamma_aa*gcaa*t61682*t61686*1.0/(t61688*t61688*t61688)*2.0+ccaa2*t61630*(t61703*t61703)*t61682*1.0/(t61691*t61691*t61691)*t61683*2.0+ccaa4*1.0/(t61702*t61702*t61702)*t61684*t61685*t61696*(t61697*t61697)*2.0-ccaa2*gamma_aa*t61630*t61703*t61707*t61682*4.0-ccaa4*gamma_aa*t61716*t61683*t61684*t61685*t61697*8.0-ccaa3*gcaa*t61711*t61704*t61682*t61683*t61686*6.0-ccaa3*gamma_aa*gcaa*t61704*t61682*t61683*t61686*(t61630*t61682*6.0+gamma_aa*gcaa*t61682*t61686*6.0)+ccaa3*gamma_aa*gcaa*(t61711*t61711)*t61682*t61683*t61686*1.0/(t61695*t61695*t61695)*2.0);
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t61719 = 1.0/pow(rho_a,1.0/3.0);
                double t61720 = c*t61719;
                double t61721 = sqrt(t61720);
                double t61722 = pow(t61720,3.0/2.0);
                double t61723 = c*c;
                double t61724 = 1.0/pow(rho_a,2.0/3.0);
                double t61725 = 1.0/c0p;
                double t61726 = b1p*t61721;
                double t61727 = b3p*t61722;
                double t61728 = b4p*t61723*t61724;
                double t61729 = b2p*c*t61719;
                double t61730 = t61726+t61727+t61728+t61729;
                double t61731 = 1.0/t61730;
                double t61732 = t61731*t61725*(1.0/2.0);
                double t61733 = t61732+1.0;
                double t61734 = log(t61733);
                double t61735 = a1p*c*t61719;
                double t61736 = t61735+1.0;
                double t61737 = pow(2.0,1.0/3.0);
                double t61738 = t61737*2.0;
                double t61739 = t61738-2.0;
                double t61740 = two_13*2.0;
                double t61741 = t61740-2.0;
                double t61742 = 1.0/t61741;
                double t61743 = 1.0/c0f;
                double t61744 = 1.0/pow(rho_b,1.0/3.0);
                double t61745 = c*t61744;
                double t61746 = sqrt(t61745);
                double t61747 = pow(t61745,3.0/2.0);
                double t61748 = 1.0/pow(rho_b,2.0/3.0);
                double t61749 = b1p*t61746;
                double t61750 = b3p*t61747;
                double t61751 = b4p*t61723*t61748;
                double t61752 = b2p*c*t61744;
                double t61753 = t61750+t61751+t61752+t61749;
                double t61754 = 1.0/t61753;
                double t61755 = t61725*t61754*(1.0/2.0);
                double t61756 = t61755+1.0;
                double t61757 = log(t61756);
                double t61758 = a1p*c*t61744;
                double t61759 = t61758+1.0;
                double t61760 = c0p*t61757*t61759*2.0;
                double t61761 = rho_a+rho_b;
                double t61762 = 1.0/pow(t61761,1.0/3.0);
                double t61763 = c*t61762;
                double t61764 = sqrt(t61763);
                double t61765 = pow(t61763,3.0/2.0);
                double t61766 = 1.0/pow(t61761,2.0/3.0);
                double t61767 = b1p*t61764;
                double t61768 = b3p*t61765;
                double t61769 = b4p*t61723*t61766;
                double t61770 = b2p*c*t61762;
                double t61771 = t61770+t61767+t61768+t61769;
                double t61772 = 1.0/t61771;
                double t61773 = t61725*t61772*(1.0/2.0);
                double t61774 = t61773+1.0;
                double t61775 = log(t61774);
                double t61776 = a1p*c*t61762;
                double t61777 = t61776+1.0;
                double t61778 = c0p*t61775*t61777*2.0;
                double t61779 = rho_a-rho_b;
                double t61780 = t61779*t61779;
                double t61781 = 1.0/t61761;
                double t61782 = t61781*t61779;
                double t61783 = 1.0/(t61761*t61761*t61761*t61761);
                double t61784 = t61780*t61780;
                double t61785 = t61782+1.0;
                double t61786 = pow(t61785,4.0/3.0);
                double t61787 = -t61782+1.0;
                double t61788 = pow(t61787,4.0/3.0);
                double t61789 = t61786+t61788-2.0;
                double t61790 = gcab*gcab;
                double t61793 = 1.0/pow(rho_a,8.0/3.0);
                double t61794 = 1.0/pow(rho_b,8.0/3.0);
                double t61795 = gamma_aa*t61793*(1.0/2.0);
                double t61796 = gamma_bb*t61794*(1.0/2.0);
                double t61791 = t61795+t61796;
                double t61792 = t61791*t61791;
                double t61797 = t61790*t61790;
                double t61798 = t61792*t61792;
                double t61799 = t61790*t61792*3.0;
                double t61800 = gcab*t61790*t61791*t61792;
                double t61801 = gcab*t61791*3.0;
                double t61802 = t61800+t61801+t61799+1.0;
                double t61803 = t61790*t61792;
                double t61804 = gcab*t61791*2.0;
                double t61805 = t61803+t61804+1.0;
                double t61806 = t61790*t61792*6.0;
                double t61807 = gcab*t61790*t61791*t61792*4.0;
                double t61808 = t61797*t61798;
                double t61809 = gcab*t61791*4.0;
                double t61810 = t61806+t61807+t61808+t61809+1.0;
                double t61811 = 1.0/(t61805*t61805);
                double t61812 = gcab*t61793;
                double t61813 = t61790*t61791*t61793;
                double t61814 = t61812+t61813;
                double t61815 = gcab*t61794;
                double t61816 = t61790*t61791*t61794;
                double t61817 = t61815+t61816;
                double t61818 = gcab*t61791;
                double t61819 = t61818+1.0;
                double t61820 = gcab*t61793*2.0;
                double t61821 = t61790*t61791*t61793*6.0;
                double t61822 = gcab*t61790*t61792*t61793*6.0;
                double t61823 = t61791*t61792*t61793*t61797*2.0;
                double t61824 = t61820+t61821+t61822+t61823;
                double t61825 = 1.0/(t61810*t61810);
                double t61826 = gcab*t61794*2.0;
                double t61827 = t61790*t61791*t61794*6.0;
                double t61828 = gcab*t61790*t61792*t61794*6.0;
                double t61829 = t61791*t61792*t61794*t61797*2.0;
                double t61830 = t61826+t61827+t61828+t61829;
                double t61831 = gcab*t61793*(3.0/2.0);
                double t61832 = t61790*t61791*t61793*3.0;
                double t61833 = gcab*t61790*t61792*t61793*(3.0/2.0);
                double t61834 = t61831+t61832+t61833;
                double t61835 = 1.0/(t61802*t61802);
                double t61836 = gcab*t61794*(3.0/2.0);
                double t61837 = t61790*t61791*t61794*3.0;
                double t61838 = gcab*t61790*t61792*t61794*(3.0/2.0);
                double t61839 = t61836+t61837+t61838;
                v_gamma_aa_gamma_bb[Q] += scale * (-rho_b*(t61760-t61742*t61739*(t61760-c0f*log((t61743*(1.0/2.0))/(b1f*t61746+b3f*t61747+b2f*c*t61744+b4f*t61723*t61748)+1.0)*(a1f*c*t61744+1.0)*2.0))+t61761*(t61778-t61742*t61783*t61784*t61789*(t61778-c0f*log((t61743*(1.0/2.0))/(b1f*t61764+b3f*t61765+b2f*c*t61762+b4f*t61723*t61766)+1.0)*(a1f*c*t61762+1.0)*2.0)+(Aa*t61742*t61789*log((1.0/2.0)/(Aa*(b1a*t61764+b3a*t61765+b2a*c*t61762+b4a*t61723*t61766))+1.0)*(t61783*t61784-1.0)*(a1a*c*t61762+1.0)*2.0)/d2fz0)+rho_a*(t61742*t61739*(c0p*t61734*t61736*2.0-c0f*log((t61743*(1.0/2.0))/(b1f*t61721+b3f*t61722+b2f*c*t61719+b4f*t61723*t61724)+1.0)*(a1f*c*t61719+1.0)*2.0)-c0p*t61734*t61736*2.0))*(ccab4*t61825*t61797*t61798*(t61790*t61793*t61794*3.0+t61792*t61793*t61794*t61797*3.0+gcab*t61790*t61791*t61793*t61794*6.0)-(ccab2*t61790*t61793*t61794*(1.0/2.0))/t61805+ccab1*t61790*1.0/(t61819*t61819)*t61793*t61794*(1.0/2.0)+ccab2*t61811*t61814*t61790*t61791*t61794+ccab2*t61811*t61790*t61817*t61791*t61793+ccab2*t61811*t61792*t61793*t61794*t61797*(1.0/2.0)-ccab2*1.0/(t61805*t61805*t61805)*t61814*t61790*t61817*t61792*2.0-ccab4*1.0/(t61810*t61810*t61810)*t61830*t61824*t61797*t61798*2.0-(ccab4*t61792*t61793*t61794*t61797*3.0)/t61810+ccab3*gcab*t61834*t61790*t61835*t61792*t61794*(3.0/2.0)+ccab3*gcab*t61790*t61835*t61792*t61793*t61839*(3.0/2.0)+ccab4*t61830*t61825*t61791*t61792*t61793*t61797*2.0+ccab4*t61824*t61825*t61791*t61792*t61794*t61797*2.0+ccab3*gcab*t61790*t61835*t61791*t61792*(t61790*t61793*t61794*(3.0/2.0)+gcab*t61790*t61791*t61793*t61794*(3.0/2.0))-(ccab3*gcab*t61790*t61791*t61793*t61794*(3.0/2.0))/t61802-ccab1*gcab*t61790*t61791*1.0/(t61819*t61819*t61819)*t61793*t61794*(1.0/2.0)-ccab3*gcab*1.0/(t61802*t61802*t61802)*t61834*t61790*t61791*t61792*t61839*2.0);
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t61843 = 1.0/pow(rho_a,1.0/3.0);
                double t61844 = c*t61843;
                double t61845 = sqrt(t61844);
                double t61846 = pow(t61844,3.0/2.0);
                double t61847 = c*c;
                double t61848 = 1.0/pow(rho_a,2.0/3.0);
                double t61849 = 1.0/c0p;
                double t61850 = b1p*t61845;
                double t61851 = b3p*t61846;
                double t61852 = b4p*t61847*t61848;
                double t61853 = b2p*c*t61843;
                double t61854 = t61850+t61851+t61852+t61853;
                double t61855 = 1.0/t61854;
                double t61856 = t61855*t61849*(1.0/2.0);
                double t61857 = t61856+1.0;
                double t61858 = log(t61857);
                double t61859 = a1p*c*t61843;
                double t61860 = t61859+1.0;
                double t61861 = pow(2.0,1.0/3.0);
                double t61862 = t61861*2.0;
                double t61863 = t61862-2.0;
                double t61864 = two_13*2.0;
                double t61865 = t61864-2.0;
                double t61866 = 1.0/t61865;
                double t61867 = 1.0/c0f;
                double t61868 = 1.0/pow(rho_b,1.0/3.0);
                double t61869 = c*t61868;
                double t61870 = sqrt(t61869);
                double t61871 = pow(t61869,3.0/2.0);
                double t61872 = 1.0/pow(rho_b,2.0/3.0);
                double t61873 = b1p*t61870;
                double t61874 = b3p*t61871;
                double t61875 = b4p*t61872*t61847;
                double t61876 = b2p*c*t61868;
                double t61877 = t61873+t61874+t61875+t61876;
                double t61878 = 1.0/t61877;
                double t61879 = t61849*t61878*(1.0/2.0);
                double t61880 = t61879+1.0;
                double t61881 = log(t61880);
                double t61882 = a1p*c*t61868;
                double t61883 = t61882+1.0;
                double t61884 = c0p*t61881*t61883*2.0;
                double t61885 = rho_a+rho_b;
                double t61886 = 1.0/pow(t61885,1.0/3.0);
                double t61887 = c*t61886;
                double t61888 = sqrt(t61887);
                double t61889 = pow(t61887,3.0/2.0);
                double t61890 = 1.0/pow(t61885,2.0/3.0);
                double t61891 = b1p*t61888;
                double t61892 = b3p*t61889;
                double t61893 = b4p*t61890*t61847;
                double t61894 = b2p*c*t61886;
                double t61895 = t61891+t61892+t61893+t61894;
                double t61896 = 1.0/t61895;
                double t61897 = t61849*t61896*(1.0/2.0);
                double t61898 = t61897+1.0;
                double t61899 = log(t61898);
                double t61900 = a1p*c*t61886;
                double t61901 = t61900+1.0;
                double t61902 = c0p*t61901*t61899*2.0;
                double t61903 = rho_a-rho_b;
                double t61904 = t61903*t61903;
                double t61905 = 1.0/t61885;
                double t61906 = t61903*t61905;
                double t61907 = 1.0/(t61885*t61885*t61885*t61885);
                double t61908 = t61904*t61904;
                double t61909 = t61906+1.0;
                double t61910 = pow(t61909,4.0/3.0);
                double t61911 = -t61906+1.0;
                double t61912 = pow(t61911,4.0/3.0);
                double t61913 = t61910+t61912-2.0;
                double t61914 = gcab*gcab;
                double t61915 = 1.0/pow(rho_b,1.6E1/3.0);
                double t61916 = 1.0/pow(rho_a,8.0/3.0);
                double t61917 = gamma_aa*t61916*(1.0/2.0);
                double t61918 = 1.0/pow(rho_b,8.0/3.0);
                double t61919 = gamma_bb*t61918*(1.0/2.0);
                double t61920 = t61917+t61919;
                double t61921 = gcab*t61920;
                double t61922 = t61921+1.0;
                double t61923 = t61920*t61920;
                double t61924 = t61914*t61923;
                double t61925 = gcab*t61920*2.0;
                double t61926 = t61924+t61925+1.0;
                double t61927 = t61914*t61914;
                double t61944 = gcab*t61918*2.0;
                double t61945 = t61920*t61914*t61918*6.0;
                double t61946 = gcab*t61914*t61923*t61918*6.0;
                double t61947 = t61920*t61923*t61918*t61927*2.0;
                double t61928 = t61944+t61945+t61946+t61947;
                double t61929 = t61923*t61923;
                double t61949 = gcab*t61918*(3.0/2.0);
                double t61950 = t61920*t61914*t61918*3.0;
                double t61951 = gcab*t61914*t61923*t61918*(3.0/2.0);
                double t61930 = t61950+t61951+t61949;
                double t61931 = t61914*t61923*3.0;
                double t61932 = gcab*t61920*t61914*t61923;
                double t61933 = gcab*t61920*3.0;
                double t61934 = t61931+t61932+t61933+1.0;
                double t61941 = gcab*t61918;
                double t61942 = t61920*t61914*t61918;
                double t61935 = t61941+t61942;
                double t61936 = t61914*t61923*6.0;
                double t61937 = gcab*t61920*t61914*t61923*4.0;
                double t61938 = t61927*t61929;
                double t61939 = gcab*t61920*4.0;
                double t61940 = t61936+t61937+t61938+t61939+1.0;
                double t61943 = 1.0/(t61926*t61926);
                double t61948 = 1.0/(t61940*t61940);
                double t61952 = 1.0/(t61934*t61934);
                double t61953 = b1f*t61870;
                double t61954 = b3f*t61871;
                double t61955 = b4f*t61872*t61847;
                double t61956 = b2f*c*t61868;
                double t61957 = t61953+t61954+t61955+t61956;
                double t61958 = 1.0/t61957;
                double t61959 = t61867*t61958*(1.0/2.0);
                double t61960 = t61959+1.0;
                double t61961 = log(t61960);
                double t61962 = a1f*c*t61868;
                double t61963 = t61962+1.0;
                double t61964 = t61884-c0f*t61961*t61963*2.0;
                double t61965 = t61884-t61863*t61964*t61866;
                double t61966 = gcaa*gcaa;
                double t61967 = gamma_bb*gamma_bb;
                double t61968 = t61966*t61966;
                double t61969 = 1.0/pow(rho_b,3.2E1/3.0);
                double t61970 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t61971 = gamma_bb*gcaa*t61918;
                double t61972 = t61971+1.0;
                double t61973 = gamma_bb*gcaa*t61918*2.0;
                double t61974 = t61915*t61966*t61967;
                double t61975 = t61973+t61974+1.0;
                double t61976 = gamma_bb*gcaa*t61918*3.0;
                double t61977 = gamma_bb*gcaa*t61970*t61966*t61967;
                double t61978 = t61915*t61966*t61967*3.0;
                double t61979 = t61976+t61977+t61978+1.0;
                double t61980 = t61967*t61967;
                double t61996 = gcaa*t61918*4.0;
                double t61997 = gamma_bb*t61915*t61966*1.2E1;
                double t61998 = gcaa*t61970*t61966*t61967*1.2E1;
                double t61999 = gamma_bb*t61967*t61968*t61969*4.0;
                double t61981 = t61996+t61997+t61998+t61999;
                double t61982 = gamma_bb*gcaa*t61918*4.0;
                double t61983 = gamma_bb*gcaa*t61970*t61966*t61967*4.0;
                double t61984 = t61915*t61966*t61967*6.0;
                double t61985 = t61980*t61968*t61969;
                double t61986 = t61982+t61983+t61984+t61985+1.0;
                double t61989 = gcaa*t61918*2.0;
                double t61990 = gamma_bb*t61915*t61966*2.0;
                double t61987 = t61990+t61989;
                double t61988 = 1.0/(t61979*t61979);
                double t61991 = 1.0/(t61975*t61975);
                double t61992 = gcaa*t61918*3.0;
                double t61993 = gamma_bb*t61915*t61966*6.0;
                double t61994 = gcaa*t61970*t61966*t61967*3.0;
                double t61995 = t61992+t61993+t61994;
                double t62000 = 1.0/(t61986*t61986);
                v_gamma_bb_gamma_bb[Q] += scale * (-rho_b*t61965+t61885*(t61902-t61913*t61907*t61908*t61866*(t61902-c0f*log((t61867*(1.0/2.0))/(b1f*t61888+b3f*t61889+b2f*c*t61886+b4f*t61890*t61847)+1.0)*(a1f*c*t61886+1.0)*2.0)+(Aa*t61913*t61866*log((1.0/2.0)/(Aa*(b1a*t61888+b3a*t61889+b2a*c*t61886+b4a*t61890*t61847))+1.0)*(t61907*t61908-1.0)*(a1a*c*t61886+1.0)*2.0)/d2fz0)+rho_a*(t61863*t61866*(c0p*t61860*t61858*2.0-c0f*log((t61867*(1.0/2.0))/(b1f*t61845+b3f*t61846+b2f*c*t61843+b4f*t61847*t61848)+1.0)*(a1f*c*t61843+1.0)*2.0)-c0p*t61860*t61858*2.0))*(ccab1*1.0/(t61922*t61922)*t61914*t61915*(1.0/2.0)-(ccab2*t61914*t61915*(1.0/2.0))/t61926-ccab2*t61914*t61923*1.0/(t61926*t61926*t61926)*(t61935*t61935)*2.0-ccab4*1.0/(t61940*t61940*t61940)*t61927*(t61928*t61928)*t61929*2.0+ccab2*t61923*t61915*t61943*t61927*(1.0/2.0)+ccab4*t61927*t61929*t61948*(t61914*t61915*3.0+t61923*t61915*t61927*3.0+gcab*t61920*t61914*t61915*6.0)-(ccab4*t61923*t61915*t61927*3.0)/t61940+ccab2*t61920*t61914*t61943*t61935*t61918*2.0-ccab1*gcab*t61920*1.0/(t61922*t61922*t61922)*t61914*t61915*(1.0/2.0)-(ccab3*gcab*t61920*t61914*t61915*(3.0/2.0))/t61934-ccab3*gcab*t61920*(t61930*t61930)*t61914*t61923*1.0/(t61934*t61934*t61934)*2.0+ccab3*gcab*t61930*t61914*t61923*t61952*t61918*3.0+ccab4*t61920*t61923*t61918*t61927*t61928*t61948*4.0+ccab3*gcab*t61920*t61914*t61923*t61952*(t61914*t61915*(3.0/2.0)+gcab*t61920*t61914*t61915*(3.0/2.0)))+rho_b*t61965*(ccaa1*t61915*1.0/(t61972*t61972)*t61966*2.0-(ccaa2*t61915*t61966*2.0)/t61975+ccaa2*t61991*t61967*t61968*t61969*2.0-(ccaa4*t61967*t61968*t61969*1.2E1)/t61986+ccaa4*t61980*t61968*t61969*t62000*(t61915*t61966*1.2E1+t61967*t61968*t61969*1.2E1+gamma_bb*gcaa*t61970*t61966*2.4E1)-ccaa1*gamma_bb*gcaa*t61970*1.0/(t61972*t61972*t61972)*t61966*2.0-(ccaa3*gamma_bb*gcaa*t61970*t61966*6.0)/t61979-ccaa2*t61915*t61966*1.0/(t61975*t61975*t61975)*t61967*(t61987*t61987)*2.0-ccaa4*t61980*(t61981*t61981)*t61968*1.0/(t61986*t61986*t61986)*t61969*2.0+ccaa2*gamma_bb*t61915*t61991*t61966*t61987*4.0+ccaa4*gamma_bb*t61981*t61967*t61968*t61969*t62000*8.0+ccaa3*gcaa*t61970*t61966*t61967*t61995*t61988*6.0+ccaa3*gamma_bb*gcaa*t61970*t61966*t61967*t61988*(t61915*t61966*6.0+gamma_bb*gcaa*t61970*t61966*6.0)-ccaa3*gamma_bb*gcaa*t61970*t61966*t61967*(t61995*t61995)*1.0/(t61979*t61979*t61979)*2.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t60606 = 1.0/pow(rho_a,1.0/3.0);
                double t60607 = c*t60606;
                double t60608 = sqrt(t60607);
                double t60609 = pow(t60607,3.0/2.0);
                double t60610 = c*c;
                double t60611 = 1.0/pow(rho_a,2.0/3.0);
                double t60612 = 1.0/c0p;
                double t60613 = b1p*t60608;
                double t60614 = b3p*t60609;
                double t60615 = b4p*t60610*t60611;
                double t60616 = b2p*c*t60606;
                double t60617 = t60613+t60614+t60615+t60616;
                double t60618 = 1.0/t60617;
                double t60619 = t60612*t60618*(1.0/2.0);
                double t60620 = t60619+1.0;
                double t60621 = log(t60620);
                double t60622 = a1p*c*t60606;
                double t60623 = t60622+1.0;
                double t60624 = 1.0/pow(rho_a,8.0/3.0);
                double t60625 = gamma_aa*gamma_aa;
                double t60626 = gcaa*gcaa;
                double t60627 = t60626*t60626;
                double t60628 = 1.0/pow(rho_a,3.2E1/3.0);
                double t60629 = 1.0/pow(rho_a,1.6E1/3.0);
                double t60630 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t60631 = gamma_aa*gcaa*t60624;
                double t60632 = t60631+1.0;
                double t60633 = gamma_aa*gcaa*t60624*3.0;
                double t60634 = gamma_aa*gcaa*t60630*t60625*t60626;
                double t60635 = t60625*t60626*t60629*3.0;
                double t60636 = t60633+t60634+t60635+1.0;
                double t60637 = t60625*t60625;
                double t60638 = gamma_aa*gcaa*t60624*4.0;
                double t60639 = gamma_aa*gcaa*t60630*t60625*t60626*4.0;
                double t60640 = t60625*t60626*t60629*6.0;
                double t60641 = t60627*t60628*t60637;
                double t60642 = t60640+t60641+t60638+t60639+1.0;
                double t60643 = gamma_aa*gcaa*t60624*2.0;
                double t60644 = t60625*t60626*t60629;
                double t60645 = t60643+t60644+1.0;
                double t60646 = rho_a+rho_b;
                double t60647 = 1.0/pow(t60646,1.0/3.0);
                double t60648 = c*t60647;
                double t60649 = sqrt(t60648);
                double t60650 = b1p*t60649;
                double t60651 = pow(t60648,3.0/2.0);
                double t60652 = b3p*t60651;
                double t60653 = 1.0/pow(t60646,2.0/3.0);
                double t60654 = b4p*t60610*t60653;
                double t60655 = b2p*c*t60647;
                double t60656 = t60650+t60652+t60654+t60655;
                double t60657 = 1.0/pow(t60646,4.0/3.0);
                double t60658 = two_13*2.0;
                double t60659 = t60658-2.0;
                double t60660 = 1.0/t60659;
                double t60661 = 1.0/c0f;
                double t60662 = 1.0/t60656;
                double t60663 = t60612*t60662*(1.0/2.0);
                double t60664 = t60663+1.0;
                double t60665 = a1p*c*t60647;
                double t60666 = t60665+1.0;
                double t60667 = rho_a-rho_b;
                double t60668 = t60667*t60667;
                double t60669 = 1.0/t60646;
                double t60670 = t60667*t60669;
                double t60671 = b1f*t60649;
                double t60672 = b3f*t60651;
                double t60673 = b4f*t60610*t60653;
                double t60674 = b2f*c*t60647;
                double t60675 = t60671+t60672+t60673+t60674;
                double t60676 = 1.0/t60675;
                double t60677 = t60661*t60676*(1.0/2.0);
                double t60678 = t60677+1.0;
                double t60679 = log(t60678);
                double t60680 = a1f*c*t60647;
                double t60681 = t60680+1.0;
                double t60682 = log(t60664);
                double t60692 = c0f*t60681*t60679*2.0;
                double t60693 = c0p*t60682*t60666*2.0;
                double t60683 = t60692-t60693;
                double t60684 = t60670+1.0;
                double t60685 = pow(t60684,4.0/3.0);
                double t60686 = -t60670+1.0;
                double t60687 = pow(t60686,4.0/3.0);
                double t60688 = t60685+t60687-2.0;
                double t60689 = 1.0/(t60646*t60646);
                double t60720 = t60667*t60689;
                double t60690 = -t60720+t60669;
                double t60691 = 1.0/(t60646*t60646*t60646*t60646);
                double t60694 = t60668*t60668;
                double t60695 = 1.0/pow(t60646,5.0/3.0);
                double t60696 = 1.0/sqrt(t60648);
                double t60697 = 1.0/t60664;
                double t60698 = 1.0/(t60656*t60656);
                double t60699 = b4p*t60610*t60695*(2.0/3.0);
                double t60700 = b2p*c*t60657*(1.0/3.0);
                double t60701 = b1p*c*t60657*t60696*(1.0/6.0);
                double t60702 = b3p*c*t60657*t60649*(1.0/2.0);
                double t60703 = t60700+t60701+t60702+t60699;
                double t60704 = t60703*t60666*t60697*t60698;
                double t60705 = 1.0/(t60646*t60646*t60646*t60646*t60646);
                double t60706 = 1.0/d2fz0;
                double t60707 = 1.0/Aa;
                double t60708 = b1a*t60649;
                double t60709 = b3a*t60651;
                double t60710 = b4a*t60610*t60653;
                double t60711 = b2a*c*t60647;
                double t60712 = t60710+t60711+t60708+t60709;
                double t60713 = 1.0/t60712;
                double t60714 = t60713*t60707*(1.0/2.0);
                double t60715 = t60714+1.0;
                double t60716 = log(t60715);
                double t60717 = a1a*c*t60647;
                double t60718 = t60717+1.0;
                double t60719 = pow(t60684,1.0/3.0);
                double t60721 = t60690*t60719*(4.0/3.0);
                double t60722 = pow(t60686,1.0/3.0);
                double t60723 = t60721-t60722*t60690*(4.0/3.0);
                double t60724 = t60691*t60694;
                double t60725 = t60724-1.0;
                double t60726 = pow(2.0,1.0/3.0);
                double t60727 = t60726*2.0;
                double t60728 = t60727-2.0;
                double t60729 = a1f*c*t60606;
                double t60730 = t60729+1.0;
                double t60731 = b1f*t60608;
                double t60732 = b3f*t60609;
                double t60733 = b4f*t60610*t60611;
                double t60734 = b2f*c*t60606;
                double t60735 = t60731+t60732+t60733+t60734;
                double t60736 = 1.0/t60735;
                double t60737 = t60661*t60736*(1.0/2.0);
                double t60738 = t60737+1.0;
                double t60739 = 1.0/pow(rho_a,4.0/3.0);
                double t60740 = 1.0/pow(rho_a,5.0/3.0);
                double t60741 = 1.0/sqrt(t60607);
                double t60742 = log(t60738);
                double t60743 = 1.0/t60620;
                double t60744 = 1.0/(t60617*t60617);
                double t60745 = b4p*t60610*t60740*(2.0/3.0);
                double t60746 = b2p*c*t60739*(1.0/3.0);
                double t60747 = b1p*c*t60741*t60739*(1.0/6.0);
                double t60748 = b3p*c*t60608*t60739*(1.0/2.0);
                double t60749 = t60745+t60746+t60747+t60748;
                double t60750 = t60623*t60743*t60744*t60749;
                double t60751 = c0f*t60730*t60742*2.0;
                double t60752 = c0p*t60621*t60623*2.0;
                double t60753 = gamma_aa*t60624*(1.0/2.0);
                double t60754 = 1.0/pow(rho_b,8.0/3.0);
                double t60755 = gamma_bb*t60754*(1.0/2.0);
                double t60756 = t60753+t60755;
                double t60757 = gcab*t60756;
                double t60758 = t60757+1.0;
                double t60759 = gcab*gcab;
                double t60760 = t60756*t60756;
                double t60761 = t60759*t60759;
                double t60762 = t60760*t60760;
                double t60763 = t60760*t60759;
                double t60764 = gcab*t60756*2.0;
                double t60765 = t60763+t60764+1.0;
                double t60766 = t60760*t60759*3.0;
                double t60767 = gcab*t60760*t60756*t60759;
                double t60768 = gcab*t60756*3.0;
                double t60769 = t60766+t60767+t60768+1.0;
                double t60770 = t60760*t60759*6.0;
                double t60771 = gcab*t60760*t60756*t60759*4.0;
                double t60772 = t60761*t60762;
                double t60773 = gcab*t60756*4.0;
                double t60774 = t60770+t60771+t60772+t60773+1.0;
                double t60775 = t60751-t60752;
                double t60776 = 1.0/pow(rho_b,1.0/3.0);
                double t60777 = c*t60776;
                double t60778 = sqrt(t60777);
                double t60779 = pow(t60777,3.0/2.0);
                double t60780 = 1.0/pow(rho_b,2.0/3.0);
                double t60781 = b1p*t60778;
                double t60782 = b3p*t60779;
                double t60783 = b4p*t60610*t60780;
                double t60784 = b2p*c*t60776;
                double t60785 = t60781+t60782+t60783+t60784;
                double t60786 = 1.0/t60785;
                double t60787 = t60612*t60786*(1.0/2.0);
                double t60788 = t60787+1.0;
                double t60789 = log(t60788);
                double t60790 = a1p*c*t60776;
                double t60791 = t60790+1.0;
                double t60792 = c0p*t60791*t60789*2.0;
                double t60793 = t60660*t60691*t60683*t60694*t60688;
                double t60794 = Aa*t60660*t60706*t60716*t60725*t60718*t60688*2.0;
                double t60795 = 1.0/t60758;
                double t60796 = 1.0/pow(rho_a,1.1E1/3.0);
                double t60797 = 1.0/(t60758*t60758);
                double t60798 = 1.0/t60765;
                double t60799 = 1.0/(t60769*t60769);
                double t60800 = 1.0/pow(rho_a,1.9E1/3.0);
                double t60801 = 1.0/(t60765*t60765);
                double t60802 = 1.0/t60769;
                double t60803 = 1.0/t60774;
                double t60804 = 1.0/(t60774*t60774);
                double t60805 = gcab*t60624*2.0;
                double t60806 = t60624*t60756*t60759*6.0;
                double t60807 = gcab*t60624*t60760*t60759*6.0;
                double t60808 = t60624*t60760*t60761*t60756*2.0;
                double t60809 = t60805+t60806+t60807+t60808;
                double t60810 = gamma_aa*gcab*t60796*(8.0/3.0);
                double t60811 = gamma_aa*t60756*t60759*t60796*(8.0/3.0);
                double t60812 = t60810+t60811;
                double t60813 = gcab*t60624;
                double t60814 = t60624*t60756*t60759;
                double t60815 = t60813+t60814;
                double t60816 = gamma_aa*gcab*t60796*(1.6E1/3.0);
                double t60817 = gamma_aa*gcab*t60760*t60759*t60796*1.6E1;
                double t60818 = gamma_aa*t60760*t60761*t60756*t60796*(1.6E1/3.0);
                double t60819 = gamma_aa*t60756*t60759*t60796*1.6E1;
                double t60820 = t60816+t60817+t60818+t60819;
                double t60821 = gcab*t60624*(3.0/2.0);
                double t60822 = t60624*t60756*t60759*3.0;
                double t60823 = gcab*t60624*t60760*t60759*(3.0/2.0);
                double t60824 = t60821+t60822+t60823;
                double t60825 = gamma_aa*gcab*t60796*4.0;
                double t60826 = gamma_aa*gcab*t60760*t60759*t60796*4.0;
                double t60827 = gamma_aa*t60756*t60759*t60796*8.0;
                double t60828 = t60825+t60826+t60827;
                double t60829 = t60660*t60728*t60775;
                double t60830 = t60752+t60829;
                double t60831 = 1.0/t60632;
                double t60832 = 1.0/t60642;
                double t60833 = 1.0/t60645;
                double t60834 = 1.0/t60636;
                double t60835 = 1.0/(t60632*t60632);
                double t60836 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t60837 = 1.0/(t60636*t60636);
                double t60838 = 1.0/(t60645*t60645);
                double t60839 = gcaa*t60624*3.0;
                double t60840 = gamma_aa*t60626*t60629*6.0;
                double t60841 = gcaa*t60630*t60625*t60626*3.0;
                double t60842 = t60840+t60841+t60839;
                double t60843 = 1.0/pow(rho_a,3.5E1/3.0);
                double t60844 = 1.0/(t60642*t60642);
                double t60845 = gcaa*t60624*4.0;
                double t60846 = gamma_aa*t60626*t60629*1.2E1;
                double t60847 = gcaa*t60630*t60625*t60626*1.2E1;
                double t60848 = gamma_aa*t60625*t60627*t60628*4.0;
                double t60849 = t60845+t60846+t60847+t60848;
                double t60850 = gcaa*t60624*2.0;
                double t60851 = gamma_aa*t60626*t60629*2.0;
                double t60852 = t60850+t60851;
                double t60853 = gamma_aa*gcaa*t60796*(1.6E1/3.0);
                double t60854 = t60800*t60625*t60626*(1.6E1/3.0);
                double t60855 = t60853+t60854;
                double t60856 = gamma_aa*gcaa*t60796*8.0;
                double t60857 = gamma_aa*gcaa*t60625*t60626*t60836*8.0;
                double t60858 = t60800*t60625*t60626*1.6E1;
                double t60859 = t60856+t60857+t60858;
                double t60860 = gamma_aa*gcaa*t60796*(3.2E1/3.0);
                double t60861 = gamma_aa*gcaa*t60625*t60626*t60836*3.2E1;
                double t60862 = t60800*t60625*t60626*3.2E1;
                double t60863 = t60627*t60843*t60637*(3.2E1/3.0);
                double t60864 = t60860+t60861+t60862+t60863;
                double t60865 = 1.0/t60738;
                double t60866 = 1.0/(t60735*t60735);
                double t60867 = b4f*t60610*t60740*(2.0/3.0);
                double t60868 = b2f*c*t60739*(1.0/3.0);
                double t60869 = b1f*c*t60741*t60739*(1.0/6.0);
                double t60870 = b3f*c*t60608*t60739*(1.0/2.0);
                double t60871 = t60870+t60867+t60868+t60869;
                double t60872 = a1f*c*c0f*t60742*t60739*(2.0/3.0);
                double t60873 = a1p*c*c0p*t60621*t60739*(2.0/3.0);
                double t60874 = ccaa1*gcaa*t60624*t60831;
                double t60875 = ccaa4*gamma_aa*t60625*t60832*t60627*t60628*4.0;
                double t60876 = ccaa2*gamma_aa*t60626*t60833*t60629*2.0;
                double t60877 = ccaa3*gcaa*t60630*t60625*t60626*t60834*3.0;
                double t60878 = t60874+t60875+t60876+t60877-ccaa1*gamma_aa*t60626*t60835*t60629-ccaa2*t60625*t60626*t60852*t60629*t60838-ccaa4*t60627*t60628*t60637*t60844*t60849-ccaa3*gamma_aa*gcaa*t60630*t60625*t60626*t60842*t60837;
                v_rho_a_gamma_aa[Q] += scale * -(rho_a*t60830+rho_b*(t60792-t60660*t60728*(t60792-c0f*log((t60661*(1.0/2.0))/(b1f*t60778+b3f*t60779+b2f*c*t60776+b4f*t60610*t60780)+1.0)*(a1f*c*t60776+1.0)*2.0))-t60646*(t60693+t60793+t60794))*(ccab1*gcab*t60795*t60796*(4.0/3.0)-ccab2*t60801*t60760*t60759*(gcab*t60796*(8.0/3.0)+gamma_aa*t60800*t60759*(4.0/3.0)+t60756*t60759*t60796*(8.0/3.0))-ccab4*t60804*t60761*t60762*(gcab*t60796*(1.6E1/3.0)+gamma_aa*t60800*t60759*8.0+t60756*t60759*t60796*1.6E1+gamma_aa*t60800*t60760*t60761*8.0+gcab*t60760*t60759*t60796*1.6E1+t60760*t60761*t60756*t60796*(1.6E1/3.0)+gamma_aa*gcab*t60800*t60756*t60759*1.6E1)-ccab1*gamma_aa*t60800*t60759*t60797*(4.0/3.0)+ccab2*gamma_aa*t60800*t60759*t60798*(4.0/3.0)-ccab1*t60756*t60759*t60796*t60797*(4.0/3.0)+ccab2*t60756*t60759*t60796*t60798*(8.0/3.0)-ccab2*t60801*t60812*t60624*t60756*t60759+ccab4*t60803*t60760*t60761*t60756*t60796*(1.6E1/3.0)+ccab4*t60820*t60761*t60762*t60809*1.0/(t60774*t60774*t60774)*2.0+ccab2*t60812*t60760*t60815*1.0/(t60765*t60765*t60765)*t60759*2.0+ccab4*gamma_aa*t60800*t60803*t60760*t60761*8.0+ccab3*gcab*t60802*t60760*t60759*t60796*4.0+ccab3*gamma_aa*gcab*t60800*t60802*t60756*t60759*4.0-ccab2*gamma_aa*t60801*t60815*t60756*t60759*t60796*(8.0/3.0)-ccab3*gcab*t60624*t60760*t60828*t60759*t60799*(3.0/2.0)-ccab4*t60820*t60624*t60804*t60760*t60761*t60756*2.0-ccab3*gcab*t60760*t60756*t60759*t60799*(gcab*t60796*4.0+gamma_aa*t60800*t60759*4.0+t60756*t60759*t60796*8.0+gcab*t60760*t60759*t60796*4.0+gamma_aa*gcab*t60800*t60756*t60759*4.0)+ccab1*gamma_aa*gcab*t60800*t60756*1.0/(t60758*t60758*t60758)*t60759*(4.0/3.0)+ccab3*gcab*t60760*t60824*t60756*t60828*t60759*1.0/(t60769*t60769*t60769)*2.0-ccab3*gamma_aa*gcab*t60760*t60824*t60759*t60796*t60799*4.0-ccab4*gamma_aa*t60804*t60760*t60761*t60809*t60756*t60796*(1.6E1/3.0))-t60878*(t60752+t60660*t60728*(t60751-c0p*t60621*t60623*2.0))-(-t60752+t60693+t60793+t60794+t60646*(t60704-t60660*t60691*t60694*t60688*(t60704-(t60681*1.0/(t60675*t60675)*(b2f*c*t60657*(1.0/3.0)+b4f*t60610*t60695*(2.0/3.0)+b1f*c*t60657*t60696*(1.0/6.0)+b3f*c*t60657*t60649*(1.0/2.0)))/t60678+a1f*c*c0f*t60657*t60679*(2.0/3.0)-a1p*c*c0p*t60682*t60657*(2.0/3.0))-a1p*c*c0p*t60682*t60657*(2.0/3.0)+t60660*t60723*t60691*t60683*t60694-t60660*t60705*t60683*t60694*t60688*4.0+t60660*t60691*t60683*t60667*t60668*t60688*4.0-Aa*t60660*t60706*t60716*t60718*t60688*(t60705*t60694*4.0-t60691*t60667*t60668*4.0)*2.0+Aa*t60660*t60723*t60706*t60716*t60725*t60718*2.0+(1.0/(t60712*t60712)*t60660*t60706*t60725*t60718*t60688*(b2a*c*t60657*(1.0/3.0)+b4a*t60610*t60695*(2.0/3.0)+b1a*c*t60657*t60696*(1.0/6.0)+b3a*c*t60657*t60649*(1.0/2.0)))/t60715-Aa*a1a*c*t60660*t60706*t60716*t60725*t60657*t60688*(2.0/3.0))+rho_a*(-t60750+t60873+t60660*t60728*(t60750+t60872-t60730*t60871*t60865*t60866-a1p*c*c0p*t60621*t60739*(2.0/3.0)))-t60660*t60728*t60775)*(ccab1*gcab*t60624*t60795*(1.0/2.0)-ccab2*t60801*t60760*t60815*t60759-ccab4*t60804*t60761*t60762*t60809-ccab1*t60624*t60756*t60759*t60797*(1.0/2.0)+ccab2*t60624*t60756*t60759*t60798+ccab4*t60803*t60624*t60760*t60761*t60756*2.0+ccab3*gcab*t60802*t60624*t60760*t60759*(3.0/2.0)-ccab3*gcab*t60760*t60824*t60756*t60759*t60799)-rho_a*t60830*(ccaa1*gcaa*t60831*t60796*(-8.0/3.0)-ccaa2*gamma_aa*t60800*t60626*t60833*(3.2E1/3.0)+ccaa1*gamma_aa*t60800*t60626*t60835*8.0+ccaa2*t60800*t60625*t60626*t60852*t60838*(1.6E1/3.0)+ccaa4*t60627*t60843*t60637*t60844*t60849*(3.2E1/3.0)+ccaa4*t60627*t60628*t60637*t60844*(gcaa*t60796*(3.2E1/3.0)+gamma_aa*t60800*t60626*6.4E1+gamma_aa*t60625*t60627*t60843*(1.28E2/3.0)+gcaa*t60625*t60626*t60836*9.6E1)-ccaa1*gcaa*1.0/(t60632*t60632*t60632)*t60625*t60626*t60836*(1.6E1/3.0)+ccaa2*t60625*t60626*t60629*t60838*(gcaa*t60796*(1.6E1/3.0)+gamma_aa*t60800*t60626*(3.2E1/3.0))-ccaa4*gamma_aa*t60625*t60832*t60627*t60843*(1.28E2/3.0)+ccaa2*gamma_aa*t60626*t60629*t60855*t60838*2.0-ccaa3*gcaa*t60625*t60626*t60834*t60836*2.4E1+ccaa4*gamma_aa*t60625*t60627*t60628*t60844*t60864*4.0+ccaa3*gcaa*t60630*t60625*t60626*t60837*t60859*3.0-ccaa2*t60625*t60626*1.0/(t60645*t60645*t60645)*t60852*t60629*t60855*2.0-ccaa4*1.0/(t60642*t60642*t60642)*t60627*t60628*t60637*t60864*t60849*2.0+ccaa3*gamma_aa*gcaa*t60630*t60625*t60626*t60837*(gcaa*t60796*8.0+gamma_aa*t60800*t60626*3.2E1+gcaa*t60625*t60626*t60836*2.4E1)+ccaa3*gamma_aa*gcaa*t60625*t60626*t60842*t60836*t60837*8.0-ccaa3*gamma_aa*gcaa*t60630*t60625*t60626*t60842*1.0/(t60636*t60636*t60636)*t60859*2.0)+rho_a*t60878*(-t60750+t60873+t60660*t60728*(t60750+t60872-t60873-t60730*t60871*t60865*t60866));
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t60881 = rho_a+rho_b;
                double t60882 = 1.0/pow(t60881,1.0/3.0);
                double t60883 = c*t60882;
                double t60884 = sqrt(t60883);
                double t60885 = b1p*t60884;
                double t60886 = pow(t60883,3.0/2.0);
                double t60887 = b3p*t60886;
                double t60888 = c*c;
                double t60889 = 1.0/pow(t60881,2.0/3.0);
                double t60890 = b4p*t60888*t60889;
                double t60891 = b2p*c*t60882;
                double t60892 = t60890+t60891+t60885+t60887;
                double t60893 = 1.0/pow(t60881,4.0/3.0);
                double t60894 = 1.0/c0p;
                double t60895 = 1.0/t60892;
                double t60896 = t60894*t60895*(1.0/2.0);
                double t60897 = t60896+1.0;
                double t60898 = a1p*c*t60882;
                double t60899 = t60898+1.0;
                double t60900 = rho_a-rho_b;
                double t60901 = t60900*t60900;
                double t60902 = 1.0/t60881;
                double t60903 = t60900*t60902;
                double t60904 = two_13*2.0;
                double t60905 = t60904-2.0;
                double t60906 = 1.0/t60905;
                double t60907 = 1.0/c0f;
                double t60908 = b1f*t60884;
                double t60909 = b3f*t60886;
                double t60910 = b4f*t60888*t60889;
                double t60911 = b2f*c*t60882;
                double t60912 = t60910+t60911+t60908+t60909;
                double t60913 = 1.0/t60912;
                double t60914 = t60913*t60907*(1.0/2.0);
                double t60915 = t60914+1.0;
                double t60916 = log(t60915);
                double t60917 = a1f*c*t60882;
                double t60918 = t60917+1.0;
                double t60919 = log(t60897);
                double t60929 = c0f*t60916*t60918*2.0;
                double t60930 = c0p*t60919*t60899*2.0;
                double t60920 = -t60930+t60929;
                double t60921 = t60903+1.0;
                double t60922 = pow(t60921,4.0/3.0);
                double t60923 = -t60903+1.0;
                double t60924 = pow(t60923,4.0/3.0);
                double t60925 = t60922+t60924-2.0;
                double t60926 = 1.0/(t60881*t60881);
                double t60957 = t60900*t60926;
                double t60927 = t60902-t60957;
                double t60928 = 1.0/(t60881*t60881*t60881*t60881);
                double t60931 = t60901*t60901;
                double t60932 = 1.0/pow(t60881,5.0/3.0);
                double t60933 = 1.0/sqrt(t60883);
                double t60934 = 1.0/t60897;
                double t60935 = 1.0/(t60892*t60892);
                double t60936 = b4p*t60932*t60888*(2.0/3.0);
                double t60937 = b2p*c*t60893*(1.0/3.0);
                double t60938 = b1p*c*t60933*t60893*(1.0/6.0);
                double t60939 = b3p*c*t60884*t60893*(1.0/2.0);
                double t60940 = t60936+t60937+t60938+t60939;
                double t60941 = t60940*t60934*t60935*t60899;
                double t60942 = 1.0/(t60881*t60881*t60881*t60881*t60881);
                double t60943 = 1.0/d2fz0;
                double t60944 = 1.0/Aa;
                double t60945 = b1a*t60884;
                double t60946 = b3a*t60886;
                double t60947 = b4a*t60888*t60889;
                double t60948 = b2a*c*t60882;
                double t60949 = t60945+t60946+t60947+t60948;
                double t60950 = 1.0/t60949;
                double t60951 = t60950*t60944*(1.0/2.0);
                double t60952 = t60951+1.0;
                double t60953 = log(t60952);
                double t60954 = a1a*c*t60882;
                double t60955 = t60954+1.0;
                double t60956 = pow(t60921,1.0/3.0);
                double t60958 = t60927*t60956*(4.0/3.0);
                double t60959 = pow(t60923,1.0/3.0);
                double t60960 = t60958-t60927*t60959*(4.0/3.0);
                double t60961 = t60931*t60928;
                double t60962 = t60961-1.0;
                double t60963 = 1.0/pow(rho_a,1.0/3.0);
                double t60964 = c*t60963;
                double t60965 = sqrt(t60964);
                double t60966 = b1f*t60965;
                double t60967 = pow(t60964,3.0/2.0);
                double t60968 = b3f*t60967;
                double t60969 = 1.0/pow(rho_a,2.0/3.0);
                double t60970 = b4f*t60888*t60969;
                double t60971 = b2f*c*t60963;
                double t60972 = t60970+t60971+t60966+t60968;
                double t60973 = 1.0/pow(rho_a,4.0/3.0);
                double t60974 = b1p*t60965;
                double t60975 = b3p*t60967;
                double t60976 = b4p*t60888*t60969;
                double t60977 = b2p*c*t60963;
                double t60978 = t60974+t60975+t60976+t60977;
                double t60979 = 1.0/pow(rho_a,5.0/3.0);
                double t60980 = 1.0/sqrt(t60964);
                double t60981 = 1.0/t60972;
                double t60982 = t60907*t60981*(1.0/2.0);
                double t60983 = t60982+1.0;
                double t60984 = 1.0/t60978;
                double t60985 = t60894*t60984*(1.0/2.0);
                double t60986 = t60985+1.0;
                double t60987 = a1p*c*t60963;
                double t60988 = t60987+1.0;
                double t60989 = 1.0/t60986;
                double t60990 = 1.0/(t60978*t60978);
                double t60991 = b4p*t60888*t60979*(2.0/3.0);
                double t60992 = b2p*c*t60973*(1.0/3.0);
                double t60993 = b1p*c*t60980*t60973*(1.0/6.0);
                double t60994 = b3p*c*t60973*t60965*(1.0/2.0);
                double t60995 = t60991+t60992+t60993+t60994;
                double t60996 = t60990*t60995*t60988*t60989;
                double t60997 = log(t60986);
                double t60998 = pow(2.0,1.0/3.0);
                double t60999 = t60998*2.0;
                double t61000 = t60999-2.0;
                double t61001 = log(t60983);
                double t61002 = a1f*c*t60963;
                double t61003 = t61002+1.0;
                double t61004 = 1.0/pow(rho_b,8.0/3.0);
                double t61005 = 1.0/pow(rho_a,8.0/3.0);
                double t61006 = gamma_aa*t61005*(1.0/2.0);
                double t61007 = gamma_bb*t61004*(1.0/2.0);
                double t61008 = t61006+t61007;
                double t61009 = gcab*t61008;
                double t61010 = t61009+1.0;
                double t61011 = gcab*gcab;
                double t61012 = t61008*t61008;
                double t61013 = t61011*t61011;
                double t61014 = t61012*t61012;
                double t61015 = t61011*t61012;
                double t61016 = gcab*t61008*2.0;
                double t61017 = t61015+t61016+1.0;
                double t61018 = t61011*t61012*3.0;
                double t61019 = gcab*t61011*t61012*t61008;
                double t61020 = gcab*t61008*3.0;
                double t61021 = t61020+t61018+t61019+1.0;
                double t61022 = t61011*t61012*6.0;
                double t61023 = gcab*t61011*t61012*t61008*4.0;
                double t61024 = t61013*t61014;
                double t61025 = gcab*t61008*4.0;
                double t61026 = t61022+t61023+t61024+t61025+1.0;
                double t61027 = c0f*t61001*t61003*2.0;
                double t61029 = c0p*t60988*t60997*2.0;
                double t61028 = t61027-t61029;
                double t61030 = 1.0/pow(rho_b,1.0/3.0);
                double t61031 = c*t61030;
                double t61032 = sqrt(t61031);
                double t61033 = pow(t61031,3.0/2.0);
                double t61034 = 1.0/pow(rho_b,2.0/3.0);
                double t61035 = b1p*t61032;
                double t61036 = b3p*t61033;
                double t61037 = b4p*t60888*t61034;
                double t61038 = b2p*c*t61030;
                double t61039 = t61035+t61036+t61037+t61038;
                double t61040 = 1.0/t61039;
                double t61041 = t60894*t61040*(1.0/2.0);
                double t61042 = t61041+1.0;
                double t61043 = log(t61042);
                double t61044 = a1p*c*t61030;
                double t61045 = t61044+1.0;
                double t61046 = c0p*t61043*t61045*2.0;
                double t61047 = t60920*t60931*t60906*t60925*t60928;
                double t61048 = Aa*t60906*t60925*t60943*t60953*t60962*t60955*2.0;
                double t61049 = 1.0/pow(rho_a,1.1E1/3.0);
                double t61050 = 1.0/(t61021*t61021);
                double t61051 = 1.0/(t61026*t61026);
                double t61052 = gcab*t61004*2.0;
                double t61053 = t61011*t61004*t61008*6.0;
                double t61054 = gcab*t61011*t61012*t61004*6.0;
                double t61055 = t61012*t61004*t61013*t61008*2.0;
                double t61056 = t61052+t61053+t61054+t61055;
                double t61057 = 1.0/(t61017*t61017);
                double t61058 = gamma_aa*gcab*t61049*(8.0/3.0);
                double t61059 = gamma_aa*t61011*t61008*t61049*(8.0/3.0);
                double t61060 = t61058+t61059;
                double t61061 = gcab*t61004;
                double t61062 = t61011*t61004*t61008;
                double t61063 = t61061+t61062;
                double t61064 = gamma_aa*gcab*t61049*(1.6E1/3.0);
                double t61065 = gamma_aa*gcab*t61011*t61012*t61049*1.6E1;
                double t61066 = gamma_aa*t61012*t61013*t61008*t61049*(1.6E1/3.0);
                double t61067 = gamma_aa*t61011*t61008*t61049*1.6E1;
                double t61068 = t61064+t61065+t61066+t61067;
                double t61069 = 1.0/(t61010*t61010);
                double t61070 = 1.0/t61017;
                double t61071 = gcab*t61004*(3.0/2.0);
                double t61072 = t61011*t61004*t61008*3.0;
                double t61073 = gcab*t61011*t61012*t61004*(3.0/2.0);
                double t61074 = t61071+t61072+t61073;
                double t61075 = gamma_aa*gcab*t61049*4.0;
                double t61076 = gamma_aa*gcab*t61011*t61012*t61049*4.0;
                double t61077 = gamma_aa*t61011*t61008*t61049*8.0;
                double t61078 = t61075+t61076+t61077;
                double t61079 = 1.0/t61021;
                double t61080 = 1.0/t61026;
                v_rho_a_gamma_bb[Q] += scale * -(t60930+t61047+t61048+t60881*(t60941-t60931*t60906*t60925*t60928*(t60941-(1.0/(t60912*t60912)*t60918*(b2f*c*t60893*(1.0/3.0)+b4f*t60932*t60888*(2.0/3.0)+b1f*c*t60933*t60893*(1.0/6.0)+b3f*c*t60884*t60893*(1.0/2.0)))/t60915+a1f*c*c0f*t60916*t60893*(2.0/3.0)-a1p*c*c0p*t60919*t60893*(2.0/3.0))-a1p*c*c0p*t60919*t60893*(2.0/3.0)-t60920*t60931*t60906*t60942*t60925*4.0+t60920*t60931*t60906*t60960*t60928+t60900*t60901*t60920*t60906*t60925*t60928*4.0-Aa*t60906*t60925*t60943*t60953*t60955*(t60931*t60942*4.0-t60900*t60901*t60928*4.0)*2.0+Aa*t60906*t60960*t60943*t60953*t60962*t60955*2.0+(t60906*t60925*t60943*t60962*t60955*1.0/(t60949*t60949)*(b2a*c*t60893*(1.0/3.0)+b4a*t60932*t60888*(2.0/3.0)+b1a*c*t60933*t60893*(1.0/6.0)+b3a*c*t60884*t60893*(1.0/2.0)))/t60952-Aa*a1a*c*t60906*t60925*t60943*t60953*t60962*t60893*(2.0/3.0))+rho_a*(-t60996+t60906*t61000*(t60996-(1.0/(t60972*t60972)*t61003*(b2f*c*t60973*(1.0/3.0)+b4f*t60888*t60979*(2.0/3.0)+b1f*c*t60980*t60973*(1.0/6.0)+b3f*c*t60973*t60965*(1.0/2.0)))/t60983+a1f*c*c0f*t60973*t61001*(2.0/3.0)-a1p*c*c0p*t60973*t60997*(2.0/3.0))+a1p*c*c0p*t60973*t60997*(2.0/3.0))-c0p*t60988*t60997*2.0-t60906*t61000*t61028)*((ccab1*gcab*t61004*(1.0/2.0))/t61010+ccab2*t61011*t61004*t61070*t61008-ccab2*t61011*t61012*t61063*t61057-ccab1*t61011*t61004*t61008*t61069*(1.0/2.0)-ccab4*t61013*t61014*t61051*t61056+ccab4*t61012*t61004*t61013*t61008*t61080*2.0+ccab3*gcab*t61011*t61012*t61004*t61079*(3.0/2.0)-ccab3*gcab*t61011*t61012*t61050*t61008*t61074)+(rho_a*(t61029+t60906*t61000*t61028)+rho_b*(t61046-t60906*t61000*(t61046-c0f*log((t60907*(1.0/2.0))/(b1f*t61032+b3f*t61033+b2f*c*t61030+b4f*t60888*t61034)+1.0)*(a1f*c*t61030+1.0)*2.0))-t60881*(t60930+t61047+t61048))*(ccab4*t61013*t61014*t61051*(gamma_aa*t61011*t61004*t61049*8.0+gamma_aa*t61012*t61004*t61013*t61049*8.0+gamma_aa*gcab*t61011*t61004*t61008*t61049*1.6E1)+ccab2*t61011*t61004*t61060*t61008*t61057-ccab2*t61011*t61012*t61060*1.0/(t61017*t61017*t61017)*t61063*2.0-ccab4*t61013*t61014*1.0/(t61026*t61026*t61026)*t61056*t61068*2.0-ccab2*gamma_aa*t61011*t61004*t61070*t61049*(4.0/3.0)+ccab1*gamma_aa*t61011*t61004*t61049*t61069*(4.0/3.0)-ccab4*gamma_aa*t61012*t61004*t61013*t61080*t61049*8.0+ccab2*gamma_aa*t61012*t61004*t61013*t61057*t61049*(4.0/3.0)+ccab2*gamma_aa*t61011*t61008*t61063*t61057*t61049*(8.0/3.0)+ccab3*gcab*t61011*t61012*t61004*t61050*t61078*(3.0/2.0)+ccab4*t61012*t61004*t61013*t61051*t61008*t61068*2.0+ccab3*gcab*t61011*t61012*t61050*t61008*(gamma_aa*t61011*t61004*t61049*4.0+gamma_aa*gcab*t61011*t61004*t61008*t61049*4.0)-ccab1*gamma_aa*gcab*1.0/(t61010*t61010*t61010)*t61011*t61004*t61008*t61049*(4.0/3.0)-ccab3*gcab*t61011*t61012*1.0/(t61021*t61021*t61021)*t61008*t61074*t61078*2.0+ccab3*gamma_aa*gcab*t61011*t61012*t61050*t61074*t61049*4.0-ccab3*gamma_aa*gcab*t61011*t61004*t61008*t61049*t61079*4.0+ccab4*gamma_aa*t61012*t61013*t61051*t61008*t61056*t61049*(1.6E1/3.0));
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t61082 = rho_a+rho_b;
                double t61083 = 1.0/pow(t61082,1.0/3.0);
                double t61084 = c*t61083;
                double t61085 = sqrt(t61084);
                double t61086 = b1p*t61085;
                double t61087 = pow(t61084,3.0/2.0);
                double t61088 = b3p*t61087;
                double t61089 = c*c;
                double t61090 = 1.0/pow(t61082,2.0/3.0);
                double t61091 = b4p*t61090*t61089;
                double t61092 = b2p*c*t61083;
                double t61093 = t61091+t61092+t61086+t61088;
                double t61094 = 1.0/pow(t61082,4.0/3.0);
                double t61095 = 1.0/c0p;
                double t61096 = 1.0/t61093;
                double t61097 = t61095*t61096*(1.0/2.0);
                double t61098 = t61097+1.0;
                double t61099 = a1p*c*t61083;
                double t61100 = t61099+1.0;
                double t61101 = rho_a-rho_b;
                double t61102 = t61101*t61101;
                double t61103 = 1.0/t61082;
                double t61104 = t61101*t61103;
                double t61105 = two_13*2.0;
                double t61106 = t61105-2.0;
                double t61107 = 1.0/t61106;
                double t61108 = 1.0/c0f;
                double t61109 = b1f*t61085;
                double t61110 = b3f*t61087;
                double t61111 = b4f*t61090*t61089;
                double t61112 = b2f*c*t61083;
                double t61113 = t61110+t61111+t61112+t61109;
                double t61114 = 1.0/t61113;
                double t61115 = t61114*t61108*(1.0/2.0);
                double t61116 = t61115+1.0;
                double t61117 = log(t61116);
                double t61118 = a1f*c*t61083;
                double t61119 = t61118+1.0;
                double t61120 = log(t61098);
                double t61131 = c0f*t61117*t61119*2.0;
                double t61132 = c0p*t61100*t61120*2.0;
                double t61121 = t61131-t61132;
                double t61122 = t61104+1.0;
                double t61123 = pow(t61122,4.0/3.0);
                double t61124 = -t61104+1.0;
                double t61125 = pow(t61124,4.0/3.0);
                double t61126 = t61123+t61125-2.0;
                double t61127 = 1.0/(t61082*t61082);
                double t61128 = t61101*t61127;
                double t61129 = t61103+t61128;
                double t61130 = 1.0/(t61082*t61082*t61082*t61082);
                double t61133 = t61102*t61102;
                double t61134 = 1.0/pow(t61082,5.0/3.0);
                double t61135 = 1.0/sqrt(t61084);
                double t61136 = 1.0/t61098;
                double t61137 = 1.0/(t61093*t61093);
                double t61138 = b4p*t61134*t61089*(2.0/3.0);
                double t61139 = b2p*c*t61094*(1.0/3.0);
                double t61140 = b1p*c*t61135*t61094*(1.0/6.0);
                double t61141 = b3p*c*t61085*t61094*(1.0/2.0);
                double t61142 = t61140+t61141+t61138+t61139;
                double t61143 = 1.0/(t61082*t61082*t61082*t61082*t61082);
                double t61144 = 1.0/d2fz0;
                double t61145 = 1.0/Aa;
                double t61146 = b1a*t61085;
                double t61147 = b3a*t61087;
                double t61148 = b4a*t61090*t61089;
                double t61149 = b2a*c*t61083;
                double t61150 = t61146+t61147+t61148+t61149;
                double t61151 = 1.0/t61150;
                double t61152 = t61151*t61145*(1.0/2.0);
                double t61153 = t61152+1.0;
                double t61154 = log(t61153);
                double t61155 = a1a*c*t61083;
                double t61156 = t61155+1.0;
                double t61157 = pow(t61122,1.0/3.0);
                double t61158 = t61129*t61157*(4.0/3.0);
                double t61159 = pow(t61124,1.0/3.0);
                double t61160 = t61158-t61129*t61159*(4.0/3.0);
                double t61161 = t61130*t61133;
                double t61162 = t61161-1.0;
                double t61163 = 1.0/pow(rho_b,1.0/3.0);
                double t61164 = c*t61163;
                double t61165 = sqrt(t61164);
                double t61166 = b1f*t61165;
                double t61167 = pow(t61164,3.0/2.0);
                double t61168 = b3f*t61167;
                double t61169 = 1.0/pow(rho_b,2.0/3.0);
                double t61170 = b4f*t61169*t61089;
                double t61171 = b2f*c*t61163;
                double t61172 = t61170+t61171+t61166+t61168;
                double t61173 = 1.0/pow(rho_b,4.0/3.0);
                double t61174 = b1p*t61165;
                double t61175 = b3p*t61167;
                double t61176 = b4p*t61169*t61089;
                double t61177 = b2p*c*t61163;
                double t61178 = t61174+t61175+t61176+t61177;
                double t61179 = 1.0/pow(rho_b,5.0/3.0);
                double t61180 = 1.0/sqrt(t61164);
                double t61181 = 1.0/t61172;
                double t61182 = t61108*t61181*(1.0/2.0);
                double t61183 = t61182+1.0;
                double t61184 = 1.0/t61178;
                double t61185 = t61184*t61095*(1.0/2.0);
                double t61186 = t61185+1.0;
                double t61187 = a1p*c*t61163;
                double t61188 = t61187+1.0;
                double t61189 = 1.0/t61186;
                double t61190 = 1.0/(t61178*t61178);
                double t61191 = b4p*t61089*t61179*(2.0/3.0);
                double t61192 = b2p*c*t61173*(1.0/3.0);
                double t61193 = b1p*c*t61180*t61173*(1.0/6.0);
                double t61194 = b3p*c*t61173*t61165*(1.0/2.0);
                double t61195 = t61191+t61192+t61193+t61194;
                double t61196 = t61190*t61195*t61188*t61189;
                double t61197 = log(t61186);
                double t61198 = pow(2.0,1.0/3.0);
                double t61199 = t61198*2.0;
                double t61200 = t61199-2.0;
                double t61201 = log(t61183);
                double t61202 = a1f*c*t61163;
                double t61203 = t61202+1.0;
                double t61204 = 1.0/pow(rho_a,8.0/3.0);
                double t61205 = gamma_aa*t61204*(1.0/2.0);
                double t61206 = 1.0/pow(rho_b,8.0/3.0);
                double t61207 = gamma_bb*t61206*(1.0/2.0);
                double t61208 = t61205+t61207;
                double t61209 = gcab*t61208;
                double t61210 = t61209+1.0;
                double t61211 = gcab*gcab;
                double t61212 = t61208*t61208;
                double t61213 = t61211*t61211;
                double t61214 = t61212*t61212;
                double t61215 = t61211*t61212;
                double t61216 = gcab*t61208*2.0;
                double t61217 = t61215+t61216+1.0;
                double t61218 = t61211*t61212*3.0;
                double t61219 = gcab*t61211*t61212*t61208;
                double t61220 = gcab*t61208*3.0;
                double t61221 = t61220+t61218+t61219+1.0;
                double t61222 = t61211*t61212*6.0;
                double t61223 = gcab*t61211*t61212*t61208*4.0;
                double t61224 = t61213*t61214;
                double t61225 = gcab*t61208*4.0;
                double t61226 = t61222+t61223+t61224+t61225+1.0;
                double t61227 = a1p*c*c0p*t61120*t61094*(2.0/3.0);
                double t61228 = 1.0/pow(rho_a,1.0/3.0);
                double t61229 = c*t61228;
                double t61230 = sqrt(t61229);
                double t61231 = pow(t61229,3.0/2.0);
                double t61232 = 1.0/pow(rho_a,2.0/3.0);
                double t61233 = b1p*t61230;
                double t61234 = b3p*t61231;
                double t61235 = b4p*t61232*t61089;
                double t61236 = b2p*c*t61228;
                double t61237 = t61233+t61234+t61235+t61236;
                double t61238 = 1.0/t61237;
                double t61239 = t61238*t61095*(1.0/2.0);
                double t61240 = t61239+1.0;
                double t61241 = log(t61240);
                double t61242 = a1p*c*t61228;
                double t61243 = t61242+1.0;
                double t61244 = c0p*t61241*t61243*2.0;
                double t61245 = c0f*t61201*t61203*2.0;
                double t61247 = c0p*t61188*t61197*2.0;
                double t61246 = t61245-t61247;
                double t61248 = t61121*t61130*t61133*t61107*t61126;
                double t61249 = Aa*t61107*t61126*t61144*t61162*t61154*t61156*2.0;
                double t61250 = 1.0/pow(rho_b,1.1E1/3.0);
                double t61251 = 1.0/(t61221*t61221);
                double t61252 = 1.0/(t61226*t61226);
                double t61253 = gcab*t61204*2.0;
                double t61254 = t61211*t61204*t61208*6.0;
                double t61255 = gcab*t61211*t61212*t61204*6.0;
                double t61256 = t61212*t61204*t61213*t61208*2.0;
                double t61257 = t61253+t61254+t61255+t61256;
                double t61258 = 1.0/(t61217*t61217);
                double t61259 = gamma_bb*gcab*t61250*(8.0/3.0);
                double t61260 = gamma_bb*t61211*t61250*t61208*(8.0/3.0);
                double t61261 = t61260+t61259;
                double t61262 = gcab*t61204;
                double t61263 = t61211*t61204*t61208;
                double t61264 = t61262+t61263;
                double t61265 = gamma_bb*gcab*t61250*(1.6E1/3.0);
                double t61266 = gamma_bb*gcab*t61211*t61212*t61250*1.6E1;
                double t61267 = gamma_bb*t61212*t61213*t61250*t61208*(1.6E1/3.0);
                double t61268 = gamma_bb*t61211*t61250*t61208*1.6E1;
                double t61269 = t61265+t61266+t61267+t61268;
                double t61270 = 1.0/(t61210*t61210);
                double t61271 = 1.0/t61217;
                double t61272 = gcab*t61204*(3.0/2.0);
                double t61273 = t61211*t61204*t61208*3.0;
                double t61274 = gcab*t61211*t61212*t61204*(3.0/2.0);
                double t61275 = t61272+t61273+t61274;
                double t61276 = gamma_bb*gcab*t61250*4.0;
                double t61277 = gamma_bb*gcab*t61211*t61212*t61250*4.0;
                double t61278 = gamma_bb*t61211*t61250*t61208*8.0;
                double t61279 = t61276+t61277+t61278;
                double t61280 = 1.0/t61221;
                double t61281 = 1.0/t61226;
                v_rho_b_gamma_aa[Q] += scale * (rho_b*(t61247+t61200*t61107*t61246)+rho_a*(t61244-t61200*t61107*(t61244-c0f*log((t61108*(1.0/2.0))/(b1f*t61230+b3f*t61231+b2f*c*t61228+b4f*t61232*t61089)+1.0)*(a1f*c*t61228+1.0)*2.0))-t61082*(t61132+t61248+t61249))*(ccab4*t61213*t61214*t61252*(gamma_bb*t61211*t61204*t61250*8.0+gamma_bb*t61212*t61204*t61213*t61250*8.0+gamma_bb*gcab*t61211*t61204*t61250*t61208*1.6E1)+ccab2*t61211*t61204*t61261*t61208*t61258-ccab2*t61211*t61212*t61261*1.0/(t61217*t61217*t61217)*t61264*2.0-ccab4*t61213*t61214*1.0/(t61226*t61226*t61226)*t61257*t61269*2.0+ccab1*gamma_bb*t61211*t61204*t61250*t61270*(4.0/3.0)-ccab2*gamma_bb*t61211*t61204*t61250*t61271*(4.0/3.0)-ccab4*gamma_bb*t61212*t61204*t61213*t61250*t61281*8.0+ccab2*gamma_bb*t61212*t61204*t61213*t61250*t61258*(4.0/3.0)+ccab2*gamma_bb*t61211*t61250*t61208*t61264*t61258*(8.0/3.0)+ccab3*gcab*t61211*t61212*t61204*t61251*t61279*(3.0/2.0)+ccab4*t61212*t61204*t61213*t61252*t61208*t61269*2.0+ccab3*gcab*t61211*t61212*t61251*t61208*(gamma_bb*t61211*t61204*t61250*4.0+gamma_bb*gcab*t61211*t61204*t61250*t61208*4.0)-ccab1*gamma_bb*gcab*1.0/(t61210*t61210*t61210)*t61211*t61204*t61250*t61208*(4.0/3.0)-ccab3*gcab*t61211*t61212*1.0/(t61221*t61221*t61221)*t61208*t61275*t61279*2.0-ccab3*gamma_bb*gcab*t61211*t61204*t61250*t61208*t61280*4.0+ccab3*gamma_bb*gcab*t61211*t61212*t61250*t61251*t61275*4.0+ccab4*gamma_bb*t61212*t61213*t61250*t61252*t61208*t61257*(1.6E1/3.0))-(t61132+t61248+t61249+rho_b*(-t61196+t61200*t61107*(t61196-(t61203*1.0/(t61172*t61172)*(b2f*c*t61173*(1.0/3.0)+b4f*t61089*t61179*(2.0/3.0)+b1f*c*t61180*t61173*(1.0/6.0)+b3f*c*t61173*t61165*(1.0/2.0)))/t61183+a1f*c*c0f*t61201*t61173*(2.0/3.0)-a1p*c*c0p*t61173*t61197*(2.0/3.0))+a1p*c*c0p*t61173*t61197*(2.0/3.0))-t61082*(t61227-t61100*t61142*t61136*t61137+t61121*t61130*t61133*t61160*t61107+t61121*t61133*t61107*t61143*t61126*4.0-t61130*t61133*t61107*t61126*(t61227-t61100*t61142*t61136*t61137+(1.0/(t61113*t61113)*t61119*(b2f*c*t61094*(1.0/3.0)+b4f*t61134*t61089*(2.0/3.0)+b1f*c*t61135*t61094*(1.0/6.0)+b3f*c*t61085*t61094*(1.0/2.0)))/t61116-a1f*c*c0f*t61117*t61094*(2.0/3.0))+t61101*t61102*t61121*t61130*t61107*t61126*4.0+Aa*t61107*t61126*t61144*t61154*t61156*(t61133*t61143*4.0+t61101*t61102*t61130*4.0)*2.0+Aa*t61160*t61107*t61144*t61162*t61154*t61156*2.0-(1.0/(t61150*t61150)*t61107*t61126*t61144*t61162*t61156*(b2a*c*t61094*(1.0/3.0)+b4a*t61134*t61089*(2.0/3.0)+b1a*c*t61135*t61094*(1.0/6.0)+b3a*c*t61085*t61094*(1.0/2.0)))/t61153+Aa*a1a*c*t61107*t61126*t61144*t61162*t61154*t61094*(2.0/3.0))-c0p*t61188*t61197*2.0-t61200*t61107*t61246)*((ccab1*gcab*t61204*(1.0/2.0))/t61210-ccab1*t61211*t61204*t61270*t61208*(1.0/2.0)+ccab2*t61211*t61204*t61208*t61271-ccab2*t61211*t61212*t61264*t61258-ccab4*t61213*t61214*t61252*t61257+ccab4*t61212*t61204*t61213*t61208*t61281*2.0+ccab3*gcab*t61211*t61212*t61204*t61280*(3.0/2.0)-ccab3*gcab*t61211*t61212*t61251*t61208*t61275);
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t61284 = 1.0/pow(rho_b,1.0/3.0);
                double t61285 = c*t61284;
                double t61286 = sqrt(t61285);
                double t61287 = pow(t61285,3.0/2.0);
                double t61288 = c*c;
                double t61289 = 1.0/pow(rho_b,2.0/3.0);
                double t61290 = 1.0/c0p;
                double t61291 = b1p*t61286;
                double t61292 = b3p*t61287;
                double t61293 = b4p*t61288*t61289;
                double t61294 = b2p*c*t61284;
                double t61295 = t61291+t61292+t61293+t61294;
                double t61296 = 1.0/t61295;
                double t61297 = t61290*t61296*(1.0/2.0);
                double t61298 = t61297+1.0;
                double t61299 = log(t61298);
                double t61300 = a1p*c*t61284;
                double t61301 = t61300+1.0;
                double t61302 = 1.0/pow(rho_b,8.0/3.0);
                double t61303 = gamma_bb*gamma_bb;
                double t61304 = gcaa*gcaa;
                double t61305 = t61304*t61304;
                double t61306 = 1.0/pow(rho_b,3.2E1/3.0);
                double t61307 = 1.0/pow(rho_b,1.6E1/3.0);
                double t61308 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t61309 = gamma_bb*gcaa*t61302;
                double t61310 = t61309+1.0;
                double t61311 = gamma_bb*gcaa*t61302*3.0;
                double t61312 = gamma_bb*gcaa*t61303*t61304*t61308;
                double t61313 = t61303*t61304*t61307*3.0;
                double t61314 = t61311+t61312+t61313+1.0;
                double t61315 = t61303*t61303;
                double t61316 = gamma_bb*gcaa*t61302*4.0;
                double t61317 = gamma_bb*gcaa*t61303*t61304*t61308*4.0;
                double t61318 = t61303*t61304*t61307*6.0;
                double t61319 = t61305*t61306*t61315;
                double t61320 = t61316+t61317+t61318+t61319+1.0;
                double t61321 = gamma_bb*gcaa*t61302*2.0;
                double t61322 = t61303*t61304*t61307;
                double t61323 = t61321+t61322+1.0;
                double t61324 = rho_a+rho_b;
                double t61325 = 1.0/pow(t61324,1.0/3.0);
                double t61326 = c*t61325;
                double t61327 = sqrt(t61326);
                double t61328 = b1p*t61327;
                double t61329 = pow(t61326,3.0/2.0);
                double t61330 = b3p*t61329;
                double t61331 = 1.0/pow(t61324,2.0/3.0);
                double t61332 = b4p*t61331*t61288;
                double t61333 = b2p*c*t61325;
                double t61334 = t61330+t61332+t61333+t61328;
                double t61335 = 1.0/pow(t61324,4.0/3.0);
                double t61336 = two_13*2.0;
                double t61337 = t61336-2.0;
                double t61338 = 1.0/t61337;
                double t61339 = 1.0/c0f;
                double t61340 = 1.0/t61334;
                double t61341 = t61340*t61290*(1.0/2.0);
                double t61342 = t61341+1.0;
                double t61343 = a1p*c*t61325;
                double t61344 = t61343+1.0;
                double t61345 = rho_a-rho_b;
                double t61346 = t61345*t61345;
                double t61347 = 1.0/t61324;
                double t61348 = t61345*t61347;
                double t61349 = b1f*t61327;
                double t61350 = b3f*t61329;
                double t61351 = b4f*t61331*t61288;
                double t61352 = b2f*c*t61325;
                double t61353 = t61350+t61351+t61352+t61349;
                double t61354 = 1.0/t61353;
                double t61355 = t61354*t61339*(1.0/2.0);
                double t61356 = t61355+1.0;
                double t61357 = log(t61356);
                double t61358 = a1f*c*t61325;
                double t61359 = t61358+1.0;
                double t61360 = log(t61342);
                double t61371 = c0f*t61357*t61359*2.0;
                double t61372 = c0p*t61360*t61344*2.0;
                double t61361 = t61371-t61372;
                double t61362 = t61348+1.0;
                double t61363 = pow(t61362,4.0/3.0);
                double t61364 = -t61348+1.0;
                double t61365 = pow(t61364,4.0/3.0);
                double t61366 = t61363+t61365-2.0;
                double t61367 = 1.0/(t61324*t61324);
                double t61368 = t61345*t61367;
                double t61369 = t61347+t61368;
                double t61370 = 1.0/(t61324*t61324*t61324*t61324);
                double t61373 = t61346*t61346;
                double t61374 = 1.0/pow(t61324,5.0/3.0);
                double t61375 = 1.0/sqrt(t61326);
                double t61376 = 1.0/t61342;
                double t61377 = 1.0/(t61334*t61334);
                double t61378 = b4p*t61374*t61288*(2.0/3.0);
                double t61379 = b2p*c*t61335*(1.0/3.0);
                double t61380 = b1p*c*t61335*t61375*(1.0/6.0);
                double t61381 = b3p*c*t61335*t61327*(1.0/2.0);
                double t61382 = t61380+t61381+t61378+t61379;
                double t61383 = 1.0/(t61324*t61324*t61324*t61324*t61324);
                double t61384 = 1.0/d2fz0;
                double t61385 = 1.0/Aa;
                double t61386 = b1a*t61327;
                double t61387 = b3a*t61329;
                double t61388 = b4a*t61331*t61288;
                double t61389 = b2a*c*t61325;
                double t61390 = t61386+t61387+t61388+t61389;
                double t61391 = 1.0/t61390;
                double t61392 = t61391*t61385*(1.0/2.0);
                double t61393 = t61392+1.0;
                double t61394 = log(t61393);
                double t61395 = a1a*c*t61325;
                double t61396 = t61395+1.0;
                double t61397 = pow(t61362,1.0/3.0);
                double t61398 = t61369*t61397*(4.0/3.0);
                double t61399 = pow(t61364,1.0/3.0);
                double t61400 = t61398-t61369*t61399*(4.0/3.0);
                double t61401 = t61370*t61373;
                double t61402 = t61401-1.0;
                double t61403 = pow(2.0,1.0/3.0);
                double t61404 = t61403*2.0;
                double t61405 = t61404-2.0;
                double t61406 = a1f*c*t61284;
                double t61407 = t61406+1.0;
                double t61408 = b1f*t61286;
                double t61409 = b3f*t61287;
                double t61410 = b4f*t61288*t61289;
                double t61411 = b2f*c*t61284;
                double t61412 = t61410+t61411+t61408+t61409;
                double t61413 = 1.0/t61412;
                double t61414 = t61413*t61339*(1.0/2.0);
                double t61415 = t61414+1.0;
                double t61416 = 1.0/pow(rho_b,4.0/3.0);
                double t61417 = 1.0/pow(rho_b,5.0/3.0);
                double t61418 = 1.0/sqrt(t61285);
                double t61419 = log(t61415);
                double t61420 = 1.0/t61298;
                double t61421 = 1.0/(t61295*t61295);
                double t61422 = b4p*t61417*t61288*(2.0/3.0);
                double t61423 = b2p*c*t61416*(1.0/3.0);
                double t61424 = b1p*c*t61416*t61418*(1.0/6.0);
                double t61425 = b3p*c*t61416*t61286*(1.0/2.0);
                double t61426 = t61422+t61423+t61424+t61425;
                double t61427 = t61301*t61420*t61421*t61426;
                double t61428 = c0f*t61407*t61419*2.0;
                double t61429 = c0p*t61301*t61299*2.0;
                double t61430 = 1.0/pow(rho_a,8.0/3.0);
                double t61431 = gamma_aa*t61430*(1.0/2.0);
                double t61432 = gamma_bb*t61302*(1.0/2.0);
                double t61433 = t61431+t61432;
                double t61434 = gcab*t61433;
                double t61435 = t61434+1.0;
                double t61436 = gcab*gcab;
                double t61437 = t61433*t61433;
                double t61438 = t61436*t61436;
                double t61439 = t61437*t61437;
                double t61440 = t61436*t61437;
                double t61441 = gcab*t61433*2.0;
                double t61442 = t61440+t61441+1.0;
                double t61443 = t61436*t61437*3.0;
                double t61444 = gcab*t61433*t61436*t61437;
                double t61445 = gcab*t61433*3.0;
                double t61446 = t61443+t61444+t61445+1.0;
                double t61447 = t61436*t61437*6.0;
                double t61448 = gcab*t61433*t61436*t61437*4.0;
                double t61449 = t61438*t61439;
                double t61450 = gcab*t61433*4.0;
                double t61451 = t61450+t61447+t61448+t61449+1.0;
                double t61452 = a1p*c*c0p*t61360*t61335*(2.0/3.0);
                double t61453 = 1.0/pow(rho_a,1.0/3.0);
                double t61454 = c*t61453;
                double t61455 = sqrt(t61454);
                double t61456 = pow(t61454,3.0/2.0);
                double t61457 = 1.0/pow(rho_a,2.0/3.0);
                double t61458 = b1p*t61455;
                double t61459 = b3p*t61456;
                double t61460 = b4p*t61457*t61288;
                double t61461 = b2p*c*t61453;
                double t61462 = t61460+t61461+t61458+t61459;
                double t61463 = 1.0/t61462;
                double t61464 = t61290*t61463*(1.0/2.0);
                double t61465 = t61464+1.0;
                double t61466 = log(t61465);
                double t61467 = a1p*c*t61453;
                double t61468 = t61467+1.0;
                double t61469 = c0p*t61466*t61468*2.0;
                double t61470 = t61428-t61429;
                double t61471 = t61361*t61370*t61373*t61338*t61366;
                double t61472 = Aa*t61402*t61338*t61366*t61384*t61394*t61396*2.0;
                double t61473 = 1.0/t61435;
                double t61474 = 1.0/pow(rho_b,1.1E1/3.0);
                double t61475 = 1.0/(t61435*t61435);
                double t61476 = 1.0/t61442;
                double t61477 = 1.0/(t61446*t61446);
                double t61478 = 1.0/pow(rho_b,1.9E1/3.0);
                double t61479 = 1.0/(t61442*t61442);
                double t61480 = 1.0/t61446;
                double t61481 = 1.0/t61451;
                double t61482 = 1.0/(t61451*t61451);
                double t61483 = gcab*t61302*2.0;
                double t61484 = t61302*t61433*t61436*6.0;
                double t61485 = gcab*t61302*t61436*t61437*6.0;
                double t61486 = t61302*t61433*t61437*t61438*2.0;
                double t61487 = t61483+t61484+t61485+t61486;
                double t61488 = gamma_bb*gcab*t61474*(8.0/3.0);
                double t61489 = gamma_bb*t61433*t61436*t61474*(8.0/3.0);
                double t61490 = t61488+t61489;
                double t61491 = gcab*t61302;
                double t61492 = t61302*t61433*t61436;
                double t61493 = t61491+t61492;
                double t61494 = gamma_bb*gcab*t61474*(1.6E1/3.0);
                double t61495 = gamma_bb*gcab*t61436*t61437*t61474*1.6E1;
                double t61496 = gamma_bb*t61433*t61437*t61438*t61474*(1.6E1/3.0);
                double t61497 = gamma_bb*t61433*t61436*t61474*1.6E1;
                double t61498 = t61494+t61495+t61496+t61497;
                double t61499 = gcab*t61302*(3.0/2.0);
                double t61500 = t61302*t61433*t61436*3.0;
                double t61501 = gcab*t61302*t61436*t61437*(3.0/2.0);
                double t61502 = t61500+t61501+t61499;
                double t61503 = gamma_bb*gcab*t61474*4.0;
                double t61504 = gamma_bb*gcab*t61436*t61437*t61474*4.0;
                double t61505 = gamma_bb*t61433*t61436*t61474*8.0;
                double t61506 = t61503+t61504+t61505;
                double t61507 = t61405*t61470*t61338;
                double t61508 = t61507+t61429;
                double t61509 = 1.0/t61310;
                double t61510 = 1.0/t61320;
                double t61511 = 1.0/t61323;
                double t61512 = 1.0/t61314;
                double t61513 = 1.0/(t61310*t61310);
                double t61514 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t61515 = 1.0/(t61314*t61314);
                double t61516 = 1.0/(t61323*t61323);
                double t61517 = gcaa*t61302*3.0;
                double t61518 = gamma_bb*t61304*t61307*6.0;
                double t61519 = gcaa*t61303*t61304*t61308*3.0;
                double t61520 = t61517+t61518+t61519;
                double t61521 = 1.0/pow(rho_b,3.5E1/3.0);
                double t61522 = 1.0/(t61320*t61320);
                double t61523 = gcaa*t61302*4.0;
                double t61524 = gamma_bb*t61304*t61307*1.2E1;
                double t61525 = gcaa*t61303*t61304*t61308*1.2E1;
                double t61526 = gamma_bb*t61303*t61305*t61306*4.0;
                double t61527 = t61523+t61524+t61525+t61526;
                double t61528 = gcaa*t61302*2.0;
                double t61529 = gamma_bb*t61304*t61307*2.0;
                double t61530 = t61528+t61529;
                double t61531 = gamma_bb*gcaa*t61474*(1.6E1/3.0);
                double t61532 = t61303*t61304*t61478*(1.6E1/3.0);
                double t61533 = t61531+t61532;
                double t61534 = gamma_bb*gcaa*t61474*8.0;
                double t61535 = gamma_bb*gcaa*t61303*t61304*t61514*8.0;
                double t61536 = t61303*t61304*t61478*1.6E1;
                double t61537 = t61534+t61535+t61536;
                double t61538 = gamma_bb*gcaa*t61474*(3.2E1/3.0);
                double t61539 = gamma_bb*gcaa*t61303*t61304*t61514*3.2E1;
                double t61540 = t61303*t61304*t61478*3.2E1;
                double t61541 = t61305*t61521*t61315*(3.2E1/3.0);
                double t61542 = t61540+t61541+t61538+t61539;
                double t61543 = 1.0/t61415;
                double t61544 = 1.0/(t61412*t61412);
                double t61545 = b4f*t61417*t61288*(2.0/3.0);
                double t61546 = b2f*c*t61416*(1.0/3.0);
                double t61547 = b1f*c*t61416*t61418*(1.0/6.0);
                double t61548 = b3f*c*t61416*t61286*(1.0/2.0);
                double t61549 = t61545+t61546+t61547+t61548;
                double t61550 = a1f*c*c0f*t61416*t61419*(2.0/3.0);
                double t61551 = a1p*c*c0p*t61416*t61299*(2.0/3.0);
                double t61552 = ccaa1*gcaa*t61302*t61509;
                double t61553 = ccaa4*gamma_bb*t61303*t61510*t61305*t61306*4.0;
                double t61554 = ccaa2*gamma_bb*t61304*t61511*t61307*2.0;
                double t61555 = ccaa3*gcaa*t61303*t61304*t61512*t61308*3.0;
                double t61556 = t61552+t61553+t61554+t61555-ccaa1*gamma_bb*t61304*t61513*t61307-ccaa2*t61303*t61304*t61530*t61307*t61516-ccaa4*t61305*t61306*t61315*t61522*t61527-ccaa3*gamma_bb*gcaa*t61303*t61304*t61520*t61308*t61515;
                v_rho_b_gamma_bb[Q] += scale * -(rho_b*t61508+rho_a*(t61469-t61405*t61338*(t61469-c0f*log((t61339*(1.0/2.0))/(b1f*t61455+b3f*t61456+b2f*c*t61453+b4f*t61457*t61288)+1.0)*(a1f*c*t61453+1.0)*2.0))-t61324*(t61372+t61471+t61472))*(ccab1*gcab*t61473*t61474*(4.0/3.0)-ccab2*t61436*t61437*t61479*(gcab*t61474*(8.0/3.0)+gamma_bb*t61436*t61478*(4.0/3.0)+t61433*t61436*t61474*(8.0/3.0))-ccab4*t61482*t61438*t61439*(gcab*t61474*(1.6E1/3.0)+gamma_bb*t61436*t61478*8.0+t61433*t61436*t61474*1.6E1+gamma_bb*t61437*t61438*t61478*8.0+gcab*t61436*t61437*t61474*1.6E1+t61433*t61437*t61438*t61474*(1.6E1/3.0)+gamma_bb*gcab*t61433*t61436*t61478*1.6E1)-ccab1*gamma_bb*t61436*t61475*t61478*(4.0/3.0)+ccab2*gamma_bb*t61436*t61476*t61478*(4.0/3.0)-ccab1*t61433*t61436*t61474*t61475*(4.0/3.0)+ccab2*t61433*t61436*t61474*t61476*(8.0/3.0)-ccab2*t61302*t61433*t61436*t61490*t61479+ccab4*t61433*t61481*t61437*t61438*t61474*(1.6E1/3.0)+ccab2*1.0/(t61442*t61442*t61442)*t61436*t61490*t61437*t61493*2.0+ccab4*1.0/(t61451*t61451*t61451)*t61438*t61439*t61487*t61498*2.0+ccab4*gamma_bb*t61481*t61437*t61438*t61478*8.0+ccab3*gcab*t61480*t61436*t61437*t61474*4.0+ccab3*gamma_bb*gcab*t61433*t61480*t61436*t61478*4.0-ccab2*gamma_bb*t61433*t61436*t61474*t61493*t61479*(8.0/3.0)-ccab3*gcab*t61302*t61506*t61436*t61437*t61477*(3.0/2.0)-ccab4*t61302*t61433*t61437*t61482*t61438*t61498*2.0-ccab3*gcab*t61433*t61436*t61437*t61477*(gcab*t61474*4.0+gamma_bb*t61436*t61478*4.0+t61433*t61436*t61474*8.0+gcab*t61436*t61437*t61474*4.0+gamma_bb*gcab*t61433*t61436*t61478*4.0)+ccab1*gamma_bb*gcab*t61433*1.0/(t61435*t61435*t61435)*t61436*t61478*(4.0/3.0)+ccab3*gcab*t61502*t61433*t61506*t61436*t61437*1.0/(t61446*t61446*t61446)*2.0-ccab3*gamma_bb*gcab*t61502*t61436*t61437*t61474*t61477*4.0-ccab4*gamma_bb*t61433*t61437*t61482*t61438*t61474*t61487*(1.6E1/3.0))-(t61372+t61471+t61472-t61429+rho_b*(t61551-t61427+t61405*t61338*(t61550+t61427-t61407*t61543*t61544*t61549-a1p*c*c0p*t61416*t61299*(2.0/3.0)))-t61324*(t61452-t61344*t61382*t61376*t61377+t61400*t61361*t61370*t61373*t61338+t61361*t61373*t61338*t61383*t61366*4.0-t61370*t61373*t61338*t61366*(t61452-t61344*t61382*t61376*t61377+(1.0/(t61353*t61353)*t61359*(b2f*c*t61335*(1.0/3.0)+b4f*t61374*t61288*(2.0/3.0)+b1f*c*t61335*t61375*(1.0/6.0)+b3f*c*t61335*t61327*(1.0/2.0)))/t61356-a1f*c*c0f*t61335*t61357*(2.0/3.0))+t61361*t61370*t61345*t61346*t61338*t61366*4.0+Aa*t61338*t61366*t61384*t61394*t61396*(t61373*t61383*4.0+t61370*t61345*t61346*4.0)*2.0+Aa*t61400*t61402*t61338*t61384*t61394*t61396*2.0-(t61402*1.0/(t61390*t61390)*t61338*t61366*t61384*t61396*(b2a*c*t61335*(1.0/3.0)+b4a*t61374*t61288*(2.0/3.0)+b1a*c*t61335*t61375*(1.0/6.0)+b3a*c*t61335*t61327*(1.0/2.0)))/t61393+Aa*a1a*c*t61402*t61335*t61338*t61366*t61384*t61394*(2.0/3.0))-t61405*t61470*t61338)*(ccab1*gcab*t61302*t61473*(1.0/2.0)-ccab1*t61302*t61433*t61436*t61475*(1.0/2.0)+ccab2*t61302*t61433*t61436*t61476-ccab2*t61436*t61437*t61493*t61479-ccab4*t61482*t61438*t61439*t61487+ccab4*t61302*t61433*t61481*t61437*t61438*2.0+ccab3*gcab*t61302*t61480*t61436*t61437*(3.0/2.0)-ccab3*gcab*t61502*t61433*t61436*t61437*t61477)-t61556*(t61429+t61405*t61338*(t61428-c0p*t61301*t61299*2.0))-rho_b*t61508*(ccaa1*gcaa*t61509*t61474*(-8.0/3.0)-ccaa2*gamma_bb*t61304*t61511*t61478*(3.2E1/3.0)+ccaa1*gamma_bb*t61304*t61513*t61478*8.0+ccaa4*t61305*t61521*t61315*t61522*t61527*(3.2E1/3.0)+ccaa2*t61303*t61304*t61530*t61516*t61478*(1.6E1/3.0)+ccaa4*t61305*t61306*t61315*t61522*(gcaa*t61474*(3.2E1/3.0)+gamma_bb*t61304*t61478*6.4E1+gamma_bb*t61303*t61305*t61521*(1.28E2/3.0)+gcaa*t61303*t61304*t61514*9.6E1)-ccaa1*gcaa*1.0/(t61310*t61310*t61310)*t61303*t61304*t61514*(1.6E1/3.0)+ccaa2*t61303*t61304*t61307*t61516*(gcaa*t61474*(1.6E1/3.0)+gamma_bb*t61304*t61478*(3.2E1/3.0))-ccaa4*gamma_bb*t61303*t61510*t61305*t61521*(1.28E2/3.0)+ccaa2*gamma_bb*t61304*t61307*t61533*t61516*2.0-ccaa3*gcaa*t61303*t61304*t61512*t61514*2.4E1+ccaa4*gamma_bb*t61303*t61305*t61306*t61522*t61542*4.0+ccaa3*gcaa*t61303*t61304*t61308*t61515*t61537*3.0-ccaa2*t61303*t61304*1.0/(t61323*t61323*t61323)*t61530*t61307*t61533*2.0-ccaa4*1.0/(t61320*t61320*t61320)*t61305*t61306*t61315*t61542*t61527*2.0+ccaa3*gamma_bb*gcaa*t61303*t61304*t61308*t61515*(gcaa*t61474*8.0+gamma_bb*t61304*t61478*3.2E1+gcaa*t61303*t61304*t61514*2.4E1)+ccaa3*gamma_bb*gcaa*t61303*t61304*t61520*t61514*t61515*8.0-ccaa3*gamma_bb*gcaa*t61303*t61304*t61520*1.0/(t61314*t61314*t61314)*t61308*t61537*2.0)+rho_b*t61556*(t61551-t61427+t61405*t61338*(t61550-t61551+t61427-t61407*t61543*t61544*t61549));
            }
            
        }
    }
}

}
