#include <libmints/vector.h>
#include "B974_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

B974_CFunctional::B974_CFunctional()
{
    name_ = "B974_C";
    description_ = "    4th-Order B97 Correlation Expansion\n";
    citation_ = "    A.D. Boese, et. al., J. Chem. Phys., 112(4), 1670-1678, 2000\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = true;
    meta_ = false;
    parameters_["two_13"] =   1.2599210498948732E+00;
    parameters_["d2fz0"] =   1.7099210000000000E+00;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["Aa"] =   1.6886999999999999E-02;
    parameters_["a1a"] =   1.1125000000000000E-01;
    parameters_["b1a"] =   1.0356999999999999E+01;
    parameters_["b2a"] =   3.6231000000000000E+00;
    parameters_["b3a"] =   8.8026000000000004E-01;
    parameters_["b4a"] =   4.9670999999999998E-01;
    parameters_["c0p"] =   3.1091000000000001E-02;
    parameters_["a1p"] =   2.1370000000000000E-01;
    parameters_["b1p"] =   7.5956999999999999E+00;
    parameters_["b2p"] =   3.5876000000000001E+00;
    parameters_["b3p"] =   1.6382000000000001E+00;
    parameters_["b4p"] =   4.9293999999999999E-01;
    parameters_["c0f"] =   1.5545000000000000E-02;
    parameters_["a1f"] =   2.0548000000000000E-01;
    parameters_["b1f"] =   1.4118900000000000E+01;
    parameters_["b2f"] =   6.1977000000000002E+00;
    parameters_["b3f"] =   3.3662000000000001E+00;
    parameters_["b4f"] =   6.2517000000000000E-01;
    parameters_["gcab"] =   6.0000000000000001E-03;
    parameters_["gcaa"] =   2.0000000000000001E-01;
    parameters_["ccab0"] =   5.1473000000000002E-01;
    parameters_["ccab1"] =   6.9298200000000003E+00;
    parameters_["ccab2"] =  -2.4707300000000000E+01;
    parameters_["ccab3"] =   2.3109800000000000E+01;
    parameters_["ccab4"] =  -1.1323399999999999E+01;
    parameters_["ccaa0"] =   4.8950800000000000E-01;
    parameters_["ccaa1"] =  -2.6069900000000001E-01;
    parameters_["ccaa2"] =   4.3291700000000000E-01;
    parameters_["ccaa3"] =  -1.9924700000000000E+00;
    parameters_["ccaa4"] =   2.4853100000000001E+00;
}
B974_CFunctional::~B974_CFunctional()
{
}
void B974_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double two_13 = parameters_["two_13"];
    double d2fz0 = parameters_["d2fz0"];
    double c = parameters_["c"];
    double Aa = parameters_["Aa"];
    double a1a = parameters_["a1a"];
    double b1a = parameters_["b1a"];
    double b2a = parameters_["b2a"];
    double b3a = parameters_["b3a"];
    double b4a = parameters_["b4a"];
    double c0p = parameters_["c0p"];
    double a1p = parameters_["a1p"];
    double b1p = parameters_["b1p"];
    double b2p = parameters_["b2p"];
    double b3p = parameters_["b3p"];
    double b4p = parameters_["b4p"];
    double c0f = parameters_["c0f"];
    double a1f = parameters_["a1f"];
    double b1f = parameters_["b1f"];
    double b2f = parameters_["b2f"];
    double b3f = parameters_["b3f"];
    double b4f = parameters_["b4f"];
    double gcab = parameters_["gcab"];
    double gcaa = parameters_["gcaa"];
    double ccab0 = parameters_["ccab0"];
    double ccab1 = parameters_["ccab1"];
    double ccab2 = parameters_["ccab2"];
    double ccab3 = parameters_["ccab3"];
    double ccab4 = parameters_["ccab4"];
    double ccaa0 = parameters_["ccaa0"];
    double ccaa1 = parameters_["ccaa1"];
    double ccaa2 = parameters_["ccaa2"];
    double ccaa3 = parameters_["ccaa3"];
    double ccaa4 = parameters_["ccaa4"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t27696 = 1.0/pow(rho_b,1.0/3.0);
                double t27697 = c*t27696;
                double t27698 = sqrt(t27697);
                double t27699 = pow(t27697,3.0/2.0);
                double t27700 = c*c;
                double t27701 = 1.0/pow(rho_b,2.0/3.0);
                double t27702 = 1.0/c0p;
                double t27703 = b1p*t27698;
                double t27704 = b3p*t27699;
                double t27705 = b4p*t27700*t27701;
                double t27706 = b2p*c*t27696;
                double t27707 = t27703+t27704+t27705+t27706;
                double t27708 = 1.0/t27707;
                double t27709 = t27702*t27708*(1.0/2.0);
                double t27710 = t27709+1.0;
                double t27711 = log(t27710);
                double t27712 = a1p*c*t27696;
                double t27713 = t27712+1.0;
                double t27714 = gamma_bb*gamma_bb;
                double t27715 = gcaa*gcaa;
                double t27716 = t27714*t27714;
                double t27717 = t27715*t27715;
                double t27718 = 1.0/pow(rho_b,3.2E1/3.0);
                double t27719 = 1.0/pow(rho_b,8.0/3.0);
                double t27720 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27721 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * (-rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t27698+b3f*t27699+b2f*c*t27696+b4f*t27700*t27701))+1.0)*(a1f*c*t27696+1.0)*2.0-c0p*t27711*t27713*2.0))/(two_13*2.0-2.0)+c0p*t27711*t27713*2.0)*(ccaa0+(ccaa2*t27721*t27714*t27715)/(gamma_bb*gcaa*t27719*2.0+t27721*t27714*t27715+1.0)+(ccaa1*gamma_bb*gcaa*t27719)/(gamma_bb*gcaa*t27719+1.0)+(ccaa4*t27716*t27717*t27718)/(gamma_bb*gcaa*t27719*4.0+t27721*t27714*t27715*6.0+t27716*t27717*t27718+gamma_bb*gcaa*t27720*t27714*t27715*4.0+1.0)+(ccaa3*gamma_bb*gcaa*t27720*t27714*t27715)/(gamma_bb*gcaa*t27719*3.0+t27721*t27714*t27715*3.0+gamma_bb*gcaa*t27720*t27714*t27715+1.0)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t27724 = 1.0/pow(rho_b,1.0/3.0);
                double t27725 = c*t27724;
                double t27726 = sqrt(t27725);
                double t27727 = pow(t27725,3.0/2.0);
                double t27728 = c*c;
                double t27729 = 1.0/pow(rho_b,2.0/3.0);
                double t27730 = 1.0/c0p;
                double t27731 = b1p*t27726;
                double t27732 = b3p*t27727;
                double t27733 = b4p*t27728*t27729;
                double t27734 = b2p*c*t27724;
                double t27735 = t27731+t27732+t27733+t27734;
                double t27736 = 1.0/t27735;
                double t27737 = t27730*t27736*(1.0/2.0);
                double t27738 = t27737+1.0;
                double t27739 = log(t27738);
                double t27740 = a1p*c*t27724;
                double t27741 = t27740+1.0;
                double t27742 = gamma_bb*gamma_bb;
                double t27743 = gcaa*gcaa;
                double t27744 = t27742*t27742;
                double t27745 = t27743*t27743;
                double t27746 = 1.0/pow(rho_b,3.2E1/3.0);
                double t27747 = 1.0/pow(rho_b,8.0/3.0);
                double t27748 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27749 = 1.0/pow(rho_b,1.6E1/3.0);
                double t27750 = pow(2.0,1.0/3.0);
                double t27751 = t27750*2.0;
                double t27752 = t27751-2.0;
                double t27753 = two_13*2.0;
                double t27754 = t27753-2.0;
                double t27755 = 1.0/t27754;
                double t27756 = 1.0/c0f;
                double t27757 = b1f*t27726;
                double t27758 = b3f*t27727;
                double t27759 = b4f*t27728*t27729;
                double t27760 = b2f*c*t27724;
                double t27761 = t27760+t27757+t27758+t27759;
                double t27762 = 1.0/t27761;
                double t27763 = t27762*t27756*(1.0/2.0);
                double t27764 = t27763+1.0;
                double t27765 = log(t27764);
                double t27766 = a1f*c*t27724;
                double t27767 = t27766+1.0;
                double t27768 = c0f*t27765*t27767*2.0;
                double t27769 = c0p*t27741*t27739*2.0;
                double t27770 = gamma_bb*gcaa*t27747*4.0;
                double t27771 = gamma_bb*gcaa*t27742*t27743*t27748*4.0;
                double t27772 = t27742*t27743*t27749*6.0;
                double t27773 = t27744*t27745*t27746;
                double t27774 = t27770+t27771+t27772+t27773+1.0;
                double t27775 = 1.0/t27774;
                double t27776 = gamma_bb*gcaa*t27747;
                double t27777 = t27776+1.0;
                double t27778 = 1.0/t27777;
                double t27779 = gamma_bb*gcaa*t27747*3.0;
                double t27780 = gamma_bb*gcaa*t27742*t27743*t27748;
                double t27781 = t27742*t27743*t27749*3.0;
                double t27782 = t27780+t27781+t27779+1.0;
                double t27783 = 1.0/t27782;
                double t27784 = gamma_bb*gcaa*t27747*2.0;
                double t27785 = t27742*t27743*t27749;
                double t27786 = t27784+t27785+1.0;
                double t27787 = 1.0/t27786;
                double t27788 = 1.0/pow(rho_b,1.9E1/3.0);
                double t27789 = 1.0/pow(rho_b,1.1E1/3.0);
                double t27790 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27791 = 1.0/pow(rho_b,3.5E1/3.0);
                double t27792 = 1.0/pow(rho_b,4.0/3.0);
                double t27793 = 1.0/pow(rho_b,5.0/3.0);
                double t27794 = 1.0/sqrt(t27725);
                double t27795 = 1.0/t27738;
                double t27796 = 1.0/(t27735*t27735);
                double t27797 = b4p*t27728*t27793*(2.0/3.0);
                double t27798 = b2p*c*t27792*(1.0/3.0);
                double t27799 = b1p*c*t27792*t27794*(1.0/6.0);
                double t27800 = b3p*c*t27726*t27792*(1.0/2.0);
                double t27801 = t27800+t27797+t27798+t27799;
                double t27802 = t27801*t27741*t27795*t27796;
                double t27803 = ccaa4*t27744*t27745*t27746*t27775;
                double t27804 = ccaa1*gamma_bb*gcaa*t27747*t27778;
                double t27805 = ccaa3*gamma_bb*gcaa*t27742*t27743*t27783*t27748;
                double t27806 = ccaa2*t27742*t27743*t27749*t27787;
                double t27807 = ccaa0+t27803+t27804+t27805+t27806;
                v_rho_b[Q] += scale * (-t27807*(t27769+t27752*t27755*(t27768-c0p*t27741*t27739*2.0))+rho_b*t27807*(-t27802+t27752*t27755*(t27802-(1.0/(t27761*t27761)*t27767*(b2f*c*t27792*(1.0/3.0)+b4f*t27728*t27793*(2.0/3.0)+b1f*c*t27792*t27794*(1.0/6.0)+b3f*c*t27726*t27792*(1.0/2.0)))/t27764+a1f*c*c0f*t27765*t27792*(2.0/3.0)-a1p*c*c0p*t27792*t27739*(2.0/3.0))+a1p*c*c0p*t27792*t27739*(2.0/3.0))+rho_b*(t27769+t27752*t27755*(t27768-t27769))*(ccaa1*gamma_bb*gcaa*t27778*t27789*(8.0/3.0)+ccaa4*t27744*t27745*t27791*t27775*(3.2E1/3.0)+ccaa2*t27742*t27743*t27787*t27788*(1.6E1/3.0)-ccaa1*t27742*t27743*1.0/(t27777*t27777)*t27788*(8.0/3.0)-ccaa2*t27742*t27743*t27749*1.0/(t27786*t27786)*(gamma_bb*gcaa*t27789*(1.6E1/3.0)+t27742*t27743*t27788*(1.6E1/3.0))-ccaa4*t27744*t27745*t27746*1.0/(t27774*t27774)*(gamma_bb*gcaa*t27789*(3.2E1/3.0)+t27744*t27745*t27791*(3.2E1/3.0)+t27742*t27743*t27788*3.2E1+gamma_bb*gcaa*t27742*t27743*t27790*3.2E1)+ccaa3*gamma_bb*gcaa*t27742*t27743*t27790*t27783*8.0-ccaa3*gamma_bb*gcaa*t27742*t27743*1.0/(t27782*t27782)*t27748*(gamma_bb*gcaa*t27789*8.0+t27742*t27743*t27788*1.6E1+gamma_bb*gcaa*t27742*t27743*t27790*8.0)));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t27811 = 1.0/pow(rho_b,1.0/3.0);
                double t27812 = c*t27811;
                double t27813 = sqrt(t27812);
                double t27814 = pow(t27812,3.0/2.0);
                double t27815 = c*c;
                double t27816 = 1.0/pow(rho_b,2.0/3.0);
                double t27817 = 1.0/c0p;
                double t27818 = b1p*t27813;
                double t27819 = b3p*t27814;
                double t27820 = b4p*t27815*t27816;
                double t27821 = b2p*c*t27811;
                double t27822 = t27820+t27821+t27818+t27819;
                double t27823 = 1.0/t27822;
                double t27824 = t27823*t27817*(1.0/2.0);
                double t27825 = t27824+1.0;
                double t27826 = log(t27825);
                double t27827 = a1p*c*t27811;
                double t27828 = t27827+1.0;
                double t27829 = 1.0/pow(rho_b,8.0/3.0);
                double t27830 = gamma_bb*gamma_bb;
                double t27831 = gcaa*gcaa;
                double t27832 = t27831*t27831;
                double t27833 = 1.0/pow(rho_b,3.2E1/3.0);
                double t27834 = 1.0/pow(rho_b,1.6E1/3.0);
                double t27835 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27836 = gamma_bb*gcaa*t27829;
                double t27837 = t27836+1.0;
                double t27838 = gamma_bb*gcaa*t27829*3.0;
                double t27839 = gamma_bb*gcaa*t27830*t27831*t27835;
                double t27840 = t27830*t27831*t27834*3.0;
                double t27841 = t27840+t27838+t27839+1.0;
                double t27842 = t27830*t27830;
                double t27843 = gamma_bb*gcaa*t27829*4.0;
                double t27844 = gamma_bb*gcaa*t27830*t27831*t27835*4.0;
                double t27845 = t27830*t27831*t27834*6.0;
                double t27846 = t27832*t27833*t27842;
                double t27847 = t27843+t27844+t27845+t27846+1.0;
                double t27848 = gamma_bb*gcaa*t27829*2.0;
                double t27849 = t27830*t27831*t27834;
                double t27850 = t27848+t27849+1.0;
                v_gamma_bb[Q] += scale * (-rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t27813+b3f*t27814+b2f*c*t27811+b4f*t27815*t27816))+1.0)*(a1f*c*t27811+1.0)*2.0-c0p*t27826*t27828*2.0))/(two_13*2.0-2.0)+c0p*t27826*t27828*2.0)*((ccaa1*gcaa*t27829)/t27837+(ccaa2*gamma_bb*t27831*t27834*2.0)/t27850-ccaa1*gamma_bb*t27831*t27834*1.0/(t27837*t27837)-ccaa2*t27830*t27831*1.0/(t27850*t27850)*t27834*(gcaa*t27829*2.0+gamma_bb*t27831*t27834*2.0)+(ccaa4*gamma_bb*t27830*t27832*t27833*4.0)/t27847+(ccaa3*gcaa*t27830*t27831*t27835*3.0)/t27841-ccaa4*t27832*t27833*t27842*1.0/(t27847*t27847)*(gcaa*t27829*4.0+gamma_bb*t27831*t27834*1.2E1+gamma_bb*t27830*t27832*t27833*4.0+gcaa*t27830*t27831*t27835*1.2E1)-ccaa3*gamma_bb*gcaa*t27830*t27831*1.0/(t27841*t27841)*t27835*(gcaa*t27829*3.0+gamma_bb*t27831*t27834*6.0+gcaa*t27830*t27831*t27835*3.0)));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t27856 = 1.0/pow(rho_b,1.0/3.0);
                double t27857 = c*t27856;
                double t27858 = sqrt(t27857);
                double t27859 = b1f*t27858;
                double t27860 = pow(t27857,3.0/2.0);
                double t27861 = b3f*t27860;
                double t27862 = c*c;
                double t27863 = 1.0/pow(rho_b,2.0/3.0);
                double t27864 = b4f*t27862*t27863;
                double t27865 = b2f*c*t27856;
                double t27866 = t27861+t27864+t27865+t27859;
                double t27867 = 1.0/pow(rho_b,4.0/3.0);
                double t27868 = b1p*t27858;
                double t27869 = b3p*t27860;
                double t27870 = b4p*t27862*t27863;
                double t27871 = b2p*c*t27856;
                double t27872 = t27870+t27871+t27868+t27869;
                double t27873 = 1.0/pow(rho_b,5.0/3.0);
                double t27874 = 1.0/sqrt(t27857);
                double t27875 = 1.0/c0f;
                double t27876 = 1.0/t27866;
                double t27877 = t27875*t27876*(1.0/2.0);
                double t27878 = t27877+1.0;
                double t27879 = 1.0/c0p;
                double t27880 = 1.0/t27872;
                double t27881 = t27880*t27879*(1.0/2.0);
                double t27882 = t27881+1.0;
                double t27883 = a1p*c*t27856;
                double t27884 = t27883+1.0;
                double t27885 = 1.0/t27882;
                double t27886 = 1.0/(t27872*t27872);
                double t27887 = b4p*t27862*t27873*(2.0/3.0);
                double t27888 = b2p*c*t27867*(1.0/3.0);
                double t27889 = b1p*c*t27874*t27867*(1.0/6.0);
                double t27890 = b3p*c*t27858*t27867*(1.0/2.0);
                double t27891 = t27890+t27887+t27888+t27889;
                double t27892 = t27891*t27884*t27885*t27886;
                double t27893 = log(t27882);
                double t27894 = gamma_bb*gamma_bb;
                double t27895 = gcaa*gcaa;
                double t27896 = t27894*t27894;
                double t27897 = t27895*t27895;
                double t27898 = 1.0/pow(rho_b,3.2E1/3.0);
                double t27899 = 1.0/pow(rho_b,8.0/3.0);
                double t27900 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27901 = 1.0/pow(rho_b,1.6E1/3.0);
                double t27902 = pow(2.0,1.0/3.0);
                double t27903 = t27902*2.0;
                double t27904 = t27903-2.0;
                double t27905 = two_13*2.0;
                double t27906 = t27905-2.0;
                double t27907 = 1.0/t27906;
                double t27908 = log(t27878);
                double t27909 = a1f*c*t27856;
                double t27910 = t27909+1.0;
                double t27911 = gamma_bb*gcaa*t27899*4.0;
                double t27912 = gamma_bb*gcaa*t27900*t27894*t27895*4.0;
                double t27913 = t27901*t27894*t27895*6.0;
                double t27914 = t27896*t27897*t27898;
                double t27915 = t27911+t27912+t27913+t27914+1.0;
                double t27916 = 1.0/t27915;
                double t27917 = gamma_bb*gcaa*t27899;
                double t27918 = t27917+1.0;
                double t27919 = 1.0/t27918;
                double t27920 = gamma_bb*gcaa*t27899*3.0;
                double t27921 = gamma_bb*gcaa*t27900*t27894*t27895;
                double t27922 = t27901*t27894*t27895*3.0;
                double t27923 = t27920+t27921+t27922+1.0;
                double t27924 = 1.0/t27923;
                double t27925 = gamma_bb*gcaa*t27899*2.0;
                double t27926 = t27901*t27894*t27895;
                double t27927 = t27925+t27926+1.0;
                double t27928 = 1.0/t27927;
                double t27929 = 1.0/pow(rho_b,1.9E1/3.0);
                double t27930 = 1.0/pow(rho_b,1.1E1/3.0);
                double t27931 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27932 = 1.0/pow(rho_b,3.5E1/3.0);
                double t27933 = 1.0/t27878;
                double t27934 = 1.0/(t27866*t27866);
                double t27935 = b4f*t27862*t27873*(2.0/3.0);
                double t27936 = b2f*c*t27867*(1.0/3.0);
                double t27937 = b1f*c*t27874*t27867*(1.0/6.0);
                double t27938 = b3f*c*t27858*t27867*(1.0/2.0);
                double t27939 = t27935+t27936+t27937+t27938;
                double t27940 = a1f*c*c0f*t27908*t27867*(2.0/3.0);
                double t27941 = a1p*c*c0p*t27893*t27867*(2.0/3.0);
                double t27942 = ccaa4*t27932*t27916*t27896*t27897*(3.2E1/3.0);
                double t27943 = ccaa1*gamma_bb*gcaa*t27930*t27919*(8.0/3.0);
                double t27944 = ccaa3*gamma_bb*gcaa*t27931*t27924*t27894*t27895*8.0;
                double t27945 = ccaa2*t27928*t27929*t27894*t27895*(1.6E1/3.0);
                double t27946 = 1.0/(t27918*t27918);
                double t27947 = gamma_bb*gcaa*t27930*8.0;
                double t27948 = gamma_bb*gcaa*t27931*t27894*t27895*8.0;
                double t27949 = t27929*t27894*t27895*1.6E1;
                double t27950 = t27947+t27948+t27949;
                double t27951 = 1.0/(t27923*t27923);
                double t27952 = gamma_bb*gcaa*t27930*(3.2E1/3.0);
                double t27953 = gamma_bb*gcaa*t27931*t27894*t27895*3.2E1;
                double t27954 = t27929*t27894*t27895*3.2E1;
                double t27955 = t27932*t27896*t27897*(3.2E1/3.0);
                double t27956 = t27952+t27953+t27954+t27955;
                double t27957 = 1.0/(t27915*t27915);
                double t27958 = gamma_bb*gcaa*t27930*(1.6E1/3.0);
                double t27959 = t27929*t27894*t27895*(1.6E1/3.0);
                double t27960 = t27958+t27959;
                double t27961 = 1.0/(t27927*t27927);
                double t27962 = t27942+t27943+t27944+t27945-ccaa1*t27946*t27929*t27894*t27895*(8.0/3.0)-ccaa2*t27901*t27960*t27961*t27894*t27895-ccaa4*t27956*t27957*t27896*t27897*t27898-ccaa3*gamma_bb*gcaa*t27900*t27950*t27951*t27894*t27895;
                double t27963 = c0f*t27910*t27908*2.0;
                double t27964 = c0p*t27884*t27893*2.0;
                double t27965 = 1.0/pow(rho_b,1.0E1);
                double t27966 = 1.0/pow(rho_b,2.2E1/3.0);
                double t27967 = 1.0/pow(rho_b,1.4E1/3.0);
                double t27968 = 1.0/pow(rho_b,3.8E1/3.0);
                double t27969 = ccaa4*t27916*t27896*t27897*t27898;
                double t27970 = ccaa1*gamma_bb*gcaa*t27919*t27899;
                double t27971 = ccaa3*gamma_bb*gcaa*t27900*t27924*t27894*t27895;
                double t27972 = ccaa2*t27901*t27928*t27894*t27895;
                double t27973 = ccaa0+t27970+t27971+t27972+t27969;
                double t27974 = 1.0/pow(rho_b,7.0/3.0);
                double t27975 = 1.0/pow(t27857,3.0/2.0);
                double t27976 = t27939*t27939;
                double t27977 = t27891*t27891;
                double t27978 = 1.0/(t27872*t27872*t27872);
                double t27979 = t27884*t27885*t27977*t27978*2.0;
                double t27980 = b4p*t27862*t27899*(1.0E1/9.0);
                double t27981 = b2p*c*t27974*(4.0/9.0);
                double t27982 = b3p*t27862*t27874*t27899*(1.0/1.2E1);
                double t27983 = b1p*c*t27874*t27974*(2.0/9.0);
                double t27984 = b3p*c*t27974*t27858*(2.0/3.0);
                double t27985 = t27980+t27981+t27982+t27983+t27984-b1p*t27862*t27975*t27899*(1.0/3.6E1);
                double t27986 = 1.0/(t27882*t27882);
                double t27987 = 1.0/(t27872*t27872*t27872*t27872);
                double t27988 = a1p*c*c0p*t27893*t27974*(8.0/9.0);
                v_rho_b_rho_b[Q] += scale * (t27962*(t27964+t27904*t27907*(t27963-c0p*t27884*t27893*2.0))*2.0+t27973*(t27941-t27892+t27904*t27907*(t27940+t27892-t27910*t27933*t27934*t27939-a1p*c*c0p*t27893*t27867*(2.0/3.0)))*2.0+rho_b*t27973*(-t27979-t27988+t27904*t27907*(t27979+t27988-t27884*t27885*t27886*t27985-t27910*t27933*1.0/(t27866*t27866*t27866)*t27976*2.0+t27910*t27933*t27934*(b2f*c*t27974*(4.0/9.0)+b4f*t27862*t27899*(1.0E1/9.0)+b1f*c*t27874*t27974*(2.0/9.0)+b3f*c*t27974*t27858*(2.0/3.0)-b1f*t27862*t27975*t27899*(1.0/3.6E1)+b3f*t27862*t27874*t27899*(1.0/1.2E1))+t27910*1.0/(t27866*t27866*t27866*t27866)*t27875*t27976*1.0/(t27878*t27878)*(1.0/2.0)-a1f*c*c0f*t27908*t27974*(8.0/9.0)-t27884*t27977*t27986*t27879*t27987*(1.0/2.0)+a1f*c*t27933*t27934*t27867*t27939*(2.0/3.0)-a1p*c*t27891*t27867*t27885*t27886*(2.0/3.0))+t27884*t27885*t27886*t27985+t27884*t27977*t27986*t27879*t27987*(1.0/2.0)+a1p*c*t27891*t27867*t27885*t27886*(2.0/3.0))-rho_b*t27962*(t27941-t27892+t27904*t27907*(t27940-t27941+t27892-t27910*t27933*t27934*t27939))*2.0-rho_b*(t27964+t27904*t27907*(t27963-t27964))*(ccaa1*gamma_bb*gcaa*t27919*t27967*(8.8E1/9.0)-ccaa1*t27946*t27894*t27966*t27895*2.4E1+ccaa2*t27928*t27894*t27966*t27895*(3.04E2/9.0)+ccaa4*t27916*t27896*t27968*t27897*(1.12E3/9.0)-ccaa2*t27960*t27961*t27929*t27894*t27895*(3.2E1/3.0)-ccaa4*t27932*t27956*t27957*t27896*t27897*(6.4E1/3.0)-ccaa2*t27901*t27961*t27894*t27895*(gamma_bb*gcaa*t27967*(1.76E2/9.0)+t27894*t27966*t27895*(3.04E2/9.0))-ccaa4*t27957*t27896*t27897*t27898*(gamma_bb*gcaa*t27967*(3.52E2/9.0)+t27894*t27966*t27895*(6.08E2/3.0)+t27896*t27968*t27897*(1.12E3/9.0)+gamma_bb*gcaa*t27965*t27894*t27895*2.88E2)+ccaa2*t27901*(t27960*t27960)*1.0/(t27927*t27927*t27927)*t27894*t27895*2.0+ccaa4*1.0/(t27915*t27915*t27915)*(t27956*t27956)*t27896*t27897*t27898*2.0+ccaa3*gamma_bb*gcaa*t27924*t27965*t27894*t27895*7.2E1+ccaa1*gamma_bb*gcaa*1.0/(t27918*t27918*t27918)*t27965*t27894*t27895*(1.28E2/9.0)+ccaa3*gamma_bb*gcaa*t27900*1.0/(t27923*t27923*t27923)*(t27950*t27950)*t27894*t27895*2.0-ccaa3*gamma_bb*gcaa*t27900*t27951*t27894*t27895*(gamma_bb*gcaa*t27967*(8.8E1/3.0)+t27894*t27966*t27895*(3.04E2/3.0)+gamma_bb*gcaa*t27965*t27894*t27895*7.2E1)-ccaa3*gamma_bb*gcaa*t27931*t27950*t27951*t27894*t27895*1.6E1));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t28113 = 1.0/pow(rho_b,1.0/3.0);
                double t28114 = c*t28113;
                double t28115 = sqrt(t28114);
                double t28116 = pow(t28114,3.0/2.0);
                double t28117 = c*c;
                double t28118 = 1.0/pow(rho_b,2.0/3.0);
                double t28119 = 1.0/c0p;
                double t28120 = b1p*t28115;
                double t28121 = b3p*t28116;
                double t28122 = b4p*t28117*t28118;
                double t28123 = b2p*c*t28113;
                double t28124 = t28120+t28121+t28122+t28123;
                double t28125 = 1.0/t28124;
                double t28126 = t28125*t28119*(1.0/2.0);
                double t28127 = t28126+1.0;
                double t28128 = log(t28127);
                double t28129 = a1p*c*t28113;
                double t28130 = t28129+1.0;
                double t28131 = gcaa*gcaa;
                double t28132 = 1.0/pow(rho_b,1.6E1/3.0);
                double t28133 = 1.0/pow(rho_b,8.0/3.0);
                double t28134 = gamma_bb*gamma_bb;
                double t28135 = t28131*t28131;
                double t28136 = 1.0/pow(rho_b,3.2E1/3.0);
                double t28137 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t28138 = gamma_bb*gcaa*t28133;
                double t28139 = t28138+1.0;
                double t28140 = gamma_bb*gcaa*t28133*2.0;
                double t28141 = t28131*t28132*t28134;
                double t28142 = t28140+t28141+1.0;
                double t28143 = gamma_bb*gcaa*t28133*3.0;
                double t28144 = gamma_bb*gcaa*t28131*t28134*t28137;
                double t28145 = t28131*t28132*t28134*3.0;
                double t28146 = t28143+t28144+t28145+1.0;
                double t28147 = t28134*t28134;
                double t28163 = gcaa*t28133*4.0;
                double t28164 = gamma_bb*t28131*t28132*1.2E1;
                double t28165 = gcaa*t28131*t28134*t28137*1.2E1;
                double t28166 = gamma_bb*t28134*t28135*t28136*4.0;
                double t28148 = t28163+t28164+t28165+t28166;
                double t28149 = gamma_bb*gcaa*t28133*4.0;
                double t28150 = gamma_bb*gcaa*t28131*t28134*t28137*4.0;
                double t28151 = t28131*t28132*t28134*6.0;
                double t28152 = t28135*t28136*t28147;
                double t28153 = t28150+t28151+t28152+t28149+1.0;
                double t28156 = gcaa*t28133*2.0;
                double t28157 = gamma_bb*t28131*t28132*2.0;
                double t28154 = t28156+t28157;
                double t28155 = 1.0/(t28146*t28146);
                double t28158 = 1.0/(t28142*t28142);
                double t28159 = gcaa*t28133*3.0;
                double t28160 = gamma_bb*t28131*t28132*6.0;
                double t28161 = gcaa*t28131*t28134*t28137*3.0;
                double t28162 = t28160+t28161+t28159;
                double t28167 = 1.0/(t28153*t28153);
                v_gamma_bb_gamma_bb[Q] += scale * (-rho_b*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t28115+b3f*t28116+b2f*c*t28113+b4f*t28117*t28118))+1.0)*(a1f*c*t28113+1.0)*2.0-c0p*t28130*t28128*2.0))/(two_13*2.0-2.0)+c0p*t28130*t28128*2.0)*((ccaa2*t28131*t28132*2.0)/t28142-ccaa1*t28131*t28132*1.0/(t28139*t28139)*2.0-ccaa2*t28134*t28135*t28136*t28158*2.0+(ccaa4*t28134*t28135*t28136*1.2E1)/t28153-ccaa4*t28135*t28136*t28147*t28167*(t28131*t28132*1.2E1+t28134*t28135*t28136*1.2E1+gamma_bb*gcaa*t28131*t28137*2.4E1)+(ccaa3*gamma_bb*gcaa*t28131*t28137*6.0)/t28146+ccaa1*gamma_bb*gcaa*t28131*t28137*1.0/(t28139*t28139*t28139)*2.0+ccaa2*t28131*t28132*1.0/(t28142*t28142*t28142)*t28134*(t28154*t28154)*2.0+ccaa4*t28135*1.0/(t28153*t28153*t28153)*t28136*t28147*(t28148*t28148)*2.0-ccaa2*gamma_bb*t28131*t28132*t28154*t28158*4.0-ccaa4*gamma_bb*t28134*t28135*t28136*t28148*t28167*8.0-ccaa3*gcaa*t28131*t28134*t28162*t28137*t28155*6.0-ccaa3*gamma_bb*gcaa*t28131*t28134*t28137*t28155*(t28131*t28132*6.0+gamma_bb*gcaa*t28131*t28137*6.0)+ccaa3*gamma_bb*gcaa*t28131*t28134*(t28162*t28162)*t28137*1.0/(t28146*t28146*t28146)*2.0));
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t27995 = 1.0/pow(rho_b,1.0/3.0);
                double t27996 = c*t27995;
                double t27997 = sqrt(t27996);
                double t27998 = pow(t27996,3.0/2.0);
                double t27999 = c*c;
                double t28000 = 1.0/pow(rho_b,2.0/3.0);
                double t28001 = 1.0/c0p;
                double t28002 = b1p*t27997;
                double t28003 = b3p*t27998;
                double t28004 = b4p*t27999*t28000;
                double t28005 = b2p*c*t27995;
                double t28006 = t28002+t28003+t28004+t28005;
                double t28007 = 1.0/t28006;
                double t28008 = t28001*t28007*(1.0/2.0);
                double t28009 = t28008+1.0;
                double t28010 = log(t28009);
                double t28011 = a1p*c*t27995;
                double t28012 = t28011+1.0;
                double t28013 = 1.0/pow(rho_b,8.0/3.0);
                double t28014 = gamma_bb*gamma_bb;
                double t28015 = gcaa*gcaa;
                double t28016 = t28015*t28015;
                double t28017 = 1.0/pow(rho_b,3.2E1/3.0);
                double t28018 = 1.0/pow(rho_b,1.6E1/3.0);
                double t28019 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t28020 = gamma_bb*gcaa*t28013;
                double t28021 = t28020+1.0;
                double t28022 = gamma_bb*gcaa*t28013*3.0;
                double t28023 = gamma_bb*gcaa*t28014*t28015*t28019;
                double t28024 = t28014*t28015*t28018*3.0;
                double t28025 = t28022+t28023+t28024+1.0;
                double t28026 = t28014*t28014;
                double t28027 = gamma_bb*gcaa*t28013*4.0;
                double t28028 = gamma_bb*gcaa*t28014*t28015*t28019*4.0;
                double t28029 = t28014*t28015*t28018*6.0;
                double t28030 = t28016*t28017*t28026;
                double t28031 = t28030+t28027+t28028+t28029+1.0;
                double t28032 = gamma_bb*gcaa*t28013*2.0;
                double t28033 = t28014*t28015*t28018;
                double t28034 = t28032+t28033+1.0;
                double t28035 = pow(2.0,1.0/3.0);
                double t28036 = t28035*2.0;
                double t28037 = t28036-2.0;
                double t28038 = two_13*2.0;
                double t28039 = t28038-2.0;
                double t28040 = 1.0/t28039;
                double t28041 = 1.0/c0f;
                double t28042 = b1f*t27997;
                double t28043 = b3f*t27998;
                double t28044 = b4f*t27999*t28000;
                double t28045 = b2f*c*t27995;
                double t28046 = t28042+t28043+t28044+t28045;
                double t28047 = 1.0/t28046;
                double t28048 = t28041*t28047*(1.0/2.0);
                double t28049 = t28048+1.0;
                double t28050 = log(t28049);
                double t28051 = a1f*c*t27995;
                double t28052 = t28051+1.0;
                double t28053 = c0f*t28050*t28052*2.0;
                double t28054 = c0p*t28010*t28012*2.0;
                double t28055 = 1.0/t28021;
                double t28056 = 1.0/t28031;
                double t28057 = 1.0/t28034;
                double t28058 = 1.0/t28025;
                double t28059 = 1.0/pow(rho_b,1.9E1/3.0);
                double t28060 = 1.0/(t28021*t28021);
                double t28061 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t28062 = 1.0/pow(rho_b,1.1E1/3.0);
                double t28063 = 1.0/(t28025*t28025);
                double t28064 = 1.0/(t28034*t28034);
                double t28065 = gcaa*t28013*3.0;
                double t28066 = gamma_bb*t28015*t28018*6.0;
                double t28067 = gcaa*t28014*t28015*t28019*3.0;
                double t28068 = t28065+t28066+t28067;
                double t28069 = 1.0/pow(rho_b,3.5E1/3.0);
                double t28070 = 1.0/(t28031*t28031);
                double t28071 = gcaa*t28013*4.0;
                double t28072 = gamma_bb*t28015*t28018*1.2E1;
                double t28073 = gcaa*t28014*t28015*t28019*1.2E1;
                double t28074 = gamma_bb*t28014*t28016*t28017*4.0;
                double t28075 = t28071+t28072+t28073+t28074;
                double t28076 = gcaa*t28013*2.0;
                double t28077 = gamma_bb*t28015*t28018*2.0;
                double t28078 = t28076+t28077;
                double t28079 = gamma_bb*gcaa*t28062*(1.6E1/3.0);
                double t28080 = t28014*t28015*t28059*(1.6E1/3.0);
                double t28081 = t28080+t28079;
                double t28082 = gamma_bb*gcaa*t28062*8.0;
                double t28083 = gamma_bb*gcaa*t28014*t28015*t28061*8.0;
                double t28084 = t28014*t28015*t28059*1.6E1;
                double t28085 = t28082+t28083+t28084;
                double t28086 = gamma_bb*gcaa*t28062*(3.2E1/3.0);
                double t28087 = gamma_bb*gcaa*t28014*t28015*t28061*3.2E1;
                double t28088 = t28014*t28015*t28059*3.2E1;
                double t28089 = t28016*t28026*t28069*(3.2E1/3.0);
                double t28090 = t28086+t28087+t28088+t28089;
                double t28091 = 1.0/pow(rho_b,4.0/3.0);
                double t28092 = 1.0/pow(rho_b,5.0/3.0);
                double t28093 = 1.0/sqrt(t27996);
                double t28094 = 1.0/t28009;
                double t28095 = 1.0/(t28006*t28006);
                double t28096 = b4p*t27999*t28092*(2.0/3.0);
                double t28097 = b2p*c*t28091*(1.0/3.0);
                double t28098 = b1p*c*t28091*t28093*(1.0/6.0);
                double t28099 = b3p*c*t27997*t28091*(1.0/2.0);
                double t28100 = t28096+t28097+t28098+t28099;
                double t28101 = t28100*t28012*t28094*t28095;
                double t28102 = ccaa1*gcaa*t28013*t28055;
                double t28103 = ccaa4*gamma_bb*t28014*t28016*t28017*t28056*4.0;
                double t28104 = ccaa2*gamma_bb*t28015*t28018*t28057*2.0;
                double t28105 = ccaa3*gcaa*t28014*t28015*t28019*t28058*3.0;
                double t28106 = t28102+t28103+t28104+t28105-ccaa1*gamma_bb*t28015*t28060*t28018-ccaa4*t28016*t28070*t28017*t28026*t28075-ccaa2*t28014*t28015*t28018*t28064*t28078-ccaa3*gamma_bb*gcaa*t28014*t28015*t28063*t28019*t28068;
                v_rho_b_gamma_bb[Q] += scale * (-t28106*(t28054+t28040*t28037*(t28053-c0p*t28010*t28012*2.0))+rho_b*t28106*(-t28101+t28040*t28037*(t28101-(t28052*1.0/(t28046*t28046)*(b2f*c*t28091*(1.0/3.0)+b4f*t27999*t28092*(2.0/3.0)+b1f*c*t28091*t28093*(1.0/6.0)+b3f*c*t27997*t28091*(1.0/2.0)))/t28049+a1f*c*c0f*t28050*t28091*(2.0/3.0)-a1p*c*c0p*t28010*t28091*(2.0/3.0))+a1p*c*c0p*t28010*t28091*(2.0/3.0))-rho_b*(t28054+t28040*t28037*(t28053-t28054))*(ccaa1*gcaa*t28062*t28055*(-8.0/3.0)+ccaa1*gamma_bb*t28015*t28060*t28059*8.0-ccaa2*gamma_bb*t28015*t28057*t28059*(3.2E1/3.0)+ccaa2*t28014*t28015*t28064*t28059*t28078*(1.6E1/3.0)+ccaa4*t28016*t28070*t28026*t28075*t28069*(3.2E1/3.0)+ccaa4*t28016*t28070*t28017*t28026*(gcaa*t28062*(3.2E1/3.0)+gamma_bb*t28015*t28059*6.4E1+gamma_bb*t28014*t28016*t28069*(1.28E2/3.0)+gcaa*t28014*t28015*t28061*9.6E1)-ccaa1*gcaa*1.0/(t28021*t28021*t28021)*t28014*t28015*t28061*(1.6E1/3.0)+ccaa2*t28014*t28015*t28018*t28064*(gcaa*t28062*(1.6E1/3.0)+gamma_bb*t28015*t28059*(3.2E1/3.0))+ccaa2*gamma_bb*t28015*t28018*t28081*t28064*2.0-ccaa4*gamma_bb*t28014*t28016*t28056*t28069*(1.28E2/3.0)-ccaa3*gcaa*t28014*t28015*t28061*t28058*2.4E1+ccaa4*gamma_bb*t28014*t28016*t28070*t28017*t28090*4.0+ccaa3*gcaa*t28014*t28015*t28063*t28019*t28085*3.0-ccaa4*1.0/(t28031*t28031*t28031)*t28016*t28017*t28026*t28090*t28075*2.0-ccaa2*t28014*t28015*1.0/(t28034*t28034*t28034)*t28018*t28081*t28078*2.0+ccaa3*gamma_bb*gcaa*t28014*t28015*t28063*t28019*(gcaa*t28062*8.0+gamma_bb*t28015*t28059*3.2E1+gcaa*t28014*t28015*t28061*2.4E1)+ccaa3*gamma_bb*gcaa*t28014*t28015*t28061*t28063*t28068*8.0-ccaa3*gamma_bb*gcaa*t28014*t28015*1.0/(t28025*t28025*t28025)*t28019*t28085*t28068*2.0));
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t28182 = 1.0/pow(rho_a,1.0/3.0);
                double t28183 = c*t28182;
                double t28184 = sqrt(t28183);
                double t28185 = pow(t28183,3.0/2.0);
                double t28186 = c*c;
                double t28187 = 1.0/pow(rho_a,2.0/3.0);
                double t28188 = 1.0/c0p;
                double t28189 = b1p*t28184;
                double t28190 = b3p*t28185;
                double t28191 = b4p*t28186*t28187;
                double t28192 = b2p*c*t28182;
                double t28193 = t28190+t28191+t28192+t28189;
                double t28194 = 1.0/t28193;
                double t28195 = t28194*t28188*(1.0/2.0);
                double t28196 = t28195+1.0;
                double t28197 = log(t28196);
                double t28198 = a1p*c*t28182;
                double t28199 = t28198+1.0;
                double t28200 = gamma_aa*gamma_aa;
                double t28201 = gcaa*gcaa;
                double t28202 = t28200*t28200;
                double t28203 = t28201*t28201;
                double t28204 = 1.0/pow(rho_a,3.2E1/3.0);
                double t28205 = 1.0/pow(rho_a,8.0/3.0);
                double t28206 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28207 = 1.0/pow(rho_a,1.6E1/3.0);
                v[Q] += scale * (-rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t28184+b3f*t28185+b2f*c*t28182+b4f*t28186*t28187))+1.0)*(a1f*c*t28182+1.0)*2.0-c0p*t28197*t28199*2.0))/(two_13*2.0-2.0)+c0p*t28197*t28199*2.0)*(ccaa0+(ccaa2*t28200*t28201*t28207)/(gamma_aa*gcaa*t28205*2.0+t28200*t28201*t28207+1.0)+(ccaa1*gamma_aa*gcaa*t28205)/(gamma_aa*gcaa*t28205+1.0)+(ccaa4*t28202*t28203*t28204)/(gamma_aa*gcaa*t28205*4.0+t28200*t28201*t28207*6.0+t28202*t28203*t28204+gamma_aa*gcaa*t28200*t28201*t28206*4.0+1.0)+(ccaa3*gamma_aa*gcaa*t28200*t28201*t28206)/(gamma_aa*gcaa*t28205*3.0+t28200*t28201*t28207*3.0+gamma_aa*gcaa*t28200*t28201*t28206+1.0)));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t28209 = 1.0/pow(rho_a,1.0/3.0);
                double t28210 = c*t28209;
                double t28211 = sqrt(t28210);
                double t28212 = pow(t28210,3.0/2.0);
                double t28213 = c*c;
                double t28214 = 1.0/pow(rho_a,2.0/3.0);
                double t28215 = 1.0/c0p;
                double t28216 = b1p*t28211;
                double t28217 = b3p*t28212;
                double t28218 = b4p*t28213*t28214;
                double t28219 = b2p*c*t28209;
                double t28220 = t28216+t28217+t28218+t28219;
                double t28221 = 1.0/t28220;
                double t28222 = t28221*t28215*(1.0/2.0);
                double t28223 = t28222+1.0;
                double t28224 = log(t28223);
                double t28225 = a1p*c*t28209;
                double t28226 = t28225+1.0;
                double t28227 = gamma_aa*gamma_aa;
                double t28228 = gcaa*gcaa;
                double t28229 = t28227*t28227;
                double t28230 = t28228*t28228;
                double t28231 = 1.0/pow(rho_a,3.2E1/3.0);
                double t28232 = 1.0/pow(rho_a,8.0/3.0);
                double t28233 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28234 = 1.0/pow(rho_a,1.6E1/3.0);
                double t28235 = pow(2.0,1.0/3.0);
                double t28236 = t28235*2.0;
                double t28237 = t28236-2.0;
                double t28238 = two_13*2.0;
                double t28239 = t28238-2.0;
                double t28240 = 1.0/t28239;
                double t28241 = 1.0/c0f;
                double t28242 = b1f*t28211;
                double t28243 = b3f*t28212;
                double t28244 = b4f*t28213*t28214;
                double t28245 = b2f*c*t28209;
                double t28246 = t28242+t28243+t28244+t28245;
                double t28247 = 1.0/t28246;
                double t28248 = t28241*t28247*(1.0/2.0);
                double t28249 = t28248+1.0;
                double t28250 = log(t28249);
                double t28251 = a1f*c*t28209;
                double t28252 = t28251+1.0;
                double t28253 = c0f*t28250*t28252*2.0;
                double t28254 = c0p*t28224*t28226*2.0;
                double t28255 = gamma_aa*gcaa*t28232*4.0;
                double t28256 = gamma_aa*gcaa*t28233*t28227*t28228*4.0;
                double t28257 = t28234*t28227*t28228*6.0;
                double t28258 = t28230*t28231*t28229;
                double t28259 = t28255+t28256+t28257+t28258+1.0;
                double t28260 = 1.0/t28259;
                double t28261 = gamma_aa*gcaa*t28232;
                double t28262 = t28261+1.0;
                double t28263 = 1.0/t28262;
                double t28264 = gamma_aa*gcaa*t28232*3.0;
                double t28265 = gamma_aa*gcaa*t28233*t28227*t28228;
                double t28266 = t28234*t28227*t28228*3.0;
                double t28267 = t28264+t28265+t28266+1.0;
                double t28268 = 1.0/t28267;
                double t28269 = gamma_aa*gcaa*t28232*2.0;
                double t28270 = t28234*t28227*t28228;
                double t28271 = t28270+t28269+1.0;
                double t28272 = 1.0/t28271;
                double t28273 = 1.0/pow(rho_a,1.9E1/3.0);
                double t28274 = 1.0/pow(rho_a,1.1E1/3.0);
                double t28275 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28276 = 1.0/pow(rho_a,3.5E1/3.0);
                double t28277 = 1.0/pow(rho_a,4.0/3.0);
                double t28278 = 1.0/pow(rho_a,5.0/3.0);
                double t28279 = 1.0/sqrt(t28210);
                double t28280 = 1.0/t28223;
                double t28281 = 1.0/(t28220*t28220);
                double t28282 = b4p*t28213*t28278*(2.0/3.0);
                double t28283 = b2p*c*t28277*(1.0/3.0);
                double t28284 = b1p*c*t28277*t28279*(1.0/6.0);
                double t28285 = b3p*c*t28211*t28277*(1.0/2.0);
                double t28286 = t28282+t28283+t28284+t28285;
                double t28287 = t28226*t28280*t28281*t28286;
                double t28288 = ccaa4*t28230*t28231*t28260*t28229;
                double t28289 = ccaa1*gamma_aa*gcaa*t28232*t28263;
                double t28290 = ccaa3*gamma_aa*gcaa*t28233*t28227*t28228*t28268;
                double t28291 = ccaa2*t28234*t28227*t28272*t28228;
                double t28292 = ccaa0+t28290+t28291+t28288+t28289;
                v_rho_a[Q] += scale * (-t28292*(t28254+t28240*t28237*(t28253-c0p*t28224*t28226*2.0))+rho_a*t28292*(-t28287+t28240*t28237*(t28287-(t28252*1.0/(t28246*t28246)*(b2f*c*t28277*(1.0/3.0)+b4f*t28213*t28278*(2.0/3.0)+b1f*c*t28277*t28279*(1.0/6.0)+b3f*c*t28211*t28277*(1.0/2.0)))/t28249+a1f*c*c0f*t28250*t28277*(2.0/3.0)-a1p*c*c0p*t28224*t28277*(2.0/3.0))+a1p*c*c0p*t28224*t28277*(2.0/3.0))+rho_a*(t28254+t28240*t28237*(t28253-t28254))*(ccaa1*gamma_aa*gcaa*t28263*t28274*(8.0/3.0)+ccaa4*t28230*t28260*t28229*t28276*(3.2E1/3.0)+ccaa2*t28227*t28272*t28228*t28273*(1.6E1/3.0)-ccaa1*1.0/(t28262*t28262)*t28227*t28228*t28273*(8.0/3.0)-ccaa2*t28234*1.0/(t28271*t28271)*t28227*t28228*(gamma_aa*gcaa*t28274*(1.6E1/3.0)+t28227*t28228*t28273*(1.6E1/3.0))-ccaa4*t28230*t28231*t28229*1.0/(t28259*t28259)*(gamma_aa*gcaa*t28274*(3.2E1/3.0)+t28230*t28229*t28276*(3.2E1/3.0)+t28227*t28228*t28273*3.2E1+gamma_aa*gcaa*t28227*t28228*t28275*3.2E1)+ccaa3*gamma_aa*gcaa*t28227*t28228*t28275*t28268*8.0-ccaa3*gamma_aa*gcaa*t28233*t28227*t28228*1.0/(t28267*t28267)*(gamma_aa*gcaa*t28274*8.0+t28227*t28228*t28273*1.6E1+gamma_aa*gcaa*t28227*t28228*t28275*8.0)));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t28295 = 1.0/pow(rho_a,1.0/3.0);
                double t28296 = c*t28295;
                double t28297 = sqrt(t28296);
                double t28298 = pow(t28296,3.0/2.0);
                double t28299 = c*c;
                double t28300 = 1.0/pow(rho_a,2.0/3.0);
                double t28301 = 1.0/c0p;
                double t28302 = b1p*t28297;
                double t28303 = b3p*t28298;
                double t28304 = b4p*t28300*t28299;
                double t28305 = b2p*c*t28295;
                double t28306 = t28302+t28303+t28304+t28305;
                double t28307 = 1.0/t28306;
                double t28308 = t28301*t28307*(1.0/2.0);
                double t28309 = t28308+1.0;
                double t28310 = log(t28309);
                double t28311 = a1p*c*t28295;
                double t28312 = t28311+1.0;
                double t28313 = 1.0/pow(rho_a,8.0/3.0);
                double t28314 = gamma_aa*gamma_aa;
                double t28315 = gcaa*gcaa;
                double t28316 = t28315*t28315;
                double t28317 = 1.0/pow(rho_a,3.2E1/3.0);
                double t28318 = 1.0/pow(rho_a,1.6E1/3.0);
                double t28319 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28320 = gamma_aa*gcaa*t28313;
                double t28321 = t28320+1.0;
                double t28322 = gamma_aa*gcaa*t28313*3.0;
                double t28323 = gamma_aa*gcaa*t28314*t28315*t28319;
                double t28324 = t28314*t28315*t28318*3.0;
                double t28325 = t28322+t28323+t28324+1.0;
                double t28326 = t28314*t28314;
                double t28327 = gamma_aa*gcaa*t28313*4.0;
                double t28328 = gamma_aa*gcaa*t28314*t28315*t28319*4.0;
                double t28329 = t28314*t28315*t28318*6.0;
                double t28330 = t28316*t28317*t28326;
                double t28331 = t28330+t28327+t28328+t28329+1.0;
                double t28332 = gamma_aa*gcaa*t28313*2.0;
                double t28333 = t28314*t28315*t28318;
                double t28334 = t28332+t28333+1.0;
                v_gamma_aa[Q] += scale * (-rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t28297+b3f*t28298+b2f*c*t28295+b4f*t28300*t28299))+1.0)*(a1f*c*t28295+1.0)*2.0-c0p*t28310*t28312*2.0))/(two_13*2.0-2.0)+c0p*t28310*t28312*2.0)*((ccaa1*gcaa*t28313)/t28321-ccaa1*gamma_aa*1.0/(t28321*t28321)*t28315*t28318+(ccaa2*gamma_aa*t28315*t28318*2.0)/t28334-ccaa2*t28314*t28315*1.0/(t28334*t28334)*t28318*(gcaa*t28313*2.0+gamma_aa*t28315*t28318*2.0)+(ccaa4*gamma_aa*t28314*t28316*t28317*4.0)/t28331+(ccaa3*gcaa*t28314*t28315*t28319*3.0)/t28325-ccaa4*1.0/(t28331*t28331)*t28316*t28317*t28326*(gcaa*t28313*4.0+gamma_aa*t28315*t28318*1.2E1+gamma_aa*t28314*t28316*t28317*4.0+gcaa*t28314*t28315*t28319*1.2E1)-ccaa3*gamma_aa*gcaa*t28314*t28315*1.0/(t28325*t28325)*t28319*(gcaa*t28313*3.0+gamma_aa*t28315*t28318*6.0+gcaa*t28314*t28315*t28319*3.0)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t28340 = 1.0/pow(rho_a,1.0/3.0);
                double t28341 = c*t28340;
                double t28342 = sqrt(t28341);
                double t28343 = b1f*t28342;
                double t28344 = pow(t28341,3.0/2.0);
                double t28345 = b3f*t28344;
                double t28346 = c*c;
                double t28347 = 1.0/pow(rho_a,2.0/3.0);
                double t28348 = b4f*t28346*t28347;
                double t28349 = b2f*c*t28340;
                double t28350 = t28343+t28345+t28348+t28349;
                double t28351 = 1.0/pow(rho_a,4.0/3.0);
                double t28352 = b1p*t28342;
                double t28353 = b3p*t28344;
                double t28354 = b4p*t28346*t28347;
                double t28355 = b2p*c*t28340;
                double t28356 = t28352+t28353+t28354+t28355;
                double t28357 = 1.0/pow(rho_a,5.0/3.0);
                double t28358 = 1.0/sqrt(t28341);
                double t28359 = 1.0/c0f;
                double t28360 = 1.0/t28350;
                double t28361 = t28360*t28359*(1.0/2.0);
                double t28362 = t28361+1.0;
                double t28363 = 1.0/c0p;
                double t28364 = 1.0/t28356;
                double t28365 = t28363*t28364*(1.0/2.0);
                double t28366 = t28365+1.0;
                double t28367 = a1p*c*t28340;
                double t28368 = t28367+1.0;
                double t28369 = 1.0/t28366;
                double t28370 = 1.0/(t28356*t28356);
                double t28371 = b4p*t28346*t28357*(2.0/3.0);
                double t28372 = b2p*c*t28351*(1.0/3.0);
                double t28373 = b1p*c*t28351*t28358*(1.0/6.0);
                double t28374 = b3p*c*t28342*t28351*(1.0/2.0);
                double t28375 = t28371+t28372+t28373+t28374;
                double t28376 = t28370*t28375*t28368*t28369;
                double t28377 = log(t28366);
                double t28378 = gamma_aa*gamma_aa;
                double t28379 = gcaa*gcaa;
                double t28380 = t28378*t28378;
                double t28381 = t28379*t28379;
                double t28382 = 1.0/pow(rho_a,3.2E1/3.0);
                double t28383 = 1.0/pow(rho_a,8.0/3.0);
                double t28384 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28385 = 1.0/pow(rho_a,1.6E1/3.0);
                double t28386 = pow(2.0,1.0/3.0);
                double t28387 = t28386*2.0;
                double t28388 = t28387-2.0;
                double t28389 = two_13*2.0;
                double t28390 = t28389-2.0;
                double t28391 = 1.0/t28390;
                double t28392 = log(t28362);
                double t28393 = a1f*c*t28340;
                double t28394 = t28393+1.0;
                double t28395 = gamma_aa*gcaa*t28383*4.0;
                double t28396 = gamma_aa*gcaa*t28384*t28378*t28379*4.0;
                double t28397 = t28385*t28378*t28379*6.0;
                double t28398 = t28380*t28381*t28382;
                double t28399 = t28395+t28396+t28397+t28398+1.0;
                double t28400 = 1.0/t28399;
                double t28401 = gamma_aa*gcaa*t28383;
                double t28402 = t28401+1.0;
                double t28403 = 1.0/t28402;
                double t28404 = gamma_aa*gcaa*t28383*3.0;
                double t28405 = gamma_aa*gcaa*t28384*t28378*t28379;
                double t28406 = t28385*t28378*t28379*3.0;
                double t28407 = t28404+t28405+t28406+1.0;
                double t28408 = 1.0/t28407;
                double t28409 = gamma_aa*gcaa*t28383*2.0;
                double t28410 = t28385*t28378*t28379;
                double t28411 = t28410+t28409+1.0;
                double t28412 = 1.0/t28411;
                double t28413 = 1.0/pow(rho_a,1.9E1/3.0);
                double t28414 = 1.0/pow(rho_a,1.1E1/3.0);
                double t28415 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28416 = 1.0/pow(rho_a,3.5E1/3.0);
                double t28417 = 1.0/t28362;
                double t28418 = 1.0/(t28350*t28350);
                double t28419 = b4f*t28346*t28357*(2.0/3.0);
                double t28420 = b2f*c*t28351*(1.0/3.0);
                double t28421 = b1f*c*t28351*t28358*(1.0/6.0);
                double t28422 = b3f*c*t28342*t28351*(1.0/2.0);
                double t28423 = t28420+t28421+t28422+t28419;
                double t28424 = a1f*c*c0f*t28351*t28392*(2.0/3.0);
                double t28425 = a1p*c*c0p*t28351*t28377*(2.0/3.0);
                double t28426 = ccaa4*t28400*t28380*t28416*t28381*(3.2E1/3.0);
                double t28427 = ccaa1*gamma_aa*gcaa*t28403*t28414*(8.0/3.0);
                double t28428 = ccaa3*gamma_aa*gcaa*t28415*t28408*t28378*t28379*8.0;
                double t28429 = ccaa2*t28412*t28413*t28378*t28379*(1.6E1/3.0);
                double t28430 = 1.0/(t28402*t28402);
                double t28431 = gamma_aa*gcaa*t28414*8.0;
                double t28432 = gamma_aa*gcaa*t28415*t28378*t28379*8.0;
                double t28433 = t28413*t28378*t28379*1.6E1;
                double t28434 = t28431+t28432+t28433;
                double t28435 = 1.0/(t28407*t28407);
                double t28436 = gamma_aa*gcaa*t28414*(3.2E1/3.0);
                double t28437 = gamma_aa*gcaa*t28415*t28378*t28379*3.2E1;
                double t28438 = t28413*t28378*t28379*3.2E1;
                double t28439 = t28380*t28416*t28381*(3.2E1/3.0);
                double t28440 = t28436+t28437+t28438+t28439;
                double t28441 = 1.0/(t28399*t28399);
                double t28442 = gamma_aa*gcaa*t28414*(1.6E1/3.0);
                double t28443 = t28413*t28378*t28379*(1.6E1/3.0);
                double t28444 = t28442+t28443;
                double t28445 = 1.0/(t28411*t28411);
                double t28446 = t28426+t28427+t28428+t28429-ccaa1*t28430*t28413*t28378*t28379*(8.0/3.0)-ccaa4*t28440*t28441*t28380*t28381*t28382-ccaa2*t28444*t28445*t28385*t28378*t28379-ccaa3*gamma_aa*gcaa*t28434*t28435*t28384*t28378*t28379;
                double t28447 = c0f*t28392*t28394*2.0;
                double t28448 = c0p*t28368*t28377*2.0;
                double t28449 = 1.0/pow(rho_a,1.0E1);
                double t28450 = 1.0/pow(rho_a,2.2E1/3.0);
                double t28451 = 1.0/pow(rho_a,1.4E1/3.0);
                double t28452 = 1.0/pow(rho_a,3.8E1/3.0);
                double t28453 = ccaa4*t28400*t28380*t28381*t28382;
                double t28454 = ccaa1*gamma_aa*gcaa*t28403*t28383;
                double t28455 = ccaa3*gamma_aa*gcaa*t28408*t28384*t28378*t28379;
                double t28456 = ccaa2*t28412*t28385*t28378*t28379;
                double t28457 = ccaa0+t28453+t28454+t28455+t28456;
                double t28458 = 1.0/pow(rho_a,7.0/3.0);
                double t28459 = 1.0/pow(t28341,3.0/2.0);
                double t28460 = t28423*t28423;
                double t28461 = t28375*t28375;
                double t28462 = 1.0/(t28356*t28356*t28356);
                double t28463 = t28461*t28462*t28368*t28369*2.0;
                double t28464 = b4p*t28346*t28383*(1.0E1/9.0);
                double t28465 = b2p*c*t28458*(4.0/9.0);
                double t28466 = b3p*t28346*t28383*t28358*(1.0/1.2E1);
                double t28467 = b1p*c*t28358*t28458*(2.0/9.0);
                double t28468 = b3p*c*t28342*t28458*(2.0/3.0);
                double t28469 = t28464+t28465+t28466+t28467+t28468-b1p*t28346*t28383*t28459*(1.0/3.6E1);
                double t28470 = 1.0/(t28366*t28366);
                double t28471 = 1.0/(t28356*t28356*t28356*t28356);
                double t28472 = a1p*c*c0p*t28377*t28458*(8.0/9.0);
                v_rho_a_rho_a[Q] += scale * (t28446*(t28448+t28391*t28388*(t28447-c0p*t28368*t28377*2.0))*2.0+t28457*(t28425-t28376+t28391*t28388*(t28424+t28376-t28423*t28417*t28418*t28394-a1p*c*c0p*t28351*t28377*(2.0/3.0)))*2.0+rho_a*t28457*(-t28463-t28472+t28391*t28388*(t28463+t28472-t28370*t28368*t28369*t28469-1.0/(t28350*t28350*t28350)*t28460*t28417*t28394*2.0+t28417*t28418*t28394*(b2f*c*t28458*(4.0/9.0)+b4f*t28346*t28383*(1.0E1/9.0)+b1f*c*t28358*t28458*(2.0/9.0)+b3f*c*t28342*t28458*(2.0/3.0)-b1f*t28346*t28383*t28459*(1.0/3.6E1)+b3f*t28346*t28383*t28358*(1.0/1.2E1))+1.0/(t28350*t28350*t28350*t28350)*t28460*1.0/(t28362*t28362)*t28394*t28359*(1.0/2.0)-a1f*c*c0f*t28392*t28458*(8.0/9.0)-t28461*t28470*t28363*t28471*t28368*(1.0/2.0)+a1f*c*t28351*t28423*t28417*t28418*(2.0/3.0)-a1p*c*t28351*t28370*t28375*t28369*(2.0/3.0))+t28370*t28368*t28369*t28469+t28461*t28470*t28363*t28471*t28368*(1.0/2.0)+a1p*c*t28351*t28370*t28375*t28369*(2.0/3.0))-rho_a*t28446*(t28425-t28376+t28391*t28388*(t28424-t28425+t28376-t28423*t28417*t28418*t28394))*2.0-rho_a*(t28448+t28391*t28388*(t28447-t28448))*(ccaa1*gamma_aa*gcaa*t28403*t28451*(8.8E1/9.0)+ccaa4*t28400*t28380*t28452*t28381*(1.12E3/9.0)-ccaa1*t28430*t28450*t28378*t28379*2.4E1+ccaa2*t28412*t28450*t28378*t28379*(3.04E2/9.0)-ccaa4*t28440*t28441*t28380*t28416*t28381*(6.4E1/3.0)-ccaa2*t28413*t28444*t28445*t28378*t28379*(3.2E1/3.0)-ccaa2*t28445*t28385*t28378*t28379*(gamma_aa*gcaa*t28451*(1.76E2/9.0)+t28450*t28378*t28379*(3.04E2/9.0))-ccaa4*t28441*t28380*t28381*t28382*(gamma_aa*gcaa*t28451*(3.52E2/9.0)+t28380*t28452*t28381*(1.12E3/9.0)+t28450*t28378*t28379*(6.08E2/3.0)+gamma_aa*gcaa*t28449*t28378*t28379*2.88E2)+ccaa4*(t28440*t28440)*t28380*t28381*t28382*1.0/(t28399*t28399*t28399)*2.0+ccaa2*1.0/(t28411*t28411*t28411)*(t28444*t28444)*t28385*t28378*t28379*2.0+ccaa3*gamma_aa*gcaa*t28408*t28449*t28378*t28379*7.2E1+ccaa1*gamma_aa*gcaa*1.0/(t28402*t28402*t28402)*t28449*t28378*t28379*(1.28E2/9.0)+ccaa3*gamma_aa*gcaa*1.0/(t28407*t28407*t28407)*(t28434*t28434)*t28384*t28378*t28379*2.0-ccaa3*gamma_aa*gcaa*t28435*t28384*t28378*t28379*(gamma_aa*gcaa*t28451*(8.8E1/3.0)+t28450*t28378*t28379*(3.04E2/3.0)+gamma_aa*gcaa*t28449*t28378*t28379*7.2E1)-ccaa3*gamma_aa*gcaa*t28415*t28434*t28435*t28378*t28379*1.6E1));
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t28594 = 1.0/pow(rho_a,1.0/3.0);
                double t28595 = c*t28594;
                double t28596 = sqrt(t28595);
                double t28597 = pow(t28595,3.0/2.0);
                double t28598 = c*c;
                double t28599 = 1.0/pow(rho_a,2.0/3.0);
                double t28600 = 1.0/c0p;
                double t28601 = b1p*t28596;
                double t28602 = b3p*t28597;
                double t28603 = b4p*t28598*t28599;
                double t28604 = b2p*c*t28594;
                double t28605 = t28601+t28602+t28603+t28604;
                double t28606 = 1.0/t28605;
                double t28607 = t28600*t28606*(1.0/2.0);
                double t28608 = t28607+1.0;
                double t28609 = log(t28608);
                double t28610 = a1p*c*t28594;
                double t28611 = t28610+1.0;
                double t28612 = gcaa*gcaa;
                double t28613 = 1.0/pow(rho_a,1.6E1/3.0);
                double t28614 = 1.0/pow(rho_a,8.0/3.0);
                double t28615 = gamma_aa*gamma_aa;
                double t28616 = t28612*t28612;
                double t28617 = 1.0/pow(rho_a,3.2E1/3.0);
                double t28618 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28619 = gamma_aa*gcaa*t28614;
                double t28620 = t28619+1.0;
                double t28621 = gamma_aa*gcaa*t28614*2.0;
                double t28622 = t28612*t28613*t28615;
                double t28623 = t28621+t28622+1.0;
                double t28624 = gamma_aa*gcaa*t28614*3.0;
                double t28625 = gamma_aa*gcaa*t28612*t28615*t28618;
                double t28626 = t28612*t28613*t28615*3.0;
                double t28627 = t28624+t28625+t28626+1.0;
                double t28628 = t28615*t28615;
                double t28644 = gcaa*t28614*4.0;
                double t28645 = gamma_aa*t28612*t28613*1.2E1;
                double t28646 = gcaa*t28612*t28615*t28618*1.2E1;
                double t28647 = gamma_aa*t28615*t28616*t28617*4.0;
                double t28629 = t28644+t28645+t28646+t28647;
                double t28630 = gamma_aa*gcaa*t28614*4.0;
                double t28631 = gamma_aa*gcaa*t28612*t28615*t28618*4.0;
                double t28632 = t28612*t28613*t28615*6.0;
                double t28633 = t28616*t28617*t28628;
                double t28634 = t28630+t28631+t28632+t28633+1.0;
                double t28637 = gcaa*t28614*2.0;
                double t28638 = gamma_aa*t28612*t28613*2.0;
                double t28635 = t28637+t28638;
                double t28636 = 1.0/(t28627*t28627);
                double t28639 = 1.0/(t28623*t28623);
                double t28640 = gcaa*t28614*3.0;
                double t28641 = gamma_aa*t28612*t28613*6.0;
                double t28642 = gcaa*t28612*t28615*t28618*3.0;
                double t28643 = t28640+t28641+t28642;
                double t28648 = 1.0/(t28634*t28634);
                v_gamma_aa_gamma_aa[Q] += scale * (rho_a*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t28596+b3f*t28597+b2f*c*t28594+b4f*t28598*t28599))+1.0)*(a1f*c*t28594+1.0)*2.0-c0p*t28611*t28609*2.0))/(two_13*2.0-2.0)+c0p*t28611*t28609*2.0)*(ccaa1*1.0/(t28620*t28620)*t28612*t28613*2.0-(ccaa2*t28612*t28613*2.0)/t28623+ccaa2*t28615*t28616*t28617*t28639*2.0-(ccaa4*t28615*t28616*t28617*1.2E1)/t28634+ccaa4*t28616*t28617*t28628*t28648*(t28612*t28613*1.2E1+t28615*t28616*t28617*1.2E1+gamma_aa*gcaa*t28612*t28618*2.4E1)-ccaa1*gamma_aa*gcaa*1.0/(t28620*t28620*t28620)*t28612*t28618*2.0-(ccaa3*gamma_aa*gcaa*t28612*t28618*6.0)/t28627-ccaa2*t28612*t28613*1.0/(t28623*t28623*t28623)*t28615*(t28635*t28635)*2.0-ccaa4*t28616*1.0/(t28634*t28634*t28634)*t28617*t28628*(t28629*t28629)*2.0+ccaa2*gamma_aa*t28612*t28613*t28635*t28639*4.0+ccaa4*gamma_aa*t28615*t28616*t28617*t28629*t28648*8.0+ccaa3*gcaa*t28612*t28615*t28643*t28618*t28636*6.0+ccaa3*gamma_aa*gcaa*t28612*t28615*t28618*t28636*(t28612*t28613*6.0+gamma_aa*gcaa*t28612*t28618*6.0)-ccaa3*gamma_aa*gcaa*t28612*t28615*(t28643*t28643)*t28618*1.0/(t28627*t28627*t28627)*2.0));
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t28476 = 1.0/pow(rho_a,1.0/3.0);
                double t28477 = c*t28476;
                double t28478 = sqrt(t28477);
                double t28479 = pow(t28477,3.0/2.0);
                double t28480 = c*c;
                double t28481 = 1.0/pow(rho_a,2.0/3.0);
                double t28482 = 1.0/c0p;
                double t28483 = b1p*t28478;
                double t28484 = b3p*t28479;
                double t28485 = b4p*t28480*t28481;
                double t28486 = b2p*c*t28476;
                double t28487 = t28483+t28484+t28485+t28486;
                double t28488 = 1.0/t28487;
                double t28489 = t28482*t28488*(1.0/2.0);
                double t28490 = t28489+1.0;
                double t28491 = log(t28490);
                double t28492 = a1p*c*t28476;
                double t28493 = t28492+1.0;
                double t28494 = 1.0/pow(rho_a,8.0/3.0);
                double t28495 = gamma_aa*gamma_aa;
                double t28496 = gcaa*gcaa;
                double t28497 = t28496*t28496;
                double t28498 = 1.0/pow(rho_a,3.2E1/3.0);
                double t28499 = 1.0/pow(rho_a,1.6E1/3.0);
                double t28500 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28501 = gamma_aa*gcaa*t28494;
                double t28502 = t28501+1.0;
                double t28503 = gamma_aa*gcaa*t28494*3.0;
                double t28504 = gamma_aa*gcaa*t28500*t28495*t28496;
                double t28505 = t28495*t28496*t28499*3.0;
                double t28506 = t28503+t28504+t28505+1.0;
                double t28507 = t28495*t28495;
                double t28508 = gamma_aa*gcaa*t28494*4.0;
                double t28509 = gamma_aa*gcaa*t28500*t28495*t28496*4.0;
                double t28510 = t28495*t28496*t28499*6.0;
                double t28511 = t28507*t28497*t28498;
                double t28512 = t28510+t28511+t28508+t28509+1.0;
                double t28513 = gamma_aa*gcaa*t28494*2.0;
                double t28514 = t28495*t28496*t28499;
                double t28515 = t28513+t28514+1.0;
                double t28516 = pow(2.0,1.0/3.0);
                double t28517 = t28516*2.0;
                double t28518 = t28517-2.0;
                double t28519 = two_13*2.0;
                double t28520 = t28519-2.0;
                double t28521 = 1.0/t28520;
                double t28522 = 1.0/c0f;
                double t28523 = b1f*t28478;
                double t28524 = b3f*t28479;
                double t28525 = b4f*t28480*t28481;
                double t28526 = b2f*c*t28476;
                double t28527 = t28523+t28524+t28525+t28526;
                double t28528 = 1.0/t28527;
                double t28529 = t28522*t28528*(1.0/2.0);
                double t28530 = t28529+1.0;
                double t28531 = log(t28530);
                double t28532 = a1f*c*t28476;
                double t28533 = t28532+1.0;
                double t28534 = c0f*t28531*t28533*2.0;
                double t28535 = c0p*t28491*t28493*2.0;
                double t28536 = 1.0/t28502;
                double t28537 = 1.0/t28512;
                double t28538 = 1.0/t28515;
                double t28539 = 1.0/t28506;
                double t28540 = 1.0/pow(rho_a,1.9E1/3.0);
                double t28541 = 1.0/(t28502*t28502);
                double t28542 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t28543 = 1.0/pow(rho_a,1.1E1/3.0);
                double t28544 = 1.0/(t28506*t28506);
                double t28545 = 1.0/(t28515*t28515);
                double t28546 = gcaa*t28494*3.0;
                double t28547 = gamma_aa*t28496*t28499*6.0;
                double t28548 = gcaa*t28500*t28495*t28496*3.0;
                double t28549 = t28546+t28547+t28548;
                double t28550 = 1.0/pow(rho_a,3.5E1/3.0);
                double t28551 = 1.0/(t28512*t28512);
                double t28552 = gcaa*t28494*4.0;
                double t28553 = gamma_aa*t28496*t28499*1.2E1;
                double t28554 = gcaa*t28500*t28495*t28496*1.2E1;
                double t28555 = gamma_aa*t28495*t28497*t28498*4.0;
                double t28556 = t28552+t28553+t28554+t28555;
                double t28557 = gcaa*t28494*2.0;
                double t28558 = gamma_aa*t28496*t28499*2.0;
                double t28559 = t28557+t28558;
                double t28560 = gamma_aa*gcaa*t28543*(1.6E1/3.0);
                double t28561 = t28540*t28495*t28496*(1.6E1/3.0);
                double t28562 = t28560+t28561;
                double t28563 = gamma_aa*gcaa*t28543*8.0;
                double t28564 = gamma_aa*gcaa*t28542*t28495*t28496*8.0;
                double t28565 = t28540*t28495*t28496*1.6E1;
                double t28566 = t28563+t28564+t28565;
                double t28567 = gamma_aa*gcaa*t28543*(3.2E1/3.0);
                double t28568 = gamma_aa*gcaa*t28542*t28495*t28496*3.2E1;
                double t28569 = t28540*t28495*t28496*3.2E1;
                double t28570 = t28550*t28507*t28497*(3.2E1/3.0);
                double t28571 = t28570+t28567+t28568+t28569;
                double t28572 = 1.0/pow(rho_a,4.0/3.0);
                double t28573 = 1.0/pow(rho_a,5.0/3.0);
                double t28574 = 1.0/sqrt(t28477);
                double t28575 = 1.0/t28490;
                double t28576 = 1.0/(t28487*t28487);
                double t28577 = b4p*t28480*t28573*(2.0/3.0);
                double t28578 = b2p*c*t28572*(1.0/3.0);
                double t28579 = b1p*c*t28572*t28574*(1.0/6.0);
                double t28580 = b3p*c*t28572*t28478*(1.0/2.0);
                double t28581 = t28580+t28577+t28578+t28579;
                double t28582 = t28581*t28493*t28575*t28576;
                double t28583 = ccaa1*gcaa*t28536*t28494;
                double t28584 = ccaa4*gamma_aa*t28537*t28495*t28497*t28498*4.0;
                double t28585 = ccaa2*gamma_aa*t28538*t28496*t28499*2.0;
                double t28586 = ccaa3*gcaa*t28500*t28539*t28495*t28496*3.0;
                double t28587 = t28583+t28584+t28585+t28586-ccaa1*gamma_aa*t28541*t28496*t28499-ccaa4*t28551*t28507*t28556*t28497*t28498-ccaa2*t28545*t28495*t28496*t28559*t28499-ccaa3*gamma_aa*gcaa*t28500*t28544*t28495*t28549*t28496;
                v_rho_a_gamma_aa[Q] += scale * (-t28587*(t28535+t28521*t28518*(t28534-c0p*t28491*t28493*2.0))+rho_a*t28587*(-t28582+t28521*t28518*(t28582-(t28533*1.0/(t28527*t28527)*(b2f*c*t28572*(1.0/3.0)+b4f*t28480*t28573*(2.0/3.0)+b1f*c*t28572*t28574*(1.0/6.0)+b3f*c*t28572*t28478*(1.0/2.0)))/t28530+a1f*c*c0f*t28531*t28572*(2.0/3.0)-a1p*c*c0p*t28491*t28572*(2.0/3.0))+a1p*c*c0p*t28491*t28572*(2.0/3.0))-rho_a*(t28535+t28521*t28518*(t28534-t28535))*(ccaa1*gcaa*t28543*t28536*(-8.0/3.0)+ccaa1*gamma_aa*t28540*t28541*t28496*8.0-ccaa2*gamma_aa*t28540*t28538*t28496*(3.2E1/3.0)+ccaa4*t28550*t28551*t28507*t28556*t28497*(3.2E1/3.0)+ccaa2*t28540*t28545*t28495*t28496*t28559*(1.6E1/3.0)+ccaa4*t28551*t28507*t28497*t28498*(gcaa*t28543*(3.2E1/3.0)+gamma_aa*t28540*t28496*6.4E1+gamma_aa*t28550*t28495*t28497*(1.28E2/3.0)+gcaa*t28542*t28495*t28496*9.6E1)-ccaa1*gcaa*1.0/(t28502*t28502*t28502)*t28542*t28495*t28496*(1.6E1/3.0)+ccaa2*t28545*t28495*t28496*t28499*(gcaa*t28543*(1.6E1/3.0)+gamma_aa*t28540*t28496*(3.2E1/3.0))-ccaa4*gamma_aa*t28550*t28537*t28495*t28497*(1.28E2/3.0)+ccaa2*gamma_aa*t28562*t28545*t28496*t28499*2.0-ccaa3*gcaa*t28542*t28539*t28495*t28496*2.4E1+ccaa4*gamma_aa*t28551*t28571*t28495*t28497*t28498*4.0+ccaa3*gcaa*t28500*t28544*t28566*t28495*t28496*3.0-ccaa4*1.0/(t28512*t28512*t28512)*t28507*t28571*t28556*t28497*t28498*2.0-ccaa2*1.0/(t28515*t28515*t28515)*t28562*t28495*t28496*t28559*t28499*2.0+ccaa3*gamma_aa*gcaa*t28500*t28544*t28495*t28496*(gcaa*t28543*8.0+gamma_aa*t28540*t28496*3.2E1+gcaa*t28542*t28495*t28496*2.4E1)+ccaa3*gamma_aa*gcaa*t28542*t28544*t28495*t28549*t28496*8.0-ccaa3*gamma_aa*gcaa*t28500*1.0/(t28506*t28506*t28506)*t28566*t28495*t28549*t28496*2.0));
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t24492 = 1.0/pow(rho_a,1.0/3.0);
                double t24493 = c*t24492;
                double t24494 = sqrt(t24493);
                double t24495 = pow(t24493,3.0/2.0);
                double t24496 = c*c;
                double t24497 = 1.0/pow(rho_a,2.0/3.0);
                double t24498 = 1.0/c0p;
                double t24499 = b1p*t24494;
                double t24500 = b3p*t24495;
                double t24501 = b4p*t24496*t24497;
                double t24502 = b2p*c*t24492;
                double t24503 = t24500+t24501+t24502+t24499;
                double t24504 = 1.0/t24503;
                double t24505 = t24504*t24498*(1.0/2.0);
                double t24506 = t24505+1.0;
                double t24507 = log(t24506);
                double t24508 = a1p*c*t24492;
                double t24509 = t24508+1.0;
                double t24510 = pow(2.0,1.0/3.0);
                double t24511 = t24510*2.0;
                double t24512 = t24511-2.0;
                double t24513 = two_13*2.0;
                double t24514 = t24513-2.0;
                double t24515 = 1.0/t24514;
                double t24516 = 1.0/c0f;
                double t24517 = 1.0/pow(rho_b,1.0/3.0);
                double t24518 = c*t24517;
                double t24519 = sqrt(t24518);
                double t24520 = pow(t24518,3.0/2.0);
                double t24521 = 1.0/pow(rho_b,2.0/3.0);
                double t24522 = b1p*t24519;
                double t24523 = b3p*t24520;
                double t24524 = b4p*t24521*t24496;
                double t24525 = b2p*c*t24517;
                double t24526 = t24522+t24523+t24524+t24525;
                double t24527 = 1.0/t24526;
                double t24528 = t24527*t24498*(1.0/2.0);
                double t24529 = t24528+1.0;
                double t24530 = log(t24529);
                double t24531 = a1p*c*t24517;
                double t24532 = t24531+1.0;
                double t24533 = c0p*t24530*t24532*2.0;
                double t24534 = rho_a+rho_b;
                double t24535 = 1.0/pow(t24534,1.0/3.0);
                double t24536 = c*t24535;
                double t24537 = sqrt(t24536);
                double t24538 = pow(t24536,3.0/2.0);
                double t24539 = 1.0/pow(t24534,2.0/3.0);
                double t24540 = b1p*t24537;
                double t24541 = b3p*t24538;
                double t24542 = b4p*t24539*t24496;
                double t24543 = b2p*c*t24535;
                double t24544 = t24540+t24541+t24542+t24543;
                double t24545 = 1.0/t24544;
                double t24546 = t24545*t24498*(1.0/2.0);
                double t24547 = t24546+1.0;
                double t24548 = log(t24547);
                double t24549 = a1p*c*t24535;
                double t24550 = t24549+1.0;
                double t24551 = c0p*t24550*t24548*2.0;
                double t24552 = rho_a-rho_b;
                double t24553 = t24552*t24552;
                double t24554 = 1.0/t24534;
                double t24555 = t24552*t24554;
                double t24556 = 1.0/(t24534*t24534*t24534*t24534);
                double t24557 = t24553*t24553;
                double t24558 = t24555+1.0;
                double t24559 = pow(t24558,4.0/3.0);
                double t24560 = -t24555+1.0;
                double t24561 = pow(t24560,4.0/3.0);
                double t24562 = t24561+t24559-2.0;
                double t24565 = 1.0/pow(rho_a,8.0/3.0);
                double t24566 = gamma_aa*t24565*(1.0/2.0);
                double t24567 = 1.0/pow(rho_b,8.0/3.0);
                double t24568 = gamma_bb*t24567*(1.0/2.0);
                double t24563 = t24566+t24568;
                double t24564 = gcab*gcab;
                double t24569 = t24563*t24563;
                double t24570 = t24564*t24564;
                double t24571 = t24569*t24569;
                double t24572 = c0p*t24507*t24509*2.0;
                double t24573 = b1f*t24494;
                double t24574 = b3f*t24495;
                double t24575 = b4f*t24496*t24497;
                double t24576 = b2f*c*t24492;
                double t24577 = t24573+t24574+t24575+t24576;
                double t24578 = 1.0/t24577;
                double t24579 = t24516*t24578*(1.0/2.0);
                double t24580 = t24579+1.0;
                double t24581 = log(t24580);
                double t24582 = a1f*c*t24492;
                double t24583 = t24582+1.0;
                double t24584 = t24572-c0f*t24581*t24583*2.0;
                double t24585 = t24572-t24512*t24515*t24584;
                double t24586 = gamma_aa*gamma_aa;
                double t24587 = gcaa*gcaa;
                double t24588 = t24586*t24586;
                double t24589 = t24587*t24587;
                double t24590 = 1.0/pow(rho_a,3.2E1/3.0);
                double t24591 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t24592 = 1.0/pow(rho_a,1.6E1/3.0);
                double t24593 = b1f*t24519;
                double t24594 = b3f*t24520;
                double t24595 = b4f*t24521*t24496;
                double t24596 = b2f*c*t24517;
                double t24597 = t24593+t24594+t24595+t24596;
                double t24598 = 1.0/t24597;
                double t24599 = t24516*t24598*(1.0/2.0);
                double t24600 = t24599+1.0;
                double t24601 = log(t24600);
                double t24602 = a1f*c*t24517;
                double t24603 = t24602+1.0;
                double t24604 = t24533-c0f*t24601*t24603*2.0;
                double t24605 = t24533-t24512*t24604*t24515;
                double t24606 = gamma_bb*gamma_bb;
                double t24607 = t24606*t24606;
                double t24608 = 1.0/pow(rho_b,3.2E1/3.0);
                double t24609 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t24610 = 1.0/pow(rho_b,1.6E1/3.0);
                v[Q] += scale * ((rho_b*t24605+rho_a*t24585-t24534*(t24551-t24515*t24562*t24556*t24557*(t24551-c0f*log((t24516*(1.0/2.0))/(b1f*t24537+b3f*t24538+b2f*c*t24535+b4f*t24539*t24496)+1.0)*(a1f*c*t24535+1.0)*2.0)+(Aa*t24515*t24562*log((1.0/2.0)/(Aa*(b1a*t24537+b3a*t24538+b2a*c*t24535+b4a*t24539*t24496))+1.0)*(t24556*t24557-1.0)*(a1a*c*t24535+1.0)*2.0)/d2fz0))*(ccab0+(ccab4*t24570*t24571)/(gcab*t24563*4.0+t24570*t24571+t24564*t24569*6.0+gcab*t24563*t24564*t24569*4.0+1.0)+(ccab1*gcab*t24563)/(gcab*t24563+1.0)+(ccab2*t24564*t24569)/(gcab*t24563*2.0+t24564*t24569+1.0)+(ccab3*gcab*t24563*t24564*t24569)/(gcab*t24563*3.0+t24564*t24569*3.0+gcab*t24563*t24564*t24569+1.0))-rho_b*t24605*(ccaa0+(ccaa2*t24610*t24606*t24587)/(gamma_bb*gcaa*t24567*2.0+t24610*t24606*t24587+1.0)+(ccaa1*gamma_bb*gcaa*t24567)/(gamma_bb*gcaa*t24567+1.0)+(ccaa4*t24607*t24608*t24589)/(gamma_bb*gcaa*t24567*4.0+t24610*t24606*t24587*6.0+t24607*t24608*t24589+gamma_bb*gcaa*t24606*t24609*t24587*4.0+1.0)+(ccaa3*gamma_bb*gcaa*t24606*t24609*t24587)/(gamma_bb*gcaa*t24567*3.0+t24610*t24606*t24587*3.0+gamma_bb*gcaa*t24606*t24609*t24587+1.0))-rho_a*t24585*(ccaa0+(ccaa2*t24592*t24586*t24587)/(gamma_aa*gcaa*t24565*2.0+t24592*t24586*t24587+1.0)+(ccaa1*gamma_aa*gcaa*t24565)/(gamma_aa*gcaa*t24565+1.0)+(ccaa4*t24590*t24588*t24589)/(gamma_aa*gcaa*t24565*4.0+t24592*t24586*t24587*6.0+t24590*t24588*t24589+gamma_aa*gcaa*t24591*t24586*t24587*4.0+1.0)+(ccaa3*gamma_aa*gcaa*t24591*t24586*t24587)/(gamma_aa*gcaa*t24565*3.0+t24592*t24586*t24587*3.0+gamma_aa*gcaa*t24591*t24586*t24587+1.0)));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t24612 = 1.0/pow(rho_a,1.0/3.0);
                double t24613 = c*t24612;
                double t24614 = sqrt(t24613);
                double t24615 = pow(t24613,3.0/2.0);
                double t24616 = c*c;
                double t24617 = 1.0/pow(rho_a,2.0/3.0);
                double t24618 = 1.0/c0p;
                double t24619 = b1p*t24614;
                double t24620 = b3p*t24615;
                double t24621 = b4p*t24616*t24617;
                double t24622 = b2p*c*t24612;
                double t24623 = t24620+t24621+t24622+t24619;
                double t24624 = 1.0/t24623;
                double t24625 = t24624*t24618*(1.0/2.0);
                double t24626 = t24625+1.0;
                double t24627 = log(t24626);
                double t24628 = a1p*c*t24612;
                double t24629 = t24628+1.0;
                double t24630 = gamma_aa*gamma_aa;
                double t24631 = gcaa*gcaa;
                double t24632 = t24630*t24630;
                double t24633 = t24631*t24631;
                double t24634 = 1.0/pow(rho_a,3.2E1/3.0);
                double t24635 = 1.0/pow(rho_a,8.0/3.0);
                double t24636 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t24637 = 1.0/pow(rho_a,1.6E1/3.0);
                double t24638 = pow(2.0,1.0/3.0);
                double t24639 = t24638*2.0;
                double t24640 = t24639-2.0;
                double t24641 = two_13*2.0;
                double t24642 = t24641-2.0;
                double t24643 = 1.0/t24642;
                double t24644 = 1.0/c0f;
                double t24645 = b1f*t24614;
                double t24646 = b3f*t24615;
                double t24647 = b4f*t24616*t24617;
                double t24648 = b2f*c*t24612;
                double t24649 = t24645+t24646+t24647+t24648;
                double t24650 = 1.0/t24649;
                double t24651 = t24650*t24644*(1.0/2.0);
                double t24652 = t24651+1.0;
                double t24653 = log(t24652);
                double t24654 = a1f*c*t24612;
                double t24655 = t24654+1.0;
                double t24656 = c0f*t24653*t24655*2.0;
                double t24657 = c0p*t24627*t24629*2.0;
                double t24658 = 1.0/pow(rho_b,1.0/3.0);
                double t24659 = c*t24658;
                double t24660 = sqrt(t24659);
                double t24661 = pow(t24659,3.0/2.0);
                double t24662 = 1.0/pow(rho_b,2.0/3.0);
                double t24663 = b1p*t24660;
                double t24664 = b3p*t24661;
                double t24665 = b4p*t24616*t24662;
                double t24666 = b2p*c*t24658;
                double t24667 = t24663+t24664+t24665+t24666;
                double t24668 = 1.0/t24667;
                double t24669 = t24618*t24668*(1.0/2.0);
                double t24670 = t24669+1.0;
                double t24671 = log(t24670);
                double t24672 = a1p*c*t24658;
                double t24673 = t24672+1.0;
                double t24674 = c0p*t24671*t24673*2.0;
                double t24675 = rho_a+rho_b;
                double t24676 = 1.0/pow(t24675,1.0/3.0);
                double t24677 = c*t24676;
                double t24678 = sqrt(t24677);
                double t24679 = pow(t24677,3.0/2.0);
                double t24680 = 1.0/pow(t24675,2.0/3.0);
                double t24681 = b1p*t24678;
                double t24682 = b3p*t24679;
                double t24683 = b4p*t24616*t24680;
                double t24684 = b2p*c*t24676;
                double t24685 = t24681+t24682+t24683+t24684;
                double t24686 = 1.0/t24685;
                double t24687 = t24618*t24686*(1.0/2.0);
                double t24688 = t24687+1.0;
                double t24689 = log(t24688);
                double t24690 = a1p*c*t24676;
                double t24691 = t24690+1.0;
                double t24692 = c0p*t24691*t24689*2.0;
                double t24693 = rho_a-rho_b;
                double t24694 = t24693*t24693;
                double t24695 = 1.0/t24675;
                double t24696 = t24693*t24695;
                double t24697 = 1.0/(t24675*t24675*t24675*t24675);
                double t24698 = t24694*t24694;
                double t24699 = t24696+1.0;
                double t24700 = pow(t24699,4.0/3.0);
                double t24701 = -t24696+1.0;
                double t24702 = pow(t24701,4.0/3.0);
                double t24703 = t24700+t24702-2.0;
                double t24704 = gcab*gcab;
                double t24708 = gamma_aa*t24635*(1.0/2.0);
                double t24709 = 1.0/pow(rho_b,8.0/3.0);
                double t24710 = gamma_bb*t24709*(1.0/2.0);
                double t24705 = t24710+t24708;
                double t24706 = t24705*t24705;
                double t24707 = 1.0/pow(rho_a,1.1E1/3.0);
                double t24711 = t24704*t24704;
                double t24712 = t24706*t24706;
                double t24713 = t24704*t24706*6.0;
                double t24714 = gcab*t24704*t24705*t24706*4.0;
                double t24715 = t24711*t24712;
                double t24716 = gcab*t24705*4.0;
                double t24717 = t24713+t24714+t24715+t24716+1.0;
                double t24718 = gcab*t24705;
                double t24719 = t24718+1.0;
                double t24720 = t24704*t24706;
                double t24721 = gcab*t24705*2.0;
                double t24722 = t24720+t24721+1.0;
                double t24723 = t24704*t24706*3.0;
                double t24724 = gcab*t24704*t24705*t24706;
                double t24725 = gcab*t24705*3.0;
                double t24726 = t24723+t24724+t24725+1.0;
                double t24727 = 1.0/t24722;
                double t24728 = 1.0/t24726;
                double t24729 = 1.0/t24719;
                double t24730 = 1.0/t24717;
                double t24731 = 1.0/pow(t24675,4.0/3.0);
                double t24732 = b1f*t24678;
                double t24733 = b3f*t24679;
                double t24734 = b4f*t24616*t24680;
                double t24735 = b2f*c*t24676;
                double t24736 = t24732+t24733+t24734+t24735;
                double t24737 = 1.0/t24736;
                double t24738 = t24644*t24737*(1.0/2.0);
                double t24739 = t24738+1.0;
                double t24740 = log(t24739);
                double t24741 = a1f*c*t24676;
                double t24742 = t24741+1.0;
                double t24744 = c0f*t24740*t24742*2.0;
                double t24743 = -t24744+t24692;
                double t24745 = 1.0/(t24675*t24675);
                double t24773 = t24745*t24693;
                double t24746 = -t24773+t24695;
                double t24747 = t24744-t24692;
                double t24748 = 1.0/pow(t24675,5.0/3.0);
                double t24749 = 1.0/sqrt(t24677);
                double t24750 = 1.0/t24688;
                double t24751 = 1.0/(t24685*t24685);
                double t24752 = b4p*t24616*t24748*(2.0/3.0);
                double t24753 = b2p*c*t24731*(1.0/3.0);
                double t24754 = b1p*c*t24731*t24749*(1.0/6.0);
                double t24755 = b3p*c*t24731*t24678*(1.0/2.0);
                double t24756 = t24752+t24753+t24754+t24755;
                double t24757 = t24750*t24751*t24691*t24756;
                double t24758 = 1.0/d2fz0;
                double t24759 = 1.0/Aa;
                double t24760 = b1a*t24678;
                double t24761 = b3a*t24679;
                double t24762 = b4a*t24616*t24680;
                double t24763 = b2a*c*t24676;
                double t24764 = t24760+t24761+t24762+t24763;
                double t24765 = 1.0/t24764;
                double t24766 = t24765*t24759*(1.0/2.0);
                double t24767 = t24766+1.0;
                double t24768 = log(t24767);
                double t24769 = a1a*c*t24676;
                double t24770 = t24769+1.0;
                double t24771 = 1.0/(t24675*t24675*t24675*t24675*t24675);
                double t24772 = pow(t24699,1.0/3.0);
                double t24774 = t24772*t24746*(4.0/3.0);
                double t24775 = pow(t24701,1.0/3.0);
                double t24776 = t24774-t24746*t24775*(4.0/3.0);
                double t24777 = t24697*t24698;
                double t24778 = t24777-1.0;
                double t24779 = 1.0/pow(rho_a,4.0/3.0);
                double t24780 = 1.0/pow(rho_a,5.0/3.0);
                double t24781 = 1.0/sqrt(t24613);
                double t24782 = 1.0/t24626;
                double t24783 = 1.0/(t24623*t24623);
                double t24784 = b4p*t24616*t24780*(2.0/3.0);
                double t24785 = b2p*c*t24779*(1.0/3.0);
                double t24786 = b1p*c*t24781*t24779*(1.0/6.0);
                double t24787 = b3p*c*t24614*t24779*(1.0/2.0);
                double t24788 = t24784+t24785+t24786+t24787;
                double t24789 = t24629*t24782*t24783*t24788;
                double t24790 = t24656-t24657;
                double t24791 = t24640*t24643*t24790;
                double t24792 = Aa*t24703*t24643*t24770*t24758*t24768*t24778*2.0;
                double t24793 = t24791+t24657;
                double t24794 = gamma_aa*gcaa*t24635*4.0;
                double t24795 = gamma_aa*gcaa*t24630*t24631*t24636*4.0;
                double t24796 = t24630*t24631*t24637*6.0;
                double t24797 = t24632*t24633*t24634;
                double t24798 = t24794+t24795+t24796+t24797+1.0;
                double t24799 = 1.0/t24798;
                double t24800 = gamma_aa*gcaa*t24635;
                double t24801 = t24800+1.0;
                double t24802 = 1.0/t24801;
                double t24803 = gamma_aa*gcaa*t24635*3.0;
                double t24804 = gamma_aa*gcaa*t24630*t24631*t24636;
                double t24805 = t24630*t24631*t24637*3.0;
                double t24806 = t24803+t24804+t24805+1.0;
                double t24807 = 1.0/t24806;
                double t24808 = gamma_aa*gcaa*t24635*2.0;
                double t24809 = t24630*t24631*t24637;
                double t24810 = t24808+t24809+1.0;
                double t24811 = 1.0/t24810;
                double t24812 = 1.0/pow(rho_a,1.9E1/3.0);
                double t24813 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t24814 = 1.0/pow(rho_a,3.5E1/3.0);
                double t24815 = 1.0/t24652;
                double t24816 = 1.0/(t24649*t24649);
                double t24817 = b4f*t24616*t24780*(2.0/3.0);
                double t24818 = b2f*c*t24779*(1.0/3.0);
                double t24819 = b1f*c*t24781*t24779*(1.0/6.0);
                double t24820 = b3f*c*t24614*t24779*(1.0/2.0);
                double t24821 = t24820+t24817+t24818+t24819;
                double t24822 = a1f*c*c0f*t24653*t24779*(2.0/3.0);
                double t24823 = a1p*c*c0p*t24627*t24779*(2.0/3.0);
                double t24824 = ccaa4*t24632*t24633*t24634*t24799;
                double t24825 = ccaa1*gamma_aa*gcaa*t24802*t24635;
                double t24826 = ccaa3*gamma_aa*gcaa*t24630*t24631*t24636*t24807;
                double t24827 = ccaa2*t24630*t24631*t24811*t24637;
                double t24828 = ccaa0+t24824+t24825+t24826+t24827;
                v_rho_a[Q] += scale * (-(ccab0+ccab1*gcab*t24705*t24729+ccab4*t24711*t24712*t24730+ccab2*t24704*t24706*t24727+ccab3*gcab*t24704*t24705*t24706*t24728)*(t24692-t24791-t24657+t24792+rho_a*(t24823-t24789+t24640*t24643*(t24822+t24789-t24821*t24815*t24816*t24655-a1p*c*c0p*t24627*t24779*(2.0/3.0)))-t24675*(-t24757+t24703*t24643*t24697*t24698*(t24757-(t24742*1.0/(t24736*t24736)*(b2f*c*t24731*(1.0/3.0)+b4f*t24616*t24748*(2.0/3.0)+b1f*c*t24731*t24749*(1.0/6.0)+b3f*c*t24731*t24678*(1.0/2.0)))/t24739+a1f*c*c0f*t24731*t24740*(2.0/3.0)-a1p*c*c0p*t24731*t24689*(2.0/3.0))+a1p*c*c0p*t24731*t24689*(2.0/3.0)+t24703*t24643*t24771*t24747*t24698*4.0-t24643*t24747*t24776*t24697*t24698+t24703*t24643*t24743*t24693*t24694*t24697*4.0+Aa*t24703*t24643*t24770*t24758*t24768*(t24771*t24698*4.0-t24693*t24694*t24697*4.0)*2.0-Aa*t24643*t24770*t24758*t24776*t24768*t24778*2.0-(t24703*t24643*t24770*1.0/(t24764*t24764)*t24758*t24778*(b2a*c*t24731*(1.0/3.0)+b4a*t24616*t24748*(2.0/3.0)+b1a*c*t24731*t24749*(1.0/6.0)+b3a*c*t24731*t24678*(1.0/2.0)))/t24767+Aa*a1a*c*t24703*t24731*t24643*t24758*t24768*t24778*(2.0/3.0))+t24703*t24643*t24747*t24697*t24698)-t24828*(t24657+t24640*t24643*(t24656-c0p*t24627*t24629*2.0))-(rho_a*t24793+rho_b*(t24674-t24640*t24643*(t24674-c0f*log((t24644*(1.0/2.0))/(b1f*t24660+b3f*t24661+b2f*c*t24658+b4f*t24616*t24662)+1.0)*(a1f*c*t24658+1.0)*2.0))-t24675*(t24692+t24792-t24703*t24643*t24743*t24697*t24698))*(ccab1*gamma_aa*gcab*t24707*t24729*(4.0/3.0)-ccab2*t24704*1.0/(t24722*t24722)*t24706*(gamma_aa*gcab*t24707*(8.0/3.0)+gamma_aa*t24704*t24705*t24707*(8.0/3.0))-ccab4*t24711*t24712*1.0/(t24717*t24717)*(gamma_aa*gcab*t24707*(1.6E1/3.0)+gamma_aa*t24704*t24705*t24707*1.6E1+gamma_aa*gcab*t24704*t24706*t24707*1.6E1+gamma_aa*t24711*t24705*t24706*t24707*(1.6E1/3.0))-ccab1*gamma_aa*t24704*t24705*t24707*1.0/(t24719*t24719)*(4.0/3.0)+ccab2*gamma_aa*t24704*t24705*t24707*t24727*(8.0/3.0)-ccab3*gcab*t24704*t24705*t24706*1.0/(t24726*t24726)*(gamma_aa*gcab*t24707*4.0+gamma_aa*t24704*t24705*t24707*8.0+gamma_aa*gcab*t24704*t24706*t24707*4.0)+ccab3*gamma_aa*gcab*t24704*t24706*t24707*t24728*4.0+ccab4*gamma_aa*t24711*t24730*t24705*t24706*t24707*(1.6E1/3.0))+rho_a*t24793*(ccaa1*gamma_aa*gcaa*t24802*t24707*(8.0/3.0)+ccaa2*t24630*t24631*t24811*t24812*(1.6E1/3.0)+ccaa4*t24632*t24633*t24814*t24799*(3.2E1/3.0)-ccaa1*t24630*1.0/(t24801*t24801)*t24631*t24812*(8.0/3.0)-ccaa2*t24630*1.0/(t24810*t24810)*t24631*t24637*(gamma_aa*gcaa*t24707*(1.6E1/3.0)+t24630*t24631*t24812*(1.6E1/3.0))-ccaa4*t24632*t24633*t24634*1.0/(t24798*t24798)*(gamma_aa*gcaa*t24707*(3.2E1/3.0)+t24630*t24631*t24812*3.2E1+t24632*t24633*t24814*(3.2E1/3.0)+gamma_aa*gcaa*t24630*t24631*t24813*3.2E1)+ccaa3*gamma_aa*gcaa*t24630*t24631*t24813*t24807*8.0-ccaa3*gamma_aa*gcaa*t24630*t24631*1.0/(t24806*t24806)*t24636*(gamma_aa*gcaa*t24707*8.0+t24630*t24631*t24812*1.6E1+gamma_aa*gcaa*t24630*t24631*t24813*8.0))+rho_a*t24828*(t24823-t24789+t24640*t24643*(t24822-t24823+t24789-t24821*t24815*t24816*t24655)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t24830 = 1.0/pow(rho_b,1.0/3.0);
                double t24831 = c*t24830;
                double t24832 = sqrt(t24831);
                double t24833 = pow(t24831,3.0/2.0);
                double t24834 = c*c;
                double t24835 = 1.0/pow(rho_b,2.0/3.0);
                double t24836 = 1.0/c0p;
                double t24837 = b1p*t24832;
                double t24838 = b3p*t24833;
                double t24839 = b4p*t24834*t24835;
                double t24840 = b2p*c*t24830;
                double t24841 = t24840+t24837+t24838+t24839;
                double t24842 = 1.0/t24841;
                double t24843 = t24842*t24836*(1.0/2.0);
                double t24844 = t24843+1.0;
                double t24845 = log(t24844);
                double t24846 = a1p*c*t24830;
                double t24847 = t24846+1.0;
                double t24848 = gamma_bb*gamma_bb;
                double t24849 = gcaa*gcaa;
                double t24850 = t24848*t24848;
                double t24851 = t24849*t24849;
                double t24852 = 1.0/pow(rho_b,3.2E1/3.0);
                double t24853 = 1.0/pow(rho_b,8.0/3.0);
                double t24854 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t24855 = 1.0/pow(rho_b,1.6E1/3.0);
                double t24856 = pow(2.0,1.0/3.0);
                double t24857 = t24856*2.0;
                double t24858 = t24857-2.0;
                double t24859 = two_13*2.0;
                double t24860 = t24859-2.0;
                double t24861 = 1.0/t24860;
                double t24862 = 1.0/c0f;
                double t24863 = 1.0/pow(rho_a,1.0/3.0);
                double t24864 = c*t24863;
                double t24865 = sqrt(t24864);
                double t24866 = pow(t24864,3.0/2.0);
                double t24867 = 1.0/pow(rho_a,2.0/3.0);
                double t24868 = b1p*t24865;
                double t24869 = b3p*t24866;
                double t24870 = b4p*t24834*t24867;
                double t24871 = b2p*c*t24863;
                double t24872 = t24870+t24871+t24868+t24869;
                double t24873 = 1.0/t24872;
                double t24874 = t24836*t24873*(1.0/2.0);
                double t24875 = t24874+1.0;
                double t24876 = log(t24875);
                double t24877 = a1p*c*t24863;
                double t24878 = t24877+1.0;
                double t24879 = c0p*t24876*t24878*2.0;
                double t24880 = b1f*t24832;
                double t24881 = b3f*t24833;
                double t24882 = b4f*t24834*t24835;
                double t24883 = b2f*c*t24830;
                double t24884 = t24880+t24881+t24882+t24883;
                double t24885 = 1.0/t24884;
                double t24886 = t24862*t24885*(1.0/2.0);
                double t24887 = t24886+1.0;
                double t24888 = log(t24887);
                double t24889 = a1f*c*t24830;
                double t24890 = t24889+1.0;
                double t24891 = c0f*t24890*t24888*2.0;
                double t24892 = c0p*t24845*t24847*2.0;
                double t24893 = rho_a+rho_b;
                double t24894 = 1.0/pow(t24893,1.0/3.0);
                double t24895 = c*t24894;
                double t24896 = sqrt(t24895);
                double t24897 = pow(t24895,3.0/2.0);
                double t24898 = 1.0/pow(t24893,2.0/3.0);
                double t24899 = b1p*t24896;
                double t24900 = b3p*t24897;
                double t24901 = b4p*t24834*t24898;
                double t24902 = b2p*c*t24894;
                double t24903 = t24900+t24901+t24902+t24899;
                double t24904 = 1.0/t24903;
                double t24905 = t24904*t24836*(1.0/2.0);
                double t24906 = t24905+1.0;
                double t24907 = log(t24906);
                double t24908 = a1p*c*t24894;
                double t24909 = t24908+1.0;
                double t24910 = c0p*t24907*t24909*2.0;
                double t24911 = rho_a-rho_b;
                double t24912 = t24911*t24911;
                double t24913 = 1.0/t24893;
                double t24914 = t24911*t24913;
                double t24915 = 1.0/(t24893*t24893*t24893*t24893);
                double t24916 = t24912*t24912;
                double t24917 = t24914+1.0;
                double t24918 = pow(t24917,4.0/3.0);
                double t24919 = -t24914+1.0;
                double t24920 = pow(t24919,4.0/3.0);
                double t24921 = t24920+t24918-2.0;
                double t24922 = gcab*gcab;
                double t24926 = 1.0/pow(rho_a,8.0/3.0);
                double t24927 = gamma_aa*t24926*(1.0/2.0);
                double t24928 = gamma_bb*t24853*(1.0/2.0);
                double t24923 = t24927+t24928;
                double t24924 = t24923*t24923;
                double t24925 = 1.0/pow(rho_b,1.1E1/3.0);
                double t24929 = t24922*t24922;
                double t24930 = t24924*t24924;
                double t24931 = t24922*t24924*6.0;
                double t24932 = gcab*t24922*t24923*t24924*4.0;
                double t24933 = t24930*t24929;
                double t24934 = gcab*t24923*4.0;
                double t24935 = t24931+t24932+t24933+t24934+1.0;
                double t24936 = gcab*t24923;
                double t24937 = t24936+1.0;
                double t24938 = t24922*t24924;
                double t24939 = gcab*t24923*2.0;
                double t24940 = t24938+t24939+1.0;
                double t24941 = t24922*t24924*3.0;
                double t24942 = gcab*t24922*t24923*t24924;
                double t24943 = gcab*t24923*3.0;
                double t24944 = t24941+t24942+t24943+1.0;
                double t24945 = 1.0/t24940;
                double t24946 = 1.0/t24944;
                double t24947 = 1.0/t24937;
                double t24948 = 1.0/t24935;
                double t24949 = 1.0/pow(t24893,4.0/3.0);
                double t24950 = b1f*t24896;
                double t24951 = b3f*t24897;
                double t24952 = b4f*t24834*t24898;
                double t24953 = b2f*c*t24894;
                double t24954 = t24950+t24951+t24952+t24953;
                double t24955 = 1.0/t24954;
                double t24956 = t24862*t24955*(1.0/2.0);
                double t24957 = t24956+1.0;
                double t24958 = log(t24957);
                double t24959 = a1f*c*t24894;
                double t24960 = t24959+1.0;
                double t24962 = c0f*t24960*t24958*2.0;
                double t24961 = t24910-t24962;
                double t24963 = 1.0/(t24893*t24893);
                double t24964 = t24911*t24963;
                double t24965 = t24913+t24964;
                double t24966 = 1.0/pow(t24893,5.0/3.0);
                double t24967 = 1.0/sqrt(t24895);
                double t24968 = 1.0/t24906;
                double t24969 = 1.0/(t24903*t24903);
                double t24970 = b4p*t24834*t24966*(2.0/3.0);
                double t24971 = b2p*c*t24949*(1.0/3.0);
                double t24972 = b1p*c*t24949*t24967*(1.0/6.0);
                double t24973 = b3p*c*t24949*t24896*(1.0/2.0);
                double t24974 = t24970+t24971+t24972+t24973;
                double t24975 = 1.0/d2fz0;
                double t24976 = 1.0/Aa;
                double t24977 = b1a*t24896;
                double t24978 = b3a*t24897;
                double t24979 = b4a*t24834*t24898;
                double t24980 = b2a*c*t24894;
                double t24981 = t24980+t24977+t24978+t24979;
                double t24982 = 1.0/t24981;
                double t24983 = t24982*t24976*(1.0/2.0);
                double t24984 = t24983+1.0;
                double t24985 = log(t24984);
                double t24986 = a1a*c*t24894;
                double t24987 = t24986+1.0;
                double t24988 = 1.0/(t24893*t24893*t24893*t24893*t24893);
                double t24989 = pow(t24917,1.0/3.0);
                double t24990 = t24965*t24989*(4.0/3.0);
                double t24991 = pow(t24919,1.0/3.0);
                double t24992 = t24990-t24991*t24965*(4.0/3.0);
                double t24993 = t24915*t24916;
                double t24994 = t24993-1.0;
                double t24995 = t24909*t24974*t24968*t24969;
                double t24996 = 1.0/pow(rho_b,4.0/3.0);
                double t24997 = 1.0/pow(rho_b,5.0/3.0);
                double t24998 = 1.0/sqrt(t24831);
                double t24999 = 1.0/t24844;
                double t25000 = 1.0/(t24841*t24841);
                double t25001 = b4p*t24834*t24997*(2.0/3.0);
                double t25002 = b2p*c*t24996*(1.0/3.0);
                double t25003 = b1p*c*t24996*t24998*(1.0/6.0);
                double t25004 = b3p*c*t24832*t24996*(1.0/2.0);
                double t25005 = t25001+t25002+t25003+t25004;
                double t25006 = t24847*t24999*t25000*t25005;
                double t25007 = t24891-t24892;
                double t25008 = t24861*t24858*t25007;
                double t25009 = Aa*t24921*t24861*t24975*t24985*t24994*t24987*2.0;
                double t25010 = t24892+t25008;
                double t25011 = gamma_bb*gcaa*t24853*4.0;
                double t25012 = gamma_bb*gcaa*t24854*t24848*t24849*4.0;
                double t25013 = t24855*t24848*t24849*6.0;
                double t25014 = t24850*t24851*t24852;
                double t25015 = t25011+t25012+t25013+t25014+1.0;
                double t25016 = 1.0/t25015;
                double t25017 = gamma_bb*gcaa*t24853;
                double t25018 = t25017+1.0;
                double t25019 = 1.0/t25018;
                double t25020 = gamma_bb*gcaa*t24853*3.0;
                double t25021 = gamma_bb*gcaa*t24854*t24848*t24849;
                double t25022 = t24855*t24848*t24849*3.0;
                double t25023 = t25020+t25021+t25022+1.0;
                double t25024 = 1.0/t25023;
                double t25025 = gamma_bb*gcaa*t24853*2.0;
                double t25026 = t24855*t24848*t24849;
                double t25027 = t25025+t25026+1.0;
                double t25028 = 1.0/t25027;
                double t25029 = 1.0/pow(rho_b,1.9E1/3.0);
                double t25030 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t25031 = 1.0/pow(rho_b,3.5E1/3.0);
                double t25032 = 1.0/t24887;
                double t25033 = 1.0/(t24884*t24884);
                double t25034 = b4f*t24834*t24997*(2.0/3.0);
                double t25035 = b2f*c*t24996*(1.0/3.0);
                double t25036 = b1f*c*t24996*t24998*(1.0/6.0);
                double t25037 = b3f*c*t24832*t24996*(1.0/2.0);
                double t25038 = t25034+t25035+t25036+t25037;
                double t25039 = a1f*c*c0f*t24888*t24996*(2.0/3.0);
                double t25040 = a1p*c*c0p*t24845*t24996*(2.0/3.0);
                double t25041 = ccaa4*t24850*t24851*t24852*t25016;
                double t25042 = ccaa1*gamma_bb*gcaa*t24853*t25019;
                double t25043 = ccaa3*gamma_bb*gcaa*t24854*t24848*t24849*t25024;
                double t25044 = ccaa2*t24855*t24848*t24849*t25028;
                double t25045 = ccaa0+t25041+t25042+t25043+t25044;
                v_rho_b[Q] += scale * (-(ccab0+ccab1*gcab*t24923*t24947+ccab2*t24922*t24924*t24945+ccab4*t24930*t24929*t24948+ccab3*gcab*t24922*t24923*t24924*t24946)*(t24910-t24892-t25008+t25009+t24893*(t24995-t24921*t24861*t24915*t24916*(t24995-(t24960*1.0/(t24954*t24954)*(b2f*c*t24949*(1.0/3.0)+b4f*t24834*t24966*(2.0/3.0)+b1f*c*t24949*t24967*(1.0/6.0)+b3f*c*t24949*t24896*(1.0/2.0)))/t24957+a1f*c*c0f*t24949*t24958*(2.0/3.0)-a1p*c*c0p*t24907*t24949*(2.0/3.0))-a1p*c*c0p*t24907*t24949*(2.0/3.0)+t24861*t24915*t24916*t24961*t24992+t24921*t24861*t24916*t24961*t24988*4.0+t24911*t24912*t24921*t24861*t24915*t24961*4.0-Aa*t24921*t24861*t24975*t24985*t24987*(t24916*t24988*4.0+t24911*t24912*t24915*4.0)*2.0-Aa*t24861*t24992*t24975*t24985*t24994*t24987*2.0+(t24921*t24861*1.0/(t24981*t24981)*t24975*t24994*t24987*(b2a*c*t24949*(1.0/3.0)+b4a*t24834*t24966*(2.0/3.0)+b1a*c*t24949*t24967*(1.0/6.0)+b3a*c*t24949*t24896*(1.0/2.0)))/t24984-Aa*a1a*c*t24921*t24861*t24975*t24949*t24985*t24994*(2.0/3.0))+rho_b*(t25040-t25006+t24861*t24858*(t25006+t25039-t24890*t25032*t25033*t25038-a1p*c*c0p*t24845*t24996*(2.0/3.0)))-t24921*t24861*t24915*t24916*t24961)-t25045*(t24892+t24861*t24858*(t24891-c0p*t24845*t24847*2.0))-(rho_b*t25010+rho_a*(t24879-t24861*t24858*(t24879-c0f*log((t24862*(1.0/2.0))/(b1f*t24865+b3f*t24866+b2f*c*t24863+b4f*t24834*t24867)+1.0)*(a1f*c*t24863+1.0)*2.0))-t24893*(t24910+t25009-t24921*t24861*t24915*t24916*t24961))*(ccab1*gamma_bb*gcab*t24925*t24947*(4.0/3.0)-ccab2*t24922*1.0/(t24940*t24940)*t24924*(gamma_bb*gcab*t24925*(8.0/3.0)+gamma_bb*t24922*t24923*t24925*(8.0/3.0))-ccab4*t24930*1.0/(t24935*t24935)*t24929*(gamma_bb*gcab*t24925*(1.6E1/3.0)+gamma_bb*t24922*t24923*t24925*1.6E1+gamma_bb*gcab*t24922*t24924*t24925*1.6E1+gamma_bb*t24923*t24924*t24925*t24929*(1.6E1/3.0))-ccab1*gamma_bb*t24922*t24923*t24925*1.0/(t24937*t24937)*(4.0/3.0)+ccab2*gamma_bb*t24922*t24923*t24925*t24945*(8.0/3.0)-ccab3*gcab*t24922*t24923*t24924*1.0/(t24944*t24944)*(gamma_bb*gcab*t24925*4.0+gamma_bb*t24922*t24923*t24925*8.0+gamma_bb*gcab*t24922*t24924*t24925*4.0)+ccab3*gamma_bb*gcab*t24922*t24924*t24925*t24946*4.0+ccab4*gamma_bb*t24923*t24924*t24925*t24929*t24948*(1.6E1/3.0))+rho_b*t25010*(ccaa1*gamma_bb*gcaa*t24925*t25019*(8.0/3.0)+ccaa4*t24850*t24851*t25031*t25016*(3.2E1/3.0)+ccaa2*t24848*t24849*t25028*t25029*(1.6E1/3.0)-ccaa1*t24848*t24849*1.0/(t25018*t25018)*t25029*(8.0/3.0)-ccaa2*t24855*t24848*t24849*1.0/(t25027*t25027)*(gamma_bb*gcaa*t24925*(1.6E1/3.0)+t24848*t24849*t25029*(1.6E1/3.0))-ccaa4*t24850*t24851*t24852*1.0/(t25015*t25015)*(gamma_bb*gcaa*t24925*(3.2E1/3.0)+t24850*t24851*t25031*(3.2E1/3.0)+t24848*t24849*t25029*3.2E1+gamma_bb*gcaa*t24848*t24849*t25030*3.2E1)+ccaa3*gamma_bb*gcaa*t24848*t24849*t25030*t25024*8.0-ccaa3*gamma_bb*gcaa*t24854*t24848*t24849*1.0/(t25023*t25023)*(gamma_bb*gcaa*t24925*8.0+t24848*t24849*t25029*1.6E1+gamma_bb*gcaa*t24848*t24849*t25030*8.0))-rho_b*t25045*(-t25040+t25006+t24861*t24858*(t25040-t25006-t25039+t24890*t25032*t25033*t25038)));
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t25047 = 1.0/pow(rho_a,1.0/3.0);
                double t25048 = c*t25047;
                double t25049 = sqrt(t25048);
                double t25050 = pow(t25048,3.0/2.0);
                double t25051 = c*c;
                double t25052 = 1.0/pow(rho_a,2.0/3.0);
                double t25053 = 1.0/c0p;
                double t25054 = b1p*t25049;
                double t25055 = b3p*t25050;
                double t25056 = b4p*t25051*t25052;
                double t25057 = b2p*c*t25047;
                double t25058 = t25054+t25055+t25056+t25057;
                double t25059 = 1.0/t25058;
                double t25060 = t25053*t25059*(1.0/2.0);
                double t25061 = t25060+1.0;
                double t25062 = log(t25061);
                double t25063 = a1p*c*t25047;
                double t25064 = t25063+1.0;
                double t25065 = pow(2.0,1.0/3.0);
                double t25066 = t25065*2.0;
                double t25067 = t25066-2.0;
                double t25068 = two_13*2.0;
                double t25069 = t25068-2.0;
                double t25070 = 1.0/t25069;
                double t25071 = 1.0/c0f;
                double t25072 = 1.0/pow(rho_b,1.0/3.0);
                double t25073 = c*t25072;
                double t25074 = sqrt(t25073);
                double t25075 = pow(t25073,3.0/2.0);
                double t25076 = 1.0/pow(rho_b,2.0/3.0);
                double t25077 = b1p*t25074;
                double t25078 = b3p*t25075;
                double t25079 = b4p*t25051*t25076;
                double t25080 = b2p*c*t25072;
                double t25081 = t25080+t25077+t25078+t25079;
                double t25082 = 1.0/t25081;
                double t25083 = t25053*t25082*(1.0/2.0);
                double t25084 = t25083+1.0;
                double t25085 = log(t25084);
                double t25086 = a1p*c*t25072;
                double t25087 = t25086+1.0;
                double t25088 = c0p*t25085*t25087*2.0;
                double t25089 = rho_a+rho_b;
                double t25090 = 1.0/pow(t25089,1.0/3.0);
                double t25091 = c*t25090;
                double t25092 = sqrt(t25091);
                double t25093 = pow(t25091,3.0/2.0);
                double t25094 = 1.0/pow(t25089,2.0/3.0);
                double t25095 = b1p*t25092;
                double t25096 = b3p*t25093;
                double t25097 = b4p*t25051*t25094;
                double t25098 = b2p*c*t25090;
                double t25099 = t25095+t25096+t25097+t25098;
                double t25100 = 1.0/t25099;
                double t25101 = t25100*t25053*(1.0/2.0);
                double t25102 = t25101+1.0;
                double t25103 = log(t25102);
                double t25104 = a1p*c*t25090;
                double t25105 = t25104+1.0;
                double t25106 = c0p*t25103*t25105*2.0;
                double t25107 = rho_a-rho_b;
                double t25108 = t25107*t25107;
                double t25109 = 1.0/t25089;
                double t25110 = t25107*t25109;
                double t25111 = 1.0/(t25089*t25089*t25089*t25089);
                double t25112 = t25108*t25108;
                double t25113 = t25110+1.0;
                double t25114 = pow(t25113,4.0/3.0);
                double t25115 = -t25110+1.0;
                double t25116 = pow(t25115,4.0/3.0);
                double t25117 = t25114+t25116-2.0;
                double t25118 = 1.0/pow(rho_a,8.0/3.0);
                double t25119 = gamma_aa*t25118*(1.0/2.0);
                double t25120 = 1.0/pow(rho_b,8.0/3.0);
                double t25121 = gamma_bb*t25120*(1.0/2.0);
                double t25122 = t25121+t25119;
                double t25123 = gcab*t25122;
                double t25124 = t25123+1.0;
                double t25125 = gcab*gcab;
                double t25126 = t25122*t25122;
                double t25127 = t25125*t25125;
                double t25128 = t25126*t25126;
                double t25129 = t25125*t25126;
                double t25130 = gcab*t25122*2.0;
                double t25131 = t25130+t25129+1.0;
                double t25132 = t25125*t25126*3.0;
                double t25133 = gcab*t25122*t25125*t25126;
                double t25134 = gcab*t25122*3.0;
                double t25135 = t25132+t25133+t25134+1.0;
                double t25136 = t25125*t25126*6.0;
                double t25137 = gcab*t25122*t25125*t25126*4.0;
                double t25138 = t25127*t25128;
                double t25139 = gcab*t25122*4.0;
                double t25140 = t25136+t25137+t25138+t25139+1.0;
                double t25141 = c0p*t25062*t25064*2.0;
                double t25142 = b1f*t25049;
                double t25143 = b3f*t25050;
                double t25144 = b4f*t25051*t25052;
                double t25145 = b2f*c*t25047;
                double t25146 = t25142+t25143+t25144+t25145;
                double t25147 = 1.0/t25146;
                double t25148 = t25071*t25147*(1.0/2.0);
                double t25149 = t25148+1.0;
                double t25150 = log(t25149);
                double t25151 = a1f*c*t25047;
                double t25152 = t25151+1.0;
                double t25153 = t25141-c0f*t25150*t25152*2.0;
                double t25154 = t25141-t25070*t25153*t25067;
                double t25155 = gamma_aa*gamma_aa;
                double t25156 = gcaa*gcaa;
                double t25157 = t25156*t25156;
                double t25158 = 1.0/pow(rho_a,3.2E1/3.0);
                double t25159 = 1.0/pow(rho_a,1.6E1/3.0);
                double t25160 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t25161 = gamma_aa*gcaa*t25118;
                double t25162 = t25161+1.0;
                double t25163 = gamma_aa*gcaa*t25118*3.0;
                double t25164 = gamma_aa*gcaa*t25160*t25155*t25156;
                double t25165 = t25155*t25156*t25159*3.0;
                double t25166 = t25163+t25164+t25165+1.0;
                double t25167 = t25155*t25155;
                double t25168 = gamma_aa*gcaa*t25118*4.0;
                double t25169 = gamma_aa*gcaa*t25160*t25155*t25156*4.0;
                double t25170 = t25155*t25156*t25159*6.0;
                double t25171 = t25157*t25158*t25167;
                double t25172 = t25170+t25171+t25168+t25169+1.0;
                double t25173 = gamma_aa*gcaa*t25118*2.0;
                double t25174 = t25155*t25156*t25159;
                double t25175 = t25173+t25174+1.0;
                v_gamma_aa[Q] += scale * ((rho_a*t25154+rho_b*(t25088-t25070*t25067*(t25088-c0f*log((t25071*(1.0/2.0))/(b1f*t25074+b3f*t25075+b2f*c*t25072+b4f*t25051*t25076)+1.0)*(a1f*c*t25072+1.0)*2.0))-t25089*(t25106-t25111*t25112*t25070*t25117*(t25106-c0f*log((t25071*(1.0/2.0))/(b1f*t25092+b3f*t25093+b2f*c*t25090+b4f*t25051*t25094)+1.0)*(a1f*c*t25090+1.0)*2.0)+(Aa*t25070*t25117*log((1.0/2.0)/(Aa*(b1a*t25092+b3a*t25093+b2a*c*t25090+b4a*t25051*t25094))+1.0)*(t25111*t25112-1.0)*(a1a*c*t25090+1.0)*2.0)/d2fz0))*((ccab1*gcab*t25118*(1.0/2.0))/t25124-ccab4*1.0/(t25140*t25140)*t25127*t25128*(gcab*t25118*2.0+t25122*t25125*t25118*6.0+gcab*t25125*t25126*t25118*6.0+t25122*t25126*t25118*t25127*2.0)-ccab2*1.0/(t25131*t25131)*t25125*t25126*(gcab*t25118+t25122*t25125*t25118)+(ccab2*t25122*t25125*t25118)/t25131-ccab1*t25122*1.0/(t25124*t25124)*t25125*t25118*(1.0/2.0)+(ccab3*gcab*t25125*t25126*t25118*(3.0/2.0))/t25135+(ccab4*t25122*t25126*t25118*t25127*2.0)/t25140-ccab3*gcab*t25122*t25125*t25126*1.0/(t25135*t25135)*(gcab*t25118*(3.0/2.0)+t25122*t25125*t25118*3.0+gcab*t25125*t25126*t25118*(3.0/2.0)))-rho_a*t25154*((ccaa1*gcaa*t25118)/t25162-ccaa1*gamma_aa*1.0/(t25162*t25162)*t25156*t25159+(ccaa2*gamma_aa*t25156*t25159*2.0)/t25175-ccaa2*t25155*t25156*1.0/(t25175*t25175)*t25159*(gcaa*t25118*2.0+gamma_aa*t25156*t25159*2.0)+(ccaa4*gamma_aa*t25155*t25157*t25158*4.0)/t25172+(ccaa3*gcaa*t25160*t25155*t25156*3.0)/t25166-ccaa4*1.0/(t25172*t25172)*t25157*t25158*t25167*(gcaa*t25118*4.0+gamma_aa*t25156*t25159*1.2E1+gamma_aa*t25155*t25157*t25158*4.0+gcaa*t25160*t25155*t25156*1.2E1)-ccaa3*gamma_aa*gcaa*t25160*t25155*t25156*1.0/(t25166*t25166)*(gcaa*t25118*3.0+gamma_aa*t25156*t25159*6.0+gcaa*t25160*t25155*t25156*3.0)));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t25178 = 1.0/pow(rho_a,1.0/3.0);
                double t25179 = c*t25178;
                double t25180 = sqrt(t25179);
                double t25181 = pow(t25179,3.0/2.0);
                double t25182 = c*c;
                double t25183 = 1.0/pow(rho_a,2.0/3.0);
                double t25184 = 1.0/c0p;
                double t25185 = b1p*t25180;
                double t25186 = b3p*t25181;
                double t25187 = b4p*t25182*t25183;
                double t25188 = b2p*c*t25178;
                double t25189 = t25185+t25186+t25187+t25188;
                double t25190 = 1.0/t25189;
                double t25191 = t25190*t25184*(1.0/2.0);
                double t25192 = t25191+1.0;
                double t25193 = log(t25192);
                double t25194 = a1p*c*t25178;
                double t25195 = t25194+1.0;
                double t25196 = pow(2.0,1.0/3.0);
                double t25197 = t25196*2.0;
                double t25198 = t25197-2.0;
                double t25199 = two_13*2.0;
                double t25200 = t25199-2.0;
                double t25201 = 1.0/t25200;
                double t25202 = 1.0/c0f;
                double t25203 = 1.0/pow(rho_b,1.0/3.0);
                double t25204 = c*t25203;
                double t25205 = sqrt(t25204);
                double t25206 = pow(t25204,3.0/2.0);
                double t25207 = 1.0/pow(rho_b,2.0/3.0);
                double t25208 = b1p*t25205;
                double t25209 = b3p*t25206;
                double t25210 = b4p*t25207*t25182;
                double t25211 = b2p*c*t25203;
                double t25212 = t25210+t25211+t25208+t25209;
                double t25213 = 1.0/t25212;
                double t25214 = t25213*t25184*(1.0/2.0);
                double t25215 = t25214+1.0;
                double t25216 = log(t25215);
                double t25217 = a1p*c*t25203;
                double t25218 = t25217+1.0;
                double t25219 = c0p*t25216*t25218*2.0;
                double t25220 = rho_a+rho_b;
                double t25221 = 1.0/pow(t25220,1.0/3.0);
                double t25222 = c*t25221;
                double t25223 = sqrt(t25222);
                double t25224 = pow(t25222,3.0/2.0);
                double t25225 = 1.0/pow(t25220,2.0/3.0);
                double t25226 = b1p*t25223;
                double t25227 = b3p*t25224;
                double t25228 = b4p*t25225*t25182;
                double t25229 = b2p*c*t25221;
                double t25230 = t25226+t25227+t25228+t25229;
                double t25231 = 1.0/t25230;
                double t25232 = t25231*t25184*(1.0/2.0);
                double t25233 = t25232+1.0;
                double t25234 = log(t25233);
                double t25235 = a1p*c*t25221;
                double t25236 = t25235+1.0;
                double t25237 = c0p*t25234*t25236*2.0;
                double t25238 = rho_a-rho_b;
                double t25239 = t25238*t25238;
                double t25240 = 1.0/t25220;
                double t25241 = t25240*t25238;
                double t25242 = 1.0/(t25220*t25220*t25220*t25220);
                double t25243 = t25239*t25239;
                double t25244 = t25241+1.0;
                double t25245 = pow(t25244,4.0/3.0);
                double t25246 = -t25241+1.0;
                double t25247 = pow(t25246,4.0/3.0);
                double t25248 = t25245+t25247-2.0;
                double t25249 = 1.0/pow(rho_b,8.0/3.0);
                double t25250 = 1.0/pow(rho_a,8.0/3.0);
                double t25251 = gamma_aa*t25250*(1.0/2.0);
                double t25252 = gamma_bb*t25249*(1.0/2.0);
                double t25253 = t25251+t25252;
                double t25254 = gcab*t25253;
                double t25255 = t25254+1.0;
                double t25256 = gcab*gcab;
                double t25257 = t25253*t25253;
                double t25258 = t25256*t25256;
                double t25259 = t25257*t25257;
                double t25260 = t25256*t25257;
                double t25261 = gcab*t25253*2.0;
                double t25262 = t25260+t25261+1.0;
                double t25263 = t25256*t25257*3.0;
                double t25264 = gcab*t25253*t25256*t25257;
                double t25265 = gcab*t25253*3.0;
                double t25266 = t25263+t25264+t25265+1.0;
                double t25267 = t25256*t25257*6.0;
                double t25268 = gcab*t25253*t25256*t25257*4.0;
                double t25269 = t25258*t25259;
                double t25270 = gcab*t25253*4.0;
                double t25271 = t25270+t25267+t25268+t25269+1.0;
                double t25272 = c0p*t25193*t25195*2.0;
                double t25273 = b1f*t25205;
                double t25274 = b3f*t25206;
                double t25275 = b4f*t25207*t25182;
                double t25276 = b2f*c*t25203;
                double t25277 = t25273+t25274+t25275+t25276;
                double t25278 = 1.0/t25277;
                double t25279 = t25202*t25278*(1.0/2.0);
                double t25280 = t25279+1.0;
                double t25281 = log(t25280);
                double t25282 = a1f*c*t25203;
                double t25283 = t25282+1.0;
                double t25284 = t25219-c0f*t25281*t25283*2.0;
                double t25285 = t25219-t25201*t25284*t25198;
                double t25286 = gamma_bb*gamma_bb;
                double t25287 = gcaa*gcaa;
                double t25288 = t25287*t25287;
                double t25289 = 1.0/pow(rho_b,3.2E1/3.0);
                double t25290 = 1.0/pow(rho_b,1.6E1/3.0);
                double t25291 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t25292 = gamma_bb*gcaa*t25249;
                double t25293 = t25292+1.0;
                double t25294 = gamma_bb*gcaa*t25249*3.0;
                double t25295 = gamma_bb*gcaa*t25291*t25286*t25287;
                double t25296 = t25290*t25286*t25287*3.0;
                double t25297 = t25294+t25295+t25296+1.0;
                double t25298 = t25286*t25286;
                double t25299 = gamma_bb*gcaa*t25249*4.0;
                double t25300 = gamma_bb*gcaa*t25291*t25286*t25287*4.0;
                double t25301 = t25290*t25286*t25287*6.0;
                double t25302 = t25288*t25289*t25298;
                double t25303 = t25300+t25301+t25302+t25299+1.0;
                double t25304 = gamma_bb*gcaa*t25249*2.0;
                double t25305 = t25290*t25286*t25287;
                double t25306 = t25304+t25305+1.0;
                v_gamma_bb[Q] += scale * ((rho_b*t25285+rho_a*(t25272-t25201*t25198*(t25272-c0f*log((t25202*(1.0/2.0))/(b1f*t25180+b3f*t25181+b2f*c*t25178+b4f*t25182*t25183)+1.0)*(a1f*c*t25178+1.0)*2.0))-t25220*(t25237-t25201*t25242*t25243*t25248*(t25237-c0f*log((t25202*(1.0/2.0))/(b1f*t25223+b3f*t25224+b2f*c*t25221+b4f*t25225*t25182)+1.0)*(a1f*c*t25221+1.0)*2.0)+(Aa*t25201*t25248*log((1.0/2.0)/(Aa*(b1a*t25223+b3a*t25224+b2a*c*t25221+b4a*t25225*t25182))+1.0)*(t25242*t25243-1.0)*(a1a*c*t25221+1.0)*2.0)/d2fz0))*((ccab1*gcab*t25249*(1.0/2.0))/t25255-ccab4*1.0/(t25271*t25271)*t25258*t25259*(gcab*t25249*2.0+t25253*t25256*t25249*6.0+gcab*t25256*t25257*t25249*6.0+t25253*t25257*t25249*t25258*2.0)-ccab2*1.0/(t25262*t25262)*t25256*t25257*(gcab*t25249+t25253*t25256*t25249)+(ccab2*t25253*t25256*t25249)/t25262-ccab1*t25253*1.0/(t25255*t25255)*t25256*t25249*(1.0/2.0)+(ccab3*gcab*t25256*t25257*t25249*(3.0/2.0))/t25266+(ccab4*t25253*t25257*t25249*t25258*2.0)/t25271-ccab3*gcab*t25253*t25256*t25257*1.0/(t25266*t25266)*(gcab*t25249*(3.0/2.0)+t25253*t25256*t25249*3.0+gcab*t25256*t25257*t25249*(3.0/2.0)))-rho_b*t25285*((ccaa1*gcaa*t25249)/t25293+(ccaa2*gamma_bb*t25290*t25287*2.0)/t25306-ccaa1*gamma_bb*t25290*1.0/(t25293*t25293)*t25287-ccaa2*1.0/(t25306*t25306)*t25290*t25286*t25287*(gcaa*t25249*2.0+gamma_bb*t25290*t25287*2.0)+(ccaa4*gamma_bb*t25286*t25288*t25289*4.0)/t25303+(ccaa3*gcaa*t25291*t25286*t25287*3.0)/t25297-ccaa4*1.0/(t25303*t25303)*t25288*t25289*t25298*(gcaa*t25249*4.0+gamma_bb*t25290*t25287*1.2E1+gamma_bb*t25286*t25288*t25289*4.0+gcaa*t25291*t25286*t25287*1.2E1)-ccaa3*gamma_bb*gcaa*t25291*t25286*t25287*1.0/(t25297*t25297)*(gcaa*t25249*3.0+gamma_bb*t25290*t25287*6.0+gcaa*t25291*t25286*t25287*3.0)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t25310 = rho_a+rho_b;
                double t25311 = 1.0/pow(t25310,1.0/3.0);
                double t25312 = c*t25311;
                double t25313 = sqrt(t25312);
                double t25314 = b1p*t25313;
                double t25315 = pow(t25312,3.0/2.0);
                double t25316 = b3p*t25315;
                double t25317 = c*c;
                double t25318 = 1.0/pow(t25310,2.0/3.0);
                double t25319 = b4p*t25317*t25318;
                double t25320 = b2p*c*t25311;
                double t25321 = t25320+t25314+t25316+t25319;
                double t25322 = 1.0/pow(t25310,4.0/3.0);
                double t25323 = 1.0/c0p;
                double t25324 = 1.0/t25321;
                double t25325 = t25323*t25324*(1.0/2.0);
                double t25326 = t25325+1.0;
                double t25327 = a1p*c*t25311;
                double t25328 = t25327+1.0;
                double t25329 = rho_a-rho_b;
                double t25330 = t25329*t25329;
                double t25331 = 1.0/t25310;
                double t25332 = t25331*t25329;
                double t25333 = two_13*2.0;
                double t25334 = t25333-2.0;
                double t25335 = 1.0/t25334;
                double t25336 = 1.0/c0f;
                double t25337 = b1f*t25313;
                double t25338 = b3f*t25315;
                double t25339 = b4f*t25317*t25318;
                double t25340 = b2f*c*t25311;
                double t25341 = t25340+t25337+t25338+t25339;
                double t25342 = 1.0/t25341;
                double t25343 = t25342*t25336*(1.0/2.0);
                double t25344 = t25343+1.0;
                double t25345 = log(t25344);
                double t25346 = a1f*c*t25311;
                double t25347 = t25346+1.0;
                double t25348 = log(t25326);
                double t25358 = c0f*t25345*t25347*2.0;
                double t25359 = c0p*t25328*t25348*2.0;
                double t25349 = t25358-t25359;
                double t25350 = t25332+1.0;
                double t25351 = pow(t25350,4.0/3.0);
                double t25352 = -t25332+1.0;
                double t25353 = pow(t25352,4.0/3.0);
                double t25354 = t25351+t25353-2.0;
                double t25355 = 1.0/(t25310*t25310);
                double t25386 = t25355*t25329;
                double t25356 = t25331-t25386;
                double t25357 = 1.0/(t25310*t25310*t25310*t25310);
                double t25360 = t25330*t25330;
                double t25361 = 1.0/pow(t25310,5.0/3.0);
                double t25362 = 1.0/sqrt(t25312);
                double t25363 = 1.0/t25326;
                double t25364 = 1.0/(t25321*t25321);
                double t25365 = b4p*t25361*t25317*(2.0/3.0);
                double t25366 = b2p*c*t25322*(1.0/3.0);
                double t25367 = b1p*c*t25322*t25362*(1.0/6.0);
                double t25368 = b3p*c*t25313*t25322*(1.0/2.0);
                double t25369 = t25365+t25366+t25367+t25368;
                double t25370 = t25363*t25328*t25364*t25369;
                double t25371 = 1.0/(t25310*t25310*t25310*t25310*t25310);
                double t25372 = 1.0/d2fz0;
                double t25373 = 1.0/Aa;
                double t25374 = b1a*t25313;
                double t25375 = b3a*t25315;
                double t25376 = b4a*t25317*t25318;
                double t25377 = b2a*c*t25311;
                double t25378 = t25374+t25375+t25376+t25377;
                double t25379 = 1.0/t25378;
                double t25380 = t25373*t25379*(1.0/2.0);
                double t25381 = t25380+1.0;
                double t25382 = log(t25381);
                double t25383 = a1a*c*t25311;
                double t25384 = t25383+1.0;
                double t25385 = pow(t25350,1.0/3.0);
                double t25387 = t25356*t25385*(4.0/3.0);
                double t25388 = pow(t25352,1.0/3.0);
                double t25463 = t25356*t25388*(4.0/3.0);
                double t25389 = -t25463+t25387;
                double t25390 = t25360*t25357;
                double t25391 = t25390-1.0;
                double t25392 = 1.0/pow(rho_a,1.0/3.0);
                double t25393 = c*t25392;
                double t25394 = sqrt(t25393);
                double t25395 = b1f*t25394;
                double t25396 = pow(t25393,3.0/2.0);
                double t25397 = b3f*t25396;
                double t25398 = 1.0/pow(rho_a,2.0/3.0);
                double t25399 = b4f*t25317*t25398;
                double t25400 = b2f*c*t25392;
                double t25401 = t25400+t25395+t25397+t25399;
                double t25402 = 1.0/pow(rho_a,4.0/3.0);
                double t25403 = b1p*t25394;
                double t25404 = b3p*t25396;
                double t25405 = b4p*t25317*t25398;
                double t25406 = b2p*c*t25392;
                double t25407 = t25403+t25404+t25405+t25406;
                double t25408 = 1.0/pow(rho_a,5.0/3.0);
                double t25409 = 1.0/sqrt(t25393);
                double t25410 = 1.0/t25401;
                double t25411 = t25410*t25336*(1.0/2.0);
                double t25412 = t25411+1.0;
                double t25413 = 1.0/t25407;
                double t25414 = t25323*t25413*(1.0/2.0);
                double t25415 = t25414+1.0;
                double t25416 = a1p*c*t25392;
                double t25417 = t25416+1.0;
                double t25418 = 1.0/t25415;
                double t25419 = 1.0/(t25407*t25407);
                double t25420 = b4p*t25317*t25408*(2.0/3.0);
                double t25421 = b2p*c*t25402*(1.0/3.0);
                double t25422 = b1p*c*t25402*t25409*(1.0/6.0);
                double t25423 = b3p*c*t25402*t25394*(1.0/2.0);
                double t25424 = t25420+t25421+t25422+t25423;
                double t25425 = t25424*t25417*t25418*t25419;
                double t25426 = log(t25415);
                double t25427 = pow(2.0,1.0/3.0);
                double t25428 = t25427*2.0;
                double t25429 = t25428-2.0;
                double t25430 = log(t25412);
                double t25431 = a1f*c*t25392;
                double t25432 = t25431+1.0;
                double t25433 = gcab*gcab;
                double t25437 = 1.0/pow(rho_a,8.0/3.0);
                double t25438 = gamma_aa*t25437*(1.0/2.0);
                double t25439 = 1.0/pow(rho_b,8.0/3.0);
                double t25440 = gamma_bb*t25439*(1.0/2.0);
                double t25434 = t25440+t25438;
                double t25435 = t25434*t25434;
                double t25436 = 1.0/pow(rho_a,1.1E1/3.0);
                double t25441 = t25433*t25433;
                double t25442 = t25435*t25435;
                double t25443 = t25433*t25435*6.0;
                double t25444 = gcab*t25433*t25434*t25435*4.0;
                double t25445 = t25441*t25442;
                double t25446 = gcab*t25434*4.0;
                double t25447 = t25443+t25444+t25445+t25446+1.0;
                double t25448 = gcab*t25434;
                double t25449 = t25448+1.0;
                double t25450 = t25433*t25435;
                double t25451 = gcab*t25434*2.0;
                double t25452 = t25450+t25451+1.0;
                double t25453 = t25433*t25435*3.0;
                double t25454 = gcab*t25433*t25434*t25435;
                double t25455 = gcab*t25434*3.0;
                double t25456 = t25453+t25454+t25455+1.0;
                double t25457 = 1.0/t25452;
                double t25458 = 1.0/t25456;
                double t25459 = 1.0/t25449;
                double t25460 = 1.0/t25447;
                double t25461 = 1.0/pow(t25310,7.0/3.0);
                double t25462 = 1.0/pow(t25310,8.0/3.0);
                double t25464 = 1.0/t25344;
                double t25465 = 1.0/(t25341*t25341);
                double t25466 = b4f*t25361*t25317*(2.0/3.0);
                double t25467 = b2f*c*t25322*(1.0/3.0);
                double t25468 = b1f*c*t25322*t25362*(1.0/6.0);
                double t25469 = b3f*c*t25313*t25322*(1.0/2.0);
                double t25470 = t25466+t25467+t25468+t25469;
                double t25471 = a1f*c*c0f*t25322*t25345*(2.0/3.0);
                double t25473 = t25470*t25347*t25464*t25465;
                double t25474 = a1p*c*c0p*t25322*t25348*(2.0/3.0);
                double t25472 = t25370+t25471-t25473-t25474;
                double t25475 = t25369*t25369;
                double t25476 = 1.0/pow(t25312,3.0/2.0);
                double t25477 = b4p*t25317*t25462*(1.0E1/9.0);
                double t25478 = b2p*c*t25461*(4.0/9.0);
                double t25479 = b1p*c*t25362*t25461*(2.0/9.0);
                double t25480 = b3p*c*t25313*t25461*(2.0/3.0);
                double t25481 = b3p*t25317*t25362*t25462*(1.0/1.2E1);
                double t25482 = t25480+t25481+t25477+t25478+t25479-b1p*t25317*t25462*t25476*(1.0/3.6E1);
                double t25483 = 1.0/(t25321*t25321*t25321);
                double t25484 = t25363*t25328*t25483*t25475*2.0;
                double t25485 = t25470*t25470;
                double t25486 = 1.0/(t25326*t25326);
                double t25487 = 1.0/(t25321*t25321*t25321*t25321);
                double t25488 = t25355*2.0;
                double t25489 = 1.0/(t25310*t25310*t25310);
                double t25496 = t25329*t25489*2.0;
                double t25490 = -t25496+t25488;
                double t25491 = t25356*t25356;
                double t25492 = a1p*c*c0p*t25461*t25348*(8.0/9.0);
                double t25493 = 1.0/(t25310*t25310*t25310*t25310*t25310*t25310);
                double t25494 = t25360*t25371*4.0;
                double t25504 = t25330*t25329*t25357*4.0;
                double t25495 = -t25504+t25494;
                double t25497 = t25490*t25388*(4.0/3.0);
                double t25498 = 1.0/pow(t25350,2.0/3.0);
                double t25499 = t25491*t25498*(4.0/9.0);
                double t25500 = 1.0/pow(t25352,2.0/3.0);
                double t25501 = t25500*t25491*(4.0/9.0);
                double t25502 = t25501+t25497+t25499-t25490*t25385*(4.0/3.0);
                double t25503 = 1.0/t25381;
                double t25505 = 1.0/(t25378*t25378);
                double t25506 = b4a*t25361*t25317*(2.0/3.0);
                double t25507 = b2a*c*t25322*(1.0/3.0);
                double t25508 = b1a*c*t25322*t25362*(1.0/6.0);
                double t25509 = b3a*c*t25313*t25322*(1.0/2.0);
                double t25510 = t25506+t25507+t25508+t25509;
                double t25511 = t25510*t25510;
                double t25512 = t25504-t25494;
                double t25513 = t25363*t25328*t25364*t25482;
                double t25514 = t25323*t25328*t25475*t25486*t25487*(1.0/2.0);
                double t25515 = a1p*c*t25322*t25363*t25364*t25369*(2.0/3.0);
                double t25516 = 1.0/t25412;
                double t25517 = b4f*t25317*t25408*(2.0/3.0);
                double t25518 = b2f*c*t25402*(1.0/3.0);
                double t25519 = b1f*c*t25402*t25409*(1.0/6.0);
                double t25520 = b3f*c*t25402*t25394*(1.0/2.0);
                double t25521 = t25520+t25517+t25518+t25519;
                double t25522 = 1.0/(t25401*t25401);
                double t25523 = 1.0/pow(rho_a,7.0/3.0);
                double t25524 = 1.0/pow(t25393,3.0/2.0);
                double t25525 = t25521*t25521;
                double t25526 = t25424*t25424;
                double t25527 = 1.0/(t25407*t25407*t25407);
                double t25528 = t25417*t25418*t25526*t25527*2.0;
                double t25529 = b4p*t25317*t25437*(1.0E1/9.0);
                double t25530 = b2p*c*t25523*(4.0/9.0);
                double t25531 = b3p*t25317*t25409*t25437*(1.0/1.2E1);
                double t25532 = b1p*c*t25523*t25409*(2.0/9.0);
                double t25533 = b3p*c*t25523*t25394*(2.0/3.0);
                double t25648 = b1p*t25317*t25524*t25437*(1.0/3.6E1);
                double t25534 = t25530+t25531+t25532+t25533+t25529-t25648;
                double t25535 = 1.0/(t25415*t25415);
                double t25536 = 1.0/(t25407*t25407*t25407*t25407);
                double t25537 = a1p*c*c0p*t25523*t25426*(8.0/9.0);
                double t25538 = a1f*c*c0f*t25402*t25430*(2.0/3.0);
                double t25539 = a1p*c*c0p*t25402*t25426*(2.0/3.0);
                double t25611 = t25521*t25432*t25522*t25516;
                double t25540 = -t25611+t25425+t25538-t25539;
                double t25541 = gamma_aa*gamma_aa;
                double t25542 = gcaa*gcaa;
                double t25543 = t25541*t25541;
                double t25544 = t25542*t25542;
                double t25545 = 1.0/pow(rho_a,3.2E1/3.0);
                double t25546 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t25547 = 1.0/pow(rho_a,1.6E1/3.0);
                double t25548 = c0f*t25430*t25432*2.0;
                double t25550 = c0p*t25417*t25426*2.0;
                double t25549 = -t25550+t25548;
                double t25551 = 1.0/pow(rho_b,1.0/3.0);
                double t25552 = c*t25551;
                double t25553 = sqrt(t25552);
                double t25554 = pow(t25552,3.0/2.0);
                double t25555 = 1.0/pow(rho_b,2.0/3.0);
                double t25556 = b1p*t25553;
                double t25557 = b3p*t25554;
                double t25558 = b4p*t25317*t25555;
                double t25559 = b2p*c*t25551;
                double t25560 = t25556+t25557+t25558+t25559;
                double t25561 = 1.0/t25560;
                double t25562 = t25323*t25561*(1.0/2.0);
                double t25563 = t25562+1.0;
                double t25564 = log(t25563);
                double t25565 = a1p*c*t25551;
                double t25566 = t25565+1.0;
                double t25567 = c0p*t25564*t25566*2.0;
                double t25568 = t25360*t25335*t25354*t25357*t25349;
                double t25569 = Aa*t25335*t25354*t25372*t25382*t25391*t25384*2.0;
                double t25570 = gamma_aa*gcab*t25436*(1.6E1/3.0);
                double t25571 = gamma_aa*gcab*t25433*t25435*t25436*1.6E1;
                double t25572 = gamma_aa*t25441*t25434*t25435*t25436*(1.6E1/3.0);
                double t25573 = gamma_aa*t25433*t25434*t25436*1.6E1;
                double t25574 = t25570+t25571+t25572+t25573;
                double t25575 = 1.0/(t25449*t25449);
                double t25576 = 1.0/pow(rho_a,2.2E1/3.0);
                double t25577 = gamma_aa*gcab*t25436*(8.0/3.0);
                double t25578 = gamma_aa*t25433*t25434*t25436*(8.0/3.0);
                double t25579 = t25577+t25578;
                double t25580 = 1.0/(t25456*t25456);
                double t25581 = 1.0/pow(rho_a,1.4E1/3.0);
                double t25582 = 1.0/(t25447*t25447);
                double t25583 = 1.0/(t25452*t25452);
                double t25584 = gamma_aa*gcab*t25436*4.0;
                double t25585 = gamma_aa*gcab*t25433*t25435*t25436*4.0;
                double t25586 = gamma_aa*t25433*t25434*t25436*8.0;
                double t25587 = t25584+t25585+t25586;
                double t25588 = t25335*t25429*t25549;
                double t25589 = t25550+t25588;
                double t25590 = gamma_aa*gcaa*t25437*4.0;
                double t25591 = gamma_aa*gcaa*t25541*t25542*t25546*4.0;
                double t25592 = t25541*t25542*t25547*6.0;
                double t25593 = t25543*t25544*t25545;
                double t25594 = t25590+t25591+t25592+t25593+1.0;
                double t25595 = 1.0/t25594;
                double t25596 = gamma_aa*gcaa*t25437;
                double t25597 = t25596+1.0;
                double t25598 = 1.0/t25597;
                double t25599 = gamma_aa*gcaa*t25437*3.0;
                double t25600 = gamma_aa*gcaa*t25541*t25542*t25546;
                double t25601 = t25541*t25542*t25547*3.0;
                double t25602 = t25600+t25601+t25599+1.0;
                double t25603 = 1.0/t25602;
                double t25604 = gamma_aa*gcaa*t25437*2.0;
                double t25605 = t25541*t25542*t25547;
                double t25606 = t25604+t25605+1.0;
                double t25607 = 1.0/t25606;
                double t25608 = 1.0/pow(rho_a,1.9E1/3.0);
                double t25609 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t25610 = 1.0/pow(rho_a,3.5E1/3.0);
                double t25612 = ccaa4*t25610*t25543*t25544*t25595*(3.2E1/3.0);
                double t25613 = ccaa1*gamma_aa*gcaa*t25436*t25598*(8.0/3.0);
                double t25614 = ccaa3*gamma_aa*gcaa*t25603*t25541*t25542*t25609*8.0;
                double t25615 = ccaa2*t25541*t25542*t25607*t25608*(1.6E1/3.0);
                double t25616 = 1.0/(t25597*t25597);
                double t25617 = gamma_aa*gcaa*t25436*8.0;
                double t25618 = gamma_aa*gcaa*t25541*t25542*t25609*8.0;
                double t25619 = t25541*t25542*t25608*1.6E1;
                double t25620 = t25617+t25618+t25619;
                double t25621 = 1.0/(t25602*t25602);
                double t25622 = gamma_aa*gcaa*t25436*(3.2E1/3.0);
                double t25623 = gamma_aa*gcaa*t25541*t25542*t25609*3.2E1;
                double t25624 = t25541*t25542*t25608*3.2E1;
                double t25625 = t25610*t25543*t25544*(3.2E1/3.0);
                double t25626 = t25622+t25623+t25624+t25625;
                double t25627 = 1.0/(t25594*t25594);
                double t25628 = gamma_aa*gcaa*t25436*(1.6E1/3.0);
                double t25629 = t25541*t25542*t25608*(1.6E1/3.0);
                double t25630 = t25628+t25629;
                double t25631 = 1.0/(t25606*t25606);
                double t25632 = t25612+t25613+t25614+t25615-ccaa1*t25541*t25542*t25616*t25608*(8.0/3.0)-ccaa2*t25630*t25541*t25631*t25542*t25547-ccaa4*t25543*t25544*t25545*t25626*t25627-ccaa3*gamma_aa*gcaa*t25620*t25621*t25541*t25542*t25546;
                double t25633 = 1.0/pow(rho_a,1.0E1);
                double t25634 = 1.0/pow(rho_a,3.8E1/3.0);
                double t25635 = ccaa4*t25543*t25544*t25545*t25595;
                double t25636 = ccaa1*gamma_aa*gcaa*t25437*t25598;
                double t25637 = ccaa3*gamma_aa*gcaa*t25603*t25541*t25542*t25546;
                double t25638 = ccaa2*t25541*t25542*t25607*t25547;
                double t25639 = ccaa0+t25635+t25636+t25637+t25638;
                double t25640 = 1.0/(t25401*t25401*t25401);
                double t25641 = b4f*t25317*t25437*(1.0E1/9.0);
                double t25642 = b2f*c*t25523*(4.0/9.0);
                double t25643 = b3f*t25317*t25409*t25437*(1.0/1.2E1);
                double t25644 = b1f*c*t25523*t25409*(2.0/9.0);
                double t25645 = b3f*c*t25523*t25394*(2.0/3.0);
                double t25646 = t25641+t25642+t25643+t25644+t25645-b1f*t25317*t25524*t25437*(1.0/3.6E1);
                double t25647 = t25432*t25522*t25516*t25646;
                double t25649 = t25417*t25534*t25418*t25419;
                double t25650 = 1.0/(t25412*t25412);
                double t25651 = 1.0/(t25401*t25401*t25401*t25401);
                double t25652 = t25432*t25650*t25336*t25525*t25651*(1.0/2.0);
                double t25653 = t25323*t25417*t25526*t25535*t25536*(1.0/2.0);
                double t25654 = a1f*c*t25402*t25521*t25522*t25516*(2.0/3.0);
                double t25655 = a1p*c*t25402*t25424*t25418*t25419*(2.0/3.0);
                v_rho_a_rho_a[Q] += scale * (-(ccab0+ccab1*gcab*t25434*t25459+ccab4*t25441*t25442*t25460+ccab2*t25433*t25435*t25457+ccab3*gcab*t25433*t25434*t25435*t25458)*(rho_a*(t25653-t25528-t25537+t25655+t25649+t25335*t25429*(t25652+t25528+t25537+t25654+t25647-t25432*t25640*t25516*t25525*2.0-t25417*t25534*t25418*t25419-a1f*c*c0f*t25430*t25523*(8.0/9.0)-t25323*t25417*t25526*t25535*t25536*(1.0/2.0)-a1p*c*t25402*t25424*t25418*t25419*(2.0/3.0)))+t25310*(-t25513-t25514-t25515+t25492+t25484+t25360*t25335*t25354*t25357*(t25513+t25514+t25515-t25492-t25484+1.0/(t25341*t25341*t25341)*t25347*t25464*t25485*2.0-t25347*t25464*t25465*(b2f*c*t25461*(4.0/9.0)+b4f*t25317*t25462*(1.0E1/9.0)+b1f*c*t25362*t25461*(2.0/9.0)+b3f*c*t25313*t25461*(2.0/3.0)-b1f*t25317*t25462*t25476*(1.0/3.6E1)+b3f*t25317*t25362*t25462*(1.0/1.2E1))-1.0/(t25341*t25341*t25341*t25341)*1.0/(t25344*t25344)*t25336*t25347*t25485*(1.0/2.0)+a1f*c*c0f*t25461*t25345*(8.0/9.0)-a1f*c*t25322*t25470*t25464*t25465*(2.0/3.0))+t25360*t25335*t25371*t25354*t25472*8.0+t25502*t25360*t25335*t25357*t25349+t25330*t25335*t25354*t25357*t25349*1.2E1+t25360*t25335*t25354*t25349*t25493*2.0E1-t25360*t25335*t25371*t25349*t25389*8.0-t25360*t25335*t25472*t25357*t25389*2.0-t25330*t25335*t25371*t25354*t25329*t25349*3.2E1-t25330*t25335*t25354*t25472*t25329*t25357*8.0+t25330*t25335*t25329*t25357*t25349*t25389*8.0+Aa*t25502*t25335*t25372*t25382*t25391*t25384*2.0-Aa*t25335*t25372*t25382*t25384*t25495*t25389*4.0+Aa*t25335*t25354*t25372*t25382*t25384*(t25330*t25357*1.2E1+t25360*t25493*2.0E1-t25330*t25371*t25329*3.2E1)*2.0+t25510*t25503*t25512*t25505*t25335*t25354*t25372*t25384*2.0+t25510*t25503*t25505*t25335*t25372*t25391*t25384*t25389*2.0+t25511*t25503*t25335*t25354*t25372*t25391*t25384*1.0/(t25378*t25378*t25378)*2.0-t25503*t25505*t25335*t25354*t25372*t25391*t25384*(b2a*c*t25461*(4.0/9.0)+b4a*t25317*t25462*(1.0E1/9.0)+b1a*c*t25362*t25461*(2.0/9.0)+b3a*c*t25313*t25461*(2.0/3.0)-b1a*t25317*t25462*t25476*(1.0/3.6E1)+b3a*t25317*t25362*t25462*(1.0/1.2E1))-Aa*a1a*c*t25322*t25512*t25335*t25354*t25372*t25382*(4.0/3.0)+Aa*a1a*c*t25335*t25461*t25354*t25372*t25382*t25391*(8.0/9.0)-Aa*a1a*c*t25322*t25335*t25372*t25382*t25391*t25389*(4.0/3.0)-t25511*t25335*t25354*t25372*1.0/(t25381*t25381)*t25373*t25391*t25384*1.0/(t25378*t25378*t25378*t25378)*(1.0/2.0)-a1a*c*t25510*t25322*t25503*t25505*t25335*t25354*t25372*t25391*(2.0/3.0))+t25540*t25335*t25429*2.0-t25424*t25417*t25418*t25419*2.0+t25363*t25328*t25364*t25369*2.0+a1p*c*c0p*t25402*t25426*(4.0/3.0)-a1p*c*c0p*t25322*t25348*(4.0/3.0)-t25360*t25335*t25371*t25354*t25349*8.0-t25360*t25335*t25354*t25472*t25357*2.0+t25360*t25335*t25357*t25349*t25389*2.0+t25330*t25335*t25354*t25329*t25357*t25349*8.0+Aa*t25512*t25335*t25354*t25372*t25382*t25384*4.0+Aa*t25335*t25372*t25382*t25391*t25384*t25389*4.0+t25510*t25503*t25505*t25335*t25354*t25372*t25391*t25384*2.0-Aa*a1a*c*t25322*t25335*t25354*t25372*t25382*t25391*(4.0/3.0))+(rho_a*t25589+rho_b*(t25567-t25335*t25429*(t25567-c0f*log((t25336*(1.0/2.0))/(b1f*t25553+b3f*t25554+b2f*c*t25551+b4f*t25317*t25555)+1.0)*(a1f*c*t25551+1.0)*2.0))-t25310*(t25359+t25568+t25569))*(-ccab2*t25433*t25435*t25583*(gamma_aa*gcab*t25581*(8.8E1/9.0)+t25433*t25541*t25576*(3.2E1/9.0)+gamma_aa*t25433*t25434*t25581*(8.8E1/9.0))+ccab4*t25441*t25442*1.0/(t25447*t25447*t25447)*(t25574*t25574)*2.0+ccab2*t25433*1.0/(t25452*t25452*t25452)*t25435*(t25579*t25579)*2.0+ccab1*gamma_aa*gcab*t25581*t25459*(4.4E1/9.0)-ccab1*t25433*t25541*t25575*t25576*(3.2E1/9.0)+ccab2*t25433*t25541*t25457*t25576*(3.2E1/9.0)-ccab4*t25441*t25442*t25582*(gamma_aa*gcab*t25581*(1.76E2/9.0)+t25433*t25541*t25576*(6.4E1/3.0)+gamma_aa*t25433*t25434*t25581*(1.76E2/3.0)+t25441*t25541*t25435*t25576*(6.4E1/3.0)+gamma_aa*gcab*t25433*t25435*t25581*(1.76E2/3.0)+gamma_aa*t25441*t25434*t25435*t25581*(1.76E2/9.0)+gcab*t25433*t25541*t25434*t25576*(1.28E2/3.0))+ccab4*t25441*t25460*t25541*t25435*t25576*(6.4E1/3.0)-ccab1*gamma_aa*t25433*t25434*t25581*t25575*(4.4E1/9.0)+ccab2*gamma_aa*t25433*t25434*t25581*t25457*(8.8E1/9.0)+ccab3*gcab*t25433*t25434*t25435*1.0/(t25456*t25456*t25456)*(t25587*t25587)*2.0+ccab3*gamma_aa*gcab*t25433*t25435*t25581*t25458*(4.4E1/3.0)+ccab4*gamma_aa*t25441*t25460*t25434*t25435*t25581*(1.76E2/9.0)-ccab2*gamma_aa*t25433*t25434*t25436*t25583*t25579*(1.6E1/3.0)+ccab3*gcab*t25433*t25541*t25434*t25458*t25576*(3.2E1/3.0)+ccab1*gcab*t25433*t25541*t25434*1.0/(t25449*t25449*t25449)*t25576*(3.2E1/9.0)-ccab3*gcab*t25433*t25434*t25435*t25580*(gamma_aa*gcab*t25581*(4.4E1/3.0)+t25433*t25541*t25576*(3.2E1/3.0)+gamma_aa*t25433*t25434*t25581*(8.8E1/3.0)+gamma_aa*gcab*t25433*t25435*t25581*(4.4E1/3.0)+gcab*t25433*t25541*t25434*t25576*(3.2E1/3.0))-ccab3*gamma_aa*gcab*t25433*t25435*t25436*t25580*t25587*8.0-ccab4*gamma_aa*t25441*t25434*t25435*t25436*t25582*t25574*(3.2E1/3.0))+t25639*(-t25425+t25539+t25540*t25335*t25429)*2.0+t25632*t25589*2.0+(t25359+t25568+t25569+rho_a*(-t25425+t25539+t25335*t25429*(t25425+t25538-t25521*t25432*t25522*t25516-a1p*c*c0p*t25402*t25426*(2.0/3.0)))+t25310*(t25370-a1p*c*c0p*t25322*t25348*(2.0/3.0)-t25360*t25335*t25371*t25354*t25349*4.0-t25360*t25335*t25354*t25472*t25357+t25360*t25335*t25357*t25349*t25389+t25330*t25335*t25354*t25329*t25357*t25349*4.0-Aa*t25335*t25354*t25372*t25382*t25384*t25495*2.0+Aa*t25335*t25372*t25382*t25391*t25384*t25389*2.0+t25510*t25503*t25505*t25335*t25354*t25372*t25391*t25384-Aa*a1a*c*t25322*t25335*t25354*t25372*t25382*t25391*(2.0/3.0))-c0p*t25417*t25426*2.0-t25335*t25429*t25549)*(ccab1*gamma_aa*gcab*t25436*t25459*(4.0/3.0)-ccab4*t25441*t25442*t25582*t25574-ccab2*t25433*t25435*t25583*t25579-ccab1*gamma_aa*t25433*t25434*t25436*t25575*(4.0/3.0)+ccab2*gamma_aa*t25433*t25434*t25436*t25457*(8.0/3.0)+ccab3*gamma_aa*gcab*t25433*t25435*t25436*t25458*4.0+ccab4*gamma_aa*t25441*t25460*t25434*t25435*t25436*(1.6E1/3.0)-ccab3*gcab*t25433*t25434*t25435*t25580*t25587)*2.0+rho_a*t25632*(t25425-t25539+t25335*t25429*(t25611-t25425-t25538+t25539))*2.0-rho_a*t25589*(ccaa1*gamma_aa*gcaa*t25581*t25598*(8.8E1/9.0)-ccaa1*t25541*t25542*t25616*t25576*2.4E1+ccaa2*t25541*t25542*t25607*t25576*(3.04E2/9.0)+ccaa4*t25543*t25544*t25634*t25595*(1.12E3/9.0)-ccaa2*t25630*t25541*t25631*t25542*t25608*(3.2E1/3.0)-ccaa4*t25610*t25543*t25544*t25626*t25627*(6.4E1/3.0)-ccaa2*t25541*t25631*t25542*t25547*(gamma_aa*gcaa*t25581*(1.76E2/9.0)+t25541*t25542*t25576*(3.04E2/9.0))-ccaa4*t25543*t25544*t25545*t25627*(gamma_aa*gcaa*t25581*(3.52E2/9.0)+t25543*t25544*t25634*(1.12E3/9.0)+t25541*t25542*t25576*(6.08E2/3.0)+gamma_aa*gcaa*t25541*t25542*t25633*2.88E2)+ccaa2*(t25630*t25630)*t25541*t25542*1.0/(t25606*t25606*t25606)*t25547*2.0+ccaa4*t25543*t25544*t25545*(t25626*t25626)*1.0/(t25594*t25594*t25594)*2.0+ccaa3*gamma_aa*gcaa*t25603*t25541*t25542*t25633*7.2E1+ccaa1*gamma_aa*gcaa*t25541*t25542*t25633*1.0/(t25597*t25597*t25597)*(1.28E2/9.0)+ccaa3*gamma_aa*gcaa*1.0/(t25602*t25602*t25602)*(t25620*t25620)*t25541*t25542*t25546*2.0-ccaa3*gamma_aa*gcaa*t25621*t25541*t25542*t25546*(gamma_aa*gcaa*t25581*(8.8E1/3.0)+t25541*t25542*t25576*(3.04E2/3.0)+gamma_aa*gcaa*t25541*t25542*t25633*7.2E1)-ccaa3*gamma_aa*gcaa*t25620*t25621*t25541*t25542*t25609*1.6E1)+rho_a*t25639*(t25653-t25528-t25537+t25655+t25649+t25335*t25429*(t25652-t25653+t25528+t25537+t25654-t25655+t25647-t25649-t25432*t25640*t25516*t25525*2.0-a1f*c*c0f*t25430*t25523*(8.0/9.0))));
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t25657 = rho_a+rho_b;
                double t25658 = 1.0/pow(t25657,1.0/3.0);
                double t25659 = c*t25658;
                double t25660 = sqrt(t25659);
                double t25661 = b1p*t25660;
                double t25662 = pow(t25659,3.0/2.0);
                double t25663 = b3p*t25662;
                double t25664 = c*c;
                double t25665 = 1.0/pow(t25657,2.0/3.0);
                double t25666 = b4p*t25664*t25665;
                double t25667 = b2p*c*t25658;
                double t25668 = t25661+t25663+t25666+t25667;
                double t25669 = 1.0/pow(t25657,4.0/3.0);
                double t25670 = 1.0/c0p;
                double t25671 = 1.0/t25668;
                double t25672 = t25670*t25671*(1.0/2.0);
                double t25673 = t25672+1.0;
                double t25674 = a1p*c*t25658;
                double t25675 = t25674+1.0;
                double t25676 = rho_a-rho_b;
                double t25677 = t25676*t25676;
                double t25678 = 1.0/t25657;
                double t25679 = t25676*t25678;
                double t25680 = two_13*2.0;
                double t25681 = t25680-2.0;
                double t25682 = 1.0/t25681;
                double t25683 = 1.0/c0f;
                double t25684 = b1f*t25660;
                double t25685 = b3f*t25662;
                double t25686 = b4f*t25664*t25665;
                double t25687 = b2f*c*t25658;
                double t25688 = t25684+t25685+t25686+t25687;
                double t25689 = 1.0/t25688;
                double t25690 = t25683*t25689*(1.0/2.0);
                double t25691 = t25690+1.0;
                double t25692 = log(t25691);
                double t25693 = a1f*c*t25658;
                double t25694 = t25693+1.0;
                double t25695 = log(t25673);
                double t25705 = c0f*t25692*t25694*2.0;
                double t25706 = c0p*t25675*t25695*2.0;
                double t25696 = t25705-t25706;
                double t25697 = t25679+1.0;
                double t25698 = pow(t25697,4.0/3.0);
                double t25699 = -t25679+1.0;
                double t25700 = pow(t25699,4.0/3.0);
                double t25701 = t25700+t25698-2.0;
                double t25702 = 1.0/(t25657*t25657);
                double t25733 = t25702*t25676;
                double t25703 = -t25733+t25678;
                double t25704 = 1.0/(t25657*t25657*t25657*t25657);
                double t25707 = t25677*t25677;
                double t25708 = 1.0/pow(t25657,5.0/3.0);
                double t25709 = 1.0/sqrt(t25659);
                double t25710 = 1.0/t25673;
                double t25711 = 1.0/(t25668*t25668);
                double t25712 = b4p*t25708*t25664*(2.0/3.0);
                double t25713 = b2p*c*t25669*(1.0/3.0);
                double t25714 = b1p*c*t25709*t25669*(1.0/6.0);
                double t25715 = b3p*c*t25660*t25669*(1.0/2.0);
                double t25716 = t25712+t25713+t25714+t25715;
                double t25717 = t25710*t25711*t25716*t25675;
                double t25718 = 1.0/(t25657*t25657*t25657*t25657*t25657);
                double t25719 = 1.0/d2fz0;
                double t25720 = 1.0/Aa;
                double t25721 = b1a*t25660;
                double t25722 = b3a*t25662;
                double t25723 = b4a*t25664*t25665;
                double t25724 = b2a*c*t25658;
                double t25725 = t25721+t25722+t25723+t25724;
                double t25726 = 1.0/t25725;
                double t25727 = t25720*t25726*(1.0/2.0);
                double t25728 = t25727+1.0;
                double t25729 = log(t25728);
                double t25730 = a1a*c*t25658;
                double t25731 = t25730+1.0;
                double t25732 = pow(t25697,1.0/3.0);
                double t25734 = t25703*t25732*(4.0/3.0);
                double t25735 = pow(t25699,1.0/3.0);
                double t25879 = t25703*t25735*(4.0/3.0);
                double t25736 = t25734-t25879;
                double t25737 = t25704*t25707;
                double t25738 = t25737-1.0;
                double t25739 = 1.0/pow(rho_a,1.0/3.0);
                double t25740 = c*t25739;
                double t25741 = sqrt(t25740);
                double t25742 = b1f*t25741;
                double t25743 = pow(t25740,3.0/2.0);
                double t25744 = b3f*t25743;
                double t25745 = 1.0/pow(rho_a,2.0/3.0);
                double t25746 = b4f*t25664*t25745;
                double t25747 = b2f*c*t25739;
                double t25748 = t25742+t25744+t25746+t25747;
                double t25749 = 1.0/pow(rho_a,4.0/3.0);
                double t25750 = b1p*t25741;
                double t25751 = b3p*t25743;
                double t25752 = b4p*t25664*t25745;
                double t25753 = b2p*c*t25739;
                double t25754 = t25750+t25751+t25752+t25753;
                double t25755 = 1.0/pow(rho_a,5.0/3.0);
                double t25756 = 1.0/sqrt(t25740);
                double t25757 = 1.0/t25748;
                double t25758 = t25683*t25757*(1.0/2.0);
                double t25759 = t25758+1.0;
                double t25760 = 1.0/t25754;
                double t25761 = t25670*t25760*(1.0/2.0);
                double t25762 = t25761+1.0;
                double t25763 = a1p*c*t25739;
                double t25764 = t25763+1.0;
                double t25765 = 1.0/t25762;
                double t25766 = 1.0/(t25754*t25754);
                double t25767 = b4p*t25664*t25755*(2.0/3.0);
                double t25768 = b2p*c*t25749*(1.0/3.0);
                double t25769 = b1p*c*t25756*t25749*(1.0/6.0);
                double t25770 = b3p*c*t25741*t25749*(1.0/2.0);
                double t25771 = t25770+t25767+t25768+t25769;
                double t25772 = t25771*t25764*t25765*t25766;
                double t25773 = log(t25762);
                double t25774 = pow(2.0,1.0/3.0);
                double t25775 = t25774*2.0;
                double t25776 = t25775-2.0;
                double t25777 = log(t25759);
                double t25778 = a1f*c*t25739;
                double t25779 = t25778+1.0;
                double t25780 = gcab*gcab;
                double t25784 = 1.0/pow(rho_a,8.0/3.0);
                double t25785 = gamma_aa*t25784*(1.0/2.0);
                double t25786 = 1.0/pow(rho_b,8.0/3.0);
                double t25787 = gamma_bb*t25786*(1.0/2.0);
                double t25781 = t25785+t25787;
                double t25782 = t25781*t25781;
                double t25783 = 1.0/pow(rho_b,1.1E1/3.0);
                double t25788 = t25780*t25780;
                double t25789 = t25782*t25782;
                double t25790 = t25780*t25782*6.0;
                double t25791 = gcab*t25780*t25781*t25782*4.0;
                double t25792 = t25788*t25789;
                double t25793 = gcab*t25781*4.0;
                double t25794 = t25790+t25791+t25792+t25793+1.0;
                double t25795 = gcab*t25781;
                double t25796 = t25795+1.0;
                double t25797 = t25780*t25782;
                double t25798 = gcab*t25781*2.0;
                double t25799 = t25797+t25798+1.0;
                double t25800 = t25780*t25782*3.0;
                double t25801 = gcab*t25780*t25781*t25782;
                double t25802 = gcab*t25781*3.0;
                double t25803 = t25800+t25801+t25802+1.0;
                double t25804 = t25701*t25704*t25682*t25676*t25677*t25696*4.0;
                double t25805 = t25733+t25678;
                double t25806 = 1.0/t25691;
                double t25807 = 1.0/(t25688*t25688);
                double t25808 = b4f*t25708*t25664*(2.0/3.0);
                double t25809 = b2f*c*t25669*(1.0/3.0);
                double t25810 = b1f*c*t25709*t25669*(1.0/6.0);
                double t25811 = b3f*c*t25660*t25669*(1.0/2.0);
                double t25812 = t25810+t25811+t25808+t25809;
                double t25813 = a1f*c*c0f*t25692*t25669*(2.0/3.0);
                double t25814 = t25707*t25718*4.0;
                double t25815 = t25732*t25805*(4.0/3.0);
                double t25878 = t25805*t25735*(4.0/3.0);
                double t25816 = t25815-t25878;
                double t25817 = 1.0/t25728;
                double t25818 = 1.0/(t25725*t25725);
                double t25819 = b4a*t25708*t25664*(2.0/3.0);
                double t25820 = b2a*c*t25669*(1.0/3.0);
                double t25821 = b1a*c*t25709*t25669*(1.0/6.0);
                double t25822 = b3a*c*t25660*t25669*(1.0/2.0);
                double t25823 = t25820+t25821+t25822+t25819;
                double t25824 = t25701*t25731*t25823*t25682*t25817*t25719*t25818*t25738;
                double t25825 = 1.0/pow(rho_b,1.0/3.0);
                double t25826 = c*t25825;
                double t25827 = sqrt(t25826);
                double t25828 = b1f*t25827;
                double t25829 = pow(t25826,3.0/2.0);
                double t25830 = b3f*t25829;
                double t25831 = 1.0/pow(rho_b,2.0/3.0);
                double t25832 = b4f*t25831*t25664;
                double t25833 = b2f*c*t25825;
                double t25834 = t25830+t25832+t25833+t25828;
                double t25835 = 1.0/pow(rho_b,4.0/3.0);
                double t25836 = b1p*t25827;
                double t25837 = b3p*t25829;
                double t25838 = b4p*t25831*t25664;
                double t25839 = b2p*c*t25825;
                double t25840 = t25836+t25837+t25838+t25839;
                double t25841 = 1.0/pow(rho_b,5.0/3.0);
                double t25842 = 1.0/sqrt(t25826);
                double t25843 = 1.0/t25834;
                double t25844 = t25843*t25683*(1.0/2.0);
                double t25845 = t25844+1.0;
                double t25846 = 1.0/t25840;
                double t25847 = t25670*t25846*(1.0/2.0);
                double t25848 = t25847+1.0;
                double t25849 = a1p*c*t25825;
                double t25850 = t25849+1.0;
                double t25851 = 1.0/t25848;
                double t25852 = 1.0/(t25840*t25840);
                double t25853 = b4p*t25841*t25664*(2.0/3.0);
                double t25854 = b2p*c*t25835*(1.0/3.0);
                double t25855 = b1p*c*t25842*t25835*(1.0/6.0);
                double t25856 = b3p*c*t25835*t25827*(1.0/2.0);
                double t25857 = t25853+t25854+t25855+t25856;
                double t25858 = t25850*t25851*t25852*t25857;
                double t25859 = log(t25848);
                double t25860 = log(t25845);
                double t25861 = a1f*c*t25825;
                double t25862 = t25861+1.0;
                double t25863 = t25701*t25704*t25707*t25682*t25696;
                double t25864 = Aa*t25701*t25731*t25682*t25719*t25729*t25738*2.0;
                double t25865 = 1.0/pow(rho_a,1.1E1/3.0);
                double t25866 = 1.0/(t25803*t25803);
                double t25867 = 1.0/t25796;
                double t25868 = 1.0/(t25794*t25794);
                double t25869 = 1.0/(t25799*t25799);
                double t25870 = 1.0/t25794;
                double t25871 = 1.0/(t25796*t25796);
                double t25872 = 1.0/t25799;
                double t25873 = 1.0/t25803;
                double t25875 = a1p*c*c0p*t25695*t25669*(2.0/3.0);
                double t25880 = t25812*t25806*t25807*t25694;
                double t25874 = t25813+t25717-t25880-t25875;
                double t25876 = 1.0/pow(t25657,7.0/3.0);
                double t25877 = 1.0/pow(t25657,8.0/3.0);
                double t25881 = t25716*t25716;
                double t25882 = 1.0/pow(t25659,3.0/2.0);
                double t25883 = b4p*t25664*t25877*(1.0E1/9.0);
                double t25884 = b2p*c*t25876*(4.0/9.0);
                double t25885 = b1p*c*t25709*t25876*(2.0/9.0);
                double t25886 = b3p*c*t25660*t25876*(2.0/3.0);
                double t25887 = b3p*t25664*t25709*t25877*(1.0/1.2E1);
                double t25888 = t25883+t25884+t25885+t25886+t25887-b1p*t25664*t25882*t25877*(1.0/3.6E1);
                double t25889 = t25710*t25711*t25675*t25888;
                double t25890 = 1.0/(t25668*t25668*t25668);
                double t25891 = t25812*t25812;
                double t25892 = 1.0/(t25673*t25673);
                double t25893 = 1.0/(t25668*t25668*t25668*t25668);
                double t25894 = t25670*t25881*t25675*t25892*t25893*(1.0/2.0);
                double t25895 = 1.0/(t25657*t25657*t25657);
                double t25896 = a1p*c*t25710*t25711*t25716*t25669*(2.0/3.0);
                double t25897 = 1.0/(t25657*t25657*t25657*t25657*t25657*t25657);
                double t25898 = t25704*t25676*t25677*4.0;
                double t25899 = t25814+t25898;
                double t25900 = t25735*t25676*t25895*(8.0/3.0);
                double t25901 = 1.0/pow(t25697,2.0/3.0);
                double t25902 = t25703*t25901*t25805*(4.0/9.0);
                double t25903 = 1.0/pow(t25699,2.0/3.0);
                double t25904 = t25703*t25903*t25805*(4.0/9.0);
                double t25905 = t25900+t25902+t25904-t25732*t25676*t25895*(8.0/3.0);
                double t25906 = t25823*t25823;
                double t25907 = t25814-t25898;
                double t25908 = t25704*t25707*t25816*t25682*t25696;
                double t25909 = t25704*t25707*t25682*t25736*t25696;
                double t25910 = Aa*t25701*t25731*t25682*t25719*t25729*t25899*2.0;
                double t25911 = Aa*t25731*t25816*t25682*t25719*t25729*t25738*2.0;
                double t25912 = Aa*t25731*t25682*t25736*t25719*t25729*t25738*2.0;
                double t25913 = c0f*t25777*t25779*2.0;
                double t25915 = c0p*t25764*t25773*2.0;
                double t25914 = t25913-t25915;
                double t25916 = c0f*t25860*t25862*2.0;
                double t25918 = c0p*t25850*t25859*2.0;
                double t25917 = t25916-t25918;
                double t25919 = gamma_aa*gcab*t25865*(8.0/3.0);
                double t25920 = gamma_aa*t25780*t25781*t25865*(8.0/3.0);
                double t25921 = t25920+t25919;
                double t25922 = gamma_bb*gcab*t25783*(8.0/3.0);
                double t25923 = gamma_bb*t25780*t25781*t25783*(8.0/3.0);
                double t25924 = t25922+t25923;
                double t25925 = gamma_aa*gcab*t25865*(1.6E1/3.0);
                double t25926 = gamma_aa*gcab*t25780*t25782*t25865*1.6E1;
                double t25927 = gamma_aa*t25781*t25782*t25865*t25788*(1.6E1/3.0);
                double t25928 = gamma_aa*t25780*t25781*t25865*1.6E1;
                double t25929 = t25925+t25926+t25927+t25928;
                double t25930 = gamma_bb*gcab*t25783*(1.6E1/3.0);
                double t25931 = gamma_bb*gcab*t25780*t25782*t25783*1.6E1;
                double t25932 = gamma_bb*t25781*t25782*t25783*t25788*(1.6E1/3.0);
                double t25933 = gamma_bb*t25780*t25781*t25783*1.6E1;
                double t25934 = t25930+t25931+t25932+t25933;
                double t25935 = gamma_aa*gcab*t25865*4.0;
                double t25936 = gamma_aa*gcab*t25780*t25782*t25865*4.0;
                double t25937 = gamma_aa*t25780*t25781*t25865*8.0;
                double t25938 = t25935+t25936+t25937;
                double t25939 = gamma_bb*gcab*t25783*4.0;
                double t25940 = gamma_bb*gcab*t25780*t25782*t25783*4.0;
                double t25941 = gamma_bb*t25780*t25781*t25783*8.0;
                double t25942 = t25940+t25941+t25939;
                v_rho_a_rho_b[Q] += scale * ((t25706+t25863+t25864+rho_a*(-t25772+t25682*t25776*(t25772-(1.0/(t25748*t25748)*t25779*(b2f*c*t25749*(1.0/3.0)+b4f*t25664*t25755*(2.0/3.0)+b1f*c*t25756*t25749*(1.0/6.0)+b3f*c*t25741*t25749*(1.0/2.0)))/t25759+a1f*c*c0f*t25749*t25777*(2.0/3.0)-a1p*c*c0p*t25773*t25749*(2.0/3.0))+a1p*c*c0p*t25773*t25749*(2.0/3.0))+t25657*(t25804+t25912+t25824+t25717+t25909-a1p*c*c0p*t25695*t25669*(2.0/3.0)-t25701*t25704*t25707*t25682*t25874-t25701*t25707*t25682*t25718*t25696*4.0-Aa*t25701*t25731*t25682*t25719*t25729*(t25814-t25704*t25676*t25677*4.0)*2.0-Aa*a1a*c*t25701*t25682*t25719*t25729*t25738*t25669*(2.0/3.0))-c0p*t25764*t25773*2.0-t25914*t25682*t25776)*(ccab1*gamma_bb*gcab*t25783*t25867*(4.0/3.0)-ccab2*t25780*t25924*t25782*t25869-ccab4*t25934*t25868*t25788*t25789-ccab1*gamma_bb*t25780*t25781*t25871*t25783*(4.0/3.0)+ccab2*gamma_bb*t25780*t25781*t25872*t25783*(8.0/3.0)+ccab3*gamma_bb*gcab*t25780*t25782*t25783*t25873*4.0+ccab4*gamma_bb*t25870*t25781*t25782*t25783*t25788*(1.6E1/3.0)-ccab3*gcab*t25780*t25942*t25781*t25782*t25866)+(ccab0+ccab1*gcab*t25781*t25867+ccab2*t25780*t25782*t25872+ccab4*t25870*t25788*t25789+ccab3*gcab*t25780*t25781*t25782*t25873)*(t25910+t25911-t25912+t25908-t25909+t25657*(t25894+t25896+t25889-t25710*t25881*t25890*t25675*2.0+t25704*t25707*t25682*t25736*(t25813+t25717-t25880-t25875)-a1p*c*c0p*t25695*t25876*(8.0/9.0)-t25701*t25704*t25707*t25682*(t25894+t25896+t25889-t25710*t25881*t25890*t25675*2.0+t25806*t25891*t25694*1.0/(t25688*t25688*t25688)*2.0-t25806*t25807*t25694*(b2f*c*t25876*(4.0/9.0)+b4f*t25664*t25877*(1.0E1/9.0)+b1f*c*t25709*t25876*(2.0/9.0)+b3f*c*t25660*t25876*(2.0/3.0)-b1f*t25664*t25882*t25877*(1.0/3.6E1)+b3f*t25664*t25709*t25877*(1.0/1.2E1))-1.0/(t25691*t25691)*t25683*t25891*t25694*1.0/(t25688*t25688*t25688*t25688)*(1.0/2.0)+a1f*c*c0f*t25692*t25876*(8.0/9.0)-a1p*c*c0p*t25695*t25876*(8.0/9.0)-a1f*c*t25812*t25806*t25807*t25669*(2.0/3.0))-t25701*t25707*t25682*t25718*t25874*8.0-t25704*t25707*t25816*t25682*t25874+t25701*t25704*t25682*t25677*t25696*1.2E1+t25704*t25707*t25905*t25682*t25696-t25707*t25816*t25682*t25718*t25696*4.0-t25701*t25707*t25682*t25696*t25897*2.0E1+t25707*t25682*t25718*t25736*t25696*4.0+t25704*t25816*t25682*t25676*t25677*t25696*4.0+t25704*t25682*t25736*t25676*t25677*t25696*4.0-Aa*t25731*t25816*t25682*t25907*t25719*t25729*2.0+Aa*t25731*t25905*t25682*t25719*t25729*t25738*2.0+Aa*t25731*t25682*t25736*t25719*t25729*t25899*2.0+Aa*t25701*t25731*t25682*t25719*t25729*(t25704*t25677*1.2E1-t25707*t25897*2.0E1)*2.0+t25701*t25731*t25823*t25682*t25817*t25907*t25719*t25818+t25731*t25823*t25816*t25682*t25817*t25719*t25818*t25738+t25701*t25731*t25823*t25682*t25817*t25719*t25818*t25899-t25731*t25823*t25682*t25736*t25817*t25719*t25818*t25738-t25701*t25731*1.0/(t25725*t25725*t25725)*t25906*t25682*t25817*t25719*t25738*2.0+t25701*t25731*t25682*t25817*t25719*t25818*t25738*(b2a*c*t25876*(4.0/9.0)+b4a*t25664*t25877*(1.0E1/9.0)+b1a*c*t25709*t25876*(2.0/9.0)+b3a*c*t25660*t25876*(2.0/3.0)-b1a*t25664*t25882*t25877*(1.0/3.6E1)+b3a*t25664*t25709*t25877*(1.0/1.2E1))-Aa*a1a*c*t25701*t25682*t25907*t25719*t25729*t25669*(2.0/3.0)-Aa*a1a*c*t25701*t25682*t25719*t25729*t25738*t25876*(8.0/9.0)-Aa*a1a*c*t25816*t25682*t25719*t25729*t25738*t25669*(2.0/3.0)-Aa*a1a*c*t25701*t25682*t25719*t25729*t25669*t25899*(2.0/3.0)+Aa*a1a*c*t25682*t25736*t25719*t25729*t25738*t25669*(2.0/3.0)+t25701*t25720*t25731*1.0/(t25725*t25725*t25725*t25725)*t25906*t25682*t25719*1.0/(t25728*t25728)*t25738*(1.0/2.0)+a1a*c*t25701*t25823*t25682*t25817*t25719*t25818*t25738*t25669*(2.0/3.0))-t25710*t25711*t25716*t25675*2.0+t25701*t25704*t25707*t25682*(t25813+t25717-t25880-t25875)*2.0+a1p*c*c0p*t25695*t25669*(4.0/3.0)+t25701*t25707*t25682*t25718*t25696*8.0+Aa*t25701*t25731*t25682*t25719*t25729*(t25814-t25898)*2.0-t25701*t25731*t25823*t25682*t25817*t25719*t25818*t25738*2.0+Aa*a1a*c*t25701*t25682*t25719*t25729*t25738*t25669*(4.0/3.0))-(rho_a*(t25915+t25914*t25682*t25776)+rho_b*(t25918+t25682*t25917*t25776)-t25657*(t25706+t25863+t25864))*(ccab4*t25868*t25788*t25789*(gamma_aa*gamma_bb*t25780*t25783*t25865*(6.4E1/3.0)+gamma_aa*gamma_bb*t25782*t25783*t25865*t25788*(6.4E1/3.0)+gamma_aa*gamma_bb*gcab*t25780*t25781*t25783*t25865*(1.28E2/3.0))-ccab2*t25921*t25780*t25924*t25782*1.0/(t25799*t25799*t25799)*2.0-ccab4*t25934*1.0/(t25794*t25794*t25794)*t25929*t25788*t25789*2.0+ccab3*gcab*t25780*t25781*t25782*t25866*(gamma_aa*gamma_bb*t25780*t25783*t25865*(3.2E1/3.0)+gamma_aa*gamma_bb*gcab*t25780*t25781*t25783*t25865*(3.2E1/3.0))+ccab1*gamma_aa*gamma_bb*t25780*t25871*t25783*t25865*(3.2E1/9.0)-ccab2*gamma_aa*gamma_bb*t25780*t25872*t25783*t25865*(3.2E1/9.0)+ccab2*gamma_bb*t25921*t25780*t25781*t25783*t25869*(8.0/3.0)+ccab2*gamma_aa*t25780*t25924*t25781*t25865*t25869*(8.0/3.0)-ccab3*gcab*1.0/(t25803*t25803*t25803)*t25780*t25942*t25781*t25782*t25938*2.0-ccab4*gamma_aa*gamma_bb*t25870*t25782*t25783*t25865*t25788*(6.4E1/3.0)+ccab2*gamma_aa*gamma_bb*t25782*t25783*t25865*t25788*t25869*(3.2E1/9.0)+ccab3*gamma_aa*gcab*t25780*t25942*t25782*t25865*t25866*4.0+ccab3*gamma_bb*gcab*t25780*t25782*t25783*t25866*t25938*4.0+ccab4*gamma_aa*t25781*t25934*t25782*t25865*t25868*t25788*(1.6E1/3.0)+ccab4*gamma_bb*t25781*t25782*t25783*t25929*t25868*t25788*(1.6E1/3.0)-ccab3*gamma_aa*gamma_bb*gcab*t25780*t25781*t25783*t25873*t25865*(3.2E1/3.0)-ccab1*gamma_aa*gamma_bb*gcab*t25780*t25781*t25783*t25865*1.0/(t25796*t25796*t25796)*(3.2E1/9.0))+(t25706+t25863+t25864-t25657*(t25910+t25911+t25804-t25824-t25717+t25908+t25875+t25701*t25704*t25707*t25682*t25874+t25701*t25707*t25682*t25718*t25696*4.0+Aa*a1a*c*t25701*t25682*t25719*t25729*t25738*t25669*(2.0/3.0))+rho_b*(-t25858+t25682*t25776*(t25858-(1.0/(t25834*t25834)*t25862*(b2f*c*t25835*(1.0/3.0)+b4f*t25841*t25664*(2.0/3.0)+b1f*c*t25842*t25835*(1.0/6.0)+b3f*c*t25835*t25827*(1.0/2.0)))/t25845+a1f*c*c0f*t25860*t25835*(2.0/3.0)-a1p*c*c0p*t25835*t25859*(2.0/3.0))+a1p*c*c0p*t25835*t25859*(2.0/3.0))-c0p*t25850*t25859*2.0-t25682*t25917*t25776)*(ccab1*gamma_aa*gcab*t25865*t25867*(4.0/3.0)-ccab2*t25921*t25780*t25782*t25869-ccab4*t25929*t25868*t25788*t25789-ccab1*gamma_aa*t25780*t25781*t25871*t25865*(4.0/3.0)+ccab2*gamma_aa*t25780*t25781*t25872*t25865*(8.0/3.0)+ccab3*gamma_aa*gcab*t25780*t25782*t25873*t25865*4.0+ccab4*gamma_aa*t25870*t25781*t25782*t25865*t25788*(1.6E1/3.0)-ccab3*gcab*t25780*t25781*t25782*t25866*t25938));
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t25944 = rho_a+rho_b;
                double t25945 = 1.0/pow(t25944,1.0/3.0);
                double t25946 = c*t25945;
                double t25947 = sqrt(t25946);
                double t25948 = b1p*t25947;
                double t25949 = pow(t25946,3.0/2.0);
                double t25950 = b3p*t25949;
                double t25951 = c*c;
                double t25952 = 1.0/pow(t25944,2.0/3.0);
                double t25953 = b4p*t25951*t25952;
                double t25954 = b2p*c*t25945;
                double t25955 = t25950+t25953+t25954+t25948;
                double t25956 = 1.0/pow(t25944,4.0/3.0);
                double t25957 = 1.0/c0p;
                double t25958 = 1.0/t25955;
                double t25959 = t25957*t25958*(1.0/2.0);
                double t25960 = t25959+1.0;
                double t25961 = a1p*c*t25945;
                double t25962 = t25961+1.0;
                double t25963 = rho_a-rho_b;
                double t25964 = t25963*t25963;
                double t25965 = 1.0/t25944;
                double t25966 = t25963*t25965;
                double t25967 = two_13*2.0;
                double t25968 = t25967-2.0;
                double t25969 = 1.0/t25968;
                double t25970 = 1.0/c0f;
                double t25971 = b1f*t25947;
                double t25972 = b3f*t25949;
                double t25973 = b4f*t25951*t25952;
                double t25974 = b2f*c*t25945;
                double t25975 = t25971+t25972+t25973+t25974;
                double t25976 = 1.0/t25975;
                double t25977 = t25970*t25976*(1.0/2.0);
                double t25978 = t25977+1.0;
                double t25979 = log(t25978);
                double t25980 = a1f*c*t25945;
                double t25981 = t25980+1.0;
                double t25982 = log(t25960);
                double t25993 = c0f*t25981*t25979*2.0;
                double t25994 = c0p*t25962*t25982*2.0;
                double t25983 = t25993-t25994;
                double t25984 = t25966+1.0;
                double t25985 = pow(t25984,4.0/3.0);
                double t25986 = -t25966+1.0;
                double t25987 = pow(t25986,4.0/3.0);
                double t25988 = t25985+t25987-2.0;
                double t25989 = 1.0/(t25944*t25944);
                double t25990 = t25963*t25989;
                double t25991 = t25990+t25965;
                double t25992 = 1.0/(t25944*t25944*t25944*t25944);
                double t25995 = t25964*t25964;
                double t25996 = 1.0/pow(t25944,5.0/3.0);
                double t25997 = 1.0/sqrt(t25946);
                double t25998 = 1.0/t25960;
                double t25999 = 1.0/(t25955*t25955);
                double t26000 = b4p*t25951*t25996*(2.0/3.0);
                double t26001 = b2p*c*t25956*(1.0/3.0);
                double t26002 = b1p*c*t25956*t25997*(1.0/6.0);
                double t26003 = b3p*c*t25947*t25956*(1.0/2.0);
                double t26004 = t26000+t26001+t26002+t26003;
                double t26005 = 1.0/(t25944*t25944*t25944*t25944*t25944);
                double t26006 = 1.0/d2fz0;
                double t26007 = 1.0/Aa;
                double t26008 = b1a*t25947;
                double t26009 = b3a*t25949;
                double t26010 = b4a*t25951*t25952;
                double t26011 = b2a*c*t25945;
                double t26012 = t26010+t26011+t26008+t26009;
                double t26013 = 1.0/t26012;
                double t26014 = t26013*t26007*(1.0/2.0);
                double t26015 = t26014+1.0;
                double t26016 = log(t26015);
                double t26017 = a1a*c*t25945;
                double t26018 = t26017+1.0;
                double t26019 = pow(t25984,1.0/3.0);
                double t26020 = t25991*t26019*(4.0/3.0);
                double t26021 = pow(t25986,1.0/3.0);
                double t26097 = t25991*t26021*(4.0/3.0);
                double t26022 = t26020-t26097;
                double t26023 = t25992*t25995;
                double t26024 = t26023-1.0;
                double t26025 = 1.0/pow(rho_b,1.0/3.0);
                double t26026 = c*t26025;
                double t26027 = sqrt(t26026);
                double t26028 = b1f*t26027;
                double t26029 = pow(t26026,3.0/2.0);
                double t26030 = b3f*t26029;
                double t26031 = 1.0/pow(rho_b,2.0/3.0);
                double t26032 = b4f*t25951*t26031;
                double t26033 = b2f*c*t26025;
                double t26034 = t26030+t26032+t26033+t26028;
                double t26035 = 1.0/pow(rho_b,4.0/3.0);
                double t26036 = b1p*t26027;
                double t26037 = b3p*t26029;
                double t26038 = b4p*t25951*t26031;
                double t26039 = b2p*c*t26025;
                double t26040 = t26036+t26037+t26038+t26039;
                double t26041 = 1.0/pow(rho_b,5.0/3.0);
                double t26042 = 1.0/sqrt(t26026);
                double t26043 = 1.0/t26034;
                double t26044 = t25970*t26043*(1.0/2.0);
                double t26045 = t26044+1.0;
                double t26046 = 1.0/t26040;
                double t26047 = t25957*t26046*(1.0/2.0);
                double t26048 = t26047+1.0;
                double t26049 = a1p*c*t26025;
                double t26050 = t26049+1.0;
                double t26051 = 1.0/t26048;
                double t26052 = 1.0/(t26040*t26040);
                double t26053 = b4p*t25951*t26041*(2.0/3.0);
                double t26054 = b2p*c*t26035*(1.0/3.0);
                double t26055 = b1p*c*t26042*t26035*(1.0/6.0);
                double t26056 = b3p*c*t26035*t26027*(1.0/2.0);
                double t26057 = t26053+t26054+t26055+t26056;
                double t26058 = t26050*t26051*t26052*t26057;
                double t26059 = log(t26048);
                double t26060 = pow(2.0,1.0/3.0);
                double t26061 = t26060*2.0;
                double t26062 = t26061-2.0;
                double t26063 = log(t26045);
                double t26064 = a1f*c*t26025;
                double t26065 = t26064+1.0;
                double t26066 = gcab*gcab;
                double t26070 = 1.0/pow(rho_a,8.0/3.0);
                double t26071 = gamma_aa*t26070*(1.0/2.0);
                double t26072 = 1.0/pow(rho_b,8.0/3.0);
                double t26073 = gamma_bb*t26072*(1.0/2.0);
                double t26067 = t26071+t26073;
                double t26068 = t26067*t26067;
                double t26069 = 1.0/pow(rho_b,1.1E1/3.0);
                double t26074 = t26066*t26066;
                double t26075 = t26068*t26068;
                double t26076 = t26066*t26068*6.0;
                double t26077 = gcab*t26066*t26067*t26068*4.0;
                double t26078 = t26074*t26075;
                double t26079 = gcab*t26067*4.0;
                double t26080 = t26076+t26077+t26078+t26079+1.0;
                double t26081 = gcab*t26067;
                double t26082 = t26081+1.0;
                double t26083 = t26066*t26068;
                double t26084 = gcab*t26067*2.0;
                double t26085 = t26083+t26084+1.0;
                double t26086 = t26066*t26068*3.0;
                double t26087 = gcab*t26066*t26067*t26068;
                double t26088 = gcab*t26067*3.0;
                double t26089 = t26086+t26087+t26088+1.0;
                double t26090 = a1p*c*c0p*t25982*t25956*(2.0/3.0);
                double t26091 = 1.0/t26085;
                double t26092 = 1.0/t26089;
                double t26093 = 1.0/t26082;
                double t26094 = 1.0/t26080;
                double t26095 = 1.0/pow(t25944,7.0/3.0);
                double t26096 = 1.0/pow(t25944,8.0/3.0);
                double t26098 = 1.0/t25978;
                double t26099 = 1.0/(t25975*t25975);
                double t26100 = b4f*t25951*t25996*(2.0/3.0);
                double t26101 = b2f*c*t25956*(1.0/3.0);
                double t26102 = b1f*c*t25956*t25997*(1.0/6.0);
                double t26103 = b3f*c*t25947*t25956*(1.0/2.0);
                double t26104 = t26100+t26101+t26102+t26103;
                double t26105 = t25981*t26104*t26098*t26099;
                double t26107 = t25962*t25998*t25999*t26004;
                double t26108 = a1f*c*c0f*t25956*t25979*(2.0/3.0);
                double t26106 = t26105-t26107+t26090-t26108;
                double t26109 = t26004*t26004;
                double t26110 = 1.0/pow(t25946,3.0/2.0);
                double t26111 = b4p*t25951*t26096*(1.0E1/9.0);
                double t26112 = b2p*c*t26095*(4.0/9.0);
                double t26113 = b1p*c*t25997*t26095*(2.0/9.0);
                double t26114 = b3p*c*t25947*t26095*(2.0/3.0);
                double t26115 = b3p*t25951*t25997*t26096*(1.0/1.2E1);
                double t26116 = t26111+t26112+t26113+t26114+t26115-b1p*t25951*t26110*t26096*(1.0/3.6E1);
                double t26117 = 1.0/(t25955*t25955*t25955);
                double t26118 = t25962*t25998*t26117*t26109*2.0;
                double t26119 = t26104*t26104;
                double t26120 = 1.0/(t25960*t25960);
                double t26121 = 1.0/(t25955*t25955*t25955*t25955);
                double t26122 = t25989*2.0;
                double t26123 = 1.0/(t25944*t25944*t25944);
                double t26124 = t25963*t26123*2.0;
                double t26125 = t26122+t26124;
                double t26126 = t25991*t25991;
                double t26127 = a1p*c*c0p*t25982*t26095*(8.0/9.0);
                double t26128 = 1.0/(t25944*t25944*t25944*t25944*t25944*t25944);
                double t26129 = t25963*t25964*t25992*4.0;
                double t26130 = t25995*t26005*4.0;
                double t26131 = t26130+t26129;
                double t26132 = t26125*t26019*(4.0/3.0);
                double t26133 = 1.0/pow(t25984,2.0/3.0);
                double t26134 = t26133*t26126*(4.0/9.0);
                double t26135 = 1.0/pow(t25986,2.0/3.0);
                double t26136 = t26126*t26135*(4.0/9.0);
                double t26137 = t26132+t26134+t26136-t26021*t26125*(4.0/3.0);
                double t26138 = 1.0/t26015;
                double t26139 = 1.0/(t26012*t26012);
                double t26140 = b4a*t25951*t25996*(2.0/3.0);
                double t26141 = b2a*c*t25956*(1.0/3.0);
                double t26142 = b1a*c*t25956*t25997*(1.0/6.0);
                double t26143 = b3a*c*t25947*t25956*(1.0/2.0);
                double t26144 = t26140+t26141+t26142+t26143;
                double t26145 = t26144*t26144;
                double t26146 = 1.0/t26045;
                double t26147 = b4f*t25951*t26041*(2.0/3.0);
                double t26148 = b2f*c*t26035*(1.0/3.0);
                double t26149 = b1f*c*t26042*t26035*(1.0/6.0);
                double t26150 = b3f*c*t26035*t26027*(1.0/2.0);
                double t26151 = t26150+t26147+t26148+t26149;
                double t26152 = 1.0/(t26034*t26034);
                double t26153 = 1.0/pow(rho_b,7.0/3.0);
                double t26154 = 1.0/pow(t26026,3.0/2.0);
                double t26155 = t26151*t26151;
                double t26156 = t26057*t26057;
                double t26157 = 1.0/(t26040*t26040*t26040);
                double t26158 = t26050*t26051*t26156*t26157*2.0;
                double t26159 = b4p*t25951*t26072*(1.0E1/9.0);
                double t26160 = b2p*c*t26153*(4.0/9.0);
                double t26161 = b3p*t25951*t26042*t26072*(1.0/1.2E1);
                double t26162 = b1p*c*t26042*t26153*(2.0/9.0);
                double t26163 = b3p*c*t26027*t26153*(2.0/3.0);
                double t26278 = b1p*t25951*t26072*t26154*(1.0/3.6E1);
                double t26164 = t26160+t26161+t26162+t26163+t26159-t26278;
                double t26165 = 1.0/(t26048*t26048);
                double t26166 = 1.0/(t26040*t26040*t26040*t26040);
                double t26167 = a1p*c*c0p*t26153*t26059*(8.0/9.0);
                double t26168 = a1f*c*c0f*t26035*t26063*(2.0/3.0);
                double t26169 = a1p*c*c0p*t26035*t26059*(2.0/3.0);
                double t26241 = t26151*t26152*t26065*t26146;
                double t26170 = -t26241+t26058+t26168-t26169;
                double t26171 = gamma_bb*gamma_bb;
                double t26172 = gcaa*gcaa;
                double t26173 = t26171*t26171;
                double t26174 = t26172*t26172;
                double t26175 = 1.0/pow(rho_b,3.2E1/3.0);
                double t26176 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t26177 = 1.0/pow(rho_b,1.6E1/3.0);
                double t26178 = 1.0/pow(rho_a,1.0/3.0);
                double t26179 = c*t26178;
                double t26180 = sqrt(t26179);
                double t26181 = pow(t26179,3.0/2.0);
                double t26182 = 1.0/pow(rho_a,2.0/3.0);
                double t26183 = b1p*t26180;
                double t26184 = b3p*t26181;
                double t26185 = b4p*t25951*t26182;
                double t26186 = b2p*c*t26178;
                double t26187 = t26183+t26184+t26185+t26186;
                double t26188 = 1.0/t26187;
                double t26189 = t25957*t26188*(1.0/2.0);
                double t26190 = t26189+1.0;
                double t26191 = log(t26190);
                double t26192 = a1p*c*t26178;
                double t26193 = t26192+1.0;
                double t26194 = c0p*t26191*t26193*2.0;
                double t26195 = c0f*t26063*t26065*2.0;
                double t26197 = c0p*t26050*t26059*2.0;
                double t26196 = t26195-t26197;
                double t26198 = t25983*t25992*t25995*t25969*t25988;
                double t26199 = Aa*t25969*t25988*t26006*t26024*t26016*t26018*2.0;
                double t26200 = gamma_bb*gcab*t26069*(1.6E1/3.0);
                double t26201 = gamma_bb*gcab*t26066*t26068*t26069*1.6E1;
                double t26202 = gamma_bb*t26074*t26067*t26068*t26069*(1.6E1/3.0);
                double t26203 = gamma_bb*t26066*t26067*t26069*1.6E1;
                double t26204 = t26200+t26201+t26202+t26203;
                double t26205 = 1.0/(t26082*t26082);
                double t26206 = 1.0/pow(rho_b,2.2E1/3.0);
                double t26207 = gamma_bb*gcab*t26069*(8.0/3.0);
                double t26208 = gamma_bb*t26066*t26067*t26069*(8.0/3.0);
                double t26209 = t26207+t26208;
                double t26210 = 1.0/(t26089*t26089);
                double t26211 = 1.0/pow(rho_b,1.4E1/3.0);
                double t26212 = 1.0/(t26080*t26080);
                double t26213 = 1.0/(t26085*t26085);
                double t26214 = gamma_bb*gcab*t26069*4.0;
                double t26215 = gamma_bb*gcab*t26066*t26068*t26069*4.0;
                double t26216 = gamma_bb*t26066*t26067*t26069*8.0;
                double t26217 = t26214+t26215+t26216;
                double t26218 = t25969*t26062*t26196;
                double t26219 = t26218+t26197;
                double t26220 = gamma_bb*gcaa*t26072*4.0;
                double t26221 = gamma_bb*gcaa*t26171*t26172*t26176*4.0;
                double t26222 = t26171*t26172*t26177*6.0;
                double t26223 = t26173*t26174*t26175;
                double t26224 = t26220+t26221+t26222+t26223+1.0;
                double t26225 = 1.0/t26224;
                double t26226 = gamma_bb*gcaa*t26072;
                double t26227 = t26226+1.0;
                double t26228 = 1.0/t26227;
                double t26229 = gamma_bb*gcaa*t26072*3.0;
                double t26230 = gamma_bb*gcaa*t26171*t26172*t26176;
                double t26231 = t26171*t26172*t26177*3.0;
                double t26232 = t26230+t26231+t26229+1.0;
                double t26233 = 1.0/t26232;
                double t26234 = gamma_bb*gcaa*t26072*2.0;
                double t26235 = t26171*t26172*t26177;
                double t26236 = t26234+t26235+1.0;
                double t26237 = 1.0/t26236;
                double t26238 = 1.0/pow(rho_b,1.9E1/3.0);
                double t26239 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t26240 = 1.0/pow(rho_b,3.5E1/3.0);
                double t26242 = ccaa4*t26240*t26225*t26173*t26174*(3.2E1/3.0);
                double t26243 = ccaa1*gamma_bb*gcaa*t26228*t26069*(8.0/3.0);
                double t26244 = ccaa3*gamma_bb*gcaa*t26233*t26171*t26172*t26239*8.0;
                double t26245 = ccaa2*t26171*t26172*t26237*t26238*(1.6E1/3.0);
                double t26246 = 1.0/(t26227*t26227);
                double t26247 = gamma_bb*gcaa*t26069*8.0;
                double t26248 = gamma_bb*gcaa*t26171*t26172*t26239*8.0;
                double t26249 = t26171*t26172*t26238*1.6E1;
                double t26250 = t26247+t26248+t26249;
                double t26251 = 1.0/(t26232*t26232);
                double t26252 = gamma_bb*gcaa*t26069*(3.2E1/3.0);
                double t26253 = gamma_bb*gcaa*t26171*t26172*t26239*3.2E1;
                double t26254 = t26171*t26172*t26238*3.2E1;
                double t26255 = t26240*t26173*t26174*(3.2E1/3.0);
                double t26256 = t26252+t26253+t26254+t26255;
                double t26257 = 1.0/(t26224*t26224);
                double t26258 = gamma_bb*gcaa*t26069*(1.6E1/3.0);
                double t26259 = t26171*t26172*t26238*(1.6E1/3.0);
                double t26260 = t26258+t26259;
                double t26261 = 1.0/(t26236*t26236);
                double t26262 = t26242+t26243+t26244+t26245-ccaa1*t26171*t26172*t26246*t26238*(8.0/3.0)-ccaa2*t26260*t26171*t26261*t26172*t26177-ccaa4*t26173*t26174*t26175*t26256*t26257-ccaa3*gamma_bb*gcaa*t26250*t26251*t26171*t26172*t26176;
                double t26263 = 1.0/pow(rho_b,1.0E1);
                double t26264 = 1.0/pow(rho_b,3.8E1/3.0);
                double t26265 = ccaa4*t26225*t26173*t26174*t26175;
                double t26266 = ccaa1*gamma_bb*gcaa*t26072*t26228;
                double t26267 = ccaa3*gamma_bb*gcaa*t26233*t26171*t26172*t26176;
                double t26268 = ccaa2*t26171*t26172*t26237*t26177;
                double t26269 = ccaa0+t26265+t26266+t26267+t26268;
                double t26270 = 1.0/(t26034*t26034*t26034);
                double t26271 = b4f*t25951*t26072*(1.0E1/9.0);
                double t26272 = b2f*c*t26153*(4.0/9.0);
                double t26273 = b3f*t25951*t26042*t26072*(1.0/1.2E1);
                double t26274 = b1f*c*t26042*t26153*(2.0/9.0);
                double t26275 = b3f*c*t26027*t26153*(2.0/3.0);
                double t26276 = t26271+t26272+t26273+t26274+t26275-b1f*t25951*t26072*t26154*(1.0/3.6E1);
                double t26277 = t26152*t26065*t26146*t26276;
                double t26279 = t26050*t26051*t26052*t26164;
                double t26280 = 1.0/(t26045*t26045);
                double t26281 = 1.0/(t26034*t26034*t26034*t26034);
                double t26282 = t25970*t26280*t26065*t26155*t26281*(1.0/2.0);
                double t26283 = t25957*t26050*t26156*t26165*t26166*(1.0/2.0);
                double t26284 = a1f*c*t26151*t26035*t26152*t26146*(2.0/3.0);
                double t26285 = a1p*c*t26051*t26052*t26035*t26057*(2.0/3.0);
                v_rho_b_rho_b[Q] += scale * ((ccab0+ccab1*gcab*t26093*t26067+ccab2*t26091*t26066*t26068+ccab4*t26074*t26075*t26094+ccab3*gcab*t26092*t26066*t26067*t26068)*(-rho_b*(t26283-t26158-t26167+t26285+t26279+t25969*t26062*(t26282+t26158+t26167+t26284+t26277-t26050*t26051*t26052*t26164-t26270*t26065*t26146*t26155*2.0-a1f*c*c0f*t26063*t26153*(8.0/9.0)-t25957*t26050*t26156*t26165*t26166*(1.0/2.0)-a1p*c*t26051*t26052*t26035*t26057*(2.0/3.0)))-t25944*(t26118+t26127-t25962*t25998*t25999*t26116-t25992*t25995*t25969*t25988*(t26118+t26127-t25962*t25998*t25999*t26116-t25981*1.0/(t25975*t25975*t25975)*t26119*t26098*2.0+t25981*t26098*t26099*(b2f*c*t26095*(4.0/9.0)+b4f*t25951*t26096*(1.0E1/9.0)+b1f*c*t25997*t26095*(2.0/9.0)+b3f*c*t25947*t26095*(2.0/3.0)-b1f*t25951*t26110*t26096*(1.0/3.6E1)+b3f*t25951*t25997*t26096*(1.0/1.2E1))+t25970*t25981*1.0/(t25975*t25975*t25975*t25975)*1.0/(t25978*t25978)*t26119*(1.0/2.0)-a1f*c*c0f*t25979*t26095*(8.0/9.0)-t25962*t25957*t26120*t26121*t26109*(1.0/2.0)+a1f*c*t25956*t26104*t26098*t26099*(2.0/3.0)-a1p*c*t25956*t25998*t25999*t26004*(2.0/3.0))+t25964*t25983*t25992*t25969*t25988*1.2E1+t25983*t25992*t25995*t25969*t26137+t25983*t25995*t25969*t25988*t26128*2.0E1+t25983*t25995*t25969*t26022*t26005*8.0-t25992*t25995*t25969*t26022*t26106*2.0-t25995*t25969*t25988*t26005*t26106*8.0-t25962*t25957*t26120*t26121*t26109*(1.0/2.0)+t25963*t25964*t25983*t25992*t25969*t26022*8.0+t25963*t25964*t25983*t25969*t25988*t26005*3.2E1-t25963*t25964*t25992*t25969*t25988*t26106*8.0-a1p*c*t25956*t25998*t25999*t26004*(2.0/3.0)+Aa*t25969*t26022*t26131*t26006*t26016*t26018*4.0+Aa*t25969*t26006*t26024*t26016*t26018*t26137*2.0+Aa*t25969*t25988*t26006*t26016*t26018*(t25964*t25992*1.2E1+t25995*t26128*2.0E1+t25963*t25964*t26005*3.2E1)*2.0-t25969*t25988*t26131*t26006*t26018*t26144*t26138*t26139*2.0-t25969*t26022*t26006*t26024*t26018*t26144*t26138*t26139*2.0+t25969*t25988*1.0/(t26012*t26012*t26012)*t26006*t26024*t26018*t26145*t26138*2.0-t25969*t25988*t26006*t26024*t26018*t26138*t26139*(b2a*c*t26095*(4.0/9.0)+b4a*t25951*t26096*(1.0E1/9.0)+b1a*c*t25997*t26095*(2.0/9.0)+b3a*c*t25947*t26095*(2.0/3.0)-b1a*t25951*t26110*t26096*(1.0/3.6E1)+b3a*t25951*t25997*t26096*(1.0/1.2E1))+Aa*a1a*c*t25956*t25969*t25988*t26131*t26006*t26016*(4.0/3.0)+Aa*a1a*c*t25956*t25969*t26022*t26006*t26024*t26016*(4.0/3.0)+Aa*a1a*c*t25969*t25988*t26006*t26024*t26016*t26095*(8.0/9.0)-t25969*t25988*1.0/(t26012*t26012*t26012*t26012)*t26006*1.0/(t26015*t26015)*t26024*t26007*t26018*t26145*(1.0/2.0)-a1a*c*t25956*t25969*t25988*t26006*t26024*t26144*t26138*t26139*(2.0/3.0))-t25969*t26062*t26170*2.0-t25962*t25998*t25999*t26004*2.0+t26050*t26051*t26052*t26057*2.0+a1p*c*c0p*t25982*t25956*(4.0/3.0)-a1p*c*c0p*t26035*t26059*(4.0/3.0)+t25983*t25992*t25995*t25969*t26022*2.0+t25983*t25995*t25969*t25988*t26005*8.0-t25992*t25995*t25969*t25988*t26106*2.0+t25963*t25964*t25983*t25992*t25969*t25988*8.0+Aa*t25969*t25988*t26131*t26006*t26016*t26018*4.0+Aa*t25969*t26022*t26006*t26024*t26016*t26018*4.0-t25969*t25988*t26006*t26024*t26018*t26144*t26138*t26139*2.0+Aa*a1a*c*t25956*t25969*t25988*t26006*t26024*t26016*(4.0/3.0))+(rho_b*t26219+rho_a*(t26194-t25969*t26062*(t26194-c0f*log((t25970*(1.0/2.0))/(b1f*t26180+b3f*t26181+b2f*c*t26178+b4f*t25951*t26182)+1.0)*(a1f*c*t26178+1.0)*2.0))-t25944*(t25994+t26198+t26199))*(-ccab2*t26213*t26066*t26068*(gamma_bb*gcab*t26211*(8.8E1/9.0)+t26206*t26171*t26066*(3.2E1/9.0)+gamma_bb*t26211*t26066*t26067*(8.8E1/9.0))+ccab4*(t26204*t26204)*1.0/(t26080*t26080*t26080)*t26074*t26075*2.0+ccab2*(t26209*t26209)*t26066*1.0/(t26085*t26085*t26085)*t26068*2.0+ccab1*gamma_bb*gcab*t26211*t26093*(4.4E1/9.0)-ccab1*t26205*t26206*t26171*t26066*(3.2E1/9.0)+ccab2*t26206*t26171*t26091*t26066*(3.2E1/9.0)-ccab4*t26212*t26074*t26075*(gamma_bb*gcab*t26211*(1.76E2/9.0)+t26206*t26171*t26066*(6.4E1/3.0)+gamma_bb*t26211*t26066*t26067*(1.76E2/3.0)+t26206*t26171*t26074*t26068*(6.4E1/3.0)+gamma_bb*gcab*t26211*t26066*t26068*(1.76E2/3.0)+gamma_bb*t26211*t26074*t26067*t26068*(1.76E2/9.0)+gcab*t26206*t26171*t26066*t26067*(1.28E2/3.0))+ccab4*t26206*t26171*t26074*t26094*t26068*(6.4E1/3.0)-ccab1*gamma_bb*t26211*t26205*t26066*t26067*(4.4E1/9.0)+ccab2*gamma_bb*t26211*t26091*t26066*t26067*(8.8E1/9.0)+ccab3*gcab*(t26217*t26217)*t26066*t26067*t26068*1.0/(t26089*t26089*t26089)*2.0+ccab3*gamma_bb*gcab*t26211*t26092*t26066*t26068*(4.4E1/3.0)-ccab2*gamma_bb*t26213*t26209*t26066*t26067*t26069*(1.6E1/3.0)+ccab4*gamma_bb*t26211*t26074*t26067*t26094*t26068*(1.76E2/9.0)+ccab3*gcab*t26206*t26171*t26092*t26066*t26067*(3.2E1/3.0)+ccab1*gcab*t26206*t26171*1.0/(t26082*t26082*t26082)*t26066*t26067*(3.2E1/9.0)-ccab3*gcab*t26210*t26066*t26067*t26068*(gamma_bb*gcab*t26211*(4.4E1/3.0)+t26206*t26171*t26066*(3.2E1/3.0)+gamma_bb*t26211*t26066*t26067*(8.8E1/3.0)+gamma_bb*gcab*t26211*t26066*t26068*(4.4E1/3.0)+gcab*t26206*t26171*t26066*t26067*(3.2E1/3.0))-ccab3*gamma_bb*gcab*t26210*t26217*t26066*t26068*t26069*8.0-ccab4*gamma_bb*t26212*t26204*t26074*t26067*t26068*t26069*(3.2E1/3.0))+(t25994+t26198+t26199+rho_b*(-t26058+t26169+t25969*t26062*(t26058+t26168-t26151*t26152*t26065*t26146-a1p*c*c0p*t26035*t26059*(2.0/3.0)))-t25944*(t26090-t25962*t25998*t25999*t26004+t25983*t25992*t25995*t25969*t26022+t25983*t25995*t25969*t25988*t26005*4.0-t25992*t25995*t25969*t25988*t26106+t25963*t25964*t25983*t25992*t25969*t25988*4.0+Aa*t25969*t25988*t26131*t26006*t26016*t26018*2.0+Aa*t25969*t26022*t26006*t26024*t26016*t26018*2.0-t25969*t25988*t26006*t26024*t26018*t26144*t26138*t26139+Aa*a1a*c*t25956*t25969*t25988*t26006*t26024*t26016*(2.0/3.0))-c0p*t26050*t26059*2.0-t25969*t26062*t26196)*(ccab1*gamma_bb*gcab*t26093*t26069*(4.0/3.0)-ccab4*t26212*t26204*t26074*t26075-ccab2*t26213*t26209*t26066*t26068-ccab1*gamma_bb*t26205*t26066*t26067*t26069*(4.0/3.0)+ccab2*gamma_bb*t26091*t26066*t26067*t26069*(8.0/3.0)+ccab3*gamma_bb*gcab*t26092*t26066*t26068*t26069*4.0+ccab4*gamma_bb*t26074*t26067*t26094*t26068*t26069*(1.6E1/3.0)-ccab3*gcab*t26210*t26217*t26066*t26067*t26068)*2.0+t26269*(-t26058+t26169+t25969*t26062*t26170)*2.0+t26262*t26219*2.0+rho_b*t26262*(t26058-t26169+t25969*t26062*(t26241-t26058-t26168+t26169))*2.0-rho_b*t26219*(ccaa1*gamma_bb*gcaa*t26211*t26228*(8.8E1/9.0)-ccaa1*t26206*t26171*t26172*t26246*2.4E1+ccaa2*t26206*t26171*t26172*t26237*(3.04E2/9.0)+ccaa4*t26225*t26173*t26174*t26264*(1.12E3/9.0)-ccaa2*t26260*t26171*t26261*t26172*t26238*(3.2E1/3.0)-ccaa4*t26240*t26173*t26174*t26256*t26257*(6.4E1/3.0)-ccaa2*t26171*t26261*t26172*t26177*(gamma_bb*gcaa*t26211*(1.76E2/9.0)+t26206*t26171*t26172*(3.04E2/9.0))-ccaa4*t26173*t26174*t26175*t26257*(gamma_bb*gcaa*t26211*(3.52E2/9.0)+t26206*t26171*t26172*(6.08E2/3.0)+t26173*t26174*t26264*(1.12E3/9.0)+gamma_bb*gcaa*t26171*t26172*t26263*2.88E2)+ccaa2*(t26260*t26260)*t26171*t26172*1.0/(t26236*t26236*t26236)*t26177*2.0+ccaa4*1.0/(t26224*t26224*t26224)*t26173*t26174*t26175*(t26256*t26256)*2.0+ccaa3*gamma_bb*gcaa*t26233*t26171*t26172*t26263*7.2E1+ccaa1*gamma_bb*gcaa*t26171*t26172*1.0/(t26227*t26227*t26227)*t26263*(1.28E2/9.0)+ccaa3*gamma_bb*gcaa*1.0/(t26232*t26232*t26232)*(t26250*t26250)*t26171*t26172*t26176*2.0-ccaa3*gamma_bb*gcaa*t26251*t26171*t26172*t26176*(gamma_bb*gcaa*t26211*(8.8E1/3.0)+t26206*t26171*t26172*(3.04E2/3.0)+gamma_bb*gcaa*t26171*t26172*t26263*7.2E1)-ccaa3*gamma_bb*gcaa*t26250*t26251*t26171*t26172*t26239*1.6E1)+rho_b*t26269*(t26283-t26158-t26167+t26285+t26279+t25969*t26062*(t26282-t26283+t26158+t26167+t26284-t26285+t26277-t26279-t26270*t26065*t26146*t26155*2.0-a1f*c*c0f*t26063*t26153*(8.0/9.0))));
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t27239 = 1.0/pow(rho_a,1.0/3.0);
                double t27240 = c*t27239;
                double t27241 = sqrt(t27240);
                double t27242 = pow(t27240,3.0/2.0);
                double t27243 = c*c;
                double t27244 = 1.0/pow(rho_a,2.0/3.0);
                double t27245 = 1.0/c0p;
                double t27246 = b1p*t27241;
                double t27247 = b3p*t27242;
                double t27248 = b4p*t27243*t27244;
                double t27249 = b2p*c*t27239;
                double t27250 = t27246+t27247+t27248+t27249;
                double t27251 = 1.0/t27250;
                double t27252 = t27251*t27245*(1.0/2.0);
                double t27253 = t27252+1.0;
                double t27254 = log(t27253);
                double t27255 = a1p*c*t27239;
                double t27256 = t27255+1.0;
                double t27257 = pow(2.0,1.0/3.0);
                double t27258 = t27257*2.0;
                double t27259 = t27258-2.0;
                double t27260 = two_13*2.0;
                double t27261 = t27260-2.0;
                double t27262 = 1.0/t27261;
                double t27263 = 1.0/c0f;
                double t27264 = 1.0/pow(rho_b,1.0/3.0);
                double t27265 = c*t27264;
                double t27266 = sqrt(t27265);
                double t27267 = pow(t27265,3.0/2.0);
                double t27268 = 1.0/pow(rho_b,2.0/3.0);
                double t27269 = b1p*t27266;
                double t27270 = b3p*t27267;
                double t27271 = b4p*t27243*t27268;
                double t27272 = b2p*c*t27264;
                double t27273 = t27270+t27271+t27272+t27269;
                double t27274 = 1.0/t27273;
                double t27275 = t27245*t27274*(1.0/2.0);
                double t27276 = t27275+1.0;
                double t27277 = log(t27276);
                double t27278 = a1p*c*t27264;
                double t27279 = t27278+1.0;
                double t27280 = c0p*t27277*t27279*2.0;
                double t27281 = rho_a+rho_b;
                double t27282 = 1.0/pow(t27281,1.0/3.0);
                double t27283 = c*t27282;
                double t27284 = sqrt(t27283);
                double t27285 = pow(t27283,3.0/2.0);
                double t27286 = 1.0/pow(t27281,2.0/3.0);
                double t27287 = b1p*t27284;
                double t27288 = b3p*t27285;
                double t27289 = b4p*t27243*t27286;
                double t27290 = b2p*c*t27282;
                double t27291 = t27290+t27287+t27288+t27289;
                double t27292 = 1.0/t27291;
                double t27293 = t27245*t27292*(1.0/2.0);
                double t27294 = t27293+1.0;
                double t27295 = log(t27294);
                double t27296 = a1p*c*t27282;
                double t27297 = t27296+1.0;
                double t27298 = c0p*t27295*t27297*2.0;
                double t27299 = rho_a-rho_b;
                double t27300 = t27299*t27299;
                double t27301 = 1.0/t27281;
                double t27302 = t27301*t27299;
                double t27303 = 1.0/(t27281*t27281*t27281*t27281);
                double t27304 = t27300*t27300;
                double t27305 = t27302+1.0;
                double t27306 = pow(t27305,4.0/3.0);
                double t27307 = -t27302+1.0;
                double t27308 = pow(t27307,4.0/3.0);
                double t27309 = t27306+t27308-2.0;
                double t27310 = gcab*gcab;
                double t27311 = 1.0/pow(rho_a,1.6E1/3.0);
                double t27312 = 1.0/pow(rho_a,8.0/3.0);
                double t27313 = gamma_aa*t27312*(1.0/2.0);
                double t27314 = 1.0/pow(rho_b,8.0/3.0);
                double t27315 = gamma_bb*t27314*(1.0/2.0);
                double t27316 = t27313+t27315;
                double t27317 = gcab*t27316;
                double t27318 = t27317+1.0;
                double t27319 = t27316*t27316;
                double t27320 = t27310*t27319;
                double t27321 = gcab*t27316*2.0;
                double t27322 = t27320+t27321+1.0;
                double t27323 = t27310*t27310;
                double t27340 = gcab*t27312*2.0;
                double t27341 = t27310*t27312*t27316*6.0;
                double t27342 = gcab*t27310*t27312*t27319*6.0;
                double t27343 = t27312*t27323*t27316*t27319*2.0;
                double t27324 = t27340+t27341+t27342+t27343;
                double t27325 = t27319*t27319;
                double t27345 = gcab*t27312*(3.0/2.0);
                double t27346 = t27310*t27312*t27316*3.0;
                double t27347 = gcab*t27310*t27312*t27319*(3.0/2.0);
                double t27326 = t27345+t27346+t27347;
                double t27327 = t27310*t27319*3.0;
                double t27328 = gcab*t27310*t27316*t27319;
                double t27329 = gcab*t27316*3.0;
                double t27330 = t27327+t27328+t27329+1.0;
                double t27337 = gcab*t27312;
                double t27338 = t27310*t27312*t27316;
                double t27331 = t27337+t27338;
                double t27332 = t27310*t27319*6.0;
                double t27333 = gcab*t27310*t27316*t27319*4.0;
                double t27334 = t27323*t27325;
                double t27335 = gcab*t27316*4.0;
                double t27336 = t27332+t27333+t27334+t27335+1.0;
                double t27339 = 1.0/(t27322*t27322);
                double t27344 = 1.0/(t27336*t27336);
                double t27348 = 1.0/(t27330*t27330);
                double t27349 = c0p*t27254*t27256*2.0;
                double t27350 = b1f*t27241;
                double t27351 = b3f*t27242;
                double t27352 = b4f*t27243*t27244;
                double t27353 = b2f*c*t27239;
                double t27354 = t27350+t27351+t27352+t27353;
                double t27355 = 1.0/t27354;
                double t27356 = t27263*t27355*(1.0/2.0);
                double t27357 = t27356+1.0;
                double t27358 = log(t27357);
                double t27359 = a1f*c*t27239;
                double t27360 = t27359+1.0;
                double t27361 = t27349-c0f*t27360*t27358*2.0;
                double t27362 = t27349-t27262*t27361*t27259;
                double t27363 = gcaa*gcaa;
                double t27364 = gamma_aa*gamma_aa;
                double t27365 = t27363*t27363;
                double t27366 = 1.0/pow(rho_a,3.2E1/3.0);
                double t27367 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t27368 = gamma_aa*gcaa*t27312;
                double t27369 = t27368+1.0;
                double t27370 = gamma_aa*gcaa*t27312*2.0;
                double t27371 = t27311*t27363*t27364;
                double t27372 = t27370+t27371+1.0;
                double t27373 = gamma_aa*gcaa*t27312*3.0;
                double t27374 = gamma_aa*gcaa*t27363*t27364*t27367;
                double t27375 = t27311*t27363*t27364*3.0;
                double t27376 = t27373+t27374+t27375+1.0;
                double t27377 = t27364*t27364;
                double t27393 = gcaa*t27312*4.0;
                double t27394 = gamma_aa*t27311*t27363*1.2E1;
                double t27395 = gcaa*t27363*t27364*t27367*1.2E1;
                double t27396 = gamma_aa*t27364*t27365*t27366*4.0;
                double t27378 = t27393+t27394+t27395+t27396;
                double t27379 = gamma_aa*gcaa*t27312*4.0;
                double t27380 = gamma_aa*gcaa*t27363*t27364*t27367*4.0;
                double t27381 = t27311*t27363*t27364*6.0;
                double t27382 = t27365*t27366*t27377;
                double t27383 = t27380+t27381+t27382+t27379+1.0;
                double t27386 = gcaa*t27312*2.0;
                double t27387 = gamma_aa*t27311*t27363*2.0;
                double t27384 = t27386+t27387;
                double t27385 = 1.0/(t27376*t27376);
                double t27388 = 1.0/(t27372*t27372);
                double t27389 = gcaa*t27312*3.0;
                double t27390 = gamma_aa*t27311*t27363*6.0;
                double t27391 = gcaa*t27363*t27364*t27367*3.0;
                double t27392 = t27390+t27391+t27389;
                double t27397 = 1.0/(t27383*t27383);
                v_gamma_aa_gamma_aa[Q] += scale * ((rho_a*t27362+rho_b*(t27280-t27262*t27259*(t27280-c0f*log((t27263*(1.0/2.0))/(b1f*t27266+b3f*t27267+b2f*c*t27264+b4f*t27243*t27268)+1.0)*(a1f*c*t27264+1.0)*2.0))-t27281*(t27298-t27303*t27304*t27262*t27309*(t27298-c0f*log((t27263*(1.0/2.0))/(b1f*t27284+b3f*t27285+b2f*c*t27282+b4f*t27243*t27286)+1.0)*(a1f*c*t27282+1.0)*2.0)+(Aa*t27262*t27309*log((1.0/2.0)/(Aa*(b1a*t27284+b3a*t27285+b2a*c*t27282+b4a*t27243*t27286))+1.0)*(t27303*t27304-1.0)*(a1a*c*t27282+1.0)*2.0)/d2fz0))*((ccab2*t27310*t27311*(1.0/2.0))/t27322-ccab1*t27310*t27311*1.0/(t27318*t27318)*(1.0/2.0)+ccab2*t27310*1.0/(t27322*t27322*t27322)*(t27331*t27331)*t27319*2.0+ccab4*t27323*(t27324*t27324)*t27325*1.0/(t27336*t27336*t27336)*2.0-ccab2*t27311*t27323*t27319*t27339*(1.0/2.0)-ccab4*t27323*t27325*t27344*(t27310*t27311*3.0+t27311*t27323*t27319*3.0+gcab*t27310*t27311*t27316*6.0)+(ccab4*t27311*t27323*t27319*3.0)/t27336-ccab2*t27310*t27312*t27331*t27316*t27339*2.0+(ccab3*gcab*t27310*t27311*t27316*(3.0/2.0))/t27330+ccab1*gcab*t27310*t27311*t27316*1.0/(t27318*t27318*t27318)*(1.0/2.0)+ccab3*gcab*t27310*1.0/(t27330*t27330*t27330)*t27316*(t27326*t27326)*t27319*2.0-ccab3*gcab*t27310*t27312*t27326*t27319*t27348*3.0-ccab4*t27312*t27323*t27324*t27316*t27344*t27319*4.0-ccab3*gcab*t27310*t27316*t27319*t27348*(t27310*t27311*(3.0/2.0)+gcab*t27310*t27311*t27316*(3.0/2.0)))-rho_a*t27362*((ccaa2*t27311*t27363*2.0)/t27372-ccaa1*t27311*t27363*1.0/(t27369*t27369)*2.0-ccaa2*t27364*t27365*t27366*t27388*2.0+(ccaa4*t27364*t27365*t27366*1.2E1)/t27383-ccaa4*t27365*t27366*t27377*t27397*(t27311*t27363*1.2E1+t27364*t27365*t27366*1.2E1+gamma_aa*gcaa*t27363*t27367*2.4E1)+(ccaa3*gamma_aa*gcaa*t27363*t27367*6.0)/t27376+ccaa1*gamma_aa*gcaa*t27363*t27367*1.0/(t27369*t27369*t27369)*2.0+ccaa2*t27311*t27363*1.0/(t27372*t27372*t27372)*t27364*(t27384*t27384)*2.0+ccaa4*t27365*1.0/(t27383*t27383*t27383)*t27366*t27377*(t27378*t27378)*2.0-ccaa2*gamma_aa*t27311*t27363*t27384*t27388*4.0-ccaa4*gamma_aa*t27364*t27365*t27366*t27378*t27397*8.0-ccaa3*gcaa*t27363*t27364*t27392*t27367*t27385*6.0-ccaa3*gamma_aa*gcaa*t27363*t27364*t27367*t27385*(t27311*t27363*6.0+gamma_aa*gcaa*t27363*t27367*6.0)+ccaa3*gamma_aa*gcaa*t27363*t27364*(t27392*t27392)*t27367*1.0/(t27376*t27376*t27376)*2.0));
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t27400 = 1.0/pow(rho_a,1.0/3.0);
                double t27401 = c*t27400;
                double t27402 = sqrt(t27401);
                double t27403 = pow(t27401,3.0/2.0);
                double t27404 = c*c;
                double t27405 = 1.0/pow(rho_a,2.0/3.0);
                double t27406 = 1.0/c0p;
                double t27407 = b1p*t27402;
                double t27408 = b3p*t27403;
                double t27409 = b4p*t27404*t27405;
                double t27410 = b2p*c*t27400;
                double t27411 = t27410+t27407+t27408+t27409;
                double t27412 = 1.0/t27411;
                double t27413 = t27412*t27406*(1.0/2.0);
                double t27414 = t27413+1.0;
                double t27415 = log(t27414);
                double t27416 = a1p*c*t27400;
                double t27417 = t27416+1.0;
                double t27418 = pow(2.0,1.0/3.0);
                double t27419 = t27418*2.0;
                double t27420 = t27419-2.0;
                double t27421 = two_13*2.0;
                double t27422 = t27421-2.0;
                double t27423 = 1.0/t27422;
                double t27424 = 1.0/c0f;
                double t27425 = 1.0/pow(rho_b,1.0/3.0);
                double t27426 = c*t27425;
                double t27427 = sqrt(t27426);
                double t27428 = pow(t27426,3.0/2.0);
                double t27429 = 1.0/pow(rho_b,2.0/3.0);
                double t27430 = b1p*t27427;
                double t27431 = b3p*t27428;
                double t27432 = b4p*t27404*t27429;
                double t27433 = b2p*c*t27425;
                double t27434 = t27430+t27431+t27432+t27433;
                double t27435 = 1.0/t27434;
                double t27436 = t27406*t27435*(1.0/2.0);
                double t27437 = t27436+1.0;
                double t27438 = log(t27437);
                double t27439 = a1p*c*t27425;
                double t27440 = t27439+1.0;
                double t27441 = c0p*t27440*t27438*2.0;
                double t27442 = rho_a+rho_b;
                double t27443 = 1.0/pow(t27442,1.0/3.0);
                double t27444 = c*t27443;
                double t27445 = sqrt(t27444);
                double t27446 = pow(t27444,3.0/2.0);
                double t27447 = 1.0/pow(t27442,2.0/3.0);
                double t27448 = b1p*t27445;
                double t27449 = b3p*t27446;
                double t27450 = b4p*t27404*t27447;
                double t27451 = b2p*c*t27443;
                double t27452 = t27450+t27451+t27448+t27449;
                double t27453 = 1.0/t27452;
                double t27454 = t27406*t27453*(1.0/2.0);
                double t27455 = t27454+1.0;
                double t27456 = log(t27455);
                double t27457 = a1p*c*t27443;
                double t27458 = t27457+1.0;
                double t27459 = c0p*t27456*t27458*2.0;
                double t27460 = rho_a-rho_b;
                double t27461 = t27460*t27460;
                double t27462 = 1.0/t27442;
                double t27463 = t27460*t27462;
                double t27464 = 1.0/(t27442*t27442*t27442*t27442);
                double t27465 = t27461*t27461;
                double t27466 = t27463+1.0;
                double t27467 = pow(t27466,4.0/3.0);
                double t27468 = -t27463+1.0;
                double t27469 = pow(t27468,4.0/3.0);
                double t27470 = t27467+t27469-2.0;
                double t27471 = gcab*gcab;
                double t27474 = 1.0/pow(rho_a,8.0/3.0);
                double t27475 = 1.0/pow(rho_b,8.0/3.0);
                double t27476 = gamma_aa*t27474*(1.0/2.0);
                double t27477 = gamma_bb*t27475*(1.0/2.0);
                double t27472 = t27476+t27477;
                double t27473 = t27472*t27472;
                double t27478 = t27471*t27471;
                double t27479 = t27473*t27473;
                double t27480 = t27471*t27473*3.0;
                double t27481 = gcab*t27471*t27472*t27473;
                double t27482 = gcab*t27472*3.0;
                double t27483 = t27480+t27481+t27482+1.0;
                double t27484 = t27471*t27473;
                double t27485 = gcab*t27472*2.0;
                double t27486 = t27484+t27485+1.0;
                double t27487 = t27471*t27473*6.0;
                double t27488 = gcab*t27471*t27472*t27473*4.0;
                double t27489 = t27478*t27479;
                double t27490 = gcab*t27472*4.0;
                double t27491 = t27490+t27487+t27488+t27489+1.0;
                double t27492 = 1.0/(t27486*t27486);
                double t27493 = gcab*t27474;
                double t27494 = t27471*t27472*t27474;
                double t27495 = t27493+t27494;
                double t27496 = gcab*t27475;
                double t27497 = t27471*t27472*t27475;
                double t27498 = t27496+t27497;
                double t27499 = gcab*t27472;
                double t27500 = t27499+1.0;
                double t27501 = gcab*t27474*2.0;
                double t27502 = t27471*t27472*t27474*6.0;
                double t27503 = gcab*t27471*t27473*t27474*6.0;
                double t27504 = t27472*t27473*t27474*t27478*2.0;
                double t27505 = t27501+t27502+t27503+t27504;
                double t27506 = 1.0/(t27491*t27491);
                double t27507 = gcab*t27475*2.0;
                double t27508 = t27471*t27472*t27475*6.0;
                double t27509 = gcab*t27471*t27473*t27475*6.0;
                double t27510 = t27472*t27473*t27475*t27478*2.0;
                double t27511 = t27510+t27507+t27508+t27509;
                double t27512 = gcab*t27474*(3.0/2.0);
                double t27513 = t27471*t27472*t27474*3.0;
                double t27514 = gcab*t27471*t27473*t27474*(3.0/2.0);
                double t27515 = t27512+t27513+t27514;
                double t27516 = 1.0/(t27483*t27483);
                double t27517 = gcab*t27475*(3.0/2.0);
                double t27518 = t27471*t27472*t27475*3.0;
                double t27519 = gcab*t27471*t27473*t27475*(3.0/2.0);
                double t27520 = t27517+t27518+t27519;
                v_gamma_aa_gamma_bb[Q] += scale * ((-rho_b*(t27441-t27420*t27423*(t27441-c0f*log((t27424*(1.0/2.0))/(b1f*t27427+b3f*t27428+b2f*c*t27425+b4f*t27404*t27429)+1.0)*(a1f*c*t27425+1.0)*2.0))+t27442*(t27459-t27423*t27470*t27464*t27465*(t27459-c0f*log((t27424*(1.0/2.0))/(b1f*t27445+b3f*t27446+b2f*c*t27443+b4f*t27404*t27447)+1.0)*(a1f*c*t27443+1.0)*2.0)+(Aa*t27423*t27470*log((1.0/2.0)/(Aa*(b1a*t27445+b3a*t27446+b2a*c*t27443+b4a*t27404*t27447))+1.0)*(t27464*t27465-1.0)*(a1a*c*t27443+1.0)*2.0)/d2fz0)+rho_a*(t27420*t27423*(c0p*t27415*t27417*2.0-c0f*log((t27424*(1.0/2.0))/(b1f*t27402+b3f*t27403+b2f*c*t27400+b4f*t27404*t27405)+1.0)*(a1f*c*t27400+1.0)*2.0)-c0p*t27415*t27417*2.0))*(ccab4*t27506*t27478*t27479*(t27471*t27474*t27475*3.0+t27473*t27474*t27475*t27478*3.0+gcab*t27471*t27472*t27474*t27475*6.0)+ccab1*1.0/(t27500*t27500)*t27471*t27474*t27475*(1.0/2.0)-(ccab2*t27471*t27474*t27475*(1.0/2.0))/t27486+ccab2*t27471*t27472*t27492*t27475*t27495+ccab2*t27471*t27472*t27474*t27492*t27498+ccab2*t27473*t27474*t27492*t27475*t27478*(1.0/2.0)-ccab4*t27511*t27505*1.0/(t27491*t27491*t27491)*t27478*t27479*2.0-(ccab4*t27473*t27474*t27475*t27478*3.0)/t27491-ccab2*t27471*t27473*1.0/(t27486*t27486*t27486)*t27495*t27498*2.0+ccab3*gcab*t27520*t27471*t27516*t27473*t27474*(3.0/2.0)+ccab3*gcab*t27515*t27471*t27516*t27473*t27475*(3.0/2.0)+ccab4*t27511*t27506*t27472*t27473*t27474*t27478*2.0+ccab4*t27505*t27506*t27472*t27473*t27475*t27478*2.0+ccab3*gcab*t27471*t27516*t27472*t27473*(t27471*t27474*t27475*(3.0/2.0)+gcab*t27471*t27472*t27474*t27475*(3.0/2.0))-ccab1*gcab*1.0/(t27500*t27500*t27500)*t27471*t27472*t27474*t27475*(1.0/2.0)-(ccab3*gcab*t27471*t27472*t27474*t27475*(3.0/2.0))/t27483-ccab3*gcab*t27520*t27515*t27471*t27472*t27473*1.0/(t27483*t27483*t27483)*2.0));
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t27524 = 1.0/pow(rho_a,1.0/3.0);
                double t27525 = c*t27524;
                double t27526 = sqrt(t27525);
                double t27527 = pow(t27525,3.0/2.0);
                double t27528 = c*c;
                double t27529 = 1.0/pow(rho_a,2.0/3.0);
                double t27530 = 1.0/c0p;
                double t27531 = b1p*t27526;
                double t27532 = b3p*t27527;
                double t27533 = b4p*t27528*t27529;
                double t27534 = b2p*c*t27524;
                double t27535 = t27531+t27532+t27533+t27534;
                double t27536 = 1.0/t27535;
                double t27537 = t27530*t27536*(1.0/2.0);
                double t27538 = t27537+1.0;
                double t27539 = log(t27538);
                double t27540 = a1p*c*t27524;
                double t27541 = t27540+1.0;
                double t27542 = pow(2.0,1.0/3.0);
                double t27543 = t27542*2.0;
                double t27544 = t27543-2.0;
                double t27545 = two_13*2.0;
                double t27546 = t27545-2.0;
                double t27547 = 1.0/t27546;
                double t27548 = 1.0/c0f;
                double t27549 = 1.0/pow(rho_b,1.0/3.0);
                double t27550 = c*t27549;
                double t27551 = sqrt(t27550);
                double t27552 = pow(t27550,3.0/2.0);
                double t27553 = 1.0/pow(rho_b,2.0/3.0);
                double t27554 = b1p*t27551;
                double t27555 = b3p*t27552;
                double t27556 = b4p*t27553*t27528;
                double t27557 = b2p*c*t27549;
                double t27558 = t27554+t27555+t27556+t27557;
                double t27559 = 1.0/t27558;
                double t27560 = t27530*t27559*(1.0/2.0);
                double t27561 = t27560+1.0;
                double t27562 = log(t27561);
                double t27563 = a1p*c*t27549;
                double t27564 = t27563+1.0;
                double t27565 = c0p*t27562*t27564*2.0;
                double t27566 = rho_a+rho_b;
                double t27567 = 1.0/pow(t27566,1.0/3.0);
                double t27568 = c*t27567;
                double t27569 = sqrt(t27568);
                double t27570 = pow(t27568,3.0/2.0);
                double t27571 = 1.0/pow(t27566,2.0/3.0);
                double t27572 = b1p*t27569;
                double t27573 = b3p*t27570;
                double t27574 = b4p*t27571*t27528;
                double t27575 = b2p*c*t27567;
                double t27576 = t27572+t27573+t27574+t27575;
                double t27577 = 1.0/t27576;
                double t27578 = t27530*t27577*(1.0/2.0);
                double t27579 = t27578+1.0;
                double t27580 = log(t27579);
                double t27581 = a1p*c*t27567;
                double t27582 = t27581+1.0;
                double t27583 = c0p*t27580*t27582*2.0;
                double t27584 = rho_a-rho_b;
                double t27585 = t27584*t27584;
                double t27586 = 1.0/t27566;
                double t27587 = t27584*t27586;
                double t27588 = 1.0/(t27566*t27566*t27566*t27566);
                double t27589 = t27585*t27585;
                double t27590 = t27587+1.0;
                double t27591 = pow(t27590,4.0/3.0);
                double t27592 = -t27587+1.0;
                double t27593 = pow(t27592,4.0/3.0);
                double t27594 = t27591+t27593-2.0;
                double t27595 = gcab*gcab;
                double t27596 = 1.0/pow(rho_b,1.6E1/3.0);
                double t27597 = 1.0/pow(rho_a,8.0/3.0);
                double t27598 = gamma_aa*t27597*(1.0/2.0);
                double t27599 = 1.0/pow(rho_b,8.0/3.0);
                double t27600 = gamma_bb*t27599*(1.0/2.0);
                double t27601 = t27600+t27598;
                double t27602 = gcab*t27601;
                double t27603 = t27602+1.0;
                double t27604 = t27601*t27601;
                double t27605 = t27604*t27595;
                double t27606 = gcab*t27601*2.0;
                double t27607 = t27605+t27606+1.0;
                double t27608 = t27595*t27595;
                double t27625 = gcab*t27599*2.0;
                double t27626 = t27601*t27595*t27599*6.0;
                double t27627 = gcab*t27604*t27595*t27599*6.0;
                double t27628 = t27601*t27604*t27608*t27599*2.0;
                double t27609 = t27625+t27626+t27627+t27628;
                double t27610 = t27604*t27604;
                double t27630 = gcab*t27599*(3.0/2.0);
                double t27631 = t27601*t27595*t27599*3.0;
                double t27632 = gcab*t27604*t27595*t27599*(3.0/2.0);
                double t27611 = t27630+t27631+t27632;
                double t27612 = t27604*t27595*3.0;
                double t27613 = gcab*t27601*t27604*t27595;
                double t27614 = gcab*t27601*3.0;
                double t27615 = t27612+t27613+t27614+1.0;
                double t27622 = gcab*t27599;
                double t27623 = t27601*t27595*t27599;
                double t27616 = t27622+t27623;
                double t27617 = t27604*t27595*6.0;
                double t27618 = gcab*t27601*t27604*t27595*4.0;
                double t27619 = t27610*t27608;
                double t27620 = gcab*t27601*4.0;
                double t27621 = t27620+t27617+t27618+t27619+1.0;
                double t27624 = 1.0/(t27607*t27607);
                double t27629 = 1.0/(t27621*t27621);
                double t27633 = 1.0/(t27615*t27615);
                double t27634 = b1f*t27551;
                double t27635 = b3f*t27552;
                double t27636 = b4f*t27553*t27528;
                double t27637 = b2f*c*t27549;
                double t27638 = t27634+t27635+t27636+t27637;
                double t27639 = 1.0/t27638;
                double t27640 = t27548*t27639*(1.0/2.0);
                double t27641 = t27640+1.0;
                double t27642 = log(t27641);
                double t27643 = a1f*c*t27549;
                double t27644 = t27643+1.0;
                double t27645 = t27565-c0f*t27642*t27644*2.0;
                double t27646 = t27565-t27544*t27645*t27547;
                double t27647 = gcaa*gcaa;
                double t27648 = gamma_bb*gamma_bb;
                double t27649 = t27647*t27647;
                double t27650 = 1.0/pow(rho_b,3.2E1/3.0);
                double t27651 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27652 = gamma_bb*gcaa*t27599;
                double t27653 = t27652+1.0;
                double t27654 = gamma_bb*gcaa*t27599*2.0;
                double t27655 = t27647*t27648*t27596;
                double t27656 = t27654+t27655+1.0;
                double t27657 = gamma_bb*gcaa*t27599*3.0;
                double t27658 = gamma_bb*gcaa*t27651*t27647*t27648;
                double t27659 = t27647*t27648*t27596*3.0;
                double t27660 = t27657+t27658+t27659+1.0;
                double t27661 = t27648*t27648;
                double t27677 = gcaa*t27599*4.0;
                double t27678 = gamma_bb*t27647*t27596*1.2E1;
                double t27679 = gcaa*t27651*t27647*t27648*1.2E1;
                double t27680 = gamma_bb*t27650*t27648*t27649*4.0;
                double t27662 = t27680+t27677+t27678+t27679;
                double t27663 = gamma_bb*gcaa*t27599*4.0;
                double t27664 = gamma_bb*gcaa*t27651*t27647*t27648*4.0;
                double t27665 = t27647*t27648*t27596*6.0;
                double t27666 = t27650*t27661*t27649;
                double t27667 = t27663+t27664+t27665+t27666+1.0;
                double t27670 = gcaa*t27599*2.0;
                double t27671 = gamma_bb*t27647*t27596*2.0;
                double t27668 = t27670+t27671;
                double t27669 = 1.0/(t27660*t27660);
                double t27672 = 1.0/(t27656*t27656);
                double t27673 = gcaa*t27599*3.0;
                double t27674 = gamma_bb*t27647*t27596*6.0;
                double t27675 = gcaa*t27651*t27647*t27648*3.0;
                double t27676 = t27673+t27674+t27675;
                double t27681 = 1.0/(t27667*t27667);
                v_gamma_bb_gamma_bb[Q] += scale * ((-rho_b*t27646+t27566*(t27583-t27547*t27594*t27588*t27589*(t27583-c0f*log((t27548*(1.0/2.0))/(b1f*t27569+b3f*t27570+b2f*c*t27567+b4f*t27571*t27528)+1.0)*(a1f*c*t27567+1.0)*2.0)+(Aa*t27547*t27594*log((1.0/2.0)/(Aa*(b1a*t27569+b3a*t27570+b2a*c*t27567+b4a*t27571*t27528))+1.0)*(t27588*t27589-1.0)*(a1a*c*t27567+1.0)*2.0)/d2fz0)+rho_a*(t27544*t27547*(c0p*t27541*t27539*2.0-c0f*log((t27548*(1.0/2.0))/(b1f*t27526+b3f*t27527+b2f*c*t27524+b4f*t27528*t27529)+1.0)*(a1f*c*t27524+1.0)*2.0)-c0p*t27541*t27539*2.0))*(ccab1*1.0/(t27603*t27603)*t27595*t27596*(1.0/2.0)-(ccab2*t27595*t27596*(1.0/2.0))/t27607-ccab4*t27610*1.0/(t27621*t27621*t27621)*t27608*(t27609*t27609)*2.0-ccab2*t27604*1.0/(t27607*t27607*t27607)*(t27616*t27616)*t27595*2.0+ccab2*t27604*t27624*t27608*t27596*(1.0/2.0)+ccab4*t27610*t27608*t27629*(t27595*t27596*3.0+t27604*t27608*t27596*3.0+gcab*t27601*t27595*t27596*6.0)-(ccab4*t27604*t27608*t27596*3.0)/t27621+ccab2*t27601*t27624*t27616*t27595*t27599*2.0-ccab1*gcab*t27601*1.0/(t27603*t27603*t27603)*t27595*t27596*(1.0/2.0)-(ccab3*gcab*t27601*t27595*t27596*(3.0/2.0))/t27615-ccab3*gcab*t27601*(t27611*t27611)*t27604*1.0/(t27615*t27615*t27615)*t27595*2.0+ccab3*gcab*t27611*t27604*t27633*t27595*t27599*3.0+ccab4*t27601*t27604*t27608*t27609*t27629*t27599*4.0+ccab3*gcab*t27601*t27604*t27633*t27595*(t27595*t27596*(3.0/2.0)+gcab*t27601*t27595*t27596*(3.0/2.0)))+rho_b*t27646*(ccaa1*1.0/(t27653*t27653)*t27647*t27596*2.0-(ccaa2*t27647*t27596*2.0)/t27656+ccaa2*t27650*t27672*t27648*t27649*2.0-(ccaa4*t27650*t27648*t27649*1.2E1)/t27667+ccaa4*t27650*t27661*t27681*t27649*(t27647*t27596*1.2E1+t27650*t27648*t27649*1.2E1+gamma_bb*gcaa*t27651*t27647*2.4E1)-(ccaa3*gamma_bb*gcaa*t27651*t27647*6.0)/t27660-ccaa1*gamma_bb*gcaa*t27651*1.0/(t27653*t27653*t27653)*t27647*2.0-ccaa4*t27650*t27661*(t27662*t27662)*t27649*1.0/(t27667*t27667*t27667)*2.0-ccaa2*t27647*1.0/(t27656*t27656*t27656)*t27648*t27596*(t27668*t27668)*2.0+ccaa2*gamma_bb*t27672*t27647*t27596*t27668*4.0+ccaa4*gamma_bb*t27650*t27662*t27681*t27648*t27649*8.0+ccaa3*gcaa*t27651*t27647*t27648*t27676*t27669*6.0+ccaa3*gamma_bb*gcaa*t27651*t27647*t27648*t27669*(t27647*t27596*6.0+gamma_bb*gcaa*t27651*t27647*6.0)-ccaa3*gamma_bb*gcaa*t27651*1.0/(t27660*t27660*t27660)*t27647*t27648*(t27676*t27676)*2.0));
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t26287 = 1.0/pow(rho_a,1.0/3.0);
                double t26288 = c*t26287;
                double t26289 = sqrt(t26288);
                double t26290 = pow(t26288,3.0/2.0);
                double t26291 = c*c;
                double t26292 = 1.0/pow(rho_a,2.0/3.0);
                double t26293 = 1.0/c0p;
                double t26294 = b1p*t26289;
                double t26295 = b3p*t26290;
                double t26296 = b4p*t26291*t26292;
                double t26297 = b2p*c*t26287;
                double t26298 = t26294+t26295+t26296+t26297;
                double t26299 = 1.0/t26298;
                double t26300 = t26293*t26299*(1.0/2.0);
                double t26301 = t26300+1.0;
                double t26302 = log(t26301);
                double t26303 = a1p*c*t26287;
                double t26304 = t26303+1.0;
                double t26305 = 1.0/pow(rho_a,8.0/3.0);
                double t26306 = gamma_aa*gamma_aa;
                double t26307 = gcaa*gcaa;
                double t26308 = t26307*t26307;
                double t26309 = 1.0/pow(rho_a,3.2E1/3.0);
                double t26310 = 1.0/pow(rho_a,1.6E1/3.0);
                double t26311 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t26312 = gamma_aa*gcaa*t26305;
                double t26313 = t26312+1.0;
                double t26314 = gamma_aa*gcaa*t26305*3.0;
                double t26315 = gamma_aa*gcaa*t26311*t26306*t26307;
                double t26316 = t26310*t26306*t26307*3.0;
                double t26317 = t26314+t26315+t26316+1.0;
                double t26318 = t26306*t26306;
                double t26319 = gamma_aa*gcaa*t26305*4.0;
                double t26320 = gamma_aa*gcaa*t26311*t26306*t26307*4.0;
                double t26321 = t26310*t26306*t26307*6.0;
                double t26322 = t26308*t26309*t26318;
                double t26323 = t26320+t26321+t26322+t26319+1.0;
                double t26324 = gamma_aa*gcaa*t26305*2.0;
                double t26325 = t26310*t26306*t26307;
                double t26326 = t26324+t26325+1.0;
                double t26327 = rho_a+rho_b;
                double t26328 = 1.0/pow(t26327,1.0/3.0);
                double t26329 = c*t26328;
                double t26330 = sqrt(t26329);
                double t26331 = b1p*t26330;
                double t26332 = pow(t26329,3.0/2.0);
                double t26333 = b3p*t26332;
                double t26334 = 1.0/pow(t26327,2.0/3.0);
                double t26335 = b4p*t26334*t26291;
                double t26336 = b2p*c*t26328;
                double t26337 = t26331+t26333+t26335+t26336;
                double t26338 = 1.0/pow(t26327,4.0/3.0);
                double t26339 = two_13*2.0;
                double t26340 = t26339-2.0;
                double t26341 = 1.0/t26340;
                double t26342 = 1.0/c0f;
                double t26343 = 1.0/t26337;
                double t26344 = t26343*t26293*(1.0/2.0);
                double t26345 = t26344+1.0;
                double t26346 = a1p*c*t26328;
                double t26347 = t26346+1.0;
                double t26348 = rho_a-rho_b;
                double t26349 = t26348*t26348;
                double t26350 = 1.0/t26327;
                double t26351 = t26350*t26348;
                double t26352 = b1f*t26330;
                double t26353 = b3f*t26332;
                double t26354 = b4f*t26334*t26291;
                double t26355 = b2f*c*t26328;
                double t26356 = t26352+t26353+t26354+t26355;
                double t26357 = 1.0/t26356;
                double t26358 = t26342*t26357*(1.0/2.0);
                double t26359 = t26358+1.0;
                double t26360 = log(t26359);
                double t26361 = a1f*c*t26328;
                double t26362 = t26361+1.0;
                double t26363 = log(t26345);
                double t26373 = c0f*t26360*t26362*2.0;
                double t26374 = c0p*t26363*t26347*2.0;
                double t26364 = t26373-t26374;
                double t26365 = t26351+1.0;
                double t26366 = pow(t26365,4.0/3.0);
                double t26367 = -t26351+1.0;
                double t26368 = pow(t26367,4.0/3.0);
                double t26369 = t26366+t26368-2.0;
                double t26370 = 1.0/(t26327*t26327);
                double t26401 = t26370*t26348;
                double t26371 = -t26401+t26350;
                double t26372 = 1.0/(t26327*t26327*t26327*t26327);
                double t26375 = t26349*t26349;
                double t26376 = 1.0/pow(t26327,5.0/3.0);
                double t26377 = 1.0/sqrt(t26329);
                double t26378 = 1.0/t26345;
                double t26379 = 1.0/(t26337*t26337);
                double t26380 = b4p*t26291*t26376*(2.0/3.0);
                double t26381 = b2p*c*t26338*(1.0/3.0);
                double t26382 = b1p*c*t26338*t26377*(1.0/6.0);
                double t26383 = b3p*c*t26330*t26338*(1.0/2.0);
                double t26384 = t26380+t26381+t26382+t26383;
                double t26385 = t26347*t26384*t26378*t26379;
                double t26386 = 1.0/(t26327*t26327*t26327*t26327*t26327);
                double t26387 = 1.0/d2fz0;
                double t26388 = 1.0/Aa;
                double t26389 = b1a*t26330;
                double t26390 = b3a*t26332;
                double t26391 = b4a*t26334*t26291;
                double t26392 = b2a*c*t26328;
                double t26393 = t26390+t26391+t26392+t26389;
                double t26394 = 1.0/t26393;
                double t26395 = t26394*t26388*(1.0/2.0);
                double t26396 = t26395+1.0;
                double t26397 = log(t26396);
                double t26398 = a1a*c*t26328;
                double t26399 = t26398+1.0;
                double t26400 = pow(t26365,1.0/3.0);
                double t26402 = t26400*t26371*(4.0/3.0);
                double t26403 = pow(t26367,1.0/3.0);
                double t26404 = t26402-t26403*t26371*(4.0/3.0);
                double t26405 = t26372*t26375;
                double t26406 = t26405-1.0;
                double t26407 = pow(2.0,1.0/3.0);
                double t26408 = t26407*2.0;
                double t26409 = t26408-2.0;
                double t26410 = a1f*c*t26287;
                double t26411 = t26410+1.0;
                double t26412 = b1f*t26289;
                double t26413 = b3f*t26290;
                double t26414 = b4f*t26291*t26292;
                double t26415 = b2f*c*t26287;
                double t26416 = t26412+t26413+t26414+t26415;
                double t26417 = 1.0/t26416;
                double t26418 = t26342*t26417*(1.0/2.0);
                double t26419 = t26418+1.0;
                double t26420 = 1.0/pow(rho_a,4.0/3.0);
                double t26421 = 1.0/pow(rho_a,5.0/3.0);
                double t26422 = 1.0/sqrt(t26288);
                double t26423 = log(t26419);
                double t26424 = 1.0/t26301;
                double t26425 = 1.0/(t26298*t26298);
                double t26426 = b4p*t26421*t26291*(2.0/3.0);
                double t26427 = b2p*c*t26420*(1.0/3.0);
                double t26428 = b1p*c*t26420*t26422*(1.0/6.0);
                double t26429 = b3p*c*t26420*t26289*(1.0/2.0);
                double t26430 = t26426+t26427+t26428+t26429;
                double t26431 = t26304*t26430*t26424*t26425;
                double t26432 = c0f*t26411*t26423*2.0;
                double t26433 = c0p*t26302*t26304*2.0;
                double t26434 = gamma_aa*t26305*(1.0/2.0);
                double t26435 = 1.0/pow(rho_b,8.0/3.0);
                double t26436 = gamma_bb*t26435*(1.0/2.0);
                double t26437 = t26434+t26436;
                double t26438 = gcab*t26437;
                double t26439 = t26438+1.0;
                double t26440 = gcab*gcab;
                double t26441 = t26437*t26437;
                double t26442 = t26440*t26440;
                double t26443 = t26441*t26441;
                double t26444 = t26440*t26441;
                double t26445 = gcab*t26437*2.0;
                double t26446 = t26444+t26445+1.0;
                double t26447 = t26440*t26441*3.0;
                double t26448 = gcab*t26440*t26441*t26437;
                double t26449 = gcab*t26437*3.0;
                double t26450 = t26447+t26448+t26449+1.0;
                double t26451 = t26440*t26441*6.0;
                double t26452 = gcab*t26440*t26441*t26437*4.0;
                double t26453 = t26442*t26443;
                double t26454 = gcab*t26437*4.0;
                double t26455 = t26451+t26452+t26453+t26454+1.0;
                double t26456 = t26432-t26433;
                double t26457 = 1.0/pow(rho_b,1.0/3.0);
                double t26458 = c*t26457;
                double t26459 = sqrt(t26458);
                double t26460 = pow(t26458,3.0/2.0);
                double t26461 = 1.0/pow(rho_b,2.0/3.0);
                double t26462 = b1p*t26459;
                double t26463 = b3p*t26460;
                double t26464 = b4p*t26461*t26291;
                double t26465 = b2p*c*t26457;
                double t26466 = t26462+t26463+t26464+t26465;
                double t26467 = 1.0/t26466;
                double t26468 = t26293*t26467*(1.0/2.0);
                double t26469 = t26468+1.0;
                double t26470 = log(t26469);
                double t26471 = a1p*c*t26457;
                double t26472 = t26471+1.0;
                double t26473 = c0p*t26470*t26472*2.0;
                double t26474 = t26341*t26372*t26364*t26375*t26369;
                double t26475 = Aa*t26341*t26406*t26369*t26387*t26397*t26399*2.0;
                double t26476 = 1.0/t26439;
                double t26477 = 1.0/pow(rho_a,1.1E1/3.0);
                double t26478 = 1.0/(t26439*t26439);
                double t26479 = 1.0/t26446;
                double t26480 = 1.0/(t26450*t26450);
                double t26481 = 1.0/pow(rho_a,1.9E1/3.0);
                double t26482 = 1.0/(t26446*t26446);
                double t26483 = 1.0/t26450;
                double t26484 = 1.0/t26455;
                double t26485 = 1.0/(t26455*t26455);
                double t26486 = gcab*t26305*2.0;
                double t26487 = t26305*t26440*t26437*6.0;
                double t26488 = gcab*t26305*t26440*t26441*6.0;
                double t26489 = t26305*t26441*t26442*t26437*2.0;
                double t26490 = t26486+t26487+t26488+t26489;
                double t26491 = gamma_aa*gcab*t26477*(8.0/3.0);
                double t26492 = gamma_aa*t26440*t26437*t26477*(8.0/3.0);
                double t26493 = t26491+t26492;
                double t26494 = gcab*t26305;
                double t26495 = t26305*t26440*t26437;
                double t26496 = t26494+t26495;
                double t26497 = gamma_aa*gcab*t26477*(1.6E1/3.0);
                double t26498 = gamma_aa*gcab*t26440*t26441*t26477*1.6E1;
                double t26499 = gamma_aa*t26441*t26442*t26437*t26477*(1.6E1/3.0);
                double t26500 = gamma_aa*t26440*t26437*t26477*1.6E1;
                double t26501 = t26500+t26497+t26498+t26499;
                double t26502 = gcab*t26305*(3.0/2.0);
                double t26503 = t26305*t26440*t26437*3.0;
                double t26504 = gcab*t26305*t26440*t26441*(3.0/2.0);
                double t26505 = t26502+t26503+t26504;
                double t26506 = gamma_aa*gcab*t26477*4.0;
                double t26507 = gamma_aa*gcab*t26440*t26441*t26477*4.0;
                double t26508 = gamma_aa*t26440*t26437*t26477*8.0;
                double t26509 = t26506+t26507+t26508;
                double t26510 = t26341*t26409*t26456;
                double t26511 = t26510+t26433;
                double t26512 = 1.0/t26313;
                double t26513 = 1.0/t26323;
                double t26514 = 1.0/t26326;
                double t26515 = 1.0/t26317;
                double t26516 = 1.0/(t26313*t26313);
                double t26517 = 1.0/(rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a*rho_a);
                double t26518 = 1.0/(t26317*t26317);
                double t26519 = 1.0/(t26326*t26326);
                double t26520 = gcaa*t26305*3.0;
                double t26521 = gamma_aa*t26310*t26307*6.0;
                double t26522 = gcaa*t26311*t26306*t26307*3.0;
                double t26523 = t26520+t26521+t26522;
                double t26524 = 1.0/pow(rho_a,3.5E1/3.0);
                double t26525 = 1.0/(t26323*t26323);
                double t26526 = gcaa*t26305*4.0;
                double t26527 = gamma_aa*t26310*t26307*1.2E1;
                double t26528 = gcaa*t26311*t26306*t26307*1.2E1;
                double t26529 = gamma_aa*t26306*t26308*t26309*4.0;
                double t26530 = t26526+t26527+t26528+t26529;
                double t26531 = gcaa*t26305*2.0;
                double t26532 = gamma_aa*t26310*t26307*2.0;
                double t26533 = t26531+t26532;
                double t26534 = gamma_aa*gcaa*t26477*(1.6E1/3.0);
                double t26535 = t26306*t26307*t26481*(1.6E1/3.0);
                double t26536 = t26534+t26535;
                double t26537 = gamma_aa*gcaa*t26477*8.0;
                double t26538 = gamma_aa*gcaa*t26306*t26307*t26517*8.0;
                double t26539 = t26306*t26307*t26481*1.6E1;
                double t26540 = t26537+t26538+t26539;
                double t26541 = gamma_aa*gcaa*t26477*(3.2E1/3.0);
                double t26542 = gamma_aa*gcaa*t26306*t26307*t26517*3.2E1;
                double t26543 = t26306*t26307*t26481*3.2E1;
                double t26544 = t26308*t26524*t26318*(3.2E1/3.0);
                double t26545 = t26541+t26542+t26543+t26544;
                double t26546 = 1.0/t26419;
                double t26547 = 1.0/(t26416*t26416);
                double t26548 = b4f*t26421*t26291*(2.0/3.0);
                double t26549 = b2f*c*t26420*(1.0/3.0);
                double t26550 = b1f*c*t26420*t26422*(1.0/6.0);
                double t26551 = b3f*c*t26420*t26289*(1.0/2.0);
                double t26552 = t26550+t26551+t26548+t26549;
                double t26553 = a1f*c*c0f*t26420*t26423*(2.0/3.0);
                double t26554 = a1p*c*c0p*t26302*t26420*(2.0/3.0);
                double t26555 = ccaa1*gcaa*t26305*t26512;
                double t26556 = ccaa4*gamma_aa*t26306*t26513*t26308*t26309*4.0;
                double t26557 = ccaa2*gamma_aa*t26310*t26307*t26514*2.0;
                double t26558 = ccaa3*gcaa*t26311*t26306*t26307*t26515*3.0;
                double t26559 = t26555+t26556+t26557+t26558-ccaa1*gamma_aa*t26310*t26307*t26516-ccaa2*t26310*t26306*t26307*t26533*t26519-ccaa4*t26530*t26308*t26309*t26318*t26525-ccaa3*gamma_aa*gcaa*t26311*t26306*t26307*t26523*t26518;
                v_rho_a_gamma_aa[Q] += scale * (-(rho_a*t26511+rho_b*(t26473-t26341*t26409*(t26473-c0f*log((t26342*(1.0/2.0))/(b1f*t26459+b3f*t26460+b2f*c*t26457+b4f*t26461*t26291)+1.0)*(a1f*c*t26457+1.0)*2.0))-t26327*(t26374+t26474+t26475))*(ccab1*gcab*t26476*t26477*(4.0/3.0)-ccab2*t26440*t26441*t26482*(gcab*t26477*(8.0/3.0)+gamma_aa*t26440*t26481*(4.0/3.0)+t26440*t26437*t26477*(8.0/3.0))-ccab4*t26442*t26443*t26485*(gcab*t26477*(1.6E1/3.0)+gamma_aa*t26440*t26481*8.0+t26440*t26437*t26477*1.6E1+gamma_aa*t26441*t26442*t26481*8.0+gcab*t26440*t26441*t26477*1.6E1+t26441*t26442*t26437*t26477*(1.6E1/3.0)+gamma_aa*gcab*t26440*t26481*t26437*1.6E1)-ccab1*gamma_aa*t26440*t26481*t26478*(4.0/3.0)+ccab2*gamma_aa*t26440*t26481*t26479*(4.0/3.0)-ccab1*t26440*t26437*t26477*t26478*(4.0/3.0)+ccab2*t26440*t26437*t26477*t26479*(8.0/3.0)-ccab2*t26305*t26440*t26437*t26482*t26493+ccab4*t26441*t26442*t26437*t26484*t26477*(1.6E1/3.0)+ccab4*t26501*t26442*t26443*t26490*1.0/(t26455*t26455*t26455)*2.0+ccab2*t26440*t26441*1.0/(t26446*t26446*t26446)*t26493*t26496*2.0+ccab4*gamma_aa*t26441*t26442*t26481*t26484*8.0+ccab3*gcab*t26440*t26441*t26483*t26477*4.0+ccab3*gamma_aa*gcab*t26440*t26481*t26437*t26483*4.0-ccab2*gamma_aa*t26440*t26437*t26482*t26477*t26496*(8.0/3.0)-ccab3*gcab*t26305*t26440*t26441*t26480*t26509*(3.0/2.0)-ccab4*t26501*t26305*t26441*t26442*t26437*t26485*2.0-ccab3*gcab*t26440*t26441*t26480*t26437*(gcab*t26477*4.0+gamma_aa*t26440*t26481*4.0+t26440*t26437*t26477*8.0+gcab*t26440*t26441*t26477*4.0+gamma_aa*gcab*t26440*t26481*t26437*4.0)+ccab1*gamma_aa*gcab*t26440*t26481*t26437*1.0/(t26439*t26439*t26439)*(4.0/3.0)+ccab3*gcab*t26440*t26441*1.0/(t26450*t26450*t26450)*t26505*t26437*t26509*2.0-ccab3*gamma_aa*gcab*t26440*t26441*t26505*t26480*t26477*4.0-ccab4*gamma_aa*t26441*t26442*t26490*t26437*t26485*t26477*(1.6E1/3.0))-t26559*(t26433+t26341*t26409*(t26432-c0p*t26302*t26304*2.0))-(-t26433+t26374+t26474+t26475+t26327*(t26385-t26341*t26372*t26375*t26369*(t26385-(t26362*1.0/(t26356*t26356)*(b2f*c*t26338*(1.0/3.0)+b4f*t26291*t26376*(2.0/3.0)+b1f*c*t26338*t26377*(1.0/6.0)+b3f*c*t26330*t26338*(1.0/2.0)))/t26359+a1f*c*c0f*t26360*t26338*(2.0/3.0)-a1p*c*c0p*t26363*t26338*(2.0/3.0))-a1p*c*c0p*t26363*t26338*(2.0/3.0)+t26341*t26404*t26372*t26364*t26375-t26341*t26364*t26375*t26386*t26369*4.0+t26341*t26372*t26364*t26348*t26349*t26369*4.0-Aa*t26341*t26369*t26387*t26397*t26399*(t26375*t26386*4.0-t26372*t26348*t26349*4.0)*2.0+Aa*t26341*t26404*t26406*t26387*t26397*t26399*2.0+(t26341*t26406*1.0/(t26393*t26393)*t26369*t26387*t26399*(b2a*c*t26338*(1.0/3.0)+b4a*t26291*t26376*(2.0/3.0)+b1a*c*t26338*t26377*(1.0/6.0)+b3a*c*t26330*t26338*(1.0/2.0)))/t26396-Aa*a1a*c*t26341*t26406*t26338*t26369*t26387*t26397*(2.0/3.0))+rho_a*(-t26431+t26554+t26341*t26409*(t26431+t26553-t26411*t26552*t26546*t26547-a1p*c*c0p*t26302*t26420*(2.0/3.0)))-t26341*t26409*t26456)*(ccab1*gcab*t26305*t26476*(1.0/2.0)-ccab1*t26305*t26440*t26437*t26478*(1.0/2.0)+ccab2*t26305*t26440*t26437*t26479-ccab2*t26440*t26441*t26482*t26496-ccab4*t26442*t26443*t26490*t26485+ccab4*t26305*t26441*t26442*t26437*t26484*2.0+ccab3*gcab*t26305*t26440*t26441*t26483*(3.0/2.0)-ccab3*gcab*t26440*t26441*t26505*t26480*t26437)-rho_a*t26511*(ccaa1*gcaa*t26512*t26477*(-8.0/3.0)-ccaa2*gamma_aa*t26307*t26514*t26481*(3.2E1/3.0)+ccaa1*gamma_aa*t26307*t26516*t26481*8.0+ccaa4*t26530*t26308*t26524*t26318*t26525*(3.2E1/3.0)+ccaa2*t26306*t26307*t26533*t26481*t26519*(1.6E1/3.0)+ccaa4*t26308*t26309*t26318*t26525*(gcaa*t26477*(3.2E1/3.0)+gamma_aa*t26307*t26481*6.4E1+gamma_aa*t26306*t26308*t26524*(1.28E2/3.0)+gcaa*t26306*t26307*t26517*9.6E1)-ccaa1*gcaa*1.0/(t26313*t26313*t26313)*t26306*t26307*t26517*(1.6E1/3.0)+ccaa2*t26310*t26306*t26307*t26519*(gcaa*t26477*(1.6E1/3.0)+gamma_aa*t26307*t26481*(3.2E1/3.0))-ccaa4*gamma_aa*t26306*t26513*t26308*t26524*(1.28E2/3.0)+ccaa2*gamma_aa*t26310*t26307*t26536*t26519*2.0-ccaa3*gcaa*t26306*t26307*t26515*t26517*2.4E1+ccaa4*gamma_aa*t26306*t26308*t26309*t26525*t26545*4.0+ccaa3*gcaa*t26311*t26306*t26540*t26307*t26518*3.0-ccaa2*t26310*t26306*t26307*1.0/(t26326*t26326*t26326)*t26533*t26536*2.0-ccaa4*1.0/(t26323*t26323*t26323)*t26530*t26308*t26309*t26318*t26545*2.0+ccaa3*gamma_aa*gcaa*t26311*t26306*t26307*t26518*(gcaa*t26477*8.0+gamma_aa*t26307*t26481*3.2E1+gcaa*t26306*t26307*t26517*2.4E1)+ccaa3*gamma_aa*gcaa*t26306*t26307*t26523*t26517*t26518*8.0-ccaa3*gamma_aa*gcaa*t26311*t26306*t26540*t26307*t26523*1.0/(t26317*t26317*t26317)*2.0)+rho_a*t26559*(-t26431+t26554+t26341*t26409*(t26431+t26553-t26554-t26411*t26552*t26546*t26547)));
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t26562 = rho_a+rho_b;
                double t26563 = 1.0/pow(t26562,1.0/3.0);
                double t26564 = c*t26563;
                double t26565 = sqrt(t26564);
                double t26566 = b1p*t26565;
                double t26567 = pow(t26564,3.0/2.0);
                double t26568 = b3p*t26567;
                double t26569 = c*c;
                double t26570 = 1.0/pow(t26562,2.0/3.0);
                double t26571 = b4p*t26570*t26569;
                double t26572 = b2p*c*t26563;
                double t26573 = t26571+t26572+t26566+t26568;
                double t26574 = 1.0/pow(t26562,4.0/3.0);
                double t26575 = 1.0/c0p;
                double t26576 = 1.0/t26573;
                double t26577 = t26575*t26576*(1.0/2.0);
                double t26578 = t26577+1.0;
                double t26579 = a1p*c*t26563;
                double t26580 = t26579+1.0;
                double t26581 = rho_a-rho_b;
                double t26582 = t26581*t26581;
                double t26583 = 1.0/t26562;
                double t26584 = t26581*t26583;
                double t26585 = two_13*2.0;
                double t26586 = t26585-2.0;
                double t26587 = 1.0/t26586;
                double t26588 = 1.0/c0f;
                double t26589 = b1f*t26565;
                double t26590 = b3f*t26567;
                double t26591 = b4f*t26570*t26569;
                double t26592 = b2f*c*t26563;
                double t26593 = t26590+t26591+t26592+t26589;
                double t26594 = 1.0/t26593;
                double t26595 = t26594*t26588*(1.0/2.0);
                double t26596 = t26595+1.0;
                double t26597 = log(t26596);
                double t26598 = a1f*c*t26563;
                double t26599 = t26598+1.0;
                double t26600 = log(t26578);
                double t26610 = c0f*t26597*t26599*2.0;
                double t26611 = c0p*t26600*t26580*2.0;
                double t26601 = t26610-t26611;
                double t26602 = t26584+1.0;
                double t26603 = pow(t26602,4.0/3.0);
                double t26604 = -t26584+1.0;
                double t26605 = pow(t26604,4.0/3.0);
                double t26606 = t26603+t26605-2.0;
                double t26607 = 1.0/(t26562*t26562);
                double t26638 = t26607*t26581;
                double t26608 = t26583-t26638;
                double t26609 = 1.0/(t26562*t26562*t26562*t26562);
                double t26612 = t26582*t26582;
                double t26613 = 1.0/pow(t26562,5.0/3.0);
                double t26614 = 1.0/sqrt(t26564);
                double t26615 = 1.0/t26578;
                double t26616 = 1.0/(t26573*t26573);
                double t26617 = b4p*t26613*t26569*(2.0/3.0);
                double t26618 = b2p*c*t26574*(1.0/3.0);
                double t26619 = b1p*c*t26614*t26574*(1.0/6.0);
                double t26620 = b3p*c*t26565*t26574*(1.0/2.0);
                double t26621 = t26620+t26617+t26618+t26619;
                double t26622 = t26621*t26615*t26580*t26616;
                double t26623 = 1.0/(t26562*t26562*t26562*t26562*t26562);
                double t26624 = 1.0/d2fz0;
                double t26625 = 1.0/Aa;
                double t26626 = b1a*t26565;
                double t26627 = b3a*t26567;
                double t26628 = b4a*t26570*t26569;
                double t26629 = b2a*c*t26563;
                double t26630 = t26626+t26627+t26628+t26629;
                double t26631 = 1.0/t26630;
                double t26632 = t26631*t26625*(1.0/2.0);
                double t26633 = t26632+1.0;
                double t26634 = log(t26633);
                double t26635 = a1a*c*t26563;
                double t26636 = t26635+1.0;
                double t26637 = pow(t26602,1.0/3.0);
                double t26639 = t26608*t26637*(4.0/3.0);
                double t26640 = pow(t26604,1.0/3.0);
                double t26641 = t26639-t26640*t26608*(4.0/3.0);
                double t26642 = t26612*t26609;
                double t26643 = t26642-1.0;
                double t26644 = 1.0/pow(rho_a,1.0/3.0);
                double t26645 = c*t26644;
                double t26646 = sqrt(t26645);
                double t26647 = b1f*t26646;
                double t26648 = pow(t26645,3.0/2.0);
                double t26649 = b3f*t26648;
                double t26650 = 1.0/pow(rho_a,2.0/3.0);
                double t26651 = b4f*t26650*t26569;
                double t26652 = b2f*c*t26644;
                double t26653 = t26651+t26652+t26647+t26649;
                double t26654 = 1.0/pow(rho_a,4.0/3.0);
                double t26655 = b1p*t26646;
                double t26656 = b3p*t26648;
                double t26657 = b4p*t26650*t26569;
                double t26658 = b2p*c*t26644;
                double t26659 = t26655+t26656+t26657+t26658;
                double t26660 = 1.0/pow(rho_a,5.0/3.0);
                double t26661 = 1.0/sqrt(t26645);
                double t26662 = 1.0/t26653;
                double t26663 = t26662*t26588*(1.0/2.0);
                double t26664 = t26663+1.0;
                double t26665 = 1.0/t26659;
                double t26666 = t26575*t26665*(1.0/2.0);
                double t26667 = t26666+1.0;
                double t26668 = a1p*c*t26644;
                double t26669 = t26668+1.0;
                double t26670 = 1.0/t26667;
                double t26671 = 1.0/(t26659*t26659);
                double t26672 = b4p*t26660*t26569*(2.0/3.0);
                double t26673 = b2p*c*t26654*(1.0/3.0);
                double t26674 = b1p*c*t26661*t26654*(1.0/6.0);
                double t26675 = b3p*c*t26654*t26646*(1.0/2.0);
                double t26676 = t26672+t26673+t26674+t26675;
                double t26677 = t26670*t26671*t26676*t26669;
                double t26678 = log(t26667);
                double t26679 = pow(2.0,1.0/3.0);
                double t26680 = t26679*2.0;
                double t26681 = t26680-2.0;
                double t26682 = log(t26664);
                double t26683 = a1f*c*t26644;
                double t26684 = t26683+1.0;
                double t26685 = 1.0/pow(rho_b,8.0/3.0);
                double t26686 = 1.0/pow(rho_a,8.0/3.0);
                double t26687 = gamma_aa*t26686*(1.0/2.0);
                double t26688 = gamma_bb*t26685*(1.0/2.0);
                double t26689 = t26687+t26688;
                double t26690 = gcab*t26689;
                double t26691 = t26690+1.0;
                double t26692 = gcab*gcab;
                double t26693 = t26689*t26689;
                double t26694 = t26692*t26692;
                double t26695 = t26693*t26693;
                double t26696 = t26692*t26693;
                double t26697 = gcab*t26689*2.0;
                double t26698 = t26696+t26697+1.0;
                double t26699 = t26692*t26693*3.0;
                double t26700 = gcab*t26692*t26693*t26689;
                double t26701 = gcab*t26689*3.0;
                double t26702 = t26700+t26701+t26699+1.0;
                double t26703 = t26692*t26693*6.0;
                double t26704 = gcab*t26692*t26693*t26689*4.0;
                double t26705 = t26694*t26695;
                double t26706 = gcab*t26689*4.0;
                double t26707 = t26703+t26704+t26705+t26706+1.0;
                double t26708 = c0f*t26682*t26684*2.0;
                double t26710 = c0p*t26669*t26678*2.0;
                double t26709 = -t26710+t26708;
                double t26711 = 1.0/pow(rho_b,1.0/3.0);
                double t26712 = c*t26711;
                double t26713 = sqrt(t26712);
                double t26714 = pow(t26712,3.0/2.0);
                double t26715 = 1.0/pow(rho_b,2.0/3.0);
                double t26716 = b1p*t26713;
                double t26717 = b3p*t26714;
                double t26718 = b4p*t26715*t26569;
                double t26719 = b2p*c*t26711;
                double t26720 = t26716+t26717+t26718+t26719;
                double t26721 = 1.0/t26720;
                double t26722 = t26721*t26575*(1.0/2.0);
                double t26723 = t26722+1.0;
                double t26724 = log(t26723);
                double t26725 = a1p*c*t26711;
                double t26726 = t26725+1.0;
                double t26727 = c0p*t26724*t26726*2.0;
                double t26728 = t26601*t26612*t26606*t26609*t26587;
                double t26729 = Aa*t26606*t26624*t26634*t26643*t26636*t26587*2.0;
                double t26730 = 1.0/pow(rho_a,1.1E1/3.0);
                double t26731 = 1.0/(t26702*t26702);
                double t26732 = 1.0/(t26707*t26707);
                double t26733 = gcab*t26685*2.0;
                double t26734 = t26692*t26685*t26689*6.0;
                double t26735 = gcab*t26692*t26693*t26685*6.0;
                double t26736 = t26693*t26685*t26694*t26689*2.0;
                double t26737 = t26733+t26734+t26735+t26736;
                double t26738 = 1.0/(t26698*t26698);
                double t26739 = gamma_aa*gcab*t26730*(8.0/3.0);
                double t26740 = gamma_aa*t26730*t26692*t26689*(8.0/3.0);
                double t26741 = t26740+t26739;
                double t26742 = gcab*t26685;
                double t26743 = t26692*t26685*t26689;
                double t26744 = t26742+t26743;
                double t26745 = gamma_aa*gcab*t26730*(1.6E1/3.0);
                double t26746 = gamma_aa*gcab*t26730*t26692*t26693*1.6E1;
                double t26747 = gamma_aa*t26730*t26693*t26694*t26689*(1.6E1/3.0);
                double t26748 = gamma_aa*t26730*t26692*t26689*1.6E1;
                double t26749 = t26745+t26746+t26747+t26748;
                double t26750 = 1.0/(t26691*t26691);
                double t26751 = 1.0/t26698;
                double t26752 = gcab*t26685*(3.0/2.0);
                double t26753 = t26692*t26685*t26689*3.0;
                double t26754 = gcab*t26692*t26693*t26685*(3.0/2.0);
                double t26755 = t26752+t26753+t26754;
                double t26756 = gamma_aa*gcab*t26730*4.0;
                double t26757 = gamma_aa*gcab*t26730*t26692*t26693*4.0;
                double t26758 = gamma_aa*t26730*t26692*t26689*8.0;
                double t26759 = t26756+t26757+t26758;
                double t26760 = 1.0/t26702;
                double t26761 = 1.0/t26707;
                v_rho_a_gamma_bb[Q] += scale * (-(t26611+t26728+t26729+t26562*(t26622-t26612*t26606*t26609*t26587*(t26622-(1.0/(t26593*t26593)*t26599*(b2f*c*t26574*(1.0/3.0)+b4f*t26613*t26569*(2.0/3.0)+b1f*c*t26614*t26574*(1.0/6.0)+b3f*c*t26565*t26574*(1.0/2.0)))/t26596+a1f*c*c0f*t26574*t26597*(2.0/3.0)-a1p*c*c0p*t26600*t26574*(2.0/3.0))-a1p*c*c0p*t26600*t26574*(2.0/3.0)-t26601*t26612*t26623*t26606*t26587*4.0+t26601*t26612*t26641*t26609*t26587+t26601*t26606*t26581*t26582*t26609*t26587*4.0-Aa*t26606*t26624*t26634*t26636*t26587*(t26612*t26623*4.0-t26581*t26582*t26609*4.0)*2.0+Aa*t26641*t26624*t26634*t26643*t26636*t26587*2.0+(1.0/(t26630*t26630)*t26606*t26624*t26643*t26636*t26587*(b2a*c*t26574*(1.0/3.0)+b4a*t26613*t26569*(2.0/3.0)+b1a*c*t26614*t26574*(1.0/6.0)+b3a*c*t26565*t26574*(1.0/2.0)))/t26633-Aa*a1a*c*t26606*t26624*t26634*t26643*t26574*t26587*(2.0/3.0))+rho_a*(-t26677+t26681*t26587*(t26677-(1.0/(t26653*t26653)*t26684*(b2f*c*t26654*(1.0/3.0)+b4f*t26660*t26569*(2.0/3.0)+b1f*c*t26661*t26654*(1.0/6.0)+b3f*c*t26654*t26646*(1.0/2.0)))/t26664+a1f*c*c0f*t26654*t26682*(2.0/3.0)-a1p*c*c0p*t26654*t26678*(2.0/3.0))+a1p*c*c0p*t26654*t26678*(2.0/3.0))-c0p*t26669*t26678*2.0-t26681*t26709*t26587)*((ccab1*gcab*t26685*(1.0/2.0))/t26691-ccab2*t26744*t26692*t26693*t26738-ccab1*t26750*t26692*t26685*t26689*(1.0/2.0)-ccab4*t26732*t26737*t26694*t26695+ccab2*t26751*t26692*t26685*t26689+ccab4*t26761*t26693*t26685*t26694*t26689*2.0+ccab3*gcab*t26760*t26692*t26693*t26685*(3.0/2.0)-ccab3*gcab*t26731*t26692*t26755*t26693*t26689)+(rho_a*(t26710+t26681*t26709*t26587)+rho_b*(t26727-t26681*t26587*(t26727-c0f*log((t26588*(1.0/2.0))/(b1f*t26713+b3f*t26714+b2f*c*t26711+b4f*t26715*t26569)+1.0)*(a1f*c*t26711+1.0)*2.0))-t26562*(t26611+t26728+t26729))*(ccab4*t26732*t26694*t26695*(gamma_aa*t26730*t26692*t26685*8.0+gamma_aa*t26730*t26693*t26685*t26694*8.0+gamma_aa*gcab*t26730*t26692*t26685*t26689*1.6E1)+ccab2*t26741*t26692*t26738*t26685*t26689-ccab2*t26741*t26744*t26692*t26693*1.0/(t26698*t26698*t26698)*2.0-ccab4*1.0/(t26707*t26707*t26707)*t26737*t26694*t26695*t26749*2.0+ccab1*gamma_aa*t26730*t26750*t26692*t26685*(4.0/3.0)-ccab2*gamma_aa*t26730*t26751*t26692*t26685*(4.0/3.0)-ccab4*gamma_aa*t26730*t26761*t26693*t26685*t26694*8.0+ccab2*gamma_aa*t26730*t26744*t26692*t26738*t26689*(8.0/3.0)+ccab2*gamma_aa*t26730*t26693*t26738*t26685*t26694*(4.0/3.0)+ccab3*gcab*t26731*t26692*t26693*t26685*t26759*(3.0/2.0)+ccab4*t26732*t26693*t26685*t26694*t26749*t26689*2.0+ccab3*gcab*t26731*t26692*t26693*t26689*(gamma_aa*t26730*t26692*t26685*4.0+gamma_aa*gcab*t26730*t26692*t26685*t26689*4.0)-ccab1*gamma_aa*gcab*t26730*1.0/(t26691*t26691*t26691)*t26692*t26685*t26689*(4.0/3.0)-ccab3*gcab*1.0/(t26702*t26702*t26702)*t26692*t26755*t26693*t26759*t26689*2.0+ccab3*gamma_aa*gcab*t26730*t26731*t26692*t26755*t26693*4.0-ccab3*gamma_aa*gcab*t26730*t26760*t26692*t26685*t26689*4.0+ccab4*gamma_aa*t26730*t26732*t26737*t26693*t26694*t26689*(1.6E1/3.0)));
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t26763 = rho_a+rho_b;
                double t26764 = 1.0/pow(t26763,1.0/3.0);
                double t26765 = c*t26764;
                double t26766 = sqrt(t26765);
                double t26767 = b1p*t26766;
                double t26768 = pow(t26765,3.0/2.0);
                double t26769 = b3p*t26768;
                double t26770 = c*c;
                double t26771 = 1.0/pow(t26763,2.0/3.0);
                double t26772 = b4p*t26770*t26771;
                double t26773 = b2p*c*t26764;
                double t26774 = t26772+t26773+t26767+t26769;
                double t26775 = 1.0/pow(t26763,4.0/3.0);
                double t26776 = 1.0/c0p;
                double t26777 = 1.0/t26774;
                double t26778 = t26776*t26777*(1.0/2.0);
                double t26779 = t26778+1.0;
                double t26780 = a1p*c*t26764;
                double t26781 = t26780+1.0;
                double t26782 = rho_a-rho_b;
                double t26783 = t26782*t26782;
                double t26784 = 1.0/t26763;
                double t26785 = t26782*t26784;
                double t26786 = two_13*2.0;
                double t26787 = t26786-2.0;
                double t26788 = 1.0/t26787;
                double t26789 = 1.0/c0f;
                double t26790 = b1f*t26766;
                double t26791 = b3f*t26768;
                double t26792 = b4f*t26770*t26771;
                double t26793 = b2f*c*t26764;
                double t26794 = t26790+t26791+t26792+t26793;
                double t26795 = 1.0/t26794;
                double t26796 = t26795*t26789*(1.0/2.0);
                double t26797 = t26796+1.0;
                double t26798 = log(t26797);
                double t26799 = a1f*c*t26764;
                double t26800 = t26799+1.0;
                double t26801 = log(t26779);
                double t26812 = c0f*t26800*t26798*2.0;
                double t26813 = c0p*t26801*t26781*2.0;
                double t26802 = t26812-t26813;
                double t26803 = t26785+1.0;
                double t26804 = pow(t26803,4.0/3.0);
                double t26805 = -t26785+1.0;
                double t26806 = pow(t26805,4.0/3.0);
                double t26807 = t26804+t26806-2.0;
                double t26808 = 1.0/(t26763*t26763);
                double t26809 = t26808*t26782;
                double t26810 = t26809+t26784;
                double t26811 = 1.0/(t26763*t26763*t26763*t26763);
                double t26814 = t26783*t26783;
                double t26815 = 1.0/pow(t26763,5.0/3.0);
                double t26816 = 1.0/sqrt(t26765);
                double t26817 = 1.0/t26779;
                double t26818 = 1.0/(t26774*t26774);
                double t26819 = b4p*t26770*t26815*(2.0/3.0);
                double t26820 = b2p*c*t26775*(1.0/3.0);
                double t26821 = b1p*c*t26816*t26775*(1.0/6.0);
                double t26822 = b3p*c*t26766*t26775*(1.0/2.0);
                double t26823 = t26820+t26821+t26822+t26819;
                double t26824 = 1.0/(t26763*t26763*t26763*t26763*t26763);
                double t26825 = 1.0/d2fz0;
                double t26826 = 1.0/Aa;
                double t26827 = b1a*t26766;
                double t26828 = b3a*t26768;
                double t26829 = b4a*t26770*t26771;
                double t26830 = b2a*c*t26764;
                double t26831 = t26830+t26827+t26828+t26829;
                double t26832 = 1.0/t26831;
                double t26833 = t26832*t26826*(1.0/2.0);
                double t26834 = t26833+1.0;
                double t26835 = log(t26834);
                double t26836 = a1a*c*t26764;
                double t26837 = t26836+1.0;
                double t26838 = pow(t26803,1.0/3.0);
                double t26839 = t26810*t26838*(4.0/3.0);
                double t26840 = pow(t26805,1.0/3.0);
                double t26841 = t26839-t26810*t26840*(4.0/3.0);
                double t26842 = t26811*t26814;
                double t26843 = t26842-1.0;
                double t26844 = 1.0/pow(rho_b,1.0/3.0);
                double t26845 = c*t26844;
                double t26846 = sqrt(t26845);
                double t26847 = b1f*t26846;
                double t26848 = pow(t26845,3.0/2.0);
                double t26849 = b3f*t26848;
                double t26850 = 1.0/pow(rho_b,2.0/3.0);
                double t26851 = b4f*t26850*t26770;
                double t26852 = b2f*c*t26844;
                double t26853 = t26851+t26852+t26847+t26849;
                double t26854 = 1.0/pow(rho_b,4.0/3.0);
                double t26855 = b1p*t26846;
                double t26856 = b3p*t26848;
                double t26857 = b4p*t26850*t26770;
                double t26858 = b2p*c*t26844;
                double t26859 = t26855+t26856+t26857+t26858;
                double t26860 = 1.0/pow(rho_b,5.0/3.0);
                double t26861 = 1.0/sqrt(t26845);
                double t26862 = 1.0/t26853;
                double t26863 = t26862*t26789*(1.0/2.0);
                double t26864 = t26863+1.0;
                double t26865 = 1.0/t26859;
                double t26866 = t26865*t26776*(1.0/2.0);
                double t26867 = t26866+1.0;
                double t26868 = a1p*c*t26844;
                double t26869 = t26868+1.0;
                double t26870 = 1.0/t26867;
                double t26871 = 1.0/(t26859*t26859);
                double t26872 = b4p*t26770*t26860*(2.0/3.0);
                double t26873 = b2p*c*t26854*(1.0/3.0);
                double t26874 = b1p*c*t26861*t26854*(1.0/6.0);
                double t26875 = b3p*c*t26854*t26846*(1.0/2.0);
                double t26876 = t26872+t26873+t26874+t26875;
                double t26877 = t26870*t26871*t26876*t26869;
                double t26878 = log(t26867);
                double t26879 = pow(2.0,1.0/3.0);
                double t26880 = t26879*2.0;
                double t26881 = t26880-2.0;
                double t26882 = log(t26864);
                double t26883 = a1f*c*t26844;
                double t26884 = t26883+1.0;
                double t26885 = 1.0/pow(rho_a,8.0/3.0);
                double t26886 = gamma_aa*t26885*(1.0/2.0);
                double t26887 = 1.0/pow(rho_b,8.0/3.0);
                double t26888 = gamma_bb*t26887*(1.0/2.0);
                double t26889 = t26886+t26888;
                double t26890 = gcab*t26889;
                double t26891 = t26890+1.0;
                double t26892 = gcab*gcab;
                double t26893 = t26889*t26889;
                double t26894 = t26892*t26892;
                double t26895 = t26893*t26893;
                double t26896 = t26892*t26893;
                double t26897 = gcab*t26889*2.0;
                double t26898 = t26896+t26897+1.0;
                double t26899 = t26892*t26893*3.0;
                double t26900 = gcab*t26892*t26893*t26889;
                double t26901 = gcab*t26889*3.0;
                double t26902 = t26900+t26901+t26899+1.0;
                double t26903 = t26892*t26893*6.0;
                double t26904 = gcab*t26892*t26893*t26889*4.0;
                double t26905 = t26894*t26895;
                double t26906 = gcab*t26889*4.0;
                double t26907 = t26903+t26904+t26905+t26906+1.0;
                double t26908 = a1p*c*c0p*t26801*t26775*(2.0/3.0);
                double t26909 = 1.0/pow(rho_a,1.0/3.0);
                double t26910 = c*t26909;
                double t26911 = sqrt(t26910);
                double t26912 = pow(t26910,3.0/2.0);
                double t26913 = 1.0/pow(rho_a,2.0/3.0);
                double t26914 = b1p*t26911;
                double t26915 = b3p*t26912;
                double t26916 = b4p*t26913*t26770;
                double t26917 = b2p*c*t26909;
                double t26918 = t26914+t26915+t26916+t26917;
                double t26919 = 1.0/t26918;
                double t26920 = t26919*t26776*(1.0/2.0);
                double t26921 = t26920+1.0;
                double t26922 = log(t26921);
                double t26923 = a1p*c*t26909;
                double t26924 = t26923+1.0;
                double t26925 = c0p*t26922*t26924*2.0;
                double t26926 = c0f*t26882*t26884*2.0;
                double t26928 = c0p*t26869*t26878*2.0;
                double t26927 = t26926-t26928;
                double t26929 = t26802*t26811*t26814*t26807*t26788;
                double t26930 = Aa*t26807*t26825*t26843*t26835*t26837*t26788*2.0;
                double t26931 = 1.0/pow(rho_b,1.1E1/3.0);
                double t26932 = 1.0/(t26902*t26902);
                double t26933 = 1.0/(t26907*t26907);
                double t26934 = gcab*t26885*2.0;
                double t26935 = t26892*t26885*t26889*6.0;
                double t26936 = gcab*t26892*t26893*t26885*6.0;
                double t26937 = t26893*t26885*t26894*t26889*2.0;
                double t26938 = t26934+t26935+t26936+t26937;
                double t26939 = 1.0/(t26898*t26898);
                double t26940 = gamma_bb*gcab*t26931*(8.0/3.0);
                double t26941 = gamma_bb*t26931*t26892*t26889*(8.0/3.0);
                double t26942 = t26940+t26941;
                double t26943 = gcab*t26885;
                double t26944 = t26892*t26885*t26889;
                double t26945 = t26943+t26944;
                double t26946 = gamma_bb*gcab*t26931*(1.6E1/3.0);
                double t26947 = gamma_bb*gcab*t26931*t26892*t26893*1.6E1;
                double t26948 = gamma_bb*t26931*t26893*t26894*t26889*(1.6E1/3.0);
                double t26949 = gamma_bb*t26931*t26892*t26889*1.6E1;
                double t26950 = t26946+t26947+t26948+t26949;
                double t26951 = 1.0/(t26891*t26891);
                double t26952 = 1.0/t26898;
                double t26953 = gcab*t26885*(3.0/2.0);
                double t26954 = t26892*t26885*t26889*3.0;
                double t26955 = gcab*t26892*t26893*t26885*(3.0/2.0);
                double t26956 = t26953+t26954+t26955;
                double t26957 = gamma_bb*gcab*t26931*4.0;
                double t26958 = gamma_bb*gcab*t26931*t26892*t26893*4.0;
                double t26959 = gamma_bb*t26931*t26892*t26889*8.0;
                double t26960 = t26957+t26958+t26959;
                double t26961 = 1.0/t26902;
                double t26962 = 1.0/t26907;
                v_rho_b_gamma_aa[Q] += scale * ((rho_b*(t26928+t26881*t26927*t26788)+rho_a*(t26925-t26881*t26788*(t26925-c0f*log((t26789*(1.0/2.0))/(b1f*t26911+b3f*t26912+b2f*c*t26909+b4f*t26913*t26770)+1.0)*(a1f*c*t26909+1.0)*2.0))-t26763*(t26813+t26930+t26929))*(ccab4*t26933*t26894*t26895*(gamma_bb*t26931*t26892*t26885*8.0+gamma_bb*t26931*t26893*t26885*t26894*8.0+gamma_bb*gcab*t26931*t26892*t26885*t26889*1.6E1)+ccab2*t26942*t26892*t26885*t26939*t26889-ccab4*t26950*1.0/(t26907*t26907*t26907)*t26938*t26894*t26895*2.0-ccab2*t26942*t26945*t26892*t26893*1.0/(t26898*t26898*t26898)*2.0+ccab1*gamma_bb*t26931*t26951*t26892*t26885*(4.0/3.0)-ccab2*gamma_bb*t26931*t26952*t26892*t26885*(4.0/3.0)-ccab4*gamma_bb*t26931*t26962*t26893*t26885*t26894*8.0+ccab2*gamma_bb*t26931*t26945*t26892*t26939*t26889*(8.0/3.0)+ccab2*gamma_bb*t26931*t26893*t26885*t26894*t26939*(4.0/3.0)+ccab3*gcab*t26932*t26960*t26892*t26893*t26885*(3.0/2.0)+ccab4*t26950*t26933*t26893*t26885*t26894*t26889*2.0+ccab3*gcab*t26932*t26892*t26893*t26889*(gamma_bb*t26931*t26892*t26885*4.0+gamma_bb*gcab*t26931*t26892*t26885*t26889*4.0)-ccab1*gamma_bb*gcab*t26931*1.0/(t26891*t26891*t26891)*t26892*t26885*t26889*(4.0/3.0)-ccab3*gcab*1.0/(t26902*t26902*t26902)*t26960*t26892*t26893*t26956*t26889*2.0+ccab3*gamma_bb*gcab*t26931*t26932*t26892*t26893*t26956*4.0-ccab3*gamma_bb*gcab*t26931*t26961*t26892*t26885*t26889*4.0+ccab4*gamma_bb*t26931*t26933*t26893*t26938*t26894*t26889*(1.6E1/3.0))-(t26813+t26930+t26929+rho_b*(-t26877+t26881*t26788*(t26877-(1.0/(t26853*t26853)*t26884*(b2f*c*t26854*(1.0/3.0)+b4f*t26770*t26860*(2.0/3.0)+b1f*c*t26861*t26854*(1.0/6.0)+b3f*c*t26854*t26846*(1.0/2.0)))/t26864+a1f*c*c0f*t26854*t26882*(2.0/3.0)-a1p*c*c0p*t26854*t26878*(2.0/3.0))+a1p*c*c0p*t26854*t26878*(2.0/3.0))-t26763*(t26908-t26823*t26781*t26817*t26818+t26802*t26811*t26814*t26841*t26788+t26802*t26814*t26824*t26807*t26788*4.0-t26811*t26814*t26807*t26788*(t26908-t26823*t26781*t26817*t26818+(t26800*1.0/(t26794*t26794)*(b2f*c*t26775*(1.0/3.0)+b4f*t26770*t26815*(2.0/3.0)+b1f*c*t26816*t26775*(1.0/6.0)+b3f*c*t26766*t26775*(1.0/2.0)))/t26797-a1f*c*c0f*t26775*t26798*(2.0/3.0))+t26802*t26811*t26807*t26782*t26783*t26788*4.0+Aa*t26807*t26825*t26835*t26837*t26788*(t26814*t26824*4.0+t26811*t26782*t26783*4.0)*2.0+Aa*t26841*t26825*t26843*t26835*t26837*t26788*2.0-(1.0/(t26831*t26831)*t26807*t26825*t26843*t26837*t26788*(b2a*c*t26775*(1.0/3.0)+b4a*t26770*t26815*(2.0/3.0)+b1a*c*t26816*t26775*(1.0/6.0)+b3a*c*t26766*t26775*(1.0/2.0)))/t26834+Aa*a1a*c*t26807*t26825*t26843*t26835*t26775*t26788*(2.0/3.0))-c0p*t26869*t26878*2.0-t26881*t26927*t26788)*((ccab1*gcab*t26885*(1.0/2.0))/t26891-ccab2*t26945*t26892*t26893*t26939-ccab1*t26951*t26892*t26885*t26889*(1.0/2.0)-ccab4*t26933*t26938*t26894*t26895+ccab2*t26952*t26892*t26885*t26889+ccab4*t26962*t26893*t26885*t26894*t26889*2.0+ccab3*gcab*t26961*t26892*t26893*t26885*(3.0/2.0)-ccab3*gcab*t26932*t26892*t26893*t26956*t26889));
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t26965 = 1.0/pow(rho_b,1.0/3.0);
                double t26966 = c*t26965;
                double t26967 = sqrt(t26966);
                double t26968 = pow(t26966,3.0/2.0);
                double t26969 = c*c;
                double t26970 = 1.0/pow(rho_b,2.0/3.0);
                double t26971 = 1.0/c0p;
                double t26972 = b1p*t26967;
                double t26973 = b3p*t26968;
                double t26974 = b4p*t26970*t26969;
                double t26975 = b2p*c*t26965;
                double t26976 = t26972+t26973+t26974+t26975;
                double t26977 = 1.0/t26976;
                double t26978 = t26971*t26977*(1.0/2.0);
                double t26979 = t26978+1.0;
                double t26980 = log(t26979);
                double t26981 = a1p*c*t26965;
                double t26982 = t26981+1.0;
                double t26983 = 1.0/pow(rho_b,8.0/3.0);
                double t26984 = gamma_bb*gamma_bb;
                double t26985 = gcaa*gcaa;
                double t26986 = t26985*t26985;
                double t26987 = 1.0/pow(rho_b,3.2E1/3.0);
                double t26988 = 1.0/pow(rho_b,1.6E1/3.0);
                double t26989 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t26990 = gamma_bb*gcaa*t26983;
                double t26991 = t26990+1.0;
                double t26992 = gamma_bb*gcaa*t26983*3.0;
                double t26993 = gamma_bb*gcaa*t26984*t26985*t26989;
                double t26994 = t26984*t26985*t26988*3.0;
                double t26995 = t26992+t26993+t26994+1.0;
                double t26996 = t26984*t26984;
                double t26997 = gamma_bb*gcaa*t26983*4.0;
                double t26998 = gamma_bb*gcaa*t26984*t26985*t26989*4.0;
                double t26999 = t26984*t26985*t26988*6.0;
                double t27000 = t26986*t26987*t26996;
                double t27001 = t26997+t26998+t26999+t27000+1.0;
                double t27002 = gamma_bb*gcaa*t26983*2.0;
                double t27003 = t26984*t26985*t26988;
                double t27004 = t27002+t27003+1.0;
                double t27005 = rho_a+rho_b;
                double t27006 = 1.0/pow(t27005,1.0/3.0);
                double t27007 = c*t27006;
                double t27008 = sqrt(t27007);
                double t27009 = b1p*t27008;
                double t27010 = pow(t27007,3.0/2.0);
                double t27011 = b3p*t27010;
                double t27012 = 1.0/pow(t27005,2.0/3.0);
                double t27013 = b4p*t26969*t27012;
                double t27014 = b2p*c*t27006;
                double t27015 = t27011+t27013+t27014+t27009;
                double t27016 = 1.0/pow(t27005,4.0/3.0);
                double t27017 = two_13*2.0;
                double t27018 = t27017-2.0;
                double t27019 = 1.0/t27018;
                double t27020 = 1.0/c0f;
                double t27021 = 1.0/t27015;
                double t27022 = t26971*t27021*(1.0/2.0);
                double t27023 = t27022+1.0;
                double t27024 = a1p*c*t27006;
                double t27025 = t27024+1.0;
                double t27026 = rho_a-rho_b;
                double t27027 = t27026*t27026;
                double t27028 = 1.0/t27005;
                double t27029 = t27026*t27028;
                double t27030 = b1f*t27008;
                double t27031 = b3f*t27010;
                double t27032 = b4f*t26969*t27012;
                double t27033 = b2f*c*t27006;
                double t27034 = t27030+t27031+t27032+t27033;
                double t27035 = 1.0/t27034;
                double t27036 = t27020*t27035*(1.0/2.0);
                double t27037 = t27036+1.0;
                double t27038 = log(t27037);
                double t27039 = a1f*c*t27006;
                double t27040 = t27039+1.0;
                double t27041 = log(t27023);
                double t27052 = c0f*t27040*t27038*2.0;
                double t27053 = c0p*t27041*t27025*2.0;
                double t27042 = t27052-t27053;
                double t27043 = t27029+1.0;
                double t27044 = pow(t27043,4.0/3.0);
                double t27045 = -t27029+1.0;
                double t27046 = pow(t27045,4.0/3.0);
                double t27047 = t27044+t27046-2.0;
                double t27048 = 1.0/(t27005*t27005);
                double t27049 = t27026*t27048;
                double t27050 = t27028+t27049;
                double t27051 = 1.0/(t27005*t27005*t27005*t27005);
                double t27054 = t27027*t27027;
                double t27055 = 1.0/pow(t27005,5.0/3.0);
                double t27056 = 1.0/sqrt(t27007);
                double t27057 = 1.0/t27023;
                double t27058 = 1.0/(t27015*t27015);
                double t27059 = b4p*t26969*t27055*(2.0/3.0);
                double t27060 = b2p*c*t27016*(1.0/3.0);
                double t27061 = b1p*c*t27016*t27056*(1.0/6.0);
                double t27062 = b3p*c*t27016*t27008*(1.0/2.0);
                double t27063 = t27060+t27061+t27062+t27059;
                double t27064 = 1.0/(t27005*t27005*t27005*t27005*t27005);
                double t27065 = 1.0/d2fz0;
                double t27066 = 1.0/Aa;
                double t27067 = b1a*t27008;
                double t27068 = b3a*t27010;
                double t27069 = b4a*t26969*t27012;
                double t27070 = b2a*c*t27006;
                double t27071 = t27070+t27067+t27068+t27069;
                double t27072 = 1.0/t27071;
                double t27073 = t27072*t27066*(1.0/2.0);
                double t27074 = t27073+1.0;
                double t27075 = log(t27074);
                double t27076 = a1a*c*t27006;
                double t27077 = t27076+1.0;
                double t27078 = pow(t27043,1.0/3.0);
                double t27079 = t27050*t27078*(4.0/3.0);
                double t27080 = pow(t27045,1.0/3.0);
                double t27081 = t27079-t27050*t27080*(4.0/3.0);
                double t27082 = t27051*t27054;
                double t27083 = t27082-1.0;
                double t27084 = pow(2.0,1.0/3.0);
                double t27085 = t27084*2.0;
                double t27086 = t27085-2.0;
                double t27087 = a1f*c*t26965;
                double t27088 = t27087+1.0;
                double t27089 = b1f*t26967;
                double t27090 = b3f*t26968;
                double t27091 = b4f*t26970*t26969;
                double t27092 = b2f*c*t26965;
                double t27093 = t27090+t27091+t27092+t27089;
                double t27094 = 1.0/t27093;
                double t27095 = t27020*t27094*(1.0/2.0);
                double t27096 = t27095+1.0;
                double t27097 = 1.0/pow(rho_b,4.0/3.0);
                double t27098 = 1.0/pow(rho_b,5.0/3.0);
                double t27099 = 1.0/sqrt(t26966);
                double t27100 = log(t27096);
                double t27101 = 1.0/t26979;
                double t27102 = 1.0/(t26976*t26976);
                double t27103 = b4p*t26969*t27098*(2.0/3.0);
                double t27104 = b2p*c*t27097*(1.0/3.0);
                double t27105 = b1p*c*t27097*t27099*(1.0/6.0);
                double t27106 = b3p*c*t26967*t27097*(1.0/2.0);
                double t27107 = t27103+t27104+t27105+t27106;
                double t27108 = t26982*t27101*t27102*t27107;
                double t27109 = c0f*t27100*t27088*2.0;
                double t27110 = c0p*t26980*t26982*2.0;
                double t27111 = 1.0/pow(rho_a,8.0/3.0);
                double t27112 = gamma_aa*t27111*(1.0/2.0);
                double t27113 = gamma_bb*t26983*(1.0/2.0);
                double t27114 = t27112+t27113;
                double t27115 = gcab*t27114;
                double t27116 = t27115+1.0;
                double t27117 = gcab*gcab;
                double t27118 = t27114*t27114;
                double t27119 = t27117*t27117;
                double t27120 = t27118*t27118;
                double t27121 = t27117*t27118;
                double t27122 = gcab*t27114*2.0;
                double t27123 = t27121+t27122+1.0;
                double t27124 = t27117*t27118*3.0;
                double t27125 = gcab*t27114*t27117*t27118;
                double t27126 = gcab*t27114*3.0;
                double t27127 = t27124+t27125+t27126+1.0;
                double t27128 = t27117*t27118*6.0;
                double t27129 = gcab*t27114*t27117*t27118*4.0;
                double t27130 = t27120*t27119;
                double t27131 = gcab*t27114*4.0;
                double t27132 = t27130+t27131+t27128+t27129+1.0;
                double t27133 = a1p*c*c0p*t27041*t27016*(2.0/3.0);
                double t27134 = 1.0/pow(rho_a,1.0/3.0);
                double t27135 = c*t27134;
                double t27136 = sqrt(t27135);
                double t27137 = pow(t27135,3.0/2.0);
                double t27138 = 1.0/pow(rho_a,2.0/3.0);
                double t27139 = b1p*t27136;
                double t27140 = b3p*t27137;
                double t27141 = b4p*t26969*t27138;
                double t27142 = b2p*c*t27134;
                double t27143 = t27140+t27141+t27142+t27139;
                double t27144 = 1.0/t27143;
                double t27145 = t26971*t27144*(1.0/2.0);
                double t27146 = t27145+1.0;
                double t27147 = log(t27146);
                double t27148 = a1p*c*t27134;
                double t27149 = t27148+1.0;
                double t27150 = c0p*t27147*t27149*2.0;
                double t27151 = t27110-t27109;
                double t27152 = t27151*t27019*t27086;
                double t27153 = t27042*t27051*t27054*t27019*t27047;
                double t27154 = Aa*t27019*t27047*t27065*t27083*t27075*t27077*2.0;
                double t27155 = 1.0/t27116;
                double t27156 = 1.0/pow(rho_b,1.1E1/3.0);
                double t27157 = 1.0/(t27116*t27116);
                double t27158 = 1.0/t27123;
                double t27159 = 1.0/(t27127*t27127);
                double t27160 = 1.0/pow(rho_b,1.9E1/3.0);
                double t27161 = 1.0/(t27123*t27123);
                double t27162 = 1.0/t27127;
                double t27163 = 1.0/t27132;
                double t27164 = 1.0/(t27132*t27132);
                double t27165 = gcab*t26983*2.0;
                double t27166 = t26983*t27114*t27117*6.0;
                double t27167 = gcab*t26983*t27117*t27118*6.0;
                double t27168 = t26983*t27114*t27118*t27119*2.0;
                double t27169 = t27165+t27166+t27167+t27168;
                double t27170 = gamma_bb*gcab*t27156*(8.0/3.0);
                double t27171 = gamma_bb*t27114*t27117*t27156*(8.0/3.0);
                double t27172 = t27170+t27171;
                double t27173 = gcab*t26983;
                double t27174 = t26983*t27114*t27117;
                double t27175 = t27173+t27174;
                double t27176 = gamma_bb*gcab*t27156*(1.6E1/3.0);
                double t27177 = gamma_bb*gcab*t27117*t27118*t27156*1.6E1;
                double t27178 = gamma_bb*t27114*t27118*t27119*t27156*(1.6E1/3.0);
                double t27179 = gamma_bb*t27114*t27117*t27156*1.6E1;
                double t27180 = t27176+t27177+t27178+t27179;
                double t27181 = gcab*t26983*(3.0/2.0);
                double t27182 = t26983*t27114*t27117*3.0;
                double t27183 = gcab*t26983*t27117*t27118*(3.0/2.0);
                double t27184 = t27181+t27182+t27183;
                double t27185 = gamma_bb*gcab*t27156*4.0;
                double t27186 = gamma_bb*gcab*t27117*t27118*t27156*4.0;
                double t27187 = gamma_bb*t27114*t27117*t27156*8.0;
                double t27188 = t27185+t27186+t27187;
                double t27189 = t27110-t27152;
                double t27190 = 1.0/t26991;
                double t27191 = 1.0/t27001;
                double t27192 = 1.0/t27004;
                double t27193 = 1.0/t26995;
                double t27194 = 1.0/(t26991*t26991);
                double t27195 = 1.0/(rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b*rho_b);
                double t27196 = 1.0/(t26995*t26995);
                double t27197 = 1.0/(t27004*t27004);
                double t27198 = gcaa*t26983*3.0;
                double t27199 = gamma_bb*t26985*t26988*6.0;
                double t27200 = gcaa*t26984*t26985*t26989*3.0;
                double t27201 = t27200+t27198+t27199;
                double t27202 = 1.0/pow(rho_b,3.5E1/3.0);
                double t27203 = 1.0/(t27001*t27001);
                double t27204 = gcaa*t26983*4.0;
                double t27205 = gamma_bb*t26985*t26988*1.2E1;
                double t27206 = gcaa*t26984*t26985*t26989*1.2E1;
                double t27207 = gamma_bb*t26984*t26986*t26987*4.0;
                double t27208 = t27204+t27205+t27206+t27207;
                double t27209 = gcaa*t26983*2.0;
                double t27210 = gamma_bb*t26985*t26988*2.0;
                double t27211 = t27210+t27209;
                double t27212 = gamma_bb*gcaa*t27156*(1.6E1/3.0);
                double t27213 = t26984*t26985*t27160*(1.6E1/3.0);
                double t27214 = t27212+t27213;
                double t27215 = gamma_bb*gcaa*t27156*8.0;
                double t27216 = gamma_bb*gcaa*t26984*t26985*t27195*8.0;
                double t27217 = t26984*t26985*t27160*1.6E1;
                double t27218 = t27215+t27216+t27217;
                double t27219 = gamma_bb*gcaa*t27156*(3.2E1/3.0);
                double t27220 = gamma_bb*gcaa*t26984*t26985*t27195*3.2E1;
                double t27221 = t26984*t26985*t27160*3.2E1;
                double t27222 = t26986*t26996*t27202*(3.2E1/3.0);
                double t27223 = t27220+t27221+t27222+t27219;
                double t27224 = 1.0/t27096;
                double t27225 = 1.0/(t27093*t27093);
                double t27226 = b4f*t26969*t27098*(2.0/3.0);
                double t27227 = b2f*c*t27097*(1.0/3.0);
                double t27228 = b1f*c*t27097*t27099*(1.0/6.0);
                double t27229 = b3f*c*t26967*t27097*(1.0/2.0);
                double t27230 = t27226+t27227+t27228+t27229;
                double t27231 = a1f*c*c0f*t27100*t27097*(2.0/3.0);
                double t27232 = a1p*c*c0p*t26980*t27097*(2.0/3.0);
                double t27233 = ccaa1*gcaa*t26983*t27190;
                double t27234 = ccaa4*gamma_bb*t26984*t26986*t26987*t27191*4.0;
                double t27235 = ccaa2*gamma_bb*t26985*t26988*t27192*2.0;
                double t27236 = ccaa3*gcaa*t26984*t26985*t26989*t27193*3.0;
                double t27237 = t27233+t27234+t27235+t27236-ccaa1*gamma_bb*t26985*t26988*t27194-ccaa4*t26986*t26987*t26996*t27203*t27208-ccaa2*t26984*t26985*t26988*t27211*t27197-ccaa3*gamma_bb*gcaa*t26984*t26985*t26989*t27201*t27196;
                v_rho_b_gamma_bb[Q] += scale * (-(rho_b*t27189+rho_a*(t27150-t27019*t27086*(t27150-c0f*log((t27020*(1.0/2.0))/(b1f*t27136+b3f*t27137+b2f*c*t27134+b4f*t26969*t27138)+1.0)*(a1f*c*t27134+1.0)*2.0))-t27005*(t27053+t27153+t27154))*(ccab1*gcab*t27155*t27156*(4.0/3.0)-ccab2*t27161*t27117*t27118*(gcab*t27156*(8.0/3.0)+gamma_bb*t27160*t27117*(4.0/3.0)+t27114*t27117*t27156*(8.0/3.0))-ccab4*t27120*t27119*t27164*(gcab*t27156*(1.6E1/3.0)+gamma_bb*t27160*t27117*8.0+t27114*t27117*t27156*1.6E1+gamma_bb*t27160*t27118*t27119*8.0+gcab*t27117*t27118*t27156*1.6E1+t27114*t27118*t27119*t27156*(1.6E1/3.0)+gamma_bb*gcab*t27114*t27160*t27117*1.6E1)-ccab1*gamma_bb*t27160*t27117*t27157*(4.0/3.0)+ccab2*gamma_bb*t27160*t27117*t27158*(4.0/3.0)-ccab1*t27114*t27117*t27156*t27157*(4.0/3.0)+ccab2*t27114*t27117*t27156*t27158*(8.0/3.0)-ccab2*t26983*t27114*t27161*t27117*t27172+ccab4*t27114*t27118*t27163*t27119*t27156*(1.6E1/3.0)+ccab4*t27120*1.0/(t27132*t27132*t27132)*t27180*t27119*t27169*2.0+ccab2*1.0/(t27123*t27123*t27123)*t27117*t27118*t27172*t27175*2.0+ccab4*gamma_bb*t27160*t27118*t27163*t27119*8.0+ccab3*gcab*t27117*t27162*t27118*t27156*4.0+ccab3*gamma_bb*gcab*t27114*t27160*t27117*t27162*4.0-ccab2*gamma_bb*t27114*t27161*t27117*t27156*t27175*(8.0/3.0)-ccab3*gcab*t26983*t27117*t27118*t27159*t27188*(3.0/2.0)-ccab4*t26983*t27114*t27180*t27118*t27119*t27164*2.0-ccab3*gcab*t27114*t27117*t27118*t27159*(gcab*t27156*4.0+gamma_bb*t27160*t27117*4.0+t27114*t27117*t27156*8.0+gcab*t27117*t27118*t27156*4.0+gamma_bb*gcab*t27114*t27160*t27117*4.0)+ccab1*gamma_bb*gcab*t27114*t27160*1.0/(t27116*t27116*t27116)*t27117*(4.0/3.0)+ccab3*gcab*t27114*t27117*t27118*1.0/(t27127*t27127*t27127)*t27184*t27188*2.0-ccab3*gamma_bb*gcab*t27117*t27118*t27156*t27184*t27159*4.0-ccab4*gamma_bb*t27114*t27118*t27119*t27164*t27156*t27169*(1.6E1/3.0))-(-t27110+t27053+t27152+t27153+t27154+rho_b*(t27232-t27108+t27019*t27086*(t27231+t27108-t27230*t27224*t27225*t27088-a1p*c*c0p*t26980*t27097*(2.0/3.0)))-t27005*(t27133-t27025*t27063*t27057*t27058+t27042*t27051*t27054*t27081*t27019+t27042*t27054*t27019*t27064*t27047*4.0-t27051*t27054*t27019*t27047*(t27133-t27025*t27063*t27057*t27058+(t27040*1.0/(t27034*t27034)*(b2f*c*t27016*(1.0/3.0)+b4f*t26969*t27055*(2.0/3.0)+b1f*c*t27016*t27056*(1.0/6.0)+b3f*c*t27016*t27008*(1.0/2.0)))/t27037-a1f*c*c0f*t27016*t27038*(2.0/3.0))+t27042*t27051*t27026*t27027*t27019*t27047*4.0+Aa*t27019*t27047*t27065*t27075*t27077*(t27054*t27064*4.0+t27051*t27026*t27027*4.0)*2.0+Aa*t27081*t27019*t27065*t27083*t27075*t27077*2.0-(1.0/(t27071*t27071)*t27019*t27047*t27065*t27083*t27077*(b2a*c*t27016*(1.0/3.0)+b4a*t26969*t27055*(2.0/3.0)+b1a*c*t27016*t27056*(1.0/6.0)+b3a*c*t27016*t27008*(1.0/2.0)))/t27074+Aa*a1a*c*t27016*t27019*t27047*t27065*t27083*t27075*(2.0/3.0)))*(ccab1*gcab*t26983*t27155*(1.0/2.0)-ccab1*t26983*t27114*t27117*t27157*(1.0/2.0)+ccab2*t26983*t27114*t27117*t27158-ccab2*t27161*t27117*t27118*t27175-ccab4*t27120*t27119*t27164*t27169+ccab4*t26983*t27114*t27118*t27163*t27119*2.0+ccab3*gcab*t26983*t27117*t27162*t27118*(3.0/2.0)-ccab3*gcab*t27114*t27117*t27118*t27184*t27159)-t27237*(t27110+t27019*t27086*(t27109-c0p*t26980*t26982*2.0))-rho_b*t27189*(ccaa1*gcaa*t27190*t27156*(-8.0/3.0)-ccaa2*gamma_bb*t26985*t27160*t27192*(3.2E1/3.0)+ccaa1*gamma_bb*t26985*t27160*t27194*8.0+ccaa4*t26986*t26996*t27202*t27203*t27208*(3.2E1/3.0)+ccaa2*t26984*t26985*t27211*t27160*t27197*(1.6E1/3.0)+ccaa4*t26986*t26987*t26996*t27203*(gcaa*t27156*(3.2E1/3.0)+gamma_bb*t26985*t27160*6.4E1+gamma_bb*t26984*t26986*t27202*(1.28E2/3.0)+gcaa*t26984*t26985*t27195*9.6E1)-ccaa1*gcaa*1.0/(t26991*t26991*t26991)*t26984*t26985*t27195*(1.6E1/3.0)+ccaa2*t26984*t26985*t26988*t27197*(gcaa*t27156*(1.6E1/3.0)+gamma_bb*t26985*t27160*(3.2E1/3.0))-ccaa4*gamma_bb*t26984*t26986*t27202*t27191*(1.28E2/3.0)+ccaa2*gamma_bb*t26985*t26988*t27214*t27197*2.0-ccaa3*gcaa*t26984*t26985*t27193*t27195*2.4E1+ccaa4*gamma_bb*t26984*t26986*t26987*t27203*t27223*4.0+ccaa3*gcaa*t26984*t26985*t26989*t27218*t27196*3.0-ccaa2*t26984*t26985*t26988*1.0/(t27004*t27004*t27004)*t27211*t27214*2.0-ccaa4*t26986*t26987*t26996*1.0/(t27001*t27001*t27001)*t27223*t27208*2.0+ccaa3*gamma_bb*gcaa*t26984*t26985*t26989*t27196*(gcaa*t27156*8.0+gamma_bb*t26985*t27160*3.2E1+gcaa*t26984*t26985*t27195*2.4E1)+ccaa3*gamma_bb*gcaa*t26984*t26985*t27201*t27195*t27196*8.0-ccaa3*gamma_bb*gcaa*t26984*t26985*1.0/(t26995*t26995*t26995)*t26989*t27201*t27218*2.0)+rho_b*t27237*(t27232-t27108+t27019*t27086*(t27231-t27232+t27108-t27230*t27224*t27225*t27088)));
            }
            
        }
    }
}

}
