/**********************************************************
* wS_X_functional.cc: definitions for wS_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wS_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wS_X_Functional::wS_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wS_X";
    description_ = "Range-Corrected Slater LSDA";
    citation_ = "Null";

    double omega = 2.9999999999999999E-01;
    params_.push_back(make_pair("omega",omega));

    is_gga_ = false;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wS_X_Functional::~wS_X_Functional()
{
}
void wS_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t134408 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134409 = 1.0/(omega*omega);
            double t134410 = pow(rho_a[index],2.0/3.0);
            double t134411 = exp(t134410*t134409*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t134408*(erf((pow(rho_a[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t134408*(-t134411+ \
               (omega*omega)*1.0/pow(rho_a[index],2.0/3.0)*(t134411-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t134413 = pow(rho_a[index],1.0/3.0);
            double t134414 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134415 = 1.0/(omega*omega);
            double t134416 = pow(rho_a[index],2.0/3.0);
            double t134418 = t134415*t134416*(5.734716210713804E32/3.774660826274405E31);
            double t134417 = exp(-t134418);
            double t134419 = omega*omega;
            double t134420 = t134417-1.0;
            double t134421 = 1.0/pow(rho_a[index],2.0/3.0);
            double t134422 = t134420*t134421*t134419*(3.774660826274405E31/1.146943242142761E33);
            double t134423 = t134422-t134417+3.0/2.0;
            double t134424 = 1.0/omega;
            double t134425 = 1.0/pow(rho_a[index],4.0/3.0);
            double t134426 = t134413*t134424*(2.394726750740845E16/6.143826841858749E15);
            double t134427 = erf(t134426);
            double t134428 = t134427*(3.991211251234741E15/2.251799813685248E15);
            double t134429 = t134428-omega*t134414*t134423*(6.143826841858749E15/2.394726750740845E16);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t134414*(omega*t134414*((t134417*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t134420*t134419*(1.258220275424802E31/5.734716210713804E32)-t134414* \
               t134415*t134417*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134423*t134425*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t134421* \
               t134424*t134417*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134425*t134429*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t134413*(omega*t134414* \
               t134429*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t134433 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134434 = 1.0/pow(rho_a[index],2.0/3.0);
            double t134435 = 1.0/(omega*omega);
            double t134436 = pow(rho_a[index],2.0/3.0);
            double t134438 = t134435*t134436*(5.734716210713804E32/3.774660826274405E31);
            double t134437 = exp(-t134438);
            double t134439 = omega*omega;
            double t134440 = t134437-1.0;
            double t134441 = t134440*t134434*t134439*(3.774660826274405E31/1.146943242142761E33);
            double t134442 = t134441-t134437+3.0/2.0;
            double t134443 = 1.0/rho_a[index];
            double t134444 = 1.0/sqrt(3.141592653589793);
            double t134445 = 1.0/omega;
            double t134446 = 1.0/pow(rho_a[index],5.0/3.0);
            double t134447 = 1.0/pow(rho_a[index],4.0/3.0);
            double t134448 = t134443*t134437*(1.0/3.0);
            double t134449 = t134440*t134446*t134439*(1.258220275424802E31/5.734716210713804E32);
            double t134457 = t134433*t134435*t134437*(1.146943242142761E33/1.132398247882321E32);
            double t134450 = t134448-t134457+t134449;
            double t134451 = 1.0/pow(rho_a[index],7.0/3.0);
            double t134452 = pow(rho_a[index],1.0/3.0);
            double t134453 = t134452*t134445*(2.394726750740845E16/6.143826841858749E15);
            double t134454 = erf(t134453);
            double t134455 = t134454*(3.991211251234741E15/2.251799813685248E15);
            double t134462 = omega*t134433*t134442*(6.143826841858749E15/2.394726750740845E16);
            double t134456 = -t134462+t134455;
            double t134458 = omega*t134450*t134433*(6.143826841858749E15/2.394726750740845E16);
            double t134459 = omega*t134442*t134447*(2.047942280619583E15/2.394726750740845E16);
            double t134460 = t134434*t134444*t134445*t134437*(1.493415679873386E30/3.242500344799677E29);
            double t134461 = t134460+t134458+t134459;
            v_rho_a_rho_a_[index] = t134452*(omega*t134433*t134461*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134447*t134456*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_a[index],4.0/ \
               3.0)*(omega*t134433*(omega*t134433*(1.0/(rho_a[index]*rho_a[index])*t134437*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t134434*t134437*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/ \
               3.0)*t134440*t134439*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134442*t134451*(2.047942280619583E15/1.796045063055634E16)+omega*t134450*t134447*(2.047942280619583E15/ \
               1.197363375370422E16)+t134444*t134445*t134437*t134446*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t134443*t134444*t134437*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t134451*t134456*(2.860781056907312E30/1.011083484589746E31)+omega*t134461* \
               t134447*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t134434*(omega*t134433*t134456*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wS_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t134059 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134060 = 1.0/(omega*omega);
            double t134061 = pow(rho_a[index],2.0/3.0);
            double t134062 = exp(t134060*t134061*(-5.734716210713804E32/3.774660826274405E31));
            double t134063 = 1.0/omega;
            double t134064 = 1.0/pow(rho_b[index],1.0/3.0);
            double t134065 = omega*omega;
            double t134066 = pow(rho_b[index],2.0/3.0);
            double t134067 = exp(t134060*t134066*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t134059*(erf(pow(rho_a[index],1.0/3.0)*t134063* \
               (2.394726750740845E16/6.143826841858749E15))*(3.991211251234741E15/2.251799813685248E15)-omega*t134059* \
               (-t134062+1.0/pow(rho_a[index],2.0/3.0)*t134065*(t134062-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(1.0/2.0)+pow(rho_b[index],4.0/3.0)*(omega*t134064*(erf(pow(rho_b[index],1.0/ \
               3.0)*t134063*(2.394726750740845E16/6.143826841858749E15))*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t134064*(-t134067+1.0/pow(rho_b[index],2.0/3.0)*t134065*(t134067-1.0)*(3.774660826274405E31/ \
               1.146943242142761E33)+3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t134285 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134286 = 1.0/(omega*omega);
            double t134287 = pow(rho_a[index],2.0/3.0);
            double t134288 = exp(t134286*t134287*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t134285*(erf((pow(rho_a[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t134285*(-t134288+ \
               (omega*omega)*1.0/pow(rho_a[index],2.0/3.0)*(t134288-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t134198 = 1.0/pow(rho_b[index],1.0/3.0);
            double t134199 = 1.0/(omega*omega);
            double t134200 = pow(rho_b[index],2.0/3.0);
            double t134201 = exp(t134200*t134199*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_b[index],4.0/3.0)*(omega*t134198*(erf((pow(rho_b[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t134198*(-t134201+ \
               (omega*omega)*1.0/pow(rho_b[index],2.0/3.0)*(t134201-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t134069 = pow(rho_a[index],1.0/3.0);
            double t134070 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134071 = 1.0/(omega*omega);
            double t134072 = pow(rho_a[index],2.0/3.0);
            double t134074 = t134071*t134072*(5.734716210713804E32/3.774660826274405E31);
            double t134073 = exp(-t134074);
            double t134075 = omega*omega;
            double t134076 = t134073-1.0;
            double t134077 = 1.0/pow(rho_a[index],2.0/3.0);
            double t134078 = t134075*t134076*t134077*(3.774660826274405E31/1.146943242142761E33);
            double t134079 = -t134073+t134078+3.0/2.0;
            double t134080 = 1.0/omega;
            double t134081 = 1.0/pow(rho_a[index],4.0/3.0);
            double t134082 = t134080*t134069*(2.394726750740845E16/6.143826841858749E15);
            double t134083 = erf(t134082);
            double t134084 = t134083*(3.991211251234741E15/2.251799813685248E15);
            double t134085 = t134084-omega*t134070*t134079*(6.143826841858749E15/2.394726750740845E16);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t134070*(omega*t134070*((t134073*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t134075*t134076*(1.258220275424802E31/5.734716210713804E32)-t134070* \
               t134071*t134073*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134081*t134079*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t134080* \
               t134073*t134077*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134081*t134085*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t134069*(omega*t134070* \
               t134085*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else if (rho_a[index] > cutoff_) {
            double t134290 = pow(rho_a[index],1.0/3.0);
            double t134291 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134292 = 1.0/(omega*omega);
            double t134293 = pow(rho_a[index],2.0/3.0);
            double t134295 = t134292*t134293*(5.734716210713804E32/3.774660826274405E31);
            double t134294 = exp(-t134295);
            double t134296 = omega*omega;
            double t134297 = t134294-1.0;
            double t134298 = 1.0/pow(rho_a[index],2.0/3.0);
            double t134299 = t134296*t134297*t134298*(3.774660826274405E31/1.146943242142761E33);
            double t134300 = -t134294+t134299+3.0/2.0;
            double t134301 = 1.0/omega;
            double t134302 = 1.0/pow(rho_a[index],4.0/3.0);
            double t134303 = t134301*t134290*(2.394726750740845E16/6.143826841858749E15);
            double t134304 = erf(t134303);
            double t134305 = t134304*(3.991211251234741E15/2.251799813685248E15);
            double t134306 = t134305-omega*t134300*t134291*(6.143826841858749E15/2.394726750740845E16);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t134291*(omega*t134291*((t134294*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t134296*t134297*(1.258220275424802E31/5.734716210713804E32)-t134291* \
               t134292*t134294*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134300*t134302*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t134301* \
               t134294*t134298*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134302*t134306*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t134290*(omega*t134306* \
               t134291*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t134087 = pow(rho_b[index],1.0/3.0);
            double t134088 = 1.0/pow(rho_b[index],1.0/3.0);
            double t134089 = 1.0/(omega*omega);
            double t134090 = pow(rho_b[index],2.0/3.0);
            double t134092 = t134090*t134089*(5.734716210713804E32/3.774660826274405E31);
            double t134091 = exp(-t134092);
            double t134093 = omega*omega;
            double t134094 = t134091-1.0;
            double t134095 = 1.0/pow(rho_b[index],2.0/3.0);
            double t134096 = t134093*t134094*t134095*(3.774660826274405E31/1.146943242142761E33);
            double t134097 = -t134091+t134096+3.0/2.0;
            double t134098 = 1.0/omega;
            double t134099 = 1.0/pow(rho_b[index],4.0/3.0);
            double t134100 = t134087*t134098*(2.394726750740845E16/6.143826841858749E15);
            double t134101 = erf(t134100);
            double t134102 = t134101*(3.991211251234741E15/2.251799813685248E15);
            double t134103 = t134102-omega*t134088*t134097*(6.143826841858749E15/2.394726750740845E16);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t134088*(omega*t134088*((t134091*(1.0/3.0))/rho_b[index]+ \
               1.0/pow(rho_b[index],5.0/3.0)*t134093*t134094*(1.258220275424802E31/5.734716210713804E32)-t134091* \
               t134088*t134089*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134097*t134099*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t134091* \
               t134095*t134098*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134103*t134099*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t134087*(omega*t134103* \
               t134088*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t134204 = pow(rho_b[index],1.0/3.0);
            double t134205 = 1.0/pow(rho_b[index],1.0/3.0);
            double t134206 = 1.0/(omega*omega);
            double t134207 = pow(rho_b[index],2.0/3.0);
            double t134209 = t134206*t134207*(5.734716210713804E32/3.774660826274405E31);
            double t134208 = exp(-t134209);
            double t134210 = omega*omega;
            double t134211 = t134208-1.0;
            double t134212 = 1.0/pow(rho_b[index],2.0/3.0);
            double t134213 = t134210*t134211*t134212*(3.774660826274405E31/1.146943242142761E33);
            double t134214 = t134213-t134208+3.0/2.0;
            double t134215 = 1.0/omega;
            double t134216 = 1.0/pow(rho_b[index],4.0/3.0);
            double t134217 = t134204*t134215*(2.394726750740845E16/6.143826841858749E15);
            double t134218 = erf(t134217);
            double t134219 = t134218*(3.991211251234741E15/2.251799813685248E15);
            double t134220 = t134219-omega*t134205*t134214*(6.143826841858749E15/2.394726750740845E16);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t134205*(omega*t134205*((t134208*(1.0/3.0))/rho_b[index]+ \
               1.0/pow(rho_b[index],5.0/3.0)*t134210*t134211*(1.258220275424802E31/5.734716210713804E32)-t134205* \
               t134206*t134208*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134214*t134216*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t134212* \
               t134215*t134208*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134220*t134216*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t134204*(omega*t134220* \
               t134205*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t134110 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134111 = 1.0/pow(rho_a[index],2.0/3.0);
            double t134112 = 1.0/(omega*omega);
            double t134113 = pow(rho_a[index],2.0/3.0);
            double t134115 = t134112*t134113*(5.734716210713804E32/3.774660826274405E31);
            double t134114 = exp(-t134115);
            double t134116 = omega*omega;
            double t134117 = t134114-1.0;
            double t134118 = t134111*t134116*t134117*(3.774660826274405E31/1.146943242142761E33);
            double t134119 = -t134114+t134118+3.0/2.0;
            double t134120 = 1.0/rho_a[index];
            double t134121 = 1.0/sqrt(3.141592653589793);
            double t134122 = 1.0/omega;
            double t134123 = 1.0/pow(rho_a[index],5.0/3.0);
            double t134124 = 1.0/pow(rho_a[index],4.0/3.0);
            double t134125 = t134120*t134114*(1.0/3.0);
            double t134126 = t134123*t134116*t134117*(1.258220275424802E31/5.734716210713804E32);
            double t134134 = t134110*t134112*t134114*(1.146943242142761E33/1.132398247882321E32);
            double t134127 = t134125-t134134+t134126;
            double t134128 = 1.0/pow(rho_a[index],7.0/3.0);
            double t134129 = pow(rho_a[index],1.0/3.0);
            double t134130 = t134122*t134129*(2.394726750740845E16/6.143826841858749E15);
            double t134131 = erf(t134130);
            double t134132 = t134131*(3.991211251234741E15/2.251799813685248E15);
            double t134139 = omega*t134110*t134119*(6.143826841858749E15/2.394726750740845E16);
            double t134133 = t134132-t134139;
            double t134135 = omega*t134110*t134127*(6.143826841858749E15/2.394726750740845E16);
            double t134136 = omega*t134124*t134119*(2.047942280619583E15/2.394726750740845E16);
            double t134137 = t134111*t134121*t134122*t134114*(1.493415679873386E30/3.242500344799677E29);
            double t134138 = t134135+t134136+t134137;
            v_rho_a_rho_a_[index] = t134129*(omega*t134110*t134138*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134124*t134133*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_a[index],4.0/ \
               3.0)*(omega*t134110*(omega*t134110*(1.0/(rho_a[index]*rho_a[index])*t134114*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t134111*t134114*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/ \
               3.0)*t134116*t134117*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134124*t134127*(2.047942280619583E15/1.197363375370422E16)+omega*t134119*t134128*(2.047942280619583E15/ \
               1.796045063055634E16)+t134121*t134122*t134114*t134123*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t134120*t134121*t134114*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t134133*t134128*(2.860781056907312E30/1.011083484589746E31)+omega*t134124* \
               t134138*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t134111*(omega*t134110*t134133*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t134314 = 1.0/pow(rho_a[index],1.0/3.0);
            double t134315 = 1.0/pow(rho_a[index],2.0/3.0);
            double t134316 = 1.0/(omega*omega);
            double t134317 = pow(rho_a[index],2.0/3.0);
            double t134319 = t134316*t134317*(5.734716210713804E32/3.774660826274405E31);
            double t134318 = exp(-t134319);
            double t134320 = omega*omega;
            double t134321 = t134318-1.0;
            double t134322 = t134320*t134321*t134315*(3.774660826274405E31/1.146943242142761E33);
            double t134323 = t134322-t134318+3.0/2.0;
            double t134324 = 1.0/rho_a[index];
            double t134325 = 1.0/sqrt(3.141592653589793);
            double t134326 = 1.0/omega;
            double t134327 = 1.0/pow(rho_a[index],5.0/3.0);
            double t134328 = 1.0/pow(rho_a[index],4.0/3.0);
            double t134329 = t134324*t134318*(1.0/3.0);
            double t134330 = t134320*t134321*t134327*(1.258220275424802E31/5.734716210713804E32);
            double t134338 = t134314*t134316*t134318*(1.146943242142761E33/1.132398247882321E32);
            double t134331 = t134330+t134329-t134338;
            double t134332 = 1.0/pow(rho_a[index],7.0/3.0);
            double t134333 = pow(rho_a[index],1.0/3.0);
            double t134334 = t134333*t134326*(2.394726750740845E16/6.143826841858749E15);
            double t134335 = erf(t134334);
            double t134336 = t134335*(3.991211251234741E15/2.251799813685248E15);
            double t134343 = omega*t134314*t134323*(6.143826841858749E15/2.394726750740845E16);
            double t134337 = -t134343+t134336;
            double t134339 = omega*t134331*t134314*(6.143826841858749E15/2.394726750740845E16);
            double t134340 = omega*t134323*t134328*(2.047942280619583E15/2.394726750740845E16);
            double t134341 = t134315*t134325*t134326*t134318*(1.493415679873386E30/3.242500344799677E29);
            double t134342 = t134340+t134341+t134339;
            v_rho_a_rho_a_[index] = t134333*(omega*t134314*t134342*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134328*t134337*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_a[index],4.0/ \
               3.0)*(omega*t134314*(omega*t134314*(1.0/(rho_a[index]*rho_a[index])*t134318*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t134315*t134318*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/ \
               3.0)*t134320*t134321*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134323*t134332*(2.047942280619583E15/1.796045063055634E16)+omega*t134331*t134328*(2.047942280619583E15/ \
               1.197363375370422E16)+t134325*t134326*t134318*t134327*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t134324*t134325*t134318*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t134332*t134337*(2.860781056907312E30/1.011083484589746E31)+omega*t134342* \
               t134328*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t134315*(omega*t134314*t134337*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t134142 = 1.0/pow(rho_b[index],1.0/3.0);
            double t134143 = 1.0/pow(rho_b[index],2.0/3.0);
            double t134144 = 1.0/(omega*omega);
            double t134145 = pow(rho_b[index],2.0/3.0);
            double t134147 = t134144*t134145*(5.734716210713804E32/3.774660826274405E31);
            double t134146 = exp(-t134147);
            double t134148 = omega*omega;
            double t134149 = t134146-1.0;
            double t134150 = t134143*t134148*t134149*(3.774660826274405E31/1.146943242142761E33);
            double t134151 = t134150-t134146+3.0/2.0;
            double t134152 = 1.0/rho_b[index];
            double t134153 = 1.0/sqrt(3.141592653589793);
            double t134154 = 1.0/omega;
            double t134155 = 1.0/pow(rho_b[index],5.0/3.0);
            double t134156 = 1.0/pow(rho_b[index],4.0/3.0);
            double t134157 = t134152*t134146*(1.0/3.0);
            double t134158 = t134155*t134148*t134149*(1.258220275424802E31/5.734716210713804E32);
            double t134166 = t134142*t134144*t134146*(1.146943242142761E33/1.132398247882321E32);
            double t134159 = t134157-t134166+t134158;
            double t134160 = 1.0/pow(rho_b[index],7.0/3.0);
            double t134161 = pow(rho_b[index],1.0/3.0);
            double t134162 = t134161*t134154*(2.394726750740845E16/6.143826841858749E15);
            double t134163 = erf(t134162);
            double t134164 = t134163*(3.991211251234741E15/2.251799813685248E15);
            double t134171 = omega*t134142*t134151*(6.143826841858749E15/2.394726750740845E16);
            double t134165 = -t134171+t134164;
            double t134167 = omega*t134142*t134159*(6.143826841858749E15/2.394726750740845E16);
            double t134168 = omega*t134151*t134156*(2.047942280619583E15/2.394726750740845E16);
            double t134169 = t134143*t134153*t134154*t134146*(1.493415679873386E30/3.242500344799677E29);
            double t134170 = t134167+t134168+t134169;
            v_rho_b_rho_b_[index] = t134161*(omega*t134142*t134170*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t134156*t134165*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_b[index],4.0/ \
               3.0)*(omega*t134142*(omega*t134142*(1.0/(rho_b[index]*rho_b[index])*t134146*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t134143*t134146*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_b[index],8.0/ \
               3.0)*t134148*t134149*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134151*t134160*(2.047942280619583E15/1.796045063055634E16)+omega*t134156*t134159*(2.047942280619583E15/ \
               1.197363375370422E16)+t134153*t134154*t134146*t134155*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t134152*t134153*t134146*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t134160*t134165*(2.860781056907312E30/1.011083484589746E31)+omega*t134170* \
               t134156*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t134143*(omega*t134142*t134165*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t134229 = 1.0/pow(rho_b[index],1.0/3.0);
            double t134230 = 1.0/pow(rho_b[index],2.0/3.0);
            double t134231 = 1.0/(omega*omega);
            double t134232 = pow(rho_b[index],2.0/3.0);
            double t134234 = t134231*t134232*(5.734716210713804E32/3.774660826274405E31);
            double t134233 = exp(-t134234);
            double t134235 = omega*omega;
            double t134236 = t134233-1.0;
            double t134237 = t134230*t134235*t134236*(3.774660826274405E31/1.146943242142761E33);
            double t134238 = -t134233+t134237+3.0/2.0;
            double t134239 = 1.0/rho_b[index];
            double t134240 = 1.0/sqrt(3.141592653589793);
            double t134241 = 1.0/omega;
            double t134242 = 1.0/pow(rho_b[index],5.0/3.0);
            double t134243 = 1.0/pow(rho_b[index],4.0/3.0);
            double t134244 = t134233*t134239*(1.0/3.0);
            double t134245 = t134242*t134235*t134236*(1.258220275424802E31/5.734716210713804E32);
            double t134253 = t134231*t134233*t134229*(1.146943242142761E33/1.132398247882321E32);
            double t134246 = t134244-t134253+t134245;
            double t134247 = 1.0/pow(rho_b[index],7.0/3.0);
            double t134248 = pow(rho_b[index],1.0/3.0);
            double t134249 = t134241*t134248*(2.394726750740845E16/6.143826841858749E15);
            double t134250 = erf(t134249);
            double t134251 = t134250*(3.991211251234741E15/2.251799813685248E15);
            double t134258 = omega*t134229*t134238*(6.143826841858749E15/2.394726750740845E16);
            double t134252 = t134251-t134258;
            double t134254 = omega*t134246*t134229*(6.143826841858749E15/2.394726750740845E16);
            double t134255 = omega*t134243*t134238*(2.047942280619583E15/2.394726750740845E16);
            double t134256 = t134230*t134240*t134241*t134233*(1.493415679873386E30/3.242500344799677E29);
            double t134257 = t134254+t134255+t134256;
            v_rho_b_rho_b_[index] = t134248*(omega*t134243*t134252*(2.860781056907312E30/1.348111312786328E31) \
               -omega*t134229*t134257*(8.582343170721935E30/1.348111312786328E31))*(-4.0/3.0)-pow(rho_b[index],4.0/ \
               3.0)*(omega*t134229*(omega*t134229*(1.0/(rho_b[index]*rho_b[index])*t134233*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t134230*t134233*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_b[index],8.0/ \
               3.0)*t134235*t134236*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t134243*t134246*(2.047942280619583E15/1.197363375370422E16)+omega*t134238*t134247*(2.047942280619583E15/ \
               1.796045063055634E16)+t134240*t134241*t134233*t134242*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t134240*t134233*t134239*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t134252*t134247*(2.860781056907312E30/1.011083484589746E31)+omega*t134243* \
               t134257*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t134230*(omega*t134252*t134229*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

