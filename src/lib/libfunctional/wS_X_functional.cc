/**********************************************************
* wS_X_functional.cc: definitions for wS_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 08-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wS_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wS_X_Functional::wS_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wS_X";
    description_ = "Range-Corrected Slater LSDA";
    citation_ = "Null";

    double omega = 2.9999999999999999E-01;
    params_.push_back(make_pair("omega",omega));

    is_gga_ = false;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wS_X_Functional::~wS_X_Functional()
{
}
void wS_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t185750 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185751 = 1.0/pow(t185750,1.0/3.0);
            double t185752 = 1.0/(omega*omega);
            double t185753 = pow(t185750,2.0/3.0);
            double t185754 = exp(-t185752*t185753);
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t185751*(erf(pow(t185750,1.0/3.0)/omega)*(3.991211251234741E15/ \
               2.251799813685248E15)-omega*t185751*(-t185754+(omega*omega)*1.0/pow(t185750,2.0/3.0)*(t185754-1.0) \
               *(1.0/2.0)+3.0/2.0))*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               ;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t185756 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185757 = 1.0/(omega*omega);
            double t185758 = pow(t185756,2.0/3.0);
            double t185761 = t185757*t185758;
            double t185759 = exp(-t185761);
            double t185760 = 1.0/pow(t185756,1.0/3.0);
            double t185762 = omega*omega;
            double t185763 = t185759-1.0;
            double t185764 = 1.0/pow(t185756,2.0/3.0);
            double t185765 = 1.0/pow(t185756,4.0/3.0);
            double t185766 = 1.0/omega;
            double t185767 = t185762*t185763*t185764*(1.0/2.0);
            double t185768 = t185767-t185759+3.0/2.0;
            double t185769 = pow(t185756,1.0/3.0);
            double t185770 = t185766*t185769;
            double t185771 = erf(t185770);
            double t185772 = t185771*(3.991211251234741E15/2.251799813685248E15);
            double t185773 = t185772-omega*t185760*t185768;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t185760*(omega*t185765*t185768*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t185760*((t185759*(1.0/3.0))/rho_a[index]+t185762*t185763*1.0/pow(t185756,5.0/ \
               3.0)*(2.778046668940015E15/1.40737488355328E14)-t185760*t185757*t185759*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t185764*t185766*t185759*(1.108777112152858E31/1.584563250285287E29)) \
               *(1.396905119826821E15/5.62949953421312E14)-omega*t185773*t185765*(3.880667614960153E30/7.922816251426434E28) \
               )*(1.0/2.0)+pow(rho_a[index],1.0/3.0)*(omega*t185760*t185773*(1.396905119826821E15/5.62949953421312E14) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t185777 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185778 = 1.0/(omega*omega);
            double t185779 = pow(t185777,2.0/3.0);
            double t185782 = t185778*t185779;
            double t185780 = exp(-t185782);
            double t185781 = 1.0/pow(t185777,1.0/3.0);
            double t185783 = omega*omega;
            double t185784 = t185780-1.0;
            double t185785 = 1.0/pow(t185777,2.0/3.0);
            double t185786 = 1.0/pow(t185777,4.0/3.0);
            double t185787 = 1.0/omega;
            double t185788 = t185783*t185784*t185785*(1.0/2.0);
            double t185789 = -t185780+t185788+3.0/2.0;
            double t185790 = pow(t185777,1.0/3.0);
            double t185791 = t185790*t185787;
            double t185792 = erf(t185791);
            double t185793 = t185792*(3.991211251234741E15/2.251799813685248E15);
            double t185807 = omega*t185781*t185789;
            double t185794 = -t185807+t185793;
            double t185795 = 1.0/rho_a[index];
            double t185796 = t185780*t185795*(1.0/3.0);
            double t185797 = 1.0/pow(t185777,5.0/3.0);
            double t185798 = t185783*t185784*t185797*(2.778046668940015E15/1.40737488355328E14);
            double t185802 = t185780*t185781*t185778*(2.778046668940015E15/7.0368744177664E13);
            double t185799 = -t185802+t185796+t185798;
            double t185800 = 1.0/sqrt(3.141592653589793);
            double t185801 = omega*t185786*t185789*(2.778046668940015E15/1.40737488355328E14);
            double t185803 = omega*t185781*t185799;
            double t185804 = t185800*t185780*t185785*t185787*(1.108777112152858E31/1.584563250285287E29);
            double t185805 = t185801+t185803+t185804;
            double t185806 = 1.0/pow(t185777,7.0/3.0);
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(omega*t185805*t185781*(1.396905119826821E15/5.62949953421312E14) \
               -omega*t185794*t185786*(3.880667614960153E30/7.922816251426434E28))*(4.0/3.0)+1.0/pow(rho_a[index],2.0/ \
               3.0)*(omega*t185781*t185794*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               *(2.0/9.0)-pow(rho_a[index],4.0/3.0)*(omega*t185805*t185786*(3.880667614960153E30/3.961408125713217E28) \
               -omega*t185806*t185794*(1.078067574100344E46/2.787593149816328E42)+omega*t185781*(omega*t185806*t185789* \
               (7.717543294808713E30/4.951760157141521E27)+omega*t185786*t185799*(2.778046668940015E15/7.0368744177664E13) \
               +omega*t185781*(1.0/(rho_a[index]*rho_a[index])*t185780*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t185780* \
               t185785*(7.717543294808713E30/4.951760157141521E27)+t185783*t185784*1.0/pow(t185777,8.0/3.0)*(3.858771647404357E31/ \
               1.980704062856608E28)-t185780*t185786*t185778*(7.717543294808713E30/9.903520314283042E27)+t185780* \
               t185781*t185795*t185778*(2.778046668940015E15/2.11106232532992E14))+t185800*t185780*t185787*t185797* \
               (3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t185800*t185780*t185795*(1.108777112152858E31/ \
               2.37684487542793E29))*(1.396905119826821E15/5.62949953421312E14))*(1.0/2.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wS_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t185389 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185390 = 1.0/pow(t185389,1.0/3.0);
            double t185391 = 1.0/(omega*omega);
            double t185392 = pow(t185389,2.0/3.0);
            double t185393 = exp(-t185391*t185392);
            double t185394 = 1.0/omega;
            double t185395 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185396 = 1.0/pow(t185395,1.0/3.0);
            double t185397 = omega*omega;
            double t185398 = pow(t185395,2.0/3.0);
            double t185399 = exp(-t185391*t185398);
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t185390*(erf(t185394*pow(t185389,1.0/3.0))* \
               (3.991211251234741E15/2.251799813685248E15)-omega*t185390*(-t185393+t185397*1.0/pow(t185389,2.0/3.0) \
               *(t185393-1.0)*(1.0/2.0)+3.0/2.0))*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/ \
               2.251799813685248E15)*(1.0/2.0)+pow(rho_b[index],4.0/3.0)*(omega*t185396*(erf(t185394*pow(t185395,1.0/ \
               3.0))*(3.991211251234741E15/2.251799813685248E15)-omega*t185396*(-t185399+1.0/pow(t185395,2.0/3.0) \
               *t185397*(t185399-1.0)*(1.0/2.0)+3.0/2.0))*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/ \
               2.251799813685248E15)*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t185624 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185625 = 1.0/pow(t185624,1.0/3.0);
            double t185626 = 1.0/(omega*omega);
            double t185627 = pow(t185624,2.0/3.0);
            double t185628 = exp(-t185626*t185627);
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t185625*(erf(pow(t185624,1.0/3.0)/omega)*(3.991211251234741E15/ \
               2.251799813685248E15)-omega*t185625*(-t185628+(omega*omega)*1.0/pow(t185624,2.0/3.0)*(t185628-1.0) \
               *(1.0/2.0)+3.0/2.0))*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               *(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t185534 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185535 = 1.0/pow(t185534,1.0/3.0);
            double t185536 = 1.0/(omega*omega);
            double t185537 = pow(t185534,2.0/3.0);
            double t185538 = exp(-t185536*t185537);
            functional_[index] = pow(rho_b[index],4.0/3.0)*(omega*t185535*(erf(pow(t185534,1.0/3.0)/omega)*(3.991211251234741E15/ \
               2.251799813685248E15)-omega*t185535*(-t185538+(omega*omega)*1.0/pow(t185534,2.0/3.0)*(t185538-1.0) \
               *(1.0/2.0)+3.0/2.0))*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               *(1.0/2.0);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t185401 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185402 = 1.0/(omega*omega);
            double t185403 = pow(t185401,2.0/3.0);
            double t185406 = t185402*t185403;
            double t185404 = exp(-t185406);
            double t185405 = 1.0/pow(t185401,1.0/3.0);
            double t185407 = omega*omega;
            double t185408 = t185404-1.0;
            double t185409 = 1.0/pow(t185401,2.0/3.0);
            double t185410 = 1.0/pow(t185401,4.0/3.0);
            double t185411 = 1.0/omega;
            double t185412 = t185407*t185408*t185409*(1.0/2.0);
            double t185413 = t185412-t185404+3.0/2.0;
            double t185414 = pow(t185401,1.0/3.0);
            double t185415 = t185411*t185414;
            double t185416 = erf(t185415);
            double t185417 = t185416*(3.991211251234741E15/2.251799813685248E15);
            double t185418 = t185417-omega*t185413*t185405;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t185405*(omega*t185410*t185413*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t185405*((t185404*(1.0/3.0))/rho_a[index]+1.0/pow(t185401,5.0/3.0)*t185407* \
               t185408*(2.778046668940015E15/1.40737488355328E14)-t185402*t185404*t185405*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t185411*t185404*t185409*(1.108777112152858E31/1.584563250285287E29)) \
               *(1.396905119826821E15/5.62949953421312E14)-omega*t185410*t185418*(3.880667614960153E30/7.922816251426434E28) \
               )*(1.0/2.0)+pow(rho_a[index],1.0/3.0)*(omega*t185405*t185418*(1.396905119826821E15/5.62949953421312E14) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t185630 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185631 = 1.0/(omega*omega);
            double t185632 = pow(t185630,2.0/3.0);
            double t185635 = t185631*t185632;
            double t185633 = exp(-t185635);
            double t185634 = 1.0/pow(t185630,1.0/3.0);
            double t185636 = omega*omega;
            double t185637 = t185633-1.0;
            double t185638 = 1.0/pow(t185630,2.0/3.0);
            double t185639 = 1.0/pow(t185630,4.0/3.0);
            double t185640 = 1.0/omega;
            double t185641 = t185636*t185637*t185638*(1.0/2.0);
            double t185642 = t185641-t185633+3.0/2.0;
            double t185643 = pow(t185630,1.0/3.0);
            double t185644 = t185640*t185643;
            double t185645 = erf(t185644);
            double t185646 = t185645*(3.991211251234741E15/2.251799813685248E15);
            double t185647 = t185646-omega*t185642*t185634;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t185634*(omega*t185642*t185639*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t185634*((t185633*(1.0/3.0))/rho_a[index]+1.0/pow(t185630,5.0/3.0)*t185636* \
               t185637*(2.778046668940015E15/1.40737488355328E14)-t185631*t185633*t185634*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t185640*t185633*t185638*(1.108777112152858E31/1.584563250285287E29)) \
               *(1.396905119826821E15/5.62949953421312E14)-omega*t185647*t185639*(3.880667614960153E30/7.922816251426434E28) \
               )*(1.0/2.0)+pow(rho_a[index],1.0/3.0)*(omega*t185634*t185647*(1.396905119826821E15/5.62949953421312E14) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t185420 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185421 = 1.0/(omega*omega);
            double t185422 = pow(t185420,2.0/3.0);
            double t185425 = t185421*t185422;
            double t185423 = exp(-t185425);
            double t185424 = 1.0/pow(t185420,1.0/3.0);
            double t185426 = omega*omega;
            double t185427 = t185423-1.0;
            double t185428 = 1.0/pow(t185420,2.0/3.0);
            double t185429 = 1.0/pow(t185420,4.0/3.0);
            double t185430 = 1.0/omega;
            double t185431 = t185426*t185427*t185428*(1.0/2.0);
            double t185432 = t185431-t185423+3.0/2.0;
            double t185433 = pow(t185420,1.0/3.0);
            double t185434 = t185430*t185433;
            double t185435 = erf(t185434);
            double t185436 = t185435*(3.991211251234741E15/2.251799813685248E15);
            double t185437 = t185436-omega*t185432*t185424;
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t185424*(omega*t185432*t185429*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t185424*((t185423*(1.0/3.0))/rho_b[index]+1.0/pow(t185420,5.0/3.0)*t185426* \
               t185427*(2.778046668940015E15/1.40737488355328E14)-t185421*t185423*t185424*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t185430*t185423*t185428*(1.108777112152858E31/1.584563250285287E29)) \
               *(1.396905119826821E15/5.62949953421312E14)-omega*t185437*t185429*(3.880667614960153E30/7.922816251426434E28) \
               )*(1.0/2.0)+pow(rho_b[index],1.0/3.0)*(omega*t185424*t185437*(1.396905119826821E15/5.62949953421312E14) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t185541 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185542 = 1.0/(omega*omega);
            double t185543 = pow(t185541,2.0/3.0);
            double t185546 = t185542*t185543;
            double t185544 = exp(-t185546);
            double t185545 = 1.0/pow(t185541,1.0/3.0);
            double t185547 = omega*omega;
            double t185548 = t185544-1.0;
            double t185549 = 1.0/pow(t185541,2.0/3.0);
            double t185550 = 1.0/pow(t185541,4.0/3.0);
            double t185551 = 1.0/omega;
            double t185552 = t185547*t185548*t185549*(1.0/2.0);
            double t185553 = t185552-t185544+3.0/2.0;
            double t185554 = pow(t185541,1.0/3.0);
            double t185555 = t185551*t185554;
            double t185556 = erf(t185555);
            double t185557 = t185556*(3.991211251234741E15/2.251799813685248E15);
            double t185558 = t185557-omega*t185553*t185545;
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t185545*(omega*t185550*t185553*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t185545*((t185544*(1.0/3.0))/rho_b[index]+1.0/pow(t185541,5.0/3.0)*t185547* \
               t185548*(2.778046668940015E15/1.40737488355328E14)-t185542*t185544*t185545*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t185551*t185544*t185549*(1.108777112152858E31/1.584563250285287E29)) \
               *(1.396905119826821E15/5.62949953421312E14)-omega*t185550*t185558*(3.880667614960153E30/7.922816251426434E28) \
               )*(1.0/2.0)+pow(rho_b[index],1.0/3.0)*(omega*t185545*t185558*(1.396905119826821E15/5.62949953421312E14) \
               -4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t185444 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185445 = 1.0/(omega*omega);
            double t185446 = pow(t185444,2.0/3.0);
            double t185449 = t185445*t185446;
            double t185447 = exp(-t185449);
            double t185448 = 1.0/pow(t185444,1.0/3.0);
            double t185450 = omega*omega;
            double t185451 = t185447-1.0;
            double t185452 = 1.0/pow(t185444,2.0/3.0);
            double t185453 = 1.0/pow(t185444,4.0/3.0);
            double t185454 = 1.0/omega;
            double t185455 = t185450*t185451*t185452*(1.0/2.0);
            double t185456 = t185455-t185447+3.0/2.0;
            double t185457 = pow(t185444,1.0/3.0);
            double t185458 = t185454*t185457;
            double t185459 = erf(t185458);
            double t185460 = t185459*(3.991211251234741E15/2.251799813685248E15);
            double t185474 = omega*t185456*t185448;
            double t185461 = t185460-t185474;
            double t185462 = 1.0/rho_a[index];
            double t185463 = t185462*t185447*(1.0/3.0);
            double t185464 = 1.0/pow(t185444,5.0/3.0);
            double t185465 = t185450*t185451*t185464*(2.778046668940015E15/1.40737488355328E14);
            double t185469 = t185445*t185447*t185448*(2.778046668940015E15/7.0368744177664E13);
            double t185466 = t185463+t185465-t185469;
            double t185467 = 1.0/sqrt(3.141592653589793);
            double t185468 = omega*t185453*t185456*(2.778046668940015E15/1.40737488355328E14);
            double t185470 = omega*t185448*t185466;
            double t185471 = t185452*t185454*t185447*t185467*(1.108777112152858E31/1.584563250285287E29);
            double t185472 = t185470+t185471+t185468;
            double t185473 = 1.0/pow(t185444,7.0/3.0);
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(omega*t185461*t185453*(3.880667614960153E30/7.922816251426434E28) \
               -omega*t185472*t185448*(1.396905119826821E15/5.62949953421312E14))*(-4.0/3.0)+1.0/pow(rho_a[index],2.0/ \
               3.0)*(omega*t185461*t185448*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               *(2.0/9.0)-pow(rho_a[index],4.0/3.0)*(omega*t185461*t185473*(-1.078067574100344E46/2.787593149816328E42) \
               +omega*t185453*t185472*(3.880667614960153E30/3.961408125713217E28)+omega*t185448*(omega*t185453*t185466* \
               (2.778046668940015E15/7.0368744177664E13)+omega*t185473*t185456*(7.717543294808713E30/4.951760157141521E27) \
               +omega*t185448*(1.0/(rho_a[index]*rho_a[index])*t185447*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t185452* \
               t185447*(7.717543294808713E30/4.951760157141521E27)+t185450*t185451*1.0/pow(t185444,8.0/3.0)*(3.858771647404357E31/ \
               1.980704062856608E28)-t185453*t185445*t185447*(7.717543294808713E30/9.903520314283042E27)+t185462* \
               t185445*t185447*t185448*(2.778046668940015E15/2.11106232532992E14))+t185454*t185464*t185447*t185467* \
               (3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t185462*t185447*t185467*(1.108777112152858E31/ \
               2.37684487542793E29))*(1.396905119826821E15/5.62949953421312E14))*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t185655 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185656 = 1.0/(omega*omega);
            double t185657 = pow(t185655,2.0/3.0);
            double t185660 = t185656*t185657;
            double t185658 = exp(-t185660);
            double t185659 = 1.0/pow(t185655,1.0/3.0);
            double t185661 = omega*omega;
            double t185662 = t185658-1.0;
            double t185663 = 1.0/pow(t185655,2.0/3.0);
            double t185664 = 1.0/pow(t185655,4.0/3.0);
            double t185665 = 1.0/omega;
            double t185666 = t185661*t185662*t185663*(1.0/2.0);
            double t185667 = t185666-t185658+3.0/2.0;
            double t185668 = pow(t185655,1.0/3.0);
            double t185669 = t185665*t185668;
            double t185670 = erf(t185669);
            double t185671 = t185670*(3.991211251234741E15/2.251799813685248E15);
            double t185685 = omega*t185667*t185659;
            double t185672 = t185671-t185685;
            double t185673 = 1.0/rho_a[index];
            double t185674 = t185673*t185658*(1.0/3.0);
            double t185675 = 1.0/pow(t185655,5.0/3.0);
            double t185676 = t185661*t185662*t185675*(2.778046668940015E15/1.40737488355328E14);
            double t185680 = t185656*t185658*t185659*(2.778046668940015E15/7.0368744177664E13);
            double t185677 = -t185680+t185674+t185676;
            double t185678 = 1.0/sqrt(3.141592653589793);
            double t185679 = omega*t185664*t185667*(2.778046668940015E15/1.40737488355328E14);
            double t185681 = omega*t185659*t185677;
            double t185682 = t185663*t185665*t185658*t185678*(1.108777112152858E31/1.584563250285287E29);
            double t185683 = t185681+t185682+t185679;
            double t185684 = 1.0/pow(t185655,7.0/3.0);
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(omega*t185672*t185664*(3.880667614960153E30/7.922816251426434E28) \
               -omega*t185683*t185659*(1.396905119826821E15/5.62949953421312E14))*(-4.0/3.0)+1.0/pow(rho_a[index],2.0/ \
               3.0)*(omega*t185672*t185659*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               *(2.0/9.0)-pow(rho_a[index],4.0/3.0)*(omega*t185672*t185684*(-1.078067574100344E46/2.787593149816328E42) \
               +omega*t185664*t185683*(3.880667614960153E30/3.961408125713217E28)+omega*t185659*(omega*t185664*t185677* \
               (2.778046668940015E15/7.0368744177664E13)+omega*t185684*t185667*(7.717543294808713E30/4.951760157141521E27) \
               +omega*t185659*(1.0/(rho_a[index]*rho_a[index])*t185658*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t185663* \
               t185658*(7.717543294808713E30/4.951760157141521E27)+t185661*t185662*1.0/pow(t185655,8.0/3.0)*(3.858771647404357E31/ \
               1.980704062856608E28)-t185664*t185656*t185658*(7.717543294808713E30/9.903520314283042E27)+t185673* \
               t185656*t185658*t185659*(2.778046668940015E15/2.11106232532992E14))+t185665*t185675*t185658*t185678* \
               (3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t185673*t185658*t185678*(1.108777112152858E31/ \
               2.37684487542793E29))*(1.396905119826821E15/5.62949953421312E14))*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t185477 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185478 = 1.0/(omega*omega);
            double t185479 = pow(t185477,2.0/3.0);
            double t185482 = t185478*t185479;
            double t185480 = exp(-t185482);
            double t185481 = 1.0/pow(t185477,1.0/3.0);
            double t185483 = omega*omega;
            double t185484 = t185480-1.0;
            double t185485 = 1.0/pow(t185477,2.0/3.0);
            double t185486 = 1.0/pow(t185477,4.0/3.0);
            double t185487 = 1.0/omega;
            double t185488 = t185483*t185484*t185485*(1.0/2.0);
            double t185489 = -t185480+t185488+3.0/2.0;
            double t185490 = pow(t185477,1.0/3.0);
            double t185491 = t185490*t185487;
            double t185492 = erf(t185491);
            double t185493 = t185492*(3.991211251234741E15/2.251799813685248E15);
            double t185507 = omega*t185481*t185489;
            double t185494 = -t185507+t185493;
            double t185495 = 1.0/rho_b[index];
            double t185496 = t185480*t185495*(1.0/3.0);
            double t185497 = 1.0/pow(t185477,5.0/3.0);
            double t185498 = t185483*t185484*t185497*(2.778046668940015E15/1.40737488355328E14);
            double t185502 = t185480*t185481*t185478*(2.778046668940015E15/7.0368744177664E13);
            double t185499 = -t185502+t185496+t185498;
            double t185500 = 1.0/sqrt(3.141592653589793);
            double t185501 = omega*t185486*t185489*(2.778046668940015E15/1.40737488355328E14);
            double t185503 = omega*t185481*t185499;
            double t185504 = t185500*t185480*t185485*t185487*(1.108777112152858E31/1.584563250285287E29);
            double t185505 = t185501+t185503+t185504;
            double t185506 = 1.0/pow(t185477,7.0/3.0);
            v_rho_b_rho_b_[index] = pow(rho_b[index],1.0/3.0)*(omega*t185505*t185481*(1.396905119826821E15/5.62949953421312E14) \
               -omega*t185494*t185486*(3.880667614960153E30/7.922816251426434E28))*(4.0/3.0)+1.0/pow(rho_b[index],2.0/ \
               3.0)*(omega*t185481*t185494*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               *(2.0/9.0)-pow(rho_b[index],4.0/3.0)*(omega*t185505*t185486*(3.880667614960153E30/3.961408125713217E28) \
               -omega*t185506*t185494*(1.078067574100344E46/2.787593149816328E42)+omega*t185481*(omega*t185506*t185489* \
               (7.717543294808713E30/4.951760157141521E27)+omega*t185486*t185499*(2.778046668940015E15/7.0368744177664E13) \
               +omega*t185481*(1.0/(rho_b[index]*rho_b[index])*t185480*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t185480* \
               t185485*(7.717543294808713E30/4.951760157141521E27)+t185483*t185484*1.0/pow(t185477,8.0/3.0)*(3.858771647404357E31/ \
               1.980704062856608E28)-t185480*t185486*t185478*(7.717543294808713E30/9.903520314283042E27)+t185480* \
               t185481*t185495*t185478*(2.778046668940015E15/2.11106232532992E14))+t185500*t185480*t185487*t185497* \
               (3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t185500*t185480*t185495*(1.108777112152858E31/ \
               2.37684487542793E29))*(1.396905119826821E15/5.62949953421312E14))*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t185567 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t185568 = 1.0/(omega*omega);
            double t185569 = pow(t185567,2.0/3.0);
            double t185572 = t185568*t185569;
            double t185570 = exp(-t185572);
            double t185571 = 1.0/pow(t185567,1.0/3.0);
            double t185573 = omega*omega;
            double t185574 = t185570-1.0;
            double t185575 = 1.0/pow(t185567,2.0/3.0);
            double t185576 = 1.0/pow(t185567,4.0/3.0);
            double t185577 = 1.0/omega;
            double t185578 = t185573*t185574*t185575*(1.0/2.0);
            double t185579 = -t185570+t185578+3.0/2.0;
            double t185580 = pow(t185567,1.0/3.0);
            double t185581 = t185580*t185577;
            double t185582 = erf(t185581);
            double t185583 = t185582*(3.991211251234741E15/2.251799813685248E15);
            double t185597 = omega*t185571*t185579;
            double t185584 = t185583-t185597;
            double t185585 = 1.0/rho_b[index];
            double t185586 = t185570*t185585*(1.0/3.0);
            double t185587 = 1.0/pow(t185567,5.0/3.0);
            double t185588 = t185573*t185574*t185587*(2.778046668940015E15/1.40737488355328E14);
            double t185592 = t185570*t185571*t185568*(2.778046668940015E15/7.0368744177664E13);
            double t185589 = -t185592+t185586+t185588;
            double t185590 = 1.0/sqrt(3.141592653589793);
            double t185591 = omega*t185576*t185579*(2.778046668940015E15/1.40737488355328E14);
            double t185593 = omega*t185571*t185589;
            double t185594 = t185570*t185590*t185575*t185577*(1.108777112152858E31/1.584563250285287E29);
            double t185595 = t185591+t185593+t185594;
            double t185596 = 1.0/pow(t185567,7.0/3.0);
            v_rho_b_rho_b_[index] = pow(rho_b[index],1.0/3.0)*(omega*t185571*t185595*(1.396905119826821E15/5.62949953421312E14) \
               -omega*t185584*t185576*(3.880667614960153E30/7.922816251426434E28))*(4.0/3.0)+1.0/pow(rho_b[index],2.0/ \
               3.0)*(omega*t185571*t185584*(1.396905119826821E15/5.62949953421312E14)-4.190715359480463E15/2.251799813685248E15) \
               *(2.0/9.0)-pow(rho_b[index],4.0/3.0)*(omega*t185584*t185596*(-1.078067574100344E46/2.787593149816328E42) \
               +omega*t185576*t185595*(3.880667614960153E30/3.961408125713217E28)+omega*t185571*(omega*t185576*t185589* \
               (2.778046668940015E15/7.0368744177664E13)+omega*t185596*t185579*(7.717543294808713E30/4.951760157141521E27) \
               +omega*t185571*(1.0/(rho_b[index]*rho_b[index])*t185570*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t185570* \
               t185575*(7.717543294808713E30/4.951760157141521E27)+t185573*t185574*1.0/pow(t185567,8.0/3.0)*(3.858771647404357E31/ \
               1.980704062856608E28)-t185570*t185576*t185568*(7.717543294808713E30/9.903520314283042E27)+t185570* \
               t185571*t185585*t185568*(2.778046668940015E15/2.11106232532992E14))+t185570*t185590*t185577*t185587* \
               (3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t185570*t185590*t185585*(1.108777112152858E31/ \
               2.37684487542793E29))*(1.396905119826821E15/5.62949953421312E14))*(1.0/2.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

