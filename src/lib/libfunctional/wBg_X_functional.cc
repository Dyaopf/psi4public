/**********************************************************
* wBg_X_functional.cc: definitions for wBg_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wBg_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wBg_X_Functional::wBg_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wBg_X";
    description_ = "SR Becke Exchange (Fake II)";
    citation_ = "A.D. Becke, Phys. Rev. A, 38(6):3098-3100, 1988";

    double omega = 2.9999999999999999E-01;
    params_.push_back(make_pair("omega",omega));
    double d = 4.1999999999999997E-03;
    params_.push_back(make_pair("d",d));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wBg_X_Functional::~wBg_X_Functional()
{
}
void wBg_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;
    double d = params_[1].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t168772 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168773 = 1.0/(omega*omega);
            double t168774 = pow(rho_a[index],2.0/3.0);
            double t168775 = exp(t168773*t168774*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t168772*(erf((pow(rho_a[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t168772*(-t168775+ \
               (omega*omega)*1.0/pow(rho_a[index],2.0/3.0)*(t168775-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t168777 = pow(rho_a[index],1.0/3.0);
            double t168778 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168779 = 1.0/(omega*omega);
            double t168780 = pow(rho_a[index],2.0/3.0);
            double t168782 = t168780*t168779*(5.734716210713804E32/3.774660826274405E31);
            double t168781 = exp(-t168782);
            double t168783 = omega*omega;
            double t168784 = t168781-1.0;
            double t168785 = 1.0/pow(rho_a[index],2.0/3.0);
            double t168786 = t168783*t168784*t168785*(3.774660826274405E31/1.146943242142761E33);
            double t168787 = -t168781+t168786+3.0/2.0;
            double t168788 = 1.0/omega;
            double t168789 = 1.0/pow(rho_a[index],4.0/3.0);
            double t168790 = t168777*t168788*(2.394726750740845E16/6.143826841858749E15);
            double t168791 = erf(t168790);
            double t168792 = t168791*(3.991211251234741E15/2.251799813685248E15);
            double t168793 = t168792-omega*t168778*t168787*(6.143826841858749E15/2.394726750740845E16);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t168778*(omega*t168778*((t168781*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t168783*t168784*(1.258220275424802E31/5.734716210713804E32)-t168781* \
               t168778*t168779*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168787*t168789*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t168781* \
               t168785*t168788*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t168793*t168789*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t168777*(omega*t168793* \
               t168778*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t168797 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168798 = 1.0/pow(rho_a[index],2.0/3.0);
            double t168799 = 1.0/(omega*omega);
            double t168800 = pow(rho_a[index],2.0/3.0);
            double t168802 = t168800*t168799*(5.734716210713804E32/3.774660826274405E31);
            double t168801 = exp(-t168802);
            double t168803 = omega*omega;
            double t168804 = t168801-1.0;
            double t168805 = t168803*t168804*t168798*(3.774660826274405E31/1.146943242142761E33);
            double t168806 = -t168801+t168805+3.0/2.0;
            double t168807 = 1.0/rho_a[index];
            double t168808 = 1.0/sqrt(3.141592653589793);
            double t168809 = 1.0/omega;
            double t168810 = 1.0/pow(rho_a[index],5.0/3.0);
            double t168811 = 1.0/pow(rho_a[index],4.0/3.0);
            double t168812 = t168801*t168807*(1.0/3.0);
            double t168813 = t168810*t168803*t168804*(1.258220275424802E31/5.734716210713804E32);
            double t168821 = t168801*t168797*t168799*(1.146943242142761E33/1.132398247882321E32);
            double t168814 = t168812-t168821+t168813;
            double t168815 = 1.0/pow(rho_a[index],7.0/3.0);
            double t168816 = pow(rho_a[index],1.0/3.0);
            double t168817 = t168816*t168809*(2.394726750740845E16/6.143826841858749E15);
            double t168818 = erf(t168817);
            double t168819 = t168818*(3.991211251234741E15/2.251799813685248E15);
            double t168826 = omega*t168806*t168797*(6.143826841858749E15/2.394726750740845E16);
            double t168820 = -t168826+t168819;
            double t168822 = omega*t168814*t168797*(6.143826841858749E15/2.394726750740845E16);
            double t168823 = omega*t168811*t168806*(2.047942280619583E15/2.394726750740845E16);
            double t168824 = t168801*t168808*t168809*t168798*(1.493415679873386E30/3.242500344799677E29);
            double t168825 = t168822+t168823+t168824;
            v_rho_a_rho_a_[index] = t168816*(omega*t168811*t168820*(2.860781056907312E30/1.348111312786328E31) \
               -omega*t168825*t168797*(8.582343170721935E30/1.348111312786328E31))*(-4.0/3.0)-pow(rho_a[index],4.0/ \
               3.0)*(omega*t168797*(omega*t168797*(1.0/(rho_a[index]*rho_a[index])*t168801*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t168801*t168798*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/ \
               3.0)*t168803*t168804*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168811*t168814*(2.047942280619583E15/1.197363375370422E16)+omega*t168806*t168815*(2.047942280619583E15/ \
               1.796045063055634E16)+t168801*t168810*t168808*t168809*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t168801*t168807*t168808*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t168820*t168815*(2.860781056907312E30/1.011083484589746E31)+omega*t168811* \
               t168825*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t168798*(omega*t168820*t168797*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wBg_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;
    double d = params_[1].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t168423 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168424 = 1.0/(omega*omega);
            double t168425 = pow(rho_a[index],2.0/3.0);
            double t168426 = exp(t168424*t168425*(-5.734716210713804E32/3.774660826274405E31));
            double t168427 = 1.0/omega;
            double t168428 = 1.0/pow(rho_b[index],1.0/3.0);
            double t168429 = omega*omega;
            double t168430 = pow(rho_b[index],2.0/3.0);
            double t168431 = exp(t168430*t168424*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t168423*(erf(pow(rho_a[index],1.0/3.0)*t168427* \
               (2.394726750740845E16/6.143826841858749E15))*(3.991211251234741E15/2.251799813685248E15)-omega*t168423* \
               (-t168426+1.0/pow(rho_a[index],2.0/3.0)*t168429*(t168426-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(1.0/2.0)+pow(rho_b[index],4.0/3.0)*(omega*t168428*(erf(pow(rho_b[index],1.0/ \
               3.0)*t168427*(2.394726750740845E16/6.143826841858749E15))*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t168428*(-t168431+1.0/pow(rho_b[index],2.0/3.0)*t168429*(t168431-1.0)*(3.774660826274405E31/ \
               1.146943242142761E33)+3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t168649 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168650 = 1.0/(omega*omega);
            double t168651 = pow(rho_a[index],2.0/3.0);
            double t168652 = exp(t168650*t168651*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_a[index],4.0/3.0)*(omega*t168649*(erf((pow(rho_a[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t168649*(-t168652+ \
               (omega*omega)*1.0/pow(rho_a[index],2.0/3.0)*(t168652-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t168562 = 1.0/pow(rho_b[index],1.0/3.0);
            double t168563 = 1.0/(omega*omega);
            double t168564 = pow(rho_b[index],2.0/3.0);
            double t168565 = exp(t168563*t168564*(-5.734716210713804E32/3.774660826274405E31));
            functional_[index] = pow(rho_b[index],4.0/3.0)*(omega*t168562*(erf((pow(rho_b[index],1.0/3.0)*(2.394726750740845E16/ \
               6.143826841858749E15))/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t168562*(-t168565+ \
               (omega*omega)*1.0/pow(rho_b[index],2.0/3.0)*(t168565-1.0)*(3.774660826274405E31/1.146943242142761E33) \
               +3.0/2.0)*(6.143826841858749E15/2.394726750740845E16))*(8.582343170721935E30/1.348111312786328E31) \
               -4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t168433 = pow(rho_a[index],1.0/3.0);
            double t168434 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168435 = 1.0/(omega*omega);
            double t168436 = pow(rho_a[index],2.0/3.0);
            double t168438 = t168435*t168436*(5.734716210713804E32/3.774660826274405E31);
            double t168437 = exp(-t168438);
            double t168439 = omega*omega;
            double t168440 = t168437-1.0;
            double t168441 = 1.0/pow(rho_a[index],2.0/3.0);
            double t168442 = t168440*t168441*t168439*(3.774660826274405E31/1.146943242142761E33);
            double t168443 = t168442-t168437+3.0/2.0;
            double t168444 = 1.0/omega;
            double t168445 = 1.0/pow(rho_a[index],4.0/3.0);
            double t168446 = t168433*t168444*(2.394726750740845E16/6.143826841858749E15);
            double t168447 = erf(t168446);
            double t168448 = t168447*(3.991211251234741E15/2.251799813685248E15);
            double t168449 = t168448-omega*t168434*t168443*(6.143826841858749E15/2.394726750740845E16);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t168434*(omega*t168434*((t168437*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t168440*t168439*(1.258220275424802E31/5.734716210713804E32)-t168434* \
               t168435*t168437*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168443*t168445*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t168441* \
               t168444*t168437*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t168445*t168449*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t168433*(omega*t168434* \
               t168449*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else if (rho_a[index] > cutoff_) {
            double t168654 = pow(rho_a[index],1.0/3.0);
            double t168655 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168656 = 1.0/(omega*omega);
            double t168657 = pow(rho_a[index],2.0/3.0);
            double t168659 = t168656*t168657*(5.734716210713804E32/3.774660826274405E31);
            double t168658 = exp(-t168659);
            double t168660 = omega*omega;
            double t168661 = t168658-1.0;
            double t168662 = 1.0/pow(rho_a[index],2.0/3.0);
            double t168663 = t168660*t168661*t168662*(3.774660826274405E31/1.146943242142761E33);
            double t168664 = t168663-t168658+3.0/2.0;
            double t168665 = 1.0/omega;
            double t168666 = 1.0/pow(rho_a[index],4.0/3.0);
            double t168667 = t168654*t168665*(2.394726750740845E16/6.143826841858749E15);
            double t168668 = erf(t168667);
            double t168669 = t168668*(3.991211251234741E15/2.251799813685248E15);
            double t168670 = t168669-omega*t168655*t168664*(6.143826841858749E15/2.394726750740845E16);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(omega*t168655*(omega*t168655*((t168658*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(rho_a[index],5.0/3.0)*t168660*t168661*(1.258220275424802E31/5.734716210713804E32)-t168655* \
               t168656*t168658*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168664*t168666*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t168662* \
               t168665*t168658*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t168670*t168666*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t168654*(omega*t168670* \
               t168655*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t168451 = pow(rho_b[index],1.0/3.0);
            double t168452 = 1.0/pow(rho_b[index],1.0/3.0);
            double t168453 = 1.0/(omega*omega);
            double t168454 = pow(rho_b[index],2.0/3.0);
            double t168456 = t168453*t168454*(5.734716210713804E32/3.774660826274405E31);
            double t168455 = exp(-t168456);
            double t168457 = omega*omega;
            double t168458 = t168455-1.0;
            double t168459 = 1.0/pow(rho_b[index],2.0/3.0);
            double t168460 = t168457*t168458*t168459*(3.774660826274405E31/1.146943242142761E33);
            double t168461 = t168460-t168455+3.0/2.0;
            double t168462 = 1.0/omega;
            double t168463 = 1.0/pow(rho_b[index],4.0/3.0);
            double t168464 = t168451*t168462*(2.394726750740845E16/6.143826841858749E15);
            double t168465 = erf(t168464);
            double t168466 = t168465*(3.991211251234741E15/2.251799813685248E15);
            double t168467 = t168466-omega*t168452*t168461*(6.143826841858749E15/2.394726750740845E16);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t168452*(omega*t168452*((t168455*(1.0/3.0))/rho_b[index]+ \
               1.0/pow(rho_b[index],5.0/3.0)*t168457*t168458*(1.258220275424802E31/5.734716210713804E32)-t168452* \
               t168453*t168455*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168461*t168463*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t168462* \
               t168455*t168459*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t168463*t168467*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t168451*(omega*t168452* \
               t168467*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t168568 = pow(rho_b[index],1.0/3.0);
            double t168569 = 1.0/pow(rho_b[index],1.0/3.0);
            double t168570 = 1.0/(omega*omega);
            double t168571 = pow(rho_b[index],2.0/3.0);
            double t168573 = t168570*t168571*(5.734716210713804E32/3.774660826274405E31);
            double t168572 = exp(-t168573);
            double t168574 = omega*omega;
            double t168575 = t168572-1.0;
            double t168576 = 1.0/pow(rho_b[index],2.0/3.0);
            double t168577 = t168574*t168575*t168576*(3.774660826274405E31/1.146943242142761E33);
            double t168578 = -t168572+t168577+3.0/2.0;
            double t168579 = 1.0/omega;
            double t168580 = 1.0/pow(rho_b[index],4.0/3.0);
            double t168581 = t168568*t168579*(2.394726750740845E16/6.143826841858749E15);
            double t168582 = erf(t168581);
            double t168583 = t168582*(3.991211251234741E15/2.251799813685248E15);
            double t168584 = t168583-omega*t168569*t168578*(6.143826841858749E15/2.394726750740845E16);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(omega*t168569*(omega*t168569*((t168572*(1.0/3.0))/rho_b[index]+ \
               1.0/pow(rho_b[index],5.0/3.0)*t168574*t168575*(1.258220275424802E31/5.734716210713804E32)-t168570* \
               t168572*t168569*(1.146943242142761E33/1.132398247882321E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168580*t168578*(2.047942280619583E15/2.394726750740845E16)+1.0/sqrt(3.141592653589793)*t168572* \
               t168576*t168579*(1.493415679873386E30/3.242500344799677E29))*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t168580*t168584*(2.860781056907312E30/1.348111312786328E31))*(1.0/2.0)+t168568*(omega*t168584* \
               t168569*(8.582343170721935E30/1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/ \
               3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t168474 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168475 = 1.0/pow(rho_a[index],2.0/3.0);
            double t168476 = 1.0/(omega*omega);
            double t168477 = pow(rho_a[index],2.0/3.0);
            double t168479 = t168476*t168477*(5.734716210713804E32/3.774660826274405E31);
            double t168478 = exp(-t168479);
            double t168480 = omega*omega;
            double t168481 = t168478-1.0;
            double t168482 = t168480*t168481*t168475*(3.774660826274405E31/1.146943242142761E33);
            double t168483 = t168482-t168478+3.0/2.0;
            double t168484 = 1.0/rho_a[index];
            double t168485 = 1.0/sqrt(3.141592653589793);
            double t168486 = 1.0/omega;
            double t168487 = 1.0/pow(rho_a[index],5.0/3.0);
            double t168488 = 1.0/pow(rho_a[index],4.0/3.0);
            double t168489 = t168484*t168478*(1.0/3.0);
            double t168490 = t168480*t168481*t168487*(1.258220275424802E31/5.734716210713804E32);
            double t168498 = t168474*t168476*t168478*(1.146943242142761E33/1.132398247882321E32);
            double t168491 = t168490+t168489-t168498;
            double t168492 = 1.0/pow(rho_a[index],7.0/3.0);
            double t168493 = pow(rho_a[index],1.0/3.0);
            double t168494 = t168493*t168486*(2.394726750740845E16/6.143826841858749E15);
            double t168495 = erf(t168494);
            double t168496 = t168495*(3.991211251234741E15/2.251799813685248E15);
            double t168503 = omega*t168474*t168483*(6.143826841858749E15/2.394726750740845E16);
            double t168497 = -t168503+t168496;
            double t168499 = omega*t168491*t168474*(6.143826841858749E15/2.394726750740845E16);
            double t168500 = omega*t168483*t168488*(2.047942280619583E15/2.394726750740845E16);
            double t168501 = t168475*t168485*t168486*t168478*(1.493415679873386E30/3.242500344799677E29);
            double t168502 = t168500+t168501+t168499;
            v_rho_a_rho_a_[index] = t168493*(omega*t168502*t168474*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t168488*t168497*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_a[index],4.0/ \
               3.0)*(omega*t168474*(omega*t168474*(1.0/(rho_a[index]*rho_a[index])*t168478*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t168475*t168478*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/ \
               3.0)*t168480*t168481*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168483*t168492*(2.047942280619583E15/1.796045063055634E16)+omega*t168491*t168488*(2.047942280619583E15/ \
               1.197363375370422E16)+t168485*t168486*t168478*t168487*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t168484*t168485*t168478*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)+omega*t168502*t168488*(2.860781056907312E30/6.740556563931642E30)-omega*t168492* \
               t168497*(2.860781056907312E30/1.011083484589746E31))*(1.0/2.0)+t168475*(omega*t168474*t168497*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t168678 = 1.0/pow(rho_a[index],1.0/3.0);
            double t168679 = 1.0/pow(rho_a[index],2.0/3.0);
            double t168680 = 1.0/(omega*omega);
            double t168681 = pow(rho_a[index],2.0/3.0);
            double t168683 = t168680*t168681*(5.734716210713804E32/3.774660826274405E31);
            double t168682 = exp(-t168683);
            double t168684 = omega*omega;
            double t168685 = t168682-1.0;
            double t168686 = t168684*t168685*t168679*(3.774660826274405E31/1.146943242142761E33);
            double t168687 = -t168682+t168686+3.0/2.0;
            double t168688 = 1.0/rho_a[index];
            double t168689 = 1.0/sqrt(3.141592653589793);
            double t168690 = 1.0/omega;
            double t168691 = 1.0/pow(rho_a[index],5.0/3.0);
            double t168692 = 1.0/pow(rho_a[index],4.0/3.0);
            double t168693 = t168682*t168688*(1.0/3.0);
            double t168694 = t168691*t168684*t168685*(1.258220275424802E31/5.734716210713804E32);
            double t168702 = t168680*t168682*t168678*(1.146943242142761E33/1.132398247882321E32);
            double t168695 = -t168702+t168693+t168694;
            double t168696 = 1.0/pow(rho_a[index],7.0/3.0);
            double t168697 = pow(rho_a[index],1.0/3.0);
            double t168698 = t168690*t168697*(2.394726750740845E16/6.143826841858749E15);
            double t168699 = erf(t168698);
            double t168700 = t168699*(3.991211251234741E15/2.251799813685248E15);
            double t168707 = omega*t168678*t168687*(6.143826841858749E15/2.394726750740845E16);
            double t168701 = t168700-t168707;
            double t168703 = omega*t168695*t168678*(6.143826841858749E15/2.394726750740845E16);
            double t168704 = omega*t168692*t168687*(2.047942280619583E15/2.394726750740845E16);
            double t168705 = t168690*t168682*t168679*t168689*(1.493415679873386E30/3.242500344799677E29);
            double t168706 = t168703+t168704+t168705;
            v_rho_a_rho_a_[index] = t168697*(omega*t168701*t168692*(2.860781056907312E30/1.348111312786328E31) \
               -omega*t168706*t168678*(8.582343170721935E30/1.348111312786328E31))*(-4.0/3.0)-pow(rho_a[index],4.0/ \
               3.0)*(omega*t168678*(omega*t168678*(1.0/(rho_a[index]*rho_a[index])*t168682*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t168682*t168679*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_a[index],8.0/ \
               3.0)*t168684*t168685*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168692*t168695*(2.047942280619583E15/1.197363375370422E16)+omega*t168687*t168696*(2.047942280619583E15/ \
               1.796045063055634E16)+t168690*t168682*t168691*t168689*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t168682*t168688*t168689*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t168701*t168696*(2.860781056907312E30/1.011083484589746E31)+omega*t168706* \
               t168692*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t168679*(omega*t168701*t168678*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t168506 = 1.0/pow(rho_b[index],1.0/3.0);
            double t168507 = 1.0/pow(rho_b[index],2.0/3.0);
            double t168508 = 1.0/(omega*omega);
            double t168509 = pow(rho_b[index],2.0/3.0);
            double t168511 = t168508*t168509*(5.734716210713804E32/3.774660826274405E31);
            double t168510 = exp(-t168511);
            double t168512 = omega*omega;
            double t168513 = t168510-1.0;
            double t168514 = t168512*t168513*t168507*(3.774660826274405E31/1.146943242142761E33);
            double t168515 = -t168510+t168514+3.0/2.0;
            double t168516 = 1.0/rho_b[index];
            double t168517 = 1.0/sqrt(3.141592653589793);
            double t168518 = 1.0/omega;
            double t168519 = 1.0/pow(rho_b[index],5.0/3.0);
            double t168520 = 1.0/pow(rho_b[index],4.0/3.0);
            double t168521 = t168510*t168516*(1.0/3.0);
            double t168522 = t168512*t168513*t168519*(1.258220275424802E31/5.734716210713804E32);
            double t168530 = t168510*t168506*t168508*(1.146943242142761E33/1.132398247882321E32);
            double t168523 = t168521-t168530+t168522;
            double t168524 = 1.0/pow(rho_b[index],7.0/3.0);
            double t168525 = pow(rho_b[index],1.0/3.0);
            double t168526 = t168525*t168518*(2.394726750740845E16/6.143826841858749E15);
            double t168527 = erf(t168526);
            double t168528 = t168527*(3.991211251234741E15/2.251799813685248E15);
            double t168535 = omega*t168506*t168515*(6.143826841858749E15/2.394726750740845E16);
            double t168529 = -t168535+t168528;
            double t168531 = omega*t168523*t168506*(6.143826841858749E15/2.394726750740845E16);
            double t168532 = omega*t168520*t168515*(2.047942280619583E15/2.394726750740845E16);
            double t168533 = t168510*t168507*t168517*t168518*(1.493415679873386E30/3.242500344799677E29);
            double t168534 = t168531+t168532+t168533;
            v_rho_b_rho_b_[index] = t168525*(omega*t168520*t168529*(2.860781056907312E30/1.348111312786328E31) \
               -omega*t168506*t168534*(8.582343170721935E30/1.348111312786328E31))*(-4.0/3.0)-pow(rho_b[index],4.0/ \
               3.0)*(omega*t168506*(omega*t168506*(1.0/(rho_b[index]*rho_b[index])*t168510*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t168510*t168507*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_b[index],8.0/ \
               3.0)*t168512*t168513*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168520*t168523*(2.047942280619583E15/1.197363375370422E16)+omega*t168515*t168524*(2.047942280619583E15/ \
               1.796045063055634E16)+t168510*t168517*t168518*t168519*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t168510*t168516*t168517*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)+omega*t168520*t168534*(2.860781056907312E30/6.740556563931642E30)-omega*t168524* \
               t168529*(2.860781056907312E30/1.011083484589746E31))*(1.0/2.0)+t168507*(omega*t168506*t168529*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t168593 = 1.0/pow(rho_b[index],1.0/3.0);
            double t168594 = 1.0/pow(rho_b[index],2.0/3.0);
            double t168595 = 1.0/(omega*omega);
            double t168596 = pow(rho_b[index],2.0/3.0);
            double t168598 = t168595*t168596*(5.734716210713804E32/3.774660826274405E31);
            double t168597 = exp(-t168598);
            double t168599 = omega*omega;
            double t168600 = t168597-1.0;
            double t168601 = t168600*t168594*t168599*(3.774660826274405E31/1.146943242142761E33);
            double t168602 = t168601-t168597+3.0/2.0;
            double t168603 = 1.0/rho_b[index];
            double t168604 = 1.0/sqrt(3.141592653589793);
            double t168605 = 1.0/omega;
            double t168606 = 1.0/pow(rho_b[index],5.0/3.0);
            double t168607 = 1.0/pow(rho_b[index],4.0/3.0);
            double t168608 = t168603*t168597*(1.0/3.0);
            double t168609 = t168600*t168606*t168599*(1.258220275424802E31/5.734716210713804E32);
            double t168617 = t168593*t168595*t168597*(1.146943242142761E33/1.132398247882321E32);
            double t168610 = t168608-t168617+t168609;
            double t168611 = 1.0/pow(rho_b[index],7.0/3.0);
            double t168612 = pow(rho_b[index],1.0/3.0);
            double t168613 = t168612*t168605*(2.394726750740845E16/6.143826841858749E15);
            double t168614 = erf(t168613);
            double t168615 = t168614*(3.991211251234741E15/2.251799813685248E15);
            double t168622 = omega*t168602*t168593*(6.143826841858749E15/2.394726750740845E16);
            double t168616 = -t168622+t168615;
            double t168618 = omega*t168610*t168593*(6.143826841858749E15/2.394726750740845E16);
            double t168619 = omega*t168602*t168607*(2.047942280619583E15/2.394726750740845E16);
            double t168620 = t168604*t168605*t168594*t168597*(1.493415679873386E30/3.242500344799677E29);
            double t168621 = t168620+t168618+t168619;
            v_rho_b_rho_b_[index] = t168612*(omega*t168621*t168593*(8.582343170721935E30/1.348111312786328E31) \
               -omega*t168607*t168616*(2.860781056907312E30/1.348111312786328E31))*(4.0/3.0)-pow(rho_b[index],4.0/ \
               3.0)*(omega*t168593*(omega*t168593*(1.0/(rho_b[index]*rho_b[index])*t168597*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t168594*t168597*(1.315478800696948E66/1.282325791806952E64)+1.0/pow(rho_b[index],8.0/ \
               3.0)*t168600*t168599*(2.097033792374669E31/5.734716210713804E32))*(6.143826841858749E15/2.394726750740845E16) \
               +omega*t168602*t168611*(2.047942280619583E15/1.796045063055634E16)+omega*t168610*t168607*(2.047942280619583E15/ \
               1.197363375370422E16)+t168604*t168605*t168606*t168597*(1.493415679873386E30/4.863750517199516E29)+ \
               1.0/(omega*omega*omega)*t168603*t168604*t168597*(2.090897243335959E59/4.482179820811741E57))*(8.582343170721935E30/ \
               1.348111312786328E31)-omega*t168611*t168616*(2.860781056907312E30/1.011083484589746E31)+omega*t168621* \
               t168607*(2.860781056907312E30/6.740556563931642E30))*(1.0/2.0)+t168594*(omega*t168616*t168593*(8.582343170721935E30/ \
               1.348111312786328E31)-4.190715359480463E15/2.251799813685248E15)*(2.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

