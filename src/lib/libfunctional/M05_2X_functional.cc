/**********************************************************
* M05_2X_functional.cc: definitions for M05_2X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 31-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "M05_2X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

M05_2X_Functional::M05_2X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "M05_2X";
    description_ = "M05-2X Meta-GGA Functional";
    citation_ = "Zhao, Y., Schultz, N. E., Truhlar, D. G., J. Chem. Theory Comput. 2, 364, 2006";
    
    double X = 5.6000000000000005E-01;
    params_.push_back(make_pair("X",X));
    double C_k = 9.1155997446911918E+00;
    params_.push_back(make_pair("C_k",C_k));
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double e = -2.3873241463784300E-01;
    params_.push_back(make_pair("e",e));
    double kp = 8.0400000000000005E-01;
    params_.push_back(make_pair("kp",kp));
    double mu_ = 2.1951497276451709E-01;
    params_.push_back(make_pair("mu_",mu_));
    double a_1 = -5.6833000000000000E-01;
    params_.push_back(make_pair("a_1",a_1));
    double a_2 = -1.3005700000000000E+00;
    params_.push_back(make_pair("a_2",a_2));
    double a_3 = 5.5007000000000001E+00;
    params_.push_back(make_pair("a_3",a_3));
    double a_4 = 9.0640199999999993E+00;
    params_.push_back(make_pair("a_4",a_4));
    double a_5 = -3.2210749999999997E+01;
    params_.push_back(make_pair("a_5",a_5));
    double a_6 = -2.3732980000000001E+01;
    params_.push_back(make_pair("a_6",a_6));
    double a_7 = 7.0229960000000005E+01;
    params_.push_back(make_pair("a_7",a_7));
    double a_8 = 2.9886140000000001E+01;
    params_.push_back(make_pair("a_8",a_8));
    double a_9 = -6.0257779999999997E+01;
    params_.push_back(make_pair("a_9",a_9));
    double a_10 = -1.3222049999999999E+01;
    params_.push_back(make_pair("a_10",a_10));
    double a_11 = 1.5236960000000000E+01;
    params_.push_back(make_pair("a_11",a_11));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 3.0999999999999999E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 5.9999999999999998E-02;
    params_.push_back(make_pair("gcaa",gcaa));
    double ccab0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 1.0929700000000000E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -3.7917100000000001E+00;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 2.8281000000000001E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = -1.0589090000000001E+01;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -3.0543000000000000E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = 7.6185400000000003E+00;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = 1.4766500000000000E+00;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = -1.1923650000000000E+01;
    params_.push_back(make_pair("ccaa4",ccaa4));

    is_gga_ = true;
    is_meta_ = true;

    //Required allocateion
    allocate();
}
M05_2X_Functional::~M05_2X_Functional()
{
}
void M05_2X_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double k = params_[2].second;
    double e = params_[3].second;
    double kp = params_[4].second;
    double mu_ = params_[5].second;
    double a_1 = params_[6].second;
    double a_2 = params_[7].second;
    double a_3 = params_[8].second;
    double a_4 = params_[9].second;
    double a_5 = params_[10].second;
    double a_6 = params_[11].second;
    double a_7 = params_[12].second;
    double a_8 = params_[13].second;
    double a_9 = params_[14].second;
    double a_10 = params_[15].second;
    double a_11 = params_[16].second;
    double two_13 = params_[17].second;
    double d2fz0 = params_[18].second;
    double c = params_[19].second;
    double Aa = params_[20].second;
    double a1a = params_[21].second;
    double b1a = params_[22].second;
    double b2a = params_[23].second;
    double b3a = params_[24].second;
    double b4a = params_[25].second;
    double c0p = params_[26].second;
    double a1p = params_[27].second;
    double b1p = params_[28].second;
    double b2p = params_[29].second;
    double b3p = params_[30].second;
    double b4p = params_[31].second;
    double c0f = params_[32].second;
    double a1f = params_[33].second;
    double b1f = params_[34].second;
    double b2f = params_[35].second;
    double b3f = params_[36].second;
    double b4f = params_[37].second;
    double gcab = params_[38].second;
    double gcaa = params_[39].second;
    double ccab0 = params_[40].second;
    double ccab1 = params_[41].second;
    double ccab2 = params_[42].second;
    double ccab3 = params_[43].second;
    double ccab4 = params_[44].second;
    double ccaa0 = params_[45].second;
    double ccaa1 = params_[46].second;
    double ccaa2 = params_[47].second;
    double ccaa3 = params_[48].second;
    double ccaa4 = params_[49].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t14763 = 1/pow(rho_a[index],1.0/3.0);
            double t14764 = c*t14763;
            double t14765 = sqrt(t14764);
            double t14766 = pow(t14764,3.0/2.0);
            double t14767 = c*c;
            double t14768 = 1/pow(rho_a[index],2.0/3.0);
            double t14769 = 1/c0p;
            double t14770 = b1p*t14765;
            double t14771 = b3p*t14766;
            double t14772 = b4p*t14767*t14768;
            double t14773 = b2p*c*t14763;
            double t14774 = t14770+t14771+t14772+t14773;
            double t14775 = 1/t14774;
            double t14776 = t14775*t14769*(1.0/2.0);
            double t14777 = t14776+1.0;
            double t14778 = log(t14777);
            double t14779 = a1p*c*t14763;
            double t14780 = t14779+1.0;
            double t14781 = rho_a[index]*2.0;
            double t14782 = 1/pow(t14781,1.0/3.0);
            double t14783 = c*t14782;
            double t14784 = gamma_aa[index]*gamma_aa[index];
            double t14785 = gcab*gcab;
            double t14786 = t14784*t14784;
            double t14787 = t14785*t14785;
            double t14788 = 1/pow(rho_a[index],3.2E1/3.0);
            double t14789 = 1/pow(rho_a[index],8.0/3.0);
            double t14790 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t14791 = 1/pow(rho_a[index],1.6E1/3.0);
            double t14792 = 1/pow(t14781,2.0/3.0);
            double t14793 = pow(rho_a[index],5.0/3.0);
            double t14794 = 1/tau_a[index];
            double t14795 = C_k*t14793*t14794;
            double t14796 = t14795-1.0;
            double t14797 = t14796*t14796;
            double t14798 = t14797*t14797;
            double t14799 = t14798*t14798;
            double t14800 = t14795+1.0;
            double t14801 = pow(2.0,1.0/3.0);
            double t14802 = t14801*2.0;
            double t14803 = t14802-2.0;
            double t14804 = two_13*2.0;
            double t14805 = t14804-2.0;
            double t14806 = 1/t14805;
            double t14807 = 1/c0f;
            double t14808 = b1f*t14765;
            double t14809 = b3f*t14766;
            double t14810 = b4f*t14767*t14768;
            double t14811 = b2f*c*t14763;
            double t14812 = t14810+t14811+t14808+t14809;
            double t14813 = 1/t14812;
            double t14814 = t14813*t14807*(1.0/2.0);
            double t14815 = t14814+1.0;
            double t14816 = log(t14815);
            double t14817 = a1f*c*t14763;
            double t14818 = t14817+1.0;
            double t14819 = c0f*t14816*t14818*2.0;
            double t14820 = c0p*t14780*t14778*2.0;
            double t14821 = gcaa*gcaa;
            double t14822 = t14821*t14821;
            functional_[index] = (rho_a[index]*(t14820+t14803*t14806*(t14819-c0p*t14780*t14778*2.0))*2.0-c0p* \
               rho_a[index]*log((t14769*(1.0/2.0))/(b1p*sqrt(t14783)+b3p*pow(t14783,3.0/2.0)+b2p*c*t14782+b4p*t14792* \
               t14767)+1.0)*(a1p*c*t14782+1.0)*4.0)*(ccab0+(ccab2*t14791*t14784*t14785)/(gamma_aa[index]*gcab*t14789* \
               2.0+t14791*t14784*t14785+1.0)+(ccab1*gamma_aa[index]*gcab*t14789)/(gamma_aa[index]*gcab*t14789+1.0) \
               +(ccab4*t14786*t14787*t14788)/(gamma_aa[index]*gcab*t14789*4.0+t14791*t14784*t14785*6.0+t14786*t14787* \
               t14788+gamma_aa[index]*gcab*t14790*t14784*t14785*4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t14790*t14784* \
               t14785)/(gamma_aa[index]*gcab*t14789*3.0+t14791*t14784*t14785*3.0+gamma_aa[index]*gcab*t14790*t14784* \
               t14785+1.0))-rho_a[index]*( ( (tau_a[index]-1.0/1.0E20 > 0.0) ? 1.0*(t14794*(tau_a[index]*2.0-(gamma_aa[index]* \
               (1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0) : 0.0 ) +1.0)*(t14820-t14803*t14806*(t14820-t14819))*(ccaa0+ \
               (ccaa2*t14821*t14791*t14784)/(gamma_aa[index]*gcaa*t14789*2.0+t14821*t14791*t14784+1.0)+(ccaa1*gamma_aa[index]* \
               gcaa*t14789)/(gamma_aa[index]*gcaa*t14789+1.0)+(ccaa4*t14822*t14786*t14788)/(gamma_aa[index]*gcaa* \
               t14789*4.0+t14821*t14791*t14784*6.0+t14822*t14786*t14788+gamma_aa[index]*gcaa*t14821*t14790*t14784* \
               4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t14821*t14790*t14784)/(gamma_aa[index]*gcaa*t14789*3.0+t14821* \
               t14791*t14784*3.0+gamma_aa[index]*gcaa*t14821*t14790*t14784+1.0))*2.0-rho_a[index]*(X-1.0)*(kp-kp/ \
               ((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*t14792*(1.0/4.0))/kp+1.0)+1.0)*((a_1*t14796) \
               /t14800+a_2*1/(t14800*t14800)*t14797+a_4*1/(t14800*t14800*t14800*t14800)*t14798+a_8*1/(t14800*t14800* \
               t14800*t14800*t14800*t14800*t14800*t14800)*t14799+a_10*1/pow(t14800,1.0E1)*t14797*t14799+a_3*1/(t14800* \
               t14800*t14800)*t14796*t14797+a_5*1/(t14800*t14800*t14800*t14800*t14800)*t14796*t14798+a_6*1/(t14800* \
               t14800*t14800*t14800*t14800*t14800)*t14797*t14798+a_9*1/(t14800*t14800*t14800*t14800*t14800*t14800* \
               t14800*t14800*t14800)*t14796*t14799+a_11*1/pow(t14800,1.1E1)*t14796*t14797*t14799+a_7*1/(t14800*t14800* \
               t14800*t14800*t14800*t14800*t14800)*t14796*t14797*t14798+1.0)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t14824 = gamma_aa[index]*gamma_aa[index];
            double t14825 = gcab*gcab;
            double t14826 = t14824*t14824;
            double t14827 = t14825*t14825;
            double t14828 = 1/pow(rho_a[index],3.2E1/3.0);
            double t14829 = 1/pow(rho_a[index],8.0/3.0);
            double t14830 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t14831 = 1/pow(rho_a[index],1.6E1/3.0);
            double t14832 = rho_a[index]*2.0;
            double t14833 = 1/pow(t14832,1.0/3.0);
            double t14834 = c*t14833;
            double t14835 = sqrt(t14834);
            double t14836 = b1p*t14835;
            double t14837 = pow(t14834,3.0/2.0);
            double t14838 = b3p*t14837;
            double t14839 = b2p*c*t14833;
            double t14840 = c*c;
            double t14841 = 1/pow(t14832,2.0/3.0);
            double t14842 = b4p*t14840*t14841;
            double t14843 = t14842+t14836+t14838+t14839;
            double t14844 = 1/pow(t14832,4.0/3.0);
            double t14845 = 1/c0p;
            double t14846 = 1/t14843;
            double t14847 = t14845*t14846*(1.0/2.0);
            double t14848 = t14847+1.0;
            double t14849 = 1/pow(rho_a[index],1.0/3.0);
            double t14850 = c*t14849;
            double t14851 = sqrt(t14850);
            double t14852 = b1f*t14851;
            double t14853 = pow(t14850,3.0/2.0);
            double t14854 = b3f*t14853;
            double t14855 = 1/pow(rho_a[index],2.0/3.0);
            double t14856 = b4f*t14840*t14855;
            double t14857 = b2f*c*t14849;
            double t14858 = t14852+t14854+t14856+t14857;
            double t14859 = 1/pow(rho_a[index],4.0/3.0);
            double t14860 = b1p*t14851;
            double t14861 = b3p*t14853;
            double t14862 = b4p*t14840*t14855;
            double t14863 = b2p*c*t14849;
            double t14864 = t14860+t14861+t14862+t14863;
            double t14865 = 1/pow(rho_a[index],5.0/3.0);
            double t14866 = 1/sqrt(t14850);
            double t14867 = 1/c0f;
            double t14868 = 1/t14858;
            double t14869 = t14867*t14868*(1.0/2.0);
            double t14870 = t14869+1.0;
            double t14871 = 1/t14864;
            double t14872 = t14871*t14845*(1.0/2.0);
            double t14873 = t14872+1.0;
            double t14874 = a1p*c*t14849;
            double t14875 = t14874+1.0;
            double t14876 = 1/t14873;
            double t14877 = 1/(t14864*t14864);
            double t14878 = b4p*t14840*t14865*(2.0/3.0);
            double t14879 = b2p*c*t14859*(1.0/3.0);
            double t14880 = b1p*c*t14866*t14859*(1.0/6.0);
            double t14881 = b3p*c*t14851*t14859*(1.0/2.0);
            double t14882 = t14880+t14881+t14878+t14879;
            double t14883 = t14882*t14875*t14876*t14877;
            double t14884 = log(t14873);
            double t14885 = log(t14848);
            double t14886 = a1p*c*t14833;
            double t14887 = t14886+1.0;
            double t14888 = pow(2.0,1.0/3.0);
            double t14889 = t14888*2.0;
            double t14890 = t14889-2.0;
            double t14891 = two_13*2.0;
            double t14892 = t14891-2.0;
            double t14893 = 1/t14892;
            double t14894 = log(t14870);
            double t14895 = a1f*c*t14849;
            double t14896 = t14895+1.0;
            double t14897 = c0f*t14894*t14896*2.0;
            double t14899 = c0p*t14875*t14884*2.0;
            double t14898 = t14897-t14899;
            double t14900 = gamma_aa[index]*gcab*t14829*4.0;
            double t14901 = gamma_aa[index]*gcab*t14830*t14824*t14825*4.0;
            double t14902 = t14831*t14824*t14825*6.0;
            double t14903 = t14826*t14827*t14828;
            double t14904 = t14900+t14901+t14902+t14903+1.0;
            double t14905 = 1/t14904;
            double t14906 = gamma_aa[index]*gcab*t14829;
            double t14907 = t14906+1.0;
            double t14908 = 1/t14907;
            double t14909 = gamma_aa[index]*gcab*t14829*3.0;
            double t14910 = gamma_aa[index]*gcab*t14830*t14824*t14825;
            double t14911 = t14831*t14824*t14825*3.0;
            double t14912 = t14910+t14911+t14909+1.0;
            double t14913 = 1/t14912;
            double t14914 = gamma_aa[index]*gcab*t14829*2.0;
            double t14915 = t14831*t14824*t14825;
            double t14916 = t14914+t14915+1.0;
            double t14917 = 1/t14916;
            double t14918 = 1/pow(rho_a[index],1.9E1/3.0);
            double t14919 = 1/pow(rho_a[index],1.1E1/3.0);
            double t14920 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t14921 = 1/pow(rho_a[index],3.5E1/3.0);
            double t14922 = pow(rho_a[index],5.0/3.0);
            double t14923 = 1/tau_a[index];
            double t14924 = C_k*t14922*t14923;
            double t14925 = t14924-1.0;
            double t14926 = t14925*t14925;
            double t14927 = t14926*t14926;
            double t14928 = t14927*t14927;
            double t14929 = t14924+1.0;
            double t14930 = 1/(k*k);
            double t14931 = 1/kp;
            double t14932 = 1/(rho_a[index]*rho_a[index]);
            double t14933 = gamma_aa[index]*mu_*t14930*t14841*t14931*t14932*(1.0/4.0);
            double t14934 = t14933+1.0;
            double t14935 = 1/t14934;
            double t14936 = kp-kp*t14935+1.0;
            double t14937 = 1/t14929;
            double t14938 = pow(rho_a[index],2.0/3.0);
            double t14939 = 1/(t14929*t14929);
            double t14940 = 1/pow(t14929,1.0E1);
            double t14941 = 1/pow(t14929,1.1E1);
            double t14942 = 1/(t14929*t14929*t14929);
            double t14943 = 1/(t14929*t14929*t14929*t14929);
            double t14944 = 1/(t14929*t14929*t14929*t14929*t14929);
            double t14945 = 1/(t14929*t14929*t14929*t14929*t14929*t14929);
            double t14946 = 1/(t14929*t14929*t14929*t14929*t14929*t14929*t14929);
            double t14947 = 1/(t14929*t14929*t14929*t14929*t14929*t14929*t14929*t14929);
            double t14948 = 1/(t14929*t14929*t14929*t14929*t14929*t14929*t14929*t14929*t14929);
            double t14949 = 1/pow(t14832,5.0/3.0);
            double t14950 = a_1*t14925*t14937;
            double t14951 = a_10*t14940*t14926*t14928;
            double t14952 = a_11*t14941*t14925*t14926*t14928;
            double t14953 = a_2*t14926*t14939;
            double t14954 = a_3*t14942*t14925*t14926;
            double t14955 = a_4*t14943*t14927;
            double t14956 = a_5*t14925*t14944*t14927;
            double t14957 = a_6*t14926*t14927*t14945;
            double t14958 = a_7*t14925*t14926*t14927*t14946;
            double t14959 = a_8*t14928*t14947;
            double t14960 = a_9*t14925*t14928*t14948;
            double t14961 = t14950+t14951+t14960+t14952+t14953+t14954+t14955+t14956+t14957+t14958+t14959+1.0;
            double t14962 = t14890*t14893*t14898;
            double t14963 = t14962+t14899;
            double t14964 = gcaa*gcaa;
            double t14965 = t14964*t14964;
            double t14966 = tau_a[index]-1.0/1.0E20;
            double t14967 = ( (t14966 > 0.0) ?  1.0 : 0.0 ) ;
            double t14968 = tau_a[index]*2.0;
            double t14969 = 1/rho_a[index];
            double t14993 = gamma_aa[index]*t14969*(1.0/4.0);
            double t14970 = -t14993+t14968;
            double t14971 = t14923*t14970*(1.0/2.0);
            double t14972 = t14971-1.0;
            double t14973 = t14972*t14967;
            double t14974 = t14973+1.0;
            double t14975 = gamma_aa[index]*gcaa*t14829*4.0;
            double t14976 = gamma_aa[index]*gcaa*t14830*t14824*t14964*4.0;
            double t14977 = t14831*t14824*t14964*6.0;
            double t14978 = t14826*t14828*t14965;
            double t14979 = t14975+t14976+t14977+t14978+1.0;
            double t14980 = 1/t14979;
            double t14981 = gamma_aa[index]*gcaa*t14829;
            double t14982 = t14981+1.0;
            double t14983 = 1/t14982;
            double t14984 = gamma_aa[index]*gcaa*t14829*3.0;
            double t14985 = gamma_aa[index]*gcaa*t14830*t14824*t14964;
            double t14986 = t14831*t14824*t14964*3.0;
            double t14987 = t14984+t14985+t14986+1.0;
            double t14988 = 1/t14987;
            double t14989 = gamma_aa[index]*gcaa*t14829*2.0;
            double t14990 = t14831*t14824*t14964;
            double t14991 = t14990+t14989+1.0;
            double t14992 = 1/t14991;
            double t14994 = 1/t14870;
            double t14995 = 1/(t14858*t14858);
            double t14996 = b4f*t14840*t14865*(2.0/3.0);
            double t14997 = b2f*c*t14859*(1.0/3.0);
            double t14998 = b1f*c*t14866*t14859*(1.0/6.0);
            double t14999 = b3f*c*t14851*t14859*(1.0/2.0);
            double t15000 = t14996+t14997+t14998+t14999;
            double t15001 = a1f*c*c0f*t14894*t14859*(2.0/3.0);
            double t15002 = a1p*c*c0p*t14884*t14859*(2.0/3.0);
            double t15003 = ccaa4*t14826*t14980*t14828*t14965;
            double t15004 = ccaa1*gamma_aa[index]*gcaa*t14829*t14983;
            double t15005 = ccaa3*gamma_aa[index]*gcaa*t14830*t14824*t14964*t14988;
            double t15006 = ccaa2*t14831*t14824*t14964*t14992;
            double t15007 = ccaa0+t15003+t15004+t15005+t15006;
            v_rho_a_[index] = -(X-1.0)*(t14961*t14936+rho_a[index]*t14936*(C_k*a_1*t14923*t14937*t14938*(5.0/ \
               3.0)-C_k*a_1*t14923*t14925*t14938*t14939*(5.0/3.0)-C_k*a_2*t14923*t14942*t14926*t14938*(1.0E1/3.0) \
               +C_k*a_2*t14923*t14925*t14938*t14939*(1.0E1/3.0)+C_k*a_3*t14923*t14942*t14926*t14938*5.0-C_k*a_4*t14923* \
               t14944*t14927*t14938*(2.0E1/3.0)+C_k*a_5*t14923*t14944*t14927*t14938*(2.5E1/3.0)-C_k*a_8*t14923*t14928* \
               t14938*t14948*(4.0E1/3.0)+C_k*a_9*t14923*t14928*t14938*t14948*1.5E1+C_k*a_10*t14940*t14923*t14925* \
               t14928*t14938*(5.0E1/3.0)-C_k*a_10*t14923*t14941*t14926*t14928*t14938*(5.0E1/3.0)+C_k*a_11*t14923* \
               t14941*t14926*t14928*t14938*(5.5E1/3.0)-C_k*a_3*t14923*t14925*t14943*t14926*t14938*5.0+C_k*a_4*t14923* \
               t14925*t14943*t14926*t14938*(2.0E1/3.0)-C_k*a_5*t14923*t14925*t14927*t14945*t14938*(2.5E1/3.0)+C_k* \
               a_6*t14923*t14925*t14927*t14945*t14938*1.0E1-C_k*a_6*t14923*t14926*t14927*t14946*t14938*1.0E1+C_k* \
               a_7*t14923*t14926*t14927*t14946*t14938*(3.5E1/3.0)-C_k*a_9*t14940*t14923*t14925*t14928*t14938*1.5E1- \
               C_k*a_11*t14923*t14925*t14926*t14928*1/pow(t14929,1.2E1)*t14938*(5.5E1/3.0)-C_k*a_7*t14923*t14925* \
               t14926*t14927*t14938*t14947*(3.5E1/3.0)+C_k*a_8*t14923*t14925*t14926*t14927*t14938*t14947*(4.0E1/3.0) \
               )-kp*rho_a[index]*1/(t14934*t14934)*t14961*(gamma_aa[index]*mu_*t14930*t14931*t14932*t14949*(1.0/3.0) \
               +gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index])*t14930*t14841*t14931*(1.0/2.0)))-(rho_a[index]* \
               t14963*2.0-c0p*rho_a[index]*t14885*t14887*4.0)*(ccab1*gamma_aa[index]*gcab*t14908*t14919*(4.0/3.0) \
               +ccab4*t14921*t14905*t14826*t14827*(1.6E1/3.0)+ccab2*t14824*t14825*t14917*t14918*(8.0/3.0)-ccab1*t14824* \
               t14825*1/(t14907*t14907)*t14918*(4.0/3.0)-ccab2*t14831*t14824*t14825*1/(t14916*t14916)*(gamma_aa[index]* \
               gcab*t14919*(8.0/3.0)+t14824*t14825*t14918*(8.0/3.0))-ccab4*1/(t14904*t14904)*t14826*t14827*t14828* \
               (gamma_aa[index]*gcab*t14919*(1.6E1/3.0)+t14921*t14826*t14827*(1.6E1/3.0)+t14824*t14825*t14918*1.6E1+ \
               gamma_aa[index]*gcab*t14920*t14824*t14825*1.6E1)+ccab3*gamma_aa[index]*gcab*t14920*t14913*t14824*t14825* \
               4.0-ccab3*gamma_aa[index]*gcab*t14830*1/(t14912*t14912)*t14824*t14825*(gamma_aa[index]*gcab*t14919* \
               4.0+t14824*t14825*t14918*8.0+gamma_aa[index]*gcab*t14920*t14824*t14825*4.0))-(rho_a[index]*((1/(t14843* \
               t14843)*t14887*(b2p*c*t14844*(1.0/3.0)+b4p*t14840*t14949*(2.0/3.0)+b3p*c*t14835*t14844*(1.0/2.0)+b1p* \
               c*1/sqrt(t14834)*t14844*(1.0/6.0)))/t14848-a1p*c*c0p*t14844*t14885*(2.0/3.0))*2.0+rho_a[index]*(-t14883+ \
               t15002+t14890*t14893*(t14883+t15001-t14994*t14896*t14995*t15000-a1p*c*c0p*t14884*t14859*(2.0/3.0)) \
               )-c0p*t14875*t14884*2.0+c0p*t14885*t14887*2.0-t14890*t14893*t14898)*(ccab0+ccab1*gamma_aa[index]*gcab* \
               t14908*t14829+ccab2*t14831*t14824*t14825*t14917+ccab4*t14905*t14826*t14827*t14828+ccab3*gamma_aa[index]* \
               gcab*t14830*t14913*t14824*t14825)-t14963*t14974*t15007+rho_a[index]*t14963*t14974*(ccaa1*gamma_aa[index]* \
               gcaa*t14919*t14983*(8.0/3.0)+ccaa4*t14921*t14826*t14980*t14965*(3.2E1/3.0)+ccaa2*t14824*t14918*t14964* \
               t14992*(1.6E1/3.0)-ccaa1*t14824*t14918*t14964*1/(t14982*t14982)*(8.0/3.0)-ccaa2*t14831*t14824*t14964* \
               1/(t14991*t14991)*(gamma_aa[index]*gcaa*t14919*(1.6E1/3.0)+t14824*t14918*t14964*(1.6E1/3.0))-ccaa4* \
               t14826*t14828*t14965*1/(t14979*t14979)*(gamma_aa[index]*gcaa*t14919*(3.2E1/3.0)+t14921*t14826*t14965* \
               (3.2E1/3.0)+t14824*t14918*t14964*3.2E1+gamma_aa[index]*gcaa*t14920*t14824*t14964*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t14920*t14824*t14964*t14988*8.0-ccaa3*gamma_aa[index]*gcaa*t14830*t14824*t14964*1/(t14987*t14987) \
               *(gamma_aa[index]*gcaa*t14919*8.0+t14824*t14918*t14964*1.6E1+gamma_aa[index]*gcaa*t14920*t14824*t14964* \
               8.0))+rho_a[index]*t14974*t15007*(-t14883+t15002+t14890*t14893*(t14883+t15001-t15002-t14994*t14896* \
               t14995*t15000))-gamma_aa[index]*t14923*t14963*t14967*t14969*t15007*(1.0/8.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t15009 = 1/pow(rho_a[index],1.0/3.0);
                double t15010 = c*t15009;
                double t15011 = sqrt(t15010);
                double t15012 = pow(t15010,3.0/2.0);
                double t15013 = c*c;
                double t15014 = 1/pow(rho_a[index],2.0/3.0);
                double t15015 = 1/c0p;
                double t15016 = b1p*t15011;
                double t15017 = b3p*t15012;
                double t15018 = b4p*t15013*t15014;
                double t15019 = b2p*c*t15009;
                double t15020 = t15016+t15017+t15018+t15019;
                double t15021 = 1/t15020;
                double t15022 = t15021*t15015*(1.0/2.0);
                double t15023 = t15022+1.0;
                double t15024 = log(t15023);
                double t15025 = a1p*c*t15009;
                double t15026 = t15025+1.0;
                double t15027 = rho_a[index]*2.0;
                double t15028 = 1/pow(t15027,1.0/3.0);
                double t15029 = c*t15028;
                double t15030 = 1/pow(rho_a[index],8.0/3.0);
                double t15031 = gamma_aa[index]*gamma_aa[index];
                double t15032 = gcab*gcab;
                double t15033 = t15032*t15032;
                double t15034 = 1/pow(rho_a[index],3.2E1/3.0);
                double t15035 = 1/pow(rho_a[index],1.6E1/3.0);
                double t15036 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t15037 = gamma_aa[index]*gcab*t15030;
                double t15038 = t15037+1.0;
                double t15039 = gamma_aa[index]*gcab*t15030*3.0;
                double t15040 = gamma_aa[index]*gcab*t15031*t15032*t15036;
                double t15041 = t15031*t15032*t15035*3.0;
                double t15042 = t15040+t15041+t15039+1.0;
                double t15043 = t15031*t15031;
                double t15044 = gamma_aa[index]*gcab*t15030*4.0;
                double t15045 = gamma_aa[index]*gcab*t15031*t15032*t15036*4.0;
                double t15046 = t15031*t15032*t15035*6.0;
                double t15047 = t15033*t15034*t15043;
                double t15048 = t15044+t15045+t15046+t15047+1.0;
                double t15049 = gamma_aa[index]*gcab*t15030*2.0;
                double t15050 = t15031*t15032*t15035;
                double t15051 = t15050+t15049+1.0;
                double t15052 = pow(2.0,1.0/3.0);
                double t15053 = t15052*2.0;
                double t15054 = t15053-2.0;
                double t15055 = two_13*2.0;
                double t15056 = t15055-2.0;
                double t15057 = 1/t15056;
                double t15058 = 1/c0f;
                double t15059 = b1f*t15011;
                double t15060 = b3f*t15012;
                double t15061 = b4f*t15013*t15014;
                double t15062 = b2f*c*t15009;
                double t15063 = t15060+t15061+t15062+t15059;
                double t15064 = 1/t15063;
                double t15065 = t15064*t15058*(1.0/2.0);
                double t15066 = t15065+1.0;
                double t15067 = log(t15066);
                double t15068 = a1f*c*t15009;
                double t15069 = t15068+1.0;
                double t15070 = c0f*t15067*t15069*2.0;
                double t15071 = c0p*t15024*t15026*2.0;
                double t15072 = gcaa*gcaa;
                double t15073 = t15072*t15072;
                double t15074 = t15070-t15071;
                double t15075 = t15054*t15074*t15057;
                double t15076 = t15071+t15075;
                double t15077 = tau_a[index]-1.0/1.0E20;
                double t15078 = ( (t15077 > 0.0) ?  1.0 : 0.0 ) ;
                double t15079 = 1/tau_a[index];
                double t15080 = gamma_aa[index]*gcaa*t15030;
                double t15081 = t15080+1.0;
                double t15082 = 1/t15081;
                double t15083 = gamma_aa[index]*gcaa*t15030*4.0;
                double t15084 = gamma_aa[index]*gcaa*t15031*t15036*t15072*4.0;
                double t15085 = t15031*t15035*t15072*6.0;
                double t15086 = t15034*t15043*t15073;
                double t15087 = t15083+t15084+t15085+t15086+1.0;
                double t15088 = 1/t15087;
                double t15089 = gamma_aa[index]*gcaa*t15030*2.0;
                double t15090 = t15031*t15035*t15072;
                double t15091 = t15090+t15089+1.0;
                double t15092 = 1/t15091;
                double t15093 = gamma_aa[index]*gcaa*t15030*3.0;
                double t15094 = gamma_aa[index]*gcaa*t15031*t15036*t15072;
                double t15095 = t15031*t15035*t15072*3.0;
                double t15096 = t15093+t15094+t15095+1.0;
                double t15097 = 1/t15096;
                double t15098 = 1/rho_a[index];
                double t15099 = 1/(k*k);
                double t15100 = 1/pow(t15027,2.0/3.0);
                double t15101 = pow(rho_a[index],5.0/3.0);
                double t15102 = C_k*t15101*t15079;
                double t15103 = t15102-1.0;
                double t15104 = t15103*t15103;
                double t15105 = t15104*t15104;
                double t15106 = t15105*t15105;
                double t15107 = t15102+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t15071+t15054*t15057*(t15070-c0p*t15024*t15026*2.0))*2.0-c0p* \
                   rho_a[index]*log((t15015*(1.0/2.0))/(b1p*sqrt(t15029)+b3p*pow(t15029,3.0/2.0)+b2p*c*t15028+b4p*t15100* \
                   t15013)+1.0)*(a1p*c*t15028+1.0)*4.0)*((ccab1*gcab*t15030*(1.0/2.0))/t15038+(ccab2*gamma_aa[index]* \
                   t15032*t15035)/t15051-ccab1*gamma_aa[index]*t15032*t15035*1/(t15038*t15038)*(1.0/2.0)-ccab2*t15031* \
                   t15032*1/(t15051*t15051)*t15035*(gcab*t15030+gamma_aa[index]*t15032*t15035)+(ccab4*gamma_aa[index]* \
                   t15031*t15033*t15034*2.0)/t15048+(ccab3*gcab*t15031*t15032*t15036*(3.0/2.0))/t15042-ccab4*t15033*t15034* \
                   t15043*1/(t15048*t15048)*(gcab*t15030*2.0+gamma_aa[index]*t15032*t15035*6.0+gamma_aa[index]*t15031* \
                   t15033*t15034*2.0+gcab*t15031*t15032*t15036*6.0)-ccab3*gamma_aa[index]*gcab*t15031*t15032*1/(t15042* \
                   t15042)*t15036*(gcab*t15030*(3.0/2.0)+gamma_aa[index]*t15032*t15035*3.0+gcab*t15031*t15032*t15036* \
                   (3.0/2.0)))*2.0+t15076*t15078*t15079*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t15030*t15082+ccaa2*t15031* \
                   t15035*t15072*t15092+ccaa4*t15034*t15043*t15073*t15088+ccaa3*gamma_aa[index]*gcaa*t15031*t15036*t15072* \
                   t15097)*(1.0/4.0)-rho_a[index]*t15076*(t15078*(t15079*(tau_a[index]*2.0-gamma_aa[index]*t15098*(1.0/ \
                   4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t15030*t15082+ccaa2*gamma_aa[index]*t15035*t15072*t15092*2.0- \
                   ccaa1*gamma_aa[index]*t15035*t15072*1/(t15081*t15081)-ccaa2*t15031*t15035*t15072*1/(t15091*t15091) \
                   *(gcaa*t15030*2.0+gamma_aa[index]*t15035*t15072*2.0)-ccaa4*t15034*t15043*t15073*1/(t15087*t15087)* \
                   (gcaa*t15030*4.0+gamma_aa[index]*t15035*t15072*1.2E1+gamma_aa[index]*t15031*t15034*t15073*4.0+gcaa* \
                   t15031*t15036*t15072*1.2E1)+ccaa4*gamma_aa[index]*t15031*t15034*t15073*t15088*4.0+ccaa3*gcaa*t15031* \
                   t15036*t15072*t15097*3.0-ccaa3*gamma_aa[index]*gcaa*t15031*t15036*t15072*1/(t15096*t15096)*(gcaa*t15030* \
                   3.0+gamma_aa[index]*t15035*t15072*6.0+gcaa*t15031*t15036*t15072*3.0))*2.0-mu_*t15100*t15098*t15099* \
                   1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t15100*t15099*(1.0/4.0))/kp+1.0,2.0)*(X-1.0) \
                   *((a_1*t15103)/t15107+a_2*t15104*1/(t15107*t15107)+a_4*t15105*1/(t15107*t15107*t15107*t15107)+a_8* \
                   t15106*1/(t15107*t15107*t15107*t15107*t15107*t15107*t15107*t15107)+a_10*t15104*t15106*1/pow(t15107,1.0E1) \
                   +a_3*t15103*t15104*1/(t15107*t15107*t15107)+a_5*t15103*t15105*1/(t15107*t15107*t15107*t15107*t15107) \
                   +a_6*t15104*t15105*1/(t15107*t15107*t15107*t15107*t15107*t15107)+a_9*t15103*t15106*1/(t15107*t15107* \
                   t15107*t15107*t15107*t15107*t15107*t15107*t15107)+a_11*t15103*t15104*t15106*1/pow(t15107,1.1E1)+a_7* \
                   t15103*t15104*t15105*1/(t15107*t15107*t15107*t15107*t15107*t15107*t15107)+1.0)*(1.0/2.0);
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                double t15109 = pow(rho_a[index],5.0/3.0);
                double t15110 = 1/(tau_a[index]*tau_a[index]);
                double t15111 = 1/tau_a[index];
                double t15112 = C_k*t15111*t15109;
                double t15113 = t15112+1.0;
                double t15114 = t15112-1.0;
                double t15115 = 1/(t15113*t15113);
                double t15116 = t15114*t15114;
                double t15117 = t15116*t15116;
                double t15118 = t15117*t15117;
                double t15119 = 1/pow(t15113,1.1E1);
                double t15120 = 1/(t15113*t15113*t15113);
                double t15121 = 1/(t15113*t15113*t15113*t15113);
                double t15122 = 1/(t15113*t15113*t15113*t15113*t15113);
                double t15123 = 1/(t15113*t15113*t15113*t15113*t15113*t15113);
                double t15124 = 1/(t15113*t15113*t15113*t15113*t15113*t15113*t15113);
                double t15125 = 1/(t15113*t15113*t15113*t15113*t15113*t15113*t15113*t15113);
                double t15126 = 1/(t15113*t15113*t15113*t15113*t15113*t15113*t15113*t15113*t15113);
                double t15127 = 1/pow(t15113,1.0E1);
                double t15128 = 1/pow(rho_a[index],1.0/3.0);
                double t15129 = c*t15128;
                double t15130 = sqrt(t15129);
                double t15131 = pow(t15129,3.0/2.0);
                double t15132 = c*c;
                double t15133 = 1/pow(rho_a[index],2.0/3.0);
                double t15134 = 1/c0p;
                double t15135 = b1p*t15130;
                double t15136 = b3p*t15131;
                double t15137 = b4p*t15132*t15133;
                double t15138 = b2p*c*t15128;
                double t15139 = t15135+t15136+t15137+t15138;
                double t15140 = 1/t15139;
                double t15141 = t15140*t15134*(1.0/2.0);
                double t15142 = t15141+1.0;
                double t15143 = log(t15142);
                double t15144 = a1p*c*t15128;
                double t15145 = t15144+1.0;
                double t15146 = tau_a[index]-1.0/1.0E20;
                double t15147 = tau_a[index]*2.0;
                double t15148 = 1/rho_a[index];
                double t15149 = t15147-gamma_aa[index]*t15148*(1.0/4.0);
                double t15150 = gamma_aa[index]*gamma_aa[index];
                double t15151 = gcaa*gcaa;
                double t15152 = t15150*t15150;
                double t15153 = t15151*t15151;
                double t15154 = 1/pow(rho_a[index],3.2E1/3.0);
                double t15155 = 1/pow(rho_a[index],8.0/3.0);
                double t15156 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t15157 = 1/pow(rho_a[index],1.6E1/3.0);
                v_tau_a_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t15130+ \
                   b3f*t15131+b2f*c*t15128+b4f*t15132*t15133))+1.0)*(a1f*c*t15128+1.0)*2.0-c0p*t15143*t15145*2.0))/(two_13* \
                   2.0-2.0)+c0p*t15143*t15145*2.0)*( ( (t15146 > 0.0) ? 1.0*(t15111-t15110*t15149*(1.0/2.0)) : 0.0 )  \
                   + 0.0 )*(ccaa0+(ccaa2*t15150*t15151*t15157)/(gamma_aa[index]*gcaa*t15155*2.0+t15150*t15151*t15157+ \
                   1.0)+(ccaa1*gamma_aa[index]*gcaa*t15155)/(gamma_aa[index]*gcaa*t15155+1.0)+(ccaa4*t15152*t15153*t15154) \
                   /(gamma_aa[index]*gcaa*t15155*4.0+t15150*t15151*t15157*6.0+t15152*t15153*t15154+gamma_aa[index]*gcaa* \
                   t15150*t15151*t15156*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t15150*t15151*t15156)/(gamma_aa[index]*gcaa* \
                   t15155*3.0+t15150*t15151*t15157*3.0+gamma_aa[index]*gcaa*t15150*t15151*t15156+1.0))+rho_a[index]*(X- \
                   1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*1/pow(rho_a[index]*2.0,2.0/ \
                   3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t15110*t15109)/t15113-C_k*a_1*t15110*t15114*t15115*t15109-C_k* \
                   a_2*t15110*t15120*t15116*t15109*2.0+C_k*a_2*t15110*t15114*t15115*t15109*2.0+C_k*a_3*t15110*t15120* \
                   t15116*t15109*3.0-C_k*a_4*t15110*t15122*t15117*t15109*4.0+C_k*a_5*t15110*t15122*t15117*t15109*5.0- \
                   C_k*a_8*t15110*t15126*t15109*t15118*8.0+C_k*a_9*t15110*t15126*t15109*t15118*9.0+C_k*a_10*t15110*t15114* \
                   t15109*t15118*t15127*1.0E1-C_k*a_10*t15110*t15116*t15109*t15118*t15119*1.0E1+C_k*a_11*t15110*t15116* \
                   t15109*t15118*t15119*1.1E1-C_k*a_3*t15110*t15121*t15114*t15116*t15109*3.0+C_k*a_4*t15110*t15121*t15114* \
                   t15116*t15109*4.0-C_k*a_5*t15110*t15114*t15123*t15117*t15109*5.0+C_k*a_6*t15110*t15114*t15123*t15117* \
                   t15109*6.0-C_k*a_6*t15110*t15124*t15116*t15117*t15109*6.0+C_k*a_7*t15110*t15124*t15116*t15117*t15109* \
                   7.0-C_k*a_9*t15110*t15114*t15109*t15118*t15127*9.0-C_k*a_11*t15110*1/pow(t15113,1.2E1)*t15114*t15116* \
                   t15109*t15118*1.1E1-C_k*a_7*t15110*t15114*t15116*t15125*t15117*t15109*7.0+C_k*a_8*t15110*t15114*t15116* \
                   t15125*t15117*t15109*8.0);
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t15159 = rho_a[index]*2.0;
            double t15160 = 1/pow(t15159,1.0/3.0);
            double t15161 = c*t15160;
            double t15162 = sqrt(t15161);
            double t15163 = b1p*t15162;
            double t15164 = pow(t15161,3.0/2.0);
            double t15165 = b3p*t15164;
            double t15166 = b2p*c*t15160;
            double t15167 = c*c;
            double t15168 = 1/pow(t15159,2.0/3.0);
            double t15169 = b4p*t15167*t15168;
            double t15170 = t15163+t15165+t15166+t15169;
            double t15171 = 1/pow(t15159,8.0/3.0);
            double t15172 = 1/pow(t15159,7.0/3.0);
            double t15173 = 1/sqrt(t15161);
            double t15174 = 1/c0p;
            double t15175 = 1/t15170;
            double t15176 = t15174*t15175*(1.0/2.0);
            double t15177 = t15176+1.0;
            double t15178 = 1/t15177;
            double t15179 = a1p*c*t15160;
            double t15180 = t15179+1.0;
            double t15181 = 1/pow(t15159,4.0/3.0);
            double t15183 = b2p*c*t15181*(1.0/3.0);
            double t15184 = 1/pow(t15159,5.0/3.0);
            double t15185 = b4p*t15184*t15167*(2.0/3.0);
            double t15186 = b1p*c*t15181*t15173*(1.0/6.0);
            double t15187 = b3p*c*t15162*t15181*(1.0/2.0);
            double t15182 = t15183+t15185+t15186+t15187;
            double t15188 = t15182*t15182;
            double t15189 = 1/(t15170*t15170);
            double t15190 = log(t15177);
            double t15191 = gamma_aa[index]*gamma_aa[index];
            double t15192 = gcab*gcab;
            double t15193 = t15191*t15191;
            double t15194 = t15192*t15192;
            double t15195 = 1/pow(rho_a[index],3.2E1/3.0);
            double t15196 = 1/pow(rho_a[index],8.0/3.0);
            double t15197 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t15198 = 1/pow(rho_a[index],1.6E1/3.0);
            double t15199 = two_13*2.0;
            double t15200 = t15199-2.0;
            double t15201 = 1/t15200;
            double t15202 = 1/pow(rho_a[index],1.0/3.0);
            double t15203 = c*t15202;
            double t15204 = sqrt(t15203);
            double t15205 = pow(t15203,3.0/2.0);
            double t15206 = 1/pow(rho_a[index],2.0/3.0);
            double t15207 = b1p*t15204;
            double t15208 = b3p*t15205;
            double t15209 = b4p*t15206*t15167;
            double t15210 = b2p*c*t15202;
            double t15211 = t15210+t15207+t15208+t15209;
            double t15212 = 1/t15211;
            double t15213 = t15212*t15174*(1.0/2.0);
            double t15214 = t15213+1.0;
            double t15215 = log(t15214);
            double t15216 = a1p*c*t15202;
            double t15217 = t15216+1.0;
            double t15218 = gamma_aa[index]*gcab*t15196*4.0;
            double t15219 = gamma_aa[index]*gcab*t15191*t15192*t15197*4.0;
            double t15220 = t15191*t15192*t15198*6.0;
            double t15221 = t15193*t15194*t15195;
            double t15222 = t15220+t15221+t15218+t15219+1.0;
            double t15223 = 1/t15222;
            double t15224 = gamma_aa[index]*gcab*t15196;
            double t15225 = t15224+1.0;
            double t15226 = 1/t15225;
            double t15227 = gamma_aa[index]*gcab*t15196*3.0;
            double t15228 = gamma_aa[index]*gcab*t15191*t15192*t15197;
            double t15229 = t15191*t15192*t15198*3.0;
            double t15230 = t15227+t15228+t15229+1.0;
            double t15231 = 1/t15230;
            double t15232 = gamma_aa[index]*gcab*t15196*2.0;
            double t15233 = t15191*t15192*t15198;
            double t15234 = t15232+t15233+1.0;
            double t15235 = 1/t15234;
            double t15236 = 1/pow(rho_a[index],1.0E1);
            double t15237 = 1/pow(rho_a[index],2.2E1/3.0);
            double t15239 = 1/pow(rho_a[index],1.1E1/3.0);
            double t15240 = 1/pow(rho_a[index],1.9E1/3.0);
            double t15242 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t15249 = 1/pow(rho_a[index],3.5E1/3.0);
            double t15250 = gamma_aa[index]*gcab*t15239*(1.6E1/3.0);
            double t15251 = gamma_aa[index]*gcab*t15242*t15191*t15192*1.6E1;
            double t15252 = t15240*t15191*t15192*1.6E1;
            double t15253 = t15193*t15194*t15249*(1.6E1/3.0);
            double t15238 = t15250+t15251+t15252+t15253;
            double t15256 = gamma_aa[index]*gcab*t15239*(8.0/3.0);
            double t15257 = t15240*t15191*t15192*(8.0/3.0);
            double t15241 = t15256+t15257;
            double t15243 = 1/pow(rho_a[index],1.4E1/3.0);
            double t15244 = 1/(t15230*t15230);
            double t15245 = gamma_aa[index]*gcab*t15239*4.0;
            double t15246 = gamma_aa[index]*gcab*t15242*t15191*t15192*4.0;
            double t15247 = t15240*t15191*t15192*8.0;
            double t15248 = t15245+t15246+t15247;
            double t15254 = 1/pow(rho_a[index],3.8E1/3.0);
            double t15255 = 1/(t15222*t15222);
            double t15258 = 1/(t15234*t15234);
            double t15259 = pow(2.0,1.0/3.0);
            double t15260 = t15259*2.0;
            double t15261 = t15260-2.0;
            double t15262 = a1f*c*t15202;
            double t15263 = t15262+1.0;
            double t15264 = 1/c0f;
            double t15265 = b1f*t15204;
            double t15266 = b3f*t15205;
            double t15267 = b4f*t15206*t15167;
            double t15268 = b2f*c*t15202;
            double t15269 = t15265+t15266+t15267+t15268;
            double t15270 = 1/t15269;
            double t15271 = t15270*t15264*(1.0/2.0);
            double t15272 = t15271+1.0;
            double t15273 = 1/pow(rho_a[index],4.0/3.0);
            double t15274 = 1/pow(rho_a[index],5.0/3.0);
            double t15275 = 1/sqrt(t15203);
            double t15276 = log(t15272);
            double t15277 = 1/t15214;
            double t15278 = 1/(t15211*t15211);
            double t15279 = b4p*t15274*t15167*(2.0/3.0);
            double t15280 = b2p*c*t15273*(1.0/3.0);
            double t15281 = b1p*c*t15273*t15275*(1.0/6.0);
            double t15282 = b3p*c*t15204*t15273*(1.0/2.0);
            double t15283 = t15280+t15281+t15282+t15279;
            double t15284 = t15217*t15283*t15277*t15278;
            double t15285 = c0f*t15263*t15276*2.0;
            double t15286 = c0p*t15215*t15217*2.0;
            double t15287 = 1/(t15225*t15225);
            double t15288 = 1/(rho_a[index]*rho_a[index]);
            double t15289 = 1/tau_a[index];
            double t15290 = pow(rho_a[index],2.0/3.0);
            double t15291 = pow(rho_a[index],5.0/3.0);
            double t15292 = C_k*t15291*t15289;
            double t15293 = t15292+1.0;
            double t15294 = t15292-1.0;
            double t15295 = 1/(t15293*t15293);
            double t15296 = t15294*t15294;
            double t15297 = t15296*t15296;
            double t15298 = t15297*t15297;
            double t15299 = 1/pow(t15293,1.1E1);
            double t15300 = 1/(t15293*t15293*t15293);
            double t15301 = 1/(t15293*t15293*t15293*t15293);
            double t15302 = 1/(t15293*t15293*t15293*t15293*t15293);
            double t15303 = 1/(t15293*t15293*t15293*t15293*t15293*t15293);
            double t15304 = 1/(t15293*t15293*t15293*t15293*t15293*t15293*t15293);
            double t15305 = 1/(t15293*t15293*t15293*t15293*t15293*t15293*t15293*t15293);
            double t15306 = 1/(t15293*t15293*t15293*t15293*t15293*t15293*t15293*t15293*t15293);
            double t15307 = 1/pow(t15293,1.0E1);
            double t15308 = 1/(k*k);
            double t15309 = 1/kp;
            double t15310 = gamma_aa[index]*mu_*t15308*t15309*t15168*t15288*(1.0/4.0);
            double t15311 = t15310+1.0;
            double t15312 = 1/t15311;
            double t15313 = kp-kp*t15312+1.0;
            double t15314 = C_k*C_k;
            double t15315 = pow(rho_a[index],4.0/3.0);
            double t15316 = 1/(tau_a[index]*tau_a[index]);
            double t15317 = 1/t15293;
            double t15318 = 1/pow(t15293,1.2E1);
            double t15319 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t15320 = gamma_aa[index]*mu_*t15308*t15309*t15319*t15168*(1.0/2.0);
            double t15321 = gamma_aa[index]*mu_*t15308*t15309*t15184*t15288*(1.0/3.0);
            double t15322 = t15320+t15321;
            double t15323 = a_1*t15317*t15294;
            double t15324 = a_10*t15307*t15296*t15298;
            double t15325 = a_11*t15294*t15296*t15298*t15299;
            double t15326 = a_2*t15295*t15296;
            double t15327 = a_3*t15300*t15294*t15296;
            double t15328 = a_4*t15301*t15297;
            double t15329 = a_5*t15302*t15294*t15297;
            double t15330 = a_6*t15303*t15296*t15297;
            double t15331 = a_7*t15304*t15294*t15296*t15297;
            double t15332 = a_8*t15305*t15298;
            double t15333 = a_9*t15306*t15294*t15298;
            double t15334 = t15330+t15331+t15323+t15332+t15324+t15333+t15325+t15326+t15327+t15328+t15329+1.0;
            double t15335 = 1/(t15311*t15311);
            double t15336 = C_k*a_1*t15290*t15317*t15289*(5.0/3.0);
            double t15337 = C_k*a_2*t15290*t15294*t15295*t15289*(1.0E1/3.0);
            double t15338 = C_k*a_10*t15307*t15290*t15294*t15289*t15298*(5.0E1/3.0);
            double t15339 = C_k*a_11*t15290*t15296*t15289*t15298*t15299*(5.5E1/3.0);
            double t15340 = C_k*a_3*t15300*t15290*t15296*t15289*5.0;
            double t15341 = C_k*a_4*t15301*t15290*t15294*t15296*t15289*(2.0E1/3.0);
            double t15342 = C_k*a_5*t15302*t15290*t15297*t15289*(2.5E1/3.0);
            double t15343 = C_k*a_6*t15303*t15290*t15294*t15297*t15289*1.0E1;
            double t15344 = C_k*a_7*t15304*t15290*t15296*t15297*t15289*(3.5E1/3.0);
            double t15345 = C_k*a_8*t15305*t15290*t15294*t15296*t15297*t15289*(4.0E1/3.0);
            double t15346 = C_k*a_9*t15306*t15290*t15289*t15298*1.5E1;
            double t15347 = t15340+t15341+t15342+t15343+t15344+t15336+t15345+t15337+t15346+t15338+t15339-C_k* \
               a_1*t15290*t15294*t15295*t15289*(5.0/3.0)-C_k*a_2*t15300*t15290*t15296*t15289*(1.0E1/3.0)-C_k*a_4* \
               t15302*t15290*t15297*t15289*(2.0E1/3.0)-C_k*a_8*t15306*t15290*t15289*t15298*(4.0E1/3.0)-C_k*a_10*t15290* \
               t15296*t15289*t15298*t15299*(5.0E1/3.0)-C_k*a_3*t15301*t15290*t15294*t15296*t15289*5.0-C_k*a_5*t15303* \
               t15290*t15294*t15297*t15289*(2.5E1/3.0)-C_k*a_6*t15304*t15290*t15296*t15297*t15289*1.0E1-C_k*a_9*t15307* \
               t15290*t15294*t15289*t15298*1.5E1-C_k*a_11*t15290*t15318*t15294*t15296*t15289*t15298*(5.5E1/3.0)-C_k* \
               a_7*t15305*t15290*t15294*t15296*t15297*t15289*(3.5E1/3.0);
            double t15348 = ccab4*t15223*t15193*t15194*t15195;
            double t15349 = ccab1*gamma_aa[index]*gcab*t15226*t15196;
            double t15350 = ccab3*gamma_aa[index]*gcab*t15231*t15191*t15192*t15197;
            double t15351 = ccab2*t15235*t15191*t15192*t15198;
            double t15352 = ccab0+t15350+t15351+t15348+t15349;
            double t15353 = b2p*c*t15172*(4.0/9.0);
            double t15354 = b4p*t15171*t15167*(1.0E1/9.0);
            double t15355 = 1/pow(t15161,3.0/2.0);
            double t15356 = b3p*t15171*t15173*t15167*(1.0/1.2E1);
            double t15357 = b1p*c*t15172*t15173*(2.0/9.0);
            double t15358 = b3p*c*t15162*t15172*(2.0/3.0);
            double t15359 = t15353+t15354+t15356+t15357+t15358-b1p*t15171*t15355*t15167*(1.0/3.6E1);
            double t15360 = t15180*t15178*t15359*t15189;
            double t15361 = 1/(t15170*t15170*t15170);
            double t15362 = 1/(t15177*t15177);
            double t15363 = 1/(t15170*t15170*t15170*t15170);
            double t15364 = t15180*t15362*t15174*t15363*t15188*(1.0/2.0);
            double t15365 = 1/d2fz0;
            double t15366 = 1/Aa;
            double t15367 = b1a*t15162;
            double t15368 = b3a*t15164;
            double t15369 = b2a*c*t15160;
            double t15370 = b4a*t15167*t15168;
            double t15371 = t15370+t15367+t15368+t15369;
            double t15372 = 1/t15371;
            double t15373 = t15372*t15366*(1.0/2.0);
            double t15374 = t15373+1.0;
            double t15375 = log(t15374);
            double t15376 = a1a*c*t15160;
            double t15377 = t15376+1.0;
            double t15378 = a1p*c*t15181*t15182*t15178*t15189*(2.0/3.0);
            double t15379 = 1/t15272;
            double t15380 = b4f*t15274*t15167*(2.0/3.0);
            double t15381 = b2f*c*t15273*(1.0/3.0);
            double t15382 = b1f*c*t15273*t15275*(1.0/6.0);
            double t15383 = b3f*c*t15204*t15273*(1.0/2.0);
            double t15384 = t15380+t15381+t15382+t15383;
            double t15385 = 1/(t15269*t15269);
            double t15386 = 1/pow(rho_a[index],7.0/3.0);
            double t15387 = 1/pow(t15203,3.0/2.0);
            double t15388 = t15384*t15384;
            double t15389 = t15283*t15283;
            double t15390 = 1/(t15211*t15211*t15211);
            double t15391 = t15217*t15390*t15277*t15389*2.0;
            double t15392 = b4p*t15167*t15196*(1.0E1/9.0);
            double t15393 = b2p*c*t15386*(4.0/9.0);
            double t15394 = b3p*t15167*t15275*t15196*(1.0/1.2E1);
            double t15395 = b1p*c*t15275*t15386*(2.0/9.0);
            double t15396 = b3p*c*t15204*t15386*(2.0/3.0);
            double t15478 = b1p*t15167*t15196*t15387*(1.0/3.6E1);
            double t15397 = t15392+t15393+t15394+t15395+t15396-t15478;
            double t15398 = 1/(t15214*t15214);
            double t15399 = 1/(t15211*t15211*t15211*t15211);
            double t15400 = a1p*c*c0p*t15215*t15386*(8.0/9.0);
            double t15401 = a1f*c*c0f*t15273*t15276*(2.0/3.0);
            double t15402 = a1p*c*c0p*t15215*t15273*(2.0/3.0);
            double t15403 = a1p*c*c0p*t15181*t15190*(4.0/3.0);
            double t15404 = t15285-t15286;
            double t15405 = 1/(t15225*t15225*t15225);
            double t15406 = ccab1*gamma_aa[index]*gcab*t15405*t15191*t15236*t15192*(3.2E1/9.0);
            double t15407 = t15238*t15238;
            double t15408 = 1/(t15222*t15222*t15222);
            double t15409 = ccab4*t15407*t15408*t15193*t15194*t15195*2.0;
            double t15410 = t15241*t15241;
            double t15411 = 1/(t15234*t15234*t15234);
            double t15412 = ccab2*t15410*t15411*t15191*t15192*t15198*2.0;
            double t15413 = t15248*t15248;
            double t15414 = 1/(t15230*t15230*t15230);
            double t15415 = ccab3*gamma_aa[index]*gcab*t15413*t15414*t15191*t15192*t15197*2.0;
            double t15486 = t15263*t15384*t15385*t15379;
            double t15416 = t15401-t15402+t15284-t15486;
            double t15417 = gcaa*gcaa;
            double t15418 = t15417*t15417;
            double t15419 = t15201*t15404*t15261;
            double t15420 = t15419+t15286;
            double t15421 = tau_a[index]-1.0/1.0E20;
            double t15422 = ( (t15421 > 0.0) ?  1.0 : 0.0 ) ;
            double t15423 = tau_a[index]*2.0;
            double t15424 = 1/rho_a[index];
            double t15448 = gamma_aa[index]*t15424*(1.0/4.0);
            double t15425 = t15423-t15448;
            double t15426 = t15425*t15289*(1.0/2.0);
            double t15427 = t15426-1.0;
            double t15428 = t15422*t15427;
            double t15429 = t15428+1.0;
            double t15430 = gamma_aa[index]*gcaa*t15196*4.0;
            double t15431 = gamma_aa[index]*gcaa*t15191*t15417*t15197*4.0;
            double t15432 = t15191*t15417*t15198*6.0;
            double t15433 = t15193*t15418*t15195;
            double t15434 = t15430+t15431+t15432+t15433+1.0;
            double t15435 = 1/t15434;
            double t15436 = gamma_aa[index]*gcaa*t15196;
            double t15437 = t15436+1.0;
            double t15438 = 1/t15437;
            double t15439 = gamma_aa[index]*gcaa*t15196*3.0;
            double t15440 = gamma_aa[index]*gcaa*t15191*t15417*t15197;
            double t15441 = t15191*t15417*t15198*3.0;
            double t15442 = t15440+t15441+t15439+1.0;
            double t15443 = 1/t15442;
            double t15444 = gamma_aa[index]*gcaa*t15196*2.0;
            double t15445 = t15191*t15417*t15198;
            double t15446 = t15444+t15445+1.0;
            double t15447 = 1/t15446;
            double t15449 = 1/(t15437*t15437);
            double t15450 = gamma_aa[index]*gcaa*t15239*(3.2E1/3.0);
            double t15451 = gamma_aa[index]*gcaa*t15242*t15191*t15417*3.2E1;
            double t15452 = t15240*t15191*t15417*3.2E1;
            double t15453 = t15193*t15418*t15249*(3.2E1/3.0);
            double t15454 = t15450+t15451+t15452+t15453;
            double t15455 = gamma_aa[index]*gcaa*t15239*(1.6E1/3.0);
            double t15456 = t15240*t15191*t15417*(1.6E1/3.0);
            double t15457 = t15455+t15456;
            double t15458 = gamma_aa[index]*gcaa*t15239*8.0;
            double t15459 = gamma_aa[index]*gcaa*t15242*t15191*t15417*8.0;
            double t15460 = t15240*t15191*t15417*1.6E1;
            double t15461 = t15460+t15458+t15459;
            double t15462 = 1/(t15442*t15442);
            double t15463 = 1/(t15434*t15434);
            double t15464 = 1/(t15446*t15446);
            double t15465 = ccaa4*t15435*t15193*t15418*t15195;
            double t15466 = ccaa1*gamma_aa[index]*gcaa*t15438*t15196;
            double t15467 = ccaa3*gamma_aa[index]*gcaa*t15191*t15443*t15417*t15197;
            double t15468 = ccaa2*t15191*t15417*t15447*t15198;
            double t15469 = ccaa0+t15465+t15466+t15467+t15468;
            double t15470 = 1/(t15269*t15269*t15269);
            double t15471 = b4f*t15167*t15196*(1.0E1/9.0);
            double t15472 = b2f*c*t15386*(4.0/9.0);
            double t15473 = b3f*t15167*t15275*t15196*(1.0/1.2E1);
            double t15474 = b1f*c*t15275*t15386*(2.0/9.0);
            double t15475 = b3f*c*t15204*t15386*(2.0/3.0);
            double t15476 = t15471+t15472+t15473+t15474+t15475-b1f*t15167*t15196*t15387*(1.0/3.6E1);
            double t15477 = t15263*t15385*t15476*t15379;
            double t15479 = t15217*t15277*t15278*t15397;
            double t15480 = 1/(t15272*t15272);
            double t15481 = 1/(t15269*t15269*t15269*t15269);
            double t15482 = t15263*t15264*t15480*t15481*t15388*(1.0/2.0);
            double t15483 = t15217*t15174*t15389*t15398*t15399*(1.0/2.0);
            double t15484 = a1f*c*t15273*t15384*t15385*t15379*(2.0/3.0);
            double t15485 = a1p*c*t15273*t15283*t15277*t15278*(2.0/3.0);
            double t15487 = t15201*t15261*t15416;
            double t15488 = ccaa4*t15435*t15193*t15418*t15249*(3.2E1/3.0);
            double t15489 = ccaa1*gamma_aa[index]*gcaa*t15239*t15438*(8.0/3.0);
            double t15490 = ccaa3*gamma_aa[index]*gcaa*t15242*t15191*t15443*t15417*8.0;
            double t15491 = ccaa2*t15240*t15191*t15417*t15447*(1.6E1/3.0);
            double t15494 = ccaa1*t15240*t15191*t15417*t15449*(8.0/3.0);
            double t15495 = ccaa3*gamma_aa[index]*gcaa*t15191*t15461*t15417*t15462*t15197;
            double t15496 = ccaa4*t15193*t15418*t15454*t15463*t15195;
            double t15497 = ccaa2*t15191*t15417*t15464*t15457*t15198;
            double t15492 = t15490+t15491-t15494-t15495-t15496+t15488-t15497+t15489;
            double t15493 = t15402-t15284+t15487;
            v_rho_a_rho_a_[index] = -t15352*(-t15403-rho_a[index]*(t15360+t15364+t15378-t15180*t15361*t15178* \
               t15188*2.0-a1p*c*c0p*t15172*t15190*(8.0/9.0)+Aa*t15201*t15365*t15375*t15377*t15288*(4.0/9.0))*2.0+ \
               rho_a[index]*(-t15400-t15391+t15483+t15485+t15479+t15201*t15261*(t15400+t15391+t15482+t15484+t15477- \
               t15263*t15470*t15379*t15388*2.0-t15217*t15277*t15278*t15397-a1f*c*c0f*t15276*t15386*(8.0/9.0)-t15217* \
               t15174*t15389*t15398*t15399*(1.0/2.0)-a1p*c*t15273*t15283*t15277*t15278*(2.0/3.0)))+t15201*t15261* \
               t15416*2.0+t15180*t15182*t15178*t15189*2.0-t15217*t15283*t15277*t15278*2.0+a1p*c*c0p*t15215*t15273* \
               (4.0/3.0))+(-t15286+rho_a[index]*(t15402-t15284+t15201*t15261*(t15401+t15284-t15263*t15384*t15385* \
               t15379-a1p*c*c0p*t15215*t15273*(2.0/3.0)))+rho_a[index]*(t15180*t15182*t15178*t15189-a1p*c*c0p*t15181* \
               t15190*(2.0/3.0))*2.0+c0p*t15180*t15190*2.0-t15201*t15404*t15261)*(ccab1*gamma_aa[index]*gcab*t15226* \
               t15239*(4.0/3.0)+ccab2*t15240*t15235*t15191*t15192*(8.0/3.0)-ccab1*t15240*t15191*t15192*t15287*(4.0/ \
               3.0)+ccab4*t15223*t15193*t15194*t15249*(1.6E1/3.0)-ccab2*t15241*t15191*t15192*t15258*t15198-ccab4* \
               t15255*t15193*t15238*t15194*t15195+ccab3*gamma_aa[index]*gcab*t15231*t15242*t15191*t15192*4.0-ccab3* \
               gamma_aa[index]*gcab*t15244*t15191*t15192*t15248*t15197)*4.0+(rho_a[index]*(t15286+t15201*t15261*(t15285- \
               c0p*t15215*t15217*2.0))*2.0-c0p*rho_a[index]*t15180*t15190*4.0)*(t15412+t15406+t15415+t15409+ccab1* \
               gamma_aa[index]*gcab*t15243*t15226*(4.4E1/9.0)+ccab2*t15235*t15191*t15192*t15237*(4.0E1/3.0)+ccab4* \
               t15223*t15254*t15193*t15194*(3.68E2/9.0)-ccab1*t15191*t15192*t15237*t15287*(7.6E1/9.0)-ccab2*t15240* \
               t15241*t15191*t15192*t15258*(1.6E1/3.0)-ccab4*t15255*t15193*t15238*t15194*t15249*(3.2E1/3.0)-ccab2* \
               t15191*t15192*t15258*t15198*(gamma_aa[index]*gcab*t15243*(8.8E1/9.0)+t15191*t15192*t15237*(4.0E1/3.0) \
               )-ccab4*t15255*t15193*t15194*t15195*(gamma_aa[index]*gcab*t15243*(1.76E2/9.0)+t15191*t15192*t15237* \
               8.0E1+t15254*t15193*t15194*(3.68E2/9.0)+gamma_aa[index]*gcab*t15191*t15236*t15192*(3.04E2/3.0))+ccab3* \
               gamma_aa[index]*gcab*t15231*t15191*t15236*t15192*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t15244*t15191* \
               t15192*t15197*(gamma_aa[index]*gcab*t15243*(4.4E1/3.0)+t15191*t15192*t15237*4.0E1+gamma_aa[index]* \
               gcab*t15191*t15236*t15192*(7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t15242*t15244*t15191*t15192*t15248* \
               8.0)-(X-1.0)*(t15313*t15347*2.0+rho_a[index]*t15313*(C_k*a_1*t15202*t15317*t15289*(1.0E1/9.0)-a_1* \
               t15314*t15315*t15316*t15295*(5.0E1/9.0)+a_2*t15314*t15315*t15316*t15295*(5.0E1/9.0)+a_1*t15300*t15314* \
               t15315*t15316*t15294*(5.0E1/9.0)+a_10*t15314*t15315*t15307*t15316*t15298*2.5E2-a_2*t15300*t15314*t15315* \
               t15316*t15294*(2.0E2/9.0)+a_2*t15301*t15314*t15315*t15316*t15296*(5.0E1/3.0)+a_3*t15300*t15314*t15315* \
               t15316*t15294*(5.0E1/3.0)-a_3*t15301*t15314*t15315*t15316*t15296*5.0E1+a_4*t15301*t15314*t15315*t15316* \
               t15296*(1.0E2/3.0)+a_4*t15303*t15314*t15315*t15316*t15297*(5.0E2/9.0)-a_5*t15303*t15314*t15315*t15316* \
               t15297*(1.25E3/9.0)+a_6*t15303*t15314*t15315*t15316*t15297*(2.5E2/3.0)+a_8*t15314*t15315*t15307*t15316* \
               t15298*2.0E2-a_9*t15314*t15315*t15307*t15316*t15298*4.5E2-C_k*a_1*t15202*t15294*t15295*t15289*(1.0E1/ \
               9.0)-C_k*a_2*t15300*t15202*t15296*t15289*(2.0E1/9.0)+C_k*a_2*t15202*t15294*t15295*t15289*(2.0E1/9.0) \
               +C_k*a_3*t15300*t15202*t15296*t15289*(1.0E1/3.0)-C_k*a_4*t15202*t15302*t15297*t15289*(4.0E1/9.0)+C_k* \
               a_5*t15202*t15302*t15297*t15289*(5.0E1/9.0)-C_k*a_8*t15202*t15306*t15289*t15298*(8.0E1/9.0)+C_k*a_9* \
               t15202*t15306*t15289*t15298*1.0E1+C_k*a_10*t15202*t15307*t15294*t15289*t15298*(1.0E2/9.0)-C_k*a_10* \
               t15202*t15296*t15289*t15298*t15299*(1.0E2/9.0)+C_k*a_11*t15202*t15296*t15289*t15298*t15299*(1.1E2/ \
               9.0)-C_k*a_3*t15202*t15301*t15294*t15296*t15289*(1.0E1/3.0)+C_k*a_4*t15202*t15301*t15294*t15296*t15289* \
               (4.0E1/9.0)-C_k*a_5*t15202*t15303*t15294*t15297*t15289*(5.0E1/9.0)+C_k*a_6*t15202*t15303*t15294*t15297* \
               t15289*(2.0E1/3.0)-C_k*a_6*t15202*t15304*t15296*t15297*t15289*(2.0E1/3.0)+C_k*a_7*t15202*t15304*t15296* \
               t15297*t15289*(7.0E1/9.0)-C_k*a_9*t15202*t15307*t15294*t15289*t15298*1.0E1+a_10*t15314*t15315*t15316* \
               t15318*t15296*t15298*(2.75E3/9.0)-a_11*t15314*t15315*t15316*t15318*t15296*t15298*(6.05E3/9.0)-a_10* \
               t15314*t15315*t15316*t15294*t15298*t15299*(5.0E3/9.0)+a_11*t15314*t15315*t15316*t15294*t15298*t15299* \
               (2.75E3/9.0)+a_3*t15302*t15314*t15315*t15316*t15294*t15296*(1.0E2/3.0)-a_4*t15302*t15314*t15315*t15316* \
               t15294*t15296*(8.0E2/9.0)+a_5*t15302*t15314*t15315*t15316*t15294*t15296*(5.0E2/9.0)+a_5*t15304*t15314* \
               t15315*t15316*t15294*t15297*(2.5E2/3.0)-a_6*t15304*t15314*t15315*t15316*t15294*t15297*2.0E2+a_6*t15305* \
               t15314*t15315*t15316*t15296*t15297*(3.5E2/3.0)+a_7*t15304*t15314*t15315*t15316*t15294*t15297*(3.5E2/ \
               3.0)-a_7*t15305*t15314*t15315*t15316*t15296*t15297*(2.45E3/9.0)+a_8*t15305*t15314*t15315*t15316*t15296* \
               t15297*(1.4E3/9.0)+a_9*t15314*t15315*t15316*t15294*t15298*t15299*2.5E2+a_11*t15314*t15315*t15316*1/ \
               pow(t15293,1.3E1)*t15294*t15296*t15298*(1.1E3/3.0)-C_k*a_11*t15202*t15318*t15294*t15296*t15289*t15298* \
               (1.1E2/9.0)-C_k*a_7*t15202*t15305*t15294*t15296*t15297*t15289*(7.0E1/9.0)+C_k*a_8*t15202*t15305*t15294* \
               t15296*t15297*t15289*(8.0E1/9.0)+a_7*t15314*t15306*t15315*t15316*t15294*t15296*t15297*(1.4E3/9.0)- \
               a_8*t15314*t15306*t15315*t15316*t15294*t15296*t15297*(3.2E3/9.0)+a_9*t15314*t15306*t15315*t15316*t15294* \
               t15296*t15297*2.0E2)-kp*t15322*t15334*t15335*2.0-kp*rho_a[index]*1/(t15311*t15311*t15311)*(t15322* \
               t15322)*t15334*2.0-kp*rho_a[index]*t15322*t15335*t15347*2.0+kp*rho_a[index]*t15334*t15335*(gamma_aa[index]* \
               mu_*t15308*t15309*t15184*t15319*(4.0/3.0)+gamma_aa[index]*mu_*t15171*t15308*t15309*t15288*(1.0E1/9.0) \
               +gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t15308*t15309*t15168* \
               (3.0/2.0)))+(rho_a[index]*t15420*2.0-c0p*rho_a[index]*t15180*t15190*4.0)*(t15412+t15406+t15415+t15409+ \
               ccab2*t15235*t15191*t15192*t15237*(3.2E1/9.0)+ccab4*t15223*t15254*t15193*t15194*(6.4E1/3.0)-ccab1* \
               t15191*t15192*t15237*t15287*(3.2E1/9.0)-ccab2*t15254*t15193*t15194*t15258*(3.2E1/9.0)-ccab2*t15240* \
               t15241*t15191*t15192*t15258*(1.6E1/3.0)-ccab4*t15255*t15193*t15238*t15194*t15249*(3.2E1/3.0)-ccab4* \
               t15255*t15193*t15194*t15195*(t15191*t15192*t15237*(6.4E1/3.0)+t15254*t15193*t15194*(6.4E1/3.0)+gamma_aa[index]* \
               gcab*t15191*t15236*t15192*(1.28E2/3.0))+ccab3*gamma_aa[index]*gcab*t15231*t15191*t15236*t15192*(3.2E1/ \
               3.0)-ccab3*gamma_aa[index]*gcab*t15244*t15191*t15192*t15197*(t15191*t15192*t15237*(3.2E1/3.0)+gamma_aa[index]* \
               gcab*t15191*t15236*t15192*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t15242*t15244*t15191*t15192*t15248* \
               8.0)+t15352*(t15403+rho_a[index]*(t15360+t15364+t15378-t15180*t15361*t15178*t15188*2.0-a1p*c*c0p*t15172* \
               t15190*(8.0/9.0)-Aa*t15201*t15365*t15375*t15377*t15288*(4.0/9.0))*2.0-t15180*t15182*t15178*t15189* \
               2.0)+t15420*t15429*t15492*2.0+t15429*t15493*t15469*2.0-rho_a[index]*t15420*t15429*(ccaa1*gamma_aa[index]* \
               gcaa*t15243*t15438*(8.8E1/9.0)+ccaa2*t15191*t15237*t15417*t15447*(3.04E2/9.0)-ccaa1*t15191*t15237* \
               t15417*t15449*2.4E1+ccaa4*t15254*t15435*t15193*t15418*(1.12E3/9.0)-ccaa2*t15240*t15191*t15417*t15464* \
               t15457*(3.2E1/3.0)-ccaa4*t15193*t15418*t15454*t15463*t15249*(6.4E1/3.0)-ccaa2*t15191*t15417*t15464* \
               t15198*(gamma_aa[index]*gcaa*t15243*(1.76E2/9.0)+t15191*t15237*t15417*(3.04E2/9.0))-ccaa4*t15193*t15418* \
               t15463*t15195*(gamma_aa[index]*gcaa*t15243*(3.52E2/9.0)+t15191*t15237*t15417*(6.08E2/3.0)+t15254*t15193* \
               t15418*(1.12E3/9.0)+gamma_aa[index]*gcaa*t15191*t15236*t15417*2.88E2)+ccaa4*1/(t15434*t15434*t15434) \
               *t15193*t15418*(t15454*t15454)*t15195*2.0+ccaa2*t15191*t15417*1/(t15446*t15446*t15446)*(t15457*t15457) \
               *t15198*2.0+ccaa3*gamma_aa[index]*gcaa*t15191*t15236*t15443*t15417*7.2E1+ccaa1*gamma_aa[index]*gcaa* \
               t15191*t15236*t15417*1/(t15437*t15437*t15437)*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*1/(t15442*t15442* \
               t15442)*t15191*(t15461*t15461)*t15417*t15197*2.0-ccaa3*gamma_aa[index]*gcaa*t15191*t15417*t15462*t15197* \
               (gamma_aa[index]*gcaa*t15243*(8.8E1/3.0)+t15191*t15237*t15417*(3.04E2/3.0)+gamma_aa[index]*gcaa*t15191* \
               t15236*t15417*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t15242*t15191*t15461*t15417*t15462*1.6E1)+rho_a[index]* \
               t15429*t15469*(-t15400-t15391+t15483+t15485+t15479+t15201*t15261*(t15400+t15391+t15482-t15483+t15484- \
               t15485+t15477-t15479-t15263*t15470*t15379*t15388*2.0-a1f*c*c0f*t15276*t15386*(8.0/9.0)))-rho_a[index]* \
               t15429*t15492*t15493*2.0+gamma_aa[index]*t15420*t15422*t15424*t15492*t15289*(1.0/4.0)+gamma_aa[index]* \
               t15422*t15424*t15289*t15469*(t15402-t15284+t15487)*(1.0/4.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t15499 = 1/(k*k);
                double t15500 = 1/kp;
                double t15501 = rho_a[index]*2.0;
                double t15502 = 1/(rho_a[index]*rho_a[index]);
                double t15503 = 1/pow(t15501,2.0/3.0);
                double t15504 = pow(rho_a[index],5.0/3.0);
                double t15505 = 1/tau_a[index];
                double t15506 = C_k*t15504*t15505;
                double t15507 = t15506-1.0;
                double t15508 = t15507*t15507;
                double t15509 = t15508*t15508;
                double t15510 = t15509*t15509;
                double t15511 = t15506+1.0;
                double t15512 = gamma_aa[index]*mu_*t15500*t15502*t15503*t15499*(1.0/4.0);
                double t15513 = t15512+1.0;
                double t15514 = 1/(t15513*t15513);
                double t15515 = 1/t15511;
                double t15516 = a_1*t15515*t15507;
                double t15517 = 1/pow(t15511,1.0E1);
                double t15518 = a_10*t15510*t15508*t15517;
                double t15519 = 1/pow(t15511,1.1E1);
                double t15520 = a_11*t15510*t15507*t15508*t15519;
                double t15521 = 1/(t15511*t15511);
                double t15522 = a_2*t15521*t15508;
                double t15523 = 1/(t15511*t15511*t15511);
                double t15524 = a_3*t15523*t15507*t15508;
                double t15525 = 1/(t15511*t15511*t15511*t15511);
                double t15526 = a_4*t15525*t15509;
                double t15527 = 1/(t15511*t15511*t15511*t15511*t15511);
                double t15528 = a_5*t15507*t15509*t15527;
                double t15529 = 1/(t15511*t15511*t15511*t15511*t15511*t15511);
                double t15530 = a_6*t15508*t15509*t15529;
                double t15531 = 1/(t15511*t15511*t15511*t15511*t15511*t15511*t15511);
                double t15532 = a_7*t15531*t15507*t15508*t15509;
                double t15533 = 1/(t15511*t15511*t15511*t15511*t15511*t15511*t15511*t15511);
                double t15534 = a_8*t15510*t15533;
                double t15535 = 1/(t15511*t15511*t15511*t15511*t15511*t15511*t15511*t15511*t15511);
                double t15536 = a_9*t15510*t15507*t15535;
                double t15537 = t15520+t15530+t15522+t15532+t15524+t15516+t15534+t15526+t15518+t15536+t15528+1.0;
                double t15538 = pow(rho_a[index],2.0/3.0);
                double t15539 = 1/rho_a[index];
                double t15540 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
                double t15541 = 1/pow(t15501,5.0/3.0);
                double t15542 = 1/pow(rho_a[index],1.0/3.0);
                double t15543 = c*t15542;
                double t15544 = sqrt(t15543);
                double t15545 = pow(t15543,3.0/2.0);
                double t15546 = c*c;
                double t15547 = 1/pow(rho_a[index],2.0/3.0);
                double t15548 = 1/c0p;
                double t15549 = b1p*t15544;
                double t15550 = b3p*t15545;
                double t15551 = b4p*t15546*t15547;
                double t15552 = b2p*c*t15542;
                double t15553 = t15550+t15551+t15552+t15549;
                double t15554 = 1/t15553;
                double t15555 = t15554*t15548*(1.0/2.0);
                double t15556 = t15555+1.0;
                double t15557 = log(t15556);
                double t15558 = a1p*c*t15542;
                double t15559 = t15558+1.0;
                double t15560 = 1/pow(t15501,1.0/3.0);
                double t15561 = c*t15560;
                double t15562 = gamma_aa[index]*gamma_aa[index];
                double t15563 = gcab*gcab;
                double t15564 = t15563*t15563;
                double t15565 = 1/pow(rho_a[index],8.0/3.0);
                double t15566 = 1/pow(rho_a[index],1.6E1/3.0);
                double t15567 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t15568 = 1/pow(rho_a[index],1.9E1/3.0);
                double t15569 = 1/pow(rho_a[index],3.5E1/3.0);
                double t15570 = gamma_aa[index]*gcab*t15565*2.0;
                double t15571 = t15562*t15563*t15566;
                double t15572 = t15570+t15571+1.0;
                double t15573 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t15574 = gamma_aa[index]*gcab*t15565;
                double t15575 = t15574+1.0;
                double t15576 = gamma_aa[index]*gcab*t15565*3.0;
                double t15577 = gamma_aa[index]*gcab*t15562*t15563*t15567;
                double t15578 = t15562*t15563*t15566*3.0;
                double t15579 = t15576+t15577+t15578+1.0;
                double t15580 = t15562*t15562;
                double t15581 = 1/pow(rho_a[index],3.2E1/3.0);
                double t15582 = gamma_aa[index]*gcab*t15565*4.0;
                double t15583 = gamma_aa[index]*gcab*t15562*t15563*t15567*4.0;
                double t15584 = t15562*t15563*t15566*6.0;
                double t15585 = t15580*t15581*t15564;
                double t15586 = t15582+t15583+t15584+t15585+1.0;
                double t15587 = 1/pow(rho_a[index],1.1E1/3.0);
                double t15588 = 1/(t15572*t15572);
                double t15589 = 1/(t15579*t15579);
                double t15590 = 1/(t15586*t15586);
                double t15591 = gamma_aa[index]*gcab*t15587*(8.0/3.0);
                double t15592 = t15562*t15563*t15568*(8.0/3.0);
                double t15593 = t15591+t15592;
                double t15594 = gcab*t15565;
                double t15595 = gamma_aa[index]*t15563*t15566;
                double t15596 = t15594+t15595;
                double t15597 = gcab*t15565*(3.0/2.0);
                double t15598 = gamma_aa[index]*t15563*t15566*3.0;
                double t15599 = gcab*t15562*t15563*t15567*(3.0/2.0);
                double t15600 = t15597+t15598+t15599;
                double t15601 = gamma_aa[index]*gcab*t15587*4.0;
                double t15602 = gamma_aa[index]*gcab*t15562*t15563*t15573*4.0;
                double t15603 = t15562*t15563*t15568*8.0;
                double t15604 = t15601+t15602+t15603;
                double t15605 = gamma_aa[index]*gcab*t15587*(1.6E1/3.0);
                double t15606 = gamma_aa[index]*gcab*t15562*t15563*t15573*1.6E1;
                double t15607 = t15562*t15563*t15568*1.6E1;
                double t15608 = t15580*t15564*t15569*(1.6E1/3.0);
                double t15609 = t15605+t15606+t15607+t15608;
                double t15610 = gcab*t15565*2.0;
                double t15611 = gamma_aa[index]*t15563*t15566*6.0;
                double t15612 = gcab*t15562*t15563*t15567*6.0;
                double t15613 = gamma_aa[index]*t15562*t15581*t15564*2.0;
                double t15614 = t15610+t15611+t15612+t15613;
                double t15615 = pow(2.0,1.0/3.0);
                double t15616 = t15615*2.0;
                double t15617 = t15616-2.0;
                double t15618 = two_13*2.0;
                double t15619 = t15618-2.0;
                double t15620 = 1/t15619;
                double t15621 = 1/c0f;
                double t15622 = b1f*t15544;
                double t15623 = b3f*t15545;
                double t15624 = b4f*t15546*t15547;
                double t15625 = b2f*c*t15542;
                double t15626 = t15622+t15623+t15624+t15625;
                double t15627 = 1/t15626;
                double t15628 = t15621*t15627*(1.0/2.0);
                double t15629 = t15628+1.0;
                double t15630 = log(t15629);
                double t15631 = a1f*c*t15542;
                double t15632 = t15631+1.0;
                double t15633 = c0f*t15630*t15632*2.0;
                double t15634 = c0p*t15557*t15559*2.0;
                double t15635 = sqrt(t15561);
                double t15636 = b1p*t15635;
                double t15637 = pow(t15561,3.0/2.0);
                double t15638 = b3p*t15637;
                double t15639 = b2p*c*t15560;
                double t15640 = b4p*t15503*t15546;
                double t15641 = t15640+t15636+t15638+t15639;
                double t15642 = 1/t15641;
                double t15643 = t15642*t15548*(1.0/2.0);
                double t15644 = t15643+1.0;
                double t15645 = log(t15644);
                double t15646 = a1p*c*t15560;
                double t15647 = t15646+1.0;
                double t15648 = 1/t15586;
                double t15649 = 1/t15572;
                double t15650 = 1/t15579;
                double t15651 = 1/(t15575*t15575);
                double t15652 = 1/(t15575*t15575*t15575);
                double t15653 = ccab3*gcab*t15604*t15562*t15563*t15567*t15589*(3.0/2.0);
                double t15654 = ccab2*gamma_aa[index]*t15563*t15566*t15593*t15588;
                double t15655 = ccab3*gamma_aa[index]*gcab*t15600*t15562*t15563*t15573*t15589*4.0;
                double t15656 = ccab4*gamma_aa[index]*t15562*t15581*t15590*t15564*t15609*2.0;
                double t15657 = ccab4*t15614*t15580*t15590*t15564*t15569*(1.6E1/3.0);
                double t15658 = ccab2*t15562*t15563*t15568*t15596*t15588*(8.0/3.0);
                double t15659 = gamma_aa[index]*t15563*t15568*4.0;
                double t15660 = 1/(t15572*t15572*t15572);
                double t15661 = 1/(t15579*t15579*t15579);
                double t15662 = 1/(t15586*t15586*t15586);
                double t15663 = 1/pow(t15501,4.0/3.0);
                double t15664 = 1/pow(rho_a[index],4.0/3.0);
                double t15665 = 1/pow(rho_a[index],5.0/3.0);
                double t15666 = 1/sqrt(t15543);
                double t15667 = 1/t15556;
                double t15668 = 1/(t15553*t15553);
                double t15669 = b4p*t15546*t15665*(2.0/3.0);
                double t15670 = b2p*c*t15664*(1.0/3.0);
                double t15671 = b1p*c*t15664*t15666*(1.0/6.0);
                double t15672 = b3p*c*t15544*t15664*(1.0/2.0);
                double t15673 = t15670+t15671+t15672+t15669;
                double t15674 = t15673*t15559*t15667*t15668;
                double t15675 = t15633-t15634;
                double t15676 = t15620*t15617*t15675;
                double t15677 = 1/t15575;
                double t15678 = t15634+t15676;
                double t15679 = gcaa*gcaa;
                double t15680 = t15679*t15679;
                double t15681 = gamma_aa[index]*gcaa*t15565;
                double t15682 = t15681+1.0;
                double t15683 = gamma_aa[index]*gcaa*t15565*3.0;
                double t15684 = gamma_aa[index]*gcaa*t15562*t15567*t15679;
                double t15685 = t15562*t15566*t15679*3.0;
                double t15686 = t15683+t15684+t15685+1.0;
                double t15687 = gamma_aa[index]*gcaa*t15565*4.0;
                double t15688 = gamma_aa[index]*gcaa*t15562*t15567*t15679*4.0;
                double t15689 = t15562*t15566*t15679*6.0;
                double t15690 = t15580*t15581*t15680;
                double t15691 = t15690+t15687+t15688+t15689+1.0;
                double t15692 = gamma_aa[index]*gcaa*t15565*2.0;
                double t15693 = t15562*t15566*t15679;
                double t15694 = t15692+t15693+1.0;
                double t15695 = tau_a[index]-1.0/1.0E20;
                double t15696 = ( (t15695 > 0.0) ?  1.0 : 0.0 ) ;
                double t15697 = tau_a[index]*2.0;
                double t15735 = gamma_aa[index]*t15539*(1.0/4.0);
                double t15698 = -t15735+t15697;
                double t15699 = t15505*t15698*(1.0/2.0);
                double t15700 = t15699-1.0;
                double t15701 = t15700*t15696;
                double t15702 = t15701+1.0;
                double t15703 = 1/t15682;
                double t15704 = 1/t15691;
                double t15705 = 1/t15694;
                double t15706 = 1/t15686;
                double t15707 = 1/(t15682*t15682);
                double t15708 = 1/(t15686*t15686);
                double t15709 = 1/(t15694*t15694);
                double t15710 = gcaa*t15565*3.0;
                double t15711 = gamma_aa[index]*t15566*t15679*6.0;
                double t15712 = gcaa*t15562*t15567*t15679*3.0;
                double t15713 = t15710+t15711+t15712;
                double t15714 = 1/(t15691*t15691);
                double t15715 = gcaa*t15565*4.0;
                double t15716 = gamma_aa[index]*t15566*t15679*1.2E1;
                double t15717 = gcaa*t15562*t15567*t15679*1.2E1;
                double t15718 = gamma_aa[index]*t15562*t15581*t15680*4.0;
                double t15719 = t15715+t15716+t15717+t15718;
                double t15720 = gcaa*t15565*2.0;
                double t15721 = gamma_aa[index]*t15566*t15679*2.0;
                double t15722 = t15720+t15721;
                double t15723 = gamma_aa[index]*gcaa*t15587*(1.6E1/3.0);
                double t15724 = t15562*t15568*t15679*(1.6E1/3.0);
                double t15725 = t15723+t15724;
                double t15726 = gamma_aa[index]*gcaa*t15587*8.0;
                double t15727 = gamma_aa[index]*gcaa*t15562*t15573*t15679*8.0;
                double t15728 = t15562*t15568*t15679*1.6E1;
                double t15729 = t15726+t15727+t15728;
                double t15730 = gamma_aa[index]*gcaa*t15587*(3.2E1/3.0);
                double t15731 = gamma_aa[index]*gcaa*t15562*t15573*t15679*3.2E1;
                double t15732 = t15562*t15568*t15679*3.2E1;
                double t15733 = t15580*t15680*t15569*(3.2E1/3.0);
                double t15734 = t15730+t15731+t15732+t15733;
                double t15736 = 1/t15629;
                double t15737 = 1/(t15626*t15626);
                double t15738 = b4f*t15546*t15665*(2.0/3.0);
                double t15739 = b2f*c*t15664*(1.0/3.0);
                double t15740 = b1f*c*t15664*t15666*(1.0/6.0);
                double t15741 = b3f*c*t15544*t15664*(1.0/2.0);
                double t15742 = t15740+t15741+t15738+t15739;
                double t15743 = a1f*c*c0f*t15630*t15664*(2.0/3.0);
                double t15744 = a1p*c*c0p*t15664*t15557*(2.0/3.0);
                double t15745 = ccaa1*gcaa*t15703*t15565;
                double t15746 = ccaa4*gamma_aa[index]*t15704*t15562*t15581*t15680*4.0;
                double t15747 = ccaa2*gamma_aa[index]*t15705*t15566*t15679*2.0;
                double t15748 = ccaa3*gcaa*t15562*t15706*t15567*t15679*3.0;
                double t15753 = ccaa1*gamma_aa[index]*t15707*t15566*t15679;
                double t15754 = ccaa3*gamma_aa[index]*gcaa*t15713*t15562*t15708*t15567*t15679;
                double t15755 = ccaa4*t15714*t15580*t15581*t15680*t15719;
                double t15756 = ccaa2*t15722*t15562*t15709*t15566*t15679;
                double t15749 = -t15753+t15745-t15754+t15746-t15755+t15747-t15756+t15748;
                double t15750 = t15743-t15744+t15674-t15632*t15742*t15736*t15737;
                double t15751 = t15620*t15750*t15617;
                double t15752 = t15751+t15744-t15674;
                v_rho_a_gamma_aa_[index] = (rho_a[index]*t15678*2.0-c0p*rho_a[index]*t15645*t15647*4.0)*(t15653+t15654+ \
                   t15655+t15656+t15657+t15658-ccab1*gcab*t15587*t15677*(4.0/3.0)+ccab1*gamma_aa[index]*t15651*t15563* \
                   t15568*(8.0/3.0)-ccab2*gamma_aa[index]*t15563*t15568*t15649*4.0+ccab4*t15580*t15581*t15590*t15564* \
                   (gcab*t15587*(1.6E1/3.0)+gamma_aa[index]*t15563*t15568*2.4E1+gamma_aa[index]*t15562*t15564*t15569* \
                   (4.0E1/3.0)+gcab*t15562*t15563*t15573*3.2E1)+ccab2*t15562*t15563*t15566*t15588*(t15659+gcab*t15587* \
                   (8.0/3.0))-ccab4*gamma_aa[index]*t15562*t15564*t15648*t15569*(4.0E1/3.0)-ccab1*gcab*t15562*t15652* \
                   t15563*t15573*(4.0/3.0)-ccab3*gcab*t15650*t15562*t15563*t15573*8.0-ccab4*t15614*t15580*t15581*t15662* \
                   t15564*t15609*2.0-ccab2*t15660*t15562*t15563*t15566*t15593*t15596*2.0+ccab3*gamma_aa[index]*gcab*t15562* \
                   t15563*t15567*t15589*(gcab*t15587*4.0+gamma_aa[index]*t15563*t15568*1.2E1+gcab*t15562*t15563*t15573* \
                   8.0)-ccab3*gamma_aa[index]*gcab*t15600*t15604*t15562*t15661*t15563*t15567*2.0)-(-t15634-t15676+rho_a[index]* \
                   ((1/(t15641*t15641)*t15647*(b2p*c*t15663*(1.0/3.0)+b4p*t15541*t15546*(2.0/3.0)+b3p*c*t15635*t15663* \
                   (1.0/2.0)+b1p*c*1/sqrt(t15561)*t15663*(1.0/6.0)))/t15644-a1p*c*c0p*t15645*t15663*(2.0/3.0))*2.0+rho_a[index]* \
                   (t15744-t15674+t15620*t15617*(t15743+t15674-t15632*t15742*t15736*t15737-a1p*c*c0p*t15664*t15557*(2.0/ \
                   3.0)))+c0p*t15645*t15647*2.0)*(ccab1*gcab*t15565*t15677*(1.0/2.0)-ccab1*gamma_aa[index]*t15651*t15563* \
                   t15566*(1.0/2.0)+ccab2*gamma_aa[index]*t15563*t15566*t15649-ccab4*t15614*t15580*t15581*t15590*t15564- \
                   ccab2*t15562*t15563*t15566*t15596*t15588+ccab4*gamma_aa[index]*t15562*t15581*t15564*t15648*2.0+ccab3* \
                   gcab*t15650*t15562*t15563*t15567*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t15600*t15562*t15563*t15567* \
                   t15589)*2.0-(X-1.0)*(-kp*rho_a[index]*t15514*t15537*(mu_*t15500*t15502*t15541*t15499*(1.0/3.0)+mu_* \
                   t15500*t15503*t15540*t15499*(1.0/2.0))+mu_*t15502*t15503*t15514*t15537*t15499*(1.0/4.0)+mu_*t15503* \
                   t15514*t15539*t15499*(C_k*a_1*t15505*t15515*t15538*(5.0/3.0)-C_k*a_1*t15521*t15505*t15507*t15538*(5.0/ \
                   3.0)+C_k*a_2*t15521*t15505*t15507*t15538*(1.0E1/3.0)-C_k*a_2*t15505*t15523*t15508*t15538*(1.0E1/3.0) \
                   +C_k*a_3*t15505*t15523*t15508*t15538*5.0-C_k*a_4*t15505*t15509*t15527*t15538*(2.0E1/3.0)+C_k*a_5*t15505* \
                   t15509*t15527*t15538*(2.5E1/3.0)-C_k*a_8*t15510*t15505*t15535*t15538*(4.0E1/3.0)+C_k*a_9*t15510*t15505* \
                   t15535*t15538*1.5E1+C_k*a_10*t15510*t15505*t15507*t15517*t15538*(5.0E1/3.0)-C_k*a_10*t15510*t15505* \
                   t15508*t15519*t15538*(5.0E1/3.0)+C_k*a_11*t15510*t15505*t15508*t15519*t15538*(5.5E1/3.0)-C_k*a_3*t15505* \
                   t15507*t15525*t15508*t15538*5.0+C_k*a_4*t15505*t15507*t15525*t15508*t15538*(2.0E1/3.0)-C_k*a_5*t15505* \
                   t15507*t15509*t15529*t15538*(2.5E1/3.0)-C_k*a_6*t15531*t15505*t15508*t15509*t15538*1.0E1+C_k*a_6*t15505* \
                   t15507*t15509*t15529*t15538*1.0E1+C_k*a_7*t15531*t15505*t15508*t15509*t15538*(3.5E1/3.0)-C_k*a_9*t15510* \
                   t15505*t15507*t15517*t15538*1.5E1-C_k*a_11*t15510*1/pow(t15511,1.2E1)*t15505*t15507*t15508*t15538* \
                   (5.5E1/3.0)-C_k*a_7*t15505*t15533*t15507*t15508*t15509*t15538*(3.5E1/3.0)+C_k*a_8*t15505*t15533*t15507* \
                   t15508*t15509*t15538*(4.0E1/3.0))*(1.0/4.0)+mu_*t15503*1/(t15513*t15513*t15513)*t15537*t15539*t15499* \
                   (gamma_aa[index]*mu_*t15500*t15502*t15541*t15499*(1.0/3.0)+gamma_aa[index]*mu_*t15500*t15503*t15540* \
                   t15499*(1.0/2.0))*(1.0/2.0))+(rho_a[index]*(t15634+t15620*t15617*(t15633-c0p*t15557*t15559*2.0))*2.0- \
                   c0p*rho_a[index]*t15645*t15647*4.0)*(t15653+t15654+t15655+t15656+t15657+t15658+ccab1*gamma_aa[index]* \
                   t15651*t15563*t15568*(4.0/3.0)-ccab2*gamma_aa[index]*t15563*t15568*t15649*(4.0/3.0)+ccab4*t15580*t15581* \
                   t15590*t15564*(gamma_aa[index]*t15563*t15568*8.0+gamma_aa[index]*t15562*t15564*t15569*8.0+gcab*t15562* \
                   t15563*t15573*1.6E1)-ccab4*gamma_aa[index]*t15562*t15564*t15648*t15569*8.0+ccab2*gamma_aa[index]*t15562* \
                   t15564*t15569*t15588*(4.0/3.0)-ccab1*gcab*t15562*t15652*t15563*t15573*(4.0/3.0)-ccab3*gcab*t15650* \
                   t15562*t15563*t15573*4.0-ccab4*t15614*t15580*t15581*t15662*t15564*t15609*2.0-ccab2*t15660*t15562*t15563* \
                   t15566*t15593*t15596*2.0+ccab3*gamma_aa[index]*gcab*t15562*t15563*t15567*t15589*(t15659+gcab*t15562* \
                   t15563*t15573*4.0)-ccab3*gamma_aa[index]*gcab*t15600*t15604*t15562*t15661*t15563*t15567*2.0)-t15702* \
                   t15749*t15678+rho_a[index]*t15702*t15752*t15749-rho_a[index]*t15702*t15678*(ccaa1*gcaa*t15703*t15587* \
                   (-8.0/3.0)-ccaa2*gamma_aa[index]*t15705*t15568*t15679*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t15707*t15568* \
                   t15679*8.0+ccaa4*t15714*t15580*t15680*t15719*t15569*(3.2E1/3.0)+ccaa2*t15722*t15562*t15709*t15568* \
                   t15679*(1.6E1/3.0)+ccaa4*t15714*t15580*t15581*t15680*(gcaa*t15587*(3.2E1/3.0)+gamma_aa[index]*t15568* \
                   t15679*6.4E1+gamma_aa[index]*t15562*t15680*t15569*(1.28E2/3.0)+gcaa*t15562*t15573*t15679*9.6E1)-ccaa1* \
                   gcaa*t15562*t15573*1/(t15682*t15682*t15682)*t15679*(1.6E1/3.0)+ccaa2*t15562*t15709*t15566*t15679*(gcaa* \
                   t15587*(1.6E1/3.0)+gamma_aa[index]*t15568*t15679*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t15704*t15562* \
                   t15680*t15569*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t15725*t15709*t15566*t15679*2.0-ccaa3*gcaa*t15562* \
                   t15706*t15573*t15679*2.4E1+ccaa4*gamma_aa[index]*t15714*t15562*t15581*t15680*t15734*4.0+ccaa3*gcaa* \
                   t15562*t15708*t15567*t15729*t15679*3.0-ccaa4*t15580*t15581*t15680*t15734*1/(t15691*t15691*t15691)* \
                   t15719*2.0-ccaa2*t15722*t15562*t15725*t15566*1/(t15694*t15694*t15694)*t15679*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t15562*t15708*t15567*t15679*(gcaa*t15587*8.0+gamma_aa[index]*t15568*t15679*3.2E1+gcaa*t15562* \
                   t15573*t15679*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t15713*t15562*t15573*t15708*t15679*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*t15713*t15562*t15567*t15729*1/(t15686*t15686*t15686)*t15679*2.0)-t15505*t15752*t15696*(ccaa0+ \
                   ccaa1*gamma_aa[index]*gcaa*t15703*t15565+ccaa4*t15704*t15580*t15581*t15680+ccaa2*t15705*t15562*t15566* \
                   t15679+ccaa3*gamma_aa[index]*gcaa*t15562*t15706*t15567*t15679)*(1.0/8.0)-t15505*t15678*t15696*(ccaa1* \
                   gamma_aa[index]*gcaa*t15703*t15587*(8.0/3.0)+ccaa4*t15704*t15580*t15680*t15569*(3.2E1/3.0)+ccaa2*t15705* \
                   t15562*t15568*t15679*(1.6E1/3.0)-ccaa1*t15562*t15707*t15568*t15679*(8.0/3.0)-ccaa4*t15714*t15580*t15581* \
                   t15680*t15734-ccaa2*t15562*t15725*t15709*t15566*t15679+ccaa3*gamma_aa[index]*gcaa*t15562*t15706*t15573* \
                   t15679*8.0-ccaa3*gamma_aa[index]*gcaa*t15562*t15708*t15567*t15729*t15679)*(1.0/8.0)-gamma_aa[index]* \
                   t15505*t15539*t15749*t15678*t15696*(1.0/8.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t15758 = 1/pow(rho_a[index],1.0/3.0);
                double t15759 = c*t15758;
                double t15760 = sqrt(t15759);
                double t15761 = pow(t15759,3.0/2.0);
                double t15762 = c*c;
                double t15763 = 1/pow(rho_a[index],2.0/3.0);
                double t15764 = 1/c0p;
                double t15765 = b1p*t15760;
                double t15766 = b3p*t15761;
                double t15767 = b4p*t15762*t15763;
                double t15768 = b2p*c*t15758;
                double t15769 = t15765+t15766+t15767+t15768;
                double t15770 = 1/t15769;
                double t15771 = t15770*t15764*(1.0/2.0);
                double t15772 = t15771+1.0;
                double t15773 = log(t15772);
                double t15774 = a1p*c*t15758;
                double t15775 = t15774+1.0;
                double t15776 = rho_a[index]*2.0;
                double t15777 = 1/pow(t15776,1.0/3.0);
                double t15778 = c*t15777;
                double t15779 = gcab*gcab;
                double t15780 = 1/pow(rho_a[index],1.6E1/3.0);
                double t15781 = 1/pow(rho_a[index],8.0/3.0);
                double t15782 = gamma_aa[index]*gamma_aa[index];
                double t15783 = t15779*t15779;
                double t15784 = 1/pow(rho_a[index],3.2E1/3.0);
                double t15785 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t15786 = gamma_aa[index]*gcab*t15781;
                double t15787 = t15786+1.0;
                double t15788 = gamma_aa[index]*gcab*t15781*2.0;
                double t15789 = t15780*t15782*t15779;
                double t15790 = t15788+t15789+1.0;
                double t15791 = gamma_aa[index]*gcab*t15781*3.0;
                double t15792 = gamma_aa[index]*gcab*t15782*t15785*t15779;
                double t15793 = t15780*t15782*t15779*3.0;
                double t15794 = t15791+t15792+t15793+1.0;
                double t15795 = t15782*t15782;
                double t15811 = gcab*t15781*2.0;
                double t15812 = gamma_aa[index]*t15780*t15779*6.0;
                double t15813 = gcab*t15782*t15785*t15779*6.0;
                double t15814 = gamma_aa[index]*t15782*t15783*t15784*2.0;
                double t15796 = t15811+t15812+t15813+t15814;
                double t15797 = gamma_aa[index]*gcab*t15781*4.0;
                double t15798 = gamma_aa[index]*gcab*t15782*t15785*t15779*4.0;
                double t15799 = t15780*t15782*t15779*6.0;
                double t15800 = t15783*t15784*t15795;
                double t15801 = t15800+t15797+t15798+t15799+1.0;
                double t15804 = gcab*t15781;
                double t15805 = gamma_aa[index]*t15780*t15779;
                double t15802 = t15804+t15805;
                double t15803 = 1/(t15794*t15794);
                double t15806 = 1/(t15790*t15790);
                double t15807 = gcab*t15781*(3.0/2.0);
                double t15808 = gamma_aa[index]*t15780*t15779*3.0;
                double t15809 = gcab*t15782*t15785*t15779*(3.0/2.0);
                double t15810 = t15807+t15808+t15809;
                double t15815 = 1/(t15801*t15801);
                double t15816 = pow(2.0,1.0/3.0);
                double t15817 = t15816*2.0;
                double t15818 = t15817-2.0;
                double t15819 = two_13*2.0;
                double t15820 = t15819-2.0;
                double t15821 = 1/t15820;
                double t15822 = 1/c0f;
                double t15823 = b1f*t15760;
                double t15824 = b3f*t15761;
                double t15825 = b4f*t15762*t15763;
                double t15826 = b2f*c*t15758;
                double t15827 = t15823+t15824+t15825+t15826;
                double t15828 = 1/t15827;
                double t15829 = t15822*t15828*(1.0/2.0);
                double t15830 = t15829+1.0;
                double t15831 = log(t15830);
                double t15832 = a1f*c*t15758;
                double t15833 = t15832+1.0;
                double t15834 = c0f*t15831*t15833*2.0;
                double t15835 = c0p*t15773*t15775*2.0;
                double t15836 = gcaa*gcaa;
                double t15837 = t15836*t15836;
                double t15838 = gamma_aa[index]*gcaa*t15781;
                double t15839 = t15838+1.0;
                double t15840 = gamma_aa[index]*gcaa*t15781*2.0;
                double t15841 = t15780*t15782*t15836;
                double t15842 = t15840+t15841+1.0;
                double t15843 = gamma_aa[index]*gcaa*t15781*3.0;
                double t15844 = gamma_aa[index]*gcaa*t15782*t15836*t15785;
                double t15845 = t15780*t15782*t15836*3.0;
                double t15846 = t15843+t15844+t15845+1.0;
                double t15862 = gcaa*t15781*4.0;
                double t15863 = gamma_aa[index]*t15780*t15836*1.2E1;
                double t15864 = gcaa*t15782*t15836*t15785*1.2E1;
                double t15865 = gamma_aa[index]*t15782*t15837*t15784*4.0;
                double t15847 = t15862+t15863+t15864+t15865;
                double t15848 = gamma_aa[index]*gcaa*t15781*4.0;
                double t15849 = gamma_aa[index]*gcaa*t15782*t15836*t15785*4.0;
                double t15850 = t15780*t15782*t15836*6.0;
                double t15851 = t15837*t15784*t15795;
                double t15852 = t15850+t15851+t15848+t15849+1.0;
                double t15855 = gcaa*t15781*2.0;
                double t15856 = gamma_aa[index]*t15780*t15836*2.0;
                double t15853 = t15855+t15856;
                double t15854 = 1/(t15846*t15846);
                double t15857 = 1/(t15842*t15842);
                double t15858 = gcaa*t15781*3.0;
                double t15859 = gamma_aa[index]*t15780*t15836*6.0;
                double t15860 = gcaa*t15782*t15836*t15785*3.0;
                double t15861 = t15860+t15858+t15859;
                double t15866 = 1/(t15852*t15852);
                double t15867 = 1/tau_a[index];
                double t15868 = tau_a[index]-1.0/1.0E20;
                double t15869 = ( (t15868 > 0.0) ?  1.0 : 0.0 ) ;
                double t15870 = t15834-t15835;
                double t15871 = t15821*t15870*t15818;
                double t15872 = t15835+t15871;
                double t15873 = 1/t15852;
                double t15874 = 1/t15842;
                double t15875 = 1/t15846;
                double t15876 = 1/(t15839*t15839);
                double t15877 = 1/kp;
                double t15878 = 1/pow(t15776,2.0/3.0);
                double t15879 = pow(rho_a[index],5.0/3.0);
                double t15880 = C_k*t15867*t15879;
                double t15881 = t15880-1.0;
                double t15882 = t15881*t15881;
                double t15883 = t15882*t15882;
                double t15884 = t15883*t15883;
                double t15885 = t15880+1.0;
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t15835+t15821*t15818*(t15834-c0p*t15773*t15775*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t15764*(1.0/2.0))/(b1p*sqrt(t15778)+b3p*pow(t15778,3.0/2.0)+b2p*c*t15777+ \
                   b4p*t15762*t15878)+1.0)*(a1p*c*t15777+1.0)*4.0)*((ccab2*t15780*t15779*(1.0/2.0))/t15790-ccab1*t15780* \
                   1/(t15787*t15787)*t15779*(1.0/2.0)-ccab2*t15806*t15782*t15783*t15784*(1.0/2.0)+(ccab4*t15782*t15783* \
                   t15784*3.0)/t15801-ccab4*t15815*t15783*t15784*t15795*(t15780*t15779*3.0+t15782*t15783*t15784*3.0+gamma_aa[index]* \
                   gcab*t15785*t15779*6.0)+(ccab3*gamma_aa[index]*gcab*t15785*t15779*(3.0/2.0))/t15794+ccab1*gamma_aa[index]* \
                   gcab*t15785*1/(t15787*t15787*t15787)*t15779*(1.0/2.0)+ccab2*(t15802*t15802)*t15780*1/(t15790*t15790* \
                   t15790)*t15782*t15779*2.0+ccab4*1/(t15801*t15801*t15801)*t15783*t15784*t15795*(t15796*t15796)*2.0- \
                   ccab2*gamma_aa[index]*t15802*t15806*t15780*t15779*2.0-ccab4*gamma_aa[index]*t15815*t15782*t15783*t15784* \
                   t15796*4.0-ccab3*gcab*t15810*t15803*t15782*t15785*t15779*3.0-ccab3*gamma_aa[index]*gcab*t15803*t15782* \
                   t15785*t15779*(t15780*t15779*(3.0/2.0)+gamma_aa[index]*gcab*t15785*t15779*(3.0/2.0))+ccab3*gamma_aa[index]* \
                   gcab*(t15810*t15810)*t15782*t15785*1/(t15794*t15794*t15794)*t15779*2.0)*4.0+t15872*t15867*t15869*((ccaa1* \
                   gcaa*t15781)/t15839+ccaa2*gamma_aa[index]*t15780*t15836*t15874*2.0-ccaa1*gamma_aa[index]*t15780*t15836* \
                   t15876-ccaa2*t15780*t15853*t15782*t15836*t15857-ccaa4*t15837*t15784*t15847*t15866*t15795+ccaa4*gamma_aa[index]* \
                   t15782*t15837*t15873*t15784*4.0+ccaa3*gcaa*t15782*t15836*t15785*t15875*3.0-ccaa3*gamma_aa[index]*gcaa* \
                   t15861*t15782*t15836*t15854*t15785)*(1.0/2.0)-rho_a[index]*t15872*(t15869*(t15867*(tau_a[index]*2.0- \
                   (gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0)+1.0)*(ccaa2*t15780*t15836*t15874*2.0-ccaa1* \
                   t15780*t15836*t15876*2.0-ccaa2*t15782*t15837*t15784*t15857*2.0+ccaa4*t15782*t15837*t15873*t15784*1.2E1- \
                   ccaa4*t15837*t15784*t15866*t15795*(t15780*t15836*1.2E1+t15782*t15837*t15784*1.2E1+gamma_aa[index]* \
                   gcaa*t15836*t15785*2.4E1)+ccaa1*gamma_aa[index]*gcaa*t15836*t15785*1/(t15839*t15839*t15839)*2.0+ccaa2* \
                   1/(t15842*t15842*t15842)*t15780*(t15853*t15853)*t15782*t15836*2.0+ccaa4*1/(t15852*t15852*t15852)*t15837* \
                   t15784*(t15847*t15847)*t15795*2.0+ccaa3*gamma_aa[index]*gcaa*t15836*t15785*t15875*6.0-ccaa2*gamma_aa[index]* \
                   t15780*t15853*t15836*t15857*4.0-ccaa4*gamma_aa[index]*t15782*t15837*t15784*t15847*t15866*8.0-ccaa3* \
                   gcaa*t15861*t15782*t15836*t15854*t15785*6.0-ccaa3*gamma_aa[index]*gcaa*t15782*t15836*t15854*t15785* \
                   (t15780*t15836*6.0+gamma_aa[index]*gcaa*t15836*t15785*6.0)+ccaa3*gamma_aa[index]*gcaa*(t15861*t15861) \
                   *t15782*t15836*1/(t15846*t15846*t15846)*t15785*2.0)*2.0+1/(k*k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]* \
                   rho_a[index])*1/pow(t15776,4.0/3.0)*t15877*1/pow(gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index]) \
                   *t15877*t15878*(1.0/4.0)+1.0,3.0)*(X-1.0)*((a_1*t15881)/t15885+a_2*t15882*1/(t15885*t15885)+a_4*t15883* \
                   1/(t15885*t15885*t15885*t15885)+a_8*t15884*1/(t15885*t15885*t15885*t15885*t15885*t15885*t15885*t15885) \
                   +a_10*t15882*t15884*1/pow(t15885,1.0E1)+a_3*t15881*t15882*1/(t15885*t15885*t15885)+a_5*t15881*t15883* \
                   1/(t15885*t15885*t15885*t15885*t15885)+a_6*t15882*t15883*1/(t15885*t15885*t15885*t15885*t15885*t15885) \
                   +a_9*t15881*t15884*1/(t15885*t15885*t15885*t15885*t15885*t15885*t15885*t15885*t15885)+a_11*t15881* \
                   t15882*t15884*1/pow(t15885,1.1E1)+a_7*t15881*t15882*t15883*1/(t15885*t15885*t15885*t15885*t15885*t15885* \
                   t15885)+1.0)*(1.0/4.0);
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t15887 = pow(rho_a[index],5.0/3.0);
                double t15888 = 1/(tau_a[index]*tau_a[index]);
                double t15889 = 1/tau_a[index];
                double t15890 = C_k*t15887*t15889;
                double t15891 = t15890+1.0;
                double t15892 = t15890-1.0;
                double t15893 = 1/(t15891*t15891);
                double t15894 = t15892*t15892;
                double t15895 = t15894*t15894;
                double t15896 = t15895*t15895;
                double t15897 = 1/pow(t15891,1.1E1);
                double t15898 = 1/(t15891*t15891*t15891);
                double t15899 = 1/(t15891*t15891*t15891*t15891);
                double t15900 = 1/(t15891*t15891*t15891*t15891*t15891);
                double t15901 = 1/(t15891*t15891*t15891*t15891*t15891*t15891);
                double t15902 = 1/(t15891*t15891*t15891*t15891*t15891*t15891*t15891);
                double t15903 = 1/(t15891*t15891*t15891*t15891*t15891*t15891*t15891*t15891);
                double t15904 = 1/(t15891*t15891*t15891*t15891*t15891*t15891*t15891*t15891*t15891);
                double t15905 = 1/pow(t15891,1.0E1);
                double t15906 = 1/(k*k);
                double t15907 = 1/kp;
                double t15908 = 1/(rho_a[index]*rho_a[index]);
                double t15909 = rho_a[index]*2.0;
                double t15910 = 1/pow(t15909,2.0/3.0);
                double t15911 = gamma_aa[index]*mu_*t15910*t15906*t15907*t15908*(1.0/4.0);
                double t15912 = t15911+1.0;
                double t15913 = 1/t15912;
                double t15914 = kp-kp*t15913+1.0;
                double t15915 = C_k*C_k;
                double t15916 = pow(rho_a[index],7.0/3.0);
                double t15917 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t15918 = 1/t15891;
                double t15919 = 1/pow(t15891,1.2E1);
                double t15920 = pow(rho_a[index],2.0/3.0);
                double t15921 = C_k*a_1*t15918*t15887*t15888;
                double t15922 = C_k*a_2*t15892*t15893*t15887*t15888*2.0;
                double t15923 = C_k*a_10*t15905*t15892*t15887*t15896*t15888*1.0E1;
                double t15924 = C_k*a_11*t15894*t15887*t15896*t15888*t15897*1.1E1;
                double t15925 = C_k*a_3*t15894*t15887*t15888*t15898*3.0;
                double t15926 = C_k*a_4*t15892*t15894*t15887*t15888*t15899*4.0;
                double t15927 = C_k*a_5*t15900*t15895*t15887*t15888*5.0;
                double t15928 = C_k*a_6*t15901*t15892*t15895*t15887*t15888*6.0;
                double t15929 = C_k*a_7*t15902*t15894*t15895*t15887*t15888*7.0;
                double t15930 = C_k*a_8*t15903*t15892*t15894*t15895*t15887*t15888*8.0;
                double t15931 = C_k*a_9*t15904*t15887*t15896*t15888*9.0;
                double t15932 = t15921+t15930+t15922+t15931+t15923+t15924+t15925+t15926+t15927+t15928+t15929-C_k* \
                   a_1*t15892*t15893*t15887*t15888-C_k*a_2*t15894*t15887*t15888*t15898*2.0-C_k*a_4*t15900*t15895*t15887* \
                   t15888*4.0-C_k*a_8*t15904*t15887*t15896*t15888*8.0-C_k*a_10*t15894*t15887*t15896*t15888*t15897*1.0E1- \
                   C_k*a_3*t15892*t15894*t15887*t15888*t15899*3.0-C_k*a_5*t15901*t15892*t15895*t15887*t15888*5.0-C_k* \
                   a_6*t15902*t15894*t15895*t15887*t15888*6.0-C_k*a_9*t15905*t15892*t15887*t15896*t15888*9.0-C_k*a_11* \
                   t15892*t15919*t15894*t15887*t15896*t15888*1.1E1-C_k*a_7*t15903*t15892*t15894*t15895*t15887*t15888* \
                   7.0;
                double t15933 = 1/pow(rho_a[index],1.0/3.0);
                double t15934 = c*t15933;
                double t15935 = sqrt(t15934);
                double t15936 = pow(t15934,3.0/2.0);
                double t15937 = c*c;
                double t15938 = 1/pow(rho_a[index],2.0/3.0);
                double t15939 = 1/c0p;
                double t15940 = b1p*t15935;
                double t15941 = b3p*t15936;
                double t15942 = b4p*t15937*t15938;
                double t15943 = b2p*c*t15933;
                double t15944 = t15940+t15941+t15942+t15943;
                double t15945 = 1/t15944;
                double t15946 = t15945*t15939*(1.0/2.0);
                double t15947 = t15946+1.0;
                double t15948 = log(t15947);
                double t15949 = a1p*c*t15933;
                double t15950 = t15949+1.0;
                double t15951 = tau_a[index]-1.0/1.0E20;
                double t15952 = tau_a[index]*2.0;
                double t15953 = 1/rho_a[index];
                double t15984 = gamma_aa[index]*t15953*(1.0/4.0);
                double t15954 = t15952-t15984;
                double t15955 = gamma_aa[index]*gamma_aa[index];
                double t15956 = gcaa*gcaa;
                double t15957 = t15955*t15955;
                double t15958 = t15956*t15956;
                double t15959 = 1/pow(rho_a[index],3.2E1/3.0);
                double t15960 = 1/pow(rho_a[index],8.0/3.0);
                double t15961 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t15962 = 1/pow(rho_a[index],1.6E1/3.0);
                double t15963 = pow(2.0,1.0/3.0);
                double t15964 = t15963*2.0;
                double t15965 = t15964-2.0;
                double t15966 = two_13*2.0;
                double t15967 = t15966-2.0;
                double t15968 = 1/t15967;
                double t15969 = 1/c0f;
                double t15970 = b1f*t15935;
                double t15971 = b3f*t15936;
                double t15972 = b4f*t15937*t15938;
                double t15973 = b2f*c*t15933;
                double t15974 = t15970+t15971+t15972+t15973;
                double t15975 = 1/t15974;
                double t15976 = t15975*t15969*(1.0/2.0);
                double t15977 = t15976+1.0;
                double t15978 = log(t15977);
                double t15979 = a1f*c*t15933;
                double t15980 = t15979+1.0;
                double t15981 = c0f*t15980*t15978*2.0;
                double t15982 = c0p*t15950*t15948*2.0;
                double t15983 = ( (t15951 > 0.0) ?  1.0 : 0.0 ) ;
                double t16014 = t15954*t15888*(1.0/2.0);
                double t15985 = t15889-t16014;
                double t15986 = t15983*t15985;
                double t15987 = 0.0 ;
                double t15988 = t15954*t15889*(1.0/2.0);
                double t15989 = t15988-1.0;
                double t15990 = t15987*t15989;
                double t15991 = t15990+t15986;
                double t15992 = gamma_aa[index]*gcaa*t15960*4.0;
                double t15993 = gamma_aa[index]*gcaa*t15961*t15955*t15956*4.0;
                double t15994 = t15962*t15955*t15956*6.0;
                double t15995 = t15957*t15958*t15959;
                double t15996 = t15992+t15993+t15994+t15995+1.0;
                double t15997 = 1/t15996;
                double t15998 = gamma_aa[index]*gcaa*t15960;
                double t15999 = t15998+1.0;
                double t16000 = 1/t15999;
                double t16001 = gamma_aa[index]*gcaa*t15960*3.0;
                double t16002 = gamma_aa[index]*gcaa*t15961*t15955*t15956;
                double t16003 = t15962*t15955*t15956*3.0;
                double t16004 = t16001+t16002+t16003+1.0;
                double t16005 = 1/t16004;
                double t16006 = gamma_aa[index]*gcaa*t15960*2.0;
                double t16007 = t15962*t15955*t15956;
                double t16008 = t16006+t16007+1.0;
                double t16009 = 1/t16008;
                double t16010 = 1/pow(rho_a[index],1.9E1/3.0);
                double t16011 = 1/pow(rho_a[index],1.1E1/3.0);
                double t16012 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t16013 = 1/pow(rho_a[index],3.5E1/3.0);
                double t16015 = 1/pow(rho_a[index],4.0/3.0);
                double t16016 = 1/pow(rho_a[index],5.0/3.0);
                double t16017 = 1/sqrt(t15934);
                double t16018 = 1/t15947;
                double t16019 = 1/(t15944*t15944);
                double t16020 = b4p*t15937*t16016*(2.0/3.0);
                double t16021 = b2p*c*t16015*(1.0/3.0);
                double t16022 = b1p*c*t16015*t16017*(1.0/6.0);
                double t16023 = b3p*c*t15935*t16015*(1.0/2.0);
                double t16024 = t16020+t16021+t16022+t16023;
                double t16025 = t15950*t16024*t16018*t16019;
                double t16026 = ccaa4*t15957*t15958*t15959*t15997;
                double t16027 = ccaa1*gamma_aa[index]*gcaa*t15960*t16000;
                double t16028 = ccaa3*gamma_aa[index]*gcaa*t15961*t15955*t15956*t16005;
                double t16029 = ccaa2*t15962*t15955*t15956*t16009;
                double t16030 = ccaa0+t16026+t16027+t16028+t16029;
                double t16031 = t15981-t15982;
                double t16032 = t15965*t15968*t16031;
                double t16033 = t15982+t16032;
                v_rho_a_tau_a_[index] = (X-1.0)*(t15914*t15932+rho_a[index]*t15914*(C_k*a_1*t15920*t15918*t15888* \
                   (5.0/3.0)-a_1*t15915*t15916*t15917*t15893*(1.0E1/3.0)+a_2*t15915*t15916*t15917*t15893*(1.0E1/3.0)+ \
                   a_1*t15915*t15916*t15917*t15892*t15898*(1.0E1/3.0)+a_10*t15905*t15915*t15916*t15917*t15896*1.5E2-a_2* \
                   t15915*t15916*t15917*t15892*t15898*(4.0E1/3.0)+a_2*t15915*t15916*t15917*t15894*t15899*1.0E1+a_3*t15915* \
                   t15916*t15917*t15892*t15898*1.0E1-a_3*t15915*t15916*t15917*t15894*t15899*3.0E1+a_4*t15901*t15915*t15916* \
                   t15917*t15895*(1.0E2/3.0)+a_4*t15915*t15916*t15917*t15894*t15899*2.0E1-a_5*t15901*t15915*t15916*t15917* \
                   t15895*(2.5E2/3.0)+a_6*t15901*t15915*t15916*t15917*t15895*5.0E1+a_8*t15905*t15915*t15916*t15917*t15896* \
                   1.2E2-a_9*t15905*t15915*t15916*t15917*t15896*2.7E2-C_k*a_1*t15920*t15892*t15893*t15888*(5.0/3.0)+C_k* \
                   a_2*t15920*t15892*t15893*t15888*(1.0E1/3.0)-C_k*a_2*t15920*t15894*t15888*t15898*(1.0E1/3.0)+C_k*a_3* \
                   t15920*t15894*t15888*t15898*5.0-C_k*a_4*t15900*t15920*t15895*t15888*(2.0E1/3.0)+C_k*a_5*t15900*t15920* \
                   t15895*t15888*(2.5E1/3.0)-C_k*a_8*t15920*t15904*t15896*t15888*(4.0E1/3.0)+C_k*a_9*t15920*t15904*t15896* \
                   t15888*1.5E1+C_k*a_10*t15920*t15905*t15892*t15896*t15888*(5.0E1/3.0)-C_k*a_10*t15920*t15894*t15896* \
                   t15888*t15897*(5.0E1/3.0)+C_k*a_11*t15920*t15894*t15896*t15888*t15897*(5.5E1/3.0)-C_k*a_3*t15920*t15892* \
                   t15894*t15888*t15899*5.0+C_k*a_4*t15920*t15892*t15894*t15888*t15899*(2.0E1/3.0)-C_k*a_5*t15901*t15920* \
                   t15892*t15895*t15888*(2.5E1/3.0)+C_k*a_6*t15901*t15920*t15892*t15895*t15888*1.0E1-C_k*a_6*t15902*t15920* \
                   t15894*t15895*t15888*1.0E1+C_k*a_7*t15902*t15920*t15894*t15895*t15888*(3.5E1/3.0)-C_k*a_9*t15920*t15905* \
                   t15892*t15896*t15888*1.5E1+a_10*t15915*t15916*t15917*t15919*t15894*t15896*(5.5E2/3.0)-a_11*t15915* \
                   t15916*t15917*t15919*t15894*t15896*(1.21E3/3.0)-a_10*t15915*t15916*t15917*t15892*t15896*t15897*(1.0E3/ \
                   3.0)+a_11*t15915*t15916*t15917*t15892*t15896*t15897*(5.5E2/3.0)+a_3*t15900*t15915*t15916*t15917*t15892* \
                   t15894*2.0E1-a_4*t15900*t15915*t15916*t15917*t15892*t15894*(1.6E2/3.0)+a_5*t15900*t15915*t15916*t15917* \
                   t15892*t15894*(1.0E2/3.0)+a_5*t15902*t15915*t15916*t15917*t15892*t15895*5.0E1-a_6*t15902*t15915*t15916* \
                   t15917*t15892*t15895*1.2E2+a_6*t15903*t15915*t15916*t15917*t15894*t15895*7.0E1+a_7*t15902*t15915*t15916* \
                   t15917*t15892*t15895*7.0E1-a_7*t15903*t15915*t15916*t15917*t15894*t15895*(4.9E2/3.0)+a_8*t15903*t15915* \
                   t15916*t15917*t15894*t15895*(2.8E2/3.0)+a_9*t15915*t15916*t15917*t15892*t15896*t15897*1.5E2+a_11*t15915* \
                   t15916*t15917*1/pow(t15891,1.3E1)*t15892*t15894*t15896*2.2E2-C_k*a_11*t15920*t15892*t15919*t15894* \
                   t15896*t15888*(5.5E1/3.0)-C_k*a_7*t15920*t15903*t15892*t15894*t15895*t15888*(3.5E1/3.0)+C_k*a_8*t15920* \
                   t15903*t15892*t15894*t15895*t15888*(4.0E1/3.0)+a_7*t15904*t15915*t15916*t15917*t15892*t15894*t15895* \
                   (2.8E2/3.0)-a_8*t15904*t15915*t15916*t15917*t15892*t15894*t15895*(6.4E2/3.0)+a_9*t15904*t15915*t15916* \
                   t15917*t15892*t15894*t15895*1.2E2)-kp*rho_a[index]*1/(t15912*t15912)*t15932*(gamma_aa[index]*mu_*1/ \
                   (rho_a[index]*rho_a[index]*rho_a[index])*t15910*t15906*t15907*(1.0/2.0)+gamma_aa[index]*mu_*t15906* \
                   t15907*t15908*1/pow(t15909,5.0/3.0)*(1.0/3.0)))-t15991*t16030*(t15982+t15965*t15968*(t15981-c0p*t15950* \
                   t15948*2.0))+rho_a[index]*t15991*t16030*(-t16025+t15965*t15968*(t16025-(t15980*1/(t15974*t15974)*(b2f* \
                   c*t16015*(1.0/3.0)+b4f*t15937*t16016*(2.0/3.0)+b1f*c*t16015*t16017*(1.0/6.0)+b3f*c*t15935*t16015*(1.0/ \
                   2.0)))/t15977+a1f*c*c0f*t15978*t16015*(2.0/3.0)-a1p*c*c0p*t15948*t16015*(2.0/3.0))+a1p*c*c0p*t15948* \
                   t16015*(2.0/3.0))+rho_a[index]*t15991*t16033*(ccaa1*gamma_aa[index]*gcaa*t16000*t16011*(8.0/3.0)+ccaa4* \
                   t15957*t15958*t15997*t16013*(3.2E1/3.0)+ccaa2*t15955*t15956*t16010*t16009*(1.6E1/3.0)-ccaa1*t15955* \
                   t15956*1/(t15999*t15999)*t16010*(8.0/3.0)-ccaa2*t15962*t15955*t15956*1/(t16008*t16008)*(gamma_aa[index]* \
                   gcaa*t16011*(1.6E1/3.0)+t15955*t15956*t16010*(1.6E1/3.0))-ccaa4*t15957*t15958*t15959*1/(t15996*t15996) \
                   *(gamma_aa[index]*gcaa*t16011*(3.2E1/3.0)+t15955*t15956*t16010*3.2E1+t15957*t15958*t16013*(3.2E1/3.0) \
                   +gamma_aa[index]*gcaa*t15955*t15956*t16012*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t15955*t15956*t16012* \
                   t16005*8.0-ccaa3*gamma_aa[index]*gcaa*t15961*t15955*t15956*1/(t16004*t16004)*(gamma_aa[index]*gcaa* \
                   t16011*8.0+t15955*t15956*t16010*1.6E1+gamma_aa[index]*gcaa*t15955*t15956*t16012*8.0))+gamma_aa[index]* \
                   t15953*t15983*t15888*t16030*t16033*(1.0/8.0)-gamma_aa[index]*t15953*t15987*t15889*t16030*t16033*(1.0/ \
                   8.0);
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t16035 = 1/pow(rho_a[index],1.0/3.0);
                double t16036 = c*t16035;
                double t16037 = sqrt(t16036);
                double t16038 = pow(t16036,3.0/2.0);
                double t16039 = c*c;
                double t16040 = 1/pow(rho_a[index],2.0/3.0);
                double t16041 = 1/c0p;
                double t16042 = b1p*t16037;
                double t16043 = b3p*t16038;
                double t16044 = b4p*t16040*t16039;
                double t16045 = b2p*c*t16035;
                double t16046 = t16042+t16043+t16044+t16045;
                double t16047 = 1/t16046;
                double t16048 = t16041*t16047*(1.0/2.0);
                double t16049 = t16048+1.0;
                double t16050 = log(t16049);
                double t16051 = a1p*c*t16035;
                double t16052 = t16051+1.0;
                double t16053 = 1/tau_a[index];
                double t16054 = tau_a[index]*2.0;
                double t16055 = 1/rho_a[index];
                double t16059 = gamma_aa[index]*t16055*(1.0/4.0);
                double t16056 = t16054-t16059;
                double t16057 = tau_a[index]-1.0/1.0E20;
                double t16058 = 1/(tau_a[index]*tau_a[index]);
                double t16060 = gamma_aa[index]*gamma_aa[index];
                double t16061 = gcaa*gcaa;
                double t16062 = t16060*t16060;
                double t16063 = t16061*t16061;
                double t16064 = 1/pow(rho_a[index],3.2E1/3.0);
                double t16065 = 1/pow(rho_a[index],8.0/3.0);
                double t16066 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t16067 = 1/pow(rho_a[index],1.6E1/3.0);
                double t16068 = C_k*C_k;
                double t16069 = pow(rho_a[index],1.0E1/3.0);
                double t16070 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t16071 = pow(rho_a[index],5.0/3.0);
                double t16072 = C_k*t16053*t16071;
                double t16073 = t16072+1.0;
                double t16074 = 1/(t16073*t16073);
                double t16075 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t16076 = t16072-1.0;
                double t16077 = t16076*t16076;
                double t16078 = t16077*t16077;
                double t16079 = t16078*t16078;
                double t16080 = 1/pow(t16073,1.1E1);
                double t16081 = 1/pow(t16073,1.2E1);
                double t16082 = 1/(t16073*t16073*t16073*t16073);
                double t16083 = 1/(t16073*t16073*t16073*t16073*t16073);
                double t16084 = 1/(t16073*t16073*t16073*t16073*t16073*t16073);
                double t16085 = 1/(t16073*t16073*t16073*t16073*t16073*t16073*t16073);
                double t16086 = 1/(t16073*t16073*t16073*t16073*t16073*t16073*t16073*t16073);
                double t16087 = 1/(t16073*t16073*t16073*t16073*t16073*t16073*t16073*t16073*t16073);
                double t16088 = 1/pow(t16073,1.0E1);
                double t16089 = 1/(t16073*t16073*t16073);
                v_tau_a_tau_a_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t16070*t16074*t16068*t16069* \
                   -2.0+a_2*t16070*t16074*t16068*t16069*2.0+(C_k*a_1*t16071*t16075*2.0)/t16073+a_1*t16070*t16076*t16068* \
                   t16069*t16089*2.0+a_10*t16070*t16068*t16069*t16079*t16088*9.0E1+a_2*t16070*t16082*t16068*t16077*t16069* \
                   6.0-a_2*t16070*t16076*t16068*t16069*t16089*8.0-a_3*t16070*t16082*t16068*t16077*t16069*1.8E1+a_3*t16070* \
                   t16076*t16068*t16069*t16089*6.0+a_4*t16070*t16082*t16068*t16077*t16069*1.2E1+a_4*t16070*t16084*t16068* \
                   t16069*t16078*2.0E1-a_5*t16070*t16084*t16068*t16069*t16078*5.0E1+a_6*t16070*t16084*t16068*t16069*t16078* \
                   3.0E1+a_8*t16070*t16068*t16069*t16079*t16088*7.2E1-a_9*t16070*t16068*t16069*t16079*t16088*1.62E2-C_k* \
                   a_1*t16071*t16074*t16075*t16076*2.0+C_k*a_2*t16071*t16074*t16075*t16076*4.0-C_k*a_2*t16071*t16075* \
                   t16077*t16089*4.0+C_k*a_3*t16071*t16075*t16077*t16089*6.0-C_k*a_4*t16071*t16083*t16075*t16078*8.0+ \
                   C_k*a_5*t16071*t16083*t16075*t16078*1.0E1-C_k*a_8*t16071*t16075*t16087*t16079*1.6E1+C_k*a_9*t16071* \
                   t16075*t16087*t16079*1.8E1-C_k*a_10*t16071*t16080*t16075*t16077*t16079*2.0E1+C_k*a_11*t16071*t16080* \
                   t16075*t16077*t16079*2.2E1+C_k*a_10*t16071*t16075*t16076*t16079*t16088*2.0E1-C_k*a_3*t16071*t16082* \
                   t16075*t16076*t16077*6.0+C_k*a_4*t16071*t16082*t16075*t16076*t16077*8.0-C_k*a_5*t16071*t16075*t16084* \
                   t16076*t16078*1.0E1+C_k*a_6*t16071*t16075*t16084*t16076*t16078*1.2E1-C_k*a_6*t16071*t16075*t16085* \
                   t16077*t16078*1.2E1+C_k*a_7*t16071*t16075*t16085*t16077*t16078*1.4E1-C_k*a_9*t16071*t16075*t16076* \
                   t16079*t16088*1.8E1-a_10*t16070*t16080*t16076*t16068*t16069*t16079*2.0E2+a_11*t16070*t16080*t16076* \
                   t16068*t16069*t16079*1.1E2+a_10*t16070*t16081*t16068*t16077*t16069*t16079*1.1E2-a_11*t16070*t16081* \
                   t16068*t16077*t16069*t16079*2.42E2+a_3*t16070*t16083*t16076*t16068*t16077*t16069*1.2E1-a_4*t16070* \
                   t16083*t16076*t16068*t16077*t16069*3.2E1+a_5*t16070*t16083*t16076*t16068*t16077*t16069*2.0E1+a_5*t16070* \
                   t16076*t16085*t16068*t16069*t16078*3.0E1-a_6*t16070*t16076*t16085*t16068*t16069*t16078*7.2E1+a_6*t16070* \
                   t16068*t16077*t16086*t16069*t16078*4.2E1+a_7*t16070*t16076*t16085*t16068*t16069*t16078*4.2E1-a_7*t16070* \
                   t16068*t16077*t16086*t16069*t16078*9.8E1+a_8*t16070*t16068*t16077*t16086*t16069*t16078*5.6E1+a_9*t16070* \
                   t16080*t16076*t16068*t16069*t16079*9.0E1+a_11*t16070*1/pow(t16073,1.3E1)*t16076*t16068*t16077*t16069* \
                   t16079*1.32E2-C_k*a_11*t16071*t16081*t16075*t16076*t16077*t16079*2.2E1-C_k*a_7*t16071*t16075*t16076* \
                   t16077*t16086*t16078*1.4E1+C_k*a_8*t16071*t16075*t16076*t16077*t16086*t16078*1.6E1+a_7*t16070*t16076* \
                   t16068*t16077*t16069*t16078*t16087*5.6E1-a_8*t16070*t16076*t16068*t16077*t16069*t16078*t16087*1.28E2+ \
                   a_9*t16070*t16076*t16068*t16077*t16069*t16078*t16087*7.2E1)-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0) \
                   *(c0f*log((1.0/2.0)/(c0f*(b1f*t16037+b3f*t16038+b2f*c*t16035+b4f*t16040*t16039))+1.0)*(a1f*c*t16035+ \
                   1.0)*2.0-c0p*t16050*t16052*2.0))/(two_13*2.0-2.0)+c0p*t16050*t16052*2.0)*( 0.0 - ( (t16057 > 0.0)  \
                   ? 1.0*(t16058*2.0-t16056*t16075) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t16060*t16061*t16067)/(gamma_aa[index]* \
                   gcaa*t16065*2.0+t16060*t16061*t16067+1.0)+(ccaa1*gamma_aa[index]*gcaa*t16065)/(gamma_aa[index]*gcaa* \
                   t16065+1.0)+(ccaa4*t16062*t16063*t16064)/(gamma_aa[index]*gcaa*t16065*4.0+t16060*t16061*t16067*6.0+ \
                   t16062*t16063*t16064+gamma_aa[index]*gcaa*t16060*t16061*t16066*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
                   t16060*t16061*t16066)/(gamma_aa[index]*gcaa*t16065*3.0+t16060*t16061*t16067*3.0+gamma_aa[index]*gcaa* \
                   t16060*t16061*t16066+1.0));
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    double t16091 = 1/pow(rho_a[index],1.0/3.0);
                    double t16092 = c*t16091;
                    double t16093 = sqrt(t16092);
                    double t16094 = pow(t16092,3.0/2.0);
                    double t16095 = c*c;
                    double t16096 = 1/pow(rho_a[index],2.0/3.0);
                    double t16097 = 1/c0p;
                    double t16098 = b1p*t16093;
                    double t16099 = b3p*t16094;
                    double t16100 = b4p*t16095*t16096;
                    double t16101 = b2p*c*t16091;
                    double t16102 = t16100+t16101+t16098+t16099;
                    double t16103 = 1/t16102;
                    double t16104 = t16103*t16097*(1.0/2.0);
                    double t16105 = t16104+1.0;
                    double t16106 = log(t16105);
                    double t16107 = a1p*c*t16091;
                    double t16108 = t16107+1.0;
                    double t16109 = tau_a[index]-1.0/1.0E20;
                    double t16110 = 1/tau_a[index];
                    double t16111 = tau_a[index]*2.0;
                    double t16112 = 1/rho_a[index];
                    double t16113 = t16111-gamma_aa[index]*t16112*(1.0/4.0);
                    double t16114 = 1/pow(rho_a[index],8.0/3.0);
                    double t16115 = gamma_aa[index]*gamma_aa[index];
                    double t16116 = gcaa*gcaa;
                    double t16117 = t16116*t16116;
                    double t16118 = 1/pow(rho_a[index],3.2E1/3.0);
                    double t16119 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t16120 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t16121 = gamma_aa[index]*gcaa*t16114;
                    double t16122 = t16121+1.0;
                    double t16123 = gamma_aa[index]*gcaa*t16114*3.0;
                    double t16124 = gamma_aa[index]*gcaa*t16120*t16115*t16116;
                    double t16125 = t16115*t16116*t16119*3.0;
                    double t16126 = t16123+t16124+t16125+1.0;
                    double t16127 = t16115*t16115;
                    double t16128 = gamma_aa[index]*gcaa*t16114*4.0;
                    double t16129 = gamma_aa[index]*gcaa*t16120*t16115*t16116*4.0;
                    double t16130 = t16115*t16116*t16119*6.0;
                    double t16131 = t16117*t16118*t16127;
                    double t16132 = t16130+t16131+t16128+t16129+1.0;
                    double t16133 = gamma_aa[index]*gcaa*t16114*2.0;
                    double t16134 = t16115*t16116*t16119;
                    double t16135 = t16133+t16134+1.0;
                    double t16136 = pow(2.0,1.0/3.0);
                    double t16137 = t16136*2.0;
                    double t16138 = t16137-2.0;
                    double t16139 = two_13*2.0;
                    double t16140 = t16139-2.0;
                    double t16141 = 1/t16140;
                    double t16142 = 1/c0f;
                    double t16143 = b1f*t16093;
                    double t16144 = b3f*t16094;
                    double t16145 = b4f*t16095*t16096;
                    double t16146 = b2f*c*t16091;
                    double t16147 = t16143+t16144+t16145+t16146;
                    double t16148 = 1/t16147;
                    double t16149 = t16142*t16148*(1.0/2.0);
                    double t16150 = t16149+1.0;
                    double t16151 = log(t16150);
                    double t16152 = a1f*c*t16091;
                    double t16153 = t16152+1.0;
                    double t16154 = c0f*t16151*t16153*2.0;
                    double t16155 = c0p*t16106*t16108*2.0;
                    double t16156 = 0.0 ;
                    double t16157 = 1/(tau_a[index]*tau_a[index]);
                    double t16158 = ( (t16109 > 0.0) ?  1.0 : 0.0 ) ;
                    double t16159 = 1/t16132;
                    double t16160 = 1/t16122;
                    double t16161 = 1/t16126;
                    double t16162 = 1/t16135;
                    double t16163 = 1/(k*k);
                    double t16164 = rho_a[index]*2.0;
                    double t16165 = 1/pow(t16164,2.0/3.0);
                    double t16166 = pow(rho_a[index],5.0/3.0);
                    double t16167 = C_k*t16110*t16166;
                    double t16168 = t16167+1.0;
                    double t16169 = t16167-1.0;
                    double t16170 = 1/(t16168*t16168);
                    double t16171 = t16169*t16169;
                    double t16172 = t16171*t16171;
                    double t16173 = t16172*t16172;
                    double t16174 = 1/pow(t16168,1.1E1);
                    double t16175 = 1/(t16168*t16168*t16168);
                    double t16176 = 1/(t16168*t16168*t16168*t16168);
                    double t16177 = 1/(t16168*t16168*t16168*t16168*t16168);
                    double t16178 = 1/(t16168*t16168*t16168*t16168*t16168*t16168);
                    double t16179 = 1/(t16168*t16168*t16168*t16168*t16168*t16168*t16168);
                    double t16180 = 1/(t16168*t16168*t16168*t16168*t16168*t16168*t16168*t16168);
                    double t16181 = 1/(t16168*t16168*t16168*t16168*t16168*t16168*t16168*t16168*t16168);
                    double t16182 = 1/pow(t16168,1.0E1);
                    v_gamma_aa_tau_a_[index] = rho_a[index]*(t16155+t16141*t16138*(t16154-t16155))*(t16110*t16112*t16156* \
                       (1.0/8.0)-t16112*t16157*t16158*(1.0/8.0))*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t16114*t16160+ccaa2*t16115* \
                       t16116*t16162*t16119+ccaa4*t16117*t16118*t16127*t16159+ccaa3*gamma_aa[index]*gcaa*t16120*t16115*t16116* \
                       t16161)-rho_a[index]*(t16155+t16141*t16138*(t16154-c0p*t16106*t16108*2.0))*(t16156*(t16110*t16113* \
                       (1.0/2.0)-1.0)+t16158*(t16110-t16113*t16157*(1.0/2.0)))*(ccaa1*gcaa*t16114*t16160+ccaa2*gamma_aa[index]* \
                       t16116*t16162*t16119*2.0-ccaa1*gamma_aa[index]*1/(t16122*t16122)*t16116*t16119-ccaa2*t16115*t16116* \
                       1/(t16135*t16135)*t16119*(gcaa*t16114*2.0+gamma_aa[index]*t16116*t16119*2.0)-ccaa4*1/(t16132*t16132) \
                       *t16117*t16118*t16127*(gcaa*t16114*4.0+gamma_aa[index]*t16116*t16119*1.2E1+gamma_aa[index]*t16115* \
                       t16117*t16118*4.0+gcaa*t16120*t16115*t16116*1.2E1)+ccaa4*gamma_aa[index]*t16115*t16117*t16118*t16159* \
                       4.0+ccaa3*gcaa*t16120*t16115*t16116*t16161*3.0-ccaa3*gamma_aa[index]*gcaa*t16120*t16115*t16116*1/(t16126* \
                       t16126)*(gcaa*t16114*3.0+gamma_aa[index]*t16116*t16119*6.0+gcaa*t16120*t16115*t16116*3.0))+mu_*t16112* \
                       t16163*t16165*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t16163*t16165*(1.0/4.0))/kp+ \
                       1.0,2.0)*(X-1.0)*((C_k*a_1*t16157*t16166)/t16168-C_k*a_1*t16170*t16157*t16166*t16169-C_k*a_2*t16171* \
                       t16157*t16166*t16175*2.0+C_k*a_2*t16170*t16157*t16166*t16169*2.0+C_k*a_3*t16171*t16157*t16166*t16175* \
                       3.0-C_k*a_4*t16172*t16157*t16166*t16177*4.0+C_k*a_5*t16172*t16157*t16166*t16177*5.0-C_k*a_8*t16181* \
                       t16173*t16157*t16166*8.0+C_k*a_9*t16181*t16173*t16157*t16166*9.0-C_k*a_10*t16171*t16173*t16174*t16157* \
                       t16166*1.0E1+C_k*a_11*t16171*t16173*t16174*t16157*t16166*1.1E1+C_k*a_10*t16173*t16182*t16157*t16166* \
                       t16169*1.0E1-C_k*a_3*t16171*t16157*t16166*t16176*t16169*3.0+C_k*a_4*t16171*t16157*t16166*t16176*t16169* \
                       4.0-C_k*a_5*t16172*t16157*t16166*t16169*t16178*5.0-C_k*a_6*t16171*t16172*t16157*t16166*t16179*6.0+ \
                       C_k*a_6*t16172*t16157*t16166*t16169*t16178*6.0+C_k*a_7*t16171*t16172*t16157*t16166*t16179*7.0-C_k* \
                       a_9*t16173*t16182*t16157*t16166*t16169*9.0-C_k*a_11*t16171*t16173*t16157*t16166*1/pow(t16168,1.2E1) \
                       *t16169*1.1E1-C_k*a_7*t16171*t16180*t16172*t16157*t16166*t16169*7.0+C_k*a_8*t16171*t16180*t16172*t16157* \
                       t16166*t16169*8.0)*(1.0/4.0);
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void M05_2X_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double k = params_[2].second;
    double e = params_[3].second;
    double kp = params_[4].second;
    double mu_ = params_[5].second;
    double a_1 = params_[6].second;
    double a_2 = params_[7].second;
    double a_3 = params_[8].second;
    double a_4 = params_[9].second;
    double a_5 = params_[10].second;
    double a_6 = params_[11].second;
    double a_7 = params_[12].second;
    double a_8 = params_[13].second;
    double a_9 = params_[14].second;
    double a_10 = params_[15].second;
    double a_11 = params_[16].second;
    double two_13 = params_[17].second;
    double d2fz0 = params_[18].second;
    double c = params_[19].second;
    double Aa = params_[20].second;
    double a1a = params_[21].second;
    double b1a = params_[22].second;
    double b2a = params_[23].second;
    double b3a = params_[24].second;
    double b4a = params_[25].second;
    double c0p = params_[26].second;
    double a1p = params_[27].second;
    double b1p = params_[28].second;
    double b2p = params_[29].second;
    double b3p = params_[30].second;
    double b4p = params_[31].second;
    double c0f = params_[32].second;
    double a1f = params_[33].second;
    double b1f = params_[34].second;
    double b2f = params_[35].second;
    double b3f = params_[36].second;
    double b4f = params_[37].second;
    double gcab = params_[38].second;
    double gcaa = params_[39].second;
    double ccab0 = params_[40].second;
    double ccab1 = params_[41].second;
    double ccab2 = params_[42].second;
    double ccab3 = params_[43].second;
    double ccab4 = params_[44].second;
    double ccaa0 = params_[45].second;
    double ccaa1 = params_[46].second;
    double ccaa2 = params_[47].second;
    double ccaa3 = params_[48].second;
    double ccaa4 = params_[49].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t8098 = pow(rho_a[index],5.0/3.0);
            double t8099 = 1/tau_a[index];
            double t8100 = C_k*t8098*t8099;
            double t8101 = t8100-1.0;
            double t8102 = t8101*t8101;
            double t8103 = t8102*t8102;
            double t8104 = t8103*t8103;
            double t8105 = t8100+1.0;
            double t8106 = 1/(k*k);
            double t8107 = 1/kp;
            double t8108 = pow(rho_b[index],5.0/3.0);
            double t8109 = 1/tau_b[index];
            double t8110 = C_k*t8108*t8109;
            double t8111 = t8110-1.0;
            double t8112 = t8111*t8111;
            double t8113 = t8112*t8112;
            double t8114 = t8113*t8113;
            double t8115 = t8110+1.0;
            double t8116 = 1/pow(rho_a[index],1.0/3.0);
            double t8117 = c*t8116;
            double t8118 = sqrt(t8117);
            double t8119 = pow(t8117,3.0/2.0);
            double t8120 = c*c;
            double t8121 = 1/pow(rho_a[index],2.0/3.0);
            double t8122 = 1/c0p;
            double t8123 = b1p*t8118;
            double t8124 = b3p*t8119;
            double t8125 = b4p*t8120*t8121;
            double t8126 = b2p*c*t8116;
            double t8127 = t8123+t8124+t8125+t8126;
            double t8128 = 1/t8127;
            double t8129 = t8122*t8128*(1.0/2.0);
            double t8130 = t8129+1.0;
            double t8131 = log(t8130);
            double t8132 = a1p*c*t8116;
            double t8133 = t8132+1.0;
            double t8134 = pow(2.0,1.0/3.0);
            double t8135 = t8134*2.0;
            double t8136 = t8135-2.0;
            double t8137 = two_13*2.0;
            double t8138 = t8137-2.0;
            double t8139 = 1/t8138;
            double t8140 = 1/c0f;
            double t8141 = 1/pow(rho_b[index],1.0/3.0);
            double t8142 = c*t8141;
            double t8143 = sqrt(t8142);
            double t8144 = pow(t8142,3.0/2.0);
            double t8145 = 1/pow(rho_b[index],2.0/3.0);
            double t8146 = b1p*t8143;
            double t8147 = b3p*t8144;
            double t8148 = b4p*t8120*t8145;
            double t8149 = b2p*c*t8141;
            double t8150 = t8146+t8147+t8148+t8149;
            double t8151 = 1/t8150;
            double t8152 = t8122*t8151*(1.0/2.0);
            double t8153 = t8152+1.0;
            double t8154 = log(t8153);
            double t8155 = a1p*c*t8141;
            double t8156 = t8155+1.0;
            double t8157 = c0p*t8154*t8156*2.0;
            double t8158 = rho_a[index]+rho_b[index];
            double t8159 = 1/pow(t8158,1.0/3.0);
            double t8160 = c*t8159;
            double t8161 = sqrt(t8160);
            double t8162 = pow(t8160,3.0/2.0);
            double t8163 = 1/pow(t8158,2.0/3.0);
            double t8164 = b1p*t8161;
            double t8165 = b3p*t8162;
            double t8166 = b4p*t8120*t8163;
            double t8167 = b2p*c*t8159;
            double t8168 = t8164+t8165+t8166+t8167;
            double t8169 = 1/t8168;
            double t8170 = t8122*t8169*(1.0/2.0);
            double t8171 = t8170+1.0;
            double t8172 = log(t8171);
            double t8173 = a1p*c*t8159;
            double t8174 = t8173+1.0;
            double t8175 = c0p*t8172*t8174*2.0;
            double t8176 = rho_a[index]-rho_b[index];
            double t8177 = t8176*t8176;
            double t8178 = 1/t8158;
            double t8179 = t8176*t8178;
            double t8180 = 1/(t8158*t8158*t8158*t8158);
            double t8181 = t8177*t8177;
            double t8182 = t8179+1.0;
            double t8183 = pow(t8182,4.0/3.0);
            double t8184 = -t8179+1.0;
            double t8185 = pow(t8184,4.0/3.0);
            double t8186 = t8183+t8185-2.0;
            double t8189 = 1/pow(rho_a[index],8.0/3.0);
            double t8190 = gamma_aa[index]*t8189*(1.0/2.0);
            double t8191 = 1/pow(rho_b[index],8.0/3.0);
            double t8192 = gamma_bb[index]*t8191*(1.0/2.0);
            double t8187 = t8190+t8192;
            double t8188 = gcab*gcab;
            double t8193 = t8187*t8187;
            double t8194 = t8188*t8188;
            double t8195 = t8193*t8193;
            double t8196 = c0p*t8131*t8133*2.0;
            double t8197 = b1f*t8118;
            double t8198 = b3f*t8119;
            double t8199 = b4f*t8120*t8121;
            double t8200 = b2f*c*t8116;
            double t8201 = t8197+t8198+t8199+t8200;
            double t8202 = 1/t8201;
            double t8203 = t8140*t8202*(1.0/2.0);
            double t8204 = t8203+1.0;
            double t8205 = log(t8204);
            double t8206 = a1f*c*t8116;
            double t8207 = t8206+1.0;
            double t8208 = t8196-c0f*t8205*t8207*2.0;
            double t8209 = t8196-t8136*t8139*t8208;
            double t8210 = gamma_aa[index]*gamma_aa[index];
            double t8211 = gcaa*gcaa;
            double t8212 = t8210*t8210;
            double t8213 = t8211*t8211;
            double t8214 = 1/pow(rho_a[index],3.2E1/3.0);
            double t8215 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t8216 = 1/pow(rho_a[index],1.6E1/3.0);
            double t8217 = b1f*t8143;
            double t8218 = b3f*t8144;
            double t8219 = b4f*t8120*t8145;
            double t8220 = b2f*c*t8141;
            double t8221 = t8220+t8217+t8218+t8219;
            double t8222 = 1/t8221;
            double t8223 = t8140*t8222*(1.0/2.0);
            double t8224 = t8223+1.0;
            double t8225 = log(t8224);
            double t8226 = a1f*c*t8141;
            double t8227 = t8226+1.0;
            double t8228 = t8157-c0f*t8225*t8227*2.0;
            double t8229 = t8157-t8136*t8139*t8228;
            double t8230 = gamma_bb[index]*gamma_bb[index];
            double t8231 = t8230*t8230;
            double t8232 = 1/pow(rho_b[index],3.2E1/3.0);
            double t8233 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t8234 = 1/pow(rho_b[index],1.6E1/3.0);
            functional_[index] = (rho_a[index]*t8209+rho_b[index]*t8229-t8158*(t8175-t8180*t8181*t8139*t8186* \
               (t8175-c0f*log((t8140*(1.0/2.0))/(b1f*t8161+b3f*t8162+b2f*c*t8159+b4f*t8120*t8163)+1.0)*(a1f*c*t8159+ \
               1.0)*2.0)+(Aa*t8139*t8186*log((1.0/2.0)/(Aa*(b1a*t8161+b3a*t8162+b2a*c*t8159+b4a*t8120*t8163))+1.0) \
               *(t8180*t8181-1.0)*(a1a*c*t8159+1.0)*2.0)/d2fz0))*(ccab0+(ccab4*t8194*t8195)/(gcab*t8187*4.0+t8194* \
               t8195+t8193*t8188*6.0+gcab*t8193*t8187*t8188*4.0+1.0)+(ccab1*gcab*t8187)/(gcab*t8187+1.0)+(ccab2*t8193* \
               t8188)/(gcab*t8187*2.0+t8193*t8188+1.0)+(ccab3*gcab*t8193*t8187*t8188)/(gcab*t8187*3.0+t8193*t8188* \
               3.0+gcab*t8193*t8187*t8188+1.0))-(rho_a[index]*(kp-kp/(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]) \
               *t8106*t8107*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0)+1.0)+1.0)*((a_1*t8101)/t8105+a_2*t8102*1/(t8105* \
               t8105)+a_4*t8103*1/(t8105*t8105*t8105*t8105)+a_8*t8104*1/(t8105*t8105*t8105*t8105*t8105*t8105*t8105* \
               t8105)+a_10*t8102*t8104*1/pow(t8105,1.0E1)+a_3*t8101*t8102*1/(t8105*t8105*t8105)+a_5*t8101*t8103*1/ \
               (t8105*t8105*t8105*t8105*t8105)+a_6*t8102*t8103*1/(t8105*t8105*t8105*t8105*t8105*t8105)+a_9*t8101* \
               t8104*1/(t8105*t8105*t8105*t8105*t8105*t8105*t8105*t8105*t8105)+a_11*t8101*t8102*t8104*1/pow(t8105,1.1E1) \
               +a_7*t8101*t8102*t8103*1/(t8105*t8105*t8105*t8105*t8105*t8105*t8105)+1.0)+rho_b[index]*(kp-kp/(gamma_bb[index]* \
               mu_*1/(rho_b[index]*rho_b[index])*t8106*t8107*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0)+1.0)+1.0)* \
               ((a_1*t8111)/t8115+a_2*t8112*1/(t8115*t8115)+a_4*t8113*1/(t8115*t8115*t8115*t8115)+a_8*t8114*1/(t8115* \
               t8115*t8115*t8115*t8115*t8115*t8115*t8115)+a_10*t8112*t8114*1/pow(t8115,1.0E1)+a_3*t8111*t8112*1/(t8115* \
               t8115*t8115)+a_5*t8111*t8113*1/(t8115*t8115*t8115*t8115*t8115)+a_6*t8112*t8113*1/(t8115*t8115*t8115* \
               t8115*t8115*t8115)+a_9*t8111*t8114*1/(t8115*t8115*t8115*t8115*t8115*t8115*t8115*t8115*t8115)+a_11* \
               t8111*t8112*t8114*1/pow(t8115,1.1E1)+a_7*t8111*t8112*t8113*1/(t8115*t8115*t8115*t8115*t8115*t8115* \
               t8115)+1.0))*(X-1.0)-rho_a[index]*t8209*( ( (tau_a[index]-1.0/1.0E20 > 0.0) ? 1.0*(t8099*(tau_a[index]* \
               2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0) : 0.0 ) +1.0)*(ccaa0+(ccaa2*t8210*t8211* \
               t8216)/(gamma_aa[index]*gcaa*t8189*2.0+t8210*t8211*t8216+1.0)+(ccaa1*gamma_aa[index]*gcaa*t8189)/(gamma_aa[index]* \
               gcaa*t8189+1.0)+(ccaa4*t8212*t8213*t8214)/(gamma_aa[index]*gcaa*t8189*4.0+t8210*t8211*t8216*6.0+t8212* \
               t8213*t8214+gamma_aa[index]*gcaa*t8210*t8211*t8215*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t8210*t8211* \
               t8215)/(gamma_aa[index]*gcaa*t8189*3.0+t8210*t8211*t8216*3.0+gamma_aa[index]*gcaa*t8210*t8211*t8215+ \
               1.0))-rho_b[index]*t8229*( ( (tau_b[index]-1.0/1.0E20 > 0.0) ? 1.0*(t8109*(tau_b[index]*2.0-(gamma_bb[index]* \
               (1.0/4.0))/rho_b[index])*(1.0/2.0)-1.0) : 0.0 ) +1.0)*(ccaa0+(ccaa2*t8211*t8230*t8234)/(gamma_bb[index]* \
               gcaa*t8191*2.0+t8211*t8230*t8234+1.0)+(ccaa1*gamma_bb[index]*gcaa*t8191)/(gamma_bb[index]*gcaa*t8191+ \
               1.0)+(ccaa4*t8213*t8231*t8232)/(gamma_bb[index]*gcaa*t8191*4.0+t8211*t8230*t8234*6.0+t8213*t8231*t8232+ \
               gamma_bb[index]*gcaa*t8211*t8230*t8233*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t8211*t8230*t8233)/(gamma_bb[index]* \
               gcaa*t8191*3.0+t8211*t8230*t8234*3.0+gamma_bb[index]*gcaa*t8211*t8230*t8233+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t13600 = pow(rho_a[index],5.0/3.0);
            double t13601 = 1/tau_a[index];
            double t13602 = C_k*t13600*t13601;
            double t13603 = t13602-1.0;
            double t13604 = t13603*t13603;
            double t13605 = t13604*t13604;
            double t13606 = t13605*t13605;
            double t13607 = t13602+1.0;
            double t13608 = 1/pow(rho_a[index],1.0/3.0);
            double t13609 = c*t13608;
            double t13610 = sqrt(t13609);
            double t13611 = pow(t13609,3.0/2.0);
            double t13612 = c*c;
            double t13613 = 1/pow(rho_a[index],2.0/3.0);
            double t13614 = 1/c0p;
            double t13615 = b1p*t13610;
            double t13616 = b3p*t13611;
            double t13617 = b4p*t13612*t13613;
            double t13618 = b2p*c*t13608;
            double t13619 = t13615+t13616+t13617+t13618;
            double t13620 = 1/t13619;
            double t13621 = t13620*t13614*(1.0/2.0);
            double t13622 = t13621+1.0;
            double t13623 = log(t13622);
            double t13624 = a1p*c*t13608;
            double t13625 = t13624+1.0;
            double t13626 = gamma_aa[index]*gamma_aa[index];
            double t13627 = gcaa*gcaa;
            double t13628 = t13626*t13626;
            double t13629 = t13627*t13627;
            double t13630 = 1/pow(rho_a[index],3.2E1/3.0);
            double t13631 = 1/pow(rho_a[index],8.0/3.0);
            double t13632 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t13633 = 1/pow(rho_a[index],1.6E1/3.0);
            functional_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index]) \
               *1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((a_1*t13603)/t13607+a_2*t13604*1/(t13607* \
               t13607)+a_4*t13605*1/(t13607*t13607*t13607*t13607)+a_8*t13606*1/(t13607*t13607*t13607*t13607*t13607* \
               t13607*t13607*t13607)+a_10*t13604*t13606*1/pow(t13607,1.0E1)+a_3*t13603*t13604*1/(t13607*t13607*t13607) \
               +a_5*t13603*t13605*1/(t13607*t13607*t13607*t13607*t13607)+a_6*t13604*t13605*1/(t13607*t13607*t13607* \
               t13607*t13607*t13607)+a_9*t13603*t13606*1/(t13607*t13607*t13607*t13607*t13607*t13607*t13607*t13607* \
               t13607)+a_11*t13603*t13604*t13606*1/pow(t13607,1.1E1)+a_7*t13603*t13604*t13605*1/(t13607*t13607*t13607* \
               t13607*t13607*t13607*t13607)+1.0)-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
               (b1f*t13610+b3f*t13611+b2f*c*t13608+b4f*t13612*t13613))+1.0)*(a1f*c*t13608+1.0)*2.0-c0p*t13623*t13625* \
               2.0))/(two_13*2.0-2.0)+c0p*t13623*t13625*2.0)*( ( (tau_a[index]-1.0/1.0E20 > 0.0) ? 1.0*(t13601*(tau_a[index]* \
               2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0) : 0.0 ) +1.0)*(ccaa0+(ccaa2*t13633*t13626* \
               t13627)/(gamma_aa[index]*gcaa*t13631*2.0+t13633*t13626*t13627+1.0)+(ccaa1*gamma_aa[index]*gcaa*t13631) \
               /(gamma_aa[index]*gcaa*t13631+1.0)+(ccaa4*t13630*t13628*t13629)/(gamma_aa[index]*gcaa*t13631*4.0+t13633* \
               t13626*t13627*6.0+t13630*t13628*t13629+gamma_aa[index]*gcaa*t13632*t13626*t13627*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t13632*t13626*t13627)/(gamma_aa[index]*gcaa*t13631*3.0+t13633*t13626*t13627*3.0+gamma_aa[index]* \
               gcaa*t13632*t13626*t13627+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t12474 = pow(rho_b[index],5.0/3.0);
            double t12475 = 1/tau_b[index];
            double t12476 = C_k*t12474*t12475;
            double t12477 = t12476-1.0;
            double t12478 = t12477*t12477;
            double t12479 = t12478*t12478;
            double t12480 = t12479*t12479;
            double t12481 = t12476+1.0;
            double t12482 = 1/pow(rho_b[index],1.0/3.0);
            double t12483 = c*t12482;
            double t12484 = sqrt(t12483);
            double t12485 = pow(t12483,3.0/2.0);
            double t12486 = c*c;
            double t12487 = 1/pow(rho_b[index],2.0/3.0);
            double t12488 = 1/c0p;
            double t12489 = b1p*t12484;
            double t12490 = b3p*t12485;
            double t12491 = b4p*t12486*t12487;
            double t12492 = b2p*c*t12482;
            double t12493 = t12490+t12491+t12492+t12489;
            double t12494 = 1/t12493;
            double t12495 = t12494*t12488*(1.0/2.0);
            double t12496 = t12495+1.0;
            double t12497 = log(t12496);
            double t12498 = a1p*c*t12482;
            double t12499 = t12498+1.0;
            double t12500 = gamma_bb[index]*gamma_bb[index];
            double t12501 = gcaa*gcaa;
            double t12502 = t12500*t12500;
            double t12503 = t12501*t12501;
            double t12504 = 1/pow(rho_b[index],3.2E1/3.0);
            double t12505 = 1/pow(rho_b[index],8.0/3.0);
            double t12506 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t12507 = 1/pow(rho_b[index],1.6E1/3.0);
            functional_[index] = -rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]*rho_b[index]) \
               *1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((a_1*t12477)/t12481+a_2*1/(t12481*t12481) \
               *t12478+a_4*1/(t12481*t12481*t12481*t12481)*t12479+a_8*t12480*1/(t12481*t12481*t12481*t12481*t12481* \
               t12481*t12481*t12481)+a_10*t12480*1/pow(t12481,1.0E1)*t12478+a_3*1/(t12481*t12481*t12481)*t12477*t12478+ \
               a_5*1/(t12481*t12481*t12481*t12481*t12481)*t12477*t12479+a_6*1/(t12481*t12481*t12481*t12481*t12481* \
               t12481)*t12478*t12479+a_9*t12480*1/(t12481*t12481*t12481*t12481*t12481*t12481*t12481*t12481*t12481) \
               *t12477+a_11*t12480*1/pow(t12481,1.1E1)*t12477*t12478+a_7*1/(t12481*t12481*t12481*t12481*t12481*t12481* \
               t12481)*t12477*t12478*t12479+1.0)-rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
               (b1f*t12484+b3f*t12485+b2f*c*t12482+b4f*t12486*t12487))+1.0)*(a1f*c*t12482+1.0)*2.0-c0p*t12497*t12499* \
               2.0))/(two_13*2.0-2.0)+c0p*t12497*t12499*2.0)*( ( (tau_b[index]-1.0/1.0E20 > 0.0) ? 1.0*(t12475*(tau_b[index]* \
               2.0-(gamma_bb[index]*(1.0/4.0))/rho_b[index])*(1.0/2.0)-1.0) : 0.0 ) +1.0)*(ccaa0+(ccaa2*t12500*t12501* \
               t12507)/(gamma_bb[index]*gcaa*t12505*2.0+t12500*t12501*t12507+1.0)+(ccaa1*gamma_bb[index]*gcaa*t12505) \
               /(gamma_bb[index]*gcaa*t12505+1.0)+(ccaa4*t12502*t12503*t12504)/(gamma_bb[index]*gcaa*t12505*4.0+t12500* \
               t12501*t12507*6.0+t12502*t12503*t12504+gamma_bb[index]*gcaa*t12500*t12501*t12506*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t12500*t12501*t12506)/(gamma_bb[index]*gcaa*t12505*3.0+t12500*t12501*t12507*3.0+gamma_bb[index]* \
               gcaa*t12500*t12501*t12506+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t8236 = 1/pow(rho_a[index],1.0/3.0);
            double t8237 = c*t8236;
            double t8238 = sqrt(t8237);
            double t8239 = pow(t8237,3.0/2.0);
            double t8240 = c*c;
            double t8241 = 1/pow(rho_a[index],2.0/3.0);
            double t8242 = 1/c0p;
            double t8243 = b1p*t8238;
            double t8244 = b3p*t8239;
            double t8245 = b4p*t8240*t8241;
            double t8246 = b2p*c*t8236;
            double t8247 = t8243+t8244+t8245+t8246;
            double t8248 = 1/t8247;
            double t8249 = t8242*t8248*(1.0/2.0);
            double t8250 = t8249+1.0;
            double t8251 = log(t8250);
            double t8252 = a1p*c*t8236;
            double t8253 = t8252+1.0;
            double t8254 = pow(2.0,1.0/3.0);
            double t8255 = t8254*2.0;
            double t8256 = t8255-2.0;
            double t8257 = two_13*2.0;
            double t8258 = t8257-2.0;
            double t8259 = 1/t8258;
            double t8260 = 1/c0f;
            double t8261 = 1/pow(rho_b[index],1.0/3.0);
            double t8262 = c*t8261;
            double t8263 = sqrt(t8262);
            double t8264 = pow(t8262,3.0/2.0);
            double t8265 = 1/pow(rho_b[index],2.0/3.0);
            double t8266 = b1p*t8263;
            double t8267 = b3p*t8264;
            double t8268 = b4p*t8240*t8265;
            double t8269 = b2p*c*t8261;
            double t8270 = t8266+t8267+t8268+t8269;
            double t8271 = 1/t8270;
            double t8272 = t8242*t8271*(1.0/2.0);
            double t8273 = t8272+1.0;
            double t8274 = log(t8273);
            double t8275 = a1p*c*t8261;
            double t8276 = t8275+1.0;
            double t8277 = c0p*t8274*t8276*2.0;
            double t8278 = rho_a[index]+rho_b[index];
            double t8279 = 1/pow(t8278,1.0/3.0);
            double t8280 = c*t8279;
            double t8281 = sqrt(t8280);
            double t8282 = pow(t8280,3.0/2.0);
            double t8283 = 1/pow(t8278,2.0/3.0);
            double t8284 = b1p*t8281;
            double t8285 = b3p*t8282;
            double t8286 = b4p*t8240*t8283;
            double t8287 = b2p*c*t8279;
            double t8288 = t8284+t8285+t8286+t8287;
            double t8289 = 1/t8288;
            double t8290 = t8242*t8289*(1.0/2.0);
            double t8291 = t8290+1.0;
            double t8292 = log(t8291);
            double t8293 = a1p*c*t8279;
            double t8294 = t8293+1.0;
            double t8295 = c0p*t8292*t8294*2.0;
            double t8296 = rho_a[index]-rho_b[index];
            double t8297 = t8296*t8296;
            double t8298 = 1/t8278;
            double t8299 = t8296*t8298;
            double t8300 = 1/(t8278*t8278*t8278*t8278);
            double t8301 = t8297*t8297;
            double t8302 = t8299+1.0;
            double t8303 = pow(t8302,4.0/3.0);
            double t8304 = -t8299+1.0;
            double t8305 = pow(t8304,4.0/3.0);
            double t8306 = t8303+t8305-2.0;
            double t8307 = gcab*gcab;
            double t8311 = 1/pow(rho_a[index],8.0/3.0);
            double t8312 = gamma_aa[index]*t8311*(1.0/2.0);
            double t8313 = 1/pow(rho_b[index],8.0/3.0);
            double t8314 = gamma_bb[index]*t8313*(1.0/2.0);
            double t8308 = t8312+t8314;
            double t8309 = t8308*t8308;
            double t8310 = 1/pow(rho_a[index],1.1E1/3.0);
            double t8315 = t8307*t8307;
            double t8316 = t8309*t8309;
            double t8317 = t8307*t8309*6.0;
            double t8318 = gcab*t8307*t8308*t8309*4.0;
            double t8319 = t8315*t8316;
            double t8320 = gcab*t8308*4.0;
            double t8321 = t8320+t8317+t8318+t8319+1.0;
            double t8322 = gcab*t8308;
            double t8323 = t8322+1.0;
            double t8324 = t8307*t8309;
            double t8325 = gcab*t8308*2.0;
            double t8326 = t8324+t8325+1.0;
            double t8327 = t8307*t8309*3.0;
            double t8328 = gcab*t8307*t8308*t8309;
            double t8329 = gcab*t8308*3.0;
            double t8330 = t8327+t8328+t8329+1.0;
            double t8331 = c0p*t8251*t8253*2.0;
            double t8332 = pow(rho_a[index],5.0/3.0);
            double t8333 = 1/tau_a[index];
            double t8334 = C_k*t8332*t8333;
            double t8335 = t8334-1.0;
            double t8336 = t8335*t8335;
            double t8337 = t8336*t8336;
            double t8338 = t8337*t8337;
            double t8339 = t8334+1.0;
            double t8340 = 1/(k*k);
            double t8341 = 1/kp;
            double t8342 = 1/(rho_a[index]*rho_a[index]);
            double t8343 = rho_a[index]*2.0;
            double t8344 = 1/pow(t8343,2.0/3.0);
            double t8345 = gamma_aa[index]*mu_*t8340*t8341*t8342*t8344*(1.0/4.0);
            double t8346 = t8345+1.0;
            double t8347 = 1/t8346;
            double t8348 = kp-kp*t8347+1.0;
            double t8349 = 1/t8339;
            double t8350 = pow(rho_a[index],2.0/3.0);
            double t8351 = 1/(t8339*t8339);
            double t8352 = 1/pow(t8339,1.0E1);
            double t8353 = 1/pow(t8339,1.1E1);
            double t8354 = 1/(t8339*t8339*t8339);
            double t8355 = 1/(t8339*t8339*t8339*t8339);
            double t8356 = 1/(t8339*t8339*t8339*t8339*t8339);
            double t8357 = 1/(t8339*t8339*t8339*t8339*t8339*t8339);
            double t8358 = 1/(t8339*t8339*t8339*t8339*t8339*t8339*t8339);
            double t8359 = 1/(t8339*t8339*t8339*t8339*t8339*t8339*t8339*t8339);
            double t8360 = 1/(t8339*t8339*t8339*t8339*t8339*t8339*t8339*t8339*t8339);
            double t8361 = a_1*t8335*t8349;
            double t8362 = a_10*t8352*t8336*t8338;
            double t8363 = a_11*t8335*t8353*t8336*t8338;
            double t8364 = a_2*t8351*t8336;
            double t8365 = a_3*t8335*t8336*t8354;
            double t8366 = a_4*t8337*t8355;
            double t8367 = a_5*t8335*t8337*t8356;
            double t8368 = a_6*t8336*t8337*t8357;
            double t8369 = a_7*t8335*t8336*t8337*t8358;
            double t8370 = a_8*t8338*t8359;
            double t8371 = a_9*t8360*t8335*t8338;
            double t8372 = t8361+t8370+t8362+t8371+t8363+t8364+t8365+t8366+t8367+t8368+t8369+1.0;
            double t8373 = 1/t8326;
            double t8374 = 1/t8330;
            double t8375 = 1/t8323;
            double t8376 = 1/t8321;
            double t8377 = 1/pow(t8278,4.0/3.0);
            double t8378 = b1f*t8281;
            double t8379 = b3f*t8282;
            double t8380 = b4f*t8240*t8283;
            double t8381 = b2f*c*t8279;
            double t8382 = t8380+t8381+t8378+t8379;
            double t8383 = 1/t8382;
            double t8384 = t8260*t8383*(1.0/2.0);
            double t8385 = t8384+1.0;
            double t8386 = log(t8385);
            double t8387 = a1f*c*t8279;
            double t8388 = t8387+1.0;
            double t8390 = c0f*t8386*t8388*2.0;
            double t8389 = t8295-t8390;
            double t8391 = 1/(t8278*t8278);
            double t8418 = t8296*t8391;
            double t8392 = t8298-t8418;
            double t8393 = 1/pow(t8278,5.0/3.0);
            double t8394 = 1/sqrt(t8280);
            double t8395 = 1/t8291;
            double t8396 = 1/(t8288*t8288);
            double t8397 = b4p*t8240*t8393*(2.0/3.0);
            double t8398 = b2p*c*t8377*(1.0/3.0);
            double t8399 = b1p*c*t8394*t8377*(1.0/6.0);
            double t8400 = b3p*c*t8281*t8377*(1.0/2.0);
            double t8401 = t8397+t8398+t8399+t8400;
            double t8402 = t8294*t8395*t8396*t8401;
            double t8403 = 1/d2fz0;
            double t8404 = 1/Aa;
            double t8405 = b1a*t8281;
            double t8406 = b3a*t8282;
            double t8407 = b4a*t8240*t8283;
            double t8408 = b2a*c*t8279;
            double t8409 = t8405+t8406+t8407+t8408;
            double t8410 = 1/t8409;
            double t8411 = t8410*t8404*(1.0/2.0);
            double t8412 = t8411+1.0;
            double t8413 = log(t8412);
            double t8414 = a1a*c*t8279;
            double t8415 = t8414+1.0;
            double t8416 = 1/(t8278*t8278*t8278*t8278*t8278);
            double t8417 = pow(t8302,1.0/3.0);
            double t8419 = t8392*t8417*(4.0/3.0);
            double t8420 = pow(t8304,1.0/3.0);
            double t8421 = t8419-t8392*t8420*(4.0/3.0);
            double t8422 = t8300*t8301;
            double t8423 = t8422-1.0;
            double t8424 = a1f*c*t8236;
            double t8425 = t8424+1.0;
            double t8426 = b1f*t8238;
            double t8427 = b3f*t8239;
            double t8428 = b4f*t8240*t8241;
            double t8429 = b2f*c*t8236;
            double t8430 = t8426+t8427+t8428+t8429;
            double t8431 = 1/t8430;
            double t8432 = t8260*t8431*(1.0/2.0);
            double t8433 = t8432+1.0;
            double t8434 = 1/pow(rho_a[index],4.0/3.0);
            double t8435 = 1/pow(rho_a[index],5.0/3.0);
            double t8436 = 1/sqrt(t8237);
            double t8437 = log(t8433);
            double t8438 = 1/t8250;
            double t8439 = 1/(t8247*t8247);
            double t8440 = b4p*t8240*t8435*(2.0/3.0);
            double t8441 = b2p*c*t8434*(1.0/3.0);
            double t8442 = b1p*c*t8434*t8436*(1.0/6.0);
            double t8443 = b3p*c*t8238*t8434*(1.0/2.0);
            double t8444 = t8440+t8441+t8442+t8443;
            double t8445 = t8253*t8444*t8438*t8439;
            double t8446 = Aa*t8259*t8306*t8403*t8413*t8423*t8415*2.0;
            double t8448 = c0f*t8425*t8437*2.0;
            double t8447 = t8331-t8448;
            double t8449 = t8256*t8259*t8447;
            double t8450 = gamma_aa[index]*gamma_aa[index];
            double t8451 = gcaa*gcaa;
            double t8452 = t8450*t8450;
            double t8453 = t8451*t8451;
            double t8454 = 1/pow(rho_a[index],3.2E1/3.0);
            double t8455 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t8456 = 1/pow(rho_a[index],1.6E1/3.0);
            double t8457 = t8331-t8449;
            double t8458 = tau_a[index]-1.0/1.0E20;
            double t8459 = ( (t8458 > 0.0) ?  1.0 : 0.0 ) ;
            double t8460 = tau_a[index]*2.0;
            double t8461 = 1/rho_a[index];
            double t8488 = gamma_aa[index]*t8461*(1.0/4.0);
            double t8462 = t8460-t8488;
            double t8463 = t8333*t8462*(1.0/2.0);
            double t8464 = t8463-1.0;
            double t8465 = t8464*t8459;
            double t8466 = t8465+1.0;
            double t8467 = gamma_aa[index]*gcaa*t8311*4.0;
            double t8468 = gamma_aa[index]*gcaa*t8450*t8451*t8455*4.0;
            double t8469 = t8450*t8451*t8456*6.0;
            double t8470 = t8452*t8453*t8454;
            double t8471 = t8470+t8467+t8468+t8469+1.0;
            double t8472 = 1/t8471;
            double t8473 = gamma_aa[index]*gcaa*t8311;
            double t8474 = t8473+1.0;
            double t8475 = 1/t8474;
            double t8476 = gamma_aa[index]*gcaa*t8311*3.0;
            double t8477 = gamma_aa[index]*gcaa*t8450*t8451*t8455;
            double t8478 = t8450*t8451*t8456*3.0;
            double t8479 = t8476+t8477+t8478+1.0;
            double t8480 = 1/t8479;
            double t8481 = gamma_aa[index]*gcaa*t8311*2.0;
            double t8482 = t8450*t8451*t8456;
            double t8483 = t8481+t8482+1.0;
            double t8484 = 1/t8483;
            double t8485 = 1/pow(rho_a[index],1.9E1/3.0);
            double t8486 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t8487 = 1/pow(rho_a[index],3.5E1/3.0);
            double t8489 = 1/t8433;
            double t8490 = 1/(t8430*t8430);
            double t8491 = b4f*t8240*t8435*(2.0/3.0);
            double t8492 = b2f*c*t8434*(1.0/3.0);
            double t8493 = b1f*c*t8434*t8436*(1.0/6.0);
            double t8494 = b3f*c*t8238*t8434*(1.0/2.0);
            double t8495 = t8491+t8492+t8493+t8494;
            double t8496 = a1f*c*c0f*t8434*t8437*(2.0/3.0);
            double t8497 = a1p*c*c0p*t8251*t8434*(2.0/3.0);
            double t8498 = ccaa4*t8452*t8453*t8454*t8472;
            double t8499 = ccaa1*gamma_aa[index]*gcaa*t8311*t8475;
            double t8500 = ccaa3*gamma_aa[index]*gcaa*t8450*t8451*t8480*t8455;
            double t8501 = ccaa2*t8450*t8451*t8456*t8484;
            double t8502 = ccaa0+t8498+t8499+t8500+t8501;
            v_rho_a_[index] = -(ccab0+ccab1*gcab*t8308*t8375+ccab2*t8307*t8309*t8373+ccab4*t8315*t8316*t8376+ \
               ccab3*gcab*t8307*t8308*t8309*t8374)*(t8295-t8331+t8446+t8449+rho_a[index]*(-t8445+t8497+t8256*t8259* \
               (t8445+t8496-t8425*t8490*t8495*t8489-a1p*c*c0p*t8251*t8434*(2.0/3.0)))-t8278*(-t8402+t8259*t8300*t8301* \
               t8306*(t8402-(1/(t8382*t8382)*t8388*(b2f*c*t8377*(1.0/3.0)+b4f*t8240*t8393*(2.0/3.0)+b1f*c*t8394*t8377* \
               (1.0/6.0)+b3f*c*t8281*t8377*(1.0/2.0)))/t8385+a1f*c*c0f*t8377*t8386*(2.0/3.0)-a1p*c*c0p*t8292*t8377* \
               (2.0/3.0))+a1p*c*c0p*t8292*t8377*(2.0/3.0)+t8259*t8300*t8301*t8389*t8421-t8259*t8301*t8306*t8389*t8416* \
               4.0+t8259*t8296*t8297*t8300*t8306*t8389*4.0+Aa*t8259*t8306*t8403*t8413*t8415*(t8301*t8416*4.0-t8296* \
               t8297*t8300*4.0)*2.0-Aa*t8259*t8403*t8421*t8413*t8423*t8415*2.0-(t8259*t8306*t8403*t8423*t8415*1/(t8409* \
               t8409)*(b2a*c*t8377*(1.0/3.0)+b4a*t8240*t8393*(2.0/3.0)+b1a*c*t8394*t8377*(1.0/6.0)+b3a*c*t8281*t8377* \
               (1.0/2.0)))/t8412+Aa*a1a*c*t8259*t8306*t8377*t8403*t8413*t8423*(2.0/3.0))-t8259*t8300*t8301*t8306* \
               t8389)-(X-1.0)*(t8372*t8348+rho_a[index]*t8348*(C_k*a_1*t8350*t8333*t8349*(5.0/3.0)-C_k*a_1*t8350* \
               t8333*t8351*t8335*(5.0/3.0)+C_k*a_2*t8350*t8333*t8351*t8335*(1.0E1/3.0)-C_k*a_2*t8350*t8333*t8336* \
               t8354*(1.0E1/3.0)+C_k*a_3*t8350*t8333*t8336*t8354*5.0-C_k*a_4*t8350*t8333*t8337*t8356*(2.0E1/3.0)+ \
               C_k*a_5*t8350*t8333*t8337*t8356*(2.5E1/3.0)-C_k*a_8*t8350*t8333*t8360*t8338*(4.0E1/3.0)+C_k*a_9*t8350* \
               t8333*t8360*t8338*1.5E1+C_k*a_10*t8350*t8333*t8352*t8335*t8338*(5.0E1/3.0)-C_k*a_10*t8350*t8333*t8353* \
               t8336*t8338*(5.0E1/3.0)+C_k*a_11*t8350*t8333*t8353*t8336*t8338*(5.5E1/3.0)-C_k*a_3*t8350*t8333*t8335* \
               t8336*t8355*5.0+C_k*a_4*t8350*t8333*t8335*t8336*t8355*(2.0E1/3.0)-C_k*a_5*t8350*t8333*t8335*t8337* \
               t8357*(2.5E1/3.0)+C_k*a_6*t8350*t8333*t8335*t8337*t8357*1.0E1-C_k*a_6*t8350*t8333*t8336*t8337*t8358* \
               1.0E1+C_k*a_7*t8350*t8333*t8336*t8337*t8358*(3.5E1/3.0)-C_k*a_9*t8350*t8333*t8352*t8335*t8338*1.5E1- \
               C_k*a_11*t8350*t8333*t8335*t8336*t8338*1/pow(t8339,1.2E1)*(5.5E1/3.0)-C_k*a_7*t8350*t8333*t8335*t8336* \
               t8337*t8359*(3.5E1/3.0)+C_k*a_8*t8350*t8333*t8335*t8336*t8337*t8359*(4.0E1/3.0))-kp*rho_a[index]*t8372* \
               1/(t8346*t8346)*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index])*t8340*t8341*t8344* \
               (1.0/2.0)+gamma_aa[index]*mu_*t8340*t8341*t8342*1/pow(t8343,5.0/3.0)*(1.0/3.0)))-(rho_a[index]*(t8331- \
               t8256*t8259*t8447)+rho_b[index]*(t8277-t8256*t8259*(t8277-c0f*log((t8260*(1.0/2.0))/(b1f*t8263+b3f* \
               t8264+b2f*c*t8261+b4f*t8240*t8265)+1.0)*(a1f*c*t8261+1.0)*2.0))-t8278*(t8295+t8446-t8259*t8300*t8301* \
               t8306*t8389))*(ccab1*gamma_aa[index]*gcab*t8310*t8375*(4.0/3.0)-ccab2*t8307*1/(t8326*t8326)*t8309* \
               (gamma_aa[index]*gcab*t8310*(8.0/3.0)+gamma_aa[index]*t8310*t8307*t8308*(8.0/3.0))-ccab4*1/(t8321* \
               t8321)*t8315*t8316*(gamma_aa[index]*gcab*t8310*(1.6E1/3.0)+gamma_aa[index]*t8310*t8307*t8308*1.6E1+ \
               gamma_aa[index]*gcab*t8310*t8307*t8309*1.6E1+gamma_aa[index]*t8310*t8315*t8308*t8309*(1.6E1/3.0))- \
               ccab1*gamma_aa[index]*t8310*1/(t8323*t8323)*t8307*t8308*(4.0/3.0)+ccab2*gamma_aa[index]*t8310*t8307* \
               t8308*t8373*(8.0/3.0)-ccab3*gcab*1/(t8330*t8330)*t8307*t8308*t8309*(gamma_aa[index]*gcab*t8310*4.0+ \
               gamma_aa[index]*t8310*t8307*t8308*8.0+gamma_aa[index]*gcab*t8310*t8307*t8309*4.0)+ccab3*gamma_aa[index]* \
               gcab*t8310*t8307*t8309*t8374*4.0+ccab4*gamma_aa[index]*t8310*t8315*t8308*t8309*t8376*(1.6E1/3.0))- \
               t8457*t8466*t8502+rho_a[index]*t8457*t8466*(ccaa1*gamma_aa[index]*gcaa*t8310*t8475*(8.0/3.0)+ccaa2* \
               t8450*t8451*t8484*t8485*(1.6E1/3.0)+ccaa4*t8452*t8453*t8472*t8487*(3.2E1/3.0)-ccaa1*t8450*t8451*1/ \
               (t8474*t8474)*t8485*(8.0/3.0)-ccaa2*t8450*t8451*t8456*1/(t8483*t8483)*(gamma_aa[index]*gcaa*t8310* \
               (1.6E1/3.0)+t8450*t8451*t8485*(1.6E1/3.0))-ccaa4*t8452*t8453*1/(t8471*t8471)*t8454*(gamma_aa[index]* \
               gcaa*t8310*(3.2E1/3.0)+t8450*t8451*t8485*3.2E1+t8452*t8453*t8487*(3.2E1/3.0)+gamma_aa[index]*gcaa* \
               t8450*t8451*t8486*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t8450*t8451*t8480*t8486*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t8450*t8451*t8455*1/(t8479*t8479)*(gamma_aa[index]*gcaa*t8310*8.0+t8450*t8451*t8485*1.6E1+gamma_aa[index]* \
               gcaa*t8450*t8451*t8486*8.0))+rho_a[index]*t8466*t8502*(-t8445+t8497+t8256*t8259*(t8445+t8496-t8497- \
               t8425*t8490*t8495*t8489))-gamma_aa[index]*t8333*t8461*t8457*t8459*t8502*(1.0/8.0);
        } else if (rho_a[index] > cutoff_) {
            double t13635 = pow(rho_a[index],5.0/3.0);
            double t13636 = 1/tau_a[index];
            double t13637 = C_k*t13635*t13636;
            double t13638 = t13637-1.0;
            double t13639 = t13638*t13638;
            double t13640 = t13639*t13639;
            double t13641 = t13640*t13640;
            double t13642 = t13637+1.0;
            double t13643 = 1/pow(rho_a[index],1.0/3.0);
            double t13644 = c*t13643;
            double t13645 = sqrt(t13644);
            double t13646 = pow(t13644,3.0/2.0);
            double t13647 = c*c;
            double t13648 = 1/pow(rho_a[index],2.0/3.0);
            double t13649 = 1/c0p;
            double t13650 = b1p*t13645;
            double t13651 = b3p*t13646;
            double t13652 = b4p*t13647*t13648;
            double t13653 = b2p*c*t13643;
            double t13654 = t13650+t13651+t13652+t13653;
            double t13655 = 1/t13654;
            double t13656 = t13655*t13649*(1.0/2.0);
            double t13657 = t13656+1.0;
            double t13658 = log(t13657);
            double t13659 = a1p*c*t13643;
            double t13660 = t13659+1.0;
            double t13661 = gamma_aa[index]*gamma_aa[index];
            double t13662 = gcaa*gcaa;
            double t13663 = t13661*t13661;
            double t13664 = t13662*t13662;
            double t13665 = 1/pow(rho_a[index],3.2E1/3.0);
            double t13666 = 1/pow(rho_a[index],8.0/3.0);
            double t13667 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t13668 = 1/pow(rho_a[index],1.6E1/3.0);
            double t13669 = pow(2.0,1.0/3.0);
            double t13670 = t13669*2.0;
            double t13671 = t13670-2.0;
            double t13672 = two_13*2.0;
            double t13673 = t13672-2.0;
            double t13674 = 1/t13673;
            double t13675 = 1/c0f;
            double t13676 = b1f*t13645;
            double t13677 = b3f*t13646;
            double t13678 = b4f*t13647*t13648;
            double t13679 = b2f*c*t13643;
            double t13680 = t13676+t13677+t13678+t13679;
            double t13681 = 1/t13680;
            double t13682 = t13681*t13675*(1.0/2.0);
            double t13683 = t13682+1.0;
            double t13684 = log(t13683);
            double t13685 = a1f*c*t13643;
            double t13686 = t13685+1.0;
            double t13687 = c0f*t13684*t13686*2.0;
            double t13688 = c0p*t13660*t13658*2.0;
            double t13689 = tau_a[index]-1.0/1.0E20;
            double t13690 = ( (t13689 > 0.0) ?  1.0 : 0.0 ) ;
            double t13691 = tau_a[index]*2.0;
            double t13692 = 1/rho_a[index];
            double t13742 = gamma_aa[index]*t13692*(1.0/4.0);
            double t13693 = -t13742+t13691;
            double t13694 = t13636*t13693*(1.0/2.0);
            double t13695 = t13694-1.0;
            double t13696 = t13690*t13695;
            double t13697 = t13696+1.0;
            double t13698 = gamma_aa[index]*gcaa*t13666*4.0;
            double t13699 = gamma_aa[index]*gcaa*t13661*t13662*t13667*4.0;
            double t13700 = t13661*t13662*t13668*6.0;
            double t13701 = t13663*t13664*t13665;
            double t13702 = t13700+t13701+t13698+t13699+1.0;
            double t13703 = 1/t13702;
            double t13704 = gamma_aa[index]*gcaa*t13666;
            double t13705 = t13704+1.0;
            double t13706 = 1/t13705;
            double t13707 = gamma_aa[index]*gcaa*t13666*3.0;
            double t13708 = gamma_aa[index]*gcaa*t13661*t13662*t13667;
            double t13709 = t13661*t13662*t13668*3.0;
            double t13710 = t13707+t13708+t13709+1.0;
            double t13711 = 1/t13710;
            double t13712 = gamma_aa[index]*gcaa*t13666*2.0;
            double t13713 = t13661*t13662*t13668;
            double t13714 = t13712+t13713+1.0;
            double t13715 = 1/t13714;
            double t13716 = 1/pow(rho_a[index],1.9E1/3.0);
            double t13717 = 1/pow(rho_a[index],1.1E1/3.0);
            double t13718 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t13719 = 1/pow(rho_a[index],3.5E1/3.0);
            double t13720 = X-1.0;
            double t13721 = 1/(k*k);
            double t13722 = 1/kp;
            double t13723 = 1/(rho_a[index]*rho_a[index]);
            double t13724 = rho_a[index]*2.0;
            double t13725 = 1/pow(t13724,2.0/3.0);
            double t13726 = gamma_aa[index]*mu_*t13721*t13722*t13723*t13725*(1.0/4.0);
            double t13727 = t13726+1.0;
            double t13728 = 1/t13727;
            double t13729 = kp-kp*t13728+1.0;
            double t13730 = 1/t13642;
            double t13731 = pow(rho_a[index],2.0/3.0);
            double t13732 = 1/(t13642*t13642);
            double t13733 = 1/pow(t13642,1.0E1);
            double t13734 = 1/pow(t13642,1.1E1);
            double t13735 = 1/(t13642*t13642*t13642);
            double t13736 = 1/(t13642*t13642*t13642*t13642);
            double t13737 = 1/(t13642*t13642*t13642*t13642*t13642);
            double t13738 = 1/(t13642*t13642*t13642*t13642*t13642*t13642);
            double t13739 = 1/(t13642*t13642*t13642*t13642*t13642*t13642*t13642);
            double t13740 = 1/(t13642*t13642*t13642*t13642*t13642*t13642*t13642*t13642);
            double t13741 = 1/(t13642*t13642*t13642*t13642*t13642*t13642*t13642*t13642*t13642);
            double t13743 = 1/pow(rho_a[index],4.0/3.0);
            double t13744 = 1/pow(rho_a[index],5.0/3.0);
            double t13745 = 1/sqrt(t13644);
            double t13746 = 1/t13657;
            double t13747 = 1/(t13654*t13654);
            double t13748 = b4p*t13744*t13647*(2.0/3.0);
            double t13749 = b2p*c*t13743*(1.0/3.0);
            double t13750 = b1p*c*t13743*t13745*(1.0/6.0);
            double t13751 = b3p*c*t13743*t13645*(1.0/2.0);
            double t13752 = t13750+t13751+t13748+t13749;
            double t13753 = t13660*t13752*t13746*t13747;
            double t13754 = ccaa4*t13703*t13663*t13664*t13665;
            double t13755 = ccaa1*gamma_aa[index]*gcaa*t13706*t13666;
            double t13756 = ccaa3*gamma_aa[index]*gcaa*t13711*t13661*t13662*t13667;
            double t13757 = ccaa2*t13661*t13715*t13662*t13668;
            double t13758 = ccaa0+t13754+t13755+t13756+t13757;
            double t13759 = t13687-t13688;
            double t13760 = t13671*t13674*t13759;
            double t13761 = t13760+t13688;
            double t13762 = a_1*t13730*t13638;
            double t13763 = a_10*t13641*t13733*t13639;
            double t13764 = a_11*t13641*t13734*t13638*t13639;
            double t13765 = a_2*t13732*t13639;
            double t13766 = a_3*t13735*t13638*t13639;
            double t13767 = a_4*t13640*t13736;
            double t13768 = a_5*t13640*t13638*t13737;
            double t13769 = a_6*t13640*t13639*t13738;
            double t13770 = a_7*t13640*t13638*t13639*t13739;
            double t13771 = a_8*t13641*t13740;
            double t13772 = a_9*t13641*t13741*t13638;
            double t13773 = t13770+t13762+t13771+t13763+t13772+t13764+t13765+t13766+t13767+t13768+t13769+1.0;
            v_rho_a_[index] = -t13720*t13773*t13729-t13758*t13697*(t13688+t13671*t13674*(t13687-c0p*t13660*t13658* \
               2.0))+rho_a[index]*t13758*t13697*(-t13753+t13671*t13674*(t13753-(1/(t13680*t13680)*t13686*(b2f*c*t13743* \
               (1.0/3.0)+b4f*t13744*t13647*(2.0/3.0)+b1f*c*t13743*t13745*(1.0/6.0)+b3f*c*t13743*t13645*(1.0/2.0)) \
               )/t13683+a1f*c*c0f*t13743*t13684*(2.0/3.0)-a1p*c*c0p*t13743*t13658*(2.0/3.0))+a1p*c*c0p*t13743*t13658* \
               (2.0/3.0))-rho_a[index]*t13720*t13729*(C_k*a_1*t13730*t13731*t13636*(5.0/3.0)-C_k*a_1*t13731*t13732* \
               t13636*t13638*(5.0/3.0)+C_k*a_2*t13731*t13732*t13636*t13638*(1.0E1/3.0)-C_k*a_2*t13731*t13636*t13735* \
               t13639*(1.0E1/3.0)+C_k*a_3*t13731*t13636*t13735*t13639*5.0-C_k*a_4*t13640*t13731*t13636*t13737*(2.0E1/ \
               3.0)+C_k*a_5*t13640*t13731*t13636*t13737*(2.5E1/3.0)-C_k*a_8*t13641*t13731*t13741*t13636*(4.0E1/3.0) \
               +C_k*a_9*t13641*t13731*t13741*t13636*1.5E1+C_k*a_10*t13641*t13731*t13733*t13636*t13638*(5.0E1/3.0) \
               -C_k*a_10*t13641*t13731*t13734*t13636*t13639*(5.0E1/3.0)+C_k*a_11*t13641*t13731*t13734*t13636*t13639* \
               (5.5E1/3.0)-C_k*a_3*t13731*t13636*t13736*t13638*t13639*5.0+C_k*a_4*t13731*t13636*t13736*t13638*t13639* \
               (2.0E1/3.0)-C_k*a_5*t13640*t13731*t13636*t13638*t13738*(2.5E1/3.0)+C_k*a_6*t13640*t13731*t13636*t13638* \
               t13738*1.0E1-C_k*a_6*t13640*t13731*t13636*t13639*t13739*1.0E1+C_k*a_7*t13640*t13731*t13636*t13639* \
               t13739*(3.5E1/3.0)-C_k*a_9*t13641*t13731*t13733*t13636*t13638*1.5E1-C_k*a_11*t13641*t13731*1/pow(t13642,1.2E1) \
               *t13636*t13638*t13639*(5.5E1/3.0)-C_k*a_7*t13640*t13731*t13740*t13636*t13638*t13639*(3.5E1/3.0)+C_k* \
               a_8*t13640*t13731*t13740*t13636*t13638*t13639*(4.0E1/3.0))+rho_a[index]*t13761*t13697*(ccaa1*gamma_aa[index]* \
               gcaa*t13706*t13717*(8.0/3.0)+ccaa2*t13661*t13715*t13662*t13716*(1.6E1/3.0)+ccaa4*t13703*t13663*t13664* \
               t13719*(3.2E1/3.0)-ccaa1*1/(t13705*t13705)*t13661*t13662*t13716*(8.0/3.0)-ccaa2*1/(t13714*t13714)* \
               t13661*t13662*t13668*(gamma_aa[index]*gcaa*t13717*(1.6E1/3.0)+t13661*t13662*t13716*(1.6E1/3.0))-ccaa4* \
               1/(t13702*t13702)*t13663*t13664*t13665*(gamma_aa[index]*gcaa*t13717*(3.2E1/3.0)+t13661*t13662*t13716* \
               3.2E1+t13663*t13664*t13719*(3.2E1/3.0)+gamma_aa[index]*gcaa*t13661*t13662*t13718*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t13711*t13661*t13662*t13718*8.0-ccaa3*gamma_aa[index]*gcaa*1/(t13710*t13710)*t13661*t13662*t13667* \
               (gamma_aa[index]*gcaa*t13717*8.0+t13661*t13662*t13716*1.6E1+gamma_aa[index]*gcaa*t13661*t13662*t13718* \
               8.0))-gamma_aa[index]*t13761*t13636*t13690*t13692*t13758*(1.0/8.0)+kp*rho_a[index]*t13720*1/(t13727* \
               t13727)*t13773*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index])*t13721*t13722*t13725* \
               (1.0/2.0)+gamma_aa[index]*mu_*t13721*t13722*t13723*1/pow(t13724,5.0/3.0)*(1.0/3.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t8504 = 1/pow(rho_a[index],1.0/3.0);
            double t8505 = c*t8504;
            double t8506 = sqrt(t8505);
            double t8507 = pow(t8505,3.0/2.0);
            double t8508 = c*c;
            double t8509 = 1/pow(rho_a[index],2.0/3.0);
            double t8510 = 1/c0p;
            double t8511 = b1p*t8506;
            double t8512 = b3p*t8507;
            double t8513 = b4p*t8508*t8509;
            double t8514 = b2p*c*t8504;
            double t8515 = t8511+t8512+t8513+t8514;
            double t8516 = 1/t8515;
            double t8517 = t8510*t8516*(1.0/2.0);
            double t8518 = t8517+1.0;
            double t8519 = log(t8518);
            double t8520 = a1p*c*t8504;
            double t8521 = t8520+1.0;
            double t8522 = pow(2.0,1.0/3.0);
            double t8523 = t8522*2.0;
            double t8524 = t8523-2.0;
            double t8525 = two_13*2.0;
            double t8526 = t8525-2.0;
            double t8527 = 1/t8526;
            double t8528 = 1/c0f;
            double t8529 = 1/pow(rho_b[index],1.0/3.0);
            double t8530 = c*t8529;
            double t8531 = sqrt(t8530);
            double t8532 = pow(t8530,3.0/2.0);
            double t8533 = 1/pow(rho_b[index],2.0/3.0);
            double t8534 = b1p*t8531;
            double t8535 = b3p*t8532;
            double t8536 = b4p*t8533*t8508;
            double t8537 = b2p*c*t8529;
            double t8538 = t8534+t8535+t8536+t8537;
            double t8539 = 1/t8538;
            double t8540 = t8510*t8539*(1.0/2.0);
            double t8541 = t8540+1.0;
            double t8542 = log(t8541);
            double t8543 = a1p*c*t8529;
            double t8544 = t8543+1.0;
            double t8545 = c0p*t8542*t8544*2.0;
            double t8546 = rho_a[index]+rho_b[index];
            double t8547 = 1/pow(t8546,1.0/3.0);
            double t8548 = c*t8547;
            double t8549 = sqrt(t8548);
            double t8550 = pow(t8548,3.0/2.0);
            double t8551 = 1/pow(t8546,2.0/3.0);
            double t8552 = b1p*t8549;
            double t8553 = b3p*t8550;
            double t8554 = b4p*t8551*t8508;
            double t8555 = b2p*c*t8547;
            double t8556 = t8552+t8553+t8554+t8555;
            double t8557 = 1/t8556;
            double t8558 = t8510*t8557*(1.0/2.0);
            double t8559 = t8558+1.0;
            double t8560 = log(t8559);
            double t8561 = a1p*c*t8547;
            double t8562 = t8561+1.0;
            double t8563 = c0p*t8560*t8562*2.0;
            double t8564 = rho_a[index]-rho_b[index];
            double t8565 = t8564*t8564;
            double t8566 = 1/t8546;
            double t8567 = t8564*t8566;
            double t8568 = 1/(t8546*t8546*t8546*t8546);
            double t8569 = t8565*t8565;
            double t8570 = t8567+1.0;
            double t8571 = pow(t8570,4.0/3.0);
            double t8572 = -t8567+1.0;
            double t8573 = pow(t8572,4.0/3.0);
            double t8574 = t8571+t8573-2.0;
            double t8575 = gcab*gcab;
            double t8579 = 1/pow(rho_a[index],8.0/3.0);
            double t8580 = gamma_aa[index]*t8579*(1.0/2.0);
            double t8581 = 1/pow(rho_b[index],8.0/3.0);
            double t8582 = gamma_bb[index]*t8581*(1.0/2.0);
            double t8576 = t8580+t8582;
            double t8577 = t8576*t8576;
            double t8578 = 1/pow(rho_b[index],1.1E1/3.0);
            double t8583 = t8575*t8575;
            double t8584 = t8577*t8577;
            double t8585 = t8575*t8577*6.0;
            double t8586 = gcab*t8575*t8576*t8577*4.0;
            double t8587 = t8583*t8584;
            double t8588 = gcab*t8576*4.0;
            double t8589 = t8585+t8586+t8587+t8588+1.0;
            double t8590 = gcab*t8576;
            double t8591 = t8590+1.0;
            double t8592 = t8575*t8577;
            double t8593 = gcab*t8576*2.0;
            double t8594 = t8592+t8593+1.0;
            double t8595 = t8575*t8577*3.0;
            double t8596 = gcab*t8575*t8576*t8577;
            double t8597 = gcab*t8576*3.0;
            double t8598 = t8595+t8596+t8597+1.0;
            double t8599 = c0p*t8521*t8519*2.0;
            double t8600 = pow(rho_b[index],5.0/3.0);
            double t8601 = 1/tau_b[index];
            double t8602 = C_k*t8600*t8601;
            double t8603 = t8602-1.0;
            double t8604 = t8603*t8603;
            double t8605 = t8604*t8604;
            double t8606 = t8605*t8605;
            double t8607 = t8602+1.0;
            double t8608 = 1/(k*k);
            double t8609 = 1/kp;
            double t8610 = 1/(rho_b[index]*rho_b[index]);
            double t8611 = rho_b[index]*2.0;
            double t8612 = 1/pow(t8611,2.0/3.0);
            double t8613 = gamma_bb[index]*mu_*t8610*t8612*t8608*t8609*(1.0/4.0);
            double t8614 = t8613+1.0;
            double t8615 = 1/t8614;
            double t8616 = kp-kp*t8615+1.0;
            double t8617 = 1/t8607;
            double t8618 = pow(rho_b[index],2.0/3.0);
            double t8619 = 1/(t8607*t8607);
            double t8620 = 1/pow(t8607,1.0E1);
            double t8621 = 1/pow(t8607,1.1E1);
            double t8622 = 1/(t8607*t8607*t8607);
            double t8623 = 1/(t8607*t8607*t8607*t8607);
            double t8624 = 1/(t8607*t8607*t8607*t8607*t8607);
            double t8625 = 1/(t8607*t8607*t8607*t8607*t8607*t8607);
            double t8626 = 1/(t8607*t8607*t8607*t8607*t8607*t8607*t8607);
            double t8627 = 1/(t8607*t8607*t8607*t8607*t8607*t8607*t8607*t8607);
            double t8628 = 1/(t8607*t8607*t8607*t8607*t8607*t8607*t8607*t8607*t8607);
            double t8629 = a_1*t8603*t8617;
            double t8630 = a_10*t8620*t8604*t8606;
            double t8631 = a_11*t8603*t8621*t8604*t8606;
            double t8632 = a_2*t8604*t8619;
            double t8633 = a_3*t8603*t8604*t8622;
            double t8634 = a_4*t8605*t8623;
            double t8635 = a_5*t8603*t8605*t8624;
            double t8636 = a_6*t8604*t8605*t8625;
            double t8637 = a_7*t8603*t8604*t8605*t8626;
            double t8638 = a_8*t8606*t8627;
            double t8639 = a_9*t8603*t8606*t8628;
            double t8640 = t8630+t8631+t8632+t8633+t8634+t8635+t8636+t8637+t8629+t8638+t8639+1.0;
            double t8641 = 1/t8594;
            double t8642 = 1/t8598;
            double t8643 = 1/t8591;
            double t8644 = 1/t8589;
            double t8645 = 1/pow(t8546,4.0/3.0);
            double t8646 = b1f*t8549;
            double t8647 = b3f*t8550;
            double t8648 = b4f*t8551*t8508;
            double t8649 = b2f*c*t8547;
            double t8650 = t8646+t8647+t8648+t8649;
            double t8651 = 1/t8650;
            double t8652 = t8528*t8651*(1.0/2.0);
            double t8653 = t8652+1.0;
            double t8654 = log(t8653);
            double t8655 = a1f*c*t8547;
            double t8656 = t8655+1.0;
            double t8658 = c0f*t8654*t8656*2.0;
            double t8657 = t8563-t8658;
            double t8659 = 1/(t8546*t8546);
            double t8660 = t8564*t8659;
            double t8661 = t8566+t8660;
            double t8662 = 1/pow(t8546,5.0/3.0);
            double t8663 = 1/sqrt(t8548);
            double t8664 = 1/t8559;
            double t8665 = 1/(t8556*t8556);
            double t8666 = b4p*t8508*t8662*(2.0/3.0);
            double t8667 = b2p*c*t8645*(1.0/3.0);
            double t8668 = b1p*c*t8645*t8663*(1.0/6.0);
            double t8669 = b3p*c*t8549*t8645*(1.0/2.0);
            double t8670 = t8666+t8667+t8668+t8669;
            double t8671 = 1/d2fz0;
            double t8672 = 1/Aa;
            double t8673 = b1a*t8549;
            double t8674 = b3a*t8550;
            double t8675 = b4a*t8551*t8508;
            double t8676 = b2a*c*t8547;
            double t8677 = t8673+t8674+t8675+t8676;
            double t8678 = 1/t8677;
            double t8679 = t8672*t8678*(1.0/2.0);
            double t8680 = t8679+1.0;
            double t8681 = log(t8680);
            double t8682 = a1a*c*t8547;
            double t8683 = t8682+1.0;
            double t8684 = 1/(t8546*t8546*t8546*t8546*t8546);
            double t8685 = pow(t8570,1.0/3.0);
            double t8686 = t8661*t8685*(4.0/3.0);
            double t8687 = pow(t8572,1.0/3.0);
            double t8688 = t8686-t8661*t8687*(4.0/3.0);
            double t8689 = t8568*t8569;
            double t8690 = t8689-1.0;
            double t8691 = t8562*t8670*t8664*t8665;
            double t8692 = a1f*c*t8529;
            double t8693 = t8692+1.0;
            double t8694 = b1f*t8531;
            double t8695 = b3f*t8532;
            double t8696 = b4f*t8533*t8508;
            double t8697 = b2f*c*t8529;
            double t8698 = t8694+t8695+t8696+t8697;
            double t8699 = 1/t8698;
            double t8700 = t8528*t8699*(1.0/2.0);
            double t8701 = t8700+1.0;
            double t8702 = 1/pow(rho_b[index],4.0/3.0);
            double t8703 = 1/pow(rho_b[index],5.0/3.0);
            double t8704 = 1/sqrt(t8530);
            double t8705 = log(t8701);
            double t8706 = 1/t8541;
            double t8707 = 1/(t8538*t8538);
            double t8708 = b4p*t8508*t8703*(2.0/3.0);
            double t8709 = b2p*c*t8702*(1.0/3.0);
            double t8710 = b1p*c*t8702*t8704*(1.0/6.0);
            double t8711 = b3p*c*t8531*t8702*(1.0/2.0);
            double t8712 = t8710+t8711+t8708+t8709;
            double t8713 = t8544*t8712*t8706*t8707;
            double t8716 = c0f*t8693*t8705*2.0;
            double t8714 = t8545-t8716;
            double t8715 = Aa*t8527*t8574*t8671*t8681*t8690*t8683*2.0;
            double t8717 = t8524*t8527*t8714;
            double t8718 = gamma_bb[index]*gamma_bb[index];
            double t8719 = gcaa*gcaa;
            double t8720 = t8718*t8718;
            double t8721 = t8719*t8719;
            double t8722 = 1/pow(rho_b[index],3.2E1/3.0);
            double t8723 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t8724 = 1/pow(rho_b[index],1.6E1/3.0);
            double t8725 = t8545-t8717;
            double t8726 = tau_b[index]-1.0/1.0E20;
            double t8727 = ( (t8726 > 0.0) ?  1.0 : 0.0 ) ;
            double t8728 = tau_b[index]*2.0;
            double t8729 = 1/rho_b[index];
            double t8756 = gamma_bb[index]*t8729*(1.0/4.0);
            double t8730 = t8728-t8756;
            double t8731 = t8601*t8730*(1.0/2.0);
            double t8732 = t8731-1.0;
            double t8733 = t8732*t8727;
            double t8734 = t8733+1.0;
            double t8735 = gamma_bb[index]*gcaa*t8581*4.0;
            double t8736 = gamma_bb[index]*gcaa*t8723*t8718*t8719*4.0;
            double t8737 = t8724*t8718*t8719*6.0;
            double t8738 = t8720*t8721*t8722;
            double t8739 = t8735+t8736+t8737+t8738+1.0;
            double t8740 = 1/t8739;
            double t8741 = gamma_bb[index]*gcaa*t8581;
            double t8742 = t8741+1.0;
            double t8743 = 1/t8742;
            double t8744 = gamma_bb[index]*gcaa*t8581*3.0;
            double t8745 = gamma_bb[index]*gcaa*t8723*t8718*t8719;
            double t8746 = t8724*t8718*t8719*3.0;
            double t8747 = t8744+t8745+t8746+1.0;
            double t8748 = 1/t8747;
            double t8749 = gamma_bb[index]*gcaa*t8581*2.0;
            double t8750 = t8724*t8718*t8719;
            double t8751 = t8750+t8749+1.0;
            double t8752 = 1/t8751;
            double t8753 = 1/pow(rho_b[index],1.9E1/3.0);
            double t8754 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t8755 = 1/pow(rho_b[index],3.5E1/3.0);
            double t8757 = 1/t8701;
            double t8758 = 1/(t8698*t8698);
            double t8759 = b4f*t8508*t8703*(2.0/3.0);
            double t8760 = b2f*c*t8702*(1.0/3.0);
            double t8761 = b1f*c*t8702*t8704*(1.0/6.0);
            double t8762 = b3f*c*t8531*t8702*(1.0/2.0);
            double t8763 = t8760+t8761+t8762+t8759;
            double t8764 = a1f*c*c0f*t8702*t8705*(2.0/3.0);
            double t8765 = a1p*c*c0p*t8542*t8702*(2.0/3.0);
            double t8766 = ccaa4*t8720*t8721*t8722*t8740;
            double t8767 = ccaa1*gamma_bb[index]*gcaa*t8581*t8743;
            double t8768 = ccaa3*gamma_bb[index]*gcaa*t8723*t8718*t8719*t8748;
            double t8769 = ccaa2*t8724*t8752*t8718*t8719;
            double t8770 = ccaa0+t8766+t8767+t8768+t8769;
            v_rho_b_[index] = -(X-1.0)*(t8640*t8616+rho_b[index]*t8616*(C_k*a_1*t8601*t8617*t8618*(5.0/3.0)-C_k* \
               a_1*t8601*t8603*t8618*t8619*(5.0/3.0)-C_k*a_2*t8601*t8604*t8622*t8618*(1.0E1/3.0)+C_k*a_2*t8601*t8603* \
               t8618*t8619*(1.0E1/3.0)+C_k*a_3*t8601*t8604*t8622*t8618*5.0-C_k*a_4*t8601*t8605*t8624*t8618*(2.0E1/ \
               3.0)+C_k*a_5*t8601*t8605*t8624*t8618*(2.5E1/3.0)-C_k*a_8*t8601*t8606*t8618*t8628*(4.0E1/3.0)+C_k*a_9* \
               t8601*t8606*t8618*t8628*1.5E1+C_k*a_10*t8601*t8620*t8603*t8606*t8618*(5.0E1/3.0)-C_k*a_10*t8601*t8621* \
               t8604*t8606*t8618*(5.0E1/3.0)+C_k*a_11*t8601*t8621*t8604*t8606*t8618*(5.5E1/3.0)-C_k*a_3*t8601*t8603* \
               t8604*t8623*t8618*5.0+C_k*a_4*t8601*t8603*t8604*t8623*t8618*(2.0E1/3.0)-C_k*a_5*t8601*t8603*t8605* \
               t8625*t8618*(2.5E1/3.0)+C_k*a_6*t8601*t8603*t8605*t8625*t8618*1.0E1-C_k*a_6*t8601*t8604*t8605*t8626* \
               t8618*1.0E1+C_k*a_7*t8601*t8604*t8605*t8626*t8618*(3.5E1/3.0)-C_k*a_9*t8601*t8620*t8603*t8606*t8618* \
               1.5E1-C_k*a_11*t8601*t8603*t8604*t8606*1/pow(t8607,1.2E1)*t8618*(5.5E1/3.0)-C_k*a_7*t8601*t8603*t8604* \
               t8605*t8618*t8627*(3.5E1/3.0)+C_k*a_8*t8601*t8603*t8604*t8605*t8618*t8627*(4.0E1/3.0))-kp*rho_b[index]* \
               t8640*1/(t8614*t8614)*(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index])*t8612*t8608* \
               t8609*(1.0/2.0)+gamma_bb[index]*mu_*t8610*1/pow(t8611,5.0/3.0)*t8608*t8609*(1.0/3.0)))-(ccab0+ccab1* \
               gcab*t8576*t8643+ccab2*t8575*t8577*t8641+ccab4*t8583*t8584*t8644+ccab3*gcab*t8575*t8576*t8577*t8642) \
               *(-t8545+t8563+t8715+t8717+t8546*(t8691-t8527*t8574*t8568*t8569*(t8691-(1/(t8650*t8650)*t8656*(b2f* \
               c*t8645*(1.0/3.0)+b4f*t8508*t8662*(2.0/3.0)+b1f*c*t8645*t8663*(1.0/6.0)+b3f*c*t8549*t8645*(1.0/2.0) \
               ))/t8653+a1f*c*c0f*t8645*t8654*(2.0/3.0)-a1p*c*c0p*t8560*t8645*(2.0/3.0))-a1p*c*c0p*t8560*t8645*(2.0/ \
               3.0)+t8527*t8574*t8569*t8657*t8684*4.0+t8527*t8568*t8569*t8657*t8688+t8527*t8564*t8565*t8574*t8568* \
               t8657*4.0-Aa*t8527*t8574*t8671*t8681*t8683*(t8569*t8684*4.0+t8564*t8565*t8568*4.0)*2.0-Aa*t8527*t8671* \
               t8681*t8690*t8683*t8688*2.0+(t8527*t8574*t8671*t8690*t8683*1/(t8677*t8677)*(b2a*c*t8645*(1.0/3.0)+ \
               b4a*t8508*t8662*(2.0/3.0)+b1a*c*t8645*t8663*(1.0/6.0)+b3a*c*t8549*t8645*(1.0/2.0)))/t8680-Aa*a1a*c* \
               t8527*t8574*t8671*t8645*t8681*t8690*(2.0/3.0))+rho_b[index]*(-t8713+t8765+t8524*t8527*(t8713+t8764- \
               t8693*t8763*t8757*t8758-a1p*c*c0p*t8542*t8702*(2.0/3.0)))-t8527*t8574*t8568*t8569*t8657)-(rho_b[index]* \
               (t8545-t8524*t8527*t8714)+rho_a[index]*(t8599-t8524*t8527*(t8599-c0f*log((t8528*(1.0/2.0))/(b1f*t8506+ \
               b3f*t8507+b2f*c*t8504+b4f*t8508*t8509)+1.0)*(a1f*c*t8504+1.0)*2.0))-t8546*(t8563+t8715-t8527*t8574* \
               t8568*t8569*t8657))*(ccab1*gamma_bb[index]*gcab*t8578*t8643*(4.0/3.0)-ccab2*t8575*1/(t8594*t8594)* \
               t8577*(gamma_bb[index]*gcab*t8578*(8.0/3.0)+gamma_bb[index]*t8575*t8576*t8578*(8.0/3.0))-ccab4*t8583* \
               t8584*1/(t8589*t8589)*(gamma_bb[index]*gcab*t8578*(1.6E1/3.0)+gamma_bb[index]*t8575*t8576*t8578*1.6E1+ \
               gamma_bb[index]*gcab*t8575*t8577*t8578*1.6E1+gamma_bb[index]*t8583*t8576*t8577*t8578*(1.6E1/3.0))- \
               ccab1*gamma_bb[index]*1/(t8591*t8591)*t8575*t8576*t8578*(4.0/3.0)+ccab2*gamma_bb[index]*t8575*t8576* \
               t8578*t8641*(8.0/3.0)-ccab3*gcab*t8575*t8576*t8577*1/(t8598*t8598)*(gamma_bb[index]*gcab*t8578*4.0+ \
               gamma_bb[index]*t8575*t8576*t8578*8.0+gamma_bb[index]*gcab*t8575*t8577*t8578*4.0)+ccab3*gamma_bb[index]* \
               gcab*t8575*t8577*t8578*t8642*4.0+ccab4*gamma_bb[index]*t8583*t8576*t8577*t8578*t8644*(1.6E1/3.0))- \
               t8725*t8734*t8770+rho_b[index]*t8725*t8734*(ccaa1*gamma_bb[index]*gcaa*t8578*t8743*(8.0/3.0)+ccaa4* \
               t8720*t8721*t8740*t8755*(3.2E1/3.0)+ccaa2*t8752*t8753*t8718*t8719*(1.6E1/3.0)-ccaa1*1/(t8742*t8742) \
               *t8753*t8718*t8719*(8.0/3.0)-ccaa2*t8724*1/(t8751*t8751)*t8718*t8719*(gamma_bb[index]*gcaa*t8578*(1.6E1/ \
               3.0)+t8753*t8718*t8719*(1.6E1/3.0))-ccaa4*t8720*t8721*t8722*1/(t8739*t8739)*(gamma_bb[index]*gcaa* \
               t8578*(3.2E1/3.0)+t8720*t8721*t8755*(3.2E1/3.0)+t8753*t8718*t8719*3.2E1+gamma_bb[index]*gcaa*t8718* \
               t8754*t8719*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t8718*t8754*t8719*t8748*8.0-ccaa3*gamma_bb[index]*gcaa* \
               t8723*t8718*t8719*1/(t8747*t8747)*(gamma_bb[index]*gcaa*t8578*8.0+t8753*t8718*t8719*1.6E1+gamma_bb[index]* \
               gcaa*t8718*t8754*t8719*8.0))+rho_b[index]*t8734*t8770*(-t8713+t8765+t8524*t8527*(t8713+t8764-t8765- \
               t8693*t8763*t8757*t8758))-gamma_bb[index]*t8601*t8725*t8770*t8727*t8729*(1.0/8.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t12510 = pow(rho_b[index],5.0/3.0);
            double t12511 = 1/tau_b[index];
            double t12512 = C_k*t12510*t12511;
            double t12513 = t12512-1.0;
            double t12514 = t12513*t12513;
            double t12515 = t12514*t12514;
            double t12516 = t12515*t12515;
            double t12517 = t12512+1.0;
            double t12518 = 1/pow(rho_b[index],1.0/3.0);
            double t12519 = c*t12518;
            double t12520 = sqrt(t12519);
            double t12521 = pow(t12519,3.0/2.0);
            double t12522 = c*c;
            double t12523 = 1/pow(rho_b[index],2.0/3.0);
            double t12524 = 1/c0p;
            double t12525 = b1p*t12520;
            double t12526 = b3p*t12521;
            double t12527 = b4p*t12522*t12523;
            double t12528 = b2p*c*t12518;
            double t12529 = t12525+t12526+t12527+t12528;
            double t12530 = 1/t12529;
            double t12531 = t12530*t12524*(1.0/2.0);
            double t12532 = t12531+1.0;
            double t12533 = log(t12532);
            double t12534 = a1p*c*t12518;
            double t12535 = t12534+1.0;
            double t12536 = gamma_bb[index]*gamma_bb[index];
            double t12537 = gcaa*gcaa;
            double t12538 = t12536*t12536;
            double t12539 = t12537*t12537;
            double t12540 = 1/pow(rho_b[index],3.2E1/3.0);
            double t12541 = 1/pow(rho_b[index],8.0/3.0);
            double t12542 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t12543 = 1/pow(rho_b[index],1.6E1/3.0);
            double t12544 = pow(2.0,1.0/3.0);
            double t12545 = t12544*2.0;
            double t12546 = t12545-2.0;
            double t12547 = two_13*2.0;
            double t12548 = t12547-2.0;
            double t12549 = 1/t12548;
            double t12550 = 1/c0f;
            double t12551 = b1f*t12520;
            double t12552 = b3f*t12521;
            double t12553 = b4f*t12522*t12523;
            double t12554 = b2f*c*t12518;
            double t12555 = t12551+t12552+t12553+t12554;
            double t12556 = 1/t12555;
            double t12557 = t12550*t12556*(1.0/2.0);
            double t12558 = t12557+1.0;
            double t12559 = log(t12558);
            double t12560 = a1f*c*t12518;
            double t12561 = t12560+1.0;
            double t12562 = c0f*t12561*t12559*2.0;
            double t12563 = c0p*t12533*t12535*2.0;
            double t12564 = tau_b[index]-1.0/1.0E20;
            double t12565 = ( (t12564 > 0.0) ?  1.0 : 0.0 ) ;
            double t12566 = tau_b[index]*2.0;
            double t12567 = 1/rho_b[index];
            double t12617 = gamma_bb[index]*t12567*(1.0/4.0);
            double t12568 = -t12617+t12566;
            double t12569 = t12511*t12568*(1.0/2.0);
            double t12570 = t12569-1.0;
            double t12571 = t12570*t12565;
            double t12572 = t12571+1.0;
            double t12573 = gamma_bb[index]*gcaa*t12541*4.0;
            double t12574 = gamma_bb[index]*gcaa*t12542*t12536*t12537*4.0;
            double t12575 = t12543*t12536*t12537*6.0;
            double t12576 = t12540*t12538*t12539;
            double t12577 = t12573+t12574+t12575+t12576+1.0;
            double t12578 = 1/t12577;
            double t12579 = gamma_bb[index]*gcaa*t12541;
            double t12580 = t12579+1.0;
            double t12581 = 1/t12580;
            double t12582 = gamma_bb[index]*gcaa*t12541*3.0;
            double t12583 = gamma_bb[index]*gcaa*t12542*t12536*t12537;
            double t12584 = t12543*t12536*t12537*3.0;
            double t12585 = t12582+t12583+t12584+1.0;
            double t12586 = 1/t12585;
            double t12587 = gamma_bb[index]*gcaa*t12541*2.0;
            double t12588 = t12543*t12536*t12537;
            double t12589 = t12587+t12588+1.0;
            double t12590 = 1/t12589;
            double t12591 = 1/pow(rho_b[index],1.9E1/3.0);
            double t12592 = 1/pow(rho_b[index],1.1E1/3.0);
            double t12593 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t12594 = 1/pow(rho_b[index],3.5E1/3.0);
            double t12595 = X-1.0;
            double t12596 = 1/(k*k);
            double t12597 = 1/kp;
            double t12598 = 1/(rho_b[index]*rho_b[index]);
            double t12599 = rho_b[index]*2.0;
            double t12600 = 1/pow(t12599,2.0/3.0);
            double t12601 = gamma_bb[index]*mu_*t12600*t12596*t12597*t12598*(1.0/4.0);
            double t12602 = t12601+1.0;
            double t12603 = 1/t12602;
            double t12604 = kp-kp*t12603+1.0;
            double t12605 = 1/t12517;
            double t12606 = pow(rho_b[index],2.0/3.0);
            double t12607 = 1/(t12517*t12517);
            double t12608 = 1/pow(t12517,1.0E1);
            double t12609 = 1/pow(t12517,1.1E1);
            double t12610 = 1/(t12517*t12517*t12517);
            double t12611 = 1/(t12517*t12517*t12517*t12517);
            double t12612 = 1/(t12517*t12517*t12517*t12517*t12517);
            double t12613 = 1/(t12517*t12517*t12517*t12517*t12517*t12517);
            double t12614 = 1/(t12517*t12517*t12517*t12517*t12517*t12517*t12517);
            double t12615 = 1/(t12517*t12517*t12517*t12517*t12517*t12517*t12517*t12517);
            double t12616 = 1/(t12517*t12517*t12517*t12517*t12517*t12517*t12517*t12517*t12517);
            double t12618 = 1/pow(rho_b[index],4.0/3.0);
            double t12619 = 1/pow(rho_b[index],5.0/3.0);
            double t12620 = 1/sqrt(t12519);
            double t12621 = 1/t12532;
            double t12622 = 1/(t12529*t12529);
            double t12623 = b4p*t12522*t12619*(2.0/3.0);
            double t12624 = b2p*c*t12618*(1.0/3.0);
            double t12625 = b1p*c*t12620*t12618*(1.0/6.0);
            double t12626 = b3p*c*t12520*t12618*(1.0/2.0);
            double t12627 = t12623+t12624+t12625+t12626;
            double t12628 = t12621*t12622*t12535*t12627;
            double t12629 = ccaa4*t12540*t12538*t12539*t12578;
            double t12630 = ccaa1*gamma_bb[index]*gcaa*t12541*t12581;
            double t12631 = ccaa3*gamma_bb[index]*gcaa*t12542*t12536*t12537*t12586;
            double t12632 = ccaa2*t12543*t12536*t12590*t12537;
            double t12633 = ccaa0+t12630+t12631+t12632+t12629;
            double t12634 = t12562-t12563;
            double t12635 = t12634*t12546*t12549;
            double t12636 = t12563+t12635;
            double t12637 = a_1*t12513*t12605;
            double t12638 = a_10*t12514*t12516*t12608;
            double t12639 = a_11*t12513*t12514*t12516*t12609;
            double t12640 = a_2*t12514*t12607;
            double t12641 = a_3*t12610*t12513*t12514;
            double t12642 = a_4*t12611*t12515;
            double t12643 = a_5*t12513*t12612*t12515;
            double t12644 = a_6*t12514*t12613*t12515;
            double t12645 = a_7*t12513*t12514*t12515*t12614;
            double t12646 = a_8*t12516*t12615;
            double t12647 = a_9*t12513*t12516*t12616;
            double t12648 = t12640+t12641+t12642+t12643+t12644+t12645+t12637+t12646+t12638+t12647+t12639+1.0;
            v_rho_b_[index] = -t12604*t12648*t12595-t12633*t12572*(t12563+t12546*t12549*(t12562-c0p*t12533*t12535* \
               2.0))+rho_b[index]*t12633*t12572*(-t12628+t12546*t12549*(t12628-(t12561*1/(t12555*t12555)*(b2f*c*t12618* \
               (1.0/3.0)+b4f*t12522*t12619*(2.0/3.0)+b1f*c*t12620*t12618*(1.0/6.0)+b3f*c*t12520*t12618*(1.0/2.0)) \
               )/t12558+a1f*c*c0f*t12618*t12559*(2.0/3.0)-a1p*c*c0p*t12533*t12618*(2.0/3.0))+a1p*c*c0p*t12533*t12618* \
               (2.0/3.0))-rho_b[index]*t12604*t12595*(C_k*a_1*t12511*t12605*t12606*(5.0/3.0)-C_k*a_1*t12511*t12513* \
               t12606*t12607*(5.0/3.0)-C_k*a_2*t12511*t12610*t12514*t12606*(1.0E1/3.0)+C_k*a_2*t12511*t12513*t12606* \
               t12607*(1.0E1/3.0)+C_k*a_3*t12511*t12610*t12514*t12606*5.0-C_k*a_4*t12511*t12612*t12515*t12606*(2.0E1/ \
               3.0)+C_k*a_5*t12511*t12612*t12515*t12606*(2.5E1/3.0)-C_k*a_8*t12511*t12516*t12606*t12616*(4.0E1/3.0) \
               +C_k*a_9*t12511*t12516*t12606*t12616*1.5E1+C_k*a_10*t12511*t12513*t12516*t12606*t12608*(5.0E1/3.0) \
               -C_k*a_10*t12511*t12514*t12516*t12606*t12609*(5.0E1/3.0)+C_k*a_11*t12511*t12514*t12516*t12606*t12609* \
               (5.5E1/3.0)-C_k*a_3*t12511*t12611*t12513*t12514*t12606*5.0+C_k*a_4*t12511*t12611*t12513*t12514*t12606* \
               (2.0E1/3.0)-C_k*a_5*t12511*t12513*t12613*t12515*t12606*(2.5E1/3.0)+C_k*a_6*t12511*t12513*t12613*t12515* \
               t12606*1.0E1-C_k*a_6*t12511*t12514*t12515*t12614*t12606*1.0E1+C_k*a_7*t12511*t12514*t12515*t12614* \
               t12606*(3.5E1/3.0)-C_k*a_9*t12511*t12513*t12516*t12606*t12608*1.5E1-C_k*a_11*t12511*t12513*t12514* \
               t12516*t12606*1/pow(t12517,1.2E1)*(5.5E1/3.0)-C_k*a_7*t12511*t12513*t12514*t12515*t12606*t12615*(3.5E1/ \
               3.0)+C_k*a_8*t12511*t12513*t12514*t12515*t12606*t12615*(4.0E1/3.0))+rho_b[index]*t12572*t12636*(ccaa1* \
               gamma_bb[index]*gcaa*t12581*t12592*(8.0/3.0)+ccaa2*t12536*t12590*t12537*t12591*(1.6E1/3.0)+ccaa4*t12538* \
               t12539*t12594*t12578*(3.2E1/3.0)-ccaa1*1/(t12580*t12580)*t12536*t12537*t12591*(8.0/3.0)-ccaa2*t12543* \
               t12536*t12537*1/(t12589*t12589)*(gamma_bb[index]*gcaa*t12592*(1.6E1/3.0)+t12536*t12537*t12591*(1.6E1/ \
               3.0))-ccaa4*t12540*t12538*t12539*1/(t12577*t12577)*(gamma_bb[index]*gcaa*t12592*(3.2E1/3.0)+t12536* \
               t12537*t12591*3.2E1+t12538*t12539*t12594*(3.2E1/3.0)+gamma_bb[index]*gcaa*t12536*t12537*t12593*3.2E1) \
               +ccaa3*gamma_bb[index]*gcaa*t12536*t12537*t12593*t12586*8.0-ccaa3*gamma_bb[index]*gcaa*t12542*t12536* \
               t12537*1/(t12585*t12585)*(gamma_bb[index]*gcaa*t12592*8.0+t12536*t12537*t12591*1.6E1+gamma_bb[index]* \
               gcaa*t12536*t12537*t12593*8.0))-gamma_bb[index]*t12511*t12633*t12636*t12565*t12567*(1.0/8.0)+kp*rho_b[index]* \
               1/(t12602*t12602)*t12648*t12595*(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index])*t12600* \
               t12596*t12597*(1.0/2.0)+gamma_bb[index]*mu_*t12596*t12597*t12598*1/pow(t12599,5.0/3.0)*(1.0/3.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t8772 = 1/pow(rho_a[index],1.0/3.0);
                double t8773 = c*t8772;
                double t8774 = sqrt(t8773);
                double t8775 = pow(t8773,3.0/2.0);
                double t8776 = c*c;
                double t8777 = 1/pow(rho_a[index],2.0/3.0);
                double t8778 = 1/c0p;
                double t8779 = b1p*t8774;
                double t8780 = b3p*t8775;
                double t8781 = b4p*t8776*t8777;
                double t8782 = b2p*c*t8772;
                double t8783 = t8780+t8781+t8782+t8779;
                double t8784 = 1/t8783;
                double t8785 = t8784*t8778*(1.0/2.0);
                double t8786 = t8785+1.0;
                double t8787 = log(t8786);
                double t8788 = a1p*c*t8772;
                double t8789 = t8788+1.0;
                double t8790 = pow(2.0,1.0/3.0);
                double t8791 = t8790*2.0;
                double t8792 = t8791-2.0;
                double t8793 = two_13*2.0;
                double t8794 = t8793-2.0;
                double t8795 = 1/t8794;
                double t8796 = 1/c0f;
                double t8797 = 1/pow(rho_b[index],1.0/3.0);
                double t8798 = c*t8797;
                double t8799 = sqrt(t8798);
                double t8800 = pow(t8798,3.0/2.0);
                double t8801 = 1/pow(rho_b[index],2.0/3.0);
                double t8802 = b1p*t8799;
                double t8803 = b3p*t8800;
                double t8804 = b4p*t8776*t8801;
                double t8805 = b2p*c*t8797;
                double t8806 = t8802+t8803+t8804+t8805;
                double t8807 = 1/t8806;
                double t8808 = t8778*t8807*(1.0/2.0);
                double t8809 = t8808+1.0;
                double t8810 = log(t8809);
                double t8811 = a1p*c*t8797;
                double t8812 = t8811+1.0;
                double t8813 = c0p*t8810*t8812*2.0;
                double t8814 = rho_a[index]+rho_b[index];
                double t8815 = 1/pow(t8814,1.0/3.0);
                double t8816 = c*t8815;
                double t8817 = sqrt(t8816);
                double t8818 = pow(t8816,3.0/2.0);
                double t8819 = 1/pow(t8814,2.0/3.0);
                double t8820 = b1p*t8817;
                double t8821 = b3p*t8818;
                double t8822 = b4p*t8776*t8819;
                double t8823 = b2p*c*t8815;
                double t8824 = t8820+t8821+t8822+t8823;
                double t8825 = 1/t8824;
                double t8826 = t8778*t8825*(1.0/2.0);
                double t8827 = t8826+1.0;
                double t8828 = log(t8827);
                double t8829 = a1p*c*t8815;
                double t8830 = t8829+1.0;
                double t8831 = c0p*t8830*t8828*2.0;
                double t8832 = rho_a[index]-rho_b[index];
                double t8833 = t8832*t8832;
                double t8834 = 1/t8814;
                double t8835 = t8832*t8834;
                double t8836 = 1/(t8814*t8814*t8814*t8814);
                double t8837 = t8833*t8833;
                double t8838 = t8835+1.0;
                double t8839 = pow(t8838,4.0/3.0);
                double t8840 = -t8835+1.0;
                double t8841 = pow(t8840,4.0/3.0);
                double t8842 = t8841+t8839-2.0;
                double t8843 = 1/pow(rho_a[index],8.0/3.0);
                double t8844 = gamma_aa[index]*t8843*(1.0/2.0);
                double t8845 = 1/pow(rho_b[index],8.0/3.0);
                double t8846 = gamma_bb[index]*t8845*(1.0/2.0);
                double t8847 = t8844+t8846;
                double t8848 = gcab*t8847;
                double t8849 = t8848+1.0;
                double t8850 = gcab*gcab;
                double t8851 = t8847*t8847;
                double t8852 = t8850*t8850;
                double t8853 = t8851*t8851;
                double t8854 = t8850*t8851;
                double t8855 = gcab*t8847*2.0;
                double t8856 = t8854+t8855+1.0;
                double t8857 = t8850*t8851*3.0;
                double t8858 = gcab*t8850*t8851*t8847;
                double t8859 = gcab*t8847*3.0;
                double t8860 = t8857+t8858+t8859+1.0;
                double t8861 = t8850*t8851*6.0;
                double t8862 = gcab*t8850*t8851*t8847*4.0;
                double t8863 = t8852*t8853;
                double t8864 = gcab*t8847*4.0;
                double t8865 = t8861+t8862+t8863+t8864+1.0;
                double t8866 = c0p*t8787*t8789*2.0;
                double t8867 = b1f*t8774;
                double t8868 = b3f*t8775;
                double t8869 = b4f*t8776*t8777;
                double t8870 = b2f*c*t8772;
                double t8871 = t8870+t8867+t8868+t8869;
                double t8872 = 1/t8871;
                double t8873 = t8796*t8872*(1.0/2.0);
                double t8874 = t8873+1.0;
                double t8875 = log(t8874);
                double t8876 = a1f*c*t8772;
                double t8877 = t8876+1.0;
                double t8887 = c0f*t8875*t8877*2.0;
                double t8878 = t8866-t8887;
                double t8888 = t8792*t8795*t8878;
                double t8879 = t8866-t8888;
                double t8880 = gamma_aa[index]*gamma_aa[index];
                double t8881 = gcaa*gcaa;
                double t8882 = t8880*t8880;
                double t8883 = t8881*t8881;
                double t8884 = 1/pow(rho_a[index],3.2E1/3.0);
                double t8885 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t8886 = 1/pow(rho_a[index],1.6E1/3.0);
                double t8889 = tau_a[index]-1.0/1.0E20;
                double t8890 = ( (t8889 > 0.0) ?  1.0 : 0.0 ) ;
                double t8891 = 1/tau_a[index];
                double t8892 = gamma_aa[index]*gcaa*t8843;
                double t8893 = t8892+1.0;
                double t8894 = 1/t8893;
                double t8895 = gamma_aa[index]*gcaa*t8843*4.0;
                double t8896 = gamma_aa[index]*gcaa*t8880*t8881*t8885*4.0;
                double t8897 = t8880*t8881*t8886*6.0;
                double t8898 = t8882*t8883*t8884;
                double t8899 = t8895+t8896+t8897+t8898+1.0;
                double t8900 = 1/t8899;
                double t8901 = gamma_aa[index]*gcaa*t8843*2.0;
                double t8902 = t8880*t8881*t8886;
                double t8903 = t8901+t8902+1.0;
                double t8904 = 1/t8903;
                double t8905 = gamma_aa[index]*gcaa*t8843*3.0;
                double t8906 = gamma_aa[index]*gcaa*t8880*t8881*t8885;
                double t8907 = t8880*t8881*t8886*3.0;
                double t8908 = t8905+t8906+t8907+1.0;
                double t8909 = 1/t8908;
                double t8910 = 1/rho_a[index];
                double t8911 = 1/(k*k);
                double t8912 = rho_a[index]*2.0;
                double t8913 = 1/pow(t8912,2.0/3.0);
                double t8914 = pow(rho_a[index],5.0/3.0);
                double t8915 = C_k*t8891*t8914;
                double t8916 = t8915-1.0;
                double t8917 = t8916*t8916;
                double t8918 = t8917*t8917;
                double t8919 = t8918*t8918;
                double t8920 = t8915+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t8879+rho_b[index]*(t8813-t8792*t8795*(t8813-c0f*log((t8796*(1.0/ \
                   2.0))/(b1f*t8799+b3f*t8800+b2f*c*t8797+b4f*t8776*t8801)+1.0)*(a1f*c*t8797+1.0)*2.0))-t8814*(t8831- \
                   t8795*t8842*t8836*t8837*(t8831-c0f*log((t8796*(1.0/2.0))/(b1f*t8817+b3f*t8818+b2f*c*t8815+b4f*t8776* \
                   t8819)+1.0)*(a1f*c*t8815+1.0)*2.0)+(Aa*t8795*t8842*log((1.0/2.0)/(Aa*(b1a*t8817+b3a*t8818+b2a*c*t8815+ \
                   b4a*t8776*t8819))+1.0)*(t8836*t8837-1.0)*(a1a*c*t8815+1.0)*2.0)/d2fz0))*((ccab1*gcab*t8843*(1.0/2.0) \
                   )/t8849-ccab4*t8852*t8853*1/(t8865*t8865)*(gcab*t8843*2.0+t8850*t8843*t8847*6.0+gcab*t8850*t8851*t8843* \
                   6.0+t8851*t8843*t8852*t8847*2.0)-ccab2*t8850*t8851*1/(t8856*t8856)*(gcab*t8843+t8850*t8843*t8847)+ \
                   (ccab2*t8850*t8843*t8847)/t8856-ccab1*t8850*t8843*t8847*1/(t8849*t8849)*(1.0/2.0)+(ccab3*gcab*t8850* \
                   t8851*t8843*(3.0/2.0))/t8860+(ccab4*t8851*t8843*t8852*t8847*2.0)/t8865-ccab3*gcab*t8850*t8851*1/(t8860* \
                   t8860)*t8847*(gcab*t8843*(3.0/2.0)+t8850*t8843*t8847*3.0+gcab*t8850*t8851*t8843*(3.0/2.0)))+t8890* \
                   t8891*t8879*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t8843*t8894+ccaa2*t8880*t8881*t8886*t8904+ccaa4*t8882* \
                   t8883*t8884*t8900+ccaa3*gamma_aa[index]*gcaa*t8880*t8881*t8885*t8909)*(1.0/8.0)-rho_a[index]*t8879* \
                   (t8890*(t8891*(tau_a[index]*2.0-gamma_aa[index]*t8910*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t8843* \
                   t8894+ccaa2*gamma_aa[index]*t8881*t8886*t8904*2.0-ccaa1*gamma_aa[index]*t8881*1/(t8893*t8893)*t8886- \
                   ccaa2*t8880*t8881*t8886*1/(t8903*t8903)*(gcaa*t8843*2.0+gamma_aa[index]*t8881*t8886*2.0)-ccaa4*t8882* \
                   t8883*t8884*1/(t8899*t8899)*(gcaa*t8843*4.0+gamma_aa[index]*t8881*t8886*1.2E1+gamma_aa[index]*t8880* \
                   t8883*t8884*4.0+gcaa*t8880*t8881*t8885*1.2E1)+ccaa4*gamma_aa[index]*t8880*t8883*t8884*t8900*4.0+ccaa3* \
                   gcaa*t8880*t8881*t8885*t8909*3.0-ccaa3*gamma_aa[index]*gcaa*t8880*t8881*t8885*1/(t8908*t8908)*(gcaa* \
                   t8843*3.0+gamma_aa[index]*t8881*t8886*6.0+gcaa*t8880*t8881*t8885*3.0))-mu_*t8910*t8911*t8913*1/pow((gamma_aa[index]* \
                   mu_*1/(rho_a[index]*rho_a[index])*t8911*t8913*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)*((a_1*t8916)/t8920+a_2* \
                   1/(t8920*t8920)*t8917+a_4*1/(t8920*t8920*t8920*t8920)*t8918+a_8*1/(t8920*t8920*t8920*t8920*t8920*t8920* \
                   t8920*t8920)*t8919+a_10*1/pow(t8920,1.0E1)*t8917*t8919+a_3*1/(t8920*t8920*t8920)*t8916*t8917+a_5*1/ \
                   (t8920*t8920*t8920*t8920*t8920)*t8916*t8918+a_6*1/(t8920*t8920*t8920*t8920*t8920*t8920)*t8917*t8918+ \
                   a_9*1/(t8920*t8920*t8920*t8920*t8920*t8920*t8920*t8920*t8920)*t8916*t8919+a_11*1/pow(t8920,1.1E1)* \
                   t8916*t8917*t8919+a_7*1/(t8920*t8920*t8920*t8920*t8920*t8920*t8920)*t8916*t8917*t8918+1.0)*(1.0/4.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                double t13776 = 1/pow(rho_a[index],1.0/3.0);
                double t13777 = c*t13776;
                double t13778 = sqrt(t13777);
                double t13779 = pow(t13777,3.0/2.0);
                double t13780 = c*c;
                double t13781 = 1/pow(rho_a[index],2.0/3.0);
                double t13782 = 1/c0p;
                double t13783 = b1p*t13778;
                double t13784 = b3p*t13779;
                double t13785 = b4p*t13780*t13781;
                double t13786 = b2p*c*t13776;
                double t13787 = t13783+t13784+t13785+t13786;
                double t13788 = 1/t13787;
                double t13789 = t13782*t13788*(1.0/2.0);
                double t13790 = t13789+1.0;
                double t13791 = log(t13790);
                double t13792 = a1p*c*t13776;
                double t13793 = t13792+1.0;
                double t13794 = gamma_aa[index]*gamma_aa[index];
                double t13795 = gcaa*gcaa;
                double t13796 = t13794*t13794;
                double t13797 = t13795*t13795;
                double t13798 = 1/pow(rho_a[index],3.2E1/3.0);
                double t13799 = 1/pow(rho_a[index],8.0/3.0);
                double t13800 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t13801 = 1/pow(rho_a[index],1.6E1/3.0);
                double t13802 = pow(2.0,1.0/3.0);
                double t13803 = t13802*2.0;
                double t13804 = t13803-2.0;
                double t13805 = two_13*2.0;
                double t13806 = t13805-2.0;
                double t13807 = 1/t13806;
                double t13808 = 1/c0f;
                double t13809 = b1f*t13778;
                double t13810 = b3f*t13779;
                double t13811 = b4f*t13780*t13781;
                double t13812 = b2f*c*t13776;
                double t13813 = t13810+t13811+t13812+t13809;
                double t13814 = 1/t13813;
                double t13815 = t13814*t13808*(1.0/2.0);
                double t13816 = t13815+1.0;
                double t13817 = log(t13816);
                double t13818 = a1f*c*t13776;
                double t13819 = t13818+1.0;
                double t13820 = c0f*t13817*t13819*2.0;
                double t13821 = c0p*t13791*t13793*2.0;
                double t13822 = tau_a[index]-1.0/1.0E20;
                double t13823 = ( (t13822 > 0.0) ?  1.0 : 0.0 ) ;
                double t13824 = 1/tau_a[index];
                double t13825 = gamma_aa[index]*gcaa*t13799;
                double t13826 = t13825+1.0;
                double t13827 = 1/t13826;
                double t13828 = gamma_aa[index]*gcaa*t13799*4.0;
                double t13829 = gamma_aa[index]*gcaa*t13800*t13794*t13795*4.0;
                double t13830 = t13801*t13794*t13795*6.0;
                double t13831 = t13796*t13797*t13798;
                double t13832 = t13830+t13831+t13828+t13829+1.0;
                double t13833 = 1/t13832;
                double t13834 = gamma_aa[index]*gcaa*t13799*2.0;
                double t13835 = t13801*t13794*t13795;
                double t13836 = t13834+t13835+1.0;
                double t13837 = 1/t13836;
                double t13838 = gamma_aa[index]*gcaa*t13799*3.0;
                double t13839 = gamma_aa[index]*gcaa*t13800*t13794*t13795;
                double t13840 = t13801*t13794*t13795*3.0;
                double t13841 = t13840+t13838+t13839+1.0;
                double t13842 = 1/t13841;
                double t13843 = 1/rho_a[index];
                double t13844 = 1/(k*k);
                double t13845 = rho_a[index]*2.0;
                double t13846 = 1/pow(t13845,2.0/3.0);
                double t13847 = pow(rho_a[index],5.0/3.0);
                double t13848 = C_k*t13824*t13847;
                double t13849 = t13848-1.0;
                double t13850 = t13849*t13849;
                double t13851 = t13850*t13850;
                double t13852 = t13851*t13851;
                double t13853 = t13848+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(t13821+t13804*t13807*(t13820-t13821))*(t13823*(t13824*(tau_a[index]* \
                   2.0-gamma_aa[index]*t13843*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t13827*t13799+ccaa2*gamma_aa[index]* \
                   t13801*t13837*t13795*2.0-ccaa1*gamma_aa[index]*t13801*1/(t13826*t13826)*t13795-ccaa2*t13801*1/(t13836* \
                   t13836)*t13794*t13795*(gcaa*t13799*2.0+gamma_aa[index]*t13801*t13795*2.0)-ccaa4*1/(t13832*t13832)* \
                   t13796*t13797*t13798*(gcaa*t13799*4.0+gamma_aa[index]*t13801*t13795*1.2E1+gamma_aa[index]*t13794*t13797* \
                   t13798*4.0+gcaa*t13800*t13794*t13795*1.2E1)+ccaa4*gamma_aa[index]*t13833*t13794*t13797*t13798*4.0+ \
                   ccaa3*gcaa*t13800*t13842*t13794*t13795*3.0-ccaa3*gamma_aa[index]*gcaa*t13800*1/(t13841*t13841)*t13794* \
                   t13795*(gcaa*t13799*3.0+gamma_aa[index]*t13801*t13795*6.0+gcaa*t13800*t13794*t13795*3.0))+t13823*t13824* \
                   (t13821+t13804*t13807*(t13820-c0p*t13791*t13793*2.0))*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t13827*t13799+ \
                   ccaa2*t13801*t13837*t13794*t13795+ccaa4*t13833*t13796*t13797*t13798+ccaa3*gamma_aa[index]*gcaa*t13800* \
                   t13842*t13794*t13795)*(1.0/8.0)-mu_*t13843*t13844*t13846*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]* \
                   rho_a[index])*t13844*t13846*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)*((a_1*t13849)/t13853+a_2*t13850*1/(t13853* \
                   t13853)+a_4*t13851*1/(t13853*t13853*t13853*t13853)+a_8*t13852*1/(t13853*t13853*t13853*t13853*t13853* \
                   t13853*t13853*t13853)+a_10*t13850*t13852*1/pow(t13853,1.0E1)+a_3*t13850*1/(t13853*t13853*t13853)*t13849+ \
                   a_5*t13851*1/(t13853*t13853*t13853*t13853*t13853)*t13849+a_6*t13850*t13851*1/(t13853*t13853*t13853* \
                   t13853*t13853*t13853)+a_9*t13852*1/(t13853*t13853*t13853*t13853*t13853*t13853*t13853*t13853*t13853) \
                   *t13849+a_11*t13850*t13852*1/pow(t13853,1.1E1)*t13849+a_7*t13850*t13851*1/(t13853*t13853*t13853*t13853* \
                   t13853*t13853*t13853)*t13849+1.0)*(1.0/4.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t8923 = 1/pow(rho_a[index],1.0/3.0);
                double t8924 = c*t8923;
                double t8925 = sqrt(t8924);
                double t8926 = pow(t8924,3.0/2.0);
                double t8927 = c*c;
                double t8928 = 1/pow(rho_a[index],2.0/3.0);
                double t8929 = 1/c0p;
                double t8930 = b1p*t8925;
                double t8931 = b3p*t8926;
                double t8932 = b4p*t8927*t8928;
                double t8933 = b2p*c*t8923;
                double t8934 = t8930+t8931+t8932+t8933;
                double t8935 = 1/t8934;
                double t8936 = t8935*t8929*(1.0/2.0);
                double t8937 = t8936+1.0;
                double t8938 = log(t8937);
                double t8939 = a1p*c*t8923;
                double t8940 = t8939+1.0;
                double t8941 = pow(2.0,1.0/3.0);
                double t8942 = t8941*2.0;
                double t8943 = t8942-2.0;
                double t8944 = two_13*2.0;
                double t8945 = t8944-2.0;
                double t8946 = 1/t8945;
                double t8947 = 1/c0f;
                double t8948 = 1/pow(rho_b[index],1.0/3.0);
                double t8949 = c*t8948;
                double t8950 = sqrt(t8949);
                double t8951 = pow(t8949,3.0/2.0);
                double t8952 = 1/pow(rho_b[index],2.0/3.0);
                double t8953 = b1p*t8950;
                double t8954 = b3p*t8951;
                double t8955 = b4p*t8952*t8927;
                double t8956 = b2p*c*t8948;
                double t8957 = t8953+t8954+t8955+t8956;
                double t8958 = 1/t8957;
                double t8959 = t8929*t8958*(1.0/2.0);
                double t8960 = t8959+1.0;
                double t8961 = log(t8960);
                double t8962 = a1p*c*t8948;
                double t8963 = t8962+1.0;
                double t8964 = c0p*t8961*t8963*2.0;
                double t8965 = rho_a[index]+rho_b[index];
                double t8966 = 1/pow(t8965,1.0/3.0);
                double t8967 = c*t8966;
                double t8968 = sqrt(t8967);
                double t8969 = pow(t8967,3.0/2.0);
                double t8970 = 1/pow(t8965,2.0/3.0);
                double t8971 = b1p*t8968;
                double t8972 = b3p*t8969;
                double t8973 = b4p*t8970*t8927;
                double t8974 = b2p*c*t8966;
                double t8975 = t8971+t8972+t8973+t8974;
                double t8976 = 1/t8975;
                double t8977 = t8929*t8976*(1.0/2.0);
                double t8978 = t8977+1.0;
                double t8979 = log(t8978);
                double t8980 = a1p*c*t8966;
                double t8981 = t8980+1.0;
                double t8982 = c0p*t8981*t8979*2.0;
                double t8983 = rho_a[index]-rho_b[index];
                double t8984 = t8983*t8983;
                double t8985 = 1/t8965;
                double t8986 = t8983*t8985;
                double t8987 = 1/(t8965*t8965*t8965*t8965);
                double t8988 = t8984*t8984;
                double t8989 = t8986+1.0;
                double t8990 = pow(t8989,4.0/3.0);
                double t8991 = -t8986+1.0;
                double t8992 = pow(t8991,4.0/3.0);
                double t8993 = t8990+t8992-2.0;
                double t8994 = 1/pow(rho_b[index],8.0/3.0);
                double t8995 = 1/pow(rho_a[index],8.0/3.0);
                double t8996 = gamma_aa[index]*t8995*(1.0/2.0);
                double t8997 = gamma_bb[index]*t8994*(1.0/2.0);
                double t8998 = t8996+t8997;
                double t8999 = gcab*t8998;
                double t9000 = t8999+1.0;
                double t9001 = gcab*gcab;
                double t9002 = t8998*t8998;
                double t9003 = t9001*t9001;
                double t9004 = t9002*t9002;
                double t9005 = t9001*t9002;
                double t9006 = gcab*t8998*2.0;
                double t9007 = t9005+t9006+1.0;
                double t9008 = t9001*t9002*3.0;
                double t9009 = gcab*t8998*t9001*t9002;
                double t9010 = gcab*t8998*3.0;
                double t9011 = t9010+t9008+t9009+1.0;
                double t9012 = t9001*t9002*6.0;
                double t9013 = gcab*t8998*t9001*t9002*4.0;
                double t9014 = t9003*t9004;
                double t9015 = gcab*t8998*4.0;
                double t9016 = t9012+t9013+t9014+t9015+1.0;
                double t9017 = c0p*t8940*t8938*2.0;
                double t9018 = b1f*t8950;
                double t9019 = b3f*t8951;
                double t9020 = b4f*t8952*t8927;
                double t9021 = b2f*c*t8948;
                double t9022 = t9020+t9021+t9018+t9019;
                double t9023 = 1/t9022;
                double t9024 = t8947*t9023*(1.0/2.0);
                double t9025 = t9024+1.0;
                double t9026 = log(t9025);
                double t9027 = a1f*c*t8948;
                double t9028 = t9027+1.0;
                double t9038 = c0f*t9026*t9028*2.0;
                double t9029 = t8964-t9038;
                double t9039 = t8943*t8946*t9029;
                double t9030 = t8964-t9039;
                double t9031 = gamma_bb[index]*gamma_bb[index];
                double t9032 = gcaa*gcaa;
                double t9033 = t9031*t9031;
                double t9034 = t9032*t9032;
                double t9035 = 1/pow(rho_b[index],3.2E1/3.0);
                double t9036 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t9037 = 1/pow(rho_b[index],1.6E1/3.0);
                double t9040 = tau_b[index]-1.0/1.0E20;
                double t9041 = ( (t9040 > 0.0) ?  1.0 : 0.0 ) ;
                double t9042 = 1/tau_b[index];
                double t9043 = gamma_bb[index]*gcaa*t8994;
                double t9044 = t9043+1.0;
                double t9045 = 1/t9044;
                double t9046 = gamma_bb[index]*gcaa*t8994*4.0;
                double t9047 = gamma_bb[index]*gcaa*t9031*t9032*t9036*4.0;
                double t9048 = t9031*t9032*t9037*6.0;
                double t9049 = t9033*t9034*t9035;
                double t9050 = t9046+t9047+t9048+t9049+1.0;
                double t9051 = 1/t9050;
                double t9052 = gamma_bb[index]*gcaa*t8994*2.0;
                double t9053 = t9031*t9032*t9037;
                double t9054 = t9052+t9053+1.0;
                double t9055 = 1/t9054;
                double t9056 = gamma_bb[index]*gcaa*t8994*3.0;
                double t9057 = gamma_bb[index]*gcaa*t9031*t9032*t9036;
                double t9058 = t9031*t9032*t9037*3.0;
                double t9059 = t9056+t9057+t9058+1.0;
                double t9060 = 1/t9059;
                double t9061 = 1/rho_b[index];
                double t9062 = 1/(k*k);
                double t9063 = rho_b[index]*2.0;
                double t9064 = 1/pow(t9063,2.0/3.0);
                double t9065 = pow(rho_b[index],5.0/3.0);
                double t9066 = C_k*t9042*t9065;
                double t9067 = t9066-1.0;
                double t9068 = t9067*t9067;
                double t9069 = t9068*t9068;
                double t9070 = t9069*t9069;
                double t9071 = t9066+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t9030+rho_a[index]*(t9017-t8943*t8946*(t9017-c0f*log((t8947*(1.0/ \
                   2.0))/(b1f*t8925+b3f*t8926+b2f*c*t8923+b4f*t8927*t8928)+1.0)*(a1f*c*t8923+1.0)*2.0))-t8965*(t8982- \
                   t8946*t8993*t8987*t8988*(t8982-c0f*log((t8947*(1.0/2.0))/(b1f*t8968+b3f*t8969+b2f*c*t8966+b4f*t8970* \
                   t8927)+1.0)*(a1f*c*t8966+1.0)*2.0)+(Aa*t8946*t8993*log((1.0/2.0)/(Aa*(b1a*t8968+b3a*t8969+b2a*c*t8966+ \
                   b4a*t8970*t8927))+1.0)*(t8987*t8988-1.0)*(a1a*c*t8966+1.0)*2.0)/d2fz0))*((ccab1*gcab*t8994*(1.0/2.0) \
                   )/t9000-ccab4*t9003*t9004*1/(t9016*t9016)*(gcab*t8994*2.0+t8994*t8998*t9001*6.0+gcab*t8994*t9001*t9002* \
                   6.0+t8994*t8998*t9002*t9003*2.0)-ccab2*t9001*t9002*1/(t9007*t9007)*(gcab*t8994+t8994*t8998*t9001)- \
                   ccab1*t8994*t8998*1/(t9000*t9000)*t9001*(1.0/2.0)+(ccab2*t8994*t8998*t9001)/t9007+(ccab3*gcab*t8994* \
                   t9001*t9002*(3.0/2.0))/t9011+(ccab4*t8994*t8998*t9002*t9003*2.0)/t9016-ccab3*gcab*t8998*t9001*t9002* \
                   1/(t9011*t9011)*(gcab*t8994*(3.0/2.0)+t8994*t8998*t9001*3.0+gcab*t8994*t9001*t9002*(3.0/2.0)))+t9030* \
                   t9041*t9042*(ccaa0+ccaa1*gamma_bb[index]*gcaa*t8994*t9045+ccaa2*t9031*t9032*t9037*t9055+ccaa4*t9033* \
                   t9051*t9034*t9035+ccaa3*gamma_bb[index]*gcaa*t9031*t9032*t9060*t9036)*(1.0/8.0)-rho_b[index]*t9030* \
                   (t9041*(t9042*(tau_b[index]*2.0-gamma_bb[index]*t9061*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t8994* \
                   t9045+ccaa2*gamma_bb[index]*t9032*t9037*t9055*2.0-ccaa1*gamma_bb[index]*t9032*1/(t9044*t9044)*t9037- \
                   ccaa2*t9031*t9032*1/(t9054*t9054)*t9037*(gcaa*t8994*2.0+gamma_bb[index]*t9032*t9037*2.0)-ccaa4*1/(t9050* \
                   t9050)*t9033*t9034*t9035*(gcaa*t8994*4.0+gamma_bb[index]*t9032*t9037*1.2E1+gamma_bb[index]*t9031*t9034* \
                   t9035*4.0+gcaa*t9031*t9032*t9036*1.2E1)+ccaa4*gamma_bb[index]*t9031*t9051*t9034*t9035*4.0+ccaa3*gcaa* \
                   t9031*t9032*t9060*t9036*3.0-ccaa3*gamma_bb[index]*gcaa*t9031*t9032*t9036*1/(t9059*t9059)*(gcaa*t8994* \
                   3.0+gamma_bb[index]*t9032*t9037*6.0+gcaa*t9031*t9032*t9036*3.0))-mu_*t9061*t9062*t9064*1/pow((gamma_bb[index]* \
                   mu_*1/(rho_b[index]*rho_b[index])*t9062*t9064*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)*((a_1*t9067)/t9071+a_2* \
                   1/(t9071*t9071)*t9068+a_4*1/(t9071*t9071*t9071*t9071)*t9069+a_8*t9070*1/(t9071*t9071*t9071*t9071*t9071* \
                   t9071*t9071*t9071)+a_10*t9070*1/pow(t9071,1.0E1)*t9068+a_3*1/(t9071*t9071*t9071)*t9067*t9068+a_5*1/ \
                   (t9071*t9071*t9071*t9071*t9071)*t9067*t9069+a_6*1/(t9071*t9071*t9071*t9071*t9071*t9071)*t9068*t9069+ \
                   a_9*t9070*1/(t9071*t9071*t9071*t9071*t9071*t9071*t9071*t9071*t9071)*t9067+a_11*t9070*1/pow(t9071,1.1E1) \
                   *t9067*t9068+a_7*1/(t9071*t9071*t9071*t9071*t9071*t9071*t9071)*t9067*t9068*t9069+1.0)*(1.0/4.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t12652 = 1/pow(rho_b[index],1.0/3.0);
                double t12653 = c*t12652;
                double t12654 = sqrt(t12653);
                double t12655 = pow(t12653,3.0/2.0);
                double t12656 = c*c;
                double t12657 = 1/pow(rho_b[index],2.0/3.0);
                double t12658 = 1/c0p;
                double t12659 = b1p*t12654;
                double t12660 = b3p*t12655;
                double t12661 = b4p*t12656*t12657;
                double t12662 = b2p*c*t12652;
                double t12663 = t12660+t12661+t12662+t12659;
                double t12664 = 1/t12663;
                double t12665 = t12664*t12658*(1.0/2.0);
                double t12666 = t12665+1.0;
                double t12667 = log(t12666);
                double t12668 = a1p*c*t12652;
                double t12669 = t12668+1.0;
                double t12670 = gamma_bb[index]*gamma_bb[index];
                double t12671 = gcaa*gcaa;
                double t12672 = t12670*t12670;
                double t12673 = t12671*t12671;
                double t12674 = 1/pow(rho_b[index],3.2E1/3.0);
                double t12675 = 1/pow(rho_b[index],8.0/3.0);
                double t12676 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t12677 = 1/pow(rho_b[index],1.6E1/3.0);
                double t12678 = pow(2.0,1.0/3.0);
                double t12679 = t12678*2.0;
                double t12680 = t12679-2.0;
                double t12681 = two_13*2.0;
                double t12682 = t12681-2.0;
                double t12683 = 1/t12682;
                double t12684 = 1/c0f;
                double t12685 = b1f*t12654;
                double t12686 = b3f*t12655;
                double t12687 = b4f*t12656*t12657;
                double t12688 = b2f*c*t12652;
                double t12689 = t12685+t12686+t12687+t12688;
                double t12690 = 1/t12689;
                double t12691 = t12690*t12684*(1.0/2.0);
                double t12692 = t12691+1.0;
                double t12693 = log(t12692);
                double t12694 = a1f*c*t12652;
                double t12695 = t12694+1.0;
                double t12696 = c0f*t12693*t12695*2.0;
                double t12697 = c0p*t12667*t12669*2.0;
                double t12698 = tau_b[index]-1.0/1.0E20;
                double t12699 = ( (t12698 > 0.0) ?  1.0 : 0.0 ) ;
                double t12700 = 1/tau_b[index];
                double t12701 = gamma_bb[index]*gcaa*t12675;
                double t12702 = t12701+1.0;
                double t12703 = 1/t12702;
                double t12704 = gamma_bb[index]*gcaa*t12675*4.0;
                double t12705 = gamma_bb[index]*gcaa*t12670*t12671*t12676*4.0;
                double t12706 = t12670*t12671*t12677*6.0;
                double t12707 = t12672*t12673*t12674;
                double t12708 = t12704+t12705+t12706+t12707+1.0;
                double t12709 = 1/t12708;
                double t12710 = gamma_bb[index]*gcaa*t12675*2.0;
                double t12711 = t12670*t12671*t12677;
                double t12712 = t12710+t12711+1.0;
                double t12713 = 1/t12712;
                double t12714 = gamma_bb[index]*gcaa*t12675*3.0;
                double t12715 = gamma_bb[index]*gcaa*t12670*t12671*t12676;
                double t12716 = t12670*t12671*t12677*3.0;
                double t12717 = t12714+t12715+t12716+1.0;
                double t12718 = 1/t12717;
                double t12719 = 1/rho_b[index];
                double t12720 = 1/(k*k);
                double t12721 = rho_b[index]*2.0;
                double t12722 = 1/pow(t12721,2.0/3.0);
                double t12723 = pow(rho_b[index],5.0/3.0);
                double t12724 = C_k*t12700*t12723;
                double t12725 = t12724-1.0;
                double t12726 = t12725*t12725;
                double t12727 = t12726*t12726;
                double t12728 = t12727*t12727;
                double t12729 = t12724+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(t12697+t12680*t12683*(t12696-t12697))*(t12699*(t12700*(tau_b[index]* \
                   2.0-gamma_bb[index]*t12719*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t12703*t12675+ccaa2*gamma_bb[index]* \
                   t12713*t12671*t12677*2.0-ccaa1*gamma_bb[index]*1/(t12702*t12702)*t12671*t12677-ccaa2*1/(t12712*t12712) \
                   *t12670*t12671*t12677*(gcaa*t12675*2.0+gamma_bb[index]*t12671*t12677*2.0)-ccaa4*t12672*1/(t12708*t12708) \
                   *t12673*t12674*(gcaa*t12675*4.0+gamma_bb[index]*t12671*t12677*1.2E1+gamma_bb[index]*t12670*t12673* \
                   t12674*4.0+gcaa*t12670*t12671*t12676*1.2E1)+ccaa4*gamma_bb[index]*t12670*t12673*t12709*t12674*4.0+ \
                   ccaa3*gcaa*t12670*t12671*t12718*t12676*3.0-ccaa3*gamma_bb[index]*gcaa*t12670*t12671*1/(t12717*t12717) \
                   *t12676*(gcaa*t12675*3.0+gamma_bb[index]*t12671*t12677*6.0+gcaa*t12670*t12671*t12676*3.0))+t12700* \
                   t12699*(t12697+t12680*t12683*(t12696-c0p*t12667*t12669*2.0))*(ccaa0+ccaa1*gamma_bb[index]*gcaa*t12703* \
                   t12675+ccaa2*t12713*t12670*t12671*t12677+ccaa4*t12672*t12673*t12709*t12674+ccaa3*gamma_bb[index]*gcaa* \
                   t12670*t12671*t12718*t12676)*(1.0/8.0)-mu_*t12720*t12722*t12719*1/pow((gamma_bb[index]*mu_*1/(rho_b[index]* \
                   rho_b[index])*t12720*t12722*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)*((a_1*t12725)/t12729+a_2*t12726*1/(t12729* \
                   t12729)+a_4*t12727*1/(t12729*t12729*t12729*t12729)+a_8*t12728*1/(t12729*t12729*t12729*t12729*t12729* \
                   t12729*t12729*t12729)+a_10*t12726*t12728*1/pow(t12729,1.0E1)+a_3*t12725*t12726*1/(t12729*t12729*t12729) \
                   +a_5*t12725*t12727*1/(t12729*t12729*t12729*t12729*t12729)+a_6*t12726*t12727*1/(t12729*t12729*t12729* \
                   t12729*t12729*t12729)+a_9*t12725*t12728*1/(t12729*t12729*t12729*t12729*t12729*t12729*t12729*t12729* \
                   t12729)+a_11*t12725*t12726*t12728*1/pow(t12729,1.1E1)+a_7*t12725*t12726*t12727*1/(t12729*t12729*t12729* \
                   t12729*t12729*t12729*t12729)+1.0)*(1.0/4.0);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t9073 = pow(rho_a[index],5.0/3.0);
                double t9074 = 1/(tau_a[index]*tau_a[index]);
                double t9075 = 1/tau_a[index];
                double t9076 = C_k*t9073*t9075;
                double t9077 = t9076+1.0;
                double t9078 = t9076-1.0;
                double t9079 = 1/(t9077*t9077);
                double t9080 = t9078*t9078;
                double t9081 = t9080*t9080;
                double t9082 = t9081*t9081;
                double t9083 = 1/pow(t9077,1.1E1);
                double t9084 = 1/(t9077*t9077*t9077);
                double t9085 = 1/(t9077*t9077*t9077*t9077);
                double t9086 = 1/(t9077*t9077*t9077*t9077*t9077);
                double t9087 = 1/(t9077*t9077*t9077*t9077*t9077*t9077);
                double t9088 = 1/(t9077*t9077*t9077*t9077*t9077*t9077*t9077);
                double t9089 = 1/(t9077*t9077*t9077*t9077*t9077*t9077*t9077*t9077);
                double t9090 = 1/(t9077*t9077*t9077*t9077*t9077*t9077*t9077*t9077*t9077);
                double t9091 = 1/pow(t9077,1.0E1);
                double t9092 = 1/pow(rho_a[index],1.0/3.0);
                double t9093 = c*t9092;
                double t9094 = sqrt(t9093);
                double t9095 = pow(t9093,3.0/2.0);
                double t9096 = c*c;
                double t9097 = 1/pow(rho_a[index],2.0/3.0);
                double t9098 = 1/c0p;
                double t9099 = b1p*t9094;
                double t9100 = b3p*t9095;
                double t9101 = b4p*t9096*t9097;
                double t9102 = b2p*c*t9092;
                double t9103 = t9099+t9100+t9101+t9102;
                double t9104 = 1/t9103;
                double t9105 = t9098*t9104*(1.0/2.0);
                double t9106 = t9105+1.0;
                double t9107 = log(t9106);
                double t9108 = a1p*c*t9092;
                double t9109 = t9108+1.0;
                double t9110 = tau_a[index]-1.0/1.0E20;
                double t9111 = tau_a[index]*2.0;
                double t9112 = 1/rho_a[index];
                double t9113 = t9111-gamma_aa[index]*t9112*(1.0/4.0);
                double t9114 = gamma_aa[index]*gamma_aa[index];
                double t9115 = gcaa*gcaa;
                double t9116 = t9114*t9114;
                double t9117 = t9115*t9115;
                double t9118 = 1/pow(rho_a[index],3.2E1/3.0);
                double t9119 = 1/pow(rho_a[index],8.0/3.0);
                double t9120 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t9121 = 1/pow(rho_a[index],1.6E1/3.0);
                v_tau_a_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t9094+b3f* \
                   t9095+b2f*c*t9092+b4f*t9096*t9097))+1.0)*(a1f*c*t9092+1.0)*2.0-c0p*t9107*t9109*2.0))/(two_13*2.0-2.0) \
                   +c0p*t9107*t9109*2.0)*( ( (t9110 > 0.0) ? 1.0*(t9075-t9074*t9113*(1.0/2.0)) : 0.0 ) + 0.0 )*(ccaa0+ \
                   (ccaa2*t9121*t9114*t9115)/(gamma_aa[index]*gcaa*t9119*2.0+t9121*t9114*t9115+1.0)+(ccaa1*gamma_aa[index]* \
                   gcaa*t9119)/(gamma_aa[index]*gcaa*t9119+1.0)+(ccaa4*t9116*t9117*t9118)/(gamma_aa[index]*gcaa*t9119* \
                   4.0+t9121*t9114*t9115*6.0+t9116*t9117*t9118+gamma_aa[index]*gcaa*t9120*t9114*t9115*4.0+1.0)+(ccaa3* \
                   gamma_aa[index]*gcaa*t9120*t9114*t9115)/(gamma_aa[index]*gcaa*t9119*3.0+t9121*t9114*t9115*3.0+gamma_aa[index]* \
                   gcaa*t9120*t9114*t9115+1.0))+rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t9073*t9074)/t9077- \
                   C_k*a_1*t9073*t9074*t9078*t9079-C_k*a_2*t9080*t9073*t9074*t9084*2.0+C_k*a_2*t9073*t9074*t9078*t9079* \
                   2.0+C_k*a_3*t9080*t9073*t9074*t9084*3.0-C_k*a_4*t9081*t9073*t9074*t9086*4.0+C_k*a_5*t9081*t9073*t9074* \
                   t9086*5.0-C_k*a_8*t9090*t9073*t9082*t9074*8.0+C_k*a_9*t9090*t9073*t9082*t9074*9.0-C_k*a_10*t9080*t9073* \
                   t9082*t9074*t9083*1.0E1+C_k*a_11*t9080*t9073*t9082*t9074*t9083*1.1E1+C_k*a_10*t9073*t9082*t9091*t9074* \
                   t9078*1.0E1-C_k*a_3*t9080*t9073*t9074*t9085*t9078*3.0+C_k*a_4*t9080*t9073*t9074*t9085*t9078*4.0-C_k* \
                   a_5*t9081*t9073*t9074*t9078*t9087*5.0-C_k*a_6*t9080*t9081*t9073*t9074*t9088*6.0+C_k*a_6*t9081*t9073* \
                   t9074*t9078*t9087*6.0+C_k*a_7*t9080*t9081*t9073*t9074*t9088*7.0-C_k*a_9*t9073*t9082*t9091*t9074*t9078* \
                   9.0-C_k*a_11*t9080*t9073*t9082*t9074*1/pow(t9077,1.2E1)*t9078*1.1E1-C_k*a_7*t9080*t9081*t9073*t9074* \
                   t9078*t9089*7.0+C_k*a_8*t9080*t9081*t9073*t9074*t9078*t9089*8.0);
            } else if (rho_a[index] > cutoff_) {
                double t13857 = pow(rho_a[index],5.0/3.0);
                double t13858 = 1/(tau_a[index]*tau_a[index]);
                double t13859 = 1/tau_a[index];
                double t13860 = C_k*t13857*t13859;
                double t13861 = t13860+1.0;
                double t13862 = t13860-1.0;
                double t13863 = 1/(t13861*t13861);
                double t13864 = t13862*t13862;
                double t13865 = t13864*t13864;
                double t13866 = t13865*t13865;
                double t13867 = 1/pow(t13861,1.1E1);
                double t13868 = 1/(t13861*t13861*t13861);
                double t13869 = 1/(t13861*t13861*t13861*t13861);
                double t13870 = 1/(t13861*t13861*t13861*t13861*t13861);
                double t13871 = 1/(t13861*t13861*t13861*t13861*t13861*t13861);
                double t13872 = 1/(t13861*t13861*t13861*t13861*t13861*t13861*t13861);
                double t13873 = 1/(t13861*t13861*t13861*t13861*t13861*t13861*t13861*t13861);
                double t13874 = 1/(t13861*t13861*t13861*t13861*t13861*t13861*t13861*t13861*t13861);
                double t13875 = 1/pow(t13861,1.0E1);
                double t13876 = 1/pow(rho_a[index],1.0/3.0);
                double t13877 = c*t13876;
                double t13878 = sqrt(t13877);
                double t13879 = pow(t13877,3.0/2.0);
                double t13880 = c*c;
                double t13881 = 1/pow(rho_a[index],2.0/3.0);
                double t13882 = 1/c0p;
                double t13883 = b1p*t13878;
                double t13884 = b3p*t13879;
                double t13885 = b4p*t13880*t13881;
                double t13886 = b2p*c*t13876;
                double t13887 = t13883+t13884+t13885+t13886;
                double t13888 = 1/t13887;
                double t13889 = t13882*t13888*(1.0/2.0);
                double t13890 = t13889+1.0;
                double t13891 = log(t13890);
                double t13892 = a1p*c*t13876;
                double t13893 = t13892+1.0;
                double t13894 = tau_a[index]-1.0/1.0E20;
                double t13895 = tau_a[index]*2.0;
                double t13896 = 1/rho_a[index];
                double t13897 = t13895-gamma_aa[index]*t13896*(1.0/4.0);
                double t13898 = gamma_aa[index]*gamma_aa[index];
                double t13899 = gcaa*gcaa;
                double t13900 = t13898*t13898;
                double t13901 = t13899*t13899;
                double t13902 = 1/pow(rho_a[index],3.2E1/3.0);
                double t13903 = 1/pow(rho_a[index],8.0/3.0);
                double t13904 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t13905 = 1/pow(rho_a[index],1.6E1/3.0);
                v_tau_a_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t13878+ \
                   b3f*t13879+b2f*c*t13876+b4f*t13880*t13881))+1.0)*(a1f*c*t13876+1.0)*2.0-c0p*t13891*t13893*2.0))/(two_13* \
                   2.0-2.0)+c0p*t13891*t13893*2.0)*( ( (t13894 > 0.0) ? 1.0*(t13859-t13858*t13897*(1.0/2.0)) : 0.0 )  \
                   + 0.0 )*(ccaa0+(ccaa2*t13905*t13898*t13899)/(gamma_aa[index]*gcaa*t13903*2.0+t13905*t13898*t13899+ \
                   1.0)+(ccaa1*gamma_aa[index]*gcaa*t13903)/(gamma_aa[index]*gcaa*t13903+1.0)+(ccaa4*t13900*t13901*t13902) \
                   /(gamma_aa[index]*gcaa*t13903*4.0+t13900*t13901*t13902+t13905*t13898*t13899*6.0+gamma_aa[index]*gcaa* \
                   t13904*t13898*t13899*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t13904*t13898*t13899)/(gamma_aa[index]*gcaa* \
                   t13903*3.0+t13905*t13898*t13899*3.0+gamma_aa[index]*gcaa*t13904*t13898*t13899+1.0))+rho_a[index]*(X- \
                   1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*1/pow(rho_a[index]*2.0,2.0/ \
                   3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t13857*t13858)/t13861-C_k*a_1*t13862*t13863*t13857*t13858+C_k* \
                   a_2*t13862*t13863*t13857*t13858*2.0-C_k*a_2*t13864*t13857*t13858*t13868*2.0+C_k*a_3*t13864*t13857* \
                   t13858*t13868*3.0-C_k*a_4*t13870*t13865*t13857*t13858*4.0+C_k*a_5*t13870*t13865*t13857*t13858*5.0- \
                   C_k*a_8*t13874*t13857*t13866*t13858*8.0+C_k*a_9*t13874*t13857*t13866*t13858*9.0+C_k*a_10*t13862*t13857* \
                   t13866*t13875*t13858*1.0E1-C_k*a_10*t13864*t13857*t13866*t13858*t13867*1.0E1+C_k*a_11*t13864*t13857* \
                   t13866*t13858*t13867*1.1E1-C_k*a_3*t13862*t13864*t13857*t13858*t13869*3.0+C_k*a_4*t13862*t13864*t13857* \
                   t13858*t13869*4.0-C_k*a_5*t13862*t13871*t13865*t13857*t13858*5.0+C_k*a_6*t13862*t13871*t13865*t13857* \
                   t13858*6.0-C_k*a_6*t13872*t13864*t13865*t13857*t13858*6.0+C_k*a_7*t13872*t13864*t13865*t13857*t13858* \
                   7.0-C_k*a_9*t13862*t13857*t13866*t13875*t13858*9.0-C_k*a_11*1/pow(t13861,1.2E1)*t13862*t13864*t13857* \
                   t13866*t13858*1.1E1-C_k*a_7*t13862*t13864*t13873*t13865*t13857*t13858*7.0+C_k*a_8*t13862*t13864*t13873* \
                   t13865*t13857*t13858*8.0);
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t9123 = pow(rho_b[index],5.0/3.0);
                double t9124 = 1/(tau_b[index]*tau_b[index]);
                double t9125 = 1/tau_b[index];
                double t9126 = C_k*t9123*t9125;
                double t9127 = t9126+1.0;
                double t9128 = t9126-1.0;
                double t9129 = 1/(t9127*t9127);
                double t9130 = t9128*t9128;
                double t9131 = t9130*t9130;
                double t9132 = t9131*t9131;
                double t9133 = 1/pow(t9127,1.1E1);
                double t9134 = 1/(t9127*t9127*t9127);
                double t9135 = 1/(t9127*t9127*t9127*t9127);
                double t9136 = 1/(t9127*t9127*t9127*t9127*t9127);
                double t9137 = 1/(t9127*t9127*t9127*t9127*t9127*t9127);
                double t9138 = 1/(t9127*t9127*t9127*t9127*t9127*t9127*t9127);
                double t9139 = 1/(t9127*t9127*t9127*t9127*t9127*t9127*t9127*t9127);
                double t9140 = 1/(t9127*t9127*t9127*t9127*t9127*t9127*t9127*t9127*t9127);
                double t9141 = 1/pow(t9127,1.0E1);
                double t9142 = 1/pow(rho_b[index],1.0/3.0);
                double t9143 = c*t9142;
                double t9144 = sqrt(t9143);
                double t9145 = pow(t9143,3.0/2.0);
                double t9146 = c*c;
                double t9147 = 1/pow(rho_b[index],2.0/3.0);
                double t9148 = 1/c0p;
                double t9149 = b1p*t9144;
                double t9150 = b3p*t9145;
                double t9151 = b4p*t9146*t9147;
                double t9152 = b2p*c*t9142;
                double t9153 = t9150+t9151+t9152+t9149;
                double t9154 = 1/t9153;
                double t9155 = t9154*t9148*(1.0/2.0);
                double t9156 = t9155+1.0;
                double t9157 = log(t9156);
                double t9158 = a1p*c*t9142;
                double t9159 = t9158+1.0;
                double t9160 = tau_b[index]-1.0/1.0E20;
                double t9161 = tau_b[index]*2.0;
                double t9162 = 1/rho_b[index];
                double t9163 = t9161-gamma_bb[index]*t9162*(1.0/4.0);
                double t9164 = gamma_bb[index]*gamma_bb[index];
                double t9165 = gcaa*gcaa;
                double t9166 = t9164*t9164;
                double t9167 = t9165*t9165;
                double t9168 = 1/pow(rho_b[index],3.2E1/3.0);
                double t9169 = 1/pow(rho_b[index],8.0/3.0);
                double t9170 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t9171 = 1/pow(rho_b[index],1.6E1/3.0);
                v_tau_b_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t9144+b3f* \
                   t9145+b2f*c*t9142+b4f*t9146*t9147))+1.0)*(a1f*c*t9142+1.0)*2.0-c0p*t9157*t9159*2.0))/(two_13*2.0-2.0) \
                   +c0p*t9157*t9159*2.0)*( ( (t9160 > 0.0) ? 1.0*(t9125-t9124*t9163*(1.0/2.0)) : 0.0 ) + 0.0 )*(ccaa0+ \
                   (ccaa2*t9171*t9164*t9165)/(gamma_bb[index]*gcaa*t9169*2.0+t9171*t9164*t9165+1.0)+(ccaa1*gamma_bb[index]* \
                   gcaa*t9169)/(gamma_bb[index]*gcaa*t9169+1.0)+(ccaa4*t9166*t9167*t9168)/(gamma_bb[index]*gcaa*t9169* \
                   4.0+t9171*t9164*t9165*6.0+t9166*t9167*t9168+gamma_bb[index]*gcaa*t9170*t9164*t9165*4.0+1.0)+(ccaa3* \
                   gamma_bb[index]*gcaa*t9170*t9164*t9165)/(gamma_bb[index]*gcaa*t9169*3.0+t9171*t9164*t9165*3.0+gamma_bb[index]* \
                   gcaa*t9170*t9164*t9165+1.0))+rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]* \
                   rho_b[index])*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t9123*t9124)/t9127- \
                   C_k*a_1*t9123*t9124*t9128*t9129-C_k*a_2*t9130*t9123*t9124*t9134*2.0+C_k*a_2*t9123*t9124*t9128*t9129* \
                   2.0+C_k*a_3*t9130*t9123*t9124*t9134*3.0-C_k*a_4*t9131*t9123*t9124*t9136*4.0+C_k*a_5*t9131*t9123*t9124* \
                   t9136*5.0-C_k*a_8*t9140*t9123*t9132*t9124*8.0+C_k*a_9*t9140*t9123*t9132*t9124*9.0-C_k*a_10*t9130*t9123* \
                   t9132*t9124*t9133*1.0E1+C_k*a_11*t9130*t9123*t9132*t9124*t9133*1.1E1+C_k*a_10*t9123*t9132*t9141*t9124* \
                   t9128*1.0E1-C_k*a_3*t9130*t9123*t9124*t9135*t9128*3.0+C_k*a_4*t9130*t9123*t9124*t9135*t9128*4.0-C_k* \
                   a_5*t9131*t9123*t9124*t9128*t9137*5.0-C_k*a_6*t9130*t9131*t9123*t9124*t9138*6.0+C_k*a_6*t9131*t9123* \
                   t9124*t9128*t9137*6.0+C_k*a_7*t9130*t9131*t9123*t9124*t9138*7.0-C_k*a_9*t9123*t9132*t9141*t9124*t9128* \
                   9.0-C_k*a_11*t9130*t9123*t9132*t9124*1/pow(t9127,1.2E1)*t9128*1.1E1-C_k*a_7*t9130*t9131*t9123*t9124* \
                   t9128*t9139*7.0+C_k*a_8*t9130*t9131*t9123*t9124*t9128*t9139*8.0);
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t12732 = pow(rho_b[index],5.0/3.0);
                double t12733 = 1/(tau_b[index]*tau_b[index]);
                double t12734 = 1/tau_b[index];
                double t12735 = C_k*t12732*t12734;
                double t12736 = t12735+1.0;
                double t12737 = t12735-1.0;
                double t12738 = 1/(t12736*t12736);
                double t12739 = t12737*t12737;
                double t12740 = t12739*t12739;
                double t12741 = t12740*t12740;
                double t12742 = 1/pow(t12736,1.1E1);
                double t12743 = 1/(t12736*t12736*t12736);
                double t12744 = 1/(t12736*t12736*t12736*t12736);
                double t12745 = 1/(t12736*t12736*t12736*t12736*t12736);
                double t12746 = 1/(t12736*t12736*t12736*t12736*t12736*t12736);
                double t12747 = 1/(t12736*t12736*t12736*t12736*t12736*t12736*t12736);
                double t12748 = 1/(t12736*t12736*t12736*t12736*t12736*t12736*t12736*t12736);
                double t12749 = 1/(t12736*t12736*t12736*t12736*t12736*t12736*t12736*t12736*t12736);
                double t12750 = 1/pow(t12736,1.0E1);
                double t12751 = 1/pow(rho_b[index],1.0/3.0);
                double t12752 = c*t12751;
                double t12753 = sqrt(t12752);
                double t12754 = pow(t12752,3.0/2.0);
                double t12755 = c*c;
                double t12756 = 1/pow(rho_b[index],2.0/3.0);
                double t12757 = 1/c0p;
                double t12758 = b1p*t12753;
                double t12759 = b3p*t12754;
                double t12760 = b4p*t12755*t12756;
                double t12761 = b2p*c*t12751;
                double t12762 = t12760+t12761+t12758+t12759;
                double t12763 = 1/t12762;
                double t12764 = t12763*t12757*(1.0/2.0);
                double t12765 = t12764+1.0;
                double t12766 = log(t12765);
                double t12767 = a1p*c*t12751;
                double t12768 = t12767+1.0;
                double t12769 = tau_b[index]-1.0/1.0E20;
                double t12770 = tau_b[index]*2.0;
                double t12771 = 1/rho_b[index];
                double t12772 = t12770-gamma_bb[index]*t12771*(1.0/4.0);
                double t12773 = gamma_bb[index]*gamma_bb[index];
                double t12774 = gcaa*gcaa;
                double t12775 = t12773*t12773;
                double t12776 = t12774*t12774;
                double t12777 = 1/pow(rho_b[index],3.2E1/3.0);
                double t12778 = 1/pow(rho_b[index],8.0/3.0);
                double t12779 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t12780 = 1/pow(rho_b[index],1.6E1/3.0);
                v_tau_b_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t12753+ \
                   b3f*t12754+b2f*c*t12751+b4f*t12755*t12756))+1.0)*(a1f*c*t12751+1.0)*2.0-c0p*t12766*t12768*2.0))/(two_13* \
                   2.0-2.0)+c0p*t12766*t12768*2.0)*( ( (t12769 > 0.0) ? 1.0*(t12734-t12733*t12772*(1.0/2.0)) : 0.0 )  \
                   + 0.0 )*(ccaa0+(ccaa2*t12780*t12773*t12774)/(gamma_bb[index]*gcaa*t12778*2.0+t12780*t12773*t12774+ \
                   1.0)+(ccaa1*gamma_bb[index]*gcaa*t12778)/(gamma_bb[index]*gcaa*t12778+1.0)+(ccaa4*t12775*t12776*t12777) \
                   /(gamma_bb[index]*gcaa*t12778*4.0+t12780*t12773*t12774*6.0+t12775*t12776*t12777+gamma_bb[index]*gcaa* \
                   t12773*t12774*t12779*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t12773*t12774*t12779)/(gamma_bb[index]*gcaa* \
                   t12778*3.0+t12780*t12773*t12774*3.0+gamma_bb[index]*gcaa*t12773*t12774*t12779+1.0))+rho_b[index]*(X- \
                   1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]*rho_b[index])*1/pow(rho_b[index]*2.0,2.0/ \
                   3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t12732*t12733)/t12736-C_k*a_1*t12732*t12733*t12737*t12738-C_k* \
                   a_2*t12732*t12733*t12743*t12739*2.0+C_k*a_2*t12732*t12733*t12737*t12738*2.0+C_k*a_3*t12732*t12733* \
                   t12743*t12739*3.0-C_k*a_4*t12740*t12732*t12733*t12745*4.0+C_k*a_5*t12740*t12732*t12733*t12745*5.0- \
                   C_k*a_8*t12732*t12741*t12733*t12749*8.0+C_k*a_9*t12732*t12741*t12733*t12749*9.0+C_k*a_10*t12732*t12741* \
                   t12750*t12733*t12737*1.0E1-C_k*a_10*t12732*t12741*t12733*t12742*t12739*1.0E1+C_k*a_11*t12732*t12741* \
                   t12733*t12742*t12739*1.1E1-C_k*a_3*t12732*t12733*t12744*t12737*t12739*3.0+C_k*a_4*t12732*t12733*t12744* \
                   t12737*t12739*4.0-C_k*a_5*t12740*t12732*t12733*t12737*t12746*5.0+C_k*a_6*t12740*t12732*t12733*t12737* \
                   t12746*6.0-C_k*a_6*t12740*t12732*t12733*t12747*t12739*6.0+C_k*a_7*t12740*t12732*t12733*t12747*t12739* \
                   7.0-C_k*a_9*t12732*t12741*t12750*t12733*t12737*9.0-C_k*a_11*t12732*t12741*t12733*1/pow(t12736,1.2E1) \
                   *t12737*t12739*1.1E1-C_k*a_7*t12740*t12732*t12733*t12737*t12739*t12748*7.0+C_k*a_8*t12740*t12732*t12733* \
                   t12737*t12739*t12748*8.0);
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t9173 = rho_a[index]+rho_b[index];
            double t9174 = 1/pow(t9173,1.0/3.0);
            double t9175 = c*t9174;
            double t9176 = sqrt(t9175);
            double t9177 = b1p*t9176;
            double t9178 = pow(t9175,3.0/2.0);
            double t9179 = b3p*t9178;
            double t9180 = c*c;
            double t9181 = 1/pow(t9173,2.0/3.0);
            double t9182 = b4p*t9180*t9181;
            double t9183 = b2p*c*t9174;
            double t9184 = t9182+t9183+t9177+t9179;
            double t9185 = 1/pow(t9173,4.0/3.0);
            double t9186 = 1/c0p;
            double t9187 = 1/t9184;
            double t9188 = t9186*t9187*(1.0/2.0);
            double t9189 = t9188+1.0;
            double t9190 = a1p*c*t9174;
            double t9191 = t9190+1.0;
            double t9192 = rho_a[index]-rho_b[index];
            double t9193 = t9192*t9192;
            double t9194 = 1/t9173;
            double t9195 = t9192*t9194;
            double t9196 = two_13*2.0;
            double t9197 = t9196-2.0;
            double t9198 = 1/t9197;
            double t9199 = 1/c0f;
            double t9200 = b1f*t9176;
            double t9201 = b3f*t9178;
            double t9202 = b4f*t9180*t9181;
            double t9203 = b2f*c*t9174;
            double t9204 = t9200+t9201+t9202+t9203;
            double t9205 = 1/t9204;
            double t9206 = t9199*t9205*(1.0/2.0);
            double t9207 = t9206+1.0;
            double t9208 = log(t9207);
            double t9209 = a1f*c*t9174;
            double t9210 = t9209+1.0;
            double t9211 = log(t9189);
            double t9221 = c0f*t9210*t9208*2.0;
            double t9222 = c0p*t9191*t9211*2.0;
            double t9212 = t9221-t9222;
            double t9213 = t9195+1.0;
            double t9214 = pow(t9213,4.0/3.0);
            double t9215 = -t9195+1.0;
            double t9216 = pow(t9215,4.0/3.0);
            double t9217 = t9214+t9216-2.0;
            double t9218 = 1/(t9173*t9173);
            double t9249 = t9192*t9218;
            double t9219 = t9194-t9249;
            double t9220 = 1/(t9173*t9173*t9173*t9173);
            double t9223 = t9193*t9193;
            double t9224 = 1/pow(t9173,5.0/3.0);
            double t9225 = 1/sqrt(t9175);
            double t9226 = 1/t9189;
            double t9227 = 1/(t9184*t9184);
            double t9228 = b4p*t9180*t9224*(2.0/3.0);
            double t9229 = b2p*c*t9185*(1.0/3.0);
            double t9230 = b1p*c*t9185*t9225*(1.0/6.0);
            double t9231 = b3p*c*t9176*t9185*(1.0/2.0);
            double t9232 = t9230+t9231+t9228+t9229;
            double t9233 = t9191*t9232*t9226*t9227;
            double t9234 = 1/(t9173*t9173*t9173*t9173*t9173);
            double t9235 = 1/d2fz0;
            double t9236 = 1/Aa;
            double t9237 = b1a*t9176;
            double t9238 = b3a*t9178;
            double t9239 = b4a*t9180*t9181;
            double t9240 = b2a*c*t9174;
            double t9241 = t9240+t9237+t9238+t9239;
            double t9242 = 1/t9241;
            double t9243 = t9242*t9236*(1.0/2.0);
            double t9244 = t9243+1.0;
            double t9245 = log(t9244);
            double t9246 = a1a*c*t9174;
            double t9247 = t9246+1.0;
            double t9248 = pow(t9213,1.0/3.0);
            double t9250 = t9219*t9248*(4.0/3.0);
            double t9251 = pow(t9215,1.0/3.0);
            double t9326 = t9251*t9219*(4.0/3.0);
            double t9252 = t9250-t9326;
            double t9253 = t9220*t9223;
            double t9254 = t9253-1.0;
            double t9255 = 1/pow(rho_a[index],1.0/3.0);
            double t9256 = c*t9255;
            double t9257 = sqrt(t9256);
            double t9258 = b1f*t9257;
            double t9259 = pow(t9256,3.0/2.0);
            double t9260 = b3f*t9259;
            double t9261 = 1/pow(rho_a[index],2.0/3.0);
            double t9262 = b4f*t9180*t9261;
            double t9263 = b2f*c*t9255;
            double t9264 = t9260+t9262+t9263+t9258;
            double t9265 = 1/pow(rho_a[index],4.0/3.0);
            double t9266 = b1p*t9257;
            double t9267 = b3p*t9259;
            double t9268 = b4p*t9180*t9261;
            double t9269 = b2p*c*t9255;
            double t9270 = t9266+t9267+t9268+t9269;
            double t9271 = 1/pow(rho_a[index],5.0/3.0);
            double t9272 = 1/sqrt(t9256);
            double t9273 = 1/t9264;
            double t9274 = t9199*t9273*(1.0/2.0);
            double t9275 = t9274+1.0;
            double t9276 = 1/t9270;
            double t9277 = t9186*t9276*(1.0/2.0);
            double t9278 = t9277+1.0;
            double t9279 = a1p*c*t9255;
            double t9280 = t9279+1.0;
            double t9281 = 1/t9278;
            double t9282 = 1/(t9270*t9270);
            double t9283 = b4p*t9180*t9271*(2.0/3.0);
            double t9284 = b2p*c*t9265*(1.0/3.0);
            double t9285 = b1p*c*t9272*t9265*(1.0/6.0);
            double t9286 = b3p*c*t9265*t9257*(1.0/2.0);
            double t9287 = t9283+t9284+t9285+t9286;
            double t9288 = t9280*t9281*t9282*t9287;
            double t9289 = log(t9278);
            double t9290 = pow(2.0,1.0/3.0);
            double t9291 = t9290*2.0;
            double t9292 = t9291-2.0;
            double t9293 = log(t9275);
            double t9294 = a1f*c*t9255;
            double t9295 = t9294+1.0;
            double t9296 = gcab*gcab;
            double t9300 = 1/pow(rho_a[index],8.0/3.0);
            double t9301 = gamma_aa[index]*t9300*(1.0/2.0);
            double t9302 = 1/pow(rho_b[index],8.0/3.0);
            double t9303 = gamma_bb[index]*t9302*(1.0/2.0);
            double t9297 = t9301+t9303;
            double t9298 = t9297*t9297;
            double t9299 = 1/pow(rho_a[index],1.1E1/3.0);
            double t9304 = t9296*t9296;
            double t9305 = t9298*t9298;
            double t9306 = t9296*t9298*6.0;
            double t9307 = gcab*t9296*t9297*t9298*4.0;
            double t9308 = t9304*t9305;
            double t9309 = gcab*t9297*4.0;
            double t9310 = t9306+t9307+t9308+t9309+1.0;
            double t9311 = gcab*t9297;
            double t9312 = t9311+1.0;
            double t9313 = t9296*t9298;
            double t9314 = gcab*t9297*2.0;
            double t9315 = t9313+t9314+1.0;
            double t9316 = t9296*t9298*3.0;
            double t9317 = gcab*t9296*t9297*t9298;
            double t9318 = gcab*t9297*3.0;
            double t9319 = t9316+t9317+t9318+1.0;
            double t9320 = 1/t9315;
            double t9321 = 1/t9319;
            double t9322 = 1/t9312;
            double t9323 = 1/t9310;
            double t9324 = 1/pow(t9173,7.0/3.0);
            double t9325 = 1/pow(t9173,8.0/3.0);
            double t9327 = 1/t9207;
            double t9328 = 1/(t9204*t9204);
            double t9329 = b4f*t9180*t9224*(2.0/3.0);
            double t9330 = b2f*c*t9185*(1.0/3.0);
            double t9331 = b1f*c*t9185*t9225*(1.0/6.0);
            double t9332 = b3f*c*t9176*t9185*(1.0/2.0);
            double t9333 = t9330+t9331+t9332+t9329;
            double t9334 = a1f*c*c0f*t9185*t9208*(2.0/3.0);
            double t9336 = t9210*t9333*t9327*t9328;
            double t9337 = a1p*c*c0p*t9185*t9211*(2.0/3.0);
            double t9335 = t9233+t9334-t9336-t9337;
            double t9338 = t9232*t9232;
            double t9339 = 1/pow(t9175,3.0/2.0);
            double t9340 = b4p*t9180*t9325*(1.0E1/9.0);
            double t9341 = b2p*c*t9324*(4.0/9.0);
            double t9342 = b1p*c*t9225*t9324*(2.0/9.0);
            double t9343 = b3p*c*t9176*t9324*(2.0/3.0);
            double t9344 = b3p*t9180*t9225*t9325*(1.0/1.2E1);
            double t9345 = t9340+t9341+t9342+t9343+t9344-b1p*t9180*t9325*t9339*(1.0/3.6E1);
            double t9346 = 1/(t9184*t9184*t9184);
            double t9347 = t9191*t9226*t9346*t9338*2.0;
            double t9348 = t9333*t9333;
            double t9349 = 1/(t9189*t9189);
            double t9350 = 1/(t9184*t9184*t9184*t9184);
            double t9351 = t9218*2.0;
            double t9352 = 1/(t9173*t9173*t9173);
            double t9359 = t9192*t9352*2.0;
            double t9353 = t9351-t9359;
            double t9354 = t9219*t9219;
            double t9355 = a1p*c*c0p*t9211*t9324*(8.0/9.0);
            double t9356 = 1/(t9173*t9173*t9173*t9173*t9173*t9173);
            double t9357 = t9223*t9234*4.0;
            double t9367 = t9192*t9193*t9220*4.0;
            double t9358 = t9357-t9367;
            double t9360 = t9251*t9353*(4.0/3.0);
            double t9361 = 1/pow(t9213,2.0/3.0);
            double t9362 = t9361*t9354*(4.0/9.0);
            double t9363 = 1/pow(t9215,2.0/3.0);
            double t9364 = t9354*t9363*(4.0/9.0);
            double t9365 = t9360+t9362+t9364-t9248*t9353*(4.0/3.0);
            double t9366 = 1/t9244;
            double t9368 = 1/(t9241*t9241);
            double t9369 = b4a*t9180*t9224*(2.0/3.0);
            double t9370 = b2a*c*t9185*(1.0/3.0);
            double t9371 = b1a*c*t9185*t9225*(1.0/6.0);
            double t9372 = b3a*c*t9176*t9185*(1.0/2.0);
            double t9373 = t9370+t9371+t9372+t9369;
            double t9374 = t9373*t9373;
            double t9375 = t9191*t9226*t9227*t9345;
            double t9376 = 1/t9275;
            double t9377 = b4f*t9180*t9271*(2.0/3.0);
            double t9378 = b2f*c*t9265*(1.0/3.0);
            double t9379 = b1f*c*t9272*t9265*(1.0/6.0);
            double t9380 = b3f*c*t9265*t9257*(1.0/2.0);
            double t9381 = t9380+t9377+t9378+t9379;
            double t9382 = 1/(t9264*t9264);
            double t9383 = 1/pow(rho_a[index],7.0/3.0);
            double t9384 = 1/pow(t9256,3.0/2.0);
            double t9385 = t9381*t9381;
            double t9386 = t9287*t9287;
            double t9387 = 1/(t9270*t9270*t9270);
            double t9388 = t9280*t9281*t9386*t9387*2.0;
            double t9389 = b4p*t9180*t9300*(1.0E1/9.0);
            double t9390 = b2p*c*t9383*(4.0/9.0);
            double t9391 = b3p*t9180*t9272*t9300*(1.0/1.2E1);
            double t9392 = b1p*c*t9272*t9383*(2.0/9.0);
            double t9393 = b3p*c*t9257*t9383*(2.0/3.0);
            double t9576 = b1p*t9180*t9300*t9384*(1.0/3.6E1);
            double t9394 = t9390+t9391+t9392+t9393+t9389-t9576;
            double t9395 = 1/(t9278*t9278);
            double t9396 = 1/(t9270*t9270*t9270*t9270);
            double t9397 = a1p*c*c0p*t9289*t9383*(8.0/9.0);
            double t9398 = a1f*c*c0f*t9265*t9293*(2.0/3.0);
            double t9399 = a1p*c*c0p*t9265*t9289*(2.0/3.0);
            double t9400 = t9191*t9186*t9350*t9338*t9349*(1.0/2.0);
            double t9401 = 1/tau_a[index];
            double t9402 = pow(rho_a[index],2.0/3.0);
            double t9403 = pow(rho_a[index],5.0/3.0);
            double t9404 = C_k*t9401*t9403;
            double t9405 = t9404+1.0;
            double t9406 = t9404-1.0;
            double t9407 = 1/(t9405*t9405);
            double t9408 = t9406*t9406;
            double t9409 = t9408*t9408;
            double t9410 = t9409*t9409;
            double t9411 = 1/pow(t9405,1.1E1);
            double t9412 = 1/(t9405*t9405*t9405);
            double t9413 = 1/(t9405*t9405*t9405*t9405);
            double t9414 = 1/(t9405*t9405*t9405*t9405*t9405);
            double t9415 = 1/(t9405*t9405*t9405*t9405*t9405*t9405);
            double t9416 = 1/(t9405*t9405*t9405*t9405*t9405*t9405*t9405);
            double t9417 = 1/(t9405*t9405*t9405*t9405*t9405*t9405*t9405*t9405);
            double t9418 = 1/(t9405*t9405*t9405*t9405*t9405*t9405*t9405*t9405*t9405);
            double t9419 = 1/pow(t9405,1.0E1);
            double t9420 = 1/(k*k);
            double t9421 = 1/kp;
            double t9422 = 1/(rho_a[index]*rho_a[index]);
            double t9423 = rho_a[index]*2.0;
            double t9424 = 1/pow(t9423,2.0/3.0);
            double t9425 = gamma_aa[index]*mu_*t9420*t9421*t9422*t9424*(1.0/4.0);
            double t9426 = t9425+1.0;
            double t9427 = 1/t9426;
            double t9428 = kp-kp*t9427+1.0;
            double t9429 = C_k*C_k;
            double t9430 = pow(rho_a[index],4.0/3.0);
            double t9431 = 1/(tau_a[index]*tau_a[index]);
            double t9432 = 1/t9405;
            double t9433 = 1/pow(t9405,1.2E1);
            double t9434 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t9435 = gamma_aa[index]*mu_*t9420*t9421*t9424*t9434*(1.0/2.0);
            double t9436 = 1/pow(t9423,5.0/3.0);
            double t9437 = gamma_aa[index]*mu_*t9420*t9421*t9422*t9436*(1.0/3.0);
            double t9438 = t9435+t9437;
            double t9439 = a_1*t9432*t9406;
            double t9440 = a_10*t9410*t9408*t9419;
            double t9441 = a_11*t9410*t9411*t9406*t9408;
            double t9442 = a_2*t9407*t9408;
            double t9443 = a_3*t9412*t9406*t9408;
            double t9444 = a_4*t9413*t9409;
            double t9445 = a_5*t9414*t9406*t9409;
            double t9446 = a_6*t9415*t9408*t9409;
            double t9447 = a_7*t9406*t9416*t9408*t9409;
            double t9448 = a_8*t9410*t9417;
            double t9449 = a_9*t9410*t9406*t9418;
            double t9450 = t9440+t9441+t9442+t9443+t9444+t9445+t9446+t9447+t9439+t9448+t9449+1.0;
            double t9451 = 1/(t9426*t9426);
            double t9452 = C_k*a_1*t9401*t9402*t9432*(5.0/3.0);
            double t9453 = C_k*a_2*t9401*t9402*t9406*t9407*(1.0E1/3.0);
            double t9454 = C_k*a_10*t9401*t9410*t9402*t9406*t9419*(5.0E1/3.0);
            double t9455 = C_k*a_11*t9401*t9410*t9402*t9411*t9408*(5.5E1/3.0);
            double t9456 = C_k*a_3*t9401*t9402*t9412*t9408*5.0;
            double t9457 = C_k*a_4*t9401*t9402*t9413*t9406*t9408*(2.0E1/3.0);
            double t9458 = C_k*a_5*t9401*t9402*t9414*t9409*(2.5E1/3.0);
            double t9459 = C_k*a_6*t9401*t9402*t9406*t9415*t9409*1.0E1;
            double t9460 = C_k*a_7*t9401*t9402*t9416*t9408*t9409*(3.5E1/3.0);
            double t9461 = C_k*a_8*t9401*t9402*t9406*t9408*t9417*t9409*(4.0E1/3.0);
            double t9462 = C_k*a_9*t9401*t9410*t9402*t9418*1.5E1;
            double t9463 = t9460+t9452+t9461+t9453+t9462+t9454+t9455+t9456+t9457+t9458+t9459-C_k*a_1*t9401*t9402* \
               t9406*t9407*(5.0/3.0)-C_k*a_2*t9401*t9402*t9412*t9408*(1.0E1/3.0)-C_k*a_4*t9401*t9402*t9414*t9409* \
               (2.0E1/3.0)-C_k*a_8*t9401*t9410*t9402*t9418*(4.0E1/3.0)-C_k*a_10*t9401*t9410*t9402*t9411*t9408*(5.0E1/ \
               3.0)-C_k*a_3*t9401*t9402*t9413*t9406*t9408*5.0-C_k*a_5*t9401*t9402*t9406*t9415*t9409*(2.5E1/3.0)-C_k* \
               a_6*t9401*t9402*t9416*t9408*t9409*1.0E1-C_k*a_9*t9401*t9410*t9402*t9406*t9419*1.5E1-C_k*a_11*t9401* \
               t9410*t9402*t9406*t9433*t9408*(5.5E1/3.0)-C_k*a_7*t9401*t9402*t9406*t9408*t9417*t9409*(3.5E1/3.0);
            double t9464 = c0f*t9293*t9295*2.0;
            double t9466 = c0p*t9280*t9289*2.0;
            double t9465 = t9464-t9466;
            double t9467 = 1/pow(rho_b[index],1.0/3.0);
            double t9468 = c*t9467;
            double t9469 = sqrt(t9468);
            double t9470 = pow(t9468,3.0/2.0);
            double t9471 = 1/pow(rho_b[index],2.0/3.0);
            double t9472 = b1p*t9469;
            double t9473 = b3p*t9470;
            double t9474 = b4p*t9180*t9471;
            double t9475 = b2p*c*t9467;
            double t9476 = t9472+t9473+t9474+t9475;
            double t9477 = 1/t9476;
            double t9478 = t9186*t9477*(1.0/2.0);
            double t9479 = t9478+1.0;
            double t9480 = log(t9479);
            double t9481 = a1p*c*t9467;
            double t9482 = t9481+1.0;
            double t9483 = c0p*t9480*t9482*2.0;
            double t9484 = t9198*t9220*t9212*t9223*t9217;
            double t9485 = Aa*t9198*t9217*t9235*t9245*t9254*t9247*2.0;
            double t9486 = gamma_aa[index]*gcab*t9299*(1.6E1/3.0);
            double t9487 = gamma_aa[index]*gcab*t9296*t9298*t9299*1.6E1;
            double t9488 = gamma_aa[index]*t9297*t9298*t9299*t9304*(1.6E1/3.0);
            double t9489 = gamma_aa[index]*t9296*t9297*t9299*1.6E1;
            double t9490 = t9486+t9487+t9488+t9489;
            double t9491 = 1/(t9312*t9312);
            double t9492 = gamma_aa[index]*gamma_aa[index];
            double t9493 = 1/pow(rho_a[index],2.2E1/3.0);
            double t9494 = gamma_aa[index]*gcab*t9299*(8.0/3.0);
            double t9495 = gamma_aa[index]*t9296*t9297*t9299*(8.0/3.0);
            double t9496 = t9494+t9495;
            double t9497 = 1/(t9319*t9319);
            double t9498 = 1/pow(rho_a[index],1.4E1/3.0);
            double t9499 = 1/(t9310*t9310);
            double t9500 = 1/(t9315*t9315);
            double t9501 = gamma_aa[index]*gcab*t9299*4.0;
            double t9502 = gamma_aa[index]*gcab*t9296*t9298*t9299*4.0;
            double t9503 = gamma_aa[index]*t9296*t9297*t9299*8.0;
            double t9504 = t9501+t9502+t9503;
            double t9584 = t9295*t9381*t9382*t9376;
            double t9505 = t9288+t9398-t9399-t9584;
            double t9506 = gcaa*gcaa;
            double t9507 = t9492*t9492;
            double t9508 = t9506*t9506;
            double t9509 = 1/pow(rho_a[index],3.2E1/3.0);
            double t9510 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t9511 = 1/pow(rho_a[index],1.6E1/3.0);
            double t9512 = t9198*t9292*t9465;
            double t9513 = t9466+t9512;
            double t9514 = tau_a[index]-1.0/1.0E20;
            double t9515 = ( (t9514 > 0.0) ?  1.0 : 0.0 ) ;
            double t9516 = tau_a[index]*2.0;
            double t9517 = 1/rho_a[index];
            double t9544 = gamma_aa[index]*t9517*(1.0/4.0);
            double t9518 = t9516-t9544;
            double t9519 = t9401*t9518*(1.0/2.0);
            double t9520 = t9519-1.0;
            double t9521 = t9520*t9515;
            double t9522 = t9521+1.0;
            double t9523 = gamma_aa[index]*gcaa*t9300*4.0;
            double t9524 = gamma_aa[index]*gcaa*t9492*t9510*t9506*4.0;
            double t9525 = t9492*t9511*t9506*6.0;
            double t9526 = t9507*t9508*t9509;
            double t9527 = t9523+t9524+t9525+t9526+1.0;
            double t9528 = 1/t9527;
            double t9529 = gamma_aa[index]*gcaa*t9300;
            double t9530 = t9529+1.0;
            double t9531 = 1/t9530;
            double t9532 = gamma_aa[index]*gcaa*t9300*3.0;
            double t9533 = gamma_aa[index]*gcaa*t9492*t9510*t9506;
            double t9534 = t9492*t9511*t9506*3.0;
            double t9535 = t9532+t9533+t9534+1.0;
            double t9536 = 1/t9535;
            double t9537 = gamma_aa[index]*gcaa*t9300*2.0;
            double t9538 = t9492*t9511*t9506;
            double t9539 = t9537+t9538+1.0;
            double t9540 = 1/t9539;
            double t9541 = 1/pow(rho_a[index],1.9E1/3.0);
            double t9542 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t9543 = 1/pow(rho_a[index],3.5E1/3.0);
            double t9545 = 1/pow(rho_a[index],1.0E1);
            double t9546 = 1/(t9530*t9530);
            double t9547 = gamma_aa[index]*gcaa*t9299*(3.2E1/3.0);
            double t9548 = gamma_aa[index]*gcaa*t9492*t9506*t9542*3.2E1;
            double t9549 = t9492*t9541*t9506*3.2E1;
            double t9550 = t9507*t9543*t9508*(3.2E1/3.0);
            double t9551 = t9550+t9547+t9548+t9549;
            double t9552 = gamma_aa[index]*gcaa*t9299*(1.6E1/3.0);
            double t9553 = t9492*t9541*t9506*(1.6E1/3.0);
            double t9554 = t9552+t9553;
            double t9555 = gamma_aa[index]*gcaa*t9299*8.0;
            double t9556 = gamma_aa[index]*gcaa*t9492*t9506*t9542*8.0;
            double t9557 = t9492*t9541*t9506*1.6E1;
            double t9558 = t9555+t9556+t9557;
            double t9559 = 1/(t9535*t9535);
            double t9560 = 1/(t9527*t9527);
            double t9561 = 1/pow(rho_a[index],3.8E1/3.0);
            double t9562 = 1/(t9539*t9539);
            double t9563 = ccaa4*t9507*t9508*t9509*t9528;
            double t9564 = ccaa1*gamma_aa[index]*gcaa*t9300*t9531;
            double t9565 = ccaa3*gamma_aa[index]*gcaa*t9492*t9510*t9506*t9536;
            double t9566 = ccaa2*t9492*t9511*t9540*t9506;
            double t9567 = ccaa0+t9563+t9564+t9565+t9566;
            double t9568 = 1/(t9264*t9264*t9264);
            double t9569 = b4f*t9180*t9300*(1.0E1/9.0);
            double t9570 = b2f*c*t9383*(4.0/9.0);
            double t9571 = b3f*t9180*t9272*t9300*(1.0/1.2E1);
            double t9572 = b1f*c*t9272*t9383*(2.0/9.0);
            double t9573 = b3f*c*t9257*t9383*(2.0/3.0);
            double t9574 = t9570+t9571+t9572+t9573+t9569-b1f*t9180*t9300*t9384*(1.0/3.6E1);
            double t9575 = t9295*t9382*t9376*t9574;
            double t9577 = t9280*t9281*t9282*t9394;
            double t9578 = 1/(t9275*t9275);
            double t9579 = 1/(t9264*t9264*t9264*t9264);
            double t9580 = t9199*t9295*t9385*t9578*t9579*(1.0/2.0);
            double t9581 = t9186*t9280*t9386*t9395*t9396*(1.0/2.0);
            double t9582 = a1f*c*t9265*t9381*t9382*t9376*(2.0/3.0);
            double t9583 = a1p*c*t9281*t9282*t9265*t9287*(2.0/3.0);
            double t9585 = t9198*t9292*t9505;
            double t9586 = ccaa4*t9507*t9543*t9508*t9528*(3.2E1/3.0);
            double t9587 = ccaa1*gamma_aa[index]*gcaa*t9299*t9531*(8.0/3.0);
            double t9588 = ccaa3*gamma_aa[index]*gcaa*t9492*t9506*t9542*t9536*8.0;
            double t9589 = ccaa2*t9492*t9540*t9541*t9506*(1.6E1/3.0);
            double t9592 = ccaa1*t9492*t9541*t9506*t9546*(8.0/3.0);
            double t9593 = ccaa3*gamma_aa[index]*gcaa*t9492*t9510*t9506*t9558*t9559;
            double t9594 = ccaa4*t9551*t9560*t9507*t9508*t9509;
            double t9595 = ccaa2*t9492*t9511*t9506*t9562*t9554;
            double t9590 = -t9592-t9593-t9594+t9586-t9595+t9587+t9588+t9589;
            double t9591 = -t9288+t9399+t9585;
            v_rho_a_rho_a_[index] = (rho_a[index]*t9513+rho_b[index]*(t9483-t9198*t9292*(t9483-c0f*log((t9199* \
               (1.0/2.0))/(b1f*t9469+b3f*t9470+b2f*c*t9467+b4f*t9180*t9471)+1.0)*(a1f*c*t9467+1.0)*2.0))-t9173*(t9222+ \
               t9484+t9485))*(-ccab2*t9296*t9298*t9500*(gamma_aa[index]*gcab*t9498*(8.8E1/9.0)+t9296*t9492*t9493* \
               (3.2E1/9.0)+gamma_aa[index]*t9296*t9297*t9498*(8.8E1/9.0))+ccab2*t9296*t9298*1/(t9315*t9315*t9315) \
               *(t9496*t9496)*2.0+ccab4*1/(t9310*t9310*t9310)*t9304*t9305*(t9490*t9490)*2.0+ccab1*gamma_aa[index]* \
               gcab*t9322*t9498*(4.4E1/9.0)+ccab2*t9296*t9320*t9492*t9493*(3.2E1/9.0)-ccab1*t9296*t9491*t9492*t9493* \
               (3.2E1/9.0)-ccab4*t9304*t9305*t9499*(gamma_aa[index]*gcab*t9498*(1.76E2/9.0)+t9296*t9492*t9493*(6.4E1/ \
               3.0)+gamma_aa[index]*t9296*t9297*t9498*(1.76E2/3.0)+t9298*t9304*t9492*t9493*(6.4E1/3.0)+gamma_aa[index]* \
               gcab*t9296*t9298*t9498*(1.76E2/3.0)+gamma_aa[index]*t9297*t9298*t9304*t9498*(1.76E2/9.0)+gcab*t9296* \
               t9297*t9492*t9493*(1.28E2/3.0))+ccab4*t9298*t9304*t9323*t9492*t9493*(6.4E1/3.0)+ccab2*gamma_aa[index]* \
               t9296*t9297*t9320*t9498*(8.8E1/9.0)-ccab1*gamma_aa[index]*t9296*t9297*t9491*t9498*(4.4E1/9.0)+ccab3* \
               gcab*t9296*t9297*t9298*1/(t9319*t9319*t9319)*(t9504*t9504)*2.0+ccab3*gamma_aa[index]*gcab*t9296*t9298* \
               t9321*t9498*(4.4E1/3.0)+ccab4*gamma_aa[index]*t9297*t9298*t9304*t9323*t9498*(1.76E2/9.0)-ccab2*gamma_aa[index]* \
               t9296*t9297*t9299*t9496*t9500*(1.6E1/3.0)+ccab3*gcab*t9296*t9297*t9321*t9492*t9493*(3.2E1/3.0)+ccab1* \
               gcab*t9296*t9297*1/(t9312*t9312*t9312)*t9492*t9493*(3.2E1/9.0)-ccab3*gcab*t9296*t9297*t9298*t9497* \
               (gamma_aa[index]*gcab*t9498*(4.4E1/3.0)+t9296*t9492*t9493*(3.2E1/3.0)+gamma_aa[index]*t9296*t9297* \
               t9498*(8.8E1/3.0)+gamma_aa[index]*gcab*t9296*t9298*t9498*(4.4E1/3.0)+gcab*t9296*t9297*t9492*t9493* \
               (3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t9296*t9298*t9299*t9497*t9504*8.0-ccab4*gamma_aa[index]*t9297* \
               t9298*t9299*t9304*t9490*t9499*(3.2E1/3.0))-(X-1.0)*(t9463*t9428*2.0+rho_a[index]*t9428*(C_k*a_1*t9255* \
               t9401*t9432*(1.0E1/9.0)-a_1*t9430*t9431*t9407*t9429*(5.0E1/9.0)+a_2*t9430*t9431*t9407*t9429*(5.0E1/ \
               9.0)+a_1*t9412*t9430*t9431*t9406*t9429*(5.0E1/9.0)+a_10*t9410*t9430*t9431*t9419*t9429*2.5E2-a_2*t9412* \
               t9430*t9431*t9406*t9429*(2.0E2/9.0)+a_2*t9430*t9413*t9431*t9408*t9429*(5.0E1/3.0)+a_3*t9412*t9430* \
               t9431*t9406*t9429*(5.0E1/3.0)-a_3*t9430*t9413*t9431*t9408*t9429*5.0E1+a_4*t9430*t9413*t9431*t9408* \
               t9429*(1.0E2/3.0)+a_4*t9430*t9431*t9415*t9409*t9429*(5.0E2/9.0)-a_5*t9430*t9431*t9415*t9409*t9429* \
               (1.25E3/9.0)+a_6*t9430*t9431*t9415*t9409*t9429*(2.5E2/3.0)+a_8*t9410*t9430*t9431*t9419*t9429*2.0E2- \
               a_9*t9410*t9430*t9431*t9419*t9429*4.5E2-C_k*a_1*t9255*t9401*t9406*t9407*(1.0E1/9.0)-C_k*a_2*t9255* \
               t9401*t9412*t9408*(2.0E1/9.0)+C_k*a_2*t9255*t9401*t9406*t9407*(2.0E1/9.0)+C_k*a_3*t9255*t9401*t9412* \
               t9408*(1.0E1/3.0)-C_k*a_4*t9255*t9401*t9414*t9409*(4.0E1/9.0)+C_k*a_5*t9255*t9401*t9414*t9409*(5.0E1/ \
               9.0)-C_k*a_8*t9255*t9401*t9410*t9418*(8.0E1/9.0)+C_k*a_9*t9255*t9401*t9410*t9418*1.0E1-C_k*a_10*t9255* \
               t9401*t9410*t9411*t9408*(1.0E2/9.0)+C_k*a_11*t9255*t9401*t9410*t9411*t9408*(1.1E2/9.0)+C_k*a_10*t9255* \
               t9401*t9410*t9406*t9419*(1.0E2/9.0)-C_k*a_3*t9255*t9401*t9413*t9406*t9408*(1.0E1/3.0)+C_k*a_4*t9255* \
               t9401*t9413*t9406*t9408*(4.0E1/9.0)-C_k*a_5*t9255*t9401*t9406*t9415*t9409*(5.0E1/9.0)+C_k*a_6*t9255* \
               t9401*t9406*t9415*t9409*(2.0E1/3.0)-C_k*a_6*t9255*t9401*t9416*t9408*t9409*(2.0E1/3.0)+C_k*a_7*t9255* \
               t9401*t9416*t9408*t9409*(7.0E1/9.0)-C_k*a_9*t9255*t9401*t9410*t9406*t9419*1.0E1-a_10*t9410*t9411*t9430* \
               t9431*t9406*t9429*(5.0E3/9.0)+a_11*t9410*t9411*t9430*t9431*t9406*t9429*(2.75E3/9.0)+a_10*t9410*t9430* \
               t9431*t9433*t9408*t9429*(2.75E3/9.0)-a_11*t9410*t9430*t9431*t9433*t9408*t9429*(6.05E3/9.0)+a_3*t9430* \
               t9431*t9414*t9406*t9408*t9429*(1.0E2/3.0)-a_4*t9430*t9431*t9414*t9406*t9408*t9429*(8.0E2/9.0)+a_5* \
               t9430*t9431*t9414*t9406*t9408*t9429*(5.0E2/9.0)+a_5*t9430*t9431*t9406*t9416*t9409*t9429*(2.5E2/3.0) \
               -a_6*t9430*t9431*t9406*t9416*t9409*t9429*2.0E2+a_6*t9430*t9431*t9408*t9417*t9409*t9429*(3.5E2/3.0) \
               +a_7*t9430*t9431*t9406*t9416*t9409*t9429*(3.5E2/3.0)-a_7*t9430*t9431*t9408*t9417*t9409*t9429*(2.45E3/ \
               9.0)+a_8*t9430*t9431*t9408*t9417*t9409*t9429*(1.4E3/9.0)+a_9*t9410*t9411*t9430*t9431*t9406*t9429*2.5E2+ \
               a_11*t9410*t9430*t9431*1/pow(t9405,1.3E1)*t9406*t9408*t9429*(1.1E3/3.0)-C_k*a_11*t9255*t9401*t9410* \
               t9406*t9433*t9408*(1.1E2/9.0)-C_k*a_7*t9255*t9401*t9406*t9408*t9417*t9409*(7.0E1/9.0)+C_k*a_8*t9255* \
               t9401*t9406*t9408*t9417*t9409*(8.0E1/9.0)+a_7*t9430*t9431*t9406*t9408*t9409*t9418*t9429*(1.4E3/9.0) \
               -a_8*t9430*t9431*t9406*t9408*t9409*t9418*t9429*(3.2E3/9.0)+a_9*t9430*t9431*t9406*t9408*t9409*t9418* \
               t9429*2.0E2)-kp*t9450*t9451*t9438*2.0+kp*rho_a[index]*t9450*t9451*(gamma_aa[index]*mu_*t9420*t9421* \
               t9434*t9436*(4.0/3.0)+gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])* \
               t9420*t9421*t9424*(3.0/2.0)+gamma_aa[index]*mu_*t9420*t9421*t9422*1/pow(t9423,8.0/3.0)*(1.0E1/9.0) \
               )-kp*rho_a[index]*t9450*1/(t9426*t9426*t9426)*(t9438*t9438)*2.0-kp*rho_a[index]*t9451*t9463*t9438* \
               2.0)+(t9222+t9484+t9485+rho_a[index]*(-t9288+t9399+t9198*t9292*(t9288+t9398-t9295*t9381*t9382*t9376- \
               a1p*c*c0p*t9265*t9289*(2.0/3.0)))+t9173*(t9233-a1p*c*c0p*t9185*t9211*(2.0/3.0)+t9198*t9220*t9212*t9223* \
               t9252-t9198*t9212*t9223*t9234*t9217*4.0-t9198*t9220*t9223*t9217*t9335+t9192*t9193*t9198*t9220*t9212* \
               t9217*4.0+Aa*t9198*t9252*t9235*t9245*t9254*t9247*2.0-Aa*t9198*t9217*t9235*t9245*t9247*t9358*2.0+t9198* \
               t9217*t9235*t9254*t9247*t9373*t9366*t9368-Aa*a1a*c*t9185*t9198*t9217*t9235*t9245*t9254*(2.0/3.0))- \
               c0p*t9280*t9289*2.0-t9198*t9292*t9465)*(ccab1*gamma_aa[index]*gcab*t9299*t9322*(4.0/3.0)-ccab2*t9296* \
               t9298*t9496*t9500-ccab4*t9304*t9305*t9490*t9499+ccab2*gamma_aa[index]*t9296*t9297*t9299*t9320*(8.0/ \
               3.0)-ccab1*gamma_aa[index]*t9296*t9297*t9299*t9491*(4.0/3.0)+ccab3*gamma_aa[index]*gcab*t9296*t9298* \
               t9299*t9321*4.0+ccab4*gamma_aa[index]*t9297*t9298*t9299*t9304*t9323*(1.6E1/3.0)-ccab3*gcab*t9296*t9297* \
               t9298*t9497*t9504)*2.0-(ccab0+ccab1*gcab*t9297*t9322+ccab2*t9296*t9298*t9320+ccab4*t9304*t9305*t9323+ \
               ccab3*gcab*t9296*t9297*t9298*t9321)*(-t9173*(-t9355-t9347+t9375+t9400+t9198*t9220*t9223*t9217*(t9355+ \
               t9347-t9375-t9400-t9210*1/(t9204*t9204*t9204)*t9327*t9348*2.0+t9210*t9327*t9328*(b2f*c*t9324*(4.0/ \
               9.0)+b4f*t9180*t9325*(1.0E1/9.0)+b1f*c*t9225*t9324*(2.0/9.0)+b3f*c*t9176*t9324*(2.0/3.0)-b1f*t9180* \
               t9325*t9339*(1.0/3.6E1)+b3f*t9180*t9225*t9325*(1.0/1.2E1))+t9199*t9210*1/(t9204*t9204*t9204*t9204) \
               *1/(t9207*t9207)*t9348*(1.0/2.0)-a1f*c*c0f*t9208*t9324*(8.0/9.0)+a1f*c*t9185*t9333*t9327*t9328*(2.0/ \
               3.0)-a1p*c*t9185*t9232*t9226*t9227*(2.0/3.0))-t9193*t9198*t9220*t9212*t9217*1.2E1+t9198*t9212*t9223* \
               t9234*t9252*8.0-t9198*t9220*t9212*t9223*t9365+t9198*t9220*t9223*t9252*t9335*2.0-t9198*t9212*t9223* \
               t9217*t9356*2.0E1-t9198*t9223*t9234*t9217*t9335*8.0-t9192*t9193*t9198*t9220*t9212*t9252*8.0+t9192* \
               t9193*t9198*t9212*t9234*t9217*3.2E1+t9192*t9193*t9198*t9220*t9217*t9335*8.0+a1p*c*t9185*t9232*t9226* \
               t9227*(2.0/3.0)+Aa*t9198*t9252*t9235*t9245*t9247*t9358*4.0-Aa*t9198*t9235*t9245*t9254*t9247*t9365* \
               2.0-Aa*t9198*t9217*t9235*t9245*t9247*(t9193*t9220*1.2E1+t9223*t9356*2.0E1-t9192*t9193*t9234*3.2E1) \
               *2.0-t9198*t9252*t9235*t9254*t9247*t9373*t9366*t9368*2.0+t9198*t9217*t9235*t9247*t9373*t9366*t9358* \
               t9368*2.0-t9198*1/(t9241*t9241*t9241)*t9217*t9235*t9254*t9247*t9374*t9366*2.0+t9198*t9217*t9235*t9254* \
               t9247*t9366*t9368*(b2a*c*t9324*(4.0/9.0)+b4a*t9180*t9325*(1.0E1/9.0)+b1a*c*t9225*t9324*(2.0/9.0)+b3a* \
               c*t9176*t9324*(2.0/3.0)-b1a*t9180*t9325*t9339*(1.0/3.6E1)+b3a*t9180*t9225*t9325*(1.0/1.2E1))+Aa*a1a* \
               c*t9185*t9198*t9252*t9235*t9245*t9254*(4.0/3.0)-Aa*a1a*c*t9185*t9198*t9217*t9235*t9245*t9358*(4.0/ \
               3.0)-Aa*a1a*c*t9198*t9217*t9235*t9245*t9254*t9324*(8.0/9.0)+t9198*1/(t9241*t9241*t9241*t9241)*t9217* \
               t9235*1/(t9244*t9244)*t9236*t9254*t9247*t9374*(1.0/2.0)+a1a*c*t9185*t9198*t9217*t9235*t9254*t9373* \
               t9366*t9368*(2.0/3.0))+rho_a[index]*(-t9388-t9397+t9581+t9583+t9577+t9198*t9292*(t9388+t9397+t9580+ \
               t9582+t9575-t9280*t9281*t9282*t9394-t9295*t9376*t9385*t9568*2.0-a1f*c*c0f*t9293*t9383*(8.0/9.0)-t9186* \
               t9280*t9386*t9395*t9396*(1.0/2.0)-a1p*c*t9281*t9282*t9265*t9287*(2.0/3.0)))+t9198*t9292*t9505*2.0+ \
               t9191*t9232*t9226*t9227*2.0-t9280*t9281*t9282*t9287*2.0-a1p*c*c0p*t9185*t9211*(4.0/3.0)+a1p*c*c0p* \
               t9265*t9289*(4.0/3.0)+t9198*t9220*t9212*t9223*t9252*2.0-t9198*t9212*t9223*t9234*t9217*8.0-t9198*t9220* \
               t9223*t9217*t9335*2.0+t9192*t9193*t9198*t9220*t9212*t9217*8.0+Aa*t9198*t9252*t9235*t9245*t9254*t9247* \
               4.0-Aa*t9198*t9217*t9235*t9245*t9247*t9358*4.0+t9198*t9217*t9235*t9254*t9247*t9373*t9366*t9368*2.0- \
               Aa*a1a*c*t9185*t9198*t9217*t9235*t9245*t9254*(4.0/3.0))+t9513*t9522*t9590*2.0+t9522*t9591*t9567*2.0- \
               rho_a[index]*t9513*t9522*(ccaa1*gamma_aa[index]*gcaa*t9498*t9531*(8.8E1/9.0)+ccaa2*t9492*t9493*t9540* \
               t9506*(3.04E2/9.0)-ccaa1*t9492*t9493*t9506*t9546*2.4E1+ccaa4*t9507*t9561*t9508*t9528*(1.12E3/9.0)- \
               ccaa2*t9492*t9541*t9506*t9562*t9554*(3.2E1/3.0)-ccaa4*t9551*t9560*t9507*t9543*t9508*(6.4E1/3.0)-ccaa2* \
               t9492*t9511*t9506*t9562*(gamma_aa[index]*gcaa*t9498*(1.76E2/9.0)+t9492*t9493*t9506*(3.04E2/9.0))-ccaa4* \
               t9560*t9507*t9508*t9509*(gamma_aa[index]*gcaa*t9498*(3.52E2/9.0)+t9492*t9493*t9506*(6.08E2/3.0)+t9507* \
               t9561*t9508*(1.12E3/9.0)+gamma_aa[index]*gcaa*t9492*t9506*t9545*2.88E2)+ccaa2*t9492*t9511*t9506*(t9554* \
               t9554)*1/(t9539*t9539*t9539)*2.0+ccaa4*(t9551*t9551)*t9507*t9508*t9509*1/(t9527*t9527*t9527)*2.0+ccaa3* \
               gamma_aa[index]*gcaa*t9492*t9506*t9536*t9545*7.2E1+ccaa1*gamma_aa[index]*gcaa*t9492*1/(t9530*t9530* \
               t9530)*t9506*t9545*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t9492*t9510*t9506*1/(t9535*t9535*t9535) \
               *(t9558*t9558)*2.0-ccaa3*gamma_aa[index]*gcaa*t9492*t9510*t9506*t9559*(gamma_aa[index]*gcaa*t9498* \
               (8.8E1/3.0)+t9492*t9493*t9506*(3.04E2/3.0)+gamma_aa[index]*gcaa*t9492*t9506*t9545*7.2E1)-ccaa3*gamma_aa[index]* \
               gcaa*t9492*t9506*t9542*t9558*t9559*1.6E1)+rho_a[index]*t9522*t9567*(-t9388-t9397+t9581+t9583+t9577+ \
               t9198*t9292*(t9388+t9397+t9580-t9581+t9582-t9583+t9575-t9577-t9295*t9376*t9385*t9568*2.0-a1f*c*c0f* \
               t9293*t9383*(8.0/9.0)))-rho_a[index]*t9522*t9590*t9591*2.0+gamma_aa[index]*t9401*t9513*t9515*t9517* \
               t9590*(1.0/4.0)+gamma_aa[index]*t9401*t9515*t9517*t9567*(-t9288+t9399+t9585)*(1.0/4.0);
        } else if (rho_a[index] > cutoff_) {
            double t13908 = 1/pow(rho_a[index],1.0/3.0);
            double t13909 = c*t13908;
            double t13910 = sqrt(t13909);
            double t13911 = b1f*t13910;
            double t13912 = pow(t13909,3.0/2.0);
            double t13913 = b3f*t13912;
            double t13914 = c*c;
            double t13915 = 1/pow(rho_a[index],2.0/3.0);
            double t13916 = b4f*t13914*t13915;
            double t13917 = b2f*c*t13908;
            double t13918 = t13911+t13913+t13916+t13917;
            double t13919 = 1/pow(rho_a[index],4.0/3.0);
            double t13920 = b1p*t13910;
            double t13921 = b3p*t13912;
            double t13922 = b4p*t13914*t13915;
            double t13923 = b2p*c*t13908;
            double t13924 = t13920+t13921+t13922+t13923;
            double t13925 = 1/pow(rho_a[index],5.0/3.0);
            double t13926 = 1/sqrt(t13909);
            double t13927 = 1/c0f;
            double t13928 = 1/t13918;
            double t13929 = t13927*t13928*(1.0/2.0);
            double t13930 = t13929+1.0;
            double t13931 = 1/c0p;
            double t13932 = 1/t13924;
            double t13933 = t13931*t13932*(1.0/2.0);
            double t13934 = t13933+1.0;
            double t13935 = a1p*c*t13908;
            double t13936 = t13935+1.0;
            double t13937 = 1/t13934;
            double t13938 = 1/(t13924*t13924);
            double t13939 = b4p*t13914*t13925*(2.0/3.0);
            double t13940 = b2p*c*t13919*(1.0/3.0);
            double t13941 = b1p*c*t13926*t13919*(1.0/6.0);
            double t13942 = b3p*c*t13910*t13919*(1.0/2.0);
            double t13943 = t13940+t13941+t13942+t13939;
            double t13944 = t13943*t13936*t13937*t13938;
            double t13945 = log(t13934);
            double t13946 = gamma_aa[index]*gamma_aa[index];
            double t13947 = gcaa*gcaa;
            double t13948 = t13946*t13946;
            double t13949 = t13947*t13947;
            double t13950 = 1/pow(rho_a[index],3.2E1/3.0);
            double t13951 = 1/pow(rho_a[index],8.0/3.0);
            double t13952 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t13953 = 1/pow(rho_a[index],1.6E1/3.0);
            double t13954 = pow(2.0,1.0/3.0);
            double t13955 = t13954*2.0;
            double t13956 = t13955-2.0;
            double t13957 = two_13*2.0;
            double t13958 = t13957-2.0;
            double t13959 = 1/t13958;
            double t13960 = log(t13930);
            double t13961 = a1f*c*t13908;
            double t13962 = t13961+1.0;
            double t13963 = tau_a[index]-1.0/1.0E20;
            double t13964 = ( (t13963 > 0.0) ?  1.0 : 0.0 ) ;
            double t13965 = 1/tau_a[index];
            double t13966 = tau_a[index]*2.0;
            double t13967 = 1/rho_a[index];
            double t14015 = gamma_aa[index]*t13967*(1.0/4.0);
            double t13968 = t13966-t14015;
            double t13969 = t13965*t13968*(1.0/2.0);
            double t13970 = t13969-1.0;
            double t13971 = t13970*t13964;
            double t13972 = t13971+1.0;
            double t13973 = gamma_aa[index]*gcaa*t13951*4.0;
            double t13974 = gamma_aa[index]*gcaa*t13952*t13946*t13947*4.0;
            double t13975 = t13953*t13946*t13947*6.0;
            double t13976 = t13950*t13948*t13949;
            double t13977 = t13973+t13974+t13975+t13976+1.0;
            double t13978 = 1/t13977;
            double t13979 = gamma_aa[index]*gcaa*t13951;
            double t13980 = t13979+1.0;
            double t13981 = 1/t13980;
            double t13982 = gamma_aa[index]*gcaa*t13951*3.0;
            double t13983 = gamma_aa[index]*gcaa*t13952*t13946*t13947;
            double t13984 = t13953*t13946*t13947*3.0;
            double t13985 = t13982+t13983+t13984+1.0;
            double t13986 = 1/t13985;
            double t13987 = gamma_aa[index]*gcaa*t13951*2.0;
            double t13988 = t13953*t13946*t13947;
            double t13989 = t13987+t13988+1.0;
            double t13990 = 1/t13989;
            double t13991 = 1/pow(rho_a[index],1.9E1/3.0);
            double t13992 = 1/pow(rho_a[index],1.1E1/3.0);
            double t13993 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t13994 = 1/pow(rho_a[index],3.5E1/3.0);
            double t13995 = pow(rho_a[index],2.0/3.0);
            double t13996 = pow(rho_a[index],5.0/3.0);
            double t13997 = C_k*t13965*t13996;
            double t13998 = t13997+1.0;
            double t13999 = t13997-1.0;
            double t14000 = 1/(t13998*t13998);
            double t14001 = t13999*t13999;
            double t14002 = t14001*t14001;
            double t14003 = t14002*t14002;
            double t14004 = 1/pow(t13998,1.1E1);
            double t14005 = 1/(t13998*t13998*t13998);
            double t14006 = 1/(t13998*t13998*t13998*t13998);
            double t14007 = 1/(t13998*t13998*t13998*t13998*t13998);
            double t14008 = 1/(t13998*t13998*t13998*t13998*t13998*t13998);
            double t14009 = 1/(t13998*t13998*t13998*t13998*t13998*t13998*t13998);
            double t14010 = 1/(t13998*t13998*t13998*t13998*t13998*t13998*t13998*t13998);
            double t14011 = 1/(t13998*t13998*t13998*t13998*t13998*t13998*t13998*t13998*t13998);
            double t14012 = 1/pow(t13998,1.0E1);
            double t14013 = c0f*t13960*t13962*2.0;
            double t14014 = c0p*t13936*t13945*2.0;
            double t14016 = 1/pow(rho_a[index],1.0E1);
            double t14017 = 1/pow(rho_a[index],2.2E1/3.0);
            double t14018 = 1/(t13980*t13980);
            double t14019 = gamma_aa[index]*gcaa*t13992*(3.2E1/3.0);
            double t14020 = gamma_aa[index]*gcaa*t13946*t13947*t13993*3.2E1;
            double t14021 = t13946*t13991*t13947*3.2E1;
            double t14022 = t13948*t13949*t13994*(3.2E1/3.0);
            double t14023 = t14020+t14021+t14022+t14019;
            double t14024 = gamma_aa[index]*gcaa*t13992*(1.6E1/3.0);
            double t14025 = t13946*t13991*t13947*(1.6E1/3.0);
            double t14026 = t14024+t14025;
            double t14027 = gamma_aa[index]*gcaa*t13992*8.0;
            double t14028 = gamma_aa[index]*gcaa*t13946*t13947*t13993*8.0;
            double t14029 = t13946*t13991*t13947*1.6E1;
            double t14030 = t14027+t14028+t14029;
            double t14031 = 1/(t13985*t13985);
            double t14032 = 1/pow(rho_a[index],1.4E1/3.0);
            double t14033 = 1/(t13977*t13977);
            double t14034 = 1/pow(rho_a[index],3.8E1/3.0);
            double t14035 = 1/(t13989*t13989);
            double t14036 = ccaa4*t13950*t13948*t13949*t13978;
            double t14037 = ccaa1*gamma_aa[index]*gcaa*t13951*t13981;
            double t14038 = ccaa3*gamma_aa[index]*gcaa*t13952*t13946*t13947*t13986;
            double t14039 = ccaa2*t13953*t13990*t13946*t13947;
            double t14040 = ccaa0+t14036+t14037+t14038+t14039;
            double t14041 = 1/t13930;
            double t14042 = b4f*t13914*t13925*(2.0/3.0);
            double t14043 = b2f*c*t13919*(1.0/3.0);
            double t14044 = b1f*c*t13926*t13919*(1.0/6.0);
            double t14045 = b3f*c*t13910*t13919*(1.0/2.0);
            double t14046 = t14042+t14043+t14044+t14045;
            double t14047 = 1/(t13918*t13918);
            double t14048 = 1/pow(rho_a[index],7.0/3.0);
            double t14049 = 1/pow(t13909,3.0/2.0);
            double t14050 = t14046*t14046;
            double t14051 = t13943*t13943;
            double t14052 = 1/(t13924*t13924*t13924);
            double t14053 = t13936*t13937*t14051*t14052*2.0;
            double t14054 = b4p*t13914*t13951*(1.0E1/9.0);
            double t14055 = b2p*c*t14048*(4.0/9.0);
            double t14056 = b3p*t13914*t13951*t13926*(1.0/1.2E1);
            double t14057 = b1p*c*t13926*t14048*(2.0/9.0);
            double t14058 = b3p*c*t13910*t14048*(2.0/3.0);
            double t14059 = t14054+t14055+t14056+t14057+t14058-b1p*t13914*t13951*t14049*(1.0/3.6E1);
            double t14060 = 1/(t13934*t13934);
            double t14061 = 1/(t13924*t13924*t13924*t13924);
            double t14062 = a1p*c*c0p*t13945*t14048*(8.0/9.0);
            double t14063 = a1f*c*c0f*t13960*t13919*(2.0/3.0);
            double t14064 = a1p*c*c0p*t13945*t13919*(2.0/3.0);
            double t14065 = ccaa4*t13948*t13949*t13994*t13978*(3.2E1/3.0);
            double t14066 = ccaa1*gamma_aa[index]*gcaa*t13981*t13992*(8.0/3.0);
            double t14067 = ccaa3*gamma_aa[index]*gcaa*t13946*t13947*t13993*t13986*8.0;
            double t14068 = ccaa2*t13990*t13946*t13991*t13947*(1.6E1/3.0);
            double t14105 = ccaa1*t13946*t13991*t13947*t14018*(8.0/3.0);
            double t14106 = ccaa3*gamma_aa[index]*gcaa*t13952*t13946*t13947*t14030*t14031;
            double t14107 = ccaa4*t13950*t13948*t13949*t14023*t14033;
            double t14108 = ccaa2*t13953*t13946*t13947*t14026*t14035;
            double t14069 = -t14105-t14106-t14107-t14108+t14065+t14066+t14067+t14068;
            double t14070 = X-1.0;
            double t14071 = 1/(k*k);
            double t14072 = 1/kp;
            double t14073 = 1/(rho_a[index]*rho_a[index]);
            double t14074 = rho_a[index]*2.0;
            double t14075 = 1/pow(t14074,2.0/3.0);
            double t14076 = gamma_aa[index]*mu_*t14071*t14072*t14073*t14075*(1.0/4.0);
            double t14077 = t14076+1.0;
            double t14078 = 1/t14077;
            double t14079 = kp-kp*t14078+1.0;
            double t14080 = C_k*C_k;
            double t14081 = pow(rho_a[index],4.0/3.0);
            double t14082 = 1/(tau_a[index]*tau_a[index]);
            double t14083 = 1/t13998;
            double t14084 = 1/pow(t13998,1.2E1);
            double t14085 = t13944+t14063-t14064-t13962*t14041*t14046*t14047;
            double t14086 = t13956*t13959*t14085;
            double t14087 = 1/(t14077*t14077);
            double t14088 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t14089 = 1/pow(t14074,5.0/3.0);
            double t14090 = a_1*t13999*t14083;
            double t14091 = a_10*t14001*t14003*t14012;
            double t14092 = a_11*t13999*t14001*t14003*t14004;
            double t14093 = a_2*t14000*t14001;
            double t14094 = a_3*t13999*t14001*t14005;
            double t14095 = a_4*t14002*t14006;
            double t14096 = a_5*t13999*t14002*t14007;
            double t14097 = a_6*t14001*t14002*t14008;
            double t14098 = a_7*t13999*t14001*t14002*t14009;
            double t14099 = a_8*t14010*t14003;
            double t14100 = a_9*t13999*t14011*t14003;
            double t14101 = t14100+t14090+t14091+t14092+t14093+t14094+t14095+t14096+t14097+t14098+t14099+1.0;
            double t14102 = t14013-t14014;
            double t14103 = t13956*t13959*t14102;
            double t14104 = t14103+t14014;
            double t14109 = gamma_aa[index]*mu_*t14071*t14072*t14075*t14088*(1.0/2.0);
            double t14110 = gamma_aa[index]*mu_*t14071*t14072*t14073*t14089*(1.0/3.0);
            double t14111 = t14110+t14109;
            double t14112 = C_k*a_1*t13965*t13995*t14083*(5.0/3.0);
            double t14113 = C_k*a_2*t13965*t13995*t13999*t14000*(1.0E1/3.0);
            double t14114 = C_k*a_10*t13965*t13995*t13999*t14003*t14012*(5.0E1/3.0);
            double t14115 = C_k*a_11*t13965*t13995*t14001*t14003*t14004*(5.5E1/3.0);
            double t14116 = C_k*a_3*t13965*t13995*t14001*t14005*5.0;
            double t14117 = C_k*a_4*t13965*t13995*t13999*t14001*t14006*(2.0E1/3.0);
            double t14118 = C_k*a_5*t13965*t13995*t14002*t14007*(2.5E1/3.0);
            double t14119 = C_k*a_6*t13965*t13995*t13999*t14002*t14008*1.0E1;
            double t14120 = C_k*a_7*t13965*t13995*t14001*t14002*t14009*(3.5E1/3.0);
            double t14121 = C_k*a_8*t13965*t13995*t13999*t14001*t14010*t14002*(4.0E1/3.0);
            double t14122 = C_k*a_9*t13965*t13995*t14011*t14003*1.5E1;
            double t14123 = t14120+t14112+t14121+t14113+t14122+t14114+t14115+t14116+t14117+t14118+t14119-C_k* \
               a_1*t13965*t13995*t13999*t14000*(5.0/3.0)-C_k*a_2*t13965*t13995*t14001*t14005*(1.0E1/3.0)-C_k*a_4* \
               t13965*t13995*t14002*t14007*(2.0E1/3.0)-C_k*a_8*t13965*t13995*t14011*t14003*(4.0E1/3.0)-C_k*a_10*t13965* \
               t13995*t14001*t14003*t14004*(5.0E1/3.0)-C_k*a_3*t13965*t13995*t13999*t14001*t14006*5.0-C_k*a_5*t13965* \
               t13995*t13999*t14002*t14008*(2.5E1/3.0)-C_k*a_6*t13965*t13995*t14001*t14002*t14009*1.0E1-C_k*a_9*t13965* \
               t13995*t13999*t14003*t14012*1.5E1-C_k*a_11*t13965*t13995*t13999*t14001*t14003*t14084*(5.5E1/3.0)-C_k* \
               a_7*t13965*t13995*t13999*t14001*t14010*t14002*(3.5E1/3.0);
            v_rho_a_rho_a_[index] = t13972*t14040*(-t13944+t14064+t13956*t13959*(t13944+t14063-t13962*t14041* \
               t14046*t14047-a1p*c*c0p*t13945*t13919*(2.0/3.0)))*2.0-t14123*t14070*t14079*2.0+t13972*t14069*(t14014+ \
               t13956*t13959*(t14013-c0p*t13936*t13945*2.0))*2.0-rho_a[index]*t13972*t14104*(ccaa1*gamma_aa[index]* \
               gcaa*t13981*t14032*(8.8E1/9.0)+ccaa2*t13990*t13946*t13947*t14017*(3.04E2/9.0)+ccaa4*t13948*t13949* \
               t13978*t14034*(1.12E3/9.0)-ccaa1*t13946*t13947*t14017*t14018*2.4E1-ccaa2*t13946*t13991*t13947*t14026* \
               t14035*(3.2E1/3.0)-ccaa4*t13948*t13949*t13994*t14023*t14033*(6.4E1/3.0)-ccaa2*t13953*t13946*t13947* \
               t14035*(gamma_aa[index]*gcaa*t14032*(1.76E2/9.0)+t13946*t13947*t14017*(3.04E2/9.0))-ccaa4*t13950*t13948* \
               t13949*t14033*(gamma_aa[index]*gcaa*t14032*(3.52E2/9.0)+t13946*t13947*t14017*(6.08E2/3.0)+t13948*t13949* \
               t14034*(1.12E3/9.0)+gamma_aa[index]*gcaa*t13946*t13947*t14016*2.88E2)+ccaa4*t13950*t13948*t13949*1/ \
               (t13977*t13977*t13977)*(t14023*t14023)*2.0+ccaa2*t13953*t13946*t13947*1/(t13989*t13989*t13989)*(t14026* \
               t14026)*2.0+ccaa3*gamma_aa[index]*gcaa*t13946*t13947*t13986*t14016*7.2E1+ccaa1*gamma_aa[index]*gcaa* \
               1/(t13980*t13980*t13980)*t13946*t13947*t14016*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t13952*t13946* \
               t13947*1/(t13985*t13985*t13985)*(t14030*t14030)*2.0-ccaa3*gamma_aa[index]*gcaa*t13952*t13946*t13947* \
               t14031*(gamma_aa[index]*gcaa*t14032*(8.8E1/3.0)+t13946*t13947*t14017*(3.04E2/3.0)+gamma_aa[index]* \
               gcaa*t13946*t13947*t14016*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t13946*t13947*t13993*t14030*t14031*1.6E1) \
               -rho_a[index]*t14070*t14079*(C_k*a_1*t13908*t13965*t14083*(1.0E1/9.0)-a_1*t14000*t14080*t14081*t14082* \
               (5.0E1/9.0)+a_2*t14000*t14080*t14081*t14082*(5.0E1/9.0)+a_1*t13999*t14005*t14080*t14081*t14082*(5.0E1/ \
               9.0)-a_2*t13999*t14005*t14080*t14081*t14082*(2.0E2/9.0)+a_10*t14003*t14012*t14080*t14081*t14082*2.5E2+ \
               a_2*t14001*t14006*t14080*t14081*t14082*(5.0E1/3.0)+a_3*t13999*t14005*t14080*t14081*t14082*(5.0E1/3.0) \
               -a_3*t14001*t14006*t14080*t14081*t14082*5.0E1+a_4*t14001*t14006*t14080*t14081*t14082*(1.0E2/3.0)+a_4* \
               t14002*t14008*t14080*t14081*t14082*(5.0E2/9.0)-a_5*t14002*t14008*t14080*t14081*t14082*(1.25E3/9.0) \
               +a_6*t14002*t14008*t14080*t14081*t14082*(2.5E2/3.0)+a_8*t14003*t14012*t14080*t14081*t14082*2.0E2-a_9* \
               t14003*t14012*t14080*t14081*t14082*4.5E2-C_k*a_1*t13908*t13965*t13999*t14000*(1.0E1/9.0)+C_k*a_2*t13908* \
               t13965*t13999*t14000*(2.0E1/9.0)-C_k*a_2*t13908*t13965*t14001*t14005*(2.0E1/9.0)+C_k*a_3*t13908*t13965* \
               t14001*t14005*(1.0E1/3.0)-C_k*a_4*t13908*t13965*t14002*t14007*(4.0E1/9.0)+C_k*a_5*t13908*t13965*t14002* \
               t14007*(5.0E1/9.0)-C_k*a_8*t13908*t13965*t14011*t14003*(8.0E1/9.0)+C_k*a_9*t13908*t13965*t14011*t14003* \
               1.0E1+C_k*a_10*t13908*t13965*t13999*t14003*t14012*(1.0E2/9.0)-C_k*a_10*t13908*t13965*t14001*t14003* \
               t14004*(1.0E2/9.0)+C_k*a_11*t13908*t13965*t14001*t14003*t14004*(1.1E2/9.0)-C_k*a_3*t13908*t13965*t13999* \
               t14001*t14006*(1.0E1/3.0)+C_k*a_4*t13908*t13965*t13999*t14001*t14006*(4.0E1/9.0)-C_k*a_5*t13908*t13965* \
               t13999*t14002*t14008*(5.0E1/9.0)+C_k*a_6*t13908*t13965*t13999*t14002*t14008*(2.0E1/3.0)-C_k*a_6*t13908* \
               t13965*t14001*t14002*t14009*(2.0E1/3.0)+C_k*a_7*t13908*t13965*t14001*t14002*t14009*(7.0E1/9.0)-C_k* \
               a_9*t13908*t13965*t13999*t14003*t14012*1.0E1-a_10*t13999*t14003*t14004*t14080*t14081*t14082*(5.0E3/ \
               9.0)+a_11*t13999*t14003*t14004*t14080*t14081*t14082*(2.75E3/9.0)+a_10*t14001*t14003*t14080*t14081* \
               t14082*t14084*(2.75E3/9.0)-a_11*t14001*t14003*t14080*t14081*t14082*t14084*(6.05E3/9.0)+a_3*t13999* \
               t14001*t14007*t14080*t14081*t14082*(1.0E2/3.0)-a_4*t13999*t14001*t14007*t14080*t14081*t14082*(8.0E2/ \
               9.0)+a_5*t13999*t14001*t14007*t14080*t14081*t14082*(5.0E2/9.0)+a_5*t13999*t14002*t14080*t14009*t14081* \
               t14082*(2.5E2/3.0)-a_6*t13999*t14002*t14080*t14009*t14081*t14082*2.0E2+a_6*t14001*t14010*t14002*t14080* \
               t14081*t14082*(3.5E2/3.0)+a_7*t13999*t14002*t14080*t14009*t14081*t14082*(3.5E2/3.0)-a_7*t14001*t14010* \
               t14002*t14080*t14081*t14082*(2.45E3/9.0)+a_8*t14001*t14010*t14002*t14080*t14081*t14082*(1.4E3/9.0) \
               +a_9*t13999*t14003*t14004*t14080*t14081*t14082*2.5E2+a_11*1/pow(t13998,1.3E1)*t13999*t14001*t14003* \
               t14080*t14081*t14082*(1.1E3/3.0)-C_k*a_11*t13908*t13965*t13999*t14001*t14003*t14084*(1.1E2/9.0)-C_k* \
               a_7*t13908*t13965*t13999*t14001*t14010*t14002*(7.0E1/9.0)+C_k*a_8*t13908*t13965*t13999*t14001*t14010* \
               t14002*(8.0E1/9.0)+a_7*t13999*t14001*t14002*t14011*t14080*t14081*t14082*(1.4E3/9.0)-a_8*t13999*t14001* \
               t14002*t14011*t14080*t14081*t14082*(3.2E3/9.0)+a_9*t13999*t14001*t14002*t14011*t14080*t14081*t14082* \
               2.0E2)-rho_a[index]*t13972*t14069*(-t13944+t14064+t14086)*2.0+rho_a[index]*t13972*t14040*(-t14053- \
               t14062+t13956*t13959*(t14053+t14062-t13936*t13937*t13938*t14059-t13962*1/(t13918*t13918*t13918)*t14041* \
               t14050*2.0+t13962*t14041*t14047*(b2f*c*t14048*(4.0/9.0)+b4f*t13914*t13951*(1.0E1/9.0)+b1f*c*t13926* \
               t14048*(2.0/9.0)+b3f*c*t13910*t14048*(2.0/3.0)-b1f*t13914*t13951*t14049*(1.0/3.6E1)+b3f*t13914*t13951* \
               t13926*(1.0/1.2E1))+1/(t13930*t13930)*t13962*1/(t13918*t13918*t13918*t13918)*t13927*t14050*(1.0/2.0) \
               -a1f*c*c0f*t13960*t14048*(8.0/9.0)-t13931*t13936*t14051*t14060*t14061*(1.0/2.0)+a1f*c*t13919*t14041* \
               t14046*t14047*(2.0/3.0)-a1p*c*t13943*t13919*t13937*t13938*(2.0/3.0))+t13936*t13937*t13938*t14059+t13931* \
               t13936*t14051*t14060*t14061*(1.0/2.0)+a1p*c*t13943*t13919*t13937*t13938*(2.0/3.0))+kp*t14101*t14111* \
               t14070*t14087*2.0+gamma_aa[index]*t13964*t13965*t13967*t14104*t14069*(1.0/4.0)+kp*rho_a[index]*t14111* \
               t14123*t14070*t14087*2.0+gamma_aa[index]*t13964*t13965*t13967*t14040*(-t13944+t14064+t14086)*(1.0/ \
               4.0)-kp*rho_a[index]*t14101*t14070*t14087*(gamma_aa[index]*mu_*t14071*t14072*t14088*t14089*(4.0/3.0) \
               +gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t14071*t14072*t14075* \
               (3.0/2.0)+gamma_aa[index]*mu_*t14071*t14072*t14073*1/pow(t14074,8.0/3.0)*(1.0E1/9.0))+kp*rho_a[index]* \
               t14101*(t14111*t14111)*t14070*1/(t14077*t14077*t14077)*2.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t9597 = rho_a[index]+rho_b[index];
            double t9598 = 1/pow(t9597,1.0/3.0);
            double t9599 = c*t9598;
            double t9600 = sqrt(t9599);
            double t9601 = b1p*t9600;
            double t9602 = pow(t9599,3.0/2.0);
            double t9603 = b3p*t9602;
            double t9604 = c*c;
            double t9605 = 1/pow(t9597,2.0/3.0);
            double t9606 = b4p*t9604*t9605;
            double t9607 = b2p*c*t9598;
            double t9608 = t9601+t9603+t9606+t9607;
            double t9609 = 1/pow(t9597,4.0/3.0);
            double t9610 = 1/c0p;
            double t9611 = 1/t9608;
            double t9612 = t9610*t9611*(1.0/2.0);
            double t9613 = t9612+1.0;
            double t9614 = a1p*c*t9598;
            double t9615 = t9614+1.0;
            double t9616 = rho_a[index]-rho_b[index];
            double t9617 = t9616*t9616;
            double t9618 = 1/t9597;
            double t9619 = t9616*t9618;
            double t9620 = two_13*2.0;
            double t9621 = t9620-2.0;
            double t9622 = 1/t9621;
            double t9623 = 1/c0f;
            double t9624 = b1f*t9600;
            double t9625 = b3f*t9602;
            double t9626 = b4f*t9604*t9605;
            double t9627 = b2f*c*t9598;
            double t9628 = t9624+t9625+t9626+t9627;
            double t9629 = 1/t9628;
            double t9630 = t9623*t9629*(1.0/2.0);
            double t9631 = t9630+1.0;
            double t9632 = log(t9631);
            double t9633 = a1f*c*t9598;
            double t9634 = t9633+1.0;
            double t9635 = log(t9613);
            double t9645 = c0f*t9632*t9634*2.0;
            double t9646 = c0p*t9615*t9635*2.0;
            double t9636 = t9645-t9646;
            double t9637 = t9619+1.0;
            double t9638 = pow(t9637,4.0/3.0);
            double t9639 = -t9619+1.0;
            double t9640 = pow(t9639,4.0/3.0);
            double t9641 = t9640+t9638-2.0;
            double t9642 = 1/(t9597*t9597);
            double t9673 = t9642*t9616;
            double t9643 = t9618-t9673;
            double t9644 = 1/(t9597*t9597*t9597*t9597);
            double t9647 = t9617*t9617;
            double t9648 = 1/pow(t9597,5.0/3.0);
            double t9649 = 1/sqrt(t9599);
            double t9650 = 1/t9613;
            double t9651 = 1/(t9608*t9608);
            double t9652 = b4p*t9604*t9648*(2.0/3.0);
            double t9653 = b2p*c*t9609*(1.0/3.0);
            double t9654 = b1p*c*t9609*t9649*(1.0/6.0);
            double t9655 = b3p*c*t9600*t9609*(1.0/2.0);
            double t9656 = t9652+t9653+t9654+t9655;
            double t9657 = t9650*t9615*t9651*t9656;
            double t9658 = 1/(t9597*t9597*t9597*t9597*t9597);
            double t9659 = 1/d2fz0;
            double t9660 = 1/Aa;
            double t9661 = b1a*t9600;
            double t9662 = b3a*t9602;
            double t9663 = b4a*t9604*t9605;
            double t9664 = b2a*c*t9598;
            double t9665 = t9661+t9662+t9663+t9664;
            double t9666 = 1/t9665;
            double t9667 = t9660*t9666*(1.0/2.0);
            double t9668 = t9667+1.0;
            double t9669 = log(t9668);
            double t9670 = a1a*c*t9598;
            double t9671 = t9670+1.0;
            double t9672 = pow(t9637,1.0/3.0);
            double t9674 = t9643*t9672*(4.0/3.0);
            double t9675 = pow(t9639,1.0/3.0);
            double t9819 = t9643*t9675*(4.0/3.0);
            double t9676 = t9674-t9819;
            double t9677 = t9644*t9647;
            double t9678 = t9677-1.0;
            double t9679 = 1/pow(rho_a[index],1.0/3.0);
            double t9680 = c*t9679;
            double t9681 = sqrt(t9680);
            double t9682 = b1f*t9681;
            double t9683 = pow(t9680,3.0/2.0);
            double t9684 = b3f*t9683;
            double t9685 = 1/pow(rho_a[index],2.0/3.0);
            double t9686 = b4f*t9604*t9685;
            double t9687 = b2f*c*t9679;
            double t9688 = t9682+t9684+t9686+t9687;
            double t9689 = 1/pow(rho_a[index],4.0/3.0);
            double t9690 = b1p*t9681;
            double t9691 = b3p*t9683;
            double t9692 = b4p*t9604*t9685;
            double t9693 = b2p*c*t9679;
            double t9694 = t9690+t9691+t9692+t9693;
            double t9695 = 1/pow(rho_a[index],5.0/3.0);
            double t9696 = 1/sqrt(t9680);
            double t9697 = 1/t9688;
            double t9698 = t9623*t9697*(1.0/2.0);
            double t9699 = t9698+1.0;
            double t9700 = 1/t9694;
            double t9701 = t9610*t9700*(1.0/2.0);
            double t9702 = t9701+1.0;
            double t9703 = a1p*c*t9679;
            double t9704 = t9703+1.0;
            double t9705 = 1/t9702;
            double t9706 = 1/(t9694*t9694);
            double t9707 = b4p*t9604*t9695*(2.0/3.0);
            double t9708 = b2p*c*t9689*(1.0/3.0);
            double t9709 = b1p*c*t9696*t9689*(1.0/6.0);
            double t9710 = b3p*c*t9681*t9689*(1.0/2.0);
            double t9711 = t9710+t9707+t9708+t9709;
            double t9712 = t9711*t9704*t9705*t9706;
            double t9713 = log(t9702);
            double t9714 = pow(2.0,1.0/3.0);
            double t9715 = t9714*2.0;
            double t9716 = t9715-2.0;
            double t9717 = log(t9699);
            double t9718 = a1f*c*t9679;
            double t9719 = t9718+1.0;
            double t9720 = gcab*gcab;
            double t9724 = 1/pow(rho_a[index],8.0/3.0);
            double t9725 = gamma_aa[index]*t9724*(1.0/2.0);
            double t9726 = 1/pow(rho_b[index],8.0/3.0);
            double t9727 = gamma_bb[index]*t9726*(1.0/2.0);
            double t9721 = t9725+t9727;
            double t9722 = t9721*t9721;
            double t9723 = 1/pow(rho_b[index],1.1E1/3.0);
            double t9728 = t9720*t9720;
            double t9729 = t9722*t9722;
            double t9730 = t9720*t9722*6.0;
            double t9731 = gcab*t9720*t9721*t9722*4.0;
            double t9732 = t9728*t9729;
            double t9733 = gcab*t9721*4.0;
            double t9734 = t9730+t9731+t9732+t9733+1.0;
            double t9735 = gcab*t9721;
            double t9736 = t9735+1.0;
            double t9737 = t9720*t9722;
            double t9738 = gcab*t9721*2.0;
            double t9739 = t9737+t9738+1.0;
            double t9740 = t9720*t9722*3.0;
            double t9741 = gcab*t9720*t9721*t9722;
            double t9742 = gcab*t9721*3.0;
            double t9743 = t9740+t9741+t9742+1.0;
            double t9744 = t9622*t9641*t9616*t9617*t9644*t9636*4.0;
            double t9745 = t9618+t9673;
            double t9746 = 1/t9631;
            double t9747 = 1/(t9628*t9628);
            double t9748 = b4f*t9604*t9648*(2.0/3.0);
            double t9749 = b2f*c*t9609*(1.0/3.0);
            double t9750 = b1f*c*t9609*t9649*(1.0/6.0);
            double t9751 = b3f*c*t9600*t9609*(1.0/2.0);
            double t9752 = t9750+t9751+t9748+t9749;
            double t9753 = a1f*c*c0f*t9632*t9609*(2.0/3.0);
            double t9754 = t9647*t9658*4.0;
            double t9755 = t9672*t9745*(4.0/3.0);
            double t9818 = t9675*t9745*(4.0/3.0);
            double t9756 = t9755-t9818;
            double t9757 = 1/t9668;
            double t9758 = 1/(t9665*t9665);
            double t9759 = b4a*t9604*t9648*(2.0/3.0);
            double t9760 = b2a*c*t9609*(1.0/3.0);
            double t9761 = b1a*c*t9609*t9649*(1.0/6.0);
            double t9762 = b3a*c*t9600*t9609*(1.0/2.0);
            double t9763 = t9760+t9761+t9762+t9759;
            double t9764 = t9622*t9641*t9671*t9659*t9678*t9763*t9757*t9758;
            double t9765 = 1/pow(rho_b[index],1.0/3.0);
            double t9766 = c*t9765;
            double t9767 = sqrt(t9766);
            double t9768 = b1f*t9767;
            double t9769 = pow(t9766,3.0/2.0);
            double t9770 = b3f*t9769;
            double t9771 = 1/pow(rho_b[index],2.0/3.0);
            double t9772 = b4f*t9604*t9771;
            double t9773 = b2f*c*t9765;
            double t9774 = t9770+t9772+t9773+t9768;
            double t9775 = 1/pow(rho_b[index],4.0/3.0);
            double t9776 = b1p*t9767;
            double t9777 = b3p*t9769;
            double t9778 = b4p*t9604*t9771;
            double t9779 = b2p*c*t9765;
            double t9780 = t9776+t9777+t9778+t9779;
            double t9781 = 1/pow(rho_b[index],5.0/3.0);
            double t9782 = 1/sqrt(t9766);
            double t9783 = 1/t9774;
            double t9784 = t9623*t9783*(1.0/2.0);
            double t9785 = t9784+1.0;
            double t9786 = 1/t9780;
            double t9787 = t9610*t9786*(1.0/2.0);
            double t9788 = t9787+1.0;
            double t9789 = a1p*c*t9765;
            double t9790 = t9789+1.0;
            double t9791 = 1/t9788;
            double t9792 = 1/(t9780*t9780);
            double t9793 = b4p*t9604*t9781*(2.0/3.0);
            double t9794 = b2p*c*t9775*(1.0/3.0);
            double t9795 = b1p*c*t9782*t9775*(1.0/6.0);
            double t9796 = b3p*c*t9775*t9767*(1.0/2.0);
            double t9797 = t9793+t9794+t9795+t9796;
            double t9798 = t9790*t9791*t9792*t9797;
            double t9799 = log(t9788);
            double t9800 = log(t9785);
            double t9801 = a1f*c*t9765;
            double t9802 = t9801+1.0;
            double t9803 = t9622*t9641*t9644*t9636*t9647;
            double t9804 = Aa*t9622*t9641*t9671*t9659*t9669*t9678*2.0;
            double t9805 = 1/pow(rho_a[index],1.1E1/3.0);
            double t9806 = 1/(t9743*t9743);
            double t9807 = 1/t9736;
            double t9808 = 1/(t9734*t9734);
            double t9809 = 1/(t9739*t9739);
            double t9810 = 1/t9734;
            double t9811 = 1/(t9736*t9736);
            double t9812 = 1/t9739;
            double t9813 = 1/t9743;
            double t9815 = a1p*c*c0p*t9635*t9609*(2.0/3.0);
            double t9820 = t9634*t9752*t9746*t9747;
            double t9814 = t9657+t9753-t9820-t9815;
            double t9816 = 1/pow(t9597,7.0/3.0);
            double t9817 = 1/pow(t9597,8.0/3.0);
            double t9821 = t9656*t9656;
            double t9822 = 1/pow(t9599,3.0/2.0);
            double t9823 = b4p*t9604*t9817*(1.0E1/9.0);
            double t9824 = b2p*c*t9816*(4.0/9.0);
            double t9825 = b1p*c*t9649*t9816*(2.0/9.0);
            double t9826 = b3p*c*t9600*t9816*(2.0/3.0);
            double t9827 = b3p*t9604*t9649*t9817*(1.0/1.2E1);
            double t9828 = t9823+t9824+t9825+t9826+t9827-b1p*t9604*t9822*t9817*(1.0/3.6E1);
            double t9829 = t9650*t9615*t9651*t9828;
            double t9830 = 1/(t9608*t9608*t9608);
            double t9831 = t9752*t9752;
            double t9832 = 1/(t9613*t9613);
            double t9833 = 1/(t9608*t9608*t9608*t9608);
            double t9834 = t9610*t9615*t9821*t9832*t9833*(1.0/2.0);
            double t9835 = 1/(t9597*t9597*t9597);
            double t9836 = a1p*c*t9650*t9651*t9609*t9656*(2.0/3.0);
            double t9837 = 1/(t9597*t9597*t9597*t9597*t9597*t9597);
            double t9838 = t9616*t9617*t9644*4.0;
            double t9839 = t9754+t9838;
            double t9840 = t9616*t9675*t9835*(8.0/3.0);
            double t9841 = 1/pow(t9637,2.0/3.0);
            double t9842 = t9643*t9745*t9841*(4.0/9.0);
            double t9843 = 1/pow(t9639,2.0/3.0);
            double t9844 = t9643*t9745*t9843*(4.0/9.0);
            double t9845 = t9840+t9842+t9844-t9616*t9672*t9835*(8.0/3.0);
            double t9846 = t9763*t9763;
            double t9847 = t9754-t9838;
            double t9848 = t9622*t9644*t9636*t9647*t9756;
            double t9849 = t9622*t9644*t9636*t9647*t9676;
            double t9850 = Aa*t9622*t9641*t9671*t9659*t9669*t9839*2.0;
            double t9851 = Aa*t9622*t9671*t9659*t9669*t9678*t9756*2.0;
            double t9852 = Aa*t9622*t9671*t9676*t9659*t9669*t9678*2.0;
            double t9853 = c0f*t9717*t9719*2.0;
            double t9855 = c0p*t9704*t9713*2.0;
            double t9854 = t9853-t9855;
            double t9856 = c0f*t9800*t9802*2.0;
            double t9858 = c0p*t9790*t9799*2.0;
            double t9857 = t9856-t9858;
            double t9859 = gamma_aa[index]*gcab*t9805*(8.0/3.0);
            double t9860 = gamma_aa[index]*t9720*t9721*t9805*(8.0/3.0);
            double t9861 = t9860+t9859;
            double t9862 = gamma_bb[index]*gcab*t9723*(8.0/3.0);
            double t9863 = gamma_bb[index]*t9720*t9721*t9723*(8.0/3.0);
            double t9864 = t9862+t9863;
            double t9865 = gamma_aa[index]*gcab*t9805*(1.6E1/3.0);
            double t9866 = gamma_aa[index]*gcab*t9720*t9722*t9805*1.6E1;
            double t9867 = gamma_aa[index]*t9721*t9722*t9728*t9805*(1.6E1/3.0);
            double t9868 = gamma_aa[index]*t9720*t9721*t9805*1.6E1;
            double t9869 = t9865+t9866+t9867+t9868;
            double t9870 = gamma_bb[index]*gcab*t9723*(1.6E1/3.0);
            double t9871 = gamma_bb[index]*gcab*t9720*t9722*t9723*1.6E1;
            double t9872 = gamma_bb[index]*t9721*t9722*t9723*t9728*(1.6E1/3.0);
            double t9873 = gamma_bb[index]*t9720*t9721*t9723*1.6E1;
            double t9874 = t9870+t9871+t9872+t9873;
            double t9875 = gamma_aa[index]*gcab*t9805*4.0;
            double t9876 = gamma_aa[index]*gcab*t9720*t9722*t9805*4.0;
            double t9877 = gamma_aa[index]*t9720*t9721*t9805*8.0;
            double t9878 = t9875+t9876+t9877;
            double t9879 = gamma_bb[index]*gcab*t9723*4.0;
            double t9880 = gamma_bb[index]*gcab*t9720*t9722*t9723*4.0;
            double t9881 = gamma_bb[index]*t9720*t9721*t9723*8.0;
            double t9882 = t9880+t9881+t9879;
            v_rho_a_rho_b_[index] = (t9646+t9803+t9804+rho_a[index]*(-t9712+t9622*t9716*(t9712-(1/(t9688*t9688) \
               *t9719*(b2f*c*t9689*(1.0/3.0)+b4f*t9604*t9695*(2.0/3.0)+b1f*c*t9696*t9689*(1.0/6.0)+b3f*c*t9681*t9689* \
               (1.0/2.0)))/t9699+a1f*c*c0f*t9689*t9717*(2.0/3.0)-a1p*c*c0p*t9689*t9713*(2.0/3.0))+a1p*c*c0p*t9689* \
               t9713*(2.0/3.0))+t9597*(t9657+t9744+t9764+t9852+t9849-a1p*c*c0p*t9635*t9609*(2.0/3.0)-t9622*t9641* \
               t9636*t9647*t9658*4.0-t9622*t9641*t9644*t9647*t9814-Aa*t9622*t9641*t9671*t9659*t9669*(t9754-t9616* \
               t9617*t9644*4.0)*2.0-Aa*a1a*c*t9622*t9641*t9609*t9659*t9669*t9678*(2.0/3.0))-c0p*t9704*t9713*2.0-t9622* \
               t9716*t9854)*(ccab1*gamma_bb[index]*gcab*t9723*t9807*(4.0/3.0)-ccab2*t9720*t9722*t9809*t9864-ccab4* \
               t9728*t9729*t9808*t9874-ccab1*gamma_bb[index]*t9720*t9721*t9723*t9811*(4.0/3.0)+ccab2*gamma_bb[index]* \
               t9720*t9721*t9723*t9812*(8.0/3.0)+ccab3*gamma_bb[index]*gcab*t9720*t9722*t9723*t9813*4.0+ccab4*gamma_bb[index]* \
               t9721*t9722*t9723*t9728*t9810*(1.6E1/3.0)-ccab3*gcab*t9720*t9721*t9722*t9806*t9882)+(ccab0+ccab1*gcab* \
               t9721*t9807+ccab2*t9720*t9722*t9812+ccab4*t9728*t9729*t9810+ccab3*gcab*t9720*t9721*t9722*t9813)*(t9850+ \
               t9851-t9852+t9848-t9849+t9597*(t9834+t9836+t9829-t9650*t9615*t9821*t9830*2.0+t9622*t9644*t9647*t9676* \
               (t9657+t9753-t9820-t9815)-a1p*c*c0p*t9635*t9816*(8.0/9.0)-t9622*t9641*t9644*t9647*(t9834+t9836+t9829- \
               t9650*t9615*t9821*t9830*2.0+t9634*1/(t9628*t9628*t9628)*t9746*t9831*2.0-t9634*t9746*t9747*(b2f*c*t9816* \
               (4.0/9.0)+b4f*t9604*t9817*(1.0E1/9.0)+b1f*c*t9649*t9816*(2.0/9.0)+b3f*c*t9600*t9816*(2.0/3.0)-b1f* \
               t9604*t9822*t9817*(1.0/3.6E1)+b3f*t9604*t9649*t9817*(1.0/1.2E1))-1/(t9631*t9631)*t9623*t9634*1/(t9628* \
               t9628*t9628*t9628)*t9831*(1.0/2.0)+a1f*c*c0f*t9632*t9816*(8.0/9.0)-a1p*c*c0p*t9635*t9816*(8.0/9.0) \
               -a1f*c*t9609*t9752*t9746*t9747*(2.0/3.0))+t9622*t9641*t9617*t9644*t9636*1.2E1+t9622*t9636*t9647*t9658* \
               t9676*4.0-t9622*t9636*t9647*t9658*t9756*4.0-t9622*t9641*t9647*t9658*t9814*8.0-t9622*t9641*t9636*t9647* \
               t9837*2.0E1+t9622*t9644*t9636*t9647*t9845-t9622*t9644*t9647*t9756*t9814+t9622*t9616*t9617*t9644*t9636* \
               t9676*4.0+t9622*t9616*t9617*t9644*t9636*t9756*4.0+Aa*t9622*t9671*t9659*t9669*t9678*t9845*2.0+Aa*t9622* \
               t9671*t9676*t9659*t9669*t9839*2.0-Aa*t9622*t9671*t9659*t9669*t9756*t9847*2.0+Aa*t9622*t9641*t9671* \
               t9659*t9669*(t9617*t9644*1.2E1-t9647*t9837*2.0E1)*2.0-t9622*t9671*t9676*t9659*t9678*t9763*t9757*t9758+ \
               t9622*t9671*t9659*t9678*t9763*t9756*t9757*t9758+t9622*t9641*t9671*t9659*t9763*t9757*t9758*t9847+t9622* \
               t9641*t9671*t9659*t9763*t9757*t9758*t9839-t9622*t9641*t9671*1/(t9665*t9665*t9665)*t9659*t9678*t9757* \
               t9846*2.0+t9622*t9641*t9671*t9659*t9678*t9757*t9758*(b2a*c*t9816*(4.0/9.0)+b4a*t9604*t9817*(1.0E1/ \
               9.0)+b1a*c*t9649*t9816*(2.0/9.0)+b3a*c*t9600*t9816*(2.0/3.0)-b1a*t9604*t9822*t9817*(1.0/3.6E1)+b3a* \
               t9604*t9649*t9817*(1.0/1.2E1))+Aa*a1a*c*t9622*t9609*t9676*t9659*t9669*t9678*(2.0/3.0)-Aa*a1a*c*t9622* \
               t9609*t9659*t9669*t9678*t9756*(2.0/3.0)-Aa*a1a*c*t9622*t9641*t9609*t9659*t9669*t9847*(2.0/3.0)-Aa* \
               a1a*c*t9622*t9641*t9609*t9659*t9669*t9839*(2.0/3.0)-Aa*a1a*c*t9622*t9641*t9659*t9669*t9678*t9816*(8.0/ \
               9.0)+t9622*t9641*t9660*t9671*1/(t9665*t9665*t9665*t9665)*t9659*1/(t9668*t9668)*t9678*t9846*(1.0/2.0) \
               +a1a*c*t9622*t9641*t9609*t9659*t9678*t9763*t9757*t9758*(2.0/3.0))-t9650*t9615*t9651*t9656*2.0+t9622* \
               t9641*t9644*t9647*(t9657+t9753-t9820-t9815)*2.0+a1p*c*c0p*t9635*t9609*(4.0/3.0)+t9622*t9641*t9636* \
               t9647*t9658*8.0+Aa*t9622*t9641*t9671*t9659*t9669*(t9754-t9838)*2.0-t9622*t9641*t9671*t9659*t9678*t9763* \
               t9757*t9758*2.0+Aa*a1a*c*t9622*t9641*t9609*t9659*t9669*t9678*(4.0/3.0))-(rho_a[index]*(t9855+t9622* \
               t9716*t9854)+rho_b[index]*(t9858+t9622*t9716*t9857)-t9597*(t9646+t9803+t9804))*(ccab4*t9728*t9729* \
               t9808*(gamma_aa[index]*gamma_bb[index]*t9720*t9723*t9805*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]* \
               t9722*t9723*t9728*t9805*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t9720*t9721*t9723*t9805*(1.28E2/ \
               3.0))-ccab2*t9720*t9722*1/(t9739*t9739*t9739)*t9861*t9864*2.0-ccab4*1/(t9734*t9734*t9734)*t9728*t9729* \
               t9874*t9869*2.0+ccab3*gcab*t9720*t9721*t9722*t9806*(gamma_aa[index]*gamma_bb[index]*t9720*t9723*t9805* \
               (3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t9720*t9721*t9723*t9805*(3.2E1/3.0))+ccab1*gamma_aa[index]* \
               gamma_bb[index]*t9720*t9723*t9811*t9805*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t9720*t9723* \
               t9812*t9805*(3.2E1/9.0)+ccab2*gamma_bb[index]*t9720*t9721*t9723*t9861*t9809*(8.0/3.0)+ccab2*gamma_aa[index]* \
               t9720*t9721*t9805*t9809*t9864*(8.0/3.0)-ccab3*gcab*t9720*t9721*t9722*1/(t9743*t9743*t9743)*t9882*t9878* \
               2.0-ccab4*gamma_aa[index]*gamma_bb[index]*t9722*t9723*t9728*t9810*t9805*(6.4E1/3.0)+ccab2*gamma_aa[index]* \
               gamma_bb[index]*t9722*t9723*t9728*t9805*t9809*(3.2E1/9.0)+ccab3*gamma_bb[index]*gcab*t9720*t9722*t9723* \
               t9806*t9878*4.0+ccab3*gamma_aa[index]*gcab*t9720*t9722*t9805*t9806*t9882*4.0+ccab4*gamma_bb[index]* \
               t9721*t9722*t9723*t9728*t9808*t9869*(1.6E1/3.0)+ccab4*gamma_aa[index]*t9721*t9722*t9728*t9805*t9808* \
               t9874*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t9720*t9721*t9723*t9813*t9805*(3.2E1/ \
               3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t9720*t9721*t9723*1/(t9736*t9736*t9736)*t9805*(3.2E1/ \
               9.0))+(t9646+t9803+t9804-t9597*(-t9657+t9744-t9764+t9850+t9815+t9851+t9848+t9622*t9641*t9636*t9647* \
               t9658*4.0+t9622*t9641*t9644*t9647*t9814+Aa*a1a*c*t9622*t9641*t9609*t9659*t9669*t9678*(2.0/3.0))+rho_b[index]* \
               (-t9798+t9622*t9716*(t9798-(1/(t9774*t9774)*t9802*(b2f*c*t9775*(1.0/3.0)+b4f*t9604*t9781*(2.0/3.0) \
               +b1f*c*t9782*t9775*(1.0/6.0)+b3f*c*t9775*t9767*(1.0/2.0)))/t9785+a1f*c*c0f*t9775*t9800*(2.0/3.0)-a1p* \
               c*c0p*t9775*t9799*(2.0/3.0))+a1p*c*c0p*t9775*t9799*(2.0/3.0))-c0p*t9790*t9799*2.0-t9622*t9716*t9857) \
               *(ccab1*gamma_aa[index]*gcab*t9805*t9807*(4.0/3.0)-ccab2*t9720*t9722*t9861*t9809-ccab4*t9728*t9729* \
               t9808*t9869-ccab1*gamma_aa[index]*t9720*t9721*t9811*t9805*(4.0/3.0)+ccab2*gamma_aa[index]*t9720*t9721* \
               t9812*t9805*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t9720*t9722*t9813*t9805*4.0+ccab4*gamma_aa[index]* \
               t9721*t9722*t9728*t9810*t9805*(1.6E1/3.0)-ccab3*gcab*t9720*t9721*t9722*t9806*t9878);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t9884 = rho_a[index]+rho_b[index];
            double t9885 = 1/pow(t9884,1.0/3.0);
            double t9886 = c*t9885;
            double t9887 = sqrt(t9886);
            double t9888 = b1p*t9887;
            double t9889 = pow(t9886,3.0/2.0);
            double t9890 = b3p*t9889;
            double t9891 = c*c;
            double t9892 = 1/pow(t9884,2.0/3.0);
            double t9893 = b4p*t9891*t9892;
            double t9894 = b2p*c*t9885;
            double t9895 = t9890+t9893+t9894+t9888;
            double t9896 = 1/pow(t9884,4.0/3.0);
            double t9897 = 1/c0p;
            double t9898 = 1/t9895;
            double t9899 = t9897*t9898*(1.0/2.0);
            double t9900 = t9899+1.0;
            double t9901 = a1p*c*t9885;
            double t9902 = t9901+1.0;
            double t9903 = rho_a[index]-rho_b[index];
            double t9904 = t9903*t9903;
            double t9905 = 1/t9884;
            double t9906 = t9903*t9905;
            double t9907 = two_13*2.0;
            double t9908 = t9907-2.0;
            double t9909 = 1/t9908;
            double t9910 = 1/c0f;
            double t9911 = b1f*t9887;
            double t9912 = b3f*t9889;
            double t9913 = b4f*t9891*t9892;
            double t9914 = b2f*c*t9885;
            double t9915 = t9911+t9912+t9913+t9914;
            double t9916 = 1/t9915;
            double t9917 = t9910*t9916*(1.0/2.0);
            double t9918 = t9917+1.0;
            double t9919 = log(t9918);
            double t9920 = a1f*c*t9885;
            double t9921 = t9920+1.0;
            double t9922 = log(t9900);
            double t9933 = c0f*t9921*t9919*2.0;
            double t9934 = c0p*t9902*t9922*2.0;
            double t9923 = t9933-t9934;
            double t9924 = t9906+1.0;
            double t9925 = pow(t9924,4.0/3.0);
            double t9926 = -t9906+1.0;
            double t9927 = pow(t9926,4.0/3.0);
            double t9928 = t9925+t9927-2.0;
            double t9929 = 1/(t9884*t9884);
            double t9930 = t9903*t9929;
            double t9931 = t9930+t9905;
            double t9932 = 1/(t9884*t9884*t9884*t9884);
            double t9935 = t9904*t9904;
            double t9936 = 1/pow(t9884,5.0/3.0);
            double t9937 = 1/sqrt(t9886);
            double t9938 = 1/t9900;
            double t9939 = 1/(t9895*t9895);
            double t9940 = b4p*t9891*t9936*(2.0/3.0);
            double t9941 = b2p*c*t9896*(1.0/3.0);
            double t9942 = b1p*c*t9896*t9937*(1.0/6.0);
            double t9943 = b3p*c*t9887*t9896*(1.0/2.0);
            double t9944 = t9940+t9941+t9942+t9943;
            double t9945 = 1/(t9884*t9884*t9884*t9884*t9884);
            double t9946 = 1/d2fz0;
            double t9947 = 1/Aa;
            double t9948 = b1a*t9887;
            double t9949 = b3a*t9889;
            double t9950 = b4a*t9891*t9892;
            double t9951 = b2a*c*t9885;
            double t9952 = t9950+t9951+t9948+t9949;
            double t9953 = 1/t9952;
            double t9954 = t9953*t9947*(1.0/2.0);
            double t9955 = t9954+1.0;
            double t9956 = log(t9955);
            double t9957 = a1a*c*t9885;
            double t9958 = t9957+1.0;
            double t9959 = pow(t9924,1.0/3.0);
            double t9960 = t9931*t9959*(4.0/3.0);
            double t9961 = pow(t9926,1.0/3.0);
            double t10037 = t9931*t9961*(4.0/3.0);
            double t9962 = -t10037+t9960;
            double t9963 = t9932*t9935;
            double t9964 = t9963-1.0;
            double t9965 = 1/pow(rho_b[index],1.0/3.0);
            double t9966 = c*t9965;
            double t9967 = sqrt(t9966);
            double t9968 = b1f*t9967;
            double t9969 = pow(t9966,3.0/2.0);
            double t9970 = b3f*t9969;
            double t9971 = 1/pow(rho_b[index],2.0/3.0);
            double t9972 = b4f*t9891*t9971;
            double t9973 = b2f*c*t9965;
            double t9974 = t9970+t9972+t9973+t9968;
            double t9975 = 1/pow(rho_b[index],4.0/3.0);
            double t9976 = b1p*t9967;
            double t9977 = b3p*t9969;
            double t9978 = b4p*t9891*t9971;
            double t9979 = b2p*c*t9965;
            double t9980 = t9976+t9977+t9978+t9979;
            double t9981 = 1/pow(rho_b[index],5.0/3.0);
            double t9982 = 1/sqrt(t9966);
            double t9983 = 1/t9974;
            double t9984 = t9910*t9983*(1.0/2.0);
            double t9985 = t9984+1.0;
            double t9986 = 1/t9980;
            double t9987 = t9897*t9986*(1.0/2.0);
            double t9988 = t9987+1.0;
            double t9989 = a1p*c*t9965;
            double t9990 = t9989+1.0;
            double t9991 = 1/t9988;
            double t9992 = 1/(t9980*t9980);
            double t9993 = b4p*t9891*t9981*(2.0/3.0);
            double t9994 = b2p*c*t9975*(1.0/3.0);
            double t9995 = b1p*c*t9982*t9975*(1.0/6.0);
            double t9996 = b3p*c*t9975*t9967*(1.0/2.0);
            double t9997 = t9993+t9994+t9995+t9996;
            double t9998 = t9990*t9991*t9992*t9997;
            double t9999 = log(t9988);
            double t10000 = pow(2.0,1.0/3.0);
            double t10001 = t10000*2.0;
            double t10002 = t10001-2.0;
            double t10003 = log(t9985);
            double t10004 = a1f*c*t9965;
            double t10005 = t10004+1.0;
            double t10006 = gcab*gcab;
            double t10010 = 1/pow(rho_a[index],8.0/3.0);
            double t10011 = gamma_aa[index]*t10010*(1.0/2.0);
            double t10012 = 1/pow(rho_b[index],8.0/3.0);
            double t10013 = gamma_bb[index]*t10012*(1.0/2.0);
            double t10007 = t10011+t10013;
            double t10008 = t10007*t10007;
            double t10009 = 1/pow(rho_b[index],1.1E1/3.0);
            double t10014 = t10006*t10006;
            double t10015 = t10008*t10008;
            double t10016 = t10006*t10008*6.0;
            double t10017 = gcab*t10006*t10007*t10008*4.0;
            double t10018 = t10014*t10015;
            double t10019 = gcab*t10007*4.0;
            double t10020 = t10016+t10017+t10018+t10019+1.0;
            double t10021 = gcab*t10007;
            double t10022 = t10021+1.0;
            double t10023 = t10006*t10008;
            double t10024 = gcab*t10007*2.0;
            double t10025 = t10023+t10024+1.0;
            double t10026 = t10006*t10008*3.0;
            double t10027 = gcab*t10006*t10007*t10008;
            double t10028 = gcab*t10007*3.0;
            double t10029 = t10026+t10027+t10028+1.0;
            double t10030 = a1p*c*c0p*t9896*t9922*(2.0/3.0);
            double t10031 = 1/t10025;
            double t10032 = 1/t10029;
            double t10033 = 1/t10022;
            double t10034 = 1/t10020;
            double t10035 = 1/pow(t9884,7.0/3.0);
            double t10036 = 1/pow(t9884,8.0/3.0);
            double t10038 = 1/t9918;
            double t10039 = 1/(t9915*t9915);
            double t10040 = b4f*t9891*t9936*(2.0/3.0);
            double t10041 = b2f*c*t9896*(1.0/3.0);
            double t10042 = b1f*c*t9896*t9937*(1.0/6.0);
            double t10043 = b3f*c*t9887*t9896*(1.0/2.0);
            double t10044 = t10040+t10041+t10042+t10043;
            double t10045 = t10044*t10038*t10039*t9921;
            double t10047 = t9902*t9944*t9938*t9939;
            double t10048 = a1f*c*c0f*t9896*t9919*(2.0/3.0);
            double t10046 = t10030+t10045-t10047-t10048;
            double t10049 = t9944*t9944;
            double t10050 = 1/pow(t9886,3.0/2.0);
            double t10051 = b4p*t10036*t9891*(1.0E1/9.0);
            double t10052 = b2p*c*t10035*(4.0/9.0);
            double t10053 = b1p*c*t10035*t9937*(2.0/9.0);
            double t10054 = b3p*c*t10035*t9887*(2.0/3.0);
            double t10055 = b3p*t10036*t9891*t9937*(1.0/1.2E1);
            double t10056 = t10051+t10052+t10053+t10054+t10055-b1p*t10050*t10036*t9891*(1.0/3.6E1);
            double t10057 = 1/(t9895*t9895*t9895);
            double t10058 = t10057*t10049*t9902*t9938*2.0;
            double t10059 = t10044*t10044;
            double t10060 = 1/(t9900*t9900);
            double t10061 = 1/(t9895*t9895*t9895*t9895);
            double t10062 = t9929*2.0;
            double t10063 = 1/(t9884*t9884*t9884);
            double t10064 = t10063*t9903*2.0;
            double t10065 = t10062+t10064;
            double t10066 = t9931*t9931;
            double t10067 = a1p*c*c0p*t10035*t9922*(8.0/9.0);
            double t10068 = 1/(t9884*t9884*t9884*t9884*t9884*t9884);
            double t10069 = t9903*t9904*t9932*4.0;
            double t10070 = t9935*t9945*4.0;
            double t10071 = t10070+t10069;
            double t10072 = t10065*t9959*(4.0/3.0);
            double t10073 = 1/pow(t9924,2.0/3.0);
            double t10074 = t10073*t10066*(4.0/9.0);
            double t10075 = 1/pow(t9926,2.0/3.0);
            double t10076 = t10066*t10075*(4.0/9.0);
            double t10077 = t10072+t10074+t10076-t10065*t9961*(4.0/3.0);
            double t10078 = 1/t9955;
            double t10079 = 1/(t9952*t9952);
            double t10080 = b4a*t9891*t9936*(2.0/3.0);
            double t10081 = b2a*c*t9896*(1.0/3.0);
            double t10082 = b1a*c*t9896*t9937*(1.0/6.0);
            double t10083 = b3a*c*t9887*t9896*(1.0/2.0);
            double t10084 = t10080+t10081+t10082+t10083;
            double t10085 = t10084*t10084;
            double t10086 = 1/t9985;
            double t10087 = b4f*t9891*t9981*(2.0/3.0);
            double t10088 = b2f*c*t9975*(1.0/3.0);
            double t10089 = b1f*c*t9982*t9975*(1.0/6.0);
            double t10090 = b3f*c*t9975*t9967*(1.0/2.0);
            double t10091 = t10090+t10087+t10088+t10089;
            double t10092 = 1/(t9974*t9974);
            double t10093 = 1/pow(rho_b[index],7.0/3.0);
            double t10094 = 1/pow(t9966,3.0/2.0);
            double t10095 = t10091*t10091;
            double t10096 = t9997*t9997;
            double t10097 = 1/(t9980*t9980*t9980);
            double t10098 = t10096*t10097*t9990*t9991*2.0;
            double t10099 = b4p*t10012*t9891*(1.0E1/9.0);
            double t10100 = b2p*c*t10093*(4.0/9.0);
            double t10101 = b3p*t10012*t9891*t9982*(1.0/1.2E1);
            double t10102 = b1p*c*t10093*t9982*(2.0/9.0);
            double t10103 = b3p*c*t10093*t9967*(2.0/3.0);
            double t10285 = b1p*t10012*t10094*t9891*(1.0/3.6E1);
            double t10104 = t10100+t10101+t10102+t10103-t10285+t10099;
            double t10105 = 1/(t9988*t9988);
            double t10106 = 1/(t9980*t9980*t9980*t9980);
            double t10107 = a1p*c*c0p*t10093*t9999*(8.0/9.0);
            double t10108 = a1f*c*c0f*t10003*t9975*(2.0/3.0);
            double t10109 = a1p*c*c0p*t9975*t9999*(2.0/3.0);
            double t10110 = 1/tau_b[index];
            double t10111 = pow(rho_b[index],2.0/3.0);
            double t10112 = pow(rho_b[index],5.0/3.0);
            double t10113 = C_k*t10110*t10112;
            double t10114 = t10113+1.0;
            double t10115 = t10113-1.0;
            double t10116 = 1/(t10114*t10114);
            double t10117 = t10115*t10115;
            double t10118 = t10117*t10117;
            double t10119 = t10118*t10118;
            double t10120 = 1/pow(t10114,1.1E1);
            double t10121 = 1/(t10114*t10114*t10114);
            double t10122 = 1/(t10114*t10114*t10114*t10114);
            double t10123 = 1/(t10114*t10114*t10114*t10114*t10114);
            double t10124 = 1/(t10114*t10114*t10114*t10114*t10114*t10114);
            double t10125 = 1/(t10114*t10114*t10114*t10114*t10114*t10114*t10114);
            double t10126 = 1/(t10114*t10114*t10114*t10114*t10114*t10114*t10114*t10114);
            double t10127 = 1/(t10114*t10114*t10114*t10114*t10114*t10114*t10114*t10114*t10114);
            double t10128 = 1/pow(t10114,1.0E1);
            double t10129 = 1/(k*k);
            double t10130 = 1/kp;
            double t10131 = 1/(rho_b[index]*rho_b[index]);
            double t10132 = rho_b[index]*2.0;
            double t10133 = 1/pow(t10132,2.0/3.0);
            double t10134 = gamma_bb[index]*mu_*t10130*t10131*t10133*t10129*(1.0/4.0);
            double t10135 = t10134+1.0;
            double t10136 = 1/t10135;
            double t10137 = kp-kp*t10136+1.0;
            double t10138 = C_k*C_k;
            double t10139 = pow(rho_b[index],4.0/3.0);
            double t10140 = 1/(tau_b[index]*tau_b[index]);
            double t10141 = 1/t10114;
            double t10142 = 1/pow(t10114,1.2E1);
            double t10143 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
            double t10144 = gamma_bb[index]*mu_*t10130*t10133*t10143*t10129*(1.0/2.0);
            double t10145 = 1/pow(t10132,5.0/3.0);
            double t10146 = gamma_bb[index]*mu_*t10130*t10131*t10145*t10129*(1.0/3.0);
            double t10147 = t10144+t10146;
            double t10148 = a_1*t10141*t10115;
            double t10149 = a_10*t10117*t10119*t10128;
            double t10150 = a_11*t10120*t10115*t10117*t10119;
            double t10151 = a_2*t10116*t10117;
            double t10152 = a_3*t10121*t10115*t10117;
            double t10153 = a_4*t10122*t10118;
            double t10154 = a_5*t10123*t10115*t10118;
            double t10155 = a_6*t10124*t10117*t10118;
            double t10156 = a_7*t10115*t10125*t10117*t10118;
            double t10157 = a_8*t10126*t10119;
            double t10158 = a_9*t10115*t10127*t10119;
            double t10159 = t10150+t10151+t10152+t10153+t10154+t10155+t10156+t10148+t10157+t10149+t10158+1.0;
            double t10160 = 1/(t10135*t10135);
            double t10161 = C_k*a_1*t10110*t10111*t10141*(5.0/3.0);
            double t10162 = C_k*a_2*t10110*t10111*t10115*t10116*(1.0E1/3.0);
            double t10163 = C_k*a_10*t10110*t10111*t10115*t10119*t10128*(5.0E1/3.0);
            double t10164 = C_k*a_11*t10110*t10111*t10120*t10117*t10119*(5.5E1/3.0);
            double t10165 = C_k*a_3*t10110*t10111*t10121*t10117*5.0;
            double t10166 = C_k*a_4*t10110*t10111*t10122*t10115*t10117*(2.0E1/3.0);
            double t10167 = C_k*a_5*t10110*t10111*t10123*t10118*(2.5E1/3.0);
            double t10168 = C_k*a_6*t10110*t10111*t10115*t10124*t10118*1.0E1;
            double t10169 = C_k*a_7*t10110*t10111*t10125*t10117*t10118*(3.5E1/3.0);
            double t10170 = C_k*a_8*t10110*t10111*t10115*t10117*t10126*t10118*(4.0E1/3.0);
            double t10171 = C_k*a_9*t10110*t10111*t10127*t10119*1.5E1;
            double t10172 = t10161+t10170+t10162+t10171+t10163+t10164+t10165+t10166+t10167+t10168+t10169-C_k* \
               a_1*t10110*t10111*t10115*t10116*(5.0/3.0)-C_k*a_2*t10110*t10111*t10121*t10117*(1.0E1/3.0)-C_k*a_4* \
               t10110*t10111*t10123*t10118*(2.0E1/3.0)-C_k*a_8*t10110*t10111*t10127*t10119*(4.0E1/3.0)-C_k*a_10*t10110* \
               t10111*t10120*t10117*t10119*(5.0E1/3.0)-C_k*a_3*t10110*t10111*t10122*t10115*t10117*5.0-C_k*a_5*t10110* \
               t10111*t10115*t10124*t10118*(2.5E1/3.0)-C_k*a_6*t10110*t10111*t10125*t10117*t10118*1.0E1-C_k*a_9*t10110* \
               t10111*t10115*t10119*t10128*1.5E1-C_k*a_11*t10110*t10111*t10115*t10142*t10117*t10119*(5.5E1/3.0)-C_k* \
               a_7*t10110*t10111*t10115*t10117*t10126*t10118*(3.5E1/3.0);
            double t10173 = 1/pow(rho_a[index],1.0/3.0);
            double t10174 = c*t10173;
            double t10175 = sqrt(t10174);
            double t10176 = pow(t10174,3.0/2.0);
            double t10177 = 1/pow(rho_a[index],2.0/3.0);
            double t10178 = b1p*t10175;
            double t10179 = b3p*t10176;
            double t10180 = b4p*t10177*t9891;
            double t10181 = b2p*c*t10173;
            double t10182 = t10180+t10181+t10178+t10179;
            double t10183 = 1/t10182;
            double t10184 = t10183*t9897*(1.0/2.0);
            double t10185 = t10184+1.0;
            double t10186 = log(t10185);
            double t10187 = a1p*c*t10173;
            double t10188 = t10187+1.0;
            double t10189 = c0p*t10186*t10188*2.0;
            double t10190 = c0f*t10003*t10005*2.0;
            double t10192 = c0p*t9990*t9999*2.0;
            double t10191 = t10190-t10192;
            double t10193 = t9923*t9932*t9935*t9909*t9928;
            double t10194 = Aa*t9909*t9928*t9946*t9964*t9956*t9958*2.0;
            double t10195 = gamma_bb[index]*gcab*t10009*(1.6E1/3.0);
            double t10196 = gamma_bb[index]*gcab*t10006*t10008*t10009*1.6E1;
            double t10197 = gamma_bb[index]*t10014*t10007*t10008*t10009*(1.6E1/3.0);
            double t10198 = gamma_bb[index]*t10006*t10007*t10009*1.6E1;
            double t10199 = t10195+t10196+t10197+t10198;
            double t10200 = 1/(t10022*t10022);
            double t10201 = gamma_bb[index]*gamma_bb[index];
            double t10202 = 1/pow(rho_b[index],2.2E1/3.0);
            double t10203 = gamma_bb[index]*gcab*t10009*(8.0/3.0);
            double t10204 = gamma_bb[index]*t10006*t10007*t10009*(8.0/3.0);
            double t10205 = t10203+t10204;
            double t10206 = 1/(t10029*t10029);
            double t10207 = 1/pow(rho_b[index],1.4E1/3.0);
            double t10208 = 1/(t10020*t10020);
            double t10209 = 1/(t10025*t10025);
            double t10210 = gamma_bb[index]*gcab*t10009*4.0;
            double t10211 = gamma_bb[index]*gcab*t10006*t10008*t10009*4.0;
            double t10212 = gamma_bb[index]*t10006*t10007*t10009*8.0;
            double t10213 = t10210+t10211+t10212;
            double t10293 = t10005*t10091*t10092*t10086;
            double t10214 = t10108-t10109-t10293+t9998;
            double t10215 = gcaa*gcaa;
            double t10216 = t10201*t10201;
            double t10217 = t10215*t10215;
            double t10218 = 1/pow(rho_b[index],3.2E1/3.0);
            double t10219 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t10220 = 1/pow(rho_b[index],1.6E1/3.0);
            double t10221 = t10002*t10191*t9909;
            double t10222 = t10221+t10192;
            double t10223 = tau_b[index]-1.0/1.0E20;
            double t10224 = ( (t10223 > 0.0) ?  1.0 : 0.0 ) ;
            double t10225 = tau_b[index]*2.0;
            double t10226 = 1/rho_b[index];
            double t10253 = gamma_bb[index]*t10226*(1.0/4.0);
            double t10227 = t10225-t10253;
            double t10228 = t10110*t10227*(1.0/2.0);
            double t10229 = t10228-1.0;
            double t10230 = t10224*t10229;
            double t10231 = t10230+1.0;
            double t10232 = gamma_bb[index]*gcaa*t10012*4.0;
            double t10233 = gamma_bb[index]*gcaa*t10201*t10215*t10219*4.0;
            double t10234 = t10201*t10220*t10215*6.0;
            double t10235 = t10216*t10217*t10218;
            double t10236 = t10232+t10233+t10234+t10235+1.0;
            double t10237 = 1/t10236;
            double t10238 = gamma_bb[index]*gcaa*t10012;
            double t10239 = t10238+1.0;
            double t10240 = 1/t10239;
            double t10241 = gamma_bb[index]*gcaa*t10012*3.0;
            double t10242 = gamma_bb[index]*gcaa*t10201*t10215*t10219;
            double t10243 = t10201*t10220*t10215*3.0;
            double t10244 = t10241+t10242+t10243+1.0;
            double t10245 = 1/t10244;
            double t10246 = gamma_bb[index]*gcaa*t10012*2.0;
            double t10247 = t10201*t10220*t10215;
            double t10248 = t10246+t10247+1.0;
            double t10249 = 1/t10248;
            double t10250 = 1/pow(rho_b[index],1.9E1/3.0);
            double t10251 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t10252 = 1/pow(rho_b[index],3.5E1/3.0);
            double t10254 = 1/pow(rho_b[index],1.0E1);
            double t10255 = 1/(t10239*t10239);
            double t10256 = gamma_bb[index]*gcaa*t10009*(3.2E1/3.0);
            double t10257 = gamma_bb[index]*gcaa*t10201*t10215*t10251*3.2E1;
            double t10258 = t10201*t10250*t10215*3.2E1;
            double t10259 = t10216*t10252*t10217*(3.2E1/3.0);
            double t10260 = t10256+t10257+t10258+t10259;
            double t10261 = gamma_bb[index]*gcaa*t10009*(1.6E1/3.0);
            double t10262 = t10201*t10250*t10215*(1.6E1/3.0);
            double t10263 = t10261+t10262;
            double t10264 = gamma_bb[index]*gcaa*t10009*8.0;
            double t10265 = gamma_bb[index]*gcaa*t10201*t10215*t10251*8.0;
            double t10266 = t10201*t10250*t10215*1.6E1;
            double t10267 = t10264+t10265+t10266;
            double t10268 = 1/(t10244*t10244);
            double t10269 = 1/(t10236*t10236);
            double t10270 = 1/pow(rho_b[index],3.8E1/3.0);
            double t10271 = 1/(t10248*t10248);
            double t10272 = ccaa4*t10216*t10217*t10218*t10237;
            double t10273 = ccaa1*gamma_bb[index]*gcaa*t10012*t10240;
            double t10274 = ccaa3*gamma_bb[index]*gcaa*t10201*t10215*t10245*t10219;
            double t10275 = ccaa2*t10201*t10220*t10215*t10249;
            double t10276 = ccaa0+t10272+t10273+t10274+t10275;
            double t10277 = 1/(t9974*t9974*t9974);
            double t10278 = b4f*t10012*t9891*(1.0E1/9.0);
            double t10279 = b2f*c*t10093*(4.0/9.0);
            double t10280 = b3f*t10012*t9891*t9982*(1.0/1.2E1);
            double t10281 = b1f*c*t10093*t9982*(2.0/9.0);
            double t10282 = b3f*c*t10093*t9967*(2.0/3.0);
            double t10283 = t10280+t10281+t10282+t10278+t10279-b1f*t10012*t10094*t9891*(1.0/3.6E1);
            double t10284 = t10005*t10092*t10283*t10086;
            double t10286 = t10104*t9990*t9991*t9992;
            double t10287 = 1/(t9985*t9985);
            double t10288 = 1/(t9974*t9974*t9974*t9974);
            double t10289 = t10005*t10095*t10287*t10288*t9910*(1.0/2.0);
            double t10290 = t10105*t10106*t10096*t9897*t9990*(1.0/2.0);
            double t10291 = a1f*c*t10091*t10092*t10086*t9975*(2.0/3.0);
            double t10292 = a1p*c*t9991*t9992*t9975*t9997*(2.0/3.0);
            double t10294 = t10002*t10214*t9909;
            double t10295 = ccaa4*t10216*t10252*t10217*t10237*(3.2E1/3.0);
            double t10296 = ccaa1*gamma_bb[index]*gcaa*t10240*t10009*(8.0/3.0);
            double t10297 = ccaa3*gamma_bb[index]*gcaa*t10201*t10215*t10251*t10245*8.0;
            double t10298 = ccaa2*t10201*t10250*t10215*t10249*(1.6E1/3.0);
            double t10301 = ccaa1*t10201*t10250*t10215*t10255*(8.0/3.0);
            double t10302 = ccaa3*gamma_bb[index]*gcaa*t10201*t10215*t10219*t10267*t10268;
            double t10303 = ccaa4*t10260*t10216*t10217*t10218*t10269;
            double t10304 = ccaa2*t10201*t10220*t10215*t10271*t10263;
            double t10299 = -t10301-t10302-t10303-t10304+t10295+t10296+t10297+t10298;
            double t10300 = t10109+t10294-t9998;
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t10033*t10007+ccab2*t10031*t10006*t10008+ccab4*t10014*t10015* \
               t10034+ccab3*gcab*t10032*t10006*t10007*t10008)*(-rho_b[index]*(-t10107+t10290+t10292+t10286-t10098+ \
               t10002*t9909*(t10107+t10291+t10284+t10098+t10289-t10005*t10086*t10095*t10277*2.0-t10104*t9990*t9991* \
               t9992-a1f*c*c0f*t10003*t10093*(8.0/9.0)-t10105*t10106*t10096*t9897*t9990*(1.0/2.0)-a1p*c*t9991*t9992* \
               t9975*t9997*(2.0/3.0)))-t9884*(t10058+t10067-t10056*t9902*t9938*t9939-t9932*t9935*t9909*t9928*(t10058+ \
               t10067-t10056*t9902*t9938*t9939-t10038*t10059*t9921*1/(t9915*t9915*t9915)*2.0+t10038*t10039*t9921* \
               (b2f*c*t10035*(4.0/9.0)+b4f*t10036*t9891*(1.0E1/9.0)+b1f*c*t10035*t9937*(2.0/9.0)+b3f*c*t10035*t9887* \
               (2.0/3.0)-b1f*t10050*t10036*t9891*(1.0/3.6E1)+b3f*t10036*t9891*t9937*(1.0/1.2E1))+t10059*t9910*t9921* \
               1/(t9915*t9915*t9915*t9915)*1/(t9918*t9918)*(1.0/2.0)-a1f*c*c0f*t10035*t9919*(8.0/9.0)-t10060*t10061* \
               t10049*t9897*t9902*(1.0/2.0)+a1f*c*t10044*t10038*t10039*t9896*(2.0/3.0)-a1p*c*t9896*t9944*t9938*t9939* \
               (2.0/3.0))-t10060*t10061*t10049*t9897*t9902*(1.0/2.0)-t10046*t9932*t9935*t9962*t9909*2.0+t10077*t9923* \
               t9932*t9935*t9909-t10046*t9935*t9909*t9945*t9928*8.0+t10068*t9923*t9935*t9909*t9928*2.0E1+t9904*t9923* \
               t9932*t9909*t9928*1.2E1+t9923*t9935*t9962*t9909*t9945*8.0-t10046*t9903*t9904*t9932*t9909*t9928*8.0+ \
               t9903*t9904*t9923*t9932*t9962*t9909*8.0+t9903*t9904*t9923*t9909*t9945*t9928*3.2E1-a1p*c*t9896*t9944* \
               t9938*t9939*(2.0/3.0)+Aa*t10071*t9962*t9909*t9946*t9956*t9958*4.0+Aa*t10077*t9909*t9946*t9964*t9956* \
               t9958*2.0+Aa*t9909*t9928*t9946*t9956*t9958*(t10068*t9935*2.0E1+t9904*t9932*1.2E1+t9903*t9904*t9945* \
               3.2E1)*2.0-t10071*t10084*t10078*t10079*t9909*t9928*t9946*t9958*2.0-t10084*t10078*t10079*t9962*t9909* \
               t9946*t9964*t9958*2.0+t10085*t10078*1/(t9952*t9952*t9952)*t9909*t9928*t9946*t9964*t9958*2.0-t10078* \
               t10079*t9909*t9928*t9946*t9964*t9958*(b2a*c*t10035*(4.0/9.0)+b4a*t10036*t9891*(1.0E1/9.0)+b1a*c*t10035* \
               t9937*(2.0/9.0)+b3a*c*t10035*t9887*(2.0/3.0)-b1a*t10050*t10036*t9891*(1.0/3.6E1)+b3a*t10036*t9891* \
               t9937*(1.0/1.2E1))+Aa*a1a*c*t10071*t9896*t9909*t9928*t9946*t9956*(4.0/3.0)+Aa*a1a*c*t10035*t9909*t9928* \
               t9946*t9964*t9956*(8.0/9.0)+Aa*a1a*c*t9896*t9962*t9909*t9946*t9964*t9956*(4.0/3.0)-t10085*1/(t9952* \
               t9952*t9952*t9952)*t9909*t9928*t9946*1/(t9955*t9955)*t9964*t9947*t9958*(1.0/2.0)-a1a*c*t10084*t10078* \
               t10079*t9896*t9909*t9928*t9946*t9964*(2.0/3.0))-t10002*t10214*t9909*2.0-t9902*t9944*t9938*t9939*2.0+ \
               t9990*t9991*t9992*t9997*2.0+a1p*c*c0p*t9896*t9922*(4.0/3.0)-a1p*c*c0p*t9975*t9999*(4.0/3.0)-t10046* \
               t9932*t9935*t9909*t9928*2.0+t9923*t9932*t9935*t9962*t9909*2.0+t9923*t9935*t9909*t9945*t9928*8.0+t9903* \
               t9904*t9923*t9932*t9909*t9928*8.0+Aa*t10071*t9909*t9928*t9946*t9956*t9958*4.0+Aa*t9962*t9909*t9946* \
               t9964*t9956*t9958*4.0-t10084*t10078*t10079*t9909*t9928*t9946*t9964*t9958*2.0+Aa*a1a*c*t9896*t9909* \
               t9928*t9946*t9964*t9956*(4.0/3.0))+(rho_b[index]*t10222+rho_a[index]*(t10189-t10002*t9909*(t10189- \
               c0f*log((t9910*(1.0/2.0))/(b1f*t10175+b3f*t10176+b2f*c*t10173+b4f*t10177*t9891)+1.0)*(a1f*c*t10173+ \
               1.0)*2.0))-t9884*(t10193+t10194+t9934))*(-ccab2*t10006*t10008*t10209*(gamma_bb[index]*gcab*t10207* \
               (8.8E1/9.0)+t10201*t10202*t10006*(3.2E1/9.0)+gamma_bb[index]*t10006*t10007*t10207*(8.8E1/9.0))+ccab2* \
               t10006*1/(t10025*t10025*t10025)*(t10205*t10205)*t10008*2.0+ccab4*1/(t10020*t10020*t10020)*t10014*t10015* \
               (t10199*t10199)*2.0+ccab1*gamma_bb[index]*gcab*t10033*t10207*(4.4E1/9.0)-ccab1*t10200*t10201*t10202* \
               t10006*(3.2E1/9.0)+ccab2*t10201*t10031*t10202*t10006*(3.2E1/9.0)-ccab4*t10014*t10015*t10208*(gamma_bb[index]* \
               gcab*t10207*(1.76E2/9.0)+t10201*t10202*t10006*(6.4E1/3.0)+gamma_bb[index]*t10006*t10007*t10207*(1.76E2/ \
               3.0)+t10201*t10202*t10014*t10008*(6.4E1/3.0)+gamma_bb[index]*gcab*t10006*t10008*t10207*(1.76E2/3.0) \
               +gamma_bb[index]*t10014*t10007*t10008*t10207*(1.76E2/9.0)+gcab*t10201*t10202*t10006*t10007*(1.28E2/ \
               3.0))+ccab4*t10201*t10202*t10014*t10034*t10008*(6.4E1/3.0)-ccab1*gamma_bb[index]*t10200*t10006*t10007* \
               t10207*(4.4E1/9.0)+ccab2*gamma_bb[index]*t10031*t10006*t10007*t10207*(8.8E1/9.0)+ccab3*gcab*t10006* \
               (t10213*t10213)*t10007*t10008*1/(t10029*t10029*t10029)*2.0+ccab3*gamma_bb[index]*gcab*t10032*t10006* \
               t10008*t10207*(4.4E1/3.0)+ccab4*gamma_bb[index]*t10014*t10007*t10034*t10008*t10207*(1.76E2/9.0)-ccab2* \
               gamma_bb[index]*t10006*t10007*t10205*t10009*t10209*(1.6E1/3.0)+ccab3*gcab*t10201*t10202*t10032*t10006* \
               t10007*(3.2E1/3.0)+ccab1*gcab*t10201*1/(t10022*t10022*t10022)*t10202*t10006*t10007*(3.2E1/9.0)-ccab3* \
               gcab*t10006*t10007*t10008*t10206*(gamma_bb[index]*gcab*t10207*(4.4E1/3.0)+t10201*t10202*t10006*(3.2E1/ \
               3.0)+gamma_bb[index]*t10006*t10007*t10207*(8.8E1/3.0)+gamma_bb[index]*gcab*t10006*t10008*t10207*(4.4E1/ \
               3.0)+gcab*t10201*t10202*t10006*t10007*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t10006*t10213*t10008* \
               t10206*t10009*8.0-ccab4*gamma_bb[index]*t10014*t10007*t10008*t10009*t10208*t10199*(3.2E1/3.0))+(t10193+ \
               t10194+t9934+rho_b[index]*(t10109-t9998+t10002*t9909*(t10108+t9998-t10005*t10091*t10092*t10086-a1p* \
               c*c0p*t9975*t9999*(2.0/3.0)))-t9884*(t10030-t9902*t9944*t9938*t9939-t10046*t9932*t9935*t9909*t9928+ \
               t9923*t9932*t9935*t9962*t9909+t9923*t9935*t9909*t9945*t9928*4.0+t9903*t9904*t9923*t9932*t9909*t9928* \
               4.0+Aa*t10071*t9909*t9928*t9946*t9956*t9958*2.0+Aa*t9962*t9909*t9946*t9964*t9956*t9958*2.0-t10084* \
               t10078*t10079*t9909*t9928*t9946*t9964*t9958+Aa*a1a*c*t9896*t9909*t9928*t9946*t9964*t9956*(2.0/3.0) \
               )-c0p*t9990*t9999*2.0-t10002*t10191*t9909)*(ccab1*gamma_bb[index]*gcab*t10033*t10009*(4.0/3.0)-ccab2* \
               t10006*t10205*t10008*t10209-ccab4*t10014*t10015*t10208*t10199-ccab1*gamma_bb[index]*t10200*t10006* \
               t10007*t10009*(4.0/3.0)+ccab2*gamma_bb[index]*t10031*t10006*t10007*t10009*(8.0/3.0)+ccab3*gamma_bb[index]* \
               gcab*t10032*t10006*t10008*t10009*4.0+ccab4*gamma_bb[index]*t10014*t10007*t10034*t10008*t10009*(1.6E1/ \
               3.0)-ccab3*gcab*t10006*t10213*t10007*t10008*t10206)*2.0-(X-1.0)*(t10172*t10137*2.0+rho_b[index]*t10137* \
               (C_k*a_1*t10110*t10141*t9965*(1.0E1/9.0)-a_1*t10140*t10116*t10138*t10139*(5.0E1/9.0)+a_2*t10140*t10116* \
               t10138*t10139*(5.0E1/9.0)+a_1*t10121*t10140*t10115*t10138*t10139*(5.0E1/9.0)+a_10*t10140*t10119*t10128* \
               t10138*t10139*2.5E2-a_2*t10121*t10140*t10115*t10138*t10139*(2.0E2/9.0)+a_2*t10122*t10140*t10117*t10138* \
               t10139*(5.0E1/3.0)+a_3*t10121*t10140*t10115*t10138*t10139*(5.0E1/3.0)-a_3*t10122*t10140*t10117*t10138* \
               t10139*5.0E1+a_4*t10122*t10140*t10117*t10138*t10139*(1.0E2/3.0)+a_4*t10140*t10124*t10118*t10138*t10139* \
               (5.0E2/9.0)-a_5*t10140*t10124*t10118*t10138*t10139*(1.25E3/9.0)+a_6*t10140*t10124*t10118*t10138*t10139* \
               (2.5E2/3.0)+a_8*t10140*t10119*t10128*t10138*t10139*2.0E2-a_9*t10140*t10119*t10128*t10138*t10139*4.5E2- \
               C_k*a_1*t10110*t10115*t10116*t9965*(1.0E1/9.0)-C_k*a_2*t10110*t10121*t10117*t9965*(2.0E1/9.0)+C_k* \
               a_2*t10110*t10115*t10116*t9965*(2.0E1/9.0)+C_k*a_3*t10110*t10121*t10117*t9965*(1.0E1/3.0)-C_k*a_4* \
               t10110*t10123*t10118*t9965*(4.0E1/9.0)+C_k*a_5*t10110*t10123*t10118*t9965*(5.0E1/9.0)-C_k*a_8*t10110* \
               t10127*t10119*t9965*(8.0E1/9.0)+C_k*a_9*t10110*t10127*t10119*t9965*1.0E1-C_k*a_10*t10110*t10120*t10117* \
               t10119*t9965*(1.0E2/9.0)+C_k*a_11*t10110*t10120*t10117*t10119*t9965*(1.1E2/9.0)+C_k*a_10*t10110*t10115* \
               t10119*t10128*t9965*(1.0E2/9.0)-C_k*a_3*t10110*t10122*t10115*t10117*t9965*(1.0E1/3.0)+C_k*a_4*t10110* \
               t10122*t10115*t10117*t9965*(4.0E1/9.0)-C_k*a_5*t10110*t10115*t10124*t10118*t9965*(5.0E1/9.0)+C_k*a_6* \
               t10110*t10115*t10124*t10118*t9965*(2.0E1/3.0)-C_k*a_6*t10110*t10125*t10117*t10118*t9965*(2.0E1/3.0) \
               +C_k*a_7*t10110*t10125*t10117*t10118*t9965*(7.0E1/9.0)-C_k*a_9*t10110*t10115*t10119*t10128*t9965*1.0E1- \
               a_10*t10120*t10140*t10115*t10119*t10138*t10139*(5.0E3/9.0)+a_11*t10120*t10140*t10115*t10119*t10138* \
               t10139*(2.75E3/9.0)+a_10*t10140*t10142*t10117*t10119*t10138*t10139*(2.75E3/9.0)-a_11*t10140*t10142* \
               t10117*t10119*t10138*t10139*(6.05E3/9.0)+a_3*t10140*t10123*t10115*t10117*t10138*t10139*(1.0E2/3.0) \
               -a_4*t10140*t10123*t10115*t10117*t10138*t10139*(8.0E2/9.0)+a_5*t10140*t10123*t10115*t10117*t10138* \
               t10139*(5.0E2/9.0)+a_5*t10140*t10115*t10125*t10118*t10138*t10139*(2.5E2/3.0)-a_6*t10140*t10115*t10125* \
               t10118*t10138*t10139*2.0E2+a_6*t10140*t10117*t10126*t10118*t10138*t10139*(3.5E2/3.0)+a_7*t10140*t10115* \
               t10125*t10118*t10138*t10139*(3.5E2/3.0)-a_7*t10140*t10117*t10126*t10118*t10138*t10139*(2.45E3/9.0) \
               +a_8*t10140*t10117*t10126*t10118*t10138*t10139*(1.4E3/9.0)+a_9*t10120*t10140*t10115*t10119*t10138* \
               t10139*2.5E2+a_11*t10140*1/pow(t10114,1.3E1)*t10115*t10117*t10119*t10138*t10139*(1.1E3/3.0)-C_k*a_11* \
               t10110*t10115*t10142*t10117*t10119*t9965*(1.1E2/9.0)-C_k*a_7*t10110*t10115*t10117*t10126*t10118*t9965* \
               (7.0E1/9.0)+C_k*a_8*t10110*t10115*t10117*t10126*t10118*t9965*(8.0E1/9.0)+a_7*t10140*t10115*t10117* \
               t10118*t10127*t10138*t10139*(1.4E3/9.0)-a_8*t10140*t10115*t10117*t10118*t10127*t10138*t10139*(3.2E3/ \
               9.0)+a_9*t10140*t10115*t10117*t10118*t10127*t10138*t10139*2.0E2)-kp*t10160*t10147*t10159*2.0+kp*rho_b[index]* \
               t10160*t10159*(gamma_bb[index]*mu_*t10130*t10143*t10145*t10129*(4.0/3.0)+gamma_bb[index]*mu_*1/(rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index])*t10130*t10133*t10129*(3.0/2.0)+gamma_bb[index]*mu_*t10130* \
               t10131*1/pow(t10132,8.0/3.0)*t10129*(1.0E1/9.0))-kp*rho_b[index]*1/(t10135*t10135*t10135)*(t10147* \
               t10147)*t10159*2.0-kp*rho_b[index]*t10160*t10172*t10147*2.0)+t10300*t10231*t10276*2.0+t10222*t10231* \
               t10299*2.0-rho_b[index]*t10222*t10231*(ccaa1*gamma_bb[index]*gcaa*t10240*t10207*(8.8E1/9.0)-ccaa1* \
               t10201*t10202*t10215*t10255*2.4E1+ccaa2*t10201*t10202*t10215*t10249*(3.04E2/9.0)+ccaa4*t10216*t10270* \
               t10217*t10237*(1.12E3/9.0)-ccaa2*t10201*t10250*t10215*t10271*t10263*(3.2E1/3.0)-ccaa4*t10260*t10216* \
               t10252*t10217*t10269*(6.4E1/3.0)-ccaa2*t10201*t10220*t10215*t10271*(gamma_bb[index]*gcaa*t10207*(1.76E2/ \
               9.0)+t10201*t10202*t10215*(3.04E2/9.0))-ccaa4*t10216*t10217*t10218*t10269*(gamma_bb[index]*gcaa*t10207* \
               (3.52E2/9.0)+t10201*t10202*t10215*(6.08E2/3.0)+t10216*t10270*t10217*(1.12E3/9.0)+gamma_bb[index]*gcaa* \
               t10201*t10215*t10254*2.88E2)+ccaa2*t10201*t10220*t10215*(t10263*t10263)*1/(t10248*t10248*t10248)*2.0+ \
               ccaa4*(t10260*t10260)*t10216*t10217*t10218*1/(t10236*t10236*t10236)*2.0+ccaa3*gamma_bb[index]*gcaa* \
               t10201*t10215*t10245*t10254*7.2E1+ccaa1*gamma_bb[index]*gcaa*t10201*t10215*t10254*1/(t10239*t10239* \
               t10239)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t10201*t10215*1/(t10244*t10244*t10244)*t10219*(t10267* \
               t10267)*2.0-ccaa3*gamma_bb[index]*gcaa*t10201*t10215*t10219*t10268*(gamma_bb[index]*gcaa*t10207*(8.8E1/ \
               3.0)+t10201*t10202*t10215*(3.04E2/3.0)+gamma_bb[index]*gcaa*t10201*t10215*t10254*7.2E1)-ccaa3*gamma_bb[index]* \
               gcaa*t10201*t10215*t10251*t10267*t10268*1.6E1)+rho_b[index]*t10231*t10276*(-t10107+t10290+t10292+t10286- \
               t10098+t10002*t9909*(t10107-t10290+t10291-t10292+t10284-t10286+t10098+t10289-t10005*t10086*t10095* \
               t10277*2.0-a1f*c*c0f*t10003*t10093*(8.0/9.0)))-rho_b[index]*t10300*t10231*t10299*2.0+gamma_bb[index]* \
               t10110*t10222*t10224*t10226*t10299*(1.0/4.0)+gamma_bb[index]*t10110*t10224*t10226*t10276*(t10109+t10294- \
               t9998)*(1.0/4.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t12784 = 1/pow(rho_b[index],1.0/3.0);
            double t12785 = c*t12784;
            double t12786 = sqrt(t12785);
            double t12787 = b1f*t12786;
            double t12788 = pow(t12785,3.0/2.0);
            double t12789 = b3f*t12788;
            double t12790 = c*c;
            double t12791 = 1/pow(rho_b[index],2.0/3.0);
            double t12792 = b4f*t12790*t12791;
            double t12793 = b2f*c*t12784;
            double t12794 = t12792+t12793+t12787+t12789;
            double t12795 = 1/pow(rho_b[index],4.0/3.0);
            double t12796 = b1p*t12786;
            double t12797 = b3p*t12788;
            double t12798 = b4p*t12790*t12791;
            double t12799 = b2p*c*t12784;
            double t12800 = t12796+t12797+t12798+t12799;
            double t12801 = 1/pow(rho_b[index],5.0/3.0);
            double t12802 = 1/sqrt(t12785);
            double t12803 = 1/c0f;
            double t12804 = 1/t12794;
            double t12805 = t12803*t12804*(1.0/2.0);
            double t12806 = t12805+1.0;
            double t12807 = 1/c0p;
            double t12808 = 1/t12800;
            double t12809 = t12807*t12808*(1.0/2.0);
            double t12810 = t12809+1.0;
            double t12811 = a1p*c*t12784;
            double t12812 = t12811+1.0;
            double t12813 = 1/t12810;
            double t12814 = 1/(t12800*t12800);
            double t12815 = b4p*t12801*t12790*(2.0/3.0);
            double t12816 = b2p*c*t12795*(1.0/3.0);
            double t12817 = b1p*c*t12802*t12795*(1.0/6.0);
            double t12818 = b3p*c*t12786*t12795*(1.0/2.0);
            double t12819 = t12815+t12816+t12817+t12818;
            double t12820 = t12812*t12813*t12814*t12819;
            double t12821 = log(t12810);
            double t12822 = gamma_bb[index]*gamma_bb[index];
            double t12823 = gcaa*gcaa;
            double t12824 = t12822*t12822;
            double t12825 = t12823*t12823;
            double t12826 = 1/pow(rho_b[index],3.2E1/3.0);
            double t12827 = 1/pow(rho_b[index],8.0/3.0);
            double t12828 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t12829 = 1/pow(rho_b[index],1.6E1/3.0);
            double t12830 = pow(2.0,1.0/3.0);
            double t12831 = t12830*2.0;
            double t12832 = t12831-2.0;
            double t12833 = two_13*2.0;
            double t12834 = t12833-2.0;
            double t12835 = 1/t12834;
            double t12836 = log(t12806);
            double t12837 = a1f*c*t12784;
            double t12838 = t12837+1.0;
            double t12839 = tau_b[index]-1.0/1.0E20;
            double t12840 = ( (t12839 > 0.0) ?  1.0 : 0.0 ) ;
            double t12841 = 1/tau_b[index];
            double t12842 = tau_b[index]*2.0;
            double t12843 = 1/rho_b[index];
            double t12891 = gamma_bb[index]*t12843*(1.0/4.0);
            double t12844 = t12842-t12891;
            double t12845 = t12841*t12844*(1.0/2.0);
            double t12846 = t12845-1.0;
            double t12847 = t12840*t12846;
            double t12848 = t12847+1.0;
            double t12849 = gamma_bb[index]*gcaa*t12827*4.0;
            double t12850 = gamma_bb[index]*gcaa*t12822*t12823*t12828*4.0;
            double t12851 = t12822*t12823*t12829*6.0;
            double t12852 = t12824*t12825*t12826;
            double t12853 = t12850+t12851+t12852+t12849+1.0;
            double t12854 = 1/t12853;
            double t12855 = gamma_bb[index]*gcaa*t12827;
            double t12856 = t12855+1.0;
            double t12857 = 1/t12856;
            double t12858 = gamma_bb[index]*gcaa*t12827*3.0;
            double t12859 = gamma_bb[index]*gcaa*t12822*t12823*t12828;
            double t12860 = t12822*t12823*t12829*3.0;
            double t12861 = t12860+t12858+t12859+1.0;
            double t12862 = 1/t12861;
            double t12863 = gamma_bb[index]*gcaa*t12827*2.0;
            double t12864 = t12822*t12823*t12829;
            double t12865 = t12863+t12864+1.0;
            double t12866 = 1/t12865;
            double t12867 = 1/pow(rho_b[index],1.9E1/3.0);
            double t12868 = 1/pow(rho_b[index],1.1E1/3.0);
            double t12869 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t12870 = 1/pow(rho_b[index],3.5E1/3.0);
            double t12871 = pow(rho_b[index],2.0/3.0);
            double t12872 = pow(rho_b[index],5.0/3.0);
            double t12873 = C_k*t12841*t12872;
            double t12874 = t12873+1.0;
            double t12875 = t12873-1.0;
            double t12876 = 1/(t12874*t12874);
            double t12877 = t12875*t12875;
            double t12878 = t12877*t12877;
            double t12879 = t12878*t12878;
            double t12880 = 1/pow(t12874,1.1E1);
            double t12881 = 1/(t12874*t12874*t12874);
            double t12882 = 1/(t12874*t12874*t12874*t12874);
            double t12883 = 1/(t12874*t12874*t12874*t12874*t12874);
            double t12884 = 1/(t12874*t12874*t12874*t12874*t12874*t12874);
            double t12885 = 1/(t12874*t12874*t12874*t12874*t12874*t12874*t12874);
            double t12886 = 1/(t12874*t12874*t12874*t12874*t12874*t12874*t12874*t12874);
            double t12887 = 1/(t12874*t12874*t12874*t12874*t12874*t12874*t12874*t12874*t12874);
            double t12888 = 1/pow(t12874,1.0E1);
            double t12889 = c0f*t12836*t12838*2.0;
            double t12890 = c0p*t12812*t12821*2.0;
            double t12892 = 1/pow(rho_b[index],1.0E1);
            double t12893 = 1/pow(rho_b[index],2.2E1/3.0);
            double t12894 = 1/(t12856*t12856);
            double t12895 = gamma_bb[index]*gcaa*t12868*(3.2E1/3.0);
            double t12896 = gamma_bb[index]*gcaa*t12822*t12823*t12869*3.2E1;
            double t12897 = t12822*t12823*t12867*3.2E1;
            double t12898 = t12824*t12825*t12870*(3.2E1/3.0);
            double t12899 = t12895+t12896+t12897+t12898;
            double t12900 = gamma_bb[index]*gcaa*t12868*(1.6E1/3.0);
            double t12901 = t12822*t12823*t12867*(1.6E1/3.0);
            double t12902 = t12900+t12901;
            double t12903 = gamma_bb[index]*gcaa*t12868*8.0;
            double t12904 = gamma_bb[index]*gcaa*t12822*t12823*t12869*8.0;
            double t12905 = t12822*t12823*t12867*1.6E1;
            double t12906 = t12903+t12904+t12905;
            double t12907 = 1/(t12861*t12861);
            double t12908 = 1/pow(rho_b[index],1.4E1/3.0);
            double t12909 = 1/(t12853*t12853);
            double t12910 = 1/pow(rho_b[index],3.8E1/3.0);
            double t12911 = 1/(t12865*t12865);
            double t12912 = ccaa4*t12824*t12825*t12826*t12854;
            double t12913 = ccaa1*gamma_bb[index]*gcaa*t12827*t12857;
            double t12914 = ccaa3*gamma_bb[index]*gcaa*t12822*t12823*t12862*t12828;
            double t12915 = ccaa2*t12822*t12823*t12829*t12866;
            double t12916 = ccaa0+t12912+t12913+t12914+t12915;
            double t12917 = 1/t12806;
            double t12918 = b4f*t12801*t12790*(2.0/3.0);
            double t12919 = b2f*c*t12795*(1.0/3.0);
            double t12920 = b1f*c*t12802*t12795*(1.0/6.0);
            double t12921 = b3f*c*t12786*t12795*(1.0/2.0);
            double t12922 = t12920+t12921+t12918+t12919;
            double t12923 = 1/(t12794*t12794);
            double t12924 = 1/pow(rho_b[index],7.0/3.0);
            double t12925 = 1/pow(t12785,3.0/2.0);
            double t12926 = t12922*t12922;
            double t12927 = t12819*t12819;
            double t12928 = 1/(t12800*t12800*t12800);
            double t12929 = t12812*t12813*t12927*t12928*2.0;
            double t12930 = b4p*t12790*t12827*(1.0E1/9.0);
            double t12931 = b2p*c*t12924*(4.0/9.0);
            double t12932 = b3p*t12802*t12790*t12827*(1.0/1.2E1);
            double t12933 = b1p*c*t12802*t12924*(2.0/9.0);
            double t12934 = b3p*c*t12924*t12786*(2.0/3.0);
            double t12935 = t12930+t12931+t12932+t12933+t12934-b1p*t12790*t12925*t12827*(1.0/3.6E1);
            double t12936 = 1/(t12810*t12810);
            double t12937 = 1/(t12800*t12800*t12800*t12800);
            double t12938 = a1p*c*c0p*t12821*t12924*(8.0/9.0);
            double t12939 = a1f*c*c0f*t12836*t12795*(2.0/3.0);
            double t12940 = a1p*c*c0p*t12821*t12795*(2.0/3.0);
            double t12941 = ccaa4*t12824*t12825*t12870*t12854*(3.2E1/3.0);
            double t12942 = ccaa1*gamma_bb[index]*gcaa*t12857*t12868*(8.0/3.0);
            double t12943 = ccaa3*gamma_bb[index]*gcaa*t12822*t12823*t12862*t12869*8.0;
            double t12944 = ccaa2*t12822*t12823*t12866*t12867*(1.6E1/3.0);
            double t12980 = ccaa1*t12822*t12823*t12867*t12894*(8.0/3.0);
            double t12981 = ccaa3*gamma_bb[index]*gcaa*t12822*t12823*t12906*t12907*t12828;
            double t12982 = ccaa4*t12824*t12825*t12826*t12909*t12899;
            double t12983 = ccaa2*t12902*t12911*t12822*t12823*t12829;
            double t12945 = t12941+t12942+t12943+t12944-t12980-t12981-t12982-t12983;
            double t12946 = X-1.0;
            double t12947 = 1/(k*k);
            double t12948 = 1/kp;
            double t12949 = 1/(rho_b[index]*rho_b[index]);
            double t12950 = rho_b[index]*2.0;
            double t12951 = 1/pow(t12950,2.0/3.0);
            double t12952 = gamma_bb[index]*mu_*t12951*t12947*t12948*t12949*(1.0/4.0);
            double t12953 = t12952+1.0;
            double t12954 = 1/t12953;
            double t12955 = kp-kp*t12954+1.0;
            double t12956 = C_k*C_k;
            double t12957 = pow(rho_b[index],4.0/3.0);
            double t12958 = 1/(tau_b[index]*tau_b[index]);
            double t12959 = 1/t12874;
            double t12960 = 1/pow(t12874,1.2E1);
            double t12961 = t12820-t12940+t12939-t12922*t12923*t12917*t12838;
            double t12962 = t12832*t12835*t12961;
            double t12963 = 1/(t12953*t12953);
            double t12964 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
            double t12965 = 1/pow(t12950,5.0/3.0);
            double t12966 = a_1*t12875*t12959;
            double t12967 = a_10*t12877*t12879*t12888;
            double t12968 = a_11*t12880*t12875*t12877*t12879;
            double t12969 = a_2*t12876*t12877;
            double t12970 = a_3*t12881*t12875*t12877;
            double t12971 = a_4*t12882*t12878;
            double t12972 = a_5*t12883*t12875*t12878;
            double t12973 = a_6*t12884*t12877*t12878;
            double t12974 = a_7*t12875*t12885*t12877*t12878;
            double t12975 = a_8*t12886*t12879;
            double t12976 = a_9*t12875*t12887*t12879;
            double t12977 = t12970+t12971+t12972+t12973+t12974+t12966+t12975+t12967+t12976+t12968+t12969+1.0;
            double t12978 = t12890-t12889;
            double t12979 = t12890-t12832*t12835*t12978;
            double t12984 = gamma_bb[index]*mu_*t12951*t12964*t12947*t12948*(1.0/2.0);
            double t12985 = gamma_bb[index]*mu_*t12947*t12965*t12948*t12949*(1.0/3.0);
            double t12986 = t12984+t12985;
            double t12987 = C_k*a_1*t12841*t12871*t12959*(5.0/3.0);
            double t12988 = C_k*a_2*t12841*t12871*t12875*t12876*(1.0E1/3.0);
            double t12989 = C_k*a_10*t12841*t12871*t12875*t12879*t12888*(5.0E1/3.0);
            double t12990 = C_k*a_11*t12841*t12871*t12880*t12877*t12879*(5.5E1/3.0);
            double t12991 = C_k*a_3*t12841*t12871*t12881*t12877*5.0;
            double t12992 = C_k*a_4*t12841*t12871*t12882*t12875*t12877*(2.0E1/3.0);
            double t12993 = C_k*a_5*t12841*t12871*t12883*t12878*(2.5E1/3.0);
            double t12994 = C_k*a_6*t12841*t12871*t12875*t12884*t12878*1.0E1;
            double t12995 = C_k*a_7*t12841*t12871*t12885*t12877*t12878*(3.5E1/3.0);
            double t12996 = C_k*a_8*t12841*t12871*t12875*t12877*t12886*t12878*(4.0E1/3.0);
            double t12997 = C_k*a_9*t12841*t12871*t12887*t12879*1.5E1;
            double t12998 = t12990+t12991+t12992+t12993+t12994+t12995+t12987+t12996+t12988+t12997+t12989-C_k* \
               a_1*t12841*t12871*t12875*t12876*(5.0/3.0)-C_k*a_2*t12841*t12871*t12881*t12877*(1.0E1/3.0)-C_k*a_4* \
               t12841*t12871*t12883*t12878*(2.0E1/3.0)-C_k*a_8*t12841*t12871*t12887*t12879*(4.0E1/3.0)-C_k*a_10*t12841* \
               t12871*t12880*t12877*t12879*(5.0E1/3.0)-C_k*a_3*t12841*t12871*t12882*t12875*t12877*5.0-C_k*a_5*t12841* \
               t12871*t12875*t12884*t12878*(2.5E1/3.0)-C_k*a_6*t12841*t12871*t12885*t12877*t12878*1.0E1-C_k*a_9*t12841* \
               t12871*t12875*t12879*t12888*1.5E1-C_k*a_11*t12841*t12960*t12871*t12875*t12877*t12879*(5.5E1/3.0)-C_k* \
               a_7*t12841*t12871*t12875*t12877*t12886*t12878*(3.5E1/3.0);
            v_rho_b_rho_b_[index] = t12916*t12848*(-t12820+t12940+t12832*t12835*(t12820+t12939-t12922*t12923* \
               t12917*t12838-a1p*c*c0p*t12821*t12795*(2.0/3.0)))*2.0-t12946*t12955*t12998*2.0+t12945*t12848*(t12890+ \
               t12832*t12835*(t12889-c0p*t12812*t12821*2.0))*2.0-rho_b[index]*t12848*t12979*(ccaa1*gamma_bb[index]* \
               gcaa*t12908*t12857*(8.8E1/9.0)+ccaa4*t12910*t12824*t12825*t12854*(1.12E3/9.0)-ccaa1*t12822*t12823* \
               t12893*t12894*2.4E1+ccaa2*t12822*t12823*t12866*t12893*(3.04E2/9.0)-ccaa2*t12902*t12911*t12822*t12823* \
               t12867*(3.2E1/3.0)-ccaa4*t12824*t12825*t12870*t12909*t12899*(6.4E1/3.0)-ccaa2*t12911*t12822*t12823* \
               t12829*(gamma_bb[index]*gcaa*t12908*(1.76E2/9.0)+t12822*t12823*t12893*(3.04E2/9.0))-ccaa4*t12824*t12825* \
               t12826*t12909*(gamma_bb[index]*gcaa*t12908*(3.52E2/9.0)+t12910*t12824*t12825*(1.12E3/9.0)+t12822*t12823* \
               t12893*(6.08E2/3.0)+gamma_bb[index]*gcaa*t12822*t12823*t12892*2.88E2)+ccaa2*(t12902*t12902)*t12822* \
               t12823*t12829*1/(t12865*t12865*t12865)*2.0+ccaa4*t12824*t12825*t12826*1/(t12853*t12853*t12853)*(t12899* \
               t12899)*2.0+ccaa3*gamma_bb[index]*gcaa*t12822*t12823*t12862*t12892*7.2E1+ccaa1*gamma_bb[index]*gcaa* \
               t12822*t12823*1/(t12856*t12856*t12856)*t12892*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t12822*t12823* \
               1/(t12861*t12861*t12861)*(t12906*t12906)*t12828*2.0-ccaa3*gamma_bb[index]*gcaa*t12822*t12823*t12907* \
               t12828*(gamma_bb[index]*gcaa*t12908*(8.8E1/3.0)+t12822*t12823*t12893*(3.04E2/3.0)+gamma_bb[index]* \
               gcaa*t12822*t12823*t12892*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t12822*t12823*t12906*t12907*t12869*1.6E1) \
               -rho_b[index]*t12946*t12955*(C_k*a_1*t12841*t12784*t12959*(1.0E1/9.0)-a_1*t12956*t12876*t12957*t12958* \
               (5.0E1/9.0)+a_2*t12956*t12876*t12957*t12958*(5.0E1/9.0)+a_1*t12881*t12875*t12956*t12957*t12958*(5.0E1/ \
               9.0)+a_10*t12956*t12957*t12958*t12879*t12888*2.5E2-a_2*t12881*t12875*t12956*t12957*t12958*(2.0E2/9.0) \
               +a_2*t12882*t12956*t12957*t12877*t12958*(5.0E1/3.0)+a_3*t12881*t12875*t12956*t12957*t12958*(5.0E1/ \
               3.0)-a_3*t12882*t12956*t12957*t12877*t12958*5.0E1+a_4*t12882*t12956*t12957*t12877*t12958*(1.0E2/3.0) \
               +a_4*t12884*t12956*t12957*t12958*t12878*(5.0E2/9.0)-a_5*t12884*t12956*t12957*t12958*t12878*(1.25E3/ \
               9.0)+a_6*t12884*t12956*t12957*t12958*t12878*(2.5E2/3.0)+a_8*t12956*t12957*t12958*t12879*t12888*2.0E2- \
               a_9*t12956*t12957*t12958*t12879*t12888*4.5E2-C_k*a_1*t12841*t12784*t12875*t12876*(1.0E1/9.0)-C_k*a_2* \
               t12841*t12881*t12784*t12877*(2.0E1/9.0)+C_k*a_2*t12841*t12784*t12875*t12876*(2.0E1/9.0)+C_k*a_3*t12841* \
               t12881*t12784*t12877*(1.0E1/3.0)-C_k*a_4*t12841*t12784*t12883*t12878*(4.0E1/9.0)+C_k*a_5*t12841*t12784* \
               t12883*t12878*(5.0E1/9.0)-C_k*a_8*t12841*t12784*t12887*t12879*(8.0E1/9.0)+C_k*a_9*t12841*t12784*t12887* \
               t12879*1.0E1-C_k*a_10*t12841*t12880*t12784*t12877*t12879*(1.0E2/9.0)+C_k*a_11*t12841*t12880*t12784* \
               t12877*t12879*(1.1E2/9.0)+C_k*a_10*t12841*t12784*t12875*t12879*t12888*(1.0E2/9.0)-C_k*a_3*t12841*t12882* \
               t12784*t12875*t12877*(1.0E1/3.0)+C_k*a_4*t12841*t12882*t12784*t12875*t12877*(4.0E1/9.0)-C_k*a_5*t12841* \
               t12784*t12875*t12884*t12878*(5.0E1/9.0)+C_k*a_6*t12841*t12784*t12875*t12884*t12878*(2.0E1/3.0)-C_k* \
               a_6*t12841*t12784*t12885*t12877*t12878*(2.0E1/3.0)+C_k*a_7*t12841*t12784*t12885*t12877*t12878*(7.0E1/ \
               9.0)-C_k*a_9*t12841*t12784*t12875*t12879*t12888*1.0E1-a_10*t12880*t12875*t12956*t12957*t12958*t12879* \
               (5.0E3/9.0)+a_10*t12960*t12956*t12957*t12877*t12958*t12879*(2.75E3/9.0)+a_11*t12880*t12875*t12956* \
               t12957*t12958*t12879*(2.75E3/9.0)-a_11*t12960*t12956*t12957*t12877*t12958*t12879*(6.05E3/9.0)+a_3* \
               t12883*t12875*t12956*t12957*t12877*t12958*(1.0E2/3.0)-a_4*t12883*t12875*t12956*t12957*t12877*t12958* \
               (8.0E2/9.0)+a_5*t12883*t12875*t12956*t12957*t12877*t12958*(5.0E2/9.0)+a_5*t12875*t12956*t12885*t12957* \
               t12958*t12878*(2.5E2/3.0)-a_6*t12875*t12956*t12885*t12957*t12958*t12878*2.0E2+a_6*t12956*t12957*t12877* \
               t12886*t12958*t12878*(3.5E2/3.0)+a_7*t12875*t12956*t12885*t12957*t12958*t12878*(3.5E2/3.0)-a_7*t12956* \
               t12957*t12877*t12886*t12958*t12878*(2.45E3/9.0)+a_8*t12956*t12957*t12877*t12886*t12958*t12878*(1.4E3/ \
               9.0)+a_9*t12880*t12875*t12956*t12957*t12958*t12879*2.5E2+a_11*1/pow(t12874,1.3E1)*t12875*t12956*t12957* \
               t12877*t12958*t12879*(1.1E3/3.0)-C_k*a_11*t12841*t12960*t12784*t12875*t12877*t12879*(1.1E2/9.0)-C_k* \
               a_7*t12841*t12784*t12875*t12877*t12886*t12878*(7.0E1/9.0)+C_k*a_8*t12841*t12784*t12875*t12877*t12886* \
               t12878*(8.0E1/9.0)+a_7*t12875*t12956*t12957*t12877*t12958*t12878*t12887*(1.4E3/9.0)-a_8*t12875*t12956* \
               t12957*t12877*t12958*t12878*t12887*(3.2E3/9.0)+a_9*t12875*t12956*t12957*t12877*t12958*t12878*t12887* \
               2.0E2)-rho_b[index]*t12945*t12848*(-t12820+t12940+t12962)*2.0+rho_b[index]*t12916*t12848*(-t12929- \
               t12938+t12832*t12835*(t12929+t12938-t12812*t12813*t12814*t12935-t12917*t12926*t12838*1/(t12794*t12794* \
               t12794)*2.0+t12923*t12917*t12838*(b2f*c*t12924*(4.0/9.0)+b4f*t12790*t12827*(1.0E1/9.0)+b1f*c*t12802* \
               t12924*(2.0/9.0)+b3f*c*t12924*t12786*(2.0/3.0)-b1f*t12790*t12925*t12827*(1.0/3.6E1)+b3f*t12802*t12790* \
               t12827*(1.0/1.2E1))+t12803*1/(t12806*t12806)*t12926*t12838*1/(t12794*t12794*t12794*t12794)*(1.0/2.0) \
               -a1f*c*c0f*t12924*t12836*(8.0/9.0)-t12812*t12807*t12927*t12936*t12937*(1.0/2.0)+a1f*c*t12922*t12923* \
               t12917*t12795*(2.0/3.0)-a1p*c*t12813*t12814*t12819*t12795*(2.0/3.0))+t12812*t12813*t12814*t12935+t12812* \
               t12807*t12927*t12936*t12937*(1.0/2.0)+a1p*c*t12813*t12814*t12819*t12795*(2.0/3.0))+kp*t12963*t12946* \
               t12977*t12986*2.0+gamma_bb[index]*t12840*t12841*t12843*t12945*t12979*(1.0/4.0)+kp*rho_b[index]*t12963* \
               t12946*t12986*t12998*2.0+gamma_bb[index]*t12840*t12841*t12843*t12916*(-t12820+t12940+t12962)*(1.0/ \
               4.0)-kp*rho_b[index]*t12963*t12946*t12977*(gamma_bb[index]*mu_*t12964*t12947*t12965*t12948*(4.0/3.0) \
               +gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t12951*t12947*t12948* \
               (3.0/2.0)+gamma_bb[index]*mu_*1/pow(t12950,8.0/3.0)*t12947*t12948*t12949*(1.0E1/9.0))+kp*rho_b[index]* \
               1/(t12953*t12953*t12953)*t12946*t12977*(t12986*t12986)*2.0;
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t10306 = 1/(k*k);
                double t10307 = 1/kp;
                double t10308 = rho_a[index]*2.0;
                double t10309 = 1/(rho_a[index]*rho_a[index]);
                double t10310 = 1/pow(t10308,2.0/3.0);
                double t10311 = pow(rho_a[index],5.0/3.0);
                double t10312 = 1/tau_a[index];
                double t10313 = C_k*t10311*t10312;
                double t10314 = t10313-1.0;
                double t10315 = t10314*t10314;
                double t10316 = t10315*t10315;
                double t10317 = t10316*t10316;
                double t10318 = t10313+1.0;
                double t10319 = gamma_aa[index]*mu_*t10310*t10306*t10307*t10309*(1.0/4.0);
                double t10320 = t10319+1.0;
                double t10321 = 1/(t10320*t10320);
                double t10322 = 1/t10318;
                double t10323 = a_1*t10322*t10314;
                double t10324 = 1/pow(t10318,1.0E1);
                double t10325 = a_10*t10315*t10324*t10317;
                double t10326 = 1/pow(t10318,1.1E1);
                double t10327 = a_11*t10314*t10315*t10317*t10326;
                double t10328 = 1/(t10318*t10318);
                double t10329 = a_2*t10315*t10328;
                double t10330 = 1/(t10318*t10318*t10318);
                double t10331 = a_3*t10330*t10314*t10315;
                double t10332 = 1/(t10318*t10318*t10318*t10318);
                double t10333 = a_4*t10332*t10316;
                double t10334 = 1/(t10318*t10318*t10318*t10318*t10318);
                double t10335 = a_5*t10314*t10316*t10334;
                double t10336 = 1/(t10318*t10318*t10318*t10318*t10318*t10318);
                double t10337 = a_6*t10315*t10316*t10336;
                double t10338 = 1/(t10318*t10318*t10318*t10318*t10318*t10318*t10318);
                double t10339 = a_7*t10314*t10315*t10316*t10338;
                double t10340 = 1/(t10318*t10318*t10318*t10318*t10318*t10318*t10318*t10318);
                double t10341 = a_8*t10340*t10317;
                double t10342 = 1/(t10318*t10318*t10318*t10318*t10318*t10318*t10318*t10318*t10318);
                double t10343 = a_9*t10314*t10342*t10317;
                double t10344 = t10331+t10323+t10341+t10333+t10325+t10343+t10335+t10327+t10337+t10329+t10339+1.0;
                double t10345 = pow(rho_a[index],2.0/3.0);
                double t10346 = 1/rho_a[index];
                double t10347 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
                double t10348 = 1/pow(t10308,5.0/3.0);
                double t10349 = rho_a[index]+rho_b[index];
                double t10350 = 1/pow(t10349,1.0/3.0);
                double t10351 = c*t10350;
                double t10352 = sqrt(t10351);
                double t10353 = b1p*t10352;
                double t10354 = pow(t10351,3.0/2.0);
                double t10355 = b3p*t10354;
                double t10356 = c*c;
                double t10357 = 1/pow(t10349,2.0/3.0);
                double t10358 = b4p*t10356*t10357;
                double t10359 = b2p*c*t10350;
                double t10360 = t10353+t10355+t10358+t10359;
                double t10361 = 1/pow(t10349,4.0/3.0);
                double t10362 = 1/c0p;
                double t10363 = 1/t10360;
                double t10364 = t10362*t10363*(1.0/2.0);
                double t10365 = t10364+1.0;
                double t10366 = a1p*c*t10350;
                double t10367 = t10366+1.0;
                double t10368 = rho_a[index]-rho_b[index];
                double t10369 = t10368*t10368;
                double t10370 = 1/t10349;
                double t10371 = t10370*t10368;
                double t10372 = two_13*2.0;
                double t10373 = t10372-2.0;
                double t10374 = 1/t10373;
                double t10375 = 1/c0f;
                double t10376 = b1f*t10352;
                double t10377 = b3f*t10354;
                double t10378 = b4f*t10356*t10357;
                double t10379 = b2f*c*t10350;
                double t10380 = t10376+t10377+t10378+t10379;
                double t10381 = 1/t10380;
                double t10382 = t10381*t10375*(1.0/2.0);
                double t10383 = t10382+1.0;
                double t10384 = log(t10383);
                double t10385 = a1f*c*t10350;
                double t10386 = t10385+1.0;
                double t10387 = log(t10365);
                double t10397 = c0f*t10384*t10386*2.0;
                double t10398 = c0p*t10367*t10387*2.0;
                double t10388 = t10397-t10398;
                double t10389 = t10371+1.0;
                double t10390 = pow(t10389,4.0/3.0);
                double t10391 = -t10371+1.0;
                double t10392 = pow(t10391,4.0/3.0);
                double t10393 = t10390+t10392-2.0;
                double t10394 = 1/(t10349*t10349);
                double t10425 = t10394*t10368;
                double t10395 = t10370-t10425;
                double t10396 = 1/(t10349*t10349*t10349*t10349);
                double t10399 = t10369*t10369;
                double t10400 = 1/pow(t10349,5.0/3.0);
                double t10401 = 1/sqrt(t10351);
                double t10402 = 1/t10365;
                double t10403 = 1/(t10360*t10360);
                double t10404 = b4p*t10400*t10356*(2.0/3.0);
                double t10405 = b2p*c*t10361*(1.0/3.0);
                double t10406 = b1p*c*t10401*t10361*(1.0/6.0);
                double t10407 = b3p*c*t10352*t10361*(1.0/2.0);
                double t10408 = t10404+t10405+t10406+t10407;
                double t10409 = t10402*t10403*t10408*t10367;
                double t10410 = 1/(t10349*t10349*t10349*t10349*t10349);
                double t10411 = 1/d2fz0;
                double t10412 = 1/Aa;
                double t10413 = b1a*t10352;
                double t10414 = b3a*t10354;
                double t10415 = b4a*t10356*t10357;
                double t10416 = b2a*c*t10350;
                double t10417 = t10413+t10414+t10415+t10416;
                double t10418 = 1/t10417;
                double t10419 = t10412*t10418*(1.0/2.0);
                double t10420 = t10419+1.0;
                double t10421 = log(t10420);
                double t10422 = a1a*c*t10350;
                double t10423 = t10422+1.0;
                double t10424 = pow(t10389,1.0/3.0);
                double t10426 = t10424*t10395*(4.0/3.0);
                double t10427 = pow(t10391,1.0/3.0);
                double t10428 = t10426-t10427*t10395*(4.0/3.0);
                double t10429 = t10396*t10399;
                double t10430 = t10429-1.0;
                double t10431 = 1/pow(rho_a[index],1.0/3.0);
                double t10432 = c*t10431;
                double t10433 = sqrt(t10432);
                double t10434 = b1f*t10433;
                double t10435 = pow(t10432,3.0/2.0);
                double t10436 = b3f*t10435;
                double t10437 = 1/pow(rho_a[index],2.0/3.0);
                double t10438 = b4f*t10356*t10437;
                double t10439 = b2f*c*t10431;
                double t10440 = t10434+t10436+t10438+t10439;
                double t10441 = 1/pow(rho_a[index],4.0/3.0);
                double t10442 = b1p*t10433;
                double t10443 = b3p*t10435;
                double t10444 = b4p*t10356*t10437;
                double t10445 = b2p*c*t10431;
                double t10446 = t10442+t10443+t10444+t10445;
                double t10447 = 1/pow(rho_a[index],5.0/3.0);
                double t10448 = 1/sqrt(t10432);
                double t10449 = 1/t10440;
                double t10450 = t10375*t10449*(1.0/2.0);
                double t10451 = t10450+1.0;
                double t10452 = 1/t10446;
                double t10453 = t10362*t10452*(1.0/2.0);
                double t10454 = t10453+1.0;
                double t10455 = a1p*c*t10431;
                double t10456 = t10455+1.0;
                double t10457 = 1/t10454;
                double t10458 = 1/(t10446*t10446);
                double t10459 = b4p*t10356*t10447*(2.0/3.0);
                double t10460 = b2p*c*t10441*(1.0/3.0);
                double t10461 = b1p*c*t10441*t10448*(1.0/6.0);
                double t10462 = b3p*c*t10441*t10433*(1.0/2.0);
                double t10463 = t10460+t10461+t10462+t10459;
                double t10464 = t10463*t10456*t10457*t10458;
                double t10465 = log(t10454);
                double t10466 = pow(2.0,1.0/3.0);
                double t10467 = t10466*2.0;
                double t10468 = t10467-2.0;
                double t10469 = log(t10451);
                double t10470 = a1f*c*t10431;
                double t10471 = t10470+1.0;
                double t10472 = 1/pow(rho_a[index],8.0/3.0);
                double t10473 = gamma_aa[index]*t10472*(1.0/2.0);
                double t10474 = 1/pow(rho_b[index],8.0/3.0);
                double t10475 = gamma_bb[index]*t10474*(1.0/2.0);
                double t10476 = t10473+t10475;
                double t10477 = gcab*t10476;
                double t10478 = t10477+1.0;
                double t10479 = gcab*gcab;
                double t10480 = t10476*t10476;
                double t10481 = t10479*t10479;
                double t10482 = t10480*t10480;
                double t10483 = t10480*t10479;
                double t10484 = gcab*t10476*2.0;
                double t10485 = t10483+t10484+1.0;
                double t10486 = t10480*t10479*3.0;
                double t10487 = gcab*t10480*t10476*t10479;
                double t10488 = gcab*t10476*3.0;
                double t10489 = t10486+t10487+t10488+1.0;
                double t10490 = t10480*t10479*6.0;
                double t10491 = gcab*t10480*t10476*t10479*4.0;
                double t10492 = t10481*t10482;
                double t10493 = gcab*t10476*4.0;
                double t10494 = t10490+t10491+t10492+t10493+1.0;
                double t10495 = c0f*t10471*t10469*2.0;
                double t10497 = c0p*t10456*t10465*2.0;
                double t10496 = t10495-t10497;
                double t10498 = 1/pow(rho_b[index],1.0/3.0);
                double t10499 = c*t10498;
                double t10500 = sqrt(t10499);
                double t10501 = pow(t10499,3.0/2.0);
                double t10502 = 1/pow(rho_b[index],2.0/3.0);
                double t10503 = b1p*t10500;
                double t10504 = b3p*t10501;
                double t10505 = b4p*t10502*t10356;
                double t10506 = b2p*c*t10498;
                double t10507 = t10503+t10504+t10505+t10506;
                double t10508 = 1/t10507;
                double t10509 = t10362*t10508*(1.0/2.0);
                double t10510 = t10509+1.0;
                double t10511 = log(t10510);
                double t10512 = a1p*c*t10498;
                double t10513 = t10512+1.0;
                double t10514 = c0p*t10511*t10513*2.0;
                double t10515 = t10374*t10393*t10396*t10388*t10399;
                double t10516 = Aa*t10411*t10421*t10430*t10423*t10374*t10393*2.0;
                double t10517 = 1/t10478;
                double t10518 = 1/pow(rho_a[index],1.1E1/3.0);
                double t10519 = 1/(t10478*t10478);
                double t10520 = 1/t10485;
                double t10521 = 1/(t10489*t10489);
                double t10522 = 1/pow(rho_a[index],1.9E1/3.0);
                double t10523 = 1/(t10485*t10485);
                double t10524 = 1/t10489;
                double t10525 = 1/t10494;
                double t10526 = 1/(t10494*t10494);
                double t10527 = gcab*t10472*2.0;
                double t10528 = t10472*t10476*t10479*6.0;
                double t10529 = gcab*t10480*t10472*t10479*6.0;
                double t10530 = t10480*t10472*t10481*t10476*2.0;
                double t10531 = t10530+t10527+t10528+t10529;
                double t10532 = gamma_aa[index]*gcab*t10518*(8.0/3.0);
                double t10533 = gamma_aa[index]*t10518*t10476*t10479*(8.0/3.0);
                double t10534 = t10532+t10533;
                double t10535 = gcab*t10472;
                double t10536 = t10472*t10476*t10479;
                double t10537 = t10535+t10536;
                double t10538 = gamma_aa[index]*gcab*t10518*(1.6E1/3.0);
                double t10539 = gamma_aa[index]*gcab*t10480*t10518*t10479*1.6E1;
                double t10540 = gamma_aa[index]*t10480*t10481*t10518*t10476*(1.6E1/3.0);
                double t10541 = gamma_aa[index]*t10518*t10476*t10479*1.6E1;
                double t10542 = t10540+t10541+t10538+t10539;
                double t10543 = gcab*t10472*(3.0/2.0);
                double t10544 = t10472*t10476*t10479*3.0;
                double t10545 = gcab*t10480*t10472*t10479*(3.0/2.0);
                double t10546 = t10543+t10544+t10545;
                double t10547 = gamma_aa[index]*gcab*t10518*4.0;
                double t10548 = gamma_aa[index]*gcab*t10480*t10518*t10479*4.0;
                double t10549 = gamma_aa[index]*t10518*t10476*t10479*8.0;
                double t10550 = t10547+t10548+t10549;
                double t10551 = t10374*t10468*t10496;
                double t10552 = t10551+t10497;
                double t10553 = gamma_aa[index]*gamma_aa[index];
                double t10554 = gcaa*gcaa;
                double t10555 = t10554*t10554;
                double t10556 = 1/pow(rho_a[index],3.2E1/3.0);
                double t10557 = 1/pow(rho_a[index],1.6E1/3.0);
                double t10558 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t10559 = gamma_aa[index]*gcaa*t10472;
                double t10560 = t10559+1.0;
                double t10561 = gamma_aa[index]*gcaa*t10472*3.0;
                double t10562 = gamma_aa[index]*gcaa*t10553*t10554*t10558;
                double t10563 = t10553*t10554*t10557*3.0;
                double t10564 = t10561+t10562+t10563+1.0;
                double t10565 = t10553*t10553;
                double t10566 = gamma_aa[index]*gcaa*t10472*4.0;
                double t10567 = gamma_aa[index]*gcaa*t10553*t10554*t10558*4.0;
                double t10568 = t10553*t10554*t10557*6.0;
                double t10569 = t10555*t10556*t10565;
                double t10570 = t10566+t10567+t10568+t10569+1.0;
                double t10571 = gamma_aa[index]*gcaa*t10472*2.0;
                double t10572 = t10553*t10554*t10557;
                double t10573 = t10571+t10572+1.0;
                double t10574 = tau_a[index]-1.0/1.0E20;
                double t10575 = ( (t10574 > 0.0) ?  1.0 : 0.0 ) ;
                double t10576 = tau_a[index]*2.0;
                double t10616 = gamma_aa[index]*t10346*(1.0/4.0);
                double t10577 = -t10616+t10576;
                double t10578 = t10312*t10577*(1.0/2.0);
                double t10579 = t10578-1.0;
                double t10580 = t10575*t10579;
                double t10581 = t10580+1.0;
                double t10582 = 1/t10560;
                double t10583 = 1/t10570;
                double t10584 = 1/t10573;
                double t10585 = 1/t10564;
                double t10586 = 1/(t10560*t10560);
                double t10587 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t10588 = 1/(t10564*t10564);
                double t10589 = 1/(t10573*t10573);
                double t10590 = gcaa*t10472*3.0;
                double t10591 = gamma_aa[index]*t10554*t10557*6.0;
                double t10592 = gcaa*t10553*t10554*t10558*3.0;
                double t10593 = t10590+t10591+t10592;
                double t10594 = 1/pow(rho_a[index],3.5E1/3.0);
                double t10595 = 1/(t10570*t10570);
                double t10596 = gcaa*t10472*4.0;
                double t10597 = gamma_aa[index]*t10554*t10557*1.2E1;
                double t10598 = gcaa*t10553*t10554*t10558*1.2E1;
                double t10599 = gamma_aa[index]*t10553*t10555*t10556*4.0;
                double t10600 = t10596+t10597+t10598+t10599;
                double t10601 = gcaa*t10472*2.0;
                double t10602 = gamma_aa[index]*t10554*t10557*2.0;
                double t10603 = t10601+t10602;
                double t10604 = gamma_aa[index]*gcaa*t10518*(1.6E1/3.0);
                double t10605 = t10522*t10553*t10554*(1.6E1/3.0);
                double t10606 = t10604+t10605;
                double t10607 = gamma_aa[index]*gcaa*t10518*8.0;
                double t10608 = gamma_aa[index]*gcaa*t10553*t10554*t10587*8.0;
                double t10609 = t10522*t10553*t10554*1.6E1;
                double t10610 = t10607+t10608+t10609;
                double t10611 = gamma_aa[index]*gcaa*t10518*(3.2E1/3.0);
                double t10612 = gamma_aa[index]*gcaa*t10553*t10554*t10587*3.2E1;
                double t10613 = t10522*t10553*t10554*3.2E1;
                double t10614 = t10555*t10565*t10594*(3.2E1/3.0);
                double t10615 = t10611+t10612+t10613+t10614;
                double t10617 = 1/t10451;
                double t10618 = 1/(t10440*t10440);
                double t10619 = b4f*t10356*t10447*(2.0/3.0);
                double t10620 = b2f*c*t10441*(1.0/3.0);
                double t10621 = b1f*c*t10441*t10448*(1.0/6.0);
                double t10622 = b3f*c*t10441*t10433*(1.0/2.0);
                double t10623 = t10620+t10621+t10622+t10619;
                double t10624 = a1f*c*c0f*t10441*t10469*(2.0/3.0);
                double t10625 = a1p*c*c0p*t10441*t10465*(2.0/3.0);
                double t10626 = ccaa1*gcaa*t10472*t10582;
                double t10627 = ccaa4*gamma_aa[index]*t10553*t10555*t10556*t10583*4.0;
                double t10628 = ccaa2*gamma_aa[index]*t10554*t10557*t10584*2.0;
                double t10629 = ccaa3*gcaa*t10553*t10554*t10558*t10585*3.0;
                double t10634 = ccaa1*gamma_aa[index]*t10554*t10557*t10586;
                double t10635 = ccaa3*gamma_aa[index]*gcaa*t10553*t10554*t10593*t10558*t10588;
                double t10636 = ccaa4*t10600*t10555*t10556*t10565*t10595;
                double t10637 = ccaa2*t10603*t10553*t10554*t10557*t10589;
                double t10630 = -t10634+t10626-t10635+t10627-t10636+t10628-t10637+t10629;
                double t10631 = t10624-t10625+t10464-t10623*t10471*t10617*t10618;
                double t10632 = t10631*t10374*t10468;
                double t10633 = t10632+t10625-t10464;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t10552+rho_b[index]*(t10514-t10374*t10468*(t10514-c0f*log((t10375* \
                   (1.0/2.0))/(b1f*t10500+b3f*t10501+b2f*c*t10498+b4f*t10502*t10356)+1.0)*(a1f*c*t10498+1.0)*2.0))-t10349* \
                   (t10515+t10516+t10398))*(ccab1*gcab*t10517*t10518*(4.0/3.0)-ccab2*t10523*t10480*t10479*(gcab*t10518* \
                   (8.0/3.0)+gamma_aa[index]*t10522*t10479*(4.0/3.0)+t10518*t10476*t10479*(8.0/3.0))-ccab4*t10481*t10526* \
                   t10482*(gcab*t10518*(1.6E1/3.0)+gamma_aa[index]*t10522*t10479*8.0+t10518*t10476*t10479*1.6E1+gamma_aa[index]* \
                   t10522*t10480*t10481*8.0+gcab*t10480*t10518*t10479*1.6E1+t10480*t10481*t10518*t10476*(1.6E1/3.0)+gamma_aa[index]* \
                   gcab*t10522*t10476*t10479*1.6E1)+ccab2*gamma_aa[index]*t10520*t10522*t10479*(4.0/3.0)-ccab1*gamma_aa[index]* \
                   t10522*t10519*t10479*(4.0/3.0)+ccab2*t10520*t10518*t10476*t10479*(8.0/3.0)-ccab1*t10518*t10519*t10476* \
                   t10479*(4.0/3.0)+ccab4*t10480*t10525*t10481*t10518*t10476*(1.6E1/3.0)-ccab2*t10523*t10534*t10472*t10476* \
                   t10479+ccab4*t10531*t10542*t10481*t10482*1/(t10494*t10494*t10494)*2.0+ccab2*t10480*t10534*t10537*1/ \
                   (t10485*t10485*t10485)*t10479*2.0+ccab4*gamma_aa[index]*t10522*t10480*t10525*t10481*8.0+ccab3*gcab* \
                   t10524*t10480*t10518*t10479*4.0+ccab3*gamma_aa[index]*gcab*t10522*t10524*t10476*t10479*4.0-ccab2*gamma_aa[index]* \
                   t10523*t10518*t10537*t10476*t10479*(8.0/3.0)-ccab3*gcab*t10521*t10550*t10480*t10472*t10479*(3.0/2.0) \
                   -ccab4*t10542*t10480*t10472*t10481*t10526*t10476*2.0-ccab3*gcab*t10521*t10480*t10476*t10479*(gcab* \
                   t10518*4.0+gamma_aa[index]*t10522*t10479*4.0+t10518*t10476*t10479*8.0+gcab*t10480*t10518*t10479*4.0+ \
                   gamma_aa[index]*gcab*t10522*t10476*t10479*4.0)+ccab1*gamma_aa[index]*gcab*t10522*t10476*1/(t10478* \
                   t10478*t10478)*t10479*(4.0/3.0)+ccab3*gcab*t10550*t10480*t10546*t10476*t10479*1/(t10489*t10489*t10489) \
                   *2.0-ccab3*gamma_aa[index]*gcab*t10521*t10480*t10518*t10546*t10479*4.0-ccab4*gamma_aa[index]*t10531* \
                   t10480*t10481*t10526*t10518*t10476*(1.6E1/3.0))-(X-1.0)*(-kp*rho_a[index]*t10321*t10344*(mu_*t10310* \
                   t10306*t10307*t10347*(1.0/2.0)+mu_*t10306*t10307*t10309*t10348*(1.0/3.0))+mu_*t10310*t10321*t10306* \
                   t10344*t10309*(1.0/4.0)+mu_*t10310*t10321*t10306*t10346*(C_k*a_1*t10312*t10322*t10345*(5.0/3.0)-C_k* \
                   a_1*t10312*t10314*t10345*t10328*(5.0/3.0)-C_k*a_2*t10312*t10330*t10315*t10345*(1.0E1/3.0)+C_k*a_2* \
                   t10312*t10314*t10345*t10328*(1.0E1/3.0)+C_k*a_3*t10312*t10330*t10315*t10345*5.0-C_k*a_4*t10312*t10316* \
                   t10334*t10345*(2.0E1/3.0)+C_k*a_5*t10312*t10316*t10334*t10345*(2.5E1/3.0)-C_k*a_8*t10312*t10342*t10317* \
                   t10345*(4.0E1/3.0)+C_k*a_9*t10312*t10342*t10317*t10345*1.5E1+C_k*a_10*t10312*t10314*t10324*t10317* \
                   t10345*(5.0E1/3.0)-C_k*a_10*t10312*t10315*t10317*t10326*t10345*(5.0E1/3.0)+C_k*a_11*t10312*t10315* \
                   t10317*t10326*t10345*(5.5E1/3.0)-C_k*a_3*t10312*t10314*t10332*t10315*t10345*5.0+C_k*a_4*t10312*t10314* \
                   t10332*t10315*t10345*(2.0E1/3.0)-C_k*a_5*t10312*t10314*t10316*t10336*t10345*(2.5E1/3.0)+C_k*a_6*t10312* \
                   t10314*t10316*t10336*t10345*1.0E1-C_k*a_6*t10312*t10315*t10316*t10345*t10338*1.0E1+C_k*a_7*t10312* \
                   t10315*t10316*t10345*t10338*(3.5E1/3.0)-C_k*a_9*t10312*t10314*t10324*t10317*t10345*1.5E1-C_k*a_11* \
                   t10312*t10314*t10315*t10317*1/pow(t10318,1.2E1)*t10345*(5.5E1/3.0)-C_k*a_7*t10312*t10340*t10314*t10315* \
                   t10316*t10345*(3.5E1/3.0)+C_k*a_8*t10312*t10340*t10314*t10315*t10316*t10345*(4.0E1/3.0))*(1.0/4.0) \
                   +mu_*t10310*1/(t10320*t10320*t10320)*t10306*t10344*t10346*(gamma_aa[index]*mu_*t10310*t10306*t10307* \
                   t10347*(1.0/2.0)+gamma_aa[index]*mu_*t10306*t10307*t10309*t10348*(1.0/3.0))*(1.0/2.0))-(t10515+t10516+ \
                   t10398+t10349*(t10409-t10374*t10393*t10396*t10399*(t10409-(1/(t10380*t10380)*t10386*(b2f*c*t10361* \
                   (1.0/3.0)+b4f*t10400*t10356*(2.0/3.0)+b1f*c*t10401*t10361*(1.0/6.0)+b3f*c*t10352*t10361*(1.0/2.0)) \
                   )/t10383+a1f*c*c0f*t10361*t10384*(2.0/3.0)-a1p*c*c0p*t10361*t10387*(2.0/3.0))-a1p*c*c0p*t10361*t10387* \
                   (2.0/3.0)-t10410*t10374*t10393*t10388*t10399*4.0+t10374*t10428*t10396*t10388*t10399+t10374*t10393* \
                   t10368*t10369*t10396*t10388*4.0-Aa*t10411*t10421*t10423*t10374*t10393*(t10410*t10399*4.0-t10368*t10369* \
                   t10396*4.0)*2.0+Aa*t10411*t10421*t10430*t10423*t10374*t10428*2.0+(t10411*t10430*t10423*1/(t10417*t10417) \
                   *t10374*t10393*(b2a*c*t10361*(1.0/3.0)+b4a*t10400*t10356*(2.0/3.0)+b1a*c*t10401*t10361*(1.0/6.0)+b3a* \
                   c*t10352*t10361*(1.0/2.0)))/t10420-Aa*a1a*c*t10411*t10421*t10430*t10361*t10374*t10393*(2.0/3.0))+rho_a[index]* \
                   (t10625-t10464+t10374*t10468*(t10624+t10464-t10623*t10471*t10617*t10618-a1p*c*c0p*t10441*t10465*(2.0/ \
                   3.0)))-c0p*t10456*t10465*2.0-t10374*t10468*t10496)*(ccab1*gcab*t10472*t10517*(1.0/2.0)-ccab4*t10531* \
                   t10481*t10526*t10482+ccab2*t10520*t10472*t10476*t10479-ccab2*t10523*t10480*t10537*t10479-ccab1*t10472* \
                   t10519*t10476*t10479*(1.0/2.0)+ccab4*t10480*t10525*t10472*t10481*t10476*2.0+ccab3*gcab*t10524*t10480* \
                   t10472*t10479*(3.0/2.0)-ccab3*gcab*t10521*t10480*t10546*t10476*t10479)-t10630*t10552*t10581+rho_a[index]* \
                   t10630*t10633*t10581-rho_a[index]*t10552*t10581*(ccaa1*gcaa*t10518*t10582*(-8.0/3.0)-ccaa2*gamma_aa[index]* \
                   t10522*t10554*t10584*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t10522*t10554*t10586*8.0+ccaa2*t10522*t10603* \
                   t10553*t10554*t10589*(1.6E1/3.0)+ccaa4*t10600*t10555*t10565*t10594*t10595*(3.2E1/3.0)+ccaa4*t10555* \
                   t10556*t10565*t10595*(gcaa*t10518*(3.2E1/3.0)+gamma_aa[index]*t10522*t10554*6.4E1+gamma_aa[index]* \
                   t10553*t10555*t10594*(1.28E2/3.0)+gcaa*t10553*t10554*t10587*9.6E1)-ccaa1*gcaa*1/(t10560*t10560*t10560) \
                   *t10553*t10554*t10587*(1.6E1/3.0)+ccaa2*t10553*t10554*t10557*t10589*(gcaa*t10518*(1.6E1/3.0)+gamma_aa[index]* \
                   t10522*t10554*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t10553*t10555*t10583*t10594*(1.28E2/3.0)+ccaa2*gamma_aa[index]* \
                   t10606*t10554*t10557*t10589*2.0-ccaa3*gcaa*t10553*t10554*t10585*t10587*2.4E1+ccaa4*gamma_aa[index]* \
                   t10615*t10553*t10555*t10556*t10595*4.0+ccaa3*gcaa*t10610*t10553*t10554*t10558*t10588*3.0-ccaa4*t10600* \
                   1/(t10570*t10570*t10570)*t10615*t10555*t10556*t10565*2.0-ccaa2*t10603*t10606*t10553*t10554*1/(t10573* \
                   t10573*t10573)*t10557*2.0+ccaa3*gamma_aa[index]*gcaa*t10553*t10554*t10558*t10588*(gcaa*t10518*8.0+ \
                   gamma_aa[index]*t10522*t10554*3.2E1+gcaa*t10553*t10554*t10587*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t10553* \
                   t10554*t10593*t10587*t10588*8.0-ccaa3*gamma_aa[index]*gcaa*t10610*t10553*t10554*1/(t10564*t10564*t10564) \
                   *t10593*t10558*2.0)-t10312*t10633*t10575*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t10472*t10582+ccaa2*t10553* \
                   t10554*t10557*t10584+ccaa4*t10555*t10556*t10565*t10583+ccaa3*gamma_aa[index]*gcaa*t10553*t10554*t10558* \
                   t10585)*(1.0/8.0)-t10312*t10552*t10575*(ccaa1*gamma_aa[index]*gcaa*t10518*t10582*(8.0/3.0)+ccaa2*t10522* \
                   t10553*t10554*t10584*(1.6E1/3.0)-ccaa1*t10522*t10553*t10554*t10586*(8.0/3.0)+ccaa4*t10555*t10565*t10583* \
                   t10594*(3.2E1/3.0)-ccaa2*t10606*t10553*t10554*t10557*t10589-ccaa4*t10615*t10555*t10556*t10565*t10595+ \
                   ccaa3*gamma_aa[index]*gcaa*t10553*t10554*t10585*t10587*8.0-ccaa3*gamma_aa[index]*gcaa*t10610*t10553* \
                   t10554*t10558*t10588)*(1.0/8.0)-gamma_aa[index]*t10312*t10630*t10552*t10346*t10575*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                double t14127 = 1/pow(rho_a[index],1.0/3.0);
                double t14128 = c*t14127;
                double t14129 = sqrt(t14128);
                double t14130 = pow(t14128,3.0/2.0);
                double t14131 = c*c;
                double t14132 = 1/pow(rho_a[index],2.0/3.0);
                double t14133 = 1/c0p;
                double t14134 = b1p*t14129;
                double t14135 = b3p*t14130;
                double t14136 = b4p*t14131*t14132;
                double t14137 = b2p*c*t14127;
                double t14138 = t14134+t14135+t14136+t14137;
                double t14139 = 1/t14138;
                double t14140 = t14133*t14139*(1.0/2.0);
                double t14141 = t14140+1.0;
                double t14142 = log(t14141);
                double t14143 = a1p*c*t14127;
                double t14144 = t14143+1.0;
                double t14145 = 1/pow(rho_a[index],8.0/3.0);
                double t14146 = gamma_aa[index]*gamma_aa[index];
                double t14147 = gcaa*gcaa;
                double t14148 = t14147*t14147;
                double t14149 = 1/pow(rho_a[index],3.2E1/3.0);
                double t14150 = 1/pow(rho_a[index],1.6E1/3.0);
                double t14151 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t14152 = gamma_aa[index]*gcaa*t14145;
                double t14153 = t14152+1.0;
                double t14154 = gamma_aa[index]*gcaa*t14145*3.0;
                double t14155 = gamma_aa[index]*gcaa*t14151*t14146*t14147;
                double t14156 = t14150*t14146*t14147*3.0;
                double t14157 = t14154+t14155+t14156+1.0;
                double t14158 = t14146*t14146;
                double t14159 = gamma_aa[index]*gcaa*t14145*4.0;
                double t14160 = gamma_aa[index]*gcaa*t14151*t14146*t14147*4.0;
                double t14161 = t14150*t14146*t14147*6.0;
                double t14162 = t14148*t14149*t14158;
                double t14163 = t14160+t14161+t14162+t14159+1.0;
                double t14164 = gamma_aa[index]*gcaa*t14145*2.0;
                double t14165 = t14150*t14146*t14147;
                double t14166 = t14164+t14165+1.0;
                double t14167 = pow(2.0,1.0/3.0);
                double t14168 = t14167*2.0;
                double t14169 = t14168-2.0;
                double t14170 = two_13*2.0;
                double t14171 = t14170-2.0;
                double t14172 = 1/t14171;
                double t14173 = 1/c0f;
                double t14174 = b1f*t14129;
                double t14175 = b3f*t14130;
                double t14176 = b4f*t14131*t14132;
                double t14177 = b2f*c*t14127;
                double t14178 = t14174+t14175+t14176+t14177;
                double t14179 = 1/t14178;
                double t14180 = t14173*t14179*(1.0/2.0);
                double t14181 = t14180+1.0;
                double t14182 = log(t14181);
                double t14183 = a1f*c*t14127;
                double t14184 = t14183+1.0;
                double t14185 = c0f*t14182*t14184*2.0;
                double t14186 = c0p*t14142*t14144*2.0;
                double t14187 = tau_a[index]-1.0/1.0E20;
                double t14188 = ( (t14187 > 0.0) ?  1.0 : 0.0 ) ;
                double t14189 = 1/tau_a[index];
                double t14190 = tau_a[index]*2.0;
                double t14191 = 1/rho_a[index];
                double t14236 = gamma_aa[index]*t14191*(1.0/4.0);
                double t14192 = t14190-t14236;
                double t14193 = t14192*t14189*(1.0/2.0);
                double t14194 = t14193-1.0;
                double t14195 = t14194*t14188;
                double t14196 = t14195+1.0;
                double t14197 = 1/t14153;
                double t14198 = 1/t14163;
                double t14199 = 1/t14166;
                double t14200 = 1/t14157;
                double t14201 = 1/pow(rho_a[index],1.9E1/3.0);
                double t14202 = 1/(t14153*t14153);
                double t14203 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t14204 = 1/pow(rho_a[index],1.1E1/3.0);
                double t14205 = 1/(t14157*t14157);
                double t14206 = 1/(t14166*t14166);
                double t14207 = gcaa*t14145*3.0;
                double t14208 = gamma_aa[index]*t14150*t14147*6.0;
                double t14209 = gcaa*t14151*t14146*t14147*3.0;
                double t14210 = t14207+t14208+t14209;
                double t14211 = 1/pow(rho_a[index],3.5E1/3.0);
                double t14212 = 1/(t14163*t14163);
                double t14213 = gcaa*t14145*4.0;
                double t14214 = gamma_aa[index]*t14150*t14147*1.2E1;
                double t14215 = gcaa*t14151*t14146*t14147*1.2E1;
                double t14216 = gamma_aa[index]*t14146*t14148*t14149*4.0;
                double t14217 = t14213+t14214+t14215+t14216;
                double t14218 = gcaa*t14145*2.0;
                double t14219 = gamma_aa[index]*t14150*t14147*2.0;
                double t14220 = t14218+t14219;
                double t14221 = gamma_aa[index]*gcaa*t14204*(1.6E1/3.0);
                double t14222 = t14201*t14146*t14147*(1.6E1/3.0);
                double t14223 = t14221+t14222;
                double t14224 = gamma_aa[index]*gcaa*t14204*8.0;
                double t14225 = gamma_aa[index]*gcaa*t14203*t14146*t14147*8.0;
                double t14226 = t14201*t14146*t14147*1.6E1;
                double t14227 = t14224+t14225+t14226;
                double t14228 = gamma_aa[index]*gcaa*t14204*(3.2E1/3.0);
                double t14229 = gamma_aa[index]*gcaa*t14203*t14146*t14147*3.2E1;
                double t14230 = t14201*t14146*t14147*3.2E1;
                double t14231 = t14211*t14148*t14158*(3.2E1/3.0);
                double t14232 = t14230+t14231+t14228+t14229;
                double t14233 = t14185-t14186;
                double t14234 = t14233*t14172*t14169;
                double t14235 = t14234+t14186;
                double t14237 = 1/pow(rho_a[index],4.0/3.0);
                double t14238 = 1/pow(rho_a[index],5.0/3.0);
                double t14239 = 1/sqrt(t14128);
                double t14240 = 1/t14141;
                double t14241 = 1/(t14138*t14138);
                double t14242 = b4p*t14131*t14238*(2.0/3.0);
                double t14243 = b2p*c*t14237*(1.0/3.0);
                double t14244 = b1p*c*t14237*t14239*(1.0/6.0);
                double t14245 = b3p*c*t14129*t14237*(1.0/2.0);
                double t14246 = t14242+t14243+t14244+t14245;
                double t14247 = t14240*t14241*t14144*t14246;
                double t14248 = ccaa1*gcaa*t14145*t14197;
                double t14249 = ccaa4*gamma_aa[index]*t14146*t14148*t14149*t14198*4.0;
                double t14250 = ccaa2*gamma_aa[index]*t14150*t14147*t14199*2.0;
                double t14251 = ccaa3*gcaa*t14200*t14151*t14146*t14147*3.0;
                double t14262 = ccaa1*gamma_aa[index]*t14202*t14150*t14147;
                double t14263 = ccaa3*gamma_aa[index]*gcaa*t14210*t14151*t14205*t14146*t14147;
                double t14264 = ccaa4*t14212*t14217*t14148*t14149*t14158;
                double t14265 = ccaa2*t14220*t14150*t14206*t14146*t14147;
                double t14252 = t14250+t14251-t14262-t14263-t14264-t14265+t14248+t14249;
                double t14253 = 1/t14181;
                double t14254 = 1/(t14178*t14178);
                double t14255 = b4f*t14131*t14238*(2.0/3.0);
                double t14256 = b2f*c*t14237*(1.0/3.0);
                double t14257 = b1f*c*t14237*t14239*(1.0/6.0);
                double t14258 = b3f*c*t14129*t14237*(1.0/2.0);
                double t14259 = t14255+t14256+t14257+t14258;
                double t14260 = a1f*c*c0f*t14182*t14237*(2.0/3.0);
                double t14261 = a1p*c*c0p*t14142*t14237*(2.0/3.0);
                double t14266 = 1/(k*k);
                double t14267 = 1/kp;
                double t14268 = rho_a[index]*2.0;
                double t14269 = 1/(rho_a[index]*rho_a[index]);
                double t14270 = 1/pow(t14268,2.0/3.0);
                double t14271 = pow(rho_a[index],5.0/3.0);
                double t14272 = C_k*t14271*t14189;
                double t14273 = t14272-1.0;
                double t14274 = t14273*t14273;
                double t14275 = t14274*t14274;
                double t14276 = t14275*t14275;
                double t14277 = t14272+1.0;
                double t14278 = gamma_aa[index]*mu_*t14270*t14266*t14267*t14269*(1.0/4.0);
                double t14279 = t14278+1.0;
                double t14280 = 1/(t14279*t14279);
                double t14281 = X-1.0;
                double t14282 = 1/t14277;
                double t14283 = pow(rho_a[index],2.0/3.0);
                double t14284 = 1/(t14277*t14277);
                double t14285 = 1/pow(t14277,1.0E1);
                double t14286 = 1/pow(t14277,1.1E1);
                double t14287 = 1/(t14277*t14277*t14277);
                double t14288 = 1/(t14277*t14277*t14277*t14277);
                double t14289 = 1/(t14277*t14277*t14277*t14277*t14277);
                double t14290 = 1/(t14277*t14277*t14277*t14277*t14277*t14277);
                double t14291 = 1/(t14277*t14277*t14277*t14277*t14277*t14277*t14277);
                double t14292 = 1/(t14277*t14277*t14277*t14277*t14277*t14277*t14277*t14277);
                double t14293 = 1/(t14277*t14277*t14277*t14277*t14277*t14277*t14277*t14277*t14277);
                double t14294 = a_1*t14273*t14282;
                double t14295 = a_10*t14274*t14276*t14285;
                double t14296 = a_11*t14273*t14274*t14276*t14286;
                double t14297 = a_2*t14274*t14284;
                double t14298 = a_3*t14273*t14274*t14287;
                double t14299 = a_4*t14275*t14288;
                double t14300 = a_5*t14273*t14275*t14289;
                double t14301 = a_6*t14290*t14274*t14275;
                double t14302 = a_7*t14273*t14291*t14274*t14275;
                double t14303 = a_8*t14292*t14276;
                double t14304 = a_9*t14273*t14293*t14276;
                double t14305 = t14300+t14301+t14302+t14303+t14304+t14294+t14295+t14296+t14297+t14298+t14299+1.0;
                double t14306 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
                double t14307 = 1/pow(t14268,5.0/3.0);
                v_rho_a_gamma_aa_[index] = -t14252*t14196*(t14186+t14172*t14169*(t14185-c0p*t14142*t14144*2.0))-t14188* \
                   t14189*(t14261-t14247+t14172*t14169*(t14260-t14261+t14247-t14253*t14254*t14184*t14259))*(ccaa0+ccaa1* \
                   gamma_aa[index]*gcaa*t14145*t14197+ccaa2*t14150*t14146*t14147*t14199+ccaa4*t14148*t14149*t14158*t14198+ \
                   ccaa3*gamma_aa[index]*gcaa*t14200*t14151*t14146*t14147)*(1.0/8.0)-rho_a[index]*t14235*t14196*(ccaa1* \
                   gcaa*t14204*t14197*(-8.0/3.0)+ccaa1*gamma_aa[index]*t14201*t14202*t14147*8.0-ccaa2*gamma_aa[index]* \
                   t14201*t14147*t14199*(3.2E1/3.0)+ccaa2*t14201*t14220*t14206*t14146*t14147*(1.6E1/3.0)+ccaa4*t14211* \
                   t14212*t14217*t14148*t14158*(3.2E1/3.0)+ccaa4*t14212*t14148*t14149*t14158*(gcaa*t14204*(3.2E1/3.0) \
                   +gamma_aa[index]*t14201*t14147*6.4E1+gamma_aa[index]*t14211*t14146*t14148*(1.28E2/3.0)+gcaa*t14203* \
                   t14146*t14147*9.6E1)-ccaa1*gcaa*t14203*1/(t14153*t14153*t14153)*t14146*t14147*(1.6E1/3.0)+ccaa2*t14150* \
                   t14206*t14146*t14147*(gcaa*t14204*(1.6E1/3.0)+gamma_aa[index]*t14201*t14147*(3.2E1/3.0))+ccaa2*gamma_aa[index]* \
                   t14150*t14223*t14206*t14147*2.0-ccaa4*gamma_aa[index]*t14211*t14146*t14148*t14198*(1.28E2/3.0)-ccaa3* \
                   gcaa*t14200*t14203*t14146*t14147*2.4E1+ccaa4*gamma_aa[index]*t14212*t14232*t14146*t14148*t14149*4.0+ \
                   ccaa3*gcaa*t14151*t14205*t14146*t14227*t14147*3.0-ccaa2*t14220*t14150*t14223*t14146*t14147*1/(t14166* \
                   t14166*t14166)*2.0-ccaa4*t14232*1/(t14163*t14163*t14163)*t14217*t14148*t14149*t14158*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t14151*t14205*t14146*t14147*(gcaa*t14204*8.0+gamma_aa[index]*t14201*t14147*3.2E1+gcaa*t14203* \
                   t14146*t14147*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t14210*t14203*t14205*t14146*t14147*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*t14210*t14151*t14146*t14227*t14147*1/(t14157*t14157*t14157)*2.0)+rho_a[index]*t14252*t14196*(t14261- \
                   t14247+t14172*t14169*(t14260+t14247-t14253*t14254*t14184*t14259-a1p*c*c0p*t14142*t14237*(2.0/3.0)) \
                   )-t14235*t14188*t14189*(ccaa1*gamma_aa[index]*gcaa*t14204*t14197*(8.0/3.0)-ccaa1*t14201*t14202*t14146* \
                   t14147*(8.0/3.0)+ccaa2*t14201*t14146*t14147*t14199*(1.6E1/3.0)+ccaa4*t14211*t14148*t14158*t14198*(3.2E1/ \
                   3.0)-ccaa2*t14150*t14223*t14206*t14146*t14147-ccaa4*t14212*t14232*t14148*t14149*t14158+ccaa3*gamma_aa[index]* \
                   gcaa*t14200*t14203*t14146*t14147*8.0-ccaa3*gamma_aa[index]*gcaa*t14151*t14205*t14146*t14227*t14147) \
                   *(1.0/8.0)-gamma_aa[index]*t14252*t14235*t14191*t14188*t14189*(1.0/8.0)+kp*rho_a[index]*t14305*t14280* \
                   t14281*(mu_*t14270*t14306*t14266*t14267*(1.0/2.0)+mu_*t14307*t14266*t14267*t14269*(1.0/3.0))-mu_*t14305* \
                   t14270*t14280*t14281*t14266*t14269*(1.0/4.0)-mu_*t14270*t14280*t14191*t14281*t14266*(C_k*a_1*t14282* \
                   t14283*t14189*(5.0/3.0)-C_k*a_1*t14273*t14283*t14284*t14189*(5.0/3.0)+C_k*a_2*t14273*t14283*t14284* \
                   t14189*(1.0E1/3.0)-C_k*a_2*t14274*t14283*t14287*t14189*(1.0E1/3.0)+C_k*a_3*t14274*t14283*t14287*t14189* \
                   5.0-C_k*a_4*t14283*t14275*t14189*t14289*(2.0E1/3.0)+C_k*a_5*t14283*t14275*t14189*t14289*(2.5E1/3.0) \
                   -C_k*a_8*t14283*t14293*t14276*t14189*(4.0E1/3.0)+C_k*a_9*t14283*t14293*t14276*t14189*1.5E1+C_k*a_10* \
                   t14273*t14283*t14276*t14285*t14189*(5.0E1/3.0)-C_k*a_10*t14274*t14283*t14276*t14286*t14189*(5.0E1/ \
                   3.0)+C_k*a_11*t14274*t14283*t14276*t14286*t14189*(5.5E1/3.0)-C_k*a_3*t14273*t14274*t14283*t14189*t14288* \
                   5.0+C_k*a_4*t14273*t14274*t14283*t14189*t14288*(2.0E1/3.0)-C_k*a_5*t14290*t14273*t14283*t14275*t14189* \
                   (2.5E1/3.0)+C_k*a_6*t14290*t14273*t14283*t14275*t14189*1.0E1-C_k*a_6*t14291*t14274*t14283*t14275*t14189* \
                   1.0E1+C_k*a_7*t14291*t14274*t14283*t14275*t14189*(3.5E1/3.0)-C_k*a_9*t14273*t14283*t14276*t14285*t14189* \
                   1.5E1-C_k*a_11*t14273*t14274*t14283*t14276*1/pow(t14277,1.2E1)*t14189*(5.5E1/3.0)-C_k*a_7*t14273*t14274* \
                   t14283*t14292*t14275*t14189*(3.5E1/3.0)+C_k*a_8*t14273*t14274*t14283*t14292*t14275*t14189*(4.0E1/3.0) \
                   )*(1.0/4.0)-mu_*t14305*t14270*t14191*t14281*t14266*1/(t14279*t14279*t14279)*(gamma_aa[index]*mu_*t14270* \
                   t14306*t14266*t14267*(1.0/2.0)+gamma_aa[index]*mu_*t14307*t14266*t14267*t14269*(1.0/3.0))*(1.0/2.0) \
                   ;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t10640 = rho_a[index]+rho_b[index];
                double t10641 = 1/pow(t10640,1.0/3.0);
                double t10642 = c*t10641;
                double t10643 = sqrt(t10642);
                double t10644 = b1p*t10643;
                double t10645 = pow(t10642,3.0/2.0);
                double t10646 = b3p*t10645;
                double t10647 = c*c;
                double t10648 = 1/pow(t10640,2.0/3.0);
                double t10649 = b4p*t10647*t10648;
                double t10650 = b2p*c*t10641;
                double t10651 = t10650+t10644+t10646+t10649;
                double t10652 = 1/pow(t10640,4.0/3.0);
                double t10653 = 1/c0p;
                double t10654 = 1/t10651;
                double t10655 = t10653*t10654*(1.0/2.0);
                double t10656 = t10655+1.0;
                double t10657 = a1p*c*t10641;
                double t10658 = t10657+1.0;
                double t10659 = rho_a[index]-rho_b[index];
                double t10660 = t10659*t10659;
                double t10661 = 1/t10640;
                double t10662 = t10661*t10659;
                double t10663 = two_13*2.0;
                double t10664 = t10663-2.0;
                double t10665 = 1/t10664;
                double t10666 = 1/c0f;
                double t10667 = b1f*t10643;
                double t10668 = b3f*t10645;
                double t10669 = b4f*t10647*t10648;
                double t10670 = b2f*c*t10641;
                double t10671 = t10670+t10667+t10668+t10669;
                double t10672 = 1/t10671;
                double t10673 = t10672*t10666*(1.0/2.0);
                double t10674 = t10673+1.0;
                double t10675 = log(t10674);
                double t10676 = a1f*c*t10641;
                double t10677 = t10676+1.0;
                double t10678 = log(t10656);
                double t10688 = c0f*t10675*t10677*2.0;
                double t10689 = c0p*t10658*t10678*2.0;
                double t10679 = t10688-t10689;
                double t10680 = t10662+1.0;
                double t10681 = pow(t10680,4.0/3.0);
                double t10682 = -t10662+1.0;
                double t10683 = pow(t10682,4.0/3.0);
                double t10684 = t10681+t10683-2.0;
                double t10685 = 1/(t10640*t10640);
                double t10716 = t10685*t10659;
                double t10686 = t10661-t10716;
                double t10687 = 1/(t10640*t10640*t10640*t10640);
                double t10690 = t10660*t10660;
                double t10691 = 1/pow(t10640,5.0/3.0);
                double t10692 = 1/sqrt(t10642);
                double t10693 = 1/t10656;
                double t10694 = 1/(t10651*t10651);
                double t10695 = b4p*t10691*t10647*(2.0/3.0);
                double t10696 = b2p*c*t10652*(1.0/3.0);
                double t10697 = b1p*c*t10652*t10692*(1.0/6.0);
                double t10698 = b3p*c*t10643*t10652*(1.0/2.0);
                double t10699 = t10695+t10696+t10697+t10698;
                double t10700 = t10693*t10658*t10694*t10699;
                double t10701 = 1/(t10640*t10640*t10640*t10640*t10640);
                double t10702 = 1/d2fz0;
                double t10703 = 1/Aa;
                double t10704 = b1a*t10643;
                double t10705 = b3a*t10645;
                double t10706 = b4a*t10647*t10648;
                double t10707 = b2a*c*t10641;
                double t10708 = t10704+t10705+t10706+t10707;
                double t10709 = 1/t10708;
                double t10710 = t10703*t10709*(1.0/2.0);
                double t10711 = t10710+1.0;
                double t10712 = log(t10711);
                double t10713 = a1a*c*t10641;
                double t10714 = t10713+1.0;
                double t10715 = pow(t10680,1.0/3.0);
                double t10717 = t10715*t10686*(4.0/3.0);
                double t10718 = pow(t10682,1.0/3.0);
                double t10719 = t10717-t10718*t10686*(4.0/3.0);
                double t10720 = t10690*t10687;
                double t10721 = t10720-1.0;
                double t10722 = 1/pow(rho_a[index],1.0/3.0);
                double t10723 = c*t10722;
                double t10724 = sqrt(t10723);
                double t10725 = b1f*t10724;
                double t10726 = pow(t10723,3.0/2.0);
                double t10727 = b3f*t10726;
                double t10728 = 1/pow(rho_a[index],2.0/3.0);
                double t10729 = b4f*t10647*t10728;
                double t10730 = b2f*c*t10722;
                double t10731 = t10730+t10725+t10727+t10729;
                double t10732 = 1/pow(rho_a[index],4.0/3.0);
                double t10733 = b1p*t10724;
                double t10734 = b3p*t10726;
                double t10735 = b4p*t10647*t10728;
                double t10736 = b2p*c*t10722;
                double t10737 = t10733+t10734+t10735+t10736;
                double t10738 = 1/pow(rho_a[index],5.0/3.0);
                double t10739 = 1/sqrt(t10723);
                double t10740 = 1/t10731;
                double t10741 = t10740*t10666*(1.0/2.0);
                double t10742 = t10741+1.0;
                double t10743 = 1/t10737;
                double t10744 = t10653*t10743*(1.0/2.0);
                double t10745 = t10744+1.0;
                double t10746 = a1p*c*t10722;
                double t10747 = t10746+1.0;
                double t10748 = 1/t10745;
                double t10749 = 1/(t10737*t10737);
                double t10750 = b4p*t10647*t10738*(2.0/3.0);
                double t10751 = b2p*c*t10732*(1.0/3.0);
                double t10752 = b1p*c*t10732*t10739*(1.0/6.0);
                double t10753 = b3p*c*t10732*t10724*(1.0/2.0);
                double t10754 = t10750+t10751+t10752+t10753;
                double t10755 = t10754*t10747*t10748*t10749;
                double t10756 = log(t10745);
                double t10757 = pow(2.0,1.0/3.0);
                double t10758 = t10757*2.0;
                double t10759 = t10758-2.0;
                double t10760 = log(t10742);
                double t10761 = a1f*c*t10722;
                double t10762 = t10761+1.0;
                double t10763 = 1/pow(rho_b[index],8.0/3.0);
                double t10764 = 1/pow(rho_a[index],8.0/3.0);
                double t10765 = gamma_aa[index]*t10764*(1.0/2.0);
                double t10766 = gamma_bb[index]*t10763*(1.0/2.0);
                double t10767 = t10765+t10766;
                double t10768 = gcab*t10767;
                double t10769 = t10768+1.0;
                double t10770 = gcab*gcab;
                double t10771 = t10767*t10767;
                double t10772 = t10770*t10770;
                double t10773 = t10771*t10771;
                double t10774 = t10770*t10771;
                double t10775 = gcab*t10767*2.0;
                double t10776 = t10774+t10775+1.0;
                double t10777 = t10770*t10771*3.0;
                double t10778 = gcab*t10770*t10771*t10767;
                double t10779 = gcab*t10767*3.0;
                double t10780 = t10777+t10778+t10779+1.0;
                double t10781 = t10770*t10771*6.0;
                double t10782 = gcab*t10770*t10771*t10767*4.0;
                double t10783 = t10772*t10773;
                double t10784 = gcab*t10767*4.0;
                double t10785 = t10781+t10782+t10783+t10784+1.0;
                double t10786 = c0f*t10760*t10762*2.0;
                double t10788 = c0p*t10747*t10756*2.0;
                double t10787 = t10786-t10788;
                double t10789 = 1/pow(rho_b[index],1.0/3.0);
                double t10790 = c*t10789;
                double t10791 = sqrt(t10790);
                double t10792 = pow(t10790,3.0/2.0);
                double t10793 = 1/pow(rho_b[index],2.0/3.0);
                double t10794 = b1p*t10791;
                double t10795 = b3p*t10792;
                double t10796 = b4p*t10647*t10793;
                double t10797 = b2p*c*t10789;
                double t10798 = t10794+t10795+t10796+t10797;
                double t10799 = 1/t10798;
                double t10800 = t10653*t10799*(1.0/2.0);
                double t10801 = t10800+1.0;
                double t10802 = log(t10801);
                double t10803 = a1p*c*t10789;
                double t10804 = t10803+1.0;
                double t10805 = c0p*t10802*t10804*2.0;
                double t10806 = t10690*t10665*t10684*t10687*t10679;
                double t10807 = Aa*t10702*t10712*t10721*t10714*t10665*t10684*2.0;
                double t10808 = 1/pow(rho_a[index],1.1E1/3.0);
                double t10809 = 1/(t10780*t10780);
                double t10810 = 1/(t10785*t10785);
                double t10811 = gcab*t10763*2.0;
                double t10812 = t10770*t10763*t10767*6.0;
                double t10813 = gcab*t10770*t10771*t10763*6.0;
                double t10814 = t10771*t10763*t10772*t10767*2.0;
                double t10815 = t10811+t10812+t10813+t10814;
                double t10816 = 1/(t10776*t10776);
                double t10817 = gamma_aa[index]*gcab*t10808*(8.0/3.0);
                double t10818 = gamma_aa[index]*t10770*t10808*t10767*(8.0/3.0);
                double t10819 = t10817+t10818;
                double t10820 = gcab*t10763;
                double t10821 = t10770*t10763*t10767;
                double t10822 = t10820+t10821;
                double t10823 = gamma_aa[index]*gcab*t10808*(1.6E1/3.0);
                double t10824 = gamma_aa[index]*gcab*t10770*t10771*t10808*1.6E1;
                double t10825 = gamma_aa[index]*t10771*t10772*t10808*t10767*(1.6E1/3.0);
                double t10826 = gamma_aa[index]*t10770*t10808*t10767*1.6E1;
                double t10827 = t10823+t10824+t10825+t10826;
                double t10828 = 1/(t10769*t10769);
                double t10829 = 1/t10776;
                double t10830 = gcab*t10763*(3.0/2.0);
                double t10831 = t10770*t10763*t10767*3.0;
                double t10832 = gcab*t10770*t10771*t10763*(3.0/2.0);
                double t10833 = t10830+t10831+t10832;
                double t10834 = gamma_aa[index]*gcab*t10808*4.0;
                double t10835 = gamma_aa[index]*gcab*t10770*t10771*t10808*4.0;
                double t10836 = gamma_aa[index]*t10770*t10808*t10767*8.0;
                double t10837 = t10834+t10835+t10836;
                double t10838 = 1/t10780;
                double t10839 = 1/t10785;
                v_rho_a_gamma_bb_[index] = -(t10806+t10807+t10689+t10640*(t10700-t10690*t10665*t10684*t10687*(t10700- \
                   (1/(t10671*t10671)*t10677*(b2f*c*t10652*(1.0/3.0)+b4f*t10691*t10647*(2.0/3.0)+b1f*c*t10652*t10692* \
                   (1.0/6.0)+b3f*c*t10643*t10652*(1.0/2.0)))/t10674+a1f*c*c0f*t10652*t10675*(2.0/3.0)-a1p*c*c0p*t10652* \
                   t10678*(2.0/3.0))-a1p*c*c0p*t10652*t10678*(2.0/3.0)-t10701*t10690*t10665*t10684*t10679*4.0+t10690* \
                   t10665*t10719*t10687*t10679+t10660*t10665*t10684*t10659*t10687*t10679*4.0-Aa*t10702*t10712*t10714* \
                   t10665*t10684*(t10701*t10690*4.0-t10660*t10659*t10687*4.0)*2.0+Aa*t10702*t10712*t10721*t10714*t10665* \
                   t10719*2.0+(t10702*t10721*t10714*1/(t10708*t10708)*t10665*t10684*(b2a*c*t10652*(1.0/3.0)+b4a*t10691* \
                   t10647*(2.0/3.0)+b1a*c*t10652*t10692*(1.0/6.0)+b3a*c*t10643*t10652*(1.0/2.0)))/t10711-Aa*a1a*c*t10702* \
                   t10712*t10721*t10652*t10665*t10684*(2.0/3.0))+rho_a[index]*(-t10755+t10665*t10759*(t10755-(1/(t10731* \
                   t10731)*t10762*(b2f*c*t10732*(1.0/3.0)+b4f*t10647*t10738*(2.0/3.0)+b1f*c*t10732*t10739*(1.0/6.0)+b3f* \
                   c*t10732*t10724*(1.0/2.0)))/t10742+a1f*c*c0f*t10732*t10760*(2.0/3.0)-a1p*c*c0p*t10732*t10756*(2.0/ \
                   3.0))+a1p*c*c0p*t10732*t10756*(2.0/3.0))-c0p*t10747*t10756*2.0-t10665*t10759*t10787)*((ccab1*gcab* \
                   t10763*(1.0/2.0))/t10769-ccab2*t10822*t10770*t10771*t10816-ccab4*t10810*t10815*t10772*t10773-ccab1* \
                   t10770*t10763*t10828*t10767*(1.0/2.0)+ccab2*t10770*t10763*t10829*t10767+ccab4*t10771*t10763*t10772* \
                   t10767*t10839*2.0+ccab3*gcab*t10770*t10771*t10763*t10838*(3.0/2.0)-ccab3*gcab*t10770*t10833*t10771* \
                   t10809*t10767)+(rho_a[index]*(t10788+t10665*t10759*t10787)+rho_b[index]*(t10805-t10665*t10759*(t10805- \
                   c0f*log((t10666*(1.0/2.0))/(b1f*t10791+b3f*t10792+b2f*c*t10789+b4f*t10647*t10793)+1.0)*(a1f*c*t10789+ \
                   1.0)*2.0))-t10640*(t10806+t10807+t10689))*(ccab4*t10810*t10772*t10773*(gamma_aa[index]*t10770*t10763* \
                   t10808*8.0+gamma_aa[index]*t10771*t10763*t10772*t10808*8.0+gamma_aa[index]*gcab*t10770*t10763*t10808* \
                   t10767*1.6E1)+ccab2*t10770*t10816*t10763*t10819*t10767-ccab2*t10822*t10770*t10771*t10819*1/(t10776* \
                   t10776*t10776)*2.0-ccab4*t10815*t10772*t10773*t10827*1/(t10785*t10785*t10785)*2.0+ccab1*gamma_aa[index]* \
                   t10770*t10763*t10808*t10828*(4.0/3.0)-ccab2*gamma_aa[index]*t10770*t10763*t10808*t10829*(4.0/3.0)+ \
                   ccab2*gamma_aa[index]*t10822*t10770*t10816*t10808*t10767*(8.0/3.0)+ccab2*gamma_aa[index]*t10771*t10816* \
                   t10763*t10772*t10808*(4.0/3.0)-ccab4*gamma_aa[index]*t10771*t10763*t10772*t10808*t10839*8.0+ccab3* \
                   gcab*t10770*t10771*t10763*t10809*t10837*(3.0/2.0)+ccab4*t10810*t10771*t10763*t10772*t10827*t10767* \
                   2.0+ccab3*gcab*t10770*t10771*t10809*t10767*(gamma_aa[index]*t10770*t10763*t10808*4.0+gamma_aa[index]* \
                   gcab*t10770*t10763*t10808*t10767*4.0)-ccab1*gamma_aa[index]*gcab*t10770*t10763*t10808*t10767*1/(t10769* \
                   t10769*t10769)*(4.0/3.0)-ccab3*gcab*t10770*t10833*t10771*1/(t10780*t10780*t10780)*t10837*t10767*2.0+ \
                   ccab3*gamma_aa[index]*gcab*t10770*t10833*t10771*t10808*t10809*4.0-ccab3*gamma_aa[index]*gcab*t10770* \
                   t10763*t10808*t10838*t10767*4.0+ccab4*gamma_aa[index]*t10810*t10815*t10771*t10772*t10808*t10767*(1.6E1/ \
                   3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t10841 = rho_a[index]+rho_b[index];
                double t10842 = 1/pow(t10841,1.0/3.0);
                double t10843 = c*t10842;
                double t10844 = sqrt(t10843);
                double t10845 = b1p*t10844;
                double t10846 = pow(t10843,3.0/2.0);
                double t10847 = b3p*t10846;
                double t10848 = c*c;
                double t10849 = 1/pow(t10841,2.0/3.0);
                double t10850 = b4p*t10848*t10849;
                double t10851 = b2p*c*t10842;
                double t10852 = t10850+t10851+t10845+t10847;
                double t10853 = 1/pow(t10841,4.0/3.0);
                double t10854 = 1/c0p;
                double t10855 = 1/t10852;
                double t10856 = t10854*t10855*(1.0/2.0);
                double t10857 = t10856+1.0;
                double t10858 = a1p*c*t10842;
                double t10859 = t10858+1.0;
                double t10860 = rho_a[index]-rho_b[index];
                double t10861 = t10860*t10860;
                double t10862 = 1/t10841;
                double t10863 = t10860*t10862;
                double t10864 = two_13*2.0;
                double t10865 = t10864-2.0;
                double t10866 = 1/t10865;
                double t10867 = 1/c0f;
                double t10868 = b1f*t10844;
                double t10869 = b3f*t10846;
                double t10870 = b4f*t10848*t10849;
                double t10871 = b2f*c*t10842;
                double t10872 = t10870+t10871+t10868+t10869;
                double t10873 = 1/t10872;
                double t10874 = t10873*t10867*(1.0/2.0);
                double t10875 = t10874+1.0;
                double t10876 = log(t10875);
                double t10877 = a1f*c*t10842;
                double t10878 = t10877+1.0;
                double t10879 = log(t10857);
                double t10890 = c0f*t10876*t10878*2.0;
                double t10891 = c0p*t10859*t10879*2.0;
                double t10880 = t10890-t10891;
                double t10881 = t10863+1.0;
                double t10882 = pow(t10881,4.0/3.0);
                double t10883 = -t10863+1.0;
                double t10884 = pow(t10883,4.0/3.0);
                double t10885 = t10882+t10884-2.0;
                double t10886 = 1/(t10841*t10841);
                double t10887 = t10860*t10886;
                double t10888 = t10862+t10887;
                double t10889 = 1/(t10841*t10841*t10841*t10841);
                double t10892 = t10861*t10861;
                double t10893 = 1/pow(t10841,5.0/3.0);
                double t10894 = 1/sqrt(t10843);
                double t10895 = 1/t10857;
                double t10896 = 1/(t10852*t10852);
                double t10897 = b4p*t10848*t10893*(2.0/3.0);
                double t10898 = b2p*c*t10853*(1.0/3.0);
                double t10899 = b1p*c*t10853*t10894*(1.0/6.0);
                double t10900 = b3p*c*t10844*t10853*(1.0/2.0);
                double t10901 = t10900+t10897+t10898+t10899;
                double t10902 = 1/(t10841*t10841*t10841*t10841*t10841);
                double t10903 = 1/d2fz0;
                double t10904 = 1/Aa;
                double t10905 = b1a*t10844;
                double t10906 = b3a*t10846;
                double t10907 = b4a*t10848*t10849;
                double t10908 = b2a*c*t10842;
                double t10909 = t10905+t10906+t10907+t10908;
                double t10910 = 1/t10909;
                double t10911 = t10910*t10904*(1.0/2.0);
                double t10912 = t10911+1.0;
                double t10913 = log(t10912);
                double t10914 = a1a*c*t10842;
                double t10915 = t10914+1.0;
                double t10916 = pow(t10881,1.0/3.0);
                double t10917 = t10916*t10888*(4.0/3.0);
                double t10918 = pow(t10883,1.0/3.0);
                double t10919 = t10917-t10918*t10888*(4.0/3.0);
                double t10920 = t10892*t10889;
                double t10921 = t10920-1.0;
                double t10922 = 1/pow(rho_b[index],1.0/3.0);
                double t10923 = c*t10922;
                double t10924 = sqrt(t10923);
                double t10925 = b1f*t10924;
                double t10926 = pow(t10923,3.0/2.0);
                double t10927 = b3f*t10926;
                double t10928 = 1/pow(rho_b[index],2.0/3.0);
                double t10929 = b4f*t10928*t10848;
                double t10930 = b2f*c*t10922;
                double t10931 = t10930+t10925+t10927+t10929;
                double t10932 = 1/pow(rho_b[index],4.0/3.0);
                double t10933 = b1p*t10924;
                double t10934 = b3p*t10926;
                double t10935 = b4p*t10928*t10848;
                double t10936 = b2p*c*t10922;
                double t10937 = t10933+t10934+t10935+t10936;
                double t10938 = 1/pow(rho_b[index],5.0/3.0);
                double t10939 = 1/sqrt(t10923);
                double t10940 = 1/t10931;
                double t10941 = t10940*t10867*(1.0/2.0);
                double t10942 = t10941+1.0;
                double t10943 = 1/t10937;
                double t10944 = t10943*t10854*(1.0/2.0);
                double t10945 = t10944+1.0;
                double t10946 = a1p*c*t10922;
                double t10947 = t10946+1.0;
                double t10948 = 1/t10945;
                double t10949 = 1/(t10937*t10937);
                double t10950 = b4p*t10848*t10938*(2.0/3.0);
                double t10951 = b2p*c*t10932*(1.0/3.0);
                double t10952 = b1p*c*t10932*t10939*(1.0/6.0);
                double t10953 = b3p*c*t10932*t10924*(1.0/2.0);
                double t10954 = t10950+t10951+t10952+t10953;
                double t10955 = t10954*t10947*t10948*t10949;
                double t10956 = log(t10945);
                double t10957 = pow(2.0,1.0/3.0);
                double t10958 = t10957*2.0;
                double t10959 = t10958-2.0;
                double t10960 = log(t10942);
                double t10961 = a1f*c*t10922;
                double t10962 = t10961+1.0;
                double t10963 = 1/pow(rho_a[index],8.0/3.0);
                double t10964 = gamma_aa[index]*t10963*(1.0/2.0);
                double t10965 = 1/pow(rho_b[index],8.0/3.0);
                double t10966 = gamma_bb[index]*t10965*(1.0/2.0);
                double t10967 = t10964+t10966;
                double t10968 = gcab*t10967;
                double t10969 = t10968+1.0;
                double t10970 = gcab*gcab;
                double t10971 = t10967*t10967;
                double t10972 = t10970*t10970;
                double t10973 = t10971*t10971;
                double t10974 = t10970*t10971;
                double t10975 = gcab*t10967*2.0;
                double t10976 = t10974+t10975+1.0;
                double t10977 = t10970*t10971*3.0;
                double t10978 = gcab*t10970*t10971*t10967;
                double t10979 = gcab*t10967*3.0;
                double t10980 = t10977+t10978+t10979+1.0;
                double t10981 = t10970*t10971*6.0;
                double t10982 = gcab*t10970*t10971*t10967*4.0;
                double t10983 = t10972*t10973;
                double t10984 = gcab*t10967*4.0;
                double t10985 = t10981+t10982+t10983+t10984+1.0;
                double t10986 = a1p*c*c0p*t10853*t10879*(2.0/3.0);
                double t10987 = 1/pow(rho_a[index],1.0/3.0);
                double t10988 = c*t10987;
                double t10989 = sqrt(t10988);
                double t10990 = pow(t10988,3.0/2.0);
                double t10991 = 1/pow(rho_a[index],2.0/3.0);
                double t10992 = b1p*t10989;
                double t10993 = b3p*t10990;
                double t10994 = b4p*t10991*t10848;
                double t10995 = b2p*c*t10987;
                double t10996 = t10992+t10993+t10994+t10995;
                double t10997 = 1/t10996;
                double t10998 = t10854*t10997*(1.0/2.0);
                double t10999 = t10998+1.0;
                double t11000 = log(t10999);
                double t11001 = a1p*c*t10987;
                double t11002 = t11001+1.0;
                double t11003 = c0p*t11000*t11002*2.0;
                double t11004 = c0f*t10960*t10962*2.0;
                double t11006 = c0p*t10947*t10956*2.0;
                double t11005 = t11004-t11006;
                double t11007 = t10880*t10892*t10866*t10885*t10889;
                double t11008 = Aa*t10903*t10921*t10913*t10915*t10866*t10885*2.0;
                double t11009 = 1/pow(rho_b[index],1.1E1/3.0);
                double t11010 = 1/(t10980*t10980);
                double t11011 = 1/(t10985*t10985);
                double t11012 = gcab*t10963*2.0;
                double t11013 = t10970*t10963*t10967*6.0;
                double t11014 = gcab*t10970*t10971*t10963*6.0;
                double t11015 = t10971*t10963*t10972*t10967*2.0;
                double t11016 = t11012+t11013+t11014+t11015;
                double t11017 = 1/(t10976*t10976);
                double t11018 = gamma_bb[index]*gcab*t11009*(8.0/3.0);
                double t11019 = gamma_bb[index]*t10970*t10967*t11009*(8.0/3.0);
                double t11020 = t11018+t11019;
                double t11021 = gcab*t10963;
                double t11022 = t10970*t10963*t10967;
                double t11023 = t11021+t11022;
                double t11024 = gamma_bb[index]*gcab*t11009*(1.6E1/3.0);
                double t11025 = gamma_bb[index]*gcab*t10970*t10971*t11009*1.6E1;
                double t11026 = gamma_bb[index]*t10971*t10972*t10967*t11009*(1.6E1/3.0);
                double t11027 = gamma_bb[index]*t10970*t10967*t11009*1.6E1;
                double t11028 = t11024+t11025+t11026+t11027;
                double t11029 = 1/(t10969*t10969);
                double t11030 = 1/t10976;
                double t11031 = gcab*t10963*(3.0/2.0);
                double t11032 = t10970*t10963*t10967*3.0;
                double t11033 = gcab*t10970*t10971*t10963*(3.0/2.0);
                double t11034 = t11031+t11032+t11033;
                double t11035 = gamma_bb[index]*gcab*t11009*4.0;
                double t11036 = gamma_bb[index]*gcab*t10970*t10971*t11009*4.0;
                double t11037 = gamma_bb[index]*t10970*t10967*t11009*8.0;
                double t11038 = t11035+t11036+t11037;
                double t11039 = 1/t10980;
                double t11040 = 1/t10985;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t11006+t10866*t10959*t11005)+rho_a[index]*(t11003-t10866* \
                   t10959*(t11003-c0f*log((t10867*(1.0/2.0))/(b1f*t10989+b3f*t10990+b2f*c*t10987+b4f*t10991*t10848)+1.0) \
                   *(a1f*c*t10987+1.0)*2.0))-t10841*(t10891+t11007+t11008))*(ccab4*t10972*t10973*t11011*(gamma_bb[index]* \
                   t10970*t10963*t11009*8.0+gamma_bb[index]*t10971*t10963*t10972*t11009*8.0+gamma_bb[index]*gcab*t10970* \
                   t10963*t10967*t11009*1.6E1)+ccab2*t10970*t10963*t10967*t11020*t11017-ccab2*t10970*t10971*1/(t10976* \
                   t10976*t10976)*t11020*t11023*2.0-ccab4*t10972*t10973*1/(t10985*t10985*t10985)*t11016*t11028*2.0-ccab2* \
                   gamma_bb[index]*t10970*t10963*t11030*t11009*(4.0/3.0)+ccab1*gamma_bb[index]*t10970*t10963*t11009*t11029* \
                   (4.0/3.0)-ccab4*gamma_bb[index]*t10971*t10963*t10972*t11040*t11009*8.0+ccab2*gamma_bb[index]*t10971* \
                   t10963*t10972*t11017*t11009*(4.0/3.0)+ccab2*gamma_bb[index]*t10970*t10967*t11023*t11017*t11009*(8.0/ \
                   3.0)+ccab3*gcab*t10970*t10971*t10963*t11010*t11038*(3.0/2.0)+ccab4*t10971*t10963*t10972*t10967*t11011* \
                   t11028*2.0+ccab3*gcab*t10970*t10971*t10967*t11010*(gamma_bb[index]*t10970*t10963*t11009*4.0+gamma_bb[index]* \
                   gcab*t10970*t10963*t10967*t11009*4.0)-ccab1*gamma_bb[index]*gcab*t10970*t10963*t10967*1/(t10969*t10969* \
                   t10969)*t11009*(4.0/3.0)-ccab3*gcab*t10970*t10971*1/(t10980*t10980*t10980)*t10967*t11034*t11038*2.0- \
                   ccab3*gamma_bb[index]*gcab*t10970*t10963*t10967*t11009*t11039*4.0+ccab3*gamma_bb[index]*gcab*t10970* \
                   t10971*t11010*t11034*t11009*4.0+ccab4*gamma_bb[index]*t10971*t10972*t10967*t11011*t11016*t11009*(1.6E1/ \
                   3.0))-(t10891+t11007+t11008+rho_b[index]*(-t10955+t10866*t10959*(t10955-(1/(t10931*t10931)*t10962* \
                   (b2f*c*t10932*(1.0/3.0)+b4f*t10848*t10938*(2.0/3.0)+b1f*c*t10932*t10939*(1.0/6.0)+b3f*c*t10932*t10924* \
                   (1.0/2.0)))/t10942+a1f*c*c0f*t10932*t10960*(2.0/3.0)-a1p*c*c0p*t10932*t10956*(2.0/3.0))+a1p*c*c0p* \
                   t10932*t10956*(2.0/3.0))-t10841*(t10986-t10901*t10859*t10895*t10896+t10902*t10880*t10892*t10866*t10885* \
                   4.0+t10880*t10892*t10919*t10866*t10889-t10892*t10866*t10885*t10889*(t10986-t10901*t10859*t10895*t10896+ \
                   (1/(t10872*t10872)*t10878*(b2f*c*t10853*(1.0/3.0)+b4f*t10848*t10893*(2.0/3.0)+b1f*c*t10853*t10894* \
                   (1.0/6.0)+b3f*c*t10844*t10853*(1.0/2.0)))/t10875-a1f*c*c0f*t10853*t10876*(2.0/3.0))+t10860*t10861* \
                   t10880*t10866*t10885*t10889*4.0+Aa*t10903*t10913*t10915*t10866*t10885*(t10902*t10892*4.0+t10860*t10861* \
                   t10889*4.0)*2.0+Aa*t10903*t10921*t10913*t10915*t10919*t10866*2.0-(t10903*t10921*t10915*1/(t10909*t10909) \
                   *t10866*t10885*(b2a*c*t10853*(1.0/3.0)+b4a*t10848*t10893*(2.0/3.0)+b1a*c*t10853*t10894*(1.0/6.0)+b3a* \
                   c*t10844*t10853*(1.0/2.0)))/t10912+Aa*a1a*c*t10903*t10921*t10913*t10853*t10866*t10885*(2.0/3.0))-c0p* \
                   t10947*t10956*2.0-t10866*t10959*t11005)*((ccab1*gcab*t10963*(1.0/2.0))/t10969+ccab2*t10970*t10963* \
                   t10967*t11030-ccab1*t10970*t10963*t10967*t11029*(1.0/2.0)-ccab2*t10970*t10971*t11023*t11017-ccab4* \
                   t10972*t10973*t11011*t11016+ccab4*t10971*t10963*t10972*t10967*t11040*2.0+ccab3*gcab*t10970*t10971* \
                   t10963*t11039*(3.0/2.0)-ccab3*gcab*t10970*t10971*t10967*t11010*t11034);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t11043 = 1/(k*k);
                double t11044 = 1/kp;
                double t11045 = rho_b[index]*2.0;
                double t11046 = 1/(rho_b[index]*rho_b[index]);
                double t11047 = 1/pow(t11045,2.0/3.0);
                double t11048 = pow(rho_b[index],5.0/3.0);
                double t11049 = 1/tau_b[index];
                double t11050 = C_k*t11048*t11049;
                double t11051 = t11050-1.0;
                double t11052 = t11051*t11051;
                double t11053 = t11052*t11052;
                double t11054 = t11053*t11053;
                double t11055 = t11050+1.0;
                double t11056 = gamma_bb[index]*mu_*t11043*t11044*t11046*t11047*(1.0/4.0);
                double t11057 = t11056+1.0;
                double t11058 = 1/(t11057*t11057);
                double t11059 = 1/t11055;
                double t11060 = a_1*t11051*t11059;
                double t11061 = 1/pow(t11055,1.0E1);
                double t11062 = a_10*t11052*t11061*t11054;
                double t11063 = 1/pow(t11055,1.1E1);
                double t11064 = a_11*t11051*t11052*t11054*t11063;
                double t11065 = 1/(t11055*t11055);
                double t11066 = a_2*t11052*t11065;
                double t11067 = 1/(t11055*t11055*t11055);
                double t11068 = a_3*t11051*t11052*t11067;
                double t11069 = 1/(t11055*t11055*t11055*t11055);
                double t11070 = a_4*t11053*t11069;
                double t11071 = 1/(t11055*t11055*t11055*t11055*t11055);
                double t11072 = a_5*t11051*t11053*t11071;
                double t11073 = 1/(t11055*t11055*t11055*t11055*t11055*t11055);
                double t11074 = a_6*t11052*t11053*t11073;
                double t11075 = 1/(t11055*t11055*t11055*t11055*t11055*t11055*t11055);
                double t11076 = a_7*t11051*t11052*t11053*t11075;
                double t11077 = 1/(t11055*t11055*t11055*t11055*t11055*t11055*t11055*t11055);
                double t11078 = a_8*t11054*t11077;
                double t11079 = 1/(t11055*t11055*t11055*t11055*t11055*t11055*t11055*t11055*t11055);
                double t11080 = a_9*t11051*t11054*t11079;
                double t11081 = t11060+t11070+t11062+t11080+t11072+t11064+t11074+t11066+t11076+t11068+t11078+1.0;
                double t11082 = pow(rho_b[index],2.0/3.0);
                double t11083 = 1/rho_b[index];
                double t11084 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
                double t11085 = 1/pow(t11045,5.0/3.0);
                double t11086 = rho_a[index]+rho_b[index];
                double t11087 = 1/pow(t11086,1.0/3.0);
                double t11088 = c*t11087;
                double t11089 = sqrt(t11088);
                double t11090 = b1p*t11089;
                double t11091 = pow(t11088,3.0/2.0);
                double t11092 = b3p*t11091;
                double t11093 = c*c;
                double t11094 = 1/pow(t11086,2.0/3.0);
                double t11095 = b4p*t11093*t11094;
                double t11096 = b2p*c*t11087;
                double t11097 = t11090+t11092+t11095+t11096;
                double t11098 = 1/pow(t11086,4.0/3.0);
                double t11099 = 1/c0p;
                double t11100 = 1/t11097;
                double t11101 = t11100*t11099*(1.0/2.0);
                double t11102 = t11101+1.0;
                double t11103 = a1p*c*t11087;
                double t11104 = t11103+1.0;
                double t11105 = rho_a[index]-rho_b[index];
                double t11106 = t11105*t11105;
                double t11107 = 1/t11086;
                double t11108 = t11105*t11107;
                double t11109 = two_13*2.0;
                double t11110 = t11109-2.0;
                double t11111 = 1/t11110;
                double t11112 = 1/c0f;
                double t11113 = b1f*t11089;
                double t11114 = b3f*t11091;
                double t11115 = b4f*t11093*t11094;
                double t11116 = b2f*c*t11087;
                double t11117 = t11113+t11114+t11115+t11116;
                double t11118 = 1/t11117;
                double t11119 = t11112*t11118*(1.0/2.0);
                double t11120 = t11119+1.0;
                double t11121 = log(t11120);
                double t11122 = a1f*c*t11087;
                double t11123 = t11122+1.0;
                double t11124 = log(t11102);
                double t11135 = c0f*t11121*t11123*2.0;
                double t11136 = c0p*t11104*t11124*2.0;
                double t11125 = t11135-t11136;
                double t11126 = t11108+1.0;
                double t11127 = pow(t11126,4.0/3.0);
                double t11128 = -t11108+1.0;
                double t11129 = pow(t11128,4.0/3.0);
                double t11130 = t11127+t11129-2.0;
                double t11131 = 1/(t11086*t11086);
                double t11132 = t11131*t11105;
                double t11133 = t11132+t11107;
                double t11134 = 1/(t11086*t11086*t11086*t11086);
                double t11137 = t11106*t11106;
                double t11138 = 1/pow(t11086,5.0/3.0);
                double t11139 = 1/sqrt(t11088);
                double t11140 = 1/t11102;
                double t11141 = 1/(t11097*t11097);
                double t11142 = b4p*t11093*t11138*(2.0/3.0);
                double t11143 = b2p*c*t11098*(1.0/3.0);
                double t11144 = b1p*c*t11139*t11098*(1.0/6.0);
                double t11145 = b3p*c*t11089*t11098*(1.0/2.0);
                double t11146 = t11142+t11143+t11144+t11145;
                double t11147 = 1/(t11086*t11086*t11086*t11086*t11086);
                double t11148 = 1/d2fz0;
                double t11149 = 1/Aa;
                double t11150 = b1a*t11089;
                double t11151 = b3a*t11091;
                double t11152 = b4a*t11093*t11094;
                double t11153 = b2a*c*t11087;
                double t11154 = t11150+t11151+t11152+t11153;
                double t11155 = 1/t11154;
                double t11156 = t11155*t11149*(1.0/2.0);
                double t11157 = t11156+1.0;
                double t11158 = log(t11157);
                double t11159 = a1a*c*t11087;
                double t11160 = t11159+1.0;
                double t11161 = pow(t11126,1.0/3.0);
                double t11162 = t11133*t11161*(4.0/3.0);
                double t11163 = pow(t11128,1.0/3.0);
                double t11164 = t11162-t11133*t11163*(4.0/3.0);
                double t11165 = t11134*t11137;
                double t11166 = t11165-1.0;
                double t11167 = 1/pow(rho_b[index],1.0/3.0);
                double t11168 = c*t11167;
                double t11169 = sqrt(t11168);
                double t11170 = b1f*t11169;
                double t11171 = pow(t11168,3.0/2.0);
                double t11172 = b3f*t11171;
                double t11173 = 1/pow(rho_b[index],2.0/3.0);
                double t11174 = b4f*t11173*t11093;
                double t11175 = b2f*c*t11167;
                double t11176 = t11170+t11172+t11174+t11175;
                double t11177 = 1/pow(rho_b[index],4.0/3.0);
                double t11178 = b1p*t11169;
                double t11179 = b3p*t11171;
                double t11180 = b4p*t11173*t11093;
                double t11181 = b2p*c*t11167;
                double t11182 = t11180+t11181+t11178+t11179;
                double t11183 = 1/pow(rho_b[index],5.0/3.0);
                double t11184 = 1/sqrt(t11168);
                double t11185 = 1/t11176;
                double t11186 = t11112*t11185*(1.0/2.0);
                double t11187 = t11186+1.0;
                double t11188 = 1/t11182;
                double t11189 = t11188*t11099*(1.0/2.0);
                double t11190 = t11189+1.0;
                double t11191 = a1p*c*t11167;
                double t11192 = t11191+1.0;
                double t11193 = 1/t11190;
                double t11194 = 1/(t11182*t11182);
                double t11195 = b4p*t11093*t11183*(2.0/3.0);
                double t11196 = b2p*c*t11177*(1.0/3.0);
                double t11197 = b1p*c*t11184*t11177*(1.0/6.0);
                double t11198 = b3p*c*t11177*t11169*(1.0/2.0);
                double t11199 = t11195+t11196+t11197+t11198;
                double t11200 = t11192*t11193*t11194*t11199;
                double t11201 = log(t11190);
                double t11202 = pow(2.0,1.0/3.0);
                double t11203 = t11202*2.0;
                double t11204 = t11203-2.0;
                double t11205 = log(t11187);
                double t11206 = a1f*c*t11167;
                double t11207 = t11206+1.0;
                double t11208 = 1/pow(rho_b[index],8.0/3.0);
                double t11209 = 1/pow(rho_a[index],8.0/3.0);
                double t11210 = gamma_aa[index]*t11209*(1.0/2.0);
                double t11211 = gamma_bb[index]*t11208*(1.0/2.0);
                double t11212 = t11210+t11211;
                double t11213 = gcab*t11212;
                double t11214 = t11213+1.0;
                double t11215 = gcab*gcab;
                double t11216 = t11212*t11212;
                double t11217 = t11215*t11215;
                double t11218 = t11216*t11216;
                double t11219 = t11215*t11216;
                double t11220 = gcab*t11212*2.0;
                double t11221 = t11220+t11219+1.0;
                double t11222 = t11215*t11216*3.0;
                double t11223 = gcab*t11212*t11215*t11216;
                double t11224 = gcab*t11212*3.0;
                double t11225 = t11222+t11223+t11224+1.0;
                double t11226 = t11215*t11216*6.0;
                double t11227 = gcab*t11212*t11215*t11216*4.0;
                double t11228 = t11217*t11218;
                double t11229 = gcab*t11212*4.0;
                double t11230 = t11226+t11227+t11228+t11229+1.0;
                double t11231 = a1p*c*c0p*t11124*t11098*(2.0/3.0);
                double t11232 = 1/pow(rho_a[index],1.0/3.0);
                double t11233 = c*t11232;
                double t11234 = sqrt(t11233);
                double t11235 = pow(t11233,3.0/2.0);
                double t11236 = 1/pow(rho_a[index],2.0/3.0);
                double t11237 = b1p*t11234;
                double t11238 = b3p*t11235;
                double t11239 = b4p*t11236*t11093;
                double t11240 = b2p*c*t11232;
                double t11241 = t11240+t11237+t11238+t11239;
                double t11242 = 1/t11241;
                double t11243 = t11242*t11099*(1.0/2.0);
                double t11244 = t11243+1.0;
                double t11245 = log(t11244);
                double t11246 = a1p*c*t11232;
                double t11247 = t11246+1.0;
                double t11248 = c0p*t11245*t11247*2.0;
                double t11249 = c0f*t11205*t11207*2.0;
                double t11251 = c0p*t11201*t11192*2.0;
                double t11250 = -t11251+t11249;
                double t11252 = t11111*t11130*t11125*t11134*t11137;
                double t11253 = Aa*t11111*t11130*t11160*t11148*t11166*t11158*2.0;
                double t11254 = 1/t11214;
                double t11255 = 1/pow(rho_b[index],1.1E1/3.0);
                double t11256 = 1/(t11214*t11214);
                double t11257 = 1/t11221;
                double t11258 = 1/(t11225*t11225);
                double t11259 = 1/pow(rho_b[index],1.9E1/3.0);
                double t11260 = 1/(t11221*t11221);
                double t11261 = 1/t11225;
                double t11262 = 1/t11230;
                double t11263 = 1/(t11230*t11230);
                double t11264 = gcab*t11208*2.0;
                double t11265 = t11212*t11215*t11208*6.0;
                double t11266 = gcab*t11215*t11216*t11208*6.0;
                double t11267 = t11212*t11216*t11208*t11217*2.0;
                double t11268 = t11264+t11265+t11266+t11267;
                double t11269 = gamma_bb[index]*gcab*t11255*(8.0/3.0);
                double t11270 = gamma_bb[index]*t11212*t11215*t11255*(8.0/3.0);
                double t11271 = t11270+t11269;
                double t11272 = gcab*t11208;
                double t11273 = t11212*t11215*t11208;
                double t11274 = t11272+t11273;
                double t11275 = gamma_bb[index]*gcab*t11255*(1.6E1/3.0);
                double t11276 = gamma_bb[index]*gcab*t11215*t11216*t11255*1.6E1;
                double t11277 = gamma_bb[index]*t11212*t11216*t11217*t11255*(1.6E1/3.0);
                double t11278 = gamma_bb[index]*t11212*t11215*t11255*1.6E1;
                double t11279 = t11275+t11276+t11277+t11278;
                double t11280 = gcab*t11208*(3.0/2.0);
                double t11281 = t11212*t11215*t11208*3.0;
                double t11282 = gcab*t11215*t11216*t11208*(3.0/2.0);
                double t11283 = t11280+t11281+t11282;
                double t11284 = gamma_bb[index]*gcab*t11255*4.0;
                double t11285 = gamma_bb[index]*gcab*t11215*t11216*t11255*4.0;
                double t11286 = gamma_bb[index]*t11212*t11215*t11255*8.0;
                double t11287 = t11284+t11285+t11286;
                double t11288 = t11111*t11204*t11250;
                double t11289 = t11251+t11288;
                double t11290 = gamma_bb[index]*gamma_bb[index];
                double t11291 = gcaa*gcaa;
                double t11292 = t11291*t11291;
                double t11293 = 1/pow(rho_b[index],3.2E1/3.0);
                double t11294 = 1/pow(rho_b[index],1.6E1/3.0);
                double t11295 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t11296 = gamma_bb[index]*gcaa*t11208;
                double t11297 = t11296+1.0;
                double t11298 = gamma_bb[index]*gcaa*t11208*3.0;
                double t11299 = gamma_bb[index]*gcaa*t11290*t11291*t11295;
                double t11300 = t11290*t11291*t11294*3.0;
                double t11301 = t11300+t11298+t11299+1.0;
                double t11302 = t11290*t11290;
                double t11303 = gamma_bb[index]*gcaa*t11208*4.0;
                double t11304 = gamma_bb[index]*gcaa*t11290*t11291*t11295*4.0;
                double t11305 = t11290*t11291*t11294*6.0;
                double t11306 = t11302*t11292*t11293;
                double t11307 = t11303+t11304+t11305+t11306+1.0;
                double t11308 = gamma_bb[index]*gcaa*t11208*2.0;
                double t11309 = t11290*t11291*t11294;
                double t11310 = t11308+t11309+1.0;
                double t11311 = tau_b[index]-1.0/1.0E20;
                double t11312 = ( (t11311 > 0.0) ?  1.0 : 0.0 ) ;
                double t11313 = tau_b[index]*2.0;
                double t11353 = gamma_bb[index]*t11083*(1.0/4.0);
                double t11314 = t11313-t11353;
                double t11315 = t11314*t11049*(1.0/2.0);
                double t11316 = t11315-1.0;
                double t11317 = t11312*t11316;
                double t11318 = t11317+1.0;
                double t11319 = 1/t11297;
                double t11320 = 1/t11307;
                double t11321 = 1/t11310;
                double t11322 = 1/t11301;
                double t11323 = 1/(t11297*t11297);
                double t11324 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t11325 = 1/(t11301*t11301);
                double t11326 = 1/(t11310*t11310);
                double t11327 = gcaa*t11208*3.0;
                double t11328 = gamma_bb[index]*t11291*t11294*6.0;
                double t11329 = gcaa*t11290*t11291*t11295*3.0;
                double t11330 = t11327+t11328+t11329;
                double t11331 = 1/pow(rho_b[index],3.5E1/3.0);
                double t11332 = 1/(t11307*t11307);
                double t11333 = gcaa*t11208*4.0;
                double t11334 = gamma_bb[index]*t11291*t11294*1.2E1;
                double t11335 = gcaa*t11290*t11291*t11295*1.2E1;
                double t11336 = gamma_bb[index]*t11290*t11292*t11293*4.0;
                double t11337 = t11333+t11334+t11335+t11336;
                double t11338 = gcaa*t11208*2.0;
                double t11339 = gamma_bb[index]*t11291*t11294*2.0;
                double t11340 = t11338+t11339;
                double t11341 = gamma_bb[index]*gcaa*t11255*(1.6E1/3.0);
                double t11342 = t11290*t11291*t11259*(1.6E1/3.0);
                double t11343 = t11341+t11342;
                double t11344 = gamma_bb[index]*gcaa*t11255*8.0;
                double t11345 = gamma_bb[index]*gcaa*t11324*t11290*t11291*8.0;
                double t11346 = t11290*t11291*t11259*1.6E1;
                double t11347 = t11344+t11345+t11346;
                double t11348 = gamma_bb[index]*gcaa*t11255*(3.2E1/3.0);
                double t11349 = gamma_bb[index]*gcaa*t11324*t11290*t11291*3.2E1;
                double t11350 = t11290*t11291*t11259*3.2E1;
                double t11351 = t11302*t11331*t11292*(3.2E1/3.0);
                double t11352 = t11350+t11351+t11348+t11349;
                double t11354 = 1/t11187;
                double t11355 = 1/(t11176*t11176);
                double t11356 = b4f*t11093*t11183*(2.0/3.0);
                double t11357 = b2f*c*t11177*(1.0/3.0);
                double t11358 = b1f*c*t11184*t11177*(1.0/6.0);
                double t11359 = b3f*c*t11177*t11169*(1.0/2.0);
                double t11360 = t11356+t11357+t11358+t11359;
                double t11361 = a1f*c*c0f*t11205*t11177*(2.0/3.0);
                double t11362 = a1p*c*c0p*t11201*t11177*(2.0/3.0);
                double t11363 = ccaa1*gcaa*t11208*t11319;
                double t11364 = ccaa4*gamma_bb[index]*t11320*t11290*t11292*t11293*4.0;
                double t11365 = ccaa2*gamma_bb[index]*t11321*t11291*t11294*2.0;
                double t11366 = ccaa3*gcaa*t11322*t11290*t11291*t11295*3.0;
                double t11371 = ccaa1*gamma_bb[index]*t11323*t11291*t11294;
                double t11372 = ccaa3*gamma_bb[index]*gcaa*t11330*t11325*t11290*t11291*t11295;
                double t11373 = ccaa4*t11302*t11332*t11292*t11337*t11293;
                double t11374 = ccaa2*t11340*t11290*t11326*t11291*t11294;
                double t11367 = -t11371+t11363-t11372+t11364-t11373+t11365-t11374+t11366;
                double t11368 = t11200+t11361-t11362-t11207*t11360*t11354*t11355;
                double t11369 = t11111*t11204*t11368;
                double t11370 = -t11200+t11362+t11369;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t11289+rho_a[index]*(t11248-t11111*t11204*(t11248-c0f*log((t11112* \
                   (1.0/2.0))/(b1f*t11234+b3f*t11235+b2f*c*t11232+b4f*t11236*t11093)+1.0)*(a1f*c*t11232+1.0)*2.0))-t11086* \
                   (t11252+t11136+t11253))*(ccab1*gcab*t11254*t11255*(4.0/3.0)-ccab2*t11215*t11260*t11216*(gcab*t11255* \
                   (8.0/3.0)+gamma_bb[index]*t11215*t11259*(4.0/3.0)+t11212*t11215*t11255*(8.0/3.0))-ccab4*t11217*t11218* \
                   t11263*(gcab*t11255*(1.6E1/3.0)+gamma_bb[index]*t11215*t11259*8.0+t11212*t11215*t11255*1.6E1+gamma_bb[index]* \
                   t11216*t11217*t11259*8.0+gcab*t11215*t11216*t11255*1.6E1+t11212*t11216*t11217*t11255*(1.6E1/3.0)+gamma_bb[index]* \
                   gcab*t11212*t11215*t11259*1.6E1)-ccab1*gamma_bb[index]*t11215*t11256*t11259*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t11215*t11257*t11259*(4.0/3.0)-ccab1*t11212*t11215*t11255*t11256*(4.0/3.0)+ccab2*t11212*t11215*t11255* \
                   t11257*(8.0/3.0)-ccab2*t11212*t11215*t11260*t11208*t11271+ccab4*t11212*t11216*t11217*t11262*t11255* \
                   (1.6E1/3.0)+ccab2*1/(t11221*t11221*t11221)*t11215*t11216*t11271*t11274*2.0+ccab4*1/(t11230*t11230* \
                   t11230)*t11217*t11218*t11268*t11279*2.0+ccab4*gamma_bb[index]*t11216*t11217*t11262*t11259*8.0+ccab3* \
                   gcab*t11215*t11216*t11261*t11255*4.0+ccab3*gamma_bb[index]*gcab*t11212*t11215*t11261*t11259*4.0-ccab2* \
                   gamma_bb[index]*t11212*t11215*t11260*t11255*t11274*(8.0/3.0)-ccab3*gcab*t11215*t11216*t11208*t11258* \
                   t11287*(3.0/2.0)-ccab4*t11212*t11216*t11208*t11217*t11263*t11279*2.0-ccab3*gcab*t11212*t11215*t11216* \
                   t11258*(gcab*t11255*4.0+gamma_bb[index]*t11215*t11259*4.0+t11212*t11215*t11255*8.0+gcab*t11215*t11216* \
                   t11255*4.0+gamma_bb[index]*gcab*t11212*t11215*t11259*4.0)+ccab1*gamma_bb[index]*gcab*t11212*1/(t11214* \
                   t11214*t11214)*t11215*t11259*(4.0/3.0)+ccab3*gcab*t11212*t11215*t11216*1/(t11225*t11225*t11225)*t11283* \
                   t11287*2.0-ccab3*gamma_bb[index]*gcab*t11215*t11216*t11255*t11283*t11258*4.0-ccab4*gamma_bb[index]* \
                   t11212*t11216*t11217*t11263*t11255*t11268*(1.6E1/3.0))-(t11252+t11136+t11253+rho_b[index]*(-t11200+ \
                   t11362+t11111*t11204*(t11200+t11361-t11207*t11360*t11354*t11355-a1p*c*c0p*t11201*t11177*(2.0/3.0)) \
                   )-t11086*(t11231-t11104*t11140*t11141*t11146+t11111*t11130*t11125*t11137*t11147*4.0+t11111*t11125* \
                   t11134*t11137*t11164-t11111*t11130*t11134*t11137*(t11231-t11104*t11140*t11141*t11146+(t11123*1/(t11117* \
                   t11117)*(b2f*c*t11098*(1.0/3.0)+b4f*t11093*t11138*(2.0/3.0)+b1f*c*t11139*t11098*(1.0/6.0)+b3f*c*t11089* \
                   t11098*(1.0/2.0)))/t11120-a1f*c*c0f*t11121*t11098*(2.0/3.0))+t11111*t11130*t11105*t11106*t11125*t11134* \
                   4.0+Aa*t11111*t11130*t11160*t11148*t11158*(t11137*t11147*4.0+t11105*t11106*t11134*4.0)*2.0+Aa*t11111* \
                   t11160*t11164*t11148*t11166*t11158*2.0-(t11111*t11130*t11160*1/(t11154*t11154)*t11148*t11166*(b2a* \
                   c*t11098*(1.0/3.0)+b4a*t11093*t11138*(2.0/3.0)+b1a*c*t11139*t11098*(1.0/6.0)+b3a*c*t11089*t11098*(1.0/ \
                   2.0)))/t11157+Aa*a1a*c*t11111*t11130*t11148*t11166*t11158*t11098*(2.0/3.0))-c0p*t11201*t11192*2.0- \
                   t11111*t11204*t11250)*(ccab1*gcab*t11208*t11254*(1.0/2.0)-ccab1*t11212*t11215*t11208*t11256*(1.0/2.0) \
                   +ccab2*t11212*t11215*t11208*t11257-ccab2*t11215*t11260*t11216*t11274-ccab4*t11217*t11218*t11263*t11268+ \
                   ccab4*t11212*t11216*t11208*t11217*t11262*2.0+ccab3*gcab*t11215*t11216*t11261*t11208*(3.0/2.0)-ccab3* \
                   gcab*t11212*t11215*t11216*t11283*t11258)-(X-1.0)*(-kp*rho_b[index]*t11081*t11058*(mu_*t11043*t11044* \
                   t11046*t11085*(1.0/3.0)+mu_*t11043*t11044*t11047*t11084*(1.0/2.0))+mu_*t11043*t11081*t11046*t11047* \
                   t11058*(1.0/4.0)+mu_*t11043*t11047*t11083*t11058*(C_k*a_1*t11082*t11049*t11059*(5.0/3.0)-C_k*a_1*t11051* \
                   t11082*t11065*t11049*(5.0/3.0)+C_k*a_2*t11051*t11082*t11065*t11049*(1.0E1/3.0)-C_k*a_2*t11052*t11082* \
                   t11049*t11067*(1.0E1/3.0)+C_k*a_3*t11052*t11082*t11049*t11067*5.0-C_k*a_4*t11053*t11071*t11082*t11049* \
                   (2.0E1/3.0)+C_k*a_5*t11053*t11071*t11082*t11049*(2.5E1/3.0)-C_k*a_8*t11054*t11082*t11049*t11079*(4.0E1/ \
                   3.0)+C_k*a_9*t11054*t11082*t11049*t11079*1.5E1+C_k*a_10*t11051*t11061*t11054*t11082*t11049*(5.0E1/ \
                   3.0)-C_k*a_10*t11052*t11054*t11063*t11082*t11049*(5.0E1/3.0)+C_k*a_11*t11052*t11054*t11063*t11082* \
                   t11049*(5.5E1/3.0)-C_k*a_3*t11051*t11052*t11082*t11049*t11069*5.0+C_k*a_4*t11051*t11052*t11082*t11049* \
                   t11069*(2.0E1/3.0)-C_k*a_5*t11051*t11053*t11073*t11082*t11049*(2.5E1/3.0)+C_k*a_6*t11051*t11053*t11073* \
                   t11082*t11049*1.0E1-C_k*a_6*t11052*t11053*t11082*t11075*t11049*1.0E1+C_k*a_7*t11052*t11053*t11082* \
                   t11075*t11049*(3.5E1/3.0)-C_k*a_9*t11051*t11061*t11054*t11082*t11049*1.5E1-C_k*a_11*t11051*t11052* \
                   t11054*1/pow(t11055,1.2E1)*t11082*t11049*(5.5E1/3.0)-C_k*a_7*t11051*t11052*t11053*t11082*t11049*t11077* \
                   (3.5E1/3.0)+C_k*a_8*t11051*t11052*t11053*t11082*t11049*t11077*(4.0E1/3.0))*(1.0/4.0)+mu_*t11043*t11081* \
                   t11047*t11083*1/(t11057*t11057*t11057)*(gamma_bb[index]*mu_*t11043*t11044*t11046*t11085*(1.0/3.0)+ \
                   gamma_bb[index]*mu_*t11043*t11044*t11047*t11084*(1.0/2.0))*(1.0/2.0))-t11318*t11367*t11289+rho_b[index]* \
                   t11370*t11318*t11367-rho_b[index]*t11318*t11289*(ccaa1*gcaa*t11255*t11319*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t11321*t11291*t11259*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t11323*t11291*t11259*8.0+ccaa4*t11302*t11331* \
                   t11332*t11292*t11337*(3.2E1/3.0)+ccaa2*t11340*t11290*t11326*t11291*t11259*(1.6E1/3.0)+ccaa4*t11302* \
                   t11332*t11292*t11293*(gcaa*t11255*(3.2E1/3.0)+gamma_bb[index]*t11291*t11259*6.4E1+gamma_bb[index]* \
                   t11331*t11290*t11292*(1.28E2/3.0)+gcaa*t11324*t11290*t11291*9.6E1)-ccaa1*gcaa*t11324*t11290*t11291* \
                   1/(t11297*t11297*t11297)*(1.6E1/3.0)+ccaa2*t11290*t11326*t11291*t11294*(gcaa*t11255*(1.6E1/3.0)+gamma_bb[index]* \
                   t11291*t11259*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t11320*t11331*t11290*t11292*(1.28E2/3.0)+ccaa2*gamma_bb[index]* \
                   t11343*t11326*t11291*t11294*2.0-ccaa3*gcaa*t11322*t11324*t11290*t11291*2.4E1+ccaa4*gamma_bb[index]* \
                   t11332*t11352*t11290*t11292*t11293*4.0+ccaa3*gcaa*t11325*t11290*t11291*t11347*t11295*3.0-ccaa2*1/(t11310* \
                   t11310*t11310)*t11340*t11343*t11290*t11291*t11294*2.0-ccaa4*t11302*1/(t11307*t11307*t11307)*t11352* \
                   t11292*t11337*t11293*2.0+ccaa3*gamma_bb[index]*gcaa*t11325*t11290*t11291*t11295*(gcaa*t11255*8.0+gamma_bb[index]* \
                   t11291*t11259*3.2E1+gcaa*t11324*t11290*t11291*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t11330*t11324*t11325* \
                   t11290*t11291*8.0-ccaa3*gamma_bb[index]*gcaa*1/(t11301*t11301*t11301)*t11330*t11290*t11291*t11347* \
                   t11295*2.0)-t11312*t11370*t11049*(ccaa0+ccaa1*gamma_bb[index]*gcaa*t11208*t11319+ccaa4*t11302*t11320* \
                   t11292*t11293+ccaa2*t11321*t11290*t11291*t11294+ccaa3*gamma_bb[index]*gcaa*t11322*t11290*t11291*t11295) \
                   *(1.0/8.0)-t11312*t11049*t11289*(ccaa1*gamma_bb[index]*gcaa*t11255*t11319*(8.0/3.0)+ccaa4*t11302*t11320* \
                   t11331*t11292*(3.2E1/3.0)+ccaa2*t11321*t11290*t11291*t11259*(1.6E1/3.0)-ccaa1*t11323*t11290*t11291* \
                   t11259*(8.0/3.0)-ccaa4*t11302*t11332*t11352*t11292*t11293-ccaa2*t11343*t11290*t11326*t11291*t11294+ \
                   ccaa3*gamma_bb[index]*gcaa*t11322*t11324*t11290*t11291*8.0-ccaa3*gamma_bb[index]*gcaa*t11325*t11290* \
                   t11291*t11347*t11295)*(1.0/8.0)-gamma_bb[index]*t11312*t11083*t11049*t11367*t11289*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t13005 = 1/pow(rho_b[index],1.0/3.0);
                double t13006 = c*t13005;
                double t13007 = sqrt(t13006);
                double t13008 = pow(t13006,3.0/2.0);
                double t13009 = c*c;
                double t13010 = 1/pow(rho_b[index],2.0/3.0);
                double t13011 = 1/c0p;
                double t13012 = b1p*t13007;
                double t13013 = b3p*t13008;
                double t13014 = b4p*t13010*t13009;
                double t13015 = b2p*c*t13005;
                double t13016 = t13012+t13013+t13014+t13015;
                double t13017 = 1/t13016;
                double t13018 = t13011*t13017*(1.0/2.0);
                double t13019 = t13018+1.0;
                double t13020 = log(t13019);
                double t13021 = a1p*c*t13005;
                double t13022 = t13021+1.0;
                double t13023 = 1/pow(rho_b[index],8.0/3.0);
                double t13024 = gamma_bb[index]*gamma_bb[index];
                double t13025 = gcaa*gcaa;
                double t13026 = t13025*t13025;
                double t13027 = 1/pow(rho_b[index],3.2E1/3.0);
                double t13028 = 1/pow(rho_b[index],1.6E1/3.0);
                double t13029 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t13030 = gamma_bb[index]*gcaa*t13023;
                double t13031 = t13030+1.0;
                double t13032 = gamma_bb[index]*gcaa*t13023*3.0;
                double t13033 = gamma_bb[index]*gcaa*t13024*t13025*t13029;
                double t13034 = t13024*t13025*t13028*3.0;
                double t13035 = t13032+t13033+t13034+1.0;
                double t13036 = t13024*t13024;
                double t13037 = gamma_bb[index]*gcaa*t13023*4.0;
                double t13038 = gamma_bb[index]*gcaa*t13024*t13025*t13029*4.0;
                double t13039 = t13024*t13025*t13028*6.0;
                double t13040 = t13026*t13027*t13036;
                double t13041 = t13040+t13037+t13038+t13039+1.0;
                double t13042 = gamma_bb[index]*gcaa*t13023*2.0;
                double t13043 = t13024*t13025*t13028;
                double t13044 = t13042+t13043+1.0;
                double t13045 = pow(2.0,1.0/3.0);
                double t13046 = t13045*2.0;
                double t13047 = t13046-2.0;
                double t13048 = two_13*2.0;
                double t13049 = t13048-2.0;
                double t13050 = 1/t13049;
                double t13051 = 1/c0f;
                double t13052 = b1f*t13007;
                double t13053 = b3f*t13008;
                double t13054 = b4f*t13010*t13009;
                double t13055 = b2f*c*t13005;
                double t13056 = t13052+t13053+t13054+t13055;
                double t13057 = 1/t13056;
                double t13058 = t13051*t13057*(1.0/2.0);
                double t13059 = t13058+1.0;
                double t13060 = log(t13059);
                double t13061 = a1f*c*t13005;
                double t13062 = t13061+1.0;
                double t13063 = c0f*t13060*t13062*2.0;
                double t13064 = c0p*t13020*t13022*2.0;
                double t13065 = tau_b[index]-1.0/1.0E20;
                double t13066 = ( (t13065 > 0.0) ?  1.0 : 0.0 ) ;
                double t13067 = 1/tau_b[index];
                double t13068 = tau_b[index]*2.0;
                double t13069 = 1/rho_b[index];
                double t13114 = gamma_bb[index]*t13069*(1.0/4.0);
                double t13070 = -t13114+t13068;
                double t13071 = t13070*t13067*(1.0/2.0);
                double t13072 = t13071-1.0;
                double t13073 = t13072*t13066;
                double t13074 = t13073+1.0;
                double t13075 = 1/t13031;
                double t13076 = 1/t13041;
                double t13077 = 1/t13044;
                double t13078 = 1/t13035;
                double t13079 = 1/pow(rho_b[index],1.9E1/3.0);
                double t13080 = 1/(t13031*t13031);
                double t13081 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t13082 = 1/pow(rho_b[index],1.1E1/3.0);
                double t13083 = 1/(t13035*t13035);
                double t13084 = 1/(t13044*t13044);
                double t13085 = gcaa*t13023*3.0;
                double t13086 = gamma_bb[index]*t13025*t13028*6.0;
                double t13087 = gcaa*t13024*t13025*t13029*3.0;
                double t13088 = t13085+t13086+t13087;
                double t13089 = 1/pow(rho_b[index],3.5E1/3.0);
                double t13090 = 1/(t13041*t13041);
                double t13091 = gcaa*t13023*4.0;
                double t13092 = gamma_bb[index]*t13025*t13028*1.2E1;
                double t13093 = gcaa*t13024*t13025*t13029*1.2E1;
                double t13094 = gamma_bb[index]*t13024*t13026*t13027*4.0;
                double t13095 = t13091+t13092+t13093+t13094;
                double t13096 = gcaa*t13023*2.0;
                double t13097 = gamma_bb[index]*t13025*t13028*2.0;
                double t13098 = t13096+t13097;
                double t13099 = gamma_bb[index]*gcaa*t13082*(1.6E1/3.0);
                double t13100 = t13024*t13025*t13079*(1.6E1/3.0);
                double t13101 = t13100+t13099;
                double t13102 = gamma_bb[index]*gcaa*t13082*8.0;
                double t13103 = gamma_bb[index]*gcaa*t13024*t13025*t13081*8.0;
                double t13104 = t13024*t13025*t13079*1.6E1;
                double t13105 = t13102+t13103+t13104;
                double t13106 = gamma_bb[index]*gcaa*t13082*(3.2E1/3.0);
                double t13107 = gamma_bb[index]*gcaa*t13024*t13025*t13081*3.2E1;
                double t13108 = t13024*t13025*t13079*3.2E1;
                double t13109 = t13026*t13036*t13089*(3.2E1/3.0);
                double t13110 = t13106+t13107+t13108+t13109;
                double t13111 = t13063-t13064;
                double t13112 = t13111*t13050*t13047;
                double t13113 = t13112+t13064;
                double t13115 = 1/pow(rho_b[index],4.0/3.0);
                double t13116 = 1/pow(rho_b[index],5.0/3.0);
                double t13117 = 1/sqrt(t13006);
                double t13118 = 1/t13019;
                double t13119 = 1/(t13016*t13016);
                double t13120 = b4p*t13116*t13009*(2.0/3.0);
                double t13121 = b2p*c*t13115*(1.0/3.0);
                double t13122 = b1p*c*t13115*t13117*(1.0/6.0);
                double t13123 = b3p*c*t13007*t13115*(1.0/2.0);
                double t13124 = t13120+t13121+t13122+t13123;
                double t13125 = t13022*t13124*t13118*t13119;
                double t13126 = ccaa1*gcaa*t13023*t13075;
                double t13127 = ccaa4*gamma_bb[index]*t13024*t13026*t13027*t13076*4.0;
                double t13128 = ccaa2*gamma_bb[index]*t13025*t13028*t13077*2.0;
                double t13129 = ccaa3*gcaa*t13024*t13025*t13029*t13078*3.0;
                double t13140 = ccaa1*gamma_bb[index]*t13025*t13080*t13028;
                double t13141 = ccaa3*gamma_bb[index]*gcaa*t13024*t13025*t13029*t13083*t13088;
                double t13142 = ccaa4*t13026*t13027*t13036*t13090*t13095;
                double t13143 = ccaa2*t13024*t13025*t13028*t13084*t13098;
                double t13130 = -t13140-t13141-t13142-t13143+t13126+t13127+t13128+t13129;
                double t13131 = 1/t13059;
                double t13132 = 1/(t13056*t13056);
                double t13133 = b4f*t13116*t13009*(2.0/3.0);
                double t13134 = b2f*c*t13115*(1.0/3.0);
                double t13135 = b1f*c*t13115*t13117*(1.0/6.0);
                double t13136 = b3f*c*t13007*t13115*(1.0/2.0);
                double t13137 = t13133+t13134+t13135+t13136;
                double t13138 = a1f*c*c0f*t13060*t13115*(2.0/3.0);
                double t13139 = a1p*c*c0p*t13020*t13115*(2.0/3.0);
                double t13144 = 1/(k*k);
                double t13145 = 1/kp;
                double t13146 = rho_b[index]*2.0;
                double t13147 = 1/(rho_b[index]*rho_b[index]);
                double t13148 = 1/pow(t13146,2.0/3.0);
                double t13149 = pow(rho_b[index],5.0/3.0);
                double t13150 = C_k*t13067*t13149;
                double t13151 = t13150-1.0;
                double t13152 = t13151*t13151;
                double t13153 = t13152*t13152;
                double t13154 = t13153*t13153;
                double t13155 = t13150+1.0;
                double t13156 = gamma_bb[index]*mu_*t13144*t13145*t13147*t13148*(1.0/4.0);
                double t13157 = t13156+1.0;
                double t13158 = 1/(t13157*t13157);
                double t13159 = X-1.0;
                double t13160 = 1/t13155;
                double t13161 = pow(rho_b[index],2.0/3.0);
                double t13162 = 1/(t13155*t13155);
                double t13163 = 1/pow(t13155,1.0E1);
                double t13164 = 1/pow(t13155,1.1E1);
                double t13165 = 1/(t13155*t13155*t13155);
                double t13166 = 1/(t13155*t13155*t13155*t13155);
                double t13167 = 1/(t13155*t13155*t13155*t13155*t13155);
                double t13168 = 1/(t13155*t13155*t13155*t13155*t13155*t13155);
                double t13169 = 1/(t13155*t13155*t13155*t13155*t13155*t13155*t13155);
                double t13170 = 1/(t13155*t13155*t13155*t13155*t13155*t13155*t13155*t13155);
                double t13171 = 1/(t13155*t13155*t13155*t13155*t13155*t13155*t13155*t13155*t13155);
                double t13172 = a_1*t13151*t13160;
                double t13173 = a_10*t13152*t13154*t13163;
                double t13174 = a_11*t13151*t13152*t13154*t13164;
                double t13175 = a_2*t13152*t13162;
                double t13176 = a_3*t13151*t13152*t13165;
                double t13177 = a_4*t13153*t13166;
                double t13178 = a_5*t13151*t13153*t13167;
                double t13179 = a_6*t13152*t13153*t13168;
                double t13180 = a_7*t13151*t13152*t13153*t13169;
                double t13181 = a_8*t13170*t13154;
                double t13182 = a_9*t13151*t13171*t13154;
                double t13183 = t13180+t13172+t13181+t13173+t13182+t13174+t13175+t13176+t13177+t13178+t13179+1.0;
                double t13184 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
                double t13185 = 1/pow(t13146,5.0/3.0);
                v_rho_b_gamma_bb_[index] = -t13130*t13074*(t13064+t13050*t13047*(t13063-c0p*t13020*t13022*2.0))-t13066* \
                   t13067*(-t13125+t13139+t13050*t13047*(t13125+t13138-t13139-t13131*t13132*t13062*t13137))*(ccaa0+ccaa1* \
                   gamma_bb[index]*gcaa*t13023*t13075+ccaa2*t13024*t13025*t13028*t13077+ccaa4*t13026*t13027*t13036*t13076+ \
                   ccaa3*gamma_bb[index]*gcaa*t13024*t13025*t13029*t13078)*(1.0/8.0)-rho_b[index]*t13113*t13074*(ccaa1* \
                   gcaa*t13082*t13075*(-8.0/3.0)+ccaa1*gamma_bb[index]*t13025*t13080*t13079*8.0-ccaa2*gamma_bb[index]* \
                   t13025*t13077*t13079*(3.2E1/3.0)+ccaa2*t13024*t13025*t13084*t13079*t13098*(1.6E1/3.0)+ccaa4*t13026* \
                   t13036*t13090*t13095*t13089*(3.2E1/3.0)+ccaa4*t13026*t13027*t13036*t13090*(gcaa*t13082*(3.2E1/3.0) \
                   +gamma_bb[index]*t13025*t13079*6.4E1+gamma_bb[index]*t13024*t13026*t13089*(1.28E2/3.0)+gcaa*t13024* \
                   t13025*t13081*9.6E1)-ccaa1*gcaa*1/(t13031*t13031*t13031)*t13024*t13025*t13081*(1.6E1/3.0)+ccaa2*t13024* \
                   t13025*t13028*t13084*(gcaa*t13082*(1.6E1/3.0)+gamma_bb[index]*t13025*t13079*(3.2E1/3.0))+ccaa2*gamma_bb[index]* \
                   t13101*t13025*t13028*t13084*2.0-ccaa4*gamma_bb[index]*t13024*t13026*t13076*t13089*(1.28E2/3.0)-ccaa3* \
                   gcaa*t13024*t13025*t13081*t13078*2.4E1+ccaa4*gamma_bb[index]*t13110*t13024*t13026*t13027*t13090*4.0+ \
                   ccaa3*gcaa*t13024*t13105*t13025*t13029*t13083*3.0-ccaa4*t13110*1/(t13041*t13041*t13041)*t13026*t13027* \
                   t13036*t13095*2.0-ccaa2*t13101*t13024*t13025*1/(t13044*t13044*t13044)*t13028*t13098*2.0+ccaa3*gamma_bb[index]* \
                   gcaa*t13024*t13025*t13029*t13083*(gcaa*t13082*8.0+gamma_bb[index]*t13025*t13079*3.2E1+gcaa*t13024* \
                   t13025*t13081*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t13024*t13025*t13081*t13083*t13088*8.0-ccaa3*gamma_bb[index]* \
                   gcaa*t13024*t13105*t13025*1/(t13035*t13035*t13035)*t13029*t13088*2.0)+rho_b[index]*t13130*t13074*(- \
                   t13125+t13139+t13050*t13047*(t13125+t13138-t13131*t13132*t13062*t13137-a1p*c*c0p*t13020*t13115*(2.0/ \
                   3.0)))-t13113*t13066*t13067*(ccaa1*gamma_bb[index]*gcaa*t13082*t13075*(8.0/3.0)-ccaa1*t13024*t13025* \
                   t13080*t13079*(8.0/3.0)+ccaa2*t13024*t13025*t13077*t13079*(1.6E1/3.0)+ccaa4*t13026*t13036*t13076*t13089* \
                   (3.2E1/3.0)-ccaa2*t13101*t13024*t13025*t13028*t13084-ccaa4*t13110*t13026*t13027*t13036*t13090+ccaa3* \
                   gamma_bb[index]*gcaa*t13024*t13025*t13081*t13078*8.0-ccaa3*gamma_bb[index]*gcaa*t13024*t13105*t13025* \
                   t13029*t13083)*(1.0/8.0)-gamma_bb[index]*t13130*t13113*t13066*t13067*t13069*(1.0/8.0)+kp*rho_b[index]* \
                   t13183*t13158*t13159*(mu_*t13144*t13145*t13147*t13185*(1.0/3.0)+mu_*t13144*t13145*t13148*t13184*(1.0/ \
                   2.0))-mu_*t13144*t13147*t13183*t13148*t13158*t13159*(1.0/4.0)-mu_*t13144*t13148*t13158*t13069*t13159* \
                   (C_k*a_1*t13160*t13161*t13067*(5.0/3.0)-C_k*a_1*t13151*t13161*t13162*t13067*(5.0/3.0)+C_k*a_2*t13151* \
                   t13161*t13162*t13067*(1.0E1/3.0)-C_k*a_2*t13152*t13161*t13165*t13067*(1.0E1/3.0)+C_k*a_3*t13152*t13161* \
                   t13165*t13067*5.0-C_k*a_4*t13161*t13153*t13067*t13167*(2.0E1/3.0)+C_k*a_5*t13161*t13153*t13067*t13167* \
                   (2.5E1/3.0)-C_k*a_8*t13161*t13171*t13154*t13067*(4.0E1/3.0)+C_k*a_9*t13161*t13171*t13154*t13067*1.5E1+ \
                   C_k*a_10*t13151*t13161*t13154*t13163*t13067*(5.0E1/3.0)-C_k*a_10*t13152*t13161*t13154*t13164*t13067* \
                   (5.0E1/3.0)+C_k*a_11*t13152*t13161*t13154*t13164*t13067*(5.5E1/3.0)-C_k*a_3*t13151*t13152*t13161*t13067* \
                   t13166*5.0+C_k*a_4*t13151*t13152*t13161*t13067*t13166*(2.0E1/3.0)-C_k*a_5*t13151*t13161*t13153*t13067* \
                   t13168*(2.5E1/3.0)+C_k*a_6*t13151*t13161*t13153*t13067*t13168*1.0E1-C_k*a_6*t13152*t13161*t13153*t13067* \
                   t13169*1.0E1+C_k*a_7*t13152*t13161*t13153*t13067*t13169*(3.5E1/3.0)-C_k*a_9*t13151*t13161*t13154*t13163* \
                   t13067*1.5E1-C_k*a_11*t13151*t13152*t13161*t13154*1/pow(t13155,1.2E1)*t13067*(5.5E1/3.0)-C_k*a_7*t13151* \
                   t13152*t13161*t13170*t13153*t13067*(3.5E1/3.0)+C_k*a_8*t13151*t13152*t13161*t13170*t13153*t13067*(4.0E1/ \
                   3.0))*(1.0/4.0)-mu_*t13144*t13183*t13148*1/(t13157*t13157*t13157)*t13069*t13159*(gamma_bb[index]*mu_* \
                   t13144*t13145*t13147*t13185*(1.0/3.0)+gamma_bb[index]*mu_*t13144*t13145*t13148*t13184*(1.0/2.0))*(1.0/ \
                   2.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t11376 = 1/pow(rho_a[index],1.0/3.0);
                double t11377 = c*t11376;
                double t11378 = sqrt(t11377);
                double t11379 = pow(t11377,3.0/2.0);
                double t11380 = c*c;
                double t11381 = 1/pow(rho_a[index],2.0/3.0);
                double t11382 = 1/c0p;
                double t11383 = b1p*t11378;
                double t11384 = b3p*t11379;
                double t11385 = b4p*t11380*t11381;
                double t11386 = b2p*c*t11376;
                double t11387 = t11383+t11384+t11385+t11386;
                double t11388 = 1/t11387;
                double t11389 = t11382*t11388*(1.0/2.0);
                double t11390 = t11389+1.0;
                double t11391 = log(t11390);
                double t11392 = a1p*c*t11376;
                double t11393 = t11392+1.0;
                double t11394 = pow(2.0,1.0/3.0);
                double t11395 = t11394*2.0;
                double t11396 = t11395-2.0;
                double t11397 = two_13*2.0;
                double t11398 = t11397-2.0;
                double t11399 = 1/t11398;
                double t11400 = 1/c0f;
                double t11401 = 1/pow(rho_b[index],1.0/3.0);
                double t11402 = c*t11401;
                double t11403 = sqrt(t11402);
                double t11404 = pow(t11402,3.0/2.0);
                double t11405 = 1/pow(rho_b[index],2.0/3.0);
                double t11406 = b1p*t11403;
                double t11407 = b3p*t11404;
                double t11408 = b4p*t11405*t11380;
                double t11409 = b2p*c*t11401;
                double t11410 = t11406+t11407+t11408+t11409;
                double t11411 = 1/t11410;
                double t11412 = t11411*t11382*(1.0/2.0);
                double t11413 = t11412+1.0;
                double t11414 = log(t11413);
                double t11415 = a1p*c*t11401;
                double t11416 = t11415+1.0;
                double t11417 = c0p*t11414*t11416*2.0;
                double t11418 = rho_a[index]+rho_b[index];
                double t11419 = 1/pow(t11418,1.0/3.0);
                double t11420 = c*t11419;
                double t11421 = sqrt(t11420);
                double t11422 = pow(t11420,3.0/2.0);
                double t11423 = 1/pow(t11418,2.0/3.0);
                double t11424 = b1p*t11421;
                double t11425 = b3p*t11422;
                double t11426 = b4p*t11423*t11380;
                double t11427 = b2p*c*t11419;
                double t11428 = t11424+t11425+t11426+t11427;
                double t11429 = 1/t11428;
                double t11430 = t11382*t11429*(1.0/2.0);
                double t11431 = t11430+1.0;
                double t11432 = log(t11431);
                double t11433 = a1p*c*t11419;
                double t11434 = t11433+1.0;
                double t11435 = c0p*t11432*t11434*2.0;
                double t11436 = rho_a[index]-rho_b[index];
                double t11437 = t11436*t11436;
                double t11438 = 1/t11418;
                double t11439 = t11436*t11438;
                double t11440 = 1/(t11418*t11418*t11418*t11418);
                double t11441 = t11437*t11437;
                double t11442 = t11439+1.0;
                double t11443 = pow(t11442,4.0/3.0);
                double t11444 = -t11439+1.0;
                double t11445 = pow(t11444,4.0/3.0);
                double t11446 = t11443+t11445-2.0;
                double t11447 = gcab*gcab;
                double t11448 = 1/pow(rho_a[index],1.6E1/3.0);
                double t11449 = 1/pow(rho_a[index],8.0/3.0);
                double t11450 = gamma_aa[index]*t11449*(1.0/2.0);
                double t11451 = 1/pow(rho_b[index],8.0/3.0);
                double t11452 = gamma_bb[index]*t11451*(1.0/2.0);
                double t11453 = t11450+t11452;
                double t11454 = gcab*t11453;
                double t11455 = t11454+1.0;
                double t11456 = t11453*t11453;
                double t11457 = t11447*t11456;
                double t11458 = gcab*t11453*2.0;
                double t11459 = t11457+t11458+1.0;
                double t11460 = t11447*t11447;
                double t11477 = gcab*t11449*2.0;
                double t11478 = t11453*t11447*t11449*6.0;
                double t11479 = gcab*t11447*t11456*t11449*6.0;
                double t11480 = t11460*t11453*t11456*t11449*2.0;
                double t11461 = t11480+t11477+t11478+t11479;
                double t11462 = t11456*t11456;
                double t11482 = gcab*t11449*(3.0/2.0);
                double t11483 = t11453*t11447*t11449*3.0;
                double t11484 = gcab*t11447*t11456*t11449*(3.0/2.0);
                double t11463 = t11482+t11483+t11484;
                double t11464 = t11447*t11456*3.0;
                double t11465 = gcab*t11453*t11447*t11456;
                double t11466 = gcab*t11453*3.0;
                double t11467 = t11464+t11465+t11466+1.0;
                double t11474 = gcab*t11449;
                double t11475 = t11453*t11447*t11449;
                double t11468 = t11474+t11475;
                double t11469 = t11447*t11456*6.0;
                double t11470 = gcab*t11453*t11447*t11456*4.0;
                double t11471 = t11460*t11462;
                double t11472 = gcab*t11453*4.0;
                double t11473 = t11470+t11471+t11472+t11469+1.0;
                double t11476 = 1/(t11459*t11459);
                double t11481 = 1/(t11473*t11473);
                double t11485 = 1/(t11467*t11467);
                double t11486 = b1f*t11378;
                double t11487 = b3f*t11379;
                double t11488 = b4f*t11380*t11381;
                double t11489 = b2f*c*t11376;
                double t11490 = t11486+t11487+t11488+t11489;
                double t11491 = 1/t11490;
                double t11492 = t11400*t11491*(1.0/2.0);
                double t11493 = t11492+1.0;
                double t11494 = log(t11493);
                double t11495 = a1f*c*t11376;
                double t11496 = t11495+1.0;
                double t11497 = c0f*t11494*t11496*2.0;
                double t11498 = c0p*t11391*t11393*2.0;
                double t11499 = gcaa*gcaa;
                double t11500 = gamma_aa[index]*gamma_aa[index];
                double t11501 = t11499*t11499;
                double t11502 = 1/pow(rho_a[index],3.2E1/3.0);
                double t11503 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t11504 = gamma_aa[index]*gcaa*t11449;
                double t11505 = t11504+1.0;
                double t11506 = gamma_aa[index]*gcaa*t11449*2.0;
                double t11507 = t11500*t11448*t11499;
                double t11508 = t11506+t11507+1.0;
                double t11509 = gamma_aa[index]*gcaa*t11449*3.0;
                double t11510 = gamma_aa[index]*gcaa*t11500*t11503*t11499;
                double t11511 = t11500*t11448*t11499*3.0;
                double t11512 = t11510+t11511+t11509+1.0;
                double t11513 = t11500*t11500;
                double t11529 = gcaa*t11449*4.0;
                double t11530 = gamma_aa[index]*t11448*t11499*1.2E1;
                double t11531 = gcaa*t11500*t11503*t11499*1.2E1;
                double t11532 = gamma_aa[index]*t11500*t11501*t11502*4.0;
                double t11514 = t11530+t11531+t11532+t11529;
                double t11515 = gamma_aa[index]*gcaa*t11449*4.0;
                double t11516 = gamma_aa[index]*gcaa*t11500*t11503*t11499*4.0;
                double t11517 = t11500*t11448*t11499*6.0;
                double t11518 = t11501*t11502*t11513;
                double t11519 = t11515+t11516+t11517+t11518+1.0;
                double t11522 = gcaa*t11449*2.0;
                double t11523 = gamma_aa[index]*t11448*t11499*2.0;
                double t11520 = t11522+t11523;
                double t11521 = 1/(t11512*t11512);
                double t11524 = 1/(t11508*t11508);
                double t11525 = gcaa*t11449*3.0;
                double t11526 = gamma_aa[index]*t11448*t11499*6.0;
                double t11527 = gcaa*t11500*t11503*t11499*3.0;
                double t11528 = t11525+t11526+t11527;
                double t11533 = 1/(t11519*t11519);
                double t11534 = 1/tau_a[index];
                double t11535 = tau_a[index]-1.0/1.0E20;
                double t11536 = ( (t11535 > 0.0) ?  1.0 : 0.0 ) ;
                double t11537 = t11497-t11498;
                double t11538 = t11537*t11396*t11399;
                double t11539 = t11538+t11498;
                double t11540 = 1/t11519;
                double t11541 = 1/t11508;
                double t11542 = 1/t11512;
                double t11543 = 1/(t11505*t11505);
                double t11544 = 1/kp;
                double t11545 = rho_a[index]*2.0;
                double t11546 = pow(rho_a[index],5.0/3.0);
                double t11547 = C_k*t11534*t11546;
                double t11548 = t11547-1.0;
                double t11549 = t11548*t11548;
                double t11550 = t11549*t11549;
                double t11551 = t11550*t11550;
                double t11552 = t11547+1.0;
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t11498+t11396*t11399*(t11497-c0p*t11391*t11393*2.0) \
                   )+rho_b[index]*(t11417-t11396*t11399*(t11417-c0f*log((t11400*(1.0/2.0))/(b1f*t11403+b3f*t11404+b2f* \
                   c*t11401+b4f*t11405*t11380)+1.0)*(a1f*c*t11401+1.0)*2.0))-t11418*(t11435-t11440*t11441*t11446*t11399* \
                   (t11435-c0f*log((t11400*(1.0/2.0))/(b1f*t11421+b3f*t11422+b2f*c*t11419+b4f*t11423*t11380)+1.0)*(a1f* \
                   c*t11419+1.0)*2.0)+(Aa*t11446*t11399*log((1.0/2.0)/(Aa*(b1a*t11421+b3a*t11422+b2a*c*t11419+b4a*t11423* \
                   t11380))+1.0)*(t11440*t11441-1.0)*(a1a*c*t11419+1.0)*2.0)/d2fz0))*(ccab1*1/(t11455*t11455)*t11447* \
                   t11448*(1.0/2.0)-(ccab2*t11447*t11448*(1.0/2.0))/t11459-ccab4*t11460*(t11461*t11461)*t11462*1/(t11473* \
                   t11473*t11473)*2.0-ccab2*t11447*t11456*1/(t11459*t11459*t11459)*(t11468*t11468)*2.0+ccab2*t11460*t11456* \
                   t11448*t11476*(1.0/2.0)+ccab4*t11460*t11462*t11481*(t11447*t11448*3.0+t11460*t11456*t11448*3.0+gcab* \
                   t11453*t11447*t11448*6.0)-(ccab4*t11460*t11456*t11448*3.0)/t11473+ccab2*t11453*t11447*t11449*t11476* \
                   t11468*2.0-ccab1*gcab*t11453*1/(t11455*t11455*t11455)*t11447*t11448*(1.0/2.0)-(ccab3*gcab*t11453*t11447* \
                   t11448*(3.0/2.0))/t11467-ccab3*gcab*t11453*(t11463*t11463)*t11447*t11456*1/(t11467*t11467*t11467)* \
                   2.0+ccab3*gcab*t11463*t11447*t11456*t11449*t11485*3.0+ccab4*t11460*t11461*t11453*t11481*t11456*t11449* \
                   4.0+ccab3*gcab*t11453*t11447*t11456*t11485*(t11447*t11448*(3.0/2.0)+gcab*t11453*t11447*t11448*(3.0/ \
                   2.0)))+t11534*t11536*t11539*((ccaa1*gcaa*t11449)/t11505+ccaa2*gamma_aa[index]*t11541*t11448*t11499* \
                   2.0-ccaa1*gamma_aa[index]*t11543*t11448*t11499-ccaa4*t11501*t11502*t11513*t11514*t11533-ccaa2*t11500* \
                   t11520*t11524*t11448*t11499+ccaa4*gamma_aa[index]*t11500*t11501*t11502*t11540*4.0+ccaa3*gcaa*t11500* \
                   t11503*t11542*t11499*3.0-ccaa3*gamma_aa[index]*gcaa*t11500*t11503*t11521*t11528*t11499)*(1.0/4.0)- \
                   rho_a[index]*t11539*(t11536*(t11534*(tau_a[index]*2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/ \
                   2.0)-1.0)+1.0)*(ccaa2*t11541*t11448*t11499*2.0-ccaa1*t11543*t11448*t11499*2.0-ccaa2*t11500*t11501* \
                   t11502*t11524*2.0+ccaa4*t11500*t11501*t11502*t11540*1.2E1-ccaa4*t11501*t11502*t11513*t11533*(t11448* \
                   t11499*1.2E1+t11500*t11501*t11502*1.2E1+gamma_aa[index]*gcaa*t11503*t11499*2.4E1)+ccaa1*gamma_aa[index]* \
                   gcaa*t11503*1/(t11505*t11505*t11505)*t11499*2.0+ccaa4*t11501*t11502*t11513*(t11514*t11514)*1/(t11519* \
                   t11519*t11519)*2.0+ccaa2*t11500*(t11520*t11520)*1/(t11508*t11508*t11508)*t11448*t11499*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t11503*t11542*t11499*6.0-ccaa2*gamma_aa[index]*t11520*t11524*t11448*t11499*4.0-ccaa4*gamma_aa[index]* \
                   t11500*t11501*t11502*t11514*t11533*8.0-ccaa3*gcaa*t11500*t11503*t11521*t11528*t11499*6.0-ccaa3*gamma_aa[index]* \
                   gcaa*t11500*t11503*t11521*t11499*(t11448*t11499*6.0+gamma_aa[index]*gcaa*t11503*t11499*6.0)+ccaa3* \
                   gamma_aa[index]*gcaa*t11500*t11503*1/(t11512*t11512*t11512)*(t11528*t11528)*t11499*2.0)+1/(k*k*k*k) \
                   *(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index])*t11544*1/pow(t11545,4.0/3.0)*1/pow(gamma_aa[index]* \
                   1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*t11544*1/pow(t11545,2.0/3.0)*(1.0/4.0)+1.0,3.0)*(X-1.0)* \
                   ((a_1*t11548)/t11552+a_2*1/(t11552*t11552)*t11549+a_4*t11550*1/(t11552*t11552*t11552*t11552)+a_8*t11551* \
                   1/(t11552*t11552*t11552*t11552*t11552*t11552*t11552*t11552)+a_10*t11551*1/pow(t11552,1.0E1)*t11549+ \
                   a_3*1/(t11552*t11552*t11552)*t11548*t11549+a_5*t11550*1/(t11552*t11552*t11552*t11552*t11552)*t11548+ \
                   a_6*t11550*1/(t11552*t11552*t11552*t11552*t11552*t11552)*t11549+a_9*t11551*1/(t11552*t11552*t11552* \
                   t11552*t11552*t11552*t11552*t11552*t11552)*t11548+a_11*t11551*1/pow(t11552,1.1E1)*t11548*t11549+a_7* \
                   t11550*1/(t11552*t11552*t11552*t11552*t11552*t11552*t11552)*t11548*t11549+1.0)*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                double t14314 = 1/pow(rho_a[index],1.0/3.0);
                double t14315 = c*t14314;
                double t14316 = sqrt(t14315);
                double t14317 = pow(t14315,3.0/2.0);
                double t14318 = c*c;
                double t14319 = 1/pow(rho_a[index],2.0/3.0);
                double t14320 = 1/c0p;
                double t14321 = b1p*t14316;
                double t14322 = b3p*t14317;
                double t14323 = b4p*t14318*t14319;
                double t14324 = b2p*c*t14314;
                double t14325 = t14321+t14322+t14323+t14324;
                double t14326 = 1/t14325;
                double t14327 = t14320*t14326*(1.0/2.0);
                double t14328 = t14327+1.0;
                double t14329 = log(t14328);
                double t14330 = a1p*c*t14314;
                double t14331 = t14330+1.0;
                double t14332 = gcaa*gcaa;
                double t14333 = 1/pow(rho_a[index],1.6E1/3.0);
                double t14334 = 1/pow(rho_a[index],8.0/3.0);
                double t14335 = gamma_aa[index]*gamma_aa[index];
                double t14336 = t14332*t14332;
                double t14337 = 1/pow(rho_a[index],3.2E1/3.0);
                double t14338 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t14339 = gamma_aa[index]*gcaa*t14334;
                double t14340 = t14339+1.0;
                double t14341 = gamma_aa[index]*gcaa*t14334*2.0;
                double t14342 = t14332*t14333*t14335;
                double t14343 = t14341+t14342+1.0;
                double t14344 = gamma_aa[index]*gcaa*t14334*3.0;
                double t14345 = gamma_aa[index]*gcaa*t14332*t14335*t14338;
                double t14346 = t14332*t14333*t14335*3.0;
                double t14347 = t14344+t14345+t14346+1.0;
                double t14348 = t14335*t14335;
                double t14364 = gcaa*t14334*4.0;
                double t14365 = gamma_aa[index]*t14332*t14333*1.2E1;
                double t14366 = gcaa*t14332*t14335*t14338*1.2E1;
                double t14367 = gamma_aa[index]*t14335*t14336*t14337*4.0;
                double t14349 = t14364+t14365+t14366+t14367;
                double t14350 = gamma_aa[index]*gcaa*t14334*4.0;
                double t14351 = gamma_aa[index]*gcaa*t14332*t14335*t14338*4.0;
                double t14352 = t14332*t14333*t14335*6.0;
                double t14353 = t14336*t14337*t14348;
                double t14354 = t14350+t14351+t14352+t14353+1.0;
                double t14357 = gcaa*t14334*2.0;
                double t14358 = gamma_aa[index]*t14332*t14333*2.0;
                double t14355 = t14357+t14358;
                double t14356 = 1/(t14347*t14347);
                double t14359 = 1/(t14343*t14343);
                double t14360 = gcaa*t14334*3.0;
                double t14361 = gamma_aa[index]*t14332*t14333*6.0;
                double t14362 = gcaa*t14332*t14335*t14338*3.0;
                double t14363 = t14360+t14361+t14362;
                double t14368 = 1/(t14354*t14354);
                double t14369 = 1/tau_a[index];
                double t14370 = tau_a[index]-1.0/1.0E20;
                double t14371 = ( (t14370 > 0.0) ?  1.0 : 0.0 ) ;
                double t14372 = pow(2.0,1.0/3.0);
                double t14373 = t14372*2.0;
                double t14374 = t14373-2.0;
                double t14375 = two_13*2.0;
                double t14376 = t14375-2.0;
                double t14377 = 1/t14376;
                double t14378 = 1/c0f;
                double t14379 = b1f*t14316;
                double t14380 = b3f*t14317;
                double t14381 = b4f*t14318*t14319;
                double t14382 = b2f*c*t14314;
                double t14383 = t14380+t14381+t14382+t14379;
                double t14384 = 1/t14383;
                double t14385 = t14384*t14378*(1.0/2.0);
                double t14386 = t14385+1.0;
                double t14387 = log(t14386);
                double t14388 = a1f*c*t14314;
                double t14389 = t14388+1.0;
                double t14390 = c0f*t14387*t14389*2.0;
                double t14391 = c0p*t14331*t14329*2.0;
                double t14392 = 1/t14354;
                double t14393 = 1/t14343;
                double t14394 = 1/t14347;
                double t14395 = 1/(t14340*t14340);
                double t14396 = 1/kp;
                double t14397 = rho_a[index]*2.0;
                double t14398 = pow(rho_a[index],5.0/3.0);
                double t14399 = C_k*t14369*t14398;
                double t14400 = t14399-1.0;
                double t14401 = t14400*t14400;
                double t14402 = t14401*t14401;
                double t14403 = t14402*t14402;
                double t14404 = t14399+1.0;
                v_gamma_aa_gamma_aa_[index] = t14371*t14369*(t14391+t14374*t14377*(t14390-t14391))*((ccaa1*gcaa*t14334) \
                   /t14340+ccaa2*gamma_aa[index]*t14332*t14333*t14393*2.0-ccaa1*gamma_aa[index]*t14332*t14333*t14395- \
                   ccaa2*t14332*t14333*t14335*t14355*t14359-ccaa4*t14336*t14337*t14348*t14349*t14368+ccaa4*gamma_aa[index]* \
                   t14335*t14336*t14337*t14392*4.0+ccaa3*gcaa*t14332*t14335*t14338*t14394*3.0-ccaa3*gamma_aa[index]*gcaa* \
                   t14332*t14335*t14363*t14338*t14356)*(1.0/4.0)-rho_a[index]*(t14371*(t14369*(tau_a[index]*2.0-(gamma_aa[index]* \
                   (1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0)+1.0)*(t14391+t14374*t14377*(t14390-c0p*t14331*t14329*2.0)) \
                   *(ccaa2*t14332*t14333*t14393*2.0-ccaa1*t14332*t14333*t14395*2.0+ccaa4*t14335*t14336*t14337*t14392* \
                   1.2E1-ccaa2*t14335*t14336*t14337*t14359*2.0-ccaa4*t14336*t14337*t14348*t14368*(t14332*t14333*1.2E1+ \
                   t14335*t14336*t14337*1.2E1+gamma_aa[index]*gcaa*t14332*t14338*2.4E1)+ccaa1*gamma_aa[index]*gcaa*1/ \
                   (t14340*t14340*t14340)*t14332*t14338*2.0+ccaa2*t14332*t14333*1/(t14343*t14343*t14343)*t14335*(t14355* \
                   t14355)*2.0+ccaa4*t14336*1/(t14354*t14354*t14354)*t14337*t14348*(t14349*t14349)*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t14332*t14338*t14394*6.0-ccaa2*gamma_aa[index]*t14332*t14333*t14355*t14359*4.0-ccaa4*gamma_aa[index]* \
                   t14335*t14336*t14337*t14349*t14368*8.0-ccaa3*gcaa*t14332*t14335*t14363*t14338*t14356*6.0-ccaa3*gamma_aa[index]* \
                   gcaa*t14332*t14335*t14338*t14356*(t14332*t14333*6.0+gamma_aa[index]*gcaa*t14332*t14338*6.0)+ccaa3* \
                   gamma_aa[index]*gcaa*t14332*t14335*(t14363*t14363)*t14338*1/(t14347*t14347*t14347)*2.0)+1/(k*k*k*k) \
                   *(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index])*t14396*1/pow(t14397,4.0/3.0)*1/pow(gamma_aa[index]* \
                   1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*t14396*1/pow(t14397,2.0/3.0)*(1.0/4.0)+1.0,3.0)*(X-1.0)* \
                   ((a_1*t14400)/t14404+a_2*t14401*1/(t14404*t14404)+a_4*t14402*1/(t14404*t14404*t14404*t14404)+a_8*t14403* \
                   1/(t14404*t14404*t14404*t14404*t14404*t14404*t14404*t14404)+a_10*t14401*t14403*1/pow(t14404,1.0E1) \
                   +a_3*t14400*t14401*1/(t14404*t14404*t14404)+a_5*t14400*t14402*1/(t14404*t14404*t14404*t14404*t14404) \
                   +a_6*t14401*t14402*1/(t14404*t14404*t14404*t14404*t14404*t14404)+a_9*t14400*t14403*1/(t14404*t14404* \
                   t14404*t14404*t14404*t14404*t14404*t14404*t14404)+a_11*t14400*t14401*t14403*1/pow(t14404,1.1E1)+a_7* \
                   t14400*t14401*t14402*1/(t14404*t14404*t14404*t14404*t14404*t14404*t14404)+1.0)*(1.0/8.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t11555 = 1/pow(rho_a[index],1.0/3.0);
                double t11556 = c*t11555;
                double t11557 = sqrt(t11556);
                double t11558 = pow(t11556,3.0/2.0);
                double t11559 = c*c;
                double t11560 = 1/pow(rho_a[index],2.0/3.0);
                double t11561 = 1/c0p;
                double t11562 = b1p*t11557;
                double t11563 = b3p*t11558;
                double t11564 = b4p*t11560*t11559;
                double t11565 = b2p*c*t11555;
                double t11566 = t11562+t11563+t11564+t11565;
                double t11567 = 1/t11566;
                double t11568 = t11561*t11567*(1.0/2.0);
                double t11569 = t11568+1.0;
                double t11570 = log(t11569);
                double t11571 = a1p*c*t11555;
                double t11572 = t11571+1.0;
                double t11573 = pow(2.0,1.0/3.0);
                double t11574 = t11573*2.0;
                double t11575 = t11574-2.0;
                double t11576 = two_13*2.0;
                double t11577 = t11576-2.0;
                double t11578 = 1/t11577;
                double t11579 = 1/c0f;
                double t11580 = 1/pow(rho_b[index],1.0/3.0);
                double t11581 = c*t11580;
                double t11582 = sqrt(t11581);
                double t11583 = pow(t11581,3.0/2.0);
                double t11584 = 1/pow(rho_b[index],2.0/3.0);
                double t11585 = b1p*t11582;
                double t11586 = b3p*t11583;
                double t11587 = b4p*t11584*t11559;
                double t11588 = b2p*c*t11580;
                double t11589 = t11585+t11586+t11587+t11588;
                double t11590 = 1/t11589;
                double t11591 = t11561*t11590*(1.0/2.0);
                double t11592 = t11591+1.0;
                double t11593 = log(t11592);
                double t11594 = a1p*c*t11580;
                double t11595 = t11594+1.0;
                double t11596 = c0p*t11593*t11595*2.0;
                double t11597 = rho_a[index]+rho_b[index];
                double t11598 = 1/pow(t11597,1.0/3.0);
                double t11599 = c*t11598;
                double t11600 = sqrt(t11599);
                double t11601 = pow(t11599,3.0/2.0);
                double t11602 = 1/pow(t11597,2.0/3.0);
                double t11603 = b1p*t11600;
                double t11604 = b3p*t11601;
                double t11605 = b4p*t11602*t11559;
                double t11606 = b2p*c*t11598;
                double t11607 = t11603+t11604+t11605+t11606;
                double t11608 = 1/t11607;
                double t11609 = t11561*t11608*(1.0/2.0);
                double t11610 = t11609+1.0;
                double t11611 = log(t11610);
                double t11612 = a1p*c*t11598;
                double t11613 = t11612+1.0;
                double t11614 = c0p*t11611*t11613*2.0;
                double t11615 = rho_a[index]-rho_b[index];
                double t11616 = t11615*t11615;
                double t11617 = 1/t11597;
                double t11618 = t11615*t11617;
                double t11619 = 1/(t11597*t11597*t11597*t11597);
                double t11620 = t11616*t11616;
                double t11621 = t11618+1.0;
                double t11622 = pow(t11621,4.0/3.0);
                double t11623 = -t11618+1.0;
                double t11624 = pow(t11623,4.0/3.0);
                double t11625 = t11622+t11624-2.0;
                double t11626 = gcab*gcab;
                double t11629 = 1/pow(rho_a[index],8.0/3.0);
                double t11630 = 1/pow(rho_b[index],8.0/3.0);
                double t11631 = gamma_aa[index]*t11629*(1.0/2.0);
                double t11632 = gamma_bb[index]*t11630*(1.0/2.0);
                double t11627 = t11631+t11632;
                double t11628 = t11627*t11627;
                double t11633 = t11626*t11626;
                double t11634 = t11628*t11628;
                double t11635 = t11626*t11628*3.0;
                double t11636 = gcab*t11626*t11627*t11628;
                double t11637 = gcab*t11627*3.0;
                double t11638 = t11635+t11636+t11637+1.0;
                double t11639 = t11626*t11628;
                double t11640 = gcab*t11627*2.0;
                double t11641 = t11640+t11639+1.0;
                double t11642 = t11626*t11628*6.0;
                double t11643 = gcab*t11626*t11627*t11628*4.0;
                double t11644 = t11633*t11634;
                double t11645 = gcab*t11627*4.0;
                double t11646 = t11642+t11643+t11644+t11645+1.0;
                double t11647 = 1/(t11641*t11641);
                double t11648 = gcab*t11629;
                double t11649 = t11626*t11627*t11629;
                double t11650 = t11648+t11649;
                double t11651 = gcab*t11630;
                double t11652 = t11630*t11626*t11627;
                double t11653 = t11651+t11652;
                double t11654 = gcab*t11627;
                double t11655 = t11654+1.0;
                double t11656 = gcab*t11629*2.0;
                double t11657 = t11626*t11627*t11629*6.0;
                double t11658 = gcab*t11626*t11628*t11629*6.0;
                double t11659 = t11633*t11627*t11628*t11629*2.0;
                double t11660 = t11656+t11657+t11658+t11659;
                double t11661 = 1/(t11646*t11646);
                double t11662 = gcab*t11630*2.0;
                double t11663 = t11630*t11626*t11627*6.0;
                double t11664 = gcab*t11630*t11626*t11628*6.0;
                double t11665 = t11630*t11633*t11627*t11628*2.0;
                double t11666 = t11662+t11663+t11664+t11665;
                double t11667 = gcab*t11629*(3.0/2.0);
                double t11668 = t11626*t11627*t11629*3.0;
                double t11669 = gcab*t11626*t11628*t11629*(3.0/2.0);
                double t11670 = t11667+t11668+t11669;
                double t11671 = 1/(t11638*t11638);
                double t11672 = gcab*t11630*(3.0/2.0);
                double t11673 = t11630*t11626*t11627*3.0;
                double t11674 = gcab*t11630*t11626*t11628*(3.0/2.0);
                double t11675 = t11672+t11673+t11674;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t11596-t11575*t11578*(t11596-c0f*log((t11579*(1.0/2.0) \
                   )/(b1f*t11582+b3f*t11583+b2f*c*t11580+b4f*t11584*t11559)+1.0)*(a1f*c*t11580+1.0)*2.0))+t11597*(t11614- \
                   t11620*t11625*t11619*t11578*(t11614-c0f*log((t11579*(1.0/2.0))/(b1f*t11600+b3f*t11601+b2f*c*t11598+ \
                   b4f*t11602*t11559)+1.0)*(a1f*c*t11598+1.0)*2.0)+(Aa*t11625*t11578*log((1.0/2.0)/(Aa*(b1a*t11600+b3a* \
                   t11601+b2a*c*t11598+b4a*t11602*t11559))+1.0)*(t11620*t11619-1.0)*(a1a*c*t11598+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t11575*t11578*(c0p*t11570*t11572*2.0-c0f*log((t11579*(1.0/2.0))/(b1f*t11557+b3f*t11558+b2f*c*t11555+ \
                   b4f*t11560*t11559)+1.0)*(a1f*c*t11555+1.0)*2.0)-c0p*t11570*t11572*2.0))*(ccab4*t11633*t11634*t11661* \
                   (t11630*t11626*t11629*3.0+t11630*t11633*t11628*t11629*3.0+gcab*t11630*t11626*t11627*t11629*6.0)-(ccab2* \
                   t11630*t11626*t11629*(1.0/2.0))/t11641+ccab1*t11630*t11626*1/(t11655*t11655)*t11629*(1.0/2.0)+ccab2* \
                   t11630*t11650*t11626*t11627*t11647+ccab2*t11630*t11633*t11628*t11629*t11647*(1.0/2.0)+ccab2*t11626* \
                   t11653*t11627*t11629*t11647-ccab2*1/(t11641*t11641*t11641)*t11650*t11626*t11653*t11628*2.0-(ccab4* \
                   t11630*t11633*t11628*t11629*3.0)/t11646-ccab4*t11633*t11660*t11634*1/(t11646*t11646*t11646)*t11666* \
                   2.0+ccab3*gcab*t11630*t11670*t11626*t11671*t11628*(3.0/2.0)+ccab3*gcab*t11626*t11671*t11628*t11629* \
                   t11675*(3.0/2.0)+ccab4*t11630*t11633*t11660*t11661*t11627*t11628*2.0+ccab4*t11633*t11661*t11627*t11628* \
                   t11629*t11666*2.0+ccab3*gcab*t11626*t11671*t11627*t11628*(t11630*t11626*t11629*(3.0/2.0)+gcab*t11630* \
                   t11626*t11627*t11629*(3.0/2.0))-ccab1*gcab*t11630*t11626*t11627*1/(t11655*t11655*t11655)*t11629*(1.0/ \
                   2.0)-(ccab3*gcab*t11630*t11626*t11627*t11629*(3.0/2.0))/t11638-ccab3*gcab*t11670*t11626*t11627*t11628* \
                   1/(t11638*t11638*t11638)*t11675*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t11679 = 1/pow(rho_a[index],1.0/3.0);
                double t11680 = c*t11679;
                double t11681 = sqrt(t11680);
                double t11682 = pow(t11680,3.0/2.0);
                double t11683 = c*c;
                double t11684 = 1/pow(rho_a[index],2.0/3.0);
                double t11685 = 1/c0p;
                double t11686 = b1p*t11681;
                double t11687 = b3p*t11682;
                double t11688 = b4p*t11683*t11684;
                double t11689 = b2p*c*t11679;
                double t11690 = t11686+t11687+t11688+t11689;
                double t11691 = 1/t11690;
                double t11692 = t11691*t11685*(1.0/2.0);
                double t11693 = t11692+1.0;
                double t11694 = log(t11693);
                double t11695 = a1p*c*t11679;
                double t11696 = t11695+1.0;
                double t11697 = pow(2.0,1.0/3.0);
                double t11698 = t11697*2.0;
                double t11699 = t11698-2.0;
                double t11700 = two_13*2.0;
                double t11701 = t11700-2.0;
                double t11702 = 1/t11701;
                double t11703 = 1/c0f;
                double t11704 = 1/pow(rho_b[index],1.0/3.0);
                double t11705 = c*t11704;
                double t11706 = sqrt(t11705);
                double t11707 = pow(t11705,3.0/2.0);
                double t11708 = 1/pow(rho_b[index],2.0/3.0);
                double t11709 = b1p*t11706;
                double t11710 = b3p*t11707;
                double t11711 = b4p*t11708*t11683;
                double t11712 = b2p*c*t11704;
                double t11713 = t11710+t11711+t11712+t11709;
                double t11714 = 1/t11713;
                double t11715 = t11714*t11685*(1.0/2.0);
                double t11716 = t11715+1.0;
                double t11717 = log(t11716);
                double t11718 = a1p*c*t11704;
                double t11719 = t11718+1.0;
                double t11720 = c0p*t11717*t11719*2.0;
                double t11721 = rho_a[index]+rho_b[index];
                double t11722 = 1/pow(t11721,1.0/3.0);
                double t11723 = c*t11722;
                double t11724 = sqrt(t11723);
                double t11725 = pow(t11723,3.0/2.0);
                double t11726 = 1/pow(t11721,2.0/3.0);
                double t11727 = b1p*t11724;
                double t11728 = b3p*t11725;
                double t11729 = b4p*t11726*t11683;
                double t11730 = b2p*c*t11722;
                double t11731 = t11730+t11727+t11728+t11729;
                double t11732 = 1/t11731;
                double t11733 = t11732*t11685*(1.0/2.0);
                double t11734 = t11733+1.0;
                double t11735 = log(t11734);
                double t11736 = a1p*c*t11722;
                double t11737 = t11736+1.0;
                double t11738 = c0p*t11735*t11737*2.0;
                double t11739 = rho_a[index]-rho_b[index];
                double t11740 = t11739*t11739;
                double t11741 = 1/t11721;
                double t11742 = t11741*t11739;
                double t11743 = 1/(t11721*t11721*t11721*t11721);
                double t11744 = t11740*t11740;
                double t11745 = t11742+1.0;
                double t11746 = pow(t11745,4.0/3.0);
                double t11747 = -t11742+1.0;
                double t11748 = pow(t11747,4.0/3.0);
                double t11749 = t11746+t11748-2.0;
                double t11750 = gcab*gcab;
                double t11751 = 1/pow(rho_b[index],1.6E1/3.0);
                double t11752 = 1/pow(rho_a[index],8.0/3.0);
                double t11753 = gamma_aa[index]*t11752*(1.0/2.0);
                double t11754 = 1/pow(rho_b[index],8.0/3.0);
                double t11755 = gamma_bb[index]*t11754*(1.0/2.0);
                double t11756 = t11753+t11755;
                double t11757 = gcab*t11756;
                double t11758 = t11757+1.0;
                double t11759 = t11756*t11756;
                double t11760 = t11750*t11759;
                double t11761 = gcab*t11756*2.0;
                double t11762 = t11760+t11761+1.0;
                double t11763 = t11750*t11750;
                double t11780 = gcab*t11754*2.0;
                double t11781 = t11750*t11754*t11756*6.0;
                double t11782 = gcab*t11750*t11754*t11759*6.0;
                double t11783 = t11754*t11763*t11756*t11759*2.0;
                double t11764 = t11780+t11781+t11782+t11783;
                double t11765 = t11759*t11759;
                double t11785 = gcab*t11754*(3.0/2.0);
                double t11786 = t11750*t11754*t11756*3.0;
                double t11787 = gcab*t11750*t11754*t11759*(3.0/2.0);
                double t11766 = t11785+t11786+t11787;
                double t11767 = t11750*t11759*3.0;
                double t11768 = gcab*t11750*t11756*t11759;
                double t11769 = gcab*t11756*3.0;
                double t11770 = t11767+t11768+t11769+1.0;
                double t11777 = gcab*t11754;
                double t11778 = t11750*t11754*t11756;
                double t11771 = t11777+t11778;
                double t11772 = t11750*t11759*6.0;
                double t11773 = gcab*t11750*t11756*t11759*4.0;
                double t11774 = t11763*t11765;
                double t11775 = gcab*t11756*4.0;
                double t11776 = t11772+t11773+t11774+t11775+1.0;
                double t11779 = 1/(t11762*t11762);
                double t11784 = 1/(t11776*t11776);
                double t11788 = 1/(t11770*t11770);
                double t11789 = c0p*t11694*t11696*2.0;
                double t11790 = b1f*t11706;
                double t11791 = b3f*t11707;
                double t11792 = b4f*t11708*t11683;
                double t11793 = b2f*c*t11704;
                double t11794 = t11790+t11791+t11792+t11793;
                double t11795 = 1/t11794;
                double t11796 = t11703*t11795*(1.0/2.0);
                double t11797 = t11796+1.0;
                double t11798 = log(t11797);
                double t11799 = a1f*c*t11704;
                double t11800 = t11799+1.0;
                double t11841 = c0f*t11800*t11798*2.0;
                double t11801 = t11720-t11841;
                double t11842 = t11702*t11801*t11699;
                double t11802 = t11720-t11842;
                double t11803 = gcaa*gcaa;
                double t11804 = gamma_bb[index]*gamma_bb[index];
                double t11805 = t11803*t11803;
                double t11806 = 1/pow(rho_b[index],3.2E1/3.0);
                double t11807 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t11808 = gamma_bb[index]*gcaa*t11754;
                double t11809 = t11808+1.0;
                double t11810 = gamma_bb[index]*gcaa*t11754*2.0;
                double t11811 = t11803*t11804*t11751;
                double t11812 = t11810+t11811+1.0;
                double t11813 = gamma_bb[index]*gcaa*t11754*3.0;
                double t11814 = gamma_bb[index]*gcaa*t11803*t11804*t11807;
                double t11815 = t11803*t11804*t11751*3.0;
                double t11816 = t11813+t11814+t11815+1.0;
                double t11817 = t11804*t11804;
                double t11833 = gcaa*t11754*4.0;
                double t11834 = gamma_bb[index]*t11803*t11751*1.2E1;
                double t11835 = gcaa*t11803*t11804*t11807*1.2E1;
                double t11836 = gamma_bb[index]*t11804*t11805*t11806*4.0;
                double t11818 = t11833+t11834+t11835+t11836;
                double t11819 = gamma_bb[index]*gcaa*t11754*4.0;
                double t11820 = gamma_bb[index]*gcaa*t11803*t11804*t11807*4.0;
                double t11821 = t11803*t11804*t11751*6.0;
                double t11822 = t11805*t11806*t11817;
                double t11823 = t11820+t11821+t11822+t11819+1.0;
                double t11826 = gcaa*t11754*2.0;
                double t11827 = gamma_bb[index]*t11803*t11751*2.0;
                double t11824 = t11826+t11827;
                double t11825 = 1/(t11816*t11816);
                double t11828 = 1/(t11812*t11812);
                double t11829 = gcaa*t11754*3.0;
                double t11830 = gamma_bb[index]*t11803*t11751*6.0;
                double t11831 = gcaa*t11803*t11804*t11807*3.0;
                double t11832 = t11830+t11831+t11829;
                double t11837 = 1/(t11823*t11823);
                double t11838 = 1/tau_b[index];
                double t11839 = tau_b[index]-1.0/1.0E20;
                double t11840 = ( (t11839 > 0.0) ?  1.0 : 0.0 ) ;
                double t11843 = 1/t11823;
                double t11844 = 1/t11812;
                double t11845 = 1/t11816;
                double t11846 = 1/(t11809*t11809);
                double t11847 = 1/kp;
                double t11848 = rho_b[index]*2.0;
                double t11849 = pow(rho_b[index],5.0/3.0);
                double t11850 = C_k*t11838*t11849;
                double t11851 = t11850-1.0;
                double t11852 = t11851*t11851;
                double t11853 = t11852*t11852;
                double t11854 = t11853*t11853;
                double t11855 = t11850+1.0;
                v_gamma_bb_gamma_bb_[index] = (rho_b[index]*t11802+rho_a[index]*(t11789-t11702*t11699*(t11789-c0f* \
                   log((t11703*(1.0/2.0))/(b1f*t11681+b3f*t11682+b2f*c*t11679+b4f*t11683*t11684)+1.0)*(a1f*c*t11679+1.0) \
                   *2.0))-t11721*(t11738-t11702*t11743*t11744*t11749*(t11738-c0f*log((t11703*(1.0/2.0))/(b1f*t11724+b3f* \
                   t11725+b2f*c*t11722+b4f*t11726*t11683)+1.0)*(a1f*c*t11722+1.0)*2.0)+(Aa*t11702*t11749*log((1.0/2.0) \
                   /(Aa*(b1a*t11724+b3a*t11725+b2a*c*t11722+b4a*t11726*t11683))+1.0)*(t11743*t11744-1.0)*(a1a*c*t11722+ \
                   1.0)*2.0)/d2fz0))*((ccab2*t11750*t11751*(1.0/2.0))/t11762-ccab1*t11750*t11751*1/(t11758*t11758)*(1.0/ \
                   2.0)+ccab2*t11750*1/(t11762*t11762*t11762)*(t11771*t11771)*t11759*2.0+ccab4*t11763*(t11764*t11764) \
                   *t11765*1/(t11776*t11776*t11776)*2.0-ccab2*t11751*t11763*t11759*t11779*(1.0/2.0)-ccab4*t11763*t11765* \
                   t11784*(t11750*t11751*3.0+t11751*t11763*t11759*3.0+gcab*t11750*t11751*t11756*6.0)+(ccab4*t11751*t11763* \
                   t11759*3.0)/t11776-ccab2*t11750*t11771*t11754*t11756*t11779*2.0+(ccab3*gcab*t11750*t11751*t11756*(3.0/ \
                   2.0))/t11770+ccab1*gcab*t11750*t11751*t11756*1/(t11758*t11758*t11758)*(1.0/2.0)+ccab3*gcab*t11750* \
                   1/(t11770*t11770*t11770)*t11756*(t11766*t11766)*t11759*2.0-ccab3*gcab*t11750*t11754*t11766*t11759* \
                   t11788*3.0-ccab4*t11754*t11763*t11764*t11756*t11784*t11759*4.0-ccab3*gcab*t11750*t11756*t11759*t11788* \
                   (t11750*t11751*(3.0/2.0)+gcab*t11750*t11751*t11756*(3.0/2.0)))+t11802*t11840*t11838*((ccaa1*gcaa*t11754) \
                   /t11809+ccaa2*gamma_bb[index]*t11803*t11751*t11844*2.0-ccaa1*gamma_bb[index]*t11803*t11751*t11846- \
                   ccaa2*t11803*t11804*t11751*t11824*t11828-ccaa4*t11805*t11806*t11817*t11818*t11837+ccaa4*gamma_bb[index]* \
                   t11804*t11805*t11806*t11843*4.0+ccaa3*gcaa*t11803*t11804*t11807*t11845*3.0-ccaa3*gamma_bb[index]*gcaa* \
                   t11803*t11804*t11832*t11807*t11825)*(1.0/4.0)-rho_b[index]*t11802*(t11840*(t11838*(tau_b[index]*2.0- \
                   (gamma_bb[index]*(1.0/4.0))/rho_b[index])*(1.0/2.0)-1.0)+1.0)*(ccaa2*t11803*t11751*t11844*2.0-ccaa1* \
                   t11803*t11751*t11846*2.0+ccaa4*t11804*t11805*t11806*t11843*1.2E1-ccaa2*t11804*t11805*t11806*t11828* \
                   2.0-ccaa4*t11805*t11806*t11817*t11837*(t11803*t11751*1.2E1+t11804*t11805*t11806*1.2E1+gamma_bb[index]* \
                   gcaa*t11803*t11807*2.4E1)+ccaa1*gamma_bb[index]*gcaa*t11803*t11807*1/(t11809*t11809*t11809)*2.0+ccaa2* \
                   t11803*1/(t11812*t11812*t11812)*t11804*t11751*(t11824*t11824)*2.0+ccaa4*t11805*1/(t11823*t11823*t11823) \
                   *t11806*t11817*(t11818*t11818)*2.0+ccaa3*gamma_bb[index]*gcaa*t11803*t11807*t11845*6.0-ccaa2*gamma_bb[index]* \
                   t11803*t11751*t11824*t11828*4.0-ccaa4*gamma_bb[index]*t11804*t11805*t11806*t11818*t11837*8.0-ccaa3* \
                   gcaa*t11803*t11804*t11832*t11807*t11825*6.0-ccaa3*gamma_bb[index]*gcaa*t11803*t11804*t11807*t11825* \
                   (t11803*t11751*6.0+gamma_bb[index]*gcaa*t11803*t11807*6.0)+ccaa3*gamma_bb[index]*gcaa*t11803*t11804* \
                   (t11832*t11832)*t11807*1/(t11816*t11816*t11816)*2.0)+1/(k*k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]* \
                   rho_b[index])*t11847*1/pow(t11848,4.0/3.0)*1/pow(gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]*rho_b[index]) \
                   *t11847*1/pow(t11848,2.0/3.0)*(1.0/4.0)+1.0,3.0)*(X-1.0)*((a_1*t11851)/t11855+a_2*t11852*1/(t11855* \
                   t11855)+a_4*t11853*1/(t11855*t11855*t11855*t11855)+a_8*t11854*1/(t11855*t11855*t11855*t11855*t11855* \
                   t11855*t11855*t11855)+a_10*t11852*t11854*1/pow(t11855,1.0E1)+a_3*t11851*t11852*1/(t11855*t11855*t11855) \
                   +a_5*t11851*t11853*1/(t11855*t11855*t11855*t11855*t11855)+a_6*t11852*t11853*1/(t11855*t11855*t11855* \
                   t11855*t11855*t11855)+a_9*t11851*t11854*1/(t11855*t11855*t11855*t11855*t11855*t11855*t11855*t11855* \
                   t11855)+a_11*t11851*t11852*t11854*1/pow(t11855,1.1E1)+a_7*t11851*t11852*t11853*1/(t11855*t11855*t11855* \
                   t11855*t11855*t11855*t11855)+1.0)*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t13192 = 1/pow(rho_b[index],1.0/3.0);
                double t13193 = c*t13192;
                double t13194 = sqrt(t13193);
                double t13195 = pow(t13193,3.0/2.0);
                double t13196 = c*c;
                double t13197 = 1/pow(rho_b[index],2.0/3.0);
                double t13198 = 1/c0p;
                double t13199 = b1p*t13194;
                double t13200 = b3p*t13195;
                double t13201 = b4p*t13196*t13197;
                double t13202 = b2p*c*t13192;
                double t13203 = t13200+t13201+t13202+t13199;
                double t13204 = 1/t13203;
                double t13205 = t13204*t13198*(1.0/2.0);
                double t13206 = t13205+1.0;
                double t13207 = log(t13206);
                double t13208 = a1p*c*t13192;
                double t13209 = t13208+1.0;
                double t13210 = gcaa*gcaa;
                double t13211 = 1/pow(rho_b[index],1.6E1/3.0);
                double t13212 = 1/pow(rho_b[index],8.0/3.0);
                double t13213 = gamma_bb[index]*gamma_bb[index];
                double t13214 = t13210*t13210;
                double t13215 = 1/pow(rho_b[index],3.2E1/3.0);
                double t13216 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t13217 = gamma_bb[index]*gcaa*t13212;
                double t13218 = t13217+1.0;
                double t13219 = gamma_bb[index]*gcaa*t13212*2.0;
                double t13220 = t13210*t13211*t13213;
                double t13221 = t13220+t13219+1.0;
                double t13222 = gamma_bb[index]*gcaa*t13212*3.0;
                double t13223 = gamma_bb[index]*gcaa*t13210*t13213*t13216;
                double t13224 = t13210*t13211*t13213*3.0;
                double t13225 = t13222+t13223+t13224+1.0;
                double t13226 = t13213*t13213;
                double t13242 = gcaa*t13212*4.0;
                double t13243 = gamma_bb[index]*t13210*t13211*1.2E1;
                double t13244 = gcaa*t13210*t13213*t13216*1.2E1;
                double t13245 = gamma_bb[index]*t13213*t13214*t13215*4.0;
                double t13227 = t13242+t13243+t13244+t13245;
                double t13228 = gamma_bb[index]*gcaa*t13212*4.0;
                double t13229 = gamma_bb[index]*gcaa*t13210*t13213*t13216*4.0;
                double t13230 = t13210*t13211*t13213*6.0;
                double t13231 = t13214*t13215*t13226;
                double t13232 = t13230+t13231+t13228+t13229+1.0;
                double t13235 = gcaa*t13212*2.0;
                double t13236 = gamma_bb[index]*t13210*t13211*2.0;
                double t13233 = t13235+t13236;
                double t13234 = 1/(t13225*t13225);
                double t13237 = 1/(t13221*t13221);
                double t13238 = gcaa*t13212*3.0;
                double t13239 = gamma_bb[index]*t13210*t13211*6.0;
                double t13240 = gcaa*t13210*t13213*t13216*3.0;
                double t13241 = t13240+t13238+t13239;
                double t13246 = 1/(t13232*t13232);
                double t13247 = 1/tau_b[index];
                double t13248 = tau_b[index]-1.0/1.0E20;
                double t13249 = ( (t13248 > 0.0) ?  1.0 : 0.0 ) ;
                double t13250 = pow(2.0,1.0/3.0);
                double t13251 = t13250*2.0;
                double t13252 = t13251-2.0;
                double t13253 = two_13*2.0;
                double t13254 = t13253-2.0;
                double t13255 = 1/t13254;
                double t13256 = 1/c0f;
                double t13257 = b1f*t13194;
                double t13258 = b3f*t13195;
                double t13259 = b4f*t13196*t13197;
                double t13260 = b2f*c*t13192;
                double t13261 = t13260+t13257+t13258+t13259;
                double t13262 = 1/t13261;
                double t13263 = t13262*t13256*(1.0/2.0);
                double t13264 = t13263+1.0;
                double t13265 = log(t13264);
                double t13266 = a1f*c*t13192;
                double t13267 = t13266+1.0;
                double t13268 = c0f*t13265*t13267*2.0;
                double t13269 = c0p*t13207*t13209*2.0;
                double t13270 = 1/t13232;
                double t13271 = 1/t13221;
                double t13272 = 1/t13225;
                double t13273 = 1/(t13218*t13218);
                double t13274 = 1/kp;
                double t13275 = rho_b[index]*2.0;
                double t13276 = pow(rho_b[index],5.0/3.0);
                double t13277 = C_k*t13247*t13276;
                double t13278 = t13277-1.0;
                double t13279 = t13278*t13278;
                double t13280 = t13279*t13279;
                double t13281 = t13280*t13280;
                double t13282 = t13277+1.0;
                v_gamma_bb_gamma_bb_[index] = t13247*t13249*(t13269+t13252*t13255*(t13268-t13269))*((ccaa1*gcaa*t13212) \
                   /t13218+ccaa2*gamma_bb[index]*t13210*t13211*t13271*2.0-ccaa1*gamma_bb[index]*t13210*t13211*t13273- \
                   ccaa2*t13210*t13211*t13213*t13233*t13237-ccaa4*t13214*t13215*t13226*t13227*t13246+ccaa4*gamma_bb[index]* \
                   t13213*t13214*t13215*t13270*4.0+ccaa3*gcaa*t13210*t13213*t13216*t13272*3.0-ccaa3*gamma_bb[index]*gcaa* \
                   t13210*t13213*t13241*t13216*t13234)*(1.0/4.0)-rho_b[index]*(t13249*(t13247*(tau_b[index]*2.0-(gamma_bb[index]* \
                   (1.0/4.0))/rho_b[index])*(1.0/2.0)-1.0)+1.0)*(t13269+t13252*t13255*(t13268-c0p*t13207*t13209*2.0)) \
                   *(ccaa2*t13210*t13211*t13271*2.0-ccaa1*t13210*t13211*t13273*2.0+ccaa4*t13213*t13214*t13215*t13270* \
                   1.2E1-ccaa2*t13213*t13214*t13215*t13237*2.0-ccaa4*t13214*t13215*t13226*t13246*(t13210*t13211*1.2E1+ \
                   t13213*t13214*t13215*1.2E1+gamma_bb[index]*gcaa*t13210*t13216*2.4E1)+ccaa1*gamma_bb[index]*gcaa*t13210* \
                   t13216*1/(t13218*t13218*t13218)*2.0+ccaa2*t13210*t13211*1/(t13221*t13221*t13221)*t13213*(t13233*t13233) \
                   *2.0+ccaa4*t13214*1/(t13232*t13232*t13232)*t13215*t13226*(t13227*t13227)*2.0+ccaa3*gamma_bb[index]* \
                   gcaa*t13210*t13216*t13272*6.0-ccaa2*gamma_bb[index]*t13210*t13211*t13233*t13237*4.0-ccaa4*gamma_bb[index]* \
                   t13213*t13214*t13215*t13227*t13246*8.0-ccaa3*gcaa*t13210*t13213*t13241*t13216*t13234*6.0-ccaa3*gamma_bb[index]* \
                   gcaa*t13210*t13213*t13216*t13234*(t13210*t13211*6.0+gamma_bb[index]*gcaa*t13210*t13216*6.0)+ccaa3* \
                   gamma_bb[index]*gcaa*t13210*t13213*(t13241*t13241)*t13216*1/(t13225*t13225*t13225)*2.0)+1/(k*k*k*k) \
                   *(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index])*t13274*1/pow(t13275,4.0/3.0)*1/pow(gamma_bb[index]* \
                   1/(k*k)*mu_*1/(rho_b[index]*rho_b[index])*t13274*1/pow(t13275,2.0/3.0)*(1.0/4.0)+1.0,3.0)*(X-1.0)* \
                   ((a_1*t13278)/t13282+a_2*1/(t13282*t13282)*t13279+a_4*t13280*1/(t13282*t13282*t13282*t13282)+a_8*t13281* \
                   1/(t13282*t13282*t13282*t13282*t13282*t13282*t13282*t13282)+a_10*t13281*1/pow(t13282,1.0E1)*t13279+ \
                   a_3*1/(t13282*t13282*t13282)*t13278*t13279+a_5*t13280*1/(t13282*t13282*t13282*t13282*t13282)*t13278+ \
                   a_6*t13280*1/(t13282*t13282*t13282*t13282*t13282*t13282)*t13279+a_9*t13281*1/(t13282*t13282*t13282* \
                   t13282*t13282*t13282*t13282*t13282*t13282)*t13278+a_11*t13281*1/pow(t13282,1.1E1)*t13278*t13279+a_7* \
                   t13280*1/(t13282*t13282*t13282*t13282*t13282*t13282*t13282)*t13278*t13279+1.0)*(1.0/8.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t11857 = pow(rho_a[index],5.0/3.0);
                double t11858 = 1/(tau_a[index]*tau_a[index]);
                double t11859 = 1/tau_a[index];
                double t11860 = C_k*t11857*t11859;
                double t11861 = t11860+1.0;
                double t11862 = t11860-1.0;
                double t11863 = 1/(t11861*t11861);
                double t11864 = t11862*t11862;
                double t11865 = t11864*t11864;
                double t11866 = t11865*t11865;
                double t11867 = 1/pow(t11861,1.1E1);
                double t11868 = 1/(t11861*t11861*t11861);
                double t11869 = 1/(t11861*t11861*t11861*t11861);
                double t11870 = 1/(t11861*t11861*t11861*t11861*t11861);
                double t11871 = 1/(t11861*t11861*t11861*t11861*t11861*t11861);
                double t11872 = 1/(t11861*t11861*t11861*t11861*t11861*t11861*t11861);
                double t11873 = 1/(t11861*t11861*t11861*t11861*t11861*t11861*t11861*t11861);
                double t11874 = 1/(t11861*t11861*t11861*t11861*t11861*t11861*t11861*t11861*t11861);
                double t11875 = 1/pow(t11861,1.0E1);
                double t11876 = 1/(k*k);
                double t11877 = 1/kp;
                double t11878 = 1/(rho_a[index]*rho_a[index]);
                double t11879 = rho_a[index]*2.0;
                double t11880 = 1/pow(t11879,2.0/3.0);
                double t11881 = gamma_aa[index]*mu_*t11880*t11876*t11877*t11878*(1.0/4.0);
                double t11882 = t11881+1.0;
                double t11883 = 1/t11882;
                double t11884 = kp-kp*t11883+1.0;
                double t11885 = C_k*C_k;
                double t11886 = pow(rho_a[index],7.0/3.0);
                double t11887 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t11888 = 1/t11861;
                double t11889 = 1/pow(t11861,1.2E1);
                double t11890 = pow(rho_a[index],2.0/3.0);
                double t11891 = C_k*a_1*t11857*t11858*t11888;
                double t11892 = C_k*a_2*t11862*t11863*t11857*t11858*2.0;
                double t11893 = C_k*a_10*t11862*t11857*t11866*t11875*t11858*1.0E1;
                double t11894 = C_k*a_11*t11864*t11857*t11866*t11858*t11867*1.1E1;
                double t11895 = C_k*a_3*t11864*t11857*t11858*t11868*3.0;
                double t11896 = C_k*a_4*t11862*t11864*t11857*t11858*t11869*4.0;
                double t11897 = C_k*a_5*t11870*t11865*t11857*t11858*5.0;
                double t11898 = C_k*a_6*t11862*t11871*t11865*t11857*t11858*6.0;
                double t11899 = C_k*a_7*t11872*t11864*t11865*t11857*t11858*7.0;
                double t11900 = C_k*a_8*t11862*t11864*t11873*t11865*t11857*t11858*8.0;
                double t11901 = C_k*a_9*t11874*t11857*t11866*t11858*9.0;
                double t11902 = t11900+t11901+t11891+t11892+t11893+t11894+t11895+t11896+t11897+t11898+t11899-C_k* \
                   a_1*t11862*t11863*t11857*t11858-C_k*a_2*t11864*t11857*t11858*t11868*2.0-C_k*a_4*t11870*t11865*t11857* \
                   t11858*4.0-C_k*a_8*t11874*t11857*t11866*t11858*8.0-C_k*a_10*t11864*t11857*t11866*t11858*t11867*1.0E1- \
                   C_k*a_3*t11862*t11864*t11857*t11858*t11869*3.0-C_k*a_5*t11862*t11871*t11865*t11857*t11858*5.0-C_k* \
                   a_6*t11872*t11864*t11865*t11857*t11858*6.0-C_k*a_9*t11862*t11857*t11866*t11875*t11858*9.0-C_k*a_11* \
                   t11862*t11864*t11857*t11866*t11858*t11889*1.1E1-C_k*a_7*t11862*t11864*t11873*t11865*t11857*t11858* \
                   7.0;
                double t11903 = 1/pow(rho_a[index],1.0/3.0);
                double t11904 = c*t11903;
                double t11905 = sqrt(t11904);
                double t11906 = pow(t11904,3.0/2.0);
                double t11907 = c*c;
                double t11908 = 1/pow(rho_a[index],2.0/3.0);
                double t11909 = 1/c0p;
                double t11910 = b1p*t11905;
                double t11911 = b3p*t11906;
                double t11912 = b4p*t11907*t11908;
                double t11913 = b2p*c*t11903;
                double t11914 = t11910+t11911+t11912+t11913;
                double t11915 = 1/t11914;
                double t11916 = t11915*t11909*(1.0/2.0);
                double t11917 = t11916+1.0;
                double t11918 = log(t11917);
                double t11919 = a1p*c*t11903;
                double t11920 = t11919+1.0;
                double t11921 = tau_a[index]-1.0/1.0E20;
                double t11922 = tau_a[index]*2.0;
                double t11923 = 1/rho_a[index];
                double t11954 = gamma_aa[index]*t11923*(1.0/4.0);
                double t11924 = t11922-t11954;
                double t11925 = gamma_aa[index]*gamma_aa[index];
                double t11926 = gcaa*gcaa;
                double t11927 = t11925*t11925;
                double t11928 = t11926*t11926;
                double t11929 = 1/pow(rho_a[index],3.2E1/3.0);
                double t11930 = 1/pow(rho_a[index],8.0/3.0);
                double t11931 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t11932 = 1/pow(rho_a[index],1.6E1/3.0);
                double t11933 = pow(2.0,1.0/3.0);
                double t11934 = t11933*2.0;
                double t11935 = t11934-2.0;
                double t11936 = two_13*2.0;
                double t11937 = t11936-2.0;
                double t11938 = 1/t11937;
                double t11939 = 1/c0f;
                double t11940 = b1f*t11905;
                double t11941 = b3f*t11906;
                double t11942 = b4f*t11907*t11908;
                double t11943 = b2f*c*t11903;
                double t11944 = t11940+t11941+t11942+t11943;
                double t11945 = 1/t11944;
                double t11946 = t11945*t11939*(1.0/2.0);
                double t11947 = t11946+1.0;
                double t11948 = log(t11947);
                double t11949 = a1f*c*t11903;
                double t11950 = t11949+1.0;
                double t11951 = c0f*t11950*t11948*2.0;
                double t11952 = c0p*t11920*t11918*2.0;
                double t11953 = ( (t11921 > 0.0) ?  1.0 : 0.0 ) ;
                double t11984 = t11924*t11858*(1.0/2.0);
                double t11955 = -t11984+t11859;
                double t11956 = t11953*t11955;
                double t11957 = 0.0 ;
                double t11958 = t11924*t11859*(1.0/2.0);
                double t11959 = t11958-1.0;
                double t11960 = t11957*t11959;
                double t11961 = t11960+t11956;
                double t11962 = gamma_aa[index]*gcaa*t11930*4.0;
                double t11963 = gamma_aa[index]*gcaa*t11931*t11925*t11926*4.0;
                double t11964 = t11932*t11925*t11926*6.0;
                double t11965 = t11927*t11928*t11929;
                double t11966 = t11962+t11963+t11964+t11965+1.0;
                double t11967 = 1/t11966;
                double t11968 = gamma_aa[index]*gcaa*t11930;
                double t11969 = t11968+1.0;
                double t11970 = 1/t11969;
                double t11971 = gamma_aa[index]*gcaa*t11930*3.0;
                double t11972 = gamma_aa[index]*gcaa*t11931*t11925*t11926;
                double t11973 = t11932*t11925*t11926*3.0;
                double t11974 = t11971+t11972+t11973+1.0;
                double t11975 = 1/t11974;
                double t11976 = gamma_aa[index]*gcaa*t11930*2.0;
                double t11977 = t11932*t11925*t11926;
                double t11978 = t11976+t11977+1.0;
                double t11979 = 1/t11978;
                double t11980 = 1/pow(rho_a[index],1.9E1/3.0);
                double t11981 = 1/pow(rho_a[index],1.1E1/3.0);
                double t11982 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t11983 = 1/pow(rho_a[index],3.5E1/3.0);
                double t11985 = 1/pow(rho_a[index],4.0/3.0);
                double t11986 = 1/pow(rho_a[index],5.0/3.0);
                double t11987 = 1/sqrt(t11904);
                double t11988 = 1/t11917;
                double t11989 = 1/(t11914*t11914);
                double t11990 = b4p*t11907*t11986*(2.0/3.0);
                double t11991 = b2p*c*t11985*(1.0/3.0);
                double t11992 = b1p*c*t11985*t11987*(1.0/6.0);
                double t11993 = b3p*c*t11905*t11985*(1.0/2.0);
                double t11994 = t11990+t11991+t11992+t11993;
                double t11995 = t11920*t11994*t11988*t11989;
                double t11996 = ccaa4*t11927*t11928*t11929*t11967;
                double t11997 = ccaa1*gamma_aa[index]*gcaa*t11930*t11970;
                double t11998 = ccaa3*gamma_aa[index]*gcaa*t11931*t11925*t11926*t11975;
                double t11999 = ccaa2*t11932*t11925*t11926*t11979;
                double t12000 = ccaa0+t11996+t11997+t11998+t11999;
                double t12001 = t11951-t11952;
                double t12002 = t11935*t11938*t12001;
                double t12003 = t11952+t12002;
                v_rho_a_tau_a_[index] = (X-1.0)*(t11902*t11884+rho_a[index]*t11884*(C_k*a_1*t11890*t11858*t11888* \
                   (5.0/3.0)-a_1*t11863*t11885*t11886*t11887*(1.0E1/3.0)+a_2*t11863*t11885*t11886*t11887*(1.0E1/3.0)+ \
                   a_1*t11862*t11885*t11868*t11886*t11887*(1.0E1/3.0)+a_10*t11866*t11875*t11885*t11886*t11887*1.5E2-a_2* \
                   t11862*t11885*t11868*t11886*t11887*(4.0E1/3.0)+a_2*t11864*t11885*t11886*t11869*t11887*1.0E1+a_3*t11862* \
                   t11885*t11868*t11886*t11887*1.0E1-a_3*t11864*t11885*t11886*t11869*t11887*3.0E1+a_4*t11871*t11865*t11885* \
                   t11886*t11887*(1.0E2/3.0)+a_4*t11864*t11885*t11886*t11869*t11887*2.0E1-a_5*t11871*t11865*t11885*t11886* \
                   t11887*(2.5E2/3.0)+a_6*t11871*t11865*t11885*t11886*t11887*5.0E1+a_8*t11866*t11875*t11885*t11886*t11887* \
                   1.2E2-a_9*t11866*t11875*t11885*t11886*t11887*2.7E2-C_k*a_1*t11862*t11863*t11890*t11858*(5.0/3.0)+C_k* \
                   a_2*t11862*t11863*t11890*t11858*(1.0E1/3.0)-C_k*a_2*t11890*t11864*t11858*t11868*(1.0E1/3.0)+C_k*a_3* \
                   t11890*t11864*t11858*t11868*5.0-C_k*a_4*t11870*t11890*t11865*t11858*(2.0E1/3.0)+C_k*a_5*t11870*t11890* \
                   t11865*t11858*(2.5E1/3.0)-C_k*a_8*t11890*t11874*t11866*t11858*(4.0E1/3.0)+C_k*a_9*t11890*t11874*t11866* \
                   t11858*1.5E1+C_k*a_10*t11862*t11890*t11866*t11875*t11858*(5.0E1/3.0)-C_k*a_10*t11890*t11864*t11866* \
                   t11858*t11867*(5.0E1/3.0)+C_k*a_11*t11890*t11864*t11866*t11858*t11867*(5.5E1/3.0)-C_k*a_3*t11862*t11890* \
                   t11864*t11858*t11869*5.0+C_k*a_4*t11862*t11890*t11864*t11858*t11869*(2.0E1/3.0)-C_k*a_5*t11862*t11871* \
                   t11890*t11865*t11858*(2.5E1/3.0)+C_k*a_6*t11862*t11871*t11890*t11865*t11858*1.0E1-C_k*a_6*t11872*t11890* \
                   t11864*t11865*t11858*1.0E1+C_k*a_7*t11872*t11890*t11864*t11865*t11858*(3.5E1/3.0)-C_k*a_9*t11862*t11890* \
                   t11866*t11875*t11858*1.5E1-a_10*t11862*t11866*t11867*t11885*t11886*t11887*(1.0E3/3.0)+a_11*t11862* \
                   t11866*t11867*t11885*t11886*t11887*(5.5E2/3.0)+a_10*t11864*t11866*t11885*t11886*t11887*t11889*(5.5E2/ \
                   3.0)-a_11*t11864*t11866*t11885*t11886*t11887*t11889*(1.21E3/3.0)+a_3*t11870*t11862*t11864*t11885*t11886* \
                   t11887*2.0E1-a_4*t11870*t11862*t11864*t11885*t11886*t11887*(1.6E2/3.0)+a_5*t11870*t11862*t11864*t11885* \
                   t11886*t11887*(1.0E2/3.0)+a_5*t11862*t11872*t11865*t11885*t11886*t11887*5.0E1-a_6*t11862*t11872*t11865* \
                   t11885*t11886*t11887*1.2E2+a_6*t11864*t11873*t11865*t11885*t11886*t11887*7.0E1+a_7*t11862*t11872*t11865* \
                   t11885*t11886*t11887*7.0E1-a_7*t11864*t11873*t11865*t11885*t11886*t11887*(4.9E2/3.0)+a_8*t11864*t11873* \
                   t11865*t11885*t11886*t11887*(2.8E2/3.0)+a_9*t11862*t11866*t11867*t11885*t11886*t11887*1.5E2+a_11*1/ \
                   pow(t11861,1.3E1)*t11862*t11864*t11866*t11885*t11886*t11887*2.2E2-C_k*a_11*t11862*t11890*t11864*t11866* \
                   t11858*t11889*(5.5E1/3.0)-C_k*a_7*t11862*t11890*t11864*t11873*t11865*t11858*(3.5E1/3.0)+C_k*a_8*t11862* \
                   t11890*t11864*t11873*t11865*t11858*(4.0E1/3.0)+a_7*t11862*t11864*t11865*t11874*t11885*t11886*t11887* \
                   (2.8E2/3.0)-a_8*t11862*t11864*t11865*t11874*t11885*t11886*t11887*(6.4E2/3.0)+a_9*t11862*t11864*t11865* \
                   t11874*t11885*t11886*t11887*1.2E2)-kp*rho_a[index]*t11902*1/(t11882*t11882)*(gamma_aa[index]*mu_*1/ \
                   (rho_a[index]*rho_a[index]*rho_a[index])*t11880*t11876*t11877*(1.0/2.0)+gamma_aa[index]*mu_*t11876* \
                   t11877*t11878*1/pow(t11879,5.0/3.0)*(1.0/3.0)))-t11961*t12000*(t11952+t11935*t11938*(t11951-c0p*t11920* \
                   t11918*2.0))+rho_a[index]*t11961*t12000*(-t11995+t11935*t11938*(t11995-(t11950*1/(t11944*t11944)*(b2f* \
                   c*t11985*(1.0/3.0)+b4f*t11907*t11986*(2.0/3.0)+b1f*c*t11985*t11987*(1.0/6.0)+b3f*c*t11905*t11985*(1.0/ \
                   2.0)))/t11947+a1f*c*c0f*t11948*t11985*(2.0/3.0)-a1p*c*c0p*t11918*t11985*(2.0/3.0))+a1p*c*c0p*t11918* \
                   t11985*(2.0/3.0))+rho_a[index]*t11961*t12003*(ccaa1*gamma_aa[index]*gcaa*t11970*t11981*(8.0/3.0)+ccaa2* \
                   t11925*t11926*t11980*t11979*(1.6E1/3.0)+ccaa4*t11927*t11928*t11983*t11967*(3.2E1/3.0)-ccaa1*t11925* \
                   t11926*t11980*1/(t11969*t11969)*(8.0/3.0)-ccaa2*t11932*t11925*t11926*1/(t11978*t11978)*(gamma_aa[index]* \
                   gcaa*t11981*(1.6E1/3.0)+t11925*t11926*t11980*(1.6E1/3.0))-ccaa4*t11927*t11928*t11929*1/(t11966*t11966) \
                   *(gamma_aa[index]*gcaa*t11981*(3.2E1/3.0)+t11925*t11926*t11980*3.2E1+t11927*t11928*t11983*(3.2E1/3.0) \
                   +gamma_aa[index]*gcaa*t11925*t11926*t11982*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t11925*t11926*t11982* \
                   t11975*8.0-ccaa3*gamma_aa[index]*gcaa*t11931*t11925*t11926*1/(t11974*t11974)*(gamma_aa[index]*gcaa* \
                   t11981*8.0+t11925*t11926*t11980*1.6E1+gamma_aa[index]*gcaa*t11925*t11926*t11982*8.0))+gamma_aa[index]* \
                   t11923*t11953*t11858*t12000*t12003*(1.0/8.0)-gamma_aa[index]*t11923*t11957*t11859*t12000*t12003*(1.0/ \
                   8.0);
            } else if (rho_a[index] > cutoff_) {
                double t14411 = 1/pow(rho_a[index],1.0/3.0);
                double t14412 = c*t14411;
                double t14413 = sqrt(t14412);
                double t14414 = pow(t14412,3.0/2.0);
                double t14415 = c*c;
                double t14416 = 1/pow(rho_a[index],2.0/3.0);
                double t14417 = 1/c0p;
                double t14418 = b1p*t14413;
                double t14419 = b3p*t14414;
                double t14420 = b4p*t14415*t14416;
                double t14421 = b2p*c*t14411;
                double t14422 = t14420+t14421+t14418+t14419;
                double t14423 = 1/t14422;
                double t14424 = t14423*t14417*(1.0/2.0);
                double t14425 = t14424+1.0;
                double t14426 = log(t14425);
                double t14427 = a1p*c*t14411;
                double t14428 = t14427+1.0;
                double t14429 = tau_a[index]-1.0/1.0E20;
                double t14430 = 1/tau_a[index];
                double t14431 = tau_a[index]*2.0;
                double t14432 = 1/rho_a[index];
                double t14481 = gamma_aa[index]*t14432*(1.0/4.0);
                double t14433 = t14431-t14481;
                double t14434 = gamma_aa[index]*gamma_aa[index];
                double t14435 = gcaa*gcaa;
                double t14436 = t14434*t14434;
                double t14437 = t14435*t14435;
                double t14438 = 1/pow(rho_a[index],3.2E1/3.0);
                double t14439 = 1/pow(rho_a[index],8.0/3.0);
                double t14440 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t14441 = 1/pow(rho_a[index],1.6E1/3.0);
                double t14442 = 1/(tau_a[index]*tau_a[index]);
                double t14443 = pow(rho_a[index],5.0/3.0);
                double t14444 = C_k*t14430*t14443;
                double t14445 = t14444+1.0;
                double t14446 = t14444-1.0;
                double t14447 = 1/(t14445*t14445);
                double t14448 = t14446*t14446;
                double t14449 = t14448*t14448;
                double t14450 = t14449*t14449;
                double t14451 = 1/pow(t14445,1.1E1);
                double t14452 = 1/(t14445*t14445*t14445);
                double t14453 = 1/(t14445*t14445*t14445*t14445);
                double t14454 = 1/(t14445*t14445*t14445*t14445*t14445);
                double t14455 = 1/(t14445*t14445*t14445*t14445*t14445*t14445);
                double t14456 = 1/(t14445*t14445*t14445*t14445*t14445*t14445*t14445);
                double t14457 = 1/(t14445*t14445*t14445*t14445*t14445*t14445*t14445*t14445);
                double t14458 = 1/(t14445*t14445*t14445*t14445*t14445*t14445*t14445*t14445*t14445);
                double t14459 = 1/pow(t14445,1.0E1);
                double t14460 = pow(2.0,1.0/3.0);
                double t14461 = t14460*2.0;
                double t14462 = t14461-2.0;
                double t14463 = two_13*2.0;
                double t14464 = t14463-2.0;
                double t14465 = 1/t14464;
                double t14466 = 1/c0f;
                double t14467 = b1f*t14413;
                double t14468 = b3f*t14414;
                double t14469 = b4f*t14415*t14416;
                double t14470 = b2f*c*t14411;
                double t14471 = t14470+t14467+t14468+t14469;
                double t14472 = 1/t14471;
                double t14473 = t14472*t14466*(1.0/2.0);
                double t14474 = t14473+1.0;
                double t14475 = log(t14474);
                double t14476 = a1f*c*t14411;
                double t14477 = t14476+1.0;
                double t14478 = c0f*t14475*t14477*2.0;
                double t14479 = c0p*t14426*t14428*2.0;
                double t14480 = ( (t14429 > 0.0) ?  1.0 : 0.0 ) ;
                double t14511 = t14433*t14442*(1.0/2.0);
                double t14482 = t14430-t14511;
                double t14483 = t14480*t14482;
                double t14484 = 0.0 ;
                double t14485 = t14430*t14433*(1.0/2.0);
                double t14486 = t14485-1.0;
                double t14487 = t14484*t14486;
                double t14488 = t14483+t14487;
                double t14489 = gamma_aa[index]*gcaa*t14439*4.0;
                double t14490 = gamma_aa[index]*gcaa*t14440*t14434*t14435*4.0;
                double t14491 = t14441*t14434*t14435*6.0;
                double t14492 = t14436*t14437*t14438;
                double t14493 = t14490+t14491+t14492+t14489+1.0;
                double t14494 = 1/t14493;
                double t14495 = gamma_aa[index]*gcaa*t14439;
                double t14496 = t14495+1.0;
                double t14497 = 1/t14496;
                double t14498 = gamma_aa[index]*gcaa*t14439*3.0;
                double t14499 = gamma_aa[index]*gcaa*t14440*t14434*t14435;
                double t14500 = t14441*t14434*t14435*3.0;
                double t14501 = t14500+t14498+t14499+1.0;
                double t14502 = 1/t14501;
                double t14503 = gamma_aa[index]*gcaa*t14439*2.0;
                double t14504 = t14441*t14434*t14435;
                double t14505 = t14503+t14504+1.0;
                double t14506 = 1/t14505;
                double t14507 = 1/pow(rho_a[index],1.9E1/3.0);
                double t14508 = 1/pow(rho_a[index],1.1E1/3.0);
                double t14509 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t14510 = 1/pow(rho_a[index],3.5E1/3.0);
                double t14512 = 1/pow(rho_a[index],4.0/3.0);
                double t14513 = 1/pow(rho_a[index],5.0/3.0);
                double t14514 = 1/sqrt(t14412);
                double t14515 = 1/t14425;
                double t14516 = 1/(t14422*t14422);
                double t14517 = b4p*t14513*t14415*(2.0/3.0);
                double t14518 = b2p*c*t14512*(1.0/3.0);
                double t14519 = b1p*c*t14512*t14514*(1.0/6.0);
                double t14520 = b3p*c*t14413*t14512*(1.0/2.0);
                double t14521 = t14520+t14517+t14518+t14519;
                double t14522 = t14521*t14515*t14516*t14428;
                double t14523 = ccaa4*t14436*t14437*t14438*t14494;
                double t14524 = ccaa1*gamma_aa[index]*gcaa*t14439*t14497;
                double t14525 = ccaa3*gamma_aa[index]*gcaa*t14502*t14440*t14434*t14435;
                double t14526 = ccaa2*t14441*t14434*t14506*t14435;
                double t14527 = ccaa0+t14523+t14524+t14525+t14526;
                double t14528 = X-1.0;
                double t14529 = 1/(k*k);
                double t14530 = 1/kp;
                double t14531 = 1/(rho_a[index]*rho_a[index]);
                double t14532 = rho_a[index]*2.0;
                double t14533 = 1/pow(t14532,2.0/3.0);
                double t14534 = gamma_aa[index]*mu_*t14530*t14531*t14533*t14529*(1.0/4.0);
                double t14535 = t14534+1.0;
                double t14536 = 1/t14535;
                double t14537 = kp-kp*t14536+1.0;
                double t14538 = C_k*C_k;
                double t14539 = pow(rho_a[index],7.0/3.0);
                double t14540 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t14541 = 1/t14445;
                double t14542 = 1/pow(t14445,1.2E1);
                double t14543 = pow(rho_a[index],2.0/3.0);
                double t14544 = t14478-t14479;
                double t14545 = t14462*t14544*t14465;
                double t14546 = t14545+t14479;
                double t14547 = C_k*a_1*t14442*t14541*t14443;
                double t14548 = C_k*a_2*t14442*t14443*t14446*t14447*2.0;
                double t14549 = C_k*a_10*t14450*t14442*t14443*t14446*t14459*1.0E1;
                double t14550 = C_k*a_11*t14450*t14442*t14451*t14443*t14448*1.1E1;
                double t14551 = C_k*a_3*t14442*t14443*t14452*t14448*3.0;
                double t14552 = C_k*a_4*t14442*t14443*t14453*t14446*t14448*4.0;
                double t14553 = C_k*a_5*t14442*t14443*t14454*t14449*5.0;
                double t14554 = C_k*a_6*t14442*t14443*t14446*t14455*t14449*6.0;
                double t14555 = C_k*a_7*t14442*t14443*t14456*t14448*t14449*7.0;
                double t14556 = C_k*a_8*t14442*t14443*t14446*t14448*t14457*t14449*8.0;
                double t14557 = C_k*a_9*t14450*t14442*t14443*t14458*9.0;
                double t14558 = t14550+t14551+t14552+t14553+t14554+t14555+t14547+t14556+t14548+t14557+t14549-C_k* \
                   a_1*t14442*t14443*t14446*t14447-C_k*a_2*t14442*t14443*t14452*t14448*2.0-C_k*a_4*t14442*t14443*t14454* \
                   t14449*4.0-C_k*a_8*t14450*t14442*t14443*t14458*8.0-C_k*a_10*t14450*t14442*t14451*t14443*t14448*1.0E1- \
                   C_k*a_3*t14442*t14443*t14453*t14446*t14448*3.0-C_k*a_5*t14442*t14443*t14446*t14455*t14449*5.0-C_k* \
                   a_6*t14442*t14443*t14456*t14448*t14449*6.0-C_k*a_9*t14450*t14442*t14443*t14446*t14459*9.0-C_k*a_11* \
                   t14450*t14442*t14443*t14542*t14446*t14448*1.1E1-C_k*a_7*t14442*t14443*t14446*t14448*t14457*t14449* \
                   7.0;
                v_rho_a_tau_a_[index] = t14528*t14537*t14558-t14527*t14488*(t14479+t14462*t14465*(t14478-c0p*t14426* \
                   t14428*2.0))+rho_a[index]*t14528*t14537*(C_k*a_1*t14442*t14541*t14543*(5.0/3.0)-a_1*t14540*t14447* \
                   t14538*t14539*(1.0E1/3.0)+a_2*t14540*t14447*t14538*t14539*(1.0E1/3.0)+a_1*t14540*t14452*t14446*t14538* \
                   t14539*(1.0E1/3.0)+a_10*t14450*t14540*t14538*t14539*t14459*1.5E2-a_2*t14540*t14452*t14446*t14538*t14539* \
                   (4.0E1/3.0)+a_2*t14540*t14453*t14448*t14538*t14539*1.0E1+a_3*t14540*t14452*t14446*t14538*t14539*1.0E1- \
                   a_3*t14540*t14453*t14448*t14538*t14539*3.0E1+a_4*t14540*t14453*t14448*t14538*t14539*2.0E1+a_4*t14540* \
                   t14455*t14538*t14449*t14539*(1.0E2/3.0)-a_5*t14540*t14455*t14538*t14449*t14539*(2.5E2/3.0)+a_6*t14540* \
                   t14455*t14538*t14449*t14539*5.0E1+a_8*t14450*t14540*t14538*t14539*t14459*1.2E2-a_9*t14450*t14540*t14538* \
                   t14539*t14459*2.7E2-C_k*a_1*t14442*t14543*t14446*t14447*(5.0/3.0)-C_k*a_2*t14442*t14452*t14543*t14448* \
                   (1.0E1/3.0)+C_k*a_2*t14442*t14543*t14446*t14447*(1.0E1/3.0)+C_k*a_3*t14442*t14452*t14543*t14448*5.0- \
                   C_k*a_4*t14442*t14543*t14454*t14449*(2.0E1/3.0)+C_k*a_5*t14442*t14543*t14454*t14449*(2.5E1/3.0)-C_k* \
                   a_8*t14450*t14442*t14543*t14458*(4.0E1/3.0)+C_k*a_9*t14450*t14442*t14543*t14458*1.5E1-C_k*a_10*t14450* \
                   t14442*t14451*t14543*t14448*(5.0E1/3.0)+C_k*a_11*t14450*t14442*t14451*t14543*t14448*(5.5E1/3.0)+C_k* \
                   a_10*t14450*t14442*t14543*t14446*t14459*(5.0E1/3.0)-C_k*a_3*t14442*t14453*t14543*t14446*t14448*5.0+ \
                   C_k*a_4*t14442*t14453*t14543*t14446*t14448*(2.0E1/3.0)-C_k*a_5*t14442*t14543*t14446*t14455*t14449* \
                   (2.5E1/3.0)+C_k*a_6*t14442*t14543*t14446*t14455*t14449*1.0E1-C_k*a_6*t14442*t14543*t14456*t14448*t14449* \
                   1.0E1+C_k*a_7*t14442*t14543*t14456*t14448*t14449*(3.5E1/3.0)-C_k*a_9*t14450*t14442*t14543*t14446*t14459* \
                   1.5E1-a_10*t14450*t14540*t14451*t14446*t14538*t14539*(1.0E3/3.0)+a_11*t14450*t14540*t14451*t14446* \
                   t14538*t14539*(5.5E2/3.0)+a_10*t14450*t14540*t14542*t14448*t14538*t14539*(5.5E2/3.0)-a_11*t14450*t14540* \
                   t14542*t14448*t14538*t14539*(1.21E3/3.0)+a_3*t14540*t14454*t14446*t14448*t14538*t14539*2.0E1-a_4*t14540* \
                   t14454*t14446*t14448*t14538*t14539*(1.6E2/3.0)+a_5*t14540*t14454*t14446*t14448*t14538*t14539*(1.0E2/ \
                   3.0)+a_5*t14540*t14446*t14456*t14538*t14449*t14539*5.0E1-a_6*t14540*t14446*t14456*t14538*t14449*t14539* \
                   1.2E2+a_6*t14540*t14448*t14457*t14538*t14449*t14539*7.0E1+a_7*t14540*t14446*t14456*t14538*t14449*t14539* \
                   7.0E1-a_7*t14540*t14448*t14457*t14538*t14449*t14539*(4.9E2/3.0)+a_8*t14540*t14448*t14457*t14538*t14449* \
                   t14539*(2.8E2/3.0)+a_9*t14450*t14540*t14451*t14446*t14538*t14539*1.5E2+a_11*t14450*t14540*1/pow(t14445,1.3E1) \
                   *t14446*t14448*t14538*t14539*2.2E2-C_k*a_11*t14450*t14442*t14542*t14543*t14446*t14448*(5.5E1/3.0)- \
                   C_k*a_7*t14442*t14543*t14446*t14448*t14457*t14449*(3.5E1/3.0)+C_k*a_8*t14442*t14543*t14446*t14448* \
                   t14457*t14449*(4.0E1/3.0)+a_7*t14540*t14446*t14448*t14538*t14449*t14458*t14539*(2.8E2/3.0)-a_8*t14540* \
                   t14446*t14448*t14538*t14449*t14458*t14539*(6.4E2/3.0)+a_9*t14540*t14446*t14448*t14538*t14449*t14458* \
                   t14539*1.2E2)+rho_a[index]*t14527*t14488*(-t14522+t14462*t14465*(t14522-(1/(t14471*t14471)*t14477* \
                   (b2f*c*t14512*(1.0/3.0)+b4f*t14513*t14415*(2.0/3.0)+b1f*c*t14512*t14514*(1.0/6.0)+b3f*c*t14413*t14512* \
                   (1.0/2.0)))/t14474+a1f*c*c0f*t14512*t14475*(2.0/3.0)-a1p*c*c0p*t14512*t14426*(2.0/3.0))+a1p*c*c0p* \
                   t14512*t14426*(2.0/3.0))+rho_a[index]*t14546*t14488*(ccaa1*gamma_aa[index]*gcaa*t14508*t14497*(8.0/ \
                   3.0)+ccaa2*t14434*t14506*t14435*t14507*(1.6E1/3.0)+ccaa4*t14510*t14436*t14437*t14494*(3.2E1/3.0)-ccaa1* \
                   t14434*t14435*t14507*1/(t14496*t14496)*(8.0/3.0)-ccaa2*t14441*1/(t14505*t14505)*t14434*t14435*(gamma_aa[index]* \
                   gcaa*t14508*(1.6E1/3.0)+t14434*t14435*t14507*(1.6E1/3.0))-ccaa4*t14436*t14437*t14438*1/(t14493*t14493) \
                   *(gamma_aa[index]*gcaa*t14508*(3.2E1/3.0)+t14510*t14436*t14437*(3.2E1/3.0)+t14434*t14435*t14507*3.2E1+ \
                   gamma_aa[index]*gcaa*t14434*t14435*t14509*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t14502*t14434*t14435*t14509* \
                   8.0-ccaa3*gamma_aa[index]*gcaa*1/(t14501*t14501)*t14440*t14434*t14435*(gamma_aa[index]*gcaa*t14508* \
                   8.0+t14434*t14435*t14507*1.6E1+gamma_aa[index]*gcaa*t14434*t14435*t14509*8.0))+gamma_aa[index]*t14432* \
                   t14442*t14480*t14527*t14546*(1.0/8.0)-gamma_aa[index]*t14430*t14432*t14527*t14546*t14484*(1.0/8.0) \
                   -kp*rho_a[index]*1/(t14535*t14535)*t14528*t14558*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]* \
                   rho_a[index])*t14530*t14533*t14529*(1.0/2.0)+gamma_aa[index]*mu_*t14530*t14531*1/pow(t14532,5.0/3.0) \
                   *t14529*(1.0/3.0));
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t12007 = pow(rho_b[index],5.0/3.0);
                double t12008 = 1/(tau_b[index]*tau_b[index]);
                double t12009 = 1/tau_b[index];
                double t12010 = C_k*t12007*t12009;
                double t12011 = t12010+1.0;
                double t12012 = t12010-1.0;
                double t12013 = 1/(t12011*t12011);
                double t12014 = t12012*t12012;
                double t12015 = t12014*t12014;
                double t12016 = t12015*t12015;
                double t12017 = 1/pow(t12011,1.1E1);
                double t12018 = 1/(t12011*t12011*t12011);
                double t12019 = 1/(t12011*t12011*t12011*t12011);
                double t12020 = 1/(t12011*t12011*t12011*t12011*t12011);
                double t12021 = 1/(t12011*t12011*t12011*t12011*t12011*t12011);
                double t12022 = 1/(t12011*t12011*t12011*t12011*t12011*t12011*t12011);
                double t12023 = 1/(t12011*t12011*t12011*t12011*t12011*t12011*t12011*t12011);
                double t12024 = 1/(t12011*t12011*t12011*t12011*t12011*t12011*t12011*t12011*t12011);
                double t12025 = 1/pow(t12011,1.0E1);
                double t12026 = 1/(k*k);
                double t12027 = 1/kp;
                double t12028 = 1/(rho_b[index]*rho_b[index]);
                double t12029 = rho_b[index]*2.0;
                double t12030 = 1/pow(t12029,2.0/3.0);
                double t12031 = gamma_bb[index]*mu_*t12030*t12026*t12027*t12028*(1.0/4.0);
                double t12032 = t12031+1.0;
                double t12033 = 1/t12032;
                double t12034 = kp-kp*t12033+1.0;
                double t12035 = C_k*C_k;
                double t12036 = pow(rho_b[index],7.0/3.0);
                double t12037 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t12038 = 1/t12011;
                double t12039 = 1/pow(t12011,1.2E1);
                double t12040 = pow(rho_b[index],2.0/3.0);
                double t12041 = C_k*a_1*t12007*t12008*t12038;
                double t12042 = C_k*a_2*t12012*t12013*t12007*t12008*2.0;
                double t12043 = C_k*a_10*t12012*t12007*t12016*t12025*t12008*1.0E1;
                double t12044 = C_k*a_11*t12014*t12007*t12016*t12008*t12017*1.1E1;
                double t12045 = C_k*a_3*t12014*t12007*t12008*t12018*3.0;
                double t12046 = C_k*a_4*t12012*t12014*t12007*t12008*t12019*4.0;
                double t12047 = C_k*a_5*t12020*t12015*t12007*t12008*5.0;
                double t12048 = C_k*a_6*t12012*t12021*t12015*t12007*t12008*6.0;
                double t12049 = C_k*a_7*t12022*t12014*t12015*t12007*t12008*7.0;
                double t12050 = C_k*a_8*t12012*t12014*t12023*t12015*t12007*t12008*8.0;
                double t12051 = C_k*a_9*t12024*t12007*t12016*t12008*9.0;
                double t12052 = t12041+t12050+t12042+t12051+t12043+t12044+t12045+t12046+t12047+t12048+t12049-C_k* \
                   a_1*t12012*t12013*t12007*t12008-C_k*a_2*t12014*t12007*t12008*t12018*2.0-C_k*a_4*t12020*t12015*t12007* \
                   t12008*4.0-C_k*a_8*t12024*t12007*t12016*t12008*8.0-C_k*a_10*t12014*t12007*t12016*t12008*t12017*1.0E1- \
                   C_k*a_3*t12012*t12014*t12007*t12008*t12019*3.0-C_k*a_5*t12012*t12021*t12015*t12007*t12008*5.0-C_k* \
                   a_6*t12022*t12014*t12015*t12007*t12008*6.0-C_k*a_9*t12012*t12007*t12016*t12025*t12008*9.0-C_k*a_11* \
                   t12012*t12014*t12007*t12016*t12008*t12039*1.1E1-C_k*a_7*t12012*t12014*t12023*t12015*t12007*t12008* \
                   7.0;
                double t12053 = 1/pow(rho_b[index],1.0/3.0);
                double t12054 = c*t12053;
                double t12055 = sqrt(t12054);
                double t12056 = pow(t12054,3.0/2.0);
                double t12057 = c*c;
                double t12058 = 1/pow(rho_b[index],2.0/3.0);
                double t12059 = 1/c0p;
                double t12060 = b1p*t12055;
                double t12061 = b3p*t12056;
                double t12062 = b4p*t12057*t12058;
                double t12063 = b2p*c*t12053;
                double t12064 = t12060+t12061+t12062+t12063;
                double t12065 = 1/t12064;
                double t12066 = t12065*t12059*(1.0/2.0);
                double t12067 = t12066+1.0;
                double t12068 = log(t12067);
                double t12069 = a1p*c*t12053;
                double t12070 = t12069+1.0;
                double t12071 = tau_b[index]-1.0/1.0E20;
                double t12072 = tau_b[index]*2.0;
                double t12073 = 1/rho_b[index];
                double t12104 = gamma_bb[index]*t12073*(1.0/4.0);
                double t12074 = -t12104+t12072;
                double t12075 = gamma_bb[index]*gamma_bb[index];
                double t12076 = gcaa*gcaa;
                double t12077 = t12075*t12075;
                double t12078 = t12076*t12076;
                double t12079 = 1/pow(rho_b[index],3.2E1/3.0);
                double t12080 = 1/pow(rho_b[index],8.0/3.0);
                double t12081 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t12082 = 1/pow(rho_b[index],1.6E1/3.0);
                double t12083 = pow(2.0,1.0/3.0);
                double t12084 = t12083*2.0;
                double t12085 = t12084-2.0;
                double t12086 = two_13*2.0;
                double t12087 = t12086-2.0;
                double t12088 = 1/t12087;
                double t12089 = 1/c0f;
                double t12090 = b1f*t12055;
                double t12091 = b3f*t12056;
                double t12092 = b4f*t12057*t12058;
                double t12093 = b2f*c*t12053;
                double t12094 = t12090+t12091+t12092+t12093;
                double t12095 = 1/t12094;
                double t12096 = t12095*t12089*(1.0/2.0);
                double t12097 = t12096+1.0;
                double t12098 = log(t12097);
                double t12099 = a1f*c*t12053;
                double t12100 = t12099+1.0;
                double t12101 = c0f*t12100*t12098*2.0;
                double t12102 = c0p*t12070*t12068*2.0;
                double t12103 = ( (t12071 > 0.0) ?  1.0 : 0.0 ) ;
                double t12134 = t12008*t12074*(1.0/2.0);
                double t12105 = -t12134+t12009;
                double t12106 = t12103*t12105;
                double t12107 = 0.0 ;
                double t12108 = t12009*t12074*(1.0/2.0);
                double t12109 = t12108-1.0;
                double t12110 = t12107*t12109;
                double t12111 = t12110+t12106;
                double t12112 = gamma_bb[index]*gcaa*t12080*4.0;
                double t12113 = gamma_bb[index]*gcaa*t12081*t12075*t12076*4.0;
                double t12114 = t12082*t12075*t12076*6.0;
                double t12115 = t12077*t12078*t12079;
                double t12116 = t12112+t12113+t12114+t12115+1.0;
                double t12117 = 1/t12116;
                double t12118 = gamma_bb[index]*gcaa*t12080;
                double t12119 = t12118+1.0;
                double t12120 = 1/t12119;
                double t12121 = gamma_bb[index]*gcaa*t12080*3.0;
                double t12122 = gamma_bb[index]*gcaa*t12081*t12075*t12076;
                double t12123 = t12082*t12075*t12076*3.0;
                double t12124 = t12121+t12122+t12123+1.0;
                double t12125 = 1/t12124;
                double t12126 = gamma_bb[index]*gcaa*t12080*2.0;
                double t12127 = t12082*t12075*t12076;
                double t12128 = t12126+t12127+1.0;
                double t12129 = 1/t12128;
                double t12130 = 1/pow(rho_b[index],1.9E1/3.0);
                double t12131 = 1/pow(rho_b[index],1.1E1/3.0);
                double t12132 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t12133 = 1/pow(rho_b[index],3.5E1/3.0);
                double t12135 = 1/pow(rho_b[index],4.0/3.0);
                double t12136 = 1/pow(rho_b[index],5.0/3.0);
                double t12137 = 1/sqrt(t12054);
                double t12138 = 1/t12067;
                double t12139 = 1/(t12064*t12064);
                double t12140 = b4p*t12136*t12057*(2.0/3.0);
                double t12141 = b2p*c*t12135*(1.0/3.0);
                double t12142 = b1p*c*t12135*t12137*(1.0/6.0);
                double t12143 = b3p*c*t12135*t12055*(1.0/2.0);
                double t12144 = t12140+t12141+t12142+t12143;
                double t12145 = t12070*t12144*t12138*t12139;
                double t12146 = ccaa4*t12117*t12077*t12078*t12079;
                double t12147 = ccaa1*gamma_bb[index]*gcaa*t12120*t12080;
                double t12148 = ccaa3*gamma_bb[index]*gcaa*t12125*t12081*t12075*t12076;
                double t12149 = ccaa2*t12082*t12075*t12129*t12076;
                double t12150 = ccaa0+t12146+t12147+t12148+t12149;
                double t12151 = t12101-t12102;
                double t12152 = t12151*t12085*t12088;
                double t12153 = t12102+t12152;
                v_rho_b_tau_b_[index] = (X-1.0)*(t12034*t12052+rho_b[index]*t12034*(C_k*a_1*t12040*t12008*t12038* \
                   (5.0/3.0)-a_1*t12013*t12035*t12036*t12037*(1.0E1/3.0)+a_2*t12013*t12035*t12036*t12037*(1.0E1/3.0)+ \
                   a_1*t12012*t12035*t12018*t12036*t12037*(1.0E1/3.0)+a_10*t12016*t12025*t12035*t12036*t12037*1.5E2-a_2* \
                   t12012*t12035*t12018*t12036*t12037*(4.0E1/3.0)+a_2*t12014*t12035*t12036*t12019*t12037*1.0E1+a_3*t12012* \
                   t12035*t12018*t12036*t12037*1.0E1-a_3*t12014*t12035*t12036*t12019*t12037*3.0E1+a_4*t12021*t12015*t12035* \
                   t12036*t12037*(1.0E2/3.0)+a_4*t12014*t12035*t12036*t12019*t12037*2.0E1-a_5*t12021*t12015*t12035*t12036* \
                   t12037*(2.5E2/3.0)+a_6*t12021*t12015*t12035*t12036*t12037*5.0E1+a_8*t12016*t12025*t12035*t12036*t12037* \
                   1.2E2-a_9*t12016*t12025*t12035*t12036*t12037*2.7E2-C_k*a_1*t12012*t12013*t12040*t12008*(5.0/3.0)+C_k* \
                   a_2*t12012*t12013*t12040*t12008*(1.0E1/3.0)-C_k*a_2*t12040*t12014*t12008*t12018*(1.0E1/3.0)+C_k*a_3* \
                   t12040*t12014*t12008*t12018*5.0-C_k*a_4*t12020*t12040*t12015*t12008*(2.0E1/3.0)+C_k*a_5*t12020*t12040* \
                   t12015*t12008*(2.5E1/3.0)-C_k*a_8*t12040*t12024*t12016*t12008*(4.0E1/3.0)+C_k*a_9*t12040*t12024*t12016* \
                   t12008*1.5E1+C_k*a_10*t12012*t12040*t12016*t12025*t12008*(5.0E1/3.0)-C_k*a_10*t12040*t12014*t12016* \
                   t12008*t12017*(5.0E1/3.0)+C_k*a_11*t12040*t12014*t12016*t12008*t12017*(5.5E1/3.0)-C_k*a_3*t12012*t12040* \
                   t12014*t12008*t12019*5.0+C_k*a_4*t12012*t12040*t12014*t12008*t12019*(2.0E1/3.0)-C_k*a_5*t12012*t12021* \
                   t12040*t12015*t12008*(2.5E1/3.0)+C_k*a_6*t12012*t12021*t12040*t12015*t12008*1.0E1-C_k*a_6*t12022*t12040* \
                   t12014*t12015*t12008*1.0E1+C_k*a_7*t12022*t12040*t12014*t12015*t12008*(3.5E1/3.0)-C_k*a_9*t12012*t12040* \
                   t12016*t12025*t12008*1.5E1-a_10*t12012*t12016*t12017*t12035*t12036*t12037*(1.0E3/3.0)+a_11*t12012* \
                   t12016*t12017*t12035*t12036*t12037*(5.5E2/3.0)+a_10*t12014*t12016*t12035*t12036*t12037*t12039*(5.5E2/ \
                   3.0)-a_11*t12014*t12016*t12035*t12036*t12037*t12039*(1.21E3/3.0)+a_3*t12020*t12012*t12014*t12035*t12036* \
                   t12037*2.0E1-a_4*t12020*t12012*t12014*t12035*t12036*t12037*(1.6E2/3.0)+a_5*t12020*t12012*t12014*t12035* \
                   t12036*t12037*(1.0E2/3.0)+a_5*t12012*t12022*t12015*t12035*t12036*t12037*5.0E1-a_6*t12012*t12022*t12015* \
                   t12035*t12036*t12037*1.2E2+a_6*t12014*t12023*t12015*t12035*t12036*t12037*7.0E1+a_7*t12012*t12022*t12015* \
                   t12035*t12036*t12037*7.0E1-a_7*t12014*t12023*t12015*t12035*t12036*t12037*(4.9E2/3.0)+a_8*t12014*t12023* \
                   t12015*t12035*t12036*t12037*(2.8E2/3.0)+a_9*t12012*t12016*t12017*t12035*t12036*t12037*1.5E2+a_11*1/ \
                   pow(t12011,1.3E1)*t12012*t12014*t12016*t12035*t12036*t12037*2.2E2-C_k*a_11*t12012*t12040*t12014*t12016* \
                   t12008*t12039*(5.5E1/3.0)-C_k*a_7*t12012*t12040*t12014*t12023*t12015*t12008*(3.5E1/3.0)+C_k*a_8*t12012* \
                   t12040*t12014*t12023*t12015*t12008*(4.0E1/3.0)+a_7*t12012*t12014*t12015*t12024*t12035*t12036*t12037* \
                   (2.8E2/3.0)-a_8*t12012*t12014*t12015*t12024*t12035*t12036*t12037*(6.4E2/3.0)+a_9*t12012*t12014*t12015* \
                   t12024*t12035*t12036*t12037*1.2E2)-kp*rho_b[index]*1/(t12032*t12032)*t12052*(gamma_bb[index]*mu_*1/ \
                   (rho_b[index]*rho_b[index]*rho_b[index])*t12030*t12026*t12027*(1.0/2.0)+gamma_bb[index]*mu_*t12026* \
                   t12027*t12028*1/pow(t12029,5.0/3.0)*(1.0/3.0)))-t12111*t12150*(t12102+t12085*t12088*(t12101-c0p*t12070* \
                   t12068*2.0))+rho_b[index]*t12111*t12150*(-t12145+t12085*t12088*(t12145-(t12100*1/(t12094*t12094)*(b2f* \
                   c*t12135*(1.0/3.0)+b4f*t12136*t12057*(2.0/3.0)+b1f*c*t12135*t12137*(1.0/6.0)+b3f*c*t12135*t12055*(1.0/ \
                   2.0)))/t12097+a1f*c*c0f*t12135*t12098*(2.0/3.0)-a1p*c*c0p*t12135*t12068*(2.0/3.0))+a1p*c*c0p*t12135* \
                   t12068*(2.0/3.0))+rho_b[index]*t12111*t12153*(ccaa1*gamma_bb[index]*gcaa*t12120*t12131*(8.0/3.0)+ccaa2* \
                   t12130*t12075*t12129*t12076*(1.6E1/3.0)+ccaa4*t12133*t12117*t12077*t12078*(3.2E1/3.0)-ccaa1*t12130* \
                   1/(t12119*t12119)*t12075*t12076*(8.0/3.0)-ccaa2*t12082*1/(t12128*t12128)*t12075*t12076*(gamma_bb[index]* \
                   gcaa*t12131*(1.6E1/3.0)+t12130*t12075*t12076*(1.6E1/3.0))-ccaa4*1/(t12116*t12116)*t12077*t12078*t12079* \
                   (gamma_bb[index]*gcaa*t12131*(3.2E1/3.0)+t12130*t12075*t12076*3.2E1+t12133*t12077*t12078*(3.2E1/3.0) \
                   +gamma_bb[index]*gcaa*t12132*t12075*t12076*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t12132*t12125*t12075* \
                   t12076*8.0-ccaa3*gamma_bb[index]*gcaa*1/(t12124*t12124)*t12081*t12075*t12076*(gamma_bb[index]*gcaa* \
                   t12131*8.0+t12130*t12075*t12076*1.6E1+gamma_bb[index]*gcaa*t12132*t12075*t12076*8.0))+gamma_bb[index]* \
                   t12103*t12150*t12008*t12153*t12073*(1.0/8.0)-gamma_bb[index]*t12150*t12107*t12009*t12153*t12073*(1.0/ \
                   8.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t13287 = 1/pow(rho_b[index],1.0/3.0);
                double t13288 = c*t13287;
                double t13289 = sqrt(t13288);
                double t13290 = pow(t13288,3.0/2.0);
                double t13291 = c*c;
                double t13292 = 1/pow(rho_b[index],2.0/3.0);
                double t13293 = 1/c0p;
                double t13294 = b1p*t13289;
                double t13295 = b3p*t13290;
                double t13296 = b4p*t13291*t13292;
                double t13297 = b2p*c*t13287;
                double t13298 = t13294+t13295+t13296+t13297;
                double t13299 = 1/t13298;
                double t13300 = t13293*t13299*(1.0/2.0);
                double t13301 = t13300+1.0;
                double t13302 = log(t13301);
                double t13303 = a1p*c*t13287;
                double t13304 = t13303+1.0;
                double t13305 = tau_b[index]-1.0/1.0E20;
                double t13306 = 1/tau_b[index];
                double t13307 = tau_b[index]*2.0;
                double t13308 = 1/rho_b[index];
                double t13357 = gamma_bb[index]*t13308*(1.0/4.0);
                double t13309 = t13307-t13357;
                double t13310 = gamma_bb[index]*gamma_bb[index];
                double t13311 = gcaa*gcaa;
                double t13312 = t13310*t13310;
                double t13313 = t13311*t13311;
                double t13314 = 1/pow(rho_b[index],3.2E1/3.0);
                double t13315 = 1/pow(rho_b[index],8.0/3.0);
                double t13316 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t13317 = 1/pow(rho_b[index],1.6E1/3.0);
                double t13318 = 1/(tau_b[index]*tau_b[index]);
                double t13319 = pow(rho_b[index],5.0/3.0);
                double t13320 = C_k*t13306*t13319;
                double t13321 = t13320+1.0;
                double t13322 = t13320-1.0;
                double t13323 = 1/(t13321*t13321);
                double t13324 = t13322*t13322;
                double t13325 = t13324*t13324;
                double t13326 = t13325*t13325;
                double t13327 = 1/pow(t13321,1.1E1);
                double t13328 = 1/(t13321*t13321*t13321);
                double t13329 = 1/(t13321*t13321*t13321*t13321);
                double t13330 = 1/(t13321*t13321*t13321*t13321*t13321);
                double t13331 = 1/(t13321*t13321*t13321*t13321*t13321*t13321);
                double t13332 = 1/(t13321*t13321*t13321*t13321*t13321*t13321*t13321);
                double t13333 = 1/(t13321*t13321*t13321*t13321*t13321*t13321*t13321*t13321);
                double t13334 = 1/(t13321*t13321*t13321*t13321*t13321*t13321*t13321*t13321*t13321);
                double t13335 = 1/pow(t13321,1.0E1);
                double t13336 = pow(2.0,1.0/3.0);
                double t13337 = t13336*2.0;
                double t13338 = t13337-2.0;
                double t13339 = two_13*2.0;
                double t13340 = t13339-2.0;
                double t13341 = 1/t13340;
                double t13342 = 1/c0f;
                double t13343 = b1f*t13289;
                double t13344 = b3f*t13290;
                double t13345 = b4f*t13291*t13292;
                double t13346 = b2f*c*t13287;
                double t13347 = t13343+t13344+t13345+t13346;
                double t13348 = 1/t13347;
                double t13349 = t13342*t13348*(1.0/2.0);
                double t13350 = t13349+1.0;
                double t13351 = log(t13350);
                double t13352 = a1f*c*t13287;
                double t13353 = t13352+1.0;
                double t13354 = c0f*t13351*t13353*2.0;
                double t13355 = c0p*t13302*t13304*2.0;
                double t13356 = ( (t13305 > 0.0) ?  1.0 : 0.0 ) ;
                double t13387 = t13309*t13318*(1.0/2.0);
                double t13358 = t13306-t13387;
                double t13359 = t13356*t13358;
                double t13360 = 0.0 ;
                double t13361 = t13306*t13309*(1.0/2.0);
                double t13362 = t13361-1.0;
                double t13363 = t13360*t13362;
                double t13364 = t13363+t13359;
                double t13365 = gamma_bb[index]*gcaa*t13315*4.0;
                double t13366 = gamma_bb[index]*gcaa*t13310*t13311*t13316*4.0;
                double t13367 = t13310*t13311*t13317*6.0;
                double t13368 = t13312*t13313*t13314;
                double t13369 = t13365+t13366+t13367+t13368+1.0;
                double t13370 = 1/t13369;
                double t13371 = gamma_bb[index]*gcaa*t13315;
                double t13372 = t13371+1.0;
                double t13373 = 1/t13372;
                double t13374 = gamma_bb[index]*gcaa*t13315*3.0;
                double t13375 = gamma_bb[index]*gcaa*t13310*t13311*t13316;
                double t13376 = t13310*t13311*t13317*3.0;
                double t13377 = t13374+t13375+t13376+1.0;
                double t13378 = 1/t13377;
                double t13379 = gamma_bb[index]*gcaa*t13315*2.0;
                double t13380 = t13310*t13311*t13317;
                double t13381 = t13380+t13379+1.0;
                double t13382 = 1/t13381;
                double t13383 = 1/pow(rho_b[index],1.9E1/3.0);
                double t13384 = 1/pow(rho_b[index],1.1E1/3.0);
                double t13385 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t13386 = 1/pow(rho_b[index],3.5E1/3.0);
                double t13388 = 1/pow(rho_b[index],4.0/3.0);
                double t13389 = 1/pow(rho_b[index],5.0/3.0);
                double t13390 = 1/sqrt(t13288);
                double t13391 = 1/t13301;
                double t13392 = 1/(t13298*t13298);
                double t13393 = b4p*t13291*t13389*(2.0/3.0);
                double t13394 = b2p*c*t13388*(1.0/3.0);
                double t13395 = b1p*c*t13390*t13388*(1.0/6.0);
                double t13396 = b3p*c*t13289*t13388*(1.0/2.0);
                double t13397 = t13393+t13394+t13395+t13396;
                double t13398 = t13304*t13391*t13392*t13397;
                double t13399 = ccaa4*t13312*t13313*t13314*t13370;
                double t13400 = ccaa1*gamma_bb[index]*gcaa*t13315*t13373;
                double t13401 = ccaa3*gamma_bb[index]*gcaa*t13310*t13311*t13316*t13378;
                double t13402 = ccaa2*t13310*t13311*t13317*t13382;
                double t13403 = ccaa0+t13400+t13401+t13402+t13399;
                double t13404 = X-1.0;
                double t13405 = 1/(k*k);
                double t13406 = 1/kp;
                double t13407 = 1/(rho_b[index]*rho_b[index]);
                double t13408 = rho_b[index]*2.0;
                double t13409 = 1/pow(t13408,2.0/3.0);
                double t13410 = gamma_bb[index]*mu_*t13405*t13406*t13407*t13409*(1.0/4.0);
                double t13411 = t13410+1.0;
                double t13412 = 1/t13411;
                double t13413 = kp-kp*t13412+1.0;
                double t13414 = C_k*C_k;
                double t13415 = pow(rho_b[index],7.0/3.0);
                double t13416 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t13417 = 1/t13321;
                double t13418 = 1/pow(t13321,1.2E1);
                double t13419 = pow(rho_b[index],2.0/3.0);
                double t13420 = t13354-t13355;
                double t13421 = t13420*t13341*t13338;
                double t13422 = t13421+t13355;
                double t13423 = C_k*a_1*t13318*t13417*t13319;
                double t13424 = C_k*a_2*t13322*t13323*t13318*t13319*2.0;
                double t13425 = C_k*a_10*t13322*t13326*t13335*t13318*t13319*1.0E1;
                double t13426 = C_k*a_11*t13324*t13326*t13318*t13327*t13319*1.1E1;
                double t13427 = C_k*a_3*t13324*t13318*t13319*t13328*3.0;
                double t13428 = C_k*a_4*t13322*t13324*t13318*t13319*t13329*4.0;
                double t13429 = C_k*a_5*t13330*t13325*t13318*t13319*5.0;
                double t13430 = C_k*a_6*t13322*t13331*t13325*t13318*t13319*6.0;
                double t13431 = C_k*a_7*t13332*t13324*t13325*t13318*t13319*7.0;
                double t13432 = C_k*a_8*t13322*t13324*t13333*t13325*t13318*t13319*8.0;
                double t13433 = C_k*a_9*t13334*t13326*t13318*t13319*9.0;
                double t13434 = t13430+t13431+t13423+t13432+t13424+t13433+t13425+t13426+t13427+t13428+t13429-C_k* \
                   a_1*t13322*t13323*t13318*t13319-C_k*a_2*t13324*t13318*t13319*t13328*2.0-C_k*a_4*t13330*t13325*t13318* \
                   t13319*4.0-C_k*a_8*t13334*t13326*t13318*t13319*8.0-C_k*a_10*t13324*t13326*t13318*t13327*t13319*1.0E1- \
                   C_k*a_3*t13322*t13324*t13318*t13319*t13329*3.0-C_k*a_5*t13322*t13331*t13325*t13318*t13319*5.0-C_k* \
                   a_6*t13332*t13324*t13325*t13318*t13319*6.0-C_k*a_9*t13322*t13326*t13335*t13318*t13319*9.0-C_k*a_11* \
                   t13322*t13324*t13326*t13318*t13319*t13418*1.1E1-C_k*a_7*t13322*t13324*t13333*t13325*t13318*t13319* \
                   7.0;
                v_rho_b_tau_b_[index] = t13404*t13413*t13434-t13403*t13364*(t13355+t13341*t13338*(t13354-c0p*t13302* \
                   t13304*2.0))+rho_b[index]*t13404*t13413*(C_k*a_1*t13318*t13417*t13419*(5.0/3.0)-a_1*t13323*t13414* \
                   t13415*t13416*(1.0E1/3.0)+a_2*t13323*t13414*t13415*t13416*(1.0E1/3.0)+a_1*t13322*t13414*t13415*t13416* \
                   t13328*(1.0E1/3.0)+a_10*t13414*t13415*t13326*t13335*t13416*1.5E2-a_2*t13322*t13414*t13415*t13416*t13328* \
                   (4.0E1/3.0)+a_2*t13324*t13414*t13415*t13416*t13329*1.0E1+a_3*t13322*t13414*t13415*t13416*t13328*1.0E1- \
                   a_3*t13324*t13414*t13415*t13416*t13329*3.0E1+a_4*t13331*t13414*t13325*t13415*t13416*(1.0E2/3.0)+a_4* \
                   t13324*t13414*t13415*t13416*t13329*2.0E1-a_5*t13331*t13414*t13325*t13415*t13416*(2.5E2/3.0)+a_6*t13331* \
                   t13414*t13325*t13415*t13416*5.0E1+a_8*t13414*t13415*t13326*t13335*t13416*1.2E2-a_9*t13414*t13415*t13326* \
                   t13335*t13416*2.7E2-C_k*a_1*t13322*t13323*t13318*t13419*(5.0/3.0)+C_k*a_2*t13322*t13323*t13318*t13419* \
                   (1.0E1/3.0)-C_k*a_2*t13324*t13318*t13328*t13419*(1.0E1/3.0)+C_k*a_3*t13324*t13318*t13328*t13419*5.0- \
                   C_k*a_4*t13330*t13325*t13318*t13419*(2.0E1/3.0)+C_k*a_5*t13330*t13325*t13318*t13419*(2.5E1/3.0)-C_k* \
                   a_8*t13334*t13326*t13318*t13419*(4.0E1/3.0)+C_k*a_9*t13334*t13326*t13318*t13419*1.5E1+C_k*a_10*t13322* \
                   t13326*t13335*t13318*t13419*(5.0E1/3.0)-C_k*a_10*t13324*t13326*t13318*t13327*t13419*(5.0E1/3.0)+C_k* \
                   a_11*t13324*t13326*t13318*t13327*t13419*(5.5E1/3.0)-C_k*a_3*t13322*t13324*t13318*t13329*t13419*5.0+ \
                   C_k*a_4*t13322*t13324*t13318*t13329*t13419*(2.0E1/3.0)-C_k*a_5*t13322*t13331*t13325*t13318*t13419* \
                   (2.5E1/3.0)+C_k*a_6*t13322*t13331*t13325*t13318*t13419*1.0E1-C_k*a_6*t13332*t13324*t13325*t13318*t13419* \
                   1.0E1+C_k*a_7*t13332*t13324*t13325*t13318*t13419*(3.5E1/3.0)-C_k*a_9*t13322*t13326*t13335*t13318*t13419* \
                   1.5E1-a_10*t13322*t13414*t13415*t13326*t13416*t13327*(1.0E3/3.0)+a_11*t13322*t13414*t13415*t13326* \
                   t13416*t13327*(5.5E2/3.0)+a_10*t13324*t13414*t13415*t13326*t13416*t13418*(5.5E2/3.0)-a_11*t13324*t13414* \
                   t13415*t13326*t13416*t13418*(1.21E3/3.0)+a_3*t13330*t13322*t13324*t13414*t13415*t13416*2.0E1-a_4*t13330* \
                   t13322*t13324*t13414*t13415*t13416*(1.6E2/3.0)+a_5*t13330*t13322*t13324*t13414*t13415*t13416*(1.0E2/ \
                   3.0)+a_5*t13322*t13332*t13414*t13325*t13415*t13416*5.0E1-a_6*t13322*t13332*t13414*t13325*t13415*t13416* \
                   1.2E2+a_6*t13324*t13333*t13414*t13325*t13415*t13416*7.0E1+a_7*t13322*t13332*t13414*t13325*t13415*t13416* \
                   7.0E1-a_7*t13324*t13333*t13414*t13325*t13415*t13416*(4.9E2/3.0)+a_8*t13324*t13333*t13414*t13325*t13415* \
                   t13416*(2.8E2/3.0)+a_9*t13322*t13414*t13415*t13326*t13416*t13327*1.5E2+a_11*1/pow(t13321,1.3E1)*t13322* \
                   t13324*t13414*t13415*t13326*t13416*2.2E2-C_k*a_11*t13322*t13324*t13326*t13318*t13418*t13419*(5.5E1/ \
                   3.0)-C_k*a_7*t13322*t13324*t13333*t13325*t13318*t13419*(3.5E1/3.0)+C_k*a_8*t13322*t13324*t13333*t13325* \
                   t13318*t13419*(4.0E1/3.0)+a_7*t13322*t13324*t13414*t13325*t13334*t13415*t13416*(2.8E2/3.0)-a_8*t13322* \
                   t13324*t13414*t13325*t13334*t13415*t13416*(6.4E2/3.0)+a_9*t13322*t13324*t13414*t13325*t13334*t13415* \
                   t13416*1.2E2)+rho_b[index]*t13403*t13364*(-t13398+t13341*t13338*(t13398-(t13353*1/(t13347*t13347)* \
                   (b2f*c*t13388*(1.0/3.0)+b4f*t13291*t13389*(2.0/3.0)+b1f*c*t13390*t13388*(1.0/6.0)+b3f*c*t13289*t13388* \
                   (1.0/2.0)))/t13350+a1f*c*c0f*t13351*t13388*(2.0/3.0)-a1p*c*c0p*t13302*t13388*(2.0/3.0))+a1p*c*c0p* \
                   t13302*t13388*(2.0/3.0))+rho_b[index]*t13422*t13364*(ccaa1*gamma_bb[index]*gcaa*t13373*t13384*(8.0/ \
                   3.0)+ccaa2*t13310*t13311*t13382*t13383*(1.6E1/3.0)+ccaa4*t13312*t13313*t13370*t13386*(3.2E1/3.0)-ccaa1* \
                   t13310*t13311*1/(t13372*t13372)*t13383*(8.0/3.0)-ccaa2*t13310*t13311*t13317*1/(t13381*t13381)*(gamma_bb[index]* \
                   gcaa*t13384*(1.6E1/3.0)+t13310*t13311*t13383*(1.6E1/3.0))-ccaa4*t13312*t13313*t13314*1/(t13369*t13369) \
                   *(gamma_bb[index]*gcaa*t13384*(3.2E1/3.0)+t13310*t13311*t13383*3.2E1+t13312*t13313*t13386*(3.2E1/3.0) \
                   +gamma_bb[index]*gcaa*t13310*t13311*t13385*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t13310*t13311*t13385* \
                   t13378*8.0-ccaa3*gamma_bb[index]*gcaa*t13310*t13311*t13316*1/(t13377*t13377)*(gamma_bb[index]*gcaa* \
                   t13384*8.0+t13310*t13311*t13383*1.6E1+gamma_bb[index]*gcaa*t13310*t13311*t13385*8.0))-gamma_bb[index]* \
                   t13403*t13422*t13306*t13360*t13308*(1.0/8.0)+gamma_bb[index]*t13403*t13422*t13308*t13318*t13356*(1.0/ \
                   8.0)-kp*rho_b[index]*1/(t13411*t13411)*t13404*t13434*(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]* \
                   rho_b[index])*t13405*t13406*t13409*(1.0/2.0)+gamma_bb[index]*mu_*t13405*t13406*t13407*1/pow(t13408,5.0/ \
                   3.0)*(1.0/3.0));
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t12155 = 1/pow(rho_a[index],1.0/3.0);
                double t12156 = c*t12155;
                double t12157 = sqrt(t12156);
                double t12158 = pow(t12156,3.0/2.0);
                double t12159 = c*c;
                double t12160 = 1/pow(rho_a[index],2.0/3.0);
                double t12161 = 1/c0p;
                double t12162 = b1p*t12157;
                double t12163 = b3p*t12158;
                double t12164 = b4p*t12160*t12159;
                double t12165 = b2p*c*t12155;
                double t12166 = t12162+t12163+t12164+t12165;
                double t12167 = 1/t12166;
                double t12168 = t12161*t12167*(1.0/2.0);
                double t12169 = t12168+1.0;
                double t12170 = log(t12169);
                double t12171 = a1p*c*t12155;
                double t12172 = t12171+1.0;
                double t12173 = 1/tau_a[index];
                double t12174 = tau_a[index]*2.0;
                double t12175 = 1/rho_a[index];
                double t12179 = gamma_aa[index]*t12175*(1.0/4.0);
                double t12176 = t12174-t12179;
                double t12177 = tau_a[index]-1.0/1.0E20;
                double t12178 = 1/(tau_a[index]*tau_a[index]);
                double t12180 = gamma_aa[index]*gamma_aa[index];
                double t12181 = gcaa*gcaa;
                double t12182 = t12180*t12180;
                double t12183 = t12181*t12181;
                double t12184 = 1/pow(rho_a[index],3.2E1/3.0);
                double t12185 = 1/pow(rho_a[index],8.0/3.0);
                double t12186 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t12187 = 1/pow(rho_a[index],1.6E1/3.0);
                double t12188 = C_k*C_k;
                double t12189 = pow(rho_a[index],1.0E1/3.0);
                double t12190 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t12191 = pow(rho_a[index],5.0/3.0);
                double t12192 = C_k*t12173*t12191;
                double t12193 = t12192+1.0;
                double t12194 = 1/(t12193*t12193);
                double t12195 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t12196 = t12192-1.0;
                double t12197 = t12196*t12196;
                double t12198 = t12197*t12197;
                double t12199 = t12198*t12198;
                double t12200 = 1/pow(t12193,1.1E1);
                double t12201 = 1/pow(t12193,1.2E1);
                double t12202 = 1/(t12193*t12193*t12193*t12193);
                double t12203 = 1/(t12193*t12193*t12193*t12193*t12193);
                double t12204 = 1/(t12193*t12193*t12193*t12193*t12193*t12193);
                double t12205 = 1/(t12193*t12193*t12193*t12193*t12193*t12193*t12193);
                double t12206 = 1/(t12193*t12193*t12193*t12193*t12193*t12193*t12193*t12193);
                double t12207 = 1/(t12193*t12193*t12193*t12193*t12193*t12193*t12193*t12193*t12193);
                double t12208 = 1/pow(t12193,1.0E1);
                double t12209 = 1/(t12193*t12193*t12193);
                v_tau_a_tau_a_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t12190*t12194*t12188*t12189* \
                   -2.0+a_2*t12190*t12194*t12188*t12189*2.0+(C_k*a_1*t12191*t12195*2.0)/t12193+a_1*t12190*t12209*t12196* \
                   t12188*t12189*2.0+a_10*t12190*t12208*t12188*t12189*t12199*9.0E1+a_2*t12202*t12190*t12188*t12197*t12189* \
                   6.0-a_2*t12190*t12209*t12196*t12188*t12189*8.0-a_3*t12202*t12190*t12188*t12197*t12189*1.8E1+a_3*t12190* \
                   t12209*t12196*t12188*t12189*6.0+a_4*t12202*t12190*t12188*t12197*t12189*1.2E1+a_4*t12204*t12190*t12188* \
                   t12189*t12198*2.0E1-a_5*t12204*t12190*t12188*t12189*t12198*5.0E1+a_6*t12204*t12190*t12188*t12189*t12198* \
                   3.0E1+a_8*t12190*t12208*t12188*t12189*t12199*7.2E1-a_9*t12190*t12208*t12188*t12189*t12199*1.62E2-C_k* \
                   a_1*t12191*t12194*t12195*t12196*2.0-C_k*a_2*t12191*t12209*t12195*t12197*4.0+C_k*a_2*t12191*t12194* \
                   t12195*t12196*4.0+C_k*a_3*t12191*t12209*t12195*t12197*6.0-C_k*a_4*t12203*t12191*t12195*t12198*8.0+ \
                   C_k*a_5*t12203*t12191*t12195*t12198*1.0E1-C_k*a_8*t12207*t12191*t12195*t12199*1.6E1+C_k*a_9*t12207* \
                   t12191*t12195*t12199*1.8E1-C_k*a_10*t12200*t12191*t12195*t12197*t12199*2.0E1+C_k*a_11*t12200*t12191* \
                   t12195*t12197*t12199*2.2E1+C_k*a_10*t12208*t12191*t12195*t12196*t12199*2.0E1-C_k*a_3*t12202*t12191* \
                   t12195*t12196*t12197*6.0+C_k*a_4*t12202*t12191*t12195*t12196*t12197*8.0-C_k*a_5*t12204*t12191*t12195* \
                   t12196*t12198*1.0E1+C_k*a_6*t12204*t12191*t12195*t12196*t12198*1.2E1-C_k*a_6*t12205*t12191*t12195* \
                   t12197*t12198*1.2E1+C_k*a_7*t12205*t12191*t12195*t12197*t12198*1.4E1-C_k*a_9*t12208*t12191*t12195* \
                   t12196*t12199*1.8E1-a_10*t12200*t12190*t12196*t12188*t12189*t12199*2.0E2+a_11*t12200*t12190*t12196* \
                   t12188*t12189*t12199*1.1E2+a_10*t12201*t12190*t12188*t12197*t12189*t12199*1.1E2-a_11*t12201*t12190* \
                   t12188*t12197*t12189*t12199*2.42E2+a_3*t12203*t12190*t12196*t12188*t12197*t12189*1.2E1-a_4*t12203* \
                   t12190*t12196*t12188*t12197*t12189*3.2E1+a_5*t12203*t12190*t12196*t12188*t12197*t12189*2.0E1+a_5*t12205* \
                   t12190*t12196*t12188*t12189*t12198*3.0E1-a_6*t12205*t12190*t12196*t12188*t12189*t12198*7.2E1+a_6*t12206* \
                   t12190*t12188*t12197*t12189*t12198*4.2E1+a_7*t12205*t12190*t12196*t12188*t12189*t12198*4.2E1-a_7*t12206* \
                   t12190*t12188*t12197*t12189*t12198*9.8E1+a_8*t12206*t12190*t12188*t12197*t12189*t12198*5.6E1+a_9*t12200* \
                   t12190*t12196*t12188*t12189*t12199*9.0E1+a_11*t12190*1/pow(t12193,1.3E1)*t12196*t12188*t12197*t12189* \
                   t12199*1.32E2-C_k*a_11*t12201*t12191*t12195*t12196*t12197*t12199*2.2E1-C_k*a_7*t12206*t12191*t12195* \
                   t12196*t12197*t12198*1.4E1+C_k*a_8*t12206*t12191*t12195*t12196*t12197*t12198*1.6E1+a_7*t12207*t12190* \
                   t12196*t12188*t12197*t12189*t12198*5.6E1-a_8*t12207*t12190*t12196*t12188*t12197*t12189*t12198*1.28E2+ \
                   a_9*t12207*t12190*t12196*t12188*t12197*t12189*t12198*7.2E1)-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0) \
                   *(c0f*log((1.0/2.0)/(c0f*(b1f*t12157+b3f*t12158+b2f*c*t12155+b4f*t12160*t12159))+1.0)*(a1f*c*t12155+ \
                   1.0)*2.0-c0p*t12170*t12172*2.0))/(two_13*2.0-2.0)+c0p*t12170*t12172*2.0)*( 0.0 - ( (t12177 > 0.0)  \
                   ? 1.0*(t12178*2.0-t12176*t12195) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t12180*t12181*t12187)/(gamma_aa[index]* \
                   gcaa*t12185*2.0+t12180*t12181*t12187+1.0)+(ccaa1*gamma_aa[index]*gcaa*t12185)/(gamma_aa[index]*gcaa* \
                   t12185+1.0)+(ccaa4*t12182*t12183*t12184)/(gamma_aa[index]*gcaa*t12185*4.0+t12180*t12181*t12187*6.0+ \
                   t12182*t12183*t12184+gamma_aa[index]*gcaa*t12180*t12181*t12186*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
                   t12180*t12181*t12186)/(gamma_aa[index]*gcaa*t12185*3.0+t12180*t12181*t12187*3.0+gamma_aa[index]*gcaa* \
                   t12180*t12181*t12186+1.0));
            } else if (rho_a[index] > cutoff_) {
                double t14563 = 1/pow(rho_a[index],1.0/3.0);
                double t14564 = c*t14563;
                double t14565 = sqrt(t14564);
                double t14566 = pow(t14564,3.0/2.0);
                double t14567 = c*c;
                double t14568 = 1/pow(rho_a[index],2.0/3.0);
                double t14569 = 1/c0p;
                double t14570 = b1p*t14565;
                double t14571 = b3p*t14566;
                double t14572 = b4p*t14567*t14568;
                double t14573 = b2p*c*t14563;
                double t14574 = t14570+t14571+t14572+t14573;
                double t14575 = 1/t14574;
                double t14576 = t14575*t14569*(1.0/2.0);
                double t14577 = t14576+1.0;
                double t14578 = log(t14577);
                double t14579 = a1p*c*t14563;
                double t14580 = t14579+1.0;
                double t14581 = 1/tau_a[index];
                double t14582 = tau_a[index]*2.0;
                double t14583 = 1/rho_a[index];
                double t14587 = gamma_aa[index]*t14583*(1.0/4.0);
                double t14584 = t14582-t14587;
                double t14585 = tau_a[index]-1.0/1.0E20;
                double t14586 = 1/(tau_a[index]*tau_a[index]);
                double t14588 = gamma_aa[index]*gamma_aa[index];
                double t14589 = gcaa*gcaa;
                double t14590 = t14588*t14588;
                double t14591 = t14589*t14589;
                double t14592 = 1/pow(rho_a[index],3.2E1/3.0);
                double t14593 = 1/pow(rho_a[index],8.0/3.0);
                double t14594 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t14595 = 1/pow(rho_a[index],1.6E1/3.0);
                double t14596 = C_k*C_k;
                double t14597 = pow(rho_a[index],1.0E1/3.0);
                double t14598 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t14599 = pow(rho_a[index],5.0/3.0);
                double t14600 = C_k*t14581*t14599;
                double t14601 = t14600+1.0;
                double t14602 = 1/(t14601*t14601);
                double t14603 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t14604 = t14600-1.0;
                double t14605 = t14604*t14604;
                double t14606 = t14605*t14605;
                double t14607 = t14606*t14606;
                double t14608 = 1/pow(t14601,1.1E1);
                double t14609 = 1/pow(t14601,1.2E1);
                double t14610 = 1/(t14601*t14601*t14601*t14601);
                double t14611 = 1/(t14601*t14601*t14601*t14601*t14601);
                double t14612 = 1/(t14601*t14601*t14601*t14601*t14601*t14601);
                double t14613 = 1/(t14601*t14601*t14601*t14601*t14601*t14601*t14601);
                double t14614 = 1/(t14601*t14601*t14601*t14601*t14601*t14601*t14601*t14601);
                double t14615 = 1/(t14601*t14601*t14601*t14601*t14601*t14601*t14601*t14601*t14601);
                double t14616 = 1/pow(t14601,1.0E1);
                double t14617 = 1/(t14601*t14601*t14601);
                v_tau_a_tau_a_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t14602*t14596*t14597*t14598* \
                   -2.0+a_2*t14602*t14596*t14597*t14598*2.0+(C_k*a_1*t14603*t14599*2.0)/t14601+a_1*t14604*t14617*t14596* \
                   t14597*t14598*2.0+a_10*t14607*t14616*t14596*t14597*t14598*9.0E1+a_2*t14610*t14605*t14596*t14597*t14598* \
                   6.0-a_2*t14604*t14617*t14596*t14597*t14598*8.0-a_3*t14610*t14605*t14596*t14597*t14598*1.8E1+a_3*t14604* \
                   t14617*t14596*t14597*t14598*6.0+a_4*t14610*t14605*t14596*t14597*t14598*1.2E1+a_4*t14612*t14606*t14596* \
                   t14597*t14598*2.0E1-a_5*t14612*t14606*t14596*t14597*t14598*5.0E1+a_6*t14612*t14606*t14596*t14597*t14598* \
                   3.0E1+a_8*t14607*t14616*t14596*t14597*t14598*7.2E1-a_9*t14607*t14616*t14596*t14597*t14598*1.62E2-C_k* \
                   a_1*t14602*t14603*t14604*t14599*2.0+C_k*a_2*t14602*t14603*t14604*t14599*4.0-C_k*a_2*t14603*t14605* \
                   t14617*t14599*4.0+C_k*a_3*t14603*t14605*t14617*t14599*6.0-C_k*a_4*t14611*t14603*t14606*t14599*8.0+ \
                   C_k*a_5*t14611*t14603*t14606*t14599*1.0E1-C_k*a_8*t14603*t14615*t14607*t14599*1.6E1+C_k*a_9*t14603* \
                   t14615*t14607*t14599*1.8E1+C_k*a_10*t14603*t14604*t14607*t14616*t14599*2.0E1-C_k*a_10*t14603*t14605* \
                   t14607*t14608*t14599*2.0E1+C_k*a_11*t14603*t14605*t14607*t14608*t14599*2.2E1-C_k*a_3*t14610*t14603* \
                   t14604*t14605*t14599*6.0+C_k*a_4*t14610*t14603*t14604*t14605*t14599*8.0-C_k*a_5*t14603*t14612*t14604* \
                   t14606*t14599*1.0E1+C_k*a_6*t14603*t14612*t14604*t14606*t14599*1.2E1-C_k*a_6*t14603*t14613*t14605* \
                   t14606*t14599*1.2E1+C_k*a_7*t14603*t14613*t14605*t14606*t14599*1.4E1-C_k*a_9*t14603*t14604*t14607* \
                   t14616*t14599*1.8E1-a_10*t14604*t14607*t14608*t14596*t14597*t14598*2.0E2+a_11*t14604*t14607*t14608* \
                   t14596*t14597*t14598*1.1E2+a_10*t14605*t14607*t14609*t14596*t14597*t14598*1.1E2-a_11*t14605*t14607* \
                   t14609*t14596*t14597*t14598*2.42E2+a_3*t14611*t14604*t14605*t14596*t14597*t14598*1.2E1-a_4*t14611* \
                   t14604*t14605*t14596*t14597*t14598*3.2E1+a_5*t14611*t14604*t14605*t14596*t14597*t14598*2.0E1+a_5*t14604* \
                   t14613*t14606*t14596*t14597*t14598*3.0E1-a_6*t14604*t14613*t14606*t14596*t14597*t14598*7.2E1+a_6*t14605* \
                   t14614*t14606*t14596*t14597*t14598*4.2E1+a_7*t14604*t14613*t14606*t14596*t14597*t14598*4.2E1-a_7*t14605* \
                   t14614*t14606*t14596*t14597*t14598*9.8E1+a_8*t14605*t14614*t14606*t14596*t14597*t14598*5.6E1+a_9*t14604* \
                   t14607*t14608*t14596*t14597*t14598*9.0E1+a_11*1/pow(t14601,1.3E1)*t14604*t14605*t14607*t14596*t14597* \
                   t14598*1.32E2-C_k*a_11*t14603*t14604*t14605*t14607*t14609*t14599*2.2E1-C_k*a_7*t14603*t14604*t14605* \
                   t14614*t14606*t14599*1.4E1+C_k*a_8*t14603*t14604*t14605*t14614*t14606*t14599*1.6E1+a_7*t14604*t14605* \
                   t14606*t14615*t14596*t14597*t14598*5.6E1-a_8*t14604*t14605*t14606*t14615*t14596*t14597*t14598*1.28E2+ \
                   a_9*t14604*t14605*t14606*t14615*t14596*t14597*t14598*7.2E1)-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0) \
                   *(c0f*log((1.0/2.0)/(c0f*(b1f*t14565+b3f*t14566+b2f*c*t14563+b4f*t14567*t14568))+1.0)*(a1f*c*t14563+ \
                   1.0)*2.0-c0p*t14580*t14578*2.0))/(two_13*2.0-2.0)+c0p*t14580*t14578*2.0)*( 0.0 - ( (t14585 > 0.0)  \
                   ? 1.0*(t14586*2.0-t14603*t14584) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t14595*t14588*t14589)/(gamma_aa[index]* \
                   gcaa*t14593*2.0+t14595*t14588*t14589+1.0)+(ccaa1*gamma_aa[index]*gcaa*t14593)/(gamma_aa[index]*gcaa* \
                   t14593+1.0)+(ccaa4*t14590*t14591*t14592)/(gamma_aa[index]*gcaa*t14593*4.0+t14590*t14591*t14592+t14595* \
                   t14588*t14589*6.0+gamma_aa[index]*gcaa*t14594*t14588*t14589*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t14594* \
                   t14588*t14589)/(gamma_aa[index]*gcaa*t14593*3.0+t14595*t14588*t14589*3.0+gamma_aa[index]*gcaa*t14594* \
                   t14588*t14589+1.0));
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t12212 = 1/pow(rho_b[index],1.0/3.0);
                double t12213 = c*t12212;
                double t12214 = sqrt(t12213);
                double t12215 = pow(t12213,3.0/2.0);
                double t12216 = c*c;
                double t12217 = 1/pow(rho_b[index],2.0/3.0);
                double t12218 = 1/c0p;
                double t12219 = b1p*t12214;
                double t12220 = b3p*t12215;
                double t12221 = b4p*t12216*t12217;
                double t12222 = b2p*c*t12212;
                double t12223 = t12220+t12221+t12222+t12219;
                double t12224 = 1/t12223;
                double t12225 = t12224*t12218*(1.0/2.0);
                double t12226 = t12225+1.0;
                double t12227 = log(t12226);
                double t12228 = a1p*c*t12212;
                double t12229 = t12228+1.0;
                double t12230 = 1/tau_b[index];
                double t12231 = tau_b[index]*2.0;
                double t12232 = 1/rho_b[index];
                double t12236 = gamma_bb[index]*t12232*(1.0/4.0);
                double t12233 = t12231-t12236;
                double t12234 = tau_b[index]-1.0/1.0E20;
                double t12235 = 1/(tau_b[index]*tau_b[index]);
                double t12237 = gamma_bb[index]*gamma_bb[index];
                double t12238 = gcaa*gcaa;
                double t12239 = t12237*t12237;
                double t12240 = t12238*t12238;
                double t12241 = 1/pow(rho_b[index],3.2E1/3.0);
                double t12242 = 1/pow(rho_b[index],8.0/3.0);
                double t12243 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t12244 = 1/pow(rho_b[index],1.6E1/3.0);
                double t12245 = C_k*C_k;
                double t12246 = pow(rho_b[index],1.0E1/3.0);
                double t12247 = 1/(tau_b[index]*tau_b[index]*tau_b[index]*tau_b[index]);
                double t12248 = pow(rho_b[index],5.0/3.0);
                double t12249 = C_k*t12230*t12248;
                double t12250 = t12249+1.0;
                double t12251 = 1/(t12250*t12250);
                double t12252 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t12253 = t12249-1.0;
                double t12254 = t12253*t12253;
                double t12255 = t12254*t12254;
                double t12256 = t12255*t12255;
                double t12257 = 1/pow(t12250,1.1E1);
                double t12258 = 1/pow(t12250,1.2E1);
                double t12259 = 1/(t12250*t12250*t12250*t12250);
                double t12260 = 1/(t12250*t12250*t12250*t12250*t12250);
                double t12261 = 1/(t12250*t12250*t12250*t12250*t12250*t12250);
                double t12262 = 1/(t12250*t12250*t12250*t12250*t12250*t12250*t12250);
                double t12263 = 1/(t12250*t12250*t12250*t12250*t12250*t12250*t12250*t12250);
                double t12264 = 1/(t12250*t12250*t12250*t12250*t12250*t12250*t12250*t12250*t12250);
                double t12265 = 1/pow(t12250,1.0E1);
                double t12266 = 1/(t12250*t12250*t12250);
                v_tau_b_tau_b_[index] = -rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]* \
                   rho_b[index])*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t12251*t12245*t12246*t12247* \
                   -2.0+a_2*t12251*t12245*t12246*t12247*2.0+(C_k*a_1*t12252*t12248*2.0)/t12250+a_1*t12253*t12245*t12246* \
                   t12247*t12266*2.0+a_10*t12245*t12246*t12247*t12256*t12265*9.0E1-a_2*t12253*t12245*t12246*t12247*t12266* \
                   8.0+a_2*t12245*t12254*t12246*t12247*t12259*6.0+a_3*t12253*t12245*t12246*t12247*t12266*6.0-a_3*t12245* \
                   t12254*t12246*t12247*t12259*1.8E1+a_4*t12261*t12245*t12246*t12255*t12247*2.0E1+a_4*t12245*t12254*t12246* \
                   t12247*t12259*1.2E1-a_5*t12261*t12245*t12246*t12255*t12247*5.0E1+a_6*t12261*t12245*t12246*t12255*t12247* \
                   3.0E1+a_8*t12245*t12246*t12247*t12256*t12265*7.2E1-a_9*t12245*t12246*t12247*t12256*t12265*1.62E2-C_k* \
                   a_1*t12251*t12252*t12253*t12248*2.0+C_k*a_2*t12251*t12252*t12253*t12248*4.0-C_k*a_2*t12252*t12254* \
                   t12248*t12266*4.0+C_k*a_3*t12252*t12254*t12248*t12266*6.0-C_k*a_4*t12260*t12252*t12255*t12248*8.0+ \
                   C_k*a_5*t12260*t12252*t12255*t12248*1.0E1-C_k*a_8*t12252*t12264*t12256*t12248*1.6E1+C_k*a_9*t12252* \
                   t12264*t12256*t12248*1.8E1+C_k*a_10*t12252*t12253*t12256*t12265*t12248*2.0E1-C_k*a_10*t12252*t12254* \
                   t12256*t12248*t12257*2.0E1+C_k*a_11*t12252*t12254*t12256*t12248*t12257*2.2E1-C_k*a_3*t12252*t12253* \
                   t12254*t12248*t12259*6.0+C_k*a_4*t12252*t12253*t12254*t12248*t12259*8.0-C_k*a_5*t12252*t12261*t12253* \
                   t12255*t12248*1.0E1+C_k*a_6*t12252*t12261*t12253*t12255*t12248*1.2E1-C_k*a_6*t12252*t12262*t12254* \
                   t12255*t12248*1.2E1+C_k*a_7*t12252*t12262*t12254*t12255*t12248*1.4E1-C_k*a_9*t12252*t12253*t12256* \
                   t12265*t12248*1.8E1-a_10*t12253*t12245*t12246*t12247*t12256*t12257*2.0E2+a_11*t12253*t12245*t12246* \
                   t12247*t12256*t12257*1.1E2+a_10*t12245*t12254*t12246*t12247*t12256*t12258*1.1E2-a_11*t12245*t12254* \
                   t12246*t12247*t12256*t12258*2.42E2+a_3*t12260*t12253*t12245*t12254*t12246*t12247*1.2E1-a_4*t12260* \
                   t12253*t12245*t12254*t12246*t12247*3.2E1+a_5*t12260*t12253*t12245*t12254*t12246*t12247*2.0E1+a_5*t12253* \
                   t12262*t12245*t12246*t12255*t12247*3.0E1-a_6*t12253*t12262*t12245*t12246*t12255*t12247*7.2E1+a_6*t12245* \
                   t12254*t12263*t12246*t12255*t12247*4.2E1+a_7*t12253*t12262*t12245*t12246*t12255*t12247*4.2E1-a_7*t12245* \
                   t12254*t12263*t12246*t12255*t12247*9.8E1+a_8*t12245*t12254*t12263*t12246*t12255*t12247*5.6E1+a_9*t12253* \
                   t12245*t12246*t12247*t12256*t12257*9.0E1+a_11*1/pow(t12250,1.3E1)*t12253*t12245*t12254*t12246*t12247* \
                   t12256*1.32E2-C_k*a_11*t12252*t12253*t12254*t12256*t12248*t12258*2.2E1-C_k*a_7*t12252*t12253*t12254* \
                   t12263*t12255*t12248*1.4E1+C_k*a_8*t12252*t12253*t12254*t12263*t12255*t12248*1.6E1+a_7*t12253*t12245* \
                   t12254*t12246*t12255*t12264*t12247*5.6E1-a_8*t12253*t12245*t12254*t12246*t12255*t12264*t12247*1.28E2+ \
                   a_9*t12253*t12245*t12254*t12246*t12255*t12264*t12247*7.2E1)-rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0) \
                   *(c0f*log((1.0/2.0)/(c0f*(b1f*t12214+b3f*t12215+b2f*c*t12212+b4f*t12216*t12217))+1.0)*(a1f*c*t12212+ \
                   1.0)*2.0-c0p*t12227*t12229*2.0))/(two_13*2.0-2.0)+c0p*t12227*t12229*2.0)*( 0.0 - ( (t12234 > 0.0)  \
                   ? 1.0*(t12235*2.0-t12233*t12252) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t12244*t12237*t12238)/(gamma_bb[index]* \
                   gcaa*t12242*2.0+t12244*t12237*t12238+1.0)+(ccaa1*gamma_bb[index]*gcaa*t12242)/(gamma_bb[index]*gcaa* \
                   t12242+1.0)+(ccaa4*t12240*t12241*t12239)/(gamma_bb[index]*gcaa*t12242*4.0+t12240*t12241*t12239+t12244* \
                   t12237*t12238*6.0+gamma_bb[index]*gcaa*t12243*t12237*t12238*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t12243* \
                   t12237*t12238)/(gamma_bb[index]*gcaa*t12242*3.0+t12244*t12237*t12238*3.0+gamma_bb[index]*gcaa*t12243* \
                   t12237*t12238+1.0));
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t13438 = 1/pow(rho_b[index],1.0/3.0);
                double t13439 = c*t13438;
                double t13440 = sqrt(t13439);
                double t13441 = pow(t13439,3.0/2.0);
                double t13442 = c*c;
                double t13443 = 1/pow(rho_b[index],2.0/3.0);
                double t13444 = 1/c0p;
                double t13445 = b1p*t13440;
                double t13446 = b3p*t13441;
                double t13447 = b4p*t13442*t13443;
                double t13448 = b2p*c*t13438;
                double t13449 = t13445+t13446+t13447+t13448;
                double t13450 = 1/t13449;
                double t13451 = t13450*t13444*(1.0/2.0);
                double t13452 = t13451+1.0;
                double t13453 = log(t13452);
                double t13454 = a1p*c*t13438;
                double t13455 = t13454+1.0;
                double t13456 = 1/tau_b[index];
                double t13457 = tau_b[index]*2.0;
                double t13458 = 1/rho_b[index];
                double t13462 = gamma_bb[index]*t13458*(1.0/4.0);
                double t13459 = -t13462+t13457;
                double t13460 = tau_b[index]-1.0/1.0E20;
                double t13461 = 1/(tau_b[index]*tau_b[index]);
                double t13463 = gamma_bb[index]*gamma_bb[index];
                double t13464 = gcaa*gcaa;
                double t13465 = t13463*t13463;
                double t13466 = t13464*t13464;
                double t13467 = 1/pow(rho_b[index],3.2E1/3.0);
                double t13468 = 1/pow(rho_b[index],8.0/3.0);
                double t13469 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t13470 = 1/pow(rho_b[index],1.6E1/3.0);
                double t13471 = C_k*C_k;
                double t13472 = pow(rho_b[index],1.0E1/3.0);
                double t13473 = 1/(tau_b[index]*tau_b[index]*tau_b[index]*tau_b[index]);
                double t13474 = pow(rho_b[index],5.0/3.0);
                double t13475 = C_k*t13456*t13474;
                double t13476 = t13475+1.0;
                double t13477 = 1/(t13476*t13476);
                double t13478 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t13479 = t13475-1.0;
                double t13480 = t13479*t13479;
                double t13481 = t13480*t13480;
                double t13482 = t13481*t13481;
                double t13483 = 1/pow(t13476,1.1E1);
                double t13484 = 1/pow(t13476,1.2E1);
                double t13485 = 1/(t13476*t13476*t13476*t13476);
                double t13486 = 1/(t13476*t13476*t13476*t13476*t13476);
                double t13487 = 1/(t13476*t13476*t13476*t13476*t13476*t13476);
                double t13488 = 1/(t13476*t13476*t13476*t13476*t13476*t13476*t13476);
                double t13489 = 1/(t13476*t13476*t13476*t13476*t13476*t13476*t13476*t13476);
                double t13490 = 1/(t13476*t13476*t13476*t13476*t13476*t13476*t13476*t13476*t13476);
                double t13491 = 1/pow(t13476,1.0E1);
                double t13492 = 1/(t13476*t13476*t13476);
                v_tau_b_tau_b_[index] = -rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]* \
                   rho_b[index])*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t13471*t13472*t13473*t13477* \
                   -2.0+a_2*t13471*t13472*t13473*t13477*2.0+(C_k*a_1*t13474*t13478*2.0)/t13476+a_1*t13471*t13472*t13473* \
                   t13492*t13479*2.0+a_10*t13471*t13472*t13473*t13482*t13491*9.0E1+a_2*t13471*t13480*t13472*t13473*t13485* \
                   6.0-a_2*t13471*t13472*t13473*t13492*t13479*8.0-a_3*t13471*t13480*t13472*t13473*t13485*1.8E1+a_3*t13471* \
                   t13472*t13473*t13492*t13479*6.0+a_4*t13471*t13480*t13472*t13473*t13485*1.2E1+a_4*t13471*t13472*t13481* \
                   t13473*t13487*2.0E1-a_5*t13471*t13472*t13481*t13473*t13487*5.0E1+a_6*t13471*t13472*t13481*t13473*t13487* \
                   3.0E1+a_8*t13471*t13472*t13473*t13482*t13491*7.2E1-a_9*t13471*t13472*t13473*t13482*t13491*1.62E2-C_k* \
                   a_1*t13474*t13477*t13478*t13479*2.0-C_k*a_2*t13480*t13474*t13492*t13478*4.0+C_k*a_2*t13474*t13477* \
                   t13478*t13479*4.0+C_k*a_3*t13480*t13474*t13492*t13478*6.0-C_k*a_4*t13481*t13474*t13486*t13478*8.0+ \
                   C_k*a_5*t13481*t13474*t13486*t13478*1.0E1-C_k*a_8*t13490*t13482*t13474*t13478*1.6E1+C_k*a_9*t13490* \
                   t13482*t13474*t13478*1.8E1-C_k*a_10*t13480*t13482*t13474*t13483*t13478*2.0E1+C_k*a_11*t13480*t13482* \
                   t13474*t13483*t13478*2.2E1+C_k*a_10*t13482*t13491*t13474*t13478*t13479*2.0E1-C_k*a_3*t13480*t13474* \
                   t13485*t13478*t13479*6.0+C_k*a_4*t13480*t13474*t13485*t13478*t13479*8.0-C_k*a_5*t13481*t13474*t13478* \
                   t13487*t13479*1.0E1-C_k*a_6*t13480*t13481*t13474*t13478*t13488*1.2E1+C_k*a_6*t13481*t13474*t13478* \
                   t13487*t13479*1.2E1+C_k*a_7*t13480*t13481*t13474*t13478*t13488*1.4E1-C_k*a_9*t13482*t13491*t13474* \
                   t13478*t13479*1.8E1+a_10*t13471*t13480*t13472*t13473*t13482*t13484*1.1E2-a_11*t13471*t13480*t13472* \
                   t13473*t13482*t13484*2.42E2-a_10*t13471*t13472*t13473*t13482*t13483*t13479*2.0E2+a_11*t13471*t13472* \
                   t13473*t13482*t13483*t13479*1.1E2+a_3*t13471*t13480*t13472*t13473*t13486*t13479*1.2E1-a_4*t13471*t13480* \
                   t13472*t13473*t13486*t13479*3.2E1+a_5*t13471*t13480*t13472*t13473*t13486*t13479*2.0E1+a_5*t13471*t13472* \
                   t13481*t13473*t13479*t13488*3.0E1+a_6*t13471*t13480*t13472*t13481*t13473*t13489*4.2E1-a_6*t13471*t13472* \
                   t13481*t13473*t13479*t13488*7.2E1-a_7*t13471*t13480*t13472*t13481*t13473*t13489*9.8E1+a_7*t13471*t13472* \
                   t13481*t13473*t13479*t13488*4.2E1+a_8*t13471*t13480*t13472*t13481*t13473*t13489*5.6E1+a_9*t13471*t13472* \
                   t13473*t13482*t13483*t13479*9.0E1+a_11*t13471*t13480*t13472*t13473*t13482*1/pow(t13476,1.3E1)*t13479* \
                   1.32E2-C_k*a_11*t13480*t13482*t13474*t13484*t13478*t13479*2.2E1-C_k*a_7*t13480*t13481*t13474*t13478* \
                   t13479*t13489*1.4E1+C_k*a_8*t13480*t13481*t13474*t13478*t13479*t13489*1.6E1+a_7*t13471*t13480*t13472* \
                   t13481*t13490*t13473*t13479*5.6E1-a_8*t13471*t13480*t13472*t13481*t13490*t13473*t13479*1.28E2+a_9* \
                   t13471*t13480*t13472*t13481*t13490*t13473*t13479*7.2E1)-rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)* \
                   (c0f*log((1.0/2.0)/(c0f*(b1f*t13440+b3f*t13441+b2f*c*t13438+b4f*t13442*t13443))+1.0)*(a1f*c*t13438+ \
                   1.0)*2.0-c0p*t13453*t13455*2.0))/(two_13*2.0-2.0)+c0p*t13453*t13455*2.0)*( 0.0 - ( (t13460 > 0.0)  \
                   ? 1.0*(t13461*2.0-t13459*t13478) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t13470*t13463*t13464)/(gamma_bb[index]* \
                   gcaa*t13468*2.0+t13470*t13463*t13464+1.0)+(ccaa1*gamma_bb[index]*gcaa*t13468)/(gamma_bb[index]*gcaa* \
                   t13468+1.0)+(ccaa4*t13465*t13466*t13467)/(gamma_bb[index]*gcaa*t13468*4.0+t13470*t13463*t13464*6.0+ \
                   t13465*t13466*t13467+gamma_bb[index]*gcaa*t13463*t13464*t13469*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa* \
                   t13463*t13464*t13469)/(gamma_bb[index]*gcaa*t13468*3.0+t13470*t13463*t13464*3.0+gamma_bb[index]*gcaa* \
                   t13463*t13464*t13469+1.0));
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t12268 = 1/pow(rho_a[index],1.0/3.0);
                    double t12269 = c*t12268;
                    double t12270 = sqrt(t12269);
                    double t12271 = pow(t12269,3.0/2.0);
                    double t12272 = c*c;
                    double t12273 = 1/pow(rho_a[index],2.0/3.0);
                    double t12274 = 1/c0p;
                    double t12275 = b1p*t12270;
                    double t12276 = b3p*t12271;
                    double t12277 = b4p*t12272*t12273;
                    double t12278 = b2p*c*t12268;
                    double t12279 = t12275+t12276+t12277+t12278;
                    double t12280 = 1/t12279;
                    double t12281 = t12280*t12274*(1.0/2.0);
                    double t12282 = t12281+1.0;
                    double t12283 = log(t12282);
                    double t12284 = a1p*c*t12268;
                    double t12285 = t12284+1.0;
                    double t12286 = gamma_aa[index]*gamma_aa[index];
                    double t12287 = gcaa*gcaa;
                    double t12288 = t12286*t12286;
                    double t12289 = t12287*t12287;
                    double t12290 = 1/pow(rho_a[index],3.2E1/3.0);
                    double t12291 = 1/pow(rho_a[index],8.0/3.0);
                    double t12292 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t12293 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t12294 = tau_a[index]-1.0/1.0E20;
                    double t12295 = pow(2.0,1.0/3.0);
                    double t12296 = t12295*2.0;
                    double t12297 = t12296-2.0;
                    double t12298 = two_13*2.0;
                    double t12299 = t12298-2.0;
                    double t12300 = 1/t12299;
                    double t12301 = 1/c0f;
                    double t12302 = b1f*t12270;
                    double t12303 = b3f*t12271;
                    double t12304 = b4f*t12272*t12273;
                    double t12305 = b2f*c*t12268;
                    double t12306 = t12302+t12303+t12304+t12305;
                    double t12307 = 1/t12306;
                    double t12308 = t12301*t12307*(1.0/2.0);
                    double t12309 = t12308+1.0;
                    double t12310 = log(t12309);
                    double t12311 = a1f*c*t12268;
                    double t12312 = t12311+1.0;
                    double t12313 = c0f*t12310*t12312*2.0;
                    double t12314 = c0p*t12283*t12285*2.0;
                    double t12315 = gamma_aa[index]*gcaa*t12291*4.0;
                    double t12316 = gamma_aa[index]*gcaa*t12292*t12286*t12287*4.0;
                    double t12317 = t12293*t12286*t12287*6.0;
                    double t12318 = t12290*t12288*t12289;
                    double t12319 = t12315+t12316+t12317+t12318+1.0;
                    double t12320 = 1/t12319;
                    double t12321 = ccaa4*t12320*t12290*t12288*t12289;
                    double t12322 = gamma_aa[index]*gcaa*t12291;
                    double t12323 = t12322+1.0;
                    double t12324 = 1/t12323;
                    double t12325 = ccaa1*gamma_aa[index]*gcaa*t12324*t12291;
                    double t12326 = gamma_aa[index]*gcaa*t12291*3.0;
                    double t12327 = gamma_aa[index]*gcaa*t12292*t12286*t12287;
                    double t12328 = t12293*t12286*t12287*3.0;
                    double t12329 = t12326+t12327+t12328+1.0;
                    double t12330 = 1/t12329;
                    double t12331 = ccaa3*gamma_aa[index]*gcaa*t12330*t12292*t12286*t12287;
                    double t12332 = gamma_aa[index]*gcaa*t12291*2.0;
                    double t12333 = t12293*t12286*t12287;
                    double t12334 = t12332+t12333+1.0;
                    double t12335 = 1/t12334;
                    double t12336 = ccaa2*t12335*t12293*t12286*t12287;
                    double t12337 = ccaa0+t12321+t12331+t12325+t12336;
                    double t12338 = t12313-t12314;
                    double t12339 = t12300*t12338*t12297;
                    double t12340 = t12314+t12339;
                    double t12341 = ( (t12294 > 0.0) ?  1.0 : 0.0 ) ;
                    double t12342 = 1/tau_a[index];
                    double t12343 = 1/(tau_a[index]*tau_a[index]);
                    double t12344 = 0.0 ;
                    double t12345 = tau_a[index]*2.0;
                    double t12346 = 1/rho_a[index];
                    double t12347 = t12345-gamma_aa[index]*t12346*(1.0/4.0);
                    double t12348 = 1/(k*k);
                    double t12349 = rho_a[index]*2.0;
                    double t12350 = 1/pow(t12349,2.0/3.0);
                    double t12351 = pow(rho_a[index],5.0/3.0);
                    double t12352 = C_k*t12342*t12351;
                    double t12353 = t12352+1.0;
                    double t12354 = t12352-1.0;
                    double t12355 = 1/(t12353*t12353);
                    double t12356 = t12354*t12354;
                    double t12357 = t12356*t12356;
                    double t12358 = t12357*t12357;
                    double t12359 = 1/pow(t12353,1.1E1);
                    double t12360 = 1/(t12353*t12353*t12353);
                    double t12361 = 1/(t12353*t12353*t12353*t12353);
                    double t12362 = 1/(t12353*t12353*t12353*t12353*t12353);
                    double t12363 = 1/(t12353*t12353*t12353*t12353*t12353*t12353);
                    double t12364 = 1/(t12353*t12353*t12353*t12353*t12353*t12353*t12353);
                    double t12365 = 1/(t12353*t12353*t12353*t12353*t12353*t12353*t12353*t12353);
                    double t12366 = 1/(t12353*t12353*t12353*t12353*t12353*t12353*t12353*t12353*t12353);
                    double t12367 = 1/pow(t12353,1.0E1);
                    v_gamma_aa_tau_a_[index] = t12340*t12341*t12343*t12337*(-1.0/8.0)+t12342*t12344*t12337*(t12314+t12300* \
                       t12297*(t12313-c0p*t12283*t12285*2.0))*(1.0/8.0)-rho_a[index]*t12340*(t12344*(t12342*t12347*(1.0/2.0) \
                       -1.0)+t12341*(t12342-t12343*t12347*(1.0/2.0)))*(ccaa1*gcaa*t12324*t12291+ccaa2*gamma_aa[index]*t12335* \
                       t12293*t12287*2.0-ccaa1*gamma_aa[index]*1/(t12323*t12323)*t12293*t12287-ccaa2*1/(t12334*t12334)*t12293* \
                       t12286*t12287*(gcaa*t12291*2.0+gamma_aa[index]*t12293*t12287*2.0)-ccaa4*t12290*1/(t12319*t12319)*t12288* \
                       t12289*(gcaa*t12291*4.0+gamma_aa[index]*t12293*t12287*1.2E1+gamma_aa[index]*t12290*t12286*t12289*4.0+ \
                       gcaa*t12292*t12286*t12287*1.2E1)+ccaa4*gamma_aa[index]*t12320*t12290*t12286*t12289*4.0+ccaa3*gcaa* \
                       t12330*t12292*t12286*t12287*3.0-ccaa3*gamma_aa[index]*gcaa*t12292*1/(t12329*t12329)*t12286*t12287* \
                       (gcaa*t12291*3.0+gamma_aa[index]*t12293*t12287*6.0+gcaa*t12292*t12286*t12287*3.0))+mu_*t12350*t12346* \
                       t12348*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t12350*t12348*(1.0/4.0))/kp+1.0,2.0) \
                       *(X-1.0)*((C_k*a_1*t12351*t12343)/t12353-C_k*a_1*t12351*t12343*t12354*t12355-C_k*a_2*t12351*t12360* \
                       t12343*t12356*2.0+C_k*a_2*t12351*t12343*t12354*t12355*2.0+C_k*a_3*t12351*t12360*t12343*t12356*3.0- \
                       C_k*a_4*t12351*t12343*t12362*t12357*4.0+C_k*a_5*t12351*t12343*t12362*t12357*5.0-C_k*a_8*t12351*t12343* \
                       t12366*t12358*8.0+C_k*a_9*t12351*t12343*t12366*t12358*9.0+C_k*a_10*t12351*t12343*t12354*t12358*t12367* \
                       1.0E1-C_k*a_10*t12351*t12343*t12356*t12358*t12359*1.0E1+C_k*a_11*t12351*t12343*t12356*t12358*t12359* \
                       1.1E1-C_k*a_3*t12351*t12343*t12361*t12354*t12356*3.0+C_k*a_4*t12351*t12343*t12361*t12354*t12356*4.0- \
                       C_k*a_5*t12351*t12343*t12354*t12363*t12357*5.0+C_k*a_6*t12351*t12343*t12354*t12363*t12357*6.0-C_k* \
                       a_6*t12351*t12343*t12364*t12356*t12357*6.0+C_k*a_7*t12351*t12343*t12364*t12356*t12357*7.0-C_k*a_9* \
                       t12351*t12343*t12354*t12358*t12367*9.0-C_k*a_11*t12351*t12343*1/pow(t12353,1.2E1)*t12354*t12356*t12358* \
                       1.1E1-C_k*a_7*t12351*t12343*t12354*t12356*t12365*t12357*7.0+C_k*a_8*t12351*t12343*t12354*t12356*t12365* \
                       t12357*8.0)*(1.0/4.0);
                } else if (rho_a[index] > cutoff_) {
                    double t14621 = 1/pow(rho_a[index],1.0/3.0);
                    double t14622 = c*t14621;
                    double t14623 = sqrt(t14622);
                    double t14624 = pow(t14622,3.0/2.0);
                    double t14625 = c*c;
                    double t14626 = 1/pow(rho_a[index],2.0/3.0);
                    double t14627 = 1/c0p;
                    double t14628 = b1p*t14623;
                    double t14629 = b3p*t14624;
                    double t14630 = b4p*t14625*t14626;
                    double t14631 = b2p*c*t14621;
                    double t14632 = t14630+t14631+t14628+t14629;
                    double t14633 = 1/t14632;
                    double t14634 = t14633*t14627*(1.0/2.0);
                    double t14635 = t14634+1.0;
                    double t14636 = log(t14635);
                    double t14637 = a1p*c*t14621;
                    double t14638 = t14637+1.0;
                    double t14639 = gamma_aa[index]*gamma_aa[index];
                    double t14640 = gcaa*gcaa;
                    double t14641 = t14639*t14639;
                    double t14642 = t14640*t14640;
                    double t14643 = 1/pow(rho_a[index],3.2E1/3.0);
                    double t14644 = 1/pow(rho_a[index],8.0/3.0);
                    double t14645 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t14646 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t14647 = tau_a[index]-1.0/1.0E20;
                    double t14648 = pow(2.0,1.0/3.0);
                    double t14649 = t14648*2.0;
                    double t14650 = t14649-2.0;
                    double t14651 = two_13*2.0;
                    double t14652 = t14651-2.0;
                    double t14653 = 1/t14652;
                    double t14654 = 1/c0f;
                    double t14655 = b1f*t14623;
                    double t14656 = b3f*t14624;
                    double t14657 = b4f*t14625*t14626;
                    double t14658 = b2f*c*t14621;
                    double t14659 = t14655+t14656+t14657+t14658;
                    double t14660 = 1/t14659;
                    double t14661 = t14660*t14654*(1.0/2.0);
                    double t14662 = t14661+1.0;
                    double t14663 = log(t14662);
                    double t14664 = a1f*c*t14621;
                    double t14665 = t14664+1.0;
                    double t14666 = c0f*t14663*t14665*2.0;
                    double t14667 = c0p*t14636*t14638*2.0;
                    double t14668 = gamma_aa[index]*gcaa*t14644*4.0;
                    double t14669 = gamma_aa[index]*gcaa*t14640*t14645*t14639*4.0;
                    double t14670 = t14640*t14646*t14639*6.0;
                    double t14671 = t14641*t14642*t14643;
                    double t14672 = t14670+t14671+t14668+t14669+1.0;
                    double t14673 = 1/t14672;
                    double t14674 = ccaa4*t14641*t14642*t14643*t14673;
                    double t14675 = gamma_aa[index]*gcaa*t14644;
                    double t14676 = t14675+1.0;
                    double t14677 = 1/t14676;
                    double t14678 = ccaa1*gamma_aa[index]*gcaa*t14644*t14677;
                    double t14679 = gamma_aa[index]*gcaa*t14644*3.0;
                    double t14680 = gamma_aa[index]*gcaa*t14640*t14645*t14639;
                    double t14681 = t14640*t14646*t14639*3.0;
                    double t14682 = t14680+t14681+t14679+1.0;
                    double t14683 = 1/t14682;
                    double t14684 = ccaa3*gamma_aa[index]*gcaa*t14640*t14645*t14683*t14639;
                    double t14685 = gamma_aa[index]*gcaa*t14644*2.0;
                    double t14686 = t14640*t14646*t14639;
                    double t14687 = t14685+t14686+1.0;
                    double t14688 = 1/t14687;
                    double t14689 = ccaa2*t14640*t14646*t14639*t14688;
                    double t14690 = ccaa0+t14674+t14684+t14678+t14689;
                    double t14691 = t14666-t14667;
                    double t14692 = t14650*t14653*t14691;
                    double t14693 = t14692+t14667;
                    double t14694 = ( (t14647 > 0.0) ?  1.0 : 0.0 ) ;
                    double t14695 = 1/tau_a[index];
                    double t14696 = 1/(tau_a[index]*tau_a[index]);
                    double t14697 = 0.0 ;
                    double t14698 = tau_a[index]*2.0;
                    double t14699 = 1/rho_a[index];
                    double t14700 = t14698-gamma_aa[index]*t14699*(1.0/4.0);
                    double t14701 = 1/(k*k);
                    double t14702 = rho_a[index]*2.0;
                    double t14703 = 1/pow(t14702,2.0/3.0);
                    double t14704 = pow(rho_a[index],5.0/3.0);
                    double t14705 = C_k*t14704*t14695;
                    double t14706 = t14705+1.0;
                    double t14707 = t14705-1.0;
                    double t14708 = 1/(t14706*t14706);
                    double t14709 = t14707*t14707;
                    double t14710 = t14709*t14709;
                    double t14711 = t14710*t14710;
                    double t14712 = 1/pow(t14706,1.1E1);
                    double t14713 = 1/(t14706*t14706*t14706);
                    double t14714 = 1/(t14706*t14706*t14706*t14706);
                    double t14715 = 1/(t14706*t14706*t14706*t14706*t14706);
                    double t14716 = 1/(t14706*t14706*t14706*t14706*t14706*t14706);
                    double t14717 = 1/(t14706*t14706*t14706*t14706*t14706*t14706*t14706);
                    double t14718 = 1/(t14706*t14706*t14706*t14706*t14706*t14706*t14706*t14706);
                    double t14719 = 1/(t14706*t14706*t14706*t14706*t14706*t14706*t14706*t14706*t14706);
                    double t14720 = 1/pow(t14706,1.0E1);
                    v_gamma_aa_tau_a_[index] = t14690*t14693*t14694*t14696*(-1.0/8.0)+t14690*t14695*t14697*(t14667+t14650* \
                       t14653*(t14666-c0p*t14636*t14638*2.0))*(1.0/8.0)-rho_a[index]*t14693*(t14697*(t14700*t14695*(1.0/2.0) \
                       -1.0)+t14694*(t14695-t14700*t14696*(1.0/2.0)))*(ccaa1*gcaa*t14644*t14677+ccaa2*gamma_aa[index]*t14640* \
                       t14646*t14688*2.0-ccaa1*gamma_aa[index]*t14640*t14646*1/(t14676*t14676)-ccaa2*t14640*t14646*t14639* \
                       1/(t14687*t14687)*(gcaa*t14644*2.0+gamma_aa[index]*t14640*t14646*2.0)-ccaa4*t14641*t14642*t14643*1/ \
                       (t14672*t14672)*(gcaa*t14644*4.0+gamma_aa[index]*t14640*t14646*1.2E1+gamma_aa[index]*t14642*t14643* \
                       t14639*4.0+gcaa*t14640*t14645*t14639*1.2E1)+ccaa4*gamma_aa[index]*t14642*t14643*t14673*t14639*4.0+ \
                       ccaa3*gcaa*t14640*t14645*t14683*t14639*3.0-ccaa3*gamma_aa[index]*gcaa*t14640*t14645*1/(t14682*t14682) \
                       *t14639*(gcaa*t14644*3.0+gamma_aa[index]*t14640*t14646*6.0+gcaa*t14640*t14645*t14639*3.0))+mu_*t14701* \
                       t14703*t14699*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t14701*t14703*(1.0/4.0))/kp+ \
                       1.0,2.0)*(X-1.0)*((C_k*a_1*t14704*t14696)/t14706-C_k*a_1*t14704*t14707*t14708*t14696-C_k*a_2*t14704* \
                       t14713*t14709*t14696*2.0+C_k*a_2*t14704*t14707*t14708*t14696*2.0+C_k*a_3*t14704*t14713*t14709*t14696* \
                       3.0-C_k*a_4*t14710*t14704*t14715*t14696*4.0+C_k*a_5*t14710*t14704*t14715*t14696*5.0-C_k*a_8*t14711* \
                       t14704*t14719*t14696*8.0+C_k*a_9*t14711*t14704*t14719*t14696*9.0+C_k*a_10*t14711*t14720*t14704*t14707* \
                       t14696*1.0E1-C_k*a_10*t14711*t14712*t14704*t14709*t14696*1.0E1+C_k*a_11*t14711*t14712*t14704*t14709* \
                       t14696*1.1E1-C_k*a_3*t14704*t14714*t14707*t14709*t14696*3.0+C_k*a_4*t14704*t14714*t14707*t14709*t14696* \
                       4.0-C_k*a_5*t14710*t14704*t14707*t14716*t14696*5.0+C_k*a_6*t14710*t14704*t14707*t14716*t14696*6.0- \
                       C_k*a_6*t14710*t14704*t14717*t14709*t14696*6.0+C_k*a_7*t14710*t14704*t14717*t14709*t14696*7.0-C_k* \
                       a_9*t14711*t14720*t14704*t14707*t14696*9.0-C_k*a_11*t14711*t14704*1/pow(t14706,1.2E1)*t14707*t14709* \
                       t14696*1.1E1-C_k*a_7*t14710*t14704*t14707*t14709*t14718*t14696*7.0+C_k*a_8*t14710*t14704*t14707*t14709* \
                       t14718*t14696*8.0)*(1.0/4.0);
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t12373 = 1/pow(rho_b[index],1.0/3.0);
                    double t12374 = c*t12373;
                    double t12375 = sqrt(t12374);
                    double t12376 = pow(t12374,3.0/2.0);
                    double t12377 = c*c;
                    double t12378 = 1/pow(rho_b[index],2.0/3.0);
                    double t12379 = 1/c0p;
                    double t12380 = b1p*t12375;
                    double t12381 = b3p*t12376;
                    double t12382 = b4p*t12377*t12378;
                    double t12383 = b2p*c*t12373;
                    double t12384 = t12380+t12381+t12382+t12383;
                    double t12385 = 1/t12384;
                    double t12386 = t12385*t12379*(1.0/2.0);
                    double t12387 = t12386+1.0;
                    double t12388 = log(t12387);
                    double t12389 = a1p*c*t12373;
                    double t12390 = t12389+1.0;
                    double t12391 = gamma_bb[index]*gamma_bb[index];
                    double t12392 = gcaa*gcaa;
                    double t12393 = t12391*t12391;
                    double t12394 = t12392*t12392;
                    double t12395 = 1/pow(rho_b[index],3.2E1/3.0);
                    double t12396 = 1/pow(rho_b[index],8.0/3.0);
                    double t12397 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t12398 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t12399 = tau_b[index]-1.0/1.0E20;
                    double t12400 = pow(2.0,1.0/3.0);
                    double t12401 = t12400*2.0;
                    double t12402 = t12401-2.0;
                    double t12403 = two_13*2.0;
                    double t12404 = t12403-2.0;
                    double t12405 = 1/t12404;
                    double t12406 = 1/c0f;
                    double t12407 = b1f*t12375;
                    double t12408 = b3f*t12376;
                    double t12409 = b4f*t12377*t12378;
                    double t12410 = b2f*c*t12373;
                    double t12411 = t12410+t12407+t12408+t12409;
                    double t12412 = 1/t12411;
                    double t12413 = t12412*t12406*(1.0/2.0);
                    double t12414 = t12413+1.0;
                    double t12415 = log(t12414);
                    double t12416 = a1f*c*t12373;
                    double t12417 = t12416+1.0;
                    double t12418 = c0f*t12415*t12417*2.0;
                    double t12419 = c0p*t12390*t12388*2.0;
                    double t12420 = gamma_bb[index]*gcaa*t12396*4.0;
                    double t12421 = gamma_bb[index]*gcaa*t12391*t12392*t12397*4.0;
                    double t12422 = t12391*t12392*t12398*6.0;
                    double t12423 = t12393*t12394*t12395;
                    double t12424 = t12420+t12421+t12422+t12423+1.0;
                    double t12425 = 1/t12424;
                    double t12426 = ccaa4*t12425*t12393*t12394*t12395;
                    double t12427 = gamma_bb[index]*gcaa*t12396;
                    double t12428 = t12427+1.0;
                    double t12429 = 1/t12428;
                    double t12430 = ccaa1*gamma_bb[index]*gcaa*t12429*t12396;
                    double t12431 = gamma_bb[index]*gcaa*t12396*3.0;
                    double t12432 = gamma_bb[index]*gcaa*t12391*t12392*t12397;
                    double t12433 = t12391*t12392*t12398*3.0;
                    double t12434 = t12431+t12432+t12433+1.0;
                    double t12435 = 1/t12434;
                    double t12436 = ccaa3*gamma_bb[index]*gcaa*t12435*t12391*t12392*t12397;
                    double t12437 = gamma_bb[index]*gcaa*t12396*2.0;
                    double t12438 = t12391*t12392*t12398;
                    double t12439 = t12437+t12438+1.0;
                    double t12440 = 1/t12439;
                    double t12441 = ccaa2*t12440*t12391*t12392*t12398;
                    double t12442 = ccaa0+t12430+t12441+t12426+t12436;
                    double t12443 = t12418-t12419;
                    double t12444 = t12402*t12405*t12443;
                    double t12445 = t12444+t12419;
                    double t12446 = ( (t12399 > 0.0) ?  1.0 : 0.0 ) ;
                    double t12447 = 1/tau_b[index];
                    double t12448 = 1/(tau_b[index]*tau_b[index]);
                    double t12449 = 0.0 ;
                    double t12450 = tau_b[index]*2.0;
                    double t12451 = 1/rho_b[index];
                    double t12452 = t12450-gamma_bb[index]*t12451*(1.0/4.0);
                    double t12453 = 1/(k*k);
                    double t12454 = rho_b[index]*2.0;
                    double t12455 = 1/pow(t12454,2.0/3.0);
                    double t12456 = pow(rho_b[index],5.0/3.0);
                    double t12457 = C_k*t12447*t12456;
                    double t12458 = t12457+1.0;
                    double t12459 = t12457-1.0;
                    double t12460 = 1/(t12458*t12458);
                    double t12461 = t12459*t12459;
                    double t12462 = t12461*t12461;
                    double t12463 = t12462*t12462;
                    double t12464 = 1/pow(t12458,1.1E1);
                    double t12465 = 1/(t12458*t12458*t12458);
                    double t12466 = 1/(t12458*t12458*t12458*t12458);
                    double t12467 = 1/(t12458*t12458*t12458*t12458*t12458);
                    double t12468 = 1/(t12458*t12458*t12458*t12458*t12458*t12458);
                    double t12469 = 1/(t12458*t12458*t12458*t12458*t12458*t12458*t12458);
                    double t12470 = 1/(t12458*t12458*t12458*t12458*t12458*t12458*t12458*t12458);
                    double t12471 = 1/(t12458*t12458*t12458*t12458*t12458*t12458*t12458*t12458*t12458);
                    double t12472 = 1/pow(t12458,1.0E1);
                    v_gamma_bb_tau_b_[index] = t12442*t12445*t12446*t12448*(-1.0/8.0)+t12442*t12447*t12449*(t12419+t12402* \
                       t12405*(t12418-c0p*t12390*t12388*2.0))*(1.0/8.0)-rho_b[index]*t12445*(t12449*(t12452*t12447*(1.0/2.0) \
                       -1.0)+t12446*(t12447-t12452*t12448*(1.0/2.0)))*(ccaa1*gcaa*t12429*t12396+ccaa2*gamma_bb[index]*t12440* \
                       t12392*t12398*2.0-ccaa1*gamma_bb[index]*t12392*1/(t12428*t12428)*t12398-ccaa2*t12391*t12392*1/(t12439* \
                       t12439)*t12398*(gcaa*t12396*2.0+gamma_bb[index]*t12392*t12398*2.0)-ccaa4*1/(t12424*t12424)*t12393* \
                       t12394*t12395*(gcaa*t12396*4.0+gamma_bb[index]*t12392*t12398*1.2E1+gamma_bb[index]*t12391*t12394*t12395* \
                       4.0+gcaa*t12391*t12392*t12397*1.2E1)+ccaa4*gamma_bb[index]*t12425*t12391*t12394*t12395*4.0+ccaa3*gcaa* \
                       t12435*t12391*t12392*t12397*3.0-ccaa3*gamma_bb[index]*gcaa*1/(t12434*t12434)*t12391*t12392*t12397* \
                       (gcaa*t12396*3.0+gamma_bb[index]*t12392*t12398*6.0+gcaa*t12391*t12392*t12397*3.0))+mu_*t12451*t12453* \
                       t12455*1/pow((gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index])*t12453*t12455*(1.0/4.0))/kp+1.0,2.0) \
                       *(X-1.0)*((C_k*a_1*t12456*t12448)/t12458-C_k*a_1*t12460*t12456*t12448*t12459-C_k*a_2*t12461*t12456* \
                       t12465*t12448*2.0+C_k*a_2*t12460*t12456*t12448*t12459*2.0+C_k*a_3*t12461*t12456*t12465*t12448*3.0- \
                       C_k*a_4*t12462*t12456*t12448*t12467*4.0+C_k*a_5*t12462*t12456*t12448*t12467*5.0-C_k*a_8*t12471*t12463* \
                       t12456*t12448*8.0+C_k*a_9*t12471*t12463*t12456*t12448*9.0-C_k*a_10*t12461*t12463*t12464*t12456*t12448* \
                       1.0E1+C_k*a_11*t12461*t12463*t12464*t12456*t12448*1.1E1+C_k*a_10*t12463*t12472*t12456*t12448*t12459* \
                       1.0E1-C_k*a_3*t12461*t12456*t12448*t12466*t12459*3.0+C_k*a_4*t12461*t12456*t12448*t12466*t12459*4.0- \
                       C_k*a_5*t12462*t12456*t12448*t12459*t12468*5.0-C_k*a_6*t12461*t12462*t12456*t12448*t12469*6.0+C_k* \
                       a_6*t12462*t12456*t12448*t12459*t12468*6.0+C_k*a_7*t12461*t12462*t12456*t12448*t12469*7.0-C_k*a_9* \
                       t12463*t12472*t12456*t12448*t12459*9.0-C_k*a_11*t12461*t12463*t12456*t12448*1/pow(t12458,1.2E1)*t12459* \
                       1.1E1-C_k*a_7*t12461*t12470*t12462*t12456*t12448*t12459*7.0+C_k*a_8*t12461*t12470*t12462*t12456*t12448* \
                       t12459*8.0)*(1.0/4.0);
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    double t13499 = 1/pow(rho_b[index],1.0/3.0);
                    double t13500 = c*t13499;
                    double t13501 = sqrt(t13500);
                    double t13502 = pow(t13500,3.0/2.0);
                    double t13503 = c*c;
                    double t13504 = 1/pow(rho_b[index],2.0/3.0);
                    double t13505 = 1/c0p;
                    double t13506 = b1p*t13501;
                    double t13507 = b3p*t13502;
                    double t13508 = b4p*t13503*t13504;
                    double t13509 = b2p*c*t13499;
                    double t13510 = t13506+t13507+t13508+t13509;
                    double t13511 = 1/t13510;
                    double t13512 = t13511*t13505*(1.0/2.0);
                    double t13513 = t13512+1.0;
                    double t13514 = log(t13513);
                    double t13515 = a1p*c*t13499;
                    double t13516 = t13515+1.0;
                    double t13517 = gamma_bb[index]*gamma_bb[index];
                    double t13518 = gcaa*gcaa;
                    double t13519 = t13517*t13517;
                    double t13520 = t13518*t13518;
                    double t13521 = 1/pow(rho_b[index],3.2E1/3.0);
                    double t13522 = 1/pow(rho_b[index],8.0/3.0);
                    double t13523 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t13524 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t13525 = tau_b[index]-1.0/1.0E20;
                    double t13526 = pow(2.0,1.0/3.0);
                    double t13527 = t13526*2.0;
                    double t13528 = t13527-2.0;
                    double t13529 = two_13*2.0;
                    double t13530 = t13529-2.0;
                    double t13531 = 1/t13530;
                    double t13532 = 1/c0f;
                    double t13533 = b1f*t13501;
                    double t13534 = b3f*t13502;
                    double t13535 = b4f*t13503*t13504;
                    double t13536 = b2f*c*t13499;
                    double t13537 = t13533+t13534+t13535+t13536;
                    double t13538 = 1/t13537;
                    double t13539 = t13532*t13538*(1.0/2.0);
                    double t13540 = t13539+1.0;
                    double t13541 = log(t13540);
                    double t13542 = a1f*c*t13499;
                    double t13543 = t13542+1.0;
                    double t13544 = c0f*t13541*t13543*2.0;
                    double t13545 = c0p*t13514*t13516*2.0;
                    double t13546 = gamma_bb[index]*gcaa*t13522*4.0;
                    double t13547 = gamma_bb[index]*gcaa*t13523*t13517*t13518*4.0;
                    double t13548 = t13524*t13517*t13518*6.0;
                    double t13549 = t13520*t13521*t13519;
                    double t13550 = t13546+t13547+t13548+t13549+1.0;
                    double t13551 = 1/t13550;
                    double t13552 = ccaa4*t13520*t13521*t13551*t13519;
                    double t13553 = gamma_bb[index]*gcaa*t13522;
                    double t13554 = t13553+1.0;
                    double t13555 = 1/t13554;
                    double t13556 = ccaa1*gamma_bb[index]*gcaa*t13522*t13555;
                    double t13557 = gamma_bb[index]*gcaa*t13522*3.0;
                    double t13558 = gamma_bb[index]*gcaa*t13523*t13517*t13518;
                    double t13559 = t13524*t13517*t13518*3.0;
                    double t13560 = t13557+t13558+t13559+1.0;
                    double t13561 = 1/t13560;
                    double t13562 = ccaa3*gamma_bb[index]*gcaa*t13523*t13561*t13517*t13518;
                    double t13563 = gamma_bb[index]*gcaa*t13522*2.0;
                    double t13564 = t13524*t13517*t13518;
                    double t13565 = t13563+t13564+1.0;
                    double t13566 = 1/t13565;
                    double t13567 = ccaa2*t13524*t13517*t13518*t13566;
                    double t13568 = ccaa0+t13552+t13562+t13556+t13567;
                    double t13569 = t13544-t13545;
                    double t13570 = t13531*t13528*t13569;
                    double t13571 = t13570+t13545;
                    double t13572 = ( (t13525 > 0.0) ?  1.0 : 0.0 ) ;
                    double t13573 = 1/tau_b[index];
                    double t13574 = 1/(tau_b[index]*tau_b[index]);
                    double t13575 = 0.0 ;
                    double t13576 = tau_b[index]*2.0;
                    double t13577 = 1/rho_b[index];
                    double t13578 = t13576-gamma_bb[index]*t13577*(1.0/4.0);
                    double t13579 = 1/(k*k);
                    double t13580 = rho_b[index]*2.0;
                    double t13581 = 1/pow(t13580,2.0/3.0);
                    double t13582 = pow(rho_b[index],5.0/3.0);
                    double t13583 = C_k*t13573*t13582;
                    double t13584 = t13583+1.0;
                    double t13585 = t13583-1.0;
                    double t13586 = 1/(t13584*t13584);
                    double t13587 = t13585*t13585;
                    double t13588 = t13587*t13587;
                    double t13589 = t13588*t13588;
                    double t13590 = 1/pow(t13584,1.1E1);
                    double t13591 = 1/(t13584*t13584*t13584);
                    double t13592 = 1/(t13584*t13584*t13584*t13584);
                    double t13593 = 1/(t13584*t13584*t13584*t13584*t13584);
                    double t13594 = 1/(t13584*t13584*t13584*t13584*t13584*t13584);
                    double t13595 = 1/(t13584*t13584*t13584*t13584*t13584*t13584*t13584);
                    double t13596 = 1/(t13584*t13584*t13584*t13584*t13584*t13584*t13584*t13584);
                    double t13597 = 1/(t13584*t13584*t13584*t13584*t13584*t13584*t13584*t13584*t13584);
                    double t13598 = 1/pow(t13584,1.0E1);
                    v_gamma_bb_tau_b_[index] = t13571*t13572*t13574*t13568*(-1.0/8.0)+t13573*t13575*t13568*(t13545+t13531* \
                       t13528*(t13544-c0p*t13514*t13516*2.0))*(1.0/8.0)-rho_b[index]*t13571*(t13575*(t13573*t13578*(1.0/2.0) \
                       -1.0)+t13572*(t13573-t13574*t13578*(1.0/2.0)))*(ccaa1*gcaa*t13522*t13555+ccaa2*gamma_bb[index]*t13524* \
                       t13518*t13566*2.0-ccaa1*gamma_bb[index]*t13524*t13518*1/(t13554*t13554)-ccaa2*t13524*t13517*t13518* \
                       1/(t13565*t13565)*(gcaa*t13522*2.0+gamma_bb[index]*t13524*t13518*2.0)-ccaa4*t13520*t13521*1/(t13550* \
                       t13550)*t13519*(gcaa*t13522*4.0+gamma_bb[index]*t13524*t13518*1.2E1+gamma_bb[index]*t13520*t13521* \
                       t13517*4.0+gcaa*t13523*t13517*t13518*1.2E1)+ccaa4*gamma_bb[index]*t13520*t13521*t13551*t13517*4.0+ \
                       ccaa3*gcaa*t13523*t13561*t13517*t13518*3.0-ccaa3*gamma_bb[index]*gcaa*t13523*1/(t13560*t13560)*t13517* \
                       t13518*(gcaa*t13522*3.0+gamma_bb[index]*t13524*t13518*6.0+gcaa*t13523*t13517*t13518*3.0))+mu_*t13581* \
                       t13577*t13579*1/pow((gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index])*t13581*t13579*(1.0/4.0))/kp+ \
                       1.0,2.0)*(X-1.0)*((C_k*a_1*t13582*t13574)/t13584-C_k*a_1*t13582*t13574*t13585*t13586-C_k*a_2*t13582* \
                       t13591*t13574*t13587*2.0+C_k*a_2*t13582*t13574*t13585*t13586*2.0+C_k*a_3*t13582*t13591*t13574*t13587* \
                       3.0-C_k*a_4*t13582*t13574*t13593*t13588*4.0+C_k*a_5*t13582*t13574*t13593*t13588*5.0-C_k*a_8*t13582* \
                       t13574*t13597*t13589*8.0+C_k*a_9*t13582*t13574*t13597*t13589*9.0-C_k*a_10*t13590*t13582*t13574*t13587* \
                       t13589*1.0E1+C_k*a_11*t13590*t13582*t13574*t13587*t13589*1.1E1+C_k*a_10*t13582*t13574*t13585*t13589* \
                       t13598*1.0E1-C_k*a_3*t13582*t13574*t13592*t13585*t13587*3.0+C_k*a_4*t13582*t13574*t13592*t13585*t13587* \
                       4.0-C_k*a_5*t13582*t13574*t13585*t13594*t13588*5.0+C_k*a_6*t13582*t13574*t13585*t13594*t13588*6.0- \
                       C_k*a_6*t13582*t13574*t13595*t13587*t13588*6.0+C_k*a_7*t13582*t13574*t13595*t13587*t13588*7.0-C_k* \
                       a_9*t13582*t13574*t13585*t13589*t13598*9.0-C_k*a_11*t13582*t13574*1/pow(t13584,1.2E1)*t13585*t13587* \
                       t13589*1.1E1-C_k*a_7*t13582*t13574*t13585*t13587*t13596*t13588*7.0+C_k*a_8*t13582*t13574*t13585*t13587* \
                       t13596*t13588*8.0)*(1.0/4.0);
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

