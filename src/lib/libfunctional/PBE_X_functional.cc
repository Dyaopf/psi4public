/**********************************************************
* PBE_X_functional.cc: definitions for PBE_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "PBE_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

PBE_X_Functional::PBE_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "PBE_X";
    description_ = "PBE Exchange Functional";
    citation_ = "J.P. Perdew et. al., Phys. Rev. Lett., 77(18), 3865-3868, 1996";
    
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double e = -2.3873241463784300E-01;
    params_.push_back(make_pair("e",e));
    double kp = 8.0400000000000005E-01;
    params_.push_back(make_pair("kp",kp));
    double mu_ = 2.1951497276451709E-01;
    params_.push_back(make_pair("mu_",mu_));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
PBE_X_Functional::~PBE_X_Functional()
{
}
void PBE_X_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double k = params_[0].second;
    double e = params_[1].second;
    double kp = params_[2].second;
    double mu_ = params_[3].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t1436 = rho_a[index]*2.0;
            functional_[index] = e*k*rho_a[index]*pow(t1436,1.0/3.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/pow(t1436,8.0/ \
               3.0))/kp+1.0)+1.0)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t1438 = rho_a[index]*2.0;
            double t1439 = 1/(k*k);
            double t1440 = 1/kp;
            double t1441 = 1/pow(t1438,8.0/3.0);
            double t1442 = gamma_aa[index]*mu_*t1440*t1441*t1439;
            double t1443 = t1442+1.0;
            double t1444 = 1/t1443;
            double t1445 = kp-kp*t1444+1.0;
            v_rho_a_[index] = e*k*t1445*pow(t1438,1.0/3.0)+e*k*rho_a[index]*t1445*1/pow(t1438,2.0/3.0)*(2.0/3.0) \
               -(e*gamma_aa[index]*mu_*rho_a[index]*1/(t1443*t1443)*1/pow(t1438,1.0E1/3.0)*(1.6E1/3.0))/k;
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t1447 = rho_a[index]*2.0;
                v_gamma_aa_[index] = (e*mu_*rho_a[index]*1/pow(t1447,7.0/3.0)*1/pow((gamma_aa[index]*1/(k*k)*mu_* \
                   1/pow(t1447,8.0/3.0))/kp+1.0,2.0)*2.0)/k;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t1450 = rho_a[index]*2.0;
            double t1451 = 1/(k*k);
            double t1452 = 1/kp;
            double t1453 = 1/pow(t1450,8.0/3.0);
            double t1454 = gamma_aa[index]*mu_*t1451*t1452*t1453;
            double t1455 = t1454+1.0;
            double t1456 = 1/t1455;
            double t1457 = kp-kp*t1456+1.0;
            double t1458 = 1/k;
            double t1459 = 1/(t1455*t1455);
            v_rho_a_rho_a_[index] = e*k*1/pow(t1450,2.0/3.0)*t1457*(4.0/3.0)-e*k*rho_a[index]*1/pow(t1450,5.0/ \
               3.0)*t1457*(8.0/9.0)-e*gamma_aa[index]*mu_*1/pow(t1450,1.0E1/3.0)*t1458*t1459*(3.2E1/3.0)-e*(gamma_aa[index]* \
               gamma_aa[index])*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index])*t1452*1/(t1455*t1455*t1455)*(4.0/9.0)+e*gamma_aa[index]*mu_*rho_a[index]*1/pow(t1450,1.3E1/ \
               3.0)*t1458*t1459*3.2E1;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t1461 = rho_a[index]*2.0;
                double t1462 = 1/k;
                double t1463 = 1/(k*k);
                double t1464 = 1/kp;
                double t1465 = 1/pow(t1461,8.0/3.0);
                double t1466 = gamma_aa[index]*mu_*t1463*t1464*t1465;
                double t1467 = t1466+1.0;
                double t1468 = 1/(t1467*t1467);
                v_rho_a_gamma_aa_[index] = e*mu_*1/pow(t1461,7.0/3.0)*t1462*t1468-e*mu_*rho_a[index]*1/pow(t1461,1.0E1/ \
                   3.0)*t1462*t1468*(1.4E1/3.0)+e*gamma_aa[index]*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index])*t1464*1/(t1467*t1467*t1467)*(1.0/6.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t1470 = 1/kp;
                v_gamma_aa_gamma_aa_[index] = e*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]) \
                   *t1470*1/pow(gamma_aa[index]*1/(k*k)*mu_*t1470*1/pow(rho_a[index]*2.0,8.0/3.0)+1.0,3.0)*(-1.0/8.0) \
                   ;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void PBE_X_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double k = params_[0].second;
    double e = params_[1].second;
    double kp = params_[2].second;
    double mu_ = params_[3].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1174 = rho_a[index]*2.0;
            double t1175 = 1/(k*k);
            double t1176 = 1/kp;
            double t1177 = rho_b[index]*2.0;
            functional_[index] = e*k*rho_a[index]*pow(t1174,1.0/3.0)*(kp-kp/(gamma_aa[index]*mu_*1/pow(t1174,8.0/ \
               3.0)*t1175*t1176+1.0)+1.0)+e*k*rho_b[index]*pow(t1177,1.0/3.0)*(kp-kp/(gamma_bb[index]*mu_*t1175*t1176* \
               1/pow(t1177,8.0/3.0)+1.0)+1.0);
        } else if (rho_a[index] > cutoff_) {
            double t1335 = rho_a[index]*2.0;
            functional_[index] = e*k*rho_a[index]*pow(t1335,1.0/3.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/pow(t1335,8.0/ \
               3.0))/kp+1.0)+1.0);
        } else if (rho_b[index] > cutoff_) {
            double t1270 = rho_b[index]*2.0;
            functional_[index] = e*k*rho_b[index]*pow(t1270,1.0/3.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/pow(t1270,8.0/ \
               3.0))/kp+1.0)+1.0);
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1179 = rho_a[index]*2.0;
            double t1180 = 1/(k*k);
            double t1181 = 1/kp;
            double t1182 = 1/pow(t1179,8.0/3.0);
            double t1183 = gamma_aa[index]*mu_*t1180*t1181*t1182;
            double t1184 = t1183+1.0;
            double t1185 = 1/t1184;
            double t1186 = kp-kp*t1185+1.0;
            v_rho_a_[index] = e*k*t1186*pow(t1179,1.0/3.0)+e*k*rho_a[index]*t1186*1/pow(t1179,2.0/3.0)*(2.0/3.0) \
               -(e*gamma_aa[index]*mu_*rho_a[index]*1/(t1184*t1184)*1/pow(t1179,1.0E1/3.0)*(1.6E1/3.0))/k;
        } else if (rho_a[index] > cutoff_) {
            double t1337 = rho_a[index]*2.0;
            double t1338 = 1/(k*k);
            double t1339 = 1/kp;
            double t1340 = 1/pow(t1337,8.0/3.0);
            double t1341 = gamma_aa[index]*mu_*t1340*t1338*t1339;
            double t1342 = t1341+1.0;
            double t1343 = 1/t1342;
            double t1344 = kp-kp*t1343+1.0;
            v_rho_a_[index] = e*k*t1344*pow(t1337,1.0/3.0)+e*k*rho_a[index]*t1344*1/pow(t1337,2.0/3.0)*(2.0/3.0) \
               -(e*gamma_aa[index]*mu_*rho_a[index]*1/(t1342*t1342)*1/pow(t1337,1.0E1/3.0)*(1.6E1/3.0))/k;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1188 = rho_b[index]*2.0;
            double t1189 = 1/(k*k);
            double t1190 = 1/kp;
            double t1191 = 1/pow(t1188,8.0/3.0);
            double t1192 = gamma_bb[index]*mu_*t1190*t1191*t1189;
            double t1193 = t1192+1.0;
            double t1194 = 1/t1193;
            double t1195 = kp-kp*t1194+1.0;
            v_rho_b_[index] = e*k*t1195*pow(t1188,1.0/3.0)+e*k*rho_b[index]*t1195*1/pow(t1188,2.0/3.0)*(2.0/3.0) \
               -(e*gamma_bb[index]*mu_*rho_b[index]*1/(t1193*t1193)*1/pow(t1188,1.0E1/3.0)*(1.6E1/3.0))/k;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t1273 = rho_b[index]*2.0;
            double t1274 = 1/(k*k);
            double t1275 = 1/kp;
            double t1276 = 1/pow(t1273,8.0/3.0);
            double t1277 = gamma_bb[index]*mu_*t1274*t1275*t1276;
            double t1278 = t1277+1.0;
            double t1279 = 1/t1278;
            double t1280 = kp-kp*t1279+1.0;
            v_rho_b_[index] = e*k*t1280*pow(t1273,1.0/3.0)+e*k*rho_b[index]*t1280*1/pow(t1273,2.0/3.0)*(2.0/3.0) \
               -(e*gamma_bb[index]*mu_*rho_b[index]*1/pow(t1273,1.0E1/3.0)*1/(t1278*t1278)*(1.6E1/3.0))/k;
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1197 = rho_a[index]*2.0;
                v_gamma_aa_[index] = (e*mu_*rho_a[index]*1/pow(t1197,7.0/3.0)*1/pow((gamma_aa[index]*1/(k*k)*mu_* \
                   1/pow(t1197,8.0/3.0))/kp+1.0,2.0))/k;
            } else if (rho_a[index] > cutoff_) {
                double t1347 = rho_a[index]*2.0;
                v_gamma_aa_[index] = (e*mu_*rho_a[index]*1/pow(t1347,7.0/3.0)*1/pow((gamma_aa[index]*1/(k*k)*mu_* \
                   1/pow(t1347,8.0/3.0))/kp+1.0,2.0))/k;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1200 = rho_b[index]*2.0;
                v_gamma_bb_[index] = (e*mu_*rho_b[index]*1/pow(t1200,7.0/3.0)*1/pow((gamma_bb[index]*1/(k*k)*mu_* \
                   1/pow(t1200,8.0/3.0))/kp+1.0,2.0))/k;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t1284 = rho_b[index]*2.0;
                v_gamma_bb_[index] = (e*mu_*rho_b[index]*1/pow(t1284,7.0/3.0)*1/pow((gamma_bb[index]*1/(k*k)*mu_* \
                   1/pow(t1284,8.0/3.0))/kp+1.0,2.0))/k;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1204 = rho_a[index]*2.0;
            double t1205 = 1/(k*k);
            double t1206 = 1/kp;
            double t1207 = 1/pow(t1204,8.0/3.0);
            double t1208 = gamma_aa[index]*mu_*t1205*t1206*t1207;
            double t1209 = t1208+1.0;
            double t1210 = 1/t1209;
            double t1211 = kp-kp*t1210+1.0;
            double t1212 = 1/k;
            double t1213 = 1/(t1209*t1209);
            v_rho_a_rho_a_[index] = e*k*t1211*1/pow(t1204,2.0/3.0)*(4.0/3.0)-e*k*rho_a[index]*t1211*1/pow(t1204,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_aa[index]*mu_*t1212*1/pow(t1204,1.0E1/3.0)*t1213*(3.2E1/3.0)-e*(gamma_aa[index]* \
               gamma_aa[index])*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index])*t1206*1/(t1209*t1209*t1209)*(4.0/9.0)+e*gamma_aa[index]*mu_*rho_a[index]*t1212*1/pow(t1204,1.3E1/ \
               3.0)*t1213*3.2E1;
        } else if (rho_a[index] > cutoff_) {
            double t1353 = rho_a[index]*2.0;
            double t1354 = 1/(k*k);
            double t1355 = 1/kp;
            double t1356 = 1/pow(t1353,8.0/3.0);
            double t1357 = gamma_aa[index]*mu_*t1354*t1355*t1356;
            double t1358 = t1357+1.0;
            double t1359 = 1/t1358;
            double t1360 = kp-kp*t1359+1.0;
            double t1361 = 1/k;
            double t1362 = 1/(t1358*t1358);
            v_rho_a_rho_a_[index] = e*k*t1360*1/pow(t1353,2.0/3.0)*(4.0/3.0)-e*k*rho_a[index]*t1360*1/pow(t1353,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_aa[index]*mu_*t1361*1/pow(t1353,1.0E1/3.0)*t1362*(3.2E1/3.0)-e*(gamma_aa[index]* \
               gamma_aa[index])*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index])*t1355*1/(t1358*t1358*t1358)*(4.0/9.0)+e*gamma_aa[index]*mu_*rho_a[index]*t1361*1/pow(t1353,1.3E1/ \
               3.0)*t1362*3.2E1;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1216 = rho_b[index]*2.0;
            double t1217 = 1/(k*k);
            double t1218 = 1/kp;
            double t1219 = 1/pow(t1216,8.0/3.0);
            double t1220 = gamma_bb[index]*mu_*t1217*t1218*t1219;
            double t1221 = t1220+1.0;
            double t1222 = 1/t1221;
            double t1223 = kp-kp*t1222+1.0;
            double t1224 = 1/k;
            double t1225 = 1/(t1221*t1221);
            v_rho_b_rho_b_[index] = e*k*t1223*1/pow(t1216,2.0/3.0)*(4.0/3.0)-e*k*rho_b[index]*t1223*1/pow(t1216,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_bb[index]*mu_*t1224*1/pow(t1216,1.0E1/3.0)*t1225*(3.2E1/3.0)-e*(gamma_bb[index]* \
               gamma_bb[index])*1/(k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index])*1/(t1221*t1221*t1221)*t1218*(4.0/9.0)+e*gamma_bb[index]*mu_*rho_b[index]*t1224*1/pow(t1216,1.3E1/ \
               3.0)*t1225*3.2E1;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t1290 = rho_b[index]*2.0;
            double t1291 = 1/(k*k);
            double t1292 = 1/kp;
            double t1293 = 1/pow(t1290,8.0/3.0);
            double t1294 = gamma_bb[index]*mu_*t1291*t1292*t1293;
            double t1295 = t1294+1.0;
            double t1296 = 1/t1295;
            double t1297 = kp-kp*t1296+1.0;
            double t1298 = 1/k;
            double t1299 = 1/(t1295*t1295);
            v_rho_b_rho_b_[index] = e*k*1/pow(t1290,2.0/3.0)*t1297*(4.0/3.0)-e*k*rho_b[index]*1/pow(t1290,5.0/ \
               3.0)*t1297*(8.0/9.0)-e*gamma_bb[index]*mu_*1/pow(t1290,1.0E1/3.0)*t1298*t1299*(3.2E1/3.0)-e*(gamma_bb[index]* \
               gamma_bb[index])*1/(k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index])*t1292*1/(t1295*t1295*t1295)*(4.0/9.0)+e*gamma_bb[index]*mu_*rho_b[index]*1/pow(t1290,1.3E1/ \
               3.0)*t1298*t1299*3.2E1;
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1227 = rho_a[index]*2.0;
                double t1228 = 1/k;
                double t1229 = 1/(k*k);
                double t1230 = 1/kp;
                double t1231 = 1/pow(t1227,8.0/3.0);
                double t1232 = gamma_aa[index]*mu_*t1230*t1231*t1229;
                double t1233 = t1232+1.0;
                double t1234 = 1/(t1233*t1233);
                v_rho_a_gamma_aa_[index] = e*mu_*t1234*1/pow(t1227,7.0/3.0)*t1228-e*mu_*rho_a[index]*t1234*1/pow(t1227,1.0E1/ \
                   3.0)*t1228*(1.4E1/3.0)+e*gamma_aa[index]*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index])*t1230*1/(t1233*t1233*t1233)*(1.0/6.0);
            } else if (rho_a[index] > cutoff_) {
                double t1366 = rho_a[index]*2.0;
                double t1367 = 1/k;
                double t1368 = 1/(k*k);
                double t1369 = 1/kp;
                double t1370 = 1/pow(t1366,8.0/3.0);
                double t1371 = gamma_aa[index]*mu_*t1370*t1368*t1369;
                double t1372 = t1371+1.0;
                double t1373 = 1/(t1372*t1372);
                v_rho_a_gamma_aa_[index] = e*mu_*t1373*1/pow(t1366,7.0/3.0)*t1367-e*mu_*rho_a[index]*t1373*1/pow(t1366,1.0E1/ \
                   3.0)*t1367*(1.4E1/3.0)+e*gamma_aa[index]*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index])*1/(t1372*t1372*t1372)*t1369*(1.0/6.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1240 = rho_b[index]*2.0;
                double t1241 = 1/k;
                double t1242 = 1/(k*k);
                double t1243 = 1/kp;
                double t1244 = 1/pow(t1240,8.0/3.0);
                double t1245 = gamma_bb[index]*mu_*t1242*t1243*t1244;
                double t1246 = t1245+1.0;
                double t1247 = 1/(t1246*t1246);
                v_rho_b_gamma_bb_[index] = e*mu_*1/pow(t1240,7.0/3.0)*t1241*t1247-e*mu_*rho_b[index]*1/pow(t1240,1.0E1/ \
                   3.0)*t1241*t1247*(1.4E1/3.0)+e*gamma_bb[index]*1/(k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index])*t1243*1/(t1246*t1246*t1246)*(1.0/6.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t1306 = rho_b[index]*2.0;
                double t1307 = 1/k;
                double t1308 = 1/(k*k);
                double t1309 = 1/kp;
                double t1310 = 1/pow(t1306,8.0/3.0);
                double t1311 = gamma_bb[index]*mu_*t1310*t1308*t1309;
                double t1312 = t1311+1.0;
                double t1313 = 1/(t1312*t1312);
                v_rho_b_gamma_bb_[index] = e*mu_*t1313*1/pow(t1306,7.0/3.0)*t1307-e*mu_*rho_b[index]*t1313*1/pow(t1306,1.0E1/ \
                   3.0)*t1307*(1.4E1/3.0)+e*gamma_bb[index]*1/(k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index])*1/(t1312*t1312*t1312)*t1309*(1.0/6.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1249 = 1/kp;
                v_gamma_aa_gamma_aa_[index] = e*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]) \
                   *t1249*1/pow(gamma_aa[index]*1/(k*k)*mu_*t1249*1/pow(rho_a[index]*2.0,8.0/3.0)+1.0,3.0)*(-1.0/1.6E1) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                double t1380 = 1/kp;
                v_gamma_aa_gamma_aa_[index] = e*1/(k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]) \
                   *t1380*1/pow(gamma_aa[index]*1/(k*k)*mu_*t1380*1/pow(rho_a[index]*2.0,8.0/3.0)+1.0,3.0)*(-1.0/1.6E1) \
                   ;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1255 = 1/kp;
                v_gamma_bb_gamma_bb_[index] = e*1/(k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]) \
                   *t1255*1/pow(gamma_bb[index]*1/(k*k)*mu_*t1255*1/pow(rho_b[index]*2.0,8.0/3.0)+1.0,3.0)*(-1.0/1.6E1) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t1320 = 1/kp;
                v_gamma_bb_gamma_bb_[index] = e*1/(k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]) \
                   *t1320*1/pow(gamma_bb[index]*1/(k*k)*mu_*t1320*1/pow(rho_b[index]*2.0,8.0/3.0)+1.0,3.0)*(-1.0/1.6E1) \
                   ;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

