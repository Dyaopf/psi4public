/**********************************************************
* PBE_X_functional.cc: definitions for PBE_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 25-May-2011
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "PBE_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

PBE_X_Functional::PBE_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "PBE_X";
    description_ = "PBE Exchange Functional";
    citation_ = "J.P. Perdew et. al., Phys. Rev. Lett., 77(18), 3865-3868, 1996";
    
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double e = -2.3873241463784300E-01;
    params_.push_back(make_pair("e",e));
    double kp = 8.0400000000000005E-01;
    params_.push_back(make_pair("kp",kp));
    double mu_ = 2.1951497276451709E-01;
    params_.push_back(make_pair("mu_",mu_));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
PBE_X_Functional::~PBE_X_Functional()
{
}
void PBE_X_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* gamma_aa;
    const double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double k = params_[0].second;
    double e = params_[1].second;
    double kp = params_[2].second;
    double mu_ = params_[3].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t1699 = rho_a[index]*2.0;
            functional_[index] = e*k*rho_a[index]*pow(t1699,1.0/3.0)*(kp-kp/((gamma_aa[index]*1.0/(k*k)*mu_*1.0/ \
               pow(t1699,8.0/3.0))/kp+1.0)+1.0)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t1701 = rho_a[index]*2.0;
            double t1702 = 1.0/(k*k);
            double t1703 = 1.0/kp;
            double t1704 = 1.0/pow(t1701,8.0/3.0);
            double t1705 = gamma_aa[index]*mu_*t1702*t1703*t1704;
            double t1706 = t1705+1.0;
            double t1707 = 1.0/t1706;
            double t1708 = kp-kp*t1707+1.0;
            v_rho_a_[index] = e*k*pow(t1701,1.0/3.0)*t1708+e*k*rho_a[index]*1.0/pow(t1701,2.0/3.0)*t1708*(2.0/ \
               3.0)-(e*gamma_aa[index]*mu_*rho_a[index]*1.0/pow(t1701,1.0E1/3.0)*1.0/(t1706*t1706)*(1.6E1/3.0))/k;
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t1710 = rho_a[index]*2.0;
                v_gamma_aa_[index] = (e*mu_*rho_a[index]*1.0/pow(t1710,7.0/3.0)*1.0/pow((gamma_aa[index]*1.0/(k*k) \
                   *mu_*1.0/pow(t1710,8.0/3.0))/kp+1.0,2.0)*2.0)/k;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t1713 = rho_a[index]*2.0;
            double t1714 = 1.0/(k*k);
            double t1715 = 1.0/kp;
            double t1716 = 1.0/pow(t1713,8.0/3.0);
            double t1717 = gamma_aa[index]*mu_*t1714*t1715*t1716;
            double t1718 = t1717+1.0;
            double t1719 = 1.0/t1718;
            double t1720 = kp-kp*t1719+1.0;
            double t1721 = 1.0/k;
            double t1722 = 1.0/(t1718*t1718);
            v_rho_a_rho_a_[index] = e*k*t1720*1.0/pow(t1713,2.0/3.0)*(4.0/3.0)-e*k*rho_a[index]*t1720*1.0/pow(t1713,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_aa[index]*mu_*t1721*1.0/pow(t1713,1.0E1/3.0)*t1722*(3.2E1/3.0)-e*(gamma_aa[index]* \
               gamma_aa[index])*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index])*t1715*1.0/(t1718*t1718*t1718)*(4.0/9.0)+e*gamma_aa[index]*mu_*rho_a[index]*t1721*1.0/ \
               pow(t1713,1.3E1/3.0)*t1722*3.2E1;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t1724 = rho_a[index]*2.0;
                double t1725 = 1.0/k;
                double t1726 = 1.0/(k*k);
                double t1727 = 1.0/kp;
                double t1728 = 1.0/pow(t1724,8.0/3.0);
                double t1729 = gamma_aa[index]*mu_*t1726*t1727*t1728;
                double t1730 = t1729+1.0;
                double t1731 = 1.0/(t1730*t1730);
                v_rho_a_gamma_aa_[index] = e*mu_*t1731*1.0/pow(t1724,7.0/3.0)*t1725-e*mu_*rho_a[index]*t1731*1.0/ \
                   pow(t1724,1.0E1/3.0)*t1725*(1.4E1/3.0)+e*gamma_aa[index]*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index])*1.0/(t1730*t1730*t1730)*t1727*(1.0/6.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t1733 = 1.0/kp;
                v_gamma_aa_gamma_aa_[index] = e*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index])*t1733*1.0/pow(gamma_aa[index]*1.0/(k*k)*mu_*t1733*1.0/pow(rho_a[index]*2.0,8.0/3.0)+ \
                   1.0,3.0)*(-1.0/8.0);
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void PBE_X_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    const double* rho_a;
    const double* rho_b;
    const double* gamma_aa;
    const double* gamma_ab;
    const double* gamma_bb;
    const double* tau_a;
    const double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double k = params_[0].second;
    double e = params_[1].second;
    double kp = params_[2].second;
    double mu_ = params_[3].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1437 = rho_a[index]*2.0;
            double t1438 = 1.0/(k*k);
            double t1439 = 1.0/kp;
            double t1440 = rho_b[index]*2.0;
            functional_[index] = e*k*rho_b[index]*pow(t1440,1.0/3.0)*(kp-kp/(gamma_bb[index]*mu_*1.0/pow(t1440,8.0/ \
               3.0)*t1438*t1439+1.0)+1.0)+e*k*rho_a[index]*pow(t1437,1.0/3.0)*(kp-kp/(gamma_aa[index]*mu_*1.0/pow(t1437,8.0/ \
               3.0)*t1438*t1439+1.0)+1.0);
        } else if (rho_a[index] > cutoff_) {
            double t1598 = rho_a[index]*2.0;
            functional_[index] = e*k*rho_a[index]*pow(t1598,1.0/3.0)*(kp-kp/((gamma_aa[index]*1.0/(k*k)*mu_*1.0/ \
               pow(t1598,8.0/3.0))/kp+1.0)+1.0);
        } else if (rho_b[index] > cutoff_) {
            double t1533 = rho_b[index]*2.0;
            functional_[index] = e*k*rho_b[index]*pow(t1533,1.0/3.0)*(kp-kp/((gamma_bb[index]*1.0/(k*k)*mu_*1.0/ \
               pow(t1533,8.0/3.0))/kp+1.0)+1.0);
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1442 = rho_a[index]*2.0;
            double t1443 = 1.0/(k*k);
            double t1444 = 1.0/kp;
            double t1445 = 1.0/pow(t1442,8.0/3.0);
            double t1446 = gamma_aa[index]*mu_*t1443*t1444*t1445;
            double t1447 = t1446+1.0;
            double t1448 = 1.0/t1447;
            double t1449 = kp-kp*t1448+1.0;
            v_rho_a_[index] = e*k*pow(t1442,1.0/3.0)*t1449+e*k*rho_a[index]*1.0/pow(t1442,2.0/3.0)*t1449*(2.0/ \
               3.0)-(e*gamma_aa[index]*mu_*rho_a[index]*1.0/pow(t1442,1.0E1/3.0)*1.0/(t1447*t1447)*(1.6E1/3.0))/k;
        } else if (rho_a[index] > cutoff_) {
            double t1600 = rho_a[index]*2.0;
            double t1601 = 1.0/(k*k);
            double t1602 = 1.0/kp;
            double t1603 = 1.0/pow(t1600,8.0/3.0);
            double t1604 = gamma_aa[index]*mu_*t1601*t1602*t1603;
            double t1605 = t1604+1.0;
            double t1606 = 1.0/t1605;
            double t1607 = kp-kp*t1606+1.0;
            v_rho_a_[index] = e*k*pow(t1600,1.0/3.0)*t1607+e*k*rho_a[index]*1.0/pow(t1600,2.0/3.0)*t1607*(2.0/ \
               3.0)-(e*gamma_aa[index]*mu_*rho_a[index]*1.0/pow(t1600,1.0E1/3.0)*1.0/(t1605*t1605)*(1.6E1/3.0))/k;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1451 = rho_b[index]*2.0;
            double t1452 = 1.0/(k*k);
            double t1453 = 1.0/kp;
            double t1454 = 1.0/pow(t1451,8.0/3.0);
            double t1455 = gamma_bb[index]*mu_*t1452*t1453*t1454;
            double t1456 = t1455+1.0;
            double t1457 = 1.0/t1456;
            double t1458 = kp-kp*t1457+1.0;
            v_rho_b_[index] = e*k*pow(t1451,1.0/3.0)*t1458+e*k*rho_b[index]*1.0/pow(t1451,2.0/3.0)*t1458*(2.0/ \
               3.0)-(e*gamma_bb[index]*mu_*rho_b[index]*1.0/pow(t1451,1.0E1/3.0)*1.0/(t1456*t1456)*(1.6E1/3.0))/k;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t1536 = rho_b[index]*2.0;
            double t1537 = 1.0/(k*k);
            double t1538 = 1.0/kp;
            double t1539 = 1.0/pow(t1536,8.0/3.0);
            double t1540 = gamma_bb[index]*mu_*t1537*t1538*t1539;
            double t1541 = t1540+1.0;
            double t1542 = 1.0/t1541;
            double t1543 = kp-kp*t1542+1.0;
            v_rho_b_[index] = e*k*t1543*pow(t1536,1.0/3.0)+e*k*rho_b[index]*t1543*1.0/pow(t1536,2.0/3.0)*(2.0/ \
               3.0)-(e*gamma_bb[index]*mu_*rho_b[index]*1.0/(t1541*t1541)*1.0/pow(t1536,1.0E1/3.0)*(1.6E1/3.0))/k;
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1460 = rho_a[index]*2.0;
                v_gamma_aa_[index] = (e*mu_*rho_a[index]*1.0/pow(t1460,7.0/3.0)*1.0/pow((gamma_aa[index]*1.0/(k*k) \
                   *mu_*1.0/pow(t1460,8.0/3.0))/kp+1.0,2.0))/k;
            } else if (rho_a[index] > cutoff_) {
                double t1610 = rho_a[index]*2.0;
                v_gamma_aa_[index] = (e*mu_*rho_a[index]*1.0/pow(t1610,7.0/3.0)*1.0/pow((gamma_aa[index]*1.0/(k*k) \
                   *mu_*1.0/pow(t1610,8.0/3.0))/kp+1.0,2.0))/k;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1463 = rho_b[index]*2.0;
                v_gamma_bb_[index] = (e*mu_*rho_b[index]*1.0/pow(t1463,7.0/3.0)*1.0/pow((gamma_bb[index]*1.0/(k*k) \
                   *mu_*1.0/pow(t1463,8.0/3.0))/kp+1.0,2.0))/k;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t1547 = rho_b[index]*2.0;
                v_gamma_bb_[index] = (e*mu_*rho_b[index]*1.0/pow(t1547,7.0/3.0)*1.0/pow((gamma_bb[index]*1.0/(k*k) \
                   *mu_*1.0/pow(t1547,8.0/3.0))/kp+1.0,2.0))/k;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1467 = rho_a[index]*2.0;
            double t1468 = 1.0/(k*k);
            double t1469 = 1.0/kp;
            double t1470 = 1.0/pow(t1467,8.0/3.0);
            double t1471 = gamma_aa[index]*mu_*t1470*t1468*t1469;
            double t1472 = t1471+1.0;
            double t1473 = 1.0/t1472;
            double t1474 = kp-kp*t1473+1.0;
            double t1475 = 1.0/k;
            double t1476 = 1.0/(t1472*t1472);
            v_rho_a_rho_a_[index] = e*k*t1474*1.0/pow(t1467,2.0/3.0)*(4.0/3.0)-e*k*rho_a[index]*t1474*1.0/pow(t1467,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_aa[index]*mu_*t1475*1.0/pow(t1467,1.0E1/3.0)*t1476*(3.2E1/3.0)-e*(gamma_aa[index]* \
               gamma_aa[index])*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index])*1.0/(t1472*t1472*t1472)*t1469*(4.0/9.0)+e*gamma_aa[index]*mu_*rho_a[index]*t1475*1.0/ \
               pow(t1467,1.3E1/3.0)*t1476*3.2E1;
        } else if (rho_a[index] > cutoff_) {
            double t1616 = rho_a[index]*2.0;
            double t1617 = 1.0/(k*k);
            double t1618 = 1.0/kp;
            double t1619 = 1.0/pow(t1616,8.0/3.0);
            double t1620 = gamma_aa[index]*mu_*t1617*t1618*t1619;
            double t1621 = t1620+1.0;
            double t1622 = 1.0/t1621;
            double t1623 = kp-kp*t1622+1.0;
            double t1624 = 1.0/k;
            double t1625 = 1.0/(t1621*t1621);
            v_rho_a_rho_a_[index] = e*k*t1623*1.0/pow(t1616,2.0/3.0)*(4.0/3.0)-e*k*rho_a[index]*t1623*1.0/pow(t1616,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_aa[index]*mu_*t1624*1.0/pow(t1616,1.0E1/3.0)*t1625*(3.2E1/3.0)-e*(gamma_aa[index]* \
               gamma_aa[index])*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index])*1.0/(t1621*t1621*t1621)*t1618*(4.0/9.0)+e*gamma_aa[index]*mu_*rho_a[index]*t1624*1.0/ \
               pow(t1616,1.3E1/3.0)*t1625*3.2E1;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1479 = rho_b[index]*2.0;
            double t1480 = 1.0/(k*k);
            double t1481 = 1.0/kp;
            double t1482 = 1.0/pow(t1479,8.0/3.0);
            double t1483 = gamma_bb[index]*mu_*t1480*t1481*t1482;
            double t1484 = t1483+1.0;
            double t1485 = 1.0/t1484;
            double t1486 = kp-kp*t1485+1.0;
            double t1487 = 1.0/k;
            double t1488 = 1.0/(t1484*t1484);
            v_rho_b_rho_b_[index] = e*k*t1486*1.0/pow(t1479,2.0/3.0)*(4.0/3.0)-e*k*rho_b[index]*t1486*1.0/pow(t1479,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_bb[index]*mu_*t1487*1.0/pow(t1479,1.0E1/3.0)*t1488*(3.2E1/3.0)-e*(gamma_bb[index]* \
               gamma_bb[index])*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index])*t1481*1.0/(t1484*t1484*t1484)*(4.0/9.0)+e*gamma_bb[index]*mu_*rho_b[index]*t1487*1.0/ \
               pow(t1479,1.3E1/3.0)*t1488*3.2E1;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t1553 = rho_b[index]*2.0;
            double t1554 = 1.0/(k*k);
            double t1555 = 1.0/kp;
            double t1556 = 1.0/pow(t1553,8.0/3.0);
            double t1557 = gamma_bb[index]*mu_*t1554*t1555*t1556;
            double t1558 = t1557+1.0;
            double t1559 = 1.0/t1558;
            double t1560 = kp-kp*t1559+1.0;
            double t1561 = 1.0/k;
            double t1562 = 1.0/(t1558*t1558);
            v_rho_b_rho_b_[index] = e*k*t1560*1.0/pow(t1553,2.0/3.0)*(4.0/3.0)-e*k*rho_b[index]*t1560*1.0/pow(t1553,5.0/ \
               3.0)*(8.0/9.0)-e*gamma_bb[index]*mu_*t1561*1.0/pow(t1553,1.0E1/3.0)*t1562*(3.2E1/3.0)-e*(gamma_bb[index]* \
               gamma_bb[index])*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index])*t1555*1.0/(t1558*t1558*t1558)*(4.0/9.0)+e*gamma_bb[index]*mu_*rho_b[index]*t1561*1.0/ \
               pow(t1553,1.3E1/3.0)*t1562*3.2E1;
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1490 = rho_a[index]*2.0;
                double t1491 = 1.0/k;
                double t1492 = 1.0/(k*k);
                double t1493 = 1.0/kp;
                double t1494 = 1.0/pow(t1490,8.0/3.0);
                double t1495 = gamma_aa[index]*mu_*t1492*t1493*t1494;
                double t1496 = t1495+1.0;
                double t1497 = 1.0/(t1496*t1496);
                v_rho_a_gamma_aa_[index] = e*mu_*1.0/pow(t1490,7.0/3.0)*t1491*t1497-e*mu_*rho_a[index]*1.0/pow(t1490,1.0E1/ \
                   3.0)*t1491*t1497*(1.4E1/3.0)+e*gamma_aa[index]*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index])*t1493*1.0/(t1496*t1496*t1496)*(1.0/6.0);
            } else if (rho_a[index] > cutoff_) {
                double t1629 = rho_a[index]*2.0;
                double t1630 = 1.0/k;
                double t1631 = 1.0/(k*k);
                double t1632 = 1.0/kp;
                double t1633 = 1.0/pow(t1629,8.0/3.0);
                double t1634 = gamma_aa[index]*mu_*t1631*t1632*t1633;
                double t1635 = t1634+1.0;
                double t1636 = 1.0/(t1635*t1635);
                v_rho_a_gamma_aa_[index] = e*mu_*t1630*t1636*1.0/pow(t1629,7.0/3.0)-e*mu_*rho_a[index]*t1630*t1636* \
                   1.0/pow(t1629,1.0E1/3.0)*(1.4E1/3.0)+e*gamma_aa[index]*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index])*t1632*1.0/(t1635*t1635*t1635)*(1.0/6.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1503 = rho_b[index]*2.0;
                double t1504 = 1.0/k;
                double t1505 = 1.0/(k*k);
                double t1506 = 1.0/kp;
                double t1507 = 1.0/pow(t1503,8.0/3.0);
                double t1508 = gamma_bb[index]*mu_*t1505*t1506*t1507;
                double t1509 = t1508+1.0;
                double t1510 = 1.0/(t1509*t1509);
                v_rho_b_gamma_bb_[index] = e*mu_*t1510*1.0/pow(t1503,7.0/3.0)*t1504-e*mu_*rho_b[index]*t1510*1.0/ \
                   pow(t1503,1.0E1/3.0)*t1504*(1.4E1/3.0)+e*gamma_bb[index]*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index])*t1506*1.0/(t1509*t1509*t1509)*(1.0/6.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t1569 = rho_b[index]*2.0;
                double t1570 = 1.0/k;
                double t1571 = 1.0/(k*k);
                double t1572 = 1.0/kp;
                double t1573 = 1.0/pow(t1569,8.0/3.0);
                double t1574 = gamma_bb[index]*mu_*t1571*t1572*t1573;
                double t1575 = t1574+1.0;
                double t1576 = 1.0/(t1575*t1575);
                v_rho_b_gamma_bb_[index] = e*mu_*t1570*t1576*1.0/pow(t1569,7.0/3.0)-e*mu_*rho_b[index]*t1570*t1576* \
                   1.0/pow(t1569,1.0E1/3.0)*(1.4E1/3.0)+e*gamma_bb[index]*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index])*t1572*1.0/(t1575*t1575*t1575)*(1.0/6.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1512 = 1.0/kp;
                v_gamma_aa_gamma_aa_[index] = e*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index])*t1512*1.0/pow(gamma_aa[index]*1.0/(k*k)*mu_*t1512*1.0/pow(rho_a[index]*2.0,8.0/3.0)+ \
                   1.0,3.0)*(-1.0/1.6E1);
            } else if (rho_a[index] > cutoff_) {
                double t1643 = 1.0/kp;
                v_gamma_aa_gamma_aa_[index] = e*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index])*t1643*1.0/pow(gamma_aa[index]*1.0/(k*k)*mu_*t1643*1.0/pow(rho_a[index]*2.0,8.0/3.0)+ \
                   1.0,3.0)*(-1.0/1.6E1);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1518 = 1.0/kp;
                v_gamma_bb_gamma_bb_[index] = e*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index])*t1518*1.0/pow(gamma_bb[index]*1.0/(k*k)*mu_*t1518*1.0/pow(rho_b[index]*2.0,8.0/3.0)+ \
                   1.0,3.0)*(-1.0/1.6E1);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t1583 = 1.0/kp;
                v_gamma_bb_gamma_bb_[index] = e*1.0/(k*k*k)*(mu_*mu_)*1.0/(rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index])*t1583*1.0/pow(gamma_bb[index]*1.0/(k*k)*mu_*t1583*1.0/pow(rho_b[index]*2.0,8.0/3.0)+ \
                   1.0,3.0)*(-1.0/1.6E1);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

