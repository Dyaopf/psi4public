/**********************************************************
* EDF1_functional.cc: definitions for EDF1_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "EDF1_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

EDF1_Functional::EDF1_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "EDF1";
    description_ = "Empirical Density Function #1";
    citation_ = "R.D. Adamson, P.M.W. Gill, and J.A. Pople, Chem. Phys. Lett., 284, 6-11, 1998";
    
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double d1 = 3.5000000000000001E-03;
    params_.push_back(make_pair("d1",d1));
    double d2 = 4.1999999999999997E-03;
    params_.push_back(make_pair("d2",d2));
    double e0 = 1.0309520000000001E+00;
    params_.push_back(make_pair("e0",e0));
    double e1 = 1.0401700000000000E+01;
    params_.push_back(make_pair("e1",e1));
    double e2 = -8.4479299999999995E+00;
    params_.push_back(make_pair("e2",e2));
    double A = 5.5000000000000000E-02;
    params_.push_back(make_pair("A",A));
    double B = 1.5800000000000000E-01;
    params_.push_back(make_pair("B",B));
    double C = 2.5000000000000000E-01;
    params_.push_back(make_pair("C",C));
    double Dd = 3.5049999999999998E-01;
    params_.push_back(make_pair("Dd",Dd));
    double CFext = 3.6462398978764774E+01;
    params_.push_back(make_pair("CFext",CFext));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
EDF1_Functional::~EDF1_Functional()
{
}
void EDF1_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double c0 = params_[0].second;
    double d1 = params_[1].second;
    double d2 = params_[2].second;
    double e0 = params_[3].second;
    double e1 = params_[4].second;
    double e2 = params_[5].second;
    double A = params_[6].second;
    double B = params_[7].second;
    double C = params_[8].second;
    double Dd = params_[9].second;
    double CFext = params_[10].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t26768 = sqrt(gamma_aa[index]);
            double t26769 = 1/pow(rho_a[index],4.0/3.0);
            double t26770 = 1/pow(rho_a[index],8.0/3.0);
            double t26771 = t26768*t26769;
            double t26772 = log(t26771+sqrt(t26771*t26771+1.0));
            double t26773 = rho_a[index]*2.0;
            double t26774 = 1/pow(t26773,1.0/3.0);
            double t26775 = Dd*t26774;
            double t26776 = t26775+1.0;
            double t26777 = 1/t26776;
            double t26778 = rho_a[index]*rho_a[index];
            functional_[index] = pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t26770)/(d1*t26772* \
               t26768*t26769*6.0+1.0)+(d2*e2*gamma_aa[index]*t26770)/(d2*t26772*t26768*t26769*6.0+1.0))*-2.0-A*rho_a[index]* \
               t26777*2.0-A*B*1/pow(t26773,1.1E1/3.0)*t26777*exp(-C*t26774)*(t26778*(CFext*pow(rho_a[index],8.0/3.0) \
               *2.0-gamma_aa[index]*(C*t26774*(1.0/9.0)+Dd*t26774*t26777*(1.0/9.0)-1.1E1/9.0)+gamma_aa[index]*(C* \
               t26774*(1.0/1.8E1)+Dd*t26774*t26777*(1.0/1.8E1)-5.0/2.0)*2.0-gamma_aa[index]*(C*t26774*(7.0/1.8E1) \
               +Dd*t26774*t26777*(7.0/1.8E1)-4.7E1/1.8E1)*4.0)-gamma_aa[index]*t26778*(2.2E1/3.0));
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t26780 = sqrt(gamma_aa[index]);
            double t26781 = 1/pow(rho_a[index],4.0/3.0);
            double t26782 = 1/pow(rho_a[index],8.0/3.0);
            double t26783 = t26780*t26781;
            double t26784 = log(t26783+sqrt(t26783*t26783+1.0));
            double t26785 = d1*t26780*t26781*t26784*6.0;
            double t26786 = t26785+1.0;
            double t26787 = 1/t26786;
            double t26788 = 1/pow(rho_a[index],1.1E1/3.0);
            double t26789 = d2*t26780*t26781*t26784*6.0;
            double t26790 = t26789+1.0;
            double t26791 = 1/t26790;
            double t26792 = gamma_aa[index]*t26782;
            double t26793 = t26792+1.0;
            double t26794 = 1/sqrt(t26793);
            double t26795 = 1/pow(rho_a[index],7.0/3.0);
            double t26796 = rho_a[index]*2.0;
            double t26797 = 1/pow(t26796,1.0/3.0);
            double t26798 = Dd*t26797;
            double t26799 = t26798+1.0;
            double t26800 = rho_a[index]*rho_a[index];
            double t26801 = 1/t26799;
            double t26820 = C*t26797;
            double t26802 = exp(-t26820);
            double t26803 = 1/pow(t26796,4.0/3.0);
            double t26804 = 1/(t26799*t26799);
            double t26805 = Dd*Dd;
            double t26806 = 1/pow(t26796,5.0/3.0);
            double t26807 = C*t26797*(1.0/9.0);
            double t26808 = Dd*t26801*t26797*(1.0/9.0);
            double t26809 = t26807+t26808-1.1E1/9.0;
            double t26810 = gamma_aa[index]*t26809;
            double t26811 = C*t26797*(1.0/1.8E1);
            double t26812 = Dd*t26801*t26797*(1.0/1.8E1);
            double t26813 = t26811+t26812-5.0/2.0;
            double t26814 = C*t26797*(7.0/1.8E1);
            double t26815 = Dd*t26801*t26797*(7.0/1.8E1);
            double t26816 = t26814+t26815-4.7E1/1.8E1;
            double t26817 = gamma_aa[index]*t26816*4.0;
            double t26818 = pow(rho_a[index],8.0/3.0);
            double t26821 = gamma_aa[index]*t26813*2.0;
            double t26822 = CFext*t26818*2.0;
            double t26819 = t26810-t26821-t26822+t26817;
            double t26823 = t26800*t26819;
            double t26824 = gamma_aa[index]*t26800*(2.2E1/3.0);
            double t26825 = t26823+t26824;
            double t26826 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
            v_rho_a_[index] = -A*t26801+pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t26787*t26788*(8.0/3.0) \
               +d2*e2*gamma_aa[index]*t26791*t26788*(8.0/3.0)-d1*e1*gamma_aa[index]*t26782*1/(t26786*t26786)*(d1* \
               gamma_aa[index]*t26794*t26788*8.0+d1*t26780*t26784*t26795*8.0)-d2*e2*gamma_aa[index]*1/(t26790*t26790) \
               *t26782*(d2*gamma_aa[index]*t26794*t26788*8.0+d2*t26780*t26784*t26795*8.0))-pow(rho_a[index],1.0/3.0) \
               *(-c0*e0+d1*e1*gamma_aa[index]*t26782*t26787+d2*e2*gamma_aa[index]*t26782*t26791)*(4.0/3.0)-A*Dd*t26800* \
               t26804*1/pow(t26796,7.0/3.0)*(4.0/3.0)-A*B*t26801*t26802*t26825*1/pow(t26796,1.4E1/3.0)*(1.1E1/3.0) \
               +A*B*t26801*t26802*1/pow(t26796,1.1E1/3.0)*(-t26800*(CFext*pow(rho_a[index],5.0/3.0)*(8.0/3.0)+gamma_aa[index]* \
               (C*t26803*(1.0/2.7E1)+Dd*t26801*t26803*(1.0/2.7E1)-t26804*t26805*t26806*(1.0/2.7E1))-gamma_aa[index]* \
               (C*t26803*(1.0/5.4E1)+Dd*t26801*t26803*(1.0/5.4E1)-t26804*t26805*t26806*(1.0/5.4E1))*2.0+gamma_aa[index]* \
               (C*t26803*(7.0/5.4E1)+Dd*t26801*t26803*(7.0/5.4E1)-t26804*t26805*t26806*(7.0/5.4E1))*4.0)+gamma_aa[index]* \
               rho_a[index]*(2.2E1/3.0)+rho_a[index]*t26819)+A*B*C*t26801*t26802*t26825*t26826*(1.0/9.6E1)+A*B*Dd* \
               t26802*t26804*t26825*t26826*(1.0/9.6E1);
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t26828 = sqrt(gamma_aa[index]);
                double t26829 = 1/pow(rho_a[index],4.0/3.0);
                double t26830 = 1/pow(rho_a[index],8.0/3.0);
                double t26831 = t26828*t26829;
                double t26832 = log(t26831+sqrt(t26831*t26831+1.0));
                double t26833 = d1*t26832*t26828*t26829*6.0;
                double t26834 = t26833+1.0;
                double t26835 = gamma_aa[index]*t26830;
                double t26836 = t26835+1.0;
                double t26837 = 1/sqrt(t26836);
                double t26838 = 1/sqrt(gamma_aa[index]);
                double t26839 = d2*t26832*t26828*t26829*6.0;
                double t26840 = t26839+1.0;
                double t26841 = rho_a[index]*2.0;
                double t26842 = 1/pow(t26841,1.0/3.0);
                double t26843 = Dd*t26842;
                double t26844 = t26843+1.0;
                double t26845 = 1/t26844;
                double t26846 = rho_a[index]*rho_a[index];
                double t26847 = exp(-C*t26842);
                double t26848 = 1/pow(t26841,1.1E1/3.0);
                v_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*((d1*e1*t26830)/t26834+(d2*e2*t26830)/t26840-d1*e1* \
                   gamma_aa[index]*t26830*1/(t26834*t26834)*(d1*t26830*t26837*3.0+d1*t26832*t26829*t26838*3.0)-d2*e2* \
                   gamma_aa[index]*t26830*1/(t26840*t26840)*(d2*t26830*t26837*3.0+d2*t26832*t26829*t26838*3.0))*-2.0+ \
                   A*B*t26845*t26847*t26848*(t26846*(1.6E1/3.0)+t26846*(C*t26842*(7.0/9.0)+Dd*t26842*t26845*(7.0/9.0) \
                   -4.7E1/9.0))+A*B*t26845*t26847*t26848*(t26846+t26846*(C*t26842*(7.0/1.8E1)+Dd*t26842*t26845*(7.0/1.8E1) \
                   -1.3E1/1.8E1))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t26851 = sqrt(gamma_aa[index]);
            double t26852 = 1/pow(rho_a[index],4.0/3.0);
            double t26853 = 1/pow(rho_a[index],8.0/3.0);
            double t26854 = t26851*t26852;
            double t26855 = log(t26854+sqrt(t26854*t26854+1.0));
            double t26856 = d1*t26851*t26852*t26855*6.0;
            double t26857 = t26856+1.0;
            double t26858 = 1/t26857;
            double t26859 = 1/pow(rho_a[index],1.1E1/3.0);
            double t26860 = d2*t26851*t26852*t26855*6.0;
            double t26861 = t26860+1.0;
            double t26862 = 1/t26861;
            double t26863 = gamma_aa[index]*t26853;
            double t26864 = t26863+1.0;
            double t26865 = 1/sqrt(t26864);
            double t26866 = 1/pow(rho_a[index],7.0/3.0);
            double t26867 = 1/pow(rho_a[index],1.4E1/3.0);
            double t26868 = 1/(t26857*t26857);
            double t26869 = d1*gamma_aa[index]*t26865*t26859*8.0;
            double t26870 = d1*t26851*t26855*t26866*8.0;
            double t26871 = t26870+t26869;
            double t26872 = 1/(t26861*t26861);
            double t26873 = d2*gamma_aa[index]*t26865*t26859*8.0;
            double t26874 = d2*t26851*t26855*t26866*8.0;
            double t26875 = t26873+t26874;
            double t26876 = gamma_aa[index]*gamma_aa[index];
            double t26877 = 1/pow(rho_a[index],2.2E1/3.0);
            double t26878 = 1/pow(t26864,3.0/2.0);
            double t26879 = 1/pow(rho_a[index],1.0E1/3.0);
            double t26880 = rho_a[index]*2.0;
            double t26881 = 1/pow(t26880,1.0/3.0);
            double t26882 = Dd*t26881;
            double t26883 = t26882+1.0;
            double t26884 = 1/(t26883*t26883);
            double t26885 = rho_a[index]*rho_a[index];
            double t26886 = 1/t26883;
            double t26908 = C*t26881;
            double t26887 = exp(-t26908);
            double t26888 = 1/pow(t26880,1.1E1/3.0);
            double t26889 = 1/pow(t26880,4.0/3.0);
            double t26890 = Dd*Dd;
            double t26891 = 1/pow(t26880,5.0/3.0);
            double t26892 = 1/pow(t26880,7.0/3.0);
            double t26893 = 1/(t26883*t26883*t26883);
            double t26894 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t26895 = 1/pow(t26880,8.0/3.0);
            double t26896 = C*t26881*(1.0/9.0);
            double t26897 = Dd*t26881*t26886*(1.0/9.0);
            double t26898 = t26896+t26897-1.1E1/9.0;
            double t26899 = gamma_aa[index]*t26898;
            double t26900 = C*t26881*(1.0/1.8E1);
            double t26901 = Dd*t26881*t26886*(1.0/1.8E1);
            double t26902 = t26900+t26901-5.0/2.0;
            double t26903 = C*t26881*(7.0/1.8E1);
            double t26904 = Dd*t26881*t26886*(7.0/1.8E1);
            double t26905 = t26903+t26904-4.7E1/1.8E1;
            double t26906 = gamma_aa[index]*t26905*4.0;
            double t26907 = pow(rho_a[index],8.0/3.0);
            double t26909 = C*t26889*(1.0/2.7E1);
            double t26910 = Dd*t26886*t26889*(1.0/2.7E1);
            double t26924 = t26890*t26891*t26884*(1.0/2.7E1);
            double t26911 = t26910-t26924+t26909;
            double t26912 = gamma_aa[index]*t26911;
            double t26913 = C*t26889*(1.0/5.4E1);
            double t26914 = Dd*t26886*t26889*(1.0/5.4E1);
            double t26925 = t26890*t26891*t26884*(1.0/5.4E1);
            double t26915 = t26913+t26914-t26925;
            double t26916 = C*t26889*(7.0/5.4E1);
            double t26917 = Dd*t26886*t26889*(7.0/5.4E1);
            double t26927 = t26890*t26891*t26884*(7.0/5.4E1);
            double t26918 = t26916+t26917-t26927;
            double t26919 = gamma_aa[index]*t26918*4.0;
            double t26920 = pow(rho_a[index],5.0/3.0);
            double t26921 = CFext*t26920*(8.0/3.0);
            double t26926 = gamma_aa[index]*t26915*2.0;
            double t26922 = t26912+t26921-t26926+t26919;
            double t26942 = gamma_aa[index]*t26902*2.0;
            double t26943 = CFext*t26907*2.0;
            double t26923 = t26906-t26942-t26943+t26899;
            double t26928 = C*t26892*(4.0/8.1E1);
            double t26929 = Dd*t26892*t26886*(4.0/8.1E1);
            double t26930 = Dd*t26890*t26893*t26894*(1.0/3.24E2);
            double t26931 = t26930+t26928+t26929-t26890*t26884*t26895*(2.0/2.7E1);
            double t26932 = gamma_aa[index]*t26931;
            double t26933 = C*t26892*(2.0/8.1E1);
            double t26934 = Dd*t26892*t26886*(2.0/8.1E1);
            double t26935 = Dd*t26890*t26893*t26894*(1.0/6.48E2);
            double t26936 = t26933+t26934+t26935-t26890*t26884*t26895*(1.0/2.7E1);
            double t26937 = C*t26892*(1.4E1/8.1E1);
            double t26938 = Dd*t26892*t26886*(1.4E1/8.1E1);
            double t26939 = Dd*t26890*t26893*t26894*(7.0/6.48E2);
            double t26940 = t26937+t26938+t26939-t26890*t26884*t26895*(7.0/2.7E1);
            double t26941 = gamma_aa[index]*t26940*4.0;
            double t26944 = t26923*t26885;
            double t26945 = gamma_aa[index]*t26885*(2.2E1/3.0);
            double t26946 = t26944+t26945;
            double t26947 = 1/pow(t26880,1.9E1/3.0);
            double t26948 = gamma_aa[index]*rho_a[index]*(2.2E1/3.0);
            double t26949 = rho_a[index]*t26923;
            double t26952 = t26922*t26885;
            double t26950 = -t26952+t26948+t26949;
            double t26951 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
            double t26953 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]) \
               ;
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t26858*t26867*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t26862*t26867*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t26853*t26868*(d1*gamma_aa[index]* \
               t26865*t26867*4.0E1+d1*t26851*t26855*t26879*(5.6E1/3.0)-d1*t26876*t26877*t26878*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t26853*t26872*(d2*gamma_aa[index]*t26865*t26867*4.0E1+d2*t26851*t26855*t26879*(5.6E1/ \
               3.0)-d2*t26876*t26877*t26878*(3.2E1/3.0))+d1*e1*gamma_aa[index]*t26853*(t26871*t26871)*1/(t26857*t26857* \
               t26857)*2.0+d2*e2*gamma_aa[index]*1/(t26861*t26861*t26861)*t26853*(t26875*t26875)*2.0-d1*e1*gamma_aa[index]* \
               t26871*t26859*t26868*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t26872*t26875*t26859*(1.6E1/3.0))+pow(rho_a[index],1.0/ \
               3.0)*(d1*e1*gamma_aa[index]*t26858*t26859*(8.0/3.0)+d2*e2*gamma_aa[index]*t26862*t26859*(8.0/3.0)- \
               d1*e1*gamma_aa[index]*t26853*t26871*t26868-d2*e2*gamma_aa[index]*t26853*t26872*t26875)*(8.0/3.0)-1/ \
               pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t26853*t26858+d2*e2*gamma_aa[index]*t26853* \
               t26862)*(4.0/9.0)-A*Dd*rho_a[index]*t26892*t26884*(1.6E1/3.0)-A*t26890*t26893*t26885*t26888*(1.6E1/ \
               9.0)+A*Dd*1/pow(t26880,1.0E1/3.0)*t26884*t26885*(8.0E1/9.0)-A*B*t26950*1/pow(t26880,1.4E1/3.0)*t26886* \
               t26887*(4.4E1/3.0)+A*B*1/pow(t26880,1.7E1/3.0)*t26946*t26886*t26887*(3.08E2/9.0)+A*B*t26886*t26887* \
               t26888*(gamma_aa[index]*(8.0/3.0)+t26906+t26899-CFext*t26907*2.0-gamma_aa[index]*t26902*2.0-rho_a[index]* \
               t26922*2.0+t26885*(t26932+t26941-gamma_aa[index]*t26936*2.0))+A*B*t26886*t26887*t26888*(gamma_aa[index]* \
               (1.4E1/3.0)-rho_a[index]*t26922*2.0+t26885*(t26932+t26941-gamma_aa[index]*t26936*2.0-CFext*pow(rho_a[index],2.0/ \
               3.0)*(4.0E1/9.0)))+A*B*t26890*t26946*t26893*t26947*t26887*(4.0/9.0)+A*B*(C*C)*t26946*t26947*t26886* \
               t26887*(2.0/9.0)+A*B*C*t26950*t26951*t26886*t26887*(1.0/2.4E1)-A*B*C*t26953*t26946*t26886*t26887*(1.3E1/ \
               1.44E2)+A*B*Dd*t26950*t26951*t26884*t26887*(1.0/2.4E1)-A*B*Dd*t26953*t26946*t26884*t26887*(1.3E1/1.44E2) \
               +A*B*C*Dd*t26946*t26884*t26947*t26887*(4.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t26955 = sqrt(gamma_aa[index]);
                double t26956 = 1/pow(rho_a[index],4.0/3.0);
                double t26957 = 1/pow(rho_a[index],8.0/3.0);
                double t26958 = t26955*t26956;
                double t26959 = log(t26958+sqrt(t26958*t26958+1.0));
                double t26960 = d1*t26955*t26956*t26959*6.0;
                double t26961 = t26960+1.0;
                double t26962 = gamma_aa[index]*t26957;
                double t26963 = t26962+1.0;
                double t26964 = 1/sqrt(t26963);
                double t26965 = 1/sqrt(gamma_aa[index]);
                double t26966 = d2*t26955*t26956*t26959*6.0;
                double t26967 = t26966+1.0;
                double t26968 = 1/t26961;
                double t26969 = 1/pow(rho_a[index],1.1E1/3.0);
                double t26970 = 1/t26967;
                double t26971 = 1/(t26961*t26961);
                double t26972 = 1/(t26967*t26967);
                double t26973 = 1/pow(rho_a[index],7.0/3.0);
                double t26974 = 1/pow(rho_a[index],1.9E1/3.0);
                double t26975 = 1/pow(t26963,3.0/2.0);
                double t26976 = d1*t26964*t26957*3.0;
                double t26977 = d1*t26956*t26965*t26959*3.0;
                double t26978 = t26976+t26977;
                double t26979 = d2*t26964*t26957*3.0;
                double t26980 = d2*t26956*t26965*t26959*3.0;
                double t26981 = t26980+t26979;
                double t26982 = d1*gamma_aa[index]*t26964*t26969*8.0;
                double t26983 = d1*t26955*t26973*t26959*8.0;
                double t26984 = t26982+t26983;
                double t26985 = d2*gamma_aa[index]*t26964*t26969*8.0;
                double t26986 = d2*t26955*t26973*t26959*8.0;
                double t26987 = t26985+t26986;
                double t26988 = rho_a[index]*2.0;
                double t26989 = 1/pow(t26988,1.0/3.0);
                double t26990 = Dd*t26989;
                double t26991 = t26990+1.0;
                double t26992 = 1/t26991;
                double t26993 = 1/pow(t26988,4.0/3.0);
                double t27000 = C*t26989;
                double t26994 = exp(-t27000);
                double t26995 = 1/pow(t26988,1.1E1/3.0);
                double t26996 = rho_a[index]*rho_a[index];
                double t26997 = Dd*Dd;
                double t26998 = 1/(t26991*t26991);
                double t26999 = 1/pow(t26988,5.0/3.0);
                double t27001 = C*t26989*(7.0/9.0);
                double t27002 = Dd*t26992*t26989*(7.0/9.0);
                double t27003 = t27001+t27002-4.7E1/9.0;
                double t27004 = 1/pow(t26988,1.4E1/3.0);
                double t27005 = C*t26989*(7.0/1.8E1);
                double t27006 = Dd*t26992*t26989*(7.0/1.8E1);
                double t27007 = t27005+t27006-1.3E1/1.8E1;
                double t27008 = 1/rho_a[index];
                double t27009 = C*t26989*(1.0/9.0);
                double t27010 = Dd*t26992*t26989*(1.0/9.0);
                double t27011 = t27010+t27009-1.1E1/9.0;
                double t27012 = C*t26993*(7.0/5.4E1);
                double t27013 = Dd*t26992*t26993*(7.0/5.4E1);
                double t27014 = t26996*t27003;
                double t27015 = t26996*(1.6E1/3.0);
                double t27016 = t27014+t27015;
                double t27017 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t27018 = t26996*t27007;
                double t27019 = t26996+t27018;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t26968*t26969*(-8.0/3.0)-d2*e2*t26970* \
                   t26969*(8.0/3.0)+d1*e1*t26971*t26957*t26984+d2*e2*t26972*t26957*t26987+d1*e1*gamma_aa[index]*t26971* \
                   t26957*(d1*t26964*t26969*1.2E1-d1*gamma_aa[index]*t26974*t26975*4.0+d1*t26973*t26965*t26959*4.0)+d2* \
                   e2*gamma_aa[index]*t26972*t26957*(d2*t26964*t26969*1.2E1-d2*gamma_aa[index]*t26974*t26975*4.0+d2*t26973* \
                   t26965*t26959*4.0)+d1*e1*gamma_aa[index]*t26971*t26969*t26978*(8.0/3.0)+d2*e2*gamma_aa[index]*t26972* \
                   t26981*t26969*(8.0/3.0)-d1*e1*gamma_aa[index]*1/(t26961*t26961*t26961)*t26957*t26984*t26978*2.0-d2* \
                   e2*gamma_aa[index]*t26981*t26957*1/(t26967*t26967*t26967)*t26987*2.0)-pow(rho_a[index],1.0/3.0)*(d1* \
                   e1*t26957*t26968+d2*e2*t26970*t26957-d1*e1*gamma_aa[index]*t26971*t26957*t26978-d2*e2*gamma_aa[index]* \
                   t26972*t26981*t26957)*(4.0/3.0)-A*B*t26992*t26994*t26995*(t26996*(t27012+t27013-t27011*t27008*(1.0/ \
                   4.0)-t26997*t26998*t26999*(7.0/5.4E1))-rho_a[index]*t27007)+A*B*t26992*t26994*t26995*(rho_a[index]* \
                   (1.6E1/3.0)+rho_a[index]*t27003-t26996*(C*t26993*(7.0/2.7E1)+Dd*t26992*t26993*(7.0/2.7E1)-t26997*t26998* \
                   t26999*(7.0/2.7E1)))+A*B*t26992*t26994*t26995*(t26988-t26996*(t27012+t27013+t27011*t27008*(1.0/4.0) \
                   -t26997*t26998*t26999*(7.0/5.4E1))+rho_a[index]*t27007)-A*B*t26992*t26994*t27004*t27016*(1.1E1/3.0) \
                   -A*B*t26992*t26994*t27004*t27019*(2.2E1/3.0)+A*B*C*t26992*t26994*t27016*t27017*(1.0/9.6E1)+A*B*C*t26992* \
                   t26994*t27017*t27019*(1.0/4.8E1)+A*B*Dd*t26994*t26998*t27016*t27017*(1.0/9.6E1)+A*B*Dd*t26994*t26998* \
                   t27017*t27019*(1.0/4.8E1);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t27021 = 1/pow(rho_a[index],8.0/3.0);
                double t27022 = 1/pow(rho_a[index],4.0/3.0);
                double t27023 = sqrt(gamma_aa[index]);
                double t27024 = t27022*t27023;
                double t27025 = log(t27024+sqrt(t27024*t27024+1.0));
                double t27026 = gamma_aa[index]*t27021;
                double t27027 = t27026+1.0;
                double t27028 = 1/sqrt(t27027);
                double t27029 = 1/sqrt(gamma_aa[index]);
                double t27030 = d1*t27021*t27028*3.0;
                double t27031 = d1*t27022*t27025*t27029*3.0;
                double t27032 = t27030+t27031;
                double t27033 = d1*t27022*t27023*t27025*6.0;
                double t27034 = t27033+1.0;
                double t27035 = d2*t27021*t27028*3.0;
                double t27036 = d2*t27022*t27025*t27029*3.0;
                double t27037 = t27035+t27036;
                double t27038 = d2*t27022*t27023*t27025*6.0;
                double t27039 = t27038+1.0;
                double t27040 = 1/(t27034*t27034);
                double t27041 = 1/(t27039*t27039);
                double t27042 = 1/pow(rho_a[index],1.6E1/3.0);
                double t27043 = 1/pow(t27027,3.0/2.0);
                double t27044 = 1/gamma_aa[index];
                double t27045 = 1/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*t27021*t27040*t27032*-2.0-d2*e2*t27021* \
                   t27041*t27037*2.0+d1*e1*gamma_aa[index]*t27021*(t27032*t27032)*1/(t27034*t27034*t27034)*2.0+d2*e2* \
                   gamma_aa[index]*t27021*(t27037*t27037)*1/(t27039*t27039*t27039)*2.0+d1*e1*gamma_aa[index]*t27021*t27040* \
                   (d1*t27042*t27043*(3.0/2.0)+d1*t27022*t27025*t27045*(3.0/2.0)-d1*t27021*t27044*t27028*(3.0/2.0))+d2* \
                   e2*gamma_aa[index]*t27021*t27041*(d2*t27042*t27043*(3.0/2.0)+d2*t27022*t27025*t27045*(3.0/2.0)-d2* \
                   t27021*t27044*t27028*(3.0/2.0)))*-2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void EDF1_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double c0 = params_[0].second;
    double d1 = params_[1].second;
    double d2 = params_[2].second;
    double e0 = params_[3].second;
    double e1 = params_[4].second;
    double e2 = params_[5].second;
    double A = params_[6].second;
    double B = params_[7].second;
    double C = params_[8].second;
    double Dd = params_[9].second;
    double CFext = params_[10].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t25616 = sqrt(gamma_aa[index]);
            double t25617 = 1/pow(rho_a[index],4.0/3.0);
            double t25618 = 1/pow(rho_a[index],8.0/3.0);
            double t25619 = t25616*t25617;
            double t25620 = log(t25619+sqrt(t25619*t25619+1.0));
            double t25621 = sqrt(gamma_bb[index]);
            double t25622 = 1/pow(rho_b[index],4.0/3.0);
            double t25623 = 1/pow(rho_b[index],8.0/3.0);
            double t25624 = t25621*t25622;
            double t25625 = log(t25624+sqrt(t25624*t25624+1.0));
            double t25626 = rho_a[index]+rho_b[index];
            double t25627 = 1/pow(t25626,1.0/3.0);
            double t25628 = Dd*t25627;
            double t25629 = t25628+1.0;
            double t25630 = 1/t25629;
            double t25631 = t25626*t25626;
            double t25632 = t25631*(2.0/3.0);
            double t25633 = gamma_ab[index]*2.0;
            double t25634 = gamma_aa[index]+gamma_bb[index]+t25633;
            double t25635 = 1/t25626;
            functional_[index] = -pow(rho_b[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_bb[index]*t25623)/(d1*t25621* \
               t25622*t25625*6.0+1.0)+(d2*e2*gamma_bb[index]*t25623)/(d2*t25621*t25622*t25625*6.0+1.0))-pow(rho_a[index],4.0/ \
               3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t25618)/(d1*t25620*t25616*t25617*6.0+1.0)+(d2*e2*gamma_aa[index]* \
               t25618)/(d2*t25620*t25616*t25617*6.0+1.0))-A*rho_a[index]*rho_b[index]*t25630*t25635*4.0-A*B*t25630* \
               1/pow(t25626,1.1E1/3.0)*exp(-C*t25627)*(t25631*t25634*(-2.0/3.0)+gamma_aa[index]*(t25632-rho_b[index]* \
               rho_b[index])+gamma_bb[index]*(t25632-rho_a[index]*rho_a[index])+rho_a[index]*rho_b[index]*((gamma_aa[index]+ \
               gamma_bb[index])*(C*t25627*(1.0/1.8E1)+Dd*t25630*t25627*(1.0/1.8E1)-5.0/2.0)+CFext*(pow(rho_a[index],8.0/ \
               3.0)+pow(rho_b[index],8.0/3.0))-t25634*(C*t25627*(7.0/1.8E1)+Dd*t25630*t25627*(7.0/1.8E1)-4.7E1/1.8E1) \
               -t25635*(gamma_aa[index]*rho_a[index]+gamma_bb[index]*rho_b[index])*(C*t25627*(1.0/9.0)+Dd*t25630* \
               t25627*(1.0/9.0)-1.1E1/9.0)));
        } else if (rho_a[index] > cutoff_) {
            double t26575 = sqrt(gamma_aa[index]);
            double t26576 = 1/pow(rho_a[index],4.0/3.0);
            double t26577 = 1/pow(rho_a[index],8.0/3.0);
            double t26578 = t26575*t26576;
            double t26579 = log(t26578+sqrt(t26578*t26578+1.0));
            functional_[index] = -pow(rho_a[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_aa[index]*t26577)/(d1*t26575* \
               t26576*t26579*6.0+1.0)+(d2*e2*gamma_aa[index]*t26577)/(d2*t26575*t26576*t26579*6.0+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t26418 = sqrt(gamma_bb[index]);
            double t26419 = 1/pow(rho_b[index],4.0/3.0);
            double t26420 = 1/pow(rho_b[index],8.0/3.0);
            double t26421 = t26418*t26419;
            double t26422 = log(t26421+sqrt(t26421*t26421+1.0));
            functional_[index] = -pow(rho_b[index],4.0/3.0)*(-c0*e0+(d1*e1*gamma_bb[index]*t26420)/(d1*t26422* \
               t26418*t26419*6.0+1.0)+(d2*e2*gamma_bb[index]*t26420)/(d2*t26422*t26418*t26419*6.0+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t25637 = sqrt(gamma_aa[index]);
            double t25638 = 1/pow(rho_a[index],4.0/3.0);
            double t25639 = 1/pow(rho_a[index],8.0/3.0);
            double t25640 = t25637*t25638;
            double t25641 = log(t25640+sqrt(t25640*t25640+1.0));
            double t25642 = d1*t25641*t25637*t25638*6.0;
            double t25643 = t25642+1.0;
            double t25644 = 1/t25643;
            double t25645 = 1/pow(rho_a[index],1.1E1/3.0);
            double t25646 = d2*t25641*t25637*t25638*6.0;
            double t25647 = t25646+1.0;
            double t25648 = 1/t25647;
            double t25649 = gamma_aa[index]*t25639;
            double t25650 = t25649+1.0;
            double t25651 = 1/sqrt(t25650);
            double t25652 = 1/pow(rho_a[index],7.0/3.0);
            double t25653 = rho_a[index]+rho_b[index];
            double t25654 = 1/pow(t25653,1.0/3.0);
            double t25655 = Dd*t25654;
            double t25656 = t25655+1.0;
            double t25657 = 1/t25656;
            double t25658 = t25653*t25653;
            double t25659 = t25658*(2.0/3.0);
            double t25660 = gamma_ab[index]*2.0;
            double t25661 = gamma_aa[index]+gamma_bb[index]+t25660;
            double t25662 = 1/t25653;
            double t25689 = C*t25654;
            double t25663 = exp(-t25689);
            double t25664 = C*t25654*(7.0/1.8E1);
            double t25665 = Dd*t25654*t25657*(7.0/1.8E1);
            double t25666 = t25664+t25665-4.7E1/1.8E1;
            double t25667 = t25661*t25666;
            double t25668 = gamma_aa[index]+gamma_bb[index];
            double t25669 = C*t25654*(1.0/1.8E1);
            double t25670 = Dd*t25654*t25657*(1.0/1.8E1);
            double t25671 = t25670+t25669-5.0/2.0;
            double t25672 = pow(rho_a[index],8.0/3.0);
            double t25673 = pow(rho_b[index],8.0/3.0);
            double t25674 = t25672+t25673;
            double t25675 = gamma_aa[index]*rho_a[index];
            double t25676 = gamma_bb[index]*rho_b[index];
            double t25677 = t25675+t25676;
            double t25678 = C*t25654*(1.0/9.0);
            double t25679 = Dd*t25654*t25657*(1.0/9.0);
            double t25680 = t25678+t25679-1.1E1/9.0;
            double t25681 = t25662*t25680*t25677;
            double t25697 = t25671*t25668;
            double t25698 = CFext*t25674;
            double t25682 = t25681+t25667-t25697-t25698;
            double t25683 = rho_b[index]*(4.0/3.0);
            double t25684 = 1/pow(t25653,4.0/3.0);
            double t25685 = 1/(t25656*t25656);
            double t25686 = Dd*Dd;
            double t25687 = 1/pow(t25653,5.0/3.0);
            double t25688 = 1/(t25653*t25653);
            double t25690 = rho_b[index]*rho_b[index];
            double t25691 = t25690-t25659;
            double t25692 = gamma_aa[index]*t25691;
            double t25693 = rho_a[index]*rho_a[index];
            double t25694 = t25693-t25659;
            double t25695 = gamma_bb[index]*t25694;
            double t25696 = t25661*t25658*(2.0/3.0);
            double t25699 = rho_a[index]*rho_b[index]*t25682;
            double t25700 = 1/(t25653*t25653*t25653*t25653*t25653);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t25644*t25645*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t25645*t25648*(8.0/3.0)-d1*e1*gamma_aa[index]*1/(t25643*t25643)*t25639*(d1*gamma_aa[index]* \
               t25651*t25645*8.0+d1*t25641*t25652*t25637*8.0)-d2*e2*gamma_aa[index]*1/(t25647*t25647)*t25639*(d2* \
               gamma_aa[index]*t25651*t25645*8.0+d2*t25641*t25652*t25637*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t25644*t25639+d2*e2*gamma_aa[index]*t25639*t25648)*(4.0/3.0)-A*rho_b[index]* \
               t25662*t25657*4.0+A*rho_a[index]*rho_b[index]*t25657*t25688*4.0+A*B*1/pow(t25653,1.1E1/3.0)*t25663* \
               t25657*(rho_b[index]*t25682-gamma_aa[index]*(rho_a[index]*(4.0/3.0)+t25683)+gamma_bb[index]*(rho_a[index]* \
               (2.0/3.0)-t25683)+t25661*(rho_a[index]*2.0+rho_b[index]*2.0)*(2.0/3.0)-rho_a[index]*rho_b[index]*(CFext* \
               pow(rho_a[index],5.0/3.0)*(8.0/3.0)-t25668*(C*t25684*(1.0/5.4E1)+Dd*t25657*t25684*(1.0/5.4E1)-t25685* \
               t25686*t25687*(1.0/5.4E1))+t25661*(C*t25684*(7.0/5.4E1)+Dd*t25657*t25684*(7.0/5.4E1)-t25685*t25686* \
               t25687*(7.0/5.4E1))+t25662*t25677*(C*t25684*(1.0/2.7E1)+Dd*t25657*t25684*(1.0/2.7E1)-t25685*t25686* \
               t25687*(1.0/2.7E1))-gamma_aa[index]*t25662*t25680+t25680*t25677*t25688))-A*Dd*rho_a[index]*rho_b[index]* \
               1/pow(t25653,7.0/3.0)*t25685*(4.0/3.0)-A*B*1/pow(t25653,1.4E1/3.0)*t25663*t25657*(t25692+t25695+t25696+ \
               t25699)*(1.1E1/3.0)+A*B*C*t25700*t25663*t25657*(t25692+t25695+t25696+t25699)*(1.0/3.0)+A*B*Dd*t25700* \
               t25663*t25685*(t25692+t25695+t25696+t25699)*(1.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t26581 = sqrt(gamma_aa[index]);
            double t26582 = 1/pow(rho_a[index],4.0/3.0);
            double t26583 = 1/pow(rho_a[index],8.0/3.0);
            double t26584 = t26581*t26582;
            double t26585 = log(t26584+sqrt(t26584*t26584+1.0));
            double t26586 = d1*t26581*t26582*t26585*6.0;
            double t26587 = t26586+1.0;
            double t26588 = 1/t26587;
            double t26589 = 1/pow(rho_a[index],1.1E1/3.0);
            double t26590 = d2*t26581*t26582*t26585*6.0;
            double t26591 = t26590+1.0;
            double t26592 = 1/t26591;
            double t26593 = gamma_aa[index]*t26583;
            double t26594 = t26593+1.0;
            double t26595 = 1/sqrt(t26594);
            double t26596 = 1/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t26588*t26589*(8.0/3.0)+d2*e2* \
               gamma_aa[index]*t26592*t26589*(8.0/3.0)-d1*e1*gamma_aa[index]*t26583*1/(t26587*t26587)*(d1*gamma_aa[index]* \
               t26595*t26589*8.0+d1*t26581*t26585*t26596*8.0)-d2*e2*gamma_aa[index]*1/(t26591*t26591)*t26583*(d2* \
               gamma_aa[index]*t26595*t26589*8.0+d2*t26581*t26585*t26596*8.0))-pow(rho_a[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_aa[index]*t26583*t26588+d2*e2*gamma_aa[index]*t26583*t26592)*(4.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t25702 = sqrt(gamma_bb[index]);
            double t25703 = 1/pow(rho_b[index],4.0/3.0);
            double t25704 = 1/pow(rho_b[index],8.0/3.0);
            double t25705 = t25702*t25703;
            double t25706 = log(t25705+sqrt(t25705*t25705+1.0));
            double t25707 = d1*t25702*t25703*t25706*6.0;
            double t25708 = t25707+1.0;
            double t25709 = 1/t25708;
            double t25710 = 1/pow(rho_b[index],1.1E1/3.0);
            double t25711 = d2*t25702*t25703*t25706*6.0;
            double t25712 = t25711+1.0;
            double t25713 = 1/t25712;
            double t25714 = gamma_bb[index]*t25704;
            double t25715 = t25714+1.0;
            double t25716 = 1/sqrt(t25715);
            double t25717 = 1/pow(rho_b[index],7.0/3.0);
            double t25718 = rho_a[index]+rho_b[index];
            double t25719 = 1/pow(t25718,1.0/3.0);
            double t25720 = Dd*t25719;
            double t25721 = t25720+1.0;
            double t25722 = 1/t25721;
            double t25723 = t25718*t25718;
            double t25724 = t25723*(2.0/3.0);
            double t25725 = gamma_ab[index]*2.0;
            double t25726 = gamma_aa[index]+gamma_bb[index]+t25725;
            double t25727 = 1/t25718;
            double t25754 = C*t25719;
            double t25728 = exp(-t25754);
            double t25729 = C*t25719*(7.0/1.8E1);
            double t25730 = Dd*t25722*t25719*(7.0/1.8E1);
            double t25731 = t25730+t25729-4.7E1/1.8E1;
            double t25732 = t25731*t25726;
            double t25733 = gamma_aa[index]+gamma_bb[index];
            double t25734 = C*t25719*(1.0/1.8E1);
            double t25735 = Dd*t25722*t25719*(1.0/1.8E1);
            double t25736 = t25734+t25735-5.0/2.0;
            double t25737 = pow(rho_a[index],8.0/3.0);
            double t25738 = pow(rho_b[index],8.0/3.0);
            double t25739 = t25737+t25738;
            double t25740 = gamma_aa[index]*rho_a[index];
            double t25741 = gamma_bb[index]*rho_b[index];
            double t25742 = t25740+t25741;
            double t25743 = C*t25719*(1.0/9.0);
            double t25744 = Dd*t25722*t25719*(1.0/9.0);
            double t25745 = t25743+t25744-1.1E1/9.0;
            double t25746 = t25742*t25727*t25745;
            double t25761 = t25733*t25736;
            double t25762 = CFext*t25739;
            double t25747 = t25732-t25761-t25762+t25746;
            double t25748 = rho_a[index]*(4.0/3.0);
            double t25749 = 1/pow(t25718,4.0/3.0);
            double t25750 = 1/(t25721*t25721);
            double t25751 = Dd*Dd;
            double t25752 = 1/pow(t25718,5.0/3.0);
            double t25753 = 1/(t25718*t25718);
            double t25755 = rho_b[index]*rho_b[index];
            double t25756 = t25724-t25755;
            double t25757 = gamma_aa[index]*t25756;
            double t25758 = rho_a[index]*rho_a[index];
            double t25759 = t25724-t25758;
            double t25760 = gamma_bb[index]*t25759;
            double t25765 = t25723*t25726*(2.0/3.0);
            double t25766 = rho_a[index]*rho_b[index]*t25747;
            double t25763 = t25760-t25765+t25757-t25766;
            double t25764 = 1/(t25718*t25718*t25718*t25718*t25718);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t25710*t25709*(8.0/3.0)+d2*e2* \
               gamma_bb[index]*t25710*t25713*(8.0/3.0)-d1*e1*gamma_bb[index]*t25704*1/(t25708*t25708)*(d1*gamma_bb[index]* \
               t25710*t25716*8.0+d1*t25702*t25706*t25717*8.0)-d2*e2*gamma_bb[index]*1/(t25712*t25712)*t25704*(d2* \
               gamma_bb[index]*t25710*t25716*8.0+d2*t25702*t25706*t25717*8.0))-pow(rho_b[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_bb[index]*t25704*t25709+d2*e2*gamma_bb[index]*t25704*t25713)*(4.0/3.0)-A*rho_a[index]* \
               t25722*t25727*4.0+A*rho_a[index]*rho_b[index]*t25722*t25753*4.0+A*B*t25722*1/pow(t25718,1.1E1/3.0) \
               *t25728*(rho_a[index]*t25747-gamma_bb[index]*(rho_b[index]*(4.0/3.0)+t25748)+gamma_aa[index]*(rho_b[index]* \
               (2.0/3.0)-t25748)+t25726*(rho_a[index]*2.0+rho_b[index]*2.0)*(2.0/3.0)-rho_a[index]*rho_b[index]*(CFext* \
               pow(rho_b[index],5.0/3.0)*(8.0/3.0)-t25733*(C*t25749*(1.0/5.4E1)+Dd*t25722*t25749*(1.0/5.4E1)-t25750* \
               t25751*t25752*(1.0/5.4E1))+t25726*(C*t25749*(7.0/5.4E1)+Dd*t25722*t25749*(7.0/5.4E1)-t25750*t25751* \
               t25752*(7.0/5.4E1))+t25742*t25727*(C*t25749*(1.0/2.7E1)+Dd*t25722*t25749*(1.0/2.7E1)-t25750*t25751* \
               t25752*(1.0/2.7E1))-gamma_bb[index]*t25727*t25745+t25742*t25753*t25745))-A*Dd*rho_a[index]*rho_b[index]* \
               t25750*1/pow(t25718,7.0/3.0)*(4.0/3.0)+A*B*t25722*1/pow(t25718,1.4E1/3.0)*t25763*t25728*(1.1E1/3.0) \
               -A*B*C*t25722*t25763*t25728*t25764*(1.0/3.0)-A*B*Dd*t25750*t25763*t25728*t25764*(1.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t26425 = sqrt(gamma_bb[index]);
            double t26426 = 1/pow(rho_b[index],4.0/3.0);
            double t26427 = 1/pow(rho_b[index],8.0/3.0);
            double t26428 = t26425*t26426;
            double t26429 = log(t26428+sqrt(t26428*t26428+1.0));
            double t26430 = d1*t26425*t26426*t26429*6.0;
            double t26431 = t26430+1.0;
            double t26432 = 1/t26431;
            double t26433 = 1/pow(rho_b[index],1.1E1/3.0);
            double t26434 = d2*t26425*t26426*t26429*6.0;
            double t26435 = t26434+1.0;
            double t26436 = 1/t26435;
            double t26437 = gamma_bb[index]*t26427;
            double t26438 = t26437+1.0;
            double t26439 = 1/sqrt(t26438);
            double t26440 = 1/pow(rho_b[index],7.0/3.0);
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t26432*t26433*(8.0/3.0)+d2*e2* \
               gamma_bb[index]*t26433*t26436*(8.0/3.0)-d1*e1*gamma_bb[index]*1/(t26431*t26431)*t26427*(d1*gamma_bb[index]* \
               t26433*t26439*8.0+d1*t26440*t26425*t26429*8.0)-d2*e2*gamma_bb[index]*1/(t26435*t26435)*t26427*(d2* \
               gamma_bb[index]*t26433*t26439*8.0+d2*t26440*t26425*t26429*8.0))-pow(rho_b[index],1.0/3.0)*(-c0*e0+ \
               d1*e1*gamma_bb[index]*t26432*t26427+d2*e2*gamma_bb[index]*t26427*t26436)*(4.0/3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t25768 = sqrt(gamma_aa[index]);
                double t25769 = 1/pow(rho_a[index],4.0/3.0);
                double t25770 = 1/pow(rho_a[index],8.0/3.0);
                double t25771 = t25768*t25769;
                double t25772 = log(t25771+sqrt(t25771*t25771+1.0));
                double t25773 = d1*t25772*t25768*t25769*6.0;
                double t25774 = t25773+1.0;
                double t25775 = gamma_aa[index]*t25770;
                double t25776 = t25775+1.0;
                double t25777 = 1/sqrt(t25776);
                double t25778 = 1/sqrt(gamma_aa[index]);
                double t25779 = d2*t25772*t25768*t25769*6.0;
                double t25780 = t25779+1.0;
                double t25781 = rho_a[index]+rho_b[index];
                double t25782 = 1/pow(t25781,1.0/3.0);
                double t25783 = Dd*t25782;
                double t25784 = t25783+1.0;
                double t25785 = 1/t25784;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d1*e1*t25770)/t25774+(d2*e2*t25770)/t25780-d1*e1* \
                   gamma_aa[index]*t25770*1/(t25774*t25774)*(d1*t25770*t25777*3.0+d1*t25772*t25769*t25778*3.0)-d2*e2* \
                   gamma_aa[index]*t25770*1/(t25780*t25780)*(d2*t25770*t25777*3.0+d2*t25772*t25769*t25778*3.0))+A*B*1/ \
                   pow(t25781,1.1E1/3.0)*t25785*exp(-C*t25782)*(rho_b[index]*rho_b[index]+rho_a[index]*rho_b[index]*(C* \
                   t25782*(1.0/3.0)+Dd*t25782*t25785*(1.0/3.0)+(rho_a[index]*(C*t25782*(1.0/9.0)+Dd*t25782*t25785*(1.0/ \
                   9.0)-1.1E1/9.0))/t25781-1.0/9.0));
            } else if (rho_a[index] > cutoff_) {
                double t26599 = sqrt(gamma_aa[index]);
                double t26600 = 1/pow(rho_a[index],4.0/3.0);
                double t26601 = 1/pow(rho_a[index],8.0/3.0);
                double t26602 = t26600*t26599;
                double t26603 = log(t26602+sqrt(t26602*t26602+1.0));
                double t26604 = d1*t26600*t26603*t26599*6.0;
                double t26605 = t26604+1.0;
                double t26606 = gamma_aa[index]*t26601;
                double t26607 = t26606+1.0;
                double t26608 = 1/sqrt(t26607);
                double t26609 = 1/sqrt(gamma_aa[index]);
                double t26610 = d2*t26600*t26603*t26599*6.0;
                double t26611 = t26610+1.0;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d1*e1*t26601)/t26605+(d2*e2*t26601)/t26611-d1*e1* \
                   gamma_aa[index]*t26601*1/(t26605*t26605)*(d1*t26601*t26608*3.0+d1*t26600*t26603*t26609*3.0)-d2*e2* \
                   gamma_aa[index]*t26601*1/(t26611*t26611)*(d2*t26601*t26608*3.0+d2*t26600*t26603*t26609*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t25787 = rho_a[index]+rho_b[index];
                double t25788 = 1/pow(t25787,1.0/3.0);
                double t25789 = Dd*t25788;
                double t25790 = t25789+1.0;
                double t25791 = 1/t25790;
                v_gamma_ab_[index] = A*B*t25791*1/pow(t25787,1.1E1/3.0)*exp(-C*t25788)*((t25787*t25787)*(4.0/3.0) \
                   +rho_a[index]*rho_b[index]*(C*t25788*(7.0/9.0)+Dd*t25791*t25788*(7.0/9.0)-4.7E1/9.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t25793 = sqrt(gamma_bb[index]);
                double t25794 = 1/pow(rho_b[index],4.0/3.0);
                double t25795 = 1/pow(rho_b[index],8.0/3.0);
                double t25796 = t25793*t25794;
                double t25797 = log(t25796+sqrt(t25796*t25796+1.0));
                double t25798 = d1*t25793*t25794*t25797*6.0;
                double t25799 = t25798+1.0;
                double t25800 = gamma_bb[index]*t25795;
                double t25801 = t25800+1.0;
                double t25802 = 1/sqrt(t25801);
                double t25803 = 1/sqrt(gamma_bb[index]);
                double t25804 = d2*t25793*t25794*t25797*6.0;
                double t25805 = t25804+1.0;
                double t25806 = rho_a[index]+rho_b[index];
                double t25807 = 1/pow(t25806,1.0/3.0);
                double t25808 = Dd*t25807;
                double t25809 = t25808+1.0;
                double t25810 = 1/t25809;
                v_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*((d1*e1*t25795)/t25799+(d2*e2*t25795)/t25805-d1*e1* \
                   gamma_bb[index]*t25795*1/(t25799*t25799)*(d1*t25802*t25795*3.0+d1*t25803*t25794*t25797*3.0)-d2*e2* \
                   gamma_bb[index]*1/(t25805*t25805)*t25795*(d2*t25802*t25795*3.0+d2*t25803*t25794*t25797*3.0))+A*B*t25810* \
                   1/pow(t25806,1.1E1/3.0)*exp(-C*t25807)*(rho_a[index]*rho_a[index]+rho_a[index]*rho_b[index]*(C*t25807* \
                   (1.0/3.0)+Dd*t25810*t25807*(1.0/3.0)+(rho_b[index]*(C*t25807*(1.0/9.0)+Dd*t25810*t25807*(1.0/9.0)- \
                   1.1E1/9.0))/t25806-1.0/9.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t26444 = sqrt(gamma_bb[index]);
                double t26445 = 1/pow(rho_b[index],4.0/3.0);
                double t26446 = 1/pow(rho_b[index],8.0/3.0);
                double t26447 = t26444*t26445;
                double t26448 = log(t26447+sqrt(t26447*t26447+1.0));
                double t26449 = d1*t26444*t26445*t26448*6.0;
                double t26450 = t26449+1.0;
                double t26451 = gamma_bb[index]*t26446;
                double t26452 = t26451+1.0;
                double t26453 = 1/sqrt(t26452);
                double t26454 = 1/sqrt(gamma_bb[index]);
                double t26455 = d2*t26444*t26445*t26448*6.0;
                double t26456 = t26455+1.0;
                v_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*((d1*e1*t26446)/t26450+(d2*e2*t26446)/t26456-d1*e1* \
                   gamma_bb[index]*1/(t26450*t26450)*t26446*(d1*t26453*t26446*3.0+d1*t26445*t26454*t26448*3.0)-d2*e2* \
                   gamma_bb[index]*t26446*1/(t26456*t26456)*(d2*t26453*t26446*3.0+d2*t26445*t26454*t26448*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t25814 = sqrt(gamma_aa[index]);
            double t25815 = 1/pow(rho_a[index],4.0/3.0);
            double t25816 = 1/pow(rho_a[index],8.0/3.0);
            double t25817 = t25814*t25815;
            double t25818 = log(t25817+sqrt(t25817*t25817+1.0));
            double t25819 = d1*t25814*t25815*t25818*6.0;
            double t25820 = t25819+1.0;
            double t25821 = 1/t25820;
            double t25822 = 1/pow(rho_a[index],1.1E1/3.0);
            double t25823 = d2*t25814*t25815*t25818*6.0;
            double t25824 = t25823+1.0;
            double t25825 = 1/t25824;
            double t25826 = gamma_aa[index]*t25816;
            double t25827 = t25826+1.0;
            double t25828 = 1/sqrt(t25827);
            double t25829 = 1/pow(rho_a[index],7.0/3.0);
            double t25830 = 1/pow(rho_a[index],1.4E1/3.0);
            double t25831 = 1/(t25820*t25820);
            double t25832 = d1*gamma_aa[index]*t25822*t25828*8.0;
            double t25833 = d1*t25814*t25818*t25829*8.0;
            double t25834 = t25832+t25833;
            double t25835 = 1/(t25824*t25824);
            double t25836 = d2*gamma_aa[index]*t25822*t25828*8.0;
            double t25837 = d2*t25814*t25818*t25829*8.0;
            double t25838 = t25836+t25837;
            double t25839 = gamma_aa[index]*gamma_aa[index];
            double t25840 = 1/pow(rho_a[index],2.2E1/3.0);
            double t25841 = 1/pow(t25827,3.0/2.0);
            double t25842 = 1/pow(rho_a[index],1.0E1/3.0);
            double t25843 = rho_a[index]+rho_b[index];
            double t25844 = 1/pow(t25843,1.0/3.0);
            double t25845 = Dd*t25844;
            double t25846 = t25845+1.0;
            double t25847 = 1/t25846;
            double t25848 = t25843*t25843;
            double t25849 = t25848*(2.0/3.0);
            double t25850 = gamma_ab[index]*2.0;
            double t25851 = gamma_aa[index]+gamma_bb[index]+t25850;
            double t25852 = 1/(t25846*t25846);
            double t25879 = C*t25844;
            double t25853 = exp(-t25879);
            double t25854 = C*t25844*(7.0/1.8E1);
            double t25855 = Dd*t25844*t25847*(7.0/1.8E1);
            double t25856 = t25854+t25855-4.7E1/1.8E1;
            double t25857 = t25851*t25856;
            double t25858 = gamma_aa[index]+gamma_bb[index];
            double t25859 = C*t25844*(1.0/1.8E1);
            double t25860 = Dd*t25844*t25847*(1.0/1.8E1);
            double t25861 = t25860+t25859-5.0/2.0;
            double t25862 = pow(rho_a[index],8.0/3.0);
            double t25863 = pow(rho_b[index],8.0/3.0);
            double t25864 = t25862+t25863;
            double t25865 = 1/t25843;
            double t25866 = gamma_aa[index]*rho_a[index];
            double t25867 = gamma_bb[index]*rho_b[index];
            double t25868 = t25866+t25867;
            double t25869 = C*t25844*(1.0/9.0);
            double t25870 = Dd*t25844*t25847*(1.0/9.0);
            double t25871 = t25870+t25869-1.1E1/9.0;
            double t25872 = t25871*t25865*t25868;
            double t25905 = t25861*t25858;
            double t25906 = CFext*t25864;
            double t25873 = -t25905-t25906+t25872+t25857;
            double t25874 = rho_b[index]*(4.0/3.0);
            double t25875 = 1/pow(t25843,4.0/3.0);
            double t25876 = Dd*Dd;
            double t25877 = 1/pow(t25843,5.0/3.0);
            double t25878 = 1/(t25843*t25843);
            double t25880 = 1/pow(t25843,1.1E1/3.0);
            double t25881 = C*t25875*(1.0/5.4E1);
            double t25882 = Dd*t25847*t25875*(1.0/5.4E1);
            double t25913 = t25852*t25876*t25877*(1.0/5.4E1);
            double t25883 = -t25913+t25881+t25882;
            double t25884 = pow(rho_a[index],5.0/3.0);
            double t25885 = CFext*t25884*(8.0/3.0);
            double t25886 = C*t25875*(7.0/5.4E1);
            double t25887 = Dd*t25847*t25875*(7.0/5.4E1);
            double t25915 = t25852*t25876*t25877*(7.0/5.4E1);
            double t25888 = -t25915+t25886+t25887;
            double t25889 = t25851*t25888;
            double t25890 = C*t25875*(1.0/2.7E1);
            double t25891 = Dd*t25847*t25875*(1.0/2.7E1);
            double t25900 = t25852*t25876*t25877*(1.0/2.7E1);
            double t25892 = -t25900+t25890+t25891;
            double t25893 = t25865*t25892*t25868;
            double t25894 = t25871*t25868*t25878;
            double t25914 = t25883*t25858;
            double t25916 = gamma_aa[index]*t25871*t25865;
            double t25895 = -t25914-t25916+t25893+t25885+t25894+t25889;
            double t25896 = 1/pow(t25843,7.0/3.0);
            double t25897 = 1/(t25843*t25843*t25843);
            double t25898 = 1/(t25846*t25846*t25846);
            double t25899 = 1/pow(t25843,8.0/3.0);
            double t25901 = rho_a[index]*2.0;
            double t25902 = rho_b[index]*2.0;
            double t25903 = t25901+t25902;
            double t25904 = t25903*t25851*(2.0/3.0);
            double t25907 = rho_b[index]*t25873;
            double t25908 = rho_a[index]*(4.0/3.0);
            double t25909 = t25908+t25874;
            double t25910 = rho_a[index]*(2.0/3.0);
            double t25911 = t25910-t25874;
            double t25912 = gamma_bb[index]*t25911;
            double t25919 = gamma_aa[index]*t25909;
            double t25920 = rho_a[index]*rho_b[index]*t25895;
            double t25917 = -t25920+t25912+t25904+t25907-t25919;
            double t25918 = 1/(t25843*t25843*t25843*t25843*t25843);
            double t25921 = rho_b[index]*rho_b[index];
            double t25922 = t25921-t25849;
            double t25923 = gamma_aa[index]*t25922;
            double t25924 = rho_a[index]*rho_a[index];
            double t25925 = t25924-t25849;
            double t25926 = gamma_bb[index]*t25925;
            double t25927 = t25851*t25848*(2.0/3.0);
            double t25928 = rho_a[index]*rho_b[index]*t25873;
            double t25929 = t25923+t25926+t25927+t25928;
            double t25930 = 1/(t25843*t25843*t25843*t25843*t25843*t25843);
            double t25931 = 1/pow(t25843,1.9E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t25821*t25830*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t25830*t25825*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t25831*t25816*(d1*gamma_aa[index]* \
               t25830*t25828*4.0E1+d1*t25814*t25842*t25818*(5.6E1/3.0)-d1*t25840*t25841*t25839*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t25816*t25835*(d2*gamma_aa[index]*t25830*t25828*4.0E1+d2*t25814*t25842*t25818*(5.6E1/ \
               3.0)-d2*t25840*t25841*t25839*(3.2E1/3.0))+d1*e1*gamma_aa[index]*1/(t25820*t25820*t25820)*t25816*(t25834* \
               t25834)*2.0+d2*e2*gamma_aa[index]*1/(t25824*t25824*t25824)*t25816*(t25838*t25838)*2.0-d1*e1*gamma_aa[index]* \
               t25822*t25831*t25834*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t25822*t25835*t25838*(1.6E1/3.0))+pow(rho_a[index],1.0/ \
               3.0)*(d1*e1*gamma_aa[index]*t25821*t25822*(8.0/3.0)+d2*e2*gamma_aa[index]*t25822*t25825*(8.0/3.0)- \
               d1*e1*gamma_aa[index]*t25831*t25816*t25834-d2*e2*gamma_aa[index]*t25816*t25835*t25838)*(8.0/3.0)-1/ \
               pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t25821*t25816+d2*e2*gamma_aa[index]*t25816* \
               t25825)*(4.0/9.0)+A*rho_b[index]*t25847*t25878*8.0-A*Dd*rho_b[index]*t25852*t25896*(8.0/3.0)-A*rho_a[index]* \
               rho_b[index]*t25847*t25897*8.0+A*Dd*rho_a[index]*rho_b[index]*1/pow(t25843,1.0E1/3.0)*t25852*(4.0E1/ \
               9.0)-A*B*1/pow(t25843,1.4E1/3.0)*t25853*t25917*t25847*(2.2E1/3.0)+A*B*1/pow(t25843,1.7E1/3.0)*t25853* \
               t25847*t25929*(1.54E2/9.0)+A*B*t25853*t25880*t25847*(gamma_ab[index]*(8.0/3.0)+gamma_bb[index]*2.0- \
               rho_b[index]*t25895*2.0-rho_a[index]*rho_b[index]*(CFext*pow(rho_a[index],2.0/3.0)*(4.0E1/9.0)+t25858* \
               (C*t25896*(2.0/8.1E1)+Dd*t25847*t25896*(2.0/8.1E1)-t25852*t25876*t25899*(1.0/2.7E1)+Dd*t25876*t25897* \
               t25898*(1.0/8.1E1))-t25851*(C*t25896*(1.4E1/8.1E1)+Dd*t25847*t25896*(1.4E1/8.1E1)-t25852*t25876*t25899* \
               (7.0/2.7E1)+Dd*t25876*t25897*t25898*(7.0/8.1E1))-t25865*t25868*(C*t25896*(4.0/8.1E1)+Dd*t25847*t25896* \
               (4.0/8.1E1)-t25852*t25876*t25899*(2.0/2.7E1)+Dd*t25876*t25897*t25898*(2.0/8.1E1))+gamma_aa[index]* \
               t25865*t25892*2.0+gamma_aa[index]*t25871*t25878*2.0-t25871*t25868*t25897*2.0-t25892*t25868*t25878* \
               2.0))-A*rho_a[index]*rho_b[index]*t25880*t25876*t25898*(8.0/9.0)+A*B*(C*C)*t25931*t25853*t25847*(t25923+ \
               t25926+t25927+t25928)*(1.0/9.0)+A*B*t25931*t25853*t25876*t25898*(t25923+t25926+t25927+t25928)*(2.0/ \
               9.0)-A*B*C*t25930*t25853*t25847*t25929*(2.6E1/9.0)+A*B*C*t25853*t25917*t25918*t25847*(2.0/3.0)-A*B* \
               Dd*t25930*t25852*t25853*t25929*(2.6E1/9.0)+A*B*Dd*t25852*t25853*t25917*t25918*(2.0/3.0)+A*B*C*Dd*t25931* \
               t25852*t25853*(t25923+t25926+t25927+t25928)*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t26617 = sqrt(gamma_aa[index]);
            double t26618 = 1/pow(rho_a[index],4.0/3.0);
            double t26619 = 1/pow(rho_a[index],8.0/3.0);
            double t26620 = t26617*t26618;
            double t26621 = log(t26620+sqrt(t26620*t26620+1.0));
            double t26622 = d1*t26621*t26617*t26618*6.0;
            double t26623 = t26622+1.0;
            double t26624 = 1/t26623;
            double t26625 = 1/pow(rho_a[index],1.1E1/3.0);
            double t26626 = d2*t26621*t26617*t26618*6.0;
            double t26627 = t26626+1.0;
            double t26628 = 1/t26627;
            double t26629 = gamma_aa[index]*t26619;
            double t26630 = t26629+1.0;
            double t26631 = 1/sqrt(t26630);
            double t26632 = 1/pow(rho_a[index],7.0/3.0);
            double t26633 = 1/pow(rho_a[index],1.4E1/3.0);
            double t26634 = 1/(t26623*t26623);
            double t26635 = d1*gamma_aa[index]*t26631*t26625*8.0;
            double t26636 = d1*t26621*t26632*t26617*8.0;
            double t26637 = t26635+t26636;
            double t26638 = 1/(t26627*t26627);
            double t26639 = d2*gamma_aa[index]*t26631*t26625*8.0;
            double t26640 = d2*t26621*t26632*t26617*8.0;
            double t26641 = t26640+t26639;
            double t26642 = gamma_aa[index]*gamma_aa[index];
            double t26643 = 1/pow(rho_a[index],2.2E1/3.0);
            double t26644 = 1/pow(t26630,3.0/2.0);
            double t26645 = 1/pow(rho_a[index],1.0E1/3.0);
            v_rho_a_rho_a_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*gamma_aa[index]*t26624*t26633*(8.8E1/9.0) \
               +d2*e2*gamma_aa[index]*t26633*t26628*(8.8E1/9.0)-d1*e1*gamma_aa[index]*t26634*t26619*(d1*gamma_aa[index]* \
               t26631*t26633*4.0E1+d1*t26621*t26617*t26645*(5.6E1/3.0)-d1*t26642*t26643*t26644*(3.2E1/3.0))-d2*e2* \
               gamma_aa[index]*t26619*t26638*(d2*gamma_aa[index]*t26631*t26633*4.0E1+d2*t26621*t26617*t26645*(5.6E1/ \
               3.0)-d2*t26642*t26643*t26644*(3.2E1/3.0))+d1*e1*gamma_aa[index]*1/(t26623*t26623*t26623)*t26619*(t26637* \
               t26637)*2.0+d2*e2*gamma_aa[index]*(t26641*t26641)*1/(t26627*t26627*t26627)*t26619*2.0-d1*e1*gamma_aa[index]* \
               t26625*t26634*t26637*(1.6E1/3.0)-d2*e2*gamma_aa[index]*t26641*t26625*t26638*(1.6E1/3.0))+pow(rho_a[index],1.0/ \
               3.0)*(d1*e1*gamma_aa[index]*t26624*t26625*(8.0/3.0)+d2*e2*gamma_aa[index]*t26625*t26628*(8.0/3.0)- \
               d1*e1*gamma_aa[index]*t26634*t26619*t26637-d2*e2*gamma_aa[index]*t26641*t26619*t26638)*(8.0/3.0)-1/ \
               pow(rho_a[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_aa[index]*t26624*t26619+d2*e2*gamma_aa[index]*t26619* \
               t26628)*(4.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t25933 = rho_a[index]+rho_b[index];
            double t25934 = 1/pow(t25933,1.0/3.0);
            double t25935 = Dd*t25934;
            double t25936 = t25935+1.0;
            double t25937 = 1/t25936;
            double t25938 = 1/(t25933*t25933);
            double t25939 = 1/pow(t25933,7.0/3.0);
            double t25940 = 1/(t25936*t25936);
            double t25941 = t25933*t25933;
            double t25942 = t25941*(2.0/3.0);
            double t25943 = gamma_ab[index]*2.0;
            double t25944 = gamma_aa[index]+gamma_bb[index]+t25943;
            double t25945 = 1/t25933;
            double t25984 = C*t25934;
            double t25946 = exp(-t25984);
            double t25947 = C*t25934*(7.0/1.8E1);
            double t25948 = Dd*t25934*t25937*(7.0/1.8E1);
            double t25949 = t25947+t25948-4.7E1/1.8E1;
            double t25950 = t25944*t25949;
            double t25951 = gamma_aa[index]+gamma_bb[index];
            double t25952 = 1/pow(t25933,4.0/3.0);
            double t25953 = Dd*Dd;
            double t25954 = 1/pow(t25933,5.0/3.0);
            double t25955 = C*t25934*(1.0/9.0);
            double t25956 = Dd*t25934*t25937*(1.0/9.0);
            double t25957 = t25955+t25956-1.1E1/9.0;
            double t25958 = gamma_aa[index]*rho_a[index];
            double t25959 = gamma_bb[index]*rho_b[index];
            double t25960 = t25958+t25959;
            double t25961 = C*t25952*(1.0/5.4E1);
            double t25962 = Dd*t25952*t25937*(1.0/5.4E1);
            double t25988 = t25940*t25953*t25954*(1.0/5.4E1);
            double t25963 = t25961+t25962-t25988;
            double t25964 = C*t25952*(7.0/5.4E1);
            double t25965 = Dd*t25952*t25937*(7.0/5.4E1);
            double t25991 = t25940*t25953*t25954*(7.0/5.4E1);
            double t25966 = t25964-t25991+t25965;
            double t25967 = t25944*t25966;
            double t25968 = C*t25952*(1.0/2.7E1);
            double t25969 = Dd*t25952*t25937*(1.0/2.7E1);
            double t25982 = t25940*t25953*t25954*(1.0/2.7E1);
            double t25970 = -t25982+t25968+t25969;
            double t25971 = t25960*t25970*t25945;
            double t25972 = t25960*t25938*t25957;
            double t25973 = C*t25934*(1.0/1.8E1);
            double t25974 = Dd*t25934*t25937*(1.0/1.8E1);
            double t25975 = t25973+t25974-5.0/2.0;
            double t25976 = pow(rho_a[index],8.0/3.0);
            double t25977 = pow(rho_b[index],8.0/3.0);
            double t25978 = t25976+t25977;
            double t25979 = 1/(t25933*t25933*t25933);
            double t25980 = 1/(t25936*t25936*t25936);
            double t25981 = 1/pow(t25933,8.0/3.0);
            double t25983 = t25960*t25945*t25957;
            double t25985 = t25951*t25975;
            double t25986 = CFext*t25978;
            double t25987 = rho_b[index]*(4.0/3.0);
            double t25989 = pow(rho_a[index],5.0/3.0);
            double t25990 = CFext*t25989*(8.0/3.0);
            double t26001 = t25951*t25963;
            double t26009 = gamma_aa[index]*t25945*t25957;
            double t25992 = t25971+t25972+t25990+t25967-t26001-t26009;
            double t25993 = 1/pow(t25933,1.4E1/3.0);
            double t25994 = rho_a[index]*2.0;
            double t25995 = rho_b[index]*2.0;
            double t25996 = t25994+t25995;
            double t25997 = t25944*t25996*(2.0/3.0);
            double t25998 = t25950+t25983-t25985-t25986;
            double t25999 = rho_a[index]*(4.0/3.0);
            double t26000 = t25987+t25999;
            double t26002 = pow(rho_b[index],5.0/3.0);
            double t26003 = CFext*t26002*(8.0/3.0);
            double t26004 = 1/pow(t25933,1.1E1/3.0);
            double t26005 = rho_b[index]*t25998;
            double t26006 = rho_a[index]*(2.0/3.0);
            double t26007 = t25987-t26006;
            double t26008 = gamma_bb[index]*t26007;
            double t26010 = rho_a[index]*rho_b[index]*t25992;
            double t26011 = gamma_aa[index]*t26000;
            double t26012 = -t25997+t26010+t26011-t26005+t26008;
            double t26013 = 1/(t25933*t25933*t25933*t25933*t25933);
            double t26014 = rho_a[index]*t25998;
            double t26015 = rho_b[index]*(2.0/3.0);
            double t26016 = t25999-t26015;
            double t26017 = gamma_aa[index]*t26016;
            double t26018 = gamma_bb[index]*t26000;
            double t26022 = gamma_bb[index]*t25945*t25957;
            double t26019 = t25971+t25972+t25967-t26001+t26003-t26022;
            double t26020 = rho_a[index]*rho_b[index]*t26019;
            double t26021 = -t25997+t26020-t26014+t26017+t26018;
            double t26023 = rho_b[index]*rho_b[index];
            double t26024 = t25942-t26023;
            double t26025 = gamma_aa[index]*t26024;
            double t26026 = rho_a[index]*rho_a[index];
            double t26027 = t25942-t26026;
            double t26028 = gamma_bb[index]*t26027;
            double t26029 = 1/(t25933*t25933*t25933*t25933*t25933*t25933);
            double t26031 = t25941*t25944*(2.0/3.0);
            double t26032 = rho_a[index]*rho_b[index]*t25998;
            double t26030 = -t26031-t26032+t26025+t26028;
            double t26033 = 1/pow(t25933,1.9E1/3.0);
            v_rho_a_rho_b_[index] = A*t25945*t25937*-4.0+A*rho_a[index]*t25937*t25938*4.0+A*rho_b[index]*t25937* \
               t25938*4.0-A*Dd*rho_a[index]*t25940*t25939*(4.0/3.0)-A*Dd*rho_b[index]*t25940*t25939*(4.0/3.0)-A*rho_a[index]* \
               rho_b[index]*t25937*t25979*8.0+A*Dd*rho_a[index]*rho_b[index]*t25940*1/pow(t25933,1.0E1/3.0)*(4.0E1/ \
               9.0)-A*B*1/pow(t25933,1.7E1/3.0)*t25937*t25946*(t26025+t26028-t25941*t25944*(2.0/3.0)-rho_a[index]* \
               rho_b[index]*(t25950+t25983-CFext*t25978-t25951*t25975))*(1.54E2/9.0)-A*B*t25937*t25946*t26004*(gamma_ab[index]* \
               (-8.0/3.0)-t25950-t25983+t25985+t25986+rho_a[index]*t25992+rho_b[index]*(t25971+t25972+t25967+t26003- \
               t25951*t25963-gamma_bb[index]*t25945*t25957)+rho_a[index]*rho_b[index]*(t25951*(C*t25939*(2.0/8.1E1) \
               +Dd*t25937*t25939*(2.0/8.1E1)-t25940*t25953*t25981*(1.0/2.7E1)+Dd*t25953*t25980*t25979*(1.0/8.1E1) \
               )-t25944*(C*t25939*(1.4E1/8.1E1)+Dd*t25937*t25939*(1.4E1/8.1E1)-t25940*t25953*t25981*(7.0/2.7E1)+Dd* \
               t25953*t25980*t25979*(7.0/8.1E1))-t25960*t25945*(C*t25939*(4.0/8.1E1)+Dd*t25937*t25939*(4.0/8.1E1) \
               -t25940*t25953*t25981*(2.0/2.7E1)+Dd*t25953*t25980*t25979*(2.0/8.1E1))+gamma_aa[index]*t25970*t25945+ \
               gamma_bb[index]*t25970*t25945+gamma_aa[index]*t25938*t25957+gamma_bb[index]*t25938*t25957-t25960*t25970* \
               t25938*2.0-t25960*t25957*t25979*2.0))+A*B*t25937*t25946*t25993*t26012*(1.1E1/3.0)+A*B*t25937*t25946* \
               t25993*t26021*(1.1E1/3.0)-A*rho_a[index]*rho_b[index]*t25953*t25980*t26004*(8.0/9.0)-A*B*t25953*t25980* \
               t25946*t26030*t26033*(2.0/9.0)-A*B*(C*C)*t25937*t25946*t26030*t26033*(1.0/9.0)-A*B*C*t25937*t25946* \
               t26012*t26013*(1.0/3.0)-A*B*C*t25937*t25946*t26021*t26013*(1.0/3.0)+A*B*C*t25937*t25946*t26030*t26029* \
               (2.6E1/9.0)-A*B*Dd*t25940*t25946*t26012*t26013*(1.0/3.0)-A*B*Dd*t25940*t25946*t26021*t26013*(1.0/3.0) \
               +A*B*Dd*t25940*t25946*t26030*t26029*(2.6E1/9.0)-A*B*C*Dd*t25940*t25946*t26030*t26033*(2.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t26035 = sqrt(gamma_bb[index]);
            double t26036 = 1/pow(rho_b[index],4.0/3.0);
            double t26037 = 1/pow(rho_b[index],8.0/3.0);
            double t26038 = t26035*t26036;
            double t26039 = log(t26038+sqrt(t26038*t26038+1.0));
            double t26040 = d1*t26035*t26036*t26039*6.0;
            double t26041 = t26040+1.0;
            double t26042 = 1/t26041;
            double t26043 = 1/pow(rho_b[index],1.1E1/3.0);
            double t26044 = d2*t26035*t26036*t26039*6.0;
            double t26045 = t26044+1.0;
            double t26046 = 1/t26045;
            double t26047 = gamma_bb[index]*t26037;
            double t26048 = t26047+1.0;
            double t26049 = 1/sqrt(t26048);
            double t26050 = 1/pow(rho_b[index],7.0/3.0);
            double t26051 = 1/pow(rho_b[index],1.4E1/3.0);
            double t26052 = 1/(t26041*t26041);
            double t26053 = d1*gamma_bb[index]*t26043*t26049*8.0;
            double t26054 = d1*t26050*t26035*t26039*8.0;
            double t26055 = t26053+t26054;
            double t26056 = 1/(t26045*t26045);
            double t26057 = d2*gamma_bb[index]*t26043*t26049*8.0;
            double t26058 = d2*t26050*t26035*t26039*8.0;
            double t26059 = t26057+t26058;
            double t26060 = gamma_bb[index]*gamma_bb[index];
            double t26061 = 1/pow(rho_b[index],2.2E1/3.0);
            double t26062 = 1/pow(t26048,3.0/2.0);
            double t26063 = 1/pow(rho_b[index],1.0E1/3.0);
            double t26064 = rho_a[index]+rho_b[index];
            double t26065 = 1/pow(t26064,1.0/3.0);
            double t26066 = Dd*t26065;
            double t26067 = t26066+1.0;
            double t26068 = 1/t26067;
            double t26069 = t26064*t26064;
            double t26070 = t26069*(2.0/3.0);
            double t26071 = gamma_ab[index]*2.0;
            double t26072 = gamma_aa[index]+gamma_bb[index]+t26071;
            double t26073 = 1/(t26067*t26067);
            double t26100 = C*t26065;
            double t26074 = exp(-t26100);
            double t26075 = C*t26065*(7.0/1.8E1);
            double t26076 = Dd*t26065*t26068*(7.0/1.8E1);
            double t26077 = t26075+t26076-4.7E1/1.8E1;
            double t26078 = t26072*t26077;
            double t26079 = gamma_aa[index]+gamma_bb[index];
            double t26080 = C*t26065*(1.0/1.8E1);
            double t26081 = Dd*t26065*t26068*(1.0/1.8E1);
            double t26082 = t26080+t26081-5.0/2.0;
            double t26083 = pow(rho_a[index],8.0/3.0);
            double t26084 = pow(rho_b[index],8.0/3.0);
            double t26085 = t26083+t26084;
            double t26086 = 1/t26064;
            double t26087 = gamma_aa[index]*rho_a[index];
            double t26088 = gamma_bb[index]*rho_b[index];
            double t26089 = t26087+t26088;
            double t26090 = C*t26065*(1.0/9.0);
            double t26091 = Dd*t26065*t26068*(1.0/9.0);
            double t26092 = t26090+t26091-1.1E1/9.0;
            double t26093 = t26092*t26086*t26089;
            double t26126 = t26082*t26079;
            double t26127 = CFext*t26085;
            double t26094 = -t26126-t26127+t26093+t26078;
            double t26095 = rho_a[index]*(4.0/3.0);
            double t26096 = 1/pow(t26064,4.0/3.0);
            double t26097 = Dd*Dd;
            double t26098 = 1/pow(t26064,5.0/3.0);
            double t26099 = 1/(t26064*t26064);
            double t26101 = 1/pow(t26064,1.1E1/3.0);
            double t26102 = C*t26096*(1.0/5.4E1);
            double t26103 = Dd*t26068*t26096*(1.0/5.4E1);
            double t26134 = t26073*t26097*t26098*(1.0/5.4E1);
            double t26104 = t26102+t26103-t26134;
            double t26105 = pow(rho_b[index],5.0/3.0);
            double t26106 = CFext*t26105*(8.0/3.0);
            double t26107 = C*t26096*(7.0/5.4E1);
            double t26108 = Dd*t26068*t26096*(7.0/5.4E1);
            double t26136 = t26073*t26097*t26098*(7.0/5.4E1);
            double t26109 = t26107+t26108-t26136;
            double t26110 = t26072*t26109;
            double t26111 = C*t26096*(1.0/2.7E1);
            double t26112 = Dd*t26068*t26096*(1.0/2.7E1);
            double t26121 = t26073*t26097*t26098*(1.0/2.7E1);
            double t26113 = t26111+t26112-t26121;
            double t26114 = t26113*t26086*t26089;
            double t26115 = t26092*t26089*t26099;
            double t26135 = t26104*t26079;
            double t26137 = gamma_bb[index]*t26092*t26086;
            double t26116 = t26110+t26114+t26106+t26115-t26135-t26137;
            double t26117 = 1/pow(t26064,7.0/3.0);
            double t26118 = 1/(t26064*t26064*t26064);
            double t26119 = 1/(t26067*t26067*t26067);
            double t26120 = 1/pow(t26064,8.0/3.0);
            double t26122 = rho_a[index]*2.0;
            double t26123 = rho_b[index]*2.0;
            double t26124 = t26122+t26123;
            double t26125 = t26124*t26072*(2.0/3.0);
            double t26128 = rho_a[index]*t26094;
            double t26129 = rho_b[index]*(2.0/3.0);
            double t26130 = t26129-t26095;
            double t26131 = gamma_aa[index]*t26130;
            double t26132 = rho_b[index]*(4.0/3.0);
            double t26133 = t26132+t26095;
            double t26138 = 1/(t26064*t26064*t26064*t26064*t26064);
            double t26139 = rho_b[index]*rho_b[index];
            double t26140 = t26070-t26139;
            double t26141 = gamma_aa[index]*t26140;
            double t26142 = rho_a[index]*rho_a[index];
            double t26143 = t26070-t26142;
            double t26144 = gamma_bb[index]*t26143;
            double t26147 = t26072*t26069*(2.0/3.0);
            double t26148 = rho_a[index]*rho_b[index]*t26094;
            double t26145 = t26141+t26144-t26147-t26148;
            double t26146 = 1/(t26064*t26064*t26064*t26064*t26064*t26064);
            double t26149 = 1/pow(t26064,1.9E1/3.0);
            v_rho_b_rho_b_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t26042*t26051*(8.8E1/9.0) \
               +d2*e2*gamma_bb[index]*t26051*t26046*(8.8E1/9.0)-d1*e1*gamma_bb[index]*t26052*t26037*(d1*gamma_bb[index]* \
               t26051*t26049*4.0E1-d1*t26060*t26061*t26062*(3.2E1/3.0)+d1*t26035*t26063*t26039*(5.6E1/3.0))-d2*e2* \
               gamma_bb[index]*t26037*t26056*(d2*gamma_bb[index]*t26051*t26049*4.0E1-d2*t26060*t26061*t26062*(3.2E1/ \
               3.0)+d2*t26035*t26063*t26039*(5.6E1/3.0))+d1*e1*gamma_bb[index]*1/(t26041*t26041*t26041)*t26037*(t26055* \
               t26055)*2.0+d2*e2*gamma_bb[index]*1/(t26045*t26045*t26045)*t26037*(t26059*t26059)*2.0-d1*e1*gamma_bb[index]* \
               t26043*t26052*t26055*(1.6E1/3.0)-d2*e2*gamma_bb[index]*t26043*t26056*t26059*(1.6E1/3.0))+pow(rho_b[index],1.0/ \
               3.0)*(d1*e1*gamma_bb[index]*t26042*t26043*(8.0/3.0)+d2*e2*gamma_bb[index]*t26043*t26046*(8.0/3.0)- \
               d1*e1*gamma_bb[index]*t26052*t26037*t26055-d2*e2*gamma_bb[index]*t26037*t26056*t26059)*(8.0/3.0)-1/ \
               pow(rho_b[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_bb[index]*t26042*t26037+d2*e2*gamma_bb[index]*t26037* \
               t26046)*(4.0/9.0)+A*rho_a[index]*t26068*t26099*8.0-A*Dd*rho_a[index]*t26117*t26073*(8.0/3.0)-A*rho_a[index]* \
               rho_b[index]*t26118*t26068*8.0+A*Dd*rho_a[index]*rho_b[index]*1/pow(t26064,1.0E1/3.0)*t26073*(4.0E1/ \
               9.0)-A*B*1/pow(t26064,1.7E1/3.0)*t26145*t26074*t26068*(1.54E2/9.0)-A*B*1/pow(t26064,1.4E1/3.0)*t26074* \
               t26068*(t26131+t26125+t26128-gamma_bb[index]*t26133-rho_a[index]*rho_b[index]*t26116)*(2.2E1/3.0)+ \
               A*B*t26101*t26074*t26068*(gamma_aa[index]*2.0+gamma_ab[index]*(8.0/3.0)-rho_a[index]*t26116*2.0-rho_a[index]* \
               rho_b[index]*(CFext*pow(rho_b[index],2.0/3.0)*(4.0E1/9.0)+t26079*(C*t26117*(2.0/8.1E1)+Dd*t26117*t26068* \
               (2.0/8.1E1)-t26120*t26073*t26097*(1.0/2.7E1)+Dd*t26118*t26119*t26097*(1.0/8.1E1))-t26072*(C*t26117* \
               (1.4E1/8.1E1)+Dd*t26117*t26068*(1.4E1/8.1E1)-t26120*t26073*t26097*(7.0/2.7E1)+Dd*t26118*t26119*t26097* \
               (7.0/8.1E1))-t26086*t26089*(C*t26117*(4.0/8.1E1)+Dd*t26117*t26068*(4.0/8.1E1)-t26120*t26073*t26097* \
               (2.0/2.7E1)+Dd*t26118*t26119*t26097*(2.0/8.1E1))+gamma_bb[index]*t26113*t26086*2.0+gamma_bb[index]* \
               t26092*t26099*2.0-t26118*t26092*t26089*2.0-t26113*t26089*t26099*2.0))-A*rho_a[index]*rho_b[index]* \
               t26101*t26119*t26097*(8.0/9.0)-A*B*t26145*t26074*t26119*t26149*t26097*(2.0/9.0)+A*B*C*t26074*t26138* \
               t26068*(t26131+t26125+t26128-gamma_bb[index]*t26133-rho_a[index]*rho_b[index]*t26116)*(2.0/3.0)+A* \
               B*Dd*t26073*t26074*t26138*(t26131+t26125+t26128-gamma_bb[index]*t26133-rho_a[index]*rho_b[index]*t26116) \
               *(2.0/3.0)-A*B*(C*C)*t26145*t26074*t26068*t26149*(1.0/9.0)+A*B*C*t26145*t26074*t26146*t26068*(2.6E1/ \
               9.0)+A*B*Dd*t26073*t26145*t26074*t26146*(2.6E1/9.0)-A*B*C*Dd*t26073*t26145*t26074*t26149*(2.0/9.0) \
               ;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t26462 = sqrt(gamma_bb[index]);
            double t26463 = 1/pow(rho_b[index],4.0/3.0);
            double t26464 = 1/pow(rho_b[index],8.0/3.0);
            double t26465 = t26462*t26463;
            double t26466 = log(t26465+sqrt(t26465*t26465+1.0));
            double t26467 = d1*t26462*t26463*t26466*6.0;
            double t26468 = t26467+1.0;
            double t26469 = 1/t26468;
            double t26470 = 1/pow(rho_b[index],1.1E1/3.0);
            double t26471 = d2*t26462*t26463*t26466*6.0;
            double t26472 = t26471+1.0;
            double t26473 = 1/t26472;
            double t26474 = gamma_bb[index]*t26464;
            double t26475 = t26474+1.0;
            double t26476 = 1/sqrt(t26475);
            double t26477 = 1/pow(rho_b[index],7.0/3.0);
            double t26478 = 1/pow(rho_b[index],1.4E1/3.0);
            double t26479 = 1/(t26468*t26468);
            double t26480 = d1*gamma_bb[index]*t26470*t26476*8.0;
            double t26481 = d1*t26462*t26466*t26477*8.0;
            double t26482 = t26480+t26481;
            double t26483 = 1/(t26472*t26472);
            double t26484 = d2*gamma_bb[index]*t26470*t26476*8.0;
            double t26485 = d2*t26462*t26466*t26477*8.0;
            double t26486 = t26484+t26485;
            double t26487 = gamma_bb[index]*gamma_bb[index];
            double t26488 = 1/pow(rho_b[index],2.2E1/3.0);
            double t26489 = 1/pow(t26475,3.0/2.0);
            double t26490 = 1/pow(rho_b[index],1.0E1/3.0);
            v_rho_b_rho_b_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*gamma_bb[index]*t26469*t26478*(8.8E1/9.0) \
               +d2*e2*gamma_bb[index]*t26473*t26478*(8.8E1/9.0)-d1*e1*gamma_bb[index]*t26464*t26479*(d1*gamma_bb[index]* \
               t26476*t26478*4.0E1+d1*t26462*t26490*t26466*(5.6E1/3.0)-d1*t26487*t26488*t26489*(3.2E1/3.0))-d2*e2* \
               gamma_bb[index]*t26464*t26483*(d2*gamma_bb[index]*t26476*t26478*4.0E1+d2*t26462*t26490*t26466*(5.6E1/ \
               3.0)-d2*t26487*t26488*t26489*(3.2E1/3.0))+d1*e1*gamma_bb[index]*t26464*(t26482*t26482)*1/(t26468*t26468* \
               t26468)*2.0+d2*e2*gamma_bb[index]*1/(t26472*t26472*t26472)*t26464*(t26486*t26486)*2.0-d1*e1*gamma_bb[index]* \
               t26470*t26482*t26479*(1.6E1/3.0)-d2*e2*gamma_bb[index]*t26470*t26483*t26486*(1.6E1/3.0))+pow(rho_b[index],1.0/ \
               3.0)*(d1*e1*gamma_bb[index]*t26470*t26469*(8.0/3.0)+d2*e2*gamma_bb[index]*t26470*t26473*(8.0/3.0)- \
               d1*e1*gamma_bb[index]*t26464*t26482*t26479-d2*e2*gamma_bb[index]*t26464*t26483*t26486)*(8.0/3.0)-1/ \
               pow(rho_b[index],2.0/3.0)*(-c0*e0+d1*e1*gamma_bb[index]*t26464*t26469+d2*e2*gamma_bb[index]*t26464* \
               t26473)*(4.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26151 = sqrt(gamma_aa[index]);
                double t26152 = 1/pow(rho_a[index],4.0/3.0);
                double t26153 = 1/pow(rho_a[index],8.0/3.0);
                double t26154 = t26151*t26152;
                double t26155 = log(t26154+sqrt(t26154*t26154+1.0));
                double t26156 = d1*t26151*t26152*t26155*6.0;
                double t26157 = t26156+1.0;
                double t26158 = gamma_aa[index]*t26153;
                double t26159 = t26158+1.0;
                double t26160 = 1/sqrt(t26159);
                double t26161 = 1/sqrt(gamma_aa[index]);
                double t26162 = d2*t26151*t26152*t26155*6.0;
                double t26163 = t26162+1.0;
                double t26164 = 1/t26157;
                double t26165 = 1/pow(rho_a[index],1.1E1/3.0);
                double t26166 = 1/t26163;
                double t26167 = 1/(t26157*t26157);
                double t26168 = 1/(t26163*t26163);
                double t26169 = 1/pow(rho_a[index],7.0/3.0);
                double t26170 = 1/pow(rho_a[index],1.9E1/3.0);
                double t26171 = 1/pow(t26159,3.0/2.0);
                double t26172 = d1*t26160*t26153*3.0;
                double t26173 = d1*t26152*t26161*t26155*3.0;
                double t26174 = t26172+t26173;
                double t26175 = d2*t26160*t26153*3.0;
                double t26176 = d2*t26152*t26161*t26155*3.0;
                double t26177 = t26175+t26176;
                double t26178 = d1*gamma_aa[index]*t26160*t26165*8.0;
                double t26179 = d1*t26151*t26155*t26169*8.0;
                double t26180 = t26178+t26179;
                double t26181 = d2*gamma_aa[index]*t26160*t26165*8.0;
                double t26182 = d2*t26151*t26155*t26169*8.0;
                double t26183 = t26181+t26182;
                double t26184 = rho_a[index]+rho_b[index];
                double t26185 = 1/pow(t26184,1.0/3.0);
                double t26186 = Dd*t26185;
                double t26187 = t26186+1.0;
                double t26188 = 1/t26187;
                double t26202 = C*t26185;
                double t26189 = exp(-t26202);
                double t26190 = C*t26185*(1.0/3.0);
                double t26191 = Dd*t26185*t26188*(1.0/3.0);
                double t26192 = 1/t26184;
                double t26193 = C*t26185*(1.0/9.0);
                double t26194 = Dd*t26185*t26188*(1.0/9.0);
                double t26195 = t26193+t26194-1.1E1/9.0;
                double t26196 = rho_a[index]*t26192*t26195;
                double t26197 = t26190+t26191+t26196-1.0/9.0;
                double t26198 = 1/pow(t26184,4.0/3.0);
                double t26199 = Dd*Dd;
                double t26200 = 1/pow(t26184,5.0/3.0);
                double t26201 = 1/(t26187*t26187);
                double t26203 = rho_b[index]*rho_b[index];
                double t26204 = rho_a[index]*rho_b[index]*t26197;
                double t26205 = t26203+t26204;
                double t26206 = 1/(t26184*t26184*t26184*t26184*t26184);
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t26164*t26165*(-8.0/3.0)-d2*e2*t26165* \
                   t26166*(8.0/3.0)+d1*e1*t26153*t26180*t26167+d2*e2*t26153*t26183*t26168+d1*e1*gamma_aa[index]*t26153* \
                   t26167*(d1*t26160*t26165*1.2E1-d1*gamma_aa[index]*t26170*t26171*4.0+d1*t26161*t26155*t26169*4.0)+d2* \
                   e2*gamma_aa[index]*t26153*t26168*(d2*t26160*t26165*1.2E1-d2*gamma_aa[index]*t26170*t26171*4.0+d2*t26161* \
                   t26155*t26169*4.0)+d1*e1*gamma_aa[index]*t26165*t26174*t26167*(8.0/3.0)+d2*e2*gamma_aa[index]*t26165* \
                   t26168*t26177*(8.0/3.0)-d1*e1*gamma_aa[index]*t26153*t26180*t26174*1/(t26157*t26157*t26157)*2.0-d2* \
                   e2*gamma_aa[index]*t26153*1/(t26163*t26163*t26163)*t26183*t26177*2.0)-pow(rho_a[index],1.0/3.0)*(d1* \
                   e1*t26153*t26164+d2*e2*t26153*t26166-d1*e1*gamma_aa[index]*t26153*t26174*t26167-d2*e2*gamma_aa[index]* \
                   t26153*t26168*t26177)*(4.0/3.0)-A*B*t26205*1/pow(t26184,1.4E1/3.0)*t26188*t26189*(1.1E1/3.0)+A*B*1/ \
                   pow(t26184,1.1E1/3.0)*t26188*t26189*(rho_b[index]*t26197-rho_a[index]*rho_b[index]*(C*t26198*(1.0/ \
                   9.0)-t26192*t26195+rho_a[index]*t26192*(C*t26198*(1.0/2.7E1)+Dd*t26188*t26198*(1.0/2.7E1)-t26200*t26201* \
                   t26199*(1.0/2.7E1))+rho_a[index]*1/(t26184*t26184)*t26195+Dd*t26188*t26198*(1.0/9.0)-t26200*t26201* \
                   t26199*(1.0/9.0)))+A*B*C*t26205*t26206*t26188*t26189*(1.0/3.0)+A*B*Dd*t26201*t26205*t26206*t26189* \
                   (1.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t26649 = sqrt(gamma_aa[index]);
                double t26650 = 1/pow(rho_a[index],4.0/3.0);
                double t26651 = 1/pow(rho_a[index],8.0/3.0);
                double t26652 = t26650*t26649;
                double t26653 = log(t26652+sqrt(t26652*t26652+1.0));
                double t26654 = d1*t26650*t26653*t26649*6.0;
                double t26655 = t26654+1.0;
                double t26656 = gamma_aa[index]*t26651;
                double t26657 = t26656+1.0;
                double t26658 = 1/sqrt(t26657);
                double t26659 = 1/sqrt(gamma_aa[index]);
                double t26660 = d2*t26650*t26653*t26649*6.0;
                double t26661 = t26660+1.0;
                double t26662 = 1/t26655;
                double t26663 = 1/pow(rho_a[index],1.1E1/3.0);
                double t26664 = 1/t26661;
                double t26665 = 1/(t26655*t26655);
                double t26666 = 1/(t26661*t26661);
                double t26667 = 1/pow(rho_a[index],7.0/3.0);
                double t26668 = 1/pow(rho_a[index],1.9E1/3.0);
                double t26669 = 1/pow(t26657,3.0/2.0);
                double t26670 = d1*t26651*t26658*3.0;
                double t26671 = d1*t26650*t26653*t26659*3.0;
                double t26672 = t26670+t26671;
                double t26673 = d2*t26651*t26658*3.0;
                double t26674 = d2*t26650*t26653*t26659*3.0;
                double t26675 = t26673+t26674;
                double t26676 = d1*gamma_aa[index]*t26663*t26658*8.0;
                double t26677 = d1*t26653*t26649*t26667*8.0;
                double t26678 = t26676+t26677;
                double t26679 = d2*gamma_aa[index]*t26663*t26658*8.0;
                double t26680 = d2*t26653*t26649*t26667*8.0;
                double t26681 = t26680+t26679;
                v_rho_a_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t26662*t26663*(-8.0/3.0)-d2*e2*t26663* \
                   t26664*(8.0/3.0)+d1*e1*t26651*t26665*t26678+d2*e2*t26651*t26681*t26666+d1*e1*gamma_aa[index]*t26651* \
                   t26665*(d1*t26663*t26658*1.2E1-d1*gamma_aa[index]*t26668*t26669*4.0+d1*t26653*t26667*t26659*4.0)+d2* \
                   e2*gamma_aa[index]*t26651*t26666*(d2*t26663*t26658*1.2E1-d2*gamma_aa[index]*t26668*t26669*4.0+d2*t26653* \
                   t26667*t26659*4.0)+d1*e1*gamma_aa[index]*t26663*t26672*t26665*(8.0/3.0)+d2*e2*gamma_aa[index]*t26663* \
                   t26666*t26675*(8.0/3.0)-d1*e1*gamma_aa[index]*t26651*t26672*1/(t26655*t26655*t26655)*t26678*2.0-d2* \
                   e2*gamma_aa[index]*t26651*1/(t26661*t26661*t26661)*t26681*t26675*2.0)-pow(rho_a[index],1.0/3.0)*(d1* \
                   e1*t26651*t26662+d2*e2*t26651*t26664-d1*e1*gamma_aa[index]*t26651*t26672*t26665-d2*e2*gamma_aa[index]* \
                   t26651*t26666*t26675)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26208 = rho_a[index]+rho_b[index];
                double t26209 = 1/pow(t26208,1.0/3.0);
                double t26210 = Dd*t26209;
                double t26211 = t26210+1.0;
                double t26212 = 1/t26211;
                double t26218 = C*t26209;
                double t26213 = exp(-t26218);
                double t26214 = C*t26209*(7.0/9.0);
                double t26215 = Dd*t26212*t26209*(7.0/9.0);
                double t26216 = t26214+t26215-4.7E1/9.0;
                double t26217 = 1/pow(t26208,4.0/3.0);
                double t26219 = t26208*t26208;
                double t26220 = t26219*(4.0/3.0);
                double t26221 = rho_a[index]*rho_b[index]*t26216;
                double t26222 = t26220+t26221;
                double t26223 = 1/(t26208*t26208*t26208*t26208*t26208);
                double t26224 = 1/(t26211*t26211);
                v_rho_a_gamma_ab_[index] = A*B*t26212*t26213*t26222*1/pow(t26208,1.4E1/3.0)*(-1.1E1/3.0)+A*B*t26212* \
                   t26213*1/pow(t26208,1.1E1/3.0)*(rho_a[index]*(8.0/3.0)+rho_b[index]*(8.0/3.0)+rho_b[index]*t26216- \
                   rho_a[index]*rho_b[index]*(C*t26217*(7.0/2.7E1)-(Dd*Dd)*t26224*1/pow(t26208,5.0/3.0)*(7.0/2.7E1)+Dd* \
                   t26212*t26217*(7.0/2.7E1)))+A*B*C*t26212*t26213*t26222*t26223*(1.0/3.0)+A*B*Dd*t26213*t26222*t26223* \
                   t26224*(1.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26226 = rho_a[index]+rho_b[index];
                double t26227 = 1/pow(t26226,1.0/3.0);
                double t26228 = Dd*t26227;
                double t26229 = t26228+1.0;
                double t26230 = 1/t26229;
                double t26244 = C*t26227;
                double t26231 = exp(-t26244);
                double t26232 = C*t26227*(1.0/3.0);
                double t26233 = Dd*t26230*t26227*(1.0/3.0);
                double t26234 = 1/t26226;
                double t26235 = C*t26227*(1.0/9.0);
                double t26236 = Dd*t26230*t26227*(1.0/9.0);
                double t26237 = t26235+t26236-1.1E1/9.0;
                double t26238 = rho_b[index]*t26234*t26237;
                double t26239 = t26232+t26233+t26238-1.0/9.0;
                double t26240 = 1/pow(t26226,4.0/3.0);
                double t26241 = Dd*Dd;
                double t26242 = 1/pow(t26226,5.0/3.0);
                double t26243 = 1/(t26229*t26229);
                double t26245 = rho_a[index]*rho_a[index];
                double t26246 = rho_a[index]*rho_b[index]*t26239;
                double t26247 = t26245+t26246;
                double t26248 = 1/(t26226*t26226*t26226*t26226*t26226);
                v_rho_a_gamma_bb_[index] = A*B*t26230*t26231*1/pow(t26226,1.4E1/3.0)*t26247*(-1.1E1/3.0)+A*B*t26230* \
                   t26231*1/pow(t26226,1.1E1/3.0)*(rho_a[index]*2.0+rho_b[index]*t26239-rho_a[index]*rho_b[index]*(C* \
                   t26240*(1.0/9.0)+rho_b[index]*t26234*(C*t26240*(1.0/2.7E1)+Dd*t26230*t26240*(1.0/2.7E1)-t26241*t26242* \
                   t26243*(1.0/2.7E1))+rho_b[index]*1/(t26226*t26226)*t26237+Dd*t26230*t26240*(1.0/9.0)-t26241*t26242* \
                   t26243*(1.0/9.0)))+A*B*C*t26230*t26231*t26247*t26248*(1.0/3.0)+A*B*Dd*t26231*t26243*t26247*t26248* \
                   (1.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26250 = rho_a[index]+rho_b[index];
                double t26251 = 1/pow(t26250,1.0/3.0);
                double t26252 = Dd*t26251;
                double t26253 = t26252+1.0;
                double t26254 = 1/t26253;
                double t26268 = C*t26251;
                double t26255 = exp(-t26268);
                double t26256 = C*t26251*(1.0/3.0);
                double t26257 = Dd*t26251*t26254*(1.0/3.0);
                double t26258 = 1/t26250;
                double t26259 = C*t26251*(1.0/9.0);
                double t26260 = Dd*t26251*t26254*(1.0/9.0);
                double t26261 = t26260+t26259-1.1E1/9.0;
                double t26262 = rho_a[index]*t26261*t26258;
                double t26263 = t26262+t26256+t26257-1.0/9.0;
                double t26264 = 1/pow(t26250,4.0/3.0);
                double t26265 = Dd*Dd;
                double t26266 = 1/pow(t26250,5.0/3.0);
                double t26267 = 1/(t26253*t26253);
                double t26269 = rho_b[index]*rho_b[index];
                double t26270 = rho_a[index]*rho_b[index]*t26263;
                double t26271 = t26270+t26269;
                double t26272 = 1/(t26250*t26250*t26250*t26250*t26250);
                v_rho_b_gamma_aa_[index] = A*B*1/pow(t26250,1.4E1/3.0)*t26271*t26254*t26255*(-1.1E1/3.0)+A*B*1/pow(t26250,1.1E1/ \
                   3.0)*t26254*t26255*(rho_b[index]*2.0+rho_a[index]*t26263-rho_a[index]*rho_b[index]*(C*t26264*(1.0/ \
                   9.0)+rho_a[index]*t26258*(C*t26264*(1.0/2.7E1)+Dd*t26254*t26264*(1.0/2.7E1)-t26265*t26266*t26267*(1.0/ \
                   2.7E1))+rho_a[index]*1/(t26250*t26250)*t26261+Dd*t26254*t26264*(1.0/9.0)-t26265*t26266*t26267*(1.0/ \
                   9.0)))+A*B*C*t26271*t26254*t26272*t26255*(1.0/3.0)+A*B*Dd*t26271*t26272*t26255*t26267*(1.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26274 = rho_a[index]+rho_b[index];
                double t26275 = 1/pow(t26274,1.0/3.0);
                double t26276 = Dd*t26275;
                double t26277 = t26276+1.0;
                double t26278 = 1/t26277;
                double t26284 = C*t26275;
                double t26279 = exp(-t26284);
                double t26280 = C*t26275*(7.0/9.0);
                double t26281 = Dd*t26275*t26278*(7.0/9.0);
                double t26282 = t26280+t26281-4.7E1/9.0;
                double t26283 = 1/pow(t26274,4.0/3.0);
                double t26285 = t26274*t26274;
                double t26286 = t26285*(4.0/3.0);
                double t26287 = rho_a[index]*rho_b[index]*t26282;
                double t26288 = t26286+t26287;
                double t26289 = 1/(t26274*t26274*t26274*t26274*t26274);
                double t26290 = 1/(t26277*t26277);
                v_rho_b_gamma_ab_[index] = A*B*1/pow(t26274,1.4E1/3.0)*t26278*t26279*t26288*(-1.1E1/3.0)+A*B*1/pow(t26274,1.1E1/ \
                   3.0)*t26278*t26279*(rho_a[index]*(8.0/3.0)+rho_b[index]*(8.0/3.0)+rho_a[index]*t26282-rho_a[index]* \
                   rho_b[index]*(C*t26283*(7.0/2.7E1)-(Dd*Dd)*t26290*1/pow(t26274,5.0/3.0)*(7.0/2.7E1)+Dd*t26283*t26278* \
                   (7.0/2.7E1)))+A*B*C*t26278*t26279*t26288*t26289*(1.0/3.0)+A*B*Dd*t26290*t26279*t26288*t26289*(1.0/ \
                   3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26292 = sqrt(gamma_bb[index]);
                double t26293 = 1/pow(rho_b[index],4.0/3.0);
                double t26294 = 1/pow(rho_b[index],8.0/3.0);
                double t26295 = t26292*t26293;
                double t26296 = log(t26295+sqrt(t26295*t26295+1.0));
                double t26297 = d1*t26292*t26293*t26296*6.0;
                double t26298 = t26297+1.0;
                double t26299 = gamma_bb[index]*t26294;
                double t26300 = t26299+1.0;
                double t26301 = 1/sqrt(t26300);
                double t26302 = 1/sqrt(gamma_bb[index]);
                double t26303 = d2*t26292*t26293*t26296*6.0;
                double t26304 = t26303+1.0;
                double t26305 = 1/t26298;
                double t26306 = 1/pow(rho_b[index],1.1E1/3.0);
                double t26307 = 1/t26304;
                double t26308 = 1/(t26298*t26298);
                double t26309 = 1/(t26304*t26304);
                double t26310 = 1/pow(rho_b[index],7.0/3.0);
                double t26311 = 1/pow(rho_b[index],1.9E1/3.0);
                double t26312 = 1/pow(t26300,3.0/2.0);
                double t26313 = d1*t26301*t26294*3.0;
                double t26314 = d1*t26302*t26293*t26296*3.0;
                double t26315 = t26313+t26314;
                double t26316 = d2*t26301*t26294*3.0;
                double t26317 = d2*t26302*t26293*t26296*3.0;
                double t26318 = t26316+t26317;
                double t26319 = d1*gamma_bb[index]*t26301*t26306*8.0;
                double t26320 = d1*t26310*t26292*t26296*8.0;
                double t26321 = t26320+t26319;
                double t26322 = d2*gamma_bb[index]*t26301*t26306*8.0;
                double t26323 = d2*t26310*t26292*t26296*8.0;
                double t26324 = t26322+t26323;
                double t26325 = rho_a[index]+rho_b[index];
                double t26326 = 1/pow(t26325,1.0/3.0);
                double t26327 = Dd*t26326;
                double t26328 = t26327+1.0;
                double t26329 = 1/t26328;
                double t26343 = C*t26326;
                double t26330 = exp(-t26343);
                double t26331 = C*t26326*(1.0/3.0);
                double t26332 = Dd*t26326*t26329*(1.0/3.0);
                double t26333 = 1/t26325;
                double t26334 = C*t26326*(1.0/9.0);
                double t26335 = Dd*t26326*t26329*(1.0/9.0);
                double t26336 = t26334+t26335-1.1E1/9.0;
                double t26337 = rho_b[index]*t26333*t26336;
                double t26338 = t26331+t26332+t26337-1.0/9.0;
                double t26339 = 1/pow(t26325,4.0/3.0);
                double t26340 = Dd*Dd;
                double t26341 = 1/pow(t26325,5.0/3.0);
                double t26342 = 1/(t26328*t26328);
                double t26344 = rho_a[index]*rho_a[index];
                double t26345 = rho_a[index]*rho_b[index]*t26338;
                double t26346 = t26344+t26345;
                double t26347 = 1/(t26325*t26325*t26325*t26325*t26325);
                v_rho_b_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t26305*t26306*(-8.0/3.0)-d2*e2*t26306* \
                   t26307*(8.0/3.0)+d1*e1*t26321*t26308*t26294+d2*e2*t26324*t26309*t26294+d1*e1*gamma_bb[index]*t26308* \
                   t26294*(d1*t26301*t26306*1.2E1-d1*gamma_bb[index]*t26311*t26312*4.0+d1*t26310*t26302*t26296*4.0)+d2* \
                   e2*gamma_bb[index]*t26309*t26294*(d2*t26301*t26306*1.2E1-d2*gamma_bb[index]*t26311*t26312*4.0+d2*t26310* \
                   t26302*t26296*4.0)+d1*e1*gamma_bb[index]*t26306*t26315*t26308*(8.0/3.0)+d2*e2*gamma_bb[index]*t26306* \
                   t26309*t26318*(8.0/3.0)-d1*e1*gamma_bb[index]*t26321*t26315*t26294*1/(t26298*t26298*t26298)*2.0-d2* \
                   e2*gamma_bb[index]*1/(t26304*t26304*t26304)*t26324*t26318*t26294*2.0)-pow(rho_b[index],1.0/3.0)*(d1* \
                   e1*t26305*t26294+d2*e2*t26307*t26294-d1*e1*gamma_bb[index]*t26315*t26308*t26294-d2*e2*gamma_bb[index]* \
                   t26309*t26318*t26294)*(4.0/3.0)-A*B*t26330*1/pow(t26325,1.4E1/3.0)*t26346*t26329*(1.1E1/3.0)+A*B*t26330* \
                   1/pow(t26325,1.1E1/3.0)*t26329*(rho_a[index]*t26338-rho_a[index]*rho_b[index]*(C*t26339*(1.0/9.0)- \
                   t26333*t26336+rho_b[index]*t26333*(C*t26339*(1.0/2.7E1)+Dd*t26329*t26339*(1.0/2.7E1)-t26340*t26341* \
                   t26342*(1.0/2.7E1))+rho_b[index]*1/(t26325*t26325)*t26336+Dd*t26329*t26339*(1.0/9.0)-t26340*t26341* \
                   t26342*(1.0/9.0)))+A*B*C*t26330*t26346*t26329*t26347*(1.0/3.0)+A*B*Dd*t26330*t26342*t26346*t26347* \
                   (1.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t26497 = sqrt(gamma_bb[index]);
                double t26498 = 1/pow(rho_b[index],4.0/3.0);
                double t26499 = 1/pow(rho_b[index],8.0/3.0);
                double t26500 = t26497*t26498;
                double t26501 = log(t26500+sqrt(t26500*t26500+1.0));
                double t26502 = d1*t26501*t26497*t26498*6.0;
                double t26503 = t26502+1.0;
                double t26504 = gamma_bb[index]*t26499;
                double t26505 = t26504+1.0;
                double t26506 = 1/sqrt(t26505);
                double t26507 = 1/sqrt(gamma_bb[index]);
                double t26508 = d2*t26501*t26497*t26498*6.0;
                double t26509 = t26508+1.0;
                double t26510 = 1/t26503;
                double t26511 = 1/pow(rho_b[index],1.1E1/3.0);
                double t26512 = 1/t26509;
                double t26513 = 1/(t26503*t26503);
                double t26514 = 1/(t26509*t26509);
                double t26515 = 1/pow(rho_b[index],7.0/3.0);
                double t26516 = 1/pow(rho_b[index],1.9E1/3.0);
                double t26517 = 1/pow(t26505,3.0/2.0);
                double t26518 = d1*t26506*t26499*3.0;
                double t26519 = d1*t26501*t26507*t26498*3.0;
                double t26520 = t26518+t26519;
                double t26521 = d2*t26506*t26499*3.0;
                double t26522 = d2*t26501*t26507*t26498*3.0;
                double t26523 = t26521+t26522;
                double t26524 = d1*gamma_bb[index]*t26511*t26506*8.0;
                double t26525 = d1*t26501*t26515*t26497*8.0;
                double t26526 = t26524+t26525;
                double t26527 = d2*gamma_bb[index]*t26511*t26506*8.0;
                double t26528 = d2*t26501*t26515*t26497*8.0;
                double t26529 = t26527+t26528;
                v_rho_b_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t26510*t26511*(-8.0/3.0)-d2*e2*t26511* \
                   t26512*(8.0/3.0)+d1*e1*t26513*t26526*t26499+d2*e2*t26514*t26529*t26499+d1*e1*gamma_bb[index]*t26513* \
                   t26499*(d1*t26511*t26506*1.2E1-d1*gamma_bb[index]*t26516*t26517*4.0+d1*t26501*t26515*t26507*4.0)+d2* \
                   e2*gamma_bb[index]*t26514*t26499*(d2*t26511*t26506*1.2E1-d2*gamma_bb[index]*t26516*t26517*4.0+d2*t26501* \
                   t26515*t26507*4.0)+d1*e1*gamma_bb[index]*t26511*t26520*t26513*(8.0/3.0)+d2*e2*gamma_bb[index]*t26511* \
                   t26514*t26523*(8.0/3.0)-d1*e1*gamma_bb[index]*t26520*1/(t26503*t26503*t26503)*t26526*t26499*2.0-d2* \
                   e2*gamma_bb[index]*t26523*1/(t26509*t26509*t26509)*t26529*t26499*2.0)-pow(rho_b[index],1.0/3.0)*(d1* \
                   e1*t26510*t26499+d2*e2*t26512*t26499-d1*e1*gamma_bb[index]*t26520*t26513*t26499-d2*e2*gamma_bb[index]* \
                   t26514*t26523*t26499)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26349 = 1/pow(rho_a[index],8.0/3.0);
                double t26350 = 1/pow(rho_a[index],4.0/3.0);
                double t26351 = sqrt(gamma_aa[index]);
                double t26352 = t26350*t26351;
                double t26353 = log(t26352+sqrt(t26352*t26352+1.0));
                double t26354 = gamma_aa[index]*t26349;
                double t26355 = t26354+1.0;
                double t26356 = 1/sqrt(t26355);
                double t26357 = 1/sqrt(gamma_aa[index]);
                double t26358 = d1*t26356*t26349*3.0;
                double t26359 = d1*t26350*t26353*t26357*3.0;
                double t26360 = t26358+t26359;
                double t26361 = d1*t26350*t26351*t26353*6.0;
                double t26362 = t26361+1.0;
                double t26363 = d2*t26356*t26349*3.0;
                double t26364 = d2*t26350*t26353*t26357*3.0;
                double t26365 = t26363+t26364;
                double t26366 = d2*t26350*t26351*t26353*6.0;
                double t26367 = t26366+1.0;
                double t26368 = 1/(t26362*t26362);
                double t26369 = 1/(t26367*t26367);
                double t26370 = 1/pow(rho_a[index],1.6E1/3.0);
                double t26371 = 1/pow(t26355,3.0/2.0);
                double t26372 = 1/gamma_aa[index];
                double t26373 = 1/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t26360*t26349*t26368*-2.0-d2*e2*t26365* \
                   t26349*t26369*2.0+d1*e1*gamma_aa[index]*(t26360*t26360)*1/(t26362*t26362*t26362)*t26349*2.0+d2*e2* \
                   gamma_aa[index]*(t26365*t26365)*t26349*1/(t26367*t26367*t26367)*2.0+d1*e1*gamma_aa[index]*t26349*t26368* \
                   (d1*t26370*t26371*(3.0/2.0)+d1*t26350*t26353*t26373*(3.0/2.0)-d1*t26372*t26356*t26349*(3.0/2.0))+d2* \
                   e2*gamma_aa[index]*t26349*t26369*(d2*t26370*t26371*(3.0/2.0)+d2*t26350*t26353*t26373*(3.0/2.0)-d2* \
                   t26372*t26356*t26349*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                double t26688 = 1/pow(rho_a[index],8.0/3.0);
                double t26689 = 1/pow(rho_a[index],4.0/3.0);
                double t26690 = sqrt(gamma_aa[index]);
                double t26691 = t26690*t26689;
                double t26692 = log(t26691+sqrt(t26691*t26691+1.0));
                double t26693 = gamma_aa[index]*t26688;
                double t26694 = t26693+1.0;
                double t26695 = 1/sqrt(t26694);
                double t26696 = 1/sqrt(gamma_aa[index]);
                double t26697 = d1*t26695*t26688*3.0;
                double t26698 = d1*t26692*t26696*t26689*3.0;
                double t26699 = t26697+t26698;
                double t26700 = d1*t26690*t26692*t26689*6.0;
                double t26701 = t26700+1.0;
                double t26702 = d2*t26695*t26688*3.0;
                double t26703 = d2*t26692*t26696*t26689*3.0;
                double t26704 = t26702+t26703;
                double t26705 = d2*t26690*t26692*t26689*6.0;
                double t26706 = t26705+1.0;
                double t26707 = 1/(t26701*t26701);
                double t26708 = 1/(t26706*t26706);
                double t26709 = 1/pow(rho_a[index],1.6E1/3.0);
                double t26710 = 1/pow(t26694,3.0/2.0);
                double t26711 = 1/gamma_aa[index];
                double t26712 = 1/pow(gamma_aa[index],3.0/2.0);
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d1*e1*t26707*t26688*t26699*-2.0-d2*e2*t26704* \
                   t26708*t26688*2.0+d1*e1*gamma_aa[index]*1/(t26701*t26701*t26701)*t26688*(t26699*t26699)*2.0+d2*e2* \
                   gamma_aa[index]*(t26704*t26704)*1/(t26706*t26706*t26706)*t26688*2.0+d1*e1*gamma_aa[index]*t26707*t26688* \
                   (d1*t26710*t26709*(3.0/2.0)+d1*t26712*t26692*t26689*(3.0/2.0)-d1*t26711*t26695*t26688*(3.0/2.0))+d2* \
                   e2*gamma_aa[index]*t26708*t26688*(d2*t26710*t26709*(3.0/2.0)+d2*t26712*t26692*t26689*(3.0/2.0)-d2* \
                   t26711*t26695*t26688*(3.0/2.0)));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26379 = 1/pow(rho_b[index],8.0/3.0);
                double t26380 = 1/pow(rho_b[index],4.0/3.0);
                double t26381 = sqrt(gamma_bb[index]);
                double t26382 = t26380*t26381;
                double t26383 = log(t26382+sqrt(t26382*t26382+1.0));
                double t26384 = gamma_bb[index]*t26379;
                double t26385 = t26384+1.0;
                double t26386 = 1/sqrt(t26385);
                double t26387 = 1/sqrt(gamma_bb[index]);
                double t26388 = d1*t26386*t26379*3.0;
                double t26389 = d1*t26380*t26383*t26387*3.0;
                double t26390 = t26388+t26389;
                double t26391 = d1*t26380*t26381*t26383*6.0;
                double t26392 = t26391+1.0;
                double t26393 = d2*t26386*t26379*3.0;
                double t26394 = d2*t26380*t26383*t26387*3.0;
                double t26395 = t26393+t26394;
                double t26396 = d2*t26380*t26381*t26383*6.0;
                double t26397 = t26396+1.0;
                double t26398 = 1/(t26392*t26392);
                double t26399 = 1/(t26397*t26397);
                double t26400 = 1/pow(rho_b[index],1.6E1/3.0);
                double t26401 = 1/pow(t26385,3.0/2.0);
                double t26402 = 1/gamma_bb[index];
                double t26403 = 1/pow(gamma_bb[index],3.0/2.0);
                v_gamma_bb_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t26390*t26379*t26398*-2.0-d2*e2*t26395* \
                   t26379*t26399*2.0+d1*e1*gamma_bb[index]*(t26390*t26390)*1/(t26392*t26392*t26392)*t26379*2.0+d2*e2* \
                   gamma_bb[index]*(t26395*t26395)*t26379*1/(t26397*t26397*t26397)*2.0+d1*e1*gamma_bb[index]*t26379*t26398* \
                   (d1*t26400*t26401*(3.0/2.0)+d1*t26403*t26380*t26383*(3.0/2.0)-d1*t26402*t26386*t26379*(3.0/2.0))+d2* \
                   e2*gamma_bb[index]*t26379*t26399*(d2*t26400*t26401*(3.0/2.0)+d2*t26403*t26380*t26383*(3.0/2.0)-d2* \
                   t26402*t26386*t26379*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t26536 = 1/pow(rho_b[index],8.0/3.0);
                double t26537 = 1/pow(rho_b[index],4.0/3.0);
                double t26538 = sqrt(gamma_bb[index]);
                double t26539 = t26537*t26538;
                double t26540 = log(t26539+sqrt(t26539*t26539+1.0));
                double t26541 = gamma_bb[index]*t26536;
                double t26542 = t26541+1.0;
                double t26543 = 1/sqrt(t26542);
                double t26544 = 1/sqrt(gamma_bb[index]);
                double t26545 = d1*t26543*t26536*3.0;
                double t26546 = d1*t26540*t26544*t26537*3.0;
                double t26547 = t26545+t26546;
                double t26548 = d1*t26540*t26537*t26538*6.0;
                double t26549 = t26548+1.0;
                double t26550 = d2*t26543*t26536*3.0;
                double t26551 = d2*t26540*t26544*t26537*3.0;
                double t26552 = t26550+t26551;
                double t26553 = d2*t26540*t26537*t26538*6.0;
                double t26554 = t26553+1.0;
                double t26555 = 1/(t26549*t26549);
                double t26556 = 1/(t26554*t26554);
                double t26557 = 1/pow(rho_b[index],1.6E1/3.0);
                double t26558 = 1/pow(t26542,3.0/2.0);
                double t26559 = 1/gamma_bb[index];
                double t26560 = 1/pow(gamma_bb[index],3.0/2.0);
                v_gamma_bb_gamma_bb_[index] = -pow(rho_b[index],4.0/3.0)*(d1*e1*t26536*t26555*t26547*-2.0-d2*e2*t26552* \
                   t26536*t26556*2.0+d1*e1*gamma_bb[index]*t26536*(t26547*t26547)*1/(t26549*t26549*t26549)*2.0+d2*e2* \
                   gamma_bb[index]*(t26552*t26552)*t26536*1/(t26554*t26554*t26554)*2.0+d1*e1*gamma_bb[index]*t26536*t26555* \
                   (d1*t26557*t26558*(3.0/2.0)+d1*t26540*t26560*t26537*(3.0/2.0)-d1*t26543*t26536*t26559*(3.0/2.0))+d2* \
                   e2*gamma_bb[index]*t26536*t26556*(d2*t26557*t26558*(3.0/2.0)+d2*t26540*t26560*t26537*(3.0/2.0)-d2* \
                   t26543*t26536*t26559*(3.0/2.0)));
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

