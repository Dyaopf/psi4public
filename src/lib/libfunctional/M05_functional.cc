/**********************************************************
* M05_functional.cc: definitions for M05_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 31-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "M05_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

M05_Functional::M05_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "M05";
    description_ = "M05 Meta-GGA Functional";
    citation_ = "Yan Zhao, Nathan E. Schultz, and D. G. Truhlar, J. Chem. Phys., 123, 161103, 2005";
    
    double X = 2.8000000000000003E-01;
    params_.push_back(make_pair("X",X));
    double C_k = 9.1155997446911918E+00;
    params_.push_back(make_pair("C_k",C_k));
    double k = 3.0936677262801355E+00;
    params_.push_back(make_pair("k",k));
    double e = -2.3873241463784300E-01;
    params_.push_back(make_pair("e",e));
    double kp = 8.0400000000000005E-01;
    params_.push_back(make_pair("kp",kp));
    double mu_ = 2.1951497276451709E-01;
    params_.push_back(make_pair("mu_",mu_));
    double a_1 = 8.1509999999999999E-02;
    params_.push_back(make_pair("a_1",a_1));
    double a_2 = -4.3956000000000001E-01;
    params_.push_back(make_pair("a_2",a_2));
    double a_3 = -3.2242199999999999E+00;
    params_.push_back(make_pair("a_3",a_3));
    double a_4 = 2.0181900000000002E+00;
    params_.push_back(make_pair("a_4",a_4));
    double a_5 = 8.7943099999999994E+00;
    params_.push_back(make_pair("a_5",a_5));
    double a_6 = -2.9499999999999999E-03;
    params_.push_back(make_pair("a_6",a_6));
    double a_7 = 9.8202900000000000E+00;
    params_.push_back(make_pair("a_7",a_7));
    double a_8 = -4.8235099999999997E+00;
    params_.push_back(make_pair("a_8",a_8));
    double a_9 = -4.8175739999999998E+01;
    params_.push_back(make_pair("a_9",a_9));
    double a_10 = 3.6480199999999998E+00;
    params_.push_back(make_pair("a_10",a_10));
    double a_11 = 3.4022480000000002E+01;
    params_.push_back(make_pair("a_11",a_11));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 3.0999999999999999E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 5.9999999999999998E-02;
    params_.push_back(make_pair("gcaa",gcaa));
    double ccab0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 3.7856900000000002E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.4152609999999999E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = -7.4658899999999999E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = 1.7944910000000000E+01;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = 3.7734399999999999E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = -2.6044630000000002E+01;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = 3.0699130000000000E+01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = -9.2269500000000004E+00;
    params_.push_back(make_pair("ccaa4",ccaa4));

    is_gga_ = true;
    is_meta_ = true;

    //Required allocateion
    allocate();
}
M05_Functional::~M05_Functional()
{
}
void M05_Functional::computeRKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double k = params_[2].second;
    double e = params_[3].second;
    double kp = params_[4].second;
    double mu_ = params_[5].second;
    double a_1 = params_[6].second;
    double a_2 = params_[7].second;
    double a_3 = params_[8].second;
    double a_4 = params_[9].second;
    double a_5 = params_[10].second;
    double a_6 = params_[11].second;
    double a_7 = params_[12].second;
    double a_8 = params_[13].second;
    double a_9 = params_[14].second;
    double a_10 = params_[15].second;
    double a_11 = params_[16].second;
    double two_13 = params_[17].second;
    double d2fz0 = params_[18].second;
    double c = params_[19].second;
    double Aa = params_[20].second;
    double a1a = params_[21].second;
    double b1a = params_[22].second;
    double b2a = params_[23].second;
    double b3a = params_[24].second;
    double b4a = params_[25].second;
    double c0p = params_[26].second;
    double a1p = params_[27].second;
    double b1p = params_[28].second;
    double b2p = params_[29].second;
    double b3p = params_[30].second;
    double b4p = params_[31].second;
    double c0f = params_[32].second;
    double a1f = params_[33].second;
    double b1f = params_[34].second;
    double b2f = params_[35].second;
    double b3f = params_[36].second;
    double b4f = params_[37].second;
    double gcab = params_[38].second;
    double gcaa = params_[39].second;
    double ccab0 = params_[40].second;
    double ccab1 = params_[41].second;
    double ccab2 = params_[42].second;
    double ccab3 = params_[43].second;
    double ccab4 = params_[44].second;
    double ccaa0 = params_[45].second;
    double ccaa1 = params_[46].second;
    double ccaa2 = params_[47].second;
    double ccaa3 = params_[48].second;
    double ccaa4 = params_[49].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t6667 = 1/pow(rho_a[index],1.0/3.0);
            double t6668 = c*t6667;
            double t6669 = sqrt(t6668);
            double t6670 = pow(t6668,3.0/2.0);
            double t6671 = c*c;
            double t6672 = 1/pow(rho_a[index],2.0/3.0);
            double t6673 = 1/c0p;
            double t6674 = b1p*t6669;
            double t6675 = b3p*t6670;
            double t6676 = b4p*t6671*t6672;
            double t6677 = b2p*c*t6667;
            double t6678 = t6674+t6675+t6676+t6677;
            double t6679 = 1/t6678;
            double t6680 = t6673*t6679*(1.0/2.0);
            double t6681 = t6680+1.0;
            double t6682 = log(t6681);
            double t6683 = a1p*c*t6667;
            double t6684 = t6683+1.0;
            double t6685 = rho_a[index]*2.0;
            double t6686 = 1/pow(t6685,1.0/3.0);
            double t6687 = c*t6686;
            double t6688 = gamma_aa[index]*gamma_aa[index];
            double t6689 = gcab*gcab;
            double t6690 = t6688*t6688;
            double t6691 = t6689*t6689;
            double t6692 = 1/pow(rho_a[index],3.2E1/3.0);
            double t6693 = 1/pow(rho_a[index],8.0/3.0);
            double t6694 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t6695 = 1/pow(rho_a[index],1.6E1/3.0);
            double t6696 = 1/pow(t6685,2.0/3.0);
            double t6697 = pow(rho_a[index],5.0/3.0);
            double t6698 = 1/tau_a[index];
            double t6699 = C_k*t6697*t6698;
            double t6700 = t6699-1.0;
            double t6701 = t6700*t6700;
            double t6702 = t6701*t6701;
            double t6703 = t6702*t6702;
            double t6704 = t6699+1.0;
            double t6705 = pow(2.0,1.0/3.0);
            double t6706 = t6705*2.0;
            double t6707 = t6706-2.0;
            double t6708 = two_13*2.0;
            double t6709 = t6708-2.0;
            double t6710 = 1/t6709;
            double t6711 = 1/c0f;
            double t6712 = b1f*t6669;
            double t6713 = b3f*t6670;
            double t6714 = b4f*t6671*t6672;
            double t6715 = b2f*c*t6667;
            double t6716 = t6712+t6713+t6714+t6715;
            double t6717 = 1/t6716;
            double t6718 = t6711*t6717*(1.0/2.0);
            double t6719 = t6718+1.0;
            double t6720 = log(t6719);
            double t6721 = a1f*c*t6667;
            double t6722 = t6721+1.0;
            double t6723 = c0f*t6720*t6722*2.0;
            double t6724 = c0p*t6682*t6684*2.0;
            double t6725 = gcaa*gcaa;
            double t6726 = t6725*t6725;
            functional_[index] = (rho_a[index]*(t6724+t6710*t6707*(t6723-c0p*t6682*t6684*2.0))*2.0-c0p*rho_a[index]* \
               log((t6673*(1.0/2.0))/(b1p*sqrt(t6687)+b3p*pow(t6687,3.0/2.0)+b2p*c*t6686+b4p*t6671*t6696)+1.0)*(a1p* \
               c*t6686+1.0)*4.0)*(ccab0+(ccab2*t6695*t6688*t6689)/(gamma_aa[index]*gcab*t6693*2.0+t6695*t6688*t6689+ \
               1.0)+(ccab1*gamma_aa[index]*gcab*t6693)/(gamma_aa[index]*gcab*t6693+1.0)+(ccab4*t6690*t6691*t6692) \
               /(gamma_aa[index]*gcab*t6693*4.0+t6690*t6691*t6692+t6695*t6688*t6689*6.0+gamma_aa[index]*gcab*t6694* \
               t6688*t6689*4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t6694*t6688*t6689)/(gamma_aa[index]*gcab*t6693*3.0+ \
               t6695*t6688*t6689*3.0+gamma_aa[index]*gcab*t6694*t6688*t6689+1.0))-rho_a[index]*( ( (tau_a[index]- \
               1.0/1.0E20 > 0.0) ? 1.0*(t6698*(tau_a[index]*2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0) \
               -1.0) : 0.0 ) +1.0)*(t6724+t6710*t6707*(t6723-t6724))*(ccaa0+(ccaa2*t6695*t6688*t6725)/(gamma_aa[index]* \
               gcaa*t6693*2.0+t6695*t6688*t6725+1.0)+(ccaa1*gamma_aa[index]*gcaa*t6693)/(gamma_aa[index]*gcaa*t6693+ \
               1.0)+(ccaa4*t6690*t6692*t6726)/(gamma_aa[index]*gcaa*t6693*4.0+t6690*t6692*t6726+t6695*t6688*t6725* \
               6.0+gamma_aa[index]*gcaa*t6694*t6688*t6725*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t6694*t6688*t6725) \
               /(gamma_aa[index]*gcaa*t6693*3.0+t6695*t6688*t6725*3.0+gamma_aa[index]*gcaa*t6694*t6688*t6725+1.0) \
               )*2.0-rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*t6696* \
               (1.0/4.0))/kp+1.0)+1.0)*((a_1*t6700)/t6704+a_2*t6701*1/(t6704*t6704)+a_4*t6702*1/(t6704*t6704*t6704* \
               t6704)+a_8*t6703*1/(t6704*t6704*t6704*t6704*t6704*t6704*t6704*t6704)+a_10*t6701*t6703*1/pow(t6704,1.0E1) \
               +a_3*t6700*t6701*1/(t6704*t6704*t6704)+a_5*t6700*t6702*1/(t6704*t6704*t6704*t6704*t6704)+a_6*t6701* \
               t6702*1/(t6704*t6704*t6704*t6704*t6704*t6704)+a_9*t6700*t6703*1/(t6704*t6704*t6704*t6704*t6704*t6704* \
               t6704*t6704*t6704)+a_11*t6700*t6701*t6703*1/pow(t6704,1.1E1)+a_7*t6700*t6701*t6702*1/(t6704*t6704* \
               t6704*t6704*t6704*t6704*t6704)+1.0)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t6728 = gamma_aa[index]*gamma_aa[index];
            double t6729 = gcab*gcab;
            double t6730 = t6728*t6728;
            double t6731 = t6729*t6729;
            double t6732 = 1/pow(rho_a[index],3.2E1/3.0);
            double t6733 = 1/pow(rho_a[index],8.0/3.0);
            double t6734 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t6735 = 1/pow(rho_a[index],1.6E1/3.0);
            double t6736 = rho_a[index]*2.0;
            double t6737 = 1/pow(t6736,1.0/3.0);
            double t6738 = c*t6737;
            double t6739 = sqrt(t6738);
            double t6740 = b1p*t6739;
            double t6741 = pow(t6738,3.0/2.0);
            double t6742 = b3p*t6741;
            double t6743 = b2p*c*t6737;
            double t6744 = c*c;
            double t6745 = 1/pow(t6736,2.0/3.0);
            double t6746 = b4p*t6744*t6745;
            double t6747 = t6740+t6742+t6743+t6746;
            double t6748 = 1/pow(t6736,4.0/3.0);
            double t6749 = 1/c0p;
            double t6750 = 1/t6747;
            double t6751 = t6750*t6749*(1.0/2.0);
            double t6752 = t6751+1.0;
            double t6753 = 1/pow(rho_a[index],1.0/3.0);
            double t6754 = c*t6753;
            double t6755 = sqrt(t6754);
            double t6756 = b1f*t6755;
            double t6757 = pow(t6754,3.0/2.0);
            double t6758 = b3f*t6757;
            double t6759 = 1/pow(rho_a[index],2.0/3.0);
            double t6760 = b4f*t6744*t6759;
            double t6761 = b2f*c*t6753;
            double t6762 = t6760+t6761+t6756+t6758;
            double t6763 = 1/pow(rho_a[index],4.0/3.0);
            double t6764 = b1p*t6755;
            double t6765 = b3p*t6757;
            double t6766 = b4p*t6744*t6759;
            double t6767 = b2p*c*t6753;
            double t6768 = t6764+t6765+t6766+t6767;
            double t6769 = 1/pow(rho_a[index],5.0/3.0);
            double t6770 = 1/sqrt(t6754);
            double t6771 = 1/c0f;
            double t6772 = 1/t6762;
            double t6773 = t6771*t6772*(1.0/2.0);
            double t6774 = t6773+1.0;
            double t6775 = 1/t6768;
            double t6776 = t6775*t6749*(1.0/2.0);
            double t6777 = t6776+1.0;
            double t6778 = a1p*c*t6753;
            double t6779 = t6778+1.0;
            double t6780 = 1/t6777;
            double t6781 = 1/(t6768*t6768);
            double t6782 = b4p*t6744*t6769*(2.0/3.0);
            double t6783 = b2p*c*t6763*(1.0/3.0);
            double t6784 = b1p*c*t6770*t6763*(1.0/6.0);
            double t6785 = b3p*c*t6763*t6755*(1.0/2.0);
            double t6786 = t6782+t6783+t6784+t6785;
            double t6787 = t6780*t6781*t6786*t6779;
            double t6788 = log(t6777);
            double t6789 = log(t6752);
            double t6790 = a1p*c*t6737;
            double t6791 = t6790+1.0;
            double t6792 = pow(2.0,1.0/3.0);
            double t6793 = t6792*2.0;
            double t6794 = t6793-2.0;
            double t6795 = two_13*2.0;
            double t6796 = t6795-2.0;
            double t6797 = 1/t6796;
            double t6798 = log(t6774);
            double t6799 = a1f*c*t6753;
            double t6800 = t6799+1.0;
            double t6801 = c0f*t6798*t6800*2.0;
            double t6803 = c0p*t6779*t6788*2.0;
            double t6802 = t6801-t6803;
            double t6804 = gamma_aa[index]*gcab*t6733*4.0;
            double t6805 = gamma_aa[index]*gcab*t6734*t6728*t6729*4.0;
            double t6806 = t6735*t6728*t6729*6.0;
            double t6807 = t6730*t6731*t6732;
            double t6808 = t6804+t6805+t6806+t6807+1.0;
            double t6809 = 1/t6808;
            double t6810 = gamma_aa[index]*gcab*t6733;
            double t6811 = t6810+1.0;
            double t6812 = 1/t6811;
            double t6813 = gamma_aa[index]*gcab*t6733*3.0;
            double t6814 = gamma_aa[index]*gcab*t6734*t6728*t6729;
            double t6815 = t6735*t6728*t6729*3.0;
            double t6816 = t6813+t6814+t6815+1.0;
            double t6817 = 1/t6816;
            double t6818 = gamma_aa[index]*gcab*t6733*2.0;
            double t6819 = t6735*t6728*t6729;
            double t6820 = t6818+t6819+1.0;
            double t6821 = 1/t6820;
            double t6822 = 1/pow(rho_a[index],1.9E1/3.0);
            double t6823 = 1/pow(rho_a[index],1.1E1/3.0);
            double t6824 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t6825 = 1/pow(rho_a[index],3.5E1/3.0);
            double t6826 = pow(rho_a[index],5.0/3.0);
            double t6827 = 1/tau_a[index];
            double t6828 = C_k*t6826*t6827;
            double t6829 = t6828-1.0;
            double t6830 = t6829*t6829;
            double t6831 = t6830*t6830;
            double t6832 = t6831*t6831;
            double t6833 = t6828+1.0;
            double t6834 = 1/(k*k);
            double t6835 = 1/kp;
            double t6836 = 1/(rho_a[index]*rho_a[index]);
            double t6837 = gamma_aa[index]*mu_*t6745*t6834*t6835*t6836*(1.0/4.0);
            double t6838 = t6837+1.0;
            double t6839 = 1/t6838;
            double t6840 = kp-kp*t6839+1.0;
            double t6841 = 1/t6833;
            double t6842 = pow(rho_a[index],2.0/3.0);
            double t6843 = 1/(t6833*t6833);
            double t6844 = 1/pow(t6833,1.0E1);
            double t6845 = 1/pow(t6833,1.1E1);
            double t6846 = 1/(t6833*t6833*t6833);
            double t6847 = 1/(t6833*t6833*t6833*t6833);
            double t6848 = 1/(t6833*t6833*t6833*t6833*t6833);
            double t6849 = 1/(t6833*t6833*t6833*t6833*t6833*t6833);
            double t6850 = 1/(t6833*t6833*t6833*t6833*t6833*t6833*t6833);
            double t6851 = 1/(t6833*t6833*t6833*t6833*t6833*t6833*t6833*t6833);
            double t6852 = 1/(t6833*t6833*t6833*t6833*t6833*t6833*t6833*t6833*t6833);
            double t6853 = 1/pow(t6736,5.0/3.0);
            double t6854 = a_1*t6841*t6829;
            double t6855 = a_10*t6830*t6832*t6844;
            double t6856 = a_11*t6830*t6832*t6845*t6829;
            double t6857 = a_2*t6830*t6843;
            double t6858 = a_3*t6830*t6846*t6829;
            double t6859 = a_4*t6831*t6847;
            double t6860 = a_5*t6831*t6829*t6848;
            double t6861 = a_6*t6830*t6831*t6849;
            double t6862 = a_7*t6830*t6831*t6850*t6829;
            double t6863 = a_8*t6832*t6851;
            double t6864 = a_9*t6832*t6852*t6829;
            double t6865 = t6860+t6861+t6862+t6854+t6863+t6855+t6864+t6856+t6857+t6858+t6859+1.0;
            double t6866 = t6794*t6797*t6802;
            double t6867 = t6803+t6866;
            double t6868 = gcaa*gcaa;
            double t6869 = t6868*t6868;
            double t6870 = tau_a[index]-1.0/1.0E20;
            double t6871 = ( (t6870 > 0.0) ?  1.0 : 0.0 ) ;
            double t6872 = tau_a[index]*2.0;
            double t6873 = 1/rho_a[index];
            double t6897 = gamma_aa[index]*t6873*(1.0/4.0);
            double t6874 = t6872-t6897;
            double t6875 = t6827*t6874*(1.0/2.0);
            double t6876 = t6875-1.0;
            double t6877 = t6871*t6876;
            double t6878 = t6877+1.0;
            double t6879 = gamma_aa[index]*gcaa*t6733*4.0;
            double t6880 = gamma_aa[index]*gcaa*t6734*t6728*t6868*4.0;
            double t6881 = t6735*t6728*t6868*6.0;
            double t6882 = t6730*t6732*t6869;
            double t6883 = t6880+t6881+t6882+t6879+1.0;
            double t6884 = 1/t6883;
            double t6885 = gamma_aa[index]*gcaa*t6733;
            double t6886 = t6885+1.0;
            double t6887 = 1/t6886;
            double t6888 = gamma_aa[index]*gcaa*t6733*3.0;
            double t6889 = gamma_aa[index]*gcaa*t6734*t6728*t6868;
            double t6890 = t6735*t6728*t6868*3.0;
            double t6891 = t6890+t6888+t6889+1.0;
            double t6892 = 1/t6891;
            double t6893 = gamma_aa[index]*gcaa*t6733*2.0;
            double t6894 = t6735*t6728*t6868;
            double t6895 = t6893+t6894+1.0;
            double t6896 = 1/t6895;
            double t6898 = 1/t6774;
            double t6899 = 1/(t6762*t6762);
            double t6900 = b4f*t6744*t6769*(2.0/3.0);
            double t6901 = b2f*c*t6763*(1.0/3.0);
            double t6902 = b1f*c*t6770*t6763*(1.0/6.0);
            double t6903 = b3f*c*t6763*t6755*(1.0/2.0);
            double t6904 = t6900+t6901+t6902+t6903;
            double t6905 = a1f*c*c0f*t6763*t6798*(2.0/3.0);
            double t6906 = a1p*c*c0p*t6763*t6788*(2.0/3.0);
            double t6907 = ccaa4*t6730*t6732*t6884*t6869;
            double t6908 = ccaa1*gamma_aa[index]*gcaa*t6733*t6887;
            double t6909 = ccaa3*gamma_aa[index]*gcaa*t6734*t6728*t6892*t6868;
            double t6910 = ccaa2*t6735*t6728*t6868*t6896;
            double t6911 = ccaa0+t6910+t6907+t6908+t6909;
            v_rho_a_[index] = -(rho_a[index]*t6867*2.0-c0p*rho_a[index]*t6791*t6789*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t6812*t6823*(4.0/3.0)+ccab4*t6730*t6731*t6825*t6809*(1.6E1/3.0)+ccab2*t6728*t6729*t6821*t6822* \
               (8.0/3.0)-ccab1*t6728*t6729*1/(t6811*t6811)*t6822*(4.0/3.0)-ccab2*t6735*t6728*t6729*1/(t6820*t6820) \
               *(gamma_aa[index]*gcab*t6823*(8.0/3.0)+t6728*t6729*t6822*(8.0/3.0))-ccab4*t6730*t6731*t6732*1/(t6808* \
               t6808)*(gamma_aa[index]*gcab*t6823*(1.6E1/3.0)+t6730*t6731*t6825*(1.6E1/3.0)+t6728*t6729*t6822*1.6E1+ \
               gamma_aa[index]*gcab*t6728*t6729*t6824*1.6E1)+ccab3*gamma_aa[index]*gcab*t6728*t6729*t6824*t6817*4.0- \
               ccab3*gamma_aa[index]*gcab*t6734*t6728*t6729*1/(t6816*t6816)*(gamma_aa[index]*gcab*t6823*4.0+t6728* \
               t6729*t6822*8.0+gamma_aa[index]*gcab*t6728*t6729*t6824*4.0))-(X-1.0)*(t6840*t6865+rho_a[index]*t6840* \
               (C_k*a_1*t6841*t6842*t6827*(5.0/3.0)-C_k*a_1*t6842*t6843*t6827*t6829*(5.0/3.0)-C_k*a_2*t6830*t6842* \
               t6827*t6846*(1.0E1/3.0)+C_k*a_2*t6842*t6843*t6827*t6829*(1.0E1/3.0)+C_k*a_3*t6830*t6842*t6827*t6846* \
               5.0-C_k*a_4*t6831*t6842*t6827*t6848*(2.0E1/3.0)+C_k*a_5*t6831*t6842*t6827*t6848*(2.5E1/3.0)-C_k*a_8* \
               t6832*t6842*t6852*t6827*(4.0E1/3.0)+C_k*a_9*t6832*t6842*t6852*t6827*1.5E1-C_k*a_10*t6830*t6832*t6842* \
               t6827*t6845*(5.0E1/3.0)+C_k*a_11*t6830*t6832*t6842*t6827*t6845*(5.5E1/3.0)+C_k*a_10*t6832*t6842*t6844* \
               t6827*t6829*(5.0E1/3.0)-C_k*a_3*t6830*t6842*t6827*t6829*t6847*5.0+C_k*a_4*t6830*t6842*t6827*t6829* \
               t6847*(2.0E1/3.0)-C_k*a_5*t6831*t6842*t6827*t6829*t6849*(2.5E1/3.0)-C_k*a_6*t6830*t6831*t6850*t6842* \
               t6827*1.0E1+C_k*a_6*t6831*t6842*t6827*t6829*t6849*1.0E1+C_k*a_7*t6830*t6831*t6850*t6842*t6827*(3.5E1/ \
               3.0)-C_k*a_9*t6832*t6842*t6844*t6827*t6829*1.5E1-C_k*a_11*t6830*t6832*1/pow(t6833,1.2E1)*t6842*t6827* \
               t6829*(5.5E1/3.0)-C_k*a_7*t6830*t6831*t6842*t6851*t6827*t6829*(3.5E1/3.0)+C_k*a_8*t6830*t6831*t6842* \
               t6851*t6827*t6829*(4.0E1/3.0))-kp*rho_a[index]*1/(t6838*t6838)*t6865*(gamma_aa[index]*mu_*t6834*t6835* \
               t6853*t6836*(1.0/3.0)+gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index])*t6745*t6834*t6835* \
               (1.0/2.0)))-(rho_a[index]*((t6791*1/(t6747*t6747)*(b2p*c*t6748*(1.0/3.0)+b4p*t6744*t6853*(2.0/3.0) \
               +b3p*c*t6739*t6748*(1.0/2.0)+b1p*c*1/sqrt(t6738)*t6748*(1.0/6.0)))/t6752-a1p*c*c0p*t6748*t6789*(2.0/ \
               3.0))*2.0+rho_a[index]*(-t6787+t6906+t6794*t6797*(t6787+t6905-t6800*t6898*t6899*t6904-a1p*c*c0p*t6763* \
               t6788*(2.0/3.0)))+c0p*t6791*t6789*2.0-c0p*t6779*t6788*2.0-t6794*t6797*t6802)*(ccab0+ccab1*gamma_aa[index]* \
               gcab*t6733*t6812+ccab4*t6730*t6731*t6732*t6809+ccab2*t6735*t6728*t6729*t6821+ccab3*gamma_aa[index]* \
               gcab*t6734*t6728*t6729*t6817)-t6867*t6878*t6911+rho_a[index]*t6867*t6878*(ccaa1*gamma_aa[index]*gcaa* \
               t6823*t6887*(8.0/3.0)+ccaa4*t6730*t6825*t6884*t6869*(3.2E1/3.0)+ccaa2*t6728*t6822*t6868*t6896*(1.6E1/ \
               3.0)-ccaa1*t6728*t6822*t6868*1/(t6886*t6886)*(8.0/3.0)-ccaa2*t6735*t6728*t6868*1/(t6895*t6895)*(gamma_aa[index]* \
               gcaa*t6823*(1.6E1/3.0)+t6728*t6822*t6868*(1.6E1/3.0))-ccaa4*t6730*t6732*1/(t6883*t6883)*t6869*(gamma_aa[index]* \
               gcaa*t6823*(3.2E1/3.0)+t6730*t6825*t6869*(3.2E1/3.0)+t6728*t6822*t6868*3.2E1+gamma_aa[index]*gcaa* \
               t6728*t6824*t6868*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t6728*t6824*t6892*t6868*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t6734*t6728*1/(t6891*t6891)*t6868*(gamma_aa[index]*gcaa*t6823*8.0+t6728*t6822*t6868*1.6E1+gamma_aa[index]* \
               gcaa*t6728*t6824*t6868*8.0))+rho_a[index]*t6878*t6911*(-t6787+t6906+t6794*t6797*(t6787+t6905-t6906- \
               t6800*t6898*t6899*t6904))-gamma_aa[index]*t6871*t6827*t6873*t6867*t6911*(1.0/8.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t6913 = 1/pow(rho_a[index],1.0/3.0);
                double t6914 = c*t6913;
                double t6915 = sqrt(t6914);
                double t6916 = pow(t6914,3.0/2.0);
                double t6917 = c*c;
                double t6918 = 1/pow(rho_a[index],2.0/3.0);
                double t6919 = 1/c0p;
                double t6920 = b1p*t6915;
                double t6921 = b3p*t6916;
                double t6922 = b4p*t6917*t6918;
                double t6923 = b2p*c*t6913;
                double t6924 = t6920+t6921+t6922+t6923;
                double t6925 = 1/t6924;
                double t6926 = t6925*t6919*(1.0/2.0);
                double t6927 = t6926+1.0;
                double t6928 = log(t6927);
                double t6929 = a1p*c*t6913;
                double t6930 = t6929+1.0;
                double t6931 = rho_a[index]*2.0;
                double t6932 = 1/pow(t6931,1.0/3.0);
                double t6933 = c*t6932;
                double t6934 = 1/pow(rho_a[index],8.0/3.0);
                double t6935 = gamma_aa[index]*gamma_aa[index];
                double t6936 = gcab*gcab;
                double t6937 = t6936*t6936;
                double t6938 = 1/pow(rho_a[index],3.2E1/3.0);
                double t6939 = 1/pow(rho_a[index],1.6E1/3.0);
                double t6940 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t6941 = gamma_aa[index]*gcab*t6934;
                double t6942 = t6941+1.0;
                double t6943 = gamma_aa[index]*gcab*t6934*3.0;
                double t6944 = gamma_aa[index]*gcab*t6940*t6935*t6936;
                double t6945 = t6935*t6936*t6939*3.0;
                double t6946 = t6943+t6944+t6945+1.0;
                double t6947 = t6935*t6935;
                double t6948 = gamma_aa[index]*gcab*t6934*4.0;
                double t6949 = gamma_aa[index]*gcab*t6940*t6935*t6936*4.0;
                double t6950 = t6935*t6936*t6939*6.0;
                double t6951 = t6937*t6938*t6947;
                double t6952 = t6950+t6951+t6948+t6949+1.0;
                double t6953 = gamma_aa[index]*gcab*t6934*2.0;
                double t6954 = t6935*t6936*t6939;
                double t6955 = t6953+t6954+1.0;
                double t6956 = pow(2.0,1.0/3.0);
                double t6957 = t6956*2.0;
                double t6958 = t6957-2.0;
                double t6959 = two_13*2.0;
                double t6960 = t6959-2.0;
                double t6961 = 1/t6960;
                double t6962 = 1/c0f;
                double t6963 = b1f*t6915;
                double t6964 = b3f*t6916;
                double t6965 = b4f*t6917*t6918;
                double t6966 = b2f*c*t6913;
                double t6967 = t6963+t6964+t6965+t6966;
                double t6968 = 1/t6967;
                double t6969 = t6962*t6968*(1.0/2.0);
                double t6970 = t6969+1.0;
                double t6971 = log(t6970);
                double t6972 = a1f*c*t6913;
                double t6973 = t6972+1.0;
                double t6974 = c0f*t6971*t6973*2.0;
                double t6975 = c0p*t6930*t6928*2.0;
                double t6976 = gcaa*gcaa;
                double t6977 = t6976*t6976;
                double t6978 = t6974-t6975;
                double t6979 = t6961*t6958*t6978;
                double t6980 = t6975+t6979;
                double t6981 = tau_a[index]-1.0/1.0E20;
                double t6982 = ( (t6981 > 0.0) ?  1.0 : 0.0 ) ;
                double t6983 = 1/tau_a[index];
                double t6984 = gamma_aa[index]*gcaa*t6934;
                double t6985 = t6984+1.0;
                double t6986 = 1/t6985;
                double t6987 = gamma_aa[index]*gcaa*t6934*4.0;
                double t6988 = gamma_aa[index]*gcaa*t6940*t6935*t6976*4.0;
                double t6989 = t6935*t6939*t6976*6.0;
                double t6990 = t6938*t6947*t6977;
                double t6991 = t6990+t6987+t6988+t6989+1.0;
                double t6992 = 1/t6991;
                double t6993 = gamma_aa[index]*gcaa*t6934*2.0;
                double t6994 = t6935*t6939*t6976;
                double t6995 = t6993+t6994+1.0;
                double t6996 = 1/t6995;
                double t6997 = gamma_aa[index]*gcaa*t6934*3.0;
                double t6998 = gamma_aa[index]*gcaa*t6940*t6935*t6976;
                double t6999 = t6935*t6939*t6976*3.0;
                double t7000 = t6997+t6998+t6999+1.0;
                double t7001 = 1/t7000;
                double t7002 = 1/rho_a[index];
                double t7003 = 1/(k*k);
                double t7004 = 1/pow(t6931,2.0/3.0);
                double t7005 = pow(rho_a[index],5.0/3.0);
                double t7006 = C_k*t6983*t7005;
                double t7007 = t7006-1.0;
                double t7008 = t7007*t7007;
                double t7009 = t7008*t7008;
                double t7010 = t7009*t7009;
                double t7011 = t7006+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t6975+t6961*t6958*(t6974-c0p*t6930*t6928*2.0))*2.0-c0p*rho_a[index]* \
                   log((t6919*(1.0/2.0))/(b1p*sqrt(t6933)+b3p*pow(t6933,3.0/2.0)+b2p*c*t6932+b4p*t6917*t7004)+1.0)*(a1p* \
                   c*t6932+1.0)*4.0)*((ccab1*gcab*t6934*(1.0/2.0))/t6942-ccab1*gamma_aa[index]*1/(t6942*t6942)*t6936* \
                   t6939*(1.0/2.0)+(ccab2*gamma_aa[index]*t6936*t6939)/t6955-ccab2*t6935*t6936*1/(t6955*t6955)*t6939* \
                   (gcab*t6934+gamma_aa[index]*t6936*t6939)+(ccab4*gamma_aa[index]*t6935*t6937*t6938*2.0)/t6952+(ccab3* \
                   gcab*t6940*t6935*t6936*(3.0/2.0))/t6946-ccab4*1/(t6952*t6952)*t6937*t6938*t6947*(gcab*t6934*2.0+gamma_aa[index]* \
                   t6936*t6939*6.0+gamma_aa[index]*t6935*t6937*t6938*2.0+gcab*t6940*t6935*t6936*6.0)-ccab3*gamma_aa[index]* \
                   gcab*t6940*t6935*t6936*1/(t6946*t6946)*(gcab*t6934*(3.0/2.0)+gamma_aa[index]*t6936*t6939*3.0+gcab* \
                   t6940*t6935*t6936*(3.0/2.0)))*2.0+t6980*t6982*t6983*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t6934*t6986+ \
                   ccaa2*t6935*t6939*t6976*t6996+ccaa4*t6938*t6947*t6992*t6977+ccaa3*gamma_aa[index]*gcaa*t6940*t6935* \
                   t6976*t7001)*(1.0/4.0)-rho_a[index]*t6980*(t6982*(t6983*(tau_a[index]*2.0-gamma_aa[index]*t7002*(1.0/ \
                   4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t6934*t6986+ccaa2*gamma_aa[index]*t6939*t6976*t6996*2.0-ccaa1* \
                   gamma_aa[index]*t6939*t6976*1/(t6985*t6985)-ccaa2*t6935*t6939*t6976*1/(t6995*t6995)*(gcaa*t6934*2.0+ \
                   gamma_aa[index]*t6939*t6976*2.0)-ccaa4*1/(t6991*t6991)*t6938*t6947*t6977*(gcaa*t6934*4.0+gamma_aa[index]* \
                   t6939*t6976*1.2E1+gamma_aa[index]*t6935*t6938*t6977*4.0+gcaa*t6940*t6935*t6976*1.2E1)+ccaa4*gamma_aa[index]* \
                   t6935*t6938*t6992*t6977*4.0+ccaa3*gcaa*t6940*t6935*t6976*t7001*3.0-ccaa3*gamma_aa[index]*gcaa*t6940* \
                   t6935*t6976*1/(t7000*t7000)*(gcaa*t6934*3.0+gamma_aa[index]*t6939*t6976*6.0+gcaa*t6940*t6935*t6976* \
                   3.0))*2.0-mu_*t7002*t7003*t7004*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t7003*t7004* \
                   (1.0/4.0))/kp+1.0,2.0)*(X-1.0)*((a_1*t7007)/t7011+a_2*1/(t7011*t7011)*t7008+a_4*1/(t7011*t7011*t7011* \
                   t7011)*t7009+a_8*t7010*1/(t7011*t7011*t7011*t7011*t7011*t7011*t7011*t7011)+a_10*t7010*1/pow(t7011,1.0E1) \
                   *t7008+a_3*1/(t7011*t7011*t7011)*t7007*t7008+a_5*1/(t7011*t7011*t7011*t7011*t7011)*t7007*t7009+a_6* \
                   1/(t7011*t7011*t7011*t7011*t7011*t7011)*t7008*t7009+a_9*t7010*1/(t7011*t7011*t7011*t7011*t7011*t7011* \
                   t7011*t7011*t7011)*t7007+a_11*t7010*1/pow(t7011,1.1E1)*t7007*t7008+a_7*1/(t7011*t7011*t7011*t7011* \
                   t7011*t7011*t7011)*t7007*t7008*t7009+1.0)*(1.0/2.0);
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                double t7013 = pow(rho_a[index],5.0/3.0);
                double t7014 = 1/(tau_a[index]*tau_a[index]);
                double t7015 = 1/tau_a[index];
                double t7016 = C_k*t7013*t7015;
                double t7017 = t7016+1.0;
                double t7018 = t7016-1.0;
                double t7019 = 1/(t7017*t7017);
                double t7020 = t7018*t7018;
                double t7021 = t7020*t7020;
                double t7022 = t7021*t7021;
                double t7023 = 1/pow(t7017,1.1E1);
                double t7024 = 1/(t7017*t7017*t7017);
                double t7025 = 1/(t7017*t7017*t7017*t7017);
                double t7026 = 1/(t7017*t7017*t7017*t7017*t7017);
                double t7027 = 1/(t7017*t7017*t7017*t7017*t7017*t7017);
                double t7028 = 1/(t7017*t7017*t7017*t7017*t7017*t7017*t7017);
                double t7029 = 1/(t7017*t7017*t7017*t7017*t7017*t7017*t7017*t7017);
                double t7030 = 1/(t7017*t7017*t7017*t7017*t7017*t7017*t7017*t7017*t7017);
                double t7031 = 1/pow(t7017,1.0E1);
                double t7032 = 1/pow(rho_a[index],1.0/3.0);
                double t7033 = c*t7032;
                double t7034 = sqrt(t7033);
                double t7035 = pow(t7033,3.0/2.0);
                double t7036 = c*c;
                double t7037 = 1/pow(rho_a[index],2.0/3.0);
                double t7038 = 1/c0p;
                double t7039 = b1p*t7034;
                double t7040 = b3p*t7035;
                double t7041 = b4p*t7036*t7037;
                double t7042 = b2p*c*t7032;
                double t7043 = t7040+t7041+t7042+t7039;
                double t7044 = 1/t7043;
                double t7045 = t7044*t7038*(1.0/2.0);
                double t7046 = t7045+1.0;
                double t7047 = log(t7046);
                double t7048 = a1p*c*t7032;
                double t7049 = t7048+1.0;
                double t7050 = tau_a[index]-1.0/1.0E20;
                double t7051 = tau_a[index]*2.0;
                double t7052 = 1/rho_a[index];
                double t7053 = t7051-gamma_aa[index]*t7052*(1.0/4.0);
                double t7054 = gamma_aa[index]*gamma_aa[index];
                double t7055 = gcaa*gcaa;
                double t7056 = t7054*t7054;
                double t7057 = t7055*t7055;
                double t7058 = 1/pow(rho_a[index],3.2E1/3.0);
                double t7059 = 1/pow(rho_a[index],8.0/3.0);
                double t7060 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t7061 = 1/pow(rho_a[index],1.6E1/3.0);
                v_tau_a_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t7034+b3f* \
                   t7035+b2f*c*t7032+b4f*t7036*t7037))+1.0)*(a1f*c*t7032+1.0)*2.0-c0p*t7047*t7049*2.0))/(two_13*2.0-2.0) \
                   +c0p*t7047*t7049*2.0)*( ( (t7050 > 0.0) ? 1.0*(t7015-t7014*t7053*(1.0/2.0)) : 0.0 ) + 0.0 )*(ccaa0+ \
                   (ccaa2*t7061*t7054*t7055)/(gamma_aa[index]*gcaa*t7059*2.0+t7061*t7054*t7055+1.0)+(ccaa1*gamma_aa[index]* \
                   gcaa*t7059)/(gamma_aa[index]*gcaa*t7059+1.0)+(ccaa4*t7056*t7057*t7058)/(gamma_aa[index]*gcaa*t7059* \
                   4.0+t7061*t7054*t7055*6.0+t7056*t7057*t7058+gamma_aa[index]*gcaa*t7060*t7054*t7055*4.0+1.0)+(ccaa3* \
                   gamma_aa[index]*gcaa*t7060*t7054*t7055)/(gamma_aa[index]*gcaa*t7059*3.0+t7061*t7054*t7055*3.0+gamma_aa[index]* \
                   gcaa*t7060*t7054*t7055+1.0))+rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t7013*t7014)/t7017- \
                   C_k*a_1*t7013*t7014*t7018*t7019-C_k*a_2*t7020*t7013*t7014*t7024*2.0+C_k*a_2*t7013*t7014*t7018*t7019* \
                   2.0+C_k*a_3*t7020*t7013*t7014*t7024*3.0-C_k*a_4*t7021*t7013*t7014*t7026*4.0+C_k*a_5*t7021*t7013*t7014* \
                   t7026*5.0-C_k*a_8*t7030*t7013*t7022*t7014*8.0+C_k*a_9*t7030*t7013*t7022*t7014*9.0-C_k*a_10*t7020*t7013* \
                   t7022*t7014*t7023*1.0E1+C_k*a_11*t7020*t7013*t7022*t7014*t7023*1.1E1+C_k*a_10*t7013*t7022*t7031*t7014* \
                   t7018*1.0E1-C_k*a_3*t7020*t7013*t7014*t7025*t7018*3.0+C_k*a_4*t7020*t7013*t7014*t7025*t7018*4.0-C_k* \
                   a_5*t7021*t7013*t7014*t7018*t7027*5.0-C_k*a_6*t7020*t7021*t7013*t7014*t7028*6.0+C_k*a_6*t7021*t7013* \
                   t7014*t7018*t7027*6.0+C_k*a_7*t7020*t7021*t7013*t7014*t7028*7.0-C_k*a_9*t7013*t7022*t7031*t7014*t7018* \
                   9.0-C_k*a_11*t7020*t7013*t7022*t7014*1/pow(t7017,1.2E1)*t7018*1.1E1-C_k*a_7*t7020*t7021*t7013*t7014* \
                   t7018*t7029*7.0+C_k*a_8*t7020*t7021*t7013*t7014*t7018*t7029*8.0);
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t7063 = rho_a[index]*2.0;
            double t7064 = 1/pow(t7063,1.0/3.0);
            double t7065 = c*t7064;
            double t7066 = sqrt(t7065);
            double t7067 = b1p*t7066;
            double t7068 = pow(t7065,3.0/2.0);
            double t7069 = b3p*t7068;
            double t7070 = b2p*c*t7064;
            double t7071 = c*c;
            double t7072 = 1/pow(t7063,2.0/3.0);
            double t7073 = b4p*t7071*t7072;
            double t7074 = t7070+t7073+t7067+t7069;
            double t7075 = 1/pow(t7063,8.0/3.0);
            double t7076 = 1/pow(t7063,7.0/3.0);
            double t7077 = 1/sqrt(t7065);
            double t7078 = 1/c0p;
            double t7079 = 1/t7074;
            double t7080 = t7078*t7079*(1.0/2.0);
            double t7081 = t7080+1.0;
            double t7082 = 1/t7081;
            double t7083 = a1p*c*t7064;
            double t7084 = t7083+1.0;
            double t7085 = 1/pow(t7063,4.0/3.0);
            double t7087 = b2p*c*t7085*(1.0/3.0);
            double t7088 = 1/pow(t7063,5.0/3.0);
            double t7089 = b4p*t7071*t7088*(2.0/3.0);
            double t7090 = b1p*c*t7085*t7077*(1.0/6.0);
            double t7091 = b3p*c*t7066*t7085*(1.0/2.0);
            double t7086 = t7090+t7091+t7087+t7089;
            double t7092 = t7086*t7086;
            double t7093 = 1/(t7074*t7074);
            double t7094 = log(t7081);
            double t7095 = gamma_aa[index]*gamma_aa[index];
            double t7096 = gcab*gcab;
            double t7097 = t7095*t7095;
            double t7098 = t7096*t7096;
            double t7099 = 1/pow(rho_a[index],3.2E1/3.0);
            double t7100 = 1/pow(rho_a[index],8.0/3.0);
            double t7101 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t7102 = 1/pow(rho_a[index],1.6E1/3.0);
            double t7103 = two_13*2.0;
            double t7104 = t7103-2.0;
            double t7105 = 1/t7104;
            double t7106 = 1/pow(rho_a[index],1.0/3.0);
            double t7107 = c*t7106;
            double t7108 = sqrt(t7107);
            double t7109 = pow(t7107,3.0/2.0);
            double t7110 = 1/pow(rho_a[index],2.0/3.0);
            double t7111 = b1p*t7108;
            double t7112 = b3p*t7109;
            double t7113 = b4p*t7071*t7110;
            double t7114 = b2p*c*t7106;
            double t7115 = t7111+t7112+t7113+t7114;
            double t7116 = 1/t7115;
            double t7117 = t7078*t7116*(1.0/2.0);
            double t7118 = t7117+1.0;
            double t7119 = log(t7118);
            double t7120 = a1p*c*t7106;
            double t7121 = t7120+1.0;
            double t7122 = gamma_aa[index]*gcab*t7100*4.0;
            double t7123 = gamma_aa[index]*gcab*t7095*t7096*t7101*4.0;
            double t7124 = t7095*t7096*t7102*6.0;
            double t7125 = t7097*t7098*t7099;
            double t7126 = t7122+t7123+t7124+t7125+1.0;
            double t7127 = 1/t7126;
            double t7128 = gamma_aa[index]*gcab*t7100;
            double t7129 = t7128+1.0;
            double t7130 = 1/t7129;
            double t7131 = gamma_aa[index]*gcab*t7100*3.0;
            double t7132 = gamma_aa[index]*gcab*t7095*t7096*t7101;
            double t7133 = t7095*t7096*t7102*3.0;
            double t7134 = t7131+t7132+t7133+1.0;
            double t7135 = 1/t7134;
            double t7136 = gamma_aa[index]*gcab*t7100*2.0;
            double t7137 = t7095*t7096*t7102;
            double t7138 = t7136+t7137+1.0;
            double t7139 = 1/t7138;
            double t7140 = 1/pow(rho_a[index],1.0E1);
            double t7141 = 1/pow(rho_a[index],2.2E1/3.0);
            double t7143 = 1/pow(rho_a[index],1.1E1/3.0);
            double t7144 = 1/pow(rho_a[index],1.9E1/3.0);
            double t7146 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t7153 = 1/pow(rho_a[index],3.5E1/3.0);
            double t7154 = gamma_aa[index]*gcab*t7143*(1.6E1/3.0);
            double t7155 = gamma_aa[index]*gcab*t7095*t7096*t7146*1.6E1;
            double t7156 = t7095*t7096*t7144*1.6E1;
            double t7157 = t7097*t7098*t7153*(1.6E1/3.0);
            double t7142 = t7154+t7155+t7156+t7157;
            double t7160 = gamma_aa[index]*gcab*t7143*(8.0/3.0);
            double t7161 = t7095*t7096*t7144*(8.0/3.0);
            double t7145 = t7160+t7161;
            double t7147 = 1/pow(rho_a[index],1.4E1/3.0);
            double t7148 = 1/(t7134*t7134);
            double t7149 = gamma_aa[index]*gcab*t7143*4.0;
            double t7150 = gamma_aa[index]*gcab*t7095*t7096*t7146*4.0;
            double t7151 = t7095*t7096*t7144*8.0;
            double t7152 = t7150+t7151+t7149;
            double t7158 = 1/pow(rho_a[index],3.8E1/3.0);
            double t7159 = 1/(t7126*t7126);
            double t7162 = 1/(t7138*t7138);
            double t7163 = pow(2.0,1.0/3.0);
            double t7164 = t7163*2.0;
            double t7165 = t7164-2.0;
            double t7166 = a1f*c*t7106;
            double t7167 = t7166+1.0;
            double t7168 = 1/c0f;
            double t7169 = b1f*t7108;
            double t7170 = b3f*t7109;
            double t7171 = b4f*t7071*t7110;
            double t7172 = b2f*c*t7106;
            double t7173 = t7170+t7171+t7172+t7169;
            double t7174 = 1/t7173;
            double t7175 = t7174*t7168*(1.0/2.0);
            double t7176 = t7175+1.0;
            double t7177 = 1/pow(rho_a[index],4.0/3.0);
            double t7178 = 1/pow(rho_a[index],5.0/3.0);
            double t7179 = 1/sqrt(t7107);
            double t7180 = log(t7176);
            double t7181 = 1/t7118;
            double t7182 = 1/(t7115*t7115);
            double t7183 = b4p*t7071*t7178*(2.0/3.0);
            double t7184 = b2p*c*t7177*(1.0/3.0);
            double t7185 = b1p*c*t7177*t7179*(1.0/6.0);
            double t7186 = b3p*c*t7108*t7177*(1.0/2.0);
            double t7187 = t7183+t7184+t7185+t7186;
            double t7188 = t7121*t7181*t7182*t7187;
            double t7189 = c0f*t7180*t7167*2.0;
            double t7190 = c0p*t7121*t7119*2.0;
            double t7191 = 1/(t7129*t7129);
            double t7192 = 1/(rho_a[index]*rho_a[index]);
            double t7193 = 1/tau_a[index];
            double t7194 = pow(rho_a[index],2.0/3.0);
            double t7195 = pow(rho_a[index],5.0/3.0);
            double t7196 = C_k*t7193*t7195;
            double t7197 = t7196+1.0;
            double t7198 = t7196-1.0;
            double t7199 = 1/(t7197*t7197);
            double t7200 = t7198*t7198;
            double t7201 = t7200*t7200;
            double t7202 = t7201*t7201;
            double t7203 = 1/pow(t7197,1.1E1);
            double t7204 = 1/(t7197*t7197*t7197);
            double t7205 = 1/(t7197*t7197*t7197*t7197);
            double t7206 = 1/(t7197*t7197*t7197*t7197*t7197);
            double t7207 = 1/(t7197*t7197*t7197*t7197*t7197*t7197);
            double t7208 = 1/(t7197*t7197*t7197*t7197*t7197*t7197*t7197);
            double t7209 = 1/(t7197*t7197*t7197*t7197*t7197*t7197*t7197*t7197);
            double t7210 = 1/(t7197*t7197*t7197*t7197*t7197*t7197*t7197*t7197*t7197);
            double t7211 = 1/pow(t7197,1.0E1);
            double t7212 = 1/(k*k);
            double t7213 = 1/kp;
            double t7214 = gamma_aa[index]*mu_*t7072*t7192*t7212*t7213*(1.0/4.0);
            double t7215 = t7214+1.0;
            double t7216 = 1/t7215;
            double t7217 = kp-kp*t7216+1.0;
            double t7218 = C_k*C_k;
            double t7219 = pow(rho_a[index],4.0/3.0);
            double t7220 = 1/(tau_a[index]*tau_a[index]);
            double t7221 = 1/t7197;
            double t7222 = 1/pow(t7197,1.2E1);
            double t7223 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t7224 = gamma_aa[index]*mu_*t7072*t7212*t7213*t7223*(1.0/2.0);
            double t7225 = gamma_aa[index]*mu_*t7088*t7192*t7212*t7213*(1.0/3.0);
            double t7226 = t7224+t7225;
            double t7227 = a_1*t7198*t7221;
            double t7228 = a_10*t7200*t7202*t7211;
            double t7229 = a_11*t7198*t7200*t7202*t7203;
            double t7230 = a_2*t7199*t7200;
            double t7231 = a_3*t7198*t7200*t7204;
            double t7232 = a_4*t7201*t7205;
            double t7233 = a_5*t7198*t7201*t7206;
            double t7234 = a_6*t7200*t7201*t7207;
            double t7235 = a_7*t7198*t7200*t7201*t7208;
            double t7236 = a_8*t7202*t7209;
            double t7237 = a_9*t7198*t7210*t7202;
            double t7238 = t7230+t7231+t7232+t7233+t7234+t7235+t7227+t7236+t7228+t7237+t7229+1.0;
            double t7239 = 1/(t7215*t7215);
            double t7240 = C_k*a_1*t7193*t7194*t7221*(5.0/3.0);
            double t7241 = C_k*a_2*t7193*t7194*t7198*t7199*(1.0E1/3.0);
            double t7242 = C_k*a_10*t7193*t7194*t7198*t7202*t7211*(5.0E1/3.0);
            double t7243 = C_k*a_11*t7193*t7194*t7200*t7202*t7203*(5.5E1/3.0);
            double t7244 = C_k*a_3*t7193*t7194*t7200*t7204*5.0;
            double t7245 = C_k*a_4*t7193*t7194*t7198*t7200*t7205*(2.0E1/3.0);
            double t7246 = C_k*a_5*t7193*t7194*t7201*t7206*(2.5E1/3.0);
            double t7247 = C_k*a_6*t7193*t7194*t7198*t7201*t7207*1.0E1;
            double t7248 = C_k*a_7*t7193*t7194*t7200*t7201*t7208*(3.5E1/3.0);
            double t7249 = C_k*a_8*t7193*t7194*t7198*t7200*t7201*t7209*(4.0E1/3.0);
            double t7250 = C_k*a_9*t7193*t7194*t7210*t7202*1.5E1;
            double t7251 = t7240+t7241+t7250+t7242+t7243+t7244+t7245+t7246+t7247+t7248+t7249-C_k*a_1*t7193*t7194* \
               t7198*t7199*(5.0/3.0)-C_k*a_2*t7193*t7194*t7200*t7204*(1.0E1/3.0)-C_k*a_4*t7193*t7194*t7201*t7206* \
               (2.0E1/3.0)-C_k*a_8*t7193*t7194*t7210*t7202*(4.0E1/3.0)-C_k*a_10*t7193*t7194*t7200*t7202*t7203*(5.0E1/ \
               3.0)-C_k*a_3*t7193*t7194*t7198*t7200*t7205*5.0-C_k*a_5*t7193*t7194*t7198*t7201*t7207*(2.5E1/3.0)-C_k* \
               a_6*t7193*t7194*t7200*t7201*t7208*1.0E1-C_k*a_9*t7193*t7194*t7198*t7202*t7211*1.5E1-C_k*a_11*t7193* \
               t7194*t7198*t7200*t7202*t7222*(5.5E1/3.0)-C_k*a_7*t7193*t7194*t7198*t7200*t7201*t7209*(3.5E1/3.0);
            double t7252 = ccab4*t7097*t7098*t7099*t7127;
            double t7253 = ccab1*gamma_aa[index]*gcab*t7100*t7130;
            double t7254 = ccab3*gamma_aa[index]*gcab*t7095*t7096*t7101*t7135;
            double t7255 = ccab2*t7095*t7096*t7102*t7139;
            double t7256 = ccab0+t7252+t7253+t7254+t7255;
            double t7257 = b2p*c*t7076*(4.0/9.0);
            double t7258 = b4p*t7071*t7075*(1.0E1/9.0);
            double t7259 = 1/pow(t7065,3.0/2.0);
            double t7260 = b3p*t7071*t7075*t7077*(1.0/1.2E1);
            double t7261 = b1p*c*t7076*t7077*(2.0/9.0);
            double t7262 = b3p*c*t7066*t7076*(2.0/3.0);
            double t7263 = t7260+t7261+t7262+t7257+t7258-b1p*t7071*t7075*t7259*(1.0/3.6E1);
            double t7264 = t7082*t7084*t7093*t7263;
            double t7265 = 1/(t7074*t7074*t7074);
            double t7266 = 1/(t7081*t7081);
            double t7267 = 1/(t7074*t7074*t7074*t7074);
            double t7268 = t7092*t7084*t7078*t7266*t7267*(1.0/2.0);
            double t7269 = 1/d2fz0;
            double t7270 = 1/Aa;
            double t7271 = b1a*t7066;
            double t7272 = b3a*t7068;
            double t7273 = b2a*c*t7064;
            double t7274 = b4a*t7071*t7072;
            double t7275 = t7271+t7272+t7273+t7274;
            double t7276 = 1/t7275;
            double t7277 = t7270*t7276*(1.0/2.0);
            double t7278 = t7277+1.0;
            double t7279 = log(t7278);
            double t7280 = a1a*c*t7064;
            double t7281 = t7280+1.0;
            double t7282 = a1p*c*t7082*t7093*t7085*t7086*(2.0/3.0);
            double t7283 = 1/t7176;
            double t7284 = b4f*t7071*t7178*(2.0/3.0);
            double t7285 = b2f*c*t7177*(1.0/3.0);
            double t7286 = b1f*c*t7177*t7179*(1.0/6.0);
            double t7287 = b3f*c*t7108*t7177*(1.0/2.0);
            double t7288 = t7284+t7285+t7286+t7287;
            double t7289 = 1/(t7173*t7173);
            double t7290 = 1/pow(rho_a[index],7.0/3.0);
            double t7291 = 1/pow(t7107,3.0/2.0);
            double t7292 = t7288*t7288;
            double t7293 = t7187*t7187;
            double t7294 = 1/(t7115*t7115*t7115);
            double t7295 = t7121*t7181*t7293*t7294*2.0;
            double t7296 = b4p*t7071*t7100*(1.0E1/9.0);
            double t7297 = b2p*c*t7290*(4.0/9.0);
            double t7298 = b3p*t7071*t7100*t7179*(1.0/1.2E1);
            double t7299 = b1p*c*t7179*t7290*(2.0/9.0);
            double t7300 = b3p*c*t7108*t7290*(2.0/3.0);
            double t7382 = b1p*t7071*t7100*t7291*(1.0/3.6E1);
            double t7301 = t7296+t7297+t7298+t7299+t7300-t7382;
            double t7302 = 1/(t7118*t7118);
            double t7303 = 1/(t7115*t7115*t7115*t7115);
            double t7304 = a1p*c*c0p*t7119*t7290*(8.0/9.0);
            double t7305 = a1f*c*c0f*t7180*t7177*(2.0/3.0);
            double t7306 = a1p*c*c0p*t7119*t7177*(2.0/3.0);
            double t7307 = a1p*c*c0p*t7085*t7094*(4.0/3.0);
            double t7308 = t7190-t7189;
            double t7309 = t7105*t7165*t7308;
            double t7310 = 1/(t7129*t7129*t7129);
            double t7311 = ccab1*gamma_aa[index]*gcab*t7095*t7096*t7140*t7310*(3.2E1/9.0);
            double t7312 = t7142*t7142;
            double t7313 = 1/(t7126*t7126*t7126);
            double t7314 = ccab4*t7097*t7098*t7099*t7312*t7313*2.0;
            double t7315 = t7145*t7145;
            double t7316 = 1/(t7138*t7138*t7138);
            double t7317 = ccab2*t7095*t7096*t7102*t7315*t7316*2.0;
            double t7318 = t7152*t7152;
            double t7319 = 1/(t7134*t7134*t7134);
            double t7320 = ccab3*gamma_aa[index]*gcab*t7095*t7096*t7101*t7318*t7319*2.0;
            double t7390 = t7167*t7283*t7288*t7289;
            double t7321 = t7188+t7305-t7306-t7390;
            double t7322 = gcaa*gcaa;
            double t7323 = t7322*t7322;
            double t7324 = t7190-t7309;
            double t7325 = tau_a[index]-1.0/1.0E20;
            double t7326 = ( (t7325 > 0.0) ?  1.0 : 0.0 ) ;
            double t7327 = tau_a[index]*2.0;
            double t7328 = 1/rho_a[index];
            double t7352 = gamma_aa[index]*t7328*(1.0/4.0);
            double t7329 = -t7352+t7327;
            double t7330 = t7193*t7329*(1.0/2.0);
            double t7331 = t7330-1.0;
            double t7332 = t7331*t7326;
            double t7333 = t7332+1.0;
            double t7334 = gamma_aa[index]*gcaa*t7100*4.0;
            double t7335 = gamma_aa[index]*gcaa*t7095*t7101*t7322*4.0;
            double t7336 = t7095*t7102*t7322*6.0;
            double t7337 = t7097*t7099*t7323;
            double t7338 = t7334+t7335+t7336+t7337+1.0;
            double t7339 = 1/t7338;
            double t7340 = gamma_aa[index]*gcaa*t7100;
            double t7341 = t7340+1.0;
            double t7342 = 1/t7341;
            double t7343 = gamma_aa[index]*gcaa*t7100*3.0;
            double t7344 = gamma_aa[index]*gcaa*t7095*t7101*t7322;
            double t7345 = t7095*t7102*t7322*3.0;
            double t7346 = t7343+t7344+t7345+1.0;
            double t7347 = 1/t7346;
            double t7348 = gamma_aa[index]*gcaa*t7100*2.0;
            double t7349 = t7095*t7102*t7322;
            double t7350 = t7348+t7349+1.0;
            double t7351 = 1/t7350;
            double t7353 = 1/(t7341*t7341);
            double t7354 = gamma_aa[index]*gcaa*t7143*(3.2E1/3.0);
            double t7355 = gamma_aa[index]*gcaa*t7095*t7146*t7322*3.2E1;
            double t7356 = t7095*t7144*t7322*3.2E1;
            double t7357 = t7097*t7153*t7323*(3.2E1/3.0);
            double t7358 = t7354+t7355+t7356+t7357;
            double t7359 = gamma_aa[index]*gcaa*t7143*(1.6E1/3.0);
            double t7360 = t7095*t7144*t7322*(1.6E1/3.0);
            double t7361 = t7360+t7359;
            double t7362 = gamma_aa[index]*gcaa*t7143*8.0;
            double t7363 = gamma_aa[index]*gcaa*t7095*t7146*t7322*8.0;
            double t7364 = t7095*t7144*t7322*1.6E1;
            double t7365 = t7362+t7363+t7364;
            double t7366 = 1/(t7346*t7346);
            double t7367 = 1/(t7338*t7338);
            double t7368 = 1/(t7350*t7350);
            double t7369 = ccaa4*t7097*t7099*t7323*t7339;
            double t7370 = ccaa1*gamma_aa[index]*gcaa*t7100*t7342;
            double t7371 = ccaa3*gamma_aa[index]*gcaa*t7095*t7101*t7322*t7347;
            double t7372 = ccaa2*t7095*t7102*t7322*t7351;
            double t7373 = ccaa0+t7370+t7371+t7372+t7369;
            double t7374 = 1/(t7173*t7173*t7173);
            double t7375 = b4f*t7071*t7100*(1.0E1/9.0);
            double t7376 = b2f*c*t7290*(4.0/9.0);
            double t7377 = b3f*t7071*t7100*t7179*(1.0/1.2E1);
            double t7378 = b1f*c*t7179*t7290*(2.0/9.0);
            double t7379 = b3f*c*t7108*t7290*(2.0/3.0);
            double t7380 = t7375+t7376+t7377+t7378+t7379-b1f*t7071*t7100*t7291*(1.0/3.6E1);
            double t7381 = t7167*t7283*t7289*t7380;
            double t7383 = t7121*t7181*t7182*t7301;
            double t7384 = 1/(t7176*t7176);
            double t7385 = 1/(t7173*t7173*t7173*t7173);
            double t7386 = t7167*t7168*t7292*t7384*t7385*(1.0/2.0);
            double t7387 = t7078*t7121*t7293*t7302*t7303*(1.0/2.0);
            double t7388 = a1f*c*t7177*t7283*t7288*t7289*(2.0/3.0);
            double t7389 = a1p*c*t7181*t7182*t7177*t7187*(2.0/3.0);
            double t7391 = t7105*t7165*t7321;
            double t7392 = ccaa4*t7097*t7153*t7323*t7339*(3.2E1/3.0);
            double t7393 = ccaa1*gamma_aa[index]*gcaa*t7143*t7342*(8.0/3.0);
            double t7394 = ccaa3*gamma_aa[index]*gcaa*t7095*t7146*t7322*t7347*8.0;
            double t7395 = ccaa2*t7095*t7144*t7322*t7351*(1.6E1/3.0);
            double t7398 = ccaa1*t7095*t7144*t7322*t7353*(8.0/3.0);
            double t7399 = ccaa3*gamma_aa[index]*gcaa*t7095*t7101*t7322*t7365*t7366;
            double t7400 = ccaa4*t7097*t7099*t7323*t7358*t7367;
            double t7401 = ccaa2*t7095*t7102*t7322*t7361*t7368;
            double t7396 = t7392+t7393+t7394+t7395-t7398-t7399-t7400-t7401;
            double t7397 = -t7188+t7306+t7391;
            v_rho_a_rho_a_[index] = (-t7190+t7309+rho_a[index]*(-t7188+t7306+t7105*t7165*(t7188+t7305-t7167*t7283* \
               t7288*t7289-a1p*c*c0p*t7119*t7177*(2.0/3.0)))+rho_a[index]*(t7082*t7084*t7093*t7086-a1p*c*c0p*t7085* \
               t7094*(2.0/3.0))*2.0+c0p*t7084*t7094*2.0)*(ccab1*gamma_aa[index]*gcab*t7130*t7143*(4.0/3.0)-ccab1* \
               t7095*t7096*t7144*t7191*(4.0/3.0)+ccab2*t7095*t7096*t7144*t7139*(8.0/3.0)+ccab4*t7097*t7098*t7153* \
               t7127*(1.6E1/3.0)-ccab4*t7097*t7098*t7099*t7142*t7159-ccab2*t7095*t7096*t7102*t7162*t7145+ccab3*gamma_aa[index]* \
               gcab*t7095*t7096*t7135*t7146*4.0-ccab3*gamma_aa[index]*gcab*t7095*t7096*t7101*t7152*t7148)*4.0-t7256* \
               (-t7307-rho_a[index]*(t7264+t7282+t7268-t7082*t7092*t7084*t7265*2.0-a1p*c*c0p*t7076*t7094*(8.0/9.0) \
               +Aa*t7105*t7192*t7281*t7269*t7279*(4.0/9.0))*2.0+rho_a[index]*(-t7295-t7304+t7383+t7387+t7389+t7105* \
               t7165*(t7295+t7304+t7381+t7386+t7388-t7121*t7181*t7182*t7301-t7167*t7283*t7292*t7374*2.0-a1f*c*c0f* \
               t7180*t7290*(8.0/9.0)-t7078*t7121*t7293*t7302*t7303*(1.0/2.0)-a1p*c*t7181*t7182*t7177*t7187*(2.0/3.0) \
               ))+t7105*t7165*t7321*2.0+t7082*t7084*t7093*t7086*2.0-t7121*t7181*t7182*t7187*2.0+a1p*c*c0p*t7119*t7177* \
               (4.0/3.0))+(rho_a[index]*(t7190+t7105*t7165*(t7189-c0p*t7121*t7119*2.0))*2.0-c0p*rho_a[index]*t7084* \
               t7094*4.0)*(t7311+t7320+t7314+t7317+ccab1*gamma_aa[index]*gcab*t7130*t7147*(4.4E1/9.0)-ccab1*t7095* \
               t7096*t7141*t7191*(7.6E1/9.0)+ccab2*t7095*t7096*t7141*t7139*(4.0E1/3.0)+ccab4*t7097*t7098*t7127*t7158* \
               (3.68E2/9.0)-ccab2*t7095*t7096*t7144*t7162*t7145*(1.6E1/3.0)-ccab4*t7097*t7098*t7142*t7153*t7159*(3.2E1/ \
               3.0)-ccab2*t7095*t7096*t7102*t7162*(gamma_aa[index]*gcab*t7147*(8.8E1/9.0)+t7095*t7096*t7141*(4.0E1/ \
               3.0))-ccab4*t7097*t7098*t7099*t7159*(gamma_aa[index]*gcab*t7147*(1.76E2/9.0)+t7095*t7096*t7141*8.0E1+ \
               t7097*t7098*t7158*(3.68E2/9.0)+gamma_aa[index]*gcab*t7095*t7096*t7140*(3.04E2/3.0))+ccab3*gamma_aa[index]* \
               gcab*t7095*t7096*t7140*t7135*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t7095*t7096*t7101*t7148*(gamma_aa[index]* \
               gcab*t7147*(4.4E1/3.0)+t7095*t7096*t7141*4.0E1+gamma_aa[index]*gcab*t7095*t7096*t7140*(7.6E1/3.0)) \
               -ccab3*gamma_aa[index]*gcab*t7095*t7096*t7152*t7146*t7148*8.0)-(X-1.0)*(t7251*t7217*2.0+rho_a[index]* \
               t7217*(C_k*a_1*t7106*t7193*t7221*(1.0E1/9.0)-a_1*t7199*t7220*t7218*t7219*(5.0E1/9.0)+a_2*t7199*t7220* \
               t7218*t7219*(5.0E1/9.0)+a_1*t7198*t7220*t7204*t7218*t7219*(5.0E1/9.0)-a_2*t7198*t7220*t7204*t7218* \
               t7219*(2.0E2/9.0)+a_10*t7202*t7211*t7220*t7218*t7219*2.5E2+a_2*t7200*t7220*t7205*t7218*t7219*(5.0E1/ \
               3.0)+a_3*t7198*t7220*t7204*t7218*t7219*(5.0E1/3.0)-a_3*t7200*t7220*t7205*t7218*t7219*5.0E1+a_4*t7200* \
               t7220*t7205*t7218*t7219*(1.0E2/3.0)+a_4*t7201*t7220*t7207*t7218*t7219*(5.0E2/9.0)-a_5*t7201*t7220* \
               t7207*t7218*t7219*(1.25E3/9.0)+a_6*t7201*t7220*t7207*t7218*t7219*(2.5E2/3.0)+a_8*t7202*t7211*t7220* \
               t7218*t7219*2.0E2-a_9*t7202*t7211*t7220*t7218*t7219*4.5E2-C_k*a_1*t7106*t7193*t7198*t7199*(1.0E1/9.0) \
               +C_k*a_2*t7106*t7193*t7198*t7199*(2.0E1/9.0)-C_k*a_2*t7106*t7193*t7200*t7204*(2.0E1/9.0)+C_k*a_3*t7106* \
               t7193*t7200*t7204*(1.0E1/3.0)-C_k*a_4*t7106*t7193*t7201*t7206*(4.0E1/9.0)+C_k*a_5*t7106*t7193*t7201* \
               t7206*(5.0E1/9.0)-C_k*a_8*t7106*t7193*t7210*t7202*(8.0E1/9.0)+C_k*a_9*t7106*t7193*t7210*t7202*1.0E1+ \
               C_k*a_10*t7106*t7193*t7198*t7202*t7211*(1.0E2/9.0)-C_k*a_10*t7106*t7193*t7200*t7202*t7203*(1.0E2/9.0) \
               +C_k*a_11*t7106*t7193*t7200*t7202*t7203*(1.1E2/9.0)-C_k*a_3*t7106*t7193*t7198*t7200*t7205*(1.0E1/3.0) \
               +C_k*a_4*t7106*t7193*t7198*t7200*t7205*(4.0E1/9.0)-C_k*a_5*t7106*t7193*t7198*t7201*t7207*(5.0E1/9.0) \
               +C_k*a_6*t7106*t7193*t7198*t7201*t7207*(2.0E1/3.0)-C_k*a_6*t7106*t7193*t7200*t7201*t7208*(2.0E1/3.0) \
               +C_k*a_7*t7106*t7193*t7200*t7201*t7208*(7.0E1/9.0)-C_k*a_9*t7106*t7193*t7198*t7202*t7211*1.0E1-a_10* \
               t7198*t7202*t7220*t7203*t7218*t7219*(5.0E3/9.0)+a_11*t7198*t7202*t7220*t7203*t7218*t7219*(2.75E3/9.0) \
               +a_10*t7200*t7202*t7220*t7222*t7218*t7219*(2.75E3/9.0)-a_11*t7200*t7202*t7220*t7222*t7218*t7219*(6.05E3/ \
               9.0)+a_3*t7198*t7200*t7220*t7206*t7218*t7219*(1.0E2/3.0)-a_4*t7198*t7200*t7220*t7206*t7218*t7219*(8.0E2/ \
               9.0)+a_5*t7198*t7200*t7220*t7206*t7218*t7219*(5.0E2/9.0)+a_5*t7198*t7201*t7220*t7208*t7218*t7219*(2.5E2/ \
               3.0)-a_6*t7198*t7201*t7220*t7208*t7218*t7219*2.0E2+a_6*t7200*t7201*t7220*t7209*t7218*t7219*(3.5E2/ \
               3.0)+a_7*t7198*t7201*t7220*t7208*t7218*t7219*(3.5E2/3.0)-a_7*t7200*t7201*t7220*t7209*t7218*t7219*(2.45E3/ \
               9.0)+a_8*t7200*t7201*t7220*t7209*t7218*t7219*(1.4E3/9.0)+a_9*t7198*t7202*t7220*t7203*t7218*t7219*2.5E2+ \
               a_11*1/pow(t7197,1.3E1)*t7198*t7200*t7202*t7220*t7218*t7219*(1.1E3/3.0)-C_k*a_11*t7106*t7193*t7198* \
               t7200*t7202*t7222*(1.1E2/9.0)-C_k*a_7*t7106*t7193*t7198*t7200*t7201*t7209*(7.0E1/9.0)+C_k*a_8*t7106* \
               t7193*t7198*t7200*t7201*t7209*(8.0E1/9.0)+a_7*t7198*t7200*t7201*t7210*t7220*t7218*t7219*(1.4E3/9.0) \
               -a_8*t7198*t7200*t7201*t7210*t7220*t7218*t7219*(3.2E3/9.0)+a_9*t7198*t7200*t7201*t7210*t7220*t7218* \
               t7219*2.0E2)-kp*t7226*t7238*t7239*2.0-kp*rho_a[index]*1/(t7215*t7215*t7215)*(t7226*t7226)*t7238*2.0- \
               kp*rho_a[index]*t7251*t7226*t7239*2.0+kp*rho_a[index]*t7238*t7239*(gamma_aa[index]*mu_*t7075*t7192* \
               t7212*t7213*(1.0E1/9.0)+gamma_aa[index]*mu_*t7088*t7212*t7213*t7223*(4.0/3.0)+gamma_aa[index]*mu_* \
               1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t7072*t7212*t7213*(3.0/2.0)))+(rho_a[index]* \
               t7324*2.0-c0p*rho_a[index]*t7084*t7094*4.0)*(t7311+t7320+t7314+t7317-ccab1*t7095*t7096*t7141*t7191* \
               (3.2E1/9.0)+ccab2*t7095*t7096*t7141*t7139*(3.2E1/9.0)-ccab2*t7097*t7098*t7162*t7158*(3.2E1/9.0)+ccab4* \
               t7097*t7098*t7127*t7158*(6.4E1/3.0)-ccab2*t7095*t7096*t7144*t7162*t7145*(1.6E1/3.0)-ccab4*t7097*t7098* \
               t7142*t7153*t7159*(3.2E1/3.0)-ccab4*t7097*t7098*t7099*t7159*(t7095*t7096*t7141*(6.4E1/3.0)+t7097*t7098* \
               t7158*(6.4E1/3.0)+gamma_aa[index]*gcab*t7095*t7096*t7140*(1.28E2/3.0))+ccab3*gamma_aa[index]*gcab* \
               t7095*t7096*t7140*t7135*(3.2E1/3.0)-ccab3*gamma_aa[index]*gcab*t7095*t7096*t7101*t7148*(t7095*t7096* \
               t7141*(3.2E1/3.0)+gamma_aa[index]*gcab*t7095*t7096*t7140*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t7095* \
               t7096*t7152*t7146*t7148*8.0)+t7256*(t7307+rho_a[index]*(t7264+t7282+t7268-t7082*t7092*t7084*t7265* \
               2.0-a1p*c*c0p*t7076*t7094*(8.0/9.0)-Aa*t7105*t7192*t7281*t7269*t7279*(4.0/9.0))*2.0-t7082*t7084*t7093* \
               t7086*2.0)+t7324*t7333*t7396*2.0+t7333*t7373*t7397*2.0-rho_a[index]*t7324*t7333*(ccaa1*gamma_aa[index]* \
               gcaa*t7147*t7342*(8.8E1/9.0)+ccaa2*t7095*t7141*t7322*t7351*(3.04E2/9.0)-ccaa1*t7095*t7141*t7322*t7353* \
               2.4E1+ccaa4*t7097*t7158*t7323*t7339*(1.12E3/9.0)-ccaa2*t7095*t7144*t7322*t7361*t7368*(3.2E1/3.0)-ccaa4* \
               t7097*t7153*t7323*t7358*t7367*(6.4E1/3.0)-ccaa2*t7095*t7102*t7322*t7368*(gamma_aa[index]*gcaa*t7147* \
               (1.76E2/9.0)+t7095*t7141*t7322*(3.04E2/9.0))-ccaa4*t7097*t7099*t7323*t7367*(gamma_aa[index]*gcaa*t7147* \
               (3.52E2/9.0)+t7095*t7141*t7322*(6.08E2/3.0)+t7097*t7158*t7323*(1.12E3/9.0)+gamma_aa[index]*gcaa*t7095* \
               t7140*t7322*2.88E2)+ccaa4*t7097*t7099*t7323*1/(t7338*t7338*t7338)*(t7358*t7358)*2.0+ccaa2*t7095*t7102* \
               t7322*1/(t7350*t7350*t7350)*(t7361*t7361)*2.0+ccaa3*gamma_aa[index]*gcaa*t7095*t7140*t7322*t7347*7.2E1+ \
               ccaa1*gamma_aa[index]*gcaa*t7095*t7140*t7322*1/(t7341*t7341*t7341)*(1.28E2/9.0)+ccaa3*gamma_aa[index]* \
               gcaa*t7095*t7101*t7322*1/(t7346*t7346*t7346)*(t7365*t7365)*2.0-ccaa3*gamma_aa[index]*gcaa*t7095*t7101* \
               t7322*t7366*(gamma_aa[index]*gcaa*t7147*(8.8E1/3.0)+t7095*t7141*t7322*(3.04E2/3.0)+gamma_aa[index]* \
               gcaa*t7095*t7140*t7322*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t7095*t7146*t7322*t7365*t7366*1.6E1)+rho_a[index]* \
               t7333*t7373*(-t7295-t7304+t7383+t7387+t7389+t7105*t7165*(t7295+t7304+t7381-t7383+t7386-t7387+t7388- \
               t7389-t7167*t7283*t7292*t7374*2.0-a1f*c*c0f*t7180*t7290*(8.0/9.0)))-rho_a[index]*t7333*t7396*t7397* \
               2.0+gamma_aa[index]*t7193*t7324*t7326*t7328*t7396*(1.0/4.0)+gamma_aa[index]*t7193*t7326*t7328*t7373* \
               (-t7188+t7306+t7391)*(1.0/4.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t7403 = 1/(k*k);
                double t7404 = 1/kp;
                double t7405 = rho_a[index]*2.0;
                double t7406 = 1/(rho_a[index]*rho_a[index]);
                double t7407 = 1/pow(t7405,2.0/3.0);
                double t7408 = pow(rho_a[index],5.0/3.0);
                double t7409 = 1/tau_a[index];
                double t7410 = C_k*t7408*t7409;
                double t7411 = t7410-1.0;
                double t7412 = t7411*t7411;
                double t7413 = t7412*t7412;
                double t7414 = t7413*t7413;
                double t7415 = t7410+1.0;
                double t7416 = gamma_aa[index]*mu_*t7403*t7404*t7406*t7407*(1.0/4.0);
                double t7417 = t7416+1.0;
                double t7418 = 1/(t7417*t7417);
                double t7419 = 1/t7415;
                double t7420 = a_1*t7411*t7419;
                double t7421 = 1/pow(t7415,1.0E1);
                double t7422 = a_10*t7412*t7421*t7414;
                double t7423 = 1/pow(t7415,1.1E1);
                double t7424 = a_11*t7411*t7412*t7414*t7423;
                double t7425 = 1/(t7415*t7415);
                double t7426 = a_2*t7412*t7425;
                double t7427 = 1/(t7415*t7415*t7415);
                double t7428 = a_3*t7411*t7412*t7427;
                double t7429 = 1/(t7415*t7415*t7415*t7415);
                double t7430 = a_4*t7413*t7429;
                double t7431 = 1/(t7415*t7415*t7415*t7415*t7415);
                double t7432 = a_5*t7411*t7413*t7431;
                double t7433 = 1/(t7415*t7415*t7415*t7415*t7415*t7415);
                double t7434 = a_6*t7412*t7413*t7433;
                double t7435 = 1/(t7415*t7415*t7415*t7415*t7415*t7415*t7415);
                double t7436 = a_7*t7411*t7412*t7413*t7435;
                double t7437 = 1/(t7415*t7415*t7415*t7415*t7415*t7415*t7415*t7415);
                double t7438 = a_8*t7414*t7437;
                double t7439 = 1/(t7415*t7415*t7415*t7415*t7415*t7415*t7415*t7415*t7415);
                double t7440 = a_9*t7411*t7414*t7439;
                double t7441 = t7420+t7430+t7422+t7440+t7432+t7424+t7434+t7426+t7436+t7428+t7438+1.0;
                double t7442 = pow(rho_a[index],2.0/3.0);
                double t7443 = 1/rho_a[index];
                double t7444 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
                double t7445 = 1/pow(t7405,5.0/3.0);
                double t7446 = 1/pow(rho_a[index],1.0/3.0);
                double t7447 = c*t7446;
                double t7448 = sqrt(t7447);
                double t7449 = pow(t7447,3.0/2.0);
                double t7450 = c*c;
                double t7451 = 1/pow(rho_a[index],2.0/3.0);
                double t7452 = 1/c0p;
                double t7453 = b1p*t7448;
                double t7454 = b3p*t7449;
                double t7455 = b4p*t7450*t7451;
                double t7456 = b2p*c*t7446;
                double t7457 = t7453+t7454+t7455+t7456;
                double t7458 = 1/t7457;
                double t7459 = t7452*t7458*(1.0/2.0);
                double t7460 = t7459+1.0;
                double t7461 = log(t7460);
                double t7462 = a1p*c*t7446;
                double t7463 = t7462+1.0;
                double t7464 = 1/pow(t7405,1.0/3.0);
                double t7465 = c*t7464;
                double t7466 = gamma_aa[index]*gamma_aa[index];
                double t7467 = gcab*gcab;
                double t7468 = t7467*t7467;
                double t7469 = 1/pow(rho_a[index],8.0/3.0);
                double t7470 = 1/pow(rho_a[index],1.6E1/3.0);
                double t7471 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t7472 = 1/pow(rho_a[index],1.9E1/3.0);
                double t7473 = 1/pow(rho_a[index],3.5E1/3.0);
                double t7474 = gamma_aa[index]*gcab*t7469*2.0;
                double t7475 = t7470*t7466*t7467;
                double t7476 = t7474+t7475+1.0;
                double t7477 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t7478 = gamma_aa[index]*gcab*t7469;
                double t7479 = t7478+1.0;
                double t7480 = gamma_aa[index]*gcab*t7469*3.0;
                double t7481 = gamma_aa[index]*gcab*t7471*t7466*t7467;
                double t7482 = t7470*t7466*t7467*3.0;
                double t7483 = t7480+t7481+t7482+1.0;
                double t7484 = t7466*t7466;
                double t7485 = 1/pow(rho_a[index],3.2E1/3.0);
                double t7486 = gamma_aa[index]*gcab*t7469*4.0;
                double t7487 = gamma_aa[index]*gcab*t7471*t7466*t7467*4.0;
                double t7488 = t7470*t7466*t7467*6.0;
                double t7489 = t7484*t7485*t7468;
                double t7490 = t7486+t7487+t7488+t7489+1.0;
                double t7491 = 1/pow(rho_a[index],1.1E1/3.0);
                double t7492 = 1/(t7476*t7476);
                double t7493 = 1/(t7483*t7483);
                double t7494 = 1/(t7490*t7490);
                double t7495 = gamma_aa[index]*gcab*t7491*(8.0/3.0);
                double t7496 = t7472*t7466*t7467*(8.0/3.0);
                double t7497 = t7495+t7496;
                double t7498 = gcab*t7469;
                double t7499 = gamma_aa[index]*t7470*t7467;
                double t7500 = t7498+t7499;
                double t7501 = gcab*t7469*(3.0/2.0);
                double t7502 = gamma_aa[index]*t7470*t7467*3.0;
                double t7503 = gcab*t7471*t7466*t7467*(3.0/2.0);
                double t7504 = t7501+t7502+t7503;
                double t7505 = gamma_aa[index]*gcab*t7491*4.0;
                double t7506 = gamma_aa[index]*gcab*t7466*t7467*t7477*4.0;
                double t7507 = t7472*t7466*t7467*8.0;
                double t7508 = t7505+t7506+t7507;
                double t7509 = gamma_aa[index]*gcab*t7491*(1.6E1/3.0);
                double t7510 = gamma_aa[index]*gcab*t7466*t7467*t7477*1.6E1;
                double t7511 = t7472*t7466*t7467*1.6E1;
                double t7512 = t7473*t7484*t7468*(1.6E1/3.0);
                double t7513 = t7510+t7511+t7512+t7509;
                double t7514 = gcab*t7469*2.0;
                double t7515 = gamma_aa[index]*t7470*t7467*6.0;
                double t7516 = gcab*t7471*t7466*t7467*6.0;
                double t7517 = gamma_aa[index]*t7466*t7485*t7468*2.0;
                double t7518 = t7514+t7515+t7516+t7517;
                double t7519 = pow(2.0,1.0/3.0);
                double t7520 = t7519*2.0;
                double t7521 = t7520-2.0;
                double t7522 = two_13*2.0;
                double t7523 = t7522-2.0;
                double t7524 = 1/t7523;
                double t7525 = 1/c0f;
                double t7526 = b1f*t7448;
                double t7527 = b3f*t7449;
                double t7528 = b4f*t7450*t7451;
                double t7529 = b2f*c*t7446;
                double t7530 = t7526+t7527+t7528+t7529;
                double t7531 = 1/t7530;
                double t7532 = t7531*t7525*(1.0/2.0);
                double t7533 = t7532+1.0;
                double t7534 = log(t7533);
                double t7535 = a1f*c*t7446;
                double t7536 = t7535+1.0;
                double t7537 = c0f*t7534*t7536*2.0;
                double t7538 = c0p*t7461*t7463*2.0;
                double t7539 = sqrt(t7465);
                double t7540 = b1p*t7539;
                double t7541 = pow(t7465,3.0/2.0);
                double t7542 = b3p*t7541;
                double t7543 = b2p*c*t7464;
                double t7544 = b4p*t7450*t7407;
                double t7545 = t7540+t7542+t7543+t7544;
                double t7546 = 1/t7545;
                double t7547 = t7452*t7546*(1.0/2.0);
                double t7548 = t7547+1.0;
                double t7549 = log(t7548);
                double t7550 = a1p*c*t7464;
                double t7551 = t7550+1.0;
                double t7552 = 1/t7490;
                double t7553 = 1/t7476;
                double t7554 = 1/t7483;
                double t7555 = 1/(t7479*t7479);
                double t7556 = 1/(t7479*t7479*t7479);
                double t7557 = ccab3*gcab*t7471*t7466*t7493*t7467*t7508*(3.0/2.0);
                double t7558 = ccab2*gamma_aa[index]*t7470*t7492*t7467*t7497;
                double t7559 = ccab3*gamma_aa[index]*gcab*t7466*t7493*t7467*t7477*t7504*4.0;
                double t7560 = ccab4*gamma_aa[index]*t7466*t7485*t7494*t7468*t7513*2.0;
                double t7561 = ccab4*t7473*t7484*t7494*t7468*t7518*(1.6E1/3.0);
                double t7562 = ccab2*t7472*t7492*t7466*t7467*t7500*(8.0/3.0);
                double t7563 = gamma_aa[index]*t7472*t7467*4.0;
                double t7564 = 1/(t7476*t7476*t7476);
                double t7565 = 1/(t7483*t7483*t7483);
                double t7566 = 1/(t7490*t7490*t7490);
                double t7567 = 1/pow(t7405,4.0/3.0);
                double t7568 = 1/pow(rho_a[index],4.0/3.0);
                double t7569 = 1/pow(rho_a[index],5.0/3.0);
                double t7570 = 1/sqrt(t7447);
                double t7571 = 1/t7460;
                double t7572 = 1/(t7457*t7457);
                double t7573 = b4p*t7450*t7569*(2.0/3.0);
                double t7574 = b2p*c*t7568*(1.0/3.0);
                double t7575 = b1p*c*t7570*t7568*(1.0/6.0);
                double t7576 = b3p*c*t7448*t7568*(1.0/2.0);
                double t7577 = t7573+t7574+t7575+t7576;
                double t7578 = t7463*t7571*t7572*t7577;
                double t7579 = t7537-t7538;
                double t7580 = t7521*t7524*t7579;
                double t7581 = 1/t7479;
                double t7582 = t7580+t7538;
                double t7583 = gcaa*gcaa;
                double t7584 = t7583*t7583;
                double t7585 = gamma_aa[index]*gcaa*t7469;
                double t7586 = t7585+1.0;
                double t7587 = gamma_aa[index]*gcaa*t7469*3.0;
                double t7588 = gamma_aa[index]*gcaa*t7471*t7466*t7583;
                double t7589 = t7470*t7466*t7583*3.0;
                double t7590 = t7587+t7588+t7589+1.0;
                double t7591 = gamma_aa[index]*gcaa*t7469*4.0;
                double t7592 = gamma_aa[index]*gcaa*t7471*t7466*t7583*4.0;
                double t7593 = t7470*t7466*t7583*6.0;
                double t7594 = t7484*t7485*t7584;
                double t7595 = t7591+t7592+t7593+t7594+1.0;
                double t7596 = gamma_aa[index]*gcaa*t7469*2.0;
                double t7597 = t7470*t7466*t7583;
                double t7598 = t7596+t7597+1.0;
                double t7599 = tau_a[index]-1.0/1.0E20;
                double t7600 = ( (t7599 > 0.0) ?  1.0 : 0.0 ) ;
                double t7601 = tau_a[index]*2.0;
                double t7639 = gamma_aa[index]*t7443*(1.0/4.0);
                double t7602 = t7601-t7639;
                double t7603 = t7409*t7602*(1.0/2.0);
                double t7604 = t7603-1.0;
                double t7605 = t7600*t7604;
                double t7606 = t7605+1.0;
                double t7607 = 1/t7586;
                double t7608 = 1/t7595;
                double t7609 = 1/t7598;
                double t7610 = 1/t7590;
                double t7611 = 1/(t7586*t7586);
                double t7612 = 1/(t7590*t7590);
                double t7613 = 1/(t7598*t7598);
                double t7614 = gcaa*t7469*3.0;
                double t7615 = gamma_aa[index]*t7470*t7583*6.0;
                double t7616 = gcaa*t7471*t7466*t7583*3.0;
                double t7617 = t7614+t7615+t7616;
                double t7618 = 1/(t7595*t7595);
                double t7619 = gcaa*t7469*4.0;
                double t7620 = gamma_aa[index]*t7470*t7583*1.2E1;
                double t7621 = gcaa*t7471*t7466*t7583*1.2E1;
                double t7622 = gamma_aa[index]*t7466*t7485*t7584*4.0;
                double t7623 = t7620+t7621+t7622+t7619;
                double t7624 = gcaa*t7469*2.0;
                double t7625 = gamma_aa[index]*t7470*t7583*2.0;
                double t7626 = t7624+t7625;
                double t7627 = gamma_aa[index]*gcaa*t7491*(1.6E1/3.0);
                double t7628 = t7472*t7466*t7583*(1.6E1/3.0);
                double t7629 = t7627+t7628;
                double t7630 = gamma_aa[index]*gcaa*t7491*8.0;
                double t7631 = gamma_aa[index]*gcaa*t7466*t7477*t7583*8.0;
                double t7632 = t7472*t7466*t7583*1.6E1;
                double t7633 = t7630+t7631+t7632;
                double t7634 = gamma_aa[index]*gcaa*t7491*(3.2E1/3.0);
                double t7635 = gamma_aa[index]*gcaa*t7466*t7477*t7583*3.2E1;
                double t7636 = t7472*t7466*t7583*3.2E1;
                double t7637 = t7473*t7484*t7584*(3.2E1/3.0);
                double t7638 = t7634+t7635+t7636+t7637;
                double t7640 = 1/t7533;
                double t7641 = 1/(t7530*t7530);
                double t7642 = b4f*t7450*t7569*(2.0/3.0);
                double t7643 = b2f*c*t7568*(1.0/3.0);
                double t7644 = b1f*c*t7570*t7568*(1.0/6.0);
                double t7645 = b3f*c*t7448*t7568*(1.0/2.0);
                double t7646 = t7642+t7643+t7644+t7645;
                double t7647 = a1f*c*c0f*t7534*t7568*(2.0/3.0);
                double t7648 = a1p*c*c0p*t7461*t7568*(2.0/3.0);
                double t7649 = ccaa1*gcaa*t7469*t7607;
                double t7650 = ccaa4*gamma_aa[index]*t7466*t7485*t7584*t7608*4.0;
                double t7651 = ccaa2*gamma_aa[index]*t7470*t7583*t7609*2.0;
                double t7652 = ccaa3*gcaa*t7471*t7466*t7583*t7610*3.0;
                double t7657 = ccaa1*gamma_aa[index]*t7470*t7583*t7611;
                double t7658 = ccaa3*gamma_aa[index]*gcaa*t7471*t7466*t7583*t7612*t7617;
                double t7659 = ccaa4*t7484*t7485*t7584*t7623*t7618;
                double t7660 = ccaa2*t7470*t7466*t7583*t7613*t7626;
                double t7653 = t7650+t7651-t7660+t7652-t7657+t7649-t7658-t7659;
                double t7654 = t7578+t7647-t7648-t7536*t7640*t7641*t7646;
                double t7655 = t7521*t7524*t7654;
                double t7656 = -t7578+t7655+t7648;
                v_rho_a_gamma_aa_[index] = (rho_a[index]*t7582*2.0-c0p*rho_a[index]*t7551*t7549*4.0)*(t7560+t7561+ \
                   t7562+t7557+t7558+t7559-ccab1*gcab*t7491*t7581*(4.0/3.0)-ccab2*gamma_aa[index]*t7472*t7467*t7553*4.0+ \
                   ccab1*gamma_aa[index]*t7472*t7467*t7555*(8.0/3.0)+ccab4*t7484*t7485*t7494*t7468*(gcab*t7491*(1.6E1/ \
                   3.0)+gamma_aa[index]*t7472*t7467*2.4E1+gamma_aa[index]*t7473*t7466*t7468*(4.0E1/3.0)+gcab*t7466*t7467* \
                   t7477*3.2E1)+ccab2*t7470*t7492*t7466*t7467*(t7563+gcab*t7491*(8.0/3.0))-ccab4*gamma_aa[index]*t7473* \
                   t7466*t7468*t7552*(4.0E1/3.0)-ccab1*gcab*t7466*t7467*t7477*t7556*(4.0/3.0)-ccab3*gcab*t7466*t7467* \
                   t7477*t7554*8.0-ccab2*t7470*t7466*t7467*t7497*t7500*t7564*2.0-ccab4*t7484*t7485*t7468*t7513*t7518* \
                   t7566*2.0+ccab3*gamma_aa[index]*gcab*t7471*t7466*t7493*t7467*(gcab*t7491*4.0+gamma_aa[index]*t7472* \
                   t7467*1.2E1+gcab*t7466*t7467*t7477*8.0)-ccab3*gamma_aa[index]*gcab*t7471*t7466*t7467*t7504*t7508*t7565* \
                   2.0)-(-t7580-t7538+rho_a[index]*((t7551*1/(t7545*t7545)*(b2p*c*t7567*(1.0/3.0)+b4p*t7450*t7445*(2.0/ \
                   3.0)+b3p*c*t7539*t7567*(1.0/2.0)+b1p*c*1/sqrt(t7465)*t7567*(1.0/6.0)))/t7548-a1p*c*c0p*t7549*t7567* \
                   (2.0/3.0))*2.0+rho_a[index]*(-t7578+t7648+t7521*t7524*(t7578+t7647-t7536*t7640*t7641*t7646-a1p*c*c0p* \
                   t7461*t7568*(2.0/3.0)))+c0p*t7551*t7549*2.0)*(ccab1*gcab*t7469*t7581*(1.0/2.0)+ccab2*gamma_aa[index]* \
                   t7470*t7467*t7553-ccab1*gamma_aa[index]*t7470*t7467*t7555*(1.0/2.0)-ccab2*t7470*t7492*t7466*t7467* \
                   t7500-ccab4*t7484*t7485*t7494*t7468*t7518+ccab4*gamma_aa[index]*t7466*t7485*t7468*t7552*2.0+ccab3* \
                   gcab*t7471*t7466*t7467*t7554*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t7471*t7466*t7493*t7467*t7504)*2.0- \
                   (X-1.0)*(-kp*rho_a[index]*t7441*t7418*(mu_*t7403*t7404*t7406*t7445*(1.0/3.0)+mu_*t7403*t7404*t7407* \
                   t7444*(1.0/2.0))+mu_*t7403*t7441*t7406*t7407*t7418*(1.0/4.0)+mu_*t7403*t7407*t7443*t7418*(C_k*a_1* \
                   t7442*t7409*t7419*(5.0/3.0)-C_k*a_1*t7411*t7442*t7425*t7409*(5.0/3.0)+C_k*a_2*t7411*t7442*t7425*t7409* \
                   (1.0E1/3.0)-C_k*a_2*t7412*t7442*t7409*t7427*(1.0E1/3.0)+C_k*a_3*t7412*t7442*t7409*t7427*5.0-C_k*a_4* \
                   t7413*t7431*t7442*t7409*(2.0E1/3.0)+C_k*a_5*t7413*t7431*t7442*t7409*(2.5E1/3.0)-C_k*a_8*t7414*t7442* \
                   t7409*t7439*(4.0E1/3.0)+C_k*a_9*t7414*t7442*t7409*t7439*1.5E1+C_k*a_10*t7411*t7421*t7414*t7442*t7409* \
                   (5.0E1/3.0)-C_k*a_10*t7412*t7414*t7423*t7442*t7409*(5.0E1/3.0)+C_k*a_11*t7412*t7414*t7423*t7442*t7409* \
                   (5.5E1/3.0)-C_k*a_3*t7411*t7412*t7442*t7409*t7429*5.0+C_k*a_4*t7411*t7412*t7442*t7409*t7429*(2.0E1/ \
                   3.0)-C_k*a_5*t7411*t7413*t7433*t7442*t7409*(2.5E1/3.0)+C_k*a_6*t7411*t7413*t7433*t7442*t7409*1.0E1- \
                   C_k*a_6*t7412*t7413*t7442*t7435*t7409*1.0E1+C_k*a_7*t7412*t7413*t7442*t7435*t7409*(3.5E1/3.0)-C_k* \
                   a_9*t7411*t7421*t7414*t7442*t7409*1.5E1-C_k*a_11*t7411*t7412*t7414*1/pow(t7415,1.2E1)*t7442*t7409* \
                   (5.5E1/3.0)-C_k*a_7*t7411*t7412*t7413*t7442*t7409*t7437*(3.5E1/3.0)+C_k*a_8*t7411*t7412*t7413*t7442* \
                   t7409*t7437*(4.0E1/3.0))*(1.0/4.0)+mu_*t7403*t7441*t7407*t7443*1/(t7417*t7417*t7417)*(gamma_aa[index]* \
                   mu_*t7403*t7404*t7406*t7445*(1.0/3.0)+gamma_aa[index]*mu_*t7403*t7404*t7407*t7444*(1.0/2.0))*(1.0/ \
                   2.0))+(rho_a[index]*(t7538+t7521*t7524*(t7537-c0p*t7461*t7463*2.0))*2.0-c0p*rho_a[index]*t7551*t7549* \
                   4.0)*(t7560+t7561+t7562+t7557+t7558+t7559-ccab2*gamma_aa[index]*t7472*t7467*t7553*(4.0/3.0)+ccab1* \
                   gamma_aa[index]*t7472*t7467*t7555*(4.0/3.0)+ccab4*t7484*t7485*t7494*t7468*(gamma_aa[index]*t7472*t7467* \
                   8.0+gamma_aa[index]*t7473*t7466*t7468*8.0+gcab*t7466*t7467*t7477*1.6E1)+ccab2*gamma_aa[index]*t7473* \
                   t7492*t7466*t7468*(4.0/3.0)-ccab4*gamma_aa[index]*t7473*t7466*t7468*t7552*8.0-ccab1*gcab*t7466*t7467* \
                   t7477*t7556*(4.0/3.0)-ccab3*gcab*t7466*t7467*t7477*t7554*4.0-ccab2*t7470*t7466*t7467*t7497*t7500*t7564* \
                   2.0-ccab4*t7484*t7485*t7468*t7513*t7518*t7566*2.0+ccab3*gamma_aa[index]*gcab*t7471*t7466*t7493*t7467* \
                   (t7563+gcab*t7466*t7467*t7477*4.0)-ccab3*gamma_aa[index]*gcab*t7471*t7466*t7467*t7504*t7508*t7565* \
                   2.0)-t7582*t7606*t7653+rho_a[index]*t7606*t7653*t7656-rho_a[index]*t7582*t7606*(ccaa1*gcaa*t7491*t7607* \
                   (-8.0/3.0)+ccaa1*gamma_aa[index]*t7472*t7583*t7611*8.0-ccaa2*gamma_aa[index]*t7472*t7583*t7609*(3.2E1/ \
                   3.0)+ccaa2*t7472*t7466*t7583*t7613*t7626*(1.6E1/3.0)+ccaa4*t7473*t7484*t7584*t7623*t7618*(3.2E1/3.0) \
                   +ccaa4*t7484*t7485*t7584*t7618*(gcaa*t7491*(3.2E1/3.0)+gamma_aa[index]*t7472*t7583*6.4E1+gamma_aa[index]* \
                   t7473*t7466*t7584*(1.28E2/3.0)+gcaa*t7466*t7477*t7583*9.6E1)-ccaa1*gcaa*t7466*t7477*t7583*1/(t7586* \
                   t7586*t7586)*(1.6E1/3.0)+ccaa2*t7470*t7466*t7583*t7613*(gcaa*t7491*(1.6E1/3.0)+gamma_aa[index]*t7472* \
                   t7583*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t7473*t7466*t7584*t7608*(1.28E2/3.0)+ccaa2*gamma_aa[index]* \
                   t7470*t7583*t7613*t7629*2.0-ccaa3*gcaa*t7466*t7477*t7583*t7610*2.4E1+ccaa4*gamma_aa[index]*t7466*t7485* \
                   t7584*t7618*t7638*4.0+ccaa3*gcaa*t7471*t7466*t7583*t7612*t7633*3.0-ccaa2*t7470*t7466*t7583*1/(t7598* \
                   t7598*t7598)*t7626*t7629*2.0-ccaa4*t7484*t7485*t7584*1/(t7595*t7595*t7595)*t7623*t7638*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t7471*t7466*t7583*t7612*(gcaa*t7491*8.0+gamma_aa[index]*t7472*t7583*3.2E1+gcaa*t7466*t7477*t7583* \
                   2.4E1)+ccaa3*gamma_aa[index]*gcaa*t7466*t7477*t7583*t7612*t7617*8.0-ccaa3*gamma_aa[index]*gcaa*t7471* \
                   t7466*1/(t7590*t7590*t7590)*t7583*t7633*t7617*2.0)-t7409*t7600*t7656*(ccaa0+ccaa1*gamma_aa[index]* \
                   gcaa*t7469*t7607+ccaa2*t7470*t7466*t7583*t7609+ccaa4*t7484*t7485*t7584*t7608+ccaa3*gamma_aa[index]* \
                   gcaa*t7471*t7466*t7583*t7610)*(1.0/8.0)-t7409*t7582*t7600*(ccaa1*gamma_aa[index]*gcaa*t7491*t7607* \
                   (8.0/3.0)-ccaa1*t7472*t7466*t7583*t7611*(8.0/3.0)+ccaa2*t7472*t7466*t7583*t7609*(1.6E1/3.0)+ccaa4* \
                   t7473*t7484*t7584*t7608*(3.2E1/3.0)-ccaa2*t7470*t7466*t7583*t7613*t7629-ccaa4*t7484*t7485*t7584*t7618* \
                   t7638+ccaa3*gamma_aa[index]*gcaa*t7466*t7477*t7583*t7610*8.0-ccaa3*gamma_aa[index]*gcaa*t7471*t7466* \
                   t7583*t7612*t7633)*(1.0/8.0)-gamma_aa[index]*t7443*t7409*t7582*t7600*t7653*(1.0/8.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t7662 = 1/pow(rho_a[index],1.0/3.0);
                double t7663 = c*t7662;
                double t7664 = sqrt(t7663);
                double t7665 = pow(t7663,3.0/2.0);
                double t7666 = c*c;
                double t7667 = 1/pow(rho_a[index],2.0/3.0);
                double t7668 = 1/c0p;
                double t7669 = b1p*t7664;
                double t7670 = b3p*t7665;
                double t7671 = b4p*t7666*t7667;
                double t7672 = b2p*c*t7662;
                double t7673 = t7670+t7671+t7672+t7669;
                double t7674 = 1/t7673;
                double t7675 = t7674*t7668*(1.0/2.0);
                double t7676 = t7675+1.0;
                double t7677 = log(t7676);
                double t7678 = a1p*c*t7662;
                double t7679 = t7678+1.0;
                double t7680 = rho_a[index]*2.0;
                double t7681 = 1/pow(t7680,1.0/3.0);
                double t7682 = c*t7681;
                double t7683 = gcab*gcab;
                double t7684 = 1/pow(rho_a[index],1.6E1/3.0);
                double t7685 = 1/pow(rho_a[index],8.0/3.0);
                double t7686 = gamma_aa[index]*gamma_aa[index];
                double t7687 = t7683*t7683;
                double t7688 = 1/pow(rho_a[index],3.2E1/3.0);
                double t7689 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t7690 = gamma_aa[index]*gcab*t7685;
                double t7691 = t7690+1.0;
                double t7692 = gamma_aa[index]*gcab*t7685*2.0;
                double t7693 = t7683*t7684*t7686;
                double t7694 = t7692+t7693+1.0;
                double t7695 = gamma_aa[index]*gcab*t7685*3.0;
                double t7696 = gamma_aa[index]*gcab*t7683*t7686*t7689;
                double t7697 = t7683*t7684*t7686*3.0;
                double t7698 = t7695+t7696+t7697+1.0;
                double t7699 = t7686*t7686;
                double t7715 = gcab*t7685*2.0;
                double t7716 = gamma_aa[index]*t7683*t7684*6.0;
                double t7717 = gcab*t7683*t7686*t7689*6.0;
                double t7718 = gamma_aa[index]*t7686*t7687*t7688*2.0;
                double t7700 = t7715+t7716+t7717+t7718;
                double t7701 = gamma_aa[index]*gcab*t7685*4.0;
                double t7702 = gamma_aa[index]*gcab*t7683*t7686*t7689*4.0;
                double t7703 = t7683*t7684*t7686*6.0;
                double t7704 = t7687*t7688*t7699;
                double t7705 = t7701+t7702+t7703+t7704+1.0;
                double t7708 = gcab*t7685;
                double t7709 = gamma_aa[index]*t7683*t7684;
                double t7706 = t7708+t7709;
                double t7707 = 1/(t7698*t7698);
                double t7710 = 1/(t7694*t7694);
                double t7711 = gcab*t7685*(3.0/2.0);
                double t7712 = gamma_aa[index]*t7683*t7684*3.0;
                double t7713 = gcab*t7683*t7686*t7689*(3.0/2.0);
                double t7714 = t7711+t7712+t7713;
                double t7719 = 1/(t7705*t7705);
                double t7720 = pow(2.0,1.0/3.0);
                double t7721 = t7720*2.0;
                double t7722 = t7721-2.0;
                double t7723 = two_13*2.0;
                double t7724 = t7723-2.0;
                double t7725 = 1/t7724;
                double t7726 = 1/c0f;
                double t7727 = b1f*t7664;
                double t7728 = b3f*t7665;
                double t7729 = b4f*t7666*t7667;
                double t7730 = b2f*c*t7662;
                double t7731 = t7730+t7727+t7728+t7729;
                double t7732 = 1/t7731;
                double t7733 = t7732*t7726*(1.0/2.0);
                double t7734 = t7733+1.0;
                double t7735 = log(t7734);
                double t7736 = a1f*c*t7662;
                double t7737 = t7736+1.0;
                double t7738 = c0f*t7735*t7737*2.0;
                double t7739 = c0p*t7677*t7679*2.0;
                double t7740 = gcaa*gcaa;
                double t7741 = t7740*t7740;
                double t7742 = gamma_aa[index]*gcaa*t7685;
                double t7743 = t7742+1.0;
                double t7744 = gamma_aa[index]*gcaa*t7685*2.0;
                double t7745 = t7684*t7686*t7740;
                double t7746 = t7744+t7745+1.0;
                double t7747 = gamma_aa[index]*gcaa*t7685*3.0;
                double t7748 = gamma_aa[index]*gcaa*t7686*t7689*t7740;
                double t7749 = t7684*t7686*t7740*3.0;
                double t7750 = t7747+t7748+t7749+1.0;
                double t7766 = gcaa*t7685*4.0;
                double t7767 = gamma_aa[index]*t7684*t7740*1.2E1;
                double t7768 = gcaa*t7686*t7689*t7740*1.2E1;
                double t7769 = gamma_aa[index]*t7686*t7688*t7741*4.0;
                double t7751 = t7766+t7767+t7768+t7769;
                double t7752 = gamma_aa[index]*gcaa*t7685*4.0;
                double t7753 = gamma_aa[index]*gcaa*t7686*t7689*t7740*4.0;
                double t7754 = t7684*t7686*t7740*6.0;
                double t7755 = t7688*t7699*t7741;
                double t7756 = t7752+t7753+t7754+t7755+1.0;
                double t7759 = gcaa*t7685*2.0;
                double t7760 = gamma_aa[index]*t7684*t7740*2.0;
                double t7757 = t7760+t7759;
                double t7758 = 1/(t7750*t7750);
                double t7761 = 1/(t7746*t7746);
                double t7762 = gcaa*t7685*3.0;
                double t7763 = gamma_aa[index]*t7684*t7740*6.0;
                double t7764 = gcaa*t7686*t7689*t7740*3.0;
                double t7765 = t7762+t7763+t7764;
                double t7770 = 1/(t7756*t7756);
                double t7771 = 1/tau_a[index];
                double t7772 = tau_a[index]-1.0/1.0E20;
                double t7773 = ( (t7772 > 0.0) ?  1.0 : 0.0 ) ;
                double t7774 = t7738-t7739;
                double t7775 = t7722*t7725*t7774;
                double t7776 = t7739+t7775;
                double t7777 = 1/t7756;
                double t7778 = 1/t7746;
                double t7779 = 1/t7750;
                double t7780 = 1/(t7743*t7743);
                double t7781 = 1/kp;
                double t7782 = 1/pow(t7680,2.0/3.0);
                double t7783 = pow(rho_a[index],5.0/3.0);
                double t7784 = C_k*t7771*t7783;
                double t7785 = t7784-1.0;
                double t7786 = t7785*t7785;
                double t7787 = t7786*t7786;
                double t7788 = t7787*t7787;
                double t7789 = t7784+1.0;
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t7739+t7722*t7725*(t7738-c0p*t7677*t7679*2.0))*2.0-c0p* \
                   rho_a[index]*log((t7668*(1.0/2.0))/(b1p*sqrt(t7682)+b3p*pow(t7682,3.0/2.0)+b2p*c*t7681+b4p*t7666*t7782) \
                   +1.0)*(a1p*c*t7681+1.0)*4.0)*(ccab1*1/(t7691*t7691)*t7683*t7684*(1.0/2.0)-(ccab2*t7683*t7684*(1.0/ \
                   2.0))/t7694+ccab2*t7686*t7687*t7688*t7710*(1.0/2.0)-(ccab4*t7686*t7687*t7688*3.0)/t7705+ccab4*t7687* \
                   t7688*t7699*t7719*(t7683*t7684*3.0+t7686*t7687*t7688*3.0+gamma_aa[index]*gcab*t7683*t7689*6.0)-ccab1* \
                   gamma_aa[index]*gcab*1/(t7691*t7691*t7691)*t7683*t7689*(1.0/2.0)-(ccab3*gamma_aa[index]*gcab*t7683* \
                   t7689*(3.0/2.0))/t7698-ccab2*t7683*t7684*1/(t7694*t7694*t7694)*t7686*(t7706*t7706)*2.0-ccab4*t7687* \
                   t7688*t7699*(t7700*t7700)*1/(t7705*t7705*t7705)*2.0+ccab2*gamma_aa[index]*t7683*t7684*t7710*t7706* \
                   2.0+ccab4*gamma_aa[index]*t7686*t7687*t7688*t7700*t7719*4.0+ccab3*gcab*t7683*t7686*t7689*t7714*t7707* \
                   3.0+ccab3*gamma_aa[index]*gcab*t7683*t7686*t7689*t7707*(t7683*t7684*(3.0/2.0)+gamma_aa[index]*gcab* \
                   t7683*t7689*(3.0/2.0))-ccab3*gamma_aa[index]*gcab*t7683*t7686*t7689*1/(t7698*t7698*t7698)*(t7714*t7714) \
                   *2.0)*-4.0+t7771*t7773*t7776*((ccaa1*gcaa*t7685)/t7743-ccaa1*gamma_aa[index]*t7684*t7740*t7780+ccaa2* \
                   gamma_aa[index]*t7684*t7740*t7778*2.0-ccaa2*t7684*t7686*t7740*t7761*t7757-ccaa4*t7688*t7699*t7741* \
                   t7751*t7770+ccaa4*gamma_aa[index]*t7686*t7688*t7741*t7777*4.0+ccaa3*gcaa*t7686*t7689*t7740*t7779*3.0- \
                   ccaa3*gamma_aa[index]*gcaa*t7686*t7689*t7740*t7765*t7758)*(1.0/2.0)+rho_a[index]*t7776*(t7773*(t7771* \
                   (tau_a[index]*2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0)+1.0)*(ccaa1*t7684*t7740* \
                   t7780*2.0-ccaa2*t7684*t7740*t7778*2.0+ccaa2*t7686*t7688*t7741*t7761*2.0-ccaa4*t7686*t7688*t7741*t7777* \
                   1.2E1+ccaa4*t7688*t7699*t7741*t7770*(t7684*t7740*1.2E1+t7686*t7688*t7741*1.2E1+gamma_aa[index]*gcaa* \
                   t7689*t7740*2.4E1)-ccaa1*gamma_aa[index]*gcaa*t7689*t7740*1/(t7743*t7743*t7743)*2.0-ccaa2*t7684*t7686* \
                   t7740*1/(t7746*t7746*t7746)*(t7757*t7757)*2.0-ccaa4*t7688*t7699*t7741*(t7751*t7751)*1/(t7756*t7756* \
                   t7756)*2.0-ccaa3*gamma_aa[index]*gcaa*t7689*t7740*t7779*6.0+ccaa2*gamma_aa[index]*t7684*t7740*t7761* \
                   t7757*4.0+ccaa4*gamma_aa[index]*t7686*t7688*t7741*t7751*t7770*8.0+ccaa3*gcaa*t7686*t7689*t7740*t7765* \
                   t7758*6.0+ccaa3*gamma_aa[index]*gcaa*t7686*t7689*t7740*t7758*(t7684*t7740*6.0+gamma_aa[index]*gcaa* \
                   t7689*t7740*6.0)-ccaa3*gamma_aa[index]*gcaa*t7686*t7689*t7740*1/(t7750*t7750*t7750)*(t7765*t7765)* \
                   2.0)*2.0+1/(k*k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index])*1/pow(t7680,4.0/3.0)*t7781* \
                   1/pow(gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*t7781*t7782*(1.0/4.0)+1.0,3.0)*(X- \
                   1.0)*((a_1*t7785)/t7789+a_2*t7786*1/(t7789*t7789)+a_4*t7787*1/(t7789*t7789*t7789*t7789)+a_8*t7788* \
                   1/(t7789*t7789*t7789*t7789*t7789*t7789*t7789*t7789)+a_10*t7786*t7788*1/pow(t7789,1.0E1)+a_3*t7785* \
                   t7786*1/(t7789*t7789*t7789)+a_5*t7785*t7787*1/(t7789*t7789*t7789*t7789*t7789)+a_6*t7786*t7787*1/(t7789* \
                   t7789*t7789*t7789*t7789*t7789)+a_9*t7785*t7788*1/(t7789*t7789*t7789*t7789*t7789*t7789*t7789*t7789* \
                   t7789)+a_11*t7785*t7786*t7788*1/pow(t7789,1.1E1)+a_7*t7785*t7786*t7787*1/(t7789*t7789*t7789*t7789* \
                   t7789*t7789*t7789)+1.0)*(1.0/4.0);
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t7791 = pow(rho_a[index],5.0/3.0);
                double t7792 = 1/(tau_a[index]*tau_a[index]);
                double t7793 = 1/tau_a[index];
                double t7794 = C_k*t7791*t7793;
                double t7795 = t7794+1.0;
                double t7796 = t7794-1.0;
                double t7797 = 1/(t7795*t7795);
                double t7798 = t7796*t7796;
                double t7799 = t7798*t7798;
                double t7800 = t7799*t7799;
                double t7801 = 1/pow(t7795,1.1E1);
                double t7802 = 1/(t7795*t7795*t7795);
                double t7803 = 1/(t7795*t7795*t7795*t7795);
                double t7804 = 1/(t7795*t7795*t7795*t7795*t7795);
                double t7805 = 1/(t7795*t7795*t7795*t7795*t7795*t7795);
                double t7806 = 1/(t7795*t7795*t7795*t7795*t7795*t7795*t7795);
                double t7807 = 1/(t7795*t7795*t7795*t7795*t7795*t7795*t7795*t7795);
                double t7808 = 1/(t7795*t7795*t7795*t7795*t7795*t7795*t7795*t7795*t7795);
                double t7809 = 1/pow(t7795,1.0E1);
                double t7810 = 1/(k*k);
                double t7811 = 1/kp;
                double t7812 = 1/(rho_a[index]*rho_a[index]);
                double t7813 = rho_a[index]*2.0;
                double t7814 = 1/pow(t7813,2.0/3.0);
                double t7815 = gamma_aa[index]*mu_*t7810*t7811*t7812*t7814*(1.0/4.0);
                double t7816 = t7815+1.0;
                double t7817 = 1/t7816;
                double t7818 = kp-kp*t7817+1.0;
                double t7819 = C_k*C_k;
                double t7820 = pow(rho_a[index],7.0/3.0);
                double t7821 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t7822 = 1/t7795;
                double t7823 = 1/pow(t7795,1.2E1);
                double t7824 = pow(rho_a[index],2.0/3.0);
                double t7825 = C_k*a_1*t7791*t7792*t7822;
                double t7826 = C_k*a_2*t7791*t7792*t7796*t7797*2.0;
                double t7827 = C_k*a_10*t7791*t7792*t7796*t7800*t7809*1.0E1;
                double t7828 = C_k*a_11*t7791*t7792*t7798*t7800*t7801*1.1E1;
                double t7829 = C_k*a_3*t7791*t7792*t7798*t7802*3.0;
                double t7830 = C_k*a_4*t7791*t7792*t7796*t7798*t7803*4.0;
                double t7831 = C_k*a_5*t7791*t7792*t7799*t7804*5.0;
                double t7832 = C_k*a_6*t7791*t7792*t7796*t7799*t7805*6.0;
                double t7833 = C_k*a_7*t7791*t7792*t7798*t7799*t7806*7.0;
                double t7834 = C_k*a_8*t7791*t7792*t7796*t7798*t7799*t7807*8.0;
                double t7835 = C_k*a_9*t7791*t7792*t7800*t7808*9.0;
                double t7836 = t7830+t7831+t7832+t7833+t7825+t7834+t7826+t7835+t7827+t7828+t7829-C_k*a_1*t7791*t7792* \
                   t7796*t7797-C_k*a_2*t7791*t7792*t7798*t7802*2.0-C_k*a_4*t7791*t7792*t7799*t7804*4.0-C_k*a_8*t7791* \
                   t7792*t7800*t7808*8.0-C_k*a_10*t7791*t7792*t7798*t7800*t7801*1.0E1-C_k*a_3*t7791*t7792*t7796*t7798* \
                   t7803*3.0-C_k*a_5*t7791*t7792*t7796*t7799*t7805*5.0-C_k*a_6*t7791*t7792*t7798*t7799*t7806*6.0-C_k* \
                   a_9*t7791*t7792*t7796*t7800*t7809*9.0-C_k*a_11*t7791*t7792*t7796*t7798*t7800*t7823*1.1E1-C_k*a_7*t7791* \
                   t7792*t7796*t7798*t7799*t7807*7.0;
                double t7837 = 1/pow(rho_a[index],1.0/3.0);
                double t7838 = c*t7837;
                double t7839 = sqrt(t7838);
                double t7840 = pow(t7838,3.0/2.0);
                double t7841 = c*c;
                double t7842 = 1/pow(rho_a[index],2.0/3.0);
                double t7843 = 1/c0p;
                double t7844 = b1p*t7839;
                double t7845 = b3p*t7840;
                double t7846 = b4p*t7841*t7842;
                double t7847 = b2p*c*t7837;
                double t7848 = t7844+t7845+t7846+t7847;
                double t7849 = 1/t7848;
                double t7850 = t7843*t7849*(1.0/2.0);
                double t7851 = t7850+1.0;
                double t7852 = log(t7851);
                double t7853 = a1p*c*t7837;
                double t7854 = t7853+1.0;
                double t7855 = tau_a[index]-1.0/1.0E20;
                double t7856 = tau_a[index]*2.0;
                double t7857 = 1/rho_a[index];
                double t7888 = gamma_aa[index]*t7857*(1.0/4.0);
                double t7858 = t7856-t7888;
                double t7859 = gamma_aa[index]*gamma_aa[index];
                double t7860 = gcaa*gcaa;
                double t7861 = t7859*t7859;
                double t7862 = t7860*t7860;
                double t7863 = 1/pow(rho_a[index],3.2E1/3.0);
                double t7864 = 1/pow(rho_a[index],8.0/3.0);
                double t7865 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t7866 = 1/pow(rho_a[index],1.6E1/3.0);
                double t7867 = pow(2.0,1.0/3.0);
                double t7868 = t7867*2.0;
                double t7869 = t7868-2.0;
                double t7870 = two_13*2.0;
                double t7871 = t7870-2.0;
                double t7872 = 1/t7871;
                double t7873 = 1/c0f;
                double t7874 = b1f*t7839;
                double t7875 = b3f*t7840;
                double t7876 = b4f*t7841*t7842;
                double t7877 = b2f*c*t7837;
                double t7878 = t7874+t7875+t7876+t7877;
                double t7879 = 1/t7878;
                double t7880 = t7873*t7879*(1.0/2.0);
                double t7881 = t7880+1.0;
                double t7882 = log(t7881);
                double t7883 = a1f*c*t7837;
                double t7884 = t7883+1.0;
                double t7885 = c0f*t7882*t7884*2.0;
                double t7886 = c0p*t7852*t7854*2.0;
                double t7887 = ( (t7855 > 0.0) ?  1.0 : 0.0 ) ;
                double t7918 = t7792*t7858*(1.0/2.0);
                double t7889 = t7793-t7918;
                double t7890 = t7887*t7889;
                double t7891 = 0.0 ;
                double t7892 = t7793*t7858*(1.0/2.0);
                double t7893 = t7892-1.0;
                double t7894 = t7891*t7893;
                double t7895 = t7890+t7894;
                double t7896 = gamma_aa[index]*gcaa*t7864*4.0;
                double t7897 = gamma_aa[index]*gcaa*t7860*t7865*t7859*4.0;
                double t7898 = t7860*t7866*t7859*6.0;
                double t7899 = t7861*t7862*t7863;
                double t7900 = t7896+t7897+t7898+t7899+1.0;
                double t7901 = 1/t7900;
                double t7902 = gamma_aa[index]*gcaa*t7864;
                double t7903 = t7902+1.0;
                double t7904 = 1/t7903;
                double t7905 = gamma_aa[index]*gcaa*t7864*3.0;
                double t7906 = gamma_aa[index]*gcaa*t7860*t7865*t7859;
                double t7907 = t7860*t7866*t7859*3.0;
                double t7908 = t7905+t7906+t7907+1.0;
                double t7909 = 1/t7908;
                double t7910 = gamma_aa[index]*gcaa*t7864*2.0;
                double t7911 = t7860*t7866*t7859;
                double t7912 = t7910+t7911+1.0;
                double t7913 = 1/t7912;
                double t7914 = 1/pow(rho_a[index],1.9E1/3.0);
                double t7915 = 1/pow(rho_a[index],1.1E1/3.0);
                double t7916 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t7917 = 1/pow(rho_a[index],3.5E1/3.0);
                double t7919 = 1/pow(rho_a[index],4.0/3.0);
                double t7920 = 1/pow(rho_a[index],5.0/3.0);
                double t7921 = 1/sqrt(t7838);
                double t7922 = 1/t7851;
                double t7923 = 1/(t7848*t7848);
                double t7924 = b4p*t7841*t7920*(2.0/3.0);
                double t7925 = b2p*c*t7919*(1.0/3.0);
                double t7926 = b1p*c*t7921*t7919*(1.0/6.0);
                double t7927 = b3p*c*t7839*t7919*(1.0/2.0);
                double t7928 = t7924+t7925+t7926+t7927;
                double t7929 = t7854*t7922*t7923*t7928;
                double t7930 = ccaa4*t7861*t7862*t7863*t7901;
                double t7931 = ccaa1*gamma_aa[index]*gcaa*t7864*t7904;
                double t7932 = ccaa3*gamma_aa[index]*gcaa*t7860*t7865*t7859*t7909;
                double t7933 = ccaa2*t7860*t7866*t7859*t7913;
                double t7934 = ccaa0+t7930+t7931+t7932+t7933;
                double t7935 = t7885-t7886;
                double t7936 = t7872*t7869*t7935;
                double t7937 = t7886+t7936;
                v_rho_a_tau_a_[index] = (X-1.0)*(t7818*t7836+rho_a[index]*t7818*(C_k*a_1*t7792*t7822*t7824*(5.0/3.0) \
                   -a_1*t7797*t7820*t7821*t7819*(1.0E1/3.0)+a_2*t7797*t7820*t7821*t7819*(1.0E1/3.0)+a_1*t7796*t7802*t7820* \
                   t7821*t7819*(1.0E1/3.0)-a_2*t7796*t7802*t7820*t7821*t7819*(4.0E1/3.0)+a_2*t7798*t7820*t7803*t7821* \
                   t7819*1.0E1+a_10*t7800*t7820*t7821*t7809*t7819*1.5E2+a_3*t7796*t7802*t7820*t7821*t7819*1.0E1-a_3*t7798* \
                   t7820*t7803*t7821*t7819*3.0E1+a_4*t7798*t7820*t7803*t7821*t7819*2.0E1+a_4*t7799*t7820*t7821*t7805* \
                   t7819*(1.0E2/3.0)-a_5*t7799*t7820*t7821*t7805*t7819*(2.5E2/3.0)+a_6*t7799*t7820*t7821*t7805*t7819* \
                   5.0E1+a_8*t7800*t7820*t7821*t7809*t7819*1.2E2-a_9*t7800*t7820*t7821*t7809*t7819*2.7E2-C_k*a_1*t7792* \
                   t7796*t7797*t7824*(5.0/3.0)+C_k*a_2*t7792*t7796*t7797*t7824*(1.0E1/3.0)-C_k*a_2*t7792*t7798*t7802* \
                   t7824*(1.0E1/3.0)+C_k*a_3*t7792*t7798*t7802*t7824*5.0-C_k*a_4*t7792*t7799*t7804*t7824*(2.0E1/3.0)+ \
                   C_k*a_5*t7792*t7799*t7804*t7824*(2.5E1/3.0)-C_k*a_8*t7792*t7800*t7824*t7808*(4.0E1/3.0)+C_k*a_9*t7792* \
                   t7800*t7824*t7808*1.5E1-C_k*a_10*t7792*t7798*t7800*t7801*t7824*(5.0E1/3.0)+C_k*a_11*t7792*t7798*t7800* \
                   t7801*t7824*(5.5E1/3.0)+C_k*a_10*t7792*t7796*t7800*t7824*t7809*(5.0E1/3.0)-C_k*a_3*t7792*t7796*t7798* \
                   t7803*t7824*5.0+C_k*a_4*t7792*t7796*t7798*t7803*t7824*(2.0E1/3.0)-C_k*a_5*t7792*t7796*t7799*t7805* \
                   t7824*(2.5E1/3.0)+C_k*a_6*t7792*t7796*t7799*t7805*t7824*1.0E1-C_k*a_6*t7792*t7798*t7799*t7806*t7824* \
                   1.0E1+C_k*a_7*t7792*t7798*t7799*t7806*t7824*(3.5E1/3.0)-C_k*a_9*t7792*t7796*t7800*t7824*t7809*1.5E1- \
                   a_10*t7796*t7800*t7801*t7820*t7821*t7819*(1.0E3/3.0)+a_11*t7796*t7800*t7801*t7820*t7821*t7819*(5.5E2/ \
                   3.0)+a_10*t7798*t7800*t7820*t7821*t7823*t7819*(5.5E2/3.0)-a_11*t7798*t7800*t7820*t7821*t7823*t7819* \
                   (1.21E3/3.0)+a_3*t7796*t7798*t7820*t7821*t7804*t7819*2.0E1-a_4*t7796*t7798*t7820*t7821*t7804*t7819* \
                   (1.6E2/3.0)+a_5*t7796*t7798*t7820*t7821*t7804*t7819*(1.0E2/3.0)+a_5*t7796*t7799*t7820*t7821*t7806* \
                   t7819*5.0E1-a_6*t7796*t7799*t7820*t7821*t7806*t7819*1.2E2+a_6*t7798*t7799*t7820*t7821*t7807*t7819* \
                   7.0E1+a_7*t7796*t7799*t7820*t7821*t7806*t7819*7.0E1-a_7*t7798*t7799*t7820*t7821*t7807*t7819*(4.9E2/ \
                   3.0)+a_8*t7798*t7799*t7820*t7821*t7807*t7819*(2.8E2/3.0)+a_9*t7796*t7800*t7801*t7820*t7821*t7819*1.5E2+ \
                   a_11*1/pow(t7795,1.3E1)*t7796*t7798*t7800*t7820*t7821*t7819*2.2E2-C_k*a_11*t7792*t7796*t7798*t7800* \
                   t7823*t7824*(5.5E1/3.0)-C_k*a_7*t7792*t7796*t7798*t7799*t7824*t7807*(3.5E1/3.0)+C_k*a_8*t7792*t7796* \
                   t7798*t7799*t7824*t7807*(4.0E1/3.0)+a_7*t7796*t7798*t7799*t7820*t7821*t7808*t7819*(2.8E2/3.0)-a_8* \
                   t7796*t7798*t7799*t7820*t7821*t7808*t7819*(6.4E2/3.0)+a_9*t7796*t7798*t7799*t7820*t7821*t7808*t7819* \
                   1.2E2)-kp*rho_a[index]*1/(t7816*t7816)*t7836*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]) \
                   *t7810*t7811*t7814*(1.0/2.0)+gamma_aa[index]*mu_*t7810*t7811*t7812*1/pow(t7813,5.0/3.0)*(1.0/3.0)) \
                   )-t7895*t7934*(t7886+t7872*t7869*(t7885-c0p*t7852*t7854*2.0))+rho_a[index]*t7895*t7934*(-t7929+t7872* \
                   t7869*(t7929-(t7884*1/(t7878*t7878)*(b2f*c*t7919*(1.0/3.0)+b4f*t7841*t7920*(2.0/3.0)+b1f*c*t7921*t7919* \
                   (1.0/6.0)+b3f*c*t7839*t7919*(1.0/2.0)))/t7881+a1f*c*c0f*t7882*t7919*(2.0/3.0)-a1p*c*c0p*t7852*t7919* \
                   (2.0/3.0))+a1p*c*c0p*t7852*t7919*(2.0/3.0))+rho_a[index]*t7895*t7937*(ccaa1*gamma_aa[index]*gcaa*t7904* \
                   t7915*(8.0/3.0)+ccaa4*t7861*t7862*t7901*t7917*(3.2E1/3.0)+ccaa2*t7860*t7859*t7913*t7914*(1.6E1/3.0) \
                   -ccaa1*t7860*t7859*1/(t7903*t7903)*t7914*(8.0/3.0)-ccaa2*t7860*t7866*t7859*1/(t7912*t7912)*(gamma_aa[index]* \
                   gcaa*t7915*(1.6E1/3.0)+t7860*t7859*t7914*(1.6E1/3.0))-ccaa4*t7861*t7862*t7863*1/(t7900*t7900)*(gamma_aa[index]* \
                   gcaa*t7915*(3.2E1/3.0)+t7861*t7862*t7917*(3.2E1/3.0)+t7860*t7859*t7914*3.2E1+gamma_aa[index]*gcaa* \
                   t7860*t7859*t7916*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t7860*t7859*t7916*t7909*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*t7860*t7865*t7859*1/(t7908*t7908)*(gamma_aa[index]*gcaa*t7915*8.0+t7860*t7859*t7914*1.6E1+gamma_aa[index]* \
                   gcaa*t7860*t7859*t7916*8.0))-gamma_aa[index]*t7793*t7891*t7857*t7934*t7937*(1.0/8.0)+gamma_aa[index]* \
                   t7792*t7857*t7887*t7934*t7937*(1.0/8.0);
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t7939 = 1/pow(rho_a[index],1.0/3.0);
                double t7940 = c*t7939;
                double t7941 = sqrt(t7940);
                double t7942 = pow(t7940,3.0/2.0);
                double t7943 = c*c;
                double t7944 = 1/pow(rho_a[index],2.0/3.0);
                double t7945 = 1/c0p;
                double t7946 = b1p*t7941;
                double t7947 = b3p*t7942;
                double t7948 = b4p*t7943*t7944;
                double t7949 = b2p*c*t7939;
                double t7950 = t7946+t7947+t7948+t7949;
                double t7951 = 1/t7950;
                double t7952 = t7951*t7945*(1.0/2.0);
                double t7953 = t7952+1.0;
                double t7954 = log(t7953);
                double t7955 = a1p*c*t7939;
                double t7956 = t7955+1.0;
                double t7957 = 1/tau_a[index];
                double t7958 = tau_a[index]*2.0;
                double t7959 = 1/rho_a[index];
                double t7963 = gamma_aa[index]*t7959*(1.0/4.0);
                double t7960 = -t7963+t7958;
                double t7961 = tau_a[index]-1.0/1.0E20;
                double t7962 = 1/(tau_a[index]*tau_a[index]);
                double t7964 = gamma_aa[index]*gamma_aa[index];
                double t7965 = gcaa*gcaa;
                double t7966 = t7964*t7964;
                double t7967 = t7965*t7965;
                double t7968 = 1/pow(rho_a[index],3.2E1/3.0);
                double t7969 = 1/pow(rho_a[index],8.0/3.0);
                double t7970 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t7971 = 1/pow(rho_a[index],1.6E1/3.0);
                double t7972 = C_k*C_k;
                double t7973 = pow(rho_a[index],1.0E1/3.0);
                double t7974 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t7975 = pow(rho_a[index],5.0/3.0);
                double t7976 = C_k*t7957*t7975;
                double t7977 = t7976+1.0;
                double t7978 = 1/(t7977*t7977);
                double t7979 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t7980 = t7976-1.0;
                double t7981 = t7980*t7980;
                double t7982 = t7981*t7981;
                double t7983 = t7982*t7982;
                double t7984 = 1/pow(t7977,1.1E1);
                double t7985 = 1/pow(t7977,1.2E1);
                double t7986 = 1/(t7977*t7977*t7977*t7977);
                double t7987 = 1/(t7977*t7977*t7977*t7977*t7977);
                double t7988 = 1/(t7977*t7977*t7977*t7977*t7977*t7977);
                double t7989 = 1/(t7977*t7977*t7977*t7977*t7977*t7977*t7977);
                double t7990 = 1/(t7977*t7977*t7977*t7977*t7977*t7977*t7977*t7977);
                double t7991 = 1/(t7977*t7977*t7977*t7977*t7977*t7977*t7977*t7977*t7977);
                double t7992 = 1/pow(t7977,1.0E1);
                double t7993 = 1/(t7977*t7977*t7977);
                v_tau_a_tau_a_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t7972*t7973*t7974*t7978* \
                   -2.0+a_2*t7972*t7973*t7974*t7978*2.0+(C_k*a_1*t7975*t7979*2.0)/t7977+a_1*t7980*t7972*t7973*t7974*t7993* \
                   2.0+a_10*t7972*t7973*t7974*t7983*t7992*9.0E1-a_2*t7980*t7972*t7973*t7974*t7993*8.0+a_2*t7972*t7981* \
                   t7973*t7974*t7986*6.0+a_3*t7980*t7972*t7973*t7974*t7993*6.0-a_3*t7972*t7981*t7973*t7974*t7986*1.8E1+ \
                   a_4*t7972*t7981*t7973*t7974*t7986*1.2E1+a_4*t7972*t7973*t7982*t7974*t7988*2.0E1-a_5*t7972*t7973*t7982* \
                   t7974*t7988*5.0E1+a_6*t7972*t7973*t7982*t7974*t7988*3.0E1+a_8*t7972*t7973*t7974*t7983*t7992*7.2E1- \
                   a_9*t7972*t7973*t7974*t7983*t7992*1.62E2-C_k*a_1*t7980*t7975*t7978*t7979*2.0-C_k*a_2*t7981*t7975*t7993* \
                   t7979*4.0+C_k*a_2*t7980*t7975*t7978*t7979*4.0+C_k*a_3*t7981*t7975*t7993*t7979*6.0-C_k*a_4*t7982*t7975* \
                   t7987*t7979*8.0+C_k*a_5*t7982*t7975*t7987*t7979*1.0E1-C_k*a_8*t7991*t7983*t7975*t7979*1.6E1+C_k*a_9* \
                   t7991*t7983*t7975*t7979*1.8E1+C_k*a_10*t7980*t7983*t7992*t7975*t7979*2.0E1-C_k*a_10*t7981*t7983*t7975* \
                   t7984*t7979*2.0E1+C_k*a_11*t7981*t7983*t7975*t7984*t7979*2.2E1-C_k*a_3*t7980*t7981*t7975*t7986*t7979* \
                   6.0+C_k*a_4*t7980*t7981*t7975*t7986*t7979*8.0-C_k*a_5*t7980*t7982*t7975*t7979*t7988*1.0E1+C_k*a_6* \
                   t7980*t7982*t7975*t7979*t7988*1.2E1-C_k*a_6*t7981*t7982*t7975*t7979*t7989*1.2E1+C_k*a_7*t7981*t7982* \
                   t7975*t7979*t7989*1.4E1-C_k*a_9*t7980*t7983*t7992*t7975*t7979*1.8E1-a_10*t7980*t7972*t7973*t7974*t7983* \
                   t7984*2.0E2+a_11*t7980*t7972*t7973*t7974*t7983*t7984*1.1E2+a_10*t7972*t7981*t7973*t7974*t7983*t7985* \
                   1.1E2-a_11*t7972*t7981*t7973*t7974*t7983*t7985*2.42E2+a_3*t7980*t7972*t7981*t7973*t7974*t7987*1.2E1- \
                   a_4*t7980*t7972*t7981*t7973*t7974*t7987*3.2E1+a_5*t7980*t7972*t7981*t7973*t7974*t7987*2.0E1+a_5*t7980* \
                   t7972*t7973*t7982*t7974*t7989*3.0E1+a_6*t7972*t7981*t7990*t7973*t7982*t7974*4.2E1-a_6*t7980*t7972* \
                   t7973*t7982*t7974*t7989*7.2E1-a_7*t7972*t7981*t7990*t7973*t7982*t7974*9.8E1+a_7*t7980*t7972*t7973* \
                   t7982*t7974*t7989*4.2E1+a_8*t7972*t7981*t7990*t7973*t7982*t7974*5.6E1+a_9*t7980*t7972*t7973*t7974* \
                   t7983*t7984*9.0E1+a_11*t7980*t7972*t7981*t7973*t7974*t7983*1/pow(t7977,1.3E1)*1.32E2-C_k*a_11*t7980* \
                   t7981*t7983*t7975*t7985*t7979*2.2E1-C_k*a_7*t7980*t7981*t7990*t7982*t7975*t7979*1.4E1+C_k*a_8*t7980* \
                   t7981*t7990*t7982*t7975*t7979*1.6E1+a_7*t7980*t7972*t7981*t7973*t7982*t7991*t7974*5.6E1-a_8*t7980* \
                   t7972*t7981*t7973*t7982*t7991*t7974*1.28E2+a_9*t7980*t7972*t7981*t7973*t7982*t7991*t7974*7.2E1)-rho_a[index]* \
                   (((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t7941+b3f*t7942+b2f*c*t7939+b4f*t7943*t7944) \
                   )+1.0)*(a1f*c*t7939+1.0)*2.0-c0p*t7954*t7956*2.0))/(two_13*2.0-2.0)+c0p*t7954*t7956*2.0)*( 0.0 - (  \
                   (t7961 > 0.0) ? 1.0*(t7962*2.0-t7960*t7979) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t7971*t7964*t7965)/(gamma_aa[index]* \
                   gcaa*t7969*2.0+t7971*t7964*t7965+1.0)+(ccaa1*gamma_aa[index]*gcaa*t7969)/(gamma_aa[index]*gcaa*t7969+ \
                   1.0)+(ccaa4*t7966*t7967*t7968)/(gamma_aa[index]*gcaa*t7969*4.0+t7971*t7964*t7965*6.0+t7966*t7967*t7968+ \
                   gamma_aa[index]*gcaa*t7970*t7964*t7965*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t7970*t7964*t7965)/(gamma_aa[index]* \
                   gcaa*t7969*3.0+t7971*t7964*t7965*3.0+gamma_aa[index]*gcaa*t7970*t7964*t7965+1.0));
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    double t7995 = 1/pow(rho_a[index],1.0/3.0);
                    double t7996 = c*t7995;
                    double t7997 = sqrt(t7996);
                    double t7998 = pow(t7996,3.0/2.0);
                    double t7999 = c*c;
                    double t8000 = 1/pow(rho_a[index],2.0/3.0);
                    double t8001 = 1/c0p;
                    double t8002 = b1p*t7997;
                    double t8003 = b3p*t7998;
                    double t8004 = b4p*t7999*t8000;
                    double t8005 = b2p*c*t7995;
                    double t8006 = t8002+t8003+t8004+t8005;
                    double t8007 = 1/t8006;
                    double t8008 = t8001*t8007*(1.0/2.0);
                    double t8009 = t8008+1.0;
                    double t8010 = log(t8009);
                    double t8011 = a1p*c*t7995;
                    double t8012 = t8011+1.0;
                    double t8013 = tau_a[index]-1.0/1.0E20;
                    double t8014 = 1/tau_a[index];
                    double t8015 = tau_a[index]*2.0;
                    double t8016 = 1/rho_a[index];
                    double t8017 = t8015-gamma_aa[index]*t8016*(1.0/4.0);
                    double t8018 = 1/pow(rho_a[index],8.0/3.0);
                    double t8019 = gamma_aa[index]*gamma_aa[index];
                    double t8020 = gcaa*gcaa;
                    double t8021 = t8020*t8020;
                    double t8022 = 1/pow(rho_a[index],3.2E1/3.0);
                    double t8023 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t8024 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]);
                    double t8025 = gamma_aa[index]*gcaa*t8018;
                    double t8026 = t8025+1.0;
                    double t8027 = gamma_aa[index]*gcaa*t8018*3.0;
                    double t8028 = gamma_aa[index]*gcaa*t8020*t8024*t8019;
                    double t8029 = t8020*t8023*t8019*3.0;
                    double t8030 = t8027+t8028+t8029+1.0;
                    double t8031 = t8019*t8019;
                    double t8032 = gamma_aa[index]*gcaa*t8018*4.0;
                    double t8033 = gamma_aa[index]*gcaa*t8020*t8024*t8019*4.0;
                    double t8034 = t8020*t8023*t8019*6.0;
                    double t8035 = t8021*t8022*t8031;
                    double t8036 = t8032+t8033+t8034+t8035+1.0;
                    double t8037 = gamma_aa[index]*gcaa*t8018*2.0;
                    double t8038 = t8020*t8023*t8019;
                    double t8039 = t8037+t8038+1.0;
                    double t8040 = pow(2.0,1.0/3.0);
                    double t8041 = t8040*2.0;
                    double t8042 = t8041-2.0;
                    double t8043 = two_13*2.0;
                    double t8044 = t8043-2.0;
                    double t8045 = 1/t8044;
                    double t8046 = 1/c0f;
                    double t8047 = b1f*t7997;
                    double t8048 = b3f*t7998;
                    double t8049 = b4f*t7999*t8000;
                    double t8050 = b2f*c*t7995;
                    double t8051 = t8050+t8047+t8048+t8049;
                    double t8052 = 1/t8051;
                    double t8053 = t8052*t8046*(1.0/2.0);
                    double t8054 = t8053+1.0;
                    double t8055 = log(t8054);
                    double t8056 = a1f*c*t7995;
                    double t8057 = t8056+1.0;
                    double t8058 = c0f*t8055*t8057*2.0;
                    double t8059 = c0p*t8010*t8012*2.0;
                    double t8060 = 0.0 ;
                    double t8061 = 1/(tau_a[index]*tau_a[index]);
                    double t8062 = ( (t8013 > 0.0) ?  1.0 : 0.0 ) ;
                    double t8063 = 1/t8036;
                    double t8064 = 1/t8026;
                    double t8065 = 1/t8030;
                    double t8066 = 1/t8039;
                    double t8067 = 1/(k*k);
                    double t8068 = rho_a[index]*2.0;
                    double t8069 = 1/pow(t8068,2.0/3.0);
                    double t8070 = pow(rho_a[index],5.0/3.0);
                    double t8071 = C_k*t8014*t8070;
                    double t8072 = t8071+1.0;
                    double t8073 = t8071-1.0;
                    double t8074 = 1/(t8072*t8072);
                    double t8075 = t8073*t8073;
                    double t8076 = t8075*t8075;
                    double t8077 = t8076*t8076;
                    double t8078 = 1/pow(t8072,1.1E1);
                    double t8079 = 1/(t8072*t8072*t8072);
                    double t8080 = 1/(t8072*t8072*t8072*t8072);
                    double t8081 = 1/(t8072*t8072*t8072*t8072*t8072);
                    double t8082 = 1/(t8072*t8072*t8072*t8072*t8072*t8072);
                    double t8083 = 1/(t8072*t8072*t8072*t8072*t8072*t8072*t8072);
                    double t8084 = 1/(t8072*t8072*t8072*t8072*t8072*t8072*t8072*t8072);
                    double t8085 = 1/(t8072*t8072*t8072*t8072*t8072*t8072*t8072*t8072*t8072);
                    double t8086 = 1/pow(t8072,1.0E1);
                    v_gamma_aa_tau_a_[index] = rho_a[index]*(t8059+t8042*t8045*(t8058-t8059))*(t8014*t8060*t8016*(1.0/ \
                       8.0)-t8016*t8061*t8062*(1.0/8.0))*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t8018*t8064+ccaa4*t8021*t8022* \
                       t8031*t8063+ccaa2*t8020*t8023*t8019*t8066+ccaa3*gamma_aa[index]*gcaa*t8020*t8024*t8019*t8065)-rho_a[index]* \
                       (t8059+t8042*t8045*(t8058-c0p*t8010*t8012*2.0))*(t8060*(t8014*t8017*(1.0/2.0)-1.0)+t8062*(t8014-t8061* \
                       t8017*(1.0/2.0)))*(ccaa1*gcaa*t8018*t8064+ccaa2*gamma_aa[index]*t8020*t8023*t8066*2.0-ccaa1*gamma_aa[index]* \
                       t8020*t8023*1/(t8026*t8026)-ccaa2*t8020*t8023*t8019*1/(t8039*t8039)*(gcaa*t8018*2.0+gamma_aa[index]* \
                       t8020*t8023*2.0)-ccaa4*t8021*t8022*t8031*1/(t8036*t8036)*(gcaa*t8018*4.0+gamma_aa[index]*t8020*t8023* \
                       1.2E1+gamma_aa[index]*t8021*t8022*t8019*4.0+gcaa*t8020*t8024*t8019*1.2E1)+ccaa4*gamma_aa[index]*t8021* \
                       t8022*t8063*t8019*4.0+ccaa3*gcaa*t8020*t8024*t8019*t8065*3.0-ccaa3*gamma_aa[index]*gcaa*t8020*1/(t8030* \
                       t8030)*t8024*t8019*(gcaa*t8018*3.0+gamma_aa[index]*t8020*t8023*6.0+gcaa*t8020*t8024*t8019*3.0))+mu_* \
                       t8016*t8067*t8069*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t8067*t8069*(1.0/4.0))/ \
                       kp+1.0,2.0)*(X-1.0)*((C_k*a_1*t8061*t8070)/t8072-C_k*a_1*t8061*t8070*t8073*t8074+C_k*a_2*t8061*t8070* \
                       t8073*t8074*2.0-C_k*a_2*t8061*t8070*t8075*t8079*2.0+C_k*a_3*t8061*t8070*t8075*t8079*3.0-C_k*a_4*t8061* \
                       t8070*t8081*t8076*4.0+C_k*a_5*t8061*t8070*t8081*t8076*5.0-C_k*a_8*t8061*t8070*t8085*t8077*8.0+C_k* \
                       a_9*t8061*t8070*t8085*t8077*9.0+C_k*a_10*t8061*t8070*t8073*t8077*t8086*1.0E1-C_k*a_10*t8061*t8070* \
                       t8075*t8077*t8078*1.0E1+C_k*a_11*t8061*t8070*t8075*t8077*t8078*1.1E1-C_k*a_3*t8061*t8070*t8080*t8073* \
                       t8075*3.0+C_k*a_4*t8061*t8070*t8080*t8073*t8075*4.0-C_k*a_5*t8061*t8070*t8073*t8082*t8076*5.0+C_k* \
                       a_6*t8061*t8070*t8073*t8082*t8076*6.0-C_k*a_6*t8061*t8070*t8083*t8075*t8076*6.0+C_k*a_7*t8061*t8070* \
                       t8083*t8075*t8076*7.0-C_k*a_9*t8061*t8070*t8073*t8077*t8086*9.0-C_k*a_11*t8061*t8070*1/pow(t8072,1.2E1) \
                       *t8073*t8075*t8077*1.1E1-C_k*a_7*t8061*t8070*t8073*t8075*t8084*t8076*7.0+C_k*a_8*t8061*t8070*t8073* \
                       t8075*t8084*t8076*8.0)*(1.0/4.0);
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void M05_Functional::computeUKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double k = params_[2].second;
    double e = params_[3].second;
    double kp = params_[4].second;
    double mu_ = params_[5].second;
    double a_1 = params_[6].second;
    double a_2 = params_[7].second;
    double a_3 = params_[8].second;
    double a_4 = params_[9].second;
    double a_5 = params_[10].second;
    double a_6 = params_[11].second;
    double a_7 = params_[12].second;
    double a_8 = params_[13].second;
    double a_9 = params_[14].second;
    double a_10 = params_[15].second;
    double a_11 = params_[16].second;
    double two_13 = params_[17].second;
    double d2fz0 = params_[18].second;
    double c = params_[19].second;
    double Aa = params_[20].second;
    double a1a = params_[21].second;
    double b1a = params_[22].second;
    double b2a = params_[23].second;
    double b3a = params_[24].second;
    double b4a = params_[25].second;
    double c0p = params_[26].second;
    double a1p = params_[27].second;
    double b1p = params_[28].second;
    double b2p = params_[29].second;
    double b3p = params_[30].second;
    double b4p = params_[31].second;
    double c0f = params_[32].second;
    double a1f = params_[33].second;
    double b1f = params_[34].second;
    double b2f = params_[35].second;
    double b3f = params_[36].second;
    double b4f = params_[37].second;
    double gcab = params_[38].second;
    double gcaa = params_[39].second;
    double ccab0 = params_[40].second;
    double ccab1 = params_[41].second;
    double ccab2 = params_[42].second;
    double ccab3 = params_[43].second;
    double ccab4 = params_[44].second;
    double ccaa0 = params_[45].second;
    double ccaa1 = params_[46].second;
    double ccaa2 = params_[47].second;
    double ccaa3 = params_[48].second;
    double ccaa4 = params_[49].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t2 = pow(rho_a[index],5.0/3.0);
            double t3 = 1/tau_a[index];
            double t4 = C_k*t2*t3;
            double t5 = t4-1.0;
            double t6 = t5*t5;
            double t7 = t6*t6;
            double t8 = t7*t7;
            double t9 = t4+1.0;
            double t10 = 1/(k*k);
            double t11 = 1/kp;
            double t12 = pow(rho_b[index],5.0/3.0);
            double t13 = 1/tau_b[index];
            double t14 = C_k*t12*t13;
            double t15 = t14-1.0;
            double t16 = t15*t15;
            double t17 = t16*t16;
            double t18 = t17*t17;
            double t19 = t14+1.0;
            double t20 = 1/pow(rho_a[index],1.0/3.0);
            double t21 = c*t20;
            double t22 = sqrt(t21);
            double t23 = pow(t21,3.0/2.0);
            double t24 = c*c;
            double t25 = 1/pow(rho_a[index],2.0/3.0);
            double t26 = 1/c0p;
            double t27 = b1p*t22;
            double t28 = b3p*t23;
            double t29 = b4p*t24*t25;
            double t30 = b2p*c*t20;
            double t31 = t27+t28+t29+t30;
            double t32 = 1/t31;
            double t33 = t26*t32*(1.0/2.0);
            double t34 = t33+1.0;
            double t35 = log(t34);
            double t36 = a1p*c*t20;
            double t37 = t36+1.0;
            double t38 = pow(2.0,1.0/3.0);
            double t39 = t38*2.0;
            double t40 = t39-2.0;
            double t41 = two_13*2.0;
            double t42 = t41-2.0;
            double t43 = 1/t42;
            double t44 = 1/c0f;
            double t45 = 1/pow(rho_b[index],1.0/3.0);
            double t46 = c*t45;
            double t47 = sqrt(t46);
            double t48 = pow(t46,3.0/2.0);
            double t49 = 1/pow(rho_b[index],2.0/3.0);
            double t50 = b1p*t47;
            double t51 = b3p*t48;
            double t52 = b4p*t24*t49;
            double t53 = b2p*c*t45;
            double t54 = t50+t51+t52+t53;
            double t55 = 1/t54;
            double t56 = t26*t55*(1.0/2.0);
            double t57 = t56+1.0;
            double t58 = log(t57);
            double t59 = a1p*c*t45;
            double t60 = t59+1.0;
            double t61 = c0p*t58*t60*2.0;
            double t62 = rho_a[index]+rho_b[index];
            double t63 = 1/pow(t62,1.0/3.0);
            double t64 = c*t63;
            double t65 = sqrt(t64);
            double t66 = pow(t64,3.0/2.0);
            double t67 = 1/pow(t62,2.0/3.0);
            double t68 = b1p*t65;
            double t69 = b3p*t66;
            double t70 = b4p*t24*t67;
            double t71 = b2p*c*t63;
            double t72 = t68+t69+t70+t71;
            double t73 = 1/t72;
            double t74 = t26*t73*(1.0/2.0);
            double t75 = t74+1.0;
            double t76 = log(t75);
            double t77 = a1p*c*t63;
            double t78 = t77+1.0;
            double t79 = c0p*t76*t78*2.0;
            double t80 = rho_a[index]-rho_b[index];
            double t81 = t80*t80;
            double t82 = 1/t62;
            double t83 = t80*t82;
            double t84 = 1/(t62*t62*t62*t62);
            double t85 = t81*t81;
            double t86 = t83+1.0;
            double t87 = pow(t86,4.0/3.0);
            double t88 = -t83+1.0;
            double t89 = pow(t88,4.0/3.0);
            double t90 = t87+t89-2.0;
            double t93 = 1/pow(rho_a[index],8.0/3.0);
            double t94 = gamma_aa[index]*t93*(1.0/2.0);
            double t95 = 1/pow(rho_b[index],8.0/3.0);
            double t96 = gamma_bb[index]*t95*(1.0/2.0);
            double t91 = t94+t96;
            double t92 = gcab*gcab;
            double t97 = t91*t91;
            double t98 = t92*t92;
            double t99 = t97*t97;
            double t100 = c0p*t35*t37*2.0;
            double t101 = b1f*t22;
            double t102 = b3f*t23;
            double t103 = b4f*t24*t25;
            double t104 = b2f*c*t20;
            double t105 = t101+t102+t103+t104;
            double t106 = 1/t105;
            double t107 = t106*t44*(1.0/2.0);
            double t108 = t107+1.0;
            double t109 = log(t108);
            double t110 = a1f*c*t20;
            double t111 = t110+1.0;
            double t112 = t100-c0f*t109*t111*2.0;
            double t113 = t100-t112*t40*t43;
            double t114 = gamma_aa[index]*gamma_aa[index];
            double t115 = gcaa*gcaa;
            double t116 = t114*t114;
            double t117 = t115*t115;
            double t118 = 1/pow(rho_a[index],3.2E1/3.0);
            double t119 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t120 = 1/pow(rho_a[index],1.6E1/3.0);
            double t121 = b1f*t47;
            double t122 = b3f*t48;
            double t123 = b4f*t24*t49;
            double t124 = b2f*c*t45;
            double t125 = t121+t122+t123+t124;
            double t126 = 1/t125;
            double t127 = t126*t44*(1.0/2.0);
            double t128 = t127+1.0;
            double t129 = log(t128);
            double t130 = a1f*c*t45;
            double t131 = t130+1.0;
            double t132 = t61-c0f*t129*t131*2.0;
            double t133 = t61-t132*t40*t43;
            double t134 = gamma_bb[index]*gamma_bb[index];
            double t135 = t134*t134;
            double t136 = 1/pow(rho_b[index],3.2E1/3.0);
            double t137 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t138 = 1/pow(rho_b[index],1.6E1/3.0);
            functional_[index] = (rho_a[index]*t113+rho_b[index]*t133-t62*(t79-t43*t84*t85*t90*(t79-c0f*log((t44* \
               (1.0/2.0))/(b1f*t65+b3f*t66+b2f*c*t63+b4f*t24*t67)+1.0)*(a1f*c*t63+1.0)*2.0)+(Aa*t43*t90*log((1.0/ \
               2.0)/(Aa*(b1a*t65+b3a*t66+b2a*c*t63+b4a*t24*t67))+1.0)*(t84*t85-1.0)*(a1a*c*t63+1.0)*2.0)/d2fz0))* \
               (ccab0+(ccab4*t98*t99)/(gcab*t91*4.0+t92*t97*6.0+t98*t99+gcab*t91*t92*t97*4.0+1.0)+(ccab1*gcab*t91) \
               /(gcab*t91+1.0)+(ccab2*t92*t97)/(gcab*t91*2.0+t92*t97+1.0)+(ccab3*gcab*t91*t92*t97)/(gcab*t91*3.0+ \
               t92*t97*3.0+gcab*t91*t92*t97+1.0))-(rho_b[index]*(kp-kp/(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]) \
               *t10*t11*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0)+1.0)+1.0)*((a_1*t15)/t19+a_2*t16*1/(t19*t19)+a_4* \
               t17*1/(t19*t19*t19*t19)+a_8*t18*1/(t19*t19*t19*t19*t19*t19*t19*t19)+a_3*t15*t16*1/(t19*t19*t19)+a_10* \
               t16*t18*1/pow(t19,1.0E1)+a_5*t15*t17*1/(t19*t19*t19*t19*t19)+a_6*t16*t17*1/(t19*t19*t19*t19*t19*t19) \
               +a_9*t15*t18*1/(t19*t19*t19*t19*t19*t19*t19*t19*t19)+a_11*t15*t16*t18*1/pow(t19,1.1E1)+a_7*t15*t16* \
               t17*1/(t19*t19*t19*t19*t19*t19*t19)+1.0)+rho_a[index]*(kp-kp/(gamma_aa[index]*mu_*1/(rho_a[index]* \
               rho_a[index])*t10*t11*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0)+1.0)+1.0)*((a_1*t5)/t9+a_2*t6*1/(t9* \
               t9)+a_4*t7*1/(t9*t9*t9*t9)+a_8*t8*1/(t9*t9*t9*t9*t9*t9*t9*t9)+a_3*t5*t6*1/(t9*t9*t9)+a_5*t5*t7*1/(t9* \
               t9*t9*t9*t9)+a_6*t6*t7*1/(t9*t9*t9*t9*t9*t9)+a_9*t5*t8*1/(t9*t9*t9*t9*t9*t9*t9*t9*t9)+a_10*t6*t8*1/ \
               pow(t9,1.0E1)+a_7*t5*t6*t7*1/(t9*t9*t9*t9*t9*t9*t9)+a_11*t5*t6*t8*1/pow(t9,1.1E1)+1.0))*(X-1.0)-rho_b[index]* \
               t133*( ( (tau_b[index]-1.0/1.0E20 > 0.0) ? 1.0*(t13*(tau_b[index]*2.0-(gamma_bb[index]*(1.0/4.0))/ \
               rho_b[index])*(1.0/2.0)-1.0) : 0.0 ) +1.0)*(ccaa0+(ccaa2*t115*t134*t138)/(gamma_bb[index]*gcaa*t95* \
               2.0+t115*t134*t138+1.0)+(ccaa1*gamma_bb[index]*gcaa*t95)/(gamma_bb[index]*gcaa*t95+1.0)+(ccaa4*t117* \
               t135*t136)/(gamma_bb[index]*gcaa*t95*4.0+t115*t134*t138*6.0+t117*t135*t136+gamma_bb[index]*gcaa*t115* \
               t134*t137*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t115*t134*t137)/(gamma_bb[index]*gcaa*t95*3.0+t115* \
               t134*t138*3.0+gamma_bb[index]*gcaa*t115*t134*t137+1.0))-rho_a[index]*t113*( ( (tau_a[index]-1.0/1.0E20  \
               > 0.0) ? 1.0*(t3*(tau_a[index]*2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0) : 0.0  \
               ) +1.0)*(ccaa0+(ccaa2*t114*t115*t120)/(gamma_aa[index]*gcaa*t93*2.0+t114*t115*t120+1.0)+(ccaa1*gamma_aa[index]* \
               gcaa*t93)/(gamma_aa[index]*gcaa*t93+1.0)+(ccaa4*t116*t117*t118)/(gamma_aa[index]*gcaa*t93*4.0+t116* \
               t117*t118+t114*t115*t120*6.0+gamma_aa[index]*gcaa*t114*t115*t119*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t114*t115*t119)/(gamma_aa[index]*gcaa*t93*3.0+t114*t115*t120*3.0+gamma_aa[index]*gcaa*t114*t115*t119+ \
               1.0));
        } else if (rho_a[index] > cutoff_) {
            double t5504 = pow(rho_a[index],5.0/3.0);
            double t5505 = 1/tau_a[index];
            double t5506 = C_k*t5504*t5505;
            double t5507 = t5506-1.0;
            double t5508 = t5507*t5507;
            double t5509 = t5508*t5508;
            double t5510 = t5509*t5509;
            double t5511 = t5506+1.0;
            double t5512 = 1/pow(rho_a[index],1.0/3.0);
            double t5513 = c*t5512;
            double t5514 = sqrt(t5513);
            double t5515 = pow(t5513,3.0/2.0);
            double t5516 = c*c;
            double t5517 = 1/pow(rho_a[index],2.0/3.0);
            double t5518 = 1/c0p;
            double t5519 = b1p*t5514;
            double t5520 = b3p*t5515;
            double t5521 = b4p*t5516*t5517;
            double t5522 = b2p*c*t5512;
            double t5523 = t5520+t5521+t5522+t5519;
            double t5524 = 1/t5523;
            double t5525 = t5524*t5518*(1.0/2.0);
            double t5526 = t5525+1.0;
            double t5527 = log(t5526);
            double t5528 = a1p*c*t5512;
            double t5529 = t5528+1.0;
            double t5530 = gamma_aa[index]*gamma_aa[index];
            double t5531 = gcaa*gcaa;
            double t5532 = t5530*t5530;
            double t5533 = t5531*t5531;
            double t5534 = 1/pow(rho_a[index],3.2E1/3.0);
            double t5535 = 1/pow(rho_a[index],8.0/3.0);
            double t5536 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t5537 = 1/pow(rho_a[index],1.6E1/3.0);
            functional_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index]) \
               *1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((a_1*t5507)/t5511+a_2*1/(t5511*t5511)*t5508+ \
               a_4*1/(t5511*t5511*t5511*t5511)*t5509+a_8*t5510*1/(t5511*t5511*t5511*t5511*t5511*t5511*t5511*t5511) \
               +a_10*t5510*1/pow(t5511,1.0E1)*t5508+a_3*1/(t5511*t5511*t5511)*t5507*t5508+a_5*1/(t5511*t5511*t5511* \
               t5511*t5511)*t5507*t5509+a_6*1/(t5511*t5511*t5511*t5511*t5511*t5511)*t5508*t5509+a_9*t5510*1/(t5511* \
               t5511*t5511*t5511*t5511*t5511*t5511*t5511*t5511)*t5507+a_11*t5510*1/pow(t5511,1.1E1)*t5507*t5508+a_7* \
               1/(t5511*t5511*t5511*t5511*t5511*t5511*t5511)*t5507*t5508*t5509+1.0)-rho_a[index]*(((pow(2.0,1.0/3.0) \
               *2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t5514+b3f*t5515+b2f*c*t5512+b4f*t5516*t5517))+1.0)*(a1f*c*t5512+ \
               1.0)*2.0-c0p*t5527*t5529*2.0))/(two_13*2.0-2.0)+c0p*t5527*t5529*2.0)*( ( (tau_a[index]-1.0/1.0E20  \
               > 0.0) ? 1.0*(t5505*(tau_a[index]*2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0) : 0.0  \
               ) +1.0)*(ccaa0+(ccaa2*t5530*t5531*t5537)/(gamma_aa[index]*gcaa*t5535*2.0+t5530*t5531*t5537+1.0)+(ccaa1* \
               gamma_aa[index]*gcaa*t5535)/(gamma_aa[index]*gcaa*t5535+1.0)+(ccaa4*t5532*t5533*t5534)/(gamma_aa[index]* \
               gcaa*t5535*4.0+t5530*t5531*t5537*6.0+t5532*t5533*t5534+gamma_aa[index]*gcaa*t5530*t5531*t5536*4.0+ \
               1.0)+(ccaa3*gamma_aa[index]*gcaa*t5530*t5531*t5536)/(gamma_aa[index]*gcaa*t5535*3.0+t5530*t5531*t5537* \
               3.0+gamma_aa[index]*gcaa*t5530*t5531*t5536+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t4377 = pow(rho_b[index],5.0/3.0);
            double t4378 = 1/tau_b[index];
            double t4379 = C_k*t4377*t4378;
            double t4380 = t4379-1.0;
            double t4381 = t4380*t4380;
            double t4382 = t4381*t4381;
            double t4383 = t4382*t4382;
            double t4384 = t4379+1.0;
            double t4385 = 1/pow(rho_b[index],1.0/3.0);
            double t4386 = c*t4385;
            double t4387 = sqrt(t4386);
            double t4388 = pow(t4386,3.0/2.0);
            double t4389 = c*c;
            double t4390 = 1/pow(rho_b[index],2.0/3.0);
            double t4391 = 1/c0p;
            double t4392 = b1p*t4387;
            double t4393 = b3p*t4388;
            double t4394 = b4p*t4390*t4389;
            double t4395 = b2p*c*t4385;
            double t4396 = t4392+t4393+t4394+t4395;
            double t4397 = 1/t4396;
            double t4398 = t4391*t4397*(1.0/2.0);
            double t4399 = t4398+1.0;
            double t4400 = log(t4399);
            double t4401 = a1p*c*t4385;
            double t4402 = t4401+1.0;
            double t4403 = gamma_bb[index]*gamma_bb[index];
            double t4404 = gcaa*gcaa;
            double t4405 = t4403*t4403;
            double t4406 = t4404*t4404;
            double t4407 = 1/pow(rho_b[index],3.2E1/3.0);
            double t4408 = 1/pow(rho_b[index],8.0/3.0);
            double t4409 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t4410 = 1/pow(rho_b[index],1.6E1/3.0);
            functional_[index] = -rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]*rho_b[index]) \
               *1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((a_1*t4380)/t4384+a_2*t4381*1/(t4384*t4384) \
               +a_4*t4382*1/(t4384*t4384*t4384*t4384)+a_8*t4383*1/(t4384*t4384*t4384*t4384*t4384*t4384*t4384*t4384) \
               +a_10*t4381*t4383*1/pow(t4384,1.0E1)+a_3*t4380*t4381*1/(t4384*t4384*t4384)+a_5*t4380*t4382*1/(t4384* \
               t4384*t4384*t4384*t4384)+a_6*t4381*t4382*1/(t4384*t4384*t4384*t4384*t4384*t4384)+a_9*t4380*t4383*1/ \
               (t4384*t4384*t4384*t4384*t4384*t4384*t4384*t4384*t4384)+a_11*t4380*t4381*t4383*1/pow(t4384,1.1E1)+ \
               a_7*t4380*t4381*t4382*1/(t4384*t4384*t4384*t4384*t4384*t4384*t4384)+1.0)-rho_b[index]*(((pow(2.0,1.0/ \
               3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t4387+b3f*t4388+b2f*c*t4385+b4f*t4390*t4389))+1.0)*(a1f* \
               c*t4385+1.0)*2.0-c0p*t4400*t4402*2.0))/(two_13*2.0-2.0)+c0p*t4400*t4402*2.0)*( ( (tau_b[index]-1.0/ \
               1.0E20 > 0.0) ? 1.0*(t4378*(tau_b[index]*2.0-(gamma_bb[index]*(1.0/4.0))/rho_b[index])*(1.0/2.0)-1.0) \
                : 0.0 ) +1.0)*(ccaa0+(ccaa2*t4410*t4403*t4404)/(gamma_bb[index]*gcaa*t4408*2.0+t4410*t4403*t4404+ \
               1.0)+(ccaa1*gamma_bb[index]*gcaa*t4408)/(gamma_bb[index]*gcaa*t4408+1.0)+(ccaa4*t4405*t4406*t4407) \
               /(gamma_bb[index]*gcaa*t4408*4.0+t4410*t4403*t4404*6.0+t4405*t4406*t4407+gamma_bb[index]*gcaa*t4403* \
               t4404*t4409*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t4403*t4404*t4409)/(gamma_bb[index]*gcaa*t4408*3.0+ \
               t4410*t4403*t4404*3.0+gamma_bb[index]*gcaa*t4403*t4404*t4409+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t140 = 1/pow(rho_a[index],1.0/3.0);
            double t141 = c*t140;
            double t142 = sqrt(t141);
            double t143 = pow(t141,3.0/2.0);
            double t144 = c*c;
            double t145 = 1/pow(rho_a[index],2.0/3.0);
            double t146 = 1/c0p;
            double t147 = b1p*t142;
            double t148 = b3p*t143;
            double t149 = b4p*t144*t145;
            double t150 = b2p*c*t140;
            double t151 = t147+t148+t149+t150;
            double t152 = 1/t151;
            double t153 = t146*t152*(1.0/2.0);
            double t154 = t153+1.0;
            double t155 = log(t154);
            double t156 = a1p*c*t140;
            double t157 = t156+1.0;
            double t158 = pow(2.0,1.0/3.0);
            double t159 = t158*2.0;
            double t160 = t159-2.0;
            double t161 = two_13*2.0;
            double t162 = t161-2.0;
            double t163 = 1/t162;
            double t164 = 1/c0f;
            double t165 = 1/pow(rho_b[index],1.0/3.0);
            double t166 = c*t165;
            double t167 = sqrt(t166);
            double t168 = pow(t166,3.0/2.0);
            double t169 = 1/pow(rho_b[index],2.0/3.0);
            double t170 = b1p*t167;
            double t171 = b3p*t168;
            double t172 = b4p*t144*t169;
            double t173 = b2p*c*t165;
            double t174 = t170+t171+t172+t173;
            double t175 = 1/t174;
            double t176 = t146*t175*(1.0/2.0);
            double t177 = t176+1.0;
            double t178 = log(t177);
            double t179 = a1p*c*t165;
            double t180 = t179+1.0;
            double t181 = c0p*t178*t180*2.0;
            double t182 = rho_a[index]+rho_b[index];
            double t183 = 1/pow(t182,1.0/3.0);
            double t184 = c*t183;
            double t185 = sqrt(t184);
            double t186 = pow(t184,3.0/2.0);
            double t187 = 1/pow(t182,2.0/3.0);
            double t188 = b1p*t185;
            double t189 = b3p*t186;
            double t190 = b4p*t144*t187;
            double t191 = b2p*c*t183;
            double t192 = t188+t189+t190+t191;
            double t193 = 1/t192;
            double t194 = t146*t193*(1.0/2.0);
            double t195 = t194+1.0;
            double t196 = log(t195);
            double t197 = a1p*c*t183;
            double t198 = t197+1.0;
            double t199 = c0p*t196*t198*2.0;
            double t200 = rho_a[index]-rho_b[index];
            double t201 = t200*t200;
            double t202 = 1/t182;
            double t203 = t200*t202;
            double t204 = 1/(t182*t182*t182*t182);
            double t205 = t201*t201;
            double t206 = t203+1.0;
            double t207 = pow(t206,4.0/3.0);
            double t208 = -t203+1.0;
            double t209 = pow(t208,4.0/3.0);
            double t210 = t207+t209-2.0;
            double t211 = gcab*gcab;
            double t215 = 1/pow(rho_a[index],8.0/3.0);
            double t216 = gamma_aa[index]*t215*(1.0/2.0);
            double t217 = 1/pow(rho_b[index],8.0/3.0);
            double t218 = gamma_bb[index]*t217*(1.0/2.0);
            double t212 = t216+t218;
            double t213 = t212*t212;
            double t214 = 1/pow(rho_a[index],1.1E1/3.0);
            double t219 = t211*t211;
            double t220 = t213*t213;
            double t221 = t211*t213*6.0;
            double t222 = gcab*t211*t212*t213*4.0;
            double t223 = t219*t220;
            double t224 = gcab*t212*4.0;
            double t225 = t221+t222+t223+t224+1.0;
            double t226 = gcab*t212;
            double t227 = t226+1.0;
            double t228 = t211*t213;
            double t229 = gcab*t212*2.0;
            double t230 = t228+t229+1.0;
            double t231 = t211*t213*3.0;
            double t232 = gcab*t211*t212*t213;
            double t233 = gcab*t212*3.0;
            double t234 = t231+t232+t233+1.0;
            double t235 = c0p*t155*t157*2.0;
            double t236 = pow(rho_a[index],5.0/3.0);
            double t237 = 1/tau_a[index];
            double t238 = C_k*t236*t237;
            double t239 = t238-1.0;
            double t240 = t239*t239;
            double t241 = t240*t240;
            double t242 = t241*t241;
            double t243 = t238+1.0;
            double t244 = 1/(k*k);
            double t245 = 1/kp;
            double t246 = 1/(rho_a[index]*rho_a[index]);
            double t247 = rho_a[index]*2.0;
            double t248 = 1/pow(t247,2.0/3.0);
            double t249 = gamma_aa[index]*mu_*t244*t245*t246*t248*(1.0/4.0);
            double t250 = t249+1.0;
            double t251 = 1/t250;
            double t252 = kp-kp*t251+1.0;
            double t253 = 1/t243;
            double t254 = pow(rho_a[index],2.0/3.0);
            double t255 = 1/(t243*t243);
            double t256 = 1/pow(t243,1.0E1);
            double t257 = 1/pow(t243,1.1E1);
            double t258 = 1/(t243*t243*t243);
            double t259 = 1/(t243*t243*t243*t243);
            double t260 = 1/(t243*t243*t243*t243*t243);
            double t261 = 1/(t243*t243*t243*t243*t243*t243);
            double t262 = 1/(t243*t243*t243*t243*t243*t243*t243);
            double t263 = 1/(t243*t243*t243*t243*t243*t243*t243*t243);
            double t264 = 1/(t243*t243*t243*t243*t243*t243*t243*t243*t243);
            double t265 = a_1*t239*t253;
            double t266 = a_10*t240*t242*t256;
            double t267 = a_11*t239*t240*t242*t257;
            double t268 = a_2*t240*t255;
            double t269 = a_3*t239*t240*t258;
            double t270 = a_4*t241*t259;
            double t271 = a_5*t239*t241*t260;
            double t272 = a_6*t240*t241*t261;
            double t273 = a_7*t239*t240*t241*t262;
            double t274 = a_8*t242*t263;
            double t275 = a_9*t239*t242*t264;
            double t276 = t265+t266+t267+t268+t269+t270+t271+t272+t273+t274+t275+1.0;
            double t277 = 1/t230;
            double t278 = 1/t234;
            double t279 = 1/t227;
            double t280 = 1/t225;
            double t281 = 1/pow(t182,4.0/3.0);
            double t282 = b1f*t185;
            double t283 = b3f*t186;
            double t284 = b4f*t144*t187;
            double t285 = b2f*c*t183;
            double t286 = t282+t283+t284+t285;
            double t287 = 1/t286;
            double t288 = t164*t287*(1.0/2.0);
            double t289 = t288+1.0;
            double t290 = log(t289);
            double t291 = a1f*c*t183;
            double t292 = t291+1.0;
            double t294 = c0f*t290*t292*2.0;
            double t293 = t199-t294;
            double t295 = 1/(t182*t182);
            double t322 = t200*t295;
            double t296 = t202-t322;
            double t297 = 1/pow(t182,5.0/3.0);
            double t298 = 1/sqrt(t184);
            double t299 = 1/t195;
            double t300 = 1/(t192*t192);
            double t301 = b4p*t144*t297*(2.0/3.0);
            double t302 = b2p*c*t281*(1.0/3.0);
            double t303 = b1p*c*t281*t298*(1.0/6.0);
            double t304 = b3p*c*t185*t281*(1.0/2.0);
            double t305 = t301+t302+t303+t304;
            double t306 = t198*t299*t300*t305;
            double t307 = 1/d2fz0;
            double t308 = 1/Aa;
            double t309 = b1a*t185;
            double t310 = b3a*t186;
            double t311 = b4a*t144*t187;
            double t312 = b2a*c*t183;
            double t313 = t309+t310+t311+t312;
            double t314 = 1/t313;
            double t315 = t308*t314*(1.0/2.0);
            double t316 = t315+1.0;
            double t317 = log(t316);
            double t318 = a1a*c*t183;
            double t319 = t318+1.0;
            double t320 = 1/(t182*t182*t182*t182*t182);
            double t321 = pow(t206,1.0/3.0);
            double t323 = t296*t321*(4.0/3.0);
            double t324 = pow(t208,1.0/3.0);
            double t325 = t323-t296*t324*(4.0/3.0);
            double t326 = t204*t205;
            double t327 = t326-1.0;
            double t328 = a1f*c*t140;
            double t329 = t328+1.0;
            double t330 = b1f*t142;
            double t331 = b3f*t143;
            double t332 = b4f*t144*t145;
            double t333 = b2f*c*t140;
            double t334 = t330+t331+t332+t333;
            double t335 = 1/t334;
            double t336 = t164*t335*(1.0/2.0);
            double t337 = t336+1.0;
            double t338 = 1/pow(rho_a[index],4.0/3.0);
            double t339 = 1/pow(rho_a[index],5.0/3.0);
            double t340 = 1/sqrt(t141);
            double t341 = log(t337);
            double t342 = 1/t154;
            double t343 = 1/(t151*t151);
            double t344 = b4p*t144*t339*(2.0/3.0);
            double t345 = b2p*c*t338*(1.0/3.0);
            double t346 = b1p*c*t338*t340*(1.0/6.0);
            double t347 = b3p*c*t142*t338*(1.0/2.0);
            double t348 = t344+t345+t346+t347;
            double t349 = t157*t342*t343*t348;
            double t350 = Aa*t163*t210*t307*t317*t319*t327*2.0;
            double t352 = c0f*t329*t341*2.0;
            double t351 = t235-t352;
            double t353 = t160*t163*t351;
            double t354 = gamma_aa[index]*gamma_aa[index];
            double t355 = gcaa*gcaa;
            double t356 = t354*t354;
            double t357 = t355*t355;
            double t358 = 1/pow(rho_a[index],3.2E1/3.0);
            double t359 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t360 = 1/pow(rho_a[index],1.6E1/3.0);
            double t361 = t235-t353;
            double t362 = tau_a[index]-1.0/1.0E20;
            double t363 = ( (t362 > 0.0) ?  1.0 : 0.0 ) ;
            double t364 = tau_a[index]*2.0;
            double t365 = 1/rho_a[index];
            double t392 = gamma_aa[index]*t365*(1.0/4.0);
            double t366 = t364-t392;
            double t367 = t237*t366*(1.0/2.0);
            double t368 = t367-1.0;
            double t369 = t363*t368;
            double t370 = t369+1.0;
            double t371 = gamma_aa[index]*gcaa*t215*4.0;
            double t372 = gamma_aa[index]*gcaa*t354*t355*t359*4.0;
            double t373 = t354*t355*t360*6.0;
            double t374 = t356*t357*t358;
            double t375 = t371+t372+t373+t374+1.0;
            double t376 = 1/t375;
            double t377 = gamma_aa[index]*gcaa*t215;
            double t378 = t377+1.0;
            double t379 = 1/t378;
            double t380 = gamma_aa[index]*gcaa*t215*3.0;
            double t381 = gamma_aa[index]*gcaa*t354*t355*t359;
            double t382 = t354*t355*t360*3.0;
            double t383 = t380+t381+t382+1.0;
            double t384 = 1/t383;
            double t385 = gamma_aa[index]*gcaa*t215*2.0;
            double t386 = t354*t355*t360;
            double t387 = t385+t386+1.0;
            double t388 = 1/t387;
            double t389 = 1/pow(rho_a[index],1.9E1/3.0);
            double t390 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t391 = 1/pow(rho_a[index],3.5E1/3.0);
            double t393 = 1/t337;
            double t394 = 1/(t334*t334);
            double t395 = b4f*t144*t339*(2.0/3.0);
            double t396 = b2f*c*t338*(1.0/3.0);
            double t397 = b1f*c*t338*t340*(1.0/6.0);
            double t398 = b3f*c*t142*t338*(1.0/2.0);
            double t399 = t395+t396+t397+t398;
            double t400 = a1f*c*c0f*t338*t341*(2.0/3.0);
            double t401 = a1p*c*c0p*t155*t338*(2.0/3.0);
            double t402 = ccaa4*t356*t357*t358*t376;
            double t403 = ccaa1*gamma_aa[index]*gcaa*t215*t379;
            double t404 = ccaa3*gamma_aa[index]*gcaa*t354*t355*t359*t384;
            double t405 = ccaa2*t354*t355*t360*t388;
            double t406 = ccaa0+t402+t403+t404+t405;
            v_rho_a_[index] = -(ccab0+ccab1*gcab*t212*t279+ccab2*t211*t213*t277+ccab4*t219*t220*t280+ccab3*gcab* \
               t211*t212*t213*t278)*(t199-t235+t350+t353+rho_a[index]*(-t349+t401+t160*t163*(t349+t400-t329*t393* \
               t394*t399-a1p*c*c0p*t155*t338*(2.0/3.0)))-t182*(-t306+t163*t204*t205*t210*(t306-(1/(t286*t286)*t292* \
               (b2f*c*t281*(1.0/3.0)+b4f*t144*t297*(2.0/3.0)+b1f*c*t281*t298*(1.0/6.0)+b3f*c*t185*t281*(1.0/2.0)) \
               )/t289-a1p*c*c0p*t196*t281*(2.0/3.0)+a1f*c*c0f*t281*t290*(2.0/3.0))+a1p*c*c0p*t196*t281*(2.0/3.0)+ \
               t163*t204*t205*t293*t325-t163*t205*t210*t293*t320*4.0+t163*t200*t201*t204*t210*t293*4.0+Aa*t163*t210* \
               t307*t317*t319*(t205*t320*4.0-t200*t201*t204*4.0)*2.0-Aa*t163*t307*t317*t319*t325*t327*2.0-(t163*t210* \
               t307*1/(t313*t313)*t319*t327*(b2a*c*t281*(1.0/3.0)+b4a*t144*t297*(2.0/3.0)+b1a*c*t281*t298*(1.0/6.0) \
               +b3a*c*t185*t281*(1.0/2.0)))/t316+Aa*a1a*c*t163*t210*t281*t307*t317*t327*(2.0/3.0))-t163*t204*t205* \
               t210*t293)-(X-1.0)*(t252*t276+rho_a[index]*t252*(C_k*a_1*t237*t253*t254*(5.0/3.0)-C_k*a_1*t237*t239* \
               t254*t255*(5.0/3.0)+C_k*a_2*t237*t239*t254*t255*(1.0E1/3.0)-C_k*a_2*t237*t240*t254*t258*(1.0E1/3.0) \
               +C_k*a_3*t237*t240*t254*t258*5.0-C_k*a_4*t237*t241*t254*t260*(2.0E1/3.0)+C_k*a_5*t237*t241*t254*t260* \
               (2.5E1/3.0)-C_k*a_8*t237*t242*t254*t264*(4.0E1/3.0)+C_k*a_9*t237*t242*t254*t264*1.5E1+C_k*a_10*t237* \
               t239*t242*t254*t256*(5.0E1/3.0)-C_k*a_10*t237*t240*t242*t254*t257*(5.0E1/3.0)+C_k*a_11*t237*t240*t242* \
               t254*t257*(5.5E1/3.0)-C_k*a_3*t237*t239*t240*t254*t259*5.0+C_k*a_4*t237*t239*t240*t254*t259*(2.0E1/ \
               3.0)-C_k*a_5*t237*t239*t241*t254*t261*(2.5E1/3.0)+C_k*a_6*t237*t239*t241*t254*t261*1.0E1-C_k*a_6*t237* \
               t240*t241*t254*t262*1.0E1+C_k*a_7*t237*t240*t241*t254*t262*(3.5E1/3.0)-C_k*a_9*t237*t239*t242*t254* \
               t256*1.5E1-C_k*a_11*t237*t239*t240*t242*1/pow(t243,1.2E1)*t254*(5.5E1/3.0)-C_k*a_7*t237*t239*t240* \
               t241*t254*t263*(3.5E1/3.0)+C_k*a_8*t237*t239*t240*t241*t254*t263*(4.0E1/3.0))-kp*rho_a[index]*1/(t250* \
               t250)*t276*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index])*t244*t245*t248*(1.0/2.0) \
               +gamma_aa[index]*mu_*t244*t245*t246*1/pow(t247,5.0/3.0)*(1.0/3.0)))-(rho_a[index]*(t235-t160*t163* \
               t351)+rho_b[index]*(t181-t160*t163*(t181-c0f*log((t164*(1.0/2.0))/(b1f*t167+b3f*t168+b2f*c*t165+b4f* \
               t144*t169)+1.0)*(a1f*c*t165+1.0)*2.0))-t182*(t199+t350-t163*t204*t205*t210*t293))*(ccab1*gamma_aa[index]* \
               gcab*t214*t279*(4.0/3.0)-ccab2*t211*t213*1/(t230*t230)*(gamma_aa[index]*gcab*t214*(8.0/3.0)+gamma_aa[index]* \
               t211*t212*t214*(8.0/3.0))-ccab4*t219*t220*1/(t225*t225)*(gamma_aa[index]*gcab*t214*(1.6E1/3.0)+gamma_aa[index]* \
               t211*t212*t214*1.6E1+gamma_aa[index]*gcab*t211*t213*t214*1.6E1+gamma_aa[index]*t212*t213*t214*t219* \
               (1.6E1/3.0))-ccab1*gamma_aa[index]*t211*t212*t214*1/(t227*t227)*(4.0/3.0)+ccab2*gamma_aa[index]*t211* \
               t212*t214*t277*(8.0/3.0)-ccab3*gcab*t211*t212*t213*1/(t234*t234)*(gamma_aa[index]*gcab*t214*4.0+gamma_aa[index]* \
               t211*t212*t214*8.0+gamma_aa[index]*gcab*t211*t213*t214*4.0)+ccab3*gamma_aa[index]*gcab*t211*t213*t214* \
               t278*4.0+ccab4*gamma_aa[index]*t212*t213*t214*t219*t280*(1.6E1/3.0))-t361*t370*t406+rho_a[index]*t361* \
               t370*(ccaa1*gamma_aa[index]*gcaa*t214*t379*(8.0/3.0)+ccaa4*t356*t357*t376*t391*(3.2E1/3.0)+ccaa2*t354* \
               t355*t388*t389*(1.6E1/3.0)-ccaa1*t354*t355*1/(t378*t378)*t389*(8.0/3.0)-ccaa2*t354*t355*t360*1/(t387* \
               t387)*(gamma_aa[index]*gcaa*t214*(1.6E1/3.0)+t354*t355*t389*(1.6E1/3.0))-ccaa4*t356*t357*t358*1/(t375* \
               t375)*(gamma_aa[index]*gcaa*t214*(3.2E1/3.0)+t354*t355*t389*3.2E1+t356*t357*t391*(3.2E1/3.0)+gamma_aa[index]* \
               gcaa*t354*t355*t390*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t354*t355*t384*t390*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t354*t355*t359*1/(t383*t383)*(gamma_aa[index]*gcaa*t214*8.0+t354*t355*t389*1.6E1+gamma_aa[index]* \
               gcaa*t354*t355*t390*8.0))+rho_a[index]*t370*t406*(-t349+t401+t160*t163*(t349+t400-t401-t329*t393*t394* \
               t399))-gamma_aa[index]*t237*t361*t363*t365*t406*(1.0/8.0);
        } else if (rho_a[index] > cutoff_) {
            double t5539 = pow(rho_a[index],5.0/3.0);
            double t5540 = 1/tau_a[index];
            double t5541 = C_k*t5540*t5539;
            double t5542 = t5541-1.0;
            double t5543 = t5542*t5542;
            double t5544 = t5543*t5543;
            double t5545 = t5544*t5544;
            double t5546 = t5541+1.0;
            double t5547 = 1/pow(rho_a[index],1.0/3.0);
            double t5548 = c*t5547;
            double t5549 = sqrt(t5548);
            double t5550 = pow(t5548,3.0/2.0);
            double t5551 = c*c;
            double t5552 = 1/pow(rho_a[index],2.0/3.0);
            double t5553 = 1/c0p;
            double t5554 = b1p*t5549;
            double t5555 = b3p*t5550;
            double t5556 = b4p*t5551*t5552;
            double t5557 = b2p*c*t5547;
            double t5558 = t5554+t5555+t5556+t5557;
            double t5559 = 1/t5558;
            double t5560 = t5553*t5559*(1.0/2.0);
            double t5561 = t5560+1.0;
            double t5562 = log(t5561);
            double t5563 = a1p*c*t5547;
            double t5564 = t5563+1.0;
            double t5565 = gamma_aa[index]*gamma_aa[index];
            double t5566 = gcaa*gcaa;
            double t5567 = t5565*t5565;
            double t5568 = t5566*t5566;
            double t5569 = 1/pow(rho_a[index],3.2E1/3.0);
            double t5570 = 1/pow(rho_a[index],8.0/3.0);
            double t5571 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t5572 = 1/pow(rho_a[index],1.6E1/3.0);
            double t5573 = pow(2.0,1.0/3.0);
            double t5574 = t5573*2.0;
            double t5575 = t5574-2.0;
            double t5576 = two_13*2.0;
            double t5577 = t5576-2.0;
            double t5578 = 1/t5577;
            double t5579 = 1/c0f;
            double t5580 = b1f*t5549;
            double t5581 = b3f*t5550;
            double t5582 = b4f*t5551*t5552;
            double t5583 = b2f*c*t5547;
            double t5584 = t5580+t5581+t5582+t5583;
            double t5585 = 1/t5584;
            double t5586 = t5585*t5579*(1.0/2.0);
            double t5587 = t5586+1.0;
            double t5588 = log(t5587);
            double t5589 = a1f*c*t5547;
            double t5590 = t5589+1.0;
            double t5591 = c0f*t5590*t5588*2.0;
            double t5592 = c0p*t5562*t5564*2.0;
            double t5593 = tau_a[index]-1.0/1.0E20;
            double t5594 = ( (t5593 > 0.0) ?  1.0 : 0.0 ) ;
            double t5595 = tau_a[index]*2.0;
            double t5596 = 1/rho_a[index];
            double t5646 = gamma_aa[index]*t5596*(1.0/4.0);
            double t5597 = t5595-t5646;
            double t5598 = t5540*t5597*(1.0/2.0);
            double t5599 = t5598-1.0;
            double t5600 = t5594*t5599;
            double t5601 = t5600+1.0;
            double t5602 = gamma_aa[index]*gcaa*t5570*4.0;
            double t5603 = gamma_aa[index]*gcaa*t5571*t5565*t5566*4.0;
            double t5604 = t5572*t5565*t5566*6.0;
            double t5605 = t5567*t5568*t5569;
            double t5606 = t5602+t5603+t5604+t5605+1.0;
            double t5607 = 1/t5606;
            double t5608 = gamma_aa[index]*gcaa*t5570;
            double t5609 = t5608+1.0;
            double t5610 = 1/t5609;
            double t5611 = gamma_aa[index]*gcaa*t5570*3.0;
            double t5612 = gamma_aa[index]*gcaa*t5571*t5565*t5566;
            double t5613 = t5572*t5565*t5566*3.0;
            double t5614 = t5611+t5612+t5613+1.0;
            double t5615 = 1/t5614;
            double t5616 = gamma_aa[index]*gcaa*t5570*2.0;
            double t5617 = t5572*t5565*t5566;
            double t5618 = t5616+t5617+1.0;
            double t5619 = 1/t5618;
            double t5620 = 1/pow(rho_a[index],1.9E1/3.0);
            double t5621 = 1/pow(rho_a[index],1.1E1/3.0);
            double t5622 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t5623 = 1/pow(rho_a[index],3.5E1/3.0);
            double t5624 = X-1.0;
            double t5625 = 1/(k*k);
            double t5626 = 1/kp;
            double t5627 = 1/(rho_a[index]*rho_a[index]);
            double t5628 = rho_a[index]*2.0;
            double t5629 = 1/pow(t5628,2.0/3.0);
            double t5630 = gamma_aa[index]*mu_*t5625*t5626*t5627*t5629*(1.0/4.0);
            double t5631 = t5630+1.0;
            double t5632 = 1/t5631;
            double t5633 = kp-kp*t5632+1.0;
            double t5634 = 1/t5546;
            double t5635 = pow(rho_a[index],2.0/3.0);
            double t5636 = 1/(t5546*t5546);
            double t5637 = 1/pow(t5546,1.0E1);
            double t5638 = 1/pow(t5546,1.1E1);
            double t5639 = 1/(t5546*t5546*t5546);
            double t5640 = 1/(t5546*t5546*t5546*t5546);
            double t5641 = 1/(t5546*t5546*t5546*t5546*t5546);
            double t5642 = 1/(t5546*t5546*t5546*t5546*t5546*t5546);
            double t5643 = 1/(t5546*t5546*t5546*t5546*t5546*t5546*t5546);
            double t5644 = 1/(t5546*t5546*t5546*t5546*t5546*t5546*t5546*t5546);
            double t5645 = 1/(t5546*t5546*t5546*t5546*t5546*t5546*t5546*t5546*t5546);
            double t5647 = 1/pow(rho_a[index],4.0/3.0);
            double t5648 = 1/pow(rho_a[index],5.0/3.0);
            double t5649 = 1/sqrt(t5548);
            double t5650 = 1/t5561;
            double t5651 = 1/(t5558*t5558);
            double t5652 = b4p*t5551*t5648*(2.0/3.0);
            double t5653 = b2p*c*t5647*(1.0/3.0);
            double t5654 = b1p*c*t5647*t5649*(1.0/6.0);
            double t5655 = b3p*c*t5549*t5647*(1.0/2.0);
            double t5656 = t5652+t5653+t5654+t5655;
            double t5657 = t5564*t5650*t5651*t5656;
            double t5658 = ccaa4*t5567*t5568*t5569*t5607;
            double t5659 = ccaa1*gamma_aa[index]*gcaa*t5570*t5610;
            double t5660 = ccaa3*gamma_aa[index]*gcaa*t5571*t5565*t5566*t5615;
            double t5661 = ccaa2*t5572*t5565*t5566*t5619;
            double t5662 = ccaa0+t5660+t5661+t5658+t5659;
            double t5663 = t5591-t5592;
            double t5664 = t5575*t5578*t5663;
            double t5665 = t5592+t5664;
            double t5666 = a_1*t5542*t5634;
            double t5667 = a_10*t5543*t5545*t5637;
            double t5668 = a_11*t5542*t5543*t5545*t5638;
            double t5669 = a_2*t5543*t5636;
            double t5670 = a_3*t5542*t5543*t5639;
            double t5671 = a_4*t5544*t5640;
            double t5672 = a_5*t5542*t5544*t5641;
            double t5673 = a_6*t5543*t5544*t5642;
            double t5674 = a_7*t5542*t5543*t5544*t5643;
            double t5675 = a_8*t5545*t5644;
            double t5676 = a_9*t5542*t5545*t5645;
            double t5677 = t5670+t5671+t5672+t5673+t5674+t5666+t5675+t5667+t5676+t5668+t5669+1.0;
            v_rho_a_[index] = -t5624*t5633*t5677-t5601*t5662*(t5592+t5575*t5578*(t5591-c0p*t5562*t5564*2.0))+ \
               rho_a[index]*t5601*t5662*(-t5657+t5575*t5578*(t5657-(t5590*1/(t5584*t5584)*(b2f*c*t5647*(1.0/3.0)+ \
               b4f*t5551*t5648*(2.0/3.0)+b1f*c*t5647*t5649*(1.0/6.0)+b3f*c*t5549*t5647*(1.0/2.0)))/t5587+a1f*c*c0f* \
               t5588*t5647*(2.0/3.0)-a1p*c*c0p*t5562*t5647*(2.0/3.0))+a1p*c*c0p*t5562*t5647*(2.0/3.0))-rho_a[index]* \
               t5624*t5633*(C_k*a_1*t5540*t5634*t5635*(5.0/3.0)-C_k*a_1*t5540*t5542*t5635*t5636*(5.0/3.0)+C_k*a_2* \
               t5540*t5542*t5635*t5636*(1.0E1/3.0)-C_k*a_2*t5540*t5543*t5635*t5639*(1.0E1/3.0)+C_k*a_3*t5540*t5543* \
               t5635*t5639*5.0-C_k*a_4*t5540*t5544*t5641*t5635*(2.0E1/3.0)+C_k*a_5*t5540*t5544*t5641*t5635*(2.5E1/ \
               3.0)-C_k*a_8*t5540*t5545*t5635*t5645*(4.0E1/3.0)+C_k*a_9*t5540*t5545*t5635*t5645*1.5E1+C_k*a_10*t5540* \
               t5542*t5545*t5635*t5637*(5.0E1/3.0)-C_k*a_10*t5540*t5543*t5545*t5635*t5638*(5.0E1/3.0)+C_k*a_11*t5540* \
               t5543*t5545*t5635*t5638*(5.5E1/3.0)-C_k*a_3*t5540*t5542*t5543*t5640*t5635*5.0+C_k*a_4*t5540*t5542* \
               t5543*t5640*t5635*(2.0E1/3.0)-C_k*a_5*t5540*t5542*t5544*t5642*t5635*(2.5E1/3.0)+C_k*a_6*t5540*t5542* \
               t5544*t5642*t5635*1.0E1-C_k*a_6*t5540*t5543*t5544*t5643*t5635*1.0E1+C_k*a_7*t5540*t5543*t5544*t5643* \
               t5635*(3.5E1/3.0)-C_k*a_9*t5540*t5542*t5545*t5635*t5637*1.5E1-C_k*a_11*t5540*t5542*t5543*t5545*1/pow(t5546,1.2E1) \
               *t5635*(5.5E1/3.0)-C_k*a_7*t5540*t5542*t5543*t5544*t5635*t5644*(3.5E1/3.0)+C_k*a_8*t5540*t5542*t5543* \
               t5544*t5635*t5644*(4.0E1/3.0))+rho_a[index]*t5601*t5665*(ccaa1*gamma_aa[index]*gcaa*t5610*t5621*(8.0/ \
               3.0)+ccaa2*t5565*t5566*t5620*t5619*(1.6E1/3.0)+ccaa4*t5567*t5568*t5623*t5607*(3.2E1/3.0)-ccaa1*t5565* \
               t5566*t5620*1/(t5609*t5609)*(8.0/3.0)-ccaa2*t5572*t5565*t5566*1/(t5618*t5618)*(gamma_aa[index]*gcaa* \
               t5621*(1.6E1/3.0)+t5565*t5566*t5620*(1.6E1/3.0))-ccaa4*t5567*t5568*t5569*1/(t5606*t5606)*(gamma_aa[index]* \
               gcaa*t5621*(3.2E1/3.0)+t5565*t5566*t5620*3.2E1+t5567*t5568*t5623*(3.2E1/3.0)+gamma_aa[index]*gcaa* \
               t5565*t5566*t5622*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t5565*t5566*t5622*t5615*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t5571*t5565*t5566*1/(t5614*t5614)*(gamma_aa[index]*gcaa*t5621*8.0+t5565*t5566*t5620*1.6E1+gamma_aa[index]* \
               gcaa*t5565*t5566*t5622*8.0))-gamma_aa[index]*t5540*t5594*t5596*t5662*t5665*(1.0/8.0)+kp*rho_a[index]* \
               1/(t5631*t5631)*t5624*t5677*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index])*t5625* \
               t5626*t5629*(1.0/2.0)+gamma_aa[index]*mu_*t5625*t5626*t5627*1/pow(t5628,5.0/3.0)*(1.0/3.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t408 = 1/pow(rho_a[index],1.0/3.0);
            double t409 = c*t408;
            double t410 = sqrt(t409);
            double t411 = pow(t409,3.0/2.0);
            double t412 = c*c;
            double t413 = 1/pow(rho_a[index],2.0/3.0);
            double t414 = 1/c0p;
            double t415 = b1p*t410;
            double t416 = b3p*t411;
            double t417 = b4p*t412*t413;
            double t418 = b2p*c*t408;
            double t419 = t415+t416+t417+t418;
            double t420 = 1/t419;
            double t421 = t414*t420*(1.0/2.0);
            double t422 = t421+1.0;
            double t423 = log(t422);
            double t424 = a1p*c*t408;
            double t425 = t424+1.0;
            double t426 = pow(2.0,1.0/3.0);
            double t427 = t426*2.0;
            double t428 = t427-2.0;
            double t429 = two_13*2.0;
            double t430 = t429-2.0;
            double t431 = 1/t430;
            double t432 = 1/c0f;
            double t433 = 1/pow(rho_b[index],1.0/3.0);
            double t434 = c*t433;
            double t435 = sqrt(t434);
            double t436 = pow(t434,3.0/2.0);
            double t437 = 1/pow(rho_b[index],2.0/3.0);
            double t438 = b1p*t435;
            double t439 = b3p*t436;
            double t440 = b4p*t412*t437;
            double t441 = b2p*c*t433;
            double t442 = t438+t439+t440+t441;
            double t443 = 1/t442;
            double t444 = t414*t443*(1.0/2.0);
            double t445 = t444+1.0;
            double t446 = log(t445);
            double t447 = a1p*c*t433;
            double t448 = t447+1.0;
            double t449 = c0p*t446*t448*2.0;
            double t450 = rho_a[index]+rho_b[index];
            double t451 = 1/pow(t450,1.0/3.0);
            double t452 = c*t451;
            double t453 = sqrt(t452);
            double t454 = pow(t452,3.0/2.0);
            double t455 = 1/pow(t450,2.0/3.0);
            double t456 = b1p*t453;
            double t457 = b3p*t454;
            double t458 = b4p*t412*t455;
            double t459 = b2p*c*t451;
            double t460 = t456+t457+t458+t459;
            double t461 = 1/t460;
            double t462 = t414*t461*(1.0/2.0);
            double t463 = t462+1.0;
            double t464 = log(t463);
            double t465 = a1p*c*t451;
            double t466 = t465+1.0;
            double t467 = c0p*t464*t466*2.0;
            double t468 = rho_a[index]-rho_b[index];
            double t469 = t468*t468;
            double t470 = 1/t450;
            double t471 = t468*t470;
            double t472 = 1/(t450*t450*t450*t450);
            double t473 = t469*t469;
            double t474 = t471+1.0;
            double t475 = pow(t474,4.0/3.0);
            double t476 = -t471+1.0;
            double t477 = pow(t476,4.0/3.0);
            double t478 = t475+t477-2.0;
            double t479 = gcab*gcab;
            double t483 = 1/pow(rho_a[index],8.0/3.0);
            double t484 = gamma_aa[index]*t483*(1.0/2.0);
            double t485 = 1/pow(rho_b[index],8.0/3.0);
            double t486 = gamma_bb[index]*t485*(1.0/2.0);
            double t480 = t484+t486;
            double t481 = t480*t480;
            double t482 = 1/pow(rho_b[index],1.1E1/3.0);
            double t487 = t479*t479;
            double t488 = t481*t481;
            double t489 = t479*t481*6.0;
            double t490 = gcab*t479*t480*t481*4.0;
            double t491 = t487*t488;
            double t492 = gcab*t480*4.0;
            double t493 = t489+t490+t491+t492+1.0;
            double t494 = gcab*t480;
            double t495 = t494+1.0;
            double t496 = t479*t481;
            double t497 = gcab*t480*2.0;
            double t498 = t496+t497+1.0;
            double t499 = t479*t481*3.0;
            double t500 = gcab*t479*t480*t481;
            double t501 = gcab*t480*3.0;
            double t502 = t499+t500+t501+1.0;
            double t503 = c0p*t423*t425*2.0;
            double t504 = pow(rho_b[index],5.0/3.0);
            double t505 = 1/tau_b[index];
            double t506 = C_k*t504*t505;
            double t507 = t506-1.0;
            double t508 = t507*t507;
            double t509 = t508*t508;
            double t510 = t509*t509;
            double t511 = t506+1.0;
            double t512 = 1/(k*k);
            double t513 = 1/kp;
            double t514 = 1/(rho_b[index]*rho_b[index]);
            double t515 = rho_b[index]*2.0;
            double t516 = 1/pow(t515,2.0/3.0);
            double t517 = gamma_bb[index]*mu_*t512*t513*t514*t516*(1.0/4.0);
            double t518 = t517+1.0;
            double t519 = 1/t518;
            double t520 = kp-kp*t519+1.0;
            double t521 = 1/t511;
            double t522 = pow(rho_b[index],2.0/3.0);
            double t523 = 1/(t511*t511);
            double t524 = 1/pow(t511,1.0E1);
            double t525 = 1/pow(t511,1.1E1);
            double t526 = 1/(t511*t511*t511);
            double t527 = 1/(t511*t511*t511*t511);
            double t528 = 1/(t511*t511*t511*t511*t511);
            double t529 = 1/(t511*t511*t511*t511*t511*t511);
            double t530 = 1/(t511*t511*t511*t511*t511*t511*t511);
            double t531 = 1/(t511*t511*t511*t511*t511*t511*t511*t511);
            double t532 = 1/(t511*t511*t511*t511*t511*t511*t511*t511*t511);
            double t533 = a_1*t507*t521;
            double t534 = a_10*t508*t510*t524;
            double t535 = a_11*t507*t508*t510*t525;
            double t536 = a_2*t508*t523;
            double t537 = a_3*t507*t508*t526;
            double t538 = a_4*t509*t527;
            double t539 = a_5*t507*t509*t528;
            double t540 = a_6*t508*t509*t529;
            double t541 = a_7*t507*t508*t509*t530;
            double t542 = a_8*t510*t531;
            double t543 = a_9*t507*t510*t532;
            double t544 = t533+t534+t535+t536+t537+t538+t539+t540+t541+t542+t543+1.0;
            double t545 = 1/t498;
            double t546 = 1/t502;
            double t547 = 1/t495;
            double t548 = 1/t493;
            double t549 = 1/pow(t450,4.0/3.0);
            double t550 = b1f*t453;
            double t551 = b3f*t454;
            double t552 = b4f*t412*t455;
            double t553 = b2f*c*t451;
            double t554 = t550+t551+t552+t553;
            double t555 = 1/t554;
            double t556 = t432*t555*(1.0/2.0);
            double t557 = t556+1.0;
            double t558 = log(t557);
            double t559 = a1f*c*t451;
            double t560 = t559+1.0;
            double t562 = c0f*t558*t560*2.0;
            double t561 = t467-t562;
            double t563 = 1/(t450*t450);
            double t564 = t468*t563;
            double t565 = t470+t564;
            double t566 = 1/pow(t450,5.0/3.0);
            double t567 = 1/sqrt(t452);
            double t568 = 1/t463;
            double t569 = 1/(t460*t460);
            double t570 = b4p*t412*t566*(2.0/3.0);
            double t571 = b2p*c*t549*(1.0/3.0);
            double t572 = b1p*c*t549*t567*(1.0/6.0);
            double t573 = b3p*c*t453*t549*(1.0/2.0);
            double t574 = t570+t571+t572+t573;
            double t575 = 1/d2fz0;
            double t576 = 1/Aa;
            double t577 = b1a*t453;
            double t578 = b3a*t454;
            double t579 = b4a*t412*t455;
            double t580 = b2a*c*t451;
            double t581 = t577+t578+t579+t580;
            double t582 = 1/t581;
            double t583 = t576*t582*(1.0/2.0);
            double t584 = t583+1.0;
            double t585 = log(t584);
            double t586 = a1a*c*t451;
            double t587 = t586+1.0;
            double t588 = 1/(t450*t450*t450*t450*t450);
            double t589 = pow(t474,1.0/3.0);
            double t590 = t565*t589*(4.0/3.0);
            double t591 = pow(t476,1.0/3.0);
            double t592 = t590-t565*t591*(4.0/3.0);
            double t593 = t472*t473;
            double t594 = t593-1.0;
            double t595 = t466*t568*t569*t574;
            double t596 = a1f*c*t433;
            double t597 = t596+1.0;
            double t598 = b1f*t435;
            double t599 = b3f*t436;
            double t600 = b4f*t412*t437;
            double t601 = b2f*c*t433;
            double t602 = t598+t599+t600+t601;
            double t603 = 1/t602;
            double t604 = t432*t603*(1.0/2.0);
            double t605 = t604+1.0;
            double t606 = 1/pow(rho_b[index],4.0/3.0);
            double t607 = 1/pow(rho_b[index],5.0/3.0);
            double t608 = 1/sqrt(t434);
            double t609 = log(t605);
            double t610 = 1/t445;
            double t611 = 1/(t442*t442);
            double t612 = b4p*t412*t607*(2.0/3.0);
            double t613 = b2p*c*t606*(1.0/3.0);
            double t614 = b1p*c*t606*t608*(1.0/6.0);
            double t615 = b3p*c*t435*t606*(1.0/2.0);
            double t616 = t612+t613+t614+t615;
            double t617 = t448*t610*t611*t616;
            double t620 = c0f*t597*t609*2.0;
            double t618 = t449-t620;
            double t619 = Aa*t431*t478*t575*t585*t587*t594*2.0;
            double t621 = t428*t431*t618;
            double t622 = gamma_bb[index]*gamma_bb[index];
            double t623 = gcaa*gcaa;
            double t624 = t622*t622;
            double t625 = t623*t623;
            double t626 = 1/pow(rho_b[index],3.2E1/3.0);
            double t627 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t628 = 1/pow(rho_b[index],1.6E1/3.0);
            double t629 = t449-t621;
            double t630 = tau_b[index]-1.0/1.0E20;
            double t631 = ( (t630 > 0.0) ?  1.0 : 0.0 ) ;
            double t632 = tau_b[index]*2.0;
            double t633 = 1/rho_b[index];
            double t660 = gamma_bb[index]*t633*(1.0/4.0);
            double t634 = t632-t660;
            double t635 = t505*t634*(1.0/2.0);
            double t636 = t635-1.0;
            double t637 = t631*t636;
            double t638 = t637+1.0;
            double t639 = gamma_bb[index]*gcaa*t485*4.0;
            double t640 = gamma_bb[index]*gcaa*t622*t623*t627*4.0;
            double t641 = t622*t623*t628*6.0;
            double t642 = t624*t625*t626;
            double t643 = t639+t640+t641+t642+1.0;
            double t644 = 1/t643;
            double t645 = gamma_bb[index]*gcaa*t485;
            double t646 = t645+1.0;
            double t647 = 1/t646;
            double t648 = gamma_bb[index]*gcaa*t485*3.0;
            double t649 = gamma_bb[index]*gcaa*t622*t623*t627;
            double t650 = t622*t623*t628*3.0;
            double t651 = t648+t649+t650+1.0;
            double t652 = 1/t651;
            double t653 = gamma_bb[index]*gcaa*t485*2.0;
            double t654 = t622*t623*t628;
            double t655 = t653+t654+1.0;
            double t656 = 1/t655;
            double t657 = 1/pow(rho_b[index],1.9E1/3.0);
            double t658 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t659 = 1/pow(rho_b[index],3.5E1/3.0);
            double t661 = 1/t605;
            double t662 = 1/(t602*t602);
            double t663 = b4f*t412*t607*(2.0/3.0);
            double t664 = b2f*c*t606*(1.0/3.0);
            double t665 = b1f*c*t606*t608*(1.0/6.0);
            double t666 = b3f*c*t435*t606*(1.0/2.0);
            double t667 = t663+t664+t665+t666;
            double t668 = a1f*c*c0f*t606*t609*(2.0/3.0);
            double t669 = a1p*c*c0p*t446*t606*(2.0/3.0);
            double t670 = ccaa4*t624*t625*t626*t644;
            double t671 = ccaa1*gamma_bb[index]*gcaa*t485*t647;
            double t672 = ccaa3*gamma_bb[index]*gcaa*t622*t623*t627*t652;
            double t673 = ccaa2*t622*t623*t628*t656;
            double t674 = ccaa0+t670+t671+t672+t673;
            v_rho_b_[index] = -(X-1.0)*(t520*t544+rho_b[index]*t520*(C_k*a_1*t505*t521*t522*(5.0/3.0)-C_k*a_1* \
               t505*t507*t522*t523*(5.0/3.0)+C_k*a_2*t505*t507*t522*t523*(1.0E1/3.0)-C_k*a_2*t505*t508*t522*t526* \
               (1.0E1/3.0)+C_k*a_3*t505*t508*t522*t526*5.0-C_k*a_4*t505*t509*t522*t528*(2.0E1/3.0)+C_k*a_5*t505*t509* \
               t522*t528*(2.5E1/3.0)-C_k*a_8*t505*t510*t522*t532*(4.0E1/3.0)+C_k*a_9*t505*t510*t522*t532*1.5E1+C_k* \
               a_10*t505*t507*t510*t522*t524*(5.0E1/3.0)-C_k*a_10*t505*t508*t510*t522*t525*(5.0E1/3.0)+C_k*a_11*t505* \
               t508*t510*t522*t525*(5.5E1/3.0)-C_k*a_3*t505*t507*t508*t522*t527*5.0+C_k*a_4*t505*t507*t508*t522*t527* \
               (2.0E1/3.0)-C_k*a_5*t505*t507*t509*t522*t529*(2.5E1/3.0)+C_k*a_6*t505*t507*t509*t522*t529*1.0E1-C_k* \
               a_6*t505*t508*t509*t522*t530*1.0E1+C_k*a_7*t505*t508*t509*t522*t530*(3.5E1/3.0)-C_k*a_9*t505*t507* \
               t510*t522*t524*1.5E1-C_k*a_11*t505*t507*t508*t510*1/pow(t511,1.2E1)*t522*(5.5E1/3.0)-C_k*a_7*t505* \
               t507*t508*t509*t522*t531*(3.5E1/3.0)+C_k*a_8*t505*t507*t508*t509*t522*t531*(4.0E1/3.0))-kp*rho_b[index]* \
               1/(t518*t518)*t544*(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index])*t512*t513*t516* \
               (1.0/2.0)+gamma_bb[index]*mu_*t512*t513*t514*1/pow(t515,5.0/3.0)*(1.0/3.0)))-(ccab0+ccab1*gcab*t480* \
               t547+ccab2*t479*t481*t545+ccab4*t487*t488*t548+ccab3*gcab*t479*t480*t481*t546)*(-t449+t467+t619+t621+ \
               t450*(t595-t431*t472*t473*t478*(t595-(1/(t554*t554)*t560*(b2f*c*t549*(1.0/3.0)+b4f*t412*t566*(2.0/ \
               3.0)+b1f*c*t549*t567*(1.0/6.0)+b3f*c*t453*t549*(1.0/2.0)))/t557-a1p*c*c0p*t464*t549*(2.0/3.0)+a1f* \
               c*c0f*t549*t558*(2.0/3.0))-a1p*c*c0p*t464*t549*(2.0/3.0)+t431*t473*t478*t561*t588*4.0+t431*t472*t473* \
               t561*t592+t431*t468*t469*t472*t478*t561*4.0-Aa*t431*t478*t575*t585*t587*(t473*t588*4.0+t468*t469*t472* \
               4.0)*2.0-Aa*t431*t575*t585*t587*t592*t594*2.0+(t431*t478*t575*1/(t581*t581)*t587*t594*(b2a*c*t549* \
               (1.0/3.0)+b4a*t412*t566*(2.0/3.0)+b1a*c*t549*t567*(1.0/6.0)+b3a*c*t453*t549*(1.0/2.0)))/t584-Aa*a1a* \
               c*t431*t478*t549*t575*t585*t594*(2.0/3.0))+rho_b[index]*(-t617+t669+t428*t431*(t617+t668-t597*t661* \
               t662*t667-a1p*c*c0p*t446*t606*(2.0/3.0)))-t431*t472*t473*t478*t561)-(rho_b[index]*(t449-t428*t431* \
               t618)+rho_a[index]*(t503-t428*t431*(t503-c0f*log((t432*(1.0/2.0))/(b1f*t410+b3f*t411+b2f*c*t408+b4f* \
               t412*t413)+1.0)*(a1f*c*t408+1.0)*2.0))-t450*(t467+t619-t431*t472*t473*t478*t561))*(ccab1*gamma_bb[index]* \
               gcab*t482*t547*(4.0/3.0)-ccab2*t479*t481*1/(t498*t498)*(gamma_bb[index]*gcab*t482*(8.0/3.0)+gamma_bb[index]* \
               t479*t480*t482*(8.0/3.0))-ccab4*t487*t488*1/(t493*t493)*(gamma_bb[index]*gcab*t482*(1.6E1/3.0)+gamma_bb[index]* \
               t479*t480*t482*1.6E1+gamma_bb[index]*gcab*t479*t481*t482*1.6E1+gamma_bb[index]*t480*t481*t482*t487* \
               (1.6E1/3.0))-ccab1*gamma_bb[index]*t479*t480*t482*1/(t495*t495)*(4.0/3.0)+ccab2*gamma_bb[index]*t479* \
               t480*t482*t545*(8.0/3.0)-ccab3*gcab*t479*t480*t481*1/(t502*t502)*(gamma_bb[index]*gcab*t482*4.0+gamma_bb[index]* \
               t479*t480*t482*8.0+gamma_bb[index]*gcab*t479*t481*t482*4.0)+ccab3*gamma_bb[index]*gcab*t479*t481*t482* \
               t546*4.0+ccab4*gamma_bb[index]*t480*t481*t482*t487*t548*(1.6E1/3.0))-t629*t638*t674+rho_b[index]*t629* \
               t638*(ccaa1*gamma_bb[index]*gcaa*t482*t647*(8.0/3.0)+ccaa4*t624*t625*t644*t659*(3.2E1/3.0)+ccaa2*t622* \
               t623*t656*t657*(1.6E1/3.0)-ccaa1*t622*t623*1/(t646*t646)*t657*(8.0/3.0)-ccaa2*t622*t623*t628*1/(t655* \
               t655)*(gamma_bb[index]*gcaa*t482*(1.6E1/3.0)+t622*t623*t657*(1.6E1/3.0))-ccaa4*t624*t625*t626*1/(t643* \
               t643)*(gamma_bb[index]*gcaa*t482*(3.2E1/3.0)+t622*t623*t657*3.2E1+t624*t625*t659*(3.2E1/3.0)+gamma_bb[index]* \
               gcaa*t622*t623*t658*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t622*t623*t652*t658*8.0-ccaa3*gamma_bb[index]* \
               gcaa*t622*t623*t627*1/(t651*t651)*(gamma_bb[index]*gcaa*t482*8.0+t622*t623*t657*1.6E1+gamma_bb[index]* \
               gcaa*t622*t623*t658*8.0))+rho_b[index]*t638*t674*(-t617+t669+t428*t431*(t617+t668-t669-t597*t661*t662* \
               t667))-gamma_bb[index]*t505*t629*t631*t633*t674*(1.0/8.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t4413 = pow(rho_b[index],5.0/3.0);
            double t4414 = 1/tau_b[index];
            double t4415 = C_k*t4413*t4414;
            double t4416 = t4415-1.0;
            double t4417 = t4416*t4416;
            double t4418 = t4417*t4417;
            double t4419 = t4418*t4418;
            double t4420 = t4415+1.0;
            double t4421 = 1/pow(rho_b[index],1.0/3.0);
            double t4422 = c*t4421;
            double t4423 = sqrt(t4422);
            double t4424 = pow(t4422,3.0/2.0);
            double t4425 = c*c;
            double t4426 = 1/pow(rho_b[index],2.0/3.0);
            double t4427 = 1/c0p;
            double t4428 = b1p*t4423;
            double t4429 = b3p*t4424;
            double t4430 = b4p*t4425*t4426;
            double t4431 = b2p*c*t4421;
            double t4432 = t4430+t4431+t4428+t4429;
            double t4433 = 1/t4432;
            double t4434 = t4433*t4427*(1.0/2.0);
            double t4435 = t4434+1.0;
            double t4436 = log(t4435);
            double t4437 = a1p*c*t4421;
            double t4438 = t4437+1.0;
            double t4439 = gamma_bb[index]*gamma_bb[index];
            double t4440 = gcaa*gcaa;
            double t4441 = t4439*t4439;
            double t4442 = t4440*t4440;
            double t4443 = 1/pow(rho_b[index],3.2E1/3.0);
            double t4444 = 1/pow(rho_b[index],8.0/3.0);
            double t4445 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t4446 = 1/pow(rho_b[index],1.6E1/3.0);
            double t4447 = pow(2.0,1.0/3.0);
            double t4448 = t4447*2.0;
            double t4449 = t4448-2.0;
            double t4450 = two_13*2.0;
            double t4451 = t4450-2.0;
            double t4452 = 1/t4451;
            double t4453 = 1/c0f;
            double t4454 = b1f*t4423;
            double t4455 = b3f*t4424;
            double t4456 = b4f*t4425*t4426;
            double t4457 = b2f*c*t4421;
            double t4458 = t4454+t4455+t4456+t4457;
            double t4459 = 1/t4458;
            double t4460 = t4453*t4459*(1.0/2.0);
            double t4461 = t4460+1.0;
            double t4462 = log(t4461);
            double t4463 = a1f*c*t4421;
            double t4464 = t4463+1.0;
            double t4465 = c0f*t4462*t4464*2.0;
            double t4466 = c0p*t4436*t4438*2.0;
            double t4467 = tau_b[index]-1.0/1.0E20;
            double t4468 = ( (t4467 > 0.0) ?  1.0 : 0.0 ) ;
            double t4469 = tau_b[index]*2.0;
            double t4470 = 1/rho_b[index];
            double t4520 = gamma_bb[index]*t4470*(1.0/4.0);
            double t4471 = t4469-t4520;
            double t4472 = t4414*t4471*(1.0/2.0);
            double t4473 = t4472-1.0;
            double t4474 = t4473*t4468;
            double t4475 = t4474+1.0;
            double t4476 = gamma_bb[index]*gcaa*t4444*4.0;
            double t4477 = gamma_bb[index]*gcaa*t4440*t4445*t4439*4.0;
            double t4478 = t4440*t4446*t4439*6.0;
            double t4479 = t4441*t4442*t4443;
            double t4480 = t4476+t4477+t4478+t4479+1.0;
            double t4481 = 1/t4480;
            double t4482 = gamma_bb[index]*gcaa*t4444;
            double t4483 = t4482+1.0;
            double t4484 = 1/t4483;
            double t4485 = gamma_bb[index]*gcaa*t4444*3.0;
            double t4486 = gamma_bb[index]*gcaa*t4440*t4445*t4439;
            double t4487 = t4440*t4446*t4439*3.0;
            double t4488 = t4485+t4486+t4487+1.0;
            double t4489 = 1/t4488;
            double t4490 = gamma_bb[index]*gcaa*t4444*2.0;
            double t4491 = t4440*t4446*t4439;
            double t4492 = t4490+t4491+1.0;
            double t4493 = 1/t4492;
            double t4494 = 1/pow(rho_b[index],1.9E1/3.0);
            double t4495 = 1/pow(rho_b[index],1.1E1/3.0);
            double t4496 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t4497 = 1/pow(rho_b[index],3.5E1/3.0);
            double t4498 = X-1.0;
            double t4499 = 1/(k*k);
            double t4500 = 1/kp;
            double t4501 = 1/(rho_b[index]*rho_b[index]);
            double t4502 = rho_b[index]*2.0;
            double t4503 = 1/pow(t4502,2.0/3.0);
            double t4504 = gamma_bb[index]*mu_*t4499*t4500*t4501*t4503*(1.0/4.0);
            double t4505 = t4504+1.0;
            double t4506 = 1/t4505;
            double t4507 = kp-kp*t4506+1.0;
            double t4508 = 1/t4420;
            double t4509 = pow(rho_b[index],2.0/3.0);
            double t4510 = 1/(t4420*t4420);
            double t4511 = 1/pow(t4420,1.0E1);
            double t4512 = 1/pow(t4420,1.1E1);
            double t4513 = 1/(t4420*t4420*t4420);
            double t4514 = 1/(t4420*t4420*t4420*t4420);
            double t4515 = 1/(t4420*t4420*t4420*t4420*t4420);
            double t4516 = 1/(t4420*t4420*t4420*t4420*t4420*t4420);
            double t4517 = 1/(t4420*t4420*t4420*t4420*t4420*t4420*t4420);
            double t4518 = 1/(t4420*t4420*t4420*t4420*t4420*t4420*t4420*t4420);
            double t4519 = 1/(t4420*t4420*t4420*t4420*t4420*t4420*t4420*t4420*t4420);
            double t4521 = 1/pow(rho_b[index],4.0/3.0);
            double t4522 = 1/pow(rho_b[index],5.0/3.0);
            double t4523 = 1/sqrt(t4422);
            double t4524 = 1/t4435;
            double t4525 = 1/(t4432*t4432);
            double t4526 = b4p*t4425*t4522*(2.0/3.0);
            double t4527 = b2p*c*t4521*(1.0/3.0);
            double t4528 = b1p*c*t4521*t4523*(1.0/6.0);
            double t4529 = b3p*c*t4423*t4521*(1.0/2.0);
            double t4530 = t4526+t4527+t4528+t4529;
            double t4531 = t4438*t4530*t4524*t4525;
            double t4532 = ccaa4*t4441*t4442*t4443*t4481;
            double t4533 = ccaa1*gamma_bb[index]*gcaa*t4444*t4484;
            double t4534 = ccaa3*gamma_bb[index]*gcaa*t4440*t4445*t4439*t4489;
            double t4535 = ccaa2*t4440*t4446*t4439*t4493;
            double t4536 = ccaa0+t4532+t4533+t4534+t4535;
            double t4537 = t4465-t4466;
            double t4538 = t4452*t4449*t4537;
            double t4539 = t4466+t4538;
            double t4540 = a_1*t4416*t4508;
            double t4541 = a_10*t4417*t4419*t4511;
            double t4542 = a_11*t4416*t4417*t4419*t4512;
            double t4543 = a_2*t4417*t4510;
            double t4544 = a_3*t4416*t4417*t4513;
            double t4545 = a_4*t4418*t4514;
            double t4546 = a_5*t4416*t4418*t4515;
            double t4547 = a_6*t4417*t4418*t4516;
            double t4548 = a_7*t4416*t4417*t4418*t4517;
            double t4549 = a_8*t4419*t4518;
            double t4550 = a_9*t4416*t4419*t4519;
            double t4551 = t4540+t4541+t4550+t4542+t4543+t4544+t4545+t4546+t4547+t4548+t4549+1.0;
            v_rho_b_[index] = -t4498*t4551*t4507-t4475*t4536*(t4466+t4452*t4449*(t4465-c0p*t4436*t4438*2.0))+ \
               rho_b[index]*t4475*t4536*(-t4531+t4452*t4449*(t4531-(t4464*1/(t4458*t4458)*(b2f*c*t4521*(1.0/3.0)+ \
               b4f*t4425*t4522*(2.0/3.0)+b1f*c*t4521*t4523*(1.0/6.0)+b3f*c*t4423*t4521*(1.0/2.0)))/t4461+a1f*c*c0f* \
               t4462*t4521*(2.0/3.0)-a1p*c*c0p*t4436*t4521*(2.0/3.0))+a1p*c*c0p*t4436*t4521*(2.0/3.0))-rho_b[index]* \
               t4498*t4507*(C_k*a_1*t4414*t4508*t4509*(5.0/3.0)-C_k*a_1*t4414*t4416*t4510*t4509*(5.0/3.0)+C_k*a_2* \
               t4414*t4416*t4510*t4509*(1.0E1/3.0)-C_k*a_2*t4414*t4417*t4513*t4509*(1.0E1/3.0)+C_k*a_3*t4414*t4417* \
               t4513*t4509*5.0-C_k*a_4*t4414*t4418*t4515*t4509*(2.0E1/3.0)+C_k*a_5*t4414*t4418*t4515*t4509*(2.5E1/ \
               3.0)-C_k*a_8*t4414*t4419*t4509*t4519*(4.0E1/3.0)+C_k*a_9*t4414*t4419*t4509*t4519*1.5E1+C_k*a_10*t4414* \
               t4416*t4419*t4511*t4509*(5.0E1/3.0)-C_k*a_10*t4414*t4417*t4419*t4512*t4509*(5.0E1/3.0)+C_k*a_11*t4414* \
               t4417*t4419*t4512*t4509*(5.5E1/3.0)-C_k*a_3*t4414*t4416*t4417*t4514*t4509*5.0+C_k*a_4*t4414*t4416* \
               t4417*t4514*t4509*(2.0E1/3.0)-C_k*a_5*t4414*t4416*t4418*t4516*t4509*(2.5E1/3.0)+C_k*a_6*t4414*t4416* \
               t4418*t4516*t4509*1.0E1-C_k*a_6*t4414*t4417*t4418*t4517*t4509*1.0E1+C_k*a_7*t4414*t4417*t4418*t4517* \
               t4509*(3.5E1/3.0)-C_k*a_9*t4414*t4416*t4419*t4511*t4509*1.5E1-C_k*a_11*1/pow(t4420,1.2E1)*t4414*t4416* \
               t4417*t4419*t4509*(5.5E1/3.0)-C_k*a_7*t4414*t4416*t4417*t4418*t4509*t4518*(3.5E1/3.0)+C_k*a_8*t4414* \
               t4416*t4417*t4418*t4509*t4518*(4.0E1/3.0))+rho_b[index]*t4475*t4539*(ccaa1*gamma_bb[index]*gcaa*t4484* \
               t4495*(8.0/3.0)+ccaa4*t4441*t4442*t4481*t4497*(3.2E1/3.0)+ccaa2*t4440*t4439*t4493*t4494*(1.6E1/3.0) \
               -ccaa1*t4440*1/(t4483*t4483)*t4439*t4494*(8.0/3.0)-ccaa2*t4440*t4446*1/(t4492*t4492)*t4439*(gamma_bb[index]* \
               gcaa*t4495*(1.6E1/3.0)+t4440*t4439*t4494*(1.6E1/3.0))-ccaa4*t4441*t4442*t4443*1/(t4480*t4480)*(gamma_bb[index]* \
               gcaa*t4495*(3.2E1/3.0)+t4441*t4442*t4497*(3.2E1/3.0)+t4440*t4439*t4494*3.2E1+gamma_bb[index]*gcaa* \
               t4440*t4439*t4496*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t4440*t4439*t4496*t4489*8.0-ccaa3*gamma_bb[index]* \
               gcaa*t4440*t4445*t4439*1/(t4488*t4488)*(gamma_bb[index]*gcaa*t4495*8.0+t4440*t4439*t4494*1.6E1+gamma_bb[index]* \
               gcaa*t4440*t4439*t4496*8.0))-gamma_bb[index]*t4414*t4470*t4468*t4536*t4539*(1.0/8.0)+kp*rho_b[index]* \
               t4498*1/(t4505*t4505)*t4551*(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index])*t4499* \
               t4500*t4503*(1.0/2.0)+gamma_bb[index]*mu_*t4499*t4500*t4501*1/pow(t4502,5.0/3.0)*(1.0/3.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t676 = 1/pow(rho_a[index],1.0/3.0);
                double t677 = c*t676;
                double t678 = sqrt(t677);
                double t679 = pow(t677,3.0/2.0);
                double t680 = c*c;
                double t681 = 1/pow(rho_a[index],2.0/3.0);
                double t682 = 1/c0p;
                double t683 = b1p*t678;
                double t684 = b3p*t679;
                double t685 = b4p*t680*t681;
                double t686 = b2p*c*t676;
                double t687 = t683+t684+t685+t686;
                double t688 = 1/t687;
                double t689 = t682*t688*(1.0/2.0);
                double t690 = t689+1.0;
                double t691 = log(t690);
                double t692 = a1p*c*t676;
                double t693 = t692+1.0;
                double t694 = pow(2.0,1.0/3.0);
                double t695 = t694*2.0;
                double t696 = t695-2.0;
                double t697 = two_13*2.0;
                double t698 = t697-2.0;
                double t699 = 1/t698;
                double t700 = 1/c0f;
                double t701 = 1/pow(rho_b[index],1.0/3.0);
                double t702 = c*t701;
                double t703 = sqrt(t702);
                double t704 = pow(t702,3.0/2.0);
                double t705 = 1/pow(rho_b[index],2.0/3.0);
                double t706 = b1p*t703;
                double t707 = b3p*t704;
                double t708 = b4p*t680*t705;
                double t709 = b2p*c*t701;
                double t710 = t706+t707+t708+t709;
                double t711 = 1/t710;
                double t712 = t682*t711*(1.0/2.0);
                double t713 = t712+1.0;
                double t714 = log(t713);
                double t715 = a1p*c*t701;
                double t716 = t715+1.0;
                double t717 = c0p*t714*t716*2.0;
                double t718 = rho_a[index]+rho_b[index];
                double t719 = 1/pow(t718,1.0/3.0);
                double t720 = c*t719;
                double t721 = sqrt(t720);
                double t722 = pow(t720,3.0/2.0);
                double t723 = 1/pow(t718,2.0/3.0);
                double t724 = b1p*t721;
                double t725 = b3p*t722;
                double t726 = b4p*t680*t723;
                double t727 = b2p*c*t719;
                double t728 = t724+t725+t726+t727;
                double t729 = 1/t728;
                double t730 = t682*t729*(1.0/2.0);
                double t731 = t730+1.0;
                double t732 = log(t731);
                double t733 = a1p*c*t719;
                double t734 = t733+1.0;
                double t735 = c0p*t732*t734*2.0;
                double t736 = rho_a[index]-rho_b[index];
                double t737 = t736*t736;
                double t738 = 1/t718;
                double t739 = t736*t738;
                double t740 = 1/(t718*t718*t718*t718);
                double t741 = t737*t737;
                double t742 = t739+1.0;
                double t743 = pow(t742,4.0/3.0);
                double t744 = -t739+1.0;
                double t745 = pow(t744,4.0/3.0);
                double t746 = t743+t745-2.0;
                double t747 = 1/pow(rho_a[index],8.0/3.0);
                double t748 = gamma_aa[index]*t747*(1.0/2.0);
                double t749 = 1/pow(rho_b[index],8.0/3.0);
                double t750 = gamma_bb[index]*t749*(1.0/2.0);
                double t751 = t748+t750;
                double t752 = gcab*t751;
                double t753 = t752+1.0;
                double t754 = gcab*gcab;
                double t755 = t751*t751;
                double t756 = t754*t754;
                double t757 = t755*t755;
                double t758 = t754*t755;
                double t759 = gcab*t751*2.0;
                double t760 = t758+t759+1.0;
                double t761 = t754*t755*3.0;
                double t762 = gcab*t751*t754*t755;
                double t763 = gcab*t751*3.0;
                double t764 = t761+t762+t763+1.0;
                double t765 = t754*t755*6.0;
                double t766 = gcab*t751*t754*t755*4.0;
                double t767 = t756*t757;
                double t768 = gcab*t751*4.0;
                double t769 = t765+t766+t767+t768+1.0;
                double t770 = c0p*t691*t693*2.0;
                double t771 = b1f*t678;
                double t772 = b3f*t679;
                double t773 = b4f*t680*t681;
                double t774 = b2f*c*t676;
                double t775 = t771+t772+t773+t774;
                double t776 = 1/t775;
                double t777 = t700*t776*(1.0/2.0);
                double t778 = t777+1.0;
                double t779 = log(t778);
                double t780 = a1f*c*t676;
                double t781 = t780+1.0;
                double t791 = c0f*t779*t781*2.0;
                double t782 = t770-t791;
                double t792 = t696*t699*t782;
                double t783 = t770-t792;
                double t784 = gamma_aa[index]*gamma_aa[index];
                double t785 = gcaa*gcaa;
                double t786 = t784*t784;
                double t787 = t785*t785;
                double t788 = 1/pow(rho_a[index],3.2E1/3.0);
                double t789 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t790 = 1/pow(rho_a[index],1.6E1/3.0);
                double t793 = tau_a[index]-1.0/1.0E20;
                double t794 = ( (t793 > 0.0) ?  1.0 : 0.0 ) ;
                double t795 = 1/tau_a[index];
                double t796 = gamma_aa[index]*gcaa*t747;
                double t797 = t796+1.0;
                double t798 = 1/t797;
                double t799 = gamma_aa[index]*gcaa*t747*4.0;
                double t800 = gamma_aa[index]*gcaa*t784*t785*t789*4.0;
                double t801 = t784*t785*t790*6.0;
                double t802 = t786*t787*t788;
                double t803 = t799+t800+t801+t802+1.0;
                double t804 = 1/t803;
                double t805 = gamma_aa[index]*gcaa*t747*2.0;
                double t806 = t784*t785*t790;
                double t807 = t805+t806+1.0;
                double t808 = 1/t807;
                double t809 = gamma_aa[index]*gcaa*t747*3.0;
                double t810 = gamma_aa[index]*gcaa*t784*t785*t789;
                double t811 = t784*t785*t790*3.0;
                double t812 = t809+t810+t811+1.0;
                double t813 = 1/t812;
                double t814 = 1/rho_a[index];
                double t815 = 1/(k*k);
                double t816 = rho_a[index]*2.0;
                double t817 = 1/pow(t816,2.0/3.0);
                double t818 = pow(rho_a[index],5.0/3.0);
                double t819 = C_k*t795*t818;
                double t820 = t819-1.0;
                double t821 = t820*t820;
                double t822 = t821*t821;
                double t823 = t822*t822;
                double t824 = t819+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t783+rho_b[index]*(t717-t696*t699*(t717-c0f*log((t700*(1.0/2.0) \
                   )/(b1f*t703+b3f*t704+b2f*c*t701+b4f*t680*t705)+1.0)*(a1f*c*t701+1.0)*2.0))-t718*(t735-t699*t740*t741* \
                   t746*(t735-c0f*log((t700*(1.0/2.0))/(b1f*t721+b3f*t722+b2f*c*t719+b4f*t680*t723)+1.0)*(a1f*c*t719+ \
                   1.0)*2.0)+(Aa*t699*t746*log((1.0/2.0)/(Aa*(b1a*t721+b3a*t722+b2a*c*t719+b4a*t680*t723))+1.0)*(t740* \
                   t741-1.0)*(a1a*c*t719+1.0)*2.0)/d2fz0))*((ccab1*gcab*t747*(1.0/2.0))/t753-ccab4*t756*t757*1/(t769* \
                   t769)*(gcab*t747*2.0+t747*t751*t754*6.0+gcab*t747*t754*t755*6.0+t747*t751*t755*t756*2.0)-ccab2*t754* \
                   t755*1/(t760*t760)*(gcab*t747+t747*t751*t754)-ccab1*t747*t751*1/(t753*t753)*t754*(1.0/2.0)+(ccab2* \
                   t747*t751*t754)/t760+(ccab3*gcab*t747*t754*t755*(3.0/2.0))/t764+(ccab4*t747*t751*t755*t756*2.0)/t769- \
                   ccab3*gcab*t751*t754*t755*1/(t764*t764)*(gcab*t747*(3.0/2.0)+t747*t751*t754*3.0+gcab*t747*t754*t755* \
                   (3.0/2.0)))+t783*t794*t795*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t747*t798+ccaa4*t786*t787*t788*t804+ccaa2* \
                   t784*t785*t790*t808+ccaa3*gamma_aa[index]*gcaa*t784*t785*t789*t813)*(1.0/8.0)-rho_a[index]*t783*(t794* \
                   (t795*(tau_a[index]*2.0-gamma_aa[index]*t814*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t747*t798+ \
                   ccaa2*gamma_aa[index]*t785*t790*t808*2.0-ccaa1*gamma_aa[index]*t785*t790*1/(t797*t797)-ccaa2*t784* \
                   t785*t790*1/(t807*t807)*(gcaa*t747*2.0+gamma_aa[index]*t785*t790*2.0)-ccaa4*t786*t787*t788*1/(t803* \
                   t803)*(gcaa*t747*4.0+gamma_aa[index]*t785*t790*1.2E1+gamma_aa[index]*t784*t787*t788*4.0+gcaa*t784* \
                   t785*t789*1.2E1)+ccaa4*gamma_aa[index]*t784*t787*t788*t804*4.0+ccaa3*gcaa*t784*t785*t789*t813*3.0- \
                   ccaa3*gamma_aa[index]*gcaa*t784*t785*t789*1/(t812*t812)*(gcaa*t747*3.0+gamma_aa[index]*t785*t790*6.0+ \
                   gcaa*t784*t785*t789*3.0))-mu_*t814*t815*t817*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]) \
                   *t815*t817*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)*((a_1*t820)/t824+a_2*t821*1/(t824*t824)+a_4*t822*1/(t824* \
                   t824*t824*t824)+a_8*t823*1/(t824*t824*t824*t824*t824*t824*t824*t824)+a_10*t821*t823*1/pow(t824,1.0E1) \
                   +a_3*t820*t821*1/(t824*t824*t824)+a_5*t820*t822*1/(t824*t824*t824*t824*t824)+a_6*t821*t822*1/(t824* \
                   t824*t824*t824*t824*t824)+a_9*t820*t823*1/(t824*t824*t824*t824*t824*t824*t824*t824*t824)+a_11*t820* \
                   t821*t823*1/pow(t824,1.1E1)+a_7*t820*t821*t822*1/(t824*t824*t824*t824*t824*t824*t824)+1.0)*(1.0/4.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                double t5680 = 1/pow(rho_a[index],1.0/3.0);
                double t5681 = c*t5680;
                double t5682 = sqrt(t5681);
                double t5683 = pow(t5681,3.0/2.0);
                double t5684 = c*c;
                double t5685 = 1/pow(rho_a[index],2.0/3.0);
                double t5686 = 1/c0p;
                double t5687 = b1p*t5682;
                double t5688 = b3p*t5683;
                double t5689 = b4p*t5684*t5685;
                double t5690 = b2p*c*t5680;
                double t5691 = t5690+t5687+t5688+t5689;
                double t5692 = 1/t5691;
                double t5693 = t5692*t5686*(1.0/2.0);
                double t5694 = t5693+1.0;
                double t5695 = log(t5694);
                double t5696 = a1p*c*t5680;
                double t5697 = t5696+1.0;
                double t5698 = gamma_aa[index]*gamma_aa[index];
                double t5699 = gcaa*gcaa;
                double t5700 = t5698*t5698;
                double t5701 = t5699*t5699;
                double t5702 = 1/pow(rho_a[index],3.2E1/3.0);
                double t5703 = 1/pow(rho_a[index],8.0/3.0);
                double t5704 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t5705 = 1/pow(rho_a[index],1.6E1/3.0);
                double t5706 = pow(2.0,1.0/3.0);
                double t5707 = t5706*2.0;
                double t5708 = t5707-2.0;
                double t5709 = two_13*2.0;
                double t5710 = t5709-2.0;
                double t5711 = 1/t5710;
                double t5712 = 1/c0f;
                double t5713 = b1f*t5682;
                double t5714 = b3f*t5683;
                double t5715 = b4f*t5684*t5685;
                double t5716 = b2f*c*t5680;
                double t5717 = t5713+t5714+t5715+t5716;
                double t5718 = 1/t5717;
                double t5719 = t5712*t5718*(1.0/2.0);
                double t5720 = t5719+1.0;
                double t5721 = log(t5720);
                double t5722 = a1f*c*t5680;
                double t5723 = t5722+1.0;
                double t5724 = c0f*t5721*t5723*2.0;
                double t5725 = c0p*t5695*t5697*2.0;
                double t5726 = tau_a[index]-1.0/1.0E20;
                double t5727 = ( (t5726 > 0.0) ?  1.0 : 0.0 ) ;
                double t5728 = 1/tau_a[index];
                double t5729 = gamma_aa[index]*gcaa*t5703;
                double t5730 = t5729+1.0;
                double t5731 = 1/t5730;
                double t5732 = gamma_aa[index]*gcaa*t5703*4.0;
                double t5733 = gamma_aa[index]*gcaa*t5698*t5699*t5704*4.0;
                double t5734 = t5698*t5699*t5705*6.0;
                double t5735 = t5700*t5701*t5702;
                double t5736 = t5732+t5733+t5734+t5735+1.0;
                double t5737 = 1/t5736;
                double t5738 = gamma_aa[index]*gcaa*t5703*2.0;
                double t5739 = t5698*t5699*t5705;
                double t5740 = t5738+t5739+1.0;
                double t5741 = 1/t5740;
                double t5742 = gamma_aa[index]*gcaa*t5703*3.0;
                double t5743 = gamma_aa[index]*gcaa*t5698*t5699*t5704;
                double t5744 = t5698*t5699*t5705*3.0;
                double t5745 = t5742+t5743+t5744+1.0;
                double t5746 = 1/t5745;
                double t5747 = 1/rho_a[index];
                double t5748 = 1/(k*k);
                double t5749 = rho_a[index]*2.0;
                double t5750 = 1/pow(t5749,2.0/3.0);
                double t5751 = pow(rho_a[index],5.0/3.0);
                double t5752 = C_k*t5751*t5728;
                double t5753 = t5752-1.0;
                double t5754 = t5753*t5753;
                double t5755 = t5754*t5754;
                double t5756 = t5755*t5755;
                double t5757 = t5752+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(t5725+t5711*t5708*(t5724-t5725))*(t5727*(t5728*(tau_a[index]* \
                   2.0-gamma_aa[index]*t5747*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t5703*t5731+ccaa2*gamma_aa[index]* \
                   t5699*t5705*t5741*2.0-ccaa1*gamma_aa[index]*t5699*1/(t5730*t5730)*t5705-ccaa2*t5698*t5699*1/(t5740* \
                   t5740)*t5705*(gcaa*t5703*2.0+gamma_aa[index]*t5699*t5705*2.0)-ccaa4*t5700*t5701*t5702*1/(t5736*t5736) \
                   *(gcaa*t5703*4.0+gamma_aa[index]*t5699*t5705*1.2E1+gamma_aa[index]*t5698*t5701*t5702*4.0+gcaa*t5698* \
                   t5699*t5704*1.2E1)+ccaa4*gamma_aa[index]*t5698*t5701*t5702*t5737*4.0+ccaa3*gcaa*t5698*t5699*t5704* \
                   t5746*3.0-ccaa3*gamma_aa[index]*gcaa*t5698*t5699*t5704*1/(t5745*t5745)*(gcaa*t5703*3.0+gamma_aa[index]* \
                   t5699*t5705*6.0+gcaa*t5698*t5699*t5704*3.0))+t5727*t5728*(t5725+t5711*t5708*(t5724-c0p*t5695*t5697* \
                   2.0))*(ccaa0+ccaa1*gamma_aa[index]*gcaa*t5703*t5731+ccaa2*t5698*t5699*t5705*t5741+ccaa4*t5700*t5701* \
                   t5702*t5737+ccaa3*gamma_aa[index]*gcaa*t5698*t5699*t5704*t5746)*(1.0/8.0)-mu_*t5750*t5747*t5748*1/ \
                   pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t5750*t5748*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)* \
                   ((a_1*t5753)/t5757+a_2*t5754*1/(t5757*t5757)+a_4*t5755*1/(t5757*t5757*t5757*t5757)+a_8*t5756*1/(t5757* \
                   t5757*t5757*t5757*t5757*t5757*t5757*t5757)+a_10*t5754*t5756*1/pow(t5757,1.0E1)+a_3*t5753*t5754*1/(t5757* \
                   t5757*t5757)+a_5*t5753*t5755*1/(t5757*t5757*t5757*t5757*t5757)+a_6*t5754*t5755*1/(t5757*t5757*t5757* \
                   t5757*t5757*t5757)+a_9*t5753*t5756*1/(t5757*t5757*t5757*t5757*t5757*t5757*t5757*t5757*t5757)+a_11* \
                   t5753*t5754*t5756*1/pow(t5757,1.1E1)+a_7*t5753*t5754*t5755*1/(t5757*t5757*t5757*t5757*t5757*t5757* \
                   t5757)+1.0)*(1.0/4.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t827 = 1/pow(rho_a[index],1.0/3.0);
                double t828 = c*t827;
                double t829 = sqrt(t828);
                double t830 = pow(t828,3.0/2.0);
                double t831 = c*c;
                double t832 = 1/pow(rho_a[index],2.0/3.0);
                double t833 = 1/c0p;
                double t834 = b1p*t829;
                double t835 = b3p*t830;
                double t836 = b4p*t831*t832;
                double t837 = b2p*c*t827;
                double t838 = t834+t835+t836+t837;
                double t839 = 1/t838;
                double t840 = t833*t839*(1.0/2.0);
                double t841 = t840+1.0;
                double t842 = log(t841);
                double t843 = a1p*c*t827;
                double t844 = t843+1.0;
                double t845 = pow(2.0,1.0/3.0);
                double t846 = t845*2.0;
                double t847 = t846-2.0;
                double t848 = two_13*2.0;
                double t849 = t848-2.0;
                double t850 = 1/t849;
                double t851 = 1/c0f;
                double t852 = 1/pow(rho_b[index],1.0/3.0);
                double t853 = c*t852;
                double t854 = sqrt(t853);
                double t855 = pow(t853,3.0/2.0);
                double t856 = 1/pow(rho_b[index],2.0/3.0);
                double t857 = b1p*t854;
                double t858 = b3p*t855;
                double t859 = b4p*t831*t856;
                double t860 = b2p*c*t852;
                double t861 = t857+t858+t859+t860;
                double t862 = 1/t861;
                double t863 = t833*t862*(1.0/2.0);
                double t864 = t863+1.0;
                double t865 = log(t864);
                double t866 = a1p*c*t852;
                double t867 = t866+1.0;
                double t868 = c0p*t865*t867*2.0;
                double t869 = rho_a[index]+rho_b[index];
                double t870 = 1/pow(t869,1.0/3.0);
                double t871 = c*t870;
                double t872 = sqrt(t871);
                double t873 = pow(t871,3.0/2.0);
                double t874 = 1/pow(t869,2.0/3.0);
                double t875 = b1p*t872;
                double t876 = b3p*t873;
                double t877 = b4p*t831*t874;
                double t878 = b2p*c*t870;
                double t879 = t875+t876+t877+t878;
                double t880 = 1/t879;
                double t881 = t833*t880*(1.0/2.0);
                double t882 = t881+1.0;
                double t883 = log(t882);
                double t884 = a1p*c*t870;
                double t885 = t884+1.0;
                double t886 = c0p*t883*t885*2.0;
                double t887 = rho_a[index]-rho_b[index];
                double t888 = t887*t887;
                double t889 = 1/t869;
                double t890 = t887*t889;
                double t891 = 1/(t869*t869*t869*t869);
                double t892 = t888*t888;
                double t893 = t890+1.0;
                double t894 = pow(t893,4.0/3.0);
                double t895 = -t890+1.0;
                double t896 = pow(t895,4.0/3.0);
                double t897 = t894+t896-2.0;
                double t898 = 1/pow(rho_b[index],8.0/3.0);
                double t899 = 1/pow(rho_a[index],8.0/3.0);
                double t900 = gamma_aa[index]*t899*(1.0/2.0);
                double t901 = gamma_bb[index]*t898*(1.0/2.0);
                double t902 = t900+t901;
                double t903 = gcab*t902;
                double t904 = t903+1.0;
                double t905 = gcab*gcab;
                double t906 = t902*t902;
                double t907 = t905*t905;
                double t908 = t906*t906;
                double t909 = t905*t906;
                double t910 = gcab*t902*2.0;
                double t911 = t909+t910+1.0;
                double t912 = t905*t906*3.0;
                double t913 = gcab*t902*t905*t906;
                double t914 = gcab*t902*3.0;
                double t915 = t912+t913+t914+1.0;
                double t916 = t905*t906*6.0;
                double t917 = gcab*t902*t905*t906*4.0;
                double t918 = t907*t908;
                double t919 = gcab*t902*4.0;
                double t920 = t916+t917+t918+t919+1.0;
                double t921 = c0p*t842*t844*2.0;
                double t922 = b1f*t854;
                double t923 = b3f*t855;
                double t924 = b4f*t831*t856;
                double t925 = b2f*c*t852;
                double t926 = t922+t923+t924+t925;
                double t927 = 1/t926;
                double t928 = t851*t927*(1.0/2.0);
                double t929 = t928+1.0;
                double t930 = log(t929);
                double t931 = a1f*c*t852;
                double t932 = t931+1.0;
                double t942 = c0f*t930*t932*2.0;
                double t933 = t868-t942;
                double t943 = t847*t850*t933;
                double t934 = t868-t943;
                double t935 = gamma_bb[index]*gamma_bb[index];
                double t936 = gcaa*gcaa;
                double t937 = t935*t935;
                double t938 = t936*t936;
                double t939 = 1/pow(rho_b[index],3.2E1/3.0);
                double t940 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t941 = 1/pow(rho_b[index],1.6E1/3.0);
                double t944 = tau_b[index]-1.0/1.0E20;
                double t945 = ( (t944 > 0.0) ?  1.0 : 0.0 ) ;
                double t946 = 1/tau_b[index];
                double t947 = gamma_bb[index]*gcaa*t898;
                double t948 = t947+1.0;
                double t949 = 1/t948;
                double t950 = gamma_bb[index]*gcaa*t898*4.0;
                double t951 = gamma_bb[index]*gcaa*t935*t936*t940*4.0;
                double t952 = t935*t936*t941*6.0;
                double t953 = t937*t938*t939;
                double t954 = t950+t951+t952+t953+1.0;
                double t955 = 1/t954;
                double t956 = gamma_bb[index]*gcaa*t898*2.0;
                double t957 = t935*t936*t941;
                double t958 = t956+t957+1.0;
                double t959 = 1/t958;
                double t960 = gamma_bb[index]*gcaa*t898*3.0;
                double t961 = gamma_bb[index]*gcaa*t935*t936*t940;
                double t962 = t935*t936*t941*3.0;
                double t963 = t960+t961+t962+1.0;
                double t964 = 1/t963;
                double t965 = 1/rho_b[index];
                double t966 = 1/(k*k);
                double t967 = rho_b[index]*2.0;
                double t968 = 1/pow(t967,2.0/3.0);
                double t969 = pow(rho_b[index],5.0/3.0);
                double t970 = C_k*t946*t969;
                double t971 = t970-1.0;
                double t972 = t971*t971;
                double t973 = t972*t972;
                double t974 = t973*t973;
                double t975 = t970+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t934+rho_a[index]*(t921-t847*t850*(t921-c0f*log((t851*(1.0/2.0) \
                   )/(b1f*t829+b3f*t830+b2f*c*t827+b4f*t831*t832)+1.0)*(a1f*c*t827+1.0)*2.0))-t869*(t886-t850*t891*t892* \
                   t897*(t886-c0f*log((t851*(1.0/2.0))/(b1f*t872+b3f*t873+b2f*c*t870+b4f*t831*t874)+1.0)*(a1f*c*t870+ \
                   1.0)*2.0)+(Aa*t850*t897*log((1.0/2.0)/(Aa*(b1a*t872+b3a*t873+b2a*c*t870+b4a*t831*t874))+1.0)*(t891* \
                   t892-1.0)*(a1a*c*t870+1.0)*2.0)/d2fz0))*((ccab1*gcab*t898*(1.0/2.0))/t904-ccab4*t907*t908*1/(t920* \
                   t920)*(gcab*t898*2.0+t898*t902*t905*6.0+gcab*t898*t905*t906*6.0+t898*t902*t906*t907*2.0)-ccab2*t905* \
                   t906*1/(t911*t911)*(gcab*t898+t898*t902*t905)-ccab1*t898*t902*1/(t904*t904)*t905*(1.0/2.0)+(ccab2* \
                   t898*t902*t905)/t911+(ccab3*gcab*t898*t905*t906*(3.0/2.0))/t915+(ccab4*t898*t902*t906*t907*2.0)/t920- \
                   ccab3*gcab*t902*t905*t906*1/(t915*t915)*(gcab*t898*(3.0/2.0)+t898*t902*t905*3.0+gcab*t898*t905*t906* \
                   (3.0/2.0)))+t934*t945*t946*(ccaa0+ccaa1*gamma_bb[index]*gcaa*t898*t949+ccaa4*t937*t938*t939*t955+ccaa2* \
                   t935*t936*t941*t959+ccaa3*gamma_bb[index]*gcaa*t935*t936*t940*t964)*(1.0/8.0)-rho_b[index]*t934*(t945* \
                   (t946*(tau_b[index]*2.0-gamma_bb[index]*t965*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t898*t949+ \
                   ccaa2*gamma_bb[index]*t936*t941*t959*2.0-ccaa1*gamma_bb[index]*t936*t941*1/(t948*t948)-ccaa2*t935* \
                   t936*t941*1/(t958*t958)*(gcaa*t898*2.0+gamma_bb[index]*t936*t941*2.0)-ccaa4*t937*t938*t939*1/(t954* \
                   t954)*(gcaa*t898*4.0+gamma_bb[index]*t936*t941*1.2E1+gamma_bb[index]*t935*t938*t939*4.0+gcaa*t935* \
                   t936*t940*1.2E1)+ccaa4*gamma_bb[index]*t935*t938*t939*t955*4.0+ccaa3*gcaa*t935*t936*t940*t964*3.0- \
                   ccaa3*gamma_bb[index]*gcaa*t935*t936*t940*1/(t963*t963)*(gcaa*t898*3.0+gamma_bb[index]*t936*t941*6.0+ \
                   gcaa*t935*t936*t940*3.0))-mu_*t965*t966*t968*1/pow((gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]) \
                   *t966*t968*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)*((a_1*t971)/t975+a_2*t972*1/(t975*t975)+a_4*t973*1/(t975* \
                   t975*t975*t975)+a_8*t974*1/(t975*t975*t975*t975*t975*t975*t975*t975)+a_10*t972*t974*1/pow(t975,1.0E1) \
                   +a_3*t971*t972*1/(t975*t975*t975)+a_5*t971*t973*1/(t975*t975*t975*t975*t975)+a_6*t972*t973*1/(t975* \
                   t975*t975*t975*t975*t975)+a_9*t971*t974*1/(t975*t975*t975*t975*t975*t975*t975*t975*t975)+a_11*t971* \
                   t972*t974*1/pow(t975,1.1E1)+a_7*t971*t972*t973*1/(t975*t975*t975*t975*t975*t975*t975)+1.0)*(1.0/4.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t4555 = 1/pow(rho_b[index],1.0/3.0);
                double t4556 = c*t4555;
                double t4557 = sqrt(t4556);
                double t4558 = pow(t4556,3.0/2.0);
                double t4559 = c*c;
                double t4560 = 1/pow(rho_b[index],2.0/3.0);
                double t4561 = 1/c0p;
                double t4562 = b1p*t4557;
                double t4563 = b3p*t4558;
                double t4564 = b4p*t4560*t4559;
                double t4565 = b2p*c*t4555;
                double t4566 = t4562+t4563+t4564+t4565;
                double t4567 = 1/t4566;
                double t4568 = t4561*t4567*(1.0/2.0);
                double t4569 = t4568+1.0;
                double t4570 = log(t4569);
                double t4571 = a1p*c*t4555;
                double t4572 = t4571+1.0;
                double t4573 = gamma_bb[index]*gamma_bb[index];
                double t4574 = gcaa*gcaa;
                double t4575 = t4573*t4573;
                double t4576 = t4574*t4574;
                double t4577 = 1/pow(rho_b[index],3.2E1/3.0);
                double t4578 = 1/pow(rho_b[index],8.0/3.0);
                double t4579 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t4580 = 1/pow(rho_b[index],1.6E1/3.0);
                double t4581 = pow(2.0,1.0/3.0);
                double t4582 = t4581*2.0;
                double t4583 = t4582-2.0;
                double t4584 = two_13*2.0;
                double t4585 = t4584-2.0;
                double t4586 = 1/t4585;
                double t4587 = 1/c0f;
                double t4588 = b1f*t4557;
                double t4589 = b3f*t4558;
                double t4590 = b4f*t4560*t4559;
                double t4591 = b2f*c*t4555;
                double t4592 = t4590+t4591+t4588+t4589;
                double t4593 = 1/t4592;
                double t4594 = t4593*t4587*(1.0/2.0);
                double t4595 = t4594+1.0;
                double t4596 = log(t4595);
                double t4597 = a1f*c*t4555;
                double t4598 = t4597+1.0;
                double t4599 = c0f*t4596*t4598*2.0;
                double t4600 = c0p*t4570*t4572*2.0;
                double t4601 = tau_b[index]-1.0/1.0E20;
                double t4602 = ( (t4601 > 0.0) ?  1.0 : 0.0 ) ;
                double t4603 = 1/tau_b[index];
                double t4604 = gamma_bb[index]*gcaa*t4578;
                double t4605 = t4604+1.0;
                double t4606 = 1/t4605;
                double t4607 = gamma_bb[index]*gcaa*t4578*4.0;
                double t4608 = gamma_bb[index]*gcaa*t4573*t4574*t4579*4.0;
                double t4609 = t4580*t4573*t4574*6.0;
                double t4610 = t4575*t4576*t4577;
                double t4611 = t4610+t4607+t4608+t4609+1.0;
                double t4612 = 1/t4611;
                double t4613 = gamma_bb[index]*gcaa*t4578*2.0;
                double t4614 = t4580*t4573*t4574;
                double t4615 = t4613+t4614+1.0;
                double t4616 = 1/t4615;
                double t4617 = gamma_bb[index]*gcaa*t4578*3.0;
                double t4618 = gamma_bb[index]*gcaa*t4573*t4574*t4579;
                double t4619 = t4580*t4573*t4574*3.0;
                double t4620 = t4617+t4618+t4619+1.0;
                double t4621 = 1/t4620;
                double t4622 = 1/rho_b[index];
                double t4623 = 1/(k*k);
                double t4624 = rho_b[index]*2.0;
                double t4625 = 1/pow(t4624,2.0/3.0);
                double t4626 = pow(rho_b[index],5.0/3.0);
                double t4627 = C_k*t4603*t4626;
                double t4628 = t4627-1.0;
                double t4629 = t4628*t4628;
                double t4630 = t4629*t4629;
                double t4631 = t4630*t4630;
                double t4632 = t4627+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(t4600+t4583*t4586*(t4599-t4600))*(t4602*(t4603*(tau_b[index]* \
                   2.0-gamma_bb[index]*t4622*(1.0/4.0))*(1.0/2.0)-1.0)+1.0)*(ccaa1*gcaa*t4578*t4606+ccaa2*gamma_bb[index]* \
                   t4580*t4574*t4616*2.0-ccaa1*gamma_bb[index]*t4580*t4574*1/(t4605*t4605)-ccaa2*t4580*t4573*t4574*1/ \
                   (t4615*t4615)*(gcaa*t4578*2.0+gamma_bb[index]*t4580*t4574*2.0)-ccaa4*t4575*t4576*t4577*1/(t4611*t4611) \
                   *(gcaa*t4578*4.0+gamma_bb[index]*t4580*t4574*1.2E1+gamma_bb[index]*t4573*t4576*t4577*4.0+gcaa*t4573* \
                   t4574*t4579*1.2E1)+ccaa4*gamma_bb[index]*t4573*t4576*t4577*t4612*4.0+ccaa3*gcaa*t4573*t4574*t4579* \
                   t4621*3.0-ccaa3*gamma_bb[index]*gcaa*t4573*t4574*t4579*1/(t4620*t4620)*(gcaa*t4578*3.0+gamma_bb[index]* \
                   t4580*t4574*6.0+gcaa*t4573*t4574*t4579*3.0))+t4602*t4603*(t4600+t4583*t4586*(t4599-c0p*t4570*t4572* \
                   2.0))*(ccaa0+ccaa1*gamma_bb[index]*gcaa*t4578*t4606+ccaa2*t4580*t4573*t4574*t4616+ccaa4*t4575*t4576* \
                   t4577*t4612+ccaa3*gamma_bb[index]*gcaa*t4573*t4574*t4579*t4621)*(1.0/8.0)-mu_*t4622*t4623*t4625*1/ \
                   pow((gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index])*t4623*t4625*(1.0/4.0))/kp+1.0,2.0)*(X-1.0)* \
                   ((a_1*t4628)/t4632+a_2*1/(t4632*t4632)*t4629+a_4*t4630*1/(t4632*t4632*t4632*t4632)+a_8*t4631*1/(t4632* \
                   t4632*t4632*t4632*t4632*t4632*t4632*t4632)+a_10*t4631*1/pow(t4632,1.0E1)*t4629+a_3*1/(t4632*t4632* \
                   t4632)*t4628*t4629+a_5*t4630*1/(t4632*t4632*t4632*t4632*t4632)*t4628+a_6*t4630*1/(t4632*t4632*t4632* \
                   t4632*t4632*t4632)*t4629+a_9*t4631*1/(t4632*t4632*t4632*t4632*t4632*t4632*t4632*t4632*t4632)*t4628+ \
                   a_11*t4631*1/pow(t4632,1.1E1)*t4628*t4629+a_7*t4630*1/(t4632*t4632*t4632*t4632*t4632*t4632*t4632)* \
                   t4628*t4629+1.0)*(1.0/4.0);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t977 = pow(rho_a[index],5.0/3.0);
                double t978 = 1/(tau_a[index]*tau_a[index]);
                double t979 = 1/tau_a[index];
                double t980 = C_k*t977*t979;
                double t981 = t980+1.0;
                double t982 = t980-1.0;
                double t983 = 1/(t981*t981);
                double t984 = t982*t982;
                double t985 = t984*t984;
                double t986 = t985*t985;
                double t987 = 1/pow(t981,1.1E1);
                double t988 = 1/(t981*t981*t981);
                double t989 = 1/(t981*t981*t981*t981);
                double t990 = 1/(t981*t981*t981*t981*t981);
                double t991 = 1/(t981*t981*t981*t981*t981*t981);
                double t992 = 1/(t981*t981*t981*t981*t981*t981*t981);
                double t993 = 1/(t981*t981*t981*t981*t981*t981*t981*t981);
                double t994 = 1/(t981*t981*t981*t981*t981*t981*t981*t981*t981);
                double t995 = 1/pow(t981,1.0E1);
                double t996 = 1/pow(rho_a[index],1.0/3.0);
                double t997 = c*t996;
                double t998 = sqrt(t997);
                double t999 = pow(t997,3.0/2.0);
                double t1000 = c*c;
                double t1001 = 1/pow(rho_a[index],2.0/3.0);
                double t1002 = 1/c0p;
                double t1003 = b1p*t998;
                double t1004 = b3p*t999;
                double t1005 = b4p*t1000*t1001;
                double t1006 = b2p*c*t996;
                double t1007 = t1003+t1004+t1005+t1006;
                double t1008 = 1/t1007;
                double t1009 = t1002*t1008*(1.0/2.0);
                double t1010 = t1009+1.0;
                double t1011 = log(t1010);
                double t1012 = a1p*c*t996;
                double t1013 = t1012+1.0;
                double t1014 = tau_a[index]-1.0/1.0E20;
                double t1015 = tau_a[index]*2.0;
                double t1016 = 1/rho_a[index];
                double t1017 = t1015-gamma_aa[index]*t1016*(1.0/4.0);
                double t1018 = gamma_aa[index]*gamma_aa[index];
                double t1019 = gcaa*gcaa;
                double t1020 = t1018*t1018;
                double t1021 = t1019*t1019;
                double t1022 = 1/pow(rho_a[index],3.2E1/3.0);
                double t1023 = 1/pow(rho_a[index],8.0/3.0);
                double t1024 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t1025 = 1/pow(rho_a[index],1.6E1/3.0);
                v_tau_a_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t998+b3f* \
                   t999+b2f*c*t996+b4f*t1000*t1001))+1.0)*(a1f*c*t996+1.0)*2.0-c0p*t1011*t1013*2.0))/(two_13*2.0-2.0) \
                   +c0p*t1011*t1013*2.0)*( ( (t1014 > 0.0) ? 1.0*(t979-t1017*t978*(1.0/2.0)) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2* \
                   t1025*t1018*t1019)/(gamma_aa[index]*gcaa*t1023*2.0+t1025*t1018*t1019+1.0)+(ccaa1*gamma_aa[index]*gcaa* \
                   t1023)/(gamma_aa[index]*gcaa*t1023+1.0)+(ccaa4*t1020*t1021*t1022)/(gamma_aa[index]*gcaa*t1023*4.0+ \
                   t1020*t1021*t1022+t1025*t1018*t1019*6.0+gamma_aa[index]*gcaa*t1024*t1018*t1019*4.0+1.0)+(ccaa3*gamma_aa[index]* \
                   gcaa*t1024*t1018*t1019)/(gamma_aa[index]*gcaa*t1023*3.0+t1025*t1018*t1019*3.0+gamma_aa[index]*gcaa* \
                   t1024*t1018*t1019+1.0))+rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t977*t978)/t981-C_k* \
                   a_1*t977*t978*t982*t983+C_k*a_2*t977*t978*t982*t983*2.0-C_k*a_2*t977*t978*t984*t988*2.0+C_k*a_3*t977* \
                   t978*t984*t988*3.0-C_k*a_4*t977*t978*t985*t990*4.0+C_k*a_5*t977*t978*t985*t990*5.0-C_k*a_8*t977*t978* \
                   t986*t994*8.0+C_k*a_9*t977*t978*t986*t994*9.0-C_k*a_10*t977*t978*t984*t986*t987*1.0E1+C_k*a_11*t977* \
                   t978*t984*t986*t987*1.1E1+C_k*a_10*t977*t978*t982*t986*t995*1.0E1-C_k*a_3*t977*t978*t982*t984*t989* \
                   3.0+C_k*a_4*t977*t978*t982*t984*t989*4.0-C_k*a_5*t977*t978*t982*t985*t991*5.0+C_k*a_6*t977*t978*t982* \
                   t985*t991*6.0-C_k*a_6*t977*t978*t984*t985*t992*6.0+C_k*a_7*t977*t978*t984*t985*t992*7.0-C_k*a_9*t977* \
                   t978*t982*t986*t995*9.0-C_k*a_11*t977*t978*1/pow(t981,1.2E1)*t982*t984*t986*1.1E1-C_k*a_7*t977*t978* \
                   t982*t984*t985*t993*7.0+C_k*a_8*t977*t978*t982*t984*t985*t993*8.0);
            } else if (rho_a[index] > cutoff_) {
                double t5761 = pow(rho_a[index],5.0/3.0);
                double t5762 = 1/(tau_a[index]*tau_a[index]);
                double t5763 = 1/tau_a[index];
                double t5764 = C_k*t5761*t5763;
                double t5765 = t5764+1.0;
                double t5766 = t5764-1.0;
                double t5767 = 1/(t5765*t5765);
                double t5768 = t5766*t5766;
                double t5769 = t5768*t5768;
                double t5770 = t5769*t5769;
                double t5771 = 1/pow(t5765,1.1E1);
                double t5772 = 1/(t5765*t5765*t5765);
                double t5773 = 1/(t5765*t5765*t5765*t5765);
                double t5774 = 1/(t5765*t5765*t5765*t5765*t5765);
                double t5775 = 1/(t5765*t5765*t5765*t5765*t5765*t5765);
                double t5776 = 1/(t5765*t5765*t5765*t5765*t5765*t5765*t5765);
                double t5777 = 1/(t5765*t5765*t5765*t5765*t5765*t5765*t5765*t5765);
                double t5778 = 1/(t5765*t5765*t5765*t5765*t5765*t5765*t5765*t5765*t5765);
                double t5779 = 1/pow(t5765,1.0E1);
                double t5780 = 1/pow(rho_a[index],1.0/3.0);
                double t5781 = c*t5780;
                double t5782 = sqrt(t5781);
                double t5783 = pow(t5781,3.0/2.0);
                double t5784 = c*c;
                double t5785 = 1/pow(rho_a[index],2.0/3.0);
                double t5786 = 1/c0p;
                double t5787 = b1p*t5782;
                double t5788 = b3p*t5783;
                double t5789 = b4p*t5784*t5785;
                double t5790 = b2p*c*t5780;
                double t5791 = t5790+t5787+t5788+t5789;
                double t5792 = 1/t5791;
                double t5793 = t5792*t5786*(1.0/2.0);
                double t5794 = t5793+1.0;
                double t5795 = log(t5794);
                double t5796 = a1p*c*t5780;
                double t5797 = t5796+1.0;
                double t5798 = tau_a[index]-1.0/1.0E20;
                double t5799 = tau_a[index]*2.0;
                double t5800 = 1/rho_a[index];
                double t5801 = t5799-gamma_aa[index]*t5800*(1.0/4.0);
                double t5802 = gamma_aa[index]*gamma_aa[index];
                double t5803 = gcaa*gcaa;
                double t5804 = t5802*t5802;
                double t5805 = t5803*t5803;
                double t5806 = 1/pow(rho_a[index],3.2E1/3.0);
                double t5807 = 1/pow(rho_a[index],8.0/3.0);
                double t5808 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t5809 = 1/pow(rho_a[index],1.6E1/3.0);
                v_tau_a_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t5782+b3f* \
                   t5783+b2f*c*t5780+b4f*t5784*t5785))+1.0)*(a1f*c*t5780+1.0)*2.0-c0p*t5795*t5797*2.0))/(two_13*2.0-2.0) \
                   +c0p*t5795*t5797*2.0)*( ( (t5798 > 0.0) ? 1.0*(t5763-t5762*t5801*(1.0/2.0)) : 0.0 ) + 0.0 )*(ccaa0+ \
                   (ccaa2*t5802*t5803*t5809)/(gamma_aa[index]*gcaa*t5807*2.0+t5802*t5803*t5809+1.0)+(ccaa1*gamma_aa[index]* \
                   gcaa*t5807)/(gamma_aa[index]*gcaa*t5807+1.0)+(ccaa4*t5804*t5805*t5806)/(gamma_aa[index]*gcaa*t5807* \
                   4.0+t5802*t5803*t5809*6.0+t5804*t5805*t5806+gamma_aa[index]*gcaa*t5802*t5803*t5808*4.0+1.0)+(ccaa3* \
                   gamma_aa[index]*gcaa*t5802*t5803*t5808)/(gamma_aa[index]*gcaa*t5807*3.0+t5802*t5803*t5809*3.0+gamma_aa[index]* \
                   gcaa*t5802*t5803*t5808+1.0))+rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t5761*t5762)/t5765- \
                   C_k*a_1*t5761*t5762*t5766*t5767-C_k*a_2*t5761*t5762*t5772*t5768*2.0+C_k*a_2*t5761*t5762*t5766*t5767* \
                   2.0+C_k*a_3*t5761*t5762*t5772*t5768*3.0-C_k*a_4*t5761*t5762*t5774*t5769*4.0+C_k*a_5*t5761*t5762*t5774* \
                   t5769*5.0-C_k*a_8*t5761*t5770*t5762*t5778*8.0+C_k*a_9*t5761*t5770*t5762*t5778*9.0-C_k*a_10*t5761*t5770* \
                   t5762*t5771*t5768*1.0E1+C_k*a_11*t5761*t5770*t5762*t5771*t5768*1.1E1+C_k*a_10*t5761*t5770*t5762*t5766* \
                   t5779*1.0E1-C_k*a_3*t5761*t5762*t5773*t5766*t5768*3.0+C_k*a_4*t5761*t5762*t5773*t5766*t5768*4.0-C_k* \
                   a_5*t5761*t5762*t5766*t5775*t5769*5.0+C_k*a_6*t5761*t5762*t5766*t5775*t5769*6.0-C_k*a_6*t5761*t5762* \
                   t5776*t5768*t5769*6.0+C_k*a_7*t5761*t5762*t5776*t5768*t5769*7.0-C_k*a_9*t5761*t5770*t5762*t5766*t5779* \
                   9.0-C_k*a_11*t5761*t5770*t5762*1/pow(t5765,1.2E1)*t5766*t5768*1.1E1-C_k*a_7*t5761*t5762*t5766*t5768* \
                   t5777*t5769*7.0+C_k*a_8*t5761*t5762*t5766*t5768*t5777*t5769*8.0);
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t1027 = pow(rho_b[index],5.0/3.0);
                double t1028 = 1/(tau_b[index]*tau_b[index]);
                double t1029 = 1/tau_b[index];
                double t1030 = C_k*t1027*t1029;
                double t1031 = t1030+1.0;
                double t1032 = t1030-1.0;
                double t1033 = 1/(t1031*t1031);
                double t1034 = t1032*t1032;
                double t1035 = t1034*t1034;
                double t1036 = t1035*t1035;
                double t1037 = 1/pow(t1031,1.1E1);
                double t1038 = 1/(t1031*t1031*t1031);
                double t1039 = 1/(t1031*t1031*t1031*t1031);
                double t1040 = 1/(t1031*t1031*t1031*t1031*t1031);
                double t1041 = 1/(t1031*t1031*t1031*t1031*t1031*t1031);
                double t1042 = 1/(t1031*t1031*t1031*t1031*t1031*t1031*t1031);
                double t1043 = 1/(t1031*t1031*t1031*t1031*t1031*t1031*t1031*t1031);
                double t1044 = 1/(t1031*t1031*t1031*t1031*t1031*t1031*t1031*t1031*t1031);
                double t1045 = 1/pow(t1031,1.0E1);
                double t1046 = 1/pow(rho_b[index],1.0/3.0);
                double t1047 = c*t1046;
                double t1048 = sqrt(t1047);
                double t1049 = pow(t1047,3.0/2.0);
                double t1050 = c*c;
                double t1051 = 1/pow(rho_b[index],2.0/3.0);
                double t1052 = 1/c0p;
                double t1053 = b1p*t1048;
                double t1054 = b3p*t1049;
                double t1055 = b4p*t1050*t1051;
                double t1056 = b2p*c*t1046;
                double t1057 = t1053+t1054+t1055+t1056;
                double t1058 = 1/t1057;
                double t1059 = t1052*t1058*(1.0/2.0);
                double t1060 = t1059+1.0;
                double t1061 = log(t1060);
                double t1062 = a1p*c*t1046;
                double t1063 = t1062+1.0;
                double t1064 = tau_b[index]-1.0/1.0E20;
                double t1065 = tau_b[index]*2.0;
                double t1066 = 1/rho_b[index];
                double t1067 = t1065-gamma_bb[index]*t1066*(1.0/4.0);
                double t1068 = gamma_bb[index]*gamma_bb[index];
                double t1069 = gcaa*gcaa;
                double t1070 = t1068*t1068;
                double t1071 = t1069*t1069;
                double t1072 = 1/pow(rho_b[index],3.2E1/3.0);
                double t1073 = 1/pow(rho_b[index],8.0/3.0);
                double t1074 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t1075 = 1/pow(rho_b[index],1.6E1/3.0);
                v_tau_b_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t1048+b3f* \
                   t1049+b2f*c*t1046+b4f*t1050*t1051))+1.0)*(a1f*c*t1046+1.0)*2.0-c0p*t1061*t1063*2.0))/(two_13*2.0-2.0) \
                   +c0p*t1061*t1063*2.0)*( ( (t1064 > 0.0) ? 1.0*(t1029-t1028*t1067*(1.0/2.0)) : 0.0 ) + 0.0 )*(ccaa0+ \
                   (ccaa2*t1075*t1068*t1069)/(gamma_bb[index]*gcaa*t1073*2.0+t1075*t1068*t1069+1.0)+(ccaa1*gamma_bb[index]* \
                   gcaa*t1073)/(gamma_bb[index]*gcaa*t1073+1.0)+(ccaa4*t1070*t1071*t1072)/(gamma_bb[index]*gcaa*t1073* \
                   4.0+t1070*t1071*t1072+t1075*t1068*t1069*6.0+gamma_bb[index]*gcaa*t1074*t1068*t1069*4.0+1.0)+(ccaa3* \
                   gamma_bb[index]*gcaa*t1074*t1068*t1069)/(gamma_bb[index]*gcaa*t1073*3.0+t1075*t1068*t1069*3.0+gamma_bb[index]* \
                   gcaa*t1074*t1068*t1069+1.0))+rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]* \
                   rho_b[index])*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t1027*t1028)/t1031- \
                   C_k*a_1*t1032*t1033*t1027*t1028+C_k*a_2*t1032*t1033*t1027*t1028*2.0-C_k*a_2*t1034*t1027*t1028*t1038* \
                   2.0+C_k*a_3*t1034*t1027*t1028*t1038*3.0-C_k*a_4*t1040*t1035*t1027*t1028*4.0+C_k*a_5*t1040*t1035*t1027* \
                   t1028*5.0-C_k*a_8*t1044*t1027*t1036*t1028*8.0+C_k*a_9*t1044*t1027*t1036*t1028*9.0+C_k*a_10*t1032*t1027* \
                   t1036*t1045*t1028*1.0E1-C_k*a_10*t1034*t1027*t1036*t1028*t1037*1.0E1+C_k*a_11*t1034*t1027*t1036*t1028* \
                   t1037*1.1E1-C_k*a_3*t1032*t1034*t1027*t1028*t1039*3.0+C_k*a_4*t1032*t1034*t1027*t1028*t1039*4.0-C_k* \
                   a_5*t1032*t1041*t1035*t1027*t1028*5.0+C_k*a_6*t1032*t1041*t1035*t1027*t1028*6.0-C_k*a_6*t1042*t1034* \
                   t1035*t1027*t1028*6.0+C_k*a_7*t1042*t1034*t1035*t1027*t1028*7.0-C_k*a_9*t1032*t1027*t1036*t1045*t1028* \
                   9.0-C_k*a_11*1/pow(t1031,1.2E1)*t1032*t1034*t1027*t1036*t1028*1.1E1-C_k*a_7*t1032*t1034*t1043*t1035* \
                   t1027*t1028*7.0+C_k*a_8*t1032*t1034*t1043*t1035*t1027*t1028*8.0);
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t4635 = pow(rho_b[index],5.0/3.0);
                double t4636 = 1/(tau_b[index]*tau_b[index]);
                double t4637 = 1/tau_b[index];
                double t4638 = C_k*t4635*t4637;
                double t4639 = t4638+1.0;
                double t4640 = t4638-1.0;
                double t4641 = 1/(t4639*t4639);
                double t4642 = t4640*t4640;
                double t4643 = t4642*t4642;
                double t4644 = t4643*t4643;
                double t4645 = 1/pow(t4639,1.1E1);
                double t4646 = 1/(t4639*t4639*t4639);
                double t4647 = 1/(t4639*t4639*t4639*t4639);
                double t4648 = 1/(t4639*t4639*t4639*t4639*t4639);
                double t4649 = 1/(t4639*t4639*t4639*t4639*t4639*t4639);
                double t4650 = 1/(t4639*t4639*t4639*t4639*t4639*t4639*t4639);
                double t4651 = 1/(t4639*t4639*t4639*t4639*t4639*t4639*t4639*t4639);
                double t4652 = 1/(t4639*t4639*t4639*t4639*t4639*t4639*t4639*t4639*t4639);
                double t4653 = 1/pow(t4639,1.0E1);
                double t4654 = 1/pow(rho_b[index],1.0/3.0);
                double t4655 = c*t4654;
                double t4656 = sqrt(t4655);
                double t4657 = pow(t4655,3.0/2.0);
                double t4658 = c*c;
                double t4659 = 1/pow(rho_b[index],2.0/3.0);
                double t4660 = 1/c0p;
                double t4661 = b1p*t4656;
                double t4662 = b3p*t4657;
                double t4663 = b4p*t4658*t4659;
                double t4664 = b2p*c*t4654;
                double t4665 = t4661+t4662+t4663+t4664;
                double t4666 = 1/t4665;
                double t4667 = t4660*t4666*(1.0/2.0);
                double t4668 = t4667+1.0;
                double t4669 = log(t4668);
                double t4670 = a1p*c*t4654;
                double t4671 = t4670+1.0;
                double t4672 = tau_b[index]-1.0/1.0E20;
                double t4673 = tau_b[index]*2.0;
                double t4674 = 1/rho_b[index];
                double t4675 = t4673-gamma_bb[index]*t4674*(1.0/4.0);
                double t4676 = gamma_bb[index]*gamma_bb[index];
                double t4677 = gcaa*gcaa;
                double t4678 = t4676*t4676;
                double t4679 = t4677*t4677;
                double t4680 = 1/pow(rho_b[index],3.2E1/3.0);
                double t4681 = 1/pow(rho_b[index],8.0/3.0);
                double t4682 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t4683 = 1/pow(rho_b[index],1.6E1/3.0);
                v_tau_b_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t4656+b3f* \
                   t4657+b2f*c*t4654+b4f*t4658*t4659))+1.0)*(a1f*c*t4654+1.0)*2.0-c0p*t4671*t4669*2.0))/(two_13*2.0-2.0) \
                   +c0p*t4671*t4669*2.0)*( ( (t4672 > 0.0) ? 1.0*(t4637-t4636*t4675*(1.0/2.0)) : 0.0 ) + 0.0 )*(ccaa0+ \
                   (ccaa2*t4683*t4676*t4677)/(gamma_bb[index]*gcaa*t4681*2.0+t4683*t4676*t4677+1.0)+(ccaa1*gamma_bb[index]* \
                   gcaa*t4681)/(gamma_bb[index]*gcaa*t4681+1.0)+(ccaa4*t4680*t4678*t4679)/(gamma_bb[index]*gcaa*t4681* \
                   4.0+t4683*t4676*t4677*6.0+t4680*t4678*t4679+gamma_bb[index]*gcaa*t4682*t4676*t4677*4.0+1.0)+(ccaa3* \
                   gamma_bb[index]*gcaa*t4682*t4676*t4677)/(gamma_bb[index]*gcaa*t4681*3.0+t4683*t4676*t4677*3.0+gamma_bb[index]* \
                   gcaa*t4682*t4676*t4677+1.0))+rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]* \
                   rho_b[index])*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*((C_k*a_1*t4635*t4636)/t4639- \
                   C_k*a_1*t4640*t4641*t4635*t4636+C_k*a_2*t4640*t4641*t4635*t4636*2.0-C_k*a_2*t4642*t4635*t4636*t4646* \
                   2.0+C_k*a_3*t4642*t4635*t4636*t4646*3.0-C_k*a_4*t4643*t4635*t4636*t4648*4.0+C_k*a_5*t4643*t4635*t4636* \
                   t4648*5.0-C_k*a_8*t4652*t4635*t4644*t4636*8.0+C_k*a_9*t4652*t4635*t4644*t4636*9.0+C_k*a_10*t4640*t4635* \
                   t4644*t4653*t4636*1.0E1-C_k*a_10*t4642*t4635*t4644*t4636*t4645*1.0E1+C_k*a_11*t4642*t4635*t4644*t4636* \
                   t4645*1.1E1-C_k*a_3*t4640*t4642*t4635*t4636*t4647*3.0+C_k*a_4*t4640*t4642*t4635*t4636*t4647*4.0-C_k* \
                   a_5*t4640*t4643*t4635*t4636*t4649*5.0-C_k*a_6*t4650*t4642*t4643*t4635*t4636*6.0+C_k*a_6*t4640*t4643* \
                   t4635*t4636*t4649*6.0+C_k*a_7*t4650*t4642*t4643*t4635*t4636*7.0-C_k*a_9*t4640*t4635*t4644*t4653*t4636* \
                   9.0-C_k*a_11*t4640*t4642*t4635*t4644*t4636*1/pow(t4639,1.2E1)*1.1E1-C_k*a_7*t4640*t4642*t4651*t4643* \
                   t4635*t4636*7.0+C_k*a_8*t4640*t4642*t4651*t4643*t4635*t4636*8.0);
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1077 = rho_a[index]+rho_b[index];
            double t1078 = 1/pow(t1077,1.0/3.0);
            double t1079 = c*t1078;
            double t1080 = sqrt(t1079);
            double t1081 = b1p*t1080;
            double t1082 = pow(t1079,3.0/2.0);
            double t1083 = b3p*t1082;
            double t1084 = c*c;
            double t1085 = 1/pow(t1077,2.0/3.0);
            double t1086 = b4p*t1084*t1085;
            double t1087 = b2p*c*t1078;
            double t1088 = t1081+t1083+t1086+t1087;
            double t1089 = 1/pow(t1077,4.0/3.0);
            double t1090 = 1/c0p;
            double t1091 = 1/t1088;
            double t1092 = t1090*t1091*(1.0/2.0);
            double t1093 = t1092+1.0;
            double t1094 = a1p*c*t1078;
            double t1095 = t1094+1.0;
            double t1096 = rho_a[index]-rho_b[index];
            double t1097 = t1096*t1096;
            double t1098 = 1/t1077;
            double t1099 = t1096*t1098;
            double t1100 = two_13*2.0;
            double t1101 = t1100-2.0;
            double t1102 = 1/t1101;
            double t1103 = 1/c0f;
            double t1104 = b1f*t1080;
            double t1105 = b3f*t1082;
            double t1106 = b4f*t1084*t1085;
            double t1107 = b2f*c*t1078;
            double t1108 = t1104+t1105+t1106+t1107;
            double t1109 = 1/t1108;
            double t1110 = t1103*t1109*(1.0/2.0);
            double t1111 = t1110+1.0;
            double t1112 = log(t1111);
            double t1113 = a1f*c*t1078;
            double t1114 = t1113+1.0;
            double t1115 = log(t1093);
            double t1125 = c0f*t1112*t1114*2.0;
            double t1126 = c0p*t1095*t1115*2.0;
            double t1116 = t1125-t1126;
            double t1117 = t1099+1.0;
            double t1118 = pow(t1117,4.0/3.0);
            double t1119 = -t1099+1.0;
            double t1120 = pow(t1119,4.0/3.0);
            double t1121 = t1120+t1118-2.0;
            double t1122 = 1/(t1077*t1077);
            double t1153 = t1096*t1122;
            double t1123 = t1098-t1153;
            double t1124 = 1/(t1077*t1077*t1077*t1077);
            double t1127 = t1097*t1097;
            double t1128 = 1/pow(t1077,5.0/3.0);
            double t1129 = 1/sqrt(t1079);
            double t1130 = 1/t1093;
            double t1131 = 1/(t1088*t1088);
            double t1132 = b4p*t1084*t1128*(2.0/3.0);
            double t1133 = b2p*c*t1089*(1.0/3.0);
            double t1134 = b1p*c*t1089*t1129*(1.0/6.0);
            double t1135 = b3p*c*t1080*t1089*(1.0/2.0);
            double t1136 = t1132+t1133+t1134+t1135;
            double t1137 = t1095*t1130*t1131*t1136;
            double t1138 = 1/(t1077*t1077*t1077*t1077*t1077);
            double t1139 = 1/d2fz0;
            double t1140 = 1/Aa;
            double t1141 = b1a*t1080;
            double t1142 = b3a*t1082;
            double t1143 = b4a*t1084*t1085;
            double t1144 = b2a*c*t1078;
            double t1145 = t1141+t1142+t1143+t1144;
            double t1146 = 1/t1145;
            double t1147 = t1140*t1146*(1.0/2.0);
            double t1148 = t1147+1.0;
            double t1149 = log(t1148);
            double t1150 = a1a*c*t1078;
            double t1151 = t1150+1.0;
            double t1152 = pow(t1117,1.0/3.0);
            double t1154 = t1123*t1152*(4.0/3.0);
            double t1155 = pow(t1119,1.0/3.0);
            double t1230 = t1123*t1155*(4.0/3.0);
            double t1156 = t1154-t1230;
            double t1157 = t1124*t1127;
            double t1158 = t1157-1.0;
            double t1159 = 1/pow(rho_a[index],1.0/3.0);
            double t1160 = c*t1159;
            double t1161 = sqrt(t1160);
            double t1162 = b1f*t1161;
            double t1163 = pow(t1160,3.0/2.0);
            double t1164 = b3f*t1163;
            double t1165 = 1/pow(rho_a[index],2.0/3.0);
            double t1166 = b4f*t1084*t1165;
            double t1167 = b2f*c*t1159;
            double t1168 = t1162+t1164+t1166+t1167;
            double t1169 = 1/pow(rho_a[index],4.0/3.0);
            double t1170 = b1p*t1161;
            double t1171 = b3p*t1163;
            double t1172 = b4p*t1084*t1165;
            double t1173 = b2p*c*t1159;
            double t1174 = t1170+t1171+t1172+t1173;
            double t1175 = 1/pow(rho_a[index],5.0/3.0);
            double t1176 = 1/sqrt(t1160);
            double t1177 = 1/t1168;
            double t1178 = t1103*t1177*(1.0/2.0);
            double t1179 = t1178+1.0;
            double t1180 = 1/t1174;
            double t1181 = t1090*t1180*(1.0/2.0);
            double t1182 = t1181+1.0;
            double t1183 = a1p*c*t1159;
            double t1184 = t1183+1.0;
            double t1185 = 1/t1182;
            double t1186 = 1/(t1174*t1174);
            double t1187 = b4p*t1084*t1175*(2.0/3.0);
            double t1188 = b2p*c*t1169*(1.0/3.0);
            double t1189 = b1p*c*t1176*t1169*(1.0/6.0);
            double t1190 = b3p*c*t1161*t1169*(1.0/2.0);
            double t1191 = t1190+t1187+t1188+t1189;
            double t1192 = t1191*t1184*t1185*t1186;
            double t1193 = log(t1182);
            double t1194 = pow(2.0,1.0/3.0);
            double t1195 = t1194*2.0;
            double t1196 = t1195-2.0;
            double t1197 = log(t1179);
            double t1198 = a1f*c*t1159;
            double t1199 = t1198+1.0;
            double t1200 = gcab*gcab;
            double t1204 = 1/pow(rho_a[index],8.0/3.0);
            double t1205 = gamma_aa[index]*t1204*(1.0/2.0);
            double t1206 = 1/pow(rho_b[index],8.0/3.0);
            double t1207 = gamma_bb[index]*t1206*(1.0/2.0);
            double t1201 = t1205+t1207;
            double t1202 = t1201*t1201;
            double t1203 = 1/pow(rho_a[index],1.1E1/3.0);
            double t1208 = t1200*t1200;
            double t1209 = t1202*t1202;
            double t1210 = t1200*t1202*6.0;
            double t1211 = gcab*t1200*t1201*t1202*4.0;
            double t1212 = t1208*t1209;
            double t1213 = gcab*t1201*4.0;
            double t1214 = t1210+t1211+t1212+t1213+1.0;
            double t1215 = gcab*t1201;
            double t1216 = t1215+1.0;
            double t1217 = t1200*t1202;
            double t1218 = gcab*t1201*2.0;
            double t1219 = t1217+t1218+1.0;
            double t1220 = t1200*t1202*3.0;
            double t1221 = gcab*t1200*t1201*t1202;
            double t1222 = gcab*t1201*3.0;
            double t1223 = t1220+t1221+t1222+1.0;
            double t1224 = 1/t1219;
            double t1225 = 1/t1223;
            double t1226 = 1/t1216;
            double t1227 = 1/t1214;
            double t1228 = 1/pow(t1077,7.0/3.0);
            double t1229 = 1/pow(t1077,8.0/3.0);
            double t1231 = 1/t1111;
            double t1232 = 1/(t1108*t1108);
            double t1233 = b4f*t1084*t1128*(2.0/3.0);
            double t1234 = b2f*c*t1089*(1.0/3.0);
            double t1235 = b1f*c*t1089*t1129*(1.0/6.0);
            double t1236 = b3f*c*t1080*t1089*(1.0/2.0);
            double t1237 = t1233+t1234+t1235+t1236;
            double t1238 = a1f*c*c0f*t1089*t1112*(2.0/3.0);
            double t1240 = t1114*t1231*t1232*t1237;
            double t1241 = a1p*c*c0p*t1089*t1115*(2.0/3.0);
            double t1239 = t1137-t1240-t1241+t1238;
            double t1242 = t1136*t1136;
            double t1243 = 1/pow(t1079,3.0/2.0);
            double t1244 = b4p*t1084*t1229*(1.0E1/9.0);
            double t1245 = b2p*c*t1228*(4.0/9.0);
            double t1246 = b1p*c*t1129*t1228*(2.0/9.0);
            double t1247 = b3p*c*t1080*t1228*(2.0/3.0);
            double t1248 = b3p*t1084*t1129*t1229*(1.0/1.2E1);
            double t1249 = t1244+t1245+t1246+t1247+t1248-b1p*t1084*t1243*t1229*(1.0/3.6E1);
            double t1250 = 1/(t1088*t1088*t1088);
            double t1251 = t1095*t1130*t1250*t1242*2.0;
            double t1252 = t1237*t1237;
            double t1253 = 1/(t1093*t1093);
            double t1254 = 1/(t1088*t1088*t1088*t1088);
            double t1255 = t1122*2.0;
            double t1256 = 1/(t1077*t1077*t1077);
            double t1263 = t1096*t1256*2.0;
            double t1257 = -t1263+t1255;
            double t1258 = t1123*t1123;
            double t1259 = a1p*c*c0p*t1115*t1228*(8.0/9.0);
            double t1260 = 1/(t1077*t1077*t1077*t1077*t1077*t1077);
            double t1261 = t1127*t1138*4.0;
            double t1271 = t1096*t1097*t1124*4.0;
            double t1262 = t1261-t1271;
            double t1264 = t1155*t1257*(4.0/3.0);
            double t1265 = 1/pow(t1117,2.0/3.0);
            double t1266 = t1265*t1258*(4.0/9.0);
            double t1267 = 1/pow(t1119,2.0/3.0);
            double t1268 = t1258*t1267*(4.0/9.0);
            double t1269 = t1264+t1266+t1268-t1152*t1257*(4.0/3.0);
            double t1270 = 1/t1148;
            double t1272 = 1/(t1145*t1145);
            double t1273 = b4a*t1084*t1128*(2.0/3.0);
            double t1274 = b2a*c*t1089*(1.0/3.0);
            double t1275 = b1a*c*t1089*t1129*(1.0/6.0);
            double t1276 = b3a*c*t1080*t1089*(1.0/2.0);
            double t1277 = t1273+t1274+t1275+t1276;
            double t1278 = t1277*t1277;
            double t1279 = t1095*t1130*t1131*t1249;
            double t1280 = 1/t1179;
            double t1281 = b4f*t1084*t1175*(2.0/3.0);
            double t1282 = b2f*c*t1169*(1.0/3.0);
            double t1283 = b1f*c*t1176*t1169*(1.0/6.0);
            double t1284 = b3f*c*t1161*t1169*(1.0/2.0);
            double t1285 = t1281+t1282+t1283+t1284;
            double t1286 = 1/(t1168*t1168);
            double t1287 = 1/pow(rho_a[index],7.0/3.0);
            double t1288 = 1/pow(t1160,3.0/2.0);
            double t1289 = t1285*t1285;
            double t1290 = t1191*t1191;
            double t1291 = 1/(t1174*t1174*t1174);
            double t1292 = t1184*t1185*t1290*t1291*2.0;
            double t1293 = b4p*t1084*t1204*(1.0E1/9.0);
            double t1294 = b2p*c*t1287*(4.0/9.0);
            double t1295 = b3p*t1084*t1176*t1204*(1.0/1.2E1);
            double t1296 = b1p*c*t1176*t1287*(2.0/9.0);
            double t1297 = b3p*c*t1161*t1287*(2.0/3.0);
            double t1480 = b1p*t1084*t1204*t1288*(1.0/3.6E1);
            double t1298 = t1293+t1294+t1295+t1296+t1297-t1480;
            double t1299 = 1/(t1182*t1182);
            double t1300 = 1/(t1174*t1174*t1174*t1174);
            double t1301 = a1p*c*c0p*t1193*t1287*(8.0/9.0);
            double t1302 = a1f*c*c0f*t1169*t1197*(2.0/3.0);
            double t1303 = a1p*c*c0p*t1193*t1169*(2.0/3.0);
            double t1304 = t1090*t1095*t1242*t1253*t1254*(1.0/2.0);
            double t1305 = 1/tau_a[index];
            double t1306 = pow(rho_a[index],2.0/3.0);
            double t1307 = pow(rho_a[index],5.0/3.0);
            double t1308 = C_k*t1305*t1307;
            double t1309 = t1308+1.0;
            double t1310 = t1308-1.0;
            double t1311 = 1/(t1309*t1309);
            double t1312 = t1310*t1310;
            double t1313 = t1312*t1312;
            double t1314 = t1313*t1313;
            double t1315 = 1/pow(t1309,1.1E1);
            double t1316 = 1/(t1309*t1309*t1309);
            double t1317 = 1/(t1309*t1309*t1309*t1309);
            double t1318 = 1/(t1309*t1309*t1309*t1309*t1309);
            double t1319 = 1/(t1309*t1309*t1309*t1309*t1309*t1309);
            double t1320 = 1/(t1309*t1309*t1309*t1309*t1309*t1309*t1309);
            double t1321 = 1/(t1309*t1309*t1309*t1309*t1309*t1309*t1309*t1309);
            double t1322 = 1/(t1309*t1309*t1309*t1309*t1309*t1309*t1309*t1309*t1309);
            double t1323 = 1/pow(t1309,1.0E1);
            double t1324 = 1/(k*k);
            double t1325 = 1/kp;
            double t1326 = 1/(rho_a[index]*rho_a[index]);
            double t1327 = rho_a[index]*2.0;
            double t1328 = 1/pow(t1327,2.0/3.0);
            double t1329 = gamma_aa[index]*mu_*t1324*t1325*t1326*t1328*(1.0/4.0);
            double t1330 = t1329+1.0;
            double t1331 = 1/t1330;
            double t1332 = kp-kp*t1331+1.0;
            double t1333 = C_k*C_k;
            double t1334 = pow(rho_a[index],4.0/3.0);
            double t1335 = 1/(tau_a[index]*tau_a[index]);
            double t1336 = 1/t1309;
            double t1337 = 1/pow(t1309,1.2E1);
            double t1338 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t1339 = gamma_aa[index]*mu_*t1324*t1325*t1328*t1338*(1.0/2.0);
            double t1340 = 1/pow(t1327,5.0/3.0);
            double t1341 = gamma_aa[index]*mu_*t1340*t1324*t1325*t1326*(1.0/3.0);
            double t1342 = t1341+t1339;
            double t1343 = a_1*t1310*t1336;
            double t1344 = a_10*t1312*t1314*t1323;
            double t1345 = a_11*t1310*t1312*t1314*t1315;
            double t1346 = a_2*t1311*t1312;
            double t1347 = a_3*t1310*t1312*t1316;
            double t1348 = a_4*t1313*t1317;
            double t1349 = a_5*t1310*t1313*t1318;
            double t1350 = a_6*t1312*t1313*t1319;
            double t1351 = a_7*t1310*t1320*t1312*t1313;
            double t1352 = a_8*t1321*t1314;
            double t1353 = a_9*t1310*t1322*t1314;
            double t1354 = t1350+t1351+t1343+t1352+t1344+t1353+t1345+t1346+t1347+t1348+t1349+1.0;
            double t1355 = 1/(t1330*t1330);
            double t1356 = C_k*a_1*t1305*t1306*t1336*(5.0/3.0);
            double t1357 = C_k*a_2*t1310*t1311*t1305*t1306*(1.0E1/3.0);
            double t1358 = C_k*a_10*t1310*t1305*t1314*t1323*t1306*(5.0E1/3.0);
            double t1359 = C_k*a_11*t1312*t1305*t1314*t1306*t1315*(5.5E1/3.0);
            double t1360 = C_k*a_3*t1312*t1305*t1306*t1316*5.0;
            double t1361 = C_k*a_4*t1310*t1312*t1305*t1306*t1317*(2.0E1/3.0);
            double t1362 = C_k*a_5*t1313*t1305*t1306*t1318*(2.5E1/3.0);
            double t1363 = C_k*a_6*t1310*t1313*t1305*t1306*t1319*1.0E1;
            double t1364 = C_k*a_7*t1320*t1312*t1313*t1305*t1306*(3.5E1/3.0);
            double t1365 = C_k*a_8*t1310*t1312*t1321*t1313*t1305*t1306*(4.0E1/3.0);
            double t1366 = C_k*a_9*t1322*t1305*t1314*t1306*1.5E1;
            double t1367 = t1360+t1361+t1362+t1363+t1364+t1356+t1365+t1357+t1366+t1358+t1359-C_k*a_1*t1310*t1311* \
               t1305*t1306*(5.0/3.0)-C_k*a_2*t1312*t1305*t1306*t1316*(1.0E1/3.0)-C_k*a_4*t1313*t1305*t1306*t1318* \
               (2.0E1/3.0)-C_k*a_8*t1322*t1305*t1314*t1306*(4.0E1/3.0)-C_k*a_10*t1312*t1305*t1314*t1306*t1315*(5.0E1/ \
               3.0)-C_k*a_3*t1310*t1312*t1305*t1306*t1317*5.0-C_k*a_5*t1310*t1313*t1305*t1306*t1319*(2.5E1/3.0)-C_k* \
               a_6*t1320*t1312*t1313*t1305*t1306*1.0E1-C_k*a_9*t1310*t1305*t1314*t1323*t1306*1.5E1-C_k*a_11*t1310* \
               t1312*t1305*t1314*t1306*t1337*(5.5E1/3.0)-C_k*a_7*t1310*t1312*t1321*t1313*t1305*t1306*(3.5E1/3.0);
            double t1368 = c0f*t1197*t1199*2.0;
            double t1370 = c0p*t1184*t1193*2.0;
            double t1369 = -t1370+t1368;
            double t1371 = 1/pow(rho_b[index],1.0/3.0);
            double t1372 = c*t1371;
            double t1373 = sqrt(t1372);
            double t1374 = pow(t1372,3.0/2.0);
            double t1375 = 1/pow(rho_b[index],2.0/3.0);
            double t1376 = b1p*t1373;
            double t1377 = b3p*t1374;
            double t1378 = b4p*t1084*t1375;
            double t1379 = b2p*c*t1371;
            double t1380 = t1376+t1377+t1378+t1379;
            double t1381 = 1/t1380;
            double t1382 = t1090*t1381*(1.0/2.0);
            double t1383 = t1382+1.0;
            double t1384 = log(t1383);
            double t1385 = a1p*c*t1371;
            double t1386 = t1385+1.0;
            double t1387 = c0p*t1384*t1386*2.0;
            double t1388 = t1102*t1121*t1124*t1116*t1127;
            double t1389 = Aa*t1102*t1121*t1151*t1139*t1149*t1158*2.0;
            double t1390 = gamma_aa[index]*gcab*t1203*(1.6E1/3.0);
            double t1391 = gamma_aa[index]*gcab*t1200*t1202*t1203*1.6E1;
            double t1392 = gamma_aa[index]*t1201*t1202*t1203*t1208*(1.6E1/3.0);
            double t1393 = gamma_aa[index]*t1200*t1201*t1203*1.6E1;
            double t1394 = t1390+t1391+t1392+t1393;
            double t1395 = 1/(t1216*t1216);
            double t1396 = gamma_aa[index]*gamma_aa[index];
            double t1397 = 1/pow(rho_a[index],2.2E1/3.0);
            double t1398 = gamma_aa[index]*gcab*t1203*(8.0/3.0);
            double t1399 = gamma_aa[index]*t1200*t1201*t1203*(8.0/3.0);
            double t1400 = t1398+t1399;
            double t1401 = 1/(t1223*t1223);
            double t1402 = 1/pow(rho_a[index],1.4E1/3.0);
            double t1403 = 1/(t1214*t1214);
            double t1404 = 1/(t1219*t1219);
            double t1405 = gamma_aa[index]*gcab*t1203*4.0;
            double t1406 = gamma_aa[index]*gcab*t1200*t1202*t1203*4.0;
            double t1407 = gamma_aa[index]*t1200*t1201*t1203*8.0;
            double t1408 = t1405+t1406+t1407;
            double t1488 = t1199*t1280*t1285*t1286;
            double t1409 = t1192+t1302-t1303-t1488;
            double t1410 = gcaa*gcaa;
            double t1411 = t1396*t1396;
            double t1412 = t1410*t1410;
            double t1413 = 1/pow(rho_a[index],3.2E1/3.0);
            double t1414 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t1415 = 1/pow(rho_a[index],1.6E1/3.0);
            double t1416 = t1102*t1196*t1369;
            double t1417 = t1370+t1416;
            double t1418 = tau_a[index]-1.0/1.0E20;
            double t1419 = ( (t1418 > 0.0) ?  1.0 : 0.0 ) ;
            double t1420 = tau_a[index]*2.0;
            double t1421 = 1/rho_a[index];
            double t1448 = gamma_aa[index]*t1421*(1.0/4.0);
            double t1422 = t1420-t1448;
            double t1423 = t1305*t1422*(1.0/2.0);
            double t1424 = t1423-1.0;
            double t1425 = t1424*t1419;
            double t1426 = t1425+1.0;
            double t1427 = gamma_aa[index]*gcaa*t1204*4.0;
            double t1428 = gamma_aa[index]*gcaa*t1396*t1410*t1414*4.0;
            double t1429 = t1396*t1410*t1415*6.0;
            double t1430 = t1411*t1412*t1413;
            double t1431 = t1430+t1427+t1428+t1429+1.0;
            double t1432 = 1/t1431;
            double t1433 = gamma_aa[index]*gcaa*t1204;
            double t1434 = t1433+1.0;
            double t1435 = 1/t1434;
            double t1436 = gamma_aa[index]*gcaa*t1204*3.0;
            double t1437 = gamma_aa[index]*gcaa*t1396*t1410*t1414;
            double t1438 = t1396*t1410*t1415*3.0;
            double t1439 = t1436+t1437+t1438+1.0;
            double t1440 = 1/t1439;
            double t1441 = gamma_aa[index]*gcaa*t1204*2.0;
            double t1442 = t1396*t1410*t1415;
            double t1443 = t1441+t1442+1.0;
            double t1444 = 1/t1443;
            double t1445 = 1/pow(rho_a[index],1.9E1/3.0);
            double t1446 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t1447 = 1/pow(rho_a[index],3.5E1/3.0);
            double t1449 = 1/pow(rho_a[index],1.0E1);
            double t1450 = 1/(t1434*t1434);
            double t1451 = gamma_aa[index]*gcaa*t1203*(3.2E1/3.0);
            double t1452 = gamma_aa[index]*gcaa*t1396*t1410*t1446*3.2E1;
            double t1453 = t1396*t1410*t1445*3.2E1;
            double t1454 = t1411*t1412*t1447*(3.2E1/3.0);
            double t1455 = t1451+t1452+t1453+t1454;
            double t1456 = gamma_aa[index]*gcaa*t1203*(1.6E1/3.0);
            double t1457 = t1396*t1410*t1445*(1.6E1/3.0);
            double t1458 = t1456+t1457;
            double t1459 = gamma_aa[index]*gcaa*t1203*8.0;
            double t1460 = gamma_aa[index]*gcaa*t1396*t1410*t1446*8.0;
            double t1461 = t1396*t1410*t1445*1.6E1;
            double t1462 = t1460+t1461+t1459;
            double t1463 = 1/(t1439*t1439);
            double t1464 = 1/(t1431*t1431);
            double t1465 = 1/pow(rho_a[index],3.8E1/3.0);
            double t1466 = 1/(t1443*t1443);
            double t1467 = ccaa4*t1411*t1412*t1413*t1432;
            double t1468 = ccaa1*gamma_aa[index]*gcaa*t1204*t1435;
            double t1469 = ccaa3*gamma_aa[index]*gcaa*t1396*t1410*t1440*t1414;
            double t1470 = ccaa2*t1396*t1410*t1415*t1444;
            double t1471 = ccaa0+t1470+t1467+t1468+t1469;
            double t1472 = 1/(t1168*t1168*t1168);
            double t1473 = b4f*t1084*t1204*(1.0E1/9.0);
            double t1474 = b2f*c*t1287*(4.0/9.0);
            double t1475 = b3f*t1084*t1176*t1204*(1.0/1.2E1);
            double t1476 = b1f*c*t1176*t1287*(2.0/9.0);
            double t1477 = b3f*c*t1161*t1287*(2.0/3.0);
            double t1478 = t1473+t1474+t1475+t1476+t1477-b1f*t1084*t1204*t1288*(1.0/3.6E1);
            double t1479 = t1199*t1280*t1286*t1478;
            double t1481 = t1184*t1185*t1186*t1298;
            double t1482 = 1/(t1179*t1179);
            double t1483 = 1/(t1168*t1168*t1168*t1168);
            double t1484 = t1103*t1199*t1289*t1482*t1483*(1.0/2.0);
            double t1485 = t1090*t1184*t1290*t1299*t1300*(1.0/2.0);
            double t1486 = a1f*c*t1169*t1280*t1285*t1286*(2.0/3.0);
            double t1487 = a1p*c*t1191*t1185*t1186*t1169*(2.0/3.0);
            double t1489 = t1102*t1196*t1409;
            double t1490 = ccaa4*t1411*t1412*t1432*t1447*(3.2E1/3.0);
            double t1491 = ccaa1*gamma_aa[index]*gcaa*t1203*t1435*(8.0/3.0);
            double t1492 = ccaa3*gamma_aa[index]*gcaa*t1396*t1410*t1440*t1446*8.0;
            double t1493 = ccaa2*t1396*t1410*t1444*t1445*(1.6E1/3.0);
            double t1496 = ccaa1*t1396*t1410*t1450*t1445*(8.0/3.0);
            double t1497 = ccaa3*gamma_aa[index]*gcaa*t1396*t1410*t1414*t1462*t1463;
            double t1498 = ccaa4*t1411*t1412*t1413*t1455*t1464;
            double t1499 = ccaa2*t1396*t1410*t1415*t1466*t1458;
            double t1494 = t1490+t1491+t1492+t1493-t1496-t1497-t1498-t1499;
            double t1495 = -t1192+t1303+t1489;
            v_rho_a_rho_a_[index] = (rho_a[index]*t1417+rho_b[index]*(t1387-t1102*t1196*(t1387-c0f*log((t1103* \
               (1.0/2.0))/(b1f*t1373+b3f*t1374+b2f*c*t1371+b4f*t1084*t1375)+1.0)*(a1f*c*t1371+1.0)*2.0))-t1077*(t1126+ \
               t1388+t1389))*(-ccab2*t1200*t1202*t1404*(gamma_aa[index]*gcab*t1402*(8.8E1/9.0)+t1200*t1396*t1397* \
               (3.2E1/9.0)+gamma_aa[index]*t1200*t1201*t1402*(8.8E1/9.0))+ccab4*1/(t1214*t1214*t1214)*t1208*t1209* \
               (t1394*t1394)*2.0+ccab2*t1200*t1202*1/(t1219*t1219*t1219)*(t1400*t1400)*2.0+ccab1*gamma_aa[index]* \
               gcab*t1226*t1402*(4.4E1/9.0)+ccab2*t1200*t1224*t1396*t1397*(3.2E1/9.0)-ccab1*t1200*t1395*t1396*t1397* \
               (3.2E1/9.0)-ccab4*t1208*t1209*t1403*(gamma_aa[index]*gcab*t1402*(1.76E2/9.0)+t1200*t1396*t1397*(6.4E1/ \
               3.0)+gamma_aa[index]*t1200*t1201*t1402*(1.76E2/3.0)+t1202*t1208*t1396*t1397*(6.4E1/3.0)+gamma_aa[index]* \
               gcab*t1200*t1202*t1402*(1.76E2/3.0)+gamma_aa[index]*t1201*t1202*t1208*t1402*(1.76E2/9.0)+gcab*t1200* \
               t1201*t1396*t1397*(1.28E2/3.0))+ccab4*t1202*t1208*t1227*t1396*t1397*(6.4E1/3.0)+ccab2*gamma_aa[index]* \
               t1200*t1201*t1224*t1402*(8.8E1/9.0)-ccab1*gamma_aa[index]*t1200*t1201*t1395*t1402*(4.4E1/9.0)+ccab3* \
               gcab*t1200*t1201*t1202*1/(t1223*t1223*t1223)*(t1408*t1408)*2.0+ccab3*gamma_aa[index]*gcab*t1200*t1202* \
               t1225*t1402*(4.4E1/3.0)+ccab4*gamma_aa[index]*t1201*t1202*t1208*t1227*t1402*(1.76E2/9.0)-ccab2*gamma_aa[index]* \
               t1200*t1201*t1203*t1400*t1404*(1.6E1/3.0)+ccab3*gcab*t1200*t1201*t1225*t1396*t1397*(3.2E1/3.0)+ccab1* \
               gcab*t1200*t1201*1/(t1216*t1216*t1216)*t1396*t1397*(3.2E1/9.0)-ccab3*gcab*t1200*t1201*t1202*t1401* \
               (gamma_aa[index]*gcab*t1402*(4.4E1/3.0)+t1200*t1396*t1397*(3.2E1/3.0)+gamma_aa[index]*t1200*t1201* \
               t1402*(8.8E1/3.0)+gamma_aa[index]*gcab*t1200*t1202*t1402*(4.4E1/3.0)+gcab*t1200*t1201*t1396*t1397* \
               (3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t1200*t1202*t1203*t1401*t1408*8.0-ccab4*gamma_aa[index]*t1201* \
               t1202*t1203*t1208*t1394*t1403*(3.2E1/3.0))-(X-1.0)*(t1332*t1367*2.0+rho_a[index]*t1332*(C_k*a_1*t1159* \
               t1305*t1336*(1.0E1/9.0)-a_1*t1311*t1333*t1334*t1335*(5.0E1/9.0)+a_2*t1311*t1333*t1334*t1335*(5.0E1/ \
               9.0)+a_1*t1310*t1333*t1316*t1334*t1335*(5.0E1/9.0)+a_10*t1314*t1323*t1333*t1334*t1335*2.5E2-a_2*t1310* \
               t1333*t1316*t1334*t1335*(2.0E2/9.0)+a_2*t1312*t1333*t1334*t1317*t1335*(5.0E1/3.0)+a_3*t1310*t1333* \
               t1316*t1334*t1335*(5.0E1/3.0)-a_3*t1312*t1333*t1334*t1317*t1335*5.0E1+a_4*t1312*t1333*t1334*t1317* \
               t1335*(1.0E2/3.0)+a_4*t1313*t1333*t1334*t1335*t1319*(5.0E2/9.0)-a_5*t1313*t1333*t1334*t1335*t1319* \
               (1.25E3/9.0)+a_6*t1313*t1333*t1334*t1335*t1319*(2.5E2/3.0)+a_8*t1314*t1323*t1333*t1334*t1335*2.0E2- \
               a_9*t1314*t1323*t1333*t1334*t1335*4.5E2-C_k*a_1*t1159*t1310*t1311*t1305*(1.0E1/9.0)+C_k*a_2*t1159* \
               t1310*t1311*t1305*(2.0E1/9.0)-C_k*a_2*t1159*t1312*t1305*t1316*(2.0E1/9.0)+C_k*a_3*t1159*t1312*t1305* \
               t1316*(1.0E1/3.0)-C_k*a_4*t1159*t1313*t1305*t1318*(4.0E1/9.0)+C_k*a_5*t1159*t1313*t1305*t1318*(5.0E1/ \
               9.0)-C_k*a_8*t1159*t1322*t1305*t1314*(8.0E1/9.0)+C_k*a_9*t1159*t1322*t1305*t1314*1.0E1+C_k*a_10*t1159* \
               t1310*t1305*t1314*t1323*(1.0E2/9.0)-C_k*a_10*t1159*t1312*t1305*t1314*t1315*(1.0E2/9.0)+C_k*a_11*t1159* \
               t1312*t1305*t1314*t1315*(1.1E2/9.0)-C_k*a_3*t1159*t1310*t1312*t1305*t1317*(1.0E1/3.0)+C_k*a_4*t1159* \
               t1310*t1312*t1305*t1317*(4.0E1/9.0)-C_k*a_5*t1159*t1310*t1313*t1305*t1319*(5.0E1/9.0)-C_k*a_6*t1159* \
               t1320*t1312*t1313*t1305*(2.0E1/3.0)+C_k*a_6*t1159*t1310*t1313*t1305*t1319*(2.0E1/3.0)+C_k*a_7*t1159* \
               t1320*t1312*t1313*t1305*(7.0E1/9.0)-C_k*a_9*t1159*t1310*t1305*t1314*t1323*1.0E1-a_10*t1310*t1314*t1315* \
               t1333*t1334*t1335*(5.0E3/9.0)+a_11*t1310*t1314*t1315*t1333*t1334*t1335*(2.75E3/9.0)+a_10*t1312*t1314* \
               t1333*t1334*t1335*t1337*(2.75E3/9.0)-a_11*t1312*t1314*t1333*t1334*t1335*t1337*(6.05E3/9.0)+a_3*t1310* \
               t1312*t1333*t1334*t1335*t1318*(1.0E2/3.0)-a_4*t1310*t1312*t1333*t1334*t1335*t1318*(8.0E2/9.0)+a_5* \
               t1310*t1320*t1313*t1333*t1334*t1335*(2.5E2/3.0)+a_5*t1310*t1312*t1333*t1334*t1335*t1318*(5.0E2/9.0) \
               -a_6*t1310*t1320*t1313*t1333*t1334*t1335*2.0E2+a_6*t1312*t1321*t1313*t1333*t1334*t1335*(3.5E2/3.0) \
               +a_7*t1310*t1320*t1313*t1333*t1334*t1335*(3.5E2/3.0)-a_7*t1312*t1321*t1313*t1333*t1334*t1335*(2.45E3/ \
               9.0)+a_8*t1312*t1321*t1313*t1333*t1334*t1335*(1.4E3/9.0)+a_9*t1310*t1314*t1315*t1333*t1334*t1335*2.5E2+ \
               a_11*t1310*t1312*t1314*t1333*t1334*t1335*1/pow(t1309,1.3E1)*(1.1E3/3.0)-C_k*a_11*t1159*t1310*t1312* \
               t1305*t1314*t1337*(1.1E2/9.0)-C_k*a_7*t1159*t1310*t1312*t1321*t1313*t1305*(7.0E1/9.0)+C_k*a_8*t1159* \
               t1310*t1312*t1321*t1313*t1305*(8.0E1/9.0)+a_7*t1310*t1312*t1313*t1322*t1333*t1334*t1335*(1.4E3/9.0) \
               -a_8*t1310*t1312*t1313*t1322*t1333*t1334*t1335*(3.2E3/9.0)+a_9*t1310*t1312*t1313*t1322*t1333*t1334* \
               t1335*2.0E2)-kp*t1342*t1354*t1355*2.0+kp*rho_a[index]*t1354*t1355*(gamma_aa[index]*mu_*t1340*t1324* \
               t1325*t1338*(4.0/3.0)+gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])* \
               t1324*t1325*t1328*(3.0/2.0)+gamma_aa[index]*mu_*t1324*t1325*t1326*1/pow(t1327,8.0/3.0)*(1.0E1/9.0) \
               )-kp*rho_a[index]*1/(t1330*t1330*t1330)*(t1342*t1342)*t1354*2.0-kp*rho_a[index]*t1342*t1355*t1367* \
               2.0)+(t1126+t1388+t1389+rho_a[index]*(-t1192+t1303+t1102*t1196*(t1192+t1302-t1199*t1280*t1285*t1286- \
               a1p*c*c0p*t1193*t1169*(2.0/3.0)))+t1077*(t1137-a1p*c*c0p*t1089*t1115*(2.0/3.0)-t1102*t1121*t1116*t1127* \
               t1138*4.0+t1102*t1124*t1116*t1127*t1156-t1102*t1121*t1124*t1127*t1239+t1096*t1097*t1102*t1121*t1124* \
               t1116*4.0+Aa*t1102*t1151*t1156*t1139*t1149*t1158*2.0-Aa*t1102*t1121*t1151*t1139*t1149*t1262*2.0+t1102* \
               t1121*t1151*t1139*t1158*t1270*t1272*t1277-Aa*a1a*c*t1089*t1102*t1121*t1139*t1149*t1158*(2.0/3.0))- \
               c0p*t1184*t1193*2.0-t1102*t1196*t1369)*(ccab1*gamma_aa[index]*gcab*t1203*t1226*(4.0/3.0)-ccab4*t1208* \
               t1209*t1394*t1403-ccab2*t1200*t1202*t1400*t1404+ccab2*gamma_aa[index]*t1200*t1201*t1203*t1224*(8.0/ \
               3.0)-ccab1*gamma_aa[index]*t1200*t1201*t1203*t1395*(4.0/3.0)+ccab3*gamma_aa[index]*gcab*t1200*t1202* \
               t1203*t1225*4.0+ccab4*gamma_aa[index]*t1201*t1202*t1203*t1208*t1227*(1.6E1/3.0)-ccab3*gcab*t1200*t1201* \
               t1202*t1401*t1408)*2.0-(ccab0+ccab1*gcab*t1201*t1226+ccab2*t1200*t1202*t1224+ccab4*t1208*t1209*t1227+ \
               ccab3*gcab*t1200*t1201*t1202*t1225)*(-t1077*(-t1251-t1259+t1279+t1304+t1102*t1121*t1124*t1127*(t1251+ \
               t1259-t1279-t1304-t1114*1/(t1108*t1108*t1108)*t1231*t1252*2.0+t1114*t1231*t1232*(b2f*c*t1228*(4.0/ \
               9.0)+b4f*t1084*t1229*(1.0E1/9.0)+b1f*c*t1129*t1228*(2.0/9.0)+b3f*c*t1080*t1228*(2.0/3.0)-b1f*t1084* \
               t1243*t1229*(1.0/3.6E1)+b3f*t1084*t1129*t1229*(1.0/1.2E1))+1/(t1111*t1111)*t1103*t1114*1/(t1108*t1108* \
               t1108*t1108)*t1252*(1.0/2.0)-a1f*c*c0f*t1112*t1228*(8.0/9.0)+a1f*c*t1089*t1231*t1232*t1237*(2.0/3.0) \
               -a1p*c*t1089*t1130*t1131*t1136*(2.0/3.0))-t1097*t1102*t1121*t1124*t1116*1.2E1+t1102*t1116*t1127*t1138* \
               t1156*8.0-t1102*t1121*t1116*t1127*t1260*2.0E1-t1102*t1121*t1127*t1138*t1239*8.0-t1102*t1124*t1116* \
               t1127*t1269+t1102*t1124*t1127*t1156*t1239*2.0+t1096*t1097*t1102*t1121*t1116*t1138*3.2E1-t1096*t1097* \
               t1102*t1124*t1116*t1156*8.0+t1096*t1097*t1102*t1121*t1124*t1239*8.0+a1p*c*t1089*t1130*t1131*t1136* \
               (2.0/3.0)+Aa*t1102*t1151*t1156*t1139*t1149*t1262*4.0-Aa*t1102*t1151*t1139*t1149*t1158*t1269*2.0-Aa* \
               t1102*t1121*t1151*t1139*t1149*(t1097*t1124*1.2E1+t1127*t1260*2.0E1-t1096*t1097*t1138*3.2E1)*2.0-t1102* \
               t1151*t1156*t1139*t1158*t1270*t1272*t1277*2.0+t1102*t1121*t1151*t1139*t1270*t1262*t1272*t1277*2.0- \
               t1102*t1121*t1151*1/(t1145*t1145*t1145)*t1139*t1158*t1270*t1278*2.0+t1102*t1121*t1151*t1139*t1158* \
               t1270*t1272*(b2a*c*t1228*(4.0/9.0)+b4a*t1084*t1229*(1.0E1/9.0)+b1a*c*t1129*t1228*(2.0/9.0)+b3a*c*t1080* \
               t1228*(2.0/3.0)-b1a*t1084*t1243*t1229*(1.0/3.6E1)+b3a*t1084*t1129*t1229*(1.0/1.2E1))+Aa*a1a*c*t1089* \
               t1102*t1156*t1139*t1149*t1158*(4.0/3.0)-Aa*a1a*c*t1089*t1102*t1121*t1139*t1149*t1262*(4.0/3.0)-Aa* \
               a1a*c*t1102*t1121*t1139*t1149*t1158*t1228*(8.0/9.0)+t1102*t1121*t1140*t1151*1/(t1145*t1145*t1145*t1145) \
               *t1139*1/(t1148*t1148)*t1158*t1278*(1.0/2.0)+a1a*c*t1089*t1102*t1121*t1139*t1158*t1270*t1272*t1277* \
               (2.0/3.0))+rho_a[index]*(-t1292-t1301+t1481+t1485+t1487+t1102*t1196*(t1292+t1301+t1484+t1486+t1479- \
               t1184*t1185*t1186*t1298-t1199*t1280*t1289*t1472*2.0-a1f*c*c0f*t1197*t1287*(8.0/9.0)-t1090*t1184*t1290* \
               t1299*t1300*(1.0/2.0)-a1p*c*t1191*t1185*t1186*t1169*(2.0/3.0)))+t1102*t1196*t1409*2.0+t1095*t1130* \
               t1131*t1136*2.0-t1191*t1184*t1185*t1186*2.0-a1p*c*c0p*t1089*t1115*(4.0/3.0)+a1p*c*c0p*t1193*t1169* \
               (4.0/3.0)-t1102*t1121*t1116*t1127*t1138*8.0+t1102*t1124*t1116*t1127*t1156*2.0-t1102*t1121*t1124*t1127* \
               t1239*2.0+t1096*t1097*t1102*t1121*t1124*t1116*8.0+Aa*t1102*t1151*t1156*t1139*t1149*t1158*4.0-Aa*t1102* \
               t1121*t1151*t1139*t1149*t1262*4.0+t1102*t1121*t1151*t1139*t1158*t1270*t1272*t1277*2.0-Aa*a1a*c*t1089* \
               t1102*t1121*t1139*t1149*t1158*(4.0/3.0))+t1417*t1426*t1494*2.0+t1426*t1471*t1495*2.0-rho_a[index]* \
               t1417*t1426*(ccaa1*gamma_aa[index]*gcaa*t1402*t1435*(8.8E1/9.0)-ccaa1*t1396*t1397*t1410*t1450*2.4E1+ \
               ccaa2*t1396*t1397*t1410*t1444*(3.04E2/9.0)+ccaa4*t1411*t1412*t1432*t1465*(1.12E3/9.0)-ccaa2*t1396* \
               t1410*t1445*t1466*t1458*(3.2E1/3.0)-ccaa4*t1411*t1412*t1455*t1464*t1447*(6.4E1/3.0)-ccaa2*t1396*t1410* \
               t1415*t1466*(gamma_aa[index]*gcaa*t1402*(1.76E2/9.0)+t1396*t1397*t1410*(3.04E2/9.0))-ccaa4*t1411*t1412* \
               t1413*t1464*(gamma_aa[index]*gcaa*t1402*(3.52E2/9.0)+t1396*t1397*t1410*(6.08E2/3.0)+t1411*t1412*t1465* \
               (1.12E3/9.0)+gamma_aa[index]*gcaa*t1396*t1410*t1449*2.88E2)+ccaa2*t1396*t1410*t1415*1/(t1443*t1443* \
               t1443)*(t1458*t1458)*2.0+ccaa4*t1411*t1412*t1413*1/(t1431*t1431*t1431)*(t1455*t1455)*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t1396*t1410*t1440*t1449*7.2E1+ccaa1*gamma_aa[index]*gcaa*t1396*t1410*1/(t1434*t1434*t1434)*t1449* \
               (1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t1396*t1410*t1414*(t1462*t1462)*1/(t1439*t1439*t1439)*2.0- \
               ccaa3*gamma_aa[index]*gcaa*t1396*t1410*t1414*t1463*(gamma_aa[index]*gcaa*t1402*(8.8E1/3.0)+t1396*t1397* \
               t1410*(3.04E2/3.0)+gamma_aa[index]*gcaa*t1396*t1410*t1449*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t1396* \
               t1410*t1462*t1463*t1446*1.6E1)+rho_a[index]*t1426*t1471*(-t1292-t1301+t1481+t1485+t1487+t1102*t1196* \
               (t1292+t1301-t1481+t1484-t1485+t1486-t1487+t1479-t1199*t1280*t1289*t1472*2.0-a1f*c*c0f*t1197*t1287* \
               (8.0/9.0)))-rho_a[index]*t1426*t1494*t1495*2.0+gamma_aa[index]*t1305*t1421*t1417*t1419*t1494*(1.0/ \
               4.0)+gamma_aa[index]*t1305*t1421*t1471*t1419*(-t1192+t1303+t1489)*(1.0/4.0);
        } else if (rho_a[index] > cutoff_) {
            double t5812 = 1/pow(rho_a[index],1.0/3.0);
            double t5813 = c*t5812;
            double t5814 = sqrt(t5813);
            double t5815 = b1f*t5814;
            double t5816 = pow(t5813,3.0/2.0);
            double t5817 = b3f*t5816;
            double t5818 = c*c;
            double t5819 = 1/pow(rho_a[index],2.0/3.0);
            double t5820 = b4f*t5818*t5819;
            double t5821 = b2f*c*t5812;
            double t5822 = t5820+t5821+t5815+t5817;
            double t5823 = 1/pow(rho_a[index],4.0/3.0);
            double t5824 = b1p*t5814;
            double t5825 = b3p*t5816;
            double t5826 = b4p*t5818*t5819;
            double t5827 = b2p*c*t5812;
            double t5828 = t5824+t5825+t5826+t5827;
            double t5829 = 1/pow(rho_a[index],5.0/3.0);
            double t5830 = 1/sqrt(t5813);
            double t5831 = 1/c0f;
            double t5832 = 1/t5822;
            double t5833 = t5831*t5832*(1.0/2.0);
            double t5834 = t5833+1.0;
            double t5835 = 1/c0p;
            double t5836 = 1/t5828;
            double t5837 = t5835*t5836*(1.0/2.0);
            double t5838 = t5837+1.0;
            double t5839 = a1p*c*t5812;
            double t5840 = t5839+1.0;
            double t5841 = 1/t5838;
            double t5842 = 1/(t5828*t5828);
            double t5843 = b4p*t5818*t5829*(2.0/3.0);
            double t5844 = b2p*c*t5823*(1.0/3.0);
            double t5845 = b1p*c*t5830*t5823*(1.0/6.0);
            double t5846 = b3p*c*t5814*t5823*(1.0/2.0);
            double t5847 = t5843+t5844+t5845+t5846;
            double t5848 = t5840*t5841*t5842*t5847;
            double t5849 = log(t5838);
            double t5850 = gamma_aa[index]*gamma_aa[index];
            double t5851 = gcaa*gcaa;
            double t5852 = t5850*t5850;
            double t5853 = t5851*t5851;
            double t5854 = 1/pow(rho_a[index],3.2E1/3.0);
            double t5855 = 1/pow(rho_a[index],8.0/3.0);
            double t5856 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]);
            double t5857 = 1/pow(rho_a[index],1.6E1/3.0);
            double t5858 = pow(2.0,1.0/3.0);
            double t5859 = t5858*2.0;
            double t5860 = t5859-2.0;
            double t5861 = two_13*2.0;
            double t5862 = t5861-2.0;
            double t5863 = 1/t5862;
            double t5864 = log(t5834);
            double t5865 = a1f*c*t5812;
            double t5866 = t5865+1.0;
            double t5867 = tau_a[index]-1.0/1.0E20;
            double t5868 = ( (t5867 > 0.0) ?  1.0 : 0.0 ) ;
            double t5869 = 1/tau_a[index];
            double t5870 = tau_a[index]*2.0;
            double t5871 = 1/rho_a[index];
            double t5919 = gamma_aa[index]*t5871*(1.0/4.0);
            double t5872 = t5870-t5919;
            double t5873 = t5872*t5869*(1.0/2.0);
            double t5874 = t5873-1.0;
            double t5875 = t5874*t5868;
            double t5876 = t5875+1.0;
            double t5877 = gamma_aa[index]*gcaa*t5855*4.0;
            double t5878 = gamma_aa[index]*gcaa*t5850*t5851*t5856*4.0;
            double t5879 = t5850*t5851*t5857*6.0;
            double t5880 = t5852*t5853*t5854;
            double t5881 = t5880+t5877+t5878+t5879+1.0;
            double t5882 = 1/t5881;
            double t5883 = gamma_aa[index]*gcaa*t5855;
            double t5884 = t5883+1.0;
            double t5885 = 1/t5884;
            double t5886 = gamma_aa[index]*gcaa*t5855*3.0;
            double t5887 = gamma_aa[index]*gcaa*t5850*t5851*t5856;
            double t5888 = t5850*t5851*t5857*3.0;
            double t5889 = t5886+t5887+t5888+1.0;
            double t5890 = 1/t5889;
            double t5891 = gamma_aa[index]*gcaa*t5855*2.0;
            double t5892 = t5850*t5851*t5857;
            double t5893 = t5891+t5892+1.0;
            double t5894 = 1/t5893;
            double t5895 = 1/pow(rho_a[index],1.9E1/3.0);
            double t5896 = 1/pow(rho_a[index],1.1E1/3.0);
            double t5897 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t5898 = 1/pow(rho_a[index],3.5E1/3.0);
            double t5899 = pow(rho_a[index],2.0/3.0);
            double t5900 = pow(rho_a[index],5.0/3.0);
            double t5901 = C_k*t5869*t5900;
            double t5902 = t5901+1.0;
            double t5903 = t5901-1.0;
            double t5904 = 1/(t5902*t5902);
            double t5905 = t5903*t5903;
            double t5906 = t5905*t5905;
            double t5907 = t5906*t5906;
            double t5908 = 1/pow(t5902,1.1E1);
            double t5909 = 1/(t5902*t5902*t5902);
            double t5910 = 1/(t5902*t5902*t5902*t5902);
            double t5911 = 1/(t5902*t5902*t5902*t5902*t5902);
            double t5912 = 1/(t5902*t5902*t5902*t5902*t5902*t5902);
            double t5913 = 1/(t5902*t5902*t5902*t5902*t5902*t5902*t5902);
            double t5914 = 1/(t5902*t5902*t5902*t5902*t5902*t5902*t5902*t5902);
            double t5915 = 1/(t5902*t5902*t5902*t5902*t5902*t5902*t5902*t5902*t5902);
            double t5916 = 1/pow(t5902,1.0E1);
            double t5917 = c0f*t5864*t5866*2.0;
            double t5918 = c0p*t5840*t5849*2.0;
            double t5920 = 1/pow(rho_a[index],1.0E1);
            double t5921 = 1/pow(rho_a[index],2.2E1/3.0);
            double t5922 = 1/(t5884*t5884);
            double t5923 = gamma_aa[index]*gcaa*t5896*(3.2E1/3.0);
            double t5924 = gamma_aa[index]*gcaa*t5850*t5851*t5897*3.2E1;
            double t5925 = t5850*t5851*t5895*3.2E1;
            double t5926 = t5852*t5853*t5898*(3.2E1/3.0);
            double t5927 = t5923+t5924+t5925+t5926;
            double t5928 = gamma_aa[index]*gcaa*t5896*(1.6E1/3.0);
            double t5929 = t5850*t5851*t5895*(1.6E1/3.0);
            double t5930 = t5928+t5929;
            double t5931 = gamma_aa[index]*gcaa*t5896*8.0;
            double t5932 = gamma_aa[index]*gcaa*t5850*t5851*t5897*8.0;
            double t5933 = t5850*t5851*t5895*1.6E1;
            double t5934 = t5931+t5932+t5933;
            double t5935 = 1/(t5889*t5889);
            double t5936 = 1/pow(rho_a[index],1.4E1/3.0);
            double t5937 = 1/(t5881*t5881);
            double t5938 = 1/pow(rho_a[index],3.8E1/3.0);
            double t5939 = 1/(t5893*t5893);
            double t5940 = ccaa4*t5852*t5853*t5854*t5882;
            double t5941 = ccaa1*gamma_aa[index]*gcaa*t5855*t5885;
            double t5942 = ccaa3*gamma_aa[index]*gcaa*t5850*t5851*t5890*t5856;
            double t5943 = ccaa2*t5850*t5851*t5857*t5894;
            double t5944 = ccaa0+t5940+t5941+t5942+t5943;
            double t5945 = 1/t5834;
            double t5946 = b4f*t5818*t5829*(2.0/3.0);
            double t5947 = b2f*c*t5823*(1.0/3.0);
            double t5948 = b1f*c*t5830*t5823*(1.0/6.0);
            double t5949 = b3f*c*t5814*t5823*(1.0/2.0);
            double t5950 = t5946+t5947+t5948+t5949;
            double t5951 = 1/(t5822*t5822);
            double t5952 = 1/pow(rho_a[index],7.0/3.0);
            double t5953 = 1/pow(t5813,3.0/2.0);
            double t5954 = t5950*t5950;
            double t5955 = t5847*t5847;
            double t5956 = 1/(t5828*t5828*t5828);
            double t5957 = t5840*t5841*t5955*t5956*2.0;
            double t5958 = b4p*t5818*t5855*(1.0E1/9.0);
            double t5959 = b2p*c*t5952*(4.0/9.0);
            double t5960 = b3p*t5830*t5818*t5855*(1.0/1.2E1);
            double t5961 = b1p*c*t5830*t5952*(2.0/9.0);
            double t5962 = b3p*c*t5814*t5952*(2.0/3.0);
            double t5963 = t5960+t5961+t5962+t5958+t5959-b1p*t5818*t5855*t5953*(1.0/3.6E1);
            double t5964 = 1/(t5838*t5838);
            double t5965 = 1/(t5828*t5828*t5828*t5828);
            double t5966 = a1p*c*c0p*t5849*t5952*(8.0/9.0);
            double t5967 = a1f*c*c0f*t5823*t5864*(2.0/3.0);
            double t5968 = a1p*c*c0p*t5823*t5849*(2.0/3.0);
            double t5969 = ccaa4*t5852*t5853*t5882*t5898*(3.2E1/3.0);
            double t5970 = ccaa1*gamma_aa[index]*gcaa*t5885*t5896*(8.0/3.0);
            double t5971 = ccaa3*gamma_aa[index]*gcaa*t5850*t5851*t5890*t5897*8.0;
            double t5972 = ccaa2*t5850*t5851*t5894*t5895*(1.6E1/3.0);
            double t6009 = ccaa1*t5850*t5851*t5895*t5922*(8.0/3.0);
            double t6010 = ccaa3*gamma_aa[index]*gcaa*t5850*t5851*t5856*t5934*t5935;
            double t6011 = ccaa4*t5852*t5853*t5854*t5927*t5937;
            double t6012 = ccaa2*t5850*t5851*t5857*t5930*t5939;
            double t5973 = t5970+t5971+t5972+t5969-t6010-t6011-t6012-t6009;
            double t5974 = X-1.0;
            double t5975 = 1/(k*k);
            double t5976 = 1/kp;
            double t5977 = 1/(rho_a[index]*rho_a[index]);
            double t5978 = rho_a[index]*2.0;
            double t5979 = 1/pow(t5978,2.0/3.0);
            double t5980 = gamma_aa[index]*mu_*t5975*t5976*t5977*t5979*(1.0/4.0);
            double t5981 = t5980+1.0;
            double t5982 = 1/t5981;
            double t5983 = kp-kp*t5982+1.0;
            double t5984 = C_k*C_k;
            double t5985 = pow(rho_a[index],4.0/3.0);
            double t5986 = 1/(tau_a[index]*tau_a[index]);
            double t5987 = 1/t5902;
            double t5988 = 1/pow(t5902,1.2E1);
            double t5989 = t5848+t5967-t5968-t5866*t5950*t5951*t5945;
            double t5990 = t5860*t5863*t5989;
            double t5991 = 1/(t5981*t5981);
            double t5992 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t5993 = 1/pow(t5978,5.0/3.0);
            double t5994 = a_1*t5903*t5987;
            double t5995 = a_10*t5905*t5907*t5916;
            double t5996 = a_11*t5903*t5905*t5907*t5908;
            double t5997 = a_2*t5904*t5905;
            double t5998 = a_3*t5903*t5905*t5909;
            double t5999 = a_4*t5910*t5906;
            double t6000 = a_5*t5911*t5903*t5906;
            double t6001 = a_6*t5912*t5905*t5906;
            double t6002 = a_7*t5903*t5913*t5905*t5906;
            double t6003 = a_8*t5914*t5907;
            double t6004 = a_9*t5903*t5915*t5907;
            double t6005 = t5994+t5995+t5996+t5997+t5998+t5999+t6000+t6001+t6002+t6003+t6004+1.0;
            double t6006 = t5917-t5918;
            double t6007 = t5860*t5863*t6006;
            double t6008 = t5918+t6007;
            double t6013 = gamma_aa[index]*mu_*t5992*t5975*t5976*t5979*(1.0/2.0);
            double t6014 = gamma_aa[index]*mu_*t5975*t5993*t5976*t5977*(1.0/3.0);
            double t6015 = t6013+t6014;
            double t6016 = C_k*a_1*t5869*t5899*t5987*(5.0/3.0);
            double t6017 = C_k*a_2*t5869*t5899*t5903*t5904*(1.0E1/3.0);
            double t6018 = C_k*a_10*t5869*t5899*t5903*t5907*t5916*(5.0E1/3.0);
            double t6019 = C_k*a_11*t5869*t5899*t5905*t5907*t5908*(5.5E1/3.0);
            double t6020 = C_k*a_3*t5869*t5899*t5905*t5909*5.0;
            double t6021 = C_k*a_4*t5869*t5899*t5910*t5903*t5905*(2.0E1/3.0);
            double t6022 = C_k*a_5*t5869*t5899*t5911*t5906*(2.5E1/3.0);
            double t6023 = C_k*a_6*t5869*t5899*t5903*t5912*t5906*1.0E1;
            double t6024 = C_k*a_7*t5869*t5899*t5913*t5905*t5906*(3.5E1/3.0);
            double t6025 = C_k*a_8*t5869*t5899*t5903*t5905*t5914*t5906*(4.0E1/3.0);
            double t6026 = C_k*a_9*t5869*t5899*t5915*t5907*1.5E1;
            double t6027 = t6020+t6021+t6022+t6023+t6024+t6016+t6025+t6017+t6026+t6018+t6019-C_k*a_1*t5869*t5899* \
               t5903*t5904*(5.0/3.0)-C_k*a_2*t5869*t5899*t5905*t5909*(1.0E1/3.0)-C_k*a_4*t5869*t5899*t5911*t5906* \
               (2.0E1/3.0)-C_k*a_8*t5869*t5899*t5915*t5907*(4.0E1/3.0)-C_k*a_10*t5869*t5899*t5905*t5907*t5908*(5.0E1/ \
               3.0)-C_k*a_3*t5869*t5899*t5910*t5903*t5905*5.0-C_k*a_5*t5869*t5899*t5903*t5912*t5906*(2.5E1/3.0)-C_k* \
               a_6*t5869*t5899*t5913*t5905*t5906*1.0E1-C_k*a_9*t5869*t5899*t5903*t5907*t5916*1.5E1-C_k*a_11*t5869* \
               t5899*t5903*t5905*t5907*t5988*(5.5E1/3.0)-C_k*a_7*t5869*t5899*t5903*t5905*t5914*t5906*(3.5E1/3.0);
            v_rho_a_rho_a_[index] = t5876*t5944*(-t5848+t5968+t5860*t5863*(t5848+t5967-t5866*t5950*t5951*t5945- \
               a1p*c*c0p*t5823*t5849*(2.0/3.0)))*2.0-t5974*t5983*t6027*2.0+t5876*t5973*(t5918+t5860*t5863*(t5917- \
               c0p*t5840*t5849*2.0))*2.0-rho_a[index]*t5876*t6008*(ccaa1*gamma_aa[index]*gcaa*t5885*t5936*(8.8E1/ \
               9.0)+ccaa2*t5850*t5851*t5894*t5921*(3.04E2/9.0)+ccaa4*t5852*t5853*t5882*t5938*(1.12E3/9.0)-ccaa1*t5850* \
               t5851*t5921*t5922*2.4E1-ccaa2*t5850*t5851*t5895*t5930*t5939*(3.2E1/3.0)-ccaa4*t5852*t5853*t5898*t5927* \
               t5937*(6.4E1/3.0)-ccaa2*t5850*t5851*t5857*t5939*(gamma_aa[index]*gcaa*t5936*(1.76E2/9.0)+t5850*t5851* \
               t5921*(3.04E2/9.0))-ccaa4*t5852*t5853*t5854*t5937*(gamma_aa[index]*gcaa*t5936*(3.52E2/9.0)+t5850*t5851* \
               t5921*(6.08E2/3.0)+t5852*t5853*t5938*(1.12E3/9.0)+gamma_aa[index]*gcaa*t5850*t5851*t5920*2.88E2)+ccaa2* \
               t5850*t5851*t5857*1/(t5893*t5893*t5893)*(t5930*t5930)*2.0+ccaa4*t5852*t5853*t5854*1/(t5881*t5881*t5881) \
               *(t5927*t5927)*2.0+ccaa3*gamma_aa[index]*gcaa*t5850*t5851*t5890*t5920*7.2E1+ccaa1*gamma_aa[index]* \
               gcaa*t5850*t5851*1/(t5884*t5884*t5884)*t5920*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t5850*t5851*t5856* \
               1/(t5889*t5889*t5889)*(t5934*t5934)*2.0-ccaa3*gamma_aa[index]*gcaa*t5850*t5851*t5856*t5935*(gamma_aa[index]* \
               gcaa*t5936*(8.8E1/3.0)+t5850*t5851*t5921*(3.04E2/3.0)+gamma_aa[index]*gcaa*t5850*t5851*t5920*7.2E1) \
               -ccaa3*gamma_aa[index]*gcaa*t5850*t5851*t5897*t5934*t5935*1.6E1)-rho_a[index]*t5974*t5983*(C_k*a_1* \
               t5812*t5869*t5987*(1.0E1/9.0)-a_1*t5904*t5984*t5985*t5986*(5.0E1/9.0)+a_2*t5904*t5984*t5985*t5986* \
               (5.0E1/9.0)+a_1*t5903*t5909*t5984*t5985*t5986*(5.0E1/9.0)+a_10*t5907*t5916*t5984*t5985*t5986*2.5E2+ \
               a_2*t5910*t5905*t5984*t5985*t5986*(5.0E1/3.0)-a_2*t5903*t5909*t5984*t5985*t5986*(2.0E2/9.0)-a_3*t5910* \
               t5905*t5984*t5985*t5986*5.0E1+a_3*t5903*t5909*t5984*t5985*t5986*(5.0E1/3.0)+a_4*t5910*t5905*t5984* \
               t5985*t5986*(1.0E2/3.0)+a_4*t5912*t5906*t5984*t5985*t5986*(5.0E2/9.0)-a_5*t5912*t5906*t5984*t5985* \
               t5986*(1.25E3/9.0)+a_6*t5912*t5906*t5984*t5985*t5986*(2.5E2/3.0)+a_8*t5907*t5916*t5984*t5985*t5986* \
               2.0E2-a_9*t5907*t5916*t5984*t5985*t5986*4.5E2-C_k*a_1*t5812*t5869*t5903*t5904*(1.0E1/9.0)+C_k*a_2* \
               t5812*t5869*t5903*t5904*(2.0E1/9.0)-C_k*a_2*t5812*t5869*t5905*t5909*(2.0E1/9.0)+C_k*a_3*t5812*t5869* \
               t5905*t5909*(1.0E1/3.0)-C_k*a_4*t5812*t5869*t5911*t5906*(4.0E1/9.0)+C_k*a_5*t5812*t5869*t5911*t5906* \
               (5.0E1/9.0)-C_k*a_8*t5812*t5869*t5915*t5907*(8.0E1/9.0)+C_k*a_9*t5812*t5869*t5915*t5907*1.0E1+C_k* \
               a_10*t5812*t5869*t5903*t5907*t5916*(1.0E2/9.0)-C_k*a_10*t5812*t5869*t5905*t5907*t5908*(1.0E2/9.0)+ \
               C_k*a_11*t5812*t5869*t5905*t5907*t5908*(1.1E2/9.0)-C_k*a_3*t5812*t5869*t5910*t5903*t5905*(1.0E1/3.0) \
               +C_k*a_4*t5812*t5869*t5910*t5903*t5905*(4.0E1/9.0)-C_k*a_5*t5812*t5869*t5903*t5912*t5906*(5.0E1/9.0) \
               +C_k*a_6*t5812*t5869*t5903*t5912*t5906*(2.0E1/3.0)-C_k*a_6*t5812*t5869*t5913*t5905*t5906*(2.0E1/3.0) \
               +C_k*a_7*t5812*t5869*t5913*t5905*t5906*(7.0E1/9.0)-C_k*a_9*t5812*t5869*t5903*t5907*t5916*1.0E1-a_10* \
               t5903*t5907*t5908*t5984*t5985*t5986*(5.0E3/9.0)+a_11*t5903*t5907*t5908*t5984*t5985*t5986*(2.75E3/9.0) \
               +a_10*t5905*t5907*t5984*t5985*t5986*t5988*(2.75E3/9.0)-a_11*t5905*t5907*t5984*t5985*t5986*t5988*(6.05E3/ \
               9.0)+a_3*t5911*t5903*t5905*t5984*t5985*t5986*(1.0E2/3.0)-a_4*t5911*t5903*t5905*t5984*t5985*t5986*(8.0E2/ \
               9.0)+a_5*t5911*t5903*t5905*t5984*t5985*t5986*(5.0E2/9.0)+a_5*t5903*t5913*t5906*t5984*t5985*t5986*(2.5E2/ \
               3.0)-a_6*t5903*t5913*t5906*t5984*t5985*t5986*2.0E2+a_6*t5905*t5914*t5906*t5984*t5985*t5986*(3.5E2/ \
               3.0)+a_7*t5903*t5913*t5906*t5984*t5985*t5986*(3.5E2/3.0)-a_7*t5905*t5914*t5906*t5984*t5985*t5986*(2.45E3/ \
               9.0)+a_8*t5905*t5914*t5906*t5984*t5985*t5986*(1.4E3/9.0)+a_9*t5903*t5907*t5908*t5984*t5985*t5986*2.5E2+ \
               a_11*1/pow(t5902,1.3E1)*t5903*t5905*t5907*t5984*t5985*t5986*(1.1E3/3.0)-C_k*a_11*t5812*t5869*t5903* \
               t5905*t5907*t5988*(1.1E2/9.0)-C_k*a_7*t5812*t5869*t5903*t5905*t5914*t5906*(7.0E1/9.0)+C_k*a_8*t5812* \
               t5869*t5903*t5905*t5914*t5906*(8.0E1/9.0)+a_7*t5903*t5905*t5906*t5915*t5984*t5985*t5986*(1.4E3/9.0) \
               -a_8*t5903*t5905*t5906*t5915*t5984*t5985*t5986*(3.2E3/9.0)+a_9*t5903*t5905*t5906*t5915*t5984*t5985* \
               t5986*2.0E2)-rho_a[index]*t5876*t5973*(-t5848+t5990+t5968)*2.0+rho_a[index]*t5876*t5944*(-t5957-t5966+ \
               t5860*t5863*(t5957+t5966-t5840*t5841*t5842*t5963-1/(t5822*t5822*t5822)*t5866*t5945*t5954*2.0+t5866* \
               t5951*t5945*(b2f*c*t5952*(4.0/9.0)+b4f*t5818*t5855*(1.0E1/9.0)+b1f*c*t5830*t5952*(2.0/9.0)+b3f*c*t5814* \
               t5952*(2.0/3.0)-b1f*t5818*t5855*t5953*(1.0/3.6E1)+b3f*t5830*t5818*t5855*(1.0/1.2E1))+1/(t5822*t5822* \
               t5822*t5822)*t5831*1/(t5834*t5834)*t5866*t5954*(1.0/2.0)-a1f*c*c0f*t5864*t5952*(8.0/9.0)-t5840*t5835* \
               t5955*t5964*t5965*(1.0/2.0)+a1f*c*t5823*t5950*t5951*t5945*(2.0/3.0)-a1p*c*t5823*t5841*t5842*t5847* \
               (2.0/3.0))+t5840*t5841*t5842*t5963+t5840*t5835*t5955*t5964*t5965*(1.0/2.0)+a1p*c*t5823*t5841*t5842* \
               t5847*(2.0/3.0))+kp*t5991*t5974*t6005*t6015*2.0+gamma_aa[index]*t5871*t5868*t5869*t5973*t6008*(1.0/ \
               4.0)+kp*rho_a[index]*t5991*t5974*t6015*t6027*2.0+gamma_aa[index]*t5871*t5868*t5869*t5944*(-t5848+t5990+ \
               t5968)*(1.0/4.0)-kp*rho_a[index]*t5991*t5974*t6005*(gamma_aa[index]*mu_*t5992*t5975*t5993*t5976*(4.0/ \
               3.0)+gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t5975*t5976*t5979* \
               (3.0/2.0)+gamma_aa[index]*mu_*t5975*t5976*t5977*1/pow(t5978,8.0/3.0)*(1.0E1/9.0))+kp*rho_a[index]* \
               1/(t5981*t5981*t5981)*t5974*t6005*(t6015*t6015)*2.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1501 = rho_a[index]+rho_b[index];
            double t1502 = 1/pow(t1501,1.0/3.0);
            double t1503 = c*t1502;
            double t1504 = sqrt(t1503);
            double t1505 = b1p*t1504;
            double t1506 = pow(t1503,3.0/2.0);
            double t1507 = b3p*t1506;
            double t1508 = c*c;
            double t1509 = 1/pow(t1501,2.0/3.0);
            double t1510 = b4p*t1508*t1509;
            double t1511 = b2p*c*t1502;
            double t1512 = t1510+t1511+t1505+t1507;
            double t1513 = 1/pow(t1501,4.0/3.0);
            double t1514 = 1/c0p;
            double t1515 = 1/t1512;
            double t1516 = t1514*t1515*(1.0/2.0);
            double t1517 = t1516+1.0;
            double t1518 = a1p*c*t1502;
            double t1519 = t1518+1.0;
            double t1520 = rho_a[index]-rho_b[index];
            double t1521 = t1520*t1520;
            double t1522 = 1/t1501;
            double t1523 = t1520*t1522;
            double t1524 = two_13*2.0;
            double t1525 = t1524-2.0;
            double t1526 = 1/t1525;
            double t1527 = 1/c0f;
            double t1528 = b1f*t1504;
            double t1529 = b3f*t1506;
            double t1530 = b4f*t1508*t1509;
            double t1531 = b2f*c*t1502;
            double t1532 = t1530+t1531+t1528+t1529;
            double t1533 = 1/t1532;
            double t1534 = t1533*t1527*(1.0/2.0);
            double t1535 = t1534+1.0;
            double t1536 = log(t1535);
            double t1537 = a1f*c*t1502;
            double t1538 = t1537+1.0;
            double t1539 = log(t1517);
            double t1549 = c0f*t1536*t1538*2.0;
            double t1550 = c0p*t1519*t1539*2.0;
            double t1540 = -t1550+t1549;
            double t1541 = t1523+1.0;
            double t1542 = pow(t1541,4.0/3.0);
            double t1543 = -t1523+1.0;
            double t1544 = pow(t1543,4.0/3.0);
            double t1545 = t1542+t1544-2.0;
            double t1546 = 1/(t1501*t1501);
            double t1577 = t1520*t1546;
            double t1547 = t1522-t1577;
            double t1548 = 1/(t1501*t1501*t1501*t1501);
            double t1551 = t1521*t1521;
            double t1552 = 1/pow(t1501,5.0/3.0);
            double t1553 = 1/sqrt(t1503);
            double t1554 = 1/t1517;
            double t1555 = 1/(t1512*t1512);
            double t1556 = b4p*t1552*t1508*(2.0/3.0);
            double t1557 = b2p*c*t1513*(1.0/3.0);
            double t1558 = b1p*c*t1513*t1553*(1.0/6.0);
            double t1559 = b3p*c*t1504*t1513*(1.0/2.0);
            double t1560 = t1556+t1557+t1558+t1559;
            double t1561 = t1560*t1554*t1519*t1555;
            double t1562 = 1/(t1501*t1501*t1501*t1501*t1501);
            double t1563 = 1/d2fz0;
            double t1564 = 1/Aa;
            double t1565 = b1a*t1504;
            double t1566 = b3a*t1506;
            double t1567 = b4a*t1508*t1509;
            double t1568 = b2a*c*t1502;
            double t1569 = t1565+t1566+t1567+t1568;
            double t1570 = 1/t1569;
            double t1571 = t1570*t1564*(1.0/2.0);
            double t1572 = t1571+1.0;
            double t1573 = log(t1572);
            double t1574 = a1a*c*t1502;
            double t1575 = t1574+1.0;
            double t1576 = pow(t1541,1.0/3.0);
            double t1578 = t1547*t1576*(4.0/3.0);
            double t1579 = pow(t1543,1.0/3.0);
            double t1723 = t1547*t1579*(4.0/3.0);
            double t1580 = t1578-t1723;
            double t1581 = t1551*t1548;
            double t1582 = t1581-1.0;
            double t1583 = 1/pow(rho_a[index],1.0/3.0);
            double t1584 = c*t1583;
            double t1585 = sqrt(t1584);
            double t1586 = b1f*t1585;
            double t1587 = pow(t1584,3.0/2.0);
            double t1588 = b3f*t1587;
            double t1589 = 1/pow(rho_a[index],2.0/3.0);
            double t1590 = b4f*t1508*t1589;
            double t1591 = b2f*c*t1583;
            double t1592 = t1590+t1591+t1586+t1588;
            double t1593 = 1/pow(rho_a[index],4.0/3.0);
            double t1594 = b1p*t1585;
            double t1595 = b3p*t1587;
            double t1596 = b4p*t1508*t1589;
            double t1597 = b2p*c*t1583;
            double t1598 = t1594+t1595+t1596+t1597;
            double t1599 = 1/pow(rho_a[index],5.0/3.0);
            double t1600 = 1/sqrt(t1584);
            double t1601 = 1/t1592;
            double t1602 = t1527*t1601*(1.0/2.0);
            double t1603 = t1602+1.0;
            double t1604 = 1/t1598;
            double t1605 = t1514*t1604*(1.0/2.0);
            double t1606 = t1605+1.0;
            double t1607 = a1p*c*t1583;
            double t1608 = t1607+1.0;
            double t1609 = 1/t1606;
            double t1610 = 1/(t1598*t1598);
            double t1611 = b4p*t1508*t1599*(2.0/3.0);
            double t1612 = b2p*c*t1593*(1.0/3.0);
            double t1613 = b1p*c*t1593*t1600*(1.0/6.0);
            double t1614 = b3p*c*t1593*t1585*(1.0/2.0);
            double t1615 = t1611+t1612+t1613+t1614;
            double t1616 = t1610*t1615*t1608*t1609;
            double t1617 = log(t1606);
            double t1618 = pow(2.0,1.0/3.0);
            double t1619 = t1618*2.0;
            double t1620 = t1619-2.0;
            double t1621 = log(t1603);
            double t1622 = a1f*c*t1583;
            double t1623 = t1622+1.0;
            double t1624 = gcab*gcab;
            double t1628 = 1/pow(rho_a[index],8.0/3.0);
            double t1629 = gamma_aa[index]*t1628*(1.0/2.0);
            double t1630 = 1/pow(rho_b[index],8.0/3.0);
            double t1631 = gamma_bb[index]*t1630*(1.0/2.0);
            double t1625 = t1631+t1629;
            double t1626 = t1625*t1625;
            double t1627 = 1/pow(rho_b[index],1.1E1/3.0);
            double t1632 = t1624*t1624;
            double t1633 = t1626*t1626;
            double t1634 = t1624*t1626*6.0;
            double t1635 = gcab*t1624*t1625*t1626*4.0;
            double t1636 = t1632*t1633;
            double t1637 = gcab*t1625*4.0;
            double t1638 = t1634+t1635+t1636+t1637+1.0;
            double t1639 = gcab*t1625;
            double t1640 = t1639+1.0;
            double t1641 = t1624*t1626;
            double t1642 = gcab*t1625*2.0;
            double t1643 = t1641+t1642+1.0;
            double t1644 = t1624*t1626*3.0;
            double t1645 = gcab*t1624*t1625*t1626;
            double t1646 = gcab*t1625*3.0;
            double t1647 = t1644+t1645+t1646+1.0;
            double t1648 = t1520*t1521*t1540*t1526*t1545*t1548*4.0;
            double t1649 = t1522+t1577;
            double t1650 = 1/t1535;
            double t1651 = 1/(t1532*t1532);
            double t1652 = b4f*t1552*t1508*(2.0/3.0);
            double t1653 = b2f*c*t1513*(1.0/3.0);
            double t1654 = b1f*c*t1513*t1553*(1.0/6.0);
            double t1655 = b3f*c*t1504*t1513*(1.0/2.0);
            double t1656 = t1652+t1653+t1654+t1655;
            double t1657 = a1f*c*c0f*t1513*t1536*(2.0/3.0);
            double t1658 = t1551*t1562*4.0;
            double t1659 = t1576*t1649*(4.0/3.0);
            double t1722 = t1579*t1649*(4.0/3.0);
            double t1660 = t1659-t1722;
            double t1661 = 1/t1572;
            double t1662 = 1/(t1569*t1569);
            double t1663 = b4a*t1552*t1508*(2.0/3.0);
            double t1664 = b2a*c*t1513*(1.0/3.0);
            double t1665 = b1a*c*t1513*t1553*(1.0/6.0);
            double t1666 = b3a*c*t1504*t1513*(1.0/2.0);
            double t1667 = t1663+t1664+t1665+t1666;
            double t1668 = t1526*t1545*t1563*t1582*t1575*t1661*t1662*t1667;
            double t1669 = 1/pow(rho_b[index],1.0/3.0);
            double t1670 = c*t1669;
            double t1671 = sqrt(t1670);
            double t1672 = b1f*t1671;
            double t1673 = pow(t1670,3.0/2.0);
            double t1674 = b3f*t1673;
            double t1675 = 1/pow(rho_b[index],2.0/3.0);
            double t1676 = b4f*t1508*t1675;
            double t1677 = b2f*c*t1669;
            double t1678 = t1672+t1674+t1676+t1677;
            double t1679 = 1/pow(rho_b[index],4.0/3.0);
            double t1680 = b1p*t1671;
            double t1681 = b3p*t1673;
            double t1682 = b4p*t1508*t1675;
            double t1683 = b2p*c*t1669;
            double t1684 = t1680+t1681+t1682+t1683;
            double t1685 = 1/pow(rho_b[index],5.0/3.0);
            double t1686 = 1/sqrt(t1670);
            double t1687 = 1/t1678;
            double t1688 = t1527*t1687*(1.0/2.0);
            double t1689 = t1688+1.0;
            double t1690 = 1/t1684;
            double t1691 = t1514*t1690*(1.0/2.0);
            double t1692 = t1691+1.0;
            double t1693 = a1p*c*t1669;
            double t1694 = t1693+1.0;
            double t1695 = 1/t1692;
            double t1696 = 1/(t1684*t1684);
            double t1697 = b4p*t1508*t1685*(2.0/3.0);
            double t1698 = b2p*c*t1679*(1.0/3.0);
            double t1699 = b1p*c*t1686*t1679*(1.0/6.0);
            double t1700 = b3p*c*t1671*t1679*(1.0/2.0);
            double t1701 = t1697+t1698+t1699+t1700;
            double t1702 = t1694*t1695*t1696*t1701;
            double t1703 = log(t1692);
            double t1704 = log(t1689);
            double t1705 = a1f*c*t1669;
            double t1706 = t1705+1.0;
            double t1707 = t1540*t1551*t1526*t1545*t1548;
            double t1708 = Aa*t1526*t1545*t1563*t1573*t1582*t1575*2.0;
            double t1709 = 1/pow(rho_a[index],1.1E1/3.0);
            double t1710 = 1/(t1647*t1647);
            double t1711 = 1/t1640;
            double t1712 = 1/(t1638*t1638);
            double t1713 = 1/(t1643*t1643);
            double t1714 = 1/t1638;
            double t1715 = 1/(t1640*t1640);
            double t1716 = 1/t1643;
            double t1717 = 1/t1647;
            double t1719 = a1p*c*c0p*t1513*t1539*(2.0/3.0);
            double t1724 = t1538*t1650*t1651*t1656;
            double t1718 = t1561+t1657-t1724-t1719;
            double t1720 = 1/pow(t1501,7.0/3.0);
            double t1721 = 1/pow(t1501,8.0/3.0);
            double t1725 = t1560*t1560;
            double t1726 = 1/pow(t1503,3.0/2.0);
            double t1727 = b4p*t1508*t1721*(1.0E1/9.0);
            double t1728 = b2p*c*t1720*(4.0/9.0);
            double t1729 = b1p*c*t1553*t1720*(2.0/9.0);
            double t1730 = b3p*c*t1504*t1720*(2.0/3.0);
            double t1731 = b3p*t1508*t1553*t1721*(1.0/1.2E1);
            double t1732 = t1730+t1731+t1727+t1728+t1729-b1p*t1508*t1721*t1726*(1.0/3.6E1);
            double t1733 = t1554*t1519*t1555*t1732;
            double t1734 = 1/(t1512*t1512*t1512);
            double t1735 = t1656*t1656;
            double t1736 = 1/(t1517*t1517);
            double t1737 = 1/(t1512*t1512*t1512*t1512);
            double t1738 = t1514*t1519*t1725*t1736*t1737*(1.0/2.0);
            double t1739 = 1/(t1501*t1501*t1501);
            double t1740 = a1p*c*t1513*t1560*t1554*t1555*(2.0/3.0);
            double t1741 = 1/(t1501*t1501*t1501*t1501*t1501*t1501);
            double t1742 = t1520*t1521*t1548*4.0;
            double t1743 = t1658+t1742;
            double t1744 = t1520*t1579*t1739*(8.0/3.0);
            double t1745 = 1/pow(t1541,2.0/3.0);
            double t1746 = t1547*t1649*t1745*(4.0/9.0);
            double t1747 = 1/pow(t1543,2.0/3.0);
            double t1748 = t1547*t1649*t1747*(4.0/9.0);
            double t1749 = t1744+t1746+t1748-t1520*t1576*t1739*(8.0/3.0);
            double t1750 = t1667*t1667;
            double t1751 = t1658-t1742;
            double t1752 = t1540*t1551*t1526*t1548*t1660;
            double t1753 = t1540*t1551*t1526*t1580*t1548;
            double t1754 = Aa*t1526*t1545*t1563*t1573*t1575*t1743*2.0;
            double t1755 = Aa*t1526*t1563*t1573*t1582*t1575*t1660*2.0;
            double t1756 = Aa*t1526*t1580*t1563*t1573*t1582*t1575*2.0;
            double t1757 = c0f*t1621*t1623*2.0;
            double t1759 = c0p*t1608*t1617*2.0;
            double t1758 = t1757-t1759;
            double t1760 = c0f*t1704*t1706*2.0;
            double t1762 = c0p*t1694*t1703*2.0;
            double t1761 = t1760-t1762;
            double t1763 = gamma_aa[index]*gcab*t1709*(8.0/3.0);
            double t1764 = gamma_aa[index]*t1624*t1625*t1709*(8.0/3.0);
            double t1765 = t1763+t1764;
            double t1766 = gamma_bb[index]*gcab*t1627*(8.0/3.0);
            double t1767 = gamma_bb[index]*t1624*t1625*t1627*(8.0/3.0);
            double t1768 = t1766+t1767;
            double t1769 = gamma_aa[index]*gcab*t1709*(1.6E1/3.0);
            double t1770 = gamma_aa[index]*gcab*t1624*t1626*t1709*1.6E1;
            double t1771 = gamma_aa[index]*t1632*t1625*t1626*t1709*(1.6E1/3.0);
            double t1772 = gamma_aa[index]*t1624*t1625*t1709*1.6E1;
            double t1773 = t1770+t1771+t1772+t1769;
            double t1774 = gamma_bb[index]*gcab*t1627*(1.6E1/3.0);
            double t1775 = gamma_bb[index]*gcab*t1624*t1626*t1627*1.6E1;
            double t1776 = gamma_bb[index]*t1632*t1625*t1626*t1627*(1.6E1/3.0);
            double t1777 = gamma_bb[index]*t1624*t1625*t1627*1.6E1;
            double t1778 = t1774+t1775+t1776+t1777;
            double t1779 = gamma_aa[index]*gcab*t1709*4.0;
            double t1780 = gamma_aa[index]*gcab*t1624*t1626*t1709*4.0;
            double t1781 = gamma_aa[index]*t1624*t1625*t1709*8.0;
            double t1782 = t1780+t1781+t1779;
            double t1783 = gamma_bb[index]*gcab*t1627*4.0;
            double t1784 = gamma_bb[index]*gcab*t1624*t1626*t1627*4.0;
            double t1785 = gamma_bb[index]*t1624*t1625*t1627*8.0;
            double t1786 = t1783+t1784+t1785;
            v_rho_a_rho_b_[index] = (t1550+t1707+t1708+rho_a[index]*(-t1616+t1526*t1620*(t1616-(1/(t1592*t1592) \
               *t1623*(b2f*c*t1593*(1.0/3.0)+b4f*t1508*t1599*(2.0/3.0)+b1f*c*t1593*t1600*(1.0/6.0)+b3f*c*t1593*t1585* \
               (1.0/2.0)))/t1603+a1f*c*c0f*t1593*t1621*(2.0/3.0)-a1p*c*c0p*t1593*t1617*(2.0/3.0))+a1p*c*c0p*t1593* \
               t1617*(2.0/3.0))+t1501*(t1561+t1648+t1668+t1753+t1756-a1p*c*c0p*t1513*t1539*(2.0/3.0)-t1540*t1551* \
               t1526*t1562*t1545*4.0-t1551*t1526*t1545*t1548*t1718-Aa*t1526*t1545*t1563*t1573*t1575*(t1658-t1520* \
               t1521*t1548*4.0)*2.0-Aa*a1a*c*t1513*t1526*t1545*t1563*t1573*t1582*(2.0/3.0))-c0p*t1608*t1617*2.0-t1526* \
               t1620*t1758)*(ccab1*gamma_bb[index]*gcab*t1627*t1711*(4.0/3.0)-ccab4*t1632*t1633*t1712*t1778-ccab2* \
               t1624*t1626*t1713*t1768-ccab1*gamma_bb[index]*t1624*t1625*t1627*t1715*(4.0/3.0)+ccab2*gamma_bb[index]* \
               t1624*t1625*t1627*t1716*(8.0/3.0)+ccab3*gamma_bb[index]*gcab*t1624*t1626*t1627*t1717*4.0+ccab4*gamma_bb[index]* \
               t1632*t1625*t1626*t1627*t1714*(1.6E1/3.0)-ccab3*gcab*t1624*t1625*t1626*t1710*t1786)+(ccab0+ccab1*gcab* \
               t1625*t1711+ccab4*t1632*t1633*t1714+ccab2*t1624*t1626*t1716+ccab3*gcab*t1624*t1625*t1626*t1717)*(t1752- \
               t1753+t1754+t1755-t1756+t1501*(t1740+t1733+t1738-t1554*t1519*t1725*t1734*2.0+t1551*t1526*t1580*t1548* \
               (t1561+t1657-t1724-t1719)-a1p*c*c0p*t1539*t1720*(8.0/9.0)-t1551*t1526*t1545*t1548*(t1740+t1733+t1738- \
               t1554*t1519*t1725*t1734*2.0+1/(t1532*t1532*t1532)*t1538*t1650*t1735*2.0-t1538*t1650*t1651*(b2f*c*t1720* \
               (4.0/9.0)+b4f*t1508*t1721*(1.0E1/9.0)+b1f*c*t1553*t1720*(2.0/9.0)+b3f*c*t1504*t1720*(2.0/3.0)-b1f* \
               t1508*t1721*t1726*(1.0/3.6E1)+b3f*t1508*t1553*t1721*(1.0/1.2E1))-1/(t1532*t1532*t1532*t1532)*1/(t1535* \
               t1535)*t1527*t1538*t1735*(1.0/2.0)+a1f*c*c0f*t1536*t1720*(8.0/9.0)-a1p*c*c0p*t1539*t1720*(8.0/9.0) \
               -a1f*c*t1513*t1650*t1651*t1656*(2.0/3.0))+t1540*t1551*t1526*t1562*t1580*4.0+t1521*t1540*t1526*t1545* \
               t1548*1.2E1-t1540*t1551*t1526*t1562*t1660*4.0-t1540*t1551*t1526*t1545*t1741*2.0E1-t1551*t1526*t1562* \
               t1545*t1718*8.0+t1540*t1551*t1526*t1548*t1749-t1551*t1526*t1548*t1660*t1718+t1520*t1521*t1540*t1526* \
               t1580*t1548*4.0+t1520*t1521*t1540*t1526*t1548*t1660*4.0+Aa*t1526*t1580*t1563*t1573*t1575*t1743*2.0+ \
               Aa*t1526*t1563*t1573*t1582*t1575*t1749*2.0-Aa*t1526*t1563*t1573*t1575*t1660*t1751*2.0+Aa*t1526*t1545* \
               t1563*t1573*t1575*(t1521*t1548*1.2E1-t1551*t1741*2.0E1)*2.0-t1526*t1580*t1563*t1582*t1575*t1661*t1662* \
               t1667+t1526*t1563*t1582*t1575*t1660*t1661*t1662*t1667+t1526*t1545*t1563*t1575*t1661*t1662*t1667*t1751+ \
               t1526*t1545*t1563*t1575*t1661*t1662*t1667*t1743-t1526*t1545*t1563*t1582*t1575*1/(t1569*t1569*t1569) \
               *t1661*t1750*2.0+t1526*t1545*t1563*t1582*t1575*t1661*t1662*(b2a*c*t1720*(4.0/9.0)+b4a*t1508*t1721* \
               (1.0E1/9.0)+b1a*c*t1553*t1720*(2.0/9.0)+b3a*c*t1504*t1720*(2.0/3.0)-b1a*t1508*t1721*t1726*(1.0/3.6E1) \
               +b3a*t1508*t1553*t1721*(1.0/1.2E1))+Aa*a1a*c*t1513*t1526*t1580*t1563*t1573*t1582*(2.0/3.0)-Aa*a1a* \
               c*t1513*t1526*t1563*t1573*t1582*t1660*(2.0/3.0)-Aa*a1a*c*t1513*t1526*t1545*t1563*t1573*t1751*(2.0/ \
               3.0)-Aa*a1a*c*t1513*t1526*t1545*t1563*t1573*t1743*(2.0/3.0)-Aa*a1a*c*t1526*t1545*t1563*t1573*t1582* \
               t1720*(8.0/9.0)+t1526*t1545*t1563*1/(t1572*t1572)*t1564*t1582*t1575*1/(t1569*t1569*t1569*t1569)*t1750* \
               (1.0/2.0)+a1a*c*t1513*t1526*t1545*t1563*t1582*t1661*t1662*t1667*(2.0/3.0))-t1560*t1554*t1519*t1555* \
               2.0+t1551*t1526*t1545*t1548*(t1561+t1657-t1724-t1719)*2.0+a1p*c*c0p*t1513*t1539*(4.0/3.0)+t1540*t1551* \
               t1526*t1562*t1545*8.0+Aa*t1526*t1545*t1563*t1573*t1575*(t1658-t1742)*2.0-t1526*t1545*t1563*t1582*t1575* \
               t1661*t1662*t1667*2.0+Aa*a1a*c*t1513*t1526*t1545*t1563*t1573*t1582*(4.0/3.0))-(rho_b[index]*(t1762+ \
               t1526*t1620*t1761)+rho_a[index]*(t1759+t1526*t1620*t1758)-t1501*(t1550+t1707+t1708))*(ccab4*t1632* \
               t1633*t1712*(gamma_aa[index]*gamma_bb[index]*t1624*t1627*t1709*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]* \
               t1632*t1626*t1627*t1709*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t1624*t1625*t1627*t1709*(1.28E2/ \
               3.0))-ccab2*t1624*1/(t1643*t1643*t1643)*t1626*t1765*t1768*2.0-ccab4*t1632*t1633*1/(t1638*t1638*t1638) \
               *t1773*t1778*2.0+ccab3*gcab*t1624*t1625*t1626*t1710*(gamma_aa[index]*gamma_bb[index]*t1624*t1627*t1709* \
               (3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t1624*t1625*t1627*t1709*(3.2E1/3.0))+ccab1*gamma_aa[index]* \
               gamma_bb[index]*t1624*t1627*t1715*t1709*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t1624*t1627* \
               t1716*t1709*(3.2E1/9.0)+ccab2*gamma_bb[index]*t1624*t1625*t1627*t1713*t1765*(8.0/3.0)+ccab2*gamma_aa[index]* \
               t1624*t1625*t1713*t1709*t1768*(8.0/3.0)-ccab3*gcab*t1624*t1625*t1626*1/(t1647*t1647*t1647)*t1782*t1786* \
               2.0+ccab2*gamma_aa[index]*gamma_bb[index]*t1632*t1626*t1627*t1713*t1709*(3.2E1/9.0)-ccab4*gamma_aa[index]* \
               gamma_bb[index]*t1632*t1626*t1627*t1714*t1709*(6.4E1/3.0)+ccab3*gamma_bb[index]*gcab*t1624*t1626*t1627* \
               t1710*t1782*4.0+ccab3*gamma_aa[index]*gcab*t1624*t1626*t1710*t1709*t1786*4.0+ccab4*gamma_bb[index]* \
               t1632*t1625*t1626*t1627*t1712*t1773*(1.6E1/3.0)+ccab4*gamma_aa[index]*t1632*t1625*t1626*t1712*t1709* \
               t1778*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t1624*t1625*t1627*t1717*t1709*(3.2E1/ \
               3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*1/(t1640*t1640*t1640)*t1624*t1625*t1627*t1709*(3.2E1/ \
               9.0))+(t1550+t1707+t1708-t1501*(-t1561+t1648-t1668+t1752+t1754+t1719+t1755+t1540*t1551*t1526*t1562* \
               t1545*4.0+t1551*t1526*t1545*t1548*t1718+Aa*a1a*c*t1513*t1526*t1545*t1563*t1573*t1582*(2.0/3.0))+rho_b[index]* \
               (-t1702+t1526*t1620*(t1702-(1/(t1678*t1678)*t1706*(b2f*c*t1679*(1.0/3.0)+b4f*t1508*t1685*(2.0/3.0) \
               +b1f*c*t1686*t1679*(1.0/6.0)+b3f*c*t1671*t1679*(1.0/2.0)))/t1689+a1f*c*c0f*t1679*t1704*(2.0/3.0)-a1p* \
               c*c0p*t1679*t1703*(2.0/3.0))+a1p*c*c0p*t1679*t1703*(2.0/3.0))-c0p*t1694*t1703*2.0-t1526*t1620*t1761) \
               *(ccab1*gamma_aa[index]*gcab*t1711*t1709*(4.0/3.0)-ccab4*t1632*t1633*t1712*t1773-ccab2*t1624*t1626* \
               t1713*t1765-ccab1*gamma_aa[index]*t1624*t1625*t1715*t1709*(4.0/3.0)+ccab2*gamma_aa[index]*t1624*t1625* \
               t1716*t1709*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t1624*t1626*t1717*t1709*4.0+ccab4*gamma_aa[index]* \
               t1632*t1625*t1626*t1714*t1709*(1.6E1/3.0)-ccab3*gcab*t1624*t1625*t1626*t1710*t1782);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t1788 = rho_a[index]+rho_b[index];
            double t1789 = 1/pow(t1788,1.0/3.0);
            double t1790 = c*t1789;
            double t1791 = sqrt(t1790);
            double t1792 = b1p*t1791;
            double t1793 = pow(t1790,3.0/2.0);
            double t1794 = b3p*t1793;
            double t1795 = c*c;
            double t1796 = 1/pow(t1788,2.0/3.0);
            double t1797 = b4p*t1795*t1796;
            double t1798 = b2p*c*t1789;
            double t1799 = t1792+t1794+t1797+t1798;
            double t1800 = 1/pow(t1788,4.0/3.0);
            double t1801 = 1/c0p;
            double t1802 = 1/t1799;
            double t1803 = t1801*t1802*(1.0/2.0);
            double t1804 = t1803+1.0;
            double t1805 = a1p*c*t1789;
            double t1806 = t1805+1.0;
            double t1807 = rho_a[index]-rho_b[index];
            double t1808 = t1807*t1807;
            double t1809 = 1/t1788;
            double t1810 = t1807*t1809;
            double t1811 = two_13*2.0;
            double t1812 = t1811-2.0;
            double t1813 = 1/t1812;
            double t1814 = 1/c0f;
            double t1815 = b1f*t1791;
            double t1816 = b3f*t1793;
            double t1817 = b4f*t1795*t1796;
            double t1818 = b2f*c*t1789;
            double t1819 = t1815+t1816+t1817+t1818;
            double t1820 = 1/t1819;
            double t1821 = t1820*t1814*(1.0/2.0);
            double t1822 = t1821+1.0;
            double t1823 = log(t1822);
            double t1824 = a1f*c*t1789;
            double t1825 = t1824+1.0;
            double t1826 = log(t1804);
            double t1837 = c0f*t1823*t1825*2.0;
            double t1838 = c0p*t1806*t1826*2.0;
            double t1827 = t1837-t1838;
            double t1828 = t1810+1.0;
            double t1829 = pow(t1828,4.0/3.0);
            double t1830 = -t1810+1.0;
            double t1831 = pow(t1830,4.0/3.0);
            double t1832 = t1831+t1829-2.0;
            double t1833 = 1/(t1788*t1788);
            double t1834 = t1833*t1807;
            double t1835 = t1834+t1809;
            double t1836 = 1/(t1788*t1788*t1788*t1788);
            double t1839 = t1808*t1808;
            double t1840 = 1/pow(t1788,5.0/3.0);
            double t1841 = 1/sqrt(t1790);
            double t1842 = 1/t1804;
            double t1843 = 1/(t1799*t1799);
            double t1844 = b4p*t1795*t1840*(2.0/3.0);
            double t1845 = b2p*c*t1800*(1.0/3.0);
            double t1846 = b1p*c*t1800*t1841*(1.0/6.0);
            double t1847 = b3p*c*t1791*t1800*(1.0/2.0);
            double t1848 = t1844+t1845+t1846+t1847;
            double t1849 = 1/(t1788*t1788*t1788*t1788*t1788);
            double t1850 = 1/d2fz0;
            double t1851 = 1/Aa;
            double t1852 = b1a*t1791;
            double t1853 = b3a*t1793;
            double t1854 = b4a*t1795*t1796;
            double t1855 = b2a*c*t1789;
            double t1856 = t1852+t1853+t1854+t1855;
            double t1857 = 1/t1856;
            double t1858 = t1851*t1857*(1.0/2.0);
            double t1859 = t1858+1.0;
            double t1860 = log(t1859);
            double t1861 = a1a*c*t1789;
            double t1862 = t1861+1.0;
            double t1863 = pow(t1828,1.0/3.0);
            double t1864 = t1835*t1863*(4.0/3.0);
            double t1865 = pow(t1830,1.0/3.0);
            double t1941 = t1835*t1865*(4.0/3.0);
            double t1866 = t1864-t1941;
            double t1867 = t1836*t1839;
            double t1868 = t1867-1.0;
            double t1869 = 1/pow(rho_b[index],1.0/3.0);
            double t1870 = c*t1869;
            double t1871 = sqrt(t1870);
            double t1872 = b1f*t1871;
            double t1873 = pow(t1870,3.0/2.0);
            double t1874 = b3f*t1873;
            double t1875 = 1/pow(rho_b[index],2.0/3.0);
            double t1876 = b4f*t1795*t1875;
            double t1877 = b2f*c*t1869;
            double t1878 = t1872+t1874+t1876+t1877;
            double t1879 = 1/pow(rho_b[index],4.0/3.0);
            double t1880 = b1p*t1871;
            double t1881 = b3p*t1873;
            double t1882 = b4p*t1795*t1875;
            double t1883 = b2p*c*t1869;
            double t1884 = t1880+t1881+t1882+t1883;
            double t1885 = 1/pow(rho_b[index],5.0/3.0);
            double t1886 = 1/sqrt(t1870);
            double t1887 = 1/t1878;
            double t1888 = t1814*t1887*(1.0/2.0);
            double t1889 = t1888+1.0;
            double t1890 = 1/t1884;
            double t1891 = t1801*t1890*(1.0/2.0);
            double t1892 = t1891+1.0;
            double t1893 = a1p*c*t1869;
            double t1894 = t1893+1.0;
            double t1895 = 1/t1892;
            double t1896 = 1/(t1884*t1884);
            double t1897 = b4p*t1795*t1885*(2.0/3.0);
            double t1898 = b2p*c*t1879*(1.0/3.0);
            double t1899 = b1p*c*t1886*t1879*(1.0/6.0);
            double t1900 = b3p*c*t1871*t1879*(1.0/2.0);
            double t1901 = t1897+t1898+t1899+t1900;
            double t1902 = t1894*t1895*t1896*t1901;
            double t1903 = log(t1892);
            double t1904 = pow(2.0,1.0/3.0);
            double t1905 = t1904*2.0;
            double t1906 = t1905-2.0;
            double t1907 = log(t1889);
            double t1908 = a1f*c*t1869;
            double t1909 = t1908+1.0;
            double t1910 = gcab*gcab;
            double t1914 = 1/pow(rho_a[index],8.0/3.0);
            double t1915 = gamma_aa[index]*t1914*(1.0/2.0);
            double t1916 = 1/pow(rho_b[index],8.0/3.0);
            double t1917 = gamma_bb[index]*t1916*(1.0/2.0);
            double t1911 = t1915+t1917;
            double t1912 = t1911*t1911;
            double t1913 = 1/pow(rho_b[index],1.1E1/3.0);
            double t1918 = t1910*t1910;
            double t1919 = t1912*t1912;
            double t1920 = t1910*t1912*6.0;
            double t1921 = gcab*t1910*t1911*t1912*4.0;
            double t1922 = t1918*t1919;
            double t1923 = gcab*t1911*4.0;
            double t1924 = t1920+t1921+t1922+t1923+1.0;
            double t1925 = gcab*t1911;
            double t1926 = t1925+1.0;
            double t1927 = t1910*t1912;
            double t1928 = gcab*t1911*2.0;
            double t1929 = t1927+t1928+1.0;
            double t1930 = t1910*t1912*3.0;
            double t1931 = gcab*t1910*t1911*t1912;
            double t1932 = gcab*t1911*3.0;
            double t1933 = t1930+t1931+t1932+1.0;
            double t1934 = a1p*c*c0p*t1800*t1826*(2.0/3.0);
            double t1935 = 1/t1929;
            double t1936 = 1/t1933;
            double t1937 = 1/t1926;
            double t1938 = 1/t1924;
            double t1939 = 1/pow(t1788,7.0/3.0);
            double t1940 = 1/pow(t1788,8.0/3.0);
            double t1942 = 1/t1822;
            double t1943 = 1/(t1819*t1819);
            double t1944 = b4f*t1795*t1840*(2.0/3.0);
            double t1945 = b2f*c*t1800*(1.0/3.0);
            double t1946 = b1f*c*t1800*t1841*(1.0/6.0);
            double t1947 = b3f*c*t1791*t1800*(1.0/2.0);
            double t1948 = t1944+t1945+t1946+t1947;
            double t1949 = t1825*t1942*t1943*t1948;
            double t1951 = t1806*t1842*t1843*t1848;
            double t1952 = a1f*c*c0f*t1800*t1823*(2.0/3.0);
            double t1950 = -t1951+t1934-t1952+t1949;
            double t1953 = t1848*t1848;
            double t1954 = 1/pow(t1790,3.0/2.0);
            double t1955 = b4p*t1795*t1940*(1.0E1/9.0);
            double t1956 = b2p*c*t1939*(4.0/9.0);
            double t1957 = b1p*c*t1841*t1939*(2.0/9.0);
            double t1958 = b3p*c*t1791*t1939*(2.0/3.0);
            double t1959 = b3p*t1795*t1841*t1940*(1.0/1.2E1);
            double t1960 = t1955+t1956+t1957+t1958+t1959-b1p*t1795*t1940*t1954*(1.0/3.6E1);
            double t1961 = 1/(t1799*t1799*t1799);
            double t1962 = t1806*t1842*t1961*t1953*2.0;
            double t1963 = t1948*t1948;
            double t1964 = 1/(t1804*t1804);
            double t1965 = 1/(t1799*t1799*t1799*t1799);
            double t1966 = t1833*2.0;
            double t1967 = 1/(t1788*t1788*t1788);
            double t1968 = t1807*t1967*2.0;
            double t1969 = t1966+t1968;
            double t1970 = t1835*t1835;
            double t1971 = a1p*c*c0p*t1826*t1939*(8.0/9.0);
            double t1972 = 1/(t1788*t1788*t1788*t1788*t1788*t1788);
            double t1973 = t1807*t1808*t1836*4.0;
            double t1974 = t1839*t1849*4.0;
            double t1975 = t1973+t1974;
            double t1976 = t1863*t1969*(4.0/3.0);
            double t1977 = 1/pow(t1828,2.0/3.0);
            double t1978 = t1970*t1977*(4.0/9.0);
            double t1979 = 1/pow(t1830,2.0/3.0);
            double t1980 = t1970*t1979*(4.0/9.0);
            double t1981 = t1980+t1976+t1978-t1865*t1969*(4.0/3.0);
            double t1982 = 1/t1859;
            double t1983 = 1/(t1856*t1856);
            double t1984 = b4a*t1795*t1840*(2.0/3.0);
            double t1985 = b2a*c*t1800*(1.0/3.0);
            double t1986 = b1a*c*t1800*t1841*(1.0/6.0);
            double t1987 = b3a*c*t1791*t1800*(1.0/2.0);
            double t1988 = t1984+t1985+t1986+t1987;
            double t1989 = t1988*t1988;
            double t1990 = 1/t1889;
            double t1991 = b4f*t1795*t1885*(2.0/3.0);
            double t1992 = b2f*c*t1879*(1.0/3.0);
            double t1993 = b1f*c*t1886*t1879*(1.0/6.0);
            double t1994 = b3f*c*t1871*t1879*(1.0/2.0);
            double t1995 = t1991+t1992+t1993+t1994;
            double t1996 = 1/(t1878*t1878);
            double t1997 = 1/pow(rho_b[index],7.0/3.0);
            double t1998 = 1/pow(t1870,3.0/2.0);
            double t1999 = t1995*t1995;
            double t2000 = t1901*t1901;
            double t2001 = 1/(t1884*t1884*t1884);
            double t2002 = t1894*t1895*t2000*t2001*2.0;
            double t2003 = b4p*t1795*t1916*(1.0E1/9.0);
            double t2004 = b2p*c*t1997*(4.0/9.0);
            double t2005 = b3p*t1795*t1886*t1916*(1.0/1.2E1);
            double t2006 = b1p*c*t1886*t1997*(2.0/9.0);
            double t2007 = b3p*c*t1871*t1997*(2.0/3.0);
            double t2189 = b1p*t1795*t1916*t1998*(1.0/3.6E1);
            double t2008 = t2003+t2004+t2005+t2006+t2007-t2189;
            double t2009 = 1/(t1892*t1892);
            double t2010 = 1/(t1884*t1884*t1884*t1884);
            double t2011 = a1p*c*c0p*t1903*t1997*(8.0/9.0);
            double t2012 = a1f*c*c0f*t1879*t1907*(2.0/3.0);
            double t2013 = a1p*c*c0p*t1879*t1903*(2.0/3.0);
            double t2014 = 1/tau_b[index];
            double t2015 = pow(rho_b[index],2.0/3.0);
            double t2016 = pow(rho_b[index],5.0/3.0);
            double t2017 = C_k*t2014*t2016;
            double t2018 = t2017+1.0;
            double t2019 = t2017-1.0;
            double t2020 = 1/(t2018*t2018);
            double t2021 = t2019*t2019;
            double t2022 = t2021*t2021;
            double t2023 = t2022*t2022;
            double t2024 = 1/pow(t2018,1.1E1);
            double t2025 = 1/(t2018*t2018*t2018);
            double t2026 = 1/(t2018*t2018*t2018*t2018);
            double t2027 = 1/(t2018*t2018*t2018*t2018*t2018);
            double t2028 = 1/(t2018*t2018*t2018*t2018*t2018*t2018);
            double t2029 = 1/(t2018*t2018*t2018*t2018*t2018*t2018*t2018);
            double t2030 = 1/(t2018*t2018*t2018*t2018*t2018*t2018*t2018*t2018);
            double t2031 = 1/(t2018*t2018*t2018*t2018*t2018*t2018*t2018*t2018*t2018);
            double t2032 = 1/pow(t2018,1.0E1);
            double t2033 = 1/(k*k);
            double t2034 = 1/kp;
            double t2035 = 1/(rho_b[index]*rho_b[index]);
            double t2036 = rho_b[index]*2.0;
            double t2037 = 1/pow(t2036,2.0/3.0);
            double t2038 = gamma_bb[index]*mu_*t2033*t2034*t2035*t2037*(1.0/4.0);
            double t2039 = t2038+1.0;
            double t2040 = 1/t2039;
            double t2041 = kp-kp*t2040+1.0;
            double t2042 = C_k*C_k;
            double t2043 = pow(rho_b[index],4.0/3.0);
            double t2044 = 1/(tau_b[index]*tau_b[index]);
            double t2045 = 1/t2018;
            double t2046 = 1/pow(t2018,1.2E1);
            double t2047 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
            double t2048 = gamma_bb[index]*mu_*t2033*t2034*t2037*t2047*(1.0/2.0);
            double t2049 = 1/pow(t2036,5.0/3.0);
            double t2050 = gamma_bb[index]*mu_*t2033*t2034*t2035*t2049*(1.0/3.0);
            double t2051 = t2050+t2048;
            double t2052 = a_1*t2045*t2019;
            double t2053 = a_10*t2021*t2023*t2032;
            double t2054 = a_11*t2021*t2023*t2024*t2019;
            double t2055 = a_2*t2020*t2021;
            double t2056 = a_3*t2021*t2025*t2019;
            double t2057 = a_4*t2022*t2026;
            double t2058 = a_5*t2022*t2027*t2019;
            double t2059 = a_6*t2021*t2022*t2028;
            double t2060 = a_7*t2021*t2022*t2019*t2029;
            double t2061 = a_8*t2030*t2023;
            double t2062 = a_9*t2031*t2023*t2019;
            double t2063 = t2060+t2052+t2061+t2053+t2062+t2054+t2055+t2056+t2057+t2058+t2059+1.0;
            double t2064 = 1/(t2039*t2039);
            double t2065 = C_k*a_1*t2014*t2015*t2045*(5.0/3.0);
            double t2066 = C_k*a_2*t2020*t2014*t2015*t2019*(1.0E1/3.0);
            double t2067 = C_k*a_10*t2014*t2023*t2032*t2015*t2019*(5.0E1/3.0);
            double t2068 = C_k*a_11*t2021*t2014*t2023*t2015*t2024*(5.5E1/3.0);
            double t2069 = C_k*a_3*t2021*t2014*t2015*t2025*5.0;
            double t2070 = C_k*a_4*t2021*t2014*t2015*t2026*t2019*(2.0E1/3.0);
            double t2071 = C_k*a_5*t2022*t2014*t2015*t2027*(2.5E1/3.0);
            double t2072 = C_k*a_6*t2022*t2014*t2015*t2019*t2028*1.0E1;
            double t2073 = C_k*a_7*t2021*t2022*t2014*t2015*t2029*(3.5E1/3.0);
            double t2074 = C_k*a_8*t2021*t2030*t2022*t2014*t2015*t2019*(4.0E1/3.0);
            double t2075 = C_k*a_9*t2031*t2014*t2023*t2015*1.5E1;
            double t2076 = t2070+t2071+t2072+t2073+t2065+t2074+t2066+t2075+t2067+t2068+t2069-C_k*a_1*t2020*t2014* \
               t2015*t2019*(5.0/3.0)-C_k*a_2*t2021*t2014*t2015*t2025*(1.0E1/3.0)-C_k*a_4*t2022*t2014*t2015*t2027* \
               (2.0E1/3.0)-C_k*a_8*t2031*t2014*t2023*t2015*(4.0E1/3.0)-C_k*a_10*t2021*t2014*t2023*t2015*t2024*(5.0E1/ \
               3.0)-C_k*a_3*t2021*t2014*t2015*t2026*t2019*5.0-C_k*a_5*t2022*t2014*t2015*t2019*t2028*(2.5E1/3.0)-C_k* \
               a_6*t2021*t2022*t2014*t2015*t2029*1.0E1-C_k*a_9*t2014*t2023*t2032*t2015*t2019*1.5E1-C_k*a_11*t2021* \
               t2014*t2023*t2015*t2019*t2046*(5.5E1/3.0)-C_k*a_7*t2021*t2030*t2022*t2014*t2015*t2019*(3.5E1/3.0);
            double t2077 = 1/pow(rho_a[index],1.0/3.0);
            double t2078 = c*t2077;
            double t2079 = sqrt(t2078);
            double t2080 = pow(t2078,3.0/2.0);
            double t2081 = 1/pow(rho_a[index],2.0/3.0);
            double t2082 = b1p*t2079;
            double t2083 = b3p*t2080;
            double t2084 = b4p*t1795*t2081;
            double t2085 = b2p*c*t2077;
            double t2086 = t2082+t2083+t2084+t2085;
            double t2087 = 1/t2086;
            double t2088 = t1801*t2087*(1.0/2.0);
            double t2089 = t2088+1.0;
            double t2090 = log(t2089);
            double t2091 = a1p*c*t2077;
            double t2092 = t2091+1.0;
            double t2093 = c0p*t2090*t2092*2.0;
            double t2094 = c0f*t1907*t1909*2.0;
            double t2096 = c0p*t1894*t1903*2.0;
            double t2095 = t2094-t2096;
            double t2097 = t1813*t1832*t1827*t1836*t1839;
            double t2098 = Aa*t1813*t1832*t1850*t1860*t1862*t1868*2.0;
            double t2099 = gamma_bb[index]*gcab*t1913*(1.6E1/3.0);
            double t2100 = gamma_bb[index]*gcab*t1910*t1912*t1913*1.6E1;
            double t2101 = gamma_bb[index]*t1911*t1912*t1913*t1918*(1.6E1/3.0);
            double t2102 = gamma_bb[index]*t1910*t1911*t1913*1.6E1;
            double t2103 = t2099+t2100+t2101+t2102;
            double t2104 = 1/(t1926*t1926);
            double t2105 = gamma_bb[index]*gamma_bb[index];
            double t2106 = 1/pow(rho_b[index],2.2E1/3.0);
            double t2107 = gamma_bb[index]*gcab*t1913*(8.0/3.0);
            double t2108 = gamma_bb[index]*t1910*t1911*t1913*(8.0/3.0);
            double t2109 = t2107+t2108;
            double t2110 = 1/(t1933*t1933);
            double t2111 = 1/pow(rho_b[index],1.4E1/3.0);
            double t2112 = 1/(t1924*t1924);
            double t2113 = 1/(t1929*t1929);
            double t2114 = gamma_bb[index]*gcab*t1913*4.0;
            double t2115 = gamma_bb[index]*gcab*t1910*t1912*t1913*4.0;
            double t2116 = gamma_bb[index]*t1910*t1911*t1913*8.0;
            double t2117 = t2114+t2115+t2116;
            double t2197 = t1909*t1990*t1995*t1996;
            double t2118 = t1902+t2012-t2013-t2197;
            double t2119 = gcaa*gcaa;
            double t2120 = t2105*t2105;
            double t2121 = t2119*t2119;
            double t2122 = 1/pow(rho_b[index],3.2E1/3.0);
            double t2123 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t2124 = 1/pow(rho_b[index],1.6E1/3.0);
            double t2125 = t1813*t1906*t2095;
            double t2126 = t2096+t2125;
            double t2127 = tau_b[index]-1.0/1.0E20;
            double t2128 = ( (t2127 > 0.0) ?  1.0 : 0.0 ) ;
            double t2129 = tau_b[index]*2.0;
            double t2130 = 1/rho_b[index];
            double t2157 = gamma_bb[index]*t2130*(1.0/4.0);
            double t2131 = t2129-t2157;
            double t2132 = t2014*t2131*(1.0/2.0);
            double t2133 = t2132-1.0;
            double t2134 = t2133*t2128;
            double t2135 = t2134+1.0;
            double t2136 = gamma_bb[index]*gcaa*t1916*4.0;
            double t2137 = gamma_bb[index]*gcaa*t2105*t2123*t2119*4.0;
            double t2138 = t2105*t2124*t2119*6.0;
            double t2139 = t2120*t2121*t2122;
            double t2140 = t2136+t2137+t2138+t2139+1.0;
            double t2141 = 1/t2140;
            double t2142 = gamma_bb[index]*gcaa*t1916;
            double t2143 = t2142+1.0;
            double t2144 = 1/t2143;
            double t2145 = gamma_bb[index]*gcaa*t1916*3.0;
            double t2146 = gamma_bb[index]*gcaa*t2105*t2123*t2119;
            double t2147 = t2105*t2124*t2119*3.0;
            double t2148 = t2145+t2146+t2147+1.0;
            double t2149 = 1/t2148;
            double t2150 = gamma_bb[index]*gcaa*t1916*2.0;
            double t2151 = t2105*t2124*t2119;
            double t2152 = t2150+t2151+1.0;
            double t2153 = 1/t2152;
            double t2154 = 1/pow(rho_b[index],1.9E1/3.0);
            double t2155 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t2156 = 1/pow(rho_b[index],3.5E1/3.0);
            double t2158 = 1/pow(rho_b[index],1.0E1);
            double t2159 = 1/(t2143*t2143);
            double t2160 = gamma_bb[index]*gcaa*t1913*(3.2E1/3.0);
            double t2161 = gamma_bb[index]*gcaa*t2105*t2119*t2155*3.2E1;
            double t2162 = t2105*t2154*t2119*3.2E1;
            double t2163 = t2120*t2121*t2156*(3.2E1/3.0);
            double t2164 = t2160+t2161+t2162+t2163;
            double t2165 = gamma_bb[index]*gcaa*t1913*(1.6E1/3.0);
            double t2166 = t2105*t2154*t2119*(1.6E1/3.0);
            double t2167 = t2165+t2166;
            double t2168 = gamma_bb[index]*gcaa*t1913*8.0;
            double t2169 = gamma_bb[index]*gcaa*t2105*t2119*t2155*8.0;
            double t2170 = t2105*t2154*t2119*1.6E1;
            double t2171 = t2170+t2168+t2169;
            double t2172 = 1/(t2148*t2148);
            double t2173 = 1/(t2140*t2140);
            double t2174 = 1/pow(rho_b[index],3.8E1/3.0);
            double t2175 = 1/(t2152*t2152);
            double t2176 = ccaa4*t2120*t2121*t2122*t2141;
            double t2177 = ccaa1*gamma_bb[index]*gcaa*t1916*t2144;
            double t2178 = ccaa3*gamma_bb[index]*gcaa*t2105*t2123*t2119*t2149;
            double t2179 = ccaa2*t2105*t2124*t2153*t2119;
            double t2180 = ccaa0+t2176+t2177+t2178+t2179;
            double t2181 = 1/(t1878*t1878*t1878);
            double t2182 = b4f*t1795*t1916*(1.0E1/9.0);
            double t2183 = b2f*c*t1997*(4.0/9.0);
            double t2184 = b3f*t1795*t1886*t1916*(1.0/1.2E1);
            double t2185 = b1f*c*t1886*t1997*(2.0/9.0);
            double t2186 = b3f*c*t1871*t1997*(2.0/3.0);
            double t2187 = t2182+t2183+t2184+t2185+t2186-b1f*t1795*t1916*t1998*(1.0/3.6E1);
            double t2188 = t1909*t1990*t1996*t2187;
            double t2190 = t1894*t1895*t1896*t2008;
            double t2191 = 1/(t1889*t1889);
            double t2192 = 1/(t1878*t1878*t1878*t1878);
            double t2193 = t1814*t1909*t1999*t2191*t2192*(1.0/2.0);
            double t2194 = t1801*t1894*t2000*t2010*t2009*(1.0/2.0);
            double t2195 = a1f*c*t1879*t1990*t1995*t1996*(2.0/3.0);
            double t2196 = a1p*c*t1895*t1896*t1879*t1901*(2.0/3.0);
            double t2198 = t1813*t1906*t2118;
            double t2199 = ccaa4*t2120*t2121*t2141*t2156*(3.2E1/3.0);
            double t2200 = ccaa1*gamma_bb[index]*gcaa*t1913*t2144*(8.0/3.0);
            double t2201 = ccaa3*gamma_bb[index]*gcaa*t2105*t2119*t2155*t2149*8.0;
            double t2202 = ccaa2*t2105*t2153*t2154*t2119*(1.6E1/3.0);
            double t2205 = ccaa1*t2105*t2154*t2119*t2159*(8.0/3.0);
            double t2206 = ccaa3*gamma_bb[index]*gcaa*t2105*t2123*t2171*t2172*t2119;
            double t2207 = ccaa4*t2120*t2121*t2122*t2164*t2173;
            double t2208 = ccaa2*t2105*t2124*t2119*t2175*t2167;
            double t2203 = t2199+t2200+t2201+t2202-t2205-t2206-t2207-t2208;
            double t2204 = -t1902+t2013+t2198;
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t1911*t1937+ccab2*t1910*t1912*t1935+ccab4*t1918*t1919*t1938+ \
               ccab3*gcab*t1910*t1911*t1912*t1936)*(-rho_b[index]*(-t2002-t2011+t2190+t2194+t2196+t1813*t1906*(t2002+ \
               t2011+t2193+t2195+t2188-t1894*t1895*t1896*t2008-t1909*t1990*t1999*t2181*2.0-a1f*c*c0f*t1907*t1997* \
               (8.0/9.0)-t1801*t1894*t2000*t2010*t2009*(1.0/2.0)-a1p*c*t1895*t1896*t1879*t1901*(2.0/3.0)))-t1788* \
               (t1962+t1971-t1806*t1842*t1843*t1960-t1813*t1832*t1836*t1839*(t1962+t1971-t1806*t1842*t1843*t1960- \
               t1825*1/(t1819*t1819*t1819)*t1942*t1963*2.0+t1825*t1942*t1943*(b2f*c*t1939*(4.0/9.0)+b4f*t1795*t1940* \
               (1.0E1/9.0)+b1f*c*t1841*t1939*(2.0/9.0)+b3f*c*t1791*t1939*(2.0/3.0)-b1f*t1795*t1940*t1954*(1.0/3.6E1) \
               +b3f*t1795*t1841*t1940*(1.0/1.2E1))+1/(t1822*t1822)*t1814*t1825*1/(t1819*t1819*t1819*t1819)*t1963* \
               (1.0/2.0)-a1f*c*c0f*t1823*t1939*(8.0/9.0)-t1801*t1806*t1953*t1964*t1965*(1.0/2.0)+a1f*c*t1800*t1942* \
               t1943*t1948*(2.0/3.0)-a1p*c*t1800*t1842*t1843*t1848*(2.0/3.0))+t1813*t1832*t1808*t1827*t1836*1.2E1+ \
               t1813*t1827*t1839*t1866*t1849*8.0+t1813*t1832*t1827*t1839*t1972*2.0E1-t1813*t1832*t1839*t1849*t1950* \
               8.0-t1813*t1836*t1839*t1866*t1950*2.0+t1813*t1827*t1836*t1839*t1981-t1801*t1806*t1953*t1964*t1965* \
               (1.0/2.0)+t1813*t1832*t1807*t1808*t1827*t1849*3.2E1+t1813*t1807*t1808*t1827*t1836*t1866*8.0-t1813* \
               t1832*t1807*t1808*t1836*t1950*8.0-a1p*c*t1800*t1842*t1843*t1848*(2.0/3.0)+Aa*t1813*t1850*t1860*t1862* \
               t1868*t1981*2.0+Aa*t1813*t1850*t1860*t1862*t1866*t1975*4.0+Aa*t1813*t1832*t1850*t1860*t1862*(t1808* \
               t1836*1.2E1+t1839*t1972*2.0E1+t1807*t1808*t1849*3.2E1)*2.0-t1813*t1850*t1862*t1866*t1868*t1982*t1983* \
               t1988*2.0-t1813*t1832*t1850*t1862*t1982*t1983*t1975*t1988*2.0+t1813*t1832*t1850*t1862*1/(t1856*t1856* \
               t1856)*t1868*t1982*t1989*2.0-t1813*t1832*t1850*t1862*t1868*t1982*t1983*(b2a*c*t1939*(4.0/9.0)+b4a* \
               t1795*t1940*(1.0E1/9.0)+b1a*c*t1841*t1939*(2.0/9.0)+b3a*c*t1791*t1939*(2.0/3.0)-b1a*t1795*t1940*t1954* \
               (1.0/3.6E1)+b3a*t1795*t1841*t1940*(1.0/1.2E1))+Aa*a1a*c*t1800*t1813*t1850*t1860*t1866*t1868*(4.0/3.0) \
               +Aa*a1a*c*t1800*t1813*t1832*t1850*t1860*t1975*(4.0/3.0)+Aa*a1a*c*t1813*t1832*t1850*t1860*t1868*t1939* \
               (8.0/9.0)-t1813*t1832*t1850*t1851*t1862*1/(t1856*t1856*t1856*t1856)*1/(t1859*t1859)*t1868*t1989*(1.0/ \
               2.0)-a1a*c*t1800*t1813*t1832*t1850*t1868*t1982*t1983*t1988*(2.0/3.0))-t1813*t1906*t2118*2.0-t1806* \
               t1842*t1843*t1848*2.0+t1894*t1895*t1896*t1901*2.0+a1p*c*c0p*t1800*t1826*(4.0/3.0)-a1p*c*c0p*t1879* \
               t1903*(4.0/3.0)+t1813*t1832*t1827*t1839*t1849*8.0+t1813*t1827*t1836*t1839*t1866*2.0-t1813*t1832*t1836* \
               t1839*t1950*2.0+t1813*t1832*t1807*t1808*t1827*t1836*8.0+Aa*t1813*t1850*t1860*t1862*t1866*t1868*4.0+ \
               Aa*t1813*t1832*t1850*t1860*t1862*t1975*4.0-t1813*t1832*t1850*t1862*t1868*t1982*t1983*t1988*2.0+Aa* \
               a1a*c*t1800*t1813*t1832*t1850*t1860*t1868*(4.0/3.0))+(rho_b[index]*t2126+rho_a[index]*(t2093-t1813* \
               t1906*(t2093-c0f*log((t1814*(1.0/2.0))/(b1f*t2079+b3f*t2080+b2f*c*t2077+b4f*t1795*t2081)+1.0)*(a1f* \
               c*t2077+1.0)*2.0))-t1788*(t1838+t2097+t2098))*(-ccab2*t1910*t1912*t2113*(gamma_bb[index]*gcab*t2111* \
               (8.8E1/9.0)+t1910*t2105*t2106*(3.2E1/9.0)+gamma_bb[index]*t1910*t1911*t2111*(8.8E1/9.0))+ccab2*t1910* \
               t1912*1/(t1929*t1929*t1929)*(t2109*t2109)*2.0+ccab4*1/(t1924*t1924*t1924)*t1918*t1919*(t2103*t2103) \
               *2.0+ccab1*gamma_bb[index]*gcab*t1937*t2111*(4.4E1/9.0)+ccab2*t1910*t1935*t2105*t2106*(3.2E1/9.0)- \
               ccab1*t1910*t2104*t2105*t2106*(3.2E1/9.0)-ccab4*t1918*t1919*t2112*(gamma_bb[index]*gcab*t2111*(1.76E2/ \
               9.0)+t1910*t2105*t2106*(6.4E1/3.0)+gamma_bb[index]*t1910*t1911*t2111*(1.76E2/3.0)+t1912*t1918*t2105* \
               t2106*(6.4E1/3.0)+gamma_bb[index]*gcab*t1910*t1912*t2111*(1.76E2/3.0)+gamma_bb[index]*t1911*t1912* \
               t1918*t2111*(1.76E2/9.0)+gcab*t1910*t1911*t2105*t2106*(1.28E2/3.0))+ccab4*t1912*t1918*t1938*t2105* \
               t2106*(6.4E1/3.0)+ccab2*gamma_bb[index]*t1910*t1911*t1935*t2111*(8.8E1/9.0)-ccab1*gamma_bb[index]* \
               t1910*t1911*t2111*t2104*(4.4E1/9.0)+ccab3*gcab*t1910*t1911*t1912*1/(t1933*t1933*t1933)*(t2117*t2117) \
               *2.0+ccab3*gamma_bb[index]*gcab*t1910*t1912*t1936*t2111*(4.4E1/3.0)+ccab4*gamma_bb[index]*t1911*t1912* \
               t1918*t1938*t2111*(1.76E2/9.0)-ccab2*gamma_bb[index]*t1910*t1911*t1913*t2113*t2109*(1.6E1/3.0)+ccab3* \
               gcab*t1910*t1911*t1936*t2105*t2106*(3.2E1/3.0)+ccab1*gcab*t1910*t1911*1/(t1926*t1926*t1926)*t2105* \
               t2106*(3.2E1/9.0)-ccab3*gcab*t1910*t1911*t1912*t2110*(gamma_bb[index]*gcab*t2111*(4.4E1/3.0)+t1910* \
               t2105*t2106*(3.2E1/3.0)+gamma_bb[index]*t1910*t1911*t2111*(8.8E1/3.0)+gamma_bb[index]*gcab*t1910*t1912* \
               t2111*(4.4E1/3.0)+gcab*t1910*t1911*t2105*t2106*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t1910*t1912* \
               t1913*t2110*t2117*8.0-ccab4*gamma_bb[index]*t1911*t1912*t1913*t1918*t2103*t2112*(3.2E1/3.0))+(t1838+ \
               t2097+t2098+rho_b[index]*(-t1902+t2013+t1813*t1906*(t1902+t2012-t1909*t1990*t1995*t1996-a1p*c*c0p* \
               t1879*t1903*(2.0/3.0)))-t1788*(t1934-t1806*t1842*t1843*t1848+t1813*t1832*t1827*t1839*t1849*4.0+t1813* \
               t1827*t1836*t1839*t1866-t1813*t1832*t1836*t1839*t1950+t1813*t1832*t1807*t1808*t1827*t1836*4.0+Aa*t1813* \
               t1850*t1860*t1862*t1866*t1868*2.0+Aa*t1813*t1832*t1850*t1860*t1862*t1975*2.0-t1813*t1832*t1850*t1862* \
               t1868*t1982*t1983*t1988+Aa*a1a*c*t1800*t1813*t1832*t1850*t1860*t1868*(2.0/3.0))-c0p*t1894*t1903*2.0- \
               t1813*t1906*t2095)*(ccab1*gamma_bb[index]*gcab*t1913*t1937*(4.0/3.0)-ccab2*t1910*t1912*t2113*t2109- \
               ccab4*t1918*t1919*t2103*t2112+ccab2*gamma_bb[index]*t1910*t1911*t1913*t1935*(8.0/3.0)-ccab1*gamma_bb[index]* \
               t1910*t1911*t1913*t2104*(4.0/3.0)+ccab3*gamma_bb[index]*gcab*t1910*t1912*t1913*t1936*4.0+ccab4*gamma_bb[index]* \
               t1911*t1912*t1913*t1918*t1938*(1.6E1/3.0)-ccab3*gcab*t1910*t1911*t1912*t2110*t2117)*2.0-(X-1.0)*(t2041* \
               t2076*2.0+rho_b[index]*t2041*(C_k*a_1*t1869*t2014*t2045*(1.0E1/9.0)-a_1*t2020*t2042*t2043*t2044*(5.0E1/ \
               9.0)+a_2*t2020*t2042*t2043*t2044*(5.0E1/9.0)+a_1*t2042*t2025*t2043*t2044*t2019*(5.0E1/9.0)+a_10*t2023* \
               t2032*t2042*t2043*t2044*2.5E2+a_2*t2021*t2042*t2043*t2026*t2044*(5.0E1/3.0)-a_2*t2042*t2025*t2043* \
               t2044*t2019*(2.0E2/9.0)-a_3*t2021*t2042*t2043*t2026*t2044*5.0E1+a_3*t2042*t2025*t2043*t2044*t2019* \
               (5.0E1/3.0)+a_4*t2021*t2042*t2043*t2026*t2044*(1.0E2/3.0)+a_4*t2022*t2042*t2043*t2044*t2028*(5.0E2/ \
               9.0)-a_5*t2022*t2042*t2043*t2044*t2028*(1.25E3/9.0)+a_6*t2022*t2042*t2043*t2044*t2028*(2.5E2/3.0)+ \
               a_8*t2023*t2032*t2042*t2043*t2044*2.0E2-a_9*t2023*t2032*t2042*t2043*t2044*4.5E2-C_k*a_1*t1869*t2020* \
               t2014*t2019*(1.0E1/9.0)-C_k*a_2*t1869*t2021*t2014*t2025*(2.0E1/9.0)+C_k*a_2*t1869*t2020*t2014*t2019* \
               (2.0E1/9.0)+C_k*a_3*t1869*t2021*t2014*t2025*(1.0E1/3.0)-C_k*a_4*t1869*t2022*t2014*t2027*(4.0E1/9.0) \
               +C_k*a_5*t1869*t2022*t2014*t2027*(5.0E1/9.0)-C_k*a_8*t1869*t2031*t2014*t2023*(8.0E1/9.0)+C_k*a_9*t1869* \
               t2031*t2014*t2023*1.0E1-C_k*a_10*t1869*t2021*t2014*t2023*t2024*(1.0E2/9.0)+C_k*a_11*t1869*t2021*t2014* \
               t2023*t2024*(1.1E2/9.0)+C_k*a_10*t1869*t2014*t2023*t2032*t2019*(1.0E2/9.0)-C_k*a_3*t1869*t2021*t2014* \
               t2026*t2019*(1.0E1/3.0)+C_k*a_4*t1869*t2021*t2014*t2026*t2019*(4.0E1/9.0)-C_k*a_5*t1869*t2022*t2014* \
               t2019*t2028*(5.0E1/9.0)-C_k*a_6*t1869*t2021*t2022*t2014*t2029*(2.0E1/3.0)+C_k*a_6*t1869*t2022*t2014* \
               t2019*t2028*(2.0E1/3.0)+C_k*a_7*t1869*t2021*t2022*t2014*t2029*(7.0E1/9.0)-C_k*a_9*t1869*t2014*t2023* \
               t2032*t2019*1.0E1+a_10*t2021*t2023*t2042*t2043*t2044*t2046*(2.75E3/9.0)-a_11*t2021*t2023*t2042*t2043* \
               t2044*t2046*(6.05E3/9.0)-a_10*t2023*t2024*t2042*t2043*t2044*t2019*(5.0E3/9.0)+a_11*t2023*t2024*t2042* \
               t2043*t2044*t2019*(2.75E3/9.0)+a_3*t2021*t2042*t2043*t2044*t2027*t2019*(1.0E2/3.0)-a_4*t2021*t2042* \
               t2043*t2044*t2027*t2019*(8.0E2/9.0)+a_5*t2021*t2042*t2043*t2044*t2027*t2019*(5.0E2/9.0)+a_5*t2022* \
               t2042*t2043*t2044*t2019*t2029*(2.5E2/3.0)+a_6*t2021*t2030*t2022*t2042*t2043*t2044*(3.5E2/3.0)-a_6* \
               t2022*t2042*t2043*t2044*t2019*t2029*2.0E2-a_7*t2021*t2030*t2022*t2042*t2043*t2044*(2.45E3/9.0)+a_7* \
               t2022*t2042*t2043*t2044*t2019*t2029*(3.5E2/3.0)+a_8*t2021*t2030*t2022*t2042*t2043*t2044*(1.4E3/9.0) \
               +a_9*t2023*t2024*t2042*t2043*t2044*t2019*2.5E2+a_11*t2021*t2023*t2042*t2043*t2044*1/pow(t2018,1.3E1) \
               *t2019*(1.1E3/3.0)-C_k*a_11*t1869*t2021*t2014*t2023*t2019*t2046*(1.1E2/9.0)-C_k*a_7*t1869*t2021*t2030* \
               t2022*t2014*t2019*(7.0E1/9.0)+C_k*a_8*t1869*t2021*t2030*t2022*t2014*t2019*(8.0E1/9.0)+a_7*t2021*t2022* \
               t2031*t2042*t2043*t2044*t2019*(1.4E3/9.0)-a_8*t2021*t2022*t2031*t2042*t2043*t2044*t2019*(3.2E3/9.0) \
               +a_9*t2021*t2022*t2031*t2042*t2043*t2044*t2019*2.0E2)-kp*t2051*t2063*t2064*2.0+kp*rho_b[index]*t2063* \
               t2064*(gamma_bb[index]*mu_*t2033*t2034*t2047*t2049*(4.0/3.0)+gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index])*t2033*t2034*t2037*(3.0/2.0)+gamma_bb[index]*mu_*t2033*t2034*t2035*1/pow(t2036,8.0/ \
               3.0)*(1.0E1/9.0))-kp*rho_b[index]*(t2051*t2051)*t2063*1/(t2039*t2039*t2039)*2.0-kp*rho_b[index]*t2051* \
               t2064*t2076*2.0)+t2126*t2135*t2203*2.0+t2135*t2180*t2204*2.0-rho_b[index]*t2126*t2135*(ccaa1*gamma_bb[index]* \
               gcaa*t2111*t2144*(8.8E1/9.0)+ccaa4*t2120*t2121*t2141*t2174*(1.12E3/9.0)+ccaa2*t2105*t2106*t2153*t2119* \
               (3.04E2/9.0)-ccaa1*t2105*t2106*t2119*t2159*2.4E1-ccaa4*t2120*t2121*t2164*t2173*t2156*(6.4E1/3.0)-ccaa2* \
               t2105*t2154*t2119*t2175*t2167*(3.2E1/3.0)-ccaa2*t2105*t2124*t2119*t2175*(gamma_bb[index]*gcaa*t2111* \
               (1.76E2/9.0)+t2105*t2106*t2119*(3.04E2/9.0))-ccaa4*t2120*t2121*t2122*t2173*(gamma_bb[index]*gcaa*t2111* \
               (3.52E2/9.0)+t2120*t2121*t2174*(1.12E3/9.0)+t2105*t2106*t2119*(6.08E2/3.0)+gamma_bb[index]*gcaa*t2105* \
               t2119*t2158*2.88E2)+ccaa4*t2120*t2121*t2122*1/(t2140*t2140*t2140)*(t2164*t2164)*2.0+ccaa2*t2105*t2124* \
               1/(t2152*t2152*t2152)*t2119*(t2167*t2167)*2.0+ccaa3*gamma_bb[index]*gcaa*t2105*t2119*t2149*t2158*7.2E1+ \
               ccaa1*gamma_bb[index]*gcaa*t2105*1/(t2143*t2143*t2143)*t2119*t2158*(1.28E2/9.0)+ccaa3*gamma_bb[index]* \
               gcaa*t2105*t2123*(t2171*t2171)*t2119*1/(t2148*t2148*t2148)*2.0-ccaa3*gamma_bb[index]*gcaa*t2105*t2123* \
               t2172*t2119*(gamma_bb[index]*gcaa*t2111*(8.8E1/3.0)+t2105*t2106*t2119*(3.04E2/3.0)+gamma_bb[index]* \
               gcaa*t2105*t2119*t2158*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t2105*t2171*t2172*t2119*t2155*1.6E1)+rho_b[index]* \
               t2135*t2180*(-t2002-t2011+t2190+t2194+t2196+t1813*t1906*(t2002+t2011-t2190+t2193-t2194+t2195-t2196+ \
               t2188-t1909*t1990*t1999*t2181*2.0-a1f*c*c0f*t1907*t1997*(8.0/9.0)))-rho_b[index]*t2135*t2203*t2204* \
               2.0+gamma_bb[index]*t2014*t2130*t2126*t2128*t2203*(1.0/4.0)+gamma_bb[index]*t2014*t2130*t2180*t2128* \
               (-t1902+t2013+t2198)*(1.0/4.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t4687 = 1/pow(rho_b[index],1.0/3.0);
            double t4688 = c*t4687;
            double t4689 = sqrt(t4688);
            double t4690 = b1f*t4689;
            double t4691 = pow(t4688,3.0/2.0);
            double t4692 = b3f*t4691;
            double t4693 = c*c;
            double t4694 = 1/pow(rho_b[index],2.0/3.0);
            double t4695 = b4f*t4693*t4694;
            double t4696 = b2f*c*t4687;
            double t4697 = t4690+t4692+t4695+t4696;
            double t4698 = 1/pow(rho_b[index],4.0/3.0);
            double t4699 = b1p*t4689;
            double t4700 = b3p*t4691;
            double t4701 = b4p*t4693*t4694;
            double t4702 = b2p*c*t4687;
            double t4703 = t4699+t4700+t4701+t4702;
            double t4704 = 1/pow(rho_b[index],5.0/3.0);
            double t4705 = 1/sqrt(t4688);
            double t4706 = 1/c0f;
            double t4707 = 1/t4697;
            double t4708 = t4706*t4707*(1.0/2.0);
            double t4709 = t4708+1.0;
            double t4710 = 1/c0p;
            double t4711 = 1/t4703;
            double t4712 = t4710*t4711*(1.0/2.0);
            double t4713 = t4712+1.0;
            double t4714 = a1p*c*t4687;
            double t4715 = t4714+1.0;
            double t4716 = 1/t4713;
            double t4717 = 1/(t4703*t4703);
            double t4718 = b4p*t4693*t4704*(2.0/3.0);
            double t4719 = b2p*c*t4698*(1.0/3.0);
            double t4720 = b1p*c*t4698*t4705*(1.0/6.0);
            double t4721 = b3p*c*t4689*t4698*(1.0/2.0);
            double t4722 = t4720+t4721+t4718+t4719;
            double t4723 = t4722*t4715*t4716*t4717;
            double t4724 = log(t4713);
            double t4725 = gamma_bb[index]*gamma_bb[index];
            double t4726 = gcaa*gcaa;
            double t4727 = t4725*t4725;
            double t4728 = t4726*t4726;
            double t4729 = 1/pow(rho_b[index],3.2E1/3.0);
            double t4730 = 1/pow(rho_b[index],8.0/3.0);
            double t4731 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]);
            double t4732 = 1/pow(rho_b[index],1.6E1/3.0);
            double t4733 = pow(2.0,1.0/3.0);
            double t4734 = t4733*2.0;
            double t4735 = t4734-2.0;
            double t4736 = two_13*2.0;
            double t4737 = t4736-2.0;
            double t4738 = 1/t4737;
            double t4739 = log(t4709);
            double t4740 = a1f*c*t4687;
            double t4741 = t4740+1.0;
            double t4742 = tau_b[index]-1.0/1.0E20;
            double t4743 = ( (t4742 > 0.0) ?  1.0 : 0.0 ) ;
            double t4744 = 1/tau_b[index];
            double t4745 = tau_b[index]*2.0;
            double t4746 = 1/rho_b[index];
            double t4794 = gamma_bb[index]*t4746*(1.0/4.0);
            double t4747 = t4745-t4794;
            double t4748 = t4744*t4747*(1.0/2.0);
            double t4749 = t4748-1.0;
            double t4750 = t4743*t4749;
            double t4751 = t4750+1.0;
            double t4752 = gamma_bb[index]*gcaa*t4730*4.0;
            double t4753 = gamma_bb[index]*gcaa*t4731*t4725*t4726*4.0;
            double t4754 = t4732*t4725*t4726*6.0;
            double t4755 = t4727*t4728*t4729;
            double t4756 = t4752+t4753+t4754+t4755+1.0;
            double t4757 = 1/t4756;
            double t4758 = gamma_bb[index]*gcaa*t4730;
            double t4759 = t4758+1.0;
            double t4760 = 1/t4759;
            double t4761 = gamma_bb[index]*gcaa*t4730*3.0;
            double t4762 = gamma_bb[index]*gcaa*t4731*t4725*t4726;
            double t4763 = t4732*t4725*t4726*3.0;
            double t4764 = t4761+t4762+t4763+1.0;
            double t4765 = 1/t4764;
            double t4766 = gamma_bb[index]*gcaa*t4730*2.0;
            double t4767 = t4732*t4725*t4726;
            double t4768 = t4766+t4767+1.0;
            double t4769 = 1/t4768;
            double t4770 = 1/pow(rho_b[index],1.9E1/3.0);
            double t4771 = 1/pow(rho_b[index],1.1E1/3.0);
            double t4772 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t4773 = 1/pow(rho_b[index],3.5E1/3.0);
            double t4774 = pow(rho_b[index],2.0/3.0);
            double t4775 = pow(rho_b[index],5.0/3.0);
            double t4776 = C_k*t4744*t4775;
            double t4777 = t4776+1.0;
            double t4778 = t4776-1.0;
            double t4779 = 1/(t4777*t4777);
            double t4780 = t4778*t4778;
            double t4781 = t4780*t4780;
            double t4782 = t4781*t4781;
            double t4783 = 1/pow(t4777,1.1E1);
            double t4784 = 1/(t4777*t4777*t4777);
            double t4785 = 1/(t4777*t4777*t4777*t4777);
            double t4786 = 1/(t4777*t4777*t4777*t4777*t4777);
            double t4787 = 1/(t4777*t4777*t4777*t4777*t4777*t4777);
            double t4788 = 1/(t4777*t4777*t4777*t4777*t4777*t4777*t4777);
            double t4789 = 1/(t4777*t4777*t4777*t4777*t4777*t4777*t4777*t4777);
            double t4790 = 1/(t4777*t4777*t4777*t4777*t4777*t4777*t4777*t4777*t4777);
            double t4791 = 1/pow(t4777,1.0E1);
            double t4792 = c0f*t4741*t4739*2.0;
            double t4793 = c0p*t4715*t4724*2.0;
            double t4795 = 1/pow(rho_b[index],1.0E1);
            double t4796 = 1/pow(rho_b[index],2.2E1/3.0);
            double t4797 = 1/(t4759*t4759);
            double t4798 = gamma_bb[index]*gcaa*t4771*(3.2E1/3.0);
            double t4799 = gamma_bb[index]*gcaa*t4725*t4726*t4772*3.2E1;
            double t4800 = t4725*t4770*t4726*3.2E1;
            double t4801 = t4727*t4728*t4773*(3.2E1/3.0);
            double t4802 = t4798+t4799+t4800+t4801;
            double t4803 = gamma_bb[index]*gcaa*t4771*(1.6E1/3.0);
            double t4804 = t4725*t4770*t4726*(1.6E1/3.0);
            double t4805 = t4803+t4804;
            double t4806 = gamma_bb[index]*gcaa*t4771*8.0;
            double t4807 = gamma_bb[index]*gcaa*t4725*t4726*t4772*8.0;
            double t4808 = t4725*t4770*t4726*1.6E1;
            double t4809 = t4806+t4807+t4808;
            double t4810 = 1/(t4764*t4764);
            double t4811 = 1/pow(rho_b[index],1.4E1/3.0);
            double t4812 = 1/(t4756*t4756);
            double t4813 = 1/pow(rho_b[index],3.8E1/3.0);
            double t4814 = 1/(t4768*t4768);
            double t4815 = ccaa4*t4727*t4728*t4729*t4757;
            double t4816 = ccaa1*gamma_bb[index]*gcaa*t4730*t4760;
            double t4817 = ccaa3*gamma_bb[index]*gcaa*t4731*t4725*t4726*t4765;
            double t4818 = ccaa2*t4732*t4725*t4726*t4769;
            double t4819 = ccaa0+t4815+t4816+t4817+t4818;
            double t4820 = 1/t4709;
            double t4821 = b4f*t4693*t4704*(2.0/3.0);
            double t4822 = b2f*c*t4698*(1.0/3.0);
            double t4823 = b1f*c*t4698*t4705*(1.0/6.0);
            double t4824 = b3f*c*t4689*t4698*(1.0/2.0);
            double t4825 = t4821+t4822+t4823+t4824;
            double t4826 = 1/(t4697*t4697);
            double t4827 = 1/pow(rho_b[index],7.0/3.0);
            double t4828 = 1/pow(t4688,3.0/2.0);
            double t4829 = t4825*t4825;
            double t4830 = t4722*t4722;
            double t4831 = 1/(t4703*t4703*t4703);
            double t4832 = t4715*t4716*t4830*t4831*2.0;
            double t4833 = b4p*t4693*t4730*(1.0E1/9.0);
            double t4834 = b2p*c*t4827*(4.0/9.0);
            double t4835 = b3p*t4693*t4730*t4705*(1.0/1.2E1);
            double t4836 = b1p*c*t4705*t4827*(2.0/9.0);
            double t4837 = b3p*c*t4689*t4827*(2.0/3.0);
            double t4838 = t4833+t4834+t4835+t4836+t4837-b1p*t4693*t4730*t4828*(1.0/3.6E1);
            double t4839 = 1/(t4713*t4713);
            double t4840 = 1/(t4703*t4703*t4703*t4703);
            double t4841 = a1p*c*c0p*t4724*t4827*(8.0/9.0);
            double t4842 = a1f*c*c0f*t4698*t4739*(2.0/3.0);
            double t4843 = a1p*c*c0p*t4698*t4724*(2.0/3.0);
            double t4844 = ccaa4*t4727*t4728*t4773*t4757*(3.2E1/3.0);
            double t4845 = ccaa1*gamma_bb[index]*gcaa*t4760*t4771*(8.0/3.0);
            double t4846 = ccaa3*gamma_bb[index]*gcaa*t4725*t4726*t4772*t4765*8.0;
            double t4847 = ccaa2*t4725*t4770*t4726*t4769*(1.6E1/3.0);
            double t4884 = ccaa1*t4725*t4770*t4726*t4797*(8.0/3.0);
            double t4885 = ccaa3*gamma_bb[index]*gcaa*t4731*t4725*t4726*t4810*t4809;
            double t4886 = ccaa4*t4727*t4728*t4729*t4802*t4812;
            double t4887 = ccaa2*t4732*t4725*t4726*t4805*t4814;
            double t4848 = t4844+t4845+t4846+t4847-t4884-t4885-t4886-t4887;
            double t4849 = X-1.0;
            double t4850 = 1/(k*k);
            double t4851 = 1/kp;
            double t4852 = 1/(rho_b[index]*rho_b[index]);
            double t4853 = rho_b[index]*2.0;
            double t4854 = 1/pow(t4853,2.0/3.0);
            double t4855 = gamma_bb[index]*mu_*t4850*t4851*t4852*t4854*(1.0/4.0);
            double t4856 = t4855+1.0;
            double t4857 = 1/t4856;
            double t4858 = kp-kp*t4857+1.0;
            double t4859 = C_k*C_k;
            double t4860 = pow(rho_b[index],4.0/3.0);
            double t4861 = 1/(tau_b[index]*tau_b[index]);
            double t4862 = 1/t4777;
            double t4863 = 1/pow(t4777,1.2E1);
            double t4864 = t4723+t4842-t4843-t4741*t4820*t4825*t4826;
            double t4865 = t4735*t4738*t4864;
            double t4866 = 1/(t4856*t4856);
            double t4867 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
            double t4868 = 1/pow(t4853,5.0/3.0);
            double t4869 = a_1*t4778*t4862;
            double t4870 = a_10*t4780*t4782*t4791;
            double t4871 = a_11*t4780*t4782*t4783*t4778;
            double t4872 = a_2*t4780*t4779;
            double t4873 = a_3*t4780*t4784*t4778;
            double t4874 = a_4*t4781*t4785;
            double t4875 = a_5*t4781*t4786*t4778;
            double t4876 = a_6*t4780*t4781*t4787;
            double t4877 = a_7*t4780*t4781*t4778*t4788;
            double t4878 = a_8*t4782*t4789;
            double t4879 = a_9*t4790*t4782*t4778;
            double t4880 = t4870+t4871+t4872+t4873+t4874+t4875+t4876+t4877+t4869+t4878+t4879+1.0;
            double t4881 = t4792-t4793;
            double t4882 = t4735*t4738*t4881;
            double t4883 = t4793+t4882;
            double t4888 = gamma_bb[index]*mu_*t4850*t4851*t4854*t4867*(1.0/2.0);
            double t4889 = gamma_bb[index]*mu_*t4850*t4851*t4852*t4868*(1.0/3.0);
            double t4890 = t4888+t4889;
            double t4891 = C_k*a_1*t4744*t4774*t4862*(5.0/3.0);
            double t4892 = C_k*a_2*t4744*t4774*t4778*t4779*(1.0E1/3.0);
            double t4893 = C_k*a_10*t4744*t4782*t4791*t4774*t4778*(5.0E1/3.0);
            double t4894 = C_k*a_11*t4744*t4780*t4782*t4774*t4783*(5.5E1/3.0);
            double t4895 = C_k*a_3*t4744*t4780*t4774*t4784*5.0;
            double t4896 = C_k*a_4*t4744*t4780*t4774*t4785*t4778*(2.0E1/3.0);
            double t4897 = C_k*a_5*t4744*t4781*t4774*t4786*(2.5E1/3.0);
            double t4898 = C_k*a_6*t4744*t4781*t4774*t4778*t4787*1.0E1;
            double t4899 = C_k*a_7*t4744*t4780*t4781*t4774*t4788*(3.5E1/3.0);
            double t4900 = C_k*a_8*t4744*t4780*t4781*t4774*t4778*t4789*(4.0E1/3.0);
            double t4901 = C_k*a_9*t4744*t4790*t4782*t4774*1.5E1;
            double t4902 = t4891+t4892+t4893+t4894+t4895+t4896+t4897+t4898+t4899+t4900+t4901-C_k*a_1*t4744*t4774* \
               t4778*t4779*(5.0/3.0)-C_k*a_2*t4744*t4780*t4774*t4784*(1.0E1/3.0)-C_k*a_4*t4744*t4781*t4774*t4786* \
               (2.0E1/3.0)-C_k*a_8*t4744*t4790*t4782*t4774*(4.0E1/3.0)-C_k*a_10*t4744*t4780*t4782*t4774*t4783*(5.0E1/ \
               3.0)-C_k*a_3*t4744*t4780*t4774*t4785*t4778*5.0-C_k*a_5*t4744*t4781*t4774*t4778*t4787*(2.5E1/3.0)-C_k* \
               a_6*t4744*t4780*t4781*t4774*t4788*1.0E1-C_k*a_9*t4744*t4782*t4791*t4774*t4778*1.5E1-C_k*a_11*t4744* \
               t4780*t4782*t4774*t4778*t4863*(5.5E1/3.0)-C_k*a_7*t4744*t4780*t4781*t4774*t4778*t4789*(3.5E1/3.0);
            v_rho_b_rho_b_[index] = t4751*t4819*(-t4723+t4843+t4735*t4738*(t4723+t4842-t4741*t4820*t4825*t4826- \
               a1p*c*c0p*t4698*t4724*(2.0/3.0)))*2.0-t4849*t4858*t4902*2.0+t4751*t4848*(t4793+t4735*t4738*(t4792- \
               c0p*t4715*t4724*2.0))*2.0-rho_b[index]*t4751*t4883*(ccaa1*gamma_bb[index]*gcaa*t4760*t4811*(8.8E1/ \
               9.0)-ccaa1*t4725*t4726*t4796*t4797*2.4E1+ccaa2*t4725*t4726*t4769*t4796*(3.04E2/9.0)+ccaa4*t4727*t4728* \
               t4757*t4813*(1.12E3/9.0)-ccaa2*t4725*t4770*t4726*t4805*t4814*(3.2E1/3.0)-ccaa4*t4727*t4728*t4773*t4802* \
               t4812*(6.4E1/3.0)-ccaa2*t4732*t4725*t4726*t4814*(gamma_bb[index]*gcaa*t4811*(1.76E2/9.0)+t4725*t4726* \
               t4796*(3.04E2/9.0))-ccaa4*t4727*t4728*t4729*t4812*(gamma_bb[index]*gcaa*t4811*(3.52E2/9.0)+t4725*t4726* \
               t4796*(6.08E2/3.0)+t4727*t4728*t4813*(1.12E3/9.0)+gamma_bb[index]*gcaa*t4725*t4726*t4795*2.88E2)+ccaa2* \
               t4732*t4725*t4726*1/(t4768*t4768*t4768)*(t4805*t4805)*2.0+ccaa4*t4727*t4728*t4729*1/(t4756*t4756*t4756) \
               *(t4802*t4802)*2.0+ccaa3*gamma_bb[index]*gcaa*t4725*t4726*t4765*t4795*7.2E1+ccaa1*gamma_bb[index]* \
               gcaa*t4725*t4726*1/(t4759*t4759*t4759)*t4795*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t4731*t4725*t4726* \
               1/(t4764*t4764*t4764)*(t4809*t4809)*2.0-ccaa3*gamma_bb[index]*gcaa*t4731*t4725*t4726*t4810*(gamma_bb[index]* \
               gcaa*t4811*(8.8E1/3.0)+t4725*t4726*t4796*(3.04E2/3.0)+gamma_bb[index]*gcaa*t4725*t4726*t4795*7.2E1) \
               -ccaa3*gamma_bb[index]*gcaa*t4725*t4726*t4772*t4810*t4809*1.6E1)-rho_b[index]*t4849*t4858*(C_k*a_1* \
               t4687*t4744*t4862*(1.0E1/9.0)-a_1*t4779*t4860*t4861*t4859*(5.0E1/9.0)+a_2*t4779*t4860*t4861*t4859* \
               (5.0E1/9.0)+a_1*t4784*t4778*t4860*t4861*t4859*(5.0E1/9.0)+a_10*t4782*t4791*t4860*t4861*t4859*2.5E2+ \
               a_2*t4780*t4785*t4860*t4861*t4859*(5.0E1/3.0)-a_2*t4784*t4778*t4860*t4861*t4859*(2.0E2/9.0)-a_3*t4780* \
               t4785*t4860*t4861*t4859*5.0E1+a_3*t4784*t4778*t4860*t4861*t4859*(5.0E1/3.0)+a_4*t4780*t4785*t4860* \
               t4861*t4859*(1.0E2/3.0)+a_4*t4781*t4787*t4860*t4861*t4859*(5.0E2/9.0)-a_5*t4781*t4787*t4860*t4861* \
               t4859*(1.25E3/9.0)+a_6*t4781*t4787*t4860*t4861*t4859*(2.5E2/3.0)+a_8*t4782*t4791*t4860*t4861*t4859* \
               2.0E2-a_9*t4782*t4791*t4860*t4861*t4859*4.5E2-C_k*a_1*t4687*t4744*t4778*t4779*(1.0E1/9.0)-C_k*a_2* \
               t4687*t4744*t4780*t4784*(2.0E1/9.0)+C_k*a_2*t4687*t4744*t4778*t4779*(2.0E1/9.0)+C_k*a_3*t4687*t4744* \
               t4780*t4784*(1.0E1/3.0)-C_k*a_4*t4687*t4744*t4781*t4786*(4.0E1/9.0)+C_k*a_5*t4687*t4744*t4781*t4786* \
               (5.0E1/9.0)-C_k*a_8*t4687*t4744*t4790*t4782*(8.0E1/9.0)+C_k*a_9*t4687*t4744*t4790*t4782*1.0E1-C_k* \
               a_10*t4687*t4744*t4780*t4782*t4783*(1.0E2/9.0)+C_k*a_11*t4687*t4744*t4780*t4782*t4783*(1.1E2/9.0)+ \
               C_k*a_10*t4687*t4744*t4782*t4791*t4778*(1.0E2/9.0)-C_k*a_3*t4687*t4744*t4780*t4785*t4778*(1.0E1/3.0) \
               +C_k*a_4*t4687*t4744*t4780*t4785*t4778*(4.0E1/9.0)-C_k*a_5*t4687*t4744*t4781*t4778*t4787*(5.0E1/9.0) \
               -C_k*a_6*t4687*t4744*t4780*t4781*t4788*(2.0E1/3.0)+C_k*a_6*t4687*t4744*t4781*t4778*t4787*(2.0E1/3.0) \
               +C_k*a_7*t4687*t4744*t4780*t4781*t4788*(7.0E1/9.0)-C_k*a_9*t4687*t4744*t4782*t4791*t4778*1.0E1-a_10* \
               t4782*t4783*t4778*t4860*t4861*t4859*(5.0E3/9.0)+a_11*t4782*t4783*t4778*t4860*t4861*t4859*(2.75E3/9.0) \
               +a_10*t4780*t4782*t4860*t4861*t4863*t4859*(2.75E3/9.0)-a_11*t4780*t4782*t4860*t4861*t4863*t4859*(6.05E3/ \
               9.0)+a_3*t4780*t4786*t4778*t4860*t4861*t4859*(1.0E2/3.0)-a_4*t4780*t4786*t4778*t4860*t4861*t4859*(8.0E2/ \
               9.0)+a_5*t4780*t4786*t4778*t4860*t4861*t4859*(5.0E2/9.0)+a_5*t4781*t4778*t4788*t4860*t4861*t4859*(2.5E2/ \
               3.0)+a_6*t4780*t4781*t4789*t4860*t4861*t4859*(3.5E2/3.0)-a_6*t4781*t4778*t4788*t4860*t4861*t4859*2.0E2- \
               a_7*t4780*t4781*t4789*t4860*t4861*t4859*(2.45E3/9.0)+a_7*t4781*t4778*t4788*t4860*t4861*t4859*(3.5E2/ \
               3.0)+a_8*t4780*t4781*t4789*t4860*t4861*t4859*(1.4E3/9.0)+a_9*t4782*t4783*t4778*t4860*t4861*t4859*2.5E2+ \
               a_11*t4780*t4782*1/pow(t4777,1.3E1)*t4778*t4860*t4861*t4859*(1.1E3/3.0)-C_k*a_11*t4687*t4744*t4780* \
               t4782*t4778*t4863*(1.1E2/9.0)-C_k*a_7*t4687*t4744*t4780*t4781*t4778*t4789*(7.0E1/9.0)+C_k*a_8*t4687* \
               t4744*t4780*t4781*t4778*t4789*(8.0E1/9.0)+a_7*t4780*t4781*t4790*t4778*t4860*t4861*t4859*(1.4E3/9.0) \
               -a_8*t4780*t4781*t4790*t4778*t4860*t4861*t4859*(3.2E3/9.0)+a_9*t4780*t4781*t4790*t4778*t4860*t4861* \
               t4859*2.0E2)-rho_b[index]*t4751*t4848*(-t4723+t4843+t4865)*2.0+rho_b[index]*t4751*t4819*(-t4832-t4841+ \
               t4735*t4738*(t4832+t4841-t4715*t4716*t4717*t4838-1/(t4697*t4697*t4697)*t4741*t4820*t4829*2.0+t4741* \
               t4820*t4826*(b2f*c*t4827*(4.0/9.0)+b4f*t4693*t4730*(1.0E1/9.0)+b1f*c*t4705*t4827*(2.0/9.0)+b3f*c*t4689* \
               t4827*(2.0/3.0)-b1f*t4693*t4730*t4828*(1.0/3.6E1)+b3f*t4693*t4730*t4705*(1.0/1.2E1))+1/(t4697*t4697* \
               t4697*t4697)*t4741*t4706*1/(t4709*t4709)*t4829*(1.0/2.0)-a1f*c*c0f*t4739*t4827*(8.0/9.0)-t4710*t4715* \
               t4830*t4840*t4839*(1.0/2.0)+a1f*c*t4698*t4820*t4825*t4826*(2.0/3.0)-a1p*c*t4698*t4722*t4716*t4717* \
               (2.0/3.0))+t4715*t4716*t4717*t4838+t4710*t4715*t4830*t4840*t4839*(1.0/2.0)+a1p*c*t4698*t4722*t4716* \
               t4717*(2.0/3.0))+kp*t4880*t4890*t4866*t4849*2.0+gamma_bb[index]*t4743*t4744*t4746*t4883*t4848*(1.0/ \
               4.0)+kp*rho_b[index]*t4890*t4866*t4849*t4902*2.0+gamma_bb[index]*t4743*t4744*t4746*t4819*(-t4723+t4843+ \
               t4865)*(1.0/4.0)-kp*rho_b[index]*t4880*t4866*t4849*(gamma_bb[index]*mu_*t4850*t4851*t4867*t4868*(4.0/ \
               3.0)+gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t4850*t4851*t4854* \
               (3.0/2.0)+gamma_bb[index]*mu_*t4850*t4851*t4852*1/pow(t4853,8.0/3.0)*(1.0E1/9.0))+kp*rho_b[index]* \
               t4880*(t4890*t4890)*1/(t4856*t4856*t4856)*t4849*2.0;
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2210 = 1/(k*k);
                double t2211 = 1/kp;
                double t2212 = rho_a[index]*2.0;
                double t2213 = 1/(rho_a[index]*rho_a[index]);
                double t2214 = 1/pow(t2212,2.0/3.0);
                double t2215 = pow(rho_a[index],5.0/3.0);
                double t2216 = 1/tau_a[index];
                double t2217 = C_k*t2215*t2216;
                double t2218 = t2217-1.0;
                double t2219 = t2218*t2218;
                double t2220 = t2219*t2219;
                double t2221 = t2220*t2220;
                double t2222 = t2217+1.0;
                double t2223 = gamma_aa[index]*mu_*t2210*t2211*t2213*t2214*(1.0/4.0);
                double t2224 = t2223+1.0;
                double t2225 = 1/(t2224*t2224);
                double t2226 = 1/t2222;
                double t2227 = a_1*t2226*t2218;
                double t2228 = 1/pow(t2222,1.0E1);
                double t2229 = a_10*t2221*t2219*t2228;
                double t2230 = 1/pow(t2222,1.1E1);
                double t2231 = a_11*t2221*t2230*t2218*t2219;
                double t2232 = 1/(t2222*t2222);
                double t2233 = a_2*t2232*t2219;
                double t2234 = 1/(t2222*t2222*t2222);
                double t2235 = a_3*t2234*t2218*t2219;
                double t2236 = 1/(t2222*t2222*t2222*t2222);
                double t2237 = a_4*t2220*t2236;
                double t2238 = 1/(t2222*t2222*t2222*t2222*t2222);
                double t2239 = a_5*t2220*t2218*t2238;
                double t2240 = 1/(t2222*t2222*t2222*t2222*t2222*t2222);
                double t2241 = a_6*t2220*t2240*t2219;
                double t2242 = 1/(t2222*t2222*t2222*t2222*t2222*t2222*t2222);
                double t2243 = a_7*t2220*t2242*t2218*t2219;
                double t2244 = 1/(t2222*t2222*t2222*t2222*t2222*t2222*t2222*t2222);
                double t2245 = a_8*t2221*t2244;
                double t2246 = 1/(t2222*t2222*t2222*t2222*t2222*t2222*t2222*t2222*t2222);
                double t2247 = a_9*t2221*t2218*t2246;
                double t2248 = t2231+t2241+t2233+t2243+t2235+t2227+t2245+t2237+t2229+t2247+t2239+1.0;
                double t2249 = pow(rho_a[index],2.0/3.0);
                double t2250 = 1/rho_a[index];
                double t2251 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
                double t2252 = 1/pow(t2212,5.0/3.0);
                double t2253 = rho_a[index]+rho_b[index];
                double t2254 = 1/pow(t2253,1.0/3.0);
                double t2255 = c*t2254;
                double t2256 = sqrt(t2255);
                double t2257 = b1p*t2256;
                double t2258 = pow(t2255,3.0/2.0);
                double t2259 = b3p*t2258;
                double t2260 = c*c;
                double t2261 = 1/pow(t2253,2.0/3.0);
                double t2262 = b4p*t2260*t2261;
                double t2263 = b2p*c*t2254;
                double t2264 = t2262+t2263+t2257+t2259;
                double t2265 = 1/pow(t2253,4.0/3.0);
                double t2266 = 1/c0p;
                double t2267 = 1/t2264;
                double t2268 = t2266*t2267*(1.0/2.0);
                double t2269 = t2268+1.0;
                double t2270 = a1p*c*t2254;
                double t2271 = t2270+1.0;
                double t2272 = rho_a[index]-rho_b[index];
                double t2273 = t2272*t2272;
                double t2274 = 1/t2253;
                double t2275 = t2272*t2274;
                double t2276 = two_13*2.0;
                double t2277 = t2276-2.0;
                double t2278 = 1/t2277;
                double t2279 = 1/c0f;
                double t2280 = b1f*t2256;
                double t2281 = b3f*t2258;
                double t2282 = b4f*t2260*t2261;
                double t2283 = b2f*c*t2254;
                double t2284 = t2280+t2281+t2282+t2283;
                double t2285 = 1/t2284;
                double t2286 = t2285*t2279*(1.0/2.0);
                double t2287 = t2286+1.0;
                double t2288 = log(t2287);
                double t2289 = a1f*c*t2254;
                double t2290 = t2289+1.0;
                double t2291 = log(t2269);
                double t2301 = c0f*t2290*t2288*2.0;
                double t2302 = c0p*t2271*t2291*2.0;
                double t2292 = t2301-t2302;
                double t2293 = t2275+1.0;
                double t2294 = pow(t2293,4.0/3.0);
                double t2295 = -t2275+1.0;
                double t2296 = pow(t2295,4.0/3.0);
                double t2297 = t2294+t2296-2.0;
                double t2298 = 1/(t2253*t2253);
                double t2329 = t2272*t2298;
                double t2299 = t2274-t2329;
                double t2300 = 1/(t2253*t2253*t2253*t2253);
                double t2303 = t2273*t2273;
                double t2304 = 1/pow(t2253,5.0/3.0);
                double t2305 = 1/sqrt(t2255);
                double t2306 = 1/t2269;
                double t2307 = 1/(t2264*t2264);
                double t2308 = b4p*t2260*t2304*(2.0/3.0);
                double t2309 = b2p*c*t2265*(1.0/3.0);
                double t2310 = b1p*c*t2265*t2305*(1.0/6.0);
                double t2311 = b3p*c*t2256*t2265*(1.0/2.0);
                double t2312 = t2310+t2311+t2308+t2309;
                double t2313 = t2271*t2312*t2306*t2307;
                double t2314 = 1/(t2253*t2253*t2253*t2253*t2253);
                double t2315 = 1/d2fz0;
                double t2316 = 1/Aa;
                double t2317 = b1a*t2256;
                double t2318 = b3a*t2258;
                double t2319 = b4a*t2260*t2261;
                double t2320 = b2a*c*t2254;
                double t2321 = t2320+t2317+t2318+t2319;
                double t2322 = 1/t2321;
                double t2323 = t2322*t2316*(1.0/2.0);
                double t2324 = t2323+1.0;
                double t2325 = log(t2324);
                double t2326 = a1a*c*t2254;
                double t2327 = t2326+1.0;
                double t2328 = pow(t2293,1.0/3.0);
                double t2330 = t2299*t2328*(4.0/3.0);
                double t2331 = pow(t2295,1.0/3.0);
                double t2332 = t2330-t2299*t2331*(4.0/3.0);
                double t2333 = t2300*t2303;
                double t2334 = t2333-1.0;
                double t2335 = 1/pow(rho_a[index],1.0/3.0);
                double t2336 = c*t2335;
                double t2337 = sqrt(t2336);
                double t2338 = b1f*t2337;
                double t2339 = pow(t2336,3.0/2.0);
                double t2340 = b3f*t2339;
                double t2341 = 1/pow(rho_a[index],2.0/3.0);
                double t2342 = b4f*t2260*t2341;
                double t2343 = b2f*c*t2335;
                double t2344 = t2340+t2342+t2343+t2338;
                double t2345 = 1/pow(rho_a[index],4.0/3.0);
                double t2346 = b1p*t2337;
                double t2347 = b3p*t2339;
                double t2348 = b4p*t2260*t2341;
                double t2349 = b2p*c*t2335;
                double t2350 = t2346+t2347+t2348+t2349;
                double t2351 = 1/pow(rho_a[index],5.0/3.0);
                double t2352 = 1/sqrt(t2336);
                double t2353 = 1/t2344;
                double t2354 = t2279*t2353*(1.0/2.0);
                double t2355 = t2354+1.0;
                double t2356 = 1/t2350;
                double t2357 = t2266*t2356*(1.0/2.0);
                double t2358 = t2357+1.0;
                double t2359 = a1p*c*t2335;
                double t2360 = t2359+1.0;
                double t2361 = 1/t2358;
                double t2362 = 1/(t2350*t2350);
                double t2363 = b4p*t2260*t2351*(2.0/3.0);
                double t2364 = b2p*c*t2345*(1.0/3.0);
                double t2365 = b1p*c*t2352*t2345*(1.0/6.0);
                double t2366 = b3p*c*t2345*t2337*(1.0/2.0);
                double t2367 = t2363+t2364+t2365+t2366;
                double t2368 = t2360*t2361*t2362*t2367;
                double t2369 = log(t2358);
                double t2370 = pow(2.0,1.0/3.0);
                double t2371 = t2370*2.0;
                double t2372 = t2371-2.0;
                double t2373 = log(t2355);
                double t2374 = a1f*c*t2335;
                double t2375 = t2374+1.0;
                double t2376 = 1/pow(rho_a[index],8.0/3.0);
                double t2377 = gamma_aa[index]*t2376*(1.0/2.0);
                double t2378 = 1/pow(rho_b[index],8.0/3.0);
                double t2379 = gamma_bb[index]*t2378*(1.0/2.0);
                double t2380 = t2377+t2379;
                double t2381 = gcab*t2380;
                double t2382 = t2381+1.0;
                double t2383 = gcab*gcab;
                double t2384 = t2380*t2380;
                double t2385 = t2383*t2383;
                double t2386 = t2384*t2384;
                double t2387 = t2383*t2384;
                double t2388 = gcab*t2380*2.0;
                double t2389 = t2387+t2388+1.0;
                double t2390 = t2383*t2384*3.0;
                double t2391 = gcab*t2380*t2383*t2384;
                double t2392 = gcab*t2380*3.0;
                double t2393 = t2390+t2391+t2392+1.0;
                double t2394 = t2383*t2384*6.0;
                double t2395 = gcab*t2380*t2383*t2384*4.0;
                double t2396 = t2385*t2386;
                double t2397 = gcab*t2380*4.0;
                double t2398 = t2394+t2395+t2396+t2397+1.0;
                double t2399 = c0f*t2373*t2375*2.0;
                double t2401 = c0p*t2360*t2369*2.0;
                double t2400 = t2399-t2401;
                double t2402 = 1/pow(rho_b[index],1.0/3.0);
                double t2403 = c*t2402;
                double t2404 = sqrt(t2403);
                double t2405 = pow(t2403,3.0/2.0);
                double t2406 = 1/pow(rho_b[index],2.0/3.0);
                double t2407 = b1p*t2404;
                double t2408 = b3p*t2405;
                double t2409 = b4p*t2260*t2406;
                double t2410 = b2p*c*t2402;
                double t2411 = t2410+t2407+t2408+t2409;
                double t2412 = 1/t2411;
                double t2413 = t2266*t2412*(1.0/2.0);
                double t2414 = t2413+1.0;
                double t2415 = log(t2414);
                double t2416 = a1p*c*t2402;
                double t2417 = t2416+1.0;
                double t2418 = c0p*t2415*t2417*2.0;
                double t2419 = t2292*t2278*t2297*t2300*t2303;
                double t2420 = Aa*t2278*t2297*t2315*t2325*t2334*t2327*2.0;
                double t2421 = 1/t2382;
                double t2422 = 1/pow(rho_a[index],1.1E1/3.0);
                double t2423 = 1/(t2382*t2382);
                double t2424 = 1/t2389;
                double t2425 = 1/(t2393*t2393);
                double t2426 = 1/pow(rho_a[index],1.9E1/3.0);
                double t2427 = 1/(t2389*t2389);
                double t2428 = 1/t2393;
                double t2429 = 1/t2398;
                double t2430 = 1/(t2398*t2398);
                double t2431 = gcab*t2376*2.0;
                double t2432 = t2380*t2383*t2376*6.0;
                double t2433 = gcab*t2383*t2384*t2376*6.0;
                double t2434 = t2380*t2384*t2376*t2385*2.0;
                double t2435 = t2431+t2432+t2433+t2434;
                double t2436 = gamma_aa[index]*gcab*t2422*(8.0/3.0);
                double t2437 = gamma_aa[index]*t2380*t2383*t2422*(8.0/3.0);
                double t2438 = t2436+t2437;
                double t2439 = gcab*t2376;
                double t2440 = t2380*t2383*t2376;
                double t2441 = t2440+t2439;
                double t2442 = gamma_aa[index]*gcab*t2422*(1.6E1/3.0);
                double t2443 = gamma_aa[index]*gcab*t2383*t2384*t2422*1.6E1;
                double t2444 = gamma_aa[index]*t2380*t2384*t2385*t2422*(1.6E1/3.0);
                double t2445 = gamma_aa[index]*t2380*t2383*t2422*1.6E1;
                double t2446 = t2442+t2443+t2444+t2445;
                double t2447 = gcab*t2376*(3.0/2.0);
                double t2448 = t2380*t2383*t2376*3.0;
                double t2449 = gcab*t2383*t2384*t2376*(3.0/2.0);
                double t2450 = t2447+t2448+t2449;
                double t2451 = gamma_aa[index]*gcab*t2422*4.0;
                double t2452 = gamma_aa[index]*gcab*t2383*t2384*t2422*4.0;
                double t2453 = gamma_aa[index]*t2380*t2383*t2422*8.0;
                double t2454 = t2451+t2452+t2453;
                double t2455 = t2278*t2372*t2400;
                double t2456 = t2401+t2455;
                double t2457 = gamma_aa[index]*gamma_aa[index];
                double t2458 = gcaa*gcaa;
                double t2459 = t2458*t2458;
                double t2460 = 1/pow(rho_a[index],3.2E1/3.0);
                double t2461 = 1/pow(rho_a[index],1.6E1/3.0);
                double t2462 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t2463 = gamma_aa[index]*gcaa*t2376;
                double t2464 = t2463+1.0;
                double t2465 = gamma_aa[index]*gcaa*t2376*3.0;
                double t2466 = gamma_aa[index]*gcaa*t2462*t2457*t2458;
                double t2467 = t2461*t2457*t2458*3.0;
                double t2468 = t2465+t2466+t2467+1.0;
                double t2469 = t2457*t2457;
                double t2470 = gamma_aa[index]*gcaa*t2376*4.0;
                double t2471 = gamma_aa[index]*gcaa*t2462*t2457*t2458*4.0;
                double t2472 = t2461*t2457*t2458*6.0;
                double t2473 = t2460*t2459*t2469;
                double t2474 = t2470+t2471+t2472+t2473+1.0;
                double t2475 = gamma_aa[index]*gcaa*t2376*2.0;
                double t2476 = t2461*t2457*t2458;
                double t2477 = t2475+t2476+1.0;
                double t2478 = tau_a[index]-1.0/1.0E20;
                double t2479 = ( (t2478 > 0.0) ?  1.0 : 0.0 ) ;
                double t2480 = tau_a[index]*2.0;
                double t2520 = gamma_aa[index]*t2250*(1.0/4.0);
                double t2481 = t2480-t2520;
                double t2482 = t2216*t2481*(1.0/2.0);
                double t2483 = t2482-1.0;
                double t2484 = t2483*t2479;
                double t2485 = t2484+1.0;
                double t2486 = 1/t2464;
                double t2487 = 1/t2474;
                double t2488 = 1/t2477;
                double t2489 = 1/t2468;
                double t2490 = 1/(t2464*t2464);
                double t2491 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t2492 = 1/(t2468*t2468);
                double t2493 = 1/(t2477*t2477);
                double t2494 = gcaa*t2376*3.0;
                double t2495 = gamma_aa[index]*t2461*t2458*6.0;
                double t2496 = gcaa*t2462*t2457*t2458*3.0;
                double t2497 = t2494+t2495+t2496;
                double t2498 = 1/pow(rho_a[index],3.5E1/3.0);
                double t2499 = 1/(t2474*t2474);
                double t2500 = gcaa*t2376*4.0;
                double t2501 = gamma_aa[index]*t2461*t2458*1.2E1;
                double t2502 = gcaa*t2462*t2457*t2458*1.2E1;
                double t2503 = gamma_aa[index]*t2460*t2457*t2459*4.0;
                double t2504 = t2500+t2501+t2502+t2503;
                double t2505 = gcaa*t2376*2.0;
                double t2506 = gamma_aa[index]*t2461*t2458*2.0;
                double t2507 = t2505+t2506;
                double t2508 = gamma_aa[index]*gcaa*t2422*(1.6E1/3.0);
                double t2509 = t2426*t2457*t2458*(1.6E1/3.0);
                double t2510 = t2508+t2509;
                double t2511 = gamma_aa[index]*gcaa*t2422*8.0;
                double t2512 = gamma_aa[index]*gcaa*t2491*t2457*t2458*8.0;
                double t2513 = t2426*t2457*t2458*1.6E1;
                double t2514 = t2511+t2512+t2513;
                double t2515 = gamma_aa[index]*gcaa*t2422*(3.2E1/3.0);
                double t2516 = gamma_aa[index]*gcaa*t2491*t2457*t2458*3.2E1;
                double t2517 = t2426*t2457*t2458*3.2E1;
                double t2518 = t2459*t2469*t2498*(3.2E1/3.0);
                double t2519 = t2515+t2516+t2517+t2518;
                double t2521 = 1/t2355;
                double t2522 = 1/(t2344*t2344);
                double t2523 = b4f*t2260*t2351*(2.0/3.0);
                double t2524 = b2f*c*t2345*(1.0/3.0);
                double t2525 = b1f*c*t2352*t2345*(1.0/6.0);
                double t2526 = b3f*c*t2345*t2337*(1.0/2.0);
                double t2527 = t2523+t2524+t2525+t2526;
                double t2528 = a1f*c*c0f*t2345*t2373*(2.0/3.0);
                double t2529 = a1p*c*c0p*t2345*t2369*(2.0/3.0);
                double t2530 = ccaa1*gcaa*t2376*t2486;
                double t2531 = ccaa4*gamma_aa[index]*t2460*t2457*t2459*t2487*4.0;
                double t2532 = ccaa2*gamma_aa[index]*t2461*t2458*t2488*2.0;
                double t2533 = ccaa3*gcaa*t2462*t2457*t2458*t2489*3.0;
                double t2538 = ccaa1*gamma_aa[index]*t2461*t2490*t2458;
                double t2539 = ccaa3*gamma_aa[index]*gcaa*t2462*t2492*t2457*t2458*t2497;
                double t2540 = ccaa4*t2460*t2459*t2469*t2499*t2504;
                double t2541 = ccaa2*t2461*t2457*t2493*t2458*t2507;
                double t2534 = t2530+t2531-t2540+t2532-t2541+t2533-t2538-t2539;
                double t2535 = t2368+t2528-t2529-t2375*t2521*t2522*t2527;
                double t2536 = t2278*t2372*t2535;
                double t2537 = -t2368+t2536+t2529;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t2456+rho_b[index]*(t2418-t2278*t2372*(t2418-c0f*log((t2279* \
                   (1.0/2.0))/(b1f*t2404+b3f*t2405+b2f*c*t2402+b4f*t2260*t2406)+1.0)*(a1f*c*t2402+1.0)*2.0))-t2253*(t2302+ \
                   t2420+t2419))*(ccab1*gcab*t2421*t2422*(4.0/3.0)-ccab2*t2383*t2384*t2427*(gcab*t2422*(8.0/3.0)+gamma_aa[index]* \
                   t2383*t2426*(4.0/3.0)+t2380*t2383*t2422*(8.0/3.0))-ccab4*t2385*t2386*t2430*(gcab*t2422*(1.6E1/3.0) \
                   +gamma_aa[index]*t2383*t2426*8.0+t2380*t2383*t2422*1.6E1+gamma_aa[index]*t2384*t2385*t2426*8.0+gcab* \
                   t2383*t2384*t2422*1.6E1+t2380*t2384*t2385*t2422*(1.6E1/3.0)+gamma_aa[index]*gcab*t2380*t2383*t2426* \
                   1.6E1)-ccab1*gamma_aa[index]*t2383*t2423*t2426*(4.0/3.0)+ccab2*gamma_aa[index]*t2383*t2424*t2426*(4.0/ \
                   3.0)-ccab1*t2380*t2383*t2422*t2423*(4.0/3.0)+ccab2*t2380*t2383*t2422*t2424*(8.0/3.0)+ccab4*t2380*t2384* \
                   t2385*t2422*t2429*(1.6E1/3.0)-ccab2*t2380*t2383*t2376*t2427*t2438+ccab2*t2383*t2384*1/(t2389*t2389* \
                   t2389)*t2441*t2438*2.0+ccab4*t2385*t2386*1/(t2398*t2398*t2398)*t2435*t2446*2.0+ccab4*gamma_aa[index]* \
                   t2384*t2385*t2426*t2429*8.0+ccab3*gcab*t2383*t2384*t2422*t2428*4.0+ccab3*gamma_aa[index]*gcab*t2380* \
                   t2383*t2426*t2428*4.0-ccab2*gamma_aa[index]*t2380*t2383*t2422*t2441*t2427*(8.0/3.0)-ccab3*gcab*t2383* \
                   t2384*t2376*t2425*t2454*(3.0/2.0)-ccab4*t2380*t2384*t2376*t2385*t2430*t2446*2.0-ccab3*gcab*t2380*t2383* \
                   t2384*t2425*(gcab*t2422*4.0+gamma_aa[index]*t2383*t2426*4.0+t2380*t2383*t2422*8.0+gcab*t2383*t2384* \
                   t2422*4.0+gamma_aa[index]*gcab*t2380*t2383*t2426*4.0)+ccab1*gamma_aa[index]*gcab*t2380*1/(t2382*t2382* \
                   t2382)*t2383*t2426*(4.0/3.0)+ccab3*gcab*t2380*t2383*t2384*1/(t2393*t2393*t2393)*t2450*t2454*2.0-ccab3* \
                   gamma_aa[index]*gcab*t2383*t2384*t2422*t2450*t2425*4.0-ccab4*gamma_aa[index]*t2380*t2384*t2385*t2430* \
                   t2422*t2435*(1.6E1/3.0))-(X-1.0)*(-kp*rho_a[index]*t2225*t2248*(mu_*t2210*t2211*t2213*t2252*(1.0/3.0) \
                   +mu_*t2210*t2211*t2214*t2251*(1.0/2.0))+mu_*t2210*t2213*t2214*t2225*t2248*(1.0/4.0)+mu_*t2210*t2214* \
                   t2250*t2225*(C_k*a_1*t2216*t2226*t2249*(5.0/3.0)-C_k*a_1*t2232*t2216*t2218*t2249*(5.0/3.0)+C_k*a_2* \
                   t2232*t2216*t2218*t2249*(1.0E1/3.0)-C_k*a_2*t2216*t2234*t2219*t2249*(1.0E1/3.0)+C_k*a_3*t2216*t2234* \
                   t2219*t2249*5.0-C_k*a_4*t2220*t2216*t2238*t2249*(2.0E1/3.0)+C_k*a_5*t2220*t2216*t2238*t2249*(2.5E1/ \
                   3.0)-C_k*a_8*t2221*t2216*t2246*t2249*(4.0E1/3.0)+C_k*a_9*t2221*t2216*t2246*t2249*1.5E1-C_k*a_10*t2221* \
                   t2230*t2216*t2219*t2249*(5.0E1/3.0)+C_k*a_11*t2221*t2230*t2216*t2219*t2249*(5.5E1/3.0)+C_k*a_10*t2221* \
                   t2216*t2218*t2228*t2249*(5.0E1/3.0)-C_k*a_3*t2216*t2218*t2236*t2219*t2249*5.0+C_k*a_4*t2216*t2218* \
                   t2236*t2219*t2249*(2.0E1/3.0)-C_k*a_5*t2220*t2240*t2216*t2218*t2249*(2.5E1/3.0)+C_k*a_6*t2220*t2240* \
                   t2216*t2218*t2249*1.0E1-C_k*a_6*t2220*t2242*t2216*t2219*t2249*1.0E1+C_k*a_7*t2220*t2242*t2216*t2219* \
                   t2249*(3.5E1/3.0)-C_k*a_9*t2221*t2216*t2218*t2228*t2249*1.5E1-C_k*a_11*t2221*1/pow(t2222,1.2E1)*t2216* \
                   t2218*t2219*t2249*(5.5E1/3.0)-C_k*a_7*t2220*t2216*t2244*t2218*t2219*t2249*(3.5E1/3.0)+C_k*a_8*t2220* \
                   t2216*t2244*t2218*t2219*t2249*(4.0E1/3.0))*(1.0/4.0)+mu_*t2210*t2214*t2250*1/(t2224*t2224*t2224)*t2248* \
                   (gamma_aa[index]*mu_*t2210*t2211*t2213*t2252*(1.0/3.0)+gamma_aa[index]*mu_*t2210*t2211*t2214*t2251* \
                   (1.0/2.0))*(1.0/2.0))-(t2302+t2420+t2419+t2253*(t2313-t2278*t2297*t2300*t2303*(t2313-(t2290*1/(t2284* \
                   t2284)*(b2f*c*t2265*(1.0/3.0)+b4f*t2260*t2304*(2.0/3.0)+b1f*c*t2265*t2305*(1.0/6.0)+b3f*c*t2256*t2265* \
                   (1.0/2.0)))/t2287+a1f*c*c0f*t2265*t2288*(2.0/3.0)-a1p*c*c0p*t2291*t2265*(2.0/3.0))-a1p*c*c0p*t2291* \
                   t2265*(2.0/3.0)-t2292*t2278*t2297*t2303*t2314*4.0+t2292*t2278*t2300*t2303*t2332+t2272*t2273*t2292* \
                   t2278*t2297*t2300*4.0-Aa*t2278*t2297*t2315*t2325*t2327*(t2303*t2314*4.0-t2272*t2273*t2300*4.0)*2.0+ \
                   Aa*t2278*t2332*t2315*t2325*t2334*t2327*2.0+(t2278*t2297*1/(t2321*t2321)*t2315*t2334*t2327*(b2a*c*t2265* \
                   (1.0/3.0)+b4a*t2260*t2304*(2.0/3.0)+b1a*c*t2265*t2305*(1.0/6.0)+b3a*c*t2256*t2265*(1.0/2.0)))/t2324- \
                   Aa*a1a*c*t2265*t2278*t2297*t2315*t2325*t2334*(2.0/3.0))+rho_a[index]*(-t2368+t2529+t2278*t2372*(t2368+ \
                   t2528-t2375*t2521*t2522*t2527-a1p*c*c0p*t2345*t2369*(2.0/3.0)))-c0p*t2360*t2369*2.0-t2278*t2372*t2400) \
                   *(ccab1*gcab*t2376*t2421*(1.0/2.0)-ccab1*t2380*t2383*t2376*t2423*(1.0/2.0)+ccab2*t2380*t2383*t2376* \
                   t2424-ccab2*t2383*t2384*t2441*t2427-ccab4*t2385*t2386*t2430*t2435+ccab4*t2380*t2384*t2376*t2385*t2429* \
                   2.0+ccab3*gcab*t2383*t2384*t2376*t2428*(3.0/2.0)-ccab3*gcab*t2380*t2383*t2384*t2450*t2425)-t2456*t2485* \
                   t2534+rho_a[index]*t2485*t2534*t2537-rho_a[index]*t2456*t2485*(ccaa1*gcaa*t2422*t2486*(-8.0/3.0)+ccaa1* \
                   gamma_aa[index]*t2426*t2490*t2458*8.0-ccaa2*gamma_aa[index]*t2426*t2458*t2488*(3.2E1/3.0)+ccaa2*t2426* \
                   t2457*t2493*t2458*t2507*(1.6E1/3.0)+ccaa4*t2459*t2469*t2498*t2499*t2504*(3.2E1/3.0)+ccaa4*t2460*t2459* \
                   t2469*t2499*(gcaa*t2422*(3.2E1/3.0)+gamma_aa[index]*t2426*t2458*6.4E1+gamma_aa[index]*t2457*t2459* \
                   t2498*(1.28E2/3.0)+gcaa*t2491*t2457*t2458*9.6E1)-ccaa1*gcaa*1/(t2464*t2464*t2464)*t2491*t2457*t2458* \
                   (1.6E1/3.0)+ccaa2*t2461*t2457*t2493*t2458*(gcaa*t2422*(1.6E1/3.0)+gamma_aa[index]*t2426*t2458*(3.2E1/ \
                   3.0))-ccaa4*gamma_aa[index]*t2457*t2459*t2487*t2498*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t2461*t2493* \
                   t2458*t2510*2.0-ccaa3*gcaa*t2491*t2457*t2458*t2489*2.4E1+ccaa4*gamma_aa[index]*t2460*t2457*t2459*t2499* \
                   t2519*4.0+ccaa3*gcaa*t2462*t2492*t2457*t2458*t2514*3.0-ccaa2*t2461*t2457*t2458*1/(t2477*t2477*t2477) \
                   *t2510*t2507*2.0-ccaa4*t2460*1/(t2474*t2474*t2474)*t2459*t2469*t2504*t2519*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t2462*t2492*t2457*t2458*(gcaa*t2422*8.0+gamma_aa[index]*t2426*t2458*3.2E1+gcaa*t2491*t2457*t2458* \
                   2.4E1)+ccaa3*gamma_aa[index]*gcaa*t2491*t2492*t2457*t2458*t2497*8.0-ccaa3*gamma_aa[index]*gcaa*t2462* \
                   t2457*t2458*1/(t2468*t2468*t2468)*t2497*t2514*2.0)-t2216*t2479*t2537*(ccaa0+ccaa1*gamma_aa[index]* \
                   gcaa*t2376*t2486+ccaa2*t2461*t2457*t2458*t2488+ccaa4*t2460*t2459*t2469*t2487+ccaa3*gamma_aa[index]* \
                   gcaa*t2462*t2457*t2458*t2489)*(1.0/8.0)-t2216*t2456*t2479*(ccaa1*gamma_aa[index]*gcaa*t2422*t2486* \
                   (8.0/3.0)-ccaa1*t2426*t2490*t2457*t2458*(8.0/3.0)+ccaa2*t2426*t2457*t2458*t2488*(1.6E1/3.0)+ccaa4* \
                   t2459*t2469*t2487*t2498*(3.2E1/3.0)-ccaa2*t2461*t2457*t2493*t2458*t2510-ccaa4*t2460*t2459*t2469*t2499* \
                   t2519+ccaa3*gamma_aa[index]*gcaa*t2491*t2457*t2458*t2489*8.0-ccaa3*gamma_aa[index]*gcaa*t2462*t2492* \
                   t2457*t2458*t2514)*(1.0/8.0)-gamma_aa[index]*t2250*t2216*t2456*t2479*t2534*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                double t6031 = 1/pow(rho_a[index],1.0/3.0);
                double t6032 = c*t6031;
                double t6033 = sqrt(t6032);
                double t6034 = pow(t6032,3.0/2.0);
                double t6035 = c*c;
                double t6036 = 1/pow(rho_a[index],2.0/3.0);
                double t6037 = 1/c0p;
                double t6038 = b1p*t6033;
                double t6039 = b3p*t6034;
                double t6040 = b4p*t6035*t6036;
                double t6041 = b2p*c*t6031;
                double t6042 = t6040+t6041+t6038+t6039;
                double t6043 = 1/t6042;
                double t6044 = t6043*t6037*(1.0/2.0);
                double t6045 = t6044+1.0;
                double t6046 = log(t6045);
                double t6047 = a1p*c*t6031;
                double t6048 = t6047+1.0;
                double t6049 = 1/pow(rho_a[index],8.0/3.0);
                double t6050 = gamma_aa[index]*gamma_aa[index];
                double t6051 = gcaa*gcaa;
                double t6052 = t6051*t6051;
                double t6053 = 1/pow(rho_a[index],3.2E1/3.0);
                double t6054 = 1/pow(rho_a[index],1.6E1/3.0);
                double t6055 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t6056 = gamma_aa[index]*gcaa*t6049;
                double t6057 = t6056+1.0;
                double t6058 = gamma_aa[index]*gcaa*t6049*3.0;
                double t6059 = gamma_aa[index]*gcaa*t6050*t6051*t6055;
                double t6060 = t6050*t6051*t6054*3.0;
                double t6061 = t6060+t6058+t6059+1.0;
                double t6062 = t6050*t6050;
                double t6063 = gamma_aa[index]*gcaa*t6049*4.0;
                double t6064 = gamma_aa[index]*gcaa*t6050*t6051*t6055*4.0;
                double t6065 = t6050*t6051*t6054*6.0;
                double t6066 = t6052*t6053*t6062;
                double t6067 = t6063+t6064+t6065+t6066+1.0;
                double t6068 = gamma_aa[index]*gcaa*t6049*2.0;
                double t6069 = t6050*t6051*t6054;
                double t6070 = t6068+t6069+1.0;
                double t6071 = pow(2.0,1.0/3.0);
                double t6072 = t6071*2.0;
                double t6073 = t6072-2.0;
                double t6074 = two_13*2.0;
                double t6075 = t6074-2.0;
                double t6076 = 1/t6075;
                double t6077 = 1/c0f;
                double t6078 = b1f*t6033;
                double t6079 = b3f*t6034;
                double t6080 = b4f*t6035*t6036;
                double t6081 = b2f*c*t6031;
                double t6082 = t6080+t6081+t6078+t6079;
                double t6083 = 1/t6082;
                double t6084 = t6083*t6077*(1.0/2.0);
                double t6085 = t6084+1.0;
                double t6086 = log(t6085);
                double t6087 = a1f*c*t6031;
                double t6088 = t6087+1.0;
                double t6089 = c0f*t6086*t6088*2.0;
                double t6090 = c0p*t6046*t6048*2.0;
                double t6091 = tau_a[index]-1.0/1.0E20;
                double t6092 = ( (t6091 > 0.0) ?  1.0 : 0.0 ) ;
                double t6093 = 1/tau_a[index];
                double t6094 = tau_a[index]*2.0;
                double t6095 = 1/rho_a[index];
                double t6139 = gamma_aa[index]*t6095*(1.0/4.0);
                double t6096 = t6094-t6139;
                double t6097 = t6093*t6096*(1.0/2.0);
                double t6098 = t6097-1.0;
                double t6099 = t6092*t6098;
                double t6100 = t6099+1.0;
                double t6101 = 1/t6057;
                double t6102 = 1/t6067;
                double t6103 = 1/t6070;
                double t6104 = 1/t6061;
                double t6105 = 1/pow(rho_a[index],1.9E1/3.0);
                double t6106 = 1/(t6057*t6057);
                double t6107 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t6108 = 1/pow(rho_a[index],1.1E1/3.0);
                double t6109 = 1/(t6061*t6061);
                double t6110 = 1/(t6070*t6070);
                double t6111 = gcaa*t6049*3.0;
                double t6112 = gamma_aa[index]*t6051*t6054*6.0;
                double t6113 = gcaa*t6050*t6051*t6055*3.0;
                double t6114 = t6111+t6112+t6113;
                double t6115 = 1/pow(rho_a[index],3.5E1/3.0);
                double t6116 = 1/(t6067*t6067);
                double t6117 = gcaa*t6049*4.0;
                double t6118 = gamma_aa[index]*t6051*t6054*1.2E1;
                double t6119 = gcaa*t6050*t6051*t6055*1.2E1;
                double t6120 = gamma_aa[index]*t6050*t6052*t6053*4.0;
                double t6121 = t6120+t6117+t6118+t6119;
                double t6122 = gcaa*t6049*2.0;
                double t6123 = gamma_aa[index]*t6051*t6054*2.0;
                double t6124 = t6122+t6123;
                double t6125 = gamma_aa[index]*gcaa*t6108*(1.6E1/3.0);
                double t6126 = t6050*t6051*t6105*(1.6E1/3.0);
                double t6127 = t6125+t6126;
                double t6128 = gamma_aa[index]*gcaa*t6108*8.0;
                double t6129 = gamma_aa[index]*gcaa*t6050*t6051*t6107*8.0;
                double t6130 = t6050*t6051*t6105*1.6E1;
                double t6131 = t6130+t6128+t6129;
                double t6132 = gamma_aa[index]*gcaa*t6108*(3.2E1/3.0);
                double t6133 = gamma_aa[index]*gcaa*t6050*t6051*t6107*3.2E1;
                double t6134 = t6050*t6051*t6105*3.2E1;
                double t6135 = t6052*t6062*t6115*(3.2E1/3.0);
                double t6136 = t6132+t6133+t6134+t6135;
                double t6137 = t6090-t6089;
                double t6165 = t6073*t6076*t6137;
                double t6138 = t6090-t6165;
                double t6140 = 1/pow(rho_a[index],4.0/3.0);
                double t6141 = 1/pow(rho_a[index],5.0/3.0);
                double t6142 = 1/sqrt(t6032);
                double t6143 = 1/t6045;
                double t6144 = 1/(t6042*t6042);
                double t6145 = b4p*t6035*t6141*(2.0/3.0);
                double t6146 = b2p*c*t6140*(1.0/3.0);
                double t6147 = b1p*c*t6140*t6142*(1.0/6.0);
                double t6148 = b3p*c*t6033*t6140*(1.0/2.0);
                double t6149 = t6145+t6146+t6147+t6148;
                double t6150 = t6048*t6143*t6144*t6149;
                double t6151 = ccaa1*gcaa*t6049*t6101;
                double t6152 = ccaa4*gamma_aa[index]*t6050*t6052*t6053*t6102*4.0;
                double t6153 = ccaa2*gamma_aa[index]*t6051*t6054*t6103*2.0;
                double t6154 = ccaa3*gcaa*t6050*t6051*t6055*t6104*3.0;
                double t6166 = ccaa1*gamma_aa[index]*t6051*t6054*t6106;
                double t6167 = ccaa3*gamma_aa[index]*gcaa*t6050*t6051*t6055*t6114*t6109;
                double t6168 = ccaa4*t6052*t6053*t6062*t6121*t6116;
                double t6169 = ccaa2*t6050*t6051*t6054*t6110*t6124;
                double t6155 = t6151+t6152+t6153+t6154-t6166-t6167-t6168-t6169;
                double t6156 = 1/t6085;
                double t6157 = 1/(t6082*t6082);
                double t6158 = b4f*t6035*t6141*(2.0/3.0);
                double t6159 = b2f*c*t6140*(1.0/3.0);
                double t6160 = b1f*c*t6140*t6142*(1.0/6.0);
                double t6161 = b3f*c*t6033*t6140*(1.0/2.0);
                double t6162 = t6160+t6161+t6158+t6159;
                double t6163 = a1f*c*c0f*t6086*t6140*(2.0/3.0);
                double t6164 = a1p*c*c0p*t6046*t6140*(2.0/3.0);
                double t6170 = 1/(k*k);
                double t6171 = 1/kp;
                double t6172 = rho_a[index]*2.0;
                double t6173 = 1/(rho_a[index]*rho_a[index]);
                double t6174 = 1/pow(t6172,2.0/3.0);
                double t6175 = pow(rho_a[index],5.0/3.0);
                double t6176 = C_k*t6093*t6175;
                double t6177 = t6176-1.0;
                double t6178 = t6177*t6177;
                double t6179 = t6178*t6178;
                double t6180 = t6179*t6179;
                double t6181 = t6176+1.0;
                double t6182 = gamma_aa[index]*mu_*t6170*t6171*t6173*t6174*(1.0/4.0);
                double t6183 = t6182+1.0;
                double t6184 = 1/(t6183*t6183);
                double t6185 = X-1.0;
                double t6186 = 1/t6181;
                double t6187 = pow(rho_a[index],2.0/3.0);
                double t6188 = 1/(t6181*t6181);
                double t6189 = 1/pow(t6181,1.0E1);
                double t6190 = 1/pow(t6181,1.1E1);
                double t6191 = 1/(t6181*t6181*t6181);
                double t6192 = 1/(t6181*t6181*t6181*t6181);
                double t6193 = 1/(t6181*t6181*t6181*t6181*t6181);
                double t6194 = 1/(t6181*t6181*t6181*t6181*t6181*t6181);
                double t6195 = 1/(t6181*t6181*t6181*t6181*t6181*t6181*t6181);
                double t6196 = 1/(t6181*t6181*t6181*t6181*t6181*t6181*t6181*t6181);
                double t6197 = 1/(t6181*t6181*t6181*t6181*t6181*t6181*t6181*t6181*t6181);
                double t6198 = a_1*t6177*t6186;
                double t6199 = a_10*t6180*t6178*t6189;
                double t6200 = a_11*t6180*t6190*t6177*t6178;
                double t6201 = a_2*t6178*t6188;
                double t6202 = a_3*t6191*t6177*t6178;
                double t6203 = a_4*t6192*t6179;
                double t6204 = a_5*t6193*t6177*t6179;
                double t6205 = a_6*t6194*t6178*t6179;
                double t6206 = a_7*t6177*t6195*t6178*t6179;
                double t6207 = a_8*t6180*t6196;
                double t6208 = a_9*t6180*t6177*t6197;
                double t6209 = t6198+t6199+t6200+t6201+t6202+t6203+t6204+t6205+t6206+t6207+t6208+1.0;
                double t6210 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
                double t6211 = 1/pow(t6172,5.0/3.0);
                v_rho_a_gamma_aa_[index] = -t6100*t6155*(t6090+t6073*t6076*(t6089-c0p*t6046*t6048*2.0))-t6092*t6093* \
                   (-t6150+t6164+t6073*t6076*(t6150+t6163-t6164-t6088*t6162*t6156*t6157))*(ccaa0+ccaa1*gamma_aa[index]* \
                   gcaa*t6049*t6101+ccaa2*t6050*t6051*t6054*t6103+ccaa4*t6052*t6053*t6062*t6102+ccaa3*gamma_aa[index]* \
                   gcaa*t6050*t6051*t6055*t6104)*(1.0/8.0)-rho_a[index]*t6100*t6138*(ccaa1*gcaa*t6101*t6108*(-8.0/3.0) \
                   -ccaa2*gamma_aa[index]*t6051*t6103*t6105*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t6051*t6105*t6106*8.0+ccaa2* \
                   t6050*t6051*t6110*t6105*t6124*(1.6E1/3.0)+ccaa4*t6052*t6062*t6121*t6115*t6116*(3.2E1/3.0)+ccaa4*t6052* \
                   t6053*t6062*t6116*(gcaa*t6108*(3.2E1/3.0)+gamma_aa[index]*t6051*t6105*6.4E1+gamma_aa[index]*t6050* \
                   t6052*t6115*(1.28E2/3.0)+gcaa*t6050*t6051*t6107*9.6E1)-ccaa1*gcaa*t6050*t6051*1/(t6057*t6057*t6057) \
                   *t6107*(1.6E1/3.0)+ccaa2*t6050*t6051*t6054*t6110*(gcaa*t6108*(1.6E1/3.0)+gamma_aa[index]*t6051*t6105* \
                   (3.2E1/3.0))-ccaa4*gamma_aa[index]*t6050*t6052*t6102*t6115*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t6051* \
                   t6054*t6110*t6127*2.0-ccaa3*gcaa*t6050*t6051*t6104*t6107*2.4E1+ccaa4*gamma_aa[index]*t6050*t6052*t6053* \
                   t6116*t6136*4.0+ccaa3*gcaa*t6050*t6051*t6055*t6131*t6109*3.0-ccaa2*t6050*t6051*1/(t6070*t6070*t6070) \
                   *t6054*t6124*t6127*2.0-ccaa4*t6052*t6053*t6062*1/(t6067*t6067*t6067)*t6121*t6136*2.0+ccaa3*gamma_aa[index]* \
                   gcaa*t6050*t6051*t6055*t6109*(gcaa*t6108*8.0+gamma_aa[index]*t6051*t6105*3.2E1+gcaa*t6050*t6051*t6107* \
                   2.4E1)+ccaa3*gamma_aa[index]*gcaa*t6050*t6051*t6114*t6107*t6109*8.0-ccaa3*gamma_aa[index]*gcaa*t6050* \
                   t6051*1/(t6061*t6061*t6061)*t6055*t6131*t6114*2.0)+rho_a[index]*t6100*t6155*(-t6150+t6164+t6073*t6076* \
                   (t6150+t6163-t6088*t6162*t6156*t6157-a1p*c*c0p*t6046*t6140*(2.0/3.0)))-t6092*t6093*t6138*(ccaa1*gamma_aa[index]* \
                   gcaa*t6101*t6108*(8.0/3.0)+ccaa2*t6050*t6051*t6103*t6105*(1.6E1/3.0)-ccaa1*t6050*t6051*t6105*t6106* \
                   (8.0/3.0)+ccaa4*t6052*t6062*t6102*t6115*(3.2E1/3.0)-ccaa2*t6050*t6051*t6054*t6110*t6127-ccaa4*t6052* \
                   t6053*t6062*t6116*t6136+ccaa3*gamma_aa[index]*gcaa*t6050*t6051*t6104*t6107*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*t6050*t6051*t6055*t6131*t6109)*(1.0/8.0)-gamma_aa[index]*t6092*t6093*t6095*t6155*t6138*(1.0/8.0) \
                   +kp*rho_a[index]*t6184*t6185*t6209*(mu_*t6170*t6171*t6173*t6211*(1.0/3.0)+mu_*t6170*t6171*t6174*t6210* \
                   (1.0/2.0))-mu_*t6170*t6173*t6174*t6184*t6185*t6209*(1.0/4.0)-mu_*t6095*t6170*t6174*t6184*t6185*(C_k* \
                   a_1*t6093*t6186*t6187*(5.0/3.0)-C_k*a_1*t6093*t6177*t6187*t6188*(5.0/3.0)-C_k*a_2*t6093*t6191*t6178* \
                   t6187*(1.0E1/3.0)+C_k*a_2*t6093*t6177*t6187*t6188*(1.0E1/3.0)+C_k*a_3*t6093*t6191*t6178*t6187*5.0- \
                   C_k*a_4*t6093*t6193*t6187*t6179*(2.0E1/3.0)+C_k*a_5*t6093*t6193*t6187*t6179*(2.5E1/3.0)-C_k*a_8*t6093* \
                   t6180*t6187*t6197*(4.0E1/3.0)+C_k*a_9*t6093*t6180*t6187*t6197*1.5E1-C_k*a_10*t6093*t6180*t6190*t6178* \
                   t6187*(5.0E1/3.0)+C_k*a_11*t6093*t6180*t6190*t6178*t6187*(5.5E1/3.0)+C_k*a_10*t6093*t6180*t6177*t6187* \
                   t6189*(5.0E1/3.0)-C_k*a_3*t6093*t6192*t6177*t6178*t6187*5.0+C_k*a_4*t6093*t6192*t6177*t6178*t6187* \
                   (2.0E1/3.0)-C_k*a_5*t6093*t6194*t6177*t6187*t6179*(2.5E1/3.0)+C_k*a_6*t6093*t6194*t6177*t6187*t6179* \
                   1.0E1-C_k*a_6*t6093*t6195*t6178*t6187*t6179*1.0E1+C_k*a_7*t6093*t6195*t6178*t6187*t6179*(3.5E1/3.0) \
                   -C_k*a_9*t6093*t6180*t6177*t6187*t6189*1.5E1-C_k*a_11*t6093*t6180*1/pow(t6181,1.2E1)*t6177*t6178*t6187* \
                   (5.5E1/3.0)-C_k*a_7*t6093*t6177*t6178*t6187*t6196*t6179*(3.5E1/3.0)+C_k*a_8*t6093*t6177*t6178*t6187* \
                   t6196*t6179*(4.0E1/3.0))*(1.0/4.0)-mu_*t6095*t6170*t6174*1/(t6183*t6183*t6183)*t6185*t6209*(gamma_aa[index]* \
                   mu_*t6170*t6171*t6173*t6211*(1.0/3.0)+gamma_aa[index]*mu_*t6170*t6171*t6174*t6210*(1.0/2.0))*(1.0/ \
                   2.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2544 = rho_a[index]+rho_b[index];
                double t2545 = 1/pow(t2544,1.0/3.0);
                double t2546 = c*t2545;
                double t2547 = sqrt(t2546);
                double t2548 = b1p*t2547;
                double t2549 = pow(t2546,3.0/2.0);
                double t2550 = b3p*t2549;
                double t2551 = c*c;
                double t2552 = 1/pow(t2544,2.0/3.0);
                double t2553 = b4p*t2551*t2552;
                double t2554 = b2p*c*t2545;
                double t2555 = t2550+t2553+t2554+t2548;
                double t2556 = 1/pow(t2544,4.0/3.0);
                double t2557 = 1/c0p;
                double t2558 = 1/t2555;
                double t2559 = t2557*t2558*(1.0/2.0);
                double t2560 = t2559+1.0;
                double t2561 = a1p*c*t2545;
                double t2562 = t2561+1.0;
                double t2563 = rho_a[index]-rho_b[index];
                double t2564 = t2563*t2563;
                double t2565 = 1/t2544;
                double t2566 = t2563*t2565;
                double t2567 = two_13*2.0;
                double t2568 = t2567-2.0;
                double t2569 = 1/t2568;
                double t2570 = 1/c0f;
                double t2571 = b1f*t2547;
                double t2572 = b3f*t2549;
                double t2573 = b4f*t2551*t2552;
                double t2574 = b2f*c*t2545;
                double t2575 = t2571+t2572+t2573+t2574;
                double t2576 = 1/t2575;
                double t2577 = t2570*t2576*(1.0/2.0);
                double t2578 = t2577+1.0;
                double t2579 = log(t2578);
                double t2580 = a1f*c*t2545;
                double t2581 = t2580+1.0;
                double t2582 = log(t2560);
                double t2592 = c0f*t2581*t2579*2.0;
                double t2593 = c0p*t2562*t2582*2.0;
                double t2583 = t2592-t2593;
                double t2584 = t2566+1.0;
                double t2585 = pow(t2584,4.0/3.0);
                double t2586 = -t2566+1.0;
                double t2587 = pow(t2586,4.0/3.0);
                double t2588 = t2585+t2587-2.0;
                double t2589 = 1/(t2544*t2544);
                double t2620 = t2563*t2589;
                double t2590 = t2565-t2620;
                double t2591 = 1/(t2544*t2544*t2544*t2544);
                double t2594 = t2564*t2564;
                double t2595 = 1/pow(t2544,5.0/3.0);
                double t2596 = 1/sqrt(t2546);
                double t2597 = 1/t2560;
                double t2598 = 1/(t2555*t2555);
                double t2599 = b4p*t2551*t2595*(2.0/3.0);
                double t2600 = b2p*c*t2556*(1.0/3.0);
                double t2601 = b1p*c*t2556*t2596*(1.0/6.0);
                double t2602 = b3p*c*t2547*t2556*(1.0/2.0);
                double t2603 = t2599+t2600+t2601+t2602;
                double t2604 = t2562*t2597*t2598*t2603;
                double t2605 = 1/(t2544*t2544*t2544*t2544*t2544);
                double t2606 = 1/d2fz0;
                double t2607 = 1/Aa;
                double t2608 = b1a*t2547;
                double t2609 = b3a*t2549;
                double t2610 = b4a*t2551*t2552;
                double t2611 = b2a*c*t2545;
                double t2612 = t2610+t2611+t2608+t2609;
                double t2613 = 1/t2612;
                double t2614 = t2613*t2607*(1.0/2.0);
                double t2615 = t2614+1.0;
                double t2616 = log(t2615);
                double t2617 = a1a*c*t2545;
                double t2618 = t2617+1.0;
                double t2619 = pow(t2584,1.0/3.0);
                double t2621 = t2590*t2619*(4.0/3.0);
                double t2622 = pow(t2586,1.0/3.0);
                double t2623 = t2621-t2590*t2622*(4.0/3.0);
                double t2624 = t2591*t2594;
                double t2625 = t2624-1.0;
                double t2626 = 1/pow(rho_a[index],1.0/3.0);
                double t2627 = c*t2626;
                double t2628 = sqrt(t2627);
                double t2629 = b1f*t2628;
                double t2630 = pow(t2627,3.0/2.0);
                double t2631 = b3f*t2630;
                double t2632 = 1/pow(rho_a[index],2.0/3.0);
                double t2633 = b4f*t2551*t2632;
                double t2634 = b2f*c*t2626;
                double t2635 = t2631+t2633+t2634+t2629;
                double t2636 = 1/pow(rho_a[index],4.0/3.0);
                double t2637 = b1p*t2628;
                double t2638 = b3p*t2630;
                double t2639 = b4p*t2551*t2632;
                double t2640 = b2p*c*t2626;
                double t2641 = t2640+t2637+t2638+t2639;
                double t2642 = 1/pow(rho_a[index],5.0/3.0);
                double t2643 = 1/sqrt(t2627);
                double t2644 = 1/t2635;
                double t2645 = t2570*t2644*(1.0/2.0);
                double t2646 = t2645+1.0;
                double t2647 = 1/t2641;
                double t2648 = t2557*t2647*(1.0/2.0);
                double t2649 = t2648+1.0;
                double t2650 = a1p*c*t2626;
                double t2651 = t2650+1.0;
                double t2652 = 1/t2649;
                double t2653 = 1/(t2641*t2641);
                double t2654 = b4p*t2551*t2642*(2.0/3.0);
                double t2655 = b2p*c*t2636*(1.0/3.0);
                double t2656 = b1p*c*t2643*t2636*(1.0/6.0);
                double t2657 = b3p*c*t2636*t2628*(1.0/2.0);
                double t2658 = t2654+t2655+t2656+t2657;
                double t2659 = t2651*t2652*t2653*t2658;
                double t2660 = log(t2649);
                double t2661 = pow(2.0,1.0/3.0);
                double t2662 = t2661*2.0;
                double t2663 = t2662-2.0;
                double t2664 = log(t2646);
                double t2665 = a1f*c*t2626;
                double t2666 = t2665+1.0;
                double t2667 = 1/pow(rho_b[index],8.0/3.0);
                double t2668 = 1/pow(rho_a[index],8.0/3.0);
                double t2669 = gamma_aa[index]*t2668*(1.0/2.0);
                double t2670 = gamma_bb[index]*t2667*(1.0/2.0);
                double t2671 = t2670+t2669;
                double t2672 = gcab*t2671;
                double t2673 = t2672+1.0;
                double t2674 = gcab*gcab;
                double t2675 = t2671*t2671;
                double t2676 = t2674*t2674;
                double t2677 = t2675*t2675;
                double t2678 = t2674*t2675;
                double t2679 = gcab*t2671*2.0;
                double t2680 = t2678+t2679+1.0;
                double t2681 = t2674*t2675*3.0;
                double t2682 = gcab*t2671*t2674*t2675;
                double t2683 = gcab*t2671*3.0;
                double t2684 = t2681+t2682+t2683+1.0;
                double t2685 = t2674*t2675*6.0;
                double t2686 = gcab*t2671*t2674*t2675*4.0;
                double t2687 = t2676*t2677;
                double t2688 = gcab*t2671*4.0;
                double t2689 = t2685+t2686+t2687+t2688+1.0;
                double t2690 = c0f*t2664*t2666*2.0;
                double t2692 = c0p*t2651*t2660*2.0;
                double t2691 = t2690-t2692;
                double t2693 = 1/pow(rho_b[index],1.0/3.0);
                double t2694 = c*t2693;
                double t2695 = sqrt(t2694);
                double t2696 = pow(t2694,3.0/2.0);
                double t2697 = 1/pow(rho_b[index],2.0/3.0);
                double t2698 = b1p*t2695;
                double t2699 = b3p*t2696;
                double t2700 = b4p*t2551*t2697;
                double t2701 = b2p*c*t2693;
                double t2702 = t2698+t2699+t2700+t2701;
                double t2703 = 1/t2702;
                double t2704 = t2557*t2703*(1.0/2.0);
                double t2705 = t2704+1.0;
                double t2706 = log(t2705);
                double t2707 = a1p*c*t2693;
                double t2708 = t2707+1.0;
                double t2709 = c0p*t2706*t2708*2.0;
                double t2710 = t2591*t2583*t2594*t2569*t2588;
                double t2711 = Aa*t2569*t2588*t2606*t2616*t2625*t2618*2.0;
                double t2712 = 1/pow(rho_a[index],1.1E1/3.0);
                double t2713 = 1/(t2684*t2684);
                double t2714 = 1/(t2689*t2689);
                double t2715 = gcab*t2667*2.0;
                double t2716 = t2671*t2674*t2667*6.0;
                double t2717 = gcab*t2674*t2675*t2667*6.0;
                double t2718 = t2671*t2675*t2667*t2676*2.0;
                double t2719 = t2715+t2716+t2717+t2718;
                double t2720 = 1/(t2680*t2680);
                double t2721 = gamma_aa[index]*gcab*t2712*(8.0/3.0);
                double t2722 = gamma_aa[index]*t2671*t2674*t2712*(8.0/3.0);
                double t2723 = t2721+t2722;
                double t2724 = gcab*t2667;
                double t2725 = t2671*t2674*t2667;
                double t2726 = t2724+t2725;
                double t2727 = gamma_aa[index]*gcab*t2712*(1.6E1/3.0);
                double t2728 = gamma_aa[index]*gcab*t2674*t2675*t2712*1.6E1;
                double t2729 = gamma_aa[index]*t2671*t2675*t2676*t2712*(1.6E1/3.0);
                double t2730 = gamma_aa[index]*t2671*t2674*t2712*1.6E1;
                double t2731 = t2730+t2727+t2728+t2729;
                double t2732 = 1/(t2673*t2673);
                double t2733 = 1/t2680;
                double t2734 = gcab*t2667*(3.0/2.0);
                double t2735 = t2671*t2674*t2667*3.0;
                double t2736 = gcab*t2674*t2675*t2667*(3.0/2.0);
                double t2737 = t2734+t2735+t2736;
                double t2738 = gamma_aa[index]*gcab*t2712*4.0;
                double t2739 = gamma_aa[index]*gcab*t2674*t2675*t2712*4.0;
                double t2740 = gamma_aa[index]*t2671*t2674*t2712*8.0;
                double t2741 = t2740+t2738+t2739;
                double t2742 = 1/t2684;
                double t2743 = 1/t2689;
                v_rho_a_gamma_bb_[index] = -(t2593+t2710+t2711+t2544*(t2604-t2591*t2594*t2569*t2588*(t2604-(t2581* \
                   1/(t2575*t2575)*(b2f*c*t2556*(1.0/3.0)+b4f*t2551*t2595*(2.0/3.0)+b1f*c*t2556*t2596*(1.0/6.0)+b3f*c* \
                   t2547*t2556*(1.0/2.0)))/t2578+a1f*c*c0f*t2556*t2579*(2.0/3.0)-a1p*c*c0p*t2582*t2556*(2.0/3.0))-a1p* \
                   c*c0p*t2582*t2556*(2.0/3.0)+t2591*t2583*t2594*t2569*t2623-t2583*t2594*t2569*t2588*t2605*4.0+t2563* \
                   t2564*t2591*t2583*t2569*t2588*4.0-Aa*t2569*t2588*t2606*t2616*t2618*(t2594*t2605*4.0-t2563*t2564*t2591* \
                   4.0)*2.0+Aa*t2569*t2623*t2606*t2616*t2625*t2618*2.0+(t2569*t2588*1/(t2612*t2612)*t2606*t2625*t2618* \
                   (b2a*c*t2556*(1.0/3.0)+b4a*t2551*t2595*(2.0/3.0)+b1a*c*t2556*t2596*(1.0/6.0)+b3a*c*t2547*t2556*(1.0/ \
                   2.0)))/t2615-Aa*a1a*c*t2556*t2569*t2588*t2606*t2616*t2625*(2.0/3.0))+rho_a[index]*(-t2659+t2569*t2663* \
                   (t2659-(1/(t2635*t2635)*t2666*(b2f*c*t2636*(1.0/3.0)+b4f*t2551*t2642*(2.0/3.0)+b1f*c*t2643*t2636*(1.0/ \
                   6.0)+b3f*c*t2636*t2628*(1.0/2.0)))/t2646+a1f*c*c0f*t2636*t2664*(2.0/3.0)-a1p*c*c0p*t2660*t2636*(2.0/ \
                   3.0))+a1p*c*c0p*t2660*t2636*(2.0/3.0))-c0p*t2651*t2660*2.0-t2569*t2663*t2691)*((ccab1*gcab*t2667*(1.0/ \
                   2.0))/t2673-ccab1*t2671*t2674*t2667*t2732*(1.0/2.0)+ccab2*t2671*t2674*t2667*t2733-ccab2*t2674*t2675* \
                   t2720*t2726-ccab4*t2676*t2677*t2714*t2719+ccab4*t2671*t2675*t2667*t2676*t2743*2.0+ccab3*gcab*t2674* \
                   t2675*t2667*t2742*(3.0/2.0)-ccab3*gcab*t2671*t2674*t2675*t2713*t2737)+(rho_a[index]*(t2692+t2569*t2663* \
                   t2691)+rho_b[index]*(t2709-t2569*t2663*(t2709-c0f*log((t2570*(1.0/2.0))/(b1f*t2695+b3f*t2696+b2f*c* \
                   t2693+b4f*t2551*t2697)+1.0)*(a1f*c*t2693+1.0)*2.0))-t2544*(t2593+t2710+t2711))*(ccab4*t2676*t2677* \
                   t2714*(gamma_aa[index]*t2674*t2667*t2712*8.0+gamma_aa[index]*t2675*t2667*t2676*t2712*8.0+gamma_aa[index]* \
                   gcab*t2671*t2674*t2667*t2712*1.6E1)+ccab2*t2671*t2674*t2667*t2720*t2723-ccab2*1/(t2680*t2680*t2680) \
                   *t2674*t2675*t2723*t2726*2.0-ccab4*t2676*t2677*1/(t2689*t2689*t2689)*t2731*t2719*2.0+ccab1*gamma_aa[index]* \
                   t2674*t2667*t2712*t2732*(4.0/3.0)-ccab2*gamma_aa[index]*t2674*t2667*t2712*t2733*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t2675*t2667*t2676*t2720*t2712*(4.0/3.0)-ccab4*gamma_aa[index]*t2675*t2667*t2676*t2712*t2743*8.0+ccab2* \
                   gamma_aa[index]*t2671*t2674*t2720*t2712*t2726*(8.0/3.0)+ccab3*gcab*t2674*t2675*t2667*t2713*t2741*(3.0/ \
                   2.0)+ccab4*t2671*t2675*t2667*t2676*t2731*t2714*2.0+ccab3*gcab*t2671*t2674*t2675*t2713*(gamma_aa[index]* \
                   t2674*t2667*t2712*4.0+gamma_aa[index]*gcab*t2671*t2674*t2667*t2712*4.0)-ccab1*gamma_aa[index]*gcab* \
                   t2671*1/(t2673*t2673*t2673)*t2674*t2667*t2712*(4.0/3.0)-ccab3*gcab*t2671*t2674*t2675*1/(t2684*t2684* \
                   t2684)*t2741*t2737*2.0-ccab3*gamma_aa[index]*gcab*t2671*t2674*t2667*t2712*t2742*4.0+ccab3*gamma_aa[index]* \
                   gcab*t2674*t2675*t2712*t2713*t2737*4.0+ccab4*gamma_aa[index]*t2671*t2675*t2676*t2712*t2714*t2719*(1.6E1/ \
                   3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2745 = rho_a[index]+rho_b[index];
                double t2746 = 1/pow(t2745,1.0/3.0);
                double t2747 = c*t2746;
                double t2748 = sqrt(t2747);
                double t2749 = b1p*t2748;
                double t2750 = pow(t2747,3.0/2.0);
                double t2751 = b3p*t2750;
                double t2752 = c*c;
                double t2753 = 1/pow(t2745,2.0/3.0);
                double t2754 = b4p*t2752*t2753;
                double t2755 = b2p*c*t2746;
                double t2756 = t2751+t2754+t2755+t2749;
                double t2757 = 1/pow(t2745,4.0/3.0);
                double t2758 = 1/c0p;
                double t2759 = 1/t2756;
                double t2760 = t2758*t2759*(1.0/2.0);
                double t2761 = t2760+1.0;
                double t2762 = a1p*c*t2746;
                double t2763 = t2762+1.0;
                double t2764 = rho_a[index]-rho_b[index];
                double t2765 = t2764*t2764;
                double t2766 = 1/t2745;
                double t2767 = t2764*t2766;
                double t2768 = two_13*2.0;
                double t2769 = t2768-2.0;
                double t2770 = 1/t2769;
                double t2771 = 1/c0f;
                double t2772 = b1f*t2748;
                double t2773 = b3f*t2750;
                double t2774 = b4f*t2752*t2753;
                double t2775 = b2f*c*t2746;
                double t2776 = t2772+t2773+t2774+t2775;
                double t2777 = 1/t2776;
                double t2778 = t2771*t2777*(1.0/2.0);
                double t2779 = t2778+1.0;
                double t2780 = log(t2779);
                double t2781 = a1f*c*t2746;
                double t2782 = t2781+1.0;
                double t2783 = log(t2761);
                double t2794 = c0f*t2780*t2782*2.0;
                double t2795 = c0p*t2763*t2783*2.0;
                double t2784 = t2794-t2795;
                double t2785 = t2767+1.0;
                double t2786 = pow(t2785,4.0/3.0);
                double t2787 = -t2767+1.0;
                double t2788 = pow(t2787,4.0/3.0);
                double t2789 = t2786+t2788-2.0;
                double t2790 = 1/(t2745*t2745);
                double t2791 = t2790*t2764;
                double t2792 = t2791+t2766;
                double t2793 = 1/(t2745*t2745*t2745*t2745);
                double t2796 = t2765*t2765;
                double t2797 = 1/pow(t2745,5.0/3.0);
                double t2798 = 1/sqrt(t2747);
                double t2799 = 1/t2761;
                double t2800 = 1/(t2756*t2756);
                double t2801 = b4p*t2752*t2797*(2.0/3.0);
                double t2802 = b2p*c*t2757*(1.0/3.0);
                double t2803 = b1p*c*t2757*t2798*(1.0/6.0);
                double t2804 = b3p*c*t2748*t2757*(1.0/2.0);
                double t2805 = t2801+t2802+t2803+t2804;
                double t2806 = 1/(t2745*t2745*t2745*t2745*t2745);
                double t2807 = 1/d2fz0;
                double t2808 = 1/Aa;
                double t2809 = b1a*t2748;
                double t2810 = b3a*t2750;
                double t2811 = b4a*t2752*t2753;
                double t2812 = b2a*c*t2746;
                double t2813 = t2810+t2811+t2812+t2809;
                double t2814 = 1/t2813;
                double t2815 = t2814*t2808*(1.0/2.0);
                double t2816 = t2815+1.0;
                double t2817 = log(t2816);
                double t2818 = a1a*c*t2746;
                double t2819 = t2818+1.0;
                double t2820 = pow(t2785,1.0/3.0);
                double t2821 = t2792*t2820*(4.0/3.0);
                double t2822 = pow(t2787,1.0/3.0);
                double t2823 = t2821-t2792*t2822*(4.0/3.0);
                double t2824 = t2793*t2796;
                double t2825 = t2824-1.0;
                double t2826 = 1/pow(rho_b[index],1.0/3.0);
                double t2827 = c*t2826;
                double t2828 = sqrt(t2827);
                double t2829 = b1f*t2828;
                double t2830 = pow(t2827,3.0/2.0);
                double t2831 = b3f*t2830;
                double t2832 = 1/pow(rho_b[index],2.0/3.0);
                double t2833 = b4f*t2752*t2832;
                double t2834 = b2f*c*t2826;
                double t2835 = t2831+t2833+t2834+t2829;
                double t2836 = 1/pow(rho_b[index],4.0/3.0);
                double t2837 = b1p*t2828;
                double t2838 = b3p*t2830;
                double t2839 = b4p*t2752*t2832;
                double t2840 = b2p*c*t2826;
                double t2841 = t2840+t2837+t2838+t2839;
                double t2842 = 1/pow(rho_b[index],5.0/3.0);
                double t2843 = 1/sqrt(t2827);
                double t2844 = 1/t2835;
                double t2845 = t2771*t2844*(1.0/2.0);
                double t2846 = t2845+1.0;
                double t2847 = 1/t2841;
                double t2848 = t2758*t2847*(1.0/2.0);
                double t2849 = t2848+1.0;
                double t2850 = a1p*c*t2826;
                double t2851 = t2850+1.0;
                double t2852 = 1/t2849;
                double t2853 = 1/(t2841*t2841);
                double t2854 = b4p*t2752*t2842*(2.0/3.0);
                double t2855 = b2p*c*t2836*(1.0/3.0);
                double t2856 = b1p*c*t2843*t2836*(1.0/6.0);
                double t2857 = b3p*c*t2836*t2828*(1.0/2.0);
                double t2858 = t2854+t2855+t2856+t2857;
                double t2859 = t2851*t2852*t2853*t2858;
                double t2860 = log(t2849);
                double t2861 = pow(2.0,1.0/3.0);
                double t2862 = t2861*2.0;
                double t2863 = t2862-2.0;
                double t2864 = log(t2846);
                double t2865 = a1f*c*t2826;
                double t2866 = t2865+1.0;
                double t2867 = 1/pow(rho_a[index],8.0/3.0);
                double t2868 = gamma_aa[index]*t2867*(1.0/2.0);
                double t2869 = 1/pow(rho_b[index],8.0/3.0);
                double t2870 = gamma_bb[index]*t2869*(1.0/2.0);
                double t2871 = t2870+t2868;
                double t2872 = gcab*t2871;
                double t2873 = t2872+1.0;
                double t2874 = gcab*gcab;
                double t2875 = t2871*t2871;
                double t2876 = t2874*t2874;
                double t2877 = t2875*t2875;
                double t2878 = t2874*t2875;
                double t2879 = gcab*t2871*2.0;
                double t2880 = t2878+t2879+1.0;
                double t2881 = t2874*t2875*3.0;
                double t2882 = gcab*t2871*t2874*t2875;
                double t2883 = gcab*t2871*3.0;
                double t2884 = t2881+t2882+t2883+1.0;
                double t2885 = t2874*t2875*6.0;
                double t2886 = gcab*t2871*t2874*t2875*4.0;
                double t2887 = t2876*t2877;
                double t2888 = gcab*t2871*4.0;
                double t2889 = t2885+t2886+t2887+t2888+1.0;
                double t2890 = a1p*c*c0p*t2783*t2757*(2.0/3.0);
                double t2891 = 1/pow(rho_a[index],1.0/3.0);
                double t2892 = c*t2891;
                double t2893 = sqrt(t2892);
                double t2894 = pow(t2892,3.0/2.0);
                double t2895 = 1/pow(rho_a[index],2.0/3.0);
                double t2896 = b1p*t2893;
                double t2897 = b3p*t2894;
                double t2898 = b4p*t2752*t2895;
                double t2899 = b2p*c*t2891;
                double t2900 = t2896+t2897+t2898+t2899;
                double t2901 = 1/t2900;
                double t2902 = t2758*t2901*(1.0/2.0);
                double t2903 = t2902+1.0;
                double t2904 = log(t2903);
                double t2905 = a1p*c*t2891;
                double t2906 = t2905+1.0;
                double t2907 = c0p*t2904*t2906*2.0;
                double t2908 = c0f*t2864*t2866*2.0;
                double t2910 = c0p*t2851*t2860*2.0;
                double t2909 = -t2910+t2908;
                double t2911 = t2770*t2784*t2793*t2796*t2789;
                double t2912 = Aa*t2770*t2789*t2807*t2825*t2817*t2819*2.0;
                double t2913 = 1/pow(rho_b[index],1.1E1/3.0);
                double t2914 = 1/(t2884*t2884);
                double t2915 = 1/(t2889*t2889);
                double t2916 = gcab*t2867*2.0;
                double t2917 = t2871*t2874*t2867*6.0;
                double t2918 = gcab*t2874*t2875*t2867*6.0;
                double t2919 = t2871*t2875*t2867*t2876*2.0;
                double t2920 = t2916+t2917+t2918+t2919;
                double t2921 = 1/(t2880*t2880);
                double t2922 = gamma_bb[index]*gcab*t2913*(8.0/3.0);
                double t2923 = gamma_bb[index]*t2871*t2874*t2913*(8.0/3.0);
                double t2924 = t2922+t2923;
                double t2925 = gcab*t2867;
                double t2926 = t2871*t2874*t2867;
                double t2927 = t2925+t2926;
                double t2928 = gamma_bb[index]*gcab*t2913*(1.6E1/3.0);
                double t2929 = gamma_bb[index]*gcab*t2874*t2875*t2913*1.6E1;
                double t2930 = gamma_bb[index]*t2871*t2875*t2876*t2913*(1.6E1/3.0);
                double t2931 = gamma_bb[index]*t2871*t2874*t2913*1.6E1;
                double t2932 = t2930+t2931+t2928+t2929;
                double t2933 = 1/(t2873*t2873);
                double t2934 = 1/t2880;
                double t2935 = gcab*t2867*(3.0/2.0);
                double t2936 = t2871*t2874*t2867*3.0;
                double t2937 = gcab*t2874*t2875*t2867*(3.0/2.0);
                double t2938 = t2935+t2936+t2937;
                double t2939 = gamma_bb[index]*gcab*t2913*4.0;
                double t2940 = gamma_bb[index]*gcab*t2874*t2875*t2913*4.0;
                double t2941 = gamma_bb[index]*t2871*t2874*t2913*8.0;
                double t2942 = t2940+t2941+t2939;
                double t2943 = 1/t2884;
                double t2944 = 1/t2889;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t2910+t2770*t2863*t2909)+rho_a[index]*(t2907-t2770*t2863* \
                   (t2907-c0f*log((t2771*(1.0/2.0))/(b1f*t2893+b3f*t2894+b2f*c*t2891+b4f*t2752*t2895)+1.0)*(a1f*c*t2891+ \
                   1.0)*2.0))-t2745*(t2795+t2911+t2912))*(ccab4*t2876*t2877*t2915*(gamma_bb[index]*t2874*t2867*t2913* \
                   8.0+gamma_bb[index]*t2875*t2867*t2876*t2913*8.0+gamma_bb[index]*gcab*t2871*t2874*t2867*t2913*1.6E1) \
                   +ccab2*t2871*t2874*t2867*t2921*t2924-ccab2*1/(t2880*t2880*t2880)*t2874*t2875*t2924*t2927*2.0-ccab4* \
                   t2876*t2877*1/(t2889*t2889*t2889)*t2920*t2932*2.0+ccab1*gamma_bb[index]*t2874*t2867*t2913*t2933*(4.0/ \
                   3.0)-ccab2*gamma_bb[index]*t2874*t2867*t2913*t2934*(4.0/3.0)+ccab2*gamma_bb[index]*t2875*t2867*t2876* \
                   t2921*t2913*(4.0/3.0)-ccab4*gamma_bb[index]*t2875*t2867*t2876*t2913*t2944*8.0+ccab2*gamma_bb[index]* \
                   t2871*t2874*t2921*t2913*t2927*(8.0/3.0)+ccab3*gcab*t2874*t2875*t2867*t2914*t2942*(3.0/2.0)+ccab4*t2871* \
                   t2875*t2867*t2876*t2932*t2915*2.0+ccab3*gcab*t2871*t2874*t2875*t2914*(gamma_bb[index]*t2874*t2867* \
                   t2913*4.0+gamma_bb[index]*gcab*t2871*t2874*t2867*t2913*4.0)-ccab1*gamma_bb[index]*gcab*t2871*1/(t2873* \
                   t2873*t2873)*t2874*t2867*t2913*(4.0/3.0)-ccab3*gcab*t2871*t2874*t2875*1/(t2884*t2884*t2884)*t2942* \
                   t2938*2.0-ccab3*gamma_bb[index]*gcab*t2871*t2874*t2867*t2913*t2943*4.0+ccab3*gamma_bb[index]*gcab* \
                   t2874*t2875*t2913*t2914*t2938*4.0+ccab4*gamma_bb[index]*t2871*t2875*t2876*t2920*t2913*t2915*(1.6E1/ \
                   3.0))-(t2795+t2911+t2912+rho_b[index]*(-t2859+t2770*t2863*(t2859-(1/(t2835*t2835)*t2866*(b2f*c*t2836* \
                   (1.0/3.0)+b4f*t2752*t2842*(2.0/3.0)+b1f*c*t2843*t2836*(1.0/6.0)+b3f*c*t2836*t2828*(1.0/2.0)))/t2846+ \
                   a1f*c*c0f*t2836*t2864*(2.0/3.0)-a1p*c*c0p*t2860*t2836*(2.0/3.0))+a1p*c*c0p*t2860*t2836*(2.0/3.0))- \
                   t2745*(t2890-t2763*t2799*t2800*t2805+t2770*t2784*t2793*t2796*t2823+t2770*t2784*t2796*t2789*t2806*4.0- \
                   t2770*t2793*t2796*t2789*(t2890-t2763*t2799*t2800*t2805+(t2782*1/(t2776*t2776)*(b2f*c*t2757*(1.0/3.0) \
                   +b4f*t2752*t2797*(2.0/3.0)+b1f*c*t2757*t2798*(1.0/6.0)+b3f*c*t2748*t2757*(1.0/2.0)))/t2779-a1f*c*c0f* \
                   t2780*t2757*(2.0/3.0))+t2770*t2764*t2765*t2784*t2793*t2789*4.0+Aa*t2770*t2789*t2807*t2817*t2819*(t2796* \
                   t2806*4.0+t2764*t2765*t2793*4.0)*2.0+Aa*t2770*t2823*t2807*t2825*t2817*t2819*2.0-(t2770*t2789*1/(t2813* \
                   t2813)*t2807*t2825*t2819*(b2a*c*t2757*(1.0/3.0)+b4a*t2752*t2797*(2.0/3.0)+b1a*c*t2757*t2798*(1.0/6.0) \
                   +b3a*c*t2748*t2757*(1.0/2.0)))/t2816+Aa*a1a*c*t2770*t2757*t2789*t2807*t2825*t2817*(2.0/3.0))-c0p*t2851* \
                   t2860*2.0-t2770*t2863*t2909)*((ccab1*gcab*t2867*(1.0/2.0))/t2873-ccab1*t2871*t2874*t2867*t2933*(1.0/ \
                   2.0)+ccab2*t2871*t2874*t2867*t2934-ccab2*t2874*t2875*t2921*t2927-ccab4*t2876*t2877*t2920*t2915+ccab4* \
                   t2871*t2875*t2867*t2876*t2944*2.0+ccab3*gcab*t2874*t2875*t2867*t2943*(3.0/2.0)-ccab3*gcab*t2871*t2874* \
                   t2875*t2914*t2938);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2947 = 1/(k*k);
                double t2948 = 1/kp;
                double t2949 = rho_b[index]*2.0;
                double t2950 = 1/(rho_b[index]*rho_b[index]);
                double t2951 = 1/pow(t2949,2.0/3.0);
                double t2952 = pow(rho_b[index],5.0/3.0);
                double t2953 = 1/tau_b[index];
                double t2954 = C_k*t2952*t2953;
                double t2955 = t2954-1.0;
                double t2956 = t2955*t2955;
                double t2957 = t2956*t2956;
                double t2958 = t2957*t2957;
                double t2959 = t2954+1.0;
                double t2960 = gamma_bb[index]*mu_*t2950*t2951*t2947*t2948*(1.0/4.0);
                double t2961 = t2960+1.0;
                double t2962 = 1/(t2961*t2961);
                double t2963 = 1/t2959;
                double t2964 = a_1*t2963*t2955;
                double t2965 = 1/pow(t2959,1.0E1);
                double t2966 = a_10*t2956*t2965*t2958;
                double t2967 = 1/pow(t2959,1.1E1);
                double t2968 = a_11*t2955*t2956*t2958*t2967;
                double t2969 = 1/(t2959*t2959);
                double t2970 = a_2*t2956*t2969;
                double t2971 = 1/(t2959*t2959*t2959);
                double t2972 = a_3*t2971*t2955*t2956;
                double t2973 = 1/(t2959*t2959*t2959*t2959);
                double t2974 = a_4*t2973*t2957;
                double t2975 = 1/(t2959*t2959*t2959*t2959*t2959);
                double t2976 = a_5*t2955*t2957*t2975;
                double t2977 = 1/(t2959*t2959*t2959*t2959*t2959*t2959);
                double t2978 = a_6*t2956*t2957*t2977;
                double t2979 = 1/(t2959*t2959*t2959*t2959*t2959*t2959*t2959);
                double t2980 = a_7*t2955*t2956*t2957*t2979;
                double t2981 = 1/(t2959*t2959*t2959*t2959*t2959*t2959*t2959*t2959);
                double t2982 = a_8*t2981*t2958;
                double t2983 = 1/(t2959*t2959*t2959*t2959*t2959*t2959*t2959*t2959*t2959);
                double t2984 = a_9*t2955*t2983*t2958;
                double t2985 = t2970+t2980+t2972+t2964+t2982+t2974+t2966+t2984+t2976+t2968+t2978+1.0;
                double t2986 = pow(rho_b[index],2.0/3.0);
                double t2987 = 1/rho_b[index];
                double t2988 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
                double t2989 = 1/pow(t2949,5.0/3.0);
                double t2990 = rho_a[index]+rho_b[index];
                double t2991 = 1/pow(t2990,1.0/3.0);
                double t2992 = c*t2991;
                double t2993 = sqrt(t2992);
                double t2994 = b1p*t2993;
                double t2995 = pow(t2992,3.0/2.0);
                double t2996 = b3p*t2995;
                double t2997 = c*c;
                double t2998 = 1/pow(t2990,2.0/3.0);
                double t2999 = b4p*t2997*t2998;
                double t3000 = b2p*c*t2991;
                double t3001 = t2994+t2996+t2999+t3000;
                double t3002 = 1/pow(t2990,4.0/3.0);
                double t3003 = 1/c0p;
                double t3004 = 1/t3001;
                double t3005 = t3003*t3004*(1.0/2.0);
                double t3006 = t3005+1.0;
                double t3007 = a1p*c*t2991;
                double t3008 = t3007+1.0;
                double t3009 = rho_a[index]-rho_b[index];
                double t3010 = t3009*t3009;
                double t3011 = 1/t2990;
                double t3012 = t3011*t3009;
                double t3013 = two_13*2.0;
                double t3014 = t3013-2.0;
                double t3015 = 1/t3014;
                double t3016 = 1/c0f;
                double t3017 = b1f*t2993;
                double t3018 = b3f*t2995;
                double t3019 = b4f*t2997*t2998;
                double t3020 = b2f*c*t2991;
                double t3021 = t3020+t3017+t3018+t3019;
                double t3022 = 1/t3021;
                double t3023 = t3022*t3016*(1.0/2.0);
                double t3024 = t3023+1.0;
                double t3025 = log(t3024);
                double t3026 = a1f*c*t2991;
                double t3027 = t3026+1.0;
                double t3028 = log(t3006);
                double t3039 = c0f*t3025*t3027*2.0;
                double t3040 = c0p*t3008*t3028*2.0;
                double t3029 = -t3040+t3039;
                double t3030 = t3012+1.0;
                double t3031 = pow(t3030,4.0/3.0);
                double t3032 = -t3012+1.0;
                double t3033 = pow(t3032,4.0/3.0);
                double t3034 = t3031+t3033-2.0;
                double t3035 = 1/(t2990*t2990);
                double t3036 = t3035*t3009;
                double t3037 = t3011+t3036;
                double t3038 = 1/(t2990*t2990*t2990*t2990);
                double t3041 = t3010*t3010;
                double t3042 = 1/pow(t2990,5.0/3.0);
                double t3043 = 1/sqrt(t2992);
                double t3044 = 1/t3006;
                double t3045 = 1/(t3001*t3001);
                double t3046 = b4p*t2997*t3042*(2.0/3.0);
                double t3047 = b2p*c*t3002*(1.0/3.0);
                double t3048 = b1p*c*t3002*t3043*(1.0/6.0);
                double t3049 = b3p*c*t2993*t3002*(1.0/2.0);
                double t3050 = t3046+t3047+t3048+t3049;
                double t3051 = 1/(t2990*t2990*t2990*t2990*t2990);
                double t3052 = 1/d2fz0;
                double t3053 = 1/Aa;
                double t3054 = b1a*t2993;
                double t3055 = b3a*t2995;
                double t3056 = b4a*t2997*t2998;
                double t3057 = b2a*c*t2991;
                double t3058 = t3054+t3055+t3056+t3057;
                double t3059 = 1/t3058;
                double t3060 = t3053*t3059*(1.0/2.0);
                double t3061 = t3060+1.0;
                double t3062 = log(t3061);
                double t3063 = a1a*c*t2991;
                double t3064 = t3063+1.0;
                double t3065 = pow(t3030,1.0/3.0);
                double t3066 = t3037*t3065*(4.0/3.0);
                double t3067 = pow(t3032,1.0/3.0);
                double t3068 = t3066-t3037*t3067*(4.0/3.0);
                double t3069 = t3041*t3038;
                double t3070 = t3069-1.0;
                double t3071 = 1/pow(rho_b[index],1.0/3.0);
                double t3072 = c*t3071;
                double t3073 = sqrt(t3072);
                double t3074 = b1f*t3073;
                double t3075 = pow(t3072,3.0/2.0);
                double t3076 = b3f*t3075;
                double t3077 = 1/pow(rho_b[index],2.0/3.0);
                double t3078 = b4f*t2997*t3077;
                double t3079 = b2f*c*t3071;
                double t3080 = t3074+t3076+t3078+t3079;
                double t3081 = 1/pow(rho_b[index],4.0/3.0);
                double t3082 = b1p*t3073;
                double t3083 = b3p*t3075;
                double t3084 = b4p*t2997*t3077;
                double t3085 = b2p*c*t3071;
                double t3086 = t3082+t3083+t3084+t3085;
                double t3087 = 1/pow(rho_b[index],5.0/3.0);
                double t3088 = 1/sqrt(t3072);
                double t3089 = 1/t3080;
                double t3090 = t3016*t3089*(1.0/2.0);
                double t3091 = t3090+1.0;
                double t3092 = 1/t3086;
                double t3093 = t3003*t3092*(1.0/2.0);
                double t3094 = t3093+1.0;
                double t3095 = a1p*c*t3071;
                double t3096 = t3095+1.0;
                double t3097 = 1/t3094;
                double t3098 = 1/(t3086*t3086);
                double t3099 = b4p*t2997*t3087*(2.0/3.0);
                double t3100 = b2p*c*t3081*(1.0/3.0);
                double t3101 = b1p*c*t3081*t3088*(1.0/6.0);
                double t3102 = b3p*c*t3081*t3073*(1.0/2.0);
                double t3103 = t3099+t3100+t3101+t3102;
                double t3104 = t3096*t3097*t3098*t3103;
                double t3105 = log(t3094);
                double t3106 = pow(2.0,1.0/3.0);
                double t3107 = t3106*2.0;
                double t3108 = t3107-2.0;
                double t3109 = log(t3091);
                double t3110 = a1f*c*t3071;
                double t3111 = t3110+1.0;
                double t3112 = 1/pow(rho_b[index],8.0/3.0);
                double t3113 = 1/pow(rho_a[index],8.0/3.0);
                double t3114 = gamma_aa[index]*t3113*(1.0/2.0);
                double t3115 = gamma_bb[index]*t3112*(1.0/2.0);
                double t3116 = t3114+t3115;
                double t3117 = gcab*t3116;
                double t3118 = t3117+1.0;
                double t3119 = gcab*gcab;
                double t3120 = t3116*t3116;
                double t3121 = t3119*t3119;
                double t3122 = t3120*t3120;
                double t3123 = t3120*t3119;
                double t3124 = gcab*t3116*2.0;
                double t3125 = t3123+t3124+1.0;
                double t3126 = t3120*t3119*3.0;
                double t3127 = gcab*t3120*t3116*t3119;
                double t3128 = gcab*t3116*3.0;
                double t3129 = t3126+t3127+t3128+1.0;
                double t3130 = t3120*t3119*6.0;
                double t3131 = gcab*t3120*t3116*t3119*4.0;
                double t3132 = t3121*t3122;
                double t3133 = gcab*t3116*4.0;
                double t3134 = t3130+t3131+t3132+t3133+1.0;
                double t3135 = a1p*c*c0p*t3002*t3028*(2.0/3.0);
                double t3136 = 1/pow(rho_a[index],1.0/3.0);
                double t3137 = c*t3136;
                double t3138 = sqrt(t3137);
                double t3139 = pow(t3137,3.0/2.0);
                double t3140 = 1/pow(rho_a[index],2.0/3.0);
                double t3141 = b1p*t3138;
                double t3142 = b3p*t3139;
                double t3143 = b4p*t2997*t3140;
                double t3144 = b2p*c*t3136;
                double t3145 = t3141+t3142+t3143+t3144;
                double t3146 = 1/t3145;
                double t3147 = t3003*t3146*(1.0/2.0);
                double t3148 = t3147+1.0;
                double t3149 = log(t3148);
                double t3150 = a1p*c*t3136;
                double t3151 = t3150+1.0;
                double t3152 = c0p*t3151*t3149*2.0;
                double t3153 = c0f*t3111*t3109*2.0;
                double t3155 = c0p*t3096*t3105*2.0;
                double t3154 = t3153-t3155;
                double t3156 = t3041*t3015*t3034*t3029*t3038;
                double t3157 = Aa*t3015*t3034*t3052*t3070*t3062*t3064*2.0;
                double t3158 = 1/t3118;
                double t3159 = 1/pow(rho_b[index],1.1E1/3.0);
                double t3160 = 1/(t3118*t3118);
                double t3161 = 1/t3125;
                double t3162 = 1/(t3129*t3129);
                double t3163 = 1/pow(rho_b[index],1.9E1/3.0);
                double t3164 = 1/(t3125*t3125);
                double t3165 = 1/t3129;
                double t3166 = 1/t3134;
                double t3167 = 1/(t3134*t3134);
                double t3168 = gcab*t3112*2.0;
                double t3169 = t3112*t3116*t3119*6.0;
                double t3170 = gcab*t3120*t3112*t3119*6.0;
                double t3171 = t3120*t3112*t3121*t3116*2.0;
                double t3172 = t3170+t3171+t3168+t3169;
                double t3173 = gamma_bb[index]*gcab*t3159*(8.0/3.0);
                double t3174 = gamma_bb[index]*t3116*t3119*t3159*(8.0/3.0);
                double t3175 = t3173+t3174;
                double t3176 = gcab*t3112;
                double t3177 = t3112*t3116*t3119;
                double t3178 = t3176+t3177;
                double t3179 = gamma_bb[index]*gcab*t3159*(1.6E1/3.0);
                double t3180 = gamma_bb[index]*gcab*t3120*t3119*t3159*1.6E1;
                double t3181 = gamma_bb[index]*t3120*t3121*t3116*t3159*(1.6E1/3.0);
                double t3182 = gamma_bb[index]*t3116*t3119*t3159*1.6E1;
                double t3183 = t3180+t3181+t3182+t3179;
                double t3184 = gcab*t3112*(3.0/2.0);
                double t3185 = t3112*t3116*t3119*3.0;
                double t3186 = gcab*t3120*t3112*t3119*(3.0/2.0);
                double t3187 = t3184+t3185+t3186;
                double t3188 = gamma_bb[index]*gcab*t3159*4.0;
                double t3189 = gamma_bb[index]*gcab*t3120*t3119*t3159*4.0;
                double t3190 = gamma_bb[index]*t3116*t3119*t3159*8.0;
                double t3191 = t3190+t3188+t3189;
                double t3192 = t3015*t3108*t3154;
                double t3193 = t3155+t3192;
                double t3194 = gamma_bb[index]*gamma_bb[index];
                double t3195 = gcaa*gcaa;
                double t3196 = t3195*t3195;
                double t3197 = 1/pow(rho_b[index],3.2E1/3.0);
                double t3198 = 1/pow(rho_b[index],1.6E1/3.0);
                double t3199 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t3200 = gamma_bb[index]*gcaa*t3112;
                double t3201 = t3200+1.0;
                double t3202 = gamma_bb[index]*gcaa*t3112*3.0;
                double t3203 = gamma_bb[index]*gcaa*t3194*t3195*t3199;
                double t3204 = t3194*t3195*t3198*3.0;
                double t3205 = t3202+t3203+t3204+1.0;
                double t3206 = t3194*t3194;
                double t3207 = gamma_bb[index]*gcaa*t3112*4.0;
                double t3208 = gamma_bb[index]*gcaa*t3194*t3195*t3199*4.0;
                double t3209 = t3194*t3195*t3198*6.0;
                double t3210 = t3196*t3197*t3206;
                double t3211 = t3210+t3207+t3208+t3209+1.0;
                double t3212 = gamma_bb[index]*gcaa*t3112*2.0;
                double t3213 = t3194*t3195*t3198;
                double t3214 = t3212+t3213+1.0;
                double t3215 = tau_b[index]-1.0/1.0E20;
                double t3216 = ( (t3215 > 0.0) ?  1.0 : 0.0 ) ;
                double t3217 = tau_b[index]*2.0;
                double t3257 = gamma_bb[index]*t2987*(1.0/4.0);
                double t3218 = t3217-t3257;
                double t3219 = t2953*t3218*(1.0/2.0);
                double t3220 = t3219-1.0;
                double t3221 = t3220*t3216;
                double t3222 = t3221+1.0;
                double t3223 = 1/t3201;
                double t3224 = 1/t3211;
                double t3225 = 1/t3214;
                double t3226 = 1/t3205;
                double t3227 = 1/(t3201*t3201);
                double t3228 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t3229 = 1/(t3205*t3205);
                double t3230 = 1/(t3214*t3214);
                double t3231 = gcaa*t3112*3.0;
                double t3232 = gamma_bb[index]*t3195*t3198*6.0;
                double t3233 = gcaa*t3194*t3195*t3199*3.0;
                double t3234 = t3231+t3232+t3233;
                double t3235 = 1/pow(rho_b[index],3.5E1/3.0);
                double t3236 = 1/(t3211*t3211);
                double t3237 = gcaa*t3112*4.0;
                double t3238 = gamma_bb[index]*t3195*t3198*1.2E1;
                double t3239 = gcaa*t3194*t3195*t3199*1.2E1;
                double t3240 = gamma_bb[index]*t3194*t3196*t3197*4.0;
                double t3241 = t3240+t3237+t3238+t3239;
                double t3242 = gcaa*t3112*2.0;
                double t3243 = gamma_bb[index]*t3195*t3198*2.0;
                double t3244 = t3242+t3243;
                double t3245 = gamma_bb[index]*gcaa*t3159*(1.6E1/3.0);
                double t3246 = t3163*t3194*t3195*(1.6E1/3.0);
                double t3247 = t3245+t3246;
                double t3248 = gamma_bb[index]*gcaa*t3159*8.0;
                double t3249 = gamma_bb[index]*gcaa*t3194*t3195*t3228*8.0;
                double t3250 = t3163*t3194*t3195*1.6E1;
                double t3251 = t3250+t3248+t3249;
                double t3252 = gamma_bb[index]*gcaa*t3159*(3.2E1/3.0);
                double t3253 = gamma_bb[index]*gcaa*t3194*t3195*t3228*3.2E1;
                double t3254 = t3163*t3194*t3195*3.2E1;
                double t3255 = t3196*t3206*t3235*(3.2E1/3.0);
                double t3256 = t3252+t3253+t3254+t3255;
                double t3258 = 1/t3091;
                double t3259 = 1/(t3080*t3080);
                double t3260 = b4f*t2997*t3087*(2.0/3.0);
                double t3261 = b2f*c*t3081*(1.0/3.0);
                double t3262 = b1f*c*t3081*t3088*(1.0/6.0);
                double t3263 = b3f*c*t3081*t3073*(1.0/2.0);
                double t3264 = t3260+t3261+t3262+t3263;
                double t3265 = a1f*c*c0f*t3081*t3109*(2.0/3.0);
                double t3266 = a1p*c*c0p*t3081*t3105*(2.0/3.0);
                double t3267 = ccaa1*gcaa*t3112*t3223;
                double t3268 = ccaa4*gamma_bb[index]*t3194*t3196*t3197*t3224*4.0;
                double t3269 = ccaa2*gamma_bb[index]*t3195*t3198*t3225*2.0;
                double t3270 = ccaa3*gcaa*t3194*t3195*t3199*t3226*3.0;
                double t3275 = ccaa1*gamma_bb[index]*t3195*t3198*t3227;
                double t3276 = ccaa3*gamma_bb[index]*gcaa*t3194*t3195*t3199*t3234*t3229;
                double t3277 = ccaa4*t3196*t3197*t3241*t3206*t3236;
                double t3278 = ccaa2*t3194*t3195*t3198*t3230*t3244;
                double t3271 = t3270-t3275+t3267-t3276+t3268-t3277+t3269-t3278;
                double t3272 = t3104+t3265-t3266-t3111*t3264*t3258*t3259;
                double t3273 = t3015*t3108*t3272;
                double t3274 = -t3104+t3273+t3266;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t3193+rho_a[index]*(t3152-t3015*t3108*(t3152-c0f*log((t3016* \
                   (1.0/2.0))/(b1f*t3138+b3f*t3139+b2f*c*t3136+b4f*t2997*t3140)+1.0)*(a1f*c*t3136+1.0)*2.0))-t2990*(t3040+ \
                   t3156+t3157))*(ccab1*gcab*t3158*t3159*(4.0/3.0)-ccab2*t3120*t3119*t3164*(gcab*t3159*(8.0/3.0)+gamma_bb[index]* \
                   t3163*t3119*(4.0/3.0)+t3116*t3119*t3159*(8.0/3.0))-ccab4*t3121*t3122*t3167*(gcab*t3159*(1.6E1/3.0) \
                   +gamma_bb[index]*t3163*t3119*8.0+t3116*t3119*t3159*1.6E1+gamma_bb[index]*t3120*t3121*t3163*8.0+gcab* \
                   t3120*t3119*t3159*1.6E1+t3120*t3121*t3116*t3159*(1.6E1/3.0)+gamma_bb[index]*gcab*t3116*t3163*t3119* \
                   1.6E1)-ccab1*gamma_bb[index]*t3160*t3163*t3119*(4.0/3.0)+ccab2*gamma_bb[index]*t3161*t3163*t3119*(4.0/ \
                   3.0)-ccab1*t3160*t3116*t3119*t3159*(4.0/3.0)+ccab2*t3116*t3161*t3119*t3159*(8.0/3.0)+ccab4*t3120*t3121* \
                   t3116*t3166*t3159*(1.6E1/3.0)-ccab2*t3112*t3116*t3119*t3164*t3175+ccab4*t3121*t3122*1/(t3134*t3134* \
                   t3134)*t3172*t3183*2.0+ccab2*t3120*1/(t3125*t3125*t3125)*t3119*t3175*t3178*2.0+ccab4*gamma_bb[index]* \
                   t3120*t3121*t3163*t3166*8.0+ccab3*gcab*t3120*t3119*t3165*t3159*4.0+ccab3*gamma_bb[index]*gcab*t3116* \
                   t3163*t3119*t3165*4.0-ccab2*gamma_bb[index]*t3116*t3119*t3164*t3159*t3178*(8.0/3.0)-ccab3*gcab*t3120* \
                   t3112*t3162*t3119*t3191*(3.0/2.0)-ccab4*t3120*t3112*t3121*t3116*t3183*t3167*2.0-ccab3*gcab*t3120*t3116* \
                   t3162*t3119*(gcab*t3159*4.0+gamma_bb[index]*t3163*t3119*4.0+t3116*t3119*t3159*8.0+gcab*t3120*t3119* \
                   t3159*4.0+gamma_bb[index]*gcab*t3116*t3163*t3119*4.0)+ccab1*gamma_bb[index]*gcab*t3116*1/(t3118*t3118* \
                   t3118)*t3163*t3119*(4.0/3.0)+ccab3*gcab*t3120*t3116*t3119*t3191*1/(t3129*t3129*t3129)*t3187*2.0-ccab3* \
                   gamma_bb[index]*gcab*t3120*t3162*t3119*t3159*t3187*4.0-ccab4*gamma_bb[index]*t3120*t3121*t3116*t3172* \
                   t3167*t3159*(1.6E1/3.0))-(t3040+t3156+t3157+rho_b[index]*(-t3104+t3266+t3015*t3108*(t3104+t3265-t3111* \
                   t3264*t3258*t3259-a1p*c*c0p*t3081*t3105*(2.0/3.0)))-t2990*(t3135-t3050*t3008*t3044*t3045+t3041*t3015* \
                   t3051*t3034*t3029*4.0+t3041*t3015*t3029*t3038*t3068-t3041*t3015*t3034*t3038*(t3135-t3050*t3008*t3044* \
                   t3045+(1/(t3021*t3021)*t3027*(b2f*c*t3002*(1.0/3.0)+b4f*t2997*t3042*(2.0/3.0)+b1f*c*t3002*t3043*(1.0/ \
                   6.0)+b3f*c*t2993*t3002*(1.0/2.0)))/t3024-a1f*c*c0f*t3002*t3025*(2.0/3.0))+t3010*t3015*t3034*t3009* \
                   t3029*t3038*4.0+Aa*t3015*t3034*t3052*t3062*t3064*(t3041*t3051*4.0+t3010*t3009*t3038*4.0)*2.0+Aa*t3015* \
                   t3052*t3070*t3062*t3064*t3068*2.0-(t3015*t3034*t3052*t3070*t3064*1/(t3058*t3058)*(b2a*c*t3002*(1.0/ \
                   3.0)+b4a*t2997*t3042*(2.0/3.0)+b1a*c*t3002*t3043*(1.0/6.0)+b3a*c*t2993*t3002*(1.0/2.0)))/t3061+Aa* \
                   a1a*c*t3002*t3015*t3034*t3052*t3070*t3062*(2.0/3.0))-c0p*t3096*t3105*2.0-t3015*t3108*t3154)*(ccab1* \
                   gcab*t3112*t3158*(1.0/2.0)-ccab1*t3112*t3160*t3116*t3119*(1.0/2.0)+ccab2*t3112*t3116*t3161*t3119-ccab4* \
                   t3121*t3122*t3172*t3167-ccab2*t3120*t3119*t3164*t3178+ccab4*t3120*t3112*t3121*t3116*t3166*2.0+ccab3* \
                   gcab*t3120*t3112*t3119*t3165*(3.0/2.0)-ccab3*gcab*t3120*t3116*t3162*t3119*t3187)-(X-1.0)*(-kp*rho_b[index]* \
                   t2962*t2985*(mu_*t2950*t2947*t2948*t2989*(1.0/3.0)+mu_*t2951*t2947*t2948*t2988*(1.0/2.0))+mu_*t2950* \
                   t2951*t2962*t2947*t2985*(1.0/4.0)+mu_*t2951*t2962*t2947*t2987*(C_k*a_1*t2953*t2963*t2986*(5.0/3.0) \
                   -C_k*a_1*t2953*t2955*t2986*t2969*(5.0/3.0)-C_k*a_2*t2953*t2971*t2956*t2986*(1.0E1/3.0)+C_k*a_2*t2953* \
                   t2955*t2986*t2969*(1.0E1/3.0)+C_k*a_3*t2953*t2971*t2956*t2986*5.0-C_k*a_4*t2953*t2957*t2975*t2986* \
                   (2.0E1/3.0)+C_k*a_5*t2953*t2957*t2975*t2986*(2.5E1/3.0)-C_k*a_8*t2953*t2983*t2958*t2986*(4.0E1/3.0) \
                   +C_k*a_9*t2953*t2983*t2958*t2986*1.5E1+C_k*a_10*t2953*t2955*t2965*t2958*t2986*(5.0E1/3.0)-C_k*a_10* \
                   t2953*t2956*t2958*t2967*t2986*(5.0E1/3.0)+C_k*a_11*t2953*t2956*t2958*t2967*t2986*(5.5E1/3.0)-C_k*a_3* \
                   t2953*t2955*t2973*t2956*t2986*5.0+C_k*a_4*t2953*t2955*t2973*t2956*t2986*(2.0E1/3.0)-C_k*a_5*t2953* \
                   t2955*t2957*t2977*t2986*(2.5E1/3.0)+C_k*a_6*t2953*t2955*t2957*t2977*t2986*1.0E1-C_k*a_6*t2953*t2956* \
                   t2957*t2986*t2979*1.0E1+C_k*a_7*t2953*t2956*t2957*t2986*t2979*(3.5E1/3.0)-C_k*a_9*t2953*t2955*t2965* \
                   t2958*t2986*1.5E1-C_k*a_11*t2953*t2955*t2956*t2958*1/pow(t2959,1.2E1)*t2986*(5.5E1/3.0)-C_k*a_7*t2953* \
                   t2981*t2955*t2956*t2957*t2986*(3.5E1/3.0)+C_k*a_8*t2953*t2981*t2955*t2956*t2957*t2986*(4.0E1/3.0)) \
                   *(1.0/4.0)+mu_*t2951*1/(t2961*t2961*t2961)*t2947*t2985*t2987*(gamma_bb[index]*mu_*t2950*t2947*t2948* \
                   t2989*(1.0/3.0)+gamma_bb[index]*mu_*t2951*t2947*t2948*t2988*(1.0/2.0))*(1.0/2.0))-t3193*t3222*t3271+ \
                   rho_b[index]*t3222*t3271*t3274-rho_b[index]*t3193*t3222*(ccaa1*gcaa*t3159*t3223*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t3163*t3195*t3225*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t3163*t3195*t3227*8.0+ccaa2*t3163*t3194*t3195* \
                   t3230*t3244*(1.6E1/3.0)+ccaa4*t3196*t3241*t3206*t3235*t3236*(3.2E1/3.0)+ccaa4*t3196*t3197*t3206*t3236* \
                   (gcaa*t3159*(3.2E1/3.0)+gamma_bb[index]*t3163*t3195*6.4E1+gamma_bb[index]*t3194*t3196*t3235*(1.28E2/ \
                   3.0)+gcaa*t3194*t3195*t3228*9.6E1)-ccaa1*gcaa*t3194*t3195*1/(t3201*t3201*t3201)*t3228*(1.6E1/3.0)+ \
                   ccaa2*t3194*t3195*t3198*t3230*(gcaa*t3159*(1.6E1/3.0)+gamma_bb[index]*t3163*t3195*(3.2E1/3.0))-ccaa4* \
                   gamma_bb[index]*t3194*t3196*t3224*t3235*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t3195*t3198*t3230*t3247* \
                   2.0-ccaa3*gcaa*t3194*t3195*t3226*t3228*2.4E1+ccaa4*gamma_bb[index]*t3194*t3196*t3197*t3236*t3256*4.0+ \
                   ccaa3*gcaa*t3194*t3195*t3199*t3251*t3229*3.0-ccaa2*t3194*t3195*t3198*1/(t3214*t3214*t3214)*t3244*t3247* \
                   2.0-ccaa4*t3196*t3197*1/(t3211*t3211*t3211)*t3241*t3206*t3256*2.0+ccaa3*gamma_bb[index]*gcaa*t3194* \
                   t3195*t3199*t3229*(gcaa*t3159*8.0+gamma_bb[index]*t3163*t3195*3.2E1+gcaa*t3194*t3195*t3228*2.4E1)+ \
                   ccaa3*gamma_bb[index]*gcaa*t3194*t3195*t3234*t3228*t3229*8.0-ccaa3*gamma_bb[index]*gcaa*t3194*t3195* \
                   t3199*1/(t3205*t3205*t3205)*t3251*t3234*2.0)-t2953*t3216*t3274*(ccaa0+ccaa1*gamma_bb[index]*gcaa*t3112* \
                   t3223+ccaa2*t3194*t3195*t3198*t3225+ccaa4*t3196*t3197*t3206*t3224+ccaa3*gamma_bb[index]*gcaa*t3194* \
                   t3195*t3199*t3226)*(1.0/8.0)-t2953*t3193*t3216*(ccaa1*gamma_bb[index]*gcaa*t3159*t3223*(8.0/3.0)+ccaa2* \
                   t3163*t3194*t3195*t3225*(1.6E1/3.0)-ccaa1*t3163*t3194*t3195*t3227*(8.0/3.0)+ccaa4*t3196*t3206*t3224* \
                   t3235*(3.2E1/3.0)-ccaa2*t3194*t3195*t3198*t3230*t3247-ccaa4*t3196*t3197*t3206*t3236*t3256+ccaa3*gamma_bb[index]* \
                   gcaa*t3194*t3195*t3226*t3228*8.0-ccaa3*gamma_bb[index]*gcaa*t3194*t3195*t3199*t3251*t3229)*(1.0/8.0) \
                   -gamma_bb[index]*t2953*t2987*t3193*t3216*t3271*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t4909 = 1/pow(rho_b[index],1.0/3.0);
                double t4910 = c*t4909;
                double t4911 = sqrt(t4910);
                double t4912 = pow(t4910,3.0/2.0);
                double t4913 = c*c;
                double t4914 = 1/pow(rho_b[index],2.0/3.0);
                double t4915 = 1/c0p;
                double t4916 = b1p*t4911;
                double t4917 = b3p*t4912;
                double t4918 = b4p*t4913*t4914;
                double t4919 = b2p*c*t4909;
                double t4920 = t4916+t4917+t4918+t4919;
                double t4921 = 1/t4920;
                double t4922 = t4921*t4915*(1.0/2.0);
                double t4923 = t4922+1.0;
                double t4924 = log(t4923);
                double t4925 = a1p*c*t4909;
                double t4926 = t4925+1.0;
                double t4927 = 1/pow(rho_b[index],8.0/3.0);
                double t4928 = gamma_bb[index]*gamma_bb[index];
                double t4929 = gcaa*gcaa;
                double t4930 = t4929*t4929;
                double t4931 = 1/pow(rho_b[index],3.2E1/3.0);
                double t4932 = 1/pow(rho_b[index],1.6E1/3.0);
                double t4933 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t4934 = gamma_bb[index]*gcaa*t4927;
                double t4935 = t4934+1.0;
                double t4936 = gamma_bb[index]*gcaa*t4927*3.0;
                double t4937 = gamma_bb[index]*gcaa*t4933*t4928*t4929;
                double t4938 = t4932*t4928*t4929*3.0;
                double t4939 = t4936+t4937+t4938+1.0;
                double t4940 = t4928*t4928;
                double t4941 = gamma_bb[index]*gcaa*t4927*4.0;
                double t4942 = gamma_bb[index]*gcaa*t4933*t4928*t4929*4.0;
                double t4943 = t4932*t4928*t4929*6.0;
                double t4944 = t4930*t4931*t4940;
                double t4945 = t4941+t4942+t4943+t4944+1.0;
                double t4946 = gamma_bb[index]*gcaa*t4927*2.0;
                double t4947 = t4932*t4928*t4929;
                double t4948 = t4946+t4947+1.0;
                double t4949 = pow(2.0,1.0/3.0);
                double t4950 = t4949*2.0;
                double t4951 = t4950-2.0;
                double t4952 = two_13*2.0;
                double t4953 = t4952-2.0;
                double t4954 = 1/t4953;
                double t4955 = 1/c0f;
                double t4956 = b1f*t4911;
                double t4957 = b3f*t4912;
                double t4958 = b4f*t4913*t4914;
                double t4959 = b2f*c*t4909;
                double t4960 = t4956+t4957+t4958+t4959;
                double t4961 = 1/t4960;
                double t4962 = t4961*t4955*(1.0/2.0);
                double t4963 = t4962+1.0;
                double t4964 = log(t4963);
                double t4965 = a1f*c*t4909;
                double t4966 = t4965+1.0;
                double t4967 = c0f*t4964*t4966*2.0;
                double t4968 = c0p*t4924*t4926*2.0;
                double t4969 = tau_b[index]-1.0/1.0E20;
                double t4970 = ( (t4969 > 0.0) ?  1.0 : 0.0 ) ;
                double t4971 = 1/tau_b[index];
                double t4972 = tau_b[index]*2.0;
                double t4973 = 1/rho_b[index];
                double t5018 = gamma_bb[index]*t4973*(1.0/4.0);
                double t4974 = t4972-t5018;
                double t4975 = t4971*t4974*(1.0/2.0);
                double t4976 = t4975-1.0;
                double t4977 = t4970*t4976;
                double t4978 = t4977+1.0;
                double t4979 = 1/t4935;
                double t4980 = 1/t4945;
                double t4981 = 1/t4948;
                double t4982 = 1/t4939;
                double t4983 = 1/pow(rho_b[index],1.9E1/3.0);
                double t4984 = 1/(t4935*t4935);
                double t4985 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t4986 = 1/pow(rho_b[index],1.1E1/3.0);
                double t4987 = 1/(t4939*t4939);
                double t4988 = 1/(t4948*t4948);
                double t4989 = gcaa*t4927*3.0;
                double t4990 = gamma_bb[index]*t4932*t4929*6.0;
                double t4991 = gcaa*t4933*t4928*t4929*3.0;
                double t4992 = t4990+t4991+t4989;
                double t4993 = 1/pow(rho_b[index],3.5E1/3.0);
                double t4994 = 1/(t4945*t4945);
                double t4995 = gcaa*t4927*4.0;
                double t4996 = gamma_bb[index]*t4932*t4929*1.2E1;
                double t4997 = gcaa*t4933*t4928*t4929*1.2E1;
                double t4998 = gamma_bb[index]*t4930*t4931*t4928*4.0;
                double t4999 = t4995+t4996+t4997+t4998;
                double t5000 = gcaa*t4927*2.0;
                double t5001 = gamma_bb[index]*t4932*t4929*2.0;
                double t5002 = t5000+t5001;
                double t5003 = gamma_bb[index]*gcaa*t4986*(1.6E1/3.0);
                double t5004 = t4928*t4929*t4983*(1.6E1/3.0);
                double t5005 = t5003+t5004;
                double t5006 = gamma_bb[index]*gcaa*t4986*8.0;
                double t5007 = gamma_bb[index]*gcaa*t4928*t4929*t4985*8.0;
                double t5008 = t4928*t4929*t4983*1.6E1;
                double t5009 = t5006+t5007+t5008;
                double t5010 = gamma_bb[index]*gcaa*t4986*(3.2E1/3.0);
                double t5011 = gamma_bb[index]*gcaa*t4928*t4929*t4985*3.2E1;
                double t5012 = t4928*t4929*t4983*3.2E1;
                double t5013 = t4930*t4940*t4993*(3.2E1/3.0);
                double t5014 = t5010+t5011+t5012+t5013;
                double t5015 = t4967-t4968;
                double t5016 = t4951*t4954*t5015;
                double t5017 = t4968+t5016;
                double t5019 = 1/pow(rho_b[index],4.0/3.0);
                double t5020 = 1/pow(rho_b[index],5.0/3.0);
                double t5021 = 1/sqrt(t4910);
                double t5022 = 1/t4923;
                double t5023 = 1/(t4920*t4920);
                double t5024 = b4p*t4913*t5020*(2.0/3.0);
                double t5025 = b2p*c*t5019*(1.0/3.0);
                double t5026 = b1p*c*t5021*t5019*(1.0/6.0);
                double t5027 = b3p*c*t4911*t5019*(1.0/2.0);
                double t5028 = t5024+t5025+t5026+t5027;
                double t5029 = t4926*t5022*t5023*t5028;
                double t5030 = ccaa1*gcaa*t4927*t4979;
                double t5031 = ccaa4*gamma_bb[index]*t4930*t4931*t4980*t4928*4.0;
                double t5032 = ccaa2*gamma_bb[index]*t4932*t4981*t4929*2.0;
                double t5033 = ccaa3*gcaa*t4933*t4928*t4982*t4929*3.0;
                double t5044 = ccaa1*gamma_bb[index]*t4932*t4929*t4984;
                double t5045 = ccaa3*gamma_bb[index]*gcaa*t4933*t4928*t4929*t4992*t4987;
                double t5046 = ccaa4*t4930*t4931*t4940*t4994*t4999;
                double t5047 = ccaa2*t4932*t4928*t4929*t4988*t5002;
                double t5034 = t5030+t5031+t5032+t5033-t5044-t5045-t5046-t5047;
                double t5035 = 1/t4963;
                double t5036 = 1/(t4960*t4960);
                double t5037 = b4f*t4913*t5020*(2.0/3.0);
                double t5038 = b2f*c*t5019*(1.0/3.0);
                double t5039 = b1f*c*t5021*t5019*(1.0/6.0);
                double t5040 = b3f*c*t4911*t5019*(1.0/2.0);
                double t5041 = t5040+t5037+t5038+t5039;
                double t5042 = a1f*c*c0f*t4964*t5019*(2.0/3.0);
                double t5043 = a1p*c*c0p*t4924*t5019*(2.0/3.0);
                double t5048 = 1/(k*k);
                double t5049 = 1/kp;
                double t5050 = rho_b[index]*2.0;
                double t5051 = 1/(rho_b[index]*rho_b[index]);
                double t5052 = 1/pow(t5050,2.0/3.0);
                double t5053 = pow(rho_b[index],5.0/3.0);
                double t5054 = C_k*t4971*t5053;
                double t5055 = t5054-1.0;
                double t5056 = t5055*t5055;
                double t5057 = t5056*t5056;
                double t5058 = t5057*t5057;
                double t5059 = t5054+1.0;
                double t5060 = gamma_bb[index]*mu_*t5051*t5052*t5048*t5049*(1.0/4.0);
                double t5061 = t5060+1.0;
                double t5062 = 1/(t5061*t5061);
                double t5063 = X-1.0;
                double t5064 = 1/t5059;
                double t5065 = pow(rho_b[index],2.0/3.0);
                double t5066 = 1/(t5059*t5059);
                double t5067 = 1/pow(t5059,1.0E1);
                double t5068 = 1/pow(t5059,1.1E1);
                double t5069 = 1/(t5059*t5059*t5059);
                double t5070 = 1/(t5059*t5059*t5059*t5059);
                double t5071 = 1/(t5059*t5059*t5059*t5059*t5059);
                double t5072 = 1/(t5059*t5059*t5059*t5059*t5059*t5059);
                double t5073 = 1/(t5059*t5059*t5059*t5059*t5059*t5059*t5059);
                double t5074 = 1/(t5059*t5059*t5059*t5059*t5059*t5059*t5059*t5059);
                double t5075 = 1/(t5059*t5059*t5059*t5059*t5059*t5059*t5059*t5059*t5059);
                double t5076 = a_1*t5055*t5064;
                double t5077 = a_10*t5056*t5058*t5067;
                double t5078 = a_11*t5055*t5056*t5058*t5068;
                double t5079 = a_2*t5056*t5066;
                double t5080 = a_3*t5055*t5056*t5069;
                double t5081 = a_4*t5070*t5057;
                double t5082 = a_5*t5071*t5055*t5057;
                double t5083 = a_6*t5072*t5056*t5057;
                double t5084 = a_7*t5055*t5073*t5056*t5057;
                double t5085 = a_8*t5074*t5058;
                double t5086 = a_9*t5055*t5075*t5058;
                double t5087 = t5080+t5081+t5082+t5083+t5084+t5076+t5085+t5077+t5086+t5078+t5079+1.0;
                double t5088 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
                double t5089 = 1/pow(t5050,5.0/3.0);
                v_rho_b_gamma_bb_[index] = -t4978*t5034*(t4968+t4951*t4954*(t4967-c0p*t4924*t4926*2.0))-t4970*t4971* \
                   (t5043-t5029+t4951*t4954*(t5042-t5043+t5029-t4966*t5041*t5035*t5036))*(ccaa0+ccaa1*gamma_bb[index]* \
                   gcaa*t4927*t4979+ccaa4*t4930*t4931*t4940*t4980+ccaa2*t4932*t4981*t4928*t4929+ccaa3*gamma_bb[index]* \
                   gcaa*t4933*t4928*t4982*t4929)*(1.0/8.0)-rho_b[index]*t4978*t5017*(ccaa1*gcaa*t4986*t4979*(-8.0/3.0) \
                   -ccaa2*gamma_bb[index]*t4981*t4929*t4983*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t4929*t4983*t4984*8.0+ccaa4* \
                   t4930*t4940*t4993*t4994*t4999*(3.2E1/3.0)+ccaa2*t4928*t4929*t4983*t4988*t5002*(1.6E1/3.0)+ccaa4*t4930* \
                   t4931*t4940*t4994*(gcaa*t4986*(3.2E1/3.0)+gamma_bb[index]*t4929*t4983*6.4E1+gamma_bb[index]*t4930* \
                   t4928*t4993*(1.28E2/3.0)+gcaa*t4928*t4929*t4985*9.6E1)-ccaa1*gcaa*1/(t4935*t4935*t4935)*t4928*t4929* \
                   t4985*(1.6E1/3.0)+ccaa2*t4932*t4928*t4929*t4988*(gcaa*t4986*(1.6E1/3.0)+gamma_bb[index]*t4929*t4983* \
                   (3.2E1/3.0))-ccaa4*gamma_bb[index]*t4930*t4980*t4928*t4993*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t4932* \
                   t4929*t4988*t5005*2.0-ccaa3*gcaa*t4928*t4982*t4929*t4985*2.4E1+ccaa4*gamma_bb[index]*t4930*t4931*t4928* \
                   t4994*t5014*4.0+ccaa3*gcaa*t4933*t4928*t4929*t4987*t5009*3.0-ccaa4*t4930*t4931*t4940*1/(t4945*t4945* \
                   t4945)*t4999*t5014*2.0-ccaa2*t4932*t4928*t4929*1/(t4948*t4948*t4948)*t5002*t5005*2.0+ccaa3*gamma_bb[index]* \
                   gcaa*t4933*t4928*t4929*t4987*(gcaa*t4986*8.0+gamma_bb[index]*t4929*t4983*3.2E1+gcaa*t4928*t4929*t4985* \
                   2.4E1)+ccaa3*gamma_bb[index]*gcaa*t4928*t4929*t4992*t4985*t4987*8.0-ccaa3*gamma_bb[index]*gcaa*t4933* \
                   t4928*t4929*t4992*1/(t4939*t4939*t4939)*t5009*2.0)+rho_b[index]*t4978*t5034*(t5043-t5029+t4951*t4954* \
                   (t5042+t5029-t4966*t5041*t5035*t5036-a1p*c*c0p*t4924*t5019*(2.0/3.0)))-t4970*t4971*t5017*(ccaa1*gamma_bb[index]* \
                   gcaa*t4986*t4979*(8.0/3.0)+ccaa4*t4930*t4940*t4980*t4993*(3.2E1/3.0)+ccaa2*t4981*t4928*t4929*t4983* \
                   (1.6E1/3.0)-ccaa1*t4928*t4929*t4983*t4984*(8.0/3.0)-ccaa4*t4930*t4931*t4940*t4994*t5014-ccaa2*t4932* \
                   t4928*t4929*t4988*t5005+ccaa3*gamma_bb[index]*gcaa*t4928*t4982*t4929*t4985*8.0-ccaa3*gamma_bb[index]* \
                   gcaa*t4933*t4928*t4929*t4987*t5009)*(1.0/8.0)-gamma_bb[index]*t4970*t4971*t4973*t5034*t5017*(1.0/8.0) \
                   +kp*rho_b[index]*t5062*t5063*t5087*(mu_*t5051*t5048*t5049*t5089*(1.0/3.0)+mu_*t5052*t5048*t5049*t5088* \
                   (1.0/2.0))-mu_*t5051*t5052*t5062*t5063*t5048*t5087*(1.0/4.0)-mu_*t4973*t5052*t5062*t5063*t5048*(C_k* \
                   a_1*t4971*t5064*t5065*(5.0/3.0)-C_k*a_1*t4971*t5055*t5065*t5066*(5.0/3.0)+C_k*a_2*t4971*t5055*t5065* \
                   t5066*(1.0E1/3.0)-C_k*a_2*t4971*t5056*t5065*t5069*(1.0E1/3.0)+C_k*a_3*t4971*t5056*t5065*t5069*5.0- \
                   C_k*a_4*t4971*t5071*t5065*t5057*(2.0E1/3.0)+C_k*a_5*t4971*t5071*t5065*t5057*(2.5E1/3.0)-C_k*a_8*t4971* \
                   t5065*t5075*t5058*(4.0E1/3.0)+C_k*a_9*t4971*t5065*t5075*t5058*1.5E1+C_k*a_10*t4971*t5055*t5065*t5058* \
                   t5067*(5.0E1/3.0)-C_k*a_10*t4971*t5056*t5065*t5058*t5068*(5.0E1/3.0)+C_k*a_11*t4971*t5056*t5065*t5058* \
                   t5068*(5.5E1/3.0)-C_k*a_3*t4971*t5070*t5055*t5056*t5065*5.0+C_k*a_4*t4971*t5070*t5055*t5056*t5065* \
                   (2.0E1/3.0)-C_k*a_5*t4971*t5072*t5055*t5065*t5057*(2.5E1/3.0)+C_k*a_6*t4971*t5072*t5055*t5065*t5057* \
                   1.0E1-C_k*a_6*t4971*t5073*t5056*t5065*t5057*1.0E1+C_k*a_7*t4971*t5073*t5056*t5065*t5057*(3.5E1/3.0) \
                   -C_k*a_9*t4971*t5055*t5065*t5058*t5067*1.5E1-C_k*a_11*t4971*t5055*t5056*t5065*t5058*1/pow(t5059,1.2E1) \
                   *(5.5E1/3.0)-C_k*a_7*t4971*t5055*t5056*t5065*t5074*t5057*(3.5E1/3.0)+C_k*a_8*t4971*t5055*t5056*t5065* \
                   t5074*t5057*(4.0E1/3.0))*(1.0/4.0)-mu_*t4973*t5052*1/(t5061*t5061*t5061)*t5063*t5048*t5087*(gamma_bb[index]* \
                   mu_*t5051*t5048*t5049*t5089*(1.0/3.0)+gamma_bb[index]*mu_*t5052*t5048*t5049*t5088*(1.0/2.0))*(1.0/ \
                   2.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3280 = 1/pow(rho_a[index],1.0/3.0);
                double t3281 = c*t3280;
                double t3282 = sqrt(t3281);
                double t3283 = pow(t3281,3.0/2.0);
                double t3284 = c*c;
                double t3285 = 1/pow(rho_a[index],2.0/3.0);
                double t3286 = 1/c0p;
                double t3287 = b1p*t3282;
                double t3288 = b3p*t3283;
                double t3289 = b4p*t3284*t3285;
                double t3290 = b2p*c*t3280;
                double t3291 = t3290+t3287+t3288+t3289;
                double t3292 = 1/t3291;
                double t3293 = t3292*t3286*(1.0/2.0);
                double t3294 = t3293+1.0;
                double t3295 = log(t3294);
                double t3296 = a1p*c*t3280;
                double t3297 = t3296+1.0;
                double t3298 = pow(2.0,1.0/3.0);
                double t3299 = t3298*2.0;
                double t3300 = t3299-2.0;
                double t3301 = two_13*2.0;
                double t3302 = t3301-2.0;
                double t3303 = 1/t3302;
                double t3304 = 1/c0f;
                double t3305 = 1/pow(rho_b[index],1.0/3.0);
                double t3306 = c*t3305;
                double t3307 = sqrt(t3306);
                double t3308 = pow(t3306,3.0/2.0);
                double t3309 = 1/pow(rho_b[index],2.0/3.0);
                double t3310 = b1p*t3307;
                double t3311 = b3p*t3308;
                double t3312 = b4p*t3284*t3309;
                double t3313 = b2p*c*t3305;
                double t3314 = t3310+t3311+t3312+t3313;
                double t3315 = 1/t3314;
                double t3316 = t3286*t3315*(1.0/2.0);
                double t3317 = t3316+1.0;
                double t3318 = log(t3317);
                double t3319 = a1p*c*t3305;
                double t3320 = t3319+1.0;
                double t3321 = c0p*t3320*t3318*2.0;
                double t3322 = rho_a[index]+rho_b[index];
                double t3323 = 1/pow(t3322,1.0/3.0);
                double t3324 = c*t3323;
                double t3325 = sqrt(t3324);
                double t3326 = pow(t3324,3.0/2.0);
                double t3327 = 1/pow(t3322,2.0/3.0);
                double t3328 = b1p*t3325;
                double t3329 = b3p*t3326;
                double t3330 = b4p*t3284*t3327;
                double t3331 = b2p*c*t3323;
                double t3332 = t3330+t3331+t3328+t3329;
                double t3333 = 1/t3332;
                double t3334 = t3286*t3333*(1.0/2.0);
                double t3335 = t3334+1.0;
                double t3336 = log(t3335);
                double t3337 = a1p*c*t3323;
                double t3338 = t3337+1.0;
                double t3339 = c0p*t3336*t3338*2.0;
                double t3340 = rho_a[index]-rho_b[index];
                double t3341 = t3340*t3340;
                double t3342 = 1/t3322;
                double t3343 = t3340*t3342;
                double t3344 = 1/(t3322*t3322*t3322*t3322);
                double t3345 = t3341*t3341;
                double t3346 = t3343+1.0;
                double t3347 = pow(t3346,4.0/3.0);
                double t3348 = -t3343+1.0;
                double t3349 = pow(t3348,4.0/3.0);
                double t3350 = t3347+t3349-2.0;
                double t3351 = gcab*gcab;
                double t3352 = 1/pow(rho_a[index],1.6E1/3.0);
                double t3353 = 1/pow(rho_a[index],8.0/3.0);
                double t3354 = gamma_aa[index]*t3353*(1.0/2.0);
                double t3355 = 1/pow(rho_b[index],8.0/3.0);
                double t3356 = gamma_bb[index]*t3355*(1.0/2.0);
                double t3357 = t3354+t3356;
                double t3358 = gcab*t3357;
                double t3359 = t3358+1.0;
                double t3360 = t3357*t3357;
                double t3361 = t3351*t3360;
                double t3362 = gcab*t3357*2.0;
                double t3363 = t3361+t3362+1.0;
                double t3364 = t3351*t3351;
                double t3381 = gcab*t3353*2.0;
                double t3382 = t3351*t3353*t3357*6.0;
                double t3383 = gcab*t3351*t3360*t3353*6.0;
                double t3384 = t3360*t3353*t3364*t3357*2.0;
                double t3365 = t3381+t3382+t3383+t3384;
                double t3366 = t3360*t3360;
                double t3386 = gcab*t3353*(3.0/2.0);
                double t3387 = t3351*t3353*t3357*3.0;
                double t3388 = gcab*t3351*t3360*t3353*(3.0/2.0);
                double t3367 = t3386+t3387+t3388;
                double t3368 = t3351*t3360*3.0;
                double t3369 = gcab*t3351*t3360*t3357;
                double t3370 = gcab*t3357*3.0;
                double t3371 = t3370+t3368+t3369+1.0;
                double t3378 = gcab*t3353;
                double t3379 = t3351*t3353*t3357;
                double t3372 = t3378+t3379;
                double t3373 = t3351*t3360*6.0;
                double t3374 = gcab*t3351*t3360*t3357*4.0;
                double t3375 = t3364*t3366;
                double t3376 = gcab*t3357*4.0;
                double t3377 = t3373+t3374+t3375+t3376+1.0;
                double t3380 = 1/(t3363*t3363);
                double t3385 = 1/(t3377*t3377);
                double t3389 = 1/(t3371*t3371);
                double t3390 = c0p*t3295*t3297*2.0;
                double t3391 = b1f*t3282;
                double t3392 = b3f*t3283;
                double t3393 = b4f*t3284*t3285;
                double t3394 = b2f*c*t3280;
                double t3395 = t3391+t3392+t3393+t3394;
                double t3396 = 1/t3395;
                double t3397 = t3304*t3396*(1.0/2.0);
                double t3398 = t3397+1.0;
                double t3399 = log(t3398);
                double t3400 = a1f*c*t3280;
                double t3401 = t3400+1.0;
                double t3442 = c0f*t3399*t3401*2.0;
                double t3402 = t3390-t3442;
                double t3443 = t3300*t3303*t3402;
                double t3403 = t3390-t3443;
                double t3404 = gcaa*gcaa;
                double t3405 = gamma_aa[index]*gamma_aa[index];
                double t3406 = t3404*t3404;
                double t3407 = 1/pow(rho_a[index],3.2E1/3.0);
                double t3408 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t3409 = gamma_aa[index]*gcaa*t3353;
                double t3410 = t3409+1.0;
                double t3411 = gamma_aa[index]*gcaa*t3353*2.0;
                double t3412 = t3352*t3404*t3405;
                double t3413 = t3411+t3412+1.0;
                double t3414 = gamma_aa[index]*gcaa*t3353*3.0;
                double t3415 = gamma_aa[index]*gcaa*t3404*t3405*t3408;
                double t3416 = t3352*t3404*t3405*3.0;
                double t3417 = t3414+t3415+t3416+1.0;
                double t3418 = t3405*t3405;
                double t3434 = gcaa*t3353*4.0;
                double t3435 = gamma_aa[index]*t3352*t3404*1.2E1;
                double t3436 = gcaa*t3404*t3405*t3408*1.2E1;
                double t3437 = gamma_aa[index]*t3405*t3406*t3407*4.0;
                double t3419 = t3434+t3435+t3436+t3437;
                double t3420 = gamma_aa[index]*gcaa*t3353*4.0;
                double t3421 = gamma_aa[index]*gcaa*t3404*t3405*t3408*4.0;
                double t3422 = t3352*t3404*t3405*6.0;
                double t3423 = t3406*t3407*t3418;
                double t3424 = t3420+t3421+t3422+t3423+1.0;
                double t3427 = gcaa*t3353*2.0;
                double t3428 = gamma_aa[index]*t3352*t3404*2.0;
                double t3425 = t3427+t3428;
                double t3426 = 1/(t3417*t3417);
                double t3429 = 1/(t3413*t3413);
                double t3430 = gcaa*t3353*3.0;
                double t3431 = gamma_aa[index]*t3352*t3404*6.0;
                double t3432 = gcaa*t3404*t3405*t3408*3.0;
                double t3433 = t3430+t3431+t3432;
                double t3438 = 1/(t3424*t3424);
                double t3439 = 1/tau_a[index];
                double t3440 = tau_a[index]-1.0/1.0E20;
                double t3441 = ( (t3440 > 0.0) ?  1.0 : 0.0 ) ;
                double t3444 = 1/t3424;
                double t3445 = 1/t3413;
                double t3446 = 1/t3417;
                double t3447 = 1/(t3410*t3410);
                double t3448 = 1/kp;
                double t3449 = rho_a[index]*2.0;
                double t3450 = pow(rho_a[index],5.0/3.0);
                double t3451 = C_k*t3450*t3439;
                double t3452 = t3451-1.0;
                double t3453 = t3452*t3452;
                double t3454 = t3453*t3453;
                double t3455 = t3454*t3454;
                double t3456 = t3451+1.0;
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*t3403+rho_b[index]*(t3321-t3300*t3303*(t3321-c0f*log((t3304* \
                   (1.0/2.0))/(b1f*t3307+b3f*t3308+b2f*c*t3305+b4f*t3284*t3309)+1.0)*(a1f*c*t3305+1.0)*2.0))-t3322*(t3339- \
                   t3303*t3350*t3344*t3345*(t3339-c0f*log((t3304*(1.0/2.0))/(b1f*t3325+b3f*t3326+b2f*c*t3323+b4f*t3284* \
                   t3327)+1.0)*(a1f*c*t3323+1.0)*2.0)+(Aa*t3303*t3350*log((1.0/2.0)/(Aa*(b1a*t3325+b3a*t3326+b2a*c*t3323+ \
                   b4a*t3284*t3327))+1.0)*(t3344*t3345-1.0)*(a1a*c*t3323+1.0)*2.0)/d2fz0))*((ccab2*t3351*t3352*(1.0/2.0) \
                   )/t3363-ccab1*t3351*t3352*1/(t3359*t3359)*(1.0/2.0)+ccab2*t3351*t3360*1/(t3363*t3363*t3363)*(t3372* \
                   t3372)*2.0+ccab4*t3364*(t3365*t3365)*t3366*1/(t3377*t3377*t3377)*2.0-ccab2*t3360*t3352*t3380*t3364* \
                   (1.0/2.0)-ccab4*t3364*t3366*t3385*(t3351*t3352*3.0+t3360*t3352*t3364*3.0+gcab*t3351*t3352*t3357*6.0) \
                   +(ccab4*t3360*t3352*t3364*3.0)/t3377-ccab2*t3351*t3353*t3380*t3372*t3357*2.0+(ccab3*gcab*t3351*t3352* \
                   t3357*(3.0/2.0))/t3371+ccab1*gcab*t3351*t3352*t3357*1/(t3359*t3359*t3359)*(1.0/2.0)+ccab3*gcab*t3351* \
                   t3360*1/(t3371*t3371*t3371)*t3357*(t3367*t3367)*2.0-ccab3*gcab*t3351*t3360*t3353*t3367*t3389*3.0-ccab4* \
                   t3360*t3353*t3364*t3365*t3357*t3385*4.0-ccab3*gcab*t3351*t3360*t3357*t3389*(t3351*t3352*(3.0/2.0)+ \
                   gcab*t3351*t3352*t3357*(3.0/2.0)))+t3403*t3441*t3439*((ccaa1*gcaa*t3353)/t3410+ccaa2*gamma_aa[index]* \
                   t3352*t3404*t3445*2.0-ccaa1*gamma_aa[index]*t3352*t3404*t3447-ccaa2*t3352*t3404*t3405*t3425*t3429- \
                   ccaa4*t3406*t3407*t3418*t3419*t3438+ccaa4*gamma_aa[index]*t3405*t3406*t3407*t3444*4.0+ccaa3*gcaa*t3404* \
                   t3405*t3408*t3446*3.0-ccaa3*gamma_aa[index]*gcaa*t3404*t3405*t3433*t3408*t3426)*(1.0/4.0)-rho_a[index]* \
                   t3403*(t3441*(t3439*(tau_a[index]*2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])*(1.0/2.0)-1.0)+1.0) \
                   *(ccaa2*t3352*t3404*t3445*2.0-ccaa1*t3352*t3404*t3447*2.0+ccaa4*t3405*t3406*t3407*t3444*1.2E1-ccaa2* \
                   t3405*t3406*t3407*t3429*2.0-ccaa4*t3406*t3407*t3418*t3438*(t3352*t3404*1.2E1+t3405*t3406*t3407*1.2E1+ \
                   gamma_aa[index]*gcaa*t3404*t3408*2.4E1)+ccaa1*gamma_aa[index]*gcaa*1/(t3410*t3410*t3410)*t3404*t3408* \
                   2.0+ccaa2*t3352*t3404*1/(t3413*t3413*t3413)*t3405*(t3425*t3425)*2.0+ccaa4*t3406*1/(t3424*t3424*t3424) \
                   *t3407*t3418*(t3419*t3419)*2.0+ccaa3*gamma_aa[index]*gcaa*t3404*t3408*t3446*6.0-ccaa2*gamma_aa[index]* \
                   t3352*t3404*t3425*t3429*4.0-ccaa4*gamma_aa[index]*t3405*t3406*t3407*t3419*t3438*8.0-ccaa3*gcaa*t3404* \
                   t3405*t3433*t3408*t3426*6.0-ccaa3*gamma_aa[index]*gcaa*t3404*t3405*t3408*t3426*(t3352*t3404*6.0+gamma_aa[index]* \
                   gcaa*t3404*t3408*6.0)+ccaa3*gamma_aa[index]*gcaa*t3404*t3405*(t3433*t3433)*t3408*1/(t3417*t3417*t3417) \
                   *2.0)+1/(k*k*k*k)*(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index])*t3448*1/pow(t3449,4.0/3.0)* \
                   1/pow(gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*t3448*1/pow(t3449,2.0/3.0)*(1.0/4.0) \
                   +1.0,3.0)*(X-1.0)*((a_1*t3452)/t3456+a_2*t3453*1/(t3456*t3456)+a_4*t3454*1/(t3456*t3456*t3456*t3456) \
                   +a_8*t3455*1/(t3456*t3456*t3456*t3456*t3456*t3456*t3456*t3456)+a_10*t3453*t3455*1/pow(t3456,1.0E1) \
                   +a_3*t3452*t3453*1/(t3456*t3456*t3456)+a_5*t3452*t3454*1/(t3456*t3456*t3456*t3456*t3456)+a_6*t3453* \
                   t3454*1/(t3456*t3456*t3456*t3456*t3456*t3456)+a_9*t3452*t3455*1/(t3456*t3456*t3456*t3456*t3456*t3456* \
                   t3456*t3456*t3456)+a_11*t3452*t3453*t3455*1/pow(t3456,1.1E1)+a_7*t3452*t3453*t3454*1/(t3456*t3456* \
                   t3456*t3456*t3456*t3456*t3456)+1.0)*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                double t6218 = 1/pow(rho_a[index],1.0/3.0);
                double t6219 = c*t6218;
                double t6220 = sqrt(t6219);
                double t6221 = pow(t6219,3.0/2.0);
                double t6222 = c*c;
                double t6223 = 1/pow(rho_a[index],2.0/3.0);
                double t6224 = 1/c0p;
                double t6225 = b1p*t6220;
                double t6226 = b3p*t6221;
                double t6227 = b4p*t6222*t6223;
                double t6228 = b2p*c*t6218;
                double t6229 = t6225+t6226+t6227+t6228;
                double t6230 = 1/t6229;
                double t6231 = t6230*t6224*(1.0/2.0);
                double t6232 = t6231+1.0;
                double t6233 = log(t6232);
                double t6234 = a1p*c*t6218;
                double t6235 = t6234+1.0;
                double t6236 = gcaa*gcaa;
                double t6237 = 1/pow(rho_a[index],1.6E1/3.0);
                double t6238 = 1/pow(rho_a[index],8.0/3.0);
                double t6239 = gamma_aa[index]*gamma_aa[index];
                double t6240 = t6236*t6236;
                double t6241 = 1/pow(rho_a[index],3.2E1/3.0);
                double t6242 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t6243 = gamma_aa[index]*gcaa*t6238;
                double t6244 = t6243+1.0;
                double t6245 = gamma_aa[index]*gcaa*t6238*2.0;
                double t6246 = t6236*t6237*t6239;
                double t6247 = t6245+t6246+1.0;
                double t6248 = gamma_aa[index]*gcaa*t6238*3.0;
                double t6249 = gamma_aa[index]*gcaa*t6242*t6236*t6239;
                double t6250 = t6236*t6237*t6239*3.0;
                double t6251 = t6250+t6248+t6249+1.0;
                double t6252 = t6239*t6239;
                double t6268 = gcaa*t6238*4.0;
                double t6269 = gamma_aa[index]*t6236*t6237*1.2E1;
                double t6270 = gcaa*t6242*t6236*t6239*1.2E1;
                double t6271 = gamma_aa[index]*t6240*t6241*t6239*4.0;
                double t6253 = t6270+t6271+t6268+t6269;
                double t6254 = gamma_aa[index]*gcaa*t6238*4.0;
                double t6255 = gamma_aa[index]*gcaa*t6242*t6236*t6239*4.0;
                double t6256 = t6236*t6237*t6239*6.0;
                double t6257 = t6240*t6241*t6252;
                double t6258 = t6254+t6255+t6256+t6257+1.0;
                double t6261 = gcaa*t6238*2.0;
                double t6262 = gamma_aa[index]*t6236*t6237*2.0;
                double t6259 = t6261+t6262;
                double t6260 = 1/(t6251*t6251);
                double t6263 = 1/(t6247*t6247);
                double t6264 = gcaa*t6238*3.0;
                double t6265 = gamma_aa[index]*t6236*t6237*6.0;
                double t6266 = gcaa*t6242*t6236*t6239*3.0;
                double t6267 = t6264+t6265+t6266;
                double t6272 = 1/(t6258*t6258);
                double t6273 = 1/tau_a[index];
                double t6274 = tau_a[index]-1.0/1.0E20;
                double t6275 = ( (t6274 > 0.0) ?  1.0 : 0.0 ) ;
                double t6276 = pow(2.0,1.0/3.0);
                double t6277 = t6276*2.0;
                double t6278 = t6277-2.0;
                double t6279 = two_13*2.0;
                double t6280 = t6279-2.0;
                double t6281 = 1/t6280;
                double t6282 = 1/c0f;
                double t6283 = b1f*t6220;
                double t6284 = b3f*t6221;
                double t6285 = b4f*t6222*t6223;
                double t6286 = b2f*c*t6218;
                double t6287 = t6283+t6284+t6285+t6286;
                double t6288 = 1/t6287;
                double t6289 = t6282*t6288*(1.0/2.0);
                double t6290 = t6289+1.0;
                double t6291 = log(t6290);
                double t6292 = a1f*c*t6218;
                double t6293 = t6292+1.0;
                double t6294 = c0f*t6291*t6293*2.0;
                double t6295 = c0p*t6233*t6235*2.0;
                double t6296 = 1/t6258;
                double t6297 = 1/t6247;
                double t6298 = 1/t6251;
                double t6299 = 1/(t6244*t6244);
                double t6300 = 1/kp;
                double t6301 = rho_a[index]*2.0;
                double t6302 = pow(rho_a[index],5.0/3.0);
                double t6303 = C_k*t6273*t6302;
                double t6304 = t6303-1.0;
                double t6305 = t6304*t6304;
                double t6306 = t6305*t6305;
                double t6307 = t6306*t6306;
                double t6308 = t6303+1.0;
                v_gamma_aa_gamma_aa_[index] = t6273*t6275*(t6295+t6281*t6278*(t6294-t6295))*((ccaa1*gcaa*t6238)/t6244+ \
                   ccaa2*gamma_aa[index]*t6236*t6237*t6297*2.0-ccaa1*gamma_aa[index]*t6236*t6237*t6299-ccaa4*t6240*t6241* \
                   t6252*t6253*t6272-ccaa2*t6236*t6263*t6237*t6239*t6259+ccaa4*gamma_aa[index]*t6240*t6241*t6239*t6296* \
                   4.0+ccaa3*gcaa*t6242*t6236*t6239*t6298*3.0-ccaa3*gamma_aa[index]*gcaa*t6242*t6260*t6236*t6239*t6267) \
                   *(1.0/4.0)-rho_a[index]*(t6275*(t6273*(tau_a[index]*2.0-(gamma_aa[index]*(1.0/4.0))/rho_a[index])* \
                   (1.0/2.0)-1.0)+1.0)*(t6295+t6281*t6278*(t6294-c0p*t6233*t6235*2.0))*(ccaa2*t6236*t6237*t6297*2.0-ccaa1* \
                   t6236*t6237*t6299*2.0-ccaa2*t6240*t6241*t6263*t6239*2.0+ccaa4*t6240*t6241*t6239*t6296*1.2E1-ccaa4* \
                   t6240*t6241*t6252*t6272*(t6236*t6237*1.2E1+t6240*t6241*t6239*1.2E1+gamma_aa[index]*gcaa*t6242*t6236* \
                   2.4E1)+ccaa1*gamma_aa[index]*gcaa*t6242*1/(t6244*t6244*t6244)*t6236*2.0+ccaa4*t6240*t6241*t6252*(t6253* \
                   t6253)*1/(t6258*t6258*t6258)*2.0+ccaa2*t6236*t6237*1/(t6247*t6247*t6247)*t6239*(t6259*t6259)*2.0+ccaa3* \
                   gamma_aa[index]*gcaa*t6242*t6236*t6298*6.0-ccaa2*gamma_aa[index]*t6236*t6263*t6237*t6259*4.0-ccaa4* \
                   gamma_aa[index]*t6240*t6241*t6253*t6272*t6239*8.0-ccaa3*gcaa*t6242*t6260*t6236*t6239*t6267*6.0-ccaa3* \
                   gamma_aa[index]*gcaa*t6242*t6260*t6236*t6239*(t6236*t6237*6.0+gamma_aa[index]*gcaa*t6242*t6236*6.0) \
                   +ccaa3*gamma_aa[index]*gcaa*t6242*1/(t6251*t6251*t6251)*t6236*t6239*(t6267*t6267)*2.0)+1/(k*k*k*k) \
                   *(mu_*mu_)*1/(rho_a[index]*rho_a[index]*rho_a[index])*t6300*1/pow(t6301,4.0/3.0)*1/pow(gamma_aa[index]* \
                   1/(k*k)*mu_*1/(rho_a[index]*rho_a[index])*t6300*1/pow(t6301,2.0/3.0)*(1.0/4.0)+1.0,3.0)*(X-1.0)*((a_1* \
                   t6304)/t6308+a_2*t6305*1/(t6308*t6308)+a_4*t6306*1/(t6308*t6308*t6308*t6308)+a_8*t6307*1/(t6308*t6308* \
                   t6308*t6308*t6308*t6308*t6308*t6308)+a_10*t6305*t6307*1/pow(t6308,1.0E1)+a_3*t6304*t6305*1/(t6308* \
                   t6308*t6308)+a_5*t6304*t6306*1/(t6308*t6308*t6308*t6308*t6308)+a_6*t6305*t6306*1/(t6308*t6308*t6308* \
                   t6308*t6308*t6308)+a_9*t6304*t6307*1/(t6308*t6308*t6308*t6308*t6308*t6308*t6308*t6308*t6308)+a_11* \
                   t6304*t6305*t6307*1/pow(t6308,1.1E1)+a_7*t6304*t6305*t6306*1/(t6308*t6308*t6308*t6308*t6308*t6308* \
                   t6308)+1.0)*(1.0/8.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3459 = 1/pow(rho_a[index],1.0/3.0);
                double t3460 = c*t3459;
                double t3461 = sqrt(t3460);
                double t3462 = pow(t3460,3.0/2.0);
                double t3463 = c*c;
                double t3464 = 1/pow(rho_a[index],2.0/3.0);
                double t3465 = 1/c0p;
                double t3466 = b1p*t3461;
                double t3467 = b3p*t3462;
                double t3468 = b4p*t3463*t3464;
                double t3469 = b2p*c*t3459;
                double t3470 = t3466+t3467+t3468+t3469;
                double t3471 = 1/t3470;
                double t3472 = t3471*t3465*(1.0/2.0);
                double t3473 = t3472+1.0;
                double t3474 = log(t3473);
                double t3475 = a1p*c*t3459;
                double t3476 = t3475+1.0;
                double t3477 = pow(2.0,1.0/3.0);
                double t3478 = t3477*2.0;
                double t3479 = t3478-2.0;
                double t3480 = two_13*2.0;
                double t3481 = t3480-2.0;
                double t3482 = 1/t3481;
                double t3483 = 1/c0f;
                double t3484 = 1/pow(rho_b[index],1.0/3.0);
                double t3485 = c*t3484;
                double t3486 = sqrt(t3485);
                double t3487 = pow(t3485,3.0/2.0);
                double t3488 = 1/pow(rho_b[index],2.0/3.0);
                double t3489 = b1p*t3486;
                double t3490 = b3p*t3487;
                double t3491 = b4p*t3463*t3488;
                double t3492 = b2p*c*t3484;
                double t3493 = t3490+t3491+t3492+t3489;
                double t3494 = 1/t3493;
                double t3495 = t3465*t3494*(1.0/2.0);
                double t3496 = t3495+1.0;
                double t3497 = log(t3496);
                double t3498 = a1p*c*t3484;
                double t3499 = t3498+1.0;
                double t3500 = c0p*t3497*t3499*2.0;
                double t3501 = rho_a[index]+rho_b[index];
                double t3502 = 1/pow(t3501,1.0/3.0);
                double t3503 = c*t3502;
                double t3504 = sqrt(t3503);
                double t3505 = pow(t3503,3.0/2.0);
                double t3506 = 1/pow(t3501,2.0/3.0);
                double t3507 = b1p*t3504;
                double t3508 = b3p*t3505;
                double t3509 = b4p*t3463*t3506;
                double t3510 = b2p*c*t3502;
                double t3511 = t3510+t3507+t3508+t3509;
                double t3512 = 1/t3511;
                double t3513 = t3465*t3512*(1.0/2.0);
                double t3514 = t3513+1.0;
                double t3515 = log(t3514);
                double t3516 = a1p*c*t3502;
                double t3517 = t3516+1.0;
                double t3518 = c0p*t3515*t3517*2.0;
                double t3519 = rho_a[index]-rho_b[index];
                double t3520 = t3519*t3519;
                double t3521 = 1/t3501;
                double t3522 = t3521*t3519;
                double t3523 = 1/(t3501*t3501*t3501*t3501);
                double t3524 = t3520*t3520;
                double t3525 = t3522+1.0;
                double t3526 = pow(t3525,4.0/3.0);
                double t3527 = -t3522+1.0;
                double t3528 = pow(t3527,4.0/3.0);
                double t3529 = t3526+t3528-2.0;
                double t3530 = gcab*gcab;
                double t3533 = 1/pow(rho_a[index],8.0/3.0);
                double t3534 = 1/pow(rho_b[index],8.0/3.0);
                double t3535 = gamma_aa[index]*t3533*(1.0/2.0);
                double t3536 = gamma_bb[index]*t3534*(1.0/2.0);
                double t3531 = t3535+t3536;
                double t3532 = t3531*t3531;
                double t3537 = t3530*t3530;
                double t3538 = t3532*t3532;
                double t3539 = t3530*t3532*3.0;
                double t3540 = gcab*t3530*t3531*t3532;
                double t3541 = gcab*t3531*3.0;
                double t3542 = t3540+t3541+t3539+1.0;
                double t3543 = t3530*t3532;
                double t3544 = gcab*t3531*2.0;
                double t3545 = t3543+t3544+1.0;
                double t3546 = t3530*t3532*6.0;
                double t3547 = gcab*t3530*t3531*t3532*4.0;
                double t3548 = t3537*t3538;
                double t3549 = gcab*t3531*4.0;
                double t3550 = t3546+t3547+t3548+t3549+1.0;
                double t3551 = 1/(t3545*t3545);
                double t3552 = gcab*t3533;
                double t3553 = t3530*t3531*t3533;
                double t3554 = t3552+t3553;
                double t3555 = gcab*t3534;
                double t3556 = t3530*t3531*t3534;
                double t3557 = t3555+t3556;
                double t3558 = gcab*t3531;
                double t3559 = t3558+1.0;
                double t3560 = gcab*t3533*2.0;
                double t3561 = t3530*t3531*t3533*6.0;
                double t3562 = gcab*t3530*t3532*t3533*6.0;
                double t3563 = t3531*t3532*t3533*t3537*2.0;
                double t3564 = t3560+t3561+t3562+t3563;
                double t3565 = 1/(t3550*t3550);
                double t3566 = gcab*t3534*2.0;
                double t3567 = t3530*t3531*t3534*6.0;
                double t3568 = gcab*t3530*t3532*t3534*6.0;
                double t3569 = t3531*t3532*t3534*t3537*2.0;
                double t3570 = t3566+t3567+t3568+t3569;
                double t3571 = gcab*t3533*(3.0/2.0);
                double t3572 = t3530*t3531*t3533*3.0;
                double t3573 = gcab*t3530*t3532*t3533*(3.0/2.0);
                double t3574 = t3571+t3572+t3573;
                double t3575 = 1/(t3542*t3542);
                double t3576 = gcab*t3534*(3.0/2.0);
                double t3577 = t3530*t3531*t3534*3.0;
                double t3578 = gcab*t3530*t3532*t3534*(3.0/2.0);
                double t3579 = t3576+t3577+t3578;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t3500-t3482*t3479*(t3500-c0f*log((t3483*(1.0/2.0))/ \
                   (b1f*t3486+b3f*t3487+b2f*c*t3484+b4f*t3463*t3488)+1.0)*(a1f*c*t3484+1.0)*2.0))+t3501*(t3518-t3482* \
                   t3523*t3524*t3529*(t3518-c0f*log((t3483*(1.0/2.0))/(b1f*t3504+b3f*t3505+b2f*c*t3502+b4f*t3463*t3506) \
                   +1.0)*(a1f*c*t3502+1.0)*2.0)+(Aa*t3482*t3529*log((1.0/2.0)/(Aa*(b1a*t3504+b3a*t3505+b2a*c*t3502+b4a* \
                   t3463*t3506))+1.0)*(t3523*t3524-1.0)*(a1a*c*t3502+1.0)*2.0)/d2fz0)+rho_a[index]*(t3482*t3479*(c0p* \
                   t3474*t3476*2.0-c0f*log((t3483*(1.0/2.0))/(b1f*t3461+b3f*t3462+b2f*c*t3459+b4f*t3463*t3464)+1.0)*(a1f* \
                   c*t3459+1.0)*2.0)-c0p*t3474*t3476*2.0))*(ccab4*t3537*t3538*t3565*(t3530*t3533*t3534*3.0+t3532*t3533* \
                   t3534*t3537*3.0+gcab*t3530*t3531*t3533*t3534*6.0)-(ccab2*t3530*t3533*t3534*(1.0/2.0))/t3545+ccab1* \
                   t3530*t3533*t3534*1/(t3559*t3559)*(1.0/2.0)+ccab2*t3530*t3531*t3551*t3534*t3554+ccab2*t3530*t3531* \
                   t3533*t3551*t3557+ccab2*t3532*t3533*t3551*t3534*t3537*(1.0/2.0)-(ccab4*t3532*t3533*t3534*t3537*3.0) \
                   /t3550-ccab2*t3530*t3532*1/(t3545*t3545*t3545)*t3554*t3557*2.0-ccab4*1/(t3550*t3550*t3550)*t3570*t3537* \
                   t3564*t3538*2.0+ccab3*gcab*t3530*t3532*t3534*t3574*t3575*(3.0/2.0)+ccab3*gcab*t3530*t3532*t3533*t3575* \
                   t3579*(3.0/2.0)+ccab4*t3531*t3532*t3533*t3570*t3537*t3565*2.0+ccab4*t3531*t3532*t3534*t3537*t3564* \
                   t3565*2.0+ccab3*gcab*t3530*t3531*t3532*t3575*(t3530*t3533*t3534*(3.0/2.0)+gcab*t3530*t3531*t3533*t3534* \
                   (3.0/2.0))-(ccab3*gcab*t3530*t3531*t3533*t3534*(3.0/2.0))/t3542-ccab1*gcab*t3530*t3531*t3533*t3534* \
                   1/(t3559*t3559*t3559)*(1.0/2.0)-ccab3*gcab*t3530*t3531*t3532*1/(t3542*t3542*t3542)*t3574*t3579*2.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3583 = 1/pow(rho_a[index],1.0/3.0);
                double t3584 = c*t3583;
                double t3585 = sqrt(t3584);
                double t3586 = pow(t3584,3.0/2.0);
                double t3587 = c*c;
                double t3588 = 1/pow(rho_a[index],2.0/3.0);
                double t3589 = 1/c0p;
                double t3590 = b1p*t3585;
                double t3591 = b3p*t3586;
                double t3592 = b4p*t3587*t3588;
                double t3593 = b2p*c*t3583;
                double t3594 = t3590+t3591+t3592+t3593;
                double t3595 = 1/t3594;
                double t3596 = t3595*t3589*(1.0/2.0);
                double t3597 = t3596+1.0;
                double t3598 = log(t3597);
                double t3599 = a1p*c*t3583;
                double t3600 = t3599+1.0;
                double t3601 = pow(2.0,1.0/3.0);
                double t3602 = t3601*2.0;
                double t3603 = t3602-2.0;
                double t3604 = two_13*2.0;
                double t3605 = t3604-2.0;
                double t3606 = 1/t3605;
                double t3607 = 1/c0f;
                double t3608 = 1/pow(rho_b[index],1.0/3.0);
                double t3609 = c*t3608;
                double t3610 = sqrt(t3609);
                double t3611 = pow(t3609,3.0/2.0);
                double t3612 = 1/pow(rho_b[index],2.0/3.0);
                double t3613 = b1p*t3610;
                double t3614 = b3p*t3611;
                double t3615 = b4p*t3587*t3612;
                double t3616 = b2p*c*t3608;
                double t3617 = t3613+t3614+t3615+t3616;
                double t3618 = 1/t3617;
                double t3619 = t3589*t3618*(1.0/2.0);
                double t3620 = t3619+1.0;
                double t3621 = log(t3620);
                double t3622 = a1p*c*t3608;
                double t3623 = t3622+1.0;
                double t3624 = c0p*t3621*t3623*2.0;
                double t3625 = rho_a[index]+rho_b[index];
                double t3626 = 1/pow(t3625,1.0/3.0);
                double t3627 = c*t3626;
                double t3628 = sqrt(t3627);
                double t3629 = pow(t3627,3.0/2.0);
                double t3630 = 1/pow(t3625,2.0/3.0);
                double t3631 = b1p*t3628;
                double t3632 = b3p*t3629;
                double t3633 = b4p*t3587*t3630;
                double t3634 = b2p*c*t3626;
                double t3635 = t3631+t3632+t3633+t3634;
                double t3636 = 1/t3635;
                double t3637 = t3589*t3636*(1.0/2.0);
                double t3638 = t3637+1.0;
                double t3639 = log(t3638);
                double t3640 = a1p*c*t3626;
                double t3641 = t3640+1.0;
                double t3642 = c0p*t3641*t3639*2.0;
                double t3643 = rho_a[index]-rho_b[index];
                double t3644 = t3643*t3643;
                double t3645 = 1/t3625;
                double t3646 = t3643*t3645;
                double t3647 = 1/(t3625*t3625*t3625*t3625);
                double t3648 = t3644*t3644;
                double t3649 = t3646+1.0;
                double t3650 = pow(t3649,4.0/3.0);
                double t3651 = -t3646+1.0;
                double t3652 = pow(t3651,4.0/3.0);
                double t3653 = t3650+t3652-2.0;
                double t3654 = gcab*gcab;
                double t3655 = 1/pow(rho_b[index],1.6E1/3.0);
                double t3656 = 1/pow(rho_a[index],8.0/3.0);
                double t3657 = gamma_aa[index]*t3656*(1.0/2.0);
                double t3658 = 1/pow(rho_b[index],8.0/3.0);
                double t3659 = gamma_bb[index]*t3658*(1.0/2.0);
                double t3660 = t3657+t3659;
                double t3661 = gcab*t3660;
                double t3662 = t3661+1.0;
                double t3663 = t3660*t3660;
                double t3664 = t3654*t3663;
                double t3665 = gcab*t3660*2.0;
                double t3666 = t3664+t3665+1.0;
                double t3667 = t3654*t3654;
                double t3684 = gcab*t3658*2.0;
                double t3685 = t3660*t3654*t3658*6.0;
                double t3686 = gcab*t3654*t3663*t3658*6.0;
                double t3687 = t3660*t3663*t3658*t3667*2.0;
                double t3668 = t3684+t3685+t3686+t3687;
                double t3669 = t3663*t3663;
                double t3689 = gcab*t3658*(3.0/2.0);
                double t3690 = t3660*t3654*t3658*3.0;
                double t3691 = gcab*t3654*t3663*t3658*(3.0/2.0);
                double t3670 = t3690+t3691+t3689;
                double t3671 = t3654*t3663*3.0;
                double t3672 = gcab*t3660*t3654*t3663;
                double t3673 = gcab*t3660*3.0;
                double t3674 = t3671+t3672+t3673+1.0;
                double t3681 = gcab*t3658;
                double t3682 = t3660*t3654*t3658;
                double t3675 = t3681+t3682;
                double t3676 = t3654*t3663*6.0;
                double t3677 = gcab*t3660*t3654*t3663*4.0;
                double t3678 = t3667*t3669;
                double t3679 = gcab*t3660*4.0;
                double t3680 = t3676+t3677+t3678+t3679+1.0;
                double t3683 = 1/(t3666*t3666);
                double t3688 = 1/(t3680*t3680);
                double t3692 = 1/(t3674*t3674);
                double t3693 = b1f*t3610;
                double t3694 = b3f*t3611;
                double t3695 = b4f*t3587*t3612;
                double t3696 = b2f*c*t3608;
                double t3697 = t3693+t3694+t3695+t3696;
                double t3698 = 1/t3697;
                double t3699 = t3607*t3698*(1.0/2.0);
                double t3700 = t3699+1.0;
                double t3701 = log(t3700);
                double t3702 = a1f*c*t3608;
                double t3703 = t3702+1.0;
                double t3744 = c0f*t3701*t3703*2.0;
                double t3704 = t3624-t3744;
                double t3745 = t3603*t3606*t3704;
                double t3705 = t3624-t3745;
                double t3706 = gcaa*gcaa;
                double t3707 = gamma_bb[index]*gamma_bb[index];
                double t3708 = t3706*t3706;
                double t3709 = 1/pow(rho_b[index],3.2E1/3.0);
                double t3710 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t3711 = gamma_bb[index]*gcaa*t3658;
                double t3712 = t3711+1.0;
                double t3713 = gamma_bb[index]*gcaa*t3658*2.0;
                double t3714 = t3655*t3706*t3707;
                double t3715 = t3713+t3714+1.0;
                double t3716 = gamma_bb[index]*gcaa*t3658*3.0;
                double t3717 = gamma_bb[index]*gcaa*t3710*t3706*t3707;
                double t3718 = t3655*t3706*t3707*3.0;
                double t3719 = t3716+t3717+t3718+1.0;
                double t3720 = t3707*t3707;
                double t3736 = gcaa*t3658*4.0;
                double t3737 = gamma_bb[index]*t3655*t3706*1.2E1;
                double t3738 = gcaa*t3710*t3706*t3707*1.2E1;
                double t3739 = gamma_bb[index]*t3707*t3708*t3709*4.0;
                double t3721 = t3736+t3737+t3738+t3739;
                double t3722 = gamma_bb[index]*gcaa*t3658*4.0;
                double t3723 = gamma_bb[index]*gcaa*t3710*t3706*t3707*4.0;
                double t3724 = t3655*t3706*t3707*6.0;
                double t3725 = t3720*t3708*t3709;
                double t3726 = t3722+t3723+t3724+t3725+1.0;
                double t3729 = gcaa*t3658*2.0;
                double t3730 = gamma_bb[index]*t3655*t3706*2.0;
                double t3727 = t3730+t3729;
                double t3728 = 1/(t3719*t3719);
                double t3731 = 1/(t3715*t3715);
                double t3732 = gcaa*t3658*3.0;
                double t3733 = gamma_bb[index]*t3655*t3706*6.0;
                double t3734 = gcaa*t3710*t3706*t3707*3.0;
                double t3735 = t3732+t3733+t3734;
                double t3740 = 1/(t3726*t3726);
                double t3741 = 1/tau_b[index];
                double t3742 = tau_b[index]-1.0/1.0E20;
                double t3743 = ( (t3742 > 0.0) ?  1.0 : 0.0 ) ;
                double t3746 = 1/t3726;
                double t3747 = 1/t3715;
                double t3748 = 1/t3719;
                double t3749 = 1/(t3712*t3712);
                double t3750 = 1/kp;
                double t3751 = rho_b[index]*2.0;
                double t3752 = pow(rho_b[index],5.0/3.0);
                double t3753 = C_k*t3741*t3752;
                double t3754 = t3753-1.0;
                double t3755 = t3754*t3754;
                double t3756 = t3755*t3755;
                double t3757 = t3756*t3756;
                double t3758 = t3753+1.0;
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t3705+t3625*(t3642-t3606*t3653*t3647*t3648*(t3642-c0f* \
                   log((t3607*(1.0/2.0))/(b1f*t3628+b3f*t3629+b2f*c*t3626+b4f*t3587*t3630)+1.0)*(a1f*c*t3626+1.0)*2.0) \
                   +(Aa*t3606*t3653*log((1.0/2.0)/(Aa*(b1a*t3628+b3a*t3629+b2a*c*t3626+b4a*t3587*t3630))+1.0)*(t3647* \
                   t3648-1.0)*(a1a*c*t3626+1.0)*2.0)/d2fz0)+rho_a[index]*(t3603*t3606*(c0p*t3598*t3600*2.0-c0f*log((t3607* \
                   (1.0/2.0))/(b1f*t3585+b3f*t3586+b2f*c*t3583+b4f*t3587*t3588)+1.0)*(a1f*c*t3583+1.0)*2.0)-c0p*t3598* \
                   t3600*2.0))*(ccab1*1/(t3662*t3662)*t3654*t3655*(1.0/2.0)-(ccab2*t3654*t3655*(1.0/2.0))/t3666-ccab2* \
                   t3654*t3663*1/(t3666*t3666*t3666)*(t3675*t3675)*2.0-ccab4*1/(t3680*t3680*t3680)*t3667*(t3668*t3668) \
                   *t3669*2.0+ccab2*t3663*t3655*t3683*t3667*(1.0/2.0)+ccab4*t3667*t3669*t3688*(t3654*t3655*3.0+t3663* \
                   t3655*t3667*3.0+gcab*t3660*t3654*t3655*6.0)-(ccab4*t3663*t3655*t3667*3.0)/t3680+ccab2*t3660*t3654* \
                   t3683*t3675*t3658*2.0-ccab1*gcab*t3660*1/(t3662*t3662*t3662)*t3654*t3655*(1.0/2.0)-(ccab3*gcab*t3660* \
                   t3654*t3655*(3.0/2.0))/t3674-ccab3*gcab*t3660*(t3670*t3670)*t3654*t3663*1/(t3674*t3674*t3674)*2.0+ \
                   ccab3*gcab*t3670*t3654*t3663*t3692*t3658*3.0+ccab4*t3660*t3663*t3658*t3667*t3668*t3688*4.0+ccab3*gcab* \
                   t3660*t3654*t3663*t3692*(t3654*t3655*(3.0/2.0)+gcab*t3660*t3654*t3655*(3.0/2.0)))+t3705*t3741*t3743* \
                   ((ccaa1*gcaa*t3658)/t3712+ccaa2*gamma_bb[index]*t3655*t3706*t3747*2.0-ccaa1*gamma_bb[index]*t3655* \
                   t3706*t3749-ccaa2*t3655*t3731*t3706*t3707*t3727-ccaa4*t3720*t3721*t3740*t3708*t3709+ccaa4*gamma_bb[index]* \
                   t3707*t3708*t3709*t3746*4.0+ccaa3*gcaa*t3710*t3706*t3707*t3748*3.0-ccaa3*gamma_bb[index]*gcaa*t3710* \
                   t3706*t3707*t3735*t3728)*(1.0/4.0)-rho_b[index]*t3705*(t3743*(t3741*(tau_b[index]*2.0-(gamma_bb[index]* \
                   (1.0/4.0))/rho_b[index])*(1.0/2.0)-1.0)+1.0)*(ccaa2*t3655*t3706*t3747*2.0-ccaa1*t3655*t3706*t3749* \
                   2.0-ccaa2*t3731*t3707*t3708*t3709*2.0+ccaa4*t3707*t3708*t3709*t3746*1.2E1-ccaa4*t3720*t3740*t3708* \
                   t3709*(t3655*t3706*1.2E1+t3707*t3708*t3709*1.2E1+gamma_bb[index]*gcaa*t3710*t3706*2.4E1)+ccaa1*gamma_bb[index]* \
                   gcaa*t3710*1/(t3712*t3712*t3712)*t3706*2.0+ccaa2*t3655*t3706*1/(t3715*t3715*t3715)*t3707*(t3727*t3727) \
                   *2.0+ccaa4*t3720*(t3721*t3721)*t3708*1/(t3726*t3726*t3726)*t3709*2.0+ccaa3*gamma_bb[index]*gcaa*t3710* \
                   t3706*t3748*6.0-ccaa2*gamma_bb[index]*t3655*t3731*t3706*t3727*4.0-ccaa4*gamma_bb[index]*t3721*t3740* \
                   t3707*t3708*t3709*8.0-ccaa3*gcaa*t3710*t3706*t3707*t3735*t3728*6.0-ccaa3*gamma_bb[index]*gcaa*t3710* \
                   t3706*t3707*t3728*(t3655*t3706*6.0+gamma_bb[index]*gcaa*t3710*t3706*6.0)+ccaa3*gamma_bb[index]*gcaa* \
                   t3710*t3706*t3707*(t3735*t3735)*1/(t3719*t3719*t3719)*2.0)+1/(k*k*k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]* \
                   rho_b[index])*t3750*1/pow(t3751,4.0/3.0)*1/pow(gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]*rho_b[index]) \
                   *t3750*1/pow(t3751,2.0/3.0)*(1.0/4.0)+1.0,3.0)*(X-1.0)*((a_1*t3754)/t3758+a_2*t3755*1/(t3758*t3758) \
                   +a_4*t3756*1/(t3758*t3758*t3758*t3758)+a_8*t3757*1/(t3758*t3758*t3758*t3758*t3758*t3758*t3758*t3758) \
                   +a_10*t3755*t3757*1/pow(t3758,1.0E1)+a_3*t3754*t3755*1/(t3758*t3758*t3758)+a_5*t3754*t3756*1/(t3758* \
                   t3758*t3758*t3758*t3758)+a_6*t3755*t3756*1/(t3758*t3758*t3758*t3758*t3758*t3758)+a_9*t3754*t3757*1/ \
                   (t3758*t3758*t3758*t3758*t3758*t3758*t3758*t3758*t3758)+a_11*t3754*t3755*t3757*1/pow(t3758,1.1E1)+ \
                   a_7*t3754*t3755*t3756*1/(t3758*t3758*t3758*t3758*t3758*t3758*t3758)+1.0)*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t5096 = 1/pow(rho_b[index],1.0/3.0);
                double t5097 = c*t5096;
                double t5098 = sqrt(t5097);
                double t5099 = pow(t5097,3.0/2.0);
                double t5100 = c*c;
                double t5101 = 1/pow(rho_b[index],2.0/3.0);
                double t5102 = 1/c0p;
                double t5103 = b1p*t5098;
                double t5104 = b3p*t5099;
                double t5105 = b4p*t5100*t5101;
                double t5106 = b2p*c*t5096;
                double t5107 = t5103+t5104+t5105+t5106;
                double t5108 = 1/t5107;
                double t5109 = t5102*t5108*(1.0/2.0);
                double t5110 = t5109+1.0;
                double t5111 = log(t5110);
                double t5112 = a1p*c*t5096;
                double t5113 = t5112+1.0;
                double t5114 = gcaa*gcaa;
                double t5115 = 1/pow(rho_b[index],1.6E1/3.0);
                double t5116 = 1/pow(rho_b[index],8.0/3.0);
                double t5117 = gamma_bb[index]*gamma_bb[index];
                double t5118 = t5114*t5114;
                double t5119 = 1/pow(rho_b[index],3.2E1/3.0);
                double t5120 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t5121 = gamma_bb[index]*gcaa*t5116;
                double t5122 = t5121+1.0;
                double t5123 = gamma_bb[index]*gcaa*t5116*2.0;
                double t5124 = t5114*t5115*t5117;
                double t5125 = t5123+t5124+1.0;
                double t5126 = gamma_bb[index]*gcaa*t5116*3.0;
                double t5127 = gamma_bb[index]*gcaa*t5120*t5114*t5117;
                double t5128 = t5114*t5115*t5117*3.0;
                double t5129 = t5126+t5127+t5128+1.0;
                double t5130 = t5117*t5117;
                double t5146 = gcaa*t5116*4.0;
                double t5147 = gamma_bb[index]*t5114*t5115*1.2E1;
                double t5148 = gcaa*t5120*t5114*t5117*1.2E1;
                double t5149 = gamma_bb[index]*t5117*t5118*t5119*4.0;
                double t5131 = t5146+t5147+t5148+t5149;
                double t5132 = gamma_bb[index]*gcaa*t5116*4.0;
                double t5133 = gamma_bb[index]*gcaa*t5120*t5114*t5117*4.0;
                double t5134 = t5114*t5115*t5117*6.0;
                double t5135 = t5130*t5118*t5119;
                double t5136 = t5132+t5133+t5134+t5135+1.0;
                double t5139 = gcaa*t5116*2.0;
                double t5140 = gamma_bb[index]*t5114*t5115*2.0;
                double t5137 = t5140+t5139;
                double t5138 = 1/(t5129*t5129);
                double t5141 = 1/(t5125*t5125);
                double t5142 = gcaa*t5116*3.0;
                double t5143 = gamma_bb[index]*t5114*t5115*6.0;
                double t5144 = gcaa*t5120*t5114*t5117*3.0;
                double t5145 = t5142+t5143+t5144;
                double t5150 = 1/(t5136*t5136);
                double t5151 = 1/tau_b[index];
                double t5152 = tau_b[index]-1.0/1.0E20;
                double t5153 = ( (t5152 > 0.0) ?  1.0 : 0.0 ) ;
                double t5154 = pow(2.0,1.0/3.0);
                double t5155 = t5154*2.0;
                double t5156 = t5155-2.0;
                double t5157 = two_13*2.0;
                double t5158 = t5157-2.0;
                double t5159 = 1/t5158;
                double t5160 = 1/c0f;
                double t5161 = b1f*t5098;
                double t5162 = b3f*t5099;
                double t5163 = b4f*t5100*t5101;
                double t5164 = b2f*c*t5096;
                double t5165 = t5161+t5162+t5163+t5164;
                double t5166 = 1/t5165;
                double t5167 = t5160*t5166*(1.0/2.0);
                double t5168 = t5167+1.0;
                double t5169 = log(t5168);
                double t5170 = a1f*c*t5096;
                double t5171 = t5170+1.0;
                double t5172 = c0f*t5171*t5169*2.0;
                double t5173 = c0p*t5111*t5113*2.0;
                double t5174 = 1/t5136;
                double t5175 = 1/t5125;
                double t5176 = 1/t5129;
                double t5177 = 1/(t5122*t5122);
                double t5178 = 1/kp;
                double t5179 = rho_b[index]*2.0;
                double t5180 = pow(rho_b[index],5.0/3.0);
                double t5181 = C_k*t5151*t5180;
                double t5182 = t5181-1.0;
                double t5183 = t5182*t5182;
                double t5184 = t5183*t5183;
                double t5185 = t5184*t5184;
                double t5186 = t5181+1.0;
                v_gamma_bb_gamma_bb_[index] = t5151*t5153*(t5173+t5156*t5159*(t5172-t5173))*((ccaa1*gcaa*t5116)/t5122+ \
                   ccaa2*gamma_bb[index]*t5114*t5115*t5175*2.0-ccaa1*gamma_bb[index]*t5114*t5115*t5177-ccaa4*t5130*t5131* \
                   t5150*t5118*t5119-ccaa2*t5114*t5141*t5115*t5117*t5137+ccaa4*gamma_bb[index]*t5117*t5118*t5119*t5174* \
                   4.0+ccaa3*gcaa*t5120*t5114*t5117*t5176*3.0-ccaa3*gamma_bb[index]*gcaa*t5120*t5114*t5117*t5145*t5138) \
                   *(1.0/4.0)-rho_b[index]*(t5153*(t5151*(tau_b[index]*2.0-(gamma_bb[index]*(1.0/4.0))/rho_b[index])* \
                   (1.0/2.0)-1.0)+1.0)*(t5173+t5156*t5159*(t5172-c0p*t5111*t5113*2.0))*(ccaa2*t5114*t5115*t5175*2.0-ccaa1* \
                   t5114*t5115*t5177*2.0-ccaa2*t5141*t5117*t5118*t5119*2.0+ccaa4*t5117*t5118*t5119*t5174*1.2E1-ccaa4* \
                   t5130*t5150*t5118*t5119*(t5114*t5115*1.2E1+t5117*t5118*t5119*1.2E1+gamma_bb[index]*gcaa*t5120*t5114* \
                   2.4E1)+ccaa1*gamma_bb[index]*gcaa*t5120*1/(t5122*t5122*t5122)*t5114*2.0+ccaa2*t5114*t5115*1/(t5125* \
                   t5125*t5125)*t5117*(t5137*t5137)*2.0+ccaa4*t5130*(t5131*t5131)*t5118*1/(t5136*t5136*t5136)*t5119*2.0+ \
                   ccaa3*gamma_bb[index]*gcaa*t5120*t5114*t5176*6.0-ccaa2*gamma_bb[index]*t5114*t5141*t5115*t5137*4.0- \
                   ccaa4*gamma_bb[index]*t5131*t5150*t5117*t5118*t5119*8.0-ccaa3*gcaa*t5120*t5114*t5117*t5145*t5138*6.0- \
                   ccaa3*gamma_bb[index]*gcaa*t5120*t5114*t5117*t5138*(t5114*t5115*6.0+gamma_bb[index]*gcaa*t5120*t5114* \
                   6.0)+ccaa3*gamma_bb[index]*gcaa*t5120*t5114*t5117*(t5145*t5145)*1/(t5129*t5129*t5129)*2.0)+1/(k*k* \
                   k*k)*(mu_*mu_)*1/(rho_b[index]*rho_b[index]*rho_b[index])*t5178*1/pow(t5179,4.0/3.0)*1/pow(gamma_bb[index]* \
                   1/(k*k)*mu_*1/(rho_b[index]*rho_b[index])*t5178*1/pow(t5179,2.0/3.0)*(1.0/4.0)+1.0,3.0)*(X-1.0)*((a_1* \
                   t5182)/t5186+a_2*t5183*1/(t5186*t5186)+a_4*t5184*1/(t5186*t5186*t5186*t5186)+a_8*t5185*1/(t5186*t5186* \
                   t5186*t5186*t5186*t5186*t5186*t5186)+a_10*t5183*t5185*1/pow(t5186,1.0E1)+a_3*t5182*t5183*1/(t5186* \
                   t5186*t5186)+a_5*t5182*t5184*1/(t5186*t5186*t5186*t5186*t5186)+a_6*t5183*t5184*1/(t5186*t5186*t5186* \
                   t5186*t5186*t5186)+a_9*t5182*t5185*1/(t5186*t5186*t5186*t5186*t5186*t5186*t5186*t5186*t5186)+a_11* \
                   t5182*t5183*t5185*1/pow(t5186,1.1E1)+a_7*t5182*t5183*t5184*1/(t5186*t5186*t5186*t5186*t5186*t5186* \
                   t5186)+1.0)*(1.0/8.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3760 = pow(rho_a[index],5.0/3.0);
                double t3761 = 1/(tau_a[index]*tau_a[index]);
                double t3762 = 1/tau_a[index];
                double t3763 = C_k*t3760*t3762;
                double t3764 = t3763+1.0;
                double t3765 = t3763-1.0;
                double t3766 = 1/(t3764*t3764);
                double t3767 = t3765*t3765;
                double t3768 = t3767*t3767;
                double t3769 = t3768*t3768;
                double t3770 = 1/pow(t3764,1.1E1);
                double t3771 = 1/(t3764*t3764*t3764);
                double t3772 = 1/(t3764*t3764*t3764*t3764);
                double t3773 = 1/(t3764*t3764*t3764*t3764*t3764);
                double t3774 = 1/(t3764*t3764*t3764*t3764*t3764*t3764);
                double t3775 = 1/(t3764*t3764*t3764*t3764*t3764*t3764*t3764);
                double t3776 = 1/(t3764*t3764*t3764*t3764*t3764*t3764*t3764*t3764);
                double t3777 = 1/(t3764*t3764*t3764*t3764*t3764*t3764*t3764*t3764*t3764);
                double t3778 = 1/pow(t3764,1.0E1);
                double t3779 = 1/(k*k);
                double t3780 = 1/kp;
                double t3781 = 1/(rho_a[index]*rho_a[index]);
                double t3782 = rho_a[index]*2.0;
                double t3783 = 1/pow(t3782,2.0/3.0);
                double t3784 = gamma_aa[index]*mu_*t3780*t3781*t3783*t3779*(1.0/4.0);
                double t3785 = t3784+1.0;
                double t3786 = 1/t3785;
                double t3787 = kp-kp*t3786+1.0;
                double t3788 = C_k*C_k;
                double t3789 = pow(rho_a[index],7.0/3.0);
                double t3790 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t3791 = 1/t3764;
                double t3792 = 1/pow(t3764,1.2E1);
                double t3793 = pow(rho_a[index],2.0/3.0);
                double t3794 = C_k*a_1*t3760*t3761*t3791;
                double t3795 = C_k*a_2*t3760*t3761*t3765*t3766*2.0;
                double t3796 = C_k*a_10*t3760*t3761*t3765*t3769*t3778*1.0E1;
                double t3797 = C_k*a_11*t3760*t3761*t3770*t3767*t3769*1.1E1;
                double t3798 = C_k*a_3*t3760*t3761*t3771*t3767*3.0;
                double t3799 = C_k*a_4*t3760*t3761*t3772*t3765*t3767*4.0;
                double t3800 = C_k*a_5*t3760*t3761*t3773*t3768*5.0;
                double t3801 = C_k*a_6*t3760*t3761*t3765*t3774*t3768*6.0;
                double t3802 = C_k*a_7*t3760*t3761*t3775*t3767*t3768*7.0;
                double t3803 = C_k*a_8*t3760*t3761*t3765*t3767*t3776*t3768*8.0;
                double t3804 = C_k*a_9*t3760*t3761*t3777*t3769*9.0;
                double t3805 = t3794+t3795+t3796+t3797+t3798+t3799+t3800+t3801+t3802+t3803+t3804-C_k*a_1*t3760*t3761* \
                   t3765*t3766-C_k*a_2*t3760*t3761*t3771*t3767*2.0-C_k*a_4*t3760*t3761*t3773*t3768*4.0-C_k*a_8*t3760* \
                   t3761*t3777*t3769*8.0-C_k*a_10*t3760*t3761*t3770*t3767*t3769*1.0E1-C_k*a_3*t3760*t3761*t3772*t3765* \
                   t3767*3.0-C_k*a_5*t3760*t3761*t3765*t3774*t3768*5.0-C_k*a_6*t3760*t3761*t3775*t3767*t3768*6.0-C_k* \
                   a_9*t3760*t3761*t3765*t3769*t3778*9.0-C_k*a_11*t3760*t3761*t3765*t3792*t3767*t3769*1.1E1-C_k*a_7*t3760* \
                   t3761*t3765*t3767*t3776*t3768*7.0;
                double t3806 = 1/pow(rho_a[index],1.0/3.0);
                double t3807 = c*t3806;
                double t3808 = sqrt(t3807);
                double t3809 = pow(t3807,3.0/2.0);
                double t3810 = c*c;
                double t3811 = 1/pow(rho_a[index],2.0/3.0);
                double t3812 = 1/c0p;
                double t3813 = b1p*t3808;
                double t3814 = b3p*t3809;
                double t3815 = b4p*t3810*t3811;
                double t3816 = b2p*c*t3806;
                double t3817 = t3813+t3814+t3815+t3816;
                double t3818 = 1/t3817;
                double t3819 = t3812*t3818*(1.0/2.0);
                double t3820 = t3819+1.0;
                double t3821 = log(t3820);
                double t3822 = a1p*c*t3806;
                double t3823 = t3822+1.0;
                double t3824 = tau_a[index]-1.0/1.0E20;
                double t3825 = tau_a[index]*2.0;
                double t3826 = 1/rho_a[index];
                double t3857 = gamma_aa[index]*t3826*(1.0/4.0);
                double t3827 = t3825-t3857;
                double t3828 = gamma_aa[index]*gamma_aa[index];
                double t3829 = gcaa*gcaa;
                double t3830 = t3828*t3828;
                double t3831 = t3829*t3829;
                double t3832 = 1/pow(rho_a[index],3.2E1/3.0);
                double t3833 = 1/pow(rho_a[index],8.0/3.0);
                double t3834 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t3835 = 1/pow(rho_a[index],1.6E1/3.0);
                double t3836 = pow(2.0,1.0/3.0);
                double t3837 = t3836*2.0;
                double t3838 = t3837-2.0;
                double t3839 = two_13*2.0;
                double t3840 = t3839-2.0;
                double t3841 = 1/t3840;
                double t3842 = 1/c0f;
                double t3843 = b1f*t3808;
                double t3844 = b3f*t3809;
                double t3845 = b4f*t3810*t3811;
                double t3846 = b2f*c*t3806;
                double t3847 = t3843+t3844+t3845+t3846;
                double t3848 = 1/t3847;
                double t3849 = t3842*t3848*(1.0/2.0);
                double t3850 = t3849+1.0;
                double t3851 = log(t3850);
                double t3852 = a1f*c*t3806;
                double t3853 = t3852+1.0;
                double t3854 = c0f*t3851*t3853*2.0;
                double t3855 = c0p*t3821*t3823*2.0;
                double t3856 = ( (t3824 > 0.0) ?  1.0 : 0.0 ) ;
                double t3887 = t3761*t3827*(1.0/2.0);
                double t3858 = t3762-t3887;
                double t3859 = t3856*t3858;
                double t3860 = 0.0 ;
                double t3861 = t3762*t3827*(1.0/2.0);
                double t3862 = t3861-1.0;
                double t3863 = t3860*t3862;
                double t3864 = t3863+t3859;
                double t3865 = gamma_aa[index]*gcaa*t3833*4.0;
                double t3866 = gamma_aa[index]*gcaa*t3834*t3828*t3829*4.0;
                double t3867 = t3835*t3828*t3829*6.0;
                double t3868 = t3830*t3831*t3832;
                double t3869 = t3865+t3866+t3867+t3868+1.0;
                double t3870 = 1/t3869;
                double t3871 = gamma_aa[index]*gcaa*t3833;
                double t3872 = t3871+1.0;
                double t3873 = 1/t3872;
                double t3874 = gamma_aa[index]*gcaa*t3833*3.0;
                double t3875 = gamma_aa[index]*gcaa*t3834*t3828*t3829;
                double t3876 = t3835*t3828*t3829*3.0;
                double t3877 = t3874+t3875+t3876+1.0;
                double t3878 = 1/t3877;
                double t3879 = gamma_aa[index]*gcaa*t3833*2.0;
                double t3880 = t3835*t3828*t3829;
                double t3881 = t3880+t3879+1.0;
                double t3882 = 1/t3881;
                double t3883 = 1/pow(rho_a[index],1.9E1/3.0);
                double t3884 = 1/pow(rho_a[index],1.1E1/3.0);
                double t3885 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t3886 = 1/pow(rho_a[index],3.5E1/3.0);
                double t3888 = 1/pow(rho_a[index],4.0/3.0);
                double t3889 = 1/pow(rho_a[index],5.0/3.0);
                double t3890 = 1/sqrt(t3807);
                double t3891 = 1/t3820;
                double t3892 = 1/(t3817*t3817);
                double t3893 = b4p*t3810*t3889*(2.0/3.0);
                double t3894 = b2p*c*t3888*(1.0/3.0);
                double t3895 = b1p*c*t3890*t3888*(1.0/6.0);
                double t3896 = b3p*c*t3808*t3888*(1.0/2.0);
                double t3897 = t3893+t3894+t3895+t3896;
                double t3898 = t3823*t3891*t3892*t3897;
                double t3899 = ccaa4*t3830*t3831*t3832*t3870;
                double t3900 = ccaa1*gamma_aa[index]*gcaa*t3833*t3873;
                double t3901 = ccaa3*gamma_aa[index]*gcaa*t3834*t3828*t3829*t3878;
                double t3902 = ccaa2*t3835*t3828*t3882*t3829;
                double t3903 = ccaa0+t3899+t3900+t3901+t3902;
                double t3904 = t3854-t3855;
                double t3905 = t3841*t3838*t3904;
                double t3906 = t3855+t3905;
                v_rho_a_tau_a_[index] = (X-1.0)*(t3787*t3805+rho_a[index]*t3787*(C_k*a_1*t3761*t3791*t3793*(5.0/3.0) \
                   -a_1*t3790*t3766*t3788*t3789*(1.0E1/3.0)+a_2*t3790*t3766*t3788*t3789*(1.0E1/3.0)+a_1*t3771*t3790*t3765* \
                   t3788*t3789*(1.0E1/3.0)+a_10*t3790*t3769*t3778*t3788*t3789*1.5E2-a_2*t3771*t3790*t3765*t3788*t3789* \
                   (4.0E1/3.0)+a_2*t3772*t3790*t3767*t3788*t3789*1.0E1+a_3*t3771*t3790*t3765*t3788*t3789*1.0E1-a_3*t3772* \
                   t3790*t3767*t3788*t3789*3.0E1+a_4*t3772*t3790*t3767*t3788*t3789*2.0E1+a_4*t3790*t3774*t3768*t3788* \
                   t3789*(1.0E2/3.0)-a_5*t3790*t3774*t3768*t3788*t3789*(2.5E2/3.0)+a_6*t3790*t3774*t3768*t3788*t3789* \
                   5.0E1+a_8*t3790*t3769*t3778*t3788*t3789*1.2E2-a_9*t3790*t3769*t3778*t3788*t3789*2.7E2-C_k*a_1*t3761* \
                   t3765*t3766*t3793*(5.0/3.0)-C_k*a_2*t3761*t3771*t3793*t3767*(1.0E1/3.0)+C_k*a_2*t3761*t3765*t3766* \
                   t3793*(1.0E1/3.0)+C_k*a_3*t3761*t3771*t3793*t3767*5.0-C_k*a_4*t3761*t3773*t3793*t3768*(2.0E1/3.0)+ \
                   C_k*a_5*t3761*t3773*t3793*t3768*(2.5E1/3.0)-C_k*a_8*t3761*t3793*t3777*t3769*(4.0E1/3.0)+C_k*a_9*t3761* \
                   t3793*t3777*t3769*1.5E1-C_k*a_10*t3761*t3770*t3793*t3767*t3769*(5.0E1/3.0)+C_k*a_11*t3761*t3770*t3793* \
                   t3767*t3769*(5.5E1/3.0)+C_k*a_10*t3761*t3765*t3793*t3769*t3778*(5.0E1/3.0)-C_k*a_3*t3761*t3772*t3765* \
                   t3793*t3767*5.0+C_k*a_4*t3761*t3772*t3765*t3793*t3767*(2.0E1/3.0)-C_k*a_5*t3761*t3765*t3774*t3793* \
                   t3768*(2.5E1/3.0)+C_k*a_6*t3761*t3765*t3774*t3793*t3768*1.0E1-C_k*a_6*t3761*t3775*t3793*t3767*t3768* \
                   1.0E1+C_k*a_7*t3761*t3775*t3793*t3767*t3768*(3.5E1/3.0)-C_k*a_9*t3761*t3765*t3793*t3769*t3778*1.5E1- \
                   a_10*t3770*t3790*t3765*t3769*t3788*t3789*(1.0E3/3.0)+a_11*t3770*t3790*t3765*t3769*t3788*t3789*(5.5E2/ \
                   3.0)+a_10*t3790*t3792*t3767*t3769*t3788*t3789*(5.5E2/3.0)-a_11*t3790*t3792*t3767*t3769*t3788*t3789* \
                   (1.21E3/3.0)+a_3*t3790*t3773*t3765*t3767*t3788*t3789*2.0E1-a_4*t3790*t3773*t3765*t3767*t3788*t3789* \
                   (1.6E2/3.0)+a_5*t3790*t3773*t3765*t3767*t3788*t3789*(1.0E2/3.0)+a_5*t3790*t3765*t3775*t3768*t3788* \
                   t3789*5.0E1-a_6*t3790*t3765*t3775*t3768*t3788*t3789*1.2E2+a_6*t3790*t3767*t3776*t3768*t3788*t3789* \
                   7.0E1+a_7*t3790*t3765*t3775*t3768*t3788*t3789*7.0E1-a_7*t3790*t3767*t3776*t3768*t3788*t3789*(4.9E2/ \
                   3.0)+a_8*t3790*t3767*t3776*t3768*t3788*t3789*(2.8E2/3.0)+a_9*t3770*t3790*t3765*t3769*t3788*t3789*1.5E2+ \
                   a_11*t3790*1/pow(t3764,1.3E1)*t3765*t3767*t3769*t3788*t3789*2.2E2-C_k*a_11*t3761*t3765*t3792*t3793* \
                   t3767*t3769*(5.5E1/3.0)-C_k*a_7*t3761*t3765*t3793*t3767*t3776*t3768*(3.5E1/3.0)+C_k*a_8*t3761*t3765* \
                   t3793*t3767*t3776*t3768*(4.0E1/3.0)+a_7*t3790*t3765*t3767*t3768*t3777*t3788*t3789*(2.8E2/3.0)-a_8* \
                   t3790*t3765*t3767*t3768*t3777*t3788*t3789*(6.4E2/3.0)+a_9*t3790*t3765*t3767*t3768*t3777*t3788*t3789* \
                   1.2E2)-kp*rho_a[index]*1/(t3785*t3785)*t3805*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]) \
                   *t3780*t3783*t3779*(1.0/2.0)+gamma_aa[index]*mu_*t3780*t3781*1/pow(t3782,5.0/3.0)*t3779*(1.0/3.0)) \
                   )-t3864*t3903*(t3855+t3841*t3838*(t3854-c0p*t3821*t3823*2.0))+rho_a[index]*t3864*t3903*(-t3898+t3841* \
                   t3838*(t3898-(t3853*1/(t3847*t3847)*(b2f*c*t3888*(1.0/3.0)+b4f*t3810*t3889*(2.0/3.0)+b1f*c*t3890*t3888* \
                   (1.0/6.0)+b3f*c*t3808*t3888*(1.0/2.0)))/t3850+a1f*c*c0f*t3851*t3888*(2.0/3.0)-a1p*c*c0p*t3821*t3888* \
                   (2.0/3.0))+a1p*c*c0p*t3821*t3888*(2.0/3.0))+rho_a[index]*t3864*t3906*(ccaa1*gamma_aa[index]*gcaa*t3873* \
                   t3884*(8.0/3.0)+ccaa4*t3830*t3831*t3870*t3886*(3.2E1/3.0)+ccaa2*t3828*t3882*t3829*t3883*(1.6E1/3.0) \
                   -ccaa1*1/(t3872*t3872)*t3828*t3829*t3883*(8.0/3.0)-ccaa2*t3835*1/(t3881*t3881)*t3828*t3829*(gamma_aa[index]* \
                   gcaa*t3884*(1.6E1/3.0)+t3828*t3829*t3883*(1.6E1/3.0))-ccaa4*t3830*t3831*t3832*1/(t3869*t3869)*(gamma_aa[index]* \
                   gcaa*t3884*(3.2E1/3.0)+t3830*t3831*t3886*(3.2E1/3.0)+t3828*t3829*t3883*3.2E1+gamma_aa[index]*gcaa* \
                   t3828*t3829*t3885*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t3828*t3829*t3885*t3878*8.0-ccaa3*gamma_aa[index]* \
                   gcaa*t3834*t3828*t3829*1/(t3877*t3877)*(gamma_aa[index]*gcaa*t3884*8.0+t3828*t3829*t3883*1.6E1+gamma_aa[index]* \
                   gcaa*t3828*t3829*t3885*8.0))-gamma_aa[index]*t3762*t3860*t3826*t3903*t3906*(1.0/8.0)+gamma_aa[index]* \
                   t3761*t3826*t3856*t3903*t3906*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                double t6315 = 1/pow(rho_a[index],1.0/3.0);
                double t6316 = c*t6315;
                double t6317 = sqrt(t6316);
                double t6318 = pow(t6316,3.0/2.0);
                double t6319 = c*c;
                double t6320 = 1/pow(rho_a[index],2.0/3.0);
                double t6321 = 1/c0p;
                double t6322 = b1p*t6317;
                double t6323 = b3p*t6318;
                double t6324 = b4p*t6320*t6319;
                double t6325 = b2p*c*t6315;
                double t6326 = t6322+t6323+t6324+t6325;
                double t6327 = 1/t6326;
                double t6328 = t6321*t6327*(1.0/2.0);
                double t6329 = t6328+1.0;
                double t6330 = log(t6329);
                double t6331 = a1p*c*t6315;
                double t6332 = t6331+1.0;
                double t6333 = tau_a[index]-1.0/1.0E20;
                double t6334 = 1/tau_a[index];
                double t6335 = tau_a[index]*2.0;
                double t6336 = 1/rho_a[index];
                double t6385 = gamma_aa[index]*t6336*(1.0/4.0);
                double t6337 = t6335-t6385;
                double t6338 = gamma_aa[index]*gamma_aa[index];
                double t6339 = gcaa*gcaa;
                double t6340 = t6338*t6338;
                double t6341 = t6339*t6339;
                double t6342 = 1/pow(rho_a[index],3.2E1/3.0);
                double t6343 = 1/pow(rho_a[index],8.0/3.0);
                double t6344 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t6345 = 1/pow(rho_a[index],1.6E1/3.0);
                double t6346 = 1/(tau_a[index]*tau_a[index]);
                double t6347 = pow(rho_a[index],5.0/3.0);
                double t6348 = C_k*t6334*t6347;
                double t6349 = t6348+1.0;
                double t6350 = t6348-1.0;
                double t6351 = 1/(t6349*t6349);
                double t6352 = t6350*t6350;
                double t6353 = t6352*t6352;
                double t6354 = t6353*t6353;
                double t6355 = 1/pow(t6349,1.1E1);
                double t6356 = 1/(t6349*t6349*t6349);
                double t6357 = 1/(t6349*t6349*t6349*t6349);
                double t6358 = 1/(t6349*t6349*t6349*t6349*t6349);
                double t6359 = 1/(t6349*t6349*t6349*t6349*t6349*t6349);
                double t6360 = 1/(t6349*t6349*t6349*t6349*t6349*t6349*t6349);
                double t6361 = 1/(t6349*t6349*t6349*t6349*t6349*t6349*t6349*t6349);
                double t6362 = 1/(t6349*t6349*t6349*t6349*t6349*t6349*t6349*t6349*t6349);
                double t6363 = 1/pow(t6349,1.0E1);
                double t6364 = pow(2.0,1.0/3.0);
                double t6365 = t6364*2.0;
                double t6366 = t6365-2.0;
                double t6367 = two_13*2.0;
                double t6368 = t6367-2.0;
                double t6369 = 1/t6368;
                double t6370 = 1/c0f;
                double t6371 = b1f*t6317;
                double t6372 = b3f*t6318;
                double t6373 = b4f*t6320*t6319;
                double t6374 = b2f*c*t6315;
                double t6375 = t6371+t6372+t6373+t6374;
                double t6376 = 1/t6375;
                double t6377 = t6370*t6376*(1.0/2.0);
                double t6378 = t6377+1.0;
                double t6379 = log(t6378);
                double t6380 = a1f*c*t6315;
                double t6381 = t6380+1.0;
                double t6382 = c0f*t6381*t6379*2.0;
                double t6383 = c0p*t6330*t6332*2.0;
                double t6384 = ( (t6333 > 0.0) ?  1.0 : 0.0 ) ;
                double t6415 = t6337*t6346*(1.0/2.0);
                double t6386 = t6334-t6415;
                double t6387 = t6384*t6386;
                double t6388 = 0.0 ;
                double t6389 = t6334*t6337*(1.0/2.0);
                double t6390 = t6389-1.0;
                double t6391 = t6390*t6388;
                double t6392 = t6391+t6387;
                double t6393 = gamma_aa[index]*gcaa*t6343*4.0;
                double t6394 = gamma_aa[index]*gcaa*t6344*t6338*t6339*4.0;
                double t6395 = t6345*t6338*t6339*6.0;
                double t6396 = t6340*t6341*t6342;
                double t6397 = t6393+t6394+t6395+t6396+1.0;
                double t6398 = 1/t6397;
                double t6399 = gamma_aa[index]*gcaa*t6343;
                double t6400 = t6399+1.0;
                double t6401 = 1/t6400;
                double t6402 = gamma_aa[index]*gcaa*t6343*3.0;
                double t6403 = gamma_aa[index]*gcaa*t6344*t6338*t6339;
                double t6404 = t6345*t6338*t6339*3.0;
                double t6405 = t6402+t6403+t6404+1.0;
                double t6406 = 1/t6405;
                double t6407 = gamma_aa[index]*gcaa*t6343*2.0;
                double t6408 = t6345*t6338*t6339;
                double t6409 = t6407+t6408+1.0;
                double t6410 = 1/t6409;
                double t6411 = 1/pow(rho_a[index],1.9E1/3.0);
                double t6412 = 1/pow(rho_a[index],1.1E1/3.0);
                double t6413 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t6414 = 1/pow(rho_a[index],3.5E1/3.0);
                double t6416 = 1/pow(rho_a[index],4.0/3.0);
                double t6417 = 1/pow(rho_a[index],5.0/3.0);
                double t6418 = 1/sqrt(t6316);
                double t6419 = 1/t6329;
                double t6420 = 1/(t6326*t6326);
                double t6421 = b4p*t6319*t6417*(2.0/3.0);
                double t6422 = b2p*c*t6416*(1.0/3.0);
                double t6423 = b1p*c*t6416*t6418*(1.0/6.0);
                double t6424 = b3p*c*t6317*t6416*(1.0/2.0);
                double t6425 = t6421+t6422+t6423+t6424;
                double t6426 = t6332*t6420*t6425*t6419;
                double t6427 = ccaa4*t6340*t6341*t6342*t6398;
                double t6428 = ccaa1*gamma_aa[index]*gcaa*t6343*t6401;
                double t6429 = ccaa3*gamma_aa[index]*gcaa*t6344*t6338*t6339*t6406;
                double t6430 = ccaa2*t6345*t6338*t6339*t6410;
                double t6431 = ccaa0+t6430+t6427+t6428+t6429;
                double t6432 = X-1.0;
                double t6433 = 1/(k*k);
                double t6434 = 1/kp;
                double t6435 = 1/(rho_a[index]*rho_a[index]);
                double t6436 = rho_a[index]*2.0;
                double t6437 = 1/pow(t6436,2.0/3.0);
                double t6438 = gamma_aa[index]*mu_*t6433*t6434*t6435*t6437*(1.0/4.0);
                double t6439 = t6438+1.0;
                double t6440 = 1/t6439;
                double t6441 = kp-kp*t6440+1.0;
                double t6442 = C_k*C_k;
                double t6443 = pow(rho_a[index],7.0/3.0);
                double t6444 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t6445 = 1/t6349;
                double t6446 = 1/pow(t6349,1.2E1);
                double t6447 = pow(rho_a[index],2.0/3.0);
                double t6448 = t6382-t6383;
                double t6449 = t6366*t6369*t6448;
                double t6450 = t6383+t6449;
                double t6451 = C_k*a_1*t6346*t6347*t6445;
                double t6452 = C_k*a_2*t6350*t6351*t6346*t6347*2.0;
                double t6453 = C_k*a_10*t6350*t6354*t6363*t6346*t6347*1.0E1;
                double t6454 = C_k*a_11*t6352*t6354*t6346*t6355*t6347*1.1E1;
                double t6455 = C_k*a_3*t6352*t6346*t6347*t6356*3.0;
                double t6456 = C_k*a_4*t6350*t6352*t6346*t6347*t6357*4.0;
                double t6457 = C_k*a_5*t6353*t6346*t6347*t6358*5.0;
                double t6458 = C_k*a_6*t6350*t6353*t6346*t6347*t6359*6.0;
                double t6459 = C_k*a_7*t6360*t6352*t6353*t6346*t6347*7.0;
                double t6460 = C_k*a_8*t6350*t6352*t6361*t6353*t6346*t6347*8.0;
                double t6461 = C_k*a_9*t6362*t6354*t6346*t6347*9.0;
                double t6462 = t6451+t6460+t6452+t6461+t6453+t6454+t6455+t6456+t6457+t6458+t6459-C_k*a_1*t6350*t6351* \
                   t6346*t6347-C_k*a_2*t6352*t6346*t6347*t6356*2.0-C_k*a_4*t6353*t6346*t6347*t6358*4.0-C_k*a_8*t6362* \
                   t6354*t6346*t6347*8.0-C_k*a_10*t6352*t6354*t6346*t6355*t6347*1.0E1-C_k*a_3*t6350*t6352*t6346*t6347* \
                   t6357*3.0-C_k*a_5*t6350*t6353*t6346*t6347*t6359*5.0-C_k*a_6*t6360*t6352*t6353*t6346*t6347*6.0-C_k* \
                   a_9*t6350*t6354*t6363*t6346*t6347*9.0-C_k*a_11*t6350*t6352*t6354*t6346*t6347*t6446*1.1E1-C_k*a_7*t6350* \
                   t6352*t6361*t6353*t6346*t6347*7.0;
                v_rho_a_tau_a_[index] = t6432*t6441*t6462-t6392*t6431*(t6383+t6366*t6369*(t6382-c0p*t6330*t6332*2.0) \
                   )+rho_a[index]*t6432*t6441*(C_k*a_1*t6346*t6445*t6447*(5.0/3.0)-a_1*t6351*t6442*t6443*t6444*(1.0E1/ \
                   3.0)+a_2*t6351*t6442*t6443*t6444*(1.0E1/3.0)+a_1*t6350*t6356*t6442*t6443*t6444*(1.0E1/3.0)+a_10*t6354* \
                   t6363*t6442*t6443*t6444*1.5E2-a_2*t6350*t6356*t6442*t6443*t6444*(4.0E1/3.0)+a_2*t6352*t6357*t6442* \
                   t6443*t6444*1.0E1+a_3*t6350*t6356*t6442*t6443*t6444*1.0E1-a_3*t6352*t6357*t6442*t6443*t6444*3.0E1+ \
                   a_4*t6352*t6357*t6442*t6443*t6444*2.0E1+a_4*t6353*t6359*t6442*t6443*t6444*(1.0E2/3.0)-a_5*t6353*t6359* \
                   t6442*t6443*t6444*(2.5E2/3.0)+a_6*t6353*t6359*t6442*t6443*t6444*5.0E1+a_8*t6354*t6363*t6442*t6443* \
                   t6444*1.2E2-a_9*t6354*t6363*t6442*t6443*t6444*2.7E2-C_k*a_1*t6350*t6351*t6346*t6447*(5.0/3.0)+C_k* \
                   a_2*t6350*t6351*t6346*t6447*(1.0E1/3.0)-C_k*a_2*t6352*t6346*t6356*t6447*(1.0E1/3.0)+C_k*a_3*t6352* \
                   t6346*t6356*t6447*5.0-C_k*a_4*t6353*t6346*t6358*t6447*(2.0E1/3.0)+C_k*a_5*t6353*t6346*t6358*t6447* \
                   (2.5E1/3.0)-C_k*a_8*t6362*t6354*t6346*t6447*(4.0E1/3.0)+C_k*a_9*t6362*t6354*t6346*t6447*1.5E1+C_k* \
                   a_10*t6350*t6354*t6363*t6346*t6447*(5.0E1/3.0)-C_k*a_10*t6352*t6354*t6346*t6355*t6447*(5.0E1/3.0)+ \
                   C_k*a_11*t6352*t6354*t6346*t6355*t6447*(5.5E1/3.0)-C_k*a_3*t6350*t6352*t6346*t6357*t6447*5.0+C_k*a_4* \
                   t6350*t6352*t6346*t6357*t6447*(2.0E1/3.0)-C_k*a_5*t6350*t6353*t6346*t6359*t6447*(2.5E1/3.0)-C_k*a_6* \
                   t6360*t6352*t6353*t6346*t6447*1.0E1+C_k*a_6*t6350*t6353*t6346*t6359*t6447*1.0E1+C_k*a_7*t6360*t6352* \
                   t6353*t6346*t6447*(3.5E1/3.0)-C_k*a_9*t6350*t6354*t6363*t6346*t6447*1.5E1-a_10*t6350*t6354*t6355*t6442* \
                   t6443*t6444*(1.0E3/3.0)+a_11*t6350*t6354*t6355*t6442*t6443*t6444*(5.5E2/3.0)+a_10*t6352*t6354*t6442* \
                   t6443*t6444*t6446*(5.5E2/3.0)-a_11*t6352*t6354*t6442*t6443*t6444*t6446*(1.21E3/3.0)+a_3*t6350*t6352* \
                   t6358*t6442*t6443*t6444*2.0E1-a_4*t6350*t6352*t6358*t6442*t6443*t6444*(1.6E2/3.0)+a_5*t6350*t6360* \
                   t6353*t6442*t6443*t6444*5.0E1+a_5*t6350*t6352*t6358*t6442*t6443*t6444*(1.0E2/3.0)-a_6*t6350*t6360* \
                   t6353*t6442*t6443*t6444*1.2E2+a_6*t6352*t6361*t6353*t6442*t6443*t6444*7.0E1+a_7*t6350*t6360*t6353* \
                   t6442*t6443*t6444*7.0E1-a_7*t6352*t6361*t6353*t6442*t6443*t6444*(4.9E2/3.0)+a_8*t6352*t6361*t6353* \
                   t6442*t6443*t6444*(2.8E2/3.0)+a_9*t6350*t6354*t6355*t6442*t6443*t6444*1.5E2+a_11*t6350*t6352*t6354* \
                   1/pow(t6349,1.3E1)*t6442*t6443*t6444*2.2E2-C_k*a_11*t6350*t6352*t6354*t6346*t6446*t6447*(5.5E1/3.0) \
                   -C_k*a_7*t6350*t6352*t6361*t6353*t6346*t6447*(3.5E1/3.0)+C_k*a_8*t6350*t6352*t6361*t6353*t6346*t6447* \
                   (4.0E1/3.0)+a_7*t6350*t6352*t6353*t6362*t6442*t6443*t6444*(2.8E2/3.0)-a_8*t6350*t6352*t6353*t6362* \
                   t6442*t6443*t6444*(6.4E2/3.0)+a_9*t6350*t6352*t6353*t6362*t6442*t6443*t6444*1.2E2)+rho_a[index]*t6392* \
                   t6431*(-t6426+t6366*t6369*(t6426-(t6381*1/(t6375*t6375)*(b2f*c*t6416*(1.0/3.0)+b4f*t6319*t6417*(2.0/ \
                   3.0)+b1f*c*t6416*t6418*(1.0/6.0)+b3f*c*t6317*t6416*(1.0/2.0)))/t6378+a1f*c*c0f*t6379*t6416*(2.0/3.0) \
                   -a1p*c*c0p*t6330*t6416*(2.0/3.0))+a1p*c*c0p*t6330*t6416*(2.0/3.0))+rho_a[index]*t6392*t6450*(ccaa1* \
                   gamma_aa[index]*gcaa*t6401*t6412*(8.0/3.0)+ccaa4*t6340*t6341*t6398*t6414*(3.2E1/3.0)+ccaa2*t6338*t6339* \
                   t6410*t6411*(1.6E1/3.0)-ccaa1*t6338*t6339*1/(t6400*t6400)*t6411*(8.0/3.0)-ccaa2*t6345*t6338*t6339* \
                   1/(t6409*t6409)*(gamma_aa[index]*gcaa*t6412*(1.6E1/3.0)+t6338*t6339*t6411*(1.6E1/3.0))-ccaa4*t6340* \
                   t6341*t6342*1/(t6397*t6397)*(gamma_aa[index]*gcaa*t6412*(3.2E1/3.0)+t6340*t6341*t6414*(3.2E1/3.0)+ \
                   t6338*t6339*t6411*3.2E1+gamma_aa[index]*gcaa*t6338*t6339*t6413*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t6338* \
                   t6339*t6413*t6406*8.0-ccaa3*gamma_aa[index]*gcaa*t6344*t6338*t6339*1/(t6405*t6405)*(gamma_aa[index]* \
                   gcaa*t6412*8.0+t6338*t6339*t6411*1.6E1+gamma_aa[index]*gcaa*t6338*t6339*t6413*8.0))+gamma_aa[index]* \
                   t6336*t6346*t6384*t6431*t6450*(1.0/8.0)-gamma_aa[index]*t6334*t6336*t6388*t6431*t6450*(1.0/8.0)-kp* \
                   rho_a[index]*t6432*t6462*1/(t6439*t6439)*(gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index]*rho_a[index]) \
                   *t6433*t6434*t6437*(1.0/2.0)+gamma_aa[index]*mu_*t6433*t6434*t6435*1/pow(t6436,5.0/3.0)*(1.0/3.0)) \
                   ;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3910 = pow(rho_b[index],5.0/3.0);
                double t3911 = 1/(tau_b[index]*tau_b[index]);
                double t3912 = 1/tau_b[index];
                double t3913 = C_k*t3910*t3912;
                double t3914 = t3913+1.0;
                double t3915 = t3913-1.0;
                double t3916 = 1/(t3914*t3914);
                double t3917 = t3915*t3915;
                double t3918 = t3917*t3917;
                double t3919 = t3918*t3918;
                double t3920 = 1/pow(t3914,1.1E1);
                double t3921 = 1/(t3914*t3914*t3914);
                double t3922 = 1/(t3914*t3914*t3914*t3914);
                double t3923 = 1/(t3914*t3914*t3914*t3914*t3914);
                double t3924 = 1/(t3914*t3914*t3914*t3914*t3914*t3914);
                double t3925 = 1/(t3914*t3914*t3914*t3914*t3914*t3914*t3914);
                double t3926 = 1/(t3914*t3914*t3914*t3914*t3914*t3914*t3914*t3914);
                double t3927 = 1/(t3914*t3914*t3914*t3914*t3914*t3914*t3914*t3914*t3914);
                double t3928 = 1/pow(t3914,1.0E1);
                double t3929 = 1/(k*k);
                double t3930 = 1/kp;
                double t3931 = 1/(rho_b[index]*rho_b[index]);
                double t3932 = rho_b[index]*2.0;
                double t3933 = 1/pow(t3932,2.0/3.0);
                double t3934 = gamma_bb[index]*mu_*t3930*t3931*t3933*t3929*(1.0/4.0);
                double t3935 = t3934+1.0;
                double t3936 = 1/t3935;
                double t3937 = kp-kp*t3936+1.0;
                double t3938 = C_k*C_k;
                double t3939 = pow(rho_b[index],7.0/3.0);
                double t3940 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t3941 = 1/t3914;
                double t3942 = 1/pow(t3914,1.2E1);
                double t3943 = pow(rho_b[index],2.0/3.0);
                double t3944 = C_k*a_1*t3910*t3911*t3941;
                double t3945 = C_k*a_2*t3910*t3911*t3915*t3916*2.0;
                double t3946 = C_k*a_10*t3910*t3911*t3915*t3919*t3928*1.0E1;
                double t3947 = C_k*a_11*t3910*t3911*t3920*t3917*t3919*1.1E1;
                double t3948 = C_k*a_3*t3910*t3911*t3921*t3917*3.0;
                double t3949 = C_k*a_4*t3910*t3911*t3922*t3915*t3917*4.0;
                double t3950 = C_k*a_5*t3910*t3911*t3923*t3918*5.0;
                double t3951 = C_k*a_6*t3910*t3911*t3915*t3924*t3918*6.0;
                double t3952 = C_k*a_7*t3910*t3911*t3925*t3917*t3918*7.0;
                double t3953 = C_k*a_8*t3910*t3911*t3915*t3917*t3926*t3918*8.0;
                double t3954 = C_k*a_9*t3910*t3911*t3927*t3919*9.0;
                double t3955 = t3950+t3951+t3952+t3944+t3953+t3945+t3954+t3946+t3947+t3948+t3949-C_k*a_1*t3910*t3911* \
                   t3915*t3916-C_k*a_2*t3910*t3911*t3921*t3917*2.0-C_k*a_4*t3910*t3911*t3923*t3918*4.0-C_k*a_8*t3910* \
                   t3911*t3927*t3919*8.0-C_k*a_10*t3910*t3911*t3920*t3917*t3919*1.0E1-C_k*a_3*t3910*t3911*t3922*t3915* \
                   t3917*3.0-C_k*a_5*t3910*t3911*t3915*t3924*t3918*5.0-C_k*a_6*t3910*t3911*t3925*t3917*t3918*6.0-C_k* \
                   a_9*t3910*t3911*t3915*t3919*t3928*9.0-C_k*a_11*t3910*t3911*t3915*t3942*t3917*t3919*1.1E1-C_k*a_7*t3910* \
                   t3911*t3915*t3917*t3926*t3918*7.0;
                double t3956 = 1/pow(rho_b[index],1.0/3.0);
                double t3957 = c*t3956;
                double t3958 = sqrt(t3957);
                double t3959 = pow(t3957,3.0/2.0);
                double t3960 = c*c;
                double t3961 = 1/pow(rho_b[index],2.0/3.0);
                double t3962 = 1/c0p;
                double t3963 = b1p*t3958;
                double t3964 = b3p*t3959;
                double t3965 = b4p*t3960*t3961;
                double t3966 = b2p*c*t3956;
                double t3967 = t3963+t3964+t3965+t3966;
                double t3968 = 1/t3967;
                double t3969 = t3962*t3968*(1.0/2.0);
                double t3970 = t3969+1.0;
                double t3971 = log(t3970);
                double t3972 = a1p*c*t3956;
                double t3973 = t3972+1.0;
                double t3974 = tau_b[index]-1.0/1.0E20;
                double t3975 = tau_b[index]*2.0;
                double t3976 = 1/rho_b[index];
                double t4008 = gamma_bb[index]*t3976*(1.0/4.0);
                double t3977 = t3975-t4008;
                double t3978 = gamma_bb[index]*gamma_bb[index];
                double t3979 = gcaa*gcaa;
                double t3980 = t3978*t3978;
                double t3981 = t3979*t3979;
                double t3982 = 1/pow(rho_b[index],3.2E1/3.0);
                double t3983 = 1/pow(rho_b[index],8.0/3.0);
                double t3984 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t3985 = 1/pow(rho_b[index],1.6E1/3.0);
                double t3986 = pow(2.0,1.0/3.0);
                double t3987 = t3986*2.0;
                double t3988 = t3987-2.0;
                double t3989 = two_13*2.0;
                double t3990 = t3989-2.0;
                double t3991 = 1/t3990;
                double t3992 = 1/c0f;
                double t3993 = b1f*t3958;
                double t3994 = b3f*t3959;
                double t3995 = b4f*t3960*t3961;
                double t3996 = b2f*c*t3956;
                double t3997 = t3993+t3994+t3995+t3996;
                double t3998 = 1/t3997;
                double t3999 = t3992*t3998*(1.0/2.0);
                double t4000 = t3999+1.0;
                double t4001 = log(t4000);
                double t4002 = a1f*c*t3956;
                double t4003 = t4002+1.0;
                double t4004 = c0p*t3971*t3973*2.0;
                double t4055 = c0f*t4001*t4003*2.0;
                double t4005 = t4004-t4055;
                double t4056 = t3991*t3988*t4005;
                double t4006 = t4004-t4056;
                double t4007 = ( (t3974 > 0.0) ?  1.0 : 0.0 ) ;
                double t4038 = t3911*t3977*(1.0/2.0);
                double t4009 = t3912-t4038;
                double t4010 = t4007*t4009;
                double t4011 = 0.0 ;
                double t4012 = t3912*t3977*(1.0/2.0);
                double t4013 = t4012-1.0;
                double t4014 = t4011*t4013;
                double t4015 = t4010+t4014;
                double t4016 = gamma_bb[index]*gcaa*t3983*4.0;
                double t4017 = gamma_bb[index]*gcaa*t3984*t3978*t3979*4.0;
                double t4018 = t3985*t3978*t3979*6.0;
                double t4019 = t3980*t3981*t3982;
                double t4020 = t4016+t4017+t4018+t4019+1.0;
                double t4021 = 1/t4020;
                double t4022 = gamma_bb[index]*gcaa*t3983;
                double t4023 = t4022+1.0;
                double t4024 = 1/t4023;
                double t4025 = gamma_bb[index]*gcaa*t3983*3.0;
                double t4026 = gamma_bb[index]*gcaa*t3984*t3978*t3979;
                double t4027 = t3985*t3978*t3979*3.0;
                double t4028 = t4025+t4026+t4027+1.0;
                double t4029 = 1/t4028;
                double t4030 = gamma_bb[index]*gcaa*t3983*2.0;
                double t4031 = t3985*t3978*t3979;
                double t4032 = t4030+t4031+1.0;
                double t4033 = 1/t4032;
                double t4034 = 1/pow(rho_b[index],1.9E1/3.0);
                double t4035 = 1/pow(rho_b[index],1.1E1/3.0);
                double t4036 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t4037 = 1/pow(rho_b[index],3.5E1/3.0);
                double t4039 = 1/pow(rho_b[index],4.0/3.0);
                double t4040 = 1/pow(rho_b[index],5.0/3.0);
                double t4041 = 1/sqrt(t3957);
                double t4042 = 1/t3970;
                double t4043 = 1/(t3967*t3967);
                double t4044 = b4p*t3960*t4040*(2.0/3.0);
                double t4045 = b2p*c*t4039*(1.0/3.0);
                double t4046 = b1p*c*t4041*t4039*(1.0/6.0);
                double t4047 = b3p*c*t3958*t4039*(1.0/2.0);
                double t4048 = t4044+t4045+t4046+t4047;
                double t4049 = t3973*t4042*t4043*t4048;
                double t4050 = ccaa4*t3980*t3981*t3982*t4021;
                double t4051 = ccaa1*gamma_bb[index]*gcaa*t3983*t4024;
                double t4052 = ccaa3*gamma_bb[index]*gcaa*t3984*t3978*t3979*t4029;
                double t4053 = ccaa2*t3985*t3978*t3979*t4033;
                double t4054 = ccaa0+t4050+t4051+t4052+t4053;
                v_rho_b_tau_b_[index] = (X-1.0)*(t3937*t3955+rho_b[index]*t3937*(C_k*a_1*t3911*t3941*t3943*(5.0/3.0) \
                   -a_1*t3940*t3916*t3938*t3939*(1.0E1/3.0)+a_2*t3940*t3916*t3938*t3939*(1.0E1/3.0)+a_1*t3921*t3940*t3915* \
                   t3938*t3939*(1.0E1/3.0)+a_10*t3940*t3919*t3928*t3938*t3939*1.5E2-a_2*t3921*t3940*t3915*t3938*t3939* \
                   (4.0E1/3.0)+a_2*t3922*t3940*t3917*t3938*t3939*1.0E1+a_3*t3921*t3940*t3915*t3938*t3939*1.0E1-a_3*t3922* \
                   t3940*t3917*t3938*t3939*3.0E1+a_4*t3922*t3940*t3917*t3938*t3939*2.0E1+a_4*t3940*t3924*t3918*t3938* \
                   t3939*(1.0E2/3.0)-a_5*t3940*t3924*t3918*t3938*t3939*(2.5E2/3.0)+a_6*t3940*t3924*t3918*t3938*t3939* \
                   5.0E1+a_8*t3940*t3919*t3928*t3938*t3939*1.2E2-a_9*t3940*t3919*t3928*t3938*t3939*2.7E2-C_k*a_1*t3911* \
                   t3915*t3916*t3943*(5.0/3.0)-C_k*a_2*t3911*t3921*t3943*t3917*(1.0E1/3.0)+C_k*a_2*t3911*t3915*t3916* \
                   t3943*(1.0E1/3.0)+C_k*a_3*t3911*t3921*t3943*t3917*5.0-C_k*a_4*t3911*t3923*t3943*t3918*(2.0E1/3.0)+ \
                   C_k*a_5*t3911*t3923*t3943*t3918*(2.5E1/3.0)-C_k*a_8*t3911*t3943*t3927*t3919*(4.0E1/3.0)+C_k*a_9*t3911* \
                   t3943*t3927*t3919*1.5E1-C_k*a_10*t3911*t3920*t3943*t3917*t3919*(5.0E1/3.0)+C_k*a_11*t3911*t3920*t3943* \
                   t3917*t3919*(5.5E1/3.0)+C_k*a_10*t3911*t3915*t3943*t3919*t3928*(5.0E1/3.0)-C_k*a_3*t3911*t3922*t3915* \
                   t3943*t3917*5.0+C_k*a_4*t3911*t3922*t3915*t3943*t3917*(2.0E1/3.0)-C_k*a_5*t3911*t3915*t3924*t3943* \
                   t3918*(2.5E1/3.0)+C_k*a_6*t3911*t3915*t3924*t3943*t3918*1.0E1-C_k*a_6*t3911*t3925*t3943*t3917*t3918* \
                   1.0E1+C_k*a_7*t3911*t3925*t3943*t3917*t3918*(3.5E1/3.0)-C_k*a_9*t3911*t3915*t3943*t3919*t3928*1.5E1- \
                   a_10*t3920*t3940*t3915*t3919*t3938*t3939*(1.0E3/3.0)+a_11*t3920*t3940*t3915*t3919*t3938*t3939*(5.5E2/ \
                   3.0)+a_10*t3940*t3942*t3917*t3919*t3938*t3939*(5.5E2/3.0)-a_11*t3940*t3942*t3917*t3919*t3938*t3939* \
                   (1.21E3/3.0)+a_3*t3940*t3923*t3915*t3917*t3938*t3939*2.0E1-a_4*t3940*t3923*t3915*t3917*t3938*t3939* \
                   (1.6E2/3.0)+a_5*t3940*t3923*t3915*t3917*t3938*t3939*(1.0E2/3.0)+a_5*t3940*t3915*t3925*t3918*t3938* \
                   t3939*5.0E1-a_6*t3940*t3915*t3925*t3918*t3938*t3939*1.2E2+a_6*t3940*t3917*t3926*t3918*t3938*t3939* \
                   7.0E1+a_7*t3940*t3915*t3925*t3918*t3938*t3939*7.0E1-a_7*t3940*t3917*t3926*t3918*t3938*t3939*(4.9E2/ \
                   3.0)+a_8*t3940*t3917*t3926*t3918*t3938*t3939*(2.8E2/3.0)+a_9*t3920*t3940*t3915*t3919*t3938*t3939*1.5E2+ \
                   a_11*t3940*1/pow(t3914,1.3E1)*t3915*t3917*t3919*t3938*t3939*2.2E2-C_k*a_11*t3911*t3915*t3942*t3943* \
                   t3917*t3919*(5.5E1/3.0)-C_k*a_7*t3911*t3915*t3943*t3917*t3926*t3918*(3.5E1/3.0)+C_k*a_8*t3911*t3915* \
                   t3943*t3917*t3926*t3918*(4.0E1/3.0)+a_7*t3940*t3915*t3917*t3918*t3927*t3938*t3939*(2.8E2/3.0)-a_8* \
                   t3940*t3915*t3917*t3918*t3927*t3938*t3939*(6.4E2/3.0)+a_9*t3940*t3915*t3917*t3918*t3927*t3938*t3939* \
                   1.2E2)-kp*rho_b[index]*1/(t3935*t3935)*t3955*(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index]) \
                   *t3930*t3933*t3929*(1.0/2.0)+gamma_bb[index]*mu_*t3930*t3931*1/pow(t3932,5.0/3.0)*t3929*(1.0/3.0)) \
                   )-t4006*t4015*t4054+rho_b[index]*t4015*t4054*(-t4049+t3991*t3988*(t4049-(1/(t3997*t3997)*t4003*(b2f* \
                   c*t4039*(1.0/3.0)+b4f*t3960*t4040*(2.0/3.0)+b1f*c*t4041*t4039*(1.0/6.0)+b3f*c*t3958*t4039*(1.0/2.0) \
                   ))/t4000-a1p*c*c0p*t3971*t4039*(2.0/3.0)+a1f*c*c0f*t4001*t4039*(2.0/3.0))+a1p*c*c0p*t3971*t4039*(2.0/ \
                   3.0))+rho_b[index]*t4006*t4015*(ccaa1*gamma_bb[index]*gcaa*t4024*t4035*(8.0/3.0)+ccaa4*t3980*t3981* \
                   t4021*t4037*(3.2E1/3.0)+ccaa2*t3978*t3979*t4033*t4034*(1.6E1/3.0)-ccaa1*t3978*t3979*1/(t4023*t4023) \
                   *t4034*(8.0/3.0)-ccaa2*t3985*t3978*t3979*1/(t4032*t4032)*(gamma_bb[index]*gcaa*t4035*(1.6E1/3.0)+t3978* \
                   t3979*t4034*(1.6E1/3.0))-ccaa4*t3980*t3981*t3982*1/(t4020*t4020)*(gamma_bb[index]*gcaa*t4035*(3.2E1/ \
                   3.0)+t3980*t3981*t4037*(3.2E1/3.0)+t3978*t3979*t4034*3.2E1+gamma_bb[index]*gcaa*t3978*t3979*t4036* \
                   3.2E1)+ccaa3*gamma_bb[index]*gcaa*t3978*t3979*t4036*t4029*8.0-ccaa3*gamma_bb[index]*gcaa*t3984*t3978* \
                   t3979*1/(t4028*t4028)*(gamma_bb[index]*gcaa*t4035*8.0+t3978*t3979*t4034*1.6E1+gamma_bb[index]*gcaa* \
                   t3978*t3979*t4036*8.0))-gamma_bb[index]*t3912*t3976*t4011*t4006*t4054*(1.0/8.0)+gamma_bb[index]*t3911* \
                   t3976*t4006*t4007*t4054*(1.0/8.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t5191 = 1/pow(rho_b[index],1.0/3.0);
                double t5192 = c*t5191;
                double t5193 = sqrt(t5192);
                double t5194 = pow(t5192,3.0/2.0);
                double t5195 = c*c;
                double t5196 = 1/pow(rho_b[index],2.0/3.0);
                double t5197 = 1/c0p;
                double t5198 = b1p*t5193;
                double t5199 = b3p*t5194;
                double t5200 = b4p*t5195*t5196;
                double t5201 = b2p*c*t5191;
                double t5202 = t5198+t5199+t5200+t5201;
                double t5203 = 1/t5202;
                double t5204 = t5197*t5203*(1.0/2.0);
                double t5205 = t5204+1.0;
                double t5206 = log(t5205);
                double t5207 = a1p*c*t5191;
                double t5208 = t5207+1.0;
                double t5209 = tau_b[index]-1.0/1.0E20;
                double t5210 = 1/tau_b[index];
                double t5211 = tau_b[index]*2.0;
                double t5212 = 1/rho_b[index];
                double t5261 = gamma_bb[index]*t5212*(1.0/4.0);
                double t5213 = t5211-t5261;
                double t5214 = gamma_bb[index]*gamma_bb[index];
                double t5215 = gcaa*gcaa;
                double t5216 = t5214*t5214;
                double t5217 = t5215*t5215;
                double t5218 = 1/pow(rho_b[index],3.2E1/3.0);
                double t5219 = 1/pow(rho_b[index],8.0/3.0);
                double t5220 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t5221 = 1/pow(rho_b[index],1.6E1/3.0);
                double t5222 = 1/(tau_b[index]*tau_b[index]);
                double t5223 = pow(rho_b[index],5.0/3.0);
                double t5224 = C_k*t5210*t5223;
                double t5225 = t5224+1.0;
                double t5226 = t5224-1.0;
                double t5227 = 1/(t5225*t5225);
                double t5228 = t5226*t5226;
                double t5229 = t5228*t5228;
                double t5230 = t5229*t5229;
                double t5231 = 1/pow(t5225,1.1E1);
                double t5232 = 1/(t5225*t5225*t5225);
                double t5233 = 1/(t5225*t5225*t5225*t5225);
                double t5234 = 1/(t5225*t5225*t5225*t5225*t5225);
                double t5235 = 1/(t5225*t5225*t5225*t5225*t5225*t5225);
                double t5236 = 1/(t5225*t5225*t5225*t5225*t5225*t5225*t5225);
                double t5237 = 1/(t5225*t5225*t5225*t5225*t5225*t5225*t5225*t5225);
                double t5238 = 1/(t5225*t5225*t5225*t5225*t5225*t5225*t5225*t5225*t5225);
                double t5239 = 1/pow(t5225,1.0E1);
                double t5240 = pow(2.0,1.0/3.0);
                double t5241 = t5240*2.0;
                double t5242 = t5241-2.0;
                double t5243 = two_13*2.0;
                double t5244 = t5243-2.0;
                double t5245 = 1/t5244;
                double t5246 = 1/c0f;
                double t5247 = b1f*t5193;
                double t5248 = b3f*t5194;
                double t5249 = b4f*t5195*t5196;
                double t5250 = b2f*c*t5191;
                double t5251 = t5250+t5247+t5248+t5249;
                double t5252 = 1/t5251;
                double t5253 = t5252*t5246*(1.0/2.0);
                double t5254 = t5253+1.0;
                double t5255 = log(t5254);
                double t5256 = a1f*c*t5191;
                double t5257 = t5256+1.0;
                double t5258 = c0f*t5255*t5257*2.0;
                double t5259 = c0p*t5206*t5208*2.0;
                double t5260 = ( (t5209 > 0.0) ?  1.0 : 0.0 ) ;
                double t5291 = t5213*t5222*(1.0/2.0);
                double t5262 = t5210-t5291;
                double t5263 = t5260*t5262;
                double t5264 = 0.0 ;
                double t5265 = t5210*t5213*(1.0/2.0);
                double t5266 = t5265-1.0;
                double t5267 = t5264*t5266;
                double t5268 = t5263+t5267;
                double t5269 = gamma_bb[index]*gcaa*t5219*4.0;
                double t5270 = gamma_bb[index]*gcaa*t5220*t5214*t5215*4.0;
                double t5271 = t5221*t5214*t5215*6.0;
                double t5272 = t5216*t5217*t5218;
                double t5273 = t5270+t5271+t5272+t5269+1.0;
                double t5274 = 1/t5273;
                double t5275 = gamma_bb[index]*gcaa*t5219;
                double t5276 = t5275+1.0;
                double t5277 = 1/t5276;
                double t5278 = gamma_bb[index]*gcaa*t5219*3.0;
                double t5279 = gamma_bb[index]*gcaa*t5220*t5214*t5215;
                double t5280 = t5221*t5214*t5215*3.0;
                double t5281 = t5280+t5278+t5279+1.0;
                double t5282 = 1/t5281;
                double t5283 = gamma_bb[index]*gcaa*t5219*2.0;
                double t5284 = t5221*t5214*t5215;
                double t5285 = t5283+t5284+1.0;
                double t5286 = 1/t5285;
                double t5287 = 1/pow(rho_b[index],1.9E1/3.0);
                double t5288 = 1/pow(rho_b[index],1.1E1/3.0);
                double t5289 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t5290 = 1/pow(rho_b[index],3.5E1/3.0);
                double t5292 = 1/pow(rho_b[index],4.0/3.0);
                double t5293 = 1/pow(rho_b[index],5.0/3.0);
                double t5294 = 1/sqrt(t5192);
                double t5295 = 1/t5205;
                double t5296 = 1/(t5202*t5202);
                double t5297 = b4p*t5195*t5293*(2.0/3.0);
                double t5298 = b2p*c*t5292*(1.0/3.0);
                double t5299 = b1p*c*t5292*t5294*(1.0/6.0);
                double t5300 = b3p*c*t5193*t5292*(1.0/2.0);
                double t5301 = t5297+t5298+t5299+t5300;
                double t5302 = t5208*t5295*t5296*t5301;
                double t5303 = ccaa4*t5216*t5217*t5218*t5274;
                double t5304 = ccaa1*gamma_bb[index]*gcaa*t5219*t5277;
                double t5305 = ccaa3*gamma_bb[index]*gcaa*t5220*t5214*t5215*t5282;
                double t5306 = ccaa2*t5221*t5214*t5215*t5286;
                double t5307 = ccaa0+t5303+t5304+t5305+t5306;
                double t5308 = X-1.0;
                double t5309 = 1/(k*k);
                double t5310 = 1/kp;
                double t5311 = 1/(rho_b[index]*rho_b[index]);
                double t5312 = rho_b[index]*2.0;
                double t5313 = 1/pow(t5312,2.0/3.0);
                double t5314 = gamma_bb[index]*mu_*t5310*t5311*t5313*t5309*(1.0/4.0);
                double t5315 = t5314+1.0;
                double t5316 = 1/t5315;
                double t5317 = kp-kp*t5316+1.0;
                double t5318 = C_k*C_k;
                double t5319 = pow(rho_b[index],7.0/3.0);
                double t5320 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t5321 = 1/t5225;
                double t5322 = 1/pow(t5225,1.2E1);
                double t5323 = pow(rho_b[index],2.0/3.0);
                double t5324 = t5258-t5259;
                double t5325 = t5242*t5245*t5324;
                double t5326 = t5259+t5325;
                double t5327 = C_k*a_1*t5222*t5223*t5321;
                double t5328 = C_k*a_2*t5222*t5223*t5226*t5227*2.0;
                double t5329 = C_k*a_10*t5230*t5222*t5223*t5226*t5239*1.0E1;
                double t5330 = C_k*a_11*t5230*t5222*t5231*t5223*t5228*1.1E1;
                double t5331 = C_k*a_3*t5222*t5223*t5232*t5228*3.0;
                double t5332 = C_k*a_4*t5222*t5223*t5233*t5226*t5228*4.0;
                double t5333 = C_k*a_5*t5222*t5223*t5234*t5229*5.0;
                double t5334 = C_k*a_6*t5222*t5223*t5226*t5235*t5229*6.0;
                double t5335 = C_k*a_7*t5222*t5223*t5236*t5228*t5229*7.0;
                double t5336 = C_k*a_8*t5222*t5223*t5226*t5228*t5237*t5229*8.0;
                double t5337 = C_k*a_9*t5230*t5222*t5223*t5238*9.0;
                double t5338 = t5330+t5331+t5332+t5333+t5334+t5335+t5327+t5336+t5328+t5337+t5329-C_k*a_1*t5222*t5223* \
                   t5226*t5227-C_k*a_2*t5222*t5223*t5232*t5228*2.0-C_k*a_4*t5222*t5223*t5234*t5229*4.0-C_k*a_8*t5230* \
                   t5222*t5223*t5238*8.0-C_k*a_10*t5230*t5222*t5231*t5223*t5228*1.0E1-C_k*a_3*t5222*t5223*t5233*t5226* \
                   t5228*3.0-C_k*a_5*t5222*t5223*t5226*t5235*t5229*5.0-C_k*a_6*t5222*t5223*t5236*t5228*t5229*6.0-C_k* \
                   a_9*t5230*t5222*t5223*t5226*t5239*9.0-C_k*a_11*t5230*t5222*t5223*t5226*t5228*t5322*1.1E1-C_k*a_7*t5222* \
                   t5223*t5226*t5228*t5237*t5229*7.0;
                v_rho_b_tau_b_[index] = t5308*t5317*t5338-t5268*t5307*(t5259+t5242*t5245*(t5258-c0p*t5206*t5208*2.0) \
                   )+rho_b[index]*t5308*t5317*(C_k*a_1*t5222*t5321*t5323*(5.0/3.0)-a_1*t5227*t5320*t5318*t5319*(1.0E1/ \
                   3.0)+a_2*t5227*t5320*t5318*t5319*(1.0E1/3.0)+a_1*t5232*t5226*t5320*t5318*t5319*(1.0E1/3.0)+a_10*t5230* \
                   t5239*t5320*t5318*t5319*1.5E2-a_2*t5232*t5226*t5320*t5318*t5319*(4.0E1/3.0)+a_2*t5233*t5228*t5320* \
                   t5318*t5319*1.0E1+a_3*t5232*t5226*t5320*t5318*t5319*1.0E1-a_3*t5233*t5228*t5320*t5318*t5319*3.0E1+ \
                   a_4*t5233*t5228*t5320*t5318*t5319*2.0E1+a_4*t5235*t5229*t5320*t5318*t5319*(1.0E2/3.0)-a_5*t5235*t5229* \
                   t5320*t5318*t5319*(2.5E2/3.0)+a_6*t5235*t5229*t5320*t5318*t5319*5.0E1+a_8*t5230*t5239*t5320*t5318* \
                   t5319*1.2E2-a_9*t5230*t5239*t5320*t5318*t5319*2.7E2-C_k*a_1*t5222*t5226*t5227*t5323*(5.0/3.0)-C_k* \
                   a_2*t5222*t5232*t5228*t5323*(1.0E1/3.0)+C_k*a_2*t5222*t5226*t5227*t5323*(1.0E1/3.0)+C_k*a_3*t5222* \
                   t5232*t5228*t5323*5.0-C_k*a_4*t5222*t5234*t5229*t5323*(2.0E1/3.0)+C_k*a_5*t5222*t5234*t5229*t5323* \
                   (2.5E1/3.0)-C_k*a_8*t5230*t5222*t5238*t5323*(4.0E1/3.0)+C_k*a_9*t5230*t5222*t5238*t5323*1.5E1-C_k* \
                   a_10*t5230*t5222*t5231*t5228*t5323*(5.0E1/3.0)+C_k*a_11*t5230*t5222*t5231*t5228*t5323*(5.5E1/3.0)+ \
                   C_k*a_10*t5230*t5222*t5226*t5239*t5323*(5.0E1/3.0)-C_k*a_3*t5222*t5233*t5226*t5228*t5323*5.0+C_k*a_4* \
                   t5222*t5233*t5226*t5228*t5323*(2.0E1/3.0)-C_k*a_5*t5222*t5226*t5235*t5229*t5323*(2.5E1/3.0)+C_k*a_6* \
                   t5222*t5226*t5235*t5229*t5323*1.0E1-C_k*a_6*t5222*t5236*t5228*t5229*t5323*1.0E1+C_k*a_7*t5222*t5236* \
                   t5228*t5229*t5323*(3.5E1/3.0)-C_k*a_9*t5230*t5222*t5226*t5239*t5323*1.5E1-a_10*t5230*t5231*t5226*t5320* \
                   t5318*t5319*(1.0E3/3.0)+a_11*t5230*t5231*t5226*t5320*t5318*t5319*(5.5E2/3.0)+a_10*t5230*t5228*t5320* \
                   t5322*t5318*t5319*(5.5E2/3.0)-a_11*t5230*t5228*t5320*t5322*t5318*t5319*(1.21E3/3.0)+a_3*t5234*t5226* \
                   t5228*t5320*t5318*t5319*2.0E1-a_4*t5234*t5226*t5228*t5320*t5318*t5319*(1.6E2/3.0)+a_5*t5234*t5226* \
                   t5228*t5320*t5318*t5319*(1.0E2/3.0)+a_5*t5226*t5236*t5229*t5320*t5318*t5319*5.0E1-a_6*t5226*t5236* \
                   t5229*t5320*t5318*t5319*1.2E2+a_6*t5228*t5237*t5229*t5320*t5318*t5319*7.0E1+a_7*t5226*t5236*t5229* \
                   t5320*t5318*t5319*7.0E1-a_7*t5228*t5237*t5229*t5320*t5318*t5319*(4.9E2/3.0)+a_8*t5228*t5237*t5229* \
                   t5320*t5318*t5319*(2.8E2/3.0)+a_9*t5230*t5231*t5226*t5320*t5318*t5319*1.5E2+a_11*t5230*1/pow(t5225,1.3E1) \
                   *t5226*t5228*t5320*t5318*t5319*2.2E2-C_k*a_11*t5230*t5222*t5226*t5228*t5322*t5323*(5.5E1/3.0)-C_k* \
                   a_7*t5222*t5226*t5228*t5237*t5229*t5323*(3.5E1/3.0)+C_k*a_8*t5222*t5226*t5228*t5237*t5229*t5323*(4.0E1/ \
                   3.0)+a_7*t5226*t5228*t5229*t5238*t5320*t5318*t5319*(2.8E2/3.0)-a_8*t5226*t5228*t5229*t5238*t5320*t5318* \
                   t5319*(6.4E2/3.0)+a_9*t5226*t5228*t5229*t5238*t5320*t5318*t5319*1.2E2)+rho_b[index]*t5268*t5307*(- \
                   t5302+t5242*t5245*(t5302-(1/(t5251*t5251)*t5257*(b2f*c*t5292*(1.0/3.0)+b4f*t5195*t5293*(2.0/3.0)+b1f* \
                   c*t5292*t5294*(1.0/6.0)+b3f*c*t5193*t5292*(1.0/2.0)))/t5254+a1f*c*c0f*t5255*t5292*(2.0/3.0)-a1p*c* \
                   c0p*t5206*t5292*(2.0/3.0))+a1p*c*c0p*t5206*t5292*(2.0/3.0))+rho_b[index]*t5268*t5326*(ccaa1*gamma_bb[index]* \
                   gcaa*t5277*t5288*(8.0/3.0)+ccaa4*t5216*t5217*t5290*t5274*(3.2E1/3.0)+ccaa2*t5214*t5215*t5286*t5287* \
                   (1.6E1/3.0)-ccaa1*t5214*t5215*1/(t5276*t5276)*t5287*(8.0/3.0)-ccaa2*t5221*t5214*t5215*1/(t5285*t5285) \
                   *(gamma_bb[index]*gcaa*t5288*(1.6E1/3.0)+t5214*t5215*t5287*(1.6E1/3.0))-ccaa4*t5216*t5217*t5218*1/ \
                   (t5273*t5273)*(gamma_bb[index]*gcaa*t5288*(3.2E1/3.0)+t5216*t5217*t5290*(3.2E1/3.0)+t5214*t5215*t5287* \
                   3.2E1+gamma_bb[index]*gcaa*t5214*t5215*t5289*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t5214*t5215*t5282*t5289* \
                   8.0-ccaa3*gamma_bb[index]*gcaa*t5220*t5214*t5215*1/(t5281*t5281)*(gamma_bb[index]*gcaa*t5288*8.0+t5214* \
                   t5215*t5287*1.6E1+gamma_bb[index]*gcaa*t5214*t5215*t5289*8.0))+gamma_bb[index]*t5212*t5222*t5260*t5307* \
                   t5326*(1.0/8.0)-gamma_bb[index]*t5210*t5212*t5264*t5307*t5326*(1.0/8.0)-kp*rho_b[index]*1/(t5315*t5315) \
                   *t5308*t5338*(gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index]*rho_b[index])*t5310*t5313*t5309*(1.0/ \
                   2.0)+gamma_bb[index]*mu_*t5310*t5311*1/pow(t5312,5.0/3.0)*t5309*(1.0/3.0));
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t4058 = 1/pow(rho_a[index],1.0/3.0);
                double t4059 = c*t4058;
                double t4060 = sqrt(t4059);
                double t4061 = pow(t4059,3.0/2.0);
                double t4062 = c*c;
                double t4063 = 1/pow(rho_a[index],2.0/3.0);
                double t4064 = 1/c0p;
                double t4065 = b1p*t4060;
                double t4066 = b3p*t4061;
                double t4067 = b4p*t4062*t4063;
                double t4068 = b2p*c*t4058;
                double t4069 = t4065+t4066+t4067+t4068;
                double t4070 = 1/t4069;
                double t4071 = t4070*t4064*(1.0/2.0);
                double t4072 = t4071+1.0;
                double t4073 = log(t4072);
                double t4074 = a1p*c*t4058;
                double t4075 = t4074+1.0;
                double t4076 = 1/tau_a[index];
                double t4077 = tau_a[index]*2.0;
                double t4078 = 1/rho_a[index];
                double t4082 = gamma_aa[index]*t4078*(1.0/4.0);
                double t4079 = -t4082+t4077;
                double t4080 = tau_a[index]-1.0/1.0E20;
                double t4081 = 1/(tau_a[index]*tau_a[index]);
                double t4083 = gamma_aa[index]*gamma_aa[index];
                double t4084 = gcaa*gcaa;
                double t4085 = t4083*t4083;
                double t4086 = t4084*t4084;
                double t4087 = 1/pow(rho_a[index],3.2E1/3.0);
                double t4088 = 1/pow(rho_a[index],8.0/3.0);
                double t4089 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t4090 = 1/pow(rho_a[index],1.6E1/3.0);
                double t4091 = C_k*C_k;
                double t4092 = pow(rho_a[index],1.0E1/3.0);
                double t4093 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t4094 = pow(rho_a[index],5.0/3.0);
                double t4095 = C_k*t4076*t4094;
                double t4096 = t4095+1.0;
                double t4097 = 1/(t4096*t4096);
                double t4098 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t4099 = t4095-1.0;
                double t4100 = t4099*t4099;
                double t4101 = t4100*t4100;
                double t4102 = t4101*t4101;
                double t4103 = 1/pow(t4096,1.1E1);
                double t4104 = 1/pow(t4096,1.2E1);
                double t4105 = 1/(t4096*t4096*t4096*t4096);
                double t4106 = 1/(t4096*t4096*t4096*t4096*t4096);
                double t4107 = 1/(t4096*t4096*t4096*t4096*t4096*t4096);
                double t4108 = 1/(t4096*t4096*t4096*t4096*t4096*t4096*t4096);
                double t4109 = 1/(t4096*t4096*t4096*t4096*t4096*t4096*t4096*t4096);
                double t4110 = 1/(t4096*t4096*t4096*t4096*t4096*t4096*t4096*t4096*t4096);
                double t4111 = 1/pow(t4096,1.0E1);
                double t4112 = 1/(t4096*t4096*t4096);
                v_tau_a_tau_a_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t4091*t4092*t4093*t4097* \
                   -2.0+a_2*t4091*t4092*t4093*t4097*2.0+(C_k*a_1*t4094*t4098*2.0)/t4096+a_1*t4091*t4092*t4093*t4099*t4112* \
                   2.0-a_2*t4091*t4092*t4093*t4099*t4112*8.0+a_10*t4091*t4092*t4093*t4102*t4111*9.0E1+a_2*t4091*t4092* \
                   t4093*t4100*t4105*6.0+a_3*t4091*t4092*t4093*t4099*t4112*6.0-a_3*t4091*t4092*t4093*t4100*t4105*1.8E1+ \
                   a_4*t4091*t4092*t4093*t4100*t4105*1.2E1+a_4*t4091*t4092*t4093*t4101*t4107*2.0E1-a_5*t4091*t4092*t4093* \
                   t4101*t4107*5.0E1+a_6*t4091*t4092*t4093*t4101*t4107*3.0E1+a_8*t4091*t4092*t4093*t4102*t4111*7.2E1- \
                   a_9*t4091*t4092*t4093*t4102*t4111*1.62E2-C_k*a_1*t4094*t4097*t4098*t4099*2.0+C_k*a_2*t4094*t4097*t4098* \
                   t4099*4.0-C_k*a_2*t4094*t4098*t4100*t4112*4.0+C_k*a_3*t4094*t4098*t4100*t4112*6.0-C_k*a_4*t4094*t4098* \
                   t4101*t4106*8.0+C_k*a_5*t4094*t4098*t4101*t4106*1.0E1-C_k*a_8*t4094*t4098*t4110*t4102*1.6E1+C_k*a_9* \
                   t4094*t4098*t4110*t4102*1.8E1+C_k*a_10*t4094*t4098*t4099*t4102*t4111*2.0E1-C_k*a_10*t4094*t4098*t4100* \
                   t4102*t4103*2.0E1+C_k*a_11*t4094*t4098*t4100*t4102*t4103*2.2E1-C_k*a_3*t4094*t4098*t4099*t4100*t4105* \
                   6.0+C_k*a_4*t4094*t4098*t4099*t4100*t4105*8.0-C_k*a_5*t4094*t4098*t4099*t4101*t4107*1.0E1+C_k*a_6* \
                   t4094*t4098*t4099*t4101*t4107*1.2E1-C_k*a_6*t4094*t4098*t4100*t4101*t4108*1.2E1+C_k*a_7*t4094*t4098* \
                   t4100*t4101*t4108*1.4E1-C_k*a_9*t4094*t4098*t4099*t4102*t4111*1.8E1-a_10*t4091*t4092*t4093*t4099*t4102* \
                   t4103*2.0E2+a_11*t4091*t4092*t4093*t4099*t4102*t4103*1.1E2+a_10*t4091*t4092*t4093*t4100*t4102*t4104* \
                   1.1E2-a_11*t4091*t4092*t4093*t4100*t4102*t4104*2.42E2+a_3*t4091*t4092*t4093*t4099*t4100*t4106*1.2E1- \
                   a_4*t4091*t4092*t4093*t4099*t4100*t4106*3.2E1+a_5*t4091*t4092*t4093*t4099*t4100*t4106*2.0E1+a_5*t4091* \
                   t4092*t4093*t4099*t4101*t4108*3.0E1-a_6*t4091*t4092*t4093*t4099*t4101*t4108*7.2E1+a_6*t4091*t4092* \
                   t4093*t4100*t4101*t4109*4.2E1+a_7*t4091*t4092*t4093*t4099*t4101*t4108*4.2E1-a_7*t4091*t4092*t4093* \
                   t4100*t4101*t4109*9.8E1+a_8*t4091*t4092*t4093*t4100*t4101*t4109*5.6E1+a_9*t4091*t4092*t4093*t4099* \
                   t4102*t4103*9.0E1+a_11*t4091*t4092*t4093*1/pow(t4096,1.3E1)*t4099*t4100*t4102*1.32E2-C_k*a_11*t4094* \
                   t4098*t4099*t4100*t4102*t4104*2.2E1-C_k*a_7*t4094*t4098*t4099*t4100*t4101*t4109*1.4E1+C_k*a_8*t4094* \
                   t4098*t4099*t4100*t4101*t4109*1.6E1+a_7*t4091*t4092*t4093*t4099*t4100*t4101*t4110*5.6E1-a_8*t4091* \
                   t4092*t4093*t4099*t4100*t4101*t4110*1.28E2+a_9*t4091*t4092*t4093*t4099*t4100*t4101*t4110*7.2E1)-rho_a[index]* \
                   (((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t4060+b3f*t4061+b2f*c*t4058+b4f*t4062*t4063) \
                   )+1.0)*(a1f*c*t4058+1.0)*2.0-c0p*t4073*t4075*2.0))/(two_13*2.0-2.0)+c0p*t4073*t4075*2.0)*( 0.0 - (  \
                   (t4080 > 0.0) ? 1.0*(t4081*2.0-t4079*t4098) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t4090*t4083*t4084)/(gamma_aa[index]* \
                   gcaa*t4088*2.0+t4090*t4083*t4084+1.0)+(ccaa1*gamma_aa[index]*gcaa*t4088)/(gamma_aa[index]*gcaa*t4088+ \
                   1.0)+(ccaa4*t4085*t4086*t4087)/(gamma_aa[index]*gcaa*t4088*4.0+t4090*t4083*t4084*6.0+t4085*t4086*t4087+ \
                   gamma_aa[index]*gcaa*t4083*t4084*t4089*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t4083*t4084*t4089)/(gamma_aa[index]* \
                   gcaa*t4088*3.0+t4090*t4083*t4084*3.0+gamma_aa[index]*gcaa*t4083*t4084*t4089+1.0));
            } else if (rho_a[index] > cutoff_) {
                double t6467 = 1/pow(rho_a[index],1.0/3.0);
                double t6468 = c*t6467;
                double t6469 = sqrt(t6468);
                double t6470 = pow(t6468,3.0/2.0);
                double t6471 = c*c;
                double t6472 = 1/pow(rho_a[index],2.0/3.0);
                double t6473 = 1/c0p;
                double t6474 = b1p*t6469;
                double t6475 = b3p*t6470;
                double t6476 = b4p*t6471*t6472;
                double t6477 = b2p*c*t6467;
                double t6478 = t6474+t6475+t6476+t6477;
                double t6479 = 1/t6478;
                double t6480 = t6473*t6479*(1.0/2.0);
                double t6481 = t6480+1.0;
                double t6482 = log(t6481);
                double t6483 = a1p*c*t6467;
                double t6484 = t6483+1.0;
                double t6485 = 1/tau_a[index];
                double t6486 = tau_a[index]*2.0;
                double t6487 = 1/rho_a[index];
                double t6491 = gamma_aa[index]*t6487*(1.0/4.0);
                double t6488 = -t6491+t6486;
                double t6489 = tau_a[index]-1.0/1.0E20;
                double t6490 = 1/(tau_a[index]*tau_a[index]);
                double t6492 = gamma_aa[index]*gamma_aa[index];
                double t6493 = gcaa*gcaa;
                double t6494 = t6492*t6492;
                double t6495 = t6493*t6493;
                double t6496 = 1/pow(rho_a[index],3.2E1/3.0);
                double t6497 = 1/pow(rho_a[index],8.0/3.0);
                double t6498 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t6499 = 1/pow(rho_a[index],1.6E1/3.0);
                double t6500 = C_k*C_k;
                double t6501 = pow(rho_a[index],1.0E1/3.0);
                double t6502 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t6503 = pow(rho_a[index],5.0/3.0);
                double t6504 = C_k*t6485*t6503;
                double t6505 = t6504+1.0;
                double t6506 = 1/(t6505*t6505);
                double t6507 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t6508 = t6504-1.0;
                double t6509 = t6508*t6508;
                double t6510 = t6509*t6509;
                double t6511 = t6510*t6510;
                double t6512 = 1/pow(t6505,1.1E1);
                double t6513 = 1/pow(t6505,1.2E1);
                double t6514 = 1/(t6505*t6505*t6505*t6505);
                double t6515 = 1/(t6505*t6505*t6505*t6505*t6505);
                double t6516 = 1/(t6505*t6505*t6505*t6505*t6505*t6505);
                double t6517 = 1/(t6505*t6505*t6505*t6505*t6505*t6505*t6505);
                double t6518 = 1/(t6505*t6505*t6505*t6505*t6505*t6505*t6505*t6505);
                double t6519 = 1/(t6505*t6505*t6505*t6505*t6505*t6505*t6505*t6505*t6505);
                double t6520 = 1/pow(t6505,1.0E1);
                double t6521 = 1/(t6505*t6505*t6505);
                v_tau_a_tau_a_[index] = -rho_a[index]*(X-1.0)*(kp-kp/((gamma_aa[index]*1/(k*k)*mu_*1/(rho_a[index]* \
                   rho_a[index])*1/pow(rho_a[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t6500*t6501*t6502*t6506* \
                   -2.0+a_2*t6500*t6501*t6502*t6506*2.0+(C_k*a_1*t6503*t6507*2.0)/t6505+a_1*t6500*t6501*t6502*t6521*t6508* \
                   2.0+a_10*t6500*t6501*t6502*t6511*t6520*9.0E1-a_2*t6500*t6501*t6502*t6521*t6508*8.0+a_2*t6500*t6501* \
                   t6502*t6514*t6509*6.0+a_3*t6500*t6501*t6502*t6521*t6508*6.0-a_3*t6500*t6501*t6502*t6514*t6509*1.8E1+ \
                   a_4*t6500*t6501*t6510*t6502*t6516*2.0E1+a_4*t6500*t6501*t6502*t6514*t6509*1.2E1-a_5*t6500*t6501*t6510* \
                   t6502*t6516*5.0E1+a_6*t6500*t6501*t6510*t6502*t6516*3.0E1+a_8*t6500*t6501*t6502*t6511*t6520*7.2E1- \
                   a_9*t6500*t6501*t6502*t6511*t6520*1.62E2-C_k*a_1*t6503*t6506*t6507*t6508*2.0-C_k*a_2*t6503*t6521*t6507* \
                   t6509*4.0+C_k*a_2*t6503*t6506*t6507*t6508*4.0+C_k*a_3*t6503*t6521*t6507*t6509*6.0-C_k*a_4*t6510*t6503* \
                   t6515*t6507*8.0+C_k*a_5*t6510*t6503*t6515*t6507*1.0E1-C_k*a_8*t6511*t6503*t6507*t6519*1.6E1+C_k*a_9* \
                   t6511*t6503*t6507*t6519*1.8E1+C_k*a_10*t6511*t6520*t6503*t6507*t6508*2.0E1-C_k*a_10*t6511*t6503*t6512* \
                   t6507*t6509*2.0E1+C_k*a_11*t6511*t6503*t6512*t6507*t6509*2.2E1-C_k*a_3*t6503*t6514*t6507*t6508*t6509* \
                   6.0+C_k*a_4*t6503*t6514*t6507*t6508*t6509*8.0-C_k*a_5*t6510*t6503*t6507*t6516*t6508*1.0E1+C_k*a_6* \
                   t6510*t6503*t6507*t6516*t6508*1.2E1-C_k*a_6*t6510*t6503*t6507*t6517*t6509*1.2E1+C_k*a_7*t6510*t6503* \
                   t6507*t6517*t6509*1.4E1-C_k*a_9*t6511*t6520*t6503*t6507*t6508*1.8E1-a_10*t6500*t6501*t6502*t6511*t6512* \
                   t6508*2.0E2+a_11*t6500*t6501*t6502*t6511*t6512*t6508*1.1E2+a_10*t6500*t6501*t6502*t6511*t6513*t6509* \
                   1.1E2-a_11*t6500*t6501*t6502*t6511*t6513*t6509*2.42E2+a_3*t6500*t6501*t6502*t6515*t6508*t6509*1.2E1- \
                   a_4*t6500*t6501*t6502*t6515*t6508*t6509*3.2E1+a_5*t6500*t6501*t6510*t6502*t6508*t6517*3.0E1+a_5*t6500* \
                   t6501*t6502*t6515*t6508*t6509*2.0E1-a_6*t6500*t6501*t6510*t6502*t6508*t6517*7.2E1+a_6*t6500*t6501* \
                   t6510*t6502*t6509*t6518*4.2E1+a_7*t6500*t6501*t6510*t6502*t6508*t6517*4.2E1-a_7*t6500*t6501*t6510* \
                   t6502*t6509*t6518*9.8E1+a_8*t6500*t6501*t6510*t6502*t6509*t6518*5.6E1+a_9*t6500*t6501*t6502*t6511* \
                   t6512*t6508*9.0E1+a_11*t6500*t6501*t6502*t6511*1/pow(t6505,1.3E1)*t6508*t6509*1.32E2-C_k*a_11*t6511* \
                   t6503*t6513*t6507*t6508*t6509*2.2E1-C_k*a_7*t6510*t6503*t6507*t6508*t6509*t6518*1.4E1+C_k*a_8*t6510* \
                   t6503*t6507*t6508*t6509*t6518*1.6E1+a_7*t6500*t6501*t6510*t6502*t6508*t6509*t6519*5.6E1-a_8*t6500* \
                   t6501*t6510*t6502*t6508*t6509*t6519*1.28E2+a_9*t6500*t6501*t6510*t6502*t6508*t6509*t6519*7.2E1)-rho_a[index]* \
                   (((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t6469+b3f*t6470+b2f*c*t6467+b4f*t6471*t6472) \
                   )+1.0)*(a1f*c*t6467+1.0)*2.0-c0p*t6482*t6484*2.0))/(two_13*2.0-2.0)+c0p*t6482*t6484*2.0)*( 0.0 - (  \
                   (t6489 > 0.0) ? 1.0*(t6490*2.0-t6488*t6507) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t6492*t6493*t6499)/(gamma_aa[index]* \
                   gcaa*t6497*2.0+t6492*t6493*t6499+1.0)+(ccaa1*gamma_aa[index]*gcaa*t6497)/(gamma_aa[index]*gcaa*t6497+ \
                   1.0)+(ccaa4*t6494*t6495*t6496)/(gamma_aa[index]*gcaa*t6497*4.0+t6492*t6493*t6499*6.0+t6494*t6495*t6496+ \
                   gamma_aa[index]*gcaa*t6492*t6493*t6498*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t6492*t6493*t6498)/(gamma_aa[index]* \
                   gcaa*t6497*3.0+t6492*t6493*t6499*3.0+gamma_aa[index]*gcaa*t6492*t6493*t6498+1.0));
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t4115 = 1/pow(rho_b[index],1.0/3.0);
                double t4116 = c*t4115;
                double t4117 = sqrt(t4116);
                double t4118 = pow(t4116,3.0/2.0);
                double t4119 = c*c;
                double t4120 = 1/pow(rho_b[index],2.0/3.0);
                double t4121 = 1/c0p;
                double t4122 = b1p*t4117;
                double t4123 = b3p*t4118;
                double t4124 = b4p*t4120*t4119;
                double t4125 = b2p*c*t4115;
                double t4126 = t4122+t4123+t4124+t4125;
                double t4127 = 1/t4126;
                double t4128 = t4121*t4127*(1.0/2.0);
                double t4129 = t4128+1.0;
                double t4130 = log(t4129);
                double t4131 = a1p*c*t4115;
                double t4132 = t4131+1.0;
                double t4133 = 1/tau_b[index];
                double t4134 = tau_b[index]*2.0;
                double t4135 = 1/rho_b[index];
                double t4139 = gamma_bb[index]*t4135*(1.0/4.0);
                double t4136 = t4134-t4139;
                double t4137 = tau_b[index]-1.0/1.0E20;
                double t4138 = 1/(tau_b[index]*tau_b[index]);
                double t4140 = gamma_bb[index]*gamma_bb[index];
                double t4141 = gcaa*gcaa;
                double t4142 = t4140*t4140;
                double t4143 = t4141*t4141;
                double t4144 = 1/pow(rho_b[index],3.2E1/3.0);
                double t4145 = 1/pow(rho_b[index],8.0/3.0);
                double t4146 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t4147 = 1/pow(rho_b[index],1.6E1/3.0);
                double t4148 = C_k*C_k;
                double t4149 = pow(rho_b[index],1.0E1/3.0);
                double t4150 = 1/(tau_b[index]*tau_b[index]*tau_b[index]*tau_b[index]);
                double t4151 = pow(rho_b[index],5.0/3.0);
                double t4152 = C_k*t4133*t4151;
                double t4153 = t4152+1.0;
                double t4154 = 1/(t4153*t4153);
                double t4155 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t4156 = t4152-1.0;
                double t4157 = t4156*t4156;
                double t4158 = t4157*t4157;
                double t4159 = t4158*t4158;
                double t4160 = 1/pow(t4153,1.1E1);
                double t4161 = 1/pow(t4153,1.2E1);
                double t4162 = 1/(t4153*t4153*t4153*t4153);
                double t4163 = 1/(t4153*t4153*t4153*t4153*t4153);
                double t4164 = 1/(t4153*t4153*t4153*t4153*t4153*t4153);
                double t4165 = 1/(t4153*t4153*t4153*t4153*t4153*t4153*t4153);
                double t4166 = 1/(t4153*t4153*t4153*t4153*t4153*t4153*t4153*t4153);
                double t4167 = 1/(t4153*t4153*t4153*t4153*t4153*t4153*t4153*t4153*t4153);
                double t4168 = 1/pow(t4153,1.0E1);
                double t4169 = 1/(t4153*t4153*t4153);
                v_tau_b_tau_b_[index] = -rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]* \
                   rho_b[index])*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t4150*t4154*t4148*t4149* \
                   -2.0+a_2*t4150*t4154*t4148*t4149*2.0+(C_k*a_1*t4151*t4155*2.0)/t4153+a_1*t4150*t4156*t4148*t4149*t4169* \
                   2.0+a_10*t4150*t4148*t4149*t4159*t4168*9.0E1+a_2*t4150*t4162*t4148*t4157*t4149*6.0-a_2*t4150*t4156* \
                   t4148*t4149*t4169*8.0-a_3*t4150*t4162*t4148*t4157*t4149*1.8E1+a_3*t4150*t4156*t4148*t4149*t4169*6.0+ \
                   a_4*t4150*t4162*t4148*t4157*t4149*1.2E1+a_4*t4150*t4164*t4148*t4149*t4158*2.0E1-a_5*t4150*t4164*t4148* \
                   t4149*t4158*5.0E1+a_6*t4150*t4164*t4148*t4149*t4158*3.0E1+a_8*t4150*t4148*t4149*t4159*t4168*7.2E1- \
                   a_9*t4150*t4148*t4149*t4159*t4168*1.62E2-C_k*a_1*t4151*t4154*t4155*t4156*2.0+C_k*a_2*t4151*t4154*t4155* \
                   t4156*4.0-C_k*a_2*t4151*t4155*t4157*t4169*4.0+C_k*a_3*t4151*t4155*t4157*t4169*6.0-C_k*a_4*t4151*t4163* \
                   t4155*t4158*8.0+C_k*a_5*t4151*t4163*t4155*t4158*1.0E1-C_k*a_8*t4151*t4155*t4167*t4159*1.6E1+C_k*a_9* \
                   t4151*t4155*t4167*t4159*1.8E1-C_k*a_10*t4151*t4160*t4155*t4157*t4159*2.0E1+C_k*a_11*t4151*t4160*t4155* \
                   t4157*t4159*2.2E1+C_k*a_10*t4151*t4155*t4156*t4159*t4168*2.0E1-C_k*a_3*t4151*t4162*t4155*t4156*t4157* \
                   6.0+C_k*a_4*t4151*t4162*t4155*t4156*t4157*8.0-C_k*a_5*t4151*t4155*t4164*t4156*t4158*1.0E1+C_k*a_6* \
                   t4151*t4155*t4164*t4156*t4158*1.2E1-C_k*a_6*t4151*t4155*t4165*t4157*t4158*1.2E1+C_k*a_7*t4151*t4155* \
                   t4165*t4157*t4158*1.4E1-C_k*a_9*t4151*t4155*t4156*t4159*t4168*1.8E1-a_10*t4150*t4160*t4156*t4148*t4149* \
                   t4159*2.0E2+a_11*t4150*t4160*t4156*t4148*t4149*t4159*1.1E2+a_10*t4150*t4161*t4148*t4157*t4149*t4159* \
                   1.1E2-a_11*t4150*t4161*t4148*t4157*t4149*t4159*2.42E2+a_3*t4150*t4163*t4156*t4148*t4157*t4149*1.2E1- \
                   a_4*t4150*t4163*t4156*t4148*t4157*t4149*3.2E1+a_5*t4150*t4163*t4156*t4148*t4157*t4149*2.0E1+a_5*t4150* \
                   t4156*t4165*t4148*t4149*t4158*3.0E1-a_6*t4150*t4156*t4165*t4148*t4149*t4158*7.2E1+a_6*t4150*t4148* \
                   t4157*t4166*t4149*t4158*4.2E1+a_7*t4150*t4156*t4165*t4148*t4149*t4158*4.2E1-a_7*t4150*t4148*t4157* \
                   t4166*t4149*t4158*9.8E1+a_8*t4150*t4148*t4157*t4166*t4149*t4158*5.6E1+a_9*t4150*t4160*t4156*t4148* \
                   t4149*t4159*9.0E1+a_11*t4150*1/pow(t4153,1.3E1)*t4156*t4148*t4157*t4149*t4159*1.32E2-C_k*a_11*t4151* \
                   t4161*t4155*t4156*t4157*t4159*2.2E1-C_k*a_7*t4151*t4155*t4156*t4157*t4166*t4158*1.4E1+C_k*a_8*t4151* \
                   t4155*t4156*t4157*t4166*t4158*1.6E1+a_7*t4150*t4156*t4148*t4157*t4149*t4158*t4167*5.6E1-a_8*t4150* \
                   t4156*t4148*t4157*t4149*t4158*t4167*1.28E2+a_9*t4150*t4156*t4148*t4157*t4149*t4158*t4167*7.2E1)-rho_b[index]* \
                   (((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t4117+b3f*t4118+b2f*c*t4115+b4f*t4120*t4119) \
                   )+1.0)*(a1f*c*t4115+1.0)*2.0-c0p*t4130*t4132*2.0))/(two_13*2.0-2.0)+c0p*t4130*t4132*2.0)*( 0.0 - (  \
                   (t4137 > 0.0) ? 1.0*(t4138*2.0-t4136*t4155) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t4140*t4141*t4147)/(gamma_bb[index]* \
                   gcaa*t4145*2.0+t4140*t4141*t4147+1.0)+(ccaa1*gamma_bb[index]*gcaa*t4145)/(gamma_bb[index]*gcaa*t4145+ \
                   1.0)+(ccaa4*t4142*t4143*t4144)/(gamma_bb[index]*gcaa*t4145*4.0+t4140*t4141*t4147*6.0+t4142*t4143*t4144+ \
                   gamma_bb[index]*gcaa*t4140*t4141*t4146*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t4140*t4141*t4146)/(gamma_bb[index]* \
                   gcaa*t4145*3.0+t4140*t4141*t4147*3.0+gamma_bb[index]*gcaa*t4140*t4141*t4146+1.0));
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t5342 = 1/pow(rho_b[index],1.0/3.0);
                double t5343 = c*t5342;
                double t5344 = sqrt(t5343);
                double t5345 = pow(t5343,3.0/2.0);
                double t5346 = c*c;
                double t5347 = 1/pow(rho_b[index],2.0/3.0);
                double t5348 = 1/c0p;
                double t5349 = b1p*t5344;
                double t5350 = b3p*t5345;
                double t5351 = b4p*t5346*t5347;
                double t5352 = b2p*c*t5342;
                double t5353 = t5350+t5351+t5352+t5349;
                double t5354 = 1/t5353;
                double t5355 = t5354*t5348*(1.0/2.0);
                double t5356 = t5355+1.0;
                double t5357 = log(t5356);
                double t5358 = a1p*c*t5342;
                double t5359 = t5358+1.0;
                double t5360 = 1/tau_b[index];
                double t5361 = tau_b[index]*2.0;
                double t5362 = 1/rho_b[index];
                double t5366 = gamma_bb[index]*t5362*(1.0/4.0);
                double t5363 = t5361-t5366;
                double t5364 = tau_b[index]-1.0/1.0E20;
                double t5365 = 1/(tau_b[index]*tau_b[index]);
                double t5367 = gamma_bb[index]*gamma_bb[index];
                double t5368 = gcaa*gcaa;
                double t5369 = t5367*t5367;
                double t5370 = t5368*t5368;
                double t5371 = 1/pow(rho_b[index],3.2E1/3.0);
                double t5372 = 1/pow(rho_b[index],8.0/3.0);
                double t5373 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t5374 = 1/pow(rho_b[index],1.6E1/3.0);
                double t5375 = C_k*C_k;
                double t5376 = pow(rho_b[index],1.0E1/3.0);
                double t5377 = 1/(tau_b[index]*tau_b[index]*tau_b[index]*tau_b[index]);
                double t5378 = pow(rho_b[index],5.0/3.0);
                double t5379 = C_k*t5360*t5378;
                double t5380 = t5379+1.0;
                double t5381 = 1/(t5380*t5380);
                double t5382 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t5383 = t5379-1.0;
                double t5384 = t5383*t5383;
                double t5385 = t5384*t5384;
                double t5386 = t5385*t5385;
                double t5387 = 1/pow(t5380,1.1E1);
                double t5388 = 1/pow(t5380,1.2E1);
                double t5389 = 1/(t5380*t5380*t5380*t5380);
                double t5390 = 1/(t5380*t5380*t5380*t5380*t5380);
                double t5391 = 1/(t5380*t5380*t5380*t5380*t5380*t5380);
                double t5392 = 1/(t5380*t5380*t5380*t5380*t5380*t5380*t5380);
                double t5393 = 1/(t5380*t5380*t5380*t5380*t5380*t5380*t5380*t5380);
                double t5394 = 1/(t5380*t5380*t5380*t5380*t5380*t5380*t5380*t5380*t5380);
                double t5395 = 1/pow(t5380,1.0E1);
                double t5396 = 1/(t5380*t5380*t5380);
                v_tau_b_tau_b_[index] = -rho_b[index]*(X-1.0)*(kp-kp/((gamma_bb[index]*1/(k*k)*mu_*1/(rho_b[index]* \
                   rho_b[index])*1/pow(rho_b[index]*2.0,2.0/3.0)*(1.0/4.0))/kp+1.0)+1.0)*(a_1*t5381*t5375*t5376*t5377* \
                   -2.0+a_2*t5381*t5375*t5376*t5377*2.0+(C_k*a_1*t5382*t5378*2.0)/t5380+a_1*t5383*t5375*t5376*t5377*t5396* \
                   2.0+a_10*t5375*t5376*t5377*t5386*t5395*9.0E1-a_2*t5383*t5375*t5376*t5377*t5396*8.0+a_2*t5375*t5384* \
                   t5376*t5377*t5389*6.0+a_3*t5383*t5375*t5376*t5377*t5396*6.0-a_3*t5375*t5384*t5376*t5377*t5389*1.8E1+ \
                   a_4*t5391*t5375*t5376*t5385*t5377*2.0E1+a_4*t5375*t5384*t5376*t5377*t5389*1.2E1-a_5*t5391*t5375*t5376* \
                   t5385*t5377*5.0E1+a_6*t5391*t5375*t5376*t5385*t5377*3.0E1+a_8*t5375*t5376*t5377*t5386*t5395*7.2E1- \
                   a_9*t5375*t5376*t5377*t5386*t5395*1.62E2-C_k*a_1*t5381*t5382*t5383*t5378*2.0+C_k*a_2*t5381*t5382*t5383* \
                   t5378*4.0-C_k*a_2*t5382*t5384*t5378*t5396*4.0+C_k*a_3*t5382*t5384*t5378*t5396*6.0-C_k*a_4*t5390*t5382* \
                   t5385*t5378*8.0+C_k*a_5*t5390*t5382*t5385*t5378*1.0E1-C_k*a_8*t5382*t5394*t5386*t5378*1.6E1+C_k*a_9* \
                   t5382*t5394*t5386*t5378*1.8E1+C_k*a_10*t5382*t5383*t5386*t5395*t5378*2.0E1-C_k*a_10*t5382*t5384*t5386* \
                   t5378*t5387*2.0E1+C_k*a_11*t5382*t5384*t5386*t5378*t5387*2.2E1-C_k*a_3*t5382*t5383*t5384*t5378*t5389* \
                   6.0+C_k*a_4*t5382*t5383*t5384*t5378*t5389*8.0-C_k*a_5*t5382*t5391*t5383*t5385*t5378*1.0E1+C_k*a_6* \
                   t5382*t5391*t5383*t5385*t5378*1.2E1-C_k*a_6*t5382*t5392*t5384*t5385*t5378*1.2E1+C_k*a_7*t5382*t5392* \
                   t5384*t5385*t5378*1.4E1-C_k*a_9*t5382*t5383*t5386*t5395*t5378*1.8E1-a_10*t5383*t5375*t5376*t5377*t5386* \
                   t5387*2.0E2+a_11*t5383*t5375*t5376*t5377*t5386*t5387*1.1E2+a_10*t5375*t5384*t5376*t5377*t5386*t5388* \
                   1.1E2-a_11*t5375*t5384*t5376*t5377*t5386*t5388*2.42E2+a_3*t5390*t5383*t5375*t5384*t5376*t5377*1.2E1- \
                   a_4*t5390*t5383*t5375*t5384*t5376*t5377*3.2E1+a_5*t5390*t5383*t5375*t5384*t5376*t5377*2.0E1+a_5*t5383* \
                   t5392*t5375*t5376*t5385*t5377*3.0E1-a_6*t5383*t5392*t5375*t5376*t5385*t5377*7.2E1+a_6*t5375*t5384* \
                   t5393*t5376*t5385*t5377*4.2E1+a_7*t5383*t5392*t5375*t5376*t5385*t5377*4.2E1-a_7*t5375*t5384*t5393* \
                   t5376*t5385*t5377*9.8E1+a_8*t5375*t5384*t5393*t5376*t5385*t5377*5.6E1+a_9*t5383*t5375*t5376*t5377* \
                   t5386*t5387*9.0E1+a_11*1/pow(t5380,1.3E1)*t5383*t5375*t5384*t5376*t5377*t5386*1.32E2-C_k*a_11*t5382* \
                   t5383*t5384*t5386*t5378*t5388*2.2E1-C_k*a_7*t5382*t5383*t5384*t5393*t5385*t5378*1.4E1+C_k*a_8*t5382* \
                   t5383*t5384*t5393*t5385*t5378*1.6E1+a_7*t5383*t5375*t5384*t5376*t5385*t5394*t5377*5.6E1-a_8*t5383* \
                   t5375*t5384*t5376*t5385*t5394*t5377*1.28E2+a_9*t5383*t5375*t5384*t5376*t5385*t5394*t5377*7.2E1)-rho_b[index]* \
                   (((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t5344+b3f*t5345+b2f*c*t5342+b4f*t5346*t5347) \
                   )+1.0)*(a1f*c*t5342+1.0)*2.0-c0p*t5357*t5359*2.0))/(two_13*2.0-2.0)+c0p*t5357*t5359*2.0)*( 0.0 - (  \
                   (t5364 > 0.0) ? 1.0*(t5365*2.0-t5363*t5382) : 0.0 ) + 0.0 )*(ccaa0+(ccaa2*t5374*t5367*t5368)/(gamma_bb[index]* \
                   gcaa*t5372*2.0+t5374*t5367*t5368+1.0)+(ccaa1*gamma_bb[index]*gcaa*t5372)/(gamma_bb[index]*gcaa*t5372+ \
                   1.0)+(ccaa4*t5370*t5371*t5369)/(gamma_bb[index]*gcaa*t5372*4.0+t5370*t5371*t5369+t5374*t5367*t5368* \
                   6.0+gamma_bb[index]*gcaa*t5373*t5367*t5368*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t5373*t5367*t5368) \
                   /(gamma_bb[index]*gcaa*t5372*3.0+t5374*t5367*t5368*3.0+gamma_bb[index]*gcaa*t5373*t5367*t5368+1.0) \
                   );
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t4171 = 1/pow(rho_a[index],1.0/3.0);
                    double t4172 = c*t4171;
                    double t4173 = sqrt(t4172);
                    double t4174 = pow(t4172,3.0/2.0);
                    double t4175 = c*c;
                    double t4176 = 1/pow(rho_a[index],2.0/3.0);
                    double t4177 = 1/c0p;
                    double t4178 = b1p*t4173;
                    double t4179 = b3p*t4174;
                    double t4180 = b4p*t4175*t4176;
                    double t4181 = b2p*c*t4171;
                    double t4182 = t4180+t4181+t4178+t4179;
                    double t4183 = 1/t4182;
                    double t4184 = t4183*t4177*(1.0/2.0);
                    double t4185 = t4184+1.0;
                    double t4186 = log(t4185);
                    double t4187 = a1p*c*t4171;
                    double t4188 = t4187+1.0;
                    double t4189 = gamma_aa[index]*gamma_aa[index];
                    double t4190 = gcaa*gcaa;
                    double t4191 = t4189*t4189;
                    double t4192 = t4190*t4190;
                    double t4193 = 1/pow(rho_a[index],3.2E1/3.0);
                    double t4194 = 1/pow(rho_a[index],8.0/3.0);
                    double t4195 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]);
                    double t4196 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t4197 = tau_a[index]-1.0/1.0E20;
                    double t4198 = pow(2.0,1.0/3.0);
                    double t4199 = t4198*2.0;
                    double t4200 = t4199-2.0;
                    double t4201 = two_13*2.0;
                    double t4202 = t4201-2.0;
                    double t4203 = 1/t4202;
                    double t4204 = 1/c0f;
                    double t4205 = b1f*t4173;
                    double t4206 = b3f*t4174;
                    double t4207 = b4f*t4175*t4176;
                    double t4208 = b2f*c*t4171;
                    double t4209 = t4205+t4206+t4207+t4208;
                    double t4210 = 1/t4209;
                    double t4211 = t4210*t4204*(1.0/2.0);
                    double t4212 = t4211+1.0;
                    double t4213 = log(t4212);
                    double t4214 = a1f*c*t4171;
                    double t4215 = t4214+1.0;
                    double t4216 = c0f*t4213*t4215*2.0;
                    double t4217 = c0p*t4186*t4188*2.0;
                    double t4218 = gamma_aa[index]*gcaa*t4194*4.0;
                    double t4219 = gamma_aa[index]*gcaa*t4190*t4195*t4189*4.0;
                    double t4220 = t4190*t4196*t4189*6.0;
                    double t4221 = t4191*t4192*t4193;
                    double t4222 = t4220+t4221+t4218+t4219+1.0;
                    double t4223 = 1/t4222;
                    double t4224 = ccaa4*t4191*t4192*t4193*t4223;
                    double t4225 = gamma_aa[index]*gcaa*t4194;
                    double t4226 = t4225+1.0;
                    double t4227 = 1/t4226;
                    double t4228 = ccaa1*gamma_aa[index]*gcaa*t4194*t4227;
                    double t4229 = gamma_aa[index]*gcaa*t4194*3.0;
                    double t4230 = gamma_aa[index]*gcaa*t4190*t4195*t4189;
                    double t4231 = t4190*t4196*t4189*3.0;
                    double t4232 = t4230+t4231+t4229+1.0;
                    double t4233 = 1/t4232;
                    double t4234 = ccaa3*gamma_aa[index]*gcaa*t4190*t4195*t4189*t4233;
                    double t4235 = gamma_aa[index]*gcaa*t4194*2.0;
                    double t4236 = t4190*t4196*t4189;
                    double t4237 = t4235+t4236+1.0;
                    double t4238 = 1/t4237;
                    double t4239 = ccaa2*t4190*t4196*t4189*t4238;
                    double t4240 = ccaa0+t4224+t4234+t4228+t4239;
                    double t4241 = t4216-t4217;
                    double t4242 = t4200*t4203*t4241;
                    double t4243 = t4242+t4217;
                    double t4244 = ( (t4197 > 0.0) ?  1.0 : 0.0 ) ;
                    double t4245 = 1/tau_a[index];
                    double t4246 = 1/(tau_a[index]*tau_a[index]);
                    double t4247 = 0.0 ;
                    double t4248 = tau_a[index]*2.0;
                    double t4249 = 1/rho_a[index];
                    double t4250 = t4248-gamma_aa[index]*t4249*(1.0/4.0);
                    double t4251 = 1/(k*k);
                    double t4252 = rho_a[index]*2.0;
                    double t4253 = 1/pow(t4252,2.0/3.0);
                    double t4254 = pow(rho_a[index],5.0/3.0);
                    double t4255 = C_k*t4245*t4254;
                    double t4256 = t4255+1.0;
                    double t4257 = t4255-1.0;
                    double t4258 = 1/(t4256*t4256);
                    double t4259 = t4257*t4257;
                    double t4260 = t4259*t4259;
                    double t4261 = t4260*t4260;
                    double t4262 = 1/pow(t4256,1.1E1);
                    double t4263 = 1/(t4256*t4256*t4256);
                    double t4264 = 1/(t4256*t4256*t4256*t4256);
                    double t4265 = 1/(t4256*t4256*t4256*t4256*t4256);
                    double t4266 = 1/(t4256*t4256*t4256*t4256*t4256*t4256);
                    double t4267 = 1/(t4256*t4256*t4256*t4256*t4256*t4256*t4256);
                    double t4268 = 1/(t4256*t4256*t4256*t4256*t4256*t4256*t4256*t4256);
                    double t4269 = 1/(t4256*t4256*t4256*t4256*t4256*t4256*t4256*t4256*t4256);
                    double t4270 = 1/pow(t4256,1.0E1);
                    v_gamma_aa_tau_a_[index] = t4240*t4243*t4244*t4246*(-1.0/8.0)+t4240*t4245*t4247*(t4217+t4200*t4203* \
                       (t4216-c0p*t4186*t4188*2.0))*(1.0/8.0)-rho_a[index]*t4243*(t4247*(t4250*t4245*(1.0/2.0)-1.0)+t4244* \
                       (t4245-t4250*t4246*(1.0/2.0)))*(ccaa1*gcaa*t4194*t4227+ccaa2*gamma_aa[index]*t4190*t4196*t4238*2.0- \
                       ccaa1*gamma_aa[index]*t4190*t4196*1/(t4226*t4226)-ccaa2*t4190*t4196*t4189*1/(t4237*t4237)*(gcaa*t4194* \
                       2.0+gamma_aa[index]*t4190*t4196*2.0)-ccaa4*t4191*t4192*t4193*1/(t4222*t4222)*(gcaa*t4194*4.0+gamma_aa[index]* \
                       t4190*t4196*1.2E1+gamma_aa[index]*t4192*t4193*t4189*4.0+gcaa*t4190*t4195*t4189*1.2E1)+ccaa4*gamma_aa[index]* \
                       t4192*t4193*t4189*t4223*4.0+ccaa3*gcaa*t4190*t4195*t4189*t4233*3.0-ccaa3*gamma_aa[index]*gcaa*t4190* \
                       t4195*t4189*1/(t4232*t4232)*(gcaa*t4194*3.0+gamma_aa[index]*t4190*t4196*6.0+gcaa*t4190*t4195*t4189* \
                       3.0))+mu_*t4251*t4253*t4249*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t4251*t4253*(1.0/ \
                       4.0))/kp+1.0,2.0)*(X-1.0)*((C_k*a_1*t4254*t4246)/t4256-C_k*a_1*t4254*t4246*t4257*t4258-C_k*a_2*t4254* \
                       t4263*t4246*t4259*2.0+C_k*a_2*t4254*t4246*t4257*t4258*2.0+C_k*a_3*t4254*t4263*t4246*t4259*3.0-C_k* \
                       a_4*t4260*t4254*t4246*t4265*4.0+C_k*a_5*t4260*t4254*t4246*t4265*5.0-C_k*a_8*t4261*t4254*t4246*t4269* \
                       8.0+C_k*a_9*t4261*t4254*t4246*t4269*9.0+C_k*a_10*t4261*t4270*t4254*t4246*t4257*1.0E1-C_k*a_10*t4261* \
                       t4262*t4254*t4246*t4259*1.0E1+C_k*a_11*t4261*t4262*t4254*t4246*t4259*1.1E1-C_k*a_3*t4254*t4246*t4264* \
                       t4257*t4259*3.0+C_k*a_4*t4254*t4246*t4264*t4257*t4259*4.0-C_k*a_5*t4260*t4254*t4246*t4257*t4266*5.0+ \
                       C_k*a_6*t4260*t4254*t4246*t4257*t4266*6.0-C_k*a_6*t4260*t4254*t4246*t4267*t4259*6.0+C_k*a_7*t4260* \
                       t4254*t4246*t4267*t4259*7.0-C_k*a_9*t4261*t4270*t4254*t4246*t4257*9.0-C_k*a_11*t4261*t4254*t4246*1/ \
                       pow(t4256,1.2E1)*t4257*t4259*1.1E1-C_k*a_7*t4260*t4254*t4246*t4257*t4259*t4268*7.0+C_k*a_8*t4260*t4254* \
                       t4246*t4257*t4259*t4268*8.0)*(1.0/4.0);
                } else if (rho_a[index] > cutoff_) {
                    double t6525 = 1/pow(rho_a[index],1.0/3.0);
                    double t6526 = c*t6525;
                    double t6527 = sqrt(t6526);
                    double t6528 = pow(t6526,3.0/2.0);
                    double t6529 = c*c;
                    double t6530 = 1/pow(rho_a[index],2.0/3.0);
                    double t6531 = 1/c0p;
                    double t6532 = b1p*t6527;
                    double t6533 = b3p*t6528;
                    double t6534 = b4p*t6530*t6529;
                    double t6535 = b2p*c*t6525;
                    double t6536 = t6532+t6533+t6534+t6535;
                    double t6537 = 1/t6536;
                    double t6538 = t6531*t6537*(1.0/2.0);
                    double t6539 = t6538+1.0;
                    double t6540 = log(t6539);
                    double t6541 = a1p*c*t6525;
                    double t6542 = t6541+1.0;
                    double t6543 = gamma_aa[index]*gamma_aa[index];
                    double t6544 = gcaa*gcaa;
                    double t6545 = t6543*t6543;
                    double t6546 = t6544*t6544;
                    double t6547 = 1/pow(rho_a[index],3.2E1/3.0);
                    double t6548 = 1/pow(rho_a[index],8.0/3.0);
                    double t6549 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]);
                    double t6550 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t6551 = tau_a[index]-1.0/1.0E20;
                    double t6552 = pow(2.0,1.0/3.0);
                    double t6553 = t6552*2.0;
                    double t6554 = t6553-2.0;
                    double t6555 = two_13*2.0;
                    double t6556 = t6555-2.0;
                    double t6557 = 1/t6556;
                    double t6558 = 1/c0f;
                    double t6559 = b1f*t6527;
                    double t6560 = b3f*t6528;
                    double t6561 = b4f*t6530*t6529;
                    double t6562 = b2f*c*t6525;
                    double t6563 = t6560+t6561+t6562+t6559;
                    double t6564 = 1/t6563;
                    double t6565 = t6564*t6558*(1.0/2.0);
                    double t6566 = t6565+1.0;
                    double t6567 = log(t6566);
                    double t6568 = a1f*c*t6525;
                    double t6569 = t6568+1.0;
                    double t6570 = c0f*t6567*t6569*2.0;
                    double t6571 = c0p*t6540*t6542*2.0;
                    double t6572 = gamma_aa[index]*gcaa*t6548*4.0;
                    double t6573 = gamma_aa[index]*gcaa*t6543*t6544*t6549*4.0;
                    double t6574 = t6550*t6543*t6544*6.0;
                    double t6575 = t6545*t6546*t6547;
                    double t6576 = t6572+t6573+t6574+t6575+1.0;
                    double t6577 = 1/t6576;
                    double t6578 = ccaa4*t6545*t6546*t6547*t6577;
                    double t6579 = gamma_aa[index]*gcaa*t6548;
                    double t6580 = t6579+1.0;
                    double t6581 = 1/t6580;
                    double t6582 = ccaa1*gamma_aa[index]*gcaa*t6581*t6548;
                    double t6583 = gamma_aa[index]*gcaa*t6548*3.0;
                    double t6584 = gamma_aa[index]*gcaa*t6543*t6544*t6549;
                    double t6585 = t6550*t6543*t6544*3.0;
                    double t6586 = t6583+t6584+t6585+1.0;
                    double t6587 = 1/t6586;
                    double t6588 = ccaa3*gamma_aa[index]*gcaa*t6543*t6544*t6549*t6587;
                    double t6589 = gamma_aa[index]*gcaa*t6548*2.0;
                    double t6590 = t6550*t6543*t6544;
                    double t6591 = t6590+t6589+1.0;
                    double t6592 = 1/t6591;
                    double t6593 = ccaa2*t6550*t6543*t6544*t6592;
                    double t6594 = ccaa0+t6582+t6593+t6578+t6588;
                    double t6595 = t6570-t6571;
                    double t6596 = t6554*t6557*t6595;
                    double t6597 = t6571+t6596;
                    double t6598 = ( (t6551 > 0.0) ?  1.0 : 0.0 ) ;
                    double t6599 = 1/tau_a[index];
                    double t6600 = 1/(tau_a[index]*tau_a[index]);
                    double t6601 = 0.0 ;
                    double t6602 = tau_a[index]*2.0;
                    double t6603 = 1/rho_a[index];
                    double t6604 = t6602-gamma_aa[index]*t6603*(1.0/4.0);
                    double t6605 = 1/(k*k);
                    double t6606 = rho_a[index]*2.0;
                    double t6607 = 1/pow(t6606,2.0/3.0);
                    double t6608 = pow(rho_a[index],5.0/3.0);
                    double t6609 = C_k*t6599*t6608;
                    double t6610 = t6609+1.0;
                    double t6611 = t6609-1.0;
                    double t6612 = 1/(t6610*t6610);
                    double t6613 = t6611*t6611;
                    double t6614 = t6613*t6613;
                    double t6615 = t6614*t6614;
                    double t6616 = 1/pow(t6610,1.1E1);
                    double t6617 = 1/(t6610*t6610*t6610);
                    double t6618 = 1/(t6610*t6610*t6610*t6610);
                    double t6619 = 1/(t6610*t6610*t6610*t6610*t6610);
                    double t6620 = 1/(t6610*t6610*t6610*t6610*t6610*t6610);
                    double t6621 = 1/(t6610*t6610*t6610*t6610*t6610*t6610*t6610);
                    double t6622 = 1/(t6610*t6610*t6610*t6610*t6610*t6610*t6610*t6610);
                    double t6623 = 1/(t6610*t6610*t6610*t6610*t6610*t6610*t6610*t6610*t6610);
                    double t6624 = 1/pow(t6610,1.0E1);
                    v_gamma_aa_tau_a_[index] = t6594*t6597*t6598*t6600*(-1.0/8.0)+t6594*t6599*t6601*(t6571+t6554*t6557* \
                       (t6570-c0p*t6540*t6542*2.0))*(1.0/8.0)-rho_a[index]*t6597*(t6601*(t6599*t6604*(1.0/2.0)-1.0)+t6598* \
                       (t6599-t6600*t6604*(1.0/2.0)))*(ccaa1*gcaa*t6581*t6548+ccaa2*gamma_aa[index]*t6550*t6544*t6592*2.0- \
                       ccaa1*gamma_aa[index]*t6550*t6544*1/(t6580*t6580)-ccaa2*t6550*t6543*t6544*1/(t6591*t6591)*(gcaa*t6548* \
                       2.0+gamma_aa[index]*t6550*t6544*2.0)-ccaa4*t6545*t6546*t6547*1/(t6576*t6576)*(gcaa*t6548*4.0+gamma_aa[index]* \
                       t6550*t6544*1.2E1+gamma_aa[index]*t6543*t6546*t6547*4.0+gcaa*t6543*t6544*t6549*1.2E1)+ccaa4*gamma_aa[index]* \
                       t6543*t6546*t6547*t6577*4.0+ccaa3*gcaa*t6543*t6544*t6549*t6587*3.0-ccaa3*gamma_aa[index]*gcaa*t6543* \
                       t6544*t6549*1/(t6586*t6586)*(gcaa*t6548*3.0+gamma_aa[index]*t6550*t6544*6.0+gcaa*t6543*t6544*t6549* \
                       3.0))+mu_*t6603*t6605*t6607*1/pow((gamma_aa[index]*mu_*1/(rho_a[index]*rho_a[index])*t6605*t6607*(1.0/ \
                       4.0))/kp+1.0,2.0)*(X-1.0)*((C_k*a_1*t6600*t6608)/t6610-C_k*a_1*t6600*t6611*t6612*t6608+C_k*a_2*t6600* \
                       t6611*t6612*t6608*2.0-C_k*a_2*t6600*t6613*t6608*t6617*2.0+C_k*a_3*t6600*t6613*t6608*t6617*3.0-C_k* \
                       a_4*t6600*t6614*t6608*t6619*4.0+C_k*a_5*t6600*t6614*t6608*t6619*5.0-C_k*a_8*t6600*t6623*t6615*t6608* \
                       8.0+C_k*a_9*t6600*t6623*t6615*t6608*9.0+C_k*a_10*t6600*t6611*t6615*t6624*t6608*1.0E1-C_k*a_10*t6600* \
                       t6613*t6615*t6616*t6608*1.0E1+C_k*a_11*t6600*t6613*t6615*t6616*t6608*1.1E1-C_k*a_3*t6600*t6611*t6613* \
                       t6608*t6618*3.0+C_k*a_4*t6600*t6611*t6613*t6608*t6618*4.0-C_k*a_5*t6600*t6611*t6620*t6614*t6608*5.0+ \
                       C_k*a_6*t6600*t6611*t6620*t6614*t6608*6.0-C_k*a_6*t6600*t6621*t6613*t6614*t6608*6.0+C_k*a_7*t6600* \
                       t6621*t6613*t6614*t6608*7.0-C_k*a_9*t6600*t6611*t6615*t6624*t6608*9.0-C_k*a_11*t6600*1/pow(t6610,1.2E1) \
                       *t6611*t6613*t6615*t6608*1.1E1-C_k*a_7*t6600*t6611*t6613*t6622*t6614*t6608*7.0+C_k*a_8*t6600*t6611* \
                       t6613*t6622*t6614*t6608*8.0)*(1.0/4.0);
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t4276 = 1/pow(rho_b[index],1.0/3.0);
                    double t4277 = c*t4276;
                    double t4278 = sqrt(t4277);
                    double t4279 = pow(t4277,3.0/2.0);
                    double t4280 = c*c;
                    double t4281 = 1/pow(rho_b[index],2.0/3.0);
                    double t4282 = 1/c0p;
                    double t4283 = b1p*t4278;
                    double t4284 = b3p*t4279;
                    double t4285 = b4p*t4280*t4281;
                    double t4286 = b2p*c*t4276;
                    double t4287 = t4283+t4284+t4285+t4286;
                    double t4288 = 1/t4287;
                    double t4289 = t4282*t4288*(1.0/2.0);
                    double t4290 = t4289+1.0;
                    double t4291 = log(t4290);
                    double t4292 = a1p*c*t4276;
                    double t4293 = t4292+1.0;
                    double t4294 = gamma_bb[index]*gamma_bb[index];
                    double t4295 = gcaa*gcaa;
                    double t4296 = t4294*t4294;
                    double t4297 = t4295*t4295;
                    double t4298 = 1/pow(rho_b[index],3.2E1/3.0);
                    double t4299 = 1/pow(rho_b[index],8.0/3.0);
                    double t4300 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]);
                    double t4301 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t4302 = tau_b[index]-1.0/1.0E20;
                    double t4303 = pow(2.0,1.0/3.0);
                    double t4304 = t4303*2.0;
                    double t4305 = t4304-2.0;
                    double t4306 = two_13*2.0;
                    double t4307 = t4306-2.0;
                    double t4308 = 1/t4307;
                    double t4309 = 1/c0f;
                    double t4310 = b1f*t4278;
                    double t4311 = b3f*t4279;
                    double t4312 = b4f*t4280*t4281;
                    double t4313 = b2f*c*t4276;
                    double t4314 = t4310+t4311+t4312+t4313;
                    double t4315 = 1/t4314;
                    double t4316 = t4315*t4309*(1.0/2.0);
                    double t4317 = t4316+1.0;
                    double t4318 = log(t4317);
                    double t4319 = a1f*c*t4276;
                    double t4320 = t4319+1.0;
                    double t4321 = c0f*t4320*t4318*2.0;
                    double t4322 = c0p*t4291*t4293*2.0;
                    double t4323 = gamma_bb[index]*gcaa*t4299*4.0;
                    double t4324 = gamma_bb[index]*gcaa*t4294*t4295*t4300*4.0;
                    double t4325 = t4294*t4295*t4301*6.0;
                    double t4326 = t4296*t4297*t4298;
                    double t4327 = t4323+t4324+t4325+t4326+1.0;
                    double t4328 = 1/t4327;
                    double t4329 = ccaa4*t4296*t4297*t4298*t4328;
                    double t4330 = gamma_bb[index]*gcaa*t4299;
                    double t4331 = t4330+1.0;
                    double t4332 = 1/t4331;
                    double t4333 = ccaa1*gamma_bb[index]*gcaa*t4299*t4332;
                    double t4334 = gamma_bb[index]*gcaa*t4299*3.0;
                    double t4335 = gamma_bb[index]*gcaa*t4294*t4295*t4300;
                    double t4336 = t4294*t4295*t4301*3.0;
                    double t4337 = t4334+t4335+t4336+1.0;
                    double t4338 = 1/t4337;
                    double t4339 = ccaa3*gamma_bb[index]*gcaa*t4294*t4295*t4300*t4338;
                    double t4340 = gamma_bb[index]*gcaa*t4299*2.0;
                    double t4341 = t4294*t4295*t4301;
                    double t4342 = t4340+t4341+1.0;
                    double t4343 = 1/t4342;
                    double t4344 = ccaa2*t4294*t4295*t4301*t4343;
                    double t4345 = ccaa0+t4333+t4344+t4329+t4339;
                    double t4346 = t4321-t4322;
                    double t4347 = t4305*t4308*t4346;
                    double t4348 = t4322+t4347;
                    double t4349 = ( (t4302 > 0.0) ?  1.0 : 0.0 ) ;
                    double t4350 = 1/tau_b[index];
                    double t4351 = 1/(tau_b[index]*tau_b[index]);
                    double t4352 = 0.0 ;
                    double t4353 = tau_b[index]*2.0;
                    double t4354 = 1/rho_b[index];
                    double t4355 = t4353-gamma_bb[index]*t4354*(1.0/4.0);
                    double t4356 = 1/(k*k);
                    double t4357 = rho_b[index]*2.0;
                    double t4358 = 1/pow(t4357,2.0/3.0);
                    double t4359 = pow(rho_b[index],5.0/3.0);
                    double t4360 = C_k*t4350*t4359;
                    double t4361 = t4360+1.0;
                    double t4362 = t4360-1.0;
                    double t4363 = 1/(t4361*t4361);
                    double t4364 = t4362*t4362;
                    double t4365 = t4364*t4364;
                    double t4366 = t4365*t4365;
                    double t4367 = 1/pow(t4361,1.1E1);
                    double t4368 = 1/(t4361*t4361*t4361);
                    double t4369 = 1/(t4361*t4361*t4361*t4361);
                    double t4370 = 1/(t4361*t4361*t4361*t4361*t4361);
                    double t4371 = 1/(t4361*t4361*t4361*t4361*t4361*t4361);
                    double t4372 = 1/(t4361*t4361*t4361*t4361*t4361*t4361*t4361);
                    double t4373 = 1/(t4361*t4361*t4361*t4361*t4361*t4361*t4361*t4361);
                    double t4374 = 1/(t4361*t4361*t4361*t4361*t4361*t4361*t4361*t4361*t4361);
                    double t4375 = 1/pow(t4361,1.0E1);
                    v_gamma_bb_tau_b_[index] = t4351*t4345*t4348*t4349*(-1.0/8.0)+t4350*t4352*t4345*(t4322+t4305*t4308* \
                       (t4321-c0p*t4291*t4293*2.0))*(1.0/8.0)-rho_b[index]*t4348*(t4352*(t4350*t4355*(1.0/2.0)-1.0)+t4349* \
                       (t4350-t4351*t4355*(1.0/2.0)))*(ccaa1*gcaa*t4299*t4332+ccaa2*gamma_bb[index]*t4295*t4301*t4343*2.0- \
                       ccaa1*gamma_bb[index]*t4295*t4301*1/(t4331*t4331)-ccaa2*t4294*t4295*t4301*1/(t4342*t4342)*(gcaa*t4299* \
                       2.0+gamma_bb[index]*t4295*t4301*2.0)-ccaa4*t4296*t4297*t4298*1/(t4327*t4327)*(gcaa*t4299*4.0+gamma_bb[index]* \
                       t4295*t4301*1.2E1+gamma_bb[index]*t4294*t4297*t4298*4.0+gcaa*t4294*t4295*t4300*1.2E1)+ccaa4*gamma_bb[index]* \
                       t4294*t4297*t4298*t4328*4.0+ccaa3*gcaa*t4294*t4295*t4300*t4338*3.0-ccaa3*gamma_bb[index]*gcaa*t4294* \
                       t4295*t4300*1/(t4337*t4337)*(gcaa*t4299*3.0+gamma_bb[index]*t4295*t4301*6.0+gcaa*t4294*t4295*t4300* \
                       3.0))+mu_*t4354*t4356*t4358*1/pow((gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index])*t4356*t4358*(1.0/ \
                       4.0))/kp+1.0,2.0)*(X-1.0)*((C_k*a_1*t4351*t4359)/t4361-C_k*a_1*t4351*t4362*t4363*t4359+C_k*a_2*t4351* \
                       t4362*t4363*t4359*2.0-C_k*a_2*t4351*t4364*t4359*t4368*2.0+C_k*a_3*t4351*t4364*t4359*t4368*3.0-C_k* \
                       a_4*t4351*t4370*t4365*t4359*4.0+C_k*a_5*t4351*t4370*t4365*t4359*5.0-C_k*a_8*t4351*t4374*t4366*t4359* \
                       8.0+C_k*a_9*t4351*t4374*t4366*t4359*9.0+C_k*a_10*t4351*t4362*t4366*t4375*t4359*1.0E1-C_k*a_10*t4351* \
                       t4364*t4366*t4367*t4359*1.0E1+C_k*a_11*t4351*t4364*t4366*t4367*t4359*1.1E1-C_k*a_3*t4351*t4362*t4364* \
                       t4359*t4369*3.0+C_k*a_4*t4351*t4362*t4364*t4359*t4369*4.0-C_k*a_5*t4351*t4362*t4371*t4365*t4359*5.0+ \
                       C_k*a_6*t4351*t4362*t4371*t4365*t4359*6.0-C_k*a_6*t4351*t4372*t4364*t4365*t4359*6.0+C_k*a_7*t4351* \
                       t4372*t4364*t4365*t4359*7.0-C_k*a_9*t4351*t4362*t4366*t4375*t4359*9.0-C_k*a_11*t4351*1/pow(t4361,1.2E1) \
                       *t4362*t4364*t4366*t4359*1.1E1-C_k*a_7*t4351*t4362*t4364*t4373*t4365*t4359*7.0+C_k*a_8*t4351*t4362* \
                       t4364*t4373*t4365*t4359*8.0)*(1.0/4.0);
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    double t5403 = 1/pow(rho_b[index],1.0/3.0);
                    double t5404 = c*t5403;
                    double t5405 = sqrt(t5404);
                    double t5406 = pow(t5404,3.0/2.0);
                    double t5407 = c*c;
                    double t5408 = 1/pow(rho_b[index],2.0/3.0);
                    double t5409 = 1/c0p;
                    double t5410 = b1p*t5405;
                    double t5411 = b3p*t5406;
                    double t5412 = b4p*t5407*t5408;
                    double t5413 = b2p*c*t5403;
                    double t5414 = t5410+t5411+t5412+t5413;
                    double t5415 = 1/t5414;
                    double t5416 = t5415*t5409*(1.0/2.0);
                    double t5417 = t5416+1.0;
                    double t5418 = log(t5417);
                    double t5419 = a1p*c*t5403;
                    double t5420 = t5419+1.0;
                    double t5421 = gamma_bb[index]*gamma_bb[index];
                    double t5422 = gcaa*gcaa;
                    double t5423 = t5421*t5421;
                    double t5424 = t5422*t5422;
                    double t5425 = 1/pow(rho_b[index],3.2E1/3.0);
                    double t5426 = 1/pow(rho_b[index],8.0/3.0);
                    double t5427 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]);
                    double t5428 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t5429 = tau_b[index]-1.0/1.0E20;
                    double t5430 = pow(2.0,1.0/3.0);
                    double t5431 = t5430*2.0;
                    double t5432 = t5431-2.0;
                    double t5433 = two_13*2.0;
                    double t5434 = t5433-2.0;
                    double t5435 = 1/t5434;
                    double t5436 = 1/c0f;
                    double t5437 = b1f*t5405;
                    double t5438 = b3f*t5406;
                    double t5439 = b4f*t5407*t5408;
                    double t5440 = b2f*c*t5403;
                    double t5441 = t5440+t5437+t5438+t5439;
                    double t5442 = 1/t5441;
                    double t5443 = t5442*t5436*(1.0/2.0);
                    double t5444 = t5443+1.0;
                    double t5445 = log(t5444);
                    double t5446 = a1f*c*t5403;
                    double t5447 = t5446+1.0;
                    double t5448 = c0f*t5445*t5447*2.0;
                    double t5449 = c0p*t5420*t5418*2.0;
                    double t5450 = gamma_bb[index]*gcaa*t5426*4.0;
                    double t5451 = gamma_bb[index]*gcaa*t5421*t5422*t5427*4.0;
                    double t5452 = t5421*t5422*t5428*6.0;
                    double t5453 = t5423*t5424*t5425;
                    double t5454 = t5450+t5451+t5452+t5453+1.0;
                    double t5455 = 1/t5454;
                    double t5456 = ccaa4*t5423*t5424*t5425*t5455;
                    double t5457 = gamma_bb[index]*gcaa*t5426;
                    double t5458 = t5457+1.0;
                    double t5459 = 1/t5458;
                    double t5460 = ccaa1*gamma_bb[index]*gcaa*t5426*t5459;
                    double t5461 = gamma_bb[index]*gcaa*t5426*3.0;
                    double t5462 = gamma_bb[index]*gcaa*t5421*t5422*t5427;
                    double t5463 = t5421*t5422*t5428*3.0;
                    double t5464 = t5461+t5462+t5463+1.0;
                    double t5465 = 1/t5464;
                    double t5466 = ccaa3*gamma_bb[index]*gcaa*t5421*t5422*t5427*t5465;
                    double t5467 = gamma_bb[index]*gcaa*t5426*2.0;
                    double t5468 = t5421*t5422*t5428;
                    double t5469 = t5467+t5468+1.0;
                    double t5470 = 1/t5469;
                    double t5471 = ccaa2*t5421*t5422*t5470*t5428;
                    double t5472 = ccaa0+t5460+t5471+t5456+t5466;
                    double t5473 = t5448-t5449;
                    double t5474 = t5432*t5435*t5473;
                    double t5475 = t5474+t5449;
                    double t5476 = ( (t5429 > 0.0) ?  1.0 : 0.0 ) ;
                    double t5477 = 1/tau_b[index];
                    double t5478 = 1/(tau_b[index]*tau_b[index]);
                    double t5479 = 0.0 ;
                    double t5480 = tau_b[index]*2.0;
                    double t5481 = 1/rho_b[index];
                    double t5482 = t5480-gamma_bb[index]*t5481*(1.0/4.0);
                    double t5483 = 1/(k*k);
                    double t5484 = rho_b[index]*2.0;
                    double t5485 = 1/pow(t5484,2.0/3.0);
                    double t5486 = pow(rho_b[index],5.0/3.0);
                    double t5487 = C_k*t5477*t5486;
                    double t5488 = t5487+1.0;
                    double t5489 = t5487-1.0;
                    double t5490 = 1/(t5488*t5488);
                    double t5491 = t5489*t5489;
                    double t5492 = t5491*t5491;
                    double t5493 = t5492*t5492;
                    double t5494 = 1/pow(t5488,1.1E1);
                    double t5495 = 1/(t5488*t5488*t5488);
                    double t5496 = 1/(t5488*t5488*t5488*t5488);
                    double t5497 = 1/(t5488*t5488*t5488*t5488*t5488);
                    double t5498 = 1/(t5488*t5488*t5488*t5488*t5488*t5488);
                    double t5499 = 1/(t5488*t5488*t5488*t5488*t5488*t5488*t5488);
                    double t5500 = 1/(t5488*t5488*t5488*t5488*t5488*t5488*t5488*t5488);
                    double t5501 = 1/(t5488*t5488*t5488*t5488*t5488*t5488*t5488*t5488*t5488);
                    double t5502 = 1/pow(t5488,1.0E1);
                    v_gamma_bb_tau_b_[index] = t5472*t5475*t5476*t5478*(-1.0/8.0)+t5472*t5477*t5479*(t5449+t5432*t5435* \
                       (t5448-c0p*t5420*t5418*2.0))*(1.0/8.0)-rho_b[index]*t5475*(t5479*(t5482*t5477*(1.0/2.0)-1.0)+t5476* \
                       (t5477-t5482*t5478*(1.0/2.0)))*(ccaa1*gcaa*t5426*t5459+ccaa2*gamma_bb[index]*t5422*t5470*t5428*2.0- \
                       ccaa1*gamma_bb[index]*t5422*t5428*1/(t5458*t5458)-ccaa2*t5421*t5422*t5428*1/(t5469*t5469)*(gcaa*t5426* \
                       2.0+gamma_bb[index]*t5422*t5428*2.0)-ccaa4*t5423*t5424*t5425*1/(t5454*t5454)*(gcaa*t5426*4.0+gamma_bb[index]* \
                       t5422*t5428*1.2E1+gamma_bb[index]*t5421*t5424*t5425*4.0+gcaa*t5421*t5422*t5427*1.2E1)+ccaa4*gamma_bb[index]* \
                       t5421*t5424*t5425*t5455*4.0+ccaa3*gcaa*t5421*t5422*t5427*t5465*3.0-ccaa3*gamma_bb[index]*gcaa*t5421* \
                       t5422*t5427*1/(t5464*t5464)*(gcaa*t5426*3.0+gamma_bb[index]*t5422*t5428*6.0+gcaa*t5421*t5422*t5427* \
                       3.0))+mu_*t5481*t5483*t5485*1/pow((gamma_bb[index]*mu_*1/(rho_b[index]*rho_b[index])*t5483*t5485*(1.0/ \
                       4.0))/kp+1.0,2.0)*(X-1.0)*((C_k*a_1*t5486*t5478)/t5488-C_k*a_1*t5490*t5486*t5478*t5489-C_k*a_2*t5491* \
                       t5486*t5495*t5478*2.0+C_k*a_2*t5490*t5486*t5478*t5489*2.0+C_k*a_3*t5491*t5486*t5495*t5478*3.0-C_k* \
                       a_4*t5492*t5486*t5478*t5497*4.0+C_k*a_5*t5492*t5486*t5478*t5497*5.0-C_k*a_8*t5493*t5486*t5478*t5501* \
                       8.0+C_k*a_9*t5493*t5486*t5478*t5501*9.0-C_k*a_10*t5491*t5493*t5494*t5486*t5478*1.0E1+C_k*a_11*t5491* \
                       t5493*t5494*t5486*t5478*1.1E1+C_k*a_10*t5493*t5486*t5478*t5489*t5502*1.0E1-C_k*a_3*t5491*t5486*t5478* \
                       t5496*t5489*3.0+C_k*a_4*t5491*t5486*t5478*t5496*t5489*4.0-C_k*a_5*t5492*t5486*t5478*t5489*t5498*5.0- \
                       C_k*a_6*t5491*t5492*t5486*t5478*t5499*6.0+C_k*a_6*t5492*t5486*t5478*t5489*t5498*6.0+C_k*a_7*t5491* \
                       t5492*t5486*t5478*t5499*7.0-C_k*a_9*t5493*t5486*t5478*t5489*t5502*9.0-C_k*a_11*t5491*t5493*t5486*t5478* \
                       1/pow(t5488,1.2E1)*t5489*1.1E1-C_k*a_7*t5491*t5492*t5486*t5478*t5489*t5500*7.0+C_k*a_8*t5491*t5492* \
                       t5486*t5478*t5489*t5500*8.0)*(1.0/4.0);
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

