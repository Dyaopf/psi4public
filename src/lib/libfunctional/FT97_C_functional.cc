/**********************************************************
* FT97_C_functional.cc: definitions for FT97_C_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "FT97_C_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

FT97_C_Functional::FT97_C_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "FT97_C";
    description_ = "FT97 Correlation (Involves Ei functions)";
    citation_ = "M. Filatov and W. Theil, Int. J. Quant. Chem., 62, 603-616, 1997";
    
    double c0 = 3.1090690869654901E-02;
    params_.push_back(make_pair("c0",c0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double tspi_m13 = 2.0678349696646670E-01;
    params_.push_back(make_pair("tspi_m13",tspi_m13));
    double a1 = 1.6221187669999999E+00;
    params_.push_back(make_pair("a1",a1));
    double a2 = 4.8995807600000002E-01;
    params_.push_back(make_pair("a2",a2));
    double a3 = 1.3790219410000000E+00;
    params_.push_back(make_pair("a3",a3));
    double a4 = 4.9462813529999998E+00;
    params_.push_back(make_pair("a4",a4));
    double a5 = 3.6006120589999999E+00;
    params_.push_back(make_pair("a5",a5));
    double kaa0 = 1.2008017740000001E+00;
    params_.push_back(make_pair("kaa0",kaa0));
    double kaa1 = -8.1290434499999997E-01;
    params_.push_back(make_pair("kaa1",kaa1));
    double kaa2 = 8.5961444499999995E-01;
    params_.push_back(make_pair("kaa2",kaa2));
    double raa1 = 6.5563882299999998E-01;
    params_.push_back(make_pair("raa1",raa1));
    double raa2 = 1.0893388479999999E+00;
    params_.push_back(make_pair("raa2",raa2));
    double kab0 = 1.2915510740000000E+00;
    params_.push_back(make_pair("kab0",kab0));
    double kab1 = -3.4906417299999998E-01;
    params_.push_back(make_pair("kab1",kab1));
    double rab1 = 8.3275879999999997E-02;
    params_.push_back(make_pair("rab1",rab1));
    double k1 = 9.3901599999999996E-01;
    params_.push_back(make_pair("k1",k1));
    double k2 = 1.7331700000000001E+00;
    params_.push_back(make_pair("k2",k2));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
FT97_C_Functional::~FT97_C_Functional()
{
}
void FT97_C_Functional::computeRKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double c0 = params_[0].second;
    double c = params_[1].second;
    double tspi_m13 = params_[2].second;
    double a1 = params_[3].second;
    double a2 = params_[4].second;
    double a3 = params_[5].second;
    double a4 = params_[6].second;
    double a5 = params_[7].second;
    double kaa0 = params_[8].second;
    double kaa1 = params_[9].second;
    double kaa2 = params_[10].second;
    double raa1 = params_[11].second;
    double raa2 = params_[12].second;
    double kab0 = params_[13].second;
    double kab1 = params_[14].second;
    double rab1 = params_[15].second;
    double k1 = params_[16].second;
    double k2 = params_[17].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t24435 = tspi_m13*tspi_m13;
            double t24436 = 1/pow(rho_a[index],1.0/3.0);
            double t24437 = a2*a2;
            double t24438 = gamma_aa[index]*gamma_aa[index];
            double t24439 = 1/pow(rho_a[index],1.6E1/3.0);
            double t24440 = t24435*t24435;
            double t24441 = c*t24436;
            double t24442 = pow(t24441,4.0/5.0);
            double t24456 = rab1*t24442;
            double t24443 = exp(-t24456);
            double t24444 = t24443-1.0;
            double t24457 = kab1*t24444;
            double t24445 = kab0-t24457;
            double t24446 = 1/c;
            double t24447 = 1/pow(rho_a[index],7.0/3.0);
            double t24448 = a3*gamma_aa[index]*t24435*t24446*t24447;
            double t24449 = t24448+1.0;
            double t24450 = t24440*t24437*t24438*t24439;
            double t24451 = 1/pow(rho_a[index],8.0/3.0);
            double t24452 = a1*gamma_aa[index]*t24451*t24435;
            double t24453 = t24450+t24452+1.0;
            double t24454 = t24440*t24437*t24438*t24439*2.0;
            double t24455 = exp(t24454);
            double t24458 = 1/(t24445*t24445);
            double t24459 = 1/(t24453*t24453);
            double t24460 = c*c0*t24436*t24455*t24449*t24458*t24459*(2.0/3.0);
            double t24461 = exp(t24460);
            double t24462 = Ei(-t24460);
            double t24463 = sqrt(t24460);
            double t24464 = 1/sqrt(t24449);
            double t24465 = a4*a4;
            double t24466 = sqrt(t24441);
            double t24467 = t24440*t24438*t24465*t24439*2.0;
            double t24468 = exp(t24467);
            double t24469 = t24440*t24438*t24465*t24439;
            double t24470 = t24469+1.0;
            double t24471 = 1/(t24470*t24470);
            double t24472 = a5*gamma_aa[index]*t24435*t24446*t24447;
            double t24473 = t24472+1.0;
            double t24484 = raa2*t24466;
            double t24474 = exp(-t24484);
            double t24475 = t24474-1.0;
            double t24476 = kaa2*t24475;
            double t24477 = pow(t24441,2.0/5.0);
            double t24485 = raa1*t24477;
            double t24478 = exp(-t24485);
            double t24479 = t24478-1.0;
            double t24480 = kaa1*t24479;
            double t24481 = -kaa0+t24480+t24476;
            double t24482 = 1/(t24481*t24481);
            double t24483 = c*c0*t24471*t24436*t24473*t24482*t24468*(2.0/3.0);
            double t24486 = exp(t24483);
            double t24487 = Ei(-t24483);
            double t24488 = 1/t24470;
            double t24489 = c*c0*t24436*t24473*t24482*t24468*(2.0/3.0);
            double t24490 = sqrt(t24489);
            functional_[index] = rho_a[index]*( ( (c*c0*t24436*(-2.0/3.0)+t24453*t24445*t24464*exp(-t24440*t24437* \
               t24438*t24439)*1.0E5 > 0.0) ? c0*1.0*(t24461*t24462+((c*c0*t24461*t24462*t24436*t24455*t24449*t24458* \
               t24459*(2.0/3.0)+1.0)*(t24463*4.0+c*c0*t24436*t24455*t24449*t24458*t24459*(8.0/3.0)+6.0))/(t24463* \
               6.0+c*c0*t24436*t24455*t24449*t24458*t24459*4.0+3.0))*(1.0/2.0) : 0.0 ) + ( (c*c0*t24436*(-2.0/3.0) \
               +t24453*t24445*t24464*exp(-t24450)*1.0E5 > 0.0) ? c0*1.0*exp(-(c*c)*1/pow(rho_a[index],2.0/3.0)*1/ \
               pow(k1*t24466+c*k2*t24436,2.0))*(t24486*t24487+((c*c0*t24471*t24436*t24473*t24482*t24468*t24486*t24487* \
               (2.0/3.0)+1.0)*(t24490*t24488*4.0+c*c0*t24471*t24436*t24473*t24482*t24468*(8.0/3.0)+6.0))/(t24490* \
               t24488*6.0+c*c0*t24471*t24436*t24473*t24482*t24468*4.0+3.0))*(1.0/2.0) : 0.0 ) )*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t24492 = tspi_m13*tspi_m13;
            double t24493 = 1/pow(rho_a[index],1.0/3.0);
            double t24494 = a2*a2;
            double t24495 = gamma_aa[index]*gamma_aa[index];
            double t24496 = 1/pow(rho_a[index],1.6E1/3.0);
            double t24497 = t24492*t24492;
            double t24498 = c*t24493;
            double t24499 = a4*a4;
            double t24500 = t24495*t24496*t24497*t24499*2.0;
            double t24501 = exp(t24500);
            double t24502 = 1/c;
            double t24503 = 1/pow(rho_a[index],7.0/3.0);
            double t24504 = sqrt(t24498);
            double t24505 = t24495*t24496*t24497*t24499;
            double t24506 = t24505+1.0;
            double t24507 = 1/(t24506*t24506);
            double t24508 = a5*gamma_aa[index]*t24502*t24503*t24492;
            double t24509 = t24508+1.0;
            double t24520 = raa2*t24504;
            double t24510 = exp(-t24520);
            double t24511 = t24510-1.0;
            double t24512 = kaa2*t24511;
            double t24513 = pow(t24498,2.0/5.0);
            double t24521 = raa1*t24513;
            double t24514 = exp(-t24521);
            double t24515 = t24514-1.0;
            double t24516 = kaa1*t24515;
            double t24517 = -kaa0+t24512+t24516;
            double t24518 = 1/(t24517*t24517);
            double t24519 = c*c0*t24501*t24507*t24509*t24518*t24493*(2.0/3.0);
            double t24522 = 1/t24506;
            double t24523 = 1/pow(rho_a[index],4.0/3.0);
            double t24524 = c*c0*t24501*t24509*t24518*t24493*(2.0/3.0);
            double t24525 = sqrt(t24524);
            double t24526 = 1/pow(rho_a[index],1.1E1/3.0);
            double t24527 = 1/sqrt(t24498);
            double t24528 = c*kaa2*raa2*t24510*t24523*t24527*(1.0/6.0);
            double t24529 = 1/pow(t24498,3.0/5.0);
            double t24530 = c*kaa1*raa1*t24514*t24523*t24529*(2.0/1.5E1);
            double t24531 = t24530+t24528;
            double t24532 = 1/(t24517*t24517*t24517);
            double t24533 = 1/pow(rho_a[index],2.0E1/3.0);
            double t24534 = exp(t24519);
            double t24535 = Ei(-t24519);
            double t24536 = 1/(t24506*t24506*t24506);
            double t24537 = t24522*t24525*6.0;
            double t24538 = c*c0*t24501*t24507*t24509*t24518*t24493*4.0;
            double t24539 = t24537+t24538+3.0;
            double t24540 = 1/t24539;
            double t24541 = c*c0*t24501*t24523*t24507*t24509*t24518*(2.0/9.0);
            double t24542 = a5*c0*gamma_aa[index]*t24501*t24507*t24526*t24518*t24492*(1.4E1/9.0);
            double t24543 = c*c0*t24501*t24531*t24532*t24507*t24509*t24493*(4.0/3.0);
            double t24544 = c*c0*t24501*t24533*t24507*t24509*t24518*t24495*t24497*t24499*(6.4E1/9.0);
            double t24546 = c*c0*t24501*t24533*t24509*t24518*t24536*t24495*t24497*t24499*(6.4E1/9.0);
            double t24545 = t24541+t24542+t24543+t24544-t24546;
            double t24547 = c*c0*t24501*t24507*t24534*t24535*t24509*t24518*t24493*(2.0/3.0);
            double t24548 = t24547+1.0;
            double t24549 = t24522*t24525*4.0;
            double t24550 = c*c0*t24501*t24507*t24509*t24518*t24493*(8.0/3.0);
            double t24551 = t24550+t24549+6.0;
            double t24552 = c*c0*t24501*t24523*t24509*t24518*(2.0/9.0);
            double t24553 = a5*c0*gamma_aa[index]*t24501*t24526*t24518*t24492*(1.4E1/9.0);
            double t24554 = c*c0*t24501*t24531*t24532*t24509*t24493*(4.0/3.0);
            double t24555 = c*c0*t24501*t24533*t24509*t24518*t24495*t24497*t24499*(6.4E1/9.0);
            double t24556 = t24552+t24553+t24554+t24555;
            double t24557 = 1/sqrt(t24524);
            double t24558 = 1/pow(rho_a[index],1.9E1/3.0);
            double t24559 = t24494*t24495*t24496*t24497;
            double t24560 = pow(t24498,4.0/5.0);
            double t24578 = rab1*t24560;
            double t24561 = exp(-t24578);
            double t24562 = t24561-1.0;
            double t24579 = kab1*t24562;
            double t24563 = kab0-t24579;
            double t24564 = a3*gamma_aa[index]*t24502*t24503*t24492;
            double t24565 = t24564+1.0;
            double t24566 = 1/sqrt(t24565);
            double t24567 = 1/pow(rho_a[index],8.0/3.0);
            double t24568 = a1*gamma_aa[index]*t24492*t24567;
            double t24569 = t24559+t24568+1.0;
            double t24570 = c*c;
            double t24571 = 1/pow(rho_a[index],2.0/3.0);
            double t24572 = k1*t24504;
            double t24573 = c*k2*t24493;
            double t24574 = t24572+t24573;
            double t24575 = 1/(t24574*t24574);
            double t24581 = t24570*t24571*t24575;
            double t24576 = exp(-t24581);
            double t24577 = exp(-t24559);
            double t24580 = c*c0*t24493*(2.0/3.0);
            double t24582 = t24534*t24535;
            double t24583 = t24540*t24551*t24548;
            double t24584 = t24582+t24583;
            double t24585 = t24563*t24566*t24577*t24569*1.0E5;
            double t24586 = -t24580+t24585;
            double t24587 = ( (t24586 > 0.0) ?  1.0 : 0.0 ) ;
            double t24588 = t24494*t24495*t24496*t24497*2.0;
            double t24589 = exp(t24588);
            double t24590 = 1/(t24563*t24563);
            double t24591 = 1/(t24569*t24569);
            double t24592 = c*c0*t24590*t24591*t24493*t24565*t24589*(2.0/3.0);
            double t24593 = sqrt(t24592);
            double t24594 = t24494*t24495*t24558*t24497*(1.6E1/3.0);
            double t24595 = a1*gamma_aa[index]*t24526*t24492*(8.0/3.0);
            double t24596 = t24594+t24595;
            double t24597 = exp(t24592);
            double t24598 = Ei(-t24592);
            double t24599 = c*c0*t24523*t24590*t24591*t24565*t24589*(2.0/9.0);
            double t24600 = 1/(t24569*t24569*t24569);
            double t24601 = a3*c0*gamma_aa[index]*t24526*t24590*t24492*t24591*t24589*(1.4E1/9.0);
            double t24602 = 1/pow(rho_a[index],5.0/3.0);
            double t24603 = 1/pow(t24498,1.0/5.0);
            double t24604 = c*c0*t24533*t24590*t24591*t24565*t24494*t24495*t24497*t24589*(6.4E1/9.0);
            double t24605 = 1/(t24563*t24563*t24563);
            double t24611 = c*c0*t24600*t24590*t24493*t24565*t24596*t24589*(4.0/3.0);
            double t24612 = c0*kab1*rab1*t24602*t24603*t24605*t24561*t24570*t24591*t24565*t24589*(1.6E1/4.5E1) \
               ;
            double t24606 = t24601-t24611-t24612+t24604+t24599;
            double t24607 = t24593*6.0;
            double t24608 = c*c0*t24590*t24591*t24493*t24565*t24589*4.0;
            double t24609 = t24607+t24608+3.0;
            double t24610 = 1/t24609;
            double t24613 = c*c0*t24590*t24591*t24493*t24565*t24597*t24589*t24598*(2.0/3.0);
            double t24614 = t24613+1.0;
            double t24615 = t24593*4.0;
            double t24616 = c*c0*t24590*t24591*t24493*t24565*t24589*(8.0/3.0);
            double t24617 = t24615+t24616+6.0;
            double t24618 = 1/sqrt(t24592);
            double t24619 = 1/c0;
            double t24620 = pow(rho_a[index],1.0/3.0);
            double t24621 = c*c0*t24523*(2.0/9.0);
            double t24622 = t24563*t24494*t24566*t24495*t24558*t24577*t24497*t24569*(1.6E6/3.0);
            double t24623 = 1/pow(rho_a[index],1.0E1/3.0);
            double t24624 = 1/pow(t24565,3.0/2.0);
            double t24625 = a3*gamma_aa[index]*t24502*t24623*t24624*t24563*t24492*t24577*t24569*(3.5E5/3.0);
            double t24626 = t24621+t24622+t24625-t24563*t24566*t24577*t24596*1.0E5-c*kab1*rab1*t24603*t24523* \
               t24561*t24566*t24577*t24569*(8.0E4/3.0);
            double t24627 = t24597*t24598;
            double t24628 = t24610*t24614*t24617;
            double t24629 = t24627+t24628;
            v_rho_a_[index] = -rho_a[index]*(c0*t24587*(t24610*t24614*(t24606*t24618*2.0+c*c0*t24523*t24590*t24591* \
               t24565*t24589*(8.0/9.0)+a3*c0*gamma_aa[index]*t24526*t24590*t24492*t24591*t24589*(5.6E1/9.0)-c*c0* \
               t24600*t24590*t24493*t24565*t24596*t24589*(1.6E1/3.0)+c*c0*t24533*t24590*t24591*t24565*t24494*t24495* \
               t24497*t24589*(2.56E2/9.0)-c0*kab1*rab1*t24602*t24603*t24605*t24561*t24570*t24591*t24565*t24589*(6.4E1/ \
               4.5E1))+t24610*t24617*(t24601-t24611-t24612+t24604+t24599+c*c0*t24523*t24590*t24591*t24565*t24597* \
               t24589*t24598*(2.0/9.0)+a3*c0*gamma_aa[index]*t24526*t24590*t24492*t24591*t24597*t24589*t24598*(1.4E1/ \
               9.0)-c*c0*t24600*t24590*t24493*t24565*t24596*t24597*t24589*t24598*(4.0/3.0)+c*c0*t24606*t24590*t24591* \
               t24493*t24565*t24597*t24589*t24598*(2.0/3.0)+c*c0*t24533*t24590*t24591*t24565*t24494*t24495*t24497* \
               t24597*t24589*t24598*(6.4E1/9.0)-c0*kab1*rab1*t24602*t24603*t24605*t24561*t24570*t24591*t24565*t24597* \
               t24589*t24598*(1.6E1/4.5E1))+t24606*t24597*t24598-t24614*t24617*1/(t24609*t24609)*(t24606*t24618*3.0+ \
               c*c0*t24523*t24590*t24591*t24565*t24589*(4.0/3.0)+a3*c0*gamma_aa[index]*t24526*t24590*t24492*t24591* \
               t24589*(2.8E1/3.0)-c*c0*t24600*t24590*t24493*t24565*t24596*t24589*8.0+c*c0*t24533*t24590*t24591*t24565* \
               t24494*t24495*t24497*t24589*(1.28E2/3.0)-c0*kab1*rab1*t24602*t24603*t24605*t24561*t24570*t24591*t24565* \
               t24589*(3.2E1/1.5E1))+(t24502*t24620*t24606*(t24563*t24563)*t24619*(t24569*t24569)*exp(-t24588)*(3.0/ \
               2.0))/t24565)*(1.0/2.0)- 0.0 )+rho_a[index]*( ( (c*c0*t24493*(-2.0/3.0)+t24563*t24566*t24569*exp(- \
               t24494*t24495*t24496*t24497)*1.0E5 > 0.0) ? c0*t24576*1.0*(t24540*t24548*(t24522*t24556*t24557*2.0- \
               t24507*t24525*t24495*t24558*t24497*t24499*(6.4E1/3.0)+c*c0*t24501*t24523*t24507*t24509*t24518*(8.0/ \
               9.0)+a5*c0*gamma_aa[index]*t24501*t24507*t24526*t24518*t24492*(5.6E1/9.0)+c*c0*t24501*t24531*t24532* \
               t24507*t24509*t24493*(1.6E1/3.0)+c*c0*t24501*t24533*t24507*t24509*t24518*t24495*t24497*t24499*(2.56E2/ \
               9.0)-c*c0*t24501*t24533*t24509*t24518*t24536*t24495*t24497*t24499*(2.56E2/9.0))+t24540*t24551*(t24541+ \
               t24542+t24543+t24544-t24546+c*c0*t24501*t24523*t24507*t24534*t24535*t24509*t24518*(2.0/9.0)+a5*c0* \
               gamma_aa[index]*t24501*t24507*t24534*t24526*t24535*t24518*t24492*(1.4E1/9.0)+c*c0*t24501*t24531*t24532* \
               t24507*t24534*t24535*t24509*t24493*(4.0/3.0)+c*c0*t24501*t24507*t24534*t24535*t24509*t24518*t24545* \
               t24493*(2.0/3.0)+c*c0*t24501*t24533*t24507*t24534*t24535*t24509*t24518*t24495*t24497*t24499*(6.4E1/ \
               9.0)-c*c0*t24501*t24533*t24534*t24535*t24509*t24518*t24536*t24495*t24497*t24499*(6.4E1/9.0))+t24534* \
               t24535*t24545-t24551*1/(t24539*t24539)*t24548*(t24522*t24556*t24557*3.0-t24507*t24525*t24495*t24558* \
               t24497*t24499*3.2E1+c*c0*t24501*t24523*t24507*t24509*t24518*(4.0/3.0)+a5*c0*gamma_aa[index]*t24501* \
               t24507*t24526*t24518*t24492*(2.8E1/3.0)+c*c0*t24501*t24531*t24532*t24507*t24509*t24493*8.0+c*c0*t24501* \
               t24533*t24507*t24509*t24518*t24495*t24497*t24499*(1.28E2/3.0)-c*c0*t24501*t24533*t24509*t24518*t24536* \
               t24495*t24497*t24499*(1.28E2/3.0))+(t24502*t24620*(t24506*t24506)*(t24517*t24517)*t24545*t24619*exp(- \
               t24500)*(3.0/2.0))/t24509)*(-1.0/2.0) : 0.0 ) +c0*t24584*t24576*t24587*(t24602*t24570*t24575*(2.0/ \
               3.0)-t24570*t24571*1/(t24574*t24574*t24574)*(c*k2*t24523*(1.0/3.0)+c*k1*t24523*t24527*(1.0/6.0))*2.0) \
               *(1.0/2.0)+ 0.0 )+c0*t24629*t24587*(1.0/2.0)+c0*t24584*t24576*t24587*(1.0/2.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t24631 = tspi_m13*tspi_m13;
                double t24632 = 1/pow(rho_a[index],1.0/3.0);
                double t24633 = a2*a2;
                double t24634 = gamma_aa[index]*gamma_aa[index];
                double t24635 = 1/pow(rho_a[index],1.6E1/3.0);
                double t24636 = t24631*t24631;
                double t24637 = t24633*t24634*t24635*t24636*2.0;
                double t24638 = exp(t24637);
                double t24639 = c*t24632;
                double t24640 = pow(t24639,4.0/5.0);
                double t24652 = rab1*t24640;
                double t24641 = exp(-t24652);
                double t24642 = t24641-1.0;
                double t24653 = kab1*t24642;
                double t24643 = kab0-t24653;
                double t24644 = 1/c;
                double t24645 = 1/pow(rho_a[index],7.0/3.0);
                double t24646 = a3*gamma_aa[index]*t24631*t24644*t24645;
                double t24647 = t24646+1.0;
                double t24648 = t24633*t24634*t24635*t24636;
                double t24649 = 1/pow(rho_a[index],8.0/3.0);
                double t24650 = a1*gamma_aa[index]*t24631*t24649;
                double t24651 = t24650+t24648+1.0;
                double t24654 = 1/(t24643*t24643);
                double t24655 = 1/(t24651*t24651);
                double t24656 = c*c0*t24632*t24654*t24655*t24638*t24647*(2.0/3.0);
                double t24657 = a1*t24631*t24649;
                double t24658 = gamma_aa[index]*t24633*t24635*t24636*2.0;
                double t24659 = t24657+t24658;
                double t24660 = 1/(t24651*t24651*t24651);
                double t24661 = 1/pow(rho_a[index],1.7E1/3.0);
                double t24662 = exp(t24656);
                double t24663 = Ei(-t24656);
                double t24664 = a3*c0*t24631*t24654*t24655*t24638*t24649*(2.0/3.0);
                double t24665 = c*c0*gamma_aa[index]*t24633*t24661*t24636*t24654*t24655*t24638*t24647*(8.0/3.0);
                double t24672 = c*c0*t24632*t24660*t24654*t24638*t24647*t24659*(4.0/3.0);
                double t24666 = -t24672+t24664+t24665;
                double t24667 = sqrt(t24656);
                double t24668 = t24667*6.0;
                double t24669 = c*c0*t24632*t24654*t24655*t24638*t24647*4.0;
                double t24670 = t24668+t24669+3.0;
                double t24671 = 1/t24670;
                double t24673 = c*c0*t24632*t24662*t24654*t24663*t24655*t24638*t24647*(2.0/3.0);
                double t24674 = t24673+1.0;
                double t24675 = t24667*4.0;
                double t24676 = c*c0*t24632*t24654*t24655*t24638*t24647*(8.0/3.0);
                double t24677 = t24675+t24676+6.0;
                double t24678 = 1/sqrt(t24656);
                double t24679 = 1/sqrt(t24647);
                double t24680 = exp(-t24648);
                double t24681 = c*c0*t24632*(2.0/3.0);
                double t24682 = a4*a4;
                double t24683 = sqrt(t24639);
                double t24684 = t24634*t24635*t24636*t24682*2.0;
                double t24685 = exp(t24684);
                double t24686 = t24634*t24635*t24636*t24682;
                double t24687 = t24686+1.0;
                double t24688 = 1/(t24687*t24687);
                double t24689 = a5*gamma_aa[index]*t24631*t24644*t24645;
                double t24690 = t24689+1.0;
                double t24701 = raa2*t24683;
                double t24691 = exp(-t24701);
                double t24692 = t24691-1.0;
                double t24693 = kaa2*t24692;
                double t24694 = pow(t24639,2.0/5.0);
                double t24702 = raa1*t24694;
                double t24695 = exp(-t24702);
                double t24696 = t24695-1.0;
                double t24697 = kaa1*t24696;
                double t24698 = -kaa0+t24693+t24697;
                double t24699 = 1/(t24698*t24698);
                double t24700 = c*c0*t24632*t24690*t24685*t24688*t24699*(2.0/3.0);
                double t24703 = exp(t24700);
                double t24704 = Ei(-t24700);
                double t24705 = 1/t24687;
                double t24706 = c*c0*t24632*t24690*t24685*t24699*(2.0/3.0);
                double t24707 = sqrt(t24706);
                double t24708 = 1/(t24687*t24687*t24687);
                double t24709 = t24705*t24707*6.0;
                double t24710 = c*c0*t24632*t24690*t24685*t24688*t24699*4.0;
                double t24711 = t24710+t24709+3.0;
                double t24712 = 1/t24711;
                double t24713 = a5*c0*t24631*t24649*t24685*t24688*t24699*(2.0/3.0);
                double t24714 = c*c0*gamma_aa[index]*t24661*t24636*t24690*t24682*t24685*t24688*t24699*(8.0/3.0);
                double t24727 = c*c0*gamma_aa[index]*t24661*t24636*t24690*t24708*t24682*t24685*t24699*(8.0/3.0);
                double t24715 = t24713+t24714-t24727;
                double t24716 = c*c0*t24703*t24632*t24704*t24690*t24685*t24688*t24699*(2.0/3.0);
                double t24717 = t24716+1.0;
                double t24718 = t24705*t24707*4.0;
                double t24719 = c*c0*t24632*t24690*t24685*t24688*t24699*(8.0/3.0);
                double t24720 = t24718+t24719+6.0;
                double t24721 = a5*c0*t24631*t24649*t24685*t24699*(2.0/3.0);
                double t24722 = c*c0*gamma_aa[index]*t24661*t24636*t24690*t24682*t24685*t24699*(8.0/3.0);
                double t24723 = t24721+t24722;
                double t24724 = 1/sqrt(t24706);
                double t24725 = 1/c0;
                double t24726 = pow(rho_a[index],1.0/3.0);
                double t24728 = t24651*t24643*t24680*t24679*1.0E5;
                double t24729 = c*c;
                double t24730 = 1/pow(rho_a[index],2.0/3.0);
                double t24731 = k1*t24683;
                double t24732 = c*k2*t24632;
                double t24733 = t24731+t24732;
                double t24734 = 1/(t24733*t24733);
                double t24735 = exp(-t24730*t24734*t24729);
                double t24736 = 1/pow(t24647,3.0/2.0);
                double t24737 = a3*t24631*t24651*t24643*t24644*t24680*t24645*t24736*5.0E4;
                double t24738 = gamma_aa[index]*t24633*t24651*t24643*t24635*t24680*t24636*t24679*2.0E5;
                double t24739 = t24737+t24738-t24643*t24680*t24659*t24679*1.0E5;
                v_gamma_aa_[index] = rho_a[index]*( ( (c*c0*t24632*(-2.0/3.0)+t24651*t24643*t24679*exp(-t24633*t24634* \
                   t24635*t24636)*1.0E5 > 0.0) ? c0*1.0*(t24662*t24663*t24666+t24671*t24677*(-t24672+t24664+t24665+a3* \
                   c0*t24631*t24662*t24654*t24663*t24655*t24638*t24649*(2.0/3.0)-c*c0*t24632*t24660*t24662*t24654*t24663* \
                   t24638*t24647*t24659*(4.0/3.0)+c*c0*t24632*t24662*t24654*t24663*t24655*t24638*t24647*t24666*(2.0/3.0) \
                   +c*c0*gamma_aa[index]*t24633*t24661*t24662*t24636*t24654*t24663*t24655*t24638*t24647*(8.0/3.0))+t24671* \
                   t24674*(t24666*t24678*2.0+a3*c0*t24631*t24654*t24655*t24638*t24649*(8.0/3.0)-c*c0*t24632*t24660*t24654* \
                   t24638*t24647*t24659*(1.6E1/3.0)+c*c0*gamma_aa[index]*t24633*t24661*t24636*t24654*t24655*t24638*t24647* \
                   (3.2E1/3.0))-1/(t24670*t24670)*t24674*t24677*(t24666*t24678*3.0+a3*c0*t24631*t24654*t24655*t24638* \
                   t24649*4.0-c*c0*t24632*t24660*t24654*t24638*t24647*t24659*8.0+c*c0*gamma_aa[index]*t24633*t24661*t24636* \
                   t24654*t24655*t24638*t24647*1.6E1)+((t24651*t24651)*(t24643*t24643)*t24644*t24725*t24726*t24666*exp(- \
                   t24637)*(3.0/2.0))/t24647)*(1.0/2.0) : 0.0 ) - 0.0 )*2.0+rho_a[index]*( ( (-t24681+t24728 > 0.0) ?  \
                   c0*t24735*1.0*(t24712*t24717*(t24705*t24723*t24724*2.0-gamma_aa[index]*t24635*t24707*t24636*t24682* \
                   t24688*8.0+a5*c0*t24631*t24649*t24685*t24688*t24699*(8.0/3.0)-c*c0*gamma_aa[index]*t24661*t24636*t24690* \
                   t24708*t24682*t24685*t24699*(3.2E1/3.0)+c*c0*gamma_aa[index]*t24661*t24636*t24690*t24682*t24685*t24688* \
                   t24699*(3.2E1/3.0))+t24720*t24712*(t24713+t24714+a5*c0*t24631*t24703*t24704*t24649*t24685*t24688*t24699* \
                   (2.0/3.0)-c*c0*gamma_aa[index]*t24661*t24636*t24690*t24708*t24682*t24685*t24699*(8.0/3.0)+c*c0*t24703* \
                   t24632*t24704*t24715*t24690*t24685*t24688*t24699*(2.0/3.0)-c*c0*gamma_aa[index]*t24703*t24704*t24661* \
                   t24636*t24690*t24708*t24682*t24685*t24699*(8.0/3.0)+c*c0*gamma_aa[index]*t24703*t24704*t24661*t24636* \
                   t24690*t24682*t24685*t24688*t24699*(8.0/3.0))+t24703*t24704*t24715-1/(t24711*t24711)*t24720*t24717* \
                   (t24705*t24723*t24724*3.0-gamma_aa[index]*t24635*t24707*t24636*t24682*t24688*1.2E1+a5*c0*t24631*t24649* \
                   t24685*t24688*t24699*4.0-c*c0*gamma_aa[index]*t24661*t24636*t24690*t24708*t24682*t24685*t24699*1.6E1+ \
                   c*c0*gamma_aa[index]*t24661*t24636*t24690*t24682*t24685*t24688*t24699*1.6E1)+(t24715*t24644*t24725* \
                   t24726*(t24687*t24687)*(t24698*t24698)*exp(-t24684)*(3.0/2.0))/t24690)*(1.0/2.0) : 0.0 ) - 0.0 )*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t24742 = tspi_m13*tspi_m13;
            double t24743 = 1/pow(rho_a[index],1.0/3.0);
            double t24744 = a2*a2;
            double t24745 = gamma_aa[index]*gamma_aa[index];
            double t24746 = 1/pow(rho_a[index],1.6E1/3.0);
            double t24747 = t24742*t24742;
            double t24748 = c*t24743;
            double t24749 = a4*a4;
            double t24750 = 1/c;
            double t24751 = 1/pow(rho_a[index],7.0/3.0);
            double t24752 = sqrt(t24748);
            double t24753 = t24745*t24746*t24747*t24749*2.0;
            double t24754 = exp(t24753);
            double t24755 = t24745*t24746*t24747*t24749;
            double t24756 = t24755+1.0;
            double t24757 = a5*gamma_aa[index]*t24750*t24742*t24751;
            double t24758 = t24757+1.0;
            double t24769 = raa2*t24752;
            double t24759 = exp(-t24769);
            double t24760 = t24759-1.0;
            double t24761 = kaa2*t24760;
            double t24762 = pow(t24748,2.0/5.0);
            double t24770 = raa1*t24762;
            double t24763 = exp(-t24770);
            double t24764 = t24763-1.0;
            double t24765 = kaa1*t24764;
            double t24766 = -kaa0+t24761+t24765;
            double t24767 = 1/(t24766*t24766);
            double t24768 = 1/t24756;
            double t24771 = 1/pow(rho_a[index],4.0/3.0);
            double t24772 = c*c0*t24743*t24754*t24758*t24767*(2.0/3.0);
            double t24773 = 1/(t24756*t24756);
            double t24774 = sqrt(t24772);
            double t24775 = 1/pow(rho_a[index],1.1E1/3.0);
            double t24776 = 1/sqrt(t24748);
            double t24777 = c*kaa2*raa2*t24771*t24776*t24759*(1.0/6.0);
            double t24778 = 1/pow(t24748,3.0/5.0);
            double t24779 = c*kaa1*raa1*t24771*t24763*t24778*(2.0/1.5E1);
            double t24780 = t24777+t24779;
            double t24781 = 1/(t24766*t24766*t24766);
            double t24782 = 1/pow(rho_a[index],2.0E1/3.0);
            double t24783 = c*c0*t24743*t24754*t24773*t24758*t24767*(2.0/3.0);
            double t24784 = exp(t24783);
            double t24785 = Ei(-t24783);
            double t24786 = c*c0*t24771*t24754*t24773*t24758*t24767*(2.0/9.0);
            double t24787 = a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24775*t24767*(1.4E1/9.0);
            double t24788 = c*c0*t24743*t24780*t24754*t24781*t24773*t24758*(4.0/3.0);
            double t24789 = 1/(t24756*t24756*t24756);
            double t24790 = c*c0*t24745*t24754*t24773*t24782*t24747*t24749*t24758*t24767*(6.4E1/9.0);
            double t24791 = t24774*t24768*6.0;
            double t24792 = c*c0*t24743*t24754*t24773*t24758*t24767*4.0;
            double t24793 = t24791+t24792+3.0;
            double t24794 = 1/t24793;
            double t24795 = 1/sqrt(t24772);
            double t24796 = c*c;
            double t24797 = 1/pow(rho_a[index],8.0/3.0);
            double t24798 = c*c0*t24771*t24754*t24758*t24767*(2.0/9.0);
            double t24799 = a5*c0*gamma_aa[index]*t24742*t24754*t24775*t24767*(1.4E1/9.0);
            double t24800 = c*c0*t24743*t24780*t24754*t24781*t24758*(4.0/3.0);
            double t24801 = c*c0*t24745*t24754*t24782*t24747*t24749*t24758*t24767*(6.4E1/9.0);
            double t24802 = t24800+t24801+t24798+t24799;
            double t24803 = t24749*t24749;
            double t24804 = t24745*t24745;
            double t24805 = t24747*t24747;
            double t24806 = 1/pow(rho_a[index],1.9E1/3.0);
            double t24807 = raa2*raa2;
            double t24808 = c*kaa2*t24751*t24807*t24759*(1.0/3.6E1);
            double t24809 = raa1*raa1;
            double t24810 = 1/pow(t24748,6.0/5.0);
            double t24811 = kaa1*t24810*t24763*t24809*t24796*t24797*(4.0/2.25E2);
            double t24812 = 1/pow(t24748,3.0/2.0);
            double t24813 = kaa2*raa2*t24812*t24759*t24796*t24797*(1.0/3.6E1);
            double t24814 = 1/pow(t24748,8.0/5.0);
            double t24815 = kaa1*raa1*t24814*t24763*t24796*t24797*(2.0/7.5E1);
            double t24825 = c*kaa2*raa2*t24751*t24776*t24759*(2.0/9.0);
            double t24826 = c*kaa1*raa1*t24751*t24763*t24778*(8.0/4.5E1);
            double t24816 = t24811+t24813+t24815-t24825+t24808-t24826;
            double t24817 = t24780*t24780;
            double t24818 = 1/(t24766*t24766*t24766*t24766);
            double t24819 = 1/pow(rho_a[index],1.4E1/3.0);
            double t24820 = 1/pow(rho_a[index],1.0E1);
            double t24821 = 1/pow(rho_a[index],1.3E1);
            double t24822 = 1/pow(rho_a[index],2.3E1/3.0);
            double t24824 = c*c0*t24745*t24754*t24782*t24747*t24749*t24758*t24767*t24789*(6.4E1/9.0);
            double t24823 = -t24824+t24790+t24786+t24787+t24788;
            double t24827 = t24823*t24823;
            double t24828 = 1/(t24756*t24756*t24756*t24756);
            double t24829 = c*c0*t24751*t24754*t24773*t24758*t24767*(8.0/2.7E1);
            double t24830 = c*c0*t24743*t24754*t24817*t24773*t24818*t24758*4.0;
            double t24831 = a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24819*t24767*(5.6E1/9.0);
            double t24832 = c*c0*t24771*t24780*t24754*t24781*t24773*t24758*(8.0/9.0);
            double t24833 = a5*c0*gamma_aa[index]*t24742*t24780*t24754*t24781*t24773*t24775*(5.6E1/9.0);
            double t24834 = a5*c0*gamma_aa[index]*t24820*t24742*t24745*t24754*t24773*t24747*t24749*t24767*(8.96E2/ \
               2.7E1);
            double t24835 = c*c0*t24803*t24821*t24804*t24805*t24754*t24773*t24758*t24767*(2.048E3/2.7E1);
            double t24836 = c*c0*t24803*t24821*t24804*t24805*t24754*t24828*t24758*t24767*(1.024E3/9.0);
            double t24837 = c*c0*t24822*t24745*t24754*t24773*t24747*t24749*t24758*t24767*(4.48E2/9.0);
            double t24838 = c*c0*t24780*t24745*t24754*t24781*t24773*t24782*t24747*t24749*t24758*(2.56E2/9.0);
            double t24886 = c*c0*t24743*t24816*t24754*t24781*t24773*t24758*(4.0/3.0);
            double t24887 = a5*c0*gamma_aa[index]*t24820*t24742*t24745*t24754*t24747*t24749*t24767*t24789*(8.96E2/ \
               2.7E1);
            double t24888 = c*c0*t24803*t24821*t24804*t24805*t24754*t24758*t24767*t24789*(4.096E3/2.7E1);
            double t24889 = c*c0*t24822*t24745*t24754*t24747*t24749*t24758*t24767*t24789*(4.48E2/9.0);
            double t24890 = c*c0*t24780*t24745*t24754*t24781*t24782*t24747*t24749*t24758*t24789*(2.56E2/9.0);
            double t24839 = t24830+t24831+t24832+t24833+t24834+t24835+t24836-t24890+t24837+t24829+t24838-t24886- \
               t24887-t24888-t24889;
            double t24840 = c*c0*t24743*t24754*t24773*t24784*t24758*t24767*t24785*(2.0/3.0);
            double t24841 = t24840+1.0;
            double t24842 = t24802*t24768*t24795*2.0;
            double t24843 = c*c0*t24771*t24754*t24773*t24758*t24767*(8.0/9.0);
            double t24844 = a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24775*t24767*(5.6E1/9.0);
            double t24845 = c*c0*t24743*t24780*t24754*t24781*t24773*t24758*(1.6E1/3.0);
            double t24846 = c*c0*t24745*t24754*t24773*t24782*t24747*t24749*t24758*t24767*(2.56E2/9.0);
            double t24908 = t24806*t24745*t24773*t24747*t24774*t24749*(6.4E1/3.0);
            double t24909 = c*c0*t24745*t24754*t24782*t24747*t24749*t24758*t24767*t24789*(2.56E2/9.0);
            double t24847 = t24842+t24843+t24844+t24845-t24908+t24846-t24909;
            double t24848 = 1/(t24793*t24793);
            double t24849 = t24774*t24768*4.0;
            double t24850 = c*c0*t24743*t24754*t24773*t24758*t24767*(8.0/3.0);
            double t24851 = t24850+t24849+6.0;
            double t24852 = t24802*t24768*t24795*3.0;
            double t24853 = c*c0*t24771*t24754*t24773*t24758*t24767*(4.0/3.0);
            double t24854 = a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24775*t24767*(2.8E1/3.0);
            double t24855 = c*c0*t24743*t24780*t24754*t24781*t24773*t24758*8.0;
            double t24856 = c*c0*t24745*t24754*t24773*t24782*t24747*t24749*t24758*t24767*(1.28E2/3.0);
            double t24877 = t24806*t24745*t24773*t24747*t24774*t24749*3.2E1;
            double t24878 = c*c0*t24745*t24754*t24782*t24747*t24749*t24758*t24767*t24789*(1.28E2/3.0);
            double t24857 = t24852+t24853+t24854+t24855+t24856-t24877-t24878;
            double t24858 = c*c0*t24771*t24754*t24773*t24784*t24758*t24767*t24785*(2.0/9.0);
            double t24859 = c*c0*t24743*t24780*t24754*t24781*t24773*t24784*t24758*t24785*(4.0/3.0);
            double t24860 = c*c0*t24823*t24743*t24754*t24773*t24784*t24758*t24767*t24785*(2.0/3.0);
            double t24861 = a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24775*t24784*t24767*t24785*(1.4E1/9.0) \
               ;
            double t24862 = c*c0*t24745*t24754*t24773*t24782*t24747*t24784*t24749*t24758*t24767*t24785*(6.4E1/ \
               9.0);
            double t24863 = c*c0*t24751*t24754*t24758*t24767*(8.0/2.7E1);
            double t24864 = a5*c0*gamma_aa[index]*t24742*t24754*t24819*t24767*(5.6E1/9.0);
            double t24865 = c*c0*t24771*t24780*t24754*t24781*t24758*(8.0/9.0);
            double t24866 = c*c0*t24743*t24754*t24817*t24818*t24758*4.0;
            double t24867 = a5*c0*gamma_aa[index]*t24820*t24742*t24745*t24754*t24747*t24749*t24767*(8.96E2/2.7E1) \
               ;
            double t24868 = a5*c0*gamma_aa[index]*t24742*t24780*t24754*t24781*t24775*(5.6E1/9.0);
            double t24869 = c*c0*t24803*t24821*t24804*t24805*t24754*t24758*t24767*(2.048E3/2.7E1);
            double t24870 = c*c0*t24822*t24745*t24754*t24747*t24749*t24758*t24767*(4.48E2/9.0);
            double t24871 = c*c0*t24780*t24745*t24754*t24781*t24782*t24747*t24749*t24758*(2.56E2/9.0);
            double t24872 = t24870+t24871+t24863+t24864+t24865+t24866+t24867+t24868+t24869-c*c0*t24743*t24816* \
               t24754*t24781*t24758*(4.0/3.0);
            double t24873 = t24802*t24802;
            double t24874 = 1/pow(t24772,3.0/2.0);
            double t24875 = 1/pow(rho_a[index],2.2E1/3.0);
            double t24876 = 1/pow(rho_a[index],3.8E1/3.0);
            double t24879 = 1/pow(rho_a[index],2.0/3.0);
            double t24880 = 1/t24758;
            double t24881 = 1/c0;
            double t24882 = exp(-t24753);
            double t24883 = t24756*t24756;
            double t24884 = t24766*t24766;
            double t24885 = pow(rho_a[index],1.0/3.0);
            double t24891 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]) \
               ;
            double t24910 = c*c0*t24745*t24754*t24782*t24747*t24784*t24749*t24758*t24767*t24785*t24789*(6.4E1/ \
               9.0);
            double t24892 = -t24910-t24824+t24860+t24861+t24790+t24862+t24786+t24858+t24787+t24859+t24788;
            double t24893 = t24744*t24745*t24746*t24747;
            double t24894 = pow(t24748,4.0/5.0);
            double t24912 = rab1*t24894;
            double t24895 = exp(-t24912);
            double t24896 = t24895-1.0;
            double t24913 = kab1*t24896;
            double t24897 = kab0-t24913;
            double t24898 = a3*gamma_aa[index]*t24750*t24742*t24751;
            double t24899 = t24898+1.0;
            double t24900 = 1/sqrt(t24899);
            double t24901 = a1*gamma_aa[index]*t24742*t24797;
            double t24902 = t24901+t24893+1.0;
            double t24903 = k1*t24752;
            double t24904 = c*k2*t24743;
            double t24905 = t24903+t24904;
            double t24906 = 1/(t24905*t24905);
            double t24915 = t24906*t24796*t24879;
            double t24907 = exp(-t24915);
            double t24911 = exp(-t24893);
            double t24914 = t24900*t24902*t24911*t24897*1.0E5;
            double t24916 = t24841*t24847*t24794;
            double t24917 = t24823*t24784*t24785;
            double t24918 = t24851*t24892*t24794;
            double t24919 = t24750*t24823*t24880*t24881*t24882*t24883*t24884*t24885*(3.0/2.0);
            double t25062 = t24841*t24851*t24848*t24857;
            double t24920 = t24916+t24917+t24918+t24919-t25062;
            double t24921 = 1/pow(rho_a[index],1.0E1/3.0);
            double t24922 = c*c0*t24743*(2.0/3.0);
            double t24923 = 1/(t24905*t24905*t24905);
            double t24924 = c*k2*t24771*(1.0/3.0);
            double t24925 = c*k1*t24771*t24776*(1.0/6.0);
            double t24926 = t24924+t24925;
            double t24927 = 1/pow(rho_a[index],5.0/3.0);
            double t24928 = -t24922+t24914;
            double t24929 = ( (t24928 > 0.0) ?  1.0 : 0.0 ) ;
            double t24930 = t24784*t24785;
            double t24931 = t24841*t24851*t24794;
            double t24932 = t24930+t24931;
            double t24933 = t24906*t24927*t24796*(2.0/3.0);
            double t24947 = t24923*t24926*t24796*t24879*2.0;
            double t24934 = t24933-t24947;
            double t24935 = t24922-t24914;
            double t24936 = c*c0*t24771*(2.0/9.0);
            double t24937 = t24806*t24744*t24745*t24747*(1.6E1/3.0);
            double t24938 = a1*gamma_aa[index]*t24742*t24775*(8.0/3.0);
            double t24939 = t24937+t24938;
            double t24940 = t24900*t24902*t24911*t24806*t24744*t24745*t24747*t24897*(1.6E6/3.0);
            double t24941 = 1/pow(t24748,1.0/5.0);
            double t24942 = 1/pow(t24899,3.0/2.0);
            double t24943 = a3*gamma_aa[index]*t24902*t24911*t24750*t24921*t24742*t24942*t24897*(3.5E5/3.0);
            double t24948 = t24900*t24911*t24939*t24897*1.0E5;
            double t24949 = c*kab1*rab1*t24900*t24902*t24911*t24941*t24771*t24895*(8.0E4/3.0);
            double t24944 = t24940+t24943+t24936-t24948-t24949;
            double t24945 = 0.0 ;
            double t24946 = 1/(c*c);
            double t24950 = t24744*t24745*t24746*t24747*2.0;
            double t24951 = exp(t24950);
            double t24952 = 1/(t24897*t24897);
            double t24953 = 1/(t24902*t24902);
            double t24954 = c*c0*t24743*t24951*t24952*t24953*t24899*(2.0/3.0);
            double t24955 = sqrt(t24954);
            double t24956 = 1/rho_a[index];
            double t24957 = c*c0*t24771*t24951*t24952*t24953*t24899*(2.0/9.0);
            double t24958 = 1/(t24902*t24902*t24902);
            double t24959 = a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24953*t24775*(1.4E1/9.0);
            double t24960 = c*c0*t24744*t24951*t24745*t24952*t24782*t24953*t24747*t24899*(6.4E1/9.0);
            double t24961 = 1/(t24897*t24897*t24897);
            double t24963 = c*c0*t24743*t24951*t24952*t24939*t24958*t24899*(4.0/3.0);
            double t24964 = c0*kab1*rab1*t24941*t24951*t24961*t24953*t24927*t24796*t24895*t24899*(1.6E1/4.5E1) \
               ;
            double t24962 = t24960-t24963-t24964+t24957+t24959;
            double t24965 = t24744*t24745*t24747*t24875*(3.04E2/9.0);
            double t24966 = a1*gamma_aa[index]*t24742*t24819*(8.8E1/9.0);
            double t24967 = t24965+t24966;
            double t24968 = exp(t24954);
            double t24969 = Ei(-t24954);
            double t24970 = c*c0*t24751*t24951*t24952*t24953*t24899*(8.0/2.7E1);
            double t24971 = t24939*t24939;
            double t24972 = 1/(t24902*t24902*t24902*t24902);
            double t24973 = c*c0*t24743*t24951*t24952*t24971*t24972*t24899*4.0;
            double t24974 = a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24953*t24819*(5.6E1/9.0);
            double t24975 = a3*c0*gamma_aa[index]*t24820*t24742*t24744*t24951*t24745*t24952*t24953*t24747*(8.96E2/ \
               2.7E1);
            double t24976 = t24744*t24744;
            double t24977 = rab1*rab1;
            double t24978 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t24979 = 1/pow(t24748,2.0/5.0);
            double t24980 = t24962*t24962;
            double t24981 = c*c0*t24821*t24804*t24805*t24951*t24952*t24953*t24976*t24899*(2.048E3/2.7E1);
            double t24982 = c*c0*t24822*t24744*t24951*t24745*t24952*t24953*t24747*t24899*(4.48E2/9.0);
            double t24983 = c*c0*kab1*t24951*t24961*t24953*t24796*t24895*t24977*t24978*t24979*t24899*(6.4E1/6.75E2) \
               ;
            double t24984 = kab1*kab1;
            double t24991 = rab1*t24894*2.0;
            double t24985 = exp(-t24991);
            double t24986 = 1/(t24897*t24897*t24897*t24897);
            double t24987 = c*c0*t24951*t24953*t24984*t24796*t24985*t24977*t24986*t24978*t24979*t24899*(6.4E1/ \
               2.25E2);
            double t24988 = c*c0*kab1*rab1*t24810*t24951*t24961*t24953*t24796*t24895*t24978*t24899*(1.6E1/6.75E2) \
               ;
            double t24989 = c0*kab1*rab1*t24941*t24951*t24961*t24927*t24939*t24796*t24895*t24958*t24899*(6.4E1/ \
               4.5E1);
            double t24990 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
            double t24992 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t24993 = t24955*6.0;
            double t24994 = c*c0*t24743*t24951*t24952*t24953*t24899*4.0;
            double t24995 = t24993+t24994+3.0;
            double t24996 = 1/t24995;
            double t24998 = c*c0*t24771*t24951*t24952*t24939*t24958*t24899*(8.0/9.0);
            double t24999 = c*c0*t24743*t24951*t24952*t24958*t24967*t24899*(4.0/3.0);
            double t25000 = a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24775*t24939*t24958*(5.6E1/9.0);
            double t25001 = c*c0*t24744*t24951*t24745*t24952*t24782*t24747*t24939*t24958*t24899*(2.56E2/9.0);
            double t25002 = c0*kab1*rab1*t24941*t24951*t24961*t24953*t24796*t24895*t24797*t24899*(3.2E1/4.5E1) \
               ;
            double t25003 = a3*c*c0*gamma_aa[index]*kab1*rab1*t24742*t24941*t24951*t24961*t24953*t24990*t24895* \
               (2.24E2/1.35E2);
            double t25004 = c0*kab1*rab1*t24941*t24744*t24951*t24745*t24961*t24953*t24747*t24992*t24796*t24895* \
               t24899*(1.024E3/1.35E2);
            double t24997 = t24970+t24981+t24973+t24982+t24974+t24983+t24975+t24987+t24988+t24989-t24998-t24999- \
               t25000-t25001-t25002-t25003-t25004;
            double t25005 = 1/sqrt(t24954);
            double t25006 = t24955*4.0;
            double t25007 = c*c0*t24743*t24951*t24952*t24953*t24899*(8.0/3.0);
            double t25008 = t25006+t25007+6.0;
            double t25009 = c*c0*t24771*t24951*t24952*t24953*t24968*t24969*t24899*(2.0/9.0);
            double t25010 = a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24953*t24775*t24968*t24969*(1.4E1/9.0) \
               ;
            double t25011 = c*c0*t24743*t24951*t24952*t24953*t24962*t24968*t24969*t24899*(2.0/3.0);
            double t25012 = c*c0*t24744*t24951*t24745*t24952*t24782*t24953*t24747*t24968*t24969*t24899*(6.4E1/ \
               9.0);
            double t25034 = c*c0*t24743*t24951*t24952*t24939*t24958*t24968*t24969*t24899*(4.0/3.0);
            double t25035 = c0*kab1*rab1*t24941*t24951*t24961*t24953*t24927*t24796*t24895*t24968*t24969*t24899* \
               (1.6E1/4.5E1);
            double t25013 = t24960-t24963-t24964+t24957+t24959+t25010+t25011+t25012-t25034-t25035+t25009;
            double t25014 = c*c0*t24743*t24951*t24952*t24953*t24968*t24969*t24899*(2.0/3.0);
            double t25015 = t25014+1.0;
            double t25016 = 1/(t24995*t24995);
            double t25017 = 1/pow(t24954,3.0/2.0);
            double t25018 = t24962*t25005*3.0;
            double t25019 = c*c0*t24771*t24951*t24952*t24953*t24899*(4.0/3.0);
            double t25020 = a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24953*t24775*(2.8E1/3.0);
            double t25021 = c*c0*t24744*t24951*t24745*t24952*t24782*t24953*t24747*t24899*(1.28E2/3.0);
            double t25023 = c*c0*t24743*t24951*t24952*t24939*t24958*t24899*8.0;
            double t25024 = c0*kab1*rab1*t24941*t24951*t24961*t24953*t24927*t24796*t24895*t24899*(3.2E1/1.5E1) \
               ;
            double t25022 = t25020+t25021-t25023-t25024+t25018+t25019;
            double t25025 = t24962*t25005*2.0;
            double t25026 = c*c0*t24771*t24951*t24952*t24953*t24899*(8.0/9.0);
            double t25027 = a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24953*t24775*(5.6E1/9.0);
            double t25028 = c*c0*t24744*t24951*t24745*t24952*t24782*t24953*t24747*t24899*(2.56E2/9.0);
            double t25036 = c*c0*t24743*t24951*t24952*t24939*t24958*t24899*(1.6E1/3.0);
            double t25037 = c0*kab1*rab1*t24941*t24951*t24961*t24953*t24927*t24796*t24895*t24899*(6.4E1/4.5E1) \
               ;
            double t25029 = t25025+t25026+t25027-t25036+t25028-t25037;
            double t25030 = 1/t24899;
            double t25031 = exp(-t24950);
            double t25032 = t24897*t24897;
            double t25033 = t24902*t24902;
            double t25038 = 0.0 ;
            double t25039 = t24944*t24944;
            double t25040 = t24968*t24969;
            double t25041 = t24996*t25015*t25008;
            double t25042 = t25040+t25041;
            double t25043 = c*c0*t24751*(8.0/2.7E1);
            double t25044 = t24900*t24902*t24911*t24744*t24745*t24747*t24875*t24897*(3.04E7/9.0);
            double t25045 = t24900*t24911*t24806*t24744*t24745*t24747*t24939*t24897*(3.2E6/3.0);
            double t25046 = kab1*t24900*t24902*t24911*t24796*t24895*t24797*t24977*t24979*(6.4E4/9.0);
            double t25047 = a3*a3;
            double t25048 = 1/pow(t24899,5.0/2.0);
            double t25049 = 1/pow(rho_a[index],1.3E1/3.0);
            double t25050 = a3*gamma_aa[index]*t24902*t24911*t24750*t24742*t24942*t24897*t25049*(3.5E6/9.0);
            double t25051 = a3*gamma_aa[index]*t24911*t24750*t24921*t24742*t24942*t24939*t24897*(7.0E5/3.0);
            double t25052 = kab1*rab1*t24810*t24900*t24902*t24911*t24796*t24895*t24797*(1.6E4/9.0);
            double t25053 = 1/pow(rho_a[index],2.9E1/3.0);
            double t25054 = a3*gamma_aa[index]*kab1*rab1*t24902*t24911*t24742*t24941*t24942*t24819*t24895*(5.6E5/ \
               9.0);
            double t25055 = c*kab1*rab1*t24900*t24902*t24911*t24822*t24941*t24744*t24745*t24747*t24895*(2.56E6/ \
               9.0);
            double t25056 = t25050+t25051+t25043+t25052+t25044+t25045+t25054+t25046+t25055-t24900*t24911*t24967* \
               t24897*1.0E5-t24900*t24902*t24911*t24804*t24805*t24876*t24976*t24897*(2.56E7/9.0)-c*kab1*rab1*t24900* \
               t24902*t24911*t24751*t24941*t24895*(3.2E5/9.0)-c*kab1*rab1*t24900*t24911*t24941*t24771*t24939*t24895* \
               (1.6E5/3.0)-t24902*t24911*t24745*t24782*t24747*t24946*t24897*t25047*t25048*(1.225E6/3.0)-a3*gamma_aa[index]* \
               t24902*t24911*t24750*t24742*t24744*t24942*t24745*t24747*t24897*t25053*(1.12E7/9.0);
            double t25057 = t24996*t25013*t25008;
            double t25058 = t24962*t24968*t24969;
            double t25059 = t24996*t25015*t25029;
            double t25060 = t24750*t24881*t24962*t24885*t25030*t25031*t25032*t25033*(3.0/2.0);
            double t25061 = t25060+t25057+t25058+t25059-t25022*t25015*t25016*t25008;
            v_rho_a_rho_a_[index] = -rho_a[index]*(c0*t24929*(t24996*t25008*(t24970+t24980+t24981+t24973+t24982+ \
               t24974+t24983+t24975+t24987+t24988+t24989-t24998-t24999-t25000-t25001-t25002-t25003-t25004+t24962* \
               t24956*(1.0/3.0)-(t24962*t24939*2.0)/t24902+t24806*t24744*t24745*t24962*t24747*(3.2E1/3.0)+a3*gamma_aa[index]* \
               t24750*t24921*t24742*t24962*t25030*(7.0/3.0)-(c*kab1*rab1*t24941*t24771*t24962*t24895*(8.0/1.5E1)) \
               /t24897+c*c0*t24751*t24951*t24952*t24953*t24968*t24969*t24899*(8.0/2.7E1)+a3*c0*gamma_aa[index]*t24742* \
               t24951*t24952*t24953*t24819*t24968*t24969*(5.6E1/9.0)+c*c0*t24743*t24951*t24952*t24953*t24980*t24968* \
               t24969*t24899*(2.0/3.0)+c*c0*t24743*t24951*t24952*t24971*t24972*t24968*t24969*t24899*4.0+c*c0*t24771* \
               t24951*t24952*t24953*t24962*t24968*t24969*t24899*(4.0/9.0)+c*c0*t24743*t24951*t24952*t24953*t24968* \
               t24969*t24997*t24899*(2.0/3.0)-c*c0*t24743*t24951*t24952*t24958*t24967*t24968*t24969*t24899*(4.0/3.0) \
               -c*c0*t24771*t24951*t24952*t24939*t24958*t24968*t24969*t24899*(8.0/9.0)+a3*c0*gamma_aa[index]*t24742* \
               t24951*t24952*t24953*t24962*t24775*t24968*t24969*(2.8E1/9.0)-a3*c0*gamma_aa[index]*t24742*t24951*t24952* \
               t24775*t24939*t24958*t24968*t24969*(5.6E1/9.0)-c*c0*t24743*t24951*t24952*t24962*t24939*t24958*t24968* \
               t24969*t24899*(8.0/3.0)+c*c0*t24821*t24804*t24805*t24951*t24952*t24953*t24976*t24968*t24969*t24899* \
               (2.048E3/2.7E1)+c*c0*t24822*t24744*t24951*t24745*t24952*t24953*t24747*t24968*t24969*t24899*(4.48E2/ \
               9.0)+a3*c0*gamma_aa[index]*t24820*t24742*t24744*t24951*t24745*t24952*t24953*t24747*t24968*t24969*(8.96E2/ \
               2.7E1)+c*c0*t24744*t24951*t24745*t24952*t24782*t24953*t24962*t24747*t24968*t24969*t24899*(1.28E2/9.0) \
               -c*c0*t24744*t24951*t24745*t24952*t24782*t24747*t24939*t24958*t24968*t24969*t24899*(2.56E2/9.0)-c0* \
               kab1*rab1*t24941*t24951*t24961*t24953*t24796*t24895*t24797*t24968*t24969*t24899*(3.2E1/4.5E1)+c*c0* \
               kab1*rab1*t24810*t24951*t24961*t24953*t24796*t24895*t24968*t24969*t24978*t24899*(1.6E1/6.75E2)+c*c0* \
               kab1*t24951*t24961*t24953*t24796*t24895*t24968*t24977*t24969*t24978*t24979*t24899*(6.4E1/6.75E2)+c* \
               c0*t24951*t24953*t24984*t24796*t24985*t24968*t24977*t24986*t24969*t24978*t24979*t24899*(6.4E1/2.25E2) \
               -c0*kab1*rab1*t24941*t24951*t24961*t24953*t24962*t24927*t24796*t24895*t24968*t24969*t24899*(3.2E1/ \
               4.5E1)+c0*kab1*rab1*t24941*t24951*t24961*t24927*t24939*t24796*t24895*t24958*t24968*t24969*t24899*(6.4E1/ \
               4.5E1)-a3*c*c0*gamma_aa[index]*kab1*rab1*t24742*t24941*t24951*t24961*t24953*t24990*t24895*t24968*t24969* \
               (2.24E2/1.35E2)-c0*kab1*rab1*t24941*t24744*t24951*t24745*t24961*t24953*t24747*t24992*t24796*t24895* \
               t24968*t24969*t24899*(1.024E3/1.35E2))+t24980*t24968*t24969+t24968*t24969*t24997+t24996*t25013*t25029* \
               2.0+t24996*t25015*(-t24980*t25017+t24997*t25005*2.0+c*c0*t24751*t24951*t24952*t24953*t24899*(3.2E1/ \
               2.7E1)+a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24953*t24819*(2.24E2/9.0)+c*c0*t24743*t24951*t24952* \
               t24971*t24972*t24899*1.6E1-c*c0*t24743*t24951*t24952*t24958*t24967*t24899*(1.6E1/3.0)-c*c0*t24771* \
               t24951*t24952*t24939*t24958*t24899*(3.2E1/9.0)-a3*c0*gamma_aa[index]*t24742*t24951*t24952*t24775*t24939* \
               t24958*(2.24E2/9.0)+c*c0*t24821*t24804*t24805*t24951*t24952*t24953*t24976*t24899*(8.192E3/2.7E1)+c* \
               c0*t24822*t24744*t24951*t24745*t24952*t24953*t24747*t24899*(1.792E3/9.0)+a3*c0*gamma_aa[index]*t24820* \
               t24742*t24744*t24951*t24745*t24952*t24953*t24747*(3.584E3/2.7E1)-c*c0*t24744*t24951*t24745*t24952* \
               t24782*t24747*t24939*t24958*t24899*(1.024E3/9.0)-c0*kab1*rab1*t24941*t24951*t24961*t24953*t24796*t24895* \
               t24797*t24899*(1.28E2/4.5E1)+c*c0*kab1*rab1*t24810*t24951*t24961*t24953*t24796*t24895*t24978*t24899* \
               (6.4E1/6.75E2)+c*c0*kab1*t24951*t24961*t24953*t24796*t24895*t24977*t24978*t24979*t24899*(2.56E2/6.75E2) \
               +c*c0*t24951*t24953*t24984*t24796*t24985*t24977*t24986*t24978*t24979*t24899*(2.56E2/2.25E2)+c0*kab1* \
               rab1*t24941*t24951*t24961*t24927*t24939*t24796*t24895*t24958*t24899*(2.56E2/4.5E1)-a3*c*c0*gamma_aa[index]* \
               kab1*rab1*t24742*t24941*t24951*t24961*t24953*t24990*t24895*(8.96E2/1.35E2)-c0*kab1*rab1*t24941*t24744* \
               t24951*t24745*t24961*t24953*t24747*t24992*t24796*t24895*t24899*(4.096E3/1.35E2))-t25013*t25022*t25016* \
               t25008*2.0-t25022*t25015*t25016*t25029*2.0-t25015*t25016*t25008*(t24980*t25017*(-3.0/2.0)+t24997*t25005* \
               3.0+c*c0*t24751*t24951*t24952*t24953*t24899*(1.6E1/9.0)+a3*c0*gamma_aa[index]*t24742*t24951*t24952* \
               t24953*t24819*(1.12E2/3.0)+c*c0*t24743*t24951*t24952*t24971*t24972*t24899*2.4E1-c*c0*t24743*t24951* \
               t24952*t24958*t24967*t24899*8.0-c*c0*t24771*t24951*t24952*t24939*t24958*t24899*(1.6E1/3.0)-a3*c0*gamma_aa[index]* \
               t24742*t24951*t24952*t24775*t24939*t24958*(1.12E2/3.0)+c*c0*t24821*t24804*t24805*t24951*t24952*t24953* \
               t24976*t24899*(4.096E3/9.0)+c*c0*t24822*t24744*t24951*t24745*t24952*t24953*t24747*t24899*(8.96E2/3.0) \
               +a3*c0*gamma_aa[index]*t24820*t24742*t24744*t24951*t24745*t24952*t24953*t24747*(1.792E3/9.0)-c*c0* \
               t24744*t24951*t24745*t24952*t24782*t24747*t24939*t24958*t24899*(5.12E2/3.0)-c0*kab1*rab1*t24941*t24951* \
               t24961*t24953*t24796*t24895*t24797*t24899*(6.4E1/1.5E1)+c*c0*kab1*rab1*t24810*t24951*t24961*t24953* \
               t24796*t24895*t24978*t24899*(3.2E1/2.25E2)+c*c0*kab1*t24951*t24961*t24953*t24796*t24895*t24977*t24978* \
               t24979*t24899*(1.28E2/2.25E2)+c*c0*t24951*t24953*t24984*t24796*t24985*t24977*t24986*t24978*t24979* \
               t24899*(1.28E2/7.5E1)+c0*kab1*rab1*t24941*t24951*t24961*t24927*t24939*t24796*t24895*t24958*t24899* \
               (1.28E2/1.5E1)-a3*c*c0*gamma_aa[index]*kab1*rab1*t24742*t24941*t24951*t24961*t24953*t24990*t24895* \
               (4.48E2/4.5E1)-c0*kab1*rab1*t24941*t24744*t24951*t24745*t24961*t24953*t24747*t24992*t24796*t24895* \
               t24899*(2.048E3/4.5E1))+1/(t24995*t24995*t24995)*(t25022*t25022)*t25015*t25008*2.0+t24750*t24881*t24980* \
               t24885*t25030*t25031*t25032*t25033*(3.0/2.0)-t24750*t24881*t24962*t24879*t25030*t25031*t25032*t25033* \
               (1.0/2.0)+t24750*t24881*t24885*t24997*t25030*t25031*t25032*t25033*(3.0/2.0)+t24902*t24750*t24881*t24962* \
               t24885*t24939*t25030*t25031*t25032*3.0+kab1*rab1*t24941*t24881*t24962*t24956*t24895*t24897*t25030* \
               t25031*t25033*(4.0/5.0)-t24750*t24744*t24745*t24881*t24962*t24747*t24891*t25030*t25031*t25032*t25033* \
               1.6E1-a3*gamma_aa[index]*t24742*t24881*t24962*t24946*t24978*1/(t24899*t24899)*t25031*t25032*t25033* \
               (7.0/2.0))*(-1.0/2.0)+c0*t24944*t24945*t25061+c0*t24945*t25042*t25056*(1.0/2.0)+c0*t25042*t25038*t25039* \
               (1.0/2.0))-rho_a[index]*(c0*t24907*t24929*(t24841*t24794*(-t24873*t24874*t24768+t24872*t24768*t24795* \
               2.0+t24803*t24804*t24805*t24774*t24876*t24789*(2.048E3/9.0)-t24745*t24773*t24747*t24774*t24749*t24875* \
               (1.216E3/9.0)+c*c0*t24751*t24754*t24773*t24758*t24767*(3.2E1/2.7E1)-t24802*t24806*t24745*t24773*t24747* \
               t24749*t24795*(6.4E1/3.0)+a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24819*t24767*(2.24E2/9.0)-c* \
               c0*t24743*t24816*t24754*t24781*t24773*t24758*(1.6E1/3.0)+c*c0*t24771*t24780*t24754*t24781*t24773*t24758* \
               (3.2E1/9.0)+c*c0*t24743*t24754*t24817*t24773*t24818*t24758*1.6E1+a5*c0*gamma_aa[index]*t24742*t24780* \
               t24754*t24781*t24773*t24775*(2.24E2/9.0)+c*c0*t24803*t24821*t24804*t24805*t24754*t24773*t24758*t24767* \
               (8.192E3/2.7E1)+c*c0*t24803*t24821*t24804*t24805*t24754*t24828*t24758*t24767*(4.096E3/9.0)-c*c0*t24803* \
               t24821*t24804*t24805*t24754*t24758*t24767*t24789*(1.6384E4/2.7E1)+c*c0*t24822*t24745*t24754*t24773* \
               t24747*t24749*t24758*t24767*(1.792E3/9.0)-c*c0*t24822*t24745*t24754*t24747*t24749*t24758*t24767*t24789* \
               (1.792E3/9.0)+a5*c0*gamma_aa[index]*t24820*t24742*t24745*t24754*t24773*t24747*t24749*t24767*(3.584E3/ \
               2.7E1)-a5*c0*gamma_aa[index]*t24820*t24742*t24745*t24754*t24747*t24749*t24767*t24789*(3.584E3/2.7E1) \
               +c*c0*t24780*t24745*t24754*t24781*t24773*t24782*t24747*t24749*t24758*(1.024E3/9.0)-c*c0*t24780*t24745* \
               t24754*t24781*t24782*t24747*t24749*t24758*t24789*(1.024E3/9.0))+t24827*t24784*t24785+t24847*t24892* \
               t24794*2.0+t24784*t24785*t24839+t24851*t24794*(t24830+t24831+t24832+t24833+t24834+t24835+t24827+t24836- \
               t24890+t24837+t24829+t24838-t24886-t24887-t24888-t24889+t24823*t24956*(1.0/3.0)+(t24823*t24780*2.0) \
               /t24766+t24823*t24806*t24745*t24747*t24749*(3.2E1/3.0)-t24823*t24806*t24745*t24747*t24749*t24768*(3.2E1/ \
               3.0)+a5*gamma_aa[index]*t24750*t24921*t24742*t24823*t24880*(7.0/3.0)+c*c0*t24751*t24754*t24773*t24784* \
               t24758*t24767*t24785*(8.0/2.7E1)+a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24819*t24784*t24767*t24785* \
               (5.6E1/9.0)-c*c0*t24743*t24816*t24754*t24781*t24773*t24784*t24758*t24785*(4.0/3.0)+c*c0*t24771*t24780* \
               t24754*t24781*t24773*t24784*t24758*t24785*(8.0/9.0)+c*c0*t24743*t24754*t24817*t24773*t24818*t24784* \
               t24758*t24785*4.0+c*c0*t24823*t24771*t24754*t24773*t24784*t24758*t24767*t24785*(4.0/9.0)+c*c0*t24743* \
               t24754*t24773*t24827*t24784*t24758*t24767*t24785*(2.0/3.0)+c*c0*t24743*t24754*t24773*t24784*t24758* \
               t24767*t24785*t24839*(2.0/3.0)+a5*c0*gamma_aa[index]*t24742*t24780*t24754*t24781*t24773*t24775*t24784* \
               t24785*(5.6E1/9.0)+a5*c0*gamma_aa[index]*t24742*t24823*t24754*t24773*t24775*t24784*t24767*t24785*(2.8E1/ \
               9.0)+c*c0*t24823*t24743*t24780*t24754*t24781*t24773*t24784*t24758*t24785*(8.0/3.0)+c*c0*t24803*t24821* \
               t24804*t24805*t24754*t24773*t24784*t24758*t24767*t24785*(2.048E3/2.7E1)+c*c0*t24803*t24821*t24804* \
               t24805*t24754*t24828*t24784*t24758*t24767*t24785*(1.024E3/9.0)-c*c0*t24803*t24821*t24804*t24805*t24754* \
               t24784*t24758*t24767*t24785*t24789*(4.096E3/2.7E1)+c*c0*t24822*t24745*t24754*t24773*t24747*t24784* \
               t24749*t24758*t24767*t24785*(4.48E2/9.0)-c*c0*t24822*t24745*t24754*t24747*t24784*t24749*t24758*t24767* \
               t24785*t24789*(4.48E2/9.0)+a5*c0*gamma_aa[index]*t24820*t24742*t24745*t24754*t24773*t24747*t24784* \
               t24749*t24767*t24785*(8.96E2/2.7E1)-a5*c0*gamma_aa[index]*t24820*t24742*t24745*t24754*t24747*t24784* \
               t24749*t24767*t24785*t24789*(8.96E2/2.7E1)+c*c0*t24780*t24745*t24754*t24781*t24773*t24782*t24747*t24784* \
               t24749*t24758*t24785*(2.56E2/9.0)+c*c0*t24823*t24745*t24754*t24773*t24782*t24747*t24784*t24749*t24758* \
               t24767*t24785*(1.28E2/9.0)-c*c0*t24780*t24745*t24754*t24781*t24782*t24747*t24784*t24749*t24758*t24785* \
               t24789*(2.56E2/9.0)-c*c0*t24823*t24745*t24754*t24782*t24747*t24784*t24749*t24758*t24767*t24785*t24789* \
               (1.28E2/9.0))-t24841*t24851*t24848*(t24873*t24874*t24768*(-3.0/2.0)+t24872*t24768*t24795*3.0+t24803* \
               t24804*t24805*t24774*t24876*t24789*(1.024E3/3.0)-t24745*t24773*t24747*t24774*t24749*t24875*(6.08E2/ \
               3.0)+c*c0*t24751*t24754*t24773*t24758*t24767*(1.6E1/9.0)-t24802*t24806*t24745*t24773*t24747*t24749* \
               t24795*3.2E1+a5*c0*gamma_aa[index]*t24742*t24754*t24773*t24819*t24767*(1.12E2/3.0)-c*c0*t24743*t24816* \
               t24754*t24781*t24773*t24758*8.0+c*c0*t24771*t24780*t24754*t24781*t24773*t24758*(1.6E1/3.0)+c*c0*t24743* \
               t24754*t24817*t24773*t24818*t24758*2.4E1+a5*c0*gamma_aa[index]*t24742*t24780*t24754*t24781*t24773* \
               t24775*(1.12E2/3.0)+c*c0*t24803*t24821*t24804*t24805*t24754*t24773*t24758*t24767*(4.096E3/9.0)+c*c0* \
               t24803*t24821*t24804*t24805*t24754*t24828*t24758*t24767*(2.048E3/3.0)-c*c0*t24803*t24821*t24804*t24805* \
               t24754*t24758*t24767*t24789*(8.192E3/9.0)+c*c0*t24822*t24745*t24754*t24773*t24747*t24749*t24758*t24767* \
               (8.96E2/3.0)-c*c0*t24822*t24745*t24754*t24747*t24749*t24758*t24767*t24789*(8.96E2/3.0)+a5*c0*gamma_aa[index]* \
               t24820*t24742*t24745*t24754*t24773*t24747*t24749*t24767*(1.792E3/9.0)-a5*c0*gamma_aa[index]*t24820* \
               t24742*t24745*t24754*t24747*t24749*t24767*t24789*(1.792E3/9.0)+c*c0*t24780*t24745*t24754*t24781*t24773* \
               t24782*t24747*t24749*t24758*(5.12E2/3.0)-c*c0*t24780*t24745*t24754*t24781*t24782*t24747*t24749*t24758* \
               t24789*(5.12E2/3.0))-t24841*t24847*t24848*t24857*2.0-t24851*t24892*t24848*t24857*2.0+t24841*t24851* \
               1/(t24793*t24793*t24793)*(t24857*t24857)*2.0-t24750*t24823*t24880*t24881*t24882*t24883*t24884*t24879* \
               (1.0/2.0)+t24750*t24880*t24827*t24881*t24882*t24883*t24884*t24885*(3.0/2.0)+t24750*t24880*t24881*t24882* \
               t24883*t24839*t24884*t24885*(3.0/2.0)-t24750*t24823*t24780*t24880*t24881*t24882*t24766*t24883*t24885* \
               3.0+t24750*t24823*t24745*t24880*t24881*t24747*t24756*t24882*t24891*t24749*t24884*1.6E1-t24750*t24823* \
               t24745*t24880*t24881*t24747*t24882*t24891*t24883*t24749*t24884*1.6E1-a5*gamma_aa[index]*t24742*t24823* \
               t24881*t24882*t24883*t24946*1/(t24758*t24758)*t24884*t24978*(7.0/2.0))*(-1.0/2.0)+c0*t24932*t24907* \
               t24929*(t24906*t24796*t24797*(1.0E1/9.0)-t24923*t24926*t24927*t24796*(8.0/3.0)+1/(t24905*t24905*t24905* \
               t24905)*(t24926*t24926)*t24796*t24879*6.0-t24923*t24796*t24879*(c*k2*t24751*(4.0/9.0)+c*k1*t24751* \
               t24776*(2.0/9.0)-k1*t24812*t24796*t24797*(1.0/3.6E1))*2.0)*(1.0/2.0)+c0*t24920*t24907*t24944*t24945+ \
               c0*t24920*t24907*t24934*t24929+c0*t24932*t24907*t24945*t25056*(1.0/2.0)+c0*t24932*t24907*t25038*t25039* \
               (1.0/2.0)-c0*t24932*t24907*(t24934*t24934)*t24929*(1.0/2.0)-c0*t24932*t24907*t24934*t24944*t24945) \
               -c0*t24929*t25061-c0*t24920*t24907*t24929+c0*t24944*t24945*t25042+c0*t24932*t24907*t24944*t24945+c0* \
               t24932*t24907*t24934*t24929;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t25064 = tspi_m13*tspi_m13;
                double t25065 = 1/pow(rho_a[index],1.0/3.0);
                double t25066 = a2*a2;
                double t25067 = gamma_aa[index]*gamma_aa[index];
                double t25068 = 1/pow(rho_a[index],1.6E1/3.0);
                double t25069 = t25064*t25064;
                double t25070 = c*t25065;
                double t25071 = a4*a4;
                double t25072 = 1/c;
                double t25073 = 1/pow(rho_a[index],7.0/3.0);
                double t25074 = sqrt(t25070);
                double t25075 = t25071*t25067*t25068*t25069*2.0;
                double t25076 = exp(t25075);
                double t25077 = t25071*t25067*t25068*t25069;
                double t25078 = t25077+1.0;
                double t25079 = 1/(t25078*t25078);
                double t25080 = a5*gamma_aa[index]*t25072*t25064*t25073;
                double t25081 = t25080+1.0;
                double t25092 = raa2*t25074;
                double t25082 = exp(-t25092);
                double t25083 = t25082-1.0;
                double t25084 = kaa2*t25083;
                double t25085 = pow(t25070,2.0/5.0);
                double t25093 = raa1*t25085;
                double t25086 = exp(-t25093);
                double t25087 = t25086-1.0;
                double t25088 = kaa1*t25087;
                double t25089 = -kaa0+t25084+t25088;
                double t25090 = 1/(t25089*t25089);
                double t25091 = c*c0*t25081*t25090*t25065*t25076*t25079*(2.0/3.0);
                double t25094 = 1/pow(rho_a[index],8.0/3.0);
                double t25095 = 1/pow(rho_a[index],4.0/3.0);
                double t25096 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t25097 = 1/pow(rho_a[index],2.0E1/3.0);
                double t25098 = 1/(t25078*t25078*t25078);
                double t25099 = t25071*t25071;
                double t25100 = 1/pow(rho_a[index],1.2E1);
                double t25101 = t25069*t25069;
                double t25102 = 1/sqrt(t25070);
                double t25103 = c*kaa2*raa2*t25102*t25082*t25095*(1.0/6.0);
                double t25104 = 1/pow(t25070,3.0/5.0);
                double t25105 = c*kaa1*raa1*t25104*t25086*t25095*(2.0/1.5E1);
                double t25106 = t25103+t25105;
                double t25107 = 1/(t25089*t25089*t25089);
                double t25108 = 1/pow(rho_a[index],1.7E1/3.0);
                double t25109 = 1/t25078;
                double t25110 = c*c0*t25081*t25090*t25065*t25076*(2.0/3.0);
                double t25111 = sqrt(t25110);
                double t25112 = 1/pow(rho_a[index],1.1E1/3.0);
                double t25113 = exp(t25091);
                double t25114 = Ei(-t25091);
                double t25115 = c*c0*t25081*t25090*t25076*t25095*t25079*(2.0/9.0);
                double t25116 = a5*c0*gamma_aa[index]*t25112*t25090*t25064*t25076*t25079*(1.4E1/9.0);
                double t25117 = c*c0*t25106*t25107*t25081*t25065*t25076*t25079*(4.0/3.0);
                double t25118 = c*c0*t25071*t25081*t25090*t25067*t25076*t25069*t25079*t25097*(6.4E1/9.0);
                double t25119 = t25111*t25109*6.0;
                double t25120 = c*c0*t25081*t25090*t25065*t25076*t25079*4.0;
                double t25121 = t25120+t25119+3.0;
                double t25122 = 1/t25121;
                double t25123 = a5*c0*t25090*t25064*t25076*t25094*t25079*(2.0/3.0);
                double t25124 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25108*t25076*t25069*t25079*(8.0/3.0);
                double t25125 = 1/sqrt(t25110);
                double t25128 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25108*t25076*t25069*t25098*(8.0/3.0);
                double t25126 = t25123+t25124-t25128;
                double t25139 = c*c0*t25071*t25081*t25090*t25067*t25076*t25069*t25097*t25098*(6.4E1/9.0);
                double t25127 = t25115+t25116+t25117+t25118-t25139;
                double t25129 = 1/pow(rho_a[index],1.9E1/3.0);
                double t25130 = a5*c0*t25112*t25090*t25064*t25076*t25079*(1.6E1/9.0);
                double t25131 = a5*c0*t25106*t25107*t25064*t25076*t25094*t25079*(4.0/3.0);
                double t25132 = a5*c0*t25071*t25090*t25064*t25067*t25076*t25069*t25096*t25079*(4.0E1/3.0);
                double t25133 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25076*t25069*t25079*t25097*(1.36E2/9.0) \
                   ;
                double t25134 = c*c0*gamma_aa[index]*t25100*t25101*t25081*t25090*t25067*t25076*t25079*t25099*(2.56E2/ \
                   9.0);
                double t25135 = 1/(t25078*t25078*t25078*t25078);
                double t25136 = c*c0*gamma_aa[index]*t25100*t25101*t25081*t25090*t25135*t25067*t25076*t25099*(1.28E2/ \
                   3.0);
                double t25137 = c*c0*gamma_aa[index]*t25106*t25071*t25107*t25081*t25108*t25076*t25069*t25079*(1.6E1/ \
                   3.0);
                double t25140 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25076*t25069*t25097*t25098*(1.36E2/9.0) \
                   ;
                double t25141 = c*c0*gamma_aa[index]*t25100*t25101*t25081*t25090*t25067*t25076*t25098*t25099*(5.12E2/ \
                   9.0);
                double t25142 = c*c0*gamma_aa[index]*t25106*t25071*t25107*t25081*t25108*t25076*t25069*t25098*(1.6E1/ \
                   3.0);
                double t25199 = a5*c0*t25071*t25090*t25064*t25067*t25076*t25069*t25096*t25098*(4.0E1/3.0);
                double t25138 = t25130+t25131-t25140+t25132-t25141+t25133-t25142+t25134+t25136+t25137-t25199;
                double t25143 = a5*c0*t25090*t25064*t25076*t25094*(2.0/3.0);
                double t25144 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25108*t25076*t25069*(8.0/3.0);
                double t25145 = t25143+t25144;
                double t25146 = c*c0*t25081*t25090*t25076*t25095*(2.0/9.0);
                double t25147 = a5*c0*gamma_aa[index]*t25112*t25090*t25064*t25076*(1.4E1/9.0);
                double t25148 = c*c0*t25106*t25107*t25081*t25065*t25076*(4.0/3.0);
                double t25149 = c*c0*t25071*t25081*t25090*t25067*t25076*t25069*t25097*(6.4E1/9.0);
                double t25150 = t25146+t25147+t25148+t25149;
                double t25151 = t25111*t25109*4.0;
                double t25152 = c*c0*t25081*t25090*t25065*t25076*t25079*(8.0/3.0);
                double t25153 = t25151+t25152+6.0;
                double t25154 = a5*c0*t25113*t25114*t25090*t25064*t25076*t25094*t25079*(2.0/3.0);
                double t25155 = c*c0*t25113*t25114*t25081*t25090*t25126*t25065*t25076*t25079*(2.0/3.0);
                double t25156 = c*c0*gamma_aa[index]*t25113*t25114*t25071*t25081*t25090*t25108*t25076*t25069*t25079* \
                   (8.0/3.0);
                double t25157 = c*c0*t25113*t25114*t25081*t25090*t25065*t25076*t25079*(2.0/3.0);
                double t25158 = t25157+1.0;
                double t25159 = 1/(t25121*t25121);
                double t25160 = a5*c0*t25112*t25090*t25064*t25076*(1.6E1/9.0);
                double t25161 = a5*c0*t25106*t25107*t25064*t25076*t25094*(4.0/3.0);
                double t25162 = a5*c0*t25071*t25090*t25064*t25067*t25076*t25069*t25096*(4.0E1/3.0);
                double t25163 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25076*t25069*t25097*(1.36E2/9.0);
                double t25164 = c*c0*gamma_aa[index]*t25100*t25101*t25081*t25090*t25067*t25076*t25099*(2.56E2/9.0) \
                   ;
                double t25165 = c*c0*gamma_aa[index]*t25106*t25071*t25107*t25081*t25108*t25076*t25069*(1.6E1/3.0) \
                   ;
                double t25166 = t25160+t25161+t25162+t25163+t25164+t25165;
                double t25167 = 1/pow(t25110,3.0/2.0);
                double t25168 = 1/pow(rho_a[index],3.5E1/3.0);
                double t25169 = t25125*t25109*t25145*2.0;
                double t25170 = a5*c0*t25090*t25064*t25076*t25094*t25079*(8.0/3.0);
                double t25171 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25108*t25076*t25069*t25079*(3.2E1/3.0) \
                   ;
                double t25233 = gamma_aa[index]*t25111*t25071*t25068*t25069*t25079*8.0;
                double t25234 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25108*t25076*t25069*t25098*(3.2E1/3.0) \
                   ;
                double t25172 = t25170-t25233+t25171-t25234+t25169;
                double t25173 = t25150*t25125*t25109*3.0;
                double t25174 = c*c0*t25081*t25090*t25076*t25095*t25079*(4.0/3.0);
                double t25175 = a5*c0*gamma_aa[index]*t25112*t25090*t25064*t25076*t25079*(2.8E1/3.0);
                double t25176 = c*c0*t25106*t25107*t25081*t25065*t25076*t25079*8.0;
                double t25177 = c*c0*t25071*t25081*t25090*t25067*t25076*t25069*t25079*t25097*(1.28E2/3.0);
                double t25196 = t25111*t25071*t25129*t25067*t25069*t25079*3.2E1;
                double t25197 = c*c0*t25071*t25081*t25090*t25067*t25076*t25069*t25097*t25098*(1.28E2/3.0);
                double t25178 = t25173+t25174+t25175+t25176+t25177-t25196-t25197;
                double t25179 = t25150*t25125*t25109*2.0;
                double t25180 = c*c0*t25081*t25090*t25076*t25095*t25079*(8.0/9.0);
                double t25181 = a5*c0*gamma_aa[index]*t25112*t25090*t25064*t25076*t25079*(5.6E1/9.0);
                double t25182 = c*c0*t25106*t25107*t25081*t25065*t25076*t25079*(1.6E1/3.0);
                double t25183 = c*c0*t25071*t25081*t25090*t25067*t25076*t25069*t25079*t25097*(2.56E2/9.0);
                double t25228 = t25111*t25071*t25129*t25067*t25069*t25079*(6.4E1/3.0);
                double t25229 = c*c0*t25071*t25081*t25090*t25067*t25076*t25069*t25097*t25098*(2.56E2/9.0);
                double t25184 = t25180+t25181+t25182+t25183-t25228-t25229+t25179;
                double t25185 = t25125*t25109*t25145*3.0;
                double t25186 = a5*c0*t25090*t25064*t25076*t25094*t25079*4.0;
                double t25187 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25108*t25076*t25069*t25079*1.6E1;
                double t25194 = gamma_aa[index]*t25111*t25071*t25068*t25069*t25079*1.2E1;
                double t25195 = c*c0*gamma_aa[index]*t25071*t25081*t25090*t25108*t25076*t25069*t25098*1.6E1;
                double t25188 = t25185-t25194+t25186-t25195+t25187;
                double t25189 = c*c0*t25113*t25114*t25081*t25090*t25076*t25095*t25079*(2.0/9.0);
                double t25190 = c*c0*t25113*t25114*t25106*t25107*t25081*t25065*t25076*t25079*(4.0/3.0);
                double t25191 = c*c0*t25113*t25114*t25081*t25090*t25127*t25065*t25076*t25079*(2.0/3.0);
                double t25192 = a5*c0*gamma_aa[index]*t25112*t25113*t25114*t25090*t25064*t25076*t25079*(1.4E1/9.0) \
                   ;
                double t25193 = c*c0*t25113*t25114*t25071*t25081*t25090*t25067*t25076*t25069*t25079*t25097*(6.4E1/ \
                   9.0);
                double t25198 = 1/t25081;
                double t25200 = 1/c0;
                double t25201 = pow(rho_a[index],1.0/3.0);
                double t25202 = exp(-t25075);
                double t25203 = t25078*t25078;
                double t25204 = t25089*t25089;
                double t25205 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t25230 = c*c0*t25113*t25114*t25071*t25081*t25090*t25067*t25076*t25069*t25097*t25098*(6.4E1/ \
                   9.0);
                double t25206 = -t25230+t25115+t25116+t25117+t25118+t25190+t25191+t25192-t25139+t25193+t25189;
                double t25235 = c*c0*gamma_aa[index]*t25113*t25114*t25071*t25081*t25090*t25108*t25076*t25069*t25098* \
                   (8.0/3.0);
                double t25207 = t25123+t25124+t25154-t25235-t25128+t25155+t25156;
                double t25208 = t25066*t25067*t25068*t25069;
                double t25209 = pow(t25070,4.0/5.0);
                double t25226 = rab1*t25209;
                double t25210 = exp(-t25226);
                double t25211 = t25210-1.0;
                double t25227 = kab1*t25211;
                double t25212 = kab0-t25227;
                double t25213 = a3*gamma_aa[index]*t25072*t25064*t25073;
                double t25214 = t25213+1.0;
                double t25215 = 1/sqrt(t25214);
                double t25216 = a1*gamma_aa[index]*t25064*t25094;
                double t25217 = t25216+t25208+1.0;
                double t25218 = c*c;
                double t25219 = 1/pow(rho_a[index],2.0/3.0);
                double t25220 = k1*t25074;
                double t25221 = c*k2*t25065;
                double t25222 = t25220+t25221;
                double t25223 = 1/(t25222*t25222);
                double t25232 = t25223*t25218*t25219;
                double t25224 = exp(-t25232);
                double t25225 = exp(-t25208);
                double t25231 = c*c0*t25065*(2.0/3.0);
                double t25236 = t25212*t25215*t25225*t25217*1.0E5;
                double t25237 = 1/pow(rho_a[index],1.0E1/3.0);
                double t25238 = 1/pow(t25214,3.0/2.0);
                double t25239 = t25066*t25129*t25067*t25069*(1.6E1/3.0);
                double t25240 = a1*gamma_aa[index]*t25112*t25064*(8.0/3.0);
                double t25241 = t25240+t25239;
                double t25242 = a1*t25064*t25094;
                double t25243 = gamma_aa[index]*t25066*t25068*t25069*2.0;
                double t25244 = t25242+t25243;
                double t25245 = 1/(c*c);
                double t25246 = 1/pow(t25070,1.0/5.0);
                double t25247 = t25231-t25236;
                double t25248 = 0.0 ;
                double t25249 = t25113*t25114*t25126;
                double t25250 = t25122*t25172*t25158;
                double t25251 = t25122*t25153*t25207;
                double t25252 = t25200*t25201*t25202*t25203*t25204*t25072*t25126*t25198*(3.0/2.0);
                double t25391 = t25153*t25158*t25159*t25188;
                double t25253 = t25250+t25251+t25252-t25391+t25249;
                double t25254 = t25113*t25114;
                double t25255 = t25122*t25153*t25158;
                double t25256 = t25254+t25255;
                double t25257 = 1/pow(rho_a[index],5.0/3.0);
                double t25258 = t25223*t25218*t25257*(2.0/3.0);
                double t25259 = 1/(t25222*t25222*t25222);
                double t25260 = c*k2*t25095*(1.0/3.0);
                double t25261 = c*k1*t25102*t25095*(1.0/6.0);
                double t25262 = t25260+t25261;
                double t25263 = t25258-t25262*t25218*t25219*t25259*2.0;
                double t25264 = a3*t25212*t25072*t25225*t25064*t25073*t25217*t25238*5.0E4;
                double t25265 = gamma_aa[index]*t25212*t25215*t25225*t25217*t25066*t25068*t25069*2.0E5;
                double t25267 = t25212*t25215*t25225*t25244*1.0E5;
                double t25266 = t25264+t25265-t25267;
                double t25268 = c*c0*t25095*(2.0/9.0);
                double t25269 = t25212*t25215*t25225*t25217*t25066*t25129*t25067*t25069*(1.6E6/3.0);
                double t25270 = a3*gamma_aa[index]*t25212*t25072*t25225*t25064*t25217*t25237*t25238*(3.5E5/3.0);
                double t25380 = t25212*t25241*t25215*t25225*1.0E5;
                double t25381 = c*kab1*rab1*t25210*t25215*t25225*t25217*t25246*t25095*(8.0E4/3.0);
                double t25271 = t25270-t25380-t25381+t25268+t25269;
                double t25272 = -t25231+t25236;
                double t25273 = ( (t25272 > 0.0) ?  1.0 : 0.0 ) ;
                double t25274 = t25066*t25067*t25068*t25069*2.0;
                double t25275 = exp(t25274);
                double t25276 = 1/(t25212*t25212);
                double t25277 = 1/(t25217*t25217);
                double t25278 = c*c0*t25214*t25065*t25275*t25276*t25277*(2.0/3.0);
                double t25279 = 1/(t25217*t25217*t25217);
                double t25280 = exp(t25278);
                double t25281 = Ei(-t25278);
                double t25282 = c*c0*t25214*t25095*t25275*t25276*t25277*(2.0/9.0);
                double t25283 = a3*c0*gamma_aa[index]*t25112*t25064*t25275*t25276*t25277*(1.4E1/9.0);
                double t25284 = c*c0*t25214*t25066*t25067*t25275*t25069*t25276*t25097*t25277*(6.4E1/9.0);
                double t25285 = 1/(t25212*t25212*t25212);
                double t25286 = sqrt(t25278);
                double t25287 = t25286*6.0;
                double t25288 = c*c0*t25214*t25065*t25275*t25276*t25277*4.0;
                double t25289 = t25287+t25288+3.0;
                double t25290 = 1/t25289;
                double t25313 = c*c0*t25214*t25241*t25065*t25275*t25276*t25279*(4.0/3.0);
                double t25314 = c0*kab1*rab1*t25210*t25214*t25218*t25246*t25257*t25275*t25285*t25277*(1.6E1/4.5E1) \
                   ;
                double t25291 = -t25313-t25314+t25282+t25283+t25284;
                double t25292 = 1/sqrt(t25278);
                double t25293 = a3*c0*t25064*t25094*t25275*t25276*t25277*(2.0/3.0);
                double t25294 = c*c0*gamma_aa[index]*t25214*t25108*t25066*t25275*t25069*t25276*t25277*(8.0/3.0);
                double t25296 = c*c0*t25214*t25244*t25065*t25275*t25276*t25279*(4.0/3.0);
                double t25295 = t25293+t25294-t25296;
                double t25297 = a1*t25112*t25064*(8.0/3.0);
                double t25298 = gamma_aa[index]*t25066*t25129*t25069*(3.2E1/3.0);
                double t25299 = t25297+t25298;
                double t25300 = t25066*t25066;
                double t25301 = a3*c0*t25241*t25064*t25094*t25275*t25276*t25279*(4.0/3.0);
                double t25302 = c*c0*t25214*t25244*t25095*t25275*t25276*t25279*(4.0/9.0);
                double t25303 = c*c0*t25214*t25065*t25275*t25276*t25279*t25299*(4.0/3.0);
                double t25304 = 1/(t25217*t25217*t25217*t25217);
                double t25305 = a3*c0*gamma_aa[index]*t25112*t25064*t25244*t25275*t25276*t25279*(2.8E1/9.0);
                double t25306 = c*c0*gamma_aa[index]*t25214*t25241*t25108*t25066*t25275*t25069*t25276*t25279*(1.6E1/ \
                   3.0);
                double t25307 = c*c0*t25214*t25244*t25066*t25067*t25275*t25069*t25276*t25097*t25279*(1.28E2/9.0);
                double t25308 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t25309 = a3*c*c0*kab1*rab1*t25210*t25064*t25308*t25246*t25275*t25285*t25277*(1.6E1/4.5E1);
                double t25310 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t25311 = c0*gamma_aa[index]*kab1*rab1*t25210*t25310*t25214*t25218*t25066*t25246*t25275*t25069* \
                   t25285*t25277*(6.4E1/4.5E1);
                double t25316 = a3*c0*t25112*t25064*t25275*t25276*t25277*(1.6E1/9.0);
                double t25317 = c*c0*t25214*t25241*t25304*t25244*t25065*t25275*t25276*4.0;
                double t25318 = a3*c0*t25064*t25066*t25067*t25275*t25069*t25096*t25276*t25277*(4.0E1/3.0);
                double t25319 = c*c0*gamma_aa[index]*t25214*t25066*t25275*t25069*t25276*t25097*t25277*(1.36E2/9.0) \
                   ;
                double t25320 = c*c0*gamma_aa[index]*t25100*t25101*t25300*t25214*t25067*t25275*t25276*t25277*(2.56E2/ \
                   9.0);
                double t25321 = c0*kab1*rab1*t25210*t25214*t25244*t25218*t25246*t25257*t25275*t25285*t25279*(3.2E1/ \
                   4.5E1);
                double t25312 = t25301+t25302+t25311-t25320+t25303-t25321+t25305+t25306+t25307-t25316-t25317+t25309- \
                   t25318-t25319;
                double t25315 = 1/rho_a[index];
                double t25322 = c*c0*t25214*t25280*t25065*t25281*t25275*t25276*t25277*(2.0/3.0);
                double t25323 = t25322+1.0;
                double t25324 = t25292*t25295*2.0;
                double t25325 = a3*c0*t25064*t25094*t25275*t25276*t25277*(8.0/3.0);
                double t25326 = c*c0*gamma_aa[index]*t25214*t25108*t25066*t25275*t25069*t25276*t25277*(3.2E1/3.0) \
                   ;
                double t25378 = c*c0*t25214*t25244*t25065*t25275*t25276*t25279*(1.6E1/3.0);
                double t25327 = t25324+t25325+t25326-t25378;
                double t25328 = 1/(t25289*t25289);
                double t25329 = t25291*t25292*2.0;
                double t25330 = c*c0*t25214*t25095*t25275*t25276*t25277*(8.0/9.0);
                double t25331 = a3*c0*gamma_aa[index]*t25112*t25064*t25275*t25276*t25277*(5.6E1/9.0);
                double t25332 = c*c0*t25214*t25066*t25067*t25275*t25069*t25276*t25097*t25277*(2.56E2/9.0);
                double t25364 = c*c0*t25214*t25241*t25065*t25275*t25276*t25279*(1.6E1/3.0);
                double t25365 = c0*kab1*rab1*t25210*t25214*t25218*t25246*t25257*t25275*t25285*t25277*(6.4E1/4.5E1) \
                   ;
                double t25333 = t25330+t25331+t25332-t25364+t25329-t25365;
                double t25334 = t25286*4.0;
                double t25335 = c*c0*t25214*t25065*t25275*t25276*t25277*(8.0/3.0);
                double t25336 = t25334+t25335+6.0;
                double t25337 = t25292*t25295*3.0;
                double t25338 = a3*c0*t25064*t25094*t25275*t25276*t25277*4.0;
                double t25339 = c*c0*gamma_aa[index]*t25214*t25108*t25066*t25275*t25069*t25276*t25277*1.6E1;
                double t25355 = c*c0*t25214*t25244*t25065*t25275*t25276*t25279*8.0;
                double t25340 = t25337-t25355+t25338+t25339;
                double t25341 = c*c0*t25214*t25280*t25281*t25095*t25275*t25276*t25277*(2.0/9.0);
                double t25342 = a3*c0*gamma_aa[index]*t25112*t25064*t25280*t25281*t25275*t25276*t25277*(1.4E1/9.0) \
                   ;
                double t25343 = c*c0*t25214*t25280*t25065*t25281*t25291*t25275*t25276*t25277*(2.0/3.0);
                double t25344 = c*c0*t25214*t25280*t25281*t25066*t25067*t25275*t25069*t25276*t25097*t25277*(6.4E1/ \
                   9.0);
                double t25345 = t25291*t25292*3.0;
                double t25346 = c*c0*t25214*t25095*t25275*t25276*t25277*(4.0/3.0);
                double t25347 = a3*c0*gamma_aa[index]*t25112*t25064*t25275*t25276*t25277*(2.8E1/3.0);
                double t25348 = c*c0*t25214*t25066*t25067*t25275*t25069*t25276*t25097*t25277*(1.28E2/3.0);
                double t25356 = c*c0*t25214*t25241*t25065*t25275*t25276*t25279*8.0;
                double t25357 = c0*kab1*rab1*t25210*t25214*t25218*t25246*t25257*t25275*t25285*t25277*(3.2E1/1.5E1) \
                   ;
                double t25349 = t25345+t25346+t25347-t25356+t25348-t25357;
                double t25350 = a3*c0*t25064*t25280*t25281*t25094*t25275*t25276*t25277*(2.0/3.0);
                double t25351 = c*c0*t25214*t25280*t25065*t25281*t25275*t25276*t25277*t25295*(2.0/3.0);
                double t25352 = c*c0*gamma_aa[index]*t25214*t25108*t25280*t25281*t25066*t25275*t25069*t25276*t25277* \
                   (8.0/3.0);
                double t25379 = c*c0*t25214*t25244*t25280*t25065*t25281*t25275*t25276*t25279*(4.0/3.0);
                double t25353 = t25350+t25351+t25352+t25293+t25294-t25296-t25379;
                double t25354 = 1/pow(t25278,3.0/2.0);
                double t25358 = 1/t25214;
                double t25359 = exp(-t25274);
                double t25360 = t25212*t25212;
                double t25361 = t25217*t25217;
                double t25362 = 1/(rho_a[index]*rho_a[index]);
                double t25363 = -t25313-t25314+t25341+t25342+t25343+t25344+t25282+t25283+t25284-c*c0*t25214*t25241* \
                   t25280*t25065*t25281*t25275*t25276*t25279*(4.0/3.0)-c0*kab1*rab1*t25210*t25214*t25280*t25218*t25281* \
                   t25246*t25257*t25275*t25285*t25277*(1.6E1/4.5E1);
                double t25366 = a3*t25212*t25072*t25225*t25064*t25217*t25237*t25238*(3.5E5/3.0);
                double t25367 = a3*t25212*t25241*t25072*t25225*t25064*t25073*t25238*5.0E4;
                double t25368 = gamma_aa[index]*t25212*t25215*t25225*t25217*t25066*t25129*t25069*(3.2E6/3.0);
                double t25369 = gamma_aa[index]*t25212*t25241*t25215*t25225*t25066*t25068*t25069*2.0E5;
                double t25370 = t25212*t25215*t25225*t25244*t25066*t25129*t25067*t25069*(1.6E6/3.0);
                double t25371 = a3*a3;
                double t25372 = 1/pow(t25214,5.0/2.0);
                double t25373 = a3*gamma_aa[index]*t25212*t25072*t25225*t25064*t25244*t25237*t25238*(3.5E5/3.0);
                double t25374 = a3*kab1*rab1*t25210*t25112*t25225*t25064*t25217*t25246*t25238*(4.0E4/3.0);
                double t25375 = 1/pow(rho_a[index],2.6E1/3.0);
                double t25376 = c*gamma_aa[index]*kab1*rab1*t25210*t25215*t25225*t25217*t25066*t25246*t25069*t25097* \
                   (1.6E5/3.0);
                double t25377 = t25370+t25373+t25374+t25366+t25367+t25376+t25368+t25369-t25212*t25215*t25225*t25299* \
                   1.0E5-c*kab1*rab1*t25210*t25215*t25225*t25244*t25246*t25095*(8.0E4/3.0)-gamma_aa[index]*t25101*t25300* \
                   t25212*t25215*t25225*t25217*t25067*t25168*(3.2E6/3.0)-gamma_aa[index]*t25212*t25108*t25225*t25217* \
                   t25245*t25371*t25372*t25069*1.75E5-a3*t25212*t25072*t25225*t25064*t25217*t25066*t25067*t25238*t25069* \
                   t25375*5.0E5;
                double t25382 = 0.0 ;
                double t25383 = t25280*t25281;
                double t25384 = t25323*t25290*t25336;
                double t25385 = t25383+t25384;
                double t25386 = t25323*t25290*t25327;
                double t25387 = t25280*t25281*t25295;
                double t25388 = t25290*t25353*t25336;
                double t25389 = t25200*t25201*t25072*t25360*t25361*t25295*t25358*t25359*(3.0/2.0);
                double t25390 = t25386+t25387+t25388+t25389-t25340*t25323*t25336*t25328;
                v_rho_a_gamma_aa_[index] = rho_a[index]*(c0*t25273*(t25323*t25290*(t25312*t25292*2.0+t25291*t25354* \
                   t25295-a3*c0*t25112*t25064*t25275*t25276*t25277*(6.4E1/9.0)+a3*c0*t25241*t25064*t25094*t25275*t25276* \
                   t25279*(1.6E1/3.0)+c*c0*t25214*t25244*t25095*t25275*t25276*t25279*(1.6E1/9.0)+c*c0*t25214*t25065*t25275* \
                   t25276*t25279*t25299*(1.6E1/3.0)+a3*c0*gamma_aa[index]*t25112*t25064*t25244*t25275*t25276*t25279*(1.12E2/ \
                   9.0)-c*c0*t25214*t25241*t25304*t25244*t25065*t25275*t25276*1.6E1-c*c0*gamma_aa[index]*t25214*t25066* \
                   t25275*t25069*t25276*t25097*t25277*(5.44E2/9.0)-a3*c0*t25064*t25066*t25067*t25275*t25069*t25096*t25276* \
                   t25277*(1.6E2/3.0)-c*c0*gamma_aa[index]*t25100*t25101*t25300*t25214*t25067*t25275*t25276*t25277*(1.024E3/ \
                   9.0)+c*c0*gamma_aa[index]*t25214*t25241*t25108*t25066*t25275*t25069*t25276*t25279*(6.4E1/3.0)+c*c0* \
                   t25214*t25244*t25066*t25067*t25275*t25069*t25276*t25097*t25279*(5.12E2/9.0)+a3*c*c0*kab1*rab1*t25210* \
                   t25064*t25308*t25246*t25275*t25285*t25277*(6.4E1/4.5E1)-c0*kab1*rab1*t25210*t25214*t25244*t25218*t25246* \
                   t25257*t25275*t25285*t25279*(1.28E2/4.5E1)+c0*gamma_aa[index]*kab1*rab1*t25210*t25310*t25214*t25218* \
                   t25066*t25246*t25275*t25069*t25285*t25277*(2.56E2/4.5E1))+t25290*t25336*(t25301+t25302+t25311-t25320+ \
                   t25303-t25321+t25305+t25306+t25307-t25316-t25317+t25309-t25318-t25319-t25315*t25295*(1.0/3.0)-t25291* \
                   t25295+(t25241*t25295*2.0)/t25217-t25066*t25129*t25067*t25069*t25295*(3.2E1/3.0)-a3*gamma_aa[index]* \
                   t25072*t25064*t25237*t25295*t25358*(7.0/3.0)+(c*kab1*rab1*t25210*t25246*t25095*t25295*(8.0/1.5E1)) \
                   /t25212-a3*c0*t25112*t25064*t25280*t25281*t25275*t25276*t25277*(1.6E1/9.0)+a3*c0*t25241*t25064*t25280* \
                   t25281*t25094*t25275*t25276*t25279*(4.0/3.0)-a3*c0*t25064*t25280*t25281*t25291*t25094*t25275*t25276* \
                   t25277*(2.0/3.0)+c*c0*t25312*t25214*t25280*t25065*t25281*t25275*t25276*t25277*(2.0/3.0)+c*c0*t25214* \
                   t25244*t25280*t25281*t25095*t25275*t25276*t25279*(4.0/9.0)-c*c0*t25214*t25280*t25281*t25095*t25275* \
                   t25276*t25277*t25295*(2.0/9.0)+c*c0*t25214*t25280*t25065*t25281*t25275*t25276*t25279*t25299*(4.0/3.0) \
                   +a3*c0*gamma_aa[index]*t25112*t25064*t25244*t25280*t25281*t25275*t25276*t25279*(2.8E1/9.0)-a3*c0*gamma_aa[index]* \
                   t25112*t25064*t25280*t25281*t25275*t25276*t25277*t25295*(1.4E1/9.0)-c*c0*t25214*t25241*t25304*t25244* \
                   t25280*t25065*t25281*t25275*t25276*4.0+c*c0*t25214*t25244*t25280*t25065*t25281*t25291*t25275*t25276* \
                   t25279*(4.0/3.0)+c*c0*t25214*t25241*t25280*t25065*t25281*t25275*t25276*t25295*t25279*(4.0/3.0)-c*c0* \
                   t25214*t25280*t25065*t25281*t25291*t25275*t25276*t25277*t25295*(2.0/3.0)-c*c0*gamma_aa[index]*t25214* \
                   t25280*t25281*t25066*t25275*t25069*t25276*t25097*t25277*(1.36E2/9.0)-a3*c0*t25064*t25280*t25281*t25066* \
                   t25067*t25275*t25069*t25096*t25276*t25277*(4.0E1/3.0)-c*c0*gamma_aa[index]*t25100*t25101*t25300*t25214* \
                   t25280*t25281*t25067*t25275*t25276*t25277*(2.56E2/9.0)+c*c0*gamma_aa[index]*t25214*t25241*t25108*t25280* \
                   t25281*t25066*t25275*t25069*t25276*t25279*(1.6E1/3.0)-c*c0*gamma_aa[index]*t25214*t25108*t25280*t25281* \
                   t25066*t25291*t25275*t25069*t25276*t25277*(8.0/3.0)+c*c0*t25214*t25244*t25280*t25281*t25066*t25067* \
                   t25275*t25069*t25276*t25097*t25279*(1.28E2/9.0)-c*c0*t25214*t25280*t25281*t25066*t25067*t25275*t25069* \
                   t25276*t25097*t25277*t25295*(6.4E1/9.0)+a3*c*c0*kab1*rab1*t25210*t25064*t25280*t25281*t25308*t25246* \
                   t25275*t25285*t25277*(1.6E1/4.5E1)-c0*kab1*rab1*t25210*t25214*t25244*t25280*t25218*t25281*t25246*t25257* \
                   t25275*t25285*t25279*(3.2E1/4.5E1)+c0*kab1*rab1*t25210*t25214*t25280*t25218*t25281*t25246*t25257*t25275* \
                   t25285*t25277*t25295*(1.6E1/4.5E1)+c0*gamma_aa[index]*kab1*rab1*t25210*t25310*t25214*t25280*t25218* \
                   t25281*t25066*t25246*t25275*t25069*t25285*t25277*(6.4E1/4.5E1))+t25312*t25280*t25281-t25333*t25290* \
                   t25353-t25290*t25327*(t25341+t25342+t25343+t25344+t25282+t25283+t25284-c*c0*t25214*t25241*t25065*t25275* \
                   t25276*t25279*(4.0/3.0)-c*c0*t25214*t25241*t25280*t25065*t25281*t25275*t25276*t25279*(4.0/3.0)-c0* \
                   kab1*rab1*t25210*t25214*t25218*t25246*t25257*t25275*t25285*t25277*(1.6E1/4.5E1)-c0*kab1*rab1*t25210* \
                   t25214*t25280*t25218*t25281*t25246*t25257*t25275*t25285*t25277*(1.6E1/4.5E1))+t25340*t25323*t25333* \
                   t25328+t25340*t25336*t25363*t25328+t25323*t25327*t25328*t25349-t25280*t25281*t25291*t25295+t25353* \
                   t25336*t25328*t25349-t25323*t25336*t25328*(t25312*t25292*3.0+t25291*t25354*t25295*(3.0/2.0)-a3*c0* \
                   t25112*t25064*t25275*t25276*t25277*(3.2E1/3.0)+a3*c0*t25241*t25064*t25094*t25275*t25276*t25279*8.0+ \
                   c*c0*t25214*t25244*t25095*t25275*t25276*t25279*(8.0/3.0)+c*c0*t25214*t25065*t25275*t25276*t25279*t25299* \
                   8.0+a3*c0*gamma_aa[index]*t25112*t25064*t25244*t25275*t25276*t25279*(5.6E1/3.0)-c*c0*t25214*t25241* \
                   t25304*t25244*t25065*t25275*t25276*2.4E1-c*c0*gamma_aa[index]*t25214*t25066*t25275*t25069*t25276*t25097* \
                   t25277*(2.72E2/3.0)-a3*c0*t25064*t25066*t25067*t25275*t25069*t25096*t25276*t25277*8.0E1-c*c0*gamma_aa[index]* \
                   t25100*t25101*t25300*t25214*t25067*t25275*t25276*t25277*(5.12E2/3.0)+c*c0*gamma_aa[index]*t25214*t25241* \
                   t25108*t25066*t25275*t25069*t25276*t25279*3.2E1+c*c0*t25214*t25244*t25066*t25067*t25275*t25069*t25276* \
                   t25097*t25279*(2.56E2/3.0)+a3*c*c0*kab1*rab1*t25210*t25064*t25308*t25246*t25275*t25285*t25277*(3.2E1/ \
                   1.5E1)-c0*kab1*rab1*t25210*t25214*t25244*t25218*t25246*t25257*t25275*t25285*t25279*(6.4E1/1.5E1)+c0* \
                   gamma_aa[index]*kab1*rab1*t25210*t25310*t25214*t25218*t25066*t25246*t25275*t25069*t25285*t25277*(1.28E2/ \
                   1.5E1))-t25340*t25323*t25336*t25349*1/(t25289*t25289*t25289)*2.0+t25200*t25201*t25312*t25072*t25360* \
                   t25361*t25358*t25359*(3.0/2.0)-t25200*t25201*t25072*t25360*t25217*t25244*t25291*t25358*t25359*3.0- \
                   t25200*t25201*t25072*t25360*t25361*t25291*t25295*t25358*t25359*(3.0/2.0)+a3*t25200*1/(t25214*t25214) \
                   *t25360*t25064*t25361*t25245*t25362*t25291*t25359*(3.0/2.0)+gamma_aa[index]*t25200*t25205*t25072*t25360* \
                   t25361*t25066*t25291*t25069*t25358*t25359*6.0)*(1.0/2.0)+c0*t25271*t25390*t25248*(1.0/2.0)+c0*t25248* \
                   t25385*t25377*(1.0/2.0)+c0*t25248*t25266*(t25323*t25333*t25290+t25280*t25281*t25291+t25290*t25336* \
                   t25363-t25323*t25336*t25328*t25349+t25200*t25201*t25072*t25360*t25361*t25291*t25358*t25359*(3.0/2.0) \
                   )*(1.0/2.0)+c0*t25271*t25382*t25266*t25385*(1.0/2.0))+rho_a[index]*( ( (c*c0*t25065*(-2.0/3.0)+t25212* \
                   t25215*t25217*exp(-t25066*t25067*t25068*t25069)*1.0E5 > 0.0) ? c0*t25224*1.0*(t25122*t25158*(t25125* \
                   t25109*t25166*2.0-t25150*t25109*t25145*t25167-gamma_aa[index]*t25111*t25071*t25129*t25069*t25079*(1.28E2/ \
                   3.0)+a5*c0*t25112*t25090*t25064*t25076*t25079*(6.4E1/9.0)-gamma_aa[index]*t25150*t25071*t25125*t25068* \
                   t25069*t25079*4.0+gamma_aa[index]*t25101*t25111*t25067*t25168*t25098*t25099*(2.56E2/3.0)-t25071*t25125* \
                   t25145*t25129*t25067*t25069*t25079*(3.2E1/3.0)+a5*c0*t25106*t25107*t25064*t25076*t25094*t25079*(1.6E1/ \
                   3.0)+c*c0*gamma_aa[index]*t25071*t25081*t25090*t25076*t25069*t25079*t25097*(5.44E2/9.0)-c*c0*gamma_aa[index]* \
                   t25071*t25081*t25090*t25076*t25069*t25097*t25098*(5.44E2/9.0)+a5*c0*t25071*t25090*t25064*t25067*t25076* \
                   t25069*t25096*t25079*(1.6E2/3.0)-a5*c0*t25071*t25090*t25064*t25067*t25076*t25069*t25096*t25098*(1.6E2/ \
                   3.0)+c*c0*gamma_aa[index]*t25100*t25101*t25081*t25090*t25135*t25067*t25076*t25099*(5.12E2/3.0)+c*c0* \
                   gamma_aa[index]*t25100*t25101*t25081*t25090*t25067*t25076*t25079*t25099*(1.024E3/9.0)-c*c0*gamma_aa[index]* \
                   t25100*t25101*t25081*t25090*t25067*t25076*t25098*t25099*(2.048E3/9.0)+c*c0*gamma_aa[index]*t25106* \
                   t25071*t25107*t25081*t25108*t25076*t25069*t25079*(6.4E1/3.0)-c*c0*gamma_aa[index]*t25106*t25071*t25107* \
                   t25081*t25108*t25076*t25069*t25098*(6.4E1/3.0))+t25122*t25153*(t25130+t25131-t25140+t25132-t25141+ \
                   t25133-t25142+t25134+t25136+t25137-t25199+t25126*t25315*(1.0/3.0)+t25126*t25127+(t25106*t25126*2.0) \
                   /t25089+t25071*t25126*t25129*t25067*t25069*(3.2E1/3.0)-t25071*t25126*t25109*t25129*t25067*t25069*(3.2E1/ \
                   3.0)+a5*gamma_aa[index]*t25072*t25126*t25064*t25237*t25198*(7.0/3.0)+a5*c0*t25112*t25113*t25114*t25090* \
                   t25064*t25076*t25079*(1.6E1/9.0)+a5*c0*t25113*t25114*t25106*t25107*t25064*t25076*t25094*t25079*(4.0/ \
                   3.0)+a5*c0*t25113*t25114*t25090*t25064*t25127*t25076*t25094*t25079*(2.0/3.0)+c*c0*t25113*t25114*t25081* \
                   t25090*t25126*t25076*t25095*t25079*(2.0/9.0)+c*c0*t25113*t25114*t25081*t25090*t25065*t25138*t25076* \
                   t25079*(2.0/3.0)+a5*c0*gamma_aa[index]*t25112*t25113*t25114*t25090*t25126*t25064*t25076*t25079*(1.4E1/ \
                   9.0)+c*c0*t25113*t25114*t25106*t25107*t25081*t25126*t25065*t25076*t25079*(4.0/3.0)+c*c0*t25113*t25114* \
                   t25081*t25090*t25126*t25127*t25065*t25076*t25079*(2.0/3.0)+c*c0*gamma_aa[index]*t25113*t25114*t25071* \
                   t25081*t25090*t25076*t25069*t25079*t25097*(1.36E2/9.0)-c*c0*gamma_aa[index]*t25113*t25114*t25071*t25081* \
                   t25090*t25076*t25069*t25097*t25098*(1.36E2/9.0)+a5*c0*t25113*t25114*t25071*t25090*t25064*t25067*t25076* \
                   t25069*t25096*t25079*(4.0E1/3.0)-a5*c0*t25113*t25114*t25071*t25090*t25064*t25067*t25076*t25069*t25096* \
                   t25098*(4.0E1/3.0)+c*c0*gamma_aa[index]*t25100*t25101*t25113*t25114*t25081*t25090*t25135*t25067*t25076* \
                   t25099*(1.28E2/3.0)+c*c0*gamma_aa[index]*t25100*t25101*t25113*t25114*t25081*t25090*t25067*t25076*t25079* \
                   t25099*(2.56E2/9.0)-c*c0*gamma_aa[index]*t25100*t25101*t25113*t25114*t25081*t25090*t25067*t25076*t25098* \
                   t25099*(5.12E2/9.0)+c*c0*gamma_aa[index]*t25113*t25114*t25106*t25071*t25107*t25081*t25108*t25076*t25069* \
                   t25079*(1.6E1/3.0)-c*c0*gamma_aa[index]*t25113*t25114*t25106*t25071*t25107*t25081*t25108*t25076*t25069* \
                   t25098*(1.6E1/3.0)+c*c0*gamma_aa[index]*t25113*t25114*t25071*t25081*t25090*t25108*t25127*t25076*t25069* \
                   t25079*(8.0/3.0)-c*c0*gamma_aa[index]*t25113*t25114*t25071*t25081*t25090*t25108*t25127*t25076*t25069* \
                   t25098*(8.0/3.0)+c*c0*t25113*t25114*t25071*t25081*t25090*t25126*t25067*t25076*t25069*t25079*t25097* \
                   (6.4E1/9.0)-c*c0*t25113*t25114*t25071*t25081*t25090*t25126*t25067*t25076*t25069*t25097*t25098*(6.4E1/ \
                   9.0))+t25113*t25114*t25138+t25122*t25206*t25172+t25122*t25207*t25184+t25113*t25114*t25126*t25127-t25206* \
                   t25153*t25159*t25188-t25153*t25207*t25159*t25178-t25172*t25158*t25159*t25178-t25184*t25158*t25159* \
                   t25188-t25153*t25158*t25159*(t25125*t25109*t25166*3.0-t25150*t25109*t25145*t25167*(3.0/2.0)-gamma_aa[index]* \
                   t25111*t25071*t25129*t25069*t25079*6.4E1+a5*c0*t25112*t25090*t25064*t25076*t25079*(3.2E1/3.0)-gamma_aa[index]* \
                   t25150*t25071*t25125*t25068*t25069*t25079*6.0+gamma_aa[index]*t25101*t25111*t25067*t25168*t25098*t25099* \
                   1.28E2-t25071*t25125*t25145*t25129*t25067*t25069*t25079*1.6E1+a5*c0*t25106*t25107*t25064*t25076*t25094* \
                   t25079*8.0+c*c0*gamma_aa[index]*t25071*t25081*t25090*t25076*t25069*t25079*t25097*(2.72E2/3.0)-c*c0* \
                   gamma_aa[index]*t25071*t25081*t25090*t25076*t25069*t25097*t25098*(2.72E2/3.0)+a5*c0*t25071*t25090* \
                   t25064*t25067*t25076*t25069*t25096*t25079*8.0E1-a5*c0*t25071*t25090*t25064*t25067*t25076*t25069*t25096* \
                   t25098*8.0E1+c*c0*gamma_aa[index]*t25100*t25101*t25081*t25090*t25135*t25067*t25076*t25099*2.56E2+c* \
                   c0*gamma_aa[index]*t25100*t25101*t25081*t25090*t25067*t25076*t25079*t25099*(5.12E2/3.0)-c*c0*gamma_aa[index]* \
                   t25100*t25101*t25081*t25090*t25067*t25076*t25098*t25099*(1.024E3/3.0)+c*c0*gamma_aa[index]*t25106* \
                   t25071*t25107*t25081*t25108*t25076*t25069*t25079*3.2E1-c*c0*gamma_aa[index]*t25106*t25071*t25107*t25081* \
                   t25108*t25076*t25069*t25098*3.2E1)+1/(t25121*t25121*t25121)*t25153*t25158*t25178*t25188*2.0+t25200* \
                   t25201*t25202*t25203*t25204*t25072*t25138*t25198*(3.0/2.0)+t25200*t25201*t25202*t25203*t25204*t25072* \
                   t25126*t25127*t25198*(3.0/2.0)-a5*t25200*t25202*t25203*t25204*1/(t25081*t25081)*t25064*t25127*t25245* \
                   t25362*(3.0/2.0)-gamma_aa[index]*t25200*t25202*t25203*t25204*t25205*t25071*t25072*t25127*t25069*t25198* \
                   6.0+gamma_aa[index]*t25200*t25202*t25204*t25205*t25071*t25072*t25127*t25069*t25078*t25198*6.0)*(-1.0/ \
                   2.0) : 0.0 ) +c0*t25224*t25253*t25263*t25273*(1.0/2.0)+c0*t25224*t25253*t25271*t25248*(1.0/2.0)+c0* \
                   t25224*t25256*t25248*t25377*(1.0/2.0)+ 0.0 +c0*t25224*t25271*t25256*t25382*t25266*(1.0/2.0)-c0*t25224* \
                   t25263*t25256*t25248*t25266*(1.0/2.0))+c0*t25273*t25390*(1.0/2.0)+c0*t25224*t25253*t25273*(1.0/2.0) \
                   -c0*t25248*t25266*t25385*(1.0/2.0)-c0*t25224*t25256*t25248*t25266*(1.0/2.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t25393 = tspi_m13*tspi_m13;
                double t25394 = 1/pow(rho_a[index],1.0/3.0);
                double t25395 = a2*a2;
                double t25396 = gamma_aa[index]*gamma_aa[index];
                double t25397 = 1/pow(rho_a[index],1.6E1/3.0);
                double t25398 = t25393*t25393;
                double t25399 = c*t25394;
                double t25400 = pow(t25399,4.0/5.0);
                double t25414 = rab1*t25400;
                double t25401 = exp(-t25414);
                double t25402 = t25401-1.0;
                double t25415 = kab1*t25402;
                double t25403 = kab0-t25415;
                double t25404 = 1/c;
                double t25405 = 1/pow(rho_a[index],7.0/3.0);
                double t25406 = a3*gamma_aa[index]*t25404*t25405*t25393;
                double t25407 = t25406+1.0;
                double t25408 = t25395*t25396*t25397*t25398;
                double t25409 = 1/pow(rho_a[index],8.0/3.0);
                double t25410 = a1*gamma_aa[index]*t25409*t25393;
                double t25411 = t25410+t25408+1.0;
                double t25412 = t25395*t25396*t25397*t25398*2.0;
                double t25413 = exp(t25412);
                double t25416 = 1/(t25403*t25403);
                double t25417 = 1/(t25411*t25411);
                double t25418 = c*c0*t25413*t25407*t25416*t25417*t25394*(2.0/3.0);
                double t25419 = a1*t25409*t25393;
                double t25420 = gamma_aa[index]*t25395*t25397*t25398*2.0;
                double t25421 = t25420+t25419;
                double t25422 = 1/pow(rho_a[index],1.7E1/3.0);
                double t25423 = 1/(t25411*t25411*t25411);
                double t25424 = sqrt(t25418);
                double t25426 = a3*c0*t25413*t25416*t25417*t25409*t25393*(2.0/3.0);
                double t25427 = c*c0*t25421*t25413*t25423*t25407*t25416*t25394*(4.0/3.0);
                double t25428 = c*c0*gamma_aa[index]*t25413*t25422*t25407*t25416*t25417*t25395*t25398*(8.0/3.0);
                double t25425 = t25426-t25427+t25428;
                double t25429 = t25421*t25421;
                double t25430 = 1/(t25411*t25411*t25411*t25411);
                double t25431 = c*c0*t25430*t25413*t25407*t25416*t25429*t25394*4.0;
                double t25432 = c*c0*t25413*t25422*t25407*t25416*t25417*t25395*t25398*(8.0/3.0);
                double t25433 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t25434 = a3*c0*gamma_aa[index]*t25413*t25433*t25416*t25417*t25393*t25395*t25398*(1.6E1/3.0) \
                   ;
                double t25435 = exp(t25418);
                double t25436 = Ei(-t25418);
                double t25437 = t25395*t25395;
                double t25438 = 1/pow(rho_a[index],1.1E1);
                double t25439 = t25398*t25398;
                double t25440 = c*c0*t25413*t25407*t25416*t25417*t25437*t25438*t25439*t25396*(3.2E1/3.0);
                double t25443 = c*c0*gamma_aa[index]*t25421*t25413*t25422*t25423*t25407*t25416*t25395*t25398*(3.2E1/ \
                   3.0);
                double t25448 = a3*c0*t25421*t25413*t25423*t25416*t25409*t25393*(8.0/3.0);
                double t25449 = c*c0*t25413*t25422*t25423*t25407*t25416*t25395*t25398*(8.0/3.0);
                double t25441 = t25431+t25440+t25432+t25434-t25443-t25448-t25449;
                double t25442 = t25425*t25425;
                double t25444 = t25424*6.0;
                double t25445 = c*c0*t25413*t25407*t25416*t25417*t25394*4.0;
                double t25446 = t25444+t25445+3.0;
                double t25447 = 1/t25446;
                double t25450 = 1/sqrt(t25418);
                double t25451 = c*c0*t25413*t25407*t25416*t25417*t25435*t25436*t25394*(2.0/3.0);
                double t25452 = t25451+1.0;
                double t25453 = t25450*t25425*2.0;
                double t25454 = a3*c0*t25413*t25416*t25417*t25409*t25393*(8.0/3.0);
                double t25455 = c*c0*gamma_aa[index]*t25413*t25422*t25407*t25416*t25417*t25395*t25398*(3.2E1/3.0) \
                   ;
                double t25492 = c*c0*t25421*t25413*t25423*t25407*t25416*t25394*(1.6E1/3.0);
                double t25456 = t25453+t25454+t25455-t25492;
                double t25457 = 1/(t25446*t25446);
                double t25458 = t25424*4.0;
                double t25459 = c*c0*t25413*t25407*t25416*t25417*t25394*(8.0/3.0);
                double t25460 = t25458+t25459+6.0;
                double t25461 = 1/pow(t25418,3.0/2.0);
                double t25462 = t25450*t25425*3.0;
                double t25463 = a3*c0*t25413*t25416*t25417*t25409*t25393*4.0;
                double t25464 = c*c0*gamma_aa[index]*t25413*t25422*t25407*t25416*t25417*t25395*t25398*1.6E1;
                double t25466 = c*c0*t25421*t25413*t25423*t25407*t25416*t25394*8.0;
                double t25465 = t25462+t25463+t25464-t25466;
                double t25467 = a3*c0*t25413*t25416*t25417*t25435*t25409*t25436*t25393*(2.0/3.0);
                double t25468 = c*c0*t25413*t25407*t25416*t25425*t25417*t25435*t25436*t25394*(2.0/3.0);
                double t25469 = c*c0*gamma_aa[index]*t25413*t25422*t25407*t25416*t25417*t25435*t25436*t25395*t25398* \
                   (8.0/3.0);
                double t25493 = c*c0*t25421*t25413*t25423*t25407*t25416*t25435*t25436*t25394*(4.0/3.0);
                double t25470 = t25426-t25427+t25428-t25493+t25467+t25468+t25469;
                double t25471 = 1/t25407;
                double t25472 = 1/c0;
                double t25473 = pow(rho_a[index],1.0/3.0);
                double t25474 = exp(-t25412);
                double t25475 = t25403*t25403;
                double t25476 = t25411*t25411;
                double t25477 = 1/sqrt(t25407);
                double t25478 = exp(-t25408);
                double t25485 = 1/pow(t25407,3.0/2.0);
                double t25489 = t25403*t25421*t25477*t25478*1.0E5;
                double t25490 = a3*t25411*t25403*t25404*t25405*t25393*t25485*t25478*5.0E4;
                double t25491 = gamma_aa[index]*t25411*t25403*t25395*t25477*t25397*t25478*t25398*2.0E5;
                double t25479 = t25490+t25491-t25489;
                double t25480 = c*c0*t25394*(2.0/3.0);
                double t25487 = t25411*t25403*t25477*t25478*1.0E5;
                double t25481 = t25480-t25487;
                double t25482 = t25435*t25436;
                double t25483 = t25460*t25452*t25447;
                double t25484 = t25482+t25483;
                double t25486 = 1/(c*c);
                double t25488 = 0.0 ;
                double t25494 = a4*a4;
                double t25495 = t25494*t25396*t25397*t25398*2.0;
                double t25496 = exp(t25495);
                double t25497 = sqrt(t25399);
                double t25498 = t25494*t25396*t25397*t25398;
                double t25499 = t25498+1.0;
                double t25500 = 1/(t25499*t25499);
                double t25501 = a5*gamma_aa[index]*t25404*t25405*t25393;
                double t25502 = t25501+1.0;
                double t25513 = raa2*t25497;
                double t25503 = exp(-t25513);
                double t25504 = t25503-1.0;
                double t25505 = kaa2*t25504;
                double t25506 = pow(t25399,2.0/5.0);
                double t25514 = raa1*t25506;
                double t25507 = exp(-t25514);
                double t25508 = t25507-1.0;
                double t25509 = kaa1*t25508;
                double t25510 = -kaa0+t25505+t25509;
                double t25511 = 1/(t25510*t25510);
                double t25512 = c*c0*t25500*t25502*t25511*t25394*t25496*(2.0/3.0);
                double t25515 = 1/t25499;
                double t25516 = c*c0*t25502*t25511*t25394*t25496*(2.0/3.0);
                double t25521 = a5*c0*t25511*t25409*t25393*t25496*(2.0/3.0);
                double t25522 = c*c0*gamma_aa[index]*t25502*t25511*t25422*t25494*t25496*t25398*(8.0/3.0);
                double t25517 = t25521+t25522;
                double t25518 = sqrt(t25516);
                double t25519 = t25494*t25494;
                double t25520 = 1/pow(rho_a[index],3.2E1/3.0);
                double t25523 = 1/sqrt(t25516);
                double t25524 = 1/(t25499*t25499*t25499);
                double t25525 = t25515*t25518*6.0;
                double t25526 = c*c0*t25500*t25502*t25511*t25394*t25496*4.0;
                double t25527 = t25525+t25526+3.0;
                double t25528 = 1/t25527;
                double t25530 = a5*c0*t25500*t25511*t25409*t25393*t25496*(2.0/3.0);
                double t25531 = c*c0*gamma_aa[index]*t25500*t25502*t25511*t25422*t25494*t25496*t25398*(8.0/3.0);
                double t25532 = c*c0*gamma_aa[index]*t25502*t25511*t25422*t25524*t25494*t25496*t25398*(8.0/3.0);
                double t25529 = t25530+t25531-t25532;
                double t25533 = exp(t25512);
                double t25534 = Ei(-t25512);
                double t25535 = t25529*t25529;
                double t25536 = 1/(t25499*t25499*t25499*t25499);
                double t25537 = a5*c0*gamma_aa[index]*t25500*t25511*t25433*t25393*t25494*t25496*t25398*(1.6E1/3.0) \
                   ;
                double t25538 = c*c0*t25500*t25502*t25511*t25422*t25494*t25496*t25398*(8.0/3.0);
                double t25539 = c*c0*t25500*t25502*t25511*t25438*t25519*t25439*t25396*t25496*(3.2E1/3.0);
                double t25540 = c*c0*t25502*t25511*t25536*t25438*t25519*t25439*t25396*t25496*1.6E1;
                double t25572 = a5*c0*gamma_aa[index]*t25511*t25433*t25524*t25393*t25494*t25496*t25398*(1.6E1/3.0) \
                   ;
                double t25573 = c*c0*t25502*t25511*t25422*t25524*t25494*t25496*t25398*(8.0/3.0);
                double t25574 = c*c0*t25502*t25511*t25524*t25438*t25519*t25439*t25396*t25496*(6.4E1/3.0);
                double t25541 = t25540-t25572+t25537-t25573+t25538-t25574+t25539;
                double t25542 = t25515*t25518*4.0;
                double t25543 = c*c0*t25500*t25502*t25511*t25394*t25496*(8.0/3.0);
                double t25544 = t25542+t25543+6.0;
                double t25545 = a5*c0*t25500*t25511*t25533*t25534*t25409*t25393*t25496*(2.0/3.0);
                double t25546 = c*c0*t25500*t25502*t25511*t25533*t25534*t25394*t25529*t25496*(2.0/3.0);
                double t25547 = c*c0*gamma_aa[index]*t25500*t25502*t25511*t25422*t25533*t25534*t25494*t25496*t25398* \
                   (8.0/3.0);
                double t25589 = c*c0*gamma_aa[index]*t25502*t25511*t25422*t25524*t25533*t25534*t25494*t25496*t25398* \
                   (8.0/3.0);
                double t25548 = t25530+t25531-t25532+t25545+t25546+t25547-t25589;
                double t25549 = c*c0*t25500*t25502*t25511*t25533*t25534*t25394*t25496*(2.0/3.0);
                double t25550 = t25549+1.0;
                double t25551 = t25523*t25515*t25517*3.0;
                double t25552 = a5*c0*t25500*t25511*t25409*t25393*t25496*4.0;
                double t25553 = c*c0*gamma_aa[index]*t25500*t25502*t25511*t25422*t25494*t25496*t25398*1.6E1;
                double t25556 = gamma_aa[index]*t25500*t25518*t25494*t25397*t25398*1.2E1;
                double t25557 = c*c0*gamma_aa[index]*t25502*t25511*t25422*t25524*t25494*t25496*t25398*1.6E1;
                double t25554 = t25551+t25552+t25553-t25556-t25557;
                double t25555 = 1/(t25527*t25527);
                double t25558 = t25523*t25515*t25517*2.0;
                double t25559 = a5*c0*t25500*t25511*t25409*t25393*t25496*(8.0/3.0);
                double t25560 = c*c0*gamma_aa[index]*t25500*t25502*t25511*t25422*t25494*t25496*t25398*(3.2E1/3.0) \
                   ;
                double t25587 = gamma_aa[index]*t25500*t25518*t25494*t25397*t25398*8.0;
                double t25588 = c*c0*gamma_aa[index]*t25502*t25511*t25422*t25524*t25494*t25496*t25398*(3.2E1/3.0) \
                   ;
                double t25561 = t25560+t25558+t25559-t25587-t25588;
                double t25562 = a5*c0*gamma_aa[index]*t25511*t25433*t25393*t25494*t25496*t25398*(1.6E1/3.0);
                double t25563 = c*c0*t25502*t25511*t25422*t25494*t25496*t25398*(8.0/3.0);
                double t25564 = c*c0*t25502*t25511*t25438*t25519*t25439*t25396*t25496*(3.2E1/3.0);
                double t25565 = t25562+t25563+t25564;
                double t25566 = t25517*t25517;
                double t25567 = 1/pow(t25516,3.0/2.0);
                double t25568 = 1/t25502;
                double t25569 = exp(-t25495);
                double t25570 = t25499*t25499;
                double t25571 = t25510*t25510;
                double t25575 = 1/(rho_a[index]*rho_a[index]);
                double t25576 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t25577 = c*c;
                double t25578 = 1/pow(rho_a[index],2.0/3.0);
                double t25579 = k1*t25497;
                double t25580 = c*k2*t25394;
                double t25581 = t25580+t25579;
                double t25582 = 1/(t25581*t25581);
                double t25586 = t25582*t25577*t25578;
                double t25583 = exp(-t25586);
                double t25584 = 0.0 ;
                double t25585 = t25479*t25479;
                double t25590 = t25533*t25534;
                double t25591 = t25550*t25544*t25528;
                double t25592 = t25590+t25591;
                double t25593 = t25403*t25395*t25477*t25397*t25478*t25398*2.0E5;
                double t25594 = a3*a3;
                double t25595 = 1/pow(rho_a[index],1.4E1/3.0);
                double t25596 = 1/pow(t25407,5.0/2.0);
                double t25597 = t25411*t25403*t25486*t25594*t25478*t25595*t25398*t25596*7.5E4;
                double t25598 = t25411*t25403*t25520*t25437*t25439*t25396*t25477*t25478*4.0E5;
                double t25599 = 1/pow(rho_a[index],2.3E1/3.0);
                double t25600 = a3*gamma_aa[index]*t25411*t25403*t25404*t25393*t25395*t25485*t25478*t25398*t25599* \
                   2.0E5;
                double t25601 = t25600+t25593+t25597+t25598-t25411*t25403*t25395*t25477*t25397*t25478*t25398*2.0E5- \
                   a3*t25403*t25421*t25404*t25405*t25393*t25485*t25478*1.0E5-gamma_aa[index]*t25403*t25421*t25395*t25477* \
                   t25397*t25478*t25398*4.0E5;
                v_gamma_aa_gamma_aa_[index] = rho_a[index]*( ( (c*c0*t25394*(-2.0/3.0)+t25411*t25403*t25477*exp(- \
                   t25395*t25396*t25397*t25398)*1.0E5 > 0.0) ? c0*1.0*(t25452*t25447*(t25441*t25450*2.0-t25442*t25461- \
                   a3*c0*t25421*t25413*t25423*t25416*t25409*t25393*(3.2E1/3.0)+c*c0*t25430*t25413*t25407*t25416*t25429* \
                   t25394*1.6E1-c*c0*t25413*t25422*t25423*t25407*t25416*t25395*t25398*(3.2E1/3.0)+c*c0*t25413*t25422* \
                   t25407*t25416*t25417*t25395*t25398*(3.2E1/3.0)+a3*c0*gamma_aa[index]*t25413*t25433*t25416*t25417*t25393* \
                   t25395*t25398*(6.4E1/3.0)+c*c0*t25413*t25407*t25416*t25417*t25437*t25438*t25439*t25396*(1.28E2/3.0) \
                   -c*c0*gamma_aa[index]*t25421*t25413*t25422*t25423*t25407*t25416*t25395*t25398*(1.28E2/3.0))+t25460* \
                   t25447*(t25431+t25440+t25432+t25442+t25434-t25443-(t25421*t25425*2.0)/t25411+gamma_aa[index]*t25425* \
                   t25395*t25397*t25398*4.0+a3*t25404*t25405*t25425*t25471*t25393-a3*c0*t25421*t25413*t25423*t25416*t25409* \
                   t25393*(8.0/3.0)-c*c0*t25413*t25422*t25423*t25407*t25416*t25395*t25398*(8.0/3.0)-a3*c0*t25421*t25413* \
                   t25423*t25416*t25435*t25409*t25436*t25393*(8.0/3.0)+a3*c0*t25413*t25416*t25425*t25417*t25435*t25409* \
                   t25436*t25393*(4.0/3.0)+c*c0*t25413*t25441*t25407*t25416*t25417*t25435*t25436*t25394*(2.0/3.0)+c*c0* \
                   t25430*t25413*t25407*t25416*t25435*t25436*t25429*t25394*4.0+c*c0*t25413*t25442*t25407*t25416*t25417* \
                   t25435*t25436*t25394*(2.0/3.0)-c*c0*t25421*t25413*t25423*t25407*t25416*t25425*t25435*t25436*t25394* \
                   (8.0/3.0)-c*c0*t25413*t25422*t25423*t25407*t25416*t25435*t25436*t25395*t25398*(8.0/3.0)+c*c0*t25413* \
                   t25422*t25407*t25416*t25417*t25435*t25436*t25395*t25398*(8.0/3.0)+a3*c0*gamma_aa[index]*t25413*t25433* \
                   t25416*t25417*t25435*t25436*t25393*t25395*t25398*(1.6E1/3.0)+c*c0*t25413*t25407*t25416*t25417*t25435* \
                   t25436*t25437*t25438*t25439*t25396*(3.2E1/3.0)-c*c0*gamma_aa[index]*t25421*t25413*t25422*t25423*t25407* \
                   t25416*t25435*t25436*t25395*t25398*(3.2E1/3.0)+c*c0*gamma_aa[index]*t25413*t25422*t25407*t25416*t25425* \
                   t25417*t25435*t25436*t25395*t25398*(1.6E1/3.0))+t25441*t25435*t25436+t25442*t25435*t25436+t25470*t25447* \
                   t25456*2.0-t25460*t25470*t25465*t25457*2.0-t25452*t25456*t25465*t25457*2.0-t25460*t25452*t25457*(t25441* \
                   t25450*3.0-t25442*t25461*(3.0/2.0)-a3*c0*t25421*t25413*t25423*t25416*t25409*t25393*1.6E1+c*c0*t25430* \
                   t25413*t25407*t25416*t25429*t25394*2.4E1-c*c0*t25413*t25422*t25423*t25407*t25416*t25395*t25398*1.6E1+ \
                   c*c0*t25413*t25422*t25407*t25416*t25417*t25395*t25398*1.6E1+a3*c0*gamma_aa[index]*t25413*t25433*t25416* \
                   t25417*t25393*t25395*t25398*3.2E1+c*c0*t25413*t25407*t25416*t25417*t25437*t25438*t25439*t25396*6.4E1- \
                   c*c0*gamma_aa[index]*t25421*t25413*t25422*t25423*t25407*t25416*t25395*t25398*6.4E1)+t25460*t25452* \
                   1/(t25446*t25446*t25446)*(t25465*t25465)*2.0+t25404*t25441*t25471*t25472*t25473*t25474*t25475*t25476* \
                   (3.0/2.0)+t25404*t25442*t25471*t25472*t25473*t25474*t25475*t25476*(3.0/2.0)+t25411*t25421*t25404*t25425* \
                   t25471*t25472*t25473*t25474*t25475*3.0-a3*1/(t25407*t25407)*t25425*t25472*t25393*t25474*t25475*t25476* \
                   t25575*t25486*(3.0/2.0)-gamma_aa[index]*t25404*t25425*t25471*t25472*t25474*t25475*t25395*t25476*t25576* \
                   t25398*6.0)*(1.0/2.0) : 0.0 ) +c0*t25601*t25484*t25488*(1.0/2.0)-c0*t25484*t25584*t25585*(1.0/2.0) \
                   -c0*t25479*t25488*(t25460*t25470*t25447+t25425*t25435*t25436+t25452*t25447*t25456-t25460*t25452*t25465* \
                   t25457+t25404*t25425*t25471*t25472*t25473*t25474*t25475*t25476*(3.0/2.0)))*2.0+rho_a[index]*( ( (- \
                   t25480+t25487 > 0.0) ? c0*t25583*1.0*(t25544*t25528*(t25540+t25535+t25537+t25538+t25539+gamma_aa[index]* \
                   t25529*t25494*t25397*t25398*4.0+a5*t25404*t25405*t25393*t25529*t25568-gamma_aa[index]*t25515*t25529* \
                   t25494*t25397*t25398*4.0-c*c0*t25502*t25511*t25422*t25524*t25494*t25496*t25398*(8.0/3.0)-a5*c0*gamma_aa[index]* \
                   t25511*t25433*t25524*t25393*t25494*t25496*t25398*(1.6E1/3.0)+a5*c0*t25500*t25511*t25533*t25534*t25409* \
                   t25393*t25529*t25496*(4.0/3.0)+c*c0*t25500*t25502*t25511*t25541*t25533*t25534*t25394*t25496*(2.0/3.0) \
                   +c*c0*t25500*t25502*t25511*t25533*t25534*t25535*t25394*t25496*(2.0/3.0)-c*c0*t25502*t25511*t25524* \
                   t25438*t25519*t25439*t25396*t25496*(6.4E1/3.0)+c*c0*t25500*t25502*t25511*t25422*t25533*t25534*t25494* \
                   t25496*t25398*(8.0/3.0)-c*c0*t25502*t25511*t25422*t25524*t25533*t25534*t25494*t25496*t25398*(8.0/3.0) \
                   +a5*c0*gamma_aa[index]*t25500*t25511*t25433*t25533*t25534*t25393*t25494*t25496*t25398*(1.6E1/3.0)- \
                   a5*c0*gamma_aa[index]*t25511*t25433*t25524*t25533*t25534*t25393*t25494*t25496*t25398*(1.6E1/3.0)+c* \
                   c0*t25500*t25502*t25511*t25533*t25534*t25438*t25519*t25439*t25396*t25496*(3.2E1/3.0)-c*c0*t25502*t25511* \
                   t25524*t25533*t25534*t25438*t25519*t25439*t25396*t25496*(6.4E1/3.0)+c*c0*t25502*t25511*t25533*t25534* \
                   t25536*t25438*t25519*t25439*t25396*t25496*1.6E1+c*c0*gamma_aa[index]*t25500*t25502*t25511*t25422*t25533* \
                   t25534*t25529*t25494*t25496*t25398*(1.6E1/3.0)-c*c0*gamma_aa[index]*t25502*t25511*t25422*t25524*t25533* \
                   t25534*t25529*t25494*t25496*t25398*(1.6E1/3.0))+t25541*t25533*t25534+t25533*t25534*t25535+t25561*t25528* \
                   t25548*2.0+t25550*t25528*(t25523*t25515*t25565*2.0-t25515*t25566*t25567-t25500*t25518*t25494*t25397* \
                   t25398*8.0+t25520*t25524*t25518*t25519*t25439*t25396*3.2E1-gamma_aa[index]*t25500*t25523*t25517*t25494* \
                   t25397*t25398*8.0+c*c0*t25500*t25502*t25511*t25422*t25494*t25496*t25398*(3.2E1/3.0)-c*c0*t25502*t25511* \
                   t25422*t25524*t25494*t25496*t25398*(3.2E1/3.0)+a5*c0*gamma_aa[index]*t25500*t25511*t25433*t25393*t25494* \
                   t25496*t25398*(6.4E1/3.0)-a5*c0*gamma_aa[index]*t25511*t25433*t25524*t25393*t25494*t25496*t25398*(6.4E1/ \
                   3.0)+c*c0*t25500*t25502*t25511*t25438*t25519*t25439*t25396*t25496*(1.28E2/3.0)-c*c0*t25502*t25511* \
                   t25524*t25438*t25519*t25439*t25396*t25496*(2.56E2/3.0)+c*c0*t25502*t25511*t25536*t25438*t25519*t25439* \
                   t25396*t25496*6.4E1)-t25550*t25561*t25554*t25555*2.0-t25544*t25554*t25555*t25548*2.0-t25550*t25544* \
                   t25555*(t25523*t25515*t25565*3.0-t25515*t25566*t25567*(3.0/2.0)-t25500*t25518*t25494*t25397*t25398* \
                   1.2E1+t25520*t25524*t25518*t25519*t25439*t25396*4.8E1-gamma_aa[index]*t25500*t25523*t25517*t25494* \
                   t25397*t25398*1.2E1+c*c0*t25500*t25502*t25511*t25422*t25494*t25496*t25398*1.6E1-c*c0*t25502*t25511* \
                   t25422*t25524*t25494*t25496*t25398*1.6E1+a5*c0*gamma_aa[index]*t25500*t25511*t25433*t25393*t25494* \
                   t25496*t25398*3.2E1-a5*c0*gamma_aa[index]*t25511*t25433*t25524*t25393*t25494*t25496*t25398*3.2E1+c* \
                   c0*t25500*t25502*t25511*t25438*t25519*t25439*t25396*t25496*6.4E1-c*c0*t25502*t25511*t25524*t25438* \
                   t25519*t25439*t25396*t25496*1.28E2+c*c0*t25502*t25511*t25536*t25438*t25519*t25439*t25396*t25496*9.6E1) \
                   +t25550*t25544*1/(t25527*t25527*t25527)*(t25554*t25554)*2.0+t25404*t25541*t25570*t25472*t25571*t25473* \
                   t25568*t25569*(3.0/2.0)+t25404*t25570*t25472*t25535*t25571*t25473*t25568*t25569*(3.0/2.0)-a5*1/(t25502* \
                   t25502)*t25570*t25472*t25571*t25393*t25529*t25575*t25486*t25569*(3.0/2.0)-gamma_aa[index]*t25404*t25570* \
                   t25472*t25571*t25529*t25494*t25576*t25568*t25398*t25569*6.0+gamma_aa[index]*t25404*t25472*t25571*t25529* \
                   t25494*t25576*t25568*t25398*t25569*t25499*6.0)*(1.0/2.0) : 0.0 ) +c0*t25601*t25583*t25592*t25488*(1.0/ \
                   2.0)-c0*t25583*t25592*t25584*t25585*(1.0/2.0)-c0*t25583*t25479*t25488*(t25550*t25561*t25528+t25533* \
                   t25534*t25529+t25544*t25528*t25548-t25550*t25544*t25554*t25555+t25404*t25570*t25472*t25571*t25473* \
                   t25529*t25568*t25569*(3.0/2.0)))*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void FT97_C_Functional::computeUKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double c0 = params_[0].second;
    double c = params_[1].second;
    double tspi_m13 = params_[2].second;
    double a1 = params_[3].second;
    double a2 = params_[4].second;
    double a3 = params_[5].second;
    double a4 = params_[6].second;
    double a5 = params_[7].second;
    double kaa0 = params_[8].second;
    double kaa1 = params_[9].second;
    double kaa2 = params_[10].second;
    double raa1 = params_[11].second;
    double raa2 = params_[12].second;
    double kab0 = params_[13].second;
    double kab1 = params_[14].second;
    double rab1 = params_[15].second;
    double k1 = params_[16].second;
    double k2 = params_[17].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t20211 = tspi_m13*tspi_m13;
            double t20212 = 1/pow(rho_a[index],1.0/3.0);
            double t20213 = a2*a2;
            double t20214 = gamma_aa[index]*gamma_aa[index];
            double t20215 = 1/pow(rho_a[index],1.6E1/3.0);
            double t20216 = t20211*t20211;
            double t20217 = c*t20212;
            double t20218 = pow(t20217,4.0/5.0);
            double t20232 = rab1*t20218;
            double t20219 = exp(-t20232);
            double t20220 = t20219-1.0;
            double t20233 = kab1*t20220;
            double t20221 = kab0-t20233;
            double t20222 = 1/c;
            double t20223 = 1/pow(rho_a[index],7.0/3.0);
            double t20224 = a3*gamma_aa[index]*t20211*t20222*t20223;
            double t20225 = t20224+1.0;
            double t20226 = t20213*t20214*t20215*t20216;
            double t20227 = 1/pow(rho_a[index],8.0/3.0);
            double t20228 = a1*gamma_aa[index]*t20211*t20227;
            double t20229 = t20226+t20228+1.0;
            double t20230 = t20213*t20214*t20215*t20216*2.0;
            double t20231 = exp(t20230);
            double t20234 = 1/(t20221*t20221);
            double t20235 = 1/(t20229*t20229);
            double t20236 = c*c0*t20212*t20231*t20225*t20234*t20235*(2.0/3.0);
            double t20237 = exp(t20236);
            double t20238 = Ei(-t20236);
            double t20239 = sqrt(t20236);
            double t20240 = 1/pow(rho_b[index],1.0/3.0);
            double t20241 = gamma_bb[index]*gamma_bb[index];
            double t20242 = 1/pow(rho_b[index],1.6E1/3.0);
            double t20243 = c*t20240;
            double t20244 = a4*a4;
            double t20245 = 1/pow(rho_b[index],7.0/3.0);
            double t20246 = sqrt(t20243);
            double t20247 = t20241*t20242*t20216*t20244*2.0;
            double t20248 = exp(t20247);
            double t20249 = t20241*t20242*t20216*t20244;
            double t20250 = t20249+1.0;
            double t20251 = 1/(t20250*t20250);
            double t20252 = a5*gamma_bb[index]*t20211*t20222*t20245;
            double t20253 = t20252+1.0;
            double t20264 = raa2*t20246;
            double t20254 = exp(-t20264);
            double t20255 = t20254-1.0;
            double t20256 = kaa2*t20255;
            double t20257 = pow(t20243,2.0/5.0);
            double t20265 = raa1*t20257;
            double t20258 = exp(-t20265);
            double t20259 = t20258-1.0;
            double t20260 = kaa1*t20259;
            double t20261 = -kaa0+t20260+t20256;
            double t20262 = 1/(t20261*t20261);
            double t20263 = c*c0*t20240*t20251*t20253*t20262*t20248*(2.0/3.0);
            double t20266 = exp(t20263);
            double t20267 = Ei(-t20263);
            double t20268 = 1/t20250;
            double t20269 = c*c0*t20240*t20253*t20262*t20248*(2.0/3.0);
            double t20270 = sqrt(t20269);
            double t20271 = t20213*t20241*t20242*t20216;
            double t20272 = pow(t20243,4.0/5.0);
            double t20282 = rab1*t20272;
            double t20273 = exp(-t20282);
            double t20274 = t20273-1.0;
            double t20283 = kab1*t20274;
            double t20275 = kab0-t20283;
            double t20276 = a3*gamma_bb[index]*t20211*t20222*t20245;
            double t20277 = t20276+1.0;
            double t20278 = 1/sqrt(t20277);
            double t20279 = 1/pow(rho_b[index],8.0/3.0);
            double t20280 = a1*gamma_bb[index]*t20211*t20279;
            double t20281 = t20271+t20280+1.0;
            double t20284 = t20213*t20241*t20242*t20216*2.0;
            double t20285 = exp(t20284);
            double t20286 = 1/(t20275*t20275);
            double t20287 = 1/(t20281*t20281);
            double t20288 = c*c0*t20240*t20285*t20277*t20286*t20287*(2.0/3.0);
            double t20289 = exp(t20288);
            double t20290 = Ei(-t20288);
            double t20291 = sqrt(t20288);
            double t20292 = 1/sqrt(t20225);
            double t20293 = c*c;
            double t20294 = sqrt(t20217);
            double t20295 = t20214*t20215*t20216*t20244*2.0;
            double t20296 = exp(t20295);
            double t20297 = t20214*t20215*t20216*t20244;
            double t20298 = t20297+1.0;
            double t20299 = 1/(t20298*t20298);
            double t20300 = a5*gamma_aa[index]*t20211*t20222*t20223;
            double t20301 = t20300+1.0;
            double t20312 = raa2*t20294;
            double t20302 = exp(-t20312);
            double t20303 = t20302-1.0;
            double t20304 = kaa2*t20303;
            double t20305 = pow(t20217,2.0/5.0);
            double t20313 = raa1*t20305;
            double t20306 = exp(-t20313);
            double t20307 = t20306-1.0;
            double t20308 = kaa1*t20307;
            double t20309 = -kaa0+t20304+t20308;
            double t20310 = 1/(t20309*t20309);
            double t20311 = c*c0*t20301*t20310*t20212*t20296*t20299*(2.0/3.0);
            double t20314 = exp(t20311);
            double t20315 = Ei(-t20311);
            double t20316 = 1/t20298;
            double t20317 = c*c0*t20301*t20310*t20212*t20296*(2.0/3.0);
            double t20318 = sqrt(t20317);
            functional_[index] = rho_b[index]*( ( (c*c0*t20212*(-2.0/3.0)+t20221*t20229*t20292*exp(-t20213*t20214* \
               t20215*t20216)*1.0E5 > 0.0) ? c0*1.0*(t20237*t20238+((c*c0*t20212*t20231*t20225*t20234*t20235*t20237* \
               t20238*(2.0/3.0)+1.0)*(t20239*4.0+c*c0*t20212*t20231*t20225*t20234*t20235*(8.0/3.0)+6.0))/(t20239* \
               6.0+c*c0*t20212*t20231*t20225*t20234*t20235*4.0+3.0))*(1.0/2.0) : 0.0 ) + ( (c*c0*t20240*(-2.0/3.0) \
               +t20281*t20275*t20278*exp(-t20213*t20241*t20242*t20216)*1.0E5 > 0.0) ? c0*exp(-1/pow(rho_b[index],2.0/ \
               3.0)*t20293*1/pow(k1*t20246+c*k2*t20240,2.0))*1.0*(t20266*t20267+((c*c0*t20240*t20251*t20253*t20262* \
               t20248*t20266*t20267*(2.0/3.0)+1.0)*(t20270*t20268*4.0+c*c0*t20240*t20251*t20253*t20262*t20248*(8.0/ \
               3.0)+6.0))/(t20270*t20268*6.0+c*c0*t20240*t20251*t20253*t20262*t20248*4.0+3.0))*(1.0/2.0) : 0.0 )  \
               )+rho_a[index]*( ( (c*c0*t20240*(-2.0/3.0)+t20281*t20275*t20278*exp(-t20271)*1.0E5 > 0.0) ? c0*1.0* \
               (t20290*t20289+((c*c0*t20240*t20290*t20285*t20277*t20286*t20287*t20289*(2.0/3.0)+1.0)*(t20291*4.0+ \
               c*c0*t20240*t20285*t20277*t20286*t20287*(8.0/3.0)+6.0))/(t20291*6.0+c*c0*t20240*t20285*t20277*t20286* \
               t20287*4.0+3.0))*(1.0/2.0) : 0.0 ) + ( (c*c0*t20212*(-2.0/3.0)+t20221*t20229*t20292*exp(-t20226)*1.0E5  \
               > 0.0) ? c0*1.0*exp(-1/pow(rho_a[index],2.0/3.0)*t20293*1/pow(k1*t20294+c*k2*t20212,2.0))*(t20314* \
               t20315+((c*c0*t20301*t20310*t20212*t20314*t20315*t20296*t20299*(2.0/3.0)+1.0)*(t20316*t20318*4.0+c* \
               c0*t20301*t20310*t20212*t20296*t20299*(8.0/3.0)+6.0))/(t20316*t20318*6.0+c*c0*t20301*t20310*t20212* \
               t20296*t20299*4.0+3.0))*(1.0/2.0) : 0.0 ) );
        } else if (rho_a[index] > cutoff_) {
            double t23602 = tspi_m13*tspi_m13;
            double t23603 = 1/pow(rho_a[index],1.0/3.0);
            double t23604 = a2*a2;
            double t23605 = gamma_aa[index]*gamma_aa[index];
            double t23606 = 1/pow(rho_a[index],1.6E1/3.0);
            double t23607 = t23602*t23602;
            double t23608 = c*t23603;
            double t23609 = a4*a4;
            double t23610 = 1/c;
            double t23611 = 1/pow(rho_a[index],7.0/3.0);
            double t23612 = sqrt(t23608);
            double t23613 = t23605*t23606*t23607*t23609*2.0;
            double t23614 = exp(t23613);
            double t23615 = t23605*t23606*t23607*t23609;
            double t23616 = t23615+1.0;
            double t23617 = 1/(t23616*t23616);
            double t23618 = a5*gamma_aa[index]*t23610*t23602*t23611;
            double t23619 = t23618+1.0;
            double t23630 = raa2*t23612;
            double t23620 = exp(-t23630);
            double t23621 = t23620-1.0;
            double t23622 = kaa2*t23621;
            double t23623 = pow(t23608,2.0/5.0);
            double t23631 = raa1*t23623;
            double t23624 = exp(-t23631);
            double t23625 = t23624-1.0;
            double t23626 = kaa1*t23625;
            double t23627 = -kaa0+t23622+t23626;
            double t23628 = 1/(t23627*t23627);
            double t23629 = c*c0*t23603*t23614*t23617*t23619*t23628*(2.0/3.0);
            double t23632 = exp(t23629);
            double t23633 = Ei(-t23629);
            double t23634 = 1/t23616;
            double t23635 = c*c0*t23603*t23614*t23619*t23628*(2.0/3.0);
            double t23636 = sqrt(t23635);
            functional_[index] = ( (c*c0*t23603*(-2.0/3.0)+exp(-t23604*t23605*t23606*t23607)*1/sqrt(a3*gamma_aa[index]* \
               t23610*t23602*t23611+1.0)*(kab0-kab1*(exp(-rab1*pow(t23608,4.0/5.0))-1.0))*(t23604*t23605*t23606*t23607+ \
               a1*gamma_aa[index]*1/pow(rho_a[index],8.0/3.0)*t23602+1.0)*1.0E5 > 0.0) ?  c0*rho_a[index]*exp(-(c* \
               c)*1/pow(rho_a[index],2.0/3.0)*1/pow(k1*t23612+c*k2*t23603,2.0))*1.0*(t23632*t23633+((c*c0*t23603* \
               t23614*t23632*t23633*t23617*t23619*t23628*(2.0/3.0)+1.0)*(t23634*t23636*4.0+c*c0*t23603*t23614*t23617* \
               t23619*t23628*(8.0/3.0)+6.0))/(t23634*t23636*6.0+c*c0*t23603*t23614*t23617*t23619*t23628*4.0+3.0)) \
               *(1.0/2.0) : 0.0 ) ;
        } else if (rho_b[index] > cutoff_) {
            double t22805 = tspi_m13*tspi_m13;
            double t22806 = 1/pow(rho_b[index],1.0/3.0);
            double t22807 = a2*a2;
            double t22808 = gamma_bb[index]*gamma_bb[index];
            double t22809 = 1/pow(rho_b[index],1.6E1/3.0);
            double t22810 = t22805*t22805;
            double t22811 = c*t22806;
            double t22812 = a4*a4;
            double t22813 = 1/c;
            double t22814 = 1/pow(rho_b[index],7.0/3.0);
            double t22815 = sqrt(t22811);
            double t22816 = t22810*t22812*t22808*t22809*2.0;
            double t22817 = exp(t22816);
            double t22818 = t22810*t22812*t22808*t22809;
            double t22819 = t22818+1.0;
            double t22820 = 1/(t22819*t22819);
            double t22821 = a5*gamma_bb[index]*t22813*t22805*t22814;
            double t22822 = t22821+1.0;
            double t22833 = raa2*t22815;
            double t22823 = exp(-t22833);
            double t22824 = t22823-1.0;
            double t22825 = kaa2*t22824;
            double t22826 = pow(t22811,2.0/5.0);
            double t22834 = raa1*t22826;
            double t22827 = exp(-t22834);
            double t22828 = t22827-1.0;
            double t22829 = kaa1*t22828;
            double t22830 = -kaa0+t22825+t22829;
            double t22831 = 1/(t22830*t22830);
            double t22832 = c*c0*t22820*t22822*t22831*t22806*t22817*(2.0/3.0);
            double t22835 = exp(t22832);
            double t22836 = Ei(-t22832);
            double t22837 = 1/t22819;
            double t22838 = c*c0*t22822*t22831*t22806*t22817*(2.0/3.0);
            double t22839 = sqrt(t22838);
            functional_[index] = ( (c*c0*t22806*(-2.0/3.0)+exp(-t22810*t22807*t22808*t22809)*1/sqrt(a3*gamma_bb[index]* \
               t22813*t22805*t22814+1.0)*(kab0-kab1*(exp(-rab1*pow(t22811,4.0/5.0))-1.0))*(t22810*t22807*t22808*t22809+ \
               a1*gamma_bb[index]*1/pow(rho_b[index],8.0/3.0)*t22805+1.0)*1.0E5 > 0.0) ?  c0*rho_b[index]*exp(-(c* \
               c)*1/pow(rho_b[index],2.0/3.0)*1/pow(k1*t22815+c*k2*t22806,2.0))*1.0*(t22835*t22836+((c*c0*t22820* \
               t22822*t22831*t22806*t22817*t22835*t22836*(2.0/3.0)+1.0)*(t22837*t22839*4.0+c*c0*t22820*t22822*t22831* \
               t22806*t22817*(8.0/3.0)+6.0))/(t22837*t22839*6.0+c*c0*t22820*t22822*t22831*t22806*t22817*4.0+3.0)) \
               *(1.0/2.0) : 0.0 ) ;
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t20320 = tspi_m13*tspi_m13;
            double t20321 = 1/pow(rho_a[index],1.0/3.0);
            double t20322 = a2*a2;
            double t20323 = gamma_aa[index]*gamma_aa[index];
            double t20324 = 1/pow(rho_a[index],1.6E1/3.0);
            double t20325 = t20320*t20320;
            double t20326 = c*t20321;
            double t20327 = a4*a4;
            double t20328 = t20323*t20324*t20325*t20327*2.0;
            double t20329 = exp(t20328);
            double t20330 = 1/c;
            double t20331 = 1/pow(rho_a[index],7.0/3.0);
            double t20332 = sqrt(t20326);
            double t20333 = t20323*t20324*t20325*t20327;
            double t20334 = t20333+1.0;
            double t20335 = 1/(t20334*t20334);
            double t20336 = a5*gamma_aa[index]*t20320*t20330*t20331;
            double t20337 = t20336+1.0;
            double t20348 = raa2*t20332;
            double t20338 = exp(-t20348);
            double t20339 = t20338-1.0;
            double t20340 = kaa2*t20339;
            double t20341 = pow(t20326,2.0/5.0);
            double t20349 = raa1*t20341;
            double t20342 = exp(-t20349);
            double t20343 = t20342-1.0;
            double t20344 = kaa1*t20343;
            double t20345 = -kaa0+t20340+t20344;
            double t20346 = 1/(t20345*t20345);
            double t20347 = c*c0*t20321*t20335*t20337*t20346*t20329*(2.0/3.0);
            double t20350 = 1/t20334;
            double t20351 = 1/pow(rho_a[index],4.0/3.0);
            double t20352 = c*c0*t20321*t20337*t20346*t20329*(2.0/3.0);
            double t20353 = sqrt(t20352);
            double t20354 = 1/pow(rho_a[index],1.1E1/3.0);
            double t20355 = 1/sqrt(t20326);
            double t20356 = c*kaa2*raa2*t20351*t20355*t20338*(1.0/6.0);
            double t20357 = 1/pow(t20326,3.0/5.0);
            double t20358 = c*kaa1*raa1*t20342*t20351*t20357*(2.0/1.5E1);
            double t20359 = t20356+t20358;
            double t20360 = 1/(t20345*t20345*t20345);
            double t20361 = 1/pow(rho_a[index],2.0E1/3.0);
            double t20362 = exp(t20347);
            double t20363 = Ei(-t20347);
            double t20364 = 1/(t20334*t20334*t20334);
            double t20365 = t20350*t20353*6.0;
            double t20366 = c*c0*t20321*t20335*t20337*t20346*t20329*4.0;
            double t20367 = t20365+t20366+3.0;
            double t20368 = 1/t20367;
            double t20369 = c*c0*t20351*t20335*t20337*t20346*t20329*(2.0/9.0);
            double t20370 = a5*c0*gamma_aa[index]*t20320*t20335*t20354*t20346*t20329*(1.4E1/9.0);
            double t20371 = c*c0*t20321*t20360*t20335*t20337*t20329*t20359*(4.0/3.0);
            double t20372 = c*c0*t20323*t20325*t20361*t20335*t20327*t20337*t20346*t20329*(6.4E1/9.0);
            double t20374 = c*c0*t20323*t20325*t20361*t20327*t20337*t20346*t20364*t20329*(6.4E1/9.0);
            double t20373 = t20370+t20371+t20372-t20374+t20369;
            double t20375 = c*c0*t20321*t20335*t20362*t20363*t20337*t20346*t20329*(2.0/3.0);
            double t20376 = t20375+1.0;
            double t20377 = t20350*t20353*4.0;
            double t20378 = c*c0*t20321*t20335*t20337*t20346*t20329*(8.0/3.0);
            double t20379 = t20377+t20378+6.0;
            double t20380 = c*c0*t20351*t20337*t20346*t20329*(2.0/9.0);
            double t20381 = a5*c0*gamma_aa[index]*t20320*t20354*t20346*t20329*(1.4E1/9.0);
            double t20382 = c*c0*t20321*t20360*t20337*t20329*t20359*(4.0/3.0);
            double t20383 = c*c0*t20323*t20325*t20361*t20327*t20337*t20346*t20329*(6.4E1/9.0);
            double t20384 = t20380+t20381+t20382+t20383;
            double t20385 = 1/sqrt(t20352);
            double t20386 = 1/pow(rho_a[index],1.9E1/3.0);
            double t20387 = t20322*t20323*t20324*t20325;
            double t20388 = pow(t20326,4.0/5.0);
            double t20406 = rab1*t20388;
            double t20389 = exp(-t20406);
            double t20390 = t20389-1.0;
            double t20407 = kab1*t20390;
            double t20391 = kab0-t20407;
            double t20392 = a3*gamma_aa[index]*t20320*t20330*t20331;
            double t20393 = t20392+1.0;
            double t20394 = 1/sqrt(t20393);
            double t20395 = 1/pow(rho_a[index],8.0/3.0);
            double t20396 = a1*gamma_aa[index]*t20320*t20395;
            double t20397 = t20387+t20396+1.0;
            double t20398 = c*c;
            double t20399 = 1/pow(rho_a[index],2.0/3.0);
            double t20400 = k1*t20332;
            double t20401 = c*k2*t20321;
            double t20402 = t20400+t20401;
            double t20403 = 1/(t20402*t20402);
            double t20409 = t20403*t20398*t20399;
            double t20404 = exp(-t20409);
            double t20405 = exp(-t20387);
            double t20408 = c*c0*t20321*(2.0/3.0);
            double t20410 = t20362*t20363;
            double t20411 = t20376*t20368*t20379;
            double t20412 = t20410+t20411;
            double t20413 = t20405*t20391*t20394*t20397*1.0E5;
            double t20414 = t20413-t20408;
            double t20415 = ( (t20414 > 0.0) ?  1.0 : 0.0 ) ;
            double t20416 = t20322*t20323*t20324*t20325*2.0;
            double t20417 = exp(t20416);
            double t20418 = 1/(t20391*t20391);
            double t20419 = 1/(t20397*t20397);
            double t20420 = c*c0*t20321*t20417*t20418*t20419*t20393*(2.0/3.0);
            double t20421 = sqrt(t20420);
            double t20422 = t20322*t20323*t20325*t20386*(1.6E1/3.0);
            double t20423 = a1*gamma_aa[index]*t20320*t20354*(8.0/3.0);
            double t20424 = t20422+t20423;
            double t20425 = exp(t20420);
            double t20426 = Ei(-t20420);
            double t20427 = c*c0*t20351*t20417*t20418*t20419*t20393*(2.0/9.0);
            double t20428 = 1/(t20397*t20397*t20397);
            double t20429 = a3*c0*gamma_aa[index]*t20320*t20354*t20417*t20418*t20419*(1.4E1/9.0);
            double t20430 = 1/pow(rho_a[index],5.0/3.0);
            double t20431 = 1/pow(t20326,1.0/5.0);
            double t20432 = c*c0*t20322*t20323*t20325*t20361*t20417*t20418*t20419*t20393*(6.4E1/9.0);
            double t20433 = 1/(t20391*t20391*t20391);
            double t20439 = c*c0*t20321*t20424*t20417*t20418*t20428*t20393*(4.0/3.0);
            double t20440 = c0*kab1*rab1*t20430*t20431*t20433*t20417*t20419*t20393*t20389*t20398*(1.6E1/4.5E1) \
               ;
            double t20434 = -t20440+t20432+t20427+t20429-t20439;
            double t20435 = t20421*6.0;
            double t20436 = c*c0*t20321*t20417*t20418*t20419*t20393*4.0;
            double t20437 = t20435+t20436+3.0;
            double t20438 = 1/t20437;
            double t20441 = c*c0*t20321*t20425*t20417*t20426*t20418*t20419*t20393*(2.0/3.0);
            double t20442 = t20441+1.0;
            double t20443 = t20421*4.0;
            double t20444 = c*c0*t20321*t20417*t20418*t20419*t20393*(8.0/3.0);
            double t20445 = t20443+t20444+6.0;
            double t20446 = 1/sqrt(t20420);
            double t20447 = 1/c0;
            double t20448 = pow(rho_a[index],1.0/3.0);
            double t20449 = c*c0*t20351*(2.0/9.0);
            double t20450 = t20322*t20323*t20405*t20325*t20391*t20394*t20386*t20397*(1.6E6/3.0);
            double t20451 = 1/pow(rho_a[index],1.0E1/3.0);
            double t20452 = 1/pow(t20393,3.0/2.0);
            double t20453 = a3*gamma_aa[index]*t20320*t20330*t20405*t20451*t20452*t20391*t20397*(3.5E5/3.0);
            double t20454 = t20450+t20453+t20449-t20405*t20424*t20391*t20394*1.0E5-c*kab1*rab1*t20431*t20351* \
               t20405*t20394*t20397*t20389*(8.0E4/3.0);
            double t20455 = 1/pow(rho_b[index],1.0/3.0);
            double t20456 = gamma_bb[index]*gamma_bb[index];
            double t20457 = 1/pow(rho_b[index],1.6E1/3.0);
            double t20458 = c*t20455;
            double t20459 = pow(t20458,4.0/5.0);
            double t20472 = rab1*t20459;
            double t20460 = exp(-t20472);
            double t20461 = t20460-1.0;
            double t20473 = kab1*t20461;
            double t20462 = kab0-t20473;
            double t20463 = 1/pow(rho_b[index],7.0/3.0);
            double t20464 = a3*gamma_bb[index]*t20320*t20330*t20463;
            double t20465 = t20464+1.0;
            double t20466 = t20322*t20325*t20456*t20457;
            double t20467 = 1/pow(rho_b[index],8.0/3.0);
            double t20468 = a1*gamma_bb[index]*t20320*t20467;
            double t20469 = t20466+t20468+1.0;
            double t20470 = t20322*t20325*t20456*t20457*2.0;
            double t20471 = exp(t20470);
            double t20474 = 1/(t20462*t20462);
            double t20475 = 1/(t20469*t20469);
            double t20476 = c*c0*t20471*t20455*t20465*t20474*t20475*(2.0/3.0);
            double t20477 = exp(t20476);
            double t20478 = Ei(-t20476);
            double t20479 = sqrt(t20476);
            v_rho_a_[index] = -rho_b[index]*(c0*t20415*(t20442*t20438*(t20434*t20446*2.0+c*c0*t20351*t20417*t20418* \
               t20419*t20393*(8.0/9.0)+a3*c0*gamma_aa[index]*t20320*t20354*t20417*t20418*t20419*(5.6E1/9.0)-c*c0* \
               t20321*t20424*t20417*t20418*t20428*t20393*(1.6E1/3.0)+c*c0*t20322*t20323*t20325*t20361*t20417*t20418* \
               t20419*t20393*(2.56E2/9.0)-c0*kab1*rab1*t20430*t20431*t20433*t20417*t20419*t20393*t20389*t20398*(6.4E1/ \
               4.5E1))+t20445*t20438*(-t20440+t20432+t20427+t20429-t20439+c*c0*t20351*t20425*t20417*t20426*t20418* \
               t20419*t20393*(2.0/9.0)+a3*c0*gamma_aa[index]*t20320*t20425*t20354*t20417*t20426*t20418*t20419*(1.4E1/ \
               9.0)-c*c0*t20321*t20424*t20425*t20417*t20426*t20418*t20428*t20393*(4.0/3.0)+c*c0*t20321*t20425*t20434* \
               t20417*t20426*t20418*t20419*t20393*(2.0/3.0)+c*c0*t20322*t20323*t20325*t20361*t20425*t20417*t20426* \
               t20418*t20419*t20393*(6.4E1/9.0)-c0*kab1*rab1*t20430*t20431*t20433*t20425*t20417*t20426*t20419*t20393* \
               t20389*t20398*(1.6E1/4.5E1))+t20425*t20434*t20426-t20442*t20445*1/(t20437*t20437)*(t20434*t20446*3.0+ \
               c*c0*t20351*t20417*t20418*t20419*t20393*(4.0/3.0)+a3*c0*gamma_aa[index]*t20320*t20354*t20417*t20418* \
               t20419*(2.8E1/3.0)-c*c0*t20321*t20424*t20417*t20418*t20428*t20393*8.0+c*c0*t20322*t20323*t20325*t20361* \
               t20417*t20418*t20419*t20393*(1.28E2/3.0)-c0*kab1*rab1*t20430*t20431*t20433*t20417*t20419*t20393*t20389* \
               t20398*(3.2E1/1.5E1))+(t20330*t20434*(t20391*t20391)*t20447*t20448*(t20397*t20397)*exp(-t20416)*(3.0/ \
               2.0))/t20393)*(1.0/2.0)- 0.0 )+rho_a[index]*( ( (c*c0*t20321*(-2.0/3.0)+t20391*t20394*t20397*exp(- \
               t20322*t20323*t20324*t20325)*1.0E5 > 0.0) ? c0*t20404*1.0*(t20376*t20368*(t20350*t20384*t20385*2.0- \
               t20323*t20325*t20335*t20353*t20327*t20386*(6.4E1/3.0)+c*c0*t20351*t20335*t20337*t20346*t20329*(8.0/ \
               9.0)+a5*c0*gamma_aa[index]*t20320*t20335*t20354*t20346*t20329*(5.6E1/9.0)+c*c0*t20321*t20360*t20335* \
               t20337*t20329*t20359*(1.6E1/3.0)+c*c0*t20323*t20325*t20361*t20335*t20327*t20337*t20346*t20329*(2.56E2/ \
               9.0)-c*c0*t20323*t20325*t20361*t20327*t20337*t20346*t20364*t20329*(2.56E2/9.0))+t20368*t20379*(t20370+ \
               t20371+t20372-t20374+t20369+c*c0*t20351*t20335*t20362*t20363*t20337*t20346*t20329*(2.0/9.0)+a5*c0* \
               gamma_aa[index]*t20320*t20335*t20362*t20354*t20363*t20346*t20329*(1.4E1/9.0)+c*c0*t20321*t20360*t20335* \
               t20362*t20363*t20337*t20329*t20359*(4.0/3.0)+c*c0*t20321*t20335*t20362*t20363*t20337*t20346*t20373* \
               t20329*(2.0/3.0)+c*c0*t20323*t20325*t20361*t20335*t20362*t20327*t20363*t20337*t20346*t20329*(6.4E1/ \
               9.0)-c*c0*t20323*t20325*t20361*t20362*t20327*t20363*t20337*t20346*t20364*t20329*(6.4E1/9.0))+t20362* \
               t20363*t20373-1/(t20367*t20367)*t20376*t20379*(t20350*t20384*t20385*3.0-t20323*t20325*t20335*t20353* \
               t20327*t20386*3.2E1+c*c0*t20351*t20335*t20337*t20346*t20329*(4.0/3.0)+a5*c0*gamma_aa[index]*t20320* \
               t20335*t20354*t20346*t20329*(2.8E1/3.0)+c*c0*t20321*t20360*t20335*t20337*t20329*t20359*8.0+c*c0*t20323* \
               t20325*t20361*t20335*t20327*t20337*t20346*t20329*(1.28E2/3.0)-c*c0*t20323*t20325*t20361*t20327*t20337* \
               t20346*t20364*t20329*(1.28E2/3.0))+(t20330*(t20334*t20334)*(t20345*t20345)*t20373*t20447*t20448*exp(- \
               t20328)*(3.0/2.0))/t20337)*(-1.0/2.0) : 0.0 ) +c0*t20412*t20404*t20415*(t20403*t20430*t20398*(2.0/ \
               3.0)-1/(t20402*t20402*t20402)*t20398*t20399*(c*k2*t20351*(1.0/3.0)+c*k1*t20351*t20355*(1.0/6.0))*2.0) \
               *(1.0/2.0)+ 0.0 )+ ( (c*c0*t20455*(-2.0/3.0)+t20462*1/sqrt(t20465)*t20469*exp(-t20322*t20325*t20456* \
               t20457)*1.0E5 > 0.0) ? c0*1.0*(t20477*t20478+((c*c0*t20471*t20455*t20465*t20474*t20475*t20477*t20478* \
               (2.0/3.0)+1.0)*(t20479*4.0+c*c0*t20471*t20455*t20465*t20474*t20475*(8.0/3.0)+6.0))/(t20479*6.0+c*c0* \
               t20471*t20455*t20465*t20474*t20475*4.0+3.0))*(1.0/2.0) : 0.0 ) +c0*t20412*t20404*t20415*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t23638 = tspi_m13*tspi_m13;
            double t23639 = 1/pow(rho_a[index],1.0/3.0);
            double t23640 = a2*a2;
            double t23641 = gamma_aa[index]*gamma_aa[index];
            double t23642 = 1/pow(rho_a[index],1.6E1/3.0);
            double t23643 = t23638*t23638;
            double t23644 = c*t23639;
            double t23645 = a4*a4;
            double t23646 = 1/c;
            double t23647 = 1/pow(rho_a[index],7.0/3.0);
            double t23648 = sqrt(t23644);
            double t23649 = t23641*t23642*t23643*t23645*2.0;
            double t23650 = exp(t23649);
            double t23651 = t23641*t23642*t23643*t23645;
            double t23652 = t23651+1.0;
            double t23653 = 1/(t23652*t23652);
            double t23654 = a5*gamma_aa[index]*t23646*t23638*t23647;
            double t23655 = t23654+1.0;
            double t23666 = raa2*t23648;
            double t23656 = exp(-t23666);
            double t23657 = t23656-1.0;
            double t23658 = kaa2*t23657;
            double t23659 = pow(t23644,2.0/5.0);
            double t23667 = raa1*t23659;
            double t23660 = exp(-t23667);
            double t23661 = t23660-1.0;
            double t23662 = kaa1*t23661;
            double t23663 = -kaa0+t23662+t23658;
            double t23664 = 1/(t23663*t23663);
            double t23665 = c*c0*t23650*t23653*t23655*t23664*t23639*(2.0/3.0);
            double t23668 = exp(t23665);
            double t23669 = Ei(-t23665);
            double t23670 = 1/t23652;
            double t23671 = c*c0*t23650*t23655*t23664*t23639*(2.0/3.0);
            double t23672 = sqrt(t23671);
            double t23673 = t23640*t23641*t23642*t23643;
            double t23674 = pow(t23644,4.0/5.0);
            double t23724 = rab1*t23674;
            double t23675 = exp(-t23724);
            double t23676 = t23675-1.0;
            double t23725 = kab1*t23676;
            double t23677 = kab0-t23725;
            double t23678 = a3*gamma_aa[index]*t23646*t23638*t23647;
            double t23679 = t23678+1.0;
            double t23680 = 1/sqrt(t23679);
            double t23681 = 1/pow(rho_a[index],8.0/3.0);
            double t23682 = a1*gamma_aa[index]*t23681*t23638;
            double t23683 = t23673+t23682+1.0;
            double t23684 = c*c;
            double t23685 = 1/pow(rho_a[index],2.0/3.0);
            double t23686 = k1*t23648;
            double t23687 = c*k2*t23639;
            double t23688 = t23686+t23687;
            double t23689 = 1/(t23688*t23688);
            double t23729 = t23684*t23685*t23689;
            double t23690 = exp(-t23729);
            double t23691 = c*c0*t23650*t23653*t23655*t23664*t23639*t23668*t23669*(2.0/3.0);
            double t23692 = t23691+1.0;
            double t23693 = t23670*t23672*6.0;
            double t23694 = c*c0*t23650*t23653*t23655*t23664*t23639*4.0;
            double t23695 = t23693+t23694+3.0;
            double t23696 = 1/t23695;
            double t23697 = 1/pow(rho_a[index],4.0/3.0);
            double t23698 = 1/pow(rho_a[index],1.1E1/3.0);
            double t23699 = 1/sqrt(t23644);
            double t23700 = c*kaa2*raa2*t23656*t23697*t23699*(1.0/6.0);
            double t23701 = 1/pow(t23644,3.0/5.0);
            double t23702 = c*kaa1*raa1*t23701*t23660*t23697*(2.0/1.5E1);
            double t23703 = t23700+t23702;
            double t23704 = 1/(t23663*t23663*t23663);
            double t23705 = 1/pow(rho_a[index],2.0E1/3.0);
            double t23706 = 1/(t23652*t23652*t23652);
            double t23707 = t23670*t23672*4.0;
            double t23708 = c*c0*t23650*t23653*t23655*t23664*t23639*(8.0/3.0);
            double t23709 = t23707+t23708+6.0;
            double t23710 = c*c0*t23650*t23653*t23655*t23664*t23697*(2.0/9.0);
            double t23711 = a5*c0*gamma_aa[index]*t23650*t23653*t23664*t23638*t23698*(1.4E1/9.0);
            double t23712 = c*c0*t23703*t23650*t23704*t23653*t23655*t23639*(4.0/3.0);
            double t23713 = c*c0*t23641*t23650*t23705*t23643*t23653*t23645*t23655*t23664*(6.4E1/9.0);
            double t23715 = c*c0*t23641*t23650*t23705*t23643*t23706*t23645*t23655*t23664*(6.4E1/9.0);
            double t23714 = t23710+t23711+t23712+t23713-t23715;
            double t23716 = c*c0*t23650*t23655*t23664*t23697*(2.0/9.0);
            double t23717 = a5*c0*gamma_aa[index]*t23650*t23664*t23638*t23698*(1.4E1/9.0);
            double t23718 = c*c0*t23703*t23650*t23704*t23655*t23639*(4.0/3.0);
            double t23719 = c*c0*t23641*t23650*t23705*t23643*t23645*t23655*t23664*(6.4E1/9.0);
            double t23720 = t23716+t23717+t23718+t23719;
            double t23721 = 1/sqrt(t23671);
            double t23722 = 1/pow(rho_a[index],1.9E1/3.0);
            double t23723 = exp(-t23673);
            double t23726 = t23723*t23680*t23683*t23677*1.0E5;
            double t23733 = c*c0*t23639*(2.0/3.0);
            double t23727 = -t23733+t23726;
            double t23728 = ( (t23727 > 0.0) ?  1.0 : 0.0 ) ;
            double t23730 = t23668*t23669;
            double t23731 = t23709*t23692*t23696;
            double t23732 = t23730+t23731;
            v_rho_a_[index] = ( (c*c0*t23639*(-2.0/3.0)+t23680*t23683*t23677*exp(-t23640*t23641*t23642*t23643) \
               *1.0E5 > 0.0) ?  c0*t23732*t23690*1.0*(1.0/2.0) : 0.0 ) -c0*rho_a[index]*t23690*t23728*(t23692*t23696* \
               (t23720*t23721*t23670*2.0-t23641*t23722*t23643*t23653*t23645*t23672*(6.4E1/3.0)+c*c0*t23650*t23653* \
               t23655*t23664*t23697*(8.0/9.0)+a5*c0*gamma_aa[index]*t23650*t23653*t23664*t23638*t23698*(5.6E1/9.0) \
               +c*c0*t23703*t23650*t23704*t23653*t23655*t23639*(1.6E1/3.0)-c*c0*t23641*t23650*t23705*t23643*t23706* \
               t23645*t23655*t23664*(2.56E2/9.0)+c*c0*t23641*t23650*t23705*t23643*t23653*t23645*t23655*t23664*(2.56E2/ \
               9.0))+t23709*t23696*(t23710+t23711+t23712+t23713-t23715+c*c0*t23650*t23653*t23655*t23664*t23668*t23669* \
               t23697*(2.0/9.0)+a5*c0*gamma_aa[index]*t23650*t23653*t23664*t23638*t23668*t23669*t23698*(1.4E1/9.0) \
               +c*c0*t23703*t23650*t23704*t23653*t23655*t23639*t23668*t23669*(4.0/3.0)+c*c0*t23650*t23714*t23653* \
               t23655*t23664*t23639*t23668*t23669*(2.0/3.0)-c*c0*t23641*t23650*t23705*t23643*t23706*t23645*t23655* \
               t23664*t23668*t23669*(6.4E1/9.0)+c*c0*t23641*t23650*t23705*t23643*t23653*t23645*t23655*t23664*t23668* \
               t23669*(6.4E1/9.0))+t23714*t23668*t23669-t23709*t23692*1/(t23695*t23695)*(t23720*t23721*t23670*3.0- \
               t23641*t23722*t23643*t23653*t23645*t23672*3.2E1+c*c0*t23650*t23653*t23655*t23664*t23697*(4.0/3.0)+ \
               a5*c0*gamma_aa[index]*t23650*t23653*t23664*t23638*t23698*(2.8E1/3.0)+c*c0*t23703*t23650*t23704*t23653* \
               t23655*t23639*8.0-c*c0*t23641*t23650*t23705*t23643*t23706*t23645*t23655*t23664*(1.28E2/3.0)+c*c0*t23641* \
               t23650*t23705*t23643*t23653*t23645*t23655*t23664*(1.28E2/3.0))+(pow(rho_a[index],1.0/3.0)*t23714*(t23652* \
               t23652)*(t23663*t23663)*t23646*exp(-t23649)*(3.0/2.0))/(c0*t23655))*(1.0/2.0)+c0*rho_a[index]*t23732* \
               t23690*t23728*(1/pow(rho_a[index],5.0/3.0)*t23684*t23689*(2.0/3.0)-t23684*t23685*1/(t23688*t23688* \
               t23688)*(c*k2*t23697*(1.0/3.0)+c*k1*t23697*t23699*(1.0/6.0))*2.0)*(1.0/2.0)+ 0.0 ;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t20481 = tspi_m13*tspi_m13;
            double t20482 = 1/pow(rho_b[index],1.0/3.0);
            double t20483 = a2*a2;
            double t20484 = gamma_bb[index]*gamma_bb[index];
            double t20485 = 1/pow(rho_b[index],1.6E1/3.0);
            double t20486 = t20481*t20481;
            double t20487 = c*t20482;
            double t20488 = a4*a4;
            double t20489 = t20484*t20485*t20486*t20488*2.0;
            double t20490 = exp(t20489);
            double t20491 = 1/c;
            double t20492 = 1/pow(rho_b[index],7.0/3.0);
            double t20493 = sqrt(t20487);
            double t20494 = t20484*t20485*t20486*t20488;
            double t20495 = t20494+1.0;
            double t20496 = 1/(t20495*t20495);
            double t20497 = a5*gamma_bb[index]*t20481*t20491*t20492;
            double t20498 = t20497+1.0;
            double t20509 = raa2*t20493;
            double t20499 = exp(-t20509);
            double t20500 = t20499-1.0;
            double t20501 = kaa2*t20500;
            double t20502 = pow(t20487,2.0/5.0);
            double t20510 = raa1*t20502;
            double t20503 = exp(-t20510);
            double t20504 = t20503-1.0;
            double t20505 = kaa1*t20504;
            double t20506 = -kaa0+t20501+t20505;
            double t20507 = 1/(t20506*t20506);
            double t20508 = c*c0*t20507*t20490*t20482*t20496*t20498*(2.0/3.0);
            double t20511 = 1/t20495;
            double t20512 = 1/pow(rho_b[index],4.0/3.0);
            double t20513 = c*c0*t20507*t20490*t20482*t20498*(2.0/3.0);
            double t20514 = sqrt(t20513);
            double t20515 = 1/pow(rho_b[index],1.1E1/3.0);
            double t20516 = 1/sqrt(t20487);
            double t20517 = c*kaa2*raa2*t20512*t20516*t20499*(1.0/6.0);
            double t20518 = 1/pow(t20487,3.0/5.0);
            double t20519 = c*kaa1*raa1*t20503*t20512*t20518*(2.0/1.5E1);
            double t20520 = t20517+t20519;
            double t20521 = 1/(t20506*t20506*t20506);
            double t20522 = 1/pow(rho_b[index],2.0E1/3.0);
            double t20523 = exp(t20508);
            double t20524 = Ei(-t20508);
            double t20525 = 1/(t20495*t20495*t20495);
            double t20526 = t20511*t20514*6.0;
            double t20527 = c*c0*t20507*t20490*t20482*t20496*t20498*4.0;
            double t20528 = t20526+t20527+3.0;
            double t20529 = 1/t20528;
            double t20530 = c*c0*t20512*t20507*t20490*t20496*t20498*(2.0/9.0);
            double t20531 = a5*c0*gamma_bb[index]*t20515*t20507*t20481*t20490*t20496*(1.4E1/9.0);
            double t20532 = c*c0*t20520*t20521*t20490*t20482*t20496*t20498*(4.0/3.0);
            double t20533 = c*c0*t20522*t20507*t20490*t20484*t20486*t20496*t20488*t20498*(6.4E1/9.0);
            double t20535 = c*c0*t20522*t20507*t20525*t20490*t20484*t20486*t20488*t20498*(6.4E1/9.0);
            double t20534 = t20530+t20531+t20532+t20533-t20535;
            double t20536 = c*c0*t20523*t20524*t20507*t20490*t20482*t20496*t20498*(2.0/3.0);
            double t20537 = t20536+1.0;
            double t20538 = t20511*t20514*4.0;
            double t20539 = c*c0*t20507*t20490*t20482*t20496*t20498*(8.0/3.0);
            double t20540 = t20538+t20539+6.0;
            double t20541 = c*c0*t20512*t20507*t20490*t20498*(2.0/9.0);
            double t20542 = a5*c0*gamma_bb[index]*t20515*t20507*t20481*t20490*(1.4E1/9.0);
            double t20543 = c*c0*t20520*t20521*t20490*t20482*t20498*(4.0/3.0);
            double t20544 = c*c0*t20522*t20507*t20490*t20484*t20486*t20488*t20498*(6.4E1/9.0);
            double t20545 = t20541+t20542+t20543+t20544;
            double t20546 = 1/sqrt(t20513);
            double t20547 = 1/pow(rho_b[index],1.9E1/3.0);
            double t20548 = t20483*t20484*t20485*t20486;
            double t20549 = pow(t20487,4.0/5.0);
            double t20567 = rab1*t20549;
            double t20550 = exp(-t20567);
            double t20551 = t20550-1.0;
            double t20568 = kab1*t20551;
            double t20552 = kab0-t20568;
            double t20553 = a3*gamma_bb[index]*t20481*t20491*t20492;
            double t20554 = t20553+1.0;
            double t20555 = 1/sqrt(t20554);
            double t20556 = 1/pow(rho_b[index],8.0/3.0);
            double t20557 = a1*gamma_bb[index]*t20481*t20556;
            double t20558 = t20548+t20557+1.0;
            double t20559 = c*c;
            double t20560 = 1/pow(rho_b[index],2.0/3.0);
            double t20561 = k1*t20493;
            double t20562 = c*k2*t20482;
            double t20563 = t20561+t20562;
            double t20564 = 1/(t20563*t20563);
            double t20570 = t20560*t20564*t20559;
            double t20565 = exp(-t20570);
            double t20566 = exp(-t20548);
            double t20569 = c*c0*t20482*(2.0/3.0);
            double t20571 = t20523*t20524;
            double t20572 = t20540*t20537*t20529;
            double t20573 = t20571+t20572;
            double t20574 = t20552*t20555*t20566*t20558*1.0E5;
            double t20575 = t20574-t20569;
            double t20576 = ( (t20575 > 0.0) ?  1.0 : 0.0 ) ;
            double t20577 = t20483*t20484*t20485*t20486*2.0;
            double t20578 = exp(t20577);
            double t20579 = 1/(t20552*t20552);
            double t20580 = 1/(t20558*t20558);
            double t20581 = c*c0*t20580*t20482*t20554*t20578*t20579*(2.0/3.0);
            double t20582 = sqrt(t20581);
            double t20583 = t20483*t20484*t20547*t20486*(1.6E1/3.0);
            double t20584 = a1*gamma_bb[index]*t20515*t20481*(8.0/3.0);
            double t20585 = t20583+t20584;
            double t20586 = exp(t20581);
            double t20587 = Ei(-t20581);
            double t20588 = c*c0*t20512*t20580*t20554*t20578*t20579*(2.0/9.0);
            double t20589 = 1/(t20558*t20558*t20558);
            double t20590 = a3*c0*gamma_bb[index]*t20515*t20481*t20580*t20578*t20579*(1.4E1/9.0);
            double t20591 = 1/pow(rho_b[index],5.0/3.0);
            double t20592 = 1/pow(t20487,1.0/5.0);
            double t20593 = c*c0*t20522*t20580*t20554*t20483*t20484*t20486*t20578*t20579*(6.4E1/9.0);
            double t20594 = 1/(t20552*t20552*t20552);
            double t20600 = c*c0*t20482*t20554*t20585*t20578*t20579*t20589*(4.0/3.0);
            double t20601 = c0*kab1*rab1*t20550*t20580*t20554*t20591*t20592*t20594*t20559*t20578*(1.6E1/4.5E1) \
               ;
            double t20595 = -t20600-t20601+t20590+t20593+t20588;
            double t20596 = t20582*6.0;
            double t20597 = c*c0*t20580*t20482*t20554*t20578*t20579*4.0;
            double t20598 = t20596+t20597+3.0;
            double t20599 = 1/t20598;
            double t20602 = c*c0*t20580*t20482*t20554*t20586*t20578*t20587*t20579*(2.0/3.0);
            double t20603 = t20602+1.0;
            double t20604 = t20582*4.0;
            double t20605 = c*c0*t20580*t20482*t20554*t20578*t20579*(8.0/3.0);
            double t20606 = t20604+t20605+6.0;
            double t20607 = 1/sqrt(t20581);
            double t20608 = 1/c0;
            double t20609 = pow(rho_b[index],1.0/3.0);
            double t20610 = c*c0*t20512*(2.0/9.0);
            double t20611 = t20552*t20483*t20555*t20484*t20547*t20566*t20486*t20558*(1.6E6/3.0);
            double t20612 = 1/pow(rho_b[index],1.0E1/3.0);
            double t20613 = 1/pow(t20554,3.0/2.0);
            double t20614 = a3*gamma_bb[index]*t20612*t20613*t20552*t20481*t20491*t20566*t20558*(3.5E5/3.0);
            double t20615 = t20610+t20611+t20614-t20552*t20555*t20566*t20585*1.0E5-c*kab1*rab1*t20512*t20550* \
               t20555*t20592*t20566*t20558*(8.0E4/3.0);
            double t20616 = 1/pow(rho_a[index],1.0/3.0);
            double t20617 = gamma_aa[index]*gamma_aa[index];
            double t20618 = 1/pow(rho_a[index],1.6E1/3.0);
            double t20619 = c*t20616;
            double t20620 = pow(t20619,4.0/5.0);
            double t20633 = rab1*t20620;
            double t20621 = exp(-t20633);
            double t20622 = t20621-1.0;
            double t20634 = kab1*t20622;
            double t20623 = kab0-t20634;
            double t20624 = 1/pow(rho_a[index],7.0/3.0);
            double t20625 = a3*gamma_aa[index]*t20624*t20481*t20491;
            double t20626 = t20625+1.0;
            double t20627 = t20617*t20483*t20618*t20486;
            double t20628 = 1/pow(rho_a[index],8.0/3.0);
            double t20629 = a1*gamma_aa[index]*t20481*t20628;
            double t20630 = t20627+t20629+1.0;
            double t20631 = t20617*t20483*t20618*t20486*2.0;
            double t20632 = exp(t20631);
            double t20635 = 1/(t20623*t20623);
            double t20636 = 1/(t20630*t20630);
            double t20637 = c*c0*t20632*t20616*t20626*t20635*t20636*(2.0/3.0);
            double t20638 = exp(t20637);
            double t20639 = Ei(-t20637);
            double t20640 = sqrt(t20637);
            v_rho_b_[index] = -rho_a[index]*(c0*t20576*(t20603*t20599*(t20607*t20595*2.0+c*c0*t20512*t20580*t20554* \
               t20578*t20579*(8.0/9.0)+a3*c0*gamma_bb[index]*t20515*t20481*t20580*t20578*t20579*(5.6E1/9.0)-c*c0* \
               t20482*t20554*t20585*t20578*t20579*t20589*(1.6E1/3.0)+c*c0*t20522*t20580*t20554*t20483*t20484*t20486* \
               t20578*t20579*(2.56E2/9.0)-c0*kab1*rab1*t20550*t20580*t20554*t20591*t20592*t20594*t20559*t20578*(6.4E1/ \
               4.5E1))+t20606*t20599*(-t20600-t20601+t20590+t20593+t20588+c*c0*t20512*t20580*t20554*t20586*t20578* \
               t20587*t20579*(2.0/9.0)+a3*c0*gamma_bb[index]*t20515*t20481*t20580*t20586*t20578*t20587*t20579*(1.4E1/ \
               9.0)+c*c0*t20580*t20482*t20554*t20586*t20595*t20578*t20587*t20579*(2.0/3.0)-c*c0*t20482*t20554*t20585* \
               t20586*t20578*t20587*t20579*t20589*(4.0/3.0)+c*c0*t20522*t20580*t20554*t20483*t20484*t20486*t20586* \
               t20578*t20587*t20579*(6.4E1/9.0)-c0*kab1*rab1*t20550*t20580*t20554*t20591*t20592*t20594*t20559*t20586* \
               t20578*t20587*(1.6E1/4.5E1))+t20586*t20595*t20587-t20603*t20606*1/(t20598*t20598)*(t20607*t20595*3.0+ \
               c*c0*t20512*t20580*t20554*t20578*t20579*(4.0/3.0)+a3*c0*gamma_bb[index]*t20515*t20481*t20580*t20578* \
               t20579*(2.8E1/3.0)-c*c0*t20482*t20554*t20585*t20578*t20579*t20589*8.0+c*c0*t20522*t20580*t20554*t20483* \
               t20484*t20486*t20578*t20579*(1.28E2/3.0)-c0*kab1*rab1*t20550*t20580*t20554*t20591*t20592*t20594*t20559* \
               t20578*(3.2E1/1.5E1))+((t20552*t20552)*t20491*t20608*t20609*(t20558*t20558)*t20595*exp(-t20577)*(3.0/ \
               2.0))/t20554)*(1.0/2.0)- 0.0 )+rho_b[index]*( ( (c*c0*t20482*(-2.0/3.0)+t20552*t20555*t20558*exp(- \
               t20483*t20484*t20485*t20486)*1.0E5 > 0.0) ? c0*t20565*1.0*(t20537*t20529*(t20511*t20545*t20546*2.0- \
               t20514*t20484*t20547*t20486*t20496*t20488*(6.4E1/3.0)+c*c0*t20512*t20507*t20490*t20496*t20498*(8.0/ \
               9.0)+a5*c0*gamma_bb[index]*t20515*t20507*t20481*t20490*t20496*(5.6E1/9.0)+c*c0*t20520*t20521*t20490* \
               t20482*t20496*t20498*(1.6E1/3.0)-c*c0*t20522*t20507*t20525*t20490*t20484*t20486*t20488*t20498*(2.56E2/ \
               9.0)+c*c0*t20522*t20507*t20490*t20484*t20486*t20496*t20488*t20498*(2.56E2/9.0))+t20540*t20529*(t20530+ \
               t20531+t20532+t20533-t20535+c*c0*t20512*t20523*t20524*t20507*t20490*t20496*t20498*(2.0/9.0)+a5*c0* \
               gamma_bb[index]*t20523*t20515*t20524*t20507*t20481*t20490*t20496*(1.4E1/9.0)+c*c0*t20520*t20521*t20523* \
               t20524*t20490*t20482*t20496*t20498*(4.0/3.0)+c*c0*t20523*t20524*t20507*t20534*t20490*t20482*t20496* \
               t20498*(2.0/3.0)-c*c0*t20522*t20523*t20524*t20507*t20525*t20490*t20484*t20486*t20488*t20498*(6.4E1/ \
               9.0)+c*c0*t20522*t20523*t20524*t20507*t20490*t20484*t20486*t20496*t20488*t20498*(6.4E1/9.0))+t20523* \
               t20524*t20534-t20540*1/(t20528*t20528)*t20537*(t20511*t20545*t20546*3.0-t20514*t20484*t20547*t20486* \
               t20496*t20488*3.2E1+c*c0*t20512*t20507*t20490*t20496*t20498*(4.0/3.0)+a5*c0*gamma_bb[index]*t20515* \
               t20507*t20481*t20490*t20496*(2.8E1/3.0)+c*c0*t20520*t20521*t20490*t20482*t20496*t20498*8.0-c*c0*t20522* \
               t20507*t20525*t20490*t20484*t20486*t20488*t20498*(1.28E2/3.0)+c*c0*t20522*t20507*t20490*t20484*t20486* \
               t20496*t20488*t20498*(1.28E2/3.0))+((t20506*t20506)*t20534*t20491*t20608*t20609*(t20495*t20495)*exp(- \
               t20489)*(3.0/2.0))/t20498)*(-1.0/2.0) : 0.0 ) +c0*t20573*t20565*t20576*(t20564*t20591*t20559*(2.0/ \
               3.0)-t20560*1/(t20563*t20563*t20563)*t20559*(c*k2*t20512*(1.0/3.0)+c*k1*t20512*t20516*(1.0/6.0))*2.0) \
               *(1.0/2.0)+ 0.0 )+ ( (c*c0*t20616*(-2.0/3.0)+t20630*t20623*1/sqrt(t20626)*exp(-t20617*t20483*t20618* \
               t20486)*1.0E5 > 0.0) ? c0*1.0*(t20638*t20639+((c*c0*t20632*t20616*t20626*t20635*t20636*t20638*t20639* \
               (2.0/3.0)+1.0)*(t20640*4.0+c*c0*t20632*t20616*t20626*t20635*t20636*(8.0/3.0)+6.0))/(t20640*6.0+c*c0* \
               t20632*t20616*t20626*t20635*t20636*4.0+3.0))*(1.0/2.0) : 0.0 ) +c0*t20573*t20565*t20576*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t22842 = tspi_m13*tspi_m13;
            double t22843 = 1/pow(rho_b[index],1.0/3.0);
            double t22844 = a2*a2;
            double t22845 = gamma_bb[index]*gamma_bb[index];
            double t22846 = 1/pow(rho_b[index],1.6E1/3.0);
            double t22847 = t22842*t22842;
            double t22848 = c*t22843;
            double t22849 = a4*a4;
            double t22850 = 1/c;
            double t22851 = 1/pow(rho_b[index],7.0/3.0);
            double t22852 = sqrt(t22848);
            double t22853 = t22845*t22846*t22847*t22849*2.0;
            double t22854 = exp(t22853);
            double t22855 = t22845*t22846*t22847*t22849;
            double t22856 = t22855+1.0;
            double t22857 = 1/(t22856*t22856);
            double t22858 = a5*gamma_bb[index]*t22850*t22842*t22851;
            double t22859 = t22858+1.0;
            double t22870 = raa2*t22852;
            double t22860 = exp(-t22870);
            double t22861 = t22860-1.0;
            double t22862 = kaa2*t22861;
            double t22863 = pow(t22848,2.0/5.0);
            double t22871 = raa1*t22863;
            double t22864 = exp(-t22871);
            double t22865 = t22864-1.0;
            double t22866 = kaa1*t22865;
            double t22867 = -kaa0+t22862+t22866;
            double t22868 = 1/(t22867*t22867);
            double t22869 = c*c0*t22843*t22854*t22857*t22859*t22868*(2.0/3.0);
            double t22872 = exp(t22869);
            double t22873 = Ei(-t22869);
            double t22874 = 1/t22856;
            double t22875 = c*c0*t22843*t22854*t22859*t22868*(2.0/3.0);
            double t22876 = sqrt(t22875);
            double t22877 = t22844*t22845*t22846*t22847;
            double t22878 = pow(t22848,4.0/5.0);
            double t22928 = rab1*t22878;
            double t22879 = exp(-t22928);
            double t22880 = t22879-1.0;
            double t22929 = kab1*t22880;
            double t22881 = kab0-t22929;
            double t22882 = a3*gamma_bb[index]*t22850*t22842*t22851;
            double t22883 = t22882+1.0;
            double t22884 = 1/sqrt(t22883);
            double t22885 = 1/pow(rho_b[index],8.0/3.0);
            double t22886 = a1*gamma_bb[index]*t22842*t22885;
            double t22887 = t22877+t22886+1.0;
            double t22888 = c*c;
            double t22889 = 1/pow(rho_b[index],2.0/3.0);
            double t22890 = k1*t22852;
            double t22891 = c*k2*t22843;
            double t22892 = t22890+t22891;
            double t22893 = 1/(t22892*t22892);
            double t22933 = t22893*t22888*t22889;
            double t22894 = exp(-t22933);
            double t22895 = c*c0*t22843*t22854*t22872*t22873*t22857*t22859*t22868*(2.0/3.0);
            double t22896 = t22895+1.0;
            double t22897 = t22874*t22876*6.0;
            double t22898 = c*c0*t22843*t22854*t22857*t22859*t22868*4.0;
            double t22899 = t22897+t22898+3.0;
            double t22900 = 1/t22899;
            double t22901 = 1/pow(rho_b[index],4.0/3.0);
            double t22902 = 1/pow(rho_b[index],1.1E1/3.0);
            double t22903 = 1/sqrt(t22848);
            double t22904 = c*kaa2*raa2*t22901*t22903*t22860*(1.0/6.0);
            double t22905 = 1/pow(t22848,3.0/5.0);
            double t22906 = c*kaa1*raa1*t22901*t22905*t22864*(2.0/1.5E1);
            double t22907 = t22904+t22906;
            double t22908 = 1/(t22867*t22867*t22867);
            double t22909 = 1/pow(rho_b[index],2.0E1/3.0);
            double t22910 = 1/(t22856*t22856*t22856);
            double t22911 = t22874*t22876*4.0;
            double t22912 = c*c0*t22843*t22854*t22857*t22859*t22868*(8.0/3.0);
            double t22913 = t22911+t22912+6.0;
            double t22914 = c*c0*t22901*t22854*t22857*t22859*t22868*(2.0/9.0);
            double t22915 = a5*c0*gamma_bb[index]*t22902*t22842*t22854*t22857*t22868*(1.4E1/9.0);
            double t22916 = c*c0*t22843*t22907*t22854*t22908*t22857*t22859*(4.0/3.0);
            double t22917 = c*c0*t22845*t22854*t22909*t22847*t22857*t22849*t22859*t22868*(6.4E1/9.0);
            double t22919 = c*c0*t22910*t22845*t22854*t22909*t22847*t22849*t22859*t22868*(6.4E1/9.0);
            double t22918 = t22914+t22915+t22916+t22917-t22919;
            double t22920 = c*c0*t22901*t22854*t22859*t22868*(2.0/9.0);
            double t22921 = a5*c0*gamma_bb[index]*t22902*t22842*t22854*t22868*(1.4E1/9.0);
            double t22922 = c*c0*t22843*t22907*t22854*t22908*t22859*(4.0/3.0);
            double t22923 = c*c0*t22845*t22854*t22909*t22847*t22849*t22859*t22868*(6.4E1/9.0);
            double t22924 = t22920+t22921+t22922+t22923;
            double t22925 = 1/sqrt(t22875);
            double t22926 = 1/pow(rho_b[index],1.9E1/3.0);
            double t22927 = exp(-t22877);
            double t22930 = t22881*t22927*t22884*t22887*1.0E5;
            double t22937 = c*c0*t22843*(2.0/3.0);
            double t22931 = t22930-t22937;
            double t22932 = ( (t22931 > 0.0) ?  1.0 : 0.0 ) ;
            double t22934 = t22872*t22873;
            double t22935 = t22900*t22913*t22896;
            double t22936 = t22934+t22935;
            v_rho_b_[index] = ( (c*c0*t22843*(-2.0/3.0)+t22881*t22884*t22887*exp(-t22844*t22845*t22846*t22847) \
               *1.0E5 > 0.0) ?  c0*t22936*t22894*1.0*(1.0/2.0) : 0.0 ) -c0*rho_b[index]*t22932*t22894*(t22900*t22896* \
               (t22924*t22925*t22874*2.0-t22845*t22926*t22847*t22857*t22849*t22876*(6.4E1/3.0)+c*c0*t22901*t22854* \
               t22857*t22859*t22868*(8.0/9.0)+a5*c0*gamma_bb[index]*t22902*t22842*t22854*t22857*t22868*(5.6E1/9.0) \
               +c*c0*t22843*t22907*t22854*t22908*t22857*t22859*(1.6E1/3.0)-c*c0*t22910*t22845*t22854*t22909*t22847* \
               t22849*t22859*t22868*(2.56E2/9.0)+c*c0*t22845*t22854*t22909*t22847*t22857*t22849*t22859*t22868*(2.56E2/ \
               9.0))+t22900*t22913*(t22914+t22915+t22916+t22917-t22919+c*c0*t22901*t22854*t22872*t22873*t22857*t22859* \
               t22868*(2.0/9.0)+a5*c0*gamma_bb[index]*t22902*t22842*t22854*t22872*t22873*t22857*t22868*(1.4E1/9.0) \
               +c*c0*t22843*t22907*t22854*t22872*t22908*t22873*t22857*t22859*(4.0/3.0)+c*c0*t22843*t22854*t22872* \
               t22873*t22918*t22857*t22859*t22868*(2.0/3.0)-c*c0*t22910*t22845*t22854*t22872*t22873*t22909*t22847* \
               t22849*t22859*t22868*(6.4E1/9.0)+c*c0*t22845*t22854*t22872*t22873*t22909*t22847*t22857*t22849*t22859* \
               t22868*(6.4E1/9.0))+t22872*t22873*t22918-t22913*t22896*1/(t22899*t22899)*(t22924*t22925*t22874*3.0- \
               t22845*t22926*t22847*t22857*t22849*t22876*3.2E1+c*c0*t22901*t22854*t22857*t22859*t22868*(4.0/3.0)+ \
               a5*c0*gamma_bb[index]*t22902*t22842*t22854*t22857*t22868*(2.8E1/3.0)+c*c0*t22843*t22907*t22854*t22908* \
               t22857*t22859*8.0-c*c0*t22910*t22845*t22854*t22909*t22847*t22849*t22859*t22868*(1.28E2/3.0)+c*c0*t22845* \
               t22854*t22909*t22847*t22857*t22849*t22859*t22868*(1.28E2/3.0))+(pow(rho_b[index],1.0/3.0)*t22850*t22918* \
               (t22856*t22856)*(t22867*t22867)*exp(-t22853)*(3.0/2.0))/(c0*t22859))*(1.0/2.0)+c0*rho_b[index]*t22932* \
               t22936*t22894*(1/pow(rho_b[index],5.0/3.0)*t22893*t22888*(2.0/3.0)-1/(t22892*t22892*t22892)*t22888* \
               t22889*(c*k2*t22901*(1.0/3.0)+c*k1*t22901*t22903*(1.0/6.0))*2.0)*(1.0/2.0)+ 0.0 ;
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t20642 = tspi_m13*tspi_m13;
                double t20643 = 1/pow(rho_a[index],1.0/3.0);
                double t20644 = a2*a2;
                double t20645 = gamma_aa[index]*gamma_aa[index];
                double t20646 = 1/pow(rho_a[index],1.6E1/3.0);
                double t20647 = t20642*t20642;
                double t20648 = t20644*t20645*t20646*t20647*2.0;
                double t20649 = exp(t20648);
                double t20650 = c*t20643;
                double t20651 = pow(t20650,4.0/5.0);
                double t20663 = rab1*t20651;
                double t20652 = exp(-t20663);
                double t20653 = t20652-1.0;
                double t20664 = kab1*t20653;
                double t20654 = kab0-t20664;
                double t20655 = 1/c;
                double t20656 = 1/pow(rho_a[index],7.0/3.0);
                double t20657 = a3*gamma_aa[index]*t20642*t20655*t20656;
                double t20658 = t20657+1.0;
                double t20659 = t20644*t20645*t20646*t20647;
                double t20660 = 1/pow(rho_a[index],8.0/3.0);
                double t20661 = a1*gamma_aa[index]*t20642*t20660;
                double t20662 = t20661+t20659+1.0;
                double t20665 = 1/(t20654*t20654);
                double t20666 = 1/(t20662*t20662);
                double t20667 = c*c0*t20643*t20665*t20666*t20649*t20658*(2.0/3.0);
                double t20668 = a1*t20642*t20660;
                double t20669 = gamma_aa[index]*t20644*t20646*t20647*2.0;
                double t20670 = t20668+t20669;
                double t20671 = 1/(t20662*t20662*t20662);
                double t20672 = 1/pow(rho_a[index],1.7E1/3.0);
                double t20673 = exp(t20667);
                double t20674 = Ei(-t20667);
                double t20675 = a3*c0*t20642*t20660*t20665*t20666*t20649*(2.0/3.0);
                double t20676 = c*c0*gamma_aa[index]*t20644*t20672*t20647*t20665*t20666*t20649*t20658*(8.0/3.0);
                double t20683 = c*c0*t20643*t20670*t20671*t20665*t20649*t20658*(4.0/3.0);
                double t20677 = -t20683+t20675+t20676;
                double t20678 = sqrt(t20667);
                double t20679 = t20678*6.0;
                double t20680 = c*c0*t20643*t20665*t20666*t20649*t20658*4.0;
                double t20681 = t20680+t20679+3.0;
                double t20682 = 1/t20681;
                double t20684 = c*c0*t20643*t20673*t20665*t20674*t20666*t20649*t20658*(2.0/3.0);
                double t20685 = t20684+1.0;
                double t20686 = t20678*4.0;
                double t20687 = c*c0*t20643*t20665*t20666*t20649*t20658*(8.0/3.0);
                double t20688 = t20686+t20687+6.0;
                double t20689 = 1/sqrt(t20667);
                double t20690 = 1/sqrt(t20658);
                double t20691 = exp(-t20659);
                double t20692 = c*c0*t20643*(2.0/3.0);
                double t20693 = a4*a4;
                double t20694 = sqrt(t20650);
                double t20695 = t20645*t20646*t20647*t20693*2.0;
                double t20696 = exp(t20695);
                double t20697 = t20645*t20646*t20647*t20693;
                double t20698 = t20697+1.0;
                double t20699 = 1/(t20698*t20698);
                double t20700 = a5*gamma_aa[index]*t20642*t20655*t20656;
                double t20701 = t20700+1.0;
                double t20712 = raa2*t20694;
                double t20702 = exp(-t20712);
                double t20703 = t20702-1.0;
                double t20704 = kaa2*t20703;
                double t20705 = pow(t20650,2.0/5.0);
                double t20713 = raa1*t20705;
                double t20706 = exp(-t20713);
                double t20707 = t20706-1.0;
                double t20708 = kaa1*t20707;
                double t20709 = -kaa0+t20704+t20708;
                double t20710 = 1/(t20709*t20709);
                double t20711 = c*c0*t20701*t20710*t20643*t20696*t20699*(2.0/3.0);
                double t20714 = exp(t20711);
                double t20715 = Ei(-t20711);
                double t20716 = 1/t20698;
                double t20717 = c*c0*t20701*t20710*t20643*t20696*(2.0/3.0);
                double t20718 = sqrt(t20717);
                double t20719 = 1/(t20698*t20698*t20698);
                double t20720 = t20716*t20718*6.0;
                double t20721 = c*c0*t20701*t20710*t20643*t20696*t20699*4.0;
                double t20722 = t20720+t20721+3.0;
                double t20723 = 1/t20722;
                double t20724 = a5*c0*t20710*t20642*t20660*t20696*t20699*(2.0/3.0);
                double t20725 = c*c0*gamma_aa[index]*t20701*t20710*t20672*t20647*t20693*t20696*t20699*(8.0/3.0);
                double t20738 = c*c0*gamma_aa[index]*t20701*t20710*t20672*t20647*t20719*t20693*t20696*(8.0/3.0);
                double t20726 = t20724+t20725-t20738;
                double t20727 = c*c0*t20701*t20710*t20714*t20643*t20715*t20696*t20699*(2.0/3.0);
                double t20728 = t20727+1.0;
                double t20729 = t20716*t20718*4.0;
                double t20730 = c*c0*t20701*t20710*t20643*t20696*t20699*(8.0/3.0);
                double t20731 = t20730+t20729+6.0;
                double t20732 = a5*c0*t20710*t20642*t20660*t20696*(2.0/3.0);
                double t20733 = c*c0*gamma_aa[index]*t20701*t20710*t20672*t20647*t20693*t20696*(8.0/3.0);
                double t20734 = t20732+t20733;
                double t20735 = 1/sqrt(t20717);
                double t20736 = 1/c0;
                double t20737 = pow(rho_a[index],1.0/3.0);
                double t20739 = t20662*t20654*t20690*t20691*1.0E5;
                double t20740 = c*c;
                double t20741 = 1/pow(rho_a[index],2.0/3.0);
                double t20742 = k1*t20694;
                double t20743 = c*k2*t20643;
                double t20744 = t20742+t20743;
                double t20745 = 1/(t20744*t20744);
                double t20746 = exp(-t20740*t20741*t20745);
                double t20747 = 1/pow(t20658,3.0/2.0);
                double t20748 = a3*t20642*t20662*t20654*t20655*t20691*t20656*t20747*5.0E4;
                double t20749 = gamma_aa[index]*t20644*t20662*t20654*t20690*t20646*t20691*t20647*2.0E5;
                double t20750 = t20748+t20749-t20670*t20654*t20690*t20691*1.0E5;
                v_gamma_aa_[index] = rho_b[index]*( ( (c*c0*t20643*(-2.0/3.0)+t20662*t20654*t20690*exp(-t20644*t20645* \
                   t20646*t20647)*1.0E5 > 0.0) ? c0*1.0*(t20673*t20674*t20677+t20682*t20688*(-t20683+t20675+t20676+a3* \
                   c0*t20642*t20660*t20673*t20665*t20674*t20666*t20649*(2.0/3.0)-c*c0*t20643*t20670*t20671*t20673*t20665* \
                   t20674*t20649*t20658*(4.0/3.0)+c*c0*t20643*t20673*t20665*t20674*t20666*t20649*t20658*t20677*(2.0/3.0) \
                   +c*c0*gamma_aa[index]*t20644*t20672*t20673*t20647*t20665*t20674*t20666*t20649*t20658*(8.0/3.0))+t20682* \
                   t20685*(t20677*t20689*2.0+a3*c0*t20642*t20660*t20665*t20666*t20649*(8.0/3.0)-c*c0*t20643*t20670*t20671* \
                   t20665*t20649*t20658*(1.6E1/3.0)+c*c0*gamma_aa[index]*t20644*t20672*t20647*t20665*t20666*t20649*t20658* \
                   (3.2E1/3.0))-1/(t20681*t20681)*t20685*t20688*(t20677*t20689*3.0+a3*c0*t20642*t20660*t20665*t20666* \
                   t20649*4.0-c*c0*t20643*t20670*t20671*t20665*t20649*t20658*8.0+c*c0*gamma_aa[index]*t20644*t20672*t20647* \
                   t20665*t20666*t20649*t20658*1.6E1)+((t20662*t20662)*(t20654*t20654)*t20655*t20736*t20737*t20677*exp(- \
                   t20648)*(3.0/2.0))/t20658)*(1.0/2.0) : 0.0 ) - 0.0 )+rho_a[index]*( ( (-t20692+t20739 > 0.0) ? c0* \
                   t20746*1.0*(t20723*t20728*(t20716*t20734*t20735*2.0-gamma_aa[index]*t20646*t20718*t20647*t20693*t20699* \
                   8.0+a5*c0*t20710*t20642*t20660*t20696*t20699*(8.0/3.0)-c*c0*gamma_aa[index]*t20701*t20710*t20672*t20647* \
                   t20719*t20693*t20696*(3.2E1/3.0)+c*c0*gamma_aa[index]*t20701*t20710*t20672*t20647*t20693*t20696*t20699* \
                   (3.2E1/3.0))+t20731*t20723*(t20724+t20725+a5*c0*t20710*t20642*t20660*t20714*t20715*t20696*t20699*(2.0/ \
                   3.0)-c*c0*gamma_aa[index]*t20701*t20710*t20672*t20647*t20719*t20693*t20696*(8.0/3.0)+c*c0*t20701*t20710* \
                   t20714*t20643*t20715*t20726*t20696*t20699*(2.0/3.0)-c*c0*gamma_aa[index]*t20701*t20710*t20714*t20715* \
                   t20672*t20647*t20719*t20693*t20696*(8.0/3.0)+c*c0*gamma_aa[index]*t20701*t20710*t20714*t20715*t20672* \
                   t20647*t20693*t20696*t20699*(8.0/3.0))+t20714*t20715*t20726-1/(t20722*t20722)*t20731*t20728*(t20716* \
                   t20734*t20735*3.0-gamma_aa[index]*t20646*t20718*t20647*t20693*t20699*1.2E1+a5*c0*t20710*t20642*t20660* \
                   t20696*t20699*4.0-c*c0*gamma_aa[index]*t20701*t20710*t20672*t20647*t20719*t20693*t20696*1.6E1+c*c0* \
                   gamma_aa[index]*t20701*t20710*t20672*t20647*t20693*t20696*t20699*1.6E1)+(t20726*t20655*(t20709*t20709) \
                   *t20736*t20737*(t20698*t20698)*exp(-t20695)*(3.0/2.0))/t20701)*(1.0/2.0) : 0.0 ) - 0.0 );
            } else if (rho_a[index] > cutoff_) {
                double t23736 = tspi_m13*tspi_m13;
                double t23737 = 1/pow(rho_a[index],1.0/3.0);
                double t23738 = a2*a2;
                double t23739 = gamma_aa[index]*gamma_aa[index];
                double t23740 = 1/pow(rho_a[index],1.6E1/3.0);
                double t23741 = t23736*t23736;
                double t23742 = c*t23737;
                double t23743 = a4*a4;
                double t23744 = 1/c;
                double t23745 = 1/pow(rho_a[index],7.0/3.0);
                double t23746 = sqrt(t23742);
                double t23747 = t23740*t23741*t23743*t23739*2.0;
                double t23748 = exp(t23747);
                double t23749 = t23740*t23741*t23743*t23739;
                double t23750 = t23749+1.0;
                double t23751 = 1/(t23750*t23750);
                double t23752 = a5*gamma_aa[index]*t23744*t23736*t23745;
                double t23753 = t23752+1.0;
                double t23765 = raa2*t23746;
                double t23754 = exp(-t23765);
                double t23755 = t23754-1.0;
                double t23756 = kaa2*t23755;
                double t23757 = pow(t23742,2.0/5.0);
                double t23766 = raa1*t23757;
                double t23758 = exp(-t23766);
                double t23759 = t23758-1.0;
                double t23760 = kaa1*t23759;
                double t23761 = -kaa0+t23760+t23756;
                double t23762 = 1/(t23761*t23761);
                double t23763 = c*c0*t23751*t23753*t23762*t23737*t23748*(2.0/3.0);
                double t23764 = 1/pow(rho_a[index],8.0/3.0);
                double t23767 = 1/pow(rho_a[index],1.7E1/3.0);
                double t23768 = exp(t23763);
                double t23769 = Ei(-t23763);
                double t23770 = 1/t23750;
                double t23771 = c*c0*t23753*t23762*t23737*t23748*(2.0/3.0);
                double t23772 = sqrt(t23771);
                double t23773 = 1/(t23750*t23750*t23750);
                double t23774 = t23770*t23772*6.0;
                double t23775 = c*c0*t23751*t23753*t23762*t23737*t23748*4.0;
                double t23776 = t23774+t23775+3.0;
                double t23777 = 1/t23776;
                double t23778 = a5*c0*t23751*t23762*t23736*t23764*t23748*(2.0/3.0);
                double t23779 = c*c0*gamma_aa[index]*t23741*t23751*t23743*t23753*t23762*t23748*t23767*(8.0/3.0);
                double t23790 = c*c0*gamma_aa[index]*t23741*t23743*t23753*t23762*t23773*t23748*t23767*(8.0/3.0);
                double t23780 = -t23790+t23778+t23779;
                double t23781 = c*c0*t23751*t23753*t23762*t23737*t23748*t23768*t23769*(2.0/3.0);
                double t23782 = t23781+1.0;
                double t23783 = t23770*t23772*4.0;
                double t23784 = c*c0*t23751*t23753*t23762*t23737*t23748*(8.0/3.0);
                double t23785 = t23783+t23784+6.0;
                double t23786 = a5*c0*t23762*t23736*t23764*t23748*(2.0/3.0);
                double t23787 = c*c0*gamma_aa[index]*t23741*t23743*t23753*t23762*t23748*t23767*(8.0/3.0);
                double t23788 = t23786+t23787;
                double t23789 = 1/sqrt(t23771);
                double t23791 = t23740*t23741*t23738*t23739;
                double t23792 = pow(t23742,4.0/5.0);
                double t23809 = rab1*t23792;
                double t23793 = exp(-t23809);
                double t23794 = t23793-1.0;
                double t23810 = kab1*t23794;
                double t23795 = kab0-t23810;
                double t23796 = a3*gamma_aa[index]*t23744*t23736*t23745;
                double t23797 = t23796+1.0;
                double t23798 = 1/sqrt(t23797);
                double t23799 = a1*gamma_aa[index]*t23736*t23764;
                double t23800 = t23791+t23799+1.0;
                double t23801 = c*c;
                double t23802 = 1/pow(rho_a[index],2.0/3.0);
                double t23803 = k1*t23746;
                double t23804 = c*k2*t23737;
                double t23805 = t23803+t23804;
                double t23806 = 1/(t23805*t23805);
                double t23807 = exp(-t23801*t23802*t23806);
                double t23808 = exp(-t23791);
                v_gamma_aa_[index] = ( (c*c0*t23737*(-2.0/3.0)+t23800*t23795*t23798*exp(-t23740*t23741*t23738*t23739) \
                   *1.0E5 > 0.0) ?  c0*rho_a[index]*t23807*1.0*(t23782*t23777*(t23770*t23788*t23789*2.0-gamma_aa[index]* \
                   t23740*t23741*t23751*t23743*t23772*8.0+a5*c0*t23751*t23762*t23736*t23764*t23748*(8.0/3.0)+c*c0*gamma_aa[index]* \
                   t23741*t23751*t23743*t23753*t23762*t23748*t23767*(3.2E1/3.0)-c*c0*gamma_aa[index]*t23741*t23743*t23753* \
                   t23762*t23773*t23748*t23767*(3.2E1/3.0))+t23785*t23777*(t23778+t23779+a5*c0*t23751*t23762*t23736*t23764* \
                   t23748*t23768*t23769*(2.0/3.0)-c*c0*gamma_aa[index]*t23741*t23743*t23753*t23762*t23773*t23748*t23767* \
                   (8.0/3.0)+c*c0*t23751*t23753*t23762*t23780*t23737*t23748*t23768*t23769*(2.0/3.0)+c*c0*gamma_aa[index]* \
                   t23741*t23751*t23743*t23753*t23762*t23748*t23767*t23768*t23769*(8.0/3.0)-c*c0*gamma_aa[index]*t23741* \
                   t23743*t23753*t23762*t23773*t23748*t23767*t23768*t23769*(8.0/3.0))+t23780*t23768*t23769-t23782*1/(t23776* \
                   t23776)*t23785*(t23770*t23788*t23789*3.0-gamma_aa[index]*t23740*t23741*t23751*t23743*t23772*1.2E1+ \
                   a5*c0*t23751*t23762*t23736*t23764*t23748*4.0+c*c0*gamma_aa[index]*t23741*t23751*t23743*t23753*t23762* \
                   t23748*t23767*1.6E1-c*c0*gamma_aa[index]*t23741*t23743*t23753*t23762*t23773*t23748*t23767*1.6E1)+(pow(rho_a[index],1.0/ \
                   3.0)*(t23750*t23750)*(t23761*t23761)*t23744*t23780*exp(-t23747)*(3.0/2.0))/(c0*t23753))*(1.0/2.0)  \
                   : 0.0 ) - 0.0 ;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t20753 = tspi_m13*tspi_m13;
                double t20754 = 1/pow(rho_b[index],1.0/3.0);
                double t20755 = a2*a2;
                double t20756 = gamma_bb[index]*gamma_bb[index];
                double t20757 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20758 = t20753*t20753;
                double t20759 = t20755*t20756*t20757*t20758*2.0;
                double t20760 = exp(t20759);
                double t20761 = c*t20754;
                double t20762 = pow(t20761,4.0/5.0);
                double t20774 = rab1*t20762;
                double t20763 = exp(-t20774);
                double t20764 = t20763-1.0;
                double t20775 = kab1*t20764;
                double t20765 = kab0-t20775;
                double t20766 = 1/c;
                double t20767 = 1/pow(rho_b[index],7.0/3.0);
                double t20768 = a3*gamma_bb[index]*t20753*t20766*t20767;
                double t20769 = t20768+1.0;
                double t20770 = t20755*t20756*t20757*t20758;
                double t20771 = 1/pow(rho_b[index],8.0/3.0);
                double t20772 = a1*gamma_bb[index]*t20753*t20771;
                double t20773 = t20770+t20772+1.0;
                double t20776 = 1/(t20765*t20765);
                double t20777 = 1/(t20773*t20773);
                double t20778 = c*c0*t20760*t20754*t20776*t20777*t20769*(2.0/3.0);
                double t20779 = a1*t20753*t20771;
                double t20780 = gamma_bb[index]*t20755*t20757*t20758*2.0;
                double t20781 = t20780+t20779;
                double t20782 = 1/(t20773*t20773*t20773);
                double t20783 = 1/pow(rho_b[index],1.7E1/3.0);
                double t20784 = exp(t20778);
                double t20785 = Ei(-t20778);
                double t20786 = a3*c0*t20760*t20753*t20771*t20776*t20777*(2.0/3.0);
                double t20787 = c*c0*gamma_bb[index]*t20760*t20755*t20783*t20758*t20776*t20777*t20769*(8.0/3.0);
                double t20794 = c*c0*t20760*t20754*t20781*t20782*t20776*t20769*(4.0/3.0);
                double t20788 = -t20794+t20786+t20787;
                double t20789 = sqrt(t20778);
                double t20790 = t20789*6.0;
                double t20791 = c*c0*t20760*t20754*t20776*t20777*t20769*4.0;
                double t20792 = t20790+t20791+3.0;
                double t20793 = 1/t20792;
                double t20795 = c*c0*t20760*t20754*t20784*t20776*t20785*t20777*t20769*(2.0/3.0);
                double t20796 = t20795+1.0;
                double t20797 = t20789*4.0;
                double t20798 = c*c0*t20760*t20754*t20776*t20777*t20769*(8.0/3.0);
                double t20799 = t20797+t20798+6.0;
                double t20800 = 1/sqrt(t20778);
                double t20801 = 1/sqrt(t20769);
                double t20802 = exp(-t20770);
                double t20803 = c*c0*t20754*(2.0/3.0);
                double t20804 = a4*a4;
                double t20805 = sqrt(t20761);
                double t20806 = t20804*t20756*t20757*t20758*2.0;
                double t20807 = exp(t20806);
                double t20808 = t20804*t20756*t20757*t20758;
                double t20809 = t20808+1.0;
                double t20810 = 1/(t20809*t20809);
                double t20811 = a5*gamma_bb[index]*t20753*t20766*t20767;
                double t20812 = t20811+1.0;
                double t20823 = raa2*t20805;
                double t20813 = exp(-t20823);
                double t20814 = t20813-1.0;
                double t20815 = kaa2*t20814;
                double t20816 = pow(t20761,2.0/5.0);
                double t20824 = raa1*t20816;
                double t20817 = exp(-t20824);
                double t20818 = t20817-1.0;
                double t20819 = kaa1*t20818;
                double t20820 = -kaa0+t20815+t20819;
                double t20821 = 1/(t20820*t20820);
                double t20822 = c*c0*t20810*t20812*t20821*t20807*t20754*(2.0/3.0);
                double t20825 = exp(t20822);
                double t20826 = Ei(-t20822);
                double t20827 = 1/t20809;
                double t20828 = c*c0*t20812*t20821*t20807*t20754*(2.0/3.0);
                double t20829 = sqrt(t20828);
                double t20830 = 1/(t20809*t20809*t20809);
                double t20831 = t20827*t20829*6.0;
                double t20832 = c*c0*t20810*t20812*t20821*t20807*t20754*4.0;
                double t20833 = t20831+t20832+3.0;
                double t20834 = 1/t20833;
                double t20835 = a5*c0*t20810*t20821*t20753*t20771*t20807*(2.0/3.0);
                double t20836 = c*c0*gamma_bb[index]*t20810*t20812*t20821*t20804*t20807*t20783*t20758*(8.0/3.0);
                double t20849 = c*c0*gamma_bb[index]*t20812*t20821*t20830*t20804*t20807*t20783*t20758*(8.0/3.0);
                double t20837 = t20835+t20836-t20849;
                double t20838 = c*c0*t20810*t20812*t20821*t20807*t20825*t20754*t20826*(2.0/3.0);
                double t20839 = t20838+1.0;
                double t20840 = t20827*t20829*4.0;
                double t20841 = c*c0*t20810*t20812*t20821*t20807*t20754*(8.0/3.0);
                double t20842 = t20840+t20841+6.0;
                double t20843 = a5*c0*t20821*t20753*t20771*t20807*(2.0/3.0);
                double t20844 = c*c0*gamma_bb[index]*t20812*t20821*t20804*t20807*t20783*t20758*(8.0/3.0);
                double t20845 = t20843+t20844;
                double t20846 = 1/sqrt(t20828);
                double t20847 = 1/c0;
                double t20848 = pow(rho_b[index],1.0/3.0);
                double t20850 = t20801*t20802*t20773*t20765*1.0E5;
                double t20851 = c*c;
                double t20852 = 1/pow(rho_b[index],2.0/3.0);
                double t20853 = k1*t20805;
                double t20854 = c*k2*t20754;
                double t20855 = t20853+t20854;
                double t20856 = 1/(t20855*t20855);
                double t20857 = exp(-t20851*t20852*t20856);
                double t20858 = 1/pow(t20769,3.0/2.0);
                double t20859 = a3*t20802*t20753*t20773*t20765*t20766*t20767*t20858*5.0E4;
                double t20860 = gamma_bb[index]*t20801*t20802*t20755*t20773*t20765*t20757*t20758*2.0E5;
                double t20861 = t20860+t20859-t20801*t20802*t20781*t20765*1.0E5;
                v_gamma_bb_[index] = rho_a[index]*( ( (c*c0*t20754*(-2.0/3.0)+t20801*t20773*t20765*exp(-t20755*t20756* \
                   t20757*t20758)*1.0E5 > 0.0) ? c0*1.0*(t20784*t20785*t20788+t20793*t20799*(-t20794+t20786+t20787+a3* \
                   c0*t20760*t20753*t20771*t20784*t20776*t20785*t20777*(2.0/3.0)-c*c0*t20760*t20754*t20781*t20782*t20784* \
                   t20776*t20785*t20769*(4.0/3.0)+c*c0*t20760*t20754*t20784*t20776*t20785*t20777*t20769*t20788*(2.0/3.0) \
                   +c*c0*gamma_bb[index]*t20760*t20755*t20783*t20784*t20758*t20776*t20785*t20777*t20769*(8.0/3.0))+t20793* \
                   t20796*(t20800*t20788*2.0+a3*c0*t20760*t20753*t20771*t20776*t20777*(8.0/3.0)-c*c0*t20760*t20754*t20781* \
                   t20782*t20776*t20769*(1.6E1/3.0)+c*c0*gamma_bb[index]*t20760*t20755*t20783*t20758*t20776*t20777*t20769* \
                   (3.2E1/3.0))-1/(t20792*t20792)*t20796*t20799*(t20800*t20788*3.0+a3*c0*t20760*t20753*t20771*t20776* \
                   t20777*4.0-c*c0*t20760*t20754*t20781*t20782*t20776*t20769*8.0+c*c0*gamma_bb[index]*t20760*t20755*t20783* \
                   t20758*t20776*t20777*t20769*1.6E1)+((t20773*t20773)*(t20765*t20765)*t20766*t20847*t20848*t20788*exp(- \
                   t20759)*(3.0/2.0))/t20769)*(1.0/2.0) : 0.0 ) - 0.0 )+rho_b[index]*( ( (-t20803+t20850 > 0.0) ? c0* \
                   t20857*1.0*(t20834*t20839*(t20827*t20845*t20846*2.0-gamma_bb[index]*t20810*t20804*t20757*t20829*t20758* \
                   8.0+a5*c0*t20810*t20821*t20753*t20771*t20807*(8.0/3.0)+c*c0*gamma_bb[index]*t20810*t20812*t20821*t20804* \
                   t20807*t20783*t20758*(3.2E1/3.0)-c*c0*gamma_bb[index]*t20812*t20821*t20830*t20804*t20807*t20783*t20758* \
                   (3.2E1/3.0))+t20842*t20834*(t20835+t20836+a5*c0*t20810*t20821*t20753*t20771*t20807*t20825*t20826*(2.0/ \
                   3.0)-c*c0*gamma_bb[index]*t20812*t20821*t20830*t20804*t20807*t20783*t20758*(8.0/3.0)+c*c0*t20810*t20812* \
                   t20821*t20807*t20825*t20754*t20826*t20837*(2.0/3.0)+c*c0*gamma_bb[index]*t20810*t20812*t20821*t20804* \
                   t20807*t20825*t20826*t20783*t20758*(8.0/3.0)-c*c0*gamma_bb[index]*t20812*t20821*t20830*t20804*t20807* \
                   t20825*t20826*t20783*t20758*(8.0/3.0))+t20825*t20826*t20837-1/(t20833*t20833)*t20842*t20839*(t20827* \
                   t20845*t20846*3.0-gamma_bb[index]*t20810*t20804*t20757*t20829*t20758*1.2E1+a5*c0*t20810*t20821*t20753* \
                   t20771*t20807*4.0+c*c0*gamma_bb[index]*t20810*t20812*t20821*t20804*t20807*t20783*t20758*1.6E1-c*c0* \
                   gamma_bb[index]*t20812*t20821*t20830*t20804*t20807*t20783*t20758*1.6E1)+((t20820*t20820)*(t20809*t20809) \
                   *t20837*t20766*t20847*t20848*exp(-t20806)*(3.0/2.0))/t20812)*(1.0/2.0) : 0.0 ) - 0.0 );
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t22941 = tspi_m13*tspi_m13;
                double t22942 = 1/pow(rho_b[index],1.0/3.0);
                double t22943 = a2*a2;
                double t22944 = gamma_bb[index]*gamma_bb[index];
                double t22945 = 1/pow(rho_b[index],1.6E1/3.0);
                double t22946 = t22941*t22941;
                double t22947 = c*t22942;
                double t22948 = a4*a4;
                double t22949 = 1/c;
                double t22950 = 1/pow(rho_b[index],7.0/3.0);
                double t22951 = sqrt(t22947);
                double t22952 = t22944*t22945*t22946*t22948*2.0;
                double t22953 = exp(t22952);
                double t22954 = t22944*t22945*t22946*t22948;
                double t22955 = t22954+1.0;
                double t22956 = 1/(t22955*t22955);
                double t22957 = a5*gamma_bb[index]*t22941*t22950*t22949;
                double t22958 = t22957+1.0;
                double t22970 = raa2*t22951;
                double t22959 = exp(-t22970);
                double t22960 = t22959-1.0;
                double t22961 = kaa2*t22960;
                double t22962 = pow(t22947,2.0/5.0);
                double t22971 = raa1*t22962;
                double t22963 = exp(-t22971);
                double t22964 = t22963-1.0;
                double t22965 = kaa1*t22964;
                double t22966 = -kaa0+t22961+t22965;
                double t22967 = 1/(t22966*t22966);
                double t22968 = c*c0*t22942*t22953*t22956*t22958*t22967*(2.0/3.0);
                double t22969 = 1/pow(rho_b[index],8.0/3.0);
                double t22972 = 1/pow(rho_b[index],1.7E1/3.0);
                double t22973 = exp(t22968);
                double t22974 = Ei(-t22968);
                double t22975 = 1/t22955;
                double t22976 = c*c0*t22942*t22953*t22958*t22967*(2.0/3.0);
                double t22977 = sqrt(t22976);
                double t22978 = 1/(t22955*t22955*t22955);
                double t22979 = t22975*t22977*6.0;
                double t22980 = c*c0*t22942*t22953*t22956*t22958*t22967*4.0;
                double t22981 = t22980+t22979+3.0;
                double t22982 = 1/t22981;
                double t22983 = a5*c0*t22941*t22953*t22956*t22967*t22969*(2.0/3.0);
                double t22984 = c*c0*gamma_bb[index]*t22953*t22972*t22946*t22956*t22948*t22958*t22967*(8.0/3.0);
                double t22995 = c*c0*gamma_bb[index]*t22953*t22972*t22946*t22948*t22958*t22967*t22978*(8.0/3.0);
                double t22985 = t22983+t22984-t22995;
                double t22986 = c*c0*t22942*t22953*t22973*t22956*t22974*t22958*t22967*(2.0/3.0);
                double t22987 = t22986+1.0;
                double t22988 = t22975*t22977*4.0;
                double t22989 = c*c0*t22942*t22953*t22956*t22958*t22967*(8.0/3.0);
                double t22990 = t22988+t22989+6.0;
                double t22991 = a5*c0*t22941*t22953*t22967*t22969*(2.0/3.0);
                double t22992 = c*c0*gamma_bb[index]*t22953*t22972*t22946*t22948*t22958*t22967*(8.0/3.0);
                double t22993 = t22991+t22992;
                double t22994 = 1/sqrt(t22976);
                double t22996 = t22943*t22944*t22945*t22946;
                double t22997 = pow(t22947,4.0/5.0);
                double t23014 = rab1*t22997;
                double t22998 = exp(-t23014);
                double t22999 = t22998-1.0;
                double t23015 = kab1*t22999;
                double t23000 = kab0-t23015;
                double t23001 = a3*gamma_bb[index]*t22941*t22950*t22949;
                double t23002 = t23001+1.0;
                double t23003 = 1/sqrt(t23002);
                double t23004 = a1*gamma_bb[index]*t22941*t22969;
                double t23005 = t22996+t23004+1.0;
                double t23006 = c*c;
                double t23007 = 1/pow(rho_b[index],2.0/3.0);
                double t23008 = k1*t22951;
                double t23009 = c*k2*t22942;
                double t23010 = t23008+t23009;
                double t23011 = 1/(t23010*t23010);
                double t23012 = exp(-t23011*t23006*t23007);
                double t23013 = exp(-t22996);
                v_gamma_bb_[index] = ( (c*c0*t22942*(-2.0/3.0)+t23000*t23003*t23005*exp(-t22943*t22944*t22945*t22946) \
                   *1.0E5 > 0.0) ?  c0*rho_b[index]*t23012*1.0*(t22982*t22987*(t22975*t22993*t22994*2.0-gamma_bb[index]* \
                   t22945*t22946*t22956*t22948*t22977*8.0+a5*c0*t22941*t22953*t22956*t22967*t22969*(8.0/3.0)+c*c0*gamma_bb[index]* \
                   t22953*t22972*t22946*t22956*t22948*t22958*t22967*(3.2E1/3.0)-c*c0*gamma_bb[index]*t22953*t22972*t22946* \
                   t22948*t22958*t22967*t22978*(3.2E1/3.0))+t22990*t22982*(t22983+t22984+a5*c0*t22941*t22953*t22973*t22956* \
                   t22974*t22967*t22969*(2.0/3.0)-c*c0*gamma_bb[index]*t22953*t22972*t22946*t22948*t22958*t22967*t22978* \
                   (8.0/3.0)+c*c0*t22942*t22953*t22973*t22956*t22974*t22958*t22967*t22985*(2.0/3.0)+c*c0*gamma_bb[index]* \
                   t22953*t22972*t22946*t22973*t22956*t22974*t22948*t22958*t22967*(8.0/3.0)-c*c0*gamma_bb[index]*t22953* \
                   t22972*t22946*t22973*t22974*t22948*t22958*t22967*t22978*(8.0/3.0))+t22973*t22974*t22985-1/(t22981* \
                   t22981)*t22990*t22987*(t22975*t22993*t22994*3.0-gamma_bb[index]*t22945*t22946*t22956*t22948*t22977* \
                   1.2E1+a5*c0*t22941*t22953*t22956*t22967*t22969*4.0+c*c0*gamma_bb[index]*t22953*t22972*t22946*t22956* \
                   t22948*t22958*t22967*1.6E1-c*c0*gamma_bb[index]*t22953*t22972*t22946*t22948*t22958*t22967*t22978*1.6E1) \
                   +(pow(rho_b[index],1.0/3.0)*(t22955*t22955)*(t22966*t22966)*t22949*t22985*exp(-t22952)*(3.0/2.0))/ \
                   (c0*t22958))*(1.0/2.0) : 0.0 ) - 0.0 ;
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t20865 = tspi_m13*tspi_m13;
            double t20866 = 1/pow(rho_a[index],1.0/3.0);
            double t20867 = a2*a2;
            double t20868 = gamma_aa[index]*gamma_aa[index];
            double t20869 = 1/pow(rho_a[index],1.6E1/3.0);
            double t20870 = t20865*t20865;
            double t20871 = c*t20866;
            double t20872 = a4*a4;
            double t20873 = 1/c;
            double t20874 = 1/pow(rho_a[index],7.0/3.0);
            double t20875 = sqrt(t20871);
            double t20876 = t20870*t20872*t20868*t20869*2.0;
            double t20877 = exp(t20876);
            double t20878 = t20870*t20872*t20868*t20869;
            double t20879 = t20878+1.0;
            double t20880 = a5*gamma_aa[index]*t20873*t20865*t20874;
            double t20881 = t20880+1.0;
            double t20892 = raa2*t20875;
            double t20882 = exp(-t20892);
            double t20883 = t20882-1.0;
            double t20884 = kaa2*t20883;
            double t20885 = pow(t20871,2.0/5.0);
            double t20893 = raa1*t20885;
            double t20886 = exp(-t20893);
            double t20887 = t20886-1.0;
            double t20888 = kaa1*t20887;
            double t20889 = -kaa0+t20884+t20888;
            double t20890 = 1/(t20889*t20889);
            double t20891 = 1/t20879;
            double t20894 = 1/pow(rho_a[index],4.0/3.0);
            double t20895 = c*c0*t20881*t20890*t20866*t20877*(2.0/3.0);
            double t20896 = 1/(t20879*t20879);
            double t20897 = sqrt(t20895);
            double t20898 = 1/pow(rho_a[index],1.1E1/3.0);
            double t20899 = 1/sqrt(t20871);
            double t20900 = c*kaa2*raa2*t20882*t20894*t20899*(1.0/6.0);
            double t20901 = 1/pow(t20871,3.0/5.0);
            double t20902 = c*kaa1*raa1*t20901*t20894*t20886*(2.0/1.5E1);
            double t20903 = t20900+t20902;
            double t20904 = 1/(t20889*t20889*t20889);
            double t20905 = 1/pow(rho_a[index],2.0E1/3.0);
            double t20906 = c*c0*t20881*t20890*t20866*t20877*t20896*(2.0/3.0);
            double t20907 = exp(t20906);
            double t20908 = Ei(-t20906);
            double t20909 = c*c0*t20881*t20890*t20894*t20877*t20896*(2.0/9.0);
            double t20910 = a5*c0*gamma_aa[index]*t20890*t20865*t20877*t20896*t20898*(1.4E1/9.0);
            double t20911 = c*c0*t20903*t20904*t20881*t20866*t20877*t20896*(4.0/3.0);
            double t20912 = 1/(t20879*t20879*t20879);
            double t20913 = c*c0*t20905*t20870*t20872*t20881*t20890*t20868*t20877*t20896*(6.4E1/9.0);
            double t20914 = t20891*t20897*6.0;
            double t20915 = c*c0*t20881*t20890*t20866*t20877*t20896*4.0;
            double t20916 = t20914+t20915+3.0;
            double t20917 = 1/t20916;
            double t20918 = 1/sqrt(t20895);
            double t20919 = c*c;
            double t20920 = 1/pow(rho_a[index],8.0/3.0);
            double t20921 = c*c0*t20881*t20890*t20894*t20877*(2.0/9.0);
            double t20922 = a5*c0*gamma_aa[index]*t20890*t20865*t20877*t20898*(1.4E1/9.0);
            double t20923 = c*c0*t20903*t20904*t20881*t20866*t20877*(4.0/3.0);
            double t20924 = c*c0*t20905*t20870*t20872*t20881*t20890*t20868*t20877*(6.4E1/9.0);
            double t20925 = t20921+t20922+t20923+t20924;
            double t20926 = t20872*t20872;
            double t20927 = t20868*t20868;
            double t20928 = t20870*t20870;
            double t20929 = 1/pow(rho_a[index],1.9E1/3.0);
            double t20930 = raa2*raa2;
            double t20931 = c*kaa2*t20930*t20882*t20874*(1.0/3.6E1);
            double t20932 = raa1*raa1;
            double t20933 = 1/pow(t20871,6.0/5.0);
            double t20934 = kaa1*t20920*t20932*t20933*t20919*t20886*(4.0/2.25E2);
            double t20935 = 1/pow(t20871,3.0/2.0);
            double t20936 = kaa2*raa2*t20920*t20935*t20882*t20919*(1.0/3.6E1);
            double t20937 = 1/pow(t20871,8.0/5.0);
            double t20938 = kaa1*raa1*t20920*t20919*t20937*t20886*(2.0/7.5E1);
            double t20948 = c*kaa2*raa2*t20882*t20874*t20899*(2.0/9.0);
            double t20949 = c*kaa1*raa1*t20901*t20874*t20886*(8.0/4.5E1);
            double t20939 = t20931+t20934+t20936+t20938-t20948-t20949;
            double t20940 = t20903*t20903;
            double t20941 = 1/(t20889*t20889*t20889*t20889);
            double t20942 = 1/pow(rho_a[index],1.4E1/3.0);
            double t20943 = 1/pow(rho_a[index],1.0E1);
            double t20944 = 1/pow(rho_a[index],1.3E1);
            double t20945 = 1/pow(rho_a[index],2.3E1/3.0);
            double t20947 = c*c0*t20912*t20905*t20870*t20872*t20881*t20890*t20868*t20877*(6.4E1/9.0);
            double t20946 = t20910+t20911+t20913+t20909-t20947;
            double t20950 = t20946*t20946;
            double t20951 = 1/(t20879*t20879*t20879*t20879);
            double t20952 = c*c0*t20881*t20890*t20874*t20877*t20896*(8.0/2.7E1);
            double t20953 = c*c0*t20940*t20941*t20881*t20866*t20877*t20896*4.0;
            double t20954 = a5*c0*gamma_aa[index]*t20942*t20890*t20865*t20877*t20896*(5.6E1/9.0);
            double t20955 = c*c0*t20903*t20904*t20881*t20894*t20877*t20896*(8.0/9.0);
            double t20956 = a5*c0*gamma_aa[index]*t20903*t20904*t20865*t20877*t20896*t20898*(5.6E1/9.0);
            double t20957 = a5*c0*gamma_aa[index]*t20870*t20943*t20872*t20890*t20865*t20868*t20877*t20896*(8.96E2/ \
               2.7E1);
            double t20958 = c*c0*t20881*t20890*t20926*t20944*t20927*t20928*t20877*t20896*(2.048E3/2.7E1);
            double t20959 = c*c0*t20951*t20881*t20890*t20926*t20944*t20927*t20928*t20877*(1.024E3/9.0);
            double t20960 = c*c0*t20870*t20872*t20881*t20890*t20945*t20868*t20877*t20896*(4.48E2/9.0);
            double t20961 = c*c0*t20903*t20904*t20905*t20870*t20872*t20881*t20868*t20877*t20896*(2.56E2/9.0);
            double t21009 = c*c0*t20904*t20881*t20866*t20939*t20877*t20896*(4.0/3.0);
            double t21010 = a5*c0*gamma_aa[index]*t20912*t20870*t20943*t20872*t20890*t20865*t20868*t20877*(8.96E2/ \
               2.7E1);
            double t21011 = c*c0*t20912*t20881*t20890*t20926*t20944*t20927*t20928*t20877*(4.096E3/2.7E1);
            double t21012 = c*c0*t20912*t20870*t20872*t20881*t20890*t20945*t20868*t20877*(4.48E2/9.0);
            double t21013 = c*c0*t20903*t20912*t20904*t20905*t20870*t20872*t20881*t20868*t20877*(2.56E2/9.0);
            double t20962 = t20960+t20952+t20961+t20953+t20954+t20955+t20956+t20957+t20958+t20959-t21010-t21011- \
               t21012-t21013-t21009;
            double t20963 = c*c0*t20907*t20881*t20890*t20908*t20866*t20877*t20896*(2.0/3.0);
            double t20964 = t20963+1.0;
            double t20965 = t20925*t20891*t20918*2.0;
            double t20966 = c*c0*t20881*t20890*t20894*t20877*t20896*(8.0/9.0);
            double t20967 = a5*c0*gamma_aa[index]*t20890*t20865*t20877*t20896*t20898*(5.6E1/9.0);
            double t20968 = c*c0*t20903*t20904*t20881*t20866*t20877*t20896*(1.6E1/3.0);
            double t20969 = c*c0*t20905*t20870*t20872*t20881*t20890*t20868*t20877*t20896*(2.56E2/9.0);
            double t21031 = t20870*t20872*t20929*t20868*t20896*t20897*(6.4E1/3.0);
            double t21032 = c*c0*t20912*t20905*t20870*t20872*t20881*t20890*t20868*t20877*(2.56E2/9.0);
            double t20970 = t20965+t20966+t20967+t20968+t20969-t21031-t21032;
            double t20971 = 1/(t20916*t20916);
            double t20972 = t20891*t20897*4.0;
            double t20973 = c*c0*t20881*t20890*t20866*t20877*t20896*(8.0/3.0);
            double t20974 = t20972+t20973+6.0;
            double t20975 = t20925*t20891*t20918*3.0;
            double t20976 = c*c0*t20881*t20890*t20894*t20877*t20896*(4.0/3.0);
            double t20977 = a5*c0*gamma_aa[index]*t20890*t20865*t20877*t20896*t20898*(2.8E1/3.0);
            double t20978 = c*c0*t20903*t20904*t20881*t20866*t20877*t20896*8.0;
            double t20979 = c*c0*t20905*t20870*t20872*t20881*t20890*t20868*t20877*t20896*(1.28E2/3.0);
            double t21000 = t20870*t20872*t20929*t20868*t20896*t20897*3.2E1;
            double t21001 = c*c0*t20912*t20905*t20870*t20872*t20881*t20890*t20868*t20877*(1.28E2/3.0);
            double t20980 = t20975+t20976+t20977+t20978+t20979-t21000-t21001;
            double t20981 = c*c0*t20907*t20881*t20890*t20908*t20894*t20877*t20896*(2.0/9.0);
            double t20982 = c*c0*t20903*t20904*t20907*t20881*t20908*t20866*t20877*t20896*(4.0/3.0);
            double t20983 = c*c0*t20907*t20881*t20890*t20908*t20946*t20866*t20877*t20896*(2.0/3.0);
            double t20984 = a5*c0*gamma_aa[index]*t20907*t20890*t20908*t20865*t20877*t20896*t20898*(1.4E1/9.0) \
               ;
            double t20985 = c*c0*t20905*t20870*t20907*t20872*t20881*t20890*t20908*t20868*t20877*t20896*(6.4E1/ \
               9.0);
            double t20986 = c*c0*t20881*t20890*t20874*t20877*(8.0/2.7E1);
            double t20987 = a5*c0*gamma_aa[index]*t20942*t20890*t20865*t20877*(5.6E1/9.0);
            double t20988 = c*c0*t20903*t20904*t20881*t20894*t20877*(8.0/9.0);
            double t20989 = c*c0*t20940*t20941*t20881*t20866*t20877*4.0;
            double t20990 = a5*c0*gamma_aa[index]*t20870*t20943*t20872*t20890*t20865*t20868*t20877*(8.96E2/2.7E1) \
               ;
            double t20991 = a5*c0*gamma_aa[index]*t20903*t20904*t20865*t20877*t20898*(5.6E1/9.0);
            double t20992 = c*c0*t20881*t20890*t20926*t20944*t20927*t20928*t20877*(2.048E3/2.7E1);
            double t20993 = c*c0*t20870*t20872*t20881*t20890*t20945*t20868*t20877*(4.48E2/9.0);
            double t20994 = c*c0*t20903*t20904*t20905*t20870*t20872*t20881*t20868*t20877*(2.56E2/9.0);
            double t20995 = t20990+t20991+t20992+t20993+t20994+t20986+t20987+t20988+t20989-c*c0*t20904*t20881* \
               t20866*t20939*t20877*(4.0/3.0);
            double t20996 = t20925*t20925;
            double t20997 = 1/pow(t20895,3.0/2.0);
            double t20998 = 1/pow(rho_a[index],2.2E1/3.0);
            double t20999 = 1/pow(rho_a[index],3.8E1/3.0);
            double t21002 = 1/pow(rho_a[index],2.0/3.0);
            double t21003 = 1/t20881;
            double t21004 = 1/c0;
            double t21005 = exp(-t20876);
            double t21006 = t20879*t20879;
            double t21007 = t20889*t20889;
            double t21008 = pow(rho_a[index],1.0/3.0);
            double t21014 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]) \
               ;
            double t21033 = c*c0*t20912*t20905*t20870*t20907*t20872*t20881*t20890*t20908*t20868*t20877*(6.4E1/ \
               9.0);
            double t21015 = t20910+t20911+t20913+t20909+t20981+t20982-t20947+t20983+t20984+t20985-t21033;
            double t21016 = t20870*t20867*t20868*t20869;
            double t21017 = pow(t20871,4.0/5.0);
            double t21035 = rab1*t21017;
            double t21018 = exp(-t21035);
            double t21019 = t21018-1.0;
            double t21036 = kab1*t21019;
            double t21020 = kab0-t21036;
            double t21021 = a3*gamma_aa[index]*t20873*t20865*t20874;
            double t21022 = t21021+1.0;
            double t21023 = 1/sqrt(t21022);
            double t21024 = a1*gamma_aa[index]*t20920*t20865;
            double t21025 = t21024+t21016+1.0;
            double t21026 = k1*t20875;
            double t21027 = c*k2*t20866;
            double t21028 = t21026+t21027;
            double t21029 = 1/(t21028*t21028);
            double t21038 = t20919*t21002*t21029;
            double t21030 = exp(-t21038);
            double t21034 = exp(-t21016);
            double t21037 = t21020*t21023*t21025*t21034*1.0E5;
            double t21039 = t20970*t20917*t20964;
            double t21040 = t20907*t20908*t20946;
            double t21041 = t20917*t20974*t21015;
            double t21042 = t20873*t20946*t21003*t21004*t21005*t21006*t21007*t21008*(3.0/2.0);
            double t21180 = t20971*t20980*t20964*t20974;
            double t21043 = t21040+t21041+t21042-t21180+t21039;
            double t21044 = 1/pow(rho_a[index],1.0E1/3.0);
            double t21045 = c*c0*t20866*(2.0/3.0);
            double t21046 = 1/(t21028*t21028*t21028);
            double t21047 = c*k2*t20894*(1.0/3.0);
            double t21048 = c*k1*t20894*t20899*(1.0/6.0);
            double t21049 = t21047+t21048;
            double t21050 = 1/pow(rho_a[index],5.0/3.0);
            double t21051 = -t21045+t21037;
            double t21052 = ( (t21051 > 0.0) ?  1.0 : 0.0 ) ;
            double t21053 = t20907*t20908;
            double t21054 = t20917*t20964*t20974;
            double t21055 = t21053+t21054;
            double t21056 = t20919*t21050*t21029*(2.0/3.0);
            double t21070 = t20919*t21002*t21046*t21049*2.0;
            double t21057 = -t21070+t21056;
            double t21058 = t21045-t21037;
            double t21059 = c*c0*t20894*(2.0/9.0);
            double t21060 = t20870*t20929*t20867*t20868*(1.6E1/3.0);
            double t21061 = a1*gamma_aa[index]*t20865*t20898*(8.0/3.0);
            double t21062 = t21060+t21061;
            double t21063 = t20870*t20929*t20867*t20868*t21020*t21023*t21025*t21034*(1.6E6/3.0);
            double t21064 = 1/pow(t20871,1.0/5.0);
            double t21065 = 1/pow(t21022,3.0/2.0);
            double t21066 = a3*gamma_aa[index]*t20873*t20865*t21020*t21025*t21034*t21044*t21065*(3.5E5/3.0);
            double t21071 = t21020*t21023*t21034*t21062*1.0E5;
            double t21072 = c*kab1*rab1*t20894*t21023*t21025*t21034*t21018*t21064*(8.0E4/3.0);
            double t21067 = -t21071+t21063-t21072+t21066+t21059;
            double t21068 = 0.0 ;
            double t21069 = 1/(c*c);
            double t21073 = t20870*t20867*t20868*t20869*2.0;
            double t21074 = exp(t21073);
            double t21075 = 1/(t21020*t21020);
            double t21076 = 1/(t21025*t21025);
            double t21077 = c*c0*t20866*t21022*t21074*t21075*t21076*(2.0/3.0);
            double t21078 = sqrt(t21077);
            double t21079 = 1/rho_a[index];
            double t21080 = c*c0*t20894*t21022*t21074*t21075*t21076*(2.0/9.0);
            double t21081 = 1/(t21025*t21025*t21025);
            double t21082 = a3*c0*gamma_aa[index]*t20865*t20898*t21074*t21075*t21076*(1.4E1/9.0);
            double t21083 = c*c0*t20905*t20870*t20867*t20868*t21022*t21074*t21075*t21076*(6.4E1/9.0);
            double t21084 = 1/(t21020*t21020*t21020);
            double t21086 = c*c0*t20866*t21022*t21062*t21081*t21074*t21075*(4.0/3.0);
            double t21087 = c0*kab1*rab1*t20919*t21022*t21050*t21018*t21064*t21074*t21084*t21076*(1.6E1/4.5E1) \
               ;
            double t21085 = t21080+t21082+t21083-t21086-t21087;
            double t21088 = t20870*t20867*t20868*t20998*(3.04E2/9.0);
            double t21089 = a1*gamma_aa[index]*t20942*t20865*(8.8E1/9.0);
            double t21090 = t21088+t21089;
            double t21091 = exp(t21077);
            double t21092 = Ei(-t21077);
            double t21093 = c*c0*t20874*t21022*t21074*t21075*t21076*(8.0/2.7E1);
            double t21094 = t21062*t21062;
            double t21095 = 1/(t21025*t21025*t21025*t21025);
            double t21096 = c*c0*t20866*t21022*t21074*t21075*t21094*t21095*4.0;
            double t21097 = a3*c0*gamma_aa[index]*t20942*t20865*t21074*t21075*t21076*(5.6E1/9.0);
            double t21098 = a3*c0*gamma_aa[index]*t20870*t20943*t20865*t20867*t20868*t21074*t21075*t21076*(8.96E2/ \
               2.7E1);
            double t21099 = t20867*t20867;
            double t21100 = rab1*rab1;
            double t21101 = 1/(rho_a[index]*rho_a[index]*rho_a[index]);
            double t21102 = 1/pow(t20871,2.0/5.0);
            double t21103 = t21085*t21085;
            double t21104 = c*c0*t20944*t20927*t20928*t21022*t21074*t21075*t21076*t21099*(2.048E3/2.7E1);
            double t21105 = c*c0*t20870*t20945*t20867*t20868*t21022*t21074*t21075*t21076*(4.48E2/9.0);
            double t21106 = c*c0*kab1*t20919*t21100*t21101*t21102*t21022*t21018*t21074*t21084*t21076*(6.4E1/6.75E2) \
               ;
            double t21107 = kab1*kab1;
            double t21114 = rab1*t21017*2.0;
            double t21108 = exp(-t21114);
            double t21109 = 1/(t21020*t21020*t21020*t21020);
            double t21110 = c*c0*t20919*t21100*t21101*t21102*t21022*t21107*t21108*t21109*t21074*t21076*(6.4E1/ \
               2.25E2);
            double t21111 = c*c0*kab1*rab1*t20933*t20919*t21101*t21022*t21018*t21074*t21084*t21076*(1.6E1/6.75E2) \
               ;
            double t21112 = c0*kab1*rab1*t20919*t21022*t21050*t21062*t21018*t21081*t21064*t21074*t21084*(6.4E1/ \
               4.5E1);
            double t21113 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
            double t21115 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t21116 = t21078*6.0;
            double t21117 = c*c0*t20866*t21022*t21074*t21075*t21076*4.0;
            double t21118 = t21116+t21117+3.0;
            double t21119 = 1/t21118;
            double t21121 = c*c0*t20894*t21022*t21062*t21081*t21074*t21075*(8.0/9.0);
            double t21122 = c*c0*t20866*t21022*t21081*t21090*t21074*t21075*(4.0/3.0);
            double t21123 = a3*c0*gamma_aa[index]*t20865*t20898*t21062*t21081*t21074*t21075*(5.6E1/9.0);
            double t21124 = c*c0*t20905*t20870*t20867*t20868*t21022*t21062*t21081*t21074*t21075*(2.56E2/9.0);
            double t21125 = c0*kab1*rab1*t20920*t20919*t21022*t21018*t21064*t21074*t21084*t21076*(3.2E1/4.5E1) \
               ;
            double t21126 = a3*c*c0*gamma_aa[index]*kab1*rab1*t20865*t21113*t21018*t21064*t21074*t21084*t21076* \
               (2.24E2/1.35E2);
            double t21127 = c0*kab1*rab1*t20870*t20919*t20867*t20868*t21022*t21115*t21018*t21064*t21074*t21084* \
               t21076*(1.024E3/1.35E2);
            double t21120 = t21110+t21111+t21112-t21121+t21104-t21122+t21105-t21123+t21106-t21124-t21125-t21126- \
               t21127+t21093+t21096+t21097+t21098;
            double t21128 = 1/sqrt(t21077);
            double t21129 = t21078*4.0;
            double t21130 = c*c0*t20866*t21022*t21074*t21075*t21076*(8.0/3.0);
            double t21131 = t21130+t21129+6.0;
            double t21132 = c*c0*t20894*t21022*t21091*t21074*t21092*t21075*t21076*(2.0/9.0);
            double t21133 = a3*c0*gamma_aa[index]*t20865*t20898*t21091*t21074*t21092*t21075*t21076*(1.4E1/9.0) \
               ;
            double t21134 = c*c0*t20866*t21022*t21091*t21074*t21092*t21075*t21076*t21085*(2.0/3.0);
            double t21135 = c*c0*t20905*t20870*t20867*t20868*t21022*t21091*t21074*t21092*t21075*t21076*(6.4E1/ \
               9.0);
            double t21157 = c*c0*t20866*t21022*t21062*t21081*t21091*t21074*t21092*t21075*(4.0/3.0);
            double t21158 = c0*kab1*rab1*t20919*t21022*t21050*t21018*t21064*t21091*t21074*t21092*t21084*t21076* \
               (1.6E1/4.5E1);
            double t21136 = t21132+t21133+t21080+t21134+t21135+t21082+t21083-t21157-t21086-t21158-t21087;
            double t21137 = c*c0*t20866*t21022*t21091*t21074*t21092*t21075*t21076*(2.0/3.0);
            double t21138 = t21137+1.0;
            double t21139 = 1/(t21118*t21118);
            double t21140 = 1/pow(t21077,3.0/2.0);
            double t21141 = t21128*t21085*3.0;
            double t21142 = c*c0*t20894*t21022*t21074*t21075*t21076*(4.0/3.0);
            double t21143 = a3*c0*gamma_aa[index]*t20865*t20898*t21074*t21075*t21076*(2.8E1/3.0);
            double t21144 = c*c0*t20905*t20870*t20867*t20868*t21022*t21074*t21075*t21076*(1.28E2/3.0);
            double t21146 = c*c0*t20866*t21022*t21062*t21081*t21074*t21075*8.0;
            double t21147 = c0*kab1*rab1*t20919*t21022*t21050*t21018*t21064*t21074*t21084*t21076*(3.2E1/1.5E1) \
               ;
            double t21145 = t21141+t21142+t21143+t21144-t21146-t21147;
            double t21148 = t21128*t21085*2.0;
            double t21149 = c*c0*t20894*t21022*t21074*t21075*t21076*(8.0/9.0);
            double t21150 = a3*c0*gamma_aa[index]*t20865*t20898*t21074*t21075*t21076*(5.6E1/9.0);
            double t21151 = c*c0*t20905*t20870*t20867*t20868*t21022*t21074*t21075*t21076*(2.56E2/9.0);
            double t21159 = c*c0*t20866*t21022*t21062*t21081*t21074*t21075*(1.6E1/3.0);
            double t21160 = c0*kab1*rab1*t20919*t21022*t21050*t21018*t21064*t21074*t21084*t21076*(6.4E1/4.5E1) \
               ;
            double t21152 = t21150+t21151-t21160+t21148+t21149-t21159;
            double t21153 = 1/t21022;
            double t21154 = exp(-t21073);
            double t21155 = t21020*t21020;
            double t21156 = t21025*t21025;
            double t21161 = 0.0 ;
            double t21162 = t21067*t21067;
            double t21163 = t21091*t21092;
            double t21164 = t21131*t21119*t21138;
            double t21165 = t21163+t21164;
            double t21166 = c*c0*t20874*(8.0/2.7E1);
            double t21167 = t20870*t20867*t20868*t20998*t21020*t21023*t21025*t21034*(3.04E7/9.0);
            double t21168 = t20870*t20929*t20867*t20868*t21020*t21023*t21034*t21062*(3.2E6/3.0);
            double t21169 = kab1*t20920*t20919*t21100*t21102*t21023*t21025*t21034*t21018*(6.4E4/9.0);
            double t21170 = a3*a3;
            double t21171 = 1/pow(t21022,5.0/2.0);
            double t21172 = 1/pow(rho_a[index],1.3E1/3.0);
            double t21173 = a3*gamma_aa[index]*t20873*t20865*t21020*t21025*t21034*t21172*t21065*(3.5E6/9.0);
            double t21174 = a3*gamma_aa[index]*t20873*t20865*t21020*t21034*t21044*t21062*t21065*(7.0E5/3.0);
            double t21175 = kab1*rab1*t20920*t20933*t20919*t21023*t21025*t21034*t21018*(1.6E4/9.0);
            double t21176 = 1/pow(rho_a[index],2.9E1/3.0);
            double t21177 = a3*gamma_aa[index]*kab1*rab1*t20942*t20865*t21025*t21034*t21018*t21064*t21065*(5.6E5/ \
               9.0);
            double t21178 = c*kab1*rab1*t20870*t20945*t20867*t20868*t21023*t21025*t21034*t21018*t21064*(2.56E6/ \
               9.0);
            double t21179 = t21173+t21174+t21166+t21175+t21167+t21168+t21177+t21169+t21178-t21020*t21023*t21034* \
               t21090*1.0E5-t20927*t20928*t20999*t21020*t21023*t21025*t21034*t21099*(2.56E7/9.0)-c*kab1*rab1*t20874* \
               t21023*t21025*t21034*t21018*t21064*(3.2E5/9.0)-c*kab1*rab1*t20894*t21023*t21034*t21062*t21018*t21064* \
               (1.6E5/3.0)-t20905*t20870*t20868*t21020*t21025*t21034*t21170*t21171*t21069*(1.225E6/3.0)-a3*gamma_aa[index]* \
               t20870*t20873*t20865*t20867*t20868*t21020*t21025*t21034*t21065*t21176*(1.12E7/9.0);
            v_rho_a_rho_a_[index] = -rho_b[index]*(c0*t21052*(t21131*t21119*(t21110+t21111+t21103+t21112-t21121+ \
               t21104-t21122+t21105-t21123+t21106-t21124-t21125-t21126-t21127+t21093+t21096+t21097+t21098+t21085* \
               t21079*(1.0/3.0)-(t21062*t21085*2.0)/t21025+t20870*t20929*t20867*t20868*t21085*(3.2E1/3.0)+a3*gamma_aa[index]* \
               t20873*t20865*t21044*t21153*t21085*(7.0/3.0)-(c*kab1*rab1*t20894*t21018*t21064*t21085*(8.0/1.5E1)) \
               /t21020+c*c0*t20874*t21022*t21091*t21074*t21092*t21075*t21076*(8.0/2.7E1)+a3*c0*gamma_aa[index]*t20942* \
               t20865*t21091*t21074*t21092*t21075*t21076*(5.6E1/9.0)+c*c0*t20866*t21120*t21022*t21091*t21074*t21092* \
               t21075*t21076*(2.0/3.0)+c*c0*t20866*t21022*t21103*t21091*t21074*t21092*t21075*t21076*(2.0/3.0)-c*c0* \
               t20866*t21022*t21081*t21090*t21091*t21074*t21092*t21075*(4.0/3.0)-c*c0*t20894*t21022*t21062*t21081* \
               t21091*t21074*t21092*t21075*(8.0/9.0)+c*c0*t20866*t21022*t21091*t21074*t21092*t21075*t21094*t21095* \
               4.0+c*c0*t20894*t21022*t21091*t21074*t21092*t21075*t21076*t21085*(4.0/9.0)-a3*c0*gamma_aa[index]*t20865* \
               t20898*t21062*t21081*t21091*t21074*t21092*t21075*(5.6E1/9.0)+a3*c0*gamma_aa[index]*t20865*t20898*t21091* \
               t21074*t21092*t21075*t21076*t21085*(2.8E1/9.0)-c*c0*t20866*t21022*t21062*t21081*t21091*t21074*t21092* \
               t21075*t21085*(8.0/3.0)+c*c0*t20870*t20945*t20867*t20868*t21022*t21091*t21074*t21092*t21075*t21076* \
               (4.48E2/9.0)+c*c0*t20944*t20927*t20928*t21022*t21091*t21074*t21092*t21075*t21076*t21099*(2.048E3/2.7E1) \
               +a3*c0*gamma_aa[index]*t20870*t20943*t20865*t20867*t20868*t21091*t21074*t21092*t21075*t21076*(8.96E2/ \
               2.7E1)-c*c0*t20905*t20870*t20867*t20868*t21022*t21062*t21081*t21091*t21074*t21092*t21075*(2.56E2/9.0) \
               +c*c0*t20905*t20870*t20867*t20868*t21022*t21091*t21074*t21092*t21075*t21076*t21085*(1.28E2/9.0)-c0* \
               kab1*rab1*t20920*t20919*t21022*t21018*t21064*t21091*t21074*t21092*t21084*t21076*(3.2E1/4.5E1)+c*c0* \
               kab1*rab1*t20933*t20919*t21101*t21022*t21018*t21091*t21074*t21092*t21084*t21076*(1.6E1/6.75E2)+c*c0* \
               kab1*t20919*t21100*t21101*t21102*t21022*t21018*t21091*t21074*t21092*t21084*t21076*(6.4E1/6.75E2)+c* \
               c0*t20919*t21100*t21101*t21102*t21022*t21107*t21108*t21091*t21109*t21074*t21092*t21076*(6.4E1/2.25E2) \
               +c0*kab1*rab1*t20919*t21022*t21050*t21062*t21018*t21081*t21064*t21091*t21074*t21092*t21084*(6.4E1/ \
               4.5E1)-c0*kab1*rab1*t20919*t21022*t21050*t21018*t21064*t21091*t21074*t21092*t21084*t21076*t21085*(3.2E1/ \
               4.5E1)-a3*c*c0*gamma_aa[index]*kab1*rab1*t20865*t21113*t21018*t21064*t21091*t21074*t21092*t21084*t21076* \
               (2.24E2/1.35E2)-c0*kab1*rab1*t20870*t20919*t20867*t20868*t21022*t21115*t21018*t21064*t21091*t21074* \
               t21092*t21084*t21076*(1.024E3/1.35E2))+t21120*t21091*t21092+t21103*t21091*t21092+t21152*t21136*t21119* \
               2.0+t21119*t21138*(-t21103*t21140+t21120*t21128*2.0+c*c0*t20874*t21022*t21074*t21075*t21076*(3.2E1/ \
               2.7E1)+a3*c0*gamma_aa[index]*t20942*t20865*t21074*t21075*t21076*(2.24E2/9.0)-c*c0*t20866*t21022*t21081* \
               t21090*t21074*t21075*(1.6E1/3.0)-c*c0*t20894*t21022*t21062*t21081*t21074*t21075*(3.2E1/9.0)+c*c0*t20866* \
               t21022*t21074*t21075*t21094*t21095*1.6E1-a3*c0*gamma_aa[index]*t20865*t20898*t21062*t21081*t21074* \
               t21075*(2.24E2/9.0)+c*c0*t20870*t20945*t20867*t20868*t21022*t21074*t21075*t21076*(1.792E3/9.0)+c*c0* \
               t20944*t20927*t20928*t21022*t21074*t21075*t21076*t21099*(8.192E3/2.7E1)+a3*c0*gamma_aa[index]*t20870* \
               t20943*t20865*t20867*t20868*t21074*t21075*t21076*(3.584E3/2.7E1)-c*c0*t20905*t20870*t20867*t20868* \
               t21022*t21062*t21081*t21074*t21075*(1.024E3/9.0)-c0*kab1*rab1*t20920*t20919*t21022*t21018*t21064*t21074* \
               t21084*t21076*(1.28E2/4.5E1)+c*c0*kab1*rab1*t20933*t20919*t21101*t21022*t21018*t21074*t21084*t21076* \
               (6.4E1/6.75E2)+c*c0*kab1*t20919*t21100*t21101*t21102*t21022*t21018*t21074*t21084*t21076*(2.56E2/6.75E2) \
               +c*c0*t20919*t21100*t21101*t21102*t21022*t21107*t21108*t21109*t21074*t21076*(2.56E2/2.25E2)+c0*kab1* \
               rab1*t20919*t21022*t21050*t21062*t21018*t21081*t21064*t21074*t21084*(2.56E2/4.5E1)-a3*c*c0*gamma_aa[index]* \
               kab1*rab1*t20865*t21113*t21018*t21064*t21074*t21084*t21076*(8.96E2/1.35E2)-c0*kab1*rab1*t20870*t20919* \
               t20867*t20868*t21022*t21115*t21018*t21064*t21074*t21084*t21076*(4.096E3/1.35E2))-t21131*t21136*t21145* \
               t21139*2.0-t21152*t21145*t21138*t21139*2.0-t21131*t21138*t21139*(t21103*t21140*(-3.0/2.0)+t21120*t21128* \
               3.0+c*c0*t20874*t21022*t21074*t21075*t21076*(1.6E1/9.0)+a3*c0*gamma_aa[index]*t20942*t20865*t21074* \
               t21075*t21076*(1.12E2/3.0)-c*c0*t20866*t21022*t21081*t21090*t21074*t21075*8.0-c*c0*t20894*t21022*t21062* \
               t21081*t21074*t21075*(1.6E1/3.0)+c*c0*t20866*t21022*t21074*t21075*t21094*t21095*2.4E1-a3*c0*gamma_aa[index]* \
               t20865*t20898*t21062*t21081*t21074*t21075*(1.12E2/3.0)+c*c0*t20870*t20945*t20867*t20868*t21022*t21074* \
               t21075*t21076*(8.96E2/3.0)+c*c0*t20944*t20927*t20928*t21022*t21074*t21075*t21076*t21099*(4.096E3/9.0) \
               +a3*c0*gamma_aa[index]*t20870*t20943*t20865*t20867*t20868*t21074*t21075*t21076*(1.792E3/9.0)-c*c0* \
               t20905*t20870*t20867*t20868*t21022*t21062*t21081*t21074*t21075*(5.12E2/3.0)-c0*kab1*rab1*t20920*t20919* \
               t21022*t21018*t21064*t21074*t21084*t21076*(6.4E1/1.5E1)+c*c0*kab1*rab1*t20933*t20919*t21101*t21022* \
               t21018*t21074*t21084*t21076*(3.2E1/2.25E2)+c*c0*kab1*t20919*t21100*t21101*t21102*t21022*t21018*t21074* \
               t21084*t21076*(1.28E2/2.25E2)+c*c0*t20919*t21100*t21101*t21102*t21022*t21107*t21108*t21109*t21074* \
               t21076*(1.28E2/7.5E1)+c0*kab1*rab1*t20919*t21022*t21050*t21062*t21018*t21081*t21064*t21074*t21084* \
               (1.28E2/1.5E1)-a3*c*c0*gamma_aa[index]*kab1*rab1*t20865*t21113*t21018*t21064*t21074*t21084*t21076* \
               (4.48E2/4.5E1)-c0*kab1*rab1*t20870*t20919*t20867*t20868*t21022*t21115*t21018*t21064*t21074*t21084* \
               t21076*(2.048E3/4.5E1))+t21131*1/(t21118*t21118*t21118)*(t21145*t21145)*t21138*2.0+t20873*t21120*t21004* \
               t21008*t21153*t21154*t21155*t21156*(3.0/2.0)+t20873*t21004*t21103*t21008*t21153*t21154*t21155*t21156* \
               (3.0/2.0)-t20873*t21002*t21004*t21153*t21154*t21155*t21156*t21085*(1.0/2.0)+t20873*t21004*t21025*t21008* \
               t21062*t21153*t21154*t21155*t21085*3.0+kab1*rab1*t21020*t21004*t21018*t21153*t21064*t21154*t21156* \
               t21085*t21079*(4.0/5.0)-t20870*t20873*t20867*t20868*t21004*t21014*t21153*t21154*t21155*t21156*t21085* \
               1.6E1-a3*gamma_aa[index]*t20865*t21101*t21004*1/(t21022*t21022)*t21154*t21155*t21156*t21085*t21069* \
               (7.0/2.0))*(-1.0/2.0)+c0*t21161*t21162*t21165*(1.0/2.0)+c0*t21165*t21068*t21179*(1.0/2.0)+c0*t21067* \
               t21068*(t21131*t21136*t21119+t21152*t21119*t21138+t21091*t21092*t21085-t21131*t21145*t21138*t21139+ \
               t20873*t21004*t21008*t21153*t21154*t21155*t21156*t21085*(3.0/2.0)))-rho_a[index]*(c0*t21030*t21052* \
               (t20917*t20964*(t20891*t20918*t20995*2.0-t20891*t20996*t20997+t20912*t20926*t20927*t20928*t20897*t20999* \
               (2.048E3/9.0)-t20870*t20872*t20868*t20896*t20897*t20998*(1.216E3/9.0)+c*c0*t20881*t20890*t20874*t20877* \
               t20896*(3.2E1/2.7E1)-t20870*t20925*t20872*t20918*t20929*t20868*t20896*(6.4E1/3.0)+a5*c0*gamma_aa[index]* \
               t20942*t20890*t20865*t20877*t20896*(2.24E2/9.0)+c*c0*t20903*t20904*t20881*t20894*t20877*t20896*(3.2E1/ \
               9.0)+c*c0*t20940*t20941*t20881*t20866*t20877*t20896*1.6E1-c*c0*t20904*t20881*t20866*t20939*t20877* \
               t20896*(1.6E1/3.0)+a5*c0*gamma_aa[index]*t20903*t20904*t20865*t20877*t20896*t20898*(2.24E2/9.0)-c* \
               c0*t20912*t20881*t20890*t20926*t20944*t20927*t20928*t20877*(1.6384E4/2.7E1)-c*c0*t20912*t20870*t20872* \
               t20881*t20890*t20945*t20868*t20877*(1.792E3/9.0)+c*c0*t20951*t20881*t20890*t20926*t20944*t20927*t20928* \
               t20877*(4.096E3/9.0)+c*c0*t20881*t20890*t20926*t20944*t20927*t20928*t20877*t20896*(8.192E3/2.7E1)+ \
               c*c0*t20870*t20872*t20881*t20890*t20945*t20868*t20877*t20896*(1.792E3/9.0)-a5*c0*gamma_aa[index]*t20912* \
               t20870*t20943*t20872*t20890*t20865*t20868*t20877*(3.584E3/2.7E1)+a5*c0*gamma_aa[index]*t20870*t20943* \
               t20872*t20890*t20865*t20868*t20877*t20896*(3.584E3/2.7E1)-c*c0*t20903*t20912*t20904*t20905*t20870* \
               t20872*t20881*t20868*t20877*(1.024E3/9.0)+c*c0*t20903*t20904*t20905*t20870*t20872*t20881*t20868*t20877* \
               t20896*(1.024E3/9.0))+t20950*t20907*t20908+t20907*t20908*t20962+t20970*t20917*t21015*2.0+t20917*t20974* \
               (t20950+t20960+t20952+t20961+t20953+t20954+t20955+t20956+t20957+t20958+t20959-t21010-t21011-t21012- \
               t21013-t21009+t20946*t21079*(1.0/3.0)+(t20903*t20946*2.0)/t20889+t20870*t20872*t20946*t20929*t20868* \
               (3.2E1/3.0)-t20870*t20872*t20891*t20946*t20929*t20868*(3.2E1/3.0)+a5*gamma_aa[index]*t20873*t20865* \
               t20946*t21003*t21044*(7.0/3.0)+c*c0*t20907*t20881*t20890*t20908*t20874*t20877*t20896*(8.0/2.7E1)+a5* \
               c0*gamma_aa[index]*t20942*t20907*t20890*t20908*t20865*t20877*t20896*(5.6E1/9.0)+c*c0*t20903*t20904* \
               t20907*t20881*t20908*t20894*t20877*t20896*(8.0/9.0)+c*c0*t20940*t20941*t20907*t20881*t20908*t20866* \
               t20877*t20896*4.0+c*c0*t20950*t20907*t20881*t20890*t20908*t20866*t20877*t20896*(2.0/3.0)-c*c0*t20904* \
               t20907*t20881*t20908*t20866*t20939*t20877*t20896*(4.0/3.0)+c*c0*t20907*t20881*t20890*t20908*t20962* \
               t20866*t20877*t20896*(2.0/3.0)+c*c0*t20907*t20881*t20890*t20908*t20946*t20894*t20877*t20896*(4.0/9.0) \
               +a5*c0*gamma_aa[index]*t20903*t20904*t20907*t20908*t20865*t20877*t20896*t20898*(5.6E1/9.0)+a5*c0*gamma_aa[index]* \
               t20907*t20890*t20908*t20865*t20946*t20877*t20896*t20898*(2.8E1/9.0)+c*c0*t20903*t20904*t20907*t20881* \
               t20908*t20946*t20866*t20877*t20896*(8.0/3.0)-c*c0*t20912*t20907*t20881*t20890*t20908*t20926*t20944* \
               t20927*t20928*t20877*(4.096E3/2.7E1)-c*c0*t20912*t20870*t20907*t20872*t20881*t20890*t20908*t20945* \
               t20868*t20877*(4.48E2/9.0)+c*c0*t20951*t20907*t20881*t20890*t20908*t20926*t20944*t20927*t20928*t20877* \
               (1.024E3/9.0)+c*c0*t20907*t20881*t20890*t20908*t20926*t20944*t20927*t20928*t20877*t20896*(2.048E3/ \
               2.7E1)+c*c0*t20870*t20907*t20872*t20881*t20890*t20908*t20945*t20868*t20877*t20896*(4.48E2/9.0)-a5* \
               c0*gamma_aa[index]*t20912*t20870*t20907*t20943*t20872*t20890*t20908*t20865*t20868*t20877*(8.96E2/2.7E1) \
               +a5*c0*gamma_aa[index]*t20870*t20907*t20943*t20872*t20890*t20908*t20865*t20868*t20877*t20896*(8.96E2/ \
               2.7E1)-c*c0*t20903*t20912*t20904*t20905*t20870*t20907*t20872*t20881*t20908*t20868*t20877*(2.56E2/9.0) \
               +c*c0*t20903*t20904*t20905*t20870*t20907*t20872*t20881*t20908*t20868*t20877*t20896*(2.56E2/9.0)-c* \
               c0*t20912*t20905*t20870*t20907*t20872*t20881*t20890*t20908*t20946*t20868*t20877*(1.28E2/9.0)+c*c0* \
               t20905*t20870*t20907*t20872*t20881*t20890*t20908*t20946*t20868*t20877*t20896*(1.28E2/9.0))-t20971* \
               t20964*t20974*(t20891*t20918*t20995*3.0-t20891*t20996*t20997*(3.0/2.0)+t20912*t20926*t20927*t20928* \
               t20897*t20999*(1.024E3/3.0)-t20870*t20872*t20868*t20896*t20897*t20998*(6.08E2/3.0)+c*c0*t20881*t20890* \
               t20874*t20877*t20896*(1.6E1/9.0)-t20870*t20925*t20872*t20918*t20929*t20868*t20896*3.2E1+a5*c0*gamma_aa[index]* \
               t20942*t20890*t20865*t20877*t20896*(1.12E2/3.0)+c*c0*t20903*t20904*t20881*t20894*t20877*t20896*(1.6E1/ \
               3.0)+c*c0*t20940*t20941*t20881*t20866*t20877*t20896*2.4E1-c*c0*t20904*t20881*t20866*t20939*t20877* \
               t20896*8.0+a5*c0*gamma_aa[index]*t20903*t20904*t20865*t20877*t20896*t20898*(1.12E2/3.0)-c*c0*t20912* \
               t20881*t20890*t20926*t20944*t20927*t20928*t20877*(8.192E3/9.0)-c*c0*t20912*t20870*t20872*t20881*t20890* \
               t20945*t20868*t20877*(8.96E2/3.0)+c*c0*t20951*t20881*t20890*t20926*t20944*t20927*t20928*t20877*(2.048E3/ \
               3.0)+c*c0*t20881*t20890*t20926*t20944*t20927*t20928*t20877*t20896*(4.096E3/9.0)+c*c0*t20870*t20872* \
               t20881*t20890*t20945*t20868*t20877*t20896*(8.96E2/3.0)-a5*c0*gamma_aa[index]*t20912*t20870*t20943* \
               t20872*t20890*t20865*t20868*t20877*(1.792E3/9.0)+a5*c0*gamma_aa[index]*t20870*t20943*t20872*t20890* \
               t20865*t20868*t20877*t20896*(1.792E3/9.0)-c*c0*t20903*t20912*t20904*t20905*t20870*t20872*t20881*t20868* \
               t20877*(5.12E2/3.0)+c*c0*t20903*t20904*t20905*t20870*t20872*t20881*t20868*t20877*t20896*(5.12E2/3.0) \
               )-t20970*t20971*t20980*t20964*2.0-t20971*t20980*t20974*t21015*2.0+1/(t20916*t20916*t20916)*(t20980* \
               t20980)*t20964*t20974*2.0-t20873*t20946*t21002*t21003*t21004*t21005*t21006*t21007*(1.0/2.0)+t20950* \
               t20873*t21003*t21004*t21005*t21006*t21007*t21008*(3.0/2.0)+t20962*t20873*t21003*t21004*t21005*t21006* \
               t21007*t21008*(3.0/2.0)-t20903*t20873*t20946*t20889*t21003*t21004*t21005*t21006*t21008*3.0+t20870* \
               t20872*t20873*t20946*t20868*t20879*t21003*t21004*t21005*t21014*t21007*1.6E1-t20870*t20872*t20873*t20946* \
               t20868*t21003*t21004*t21005*t21014*t21006*t21007*1.6E1-a5*gamma_aa[index]*1/(t20881*t20881)*t20865* \
               t20946*t21101*t21004*t21005*t21006*t21007*t21069*(7.0/2.0))*(-1.0/2.0)+c0*t21030*t21052*t21055*(t20920* \
               t20919*t21029*(1.0E1/9.0)-t20919*t21050*t21046*t21049*(8.0/3.0)+t20919*t21002*1/(t21028*t21028*t21028* \
               t21028)*(t21049*t21049)*6.0-t20919*t21002*t21046*(c*k2*t20874*(4.0/9.0)+c*k1*t20874*t20899*(2.0/9.0) \
               -k1*t20920*t20935*t20919*(1.0/3.6E1))*2.0)*(1.0/2.0)+c0*t21030*t21043*t21052*t21057+c0*t21030*t21161* \
               t21162*t21055*(1.0/2.0)+c0*t21030*t21043*t21067*t21068+c0*t21030*t21055*t21068*t21179*(1.0/2.0)-c0* \
               t21030*t21052*t21055*(t21057*t21057)*(1.0/2.0)-c0*t21030*t21055*t21057*t21067*t21068)-c0*t21030*t21043* \
               t21052+c0*t21030*t21052*t21055*t21057+c0*t21030*t21055*t21067*t21068;
        } else if (rho_a[index] > cutoff_) {
            double t23816 = tspi_m13*tspi_m13;
            double t23817 = 1/pow(rho_a[index],1.0/3.0);
            double t23818 = a2*a2;
            double t23819 = gamma_aa[index]*gamma_aa[index];
            double t23820 = 1/pow(rho_a[index],1.6E1/3.0);
            double t23821 = t23816*t23816;
            double t23822 = c*t23817;
            double t23823 = a4*a4;
            double t23824 = t23820*t23821*t23823*t23819*2.0;
            double t23825 = exp(t23824);
            double t23826 = 1/c;
            double t23827 = 1/pow(rho_a[index],7.0/3.0);
            double t23828 = sqrt(t23822);
            double t23829 = t23820*t23821*t23823*t23819;
            double t23830 = t23829+1.0;
            double t23831 = 1/(t23830*t23830);
            double t23832 = a5*gamma_aa[index]*t23816*t23826*t23827;
            double t23833 = t23832+1.0;
            double t23844 = raa2*t23828;
            double t23834 = exp(-t23844);
            double t23835 = t23834-1.0;
            double t23836 = kaa2*t23835;
            double t23837 = pow(t23822,2.0/5.0);
            double t23845 = raa1*t23837;
            double t23838 = exp(-t23845);
            double t23839 = t23838-1.0;
            double t23840 = kaa1*t23839;
            double t23841 = -kaa0+t23840+t23836;
            double t23842 = 1/(t23841*t23841);
            double t23843 = c*c0*t23831*t23833*t23842*t23825*t23817*(2.0/3.0);
            double t23846 = 1/t23830;
            double t23847 = 1/pow(rho_a[index],4.0/3.0);
            double t23848 = c*c0*t23833*t23842*t23825*t23817*(2.0/3.0);
            double t23849 = sqrt(t23848);
            double t23850 = 1/pow(rho_a[index],1.1E1/3.0);
            double t23851 = 1/sqrt(t23822);
            double t23852 = c*kaa2*raa2*t23851*t23834*t23847*(1.0/6.0);
            double t23853 = 1/pow(t23822,3.0/5.0);
            double t23854 = c*kaa1*raa1*t23853*t23838*t23847*(2.0/1.5E1);
            double t23855 = t23852+t23854;
            double t23856 = 1/(t23841*t23841*t23841);
            double t23857 = 1/pow(rho_a[index],2.0E1/3.0);
            double t23858 = exp(t23843);
            double t23859 = Ei(-t23843);
            double t23860 = 1/(t23830*t23830*t23830);
            double t23861 = t23846*t23849*6.0;
            double t23862 = c*c0*t23831*t23833*t23842*t23825*t23817*4.0;
            double t23863 = t23861+t23862+3.0;
            double t23864 = 1/t23863;
            double t23865 = c*c0*t23831*t23833*t23842*t23825*t23847*(2.0/9.0);
            double t23866 = a5*c0*gamma_aa[index]*t23831*t23850*t23842*t23816*t23825*(1.4E1/9.0);
            double t23867 = c*c0*t23831*t23833*t23825*t23817*t23855*t23856*(4.0/3.0);
            double t23868 = c*c0*t23821*t23831*t23823*t23833*t23842*t23825*t23819*t23857*(6.4E1/9.0);
            double t23870 = c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23857*(6.4E1/9.0);
            double t23869 = -t23870+t23865+t23866+t23867+t23868;
            double t23871 = c*c0*t23831*t23833*t23842*t23825*t23817*t23858*t23859*(2.0/3.0);
            double t23872 = t23871+1.0;
            double t23873 = t23846*t23849*4.0;
            double t23874 = c*c0*t23831*t23833*t23842*t23825*t23817*(8.0/3.0);
            double t23875 = t23873+t23874+6.0;
            double t23876 = c*c0*t23833*t23842*t23825*t23847*(2.0/9.0);
            double t23877 = a5*c0*gamma_aa[index]*t23850*t23842*t23816*t23825*(1.4E1/9.0);
            double t23878 = c*c0*t23833*t23825*t23817*t23855*t23856*(4.0/3.0);
            double t23879 = c*c0*t23821*t23823*t23833*t23842*t23825*t23819*t23857*(6.4E1/9.0);
            double t23880 = t23876+t23877+t23878+t23879;
            double t23881 = 1/sqrt(t23848);
            double t23882 = 1/pow(rho_a[index],1.9E1/3.0);
            double t23883 = t23820*t23821*t23818*t23819;
            double t23884 = pow(t23822,4.0/5.0);
            double t23902 = rab1*t23884;
            double t23885 = exp(-t23902);
            double t23886 = t23885-1.0;
            double t23903 = kab1*t23886;
            double t23887 = kab0-t23903;
            double t23888 = a3*gamma_aa[index]*t23816*t23826*t23827;
            double t23889 = t23888+1.0;
            double t23890 = 1/sqrt(t23889);
            double t23891 = 1/pow(rho_a[index],8.0/3.0);
            double t23892 = a1*gamma_aa[index]*t23816*t23891;
            double t23893 = t23883+t23892+1.0;
            double t23894 = c*c;
            double t23895 = 1/pow(rho_a[index],2.0/3.0);
            double t23896 = k1*t23828;
            double t23897 = c*k2*t23817;
            double t23898 = t23896+t23897;
            double t23899 = 1/(t23898*t23898);
            double t23905 = t23894*t23895*t23899;
            double t23900 = exp(-t23905);
            double t23901 = exp(-t23883);
            double t23904 = c*c0*t23817*(2.0/3.0);
            double t23906 = t23880*t23881*t23846*2.0;
            double t23907 = c*c0*t23831*t23833*t23842*t23825*t23847*(8.0/9.0);
            double t23908 = a5*c0*gamma_aa[index]*t23831*t23850*t23842*t23816*t23825*(5.6E1/9.0);
            double t23909 = c*c0*t23831*t23833*t23825*t23817*t23855*t23856*(1.6E1/3.0);
            double t23910 = c*c0*t23821*t23831*t23823*t23833*t23842*t23825*t23819*t23857*(2.56E2/9.0);
            double t23961 = t23821*t23831*t23823*t23819*t23882*t23849*(6.4E1/3.0);
            double t23962 = c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23857*(2.56E2/9.0);
            double t23911 = t23910+t23906+t23907-t23961+t23908-t23962+t23909;
            double t23912 = c*c0*t23831*t23833*t23842*t23825*t23847*t23858*t23859*(2.0/9.0);
            double t23913 = c*c0*t23831*t23833*t23825*t23817*t23855*t23856*t23858*t23859*(4.0/3.0);
            double t23914 = c*c0*t23831*t23833*t23842*t23825*t23817*t23858*t23859*t23869*(2.0/3.0);
            double t23915 = a5*c0*gamma_aa[index]*t23831*t23850*t23842*t23816*t23825*t23858*t23859*(1.4E1/9.0) \
               ;
            double t23916 = c*c0*t23821*t23831*t23823*t23833*t23842*t23825*t23819*t23857*t23858*t23859*(6.4E1/ \
               9.0);
            double t23965 = c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23857*t23858*t23859*(6.4E1/ \
               9.0);
            double t23917 = t23912+t23913+t23914-t23870+t23915+t23916+t23865+t23866-t23965+t23867+t23868;
            double t23918 = t23823*t23823;
            double t23919 = t23819*t23819;
            double t23920 = t23821*t23821;
            double t23921 = raa2*raa2;
            double t23922 = c*kaa2*t23921*t23834*t23827*(1.0/3.6E1);
            double t23923 = raa1*raa1;
            double t23924 = 1/pow(t23822,6.0/5.0);
            double t23925 = kaa1*t23923*t23924*t23891*t23838*t23894*(4.0/2.25E2);
            double t23926 = 1/pow(t23822,3.0/2.0);
            double t23927 = kaa2*raa2*t23834*t23926*t23891*t23894*(1.0/3.6E1);
            double t23928 = 1/pow(t23822,8.0/5.0);
            double t23929 = kaa1*raa1*t23891*t23838*t23928*t23894*(2.0/7.5E1);
            double t23939 = c*kaa2*raa2*t23851*t23834*t23827*(2.0/9.0);
            double t23940 = c*kaa1*raa1*t23853*t23827*t23838*(8.0/4.5E1);
            double t23930 = t23922-t23940+t23925+t23927+t23929-t23939;
            double t23931 = t23855*t23855;
            double t23932 = 1/(t23841*t23841*t23841*t23841);
            double t23933 = 1/pow(rho_a[index],1.4E1/3.0);
            double t23934 = 1/pow(rho_a[index],1.0E1);
            double t23935 = 1/pow(rho_a[index],1.3E1);
            double t23936 = 1/pow(rho_a[index],2.3E1/3.0);
            double t23937 = 1/pow(rho_a[index],1.0E1/3.0);
            double t23938 = 1/t23833;
            double t23941 = t23869*t23869;
            double t23942 = 1/(t23830*t23830*t23830*t23830);
            double t23943 = c*c0*t23831*t23833*t23842*t23825*t23827*(8.0/2.7E1);
            double t23944 = c*c0*t23831*t23931*t23833*t23932*t23825*t23817*4.0;
            double t23945 = a5*c0*gamma_aa[index]*t23831*t23842*t23816*t23825*t23933*(5.6E1/9.0);
            double t23946 = c*c0*t23831*t23833*t23825*t23855*t23847*t23856*(8.0/9.0);
            double t23947 = a5*c0*gamma_aa[index]*t23831*t23850*t23816*t23825*t23855*t23856*(5.6E1/9.0);
            double t23948 = a5*c0*gamma_aa[index]*t23821*t23831*t23823*t23842*t23816*t23825*t23934*t23819*(8.96E2/ \
               2.7E1);
            double t23949 = c*c0*t23920*t23831*t23833*t23842*t23825*t23935*t23918*t23919*(2.048E3/2.7E1);
            double t23950 = c*c0*t23920*t23833*t23842*t23825*t23942*t23935*t23918*t23919*(1.024E3/9.0);
            double t23951 = c*c0*t23821*t23831*t23823*t23833*t23842*t23825*t23819*t23936*(4.48E2/9.0);
            double t23952 = c*c0*t23821*t23831*t23823*t23833*t23825*t23819*t23855*t23856*t23857*(2.56E2/9.0);
            double t23985 = c*c0*t23831*t23930*t23833*t23825*t23817*t23856*(4.0/3.0);
            double t23986 = a5*c0*gamma_aa[index]*t23821*t23823*t23842*t23860*t23816*t23825*t23934*t23819*(8.96E2/ \
               2.7E1);
            double t23987 = c*c0*t23920*t23833*t23842*t23860*t23825*t23935*t23918*t23919*(4.096E3/2.7E1);
            double t23988 = c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23936*(4.48E2/9.0);
            double t23989 = c*c0*t23821*t23823*t23833*t23860*t23825*t23819*t23855*t23856*t23857*(2.56E2/9.0);
            double t23953 = t23950+t23951+t23943+t23952+t23944+t23945+t23946+t23947+t23948+t23949-t23985-t23986- \
               t23987-t23988-t23989;
            double t23954 = 1/(t23863*t23863);
            double t23955 = t23880*t23881*t23846*3.0;
            double t23956 = c*c0*t23831*t23833*t23842*t23825*t23847*(4.0/3.0);
            double t23957 = a5*c0*gamma_aa[index]*t23831*t23850*t23842*t23816*t23825*(2.8E1/3.0);
            double t23958 = c*c0*t23831*t23833*t23825*t23817*t23855*t23856*8.0;
            double t23959 = c*c0*t23821*t23831*t23823*t23833*t23842*t23825*t23819*t23857*(1.28E2/3.0);
            double t23963 = t23821*t23831*t23823*t23819*t23882*t23849*3.2E1;
            double t23964 = c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23857*(1.28E2/3.0);
            double t23960 = -t23963+t23955-t23964+t23956+t23957+t23958+t23959;
            double t23966 = c*c0*t23833*t23842*t23825*t23827*(8.0/2.7E1);
            double t23967 = a5*c0*gamma_aa[index]*t23842*t23816*t23825*t23933*(5.6E1/9.0);
            double t23968 = c*c0*t23833*t23825*t23855*t23847*t23856*(8.0/9.0);
            double t23969 = c*c0*t23931*t23833*t23932*t23825*t23817*4.0;
            double t23970 = a5*c0*gamma_aa[index]*t23821*t23823*t23842*t23816*t23825*t23934*t23819*(8.96E2/2.7E1) \
               ;
            double t23971 = a5*c0*gamma_aa[index]*t23850*t23816*t23825*t23855*t23856*(5.6E1/9.0);
            double t23972 = c*c0*t23920*t23833*t23842*t23825*t23935*t23918*t23919*(2.048E3/2.7E1);
            double t23973 = c*c0*t23821*t23823*t23833*t23842*t23825*t23819*t23936*(4.48E2/9.0);
            double t23974 = c*c0*t23821*t23823*t23833*t23825*t23819*t23855*t23856*t23857*(2.56E2/9.0);
            double t23975 = t23970+t23971+t23972+t23973+t23974+t23966+t23967+t23968+t23969-c*c0*t23930*t23833* \
               t23825*t23817*t23856*(4.0/3.0);
            double t23976 = t23880*t23880;
            double t23977 = 1/pow(t23848,3.0/2.0);
            double t23978 = 1/pow(rho_a[index],2.2E1/3.0);
            double t23979 = 1/pow(rho_a[index],3.8E1/3.0);
            double t23980 = 1/c0;
            double t23981 = exp(-t23824);
            double t23982 = t23830*t23830;
            double t23983 = t23841*t23841;
            double t23984 = pow(rho_a[index],1.0/3.0);
            double t23990 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]) \
               ;
            double t23991 = t23901*t23890*t23893*t23887*1.0E5;
            double t23992 = -t23904+t23991;
            double t23993 = ( (t23992 > 0.0) ?  1.0 : 0.0 ) ;
            double t23994 = t23858*t23859;
            double t23995 = t23872*t23864*t23875;
            double t23996 = t23994+t23995;
            double t23997 = t23821*t23818*t23819*t23882*(1.6E1/3.0);
            double t23998 = a1*gamma_aa[index]*t23850*t23816*(8.0/3.0);
            double t23999 = t23997+t23998;
            double t24000 = 1/(c*c);
            double t24001 = 1/pow(t23822,1.0/5.0);
            double t24002 = 1/pow(t23889,3.0/2.0);
            double t24003 = 1/pow(rho_a[index],5.0/3.0);
            double t24004 = t23894*t23899*t24003*(2.0/3.0);
            double t24005 = 1/(t23898*t23898*t23898);
            double t24006 = c*k2*t23847*(1.0/3.0);
            double t24007 = c*k1*t23851*t23847*(1.0/6.0);
            double t24008 = t24006+t24007;
            double t24022 = t23894*t23895*t24005*t24008*2.0;
            double t24009 = t24004-t24022;
            double t24010 = t23911*t23872*t23864;
            double t24011 = t23858*t23859*t23869;
            double t24012 = t23917*t23864*t23875;
            double t24013 = t23826*t23980*t23981*t23982*t23938*t23983*t23984*t23869*(3.0/2.0);
            double t24017 = t23960*t23872*t23954*t23875;
            double t24014 = t24010+t24011+t24012+t24013-t24017;
            double t24015 = t23904-t23991;
            double t24016 = 0.0 ;
            double t24018 = c*c0*t23847*(2.0/9.0);
            double t24019 = t23901*t23821*t23818*t23890*t23819*t23882*t23893*t23887*(1.6E6/3.0);
            double t24020 = a3*gamma_aa[index]*t23901*t23816*t23826*t23937*t23893*t23887*t24002*(3.5E5/3.0);
            double t24023 = t23901*t23890*t23887*t23999*1.0E5;
            double t24024 = c*kab1*rab1*t23901*t23890*t23847*t23893*t23885*t24001*(8.0E4/3.0);
            double t24021 = t24020-t24023-t24024+t24018+t24019;
            v_rho_a_rho_a_[index] = - ( (c*c0*t23817*(-2.0/3.0)+t23890*t23893*t23887*exp(-t23820*t23821*t23818* \
               t23819)*1.0E5 > 0.0) ? c0*t23900*t24014*1.0 : 0.0 ) + 0.0 +c0*t23900*t23993*t23996*t24009+c0*rho_a[index]* \
               t23900*t23993*(t23872*t23864*(t23881*t23846*t23975*2.0-t23846*t23976*t23977-t23821*t23831*t23823*t23819* \
               t23849*t23978*(1.216E3/9.0)+t23920*t23860*t23918*t23919*t23849*t23979*(2.048E3/9.0)+c*c0*t23831*t23833* \
               t23842*t23825*t23827*(3.2E1/2.7E1)-t23821*t23831*t23823*t23880*t23881*t23819*t23882*(6.4E1/3.0)+a5* \
               c0*gamma_aa[index]*t23831*t23842*t23816*t23825*t23933*(2.24E2/9.0)+c*c0*t23831*t23931*t23833*t23932* \
               t23825*t23817*1.6E1-c*c0*t23831*t23930*t23833*t23825*t23817*t23856*(1.6E1/3.0)+c*c0*t23831*t23833* \
               t23825*t23855*t23847*t23856*(3.2E1/9.0)+a5*c0*gamma_aa[index]*t23831*t23850*t23816*t23825*t23855*t23856* \
               (2.24E2/9.0)+c*c0*t23821*t23831*t23823*t23833*t23842*t23825*t23819*t23936*(1.792E3/9.0)-c*c0*t23821* \
               t23823*t23833*t23842*t23860*t23825*t23819*t23936*(1.792E3/9.0)+c*c0*t23920*t23831*t23833*t23842*t23825* \
               t23935*t23918*t23919*(8.192E3/2.7E1)-c*c0*t23920*t23833*t23842*t23860*t23825*t23935*t23918*t23919* \
               (1.6384E4/2.7E1)+c*c0*t23920*t23833*t23842*t23825*t23942*t23935*t23918*t23919*(4.096E3/9.0)+a5*c0* \
               gamma_aa[index]*t23821*t23831*t23823*t23842*t23816*t23825*t23934*t23819*(3.584E3/2.7E1)-a5*c0*gamma_aa[index]* \
               t23821*t23823*t23842*t23860*t23816*t23825*t23934*t23819*(3.584E3/2.7E1)+c*c0*t23821*t23831*t23823* \
               t23833*t23825*t23819*t23855*t23856*t23857*(1.024E3/9.0)-c*c0*t23821*t23823*t23833*t23860*t23825*t23819* \
               t23855*t23856*t23857*(1.024E3/9.0))+t23911*t23917*t23864*2.0+t23941*t23858*t23859+t23953*t23858*t23859+ \
               t23864*t23875*(t23941+t23950+t23951+t23943+t23952+t23944+t23945+t23946+t23947+t23948+t23949+(t23869* \
               (1.0/3.0))/rho_a[index]+(t23855*t23869*2.0)/t23841+t23821*t23823*t23819*t23882*t23869*(3.2E1/3.0)- \
               t23821*t23823*t23819*t23846*t23882*t23869*(3.2E1/3.0)+a5*gamma_aa[index]*t23816*t23826*t23937*t23938* \
               t23869*(7.0/3.0)-c*c0*t23831*t23930*t23833*t23825*t23817*t23856*(4.0/3.0)+c*c0*t23831*t23833*t23842* \
               t23825*t23827*t23858*t23859*(8.0/2.7E1)+a5*c0*gamma_aa[index]*t23831*t23842*t23816*t23825*t23933*t23858* \
               t23859*(5.6E1/9.0)-c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23936*(4.48E2/9.0)-c*c0* \
               t23920*t23833*t23842*t23860*t23825*t23935*t23918*t23919*(4.096E3/2.7E1)+c*c0*t23831*t23931*t23833* \
               t23932*t23825*t23817*t23858*t23859*4.0+c*c0*t23831*t23833*t23842*t23941*t23825*t23817*t23858*t23859* \
               (2.0/3.0)-c*c0*t23831*t23930*t23833*t23825*t23817*t23856*t23858*t23859*(4.0/3.0)+c*c0*t23831*t23833* \
               t23842*t23825*t23817*t23953*t23858*t23859*(2.0/3.0)+c*c0*t23831*t23833*t23842*t23825*t23847*t23858* \
               t23859*t23869*(4.0/9.0)+c*c0*t23831*t23833*t23825*t23855*t23847*t23856*t23858*t23859*(8.0/9.0)-a5* \
               c0*gamma_aa[index]*t23821*t23823*t23842*t23860*t23816*t23825*t23934*t23819*(8.96E2/2.7E1)+a5*c0*gamma_aa[index]* \
               t23831*t23850*t23842*t23816*t23825*t23858*t23859*t23869*(2.8E1/9.0)+a5*c0*gamma_aa[index]*t23831*t23850* \
               t23816*t23825*t23855*t23856*t23858*t23859*(5.6E1/9.0)-c*c0*t23821*t23823*t23833*t23860*t23825*t23819* \
               t23855*t23856*t23857*(2.56E2/9.0)+c*c0*t23831*t23833*t23825*t23817*t23855*t23856*t23858*t23859*t23869* \
               (8.0/3.0)+c*c0*t23821*t23831*t23823*t23833*t23842*t23825*t23819*t23936*t23858*t23859*(4.48E2/9.0)- \
               c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23936*t23858*t23859*(4.48E2/9.0)+c*c0*t23920* \
               t23831*t23833*t23842*t23825*t23935*t23918*t23919*t23858*t23859*(2.048E3/2.7E1)-c*c0*t23920*t23833* \
               t23842*t23860*t23825*t23935*t23918*t23919*t23858*t23859*(4.096E3/2.7E1)+c*c0*t23920*t23833*t23842* \
               t23825*t23942*t23935*t23918*t23919*t23858*t23859*(1.024E3/9.0)+a5*c0*gamma_aa[index]*t23821*t23831* \
               t23823*t23842*t23816*t23825*t23934*t23819*t23858*t23859*(8.96E2/2.7E1)-a5*c0*gamma_aa[index]*t23821* \
               t23823*t23842*t23860*t23816*t23825*t23934*t23819*t23858*t23859*(8.96E2/2.7E1)+c*c0*t23821*t23831*t23823* \
               t23833*t23842*t23825*t23819*t23857*t23858*t23859*t23869*(1.28E2/9.0)+c*c0*t23821*t23831*t23823*t23833* \
               t23825*t23819*t23855*t23856*t23857*t23858*t23859*(2.56E2/9.0)-c*c0*t23821*t23823*t23833*t23842*t23860* \
               t23825*t23819*t23857*t23858*t23859*t23869*(1.28E2/9.0)-c*c0*t23821*t23823*t23833*t23860*t23825*t23819* \
               t23855*t23856*t23857*t23858*t23859*(2.56E2/9.0))-t23872*t23954*t23875*(t23881*t23846*t23975*3.0-t23846* \
               t23976*t23977*(3.0/2.0)-t23821*t23831*t23823*t23819*t23849*t23978*(6.08E2/3.0)+t23920*t23860*t23918* \
               t23919*t23849*t23979*(1.024E3/3.0)+c*c0*t23831*t23833*t23842*t23825*t23827*(1.6E1/9.0)-t23821*t23831* \
               t23823*t23880*t23881*t23819*t23882*3.2E1+a5*c0*gamma_aa[index]*t23831*t23842*t23816*t23825*t23933* \
               (1.12E2/3.0)+c*c0*t23831*t23931*t23833*t23932*t23825*t23817*2.4E1-c*c0*t23831*t23930*t23833*t23825* \
               t23817*t23856*8.0+c*c0*t23831*t23833*t23825*t23855*t23847*t23856*(1.6E1/3.0)+a5*c0*gamma_aa[index]* \
               t23831*t23850*t23816*t23825*t23855*t23856*(1.12E2/3.0)+c*c0*t23821*t23831*t23823*t23833*t23842*t23825* \
               t23819*t23936*(8.96E2/3.0)-c*c0*t23821*t23823*t23833*t23842*t23860*t23825*t23819*t23936*(8.96E2/3.0) \
               +c*c0*t23920*t23831*t23833*t23842*t23825*t23935*t23918*t23919*(4.096E3/9.0)-c*c0*t23920*t23833*t23842* \
               t23860*t23825*t23935*t23918*t23919*(8.192E3/9.0)+c*c0*t23920*t23833*t23842*t23825*t23942*t23935*t23918* \
               t23919*(2.048E3/3.0)+a5*c0*gamma_aa[index]*t23821*t23831*t23823*t23842*t23816*t23825*t23934*t23819* \
               (1.792E3/9.0)-a5*c0*gamma_aa[index]*t23821*t23823*t23842*t23860*t23816*t23825*t23934*t23819*(1.792E3/ \
               9.0)+c*c0*t23821*t23831*t23823*t23833*t23825*t23819*t23855*t23856*t23857*(5.12E2/3.0)-c*c0*t23821* \
               t23823*t23833*t23860*t23825*t23819*t23855*t23856*t23857*(5.12E2/3.0))-t23911*t23960*t23872*t23954* \
               2.0-t23960*t23917*t23954*t23875*2.0+(t23960*t23960)*1/(t23863*t23863*t23863)*t23872*t23875*2.0+t23941* \
               t23826*t23980*t23981*t23982*t23938*t23983*t23984*(3.0/2.0)+t23826*t23953*t23980*t23981*t23982*t23938* \
               t23983*t23984*(3.0/2.0)-t23826*t23980*t23981*t23982*t23938*t23983*t23895*t23869*(1.0/2.0)-t23841*t23826* \
               t23980*t23855*t23981*t23982*t23938*t23984*t23869*3.0+t23821*t23830*t23823*t23826*t23980*t23819*t23981* \
               t23990*t23938*t23983*t23869*1.6E1-t23821*t23823*t23826*t23980*t23819*t23981*t23990*t23982*t23938*t23983* \
               t23869*1.6E1-a5*gamma_aa[index]*1/(rho_a[index]*rho_a[index]*rho_a[index])*1/(t23833*t23833)*t23816* \
               t23980*t23981*t23982*t23983*t23869*t24000*(7.0/2.0))*(1.0/2.0)-c0*rho_a[index]*t23900*t23993*t24014* \
               t24009-c0*rho_a[index]*t23900*t24021*t24014*t24016+c0*rho_a[index]*t23900*t23993*t23996*(t24009*t24009) \
               *(1.0/2.0)-c0*rho_a[index]*t23900*t23996*t24016*(c*c0*t23827*(8.0/2.7E1)-t23901*t23890*t23887*(a1* \
               gamma_aa[index]*t23816*t23933*(8.8E1/9.0)+t23821*t23818*t23819*t23978*(3.04E2/9.0))*1.0E5+t23901*t23821* \
               t23818*t23890*t23819*t23893*t23887*t23978*(3.04E7/9.0)+t23901*t23821*t23818*t23890*t23819*t23882*t23887* \
               t23999*(3.2E6/3.0)-t23901*t23920*(t23818*t23818)*t23890*t23919*t23893*t23887*t23979*(2.56E7/9.0)-(a3* \
               a3)*t23901*t23821*t23819*t23857*t23893*t23887*1/pow(t23889,5.0/2.0)*t24000*(1.225E6/3.0)+kab1*(rab1* \
               rab1)*t23901*1/pow(t23822,2.0/5.0)*t23890*t23891*t23893*t23885*t23894*(6.4E4/9.0)+a3*gamma_aa[index]* \
               t23901*t23816*t23826*t23937*t23887*t23999*t24002*(7.0E5/3.0)-c*kab1*rab1*t23901*t23827*t23890*t23893* \
               t23885*t24001*(3.2E5/9.0)-c*kab1*rab1*t23901*t23890*t23847*t23885*t23999*t24001*(1.6E5/3.0)+kab1*rab1* \
               t23901*t23924*t23890*t23891*t23893*t23885*t23894*(1.6E4/9.0)+a3*gamma_aa[index]*1/pow(rho_a[index],1.3E1/ \
               3.0)*t23901*t23816*t23826*t23893*t23887*t24002*(3.5E6/9.0)+a3*gamma_aa[index]*kab1*rab1*t23901*t23816* \
               t23933*t23893*t23885*t24001*t24002*(5.6E5/9.0)-a3*gamma_aa[index]*1/pow(rho_a[index],2.9E1/3.0)*t23901* \
               t23821*t23816*t23826*t23818*t23819*t23893*t23887*t24002*(1.12E7/9.0)+c*kab1*rab1*t23901*t23821*t23818* \
               t23890*t23819*t23936*t23893*t23885*t24001*(2.56E6/9.0))*(1.0/2.0)-c0*rho_a[index]*t23900*t23993*t23996* \
               (t23891*t23894*t23899*(1.0E1/9.0)-t23894*t24003*t24005*t24008*(8.0/3.0)+t23894*t23895*1/(t23898*t23898* \
               t23898*t23898)*(t24008*t24008)*6.0-t23894*t23895*t24005*(c*k2*t23827*(4.0/9.0)+c*k1*t23851*t23827* \
               (2.0/9.0)-k1*t23926*t23891*t23894*(1.0/3.6E1))*2.0)*(1.0/2.0)- 0.0 +c0*rho_a[index]*t23900*t23996* \
               t24021*t24016*t24009;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t21182 = tspi_m13*tspi_m13;
            double t21183 = 1/pow(rho_a[index],1.0/3.0);
            double t21184 = a2*a2;
            double t21185 = gamma_aa[index]*gamma_aa[index];
            double t21186 = 1/pow(rho_a[index],1.6E1/3.0);
            double t21187 = t21182*t21182;
            double t21188 = c*t21183;
            double t21189 = pow(t21188,4.0/5.0);
            double t21203 = rab1*t21189;
            double t21190 = exp(-t21203);
            double t21191 = t21190-1.0;
            double t21204 = kab1*t21191;
            double t21192 = kab0-t21204;
            double t21193 = 1/c;
            double t21194 = 1/pow(rho_a[index],7.0/3.0);
            double t21195 = a3*gamma_aa[index]*t21182*t21193*t21194;
            double t21196 = t21195+1.0;
            double t21197 = t21184*t21185*t21186*t21187;
            double t21198 = 1/pow(rho_a[index],8.0/3.0);
            double t21199 = a1*gamma_aa[index]*t21182*t21198;
            double t21200 = t21197+t21199+1.0;
            double t21201 = t21184*t21185*t21186*t21187*2.0;
            double t21202 = exp(t21201);
            double t21205 = 1/(t21192*t21192);
            double t21206 = 1/(t21200*t21200);
            double t21207 = c*c0*t21202*t21205*t21206*t21183*t21196*(2.0/3.0);
            double t21208 = sqrt(t21207);
            double t21209 = 1/pow(rho_a[index],1.1E1/3.0);
            double t21210 = 1/pow(rho_a[index],4.0/3.0);
            double t21211 = exp(t21207);
            double t21212 = Ei(-t21207);
            double t21213 = c*c0*t21210*t21202*t21205*t21206*t21196*(2.0/9.0);
            double t21214 = 1/pow(rho_a[index],1.9E1/3.0);
            double t21215 = t21214*t21184*t21185*t21187*(1.6E1/3.0);
            double t21216 = a1*gamma_aa[index]*t21182*t21209*(8.0/3.0);
            double t21217 = t21215+t21216;
            double t21218 = 1/(t21200*t21200*t21200);
            double t21219 = a3*c0*gamma_aa[index]*t21202*t21205*t21206*t21182*t21209*(1.4E1/9.0);
            double t21220 = 1/pow(rho_a[index],2.0E1/3.0);
            double t21221 = c*c0*t21202*t21220*t21205*t21206*t21184*t21185*t21187*t21196*(6.4E1/9.0);
            double t21222 = c*c;
            double t21223 = 1/pow(rho_a[index],5.0/3.0);
            double t21224 = 1/(t21192*t21192*t21192);
            double t21225 = 1/pow(t21188,1.0/5.0);
            double t21231 = c*c0*t21202*t21205*t21217*t21218*t21183*t21196*(4.0/3.0);
            double t21232 = c0*kab1*rab1*t21202*t21222*t21223*t21206*t21224*t21225*t21190*t21196*(1.6E1/4.5E1) \
               ;
            double t21226 = t21221+t21213-t21231-t21232+t21219;
            double t21227 = t21208*6.0;
            double t21228 = c*c0*t21202*t21205*t21206*t21183*t21196*4.0;
            double t21229 = t21227+t21228+3.0;
            double t21230 = 1/t21229;
            double t21233 = c*c0*t21202*t21211*t21212*t21205*t21206*t21183*t21196*(2.0/3.0);
            double t21234 = t21233+1.0;
            double t21235 = t21208*4.0;
            double t21236 = c*c0*t21202*t21205*t21206*t21183*t21196*(8.0/3.0);
            double t21237 = t21235+t21236+6.0;
            double t21238 = 1/sqrt(t21207);
            double t21239 = 1/pow(rho_b[index],1.0/3.0);
            double t21240 = gamma_bb[index]*gamma_bb[index];
            double t21241 = 1/pow(rho_b[index],1.6E1/3.0);
            double t21242 = c*t21239;
            double t21243 = pow(t21242,4.0/5.0);
            double t21256 = rab1*t21243;
            double t21244 = exp(-t21256);
            double t21245 = t21244-1.0;
            double t21257 = kab1*t21245;
            double t21246 = kab0-t21257;
            double t21247 = 1/pow(rho_b[index],7.0/3.0);
            double t21248 = a3*gamma_bb[index]*t21182*t21193*t21247;
            double t21249 = t21248+1.0;
            double t21250 = t21240*t21241*t21184*t21187;
            double t21251 = 1/pow(rho_b[index],8.0/3.0);
            double t21252 = a1*gamma_bb[index]*t21251*t21182;
            double t21253 = t21250+t21252+1.0;
            double t21254 = t21240*t21241*t21184*t21187*2.0;
            double t21255 = exp(t21254);
            double t21258 = 1/(t21246*t21246);
            double t21259 = 1/(t21253*t21253);
            double t21260 = c*c0*t21255*t21239*t21249*t21258*t21259*(2.0/3.0);
            double t21261 = sqrt(t21260);
            double t21262 = 1/pow(rho_b[index],1.1E1/3.0);
            double t21263 = 1/pow(rho_b[index],4.0/3.0);
            double t21264 = exp(t21260);
            double t21265 = Ei(-t21260);
            double t21266 = c*c0*t21263*t21255*t21249*t21258*t21259*(2.0/9.0);
            double t21267 = 1/pow(rho_b[index],1.9E1/3.0);
            double t21268 = t21240*t21184*t21267*t21187*(1.6E1/3.0);
            double t21269 = a1*gamma_bb[index]*t21262*t21182*(8.0/3.0);
            double t21270 = t21268+t21269;
            double t21271 = 1/(t21253*t21253*t21253);
            double t21272 = a3*c0*gamma_bb[index]*t21262*t21182*t21255*t21258*t21259*(1.4E1/9.0);
            double t21273 = 1/pow(rho_b[index],2.0E1/3.0);
            double t21274 = c*c0*t21240*t21255*t21273*t21184*t21249*t21258*t21187*t21259*(6.4E1/9.0);
            double t21275 = 1/pow(rho_b[index],5.0/3.0);
            double t21276 = 1/(t21246*t21246*t21246);
            double t21277 = 1/pow(t21242,1.0/5.0);
            double t21283 = c*c0*t21270*t21271*t21255*t21239*t21249*t21258*(4.0/3.0);
            double t21284 = c0*kab1*rab1*t21222*t21244*t21255*t21275*t21249*t21276*t21259*t21277*(1.6E1/4.5E1) \
               ;
            double t21278 = t21272+t21274-t21283+t21266-t21284;
            double t21279 = t21261*6.0;
            double t21280 = c*c0*t21255*t21239*t21249*t21258*t21259*4.0;
            double t21281 = t21280+t21279+3.0;
            double t21282 = 1/t21281;
            double t21285 = c*c0*t21255*t21264*t21265*t21239*t21249*t21258*t21259*(2.0/3.0);
            double t21286 = t21285+1.0;
            double t21287 = t21261*4.0;
            double t21288 = c*c0*t21255*t21239*t21249*t21258*t21259*(8.0/3.0);
            double t21289 = t21287+t21288+6.0;
            double t21290 = 1/sqrt(t21260);
            double t21291 = 1/c0;
            double t21292 = exp(-t21197);
            double t21293 = 1/sqrt(t21196);
            double t21294 = t21200*t21192*t21292*t21293*1.0E5;
            double t21295 = exp(-t21250);
            double t21296 = 1/sqrt(t21249);
            double t21297 = t21253*t21246*t21295*t21296*1.0E5;
            v_rho_a_rho_b_[index] = ( (t21294-c*c0*t21183*(2.0/3.0) > 0.0) ?  c0*1.0*(t21230*t21234*(t21226*t21238* \
               2.0+c*c0*t21210*t21202*t21205*t21206*t21196*(8.0/9.0)+a3*c0*gamma_aa[index]*t21202*t21205*t21206*t21182* \
               t21209*(5.6E1/9.0)-c*c0*t21202*t21205*t21217*t21218*t21183*t21196*(1.6E1/3.0)+c*c0*t21202*t21220*t21205* \
               t21206*t21184*t21185*t21187*t21196*(2.56E2/9.0)-c0*kab1*rab1*t21202*t21222*t21223*t21206*t21224*t21225* \
               t21190*t21196*(6.4E1/4.5E1))+t21230*t21237*(t21221+t21213-t21231-t21232+t21219+c*c0*t21210*t21202* \
               t21211*t21212*t21205*t21206*t21196*(2.0/9.0)+a3*c0*gamma_aa[index]*t21202*t21211*t21212*t21205*t21206* \
               t21182*t21209*(1.4E1/9.0)+c*c0*t21202*t21211*t21212*t21205*t21206*t21226*t21183*t21196*(2.0/3.0)-c* \
               c0*t21202*t21211*t21212*t21205*t21217*t21218*t21183*t21196*(4.0/3.0)+c*c0*t21202*t21211*t21220*t21212* \
               t21205*t21206*t21184*t21185*t21187*t21196*(6.4E1/9.0)-c0*kab1*rab1*t21202*t21211*t21212*t21222*t21223* \
               t21206*t21224*t21225*t21190*t21196*(1.6E1/4.5E1))+t21211*t21212*t21226-t21234*t21237*1/(t21229*t21229) \
               *(t21226*t21238*3.0+c*c0*t21210*t21202*t21205*t21206*t21196*(4.0/3.0)+a3*c0*gamma_aa[index]*t21202* \
               t21205*t21206*t21182*t21209*(2.8E1/3.0)-c*c0*t21202*t21205*t21217*t21218*t21183*t21196*8.0+c*c0*t21202* \
               t21220*t21205*t21206*t21184*t21185*t21187*t21196*(1.28E2/3.0)-c0*kab1*rab1*t21202*t21222*t21223*t21206* \
               t21224*t21225*t21190*t21196*(3.2E1/1.5E1))+(pow(rho_a[index],1.0/3.0)*(t21200*t21200)*t21226*(t21192* \
               t21192)*t21291*t21193*exp(-t21201)*(3.0/2.0))/t21196)*(-1.0/2.0) : 0.0 ) - ( (t21297-c*c0*t21239*(2.0/ \
               3.0) > 0.0) ? c0*1.0*(t21282*t21286*(t21290*t21278*2.0+c*c0*t21263*t21255*t21249*t21258*t21259*(8.0/ \
               9.0)+a3*c0*gamma_bb[index]*t21262*t21182*t21255*t21258*t21259*(5.6E1/9.0)-c*c0*t21270*t21271*t21255* \
               t21239*t21249*t21258*(1.6E1/3.0)+c*c0*t21240*t21255*t21273*t21184*t21249*t21258*t21187*t21259*(2.56E2/ \
               9.0)-c0*kab1*rab1*t21222*t21244*t21255*t21275*t21249*t21276*t21259*t21277*(6.4E1/4.5E1))+t21282*t21289* \
               (t21272+t21274-t21283+t21266-t21284+c*c0*t21263*t21255*t21264*t21265*t21249*t21258*t21259*(2.0/9.0) \
               +a3*c0*gamma_bb[index]*t21262*t21182*t21255*t21264*t21265*t21258*t21259*(1.4E1/9.0)-c*c0*t21270*t21271* \
               t21255*t21264*t21265*t21239*t21249*t21258*(4.0/3.0)+c*c0*t21255*t21264*t21265*t21239*t21249*t21258* \
               t21259*t21278*(2.0/3.0)+c*c0*t21240*t21255*t21264*t21273*t21184*t21265*t21249*t21258*t21187*t21259* \
               (6.4E1/9.0)-c0*kab1*rab1*t21222*t21244*t21255*t21264*t21265*t21275*t21249*t21276*t21259*t21277*(1.6E1/ \
               4.5E1))+t21264*t21265*t21278-1/(t21281*t21281)*t21286*t21289*(t21290*t21278*3.0+c*c0*t21263*t21255* \
               t21249*t21258*t21259*(4.0/3.0)+a3*c0*gamma_bb[index]*t21262*t21182*t21255*t21258*t21259*(2.8E1/3.0) \
               -c*c0*t21270*t21271*t21255*t21239*t21249*t21258*8.0+c*c0*t21240*t21255*t21273*t21184*t21249*t21258* \
               t21187*t21259*(1.28E2/3.0)-c0*kab1*rab1*t21222*t21244*t21255*t21275*t21249*t21276*t21259*t21277*(3.2E1/ \
               1.5E1))+(pow(rho_b[index],1.0/3.0)*(t21253*t21253)*(t21246*t21246)*t21291*t21193*t21278*exp(-t21254) \
               *(3.0/2.0))/t21249)*(1.0/2.0) : 0.0 ) + 0.0 + 0.0 ;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t21299 = tspi_m13*tspi_m13;
            double t21300 = 1/pow(rho_b[index],1.0/3.0);
            double t21301 = a2*a2;
            double t21302 = gamma_bb[index]*gamma_bb[index];
            double t21303 = 1/pow(rho_b[index],1.6E1/3.0);
            double t21304 = t21299*t21299;
            double t21305 = c*t21300;
            double t21306 = a4*a4;
            double t21307 = 1/c;
            double t21308 = 1/pow(rho_b[index],7.0/3.0);
            double t21309 = sqrt(t21305);
            double t21310 = t21302*t21303*t21304*t21306*2.0;
            double t21311 = exp(t21310);
            double t21312 = t21302*t21303*t21304*t21306;
            double t21313 = t21312+1.0;
            double t21314 = a5*gamma_bb[index]*t21307*t21308*t21299;
            double t21315 = t21314+1.0;
            double t21326 = raa2*t21309;
            double t21316 = exp(-t21326);
            double t21317 = t21316-1.0;
            double t21318 = kaa2*t21317;
            double t21319 = pow(t21305,2.0/5.0);
            double t21327 = raa1*t21319;
            double t21320 = exp(-t21327);
            double t21321 = t21320-1.0;
            double t21322 = kaa1*t21321;
            double t21323 = -kaa0+t21322+t21318;
            double t21324 = 1/(t21323*t21323);
            double t21325 = 1/t21313;
            double t21328 = 1/pow(rho_b[index],4.0/3.0);
            double t21329 = c*c0*t21300*t21311*t21315*t21324*(2.0/3.0);
            double t21330 = 1/(t21313*t21313);
            double t21331 = sqrt(t21329);
            double t21332 = 1/pow(rho_b[index],1.1E1/3.0);
            double t21333 = 1/sqrt(t21305);
            double t21334 = c*kaa2*raa2*t21333*t21316*t21328*(1.0/6.0);
            double t21335 = 1/pow(t21305,3.0/5.0);
            double t21336 = c*kaa1*raa1*t21320*t21335*t21328*(2.0/1.5E1);
            double t21337 = t21334+t21336;
            double t21338 = 1/(t21323*t21323*t21323);
            double t21339 = 1/pow(rho_b[index],2.0E1/3.0);
            double t21340 = c*c0*t21300*t21311*t21330*t21315*t21324*(2.0/3.0);
            double t21341 = exp(t21340);
            double t21342 = Ei(-t21340);
            double t21343 = c*c0*t21311*t21330*t21315*t21324*t21328*(2.0/9.0);
            double t21344 = a5*c0*gamma_bb[index]*t21311*t21330*t21332*t21324*t21299*(1.4E1/9.0);
            double t21345 = c*c0*t21300*t21311*t21330*t21315*t21337*t21338*(4.0/3.0);
            double t21346 = 1/(t21313*t21313*t21313);
            double t21347 = c*c0*t21302*t21311*t21330*t21304*t21306*t21315*t21324*t21339*(6.4E1/9.0);
            double t21348 = t21331*t21325*6.0;
            double t21349 = c*c0*t21300*t21311*t21330*t21315*t21324*4.0;
            double t21350 = t21348+t21349+3.0;
            double t21351 = 1/t21350;
            double t21352 = 1/sqrt(t21329);
            double t21353 = c*c;
            double t21354 = 1/pow(rho_b[index],8.0/3.0);
            double t21355 = c*c0*t21311*t21315*t21324*t21328*(2.0/9.0);
            double t21356 = a5*c0*gamma_bb[index]*t21311*t21332*t21324*t21299*(1.4E1/9.0);
            double t21357 = c*c0*t21300*t21311*t21315*t21337*t21338*(4.0/3.0);
            double t21358 = c*c0*t21302*t21311*t21304*t21306*t21315*t21324*t21339*(6.4E1/9.0);
            double t21359 = t21355+t21356+t21357+t21358;
            double t21360 = t21306*t21306;
            double t21361 = t21302*t21302;
            double t21362 = t21304*t21304;
            double t21363 = 1/pow(rho_b[index],1.9E1/3.0);
            double t21364 = raa2*raa2;
            double t21365 = c*kaa2*t21316*t21308*t21364*(1.0/3.6E1);
            double t21366 = raa1*raa1;
            double t21367 = 1/pow(t21305,6.0/5.0);
            double t21368 = kaa1*t21320*t21353*t21354*t21366*t21367*(4.0/2.25E2);
            double t21369 = 1/pow(t21305,3.0/2.0);
            double t21370 = kaa2*raa2*t21316*t21353*t21354*t21369*(1.0/3.6E1);
            double t21371 = 1/pow(t21305,8.0/5.0);
            double t21372 = kaa1*raa1*t21320*t21353*t21371*t21354*(2.0/7.5E1);
            double t21382 = c*kaa2*raa2*t21333*t21316*t21308*(2.0/9.0);
            double t21383 = c*kaa1*raa1*t21320*t21308*t21335*(8.0/4.5E1);
            double t21373 = t21370+t21372-t21382+t21365-t21383+t21368;
            double t21374 = t21337*t21337;
            double t21375 = 1/(t21323*t21323*t21323*t21323);
            double t21376 = 1/pow(rho_b[index],1.4E1/3.0);
            double t21377 = 1/pow(rho_b[index],1.0E1);
            double t21378 = 1/pow(rho_b[index],1.3E1);
            double t21379 = 1/pow(rho_b[index],2.3E1/3.0);
            double t21381 = c*c0*t21302*t21311*t21304*t21306*t21315*t21324*t21346*t21339*(6.4E1/9.0);
            double t21380 = t21343+t21344+t21345-t21381+t21347;
            double t21384 = t21380*t21380;
            double t21385 = 1/(t21313*t21313*t21313*t21313);
            double t21386 = c*c0*t21311*t21330*t21315*t21324*t21308*(8.0/2.7E1);
            double t21387 = c*c0*t21300*t21311*t21330*t21315*t21374*t21375*4.0;
            double t21388 = a5*c0*gamma_bb[index]*t21311*t21330*t21324*t21376*t21299*(5.6E1/9.0);
            double t21389 = c*c0*t21311*t21330*t21315*t21328*t21337*t21338*(8.0/9.0);
            double t21390 = a5*c0*gamma_bb[index]*t21311*t21330*t21332*t21337*t21338*t21299*(5.6E1/9.0);
            double t21391 = a5*c0*gamma_bb[index]*t21302*t21311*t21330*t21304*t21306*t21324*t21377*t21299*(8.96E2/ \
               2.7E1);
            double t21392 = c*c0*t21311*t21330*t21315*t21324*t21360*t21361*t21362*t21378*(2.048E3/2.7E1);
            double t21393 = c*c0*t21311*t21315*t21324*t21360*t21361*t21362*t21385*t21378*(1.024E3/9.0);
            double t21394 = c*c0*t21302*t21311*t21330*t21304*t21306*t21315*t21324*t21379*(4.48E2/9.0);
            double t21395 = c*c0*t21302*t21311*t21330*t21304*t21306*t21315*t21337*t21338*t21339*(2.56E2/9.0);
            double t21443 = c*c0*t21300*t21311*t21330*t21315*t21373*t21338*(4.0/3.0);
            double t21444 = a5*c0*gamma_bb[index]*t21302*t21311*t21304*t21306*t21324*t21346*t21377*t21299*(8.96E2/ \
               2.7E1);
            double t21445 = c*c0*t21311*t21315*t21324*t21360*t21361*t21362*t21346*t21378*(4.096E3/2.7E1);
            double t21446 = c*c0*t21302*t21311*t21304*t21306*t21315*t21324*t21346*t21379*(4.48E2/9.0);
            double t21447 = c*c0*t21302*t21311*t21304*t21306*t21315*t21337*t21346*t21338*t21339*(2.56E2/9.0);
            double t21396 = -t21443+t21390-t21444+t21391-t21445+t21392-t21446+t21393-t21447+t21394+t21386+t21395+ \
               t21387+t21388+t21389;
            double t21397 = c*c0*t21300*t21311*t21330*t21341*t21315*t21324*t21342*(2.0/3.0);
            double t21398 = t21397+1.0;
            double t21399 = t21325*t21352*t21359*2.0;
            double t21400 = c*c0*t21311*t21330*t21315*t21324*t21328*(8.0/9.0);
            double t21401 = a5*c0*gamma_bb[index]*t21311*t21330*t21332*t21324*t21299*(5.6E1/9.0);
            double t21402 = c*c0*t21300*t21311*t21330*t21315*t21337*t21338*(1.6E1/3.0);
            double t21403 = c*c0*t21302*t21311*t21330*t21304*t21306*t21315*t21324*t21339*(2.56E2/9.0);
            double t21465 = t21302*t21330*t21304*t21331*t21306*t21363*(6.4E1/3.0);
            double t21466 = c*c0*t21302*t21311*t21304*t21306*t21315*t21324*t21346*t21339*(2.56E2/9.0);
            double t21404 = t21400+t21401+t21402+t21403-t21465-t21466+t21399;
            double t21405 = 1/(t21350*t21350);
            double t21406 = t21331*t21325*4.0;
            double t21407 = c*c0*t21300*t21311*t21330*t21315*t21324*(8.0/3.0);
            double t21408 = t21406+t21407+6.0;
            double t21409 = t21325*t21352*t21359*3.0;
            double t21410 = c*c0*t21311*t21330*t21315*t21324*t21328*(4.0/3.0);
            double t21411 = a5*c0*gamma_bb[index]*t21311*t21330*t21332*t21324*t21299*(2.8E1/3.0);
            double t21412 = c*c0*t21300*t21311*t21330*t21315*t21337*t21338*8.0;
            double t21413 = c*c0*t21302*t21311*t21330*t21304*t21306*t21315*t21324*t21339*(1.28E2/3.0);
            double t21434 = t21302*t21330*t21304*t21331*t21306*t21363*3.2E1;
            double t21435 = c*c0*t21302*t21311*t21304*t21306*t21315*t21324*t21346*t21339*(1.28E2/3.0);
            double t21414 = t21410+t21411+t21412+t21413-t21434-t21435+t21409;
            double t21415 = c*c0*t21311*t21330*t21341*t21315*t21324*t21342*t21328*(2.0/9.0);
            double t21416 = c*c0*t21300*t21311*t21330*t21341*t21315*t21342*t21337*t21338*(4.0/3.0);
            double t21417 = c*c0*t21300*t21311*t21330*t21341*t21315*t21324*t21342*t21380*(2.0/3.0);
            double t21418 = a5*c0*gamma_bb[index]*t21311*t21330*t21332*t21341*t21324*t21342*t21299*(1.4E1/9.0) \
               ;
            double t21419 = c*c0*t21302*t21311*t21330*t21304*t21341*t21306*t21315*t21324*t21342*t21339*(6.4E1/ \
               9.0);
            double t21420 = c*c0*t21311*t21315*t21324*t21308*(8.0/2.7E1);
            double t21421 = a5*c0*gamma_bb[index]*t21311*t21324*t21376*t21299*(5.6E1/9.0);
            double t21422 = c*c0*t21311*t21315*t21328*t21337*t21338*(8.0/9.0);
            double t21423 = c*c0*t21300*t21311*t21315*t21374*t21375*4.0;
            double t21424 = a5*c0*gamma_bb[index]*t21302*t21311*t21304*t21306*t21324*t21377*t21299*(8.96E2/2.7E1) \
               ;
            double t21425 = a5*c0*gamma_bb[index]*t21311*t21332*t21337*t21338*t21299*(5.6E1/9.0);
            double t21426 = c*c0*t21311*t21315*t21324*t21360*t21361*t21362*t21378*(2.048E3/2.7E1);
            double t21427 = c*c0*t21302*t21311*t21304*t21306*t21315*t21324*t21379*(4.48E2/9.0);
            double t21428 = c*c0*t21302*t21311*t21304*t21306*t21315*t21337*t21338*t21339*(2.56E2/9.0);
            double t21429 = t21420+t21421+t21422+t21423+t21424+t21425+t21426+t21427+t21428-c*c0*t21300*t21311* \
               t21315*t21373*t21338*(4.0/3.0);
            double t21430 = t21359*t21359;
            double t21431 = 1/pow(t21329,3.0/2.0);
            double t21432 = 1/pow(rho_b[index],2.2E1/3.0);
            double t21433 = 1/pow(rho_b[index],3.8E1/3.0);
            double t21436 = 1/pow(rho_b[index],2.0/3.0);
            double t21437 = 1/t21315;
            double t21438 = 1/c0;
            double t21439 = exp(-t21310);
            double t21440 = t21313*t21313;
            double t21441 = t21323*t21323;
            double t21442 = pow(rho_b[index],1.0/3.0);
            double t21448 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]) \
               ;
            double t21467 = c*c0*t21302*t21311*t21304*t21341*t21306*t21315*t21324*t21342*t21346*t21339*(6.4E1/ \
               9.0);
            double t21449 = t21343+t21415+t21344+t21416+t21345-t21381+t21417+t21418+t21347+t21419-t21467;
            double t21450 = t21301*t21302*t21303*t21304;
            double t21451 = pow(t21305,4.0/5.0);
            double t21469 = rab1*t21451;
            double t21452 = exp(-t21469);
            double t21453 = t21452-1.0;
            double t21470 = kab1*t21453;
            double t21454 = kab0-t21470;
            double t21455 = a3*gamma_bb[index]*t21307*t21308*t21299;
            double t21456 = t21455+1.0;
            double t21457 = 1/sqrt(t21456);
            double t21458 = a1*gamma_bb[index]*t21354*t21299;
            double t21459 = t21450+t21458+1.0;
            double t21460 = k1*t21309;
            double t21461 = c*k2*t21300;
            double t21462 = t21460+t21461;
            double t21463 = 1/(t21462*t21462);
            double t21472 = t21353*t21436*t21463;
            double t21464 = exp(-t21472);
            double t21468 = exp(-t21450);
            double t21471 = t21454*t21457*t21459*t21468*1.0E5;
            double t21473 = t21404*t21351*t21398;
            double t21474 = t21341*t21342*t21380;
            double t21475 = t21351*t21408*t21449;
            double t21476 = t21440*t21441*t21307*t21442*t21380*t21437*t21438*t21439*(3.0/2.0);
            double t21614 = t21405*t21414*t21408*t21398;
            double t21477 = -t21614+t21473+t21474+t21475+t21476;
            double t21478 = 1/pow(rho_b[index],1.0E1/3.0);
            double t21479 = c*c0*t21300*(2.0/3.0);
            double t21480 = 1/(t21462*t21462*t21462);
            double t21481 = c*k2*t21328*(1.0/3.0);
            double t21482 = c*k1*t21333*t21328*(1.0/6.0);
            double t21483 = t21481+t21482;
            double t21484 = 1/pow(rho_b[index],5.0/3.0);
            double t21485 = t21471-t21479;
            double t21486 = ( (t21485 > 0.0) ?  1.0 : 0.0 ) ;
            double t21487 = t21341*t21342;
            double t21488 = t21351*t21408*t21398;
            double t21489 = t21487+t21488;
            double t21490 = t21353*t21463*t21484*(2.0/3.0);
            double t21504 = t21353*t21480*t21436*t21483*2.0;
            double t21491 = -t21504+t21490;
            double t21492 = -t21471+t21479;
            double t21493 = c*c0*t21328*(2.0/9.0);
            double t21494 = t21301*t21302*t21304*t21363*(1.6E1/3.0);
            double t21495 = a1*gamma_bb[index]*t21332*t21299*(8.0/3.0);
            double t21496 = t21494+t21495;
            double t21497 = t21301*t21302*t21304*t21363*t21454*t21457*t21459*t21468*(1.6E6/3.0);
            double t21498 = 1/pow(t21305,1.0/5.0);
            double t21499 = 1/pow(t21456,3.0/2.0);
            double t21500 = a3*gamma_bb[index]*t21307*t21454*t21459*t21468*t21478*t21299*t21499*(3.5E5/3.0);
            double t21505 = t21454*t21457*t21468*t21496*1.0E5;
            double t21506 = c*kab1*rab1*t21452*t21328*t21457*t21459*t21468*t21498*(8.0E4/3.0);
            double t21501 = t21500-t21505-t21506+t21493+t21497;
            double t21502 = 0.0 ;
            double t21503 = 1/(c*c);
            double t21507 = t21301*t21302*t21303*t21304*2.0;
            double t21508 = exp(t21507);
            double t21509 = 1/(t21454*t21454);
            double t21510 = 1/(t21459*t21459);
            double t21511 = c*c0*t21300*t21510*t21508*t21509*t21456*(2.0/3.0);
            double t21512 = sqrt(t21511);
            double t21513 = 1/rho_b[index];
            double t21514 = c*c0*t21510*t21328*t21508*t21509*t21456*(2.0/9.0);
            double t21515 = 1/(t21459*t21459*t21459);
            double t21516 = a3*c0*gamma_bb[index]*t21510*t21332*t21508*t21509*t21299*(1.4E1/9.0);
            double t21517 = c*c0*t21301*t21302*t21510*t21304*t21508*t21509*t21339*t21456*(6.4E1/9.0);
            double t21518 = 1/(t21454*t21454*t21454);
            double t21520 = c*c0*t21300*t21515*t21508*t21509*t21456*t21496*(4.0/3.0);
            double t21521 = c0*kab1*rab1*t21510*t21353*t21452*t21508*t21518*t21456*t21484*t21498*(1.6E1/4.5E1) \
               ;
            double t21519 = -t21520-t21521+t21514+t21516+t21517;
            double t21522 = t21301*t21302*t21304*t21432*(3.04E2/9.0);
            double t21523 = a1*gamma_bb[index]*t21376*t21299*(8.8E1/9.0);
            double t21524 = t21522+t21523;
            double t21525 = exp(t21511);
            double t21526 = Ei(-t21511);
            double t21527 = c*c0*t21510*t21308*t21508*t21509*t21456*(8.0/2.7E1);
            double t21528 = t21496*t21496;
            double t21529 = 1/(t21459*t21459*t21459*t21459);
            double t21530 = c*c0*t21300*t21508*t21509*t21456*t21528*t21529*4.0;
            double t21531 = a3*c0*gamma_bb[index]*t21510*t21508*t21509*t21376*t21299*(5.6E1/9.0);
            double t21532 = a3*c0*gamma_bb[index]*t21301*t21302*t21510*t21304*t21508*t21509*t21377*t21299*(8.96E2/ \
               2.7E1);
            double t21533 = t21301*t21301;
            double t21534 = rab1*rab1;
            double t21535 = 1/(rho_b[index]*rho_b[index]*rho_b[index]);
            double t21536 = 1/pow(t21305,2.0/5.0);
            double t21537 = t21519*t21519;
            double t21538 = c*c0*t21510*t21361*t21362*t21533*t21508*t21509*t21456*t21378*(2.048E3/2.7E1);
            double t21539 = c*c0*t21301*t21302*t21510*t21304*t21508*t21509*t21456*t21379*(4.48E2/9.0);
            double t21540 = c*c0*kab1*t21510*t21353*t21452*t21534*t21508*t21535*t21518*t21536*t21456*(6.4E1/6.75E2) \
               ;
            double t21541 = kab1*kab1;
            double t21548 = rab1*t21451*2.0;
            double t21542 = exp(-t21548);
            double t21543 = 1/(t21454*t21454*t21454*t21454);
            double t21544 = c*c0*t21510*t21541*t21353*t21542*t21534*t21543*t21508*t21535*t21536*t21456*(6.4E1/ \
               2.25E2);
            double t21545 = c*c0*kab1*rab1*t21510*t21353*t21452*t21508*t21535*t21518*t21456*t21367*(1.6E1/6.75E2) \
               ;
            double t21546 = c0*kab1*rab1*t21353*t21452*t21515*t21508*t21518*t21456*t21484*t21496*t21498*(6.4E1/ \
               4.5E1);
            double t21547 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]);
            double t21549 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t21550 = t21512*6.0;
            double t21551 = c*c0*t21300*t21510*t21508*t21509*t21456*4.0;
            double t21552 = t21550+t21551+3.0;
            double t21553 = 1/t21552;
            double t21555 = c*c0*t21515*t21328*t21508*t21509*t21456*t21496*(8.0/9.0);
            double t21556 = c*c0*t21300*t21515*t21524*t21508*t21509*t21456*(4.0/3.0);
            double t21557 = a3*c0*gamma_bb[index]*t21332*t21515*t21508*t21509*t21496*t21299*(5.6E1/9.0);
            double t21558 = c*c0*t21301*t21302*t21304*t21515*t21508*t21509*t21339*t21456*t21496*(2.56E2/9.0);
            double t21559 = c0*kab1*rab1*t21510*t21353*t21452*t21354*t21508*t21518*t21456*t21498*(3.2E1/4.5E1) \
               ;
            double t21560 = a3*c*c0*gamma_bb[index]*kab1*rab1*t21510*t21452*t21508*t21518*t21547*t21299*t21498* \
               (2.24E2/1.35E2);
            double t21561 = c0*kab1*rab1*t21301*t21302*t21510*t21304*t21353*t21452*t21508*t21518*t21456*t21549* \
               t21498*(1.024E3/1.35E2);
            double t21554 = t21530+t21531+t21540+t21532-t21560-t21561+t21544+t21527+t21545+t21546-t21555+t21538- \
               t21556+t21539-t21557-t21558-t21559;
            double t21562 = 1/sqrt(t21511);
            double t21563 = t21512*4.0;
            double t21564 = c*c0*t21300*t21510*t21508*t21509*t21456*(8.0/3.0);
            double t21565 = t21563+t21564+6.0;
            double t21566 = c*c0*t21510*t21525*t21328*t21508*t21526*t21509*t21456*(2.0/9.0);
            double t21567 = a3*c0*gamma_bb[index]*t21510*t21332*t21525*t21508*t21526*t21509*t21299*(1.4E1/9.0) \
               ;
            double t21568 = c*c0*t21300*t21510*t21525*t21508*t21526*t21509*t21456*t21519*(2.0/3.0);
            double t21569 = c*c0*t21301*t21302*t21510*t21304*t21525*t21508*t21526*t21509*t21339*t21456*(6.4E1/ \
               9.0);
            double t21591 = c*c0*t21300*t21515*t21525*t21508*t21526*t21509*t21456*t21496*(4.0/3.0);
            double t21592 = c0*kab1*rab1*t21510*t21353*t21452*t21525*t21508*t21526*t21518*t21456*t21484*t21498* \
               (1.6E1/4.5E1);
            double t21570 = -t21520-t21521+t21514+t21516+t21517-t21591-t21592+t21566+t21567+t21568+t21569;
            double t21571 = c*c0*t21300*t21510*t21525*t21508*t21526*t21509*t21456*(2.0/3.0);
            double t21572 = t21571+1.0;
            double t21573 = 1/(t21552*t21552);
            double t21574 = 1/pow(t21511,3.0/2.0);
            double t21575 = t21562*t21519*3.0;
            double t21576 = c*c0*t21510*t21328*t21508*t21509*t21456*(4.0/3.0);
            double t21577 = a3*c0*gamma_bb[index]*t21510*t21332*t21508*t21509*t21299*(2.8E1/3.0);
            double t21578 = c*c0*t21301*t21302*t21510*t21304*t21508*t21509*t21339*t21456*(1.28E2/3.0);
            double t21580 = c*c0*t21300*t21515*t21508*t21509*t21456*t21496*8.0;
            double t21581 = c0*kab1*rab1*t21510*t21353*t21452*t21508*t21518*t21456*t21484*t21498*(3.2E1/1.5E1) \
               ;
            double t21579 = -t21580-t21581+t21575+t21576+t21577+t21578;
            double t21582 = t21562*t21519*2.0;
            double t21583 = c*c0*t21510*t21328*t21508*t21509*t21456*(8.0/9.0);
            double t21584 = a3*c0*gamma_bb[index]*t21510*t21332*t21508*t21509*t21299*(5.6E1/9.0);
            double t21585 = c*c0*t21301*t21302*t21510*t21304*t21508*t21509*t21339*t21456*(2.56E2/9.0);
            double t21593 = c*c0*t21300*t21515*t21508*t21509*t21456*t21496*(1.6E1/3.0);
            double t21594 = c0*kab1*rab1*t21510*t21353*t21452*t21508*t21518*t21456*t21484*t21498*(6.4E1/4.5E1) \
               ;
            double t21586 = t21582+t21583+t21584-t21593+t21585-t21594;
            double t21587 = 1/t21456;
            double t21588 = exp(-t21507);
            double t21589 = t21454*t21454;
            double t21590 = t21459*t21459;
            double t21595 = 0.0 ;
            double t21596 = t21501*t21501;
            double t21597 = t21525*t21526;
            double t21598 = t21553*t21572*t21565;
            double t21599 = t21597+t21598;
            double t21600 = c*c0*t21308*(8.0/2.7E1);
            double t21601 = t21301*t21302*t21304*t21432*t21454*t21457*t21459*t21468*(3.04E7/9.0);
            double t21602 = t21301*t21302*t21304*t21363*t21454*t21457*t21468*t21496*(3.2E6/3.0);
            double t21603 = kab1*t21353*t21452*t21354*t21534*t21536*t21457*t21459*t21468*(6.4E4/9.0);
            double t21604 = a3*a3;
            double t21605 = 1/pow(t21456,5.0/2.0);
            double t21606 = 1/pow(rho_b[index],1.3E1/3.0);
            double t21607 = a3*gamma_bb[index]*t21307*t21606*t21454*t21459*t21468*t21299*t21499*(3.5E6/9.0);
            double t21608 = a3*gamma_bb[index]*t21307*t21454*t21468*t21478*t21496*t21299*t21499*(7.0E5/3.0);
            double t21609 = kab1*rab1*t21353*t21452*t21354*t21367*t21457*t21459*t21468*(1.6E4/9.0);
            double t21610 = 1/pow(rho_b[index],2.9E1/3.0);
            double t21611 = a3*gamma_bb[index]*kab1*rab1*t21452*t21376*t21459*t21468*t21299*t21498*t21499*(5.6E5/ \
               9.0);
            double t21612 = c*kab1*rab1*t21301*t21302*t21304*t21452*t21457*t21459*t21468*t21379*t21498*(2.56E6/ \
               9.0);
            double t21613 = t21600+t21601+t21602+t21611+t21603+t21612+t21607+t21608+t21609-t21524*t21454*t21457* \
               t21468*1.0E5-t21361*t21433*t21362*t21533*t21454*t21457*t21459*t21468*(2.56E7/9.0)-c*kab1*rab1*t21308* \
               t21452*t21457*t21459*t21468*t21498*(3.2E5/9.0)-c*kab1*rab1*t21452*t21328*t21457*t21468*t21496*t21498* \
               (1.6E5/3.0)-t21302*t21304*t21503*t21604*t21605*t21454*t21339*t21459*t21468*(1.225E6/3.0)-a3*gamma_bb[index]* \
               t21301*t21302*t21304*t21610*t21307*t21454*t21459*t21468*t21299*t21499*(1.12E7/9.0);
            v_rho_b_rho_b_[index] = -rho_a[index]*(c0*t21486*(t21553*t21565*(t21530+t21531+t21540+t21532-t21560- \
               t21561+t21544+t21527+t21545+t21537+t21546-t21555+t21538-t21556+t21539-t21557-t21558-t21559+t21513* \
               t21519*(1.0/3.0)-(t21519*t21496*2.0)/t21459+t21301*t21302*t21304*t21363*t21519*(3.2E1/3.0)+a3*gamma_bb[index]* \
               t21307*t21519*t21478*t21299*t21587*(7.0/3.0)-(c*kab1*rab1*t21452*t21328*t21519*t21498*(8.0/1.5E1)) \
               /t21454+c*c0*t21510*t21308*t21525*t21508*t21526*t21509*t21456*(8.0/2.7E1)+a3*c0*gamma_bb[index]*t21510* \
               t21525*t21508*t21526*t21509*t21376*t21299*(5.6E1/9.0)+c*c0*t21300*t21510*t21525*t21508*t21526*t21509* \
               t21554*t21456*(2.0/3.0)+c*c0*t21300*t21510*t21525*t21508*t21526*t21509*t21456*t21537*(2.0/3.0)-c*c0* \
               t21300*t21515*t21524*t21525*t21508*t21526*t21509*t21456*(4.0/3.0)+c*c0*t21300*t21525*t21508*t21526* \
               t21509*t21456*t21528*t21529*4.0+c*c0*t21510*t21525*t21328*t21508*t21526*t21509*t21456*t21519*(4.0/ \
               9.0)-c*c0*t21515*t21525*t21328*t21508*t21526*t21509*t21456*t21496*(8.0/9.0)+a3*c0*gamma_bb[index]* \
               t21510*t21332*t21525*t21508*t21526*t21509*t21519*t21299*(2.8E1/9.0)-a3*c0*gamma_bb[index]*t21332*t21515* \
               t21525*t21508*t21526*t21509*t21496*t21299*(5.6E1/9.0)-c*c0*t21300*t21515*t21525*t21508*t21526*t21509* \
               t21456*t21519*t21496*(8.0/3.0)+c*c0*t21301*t21302*t21510*t21304*t21525*t21508*t21526*t21509*t21456* \
               t21379*(4.48E2/9.0)+c*c0*t21510*t21361*t21362*t21533*t21525*t21508*t21526*t21509*t21456*t21378*(2.048E3/ \
               2.7E1)+a3*c0*gamma_bb[index]*t21301*t21302*t21510*t21304*t21525*t21508*t21526*t21509*t21377*t21299* \
               (8.96E2/2.7E1)+c*c0*t21301*t21302*t21510*t21304*t21525*t21508*t21526*t21509*t21339*t21456*t21519*(1.28E2/ \
               9.0)-c*c0*t21301*t21302*t21304*t21515*t21525*t21508*t21526*t21509*t21339*t21456*t21496*(2.56E2/9.0) \
               -c0*kab1*rab1*t21510*t21353*t21452*t21354*t21525*t21508*t21526*t21518*t21456*t21498*(3.2E1/4.5E1)+ \
               c*c0*kab1*rab1*t21510*t21353*t21452*t21525*t21508*t21526*t21535*t21518*t21456*t21367*(1.6E1/6.75E2) \
               +c*c0*kab1*t21510*t21353*t21452*t21525*t21534*t21508*t21526*t21535*t21518*t21536*t21456*(6.4E1/6.75E2) \
               +c*c0*t21510*t21541*t21353*t21542*t21525*t21534*t21543*t21508*t21526*t21535*t21536*t21456*(6.4E1/2.25E2) \
               -c0*kab1*rab1*t21510*t21353*t21452*t21525*t21508*t21526*t21518*t21456*t21519*t21484*t21498*(3.2E1/ \
               4.5E1)+c0*kab1*rab1*t21353*t21452*t21515*t21525*t21508*t21526*t21518*t21456*t21484*t21496*t21498*(6.4E1/ \
               4.5E1)-a3*c*c0*gamma_bb[index]*kab1*rab1*t21510*t21452*t21525*t21508*t21526*t21518*t21547*t21299*t21498* \
               (2.24E2/1.35E2)-c0*kab1*rab1*t21301*t21302*t21510*t21304*t21353*t21452*t21525*t21508*t21526*t21518* \
               t21456*t21549*t21498*(1.024E3/1.35E2))+t21525*t21526*t21554+t21525*t21526*t21537+t21570*t21553*t21586* \
               2.0+t21553*t21572*(t21562*t21554*2.0-t21537*t21574+c*c0*t21510*t21308*t21508*t21509*t21456*(3.2E1/ \
               2.7E1)+a3*c0*gamma_bb[index]*t21510*t21508*t21509*t21376*t21299*(2.24E2/9.0)-c*c0*t21300*t21515*t21524* \
               t21508*t21509*t21456*(1.6E1/3.0)+c*c0*t21300*t21508*t21509*t21456*t21528*t21529*1.6E1-c*c0*t21515* \
               t21328*t21508*t21509*t21456*t21496*(3.2E1/9.0)-a3*c0*gamma_bb[index]*t21332*t21515*t21508*t21509*t21496* \
               t21299*(2.24E2/9.0)+c*c0*t21301*t21302*t21510*t21304*t21508*t21509*t21456*t21379*(1.792E3/9.0)+c*c0* \
               t21510*t21361*t21362*t21533*t21508*t21509*t21456*t21378*(8.192E3/2.7E1)+a3*c0*gamma_bb[index]*t21301* \
               t21302*t21510*t21304*t21508*t21509*t21377*t21299*(3.584E3/2.7E1)-c*c0*t21301*t21302*t21304*t21515* \
               t21508*t21509*t21339*t21456*t21496*(1.024E3/9.0)-c0*kab1*rab1*t21510*t21353*t21452*t21354*t21508*t21518* \
               t21456*t21498*(1.28E2/4.5E1)+c*c0*kab1*rab1*t21510*t21353*t21452*t21508*t21535*t21518*t21456*t21367* \
               (6.4E1/6.75E2)+c*c0*kab1*t21510*t21353*t21452*t21534*t21508*t21535*t21518*t21536*t21456*(2.56E2/6.75E2) \
               +c*c0*t21510*t21541*t21353*t21542*t21534*t21543*t21508*t21535*t21536*t21456*(2.56E2/2.25E2)+c0*kab1* \
               rab1*t21353*t21452*t21515*t21508*t21518*t21456*t21484*t21496*t21498*(2.56E2/4.5E1)-a3*c*c0*gamma_bb[index]* \
               kab1*rab1*t21510*t21452*t21508*t21518*t21547*t21299*t21498*(8.96E2/1.35E2)-c0*kab1*rab1*t21301*t21302* \
               t21510*t21304*t21353*t21452*t21508*t21518*t21456*t21549*t21498*(4.096E3/1.35E2))-t21570*t21573*t21565* \
               t21579*2.0-t21572*t21573*t21586*t21579*2.0-t21572*t21573*t21565*(t21562*t21554*3.0-t21537*t21574*(3.0/ \
               2.0)+c*c0*t21510*t21308*t21508*t21509*t21456*(1.6E1/9.0)+a3*c0*gamma_bb[index]*t21510*t21508*t21509* \
               t21376*t21299*(1.12E2/3.0)-c*c0*t21300*t21515*t21524*t21508*t21509*t21456*8.0+c*c0*t21300*t21508*t21509* \
               t21456*t21528*t21529*2.4E1-c*c0*t21515*t21328*t21508*t21509*t21456*t21496*(1.6E1/3.0)-a3*c0*gamma_bb[index]* \
               t21332*t21515*t21508*t21509*t21496*t21299*(1.12E2/3.0)+c*c0*t21301*t21302*t21510*t21304*t21508*t21509* \
               t21456*t21379*(8.96E2/3.0)+c*c0*t21510*t21361*t21362*t21533*t21508*t21509*t21456*t21378*(4.096E3/9.0) \
               +a3*c0*gamma_bb[index]*t21301*t21302*t21510*t21304*t21508*t21509*t21377*t21299*(1.792E3/9.0)-c*c0* \
               t21301*t21302*t21304*t21515*t21508*t21509*t21339*t21456*t21496*(5.12E2/3.0)-c0*kab1*rab1*t21510*t21353* \
               t21452*t21354*t21508*t21518*t21456*t21498*(6.4E1/1.5E1)+c*c0*kab1*rab1*t21510*t21353*t21452*t21508* \
               t21535*t21518*t21456*t21367*(3.2E1/2.25E2)+c*c0*kab1*t21510*t21353*t21452*t21534*t21508*t21535*t21518* \
               t21536*t21456*(1.28E2/2.25E2)+c*c0*t21510*t21541*t21353*t21542*t21534*t21543*t21508*t21535*t21536* \
               t21456*(1.28E2/7.5E1)+c0*kab1*rab1*t21353*t21452*t21515*t21508*t21518*t21456*t21484*t21496*t21498* \
               (1.28E2/1.5E1)-a3*c*c0*gamma_bb[index]*kab1*rab1*t21510*t21452*t21508*t21518*t21547*t21299*t21498* \
               (4.48E2/4.5E1)-c0*kab1*rab1*t21301*t21302*t21510*t21304*t21353*t21452*t21508*t21518*t21456*t21549* \
               t21498*(2.048E3/4.5E1))+1/(t21552*t21552*t21552)*t21572*t21565*(t21579*t21579)*2.0+t21307*t21442*t21554* \
               t21590*t21438*t21587*t21588*t21589*(3.0/2.0)+t21307*t21442*t21590*t21438*t21537*t21587*t21588*t21589* \
               (3.0/2.0)-t21307*t21436*t21590*t21438*t21519*t21587*t21588*t21589*(1.0/2.0)+t21307*t21442*t21438*t21519* \
               t21459*t21496*t21587*t21588*t21589*3.0+kab1*rab1*t21513*t21452*t21454*t21590*t21438*t21519*t21587* \
               t21498*t21588*(4.0/5.0)-t21301*t21302*t21304*t21307*t21590*t21438*t21519*t21448*t21587*t21588*t21589* \
               1.6E1-a3*gamma_bb[index]*t21503*t21535*t21590*t21438*1/(t21456*t21456)*t21519*t21299*t21588*t21589* \
               (7.0/2.0))*(-1.0/2.0)+c0*t21502*t21613*t21599*(1.0/2.0)+c0*t21595*t21596*t21599*(1.0/2.0)+c0*t21501* \
               t21502*(t21525*t21526*t21519+t21570*t21553*t21565+t21553*t21572*t21586-t21572*t21573*t21565*t21579+ \
               t21307*t21442*t21590*t21438*t21519*t21587*t21588*t21589*(3.0/2.0)))-rho_b[index]*(c0*t21464*t21486* \
               (t21351*t21398*(-t21430*t21431*t21325+t21325*t21352*t21429*2.0-t21302*t21330*t21304*t21331*t21306* \
               t21432*(1.216E3/9.0)+t21331*t21360*t21361*t21433*t21362*t21346*(2.048E3/9.0)+c*c0*t21311*t21330*t21315* \
               t21324*t21308*(3.2E1/2.7E1)-t21302*t21330*t21304*t21306*t21352*t21363*t21359*(6.4E1/3.0)+a5*c0*gamma_bb[index]* \
               t21311*t21330*t21324*t21376*t21299*(2.24E2/9.0)-c*c0*t21300*t21311*t21330*t21315*t21373*t21338*(1.6E1/ \
               3.0)+c*c0*t21300*t21311*t21330*t21315*t21374*t21375*1.6E1+c*c0*t21311*t21330*t21315*t21328*t21337* \
               t21338*(3.2E1/9.0)+a5*c0*gamma_bb[index]*t21311*t21330*t21332*t21337*t21338*t21299*(2.24E2/9.0)+c* \
               c0*t21302*t21311*t21330*t21304*t21306*t21315*t21324*t21379*(1.792E3/9.0)-c*c0*t21302*t21311*t21304* \
               t21306*t21315*t21324*t21346*t21379*(1.792E3/9.0)+c*c0*t21311*t21330*t21315*t21324*t21360*t21361*t21362* \
               t21378*(8.192E3/2.7E1)-c*c0*t21311*t21315*t21324*t21360*t21361*t21362*t21346*t21378*(1.6384E4/2.7E1) \
               +c*c0*t21311*t21315*t21324*t21360*t21361*t21362*t21385*t21378*(4.096E3/9.0)+a5*c0*gamma_bb[index]* \
               t21302*t21311*t21330*t21304*t21306*t21324*t21377*t21299*(3.584E3/2.7E1)-a5*c0*gamma_bb[index]*t21302* \
               t21311*t21304*t21306*t21324*t21346*t21377*t21299*(3.584E3/2.7E1)+c*c0*t21302*t21311*t21330*t21304* \
               t21306*t21315*t21337*t21338*t21339*(1.024E3/9.0)-c*c0*t21302*t21311*t21304*t21306*t21315*t21337*t21346* \
               t21338*t21339*(1.024E3/9.0))+t21341*t21342*t21384+t21404*t21351*t21449*2.0+t21341*t21342*t21396+t21351* \
               t21408*(-t21443+t21390-t21444+t21391-t21445+t21392-t21446+t21384+t21393-t21447+t21394+t21386+t21395+ \
               t21387+t21388+t21389+t21513*t21380*(1.0/3.0)+(t21380*t21337*2.0)/t21323+t21302*t21304*t21306*t21380* \
               t21363*(3.2E1/3.0)-t21302*t21304*t21306*t21325*t21380*t21363*(3.2E1/3.0)+a5*gamma_bb[index]*t21307* \
               t21380*t21437*t21478*t21299*(7.0/3.0)+c*c0*t21311*t21330*t21341*t21315*t21324*t21342*t21308*(8.0/2.7E1) \
               +a5*c0*gamma_bb[index]*t21311*t21330*t21341*t21324*t21342*t21376*t21299*(5.6E1/9.0)+c*c0*t21300*t21311* \
               t21330*t21341*t21315*t21324*t21342*t21384*(2.0/3.0)+c*c0*t21300*t21311*t21330*t21341*t21315*t21324* \
               t21342*t21396*(2.0/3.0)-c*c0*t21300*t21311*t21330*t21341*t21315*t21342*t21373*t21338*(4.0/3.0)+c*c0* \
               t21300*t21311*t21330*t21341*t21315*t21342*t21374*t21375*4.0+c*c0*t21311*t21330*t21341*t21315*t21324* \
               t21342*t21380*t21328*(4.0/9.0)+c*c0*t21311*t21330*t21341*t21315*t21342*t21328*t21337*t21338*(8.0/9.0) \
               +a5*c0*gamma_bb[index]*t21311*t21330*t21332*t21341*t21324*t21342*t21380*t21299*(2.8E1/9.0)+a5*c0*gamma_bb[index]* \
               t21311*t21330*t21332*t21341*t21342*t21337*t21338*t21299*(5.6E1/9.0)+c*c0*t21300*t21311*t21330*t21341* \
               t21315*t21342*t21380*t21337*t21338*(8.0/3.0)+c*c0*t21302*t21311*t21330*t21304*t21341*t21306*t21315* \
               t21324*t21342*t21379*(4.48E2/9.0)-c*c0*t21302*t21311*t21304*t21341*t21306*t21315*t21324*t21342*t21346* \
               t21379*(4.48E2/9.0)+c*c0*t21311*t21330*t21341*t21315*t21324*t21342*t21360*t21361*t21362*t21378*(2.048E3/ \
               2.7E1)-c*c0*t21311*t21341*t21315*t21324*t21342*t21360*t21361*t21362*t21346*t21378*(4.096E3/2.7E1)+ \
               c*c0*t21311*t21341*t21315*t21324*t21342*t21360*t21361*t21362*t21385*t21378*(1.024E3/9.0)+a5*c0*gamma_bb[index]* \
               t21302*t21311*t21330*t21304*t21341*t21306*t21324*t21342*t21377*t21299*(8.96E2/2.7E1)-a5*c0*gamma_bb[index]* \
               t21302*t21311*t21304*t21341*t21306*t21324*t21342*t21346*t21377*t21299*(8.96E2/2.7E1)+c*c0*t21302*t21311* \
               t21330*t21304*t21341*t21306*t21315*t21324*t21342*t21380*t21339*(1.28E2/9.0)+c*c0*t21302*t21311*t21330* \
               t21304*t21341*t21306*t21315*t21342*t21337*t21338*t21339*(2.56E2/9.0)-c*c0*t21302*t21311*t21304*t21341* \
               t21306*t21315*t21324*t21342*t21380*t21346*t21339*(1.28E2/9.0)-c*c0*t21302*t21311*t21304*t21341*t21306* \
               t21315*t21342*t21337*t21346*t21338*t21339*(2.56E2/9.0))-t21405*t21408*t21398*(t21430*t21431*t21325* \
               (-3.0/2.0)+t21325*t21352*t21429*3.0-t21302*t21330*t21304*t21331*t21306*t21432*(6.08E2/3.0)+t21331* \
               t21360*t21361*t21433*t21362*t21346*(1.024E3/3.0)+c*c0*t21311*t21330*t21315*t21324*t21308*(1.6E1/9.0) \
               -t21302*t21330*t21304*t21306*t21352*t21363*t21359*3.2E1+a5*c0*gamma_bb[index]*t21311*t21330*t21324* \
               t21376*t21299*(1.12E2/3.0)-c*c0*t21300*t21311*t21330*t21315*t21373*t21338*8.0+c*c0*t21300*t21311*t21330* \
               t21315*t21374*t21375*2.4E1+c*c0*t21311*t21330*t21315*t21328*t21337*t21338*(1.6E1/3.0)+a5*c0*gamma_bb[index]* \
               t21311*t21330*t21332*t21337*t21338*t21299*(1.12E2/3.0)+c*c0*t21302*t21311*t21330*t21304*t21306*t21315* \
               t21324*t21379*(8.96E2/3.0)-c*c0*t21302*t21311*t21304*t21306*t21315*t21324*t21346*t21379*(8.96E2/3.0) \
               +c*c0*t21311*t21330*t21315*t21324*t21360*t21361*t21362*t21378*(4.096E3/9.0)-c*c0*t21311*t21315*t21324* \
               t21360*t21361*t21362*t21346*t21378*(8.192E3/9.0)+c*c0*t21311*t21315*t21324*t21360*t21361*t21362*t21385* \
               t21378*(2.048E3/3.0)+a5*c0*gamma_bb[index]*t21302*t21311*t21330*t21304*t21306*t21324*t21377*t21299* \
               (1.792E3/9.0)-a5*c0*gamma_bb[index]*t21302*t21311*t21304*t21306*t21324*t21346*t21377*t21299*(1.792E3/ \
               9.0)+c*c0*t21302*t21311*t21330*t21304*t21306*t21315*t21337*t21338*t21339*(5.12E2/3.0)-c*c0*t21302* \
               t21311*t21304*t21306*t21315*t21337*t21346*t21338*t21339*(5.12E2/3.0))-t21404*t21405*t21414*t21398* \
               2.0-t21405*t21414*t21408*t21449*2.0+1/(t21350*t21350*t21350)*(t21414*t21414)*t21408*t21398*2.0-t21440* \
               t21441*t21307*t21380*t21436*t21437*t21438*t21439*(1.0/2.0)+t21440*t21441*t21307*t21442*t21437*t21384* \
               t21438*t21439*(3.0/2.0)+t21440*t21441*t21307*t21442*t21437*t21438*t21439*t21396*(3.0/2.0)-t21323*t21440* \
               t21307*t21442*t21380*t21337*t21437*t21438*t21439*3.0+t21302*t21304*t21313*t21306*t21441*t21307*t21380* \
               t21437*t21438*t21439*t21448*1.6E1-t21302*t21304*t21440*t21306*t21441*t21307*t21380*t21437*t21438*t21439* \
               t21448*1.6E1-a5*gamma_bb[index]*t21440*t21503*1/(t21315*t21315)*t21441*t21380*t21535*t21438*t21439* \
               t21299*(7.0/2.0))*(-1.0/2.0)+c0*t21464*t21486*t21489*(t21353*t21354*t21463*(1.0E1/9.0)-t21353*t21480* \
               t21483*t21484*(8.0/3.0)+t21353*1/(t21462*t21462*t21462*t21462)*t21436*(t21483*t21483)*6.0-t21353*t21480* \
               t21436*(c*k2*t21308*(4.0/9.0)+c*k1*t21333*t21308*(2.0/9.0)-k1*t21353*t21354*t21369*(1.0/3.6E1))*2.0) \
               *(1.0/2.0)+c0*t21501*t21502*t21464*t21477+c0*t21502*t21613*t21464*t21489*(1.0/2.0)+c0*t21464*t21491* \
               t21477*t21486+c0*t21464*t21595*t21596*t21489*(1.0/2.0)-c0*t21464*(t21491*t21491)*t21486*t21489*(1.0/ \
               2.0)-c0*t21501*t21502*t21464*t21491*t21489)-c0*t21464*t21477*t21486+c0*t21501*t21502*t21464*t21489+ \
               c0*t21464*t21491*t21486*t21489;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t23021 = tspi_m13*tspi_m13;
            double t23022 = 1/pow(rho_b[index],1.0/3.0);
            double t23023 = a2*a2;
            double t23024 = gamma_bb[index]*gamma_bb[index];
            double t23025 = 1/pow(rho_b[index],1.6E1/3.0);
            double t23026 = t23021*t23021;
            double t23027 = c*t23022;
            double t23028 = a4*a4;
            double t23029 = t23024*t23025*t23026*t23028*2.0;
            double t23030 = exp(t23029);
            double t23031 = 1/c;
            double t23032 = 1/pow(rho_b[index],7.0/3.0);
            double t23033 = sqrt(t23027);
            double t23034 = t23024*t23025*t23026*t23028;
            double t23035 = t23034+1.0;
            double t23036 = 1/(t23035*t23035);
            double t23037 = a5*gamma_bb[index]*t23021*t23031*t23032;
            double t23038 = t23037+1.0;
            double t23049 = raa2*t23033;
            double t23039 = exp(-t23049);
            double t23040 = t23039-1.0;
            double t23041 = kaa2*t23040;
            double t23042 = pow(t23027,2.0/5.0);
            double t23050 = raa1*t23042;
            double t23043 = exp(-t23050);
            double t23044 = t23043-1.0;
            double t23045 = kaa1*t23044;
            double t23046 = -kaa0+t23041+t23045;
            double t23047 = 1/(t23046*t23046);
            double t23048 = c*c0*t23030*t23022*t23036*t23038*t23047*(2.0/3.0);
            double t23051 = 1/t23035;
            double t23052 = 1/pow(rho_b[index],4.0/3.0);
            double t23053 = c*c0*t23030*t23022*t23038*t23047*(2.0/3.0);
            double t23054 = sqrt(t23053);
            double t23055 = 1/pow(rho_b[index],1.1E1/3.0);
            double t23056 = 1/sqrt(t23027);
            double t23057 = c*kaa2*raa2*t23052*t23056*t23039*(1.0/6.0);
            double t23058 = 1/pow(t23027,3.0/5.0);
            double t23059 = c*kaa1*raa1*t23043*t23052*t23058*(2.0/1.5E1);
            double t23060 = t23057+t23059;
            double t23061 = 1/(t23046*t23046*t23046);
            double t23062 = 1/pow(rho_b[index],2.0E1/3.0);
            double t23063 = exp(t23048);
            double t23064 = Ei(-t23048);
            double t23065 = 1/(t23035*t23035*t23035);
            double t23066 = t23051*t23054*6.0;
            double t23067 = c*c0*t23030*t23022*t23036*t23038*t23047*4.0;
            double t23068 = t23066+t23067+3.0;
            double t23069 = 1/t23068;
            double t23070 = c*c0*t23030*t23052*t23036*t23038*t23047*(2.0/9.0);
            double t23071 = a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23055*t23047*(1.4E1/9.0);
            double t23072 = c*c0*t23030*t23022*t23060*t23061*t23036*t23038*(4.0/3.0);
            double t23073 = c*c0*t23030*t23024*t23026*t23062*t23036*t23028*t23038*t23047*(6.4E1/9.0);
            double t23075 = c*c0*t23030*t23024*t23026*t23062*t23028*t23038*t23047*t23065*(6.4E1/9.0);
            double t23074 = t23070+t23071+t23072+t23073-t23075;
            double t23076 = c*c0*t23030*t23022*t23036*t23063*t23064*t23038*t23047*(2.0/3.0);
            double t23077 = t23076+1.0;
            double t23078 = t23051*t23054*4.0;
            double t23079 = c*c0*t23030*t23022*t23036*t23038*t23047*(8.0/3.0);
            double t23080 = t23078+t23079+6.0;
            double t23081 = c*c0*t23030*t23052*t23038*t23047*(2.0/9.0);
            double t23082 = a5*c0*gamma_bb[index]*t23021*t23030*t23055*t23047*(1.4E1/9.0);
            double t23083 = c*c0*t23030*t23022*t23060*t23061*t23038*(4.0/3.0);
            double t23084 = c*c0*t23030*t23024*t23026*t23062*t23028*t23038*t23047*(6.4E1/9.0);
            double t23085 = t23081+t23082+t23083+t23084;
            double t23086 = 1/sqrt(t23053);
            double t23087 = 1/pow(rho_b[index],1.9E1/3.0);
            double t23088 = t23023*t23024*t23025*t23026;
            double t23089 = pow(t23027,4.0/5.0);
            double t23107 = rab1*t23089;
            double t23090 = exp(-t23107);
            double t23091 = t23090-1.0;
            double t23108 = kab1*t23091;
            double t23092 = kab0-t23108;
            double t23093 = a3*gamma_bb[index]*t23021*t23031*t23032;
            double t23094 = t23093+1.0;
            double t23095 = 1/sqrt(t23094);
            double t23096 = 1/pow(rho_b[index],8.0/3.0);
            double t23097 = a1*gamma_bb[index]*t23021*t23096;
            double t23098 = t23088+t23097+1.0;
            double t23099 = c*c;
            double t23100 = 1/pow(rho_b[index],2.0/3.0);
            double t23101 = k1*t23033;
            double t23102 = c*k2*t23022;
            double t23103 = t23101+t23102;
            double t23104 = 1/(t23103*t23103);
            double t23110 = t23100*t23104*t23099;
            double t23105 = exp(-t23110);
            double t23106 = exp(-t23088);
            double t23109 = c*c0*t23022*(2.0/3.0);
            double t23111 = t23051*t23085*t23086*2.0;
            double t23112 = c*c0*t23030*t23052*t23036*t23038*t23047*(8.0/9.0);
            double t23113 = a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23055*t23047*(5.6E1/9.0);
            double t23114 = c*c0*t23030*t23022*t23060*t23061*t23036*t23038*(1.6E1/3.0);
            double t23115 = c*c0*t23030*t23024*t23026*t23062*t23036*t23028*t23038*t23047*(2.56E2/9.0);
            double t23166 = t23024*t23026*t23036*t23054*t23028*t23087*(6.4E1/3.0);
            double t23167 = c*c0*t23030*t23024*t23026*t23062*t23028*t23038*t23047*t23065*(2.56E2/9.0);
            double t23116 = t23111+t23112+t23113+t23114+t23115-t23166-t23167;
            double t23117 = c*c0*t23030*t23052*t23036*t23063*t23064*t23038*t23047*(2.0/9.0);
            double t23118 = c*c0*t23030*t23022*t23060*t23061*t23036*t23063*t23064*t23038*(4.0/3.0);
            double t23119 = c*c0*t23030*t23022*t23036*t23063*t23064*t23038*t23047*t23074*(2.0/3.0);
            double t23120 = a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23063*t23055*t23064*t23047*(1.4E1/9.0) \
               ;
            double t23121 = c*c0*t23030*t23024*t23026*t23062*t23036*t23063*t23028*t23064*t23038*t23047*(6.4E1/ \
               9.0);
            double t23170 = c*c0*t23030*t23024*t23026*t23062*t23063*t23028*t23064*t23038*t23047*t23065*(6.4E1/ \
               9.0);
            double t23122 = t23120+t23121+t23070+t23071-t23170+t23072+t23117+t23073+t23118+t23119-t23075;
            double t23123 = t23028*t23028;
            double t23124 = t23024*t23024;
            double t23125 = t23026*t23026;
            double t23126 = raa2*raa2;
            double t23127 = c*kaa2*t23032*t23126*t23039*(1.0/3.6E1);
            double t23128 = raa1*raa1;
            double t23129 = 1/pow(t23027,6.0/5.0);
            double t23130 = kaa1*t23043*t23128*t23129*t23096*t23099*(4.0/2.25E2);
            double t23131 = 1/pow(t23027,3.0/2.0);
            double t23132 = kaa2*raa2*t23131*t23039*t23096*t23099*(1.0/3.6E1);
            double t23133 = 1/pow(t23027,8.0/5.0);
            double t23134 = kaa1*raa1*t23043*t23133*t23096*t23099*(2.0/7.5E1);
            double t23144 = c*kaa2*raa2*t23032*t23056*t23039*(2.0/9.0);
            double t23145 = c*kaa1*raa1*t23032*t23043*t23058*(8.0/4.5E1);
            double t23135 = t23130+t23132+t23134-t23144+t23127-t23145;
            double t23136 = t23060*t23060;
            double t23137 = 1/(t23046*t23046*t23046*t23046);
            double t23138 = 1/pow(rho_b[index],1.4E1/3.0);
            double t23139 = 1/pow(rho_b[index],1.0E1);
            double t23140 = 1/pow(rho_b[index],1.3E1);
            double t23141 = 1/pow(rho_b[index],2.3E1/3.0);
            double t23142 = 1/pow(rho_b[index],1.0E1/3.0);
            double t23143 = 1/t23038;
            double t23146 = t23074*t23074;
            double t23147 = 1/(t23035*t23035*t23035*t23035);
            double t23148 = c*c0*t23030*t23032*t23036*t23038*t23047*(8.0/2.7E1);
            double t23149 = c*c0*t23030*t23022*t23036*t23136*t23038*t23137*4.0;
            double t23150 = a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23047*t23138*(5.6E1/9.0);
            double t23151 = c*c0*t23030*t23060*t23052*t23061*t23036*t23038*(8.0/9.0);
            double t23152 = a5*c0*gamma_bb[index]*t23021*t23030*t23060*t23061*t23036*t23055*(5.6E1/9.0);
            double t23153 = a5*c0*gamma_bb[index]*t23021*t23030*t23024*t23026*t23036*t23028*t23047*t23139*(8.96E2/ \
               2.7E1);
            double t23154 = c*c0*t23030*t23140*t23123*t23124*t23125*t23036*t23038*t23047*(2.048E3/2.7E1);
            double t23155 = c*c0*t23030*t23140*t23123*t23124*t23125*t23038*t23047*t23147*(1.024E3/9.0);
            double t23156 = c*c0*t23030*t23024*t23141*t23026*t23036*t23028*t23038*t23047*(4.48E2/9.0);
            double t23157 = c*c0*t23030*t23024*t23060*t23061*t23026*t23062*t23036*t23028*t23038*(2.56E2/9.0);
            double t23190 = c*c0*t23030*t23022*t23061*t23036*t23135*t23038*(4.0/3.0);
            double t23191 = a5*c0*gamma_bb[index]*t23021*t23030*t23024*t23026*t23028*t23047*t23065*t23139*(8.96E2/ \
               2.7E1);
            double t23192 = c*c0*t23030*t23140*t23123*t23124*t23125*t23038*t23047*t23065*(4.096E3/2.7E1);
            double t23193 = c*c0*t23030*t23024*t23141*t23026*t23028*t23038*t23047*t23065*(4.48E2/9.0);
            double t23194 = c*c0*t23030*t23024*t23060*t23061*t23026*t23062*t23028*t23038*t23065*(2.56E2/9.0);
            double t23158 = t23150+t23151+t23152+t23153+t23154-t23190+t23155-t23191+t23156-t23192+t23148+t23157- \
               t23193+t23149-t23194;
            double t23159 = 1/(t23068*t23068);
            double t23160 = t23051*t23085*t23086*3.0;
            double t23161 = c*c0*t23030*t23052*t23036*t23038*t23047*(4.0/3.0);
            double t23162 = a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23055*t23047*(2.8E1/3.0);
            double t23163 = c*c0*t23030*t23022*t23060*t23061*t23036*t23038*8.0;
            double t23164 = c*c0*t23030*t23024*t23026*t23062*t23036*t23028*t23038*t23047*(1.28E2/3.0);
            double t23168 = t23024*t23026*t23036*t23054*t23028*t23087*3.2E1;
            double t23169 = c*c0*t23030*t23024*t23026*t23062*t23028*t23038*t23047*t23065*(1.28E2/3.0);
            double t23165 = t23160+t23161+t23162+t23163+t23164-t23168-t23169;
            double t23171 = c*c0*t23030*t23032*t23038*t23047*(8.0/2.7E1);
            double t23172 = a5*c0*gamma_bb[index]*t23021*t23030*t23047*t23138*(5.6E1/9.0);
            double t23173 = c*c0*t23030*t23060*t23052*t23061*t23038*(8.0/9.0);
            double t23174 = c*c0*t23030*t23022*t23136*t23038*t23137*4.0;
            double t23175 = a5*c0*gamma_bb[index]*t23021*t23030*t23024*t23026*t23028*t23047*t23139*(8.96E2/2.7E1) \
               ;
            double t23176 = a5*c0*gamma_bb[index]*t23021*t23030*t23060*t23061*t23055*(5.6E1/9.0);
            double t23177 = c*c0*t23030*t23140*t23123*t23124*t23125*t23038*t23047*(2.048E3/2.7E1);
            double t23178 = c*c0*t23030*t23024*t23141*t23026*t23028*t23038*t23047*(4.48E2/9.0);
            double t23179 = c*c0*t23030*t23024*t23060*t23061*t23026*t23062*t23028*t23038*(2.56E2/9.0);
            double t23180 = t23171+t23172+t23173+t23174+t23175+t23176+t23177+t23178+t23179-c*c0*t23030*t23022* \
               t23061*t23135*t23038*(4.0/3.0);
            double t23181 = t23085*t23085;
            double t23182 = 1/pow(t23053,3.0/2.0);
            double t23183 = 1/pow(rho_b[index],2.2E1/3.0);
            double t23184 = 1/pow(rho_b[index],3.8E1/3.0);
            double t23185 = 1/c0;
            double t23186 = exp(-t23029);
            double t23187 = t23035*t23035;
            double t23188 = t23046*t23046;
            double t23189 = pow(rho_b[index],1.0/3.0);
            double t23195 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]) \
               ;
            double t23196 = t23106*t23092*t23095*t23098*1.0E5;
            double t23197 = -t23109+t23196;
            double t23198 = ( (t23197 > 0.0) ?  1.0 : 0.0 ) ;
            double t23199 = t23063*t23064;
            double t23200 = t23080*t23077*t23069;
            double t23201 = t23200+t23199;
            double t23202 = t23023*t23024*t23026*t23087*(1.6E1/3.0);
            double t23203 = a1*gamma_bb[index]*t23021*t23055*(8.0/3.0);
            double t23204 = t23202+t23203;
            double t23205 = 1/(c*c);
            double t23206 = 1/pow(t23027,1.0/5.0);
            double t23207 = 1/pow(t23094,3.0/2.0);
            double t23208 = 1/pow(rho_b[index],5.0/3.0);
            double t23209 = t23104*t23208*t23099*(2.0/3.0);
            double t23210 = 1/(t23103*t23103*t23103);
            double t23211 = c*k2*t23052*(1.0/3.0);
            double t23212 = c*k1*t23052*t23056*(1.0/6.0);
            double t23213 = t23211+t23212;
            double t23227 = t23100*t23210*t23213*t23099*2.0;
            double t23214 = t23209-t23227;
            double t23215 = t23116*t23077*t23069;
            double t23216 = t23063*t23064*t23074;
            double t23217 = t23122*t23080*t23069;
            double t23218 = t23031*t23143*t23074*t23185*t23186*t23187*t23188*t23189*(3.0/2.0);
            double t23222 = t23080*t23165*t23077*t23159;
            double t23219 = -t23222+t23215+t23216+t23217+t23218;
            double t23220 = t23109-t23196;
            double t23221 = 0.0 ;
            double t23223 = c*c0*t23052*(2.0/9.0);
            double t23224 = t23023*t23024*t23106*t23026*t23092*t23095*t23087*t23098*(1.6E6/3.0);
            double t23225 = a3*gamma_bb[index]*t23021*t23031*t23106*t23142*t23207*t23092*t23098*(3.5E5/3.0);
            double t23228 = t23204*t23106*t23092*t23095*1.0E5;
            double t23229 = c*kab1*rab1*t23052*t23106*t23206*t23090*t23095*t23098*(8.0E4/3.0);
            double t23226 = t23223+t23224+t23225-t23228-t23229;
            v_rho_b_rho_b_[index] = - ( (c*c0*t23022*(-2.0/3.0)+t23092*t23095*t23098*exp(-t23023*t23024*t23025* \
               t23026)*1.0E5 > 0.0) ? c0*t23105*t23219*1.0 : 0.0 ) + 0.0 +c0*t23201*t23105*t23214*t23198+c0*rho_b[index]* \
               t23105*t23198*(t23077*t23069*(-t23051*t23181*t23182+t23051*t23180*t23086*2.0-t23024*t23026*t23036* \
               t23054*t23028*t23183*(1.216E3/9.0)+t23123*t23124*t23125*t23054*t23065*t23184*(2.048E3/9.0)+c*c0*t23030* \
               t23032*t23036*t23038*t23047*(3.2E1/2.7E1)-t23024*t23026*t23036*t23028*t23085*t23086*t23087*(6.4E1/ \
               3.0)+a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23047*t23138*(2.24E2/9.0)-c*c0*t23030*t23022*t23061* \
               t23036*t23135*t23038*(1.6E1/3.0)+c*c0*t23030*t23060*t23052*t23061*t23036*t23038*(3.2E1/9.0)+c*c0*t23030* \
               t23022*t23036*t23136*t23038*t23137*1.6E1+a5*c0*gamma_bb[index]*t23021*t23030*t23060*t23061*t23036* \
               t23055*(2.24E2/9.0)+c*c0*t23030*t23140*t23123*t23124*t23125*t23036*t23038*t23047*(8.192E3/2.7E1)-c* \
               c0*t23030*t23140*t23123*t23124*t23125*t23038*t23047*t23065*(1.6384E4/2.7E1)+c*c0*t23030*t23140*t23123* \
               t23124*t23125*t23038*t23047*t23147*(4.096E3/9.0)+c*c0*t23030*t23024*t23141*t23026*t23036*t23028*t23038* \
               t23047*(1.792E3/9.0)-c*c0*t23030*t23024*t23141*t23026*t23028*t23038*t23047*t23065*(1.792E3/9.0)+a5* \
               c0*gamma_bb[index]*t23021*t23030*t23024*t23026*t23036*t23028*t23047*t23139*(3.584E3/2.7E1)-a5*c0*gamma_bb[index]* \
               t23021*t23030*t23024*t23026*t23028*t23047*t23065*t23139*(3.584E3/2.7E1)+c*c0*t23030*t23024*t23060* \
               t23061*t23026*t23062*t23036*t23028*t23038*(1.024E3/9.0)-c*c0*t23030*t23024*t23060*t23061*t23026*t23062* \
               t23028*t23038*t23065*(1.024E3/9.0))+t23122*t23116*t23069*2.0+t23063*t23064*t23146+t23063*t23064*t23158+ \
               t23080*t23069*(t23150+t23151+t23152+t23153+t23154+t23146+t23155+t23156+t23148+t23157+t23149+(t23074* \
               (1.0/3.0))/rho_b[index]+(t23060*t23074*2.0)/t23046+t23024*t23026*t23028*t23074*t23087*(3.2E1/3.0)- \
               t23024*t23051*t23026*t23028*t23074*t23087*(3.2E1/3.0)+a5*gamma_bb[index]*t23021*t23031*t23142*t23143* \
               t23074*(7.0/3.0)-c*c0*t23030*t23022*t23061*t23036*t23135*t23038*(4.0/3.0)+c*c0*t23030*t23032*t23036* \
               t23063*t23064*t23038*t23047*(8.0/2.7E1)+a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23063*t23064*t23047* \
               t23138*(5.6E1/9.0)-c*c0*t23030*t23022*t23061*t23036*t23063*t23135*t23064*t23038*(4.0/3.0)-c*c0*t23030* \
               t23140*t23123*t23124*t23125*t23038*t23047*t23065*(4.096E3/2.7E1)+c*c0*t23030*t23060*t23052*t23061* \
               t23036*t23063*t23064*t23038*(8.0/9.0)-c*c0*t23030*t23024*t23141*t23026*t23028*t23038*t23047*t23065* \
               (4.48E2/9.0)+c*c0*t23030*t23022*t23036*t23063*t23064*t23136*t23038*t23137*4.0+c*c0*t23030*t23022*t23036* \
               t23063*t23064*t23038*t23047*t23146*(2.0/3.0)+c*c0*t23030*t23022*t23036*t23063*t23064*t23038*t23047* \
               t23158*(2.0/3.0)+c*c0*t23030*t23052*t23036*t23063*t23064*t23038*t23047*t23074*(4.0/9.0)+a5*c0*gamma_bb[index]* \
               t23021*t23030*t23060*t23061*t23036*t23063*t23055*t23064*(5.6E1/9.0)-a5*c0*gamma_bb[index]*t23021*t23030* \
               t23024*t23026*t23028*t23047*t23065*t23139*(8.96E2/2.7E1)+a5*c0*gamma_bb[index]*t23021*t23030*t23036* \
               t23063*t23055*t23064*t23047*t23074*(2.8E1/9.0)+c*c0*t23030*t23022*t23060*t23061*t23036*t23063*t23064* \
               t23038*t23074*(8.0/3.0)-c*c0*t23030*t23024*t23060*t23061*t23026*t23062*t23028*t23038*t23065*(2.56E2/ \
               9.0)+c*c0*t23030*t23140*t23123*t23124*t23125*t23036*t23063*t23064*t23038*t23047*(2.048E3/2.7E1)-c* \
               c0*t23030*t23140*t23123*t23124*t23125*t23063*t23064*t23038*t23047*t23065*(4.096E3/2.7E1)+c*c0*t23030* \
               t23140*t23123*t23124*t23125*t23063*t23064*t23038*t23047*t23147*(1.024E3/9.0)+c*c0*t23030*t23024*t23141* \
               t23026*t23036*t23063*t23028*t23064*t23038*t23047*(4.48E2/9.0)-c*c0*t23030*t23024*t23141*t23026*t23063* \
               t23028*t23064*t23038*t23047*t23065*(4.48E2/9.0)+a5*c0*gamma_bb[index]*t23021*t23030*t23024*t23026* \
               t23036*t23063*t23028*t23064*t23047*t23139*(8.96E2/2.7E1)-a5*c0*gamma_bb[index]*t23021*t23030*t23024* \
               t23026*t23063*t23028*t23064*t23047*t23065*t23139*(8.96E2/2.7E1)+c*c0*t23030*t23024*t23060*t23061*t23026* \
               t23062*t23036*t23063*t23028*t23064*t23038*(2.56E2/9.0)-c*c0*t23030*t23024*t23060*t23061*t23026*t23062* \
               t23063*t23028*t23064*t23038*t23065*(2.56E2/9.0)+c*c0*t23030*t23024*t23026*t23062*t23036*t23063*t23028* \
               t23064*t23038*t23047*t23074*(1.28E2/9.0)-c*c0*t23030*t23024*t23026*t23062*t23063*t23028*t23064*t23038* \
               t23047*t23065*t23074*(1.28E2/9.0))-t23080*t23077*t23159*(t23051*t23181*t23182*(-3.0/2.0)+t23051*t23180* \
               t23086*3.0-t23024*t23026*t23036*t23054*t23028*t23183*(6.08E2/3.0)+t23123*t23124*t23125*t23054*t23065* \
               t23184*(1.024E3/3.0)+c*c0*t23030*t23032*t23036*t23038*t23047*(1.6E1/9.0)-t23024*t23026*t23036*t23028* \
               t23085*t23086*t23087*3.2E1+a5*c0*gamma_bb[index]*t23021*t23030*t23036*t23047*t23138*(1.12E2/3.0)-c* \
               c0*t23030*t23022*t23061*t23036*t23135*t23038*8.0+c*c0*t23030*t23060*t23052*t23061*t23036*t23038*(1.6E1/ \
               3.0)+c*c0*t23030*t23022*t23036*t23136*t23038*t23137*2.4E1+a5*c0*gamma_bb[index]*t23021*t23030*t23060* \
               t23061*t23036*t23055*(1.12E2/3.0)+c*c0*t23030*t23140*t23123*t23124*t23125*t23036*t23038*t23047*(4.096E3/ \
               9.0)-c*c0*t23030*t23140*t23123*t23124*t23125*t23038*t23047*t23065*(8.192E3/9.0)+c*c0*t23030*t23140* \
               t23123*t23124*t23125*t23038*t23047*t23147*(2.048E3/3.0)+c*c0*t23030*t23024*t23141*t23026*t23036*t23028* \
               t23038*t23047*(8.96E2/3.0)-c*c0*t23030*t23024*t23141*t23026*t23028*t23038*t23047*t23065*(8.96E2/3.0) \
               +a5*c0*gamma_bb[index]*t23021*t23030*t23024*t23026*t23036*t23028*t23047*t23139*(1.792E3/9.0)-a5*c0* \
               gamma_bb[index]*t23021*t23030*t23024*t23026*t23028*t23047*t23065*t23139*(1.792E3/9.0)+c*c0*t23030* \
               t23024*t23060*t23061*t23026*t23062*t23036*t23028*t23038*(5.12E2/3.0)-c*c0*t23030*t23024*t23060*t23061* \
               t23026*t23062*t23028*t23038*t23065*(5.12E2/3.0))-t23122*t23080*t23165*t23159*2.0-t23116*t23165*t23077* \
               t23159*2.0+t23080*(t23165*t23165)*1/(t23068*t23068*t23068)*t23077*2.0-t23100*t23031*t23143*t23074* \
               t23185*t23186*t23187*t23188*(1.0/2.0)+t23031*t23143*t23146*t23185*t23186*t23187*t23188*t23189*(3.0/ \
               2.0)+t23031*t23143*t23158*t23185*t23186*t23187*t23188*t23189*(3.0/2.0)-t23031*t23060*t23143*t23046* \
               t23074*t23185*t23186*t23187*t23189*3.0+t23031*t23024*t23026*t23035*t23143*t23028*t23074*t23185*t23186* \
               t23195*t23188*1.6E1-t23031*t23024*t23026*t23143*t23028*t23074*t23185*t23186*t23195*t23187*t23188*1.6E1- \
               a5*gamma_bb[index]*1/(rho_b[index]*rho_b[index]*rho_b[index])*t23021*t23205*1/(t23038*t23038)*t23074* \
               t23185*t23186*t23187*t23188*(7.0/2.0))*(1.0/2.0)-c0*rho_b[index]*t23221*t23105*t23226*t23219-c0*rho_b[index]* \
               t23105*t23214*t23219*t23198+c0*rho_b[index]*t23201*t23105*(t23214*t23214)*t23198*(1.0/2.0)-c0*rho_b[index]* \
               t23201*t23221*t23105*(c*c0*t23032*(8.0/2.7E1)-t23106*t23092*t23095*(a1*gamma_bb[index]*t23021*t23138* \
               (8.8E1/9.0)+t23023*t23024*t23026*t23183*(3.04E2/9.0))*1.0E5+t23023*t23024*t23204*t23106*t23026*t23092* \
               t23095*t23087*(3.2E6/3.0)+t23023*t23024*t23106*t23026*t23092*t23183*t23095*t23098*(3.04E7/9.0)-(t23023* \
               t23023)*t23106*t23124*t23125*t23092*t23184*t23095*t23098*(2.56E7/9.0)-(a3*a3)*t23024*t23106*t23205* \
               t23026*t23062*t23092*1/pow(t23094,5.0/2.0)*t23098*(1.225E6/3.0)+kab1*(rab1*rab1)*t23106*1/pow(t23027,2.0/ \
               5.0)*t23090*t23095*t23096*t23098*t23099*(6.4E4/9.0)+a3*gamma_bb[index]*t23021*t23031*t23204*t23106* \
               t23142*t23207*t23092*(7.0E5/3.0)-c*kab1*rab1*t23204*t23052*t23106*t23206*t23090*t23095*(1.6E5/3.0) \
               -c*kab1*rab1*t23032*t23106*t23206*t23090*t23095*t23098*(3.2E5/9.0)+kab1*rab1*t23106*t23090*t23129* \
               t23095*t23096*t23098*t23099*(1.6E4/9.0)+a3*gamma_bb[index]*1/pow(rho_b[index],1.3E1/3.0)*t23021*t23031* \
               t23106*t23207*t23092*t23098*(3.5E6/9.0)+a3*gamma_bb[index]*kab1*rab1*t23021*t23106*t23206*t23090*t23207* \
               t23138*t23098*(5.6E5/9.0)-a3*gamma_bb[index]*1/pow(rho_b[index],2.9E1/3.0)*t23021*t23031*t23023*t23024* \
               t23106*t23026*t23207*t23092*t23098*(1.12E7/9.0)+c*kab1*rab1*t23023*t23024*t23141*t23106*t23026*t23206* \
               t23090*t23095*t23098*(2.56E6/9.0))*(1.0/2.0)-c0*rho_b[index]*t23201*t23105*t23198*(t23104*t23096*t23099* \
               (1.0E1/9.0)-t23210*t23213*t23208*t23099*(8.0/3.0)+t23100*1/(t23103*t23103*t23103*t23103)*(t23213*t23213) \
               *t23099*6.0-t23100*t23210*t23099*(c*k2*t23032*(4.0/9.0)+c*k1*t23032*t23056*(2.0/9.0)-k1*t23131*t23096* \
               t23099*(1.0/3.6E1))*2.0)*(1.0/2.0)- 0.0 +c0*rho_b[index]*t23201*t23221*t23105*t23214*t23226;
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t21616 = tspi_m13*tspi_m13;
                double t21617 = 1/pow(rho_a[index],1.0/3.0);
                double t21618 = a2*a2;
                double t21619 = gamma_aa[index]*gamma_aa[index];
                double t21620 = 1/pow(rho_a[index],1.6E1/3.0);
                double t21621 = t21616*t21616;
                double t21622 = c*t21617;
                double t21623 = a4*a4;
                double t21624 = 1/c;
                double t21625 = 1/pow(rho_a[index],7.0/3.0);
                double t21626 = sqrt(t21622);
                double t21627 = t21620*t21621*t21623*t21619*2.0;
                double t21628 = exp(t21627);
                double t21629 = t21620*t21621*t21623*t21619;
                double t21630 = t21629+1.0;
                double t21631 = 1/(t21630*t21630);
                double t21632 = a5*gamma_aa[index]*t21624*t21616*t21625;
                double t21633 = t21632+1.0;
                double t21644 = raa2*t21626;
                double t21634 = exp(-t21644);
                double t21635 = t21634-1.0;
                double t21636 = kaa2*t21635;
                double t21637 = pow(t21622,2.0/5.0);
                double t21645 = raa1*t21637;
                double t21638 = exp(-t21645);
                double t21639 = t21638-1.0;
                double t21640 = kaa1*t21639;
                double t21641 = -kaa0+t21640+t21636;
                double t21642 = 1/(t21641*t21641);
                double t21643 = c*c0*t21631*t21633*t21642*t21617*t21628*(2.0/3.0);
                double t21646 = 1/pow(rho_a[index],8.0/3.0);
                double t21647 = 1/pow(rho_a[index],4.0/3.0);
                double t21648 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t21649 = 1/pow(rho_a[index],2.0E1/3.0);
                double t21650 = 1/(t21630*t21630*t21630);
                double t21651 = t21623*t21623;
                double t21652 = 1/pow(rho_a[index],1.2E1);
                double t21653 = t21621*t21621;
                double t21654 = 1/sqrt(t21622);
                double t21655 = c*kaa2*raa2*t21634*t21654*t21647*(1.0/6.0);
                double t21656 = 1/pow(t21622,3.0/5.0);
                double t21657 = c*kaa1*raa1*t21638*t21647*t21656*(2.0/1.5E1);
                double t21658 = t21655+t21657;
                double t21659 = 1/(t21641*t21641*t21641);
                double t21660 = 1/pow(rho_a[index],1.7E1/3.0);
                double t21661 = 1/t21630;
                double t21662 = c*c0*t21633*t21642*t21617*t21628*(2.0/3.0);
                double t21663 = sqrt(t21662);
                double t21664 = 1/pow(rho_a[index],1.1E1/3.0);
                double t21665 = exp(t21643);
                double t21666 = Ei(-t21643);
                double t21667 = c*c0*t21631*t21633*t21642*t21628*t21647*(2.0/9.0);
                double t21668 = a5*c0*gamma_aa[index]*t21631*t21642*t21616*t21628*t21664*(1.4E1/9.0);
                double t21669 = c*c0*t21631*t21633*t21617*t21628*t21658*t21659*(4.0/3.0);
                double t21670 = c*c0*t21621*t21631*t21623*t21633*t21642*t21619*t21628*t21649*(6.4E1/9.0);
                double t21671 = t21661*t21663*6.0;
                double t21672 = c*c0*t21631*t21633*t21642*t21617*t21628*4.0;
                double t21673 = t21671+t21672+3.0;
                double t21674 = 1/t21673;
                double t21675 = a5*c0*t21631*t21642*t21616*t21628*t21646*(2.0/3.0);
                double t21676 = c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21660*t21628*(8.0/3.0);
                double t21677 = 1/sqrt(t21662);
                double t21680 = c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21642*t21660*t21628*(8.0/3.0);
                double t21678 = -t21680+t21675+t21676;
                double t21691 = c*c0*t21621*t21623*t21650*t21633*t21642*t21619*t21628*t21649*(6.4E1/9.0);
                double t21679 = t21670-t21691+t21667+t21668+t21669;
                double t21681 = 1/pow(rho_a[index],1.9E1/3.0);
                double t21682 = a5*c0*t21631*t21642*t21616*t21628*t21664*(1.6E1/9.0);
                double t21683 = a5*c0*t21631*t21616*t21628*t21646*t21658*t21659*(4.0/3.0);
                double t21684 = a5*c0*t21621*t21631*t21623*t21642*t21616*t21619*t21628*t21648*(4.0E1/3.0);
                double t21685 = c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21628*t21649*(1.36E2/9.0) \
                   ;
                double t21686 = c*c0*gamma_aa[index]*t21631*t21633*t21642*t21651*t21652*t21653*t21619*t21628*(2.56E2/ \
                   9.0);
                double t21687 = 1/(t21630*t21630*t21630*t21630);
                double t21688 = c*c0*gamma_aa[index]*t21633*t21642*t21651*t21652*t21653*t21619*t21628*t21687*(1.28E2/ \
                   3.0);
                double t21689 = c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21660*t21628*t21658*t21659*(1.6E1/ \
                   3.0);
                double t21692 = c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21642*t21628*t21649*(1.36E2/9.0) \
                   ;
                double t21693 = c*c0*gamma_aa[index]*t21650*t21633*t21642*t21651*t21652*t21653*t21619*t21628*(5.12E2/ \
                   9.0);
                double t21694 = c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21660*t21628*t21658*t21659*(1.6E1/ \
                   3.0);
                double t21751 = a5*c0*t21621*t21623*t21650*t21642*t21616*t21619*t21628*t21648*(4.0E1/3.0);
                double t21690 = -t21751+t21682+t21683-t21692+t21684-t21693+t21685-t21694+t21686+t21688+t21689;
                double t21695 = a5*c0*t21642*t21616*t21628*t21646*(2.0/3.0);
                double t21696 = c*c0*gamma_aa[index]*t21621*t21623*t21633*t21642*t21660*t21628*(8.0/3.0);
                double t21697 = t21695+t21696;
                double t21698 = c*c0*t21633*t21642*t21628*t21647*(2.0/9.0);
                double t21699 = a5*c0*gamma_aa[index]*t21642*t21616*t21628*t21664*(1.4E1/9.0);
                double t21700 = c*c0*t21633*t21617*t21628*t21658*t21659*(4.0/3.0);
                double t21701 = c*c0*t21621*t21623*t21633*t21642*t21619*t21628*t21649*(6.4E1/9.0);
                double t21702 = t21700+t21701+t21698+t21699;
                double t21703 = t21661*t21663*4.0;
                double t21704 = c*c0*t21631*t21633*t21642*t21617*t21628*(8.0/3.0);
                double t21705 = t21703+t21704+6.0;
                double t21706 = a5*c0*t21631*t21642*t21616*t21628*t21646*t21665*t21666*(2.0/3.0);
                double t21707 = c*c0*t21631*t21633*t21642*t21617*t21628*t21665*t21666*t21678*(2.0/3.0);
                double t21708 = c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21660*t21628*t21665*t21666* \
                   (8.0/3.0);
                double t21709 = c*c0*t21631*t21633*t21642*t21617*t21628*t21665*t21666*(2.0/3.0);
                double t21710 = t21709+1.0;
                double t21711 = 1/(t21673*t21673);
                double t21712 = a5*c0*t21642*t21616*t21628*t21664*(1.6E1/9.0);
                double t21713 = a5*c0*t21616*t21628*t21646*t21658*t21659*(4.0/3.0);
                double t21714 = a5*c0*t21621*t21623*t21642*t21616*t21619*t21628*t21648*(4.0E1/3.0);
                double t21715 = c*c0*gamma_aa[index]*t21621*t21623*t21633*t21642*t21628*t21649*(1.36E2/9.0);
                double t21716 = c*c0*gamma_aa[index]*t21633*t21642*t21651*t21652*t21653*t21619*t21628*(2.56E2/9.0) \
                   ;
                double t21717 = c*c0*gamma_aa[index]*t21621*t21623*t21633*t21660*t21628*t21658*t21659*(1.6E1/3.0) \
                   ;
                double t21718 = t21712+t21713+t21714+t21715+t21716+t21717;
                double t21719 = 1/pow(t21662,3.0/2.0);
                double t21720 = 1/pow(rho_a[index],3.5E1/3.0);
                double t21721 = t21661*t21677*t21697*2.0;
                double t21722 = a5*c0*t21631*t21642*t21616*t21628*t21646*(8.0/3.0);
                double t21723 = c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21660*t21628*(3.2E1/3.0) \
                   ;
                double t21785 = gamma_aa[index]*t21620*t21621*t21631*t21623*t21663*8.0;
                double t21786 = c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21642*t21660*t21628*(3.2E1/3.0) \
                   ;
                double t21724 = t21721+t21722+t21723-t21785-t21786;
                double t21725 = t21702*t21661*t21677*3.0;
                double t21726 = c*c0*t21631*t21633*t21642*t21628*t21647*(4.0/3.0);
                double t21727 = a5*c0*gamma_aa[index]*t21631*t21642*t21616*t21628*t21664*(2.8E1/3.0);
                double t21728 = c*c0*t21631*t21633*t21617*t21628*t21658*t21659*8.0;
                double t21729 = c*c0*t21621*t21631*t21623*t21633*t21642*t21619*t21628*t21649*(1.28E2/3.0);
                double t21748 = t21621*t21631*t21623*t21663*t21681*t21619*3.2E1;
                double t21749 = c*c0*t21621*t21623*t21650*t21633*t21642*t21619*t21628*t21649*(1.28E2/3.0);
                double t21730 = t21725+t21726+t21727+t21728+t21729-t21748-t21749;
                double t21731 = t21702*t21661*t21677*2.0;
                double t21732 = c*c0*t21631*t21633*t21642*t21628*t21647*(8.0/9.0);
                double t21733 = a5*c0*gamma_aa[index]*t21631*t21642*t21616*t21628*t21664*(5.6E1/9.0);
                double t21734 = c*c0*t21631*t21633*t21617*t21628*t21658*t21659*(1.6E1/3.0);
                double t21735 = c*c0*t21621*t21631*t21623*t21633*t21642*t21619*t21628*t21649*(2.56E2/9.0);
                double t21780 = t21621*t21631*t21623*t21663*t21681*t21619*(6.4E1/3.0);
                double t21781 = c*c0*t21621*t21623*t21650*t21633*t21642*t21619*t21628*t21649*(2.56E2/9.0);
                double t21736 = t21731+t21732+t21733+t21734+t21735-t21780-t21781;
                double t21737 = t21661*t21677*t21697*3.0;
                double t21738 = a5*c0*t21631*t21642*t21616*t21628*t21646*4.0;
                double t21739 = c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21660*t21628*1.6E1;
                double t21746 = gamma_aa[index]*t21620*t21621*t21631*t21623*t21663*1.2E1;
                double t21747 = c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21642*t21660*t21628*1.6E1;
                double t21740 = t21737-t21746+t21738-t21747+t21739;
                double t21741 = c*c0*t21631*t21633*t21642*t21628*t21647*t21665*t21666*(2.0/9.0);
                double t21742 = c*c0*t21631*t21633*t21617*t21628*t21665*t21666*t21658*t21659*(4.0/3.0);
                double t21743 = c*c0*t21631*t21633*t21642*t21617*t21628*t21665*t21666*t21679*(2.0/3.0);
                double t21744 = a5*c0*gamma_aa[index]*t21631*t21642*t21616*t21628*t21664*t21665*t21666*(1.4E1/9.0) \
                   ;
                double t21745 = c*c0*t21621*t21631*t21623*t21633*t21642*t21619*t21628*t21665*t21666*t21649*(6.4E1/ \
                   9.0);
                double t21750 = 1/t21633;
                double t21752 = 1/c0;
                double t21753 = pow(rho_a[index],1.0/3.0);
                double t21754 = exp(-t21627);
                double t21755 = t21630*t21630;
                double t21756 = t21641*t21641;
                double t21757 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t21782 = c*c0*t21621*t21623*t21650*t21633*t21642*t21619*t21628*t21665*t21666*t21649*(6.4E1/ \
                   9.0);
                double t21758 = t21741+t21670+t21742+t21743+t21744-t21691+t21745-t21782+t21667+t21668+t21669;
                double t21787 = c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21642*t21660*t21628*t21665*t21666* \
                   (8.0/3.0);
                double t21759 = t21706-t21680+t21707+t21708+t21675+t21676-t21787;
                double t21760 = t21620*t21621*t21618*t21619;
                double t21761 = pow(t21622,4.0/5.0);
                double t21778 = rab1*t21761;
                double t21762 = exp(-t21778);
                double t21763 = t21762-1.0;
                double t21779 = kab1*t21763;
                double t21764 = kab0-t21779;
                double t21765 = a3*gamma_aa[index]*t21624*t21616*t21625;
                double t21766 = t21765+1.0;
                double t21767 = 1/sqrt(t21766);
                double t21768 = a1*gamma_aa[index]*t21616*t21646;
                double t21769 = t21760+t21768+1.0;
                double t21770 = c*c;
                double t21771 = 1/pow(rho_a[index],2.0/3.0);
                double t21772 = k1*t21626;
                double t21773 = c*k2*t21617;
                double t21774 = t21772+t21773;
                double t21775 = 1/(t21774*t21774);
                double t21784 = t21770*t21771*t21775;
                double t21776 = exp(-t21784);
                double t21777 = exp(-t21760);
                double t21783 = c*c0*t21617*(2.0/3.0);
                double t21788 = t21764*t21767*t21777*t21769*1.0E5;
                double t21789 = 1/pow(rho_a[index],1.0E1/3.0);
                double t21790 = 1/pow(t21766,3.0/2.0);
                double t21791 = t21621*t21618*t21681*t21619*(1.6E1/3.0);
                double t21792 = a1*gamma_aa[index]*t21616*t21664*(8.0/3.0);
                double t21793 = t21791+t21792;
                double t21794 = a1*t21616*t21646;
                double t21795 = gamma_aa[index]*t21620*t21621*t21618*2.0;
                double t21796 = t21794+t21795;
                double t21797 = 1/(c*c);
                double t21798 = 1/pow(t21622,1.0/5.0);
                double t21799 = t21783-t21788;
                double t21800 = 0.0 ;
                double t21801 = t21665*t21666*t21678;
                double t21802 = t21710*t21724*t21674;
                double t21803 = t21705*t21674*t21759;
                double t21804 = t21624*t21750*t21752*t21753*t21754*t21755*t21756*t21678*(3.0/2.0);
                double t21938 = t21710*t21711*t21740*t21705;
                double t21805 = t21801+t21802+t21803+t21804-t21938;
                double t21806 = t21665*t21666;
                double t21807 = t21710*t21705*t21674;
                double t21808 = t21806+t21807;
                double t21809 = 1/pow(rho_a[index],5.0/3.0);
                double t21810 = t21770*t21809*t21775*(2.0/3.0);
                double t21811 = 1/(t21774*t21774*t21774);
                double t21812 = c*k2*t21647*(1.0/3.0);
                double t21813 = c*k1*t21654*t21647*(1.0/6.0);
                double t21814 = t21812+t21813;
                double t21815 = t21810-t21811*t21814*t21770*t21771*2.0;
                double t21816 = a3*t21624*t21616*t21625*t21790*t21764*t21777*t21769*5.0E4;
                double t21817 = gamma_aa[index]*t21620*t21621*t21618*t21764*t21767*t21777*t21769*2.0E5;
                double t21819 = t21764*t21767*t21777*t21796*1.0E5;
                double t21818 = t21816+t21817-t21819;
                double t21820 = c*c0*t21647*(2.0/9.0);
                double t21821 = t21621*t21618*t21681*t21619*t21764*t21767*t21777*t21769*(1.6E6/3.0);
                double t21822 = a3*gamma_aa[index]*t21624*t21616*t21790*t21764*t21777*t21769*t21789*(3.5E5/3.0);
                double t21932 = t21764*t21793*t21767*t21777*1.0E5;
                double t21933 = c*kab1*rab1*t21762*t21647*t21767*t21777*t21769*t21798*(8.0E4/3.0);
                double t21823 = t21820+t21821+t21822-t21932-t21933;
                double t21824 = -t21783+t21788;
                double t21825 = ( (t21824 > 0.0) ?  1.0 : 0.0 ) ;
                double t21826 = t21620*t21621*t21618*t21619*2.0;
                double t21827 = exp(t21826);
                double t21828 = 1/(t21764*t21764);
                double t21829 = 1/(t21769*t21769);
                double t21830 = c*c0*t21617*t21827*t21828*t21766*t21829*(2.0/3.0);
                double t21831 = 1/(t21769*t21769*t21769);
                double t21832 = exp(t21830);
                double t21833 = Ei(-t21830);
                double t21834 = c*c0*t21647*t21827*t21828*t21766*t21829*(2.0/9.0);
                double t21835 = a3*c0*gamma_aa[index]*t21616*t21664*t21827*t21828*t21829*(1.4E1/9.0);
                double t21836 = c*c0*t21621*t21618*t21619*t21827*t21828*t21649*t21766*t21829*(6.4E1/9.0);
                double t21837 = 1/(t21764*t21764*t21764);
                double t21838 = sqrt(t21830);
                double t21839 = t21838*6.0;
                double t21840 = c*c0*t21617*t21827*t21828*t21766*t21829*4.0;
                double t21841 = t21840+t21839+3.0;
                double t21842 = 1/t21841;
                double t21865 = c*c0*t21831*t21617*t21827*t21828*t21766*t21793*(4.0/3.0);
                double t21866 = c0*kab1*rab1*t21770*t21762*t21809*t21827*t21837*t21766*t21829*t21798*(1.6E1/4.5E1) \
                   ;
                double t21843 = t21834+t21835+t21836-t21865-t21866;
                double t21844 = 1/sqrt(t21830);
                double t21845 = a3*c0*t21616*t21646*t21827*t21828*t21829*(2.0/3.0);
                double t21846 = c*c0*gamma_aa[index]*t21621*t21660*t21618*t21827*t21828*t21766*t21829*(8.0/3.0);
                double t21848 = c*c0*t21831*t21617*t21827*t21828*t21766*t21796*(4.0/3.0);
                double t21847 = t21845+t21846-t21848;
                double t21849 = a1*t21616*t21664*(8.0/3.0);
                double t21850 = gamma_aa[index]*t21621*t21618*t21681*(3.2E1/3.0);
                double t21851 = t21850+t21849;
                double t21852 = t21618*t21618;
                double t21853 = a3*c0*t21831*t21616*t21646*t21827*t21828*t21793*(4.0/3.0);
                double t21854 = c*c0*t21831*t21647*t21827*t21828*t21766*t21796*(4.0/9.0);
                double t21855 = c*c0*t21831*t21617*t21851*t21827*t21828*t21766*(4.0/3.0);
                double t21856 = 1/(t21769*t21769*t21769*t21769);
                double t21857 = a3*c0*gamma_aa[index]*t21831*t21616*t21664*t21827*t21828*t21796*(2.8E1/9.0);
                double t21858 = c*c0*gamma_aa[index]*t21621*t21660*t21831*t21618*t21827*t21828*t21766*t21793*(1.6E1/ \
                   3.0);
                double t21859 = c*c0*t21621*t21831*t21618*t21619*t21827*t21828*t21649*t21766*t21796*(1.28E2/9.0);
                double t21860 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t21861 = a3*c*c0*kab1*rab1*t21616*t21860*t21762*t21827*t21837*t21829*t21798*(1.6E1/4.5E1);
                double t21862 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]);
                double t21863 = c0*gamma_aa[index]*kab1*rab1*t21621*t21770*t21618*t21762*t21862*t21827*t21837*t21766* \
                   t21829*t21798*(6.4E1/4.5E1);
                double t21868 = a3*c0*t21616*t21664*t21827*t21828*t21829*(1.6E1/9.0);
                double t21869 = c*c0*t21617*t21827*t21828*t21766*t21793*t21856*t21796*4.0;
                double t21870 = a3*c0*t21621*t21616*t21618*t21619*t21827*t21648*t21828*t21829*(4.0E1/3.0);
                double t21871 = c*c0*gamma_aa[index]*t21621*t21618*t21827*t21828*t21649*t21766*t21829*(1.36E2/9.0) \
                   ;
                double t21872 = c*c0*gamma_aa[index]*t21652*t21653*t21852*t21619*t21827*t21828*t21766*t21829*(2.56E2/ \
                   9.0);
                double t21873 = c0*kab1*rab1*t21831*t21770*t21762*t21809*t21827*t21837*t21766*t21796*t21798*(3.2E1/ \
                   4.5E1);
                double t21864 = t21861-t21870+t21853-t21871+t21854+t21863-t21872+t21855-t21873+t21857+t21858+t21859- \
                   t21868-t21869;
                double t21867 = 1/rho_a[index];
                double t21874 = c*c0*t21832*t21617*t21833*t21827*t21828*t21766*t21829*(2.0/3.0);
                double t21875 = t21874+1.0;
                double t21876 = t21844*t21847*2.0;
                double t21877 = a3*c0*t21616*t21646*t21827*t21828*t21829*(8.0/3.0);
                double t21878 = c*c0*gamma_aa[index]*t21621*t21660*t21618*t21827*t21828*t21766*t21829*(3.2E1/3.0) \
                   ;
                double t21930 = c*c0*t21831*t21617*t21827*t21828*t21766*t21796*(1.6E1/3.0);
                double t21879 = -t21930+t21876+t21877+t21878;
                double t21880 = 1/(t21841*t21841);
                double t21881 = t21843*t21844*2.0;
                double t21882 = c*c0*t21647*t21827*t21828*t21766*t21829*(8.0/9.0);
                double t21883 = a3*c0*gamma_aa[index]*t21616*t21664*t21827*t21828*t21829*(5.6E1/9.0);
                double t21884 = c*c0*t21621*t21618*t21619*t21827*t21828*t21649*t21766*t21829*(2.56E2/9.0);
                double t21916 = c*c0*t21831*t21617*t21827*t21828*t21766*t21793*(1.6E1/3.0);
                double t21917 = c0*kab1*rab1*t21770*t21762*t21809*t21827*t21837*t21766*t21829*t21798*(6.4E1/4.5E1) \
                   ;
                double t21885 = -t21916+t21881-t21917+t21882+t21883+t21884;
                double t21886 = t21838*4.0;
                double t21887 = c*c0*t21617*t21827*t21828*t21766*t21829*(8.0/3.0);
                double t21888 = t21886+t21887+6.0;
                double t21889 = t21844*t21847*3.0;
                double t21890 = a3*c0*t21616*t21646*t21827*t21828*t21829*4.0;
                double t21891 = c*c0*gamma_aa[index]*t21621*t21660*t21618*t21827*t21828*t21766*t21829*1.6E1;
                double t21907 = c*c0*t21831*t21617*t21827*t21828*t21766*t21796*8.0;
                double t21892 = -t21907+t21890+t21891+t21889;
                double t21893 = c*c0*t21832*t21833*t21647*t21827*t21828*t21766*t21829*(2.0/9.0);
                double t21894 = a3*c0*gamma_aa[index]*t21616*t21832*t21833*t21664*t21827*t21828*t21829*(1.4E1/9.0) \
                   ;
                double t21895 = c*c0*t21832*t21617*t21833*t21843*t21827*t21828*t21766*t21829*(2.0/3.0);
                double t21896 = c*c0*t21621*t21832*t21833*t21618*t21619*t21827*t21828*t21649*t21766*t21829*(6.4E1/ \
                   9.0);
                double t21897 = t21843*t21844*3.0;
                double t21898 = c*c0*t21647*t21827*t21828*t21766*t21829*(4.0/3.0);
                double t21899 = a3*c0*gamma_aa[index]*t21616*t21664*t21827*t21828*t21829*(2.8E1/3.0);
                double t21900 = c*c0*t21621*t21618*t21619*t21827*t21828*t21649*t21766*t21829*(1.28E2/3.0);
                double t21908 = c*c0*t21831*t21617*t21827*t21828*t21766*t21793*8.0;
                double t21909 = c0*kab1*rab1*t21770*t21762*t21809*t21827*t21837*t21766*t21829*t21798*(3.2E1/1.5E1) \
                   ;
                double t21901 = t21900-t21908-t21909+t21897+t21898+t21899;
                double t21902 = a3*c0*t21616*t21832*t21833*t21646*t21827*t21828*t21829*(2.0/3.0);
                double t21903 = c*c0*t21832*t21617*t21833*t21827*t21828*t21766*t21829*t21847*(2.0/3.0);
                double t21904 = c*c0*gamma_aa[index]*t21621*t21660*t21832*t21833*t21618*t21827*t21828*t21766*t21829* \
                   (8.0/3.0);
                double t21931 = c*c0*t21831*t21832*t21617*t21833*t21827*t21828*t21766*t21796*(4.0/3.0);
                double t21905 = t21902+t21903+t21904-t21931+t21845+t21846-t21848;
                double t21906 = 1/pow(t21830,3.0/2.0);
                double t21910 = 1/t21766;
                double t21911 = exp(-t21826);
                double t21912 = t21764*t21764;
                double t21913 = t21769*t21769;
                double t21914 = 1/(rho_a[index]*rho_a[index]);
                double t21915 = t21834+t21835+t21836-t21865-t21866+t21893+t21894+t21895+t21896-c*c0*t21831*t21832* \
                   t21617*t21833*t21827*t21828*t21766*t21793*(4.0/3.0)-c0*kab1*rab1*t21832*t21770*t21833*t21762*t21809* \
                   t21827*t21837*t21766*t21829*t21798*(1.6E1/4.5E1);
                double t21918 = a3*t21624*t21616*t21790*t21764*t21777*t21769*t21789*(3.5E5/3.0);
                double t21919 = a3*t21624*t21616*t21625*t21790*t21764*t21793*t21777*5.0E4;
                double t21920 = gamma_aa[index]*t21621*t21618*t21681*t21764*t21767*t21777*t21769*(3.2E6/3.0);
                double t21921 = gamma_aa[index]*t21620*t21621*t21618*t21764*t21793*t21767*t21777*2.0E5;
                double t21922 = t21621*t21618*t21681*t21619*t21764*t21767*t21777*t21796*(1.6E6/3.0);
                double t21923 = a3*a3;
                double t21924 = 1/pow(t21766,5.0/2.0);
                double t21925 = a3*gamma_aa[index]*t21624*t21616*t21790*t21764*t21777*t21796*t21789*(3.5E5/3.0);
                double t21926 = a3*kab1*rab1*t21616*t21762*t21664*t21790*t21777*t21769*t21798*(4.0E4/3.0);
                double t21927 = 1/pow(rho_a[index],2.6E1/3.0);
                double t21928 = c*gamma_aa[index]*kab1*rab1*t21621*t21618*t21762*t21649*t21767*t21777*t21769*t21798* \
                   (1.6E5/3.0);
                double t21929 = t21920+t21921+t21922+t21925+t21926+t21918+t21919+t21928-t21851*t21764*t21767*t21777* \
                   1.0E5-c*kab1*rab1*t21762*t21647*t21767*t21777*t21796*t21798*(8.0E4/3.0)-gamma_aa[index]*t21621*t21660* \
                   t21923*t21924*t21764*t21777*t21769*t21797*1.75E5-gamma_aa[index]*t21720*t21653*t21852*t21619*t21764* \
                   t21767*t21777*t21769*(3.2E6/3.0)-a3*t21621*t21624*t21616*t21618*t21619*t21790*t21764*t21927*t21777* \
                   t21769*5.0E5;
                double t21934 = 0.0 ;
                double t21935 = t21832*t21833;
                double t21936 = t21842*t21875*t21888;
                double t21937 = t21935+t21936;
                v_rho_a_gamma_aa_[index] = rho_a[index]*( ( (c*c0*t21617*(-2.0/3.0)+t21764*t21767*t21769*exp(-t21620* \
                   t21621*t21618*t21619)*1.0E5 > 0.0) ? c0*t21776*1.0*(t21710*t21674*(t21661*t21718*t21677*2.0-t21702* \
                   t21661*t21719*t21697-gamma_aa[index]*t21621*t21631*t21623*t21663*t21681*(1.28E2/3.0)+a5*c0*t21631* \
                   t21642*t21616*t21628*t21664*(6.4E1/9.0)-gamma_aa[index]*t21620*t21621*t21702*t21631*t21623*t21677* \
                   4.0+gamma_aa[index]*t21720*t21650*t21651*t21653*t21663*t21619*(2.56E2/3.0)-t21621*t21631*t21623*t21681* \
                   t21619*t21677*t21697*(3.2E1/3.0)+a5*c0*t21631*t21616*t21628*t21646*t21658*t21659*(1.6E1/3.0)+c*c0* \
                   gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21628*t21649*(5.44E2/9.0)-c*c0*gamma_aa[index]* \
                   t21621*t21623*t21650*t21633*t21642*t21628*t21649*(5.44E2/9.0)+a5*c0*t21621*t21631*t21623*t21642*t21616* \
                   t21619*t21628*t21648*(1.6E2/3.0)-a5*c0*t21621*t21623*t21650*t21642*t21616*t21619*t21628*t21648*(1.6E2/ \
                   3.0)+c*c0*gamma_aa[index]*t21631*t21633*t21642*t21651*t21652*t21653*t21619*t21628*(1.024E3/9.0)-c* \
                   c0*gamma_aa[index]*t21650*t21633*t21642*t21651*t21652*t21653*t21619*t21628*(2.048E3/9.0)+c*c0*gamma_aa[index]* \
                   t21621*t21631*t21623*t21633*t21660*t21628*t21658*t21659*(6.4E1/3.0)-c*c0*gamma_aa[index]*t21621*t21623* \
                   t21650*t21633*t21660*t21628*t21658*t21659*(6.4E1/3.0)+c*c0*gamma_aa[index]*t21633*t21642*t21651*t21652* \
                   t21653*t21619*t21628*t21687*(5.12E2/3.0))+t21705*t21674*(-t21751+t21682+t21683-t21692+t21684-t21693+ \
                   t21685-t21694+t21686+t21688+t21689+t21678*t21867*(1.0/3.0)+t21678*t21679+(t21658*t21678*2.0)/t21641+ \
                   t21621*t21623*t21681*t21619*t21678*(3.2E1/3.0)-t21621*t21623*t21661*t21681*t21619*t21678*(3.2E1/3.0) \
                   +a5*gamma_aa[index]*t21624*t21750*t21616*t21678*t21789*(7.0/3.0)+a5*c0*t21631*t21642*t21616*t21628* \
                   t21664*t21665*t21666*(1.6E1/9.0)+a5*c0*t21631*t21642*t21616*t21628*t21646*t21665*t21666*t21679*(2.0/ \
                   3.0)+a5*c0*t21631*t21616*t21628*t21646*t21665*t21666*t21658*t21659*(4.0/3.0)+c*c0*t21631*t21633*t21642* \
                   t21617*t21690*t21628*t21665*t21666*(2.0/3.0)+c*c0*t21631*t21633*t21642*t21628*t21647*t21665*t21666* \
                   t21678*(2.0/9.0)+a5*c0*gamma_aa[index]*t21631*t21642*t21616*t21628*t21664*t21665*t21666*t21678*(1.4E1/ \
                   9.0)+c*c0*t21631*t21633*t21642*t21617*t21628*t21665*t21666*t21678*t21679*(2.0/3.0)+c*c0*t21631*t21633* \
                   t21617*t21628*t21665*t21666*t21658*t21659*t21678*(4.0/3.0)+c*c0*gamma_aa[index]*t21621*t21631*t21623* \
                   t21633*t21642*t21628*t21665*t21666*t21649*(1.36E2/9.0)-c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633* \
                   t21642*t21628*t21665*t21666*t21649*(1.36E2/9.0)+a5*c0*t21621*t21631*t21623*t21642*t21616*t21619*t21628* \
                   t21665*t21648*t21666*(4.0E1/3.0)-a5*c0*t21621*t21623*t21650*t21642*t21616*t21619*t21628*t21665*t21648* \
                   t21666*(4.0E1/3.0)+c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21660*t21628*t21665*t21666* \
                   t21679*(8.0/3.0)-c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21642*t21660*t21628*t21665*t21666* \
                   t21679*(8.0/3.0)+c*c0*gamma_aa[index]*t21631*t21633*t21642*t21651*t21652*t21653*t21619*t21628*t21665* \
                   t21666*(2.56E2/9.0)-c*c0*gamma_aa[index]*t21650*t21633*t21642*t21651*t21652*t21653*t21619*t21628*t21665* \
                   t21666*(5.12E2/9.0)+c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21660*t21628*t21665*t21666*t21658* \
                   t21659*(1.6E1/3.0)-c*c0*gamma_aa[index]*t21621*t21623*t21650*t21633*t21660*t21628*t21665*t21666*t21658* \
                   t21659*(1.6E1/3.0)+c*c0*gamma_aa[index]*t21633*t21642*t21651*t21652*t21653*t21619*t21628*t21665*t21666* \
                   t21687*(1.28E2/3.0)+c*c0*t21621*t21631*t21623*t21633*t21642*t21619*t21628*t21665*t21666*t21649*t21678* \
                   (6.4E1/9.0)-c*c0*t21621*t21623*t21650*t21633*t21642*t21619*t21628*t21665*t21666*t21649*t21678*(6.4E1/ \
                   9.0))+t21724*t21674*t21758+t21690*t21665*t21666+t21736*t21674*t21759-t21710*t21711*t21730*t21724-t21710* \
                   t21711*t21740*t21736-t21711*t21730*t21705*t21759-t21711*t21740*t21705*t21758+t21665*t21666*t21678* \
                   t21679-t21710*t21711*t21705*(t21661*t21718*t21677*3.0-t21702*t21661*t21719*t21697*(3.0/2.0)-gamma_aa[index]* \
                   t21621*t21631*t21623*t21663*t21681*6.4E1+a5*c0*t21631*t21642*t21616*t21628*t21664*(3.2E1/3.0)-gamma_aa[index]* \
                   t21620*t21621*t21702*t21631*t21623*t21677*6.0+gamma_aa[index]*t21720*t21650*t21651*t21653*t21663*t21619* \
                   1.28E2-t21621*t21631*t21623*t21681*t21619*t21677*t21697*1.6E1+a5*c0*t21631*t21616*t21628*t21646*t21658* \
                   t21659*8.0+c*c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21642*t21628*t21649*(2.72E2/3.0)-c*c0* \
                   gamma_aa[index]*t21621*t21623*t21650*t21633*t21642*t21628*t21649*(2.72E2/3.0)+a5*c0*t21621*t21631* \
                   t21623*t21642*t21616*t21619*t21628*t21648*8.0E1-a5*c0*t21621*t21623*t21650*t21642*t21616*t21619*t21628* \
                   t21648*8.0E1+c*c0*gamma_aa[index]*t21631*t21633*t21642*t21651*t21652*t21653*t21619*t21628*(5.12E2/ \
                   3.0)-c*c0*gamma_aa[index]*t21650*t21633*t21642*t21651*t21652*t21653*t21619*t21628*(1.024E3/3.0)+c* \
                   c0*gamma_aa[index]*t21621*t21631*t21623*t21633*t21660*t21628*t21658*t21659*3.2E1-c*c0*gamma_aa[index]* \
                   t21621*t21623*t21650*t21633*t21660*t21628*t21658*t21659*3.2E1+c*c0*gamma_aa[index]*t21633*t21642*t21651* \
                   t21652*t21653*t21619*t21628*t21687*2.56E2)+t21710*t21730*t21740*t21705*1/(t21673*t21673*t21673)*2.0+ \
                   t21624*t21750*t21752*t21690*t21753*t21754*t21755*t21756*(3.0/2.0)+t21624*t21750*t21752*t21753*t21754* \
                   t21755*t21756*t21678*t21679*(3.0/2.0)-a5*1/(t21633*t21633)*t21616*t21752*t21914*t21754*t21755*t21756* \
                   t21679*t21797*(3.0/2.0)+gamma_aa[index]*t21621*t21630*t21623*t21624*t21750*t21752*t21754*t21756*t21757* \
                   t21679*6.0-gamma_aa[index]*t21621*t21623*t21624*t21750*t21752*t21754*t21755*t21756*t21757*t21679*6.0) \
                   *(-1.0/2.0) : 0.0 ) +c0*t21800*t21805*t21823*t21776*(1.0/2.0)+c0*t21805*t21815*t21825*t21776*(1.0/ \
                   2.0)+c0*t21800*t21808*t21776*t21929*(1.0/2.0)+ 0.0 -c0*t21800*t21815*t21808*t21818*t21776*(1.0/2.0) \
                   +c0*t21823*t21808*t21934*t21818*t21776*(1.0/2.0))+rho_b[index]*(c0*t21825*(t21842*t21875*(t21844*t21864* \
                   2.0+t21843*t21906*t21847-a3*c0*t21616*t21664*t21827*t21828*t21829*(6.4E1/9.0)+a3*c0*t21831*t21616* \
                   t21646*t21827*t21828*t21793*(1.6E1/3.0)+c*c0*t21831*t21617*t21851*t21827*t21828*t21766*(1.6E1/3.0) \
                   +c*c0*t21831*t21647*t21827*t21828*t21766*t21796*(1.6E1/9.0)+a3*c0*gamma_aa[index]*t21831*t21616*t21664* \
                   t21827*t21828*t21796*(1.12E2/9.0)-c*c0*t21617*t21827*t21828*t21766*t21793*t21856*t21796*1.6E1-c*c0* \
                   gamma_aa[index]*t21621*t21618*t21827*t21828*t21649*t21766*t21829*(5.44E2/9.0)-a3*c0*t21621*t21616* \
                   t21618*t21619*t21827*t21648*t21828*t21829*(1.6E2/3.0)+c*c0*gamma_aa[index]*t21621*t21660*t21831*t21618* \
                   t21827*t21828*t21766*t21793*(6.4E1/3.0)-c*c0*gamma_aa[index]*t21652*t21653*t21852*t21619*t21827*t21828* \
                   t21766*t21829*(1.024E3/9.0)+c*c0*t21621*t21831*t21618*t21619*t21827*t21828*t21649*t21766*t21796*(5.12E2/ \
                   9.0)+a3*c*c0*kab1*rab1*t21616*t21860*t21762*t21827*t21837*t21829*t21798*(6.4E1/4.5E1)-c0*kab1*rab1* \
                   t21831*t21770*t21762*t21809*t21827*t21837*t21766*t21796*t21798*(1.28E2/4.5E1)+c0*gamma_aa[index]*kab1* \
                   rab1*t21621*t21770*t21618*t21762*t21862*t21827*t21837*t21766*t21829*t21798*(2.56E2/4.5E1))+t21842* \
                   t21888*(t21861-t21870+t21853-t21871+t21854+t21863-t21872+t21855-t21873+t21857+t21858+t21859-t21868- \
                   t21869-t21843*t21847-t21847*t21867*(1.0/3.0)+(t21793*t21847*2.0)/t21769-t21621*t21618*t21681*t21619* \
                   t21847*(3.2E1/3.0)-a3*gamma_aa[index]*t21910*t21624*t21616*t21847*t21789*(7.0/3.0)+(c*kab1*rab1*t21762* \
                   t21647*t21847*t21798*(8.0/1.5E1))/t21764-a3*c0*t21616*t21832*t21833*t21664*t21827*t21828*t21829*(1.6E1/ \
                   9.0)+a3*c0*t21831*t21616*t21832*t21833*t21646*t21827*t21828*t21793*(4.0/3.0)-a3*c0*t21616*t21832*t21833* \
                   t21843*t21646*t21827*t21828*t21829*(2.0/3.0)+c*c0*t21831*t21832*t21617*t21833*t21851*t21827*t21828* \
                   t21766*(4.0/3.0)+c*c0*t21831*t21832*t21833*t21647*t21827*t21828*t21766*t21796*(4.0/9.0)+c*c0*t21832* \
                   t21617*t21833*t21827*t21828*t21864*t21766*t21829*(2.0/3.0)-c*c0*t21832*t21833*t21647*t21827*t21828* \
                   t21766*t21829*t21847*(2.0/9.0)+a3*c0*gamma_aa[index]*t21831*t21616*t21832*t21833*t21664*t21827*t21828* \
                   t21796*(2.8E1/9.0)-a3*c0*gamma_aa[index]*t21616*t21832*t21833*t21664*t21827*t21828*t21829*t21847*(1.4E1/ \
                   9.0)+c*c0*t21831*t21832*t21617*t21833*t21843*t21827*t21828*t21766*t21796*(4.0/3.0)+c*c0*t21831*t21832* \
                   t21617*t21833*t21827*t21828*t21766*t21793*t21847*(4.0/3.0)-c*c0*t21832*t21617*t21833*t21843*t21827* \
                   t21828*t21766*t21829*t21847*(2.0/3.0)-c*c0*t21832*t21617*t21833*t21827*t21828*t21766*t21793*t21856* \
                   t21796*4.0-c*c0*gamma_aa[index]*t21621*t21832*t21833*t21618*t21827*t21828*t21649*t21766*t21829*(1.36E2/ \
                   9.0)-a3*c0*t21621*t21616*t21832*t21833*t21618*t21619*t21827*t21648*t21828*t21829*(4.0E1/3.0)+c*c0* \
                   gamma_aa[index]*t21621*t21660*t21831*t21832*t21833*t21618*t21827*t21828*t21766*t21793*(1.6E1/3.0)- \
                   c*c0*gamma_aa[index]*t21621*t21660*t21832*t21833*t21618*t21843*t21827*t21828*t21766*t21829*(8.0/3.0) \
                   -c*c0*gamma_aa[index]*t21652*t21832*t21653*t21833*t21852*t21619*t21827*t21828*t21766*t21829*(2.56E2/ \
                   9.0)+c*c0*t21621*t21831*t21832*t21833*t21618*t21619*t21827*t21828*t21649*t21766*t21796*(1.28E2/9.0) \
                   -c*c0*t21621*t21832*t21833*t21618*t21619*t21827*t21828*t21649*t21766*t21829*t21847*(6.4E1/9.0)+a3* \
                   c*c0*kab1*rab1*t21616*t21832*t21833*t21860*t21762*t21827*t21837*t21829*t21798*(1.6E1/4.5E1)-c0*kab1* \
                   rab1*t21831*t21832*t21770*t21833*t21762*t21809*t21827*t21837*t21766*t21796*t21798*(3.2E1/4.5E1)+c0* \
                   kab1*rab1*t21832*t21770*t21833*t21762*t21809*t21827*t21837*t21766*t21829*t21847*t21798*(1.6E1/4.5E1) \
                   +c0*gamma_aa[index]*kab1*rab1*t21621*t21832*t21770*t21833*t21618*t21762*t21862*t21827*t21837*t21766* \
                   t21829*t21798*(6.4E1/4.5E1))+t21832*t21833*t21864-t21842*t21905*t21885-t21842*t21879*(t21834+t21835+ \
                   t21836+t21893+t21894+t21895+t21896-c*c0*t21831*t21617*t21827*t21828*t21766*t21793*(4.0/3.0)-c*c0*t21831* \
                   t21832*t21617*t21833*t21827*t21828*t21766*t21793*(4.0/3.0)-c0*kab1*rab1*t21770*t21762*t21809*t21827* \
                   t21837*t21766*t21829*t21798*(1.6E1/4.5E1)-c0*kab1*rab1*t21832*t21770*t21833*t21762*t21809*t21827*t21837* \
                   t21766*t21829*t21798*(1.6E1/4.5E1))-t21832*t21833*t21843*t21847+t21901*t21905*t21880*t21888+t21901* \
                   t21880*t21875*t21879+t21915*t21880*t21892*t21888+t21880*t21892*t21875*t21885-t21880*t21875*t21888* \
                   (t21844*t21864*3.0+t21843*t21906*t21847*(3.0/2.0)-a3*c0*t21616*t21664*t21827*t21828*t21829*(3.2E1/ \
                   3.0)+a3*c0*t21831*t21616*t21646*t21827*t21828*t21793*8.0+c*c0*t21831*t21617*t21851*t21827*t21828*t21766* \
                   8.0+c*c0*t21831*t21647*t21827*t21828*t21766*t21796*(8.0/3.0)+a3*c0*gamma_aa[index]*t21831*t21616*t21664* \
                   t21827*t21828*t21796*(5.6E1/3.0)-c*c0*t21617*t21827*t21828*t21766*t21793*t21856*t21796*2.4E1-c*c0* \
                   gamma_aa[index]*t21621*t21618*t21827*t21828*t21649*t21766*t21829*(2.72E2/3.0)-a3*c0*t21621*t21616* \
                   t21618*t21619*t21827*t21648*t21828*t21829*8.0E1+c*c0*gamma_aa[index]*t21621*t21660*t21831*t21618*t21827* \
                   t21828*t21766*t21793*3.2E1-c*c0*gamma_aa[index]*t21652*t21653*t21852*t21619*t21827*t21828*t21766*t21829* \
                   (5.12E2/3.0)+c*c0*t21621*t21831*t21618*t21619*t21827*t21828*t21649*t21766*t21796*(2.56E2/3.0)+a3*c* \
                   c0*kab1*rab1*t21616*t21860*t21762*t21827*t21837*t21829*t21798*(3.2E1/1.5E1)-c0*kab1*rab1*t21831*t21770* \
                   t21762*t21809*t21827*t21837*t21766*t21796*t21798*(6.4E1/1.5E1)+c0*gamma_aa[index]*kab1*rab1*t21621* \
                   t21770*t21618*t21762*t21862*t21827*t21837*t21766*t21829*t21798*(1.28E2/1.5E1))-t21901*1/(t21841*t21841* \
                   t21841)*t21892*t21875*t21888*2.0+t21910*t21911*t21624*t21912*t21913*t21752*t21753*t21864*(3.0/2.0) \
                   -t21910*t21911*t21624*t21912*t21913*t21752*t21753*t21843*t21847*(3.0/2.0)-t21910*t21911*t21624*t21912* \
                   t21752*t21753*t21843*t21769*t21796*3.0+a3*t21911*t21912*t21616*t21913*t21752*t21914*t21843*1/(t21766* \
                   t21766)*t21797*(3.0/2.0)+gamma_aa[index]*t21621*t21910*t21911*t21624*t21912*t21913*t21752*t21618*t21843* \
                   t21757*6.0)*(1.0/2.0)+c0*t21800*t21937*t21929*(1.0/2.0)+c0*t21800*t21818*(t21832*t21833*t21843+t21842* \
                   t21915*t21888+t21842*t21875*t21885-t21901*t21880*t21875*t21888+t21910*t21911*t21624*t21912*t21913* \
                   t21752*t21753*t21843*(3.0/2.0))*(1.0/2.0)+c0*t21800*t21823*(t21832*t21833*t21847+t21842*t21905*t21888+ \
                   t21842*t21875*t21879-t21880*t21892*t21875*t21888+t21910*t21911*t21624*t21912*t21913*t21752*t21753* \
                   t21847*(3.0/2.0))*(1.0/2.0)+c0*t21823*t21934*t21818*t21937*(1.0/2.0))+c0*t21805*t21825*t21776*(1.0/ \
                   2.0)-c0*t21800*t21808*t21818*t21776*(1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                double t24028 = tspi_m13*tspi_m13;
                double t24029 = 1/pow(rho_a[index],1.0/3.0);
                double t24030 = a2*a2;
                double t24031 = gamma_aa[index]*gamma_aa[index];
                double t24032 = 1/pow(rho_a[index],1.6E1/3.0);
                double t24033 = t24028*t24028;
                double t24034 = c*t24029;
                double t24035 = a4*a4;
                double t24036 = 1/c;
                double t24037 = 1/pow(rho_a[index],7.0/3.0);
                double t24038 = sqrt(t24034);
                double t24039 = t24031*t24032*t24033*t24035*2.0;
                double t24040 = exp(t24039);
                double t24041 = t24031*t24032*t24033*t24035;
                double t24042 = t24041+1.0;
                double t24043 = 1/(t24042*t24042);
                double t24044 = a5*gamma_aa[index]*t24036*t24028*t24037;
                double t24045 = t24044+1.0;
                double t24057 = raa2*t24038;
                double t24046 = exp(-t24057);
                double t24047 = t24046-1.0;
                double t24048 = kaa2*t24047;
                double t24049 = pow(t24034,2.0/5.0);
                double t24058 = raa1*t24049;
                double t24050 = exp(-t24058);
                double t24051 = t24050-1.0;
                double t24052 = kaa1*t24051;
                double t24053 = -kaa0+t24052+t24048;
                double t24054 = 1/(t24053*t24053);
                double t24055 = c*c0*t24040*t24043*t24045*t24054*t24029*(2.0/3.0);
                double t24056 = 1/pow(rho_a[index],8.0/3.0);
                double t24059 = 1/pow(rho_a[index],1.7E1/3.0);
                double t24060 = exp(t24055);
                double t24061 = Ei(-t24055);
                double t24062 = 1/t24042;
                double t24063 = c*c0*t24040*t24045*t24054*t24029*(2.0/3.0);
                double t24064 = sqrt(t24063);
                double t24065 = 1/(t24042*t24042*t24042);
                double t24066 = t24062*t24064*6.0;
                double t24067 = c*c0*t24040*t24043*t24045*t24054*t24029*4.0;
                double t24068 = t24066+t24067+3.0;
                double t24069 = 1/t24068;
                double t24070 = a5*c0*t24040*t24043*t24054*t24028*t24056*(2.0/3.0);
                double t24071 = c*c0*gamma_aa[index]*t24040*t24033*t24043*t24035*t24045*t24054*t24059*(8.0/3.0);
                double t24082 = c*c0*gamma_aa[index]*t24040*t24033*t24035*t24045*t24054*t24065*t24059*(8.0/3.0);
                double t24072 = t24070+t24071-t24082;
                double t24073 = c*c0*t24040*t24060*t24043*t24061*t24045*t24054*t24029*(2.0/3.0);
                double t24074 = t24073+1.0;
                double t24075 = t24062*t24064*4.0;
                double t24076 = c*c0*t24040*t24043*t24045*t24054*t24029*(8.0/3.0);
                double t24077 = t24075+t24076+6.0;
                double t24078 = a5*c0*t24040*t24054*t24028*t24056*(2.0/3.0);
                double t24079 = c*c0*gamma_aa[index]*t24040*t24033*t24035*t24045*t24054*t24059*(8.0/3.0);
                double t24080 = t24078+t24079;
                double t24081 = 1/sqrt(t24063);
                double t24083 = t24030*t24031*t24032*t24033;
                double t24084 = pow(t24034,4.0/5.0);
                double t24192 = rab1*t24084;
                double t24085 = exp(-t24192);
                double t24086 = t24085-1.0;
                double t24193 = kab1*t24086;
                double t24087 = kab0-t24193;
                double t24088 = a3*gamma_aa[index]*t24036*t24028*t24037;
                double t24089 = t24088+1.0;
                double t24090 = 1/sqrt(t24089);
                double t24091 = a1*gamma_aa[index]*t24028*t24056;
                double t24092 = t24091+t24083+1.0;
                double t24093 = c*c;
                double t24094 = 1/pow(rho_a[index],2.0/3.0);
                double t24095 = k1*t24038;
                double t24096 = c*k2*t24029;
                double t24097 = t24095+t24096;
                double t24098 = 1/(t24097*t24097);
                double t24195 = t24093*t24094*t24098;
                double t24099 = exp(-t24195);
                double t24100 = 1/pow(rho_a[index],4.0/3.0);
                double t24101 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t24102 = 1/pow(rho_a[index],2.0E1/3.0);
                double t24103 = t24035*t24035;
                double t24104 = 1/pow(rho_a[index],1.2E1);
                double t24105 = t24033*t24033;
                double t24106 = 1/sqrt(t24034);
                double t24107 = c*kaa2*raa2*t24100*t24106*t24046*(1.0/6.0);
                double t24108 = 1/pow(t24034,3.0/5.0);
                double t24109 = c*kaa1*raa1*t24100*t24050*t24108*(2.0/1.5E1);
                double t24110 = t24107+t24109;
                double t24111 = 1/(t24053*t24053*t24053);
                double t24112 = t24062*t24080*t24081*2.0;
                double t24113 = a5*c0*t24040*t24043*t24054*t24028*t24056*(8.0/3.0);
                double t24114 = c*c0*gamma_aa[index]*t24040*t24033*t24043*t24035*t24045*t24054*t24059*(3.2E1/3.0) \
                   ;
                double t24156 = gamma_aa[index]*t24032*t24033*t24043*t24035*t24064*8.0;
                double t24157 = c*c0*gamma_aa[index]*t24040*t24033*t24035*t24045*t24054*t24065*t24059*(3.2E1/3.0) \
                   ;
                double t24115 = t24112+t24113+t24114-t24156-t24157;
                double t24116 = 1/pow(rho_a[index],1.1E1/3.0);
                double t24117 = c*c0*t24100*t24040*t24043*t24045*t24054*(2.0/9.0);
                double t24118 = a5*c0*gamma_aa[index]*t24040*t24043*t24116*t24054*t24028*(1.4E1/9.0);
                double t24119 = c*c0*t24110*t24111*t24040*t24043*t24045*t24029*(4.0/3.0);
                double t24120 = c*c0*t24102*t24031*t24040*t24033*t24043*t24035*t24045*t24054*(6.4E1/9.0);
                double t24121 = a5*c0*t24040*t24060*t24043*t24061*t24054*t24028*t24056*(2.0/3.0);
                double t24122 = c*c0*t24040*t24060*t24043*t24061*t24045*t24054*t24072*t24029*(2.0/3.0);
                double t24123 = c*c0*gamma_aa[index]*t24040*t24033*t24060*t24043*t24061*t24035*t24045*t24054*t24059* \
                   (8.0/3.0);
                double t24136 = c*c0*t24102*t24031*t24040*t24033*t24035*t24045*t24054*t24065*(6.4E1/9.0);
                double t24124 = t24120+t24117+t24118-t24136+t24119;
                double t24125 = 1/pow(rho_a[index],1.9E1/3.0);
                double t24126 = 1/t24045;
                double t24127 = a5*c0*t24040*t24043*t24116*t24054*t24028*(1.6E1/9.0);
                double t24128 = a5*c0*t24110*t24111*t24040*t24043*t24028*t24056*(4.0/3.0);
                double t24129 = a5*c0*t24101*t24031*t24040*t24033*t24043*t24035*t24054*t24028*(4.0E1/3.0);
                double t24130 = c*c0*gamma_aa[index]*t24102*t24040*t24033*t24043*t24035*t24045*t24054*(1.36E2/9.0) \
                   ;
                double t24131 = c*c0*gamma_aa[index]*t24031*t24040*t24103*t24104*t24105*t24043*t24045*t24054*(2.56E2/ \
                   9.0);
                double t24132 = 1/(t24042*t24042*t24042*t24042);
                double t24133 = c*c0*gamma_aa[index]*t24031*t24040*t24103*t24104*t24105*t24132*t24045*t24054*(1.28E2/ \
                   3.0);
                double t24134 = c*c0*gamma_aa[index]*t24110*t24111*t24040*t24033*t24043*t24035*t24045*t24059*(1.6E1/ \
                   3.0);
                double t24137 = c*c0*gamma_aa[index]*t24102*t24040*t24033*t24035*t24045*t24054*t24065*(1.36E2/9.0) \
                   ;
                double t24138 = c*c0*gamma_aa[index]*t24031*t24040*t24103*t24104*t24105*t24045*t24054*t24065*(5.12E2/ \
                   9.0);
                double t24139 = c*c0*gamma_aa[index]*t24110*t24111*t24040*t24033*t24035*t24045*t24065*t24059*(1.6E1/ \
                   3.0);
                double t24188 = a5*c0*t24101*t24031*t24040*t24033*t24035*t24054*t24028*t24065*(4.0E1/3.0);
                double t24135 = t24130+t24131+t24133+t24134+t24127+t24128-t24137+t24129-t24138-t24139-t24188;
                double t24140 = c*c0*t24100*t24040*t24045*t24054*(2.0/9.0);
                double t24141 = a5*c0*gamma_aa[index]*t24040*t24116*t24054*t24028*(1.4E1/9.0);
                double t24142 = c*c0*t24110*t24111*t24040*t24045*t24029*(4.0/3.0);
                double t24143 = c*c0*t24102*t24031*t24040*t24033*t24035*t24045*t24054*(6.4E1/9.0);
                double t24144 = t24140+t24141+t24142+t24143;
                double t24145 = 1/(t24068*t24068);
                double t24211 = c*c0*gamma_aa[index]*t24040*t24033*t24060*t24061*t24035*t24045*t24054*t24065*t24059* \
                   (8.0/3.0);
                double t24146 = t24121-t24211+t24122+t24123+t24070+t24071-t24082;
                double t24147 = a5*c0*t24040*t24116*t24054*t24028*(1.6E1/9.0);
                double t24148 = a5*c0*t24110*t24111*t24040*t24028*t24056*(4.0/3.0);
                double t24149 = a5*c0*t24101*t24031*t24040*t24033*t24035*t24054*t24028*(4.0E1/3.0);
                double t24150 = c*c0*gamma_aa[index]*t24102*t24040*t24033*t24035*t24045*t24054*(1.36E2/9.0);
                double t24151 = c*c0*gamma_aa[index]*t24031*t24040*t24103*t24104*t24105*t24045*t24054*(2.56E2/9.0) \
                   ;
                double t24152 = c*c0*gamma_aa[index]*t24110*t24111*t24040*t24033*t24035*t24045*t24059*(1.6E1/3.0) \
                   ;
                double t24153 = t24150+t24151+t24152+t24147+t24148+t24149;
                double t24154 = 1/pow(t24063,3.0/2.0);
                double t24155 = 1/pow(rho_a[index],3.5E1/3.0);
                double t24158 = t24062*t24081*t24144*3.0;
                double t24159 = c*c0*t24100*t24040*t24043*t24045*t24054*(4.0/3.0);
                double t24160 = a5*c0*gamma_aa[index]*t24040*t24043*t24116*t24054*t24028*(2.8E1/3.0);
                double t24161 = c*c0*t24110*t24111*t24040*t24043*t24045*t24029*8.0;
                double t24162 = c*c0*t24102*t24031*t24040*t24033*t24043*t24035*t24045*t24054*(1.28E2/3.0);
                double t24181 = t24031*t24033*t24043*t24035*t24125*t24064*3.2E1;
                double t24182 = c*c0*t24102*t24031*t24040*t24033*t24035*t24045*t24054*t24065*(1.28E2/3.0);
                double t24163 = t24160+t24161+t24162-t24181-t24182+t24158+t24159;
                double t24164 = t24062*t24080*t24081*3.0;
                double t24165 = a5*c0*t24040*t24043*t24054*t24028*t24056*4.0;
                double t24166 = c*c0*gamma_aa[index]*t24040*t24033*t24043*t24035*t24045*t24054*t24059*1.6E1;
                double t24174 = gamma_aa[index]*t24032*t24033*t24043*t24035*t24064*1.2E1;
                double t24175 = c*c0*gamma_aa[index]*t24040*t24033*t24035*t24045*t24054*t24065*t24059*1.6E1;
                double t24167 = t24164+t24165-t24174+t24166-t24175;
                double t24168 = t24062*t24081*t24144*2.0;
                double t24169 = c*c0*t24100*t24040*t24043*t24045*t24054*(8.0/9.0);
                double t24170 = a5*c0*gamma_aa[index]*t24040*t24043*t24116*t24054*t24028*(5.6E1/9.0);
                double t24171 = c*c0*t24110*t24111*t24040*t24043*t24045*t24029*(1.6E1/3.0);
                double t24172 = c*c0*t24102*t24031*t24040*t24033*t24043*t24035*t24045*t24054*(2.56E2/9.0);
                double t24206 = t24031*t24033*t24043*t24035*t24125*t24064*(6.4E1/3.0);
                double t24207 = c*c0*t24102*t24031*t24040*t24033*t24035*t24045*t24054*t24065*(2.56E2/9.0);
                double t24173 = t24170-t24206+t24171-t24207+t24172+t24168+t24169;
                double t24176 = c*c0*t24100*t24040*t24060*t24043*t24061*t24045*t24054*(2.0/9.0);
                double t24177 = c*c0*t24110*t24111*t24040*t24060*t24043*t24061*t24045*t24029*(4.0/3.0);
                double t24178 = c*c0*t24040*t24060*t24043*t24061*t24124*t24045*t24054*t24029*(2.0/3.0);
                double t24179 = a5*c0*gamma_aa[index]*t24040*t24060*t24043*t24061*t24116*t24054*t24028*(1.4E1/9.0) \
                   ;
                double t24180 = c*c0*t24102*t24031*t24040*t24033*t24060*t24043*t24061*t24035*t24045*t24054*(6.4E1/ \
                   9.0);
                double t24183 = 1/c0;
                double t24184 = pow(rho_a[index],1.0/3.0);
                double t24185 = exp(-t24039);
                double t24186 = t24042*t24042;
                double t24187 = t24053*t24053;
                double t24189 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t24208 = c*c0*t24102*t24031*t24040*t24033*t24060*t24061*t24035*t24045*t24054*t24065*(6.4E1/ \
                   9.0);
                double t24190 = t24120+t24117+t24180+t24118-t24136-t24208+t24119+t24176+t24177+t24178+t24179;
                double t24191 = exp(-t24083);
                double t24194 = t24090*t24092*t24191*t24087*1.0E5;
                double t24196 = c*c0*t24029*(2.0/3.0);
                double t24197 = -t24194+t24196;
                double t24198 = 0.0 ;
                double t24199 = a1*t24028*t24056;
                double t24200 = gamma_aa[index]*t24030*t24032*t24033*2.0;
                double t24201 = t24200+t24199;
                double t24202 = 1/pow(t24089,3.0/2.0);
                double t24203 = a3*t24202*t24036*t24028*t24037*t24092*t24191*t24087*5.0E4;
                double t24204 = gamma_aa[index]*t24030*t24032*t24033*t24090*t24092*t24191*t24087*2.0E5;
                double t24231 = t24201*t24090*t24191*t24087*1.0E5;
                double t24205 = t24203+t24204-t24231;
                double t24209 = t24060*t24061*t24072;
                double t24210 = t24115*t24074*t24069;
                double t24212 = t24036*t24072*t24126*t24183*t24184*t24185*t24186*t24187*(3.0/2.0);
                double t24213 = t24060*t24061;
                double t24214 = t24074*t24077*t24069;
                double t24215 = t24213+t24214;
                double t24216 = 1/pow(rho_a[index],1.0E1/3.0);
                double t24217 = t24030*t24031*t24033*t24125*(1.6E1/3.0);
                double t24218 = a1*gamma_aa[index]*t24116*t24028*(8.0/3.0);
                double t24219 = t24217+t24218;
                double t24220 = 1/(c*c);
                double t24221 = 1/pow(t24034,1.0/5.0);
                double t24222 = t24146*t24077*t24069;
                double t24223 = t24210+t24212+t24222+t24209-t24145*t24074*t24077*t24167;
                double t24224 = 1/pow(rho_a[index],5.0/3.0);
                double t24225 = t24224*t24093*t24098*(2.0/3.0);
                double t24226 = 1/(t24097*t24097*t24097);
                double t24227 = c*k2*t24100*(1.0/3.0);
                double t24228 = c*k1*t24100*t24106*(1.0/6.0);
                double t24229 = t24227+t24228;
                double t24230 = t24225-t24226*t24093*t24094*t24229*2.0;
                double t24232 = c*c0*t24100*(2.0/9.0);
                double t24233 = t24030*t24031*t24033*t24125*t24090*t24092*t24191*t24087*(1.6E6/3.0);
                double t24234 = a3*gamma_aa[index]*t24202*t24036*t24216*t24028*t24092*t24191*t24087*(3.5E5/3.0);
                double t24235 = t24232+t24233+t24234-t24090*t24191*t24219*t24087*1.0E5-c*kab1*rab1*t24100*t24221* \
                   t24090*t24092*t24191*t24085*(8.0E4/3.0);
                v_rho_a_gamma_aa_[index] = ( (c*c0*t24029*(-2.0/3.0)+t24090*t24092*t24087*exp(-t24030*t24031*t24032* \
                   t24033)*1.0E5 > 0.0) ?  c0*t24099*1.0*(t24210+t24212+t24209+t24077*t24069*(t24121+t24122+t24123+t24070+ \
                   t24071-c*c0*gamma_aa[index]*t24040*t24033*t24035*t24045*t24054*t24065*t24059*(8.0/3.0)-c*c0*gamma_aa[index]* \
                   t24040*t24033*t24060*t24061*t24035*t24045*t24054*t24065*t24059*(8.0/3.0))-t24145*t24074*t24077*t24167) \
                   *(1.0/2.0) : 0.0 ) -c0*t24205*t24215*t24099*t24198*(1.0/2.0)- ( (t24194-c*c0*t24029*(2.0/3.0) > 0.0) \
                    ? c0*rho_a[index]*t24099*1.0*(t24074*t24069*(t24062*t24081*t24153*2.0-t24062*t24080*t24144*t24154- \
                   gamma_aa[index]*t24033*t24043*t24035*t24125*t24064*(1.28E2/3.0)+a5*c0*t24040*t24043*t24116*t24054* \
                   t24028*(6.4E1/9.0)-gamma_aa[index]*t24032*t24033*t24043*t24035*t24081*t24144*4.0+gamma_aa[index]*t24031* \
                   t24103*t24105*t24064*t24065*t24155*(2.56E2/3.0)-t24031*t24033*t24043*t24035*t24080*t24125*t24081*(3.2E1/ \
                   3.0)+a5*c0*t24110*t24111*t24040*t24043*t24028*t24056*(1.6E1/3.0)+c*c0*gamma_aa[index]*t24102*t24040* \
                   t24033*t24043*t24035*t24045*t24054*(5.44E2/9.0)-c*c0*gamma_aa[index]*t24102*t24040*t24033*t24035*t24045* \
                   t24054*t24065*(5.44E2/9.0)+a5*c0*t24101*t24031*t24040*t24033*t24043*t24035*t24054*t24028*(1.6E2/3.0) \
                   -a5*c0*t24101*t24031*t24040*t24033*t24035*t24054*t24028*t24065*(1.6E2/3.0)+c*c0*gamma_aa[index]*t24031* \
                   t24040*t24103*t24104*t24105*t24132*t24045*t24054*(5.12E2/3.0)+c*c0*gamma_aa[index]*t24031*t24040*t24103* \
                   t24104*t24105*t24043*t24045*t24054*(1.024E3/9.0)-c*c0*gamma_aa[index]*t24031*t24040*t24103*t24104* \
                   t24105*t24045*t24054*t24065*(2.048E3/9.0)+c*c0*gamma_aa[index]*t24110*t24111*t24040*t24033*t24043* \
                   t24035*t24045*t24059*(6.4E1/3.0)-c*c0*gamma_aa[index]*t24110*t24111*t24040*t24033*t24035*t24045*t24065* \
                   t24059*(6.4E1/3.0))+t24060*t24061*t24135+t24115*t24190*t24069+t24146*t24173*t24069+t24077*t24069*(t24130+ \
                   t24131+t24133+t24134+t24127+t24128-t24137+t24129-t24138-t24139-t24188+t24124*t24072+(t24072*(1.0/3.0) \
                   )/rho_a[index]+(t24110*t24072*2.0)/t24053+t24031*t24033*t24035*t24125*t24072*(3.2E1/3.0)-t24031*t24033* \
                   t24035*t24062*t24125*t24072*(3.2E1/3.0)+a5*gamma_aa[index]*t24036*t24072*t24126*t24216*t24028*(7.0/ \
                   3.0)+a5*c0*t24040*t24060*t24043*t24061*t24116*t24054*t24028*(1.6E1/9.0)+a5*c0*t24110*t24111*t24040* \
                   t24060*t24043*t24061*t24028*t24056*(4.0/3.0)+a5*c0*t24040*t24060*t24043*t24061*t24124*t24054*t24028* \
                   t24056*(2.0/3.0)+c*c0*t24100*t24040*t24060*t24043*t24061*t24045*t24054*t24072*(2.0/9.0)+c*c0*t24040* \
                   t24060*t24043*t24061*t24045*t24054*t24135*t24029*(2.0/3.0)+a5*c0*gamma_aa[index]*t24040*t24060*t24043* \
                   t24061*t24116*t24054*t24072*t24028*(1.4E1/9.0)+c*c0*t24110*t24111*t24040*t24060*t24043*t24061*t24045* \
                   t24072*t24029*(4.0/3.0)+c*c0*t24040*t24060*t24043*t24061*t24124*t24045*t24054*t24072*t24029*(2.0/3.0) \
                   +c*c0*gamma_aa[index]*t24102*t24040*t24033*t24060*t24043*t24061*t24035*t24045*t24054*(1.36E2/9.0)- \
                   c*c0*gamma_aa[index]*t24102*t24040*t24033*t24060*t24061*t24035*t24045*t24054*t24065*(1.36E2/9.0)+a5* \
                   c0*t24101*t24031*t24040*t24033*t24060*t24043*t24061*t24035*t24054*t24028*(4.0E1/3.0)-a5*c0*t24101* \
                   t24031*t24040*t24033*t24060*t24061*t24035*t24054*t24028*t24065*(4.0E1/3.0)+c*c0*gamma_aa[index]*t24031* \
                   t24040*t24103*t24104*t24060*t24105*t24132*t24061*t24045*t24054*(1.28E2/3.0)+c*c0*gamma_aa[index]*t24031* \
                   t24040*t24103*t24104*t24060*t24105*t24043*t24061*t24045*t24054*(2.56E2/9.0)-c*c0*gamma_aa[index]*t24031* \
                   t24040*t24103*t24104*t24060*t24105*t24061*t24045*t24054*t24065*(5.12E2/9.0)+c*c0*gamma_aa[index]*t24110* \
                   t24111*t24040*t24033*t24060*t24043*t24061*t24035*t24045*t24059*(1.6E1/3.0)-c*c0*gamma_aa[index]*t24110* \
                   t24111*t24040*t24033*t24060*t24061*t24035*t24045*t24065*t24059*(1.6E1/3.0)+c*c0*gamma_aa[index]*t24040* \
                   t24033*t24060*t24043*t24061*t24124*t24035*t24045*t24054*t24059*(8.0/3.0)-c*c0*gamma_aa[index]*t24040* \
                   t24033*t24060*t24061*t24124*t24035*t24045*t24054*t24065*t24059*(8.0/3.0)+c*c0*t24102*t24031*t24040* \
                   t24033*t24060*t24043*t24061*t24035*t24045*t24054*t24072*(6.4E1/9.0)-c*c0*t24102*t24031*t24040*t24033* \
                   t24060*t24061*t24035*t24045*t24054*t24072*t24065*(6.4E1/9.0))+t24060*t24061*t24124*t24072-t24115*t24145* \
                   t24163*t24074-t24145*t24163*t24146*t24077-t24145*t24074*t24173*t24167-t24145*t24190*t24077*t24167- \
                   t24145*t24074*t24077*(t24062*t24081*t24153*3.0-t24062*t24080*t24144*t24154*(3.0/2.0)-gamma_aa[index]* \
                   t24033*t24043*t24035*t24125*t24064*6.4E1+a5*c0*t24040*t24043*t24116*t24054*t24028*(3.2E1/3.0)-gamma_aa[index]* \
                   t24032*t24033*t24043*t24035*t24081*t24144*6.0+gamma_aa[index]*t24031*t24103*t24105*t24064*t24065*t24155* \
                   1.28E2-t24031*t24033*t24043*t24035*t24080*t24125*t24081*1.6E1+a5*c0*t24110*t24111*t24040*t24043*t24028* \
                   t24056*8.0+c*c0*gamma_aa[index]*t24102*t24040*t24033*t24043*t24035*t24045*t24054*(2.72E2/3.0)-c*c0* \
                   gamma_aa[index]*t24102*t24040*t24033*t24035*t24045*t24054*t24065*(2.72E2/3.0)+a5*c0*t24101*t24031* \
                   t24040*t24033*t24043*t24035*t24054*t24028*8.0E1-a5*c0*t24101*t24031*t24040*t24033*t24035*t24054*t24028* \
                   t24065*8.0E1+c*c0*gamma_aa[index]*t24031*t24040*t24103*t24104*t24105*t24132*t24045*t24054*2.56E2+c* \
                   c0*gamma_aa[index]*t24031*t24040*t24103*t24104*t24105*t24043*t24045*t24054*(5.12E2/3.0)-c*c0*gamma_aa[index]* \
                   t24031*t24040*t24103*t24104*t24105*t24045*t24054*t24065*(1.024E3/3.0)+c*c0*gamma_aa[index]*t24110* \
                   t24111*t24040*t24033*t24043*t24035*t24045*t24059*3.2E1-c*c0*gamma_aa[index]*t24110*t24111*t24040*t24033* \
                   t24035*t24045*t24065*t24059*3.2E1)+t24163*t24074*1/(t24068*t24068*t24068)*t24077*t24167*2.0+t24036* \
                   t24126*t24135*t24183*t24184*t24185*t24186*t24187*(3.0/2.0)+t24124*t24036*t24072*t24126*t24183*t24184* \
                   t24185*t24186*t24187*(3.0/2.0)-a5*1/(rho_a[index]*rho_a[index])*t24220*t24124*1/(t24045*t24045)*t24028* \
                   t24183*t24185*t24186*t24187*(3.0/2.0)+gamma_aa[index]*t24033*t24042*t24124*t24035*t24036*t24126*t24183* \
                   t24185*t24187*t24189*6.0-gamma_aa[index]*t24033*t24124*t24035*t24036*t24126*t24183*t24185*t24186*t24187* \
                   t24189*6.0)*(1.0/2.0) : 0.0 ) +c0*rho_a[index]*t24223*t24235*t24099*t24198*(1.0/2.0)+c0*rho_a[index]* \
                   t24215*t24099*t24198*(t24090*t24191*t24087*(a1*t24116*t24028*(8.0/3.0)+gamma_aa[index]*t24030*t24033* \
                   t24125*(3.2E1/3.0))*-1.0E5+t24030*t24201*t24031*t24033*t24125*t24090*t24191*t24087*(1.6E6/3.0)+a3* \
                   t24202*t24036*t24216*t24028*t24092*t24191*t24087*(3.5E5/3.0)+a3*t24202*t24036*t24028*t24037*t24191* \
                   t24219*t24087*5.0E4+gamma_aa[index]*t24030*t24032*t24033*t24090*t24191*t24219*t24087*2.0E5+gamma_aa[index]* \
                   t24030*t24033*t24125*t24090*t24092*t24191*t24087*(3.2E6/3.0)-(a3*a3)*gamma_aa[index]*t24220*t24033* \
                   t24092*t24191*t24059*t24087*1/pow(t24089,5.0/2.0)*1.75E5+a3*gamma_aa[index]*t24201*t24202*t24036*t24216* \
                   t24028*t24191*t24087*(3.5E5/3.0)-c*kab1*rab1*t24100*t24201*t24221*t24090*t24191*t24085*(8.0E4/3.0) \
                   -gamma_aa[index]*(t24030*t24030)*t24031*t24105*t24090*t24092*t24155*t24191*t24087*(3.2E6/3.0)+a3*kab1* \
                   rab1*t24202*t24221*t24116*t24028*t24092*t24191*t24085*(4.0E4/3.0)-a3*1/pow(rho_a[index],2.6E1/3.0) \
                   *t24030*t24031*t24202*t24033*t24036*t24028*t24092*t24191*t24087*5.0E5+c*gamma_aa[index]*kab1*rab1* \
                   t24030*t24102*t24221*t24033*t24090*t24092*t24191*t24085*(1.6E5/3.0))*(1.0/2.0)+c0*rho_a[index]*t24205* \
                   t24099*t24198*(t24060*t24061*t24124+t24074*t24173*t24069+t24190*t24077*t24069-t24145*t24163*t24074* \
                   t24077+t24124*t24036*t24126*t24183*t24184*t24185*t24186*t24187*(3.0/2.0))*(1.0/2.0)+ ( (t24194-t24196  \
                   > 0.0) ? c0*rho_a[index]*t24230*t24223*t24099*1.0*(1.0/2.0) : 0.0 ) -c0*rho_a[index]*t24230*t24205* \
                   t24215*t24099*t24198*(1.0/2.0)+ 0.0 ;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t21941 = tspi_m13*tspi_m13;
                double t21942 = 1/pow(rho_b[index],1.0/3.0);
                double t21943 = a2*a2;
                double t21944 = gamma_bb[index]*gamma_bb[index];
                double t21945 = 1/pow(rho_b[index],1.6E1/3.0);
                double t21946 = t21941*t21941;
                double t21947 = t21943*t21944*t21945*t21946*2.0;
                double t21948 = exp(t21947);
                double t21949 = c*t21942;
                double t21950 = pow(t21949,4.0/5.0);
                double t21962 = rab1*t21950;
                double t21951 = exp(-t21962);
                double t21952 = t21951-1.0;
                double t21963 = kab1*t21952;
                double t21953 = kab0-t21963;
                double t21954 = 1/c;
                double t21955 = 1/pow(rho_b[index],7.0/3.0);
                double t21956 = a3*gamma_bb[index]*t21941*t21954*t21955;
                double t21957 = t21956+1.0;
                double t21958 = t21943*t21944*t21945*t21946;
                double t21959 = 1/pow(rho_b[index],8.0/3.0);
                double t21960 = a1*gamma_bb[index]*t21941*t21959;
                double t21961 = t21960+t21958+1.0;
                double t21964 = 1/(t21953*t21953);
                double t21965 = 1/(t21961*t21961);
                double t21966 = c*c0*t21942*t21964*t21965*t21948*t21957*(2.0/3.0);
                double t21967 = a1*t21941*t21959;
                double t21968 = gamma_bb[index]*t21943*t21945*t21946*2.0;
                double t21969 = t21967+t21968;
                double t21970 = 1/(t21961*t21961*t21961);
                double t21971 = 1/pow(rho_b[index],1.7E1/3.0);
                double t21972 = exp(t21966);
                double t21973 = Ei(-t21966);
                double t21974 = a3*c0*t21941*t21964*t21965*t21948*t21959*(2.0/3.0);
                double t21975 = c*c0*gamma_bb[index]*t21943*t21971*t21946*t21964*t21965*t21948*t21957*(8.0/3.0);
                double t21982 = c*c0*t21942*t21970*t21964*t21948*t21957*t21969*(4.0/3.0);
                double t21976 = -t21982+t21974+t21975;
                double t21977 = sqrt(t21966);
                double t21978 = t21977*6.0;
                double t21979 = c*c0*t21942*t21964*t21965*t21948*t21957*4.0;
                double t21980 = t21978+t21979+3.0;
                double t21981 = 1/t21980;
                double t21983 = c*c0*t21942*t21972*t21964*t21973*t21965*t21948*t21957*(2.0/3.0);
                double t21984 = t21983+1.0;
                double t21985 = t21977*4.0;
                double t21986 = c*c0*t21942*t21964*t21965*t21948*t21957*(8.0/3.0);
                double t21987 = t21985+t21986+6.0;
                double t21988 = 1/sqrt(t21966);
                double t21989 = 1/sqrt(t21957);
                double t21990 = exp(-t21958);
                v_rho_a_gamma_bb_[index] = ( (c*c0*t21942*(-2.0/3.0)+t21961*t21953*t21989*exp(-t21943*t21944*t21945* \
                   t21946)*1.0E5 > 0.0) ?  c0*1.0*(t21972*t21973*t21976+t21981*t21987*(-t21982+t21974+t21975+a3*c0*t21941* \
                   t21972*t21964*t21973*t21965*t21948*t21959*(2.0/3.0)-c*c0*t21942*t21970*t21972*t21964*t21973*t21948* \
                   t21957*t21969*(4.0/3.0)+c*c0*t21942*t21972*t21964*t21973*t21965*t21948*t21957*t21976*(2.0/3.0)+c*c0* \
                   gamma_bb[index]*t21943*t21971*t21972*t21946*t21964*t21973*t21965*t21948*t21957*(8.0/3.0))+t21981*t21984* \
                   (t21976*t21988*2.0+a3*c0*t21941*t21964*t21965*t21948*t21959*(8.0/3.0)-c*c0*t21942*t21970*t21964*t21948* \
                   t21957*t21969*(1.6E1/3.0)+c*c0*gamma_bb[index]*t21943*t21971*t21946*t21964*t21965*t21948*t21957*(3.2E1/ \
                   3.0))-1/(t21980*t21980)*t21984*t21987*(t21976*t21988*3.0+a3*c0*t21941*t21964*t21965*t21948*t21959* \
                   4.0-c*c0*t21942*t21970*t21964*t21948*t21957*t21969*8.0+c*c0*gamma_bb[index]*t21943*t21971*t21946*t21964* \
                   t21965*t21948*t21957*1.6E1)+(pow(rho_b[index],1.0/3.0)*(t21961*t21961)*(t21953*t21953)*t21954*t21976* \
                   exp(-t21947)*(3.0/2.0))/(c0*t21957))*(1.0/2.0) : 0.0 ) - 0.0 ;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t21992 = tspi_m13*tspi_m13;
                double t21993 = 1/pow(rho_a[index],1.0/3.0);
                double t21994 = a2*a2;
                double t21995 = gamma_aa[index]*gamma_aa[index];
                double t21996 = 1/pow(rho_a[index],1.6E1/3.0);
                double t21997 = t21992*t21992;
                double t21998 = t21994*t21995*t21996*t21997*2.0;
                double t21999 = exp(t21998);
                double t22000 = c*t21993;
                double t22001 = pow(t22000,4.0/5.0);
                double t22013 = rab1*t22001;
                double t22002 = exp(-t22013);
                double t22003 = t22002-1.0;
                double t22014 = kab1*t22003;
                double t22004 = kab0-t22014;
                double t22005 = 1/c;
                double t22006 = 1/pow(rho_a[index],7.0/3.0);
                double t22007 = a3*gamma_aa[index]*t21992*t22005*t22006;
                double t22008 = t22007+1.0;
                double t22009 = t21994*t21995*t21996*t21997;
                double t22010 = 1/pow(rho_a[index],8.0/3.0);
                double t22011 = a1*gamma_aa[index]*t21992*t22010;
                double t22012 = t22011+t22009+1.0;
                double t22015 = 1/(t22004*t22004);
                double t22016 = 1/(t22012*t22012);
                double t22017 = c*c0*t21993*t21999*t22015*t22016*t22008*(2.0/3.0);
                double t22018 = a1*t21992*t22010;
                double t22019 = gamma_aa[index]*t21994*t21996*t21997*2.0;
                double t22020 = t22018+t22019;
                double t22021 = 1/(t22012*t22012*t22012);
                double t22022 = 1/pow(rho_a[index],1.7E1/3.0);
                double t22023 = exp(t22017);
                double t22024 = Ei(-t22017);
                double t22025 = a3*c0*t21992*t21999*t22010*t22015*t22016*(2.0/3.0);
                double t22026 = c*c0*gamma_aa[index]*t21994*t21997*t21999*t22022*t22015*t22016*t22008*(8.0/3.0);
                double t22033 = c*c0*t21993*t21999*t22020*t22021*t22015*t22008*(4.0/3.0);
                double t22027 = -t22033+t22025+t22026;
                double t22028 = sqrt(t22017);
                double t22029 = t22028*6.0;
                double t22030 = c*c0*t21993*t21999*t22015*t22016*t22008*4.0;
                double t22031 = t22030+t22029+3.0;
                double t22032 = 1/t22031;
                double t22034 = c*c0*t21993*t21999*t22023*t22015*t22024*t22016*t22008*(2.0/3.0);
                double t22035 = t22034+1.0;
                double t22036 = t22028*4.0;
                double t22037 = c*c0*t21993*t21999*t22015*t22016*t22008*(8.0/3.0);
                double t22038 = t22036+t22037+6.0;
                double t22039 = 1/sqrt(t22017);
                double t22040 = 1/sqrt(t22008);
                double t22041 = exp(-t22009);
                v_rho_b_gamma_aa_[index] = ( (c*c0*t21993*(-2.0/3.0)+t22012*t22004*t22040*exp(-t21994*t21995*t21996* \
                   t21997)*1.0E5 > 0.0) ?  c0*1.0*(t22023*t22024*t22027+t22032*t22038*(-t22033+t22025+t22026+a3*c0*t21992* \
                   t21999*t22010*t22023*t22015*t22024*t22016*(2.0/3.0)-c*c0*t21993*t21999*t22020*t22021*t22023*t22015* \
                   t22024*t22008*(4.0/3.0)+c*c0*t21993*t21999*t22023*t22015*t22024*t22016*t22008*t22027*(2.0/3.0)+c*c0* \
                   gamma_aa[index]*t21994*t21997*t21999*t22022*t22023*t22015*t22024*t22016*t22008*(8.0/3.0))+t22032*t22035* \
                   (t22027*t22039*2.0+a3*c0*t21992*t21999*t22010*t22015*t22016*(8.0/3.0)-c*c0*t21993*t21999*t22020*t22021* \
                   t22015*t22008*(1.6E1/3.0)+c*c0*gamma_aa[index]*t21994*t21997*t21999*t22022*t22015*t22016*t22008*(3.2E1/ \
                   3.0))-1/(t22031*t22031)*t22035*t22038*(t22027*t22039*3.0+a3*c0*t21992*t21999*t22010*t22015*t22016* \
                   4.0-c*c0*t21993*t21999*t22020*t22021*t22015*t22008*8.0+c*c0*gamma_aa[index]*t21994*t21997*t21999*t22022* \
                   t22015*t22016*t22008*1.6E1)+(pow(rho_a[index],1.0/3.0)*(t22012*t22012)*(t22004*t22004)*t22005*t22027* \
                   exp(-t21998)*(3.0/2.0))/(c0*t22008))*(1.0/2.0) : 0.0 ) - 0.0 ;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t22044 = tspi_m13*tspi_m13;
                double t22045 = 1/pow(rho_b[index],1.0/3.0);
                double t22046 = a2*a2;
                double t22047 = gamma_bb[index]*gamma_bb[index];
                double t22048 = 1/pow(rho_b[index],1.6E1/3.0);
                double t22049 = t22044*t22044;
                double t22050 = c*t22045;
                double t22051 = a4*a4;
                double t22052 = 1/c;
                double t22053 = 1/pow(rho_b[index],7.0/3.0);
                double t22054 = sqrt(t22050);
                double t22055 = t22051*t22047*t22048*t22049*2.0;
                double t22056 = exp(t22055);
                double t22057 = t22051*t22047*t22048*t22049;
                double t22058 = t22057+1.0;
                double t22059 = 1/(t22058*t22058);
                double t22060 = a5*gamma_bb[index]*t22052*t22044*t22053;
                double t22061 = t22060+1.0;
                double t22072 = raa2*t22054;
                double t22062 = exp(-t22072);
                double t22063 = t22062-1.0;
                double t22064 = kaa2*t22063;
                double t22065 = pow(t22050,2.0/5.0);
                double t22073 = raa1*t22065;
                double t22066 = exp(-t22073);
                double t22067 = t22066-1.0;
                double t22068 = kaa1*t22067;
                double t22069 = -kaa0+t22064+t22068;
                double t22070 = 1/(t22069*t22069);
                double t22071 = c*c0*t22061*t22070*t22045*t22056*t22059*(2.0/3.0);
                double t22074 = 1/pow(rho_b[index],8.0/3.0);
                double t22075 = 1/pow(rho_b[index],4.0/3.0);
                double t22076 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t22077 = 1/pow(rho_b[index],2.0E1/3.0);
                double t22078 = 1/(t22058*t22058*t22058);
                double t22079 = t22051*t22051;
                double t22080 = 1/pow(rho_b[index],1.2E1);
                double t22081 = t22049*t22049;
                double t22082 = 1/sqrt(t22050);
                double t22083 = c*kaa2*raa2*t22062*t22082*t22075*(1.0/6.0);
                double t22084 = 1/pow(t22050,3.0/5.0);
                double t22085 = c*kaa1*raa1*t22066*t22075*t22084*(2.0/1.5E1);
                double t22086 = t22083+t22085;
                double t22087 = 1/(t22069*t22069*t22069);
                double t22088 = 1/pow(rho_b[index],1.7E1/3.0);
                double t22089 = 1/t22058;
                double t22090 = c*c0*t22061*t22070*t22045*t22056*(2.0/3.0);
                double t22091 = sqrt(t22090);
                double t22092 = 1/pow(rho_b[index],1.1E1/3.0);
                double t22093 = exp(t22071);
                double t22094 = Ei(-t22071);
                double t22095 = c*c0*t22061*t22070*t22056*t22075*t22059*(2.0/9.0);
                double t22096 = a5*c0*gamma_bb[index]*t22070*t22044*t22056*t22092*t22059*(1.4E1/9.0);
                double t22097 = c*c0*t22061*t22045*t22056*t22059*t22086*t22087*(4.0/3.0);
                double t22098 = c*c0*t22051*t22061*t22070*t22047*t22056*t22049*t22059*t22077*(6.4E1/9.0);
                double t22099 = t22091*t22089*6.0;
                double t22100 = c*c0*t22061*t22070*t22045*t22056*t22059*4.0;
                double t22101 = t22100+t22099+3.0;
                double t22102 = 1/t22101;
                double t22103 = a5*c0*t22070*t22044*t22056*t22074*t22059*(2.0/3.0);
                double t22104 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22059*t22088*(8.0/3.0);
                double t22105 = 1/sqrt(t22090);
                double t22108 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22078*t22088*(8.0/3.0);
                double t22106 = t22103+t22104-t22108;
                double t22119 = c*c0*t22051*t22061*t22070*t22047*t22056*t22049*t22077*t22078*(6.4E1/9.0);
                double t22107 = -t22119+t22095+t22096+t22097+t22098;
                double t22109 = 1/pow(rho_b[index],1.9E1/3.0);
                double t22110 = a5*c0*t22070*t22044*t22056*t22092*t22059*(1.6E1/9.0);
                double t22111 = a5*c0*t22044*t22056*t22074*t22059*t22086*t22087*(4.0/3.0);
                double t22112 = a5*c0*t22051*t22070*t22044*t22047*t22056*t22049*t22076*t22059*(4.0E1/3.0);
                double t22113 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22059*t22077*(1.36E2/9.0) \
                   ;
                double t22114 = c*c0*gamma_bb[index]*t22061*t22070*t22080*t22081*t22047*t22056*t22059*t22079*(2.56E2/ \
                   9.0);
                double t22115 = 1/(t22058*t22058*t22058*t22058);
                double t22116 = c*c0*gamma_bb[index]*t22061*t22070*t22115*t22080*t22081*t22047*t22056*t22079*(1.28E2/ \
                   3.0);
                double t22117 = c*c0*gamma_bb[index]*t22051*t22061*t22056*t22049*t22059*t22086*t22087*t22088*(1.6E1/ \
                   3.0);
                double t22120 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22077*t22078*(1.36E2/9.0) \
                   ;
                double t22121 = c*c0*gamma_bb[index]*t22061*t22070*t22080*t22081*t22047*t22056*t22078*t22079*(5.12E2/ \
                   9.0);
                double t22122 = c*c0*gamma_bb[index]*t22051*t22061*t22056*t22049*t22086*t22078*t22087*t22088*(1.6E1/ \
                   3.0);
                double t22179 = a5*c0*t22051*t22070*t22044*t22047*t22056*t22049*t22076*t22078*(4.0E1/3.0);
                double t22118 = t22110+t22111-t22120+t22112-t22121+t22113-t22122+t22114+t22116+t22117-t22179;
                double t22123 = a5*c0*t22070*t22044*t22056*t22074*(2.0/3.0);
                double t22124 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22088*(8.0/3.0);
                double t22125 = t22123+t22124;
                double t22126 = c*c0*t22061*t22070*t22056*t22075*(2.0/9.0);
                double t22127 = a5*c0*gamma_bb[index]*t22070*t22044*t22056*t22092*(1.4E1/9.0);
                double t22128 = c*c0*t22061*t22045*t22056*t22086*t22087*(4.0/3.0);
                double t22129 = c*c0*t22051*t22061*t22070*t22047*t22056*t22049*t22077*(6.4E1/9.0);
                double t22130 = t22126+t22127+t22128+t22129;
                double t22131 = t22091*t22089*4.0;
                double t22132 = c*c0*t22061*t22070*t22045*t22056*t22059*(8.0/3.0);
                double t22133 = t22131+t22132+6.0;
                double t22134 = a5*c0*t22070*t22044*t22056*t22074*t22093*t22094*t22059*(2.0/3.0);
                double t22135 = c*c0*t22061*t22070*t22106*t22045*t22056*t22093*t22094*t22059*(2.0/3.0);
                double t22136 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22093*t22049*t22094*t22059*t22088* \
                   (8.0/3.0);
                double t22137 = c*c0*t22061*t22070*t22045*t22056*t22093*t22094*t22059*(2.0/3.0);
                double t22138 = t22137+1.0;
                double t22139 = 1/(t22101*t22101);
                double t22140 = a5*c0*t22070*t22044*t22056*t22092*(1.6E1/9.0);
                double t22141 = a5*c0*t22044*t22056*t22074*t22086*t22087*(4.0/3.0);
                double t22142 = a5*c0*t22051*t22070*t22044*t22047*t22056*t22049*t22076*(4.0E1/3.0);
                double t22143 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22077*(1.36E2/9.0);
                double t22144 = c*c0*gamma_bb[index]*t22061*t22070*t22080*t22081*t22047*t22056*t22079*(2.56E2/9.0) \
                   ;
                double t22145 = c*c0*gamma_bb[index]*t22051*t22061*t22056*t22049*t22086*t22087*t22088*(1.6E1/3.0) \
                   ;
                double t22146 = t22140+t22141+t22142+t22143+t22144+t22145;
                double t22147 = 1/pow(t22090,3.0/2.0);
                double t22148 = 1/pow(rho_b[index],3.5E1/3.0);
                double t22149 = t22105*t22125*t22089*2.0;
                double t22150 = a5*c0*t22070*t22044*t22056*t22074*t22059*(8.0/3.0);
                double t22151 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22059*t22088*(3.2E1/3.0) \
                   ;
                double t22213 = gamma_bb[index]*t22051*t22091*t22048*t22049*t22059*8.0;
                double t22214 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22078*t22088*(3.2E1/3.0) \
                   ;
                double t22152 = t22150-t22213+t22151-t22214+t22149;
                double t22153 = t22130*t22105*t22089*3.0;
                double t22154 = c*c0*t22061*t22070*t22056*t22075*t22059*(4.0/3.0);
                double t22155 = a5*c0*gamma_bb[index]*t22070*t22044*t22056*t22092*t22059*(2.8E1/3.0);
                double t22156 = c*c0*t22061*t22045*t22056*t22059*t22086*t22087*8.0;
                double t22157 = c*c0*t22051*t22061*t22070*t22047*t22056*t22049*t22059*t22077*(1.28E2/3.0);
                double t22176 = t22051*t22091*t22109*t22047*t22049*t22059*3.2E1;
                double t22177 = c*c0*t22051*t22061*t22070*t22047*t22056*t22049*t22077*t22078*(1.28E2/3.0);
                double t22158 = t22153+t22154+t22155+t22156+t22157-t22176-t22177;
                double t22159 = t22130*t22105*t22089*2.0;
                double t22160 = c*c0*t22061*t22070*t22056*t22075*t22059*(8.0/9.0);
                double t22161 = a5*c0*gamma_bb[index]*t22070*t22044*t22056*t22092*t22059*(5.6E1/9.0);
                double t22162 = c*c0*t22061*t22045*t22056*t22059*t22086*t22087*(1.6E1/3.0);
                double t22163 = c*c0*t22051*t22061*t22070*t22047*t22056*t22049*t22059*t22077*(2.56E2/9.0);
                double t22208 = t22051*t22091*t22109*t22047*t22049*t22059*(6.4E1/3.0);
                double t22209 = c*c0*t22051*t22061*t22070*t22047*t22056*t22049*t22077*t22078*(2.56E2/9.0);
                double t22164 = t22160+t22161+t22162+t22163-t22208-t22209+t22159;
                double t22165 = t22105*t22125*t22089*3.0;
                double t22166 = a5*c0*t22070*t22044*t22056*t22074*t22059*4.0;
                double t22167 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22059*t22088*1.6E1;
                double t22174 = gamma_bb[index]*t22051*t22091*t22048*t22049*t22059*1.2E1;
                double t22175 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22078*t22088*1.6E1;
                double t22168 = t22165-t22174+t22166-t22175+t22167;
                double t22169 = c*c0*t22061*t22070*t22056*t22075*t22093*t22094*t22059*(2.0/9.0);
                double t22170 = c*c0*t22061*t22045*t22056*t22093*t22094*t22059*t22086*t22087*(4.0/3.0);
                double t22171 = c*c0*t22061*t22070*t22107*t22045*t22056*t22093*t22094*t22059*(2.0/3.0);
                double t22172 = a5*c0*gamma_bb[index]*t22070*t22044*t22056*t22092*t22093*t22094*t22059*(1.4E1/9.0) \
                   ;
                double t22173 = c*c0*t22051*t22061*t22070*t22047*t22056*t22093*t22049*t22094*t22059*t22077*(6.4E1/ \
                   9.0);
                double t22178 = 1/t22061;
                double t22180 = 1/c0;
                double t22181 = pow(rho_b[index],1.0/3.0);
                double t22182 = exp(-t22055);
                double t22183 = t22058*t22058;
                double t22184 = t22069*t22069;
                double t22185 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]);
                double t22210 = c*c0*t22051*t22061*t22070*t22047*t22056*t22093*t22049*t22094*t22077*t22078*(6.4E1/ \
                   9.0);
                double t22186 = -t22210+t22170+t22171+t22172-t22119+t22173+t22095+t22096+t22097+t22169+t22098;
                double t22215 = c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22093*t22049*t22094*t22078*t22088* \
                   (8.0/3.0);
                double t22187 = t22103+t22104+t22134-t22215-t22108+t22135+t22136;
                double t22188 = t22046*t22047*t22048*t22049;
                double t22189 = pow(t22050,4.0/5.0);
                double t22206 = rab1*t22189;
                double t22190 = exp(-t22206);
                double t22191 = t22190-1.0;
                double t22207 = kab1*t22191;
                double t22192 = kab0-t22207;
                double t22193 = a3*gamma_bb[index]*t22052*t22044*t22053;
                double t22194 = t22193+1.0;
                double t22195 = 1/sqrt(t22194);
                double t22196 = a1*gamma_bb[index]*t22044*t22074;
                double t22197 = t22196+t22188+1.0;
                double t22198 = c*c;
                double t22199 = 1/pow(rho_b[index],2.0/3.0);
                double t22200 = k1*t22054;
                double t22201 = c*k2*t22045;
                double t22202 = t22200+t22201;
                double t22203 = 1/(t22202*t22202);
                double t22212 = t22203*t22198*t22199;
                double t22204 = exp(-t22212);
                double t22205 = exp(-t22188);
                double t22211 = c*c0*t22045*(2.0/3.0);
                double t22216 = t22205*t22192*t22195*t22197*1.0E5;
                double t22217 = 1/pow(rho_b[index],1.0E1/3.0);
                double t22218 = 1/pow(t22194,3.0/2.0);
                double t22219 = t22046*t22109*t22047*t22049*(1.6E1/3.0);
                double t22220 = a1*gamma_bb[index]*t22044*t22092*(8.0/3.0);
                double t22221 = t22220+t22219;
                double t22222 = a1*t22044*t22074;
                double t22223 = gamma_bb[index]*t22046*t22048*t22049*2.0;
                double t22224 = t22222+t22223;
                double t22225 = 1/(c*c);
                double t22226 = 1/pow(t22050,1.0/5.0);
                double t22227 = t22211-t22216;
                double t22228 = 0.0 ;
                double t22229 = t22106*t22093*t22094;
                double t22230 = t22102*t22152*t22138;
                double t22231 = t22102*t22133*t22187;
                double t22232 = t22052*t22106*t22180*t22181*t22182*t22183*t22184*t22178*(3.0/2.0);
                double t22366 = t22133*t22138*t22139*t22168;
                double t22233 = t22230+t22231+t22232+t22229-t22366;
                double t22234 = t22093*t22094;
                double t22235 = t22102*t22133*t22138;
                double t22236 = t22234+t22235;
                double t22237 = 1/pow(rho_b[index],5.0/3.0);
                double t22238 = t22203*t22237*t22198*(2.0/3.0);
                double t22239 = 1/(t22202*t22202*t22202);
                double t22240 = c*k2*t22075*(1.0/3.0);
                double t22241 = c*k1*t22082*t22075*(1.0/6.0);
                double t22242 = t22240+t22241;
                double t22243 = t22238-t22242*t22239*t22198*t22199*2.0;
                double t22244 = a3*t22052*t22205*t22044*t22053*t22218*t22192*t22197*5.0E4;
                double t22245 = gamma_bb[index]*t22205*t22046*t22048*t22192*t22049*t22195*t22197*2.0E5;
                double t22247 = t22205*t22224*t22192*t22195*1.0E5;
                double t22246 = t22244+t22245-t22247;
                double t22248 = c*c0*t22075*(2.0/9.0);
                double t22249 = t22205*t22046*t22109*t22047*t22192*t22049*t22195*t22197*(1.6E6/3.0);
                double t22250 = a3*gamma_bb[index]*t22052*t22205*t22044*t22217*t22218*t22192*t22197*(3.5E5/3.0);
                double t22360 = t22221*t22205*t22192*t22195*1.0E5;
                double t22361 = c*kab1*rab1*t22205*t22190*t22226*t22075*t22195*t22197*(8.0E4/3.0);
                double t22251 = t22250-t22360-t22361+t22248+t22249;
                double t22252 = -t22211+t22216;
                double t22253 = ( (t22252 > 0.0) ?  1.0 : 0.0 ) ;
                double t22254 = t22046*t22047*t22048*t22049*2.0;
                double t22255 = exp(t22254);
                double t22256 = 1/(t22192*t22192);
                double t22257 = 1/(t22197*t22197);
                double t22258 = c*c0*t22045*t22255*t22256*t22194*t22257*(2.0/3.0);
                double t22259 = 1/(t22197*t22197*t22197);
                double t22260 = exp(t22258);
                double t22261 = Ei(-t22258);
                double t22262 = c*c0*t22075*t22255*t22256*t22194*t22257*(2.0/9.0);
                double t22263 = a3*c0*gamma_bb[index]*t22044*t22092*t22255*t22256*t22257*(1.4E1/9.0);
                double t22264 = c*c0*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22257*(6.4E1/9.0);
                double t22265 = 1/(t22192*t22192*t22192);
                double t22266 = sqrt(t22258);
                double t22267 = t22266*6.0;
                double t22268 = c*c0*t22045*t22255*t22256*t22194*t22257*4.0;
                double t22269 = t22267+t22268+3.0;
                double t22270 = 1/t22269;
                double t22293 = c*c0*t22221*t22045*t22255*t22256*t22194*t22259*(4.0/3.0);
                double t22294 = c0*kab1*rab1*t22190*t22226*t22237*t22255*t22265*t22194*t22257*t22198*(1.6E1/4.5E1) \
                   ;
                double t22271 = t22262+t22263+t22264-t22293-t22294;
                double t22272 = 1/sqrt(t22258);
                double t22273 = a3*c0*t22044*t22074*t22255*t22256*t22257*(2.0/3.0);
                double t22274 = c*c0*gamma_bb[index]*t22046*t22255*t22049*t22256*t22194*t22257*t22088*(8.0/3.0);
                double t22276 = c*c0*t22224*t22045*t22255*t22256*t22194*t22259*(4.0/3.0);
                double t22275 = t22273+t22274-t22276;
                double t22277 = a1*t22044*t22092*(8.0/3.0);
                double t22278 = gamma_bb[index]*t22046*t22109*t22049*(3.2E1/3.0);
                double t22279 = t22277+t22278;
                double t22280 = t22046*t22046;
                double t22281 = a3*c0*t22221*t22044*t22074*t22255*t22256*t22259*(4.0/3.0);
                double t22282 = c*c0*t22224*t22075*t22255*t22256*t22194*t22259*(4.0/9.0);
                double t22283 = c*c0*t22045*t22255*t22256*t22194*t22259*t22279*(4.0/3.0);
                double t22284 = 1/(t22197*t22197*t22197*t22197);
                double t22285 = a3*c0*gamma_bb[index]*t22044*t22224*t22092*t22255*t22256*t22259*(2.8E1/9.0);
                double t22286 = c*c0*gamma_bb[index]*t22221*t22046*t22255*t22049*t22256*t22194*t22088*t22259*(1.6E1/ \
                   3.0);
                double t22287 = c*c0*t22224*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22259*(1.28E2/9.0);
                double t22288 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]);
                double t22289 = a3*c*c0*kab1*rab1*t22044*t22190*t22226*t22255*t22265*t22257*t22288*(1.6E1/4.5E1);
                double t22290 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]);
                double t22291 = c0*gamma_bb[index]*kab1*rab1*t22046*t22190*t22226*t22290*t22255*t22049*t22265*t22194* \
                   t22257*t22198*(6.4E1/4.5E1);
                double t22296 = a3*c0*t22044*t22092*t22255*t22256*t22257*(1.6E1/9.0);
                double t22297 = c*c0*t22221*t22224*t22045*t22255*t22256*t22194*t22284*4.0;
                double t22298 = a3*c0*t22044*t22046*t22047*t22255*t22049*t22076*t22256*t22257*(4.0E1/3.0);
                double t22299 = c*c0*gamma_bb[index]*t22046*t22255*t22049*t22256*t22077*t22194*t22257*(1.36E2/9.0) \
                   ;
                double t22300 = c*c0*gamma_bb[index]*t22080*t22081*t22280*t22047*t22255*t22256*t22194*t22257*(2.56E2/ \
                   9.0);
                double t22301 = c0*kab1*rab1*t22224*t22190*t22226*t22237*t22255*t22265*t22194*t22259*t22198*(3.2E1/ \
                   4.5E1);
                double t22292 = -t22300-t22301+t22281+t22282+t22291+t22283+t22285+t22286+t22287-t22296-t22297+t22289- \
                   t22298-t22299;
                double t22295 = 1/rho_b[index];
                double t22302 = c*c0*t22260*t22045*t22261*t22255*t22256*t22194*t22257*(2.0/3.0);
                double t22303 = t22302+1.0;
                double t22304 = t22272*t22275*2.0;
                double t22305 = a3*c0*t22044*t22074*t22255*t22256*t22257*(8.0/3.0);
                double t22306 = c*c0*gamma_bb[index]*t22046*t22255*t22049*t22256*t22194*t22257*t22088*(3.2E1/3.0) \
                   ;
                double t22358 = c*c0*t22224*t22045*t22255*t22256*t22194*t22259*(1.6E1/3.0);
                double t22307 = t22304+t22305+t22306-t22358;
                double t22308 = 1/(t22269*t22269);
                double t22309 = t22271*t22272*2.0;
                double t22310 = c*c0*t22075*t22255*t22256*t22194*t22257*(8.0/9.0);
                double t22311 = a3*c0*gamma_bb[index]*t22044*t22092*t22255*t22256*t22257*(5.6E1/9.0);
                double t22312 = c*c0*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22257*(2.56E2/9.0);
                double t22344 = c*c0*t22221*t22045*t22255*t22256*t22194*t22259*(1.6E1/3.0);
                double t22345 = c0*kab1*rab1*t22190*t22226*t22237*t22255*t22265*t22194*t22257*t22198*(6.4E1/4.5E1) \
                   ;
                double t22313 = t22310+t22311+t22312-t22344+t22309-t22345;
                double t22314 = t22266*4.0;
                double t22315 = c*c0*t22045*t22255*t22256*t22194*t22257*(8.0/3.0);
                double t22316 = t22314+t22315+6.0;
                double t22317 = t22272*t22275*3.0;
                double t22318 = a3*c0*t22044*t22074*t22255*t22256*t22257*4.0;
                double t22319 = c*c0*gamma_bb[index]*t22046*t22255*t22049*t22256*t22194*t22257*t22088*1.6E1;
                double t22335 = c*c0*t22224*t22045*t22255*t22256*t22194*t22259*8.0;
                double t22320 = t22317-t22335+t22318+t22319;
                double t22321 = c*c0*t22260*t22261*t22075*t22255*t22256*t22194*t22257*(2.0/9.0);
                double t22322 = a3*c0*gamma_bb[index]*t22044*t22260*t22261*t22092*t22255*t22256*t22257*(1.4E1/9.0) \
                   ;
                double t22323 = c*c0*t22260*t22045*t22261*t22271*t22255*t22256*t22194*t22257*(2.0/3.0);
                double t22324 = c*c0*t22260*t22261*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22257*(6.4E1/ \
                   9.0);
                double t22325 = t22271*t22272*3.0;
                double t22326 = c*c0*t22075*t22255*t22256*t22194*t22257*(4.0/3.0);
                double t22327 = a3*c0*gamma_bb[index]*t22044*t22092*t22255*t22256*t22257*(2.8E1/3.0);
                double t22328 = c*c0*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22257*(1.28E2/3.0);
                double t22336 = c*c0*t22221*t22045*t22255*t22256*t22194*t22259*8.0;
                double t22337 = c0*kab1*rab1*t22190*t22226*t22237*t22255*t22265*t22194*t22257*t22198*(3.2E1/1.5E1) \
                   ;
                double t22329 = t22325+t22326+t22327-t22336+t22328-t22337;
                double t22330 = a3*c0*t22044*t22260*t22261*t22074*t22255*t22256*t22257*(2.0/3.0);
                double t22331 = c*c0*t22260*t22045*t22261*t22255*t22256*t22194*t22257*t22275*(2.0/3.0);
                double t22332 = c*c0*gamma_bb[index]*t22260*t22261*t22046*t22255*t22049*t22256*t22194*t22257*t22088* \
                   (8.0/3.0);
                double t22359 = c*c0*t22224*t22260*t22045*t22261*t22255*t22256*t22194*t22259*(4.0/3.0);
                double t22333 = t22330+t22331+t22332+t22273+t22274-t22276-t22359;
                double t22334 = 1/pow(t22258,3.0/2.0);
                double t22338 = 1/t22194;
                double t22339 = exp(-t22254);
                double t22340 = t22192*t22192;
                double t22341 = t22197*t22197;
                double t22342 = 1/(rho_b[index]*rho_b[index]);
                double t22343 = t22321+t22322+t22323+t22324+t22262+t22263+t22264-t22293-t22294-c*c0*t22221*t22260* \
                   t22045*t22261*t22255*t22256*t22194*t22259*(4.0/3.0)-c0*kab1*rab1*t22260*t22261*t22190*t22226*t22237* \
                   t22255*t22265*t22194*t22257*t22198*(1.6E1/4.5E1);
                double t22346 = a3*t22052*t22205*t22044*t22217*t22218*t22192*t22197*(3.5E5/3.0);
                double t22347 = a3*t22221*t22052*t22205*t22044*t22053*t22218*t22192*5.0E4;
                double t22348 = gamma_bb[index]*t22205*t22046*t22109*t22192*t22049*t22195*t22197*(3.2E6/3.0);
                double t22349 = gamma_bb[index]*t22221*t22205*t22046*t22048*t22192*t22049*t22195*2.0E5;
                double t22350 = t22205*t22224*t22046*t22109*t22047*t22192*t22049*t22195*(1.6E6/3.0);
                double t22351 = a3*a3;
                double t22352 = 1/pow(t22194,5.0/2.0);
                double t22353 = a3*gamma_bb[index]*t22052*t22205*t22044*t22224*t22217*t22218*t22192*(3.5E5/3.0);
                double t22354 = a3*kab1*rab1*t22205*t22044*t22190*t22226*t22092*t22218*t22197*(4.0E4/3.0);
                double t22355 = 1/pow(rho_b[index],2.6E1/3.0);
                double t22356 = c*gamma_bb[index]*kab1*rab1*t22205*t22046*t22190*t22226*t22049*t22077*t22195*t22197* \
                   (1.6E5/3.0);
                double t22357 = t22350+t22353+t22354+t22346+t22347+t22356+t22348+t22349-t22205*t22192*t22195*t22279* \
                   1.0E5-c*kab1*rab1*t22205*t22224*t22190*t22226*t22075*t22195*(8.0E4/3.0)-gamma_bb[index]*t22205*t22225* \
                   t22351*t22352*t22192*t22049*t22088*t22197*1.75E5-gamma_bb[index]*t22205*t22081*t22280*t22047*t22192* \
                   t22148*t22195*t22197*(3.2E6/3.0)-a3*t22052*t22205*t22044*t22046*t22047*t22218*t22192*t22049*t22355* \
                   t22197*5.0E5;
                double t22362 = 0.0 ;
                double t22363 = t22260*t22261;
                double t22364 = t22303*t22270*t22316;
                double t22365 = t22363+t22364;
                v_rho_b_gamma_bb_[index] = rho_b[index]*( ( (c*c0*t22045*(-2.0/3.0)+t22192*t22195*t22197*exp(-t22046* \
                   t22047*t22048*t22049)*1.0E5 > 0.0) ? c0*t22204*1.0*(t22102*t22138*(t22105*t22146*t22089*2.0-t22130* \
                   t22125*t22147*t22089-gamma_bb[index]*t22051*t22091*t22109*t22049*t22059*(1.28E2/3.0)+a5*c0*t22070* \
                   t22044*t22056*t22092*t22059*(6.4E1/9.0)-gamma_bb[index]*t22130*t22051*t22105*t22048*t22049*t22059* \
                   4.0+gamma_bb[index]*t22081*t22091*t22047*t22148*t22078*t22079*(2.56E2/3.0)-t22051*t22105*t22125*t22109* \
                   t22047*t22049*t22059*(3.2E1/3.0)+a5*c0*t22044*t22056*t22074*t22059*t22086*t22087*(1.6E1/3.0)+c*c0* \
                   gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22059*t22077*(5.44E2/9.0)-c*c0*gamma_bb[index]* \
                   t22051*t22061*t22070*t22056*t22049*t22077*t22078*(5.44E2/9.0)+a5*c0*t22051*t22070*t22044*t22047*t22056* \
                   t22049*t22076*t22059*(1.6E2/3.0)-a5*c0*t22051*t22070*t22044*t22047*t22056*t22049*t22076*t22078*(1.6E2/ \
                   3.0)+c*c0*gamma_bb[index]*t22061*t22070*t22115*t22080*t22081*t22047*t22056*t22079*(5.12E2/3.0)+c*c0* \
                   gamma_bb[index]*t22061*t22070*t22080*t22081*t22047*t22056*t22059*t22079*(1.024E3/9.0)-c*c0*gamma_bb[index]* \
                   t22061*t22070*t22080*t22081*t22047*t22056*t22078*t22079*(2.048E3/9.0)+c*c0*gamma_bb[index]*t22051* \
                   t22061*t22056*t22049*t22059*t22086*t22087*t22088*(6.4E1/3.0)-c*c0*gamma_bb[index]*t22051*t22061*t22056* \
                   t22049*t22086*t22078*t22087*t22088*(6.4E1/3.0))+t22102*t22133*(t22110+t22111-t22120+t22112-t22121+ \
                   t22113-t22122+t22114+t22116+t22117-t22179+t22106*t22107+t22106*t22295*(1.0/3.0)+(t22106*t22086*2.0) \
                   /t22069+t22051*t22106*t22109*t22047*t22049*(3.2E1/3.0)-t22051*t22106*t22109*t22047*t22049*t22089*(3.2E1/ \
                   3.0)+a5*gamma_bb[index]*t22052*t22106*t22044*t22217*t22178*(7.0/3.0)+a5*c0*t22070*t22044*t22056*t22092* \
                   t22093*t22094*t22059*(1.6E1/9.0)+a5*c0*t22070*t22044*t22107*t22056*t22074*t22093*t22094*t22059*(2.0/ \
                   3.0)+a5*c0*t22044*t22056*t22074*t22093*t22094*t22059*t22086*t22087*(4.0/3.0)+c*c0*t22061*t22070*t22106* \
                   t22056*t22075*t22093*t22094*t22059*(2.0/9.0)+c*c0*t22061*t22070*t22045*t22118*t22056*t22093*t22094* \
                   t22059*(2.0/3.0)+a5*c0*gamma_bb[index]*t22070*t22106*t22044*t22056*t22092*t22093*t22094*t22059*(1.4E1/ \
                   9.0)+c*c0*t22061*t22070*t22106*t22107*t22045*t22056*t22093*t22094*t22059*(2.0/3.0)+c*c0*t22061*t22106* \
                   t22045*t22056*t22093*t22094*t22059*t22086*t22087*(4.0/3.0)+c*c0*gamma_bb[index]*t22051*t22061*t22070* \
                   t22056*t22093*t22049*t22094*t22059*t22077*(1.36E2/9.0)-c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056* \
                   t22093*t22049*t22094*t22077*t22078*(1.36E2/9.0)+a5*c0*t22051*t22070*t22044*t22047*t22056*t22093*t22049* \
                   t22076*t22094*t22059*(4.0E1/3.0)-a5*c0*t22051*t22070*t22044*t22047*t22056*t22093*t22049*t22076*t22094* \
                   t22078*(4.0E1/3.0)+c*c0*gamma_bb[index]*t22061*t22070*t22115*t22080*t22081*t22047*t22056*t22093*t22094* \
                   t22079*(1.28E2/3.0)+c*c0*gamma_bb[index]*t22051*t22061*t22070*t22107*t22056*t22093*t22049*t22094*t22059* \
                   t22088*(8.0/3.0)-c*c0*gamma_bb[index]*t22051*t22061*t22070*t22107*t22056*t22093*t22049*t22094*t22078* \
                   t22088*(8.0/3.0)+c*c0*gamma_bb[index]*t22061*t22070*t22080*t22081*t22047*t22056*t22093*t22094*t22059* \
                   t22079*(2.56E2/9.0)-c*c0*gamma_bb[index]*t22061*t22070*t22080*t22081*t22047*t22056*t22093*t22094*t22078* \
                   t22079*(5.12E2/9.0)+c*c0*gamma_bb[index]*t22051*t22061*t22056*t22093*t22049*t22094*t22059*t22086*t22087* \
                   t22088*(1.6E1/3.0)-c*c0*gamma_bb[index]*t22051*t22061*t22056*t22093*t22049*t22094*t22086*t22078*t22087* \
                   t22088*(1.6E1/3.0)+c*c0*t22051*t22061*t22070*t22106*t22047*t22056*t22093*t22049*t22094*t22059*t22077* \
                   (6.4E1/9.0)-c*c0*t22051*t22061*t22070*t22106*t22047*t22056*t22093*t22049*t22094*t22077*t22078*(6.4E1/ \
                   9.0))+t22102*t22152*t22186+t22102*t22164*t22187+t22118*t22093*t22094+t22106*t22107*t22093*t22094-t22152* \
                   t22138*t22139*t22158-t22133*t22139*t22158*t22187-t22133*t22139*t22168*t22186-t22164*t22138*t22139* \
                   t22168-t22133*t22138*t22139*(t22105*t22146*t22089*3.0-t22130*t22125*t22147*t22089*(3.0/2.0)-gamma_bb[index]* \
                   t22051*t22091*t22109*t22049*t22059*6.4E1+a5*c0*t22070*t22044*t22056*t22092*t22059*(3.2E1/3.0)-gamma_bb[index]* \
                   t22130*t22051*t22105*t22048*t22049*t22059*6.0+gamma_bb[index]*t22081*t22091*t22047*t22148*t22078*t22079* \
                   1.28E2-t22051*t22105*t22125*t22109*t22047*t22049*t22059*1.6E1+a5*c0*t22044*t22056*t22074*t22059*t22086* \
                   t22087*8.0+c*c0*gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22059*t22077*(2.72E2/3.0)-c*c0* \
                   gamma_bb[index]*t22051*t22061*t22070*t22056*t22049*t22077*t22078*(2.72E2/3.0)+a5*c0*t22051*t22070* \
                   t22044*t22047*t22056*t22049*t22076*t22059*8.0E1-a5*c0*t22051*t22070*t22044*t22047*t22056*t22049*t22076* \
                   t22078*8.0E1+c*c0*gamma_bb[index]*t22061*t22070*t22115*t22080*t22081*t22047*t22056*t22079*2.56E2+c* \
                   c0*gamma_bb[index]*t22061*t22070*t22080*t22081*t22047*t22056*t22059*t22079*(5.12E2/3.0)-c*c0*gamma_bb[index]* \
                   t22061*t22070*t22080*t22081*t22047*t22056*t22078*t22079*(1.024E3/3.0)+c*c0*gamma_bb[index]*t22051* \
                   t22061*t22056*t22049*t22059*t22086*t22087*t22088*3.2E1-c*c0*gamma_bb[index]*t22051*t22061*t22056*t22049* \
                   t22086*t22078*t22087*t22088*3.2E1)+1/(t22101*t22101*t22101)*t22133*t22138*t22158*t22168*2.0+t22052* \
                   t22180*t22118*t22181*t22182*t22183*t22184*t22178*(3.0/2.0)+t22052*t22106*t22107*t22180*t22181*t22182* \
                   t22183*t22184*t22178*(3.0/2.0)-a5*1/(t22061*t22061)*t22044*t22107*t22180*t22225*t22342*t22182*t22183* \
                   t22184*(3.0/2.0)-gamma_bb[index]*t22051*t22052*t22107*t22180*t22182*t22183*t22049*t22184*t22185*t22178* \
                   6.0+gamma_bb[index]*t22051*t22052*t22107*t22180*t22182*t22049*t22058*t22184*t22185*t22178*6.0)*(-1.0/ \
                   2.0) : 0.0 ) +c0*t22204*t22233*t22243*t22253*(1.0/2.0)+c0*t22204*t22233*t22251*t22228*(1.0/2.0)+c0* \
                   t22204*t22236*t22228*t22357*(1.0/2.0)+ 0.0 +c0*t22204*t22251*t22236*t22362*t22246*(1.0/2.0)-c0*t22204* \
                   t22243*t22236*t22228*t22246*(1.0/2.0))+rho_a[index]*(c0*t22253*(t22303*t22270*(t22272*t22292*2.0+t22271* \
                   t22334*t22275-a3*c0*t22044*t22092*t22255*t22256*t22257*(6.4E1/9.0)+a3*c0*t22221*t22044*t22074*t22255* \
                   t22256*t22259*(1.6E1/3.0)+c*c0*t22224*t22075*t22255*t22256*t22194*t22259*(1.6E1/9.0)+c*c0*t22045*t22255* \
                   t22256*t22194*t22259*t22279*(1.6E1/3.0)+a3*c0*gamma_bb[index]*t22044*t22224*t22092*t22255*t22256*t22259* \
                   (1.12E2/9.0)-c*c0*t22221*t22224*t22045*t22255*t22256*t22194*t22284*1.6E1-c*c0*gamma_bb[index]*t22046* \
                   t22255*t22049*t22256*t22077*t22194*t22257*(5.44E2/9.0)-a3*c0*t22044*t22046*t22047*t22255*t22049*t22076* \
                   t22256*t22257*(1.6E2/3.0)-c*c0*gamma_bb[index]*t22080*t22081*t22280*t22047*t22255*t22256*t22194*t22257* \
                   (1.024E3/9.0)+c*c0*gamma_bb[index]*t22221*t22046*t22255*t22049*t22256*t22194*t22088*t22259*(6.4E1/ \
                   3.0)+c*c0*t22224*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22259*(5.12E2/9.0)+a3*c*c0*kab1* \
                   rab1*t22044*t22190*t22226*t22255*t22265*t22257*t22288*(6.4E1/4.5E1)-c0*kab1*rab1*t22224*t22190*t22226* \
                   t22237*t22255*t22265*t22194*t22259*t22198*(1.28E2/4.5E1)+c0*gamma_bb[index]*kab1*rab1*t22046*t22190* \
                   t22226*t22290*t22255*t22049*t22265*t22194*t22257*t22198*(2.56E2/4.5E1))-t22270*t22316*(t22300+t22301- \
                   t22281-t22282-t22291-t22283-t22285-t22286-t22287+t22296+t22297-t22289+t22298+t22299+t22271*t22275+ \
                   t22275*t22295*(1.0/3.0)-(t22221*t22275*2.0)/t22197+t22046*t22109*t22047*t22049*t22275*(3.2E1/3.0)+ \
                   a3*gamma_bb[index]*t22052*t22044*t22217*t22275*t22338*(7.0/3.0)-(c*kab1*rab1*t22190*t22226*t22075* \
                   t22275*(8.0/1.5E1))/t22192+a3*c0*t22044*t22260*t22261*t22092*t22255*t22256*t22257*(1.6E1/9.0)-a3*c0* \
                   t22221*t22044*t22260*t22261*t22074*t22255*t22256*t22259*(4.0/3.0)+a3*c0*t22044*t22260*t22261*t22271* \
                   t22074*t22255*t22256*t22257*(2.0/3.0)-c*c0*t22224*t22260*t22261*t22075*t22255*t22256*t22194*t22259* \
                   (4.0/9.0)-c*c0*t22260*t22045*t22261*t22255*t22256*t22292*t22194*t22257*(2.0/3.0)+c*c0*t22260*t22261* \
                   t22075*t22255*t22256*t22194*t22257*t22275*(2.0/9.0)-c*c0*t22260*t22045*t22261*t22255*t22256*t22194* \
                   t22259*t22279*(4.0/3.0)-a3*c0*gamma_bb[index]*t22044*t22224*t22260*t22261*t22092*t22255*t22256*t22259* \
                   (2.8E1/9.0)+a3*c0*gamma_bb[index]*t22044*t22260*t22261*t22092*t22255*t22256*t22257*t22275*(1.4E1/9.0) \
                   +c*c0*t22221*t22224*t22260*t22045*t22261*t22255*t22256*t22194*t22284*4.0-c*c0*t22224*t22260*t22045* \
                   t22261*t22271*t22255*t22256*t22194*t22259*(4.0/3.0)-c*c0*t22221*t22260*t22045*t22261*t22255*t22256* \
                   t22194*t22275*t22259*(4.0/3.0)+c*c0*t22260*t22045*t22261*t22271*t22255*t22256*t22194*t22257*t22275* \
                   (2.0/3.0)+c*c0*gamma_bb[index]*t22260*t22261*t22046*t22255*t22049*t22256*t22077*t22194*t22257*(1.36E2/ \
                   9.0)+a3*c0*t22044*t22260*t22261*t22046*t22047*t22255*t22049*t22076*t22256*t22257*(4.0E1/3.0)+c*c0* \
                   gamma_bb[index]*t22080*t22260*t22081*t22261*t22280*t22047*t22255*t22256*t22194*t22257*(2.56E2/9.0) \
                   -c*c0*gamma_bb[index]*t22221*t22260*t22261*t22046*t22255*t22049*t22256*t22194*t22088*t22259*(1.6E1/ \
                   3.0)+c*c0*gamma_bb[index]*t22260*t22261*t22046*t22271*t22255*t22049*t22256*t22194*t22257*t22088*(8.0/ \
                   3.0)-c*c0*t22224*t22260*t22261*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22259*(1.28E2/9.0) \
                   +c*c0*t22260*t22261*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22257*t22275*(6.4E1/9.0)-a3* \
                   c*c0*kab1*rab1*t22044*t22260*t22261*t22190*t22226*t22255*t22265*t22257*t22288*(1.6E1/4.5E1)+c0*kab1* \
                   rab1*t22224*t22260*t22261*t22190*t22226*t22237*t22255*t22265*t22194*t22259*t22198*(3.2E1/4.5E1)-c0* \
                   kab1*rab1*t22260*t22261*t22190*t22226*t22237*t22255*t22265*t22194*t22257*t22275*t22198*(1.6E1/4.5E1) \
                   -c0*gamma_bb[index]*kab1*rab1*t22260*t22261*t22046*t22190*t22226*t22290*t22255*t22049*t22265*t22194* \
                   t22257*t22198*(6.4E1/4.5E1))-t22313*t22270*t22333+t22260*t22261*t22292-t22270*t22307*(t22321+t22322+ \
                   t22323+t22324+t22262+t22263+t22264-c*c0*t22221*t22045*t22255*t22256*t22194*t22259*(4.0/3.0)-c*c0*t22221* \
                   t22260*t22045*t22261*t22255*t22256*t22194*t22259*(4.0/3.0)-c0*kab1*rab1*t22190*t22226*t22237*t22255* \
                   t22265*t22194*t22257*t22198*(1.6E1/4.5E1)-c0*kab1*rab1*t22260*t22261*t22190*t22226*t22237*t22255*t22265* \
                   t22194*t22257*t22198*(1.6E1/4.5E1))+t22320*t22303*t22313*t22308+t22320*t22316*t22343*t22308+t22303* \
                   t22307*t22308*t22329-t22260*t22261*t22271*t22275+t22333*t22316*t22308*t22329-t22303*t22316*t22308* \
                   (t22272*t22292*3.0+t22271*t22334*t22275*(3.0/2.0)-a3*c0*t22044*t22092*t22255*t22256*t22257*(3.2E1/ \
                   3.0)+a3*c0*t22221*t22044*t22074*t22255*t22256*t22259*8.0+c*c0*t22224*t22075*t22255*t22256*t22194*t22259* \
                   (8.0/3.0)+c*c0*t22045*t22255*t22256*t22194*t22259*t22279*8.0+a3*c0*gamma_bb[index]*t22044*t22224*t22092* \
                   t22255*t22256*t22259*(5.6E1/3.0)-c*c0*t22221*t22224*t22045*t22255*t22256*t22194*t22284*2.4E1-c*c0* \
                   gamma_bb[index]*t22046*t22255*t22049*t22256*t22077*t22194*t22257*(2.72E2/3.0)-a3*c0*t22044*t22046* \
                   t22047*t22255*t22049*t22076*t22256*t22257*8.0E1-c*c0*gamma_bb[index]*t22080*t22081*t22280*t22047*t22255* \
                   t22256*t22194*t22257*(5.12E2/3.0)+c*c0*gamma_bb[index]*t22221*t22046*t22255*t22049*t22256*t22194*t22088* \
                   t22259*3.2E1+c*c0*t22224*t22046*t22047*t22255*t22049*t22256*t22077*t22194*t22259*(2.56E2/3.0)+a3*c* \
                   c0*kab1*rab1*t22044*t22190*t22226*t22255*t22265*t22257*t22288*(3.2E1/1.5E1)-c0*kab1*rab1*t22224*t22190* \
                   t22226*t22237*t22255*t22265*t22194*t22259*t22198*(6.4E1/1.5E1)+c0*gamma_bb[index]*kab1*rab1*t22046* \
                   t22190*t22226*t22290*t22255*t22049*t22265*t22194*t22257*t22198*(1.28E2/1.5E1))-t22320*t22303*t22316* \
                   t22329*1/(t22269*t22269*t22269)*2.0+t22052*t22340*t22341*t22180*t22181*t22292*t22338*t22339*(3.0/2.0) \
                   -t22052*t22340*t22341*t22180*t22181*t22271*t22275*t22338*t22339*(3.0/2.0)-t22052*t22340*t22224*t22180* \
                   t22181*t22271*t22338*t22339*t22197*3.0+a3*t22340*t22044*t22341*t22180*t22225*t22342*t22271*1/(t22194* \
                   t22194)*t22339*(3.0/2.0)+gamma_bb[index]*t22052*t22340*t22341*t22180*t22046*t22271*t22049*t22185*t22338* \
                   t22339*6.0)*(1.0/2.0)+c0*t22228*t22365*t22357*(1.0/2.0)+c0*t22251*t22228*(t22303*t22270*t22307+t22270* \
                   t22333*t22316+t22260*t22261*t22275-t22320*t22303*t22316*t22308+t22052*t22340*t22341*t22180*t22181* \
                   t22275*t22338*t22339*(3.0/2.0))*(1.0/2.0)+c0*t22228*t22246*(t22303*t22313*t22270+t22260*t22261*t22271+ \
                   t22270*t22316*t22343-t22303*t22316*t22308*t22329+t22052*t22340*t22341*t22180*t22181*t22271*t22338* \
                   t22339*(3.0/2.0))*(1.0/2.0)+c0*t22251*t22362*t22246*t22365*(1.0/2.0))+c0*t22204*t22233*t22253*(1.0/ \
                   2.0)-c0*t22204*t22236*t22228*t22246*(1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t23236 = tspi_m13*tspi_m13;
                double t23237 = 1/pow(rho_b[index],1.0/3.0);
                double t23238 = a2*a2;
                double t23239 = gamma_bb[index]*gamma_bb[index];
                double t23240 = 1/pow(rho_b[index],1.6E1/3.0);
                double t23241 = t23236*t23236;
                double t23242 = c*t23237;
                double t23243 = a4*a4;
                double t23244 = 1/c;
                double t23245 = 1/pow(rho_b[index],7.0/3.0);
                double t23246 = sqrt(t23242);
                double t23247 = t23240*t23241*t23243*t23239*2.0;
                double t23248 = exp(t23247);
                double t23249 = t23240*t23241*t23243*t23239;
                double t23250 = t23249+1.0;
                double t23251 = 1/(t23250*t23250);
                double t23252 = a5*gamma_bb[index]*t23244*t23236*t23245;
                double t23253 = t23252+1.0;
                double t23265 = raa2*t23246;
                double t23254 = exp(-t23265);
                double t23255 = t23254-1.0;
                double t23256 = kaa2*t23255;
                double t23257 = pow(t23242,2.0/5.0);
                double t23266 = raa1*t23257;
                double t23258 = exp(-t23266);
                double t23259 = t23258-1.0;
                double t23260 = kaa1*t23259;
                double t23261 = -kaa0+t23260+t23256;
                double t23262 = 1/(t23261*t23261);
                double t23263 = c*c0*t23251*t23253*t23262*t23237*t23248*(2.0/3.0);
                double t23264 = 1/pow(rho_b[index],8.0/3.0);
                double t23267 = 1/pow(rho_b[index],1.7E1/3.0);
                double t23268 = exp(t23263);
                double t23269 = Ei(-t23263);
                double t23270 = 1/t23250;
                double t23271 = c*c0*t23253*t23262*t23237*t23248*(2.0/3.0);
                double t23272 = sqrt(t23271);
                double t23273 = 1/(t23250*t23250*t23250);
                double t23274 = t23270*t23272*6.0;
                double t23275 = c*c0*t23251*t23253*t23262*t23237*t23248*4.0;
                double t23276 = t23274+t23275+3.0;
                double t23277 = 1/t23276;
                double t23278 = a5*c0*t23251*t23262*t23236*t23264*t23248*(2.0/3.0);
                double t23279 = c*c0*gamma_bb[index]*t23241*t23251*t23243*t23253*t23262*t23248*t23267*(8.0/3.0);
                double t23290 = c*c0*gamma_bb[index]*t23241*t23243*t23253*t23262*t23273*t23248*t23267*(8.0/3.0);
                double t23280 = -t23290+t23278+t23279;
                double t23281 = c*c0*t23251*t23253*t23262*t23237*t23248*t23268*t23269*(2.0/3.0);
                double t23282 = t23281+1.0;
                double t23283 = t23270*t23272*4.0;
                double t23284 = c*c0*t23251*t23253*t23262*t23237*t23248*(8.0/3.0);
                double t23285 = t23283+t23284+6.0;
                double t23286 = a5*c0*t23262*t23236*t23264*t23248*(2.0/3.0);
                double t23287 = c*c0*gamma_bb[index]*t23241*t23243*t23253*t23262*t23248*t23267*(8.0/3.0);
                double t23288 = t23286+t23287;
                double t23289 = 1/sqrt(t23271);
                double t23291 = t23240*t23241*t23238*t23239;
                double t23292 = pow(t23242,4.0/5.0);
                double t23400 = rab1*t23292;
                double t23293 = exp(-t23400);
                double t23294 = t23293-1.0;
                double t23401 = kab1*t23294;
                double t23295 = kab0-t23401;
                double t23296 = a3*gamma_bb[index]*t23244*t23236*t23245;
                double t23297 = t23296+1.0;
                double t23298 = 1/sqrt(t23297);
                double t23299 = a1*gamma_bb[index]*t23236*t23264;
                double t23300 = t23291+t23299+1.0;
                double t23301 = c*c;
                double t23302 = 1/pow(rho_b[index],2.0/3.0);
                double t23303 = k1*t23246;
                double t23304 = c*k2*t23237;
                double t23305 = t23303+t23304;
                double t23306 = 1/(t23305*t23305);
                double t23403 = t23301*t23302*t23306;
                double t23307 = exp(-t23403);
                double t23308 = 1/pow(rho_b[index],4.0/3.0);
                double t23309 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t23310 = 1/pow(rho_b[index],2.0E1/3.0);
                double t23311 = t23243*t23243;
                double t23312 = 1/pow(rho_b[index],1.2E1);
                double t23313 = t23241*t23241;
                double t23314 = 1/sqrt(t23242);
                double t23315 = c*kaa2*raa2*t23314*t23254*t23308*(1.0/6.0);
                double t23316 = 1/pow(t23242,3.0/5.0);
                double t23317 = c*kaa1*raa1*t23316*t23308*t23258*(2.0/1.5E1);
                double t23318 = t23315+t23317;
                double t23319 = 1/(t23261*t23261*t23261);
                double t23320 = t23270*t23288*t23289*2.0;
                double t23321 = a5*c0*t23251*t23262*t23236*t23264*t23248*(8.0/3.0);
                double t23322 = c*c0*gamma_bb[index]*t23241*t23251*t23243*t23253*t23262*t23248*t23267*(3.2E1/3.0) \
                   ;
                double t23364 = gamma_bb[index]*t23240*t23241*t23251*t23243*t23272*8.0;
                double t23365 = c*c0*gamma_bb[index]*t23241*t23243*t23253*t23262*t23273*t23248*t23267*(3.2E1/3.0) \
                   ;
                double t23323 = t23320+t23321+t23322-t23364-t23365;
                double t23324 = 1/pow(rho_b[index],1.1E1/3.0);
                double t23325 = c*c0*t23251*t23253*t23262*t23308*t23248*(2.0/9.0);
                double t23326 = a5*c0*gamma_bb[index]*t23251*t23324*t23262*t23236*t23248*(1.4E1/9.0);
                double t23327 = c*c0*t23251*t23253*t23237*t23318*t23319*t23248*(4.0/3.0);
                double t23328 = c*c0*t23310*t23241*t23251*t23243*t23253*t23262*t23239*t23248*(6.4E1/9.0);
                double t23329 = a5*c0*t23251*t23262*t23236*t23264*t23248*t23268*t23269*(2.0/3.0);
                double t23330 = c*c0*t23251*t23253*t23262*t23280*t23237*t23248*t23268*t23269*(2.0/3.0);
                double t23331 = c*c0*gamma_bb[index]*t23241*t23251*t23243*t23253*t23262*t23248*t23267*t23268*t23269* \
                   (8.0/3.0);
                double t23344 = c*c0*t23310*t23241*t23243*t23253*t23262*t23273*t23239*t23248*(6.4E1/9.0);
                double t23332 = t23325+t23326-t23344+t23327+t23328;
                double t23333 = 1/pow(rho_b[index],1.9E1/3.0);
                double t23334 = 1/t23253;
                double t23335 = a5*c0*t23251*t23324*t23262*t23236*t23248*(1.6E1/9.0);
                double t23336 = a5*c0*t23251*t23236*t23264*t23318*t23319*t23248*(4.0/3.0);
                double t23337 = a5*c0*t23241*t23251*t23243*t23262*t23236*t23309*t23239*t23248*(4.0E1/3.0);
                double t23338 = c*c0*gamma_bb[index]*t23310*t23241*t23251*t23243*t23253*t23262*t23248*(1.36E2/9.0) \
                   ;
                double t23339 = c*c0*gamma_bb[index]*t23311*t23312*t23313*t23251*t23253*t23262*t23239*t23248*(2.56E2/ \
                   9.0);
                double t23340 = 1/(t23250*t23250*t23250*t23250);
                double t23341 = c*c0*gamma_bb[index]*t23311*t23312*t23313*t23340*t23253*t23262*t23239*t23248*(1.28E2/ \
                   3.0);
                double t23342 = c*c0*gamma_bb[index]*t23241*t23251*t23243*t23253*t23318*t23319*t23248*t23267*(1.6E1/ \
                   3.0);
                double t23345 = c*c0*gamma_bb[index]*t23310*t23241*t23243*t23253*t23262*t23273*t23248*(1.36E2/9.0) \
                   ;
                double t23346 = c*c0*gamma_bb[index]*t23311*t23312*t23313*t23253*t23262*t23273*t23239*t23248*(5.12E2/ \
                   9.0);
                double t23347 = c*c0*gamma_bb[index]*t23241*t23243*t23253*t23273*t23318*t23319*t23248*t23267*(1.6E1/ \
                   3.0);
                double t23396 = a5*c0*t23241*t23243*t23262*t23236*t23273*t23309*t23239*t23248*(4.0E1/3.0);
                double t23343 = t23341+t23342+t23335+t23336-t23345+t23337-t23346+t23338-t23347+t23339-t23396;
                double t23348 = c*c0*t23253*t23262*t23308*t23248*(2.0/9.0);
                double t23349 = a5*c0*gamma_bb[index]*t23324*t23262*t23236*t23248*(1.4E1/9.0);
                double t23350 = c*c0*t23253*t23237*t23318*t23319*t23248*(4.0/3.0);
                double t23351 = c*c0*t23310*t23241*t23243*t23253*t23262*t23239*t23248*(6.4E1/9.0);
                double t23352 = t23350+t23351+t23348+t23349;
                double t23353 = 1/(t23276*t23276);
                double t23419 = c*c0*gamma_bb[index]*t23241*t23243*t23253*t23262*t23273*t23248*t23267*t23268*t23269* \
                   (8.0/3.0);
                double t23354 = t23330+t23331-t23290+t23329-t23419+t23278+t23279;
                double t23355 = a5*c0*t23324*t23262*t23236*t23248*(1.6E1/9.0);
                double t23356 = a5*c0*t23236*t23264*t23318*t23319*t23248*(4.0/3.0);
                double t23357 = a5*c0*t23241*t23243*t23262*t23236*t23309*t23239*t23248*(4.0E1/3.0);
                double t23358 = c*c0*gamma_bb[index]*t23310*t23241*t23243*t23253*t23262*t23248*(1.36E2/9.0);
                double t23359 = c*c0*gamma_bb[index]*t23311*t23312*t23313*t23253*t23262*t23239*t23248*(2.56E2/9.0) \
                   ;
                double t23360 = c*c0*gamma_bb[index]*t23241*t23243*t23253*t23318*t23319*t23248*t23267*(1.6E1/3.0) \
                   ;
                double t23361 = t23360+t23355+t23356+t23357+t23358+t23359;
                double t23362 = 1/pow(t23271,3.0/2.0);
                double t23363 = 1/pow(rho_b[index],3.5E1/3.0);
                double t23366 = t23270*t23352*t23289*3.0;
                double t23367 = c*c0*t23251*t23253*t23262*t23308*t23248*(4.0/3.0);
                double t23368 = a5*c0*gamma_bb[index]*t23251*t23324*t23262*t23236*t23248*(2.8E1/3.0);
                double t23369 = c*c0*t23251*t23253*t23237*t23318*t23319*t23248*8.0;
                double t23370 = c*c0*t23310*t23241*t23251*t23243*t23253*t23262*t23239*t23248*(1.28E2/3.0);
                double t23389 = t23241*t23251*t23243*t23333*t23272*t23239*3.2E1;
                double t23390 = c*c0*t23310*t23241*t23243*t23253*t23262*t23273*t23239*t23248*(1.28E2/3.0);
                double t23371 = t23370-t23390+t23366+t23367+t23368+t23369-t23389;
                double t23372 = t23270*t23288*t23289*3.0;
                double t23373 = a5*c0*t23251*t23262*t23236*t23264*t23248*4.0;
                double t23374 = c*c0*gamma_bb[index]*t23241*t23251*t23243*t23253*t23262*t23248*t23267*1.6E1;
                double t23382 = gamma_bb[index]*t23240*t23241*t23251*t23243*t23272*1.2E1;
                double t23383 = c*c0*gamma_bb[index]*t23241*t23243*t23253*t23262*t23273*t23248*t23267*1.6E1;
                double t23375 = t23372+t23373-t23382+t23374-t23383;
                double t23376 = t23270*t23352*t23289*2.0;
                double t23377 = c*c0*t23251*t23253*t23262*t23308*t23248*(8.0/9.0);
                double t23378 = a5*c0*gamma_bb[index]*t23251*t23324*t23262*t23236*t23248*(5.6E1/9.0);
                double t23379 = c*c0*t23251*t23253*t23237*t23318*t23319*t23248*(1.6E1/3.0);
                double t23380 = c*c0*t23310*t23241*t23251*t23243*t23253*t23262*t23239*t23248*(2.56E2/9.0);
                double t23414 = t23241*t23251*t23243*t23333*t23272*t23239*(6.4E1/3.0);
                double t23415 = c*c0*t23310*t23241*t23243*t23253*t23262*t23273*t23239*t23248*(2.56E2/9.0);
                double t23381 = -t23414-t23415+t23380+t23376+t23377+t23378+t23379;
                double t23384 = c*c0*t23251*t23253*t23262*t23308*t23248*t23268*t23269*(2.0/9.0);
                double t23385 = c*c0*t23251*t23253*t23237*t23318*t23319*t23248*t23268*t23269*(4.0/3.0);
                double t23386 = c*c0*t23251*t23332*t23253*t23262*t23237*t23248*t23268*t23269*(2.0/3.0);
                double t23387 = a5*c0*gamma_bb[index]*t23251*t23324*t23262*t23236*t23248*t23268*t23269*(1.4E1/9.0) \
                   ;
                double t23388 = c*c0*t23310*t23241*t23251*t23243*t23253*t23262*t23239*t23248*t23268*t23269*(6.4E1/ \
                   9.0);
                double t23391 = 1/c0;
                double t23392 = pow(rho_b[index],1.0/3.0);
                double t23393 = exp(-t23247);
                double t23394 = t23250*t23250;
                double t23395 = t23261*t23261;
                double t23397 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]);
                double t23416 = c*c0*t23310*t23241*t23243*t23253*t23262*t23273*t23239*t23248*t23268*t23269*(6.4E1/ \
                   9.0);
                double t23398 = t23325+t23326-t23344-t23416+t23327+t23328+t23384+t23385+t23386+t23387+t23388;
                double t23399 = exp(-t23291);
                double t23402 = t23300*t23295*t23298*t23399*1.0E5;
                double t23404 = c*c0*t23237*(2.0/3.0);
                double t23405 = -t23402+t23404;
                double t23406 = 0.0 ;
                double t23407 = a1*t23236*t23264;
                double t23408 = gamma_bb[index]*t23240*t23241*t23238*2.0;
                double t23409 = t23407+t23408;
                double t23410 = 1/pow(t23297,3.0/2.0);
                double t23411 = a3*t23300*t23410*t23244*t23236*t23245*t23295*t23399*5.0E4;
                double t23412 = gamma_bb[index]*t23300*t23240*t23241*t23238*t23295*t23298*t23399*2.0E5;
                double t23439 = t23409*t23295*t23298*t23399*1.0E5;
                double t23413 = t23411+t23412-t23439;
                double t23417 = t23280*t23268*t23269;
                double t23418 = t23323*t23282*t23277;
                double t23420 = t23244*t23280*t23334*t23391*t23392*t23393*t23394*t23395*(3.0/2.0);
                double t23421 = t23268*t23269;
                double t23422 = t23282*t23285*t23277;
                double t23423 = t23421+t23422;
                double t23424 = 1/pow(rho_b[index],1.0E1/3.0);
                double t23425 = t23241*t23333*t23238*t23239*(1.6E1/3.0);
                double t23426 = a1*gamma_bb[index]*t23324*t23236*(8.0/3.0);
                double t23427 = t23425+t23426;
                double t23428 = 1/(c*c);
                double t23429 = 1/pow(t23242,1.0/5.0);
                double t23430 = t23354*t23285*t23277;
                double t23431 = t23420+t23430+t23417+t23418-t23353*t23282*t23285*t23375;
                double t23432 = 1/pow(rho_b[index],5.0/3.0);
                double t23433 = t23301*t23306*t23432*(2.0/3.0);
                double t23434 = 1/(t23305*t23305*t23305);
                double t23435 = c*k2*t23308*(1.0/3.0);
                double t23436 = c*k1*t23314*t23308*(1.0/6.0);
                double t23437 = t23435+t23436;
                double t23438 = t23433-t23301*t23302*t23434*t23437*2.0;
                double t23440 = c*c0*t23308*(2.0/9.0);
                double t23441 = t23300*t23241*t23333*t23238*t23239*t23295*t23298*t23399*(1.6E6/3.0);
                double t23442 = a3*gamma_bb[index]*t23300*t23410*t23244*t23424*t23236*t23295*t23399*(3.5E5/3.0);
                double t23443 = t23440+t23441+t23442-t23427*t23295*t23298*t23399*1.0E5-c*kab1*rab1*t23300*t23308* \
                   t23293*t23429*t23298*t23399*(8.0E4/3.0);
                v_rho_b_gamma_bb_[index] = ( (c*c0*t23237*(-2.0/3.0)+t23300*t23295*t23298*exp(-t23240*t23241*t23238* \
                   t23239)*1.0E5 > 0.0) ?  c0*t23307*1.0*(t23420+t23417+t23418+t23285*t23277*(t23330+t23331+t23329+t23278+ \
                   t23279-c*c0*gamma_bb[index]*t23241*t23243*t23253*t23262*t23273*t23248*t23267*(8.0/3.0)-c*c0*gamma_bb[index]* \
                   t23241*t23243*t23253*t23262*t23273*t23248*t23267*t23268*t23269*(8.0/3.0))-t23353*t23282*t23285*t23375) \
                   *(1.0/2.0) : 0.0 ) -c0*t23413*t23423*t23307*t23406*(1.0/2.0)- ( (t23402-c*c0*t23237*(2.0/3.0) > 0.0) \
                    ? c0*rho_b[index]*t23307*1.0*(t23282*t23277*(t23270*t23361*t23289*2.0-t23270*t23352*t23362*t23288- \
                   gamma_bb[index]*t23241*t23251*t23243*t23333*t23272*(1.28E2/3.0)+a5*c0*t23251*t23324*t23262*t23236* \
                   t23248*(6.4E1/9.0)-gamma_bb[index]*t23240*t23241*t23251*t23243*t23352*t23289*4.0+gamma_bb[index]*t23311* \
                   t23313*t23272*t23273*t23363*t23239*(2.56E2/3.0)-t23241*t23251*t23243*t23333*t23239*t23288*t23289*(3.2E1/ \
                   3.0)+a5*c0*t23251*t23236*t23264*t23318*t23319*t23248*(1.6E1/3.0)+c*c0*gamma_bb[index]*t23310*t23241* \
                   t23251*t23243*t23253*t23262*t23248*(5.44E2/9.0)-c*c0*gamma_bb[index]*t23310*t23241*t23243*t23253*t23262* \
                   t23273*t23248*(5.44E2/9.0)+a5*c0*t23241*t23251*t23243*t23262*t23236*t23309*t23239*t23248*(1.6E2/3.0) \
                   -a5*c0*t23241*t23243*t23262*t23236*t23273*t23309*t23239*t23248*(1.6E2/3.0)+c*c0*gamma_bb[index]*t23311* \
                   t23312*t23313*t23340*t23253*t23262*t23239*t23248*(5.12E2/3.0)+c*c0*gamma_bb[index]*t23311*t23312*t23313* \
                   t23251*t23253*t23262*t23239*t23248*(1.024E3/9.0)-c*c0*gamma_bb[index]*t23311*t23312*t23313*t23253* \
                   t23262*t23273*t23239*t23248*(2.048E3/9.0)+c*c0*gamma_bb[index]*t23241*t23251*t23243*t23253*t23318* \
                   t23319*t23248*t23267*(6.4E1/3.0)-c*c0*gamma_bb[index]*t23241*t23243*t23253*t23273*t23318*t23319*t23248* \
                   t23267*(6.4E1/3.0))+t23354*t23381*t23277+t23343*t23268*t23269+t23323*t23277*t23398+t23285*t23277*(t23341+ \
                   t23342+t23335+t23336-t23345+t23337-t23346+t23338-t23347+t23339-t23396+t23332*t23280+(t23280*(1.0/3.0) \
                   )/rho_b[index]+(t23280*t23318*2.0)/t23261+t23241*t23243*t23333*t23280*t23239*(3.2E1/3.0)-t23241*t23243* \
                   t23270*t23333*t23280*t23239*(3.2E1/3.0)+a5*gamma_bb[index]*t23244*t23280*t23334*t23424*t23236*(7.0/ \
                   3.0)+a5*c0*t23251*t23324*t23262*t23236*t23248*t23268*t23269*(1.6E1/9.0)+a5*c0*t23251*t23332*t23262* \
                   t23236*t23264*t23248*t23268*t23269*(2.0/3.0)+a5*c0*t23251*t23236*t23264*t23318*t23319*t23248*t23268* \
                   t23269*(4.0/3.0)+c*c0*t23251*t23253*t23262*t23280*t23308*t23248*t23268*t23269*(2.0/9.0)+c*c0*t23251* \
                   t23253*t23262*t23343*t23237*t23248*t23268*t23269*(2.0/3.0)+a5*c0*gamma_bb[index]*t23251*t23324*t23262* \
                   t23280*t23236*t23248*t23268*t23269*(1.4E1/9.0)+c*c0*t23251*t23332*t23253*t23262*t23280*t23237*t23248* \
                   t23268*t23269*(2.0/3.0)+c*c0*t23251*t23253*t23280*t23237*t23318*t23319*t23248*t23268*t23269*(4.0/3.0) \
                   +c*c0*gamma_bb[index]*t23310*t23241*t23251*t23243*t23253*t23262*t23248*t23268*t23269*(1.36E2/9.0)- \
                   c*c0*gamma_bb[index]*t23310*t23241*t23243*t23253*t23262*t23273*t23248*t23268*t23269*(1.36E2/9.0)+a5* \
                   c0*t23241*t23251*t23243*t23262*t23236*t23309*t23239*t23248*t23268*t23269*(4.0E1/3.0)-a5*c0*t23241* \
                   t23243*t23262*t23236*t23273*t23309*t23239*t23248*t23268*t23269*(4.0E1/3.0)+c*c0*gamma_bb[index]*t23311* \
                   t23312*t23313*t23340*t23253*t23262*t23239*t23248*t23268*t23269*(1.28E2/3.0)+c*c0*gamma_bb[index]*t23311* \
                   t23312*t23313*t23251*t23253*t23262*t23239*t23248*t23268*t23269*(2.56E2/9.0)-c*c0*gamma_bb[index]*t23311* \
                   t23312*t23313*t23253*t23262*t23273*t23239*t23248*t23268*t23269*(5.12E2/9.0)+c*c0*gamma_bb[index]*t23241* \
                   t23251*t23332*t23243*t23253*t23262*t23248*t23267*t23268*t23269*(8.0/3.0)-c*c0*gamma_bb[index]*t23241* \
                   t23332*t23243*t23253*t23262*t23273*t23248*t23267*t23268*t23269*(8.0/3.0)+c*c0*gamma_bb[index]*t23241* \
                   t23251*t23243*t23253*t23318*t23319*t23248*t23267*t23268*t23269*(1.6E1/3.0)-c*c0*gamma_bb[index]*t23241* \
                   t23243*t23253*t23273*t23318*t23319*t23248*t23267*t23268*t23269*(1.6E1/3.0)+c*c0*t23310*t23241*t23251* \
                   t23243*t23253*t23262*t23280*t23239*t23248*t23268*t23269*(6.4E1/9.0)-c*c0*t23310*t23241*t23243*t23253* \
                   t23262*t23280*t23273*t23239*t23248*t23268*t23269*(6.4E1/9.0))-t23323*t23353*t23371*t23282-t23353*t23371* \
                   t23354*t23285-t23353*t23282*t23381*t23375+t23332*t23280*t23268*t23269-t23353*t23285*t23375*t23398- \
                   t23353*t23282*t23285*(t23270*t23361*t23289*3.0-t23270*t23352*t23362*t23288*(3.0/2.0)-gamma_bb[index]* \
                   t23241*t23251*t23243*t23333*t23272*6.4E1+a5*c0*t23251*t23324*t23262*t23236*t23248*(3.2E1/3.0)-gamma_bb[index]* \
                   t23240*t23241*t23251*t23243*t23352*t23289*6.0+gamma_bb[index]*t23311*t23313*t23272*t23273*t23363*t23239* \
                   1.28E2-t23241*t23251*t23243*t23333*t23239*t23288*t23289*1.6E1+a5*c0*t23251*t23236*t23264*t23318*t23319* \
                   t23248*8.0+c*c0*gamma_bb[index]*t23310*t23241*t23251*t23243*t23253*t23262*t23248*(2.72E2/3.0)-c*c0* \
                   gamma_bb[index]*t23310*t23241*t23243*t23253*t23262*t23273*t23248*(2.72E2/3.0)+a5*c0*t23241*t23251* \
                   t23243*t23262*t23236*t23309*t23239*t23248*8.0E1-a5*c0*t23241*t23243*t23262*t23236*t23273*t23309*t23239* \
                   t23248*8.0E1+c*c0*gamma_bb[index]*t23311*t23312*t23313*t23340*t23253*t23262*t23239*t23248*2.56E2+c* \
                   c0*gamma_bb[index]*t23311*t23312*t23313*t23251*t23253*t23262*t23239*t23248*(5.12E2/3.0)-c*c0*gamma_bb[index]* \
                   t23311*t23312*t23313*t23253*t23262*t23273*t23239*t23248*(1.024E3/3.0)+c*c0*gamma_bb[index]*t23241* \
                   t23251*t23243*t23253*t23318*t23319*t23248*t23267*3.2E1-c*c0*gamma_bb[index]*t23241*t23243*t23253*t23273* \
                   t23318*t23319*t23248*t23267*3.2E1)+t23371*t23282*1/(t23276*t23276*t23276)*t23285*t23375*2.0+t23244* \
                   t23334*t23343*t23391*t23392*t23393*t23394*t23395*(3.0/2.0)+t23332*t23244*t23280*t23334*t23391*t23392* \
                   t23393*t23394*t23395*(3.0/2.0)-a5*1/(rho_b[index]*rho_b[index])*t23332*1/(t23253*t23253)*t23236*t23391* \
                   t23428*t23393*t23394*t23395*(3.0/2.0)+gamma_bb[index]*t23241*t23250*t23332*t23243*t23244*t23334*t23391* \
                   t23393*t23395*t23397*6.0-gamma_bb[index]*t23241*t23332*t23243*t23244*t23334*t23391*t23393*t23394*t23395* \
                   t23397*6.0)*(1.0/2.0) : 0.0 ) +c0*rho_b[index]*t23431*t23307*t23406*t23443*(1.0/2.0)+c0*rho_b[index]* \
                   t23423*t23307*t23406*(t23295*t23298*t23399*(a1*t23324*t23236*(8.0/3.0)+gamma_bb[index]*t23241*t23333* \
                   t23238*(3.2E1/3.0))*-1.0E5+t23241*t23333*t23238*t23409*t23239*t23295*t23298*t23399*(1.6E6/3.0)+a3* \
                   t23300*t23410*t23244*t23424*t23236*t23295*t23399*(3.5E5/3.0)+a3*t23410*t23244*t23236*t23245*t23427* \
                   t23295*t23399*5.0E4+gamma_bb[index]*t23300*t23241*t23333*t23238*t23295*t23298*t23399*(3.2E6/3.0)+gamma_bb[index]* \
                   t23240*t23241*t23238*t23427*t23295*t23298*t23399*2.0E5-(a3*a3)*gamma_bb[index]*t23300*t23241*t23428* \
                   t23267*t23295*1/pow(t23297,5.0/2.0)*t23399*1.75E5+a3*gamma_bb[index]*t23410*t23244*t23424*t23236*t23409* \
                   t23295*t23399*(3.5E5/3.0)-c*kab1*rab1*t23308*t23409*t23293*t23429*t23298*t23399*(8.0E4/3.0)-gamma_bb[index]* \
                   t23300*t23313*t23363*(t23238*t23238)*t23239*t23295*t23298*t23399*(3.2E6/3.0)+a3*kab1*rab1*t23300*t23410* \
                   t23324*t23236*t23293*t23429*t23399*(4.0E4/3.0)-a3*1/pow(rho_b[index],2.6E1/3.0)*t23300*t23410*t23241* \
                   t23244*t23236*t23238*t23239*t23295*t23399*5.0E5+c*gamma_bb[index]*kab1*rab1*t23300*t23310*t23241*t23238* \
                   t23293*t23429*t23298*t23399*(1.6E5/3.0))*(1.0/2.0)+c0*rho_b[index]*t23413*t23307*t23406*(t23282*t23381* \
                   t23277+t23332*t23268*t23269+t23285*t23277*t23398-t23353*t23371*t23282*t23285+t23332*t23244*t23334* \
                   t23391*t23392*t23393*t23394*t23395*(3.0/2.0))*(1.0/2.0)+ ( (t23402-t23404 > 0.0) ? c0*rho_b[index]* \
                   t23431*t23307*t23438*1.0*(1.0/2.0) : 0.0 ) -c0*rho_b[index]*t23413*t23423*t23307*t23406*t23438*(1.0/ \
                   2.0)+ 0.0 ;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t22368 = tspi_m13*tspi_m13;
                double t22369 = 1/pow(rho_a[index],1.0/3.0);
                double t22370 = a2*a2;
                double t22371 = gamma_aa[index]*gamma_aa[index];
                double t22372 = 1/pow(rho_a[index],1.6E1/3.0);
                double t22373 = t22368*t22368;
                double t22374 = c*t22369;
                double t22375 = pow(t22374,4.0/5.0);
                double t22389 = rab1*t22375;
                double t22376 = exp(-t22389);
                double t22377 = t22376-1.0;
                double t22390 = kab1*t22377;
                double t22378 = kab0-t22390;
                double t22379 = 1/c;
                double t22380 = 1/pow(rho_a[index],7.0/3.0);
                double t22381 = a3*gamma_aa[index]*t22380*t22368*t22379;
                double t22382 = t22381+1.0;
                double t22383 = t22370*t22371*t22372*t22373;
                double t22384 = 1/pow(rho_a[index],8.0/3.0);
                double t22385 = a1*gamma_aa[index]*t22384*t22368;
                double t22386 = t22383+t22385+1.0;
                double t22387 = t22370*t22371*t22372*t22373*2.0;
                double t22388 = exp(t22387);
                double t22391 = 1/(t22378*t22378);
                double t22392 = 1/(t22386*t22386);
                double t22393 = c*c0*t22382*t22391*t22392*t22369*t22388*(2.0/3.0);
                double t22394 = a1*t22384*t22368;
                double t22395 = gamma_aa[index]*t22370*t22372*t22373*2.0;
                double t22396 = t22394+t22395;
                double t22397 = 1/pow(rho_a[index],1.7E1/3.0);
                double t22398 = 1/(t22386*t22386*t22386);
                double t22399 = sqrt(t22393);
                double t22401 = a3*c0*t22391*t22392*t22384*t22368*t22388*(2.0/3.0);
                double t22402 = c*c0*t22382*t22391*t22369*t22396*t22388*t22398*(4.0/3.0);
                double t22403 = c*c0*gamma_aa[index]*t22370*t22373*t22382*t22391*t22392*t22388*t22397*(8.0/3.0);
                double t22400 = t22401-t22402+t22403;
                double t22404 = t22396*t22396;
                double t22405 = 1/(t22386*t22386*t22386*t22386);
                double t22406 = c*c0*t22404*t22405*t22382*t22391*t22369*t22388*4.0;
                double t22407 = c*c0*t22370*t22373*t22382*t22391*t22392*t22388*t22397*(8.0/3.0);
                double t22408 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t22409 = a3*c0*gamma_aa[index]*t22370*t22408*t22373*t22391*t22392*t22368*t22388*(1.6E1/3.0) \
                   ;
                double t22410 = exp(t22393);
                double t22411 = Ei(-t22393);
                double t22412 = t22370*t22370;
                double t22413 = 1/pow(rho_a[index],1.1E1);
                double t22414 = t22373*t22373;
                double t22415 = c*c0*t22412*t22413*t22414*t22371*t22382*t22391*t22392*t22388*(3.2E1/3.0);
                double t22418 = c*c0*gamma_aa[index]*t22370*t22373*t22382*t22391*t22396*t22388*t22397*t22398*(3.2E1/ \
                   3.0);
                double t22423 = a3*c0*t22391*t22384*t22368*t22396*t22388*t22398*(8.0/3.0);
                double t22424 = c*c0*t22370*t22373*t22382*t22391*t22388*t22397*t22398*(8.0/3.0);
                double t22416 = -t22423+t22406+t22415-t22424+t22407+t22409-t22418;
                double t22417 = t22400*t22400;
                double t22419 = t22399*6.0;
                double t22420 = c*c0*t22382*t22391*t22392*t22369*t22388*4.0;
                double t22421 = t22420+t22419+3.0;
                double t22422 = 1/t22421;
                double t22425 = 1/sqrt(t22393);
                double t22426 = c*c0*t22410*t22411*t22382*t22391*t22392*t22369*t22388*(2.0/3.0);
                double t22427 = t22426+1.0;
                double t22428 = t22400*t22425*2.0;
                double t22429 = a3*c0*t22391*t22392*t22384*t22368*t22388*(8.0/3.0);
                double t22430 = c*c0*gamma_aa[index]*t22370*t22373*t22382*t22391*t22392*t22388*t22397*(3.2E1/3.0) \
                   ;
                double t22467 = c*c0*t22382*t22391*t22369*t22396*t22388*t22398*(1.6E1/3.0);
                double t22431 = t22430+t22428+t22429-t22467;
                double t22432 = 1/(t22421*t22421);
                double t22433 = t22399*4.0;
                double t22434 = c*c0*t22382*t22391*t22392*t22369*t22388*(8.0/3.0);
                double t22435 = t22433+t22434+6.0;
                double t22436 = 1/pow(t22393,3.0/2.0);
                double t22437 = t22400*t22425*3.0;
                double t22438 = a3*c0*t22391*t22392*t22384*t22368*t22388*4.0;
                double t22439 = c*c0*gamma_aa[index]*t22370*t22373*t22382*t22391*t22392*t22388*t22397*1.6E1;
                double t22441 = c*c0*t22382*t22391*t22369*t22396*t22388*t22398*8.0;
                double t22440 = -t22441+t22437+t22438+t22439;
                double t22442 = a3*c0*t22410*t22411*t22391*t22392*t22384*t22368*t22388*(2.0/3.0);
                double t22443 = c*c0*t22400*t22410*t22411*t22382*t22391*t22392*t22369*t22388*(2.0/3.0);
                double t22444 = c*c0*gamma_aa[index]*t22410*t22411*t22370*t22373*t22382*t22391*t22392*t22388*t22397* \
                   (8.0/3.0);
                double t22468 = c*c0*t22410*t22411*t22382*t22391*t22369*t22396*t22388*t22398*(4.0/3.0);
                double t22445 = t22401-t22402+t22403+t22442+t22443+t22444-t22468;
                double t22446 = 1/t22382;
                double t22447 = 1/c0;
                double t22448 = pow(rho_a[index],1.0/3.0);
                double t22449 = exp(-t22387);
                double t22450 = t22378*t22378;
                double t22451 = t22386*t22386;
                double t22452 = 1/sqrt(t22382);
                double t22453 = exp(-t22383);
                double t22460 = 1/pow(t22382,3.0/2.0);
                double t22464 = t22452*t22453*t22378*t22396*1.0E5;
                double t22465 = a3*t22460*t22380*t22453*t22368*t22386*t22378*t22379*5.0E4;
                double t22466 = gamma_aa[index]*t22370*t22452*t22372*t22453*t22373*t22386*t22378*2.0E5;
                double t22454 = -t22464+t22465+t22466;
                double t22455 = c*c0*t22369*(2.0/3.0);
                double t22462 = t22452*t22453*t22386*t22378*1.0E5;
                double t22456 = -t22462+t22455;
                double t22457 = t22410*t22411;
                double t22458 = t22422*t22435*t22427;
                double t22459 = t22457+t22458;
                double t22461 = 1/(c*c);
                double t22463 = 0.0 ;
                double t22469 = a4*a4;
                double t22470 = t22371*t22372*t22373*t22469*2.0;
                double t22471 = exp(t22470);
                double t22472 = sqrt(t22374);
                double t22473 = t22371*t22372*t22373*t22469;
                double t22474 = t22473+1.0;
                double t22475 = 1/(t22474*t22474);
                double t22476 = a5*gamma_aa[index]*t22380*t22368*t22379;
                double t22477 = t22476+1.0;
                double t22488 = raa2*t22472;
                double t22478 = exp(-t22488);
                double t22479 = t22478-1.0;
                double t22480 = kaa2*t22479;
                double t22481 = pow(t22374,2.0/5.0);
                double t22489 = raa1*t22481;
                double t22482 = exp(-t22489);
                double t22483 = t22482-1.0;
                double t22484 = kaa1*t22483;
                double t22485 = -kaa0+t22480+t22484;
                double t22486 = 1/(t22485*t22485);
                double t22487 = c*c0*t22471*t22475*t22369*t22477*t22486*(2.0/3.0);
                double t22490 = 1/t22474;
                double t22491 = c*c0*t22471*t22369*t22477*t22486*(2.0/3.0);
                double t22496 = a5*c0*t22471*t22384*t22368*t22486*(2.0/3.0);
                double t22497 = c*c0*gamma_aa[index]*t22471*t22373*t22477*t22486*t22397*t22469*(8.0/3.0);
                double t22492 = t22496+t22497;
                double t22493 = sqrt(t22491);
                double t22494 = t22469*t22469;
                double t22495 = 1/pow(rho_a[index],3.2E1/3.0);
                double t22498 = 1/sqrt(t22491);
                double t22499 = 1/(t22474*t22474*t22474);
                double t22500 = t22490*t22493*6.0;
                double t22501 = c*c0*t22471*t22475*t22369*t22477*t22486*4.0;
                double t22502 = t22500+t22501+3.0;
                double t22503 = 1/t22502;
                double t22505 = a5*c0*t22471*t22384*t22475*t22368*t22486*(2.0/3.0);
                double t22506 = c*c0*gamma_aa[index]*t22471*t22373*t22475*t22477*t22486*t22397*t22469*(8.0/3.0);
                double t22507 = c*c0*gamma_aa[index]*t22471*t22373*t22477*t22486*t22397*t22469*t22499*(8.0/3.0);
                double t22504 = t22505+t22506-t22507;
                double t22508 = exp(t22487);
                double t22509 = Ei(-t22487);
                double t22510 = t22504*t22504;
                double t22511 = 1/(t22474*t22474*t22474*t22474);
                double t22512 = a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22475*t22368*t22486*t22469*(1.6E1/3.0) \
                   ;
                double t22513 = c*c0*t22471*t22373*t22475*t22477*t22486*t22397*t22469*(8.0/3.0);
                double t22514 = c*c0*t22413*t22414*t22371*t22471*t22475*t22494*t22477*t22486*(3.2E1/3.0);
                double t22515 = c*c0*t22511*t22413*t22414*t22371*t22471*t22494*t22477*t22486*1.6E1;
                double t22547 = a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22368*t22486*t22469*t22499*(1.6E1/3.0) \
                   ;
                double t22548 = c*c0*t22471*t22373*t22477*t22486*t22397*t22469*t22499*(8.0/3.0);
                double t22549 = c*c0*t22413*t22414*t22371*t22471*t22494*t22477*t22486*t22499*(6.4E1/3.0);
                double t22516 = t22512+t22513+t22514+t22515-t22547-t22548-t22549;
                double t22517 = t22490*t22493*4.0;
                double t22518 = c*c0*t22471*t22475*t22369*t22477*t22486*(8.0/3.0);
                double t22519 = t22517+t22518+6.0;
                double t22520 = a5*c0*t22471*t22508*t22509*t22384*t22475*t22368*t22486*(2.0/3.0);
                double t22521 = c*c0*t22504*t22471*t22508*t22509*t22475*t22369*t22477*t22486*(2.0/3.0);
                double t22522 = c*c0*gamma_aa[index]*t22471*t22373*t22508*t22509*t22475*t22477*t22486*t22397*t22469* \
                   (8.0/3.0);
                double t22564 = c*c0*gamma_aa[index]*t22471*t22373*t22508*t22509*t22477*t22486*t22397*t22469*t22499* \
                   (8.0/3.0);
                double t22523 = t22520+t22521+t22522+t22505+t22506-t22507-t22564;
                double t22524 = c*c0*t22471*t22508*t22509*t22475*t22369*t22477*t22486*(2.0/3.0);
                double t22525 = t22524+1.0;
                double t22526 = t22490*t22492*t22498*3.0;
                double t22527 = a5*c0*t22471*t22384*t22475*t22368*t22486*4.0;
                double t22528 = c*c0*gamma_aa[index]*t22471*t22373*t22475*t22477*t22486*t22397*t22469*1.6E1;
                double t22531 = gamma_aa[index]*t22372*t22373*t22475*t22493*t22469*1.2E1;
                double t22532 = c*c0*gamma_aa[index]*t22471*t22373*t22477*t22486*t22397*t22469*t22499*1.6E1;
                double t22529 = -t22531-t22532+t22526+t22527+t22528;
                double t22530 = 1/(t22502*t22502);
                double t22533 = t22490*t22492*t22498*2.0;
                double t22534 = a5*c0*t22471*t22384*t22475*t22368*t22486*(8.0/3.0);
                double t22535 = c*c0*gamma_aa[index]*t22471*t22373*t22475*t22477*t22486*t22397*t22469*(3.2E1/3.0) \
                   ;
                double t22562 = gamma_aa[index]*t22372*t22373*t22475*t22493*t22469*8.0;
                double t22563 = c*c0*gamma_aa[index]*t22471*t22373*t22477*t22486*t22397*t22469*t22499*(3.2E1/3.0) \
                   ;
                double t22536 = t22533+t22534+t22535-t22562-t22563;
                double t22537 = a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22368*t22486*t22469*(1.6E1/3.0);
                double t22538 = c*c0*t22471*t22373*t22477*t22486*t22397*t22469*(8.0/3.0);
                double t22539 = c*c0*t22413*t22414*t22371*t22471*t22494*t22477*t22486*(3.2E1/3.0);
                double t22540 = t22537+t22538+t22539;
                double t22541 = t22492*t22492;
                double t22542 = 1/pow(t22491,3.0/2.0);
                double t22543 = 1/t22477;
                double t22544 = exp(-t22470);
                double t22545 = t22474*t22474;
                double t22546 = t22485*t22485;
                double t22550 = 1/(rho_a[index]*rho_a[index]);
                double t22551 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t22552 = c*c;
                double t22553 = 1/pow(rho_a[index],2.0/3.0);
                double t22554 = k1*t22472;
                double t22555 = c*k2*t22369;
                double t22556 = t22554+t22555;
                double t22557 = 1/(t22556*t22556);
                double t22561 = t22552*t22553*t22557;
                double t22558 = exp(-t22561);
                double t22559 = 0.0 ;
                double t22560 = t22454*t22454;
                double t22565 = t22508*t22509;
                double t22566 = t22503*t22525*t22519;
                double t22567 = t22565+t22566;
                double t22568 = t22370*t22452*t22372*t22453*t22373*t22378*2.0E5;
                double t22569 = a3*a3;
                double t22570 = 1/pow(rho_a[index],1.4E1/3.0);
                double t22571 = 1/pow(t22382,5.0/2.0);
                double t22572 = t22461*t22453*t22570*t22373*t22571*t22386*t22378*t22569*7.5E4;
                double t22573 = t22412*t22414*t22371*t22452*t22453*t22386*t22378*t22495*4.0E5;
                double t22574 = 1/pow(rho_a[index],2.3E1/3.0);
                double t22575 = a3*gamma_aa[index]*t22370*t22460*t22453*t22373*t22574*t22368*t22386*t22378*t22379* \
                   2.0E5;
                double t22576 = t22572+t22573+t22575+t22568-t22370*t22452*t22372*t22453*t22373*t22386*t22378*2.0E5- \
                   a3*t22460*t22380*t22453*t22368*t22378*t22396*t22379*1.0E5-gamma_aa[index]*t22370*t22452*t22372*t22453* \
                   t22373*t22378*t22396*4.0E5;
                v_gamma_aa_gamma_aa_[index] = rho_b[index]*( ( (c*c0*t22369*(-2.0/3.0)+t22452*t22386*t22378*exp(- \
                   t22370*t22371*t22372*t22373)*1.0E5 > 0.0) ? c0*1.0*(t22422*t22427*(t22416*t22425*2.0-t22417*t22436- \
                   a3*c0*t22391*t22384*t22368*t22396*t22388*t22398*(3.2E1/3.0)+c*c0*t22404*t22405*t22382*t22391*t22369* \
                   t22388*1.6E1+c*c0*t22370*t22373*t22382*t22391*t22392*t22388*t22397*(3.2E1/3.0)-c*c0*t22370*t22373* \
                   t22382*t22391*t22388*t22397*t22398*(3.2E1/3.0)+a3*c0*gamma_aa[index]*t22370*t22408*t22373*t22391*t22392* \
                   t22368*t22388*(6.4E1/3.0)+c*c0*t22412*t22413*t22414*t22371*t22382*t22391*t22392*t22388*(1.28E2/3.0) \
                   -c*c0*gamma_aa[index]*t22370*t22373*t22382*t22391*t22396*t22388*t22397*t22398*(1.28E2/3.0))+t22422* \
                   t22435*(t22406+t22415+t22407+t22417+t22409-t22418-(t22400*t22396*2.0)/t22386+gamma_aa[index]*t22400* \
                   t22370*t22372*t22373*4.0+a3*t22400*t22380*t22446*t22368*t22379-a3*c0*t22391*t22384*t22368*t22396*t22388* \
                   t22398*(8.0/3.0)-c*c0*t22370*t22373*t22382*t22391*t22388*t22397*t22398*(8.0/3.0)+a3*c0*t22400*t22410* \
                   t22411*t22391*t22392*t22384*t22368*t22388*(4.0/3.0)-a3*c0*t22410*t22411*t22391*t22384*t22368*t22396* \
                   t22388*t22398*(8.0/3.0)+c*c0*t22410*t22411*t22404*t22405*t22382*t22391*t22369*t22388*4.0+c*c0*t22410* \
                   t22411*t22416*t22382*t22391*t22392*t22369*t22388*(2.0/3.0)+c*c0*t22410*t22411*t22417*t22382*t22391* \
                   t22392*t22369*t22388*(2.0/3.0)+c*c0*t22410*t22411*t22370*t22373*t22382*t22391*t22392*t22388*t22397* \
                   (8.0/3.0)-c*c0*t22400*t22410*t22411*t22382*t22391*t22369*t22396*t22388*t22398*(8.0/3.0)-c*c0*t22410* \
                   t22411*t22370*t22373*t22382*t22391*t22388*t22397*t22398*(8.0/3.0)+a3*c0*gamma_aa[index]*t22410*t22411* \
                   t22370*t22408*t22373*t22391*t22392*t22368*t22388*(1.6E1/3.0)+c*c0*t22410*t22411*t22412*t22413*t22414* \
                   t22371*t22382*t22391*t22392*t22388*(3.2E1/3.0)+c*c0*gamma_aa[index]*t22400*t22410*t22411*t22370*t22373* \
                   t22382*t22391*t22392*t22388*t22397*(1.6E1/3.0)-c*c0*gamma_aa[index]*t22410*t22411*t22370*t22373*t22382* \
                   t22391*t22396*t22388*t22397*t22398*(3.2E1/3.0))+t22410*t22411*t22416+t22410*t22411*t22417+t22422*t22431* \
                   t22445*2.0-t22431*t22440*t22432*t22427*2.0-t22440*t22432*t22435*t22445*2.0-t22432*t22435*t22427*(t22416* \
                   t22425*3.0-t22417*t22436*(3.0/2.0)-a3*c0*t22391*t22384*t22368*t22396*t22388*t22398*1.6E1+c*c0*t22404* \
                   t22405*t22382*t22391*t22369*t22388*2.4E1+c*c0*t22370*t22373*t22382*t22391*t22392*t22388*t22397*1.6E1- \
                   c*c0*t22370*t22373*t22382*t22391*t22388*t22397*t22398*1.6E1+a3*c0*gamma_aa[index]*t22370*t22408*t22373* \
                   t22391*t22392*t22368*t22388*3.2E1+c*c0*t22412*t22413*t22414*t22371*t22382*t22391*t22392*t22388*6.4E1- \
                   c*c0*gamma_aa[index]*t22370*t22373*t22382*t22391*t22396*t22388*t22397*t22398*6.4E1)+1/(t22421*t22421* \
                   t22421)*(t22440*t22440)*t22435*t22427*2.0+t22450*t22451*t22416*t22446*t22447*t22448*t22449*t22379* \
                   (3.0/2.0)+t22450*t22451*t22417*t22446*t22447*t22448*t22449*t22379*(3.0/2.0)+t22400*t22450*t22446*t22447* \
                   t22448*t22386*t22449*t22396*t22379*3.0-a3*t22400*t22450*t22451*t22550*t22461*1/(t22382*t22382)*t22447* \
                   t22368*t22449*(3.0/2.0)-gamma_aa[index]*t22400*t22450*t22370*t22451*t22551*t22373*t22446*t22447*t22449* \
                   t22379*6.0)*(1.0/2.0) : 0.0 ) -c0*t22560*t22459*t22559*(1.0/2.0)+c0*t22463*t22459*t22576*(1.0/2.0) \
                   -c0*t22454*t22463*(t22400*t22410*t22411+t22422*t22431*t22427+t22422*t22435*t22445-t22440*t22432*t22435* \
                   t22427+t22400*t22450*t22451*t22446*t22447*t22448*t22449*t22379*(3.0/2.0)))+rho_a[index]*( ( (t22462- \
                   t22455 > 0.0) ? c0*t22558*1.0*(t22503*t22519*(t22510+t22512+t22513+t22514+t22515+gamma_aa[index]*t22504* \
                   t22372*t22373*t22469*4.0+a5*t22504*t22380*t22543*t22368*t22379-gamma_aa[index]*t22504*t22372*t22373* \
                   t22490*t22469*4.0-c*c0*t22471*t22373*t22477*t22486*t22397*t22469*t22499*(8.0/3.0)-a5*c0*gamma_aa[index]* \
                   t22408*t22471*t22373*t22368*t22486*t22469*t22499*(1.6E1/3.0)+a5*c0*t22504*t22471*t22508*t22509*t22384* \
                   t22475*t22368*t22486*(4.0/3.0)+c*c0*t22510*t22471*t22508*t22509*t22475*t22369*t22477*t22486*(2.0/3.0) \
                   -c*c0*t22413*t22414*t22371*t22471*t22494*t22477*t22486*t22499*(6.4E1/3.0)+c*c0*t22471*t22516*t22508* \
                   t22509*t22475*t22369*t22477*t22486*(2.0/3.0)+c*c0*t22471*t22373*t22508*t22509*t22475*t22477*t22486* \
                   t22397*t22469*(8.0/3.0)-c*c0*t22471*t22373*t22508*t22509*t22477*t22486*t22397*t22469*t22499*(8.0/3.0) \
                   +a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22508*t22509*t22475*t22368*t22486*t22469*(1.6E1/3.0)- \
                   a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22508*t22509*t22368*t22486*t22469*t22499*(1.6E1/3.0)+c* \
                   c0*t22511*t22413*t22414*t22371*t22471*t22508*t22509*t22494*t22477*t22486*1.6E1+c*c0*t22413*t22414* \
                   t22371*t22471*t22508*t22509*t22475*t22494*t22477*t22486*(3.2E1/3.0)-c*c0*t22413*t22414*t22371*t22471* \
                   t22508*t22509*t22494*t22477*t22486*t22499*(6.4E1/3.0)+c*c0*gamma_aa[index]*t22504*t22471*t22373*t22508* \
                   t22509*t22475*t22477*t22486*t22397*t22469*(1.6E1/3.0)-c*c0*gamma_aa[index]*t22504*t22471*t22373*t22508* \
                   t22509*t22477*t22486*t22397*t22469*t22499*(1.6E1/3.0))+t22503*t22523*t22536*2.0+t22510*t22508*t22509+ \
                   t22516*t22508*t22509-t22503*t22525*(t22541*t22542*t22490-t22540*t22490*t22498*2.0+t22372*t22373*t22475* \
                   t22493*t22469*8.0-t22414*t22371*t22493*t22494*t22495*t22499*3.2E1+gamma_aa[index]*t22372*t22373*t22492* \
                   t22475*t22469*t22498*8.0-c*c0*t22471*t22373*t22475*t22477*t22486*t22397*t22469*(3.2E1/3.0)+c*c0*t22471* \
                   t22373*t22477*t22486*t22397*t22469*t22499*(3.2E1/3.0)-a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22475* \
                   t22368*t22486*t22469*(6.4E1/3.0)+a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22368*t22486*t22469*t22499* \
                   (6.4E1/3.0)-c*c0*t22511*t22413*t22414*t22371*t22471*t22494*t22477*t22486*6.4E1-c*c0*t22413*t22414* \
                   t22371*t22471*t22475*t22494*t22477*t22486*(1.28E2/3.0)+c*c0*t22413*t22414*t22371*t22471*t22494*t22477* \
                   t22486*t22499*(2.56E2/3.0))-t22530*t22523*t22519*t22529*2.0-t22530*t22525*t22536*t22529*2.0+t22530* \
                   t22525*t22519*(t22541*t22542*t22490*(3.0/2.0)-t22540*t22490*t22498*3.0+t22372*t22373*t22475*t22493* \
                   t22469*1.2E1-t22414*t22371*t22493*t22494*t22495*t22499*4.8E1+gamma_aa[index]*t22372*t22373*t22492* \
                   t22475*t22469*t22498*1.2E1-c*c0*t22471*t22373*t22475*t22477*t22486*t22397*t22469*1.6E1+c*c0*t22471* \
                   t22373*t22477*t22486*t22397*t22469*t22499*1.6E1-a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22475* \
                   t22368*t22486*t22469*3.2E1+a5*c0*gamma_aa[index]*t22408*t22471*t22373*t22368*t22486*t22469*t22499* \
                   3.2E1-c*c0*t22511*t22413*t22414*t22371*t22471*t22494*t22477*t22486*9.6E1-c*c0*t22413*t22414*t22371* \
                   t22471*t22475*t22494*t22477*t22486*6.4E1+c*c0*t22413*t22414*t22371*t22471*t22494*t22477*t22486*t22499* \
                   1.28E2)+1/(t22502*t22502*t22502)*t22525*t22519*(t22529*t22529)*2.0+t22510*t22543*t22544*t22545*t22447* \
                   t22546*t22448*t22379*(3.0/2.0)+t22516*t22543*t22544*t22545*t22447*t22546*t22448*t22379*(3.0/2.0)-a5* \
                   t22504*t22550*t22461*t22544*t22545*t22447*t22546*t22368*1/(t22477*t22477)*(3.0/2.0)-gamma_aa[index]* \
                   t22504*t22551*t22543*t22373*t22544*t22545*t22447*t22546*t22379*t22469*6.0+gamma_aa[index]*t22504*t22551* \
                   t22543*t22373*t22544*t22447*t22474*t22546*t22379*t22469*6.0)*(1.0/2.0) : 0.0 ) -c0*t22560*t22558*t22567* \
                   t22559*(1.0/2.0)+c0*t22463*t22558*t22567*t22576*(1.0/2.0)-c0*t22454*t22463*t22558*(t22503*t22523*t22519+ \
                   t22503*t22525*t22536+t22504*t22508*t22509-t22530*t22525*t22519*t22529+t22504*t22543*t22544*t22545* \
                   t22447*t22546*t22448*t22379*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                double t24242 = tspi_m13*tspi_m13;
                double t24243 = 1/pow(rho_a[index],1.0/3.0);
                double t24244 = a2*a2;
                double t24245 = gamma_aa[index]*gamma_aa[index];
                double t24246 = 1/pow(rho_a[index],1.6E1/3.0);
                double t24247 = t24242*t24242;
                double t24248 = c*t24243;
                double t24249 = a4*a4;
                double t24250 = t24245*t24246*t24247*t24249*2.0;
                double t24251 = exp(t24250);
                double t24252 = 1/c;
                double t24253 = 1/pow(rho_a[index],7.0/3.0);
                double t24254 = sqrt(t24248);
                double t24255 = t24245*t24246*t24247*t24249;
                double t24256 = t24255+1.0;
                double t24257 = 1/(t24256*t24256);
                double t24258 = a5*gamma_aa[index]*t24242*t24252*t24253;
                double t24259 = t24258+1.0;
                double t24270 = raa2*t24254;
                double t24260 = exp(-t24270);
                double t24261 = t24260-1.0;
                double t24262 = kaa2*t24261;
                double t24263 = pow(t24248,2.0/5.0);
                double t24271 = raa1*t24263;
                double t24264 = exp(-t24271);
                double t24265 = t24264-1.0;
                double t24266 = kaa1*t24265;
                double t24267 = -kaa0+t24262+t24266;
                double t24268 = 1/(t24267*t24267);
                double t24269 = c*c0*t24251*t24243*t24257*t24259*t24268*(2.0/3.0);
                double t24272 = 1/t24256;
                double t24273 = c*c0*t24251*t24243*t24259*t24268*(2.0/3.0);
                double t24274 = 1/pow(rho_a[index],8.0/3.0);
                double t24275 = 1/pow(rho_a[index],1.7E1/3.0);
                double t24280 = a5*c0*t24242*t24251*t24274*t24268*(2.0/3.0);
                double t24281 = c*c0*gamma_aa[index]*t24251*t24247*t24275*t24249*t24259*t24268*(8.0/3.0);
                double t24276 = t24280+t24281;
                double t24277 = sqrt(t24273);
                double t24278 = t24249*t24249;
                double t24279 = t24247*t24247;
                double t24282 = 1/sqrt(t24273);
                double t24283 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t24284 = 1/(t24256*t24256*t24256);
                double t24285 = 1/pow(rho_a[index],1.1E1);
                double t24286 = t24272*t24277*6.0;
                double t24287 = c*c0*t24251*t24243*t24257*t24259*t24268*4.0;
                double t24288 = t24286+t24287+3.0;
                double t24289 = 1/t24288;
                double t24291 = a5*c0*t24242*t24251*t24274*t24257*t24268*(2.0/3.0);
                double t24292 = c*c0*gamma_aa[index]*t24251*t24247*t24257*t24275*t24249*t24259*t24268*(8.0/3.0);
                double t24293 = c*c0*gamma_aa[index]*t24251*t24247*t24275*t24284*t24249*t24259*t24268*(8.0/3.0);
                double t24290 = t24291+t24292-t24293;
                double t24294 = exp(t24269);
                double t24295 = Ei(-t24269);
                double t24296 = t24290*t24290;
                double t24297 = 1/(t24256*t24256*t24256*t24256);
                double t24298 = a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283*t24257*t24249*t24268*(1.6E1/3.0) \
                   ;
                double t24299 = c*c0*t24251*t24247*t24257*t24275*t24249*t24259*t24268*(8.0/3.0);
                double t24300 = c*c0*t24251*t24245*t24257*t24285*t24259*t24268*t24278*t24279*(3.2E1/3.0);
                double t24301 = c*c0*t24251*t24245*t24285*t24259*t24268*t24278*t24279*t24297*1.6E1;
                double t24336 = a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283*t24284*t24249*t24268*(1.6E1/3.0) \
                   ;
                double t24337 = c*c0*t24251*t24247*t24275*t24284*t24249*t24259*t24268*(8.0/3.0);
                double t24338 = c*c0*t24251*t24245*t24284*t24285*t24259*t24268*t24278*t24279*(6.4E1/3.0);
                double t24302 = t24300+t24301-t24336-t24337-t24338+t24298+t24299;
                double t24303 = t24272*t24277*4.0;
                double t24304 = c*c0*t24251*t24243*t24257*t24259*t24268*(8.0/3.0);
                double t24305 = t24303+t24304+6.0;
                double t24306 = a5*c0*t24242*t24251*t24274*t24257*t24294*t24268*t24295*(2.0/3.0);
                double t24307 = c*c0*t24251*t24243*t24290*t24257*t24294*t24259*t24268*t24295*(2.0/3.0);
                double t24308 = c*c0*gamma_aa[index]*t24251*t24247*t24257*t24275*t24249*t24294*t24259*t24268*t24295* \
                   (8.0/3.0);
                double t24373 = c*c0*gamma_aa[index]*t24251*t24247*t24275*t24284*t24249*t24294*t24259*t24268*t24295* \
                   (8.0/3.0);
                double t24309 = t24306+t24307+t24308+t24291+t24292-t24373-t24293;
                double t24310 = c*c0*t24251*t24243*t24257*t24294*t24259*t24268*t24295*(2.0/3.0);
                double t24311 = t24310+1.0;
                double t24312 = t24272*t24282*t24276*3.0;
                double t24313 = a5*c0*t24242*t24251*t24274*t24257*t24268*4.0;
                double t24314 = c*c0*gamma_aa[index]*t24251*t24247*t24257*t24275*t24249*t24259*t24268*1.6E1;
                double t24317 = gamma_aa[index]*t24246*t24247*t24257*t24249*t24277*1.2E1;
                double t24318 = c*c0*gamma_aa[index]*t24251*t24247*t24275*t24284*t24249*t24259*t24268*1.6E1;
                double t24315 = t24312+t24313+t24314-t24317-t24318;
                double t24316 = 1/(t24288*t24288);
                double t24319 = t24272*t24282*t24276*2.0;
                double t24320 = a5*c0*t24242*t24251*t24274*t24257*t24268*(8.0/3.0);
                double t24321 = c*c0*gamma_aa[index]*t24251*t24247*t24257*t24275*t24249*t24259*t24268*(3.2E1/3.0) \
                   ;
                double t24371 = gamma_aa[index]*t24246*t24247*t24257*t24249*t24277*8.0;
                double t24372 = c*c0*gamma_aa[index]*t24251*t24247*t24275*t24284*t24249*t24259*t24268*(3.2E1/3.0) \
                   ;
                double t24322 = t24320+t24321-t24371-t24372+t24319;
                double t24323 = a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283*t24249*t24268*(1.6E1/3.0);
                double t24324 = c*c0*t24251*t24247*t24275*t24249*t24259*t24268*(8.0/3.0);
                double t24325 = c*c0*t24251*t24245*t24285*t24259*t24268*t24278*t24279*(3.2E1/3.0);
                double t24326 = t24323+t24324+t24325;
                double t24327 = t24276*t24276;
                double t24328 = 1/pow(t24273,3.0/2.0);
                double t24329 = 1/pow(rho_a[index],3.2E1/3.0);
                double t24330 = 1/t24259;
                double t24331 = 1/c0;
                double t24332 = pow(rho_a[index],1.0/3.0);
                double t24333 = exp(-t24250);
                double t24334 = t24256*t24256;
                double t24335 = t24267*t24267;
                double t24339 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]);
                double t24340 = c*c;
                double t24341 = 1/pow(rho_a[index],2.0/3.0);
                double t24342 = k1*t24254;
                double t24343 = c*k2*t24243;
                double t24344 = t24342+t24343;
                double t24345 = 1/(t24344*t24344);
                double t24363 = t24340*t24341*t24345;
                double t24346 = exp(-t24363);
                double t24347 = t24244*t24245*t24246*t24247;
                double t24348 = pow(t24248,4.0/5.0);
                double t24358 = rab1*t24348;
                double t24349 = exp(-t24358);
                double t24350 = t24349-1.0;
                double t24359 = kab1*t24350;
                double t24351 = kab0-t24359;
                double t24352 = a3*gamma_aa[index]*t24242*t24252*t24253;
                double t24353 = t24352+1.0;
                double t24354 = 1/sqrt(t24353);
                double t24355 = a1*gamma_aa[index]*t24242*t24274;
                double t24356 = t24355+t24347+1.0;
                double t24357 = exp(-t24347);
                double t24364 = a1*t24242*t24274;
                double t24365 = gamma_aa[index]*t24244*t24246*t24247*2.0;
                double t24366 = t24364+t24365;
                double t24367 = t24351*t24354*t24357*t24366*1.0E5;
                double t24368 = 1/pow(t24353,3.0/2.0);
                double t24369 = a3*t24242*t24252*t24351*t24253*t24356*t24357*t24368*5.0E4;
                double t24370 = gamma_aa[index]*t24351*t24244*t24246*t24354*t24247*t24356*t24357*2.0E5;
                double t24360 = t24370-t24367+t24369;
                double t24361 = c*c0*t24243*(2.0/3.0);
                double t24374 = t24351*t24354*t24356*t24357*1.0E5;
                double t24362 = t24361-t24374;
                double t24375 = 0.0 ;
                double t24376 = t24294*t24295;
                double t24377 = t24311*t24305*t24289;
                double t24378 = t24376+t24377;
                double t24379 = 1/(c*c);
                v_gamma_aa_gamma_aa_[index] = ( (c*c0*t24243*(-2.0/3.0)+t24351*t24354*t24356*exp(-t24244*t24245*t24246* \
                   t24247)*1.0E5 > 0.0) ?  c0*rho_a[index]*t24346*1.0*(t24305*t24289*(t24300+t24301+t24296+t24298+t24299+ \
                   gamma_aa[index]*t24290*t24246*t24247*t24249*4.0+a5*t24330*t24242*t24252*t24253*t24290-gamma_aa[index]* \
                   t24272*t24290*t24246*t24247*t24249*4.0-c*c0*t24251*t24247*t24275*t24284*t24249*t24259*t24268*(8.0/ \
                   3.0)-a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283*t24284*t24249*t24268*(1.6E1/3.0)+a5*c0*t24242* \
                   t24251*t24290*t24274*t24257*t24294*t24268*t24295*(4.0/3.0)+c*c0*t24302*t24251*t24243*t24257*t24294* \
                   t24259*t24268*t24295*(2.0/3.0)+c*c0*t24251*t24243*t24257*t24294*t24259*t24268*t24295*t24296*(2.0/3.0) \
                   -c*c0*t24251*t24245*t24284*t24285*t24259*t24268*t24278*t24279*(6.4E1/3.0)+c*c0*t24251*t24247*t24257* \
                   t24275*t24249*t24294*t24259*t24268*t24295*(8.0/3.0)-c*c0*t24251*t24247*t24275*t24284*t24249*t24294* \
                   t24259*t24268*t24295*(8.0/3.0)+a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283*t24257*t24249*t24294* \
                   t24268*t24295*(1.6E1/3.0)-a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283*t24284*t24249*t24294*t24268* \
                   t24295*(1.6E1/3.0)+c*c0*t24251*t24245*t24257*t24285*t24294*t24259*t24268*t24295*t24278*t24279*(3.2E1/ \
                   3.0)-c*c0*t24251*t24245*t24284*t24285*t24294*t24259*t24268*t24295*t24278*t24279*(6.4E1/3.0)+c*c0*t24251* \
                   t24245*t24285*t24294*t24259*t24268*t24295*t24278*t24279*t24297*1.6E1+c*c0*gamma_aa[index]*t24251*t24290* \
                   t24247*t24257*t24275*t24249*t24294*t24259*t24268*t24295*(1.6E1/3.0)-c*c0*gamma_aa[index]*t24251*t24290* \
                   t24247*t24275*t24284*t24249*t24294*t24259*t24268*t24295*(1.6E1/3.0))+t24302*t24294*t24295+t24322*t24309* \
                   t24289*2.0+t24294*t24295*t24296+t24311*t24289*(t24272*t24326*t24282*2.0-t24272*t24327*t24328-t24246* \
                   t24247*t24257*t24249*t24277*8.0+t24245*t24284*t24329*t24277*t24278*t24279*3.2E1-gamma_aa[index]*t24246* \
                   t24282*t24247*t24257*t24249*t24276*8.0+c*c0*t24251*t24247*t24257*t24275*t24249*t24259*t24268*(3.2E1/ \
                   3.0)-c*c0*t24251*t24247*t24275*t24284*t24249*t24259*t24268*(3.2E1/3.0)+a5*c0*gamma_aa[index]*t24242* \
                   t24251*t24247*t24283*t24257*t24249*t24268*(6.4E1/3.0)-a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283* \
                   t24284*t24249*t24268*(6.4E1/3.0)+c*c0*t24251*t24245*t24257*t24285*t24259*t24268*t24278*t24279*(1.28E2/ \
                   3.0)-c*c0*t24251*t24245*t24284*t24285*t24259*t24268*t24278*t24279*(2.56E2/3.0)+c*c0*t24251*t24245* \
                   t24285*t24259*t24268*t24278*t24279*t24297*6.4E1)-t24311*t24322*t24315*t24316*2.0-t24305*t24315*t24316* \
                   t24309*2.0-t24311*t24305*t24316*(t24272*t24326*t24282*3.0-t24272*t24327*t24328*(3.0/2.0)-t24246*t24247* \
                   t24257*t24249*t24277*1.2E1+t24245*t24284*t24329*t24277*t24278*t24279*4.8E1-gamma_aa[index]*t24246* \
                   t24282*t24247*t24257*t24249*t24276*1.2E1+c*c0*t24251*t24247*t24257*t24275*t24249*t24259*t24268*1.6E1- \
                   c*c0*t24251*t24247*t24275*t24284*t24249*t24259*t24268*1.6E1+a5*c0*gamma_aa[index]*t24242*t24251*t24247* \
                   t24283*t24257*t24249*t24268*3.2E1-a5*c0*gamma_aa[index]*t24242*t24251*t24247*t24283*t24284*t24249* \
                   t24268*3.2E1+c*c0*t24251*t24245*t24257*t24285*t24259*t24268*t24278*t24279*6.4E1-c*c0*t24251*t24245* \
                   t24284*t24285*t24259*t24268*t24278*t24279*1.28E2+c*c0*t24251*t24245*t24285*t24259*t24268*t24278*t24279* \
                   t24297*9.6E1)+t24311*t24305*(t24315*t24315)*1/(t24288*t24288*t24288)*2.0+t24302*t24330*t24331*t24332* \
                   t24252*t24333*t24334*t24335*(3.0/2.0)+t24330*t24331*t24332*t24252*t24333*t24334*t24335*t24296*(3.0/ \
                   2.0)-a5*1/(rho_a[index]*rho_a[index])*t24331*t24242*t24333*t24334*t24290*t24335*1/(t24259*t24259)* \
                   t24379*(3.0/2.0)-gamma_aa[index]*t24330*t24331*t24252*t24333*t24334*t24290*t24335*t24247*t24249*t24339* \
                   6.0+gamma_aa[index]*t24330*t24331*t24252*t24333*t24290*t24335*t24247*t24256*t24249*t24339*6.0)*(1.0/ \
                   2.0) : 0.0 ) -c0*rho_a[index]*t24360*t24346*t24375*(t24311*t24322*t24289+t24305*t24309*t24289+t24290* \
                   t24294*t24295-t24311*t24305*t24315*t24316+t24330*t24331*t24332*t24252*t24333*t24334*t24290*t24335* \
                   (3.0/2.0))+c0*rho_a[index]*t24346*t24375*t24378*(t24351*t24244*t24246*t24354*t24247*t24357*2.0E5-t24351* \
                   t24244*t24246*t24354*t24247*t24356*t24357*2.0E5+(a3*a3)*1/pow(rho_a[index],1.4E1/3.0)*t24351*1/pow(t24353,5.0/ \
                   2.0)*t24247*t24356*t24357*t24379*7.5E4+t24351*(t24244*t24244)*t24245*t24354*t24329*t24356*t24357*t24279* \
                   4.0E5-a3*t24242*t24252*t24351*t24253*t24357*t24366*t24368*1.0E5-gamma_aa[index]*t24351*t24244*t24246* \
                   t24354*t24247*t24357*t24366*4.0E5+a3*gamma_aa[index]*1/pow(rho_a[index],2.3E1/3.0)*t24242*t24252*t24351* \
                   t24244*t24247*t24356*t24357*t24368*2.0E5)*(1.0/2.0)- 0.0 ;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t22582 = tspi_m13*tspi_m13;
                double t22583 = 1/pow(rho_b[index],1.0/3.0);
                double t22584 = a2*a2;
                double t22585 = gamma_bb[index]*gamma_bb[index];
                double t22586 = 1/pow(rho_b[index],1.6E1/3.0);
                double t22587 = t22582*t22582;
                double t22588 = c*t22583;
                double t22589 = pow(t22588,4.0/5.0);
                double t22603 = rab1*t22589;
                double t22590 = exp(-t22603);
                double t22591 = t22590-1.0;
                double t22604 = kab1*t22591;
                double t22592 = kab0-t22604;
                double t22593 = 1/c;
                double t22594 = 1/pow(rho_b[index],7.0/3.0);
                double t22595 = a3*gamma_bb[index]*t22582*t22593*t22594;
                double t22596 = t22595+1.0;
                double t22597 = t22584*t22585*t22586*t22587;
                double t22598 = 1/pow(rho_b[index],8.0/3.0);
                double t22599 = a1*gamma_bb[index]*t22582*t22598;
                double t22600 = t22597+t22599+1.0;
                double t22601 = t22584*t22585*t22586*t22587*2.0;
                double t22602 = exp(t22601);
                double t22605 = 1/(t22592*t22592);
                double t22606 = 1/(t22600*t22600);
                double t22607 = c*c0*t22602*t22605*t22606*t22583*t22596*(2.0/3.0);
                double t22608 = a1*t22582*t22598;
                double t22609 = gamma_bb[index]*t22584*t22586*t22587*2.0;
                double t22610 = t22608+t22609;
                double t22611 = 1/pow(rho_b[index],1.7E1/3.0);
                double t22612 = 1/(t22600*t22600*t22600);
                double t22613 = sqrt(t22607);
                double t22615 = a3*c0*t22602*t22605*t22606*t22582*t22598*(2.0/3.0);
                double t22616 = c*c0*t22610*t22602*t22612*t22605*t22583*t22596*(4.0/3.0);
                double t22617 = c*c0*gamma_bb[index]*t22602*t22611*t22605*t22606*t22584*t22587*t22596*(8.0/3.0);
                double t22614 = t22615-t22616+t22617;
                double t22618 = t22610*t22610;
                double t22619 = 1/(t22600*t22600*t22600*t22600);
                double t22620 = c*c0*t22602*t22605*t22618*t22583*t22619*t22596*4.0;
                double t22621 = c*c0*t22602*t22611*t22605*t22606*t22584*t22587*t22596*(8.0/3.0);
                double t22622 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t22623 = a3*c0*gamma_bb[index]*t22602*t22622*t22605*t22606*t22582*t22584*t22587*(1.6E1/3.0) \
                   ;
                double t22624 = exp(t22607);
                double t22625 = Ei(-t22607);
                double t22626 = t22584*t22584;
                double t22627 = 1/pow(rho_b[index],1.1E1);
                double t22628 = t22587*t22587;
                double t22629 = c*c0*t22602*t22605*t22606*t22626*t22627*t22628*t22585*t22596*(3.2E1/3.0);
                double t22632 = c*c0*gamma_bb[index]*t22610*t22602*t22611*t22612*t22605*t22584*t22587*t22596*(3.2E1/ \
                   3.0);
                double t22637 = a3*c0*t22610*t22602*t22612*t22605*t22582*t22598*(8.0/3.0);
                double t22638 = c*c0*t22602*t22611*t22612*t22605*t22584*t22587*t22596*(8.0/3.0);
                double t22630 = t22620+t22621+t22623-t22632-t22637+t22629-t22638;
                double t22631 = t22614*t22614;
                double t22633 = t22613*6.0;
                double t22634 = c*c0*t22602*t22605*t22606*t22583*t22596*4.0;
                double t22635 = t22633+t22634+3.0;
                double t22636 = 1/t22635;
                double t22639 = 1/sqrt(t22607);
                double t22640 = c*c0*t22602*t22605*t22606*t22624*t22625*t22583*t22596*(2.0/3.0);
                double t22641 = t22640+1.0;
                double t22642 = t22614*t22639*2.0;
                double t22643 = a3*c0*t22602*t22605*t22606*t22582*t22598*(8.0/3.0);
                double t22644 = c*c0*gamma_bb[index]*t22602*t22611*t22605*t22606*t22584*t22587*t22596*(3.2E1/3.0) \
                   ;
                double t22681 = c*c0*t22610*t22602*t22612*t22605*t22583*t22596*(1.6E1/3.0);
                double t22645 = t22642+t22643+t22644-t22681;
                double t22646 = 1/(t22635*t22635);
                double t22647 = t22613*4.0;
                double t22648 = c*c0*t22602*t22605*t22606*t22583*t22596*(8.0/3.0);
                double t22649 = t22647+t22648+6.0;
                double t22650 = 1/pow(t22607,3.0/2.0);
                double t22651 = t22614*t22639*3.0;
                double t22652 = a3*c0*t22602*t22605*t22606*t22582*t22598*4.0;
                double t22653 = c*c0*gamma_bb[index]*t22602*t22611*t22605*t22606*t22584*t22587*t22596*1.6E1;
                double t22655 = c*c0*t22610*t22602*t22612*t22605*t22583*t22596*8.0;
                double t22654 = t22651+t22652+t22653-t22655;
                double t22656 = a3*c0*t22602*t22605*t22606*t22624*t22625*t22582*t22598*(2.0/3.0);
                double t22657 = c*c0*t22602*t22605*t22614*t22606*t22624*t22625*t22583*t22596*(2.0/3.0);
                double t22658 = c*c0*gamma_bb[index]*t22602*t22611*t22605*t22606*t22624*t22625*t22584*t22587*t22596* \
                   (8.0/3.0);
                double t22682 = c*c0*t22610*t22602*t22612*t22605*t22624*t22625*t22583*t22596*(4.0/3.0);
                double t22659 = t22615-t22616+t22617-t22682+t22656+t22657+t22658;
                double t22660 = 1/t22596;
                double t22661 = 1/c0;
                double t22662 = pow(rho_b[index],1.0/3.0);
                double t22663 = exp(-t22601);
                double t22664 = t22592*t22592;
                double t22665 = t22600*t22600;
                double t22666 = 1/sqrt(t22596);
                double t22667 = exp(-t22597);
                double t22674 = 1/pow(t22596,3.0/2.0);
                double t22678 = t22610*t22592*t22666*t22667*1.0E5;
                double t22679 = a3*t22600*t22582*t22592*t22593*t22674*t22594*t22667*5.0E4;
                double t22680 = gamma_bb[index]*t22600*t22592*t22584*t22666*t22586*t22667*t22587*2.0E5;
                double t22668 = t22680-t22678+t22679;
                double t22669 = c*c0*t22583*(2.0/3.0);
                double t22676 = t22600*t22592*t22666*t22667*1.0E5;
                double t22670 = -t22676+t22669;
                double t22671 = t22624*t22625;
                double t22672 = t22641*t22636*t22649;
                double t22673 = t22671+t22672;
                double t22675 = 1/(c*c);
                double t22677 = 0.0 ;
                double t22683 = a4*a4;
                double t22684 = t22683*t22585*t22586*t22587*2.0;
                double t22685 = exp(t22684);
                double t22686 = sqrt(t22588);
                double t22687 = t22683*t22585*t22586*t22587;
                double t22688 = t22687+1.0;
                double t22689 = 1/(t22688*t22688);
                double t22690 = a5*gamma_bb[index]*t22582*t22593*t22594;
                double t22691 = t22690+1.0;
                double t22702 = raa2*t22686;
                double t22692 = exp(-t22702);
                double t22693 = t22692-1.0;
                double t22694 = kaa2*t22693;
                double t22695 = pow(t22588,2.0/5.0);
                double t22703 = raa1*t22695;
                double t22696 = exp(-t22703);
                double t22697 = t22696-1.0;
                double t22698 = kaa1*t22697;
                double t22699 = -kaa0+t22694+t22698;
                double t22700 = 1/(t22699*t22699);
                double t22701 = c*c0*t22700*t22583*t22691*t22685*t22689*(2.0/3.0);
                double t22704 = 1/t22688;
                double t22705 = c*c0*t22700*t22583*t22691*t22685*(2.0/3.0);
                double t22710 = a5*c0*t22700*t22582*t22685*t22598*(2.0/3.0);
                double t22711 = c*c0*gamma_bb[index]*t22700*t22611*t22691*t22683*t22685*t22587*(8.0/3.0);
                double t22706 = t22710+t22711;
                double t22707 = sqrt(t22705);
                double t22708 = t22683*t22683;
                double t22709 = 1/pow(rho_b[index],3.2E1/3.0);
                double t22712 = 1/sqrt(t22705);
                double t22713 = 1/(t22688*t22688*t22688);
                double t22714 = t22704*t22707*6.0;
                double t22715 = c*c0*t22700*t22583*t22691*t22685*t22689*4.0;
                double t22716 = t22714+t22715+3.0;
                double t22717 = 1/t22716;
                double t22719 = a5*c0*t22700*t22582*t22685*t22598*t22689*(2.0/3.0);
                double t22720 = c*c0*gamma_bb[index]*t22700*t22611*t22691*t22683*t22685*t22587*t22689*(8.0/3.0);
                double t22721 = c*c0*gamma_bb[index]*t22700*t22611*t22713*t22691*t22683*t22685*t22587*(8.0/3.0);
                double t22718 = t22720-t22721+t22719;
                double t22722 = exp(t22701);
                double t22723 = Ei(-t22701);
                double t22724 = t22718*t22718;
                double t22725 = 1/(t22688*t22688*t22688*t22688);
                double t22726 = a5*c0*gamma_bb[index]*t22700*t22622*t22582*t22683*t22685*t22587*t22689*(1.6E1/3.0) \
                   ;
                double t22727 = c*c0*t22700*t22611*t22691*t22683*t22685*t22587*t22689*(8.0/3.0);
                double t22728 = c*c0*t22700*t22627*t22708*t22628*t22691*t22585*t22685*t22689*(3.2E1/3.0);
                double t22729 = c*c0*t22700*t22725*t22627*t22708*t22628*t22691*t22585*t22685*1.6E1;
                double t22761 = a5*c0*gamma_bb[index]*t22700*t22622*t22713*t22582*t22683*t22685*t22587*(1.6E1/3.0) \
                   ;
                double t22762 = c*c0*t22700*t22611*t22713*t22691*t22683*t22685*t22587*(8.0/3.0);
                double t22763 = c*c0*t22700*t22713*t22627*t22708*t22628*t22691*t22585*t22685*(6.4E1/3.0);
                double t22730 = -t22761+t22726-t22762+t22727-t22763+t22728+t22729;
                double t22731 = t22704*t22707*4.0;
                double t22732 = c*c0*t22700*t22583*t22691*t22685*t22689*(8.0/3.0);
                double t22733 = t22731+t22732+6.0;
                double t22734 = a5*c0*t22700*t22722*t22723*t22582*t22685*t22598*t22689*(2.0/3.0);
                double t22735 = c*c0*t22700*t22722*t22723*t22583*t22691*t22718*t22685*t22689*(2.0/3.0);
                double t22736 = c*c0*gamma_bb[index]*t22700*t22611*t22722*t22723*t22691*t22683*t22685*t22587*t22689* \
                   (8.0/3.0);
                double t22778 = c*c0*gamma_bb[index]*t22700*t22611*t22713*t22722*t22723*t22691*t22683*t22685*t22587* \
                   (8.0/3.0);
                double t22737 = t22720-t22721+t22734+t22735+t22736+t22719-t22778;
                double t22738 = c*c0*t22700*t22722*t22723*t22583*t22691*t22685*t22689*(2.0/3.0);
                double t22739 = t22738+1.0;
                double t22740 = t22712*t22704*t22706*3.0;
                double t22741 = a5*c0*t22700*t22582*t22685*t22598*t22689*4.0;
                double t22742 = c*c0*gamma_bb[index]*t22700*t22611*t22691*t22683*t22685*t22587*t22689*1.6E1;
                double t22745 = gamma_bb[index]*t22707*t22683*t22586*t22587*t22689*1.2E1;
                double t22746 = c*c0*gamma_bb[index]*t22700*t22611*t22713*t22691*t22683*t22685*t22587*1.6E1;
                double t22743 = t22740+t22741+t22742-t22745-t22746;
                double t22744 = 1/(t22716*t22716);
                double t22747 = t22712*t22704*t22706*2.0;
                double t22748 = a5*c0*t22700*t22582*t22685*t22598*t22689*(8.0/3.0);
                double t22749 = c*c0*gamma_bb[index]*t22700*t22611*t22691*t22683*t22685*t22587*t22689*(3.2E1/3.0) \
                   ;
                double t22776 = gamma_bb[index]*t22707*t22683*t22586*t22587*t22689*8.0;
                double t22777 = c*c0*gamma_bb[index]*t22700*t22611*t22713*t22691*t22683*t22685*t22587*(3.2E1/3.0) \
                   ;
                double t22750 = t22747+t22748+t22749-t22776-t22777;
                double t22751 = a5*c0*gamma_bb[index]*t22700*t22622*t22582*t22683*t22685*t22587*(1.6E1/3.0);
                double t22752 = c*c0*t22700*t22611*t22691*t22683*t22685*t22587*(8.0/3.0);
                double t22753 = c*c0*t22700*t22627*t22708*t22628*t22691*t22585*t22685*(3.2E1/3.0);
                double t22754 = t22751+t22752+t22753;
                double t22755 = t22706*t22706;
                double t22756 = 1/pow(t22705,3.0/2.0);
                double t22757 = 1/t22691;
                double t22758 = exp(-t22684);
                double t22759 = t22688*t22688;
                double t22760 = t22699*t22699;
                double t22764 = 1/(rho_b[index]*rho_b[index]);
                double t22765 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]);
                double t22766 = c*c;
                double t22767 = 1/pow(rho_b[index],2.0/3.0);
                double t22768 = k1*t22686;
                double t22769 = c*k2*t22583;
                double t22770 = t22768+t22769;
                double t22771 = 1/(t22770*t22770);
                double t22775 = t22771*t22766*t22767;
                double t22772 = exp(-t22775);
                double t22773 = 0.0 ;
                double t22774 = t22668*t22668;
                double t22779 = t22722*t22723;
                double t22780 = t22733*t22717*t22739;
                double t22781 = t22780+t22779;
                double t22782 = t22592*t22584*t22666*t22586*t22667*t22587*2.0E5;
                double t22783 = a3*a3;
                double t22784 = 1/pow(rho_b[index],1.4E1/3.0);
                double t22785 = 1/pow(t22596,5.0/2.0);
                double t22786 = t22600*t22592*t22675*t22783*t22667*t22784*t22587*t22785*7.5E4;
                double t22787 = t22600*t22626*t22592*t22628*t22709*t22585*t22666*t22667*4.0E5;
                double t22788 = 1/pow(rho_b[index],2.3E1/3.0);
                double t22789 = a3*gamma_bb[index]*t22600*t22582*t22592*t22584*t22593*t22674*t22667*t22587*t22788* \
                   2.0E5;
                double t22790 = t22782+t22786+t22787+t22789-t22600*t22592*t22584*t22666*t22586*t22667*t22587*2.0E5- \
                   a3*t22610*t22582*t22592*t22593*t22674*t22594*t22667*1.0E5-gamma_bb[index]*t22610*t22592*t22584*t22666* \
                   t22586*t22667*t22587*4.0E5;
                v_gamma_bb_gamma_bb_[index] = rho_a[index]*( ( (c*c0*t22583*(-2.0/3.0)+t22600*t22592*t22666*exp(- \
                   t22584*t22585*t22586*t22587)*1.0E5 > 0.0) ? c0*1.0*(t22641*t22636*(-t22631*t22650+t22630*t22639*2.0- \
                   a3*c0*t22610*t22602*t22612*t22605*t22582*t22598*(3.2E1/3.0)+c*c0*t22602*t22605*t22618*t22583*t22619* \
                   t22596*1.6E1-c*c0*t22602*t22611*t22612*t22605*t22584*t22587*t22596*(3.2E1/3.0)+c*c0*t22602*t22611* \
                   t22605*t22606*t22584*t22587*t22596*(3.2E1/3.0)+a3*c0*gamma_bb[index]*t22602*t22622*t22605*t22606*t22582* \
                   t22584*t22587*(6.4E1/3.0)+c*c0*t22602*t22605*t22606*t22626*t22627*t22628*t22585*t22596*(1.28E2/3.0) \
                   -c*c0*gamma_bb[index]*t22610*t22602*t22611*t22612*t22605*t22584*t22587*t22596*(1.28E2/3.0))+t22636* \
                   t22649*(t22620+t22621+t22631+t22623-t22632+t22629-(t22610*t22614*2.0)/t22600+gamma_bb[index]*t22614* \
                   t22584*t22586*t22587*4.0+a3*t22614*t22660*t22582*t22593*t22594-a3*c0*t22610*t22602*t22612*t22605*t22582* \
                   t22598*(8.0/3.0)-c*c0*t22602*t22611*t22612*t22605*t22584*t22587*t22596*(8.0/3.0)-a3*c0*t22610*t22602* \
                   t22612*t22605*t22624*t22625*t22582*t22598*(8.0/3.0)+a3*c0*t22602*t22605*t22614*t22606*t22624*t22625* \
                   t22582*t22598*(4.0/3.0)+c*c0*t22602*t22630*t22605*t22606*t22624*t22625*t22583*t22596*(2.0/3.0)+c*c0* \
                   t22602*t22631*t22605*t22606*t22624*t22625*t22583*t22596*(2.0/3.0)+c*c0*t22602*t22605*t22624*t22625* \
                   t22618*t22583*t22619*t22596*4.0-c*c0*t22610*t22602*t22612*t22605*t22614*t22624*t22625*t22583*t22596* \
                   (8.0/3.0)-c*c0*t22602*t22611*t22612*t22605*t22624*t22625*t22584*t22587*t22596*(8.0/3.0)+c*c0*t22602* \
                   t22611*t22605*t22606*t22624*t22625*t22584*t22587*t22596*(8.0/3.0)+a3*c0*gamma_bb[index]*t22602*t22622* \
                   t22605*t22606*t22624*t22625*t22582*t22584*t22587*(1.6E1/3.0)+c*c0*t22602*t22605*t22606*t22624*t22625* \
                   t22626*t22627*t22628*t22585*t22596*(3.2E1/3.0)-c*c0*gamma_bb[index]*t22610*t22602*t22611*t22612*t22605* \
                   t22624*t22625*t22584*t22587*t22596*(3.2E1/3.0)+c*c0*gamma_bb[index]*t22602*t22611*t22605*t22614*t22606* \
                   t22624*t22625*t22584*t22587*t22596*(1.6E1/3.0))+t22630*t22624*t22625+t22631*t22624*t22625+t22636*t22645* \
                   t22659*2.0-t22641*t22645*t22654*t22646*2.0-t22654*t22646*t22649*t22659*2.0-t22641*t22646*t22649*(t22631* \
                   t22650*(-3.0/2.0)+t22630*t22639*3.0-a3*c0*t22610*t22602*t22612*t22605*t22582*t22598*1.6E1+c*c0*t22602* \
                   t22605*t22618*t22583*t22619*t22596*2.4E1-c*c0*t22602*t22611*t22612*t22605*t22584*t22587*t22596*1.6E1+ \
                   c*c0*t22602*t22611*t22605*t22606*t22584*t22587*t22596*1.6E1+a3*c0*gamma_bb[index]*t22602*t22622*t22605* \
                   t22606*t22582*t22584*t22587*3.2E1+c*c0*t22602*t22605*t22606*t22626*t22627*t22628*t22585*t22596*6.4E1- \
                   c*c0*gamma_bb[index]*t22610*t22602*t22611*t22612*t22605*t22584*t22587*t22596*6.4E1)+t22641*1/(t22635* \
                   t22635*t22635)*(t22654*t22654)*t22649*2.0+t22630*t22660*t22661*t22662*t22663*t22664*t22593*t22665* \
                   (3.0/2.0)+t22631*t22660*t22661*t22662*t22663*t22664*t22593*t22665*(3.0/2.0)+t22600*t22610*t22614*t22660* \
                   t22661*t22662*t22663*t22664*t22593*3.0-a3*t22614*t22661*t22582*t22663*t22664*t22665*t22764*t22675* \
                   1/(t22596*t22596)*(3.0/2.0)-gamma_bb[index]*t22614*t22660*t22661*t22663*t22664*t22584*t22593*t22665* \
                   t22765*t22587*6.0)*(1.0/2.0) : 0.0 ) -c0*t22673*t22773*t22774*(1.0/2.0)+c0*t22673*t22790*t22677*(1.0/ \
                   2.0)-c0*t22668*t22677*(t22614*t22624*t22625+t22641*t22636*t22645+t22636*t22649*t22659-t22641*t22654* \
                   t22646*t22649+t22614*t22660*t22661*t22662*t22663*t22664*t22593*t22665*(3.0/2.0)))+rho_b[index]*( (  \
                   (t22676-t22669 > 0.0) ? c0*t22772*1.0*(t22733*t22717*(t22724+t22726+t22727+t22728+t22729+gamma_bb[index]* \
                   t22718*t22683*t22586*t22587*4.0+a5*t22582*t22718*t22593*t22594*t22757-gamma_bb[index]*t22704*t22718* \
                   t22683*t22586*t22587*4.0-c*c0*t22700*t22611*t22713*t22691*t22683*t22685*t22587*(8.0/3.0)-a5*c0*gamma_bb[index]* \
                   t22700*t22622*t22713*t22582*t22683*t22685*t22587*(1.6E1/3.0)+a5*c0*t22700*t22722*t22723*t22582*t22718* \
                   t22685*t22598*t22689*(4.0/3.0)+c*c0*t22700*t22730*t22722*t22723*t22583*t22691*t22685*t22689*(2.0/3.0) \
                   -c*c0*t22700*t22713*t22627*t22708*t22628*t22691*t22585*t22685*(6.4E1/3.0)+c*c0*t22700*t22722*t22723* \
                   t22724*t22583*t22691*t22685*t22689*(2.0/3.0)-c*c0*t22700*t22611*t22713*t22722*t22723*t22691*t22683* \
                   t22685*t22587*(8.0/3.0)+c*c0*t22700*t22611*t22722*t22723*t22691*t22683*t22685*t22587*t22689*(8.0/3.0) \
                   -a5*c0*gamma_bb[index]*t22700*t22622*t22713*t22722*t22723*t22582*t22683*t22685*t22587*(1.6E1/3.0)+ \
                   a5*c0*gamma_bb[index]*t22700*t22622*t22722*t22723*t22582*t22683*t22685*t22587*t22689*(1.6E1/3.0)-c* \
                   c0*t22700*t22713*t22722*t22723*t22627*t22708*t22628*t22691*t22585*t22685*(6.4E1/3.0)+c*c0*t22700*t22722* \
                   t22723*t22725*t22627*t22708*t22628*t22691*t22585*t22685*1.6E1+c*c0*t22700*t22722*t22723*t22627*t22708* \
                   t22628*t22691*t22585*t22685*t22689*(3.2E1/3.0)-c*c0*gamma_bb[index]*t22700*t22611*t22713*t22722*t22723* \
                   t22691*t22718*t22683*t22685*t22587*(1.6E1/3.0)+c*c0*gamma_bb[index]*t22700*t22611*t22722*t22723*t22691* \
                   t22718*t22683*t22685*t22587*t22689*(1.6E1/3.0))+t22730*t22722*t22723+t22722*t22723*t22724+t22750*t22717* \
                   t22737*2.0+t22717*t22739*(t22712*t22704*t22754*2.0-t22704*t22755*t22756-t22707*t22683*t22586*t22587* \
                   t22689*8.0+t22713*t22707*t22708*t22628*t22709*t22585*3.2E1-gamma_bb[index]*t22712*t22706*t22683*t22586* \
                   t22587*t22689*8.0-c*c0*t22700*t22611*t22713*t22691*t22683*t22685*t22587*(3.2E1/3.0)+c*c0*t22700*t22611* \
                   t22691*t22683*t22685*t22587*t22689*(3.2E1/3.0)-a5*c0*gamma_bb[index]*t22700*t22622*t22713*t22582*t22683* \
                   t22685*t22587*(6.4E1/3.0)+a5*c0*gamma_bb[index]*t22700*t22622*t22582*t22683*t22685*t22587*t22689*(6.4E1/ \
                   3.0)-c*c0*t22700*t22713*t22627*t22708*t22628*t22691*t22585*t22685*(2.56E2/3.0)+c*c0*t22700*t22725* \
                   t22627*t22708*t22628*t22691*t22585*t22685*6.4E1+c*c0*t22700*t22627*t22708*t22628*t22691*t22585*t22685* \
                   t22689*(1.28E2/3.0))-t22733*t22743*t22744*t22737*2.0-t22750*t22743*t22744*t22739*2.0-t22733*t22744* \
                   t22739*(t22712*t22704*t22754*3.0-t22704*t22755*t22756*(3.0/2.0)-t22707*t22683*t22586*t22587*t22689* \
                   1.2E1+t22713*t22707*t22708*t22628*t22709*t22585*4.8E1-gamma_bb[index]*t22712*t22706*t22683*t22586* \
                   t22587*t22689*1.2E1-c*c0*t22700*t22611*t22713*t22691*t22683*t22685*t22587*1.6E1+c*c0*t22700*t22611* \
                   t22691*t22683*t22685*t22587*t22689*1.6E1-a5*c0*gamma_bb[index]*t22700*t22622*t22713*t22582*t22683* \
                   t22685*t22587*3.2E1+a5*c0*gamma_bb[index]*t22700*t22622*t22582*t22683*t22685*t22587*t22689*3.2E1-c* \
                   c0*t22700*t22713*t22627*t22708*t22628*t22691*t22585*t22685*1.28E2+c*c0*t22700*t22725*t22627*t22708* \
                   t22628*t22691*t22585*t22685*9.6E1+c*c0*t22700*t22627*t22708*t22628*t22691*t22585*t22685*t22689*6.4E1) \
                   +t22733*1/(t22716*t22716*t22716)*(t22743*t22743)*t22739*2.0+t22730*t22661*t22760*t22662*t22593*t22757* \
                   t22758*t22759*(3.0/2.0)+t22661*t22724*t22760*t22662*t22593*t22757*t22758*t22759*(3.0/2.0)-a5*t22661* \
                   t22760*t22582*1/(t22691*t22691)*t22718*t22764*t22675*t22758*t22759*(3.0/2.0)-gamma_bb[index]*t22661* \
                   t22760*t22718*t22593*t22683*t22765*t22757*t22587*t22758*t22759*6.0+gamma_bb[index]*t22661*t22760*t22718* \
                   t22593*t22683*t22765*t22757*t22587*t22758*t22688*6.0)*(1.0/2.0) : 0.0 ) -c0*t22772*t22781*t22773*t22774* \
                   (1.0/2.0)+c0*t22772*t22781*t22790*t22677*(1.0/2.0)-c0*t22772*t22668*t22677*(t22722*t22723*t22718+t22733* \
                   t22717*t22737+t22750*t22717*t22739-t22733*t22743*t22744*t22739+t22661*t22760*t22662*t22718*t22593* \
                   t22757*t22758*t22759*(3.0/2.0)));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t23450 = tspi_m13*tspi_m13;
                double t23451 = 1/pow(rho_b[index],1.0/3.0);
                double t23452 = a2*a2;
                double t23453 = gamma_bb[index]*gamma_bb[index];
                double t23454 = 1/pow(rho_b[index],1.6E1/3.0);
                double t23455 = t23450*t23450;
                double t23456 = c*t23451;
                double t23457 = a4*a4;
                double t23458 = t23453*t23454*t23455*t23457*2.0;
                double t23459 = exp(t23458);
                double t23460 = 1/c;
                double t23461 = 1/pow(rho_b[index],7.0/3.0);
                double t23462 = sqrt(t23456);
                double t23463 = t23453*t23454*t23455*t23457;
                double t23464 = t23463+1.0;
                double t23465 = 1/(t23464*t23464);
                double t23466 = a5*gamma_bb[index]*t23450*t23460*t23461;
                double t23467 = t23466+1.0;
                double t23478 = raa2*t23462;
                double t23468 = exp(-t23478);
                double t23469 = t23468-1.0;
                double t23470 = kaa2*t23469;
                double t23471 = pow(t23456,2.0/5.0);
                double t23479 = raa1*t23471;
                double t23472 = exp(-t23479);
                double t23473 = t23472-1.0;
                double t23474 = kaa1*t23473;
                double t23475 = -kaa0+t23470+t23474;
                double t23476 = 1/(t23475*t23475);
                double t23477 = c*c0*t23451*t23465*t23467*t23476*t23459*(2.0/3.0);
                double t23480 = 1/t23464;
                double t23481 = c*c0*t23451*t23467*t23476*t23459*(2.0/3.0);
                double t23482 = 1/pow(rho_b[index],8.0/3.0);
                double t23483 = 1/pow(rho_b[index],1.7E1/3.0);
                double t23488 = a5*c0*t23450*t23482*t23476*t23459*(2.0/3.0);
                double t23489 = c*c0*gamma_bb[index]*t23455*t23483*t23457*t23467*t23476*t23459*(8.0/3.0);
                double t23484 = t23488+t23489;
                double t23485 = sqrt(t23481);
                double t23486 = t23457*t23457;
                double t23487 = t23455*t23455;
                double t23490 = 1/sqrt(t23481);
                double t23491 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t23492 = 1/(t23464*t23464*t23464);
                double t23493 = 1/pow(rho_b[index],1.1E1);
                double t23494 = t23480*t23485*6.0;
                double t23495 = c*c0*t23451*t23465*t23467*t23476*t23459*4.0;
                double t23496 = t23494+t23495+3.0;
                double t23497 = 1/t23496;
                double t23499 = a5*c0*t23450*t23482*t23465*t23476*t23459*(2.0/3.0);
                double t23500 = c*c0*gamma_bb[index]*t23455*t23465*t23483*t23457*t23467*t23476*t23459*(8.0/3.0);
                double t23501 = c*c0*gamma_bb[index]*t23455*t23483*t23492*t23457*t23467*t23476*t23459*(8.0/3.0);
                double t23498 = t23500-t23501+t23499;
                double t23502 = exp(t23477);
                double t23503 = Ei(-t23477);
                double t23504 = t23498*t23498;
                double t23505 = 1/(t23464*t23464*t23464*t23464);
                double t23506 = a5*c0*gamma_bb[index]*t23450*t23455*t23491*t23465*t23457*t23476*t23459*(1.6E1/3.0) \
                   ;
                double t23507 = c*c0*t23455*t23465*t23483*t23457*t23467*t23476*t23459*(8.0/3.0);
                double t23508 = c*c0*t23453*t23465*t23493*t23467*t23476*t23459*t23486*t23487*(3.2E1/3.0);
                double t23509 = c*c0*t23505*t23453*t23493*t23467*t23476*t23459*t23486*t23487*1.6E1;
                double t23544 = a5*c0*gamma_bb[index]*t23450*t23455*t23491*t23492*t23457*t23476*t23459*(1.6E1/3.0) \
                   ;
                double t23545 = c*c0*t23455*t23483*t23492*t23457*t23467*t23476*t23459*(8.0/3.0);
                double t23546 = c*c0*t23453*t23492*t23493*t23467*t23476*t23459*t23486*t23487*(6.4E1/3.0);
                double t23510 = t23506+t23507+t23508-t23544+t23509-t23545-t23546;
                double t23511 = t23480*t23485*4.0;
                double t23512 = c*c0*t23451*t23465*t23467*t23476*t23459*(8.0/3.0);
                double t23513 = t23511+t23512+6.0;
                double t23514 = a5*c0*t23502*t23503*t23450*t23482*t23465*t23476*t23459*(2.0/3.0);
                double t23515 = c*c0*t23502*t23503*t23451*t23465*t23467*t23476*t23459*t23498*(2.0/3.0);
                double t23516 = c*c0*gamma_bb[index]*t23502*t23503*t23455*t23465*t23483*t23457*t23467*t23476*t23459* \
                   (8.0/3.0);
                double t23581 = c*c0*gamma_bb[index]*t23502*t23503*t23455*t23483*t23492*t23457*t23467*t23476*t23459* \
                   (8.0/3.0);
                double t23517 = t23500-t23501+t23514+t23515+t23516-t23581+t23499;
                double t23518 = c*c0*t23502*t23503*t23451*t23465*t23467*t23476*t23459*(2.0/3.0);
                double t23519 = t23518+1.0;
                double t23520 = t23480*t23490*t23484*3.0;
                double t23521 = a5*c0*t23450*t23482*t23465*t23476*t23459*4.0;
                double t23522 = c*c0*gamma_bb[index]*t23455*t23465*t23483*t23457*t23467*t23476*t23459*1.6E1;
                double t23525 = gamma_bb[index]*t23454*t23455*t23465*t23457*t23485*1.2E1;
                double t23526 = c*c0*gamma_bb[index]*t23455*t23483*t23492*t23457*t23467*t23476*t23459*1.6E1;
                double t23523 = t23520+t23521+t23522-t23525-t23526;
                double t23524 = 1/(t23496*t23496);
                double t23527 = t23480*t23490*t23484*2.0;
                double t23528 = a5*c0*t23450*t23482*t23465*t23476*t23459*(8.0/3.0);
                double t23529 = c*c0*gamma_bb[index]*t23455*t23465*t23483*t23457*t23467*t23476*t23459*(3.2E1/3.0) \
                   ;
                double t23579 = gamma_bb[index]*t23454*t23455*t23465*t23457*t23485*8.0;
                double t23580 = c*c0*gamma_bb[index]*t23455*t23483*t23492*t23457*t23467*t23476*t23459*(3.2E1/3.0) \
                   ;
                double t23530 = -t23580+t23527+t23528+t23529-t23579;
                double t23531 = a5*c0*gamma_bb[index]*t23450*t23455*t23491*t23457*t23476*t23459*(1.6E1/3.0);
                double t23532 = c*c0*t23455*t23483*t23457*t23467*t23476*t23459*(8.0/3.0);
                double t23533 = c*c0*t23453*t23493*t23467*t23476*t23459*t23486*t23487*(3.2E1/3.0);
                double t23534 = t23531+t23532+t23533;
                double t23535 = t23484*t23484;
                double t23536 = 1/pow(t23481,3.0/2.0);
                double t23537 = 1/pow(rho_b[index],3.2E1/3.0);
                double t23538 = 1/t23467;
                double t23539 = 1/c0;
                double t23540 = pow(rho_b[index],1.0/3.0);
                double t23541 = exp(-t23458);
                double t23542 = t23464*t23464;
                double t23543 = t23475*t23475;
                double t23547 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]);
                double t23548 = c*c;
                double t23549 = 1/pow(rho_b[index],2.0/3.0);
                double t23550 = k1*t23462;
                double t23551 = c*k2*t23451;
                double t23552 = t23550+t23551;
                double t23553 = 1/(t23552*t23552);
                double t23571 = t23553*t23548*t23549;
                double t23554 = exp(-t23571);
                double t23555 = t23452*t23453*t23454*t23455;
                double t23556 = pow(t23456,4.0/5.0);
                double t23566 = rab1*t23556;
                double t23557 = exp(-t23566);
                double t23558 = t23557-1.0;
                double t23567 = kab1*t23558;
                double t23559 = kab0-t23567;
                double t23560 = a3*gamma_bb[index]*t23450*t23460*t23461;
                double t23561 = t23560+1.0;
                double t23562 = 1/sqrt(t23561);
                double t23563 = a1*gamma_bb[index]*t23450*t23482;
                double t23564 = t23563+t23555+1.0;
                double t23565 = exp(-t23555);
                double t23572 = a1*t23450*t23482;
                double t23573 = gamma_bb[index]*t23452*t23454*t23455*2.0;
                double t23574 = t23572+t23573;
                double t23575 = t23562*t23565*t23574*t23559*1.0E5;
                double t23576 = 1/pow(t23561,3.0/2.0);
                double t23577 = a3*t23450*t23460*t23461*t23564*t23565*t23576*t23559*5.0E4;
                double t23578 = gamma_bb[index]*t23452*t23454*t23562*t23455*t23564*t23565*t23559*2.0E5;
                double t23568 = -t23575+t23577+t23578;
                double t23569 = c*c0*t23451*(2.0/3.0);
                double t23582 = t23562*t23564*t23565*t23559*1.0E5;
                double t23570 = -t23582+t23569;
                double t23583 = 0.0 ;
                double t23584 = t23502*t23503;
                double t23585 = t23513*t23519*t23497;
                double t23586 = t23584+t23585;
                double t23587 = 1/(c*c);
                v_gamma_bb_gamma_bb_[index] = ( (c*c0*t23451*(-2.0/3.0)+t23562*t23564*t23559*exp(-t23452*t23453*t23454* \
                   t23455)*1.0E5 > 0.0) ?  c0*rho_b[index]*t23554*1.0*(t23513*t23497*(t23504+t23506+t23507+t23508+t23509+ \
                   gamma_bb[index]*t23454*t23455*t23457*t23498*4.0+a5*t23450*t23460*t23461*t23538*t23498-gamma_bb[index]* \
                   t23480*t23454*t23455*t23457*t23498*4.0-c*c0*t23455*t23483*t23492*t23457*t23467*t23476*t23459*(8.0/ \
                   3.0)-a5*c0*gamma_bb[index]*t23450*t23455*t23491*t23492*t23457*t23476*t23459*(1.6E1/3.0)+a5*c0*t23502* \
                   t23503*t23450*t23482*t23465*t23476*t23459*t23498*(4.0/3.0)+c*c0*t23510*t23502*t23503*t23451*t23465* \
                   t23467*t23476*t23459*(2.0/3.0)+c*c0*t23502*t23503*t23504*t23451*t23465*t23467*t23476*t23459*(2.0/3.0) \
                   -c*c0*t23453*t23492*t23493*t23467*t23476*t23459*t23486*t23487*(6.4E1/3.0)+c*c0*t23502*t23503*t23455* \
                   t23465*t23483*t23457*t23467*t23476*t23459*(8.0/3.0)-c*c0*t23502*t23503*t23455*t23483*t23492*t23457* \
                   t23467*t23476*t23459*(8.0/3.0)+a5*c0*gamma_bb[index]*t23502*t23503*t23450*t23455*t23491*t23465*t23457* \
                   t23476*t23459*(1.6E1/3.0)-a5*c0*gamma_bb[index]*t23502*t23503*t23450*t23455*t23491*t23492*t23457*t23476* \
                   t23459*(1.6E1/3.0)+c*c0*t23502*t23503*t23505*t23453*t23493*t23467*t23476*t23459*t23486*t23487*1.6E1+ \
                   c*c0*t23502*t23503*t23453*t23465*t23493*t23467*t23476*t23459*t23486*t23487*(3.2E1/3.0)-c*c0*t23502* \
                   t23503*t23453*t23492*t23493*t23467*t23476*t23459*t23486*t23487*(6.4E1/3.0)+c*c0*gamma_bb[index]*t23502* \
                   t23503*t23455*t23465*t23483*t23457*t23467*t23476*t23459*t23498*(1.6E1/3.0)-c*c0*gamma_bb[index]*t23502* \
                   t23503*t23455*t23483*t23492*t23457*t23467*t23476*t23459*t23498*(1.6E1/3.0))+t23510*t23502*t23503+t23502* \
                   t23503*t23504+t23530*t23517*t23497*2.0+t23519*t23497*(t23480*t23534*t23490*2.0-t23480*t23535*t23536- \
                   t23454*t23455*t23465*t23457*t23485*8.0+t23453*t23492*t23537*t23485*t23486*t23487*3.2E1-gamma_bb[index]* \
                   t23454*t23490*t23455*t23465*t23457*t23484*8.0+c*c0*t23455*t23465*t23483*t23457*t23467*t23476*t23459* \
                   (3.2E1/3.0)-c*c0*t23455*t23483*t23492*t23457*t23467*t23476*t23459*(3.2E1/3.0)+a5*c0*gamma_bb[index]* \
                   t23450*t23455*t23491*t23465*t23457*t23476*t23459*(6.4E1/3.0)-a5*c0*gamma_bb[index]*t23450*t23455*t23491* \
                   t23492*t23457*t23476*t23459*(6.4E1/3.0)+c*c0*t23505*t23453*t23493*t23467*t23476*t23459*t23486*t23487* \
                   6.4E1+c*c0*t23453*t23465*t23493*t23467*t23476*t23459*t23486*t23487*(1.28E2/3.0)-c*c0*t23453*t23492* \
                   t23493*t23467*t23476*t23459*t23486*t23487*(2.56E2/3.0))-t23513*t23523*t23524*t23517*2.0-t23530*t23523* \
                   t23524*t23519*2.0-t23513*t23524*t23519*(t23480*t23534*t23490*3.0-t23480*t23535*t23536*(3.0/2.0)-t23454* \
                   t23455*t23465*t23457*t23485*1.2E1+t23453*t23492*t23537*t23485*t23486*t23487*4.8E1-gamma_bb[index]* \
                   t23454*t23490*t23455*t23465*t23457*t23484*1.2E1+c*c0*t23455*t23465*t23483*t23457*t23467*t23476*t23459* \
                   1.6E1-c*c0*t23455*t23483*t23492*t23457*t23467*t23476*t23459*1.6E1+a5*c0*gamma_bb[index]*t23450*t23455* \
                   t23491*t23465*t23457*t23476*t23459*3.2E1-a5*c0*gamma_bb[index]*t23450*t23455*t23491*t23492*t23457* \
                   t23476*t23459*3.2E1+c*c0*t23505*t23453*t23493*t23467*t23476*t23459*t23486*t23487*9.6E1+c*c0*t23453* \
                   t23465*t23493*t23467*t23476*t23459*t23486*t23487*6.4E1-c*c0*t23453*t23492*t23493*t23467*t23476*t23459* \
                   t23486*t23487*1.28E2)+t23513*(t23523*t23523)*t23519*1/(t23496*t23496*t23496)*2.0+t23510*t23540*t23460* \
                   t23541*t23542*t23543*t23538*t23539*(3.0/2.0)+t23504*t23540*t23460*t23541*t23542*t23543*t23538*t23539* \
                   (3.0/2.0)-a5*1/(rho_b[index]*rho_b[index])*t23450*t23541*t23542*t23543*1/(t23467*t23467)*t23539*t23587* \
                   t23498*(3.0/2.0)-gamma_bb[index]*t23460*t23541*t23542*t23543*t23455*t23457*t23538*t23547*t23539*t23498* \
                   6.0+gamma_bb[index]*t23460*t23541*t23543*t23455*t23464*t23457*t23538*t23547*t23539*t23498*6.0)*(1.0/ \
                   2.0) : 0.0 ) -c0*rho_b[index]*t23554*t23583*t23568*(t23502*t23503*t23498+t23513*t23517*t23497+t23530* \
                   t23519*t23497-t23513*t23523*t23524*t23519+t23540*t23460*t23541*t23542*t23543*t23538*t23539*t23498* \
                   (3.0/2.0))+c0*rho_b[index]*t23554*t23583*t23586*(t23452*t23454*t23562*t23455*t23565*t23559*2.0E5-t23452* \
                   t23454*t23562*t23455*t23564*t23565*t23559*2.0E5+(a3*a3)*1/pow(rho_b[index],1.4E1/3.0)*1/pow(t23561,5.0/ \
                   2.0)*t23455*t23564*t23565*t23559*t23587*7.5E4+(t23452*t23452)*t23453*t23562*t23537*t23564*t23565*t23487* \
                   t23559*4.0E5-a3*t23450*t23460*t23461*t23565*t23574*t23576*t23559*1.0E5-gamma_bb[index]*t23452*t23454* \
                   t23562*t23455*t23565*t23574*t23559*4.0E5+a3*gamma_bb[index]*1/pow(rho_b[index],2.3E1/3.0)*t23450*t23460* \
                   t23452*t23455*t23564*t23565*t23576*t23559*2.0E5)*(1.0/2.0)- 0.0 ;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

