/**********************************************************
* TauHCTH0_functional.cc: definitions for TauHCTH0_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 31-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "TauHCTH0_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

TauHCTH0_Functional::TauHCTH0_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "TauHCTH0";
    description_ = "TauHCTH0 Power Series Hybrid Meta-GGA";
    citation_ = "A.D. Boese and N.C. Handy, J. Chem. Phys., 116(22), 9559, 2002";
    
    double X = 1.4999999999999999E-01;
    params_.push_back(make_pair("X",X));
    double C_k = 9.1155997446911918E+00;
    params_.push_back(make_pair("C_k",C_k));
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 8.0489999999999995E-01;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 3.8388000000000000E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.3547000000000001E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 3.9133000000000000E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccaa0 = 1.8600000000000000E-01;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = 3.9782000000000002E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = -7.0693999999999999E+00;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = 3.4746999999999999E+00;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double cx0 = 8.6734999999999995E-01;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = 3.0080000000000001E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 1.2208000000000001E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = 1.5740000000000001E-01;
    params_.push_back(make_pair("cx3",cx3));
    double cxnl0 = -2.3000000000000000E-03;
    params_.push_back(make_pair("cxnl0",cxnl0));
    double cxnl1 = -2.8489999999999999E-01;
    params_.push_back(make_pair("cxnl1",cxnl1));
    double cxnl2 = 5.4146000000000001E+00;
    params_.push_back(make_pair("cxnl2",cxnl2));
    double cxnl3 = -1.0909000000000001E+01;
    params_.push_back(make_pair("cxnl3",cxnl3));

    is_gga_ = true;
    is_meta_ = true;

    //Required allocateion
    allocate();
}
TauHCTH0_Functional::~TauHCTH0_Functional()
{
}
void TauHCTH0_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double c0 = params_[2].second;
    double two_13 = params_[3].second;
    double d2fz0 = params_[4].second;
    double c = params_[5].second;
    double Aa = params_[6].second;
    double a1a = params_[7].second;
    double b1a = params_[8].second;
    double b2a = params_[9].second;
    double b3a = params_[10].second;
    double b4a = params_[11].second;
    double c0p = params_[12].second;
    double a1p = params_[13].second;
    double b1p = params_[14].second;
    double b2p = params_[15].second;
    double b3p = params_[16].second;
    double b4p = params_[17].second;
    double c0f = params_[18].second;
    double a1f = params_[19].second;
    double b1f = params_[20].second;
    double b2f = params_[21].second;
    double b3f = params_[22].second;
    double b4f = params_[23].second;
    double gcab = params_[24].second;
    double gcaa = params_[25].second;
    double gx = params_[26].second;
    double ccab0 = params_[27].second;
    double ccab1 = params_[28].second;
    double ccab2 = params_[29].second;
    double ccab3 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cxnl0 = params_[39].second;
    double cxnl1 = params_[40].second;
    double cxnl2 = params_[41].second;
    double cxnl3 = params_[42].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t28646 = 1/pow(rho_a[index],1.0/3.0);
            double t28647 = c*t28646;
            double t28648 = sqrt(t28647);
            double t28649 = pow(t28647,3.0/2.0);
            double t28650 = c*c;
            double t28651 = 1/pow(rho_a[index],2.0/3.0);
            double t28652 = 1/c0p;
            double t28653 = b1p*t28648;
            double t28654 = b3p*t28649;
            double t28655 = b4p*t28650*t28651;
            double t28656 = b2p*c*t28646;
            double t28657 = t28653+t28654+t28655+t28656;
            double t28658 = 1/t28657;
            double t28659 = t28652*t28658*(1.0/2.0);
            double t28660 = t28659+1.0;
            double t28661 = log(t28660);
            double t28662 = a1p*c*t28646;
            double t28663 = t28662+1.0;
            double t28664 = rho_a[index]*2.0;
            double t28665 = 1/pow(t28664,1.0/3.0);
            double t28666 = c*t28665;
            double t28667 = 1/pow(rho_a[index],8.0/3.0);
            double t28668 = gamma_aa[index]*gamma_aa[index];
            double t28669 = gcab*gcab;
            double t28670 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t28671 = 1/pow(rho_a[index],1.6E1/3.0);
            double t28672 = pow(2.0,1.0/3.0);
            double t28673 = t28672*2.0;
            double t28674 = t28673-2.0;
            double t28675 = two_13*2.0;
            double t28676 = t28675-2.0;
            double t28677 = 1/t28676;
            double t28678 = 1/c0f;
            double t28679 = b1f*t28648;
            double t28680 = b3f*t28649;
            double t28681 = b4f*t28650*t28651;
            double t28682 = b2f*c*t28646;
            double t28683 = t28680+t28681+t28682+t28679;
            double t28684 = 1/t28683;
            double t28685 = t28684*t28678*(1.0/2.0);
            double t28686 = t28685+1.0;
            double t28687 = log(t28686);
            double t28688 = a1f*c*t28646;
            double t28689 = t28688+1.0;
            double t28690 = c0f*t28687*t28689*2.0;
            double t28691 = c0p*t28661*t28663*2.0;
            double t28692 = gcaa*gcaa;
            double t28693 = pow(rho_a[index],5.0/3.0);
            double t28694 = 1/tau_a[index];
            double t28695 = C_k*t28693*t28694;
            double t28696 = t28695-1.0;
            double t28697 = t28696*t28696;
            double t28698 = t28695+1.0;
            double t28699 = t28697*t28697;
            double t28700 = gx*gx;
            double t28701 = gamma_aa[index]*gx*t28667;
            double t28702 = t28701+1.0;
            double t28703 = 1/t28702;
            double t28704 = gamma_aa[index]*gx*t28667*3.0;
            double t28705 = gamma_aa[index]*gx*t28700*t28670*t28668;
            double t28706 = t28700*t28671*t28668*3.0;
            double t28707 = t28704+t28705+t28706+1.0;
            double t28708 = 1/t28707;
            double t28709 = gamma_aa[index]*gx*t28667*2.0;
            double t28710 = t28700*t28671*t28668;
            double t28711 = t28710+t28709+1.0;
            double t28712 = 1/t28711;
            functional_[index] = (rho_a[index]*(t28691+t28674*t28677*(t28690-c0p*t28661*t28663*2.0))*2.0-c0p* \
               rho_a[index]*log((t28652*(1.0/2.0))/(b1p*sqrt(t28666)+b3p*pow(t28666,3.0/2.0)+b4p*t28650*1/pow(t28664,2.0/ \
               3.0)+b2p*c*t28665)+1.0)*(a1p*c*t28665+1.0)*4.0)*(ccab0+(ccab2*t28671*t28668*t28669)/(gamma_aa[index]* \
               gcab*t28667*2.0+t28671*t28668*t28669+1.0)+(ccab1*gamma_aa[index]*gcab*t28667)/(gamma_aa[index]*gcab* \
               t28667+1.0)+(ccab3*gamma_aa[index]*gcab*t28670*t28668*t28669)/(gamma_aa[index]*gcab*t28667*3.0+t28671* \
               t28668*t28669*3.0+gamma_aa[index]*gcab*t28670*t28668*t28669+1.0))-rho_a[index]*(t28691+t28674*t28677* \
               (t28690-t28691))*(ccaa0+(ccaa2*t28671*t28692*t28668)/(gamma_aa[index]*gcaa*t28667*2.0+t28671*t28692* \
               t28668+1.0)+(ccaa1*gamma_aa[index]*gcaa*t28667)/(gamma_aa[index]*gcaa*t28667+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t28670*t28692*t28668)/(gamma_aa[index]*gcaa*t28667*3.0+t28671*t28692*t28668*3.0+gamma_aa[index]* \
               gcaa*t28670*t28692*t28668+1.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cx0+(t28696/t28698-t28696* \
               t28697*1/(t28698*t28698*t28698)*2.0+t28696*1/(t28698*t28698*t28698*t28698*t28698)*t28699)*(cxnl0+cxnl1* \
               gamma_aa[index]*gx*t28703*t28667+cxnl2*t28700*t28712*t28671*t28668+cxnl3*gamma_aa[index]*gx*t28700* \
               t28670*t28708*t28668)+cx1*gamma_aa[index]*gx*t28703*t28667+cx2*t28700*t28712*t28671*t28668+cx3*gamma_aa[index]* \
               gx*t28700*t28670*t28708*t28668)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t28714 = 1/pow(rho_a[index],8.0/3.0);
            double t28715 = gamma_aa[index]*gamma_aa[index];
            double t28716 = gcab*gcab;
            double t28717 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t28718 = 1/pow(rho_a[index],1.6E1/3.0);
            double t28719 = rho_a[index]*2.0;
            double t28720 = 1/pow(t28719,1.0/3.0);
            double t28721 = c*t28720;
            double t28722 = sqrt(t28721);
            double t28723 = b1p*t28722;
            double t28724 = pow(t28721,3.0/2.0);
            double t28725 = b3p*t28724;
            double t28726 = b2p*c*t28720;
            double t28727 = c*c;
            double t28728 = 1/pow(t28719,2.0/3.0);
            double t28729 = b4p*t28727*t28728;
            double t28730 = t28723+t28725+t28726+t28729;
            double t28731 = 1/pow(t28719,4.0/3.0);
            double t28732 = 1/c0p;
            double t28733 = 1/t28730;
            double t28734 = t28732*t28733*(1.0/2.0);
            double t28735 = t28734+1.0;
            double t28736 = 1/pow(rho_a[index],1.0/3.0);
            double t28737 = c*t28736;
            double t28738 = sqrt(t28737);
            double t28739 = b1f*t28738;
            double t28740 = pow(t28737,3.0/2.0);
            double t28741 = b3f*t28740;
            double t28742 = 1/pow(rho_a[index],2.0/3.0);
            double t28743 = b4f*t28742*t28727;
            double t28744 = b2f*c*t28736;
            double t28745 = t28741+t28743+t28744+t28739;
            double t28746 = 1/pow(rho_a[index],4.0/3.0);
            double t28747 = b1p*t28738;
            double t28748 = b3p*t28740;
            double t28749 = b4p*t28742*t28727;
            double t28750 = b2p*c*t28736;
            double t28751 = t28750+t28747+t28748+t28749;
            double t28752 = 1/pow(rho_a[index],5.0/3.0);
            double t28753 = 1/sqrt(t28737);
            double t28754 = 1/c0f;
            double t28755 = 1/t28745;
            double t28756 = t28754*t28755*(1.0/2.0);
            double t28757 = t28756+1.0;
            double t28758 = 1/t28751;
            double t28759 = t28732*t28758*(1.0/2.0);
            double t28760 = t28759+1.0;
            double t28761 = a1p*c*t28736;
            double t28762 = t28761+1.0;
            double t28763 = 1/t28760;
            double t28764 = 1/(t28751*t28751);
            double t28765 = b4p*t28752*t28727*(2.0/3.0);
            double t28766 = b2p*c*t28746*(1.0/3.0);
            double t28767 = b1p*c*t28753*t28746*(1.0/6.0);
            double t28768 = b3p*c*t28746*t28738*(1.0/2.0);
            double t28769 = t28765+t28766+t28767+t28768;
            double t28770 = t28762*t28763*t28764*t28769;
            double t28771 = log(t28760);
            double t28772 = log(t28735);
            double t28773 = a1p*c*t28720;
            double t28774 = t28773+1.0;
            double t28775 = pow(2.0,1.0/3.0);
            double t28776 = t28775*2.0;
            double t28777 = t28776-2.0;
            double t28778 = two_13*2.0;
            double t28779 = t28778-2.0;
            double t28780 = 1/t28779;
            double t28781 = log(t28757);
            double t28782 = a1f*c*t28736;
            double t28783 = t28782+1.0;
            double t28784 = c0f*t28781*t28783*2.0;
            double t28786 = c0p*t28762*t28771*2.0;
            double t28785 = t28784-t28786;
            double t28787 = gcaa*gcaa;
            double t28788 = pow(rho_a[index],5.0/3.0);
            double t28789 = 1/tau_a[index];
            double t28790 = C_k*t28788*t28789;
            double t28791 = t28790-1.0;
            double t28792 = t28791*t28791;
            double t28793 = t28790+1.0;
            double t28794 = t28792*t28792;
            double t28795 = gx*gx;
            double t28796 = gamma_aa[index]*gx*t28714;
            double t28797 = t28796+1.0;
            double t28798 = 1/t28797;
            double t28799 = gamma_aa[index]*gx*t28714*3.0;
            double t28800 = gamma_aa[index]*gx*t28715*t28717*t28795;
            double t28801 = t28715*t28718*t28795*3.0;
            double t28802 = t28800+t28801+t28799+1.0;
            double t28803 = 1/t28802;
            double t28804 = gamma_aa[index]*gx*t28714*2.0;
            double t28805 = t28715*t28718*t28795;
            double t28806 = t28804+t28805+1.0;
            double t28807 = 1/t28806;
            double t28808 = 1/t28793;
            double t28809 = t28808*t28791;
            double t28810 = 1/(t28793*t28793*t28793);
            double t28811 = 1/(t28793*t28793*t28793*t28793*t28793);
            double t28812 = t28811*t28791*t28794;
            double t28813 = t28812+t28809-t28810*t28791*t28792*2.0;
            double t28814 = 1/pow(rho_a[index],1.9E1/3.0);
            double t28815 = 1/pow(rho_a[index],1.1E1/3.0);
            double t28816 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t28817 = cxnl1*gamma_aa[index]*gx*t28714*t28798;
            double t28818 = cxnl3*gamma_aa[index]*gx*t28803*t28715*t28717*t28795;
            double t28819 = cxnl2*t28715*t28807*t28718*t28795;
            double t28820 = cxnl0+t28817+t28818+t28819;
            double t28821 = pow(rho_a[index],2.0/3.0);
            double t28822 = 1/(t28797*t28797);
            double t28823 = gamma_aa[index]*gx*t28815*8.0;
            double t28824 = gamma_aa[index]*gx*t28715*t28816*t28795*8.0;
            double t28825 = t28715*t28814*t28795*1.6E1;
            double t28826 = t28823+t28824+t28825;
            double t28827 = 1/(t28802*t28802);
            double t28828 = gamma_aa[index]*gx*t28815*(1.6E1/3.0);
            double t28829 = t28715*t28814*t28795*(1.6E1/3.0);
            double t28830 = t28828+t28829;
            double t28831 = 1/(t28806*t28806);
            double t28832 = t28780*t28785*t28777;
            double t28833 = t28832+t28786;
            double t28834 = gamma_aa[index]*gcab*t28714;
            double t28835 = t28834+1.0;
            double t28836 = 1/t28835;
            double t28837 = gamma_aa[index]*gcab*t28714*3.0;
            double t28838 = gamma_aa[index]*gcab*t28715*t28716*t28717;
            double t28839 = t28715*t28716*t28718*3.0;
            double t28840 = t28837+t28838+t28839+1.0;
            double t28841 = 1/t28840;
            double t28842 = gamma_aa[index]*gcab*t28714*2.0;
            double t28843 = t28715*t28716*t28718;
            double t28844 = t28842+t28843+1.0;
            double t28845 = 1/t28844;
            double t28846 = gamma_aa[index]*gcaa*t28714;
            double t28847 = t28846+1.0;
            double t28848 = 1/t28847;
            double t28849 = gamma_aa[index]*gcaa*t28714*3.0;
            double t28850 = gamma_aa[index]*gcaa*t28715*t28717*t28787;
            double t28851 = t28715*t28718*t28787*3.0;
            double t28852 = t28850+t28851+t28849+1.0;
            double t28853 = 1/t28852;
            double t28854 = gamma_aa[index]*gcaa*t28714*2.0;
            double t28855 = t28715*t28718*t28787;
            double t28856 = t28854+t28855+1.0;
            double t28857 = 1/t28856;
            double t28858 = 1/t28757;
            double t28859 = 1/(t28745*t28745);
            double t28860 = b4f*t28752*t28727*(2.0/3.0);
            double t28861 = b2f*c*t28746*(1.0/3.0);
            double t28862 = b1f*c*t28753*t28746*(1.0/6.0);
            double t28863 = b3f*c*t28746*t28738*(1.0/2.0);
            double t28864 = t28860+t28861+t28862+t28863;
            double t28865 = a1f*c*c0f*t28781*t28746*(2.0/3.0);
            double t28866 = a1p*c*c0p*t28771*t28746*(2.0/3.0);
            double t28867 = ccaa1*gamma_aa[index]*gcaa*t28714*t28848;
            double t28868 = ccaa3*gamma_aa[index]*gcaa*t28715*t28717*t28853*t28787;
            double t28869 = ccaa2*t28715*t28718*t28857*t28787;
            double t28870 = ccaa0+t28867+t28868+t28869;
            v_rho_a_[index] = -(ccab0+ccab1*gamma_aa[index]*gcab*t28714*t28836+ccab2*t28715*t28716*t28718*t28845+ \
               ccab3*gamma_aa[index]*gcab*t28715*t28841*t28716*t28717)*(rho_a[index]*((1/(t28730*t28730)*t28774*(b4p* \
               t28727*1/pow(t28719,5.0/3.0)*(2.0/3.0)+b2p*c*t28731*(1.0/3.0)+b3p*c*t28722*t28731*(1.0/2.0)+b1p*c* \
               1/sqrt(t28721)*t28731*(1.0/6.0)))/t28735-a1p*c*c0p*t28731*t28772*(2.0/3.0))*2.0+rho_a[index]*(-t28770+ \
               t28866+t28780*t28777*(t28770+t28865-t28783*t28864*t28858*t28859-a1p*c*c0p*t28771*t28746*(2.0/3.0)) \
               )-c0p*t28762*t28771*2.0+c0p*t28772*t28774*2.0-t28780*t28785*t28777)-t28833*t28870-(rho_a[index]*t28833* \
               2.0-c0p*rho_a[index]*t28772*t28774*4.0)*(ccab1*gamma_aa[index]*gcab*t28815*t28836*(4.0/3.0)+ccab2* \
               t28715*t28814*t28716*t28845*(8.0/3.0)-ccab1*t28715*t28814*t28716*1/(t28835*t28835)*(4.0/3.0)-ccab2* \
               t28715*t28716*t28718*1/(t28844*t28844)*(gamma_aa[index]*gcab*t28815*(8.0/3.0)+t28715*t28814*t28716* \
               (8.0/3.0))+ccab3*gamma_aa[index]*gcab*t28715*t28841*t28716*t28816*4.0-ccab3*gamma_aa[index]*gcab*1/ \
               (t28840*t28840)*t28715*t28716*t28717*(gamma_aa[index]*gcab*t28815*4.0+t28715*t28814*t28716*8.0+gamma_aa[index]* \
               gcab*t28715*t28716*t28816*4.0))-(X-1.0)*(c0*pow(rho_a[index],1.0/3.0)*(cx0+t28820*t28813+cx1*gamma_aa[index]* \
               gx*t28714*t28798+cx2*t28715*t28807*t28718*t28795+cx3*gamma_aa[index]*gx*t28803*t28715*t28717*t28795) \
               *(4.0/3.0)-c0*pow(rho_a[index],4.0/3.0)*(t28813*(cxnl1*gamma_aa[index]*gx*t28815*t28798*(8.0/3.0)- \
               cxnl1*t28822*t28715*t28814*t28795*(8.0/3.0)+cxnl2*t28715*t28814*t28807*t28795*(1.6E1/3.0)-cxnl2*t28830* \
               t28831*t28715*t28718*t28795+cxnl3*gamma_aa[index]*gx*t28803*t28715*t28816*t28795*8.0-cxnl3*gamma_aa[index]* \
               gx*t28715*t28717*t28826*t28827*t28795)-t28820*(C_k*t28821*t28808*t28789*(5.0/3.0)-C_k*t28810*t28821* \
               t28792*t28789*1.0E1+C_k*t28811*t28821*t28794*t28789*(2.5E1/3.0)-C_k*t28821*t28791*1/(t28793*t28793) \
               *t28789*(5.0/3.0)+C_k*t28821*t28791*t28792*1/(t28793*t28793*t28793*t28793)*t28789*1.0E1-C_k*t28821* \
               t28791*1/(t28793*t28793*t28793*t28793*t28793*t28793)*t28794*t28789*(2.5E1/3.0))+cx1*gamma_aa[index]* \
               gx*t28815*t28798*(8.0/3.0)-cx1*t28822*t28715*t28814*t28795*(8.0/3.0)+cx2*t28715*t28814*t28807*t28795* \
               (1.6E1/3.0)-cx2*t28830*t28831*t28715*t28718*t28795+cx3*gamma_aa[index]*gx*t28803*t28715*t28816*t28795* \
               8.0-cx3*gamma_aa[index]*gx*t28715*t28717*t28826*t28827*t28795))+rho_a[index]*t28870*(-t28770+t28866+ \
               t28780*t28777*(t28770+t28865-t28866-t28783*t28864*t28858*t28859))+rho_a[index]*t28833*(ccaa1*gamma_aa[index]* \
               gcaa*t28815*t28848*(8.0/3.0)+ccaa2*t28715*t28814*t28857*t28787*(1.6E1/3.0)-ccaa1*t28715*t28814*1/(t28847* \
               t28847)*t28787*(8.0/3.0)-ccaa2*t28715*t28718*1/(t28856*t28856)*t28787*(gamma_aa[index]*gcaa*t28815* \
               (1.6E1/3.0)+t28715*t28814*t28787*(1.6E1/3.0))+ccaa3*gamma_aa[index]*gcaa*t28715*t28816*t28853*t28787* \
               8.0-ccaa3*gamma_aa[index]*gcaa*t28715*t28717*1/(t28852*t28852)*t28787*(gamma_aa[index]*gcaa*t28815* \
               8.0+t28715*t28814*t28787*1.6E1+gamma_aa[index]*gcaa*t28715*t28816*t28787*8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t28872 = 1/pow(rho_a[index],1.0/3.0);
                double t28873 = c*t28872;
                double t28874 = sqrt(t28873);
                double t28875 = pow(t28873,3.0/2.0);
                double t28876 = c*c;
                double t28877 = 1/pow(rho_a[index],2.0/3.0);
                double t28878 = 1/c0p;
                double t28879 = b1p*t28874;
                double t28880 = b3p*t28875;
                double t28881 = b4p*t28876*t28877;
                double t28882 = b2p*c*t28872;
                double t28883 = t28880+t28881+t28882+t28879;
                double t28884 = 1/t28883;
                double t28885 = t28884*t28878*(1.0/2.0);
                double t28886 = t28885+1.0;
                double t28887 = log(t28886);
                double t28888 = a1p*c*t28872;
                double t28889 = t28888+1.0;
                double t28890 = rho_a[index]*2.0;
                double t28891 = 1/pow(t28890,1.0/3.0);
                double t28892 = c*t28891;
                double t28893 = 1/pow(rho_a[index],8.0/3.0);
                double t28894 = gcab*gcab;
                double t28895 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28896 = gamma_aa[index]*gamma_aa[index];
                double t28897 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28898 = gamma_aa[index]*gcab*t28893;
                double t28899 = t28898+1.0;
                double t28900 = gamma_aa[index]*gcab*t28893*3.0;
                double t28901 = gamma_aa[index]*gcab*t28894*t28896*t28897;
                double t28902 = t28894*t28895*t28896*3.0;
                double t28903 = t28900+t28901+t28902+1.0;
                double t28904 = gamma_aa[index]*gcab*t28893*2.0;
                double t28905 = t28894*t28895*t28896;
                double t28906 = t28904+t28905+1.0;
                double t28907 = pow(2.0,1.0/3.0);
                double t28908 = t28907*2.0;
                double t28909 = t28908-2.0;
                double t28910 = two_13*2.0;
                double t28911 = t28910-2.0;
                double t28912 = 1/t28911;
                double t28913 = 1/c0f;
                double t28914 = b1f*t28874;
                double t28915 = b3f*t28875;
                double t28916 = b4f*t28876*t28877;
                double t28917 = b2f*c*t28872;
                double t28918 = t28914+t28915+t28916+t28917;
                double t28919 = 1/t28918;
                double t28920 = t28913*t28919*(1.0/2.0);
                double t28921 = t28920+1.0;
                double t28922 = log(t28921);
                double t28923 = a1f*c*t28872;
                double t28924 = t28923+1.0;
                double t28925 = c0f*t28922*t28924*2.0;
                double t28926 = c0p*t28887*t28889*2.0;
                double t28927 = gcaa*gcaa;
                double t28928 = gamma_aa[index]*gcaa*t28893;
                double t28929 = t28928+1.0;
                double t28930 = gamma_aa[index]*gcaa*t28893*3.0;
                double t28931 = gamma_aa[index]*gcaa*t28927*t28896*t28897;
                double t28932 = t28927*t28895*t28896*3.0;
                double t28933 = t28930+t28931+t28932+1.0;
                double t28934 = gamma_aa[index]*gcaa*t28893*2.0;
                double t28935 = t28927*t28895*t28896;
                double t28936 = t28934+t28935+1.0;
                double t28937 = pow(rho_a[index],5.0/3.0);
                double t28938 = 1/tau_a[index];
                double t28939 = C_k*t28937*t28938;
                double t28940 = t28939-1.0;
                double t28941 = t28940*t28940;
                double t28942 = t28939+1.0;
                double t28943 = t28941*t28941;
                double t28944 = gx*gx;
                double t28945 = gamma_aa[index]*gx*t28893;
                double t28946 = t28945+1.0;
                double t28947 = gamma_aa[index]*gx*t28893*3.0;
                double t28948 = gamma_aa[index]*gx*t28944*t28896*t28897;
                double t28949 = t28944*t28895*t28896*3.0;
                double t28950 = t28947+t28948+t28949+1.0;
                double t28951 = gamma_aa[index]*gx*t28893*2.0;
                double t28952 = t28944*t28895*t28896;
                double t28953 = t28951+t28952+1.0;
                double t28954 = 1/t28946;
                double t28955 = 1/t28953;
                double t28956 = 1/t28950;
                double t28957 = 1/(t28946*t28946);
                double t28958 = gx*t28893*3.0;
                double t28959 = gamma_aa[index]*t28944*t28895*6.0;
                double t28960 = gx*t28944*t28896*t28897*3.0;
                double t28961 = t28960+t28958+t28959;
                double t28962 = 1/(t28950*t28950);
                double t28963 = gx*t28893*2.0;
                double t28964 = gamma_aa[index]*t28944*t28895*2.0;
                double t28965 = t28963+t28964;
                double t28966 = 1/(t28953*t28953);
                v_gamma_aa_[index] = (rho_a[index]*(t28926+t28912*t28909*(t28925-c0p*t28887*t28889*2.0))*2.0-c0p* \
                   rho_a[index]*log((t28878*(1.0/2.0))/(b1p*sqrt(t28892)+b3p*pow(t28892,3.0/2.0)+b4p*1/pow(t28890,2.0/ \
                   3.0)*t28876+b2p*c*t28891)+1.0)*(a1p*c*t28891+1.0)*4.0)*((ccab1*gcab*t28893*(1.0/2.0))/t28899+(ccab2* \
                   gamma_aa[index]*t28894*t28895)/t28906-ccab1*gamma_aa[index]*t28894*t28895*1/(t28899*t28899)*(1.0/2.0) \
                   -ccab2*1/(t28906*t28906)*t28894*t28895*t28896*(gcab*t28893+gamma_aa[index]*t28894*t28895)+(ccab3*gcab* \
                   t28894*t28896*t28897*(3.0/2.0))/t28903-ccab3*gamma_aa[index]*gcab*1/(t28903*t28903)*t28894*t28896* \
                   t28897*(gcab*t28893*(3.0/2.0)+gamma_aa[index]*t28894*t28895*3.0+gcab*t28894*t28896*t28897*(3.0/2.0) \
                   ))*2.0-rho_a[index]*(t28926+t28912*t28909*(t28925-t28926))*((ccaa1*gcaa*t28893)/t28929+(ccaa2*gamma_aa[index]* \
                   t28927*t28895*2.0)/t28936-ccaa1*gamma_aa[index]*t28927*1/(t28929*t28929)*t28895-ccaa2*t28927*1/(t28936* \
                   t28936)*t28895*t28896*(gcaa*t28893*2.0+gamma_aa[index]*t28927*t28895*2.0)+(ccaa3*gcaa*t28927*t28896* \
                   t28897*3.0)/t28933-ccaa3*gamma_aa[index]*gcaa*1/(t28933*t28933)*t28927*t28896*t28897*(gcaa*t28893* \
                   3.0+gamma_aa[index]*t28927*t28895*6.0+gcaa*t28927*t28896*t28897*3.0))*2.0-c0*pow(rho_a[index],4.0/ \
                   3.0)*(X-1.0)*((t28940/t28942-t28940*t28941*1/(t28942*t28942*t28942)*2.0+t28940*1/(t28942*t28942*t28942* \
                   t28942*t28942)*t28943)*(cxnl1*gx*t28954*t28893+cxnl2*gamma_aa[index]*t28944*t28955*t28895*2.0-cxnl1* \
                   gamma_aa[index]*t28944*t28957*t28895-cxnl2*t28944*t28965*t28966*t28895*t28896+cxnl3*gx*t28944*t28956* \
                   t28896*t28897*3.0-cxnl3*gamma_aa[index]*gx*t28961*t28944*t28962*t28896*t28897)+cx1*gx*t28954*t28893- \
                   cx1*gamma_aa[index]*t28944*t28957*t28895+cx2*gamma_aa[index]*t28944*t28955*t28895*2.0-cx2*t28944*t28965* \
                   t28966*t28895*t28896+cx3*gx*t28944*t28956*t28896*t28897*3.0-cx3*gamma_aa[index]*gx*t28961*t28944*t28962* \
                   t28896*t28897)*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                double t28968 = 1/pow(rho_a[index],8.0/3.0);
                double t28969 = gamma_aa[index]*gamma_aa[index];
                double t28970 = gx*gx;
                double t28971 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28972 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28973 = pow(rho_a[index],5.0/3.0);
                double t28974 = 1/(tau_a[index]*tau_a[index]);
                double t28975 = 1/tau_a[index];
                double t28976 = C_k*t28973*t28975;
                double t28977 = t28976-1.0;
                double t28978 = t28976+1.0;
                double t28979 = t28977*t28977;
                double t28980 = t28979*t28979;
                v_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t28970*t28972*t28969)/(gamma_aa[index]* \
                   gx*t28968*2.0+t28970*t28972*t28969+1.0)+(cxnl1*gamma_aa[index]*gx*t28968)/(gamma_aa[index]*gx*t28968+ \
                   1.0)+(cxnl3*gamma_aa[index]*gx*t28970*t28971*t28969)/(gamma_aa[index]*gx*t28968*3.0+t28970*t28972* \
                   t28969*3.0+gamma_aa[index]*gx*t28970*t28971*t28969+1.0))*((C_k*t28973*t28974)/t28978+C_k*t28980*t28973* \
                   t28974*1/(t28978*t28978*t28978*t28978*t28978)*5.0-C_k*t28973*t28974*t28977*1/(t28978*t28978)-C_k*t28973* \
                   t28974*1/(t28978*t28978*t28978)*t28979*6.0-C_k*t28980*t28973*t28974*t28977*1/(t28978*t28978*t28978* \
                   t28978*t28978*t28978)*5.0+C_k*t28973*t28974*t28977*1/(t28978*t28978*t28978*t28978)*t28979*6.0);
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t28982 = rho_a[index]*2.0;
            double t28983 = 1/pow(t28982,1.0/3.0);
            double t28984 = c*t28983;
            double t28985 = sqrt(t28984);
            double t28986 = b1p*t28985;
            double t28987 = pow(t28984,3.0/2.0);
            double t28988 = b3p*t28987;
            double t28989 = b2p*c*t28983;
            double t28990 = c*c;
            double t28991 = 1/pow(t28982,2.0/3.0);
            double t28992 = b4p*t28990*t28991;
            double t28993 = t28992+t28986+t28988+t28989;
            double t28994 = 1/pow(t28982,8.0/3.0);
            double t28995 = 1/pow(t28982,7.0/3.0);
            double t28996 = 1/sqrt(t28984);
            double t28997 = 1/c0p;
            double t28998 = 1/t28993;
            double t28999 = t28997*t28998*(1.0/2.0);
            double t29000 = t28999+1.0;
            double t29001 = 1/t29000;
            double t29002 = a1p*c*t28983;
            double t29003 = t29002+1.0;
            double t29004 = 1/pow(t28982,4.0/3.0);
            double t29006 = b2p*c*t29004*(1.0/3.0);
            double t29007 = 1/pow(t28982,5.0/3.0);
            double t29008 = b4p*t28990*t29007*(2.0/3.0);
            double t29009 = b1p*c*t28996*t29004*(1.0/6.0);
            double t29010 = b3p*c*t28985*t29004*(1.0/2.0);
            double t29005 = t29010+t29006+t29008+t29009;
            double t29011 = t29005*t29005;
            double t29012 = 1/(t28993*t28993);
            double t29013 = log(t29000);
            double t29014 = 1/pow(rho_a[index],8.0/3.0);
            double t29015 = gamma_aa[index]*gamma_aa[index];
            double t29016 = gcab*gcab;
            double t29017 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t29018 = 1/pow(rho_a[index],1.6E1/3.0);
            double t29019 = two_13*2.0;
            double t29020 = t29019-2.0;
            double t29021 = 1/t29020;
            double t29022 = 1/pow(rho_a[index],1.0/3.0);
            double t29023 = c*t29022;
            double t29024 = sqrt(t29023);
            double t29025 = b1f*t29024;
            double t29026 = pow(t29023,3.0/2.0);
            double t29027 = b3f*t29026;
            double t29028 = 1/pow(rho_a[index],2.0/3.0);
            double t29029 = b4f*t28990*t29028;
            double t29030 = b2f*c*t29022;
            double t29031 = t29030+t29025+t29027+t29029;
            double t29032 = 1/pow(rho_a[index],4.0/3.0);
            double t29033 = b1p*t29024;
            double t29034 = b3p*t29026;
            double t29035 = b4p*t28990*t29028;
            double t29036 = b2p*c*t29022;
            double t29037 = t29033+t29034+t29035+t29036;
            double t29038 = 1/pow(rho_a[index],5.0/3.0);
            double t29039 = 1/sqrt(t29023);
            double t29040 = 1/c0f;
            double t29041 = 1/t29031;
            double t29042 = t29040*t29041*(1.0/2.0);
            double t29043 = t29042+1.0;
            double t29044 = 1/t29037;
            double t29045 = t28997*t29044*(1.0/2.0);
            double t29046 = t29045+1.0;
            double t29047 = a1p*c*t29022;
            double t29048 = t29047+1.0;
            double t29049 = 1/t29046;
            double t29050 = 1/(t29037*t29037);
            double t29051 = b4p*t28990*t29038*(2.0/3.0);
            double t29052 = b2p*c*t29032*(1.0/3.0);
            double t29053 = b1p*c*t29032*t29039*(1.0/6.0);
            double t29054 = b3p*c*t29032*t29024*(1.0/2.0);
            double t29055 = t29051+t29052+t29053+t29054;
            double t29056 = t29050*t29055*t29048*t29049;
            double t29057 = log(t29046);
            double t29058 = gcaa*gcaa;
            double t29059 = pow(2.0,1.0/3.0);
            double t29060 = t29059*2.0;
            double t29061 = t29060-2.0;
            double t29062 = log(t29043);
            double t29063 = a1f*c*t29022;
            double t29064 = t29063+1.0;
            double t29065 = gamma_aa[index]*gcab*t29014*3.0;
            double t29066 = gamma_aa[index]*gcab*t29015*t29016*t29017;
            double t29067 = t29015*t29016*t29018*3.0;
            double t29068 = t29065+t29066+t29067+1.0;
            double t29069 = 1/t29068;
            double t29070 = gamma_aa[index]*gcab*t29014*2.0;
            double t29071 = t29015*t29016*t29018;
            double t29072 = t29070+t29071+1.0;
            double t29073 = 1/t29072;
            double t29074 = 1/pow(rho_a[index],1.0E1);
            double t29075 = gamma_aa[index]*gcab*t29014;
            double t29076 = t29075+1.0;
            double t29077 = 1/pow(rho_a[index],2.2E1/3.0);
            double t29079 = 1/pow(rho_a[index],1.1E1/3.0);
            double t29081 = 1/pow(rho_a[index],1.9E1/3.0);
            double t29087 = gamma_aa[index]*gcab*t29079*(8.0/3.0);
            double t29088 = t29015*t29016*t29081*(8.0/3.0);
            double t29078 = t29087+t29088;
            double t29080 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t29082 = 1/(t29068*t29068);
            double t29083 = gamma_aa[index]*gcab*t29079*4.0;
            double t29084 = gamma_aa[index]*gcab*t29015*t29016*t29080*4.0;
            double t29085 = t29015*t29016*t29081*8.0;
            double t29086 = t29083+t29084+t29085;
            double t29089 = 1/(t29072*t29072);
            double t29090 = c0f*t29062*t29064*2.0;
            double t29091 = c0p*t29048*t29057*2.0;
            double t29092 = 1/t29076;
            double t29093 = 1/(t29076*t29076*t29076);
            double t29094 = ccab1*gamma_aa[index]*gcab*t29015*t29016*t29074*t29093*(3.2E1/9.0);
            double t29095 = 1/(t29076*t29076);
            double t29096 = t29078*t29078;
            double t29097 = 1/(t29072*t29072*t29072);
            double t29098 = ccab2*t29015*t29016*t29018*t29096*t29097*2.0;
            double t29099 = 1/pow(rho_a[index],1.4E1/3.0);
            double t29100 = t29086*t29086;
            double t29101 = 1/(t29068*t29068*t29068);
            double t29102 = ccab3*gamma_aa[index]*gcab*t29100*t29101*t29015*t29016*t29017*2.0;
            double t29103 = 1/t29043;
            double t29104 = 1/(t29031*t29031);
            double t29105 = b4f*t28990*t29038*(2.0/3.0);
            double t29106 = b2f*c*t29032*(1.0/3.0);
            double t29107 = b1f*c*t29032*t29039*(1.0/6.0);
            double t29108 = b3f*c*t29032*t29024*(1.0/2.0);
            double t29109 = t29105+t29106+t29107+t29108;
            double t29110 = a1f*c*c0f*t29032*t29062*(2.0/3.0);
            double t29111 = a1p*c*c0p*t29032*t29057*(2.0/3.0);
            double t29112 = t29090-t29091;
            double t29113 = t29021*t29112*t29061;
            double t29114 = ccab1*gamma_aa[index]*gcab*t29014*t29092;
            double t29115 = ccab3*gamma_aa[index]*gcab*t29015*t29016*t29017*t29069;
            double t29116 = ccab2*t29015*t29016*t29018*t29073;
            double t29117 = ccab0+t29114+t29115+t29116;
            double t29118 = b2p*c*t28995*(4.0/9.0);
            double t29119 = b4p*t28990*t28994*(1.0E1/9.0);
            double t29120 = 1/pow(t28984,3.0/2.0);
            double t29121 = b3p*t28990*t28994*t28996*(1.0/1.2E1);
            double t29122 = b1p*c*t28995*t28996*(2.0/9.0);
            double t29123 = b3p*c*t28985*t28995*(2.0/3.0);
            double t29124 = t29121+t29122+t29123+t29118+t29119-b1p*t28990*t28994*t29120*(1.0/3.6E1);
            double t29125 = t29001*t29003*t29012*t29124;
            double t29126 = 1/(t28993*t28993*t28993);
            double t29127 = 1/(t29000*t29000);
            double t29128 = 1/(t28993*t28993*t28993*t28993);
            double t29129 = t28997*t29011*t29003*t29127*t29128*(1.0/2.0);
            double t29130 = 1/d2fz0;
            double t29131 = 1/(rho_a[index]*rho_a[index]);
            double t29132 = 1/Aa;
            double t29133 = b1a*t28985;
            double t29134 = b3a*t28987;
            double t29135 = b2a*c*t28983;
            double t29136 = b4a*t28990*t28991;
            double t29137 = t29133+t29134+t29135+t29136;
            double t29138 = 1/t29137;
            double t29139 = t29132*t29138*(1.0/2.0);
            double t29140 = t29139+1.0;
            double t29141 = log(t29140);
            double t29142 = a1a*c*t28983;
            double t29143 = t29142+1.0;
            double t29144 = a1p*c*t29001*t29012*t29004*t29005*(2.0/3.0);
            double t29145 = 1/pow(rho_a[index],7.0/3.0);
            double t29146 = 1/pow(t29023,3.0/2.0);
            double t29147 = t29109*t29109;
            double t29148 = t29055*t29055;
            double t29149 = 1/(t29037*t29037*t29037);
            double t29150 = t29048*t29049*t29148*t29149*2.0;
            double t29151 = b4p*t28990*t29014*(1.0E1/9.0);
            double t29152 = b2p*c*t29145*(4.0/9.0);
            double t29153 = b3p*t28990*t29014*t29039*(1.0/1.2E1);
            double t29154 = b1p*c*t29145*t29039*(2.0/9.0);
            double t29155 = b3p*c*t29024*t29145*(2.0/3.0);
            double t29272 = b1p*t28990*t29014*t29146*(1.0/3.6E1);
            double t29156 = t29151+t29152+t29153+t29154+t29155-t29272;
            double t29157 = 1/(t29046*t29046);
            double t29158 = 1/(t29037*t29037*t29037*t29037);
            double t29159 = a1p*c*c0p*t29145*t29057*(8.0/9.0);
            double t29253 = t29103*t29104*t29064*t29109;
            double t29160 = t29110-t29111-t29253+t29056;
            double t29161 = a1p*c*c0p*t29004*t29013*(4.0/3.0);
            double t29162 = pow(rho_a[index],5.0/3.0);
            double t29163 = 1/tau_a[index];
            double t29164 = C_k*t29162*t29163;
            double t29165 = t29164-1.0;
            double t29166 = t29165*t29165;
            double t29167 = t29164+1.0;
            double t29168 = t29166*t29166;
            double t29169 = gx*gx;
            double t29170 = gamma_aa[index]*gx*t29014;
            double t29171 = t29170+1.0;
            double t29172 = 1/t29171;
            double t29173 = gamma_aa[index]*gx*t29014*3.0;
            double t29174 = gamma_aa[index]*gx*t29015*t29017*t29169;
            double t29175 = t29015*t29018*t29169*3.0;
            double t29176 = t29173+t29174+t29175+1.0;
            double t29177 = 1/t29176;
            double t29178 = gamma_aa[index]*gx*t29014*2.0;
            double t29179 = t29015*t29018*t29169;
            double t29180 = t29178+t29179+1.0;
            double t29181 = 1/t29180;
            double t29182 = cxnl1*gamma_aa[index]*gx*t29014*t29172;
            double t29183 = cxnl3*gamma_aa[index]*gx*t29015*t29017*t29177*t29169;
            double t29184 = cxnl2*t29015*t29018*t29181*t29169;
            double t29185 = cxnl0+t29182+t29183+t29184;
            double t29186 = 1/t29167;
            double t29187 = pow(rho_a[index],4.0/3.0);
            double t29188 = 1/(t29167*t29167*t29167);
            double t29189 = 1/(t29167*t29167*t29167*t29167*t29167);
            double t29190 = C_k*C_k;
            double t29191 = 1/(tau_a[index]*tau_a[index]);
            double t29192 = 1/(t29167*t29167*t29167*t29167);
            double t29193 = 1/(t29167*t29167*t29167*t29167*t29167*t29167);
            double t29194 = 1/(t29167*t29167);
            double t29195 = t29165*t29186;
            double t29196 = t29165*t29168*t29189;
            double t29221 = t29165*t29166*t29188*2.0;
            double t29197 = -t29221+t29195+t29196;
            double t29204 = gamma_aa[index]*gx*t29079*(1.6E1/3.0);
            double t29205 = t29015*t29081*t29169*(1.6E1/3.0);
            double t29198 = t29204+t29205;
            double t29199 = 1/(t29176*t29176);
            double t29200 = gamma_aa[index]*gx*t29079*8.0;
            double t29201 = gamma_aa[index]*gx*t29015*t29080*t29169*8.0;
            double t29202 = t29015*t29081*t29169*1.6E1;
            double t29203 = t29200+t29201+t29202;
            double t29206 = 1/(t29180*t29180);
            double t29207 = pow(rho_a[index],2.0/3.0);
            double t29208 = 1/(t29171*t29171);
            double t29209 = 1/(t29171*t29171*t29171);
            double t29210 = t29198*t29198;
            double t29211 = 1/(t29180*t29180*t29180);
            double t29212 = gamma_aa[index]*gx*t29099*(8.8E1/3.0);
            double t29213 = gamma_aa[index]*gx*t29015*t29074*t29169*7.2E1;
            double t29214 = t29015*t29077*t29169*(3.04E2/3.0);
            double t29215 = t29212+t29213+t29214;
            double t29216 = t29203*t29203;
            double t29217 = 1/(t29176*t29176*t29176);
            double t29218 = gamma_aa[index]*gx*t29099*(1.76E2/9.0);
            double t29219 = t29015*t29077*t29169*(3.04E2/9.0);
            double t29220 = t29218+t29219;
            double t29222 = cxnl1*gamma_aa[index]*gx*t29172*t29079*(8.0/3.0);
            double t29223 = cxnl3*gamma_aa[index]*gx*t29015*t29080*t29177*t29169*8.0;
            double t29224 = cxnl2*t29015*t29081*t29181*t29169*(1.6E1/3.0);
            double t29225 = t29222+t29223+t29224-cxnl1*t29015*t29081*t29208*t29169*(8.0/3.0)-cxnl2*t29015*t29206* \
               t29018*t29169*t29198-cxnl3*gamma_aa[index]*gx*t29203*t29015*t29017*t29169*t29199;
            double t29226 = C_k*t29207*t29163*t29186*(5.0/3.0);
            double t29227 = C_k*t29207*t29163*t29165*t29192*t29166*1.0E1;
            double t29228 = C_k*t29207*t29163*t29168*t29189*(2.5E1/3.0);
            double t29229 = t29226+t29227+t29228-C_k*t29207*t29163*t29165*t29194*(5.0/3.0)-C_k*t29207*t29163* \
               t29166*t29188*1.0E1-C_k*t29207*t29163*t29165*t29193*t29168*(2.5E1/3.0);
            double t29230 = t29113+t29091;
            double t29231 = gamma_aa[index]*gcaa*t29014;
            double t29232 = t29231+1.0;
            double t29233 = 1/t29232;
            double t29234 = gamma_aa[index]*gcaa*t29014*3.0;
            double t29235 = gamma_aa[index]*gcaa*t29015*t29017*t29058;
            double t29236 = t29015*t29018*t29058*3.0;
            double t29237 = t29234+t29235+t29236+1.0;
            double t29238 = 1/t29237;
            double t29239 = gamma_aa[index]*gcaa*t29014*2.0;
            double t29240 = t29015*t29018*t29058;
            double t29241 = t29240+t29239+1.0;
            double t29242 = 1/t29241;
            double t29243 = 1/(t29232*t29232);
            double t29244 = gamma_aa[index]*gcaa*t29079*(1.6E1/3.0);
            double t29245 = t29015*t29081*t29058*(1.6E1/3.0);
            double t29246 = t29244+t29245;
            double t29247 = gamma_aa[index]*gcaa*t29079*8.0;
            double t29248 = gamma_aa[index]*gcaa*t29015*t29080*t29058*8.0;
            double t29249 = t29015*t29081*t29058*1.6E1;
            double t29250 = t29247+t29248+t29249;
            double t29251 = 1/(t29237*t29237);
            double t29252 = 1/(t29241*t29241);
            double t29254 = t29021*t29061*t29160;
            double t29255 = ccaa1*gamma_aa[index]*gcaa*t29233*t29079*(8.0/3.0);
            double t29256 = ccaa3*gamma_aa[index]*gcaa*t29015*t29080*t29058*t29238*8.0;
            double t29257 = ccaa2*t29015*t29242*t29081*t29058*(1.6E1/3.0);
            double t29258 = t29255+t29256+t29257-ccaa1*t29015*t29081*t29243*t29058*(8.0/3.0)-ccaa2*t29015*t29018* \
               t29252*t29246*t29058-ccaa3*gamma_aa[index]*gcaa*t29015*t29250*t29017*t29251*t29058;
            double t29259 = t29111-t29056+t29254;
            double t29260 = ccaa1*gamma_aa[index]*gcaa*t29014*t29233;
            double t29261 = ccaa3*gamma_aa[index]*gcaa*t29015*t29017*t29058*t29238;
            double t29262 = ccaa2*t29015*t29242*t29018*t29058;
            double t29263 = ccaa0+t29260+t29261+t29262;
            double t29264 = 1/(t29031*t29031*t29031);
            double t29265 = b4f*t28990*t29014*(1.0E1/9.0);
            double t29266 = b2f*c*t29145*(4.0/9.0);
            double t29267 = b3f*t28990*t29014*t29039*(1.0/1.2E1);
            double t29268 = b1f*c*t29145*t29039*(2.0/9.0);
            double t29269 = b3f*c*t29024*t29145*(2.0/3.0);
            double t29270 = t29265+t29266+t29267+t29268+t29269-b1f*t28990*t29014*t29146*(1.0/3.6E1);
            double t29271 = t29103*t29104*t29270*t29064;
            double t29273 = t29050*t29048*t29156*t29049;
            double t29274 = 1/(t29043*t29043);
            double t29275 = 1/(t29031*t29031*t29031*t29031);
            double t29276 = t29040*t29064*t29147*t29274*t29275*(1.0/2.0);
            double t29277 = t28997*t29048*t29148*t29157*t29158*(1.0/2.0);
            double t29278 = a1f*c*t29103*t29032*t29104*t29109*(2.0/3.0);
            double t29279 = a1p*c*t29032*t29050*t29055*t29049*(2.0/3.0);
            v_rho_a_rho_a_[index] = (rho_a[index]*(t29091+t29021*t29061*(t29090-c0p*t29048*t29057*2.0))*2.0-c0p* \
               rho_a[index]*t29003*t29013*4.0)*(t29102+t29094+t29098+ccab2*t29015*t29016*t29073*t29077*(3.2E1/9.0) \
               -ccab1*t29015*t29016*t29077*t29095*(3.2E1/9.0)-ccab2*1/pow(rho_a[index],3.8E1/3.0)*(t29015*t29015) \
               *(t29016*t29016)*t29089*(3.2E1/9.0)-ccab2*t29015*t29016*t29081*t29078*t29089*(1.6E1/3.0)+ccab3*gamma_aa[index]* \
               gcab*t29015*t29016*t29074*t29069*(3.2E1/3.0)-ccab3*gamma_aa[index]*gcab*t29015*t29016*t29017*t29082* \
               (t29015*t29016*t29077*(3.2E1/3.0)+gamma_aa[index]*gcab*t29015*t29016*t29074*(3.2E1/3.0))-ccab3*gamma_aa[index]* \
               gcab*t29015*t29016*t29080*t29082*t29086*8.0)-t29117*(-t29161-rho_a[index]*(t29125+t29144+t29129-t29001* \
               t29011*t29003*t29126*2.0-a1p*c*c0p*t28995*t29013*(8.0/9.0)+Aa*t29021*t29130*t29131*t29141*t29143*(4.0/ \
               9.0))*2.0+rho_a[index]*(-t29150+t29273-t29159+t29277+t29279+t29021*t29061*(t29150+t29271+t29159+t29276+ \
               t29278-t29103*t29064*t29147*t29264*2.0-t29050*t29048*t29156*t29049-a1f*c*c0f*t29062*t29145*(8.0/9.0) \
               -t28997*t29048*t29148*t29157*t29158*(1.0/2.0)-a1p*c*t29032*t29050*t29055*t29049*(2.0/3.0)))+t29021* \
               t29061*t29160*2.0+t29001*t29003*t29012*t29005*2.0-t29050*t29055*t29048*t29049*2.0+a1p*c*c0p*t29032* \
               t29057*(4.0/3.0))+t29230*t29258*2.0+(-t29113-t29091+rho_a[index]*t29259+rho_a[index]*(t29001*t29003* \
               t29012*t29005-a1p*c*c0p*t29004*t29013*(2.0/3.0))*2.0+c0p*t29003*t29013*2.0)*(ccab1*gamma_aa[index]* \
               gcab*t29092*t29079*(4.0/3.0)+ccab2*t29015*t29016*t29081*t29073*(8.0/3.0)-ccab1*t29015*t29016*t29081* \
               t29095*(4.0/3.0)-ccab2*t29015*t29016*t29018*t29078*t29089+ccab3*gamma_aa[index]*gcab*t29015*t29016* \
               t29080*t29069*4.0-ccab3*gamma_aa[index]*gcab*t29015*t29016*t29017*t29082*t29086)*4.0+t29263*(t29111- \
               t29056+t29021*t29061*(t29110+t29056-t29103*t29104*t29064*t29109-a1p*c*c0p*t29032*t29057*(2.0/3.0)) \
               )*2.0+(X-1.0)*(c0*t29187*(t29185*(t29190*t29191*t29194*t29187*(5.0E1/9.0)-C_k*t29022*t29163*t29186* \
               (1.0E1/9.0)+C_k*t29022*t29163*t29165*t29194*(1.0E1/9.0)+C_k*t29022*t29163*t29166*t29188*(2.0E1/3.0) \
               -C_k*t29022*t29163*t29168*t29189*(5.0E1/9.0)-t29190*t29191*t29192*t29166*t29187*1.0E2+t29190*t29191* \
               t29193*t29168*t29187*(1.25E3/9.0)+t29190*t29191*t29165*t29187*t29188*(2.5E2/9.0)+t29190*t29191*t29165* \
               t29166*t29187*t29189*(1.0E2/9.0)-t29190*t29191*t29165*1/(t29167*t29167*t29167*t29167*t29167*t29167* \
               t29167)*t29168*t29187*(2.5E2/3.0)-C_k*t29022*t29163*t29165*t29192*t29166*(2.0E1/3.0)+C_k*t29022*t29163* \
               t29165*t29193*t29168*(5.0E1/9.0))-t29197*(cxnl1*gamma_aa[index]*gx*t29172*t29099*(8.8E1/9.0)-cxnl1* \
               t29015*t29208*t29077*t29169*2.4E1+cxnl2*t29015*t29181*t29077*t29169*(3.04E2/9.0)+cxnl2*t29210*t29211* \
               t29015*t29018*t29169*2.0-cxnl2*t29220*t29015*t29206*t29018*t29169-cxnl2*t29015*t29206*t29081*t29169* \
               t29198*(3.2E1/3.0)+cxnl1*gamma_aa[index]*gx*t29015*t29074*t29209*t29169*(1.28E2/9.0)+cxnl3*gamma_aa[index]* \
               gx*t29015*t29074*t29177*t29169*7.2E1+cxnl3*gamma_aa[index]*gx*t29015*t29017*t29216*t29217*t29169*2.0- \
               cxnl3*gamma_aa[index]*gx*t29203*t29015*t29080*t29169*t29199*1.6E1-cxnl3*gamma_aa[index]*gx*t29015* \
               t29017*t29215*t29169*t29199)+t29225*t29229*2.0-cx1*gamma_aa[index]*gx*t29172*t29099*(8.8E1/9.0)+cx1* \
               t29015*t29208*t29077*t29169*2.4E1-cx2*t29015*t29181*t29077*t29169*(3.04E2/9.0)-cx2*t29210*t29211*t29015* \
               t29018*t29169*2.0+cx2*t29220*t29015*t29206*t29018*t29169+cx2*t29015*t29206*t29081*t29169*t29198*(3.2E1/ \
               3.0)-cx1*gamma_aa[index]*gx*t29015*t29074*t29209*t29169*(1.28E2/9.0)-cx3*gamma_aa[index]*gx*t29015* \
               t29074*t29177*t29169*7.2E1-cx3*gamma_aa[index]*gx*t29015*t29017*t29216*t29217*t29169*2.0+cx3*gamma_aa[index]* \
               gx*t29203*t29015*t29080*t29169*t29199*1.6E1+cx3*gamma_aa[index]*gx*t29015*t29017*t29215*t29169*t29199) \
               +c0*pow(rho_a[index],1.0/3.0)*(t29225*t29197-t29229*t29185+cx1*gamma_aa[index]*gx*t29172*t29079*(8.0/ \
               3.0)-cx1*t29015*t29081*t29208*t29169*(8.0/3.0)+cx2*t29015*t29081*t29181*t29169*(1.6E1/3.0)-cx2*t29015* \
               t29206*t29018*t29169*t29198+cx3*gamma_aa[index]*gx*t29015*t29080*t29177*t29169*8.0-cx3*gamma_aa[index]* \
               gx*t29203*t29015*t29017*t29169*t29199)*(8.0/3.0)-c0*t29028*(cx0+t29185*t29197+cx1*gamma_aa[index]* \
               gx*t29014*t29172+cx2*t29015*t29018*t29181*t29169+cx3*gamma_aa[index]*gx*t29015*t29017*t29177*t29169) \
               *(4.0/9.0))+(rho_a[index]*t29230*2.0-c0p*rho_a[index]*t29003*t29013*4.0)*(t29102+t29094+t29098+ccab1* \
               gamma_aa[index]*gcab*t29092*t29099*(4.4E1/9.0)+ccab2*t29015*t29016*t29073*t29077*(4.0E1/3.0)-ccab1* \
               t29015*t29016*t29077*t29095*(7.6E1/9.0)-ccab2*t29015*t29016*t29081*t29078*t29089*(1.6E1/3.0)-ccab2* \
               t29015*t29016*t29018*t29089*(gamma_aa[index]*gcab*t29099*(8.8E1/9.0)+t29015*t29016*t29077*(4.0E1/3.0) \
               )+ccab3*gamma_aa[index]*gcab*t29015*t29016*t29074*t29069*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t29015* \
               t29016*t29017*t29082*(gamma_aa[index]*gcab*t29099*(4.4E1/3.0)+t29015*t29016*t29077*4.0E1+gamma_aa[index]* \
               gcab*t29015*t29016*t29074*(7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t29015*t29016*t29080*t29082*t29086* \
               8.0)+t29117*(t29161+rho_a[index]*(t29125+t29144+t29129-t29001*t29011*t29003*t29126*2.0-a1p*c*c0p*t28995* \
               t29013*(8.0/9.0)-Aa*t29021*t29130*t29131*t29141*t29143*(4.0/9.0))*2.0-t29001*t29003*t29012*t29005* \
               2.0)-rho_a[index]*t29230*(ccaa1*gamma_aa[index]*gcaa*t29233*t29099*(8.8E1/9.0)-ccaa1*t29015*t29243* \
               t29058*t29077*2.4E1+ccaa2*t29015*t29242*t29058*t29077*(3.04E2/9.0)-ccaa2*t29015*t29081*t29252*t29246* \
               t29058*(3.2E1/3.0)-ccaa2*t29015*t29018*t29252*t29058*(gamma_aa[index]*gcaa*t29099*(1.76E2/9.0)+t29015* \
               t29058*t29077*(3.04E2/9.0))+ccaa2*t29015*1/(t29241*t29241*t29241)*t29018*(t29246*t29246)*t29058*2.0+ \
               ccaa3*gamma_aa[index]*gcaa*t29015*t29074*t29058*t29238*7.2E1+ccaa1*gamma_aa[index]*gcaa*t29015*1/(t29232* \
               t29232*t29232)*t29074*t29058*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t29015*(t29250*t29250)*t29017* \
               1/(t29237*t29237*t29237)*t29058*2.0-ccaa3*gamma_aa[index]*gcaa*t29015*t29017*t29251*t29058*(gamma_aa[index]* \
               gcaa*t29099*(8.8E1/3.0)+t29015*t29058*t29077*(3.04E2/3.0)+gamma_aa[index]*gcaa*t29015*t29074*t29058* \
               7.2E1)-ccaa3*gamma_aa[index]*gcaa*t29015*t29250*t29080*t29251*t29058*1.6E1)+rho_a[index]*t29263*(- \
               t29150+t29273-t29159+t29277+t29279+t29021*t29061*(t29150+t29271-t29273+t29159+t29276-t29277+t29278- \
               t29279-t29103*t29064*t29147*t29264*2.0-a1f*c*c0f*t29062*t29145*(8.0/9.0)))-rho_a[index]*t29258*t29259* \
               2.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t29281 = 1/pow(rho_a[index],1.0/3.0);
                double t29282 = c*t29281;
                double t29283 = sqrt(t29282);
                double t29284 = pow(t29282,3.0/2.0);
                double t29285 = c*c;
                double t29286 = 1/pow(rho_a[index],2.0/3.0);
                double t29287 = 1/c0p;
                double t29288 = b1p*t29283;
                double t29289 = b3p*t29284;
                double t29290 = b4p*t29285*t29286;
                double t29291 = b2p*c*t29281;
                double t29292 = t29290+t29291+t29288+t29289;
                double t29293 = 1/t29292;
                double t29294 = t29293*t29287*(1.0/2.0);
                double t29295 = t29294+1.0;
                double t29296 = log(t29295);
                double t29297 = a1p*c*t29281;
                double t29298 = t29297+1.0;
                double t29299 = 1/pow(rho_a[index],8.0/3.0);
                double t29300 = gcaa*gcaa;
                double t29301 = 1/pow(rho_a[index],1.6E1/3.0);
                double t29302 = gamma_aa[index]*gamma_aa[index];
                double t29303 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t29304 = gamma_aa[index]*gcaa*t29299;
                double t29305 = t29304+1.0;
                double t29306 = gamma_aa[index]*gcaa*t29299*3.0;
                double t29307 = gamma_aa[index]*gcaa*t29300*t29302*t29303;
                double t29308 = t29300*t29301*t29302*3.0;
                double t29309 = t29306+t29307+t29308+1.0;
                double t29310 = gamma_aa[index]*gcaa*t29299*2.0;
                double t29311 = t29300*t29301*t29302;
                double t29312 = t29310+t29311+1.0;
                double t29313 = 1/tau_a[index];
                double t29314 = pow(rho_a[index],2.0/3.0);
                double t29315 = pow(rho_a[index],5.0/3.0);
                double t29316 = C_k*t29313*t29315;
                double t29317 = t29316-1.0;
                double t29318 = t29316+1.0;
                double t29319 = t29317*t29317;
                double t29320 = t29319*t29319;
                double t29321 = gx*gx;
                double t29322 = gamma_aa[index]*gx*t29299;
                double t29323 = t29322+1.0;
                double t29324 = gamma_aa[index]*gx*t29299*3.0;
                double t29325 = gamma_aa[index]*gx*t29302*t29303*t29321;
                double t29326 = t29301*t29302*t29321*3.0;
                double t29327 = t29324+t29325+t29326+1.0;
                double t29328 = gamma_aa[index]*gx*t29299*2.0;
                double t29329 = t29301*t29302*t29321;
                double t29330 = t29328+t29329+1.0;
                double t29331 = 1/t29318;
                double t29332 = 1/(t29318*t29318*t29318);
                double t29333 = 1/(t29318*t29318*t29318*t29318*t29318);
                double t29334 = 1/t29323;
                double t29335 = 1/t29330;
                double t29336 = 1/t29327;
                double t29337 = 1/pow(rho_a[index],1.9E1/3.0);
                double t29338 = 1/(t29323*t29323);
                double t29339 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t29340 = 1/pow(rho_a[index],1.1E1/3.0);
                double t29341 = 1/(t29327*t29327);
                double t29342 = 1/(t29330*t29330);
                double t29343 = gx*t29299*3.0;
                double t29344 = gamma_aa[index]*t29301*t29321*6.0;
                double t29345 = gx*t29302*t29303*t29321*3.0;
                double t29346 = t29343+t29344+t29345;
                double t29347 = gx*t29299*2.0;
                double t29348 = gamma_aa[index]*t29301*t29321*2.0;
                double t29349 = t29347+t29348;
                double t29350 = gamma_aa[index]*gx*t29340*(1.6E1/3.0);
                double t29351 = t29302*t29321*t29337*(1.6E1/3.0);
                double t29352 = t29350+t29351;
                double t29353 = gamma_aa[index]*gx*t29340*8.0;
                double t29354 = gamma_aa[index]*gx*t29302*t29321*t29339*8.0;
                double t29355 = t29302*t29321*t29337*1.6E1;
                double t29356 = t29353+t29354+t29355;
                double t29357 = 1/(t29323*t29323*t29323);
                double t29358 = gx*t29340*8.0;
                double t29359 = gamma_aa[index]*t29321*t29337*3.2E1;
                double t29360 = gx*t29302*t29321*t29339*2.4E1;
                double t29361 = t29360+t29358+t29359;
                double t29362 = gx*t29340*(1.6E1/3.0);
                double t29363 = gamma_aa[index]*t29321*t29337*(3.2E1/3.0);
                double t29364 = t29362+t29363;
                double t29365 = 1/(t29330*t29330*t29330);
                double t29366 = 1/(t29327*t29327*t29327);
                double t29367 = t29331*t29317;
                double t29368 = t29320*t29333*t29317;
                double t29369 = t29367+t29368-t29332*t29317*t29319*2.0;
                double t29370 = cxnl1*gx*t29334*t29299;
                double t29371 = cxnl2*gamma_aa[index]*t29301*t29321*t29335*2.0;
                double t29372 = cxnl3*gx*t29302*t29303*t29321*t29336*3.0;
                double t29373 = t29370+t29371+t29372-cxnl1*gamma_aa[index]*t29301*t29321*t29338-cxnl2*t29301*t29302* \
                   t29321*t29342*t29349-cxnl3*gamma_aa[index]*gx*t29302*t29303*t29321*t29341*t29346;
                double t29374 = pow(2.0,1.0/3.0);
                double t29375 = t29374*2.0;
                double t29376 = t29375-2.0;
                double t29377 = two_13*2.0;
                double t29378 = t29377-2.0;
                double t29379 = 1/t29378;
                double t29380 = 1/c0f;
                double t29381 = b1f*t29283;
                double t29382 = b3f*t29284;
                double t29383 = b4f*t29285*t29286;
                double t29384 = b2f*c*t29281;
                double t29385 = t29381+t29382+t29383+t29384;
                double t29386 = 1/t29385;
                double t29387 = t29380*t29386*(1.0/2.0);
                double t29388 = t29387+1.0;
                double t29389 = log(t29388);
                double t29390 = a1f*c*t29281;
                double t29391 = t29390+1.0;
                double t29392 = c0f*t29391*t29389*2.0;
                double t29393 = c0p*t29296*t29298*2.0;
                double t29394 = rho_a[index]*2.0;
                double t29395 = 1/pow(t29394,1.0/3.0);
                double t29396 = c*t29395;
                double t29397 = gcab*gcab;
                double t29398 = gamma_aa[index]*gcab*t29299;
                double t29399 = t29398+1.0;
                double t29400 = gamma_aa[index]*gcab*t29299*3.0;
                double t29401 = gamma_aa[index]*gcab*t29302*t29303*t29397;
                double t29402 = t29301*t29302*t29397*3.0;
                double t29403 = t29400+t29401+t29402+1.0;
                double t29404 = gamma_aa[index]*gcab*t29299*2.0;
                double t29405 = t29301*t29302*t29397;
                double t29406 = t29404+t29405+1.0;
                double t29407 = 1/(t29403*t29403);
                double t29408 = 1/(t29406*t29406);
                double t29409 = gamma_aa[index]*gcab*t29340*(8.0/3.0);
                double t29410 = t29302*t29337*t29397*(8.0/3.0);
                double t29411 = t29410+t29409;
                double t29412 = gcab*t29299;
                double t29413 = gamma_aa[index]*t29301*t29397;
                double t29414 = t29412+t29413;
                double t29415 = gcab*t29299*(3.0/2.0);
                double t29416 = gamma_aa[index]*t29301*t29397*3.0;
                double t29417 = gcab*t29302*t29303*t29397*(3.0/2.0);
                double t29418 = t29415+t29416+t29417;
                double t29419 = gamma_aa[index]*gcab*t29340*4.0;
                double t29420 = gamma_aa[index]*gcab*t29302*t29339*t29397*4.0;
                double t29421 = t29302*t29337*t29397*8.0;
                double t29422 = t29420+t29421+t29419;
                double t29423 = sqrt(t29396);
                double t29424 = b1p*t29423;
                double t29425 = pow(t29396,3.0/2.0);
                double t29426 = b3p*t29425;
                double t29427 = b2p*c*t29395;
                double t29428 = 1/pow(t29394,2.0/3.0);
                double t29429 = b4p*t29428*t29285;
                double t29430 = t29424+t29426+t29427+t29429;
                double t29431 = 1/t29430;
                double t29432 = t29431*t29287*(1.0/2.0);
                double t29433 = t29432+1.0;
                double t29434 = a1p*c*t29395;
                double t29435 = t29434+1.0;
                double t29436 = 1/pow(t29394,4.0/3.0);
                double t29437 = log(t29433);
                double t29438 = 1/pow(rho_a[index],4.0/3.0);
                double t29439 = 1/pow(rho_a[index],5.0/3.0);
                double t29440 = 1/sqrt(t29282);
                double t29441 = 1/t29295;
                double t29442 = 1/(t29292*t29292);
                double t29443 = b4p*t29285*t29439*(2.0/3.0);
                double t29444 = b2p*c*t29438*(1.0/3.0);
                double t29445 = b1p*c*t29440*t29438*(1.0/6.0);
                double t29446 = b3p*c*t29283*t29438*(1.0/2.0);
                double t29447 = t29443+t29444+t29445+t29446;
                double t29448 = t29441*t29442*t29447*t29298;
                double t29449 = t29392-t29393;
                double t29450 = t29376*t29449*t29379;
                double t29451 = 1/t29399;
                double t29452 = 1/t29406;
                double t29453 = 1/t29403;
                double t29454 = 1/(t29399*t29399);
                double t29455 = t29450+t29393;
                double t29456 = rho_a[index]*t29455*2.0;
                double t29457 = t29456-c0p*rho_a[index]*t29435*t29437*4.0;
                double t29458 = 1/(t29399*t29399*t29399);
                double t29459 = ccab3*gcab*t29302*t29303*t29422*t29407*t29397*(3.0/2.0);
                double t29460 = ccab2*gamma_aa[index]*t29301*t29411*t29408*t29397;
                double t29461 = ccab3*gamma_aa[index]*gcab*t29302*t29407*t29418*t29339*t29397*4.0;
                double t29462 = gamma_aa[index]*t29337*t29397*4.0;
                double t29463 = ccab2*t29302*t29414*t29408*t29337*t29397*(8.0/3.0);
                double t29464 = 1/(t29406*t29406*t29406);
                double t29465 = 1/(t29403*t29403*t29403);
                double t29466 = 1/t29305;
                double t29467 = 1/t29312;
                double t29468 = 1/t29309;
                double t29469 = 1/(t29305*t29305);
                double t29470 = 1/(t29309*t29309);
                double t29471 = 1/(t29312*t29312);
                double t29472 = gcaa*t29299*3.0;
                double t29473 = gamma_aa[index]*t29300*t29301*6.0;
                double t29474 = gcaa*t29300*t29302*t29303*3.0;
                double t29475 = t29472+t29473+t29474;
                double t29476 = gcaa*t29299*2.0;
                double t29477 = gamma_aa[index]*t29300*t29301*2.0;
                double t29478 = t29476+t29477;
                double t29479 = gamma_aa[index]*gcaa*t29340*(1.6E1/3.0);
                double t29480 = t29300*t29302*t29337*(1.6E1/3.0);
                double t29481 = t29480+t29479;
                double t29482 = gamma_aa[index]*gcaa*t29340*8.0;
                double t29483 = gamma_aa[index]*gcaa*t29300*t29302*t29339*8.0;
                double t29484 = t29300*t29302*t29337*1.6E1;
                double t29485 = t29482+t29483+t29484;
                double t29486 = 1/t29388;
                double t29487 = 1/(t29385*t29385);
                double t29488 = b4f*t29285*t29439*(2.0/3.0);
                double t29489 = b2f*c*t29438*(1.0/3.0);
                double t29490 = b1f*c*t29440*t29438*(1.0/6.0);
                double t29491 = b3f*c*t29283*t29438*(1.0/2.0);
                double t29492 = t29490+t29491+t29488+t29489;
                double t29493 = a1f*c*c0f*t29438*t29389*(2.0/3.0);
                double t29494 = a1p*c*c0p*t29438*t29296*(2.0/3.0);
                double t29495 = ccaa1*gcaa*t29466*t29299;
                double t29496 = ccaa2*gamma_aa[index]*t29300*t29301*t29467*2.0;
                double t29497 = ccaa3*gcaa*t29300*t29302*t29303*t29468*3.0;
                double t29498 = t29495+t29496+t29497-ccaa1*gamma_aa[index]*t29300*t29301*t29469-ccaa2*t29300*t29301* \
                   t29302*t29471*t29478-ccaa3*gamma_aa[index]*gcaa*t29300*t29302*t29303*t29470*t29475;
                v_rho_a_gamma_aa_[index] = t29457*(t29460+t29461+t29463+t29459-ccab1*gcab*t29340*t29451*(4.0/3.0) \
                   -ccab2*gamma_aa[index]*t29452*t29337*t29397*4.0+ccab1*gamma_aa[index]*t29337*t29454*t29397*(8.0/3.0) \
                   +ccab2*t29301*t29302*t29408*t29397*(t29462+gcab*t29340*(8.0/3.0))-ccab3*gcab*t29302*t29453*t29339* \
                   t29397*8.0-ccab1*gcab*t29302*t29339*t29458*t29397*(4.0/3.0)-ccab2*t29301*t29302*t29411*t29414*t29464* \
                   t29397*2.0+ccab3*gamma_aa[index]*gcab*t29302*t29303*t29407*t29397*(gcab*t29340*4.0+gamma_aa[index]* \
                   t29337*t29397*1.2E1+gcab*t29302*t29339*t29397*8.0)-ccab3*gamma_aa[index]*gcab*t29302*t29303*t29422* \
                   t29418*t29465*t29397*2.0)-(c0*pow(rho_a[index],1.0/3.0)*(t29373*t29369+cx1*gx*t29334*t29299-cx1*gamma_aa[index]* \
                   t29301*t29321*t29338+cx2*gamma_aa[index]*t29301*t29321*t29335*2.0-cx2*t29301*t29302*t29321*t29342* \
                   t29349+cx3*gx*t29302*t29303*t29321*t29336*3.0-cx3*gamma_aa[index]*gx*t29302*t29303*t29321*t29341*t29346) \
                   *(4.0/3.0)+c0*pow(rho_a[index],4.0/3.0)*(t29369*(cxnl1*gx*t29340*t29334*(-8.0/3.0)-cxnl2*gamma_aa[index]* \
                   t29321*t29335*t29337*(3.2E1/3.0)+cxnl1*gamma_aa[index]*t29321*t29337*t29338*8.0+cxnl2*t29301*t29302* \
                   t29321*t29342*t29364+cxnl2*t29302*t29321*t29342*t29337*t29349*(1.6E1/3.0)+cxnl2*gamma_aa[index]*t29301* \
                   t29321*t29342*t29352*2.0-cxnl3*gx*t29302*t29321*t29336*t29339*2.4E1-cxnl1*gx*t29302*t29321*t29339* \
                   t29357*(1.6E1/3.0)+cxnl3*gx*t29302*t29303*t29321*t29341*t29356*3.0-cxnl2*t29301*t29302*t29321*t29352* \
                   t29365*t29349*2.0+cxnl3*gamma_aa[index]*gx*t29302*t29303*t29321*t29341*t29361+cxnl3*gamma_aa[index]* \
                   gx*t29302*t29321*t29341*t29346*t29339*8.0-cxnl3*gamma_aa[index]*gx*t29302*t29303*t29321*t29346*t29356* \
                   t29366*2.0)+t29373*(C_k*t29313*t29331*t29314*(5.0/3.0)+C_k*t29320*t29313*t29314*t29333*(2.5E1/3.0) \
                   -C_k*t29313*t29314*t29332*t29319*1.0E1-C_k*t29313*t29314*t29317*1/(t29318*t29318)*(5.0/3.0)-C_k*t29320* \
                   t29313*t29314*t29317*1/(t29318*t29318*t29318*t29318*t29318*t29318)*(2.5E1/3.0)+C_k*t29313*t29314*t29317* \
                   1/(t29318*t29318*t29318*t29318)*t29319*1.0E1)-cx1*gx*t29340*t29334*(8.0/3.0)+cx1*gamma_aa[index]*t29321* \
                   t29337*t29338*8.0-cx2*gamma_aa[index]*t29321*t29335*t29337*(3.2E1/3.0)+cx2*t29301*t29302*t29321*t29342* \
                   t29364+cx2*t29302*t29321*t29342*t29337*t29349*(1.6E1/3.0)+cx2*gamma_aa[index]*t29301*t29321*t29342* \
                   t29352*2.0-cx1*gx*t29302*t29321*t29339*t29357*(1.6E1/3.0)-cx3*gx*t29302*t29321*t29336*t29339*2.4E1+ \
                   cx3*gx*t29302*t29303*t29321*t29341*t29356*3.0-cx2*t29301*t29302*t29321*t29352*t29365*t29349*2.0+cx3* \
                   gamma_aa[index]*gx*t29302*t29303*t29321*t29341*t29361+cx3*gamma_aa[index]*gx*t29302*t29321*t29341* \
                   t29346*t29339*8.0-cx3*gamma_aa[index]*gx*t29302*t29303*t29321*t29346*t29356*t29366*2.0))*(X-1.0)-t29498* \
                   (t29393+t29376*t29379*(t29392-c0p*t29296*t29298*2.0))-(-t29450-t29393+rho_a[index]*((1/(t29430*t29430) \
                   *t29435*(b4p*t29285*1/pow(t29394,5.0/3.0)*(2.0/3.0)+b2p*c*t29436*(1.0/3.0)+b3p*c*t29423*t29436*(1.0/ \
                   2.0)+b1p*c*t29436*1/sqrt(t29396)*(1.0/6.0)))/t29433-a1p*c*c0p*t29436*t29437*(2.0/3.0))*2.0+rho_a[index]* \
                   (-t29448+t29494+t29376*t29379*(t29448+t29493-t29391*t29492*t29486*t29487-a1p*c*c0p*t29438*t29296*(2.0/ \
                   3.0)))+c0p*t29435*t29437*2.0)*(ccab1*gcab*t29451*t29299*(1.0/2.0)+ccab2*gamma_aa[index]*t29301*t29452* \
                   t29397-ccab1*gamma_aa[index]*t29301*t29454*t29397*(1.0/2.0)-ccab2*t29301*t29302*t29414*t29408*t29397+ \
                   ccab3*gcab*t29302*t29303*t29453*t29397*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t29302*t29303*t29407*t29418* \
                   t29397)*2.0+t29457*(t29460+t29461+t29463+t29459-ccab2*gamma_aa[index]*t29452*t29337*t29397*(4.0/3.0) \
                   +ccab1*gamma_aa[index]*t29337*t29454*t29397*(4.0/3.0)+ccab2*gamma_aa[index]*1/pow(rho_a[index],3.5E1/ \
                   3.0)*t29302*t29408*(t29397*t29397)*(4.0/3.0)-ccab3*gcab*t29302*t29453*t29339*t29397*4.0-ccab1*gcab* \
                   t29302*t29339*t29458*t29397*(4.0/3.0)-ccab2*t29301*t29302*t29411*t29414*t29464*t29397*2.0+ccab3*gamma_aa[index]* \
                   gcab*t29302*t29303*t29407*t29397*(t29462+gcab*t29302*t29339*t29397*4.0)-ccab3*gamma_aa[index]*gcab* \
                   t29302*t29303*t29422*t29418*t29465*t29397*2.0)+rho_a[index]*t29498*(-t29448+t29494+t29376*t29379*(t29448+ \
                   t29493-t29494-t29391*t29492*t29486*t29487))-rho_a[index]*t29455*(ccaa1*gcaa*t29340*t29466*(-8.0/3.0) \
                   -ccaa2*gamma_aa[index]*t29300*t29337*t29467*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t29300*t29337*t29469* \
                   8.0+ccaa2*t29300*t29302*t29471*t29337*t29478*(1.6E1/3.0)-ccaa1*gcaa*t29300*t29302*1/(t29305*t29305* \
                   t29305)*t29339*(1.6E1/3.0)+ccaa2*t29300*t29301*t29302*t29471*(gcaa*t29340*(1.6E1/3.0)+gamma_aa[index]* \
                   t29300*t29337*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t29300*t29301*t29471*t29481*2.0-ccaa3*gcaa*t29300* \
                   t29302*t29339*t29468*2.4E1+ccaa3*gcaa*t29300*t29302*t29303*t29470*t29485*3.0-ccaa2*t29300*t29301*t29302* \
                   1/(t29312*t29312*t29312)*t29481*t29478*2.0+ccaa3*gamma_aa[index]*gcaa*t29300*t29302*t29303*t29470* \
                   (gcaa*t29340*8.0+gamma_aa[index]*t29300*t29337*3.2E1+gcaa*t29300*t29302*t29339*2.4E1)+ccaa3*gamma_aa[index]* \
                   gcaa*t29300*t29302*t29470*t29339*t29475*8.0-ccaa3*gamma_aa[index]*gcaa*t29300*t29302*t29303*1/(t29309* \
                   t29309*t29309)*t29475*t29485*2.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t29500 = 1/pow(rho_a[index],1.0/3.0);
                double t29501 = c*t29500;
                double t29502 = sqrt(t29501);
                double t29503 = pow(t29501,3.0/2.0);
                double t29504 = c*c;
                double t29505 = 1/pow(rho_a[index],2.0/3.0);
                double t29506 = 1/c0p;
                double t29507 = b1p*t29502;
                double t29508 = b3p*t29503;
                double t29509 = b4p*t29504*t29505;
                double t29510 = b2p*c*t29500;
                double t29511 = t29510+t29507+t29508+t29509;
                double t29512 = 1/t29511;
                double t29513 = t29512*t29506*(1.0/2.0);
                double t29514 = t29513+1.0;
                double t29515 = log(t29514);
                double t29516 = a1p*c*t29500;
                double t29517 = t29516+1.0;
                double t29518 = rho_a[index]*2.0;
                double t29519 = 1/pow(t29518,1.0/3.0);
                double t29520 = c*t29519;
                double t29521 = gcab*gcab;
                double t29522 = 1/pow(rho_a[index],1.6E1/3.0);
                double t29523 = 1/pow(rho_a[index],8.0/3.0);
                double t29524 = gamma_aa[index]*gcab*t29523;
                double t29525 = t29524+1.0;
                double t29526 = gamma_aa[index]*gamma_aa[index];
                double t29527 = gamma_aa[index]*gcab*t29523*2.0;
                double t29528 = t29521*t29522*t29526;
                double t29529 = t29527+t29528+1.0;
                double t29530 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t29531 = gamma_aa[index]*gcab*t29523*3.0;
                double t29532 = gamma_aa[index]*gcab*t29521*t29530*t29526;
                double t29533 = t29521*t29522*t29526*3.0;
                double t29534 = t29531+t29532+t29533+1.0;
                double t29537 = gcab*t29523;
                double t29538 = gamma_aa[index]*t29521*t29522;
                double t29535 = t29537+t29538;
                double t29536 = 1/(t29534*t29534);
                double t29539 = 1/(t29529*t29529);
                double t29540 = gcab*t29523*(3.0/2.0);
                double t29541 = gamma_aa[index]*t29521*t29522*3.0;
                double t29542 = gcab*t29521*t29530*t29526*(3.0/2.0);
                double t29543 = t29540+t29541+t29542;
                double t29544 = pow(2.0,1.0/3.0);
                double t29545 = t29544*2.0;
                double t29546 = t29545-2.0;
                double t29547 = two_13*2.0;
                double t29548 = t29547-2.0;
                double t29549 = 1/t29548;
                double t29550 = 1/c0f;
                double t29551 = b1f*t29502;
                double t29552 = b3f*t29503;
                double t29553 = b4f*t29504*t29505;
                double t29554 = b2f*c*t29500;
                double t29555 = t29551+t29552+t29553+t29554;
                double t29556 = 1/t29555;
                double t29557 = t29550*t29556*(1.0/2.0);
                double t29558 = t29557+1.0;
                double t29559 = log(t29558);
                double t29560 = a1f*c*t29500;
                double t29561 = t29560+1.0;
                double t29562 = c0f*t29561*t29559*2.0;
                double t29563 = c0p*t29515*t29517*2.0;
                double t29564 = gcaa*gcaa;
                double t29565 = gamma_aa[index]*gcaa*t29523;
                double t29566 = t29565+1.0;
                double t29567 = 1/pow(rho_a[index],3.2E1/3.0);
                double t29568 = gamma_aa[index]*gcaa*t29523*2.0;
                double t29569 = t29522*t29526*t29564;
                double t29570 = t29568+t29569+1.0;
                double t29571 = gamma_aa[index]*gcaa*t29523*3.0;
                double t29572 = gamma_aa[index]*gcaa*t29530*t29526*t29564;
                double t29573 = t29522*t29526*t29564*3.0;
                double t29574 = t29571+t29572+t29573+1.0;
                double t29577 = gcaa*t29523*2.0;
                double t29578 = gamma_aa[index]*t29522*t29564*2.0;
                double t29575 = t29577+t29578;
                double t29576 = 1/(t29574*t29574);
                double t29579 = 1/(t29570*t29570);
                double t29580 = gcaa*t29523*3.0;
                double t29581 = gamma_aa[index]*t29522*t29564*6.0;
                double t29582 = gcaa*t29530*t29526*t29564*3.0;
                double t29583 = t29580+t29581+t29582;
                double t29584 = pow(rho_a[index],5.0/3.0);
                double t29585 = 1/tau_a[index];
                double t29586 = C_k*t29584*t29585;
                double t29587 = t29586-1.0;
                double t29588 = t29587*t29587;
                double t29589 = t29586+1.0;
                double t29590 = t29588*t29588;
                double t29591 = gx*gx;
                double t29592 = gamma_aa[index]*gx*t29523;
                double t29593 = t29592+1.0;
                double t29594 = gamma_aa[index]*gx*t29523*2.0;
                double t29595 = t29522*t29526*t29591;
                double t29596 = t29594+t29595+1.0;
                double t29597 = gamma_aa[index]*gx*t29523*3.0;
                double t29598 = gamma_aa[index]*gx*t29530*t29526*t29591;
                double t29599 = t29522*t29526*t29591*3.0;
                double t29600 = t29597+t29598+t29599+1.0;
                double t29603 = gx*t29523*2.0;
                double t29604 = gamma_aa[index]*t29522*t29591*2.0;
                double t29601 = t29603+t29604;
                double t29602 = 1/(t29600*t29600);
                double t29605 = 1/(t29596*t29596);
                double t29606 = gx*t29523*3.0;
                double t29607 = gamma_aa[index]*t29522*t29591*6.0;
                double t29608 = gx*t29530*t29526*t29591*3.0;
                double t29609 = t29606+t29607+t29608;
                double t29610 = 1/(t29593*t29593);
                double t29611 = 1/t29596;
                double t29612 = 1/t29600;
                double t29613 = 1/(t29593*t29593*t29593);
                double t29614 = t29591*t29591;
                double t29615 = t29522*t29591*6.0;
                double t29616 = gamma_aa[index]*gx*t29530*t29591*6.0;
                double t29617 = t29615+t29616;
                double t29618 = t29601*t29601;
                double t29619 = 1/(t29596*t29596*t29596);
                double t29620 = t29609*t29609;
                double t29621 = 1/(t29600*t29600*t29600);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t29563+t29546*t29549*(t29562-c0p*t29515*t29517*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t29506*(1.0/2.0))/(b1p*sqrt(t29520)+b3p*pow(t29520,3.0/2.0)+b4p*t29504* \
                   1/pow(t29518,2.0/3.0)+b2p*c*t29519)+1.0)*(a1p*c*t29519+1.0)*4.0)*(ccab1*t29521*t29522*1/(t29525*t29525) \
                   *(1.0/2.0)-(ccab2*t29521*t29522*(1.0/2.0))/t29529+ccab2*(t29521*t29521)*t29526*t29539*t29567*(1.0/ \
                   2.0)-ccab1*gamma_aa[index]*gcab*t29521*t29530*1/(t29525*t29525*t29525)*(1.0/2.0)-(ccab3*gamma_aa[index]* \
                   gcab*t29521*t29530*(3.0/2.0))/t29534-ccab2*t29521*t29522*t29526*(t29535*t29535)*1/(t29529*t29529*t29529) \
                   *2.0+ccab2*gamma_aa[index]*t29521*t29522*t29535*t29539*2.0+ccab3*gcab*t29521*t29530*t29543*t29526* \
                   t29536*3.0+ccab3*gamma_aa[index]*gcab*t29521*t29530*t29526*t29536*(t29521*t29522*(3.0/2.0)+gamma_aa[index]* \
                   gcab*t29521*t29530*(3.0/2.0))-ccab3*gamma_aa[index]*gcab*t29521*t29530*1/(t29534*t29534*t29534)*(t29543* \
                   t29543)*t29526*2.0)*-4.0-rho_a[index]*(t29563+t29546*t29549*(t29562-t29563))*((ccaa2*t29522*t29564* \
                   2.0)/t29570-ccaa1*t29522*t29564*1/(t29566*t29566)*2.0-ccaa2*t29526*(t29564*t29564)*t29567*t29579*2.0+ \
                   (ccaa3*gamma_aa[index]*gcaa*t29530*t29564*6.0)/t29574+ccaa1*gamma_aa[index]*gcaa*t29530*t29564*1/(t29566* \
                   t29566*t29566)*2.0+ccaa2*t29522*1/(t29570*t29570*t29570)*t29526*t29564*(t29575*t29575)*2.0-ccaa2*gamma_aa[index]* \
                   t29522*t29564*t29575*t29579*4.0-ccaa3*gcaa*t29530*t29526*t29564*t29583*t29576*6.0-ccaa3*gamma_aa[index]* \
                   gcaa*t29530*t29526*t29564*t29576*(t29522*t29564*6.0+gamma_aa[index]*gcaa*t29530*t29564*6.0)+ccaa3* \
                   gamma_aa[index]*gcaa*t29530*t29526*t29564*1/(t29574*t29574*t29574)*(t29583*t29583)*2.0)*2.0+c0*pow(rho_a[index],4.0/ \
                   3.0)*(X-1.0)*((t29587/t29589+t29590*t29587*1/(t29589*t29589*t29589*t29589*t29589)-t29587*t29588*1/ \
                   (t29589*t29589*t29589)*2.0)*(cxnl1*t29610*t29522*t29591*2.0-cxnl2*t29611*t29522*t29591*2.0+cxnl2*t29605* \
                   t29614*t29526*t29567*2.0-cxnl2*t29522*t29526*t29591*t29618*t29619*2.0-cxnl1*gamma_aa[index]*gx*t29530* \
                   t29613*t29591*2.0-cxnl3*gamma_aa[index]*gx*t29530*t29612*t29591*6.0+cxnl2*gamma_aa[index]*t29601*t29522* \
                   t29605*t29591*4.0+cxnl3*gx*t29530*t29602*t29526*t29591*t29609*6.0-cxnl3*gamma_aa[index]*gx*t29530* \
                   t29620*t29621*t29526*t29591*2.0+cxnl3*gamma_aa[index]*gx*t29530*t29602*t29526*t29617*t29591)+cx1*t29610* \
                   t29522*t29591*2.0-cx2*t29611*t29522*t29591*2.0+cx2*t29605*t29614*t29526*t29567*2.0-cx2*t29522*t29526* \
                   t29591*t29618*t29619*2.0-cx1*gamma_aa[index]*gx*t29530*t29613*t29591*2.0-cx3*gamma_aa[index]*gx*t29530* \
                   t29612*t29591*6.0+cx2*gamma_aa[index]*t29601*t29522*t29605*t29591*4.0+cx3*gx*t29530*t29602*t29526* \
                   t29591*t29609*6.0-cx3*gamma_aa[index]*gx*t29530*t29620*t29621*t29526*t29591*2.0+cx3*gamma_aa[index]* \
                   gx*t29530*t29602*t29526*t29617*t29591)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t29623 = 1/pow(rho_a[index],8.0/3.0);
                double t29624 = gamma_aa[index]*gamma_aa[index];
                double t29625 = gx*gx;
                double t29626 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t29627 = 1/pow(rho_a[index],1.6E1/3.0);
                double t29628 = pow(rho_a[index],5.0/3.0);
                double t29629 = 1/tau_a[index];
                double t29630 = C_k*t29628*t29629;
                double t29631 = t29630+1.0;
                double t29632 = pow(rho_a[index],2.0/3.0);
                double t29633 = 1/(tau_a[index]*tau_a[index]);
                double t29634 = t29630-1.0;
                double t29635 = t29634*t29634;
                double t29636 = t29635*t29635;
                double t29637 = C_k*C_k;
                double t29638 = pow(rho_a[index],7.0/3.0);
                double t29639 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t29640 = 1/(t29631*t29631*t29631);
                double t29641 = 1/(t29631*t29631*t29631*t29631);
                double t29642 = 1/(t29631*t29631*t29631*t29631*t29631);
                double t29643 = 1/(t29631*t29631*t29631*t29631*t29631*t29631);
                double t29644 = 1/(t29631*t29631);
                double t29645 = 1/t29631;
                double t29646 = gamma_aa[index]*gx*t29623;
                double t29647 = t29646+1.0;
                double t29648 = 1/t29647;
                double t29649 = gamma_aa[index]*gx*t29623*3.0;
                double t29650 = gamma_aa[index]*gx*t29624*t29625*t29626;
                double t29651 = t29624*t29625*t29627*3.0;
                double t29652 = t29650+t29651+t29649+1.0;
                double t29653 = 1/t29652;
                double t29654 = gamma_aa[index]*gx*t29623*2.0;
                double t29655 = t29624*t29625*t29627;
                double t29656 = t29654+t29655+1.0;
                double t29657 = 1/t29656;
                double t29658 = 1/pow(rho_a[index],1.9E1/3.0);
                double t29659 = 1/pow(rho_a[index],1.1E1/3.0);
                double t29660 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t29661 = cxnl1*gamma_aa[index]*gx*t29623*t29648;
                double t29662 = cxnl3*gamma_aa[index]*gx*t29624*t29625*t29626*t29653;
                double t29663 = cxnl2*t29624*t29625*t29627*t29657;
                double t29664 = cxnl0+t29661+t29662+t29663;
                double t29665 = C_k*t29633*t29645*t29628;
                double t29666 = C_k*t29641*t29633*t29634*t29635*t29628*6.0;
                double t29667 = C_k*t29633*t29642*t29636*t29628*5.0;
                double t29668 = t29665+t29666+t29667-C_k*t29640*t29633*t29635*t29628*6.0-C_k*t29633*t29634*t29644* \
                   t29628-C_k*t29633*t29634*t29643*t29636*t29628*5.0;
                v_rho_a_tau_a_[index] = -(c0*pow(rho_a[index],4.0/3.0)*(t29664*(t29644*t29637*t29638*t29639*(1.0E1/ \
                   3.0)-C_k*t29632*t29633*t29645*(5.0/3.0)+C_k*t29640*t29632*t29633*t29635*1.0E1-C_k*t29632*t29633*t29642* \
                   t29636*(2.5E1/3.0)+C_k*t29632*t29633*t29634*t29644*(5.0/3.0)+t29640*t29634*t29637*t29638*t29639*(5.0E1/ \
                   3.0)-t29641*t29635*t29637*t29638*t29639*6.0E1+t29643*t29636*t29637*t29638*t29639*(2.5E2/3.0)+t29642* \
                   t29634*t29635*t29637*t29638*t29639*(2.0E1/3.0)-1/(t29631*t29631*t29631*t29631*t29631*t29631*t29631) \
                   *t29634*t29636*t29637*t29638*t29639*5.0E1-C_k*t29632*t29641*t29633*t29634*t29635*1.0E1+C_k*t29632* \
                   t29633*t29634*t29643*t29636*(2.5E1/3.0))+t29668*(cxnl1*gamma_aa[index]*gx*t29648*t29659*(8.0/3.0)+ \
                   cxnl2*t29624*t29625*t29657*t29658*(1.6E1/3.0)-cxnl1*t29624*t29625*1/(t29647*t29647)*t29658*(8.0/3.0) \
                   -cxnl2*t29624*t29625*t29627*1/(t29656*t29656)*(gamma_aa[index]*gx*t29659*(1.6E1/3.0)+t29624*t29625* \
                   t29658*(1.6E1/3.0))+cxnl3*gamma_aa[index]*gx*t29624*t29660*t29625*t29653*8.0-cxnl3*gamma_aa[index]* \
                   gx*t29624*t29625*1/(t29652*t29652)*t29626*(gamma_aa[index]*gx*t29659*8.0+t29624*t29625*t29658*1.6E1+ \
                   gamma_aa[index]*gx*t29624*t29660*t29625*8.0)))-c0*pow(rho_a[index],1.0/3.0)*t29664*t29668*(4.0/3.0) \
                   )*(X-1.0);
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t29670 = 1/pow(rho_a[index],8.0/3.0);
                double t29671 = gamma_aa[index]*gamma_aa[index];
                double t29672 = gx*gx;
                double t29673 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t29674 = 1/pow(rho_a[index],1.6E1/3.0);
                double t29675 = pow(rho_a[index],5.0/3.0);
                double t29676 = 1/tau_a[index];
                double t29677 = C_k*t29675*t29676;
                double t29678 = t29677+1.0;
                double t29679 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t29680 = t29677-1.0;
                double t29681 = t29680*t29680;
                double t29682 = t29681*t29681;
                double t29683 = C_k*C_k;
                double t29684 = pow(rho_a[index],1.0E1/3.0);
                double t29685 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t29686 = 1/(t29678*t29678*t29678);
                double t29687 = 1/(t29678*t29678*t29678*t29678);
                double t29688 = 1/(t29678*t29678*t29678*t29678*t29678);
                double t29689 = 1/(t29678*t29678*t29678*t29678*t29678*t29678);
                double t29690 = 1/(t29678*t29678);
                v_tau_a_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t29671*t29672*t29674)/ \
                   (gamma_aa[index]*gx*t29670*2.0+t29671*t29672*t29674+1.0)+(cxnl1*gamma_aa[index]*gx*t29670)/(gamma_aa[index]* \
                   gx*t29670+1.0)+(cxnl3*gamma_aa[index]*gx*t29671*t29672*t29673)/(gamma_aa[index]*gx*t29670*3.0+t29671* \
                   t29672*t29674*3.0+gamma_aa[index]*gx*t29671*t29672*t29673+1.0))*(t29690*t29683*t29684*t29685*2.0-(C_k* \
                   t29675*t29679*2.0)/t29678+C_k*t29680*t29690*t29675*t29679*2.0+C_k*t29681*t29675*t29686*t29679*1.2E1- \
                   C_k*t29682*t29675*t29679*t29688*1.0E1+t29680*t29683*t29684*t29685*t29686*1.0E1-t29681*t29683*t29684* \
                   t29685*t29687*3.6E1+t29682*t29683*t29684*t29685*t29689*5.0E1+t29680*t29681*t29683*t29684*t29685*t29688* \
                   4.0-t29680*t29682*t29683*t29684*t29685*1/(t29678*t29678*t29678*t29678*t29678*t29678*t29678)*3.0E1- \
                   C_k*t29680*t29681*t29675*t29687*t29679*1.2E1+C_k*t29680*t29682*t29675*t29679*t29689*1.0E1);
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    double t29692 = pow(rho_a[index],5.0/3.0);
                    double t29693 = 1/(tau_a[index]*tau_a[index]);
                    double t29694 = 1/tau_a[index];
                    double t29695 = C_k*t29692*t29694;
                    double t29696 = t29695-1.0;
                    double t29697 = t29695+1.0;
                    double t29698 = t29696*t29696;
                    double t29699 = t29698*t29698;
                    double t29700 = 1/pow(rho_a[index],8.0/3.0);
                    double t29701 = gx*gx;
                    double t29702 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t29703 = gamma_aa[index]*gamma_aa[index];
                    double t29704 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t29705 = gamma_aa[index]*gx*t29700;
                    double t29706 = t29705+1.0;
                    double t29707 = gamma_aa[index]*gx*t29700*3.0;
                    double t29708 = gamma_aa[index]*gx*t29701*t29703*t29704;
                    double t29709 = t29701*t29702*t29703*3.0;
                    double t29710 = t29707+t29708+t29709+1.0;
                    double t29711 = gamma_aa[index]*gx*t29700*2.0;
                    double t29712 = t29701*t29702*t29703;
                    double t29713 = t29711+t29712+1.0;
                    v_gamma_aa_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t29700)/t29706+(cxnl2* \
                       gamma_aa[index]*t29701*t29702*2.0)/t29713-cxnl1*gamma_aa[index]*t29701*t29702*1/(t29706*t29706)-cxnl2* \
                       t29701*t29702*t29703*1/(t29713*t29713)*(gx*t29700*2.0+gamma_aa[index]*t29701*t29702*2.0)+(cxnl3*gx* \
                       t29701*t29703*t29704*3.0)/t29710-cxnl3*gamma_aa[index]*gx*t29701*1/(t29710*t29710)*t29703*t29704*(gx* \
                       t29700*3.0+gamma_aa[index]*t29701*t29702*6.0+gx*t29701*t29703*t29704*3.0))*((C_k*t29692*t29693)/t29697- \
                       C_k*t29692*t29693*t29696*1/(t29697*t29697)-C_k*t29692*t29693*1/(t29697*t29697*t29697)*t29698*6.0+C_k* \
                       t29692*t29693*1/(t29697*t29697*t29697*t29697*t29697)*t29699*5.0+C_k*t29692*t29693*t29696*1/(t29697* \
                       t29697*t29697*t29697)*t29698*6.0-C_k*t29692*t29693*t29696*1/(t29697*t29697*t29697*t29697*t29697*t29697) \
                       *t29699*5.0);
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void TauHCTH0_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double c0 = params_[2].second;
    double two_13 = params_[3].second;
    double d2fz0 = params_[4].second;
    double c = params_[5].second;
    double Aa = params_[6].second;
    double a1a = params_[7].second;
    double b1a = params_[8].second;
    double b2a = params_[9].second;
    double b3a = params_[10].second;
    double b4a = params_[11].second;
    double c0p = params_[12].second;
    double a1p = params_[13].second;
    double b1p = params_[14].second;
    double b2p = params_[15].second;
    double b3p = params_[16].second;
    double b4p = params_[17].second;
    double c0f = params_[18].second;
    double a1f = params_[19].second;
    double b1f = params_[20].second;
    double b2f = params_[21].second;
    double b3f = params_[22].second;
    double b4f = params_[23].second;
    double gcab = params_[24].second;
    double gcaa = params_[25].second;
    double gx = params_[26].second;
    double ccab0 = params_[27].second;
    double ccab1 = params_[28].second;
    double ccab2 = params_[29].second;
    double ccab3 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cxnl0 = params_[39].second;
    double cxnl1 = params_[40].second;
    double cxnl2 = params_[41].second;
    double cxnl3 = params_[42].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t23511 = pow(rho_a[index],5.0/3.0);
            double t23512 = 1/tau_a[index];
            double t23513 = C_k*t23511*t23512;
            double t23514 = t23513-1.0;
            double t23515 = t23514*t23514;
            double t23516 = t23513+1.0;
            double t23517 = t23515*t23515;
            double t23518 = 1/pow(rho_a[index],8.0/3.0);
            double t23519 = gamma_aa[index]*gamma_aa[index];
            double t23520 = gx*gx;
            double t23521 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t23522 = 1/pow(rho_a[index],1.6E1/3.0);
            double t23523 = gamma_aa[index]*gx*t23518;
            double t23524 = t23523+1.0;
            double t23525 = 1/t23524;
            double t23526 = gamma_aa[index]*gx*t23518*3.0;
            double t23527 = gamma_aa[index]*gx*t23520*t23521*t23519;
            double t23528 = t23520*t23522*t23519*3.0;
            double t23529 = t23526+t23527+t23528+1.0;
            double t23530 = 1/t23529;
            double t23531 = gamma_aa[index]*gx*t23518*2.0;
            double t23532 = t23520*t23522*t23519;
            double t23533 = t23531+t23532+1.0;
            double t23534 = 1/t23533;
            double t23535 = pow(rho_b[index],5.0/3.0);
            double t23536 = 1/tau_b[index];
            double t23537 = C_k*t23535*t23536;
            double t23538 = t23537-1.0;
            double t23539 = t23538*t23538;
            double t23540 = t23537+1.0;
            double t23541 = t23539*t23539;
            double t23542 = 1/pow(rho_b[index],8.0/3.0);
            double t23543 = gamma_bb[index]*gamma_bb[index];
            double t23544 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t23545 = 1/pow(rho_b[index],1.6E1/3.0);
            double t23546 = gamma_bb[index]*gx*t23542;
            double t23547 = t23546+1.0;
            double t23548 = 1/t23547;
            double t23549 = gamma_bb[index]*gx*t23542*3.0;
            double t23550 = gamma_bb[index]*gx*t23520*t23543*t23544;
            double t23551 = t23520*t23543*t23545*3.0;
            double t23552 = t23550+t23551+t23549+1.0;
            double t23553 = 1/t23552;
            double t23554 = gamma_bb[index]*gx*t23542*2.0;
            double t23555 = t23520*t23543*t23545;
            double t23556 = t23554+t23555+1.0;
            double t23557 = 1/t23556;
            double t23558 = 1/pow(rho_a[index],1.0/3.0);
            double t23559 = c*t23558;
            double t23560 = sqrt(t23559);
            double t23561 = pow(t23559,3.0/2.0);
            double t23562 = c*c;
            double t23563 = 1/pow(rho_a[index],2.0/3.0);
            double t23564 = 1/c0p;
            double t23565 = b1p*t23560;
            double t23566 = b3p*t23561;
            double t23567 = b4p*t23562*t23563;
            double t23568 = b2p*c*t23558;
            double t23569 = t23565+t23566+t23567+t23568;
            double t23570 = 1/t23569;
            double t23571 = t23570*t23564*(1.0/2.0);
            double t23572 = t23571+1.0;
            double t23573 = log(t23572);
            double t23574 = a1p*c*t23558;
            double t23575 = t23574+1.0;
            double t23576 = pow(2.0,1.0/3.0);
            double t23577 = t23576*2.0;
            double t23578 = t23577-2.0;
            double t23579 = two_13*2.0;
            double t23580 = t23579-2.0;
            double t23581 = 1/t23580;
            double t23582 = 1/c0f;
            double t23583 = 1/pow(rho_b[index],1.0/3.0);
            double t23584 = c*t23583;
            double t23585 = sqrt(t23584);
            double t23586 = pow(t23584,3.0/2.0);
            double t23587 = 1/pow(rho_b[index],2.0/3.0);
            double t23588 = b1p*t23585;
            double t23589 = b3p*t23586;
            double t23590 = b4p*t23562*t23587;
            double t23591 = b2p*c*t23583;
            double t23592 = t23590+t23591+t23588+t23589;
            double t23593 = 1/t23592;
            double t23594 = t23564*t23593*(1.0/2.0);
            double t23595 = t23594+1.0;
            double t23596 = log(t23595);
            double t23597 = a1p*c*t23583;
            double t23598 = t23597+1.0;
            double t23599 = c0p*t23596*t23598*2.0;
            double t23600 = rho_a[index]+rho_b[index];
            double t23601 = 1/pow(t23600,1.0/3.0);
            double t23602 = c*t23601;
            double t23603 = sqrt(t23602);
            double t23604 = pow(t23602,3.0/2.0);
            double t23605 = 1/pow(t23600,2.0/3.0);
            double t23606 = b1p*t23603;
            double t23607 = b3p*t23604;
            double t23608 = b4p*t23605*t23562;
            double t23609 = b2p*c*t23601;
            double t23610 = t23606+t23607+t23608+t23609;
            double t23611 = 1/t23610;
            double t23612 = t23611*t23564*(1.0/2.0);
            double t23613 = t23612+1.0;
            double t23614 = log(t23613);
            double t23615 = a1p*c*t23601;
            double t23616 = t23615+1.0;
            double t23617 = c0p*t23614*t23616*2.0;
            double t23618 = rho_a[index]-rho_b[index];
            double t23619 = t23618*t23618;
            double t23620 = 1/t23600;
            double t23621 = t23620*t23618;
            double t23622 = 1/(t23600*t23600*t23600*t23600);
            double t23623 = t23619*t23619;
            double t23624 = t23621+1.0;
            double t23625 = pow(t23624,4.0/3.0);
            double t23626 = -t23621+1.0;
            double t23627 = pow(t23626,4.0/3.0);
            double t23628 = t23625+t23627-2.0;
            double t23631 = gamma_aa[index]*t23518*(1.0/2.0);
            double t23632 = gamma_bb[index]*t23542*(1.0/2.0);
            double t23629 = t23631+t23632;
            double t23630 = gcab*gcab;
            double t23633 = t23629*t23629;
            double t23634 = c0p*t23573*t23575*2.0;
            double t23635 = b1f*t23560;
            double t23636 = b3f*t23561;
            double t23637 = b4f*t23562*t23563;
            double t23638 = b2f*c*t23558;
            double t23639 = t23635+t23636+t23637+t23638;
            double t23640 = 1/t23639;
            double t23641 = t23640*t23582*(1.0/2.0);
            double t23642 = t23641+1.0;
            double t23643 = log(t23642);
            double t23644 = a1f*c*t23558;
            double t23645 = t23644+1.0;
            double t23646 = t23634-c0f*t23643*t23645*2.0;
            double t23647 = t23634-t23581*t23646*t23578;
            double t23648 = gcaa*gcaa;
            double t23649 = b1f*t23585;
            double t23650 = b3f*t23586;
            double t23651 = b4f*t23562*t23587;
            double t23652 = b2f*c*t23583;
            double t23653 = t23650+t23651+t23652+t23649;
            double t23654 = 1/t23653;
            double t23655 = t23582*t23654*(1.0/2.0);
            double t23656 = t23655+1.0;
            double t23657 = log(t23656);
            double t23658 = a1f*c*t23583;
            double t23659 = t23658+1.0;
            double t23660 = t23599-c0f*t23657*t23659*2.0;
            double t23661 = t23599-t23660*t23581*t23578;
            functional_[index] = (rho_b[index]*t23661+rho_a[index]*t23647-t23600*(t23617-t23622*t23623*t23581* \
               t23628*(t23617-c0f*log((t23582*(1.0/2.0))/(b1f*t23603+b3f*t23604+b2f*c*t23601+b4f*t23605*t23562)+1.0) \
               *(a1f*c*t23601+1.0)*2.0)+(Aa*t23581*t23628*log((1.0/2.0)/(Aa*(b1a*t23603+b3a*t23604+b2a*c*t23601+b4a* \
               t23605*t23562))+1.0)*(t23622*t23623-1.0)*(a1a*c*t23601+1.0)*2.0)/d2fz0))*(ccab0+(ccab1*gcab*t23629) \
               /(gcab*t23629+1.0)+(ccab2*t23630*t23633)/(gcab*t23629*2.0+t23630*t23633+1.0)+(ccab3*gcab*t23630*t23633* \
               t23629)/(gcab*t23629*3.0+t23630*t23633*3.0+gcab*t23630*t23633*t23629+1.0))-(c0*pow(rho_a[index],4.0/ \
               3.0)*(cx0+(t23514/t23516-t23514*t23515*1/(t23516*t23516*t23516)*2.0+t23514*1/(t23516*t23516*t23516* \
               t23516*t23516)*t23517)*(cxnl0+cxnl1*gamma_aa[index]*gx*t23525*t23518+cxnl2*t23520*t23522*t23534*t23519+ \
               cxnl3*gamma_aa[index]*gx*t23520*t23521*t23530*t23519)+cx1*gamma_aa[index]*gx*t23525*t23518+cx2*t23520* \
               t23522*t23534*t23519+cx3*gamma_aa[index]*gx*t23520*t23521*t23530*t23519)+c0*pow(rho_b[index],4.0/3.0) \
               *(cx0+(t23538/t23540+1/(t23540*t23540*t23540*t23540*t23540)*t23541*t23538-1/(t23540*t23540*t23540) \
               *t23538*t23539*2.0)*(cxnl0+cxnl1*gamma_bb[index]*gx*t23542*t23548+cxnl2*t23520*t23543*t23545*t23557+ \
               cxnl3*gamma_bb[index]*gx*t23520*t23543*t23544*t23553)+cx1*gamma_bb[index]*gx*t23542*t23548+cx2*t23520* \
               t23543*t23545*t23557+cx3*gamma_bb[index]*gx*t23520*t23543*t23544*t23553))*(X-1.0)-rho_a[index]*t23647* \
               (ccaa0+(ccaa2*t23522*t23519*t23648)/(gamma_aa[index]*gcaa*t23518*2.0+t23522*t23519*t23648+1.0)+(ccaa1* \
               gamma_aa[index]*gcaa*t23518)/(gamma_aa[index]*gcaa*t23518+1.0)+(ccaa3*gamma_aa[index]*gcaa*t23521* \
               t23519*t23648)/(gamma_aa[index]*gcaa*t23518*3.0+t23522*t23519*t23648*3.0+gamma_aa[index]*gcaa*t23521* \
               t23519*t23648+1.0))-rho_b[index]*t23661*(ccaa0+(ccaa2*t23543*t23545*t23648)/(gamma_bb[index]*gcaa* \
               t23542*2.0+t23543*t23545*t23648+1.0)+(ccaa1*gamma_bb[index]*gcaa*t23542)/(gamma_bb[index]*gcaa*t23542+ \
               1.0)+(ccaa3*gamma_bb[index]*gcaa*t23543*t23544*t23648)/(gamma_bb[index]*gcaa*t23542*3.0+t23543*t23545* \
               t23648*3.0+gamma_bb[index]*gcaa*t23543*t23544*t23648+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t27839 = 1/pow(rho_a[index],1.0/3.0);
            double t27840 = c*t27839;
            double t27841 = sqrt(t27840);
            double t27842 = pow(t27840,3.0/2.0);
            double t27843 = c*c;
            double t27844 = 1/pow(rho_a[index],2.0/3.0);
            double t27845 = 1/c0p;
            double t27846 = b1p*t27841;
            double t27847 = b3p*t27842;
            double t27848 = b4p*t27843*t27844;
            double t27849 = b2p*c*t27839;
            double t27850 = t27846+t27847+t27848+t27849;
            double t27851 = 1/t27850;
            double t27852 = t27851*t27845*(1.0/2.0);
            double t27853 = t27852+1.0;
            double t27854 = log(t27853);
            double t27855 = a1p*c*t27839;
            double t27856 = t27855+1.0;
            double t27857 = 1/pow(rho_a[index],8.0/3.0);
            double t27858 = gamma_aa[index]*gamma_aa[index];
            double t27859 = gcaa*gcaa;
            double t27860 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t27861 = 1/pow(rho_a[index],1.6E1/3.0);
            double t27862 = pow(rho_a[index],5.0/3.0);
            double t27863 = 1/tau_a[index];
            double t27864 = C_k*t27862*t27863;
            double t27865 = t27864-1.0;
            double t27866 = t27865*t27865;
            double t27867 = t27864+1.0;
            double t27868 = t27866*t27866;
            double t27869 = gx*gx;
            double t27870 = gamma_aa[index]*gx*t27857;
            double t27871 = t27870+1.0;
            double t27872 = 1/t27871;
            double t27873 = gamma_aa[index]*gx*t27857*3.0;
            double t27874 = gamma_aa[index]*gx*t27860*t27858*t27869;
            double t27875 = t27861*t27858*t27869*3.0;
            double t27876 = t27873+t27874+t27875+1.0;
            double t27877 = 1/t27876;
            double t27878 = gamma_aa[index]*gx*t27857*2.0;
            double t27879 = t27861*t27858*t27869;
            double t27880 = t27878+t27879+1.0;
            double t27881 = 1/t27880;
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t27841+ \
               b3f*t27842+b2f*c*t27839+b4f*t27843*t27844))+1.0)*(a1f*c*t27839+1.0)*2.0-c0p*t27854*t27856*2.0))/(two_13* \
               2.0-2.0)+c0p*t27854*t27856*2.0)*(ccaa0+(ccaa2*t27861*t27858*t27859)/(gamma_aa[index]*gcaa*t27857*2.0+ \
               t27861*t27858*t27859+1.0)+(ccaa1*gamma_aa[index]*gcaa*t27857)/(gamma_aa[index]*gcaa*t27857+1.0)+(ccaa3* \
               gamma_aa[index]*gcaa*t27860*t27858*t27859)/(gamma_aa[index]*gcaa*t27857*3.0+t27861*t27858*t27859*3.0+ \
               gamma_aa[index]*gcaa*t27860*t27858*t27859+1.0))-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cx0+(t27865/ \
               t27867-t27865*t27866*1/(t27867*t27867*t27867)*2.0+t27865*1/(t27867*t27867*t27867*t27867*t27867)*t27868) \
               *(cxnl0+cxnl1*gamma_aa[index]*gx*t27872*t27857+cxnl2*t27861*t27881*t27858*t27869+cxnl3*gamma_aa[index]* \
               gx*t27860*t27858*t27877*t27869)+cx1*gamma_aa[index]*gx*t27872*t27857+cx2*t27861*t27881*t27858*t27869+ \
               cx3*gamma_aa[index]*gx*t27860*t27858*t27877*t27869);
        } else if (rho_b[index] > cutoff_) {
            double t27068 = 1/pow(rho_b[index],1.0/3.0);
            double t27069 = c*t27068;
            double t27070 = sqrt(t27069);
            double t27071 = pow(t27069,3.0/2.0);
            double t27072 = c*c;
            double t27073 = 1/pow(rho_b[index],2.0/3.0);
            double t27074 = 1/c0p;
            double t27075 = b1p*t27070;
            double t27076 = b3p*t27071;
            double t27077 = b4p*t27072*t27073;
            double t27078 = b2p*c*t27068;
            double t27079 = t27075+t27076+t27077+t27078;
            double t27080 = 1/t27079;
            double t27081 = t27080*t27074*(1.0/2.0);
            double t27082 = t27081+1.0;
            double t27083 = log(t27082);
            double t27084 = a1p*c*t27068;
            double t27085 = t27084+1.0;
            double t27086 = 1/pow(rho_b[index],8.0/3.0);
            double t27087 = gamma_bb[index]*gamma_bb[index];
            double t27088 = gcaa*gcaa;
            double t27089 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t27090 = 1/pow(rho_b[index],1.6E1/3.0);
            double t27091 = pow(rho_b[index],5.0/3.0);
            double t27092 = 1/tau_b[index];
            double t27093 = C_k*t27091*t27092;
            double t27094 = t27093-1.0;
            double t27095 = t27094*t27094;
            double t27096 = t27093+1.0;
            double t27097 = t27095*t27095;
            double t27098 = gx*gx;
            double t27099 = gamma_bb[index]*gx*t27086;
            double t27100 = t27099+1.0;
            double t27101 = 1/t27100;
            double t27102 = gamma_bb[index]*gx*t27086*3.0;
            double t27103 = gamma_bb[index]*gx*t27087*t27089*t27098;
            double t27104 = t27090*t27087*t27098*3.0;
            double t27105 = t27102+t27103+t27104+1.0;
            double t27106 = 1/t27105;
            double t27107 = gamma_bb[index]*gx*t27086*2.0;
            double t27108 = t27090*t27087*t27098;
            double t27109 = t27107+t27108+1.0;
            double t27110 = 1/t27109;
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t27070+ \
               b3f*t27071+b2f*c*t27068+b4f*t27072*t27073))+1.0)*(a1f*c*t27068+1.0)*2.0-c0p*t27083*t27085*2.0))/(two_13* \
               2.0-2.0)+c0p*t27083*t27085*2.0)*(ccaa0+(ccaa2*t27090*t27087*t27088)/(gamma_bb[index]*gcaa*t27086*2.0+ \
               t27090*t27087*t27088+1.0)+(ccaa1*gamma_bb[index]*gcaa*t27086)/(gamma_bb[index]*gcaa*t27086+1.0)+(ccaa3* \
               gamma_bb[index]*gcaa*t27087*t27088*t27089)/(gamma_bb[index]*gcaa*t27086*3.0+t27090*t27087*t27088*3.0+ \
               gamma_bb[index]*gcaa*t27087*t27088*t27089+1.0))-c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cx0+(t27094/ \
               t27096-t27094*t27095*1/(t27096*t27096*t27096)*2.0+t27094*1/(t27096*t27096*t27096*t27096*t27096)*t27097) \
               *(cxnl0+cxnl1*gamma_bb[index]*gx*t27101*t27086+cxnl2*t27110*t27090*t27087*t27098+cxnl3*gamma_bb[index]* \
               gx*t27106*t27087*t27089*t27098)+cx1*gamma_bb[index]*gx*t27101*t27086+cx2*t27110*t27090*t27087*t27098+ \
               cx3*gamma_bb[index]*gx*t27106*t27087*t27089*t27098);
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t23663 = 1/pow(rho_a[index],1.0/3.0);
            double t23664 = c*t23663;
            double t23665 = sqrt(t23664);
            double t23666 = pow(t23664,3.0/2.0);
            double t23667 = c*c;
            double t23668 = 1/pow(rho_a[index],2.0/3.0);
            double t23669 = 1/c0p;
            double t23670 = b1p*t23665;
            double t23671 = b3p*t23666;
            double t23672 = b4p*t23667*t23668;
            double t23673 = b2p*c*t23663;
            double t23674 = t23670+t23671+t23672+t23673;
            double t23675 = 1/t23674;
            double t23676 = t23675*t23669*(1.0/2.0);
            double t23677 = t23676+1.0;
            double t23678 = log(t23677);
            double t23679 = a1p*c*t23663;
            double t23680 = t23679+1.0;
            double t23681 = pow(2.0,1.0/3.0);
            double t23682 = t23681*2.0;
            double t23683 = t23682-2.0;
            double t23684 = two_13*2.0;
            double t23685 = t23684-2.0;
            double t23686 = 1/t23685;
            double t23687 = 1/c0f;
            double t23688 = 1/pow(rho_b[index],1.0/3.0);
            double t23689 = c*t23688;
            double t23690 = sqrt(t23689);
            double t23691 = pow(t23689,3.0/2.0);
            double t23692 = 1/pow(rho_b[index],2.0/3.0);
            double t23693 = b1p*t23690;
            double t23694 = b3p*t23691;
            double t23695 = b4p*t23692*t23667;
            double t23696 = b2p*c*t23688;
            double t23697 = t23693+t23694+t23695+t23696;
            double t23698 = 1/t23697;
            double t23699 = t23669*t23698*(1.0/2.0);
            double t23700 = t23699+1.0;
            double t23701 = log(t23700);
            double t23702 = a1p*c*t23688;
            double t23703 = t23702+1.0;
            double t23704 = c0p*t23701*t23703*2.0;
            double t23705 = rho_a[index]+rho_b[index];
            double t23706 = 1/pow(t23705,1.0/3.0);
            double t23707 = c*t23706;
            double t23708 = sqrt(t23707);
            double t23709 = pow(t23707,3.0/2.0);
            double t23710 = 1/pow(t23705,2.0/3.0);
            double t23711 = b1p*t23708;
            double t23712 = b3p*t23709;
            double t23713 = b4p*t23710*t23667;
            double t23714 = b2p*c*t23706;
            double t23715 = t23711+t23712+t23713+t23714;
            double t23716 = 1/t23715;
            double t23717 = t23716*t23669*(1.0/2.0);
            double t23718 = t23717+1.0;
            double t23719 = log(t23718);
            double t23720 = a1p*c*t23706;
            double t23721 = t23720+1.0;
            double t23722 = c0p*t23721*t23719*2.0;
            double t23723 = rho_a[index]-rho_b[index];
            double t23724 = t23723*t23723;
            double t23725 = 1/t23705;
            double t23726 = t23723*t23725;
            double t23727 = 1/(t23705*t23705*t23705*t23705);
            double t23728 = t23724*t23724;
            double t23729 = t23726+1.0;
            double t23730 = pow(t23729,4.0/3.0);
            double t23731 = -t23726+1.0;
            double t23732 = pow(t23731,4.0/3.0);
            double t23733 = t23730+t23732-2.0;
            double t23734 = gcab*gcab;
            double t23738 = 1/pow(rho_a[index],8.0/3.0);
            double t23739 = gamma_aa[index]*t23738*(1.0/2.0);
            double t23740 = 1/pow(rho_b[index],8.0/3.0);
            double t23741 = gamma_bb[index]*t23740*(1.0/2.0);
            double t23735 = t23741+t23739;
            double t23736 = t23735*t23735;
            double t23737 = 1/pow(rho_a[index],1.1E1/3.0);
            double t23742 = gcab*t23735;
            double t23743 = t23742+1.0;
            double t23744 = t23734*t23736;
            double t23745 = gcab*t23735*2.0;
            double t23746 = t23744+t23745+1.0;
            double t23747 = t23734*t23736*3.0;
            double t23748 = gcab*t23734*t23735*t23736;
            double t23749 = gcab*t23735*3.0;
            double t23750 = t23747+t23748+t23749+1.0;
            double t23751 = c0p*t23680*t23678*2.0;
            double t23752 = 1/t23746;
            double t23753 = 1/t23750;
            double t23754 = 1/t23743;
            double t23755 = 1/pow(t23705,4.0/3.0);
            double t23756 = b1f*t23708;
            double t23757 = b3f*t23709;
            double t23758 = b4f*t23710*t23667;
            double t23759 = b2f*c*t23706;
            double t23760 = t23756+t23757+t23758+t23759;
            double t23761 = 1/t23760;
            double t23762 = t23761*t23687*(1.0/2.0);
            double t23763 = t23762+1.0;
            double t23764 = log(t23763);
            double t23765 = a1f*c*t23706;
            double t23766 = t23765+1.0;
            double t23768 = c0f*t23764*t23766*2.0;
            double t23767 = t23722-t23768;
            double t23769 = 1/(t23705*t23705);
            double t23796 = t23723*t23769;
            double t23770 = t23725-t23796;
            double t23771 = 1/pow(t23705,5.0/3.0);
            double t23772 = 1/sqrt(t23707);
            double t23773 = 1/t23718;
            double t23774 = 1/(t23715*t23715);
            double t23775 = b4p*t23771*t23667*(2.0/3.0);
            double t23776 = b2p*c*t23755*(1.0/3.0);
            double t23777 = b1p*c*t23772*t23755*(1.0/6.0);
            double t23778 = b3p*c*t23708*t23755*(1.0/2.0);
            double t23779 = t23775+t23776+t23777+t23778;
            double t23780 = t23721*t23773*t23774*t23779;
            double t23781 = 1/d2fz0;
            double t23782 = 1/Aa;
            double t23783 = b1a*t23708;
            double t23784 = b3a*t23709;
            double t23785 = b4a*t23710*t23667;
            double t23786 = b2a*c*t23706;
            double t23787 = t23783+t23784+t23785+t23786;
            double t23788 = 1/t23787;
            double t23789 = t23782*t23788*(1.0/2.0);
            double t23790 = t23789+1.0;
            double t23791 = log(t23790);
            double t23792 = a1a*c*t23706;
            double t23793 = t23792+1.0;
            double t23794 = 1/(t23705*t23705*t23705*t23705*t23705);
            double t23795 = pow(t23729,1.0/3.0);
            double t23797 = t23770*t23795*(4.0/3.0);
            double t23798 = pow(t23731,1.0/3.0);
            double t23799 = t23797-t23770*t23798*(4.0/3.0);
            double t23800 = t23727*t23728;
            double t23801 = t23800-1.0;
            double t23802 = a1f*c*t23663;
            double t23803 = t23802+1.0;
            double t23804 = b1f*t23665;
            double t23805 = b3f*t23666;
            double t23806 = b4f*t23667*t23668;
            double t23807 = b2f*c*t23663;
            double t23808 = t23804+t23805+t23806+t23807;
            double t23809 = 1/t23808;
            double t23810 = t23809*t23687*(1.0/2.0);
            double t23811 = t23810+1.0;
            double t23812 = 1/pow(rho_a[index],4.0/3.0);
            double t23813 = 1/pow(rho_a[index],5.0/3.0);
            double t23814 = 1/sqrt(t23664);
            double t23815 = log(t23811);
            double t23816 = 1/t23677;
            double t23817 = 1/(t23674*t23674);
            double t23818 = b4p*t23813*t23667*(2.0/3.0);
            double t23819 = b2p*c*t23812*(1.0/3.0);
            double t23820 = b1p*c*t23812*t23814*(1.0/6.0);
            double t23821 = b3p*c*t23812*t23665*(1.0/2.0);
            double t23822 = t23820+t23821+t23818+t23819;
            double t23823 = t23822*t23680*t23816*t23817;
            double t23824 = Aa*t23801*t23733*t23781*t23791*t23793*t23686*2.0;
            double t23826 = c0f*t23803*t23815*2.0;
            double t23825 = t23751-t23826;
            double t23827 = t23825*t23683*t23686;
            double t23828 = gamma_aa[index]*gamma_aa[index];
            double t23829 = gcaa*gcaa;
            double t23830 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t23831 = 1/pow(rho_a[index],1.6E1/3.0);
            double t23832 = pow(rho_a[index],5.0/3.0);
            double t23833 = 1/tau_a[index];
            double t23834 = C_k*t23832*t23833;
            double t23835 = t23834-1.0;
            double t23836 = t23835*t23835;
            double t23837 = t23834+1.0;
            double t23838 = t23836*t23836;
            double t23839 = gx*gx;
            double t23840 = gamma_aa[index]*gx*t23738;
            double t23841 = t23840+1.0;
            double t23842 = 1/t23841;
            double t23843 = gamma_aa[index]*gx*t23738*3.0;
            double t23844 = gamma_aa[index]*gx*t23830*t23828*t23839;
            double t23845 = t23831*t23828*t23839*3.0;
            double t23846 = t23843+t23844+t23845+1.0;
            double t23847 = 1/t23846;
            double t23848 = gamma_aa[index]*gx*t23738*2.0;
            double t23849 = t23831*t23828*t23839;
            double t23850 = t23848+t23849+1.0;
            double t23851 = 1/t23850;
            double t23852 = 1/t23837;
            double t23853 = t23852*t23835;
            double t23854 = 1/(t23837*t23837*t23837);
            double t23855 = 1/(t23837*t23837*t23837*t23837*t23837);
            double t23856 = t23835*t23855*t23838;
            double t23857 = t23853+t23856-t23835*t23836*t23854*2.0;
            double t23858 = 1/pow(rho_a[index],1.9E1/3.0);
            double t23859 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t23860 = cxnl1*gamma_aa[index]*gx*t23842*t23738;
            double t23861 = cxnl3*gamma_aa[index]*gx*t23830*t23828*t23847*t23839;
            double t23862 = cxnl2*t23831*t23851*t23828*t23839;
            double t23863 = cxnl0+t23860+t23861+t23862;
            double t23864 = pow(rho_a[index],2.0/3.0);
            double t23865 = 1/(t23841*t23841);
            double t23866 = gamma_aa[index]*gx*t23737*8.0;
            double t23867 = gamma_aa[index]*gx*t23828*t23839*t23859*8.0;
            double t23868 = t23828*t23839*t23858*1.6E1;
            double t23869 = t23866+t23867+t23868;
            double t23870 = 1/(t23846*t23846);
            double t23871 = gamma_aa[index]*gx*t23737*(1.6E1/3.0);
            double t23872 = t23828*t23839*t23858*(1.6E1/3.0);
            double t23873 = t23871+t23872;
            double t23874 = 1/(t23850*t23850);
            double t23875 = t23751-t23827;
            double t23876 = gamma_aa[index]*gcaa*t23738;
            double t23877 = t23876+1.0;
            double t23878 = 1/t23877;
            double t23879 = gamma_aa[index]*gcaa*t23738*3.0;
            double t23880 = gamma_aa[index]*gcaa*t23830*t23828*t23829;
            double t23881 = t23831*t23828*t23829*3.0;
            double t23882 = t23880+t23881+t23879+1.0;
            double t23883 = 1/t23882;
            double t23884 = gamma_aa[index]*gcaa*t23738*2.0;
            double t23885 = t23831*t23828*t23829;
            double t23886 = t23884+t23885+1.0;
            double t23887 = 1/t23886;
            double t23888 = 1/t23811;
            double t23889 = 1/(t23808*t23808);
            double t23890 = b4f*t23813*t23667*(2.0/3.0);
            double t23891 = b2f*c*t23812*(1.0/3.0);
            double t23892 = b1f*c*t23812*t23814*(1.0/6.0);
            double t23893 = b3f*c*t23812*t23665*(1.0/2.0);
            double t23894 = t23890+t23891+t23892+t23893;
            double t23895 = a1f*c*c0f*t23812*t23815*(2.0/3.0);
            double t23896 = a1p*c*c0p*t23812*t23678*(2.0/3.0);
            double t23897 = ccaa1*gamma_aa[index]*gcaa*t23738*t23878;
            double t23898 = ccaa3*gamma_aa[index]*gcaa*t23830*t23828*t23829*t23883;
            double t23899 = ccaa2*t23831*t23828*t23829*t23887;
            double t23900 = ccaa0+t23897+t23898+t23899;
            v_rho_a_[index] = -t23900*t23875-(rho_a[index]*(t23751-t23825*t23683*t23686)+rho_b[index]*(t23704- \
               t23683*t23686*(t23704-c0f*log((t23687*(1.0/2.0))/(b1f*t23690+b3f*t23691+b2f*c*t23688+b4f*t23692*t23667) \
               +1.0)*(a1f*c*t23688+1.0)*2.0))-t23705*(t23722+t23824-t23733*t23727*t23728*t23686*t23767))*(ccab1*gamma_aa[index]* \
               gcab*t23754*t23737*(4.0/3.0)-ccab2*t23734*t23736*1/(t23746*t23746)*(gamma_aa[index]*gcab*t23737*(8.0/ \
               3.0)+gamma_aa[index]*t23734*t23735*t23737*(8.0/3.0))-ccab1*gamma_aa[index]*t23734*1/(t23743*t23743) \
               *t23735*t23737*(4.0/3.0)+ccab2*gamma_aa[index]*t23734*t23752*t23735*t23737*(8.0/3.0)-ccab3*gcab*1/ \
               (t23750*t23750)*t23734*t23735*t23736*(gamma_aa[index]*gcab*t23737*4.0+gamma_aa[index]*t23734*t23735* \
               t23737*8.0+gamma_aa[index]*gcab*t23734*t23736*t23737*4.0)+ccab3*gamma_aa[index]*gcab*t23734*t23753* \
               t23736*t23737*4.0)-(ccab0+ccab1*gcab*t23735*t23754+ccab2*t23734*t23752*t23736+ccab3*gcab*t23734*t23735* \
               t23753*t23736)*(t23722-t23751+t23824+t23827+rho_a[index]*(-t23823+t23896+t23683*t23686*(t23823+t23895- \
               t23803*t23894*t23888*t23889-a1p*c*c0p*t23812*t23678*(2.0/3.0)))-t23705*(-t23780+t23733*t23727*t23728* \
               t23686*(t23780-(1/(t23760*t23760)*t23766*(b2f*c*t23755*(1.0/3.0)+b4f*t23771*t23667*(2.0/3.0)+b1f*c* \
               t23772*t23755*(1.0/6.0)+b3f*c*t23708*t23755*(1.0/2.0)))/t23763+a1f*c*c0f*t23755*t23764*(2.0/3.0)-a1p* \
               c*c0p*t23719*t23755*(2.0/3.0))+a1p*c*c0p*t23719*t23755*(2.0/3.0)-t23733*t23728*t23686*t23767*t23794* \
               4.0+t23727*t23728*t23686*t23767*t23799+t23723*t23724*t23733*t23727*t23686*t23767*4.0+Aa*t23733*t23781* \
               t23791*t23793*t23686*(t23728*t23794*4.0-t23723*t23724*t23727*4.0)*2.0-Aa*t23801*t23781*t23791*t23793* \
               t23686*t23799*2.0-(t23801*t23733*t23781*t23793*t23686*1/(t23787*t23787)*(b2a*c*t23755*(1.0/3.0)+b4a* \
               t23771*t23667*(2.0/3.0)+b1a*c*t23772*t23755*(1.0/6.0)+b3a*c*t23708*t23755*(1.0/2.0)))/t23790+Aa*a1a* \
               c*t23801*t23733*t23781*t23755*t23791*t23686*(2.0/3.0))-t23733*t23727*t23728*t23686*t23767)-(X-1.0) \
               *(c0*pow(rho_a[index],1.0/3.0)*(cx0+t23863*t23857+cx1*gamma_aa[index]*gx*t23842*t23738+cx2*t23831* \
               t23851*t23828*t23839+cx3*gamma_aa[index]*gx*t23830*t23828*t23847*t23839)*(4.0/3.0)-c0*pow(rho_a[index],4.0/ \
               3.0)*(t23857*(cxnl1*gamma_aa[index]*gx*t23842*t23737*(8.0/3.0)+cxnl2*t23851*t23828*t23839*t23858*(1.6E1/ \
               3.0)-cxnl1*t23828*t23865*t23839*t23858*(8.0/3.0)-cxnl2*t23831*t23828*t23873*t23874*t23839+cxnl3*gamma_aa[index]* \
               gx*t23828*t23847*t23839*t23859*8.0-cxnl3*gamma_aa[index]*gx*t23830*t23870*t23828*t23839*t23869)-t23863* \
               (C_k*t23833*t23852*t23864*(5.0/3.0)-C_k*t23833*t23836*t23854*t23864*1.0E1+C_k*t23833*t23855*t23864* \
               t23838*(2.5E1/3.0)-C_k*t23833*t23835*1/(t23837*t23837)*t23864*(5.0/3.0)+C_k*t23833*t23835*t23836*1/ \
               (t23837*t23837*t23837*t23837)*t23864*1.0E1-C_k*t23833*t23835*1/(t23837*t23837*t23837*t23837*t23837* \
               t23837)*t23864*t23838*(2.5E1/3.0))+cx1*gamma_aa[index]*gx*t23842*t23737*(8.0/3.0)-cx1*t23828*t23865* \
               t23839*t23858*(8.0/3.0)+cx2*t23851*t23828*t23839*t23858*(1.6E1/3.0)-cx2*t23831*t23828*t23873*t23874* \
               t23839+cx3*gamma_aa[index]*gx*t23828*t23847*t23839*t23859*8.0-cx3*gamma_aa[index]*gx*t23830*t23870* \
               t23828*t23839*t23869))+rho_a[index]*t23900*(-t23823+t23896+t23683*t23686*(t23823+t23895-t23896-t23803* \
               t23894*t23888*t23889))+rho_a[index]*t23875*(ccaa1*gamma_aa[index]*gcaa*t23737*t23878*(8.0/3.0)+ccaa2* \
               t23828*t23829*t23858*t23887*(1.6E1/3.0)-ccaa1*t23828*t23829*t23858*1/(t23877*t23877)*(8.0/3.0)-ccaa2* \
               t23831*t23828*t23829*1/(t23886*t23886)*(gamma_aa[index]*gcaa*t23737*(1.6E1/3.0)+t23828*t23829*t23858* \
               (1.6E1/3.0))+ccaa3*gamma_aa[index]*gcaa*t23828*t23829*t23883*t23859*8.0-ccaa3*gamma_aa[index]*gcaa* \
               t23830*t23828*1/(t23882*t23882)*t23829*(gamma_aa[index]*gcaa*t23737*8.0+t23828*t23829*t23858*1.6E1+ \
               gamma_aa[index]*gcaa*t23828*t23829*t23859*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t27883 = 1/pow(rho_a[index],1.0/3.0);
            double t27884 = c*t27883;
            double t27885 = sqrt(t27884);
            double t27886 = pow(t27884,3.0/2.0);
            double t27887 = c*c;
            double t27888 = 1/pow(rho_a[index],2.0/3.0);
            double t27889 = 1/c0p;
            double t27890 = b1p*t27885;
            double t27891 = b3p*t27886;
            double t27892 = b4p*t27887*t27888;
            double t27893 = b2p*c*t27883;
            double t27894 = t27890+t27891+t27892+t27893;
            double t27895 = 1/t27894;
            double t27896 = t27895*t27889*(1.0/2.0);
            double t27897 = t27896+1.0;
            double t27898 = log(t27897);
            double t27899 = a1p*c*t27883;
            double t27900 = t27899+1.0;
            double t27901 = 1/pow(rho_a[index],8.0/3.0);
            double t27902 = gamma_aa[index]*gamma_aa[index];
            double t27903 = gcaa*gcaa;
            double t27904 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t27905 = 1/pow(rho_a[index],1.6E1/3.0);
            double t27906 = pow(2.0,1.0/3.0);
            double t27907 = t27906*2.0;
            double t27908 = t27907-2.0;
            double t27909 = two_13*2.0;
            double t27910 = t27909-2.0;
            double t27911 = 1/t27910;
            double t27912 = 1/c0f;
            double t27913 = b1f*t27885;
            double t27914 = b3f*t27886;
            double t27915 = b4f*t27887*t27888;
            double t27916 = b2f*c*t27883;
            double t27917 = t27913+t27914+t27915+t27916;
            double t27918 = 1/t27917;
            double t27919 = t27912*t27918*(1.0/2.0);
            double t27920 = t27919+1.0;
            double t27921 = log(t27920);
            double t27922 = a1f*c*t27883;
            double t27923 = t27922+1.0;
            double t27924 = c0f*t27921*t27923*2.0;
            double t27925 = c0p*t27900*t27898*2.0;
            double t27926 = gamma_aa[index]*gcaa*t27901;
            double t27927 = t27926+1.0;
            double t27928 = 1/t27927;
            double t27929 = gamma_aa[index]*gcaa*t27901*3.0;
            double t27930 = gamma_aa[index]*gcaa*t27902*t27903*t27904;
            double t27931 = t27902*t27903*t27905*3.0;
            double t27932 = t27930+t27931+t27929+1.0;
            double t27933 = 1/t27932;
            double t27934 = gamma_aa[index]*gcaa*t27901*2.0;
            double t27935 = t27902*t27903*t27905;
            double t27936 = t27934+t27935+1.0;
            double t27937 = 1/t27936;
            double t27938 = 1/pow(rho_a[index],1.9E1/3.0);
            double t27939 = 1/pow(rho_a[index],1.1E1/3.0);
            double t27940 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t27941 = 1/pow(rho_a[index],4.0/3.0);
            double t27942 = 1/pow(rho_a[index],5.0/3.0);
            double t27943 = 1/sqrt(t27884);
            double t27944 = 1/t27897;
            double t27945 = 1/(t27894*t27894);
            double t27946 = b4p*t27942*t27887*(2.0/3.0);
            double t27947 = b2p*c*t27941*(1.0/3.0);
            double t27948 = b1p*c*t27941*t27943*(1.0/6.0);
            double t27949 = b3p*c*t27941*t27885*(1.0/2.0);
            double t27950 = t27946+t27947+t27948+t27949;
            double t27951 = t27900*t27950*t27944*t27945;
            double t27952 = ccaa1*gamma_aa[index]*gcaa*t27901*t27928;
            double t27953 = ccaa3*gamma_aa[index]*gcaa*t27902*t27903*t27904*t27933;
            double t27954 = ccaa2*t27902*t27903*t27905*t27937;
            double t27955 = ccaa0+t27952+t27953+t27954;
            double t27956 = pow(rho_a[index],5.0/3.0);
            double t27957 = 1/tau_a[index];
            double t27958 = C_k*t27956*t27957;
            double t27959 = t27958-1.0;
            double t27960 = t27959*t27959;
            double t27961 = t27958+1.0;
            double t27962 = t27960*t27960;
            double t27963 = gx*gx;
            double t27964 = gamma_aa[index]*gx*t27901;
            double t27965 = t27964+1.0;
            double t27966 = 1/t27965;
            double t27967 = gamma_aa[index]*gx*t27901*3.0;
            double t27968 = gamma_aa[index]*gx*t27902*t27904*t27963;
            double t27969 = t27902*t27905*t27963*3.0;
            double t27970 = t27967+t27968+t27969+1.0;
            double t27971 = 1/t27970;
            double t27972 = gamma_aa[index]*gx*t27901*2.0;
            double t27973 = t27902*t27905*t27963;
            double t27974 = t27972+t27973+1.0;
            double t27975 = 1/t27974;
            double t27976 = X-1.0;
            double t27977 = 1/t27961;
            double t27978 = t27959*t27977;
            double t27979 = 1/(t27961*t27961*t27961);
            double t27980 = 1/(t27961*t27961*t27961*t27961*t27961);
            double t27981 = t27962*t27980*t27959;
            double t27982 = t27981+t27978-t27960*t27959*t27979*2.0;
            double t27983 = cxnl1*gamma_aa[index]*gx*t27901*t27966;
            double t27984 = cxnl3*gamma_aa[index]*gx*t27902*t27904*t27971*t27963;
            double t27985 = cxnl2*t27902*t27905*t27963*t27975;
            double t27986 = cxnl0+t27983+t27984+t27985;
            double t27987 = pow(rho_a[index],2.0/3.0);
            double t27988 = 1/(t27965*t27965);
            double t27989 = gamma_aa[index]*gx*t27939*8.0;
            double t27990 = gamma_aa[index]*gx*t27902*t27940*t27963*8.0;
            double t27991 = t27902*t27963*t27938*1.6E1;
            double t27992 = t27990+t27991+t27989;
            double t27993 = 1/(t27970*t27970);
            double t27994 = gamma_aa[index]*gx*t27939*(1.6E1/3.0);
            double t27995 = t27902*t27963*t27938*(1.6E1/3.0);
            double t27996 = t27994+t27995;
            double t27997 = 1/(t27974*t27974);
            v_rho_a_[index] = -t27955*(t27925+t27911*t27908*(t27924-c0p*t27900*t27898*2.0))+rho_a[index]*(t27925+ \
               t27911*t27908*(t27924-t27925))*(ccaa1*gamma_aa[index]*gcaa*t27928*t27939*(8.0/3.0)+ccaa2*t27902*t27903* \
               t27937*t27938*(1.6E1/3.0)-ccaa1*t27902*t27903*1/(t27927*t27927)*t27938*(8.0/3.0)-ccaa2*t27902*t27903* \
               t27905*1/(t27936*t27936)*(gamma_aa[index]*gcaa*t27939*(1.6E1/3.0)+t27902*t27903*t27938*(1.6E1/3.0) \
               )+ccaa3*gamma_aa[index]*gcaa*t27902*t27903*t27940*t27933*8.0-ccaa3*gamma_aa[index]*gcaa*t27902*t27903* \
               t27904*1/(t27932*t27932)*(gamma_aa[index]*gcaa*t27939*8.0+t27902*t27903*t27938*1.6E1+gamma_aa[index]* \
               gcaa*t27902*t27903*t27940*8.0))+rho_a[index]*t27955*(-t27951+t27911*t27908*(t27951-(t27923*1/(t27917* \
               t27917)*(b2f*c*t27941*(1.0/3.0)+b4f*t27942*t27887*(2.0/3.0)+b1f*c*t27941*t27943*(1.0/6.0)+b3f*c*t27941* \
               t27885*(1.0/2.0)))/t27920+a1f*c*c0f*t27921*t27941*(2.0/3.0)-a1p*c*c0p*t27941*t27898*(2.0/3.0))+a1p* \
               c*c0p*t27941*t27898*(2.0/3.0))-c0*pow(rho_a[index],1.0/3.0)*t27976*(cx0+t27982*t27986+cx1*gamma_aa[index]* \
               gx*t27901*t27966+cx2*t27902*t27905*t27963*t27975+cx3*gamma_aa[index]*gx*t27902*t27904*t27971*t27963) \
               *(4.0/3.0)+c0*pow(rho_a[index],4.0/3.0)*t27976*(t27982*(cxnl1*gamma_aa[index]*gx*t27939*t27966*(8.0/ \
               3.0)+cxnl2*t27902*t27963*t27938*t27975*(1.6E1/3.0)-cxnl1*t27902*t27963*t27938*t27988*(8.0/3.0)-cxnl2* \
               t27902*t27905*t27963*t27996*t27997+cxnl3*gamma_aa[index]*gx*t27902*t27940*t27971*t27963*8.0-cxnl3* \
               gamma_aa[index]*gx*t27902*t27904*t27963*t27992*t27993)-t27986*(C_k*t27957*t27977*t27987*(5.0/3.0)+ \
               C_k*t27962*t27980*t27957*t27987*(2.5E1/3.0)-C_k*t27960*t27957*t27987*t27979*1.0E1-C_k*1/(t27961*t27961) \
               *t27957*t27959*t27987*(5.0/3.0)+C_k*t27960*1/(t27961*t27961*t27961*t27961)*t27957*t27959*t27987*1.0E1- \
               C_k*1/(t27961*t27961*t27961*t27961*t27961*t27961)*t27962*t27957*t27959*t27987*(2.5E1/3.0))+cx1*gamma_aa[index]* \
               gx*t27939*t27966*(8.0/3.0)-cx1*t27902*t27963*t27938*t27988*(8.0/3.0)+cx2*t27902*t27963*t27938*t27975* \
               (1.6E1/3.0)-cx2*t27902*t27905*t27963*t27996*t27997+cx3*gamma_aa[index]*gx*t27902*t27940*t27971*t27963* \
               8.0-cx3*gamma_aa[index]*gx*t27902*t27904*t27963*t27992*t27993);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t23902 = 1/pow(rho_a[index],1.0/3.0);
            double t23903 = c*t23902;
            double t23904 = sqrt(t23903);
            double t23905 = pow(t23903,3.0/2.0);
            double t23906 = c*c;
            double t23907 = 1/pow(rho_a[index],2.0/3.0);
            double t23908 = 1/c0p;
            double t23909 = b1p*t23904;
            double t23910 = b3p*t23905;
            double t23911 = b4p*t23906*t23907;
            double t23912 = b2p*c*t23902;
            double t23913 = t23910+t23911+t23912+t23909;
            double t23914 = 1/t23913;
            double t23915 = t23914*t23908*(1.0/2.0);
            double t23916 = t23915+1.0;
            double t23917 = log(t23916);
            double t23918 = a1p*c*t23902;
            double t23919 = t23918+1.0;
            double t23920 = pow(2.0,1.0/3.0);
            double t23921 = t23920*2.0;
            double t23922 = t23921-2.0;
            double t23923 = two_13*2.0;
            double t23924 = t23923-2.0;
            double t23925 = 1/t23924;
            double t23926 = 1/c0f;
            double t23927 = 1/pow(rho_b[index],1.0/3.0);
            double t23928 = c*t23927;
            double t23929 = sqrt(t23928);
            double t23930 = pow(t23928,3.0/2.0);
            double t23931 = 1/pow(rho_b[index],2.0/3.0);
            double t23932 = b1p*t23929;
            double t23933 = b3p*t23930;
            double t23934 = b4p*t23931*t23906;
            double t23935 = b2p*c*t23927;
            double t23936 = t23932+t23933+t23934+t23935;
            double t23937 = 1/t23936;
            double t23938 = t23908*t23937*(1.0/2.0);
            double t23939 = t23938+1.0;
            double t23940 = log(t23939);
            double t23941 = a1p*c*t23927;
            double t23942 = t23941+1.0;
            double t23943 = c0p*t23940*t23942*2.0;
            double t23944 = rho_a[index]+rho_b[index];
            double t23945 = 1/pow(t23944,1.0/3.0);
            double t23946 = c*t23945;
            double t23947 = sqrt(t23946);
            double t23948 = pow(t23946,3.0/2.0);
            double t23949 = 1/pow(t23944,2.0/3.0);
            double t23950 = b1p*t23947;
            double t23951 = b3p*t23948;
            double t23952 = b4p*t23906*t23949;
            double t23953 = b2p*c*t23945;
            double t23954 = t23950+t23951+t23952+t23953;
            double t23955 = 1/t23954;
            double t23956 = t23908*t23955*(1.0/2.0);
            double t23957 = t23956+1.0;
            double t23958 = log(t23957);
            double t23959 = a1p*c*t23945;
            double t23960 = t23959+1.0;
            double t23961 = c0p*t23960*t23958*2.0;
            double t23962 = rho_a[index]-rho_b[index];
            double t23963 = t23962*t23962;
            double t23964 = 1/t23944;
            double t23965 = t23962*t23964;
            double t23966 = 1/(t23944*t23944*t23944*t23944);
            double t23967 = t23963*t23963;
            double t23968 = t23965+1.0;
            double t23969 = pow(t23968,4.0/3.0);
            double t23970 = -t23965+1.0;
            double t23971 = pow(t23970,4.0/3.0);
            double t23972 = t23971+t23969-2.0;
            double t23973 = gcab*gcab;
            double t23977 = 1/pow(rho_a[index],8.0/3.0);
            double t23978 = gamma_aa[index]*t23977*(1.0/2.0);
            double t23979 = 1/pow(rho_b[index],8.0/3.0);
            double t23980 = gamma_bb[index]*t23979*(1.0/2.0);
            double t23974 = t23980+t23978;
            double t23975 = t23974*t23974;
            double t23976 = 1/pow(rho_b[index],1.1E1/3.0);
            double t23981 = gcab*t23974;
            double t23982 = t23981+1.0;
            double t23983 = t23973*t23975;
            double t23984 = gcab*t23974*2.0;
            double t23985 = t23983+t23984+1.0;
            double t23986 = t23973*t23975*3.0;
            double t23987 = gcab*t23973*t23974*t23975;
            double t23988 = gcab*t23974*3.0;
            double t23989 = t23986+t23987+t23988+1.0;
            double t23990 = c0p*t23917*t23919*2.0;
            double t23991 = 1/t23985;
            double t23992 = 1/t23989;
            double t23993 = 1/t23982;
            double t23994 = 1/pow(t23944,4.0/3.0);
            double t23995 = b1f*t23947;
            double t23996 = b3f*t23948;
            double t23997 = b4f*t23906*t23949;
            double t23998 = b2f*c*t23945;
            double t23999 = t23995+t23996+t23997+t23998;
            double t24000 = 1/t23999;
            double t24001 = t23926*t24000*(1.0/2.0);
            double t24002 = t24001+1.0;
            double t24003 = log(t24002);
            double t24004 = a1f*c*t23945;
            double t24005 = t24004+1.0;
            double t24007 = c0f*t24003*t24005*2.0;
            double t24006 = t23961-t24007;
            double t24008 = 1/(t23944*t23944);
            double t24009 = t23962*t24008;
            double t24010 = t23964+t24009;
            double t24011 = 1/pow(t23944,5.0/3.0);
            double t24012 = 1/sqrt(t23946);
            double t24013 = 1/t23957;
            double t24014 = 1/(t23954*t23954);
            double t24015 = b4p*t23906*t24011*(2.0/3.0);
            double t24016 = b2p*c*t23994*(1.0/3.0);
            double t24017 = b1p*c*t23994*t24012*(1.0/6.0);
            double t24018 = b3p*c*t23947*t23994*(1.0/2.0);
            double t24019 = t24015+t24016+t24017+t24018;
            double t24020 = 1/d2fz0;
            double t24021 = 1/Aa;
            double t24022 = b1a*t23947;
            double t24023 = b3a*t23948;
            double t24024 = b4a*t23906*t23949;
            double t24025 = b2a*c*t23945;
            double t24026 = t24022+t24023+t24024+t24025;
            double t24027 = 1/t24026;
            double t24028 = t24021*t24027*(1.0/2.0);
            double t24029 = t24028+1.0;
            double t24030 = log(t24029);
            double t24031 = a1a*c*t23945;
            double t24032 = t24031+1.0;
            double t24033 = 1/(t23944*t23944*t23944*t23944*t23944);
            double t24034 = pow(t23968,1.0/3.0);
            double t24035 = t24010*t24034*(4.0/3.0);
            double t24036 = pow(t23970,1.0/3.0);
            double t24037 = t24035-t24010*t24036*(4.0/3.0);
            double t24038 = t23966*t23967;
            double t24039 = t24038-1.0;
            double t24040 = t23960*t24013*t24014*t24019;
            double t24041 = a1f*c*t23927;
            double t24042 = t24041+1.0;
            double t24043 = b1f*t23929;
            double t24044 = b3f*t23930;
            double t24045 = b4f*t23931*t23906;
            double t24046 = b2f*c*t23927;
            double t24047 = t24043+t24044+t24045+t24046;
            double t24048 = 1/t24047;
            double t24049 = t23926*t24048*(1.0/2.0);
            double t24050 = t24049+1.0;
            double t24051 = 1/pow(rho_b[index],4.0/3.0);
            double t24052 = 1/pow(rho_b[index],5.0/3.0);
            double t24053 = 1/sqrt(t23928);
            double t24054 = log(t24050);
            double t24055 = 1/t23939;
            double t24056 = 1/(t23936*t23936);
            double t24057 = b4p*t23906*t24052*(2.0/3.0);
            double t24058 = b2p*c*t24051*(1.0/3.0);
            double t24059 = b1p*c*t24051*t24053*(1.0/6.0);
            double t24060 = b3p*c*t23929*t24051*(1.0/2.0);
            double t24061 = t24060+t24057+t24058+t24059;
            double t24062 = t23942*t24061*t24055*t24056;
            double t24065 = c0f*t24042*t24054*2.0;
            double t24063 = t23943-t24065;
            double t24064 = Aa*t23925*t23972*t24020*t24030*t24032*t24039*2.0;
            double t24066 = t23922*t23925*t24063;
            double t24067 = gamma_bb[index]*gamma_bb[index];
            double t24068 = gcaa*gcaa;
            double t24069 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t24070 = 1/pow(rho_b[index],1.6E1/3.0);
            double t24071 = pow(rho_b[index],5.0/3.0);
            double t24072 = 1/tau_b[index];
            double t24073 = C_k*t24071*t24072;
            double t24074 = t24073-1.0;
            double t24075 = t24074*t24074;
            double t24076 = t24073+1.0;
            double t24077 = t24075*t24075;
            double t24078 = gx*gx;
            double t24079 = gamma_bb[index]*gx*t23979;
            double t24080 = t24079+1.0;
            double t24081 = 1/t24080;
            double t24082 = gamma_bb[index]*gx*t23979*3.0;
            double t24083 = gamma_bb[index]*gx*t24067*t24069*t24078;
            double t24084 = t24070*t24067*t24078*3.0;
            double t24085 = t24082+t24083+t24084+1.0;
            double t24086 = 1/t24085;
            double t24087 = gamma_bb[index]*gx*t23979*2.0;
            double t24088 = t24070*t24067*t24078;
            double t24089 = t24087+t24088+1.0;
            double t24090 = 1/t24089;
            double t24091 = 1/t24076;
            double t24092 = t24091*t24074;
            double t24093 = 1/(t24076*t24076*t24076);
            double t24094 = 1/(t24076*t24076*t24076*t24076*t24076);
            double t24095 = t24074*t24094*t24077;
            double t24096 = t24092+t24095-t24074*t24075*t24093*2.0;
            double t24097 = 1/pow(rho_b[index],1.9E1/3.0);
            double t24098 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t24099 = cxnl1*gamma_bb[index]*gx*t23979*t24081;
            double t24100 = cxnl3*gamma_bb[index]*gx*t24067*t24086*t24069*t24078;
            double t24101 = cxnl2*t24070*t24090*t24067*t24078;
            double t24102 = cxnl0+t24100+t24101+t24099;
            double t24103 = pow(rho_b[index],2.0/3.0);
            double t24104 = 1/(t24080*t24080);
            double t24105 = gamma_bb[index]*gx*t23976*8.0;
            double t24106 = gamma_bb[index]*gx*t24067*t24078*t24098*8.0;
            double t24107 = t24067*t24078*t24097*1.6E1;
            double t24108 = t24105+t24106+t24107;
            double t24109 = 1/(t24085*t24085);
            double t24110 = gamma_bb[index]*gx*t23976*(1.6E1/3.0);
            double t24111 = t24067*t24078*t24097*(1.6E1/3.0);
            double t24112 = t24110+t24111;
            double t24113 = 1/(t24089*t24089);
            double t24114 = t23943-t24066;
            double t24115 = gamma_bb[index]*gcaa*t23979;
            double t24116 = t24115+1.0;
            double t24117 = 1/t24116;
            double t24118 = gamma_bb[index]*gcaa*t23979*3.0;
            double t24119 = gamma_bb[index]*gcaa*t24067*t24068*t24069;
            double t24120 = t24070*t24067*t24068*3.0;
            double t24121 = t24120+t24118+t24119+1.0;
            double t24122 = 1/t24121;
            double t24123 = gamma_bb[index]*gcaa*t23979*2.0;
            double t24124 = t24070*t24067*t24068;
            double t24125 = t24123+t24124+1.0;
            double t24126 = 1/t24125;
            double t24127 = 1/t24050;
            double t24128 = 1/(t24047*t24047);
            double t24129 = b4f*t23906*t24052*(2.0/3.0);
            double t24130 = b2f*c*t24051*(1.0/3.0);
            double t24131 = b1f*c*t24051*t24053*(1.0/6.0);
            double t24132 = b3f*c*t23929*t24051*(1.0/2.0);
            double t24133 = t24130+t24131+t24132+t24129;
            double t24134 = a1f*c*c0f*t24051*t24054*(2.0/3.0);
            double t24135 = a1p*c*c0p*t23940*t24051*(2.0/3.0);
            double t24136 = ccaa1*gamma_bb[index]*gcaa*t23979*t24117;
            double t24137 = ccaa3*gamma_bb[index]*gcaa*t24122*t24067*t24068*t24069;
            double t24138 = ccaa2*t24070*t24126*t24067*t24068;
            double t24139 = ccaa0+t24136+t24137+t24138;
            v_rho_b_[index] = -t24114*t24139-(ccab0+ccab1*gcab*t23974*t23993+ccab2*t23973*t23991*t23975+ccab3* \
               gcab*t23973*t23974*t23992*t23975)*(-t23943+t23961+t24064+t24066+t23944*(t24040-t23925*t23972*t23966* \
               t23967*(t24040-(1/(t23999*t23999)*t24005*(b2f*c*t23994*(1.0/3.0)+b4f*t23906*t24011*(2.0/3.0)+b1f*c* \
               t23994*t24012*(1.0/6.0)+b3f*c*t23947*t23994*(1.0/2.0)))/t24002+a1f*c*c0f*t23994*t24003*(2.0/3.0)-a1p* \
               c*c0p*t23958*t23994*(2.0/3.0))-a1p*c*c0p*t23958*t23994*(2.0/3.0)+t23925*t23972*t23967*t24006*t24033* \
               4.0+t23925*t23966*t23967*t24006*t24037+t23925*t23962*t23963*t23972*t23966*t24006*4.0-Aa*t23925*t23972* \
               t24020*t24030*t24032*(t23967*t24033*4.0+t23962*t23963*t23966*4.0)*2.0-Aa*t23925*t24020*t24030*t24032* \
               t24037*t24039*2.0+(t23925*t23972*t24020*t24032*1/(t24026*t24026)*t24039*(b2a*c*t23994*(1.0/3.0)+b4a* \
               t23906*t24011*(2.0/3.0)+b1a*c*t23994*t24012*(1.0/6.0)+b3a*c*t23947*t23994*(1.0/2.0)))/t24029-Aa*a1a* \
               c*t23925*t23972*t23994*t24020*t24030*t24039*(2.0/3.0))+rho_b[index]*(-t24062+t24135+t23922*t23925* \
               (t24062+t24134-t24042*t24133*t24127*t24128-a1p*c*c0p*t23940*t24051*(2.0/3.0)))-t23925*t23972*t23966* \
               t23967*t24006)-(rho_b[index]*(t23943-t23922*t23925*t24063)+rho_a[index]*(t23990-t23922*t23925*(t23990- \
               c0f*log((t23926*(1.0/2.0))/(b1f*t23904+b3f*t23905+b2f*c*t23902+b4f*t23906*t23907)+1.0)*(a1f*c*t23902+ \
               1.0)*2.0))-t23944*(t23961+t24064-t23925*t23972*t23966*t23967*t24006))*(ccab1*gamma_bb[index]*gcab* \
               t23993*t23976*(4.0/3.0)-ccab2*t23973*t23975*1/(t23985*t23985)*(gamma_bb[index]*gcab*t23976*(8.0/3.0) \
               +gamma_bb[index]*t23973*t23974*t23976*(8.0/3.0))-ccab1*gamma_bb[index]*t23973*1/(t23982*t23982)*t23974* \
               t23976*(4.0/3.0)+ccab2*gamma_bb[index]*t23973*t23991*t23974*t23976*(8.0/3.0)-ccab3*gcab*t23973*t23974* \
               t23975*1/(t23989*t23989)*(gamma_bb[index]*gcab*t23976*4.0+gamma_bb[index]*t23973*t23974*t23976*8.0+ \
               gamma_bb[index]*gcab*t23973*t23975*t23976*4.0)+ccab3*gamma_bb[index]*gcab*t23973*t23992*t23975*t23976* \
               4.0)-(X-1.0)*(c0*pow(rho_b[index],1.0/3.0)*(cx0+t24102*t24096+cx1*gamma_bb[index]*gx*t23979*t24081+ \
               cx2*t24070*t24090*t24067*t24078+cx3*gamma_bb[index]*gx*t24067*t24086*t24069*t24078)*(4.0/3.0)-c0*pow(rho_b[index],4.0/ \
               3.0)*(t24096*(cxnl1*gamma_bb[index]*gx*t23976*t24081*(8.0/3.0)-cxnl1*t24104*t24067*t24078*t24097*(8.0/ \
               3.0)+cxnl2*t24090*t24067*t24078*t24097*(1.6E1/3.0)-cxnl2*t24112*t24113*t24070*t24067*t24078+cxnl3* \
               gamma_bb[index]*gx*t24067*t24086*t24078*t24098*8.0-cxnl3*gamma_bb[index]*gx*t24108*t24109*t24067*t24069* \
               t24078)-t24102*(C_k*t24103*t24072*t24091*(5.0/3.0)-C_k*t24103*t24072*t24075*t24093*1.0E1+C_k*t24103* \
               t24072*t24094*t24077*(2.5E1/3.0)-C_k*t24103*t24072*t24074*1/(t24076*t24076)*(5.0/3.0)+C_k*t24103*t24072* \
               t24074*t24075*1/(t24076*t24076*t24076*t24076)*1.0E1-C_k*t24103*t24072*t24074*1/(t24076*t24076*t24076* \
               t24076*t24076*t24076)*t24077*(2.5E1/3.0))+cx1*gamma_bb[index]*gx*t23976*t24081*(8.0/3.0)-cx1*t24104* \
               t24067*t24078*t24097*(8.0/3.0)+cx2*t24090*t24067*t24078*t24097*(1.6E1/3.0)-cx2*t24112*t24113*t24070* \
               t24067*t24078+cx3*gamma_bb[index]*gx*t24067*t24086*t24078*t24098*8.0-cx3*gamma_bb[index]*gx*t24108* \
               t24109*t24067*t24069*t24078))+rho_b[index]*t24139*(-t24062+t24135+t23922*t23925*(t24062+t24134-t24135- \
               t24042*t24133*t24127*t24128))+rho_b[index]*t24114*(ccaa1*gamma_bb[index]*gcaa*t23976*t24117*(8.0/3.0) \
               +ccaa2*t24126*t24067*t24068*t24097*(1.6E1/3.0)-ccaa1*1/(t24116*t24116)*t24067*t24068*t24097*(8.0/3.0) \
               -ccaa2*t24070*1/(t24125*t24125)*t24067*t24068*(gamma_bb[index]*gcaa*t23976*(1.6E1/3.0)+t24067*t24068* \
               t24097*(1.6E1/3.0))+ccaa3*gamma_bb[index]*gcaa*t24122*t24067*t24068*t24098*8.0-ccaa3*gamma_bb[index]* \
               gcaa*1/(t24121*t24121)*t24067*t24068*t24069*(gamma_bb[index]*gcaa*t23976*8.0+t24067*t24068*t24097* \
               1.6E1+gamma_bb[index]*gcaa*t24067*t24068*t24098*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t27113 = 1/pow(rho_b[index],1.0/3.0);
            double t27114 = c*t27113;
            double t27115 = sqrt(t27114);
            double t27116 = pow(t27114,3.0/2.0);
            double t27117 = c*c;
            double t27118 = 1/pow(rho_b[index],2.0/3.0);
            double t27119 = 1/c0p;
            double t27120 = b1p*t27115;
            double t27121 = b3p*t27116;
            double t27122 = b4p*t27117*t27118;
            double t27123 = b2p*c*t27113;
            double t27124 = t27120+t27121+t27122+t27123;
            double t27125 = 1/t27124;
            double t27126 = t27125*t27119*(1.0/2.0);
            double t27127 = t27126+1.0;
            double t27128 = log(t27127);
            double t27129 = a1p*c*t27113;
            double t27130 = t27129+1.0;
            double t27131 = 1/pow(rho_b[index],8.0/3.0);
            double t27132 = gamma_bb[index]*gamma_bb[index];
            double t27133 = gcaa*gcaa;
            double t27134 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t27135 = 1/pow(rho_b[index],1.6E1/3.0);
            double t27136 = pow(2.0,1.0/3.0);
            double t27137 = t27136*2.0;
            double t27138 = t27137-2.0;
            double t27139 = two_13*2.0;
            double t27140 = t27139-2.0;
            double t27141 = 1/t27140;
            double t27142 = 1/c0f;
            double t27143 = b1f*t27115;
            double t27144 = b3f*t27116;
            double t27145 = b4f*t27117*t27118;
            double t27146 = b2f*c*t27113;
            double t27147 = t27143+t27144+t27145+t27146;
            double t27148 = 1/t27147;
            double t27149 = t27142*t27148*(1.0/2.0);
            double t27150 = t27149+1.0;
            double t27151 = log(t27150);
            double t27152 = a1f*c*t27113;
            double t27153 = t27152+1.0;
            double t27154 = c0f*t27151*t27153*2.0;
            double t27155 = c0p*t27130*t27128*2.0;
            double t27156 = gamma_bb[index]*gcaa*t27131;
            double t27157 = t27156+1.0;
            double t27158 = 1/t27157;
            double t27159 = gamma_bb[index]*gcaa*t27131*3.0;
            double t27160 = gamma_bb[index]*gcaa*t27132*t27133*t27134;
            double t27161 = t27132*t27133*t27135*3.0;
            double t27162 = t27160+t27161+t27159+1.0;
            double t27163 = 1/t27162;
            double t27164 = gamma_bb[index]*gcaa*t27131*2.0;
            double t27165 = t27132*t27133*t27135;
            double t27166 = t27164+t27165+1.0;
            double t27167 = 1/t27166;
            double t27168 = 1/pow(rho_b[index],1.9E1/3.0);
            double t27169 = 1/pow(rho_b[index],1.1E1/3.0);
            double t27170 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t27171 = 1/pow(rho_b[index],4.0/3.0);
            double t27172 = 1/pow(rho_b[index],5.0/3.0);
            double t27173 = 1/sqrt(t27114);
            double t27174 = 1/t27127;
            double t27175 = 1/(t27124*t27124);
            double t27176 = b4p*t27117*t27172*(2.0/3.0);
            double t27177 = b2p*c*t27171*(1.0/3.0);
            double t27178 = b1p*c*t27171*t27173*(1.0/6.0);
            double t27179 = b3p*c*t27115*t27171*(1.0/2.0);
            double t27180 = t27176+t27177+t27178+t27179;
            double t27181 = t27130*t27180*t27174*t27175;
            double t27182 = ccaa1*gamma_bb[index]*gcaa*t27131*t27158;
            double t27183 = ccaa3*gamma_bb[index]*gcaa*t27132*t27133*t27134*t27163;
            double t27184 = ccaa2*t27132*t27133*t27135*t27167;
            double t27185 = ccaa0+t27182+t27183+t27184;
            double t27186 = pow(rho_b[index],5.0/3.0);
            double t27187 = 1/tau_b[index];
            double t27188 = C_k*t27186*t27187;
            double t27189 = t27188-1.0;
            double t27190 = t27189*t27189;
            double t27191 = t27188+1.0;
            double t27192 = t27190*t27190;
            double t27193 = gx*gx;
            double t27194 = gamma_bb[index]*gx*t27131;
            double t27195 = t27194+1.0;
            double t27196 = 1/t27195;
            double t27197 = gamma_bb[index]*gx*t27131*3.0;
            double t27198 = gamma_bb[index]*gx*t27132*t27134*t27193;
            double t27199 = t27132*t27135*t27193*3.0;
            double t27200 = t27197+t27198+t27199+1.0;
            double t27201 = 1/t27200;
            double t27202 = gamma_bb[index]*gx*t27131*2.0;
            double t27203 = t27132*t27135*t27193;
            double t27204 = t27202+t27203+1.0;
            double t27205 = 1/t27204;
            double t27206 = X-1.0;
            double t27207 = 1/t27191;
            double t27208 = t27207*t27189;
            double t27209 = 1/(t27191*t27191*t27191);
            double t27210 = 1/(t27191*t27191*t27191*t27191*t27191);
            double t27211 = t27210*t27192*t27189;
            double t27212 = t27211+t27208-t27190*t27209*t27189*2.0;
            double t27213 = cxnl1*gamma_bb[index]*gx*t27131*t27196;
            double t27214 = cxnl3*gamma_bb[index]*gx*t27201*t27132*t27134*t27193;
            double t27215 = cxnl2*t27132*t27205*t27135*t27193;
            double t27216 = cxnl0+t27213+t27214+t27215;
            double t27217 = pow(rho_b[index],2.0/3.0);
            double t27218 = 1/(t27195*t27195);
            double t27219 = gamma_bb[index]*gx*t27169*8.0;
            double t27220 = gamma_bb[index]*gx*t27132*t27170*t27193*8.0;
            double t27221 = t27132*t27193*t27168*1.6E1;
            double t27222 = t27220+t27221+t27219;
            double t27223 = 1/(t27200*t27200);
            double t27224 = gamma_bb[index]*gx*t27169*(1.6E1/3.0);
            double t27225 = t27132*t27193*t27168*(1.6E1/3.0);
            double t27226 = t27224+t27225;
            double t27227 = 1/(t27204*t27204);
            v_rho_b_[index] = -t27185*(t27155+t27141*t27138*(t27154-c0p*t27130*t27128*2.0))+rho_b[index]*(t27155+ \
               t27141*t27138*(t27154-t27155))*(ccaa1*gamma_bb[index]*gcaa*t27158*t27169*(8.0/3.0)+ccaa2*t27132*t27133* \
               t27167*t27168*(1.6E1/3.0)-ccaa1*t27132*t27133*1/(t27157*t27157)*t27168*(8.0/3.0)-ccaa2*t27132*t27133* \
               t27135*1/(t27166*t27166)*(gamma_bb[index]*gcaa*t27169*(1.6E1/3.0)+t27132*t27133*t27168*(1.6E1/3.0) \
               )+ccaa3*gamma_bb[index]*gcaa*t27132*t27133*t27170*t27163*8.0-ccaa3*gamma_bb[index]*gcaa*t27132*t27133* \
               t27134*1/(t27162*t27162)*(gamma_bb[index]*gcaa*t27169*8.0+t27132*t27133*t27168*1.6E1+gamma_bb[index]* \
               gcaa*t27132*t27133*t27170*8.0))+rho_b[index]*t27185*(-t27181+t27141*t27138*(t27181-(t27153*1/(t27147* \
               t27147)*(b2f*c*t27171*(1.0/3.0)+b4f*t27117*t27172*(2.0/3.0)+b1f*c*t27171*t27173*(1.0/6.0)+b3f*c*t27115* \
               t27171*(1.0/2.0)))/t27150+a1f*c*c0f*t27151*t27171*(2.0/3.0)-a1p*c*c0p*t27171*t27128*(2.0/3.0))+a1p* \
               c*c0p*t27171*t27128*(2.0/3.0))-c0*pow(rho_b[index],1.0/3.0)*t27206*(cx0+t27212*t27216+cx1*gamma_bb[index]* \
               gx*t27131*t27196+cx2*t27132*t27205*t27135*t27193+cx3*gamma_bb[index]*gx*t27201*t27132*t27134*t27193) \
               *(4.0/3.0)+c0*pow(rho_b[index],4.0/3.0)*t27206*(t27212*(cxnl1*gamma_bb[index]*gx*t27169*t27196*(8.0/ \
               3.0)+cxnl2*t27132*t27205*t27193*t27168*(1.6E1/3.0)-cxnl1*t27132*t27218*t27193*t27168*(8.0/3.0)-cxnl2* \
               t27132*t27135*t27226*t27227*t27193+cxnl3*gamma_bb[index]*gx*t27201*t27132*t27170*t27193*8.0-cxnl3* \
               gamma_bb[index]*gx*t27132*t27222*t27223*t27134*t27193)-t27216*(C_k*t27207*t27217*t27187*(5.0/3.0)+ \
               C_k*t27210*t27217*t27192*t27187*(2.5E1/3.0)-C_k*t27190*t27217*t27209*t27187*1.0E1-C_k*t27217*1/(t27191* \
               t27191)*t27187*t27189*(5.0/3.0)+C_k*t27190*t27217*1/(t27191*t27191*t27191*t27191)*t27187*t27189*1.0E1- \
               C_k*t27217*1/(t27191*t27191*t27191*t27191*t27191*t27191)*t27192*t27187*t27189*(2.5E1/3.0))+cx1*gamma_bb[index]* \
               gx*t27169*t27196*(8.0/3.0)-cx1*t27132*t27218*t27193*t27168*(8.0/3.0)+cx2*t27132*t27205*t27193*t27168* \
               (1.6E1/3.0)-cx2*t27132*t27135*t27226*t27227*t27193+cx3*gamma_bb[index]*gx*t27201*t27132*t27170*t27193* \
               8.0-cx3*gamma_bb[index]*gx*t27132*t27222*t27223*t27134*t27193);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t24141 = 1/pow(rho_a[index],1.0/3.0);
                double t24142 = c*t24141;
                double t24143 = sqrt(t24142);
                double t24144 = pow(t24142,3.0/2.0);
                double t24145 = c*c;
                double t24146 = 1/pow(rho_a[index],2.0/3.0);
                double t24147 = 1/c0p;
                double t24148 = b1p*t24143;
                double t24149 = b3p*t24144;
                double t24150 = b4p*t24145*t24146;
                double t24151 = b2p*c*t24141;
                double t24152 = t24150+t24151+t24148+t24149;
                double t24153 = 1/t24152;
                double t24154 = t24153*t24147*(1.0/2.0);
                double t24155 = t24154+1.0;
                double t24156 = log(t24155);
                double t24157 = a1p*c*t24141;
                double t24158 = t24157+1.0;
                double t24159 = pow(2.0,1.0/3.0);
                double t24160 = t24159*2.0;
                double t24161 = t24160-2.0;
                double t24162 = two_13*2.0;
                double t24163 = t24162-2.0;
                double t24164 = 1/t24163;
                double t24165 = 1/c0f;
                double t24166 = 1/pow(rho_b[index],1.0/3.0);
                double t24167 = c*t24166;
                double t24168 = sqrt(t24167);
                double t24169 = pow(t24167,3.0/2.0);
                double t24170 = 1/pow(rho_b[index],2.0/3.0);
                double t24171 = b1p*t24168;
                double t24172 = b3p*t24169;
                double t24173 = b4p*t24170*t24145;
                double t24174 = b2p*c*t24166;
                double t24175 = t24171+t24172+t24173+t24174;
                double t24176 = 1/t24175;
                double t24177 = t24147*t24176*(1.0/2.0);
                double t24178 = t24177+1.0;
                double t24179 = log(t24178);
                double t24180 = a1p*c*t24166;
                double t24181 = t24180+1.0;
                double t24182 = c0p*t24181*t24179*2.0;
                double t24183 = rho_a[index]+rho_b[index];
                double t24184 = 1/pow(t24183,1.0/3.0);
                double t24185 = c*t24184;
                double t24186 = sqrt(t24185);
                double t24187 = pow(t24185,3.0/2.0);
                double t24188 = 1/pow(t24183,2.0/3.0);
                double t24189 = b1p*t24186;
                double t24190 = b3p*t24187;
                double t24191 = b4p*t24145*t24188;
                double t24192 = b2p*c*t24184;
                double t24193 = t24190+t24191+t24192+t24189;
                double t24194 = 1/t24193;
                double t24195 = t24147*t24194*(1.0/2.0);
                double t24196 = t24195+1.0;
                double t24197 = log(t24196);
                double t24198 = a1p*c*t24184;
                double t24199 = t24198+1.0;
                double t24200 = c0p*t24197*t24199*2.0;
                double t24201 = rho_a[index]-rho_b[index];
                double t24202 = t24201*t24201;
                double t24203 = 1/t24183;
                double t24204 = t24201*t24203;
                double t24205 = 1/(t24183*t24183*t24183*t24183);
                double t24206 = t24202*t24202;
                double t24207 = t24204+1.0;
                double t24208 = pow(t24207,4.0/3.0);
                double t24209 = -t24204+1.0;
                double t24210 = pow(t24209,4.0/3.0);
                double t24211 = t24210+t24208-2.0;
                double t24212 = 1/pow(rho_a[index],8.0/3.0);
                double t24213 = gamma_aa[index]*t24212*(1.0/2.0);
                double t24214 = 1/pow(rho_b[index],8.0/3.0);
                double t24215 = gamma_bb[index]*t24214*(1.0/2.0);
                double t24216 = t24213+t24215;
                double t24217 = gcab*t24216;
                double t24218 = t24217+1.0;
                double t24219 = gcab*gcab;
                double t24220 = t24216*t24216;
                double t24221 = t24220*t24219;
                double t24222 = gcab*t24216*2.0;
                double t24223 = t24221+t24222+1.0;
                double t24224 = t24220*t24219*3.0;
                double t24225 = gcab*t24220*t24216*t24219;
                double t24226 = gcab*t24216*3.0;
                double t24227 = t24224+t24225+t24226+1.0;
                double t24228 = c0p*t24156*t24158*2.0;
                double t24229 = b1f*t24143;
                double t24230 = b3f*t24144;
                double t24231 = b4f*t24145*t24146;
                double t24232 = b2f*c*t24141;
                double t24233 = t24230+t24231+t24232+t24229;
                double t24234 = 1/t24233;
                double t24235 = t24234*t24165*(1.0/2.0);
                double t24236 = t24235+1.0;
                double t24237 = log(t24236);
                double t24238 = a1f*c*t24141;
                double t24239 = t24238+1.0;
                double t24240 = t24228-c0f*t24237*t24239*2.0;
                double t24241 = t24228-t24240*t24161*t24164;
                double t24242 = gcaa*gcaa;
                double t24243 = 1/pow(rho_a[index],1.6E1/3.0);
                double t24244 = gamma_aa[index]*gamma_aa[index];
                double t24245 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t24246 = gamma_aa[index]*gcaa*t24212;
                double t24247 = t24246+1.0;
                double t24248 = gamma_aa[index]*gcaa*t24212*3.0;
                double t24249 = gamma_aa[index]*gcaa*t24242*t24244*t24245;
                double t24250 = t24242*t24243*t24244*3.0;
                double t24251 = t24250+t24248+t24249+1.0;
                double t24252 = gamma_aa[index]*gcaa*t24212*2.0;
                double t24253 = t24242*t24243*t24244;
                double t24254 = t24252+t24253+1.0;
                double t24255 = pow(rho_a[index],5.0/3.0);
                double t24256 = 1/tau_a[index];
                double t24257 = C_k*t24255*t24256;
                double t24258 = t24257-1.0;
                double t24259 = t24258*t24258;
                double t24260 = t24257+1.0;
                double t24261 = t24259*t24259;
                double t24262 = gx*gx;
                double t24263 = gamma_aa[index]*gx*t24212;
                double t24264 = t24263+1.0;
                double t24265 = gamma_aa[index]*gx*t24212*3.0;
                double t24266 = gamma_aa[index]*gx*t24244*t24262*t24245;
                double t24267 = t24243*t24244*t24262*3.0;
                double t24268 = t24265+t24266+t24267+1.0;
                double t24269 = gamma_aa[index]*gx*t24212*2.0;
                double t24270 = t24243*t24244*t24262;
                double t24271 = t24270+t24269+1.0;
                double t24272 = 1/t24264;
                double t24273 = 1/t24271;
                double t24274 = 1/t24268;
                double t24275 = 1/(t24264*t24264);
                double t24276 = gx*t24212*3.0;
                double t24277 = gamma_aa[index]*t24243*t24262*6.0;
                double t24278 = gx*t24244*t24262*t24245*3.0;
                double t24279 = t24276+t24277+t24278;
                double t24280 = 1/(t24268*t24268);
                double t24281 = gx*t24212*2.0;
                double t24282 = gamma_aa[index]*t24243*t24262*2.0;
                double t24283 = t24281+t24282;
                double t24284 = 1/(t24271*t24271);
                v_gamma_aa_[index] = (rho_a[index]*t24241+rho_b[index]*(t24182-t24161*t24164*(t24182-c0f*log((t24165* \
                   (1.0/2.0))/(b1f*t24168+b3f*t24169+b2f*c*t24166+b4f*t24170*t24145)+1.0)*(a1f*c*t24166+1.0)*2.0))-t24183* \
                   (t24200-t24211*t24205*t24206*t24164*(t24200-c0f*log((t24165*(1.0/2.0))/(b1f*t24186+b3f*t24187+b2f* \
                   c*t24184+b4f*t24145*t24188)+1.0)*(a1f*c*t24184+1.0)*2.0)+(Aa*t24211*t24164*log((1.0/2.0)/(Aa*(b1a* \
                   t24186+b3a*t24187+b2a*c*t24184+b4a*t24145*t24188))+1.0)*(t24205*t24206-1.0)*(a1a*c*t24184+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t24212*(1.0/2.0))/t24218-ccab2*t24220*1/(t24223*t24223)*t24219*(gcab*t24212+ \
                   t24212*t24216*t24219)+(ccab2*t24212*t24216*t24219)/t24223-ccab1*t24212*t24216*1/(t24218*t24218)*t24219* \
                   (1.0/2.0)+(ccab3*gcab*t24220*t24212*t24219*(3.0/2.0))/t24227-ccab3*gcab*t24220*t24216*1/(t24227*t24227) \
                   *t24219*(gcab*t24212*(3.0/2.0)+t24212*t24216*t24219*3.0+gcab*t24220*t24212*t24219*(3.0/2.0)))-rho_a[index]* \
                   t24241*((ccaa1*gcaa*t24212)/t24247+(ccaa2*gamma_aa[index]*t24242*t24243*2.0)/t24254-ccaa1*gamma_aa[index]* \
                   t24242*t24243*1/(t24247*t24247)-ccaa2*t24242*t24243*t24244*1/(t24254*t24254)*(gcaa*t24212*2.0+gamma_aa[index]* \
                   t24242*t24243*2.0)+(ccaa3*gcaa*t24242*t24244*t24245*3.0)/t24251-ccaa3*gamma_aa[index]*gcaa*t24242* \
                   1/(t24251*t24251)*t24244*t24245*(gcaa*t24212*3.0+gamma_aa[index]*t24242*t24243*6.0+gcaa*t24242*t24244* \
                   t24245*3.0))-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((t24258/t24260+1/(t24260*t24260*t24260*t24260*t24260) \
                   *t24261*t24258-1/(t24260*t24260*t24260)*t24258*t24259*2.0)*(cxnl1*gx*t24212*t24272+cxnl2*gamma_aa[index]* \
                   t24243*t24262*t24273*2.0-cxnl1*gamma_aa[index]*t24243*t24262*t24275-cxnl2*t24243*t24244*t24262*t24283* \
                   t24284+cxnl3*gx*t24244*t24262*t24245*t24274*3.0-cxnl3*gamma_aa[index]*gx*t24244*t24262*t24280*t24245* \
                   t24279)+cx1*gx*t24212*t24272-cx1*gamma_aa[index]*t24243*t24262*t24275+cx2*gamma_aa[index]*t24243*t24262* \
                   t24273*2.0-cx2*t24243*t24244*t24262*t24283*t24284+cx3*gx*t24244*t24262*t24245*t24274*3.0-cx3*gamma_aa[index]* \
                   gx*t24244*t24262*t24280*t24245*t24279);
            } else if (rho_a[index] > cutoff_) {
                double t28000 = 1/pow(rho_a[index],1.0/3.0);
                double t28001 = c*t28000;
                double t28002 = sqrt(t28001);
                double t28003 = pow(t28001,3.0/2.0);
                double t28004 = c*c;
                double t28005 = 1/pow(rho_a[index],2.0/3.0);
                double t28006 = 1/c0p;
                double t28007 = b1p*t28002;
                double t28008 = b3p*t28003;
                double t28009 = b4p*t28004*t28005;
                double t28010 = b2p*c*t28000;
                double t28011 = t28010+t28007+t28008+t28009;
                double t28012 = 1/t28011;
                double t28013 = t28012*t28006*(1.0/2.0);
                double t28014 = t28013+1.0;
                double t28015 = log(t28014);
                double t28016 = a1p*c*t28000;
                double t28017 = t28016+1.0;
                double t28018 = 1/pow(rho_a[index],8.0/3.0);
                double t28019 = gcaa*gcaa;
                double t28020 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28021 = gamma_aa[index]*gamma_aa[index];
                double t28022 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28023 = gamma_aa[index]*gcaa*t28018;
                double t28024 = t28023+1.0;
                double t28025 = gamma_aa[index]*gcaa*t28018*3.0;
                double t28026 = gamma_aa[index]*gcaa*t28021*t28022*t28019;
                double t28027 = t28020*t28021*t28019*3.0;
                double t28028 = t28025+t28026+t28027+1.0;
                double t28029 = gamma_aa[index]*gcaa*t28018*2.0;
                double t28030 = t28020*t28021*t28019;
                double t28031 = t28030+t28029+1.0;
                double t28032 = pow(rho_a[index],5.0/3.0);
                double t28033 = 1/tau_a[index];
                double t28034 = C_k*t28032*t28033;
                double t28035 = t28034-1.0;
                double t28036 = t28035*t28035;
                double t28037 = t28034+1.0;
                double t28038 = t28036*t28036;
                double t28039 = gx*gx;
                double t28040 = gamma_aa[index]*gx*t28018;
                double t28041 = t28040+1.0;
                double t28042 = gamma_aa[index]*gx*t28018*3.0;
                double t28043 = gamma_aa[index]*gx*t28021*t28022*t28039;
                double t28044 = t28020*t28021*t28039*3.0;
                double t28045 = t28042+t28043+t28044+1.0;
                double t28046 = gamma_aa[index]*gx*t28018*2.0;
                double t28047 = t28020*t28021*t28039;
                double t28048 = t28046+t28047+1.0;
                double t28049 = 1/t28041;
                double t28050 = 1/t28048;
                double t28051 = 1/t28045;
                double t28052 = 1/(t28041*t28041);
                double t28053 = gx*t28018*3.0;
                double t28054 = gamma_aa[index]*t28020*t28039*6.0;
                double t28055 = gx*t28021*t28022*t28039*3.0;
                double t28056 = t28053+t28054+t28055;
                double t28057 = 1/(t28045*t28045);
                double t28058 = gx*t28018*2.0;
                double t28059 = gamma_aa[index]*t28020*t28039*2.0;
                double t28060 = t28058+t28059;
                double t28061 = 1/(t28048*t28048);
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t28002+ \
                   b3f*t28003+b2f*c*t28000+b4f*t28004*t28005))+1.0)*(a1f*c*t28000+1.0)*2.0-c0p*t28015*t28017*2.0))/(two_13* \
                   2.0-2.0)+c0p*t28015*t28017*2.0)*((ccaa1*gcaa*t28018)/t28024+(ccaa2*gamma_aa[index]*t28020*t28019*2.0) \
                   /t28031-ccaa1*gamma_aa[index]*t28020*1/(t28024*t28024)*t28019-ccaa2*t28020*t28021*1/(t28031*t28031) \
                   *t28019*(gcaa*t28018*2.0+gamma_aa[index]*t28020*t28019*2.0)+(ccaa3*gcaa*t28021*t28022*t28019*3.0)/ \
                   t28028-ccaa3*gamma_aa[index]*gcaa*t28021*t28022*t28019*1/(t28028*t28028)*(gcaa*t28018*3.0+gamma_aa[index]* \
                   t28020*t28019*6.0+gcaa*t28021*t28022*t28019*3.0))-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((t28035/t28037- \
                   t28035*t28036*1/(t28037*t28037*t28037)*2.0+t28035*1/(t28037*t28037*t28037*t28037*t28037)*t28038)*(cxnl1* \
                   gx*t28018*t28049+cxnl2*gamma_aa[index]*t28020*t28050*t28039*2.0-cxnl1*gamma_aa[index]*t28020*t28052* \
                   t28039-cxnl2*t28020*t28021*t28060*t28061*t28039+cxnl3*gx*t28021*t28022*t28051*t28039*3.0-cxnl3*gamma_aa[index]* \
                   gx*t28021*t28022*t28056*t28039*t28057)+cx1*gx*t28018*t28049-cx1*gamma_aa[index]*t28020*t28052*t28039+ \
                   cx2*gamma_aa[index]*t28020*t28050*t28039*2.0-cx2*t28020*t28021*t28060*t28061*t28039+cx3*gx*t28021* \
                   t28022*t28051*t28039*3.0-cx3*gamma_aa[index]*gx*t28021*t28022*t28056*t28039*t28057);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t24287 = 1/pow(rho_a[index],1.0/3.0);
                double t24288 = c*t24287;
                double t24289 = sqrt(t24288);
                double t24290 = pow(t24288,3.0/2.0);
                double t24291 = c*c;
                double t24292 = 1/pow(rho_a[index],2.0/3.0);
                double t24293 = 1/c0p;
                double t24294 = b1p*t24289;
                double t24295 = b3p*t24290;
                double t24296 = b4p*t24291*t24292;
                double t24297 = b2p*c*t24287;
                double t24298 = t24294+t24295+t24296+t24297;
                double t24299 = 1/t24298;
                double t24300 = t24293*t24299*(1.0/2.0);
                double t24301 = t24300+1.0;
                double t24302 = log(t24301);
                double t24303 = a1p*c*t24287;
                double t24304 = t24303+1.0;
                double t24305 = pow(2.0,1.0/3.0);
                double t24306 = t24305*2.0;
                double t24307 = t24306-2.0;
                double t24308 = two_13*2.0;
                double t24309 = t24308-2.0;
                double t24310 = 1/t24309;
                double t24311 = 1/c0f;
                double t24312 = 1/pow(rho_b[index],1.0/3.0);
                double t24313 = c*t24312;
                double t24314 = sqrt(t24313);
                double t24315 = pow(t24313,3.0/2.0);
                double t24316 = 1/pow(rho_b[index],2.0/3.0);
                double t24317 = b1p*t24314;
                double t24318 = b3p*t24315;
                double t24319 = b4p*t24316*t24291;
                double t24320 = b2p*c*t24312;
                double t24321 = t24320+t24317+t24318+t24319;
                double t24322 = 1/t24321;
                double t24323 = t24322*t24293*(1.0/2.0);
                double t24324 = t24323+1.0;
                double t24325 = log(t24324);
                double t24326 = a1p*c*t24312;
                double t24327 = t24326+1.0;
                double t24328 = c0p*t24325*t24327*2.0;
                double t24329 = rho_a[index]+rho_b[index];
                double t24330 = 1/pow(t24329,1.0/3.0);
                double t24331 = c*t24330;
                double t24332 = sqrt(t24331);
                double t24333 = pow(t24331,3.0/2.0);
                double t24334 = 1/pow(t24329,2.0/3.0);
                double t24335 = b1p*t24332;
                double t24336 = b3p*t24333;
                double t24337 = b4p*t24334*t24291;
                double t24338 = b2p*c*t24330;
                double t24339 = t24335+t24336+t24337+t24338;
                double t24340 = 1/t24339;
                double t24341 = t24340*t24293*(1.0/2.0);
                double t24342 = t24341+1.0;
                double t24343 = log(t24342);
                double t24344 = a1p*c*t24330;
                double t24345 = t24344+1.0;
                double t24346 = c0p*t24343*t24345*2.0;
                double t24347 = rho_a[index]-rho_b[index];
                double t24348 = t24347*t24347;
                double t24349 = 1/t24329;
                double t24350 = t24347*t24349;
                double t24351 = 1/(t24329*t24329*t24329*t24329);
                double t24352 = t24348*t24348;
                double t24353 = t24350+1.0;
                double t24354 = pow(t24353,4.0/3.0);
                double t24355 = -t24350+1.0;
                double t24356 = pow(t24355,4.0/3.0);
                double t24357 = t24354+t24356-2.0;
                double t24358 = 1/pow(rho_b[index],8.0/3.0);
                double t24359 = 1/pow(rho_a[index],8.0/3.0);
                double t24360 = gamma_aa[index]*t24359*(1.0/2.0);
                double t24361 = gamma_bb[index]*t24358*(1.0/2.0);
                double t24362 = t24360+t24361;
                double t24363 = gcab*t24362;
                double t24364 = t24363+1.0;
                double t24365 = gcab*gcab;
                double t24366 = t24362*t24362;
                double t24367 = t24365*t24366;
                double t24368 = gcab*t24362*2.0;
                double t24369 = t24367+t24368+1.0;
                double t24370 = t24365*t24366*3.0;
                double t24371 = gcab*t24362*t24365*t24366;
                double t24372 = gcab*t24362*3.0;
                double t24373 = t24370+t24371+t24372+1.0;
                double t24374 = c0p*t24302*t24304*2.0;
                double t24375 = b1f*t24314;
                double t24376 = b3f*t24315;
                double t24377 = b4f*t24316*t24291;
                double t24378 = b2f*c*t24312;
                double t24379 = t24375+t24376+t24377+t24378;
                double t24380 = 1/t24379;
                double t24381 = t24311*t24380*(1.0/2.0);
                double t24382 = t24381+1.0;
                double t24383 = log(t24382);
                double t24384 = a1f*c*t24312;
                double t24385 = t24384+1.0;
                double t24386 = t24328-c0f*t24383*t24385*2.0;
                double t24387 = t24328-t24310*t24307*t24386;
                double t24388 = gcaa*gcaa;
                double t24389 = 1/pow(rho_b[index],1.6E1/3.0);
                double t24390 = gamma_bb[index]*gamma_bb[index];
                double t24391 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t24392 = gamma_bb[index]*gcaa*t24358;
                double t24393 = t24392+1.0;
                double t24394 = gamma_bb[index]*gcaa*t24358*3.0;
                double t24395 = gamma_bb[index]*gcaa*t24390*t24391*t24388;
                double t24396 = t24390*t24388*t24389*3.0;
                double t24397 = t24394+t24395+t24396+1.0;
                double t24398 = gamma_bb[index]*gcaa*t24358*2.0;
                double t24399 = t24390*t24388*t24389;
                double t24400 = t24398+t24399+1.0;
                double t24401 = pow(rho_b[index],5.0/3.0);
                double t24402 = 1/tau_b[index];
                double t24403 = C_k*t24401*t24402;
                double t24404 = t24403-1.0;
                double t24405 = t24404*t24404;
                double t24406 = t24403+1.0;
                double t24407 = t24405*t24405;
                double t24408 = gx*gx;
                double t24409 = gamma_bb[index]*gx*t24358;
                double t24410 = t24409+1.0;
                double t24411 = gamma_bb[index]*gx*t24358*3.0;
                double t24412 = gamma_bb[index]*gx*t24390*t24408*t24391;
                double t24413 = t24390*t24408*t24389*3.0;
                double t24414 = t24411+t24412+t24413+1.0;
                double t24415 = gamma_bb[index]*gx*t24358*2.0;
                double t24416 = t24390*t24408*t24389;
                double t24417 = t24415+t24416+1.0;
                double t24418 = 1/t24410;
                double t24419 = 1/t24417;
                double t24420 = 1/t24414;
                double t24421 = 1/(t24410*t24410);
                double t24422 = gx*t24358*3.0;
                double t24423 = gamma_bb[index]*t24408*t24389*6.0;
                double t24424 = gx*t24390*t24408*t24391*3.0;
                double t24425 = t24422+t24423+t24424;
                double t24426 = 1/(t24414*t24414);
                double t24427 = gx*t24358*2.0;
                double t24428 = gamma_bb[index]*t24408*t24389*2.0;
                double t24429 = t24427+t24428;
                double t24430 = 1/(t24417*t24417);
                v_gamma_bb_[index] = (rho_b[index]*t24387+rho_a[index]*(t24374-t24310*t24307*(t24374-c0f*log((t24311* \
                   (1.0/2.0))/(b1f*t24289+b3f*t24290+b2f*c*t24287+b4f*t24291*t24292)+1.0)*(a1f*c*t24287+1.0)*2.0))-t24329* \
                   (t24346-t24310*t24351*t24352*t24357*(t24346-c0f*log((t24311*(1.0/2.0))/(b1f*t24332+b3f*t24333+b2f* \
                   c*t24330+b4f*t24334*t24291)+1.0)*(a1f*c*t24330+1.0)*2.0)+(Aa*t24310*t24357*log((1.0/2.0)/(Aa*(b1a* \
                   t24332+b3a*t24333+b2a*c*t24330+b4a*t24334*t24291))+1.0)*(t24351*t24352-1.0)*(a1a*c*t24330+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t24358*(1.0/2.0))/t24364-ccab2*t24365*t24366*1/(t24369*t24369)*(gcab*t24358+ \
                   t24362*t24365*t24358)-ccab1*t24362*1/(t24364*t24364)*t24365*t24358*(1.0/2.0)+(ccab2*t24362*t24365* \
                   t24358)/t24369+(ccab3*gcab*t24365*t24366*t24358*(3.0/2.0))/t24373-ccab3*gcab*t24362*1/(t24373*t24373) \
                   *t24365*t24366*(gcab*t24358*(3.0/2.0)+t24362*t24365*t24358*3.0+gcab*t24365*t24366*t24358*(3.0/2.0) \
                   ))-rho_b[index]*t24387*((ccaa1*gcaa*t24358)/t24393+(ccaa2*gamma_bb[index]*t24388*t24389*2.0)/t24400- \
                   ccaa1*gamma_bb[index]*1/(t24393*t24393)*t24388*t24389-ccaa2*1/(t24400*t24400)*t24390*t24388*t24389* \
                   (gcaa*t24358*2.0+gamma_bb[index]*t24388*t24389*2.0)+(ccaa3*gcaa*t24390*t24391*t24388*3.0)/t24397-ccaa3* \
                   gamma_bb[index]*gcaa*t24390*t24391*t24388*1/(t24397*t24397)*(gcaa*t24358*3.0+gamma_bb[index]*t24388* \
                   t24389*6.0+gcaa*t24390*t24391*t24388*3.0))-c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((t24404/t24406-t24404* \
                   t24405*1/(t24406*t24406*t24406)*2.0+t24404*1/(t24406*t24406*t24406*t24406*t24406)*t24407)*(cxnl1*gx* \
                   t24418*t24358-cxnl1*gamma_bb[index]*t24421*t24408*t24389+cxnl2*gamma_bb[index]*t24408*t24419*t24389* \
                   2.0-cxnl2*t24430*t24390*t24408*t24429*t24389+cxnl3*gx*t24420*t24390*t24408*t24391*3.0-cxnl3*gamma_bb[index]* \
                   gx*t24425*t24390*t24408*t24426*t24391)+cx1*gx*t24418*t24358-cx1*gamma_bb[index]*t24421*t24408*t24389+ \
                   cx2*gamma_bb[index]*t24408*t24419*t24389*2.0-cx2*t24430*t24390*t24408*t24429*t24389+cx3*gx*t24420* \
                   t24390*t24408*t24391*3.0-cx3*gamma_bb[index]*gx*t24425*t24390*t24408*t24426*t24391);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27231 = 1/pow(rho_b[index],1.0/3.0);
                double t27232 = c*t27231;
                double t27233 = sqrt(t27232);
                double t27234 = pow(t27232,3.0/2.0);
                double t27235 = c*c;
                double t27236 = 1/pow(rho_b[index],2.0/3.0);
                double t27237 = 1/c0p;
                double t27238 = b1p*t27233;
                double t27239 = b3p*t27234;
                double t27240 = b4p*t27235*t27236;
                double t27241 = b2p*c*t27231;
                double t27242 = t27240+t27241+t27238+t27239;
                double t27243 = 1/t27242;
                double t27244 = t27243*t27237*(1.0/2.0);
                double t27245 = t27244+1.0;
                double t27246 = log(t27245);
                double t27247 = a1p*c*t27231;
                double t27248 = t27247+1.0;
                double t27249 = 1/pow(rho_b[index],8.0/3.0);
                double t27250 = gcaa*gcaa;
                double t27251 = 1/pow(rho_b[index],1.6E1/3.0);
                double t27252 = gamma_bb[index]*gamma_bb[index];
                double t27253 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t27254 = gamma_bb[index]*gcaa*t27249;
                double t27255 = t27254+1.0;
                double t27256 = gamma_bb[index]*gcaa*t27249*3.0;
                double t27257 = gamma_bb[index]*gcaa*t27250*t27252*t27253;
                double t27258 = t27250*t27251*t27252*3.0;
                double t27259 = t27256+t27257+t27258+1.0;
                double t27260 = gamma_bb[index]*gcaa*t27249*2.0;
                double t27261 = t27250*t27251*t27252;
                double t27262 = t27260+t27261+1.0;
                double t27263 = pow(rho_b[index],5.0/3.0);
                double t27264 = 1/tau_b[index];
                double t27265 = C_k*t27263*t27264;
                double t27266 = t27265-1.0;
                double t27267 = t27266*t27266;
                double t27268 = t27265+1.0;
                double t27269 = t27267*t27267;
                double t27270 = gx*gx;
                double t27271 = gamma_bb[index]*gx*t27249;
                double t27272 = t27271+1.0;
                double t27273 = gamma_bb[index]*gx*t27249*3.0;
                double t27274 = gamma_bb[index]*gx*t27252*t27270*t27253;
                double t27275 = t27251*t27252*t27270*3.0;
                double t27276 = t27273+t27274+t27275+1.0;
                double t27277 = gamma_bb[index]*gx*t27249*2.0;
                double t27278 = t27251*t27252*t27270;
                double t27279 = t27277+t27278+1.0;
                double t27280 = 1/t27272;
                double t27281 = 1/t27279;
                double t27282 = 1/t27276;
                double t27283 = 1/(t27272*t27272);
                double t27284 = gx*t27249*3.0;
                double t27285 = gamma_bb[index]*t27251*t27270*6.0;
                double t27286 = gx*t27252*t27270*t27253*3.0;
                double t27287 = t27284+t27285+t27286;
                double t27288 = 1/(t27276*t27276);
                double t27289 = gx*t27249*2.0;
                double t27290 = gamma_bb[index]*t27251*t27270*2.0;
                double t27291 = t27290+t27289;
                double t27292 = 1/(t27279*t27279);
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t27233+ \
                   b3f*t27234+b2f*c*t27231+b4f*t27235*t27236))+1.0)*(a1f*c*t27231+1.0)*2.0-c0p*t27246*t27248*2.0))/(two_13* \
                   2.0-2.0)+c0p*t27246*t27248*2.0)*((ccaa1*gcaa*t27249)/t27255+(ccaa2*gamma_bb[index]*t27250*t27251*2.0) \
                   /t27262-ccaa1*gamma_bb[index]*t27250*t27251*1/(t27255*t27255)-ccaa2*t27250*t27251*t27252*1/(t27262* \
                   t27262)*(gcaa*t27249*2.0+gamma_bb[index]*t27250*t27251*2.0)+(ccaa3*gcaa*t27250*t27252*t27253*3.0)/ \
                   t27259-ccaa3*gamma_bb[index]*gcaa*t27250*t27252*t27253*1/(t27259*t27259)*(gcaa*t27249*3.0+gamma_bb[index]* \
                   t27250*t27251*6.0+gcaa*t27250*t27252*t27253*3.0))-c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((t27266/t27268- \
                   t27266*t27267*1/(t27268*t27268*t27268)*2.0+t27266*1/(t27268*t27268*t27268*t27268*t27268)*t27269)*(cxnl1* \
                   gx*t27280*t27249+cxnl2*gamma_bb[index]*t27251*t27270*t27281*2.0-cxnl1*gamma_bb[index]*t27251*t27270* \
                   t27283-cxnl2*t27251*t27252*t27270*t27291*t27292+cxnl3*gx*t27252*t27270*t27253*t27282*3.0-cxnl3*gamma_bb[index]* \
                   gx*t27252*t27270*t27253*t27287*t27288)+cx1*gx*t27280*t27249-cx1*gamma_bb[index]*t27251*t27270*t27283+ \
                   cx2*gamma_bb[index]*t27251*t27270*t27281*2.0-cx2*t27251*t27252*t27270*t27291*t27292+cx3*gx*t27252* \
                   t27270*t27253*t27282*3.0-cx3*gamma_bb[index]*gx*t27252*t27270*t27253*t27287*t27288);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t24432 = 1/pow(rho_a[index],8.0/3.0);
                double t24433 = gamma_aa[index]*gamma_aa[index];
                double t24434 = gx*gx;
                double t24435 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t24436 = 1/pow(rho_a[index],1.6E1/3.0);
                double t24437 = pow(rho_a[index],5.0/3.0);
                double t24438 = 1/(tau_a[index]*tau_a[index]);
                double t24439 = 1/tau_a[index];
                double t24440 = C_k*t24437*t24439;
                double t24441 = t24440-1.0;
                double t24442 = t24440+1.0;
                double t24443 = t24441*t24441;
                double t24444 = t24443*t24443;
                v_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t24433*t24434*t24436)/(gamma_aa[index]* \
                   gx*t24432*2.0+t24433*t24434*t24436+1.0)+(cxnl1*gamma_aa[index]*gx*t24432)/(gamma_aa[index]*gx*t24432+ \
                   1.0)+(cxnl3*gamma_aa[index]*gx*t24433*t24434*t24435)/(gamma_aa[index]*gx*t24432*3.0+t24433*t24434* \
                   t24436*3.0+gamma_aa[index]*gx*t24433*t24434*t24435+1.0))*((C_k*t24437*t24438)/t24442-C_k*t24441*1/ \
                   (t24442*t24442)*t24437*t24438-C_k*1/(t24442*t24442*t24442)*t24443*t24437*t24438*6.0+C_k*1/(t24442* \
                   t24442*t24442*t24442*t24442)*t24444*t24437*t24438*5.0+C_k*t24441*1/(t24442*t24442*t24442*t24442)*t24443* \
                   t24437*t24438*6.0-C_k*t24441*1/(t24442*t24442*t24442*t24442*t24442*t24442)*t24444*t24437*t24438*5.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                double t28065 = 1/pow(rho_a[index],8.0/3.0);
                double t28066 = gamma_aa[index]*gamma_aa[index];
                double t28067 = gx*gx;
                double t28068 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28069 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28070 = pow(rho_a[index],5.0/3.0);
                double t28071 = 1/(tau_a[index]*tau_a[index]);
                double t28072 = 1/tau_a[index];
                double t28073 = C_k*t28070*t28072;
                double t28074 = t28073-1.0;
                double t28075 = t28073+1.0;
                double t28076 = t28074*t28074;
                double t28077 = t28076*t28076;
                v_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t28066*t28067*t28069)/(gamma_aa[index]* \
                   gx*t28065*2.0+t28066*t28067*t28069+1.0)+(cxnl1*gamma_aa[index]*gx*t28065)/(gamma_aa[index]*gx*t28065+ \
                   1.0)+(cxnl3*gamma_aa[index]*gx*t28066*t28067*t28068)/(gamma_aa[index]*gx*t28065*3.0+t28066*t28067* \
                   t28069*3.0+gamma_aa[index]*gx*t28066*t28067*t28068+1.0))*((C_k*t28070*t28071)/t28075-C_k*t28070*t28071* \
                   t28074*1/(t28075*t28075)-C_k*t28070*t28071*1/(t28075*t28075*t28075)*t28076*6.0+C_k*t28070*t28071*1/ \
                   (t28075*t28075*t28075*t28075*t28075)*t28077*5.0+C_k*t28070*t28071*t28074*1/(t28075*t28075*t28075*t28075) \
                   *t28076*6.0-C_k*t28070*t28071*t28074*1/(t28075*t28075*t28075*t28075*t28075*t28075)*t28077*5.0);
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t24446 = 1/pow(rho_b[index],8.0/3.0);
                double t24447 = gamma_bb[index]*gamma_bb[index];
                double t24448 = gx*gx;
                double t24449 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t24450 = 1/pow(rho_b[index],1.6E1/3.0);
                double t24451 = pow(rho_b[index],5.0/3.0);
                double t24452 = 1/(tau_b[index]*tau_b[index]);
                double t24453 = 1/tau_b[index];
                double t24454 = C_k*t24451*t24453;
                double t24455 = t24454-1.0;
                double t24456 = t24454+1.0;
                double t24457 = t24455*t24455;
                double t24458 = t24457*t24457;
                v_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t24450*t24447*t24448)/(gamma_bb[index]* \
                   gx*t24446*2.0+t24450*t24447*t24448+1.0)+(cxnl1*gamma_bb[index]*gx*t24446)/(gamma_bb[index]*gx*t24446+ \
                   1.0)+(cxnl3*gamma_bb[index]*gx*t24447*t24448*t24449)/(gamma_bb[index]*gx*t24446*3.0+t24450*t24447* \
                   t24448*3.0+gamma_bb[index]*gx*t24447*t24448*t24449+1.0))*((C_k*t24451*t24452)/t24456-C_k*t24451*t24452* \
                   t24455*1/(t24456*t24456)-C_k*t24451*t24452*1/(t24456*t24456*t24456)*t24457*6.0+C_k*t24451*t24452*1/ \
                   (t24456*t24456*t24456*t24456*t24456)*t24458*5.0+C_k*t24451*t24452*t24455*1/(t24456*t24456*t24456*t24456) \
                   *t24457*6.0-C_k*t24451*t24452*t24455*1/(t24456*t24456*t24456*t24456*t24456*t24456)*t24458*5.0);
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27295 = 1/pow(rho_b[index],8.0/3.0);
                double t27296 = gamma_bb[index]*gamma_bb[index];
                double t27297 = gx*gx;
                double t27298 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t27299 = 1/pow(rho_b[index],1.6E1/3.0);
                double t27300 = pow(rho_b[index],5.0/3.0);
                double t27301 = 1/(tau_b[index]*tau_b[index]);
                double t27302 = 1/tau_b[index];
                double t27303 = C_k*t27300*t27302;
                double t27304 = t27303-1.0;
                double t27305 = t27303+1.0;
                double t27306 = t27304*t27304;
                double t27307 = t27306*t27306;
                v_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t27296*t27297*t27299)/(gamma_bb[index]* \
                   gx*t27295*2.0+t27296*t27297*t27299+1.0)+(cxnl1*gamma_bb[index]*gx*t27295)/(gamma_bb[index]*gx*t27295+ \
                   1.0)+(cxnl3*gamma_bb[index]*gx*t27296*t27297*t27298)/(gamma_bb[index]*gx*t27295*3.0+t27296*t27297* \
                   t27299*3.0+gamma_bb[index]*gx*t27296*t27297*t27298+1.0))*((C_k*t27300*t27301)/t27305-C_k*t27300*t27301* \
                   t27304*1/(t27305*t27305)-C_k*t27300*t27301*1/(t27305*t27305*t27305)*t27306*6.0+C_k*t27300*t27301*1/ \
                   (t27305*t27305*t27305*t27305*t27305)*t27307*5.0+C_k*t27300*t27301*t27304*1/(t27305*t27305*t27305*t27305) \
                   *t27306*6.0-C_k*t27300*t27301*t27304*1/(t27305*t27305*t27305*t27305*t27305*t27305)*t27307*5.0);
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t24460 = gcab*gcab;
            double t24464 = 1/pow(rho_a[index],8.0/3.0);
            double t24465 = gamma_aa[index]*t24464*(1.0/2.0);
            double t24466 = 1/pow(rho_b[index],8.0/3.0);
            double t24467 = gamma_bb[index]*t24466*(1.0/2.0);
            double t24461 = t24465+t24467;
            double t24462 = t24461*t24461;
            double t24463 = 1/pow(rho_a[index],1.1E1/3.0);
            double t24468 = gcab*t24461;
            double t24469 = t24468+1.0;
            double t24470 = t24460*t24462;
            double t24471 = gcab*t24461*2.0;
            double t24472 = t24470+t24471+1.0;
            double t24473 = t24460*t24462*3.0;
            double t24474 = gcab*t24460*t24461*t24462;
            double t24475 = gcab*t24461*3.0;
            double t24476 = t24473+t24474+t24475+1.0;
            double t24477 = rho_a[index]+rho_b[index];
            double t24478 = 1/pow(t24477,1.0/3.0);
            double t24479 = c*t24478;
            double t24480 = sqrt(t24479);
            double t24481 = b1p*t24480;
            double t24482 = pow(t24479,3.0/2.0);
            double t24483 = b3p*t24482;
            double t24484 = c*c;
            double t24485 = 1/pow(t24477,2.0/3.0);
            double t24486 = b4p*t24484*t24485;
            double t24487 = b2p*c*t24478;
            double t24488 = t24481+t24483+t24486+t24487;
            double t24489 = 1/pow(t24477,4.0/3.0);
            double t24490 = 1/c0p;
            double t24491 = 1/t24488;
            double t24492 = t24490*t24491*(1.0/2.0);
            double t24493 = t24492+1.0;
            double t24494 = a1p*c*t24478;
            double t24495 = t24494+1.0;
            double t24496 = rho_a[index]-rho_b[index];
            double t24497 = t24496*t24496;
            double t24498 = 1/t24477;
            double t24499 = t24496*t24498;
            double t24500 = two_13*2.0;
            double t24501 = t24500-2.0;
            double t24502 = 1/t24501;
            double t24503 = 1/c0f;
            double t24504 = b1f*t24480;
            double t24505 = b3f*t24482;
            double t24506 = b4f*t24484*t24485;
            double t24507 = b2f*c*t24478;
            double t24508 = t24504+t24505+t24506+t24507;
            double t24509 = 1/t24508;
            double t24510 = t24503*t24509*(1.0/2.0);
            double t24511 = t24510+1.0;
            double t24512 = log(t24511);
            double t24513 = a1f*c*t24478;
            double t24514 = t24513+1.0;
            double t24515 = log(t24493);
            double t24525 = c0f*t24512*t24514*2.0;
            double t24526 = c0p*t24515*t24495*2.0;
            double t24516 = t24525-t24526;
            double t24517 = t24499+1.0;
            double t24518 = pow(t24517,4.0/3.0);
            double t24519 = -t24499+1.0;
            double t24520 = pow(t24519,4.0/3.0);
            double t24521 = t24520+t24518-2.0;
            double t24522 = 1/(t24477*t24477);
            double t24553 = t24522*t24496;
            double t24523 = -t24553+t24498;
            double t24524 = 1/(t24477*t24477*t24477*t24477);
            double t24527 = t24497*t24497;
            double t24528 = 1/pow(t24477,5.0/3.0);
            double t24529 = 1/sqrt(t24479);
            double t24530 = 1/t24493;
            double t24531 = 1/(t24488*t24488);
            double t24532 = b4p*t24528*t24484*(2.0/3.0);
            double t24533 = b2p*c*t24489*(1.0/3.0);
            double t24534 = b1p*c*t24529*t24489*(1.0/6.0);
            double t24535 = b3p*c*t24480*t24489*(1.0/2.0);
            double t24536 = t24532+t24533+t24534+t24535;
            double t24537 = t24530*t24531*t24536*t24495;
            double t24538 = 1/(t24477*t24477*t24477*t24477*t24477);
            double t24539 = 1/d2fz0;
            double t24540 = 1/Aa;
            double t24541 = b1a*t24480;
            double t24542 = b3a*t24482;
            double t24543 = b4a*t24484*t24485;
            double t24544 = b2a*c*t24478;
            double t24545 = t24541+t24542+t24543+t24544;
            double t24546 = 1/t24545;
            double t24547 = t24540*t24546*(1.0/2.0);
            double t24548 = t24547+1.0;
            double t24549 = log(t24548);
            double t24550 = a1a*c*t24478;
            double t24551 = t24550+1.0;
            double t24552 = pow(t24517,1.0/3.0);
            double t24554 = t24523*t24552*(4.0/3.0);
            double t24555 = pow(t24519,1.0/3.0);
            double t24618 = t24523*t24555*(4.0/3.0);
            double t24556 = t24554-t24618;
            double t24557 = t24524*t24527;
            double t24558 = t24557-1.0;
            double t24559 = 1/pow(rho_a[index],1.0/3.0);
            double t24560 = c*t24559;
            double t24561 = sqrt(t24560);
            double t24562 = b1f*t24561;
            double t24563 = pow(t24560,3.0/2.0);
            double t24564 = b3f*t24563;
            double t24565 = 1/pow(rho_a[index],2.0/3.0);
            double t24566 = b4f*t24484*t24565;
            double t24567 = b2f*c*t24559;
            double t24568 = t24562+t24564+t24566+t24567;
            double t24569 = 1/pow(rho_a[index],4.0/3.0);
            double t24570 = b1p*t24561;
            double t24571 = b3p*t24563;
            double t24572 = b4p*t24484*t24565;
            double t24573 = b2p*c*t24559;
            double t24574 = t24570+t24571+t24572+t24573;
            double t24575 = 1/pow(rho_a[index],5.0/3.0);
            double t24576 = 1/sqrt(t24560);
            double t24577 = 1/t24568;
            double t24578 = t24503*t24577*(1.0/2.0);
            double t24579 = t24578+1.0;
            double t24580 = 1/t24574;
            double t24581 = t24490*t24580*(1.0/2.0);
            double t24582 = t24581+1.0;
            double t24583 = a1p*c*t24559;
            double t24584 = t24583+1.0;
            double t24585 = 1/t24582;
            double t24586 = 1/(t24574*t24574);
            double t24587 = b4p*t24484*t24575*(2.0/3.0);
            double t24588 = b2p*c*t24569*(1.0/3.0);
            double t24589 = b1p*c*t24576*t24569*(1.0/6.0);
            double t24590 = b3p*c*t24561*t24569*(1.0/2.0);
            double t24591 = t24590+t24587+t24588+t24589;
            double t24592 = t24591*t24584*t24585*t24586;
            double t24593 = log(t24582);
            double t24594 = pow(2.0,1.0/3.0);
            double t24595 = t24594*2.0;
            double t24596 = t24595-2.0;
            double t24597 = log(t24579);
            double t24598 = a1f*c*t24559;
            double t24599 = t24598+1.0;
            double t24600 = 1/t24579;
            double t24601 = 1/(t24568*t24568);
            double t24602 = b4f*t24484*t24575*(2.0/3.0);
            double t24603 = b2f*c*t24569*(1.0/3.0);
            double t24604 = b1f*c*t24576*t24569*(1.0/6.0);
            double t24605 = b3f*c*t24561*t24569*(1.0/2.0);
            double t24606 = t24602+t24603+t24604+t24605;
            double t24607 = a1f*c*c0f*t24569*t24597*(2.0/3.0);
            double t24608 = a1p*c*c0p*t24593*t24569*(2.0/3.0);
            double t24609 = gamma_aa[index]*gamma_aa[index];
            double t24610 = gcaa*gcaa;
            double t24611 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t24612 = 1/pow(rho_a[index],1.6E1/3.0);
            double t24613 = 1/t24472;
            double t24614 = 1/t24476;
            double t24615 = 1/t24469;
            double t24616 = 1/pow(t24477,7.0/3.0);
            double t24617 = 1/pow(t24477,8.0/3.0);
            double t24619 = 1/t24511;
            double t24620 = 1/(t24508*t24508);
            double t24621 = b4f*t24528*t24484*(2.0/3.0);
            double t24622 = b2f*c*t24489*(1.0/3.0);
            double t24623 = b1f*c*t24529*t24489*(1.0/6.0);
            double t24624 = b3f*c*t24480*t24489*(1.0/2.0);
            double t24625 = t24621+t24622+t24623+t24624;
            double t24626 = a1f*c*c0f*t24512*t24489*(2.0/3.0);
            double t24628 = t24620*t24514*t24625*t24619;
            double t24629 = a1p*c*c0p*t24515*t24489*(2.0/3.0);
            double t24627 = t24626+t24537-t24628-t24629;
            double t24630 = t24536*t24536;
            double t24631 = 1/pow(t24479,3.0/2.0);
            double t24632 = b4p*t24617*t24484*(1.0E1/9.0);
            double t24633 = b2p*c*t24616*(4.0/9.0);
            double t24634 = b1p*c*t24616*t24529*(2.0/9.0);
            double t24635 = b3p*c*t24480*t24616*(2.0/3.0);
            double t24636 = b3p*t24617*t24484*t24529*(1.0/1.2E1);
            double t24637 = t24632+t24633+t24634+t24635+t24636-b1p*t24631*t24617*t24484*(1.0/3.6E1);
            double t24638 = 1/(t24488*t24488*t24488);
            double t24639 = t24530*t24630*t24638*t24495*2.0;
            double t24640 = t24625*t24625;
            double t24641 = 1/(t24493*t24493);
            double t24642 = 1/(t24488*t24488*t24488*t24488);
            double t24643 = t24522*2.0;
            double t24644 = 1/(t24477*t24477*t24477);
            double t24651 = t24644*t24496*2.0;
            double t24645 = -t24651+t24643;
            double t24646 = t24523*t24523;
            double t24647 = a1p*c*c0p*t24515*t24616*(8.0/9.0);
            double t24648 = 1/(t24477*t24477*t24477*t24477*t24477*t24477);
            double t24649 = t24527*t24538*4.0;
            double t24659 = t24524*t24496*t24497*4.0;
            double t24650 = t24649-t24659;
            double t24652 = t24555*t24645*(4.0/3.0);
            double t24653 = 1/pow(t24517,2.0/3.0);
            double t24654 = t24653*t24646*(4.0/9.0);
            double t24655 = 1/pow(t24519,2.0/3.0);
            double t24656 = t24646*t24655*(4.0/9.0);
            double t24657 = t24652+t24654+t24656-t24552*t24645*(4.0/3.0);
            double t24658 = 1/t24548;
            double t24660 = 1/(t24545*t24545);
            double t24661 = b4a*t24528*t24484*(2.0/3.0);
            double t24662 = b2a*c*t24489*(1.0/3.0);
            double t24663 = b1a*c*t24529*t24489*(1.0/6.0);
            double t24664 = b3a*c*t24480*t24489*(1.0/2.0);
            double t24665 = t24661+t24662+t24663+t24664;
            double t24666 = t24665*t24665;
            double t24667 = t24530*t24531*t24637*t24495;
            double t24668 = 1/pow(rho_a[index],7.0/3.0);
            double t24669 = 1/pow(t24560,3.0/2.0);
            double t24670 = t24606*t24606;
            double t24671 = t24591*t24591;
            double t24672 = 1/(t24574*t24574*t24574);
            double t24673 = t24671*t24672*t24584*t24585*2.0;
            double t24674 = b4p*t24464*t24484*(1.0E1/9.0);
            double t24675 = b2p*c*t24668*(4.0/9.0);
            double t24676 = b3p*t24464*t24484*t24576*(1.0/1.2E1);
            double t24677 = b1p*c*t24576*t24668*(2.0/9.0);
            double t24678 = b3p*c*t24561*t24668*(2.0/3.0);
            double t24833 = b1p*t24464*t24484*t24669*(1.0/3.6E1);
            double t24679 = -t24833+t24674+t24675+t24676+t24677+t24678;
            double t24680 = 1/(t24582*t24582);
            double t24681 = 1/(t24574*t24574*t24574*t24574);
            double t24682 = a1p*c*c0p*t24593*t24668*(8.0/9.0);
            double t24683 = t24630*t24641*t24642*t24490*t24495*(1.0/2.0);
            double t24814 = t24600*t24601*t24606*t24599;
            double t24684 = t24607-t24814-t24608+t24592;
            double t24685 = c0f*t24597*t24599*2.0;
            double t24687 = c0p*t24584*t24593*2.0;
            double t24686 = t24685-t24687;
            double t24688 = 1/pow(rho_b[index],1.0/3.0);
            double t24689 = c*t24688;
            double t24690 = sqrt(t24689);
            double t24691 = pow(t24689,3.0/2.0);
            double t24692 = 1/pow(rho_b[index],2.0/3.0);
            double t24693 = b1p*t24690;
            double t24694 = b3p*t24691;
            double t24695 = b4p*t24484*t24692;
            double t24696 = b2p*c*t24688;
            double t24697 = t24693+t24694+t24695+t24696;
            double t24698 = 1/t24697;
            double t24699 = t24490*t24698*(1.0/2.0);
            double t24700 = t24699+1.0;
            double t24701 = log(t24700);
            double t24702 = a1p*c*t24688;
            double t24703 = t24702+1.0;
            double t24704 = c0p*t24701*t24703*2.0;
            double t24705 = t24502*t24521*t24524*t24516*t24527;
            double t24706 = Aa*t24502*t24521*t24551*t24539*t24549*t24558*2.0;
            double t24707 = 1/(t24469*t24469);
            double t24708 = 1/pow(rho_a[index],2.2E1/3.0);
            double t24709 = gamma_aa[index]*gcab*t24463*(8.0/3.0);
            double t24710 = gamma_aa[index]*t24460*t24461*t24463*(8.0/3.0);
            double t24711 = t24710+t24709;
            double t24712 = 1/(t24476*t24476);
            double t24713 = 1/pow(rho_a[index],1.4E1/3.0);
            double t24714 = 1/(t24472*t24472);
            double t24715 = gamma_aa[index]*gcab*t24463*4.0;
            double t24716 = gamma_aa[index]*gcab*t24460*t24462*t24463*4.0;
            double t24717 = gamma_aa[index]*t24460*t24461*t24463*8.0;
            double t24718 = t24715+t24716+t24717;
            double t24719 = pow(rho_a[index],5.0/3.0);
            double t24720 = 1/tau_a[index];
            double t24721 = C_k*t24720*t24719;
            double t24722 = t24721-1.0;
            double t24723 = t24722*t24722;
            double t24724 = t24721+1.0;
            double t24725 = t24723*t24723;
            double t24726 = gx*gx;
            double t24727 = gamma_aa[index]*gx*t24464;
            double t24728 = t24727+1.0;
            double t24729 = 1/t24728;
            double t24730 = gamma_aa[index]*gx*t24464*3.0;
            double t24731 = gamma_aa[index]*gx*t24611*t24609*t24726;
            double t24732 = t24612*t24609*t24726*3.0;
            double t24733 = t24730+t24731+t24732+1.0;
            double t24734 = 1/t24733;
            double t24735 = gamma_aa[index]*gx*t24464*2.0;
            double t24736 = t24612*t24609*t24726;
            double t24737 = t24735+t24736+1.0;
            double t24738 = 1/t24737;
            double t24739 = cxnl1*gamma_aa[index]*gx*t24464*t24729;
            double t24740 = cxnl3*gamma_aa[index]*gx*t24611*t24734*t24609*t24726;
            double t24741 = cxnl2*t24612*t24609*t24726*t24738;
            double t24742 = cxnl0+t24740+t24741+t24739;
            double t24743 = 1/t24724;
            double t24744 = pow(rho_a[index],4.0/3.0);
            double t24745 = 1/(t24724*t24724*t24724);
            double t24746 = 1/(t24724*t24724*t24724*t24724*t24724);
            double t24747 = C_k*C_k;
            double t24748 = 1/(tau_a[index]*tau_a[index]);
            double t24749 = 1/(t24724*t24724*t24724*t24724);
            double t24750 = 1/(t24724*t24724*t24724*t24724*t24724*t24724);
            double t24751 = 1/(t24724*t24724);
            double t24752 = t24722*t24743;
            double t24753 = t24722*t24725*t24746;
            double t24781 = t24722*t24723*t24745*2.0;
            double t24754 = t24752+t24753-t24781;
            double t24755 = 1/pow(rho_a[index],1.0E1);
            double t24758 = 1/pow(rho_a[index],1.9E1/3.0);
            double t24764 = gamma_aa[index]*gx*t24463*(1.6E1/3.0);
            double t24765 = t24609*t24726*t24758*(1.6E1/3.0);
            double t24756 = t24764+t24765;
            double t24757 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t24759 = 1/(t24733*t24733);
            double t24760 = gamma_aa[index]*gx*t24463*8.0;
            double t24761 = gamma_aa[index]*gx*t24609*t24726*t24757*8.0;
            double t24762 = t24609*t24726*t24758*1.6E1;
            double t24763 = t24760+t24761+t24762;
            double t24766 = 1/(t24737*t24737);
            double t24767 = pow(rho_a[index],2.0/3.0);
            double t24768 = 1/(t24728*t24728);
            double t24769 = 1/(t24728*t24728*t24728);
            double t24770 = t24756*t24756;
            double t24771 = 1/(t24737*t24737*t24737);
            double t24772 = gamma_aa[index]*gx*t24713*(8.8E1/3.0);
            double t24773 = gamma_aa[index]*gx*t24609*t24726*t24755*7.2E1;
            double t24774 = t24609*t24708*t24726*(3.04E2/3.0);
            double t24775 = t24772+t24773+t24774;
            double t24776 = t24763*t24763;
            double t24777 = 1/(t24733*t24733*t24733);
            double t24778 = gamma_aa[index]*gx*t24713*(1.76E2/9.0);
            double t24779 = t24609*t24708*t24726*(3.04E2/9.0);
            double t24780 = t24778+t24779;
            double t24782 = cxnl1*gamma_aa[index]*gx*t24463*t24729*(8.0/3.0);
            double t24783 = cxnl3*gamma_aa[index]*gx*t24734*t24609*t24726*t24757*8.0;
            double t24784 = cxnl2*t24609*t24726*t24738*t24758*(1.6E1/3.0);
            double t24785 = t24782+t24783+t24784-cxnl1*t24609*t24726*t24758*t24768*(8.0/3.0)-cxnl2*t24612*t24609* \
               t24726*t24756*t24766-cxnl3*gamma_aa[index]*gx*t24611*t24609*t24726*t24763*t24759;
            double t24786 = C_k*t24720*t24743*t24767*(5.0/3.0);
            double t24787 = C_k*t24720*t24722*t24723*t24749*t24767*1.0E1;
            double t24788 = C_k*t24720*t24725*t24746*t24767*(2.5E1/3.0);
            double t24789 = t24786+t24787+t24788-C_k*t24720*t24722*t24751*t24767*(5.0/3.0)-C_k*t24720*t24723* \
               t24745*t24767*1.0E1-C_k*t24720*t24722*t24750*t24725*t24767*(2.5E1/3.0);
            double t24790 = t24502*t24596*t24686;
            double t24791 = t24790+t24687;
            double t24792 = gamma_aa[index]*gcaa*t24464;
            double t24793 = t24792+1.0;
            double t24794 = 1/t24793;
            double t24795 = gamma_aa[index]*gcaa*t24464*3.0;
            double t24796 = gamma_aa[index]*gcaa*t24610*t24611*t24609;
            double t24797 = t24610*t24612*t24609*3.0;
            double t24798 = t24795+t24796+t24797+1.0;
            double t24799 = 1/t24798;
            double t24800 = gamma_aa[index]*gcaa*t24464*2.0;
            double t24801 = t24610*t24612*t24609;
            double t24802 = t24800+t24801+1.0;
            double t24803 = 1/t24802;
            double t24804 = 1/(t24793*t24793);
            double t24805 = gamma_aa[index]*gcaa*t24463*(1.6E1/3.0);
            double t24806 = t24610*t24609*t24758*(1.6E1/3.0);
            double t24807 = t24805+t24806;
            double t24808 = gamma_aa[index]*gcaa*t24463*8.0;
            double t24809 = gamma_aa[index]*gcaa*t24610*t24609*t24757*8.0;
            double t24810 = t24610*t24609*t24758*1.6E1;
            double t24811 = t24810+t24808+t24809;
            double t24812 = 1/(t24798*t24798);
            double t24813 = 1/(t24802*t24802);
            double t24815 = t24502*t24684*t24596;
            double t24816 = ccaa1*gamma_aa[index]*gcaa*t24463*t24794*(8.0/3.0);
            double t24817 = ccaa3*gamma_aa[index]*gcaa*t24610*t24609*t24757*t24799*8.0;
            double t24818 = ccaa2*t24610*t24803*t24609*t24758*(1.6E1/3.0);
            double t24819 = t24816+t24817+t24818-ccaa1*t24610*t24804*t24609*t24758*(8.0/3.0)-ccaa2*t24610*t24612* \
               t24813*t24609*t24807-ccaa3*gamma_aa[index]*gcaa*t24610*t24611*t24811*t24812*t24609;
            double t24820 = t24608+t24815-t24592;
            double t24821 = ccaa1*gamma_aa[index]*gcaa*t24464*t24794;
            double t24822 = ccaa3*gamma_aa[index]*gcaa*t24610*t24611*t24609*t24799;
            double t24823 = ccaa2*t24610*t24612*t24803*t24609;
            double t24824 = ccaa0+t24821+t24822+t24823;
            double t24825 = 1/(t24568*t24568*t24568);
            double t24826 = b4f*t24464*t24484*(1.0E1/9.0);
            double t24827 = b2f*c*t24668*(4.0/9.0);
            double t24828 = b3f*t24464*t24484*t24576*(1.0/1.2E1);
            double t24829 = b1f*c*t24576*t24668*(2.0/9.0);
            double t24830 = b3f*c*t24561*t24668*(2.0/3.0);
            double t24831 = t24830+t24826+t24827+t24828+t24829-b1f*t24464*t24484*t24669*(1.0/3.6E1);
            double t24832 = t24600*t24601*t24831*t24599;
            double t24834 = t24584*t24585*t24586*t24679;
            double t24835 = 1/(t24579*t24579);
            double t24836 = 1/(t24568*t24568*t24568*t24568);
            double t24837 = t24503*t24670*t24835*t24836*t24599*(1.0/2.0);
            double t24838 = t24490*t24671*t24680*t24681*t24584*(1.0/2.0);
            double t24839 = a1f*c*t24600*t24601*t24606*t24569*(2.0/3.0);
            double t24840 = a1p*c*t24591*t24585*t24586*t24569*(2.0/3.0);
            v_rho_a_rho_a_[index] = t24820*t24824*2.0+t24791*t24819*2.0+(ccab1*gamma_aa[index]*gcab*t24615*t24463* \
               (4.0/3.0)-ccab2*t24711*t24460*t24462*t24714+ccab2*gamma_aa[index]*t24460*t24613*t24461*t24463*(8.0/ \
               3.0)-ccab1*gamma_aa[index]*t24460*t24461*t24463*t24707*(4.0/3.0)+ccab3*gamma_aa[index]*gcab*t24460* \
               t24614*t24462*t24463*4.0-ccab3*gcab*t24460*t24712*t24461*t24462*t24718)*(t24705+t24526+t24706+rho_a[index]* \
               (t24608-t24592+t24502*t24596*(t24607+t24592-t24600*t24601*t24606*t24599-a1p*c*c0p*t24593*t24569*(2.0/ \
               3.0)))+t24477*(t24537-a1p*c*c0p*t24515*t24489*(2.0/3.0)-t24502*t24521*t24524*t24527*t24627-t24502* \
               t24521*t24516*t24527*t24538*4.0+t24502*t24524*t24516*t24527*t24556+t24502*t24521*t24524*t24516*t24496* \
               t24497*4.0-Aa*t24502*t24521*t24551*t24650*t24539*t24549*2.0+Aa*t24502*t24551*t24556*t24539*t24549* \
               t24558*2.0+t24502*t24521*t24551*t24660*t24539*t24665*t24558*t24658-Aa*a1a*c*t24502*t24521*t24539*t24549* \
               t24558*t24489*(2.0/3.0))-c0p*t24584*t24593*2.0-t24502*t24596*t24686)*2.0+(rho_a[index]*t24791+rho_b[index]* \
               (t24704-t24502*t24596*(t24704-c0f*log((t24503*(1.0/2.0))/(b1f*t24690+b3f*t24691+b2f*c*t24688+b4f*t24484* \
               t24692)+1.0)*(a1f*c*t24688+1.0)*2.0))-t24477*(t24705+t24526+t24706))*(-ccab2*t24460*t24462*t24714* \
               (gamma_aa[index]*gcab*t24713*(8.8E1/9.0)+t24460*t24609*t24708*(3.2E1/9.0)+gamma_aa[index]*t24460*t24461* \
               t24713*(8.8E1/9.0))+ccab2*(t24711*t24711)*t24460*t24462*1/(t24472*t24472*t24472)*2.0+ccab1*gamma_aa[index]* \
               gcab*t24713*t24615*(4.4E1/9.0)+ccab2*t24460*t24613*t24609*t24708*(3.2E1/9.0)-ccab1*t24460*t24707*t24609* \
               t24708*(3.2E1/9.0)+ccab2*gamma_aa[index]*t24460*t24613*t24461*t24713*(8.8E1/9.0)-ccab1*gamma_aa[index]* \
               t24460*t24461*t24713*t24707*(4.4E1/9.0)+ccab3*gcab*t24460*t24461*t24462*(t24718*t24718)*1/(t24476* \
               t24476*t24476)*2.0+ccab3*gamma_aa[index]*gcab*t24460*t24614*t24713*t24462*(4.4E1/3.0)-ccab2*gamma_aa[index]* \
               t24711*t24460*t24461*t24714*t24463*(1.6E1/3.0)+ccab3*gcab*t24460*t24461*t24614*t24609*t24708*(3.2E1/ \
               3.0)+ccab1*gcab*t24460*t24461*t24609*t24708*1/(t24469*t24469*t24469)*(3.2E1/9.0)-ccab3*gcab*t24460* \
               t24712*t24461*t24462*(gamma_aa[index]*gcab*t24713*(4.4E1/3.0)+t24460*t24609*t24708*(3.2E1/3.0)+gamma_aa[index]* \
               t24460*t24461*t24713*(8.8E1/3.0)+gamma_aa[index]*gcab*t24460*t24713*t24462*(4.4E1/3.0)+gcab*t24460* \
               t24461*t24609*t24708*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t24460*t24712*t24462*t24463*t24718*8.0) \
               -(ccab0+ccab1*gcab*t24461*t24615+ccab2*t24460*t24613*t24462+ccab3*gcab*t24460*t24461*t24614*t24462) \
               *(-t24477*(-t24647+t24683-t24639+t24667+t24502*t24521*t24524*t24527*(t24647-t24683+t24639-t24667-t24514* \
               t24640*1/(t24508*t24508*t24508)*t24619*2.0+t24620*t24514*t24619*(b2f*c*t24616*(4.0/9.0)+b4f*t24617* \
               t24484*(1.0E1/9.0)+b1f*c*t24616*t24529*(2.0/9.0)+b3f*c*t24480*t24616*(2.0/3.0)-b1f*t24631*t24617*t24484* \
               (1.0/3.6E1)+b3f*t24617*t24484*t24529*(1.0/1.2E1))+1/(t24511*t24511)*t24503*t24514*t24640*1/(t24508* \
               t24508*t24508*t24508)*(1.0/2.0)-a1f*c*c0f*t24512*t24616*(8.0/9.0)+a1f*c*t24620*t24625*t24619*t24489* \
               (2.0/3.0)-a1p*c*t24530*t24531*t24536*t24489*(2.0/3.0))-t24502*t24521*t24524*t24516*t24497*1.2E1-t24502* \
               t24521*t24516*t24527*t24648*2.0E1-t24502*t24521*t24527*t24627*t24538*8.0-t24502*t24524*t24516*t24527* \
               t24657+t24502*t24524*t24527*t24627*t24556*2.0+t24502*t24516*t24527*t24538*t24556*8.0+t24502*t24521* \
               t24524*t24627*t24496*t24497*8.0+t24502*t24521*t24516*t24538*t24496*t24497*3.2E1-t24502*t24524*t24516* \
               t24556*t24496*t24497*8.0+a1p*c*t24530*t24531*t24536*t24489*(2.0/3.0)+Aa*t24502*t24551*t24650*t24556* \
               t24539*t24549*4.0-Aa*t24502*t24551*t24539*t24549*t24558*t24657*2.0-Aa*t24502*t24521*t24551*t24539* \
               t24549*(t24524*t24497*1.2E1+t24527*t24648*2.0E1-t24538*t24496*t24497*3.2E1)*2.0+t24502*t24521*t24551* \
               t24650*t24660*t24539*t24665*t24658*2.0-t24502*t24551*t24660*t24556*t24539*t24665*t24558*t24658*2.0- \
               t24502*t24521*t24551*1/(t24545*t24545*t24545)*t24539*t24558*t24666*t24658*2.0+t24502*t24521*t24551* \
               t24660*t24539*t24558*t24658*(b2a*c*t24616*(4.0/9.0)+b4a*t24617*t24484*(1.0E1/9.0)+b1a*c*t24616*t24529* \
               (2.0/9.0)+b3a*c*t24480*t24616*(2.0/3.0)-b1a*t24631*t24617*t24484*(1.0/3.6E1)+b3a*t24617*t24484*t24529* \
               (1.0/1.2E1))-Aa*a1a*c*t24502*t24521*t24616*t24539*t24549*t24558*(8.0/9.0)-Aa*a1a*c*t24502*t24521*t24650* \
               t24539*t24549*t24489*(4.0/3.0)+Aa*a1a*c*t24502*t24556*t24539*t24549*t24558*t24489*(4.0/3.0)+t24502* \
               t24521*t24540*t24551*1/(t24545*t24545*t24545*t24545)*t24539*1/(t24548*t24548)*t24558*t24666*(1.0/2.0) \
               +a1a*c*t24502*t24521*t24660*t24539*t24665*t24558*t24658*t24489*(2.0/3.0))+rho_a[index]*(t24840+t24834- \
               t24673-t24682+t24838+t24502*t24596*(t24832+t24673+t24682+t24837+t24839-t24600*t24670*t24825*t24599* \
               2.0-t24584*t24585*t24586*t24679-a1f*c*c0f*t24668*t24597*(8.0/9.0)-t24490*t24671*t24680*t24681*t24584* \
               (1.0/2.0)-a1p*c*t24591*t24585*t24586*t24569*(2.0/3.0)))+t24502*t24684*t24596*2.0+t24530*t24531*t24536* \
               t24495*2.0-t24591*t24584*t24585*t24586*2.0-a1p*c*c0p*t24515*t24489*(4.0/3.0)+a1p*c*c0p*t24593*t24569* \
               (4.0/3.0)-t24502*t24521*t24524*t24527*t24627*2.0-t24502*t24521*t24516*t24527*t24538*8.0+t24502*t24524* \
               t24516*t24527*t24556*2.0+t24502*t24521*t24524*t24516*t24496*t24497*8.0-Aa*t24502*t24521*t24551*t24650* \
               t24539*t24549*4.0+Aa*t24502*t24551*t24556*t24539*t24549*t24558*4.0+t24502*t24521*t24551*t24660*t24539* \
               t24665*t24558*t24658*2.0-Aa*a1a*c*t24502*t24521*t24539*t24549*t24558*t24489*(4.0/3.0))+(X-1.0)*(c0* \
               t24744*(t24742*(t24751*t24744*t24747*t24748*(5.0E1/9.0)-C_k*t24720*t24743*t24559*(1.0E1/9.0)+C_k*t24720* \
               t24722*t24751*t24559*(1.0E1/9.0)+C_k*t24720*t24723*t24745*t24559*(2.0E1/3.0)-C_k*t24720*t24725*t24746* \
               t24559*(5.0E1/9.0)+t24750*t24725*t24744*t24747*t24748*(1.25E3/9.0)+t24722*t24744*t24745*t24747*t24748* \
               (2.5E2/9.0)-t24723*t24744*t24747*t24748*t24749*1.0E2+t24722*t24723*t24744*t24746*t24747*t24748*(1.0E2/ \
               9.0)-t24722*1/(t24724*t24724*t24724*t24724*t24724*t24724*t24724)*t24725*t24744*t24747*t24748*(2.5E2/ \
               3.0)+C_k*t24720*t24722*t24750*t24725*t24559*(5.0E1/9.0)-C_k*t24720*t24722*t24723*t24559*t24749*(2.0E1/ \
               3.0))-t24754*(cxnl1*gamma_aa[index]*gx*t24713*t24729*(8.8E1/9.0)+cxnl2*t24609*t24708*t24726*t24738* \
               (3.04E2/9.0)-cxnl1*t24609*t24708*t24726*t24768*2.4E1+cxnl2*t24612*t24770*t24609*t24726*t24771*2.0- \
               cxnl2*t24612*t24609*t24726*t24780*t24766-cxnl2*t24609*t24726*t24756*t24766*t24758*(3.2E1/3.0)+cxnl3* \
               gamma_aa[index]*gx*t24734*t24609*t24726*t24755*7.2E1+cxnl1*gamma_aa[index]*gx*t24609*t24726*t24755* \
               t24769*(1.28E2/9.0)-cxnl3*gamma_aa[index]*gx*t24611*t24609*t24726*t24775*t24759+cxnl3*gamma_aa[index]* \
               gx*t24611*t24609*t24726*t24776*t24777*2.0-cxnl3*gamma_aa[index]*gx*t24609*t24726*t24763*t24757*t24759* \
               1.6E1)+t24785*t24789*2.0-cx1*gamma_aa[index]*gx*t24713*t24729*(8.8E1/9.0)+cx1*t24609*t24708*t24726* \
               t24768*2.4E1-cx2*t24609*t24708*t24726*t24738*(3.04E2/9.0)-cx2*t24612*t24770*t24609*t24726*t24771*2.0+ \
               cx2*t24612*t24609*t24726*t24780*t24766+cx2*t24609*t24726*t24756*t24766*t24758*(3.2E1/3.0)-cx1*gamma_aa[index]* \
               gx*t24609*t24726*t24755*t24769*(1.28E2/9.0)-cx3*gamma_aa[index]*gx*t24734*t24609*t24726*t24755*7.2E1+ \
               cx3*gamma_aa[index]*gx*t24611*t24609*t24726*t24775*t24759-cx3*gamma_aa[index]*gx*t24611*t24609*t24726* \
               t24776*t24777*2.0+cx3*gamma_aa[index]*gx*t24609*t24726*t24763*t24757*t24759*1.6E1)+c0*pow(rho_a[index],1.0/ \
               3.0)*(t24754*t24785-t24742*t24789+cx1*gamma_aa[index]*gx*t24463*t24729*(8.0/3.0)-cx1*t24609*t24726* \
               t24758*t24768*(8.0/3.0)+cx2*t24609*t24726*t24738*t24758*(1.6E1/3.0)-cx2*t24612*t24609*t24726*t24756* \
               t24766+cx3*gamma_aa[index]*gx*t24734*t24609*t24726*t24757*8.0-cx3*gamma_aa[index]*gx*t24611*t24609* \
               t24726*t24763*t24759)*(8.0/3.0)-c0*t24565*(cx0+t24742*t24754+cx1*gamma_aa[index]*gx*t24464*t24729+ \
               cx2*t24612*t24609*t24726*t24738+cx3*gamma_aa[index]*gx*t24611*t24734*t24609*t24726)*(4.0/9.0))+rho_a[index]* \
               t24824*(t24840+t24834-t24673-t24682+t24838-t24502*t24596*(t24840-t24832+t24834-t24673-t24682-t24837+ \
               t24838-t24839+t24600*t24670*t24825*t24599*2.0+a1f*c*c0f*t24668*t24597*(8.0/9.0)))-rho_a[index]*t24791* \
               (ccaa1*gamma_aa[index]*gcaa*t24713*t24794*(8.8E1/9.0)-ccaa1*t24610*t24804*t24609*t24708*2.4E1+ccaa2* \
               t24610*t24803*t24609*t24708*(3.04E2/9.0)-ccaa2*t24610*t24813*t24609*t24807*t24758*(3.2E1/3.0)-ccaa2* \
               t24610*t24612*t24813*t24609*(gamma_aa[index]*gcaa*t24713*(1.76E2/9.0)+t24610*t24609*t24708*(3.04E2/ \
               9.0))+ccaa2*t24610*t24612*1/(t24802*t24802*t24802)*t24609*(t24807*t24807)*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t24610*t24609*t24755*t24799*7.2E1+ccaa1*gamma_aa[index]*gcaa*t24610*t24609*t24755*1/(t24793*t24793* \
               t24793)*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t24610*t24611*(t24811*t24811)*t24609*1/(t24798*t24798* \
               t24798)*2.0-ccaa3*gamma_aa[index]*gcaa*t24610*t24611*t24812*t24609*(gamma_aa[index]*gcaa*t24713*(8.8E1/ \
               3.0)+t24610*t24609*t24708*(3.04E2/3.0)+gamma_aa[index]*gcaa*t24610*t24609*t24755*7.2E1)-ccaa3*gamma_aa[index]* \
               gcaa*t24610*t24811*t24812*t24609*t24757*1.6E1)-rho_a[index]*t24820*t24819*2.0;
        } else if (rho_a[index] > cutoff_) {
            double t28080 = 1/pow(rho_a[index],1.0/3.0);
            double t28081 = c*t28080;
            double t28082 = sqrt(t28081);
            double t28083 = b1f*t28082;
            double t28084 = pow(t28081,3.0/2.0);
            double t28085 = b3f*t28084;
            double t28086 = c*c;
            double t28087 = 1/pow(rho_a[index],2.0/3.0);
            double t28088 = b4f*t28086*t28087;
            double t28089 = b2f*c*t28080;
            double t28090 = t28083+t28085+t28088+t28089;
            double t28091 = 1/pow(rho_a[index],4.0/3.0);
            double t28092 = b1p*t28082;
            double t28093 = b3p*t28084;
            double t28094 = b4p*t28086*t28087;
            double t28095 = b2p*c*t28080;
            double t28096 = t28092+t28093+t28094+t28095;
            double t28097 = 1/pow(rho_a[index],5.0/3.0);
            double t28098 = 1/sqrt(t28081);
            double t28099 = 1/c0f;
            double t28100 = 1/t28090;
            double t28101 = t28100*t28099*(1.0/2.0);
            double t28102 = t28101+1.0;
            double t28103 = 1/c0p;
            double t28104 = 1/t28096;
            double t28105 = t28103*t28104*(1.0/2.0);
            double t28106 = t28105+1.0;
            double t28107 = a1p*c*t28080;
            double t28108 = t28107+1.0;
            double t28109 = 1/t28106;
            double t28110 = 1/(t28096*t28096);
            double t28111 = b4p*t28086*t28097*(2.0/3.0);
            double t28112 = b2p*c*t28091*(1.0/3.0);
            double t28113 = b1p*c*t28091*t28098*(1.0/6.0);
            double t28114 = b3p*c*t28082*t28091*(1.0/2.0);
            double t28115 = t28111+t28112+t28113+t28114;
            double t28116 = t28110*t28115*t28108*t28109;
            double t28117 = log(t28106);
            double t28118 = 1/pow(rho_a[index],8.0/3.0);
            double t28119 = gamma_aa[index]*gamma_aa[index];
            double t28120 = gcaa*gcaa;
            double t28121 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t28122 = 1/pow(rho_a[index],1.6E1/3.0);
            double t28123 = pow(2.0,1.0/3.0);
            double t28124 = t28123*2.0;
            double t28125 = t28124-2.0;
            double t28126 = two_13*2.0;
            double t28127 = t28126-2.0;
            double t28128 = 1/t28127;
            double t28129 = log(t28102);
            double t28130 = a1f*c*t28080;
            double t28131 = t28130+1.0;
            double t28132 = gamma_aa[index]*gcaa*t28118;
            double t28133 = t28132+1.0;
            double t28134 = 1/t28133;
            double t28135 = gamma_aa[index]*gcaa*t28118*3.0;
            double t28136 = gamma_aa[index]*gcaa*t28120*t28121*t28119;
            double t28137 = t28120*t28122*t28119*3.0;
            double t28138 = t28135+t28136+t28137+1.0;
            double t28139 = 1/t28138;
            double t28140 = gamma_aa[index]*gcaa*t28118*2.0;
            double t28141 = t28120*t28122*t28119;
            double t28142 = t28140+t28141+1.0;
            double t28143 = 1/t28142;
            double t28144 = 1/pow(rho_a[index],1.9E1/3.0);
            double t28145 = 1/pow(rho_a[index],1.1E1/3.0);
            double t28146 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t28147 = c0f*t28131*t28129*2.0;
            double t28148 = c0p*t28108*t28117*2.0;
            double t28149 = 1/pow(rho_a[index],1.0E1);
            double t28150 = 1/pow(rho_a[index],2.2E1/3.0);
            double t28151 = 1/(t28133*t28133);
            double t28152 = gamma_aa[index]*gcaa*t28145*(1.6E1/3.0);
            double t28153 = t28120*t28144*t28119*(1.6E1/3.0);
            double t28154 = t28152+t28153;
            double t28155 = gamma_aa[index]*gcaa*t28145*8.0;
            double t28156 = gamma_aa[index]*gcaa*t28120*t28119*t28146*8.0;
            double t28157 = t28120*t28144*t28119*1.6E1;
            double t28158 = t28155+t28156+t28157;
            double t28159 = 1/(t28138*t28138);
            double t28160 = 1/pow(rho_a[index],1.4E1/3.0);
            double t28161 = 1/(t28142*t28142);
            double t28162 = 1/t28102;
            double t28163 = 1/(t28090*t28090);
            double t28164 = b4f*t28086*t28097*(2.0/3.0);
            double t28165 = b2f*c*t28091*(1.0/3.0);
            double t28166 = b1f*c*t28091*t28098*(1.0/6.0);
            double t28167 = b3f*c*t28082*t28091*(1.0/2.0);
            double t28168 = t28164+t28165+t28166+t28167;
            double t28169 = a1f*c*c0f*t28091*t28129*(2.0/3.0);
            double t28170 = a1p*c*c0p*t28117*t28091*(2.0/3.0);
            double t28171 = ccaa1*gamma_aa[index]*gcaa*t28134*t28145*(8.0/3.0);
            double t28172 = ccaa3*gamma_aa[index]*gcaa*t28120*t28119*t28146*t28139*8.0;
            double t28173 = ccaa2*t28120*t28143*t28144*t28119*(1.6E1/3.0);
            double t28174 = t28171+t28172+t28173-ccaa1*t28120*t28151*t28144*t28119*(8.0/3.0)-ccaa2*t28120*t28122* \
               t28161*t28154*t28119-ccaa3*gamma_aa[index]*gcaa*t28120*t28121*t28119*t28158*t28159;
            double t28175 = ccaa1*gamma_aa[index]*gcaa*t28134*t28118;
            double t28176 = ccaa3*gamma_aa[index]*gcaa*t28120*t28121*t28119*t28139;
            double t28177 = ccaa2*t28120*t28122*t28143*t28119;
            double t28178 = ccaa0+t28175+t28176+t28177;
            double t28179 = 1/pow(rho_a[index],7.0/3.0);
            double t28180 = 1/pow(t28081,3.0/2.0);
            double t28181 = t28168*t28168;
            double t28182 = t28115*t28115;
            double t28183 = 1/(t28096*t28096*t28096);
            double t28184 = t28108*t28109*t28182*t28183*2.0;
            double t28185 = b4p*t28118*t28086*(1.0E1/9.0);
            double t28186 = b2p*c*t28179*(4.0/9.0);
            double t28187 = b3p*t28118*t28086*t28098*(1.0/1.2E1);
            double t28188 = b1p*c*t28098*t28179*(2.0/9.0);
            double t28189 = b3p*c*t28082*t28179*(2.0/3.0);
            double t28190 = t28185+t28186+t28187+t28188+t28189-b1p*t28180*t28118*t28086*(1.0/3.6E1);
            double t28191 = 1/(t28106*t28106);
            double t28192 = 1/(t28096*t28096*t28096*t28096);
            double t28193 = a1p*c*c0p*t28117*t28179*(8.0/9.0);
            double t28194 = pow(rho_a[index],5.0/3.0);
            double t28195 = 1/tau_a[index];
            double t28196 = C_k*t28194*t28195;
            double t28197 = t28196-1.0;
            double t28198 = t28197*t28197;
            double t28199 = t28196+1.0;
            double t28200 = t28198*t28198;
            double t28201 = gx*gx;
            double t28202 = gamma_aa[index]*gx*t28118;
            double t28203 = t28202+1.0;
            double t28204 = 1/t28203;
            double t28205 = gamma_aa[index]*gx*t28118*3.0;
            double t28206 = gamma_aa[index]*gx*t28201*t28121*t28119;
            double t28207 = t28201*t28122*t28119*3.0;
            double t28208 = t28205+t28206+t28207+1.0;
            double t28209 = 1/t28208;
            double t28210 = gamma_aa[index]*gx*t28118*2.0;
            double t28211 = t28201*t28122*t28119;
            double t28212 = t28210+t28211+1.0;
            double t28213 = 1/t28212;
            double t28214 = X-1.0;
            double t28215 = cxnl1*gamma_aa[index]*gx*t28204*t28118;
            double t28216 = cxnl3*gamma_aa[index]*gx*t28201*t28121*t28119*t28209;
            double t28217 = cxnl2*t28201*t28122*t28213*t28119;
            double t28218 = cxnl0+t28215+t28216+t28217;
            double t28219 = 1/t28199;
            double t28220 = pow(rho_a[index],4.0/3.0);
            double t28221 = 1/(t28199*t28199*t28199);
            double t28222 = 1/(t28199*t28199*t28199*t28199*t28199);
            double t28223 = C_k*C_k;
            double t28224 = 1/(tau_a[index]*tau_a[index]);
            double t28225 = 1/(t28199*t28199*t28199*t28199);
            double t28226 = 1/(t28199*t28199*t28199*t28199*t28199*t28199);
            double t28227 = 1/(t28199*t28199);
            double t28228 = t28219*t28197;
            double t28229 = t28200*t28222*t28197;
            double t28254 = t28221*t28197*t28198*2.0;
            double t28230 = -t28254+t28228+t28229;
            double t28237 = gamma_aa[index]*gx*t28145*(1.6E1/3.0);
            double t28238 = t28201*t28144*t28119*(1.6E1/3.0);
            double t28231 = t28237+t28238;
            double t28232 = 1/(t28208*t28208);
            double t28233 = gamma_aa[index]*gx*t28145*8.0;
            double t28234 = gamma_aa[index]*gx*t28201*t28119*t28146*8.0;
            double t28235 = t28201*t28144*t28119*1.6E1;
            double t28236 = t28233+t28234+t28235;
            double t28239 = 1/(t28212*t28212);
            double t28240 = pow(rho_a[index],2.0/3.0);
            double t28241 = 1/(t28203*t28203);
            double t28242 = 1/(t28203*t28203*t28203);
            double t28243 = t28231*t28231;
            double t28244 = 1/(t28212*t28212*t28212);
            double t28245 = gamma_aa[index]*gx*t28160*(8.8E1/3.0);
            double t28246 = gamma_aa[index]*gx*t28201*t28119*t28149*7.2E1;
            double t28247 = t28201*t28150*t28119*(3.04E2/3.0);
            double t28248 = t28245+t28246+t28247;
            double t28249 = t28236*t28236;
            double t28250 = 1/(t28208*t28208*t28208);
            double t28251 = gamma_aa[index]*gx*t28160*(1.76E2/9.0);
            double t28252 = t28201*t28150*t28119*(3.04E2/9.0);
            double t28253 = t28251+t28252;
            double t28255 = cxnl1*gamma_aa[index]*gx*t28204*t28145*(8.0/3.0);
            double t28256 = cxnl3*gamma_aa[index]*gx*t28201*t28119*t28146*t28209*8.0;
            double t28257 = cxnl2*t28201*t28213*t28144*t28119*(1.6E1/3.0);
            double t28258 = t28255+t28256+t28257-cxnl1*t28201*t28241*t28144*t28119*(8.0/3.0)-cxnl2*t28201*t28122* \
               t28231*t28119*t28239-cxnl3*gamma_aa[index]*gx*t28201*t28121*t28232*t28119*t28236;
            double t28259 = C_k*t28240*t28219*t28195*(5.0/3.0);
            double t28260 = C_k*t28240*t28225*t28195*t28197*t28198*1.0E1;
            double t28261 = C_k*t28200*t28222*t28240*t28195*(2.5E1/3.0);
            double t28262 = t28260+t28261+t28259-C_k*t28221*t28240*t28195*t28198*1.0E1-C_k*t28240*t28227*t28195* \
               t28197*(5.0/3.0)-C_k*t28200*t28240*t28226*t28195*t28197*(2.5E1/3.0);
            v_rho_a_rho_a_[index] = t28174*(t28148+t28125*t28128*(t28147-c0p*t28108*t28117*2.0))*2.0+t28178*(- \
               t28116+t28170+t28125*t28128*(t28116+t28169-t28131*t28162*t28163*t28168-a1p*c*c0p*t28117*t28091*(2.0/ \
               3.0)))*2.0+rho_a[index]*t28178*(-t28184-t28193+t28125*t28128*(t28184+t28193-t28110*t28108*t28109*t28190- \
               t28131*1/(t28090*t28090*t28090)*t28162*t28181*2.0+t28131*t28162*t28163*(b2f*c*t28179*(4.0/9.0)+b4f* \
               t28118*t28086*(1.0E1/9.0)+b1f*c*t28098*t28179*(2.0/9.0)+b3f*c*t28082*t28179*(2.0/3.0)-b1f*t28180*t28118* \
               t28086*(1.0/3.6E1)+b3f*t28118*t28086*t28098*(1.0/1.2E1))+1/(t28102*t28102)*t28131*1/(t28090*t28090* \
               t28090*t28090)*t28181*t28099*(1.0/2.0)-a1f*c*c0f*t28129*t28179*(8.0/9.0)-t28103*t28108*t28182*t28191* \
               t28192*(1.0/2.0)+a1f*c*t28162*t28091*t28163*t28168*(2.0/3.0)-a1p*c*t28110*t28115*t28091*t28109*(2.0/ \
               3.0))+t28110*t28108*t28109*t28190+t28103*t28108*t28182*t28191*t28192*(1.0/2.0)+a1p*c*t28110*t28115* \
               t28091*t28109*(2.0/3.0))-rho_a[index]*t28174*(-t28116+t28170+t28125*t28128*(t28116-t28170+t28169-t28131* \
               t28162*t28163*t28168))*2.0-rho_a[index]*(t28148+t28125*t28128*(t28147-t28148))*(ccaa1*gamma_aa[index]* \
               gcaa*t28160*t28134*(8.8E1/9.0)-ccaa1*t28120*t28150*t28151*t28119*2.4E1+ccaa2*t28120*t28150*t28143* \
               t28119*(3.04E2/9.0)-ccaa2*t28120*t28161*t28144*t28154*t28119*(3.2E1/3.0)-ccaa2*t28120*t28122*t28161* \
               t28119*(gamma_aa[index]*gcaa*t28160*(1.76E2/9.0)+t28120*t28150*t28119*(3.04E2/9.0))+ccaa2*t28120*t28122* \
               1/(t28142*t28142*t28142)*(t28154*t28154)*t28119*2.0+ccaa3*gamma_aa[index]*gcaa*t28120*t28119*t28139* \
               t28149*7.2E1+ccaa1*gamma_aa[index]*gcaa*t28120*1/(t28133*t28133*t28133)*t28119*t28149*(1.28E2/9.0) \
               +ccaa3*gamma_aa[index]*gcaa*t28120*t28121*t28119*1/(t28138*t28138*t28138)*(t28158*t28158)*2.0-ccaa3* \
               gamma_aa[index]*gcaa*t28120*t28121*t28119*t28159*(gamma_aa[index]*gcaa*t28160*(8.8E1/3.0)+t28120*t28150* \
               t28119*(3.04E2/3.0)+gamma_aa[index]*gcaa*t28120*t28119*t28149*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t28120* \
               t28119*t28146*t28158*t28159*1.6E1)-c0*t28214*t28087*(cx0+t28230*t28218+cx1*gamma_aa[index]*gx*t28204* \
               t28118+cx2*t28201*t28122*t28213*t28119+cx3*gamma_aa[index]*gx*t28201*t28121*t28119*t28209)*(4.0/9.0) \
               +c0*t28220*t28214*(t28218*(t28220*t28223*t28224*t28227*(5.0E1/9.0)-C_k*t28080*t28219*t28195*(1.0E1/ \
               9.0)-C_k*t28200*t28222*t28080*t28195*(5.0E1/9.0)+C_k*t28221*t28080*t28195*t28198*(2.0E1/3.0)+C_k*t28080* \
               t28227*t28195*t28197*(1.0E1/9.0)+t28200*t28220*t28223*t28224*t28226*(1.25E3/9.0)+t28220*t28221*t28223* \
               t28224*t28197*(2.5E2/9.0)-t28220*t28223*t28224*t28225*t28198*1.0E2+t28220*t28222*t28223*t28224*t28197* \
               t28198*(1.0E2/9.0)-t28200*t28220*t28223*t28224*t28197*1/(t28199*t28199*t28199*t28199*t28199*t28199* \
               t28199)*(2.5E2/3.0)+C_k*t28200*t28080*t28226*t28195*t28197*(5.0E1/9.0)-C_k*t28080*t28225*t28195*t28197* \
               t28198*(2.0E1/3.0))-t28230*(cxnl1*gamma_aa[index]*gx*t28204*t28160*(8.8E1/9.0)-cxnl1*t28201*t28150* \
               t28241*t28119*2.4E1+cxnl2*t28201*t28150*t28213*t28119*(3.04E2/9.0)+cxnl2*t28201*t28122*t28243*t28244* \
               t28119*2.0-cxnl2*t28201*t28122*t28253*t28119*t28239-cxnl2*t28201*t28231*t28144*t28119*t28239*(3.2E1/ \
               3.0)+cxnl1*gamma_aa[index]*gx*t28201*t28242*t28119*t28149*(1.28E2/9.0)+cxnl3*gamma_aa[index]*gx*t28201* \
               t28119*t28209*t28149*7.2E1-cxnl3*gamma_aa[index]*gx*t28201*t28121*t28232*t28119*t28248+cxnl3*gamma_aa[index]* \
               gx*t28201*t28121*t28250*t28119*t28249*2.0-cxnl3*gamma_aa[index]*gx*t28201*t28232*t28119*t28146*t28236* \
               1.6E1)+t28262*t28258*2.0-cx1*gamma_aa[index]*gx*t28204*t28160*(8.8E1/9.0)+cx1*t28201*t28150*t28241* \
               t28119*2.4E1-cx2*t28201*t28150*t28213*t28119*(3.04E2/9.0)-cx2*t28201*t28122*t28243*t28244*t28119*2.0+ \
               cx2*t28201*t28122*t28253*t28119*t28239+cx2*t28201*t28231*t28144*t28119*t28239*(3.2E1/3.0)-cx1*gamma_aa[index]* \
               gx*t28201*t28242*t28119*t28149*(1.28E2/9.0)-cx3*gamma_aa[index]*gx*t28201*t28119*t28209*t28149*7.2E1+ \
               cx3*gamma_aa[index]*gx*t28201*t28121*t28232*t28119*t28248-cx3*gamma_aa[index]*gx*t28201*t28121*t28250* \
               t28119*t28249*2.0+cx3*gamma_aa[index]*gx*t28201*t28232*t28119*t28146*t28236*1.6E1)+c0*pow(rho_a[index],1.0/ \
               3.0)*t28214*(t28230*t28258-t28262*t28218+cx1*gamma_aa[index]*gx*t28204*t28145*(8.0/3.0)-cx1*t28201* \
               t28241*t28144*t28119*(8.0/3.0)+cx2*t28201*t28213*t28144*t28119*(1.6E1/3.0)-cx2*t28201*t28122*t28231* \
               t28119*t28239+cx3*gamma_aa[index]*gx*t28201*t28119*t28146*t28209*8.0-cx3*gamma_aa[index]*gx*t28201* \
               t28121*t28232*t28119*t28236)*(8.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t24842 = 1/pow(rho_a[index],1.0/3.0);
            double t24843 = c*t24842;
            double t24844 = sqrt(t24843);
            double t24845 = pow(t24843,3.0/2.0);
            double t24846 = c*c;
            double t24847 = 1/pow(rho_a[index],2.0/3.0);
            double t24848 = 1/c0p;
            double t24849 = b1p*t24844;
            double t24850 = b3p*t24845;
            double t24851 = b4p*t24846*t24847;
            double t24852 = b2p*c*t24842;
            double t24853 = t24850+t24851+t24852+t24849;
            double t24854 = 1/t24853;
            double t24855 = t24854*t24848*(1.0/2.0);
            double t24856 = t24855+1.0;
            double t24857 = log(t24856);
            double t24858 = a1p*c*t24842;
            double t24859 = t24858+1.0;
            double t24860 = pow(2.0,1.0/3.0);
            double t24861 = t24860*2.0;
            double t24862 = t24861-2.0;
            double t24863 = two_13*2.0;
            double t24864 = t24863-2.0;
            double t24865 = 1/t24864;
            double t24866 = 1/c0f;
            double t24867 = 1/pow(rho_b[index],1.0/3.0);
            double t24868 = c*t24867;
            double t24869 = sqrt(t24868);
            double t24870 = pow(t24868,3.0/2.0);
            double t24871 = 1/pow(rho_b[index],2.0/3.0);
            double t24872 = b1p*t24869;
            double t24873 = b3p*t24870;
            double t24874 = b4p*t24871*t24846;
            double t24875 = b2p*c*t24867;
            double t24876 = t24872+t24873+t24874+t24875;
            double t24877 = 1/t24876;
            double t24878 = t24848*t24877*(1.0/2.0);
            double t24879 = t24878+1.0;
            double t24880 = log(t24879);
            double t24881 = a1p*c*t24867;
            double t24882 = t24881+1.0;
            double t24883 = c0p*t24880*t24882*2.0;
            double t24884 = rho_a[index]+rho_b[index];
            double t24885 = 1/pow(t24884,1.0/3.0);
            double t24886 = c*t24885;
            double t24887 = sqrt(t24886);
            double t24888 = pow(t24886,3.0/2.0);
            double t24889 = 1/pow(t24884,2.0/3.0);
            double t24890 = b1p*t24887;
            double t24891 = b3p*t24888;
            double t24892 = b4p*t24846*t24889;
            double t24893 = b2p*c*t24885;
            double t24894 = t24890+t24891+t24892+t24893;
            double t24895 = 1/t24894;
            double t24896 = t24848*t24895*(1.0/2.0);
            double t24897 = t24896+1.0;
            double t24898 = log(t24897);
            double t24899 = a1p*c*t24885;
            double t24900 = t24899+1.0;
            double t24901 = c0p*t24900*t24898*2.0;
            double t24902 = rho_a[index]-rho_b[index];
            double t24903 = t24902*t24902;
            double t24904 = 1/t24884;
            double t24905 = t24902*t24904;
            double t24906 = 1/(t24884*t24884*t24884*t24884);
            double t24907 = t24903*t24903;
            double t24908 = t24905+1.0;
            double t24909 = pow(t24908,4.0/3.0);
            double t24910 = -t24905+1.0;
            double t24911 = pow(t24910,4.0/3.0);
            double t24912 = t24911+t24909-2.0;
            double t24913 = gcab*gcab;
            double t24914 = 1/pow(rho_a[index],1.1E1/3.0);
            double t24915 = 1/pow(rho_b[index],1.1E1/3.0);
            double t24916 = 1/pow(rho_a[index],8.0/3.0);
            double t24917 = gamma_aa[index]*t24916*(1.0/2.0);
            double t24918 = 1/pow(rho_b[index],8.0/3.0);
            double t24919 = gamma_bb[index]*t24918*(1.0/2.0);
            double t24920 = t24917+t24919;
            double t24921 = t24920*t24920;
            double t24922 = t24921*t24913*3.0;
            double t24923 = gcab*t24920*t24921*t24913;
            double t24924 = gcab*t24920*3.0;
            double t24925 = t24922+t24923+t24924+1.0;
            double t24926 = t24921*t24913;
            double t24927 = gcab*t24920*2.0;
            double t24928 = t24926+t24927+1.0;
            double t24929 = gamma_aa[index]*gcab*t24914*4.0;
            double t24930 = gamma_aa[index]*gcab*t24921*t24913*t24914*4.0;
            double t24931 = gamma_aa[index]*t24920*t24913*t24914*8.0;
            double t24932 = t24930+t24931+t24929;
            double t24933 = 1/(t24925*t24925);
            double t24934 = gamma_bb[index]*gcab*t24915*4.0;
            double t24935 = gamma_bb[index]*gcab*t24921*t24913*t24915*4.0;
            double t24936 = gamma_bb[index]*t24920*t24913*t24915*8.0;
            double t24937 = t24934+t24935+t24936;
            double t24938 = gamma_aa[index]*gcab*t24914*(8.0/3.0);
            double t24939 = gamma_aa[index]*t24920*t24913*t24914*(8.0/3.0);
            double t24940 = t24938+t24939;
            double t24941 = gamma_bb[index]*gcab*t24915*(8.0/3.0);
            double t24942 = gamma_bb[index]*t24920*t24913*t24915*(8.0/3.0);
            double t24943 = t24941+t24942;
            double t24944 = 1/(t24928*t24928);
            double t24945 = gcab*t24920;
            double t24946 = t24945+1.0;
            double t24947 = 1/(t24946*t24946);
            double t24948 = 1/t24928;
            double t24949 = 1/t24925;
            double t24950 = 1/pow(t24884,4.0/3.0);
            double t24951 = b1f*t24887;
            double t24952 = b3f*t24888;
            double t24953 = b4f*t24846*t24889;
            double t24954 = b2f*c*t24885;
            double t24955 = t24951+t24952+t24953+t24954;
            double t24956 = 1/t24955;
            double t24957 = t24866*t24956*(1.0/2.0);
            double t24958 = t24957+1.0;
            double t24959 = log(t24958);
            double t24960 = a1f*c*t24885;
            double t24961 = t24960+1.0;
            double t24963 = c0f*t24961*t24959*2.0;
            double t24962 = t24901-t24963;
            double t24964 = 1/(t24884*t24884);
            double t24991 = t24902*t24964;
            double t24965 = t24904-t24991;
            double t24966 = 1/pow(t24884,5.0/3.0);
            double t24967 = 1/sqrt(t24886);
            double t24968 = 1/t24897;
            double t24969 = 1/(t24894*t24894);
            double t24970 = b4p*t24846*t24966*(2.0/3.0);
            double t24971 = b2p*c*t24950*(1.0/3.0);
            double t24972 = b1p*c*t24950*t24967*(1.0/6.0);
            double t24973 = b3p*c*t24950*t24887*(1.0/2.0);
            double t24974 = t24970+t24971+t24972+t24973;
            double t24975 = t24900*t24974*t24968*t24969;
            double t24976 = 1/d2fz0;
            double t24977 = 1/Aa;
            double t24978 = b1a*t24887;
            double t24979 = b3a*t24888;
            double t24980 = b4a*t24846*t24889;
            double t24981 = b2a*c*t24885;
            double t24982 = t24980+t24981+t24978+t24979;
            double t24983 = 1/t24982;
            double t24984 = t24983*t24977*(1.0/2.0);
            double t24985 = t24984+1.0;
            double t24986 = log(t24985);
            double t24987 = a1a*c*t24885;
            double t24988 = t24987+1.0;
            double t24989 = 1/(t24884*t24884*t24884*t24884*t24884);
            double t24990 = pow(t24908,1.0/3.0);
            double t24992 = t24990*t24965*(4.0/3.0);
            double t24993 = pow(t24910,1.0/3.0);
            double t25071 = t24965*t24993*(4.0/3.0);
            double t24994 = t24992-t25071;
            double t24995 = t24906*t24907;
            double t24996 = t24995-1.0;
            double t24997 = a1f*c*t24842;
            double t24998 = t24997+1.0;
            double t24999 = b1f*t24844;
            double t25000 = b3f*t24845;
            double t25001 = b4f*t24846*t24847;
            double t25002 = b2f*c*t24842;
            double t25003 = t24999+t25000+t25001+t25002;
            double t25004 = 1/t25003;
            double t25005 = t24866*t25004*(1.0/2.0);
            double t25006 = t25005+1.0;
            double t25007 = 1/pow(rho_a[index],4.0/3.0);
            double t25008 = 1/pow(rho_a[index],5.0/3.0);
            double t25009 = 1/sqrt(t24843);
            double t25010 = log(t25006);
            double t25011 = 1/t24856;
            double t25012 = 1/(t24853*t24853);
            double t25013 = b4p*t24846*t25008*(2.0/3.0);
            double t25014 = b2p*c*t25007*(1.0/3.0);
            double t25015 = b1p*c*t25007*t25009*(1.0/6.0);
            double t25016 = b3p*c*t24844*t25007*(1.0/2.0);
            double t25017 = t25013+t25014+t25015+t25016;
            double t25018 = t24859*t25011*t25012*t25017;
            double t25019 = c0f*t24998*t25010*2.0;
            double t25020 = c0p*t24857*t24859*2.0;
            double t25021 = Aa*t24912*t24865*t24976*t24986*t24996*t24988*2.0;
            double t25022 = 1/t24946;
            double t25023 = t24902*t24903*t24912*t24906*t24962*t24865*4.0;
            double t25024 = t24904+t24991;
            double t25025 = 1/t24958;
            double t25026 = 1/(t24955*t24955);
            double t25027 = b4f*t24846*t24966*(2.0/3.0);
            double t25028 = b2f*c*t24950*(1.0/3.0);
            double t25029 = b1f*c*t24950*t24967*(1.0/6.0);
            double t25030 = b3f*c*t24950*t24887*(1.0/2.0);
            double t25031 = t25030+t25027+t25028+t25029;
            double t25032 = a1f*c*c0f*t24950*t24959*(2.0/3.0);
            double t25033 = a1p*c*c0p*t24950*t24898*(2.0/3.0);
            double t25034 = t24907*t24989*4.0;
            double t25035 = t24990*t25024*(4.0/3.0);
            double t25070 = t24993*t25024*(4.0/3.0);
            double t25036 = -t25070+t25035;
            double t25037 = 1/t24985;
            double t25038 = 1/(t24982*t24982);
            double t25039 = b4a*t24846*t24966*(2.0/3.0);
            double t25040 = b2a*c*t24950*(1.0/3.0);
            double t25041 = b1a*c*t24950*t24967*(1.0/6.0);
            double t25042 = b3a*c*t24950*t24887*(1.0/2.0);
            double t25043 = t25040+t25041+t25042+t25039;
            double t25044 = Aa*a1a*c*t24912*t24950*t24865*t24976*t24986*t24996*(2.0/3.0);
            double t25045 = a1f*c*t24867;
            double t25046 = t25045+1.0;
            double t25047 = b1f*t24869;
            double t25048 = b3f*t24870;
            double t25049 = b4f*t24871*t24846;
            double t25050 = b2f*c*t24867;
            double t25051 = t25050+t25047+t25048+t25049;
            double t25052 = 1/t25051;
            double t25053 = t24866*t25052*(1.0/2.0);
            double t25054 = t25053+1.0;
            double t25055 = 1/pow(rho_b[index],4.0/3.0);
            double t25056 = 1/pow(rho_b[index],5.0/3.0);
            double t25057 = 1/sqrt(t24868);
            double t25058 = log(t25054);
            double t25059 = 1/t24879;
            double t25060 = 1/(t24876*t24876);
            double t25061 = b4p*t24846*t25056*(2.0/3.0);
            double t25062 = b2p*c*t25055*(1.0/3.0);
            double t25063 = b1p*c*t25055*t25057*(1.0/6.0);
            double t25064 = b3p*c*t24869*t25055*(1.0/2.0);
            double t25065 = t25061+t25062+t25063+t25064;
            double t25066 = t24882*t25060*t25065*t25059;
            double t25067 = t24883-c0f*t25046*t25058*2.0;
            double t25068 = 1/pow(t24884,7.0/3.0);
            double t25069 = 1/pow(t24884,8.0/3.0);
            double t25087 = t24961*t25031*t25025*t25026;
            double t25072 = t24975+t25032-t25033-t25087;
            double t25073 = t24974*t24974;
            double t25074 = 1/pow(t24886,3.0/2.0);
            double t25075 = b4p*t24846*t25069*(1.0E1/9.0);
            double t25076 = b2p*c*t25068*(4.0/9.0);
            double t25077 = b1p*c*t24967*t25068*(2.0/9.0);
            double t25078 = b3p*c*t24887*t25068*(2.0/3.0);
            double t25079 = b3p*t24846*t24967*t25069*(1.0/1.2E1);
            double t25080 = t25075+t25076+t25077+t25078+t25079-b1p*t24846*t25074*t25069*(1.0/3.6E1);
            double t25081 = t24900*t24968*t24969*t25080;
            double t25082 = 1/(t24894*t24894*t24894);
            double t25083 = t25031*t25031;
            double t25084 = 1/(t24897*t24897);
            double t25085 = 1/(t24894*t24894*t24894*t24894);
            double t25086 = t24900*t24848*t25073*t25084*t25085*(1.0/2.0);
            double t25088 = 1/(t24884*t24884*t24884);
            double t25089 = a1p*c*t24950*t24974*t24968*t24969*(2.0/3.0);
            double t25090 = 1/(t24884*t24884*t24884*t24884*t24884*t24884);
            double t25091 = t24902*t24903*t24906*4.0;
            double t25092 = t25034+t25091;
            double t25093 = t24902*t24993*t25088*(8.0/3.0);
            double t25094 = 1/pow(t24908,2.0/3.0);
            double t25095 = t24965*t25024*t25094*(4.0/9.0);
            double t25096 = 1/pow(t24910,2.0/3.0);
            double t25097 = t24965*t25024*t25096*(4.0/9.0);
            double t25098 = t25093+t25095+t25097-t24902*t24990*t25088*(8.0/3.0);
            double t25099 = t25043*t25043;
            double t25100 = t25034-t25091;
            double t25101 = t24900*t24968*t25073*t25082*2.0;
            double t25102 = a1p*c*c0p*t24898*t25068*(8.0/9.0);
            double t25103 = t24906*t24907*t24962*t24865*t25036;
            v_rho_a_rho_b_[index] = -(rho_b[index]*(t24883-t24862*t24865*t25067)+rho_a[index]*(t25020+t24862* \
               t24865*(t25019-c0p*t24857*t24859*2.0))-t24884*(t24901+t25021-t24912*t24906*t24907*t24962*t24865))* \
               (ccab2*t24921*t24913*t24940*t24943*1/(t24928*t24928*t24928)*-2.0+ccab3*gcab*t24920*t24921*t24913*t24933* \
               (gamma_aa[index]*gamma_bb[index]*t24913*t24914*t24915*(3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]* \
               gcab*t24920*t24913*t24914*t24915*(3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]*t24913*t24914* \
               t24915*t24947*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t24913*t24914*t24915*t24948*(3.2E1/ \
               9.0)+ccab2*gamma_aa[index]*t24920*t24913*t24914*t24943*t24944*(8.0/3.0)+ccab2*gamma_bb[index]*t24920* \
               t24913*t24940*t24915*t24944*(8.0/3.0)+ccab2*gamma_aa[index]*gamma_bb[index]*t24921*(t24913*t24913) \
               *t24914*t24915*t24944*(3.2E1/9.0)-ccab3*gcab*t24920*t24921*t24913*t24932*1/(t24925*t24925*t24925)* \
               t24937*2.0+ccab3*gamma_bb[index]*gcab*t24921*t24913*t24932*t24915*t24933*4.0+ccab3*gamma_aa[index]* \
               gcab*t24921*t24913*t24914*t24933*t24937*4.0-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t24920*t24913* \
               t24914*t24915*t24949*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t24920*t24913*t24914*t24915* \
               1/(t24946*t24946*t24946)*(3.2E1/9.0))+(ccab1*gamma_aa[index]*gcab*t24914*t25022*(4.0/3.0)-ccab2*t24921* \
               t24913*t24940*t24944-ccab1*gamma_aa[index]*t24920*t24913*t24914*t24947*(4.0/3.0)+ccab2*gamma_aa[index]* \
               t24920*t24913*t24914*t24948*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t24921*t24913*t24914*t24949*4.0-ccab3* \
               gcab*t24920*t24921*t24913*t24932*t24933)*(t24901-t24883+t25021+t24884*(t24975+t25103+t25023-t25033- \
               t25044+t24912*t24907*t24962*t24865*t24989*4.0-t24912*t24906*t24907*t24865*t25072-Aa*t24912*t24865* \
               t24976*t24986*t24988*t25092*2.0-Aa*t24865*t24976*t24986*t24996*t24988*t25036*2.0+t24912*t24865*t24976* \
               t24996*t24988*t25043*t25037*t25038)+rho_b[index]*(-t25066+t24862*t24865*(t25066-(1/(t25051*t25051) \
               *t25046*(b2f*c*t25055*(1.0/3.0)+b4f*t24846*t25056*(2.0/3.0)+b1f*c*t25055*t25057*(1.0/6.0)+b3f*c*t24869* \
               t25055*(1.0/2.0)))/t25054+a1f*c*c0f*t25055*t25058*(2.0/3.0)-a1p*c*c0p*t24880*t25055*(2.0/3.0))+a1p* \
               c*c0p*t24880*t25055*(2.0/3.0))+t24862*t24865*t25067-t24912*t24906*t24907*t24865*(t24901-t24963))+(ccab0+ \
               ccab1*gcab*t24920*t25022+ccab2*t24921*t24913*t24948+ccab3*gcab*t24920*t24921*t24913*t24949)*(-t25103+ \
               t24884*(-t25101-t25102+t25081+t25086+t25089-t24903*t24912*t24906*t24962*t24865*1.2E1-t24907*t24962* \
               t24865*t24994*t24989*4.0+t24912*t24907*t24962*t24865*t25090*2.0E1+t24906*t24907*t24865*t24994*t25072- \
               t24912*t24907*t24865*t24989*t25072*8.0-t24906*t24907*t24962*t24865*t25098+t24907*t24962*t24865*t24989* \
               t25036*4.0-t24906*t24907*t24865*t25036*t25072+t24912*t24906*t24907*t24865*(t25101+t25102-t25081-t25086- \
               t25089-t24961*1/(t24955*t24955*t24955)*t25025*t25083*2.0+t24961*t25025*t25026*(b2f*c*t25068*(4.0/9.0) \
               +b4f*t24846*t25069*(1.0E1/9.0)+b1f*c*t24967*t25068*(2.0/9.0)+b3f*c*t24887*t25068*(2.0/3.0)-b1f*t24846* \
               t25074*t25069*(1.0/3.6E1)+b3f*t24846*t24967*t25069*(1.0/1.2E1))+t24961*1/(t24955*t24955*t24955*t24955) \
               *t24866*1/(t24958*t24958)*t25083*(1.0/2.0)-a1f*c*c0f*t24959*t25068*(8.0/9.0)+a1f*c*t24950*t25031*t25025* \
               t25026*(2.0/3.0))-t24902*t24903*t24906*t24962*t24865*t24994*4.0-t24902*t24903*t24906*t24962*t24865* \
               t25036*4.0+Aa*t24865*t24976*t24994*t24986*t24988*t25092*2.0+Aa*t24865*t24976*t24986*t24996*t24988* \
               t25098*2.0-Aa*t24865*t24976*t24986*t24988*t25100*t25036*2.0+Aa*t24912*t24865*t24976*t24986*t24988* \
               (t24903*t24906*1.2E1-t24907*t25090*2.0E1)*2.0-t24865*t24976*t24994*t24996*t24988*t25043*t25037*t25038+ \
               t24912*t24865*t24976*t24988*t25100*t25043*t25037*t25038+t24912*t24865*t24976*t24988*t25043*t25037* \
               t25038*t25092+t24865*t24976*t24996*t24988*t25043*t25036*t25037*t25038-t24912*t24865*1/(t24982*t24982* \
               t24982)*t24976*t24996*t24988*t25037*t25099*2.0+t24912*t24865*t24976*t24996*t24988*t25037*t25038*(b2a* \
               c*t25068*(4.0/9.0)+b4a*t24846*t25069*(1.0E1/9.0)+b1a*c*t24967*t25068*(2.0/9.0)+b3a*c*t24887*t25068* \
               (2.0/3.0)-b1a*t24846*t25074*t25069*(1.0/3.6E1)+b3a*t24846*t24967*t25069*(1.0/1.2E1))+Aa*a1a*c*t24950* \
               t24865*t24976*t24994*t24986*t24996*(2.0/3.0)-Aa*a1a*c*t24912*t24950*t24865*t24976*t24986*t25100*(2.0/ \
               3.0)-Aa*a1a*c*t24912*t24950*t24865*t24976*t24986*t25092*(2.0/3.0)-Aa*a1a*c*t24950*t24865*t24976*t24986* \
               t24996*t25036*(2.0/3.0)-Aa*a1a*c*t24912*t24865*t24976*t24986*t24996*t25068*(8.0/9.0)+t24912*t24865* \
               1/(t24982*t24982*t24982*t24982)*t24976*1/(t24985*t24985)*t24977*t24996*t24988*t25099*(1.0/2.0)+a1a* \
               c*t24912*t24950*t24865*t24976*t24996*t25043*t25037*t25038*(2.0/3.0))-t24900*t24974*t24968*t24969*2.0+ \
               t24912*t24906*t24907*t24865*(t24975+t25032-t25033-t25087)*2.0+a1p*c*c0p*t24950*t24898*(4.0/3.0)-t24912* \
               t24907*t24962*t24865*t24989*8.0+t24906*t24907*t24865*t24994*(t24901-t24963)-Aa*t24865*t24976*t24994* \
               t24986*t24996*t24988*2.0+Aa*t24912*t24865*t24976*t24986*t24988*t25092*2.0+Aa*t24865*t24976*t24986* \
               t24996*t24988*t25036*2.0+Aa*t24912*t24865*t24976*t24986*t24988*(t25034-t25091)*2.0-t24912*t24865*t24976* \
               t24996*t24988*t25043*t25037*t25038*2.0+Aa*a1a*c*t24912*t24950*t24865*t24976*t24986*t24996*(4.0/3.0) \
               )+(ccab1*gamma_bb[index]*gcab*t24915*t25022*(4.0/3.0)-ccab2*t24921*t24913*t24943*t24944-ccab1*gamma_bb[index]* \
               t24920*t24913*t24915*t24947*(4.0/3.0)+ccab2*gamma_bb[index]*t24920*t24913*t24915*t24948*(8.0/3.0)+ \
               ccab3*gamma_bb[index]*gcab*t24921*t24913*t24915*t24949*4.0-ccab3*gcab*t24920*t24921*t24913*t24933* \
               t24937)*(t24901-t25020+t25021-t24884*(-t24975+t25023+t25033+t25044+t24912*t24906*t24907*t24865*(t24975+ \
               t25032-t24961*t25031*t25025*t25026-a1p*c*c0p*t24950*t24898*(2.0/3.0))+t24906*t24907*t24962*t24865* \
               t24994-t24912*t24907*t24962*t24865*t24989*4.0-Aa*t24865*t24976*t24994*t24986*t24996*t24988*2.0+Aa* \
               t24912*t24865*t24976*t24986*t24988*(t25034-t24902*t24903*t24906*4.0)*2.0-t24912*t24865*t24976*t24996* \
               t24988*t25043*t25037*t25038)+rho_a[index]*(-t25018+t24862*t24865*(t25018-(t24998*1/(t25003*t25003) \
               *(b2f*c*t25007*(1.0/3.0)+b4f*t24846*t25008*(2.0/3.0)+b1f*c*t25007*t25009*(1.0/6.0)+b3f*c*t24844*t25007* \
               (1.0/2.0)))/t25006+a1f*c*c0f*t25010*t25007*(2.0/3.0)-a1p*c*c0p*t24857*t25007*(2.0/3.0))+a1p*c*c0p* \
               t24857*t25007*(2.0/3.0))+t24862*t24865*(t25020-t25019)-t24912*t24906*t24907*t24962*t24865);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t25105 = gcab*gcab;
            double t25109 = 1/pow(rho_a[index],8.0/3.0);
            double t25110 = gamma_aa[index]*t25109*(1.0/2.0);
            double t25111 = 1/pow(rho_b[index],8.0/3.0);
            double t25112 = gamma_bb[index]*t25111*(1.0/2.0);
            double t25106 = t25110+t25112;
            double t25107 = t25106*t25106;
            double t25108 = 1/pow(rho_b[index],1.1E1/3.0);
            double t25113 = gcab*t25106;
            double t25114 = t25113+1.0;
            double t25115 = t25105*t25107;
            double t25116 = gcab*t25106*2.0;
            double t25117 = t25115+t25116+1.0;
            double t25118 = t25105*t25107*3.0;
            double t25119 = gcab*t25105*t25106*t25107;
            double t25120 = gcab*t25106*3.0;
            double t25121 = t25120+t25118+t25119+1.0;
            double t25122 = rho_a[index]+rho_b[index];
            double t25123 = 1/pow(t25122,1.0/3.0);
            double t25124 = c*t25123;
            double t25125 = sqrt(t25124);
            double t25126 = b1p*t25125;
            double t25127 = pow(t25124,3.0/2.0);
            double t25128 = b3p*t25127;
            double t25129 = c*c;
            double t25130 = 1/pow(t25122,2.0/3.0);
            double t25131 = b4p*t25130*t25129;
            double t25132 = b2p*c*t25123;
            double t25133 = t25131+t25132+t25126+t25128;
            double t25134 = 1/pow(t25122,4.0/3.0);
            double t25135 = 1/c0p;
            double t25136 = 1/t25133;
            double t25137 = t25135*t25136*(1.0/2.0);
            double t25138 = t25137+1.0;
            double t25139 = a1p*c*t25123;
            double t25140 = t25139+1.0;
            double t25141 = rho_a[index]-rho_b[index];
            double t25142 = t25141*t25141;
            double t25143 = 1/t25122;
            double t25144 = t25141*t25143;
            double t25145 = two_13*2.0;
            double t25146 = t25145-2.0;
            double t25147 = 1/t25146;
            double t25148 = 1/c0f;
            double t25149 = b1f*t25125;
            double t25150 = b3f*t25127;
            double t25151 = b4f*t25130*t25129;
            double t25152 = b2f*c*t25123;
            double t25153 = t25150+t25151+t25152+t25149;
            double t25154 = 1/t25153;
            double t25155 = t25154*t25148*(1.0/2.0);
            double t25156 = t25155+1.0;
            double t25157 = log(t25156);
            double t25158 = a1f*c*t25123;
            double t25159 = t25158+1.0;
            double t25160 = log(t25138);
            double t25171 = c0f*t25157*t25159*2.0;
            double t25172 = c0p*t25140*t25160*2.0;
            double t25161 = t25171-t25172;
            double t25162 = t25144+1.0;
            double t25163 = pow(t25162,4.0/3.0);
            double t25164 = -t25144+1.0;
            double t25165 = pow(t25164,4.0/3.0);
            double t25166 = t25163+t25165-2.0;
            double t25167 = 1/(t25122*t25122);
            double t25168 = t25141*t25167;
            double t25169 = t25143+t25168;
            double t25170 = 1/(t25122*t25122*t25122*t25122);
            double t25173 = t25142*t25142;
            double t25174 = 1/pow(t25122,5.0/3.0);
            double t25175 = 1/sqrt(t25124);
            double t25176 = 1/t25138;
            double t25177 = 1/(t25133*t25133);
            double t25178 = b4p*t25129*t25174*(2.0/3.0);
            double t25179 = b2p*c*t25134*(1.0/3.0);
            double t25180 = b1p*c*t25134*t25175*(1.0/6.0);
            double t25181 = b3p*c*t25125*t25134*(1.0/2.0);
            double t25182 = t25180+t25181+t25178+t25179;
            double t25183 = 1/(t25122*t25122*t25122*t25122*t25122);
            double t25184 = 1/d2fz0;
            double t25185 = 1/Aa;
            double t25186 = b1a*t25125;
            double t25187 = b3a*t25127;
            double t25188 = b4a*t25130*t25129;
            double t25189 = b2a*c*t25123;
            double t25190 = t25186+t25187+t25188+t25189;
            double t25191 = 1/t25190;
            double t25192 = t25191*t25185*(1.0/2.0);
            double t25193 = t25192+1.0;
            double t25194 = log(t25193);
            double t25195 = a1a*c*t25123;
            double t25196 = t25195+1.0;
            double t25197 = pow(t25162,1.0/3.0);
            double t25198 = t25169*t25197*(4.0/3.0);
            double t25199 = pow(t25164,1.0/3.0);
            double t25263 = t25169*t25199*(4.0/3.0);
            double t25200 = -t25263+t25198;
            double t25201 = t25170*t25173;
            double t25202 = t25201-1.0;
            double t25203 = 1/pow(rho_b[index],1.0/3.0);
            double t25204 = c*t25203;
            double t25205 = sqrt(t25204);
            double t25206 = b1f*t25205;
            double t25207 = pow(t25204,3.0/2.0);
            double t25208 = b3f*t25207;
            double t25209 = 1/pow(rho_b[index],2.0/3.0);
            double t25210 = b4f*t25209*t25129;
            double t25211 = b2f*c*t25203;
            double t25212 = t25210+t25211+t25206+t25208;
            double t25213 = 1/pow(rho_b[index],4.0/3.0);
            double t25214 = b1p*t25205;
            double t25215 = b3p*t25207;
            double t25216 = b4p*t25209*t25129;
            double t25217 = b2p*c*t25203;
            double t25218 = t25214+t25215+t25216+t25217;
            double t25219 = 1/pow(rho_b[index],5.0/3.0);
            double t25220 = 1/sqrt(t25204);
            double t25221 = 1/t25212;
            double t25222 = t25221*t25148*(1.0/2.0);
            double t25223 = t25222+1.0;
            double t25224 = 1/t25218;
            double t25225 = t25224*t25135*(1.0/2.0);
            double t25226 = t25225+1.0;
            double t25227 = a1p*c*t25203;
            double t25228 = t25227+1.0;
            double t25229 = 1/t25226;
            double t25230 = 1/(t25218*t25218);
            double t25231 = b4p*t25129*t25219*(2.0/3.0);
            double t25232 = b2p*c*t25213*(1.0/3.0);
            double t25233 = b1p*c*t25220*t25213*(1.0/6.0);
            double t25234 = b3p*c*t25213*t25205*(1.0/2.0);
            double t25235 = t25231+t25232+t25233+t25234;
            double t25236 = t25230*t25235*t25228*t25229;
            double t25237 = log(t25226);
            double t25238 = pow(2.0,1.0/3.0);
            double t25239 = t25238*2.0;
            double t25240 = t25239-2.0;
            double t25241 = log(t25223);
            double t25242 = a1f*c*t25203;
            double t25243 = t25242+1.0;
            double t25244 = a1p*c*c0p*t25160*t25134*(2.0/3.0);
            double t25245 = 1/t25223;
            double t25246 = 1/(t25212*t25212);
            double t25247 = b4f*t25129*t25219*(2.0/3.0);
            double t25248 = b2f*c*t25213*(1.0/3.0);
            double t25249 = b1f*c*t25220*t25213*(1.0/6.0);
            double t25250 = b3f*c*t25213*t25205*(1.0/2.0);
            double t25251 = t25250+t25247+t25248+t25249;
            double t25252 = a1f*c*c0f*t25213*t25241*(2.0/3.0);
            double t25253 = a1p*c*c0p*t25213*t25237*(2.0/3.0);
            double t25254 = gamma_bb[index]*gamma_bb[index];
            double t25255 = gcaa*gcaa;
            double t25256 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t25257 = 1/pow(rho_b[index],1.6E1/3.0);
            double t25258 = 1/t25117;
            double t25259 = 1/t25121;
            double t25260 = 1/t25114;
            double t25261 = 1/pow(t25122,7.0/3.0);
            double t25262 = 1/pow(t25122,8.0/3.0);
            double t25264 = 1/t25156;
            double t25265 = 1/(t25153*t25153);
            double t25266 = b4f*t25129*t25174*(2.0/3.0);
            double t25267 = b2f*c*t25134*(1.0/3.0);
            double t25268 = b1f*c*t25134*t25175*(1.0/6.0);
            double t25269 = b3f*c*t25125*t25134*(1.0/2.0);
            double t25270 = t25266+t25267+t25268+t25269;
            double t25271 = t25270*t25264*t25265*t25159;
            double t25273 = t25140*t25182*t25176*t25177;
            double t25274 = a1f*c*c0f*t25134*t25157*(2.0/3.0);
            double t25272 = t25244+t25271-t25273-t25274;
            double t25275 = t25182*t25182;
            double t25276 = 1/pow(t25124,3.0/2.0);
            double t25277 = b4p*t25262*t25129*(1.0E1/9.0);
            double t25278 = b2p*c*t25261*(4.0/9.0);
            double t25279 = b1p*c*t25261*t25175*(2.0/9.0);
            double t25280 = b3p*c*t25125*t25261*(2.0/3.0);
            double t25281 = b3p*t25262*t25129*t25175*(1.0/1.2E1);
            double t25282 = t25280+t25281+t25277+t25278+t25279-b1p*t25262*t25129*t25276*(1.0/3.6E1);
            double t25283 = 1/(t25133*t25133*t25133);
            double t25284 = t25140*t25283*t25176*t25275*2.0;
            double t25285 = t25270*t25270;
            double t25286 = 1/(t25138*t25138);
            double t25287 = 1/(t25133*t25133*t25133*t25133);
            double t25288 = t25167*2.0;
            double t25289 = 1/(t25122*t25122*t25122);
            double t25290 = t25141*t25289*2.0;
            double t25291 = t25290+t25288;
            double t25292 = t25169*t25169;
            double t25293 = a1p*c*c0p*t25160*t25261*(8.0/9.0);
            double t25294 = 1/(t25122*t25122*t25122*t25122*t25122*t25122);
            double t25295 = t25141*t25142*t25170*4.0;
            double t25296 = t25173*t25183*4.0;
            double t25297 = t25295+t25296;
            double t25298 = t25291*t25197*(4.0/3.0);
            double t25299 = 1/pow(t25162,2.0/3.0);
            double t25300 = t25292*t25299*(4.0/9.0);
            double t25301 = 1/pow(t25164,2.0/3.0);
            double t25302 = t25301*t25292*(4.0/9.0);
            double t25303 = t25300+t25302+t25298-t25291*t25199*(4.0/3.0);
            double t25304 = 1/t25193;
            double t25305 = 1/(t25190*t25190);
            double t25306 = b4a*t25129*t25174*(2.0/3.0);
            double t25307 = b2a*c*t25134*(1.0/3.0);
            double t25308 = b1a*c*t25134*t25175*(1.0/6.0);
            double t25309 = b3a*c*t25125*t25134*(1.0/2.0);
            double t25310 = t25306+t25307+t25308+t25309;
            double t25311 = t25310*t25310;
            double t25312 = 1/pow(rho_b[index],7.0/3.0);
            double t25313 = 1/pow(t25204,3.0/2.0);
            double t25314 = t25251*t25251;
            double t25315 = t25235*t25235;
            double t25316 = 1/(t25218*t25218*t25218);
            double t25317 = t25315*t25316*t25228*t25229*2.0;
            double t25318 = b4p*t25111*t25129*(1.0E1/9.0);
            double t25319 = b2p*c*t25312*(4.0/9.0);
            double t25320 = b3p*t25111*t25220*t25129*(1.0/1.2E1);
            double t25321 = b1p*c*t25220*t25312*(2.0/9.0);
            double t25322 = b3p*c*t25312*t25205*(2.0/3.0);
            double t25476 = b1p*t25111*t25313*t25129*(1.0/3.6E1);
            double t25323 = t25320+t25321+t25322+t25318+t25319-t25476;
            double t25324 = 1/(t25226*t25226);
            double t25325 = 1/(t25218*t25218*t25218*t25218);
            double t25326 = a1p*c*c0p*t25312*t25237*(8.0/9.0);
            double t25457 = t25251*t25243*t25245*t25246;
            double t25327 = t25252-t25253+t25236-t25457;
            double t25328 = 1/pow(rho_a[index],1.0/3.0);
            double t25329 = c*t25328;
            double t25330 = sqrt(t25329);
            double t25331 = pow(t25329,3.0/2.0);
            double t25332 = 1/pow(rho_a[index],2.0/3.0);
            double t25333 = b1p*t25330;
            double t25334 = b3p*t25331;
            double t25335 = b4p*t25332*t25129;
            double t25336 = b2p*c*t25328;
            double t25337 = t25333+t25334+t25335+t25336;
            double t25338 = 1/t25337;
            double t25339 = t25135*t25338*(1.0/2.0);
            double t25340 = t25339+1.0;
            double t25341 = log(t25340);
            double t25342 = a1p*c*t25328;
            double t25343 = t25342+1.0;
            double t25344 = c0p*t25341*t25343*2.0;
            double t25345 = c0f*t25241*t25243*2.0;
            double t25347 = c0p*t25228*t25237*2.0;
            double t25346 = t25345-t25347;
            double t25348 = t25161*t25170*t25173*t25147*t25166;
            double t25349 = Aa*t25202*t25147*t25166*t25184*t25194*t25196*2.0;
            double t25350 = 1/(t25114*t25114);
            double t25351 = 1/pow(rho_b[index],2.2E1/3.0);
            double t25352 = gamma_bb[index]*gcab*t25108*(8.0/3.0);
            double t25353 = gamma_bb[index]*t25105*t25106*t25108*(8.0/3.0);
            double t25354 = t25352+t25353;
            double t25355 = 1/(t25121*t25121);
            double t25356 = 1/pow(rho_b[index],1.4E1/3.0);
            double t25357 = 1/(t25117*t25117);
            double t25358 = gamma_bb[index]*gcab*t25108*4.0;
            double t25359 = gamma_bb[index]*gcab*t25105*t25107*t25108*4.0;
            double t25360 = gamma_bb[index]*t25105*t25106*t25108*8.0;
            double t25361 = t25360+t25358+t25359;
            double t25362 = pow(rho_b[index],5.0/3.0);
            double t25363 = 1/tau_b[index];
            double t25364 = C_k*t25362*t25363;
            double t25365 = t25364-1.0;
            double t25366 = t25365*t25365;
            double t25367 = t25364+1.0;
            double t25368 = t25366*t25366;
            double t25369 = gx*gx;
            double t25370 = gamma_bb[index]*gx*t25111;
            double t25371 = t25370+1.0;
            double t25372 = 1/t25371;
            double t25373 = gamma_bb[index]*gx*t25111*3.0;
            double t25374 = gamma_bb[index]*gx*t25254*t25256*t25369;
            double t25375 = t25254*t25257*t25369*3.0;
            double t25376 = t25373+t25374+t25375+1.0;
            double t25377 = 1/t25376;
            double t25378 = gamma_bb[index]*gx*t25111*2.0;
            double t25379 = t25254*t25257*t25369;
            double t25380 = t25378+t25379+1.0;
            double t25381 = 1/t25380;
            double t25382 = cxnl1*gamma_bb[index]*gx*t25111*t25372;
            double t25383 = cxnl3*gamma_bb[index]*gx*t25254*t25256*t25377*t25369;
            double t25384 = cxnl2*t25254*t25381*t25257*t25369;
            double t25385 = cxnl0+t25382+t25383+t25384;
            double t25386 = 1/t25367;
            double t25387 = pow(rho_b[index],4.0/3.0);
            double t25388 = 1/(t25367*t25367*t25367);
            double t25389 = 1/(t25367*t25367*t25367*t25367*t25367);
            double t25390 = C_k*C_k;
            double t25391 = 1/(tau_b[index]*tau_b[index]);
            double t25392 = 1/(t25367*t25367*t25367*t25367);
            double t25393 = 1/(t25367*t25367*t25367*t25367*t25367*t25367);
            double t25394 = 1/(t25367*t25367);
            double t25395 = t25365*t25386;
            double t25396 = t25365*t25368*t25389;
            double t25424 = t25365*t25366*t25388*2.0;
            double t25397 = -t25424+t25395+t25396;
            double t25398 = 1/pow(rho_b[index],1.0E1);
            double t25401 = 1/pow(rho_b[index],1.9E1/3.0);
            double t25407 = gamma_bb[index]*gx*t25108*(1.6E1/3.0);
            double t25408 = t25401*t25254*t25369*(1.6E1/3.0);
            double t25399 = t25407+t25408;
            double t25400 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t25402 = 1/(t25376*t25376);
            double t25403 = gamma_bb[index]*gx*t25108*8.0;
            double t25404 = gamma_bb[index]*gx*t25400*t25254*t25369*8.0;
            double t25405 = t25401*t25254*t25369*1.6E1;
            double t25406 = t25403+t25404+t25405;
            double t25409 = 1/(t25380*t25380);
            double t25410 = pow(rho_b[index],2.0/3.0);
            double t25411 = 1/(t25371*t25371);
            double t25412 = 1/(t25371*t25371*t25371);
            double t25413 = t25399*t25399;
            double t25414 = 1/(t25380*t25380*t25380);
            double t25415 = gamma_bb[index]*gx*t25356*(8.8E1/3.0);
            double t25416 = gamma_bb[index]*gx*t25254*t25369*t25398*7.2E1;
            double t25417 = t25351*t25254*t25369*(3.04E2/3.0);
            double t25418 = t25415+t25416+t25417;
            double t25419 = t25406*t25406;
            double t25420 = 1/(t25376*t25376*t25376);
            double t25421 = gamma_bb[index]*gx*t25356*(1.76E2/9.0);
            double t25422 = t25351*t25254*t25369*(3.04E2/9.0);
            double t25423 = t25421+t25422;
            double t25425 = cxnl1*gamma_bb[index]*gx*t25108*t25372*(8.0/3.0);
            double t25426 = cxnl3*gamma_bb[index]*gx*t25400*t25254*t25377*t25369*8.0;
            double t25427 = cxnl2*t25401*t25254*t25381*t25369*(1.6E1/3.0);
            double t25428 = t25425+t25426+t25427-cxnl1*t25401*t25411*t25254*t25369*(8.0/3.0)-cxnl2*t25254*t25409* \
               t25257*t25369*t25399-cxnl3*gamma_bb[index]*gx*t25402*t25406*t25254*t25256*t25369;
            double t25429 = C_k*t25410*t25363*t25386*(5.0/3.0);
            double t25430 = C_k*t25410*t25363*t25365*t25392*t25366*1.0E1;
            double t25431 = C_k*t25410*t25363*t25368*t25389*(2.5E1/3.0);
            double t25432 = t25430+t25431+t25429-C_k*t25410*t25363*t25365*t25394*(5.0/3.0)-C_k*t25410*t25363* \
               t25366*t25388*1.0E1-C_k*t25410*t25363*t25365*t25393*t25368*(2.5E1/3.0);
            double t25433 = t25240*t25147*t25346;
            double t25434 = t25433+t25347;
            double t25435 = gamma_bb[index]*gcaa*t25111;
            double t25436 = t25435+1.0;
            double t25437 = 1/t25436;
            double t25438 = gamma_bb[index]*gcaa*t25111*3.0;
            double t25439 = gamma_bb[index]*gcaa*t25254*t25255*t25256;
            double t25440 = t25254*t25255*t25257*3.0;
            double t25441 = t25440+t25438+t25439+1.0;
            double t25442 = 1/t25441;
            double t25443 = gamma_bb[index]*gcaa*t25111*2.0;
            double t25444 = t25254*t25255*t25257;
            double t25445 = t25443+t25444+1.0;
            double t25446 = 1/t25445;
            double t25447 = 1/(t25436*t25436);
            double t25448 = gamma_bb[index]*gcaa*t25108*(1.6E1/3.0);
            double t25449 = t25401*t25254*t25255*(1.6E1/3.0);
            double t25450 = t25448+t25449;
            double t25451 = gamma_bb[index]*gcaa*t25108*8.0;
            double t25452 = gamma_bb[index]*gcaa*t25400*t25254*t25255*8.0;
            double t25453 = t25401*t25254*t25255*1.6E1;
            double t25454 = t25451+t25452+t25453;
            double t25455 = 1/(t25441*t25441);
            double t25456 = 1/(t25445*t25445);
            double t25458 = t25240*t25147*t25327;
            double t25459 = ccaa1*gamma_bb[index]*gcaa*t25108*t25437*(8.0/3.0);
            double t25460 = ccaa3*gamma_bb[index]*gcaa*t25400*t25442*t25254*t25255*8.0;
            double t25461 = ccaa2*t25401*t25254*t25255*t25446*(1.6E1/3.0);
            double t25462 = t25460+t25461+t25459-ccaa1*t25401*t25254*t25255*t25447*(8.0/3.0)-ccaa2*t25450*t25254* \
               t25255*t25257*t25456-ccaa3*gamma_bb[index]*gcaa*t25254*t25255*t25256*t25454*t25455;
            double t25463 = t25253-t25236+t25458;
            double t25464 = ccaa1*gamma_bb[index]*gcaa*t25111*t25437;
            double t25465 = ccaa3*gamma_bb[index]*gcaa*t25442*t25254*t25255*t25256;
            double t25466 = ccaa2*t25254*t25255*t25257*t25446;
            double t25467 = ccaa0+t25464+t25465+t25466;
            double t25468 = 1/(t25212*t25212*t25212);
            double t25469 = b4f*t25111*t25129*(1.0E1/9.0);
            double t25470 = b2f*c*t25312*(4.0/9.0);
            double t25471 = b3f*t25111*t25220*t25129*(1.0/1.2E1);
            double t25472 = b1f*c*t25220*t25312*(2.0/9.0);
            double t25473 = b3f*c*t25312*t25205*(2.0/3.0);
            double t25474 = t25470+t25471+t25472+t25473+t25469-b1f*t25111*t25313*t25129*(1.0/3.6E1);
            double t25475 = t25243*t25245*t25246*t25474;
            double t25477 = t25230*t25323*t25228*t25229;
            double t25478 = 1/(t25223*t25223);
            double t25479 = 1/(t25212*t25212*t25212*t25212);
            double t25480 = t25314*t25243*t25148*t25478*t25479*(1.0/2.0);
            double t25481 = t25135*t25315*t25324*t25325*t25228*(1.0/2.0);
            double t25482 = a1f*c*t25213*t25251*t25245*t25246*(2.0/3.0);
            double t25483 = a1p*c*t25230*t25213*t25235*t25229*(2.0/3.0);
            v_rho_b_rho_b_[index] = (ccab1*gamma_bb[index]*gcab*t25260*t25108*(4.0/3.0)-ccab2*t25105*t25107*t25354* \
               t25357-ccab1*gamma_bb[index]*t25105*t25106*t25350*t25108*(4.0/3.0)+ccab2*gamma_bb[index]*t25105*t25106* \
               t25108*t25258*(8.0/3.0)+ccab3*gamma_bb[index]*gcab*t25105*t25107*t25108*t25259*4.0-ccab3*gcab*t25105* \
               t25106*t25107*t25361*t25355)*(t25172+t25348+t25349+rho_b[index]*(t25253-t25236+t25240*t25147*(t25252+ \
               t25236-t25251*t25243*t25245*t25246-a1p*c*c0p*t25213*t25237*(2.0/3.0)))-t25122*(t25244-t25140*t25182* \
               t25176*t25177+t25200*t25161*t25170*t25173*t25147-t25170*t25173*t25272*t25147*t25166+t25161*t25173* \
               t25147*t25183*t25166*4.0+t25141*t25142*t25161*t25170*t25147*t25166*4.0+Aa*t25200*t25202*t25147*t25184* \
               t25194*t25196*2.0+Aa*t25147*t25166*t25184*t25194*t25196*t25297*2.0-t25202*t25310*t25304*t25305*t25147* \
               t25166*t25184*t25196+Aa*a1a*c*t25202*t25134*t25147*t25166*t25184*t25194*(2.0/3.0))-c0p*t25228*t25237* \
               2.0-t25240*t25147*t25346)*2.0+t25434*t25462*2.0+t25463*t25467*2.0+(rho_b[index]*t25434+rho_a[index]* \
               (t25344-t25240*t25147*(t25344-c0f*log((t25148*(1.0/2.0))/(b1f*t25330+b3f*t25331+b2f*c*t25328+b4f*t25332* \
               t25129)+1.0)*(a1f*c*t25328+1.0)*2.0))-t25122*(t25172+t25348+t25349))*(-ccab2*t25105*t25107*t25357* \
               (gamma_bb[index]*gcab*t25356*(8.8E1/9.0)+t25105*t25351*t25254*(3.2E1/9.0)+gamma_bb[index]*t25105*t25106* \
               t25356*(8.8E1/9.0))+ccab2*t25105*t25107*1/(t25117*t25117*t25117)*(t25354*t25354)*2.0+ccab1*gamma_bb[index]* \
               gcab*t25260*t25356*(4.4E1/9.0)-ccab1*t25105*t25350*t25351*t25254*(3.2E1/9.0)+ccab2*t25105*t25351*t25254* \
               t25258*(3.2E1/9.0)-ccab1*gamma_bb[index]*t25105*t25106*t25350*t25356*(4.4E1/9.0)+ccab2*gamma_bb[index]* \
               t25105*t25106*t25356*t25258*(8.8E1/9.0)+ccab3*gcab*1/(t25121*t25121*t25121)*t25105*t25106*t25107*(t25361* \
               t25361)*2.0+ccab3*gamma_bb[index]*gcab*t25105*t25107*t25356*t25259*(4.4E1/3.0)-ccab2*gamma_bb[index]* \
               t25105*t25106*t25108*t25354*t25357*(1.6E1/3.0)+ccab3*gcab*t25105*t25106*t25351*t25254*t25259*(3.2E1/ \
               3.0)+ccab1*gcab*t25105*1/(t25114*t25114*t25114)*t25106*t25351*t25254*(3.2E1/9.0)-ccab3*gcab*t25105* \
               t25106*t25107*t25355*(gamma_bb[index]*gcab*t25356*(4.4E1/3.0)+t25105*t25351*t25254*(3.2E1/3.0)+gamma_bb[index]* \
               t25105*t25106*t25356*(8.8E1/3.0)+gamma_bb[index]*gcab*t25105*t25107*t25356*(4.4E1/3.0)+gcab*t25105* \
               t25106*t25351*t25254*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t25105*t25107*t25108*t25361*t25355*8.0) \
               -(X-1.0)*(-c0*t25387*(t25385*(t25390*t25391*t25394*t25387*(5.0E1/9.0)-C_k*t25203*t25363*t25386*(1.0E1/ \
               9.0)+C_k*t25203*t25363*t25365*t25394*(1.0E1/9.0)+C_k*t25203*t25363*t25366*t25388*(2.0E1/3.0)-C_k*t25203* \
               t25363*t25368*t25389*(5.0E1/9.0)-t25390*t25391*t25392*t25366*t25387*1.0E2+t25390*t25391*t25393*t25368* \
               t25387*(1.25E3/9.0)+t25390*t25391*t25365*t25387*t25388*(2.5E2/9.0)+t25390*t25391*t25365*t25366*t25387* \
               t25389*(1.0E2/9.0)-t25390*t25391*t25365*1/(t25367*t25367*t25367*t25367*t25367*t25367*t25367)*t25368* \
               t25387*(2.5E2/3.0)-C_k*t25203*t25363*t25365*t25392*t25366*(2.0E1/3.0)+C_k*t25203*t25363*t25365*t25393* \
               t25368*(5.0E1/9.0))-t25397*(cxnl1*gamma_bb[index]*gx*t25372*t25356*(8.8E1/9.0)-cxnl1*t25411*t25351* \
               t25254*t25369*2.4E1+cxnl2*t25351*t25254*t25381*t25369*(3.04E2/9.0)+cxnl2*t25413*t25414*t25254*t25257* \
               t25369*2.0-cxnl2*t25423*t25254*t25409*t25257*t25369-cxnl2*t25401*t25254*t25409*t25369*t25399*(3.2E1/ \
               3.0)+cxnl1*gamma_bb[index]*gx*t25412*t25254*t25369*t25398*(1.28E2/9.0)+cxnl3*gamma_bb[index]*gx*t25254* \
               t25377*t25369*t25398*7.2E1-cxnl3*gamma_bb[index]*gx*t25400*t25402*t25406*t25254*t25369*1.6E1-cxnl3* \
               gamma_bb[index]*gx*t25402*t25254*t25256*t25418*t25369+cxnl3*gamma_bb[index]*gx*t25420*t25254*t25256* \
               t25419*t25369*2.0)+t25432*t25428*2.0-cx1*gamma_bb[index]*gx*t25372*t25356*(8.8E1/9.0)+cx1*t25411*t25351* \
               t25254*t25369*2.4E1-cx2*t25351*t25254*t25381*t25369*(3.04E2/9.0)-cx2*t25413*t25414*t25254*t25257*t25369* \
               2.0+cx2*t25423*t25254*t25409*t25257*t25369+cx2*t25401*t25254*t25409*t25369*t25399*(3.2E1/3.0)-cx1* \
               gamma_bb[index]*gx*t25412*t25254*t25369*t25398*(1.28E2/9.0)-cx3*gamma_bb[index]*gx*t25254*t25377*t25369* \
               t25398*7.2E1+cx3*gamma_bb[index]*gx*t25400*t25402*t25406*t25254*t25369*1.6E1+cx3*gamma_bb[index]*gx* \
               t25402*t25254*t25256*t25418*t25369-cx3*gamma_bb[index]*gx*t25420*t25254*t25256*t25419*t25369*2.0)+ \
               c0*pow(rho_b[index],1.0/3.0)*(t25432*t25385-t25428*t25397-cx1*gamma_bb[index]*gx*t25108*t25372*(8.0/ \
               3.0)+cx1*t25401*t25411*t25254*t25369*(8.0/3.0)-cx2*t25401*t25254*t25381*t25369*(1.6E1/3.0)+cx2*t25254* \
               t25409*t25257*t25369*t25399-cx3*gamma_bb[index]*gx*t25400*t25254*t25377*t25369*8.0+cx3*gamma_bb[index]* \
               gx*t25402*t25406*t25254*t25256*t25369)*(8.0/3.0)+c0*t25209*(cx0+t25385*t25397+cx1*gamma_bb[index]* \
               gx*t25111*t25372+cx2*t25254*t25381*t25257*t25369+cx3*gamma_bb[index]*gx*t25254*t25256*t25377*t25369) \
               *(4.0/9.0))+(ccab0+ccab1*gcab*t25106*t25260+ccab2*t25105*t25107*t25258+ccab3*gcab*t25105*t25106*t25107* \
               t25259)*(-rho_b[index]*(-t25317-t25326+t25481+t25483+t25477+t25240*t25147*(t25317+t25326+t25480+t25482+ \
               t25475-t25230*t25323*t25228*t25229-t25314*t25243*t25245*t25468*2.0-a1f*c*c0f*t25312*t25241*(8.0/9.0) \
               -t25135*t25315*t25324*t25325*t25228*(1.0/2.0)-a1p*c*t25230*t25213*t25235*t25229*(2.0/3.0)))-t25122* \
               (t25284+t25293-t25140*t25282*t25176*t25177-t25170*t25173*t25147*t25166*(t25284+t25293-t25140*t25282* \
               t25176*t25177-1/(t25153*t25153*t25153)*t25264*t25159*t25285*2.0+t25264*t25265*t25159*(b2f*c*t25261* \
               (4.0/9.0)+b4f*t25262*t25129*(1.0E1/9.0)+b1f*c*t25261*t25175*(2.0/9.0)+b3f*c*t25125*t25261*(2.0/3.0) \
               -b1f*t25262*t25129*t25276*(1.0/3.6E1)+b3f*t25262*t25129*t25175*(1.0/1.2E1))+1/(t25153*t25153*t25153* \
               t25153)*1/(t25156*t25156)*t25148*t25159*t25285*(1.0/2.0)-a1f*c*c0f*t25261*t25157*(8.0/9.0)-t25140* \
               t25135*t25275*t25286*t25287*(1.0/2.0)+a1f*c*t25134*t25270*t25264*t25265*(2.0/3.0)-a1p*c*t25134*t25182* \
               t25176*t25177*(2.0/3.0))-t25200*t25170*t25173*t25272*t25147*2.0+t25200*t25161*t25173*t25147*t25183* \
               8.0+t25303*t25161*t25170*t25173*t25147+t25142*t25161*t25170*t25147*t25166*1.2E1+t25161*t25173*t25147* \
               t25166*t25294*2.0E1-t25173*t25272*t25147*t25183*t25166*8.0-t25140*t25135*t25275*t25286*t25287*(1.0/ \
               2.0)+t25200*t25141*t25142*t25161*t25170*t25147*8.0-t25141*t25142*t25170*t25272*t25147*t25166*8.0+t25141* \
               t25142*t25161*t25147*t25183*t25166*3.2E1-a1p*c*t25134*t25182*t25176*t25177*(2.0/3.0)+Aa*t25202*t25303* \
               t25147*t25184*t25194*t25196*2.0+Aa*t25200*t25147*t25184*t25194*t25196*t25297*4.0+Aa*t25147*t25166* \
               t25184*t25194*t25196*(t25142*t25170*1.2E1+t25173*t25294*2.0E1+t25141*t25142*t25183*3.2E1)*2.0-t25200* \
               t25202*t25310*t25304*t25305*t25147*t25184*t25196*2.0-t25310*t25304*t25305*t25147*t25166*t25184*t25196* \
               t25297*2.0+t25202*t25311*t25304*1/(t25190*t25190*t25190)*t25147*t25166*t25184*t25196*2.0-t25202*t25304* \
               t25305*t25147*t25166*t25184*t25196*(b2a*c*t25261*(4.0/9.0)+b4a*t25262*t25129*(1.0E1/9.0)+b1a*c*t25261* \
               t25175*(2.0/9.0)+b3a*c*t25125*t25261*(2.0/3.0)-b1a*t25262*t25129*t25276*(1.0/3.6E1)+b3a*t25262*t25129* \
               t25175*(1.0/1.2E1))+Aa*a1a*c*t25200*t25202*t25134*t25147*t25184*t25194*(4.0/3.0)+Aa*a1a*c*t25202*t25261* \
               t25147*t25166*t25184*t25194*(8.0/9.0)+Aa*a1a*c*t25134*t25147*t25166*t25184*t25194*t25297*(4.0/3.0) \
               -t25202*t25311*1/(t25190*t25190*t25190*t25190)*t25147*t25166*t25184*1/(t25193*t25193)*t25185*t25196* \
               (1.0/2.0)-a1a*c*t25202*t25310*t25304*t25134*t25305*t25147*t25166*t25184*(2.0/3.0))-t25240*t25147*t25327* \
               2.0+t25230*t25235*t25228*t25229*2.0-t25140*t25182*t25176*t25177*2.0+a1p*c*c0p*t25160*t25134*(4.0/3.0) \
               -a1p*c*c0p*t25213*t25237*(4.0/3.0)+t25200*t25161*t25170*t25173*t25147*2.0-t25170*t25173*t25272*t25147* \
               t25166*2.0+t25161*t25173*t25147*t25183*t25166*8.0+t25141*t25142*t25161*t25170*t25147*t25166*8.0+Aa* \
               t25200*t25202*t25147*t25184*t25194*t25196*4.0+Aa*t25147*t25166*t25184*t25194*t25196*t25297*4.0-t25202* \
               t25310*t25304*t25305*t25147*t25166*t25184*t25196*2.0+Aa*a1a*c*t25202*t25134*t25147*t25166*t25184*t25194* \
               (4.0/3.0))-rho_b[index]*t25434*(ccaa1*gamma_bb[index]*gcaa*t25356*t25437*(8.8E1/9.0)-ccaa1*t25351* \
               t25254*t25255*t25447*2.4E1+ccaa2*t25351*t25254*t25255*t25446*(3.04E2/9.0)-ccaa2*t25401*t25450*t25254* \
               t25255*t25456*(3.2E1/3.0)-ccaa2*t25254*t25255*t25257*t25456*(gamma_bb[index]*gcaa*t25356*(1.76E2/9.0) \
               +t25351*t25254*t25255*(3.04E2/9.0))+ccaa2*(t25450*t25450)*t25254*t25255*1/(t25445*t25445*t25445)*t25257* \
               2.0+ccaa3*gamma_bb[index]*gcaa*t25442*t25254*t25255*t25398*7.2E1+ccaa1*gamma_bb[index]*gcaa*t25254* \
               t25255*1/(t25436*t25436*t25436)*t25398*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*1/(t25441*t25441*t25441) \
               *t25254*t25255*t25256*(t25454*t25454)*2.0-ccaa3*gamma_bb[index]*gcaa*t25254*t25255*t25256*t25455*(gamma_bb[index]* \
               gcaa*t25356*(8.8E1/3.0)+t25351*t25254*t25255*(3.04E2/3.0)+gamma_bb[index]*gcaa*t25254*t25255*t25398* \
               7.2E1)-ccaa3*gamma_bb[index]*gcaa*t25400*t25254*t25255*t25454*t25455*1.6E1)+rho_b[index]*t25467*(- \
               t25317-t25326+t25481+t25483+t25477+t25240*t25147*(t25317+t25326+t25480-t25481+t25482-t25483+t25475- \
               t25477-t25314*t25243*t25245*t25468*2.0-a1f*c*c0f*t25312*t25241*(8.0/9.0)))-rho_b[index]*t25462*t25463* \
               2.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t27311 = 1/pow(rho_b[index],1.0/3.0);
            double t27312 = c*t27311;
            double t27313 = sqrt(t27312);
            double t27314 = b1f*t27313;
            double t27315 = pow(t27312,3.0/2.0);
            double t27316 = b3f*t27315;
            double t27317 = c*c;
            double t27318 = 1/pow(rho_b[index],2.0/3.0);
            double t27319 = b4f*t27317*t27318;
            double t27320 = b2f*c*t27311;
            double t27321 = t27320+t27314+t27316+t27319;
            double t27322 = 1/pow(rho_b[index],4.0/3.0);
            double t27323 = b1p*t27313;
            double t27324 = b3p*t27315;
            double t27325 = b4p*t27317*t27318;
            double t27326 = b2p*c*t27311;
            double t27327 = t27323+t27324+t27325+t27326;
            double t27328 = 1/pow(rho_b[index],5.0/3.0);
            double t27329 = 1/sqrt(t27312);
            double t27330 = 1/c0f;
            double t27331 = 1/t27321;
            double t27332 = t27330*t27331*(1.0/2.0);
            double t27333 = t27332+1.0;
            double t27334 = 1/c0p;
            double t27335 = 1/t27327;
            double t27336 = t27334*t27335*(1.0/2.0);
            double t27337 = t27336+1.0;
            double t27338 = a1p*c*t27311;
            double t27339 = t27338+1.0;
            double t27340 = 1/t27337;
            double t27341 = 1/(t27327*t27327);
            double t27342 = b4p*t27317*t27328*(2.0/3.0);
            double t27343 = b2p*c*t27322*(1.0/3.0);
            double t27344 = b1p*c*t27322*t27329*(1.0/6.0);
            double t27345 = b3p*c*t27313*t27322*(1.0/2.0);
            double t27346 = t27342+t27343+t27344+t27345;
            double t27347 = t27340*t27341*t27346*t27339;
            double t27348 = log(t27337);
            double t27349 = 1/pow(rho_b[index],8.0/3.0);
            double t27350 = gamma_bb[index]*gamma_bb[index];
            double t27351 = gcaa*gcaa;
            double t27352 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t27353 = 1/pow(rho_b[index],1.6E1/3.0);
            double t27354 = pow(2.0,1.0/3.0);
            double t27355 = t27354*2.0;
            double t27356 = t27355-2.0;
            double t27357 = two_13*2.0;
            double t27358 = t27357-2.0;
            double t27359 = 1/t27358;
            double t27360 = log(t27333);
            double t27361 = a1f*c*t27311;
            double t27362 = t27361+1.0;
            double t27363 = gamma_bb[index]*gcaa*t27349;
            double t27364 = t27363+1.0;
            double t27365 = 1/t27364;
            double t27366 = gamma_bb[index]*gcaa*t27349*3.0;
            double t27367 = gamma_bb[index]*gcaa*t27350*t27351*t27352;
            double t27368 = t27350*t27351*t27353*3.0;
            double t27369 = t27366+t27367+t27368+1.0;
            double t27370 = 1/t27369;
            double t27371 = gamma_bb[index]*gcaa*t27349*2.0;
            double t27372 = t27350*t27351*t27353;
            double t27373 = t27371+t27372+1.0;
            double t27374 = 1/t27373;
            double t27375 = 1/pow(rho_b[index],1.9E1/3.0);
            double t27376 = 1/pow(rho_b[index],1.1E1/3.0);
            double t27377 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t27378 = c0f*t27360*t27362*2.0;
            double t27379 = c0p*t27339*t27348*2.0;
            double t27380 = 1/pow(rho_b[index],1.0E1);
            double t27381 = 1/pow(rho_b[index],2.2E1/3.0);
            double t27382 = 1/(t27364*t27364);
            double t27383 = gamma_bb[index]*gcaa*t27376*(1.6E1/3.0);
            double t27384 = t27350*t27351*t27375*(1.6E1/3.0);
            double t27385 = t27383+t27384;
            double t27386 = gamma_bb[index]*gcaa*t27376*8.0;
            double t27387 = gamma_bb[index]*gcaa*t27350*t27351*t27377*8.0;
            double t27388 = t27350*t27351*t27375*1.6E1;
            double t27389 = t27386+t27387+t27388;
            double t27390 = 1/(t27369*t27369);
            double t27391 = 1/pow(rho_b[index],1.4E1/3.0);
            double t27392 = 1/(t27373*t27373);
            double t27393 = 1/t27333;
            double t27394 = 1/(t27321*t27321);
            double t27395 = b4f*t27317*t27328*(2.0/3.0);
            double t27396 = b2f*c*t27322*(1.0/3.0);
            double t27397 = b1f*c*t27322*t27329*(1.0/6.0);
            double t27398 = b3f*c*t27313*t27322*(1.0/2.0);
            double t27399 = t27395+t27396+t27397+t27398;
            double t27400 = a1f*c*c0f*t27322*t27360*(2.0/3.0);
            double t27401 = a1p*c*c0p*t27322*t27348*(2.0/3.0);
            double t27402 = ccaa1*gamma_bb[index]*gcaa*t27365*t27376*(8.0/3.0);
            double t27403 = ccaa3*gamma_bb[index]*gcaa*t27350*t27351*t27370*t27377*8.0;
            double t27404 = ccaa2*t27350*t27351*t27374*t27375*(1.6E1/3.0);
            double t27405 = t27402+t27403+t27404-ccaa1*t27350*t27351*t27382*t27375*(8.0/3.0)-ccaa2*t27350*t27351* \
               t27353*t27392*t27385-ccaa3*gamma_bb[index]*gcaa*t27350*t27351*t27352*t27390*t27389;
            double t27406 = ccaa1*gamma_bb[index]*gcaa*t27365*t27349;
            double t27407 = ccaa3*gamma_bb[index]*gcaa*t27350*t27351*t27352*t27370;
            double t27408 = ccaa2*t27350*t27351*t27353*t27374;
            double t27409 = ccaa0+t27406+t27407+t27408;
            double t27410 = 1/pow(rho_b[index],7.0/3.0);
            double t27411 = 1/pow(t27312,3.0/2.0);
            double t27412 = t27399*t27399;
            double t27413 = t27346*t27346;
            double t27414 = 1/(t27327*t27327*t27327);
            double t27415 = t27340*t27413*t27414*t27339*2.0;
            double t27416 = b4p*t27317*t27349*(1.0E1/9.0);
            double t27417 = b2p*c*t27410*(4.0/9.0);
            double t27418 = b3p*t27317*t27329*t27349*(1.0/1.2E1);
            double t27419 = b1p*c*t27410*t27329*(2.0/9.0);
            double t27420 = b3p*c*t27410*t27313*(2.0/3.0);
            double t27421 = t27420+t27416+t27417+t27418+t27419-b1p*t27411*t27317*t27349*(1.0/3.6E1);
            double t27422 = 1/(t27337*t27337);
            double t27423 = 1/(t27327*t27327*t27327*t27327);
            double t27424 = a1p*c*c0p*t27410*t27348*(8.0/9.0);
            double t27425 = pow(rho_b[index],5.0/3.0);
            double t27426 = 1/tau_b[index];
            double t27427 = C_k*t27425*t27426;
            double t27428 = t27427-1.0;
            double t27429 = t27428*t27428;
            double t27430 = t27427+1.0;
            double t27431 = t27429*t27429;
            double t27432 = gx*gx;
            double t27433 = gamma_bb[index]*gx*t27349;
            double t27434 = t27433+1.0;
            double t27435 = 1/t27434;
            double t27436 = gamma_bb[index]*gx*t27349*3.0;
            double t27437 = gamma_bb[index]*gx*t27350*t27432*t27352;
            double t27438 = t27350*t27432*t27353*3.0;
            double t27439 = t27436+t27437+t27438+1.0;
            double t27440 = 1/t27439;
            double t27441 = gamma_bb[index]*gx*t27349*2.0;
            double t27442 = t27350*t27432*t27353;
            double t27443 = t27441+t27442+1.0;
            double t27444 = 1/t27443;
            double t27445 = X-1.0;
            double t27446 = cxnl1*gamma_bb[index]*gx*t27435*t27349;
            double t27447 = cxnl3*gamma_bb[index]*gx*t27350*t27440*t27432*t27352;
            double t27448 = cxnl2*t27350*t27432*t27353*t27444;
            double t27449 = cxnl0+t27446+t27447+t27448;
            double t27450 = 1/t27430;
            double t27451 = pow(rho_b[index],4.0/3.0);
            double t27452 = 1/(t27430*t27430*t27430);
            double t27453 = 1/(t27430*t27430*t27430*t27430*t27430);
            double t27454 = C_k*C_k;
            double t27455 = 1/(tau_b[index]*tau_b[index]);
            double t27456 = 1/(t27430*t27430*t27430*t27430);
            double t27457 = 1/(t27430*t27430*t27430*t27430*t27430*t27430);
            double t27458 = 1/(t27430*t27430);
            double t27459 = t27450*t27428;
            double t27460 = t27431*t27453*t27428;
            double t27485 = t27452*t27428*t27429*2.0;
            double t27461 = t27460-t27485+t27459;
            double t27468 = gamma_bb[index]*gx*t27376*(1.6E1/3.0);
            double t27469 = t27350*t27432*t27375*(1.6E1/3.0);
            double t27462 = t27468+t27469;
            double t27463 = 1/(t27439*t27439);
            double t27464 = gamma_bb[index]*gx*t27376*8.0;
            double t27465 = gamma_bb[index]*gx*t27350*t27432*t27377*8.0;
            double t27466 = t27350*t27432*t27375*1.6E1;
            double t27467 = t27464+t27465+t27466;
            double t27470 = 1/(t27443*t27443);
            double t27471 = pow(rho_b[index],2.0/3.0);
            double t27472 = 1/(t27434*t27434);
            double t27473 = 1/(t27434*t27434*t27434);
            double t27474 = t27462*t27462;
            double t27475 = 1/(t27443*t27443*t27443);
            double t27476 = gamma_bb[index]*gx*t27391*(8.8E1/3.0);
            double t27477 = gamma_bb[index]*gx*t27350*t27432*t27380*7.2E1;
            double t27478 = t27350*t27432*t27381*(3.04E2/3.0);
            double t27479 = t27476+t27477+t27478;
            double t27480 = t27467*t27467;
            double t27481 = 1/(t27439*t27439*t27439);
            double t27482 = gamma_bb[index]*gx*t27391*(1.76E2/9.0);
            double t27483 = t27350*t27432*t27381*(3.04E2/9.0);
            double t27484 = t27482+t27483;
            double t27486 = cxnl1*gamma_bb[index]*gx*t27435*t27376*(8.0/3.0);
            double t27487 = cxnl3*gamma_bb[index]*gx*t27350*t27440*t27432*t27377*8.0;
            double t27488 = cxnl2*t27350*t27432*t27444*t27375*(1.6E1/3.0);
            double t27489 = t27486+t27487+t27488-cxnl1*t27350*t27432*t27472*t27375*(8.0/3.0)-cxnl2*t27350*t27432* \
               t27353*t27470*t27462-cxnl3*gamma_bb[index]*gx*t27350*t27432*t27352*t27463*t27467;
            double t27490 = C_k*t27450*t27426*t27471*(5.0/3.0);
            double t27491 = C_k*t27426*t27471*t27428*t27429*t27456*1.0E1;
            double t27492 = C_k*t27431*t27426*t27453*t27471*(2.5E1/3.0);
            double t27493 = t27490+t27491+t27492-C_k*t27452*t27426*t27471*t27429*1.0E1-C_k*t27426*t27471*t27428* \
               t27458*(5.0/3.0)-C_k*t27431*t27426*t27471*t27428*t27457*(2.5E1/3.0);
            v_rho_b_rho_b_[index] = t27405*(t27379+t27356*t27359*(t27378-c0p*t27339*t27348*2.0))*2.0+t27409*(t27401- \
               t27347+t27356*t27359*(t27400+t27347-t27362*t27393*t27394*t27399-a1p*c*c0p*t27322*t27348*(2.0/3.0)) \
               )*2.0+rho_b[index]*t27409*(-t27415-t27424+t27356*t27359*(t27415+t27424-t27340*t27421*t27341*t27339- \
               1/(t27321*t27321*t27321)*t27412*t27362*t27393*2.0+t27362*t27393*t27394*(b2f*c*t27410*(4.0/9.0)+b4f* \
               t27317*t27349*(1.0E1/9.0)+b1f*c*t27410*t27329*(2.0/9.0)+b3f*c*t27410*t27313*(2.0/3.0)-b1f*t27411*t27317* \
               t27349*(1.0/3.6E1)+b3f*t27317*t27329*t27349*(1.0/1.2E1))+1/(t27321*t27321*t27321*t27321)*t27330*t27412* \
               1/(t27333*t27333)*t27362*(1.0/2.0)-a1f*c*c0f*t27410*t27360*(8.0/9.0)-t27413*t27422*t27423*t27334*t27339* \
               (1.0/2.0)+a1f*c*t27322*t27393*t27394*t27399*(2.0/3.0)-a1p*c*t27322*t27340*t27341*t27346*(2.0/3.0)) \
               +t27340*t27421*t27341*t27339+t27413*t27422*t27423*t27334*t27339*(1.0/2.0)+a1p*c*t27322*t27340*t27341* \
               t27346*(2.0/3.0))-rho_b[index]*t27405*(t27401-t27347+t27356*t27359*(t27400-t27401+t27347-t27362*t27393* \
               t27394*t27399))*2.0-rho_b[index]*(t27379+t27356*t27359*(t27378-t27379))*(ccaa1*gamma_bb[index]*gcaa* \
               t27391*t27365*(8.8E1/9.0)-ccaa1*t27350*t27351*t27381*t27382*2.4E1+ccaa2*t27350*t27351*t27381*t27374* \
               (3.04E2/9.0)-ccaa2*t27350*t27351*t27392*t27375*t27385*(3.2E1/3.0)-ccaa2*t27350*t27351*t27353*t27392* \
               (gamma_bb[index]*gcaa*t27391*(1.76E2/9.0)+t27350*t27351*t27381*(3.04E2/9.0))+ccaa2*t27350*t27351*t27353* \
               1/(t27373*t27373*t27373)*(t27385*t27385)*2.0+ccaa3*gamma_bb[index]*gcaa*t27350*t27351*t27370*t27380* \
               7.2E1+ccaa1*gamma_bb[index]*gcaa*t27350*t27351*t27380*1/(t27364*t27364*t27364)*(1.28E2/9.0)+ccaa3* \
               gamma_bb[index]*gcaa*t27350*t27351*t27352*1/(t27369*t27369*t27369)*(t27389*t27389)*2.0-ccaa3*gamma_bb[index]* \
               gcaa*t27350*t27351*t27352*t27390*(gamma_bb[index]*gcaa*t27391*(8.8E1/3.0)+t27350*t27351*t27381*(3.04E2/ \
               3.0)+gamma_bb[index]*gcaa*t27350*t27351*t27380*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t27350*t27351*t27390* \
               t27377*t27389*1.6E1)-c0*t27318*t27445*(cx0+t27461*t27449+cx1*gamma_bb[index]*gx*t27435*t27349+cx2* \
               t27350*t27432*t27353*t27444+cx3*gamma_bb[index]*gx*t27350*t27440*t27432*t27352)*(4.0/9.0)+c0*t27451* \
               t27445*(t27449*(t27451*t27454*t27455*t27458*(5.0E1/9.0)-C_k*t27311*t27450*t27426*(1.0E1/9.0)-C_k*t27311* \
               t27431*t27426*t27453*(5.0E1/9.0)+C_k*t27311*t27452*t27426*t27429*(2.0E1/3.0)+C_k*t27311*t27426*t27428* \
               t27458*(1.0E1/9.0)+t27431*t27451*t27454*t27455*t27457*(1.25E3/9.0)+t27451*t27452*t27454*t27428*t27455* \
               (2.5E2/9.0)-t27451*t27454*t27455*t27429*t27456*1.0E2+t27451*t27453*t27454*t27428*t27455*t27429*(1.0E2/ \
               9.0)-1/(t27430*t27430*t27430*t27430*t27430*t27430*t27430)*t27431*t27451*t27454*t27428*t27455*(2.5E2/ \
               3.0)+C_k*t27311*t27431*t27426*t27428*t27457*(5.0E1/9.0)-C_k*t27311*t27426*t27428*t27429*t27456*(2.0E1/ \
               3.0))-t27461*(cxnl1*gamma_bb[index]*gx*t27435*t27391*(8.8E1/9.0)-cxnl1*t27350*t27432*t27381*t27472* \
               2.4E1+cxnl2*t27350*t27432*t27381*t27444*(3.04E2/9.0)-cxnl2*t27350*t27432*t27353*t27470*t27484-cxnl2* \
               t27350*t27432*t27470*t27462*t27375*(3.2E1/3.0)+cxnl2*t27350*t27432*t27353*t27474*t27475*2.0+cxnl3* \
               gamma_bb[index]*gx*t27350*t27440*t27432*t27380*7.2E1+cxnl1*gamma_bb[index]*gx*t27350*t27432*t27380* \
               t27473*(1.28E2/9.0)+cxnl3*gamma_bb[index]*gx*t27350*t27432*t27352*t27480*t27481*2.0-cxnl3*gamma_bb[index]* \
               gx*t27350*t27432*t27352*t27463*t27479-cxnl3*gamma_bb[index]*gx*t27350*t27432*t27463*t27377*t27467* \
               1.6E1)+t27493*t27489*2.0-cx1*gamma_bb[index]*gx*t27435*t27391*(8.8E1/9.0)+cx1*t27350*t27432*t27381* \
               t27472*2.4E1-cx2*t27350*t27432*t27381*t27444*(3.04E2/9.0)+cx2*t27350*t27432*t27353*t27470*t27484+cx2* \
               t27350*t27432*t27470*t27462*t27375*(3.2E1/3.0)-cx2*t27350*t27432*t27353*t27474*t27475*2.0-cx1*gamma_bb[index]* \
               gx*t27350*t27432*t27380*t27473*(1.28E2/9.0)-cx3*gamma_bb[index]*gx*t27350*t27440*t27432*t27380*7.2E1- \
               cx3*gamma_bb[index]*gx*t27350*t27432*t27352*t27480*t27481*2.0+cx3*gamma_bb[index]*gx*t27350*t27432* \
               t27352*t27463*t27479+cx3*gamma_bb[index]*gx*t27350*t27432*t27463*t27377*t27467*1.6E1)+c0*pow(rho_b[index],1.0/ \
               3.0)*t27445*(t27461*t27489-t27493*t27449+cx1*gamma_bb[index]*gx*t27435*t27376*(8.0/3.0)-cx1*t27350* \
               t27432*t27472*t27375*(8.0/3.0)+cx2*t27350*t27432*t27444*t27375*(1.6E1/3.0)-cx2*t27350*t27432*t27353* \
               t27470*t27462+cx3*gamma_bb[index]*gx*t27350*t27440*t27432*t27377*8.0-cx3*gamma_bb[index]*gx*t27350* \
               t27432*t27352*t27463*t27467)*(8.0/3.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t25485 = 1/pow(rho_a[index],1.0/3.0);
                double t25486 = c*t25485;
                double t25487 = sqrt(t25486);
                double t25488 = pow(t25486,3.0/2.0);
                double t25489 = c*c;
                double t25490 = 1/pow(rho_a[index],2.0/3.0);
                double t25491 = 1/c0p;
                double t25492 = b1p*t25487;
                double t25493 = b3p*t25488;
                double t25494 = b4p*t25490*t25489;
                double t25495 = b2p*c*t25485;
                double t25496 = t25492+t25493+t25494+t25495;
                double t25497 = 1/t25496;
                double t25498 = t25491*t25497*(1.0/2.0);
                double t25499 = t25498+1.0;
                double t25500 = log(t25499);
                double t25501 = a1p*c*t25485;
                double t25502 = t25501+1.0;
                double t25503 = pow(2.0,1.0/3.0);
                double t25504 = t25503*2.0;
                double t25505 = t25504-2.0;
                double t25506 = two_13*2.0;
                double t25507 = t25506-2.0;
                double t25508 = 1/t25507;
                double t25509 = 1/c0f;
                double t25510 = 1/pow(rho_b[index],1.0/3.0);
                double t25511 = c*t25510;
                double t25512 = sqrt(t25511);
                double t25513 = pow(t25511,3.0/2.0);
                double t25514 = 1/pow(rho_b[index],2.0/3.0);
                double t25515 = b1p*t25512;
                double t25516 = b3p*t25513;
                double t25517 = b4p*t25514*t25489;
                double t25518 = b2p*c*t25510;
                double t25519 = t25515+t25516+t25517+t25518;
                double t25520 = 1/t25519;
                double t25521 = t25520*t25491*(1.0/2.0);
                double t25522 = t25521+1.0;
                double t25523 = log(t25522);
                double t25524 = a1p*c*t25510;
                double t25525 = t25524+1.0;
                double t25526 = c0p*t25523*t25525*2.0;
                double t25527 = rho_a[index]+rho_b[index];
                double t25528 = 1/pow(t25527,1.0/3.0);
                double t25529 = c*t25528;
                double t25530 = sqrt(t25529);
                double t25531 = pow(t25529,3.0/2.0);
                double t25532 = 1/pow(t25527,2.0/3.0);
                double t25533 = b1p*t25530;
                double t25534 = b3p*t25531;
                double t25535 = b4p*t25532*t25489;
                double t25536 = b2p*c*t25528;
                double t25537 = t25533+t25534+t25535+t25536;
                double t25538 = 1/t25537;
                double t25539 = t25491*t25538*(1.0/2.0);
                double t25540 = t25539+1.0;
                double t25541 = log(t25540);
                double t25542 = a1p*c*t25528;
                double t25543 = t25542+1.0;
                double t25544 = c0p*t25541*t25543*2.0;
                double t25545 = rho_a[index]-rho_b[index];
                double t25546 = t25545*t25545;
                double t25547 = 1/t25527;
                double t25548 = t25545*t25547;
                double t25549 = 1/(t25527*t25527*t25527*t25527);
                double t25550 = t25546*t25546;
                double t25551 = t25548+1.0;
                double t25552 = pow(t25551,4.0/3.0);
                double t25553 = -t25548+1.0;
                double t25554 = pow(t25553,4.0/3.0);
                double t25555 = t25552+t25554-2.0;
                double t25556 = 1/pow(rho_a[index],1.1E1/3.0);
                double t25557 = 1/pow(rho_a[index],8.0/3.0);
                double t25558 = gamma_aa[index]*t25557*(1.0/2.0);
                double t25559 = 1/pow(rho_b[index],8.0/3.0);
                double t25560 = gamma_bb[index]*t25559*(1.0/2.0);
                double t25561 = t25560+t25558;
                double t25562 = gcab*t25561;
                double t25563 = t25562+1.0;
                double t25564 = gcab*gcab;
                double t25565 = t25561*t25561;
                double t25566 = 1/pow(rho_a[index],1.9E1/3.0);
                double t25567 = t25564*t25565;
                double t25568 = gcab*t25561*2.0;
                double t25569 = t25567+t25568+1.0;
                double t25570 = t25564*t25565*3.0;
                double t25571 = gcab*t25561*t25564*t25565;
                double t25572 = gcab*t25561*3.0;
                double t25573 = t25570+t25571+t25572+1.0;
                double t25574 = 1/(t25563*t25563);
                double t25575 = 1/t25569;
                double t25576 = 1/(t25573*t25573);
                double t25577 = 1/(t25569*t25569);
                double t25578 = gamma_aa[index]*gcab*t25556*(8.0/3.0);
                double t25579 = gamma_aa[index]*t25561*t25564*t25556*(8.0/3.0);
                double t25580 = t25578+t25579;
                double t25581 = 1/t25573;
                double t25582 = gamma_aa[index]*gcab*t25556*4.0;
                double t25583 = gamma_aa[index]*gcab*t25564*t25556*t25565*4.0;
                double t25584 = gamma_aa[index]*t25561*t25564*t25556*8.0;
                double t25585 = t25582+t25583+t25584;
                double t25586 = gcab*t25557;
                double t25587 = t25561*t25564*t25557;
                double t25588 = t25586+t25587;
                double t25589 = gcab*t25557*(3.0/2.0);
                double t25590 = t25561*t25564*t25557*3.0;
                double t25591 = gcab*t25564*t25565*t25557*(3.0/2.0);
                double t25592 = t25590+t25591+t25589;
                double t25593 = b1f*t25487;
                double t25594 = b3f*t25488;
                double t25595 = b4f*t25490*t25489;
                double t25596 = b2f*c*t25485;
                double t25597 = t25593+t25594+t25595+t25596;
                double t25598 = 1/t25597;
                double t25599 = t25509*t25598*(1.0/2.0);
                double t25600 = t25599+1.0;
                double t25601 = log(t25600);
                double t25602 = a1f*c*t25485;
                double t25603 = t25602+1.0;
                double t25604 = c0f*t25601*t25603*2.0;
                double t25605 = c0p*t25500*t25502*2.0;
                double t25606 = gcaa*gcaa;
                double t25607 = 1/pow(rho_a[index],1.6E1/3.0);
                double t25608 = gamma_aa[index]*gamma_aa[index];
                double t25609 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t25610 = gamma_aa[index]*gcaa*t25557;
                double t25611 = t25610+1.0;
                double t25612 = gamma_aa[index]*gcaa*t25557*3.0;
                double t25613 = gamma_aa[index]*gcaa*t25606*t25608*t25609;
                double t25614 = t25606*t25607*t25608*3.0;
                double t25615 = t25612+t25613+t25614+1.0;
                double t25616 = gamma_aa[index]*gcaa*t25557*2.0;
                double t25617 = t25606*t25607*t25608;
                double t25618 = t25616+t25617+1.0;
                double t25619 = 1/tau_a[index];
                double t25620 = pow(rho_a[index],2.0/3.0);
                double t25621 = pow(rho_a[index],5.0/3.0);
                double t25622 = C_k*t25621*t25619;
                double t25623 = t25622-1.0;
                double t25624 = t25622+1.0;
                double t25625 = t25623*t25623;
                double t25626 = t25625*t25625;
                double t25627 = gx*gx;
                double t25628 = gamma_aa[index]*gx*t25557;
                double t25629 = t25628+1.0;
                double t25630 = gamma_aa[index]*gx*t25557*3.0;
                double t25631 = gamma_aa[index]*gx*t25608*t25609*t25627;
                double t25632 = t25607*t25608*t25627*3.0;
                double t25633 = t25630+t25631+t25632+1.0;
                double t25634 = gamma_aa[index]*gx*t25557*2.0;
                double t25635 = t25607*t25608*t25627;
                double t25636 = t25634+t25635+1.0;
                double t25637 = 1/t25624;
                double t25638 = 1/(t25624*t25624*t25624);
                double t25639 = 1/(t25624*t25624*t25624*t25624*t25624);
                double t25640 = 1/t25629;
                double t25641 = 1/t25636;
                double t25642 = 1/t25633;
                double t25643 = 1/(t25629*t25629);
                double t25644 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t25645 = 1/(t25633*t25633);
                double t25646 = 1/(t25636*t25636);
                double t25647 = gx*t25557*3.0;
                double t25648 = gamma_aa[index]*t25607*t25627*6.0;
                double t25649 = gx*t25608*t25609*t25627*3.0;
                double t25650 = t25647+t25648+t25649;
                double t25651 = gx*t25557*2.0;
                double t25652 = gamma_aa[index]*t25607*t25627*2.0;
                double t25653 = t25651+t25652;
                double t25654 = gamma_aa[index]*gx*t25556*(1.6E1/3.0);
                double t25655 = t25608*t25627*t25566*(1.6E1/3.0);
                double t25656 = t25654+t25655;
                double t25657 = gamma_aa[index]*gx*t25556*8.0;
                double t25658 = gamma_aa[index]*gx*t25608*t25644*t25627*8.0;
                double t25659 = t25608*t25627*t25566*1.6E1;
                double t25660 = t25657+t25658+t25659;
                double t25661 = 1/(t25629*t25629*t25629);
                double t25662 = gx*t25556*8.0;
                double t25663 = gamma_aa[index]*t25627*t25566*3.2E1;
                double t25664 = gx*t25608*t25644*t25627*2.4E1;
                double t25665 = t25662+t25663+t25664;
                double t25666 = gx*t25556*(1.6E1/3.0);
                double t25667 = gamma_aa[index]*t25627*t25566*(3.2E1/3.0);
                double t25668 = t25666+t25667;
                double t25669 = 1/(t25636*t25636*t25636);
                double t25670 = 1/(t25633*t25633*t25633);
                double t25671 = t25623*t25637;
                double t25672 = t25623*t25626*t25639;
                double t25673 = t25671+t25672-t25623*t25625*t25638*2.0;
                double t25674 = cxnl1*gx*t25640*t25557;
                double t25675 = cxnl2*gamma_aa[index]*t25641*t25607*t25627*2.0;
                double t25676 = cxnl3*gx*t25642*t25608*t25609*t25627*3.0;
                double t25677 = t25674+t25675+t25676-cxnl1*gamma_aa[index]*t25607*t25643*t25627-cxnl2*t25607*t25608* \
                   t25653*t25627*t25646-cxnl3*gamma_aa[index]*gx*t25650*t25608*t25609*t25627*t25645;
                double t25678 = 1/t25563;
                double t25679 = 1/pow(t25527,4.0/3.0);
                double t25680 = b1f*t25530;
                double t25681 = b3f*t25531;
                double t25682 = b4f*t25532*t25489;
                double t25683 = b2f*c*t25528;
                double t25684 = t25680+t25681+t25682+t25683;
                double t25685 = 1/t25684;
                double t25686 = t25509*t25685*(1.0/2.0);
                double t25687 = t25686+1.0;
                double t25688 = log(t25687);
                double t25689 = a1f*c*t25528;
                double t25690 = t25689+1.0;
                double t25692 = c0f*t25690*t25688*2.0;
                double t25691 = t25544-t25692;
                double t25693 = 1/(t25527*t25527);
                double t25720 = t25545*t25693;
                double t25694 = -t25720+t25547;
                double t25695 = 1/pow(t25527,5.0/3.0);
                double t25696 = 1/sqrt(t25529);
                double t25697 = 1/t25540;
                double t25698 = 1/(t25537*t25537);
                double t25699 = b4p*t25695*t25489*(2.0/3.0);
                double t25700 = b2p*c*t25679*(1.0/3.0);
                double t25701 = b1p*c*t25696*t25679*(1.0/6.0);
                double t25702 = b3p*c*t25530*t25679*(1.0/2.0);
                double t25703 = t25700+t25701+t25702+t25699;
                double t25704 = t25703*t25543*t25697*t25698;
                double t25705 = 1/d2fz0;
                double t25706 = 1/Aa;
                double t25707 = b1a*t25530;
                double t25708 = b3a*t25531;
                double t25709 = b4a*t25532*t25489;
                double t25710 = b2a*c*t25528;
                double t25711 = t25710+t25707+t25708+t25709;
                double t25712 = 1/t25711;
                double t25713 = t25712*t25706*(1.0/2.0);
                double t25714 = t25713+1.0;
                double t25715 = log(t25714);
                double t25716 = a1a*c*t25528;
                double t25717 = t25716+1.0;
                double t25718 = 1/(t25527*t25527*t25527*t25527*t25527);
                double t25719 = pow(t25551,1.0/3.0);
                double t25721 = t25719*t25694*(4.0/3.0);
                double t25722 = pow(t25553,1.0/3.0);
                double t25723 = t25721-t25722*t25694*(4.0/3.0);
                double t25724 = t25550*t25549;
                double t25725 = t25724-1.0;
                double t25726 = 1/pow(rho_a[index],4.0/3.0);
                double t25727 = 1/pow(rho_a[index],5.0/3.0);
                double t25728 = 1/sqrt(t25486);
                double t25729 = 1/t25499;
                double t25730 = 1/(t25496*t25496);
                double t25731 = b4p*t25727*t25489*(2.0/3.0);
                double t25732 = b2p*c*t25726*(1.0/3.0);
                double t25733 = b1p*c*t25726*t25728*(1.0/6.0);
                double t25734 = b3p*c*t25726*t25487*(1.0/2.0);
                double t25735 = t25731+t25732+t25733+t25734;
                double t25736 = t25502*t25730*t25735*t25729;
                double t25737 = t25604-t25605;
                double t25738 = t25505*t25508*t25737;
                double t25739 = Aa*t25705*t25508*t25715*t25725*t25555*t25717*2.0;
                double t25740 = t25605+t25738;
                double t25741 = 1/t25611;
                double t25742 = 1/t25618;
                double t25743 = 1/t25615;
                double t25744 = 1/(t25611*t25611);
                double t25745 = 1/(t25615*t25615);
                double t25746 = 1/(t25618*t25618);
                double t25747 = gcaa*t25557*3.0;
                double t25748 = gamma_aa[index]*t25606*t25607*6.0;
                double t25749 = gcaa*t25606*t25608*t25609*3.0;
                double t25750 = t25747+t25748+t25749;
                double t25751 = gcaa*t25557*2.0;
                double t25752 = gamma_aa[index]*t25606*t25607*2.0;
                double t25753 = t25751+t25752;
                double t25754 = gamma_aa[index]*gcaa*t25556*(1.6E1/3.0);
                double t25755 = t25606*t25608*t25566*(1.6E1/3.0);
                double t25756 = t25754+t25755;
                double t25757 = gamma_aa[index]*gcaa*t25556*8.0;
                double t25758 = gamma_aa[index]*gcaa*t25606*t25608*t25644*8.0;
                double t25759 = t25606*t25608*t25566*1.6E1;
                double t25760 = t25757+t25758+t25759;
                double t25761 = 1/t25600;
                double t25762 = 1/(t25597*t25597);
                double t25763 = b4f*t25727*t25489*(2.0/3.0);
                double t25764 = b2f*c*t25726*(1.0/3.0);
                double t25765 = b1f*c*t25726*t25728*(1.0/6.0);
                double t25766 = b3f*c*t25726*t25487*(1.0/2.0);
                double t25767 = t25763+t25764+t25765+t25766;
                double t25768 = a1f*c*c0f*t25601*t25726*(2.0/3.0);
                double t25769 = a1p*c*c0p*t25500*t25726*(2.0/3.0);
                double t25770 = ccaa1*gcaa*t25741*t25557;
                double t25771 = ccaa2*gamma_aa[index]*t25606*t25607*t25742*2.0;
                double t25772 = ccaa3*gcaa*t25606*t25608*t25743*t25609*3.0;
                double t25773 = t25770+t25771+t25772-ccaa1*gamma_aa[index]*t25606*t25607*t25744-ccaa2*t25606*t25607* \
                   t25608*t25753*t25746-ccaa3*gamma_aa[index]*gcaa*t25606*t25750*t25608*t25609*t25745;
                v_rho_a_gamma_aa_[index] = -t25740*t25773-(c0*pow(rho_a[index],1.0/3.0)*(t25673*t25677+cx1*gx*t25640* \
                   t25557-cx1*gamma_aa[index]*t25607*t25643*t25627+cx2*gamma_aa[index]*t25641*t25607*t25627*2.0-cx2*t25607* \
                   t25608*t25653*t25627*t25646+cx3*gx*t25642*t25608*t25609*t25627*3.0-cx3*gamma_aa[index]*gx*t25650*t25608* \
                   t25609*t25627*t25645)*(4.0/3.0)+c0*pow(rho_a[index],4.0/3.0)*(t25673*(cxnl1*gx*t25640*t25556*(-8.0/ \
                   3.0)-cxnl2*gamma_aa[index]*t25641*t25627*t25566*(3.2E1/3.0)+cxnl1*gamma_aa[index]*t25643*t25627*t25566* \
                   8.0+cxnl2*t25608*t25653*t25627*t25646*t25566*(1.6E1/3.0)+cxnl2*t25607*t25608*t25627*t25646*t25668+ \
                   cxnl2*gamma_aa[index]*t25607*t25627*t25646*t25656*2.0-cxnl1*gx*t25661*t25608*t25644*t25627*(1.6E1/ \
                   3.0)-cxnl3*gx*t25642*t25608*t25644*t25627*2.4E1+cxnl3*gx*t25660*t25608*t25609*t25627*t25645*3.0-cxnl2* \
                   t25607*t25608*t25653*t25627*t25656*t25669*2.0+cxnl3*gamma_aa[index]*gx*t25650*t25608*t25644*t25627* \
                   t25645*8.0+cxnl3*gamma_aa[index]*gx*t25608*t25609*t25627*t25645*t25665-cxnl3*gamma_aa[index]*gx*t25650* \
                   t25660*t25670*t25608*t25609*t25627*2.0)+t25677*(C_k*t25620*t25619*t25637*(5.0/3.0)-C_k*t25620*t25625* \
                   t25619*t25638*1.0E1+C_k*t25620*t25626*t25619*t25639*(2.5E1/3.0)-C_k*t25620*t25623*1/(t25624*t25624) \
                   *t25619*(5.0/3.0)+C_k*t25620*t25623*1/(t25624*t25624*t25624*t25624)*t25625*t25619*1.0E1-C_k*t25620* \
                   t25623*1/(t25624*t25624*t25624*t25624*t25624*t25624)*t25626*t25619*(2.5E1/3.0))-cx1*gx*t25640*t25556* \
                   (8.0/3.0)+cx1*gamma_aa[index]*t25643*t25627*t25566*8.0-cx2*gamma_aa[index]*t25641*t25627*t25566*(3.2E1/ \
                   3.0)+cx2*t25608*t25653*t25627*t25646*t25566*(1.6E1/3.0)+cx2*t25607*t25608*t25627*t25646*t25668+cx2* \
                   gamma_aa[index]*t25607*t25627*t25646*t25656*2.0-cx1*gx*t25661*t25608*t25644*t25627*(1.6E1/3.0)-cx3* \
                   gx*t25642*t25608*t25644*t25627*2.4E1+cx3*gx*t25660*t25608*t25609*t25627*t25645*3.0-cx2*t25607*t25608* \
                   t25653*t25627*t25656*t25669*2.0+cx3*gamma_aa[index]*gx*t25650*t25608*t25644*t25627*t25645*8.0+cx3* \
                   gamma_aa[index]*gx*t25608*t25609*t25627*t25645*t25665-cx3*gamma_aa[index]*gx*t25650*t25660*t25670* \
                   t25608*t25609*t25627*2.0))*(X-1.0)-(rho_a[index]*(t25605+t25505*t25508*(t25604-c0p*t25500*t25502*2.0) \
                   )+rho_b[index]*(t25526-t25505*t25508*(t25526-c0f*log((t25509*(1.0/2.0))/(b1f*t25512+b3f*t25513+b2f* \
                   c*t25510+b4f*t25514*t25489)+1.0)*(a1f*c*t25510+1.0)*2.0))-t25527*(t25544+t25739-t25550*t25508*t25555* \
                   t25691*t25549))*(ccab1*gcab*t25556*t25678*(4.0/3.0)-ccab2*t25564*t25565*t25577*(gcab*t25556*(8.0/3.0) \
                   +gamma_aa[index]*t25564*t25566*(4.0/3.0)+t25561*t25564*t25556*(8.0/3.0))-ccab1*gamma_aa[index]*t25564* \
                   t25574*t25566*(4.0/3.0)+ccab2*gamma_aa[index]*t25564*t25566*t25575*(4.0/3.0)-ccab1*t25561*t25564*t25556* \
                   t25574*(4.0/3.0)+ccab2*t25561*t25564*t25556*t25575*(8.0/3.0)-ccab2*t25561*t25580*t25564*t25557*t25577+ \
                   ccab2*t25580*t25564*t25565*1/(t25569*t25569*t25569)*t25588*2.0+ccab3*gcab*t25581*t25564*t25556*t25565* \
                   4.0+ccab3*gamma_aa[index]*gcab*t25561*t25581*t25564*t25566*4.0-ccab2*gamma_aa[index]*t25561*t25564* \
                   t25556*t25577*t25588*(8.0/3.0)-ccab3*gcab*t25564*t25565*t25557*t25576*t25585*(3.0/2.0)-ccab3*gcab* \
                   t25561*t25564*t25565*t25576*(gcab*t25556*4.0+gamma_aa[index]*t25564*t25566*4.0+t25561*t25564*t25556* \
                   8.0+gcab*t25564*t25556*t25565*4.0+gamma_aa[index]*gcab*t25561*t25564*t25566*4.0)+ccab1*gamma_aa[index]* \
                   gcab*t25561*1/(t25563*t25563*t25563)*t25564*t25566*(4.0/3.0)+ccab3*gcab*t25561*t25564*1/(t25573*t25573* \
                   t25573)*t25565*t25592*t25585*2.0-ccab3*gamma_aa[index]*gcab*t25564*t25556*t25565*t25592*t25576*4.0) \
                   +(ccab1*gcab*t25557*t25678*(1.0/2.0)-ccab1*t25561*t25564*t25574*t25557*(1.0/2.0)+ccab2*t25561*t25564* \
                   t25557*t25575-ccab2*t25564*t25565*t25577*t25588+ccab3*gcab*t25581*t25564*t25565*t25557*(3.0/2.0)-ccab3* \
                   gcab*t25561*t25564*t25565*t25592*t25576)*(t25605-t25544+t25738-t25739-rho_a[index]*(-t25736+t25769+ \
                   t25505*t25508*(t25736+t25768-t25603*t25761*t25762*t25767-a1p*c*c0p*t25500*t25726*(2.0/3.0)))+t25527* \
                   (-t25704+t25550*t25508*t25555*t25549*(t25704-(t25690*1/(t25684*t25684)*(b2f*c*t25679*(1.0/3.0)+b4f* \
                   t25695*t25489*(2.0/3.0)+b1f*c*t25696*t25679*(1.0/6.0)+b3f*c*t25530*t25679*(1.0/2.0)))/t25687+a1f*c* \
                   c0f*t25679*t25688*(2.0/3.0)-a1p*c*c0p*t25541*t25679*(2.0/3.0))+a1p*c*c0p*t25541*t25679*(2.0/3.0)+t25550* \
                   t25723*t25508*t25691*t25549-t25550*t25508*t25555*t25691*t25718*4.0+t25508*t25545*t25546*t25555*t25691* \
                   t25549*4.0+Aa*t25705*t25508*t25715*t25555*t25717*(t25550*t25718*4.0-t25545*t25546*t25549*4.0)*2.0- \
                   Aa*t25705*t25723*t25508*t25715*t25725*t25717*2.0-(1/(t25711*t25711)*t25705*t25508*t25725*t25555*t25717* \
                   (b2a*c*t25679*(1.0/3.0)+b4a*t25695*t25489*(2.0/3.0)+b1a*c*t25696*t25679*(1.0/6.0)+b3a*c*t25530*t25679* \
                   (1.0/2.0)))/t25714+Aa*a1a*c*t25705*t25508*t25715*t25725*t25555*t25679*(2.0/3.0))+t25550*t25508*t25555* \
                   t25691*t25549)+rho_a[index]*t25773*(-t25736+t25769+t25505*t25508*(t25736+t25768-t25769-t25603*t25761* \
                   t25762*t25767))-rho_a[index]*t25740*(ccaa1*gcaa*t25741*t25556*(-8.0/3.0)-ccaa2*gamma_aa[index]*t25606* \
                   t25742*t25566*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t25606*t25744*t25566*8.0+ccaa2*t25606*t25608*t25753* \
                   t25566*t25746*(1.6E1/3.0)-ccaa1*gcaa*1/(t25611*t25611*t25611)*t25606*t25608*t25644*(1.6E1/3.0)+ccaa2* \
                   t25606*t25607*t25608*t25746*(gcaa*t25556*(1.6E1/3.0)+gamma_aa[index]*t25606*t25566*(3.2E1/3.0))+ccaa2* \
                   gamma_aa[index]*t25606*t25607*t25746*t25756*2.0-ccaa3*gcaa*t25606*t25608*t25644*t25743*2.4E1+ccaa3* \
                   gcaa*t25606*t25760*t25608*t25609*t25745*3.0-ccaa2*t25606*t25607*t25608*1/(t25618*t25618*t25618)*t25753* \
                   t25756*2.0+ccaa3*gamma_aa[index]*gcaa*t25606*t25608*t25609*t25745*(gcaa*t25556*8.0+gamma_aa[index]* \
                   t25606*t25566*3.2E1+gcaa*t25606*t25608*t25644*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t25606*t25750*t25608* \
                   t25644*t25745*8.0-ccaa3*gamma_aa[index]*gcaa*t25606*1/(t25615*t25615*t25615)*t25750*t25760*t25608* \
                   t25609*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t28266 = 1/pow(rho_a[index],1.0/3.0);
                double t28267 = c*t28266;
                double t28268 = sqrt(t28267);
                double t28269 = pow(t28267,3.0/2.0);
                double t28270 = c*c;
                double t28271 = 1/pow(rho_a[index],2.0/3.0);
                double t28272 = 1/c0p;
                double t28273 = b1p*t28268;
                double t28274 = b3p*t28269;
                double t28275 = b4p*t28270*t28271;
                double t28276 = b2p*c*t28266;
                double t28277 = t28273+t28274+t28275+t28276;
                double t28278 = 1/t28277;
                double t28279 = t28272*t28278*(1.0/2.0);
                double t28280 = t28279+1.0;
                double t28281 = log(t28280);
                double t28282 = a1p*c*t28266;
                double t28283 = t28282+1.0;
                double t28284 = 1/pow(rho_a[index],8.0/3.0);
                double t28285 = gcaa*gcaa;
                double t28286 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28287 = gamma_aa[index]*gamma_aa[index];
                double t28288 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28289 = gamma_aa[index]*gcaa*t28284;
                double t28290 = t28289+1.0;
                double t28291 = gamma_aa[index]*gcaa*t28284*3.0;
                double t28292 = gamma_aa[index]*gcaa*t28285*t28287*t28288;
                double t28293 = t28285*t28286*t28287*3.0;
                double t28294 = t28291+t28292+t28293+1.0;
                double t28295 = gamma_aa[index]*gcaa*t28284*2.0;
                double t28296 = t28285*t28286*t28287;
                double t28297 = t28295+t28296+1.0;
                double t28298 = pow(2.0,1.0/3.0);
                double t28299 = t28298*2.0;
                double t28300 = t28299-2.0;
                double t28301 = two_13*2.0;
                double t28302 = t28301-2.0;
                double t28303 = 1/t28302;
                double t28304 = 1/c0f;
                double t28305 = b1f*t28268;
                double t28306 = b3f*t28269;
                double t28307 = b4f*t28270*t28271;
                double t28308 = b2f*c*t28266;
                double t28309 = t28305+t28306+t28307+t28308;
                double t28310 = 1/t28309;
                double t28311 = t28310*t28304*(1.0/2.0);
                double t28312 = t28311+1.0;
                double t28313 = log(t28312);
                double t28314 = a1f*c*t28266;
                double t28315 = t28314+1.0;
                double t28316 = c0f*t28313*t28315*2.0;
                double t28317 = c0p*t28281*t28283*2.0;
                double t28318 = 1/t28290;
                double t28319 = 1/t28297;
                double t28320 = 1/t28294;
                double t28321 = 1/pow(rho_a[index],1.9E1/3.0);
                double t28322 = 1/(t28290*t28290);
                double t28323 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t28324 = 1/pow(rho_a[index],1.1E1/3.0);
                double t28325 = 1/(t28294*t28294);
                double t28326 = 1/(t28297*t28297);
                double t28327 = gcaa*t28284*3.0;
                double t28328 = gamma_aa[index]*t28285*t28286*6.0;
                double t28329 = gcaa*t28285*t28287*t28288*3.0;
                double t28330 = t28327+t28328+t28329;
                double t28331 = gcaa*t28284*2.0;
                double t28332 = gamma_aa[index]*t28285*t28286*2.0;
                double t28333 = t28331+t28332;
                double t28334 = gamma_aa[index]*gcaa*t28324*(1.6E1/3.0);
                double t28335 = t28321*t28285*t28287*(1.6E1/3.0);
                double t28336 = t28334+t28335;
                double t28337 = gamma_aa[index]*gcaa*t28324*8.0;
                double t28338 = gamma_aa[index]*gcaa*t28323*t28285*t28287*8.0;
                double t28339 = t28321*t28285*t28287*1.6E1;
                double t28340 = t28337+t28338+t28339;
                double t28341 = 1/pow(rho_a[index],4.0/3.0);
                double t28342 = 1/pow(rho_a[index],5.0/3.0);
                double t28343 = 1/sqrt(t28267);
                double t28344 = 1/t28280;
                double t28345 = 1/(t28277*t28277);
                double t28346 = b4p*t28270*t28342*(2.0/3.0);
                double t28347 = b2p*c*t28341*(1.0/3.0);
                double t28348 = b1p*c*t28341*t28343*(1.0/6.0);
                double t28349 = b3p*c*t28341*t28268*(1.0/2.0);
                double t28350 = t28346+t28347+t28348+t28349;
                double t28351 = t28350*t28344*t28345*t28283;
                double t28352 = ccaa1*gcaa*t28318*t28284;
                double t28353 = ccaa2*gamma_aa[index]*t28319*t28285*t28286*2.0;
                double t28354 = ccaa3*gcaa*t28320*t28285*t28287*t28288*3.0;
                double t28355 = t28352+t28353+t28354-ccaa1*gamma_aa[index]*t28322*t28285*t28286-ccaa2*t28333*t28326* \
                   t28285*t28286*t28287-ccaa3*gamma_aa[index]*gcaa*t28330*t28325*t28285*t28287*t28288;
                double t28356 = 1/tau_a[index];
                double t28357 = pow(rho_a[index],2.0/3.0);
                double t28358 = pow(rho_a[index],5.0/3.0);
                double t28359 = C_k*t28356*t28358;
                double t28360 = t28359-1.0;
                double t28361 = t28359+1.0;
                double t28362 = t28360*t28360;
                double t28363 = t28362*t28362;
                double t28364 = gx*gx;
                double t28365 = gamma_aa[index]*gx*t28284;
                double t28366 = t28365+1.0;
                double t28367 = gamma_aa[index]*gx*t28284*3.0;
                double t28368 = gamma_aa[index]*gx*t28364*t28287*t28288;
                double t28369 = t28364*t28286*t28287*3.0;
                double t28370 = t28367+t28368+t28369+1.0;
                double t28371 = gamma_aa[index]*gx*t28284*2.0;
                double t28372 = t28364*t28286*t28287;
                double t28373 = t28371+t28372+1.0;
                double t28374 = 1/t28361;
                double t28375 = 1/(t28361*t28361*t28361);
                double t28376 = 1/(t28361*t28361*t28361*t28361*t28361);
                double t28377 = 1/t28366;
                double t28378 = 1/t28373;
                double t28379 = 1/t28370;
                double t28380 = 1/(t28366*t28366);
                double t28381 = 1/(t28370*t28370);
                double t28382 = 1/(t28373*t28373);
                double t28383 = gx*t28284*3.0;
                double t28384 = gamma_aa[index]*t28364*t28286*6.0;
                double t28385 = gx*t28364*t28287*t28288*3.0;
                double t28386 = t28383+t28384+t28385;
                double t28387 = gx*t28284*2.0;
                double t28388 = gamma_aa[index]*t28364*t28286*2.0;
                double t28389 = t28387+t28388;
                double t28390 = gamma_aa[index]*gx*t28324*(1.6E1/3.0);
                double t28391 = t28321*t28364*t28287*(1.6E1/3.0);
                double t28392 = t28390+t28391;
                double t28393 = gamma_aa[index]*gx*t28324*8.0;
                double t28394 = gamma_aa[index]*gx*t28323*t28364*t28287*8.0;
                double t28395 = t28321*t28364*t28287*1.6E1;
                double t28396 = t28393+t28394+t28395;
                double t28397 = 1/(t28366*t28366*t28366);
                double t28398 = gx*t28324*8.0;
                double t28399 = gamma_aa[index]*t28321*t28364*3.2E1;
                double t28400 = gx*t28323*t28364*t28287*2.4E1;
                double t28401 = t28400+t28398+t28399;
                double t28402 = gx*t28324*(1.6E1/3.0);
                double t28403 = gamma_aa[index]*t28321*t28364*(3.2E1/3.0);
                double t28404 = t28402+t28403;
                double t28405 = 1/(t28373*t28373*t28373);
                double t28406 = 1/(t28370*t28370*t28370);
                double t28407 = X-1.0;
                double t28408 = t28360*t28374;
                double t28409 = t28360*t28363*t28376;
                double t28410 = t28408+t28409-t28360*t28362*t28375*2.0;
                double t28411 = cxnl1*gx*t28284*t28377;
                double t28412 = cxnl2*gamma_aa[index]*t28364*t28286*t28378*2.0;
                double t28413 = cxnl3*gx*t28364*t28287*t28288*t28379*3.0;
                double t28414 = t28411+t28412+t28413-cxnl1*gamma_aa[index]*t28380*t28364*t28286-cxnl2*t28364*t28382* \
                   t28286*t28287*t28389-cxnl3*gamma_aa[index]*gx*t28381*t28364*t28287*t28386*t28288;
                v_rho_a_gamma_aa_[index] = -t28355*(t28317+t28300*t28303*(t28316-c0p*t28281*t28283*2.0))+rho_a[index]* \
                   t28355*(-t28351+t28300*t28303*(t28351-(t28315*1/(t28309*t28309)*(b2f*c*t28341*(1.0/3.0)+b4f*t28270* \
                   t28342*(2.0/3.0)+b1f*c*t28341*t28343*(1.0/6.0)+b3f*c*t28341*t28268*(1.0/2.0)))/t28312+a1f*c*c0f*t28313* \
                   t28341*(2.0/3.0)-a1p*c*c0p*t28341*t28281*(2.0/3.0))+a1p*c*c0p*t28341*t28281*(2.0/3.0))-rho_a[index]* \
                   (t28317+t28300*t28303*(t28316-t28317))*(ccaa1*gcaa*t28324*t28318*(-8.0/3.0)+ccaa1*gamma_aa[index]* \
                   t28321*t28322*t28285*8.0-ccaa2*gamma_aa[index]*t28321*t28319*t28285*(3.2E1/3.0)+ccaa2*t28321*t28333* \
                   t28326*t28285*t28287*(1.6E1/3.0)-ccaa1*gcaa*t28323*1/(t28290*t28290*t28290)*t28285*t28287*(1.6E1/3.0) \
                   +ccaa2*t28326*t28285*t28286*t28287*(gcaa*t28324*(1.6E1/3.0)+gamma_aa[index]*t28321*t28285*(3.2E1/3.0) \
                   )+ccaa2*gamma_aa[index]*t28326*t28336*t28285*t28286*2.0-ccaa3*gcaa*t28320*t28323*t28285*t28287*2.4E1+ \
                   ccaa3*gcaa*t28340*t28325*t28285*t28287*t28288*3.0-ccaa2*t28333*t28336*t28285*t28286*t28287*1/(t28297* \
                   t28297*t28297)*2.0+ccaa3*gamma_aa[index]*gcaa*t28325*t28285*t28287*t28288*(gcaa*t28324*8.0+gamma_aa[index]* \
                   t28321*t28285*3.2E1+gcaa*t28323*t28285*t28287*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t28330*t28323*t28325* \
                   t28285*t28287*8.0-ccaa3*gamma_aa[index]*gcaa*t28330*t28340*t28285*1/(t28294*t28294*t28294)*t28287* \
                   t28288*2.0)-c0*pow(rho_a[index],4.0/3.0)*t28407*(t28410*(cxnl1*gx*t28324*t28377*(-8.0/3.0)+cxnl1*gamma_aa[index]* \
                   t28321*t28380*t28364*8.0-cxnl2*gamma_aa[index]*t28321*t28364*t28378*(3.2E1/3.0)+cxnl2*t28404*t28364* \
                   t28382*t28286*t28287+cxnl2*t28321*t28364*t28382*t28287*t28389*(1.6E1/3.0)+cxnl2*gamma_aa[index]*t28364* \
                   t28382*t28392*t28286*2.0-cxnl1*gx*t28323*t28364*t28287*t28397*(1.6E1/3.0)-cxnl3*gx*t28323*t28364*t28287* \
                   t28379*2.4E1+cxnl3*gx*t28381*t28364*t28287*t28288*t28396*3.0-cxnl2*t28405*t28364*t28392*t28286*t28287* \
                   t28389*2.0+cxnl3*gamma_aa[index]*gx*t28401*t28381*t28364*t28287*t28288+cxnl3*gamma_aa[index]*gx*t28323* \
                   t28381*t28364*t28287*t28386*8.0-cxnl3*gamma_aa[index]*gx*t28406*t28364*t28287*t28386*t28288*t28396* \
                   2.0)+t28414*(C_k*t28356*t28374*t28357*(5.0/3.0)-C_k*t28362*t28356*t28357*t28375*1.0E1+C_k*t28363*t28356* \
                   t28357*t28376*(2.5E1/3.0)-C_k*t28360*1/(t28361*t28361)*t28356*t28357*(5.0/3.0)+C_k*t28360*1/(t28361* \
                   t28361*t28361*t28361)*t28362*t28356*t28357*1.0E1-C_k*t28360*1/(t28361*t28361*t28361*t28361*t28361* \
                   t28361)*t28363*t28356*t28357*(2.5E1/3.0))-cx1*gx*t28324*t28377*(8.0/3.0)+cx1*gamma_aa[index]*t28321* \
                   t28380*t28364*8.0-cx2*gamma_aa[index]*t28321*t28364*t28378*(3.2E1/3.0)+cx2*t28404*t28364*t28382*t28286* \
                   t28287+cx2*t28321*t28364*t28382*t28287*t28389*(1.6E1/3.0)+cx2*gamma_aa[index]*t28364*t28382*t28392* \
                   t28286*2.0-cx1*gx*t28323*t28364*t28287*t28397*(1.6E1/3.0)-cx3*gx*t28323*t28364*t28287*t28379*2.4E1+ \
                   cx3*gx*t28381*t28364*t28287*t28288*t28396*3.0-cx2*t28405*t28364*t28392*t28286*t28287*t28389*2.0+cx3* \
                   gamma_aa[index]*gx*t28401*t28381*t28364*t28287*t28288+cx3*gamma_aa[index]*gx*t28323*t28381*t28364* \
                   t28287*t28386*8.0-cx3*gamma_aa[index]*gx*t28406*t28364*t28287*t28386*t28288*t28396*2.0)-c0*pow(rho_a[index],1.0/ \
                   3.0)*t28407*(t28410*t28414+cx1*gx*t28284*t28377-cx1*gamma_aa[index]*t28380*t28364*t28286+cx2*gamma_aa[index]* \
                   t28364*t28286*t28378*2.0-cx2*t28364*t28382*t28286*t28287*t28389+cx3*gx*t28364*t28287*t28288*t28379* \
                   3.0-cx3*gamma_aa[index]*gx*t28381*t28364*t28287*t28386*t28288)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t25776 = 1/pow(rho_a[index],1.0/3.0);
                double t25777 = c*t25776;
                double t25778 = sqrt(t25777);
                double t25779 = pow(t25777,3.0/2.0);
                double t25780 = c*c;
                double t25781 = 1/pow(rho_a[index],2.0/3.0);
                double t25782 = 1/c0p;
                double t25783 = b1p*t25778;
                double t25784 = b3p*t25779;
                double t25785 = b4p*t25780*t25781;
                double t25786 = b2p*c*t25776;
                double t25787 = t25783+t25784+t25785+t25786;
                double t25788 = 1/t25787;
                double t25789 = t25782*t25788*(1.0/2.0);
                double t25790 = t25789+1.0;
                double t25791 = log(t25790);
                double t25792 = a1p*c*t25776;
                double t25793 = t25792+1.0;
                double t25794 = pow(2.0,1.0/3.0);
                double t25795 = t25794*2.0;
                double t25796 = t25795-2.0;
                double t25797 = two_13*2.0;
                double t25798 = t25797-2.0;
                double t25799 = 1/t25798;
                double t25800 = 1/c0f;
                double t25801 = 1/pow(rho_b[index],1.0/3.0);
                double t25802 = c*t25801;
                double t25803 = sqrt(t25802);
                double t25804 = pow(t25802,3.0/2.0);
                double t25805 = 1/pow(rho_b[index],2.0/3.0);
                double t25806 = b1p*t25803;
                double t25807 = b3p*t25804;
                double t25808 = b4p*t25805*t25780;
                double t25809 = b2p*c*t25801;
                double t25810 = t25806+t25807+t25808+t25809;
                double t25811 = 1/t25810;
                double t25812 = t25811*t25782*(1.0/2.0);
                double t25813 = t25812+1.0;
                double t25814 = log(t25813);
                double t25815 = a1p*c*t25801;
                double t25816 = t25815+1.0;
                double t25817 = c0p*t25814*t25816*2.0;
                double t25818 = rho_a[index]+rho_b[index];
                double t25819 = 1/pow(t25818,1.0/3.0);
                double t25820 = c*t25819;
                double t25821 = sqrt(t25820);
                double t25822 = pow(t25820,3.0/2.0);
                double t25823 = 1/pow(t25818,2.0/3.0);
                double t25824 = b1p*t25821;
                double t25825 = b3p*t25822;
                double t25826 = b4p*t25823*t25780;
                double t25827 = b2p*c*t25819;
                double t25828 = t25824+t25825+t25826+t25827;
                double t25829 = 1/t25828;
                double t25830 = t25782*t25829*(1.0/2.0);
                double t25831 = t25830+1.0;
                double t25832 = log(t25831);
                double t25833 = a1p*c*t25819;
                double t25834 = t25833+1.0;
                double t25835 = c0p*t25832*t25834*2.0;
                double t25836 = rho_a[index]-rho_b[index];
                double t25837 = t25836*t25836;
                double t25838 = 1/t25818;
                double t25839 = t25836*t25838;
                double t25840 = 1/(t25818*t25818*t25818*t25818);
                double t25841 = t25837*t25837;
                double t25842 = t25839+1.0;
                double t25843 = pow(t25842,4.0/3.0);
                double t25844 = -t25839+1.0;
                double t25845 = pow(t25844,4.0/3.0);
                double t25846 = t25843+t25845-2.0;
                double t25847 = gcab*gcab;
                double t25848 = 1/pow(rho_a[index],1.1E1/3.0);
                double t25849 = 1/pow(rho_b[index],8.0/3.0);
                double t25850 = 1/pow(rho_a[index],8.0/3.0);
                double t25851 = gamma_aa[index]*t25850*(1.0/2.0);
                double t25852 = gamma_bb[index]*t25849*(1.0/2.0);
                double t25853 = t25851+t25852;
                double t25854 = t25853*t25853;
                double t25855 = t25854*t25847*3.0;
                double t25856 = gcab*t25853*t25854*t25847;
                double t25857 = gcab*t25853*3.0;
                double t25858 = t25855+t25856+t25857+1.0;
                double t25859 = 1/(t25858*t25858);
                double t25860 = gamma_aa[index]*gcab*t25848*(8.0/3.0);
                double t25861 = gamma_aa[index]*t25853*t25847*t25848*(8.0/3.0);
                double t25862 = t25860+t25861;
                double t25863 = t25854*t25847;
                double t25864 = gcab*t25853*2.0;
                double t25865 = t25863+t25864+1.0;
                double t25866 = gamma_aa[index]*gcab*t25848*4.0;
                double t25867 = gamma_aa[index]*gcab*t25854*t25847*t25848*4.0;
                double t25868 = gamma_aa[index]*t25853*t25847*t25848*8.0;
                double t25869 = t25866+t25867+t25868;
                double t25870 = gcab*t25849;
                double t25871 = t25853*t25847*t25849;
                double t25872 = t25870+t25871;
                double t25873 = 1/(t25865*t25865);
                double t25874 = gcab*t25853;
                double t25875 = t25874+1.0;
                double t25876 = gcab*t25849*(3.0/2.0);
                double t25877 = t25853*t25847*t25849*3.0;
                double t25878 = gcab*t25854*t25847*t25849*(3.0/2.0);
                double t25879 = t25876+t25877+t25878;
                double t25880 = c0p*t25791*t25793*2.0;
                double t25881 = 1/(t25875*t25875);
                double t25882 = 1/t25865;
                double t25883 = 1/t25858;
                double t25884 = 1/pow(t25818,4.0/3.0);
                double t25885 = b1f*t25821;
                double t25886 = b3f*t25822;
                double t25887 = b4f*t25823*t25780;
                double t25888 = b2f*c*t25819;
                double t25889 = t25885+t25886+t25887+t25888;
                double t25890 = 1/t25889;
                double t25891 = t25800*t25890*(1.0/2.0);
                double t25892 = t25891+1.0;
                double t25893 = log(t25892);
                double t25894 = a1f*c*t25819;
                double t25895 = t25894+1.0;
                double t25897 = c0f*t25893*t25895*2.0;
                double t25896 = t25835-t25897;
                double t25898 = 1/(t25818*t25818);
                double t25925 = t25836*t25898;
                double t25899 = -t25925+t25838;
                double t25900 = 1/pow(t25818,5.0/3.0);
                double t25901 = 1/sqrt(t25820);
                double t25902 = 1/t25831;
                double t25903 = 1/(t25828*t25828);
                double t25904 = b4p*t25900*t25780*(2.0/3.0);
                double t25905 = b2p*c*t25884*(1.0/3.0);
                double t25906 = b1p*c*t25901*t25884*(1.0/6.0);
                double t25907 = b3p*c*t25821*t25884*(1.0/2.0);
                double t25908 = t25904+t25905+t25906+t25907;
                double t25909 = t25902*t25903*t25834*t25908;
                double t25910 = 1/d2fz0;
                double t25911 = 1/Aa;
                double t25912 = b1a*t25821;
                double t25913 = b3a*t25822;
                double t25914 = b4a*t25823*t25780;
                double t25915 = b2a*c*t25819;
                double t25916 = t25912+t25913+t25914+t25915;
                double t25917 = 1/t25916;
                double t25918 = t25911*t25917*(1.0/2.0);
                double t25919 = t25918+1.0;
                double t25920 = log(t25919);
                double t25921 = a1a*c*t25819;
                double t25922 = t25921+1.0;
                double t25923 = 1/(t25818*t25818*t25818*t25818*t25818);
                double t25924 = pow(t25842,1.0/3.0);
                double t25926 = t25924*t25899*(4.0/3.0);
                double t25927 = pow(t25844,1.0/3.0);
                double t25928 = t25926-t25927*t25899*(4.0/3.0);
                double t25929 = t25840*t25841;
                double t25930 = t25929-1.0;
                double t25931 = a1f*c*t25776;
                double t25932 = t25931+1.0;
                double t25933 = b1f*t25778;
                double t25934 = b3f*t25779;
                double t25935 = b4f*t25780*t25781;
                double t25936 = b2f*c*t25776;
                double t25937 = t25933+t25934+t25935+t25936;
                double t25938 = 1/t25937;
                double t25939 = t25800*t25938*(1.0/2.0);
                double t25940 = t25939+1.0;
                double t25941 = 1/pow(rho_a[index],4.0/3.0);
                double t25942 = 1/pow(rho_a[index],5.0/3.0);
                double t25943 = 1/sqrt(t25777);
                double t25944 = log(t25940);
                double t25945 = 1/t25790;
                double t25946 = 1/(t25787*t25787);
                double t25947 = b4p*t25780*t25942*(2.0/3.0);
                double t25948 = b2p*c*t25941*(1.0/3.0);
                double t25949 = b1p*c*t25941*t25943*(1.0/6.0);
                double t25950 = b3p*c*t25941*t25778*(1.0/2.0);
                double t25951 = t25950+t25947+t25948+t25949;
                double t25952 = t25951*t25945*t25793*t25946;
                double t25953 = Aa*t25910*t25920*t25930*t25922*t25846*t25799*2.0;
                double t25954 = t25880-c0f*t25932*t25944*2.0;
                v_rho_a_gamma_bb_[index] = -((ccab1*gcab*t25849*(1.0/2.0))/t25875-ccab2*t25854*t25872*t25873*t25847- \
                   ccab1*t25853*t25881*t25847*t25849*(1.0/2.0)+ccab2*t25853*t25882*t25847*t25849+ccab3*gcab*t25854*t25847* \
                   t25883*t25849*(3.0/2.0)-ccab3*gcab*t25853*t25854*t25847*t25859*t25879)*(t25835-t25880+t25953+rho_a[index]* \
                   (-t25952+t25796*t25799*(t25952-(t25932*1/(t25937*t25937)*(b2f*c*t25941*(1.0/3.0)+b4f*t25780*t25942* \
                   (2.0/3.0)+b1f*c*t25941*t25943*(1.0/6.0)+b3f*c*t25941*t25778*(1.0/2.0)))/t25940+a1f*c*c0f*t25941*t25944* \
                   (2.0/3.0)-a1p*c*c0p*t25941*t25791*(2.0/3.0))+a1p*c*c0p*t25941*t25791*(2.0/3.0))-t25818*(-t25909+t25840* \
                   t25841*t25846*t25799*(t25909-(t25895*1/(t25889*t25889)*(b2f*c*t25884*(1.0/3.0)+b4f*t25900*t25780*(2.0/ \
                   3.0)+b1f*c*t25901*t25884*(1.0/6.0)+b3f*c*t25821*t25884*(1.0/2.0)))/t25892+a1f*c*c0f*t25884*t25893* \
                   (2.0/3.0)-a1p*c*c0p*t25832*t25884*(2.0/3.0))+a1p*c*c0p*t25832*t25884*(2.0/3.0)+t25840*t25841*t25928* \
                   t25896*t25799-t25841*t25923*t25846*t25896*t25799*4.0+t25840*t25836*t25837*t25846*t25896*t25799*4.0+ \
                   Aa*t25910*t25920*t25922*t25846*t25799*(t25841*t25923*4.0-t25840*t25836*t25837*4.0)*2.0-Aa*t25910*t25920* \
                   t25930*t25922*t25928*t25799*2.0-(t25910*t25930*t25922*1/(t25916*t25916)*t25846*t25799*(b2a*c*t25884* \
                   (1.0/3.0)+b4a*t25900*t25780*(2.0/3.0)+b1a*c*t25901*t25884*(1.0/6.0)+b3a*c*t25821*t25884*(1.0/2.0)) \
                   )/t25919+Aa*a1a*c*t25910*t25920*t25930*t25846*t25884*t25799*(2.0/3.0))+t25954*t25796*t25799-t25840* \
                   t25841*t25846*t25896*t25799)+(rho_a[index]*(t25880-t25954*t25796*t25799)+rho_b[index]*(t25817-t25796* \
                   t25799*(t25817-c0f*log((t25800*(1.0/2.0))/(b1f*t25803+b3f*t25804+b2f*c*t25801+b4f*t25805*t25780)+1.0) \
                   *(a1f*c*t25801+1.0)*2.0))-t25818*(t25835+t25953-t25840*t25841*t25846*t25896*t25799))*(ccab2*t25853* \
                   t25862*t25873*t25847*t25849-ccab2*t25862*t25854*t25872*t25847*1/(t25865*t25865*t25865)*2.0+ccab1*gamma_aa[index]* \
                   t25881*t25847*t25848*t25849*(4.0/3.0)-ccab2*gamma_aa[index]*t25882*t25847*t25848*t25849*(4.0/3.0)+ \
                   ccab2*gamma_aa[index]*t25853*t25872*t25873*t25847*t25848*(8.0/3.0)+ccab3*gcab*t25854*t25847*t25849* \
                   t25859*t25869*(3.0/2.0)+ccab3*gcab*t25853*t25854*t25847*t25859*(gamma_aa[index]*t25847*t25848*t25849* \
                   4.0+gamma_aa[index]*gcab*t25853*t25847*t25848*t25849*4.0)+ccab2*gamma_aa[index]*t25854*t25873*(t25847* \
                   t25847)*t25848*t25849*(4.0/3.0)-ccab1*gamma_aa[index]*gcab*t25853*t25847*t25848*1/(t25875*t25875*t25875) \
                   *t25849*(4.0/3.0)-ccab3*gcab*t25853*t25854*t25847*1/(t25858*t25858*t25858)*t25869*t25879*2.0-ccab3* \
                   gamma_aa[index]*gcab*t25853*t25847*t25883*t25848*t25849*4.0+ccab3*gamma_aa[index]*gcab*t25854*t25847* \
                   t25848*t25859*t25879*4.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t25956 = 1/pow(rho_a[index],1.0/3.0);
                double t25957 = c*t25956;
                double t25958 = sqrt(t25957);
                double t25959 = pow(t25957,3.0/2.0);
                double t25960 = c*c;
                double t25961 = 1/pow(rho_a[index],2.0/3.0);
                double t25962 = 1/c0p;
                double t25963 = b1p*t25958;
                double t25964 = b3p*t25959;
                double t25965 = b4p*t25960*t25961;
                double t25966 = b2p*c*t25956;
                double t25967 = t25963+t25964+t25965+t25966;
                double t25968 = 1/t25967;
                double t25969 = t25962*t25968*(1.0/2.0);
                double t25970 = t25969+1.0;
                double t25971 = log(t25970);
                double t25972 = a1p*c*t25956;
                double t25973 = t25972+1.0;
                double t25974 = pow(2.0,1.0/3.0);
                double t25975 = t25974*2.0;
                double t25976 = t25975-2.0;
                double t25977 = two_13*2.0;
                double t25978 = t25977-2.0;
                double t25979 = 1/t25978;
                double t25980 = 1/c0f;
                double t25981 = 1/pow(rho_b[index],1.0/3.0);
                double t25982 = c*t25981;
                double t25983 = sqrt(t25982);
                double t25984 = pow(t25982,3.0/2.0);
                double t25985 = 1/pow(rho_b[index],2.0/3.0);
                double t25986 = b1p*t25983;
                double t25987 = b3p*t25984;
                double t25988 = b4p*t25960*t25985;
                double t25989 = b2p*c*t25981;
                double t25990 = t25986+t25987+t25988+t25989;
                double t25991 = 1/t25990;
                double t25992 = t25962*t25991*(1.0/2.0);
                double t25993 = t25992+1.0;
                double t25994 = log(t25993);
                double t25995 = a1p*c*t25981;
                double t25996 = t25995+1.0;
                double t25997 = c0p*t25994*t25996*2.0;
                double t25998 = rho_a[index]+rho_b[index];
                double t25999 = 1/pow(t25998,1.0/3.0);
                double t26000 = c*t25999;
                double t26001 = sqrt(t26000);
                double t26002 = pow(t26000,3.0/2.0);
                double t26003 = 1/pow(t25998,2.0/3.0);
                double t26004 = b1p*t26001;
                double t26005 = b3p*t26002;
                double t26006 = b4p*t25960*t26003;
                double t26007 = b2p*c*t25999;
                double t26008 = t26004+t26005+t26006+t26007;
                double t26009 = 1/t26008;
                double t26010 = t25962*t26009*(1.0/2.0);
                double t26011 = t26010+1.0;
                double t26012 = log(t26011);
                double t26013 = a1p*c*t25999;
                double t26014 = t26013+1.0;
                double t26015 = c0p*t26012*t26014*2.0;
                double t26016 = rho_a[index]-rho_b[index];
                double t26017 = t26016*t26016;
                double t26018 = 1/t25998;
                double t26019 = t26016*t26018;
                double t26020 = 1/(t25998*t25998*t25998*t25998);
                double t26021 = t26017*t26017;
                double t26022 = t26019+1.0;
                double t26023 = pow(t26022,4.0/3.0);
                double t26024 = -t26019+1.0;
                double t26025 = pow(t26024,4.0/3.0);
                double t26026 = t26023+t26025-2.0;
                double t26027 = gcab*gcab;
                double t26028 = 1/pow(rho_a[index],8.0/3.0);
                double t26029 = 1/pow(rho_b[index],1.1E1/3.0);
                double t26030 = gamma_aa[index]*t26028*(1.0/2.0);
                double t26031 = 1/pow(rho_b[index],8.0/3.0);
                double t26032 = gamma_bb[index]*t26031*(1.0/2.0);
                double t26033 = t26030+t26032;
                double t26034 = t26033*t26033;
                double t26035 = t26034*t26027*3.0;
                double t26036 = gcab*t26033*t26034*t26027;
                double t26037 = gcab*t26033*3.0;
                double t26038 = t26035+t26036+t26037+1.0;
                double t26039 = 1/(t26038*t26038);
                double t26040 = gamma_bb[index]*gcab*t26029*(8.0/3.0);
                double t26041 = gamma_bb[index]*t26033*t26027*t26029*(8.0/3.0);
                double t26042 = t26040+t26041;
                double t26043 = t26034*t26027;
                double t26044 = gcab*t26033*2.0;
                double t26045 = t26043+t26044+1.0;
                double t26046 = gamma_bb[index]*gcab*t26029*4.0;
                double t26047 = gamma_bb[index]*gcab*t26034*t26027*t26029*4.0;
                double t26048 = gamma_bb[index]*t26033*t26027*t26029*8.0;
                double t26049 = t26046+t26047+t26048;
                double t26050 = gcab*t26028;
                double t26051 = t26033*t26027*t26028;
                double t26052 = t26050+t26051;
                double t26053 = 1/(t26045*t26045);
                double t26054 = gcab*t26033;
                double t26055 = t26054+1.0;
                double t26056 = gcab*t26028*(3.0/2.0);
                double t26057 = t26033*t26027*t26028*3.0;
                double t26058 = gcab*t26034*t26027*t26028*(3.0/2.0);
                double t26059 = t26056+t26057+t26058;
                double t26060 = c0p*t25971*t25973*2.0;
                double t26061 = 1/(t26055*t26055);
                double t26062 = 1/t26045;
                double t26063 = 1/t26038;
                double t26064 = 1/pow(t25998,4.0/3.0);
                double t26065 = b1f*t26001;
                double t26066 = b3f*t26002;
                double t26067 = b4f*t25960*t26003;
                double t26068 = b2f*c*t25999;
                double t26069 = t26065+t26066+t26067+t26068;
                double t26070 = 1/t26069;
                double t26071 = t25980*t26070*(1.0/2.0);
                double t26072 = t26071+1.0;
                double t26073 = log(t26072);
                double t26074 = a1f*c*t25999;
                double t26075 = t26074+1.0;
                double t26077 = c0f*t26073*t26075*2.0;
                double t26076 = t26015-t26077;
                double t26078 = 1/(t25998*t25998);
                double t26079 = t26016*t26078;
                double t26080 = t26018+t26079;
                double t26081 = 1/pow(t25998,5.0/3.0);
                double t26082 = 1/sqrt(t26000);
                double t26083 = 1/t26011;
                double t26084 = 1/(t26008*t26008);
                double t26085 = b4p*t25960*t26081*(2.0/3.0);
                double t26086 = b2p*c*t26064*(1.0/3.0);
                double t26087 = b1p*c*t26064*t26082*(1.0/6.0);
                double t26088 = b3p*c*t26001*t26064*(1.0/2.0);
                double t26089 = t26085+t26086+t26087+t26088;
                double t26090 = 1/d2fz0;
                double t26091 = 1/Aa;
                double t26092 = b1a*t26001;
                double t26093 = b3a*t26002;
                double t26094 = b4a*t25960*t26003;
                double t26095 = b2a*c*t25999;
                double t26096 = t26092+t26093+t26094+t26095;
                double t26097 = 1/t26096;
                double t26098 = t26091*t26097*(1.0/2.0);
                double t26099 = t26098+1.0;
                double t26100 = log(t26099);
                double t26101 = a1a*c*t25999;
                double t26102 = t26101+1.0;
                double t26103 = 1/(t25998*t25998*t25998*t25998*t25998);
                double t26104 = pow(t26022,1.0/3.0);
                double t26105 = t26104*t26080*(4.0/3.0);
                double t26106 = pow(t26024,1.0/3.0);
                double t26107 = t26105-t26106*t26080*(4.0/3.0);
                double t26108 = t26020*t26021;
                double t26109 = t26108-1.0;
                double t26110 = t26014*t26083*t26084*t26089;
                double t26111 = a1f*c*t25981;
                double t26112 = t26111+1.0;
                double t26113 = b1f*t25983;
                double t26114 = b3f*t25984;
                double t26115 = b4f*t25960*t25985;
                double t26116 = b2f*c*t25981;
                double t26117 = t26113+t26114+t26115+t26116;
                double t26118 = 1/t26117;
                double t26119 = t25980*t26118*(1.0/2.0);
                double t26120 = t26119+1.0;
                double t26121 = 1/pow(rho_b[index],4.0/3.0);
                double t26122 = 1/pow(rho_b[index],5.0/3.0);
                double t26123 = 1/sqrt(t25982);
                double t26124 = log(t26120);
                double t26125 = 1/t25993;
                double t26126 = 1/(t25990*t25990);
                double t26127 = b4p*t25960*t26122*(2.0/3.0);
                double t26128 = b2p*c*t26121*(1.0/3.0);
                double t26129 = b1p*c*t26121*t26123*(1.0/6.0);
                double t26130 = b3p*c*t25983*t26121*(1.0/2.0);
                double t26131 = t26130+t26127+t26128+t26129;
                double t26132 = t25996*t26131*t26125*t26126;
                double t26133 = t25997-c0f*t26112*t26124*2.0;
                double t26134 = Aa*t25979*t26100*t26102*t26026*t26090*t26109*2.0;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t25997-t25976*t25979*t26133)+rho_a[index]*(t26060-t25976* \
                   t25979*(t26060-c0f*log((t25980*(1.0/2.0))/(b1f*t25958+b3f*t25959+b2f*c*t25956+b4f*t25960*t25961)+1.0) \
                   *(a1f*c*t25956+1.0)*2.0))-t25998*(t26015+t26134-t25979*t26020*t26021*t26026*t26076))*(ccab2*t26033* \
                   t26042*t26053*t26027*t26028-ccab2*t26042*t26034*t26052*t26027*1/(t26045*t26045*t26045)*2.0+ccab1*gamma_bb[index]* \
                   t26061*t26027*t26028*t26029*(4.0/3.0)-ccab2*gamma_bb[index]*t26062*t26027*t26028*t26029*(4.0/3.0)+ \
                   ccab2*gamma_bb[index]*t26033*t26052*t26053*t26027*t26029*(8.0/3.0)+ccab3*gcab*t26034*t26027*t26028* \
                   t26039*t26049*(3.0/2.0)+ccab3*gcab*t26033*t26034*t26027*t26039*(gamma_bb[index]*t26027*t26028*t26029* \
                   4.0+gamma_bb[index]*gcab*t26033*t26027*t26028*t26029*4.0)+ccab2*gamma_bb[index]*t26034*t26053*(t26027* \
                   t26027)*t26028*t26029*(4.0/3.0)-ccab1*gamma_bb[index]*gcab*t26033*t26027*t26028*1/(t26055*t26055*t26055) \
                   *t26029*(4.0/3.0)-ccab3*gcab*t26033*t26034*t26027*1/(t26038*t26038*t26038)*t26049*t26059*2.0-ccab3* \
                   gamma_bb[index]*gcab*t26033*t26027*t26063*t26028*t26029*4.0+ccab3*gamma_bb[index]*gcab*t26034*t26027* \
                   t26029*t26039*t26059*4.0)-((ccab1*gcab*t26028*(1.0/2.0))/t26055-ccab1*t26033*t26061*t26027*t26028* \
                   (1.0/2.0)-ccab2*t26034*t26052*t26053*t26027+ccab2*t26033*t26062*t26027*t26028+ccab3*gcab*t26034*t26027* \
                   t26063*t26028*(3.0/2.0)-ccab3*gcab*t26033*t26034*t26027*t26039*t26059)*(-t25997+t26015+t26134+t25998* \
                   (t26110-t25979*t26020*t26021*t26026*(t26110-(t26075*1/(t26069*t26069)*(b2f*c*t26064*(1.0/3.0)+b4f* \
                   t25960*t26081*(2.0/3.0)+b1f*c*t26064*t26082*(1.0/6.0)+b3f*c*t26001*t26064*(1.0/2.0)))/t26072+a1f*c* \
                   c0f*t26064*t26073*(2.0/3.0)-a1p*c*c0p*t26012*t26064*(2.0/3.0))-a1p*c*c0p*t26012*t26064*(2.0/3.0)+t25979* \
                   t26020*t26021*t26107*t26076+t25979*t26021*t26103*t26026*t26076*4.0+t25979*t26020*t26016*t26017*t26026* \
                   t26076*4.0-Aa*t25979*t26100*t26102*t26026*t26090*(t26021*t26103*4.0+t26020*t26016*t26017*4.0)*2.0- \
                   Aa*t25979*t26100*t26102*t26107*t26090*t26109*2.0+(t25979*t26102*t26026*t26090*t26109*1/(t26096*t26096) \
                   *(b2a*c*t26064*(1.0/3.0)+b4a*t25960*t26081*(2.0/3.0)+b1a*c*t26064*t26082*(1.0/6.0)+b3a*c*t26001*t26064* \
                   (1.0/2.0)))/t26099-Aa*a1a*c*t25979*t26100*t26026*t26090*t26064*t26109*(2.0/3.0))+rho_b[index]*(-t26132+ \
                   t25976*t25979*(t26132-(t26112*1/(t26117*t26117)*(b2f*c*t26121*(1.0/3.0)+b4f*t25960*t26122*(2.0/3.0) \
                   +b1f*c*t26121*t26123*(1.0/6.0)+b3f*c*t25983*t26121*(1.0/2.0)))/t26120+a1f*c*c0f*t26121*t26124*(2.0/ \
                   3.0)-a1p*c*c0p*t25994*t26121*(2.0/3.0))+a1p*c*c0p*t25994*t26121*(2.0/3.0))+t25976*t25979*t26133-t25979* \
                   t26020*t26021*t26026*t26076);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26137 = 1/pow(rho_a[index],1.0/3.0);
                double t26138 = c*t26137;
                double t26139 = sqrt(t26138);
                double t26140 = pow(t26138,3.0/2.0);
                double t26141 = c*c;
                double t26142 = 1/pow(rho_a[index],2.0/3.0);
                double t26143 = 1/c0p;
                double t26144 = b1p*t26139;
                double t26145 = b3p*t26140;
                double t26146 = b4p*t26141*t26142;
                double t26147 = b2p*c*t26137;
                double t26148 = t26144+t26145+t26146+t26147;
                double t26149 = 1/t26148;
                double t26150 = t26143*t26149*(1.0/2.0);
                double t26151 = t26150+1.0;
                double t26152 = log(t26151);
                double t26153 = a1p*c*t26137;
                double t26154 = t26153+1.0;
                double t26155 = pow(2.0,1.0/3.0);
                double t26156 = t26155*2.0;
                double t26157 = t26156-2.0;
                double t26158 = two_13*2.0;
                double t26159 = t26158-2.0;
                double t26160 = 1/t26159;
                double t26161 = 1/c0f;
                double t26162 = 1/pow(rho_b[index],1.0/3.0);
                double t26163 = c*t26162;
                double t26164 = sqrt(t26163);
                double t26165 = pow(t26163,3.0/2.0);
                double t26166 = 1/pow(rho_b[index],2.0/3.0);
                double t26167 = b1p*t26164;
                double t26168 = b3p*t26165;
                double t26169 = b4p*t26141*t26166;
                double t26170 = b2p*c*t26162;
                double t26171 = t26170+t26167+t26168+t26169;
                double t26172 = 1/t26171;
                double t26173 = t26143*t26172*(1.0/2.0);
                double t26174 = t26173+1.0;
                double t26175 = log(t26174);
                double t26176 = a1p*c*t26162;
                double t26177 = t26176+1.0;
                double t26178 = c0p*t26175*t26177*2.0;
                double t26179 = rho_a[index]+rho_b[index];
                double t26180 = 1/pow(t26179,1.0/3.0);
                double t26181 = c*t26180;
                double t26182 = sqrt(t26181);
                double t26183 = pow(t26181,3.0/2.0);
                double t26184 = 1/pow(t26179,2.0/3.0);
                double t26185 = b1p*t26182;
                double t26186 = b3p*t26183;
                double t26187 = b4p*t26141*t26184;
                double t26188 = b2p*c*t26180;
                double t26189 = t26185+t26186+t26187+t26188;
                double t26190 = 1/t26189;
                double t26191 = t26143*t26190*(1.0/2.0);
                double t26192 = t26191+1.0;
                double t26193 = log(t26192);
                double t26194 = a1p*c*t26180;
                double t26195 = t26194+1.0;
                double t26196 = c0p*t26193*t26195*2.0;
                double t26197 = rho_a[index]-rho_b[index];
                double t26198 = t26197*t26197;
                double t26199 = 1/t26179;
                double t26200 = t26197*t26199;
                double t26201 = 1/(t26179*t26179*t26179*t26179);
                double t26202 = t26198*t26198;
                double t26203 = t26200+1.0;
                double t26204 = pow(t26203,4.0/3.0);
                double t26205 = -t26200+1.0;
                double t26206 = pow(t26205,4.0/3.0);
                double t26207 = t26204+t26206-2.0;
                double t26208 = 1/pow(rho_b[index],1.1E1/3.0);
                double t26209 = 1/pow(rho_a[index],8.0/3.0);
                double t26210 = gamma_aa[index]*t26209*(1.0/2.0);
                double t26211 = 1/pow(rho_b[index],8.0/3.0);
                double t26212 = gamma_bb[index]*t26211*(1.0/2.0);
                double t26213 = t26210+t26212;
                double t26214 = gcab*t26213;
                double t26215 = t26214+1.0;
                double t26216 = gcab*gcab;
                double t26217 = t26213*t26213;
                double t26218 = 1/pow(rho_b[index],1.9E1/3.0);
                double t26219 = t26216*t26217;
                double t26220 = gcab*t26213*2.0;
                double t26221 = t26220+t26219+1.0;
                double t26222 = t26216*t26217*3.0;
                double t26223 = gcab*t26213*t26216*t26217;
                double t26224 = gcab*t26213*3.0;
                double t26225 = t26222+t26223+t26224+1.0;
                double t26226 = 1/(t26215*t26215);
                double t26227 = 1/t26221;
                double t26228 = 1/(t26225*t26225);
                double t26229 = 1/(t26221*t26221);
                double t26230 = gamma_bb[index]*gcab*t26208*(8.0/3.0);
                double t26231 = gamma_bb[index]*t26213*t26216*t26208*(8.0/3.0);
                double t26232 = t26230+t26231;
                double t26233 = 1/t26225;
                double t26234 = gamma_bb[index]*gcab*t26208*4.0;
                double t26235 = gamma_bb[index]*gcab*t26216*t26208*t26217*4.0;
                double t26236 = gamma_bb[index]*t26213*t26216*t26208*8.0;
                double t26237 = t26234+t26235+t26236;
                double t26238 = gcab*t26211;
                double t26239 = t26211*t26213*t26216;
                double t26240 = t26238+t26239;
                double t26241 = gcab*t26211*(3.0/2.0);
                double t26242 = t26211*t26213*t26216*3.0;
                double t26243 = gcab*t26211*t26216*t26217*(3.0/2.0);
                double t26244 = t26241+t26242+t26243;
                double t26245 = b1f*t26164;
                double t26246 = b3f*t26165;
                double t26247 = b4f*t26141*t26166;
                double t26248 = b2f*c*t26162;
                double t26249 = t26245+t26246+t26247+t26248;
                double t26250 = 1/t26249;
                double t26251 = t26250*t26161*(1.0/2.0);
                double t26252 = t26251+1.0;
                double t26253 = log(t26252);
                double t26254 = a1f*c*t26162;
                double t26255 = t26254+1.0;
                double t26389 = c0f*t26253*t26255*2.0;
                double t26256 = t26178-t26389;
                double t26390 = t26160*t26157*t26256;
                double t26257 = -t26390+t26178;
                double t26258 = gcaa*gcaa;
                double t26259 = 1/pow(rho_b[index],1.6E1/3.0);
                double t26260 = gamma_bb[index]*gamma_bb[index];
                double t26261 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t26262 = gamma_bb[index]*gcaa*t26211;
                double t26263 = t26262+1.0;
                double t26264 = gamma_bb[index]*gcaa*t26211*3.0;
                double t26265 = gamma_bb[index]*gcaa*t26260*t26261*t26258;
                double t26266 = t26260*t26258*t26259*3.0;
                double t26267 = t26264+t26265+t26266+1.0;
                double t26268 = gamma_bb[index]*gcaa*t26211*2.0;
                double t26269 = t26260*t26258*t26259;
                double t26270 = t26268+t26269+1.0;
                double t26271 = 1/tau_b[index];
                double t26272 = pow(rho_b[index],2.0/3.0);
                double t26273 = pow(rho_b[index],5.0/3.0);
                double t26274 = C_k*t26271*t26273;
                double t26275 = t26274-1.0;
                double t26276 = t26274+1.0;
                double t26277 = t26275*t26275;
                double t26278 = t26277*t26277;
                double t26279 = gx*gx;
                double t26280 = gamma_bb[index]*gx*t26211;
                double t26281 = t26280+1.0;
                double t26282 = gamma_bb[index]*gx*t26211*3.0;
                double t26283 = gamma_bb[index]*gx*t26260*t26261*t26279;
                double t26284 = t26260*t26259*t26279*3.0;
                double t26285 = t26282+t26283+t26284+1.0;
                double t26286 = gamma_bb[index]*gx*t26211*2.0;
                double t26287 = t26260*t26259*t26279;
                double t26288 = t26286+t26287+1.0;
                double t26289 = 1/t26276;
                double t26290 = 1/(t26276*t26276*t26276);
                double t26291 = 1/(t26276*t26276*t26276*t26276*t26276);
                double t26292 = 1/t26281;
                double t26293 = 1/t26288;
                double t26294 = 1/t26285;
                double t26295 = 1/(t26281*t26281);
                double t26296 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t26297 = 1/(t26285*t26285);
                double t26298 = 1/(t26288*t26288);
                double t26299 = gx*t26211*3.0;
                double t26300 = gamma_bb[index]*t26259*t26279*6.0;
                double t26301 = gx*t26260*t26261*t26279*3.0;
                double t26302 = t26300+t26301+t26299;
                double t26303 = gx*t26211*2.0;
                double t26304 = gamma_bb[index]*t26259*t26279*2.0;
                double t26305 = t26303+t26304;
                double t26306 = gamma_bb[index]*gx*t26208*(1.6E1/3.0);
                double t26307 = t26260*t26218*t26279*(1.6E1/3.0);
                double t26308 = t26306+t26307;
                double t26309 = gamma_bb[index]*gx*t26208*8.0;
                double t26310 = gamma_bb[index]*gx*t26260*t26296*t26279*8.0;
                double t26311 = t26260*t26218*t26279*1.6E1;
                double t26312 = t26310+t26311+t26309;
                double t26313 = 1/(t26281*t26281*t26281);
                double t26314 = gx*t26208*8.0;
                double t26315 = gamma_bb[index]*t26218*t26279*3.2E1;
                double t26316 = gx*t26260*t26296*t26279*2.4E1;
                double t26317 = t26314+t26315+t26316;
                double t26318 = gx*t26208*(1.6E1/3.0);
                double t26319 = gamma_bb[index]*t26218*t26279*(3.2E1/3.0);
                double t26320 = t26318+t26319;
                double t26321 = 1/(t26288*t26288*t26288);
                double t26322 = 1/(t26285*t26285*t26285);
                double t26323 = t26275*t26289;
                double t26324 = t26291*t26275*t26278;
                double t26325 = t26323+t26324-t26290*t26275*t26277*2.0;
                double t26326 = cxnl1*gx*t26211*t26292;
                double t26327 = cxnl2*gamma_bb[index]*t26293*t26259*t26279*2.0;
                double t26328 = cxnl3*gx*t26260*t26261*t26294*t26279*3.0;
                double t26329 = t26326+t26327+t26328-cxnl1*gamma_bb[index]*t26259*t26295*t26279-cxnl2*t26260*t26305* \
                   t26259*t26279*t26298-cxnl3*gamma_bb[index]*gx*t26302*t26260*t26261*t26279*t26297;
                double t26330 = 1/t26215;
                double t26331 = 1/pow(t26179,4.0/3.0);
                double t26332 = b1f*t26182;
                double t26333 = b3f*t26183;
                double t26334 = b4f*t26141*t26184;
                double t26335 = b2f*c*t26180;
                double t26336 = t26332+t26333+t26334+t26335;
                double t26337 = 1/t26336;
                double t26338 = t26161*t26337*(1.0/2.0);
                double t26339 = t26338+1.0;
                double t26340 = log(t26339);
                double t26341 = a1f*c*t26180;
                double t26342 = t26341+1.0;
                double t26344 = c0f*t26340*t26342*2.0;
                double t26343 = -t26344+t26196;
                double t26345 = 1/(t26179*t26179);
                double t26346 = t26345*t26197;
                double t26347 = t26346+t26199;
                double t26348 = t26344-t26196;
                double t26349 = 1/pow(t26179,5.0/3.0);
                double t26350 = 1/sqrt(t26181);
                double t26351 = 1/t26192;
                double t26352 = 1/(t26189*t26189);
                double t26353 = b4p*t26141*t26349*(2.0/3.0);
                double t26354 = b2p*c*t26331*(1.0/3.0);
                double t26355 = b1p*c*t26331*t26350*(1.0/6.0);
                double t26356 = b3p*c*t26331*t26182*(1.0/2.0);
                double t26357 = t26353+t26354+t26355+t26356;
                double t26358 = 1/d2fz0;
                double t26359 = 1/Aa;
                double t26360 = b1a*t26182;
                double t26361 = b3a*t26183;
                double t26362 = b4a*t26141*t26184;
                double t26363 = b2a*c*t26180;
                double t26364 = t26360+t26361+t26362+t26363;
                double t26365 = 1/t26364;
                double t26366 = t26365*t26359*(1.0/2.0);
                double t26367 = t26366+1.0;
                double t26368 = log(t26367);
                double t26369 = a1a*c*t26180;
                double t26370 = t26369+1.0;
                double t26371 = 1/(t26179*t26179*t26179*t26179*t26179);
                double t26372 = pow(t26203,1.0/3.0);
                double t26373 = t26372*t26347*(4.0/3.0);
                double t26374 = pow(t26205,1.0/3.0);
                double t26375 = t26373-t26347*t26374*(4.0/3.0);
                double t26376 = t26201*t26202;
                double t26377 = t26376-1.0;
                double t26378 = 1/pow(rho_b[index],4.0/3.0);
                double t26379 = 1/pow(rho_b[index],5.0/3.0);
                double t26380 = 1/sqrt(t26163);
                double t26381 = 1/t26174;
                double t26382 = 1/(t26171*t26171);
                double t26383 = b4p*t26141*t26379*(2.0/3.0);
                double t26384 = b2p*c*t26378*(1.0/3.0);
                double t26385 = b1p*c*t26380*t26378*(1.0/6.0);
                double t26386 = b3p*c*t26164*t26378*(1.0/2.0);
                double t26387 = t26383+t26384+t26385+t26386;
                double t26388 = t26381*t26382*t26177*t26387;
                double t26391 = Aa*t26160*t26207*t26370*t26358*t26368*t26377*2.0;
                double t26392 = a1p*c*c0p*t26331*t26193*(2.0/3.0);
                double t26393 = 1/t26263;
                double t26394 = 1/t26270;
                double t26395 = 1/t26267;
                double t26396 = 1/(t26263*t26263);
                double t26397 = 1/(t26267*t26267);
                double t26398 = 1/(t26270*t26270);
                double t26399 = gcaa*t26211*3.0;
                double t26400 = gamma_bb[index]*t26258*t26259*6.0;
                double t26401 = gcaa*t26260*t26261*t26258*3.0;
                double t26402 = t26400+t26401+t26399;
                double t26403 = gcaa*t26211*2.0;
                double t26404 = gamma_bb[index]*t26258*t26259*2.0;
                double t26405 = t26403+t26404;
                double t26406 = gamma_bb[index]*gcaa*t26208*(1.6E1/3.0);
                double t26407 = t26260*t26218*t26258*(1.6E1/3.0);
                double t26408 = t26406+t26407;
                double t26409 = gamma_bb[index]*gcaa*t26208*8.0;
                double t26410 = gamma_bb[index]*gcaa*t26260*t26258*t26296*8.0;
                double t26411 = t26260*t26218*t26258*1.6E1;
                double t26412 = t26410+t26411+t26409;
                double t26413 = 1/t26252;
                double t26414 = 1/(t26249*t26249);
                double t26415 = b4f*t26141*t26379*(2.0/3.0);
                double t26416 = b2f*c*t26378*(1.0/3.0);
                double t26417 = b1f*c*t26380*t26378*(1.0/6.0);
                double t26418 = b3f*c*t26164*t26378*(1.0/2.0);
                double t26419 = t26415+t26416+t26417+t26418;
                double t26420 = a1f*c*c0f*t26253*t26378*(2.0/3.0);
                double t26421 = a1p*c*c0p*t26175*t26378*(2.0/3.0);
                double t26422 = ccaa1*gcaa*t26211*t26393;
                double t26423 = ccaa2*gamma_bb[index]*t26258*t26259*t26394*2.0;
                double t26424 = ccaa3*gcaa*t26260*t26261*t26258*t26395*3.0;
                double t26425 = t26422+t26423+t26424-ccaa1*gamma_bb[index]*t26258*t26259*t26396-ccaa2*t26260*t26405* \
                   t26258*t26259*t26398-ccaa3*gamma_bb[index]*gcaa*t26402*t26260*t26261*t26258*t26397;
                v_rho_b_gamma_bb_[index] = -t26425*t26257-(c0*pow(rho_b[index],1.0/3.0)*(t26325*t26329+cx1*gx*t26211* \
                   t26292-cx1*gamma_bb[index]*t26259*t26295*t26279+cx2*gamma_bb[index]*t26293*t26259*t26279*2.0-cx2*t26260* \
                   t26305*t26259*t26279*t26298+cx3*gx*t26260*t26261*t26294*t26279*3.0-cx3*gamma_bb[index]*gx*t26302*t26260* \
                   t26261*t26279*t26297)*(4.0/3.0)+c0*pow(rho_b[index],4.0/3.0)*(t26325*(cxnl1*gx*t26208*t26292*(-8.0/ \
                   3.0)-cxnl2*gamma_bb[index]*t26218*t26293*t26279*(3.2E1/3.0)+cxnl1*gamma_bb[index]*t26218*t26295*t26279* \
                   8.0+cxnl2*t26260*t26305*t26218*t26279*t26298*(1.6E1/3.0)+cxnl2*t26320*t26260*t26259*t26279*t26298+ \
                   cxnl2*gamma_bb[index]*t26308*t26259*t26279*t26298*2.0-cxnl1*gx*t26313*t26260*t26296*t26279*(1.6E1/ \
                   3.0)-cxnl3*gx*t26260*t26294*t26296*t26279*2.4E1+cxnl3*gx*t26312*t26260*t26261*t26279*t26297*3.0-cxnl2* \
                   t26321*t26260*t26305*t26308*t26259*t26279*2.0+cxnl3*gamma_bb[index]*gx*t26260*t26261*t26317*t26279* \
                   t26297+cxnl3*gamma_bb[index]*gx*t26302*t26260*t26296*t26279*t26297*8.0-cxnl3*gamma_bb[index]*gx*t26302* \
                   t26312*t26322*t26260*t26261*t26279*2.0)+t26329*(C_k*t26271*t26272*t26289*(5.0/3.0)-C_k*t26271*t26272* \
                   t26290*t26277*1.0E1+C_k*t26271*t26272*t26291*t26278*(2.5E1/3.0)-C_k*t26271*t26272*t26275*1/(t26276* \
                   t26276)*(5.0/3.0)+C_k*t26271*t26272*t26275*1/(t26276*t26276*t26276*t26276)*t26277*1.0E1-C_k*t26271* \
                   t26272*t26275*1/(t26276*t26276*t26276*t26276*t26276*t26276)*t26278*(2.5E1/3.0))-cx1*gx*t26208*t26292* \
                   (8.0/3.0)+cx1*gamma_bb[index]*t26218*t26295*t26279*8.0-cx2*gamma_bb[index]*t26218*t26293*t26279*(3.2E1/ \
                   3.0)+cx2*t26260*t26305*t26218*t26279*t26298*(1.6E1/3.0)+cx2*t26320*t26260*t26259*t26279*t26298+cx2* \
                   gamma_bb[index]*t26308*t26259*t26279*t26298*2.0-cx1*gx*t26313*t26260*t26296*t26279*(1.6E1/3.0)-cx3* \
                   gx*t26260*t26294*t26296*t26279*2.4E1+cx3*gx*t26312*t26260*t26261*t26279*t26297*3.0-cx2*t26321*t26260* \
                   t26305*t26308*t26259*t26279*2.0+cx3*gamma_bb[index]*gx*t26260*t26261*t26317*t26279*t26297+cx3*gamma_bb[index]* \
                   gx*t26302*t26260*t26296*t26279*t26297*8.0-cx3*gamma_bb[index]*gx*t26302*t26312*t26322*t26260*t26261* \
                   t26279*2.0))*(X-1.0)-(ccab1*gcab*t26211*t26330*(1.0/2.0)-ccab1*t26211*t26213*t26216*t26226*(1.0/2.0) \
                   +ccab2*t26211*t26213*t26216*t26227-ccab2*t26240*t26216*t26217*t26229+ccab3*gcab*t26211*t26233*t26216* \
                   t26217*(3.0/2.0)-ccab3*gcab*t26213*t26216*t26217*t26244*t26228)*(t26390+t26391-t26178+t26196+rho_b[index]* \
                   (t26421-t26388+t26160*t26157*(t26420+t26388-t26413*t26414*t26255*t26419-a1p*c*c0p*t26175*t26378*(2.0/ \
                   3.0)))-t26179*(t26392-t26351*t26352*t26195*t26357+t26201*t26202*t26160*t26348*t26375+t26202*t26160* \
                   t26207*t26371*t26348*4.0-t26201*t26202*t26160*t26207*(t26392-t26351*t26352*t26195*t26357+(t26342*1/ \
                   (t26336*t26336)*(b2f*c*t26331*(1.0/3.0)+b4f*t26141*t26349*(2.0/3.0)+b1f*c*t26331*t26350*(1.0/6.0)+ \
                   b3f*c*t26331*t26182*(1.0/2.0)))/t26339-a1f*c*c0f*t26331*t26340*(2.0/3.0))-t26201*t26160*t26207*t26343* \
                   t26197*t26198*4.0+Aa*t26160*t26207*t26370*t26358*t26368*(t26202*t26371*4.0+t26201*t26197*t26198*4.0) \
                   *2.0+Aa*t26160*t26370*t26375*t26358*t26368*t26377*2.0-(t26160*t26207*t26370*1/(t26364*t26364)*t26358* \
                   t26377*(b2a*c*t26331*(1.0/3.0)+b4a*t26141*t26349*(2.0/3.0)+b1a*c*t26331*t26350*(1.0/6.0)+b3a*c*t26331* \
                   t26182*(1.0/2.0)))/t26367+Aa*a1a*c*t26160*t26331*t26207*t26358*t26368*t26377*(2.0/3.0))+t26201*t26202* \
                   t26160*t26207*t26348)+(-rho_b[index]*t26257+t26179*(t26391+t26196-t26201*t26202*t26160*t26207*t26343) \
                   +rho_a[index]*(t26160*t26157*(c0p*t26152*t26154*2.0-c0f*log((t26161*(1.0/2.0))/(b1f*t26139+b3f*t26140+ \
                   b2f*c*t26137+b4f*t26141*t26142)+1.0)*(a1f*c*t26137+1.0)*2.0)-c0p*t26152*t26154*2.0))*(ccab1*gcab*t26330* \
                   t26208*(4.0/3.0)-ccab2*t26216*t26217*t26229*(gcab*t26208*(8.0/3.0)+gamma_bb[index]*t26216*t26218*(4.0/ \
                   3.0)+t26213*t26216*t26208*(8.0/3.0))-ccab1*gamma_bb[index]*t26216*t26226*t26218*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t26216*t26218*t26227*(4.0/3.0)-ccab1*t26213*t26216*t26208*t26226*(4.0/3.0)+ccab2*t26213*t26216*t26208* \
                   t26227*(8.0/3.0)-ccab2*t26211*t26213*t26232*t26216*t26229+ccab2*1/(t26221*t26221*t26221)*t26240*t26232* \
                   t26216*t26217*2.0+ccab3*gcab*t26233*t26216*t26208*t26217*4.0+ccab3*gamma_bb[index]*gcab*t26213*t26233* \
                   t26216*t26218*4.0-ccab2*gamma_bb[index]*t26213*t26240*t26216*t26208*t26229*(8.0/3.0)-ccab3*gcab*t26211* \
                   t26216*t26217*t26228*t26237*(3.0/2.0)-ccab3*gcab*t26213*t26216*t26217*t26228*(gcab*t26208*4.0+gamma_bb[index]* \
                   t26216*t26218*4.0+t26213*t26216*t26208*8.0+gcab*t26216*t26208*t26217*4.0+gamma_bb[index]*gcab*t26213* \
                   t26216*t26218*4.0)+ccab1*gamma_bb[index]*gcab*t26213*1/(t26215*t26215*t26215)*t26216*t26218*(4.0/3.0) \
                   +ccab3*gcab*t26213*t26216*1/(t26225*t26225*t26225)*t26217*t26244*t26237*2.0-ccab3*gamma_bb[index]* \
                   gcab*t26216*t26208*t26217*t26244*t26228*4.0)+rho_b[index]*t26425*(t26421-t26388+t26160*t26157*(t26420- \
                   t26421+t26388-t26413*t26414*t26255*t26419))-rho_b[index]*t26257*(ccaa1*gcaa*t26208*t26393*(-8.0/3.0) \
                   -ccaa2*gamma_bb[index]*t26218*t26258*t26394*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t26218*t26258*t26396* \
                   8.0+ccaa2*t26260*t26405*t26218*t26258*t26398*(1.6E1/3.0)-ccaa1*gcaa*t26260*1/(t26263*t26263*t26263) \
                   *t26258*t26296*(1.6E1/3.0)+ccaa2*t26260*t26258*t26259*t26398*(gcaa*t26208*(1.6E1/3.0)+gamma_bb[index]* \
                   t26218*t26258*(3.2E1/3.0))+ccaa2*gamma_bb[index]*t26408*t26258*t26259*t26398*2.0-ccaa3*gcaa*t26260* \
                   t26258*t26296*t26395*2.4E1+ccaa3*gcaa*t26412*t26260*t26261*t26258*t26397*3.0-ccaa2*t26260*1/(t26270* \
                   t26270*t26270)*t26405*t26408*t26258*t26259*2.0+ccaa3*gamma_bb[index]*gcaa*t26260*t26261*t26258*t26397* \
                   (gcaa*t26208*8.0+gamma_bb[index]*t26218*t26258*3.2E1+gcaa*t26260*t26258*t26296*2.4E1)+ccaa3*gamma_bb[index]* \
                   gcaa*t26402*t26260*t26258*t26296*t26397*8.0-ccaa3*gamma_bb[index]*gcaa*t26402*t26412*t26260*t26261* \
                   t26258*1/(t26267*t26267*t26267)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27500 = 1/pow(rho_b[index],1.0/3.0);
                double t27501 = c*t27500;
                double t27502 = sqrt(t27501);
                double t27503 = pow(t27501,3.0/2.0);
                double t27504 = c*c;
                double t27505 = 1/pow(rho_b[index],2.0/3.0);
                double t27506 = 1/c0p;
                double t27507 = b1p*t27502;
                double t27508 = b3p*t27503;
                double t27509 = b4p*t27504*t27505;
                double t27510 = b2p*c*t27500;
                double t27511 = t27510+t27507+t27508+t27509;
                double t27512 = 1/t27511;
                double t27513 = t27512*t27506*(1.0/2.0);
                double t27514 = t27513+1.0;
                double t27515 = log(t27514);
                double t27516 = a1p*c*t27500;
                double t27517 = t27516+1.0;
                double t27518 = 1/pow(rho_b[index],8.0/3.0);
                double t27519 = gcaa*gcaa;
                double t27520 = 1/pow(rho_b[index],1.6E1/3.0);
                double t27521 = gamma_bb[index]*gamma_bb[index];
                double t27522 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t27523 = gamma_bb[index]*gcaa*t27518;
                double t27524 = t27523+1.0;
                double t27525 = gamma_bb[index]*gcaa*t27518*3.0;
                double t27526 = gamma_bb[index]*gcaa*t27521*t27522*t27519;
                double t27527 = t27520*t27521*t27519*3.0;
                double t27528 = t27525+t27526+t27527+1.0;
                double t27529 = gamma_bb[index]*gcaa*t27518*2.0;
                double t27530 = t27520*t27521*t27519;
                double t27531 = t27530+t27529+1.0;
                double t27532 = pow(2.0,1.0/3.0);
                double t27533 = t27532*2.0;
                double t27534 = t27533-2.0;
                double t27535 = two_13*2.0;
                double t27536 = t27535-2.0;
                double t27537 = 1/t27536;
                double t27538 = 1/c0f;
                double t27539 = b1f*t27502;
                double t27540 = b3f*t27503;
                double t27541 = b4f*t27504*t27505;
                double t27542 = b2f*c*t27500;
                double t27543 = t27540+t27541+t27542+t27539;
                double t27544 = 1/t27543;
                double t27545 = t27544*t27538*(1.0/2.0);
                double t27546 = t27545+1.0;
                double t27547 = log(t27546);
                double t27548 = a1f*c*t27500;
                double t27549 = t27548+1.0;
                double t27550 = c0f*t27547*t27549*2.0;
                double t27551 = c0p*t27515*t27517*2.0;
                double t27552 = 1/t27524;
                double t27553 = 1/t27531;
                double t27554 = 1/t27528;
                double t27555 = 1/pow(rho_b[index],1.9E1/3.0);
                double t27556 = 1/(t27524*t27524);
                double t27557 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t27558 = 1/pow(rho_b[index],1.1E1/3.0);
                double t27559 = 1/(t27528*t27528);
                double t27560 = 1/(t27531*t27531);
                double t27561 = gcaa*t27518*3.0;
                double t27562 = gamma_bb[index]*t27520*t27519*6.0;
                double t27563 = gcaa*t27521*t27522*t27519*3.0;
                double t27564 = t27561+t27562+t27563;
                double t27565 = gcaa*t27518*2.0;
                double t27566 = gamma_bb[index]*t27520*t27519*2.0;
                double t27567 = t27565+t27566;
                double t27568 = gamma_bb[index]*gcaa*t27558*(1.6E1/3.0);
                double t27569 = t27521*t27519*t27555*(1.6E1/3.0);
                double t27570 = t27568+t27569;
                double t27571 = gamma_bb[index]*gcaa*t27558*8.0;
                double t27572 = gamma_bb[index]*gcaa*t27521*t27519*t27557*8.0;
                double t27573 = t27521*t27519*t27555*1.6E1;
                double t27574 = t27571+t27572+t27573;
                double t27575 = 1/pow(rho_b[index],4.0/3.0);
                double t27576 = 1/pow(rho_b[index],5.0/3.0);
                double t27577 = 1/sqrt(t27501);
                double t27578 = 1/t27514;
                double t27579 = 1/(t27511*t27511);
                double t27580 = b4p*t27504*t27576*(2.0/3.0);
                double t27581 = b2p*c*t27575*(1.0/3.0);
                double t27582 = b1p*c*t27575*t27577*(1.0/6.0);
                double t27583 = b3p*c*t27502*t27575*(1.0/2.0);
                double t27584 = t27580+t27581+t27582+t27583;
                double t27585 = t27517*t27584*t27578*t27579;
                double t27586 = ccaa1*gcaa*t27552*t27518;
                double t27587 = ccaa2*gamma_bb[index]*t27520*t27553*t27519*2.0;
                double t27588 = ccaa3*gcaa*t27521*t27522*t27554*t27519*3.0;
                double t27589 = t27586+t27587+t27588-ccaa1*gamma_bb[index]*t27520*t27519*t27556-ccaa2*t27520*t27521* \
                   t27560*t27519*t27567-ccaa3*gamma_bb[index]*gcaa*t27521*t27522*t27519*t27564*t27559;
                double t27590 = 1/tau_b[index];
                double t27591 = pow(rho_b[index],2.0/3.0);
                double t27592 = pow(rho_b[index],5.0/3.0);
                double t27593 = C_k*t27590*t27592;
                double t27594 = t27593-1.0;
                double t27595 = t27593+1.0;
                double t27596 = t27594*t27594;
                double t27597 = t27596*t27596;
                double t27598 = gx*gx;
                double t27599 = gamma_bb[index]*gx*t27518;
                double t27600 = t27599+1.0;
                double t27601 = gamma_bb[index]*gx*t27518*3.0;
                double t27602 = gamma_bb[index]*gx*t27521*t27522*t27598;
                double t27603 = t27520*t27521*t27598*3.0;
                double t27604 = t27601+t27602+t27603+1.0;
                double t27605 = gamma_bb[index]*gx*t27518*2.0;
                double t27606 = t27520*t27521*t27598;
                double t27607 = t27605+t27606+1.0;
                double t27608 = 1/t27595;
                double t27609 = 1/(t27595*t27595*t27595);
                double t27610 = 1/(t27595*t27595*t27595*t27595*t27595);
                double t27611 = 1/t27600;
                double t27612 = 1/t27607;
                double t27613 = 1/t27604;
                double t27614 = 1/(t27600*t27600);
                double t27615 = 1/(t27604*t27604);
                double t27616 = 1/(t27607*t27607);
                double t27617 = gx*t27518*3.0;
                double t27618 = gamma_bb[index]*t27520*t27598*6.0;
                double t27619 = gx*t27521*t27522*t27598*3.0;
                double t27620 = t27617+t27618+t27619;
                double t27621 = gx*t27518*2.0;
                double t27622 = gamma_bb[index]*t27520*t27598*2.0;
                double t27623 = t27621+t27622;
                double t27624 = gamma_bb[index]*gx*t27558*(1.6E1/3.0);
                double t27625 = t27521*t27555*t27598*(1.6E1/3.0);
                double t27626 = t27624+t27625;
                double t27627 = gamma_bb[index]*gx*t27558*8.0;
                double t27628 = gamma_bb[index]*gx*t27521*t27557*t27598*8.0;
                double t27629 = t27521*t27555*t27598*1.6E1;
                double t27630 = t27627+t27628+t27629;
                double t27631 = 1/(t27600*t27600*t27600);
                double t27632 = gx*t27558*8.0;
                double t27633 = gamma_bb[index]*t27555*t27598*3.2E1;
                double t27634 = gx*t27521*t27557*t27598*2.4E1;
                double t27635 = t27632+t27633+t27634;
                double t27636 = gx*t27558*(1.6E1/3.0);
                double t27637 = gamma_bb[index]*t27555*t27598*(3.2E1/3.0);
                double t27638 = t27636+t27637;
                double t27639 = 1/(t27607*t27607*t27607);
                double t27640 = 1/(t27604*t27604*t27604);
                double t27641 = X-1.0;
                double t27642 = t27608*t27594;
                double t27643 = t27610*t27594*t27597;
                double t27644 = t27642+t27643-t27609*t27594*t27596*2.0;
                double t27645 = cxnl1*gx*t27611*t27518;
                double t27646 = cxnl2*gamma_bb[index]*t27520*t27612*t27598*2.0;
                double t27647 = cxnl3*gx*t27521*t27522*t27613*t27598*3.0;
                double t27648 = t27645+t27646+t27647-cxnl1*gamma_bb[index]*t27520*t27614*t27598-cxnl2*t27520*t27521* \
                   t27623*t27616*t27598-cxnl3*gamma_bb[index]*gx*t27521*t27620*t27522*t27615*t27598;
                v_rho_b_gamma_bb_[index] = -t27589*(t27551+t27534*t27537*(t27550-c0p*t27515*t27517*2.0))+rho_b[index]* \
                   t27589*(-t27585+t27534*t27537*(t27585-(1/(t27543*t27543)*t27549*(b2f*c*t27575*(1.0/3.0)+b4f*t27504* \
                   t27576*(2.0/3.0)+b1f*c*t27575*t27577*(1.0/6.0)+b3f*c*t27502*t27575*(1.0/2.0)))/t27546+a1f*c*c0f*t27547* \
                   t27575*(2.0/3.0)-a1p*c*c0p*t27515*t27575*(2.0/3.0))+a1p*c*c0p*t27515*t27575*(2.0/3.0))-rho_b[index]* \
                   (t27551+t27534*t27537*(t27550-t27551))*(ccaa1*gcaa*t27552*t27558*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t27553*t27519*t27555*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t27519*t27555*t27556*8.0+ccaa2*t27521*t27560* \
                   t27519*t27555*t27567*(1.6E1/3.0)-ccaa1*gcaa*t27521*1/(t27524*t27524*t27524)*t27519*t27557*(1.6E1/3.0) \
                   +ccaa2*t27520*t27521*t27560*t27519*(gcaa*t27558*(1.6E1/3.0)+gamma_bb[index]*t27519*t27555*(3.2E1/3.0) \
                   )+ccaa2*gamma_bb[index]*t27520*t27560*t27570*t27519*2.0-ccaa3*gcaa*t27521*t27554*t27519*t27557*2.4E1+ \
                   ccaa3*gcaa*t27521*t27522*t27519*t27574*t27559*3.0-ccaa2*t27520*t27521*1/(t27531*t27531*t27531)*t27570* \
                   t27519*t27567*2.0+ccaa3*gamma_bb[index]*gcaa*t27521*t27522*t27519*t27559*(gcaa*t27558*8.0+gamma_bb[index]* \
                   t27519*t27555*3.2E1+gcaa*t27521*t27519*t27557*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t27521*t27519*t27564* \
                   t27557*t27559*8.0-ccaa3*gamma_bb[index]*gcaa*t27521*t27522*t27519*1/(t27528*t27528*t27528)*t27564* \
                   t27574*2.0)-c0*pow(rho_b[index],4.0/3.0)*t27641*(t27644*(cxnl1*gx*t27611*t27558*(-8.0/3.0)-cxnl2*gamma_bb[index]* \
                   t27612*t27555*t27598*(3.2E1/3.0)+cxnl1*gamma_bb[index]*t27614*t27555*t27598*8.0+cxnl2*t27520*t27521* \
                   t27616*t27638*t27598+cxnl2*t27521*t27623*t27616*t27555*t27598*(1.6E1/3.0)+cxnl2*gamma_bb[index]*t27520* \
                   t27616*t27626*t27598*2.0-cxnl1*gx*t27521*t27631*t27557*t27598*(1.6E1/3.0)-cxnl3*gx*t27521*t27613*t27557* \
                   t27598*2.4E1+cxnl3*gx*t27521*t27522*t27630*t27615*t27598*3.0-cxnl2*t27520*t27521*t27623*t27626*t27639* \
                   t27598*2.0+cxnl3*gamma_bb[index]*gx*t27521*t27522*t27615*t27635*t27598+cxnl3*gamma_bb[index]*gx*t27521* \
                   t27620*t27615*t27557*t27598*8.0-cxnl3*gamma_bb[index]*gx*t27521*t27620*t27522*t27630*t27640*t27598* \
                   2.0)+t27648*(C_k*t27590*t27608*t27591*(5.0/3.0)+C_k*t27610*t27590*t27591*t27597*(2.5E1/3.0)-C_k*t27590* \
                   t27591*t27609*t27596*1.0E1-C_k*t27590*t27591*t27594*1/(t27595*t27595)*(5.0/3.0)+C_k*t27590*t27591* \
                   t27594*1/(t27595*t27595*t27595*t27595)*t27596*1.0E1-C_k*t27590*t27591*t27594*1/(t27595*t27595*t27595* \
                   t27595*t27595*t27595)*t27597*(2.5E1/3.0))-cx1*gx*t27611*t27558*(8.0/3.0)+cx1*gamma_bb[index]*t27614* \
                   t27555*t27598*8.0-cx2*gamma_bb[index]*t27612*t27555*t27598*(3.2E1/3.0)+cx2*t27520*t27521*t27616*t27638* \
                   t27598+cx2*t27521*t27623*t27616*t27555*t27598*(1.6E1/3.0)+cx2*gamma_bb[index]*t27520*t27616*t27626* \
                   t27598*2.0-cx1*gx*t27521*t27631*t27557*t27598*(1.6E1/3.0)-cx3*gx*t27521*t27613*t27557*t27598*2.4E1+ \
                   cx3*gx*t27521*t27522*t27630*t27615*t27598*3.0-cx2*t27520*t27521*t27623*t27626*t27639*t27598*2.0+cx3* \
                   gamma_bb[index]*gx*t27521*t27522*t27615*t27635*t27598+cx3*gamma_bb[index]*gx*t27521*t27620*t27615* \
                   t27557*t27598*8.0-cx3*gamma_bb[index]*gx*t27521*t27620*t27522*t27630*t27640*t27598*2.0)-c0*pow(rho_b[index],1.0/ \
                   3.0)*t27641*(t27644*t27648+cx1*gx*t27611*t27518-cx1*gamma_bb[index]*t27520*t27614*t27598+cx2*gamma_bb[index]* \
                   t27520*t27612*t27598*2.0-cx2*t27520*t27521*t27623*t27616*t27598+cx3*gx*t27521*t27522*t27613*t27598* \
                   3.0-cx3*gamma_bb[index]*gx*t27521*t27620*t27522*t27615*t27598)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26427 = 1/pow(rho_a[index],1.0/3.0);
                double t26428 = c*t26427;
                double t26429 = sqrt(t26428);
                double t26430 = pow(t26428,3.0/2.0);
                double t26431 = c*c;
                double t26432 = 1/pow(rho_a[index],2.0/3.0);
                double t26433 = 1/c0p;
                double t26434 = b1p*t26429;
                double t26435 = b3p*t26430;
                double t26436 = b4p*t26431*t26432;
                double t26437 = b2p*c*t26427;
                double t26438 = t26434+t26435+t26436+t26437;
                double t26439 = 1/t26438;
                double t26440 = t26433*t26439*(1.0/2.0);
                double t26441 = t26440+1.0;
                double t26442 = log(t26441);
                double t26443 = a1p*c*t26427;
                double t26444 = t26443+1.0;
                double t26445 = pow(2.0,1.0/3.0);
                double t26446 = t26445*2.0;
                double t26447 = t26446-2.0;
                double t26448 = two_13*2.0;
                double t26449 = t26448-2.0;
                double t26450 = 1/t26449;
                double t26451 = 1/c0f;
                double t26452 = 1/pow(rho_b[index],1.0/3.0);
                double t26453 = c*t26452;
                double t26454 = sqrt(t26453);
                double t26455 = pow(t26453,3.0/2.0);
                double t26456 = 1/pow(rho_b[index],2.0/3.0);
                double t26457 = b1p*t26454;
                double t26458 = b3p*t26455;
                double t26459 = b4p*t26431*t26456;
                double t26460 = b2p*c*t26452;
                double t26461 = t26460+t26457+t26458+t26459;
                double t26462 = 1/t26461;
                double t26463 = t26433*t26462*(1.0/2.0);
                double t26464 = t26463+1.0;
                double t26465 = log(t26464);
                double t26466 = a1p*c*t26452;
                double t26467 = t26466+1.0;
                double t26468 = c0p*t26465*t26467*2.0;
                double t26469 = rho_a[index]+rho_b[index];
                double t26470 = 1/pow(t26469,1.0/3.0);
                double t26471 = c*t26470;
                double t26472 = sqrt(t26471);
                double t26473 = pow(t26471,3.0/2.0);
                double t26474 = 1/pow(t26469,2.0/3.0);
                double t26475 = b1p*t26472;
                double t26476 = b3p*t26473;
                double t26477 = b4p*t26431*t26474;
                double t26478 = b2p*c*t26470;
                double t26479 = t26475+t26476+t26477+t26478;
                double t26480 = 1/t26479;
                double t26481 = t26433*t26480*(1.0/2.0);
                double t26482 = t26481+1.0;
                double t26483 = log(t26482);
                double t26484 = a1p*c*t26470;
                double t26485 = t26484+1.0;
                double t26486 = c0p*t26483*t26485*2.0;
                double t26487 = rho_a[index]-rho_b[index];
                double t26488 = t26487*t26487;
                double t26489 = 1/t26469;
                double t26490 = t26487*t26489;
                double t26491 = 1/(t26469*t26469*t26469*t26469);
                double t26492 = t26488*t26488;
                double t26493 = t26490+1.0;
                double t26494 = pow(t26493,4.0/3.0);
                double t26495 = -t26490+1.0;
                double t26496 = pow(t26495,4.0/3.0);
                double t26497 = t26494+t26496-2.0;
                double t26498 = gcab*gcab;
                double t26499 = 1/pow(rho_a[index],1.6E1/3.0);
                double t26500 = 1/pow(rho_a[index],8.0/3.0);
                double t26501 = gamma_aa[index]*t26500*(1.0/2.0);
                double t26502 = 1/pow(rho_b[index],8.0/3.0);
                double t26503 = gamma_bb[index]*t26502*(1.0/2.0);
                double t26504 = t26501+t26503;
                double t26505 = gcab*t26504;
                double t26506 = t26505+1.0;
                double t26507 = t26504*t26504;
                double t26508 = t26507*t26498;
                double t26509 = gcab*t26504*2.0;
                double t26510 = t26508+t26509+1.0;
                double t26520 = gcab*t26500*(3.0/2.0);
                double t26521 = t26500*t26504*t26498*3.0;
                double t26522 = gcab*t26500*t26507*t26498*(3.0/2.0);
                double t26511 = t26520+t26521+t26522;
                double t26512 = t26507*t26498*3.0;
                double t26513 = gcab*t26504*t26507*t26498;
                double t26514 = gcab*t26504*3.0;
                double t26515 = t26512+t26513+t26514+1.0;
                double t26517 = gcab*t26500;
                double t26518 = t26500*t26504*t26498;
                double t26516 = t26517+t26518;
                double t26519 = 1/(t26510*t26510);
                double t26523 = 1/(t26515*t26515);
                double t26524 = c0p*t26442*t26444*2.0;
                double t26525 = b1f*t26429;
                double t26526 = b3f*t26430;
                double t26527 = b4f*t26431*t26432;
                double t26528 = b2f*c*t26427;
                double t26529 = t26525+t26526+t26527+t26528;
                double t26530 = 1/t26529;
                double t26531 = t26530*t26451*(1.0/2.0);
                double t26532 = t26531+1.0;
                double t26533 = log(t26532);
                double t26534 = a1f*c*t26427;
                double t26535 = t26534+1.0;
                double t26536 = t26524-c0f*t26533*t26535*2.0;
                double t26537 = t26524-t26450*t26536*t26447;
                double t26538 = gcaa*gcaa;
                double t26539 = gamma_aa[index]*gcaa*t26500;
                double t26540 = t26539+1.0;
                double t26541 = gamma_aa[index]*gamma_aa[index];
                double t26542 = gamma_aa[index]*gcaa*t26500*2.0;
                double t26543 = t26541*t26538*t26499;
                double t26544 = t26542+t26543+1.0;
                double t26545 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t26546 = gamma_aa[index]*gcaa*t26500*3.0;
                double t26547 = gamma_aa[index]*gcaa*t26541*t26545*t26538;
                double t26548 = t26541*t26538*t26499*3.0;
                double t26549 = t26546+t26547+t26548+1.0;
                double t26552 = gcaa*t26500*2.0;
                double t26553 = gamma_aa[index]*t26538*t26499*2.0;
                double t26550 = t26552+t26553;
                double t26551 = 1/(t26549*t26549);
                double t26554 = 1/(t26544*t26544);
                double t26555 = gcaa*t26500*3.0;
                double t26556 = gamma_aa[index]*t26538*t26499*6.0;
                double t26557 = gcaa*t26541*t26545*t26538*3.0;
                double t26558 = t26555+t26556+t26557;
                double t26559 = pow(rho_a[index],5.0/3.0);
                double t26560 = 1/tau_a[index];
                double t26561 = C_k*t26560*t26559;
                double t26562 = t26561-1.0;
                double t26563 = t26562*t26562;
                double t26564 = t26561+1.0;
                double t26565 = t26563*t26563;
                double t26566 = gx*gx;
                double t26567 = gamma_aa[index]*gx*t26500;
                double t26568 = t26567+1.0;
                double t26569 = 1/pow(rho_a[index],3.2E1/3.0);
                double t26570 = gamma_aa[index]*gx*t26500*2.0;
                double t26571 = t26541*t26566*t26499;
                double t26572 = t26570+t26571+1.0;
                double t26573 = gamma_aa[index]*gx*t26500*3.0;
                double t26574 = gamma_aa[index]*gx*t26541*t26545*t26566;
                double t26575 = t26541*t26566*t26499*3.0;
                double t26576 = t26573+t26574+t26575+1.0;
                double t26579 = gx*t26500*2.0;
                double t26580 = gamma_aa[index]*t26566*t26499*2.0;
                double t26577 = t26580+t26579;
                double t26578 = 1/(t26576*t26576);
                double t26581 = 1/(t26572*t26572);
                double t26582 = gx*t26500*3.0;
                double t26583 = gamma_aa[index]*t26566*t26499*6.0;
                double t26584 = gx*t26541*t26545*t26566*3.0;
                double t26585 = t26582+t26583+t26584;
                double t26586 = 1/(t26568*t26568);
                double t26587 = 1/t26572;
                double t26588 = 1/t26576;
                double t26589 = 1/(t26568*t26568*t26568);
                double t26590 = t26566*t26566;
                double t26591 = t26566*t26499*6.0;
                double t26592 = gamma_aa[index]*gx*t26545*t26566*6.0;
                double t26593 = t26591+t26592;
                double t26594 = t26577*t26577;
                double t26595 = 1/(t26572*t26572*t26572);
                double t26596 = t26585*t26585;
                double t26597 = 1/(t26576*t26576*t26576);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*t26537+rho_b[index]*(t26468-t26450*t26447*(t26468-c0f* \
                   log((t26451*(1.0/2.0))/(b1f*t26454+b3f*t26455+b2f*c*t26452+b4f*t26431*t26456)+1.0)*(a1f*c*t26452+1.0) \
                   *2.0))-t26469*(t26486-t26450*t26491*t26492*t26497*(t26486-c0f*log((t26451*(1.0/2.0))/(b1f*t26472+b3f* \
                   t26473+b2f*c*t26470+b4f*t26431*t26474)+1.0)*(a1f*c*t26470+1.0)*2.0)+(Aa*t26450*t26497*log((1.0/2.0) \
                   /(Aa*(b1a*t26472+b3a*t26473+b2a*c*t26470+b4a*t26431*t26474))+1.0)*(t26491*t26492-1.0)*(a1a*c*t26470+ \
                   1.0)*2.0)/d2fz0))*((ccab2*t26498*t26499*(1.0/2.0))/t26510-ccab1*1/(t26506*t26506)*t26498*t26499*(1.0/ \
                   2.0)+ccab2*1/(t26510*t26510*t26510)*t26507*(t26516*t26516)*t26498*2.0-ccab2*t26507*t26519*(t26498* \
                   t26498)*t26499*(1.0/2.0)-ccab2*t26500*t26504*t26516*t26519*t26498*2.0+ccab1*gcab*t26504*1/(t26506* \
                   t26506*t26506)*t26498*t26499*(1.0/2.0)+(ccab3*gcab*t26504*t26498*t26499*(3.0/2.0))/t26515+ccab3*gcab* \
                   (t26511*t26511)*t26504*1/(t26515*t26515*t26515)*t26507*t26498*2.0-ccab3*gcab*t26500*t26511*t26523* \
                   t26507*t26498*3.0-ccab3*gcab*t26504*t26523*t26507*t26498*(t26498*t26499*(3.0/2.0)+gcab*t26504*t26498* \
                   t26499*(3.0/2.0)))+rho_a[index]*t26537*(ccaa1*1/(t26540*t26540)*t26538*t26499*2.0-(ccaa2*t26538*t26499* \
                   2.0)/t26544+ccaa2*t26541*t26554*(t26538*t26538)*t26569*2.0-ccaa1*gamma_aa[index]*gcaa*1/(t26540*t26540* \
                   t26540)*t26545*t26538*2.0-(ccaa3*gamma_aa[index]*gcaa*t26545*t26538*6.0)/t26549-ccaa2*t26541*(t26550* \
                   t26550)*1/(t26544*t26544*t26544)*t26538*t26499*2.0+ccaa2*gamma_aa[index]*t26550*t26554*t26538*t26499* \
                   4.0+ccaa3*gcaa*t26541*t26551*t26545*t26538*t26558*6.0+ccaa3*gamma_aa[index]*gcaa*t26541*t26551*t26545* \
                   t26538*(t26538*t26499*6.0+gamma_aa[index]*gcaa*t26545*t26538*6.0)-ccaa3*gamma_aa[index]*gcaa*t26541* \
                   t26545*t26538*1/(t26549*t26549*t26549)*(t26558*t26558)*2.0)+c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((t26562/ \
                   t26564-t26562*t26563*1/(t26564*t26564*t26564)*2.0+t26562*1/(t26564*t26564*t26564*t26564*t26564)*t26565) \
                   *(cxnl1*t26566*t26586*t26499*2.0-cxnl2*t26566*t26587*t26499*2.0+cxnl2*t26541*t26581*t26590*t26569* \
                   2.0-cxnl2*t26541*t26566*t26594*t26595*t26499*2.0-cxnl1*gamma_aa[index]*gx*t26545*t26566*t26589*2.0- \
                   cxnl3*gamma_aa[index]*gx*t26545*t26566*t26588*6.0+cxnl2*gamma_aa[index]*t26581*t26566*t26577*t26499* \
                   4.0+cxnl3*gx*t26541*t26545*t26566*t26585*t26578*6.0+cxnl3*gamma_aa[index]*gx*t26541*t26545*t26566* \
                   t26593*t26578-cxnl3*gamma_aa[index]*gx*t26541*t26545*t26566*t26596*t26597*2.0)+cx1*t26566*t26586*t26499* \
                   2.0-cx2*t26566*t26587*t26499*2.0+cx2*t26541*t26581*t26590*t26569*2.0-cx2*t26541*t26566*t26594*t26595* \
                   t26499*2.0-cx1*gamma_aa[index]*gx*t26545*t26566*t26589*2.0-cx3*gamma_aa[index]*gx*t26545*t26566*t26588* \
                   6.0+cx2*gamma_aa[index]*t26581*t26566*t26577*t26499*4.0+cx3*gx*t26541*t26545*t26566*t26585*t26578* \
                   6.0+cx3*gamma_aa[index]*gx*t26541*t26545*t26566*t26593*t26578-cx3*gamma_aa[index]*gx*t26541*t26545* \
                   t26566*t26596*t26597*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t28421 = 1/pow(rho_a[index],1.0/3.0);
                double t28422 = c*t28421;
                double t28423 = sqrt(t28422);
                double t28424 = pow(t28422,3.0/2.0);
                double t28425 = c*c;
                double t28426 = 1/pow(rho_a[index],2.0/3.0);
                double t28427 = 1/c0p;
                double t28428 = b1p*t28423;
                double t28429 = b3p*t28424;
                double t28430 = b4p*t28425*t28426;
                double t28431 = b2p*c*t28421;
                double t28432 = t28430+t28431+t28428+t28429;
                double t28433 = 1/t28432;
                double t28434 = t28433*t28427*(1.0/2.0);
                double t28435 = t28434+1.0;
                double t28436 = log(t28435);
                double t28437 = a1p*c*t28421;
                double t28438 = t28437+1.0;
                double t28439 = gcaa*gcaa;
                double t28440 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28441 = 1/pow(rho_a[index],8.0/3.0);
                double t28442 = gamma_aa[index]*gcaa*t28441;
                double t28443 = t28442+1.0;
                double t28444 = gamma_aa[index]*gamma_aa[index];
                double t28445 = gamma_aa[index]*gcaa*t28441*2.0;
                double t28446 = t28440*t28444*t28439;
                double t28447 = t28445+t28446+1.0;
                double t28448 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28449 = gamma_aa[index]*gcaa*t28441*3.0;
                double t28450 = gamma_aa[index]*gcaa*t28444*t28439*t28448;
                double t28451 = t28440*t28444*t28439*3.0;
                double t28452 = t28450+t28451+t28449+1.0;
                double t28455 = gcaa*t28441*2.0;
                double t28456 = gamma_aa[index]*t28440*t28439*2.0;
                double t28453 = t28455+t28456;
                double t28454 = 1/(t28452*t28452);
                double t28457 = 1/(t28447*t28447);
                double t28458 = gcaa*t28441*3.0;
                double t28459 = gamma_aa[index]*t28440*t28439*6.0;
                double t28460 = gcaa*t28444*t28439*t28448*3.0;
                double t28461 = t28460+t28458+t28459;
                double t28462 = pow(rho_a[index],5.0/3.0);
                double t28463 = 1/tau_a[index];
                double t28464 = C_k*t28462*t28463;
                double t28465 = t28464-1.0;
                double t28466 = t28465*t28465;
                double t28467 = t28464+1.0;
                double t28468 = t28466*t28466;
                double t28469 = gx*gx;
                double t28470 = gamma_aa[index]*gx*t28441;
                double t28471 = t28470+1.0;
                double t28472 = 1/pow(rho_a[index],3.2E1/3.0);
                double t28473 = gamma_aa[index]*gx*t28441*2.0;
                double t28474 = t28440*t28444*t28469;
                double t28475 = t28473+t28474+1.0;
                double t28476 = gamma_aa[index]*gx*t28441*3.0;
                double t28477 = gamma_aa[index]*gx*t28444*t28448*t28469;
                double t28478 = t28440*t28444*t28469*3.0;
                double t28479 = t28476+t28477+t28478+1.0;
                double t28482 = gx*t28441*2.0;
                double t28483 = gamma_aa[index]*t28440*t28469*2.0;
                double t28480 = t28482+t28483;
                double t28481 = 1/(t28479*t28479);
                double t28484 = 1/(t28475*t28475);
                double t28485 = gx*t28441*3.0;
                double t28486 = gamma_aa[index]*t28440*t28469*6.0;
                double t28487 = gx*t28444*t28448*t28469*3.0;
                double t28488 = t28485+t28486+t28487;
                double t28489 = 1/(t28471*t28471);
                double t28490 = 1/t28475;
                double t28491 = 1/t28479;
                double t28492 = 1/(t28471*t28471*t28471);
                double t28493 = t28469*t28469;
                double t28494 = t28440*t28469*6.0;
                double t28495 = gamma_aa[index]*gx*t28448*t28469*6.0;
                double t28496 = t28494+t28495;
                double t28497 = t28480*t28480;
                double t28498 = 1/(t28475*t28475*t28475);
                double t28499 = t28488*t28488;
                double t28500 = 1/(t28479*t28479*t28479);
                v_gamma_aa_gamma_aa_[index] = rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t28423+b3f*t28424+b2f*c*t28421+b4f*t28425*t28426))+1.0)*(a1f*c*t28421+1.0)*2.0-c0p*t28436*t28438*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t28436*t28438*2.0)*(ccaa1*t28440*1/(t28443*t28443)*t28439*2.0-(ccaa2*t28440* \
                   t28439*2.0)/t28447+ccaa2*t28444*t28472*(t28439*t28439)*t28457*2.0-ccaa1*gamma_aa[index]*gcaa*1/(t28443* \
                   t28443*t28443)*t28439*t28448*2.0-(ccaa3*gamma_aa[index]*gcaa*t28439*t28448*6.0)/t28452-ccaa2*t28440* \
                   t28444*(t28453*t28453)*1/(t28447*t28447*t28447)*t28439*2.0+ccaa2*gamma_aa[index]*t28440*t28453*t28439* \
                   t28457*4.0+ccaa3*gcaa*t28461*t28444*t28454*t28439*t28448*6.0+ccaa3*gamma_aa[index]*gcaa*t28444*t28454* \
                   t28439*t28448*(t28440*t28439*6.0+gamma_aa[index]*gcaa*t28439*t28448*6.0)-ccaa3*gamma_aa[index]*gcaa* \
                   1/(t28452*t28452*t28452)*(t28461*t28461)*t28444*t28439*t28448*2.0)-c0*pow(rho_a[index],4.0/3.0)*(X- \
                   1.0)*((t28465/t28467-t28465*t28466*1/(t28467*t28467*t28467)*2.0+t28465*1/(t28467*t28467*t28467*t28467* \
                   t28467)*t28468)*(cxnl2*t28440*t28490*t28469*2.0-cxnl1*t28440*t28469*t28489*2.0-cxnl2*t28444*t28472* \
                   t28484*t28493*2.0+cxnl2*t28440*t28444*t28469*t28497*t28498*2.0+cxnl1*gamma_aa[index]*gx*t28492*t28448* \
                   t28469*2.0+cxnl3*gamma_aa[index]*gx*t28491*t28448*t28469*6.0-cxnl2*gamma_aa[index]*t28440*t28480*t28484* \
                   t28469*4.0-cxnl3*gx*t28444*t28481*t28448*t28469*t28488*6.0+cxnl3*gamma_aa[index]*gx*t28500*t28444* \
                   t28448*t28469*t28499*2.0-cxnl3*gamma_aa[index]*gx*t28444*t28481*t28448*t28469*t28496)-cx1*t28440*t28469* \
                   t28489*2.0+cx2*t28440*t28490*t28469*2.0-cx2*t28444*t28472*t28484*t28493*2.0+cx2*t28440*t28444*t28469* \
                   t28497*t28498*2.0+cx1*gamma_aa[index]*gx*t28492*t28448*t28469*2.0+cx3*gamma_aa[index]*gx*t28491*t28448* \
                   t28469*6.0-cx2*gamma_aa[index]*t28440*t28480*t28484*t28469*4.0-cx3*gx*t28444*t28481*t28448*t28469* \
                   t28488*6.0+cx3*gamma_aa[index]*gx*t28500*t28444*t28448*t28469*t28499*2.0-cx3*gamma_aa[index]*gx*t28444* \
                   t28481*t28448*t28469*t28496);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26600 = 1/pow(rho_a[index],1.0/3.0);
                double t26601 = c*t26600;
                double t26602 = sqrt(t26601);
                double t26603 = pow(t26601,3.0/2.0);
                double t26604 = c*c;
                double t26605 = 1/pow(rho_a[index],2.0/3.0);
                double t26606 = 1/c0p;
                double t26607 = b1p*t26602;
                double t26608 = b3p*t26603;
                double t26609 = b4p*t26604*t26605;
                double t26610 = b2p*c*t26600;
                double t26611 = t26610+t26607+t26608+t26609;
                double t26612 = 1/t26611;
                double t26613 = t26612*t26606*(1.0/2.0);
                double t26614 = t26613+1.0;
                double t26615 = log(t26614);
                double t26616 = a1p*c*t26600;
                double t26617 = t26616+1.0;
                double t26618 = pow(2.0,1.0/3.0);
                double t26619 = t26618*2.0;
                double t26620 = t26619-2.0;
                double t26621 = two_13*2.0;
                double t26622 = t26621-2.0;
                double t26623 = 1/t26622;
                double t26624 = 1/c0f;
                double t26625 = 1/pow(rho_b[index],1.0/3.0);
                double t26626 = c*t26625;
                double t26627 = sqrt(t26626);
                double t26628 = pow(t26626,3.0/2.0);
                double t26629 = 1/pow(rho_b[index],2.0/3.0);
                double t26630 = b1p*t26627;
                double t26631 = b3p*t26628;
                double t26632 = b4p*t26604*t26629;
                double t26633 = b2p*c*t26625;
                double t26634 = t26630+t26631+t26632+t26633;
                double t26635 = 1/t26634;
                double t26636 = t26606*t26635*(1.0/2.0);
                double t26637 = t26636+1.0;
                double t26638 = log(t26637);
                double t26639 = a1p*c*t26625;
                double t26640 = t26639+1.0;
                double t26641 = c0p*t26640*t26638*2.0;
                double t26642 = rho_a[index]+rho_b[index];
                double t26643 = 1/pow(t26642,1.0/3.0);
                double t26644 = c*t26643;
                double t26645 = sqrt(t26644);
                double t26646 = pow(t26644,3.0/2.0);
                double t26647 = 1/pow(t26642,2.0/3.0);
                double t26648 = b1p*t26645;
                double t26649 = b3p*t26646;
                double t26650 = b4p*t26604*t26647;
                double t26651 = b2p*c*t26643;
                double t26652 = t26650+t26651+t26648+t26649;
                double t26653 = 1/t26652;
                double t26654 = t26606*t26653*(1.0/2.0);
                double t26655 = t26654+1.0;
                double t26656 = log(t26655);
                double t26657 = a1p*c*t26643;
                double t26658 = t26657+1.0;
                double t26659 = c0p*t26656*t26658*2.0;
                double t26660 = rho_a[index]-rho_b[index];
                double t26661 = t26660*t26660;
                double t26662 = 1/t26642;
                double t26663 = t26660*t26662;
                double t26664 = 1/(t26642*t26642*t26642*t26642);
                double t26665 = t26661*t26661;
                double t26666 = t26663+1.0;
                double t26667 = pow(t26666,4.0/3.0);
                double t26668 = -t26663+1.0;
                double t26669 = pow(t26668,4.0/3.0);
                double t26670 = t26667+t26669-2.0;
                double t26671 = gcab*gcab;
                double t26672 = 1/pow(rho_a[index],8.0/3.0);
                double t26673 = 1/pow(rho_b[index],8.0/3.0);
                double t26674 = gamma_aa[index]*t26672*(1.0/2.0);
                double t26675 = gamma_bb[index]*t26673*(1.0/2.0);
                double t26676 = t26674+t26675;
                double t26677 = t26676*t26676;
                double t26678 = t26671*t26677*3.0;
                double t26679 = gcab*t26671*t26676*t26677;
                double t26680 = gcab*t26676*3.0;
                double t26681 = t26680+t26678+t26679+1.0;
                double t26682 = t26671*t26677;
                double t26683 = gcab*t26676*2.0;
                double t26684 = t26682+t26683+1.0;
                double t26685 = 1/(t26684*t26684);
                double t26686 = gcab*t26672;
                double t26687 = t26671*t26672*t26676;
                double t26688 = t26686+t26687;
                double t26689 = gcab*t26673;
                double t26690 = t26671*t26673*t26676;
                double t26691 = t26690+t26689;
                double t26692 = gcab*t26676;
                double t26693 = t26692+1.0;
                double t26694 = gcab*t26672*(3.0/2.0);
                double t26695 = t26671*t26672*t26676*3.0;
                double t26696 = gcab*t26671*t26672*t26677*(3.0/2.0);
                double t26697 = t26694+t26695+t26696;
                double t26698 = 1/(t26681*t26681);
                double t26699 = gcab*t26673*(3.0/2.0);
                double t26700 = t26671*t26673*t26676*3.0;
                double t26701 = gcab*t26671*t26673*t26677*(3.0/2.0);
                double t26702 = t26700+t26701+t26699;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t26641-t26620*t26623*(t26641-c0f*log((t26624*(1.0/2.0) \
                   )/(b1f*t26627+b3f*t26628+b2f*c*t26625+b4f*t26604*t26629)+1.0)*(a1f*c*t26625+1.0)*2.0))+t26642*(t26659- \
                   t26623*t26670*t26664*t26665*(t26659-c0f*log((t26624*(1.0/2.0))/(b1f*t26645+b3f*t26646+b2f*c*t26643+ \
                   b4f*t26604*t26647)+1.0)*(a1f*c*t26643+1.0)*2.0)+(Aa*t26623*t26670*log((1.0/2.0)/(Aa*(b1a*t26645+b3a* \
                   t26646+b2a*c*t26643+b4a*t26604*t26647))+1.0)*(t26664*t26665-1.0)*(a1a*c*t26643+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t26620*t26623*(c0p*t26615*t26617*2.0-c0f*log((t26624*(1.0/2.0))/(b1f*t26602+b3f*t26603+b2f*c*t26600+ \
                   b4f*t26604*t26605)+1.0)*(a1f*c*t26600+1.0)*2.0)-c0p*t26615*t26617*2.0))*(ccab1*t26671*t26672*t26673* \
                   1/(t26693*t26693)*(1.0/2.0)-(ccab2*t26671*t26672*t26673*(1.0/2.0))/t26684+ccab2*t26671*t26672*t26691* \
                   t26676*t26685+ccab2*t26671*t26673*t26676*t26685*t26688+ccab2*(t26671*t26671)*t26672*t26673*t26685* \
                   t26677*(1.0/2.0)-ccab2*t26671*t26691*1/(t26684*t26684*t26684)*t26677*t26688*2.0+ccab3*gcab*t26702* \
                   t26671*t26672*t26677*t26698*(3.0/2.0)+ccab3*gcab*t26671*t26673*t26677*t26697*t26698*(3.0/2.0)+ccab3* \
                   gcab*t26671*t26676*t26677*t26698*(t26671*t26672*t26673*(3.0/2.0)+gcab*t26671*t26672*t26673*t26676* \
                   (3.0/2.0))-(ccab3*gcab*t26671*t26672*t26673*t26676*(3.0/2.0))/t26681-ccab1*gcab*t26671*t26672*t26673* \
                   1/(t26693*t26693*t26693)*t26676*(1.0/2.0)-ccab3*gcab*t26702*t26671*1/(t26681*t26681*t26681)*t26676* \
                   t26677*t26697*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26706 = 1/pow(rho_a[index],1.0/3.0);
                double t26707 = c*t26706;
                double t26708 = sqrt(t26707);
                double t26709 = pow(t26707,3.0/2.0);
                double t26710 = c*c;
                double t26711 = 1/pow(rho_a[index],2.0/3.0);
                double t26712 = 1/c0p;
                double t26713 = b1p*t26708;
                double t26714 = b3p*t26709;
                double t26715 = b4p*t26710*t26711;
                double t26716 = b2p*c*t26706;
                double t26717 = t26713+t26714+t26715+t26716;
                double t26718 = 1/t26717;
                double t26719 = t26712*t26718*(1.0/2.0);
                double t26720 = t26719+1.0;
                double t26721 = log(t26720);
                double t26722 = a1p*c*t26706;
                double t26723 = t26722+1.0;
                double t26724 = pow(2.0,1.0/3.0);
                double t26725 = t26724*2.0;
                double t26726 = t26725-2.0;
                double t26727 = two_13*2.0;
                double t26728 = t26727-2.0;
                double t26729 = 1/t26728;
                double t26730 = 1/c0f;
                double t26731 = 1/pow(rho_b[index],1.0/3.0);
                double t26732 = c*t26731;
                double t26733 = sqrt(t26732);
                double t26734 = pow(t26732,3.0/2.0);
                double t26735 = 1/pow(rho_b[index],2.0/3.0);
                double t26736 = b1p*t26733;
                double t26737 = b3p*t26734;
                double t26738 = b4p*t26710*t26735;
                double t26739 = b2p*c*t26731;
                double t26740 = t26736+t26737+t26738+t26739;
                double t26741 = 1/t26740;
                double t26742 = t26712*t26741*(1.0/2.0);
                double t26743 = t26742+1.0;
                double t26744 = log(t26743);
                double t26745 = a1p*c*t26731;
                double t26746 = t26745+1.0;
                double t26747 = c0p*t26744*t26746*2.0;
                double t26748 = rho_a[index]+rho_b[index];
                double t26749 = 1/pow(t26748,1.0/3.0);
                double t26750 = c*t26749;
                double t26751 = sqrt(t26750);
                double t26752 = pow(t26750,3.0/2.0);
                double t26753 = 1/pow(t26748,2.0/3.0);
                double t26754 = b1p*t26751;
                double t26755 = b3p*t26752;
                double t26756 = b4p*t26710*t26753;
                double t26757 = b2p*c*t26749;
                double t26758 = t26754+t26755+t26756+t26757;
                double t26759 = 1/t26758;
                double t26760 = t26712*t26759*(1.0/2.0);
                double t26761 = t26760+1.0;
                double t26762 = log(t26761);
                double t26763 = a1p*c*t26749;
                double t26764 = t26763+1.0;
                double t26765 = c0p*t26762*t26764*2.0;
                double t26766 = rho_a[index]-rho_b[index];
                double t26767 = t26766*t26766;
                double t26768 = 1/t26748;
                double t26769 = t26766*t26768;
                double t26770 = 1/(t26748*t26748*t26748*t26748);
                double t26771 = t26767*t26767;
                double t26772 = t26769+1.0;
                double t26773 = pow(t26772,4.0/3.0);
                double t26774 = -t26769+1.0;
                double t26775 = pow(t26774,4.0/3.0);
                double t26776 = t26773+t26775-2.0;
                double t26777 = gcab*gcab;
                double t26778 = 1/pow(rho_b[index],1.6E1/3.0);
                double t26779 = 1/pow(rho_a[index],8.0/3.0);
                double t26780 = gamma_aa[index]*t26779*(1.0/2.0);
                double t26781 = 1/pow(rho_b[index],8.0/3.0);
                double t26782 = gamma_bb[index]*t26781*(1.0/2.0);
                double t26783 = t26780+t26782;
                double t26784 = gcab*t26783;
                double t26785 = t26784+1.0;
                double t26786 = t26783*t26783;
                double t26787 = t26777*t26786;
                double t26788 = gcab*t26783*2.0;
                double t26789 = t26787+t26788+1.0;
                double t26799 = gcab*t26781*(3.0/2.0);
                double t26800 = t26781*t26783*t26777*3.0;
                double t26801 = gcab*t26781*t26777*t26786*(3.0/2.0);
                double t26790 = t26800+t26801+t26799;
                double t26791 = t26777*t26786*3.0;
                double t26792 = gcab*t26783*t26777*t26786;
                double t26793 = gcab*t26783*3.0;
                double t26794 = t26791+t26792+t26793+1.0;
                double t26796 = gcab*t26781;
                double t26797 = t26781*t26783*t26777;
                double t26795 = t26796+t26797;
                double t26798 = 1/(t26789*t26789);
                double t26802 = 1/(t26794*t26794);
                double t26803 = b1f*t26733;
                double t26804 = b3f*t26734;
                double t26805 = b4f*t26710*t26735;
                double t26806 = b2f*c*t26731;
                double t26807 = t26803+t26804+t26805+t26806;
                double t26808 = 1/t26807;
                double t26809 = t26730*t26808*(1.0/2.0);
                double t26810 = t26809+1.0;
                double t26811 = log(t26810);
                double t26812 = a1f*c*t26731;
                double t26813 = t26812+1.0;
                double t26814 = t26747-c0f*t26811*t26813*2.0;
                double t26815 = t26747-t26814*t26726*t26729;
                double t26816 = gcaa*gcaa;
                double t26817 = gamma_bb[index]*gcaa*t26781;
                double t26818 = t26817+1.0;
                double t26819 = gamma_bb[index]*gamma_bb[index];
                double t26820 = gamma_bb[index]*gcaa*t26781*2.0;
                double t26821 = t26816*t26819*t26778;
                double t26822 = t26820+t26821+1.0;
                double t26823 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t26824 = gamma_bb[index]*gcaa*t26781*3.0;
                double t26825 = gamma_bb[index]*gcaa*t26823*t26816*t26819;
                double t26826 = t26816*t26819*t26778*3.0;
                double t26827 = t26824+t26825+t26826+1.0;
                double t26830 = gcaa*t26781*2.0;
                double t26831 = gamma_bb[index]*t26816*t26778*2.0;
                double t26828 = t26830+t26831;
                double t26829 = 1/(t26827*t26827);
                double t26832 = 1/(t26822*t26822);
                double t26833 = gcaa*t26781*3.0;
                double t26834 = gamma_bb[index]*t26816*t26778*6.0;
                double t26835 = gcaa*t26823*t26816*t26819*3.0;
                double t26836 = t26833+t26834+t26835;
                double t26837 = pow(rho_b[index],5.0/3.0);
                double t26838 = 1/tau_b[index];
                double t26839 = C_k*t26837*t26838;
                double t26840 = t26839-1.0;
                double t26841 = t26840*t26840;
                double t26842 = t26839+1.0;
                double t26843 = t26841*t26841;
                double t26844 = gx*gx;
                double t26845 = gamma_bb[index]*gx*t26781;
                double t26846 = t26845+1.0;
                double t26847 = 1/pow(rho_b[index],3.2E1/3.0);
                double t26848 = gamma_bb[index]*gx*t26781*2.0;
                double t26849 = t26844*t26819*t26778;
                double t26850 = t26848+t26849+1.0;
                double t26851 = gamma_bb[index]*gx*t26781*3.0;
                double t26852 = gamma_bb[index]*gx*t26823*t26844*t26819;
                double t26853 = t26844*t26819*t26778*3.0;
                double t26854 = t26851+t26852+t26853+1.0;
                double t26857 = gx*t26781*2.0;
                double t26858 = gamma_bb[index]*t26844*t26778*2.0;
                double t26855 = t26857+t26858;
                double t26856 = 1/(t26854*t26854);
                double t26859 = 1/(t26850*t26850);
                double t26860 = gx*t26781*3.0;
                double t26861 = gamma_bb[index]*t26844*t26778*6.0;
                double t26862 = gx*t26823*t26844*t26819*3.0;
                double t26863 = t26860+t26861+t26862;
                double t26864 = 1/(t26846*t26846);
                double t26865 = 1/t26850;
                double t26866 = 1/t26854;
                double t26867 = 1/(t26846*t26846*t26846);
                double t26868 = t26844*t26844;
                double t26869 = t26844*t26778*6.0;
                double t26870 = gamma_bb[index]*gx*t26823*t26844*6.0;
                double t26871 = t26870+t26869;
                double t26872 = t26855*t26855;
                double t26873 = 1/(t26850*t26850*t26850);
                double t26874 = t26863*t26863;
                double t26875 = 1/(t26854*t26854*t26854);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t26815+t26748*(t26765-t26770*t26771*t26729*t26776*(t26765- \
                   c0f*log((t26730*(1.0/2.0))/(b1f*t26751+b3f*t26752+b2f*c*t26749+b4f*t26710*t26753)+1.0)*(a1f*c*t26749+ \
                   1.0)*2.0)+(Aa*t26729*t26776*log((1.0/2.0)/(Aa*(b1a*t26751+b3a*t26752+b2a*c*t26749+b4a*t26710*t26753) \
                   )+1.0)*(t26770*t26771-1.0)*(a1a*c*t26749+1.0)*2.0)/d2fz0)+rho_a[index]*(t26726*t26729*(c0p*t26721* \
                   t26723*2.0-c0f*log((t26730*(1.0/2.0))/(b1f*t26708+b3f*t26709+b2f*c*t26706+b4f*t26710*t26711)+1.0)* \
                   (a1f*c*t26706+1.0)*2.0)-c0p*t26721*t26723*2.0))*(ccab1*1/(t26785*t26785)*t26777*t26778*(1.0/2.0)-(ccab2* \
                   t26777*t26778*(1.0/2.0))/t26789-ccab2*t26777*t26786*(t26795*t26795)*1/(t26789*t26789*t26789)*2.0+ccab2* \
                   (t26777*t26777)*t26786*t26778*t26798*(1.0/2.0)+ccab2*t26781*t26783*t26777*t26795*t26798*2.0-ccab1* \
                   gcab*t26783*1/(t26785*t26785*t26785)*t26777*t26778*(1.0/2.0)-(ccab3*gcab*t26783*t26777*t26778*(3.0/ \
                   2.0))/t26794-ccab3*gcab*(t26790*t26790)*t26783*1/(t26794*t26794*t26794)*t26777*t26786*2.0+ccab3*gcab* \
                   t26802*t26781*t26790*t26777*t26786*3.0+ccab3*gcab*t26802*t26783*t26777*t26786*(t26777*t26778*(3.0/ \
                   2.0)+gcab*t26783*t26777*t26778*(3.0/2.0)))-rho_b[index]*t26815*((ccaa2*t26816*t26778*2.0)/t26822-ccaa1* \
                   t26816*1/(t26818*t26818)*t26778*2.0-ccaa2*t26832*(t26816*t26816)*t26819*t26847*2.0+ccaa1*gamma_bb[index]* \
                   gcaa*t26823*t26816*1/(t26818*t26818*t26818)*2.0+(ccaa3*gamma_bb[index]*gcaa*t26823*t26816*6.0)/t26827+ \
                   ccaa2*1/(t26822*t26822*t26822)*t26816*t26819*(t26828*t26828)*t26778*2.0-ccaa2*gamma_bb[index]*t26832* \
                   t26816*t26828*t26778*4.0-ccaa3*gcaa*t26823*t26816*t26836*t26819*t26829*6.0-ccaa3*gamma_bb[index]*gcaa* \
                   t26823*t26816*t26819*t26829*(t26816*t26778*6.0+gamma_bb[index]*gcaa*t26823*t26816*6.0)+ccaa3*gamma_bb[index]* \
                   gcaa*t26823*t26816*1/(t26827*t26827*t26827)*(t26836*t26836)*t26819*2.0)+c0*pow(rho_b[index],4.0/3.0) \
                   *(X-1.0)*((t26840/t26842-t26840*t26841*1/(t26842*t26842*t26842)*2.0+t26840*1/(t26842*t26842*t26842* \
                   t26842*t26842)*t26843)*(cxnl1*t26844*t26864*t26778*2.0-cxnl2*t26844*t26865*t26778*2.0+cxnl2*t26819* \
                   t26847*t26859*t26868*2.0-cxnl2*t26844*t26872*t26819*t26873*t26778*2.0-cxnl1*gamma_bb[index]*gx*t26823* \
                   t26844*t26867*2.0-cxnl3*gamma_bb[index]*gx*t26823*t26844*t26866*6.0+cxnl2*gamma_bb[index]*t26844*t26855* \
                   t26778*t26859*4.0+cxnl3*gx*t26823*t26844*t26863*t26819*t26856*6.0+cxnl3*gamma_bb[index]*gx*t26823* \
                   t26844*t26871*t26819*t26856-cxnl3*gamma_bb[index]*gx*t26823*t26844*t26819*t26874*t26875*2.0)+cx1*t26844* \
                   t26864*t26778*2.0-cx2*t26844*t26865*t26778*2.0+cx2*t26819*t26847*t26859*t26868*2.0-cx2*t26844*t26872* \
                   t26819*t26873*t26778*2.0-cx1*gamma_bb[index]*gx*t26823*t26844*t26867*2.0-cx3*gamma_bb[index]*gx*t26823* \
                   t26844*t26866*6.0+cx2*gamma_bb[index]*t26844*t26855*t26778*t26859*4.0+cx3*gx*t26823*t26844*t26863* \
                   t26819*t26856*6.0+cx3*gamma_bb[index]*gx*t26823*t26844*t26871*t26819*t26856-cx3*gamma_bb[index]*gx* \
                   t26823*t26844*t26819*t26874*t26875*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27655 = 1/pow(rho_b[index],1.0/3.0);
                double t27656 = c*t27655;
                double t27657 = sqrt(t27656);
                double t27658 = pow(t27656,3.0/2.0);
                double t27659 = c*c;
                double t27660 = 1/pow(rho_b[index],2.0/3.0);
                double t27661 = 1/c0p;
                double t27662 = b1p*t27657;
                double t27663 = b3p*t27658;
                double t27664 = b4p*t27660*t27659;
                double t27665 = b2p*c*t27655;
                double t27666 = t27662+t27663+t27664+t27665;
                double t27667 = 1/t27666;
                double t27668 = t27661*t27667*(1.0/2.0);
                double t27669 = t27668+1.0;
                double t27670 = log(t27669);
                double t27671 = a1p*c*t27655;
                double t27672 = t27671+1.0;
                double t27673 = gcaa*gcaa;
                double t27674 = 1/pow(rho_b[index],1.6E1/3.0);
                double t27675 = 1/pow(rho_b[index],8.0/3.0);
                double t27676 = gamma_bb[index]*gcaa*t27675;
                double t27677 = t27676+1.0;
                double t27678 = gamma_bb[index]*gamma_bb[index];
                double t27679 = gamma_bb[index]*gcaa*t27675*2.0;
                double t27680 = t27673*t27674*t27678;
                double t27681 = t27680+t27679+1.0;
                double t27682 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t27683 = gamma_bb[index]*gcaa*t27675*3.0;
                double t27684 = gamma_bb[index]*gcaa*t27673*t27682*t27678;
                double t27685 = t27673*t27674*t27678*3.0;
                double t27686 = t27683+t27684+t27685+1.0;
                double t27689 = gcaa*t27675*2.0;
                double t27690 = gamma_bb[index]*t27673*t27674*2.0;
                double t27687 = t27690+t27689;
                double t27688 = 1/(t27686*t27686);
                double t27691 = 1/(t27681*t27681);
                double t27692 = gcaa*t27675*3.0;
                double t27693 = gamma_bb[index]*t27673*t27674*6.0;
                double t27694 = gcaa*t27673*t27682*t27678*3.0;
                double t27695 = t27692+t27693+t27694;
                double t27696 = pow(rho_b[index],5.0/3.0);
                double t27697 = 1/tau_b[index];
                double t27698 = C_k*t27696*t27697;
                double t27699 = t27698-1.0;
                double t27700 = t27699*t27699;
                double t27701 = t27698+1.0;
                double t27702 = t27700*t27700;
                double t27703 = gx*gx;
                double t27704 = gamma_bb[index]*gx*t27675;
                double t27705 = t27704+1.0;
                double t27706 = 1/pow(rho_b[index],3.2E1/3.0);
                double t27707 = gamma_bb[index]*gx*t27675*2.0;
                double t27708 = t27703*t27674*t27678;
                double t27709 = t27707+t27708+1.0;
                double t27710 = gamma_bb[index]*gx*t27675*3.0;
                double t27711 = gamma_bb[index]*gx*t27703*t27682*t27678;
                double t27712 = t27703*t27674*t27678*3.0;
                double t27713 = t27710+t27711+t27712+1.0;
                double t27716 = gx*t27675*2.0;
                double t27717 = gamma_bb[index]*t27703*t27674*2.0;
                double t27714 = t27716+t27717;
                double t27715 = 1/(t27713*t27713);
                double t27718 = 1/(t27709*t27709);
                double t27719 = gx*t27675*3.0;
                double t27720 = gamma_bb[index]*t27703*t27674*6.0;
                double t27721 = gx*t27703*t27682*t27678*3.0;
                double t27722 = t27720+t27721+t27719;
                double t27723 = 1/(t27705*t27705);
                double t27724 = 1/t27709;
                double t27725 = 1/t27713;
                double t27726 = 1/(t27705*t27705*t27705);
                double t27727 = t27703*t27703;
                double t27728 = t27703*t27674*6.0;
                double t27729 = gamma_bb[index]*gx*t27703*t27682*6.0;
                double t27730 = t27728+t27729;
                double t27731 = t27714*t27714;
                double t27732 = 1/(t27709*t27709*t27709);
                double t27733 = t27722*t27722;
                double t27734 = 1/(t27713*t27713*t27713);
                v_gamma_bb_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t27657+b3f*t27658+b2f*c*t27655+b4f*t27660*t27659))+1.0)*(a1f*c*t27655+1.0)*2.0-c0p*t27670*t27672* \
                   2.0))/(two_13*2.0-2.0)+c0p*t27670*t27672*2.0)*((ccaa2*t27673*t27674*2.0)/t27681-ccaa1*t27673*t27674* \
                   1/(t27677*t27677)*2.0-ccaa2*t27706*(t27673*t27673)*t27691*t27678*2.0+ccaa1*gamma_bb[index]*gcaa*t27673* \
                   t27682*1/(t27677*t27677*t27677)*2.0+(ccaa3*gamma_bb[index]*gcaa*t27673*t27682*6.0)/t27686+ccaa2*1/ \
                   (t27681*t27681*t27681)*t27673*t27674*t27678*(t27687*t27687)*2.0-ccaa2*gamma_bb[index]*t27673*t27691* \
                   t27674*t27687*4.0-ccaa3*gcaa*t27673*t27682*t27695*t27678*t27688*6.0-ccaa3*gamma_bb[index]*gcaa*t27673* \
                   t27682*t27678*t27688*(t27673*t27674*6.0+gamma_bb[index]*gcaa*t27673*t27682*6.0)+ccaa3*gamma_bb[index]* \
                   gcaa*t27673*t27682*1/(t27686*t27686*t27686)*(t27695*t27695)*t27678*2.0)+c0*pow(rho_b[index],4.0/3.0) \
                   *(X-1.0)*((t27699/t27701-t27700*1/(t27701*t27701*t27701)*t27699*2.0+1/(t27701*t27701*t27701*t27701* \
                   t27701)*t27702*t27699)*(cxnl1*t27703*t27723*t27674*2.0-cxnl2*t27703*t27724*t27674*2.0+cxnl2*t27706* \
                   t27718*t27727*t27678*2.0-cxnl2*t27703*t27731*t27732*t27674*t27678*2.0-cxnl1*gamma_bb[index]*gx*t27703* \
                   t27726*t27682*2.0-cxnl3*gamma_bb[index]*gx*t27703*t27725*t27682*6.0+cxnl2*gamma_bb[index]*t27703*t27714* \
                   t27718*t27674*4.0+cxnl3*gx*t27703*t27722*t27715*t27682*t27678*6.0+cxnl3*gamma_bb[index]*gx*t27703* \
                   t27730*t27715*t27682*t27678-cxnl3*gamma_bb[index]*gx*t27703*t27733*t27734*t27682*t27678*2.0)+cx1*t27703* \
                   t27723*t27674*2.0-cx2*t27703*t27724*t27674*2.0+cx2*t27706*t27718*t27727*t27678*2.0-cx2*t27703*t27731* \
                   t27732*t27674*t27678*2.0-cx1*gamma_bb[index]*gx*t27703*t27726*t27682*2.0-cx3*gamma_bb[index]*gx*t27703* \
                   t27725*t27682*6.0+cx2*gamma_bb[index]*t27703*t27714*t27718*t27674*4.0+cx3*gx*t27703*t27722*t27715* \
                   t27682*t27678*6.0+cx3*gamma_bb[index]*gx*t27703*t27730*t27715*t27682*t27678-cx3*gamma_bb[index]*gx* \
                   t27703*t27733*t27734*t27682*t27678*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26877 = 1/pow(rho_a[index],8.0/3.0);
                double t26878 = gamma_aa[index]*gamma_aa[index];
                double t26879 = gx*gx;
                double t26880 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t26881 = 1/pow(rho_a[index],1.6E1/3.0);
                double t26882 = pow(rho_a[index],5.0/3.0);
                double t26883 = 1/tau_a[index];
                double t26884 = C_k*t26882*t26883;
                double t26885 = t26884+1.0;
                double t26886 = pow(rho_a[index],2.0/3.0);
                double t26887 = 1/(tau_a[index]*tau_a[index]);
                double t26888 = t26884-1.0;
                double t26889 = t26888*t26888;
                double t26890 = t26889*t26889;
                double t26891 = C_k*C_k;
                double t26892 = pow(rho_a[index],7.0/3.0);
                double t26893 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t26894 = 1/(t26885*t26885*t26885);
                double t26895 = 1/(t26885*t26885*t26885*t26885);
                double t26896 = 1/(t26885*t26885*t26885*t26885*t26885);
                double t26897 = 1/(t26885*t26885*t26885*t26885*t26885*t26885);
                double t26898 = 1/(t26885*t26885);
                double t26899 = 1/t26885;
                double t26900 = gamma_aa[index]*gx*t26877;
                double t26901 = t26900+1.0;
                double t26902 = 1/t26901;
                double t26903 = gamma_aa[index]*gx*t26877*3.0;
                double t26904 = gamma_aa[index]*gx*t26880*t26878*t26879;
                double t26905 = t26881*t26878*t26879*3.0;
                double t26906 = t26903+t26904+t26905+1.0;
                double t26907 = 1/t26906;
                double t26908 = gamma_aa[index]*gx*t26877*2.0;
                double t26909 = t26881*t26878*t26879;
                double t26910 = t26908+t26909+1.0;
                double t26911 = 1/t26910;
                double t26912 = 1/pow(rho_a[index],1.9E1/3.0);
                double t26913 = 1/pow(rho_a[index],1.1E1/3.0);
                double t26914 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t26915 = cxnl1*gamma_aa[index]*gx*t26902*t26877;
                double t26916 = cxnl3*gamma_aa[index]*gx*t26880*t26907*t26878*t26879;
                double t26917 = cxnl2*t26911*t26881*t26878*t26879;
                double t26918 = cxnl0+t26915+t26916+t26917;
                double t26919 = C_k*t26882*t26887*t26899;
                double t26920 = C_k*t26882*t26895*t26887*t26888*t26889*6.0;
                double t26921 = C_k*t26890*t26882*t26887*t26896*5.0;
                double t26922 = t26920+t26921+t26919-C_k*t26882*t26894*t26887*t26889*6.0-C_k*t26882*t26887*t26888* \
                   t26898-C_k*t26890*t26882*t26887*t26888*t26897*5.0;
                v_rho_a_tau_a_[index] = -(c0*pow(rho_a[index],4.0/3.0)*(t26918*(t26891*t26892*t26893*t26898*(1.0E1/ \
                   3.0)-C_k*t26886*t26887*t26899*(5.0/3.0)-C_k*t26890*t26886*t26887*t26896*(2.5E1/3.0)+C_k*t26894*t26886* \
                   t26887*t26889*1.0E1+C_k*t26886*t26887*t26888*t26898*(5.0/3.0)+t26890*t26891*t26892*t26893*t26897*(2.5E2/ \
                   3.0)+t26891*t26892*t26893*t26894*t26888*(5.0E1/3.0)-t26891*t26892*t26893*t26895*t26889*6.0E1+t26891* \
                   t26892*t26893*t26896*t26888*t26889*(2.0E1/3.0)-t26890*t26891*t26892*t26893*1/(t26885*t26885*t26885* \
                   t26885*t26885*t26885*t26885)*t26888*5.0E1+C_k*t26890*t26886*t26887*t26888*t26897*(2.5E1/3.0)-C_k*t26886* \
                   t26895*t26887*t26888*t26889*1.0E1)+t26922*(cxnl1*gamma_aa[index]*gx*t26902*t26913*(8.0/3.0)+cxnl2* \
                   t26911*t26912*t26878*t26879*(1.6E1/3.0)-cxnl1*1/(t26901*t26901)*t26912*t26878*t26879*(8.0/3.0)-cxnl2* \
                   1/(t26910*t26910)*t26881*t26878*t26879*(gamma_aa[index]*gx*t26913*(1.6E1/3.0)+t26912*t26878*t26879* \
                   (1.6E1/3.0))+cxnl3*gamma_aa[index]*gx*t26914*t26907*t26878*t26879*8.0-cxnl3*gamma_aa[index]*gx*1/(t26906* \
                   t26906)*t26880*t26878*t26879*(gamma_aa[index]*gx*t26913*8.0+t26912*t26878*t26879*1.6E1+gamma_aa[index]* \
                   gx*t26914*t26878*t26879*8.0)))-c0*pow(rho_a[index],1.0/3.0)*t26922*t26918*(4.0/3.0))*(X-1.0);
            } else if (rho_a[index] > cutoff_) {
                double t28507 = 1/pow(rho_a[index],8.0/3.0);
                double t28508 = gamma_aa[index]*gamma_aa[index];
                double t28509 = gx*gx;
                double t28510 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28511 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28512 = pow(rho_a[index],5.0/3.0);
                double t28513 = 1/tau_a[index];
                double t28514 = C_k*t28512*t28513;
                double t28515 = t28514+1.0;
                double t28516 = pow(rho_a[index],2.0/3.0);
                double t28517 = 1/(tau_a[index]*tau_a[index]);
                double t28518 = t28514-1.0;
                double t28519 = t28518*t28518;
                double t28520 = t28519*t28519;
                double t28521 = C_k*C_k;
                double t28522 = pow(rho_a[index],7.0/3.0);
                double t28523 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t28524 = 1/(t28515*t28515*t28515);
                double t28525 = 1/(t28515*t28515*t28515*t28515);
                double t28526 = 1/(t28515*t28515*t28515*t28515*t28515);
                double t28527 = 1/(t28515*t28515*t28515*t28515*t28515*t28515);
                double t28528 = 1/(t28515*t28515);
                double t28529 = 1/t28515;
                double t28530 = gamma_aa[index]*gx*t28507;
                double t28531 = t28530+1.0;
                double t28532 = 1/t28531;
                double t28533 = gamma_aa[index]*gx*t28507*3.0;
                double t28534 = gamma_aa[index]*gx*t28510*t28508*t28509;
                double t28535 = t28511*t28508*t28509*3.0;
                double t28536 = t28533+t28534+t28535+1.0;
                double t28537 = 1/t28536;
                double t28538 = gamma_aa[index]*gx*t28507*2.0;
                double t28539 = t28511*t28508*t28509;
                double t28540 = t28538+t28539+1.0;
                double t28541 = 1/t28540;
                double t28542 = 1/pow(rho_a[index],1.9E1/3.0);
                double t28543 = 1/pow(rho_a[index],1.1E1/3.0);
                double t28544 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t28545 = X-1.0;
                double t28546 = cxnl1*gamma_aa[index]*gx*t28532*t28507;
                double t28547 = cxnl3*gamma_aa[index]*gx*t28510*t28508*t28509*t28537;
                double t28548 = cxnl2*t28511*t28541*t28508*t28509;
                double t28549 = cxnl0+t28546+t28547+t28548;
                double t28550 = C_k*t28512*t28517*t28529;
                double t28551 = C_k*t28512*t28525*t28517*t28518*t28519*6.0;
                double t28552 = C_k*t28520*t28512*t28517*t28526*5.0;
                double t28553 = t28550+t28551+t28552-C_k*t28512*t28524*t28517*t28519*6.0-C_k*t28512*t28517*t28518* \
                   t28528-C_k*t28520*t28512*t28517*t28518*t28527*5.0;
                v_rho_a_tau_a_[index] = -c0*pow(rho_a[index],4.0/3.0)*t28545*(t28549*(t28521*t28522*t28523*t28528* \
                   (1.0E1/3.0)-C_k*t28516*t28517*t28529*(5.0/3.0)-C_k*t28520*t28516*t28517*t28526*(2.5E1/3.0)+C_k*t28524* \
                   t28516*t28517*t28519*1.0E1+C_k*t28516*t28517*t28518*t28528*(5.0/3.0)+t28520*t28521*t28522*t28523*t28527* \
                   (2.5E2/3.0)+t28521*t28522*t28523*t28524*t28518*(5.0E1/3.0)-t28521*t28522*t28523*t28525*t28519*6.0E1+ \
                   t28521*t28522*t28523*t28526*t28518*t28519*(2.0E1/3.0)-t28520*t28521*t28522*t28523*1/(t28515*t28515* \
                   t28515*t28515*t28515*t28515*t28515)*t28518*5.0E1+C_k*t28520*t28516*t28517*t28518*t28527*(2.5E1/3.0) \
                   -C_k*t28516*t28525*t28517*t28518*t28519*1.0E1)+t28553*(cxnl1*gamma_aa[index]*gx*t28532*t28543*(8.0/ \
                   3.0)+cxnl2*t28541*t28542*t28508*t28509*(1.6E1/3.0)-cxnl1*1/(t28531*t28531)*t28542*t28508*t28509*(8.0/ \
                   3.0)-cxnl2*t28511*1/(t28540*t28540)*t28508*t28509*(gamma_aa[index]*gx*t28543*(1.6E1/3.0)+t28542*t28508* \
                   t28509*(1.6E1/3.0))+cxnl3*gamma_aa[index]*gx*t28508*t28544*t28509*t28537*8.0-cxnl3*gamma_aa[index]* \
                   gx*t28510*t28508*t28509*1/(t28536*t28536)*(gamma_aa[index]*gx*t28543*8.0+t28542*t28508*t28509*1.6E1+ \
                   gamma_aa[index]*gx*t28508*t28544*t28509*8.0)))+c0*pow(rho_a[index],1.0/3.0)*t28553*t28545*t28549*(4.0/ \
                   3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26926 = 1/pow(rho_b[index],8.0/3.0);
                double t26927 = gamma_bb[index]*gamma_bb[index];
                double t26928 = gx*gx;
                double t26929 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t26930 = 1/pow(rho_b[index],1.6E1/3.0);
                double t26931 = pow(rho_b[index],5.0/3.0);
                double t26932 = 1/tau_b[index];
                double t26933 = C_k*t26931*t26932;
                double t26934 = t26933+1.0;
                double t26935 = pow(rho_b[index],2.0/3.0);
                double t26936 = 1/(tau_b[index]*tau_b[index]);
                double t26937 = t26933-1.0;
                double t26938 = t26937*t26937;
                double t26939 = t26938*t26938;
                double t26940 = C_k*C_k;
                double t26941 = pow(rho_b[index],7.0/3.0);
                double t26942 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t26943 = 1/(t26934*t26934*t26934);
                double t26944 = 1/(t26934*t26934*t26934*t26934);
                double t26945 = 1/(t26934*t26934*t26934*t26934*t26934);
                double t26946 = 1/(t26934*t26934*t26934*t26934*t26934*t26934);
                double t26947 = 1/(t26934*t26934);
                double t26948 = 1/t26934;
                double t26949 = gamma_bb[index]*gx*t26926;
                double t26950 = t26949+1.0;
                double t26951 = 1/t26950;
                double t26952 = gamma_bb[index]*gx*t26926*3.0;
                double t26953 = gamma_bb[index]*gx*t26927*t26928*t26929;
                double t26954 = t26930*t26927*t26928*3.0;
                double t26955 = t26952+t26953+t26954+1.0;
                double t26956 = 1/t26955;
                double t26957 = gamma_bb[index]*gx*t26926*2.0;
                double t26958 = t26930*t26927*t26928;
                double t26959 = t26957+t26958+1.0;
                double t26960 = 1/t26959;
                double t26961 = 1/pow(rho_b[index],1.9E1/3.0);
                double t26962 = 1/pow(rho_b[index],1.1E1/3.0);
                double t26963 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t26964 = cxnl1*gamma_bb[index]*gx*t26951*t26926;
                double t26965 = cxnl3*gamma_bb[index]*gx*t26927*t26928*t26929*t26956;
                double t26966 = cxnl2*t26930*t26960*t26927*t26928;
                double t26967 = cxnl0+t26964+t26965+t26966;
                double t26968 = C_k*t26931*t26936*t26948;
                double t26969 = C_k*t26931*t26944*t26936*t26937*t26938*6.0;
                double t26970 = C_k*t26931*t26936*t26945*t26939*5.0;
                double t26971 = t26970+t26968+t26969-C_k*t26931*t26943*t26936*t26938*6.0-C_k*t26931*t26936*t26937* \
                   t26947-C_k*t26931*t26936*t26937*t26946*t26939*5.0;
                v_rho_b_tau_b_[index] = -(c0*pow(rho_b[index],4.0/3.0)*(t26967*(t26940*t26941*t26942*t26947*(1.0E1/ \
                   3.0)-C_k*t26935*t26936*t26948*(5.0/3.0)+C_k*t26943*t26935*t26936*t26938*1.0E1-C_k*t26935*t26936*t26945* \
                   t26939*(2.5E1/3.0)+C_k*t26935*t26936*t26937*t26947*(5.0/3.0)+t26940*t26941*t26942*t26943*t26937*(5.0E1/ \
                   3.0)-t26940*t26941*t26942*t26944*t26938*6.0E1+t26940*t26941*t26942*t26946*t26939*(2.5E2/3.0)+t26940* \
                   t26941*t26942*t26945*t26937*t26938*(2.0E1/3.0)-t26940*t26941*t26942*1/(t26934*t26934*t26934*t26934* \
                   t26934*t26934*t26934)*t26937*t26939*5.0E1-C_k*t26935*t26944*t26936*t26937*t26938*1.0E1+C_k*t26935* \
                   t26936*t26937*t26946*t26939*(2.5E1/3.0))+t26971*(cxnl1*gamma_bb[index]*gx*t26951*t26962*(8.0/3.0)+ \
                   cxnl2*t26960*t26961*t26927*t26928*(1.6E1/3.0)-cxnl1*1/(t26950*t26950)*t26961*t26927*t26928*(8.0/3.0) \
                   -cxnl2*t26930*t26927*t26928*1/(t26959*t26959)*(gamma_bb[index]*gx*t26962*(1.6E1/3.0)+t26961*t26927* \
                   t26928*(1.6E1/3.0))+cxnl3*gamma_bb[index]*gx*t26927*t26963*t26928*t26956*8.0-cxnl3*gamma_bb[index]* \
                   gx*t26927*t26928*1/(t26955*t26955)*t26929*(gamma_bb[index]*gx*t26962*8.0+t26961*t26927*t26928*1.6E1+ \
                   gamma_bb[index]*gx*t26927*t26963*t26928*8.0)))-c0*pow(rho_b[index],1.0/3.0)*t26971*t26967*(4.0/3.0) \
                   )*(X-1.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27739 = 1/pow(rho_b[index],8.0/3.0);
                double t27740 = gamma_bb[index]*gamma_bb[index];
                double t27741 = gx*gx;
                double t27742 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t27743 = 1/pow(rho_b[index],1.6E1/3.0);
                double t27744 = pow(rho_b[index],5.0/3.0);
                double t27745 = 1/tau_b[index];
                double t27746 = C_k*t27744*t27745;
                double t27747 = t27746+1.0;
                double t27748 = pow(rho_b[index],2.0/3.0);
                double t27749 = 1/(tau_b[index]*tau_b[index]);
                double t27750 = t27746-1.0;
                double t27751 = t27750*t27750;
                double t27752 = t27751*t27751;
                double t27753 = C_k*C_k;
                double t27754 = pow(rho_b[index],7.0/3.0);
                double t27755 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t27756 = 1/(t27747*t27747*t27747);
                double t27757 = 1/(t27747*t27747*t27747*t27747);
                double t27758 = 1/(t27747*t27747*t27747*t27747*t27747);
                double t27759 = 1/(t27747*t27747*t27747*t27747*t27747*t27747);
                double t27760 = 1/(t27747*t27747);
                double t27761 = 1/t27747;
                double t27762 = gamma_bb[index]*gx*t27739;
                double t27763 = t27762+1.0;
                double t27764 = 1/t27763;
                double t27765 = gamma_bb[index]*gx*t27739*3.0;
                double t27766 = gamma_bb[index]*gx*t27740*t27741*t27742;
                double t27767 = t27740*t27741*t27743*3.0;
                double t27768 = t27765+t27766+t27767+1.0;
                double t27769 = 1/t27768;
                double t27770 = gamma_bb[index]*gx*t27739*2.0;
                double t27771 = t27740*t27741*t27743;
                double t27772 = t27770+t27771+1.0;
                double t27773 = 1/t27772;
                double t27774 = 1/pow(rho_b[index],1.9E1/3.0);
                double t27775 = 1/pow(rho_b[index],1.1E1/3.0);
                double t27776 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t27777 = X-1.0;
                double t27778 = cxnl1*gamma_bb[index]*gx*t27764*t27739;
                double t27779 = cxnl3*gamma_bb[index]*gx*t27740*t27741*t27742*t27769;
                double t27780 = cxnl2*t27740*t27741*t27743*t27773;
                double t27781 = cxnl0+t27780+t27778+t27779;
                double t27782 = C_k*t27761*t27744*t27749;
                double t27783 = C_k*t27750*t27751*t27744*t27757*t27749*6.0;
                double t27784 = C_k*t27752*t27744*t27749*t27758*5.0;
                double t27785 = t27782+t27783+t27784-C_k*t27750*t27760*t27744*t27749-C_k*t27751*t27744*t27756*t27749* \
                   6.0-C_k*t27750*t27752*t27744*t27749*t27759*5.0;
                v_rho_b_tau_b_[index] = -c0*pow(rho_b[index],4.0/3.0)*t27777*(t27781*(t27760*t27753*t27754*t27755* \
                   (1.0E1/3.0)-C_k*t27761*t27748*t27749*(5.0/3.0)+C_k*t27750*t27760*t27748*t27749*(5.0/3.0)+C_k*t27751* \
                   t27756*t27748*t27749*1.0E1-C_k*t27752*t27748*t27749*t27758*(2.5E1/3.0)+t27750*t27753*t27754*t27755* \
                   t27756*(5.0E1/3.0)-t27751*t27753*t27754*t27755*t27757*6.0E1+t27752*t27753*t27754*t27755*t27759*(2.5E2/ \
                   3.0)+t27750*t27751*t27753*t27754*t27755*t27758*(2.0E1/3.0)-t27750*t27752*t27753*t27754*t27755*1/(t27747* \
                   t27747*t27747*t27747*t27747*t27747*t27747)*5.0E1-C_k*t27750*t27751*t27748*t27757*t27749*1.0E1+C_k* \
                   t27750*t27752*t27748*t27749*t27759*(2.5E1/3.0))+t27785*(cxnl1*gamma_bb[index]*gx*t27764*t27775*(8.0/ \
                   3.0)+cxnl2*t27740*t27741*t27773*t27774*(1.6E1/3.0)-cxnl1*t27740*t27741*1/(t27763*t27763)*t27774*(8.0/ \
                   3.0)-cxnl2*t27740*t27741*t27743*1/(t27772*t27772)*(gamma_bb[index]*gx*t27775*(1.6E1/3.0)+t27740*t27741* \
                   t27774*(1.6E1/3.0))+cxnl3*gamma_bb[index]*gx*t27740*t27741*t27776*t27769*8.0-cxnl3*gamma_bb[index]* \
                   gx*t27740*t27741*t27742*1/(t27768*t27768)*(gamma_bb[index]*gx*t27775*8.0+t27740*t27741*t27774*1.6E1+ \
                   gamma_bb[index]*gx*t27740*t27741*t27776*8.0)))+c0*pow(rho_b[index],1.0/3.0)*t27781*t27785*t27777*(4.0/ \
                   3.0);
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26973 = 1/pow(rho_a[index],8.0/3.0);
                double t26974 = gamma_aa[index]*gamma_aa[index];
                double t26975 = gx*gx;
                double t26976 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t26977 = 1/pow(rho_a[index],1.6E1/3.0);
                double t26978 = pow(rho_a[index],5.0/3.0);
                double t26979 = 1/tau_a[index];
                double t26980 = C_k*t26978*t26979;
                double t26981 = t26980+1.0;
                double t26982 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t26983 = t26980-1.0;
                double t26984 = t26983*t26983;
                double t26985 = t26984*t26984;
                double t26986 = C_k*C_k;
                double t26987 = pow(rho_a[index],1.0E1/3.0);
                double t26988 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t26989 = 1/(t26981*t26981*t26981);
                double t26990 = 1/(t26981*t26981*t26981*t26981);
                double t26991 = 1/(t26981*t26981*t26981*t26981*t26981);
                double t26992 = 1/(t26981*t26981*t26981*t26981*t26981*t26981);
                double t26993 = 1/(t26981*t26981);
                v_tau_a_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t26974*t26975*t26977)/ \
                   (gamma_aa[index]*gx*t26973*2.0+t26974*t26975*t26977+1.0)+(cxnl1*gamma_aa[index]*gx*t26973)/(gamma_aa[index]* \
                   gx*t26973+1.0)+(cxnl3*gamma_aa[index]*gx*t26974*t26975*t26976)/(gamma_aa[index]*gx*t26973*3.0+t26974* \
                   t26975*t26977*3.0+gamma_aa[index]*gx*t26974*t26975*t26976+1.0))*(t26993*t26986*t26987*t26988*2.0-(C_k* \
                   t26982*t26978*2.0)/t26981-C_k*t26982*t26991*t26985*t26978*1.0E1+C_k*t26982*t26983*t26993*t26978*2.0+ \
                   C_k*t26982*t26984*t26978*t26989*1.2E1-t26990*t26984*t26986*t26987*t26988*3.6E1+t26992*t26985*t26986* \
                   t26987*t26988*5.0E1+t26983*t26986*t26987*t26988*t26989*1.0E1+t26991*t26983*t26984*t26986*t26987*t26988* \
                   4.0-1/(t26981*t26981*t26981*t26981*t26981*t26981*t26981)*t26983*t26985*t26986*t26987*t26988*3.0E1- \
                   C_k*t26990*t26982*t26983*t26984*t26978*1.2E1+C_k*t26982*t26983*t26992*t26985*t26978*1.0E1);
            } else if (rho_a[index] > cutoff_) {
                double t28558 = 1/pow(rho_a[index],8.0/3.0);
                double t28559 = gamma_aa[index]*gamma_aa[index];
                double t28560 = gx*gx;
                double t28561 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t28562 = 1/pow(rho_a[index],1.6E1/3.0);
                double t28563 = pow(rho_a[index],5.0/3.0);
                double t28564 = 1/tau_a[index];
                double t28565 = C_k*t28563*t28564;
                double t28566 = t28565+1.0;
                double t28567 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t28568 = t28565-1.0;
                double t28569 = t28568*t28568;
                double t28570 = t28569*t28569;
                double t28571 = C_k*C_k;
                double t28572 = pow(rho_a[index],1.0E1/3.0);
                double t28573 = 1/(tau_a[index]*tau_a[index]*tau_a[index]*tau_a[index]);
                double t28574 = 1/(t28566*t28566*t28566);
                double t28575 = 1/(t28566*t28566*t28566*t28566);
                double t28576 = 1/(t28566*t28566*t28566*t28566*t28566);
                double t28577 = 1/(t28566*t28566*t28566*t28566*t28566*t28566);
                double t28578 = 1/(t28566*t28566);
                v_tau_a_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t28560*t28562*t28559)/ \
                   (gamma_aa[index]*gx*t28558*2.0+t28560*t28562*t28559+1.0)+(cxnl1*gamma_aa[index]*gx*t28558)/(gamma_aa[index]* \
                   gx*t28558+1.0)+(cxnl3*gamma_aa[index]*gx*t28560*t28561*t28559)/(gamma_aa[index]*gx*t28558*3.0+t28560* \
                   t28562*t28559*3.0+gamma_aa[index]*gx*t28560*t28561*t28559+1.0))*(t28571*t28572*t28573*t28578*2.0-(C_k* \
                   t28563*t28567*2.0)/t28566-C_k*t28570*t28563*t28567*t28576*1.0E1+C_k*t28563*t28574*t28567*t28569*1.2E1+ \
                   C_k*t28563*t28567*t28568*t28578*2.0+t28570*t28571*t28572*t28573*t28577*5.0E1+t28571*t28572*t28573* \
                   t28574*t28568*1.0E1-t28571*t28572*t28573*t28575*t28569*3.6E1+t28571*t28572*t28573*t28576*t28568*t28569* \
                   4.0-t28570*t28571*t28572*t28573*1/(t28566*t28566*t28566*t28566*t28566*t28566*t28566)*t28568*3.0E1+ \
                   C_k*t28570*t28563*t28567*t28568*t28577*1.0E1-C_k*t28563*t28575*t28567*t28568*t28569*1.2E1);
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t26996 = 1/pow(rho_b[index],8.0/3.0);
                double t26997 = gamma_bb[index]*gamma_bb[index];
                double t26998 = gx*gx;
                double t26999 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t27000 = 1/pow(rho_b[index],1.6E1/3.0);
                double t27001 = pow(rho_b[index],5.0/3.0);
                double t27002 = 1/tau_b[index];
                double t27003 = C_k*t27001*t27002;
                double t27004 = t27003+1.0;
                double t27005 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t27006 = t27003-1.0;
                double t27007 = t27006*t27006;
                double t27008 = t27007*t27007;
                double t27009 = C_k*C_k;
                double t27010 = pow(rho_b[index],1.0E1/3.0);
                double t27011 = 1/(tau_b[index]*tau_b[index]*tau_b[index]*tau_b[index]);
                double t27012 = 1/(t27004*t27004*t27004);
                double t27013 = 1/(t27004*t27004*t27004*t27004);
                double t27014 = 1/(t27004*t27004*t27004*t27004*t27004);
                double t27015 = 1/(t27004*t27004*t27004*t27004*t27004*t27004);
                double t27016 = 1/(t27004*t27004);
                v_tau_b_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t26997*t26998*t27000)/ \
                   (gamma_bb[index]*gx*t26996*2.0+t26997*t26998*t27000+1.0)+(cxnl1*gamma_bb[index]*gx*t26996)/(gamma_bb[index]* \
                   gx*t26996+1.0)+(cxnl3*gamma_bb[index]*gx*t26997*t26998*t26999)/(gamma_bb[index]*gx*t26996*3.0+t26997* \
                   t26998*t27000*3.0+gamma_bb[index]*gx*t26997*t26998*t26999+1.0))*(t27010*t27011*t27016*t27009*2.0-(C_k* \
                   t27001*t27005*2.0)/t27004+C_k*t27001*t27012*t27005*t27007*1.2E1-C_k*t27001*t27005*t27014*t27008*1.0E1+ \
                   C_k*t27001*t27005*t27006*t27016*2.0+t27010*t27011*t27012*t27006*t27009*1.0E1-t27010*t27011*t27013* \
                   t27007*t27009*3.6E1+t27010*t27011*t27015*t27008*t27009*5.0E1+t27010*t27011*t27014*t27006*t27007*t27009* \
                   4.0-t27010*t27011*1/(t27004*t27004*t27004*t27004*t27004*t27004*t27004)*t27006*t27008*t27009*3.0E1- \
                   C_k*t27001*t27013*t27005*t27006*t27007*1.2E1+C_k*t27001*t27005*t27006*t27015*t27008*1.0E1);
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t27789 = 1/pow(rho_b[index],8.0/3.0);
                double t27790 = gamma_bb[index]*gamma_bb[index];
                double t27791 = gx*gx;
                double t27792 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t27793 = 1/pow(rho_b[index],1.6E1/3.0);
                double t27794 = pow(rho_b[index],5.0/3.0);
                double t27795 = 1/tau_b[index];
                double t27796 = C_k*t27794*t27795;
                double t27797 = t27796+1.0;
                double t27798 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t27799 = t27796-1.0;
                double t27800 = t27799*t27799;
                double t27801 = t27800*t27800;
                double t27802 = C_k*C_k;
                double t27803 = pow(rho_b[index],1.0E1/3.0);
                double t27804 = 1/(tau_b[index]*tau_b[index]*tau_b[index]*tau_b[index]);
                double t27805 = 1/(t27797*t27797*t27797);
                double t27806 = 1/(t27797*t27797*t27797*t27797);
                double t27807 = 1/(t27797*t27797*t27797*t27797*t27797);
                double t27808 = 1/(t27797*t27797*t27797*t27797*t27797*t27797);
                double t27809 = 1/(t27797*t27797);
                v_tau_b_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t27790*t27791*t27793)/ \
                   (gamma_bb[index]*gx*t27789*2.0+t27790*t27791*t27793+1.0)+(cxnl1*gamma_bb[index]*gx*t27789)/(gamma_bb[index]* \
                   gx*t27789+1.0)+(cxnl3*gamma_bb[index]*gx*t27790*t27791*t27792)/(gamma_bb[index]*gx*t27789*3.0+t27790* \
                   t27791*t27793*3.0+gamma_bb[index]*gx*t27790*t27791*t27792+1.0))*(t27802*t27803*t27804*t27809*2.0-(C_k* \
                   t27794*t27798*2.0)/t27797+C_k*t27800*t27805*t27794*t27798*1.2E1-C_k*t27801*t27807*t27794*t27798*1.0E1+ \
                   C_k*t27809*t27794*t27798*t27799*2.0-t27800*t27802*t27803*t27804*t27806*3.6E1+t27801*t27802*t27803* \
                   t27804*t27808*5.0E1+t27802*t27803*t27804*t27805*t27799*1.0E1+t27800*t27802*t27803*t27804*t27807*t27799* \
                   4.0-t27801*t27802*t27803*t27804*1/(t27797*t27797*t27797*t27797*t27797*t27797*t27797)*t27799*3.0E1- \
                   C_k*t27800*t27806*t27794*t27798*t27799*1.2E1+C_k*t27801*t27808*t27794*t27798*t27799*1.0E1);
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t27018 = pow(rho_a[index],5.0/3.0);
                    double t27019 = 1/(tau_a[index]*tau_a[index]);
                    double t27020 = 1/tau_a[index];
                    double t27021 = C_k*t27020*t27018;
                    double t27022 = t27021-1.0;
                    double t27023 = t27021+1.0;
                    double t27024 = t27022*t27022;
                    double t27025 = t27024*t27024;
                    double t27026 = 1/pow(rho_a[index],8.0/3.0);
                    double t27027 = gx*gx;
                    double t27028 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t27029 = gamma_aa[index]*gamma_aa[index];
                    double t27030 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t27031 = gamma_aa[index]*gx*t27026;
                    double t27032 = t27031+1.0;
                    double t27033 = gamma_aa[index]*gx*t27026*3.0;
                    double t27034 = gamma_aa[index]*gx*t27030*t27027*t27029;
                    double t27035 = t27027*t27028*t27029*3.0;
                    double t27036 = t27033+t27034+t27035+1.0;
                    double t27037 = gamma_aa[index]*gx*t27026*2.0;
                    double t27038 = t27027*t27028*t27029;
                    double t27039 = t27037+t27038+1.0;
                    v_gamma_aa_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t27026)/t27032-cxnl1*gamma_aa[index]* \
                       1/(t27032*t27032)*t27027*t27028+(cxnl2*gamma_aa[index]*t27027*t27028*2.0)/t27039-cxnl2*t27027*t27028* \
                       t27029*1/(t27039*t27039)*(gx*t27026*2.0+gamma_aa[index]*t27027*t27028*2.0)+(cxnl3*gx*t27030*t27027* \
                       t27029*3.0)/t27036-cxnl3*gamma_aa[index]*gx*t27030*t27027*1/(t27036*t27036)*t27029*(gx*t27026*3.0+ \
                       gamma_aa[index]*t27027*t27028*6.0+gx*t27030*t27027*t27029*3.0))*((C_k*t27018*t27019)/t27023-C_k*t27022* \
                       1/(t27023*t27023)*t27018*t27019-C_k*1/(t27023*t27023*t27023)*t27024*t27018*t27019*6.0+C_k*1/(t27023* \
                       t27023*t27023*t27023*t27023)*t27025*t27018*t27019*5.0+C_k*t27022*1/(t27023*t27023*t27023*t27023)*t27024* \
                       t27018*t27019*6.0-C_k*t27022*1/(t27023*t27023*t27023*t27023*t27023*t27023)*t27025*t27018*t27019*5.0) \
                       ;
                } else if (rho_a[index] > cutoff_) {
                    double t28582 = pow(rho_a[index],5.0/3.0);
                    double t28583 = 1/(tau_a[index]*tau_a[index]);
                    double t28584 = 1/tau_a[index];
                    double t28585 = C_k*t28582*t28584;
                    double t28586 = t28585-1.0;
                    double t28587 = t28585+1.0;
                    double t28588 = t28586*t28586;
                    double t28589 = t28588*t28588;
                    double t28590 = 1/pow(rho_a[index],8.0/3.0);
                    double t28591 = gx*gx;
                    double t28592 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t28593 = gamma_aa[index]*gamma_aa[index];
                    double t28594 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t28595 = gamma_aa[index]*gx*t28590;
                    double t28596 = t28595+1.0;
                    double t28597 = gamma_aa[index]*gx*t28590*3.0;
                    double t28598 = gamma_aa[index]*gx*t28591*t28593*t28594;
                    double t28599 = t28591*t28592*t28593*3.0;
                    double t28600 = t28597+t28598+t28599+1.0;
                    double t28601 = gamma_aa[index]*gx*t28590*2.0;
                    double t28602 = t28591*t28592*t28593;
                    double t28603 = t28601+t28602+1.0;
                    v_gamma_aa_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t28590)/t28596+(cxnl2* \
                       gamma_aa[index]*t28591*t28592*2.0)/t28603-cxnl1*gamma_aa[index]*t28591*t28592*1/(t28596*t28596)-cxnl2* \
                       1/(t28603*t28603)*t28591*t28592*t28593*(gx*t28590*2.0+gamma_aa[index]*t28591*t28592*2.0)+(cxnl3*gx* \
                       t28591*t28593*t28594*3.0)/t28600-cxnl3*gamma_aa[index]*gx*1/(t28600*t28600)*t28591*t28593*t28594*(gx* \
                       t28590*3.0+gamma_aa[index]*t28591*t28592*6.0+gx*t28591*t28593*t28594*3.0))*((C_k*t28582*t28583)/t28587- \
                       C_k*t28582*t28583*t28586*1/(t28587*t28587)-C_k*t28582*t28583*1/(t28587*t28587*t28587)*t28588*6.0+C_k* \
                       t28582*t28583*1/(t28587*t28587*t28587*t28587*t28587)*t28589*5.0+C_k*t28582*t28583*t28586*1/(t28587* \
                       t28587*t28587*t28587)*t28588*6.0-C_k*t28582*t28583*t28586*1/(t28587*t28587*t28587*t28587*t28587*t28587) \
                       *t28589*5.0);
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t27045 = pow(rho_b[index],5.0/3.0);
                    double t27046 = 1/(tau_b[index]*tau_b[index]);
                    double t27047 = 1/tau_b[index];
                    double t27048 = C_k*t27045*t27047;
                    double t27049 = t27048-1.0;
                    double t27050 = t27048+1.0;
                    double t27051 = t27049*t27049;
                    double t27052 = t27051*t27051;
                    double t27053 = 1/pow(rho_b[index],8.0/3.0);
                    double t27054 = gx*gx;
                    double t27055 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t27056 = gamma_bb[index]*gamma_bb[index];
                    double t27057 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t27058 = gamma_bb[index]*gx*t27053;
                    double t27059 = t27058+1.0;
                    double t27060 = gamma_bb[index]*gx*t27053*3.0;
                    double t27061 = gamma_bb[index]*gx*t27054*t27056*t27057;
                    double t27062 = t27054*t27055*t27056*3.0;
                    double t27063 = t27060+t27061+t27062+1.0;
                    double t27064 = gamma_bb[index]*gx*t27053*2.0;
                    double t27065 = t27054*t27055*t27056;
                    double t27066 = t27064+t27065+1.0;
                    v_gamma_bb_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t27053)/t27059+(cxnl2* \
                       gamma_bb[index]*t27054*t27055*2.0)/t27066-cxnl1*gamma_bb[index]*t27054*t27055*1/(t27059*t27059)-cxnl2* \
                       t27054*t27055*t27056*1/(t27066*t27066)*(gx*t27053*2.0+gamma_bb[index]*t27054*t27055*2.0)+(cxnl3*gx* \
                       t27054*t27056*t27057*3.0)/t27063-cxnl3*gamma_bb[index]*gx*t27054*1/(t27063*t27063)*t27056*t27057*(gx* \
                       t27053*3.0+gamma_bb[index]*t27054*t27055*6.0+gx*t27054*t27056*t27057*3.0))*((C_k*t27045*t27046)/t27050- \
                       C_k*1/(t27050*t27050*t27050)*t27051*t27045*t27046*6.0+C_k*1/(t27050*t27050*t27050*t27050*t27050)*t27052* \
                       t27045*t27046*5.0-C_k*1/(t27050*t27050)*t27045*t27046*t27049+C_k*1/(t27050*t27050*t27050*t27050)*t27051* \
                       t27045*t27046*t27049*6.0-C_k*1/(t27050*t27050*t27050*t27050*t27050*t27050)*t27052*t27045*t27046*t27049* \
                       5.0);
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    double t27816 = pow(rho_b[index],5.0/3.0);
                    double t27817 = 1/(tau_b[index]*tau_b[index]);
                    double t27818 = 1/tau_b[index];
                    double t27819 = C_k*t27816*t27818;
                    double t27820 = t27819-1.0;
                    double t27821 = t27819+1.0;
                    double t27822 = t27820*t27820;
                    double t27823 = t27822*t27822;
                    double t27824 = 1/pow(rho_b[index],8.0/3.0);
                    double t27825 = gx*gx;
                    double t27826 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t27827 = gamma_bb[index]*gamma_bb[index];
                    double t27828 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t27829 = gamma_bb[index]*gx*t27824;
                    double t27830 = t27829+1.0;
                    double t27831 = gamma_bb[index]*gx*t27824*3.0;
                    double t27832 = gamma_bb[index]*gx*t27825*t27827*t27828;
                    double t27833 = t27825*t27826*t27827*3.0;
                    double t27834 = t27831+t27832+t27833+1.0;
                    double t27835 = gamma_bb[index]*gx*t27824*2.0;
                    double t27836 = t27825*t27826*t27827;
                    double t27837 = t27835+t27836+1.0;
                    v_gamma_bb_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t27824)/t27830-cxnl1*gamma_bb[index]* \
                       1/(t27830*t27830)*t27825*t27826+(cxnl2*gamma_bb[index]*t27825*t27826*2.0)/t27837-cxnl2*t27825*t27826* \
                       t27827*1/(t27837*t27837)*(gx*t27824*2.0+gamma_bb[index]*t27825*t27826*2.0)+(cxnl3*gx*t27825*t27827* \
                       t27828*3.0)/t27834-cxnl3*gamma_bb[index]*gx*t27825*1/(t27834*t27834)*t27827*t27828*(gx*t27824*3.0+ \
                       gamma_bb[index]*t27825*t27826*6.0+gx*t27825*t27827*t27828*3.0))*((C_k*t27816*t27817)/t27821-C_k*t27820* \
                       1/(t27821*t27821)*t27816*t27817-C_k*1/(t27821*t27821*t27821)*t27822*t27816*t27817*6.0+C_k*1/(t27821* \
                       t27821*t27821*t27821*t27821)*t27823*t27816*t27817*5.0+C_k*t27820*1/(t27821*t27821*t27821*t27821)*t27822* \
                       t27816*t27817*6.0-C_k*t27820*1/(t27821*t27821*t27821*t27821*t27821*t27821)*t27823*t27816*t27817*5.0) \
                       ;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

