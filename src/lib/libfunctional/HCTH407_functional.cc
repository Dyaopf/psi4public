/**********************************************************
* HCTH407_functional.cc: definitions for HCTH407_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 06-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "HCTH407_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

HCTH407_Functional::HCTH407_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "HCTH407";
    description_ = "HCTH 407 Power Series GGA";
    citation_ = "A.D. Boese and N.C. Handy, J. Chem. Phys., 114(13), 5497-5503";

    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 5.8907600000000004E-01;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 4.4237399999999996E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.9221800000000002E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 4.2572099999999999E+01;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = -4.2005200000000002E+01;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.1877700000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -2.4029199999999999E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = 5.6174099999999996E+00;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -9.1792300000000004E+00;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 6.2479800000000001E+00;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 1.0818399999999999E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = -5.1833899999999999E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 3.4256199999999999E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = -2.6290100000000001E+00;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = 2.2885499999999999E+00;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
HCTH407_Functional::~HCTH407_Functional()
{
}
void HCTH407_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t56288 = 1.0/pow(rho_a[index],1.0/3.0);
            double t56289 = c*t56288;
            double t56290 = sqrt(t56289);
            double t56291 = pow(t56289,3.0/2.0);
            double t56292 = c*c;
            double t56293 = 1.0/pow(rho_a[index],2.0/3.0);
            double t56294 = 1.0/c0p;
            double t56295 = b1p*t56290;
            double t56296 = b3p*t56291;
            double t56297 = b4p*t56292*t56293;
            double t56298 = b2p*c*t56288;
            double t56299 = t56295+t56296+t56297+t56298;
            double t56300 = 1.0/t56299;
            double t56301 = t56300*t56294*(1.0/2.0);
            double t56302 = t56301+1.0;
            double t56303 = log(t56302);
            double t56304 = a1p*c*t56288;
            double t56305 = t56304+1.0;
            double t56306 = rho_a[index]*2.0;
            double t56307 = 1.0/pow(t56306,1.0/3.0);
            double t56308 = c*t56307;
            double t56309 = gamma_aa[index]*gamma_aa[index];
            double t56310 = gcab*gcab;
            double t56311 = t56309*t56309;
            double t56312 = t56310*t56310;
            double t56313 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t56314 = 1.0/pow(rho_a[index],8.0/3.0);
            double t56315 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t56316 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t56317 = pow(2.0,1.0/3.0);
            double t56318 = t56317*2.0;
            double t56319 = t56318-2.0;
            double t56320 = two_13*2.0;
            double t56321 = t56320-2.0;
            double t56322 = 1.0/t56321;
            double t56323 = 1.0/c0f;
            double t56324 = b1f*t56290;
            double t56325 = b3f*t56291;
            double t56326 = b4f*t56292*t56293;
            double t56327 = b2f*c*t56288;
            double t56328 = t56324+t56325+t56326+t56327;
            double t56329 = 1.0/t56328;
            double t56330 = t56323*t56329*(1.0/2.0);
            double t56331 = t56330+1.0;
            double t56332 = log(t56331);
            double t56333 = a1f*c*t56288;
            double t56334 = t56333+1.0;
            double t56335 = c0f*t56332*t56334*2.0;
            double t56336 = c0p*t56303*t56305*2.0;
            double t56337 = gcaa*gcaa;
            double t56338 = t56337*t56337;
            double t56339 = gx*gx;
            double t56340 = t56339*t56339;
            functional_[index] = (rho_a[index]*(t56336+t56322*t56319*(t56335-c0p*t56303*t56305*2.0))*2.0-c0p* \
               rho_a[index]*log((t56294*(1.0/2.0))/(b1p*sqrt(t56308)+b3p*pow(t56308,3.0/2.0)+b4p*1.0/pow(t56306,2.0/ \
               3.0)*t56292+b2p*c*t56307)+1.0)*(a1p*c*t56307+1.0)*4.0)*(ccab0+(ccab2*t56310*t56316*t56309)/(gamma_aa[index]* \
               gcab*t56314*2.0+t56310*t56316*t56309+1.0)+(ccab1*gamma_aa[index]*gcab*t56314)/(gamma_aa[index]*gcab* \
               t56314+1.0)+(ccab4*t56311*t56312*t56313)/(gamma_aa[index]*gcab*t56314*4.0+t56311*t56312*t56313+t56310* \
               t56316*t56309*6.0+gamma_aa[index]*gcab*t56310*t56315*t56309*4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t56310* \
               t56315*t56309)/(gamma_aa[index]*gcab*t56314*3.0+t56310*t56316*t56309*3.0+gamma_aa[index]*gcab*t56310* \
               t56315*t56309+1.0))-rho_a[index]*(t56336+t56322*t56319*(t56335-t56336))*(ccaa0+(ccaa2*t56316*t56309* \
               t56337)/(gamma_aa[index]*gcaa*t56314*2.0+t56316*t56309*t56337+1.0)+(ccaa1*gamma_aa[index]*gcaa*t56314) \
               /(gamma_aa[index]*gcaa*t56314+1.0)+(ccaa4*t56311*t56313*t56338)/(gamma_aa[index]*gcaa*t56314*4.0+t56311* \
               t56313*t56338+t56316*t56309*t56337*6.0+gamma_aa[index]*gcaa*t56315*t56309*t56337*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t56315*t56309*t56337)/(gamma_aa[index]*gcaa*t56314*3.0+t56316*t56309*t56337*3.0+gamma_aa[index]* \
               gcaa*t56315*t56309*t56337+1.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t56316*t56309*t56339)/(gamma_aa[index]* \
               gx*t56314*2.0+t56316*t56309*t56339+1.0)+(cx1*gamma_aa[index]*gx*t56314)/(gamma_aa[index]*gx*t56314+ \
               1.0)+(cx4*t56311*t56313*t56340)/(gamma_aa[index]*gx*t56314*4.0+t56311*t56313*t56340+t56316*t56309* \
               t56339*6.0+gamma_aa[index]*gx*t56315*t56309*t56339*4.0+1.0)+(cx3*gamma_aa[index]*gx*t56315*t56309* \
               t56339)/(gamma_aa[index]*gx*t56314*3.0+t56316*t56309*t56339*3.0+gamma_aa[index]*gx*t56315*t56309*t56339+ \
               1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t56342 = gamma_aa[index]*gamma_aa[index];
            double t56343 = gcab*gcab;
            double t56344 = t56342*t56342;
            double t56345 = t56343*t56343;
            double t56346 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t56347 = 1.0/pow(rho_a[index],8.0/3.0);
            double t56348 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t56349 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t56350 = rho_a[index]*2.0;
            double t56351 = 1.0/pow(t56350,1.0/3.0);
            double t56352 = c*t56351;
            double t56353 = sqrt(t56352);
            double t56354 = b1p*t56353;
            double t56355 = pow(t56352,3.0/2.0);
            double t56356 = b3p*t56355;
            double t56357 = b2p*c*t56351;
            double t56358 = c*c;
            double t56359 = 1.0/pow(t56350,2.0/3.0);
            double t56360 = b4p*t56358*t56359;
            double t56361 = t56360+t56354+t56356+t56357;
            double t56362 = 1.0/pow(t56350,4.0/3.0);
            double t56363 = 1.0/c0p;
            double t56364 = 1.0/t56361;
            double t56365 = t56363*t56364*(1.0/2.0);
            double t56366 = t56365+1.0;
            double t56367 = 1.0/pow(rho_a[index],1.0/3.0);
            double t56368 = c*t56367;
            double t56369 = sqrt(t56368);
            double t56370 = b1f*t56369;
            double t56371 = pow(t56368,3.0/2.0);
            double t56372 = b3f*t56371;
            double t56373 = 1.0/pow(rho_a[index],2.0/3.0);
            double t56374 = b4f*t56373*t56358;
            double t56375 = b2f*c*t56367;
            double t56376 = t56370+t56372+t56374+t56375;
            double t56377 = 1.0/pow(rho_a[index],4.0/3.0);
            double t56378 = b1p*t56369;
            double t56379 = b3p*t56371;
            double t56380 = b4p*t56373*t56358;
            double t56381 = b2p*c*t56367;
            double t56382 = t56380+t56381+t56378+t56379;
            double t56383 = 1.0/pow(rho_a[index],5.0/3.0);
            double t56384 = 1.0/sqrt(t56368);
            double t56385 = 1.0/c0f;
            double t56386 = 1.0/t56376;
            double t56387 = t56385*t56386*(1.0/2.0);
            double t56388 = t56387+1.0;
            double t56389 = 1.0/t56382;
            double t56390 = t56363*t56389*(1.0/2.0);
            double t56391 = t56390+1.0;
            double t56392 = a1p*c*t56367;
            double t56393 = t56392+1.0;
            double t56394 = 1.0/t56391;
            double t56395 = 1.0/(t56382*t56382);
            double t56396 = b4p*t56383*t56358*(2.0/3.0);
            double t56397 = b2p*c*t56377*(1.0/3.0);
            double t56398 = b1p*c*t56384*t56377*(1.0/6.0);
            double t56399 = b3p*c*t56377*t56369*(1.0/2.0);
            double t56400 = t56396+t56397+t56398+t56399;
            double t56401 = t56400*t56393*t56394*t56395;
            double t56402 = log(t56391);
            double t56403 = log(t56366);
            double t56404 = a1p*c*t56351;
            double t56405 = t56404+1.0;
            double t56406 = pow(2.0,1.0/3.0);
            double t56407 = t56406*2.0;
            double t56408 = t56407-2.0;
            double t56409 = two_13*2.0;
            double t56410 = t56409-2.0;
            double t56411 = 1.0/t56410;
            double t56412 = log(t56388);
            double t56413 = a1f*c*t56367;
            double t56414 = t56413+1.0;
            double t56415 = c0f*t56412*t56414*2.0;
            double t56417 = c0p*t56402*t56393*2.0;
            double t56416 = t56415-t56417;
            double t56418 = gcaa*gcaa;
            double t56419 = t56418*t56418;
            double t56420 = t56411*t56416*t56408;
            double t56421 = t56420+t56417;
            double t56422 = gamma_aa[index]*gcab*t56347*4.0;
            double t56423 = gamma_aa[index]*gcab*t56342*t56343*t56348*4.0;
            double t56424 = t56342*t56343*t56349*6.0;
            double t56425 = t56344*t56345*t56346;
            double t56426 = t56422+t56423+t56424+t56425+1.0;
            double t56427 = 1.0/t56426;
            double t56428 = gamma_aa[index]*gcab*t56347;
            double t56429 = t56428+1.0;
            double t56430 = 1.0/t56429;
            double t56431 = gamma_aa[index]*gcab*t56347*3.0;
            double t56432 = gamma_aa[index]*gcab*t56342*t56343*t56348;
            double t56433 = t56342*t56343*t56349*3.0;
            double t56434 = t56431+t56432+t56433+1.0;
            double t56435 = 1.0/t56434;
            double t56436 = gamma_aa[index]*gcab*t56347*2.0;
            double t56437 = t56342*t56343*t56349;
            double t56438 = t56436+t56437+1.0;
            double t56439 = 1.0/t56438;
            double t56440 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t56441 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t56442 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t56443 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t56444 = gamma_aa[index]*gcaa*t56347*4.0;
            double t56445 = gamma_aa[index]*gcaa*t56342*t56418*t56348*4.0;
            double t56446 = t56342*t56418*t56349*6.0;
            double t56447 = t56344*t56346*t56419;
            double t56448 = t56444+t56445+t56446+t56447+1.0;
            double t56449 = 1.0/t56448;
            double t56450 = gamma_aa[index]*gcaa*t56347;
            double t56451 = t56450+1.0;
            double t56452 = 1.0/t56451;
            double t56453 = gamma_aa[index]*gcaa*t56347*3.0;
            double t56454 = gamma_aa[index]*gcaa*t56342*t56418*t56348;
            double t56455 = t56342*t56418*t56349*3.0;
            double t56456 = t56453+t56454+t56455+1.0;
            double t56457 = 1.0/t56456;
            double t56458 = gamma_aa[index]*gcaa*t56347*2.0;
            double t56459 = t56342*t56418*t56349;
            double t56460 = t56458+t56459+1.0;
            double t56461 = 1.0/t56460;
            double t56462 = gx*gx;
            double t56463 = t56462*t56462;
            double t56464 = gamma_aa[index]*gx*t56347*4.0;
            double t56465 = gamma_aa[index]*gx*t56342*t56462*t56348*4.0;
            double t56466 = t56342*t56462*t56349*6.0;
            double t56467 = t56344*t56346*t56463;
            double t56468 = t56464+t56465+t56466+t56467+1.0;
            double t56469 = 1.0/t56468;
            double t56470 = gamma_aa[index]*gx*t56347;
            double t56471 = t56470+1.0;
            double t56472 = 1.0/t56471;
            double t56473 = gamma_aa[index]*gx*t56347*3.0;
            double t56474 = gamma_aa[index]*gx*t56342*t56462*t56348;
            double t56475 = t56342*t56462*t56349*3.0;
            double t56476 = t56473+t56474+t56475+1.0;
            double t56477 = 1.0/t56476;
            double t56478 = gamma_aa[index]*gx*t56347*2.0;
            double t56479 = t56342*t56462*t56349;
            double t56480 = t56478+t56479+1.0;
            double t56481 = 1.0/t56480;
            double t56482 = 1.0/t56388;
            double t56483 = 1.0/(t56376*t56376);
            double t56484 = b4f*t56383*t56358*(2.0/3.0);
            double t56485 = b2f*c*t56377*(1.0/3.0);
            double t56486 = b1f*c*t56384*t56377*(1.0/6.0);
            double t56487 = b3f*c*t56377*t56369*(1.0/2.0);
            double t56488 = t56484+t56485+t56486+t56487;
            double t56489 = a1f*c*c0f*t56412*t56377*(2.0/3.0);
            double t56490 = a1p*c*c0p*t56402*t56377*(2.0/3.0);
            double t56491 = ccaa4*t56344*t56346*t56419*t56449;
            double t56492 = ccaa1*gamma_aa[index]*gcaa*t56452*t56347;
            double t56493 = ccaa3*gamma_aa[index]*gcaa*t56342*t56418*t56348*t56457;
            double t56494 = ccaa2*t56342*t56461*t56418*t56349;
            double t56495 = ccaa0+t56491+t56492+t56493+t56494;
            v_rho_a_[index] = -(rho_a[index]*t56421*2.0-c0p*rho_a[index]*t56403*t56405*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t56430*t56441*(4.0/3.0)+ccab2*t56440*t56342*t56343*t56439*(8.0/3.0)+ccab4*t56344*t56443*t56345* \
               t56427*(1.6E1/3.0)-ccab1*t56440*t56342*t56343*1.0/(t56429*t56429)*(4.0/3.0)-ccab2*t56342*t56343*1.0/ \
               (t56438*t56438)*t56349*(gamma_aa[index]*gcab*t56441*(8.0/3.0)+t56440*t56342*t56343*(8.0/3.0))-ccab4* \
               t56344*t56345*1.0/(t56426*t56426)*t56346*(gamma_aa[index]*gcab*t56441*(1.6E1/3.0)+t56440*t56342*t56343* \
               1.6E1+t56344*t56443*t56345*(1.6E1/3.0)+gamma_aa[index]*gcab*t56342*t56343*t56442*1.6E1)+ccab3*gamma_aa[index]* \
               gcab*t56342*t56343*t56442*t56435*4.0-ccab3*gamma_aa[index]*gcab*t56342*t56343*1.0/(t56434*t56434)* \
               t56348*(gamma_aa[index]*gcab*t56441*4.0+t56440*t56342*t56343*8.0+gamma_aa[index]*gcab*t56342*t56343* \
               t56442*4.0))-t56421*t56495-(rho_a[index]*((t56405*1.0/(t56361*t56361)*(b4p*1.0/pow(t56350,5.0/3.0) \
               *t56358*(2.0/3.0)+b2p*c*t56362*(1.0/3.0)+b3p*c*t56353*t56362*(1.0/2.0)+b1p*c*1.0/sqrt(t56352)*t56362* \
               (1.0/6.0)))/t56366-a1p*c*c0p*t56403*t56362*(2.0/3.0))*2.0+rho_a[index]*(-t56401+t56490+t56411*t56408* \
               (t56401+t56489-t56414*t56482*t56483*t56488-a1p*c*c0p*t56402*t56377*(2.0/3.0)))+c0p*t56403*t56405*2.0- \
               c0p*t56402*t56393*2.0-t56411*t56416*t56408)*(ccab0+ccab1*gamma_aa[index]*gcab*t56430*t56347+ccab2* \
               t56342*t56343*t56349*t56439+ccab4*t56344*t56345*t56346*t56427+ccab3*gamma_aa[index]*gcab*t56342*t56343* \
               t56435*t56348)+rho_a[index]*t56421*(ccaa1*gamma_aa[index]*gcaa*t56441*t56452*(8.0/3.0)+ccaa2*t56440* \
               t56342*t56461*t56418*(1.6E1/3.0)+ccaa4*t56344*t56443*t56419*t56449*(3.2E1/3.0)-ccaa1*t56440*t56342* \
               1.0/(t56451*t56451)*t56418*(8.0/3.0)-ccaa2*t56342*1.0/(t56460*t56460)*t56418*t56349*(gamma_aa[index]* \
               gcaa*t56441*(1.6E1/3.0)+t56440*t56342*t56418*(1.6E1/3.0))-ccaa4*t56344*t56346*t56419*1.0/(t56448*t56448) \
               *(gamma_aa[index]*gcaa*t56441*(3.2E1/3.0)+t56440*t56342*t56418*3.2E1+t56344*t56443*t56419*(3.2E1/3.0) \
               +gamma_aa[index]*gcaa*t56342*t56442*t56418*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t56342*t56442*t56418* \
               t56457*8.0-ccaa3*gamma_aa[index]*gcaa*t56342*t56418*t56348*1.0/(t56456*t56456)*(gamma_aa[index]*gcaa* \
               t56441*8.0+t56440*t56342*t56418*1.6E1+gamma_aa[index]*gcaa*t56342*t56442*t56418*8.0))+c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+cx1*gamma_aa[index]*gx*t56472*t56347+cx2*t56342*t56462*t56481*t56349+cx4*t56344*t56346*t56463* \
               t56469+cx3*gamma_aa[index]*gx*t56342*t56462*t56348*t56477)*(4.0/3.0)+rho_a[index]*t56495*(-t56401+ \
               t56490+t56411*t56408*(t56401-t56490+t56489-t56414*t56482*t56483*t56488))-c0*pow(rho_a[index],4.0/3.0) \
               *(cx1*gamma_aa[index]*gx*t56441*t56472*(8.0/3.0)+cx2*t56440*t56342*t56462*t56481*(1.6E1/3.0)+cx4*t56344* \
               t56443*t56463*t56469*(3.2E1/3.0)-cx1*t56440*t56342*t56462*1.0/(t56471*t56471)*(8.0/3.0)-cx2*t56342* \
               t56462*1.0/(t56480*t56480)*t56349*(gamma_aa[index]*gx*t56441*(1.6E1/3.0)+t56440*t56342*t56462*(1.6E1/ \
               3.0))-cx4*t56344*t56346*t56463*1.0/(t56468*t56468)*(gamma_aa[index]*gx*t56441*(3.2E1/3.0)+t56440*t56342* \
               t56462*3.2E1+t56344*t56443*t56463*(3.2E1/3.0)+gamma_aa[index]*gx*t56342*t56442*t56462*3.2E1)+cx3*gamma_aa[index]* \
               gx*t56342*t56442*t56462*t56477*8.0-cx3*gamma_aa[index]*gx*t56342*t56462*t56348*1.0/(t56476*t56476) \
               *(gamma_aa[index]*gx*t56441*8.0+t56440*t56342*t56462*1.6E1+gamma_aa[index]*gx*t56342*t56442*t56462* \
               8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t56497 = 1.0/pow(rho_a[index],1.0/3.0);
                double t56498 = c*t56497;
                double t56499 = sqrt(t56498);
                double t56500 = pow(t56498,3.0/2.0);
                double t56501 = c*c;
                double t56502 = 1.0/pow(rho_a[index],2.0/3.0);
                double t56503 = 1.0/c0p;
                double t56504 = b1p*t56499;
                double t56505 = b3p*t56500;
                double t56506 = b4p*t56501*t56502;
                double t56507 = b2p*c*t56497;
                double t56508 = t56504+t56505+t56506+t56507;
                double t56509 = 1.0/t56508;
                double t56510 = t56503*t56509*(1.0/2.0);
                double t56511 = t56510+1.0;
                double t56512 = log(t56511);
                double t56513 = a1p*c*t56497;
                double t56514 = t56513+1.0;
                double t56515 = rho_a[index]*2.0;
                double t56516 = 1.0/pow(t56515,1.0/3.0);
                double t56517 = c*t56516;
                double t56518 = 1.0/pow(rho_a[index],8.0/3.0);
                double t56519 = gamma_aa[index]*gamma_aa[index];
                double t56520 = gcab*gcab;
                double t56521 = t56520*t56520;
                double t56522 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t56523 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t56524 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t56525 = gamma_aa[index]*gcab*t56518;
                double t56526 = t56525+1.0;
                double t56527 = gamma_aa[index]*gcab*t56518*3.0;
                double t56528 = gamma_aa[index]*gcab*t56520*t56524*t56519;
                double t56529 = t56520*t56523*t56519*3.0;
                double t56530 = t56527+t56528+t56529+1.0;
                double t56531 = t56519*t56519;
                double t56532 = gamma_aa[index]*gcab*t56518*4.0;
                double t56533 = gamma_aa[index]*gcab*t56520*t56524*t56519*4.0;
                double t56534 = t56520*t56523*t56519*6.0;
                double t56535 = t56521*t56522*t56531;
                double t56536 = t56532+t56533+t56534+t56535+1.0;
                double t56537 = gamma_aa[index]*gcab*t56518*2.0;
                double t56538 = t56520*t56523*t56519;
                double t56539 = t56537+t56538+1.0;
                double t56540 = gx*gx;
                double t56541 = t56540*t56540;
                double t56542 = gamma_aa[index]*gx*t56518;
                double t56543 = t56542+1.0;
                double t56544 = gamma_aa[index]*gx*t56518*3.0;
                double t56545 = gamma_aa[index]*gx*t56540*t56524*t56519;
                double t56546 = t56540*t56523*t56519*3.0;
                double t56547 = t56544+t56545+t56546+1.0;
                double t56548 = gamma_aa[index]*gx*t56518*4.0;
                double t56549 = gamma_aa[index]*gx*t56540*t56524*t56519*4.0;
                double t56550 = t56540*t56523*t56519*6.0;
                double t56551 = t56522*t56531*t56541;
                double t56552 = t56550+t56551+t56548+t56549+1.0;
                double t56553 = gamma_aa[index]*gx*t56518*2.0;
                double t56554 = t56540*t56523*t56519;
                double t56555 = t56553+t56554+1.0;
                double t56556 = pow(2.0,1.0/3.0);
                double t56557 = t56556*2.0;
                double t56558 = t56557-2.0;
                double t56559 = two_13*2.0;
                double t56560 = t56559-2.0;
                double t56561 = 1.0/t56560;
                double t56562 = 1.0/c0f;
                double t56563 = b1f*t56499;
                double t56564 = b3f*t56500;
                double t56565 = b4f*t56501*t56502;
                double t56566 = b2f*c*t56497;
                double t56567 = t56563+t56564+t56565+t56566;
                double t56568 = 1.0/t56567;
                double t56569 = t56562*t56568*(1.0/2.0);
                double t56570 = t56569+1.0;
                double t56571 = log(t56570);
                double t56572 = a1f*c*t56497;
                double t56573 = t56572+1.0;
                double t56574 = c0f*t56571*t56573*2.0;
                double t56575 = c0p*t56512*t56514*2.0;
                double t56576 = gcaa*gcaa;
                double t56577 = t56576*t56576;
                double t56578 = gamma_aa[index]*gcaa*t56518;
                double t56579 = t56578+1.0;
                double t56580 = gamma_aa[index]*gcaa*t56518*3.0;
                double t56581 = gamma_aa[index]*gcaa*t56524*t56519*t56576;
                double t56582 = t56523*t56519*t56576*3.0;
                double t56583 = t56580+t56581+t56582+1.0;
                double t56584 = gamma_aa[index]*gcaa*t56518*4.0;
                double t56585 = gamma_aa[index]*gcaa*t56524*t56519*t56576*4.0;
                double t56586 = t56523*t56519*t56576*6.0;
                double t56587 = t56522*t56531*t56577;
                double t56588 = t56584+t56585+t56586+t56587+1.0;
                double t56589 = gamma_aa[index]*gcaa*t56518*2.0;
                double t56590 = t56523*t56519*t56576;
                double t56591 = t56590+t56589+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t56575+t56561*t56558*(t56574-c0p*t56512*t56514*2.0))*2.0-c0p* \
                   rho_a[index]*log((t56503*(1.0/2.0))/(b1p*sqrt(t56517)+b3p*pow(t56517,3.0/2.0)+b4p*t56501*1.0/pow(t56515,2.0/ \
                   3.0)+b2p*c*t56516)+1.0)*(a1p*c*t56516+1.0)*4.0)*((ccab1*gcab*t56518*(1.0/2.0))/t56526-ccab1*gamma_aa[index]* \
                   t56520*t56523*1.0/(t56526*t56526)*(1.0/2.0)+(ccab2*gamma_aa[index]*t56520*t56523)/t56539-ccab2*t56520* \
                   t56523*t56519*1.0/(t56539*t56539)*(gcab*t56518+gamma_aa[index]*t56520*t56523)+(ccab4*gamma_aa[index]* \
                   t56521*t56522*t56519*2.0)/t56536+(ccab3*gcab*t56520*t56524*t56519*(3.0/2.0))/t56530-ccab4*t56521*t56522* \
                   t56531*1.0/(t56536*t56536)*(gcab*t56518*2.0+gamma_aa[index]*t56520*t56523*6.0+gamma_aa[index]*t56521* \
                   t56522*t56519*2.0+gcab*t56520*t56524*t56519*6.0)-ccab3*gamma_aa[index]*gcab*t56520*1.0/(t56530*t56530) \
                   *t56524*t56519*(gcab*t56518*(3.0/2.0)+gamma_aa[index]*t56520*t56523*3.0+gcab*t56520*t56524*t56519* \
                   (3.0/2.0)))*2.0-rho_a[index]*(t56575+t56561*t56558*(t56574-t56575))*((ccaa1*gcaa*t56518)/t56579+(ccaa2* \
                   gamma_aa[index]*t56523*t56576*2.0)/t56591-ccaa1*gamma_aa[index]*t56523*t56576*1.0/(t56579*t56579)- \
                   ccaa2*t56523*t56519*1.0/(t56591*t56591)*t56576*(gcaa*t56518*2.0+gamma_aa[index]*t56523*t56576*2.0) \
                   +(ccaa4*gamma_aa[index]*t56522*t56519*t56577*4.0)/t56588+(ccaa3*gcaa*t56524*t56519*t56576*3.0)/t56583- \
                   ccaa4*t56522*t56531*t56577*1.0/(t56588*t56588)*(gcaa*t56518*4.0+gamma_aa[index]*t56523*t56576*1.2E1+ \
                   gamma_aa[index]*t56522*t56519*t56577*4.0+gcaa*t56524*t56519*t56576*1.2E1)-ccaa3*gamma_aa[index]*gcaa* \
                   t56524*t56519*1.0/(t56583*t56583)*t56576*(gcaa*t56518*3.0+gamma_aa[index]*t56523*t56576*6.0+gcaa*t56524* \
                   t56519*t56576*3.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*((cx1*gx*t56518)/t56543-cx1*gamma_aa[index]*t56540* \
                   t56523*1.0/(t56543*t56543)+(cx2*gamma_aa[index]*t56540*t56523*2.0)/t56555-cx2*t56540*t56523*t56519* \
                   1.0/(t56555*t56555)*(gx*t56518*2.0+gamma_aa[index]*t56540*t56523*2.0)+(cx4*gamma_aa[index]*t56522* \
                   t56541*t56519*4.0)/t56552+(cx3*gx*t56540*t56524*t56519*3.0)/t56547-cx4*t56522*t56531*t56541*1.0/(t56552* \
                   t56552)*(gx*t56518*4.0+gamma_aa[index]*t56540*t56523*1.2E1+gamma_aa[index]*t56522*t56541*t56519*4.0+ \
                   gx*t56540*t56524*t56519*1.2E1)-cx3*gamma_aa[index]*gx*t56540*t56524*t56519*1.0/(t56547*t56547)*(gx* \
                   t56518*3.0+gamma_aa[index]*t56540*t56523*6.0+gx*t56540*t56524*t56519*3.0))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t56594 = rho_a[index]*2.0;
            double t56595 = 1.0/pow(t56594,1.0/3.0);
            double t56596 = c*t56595;
            double t56597 = sqrt(t56596);
            double t56598 = b1p*t56597;
            double t56599 = pow(t56596,3.0/2.0);
            double t56600 = b3p*t56599;
            double t56601 = b2p*c*t56595;
            double t56602 = c*c;
            double t56603 = 1.0/pow(t56594,2.0/3.0);
            double t56604 = b4p*t56602*t56603;
            double t56605 = t56600+t56601+t56604+t56598;
            double t56606 = 1.0/pow(t56594,8.0/3.0);
            double t56607 = 1.0/pow(t56594,7.0/3.0);
            double t56608 = 1.0/sqrt(t56596);
            double t56609 = 1.0/c0p;
            double t56610 = 1.0/t56605;
            double t56611 = t56610*t56609*(1.0/2.0);
            double t56612 = t56611+1.0;
            double t56613 = 1.0/t56612;
            double t56614 = a1p*c*t56595;
            double t56615 = t56614+1.0;
            double t56616 = 1.0/pow(t56594,4.0/3.0);
            double t56618 = b2p*c*t56616*(1.0/3.0);
            double t56619 = 1.0/pow(t56594,5.0/3.0);
            double t56620 = b4p*t56602*t56619*(2.0/3.0);
            double t56621 = b1p*c*t56616*t56608*(1.0/6.0);
            double t56622 = b3p*c*t56616*t56597*(1.0/2.0);
            double t56617 = t56620+t56621+t56622+t56618;
            double t56623 = t56617*t56617;
            double t56624 = 1.0/(t56605*t56605);
            double t56625 = log(t56612);
            double t56626 = gamma_aa[index]*gamma_aa[index];
            double t56627 = gcab*gcab;
            double t56628 = t56626*t56626;
            double t56629 = t56627*t56627;
            double t56630 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t56631 = 1.0/pow(rho_a[index],8.0/3.0);
            double t56632 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t56633 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t56634 = two_13*2.0;
            double t56635 = t56634-2.0;
            double t56636 = 1.0/t56635;
            double t56637 = 1.0/pow(rho_a[index],1.0/3.0);
            double t56638 = c*t56637;
            double t56639 = sqrt(t56638);
            double t56640 = pow(t56638,3.0/2.0);
            double t56641 = 1.0/pow(rho_a[index],2.0/3.0);
            double t56642 = b1p*t56639;
            double t56643 = b3p*t56640;
            double t56644 = b4p*t56602*t56641;
            double t56645 = b2p*c*t56637;
            double t56646 = t56642+t56643+t56644+t56645;
            double t56647 = 1.0/t56646;
            double t56648 = t56609*t56647*(1.0/2.0);
            double t56649 = t56648+1.0;
            double t56650 = log(t56649);
            double t56651 = a1p*c*t56637;
            double t56652 = t56651+1.0;
            double t56653 = gamma_aa[index]*gcab*t56631*4.0;
            double t56654 = gamma_aa[index]*gcab*t56632*t56626*t56627*4.0;
            double t56655 = t56633*t56626*t56627*6.0;
            double t56656 = t56630*t56628*t56629;
            double t56657 = t56653+t56654+t56655+t56656+1.0;
            double t56658 = 1.0/t56657;
            double t56659 = gamma_aa[index]*gcab*t56631;
            double t56660 = t56659+1.0;
            double t56661 = 1.0/t56660;
            double t56662 = gamma_aa[index]*gcab*t56631*3.0;
            double t56663 = gamma_aa[index]*gcab*t56632*t56626*t56627;
            double t56664 = t56633*t56626*t56627*3.0;
            double t56665 = t56662+t56663+t56664+1.0;
            double t56666 = 1.0/t56665;
            double t56667 = gamma_aa[index]*gcab*t56631*2.0;
            double t56668 = t56633*t56626*t56627;
            double t56669 = t56667+t56668+1.0;
            double t56670 = 1.0/t56669;
            double t56671 = 1.0/pow(rho_a[index],1.0E1);
            double t56672 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t56674 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t56675 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t56677 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t56684 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t56685 = gamma_aa[index]*gcab*t56674*(1.6E1/3.0);
            double t56686 = gamma_aa[index]*gcab*t56626*t56627*t56677*1.6E1;
            double t56687 = t56626*t56627*t56675*1.6E1;
            double t56688 = t56628*t56629*t56684*(1.6E1/3.0);
            double t56673 = t56685+t56686+t56687+t56688;
            double t56691 = gamma_aa[index]*gcab*t56674*(8.0/3.0);
            double t56692 = t56626*t56627*t56675*(8.0/3.0);
            double t56676 = t56691+t56692;
            double t56678 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t56679 = 1.0/(t56665*t56665);
            double t56680 = gamma_aa[index]*gcab*t56674*4.0;
            double t56681 = gamma_aa[index]*gcab*t56626*t56627*t56677*4.0;
            double t56682 = t56626*t56627*t56675*8.0;
            double t56683 = t56680+t56681+t56682;
            double t56689 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t56690 = 1.0/(t56657*t56657);
            double t56693 = 1.0/(t56669*t56669);
            double t56694 = pow(2.0,1.0/3.0);
            double t56695 = t56694*2.0;
            double t56696 = t56695-2.0;
            double t56697 = a1f*c*t56637;
            double t56698 = t56697+1.0;
            double t56699 = 1.0/c0f;
            double t56700 = b1f*t56639;
            double t56701 = b3f*t56640;
            double t56702 = b4f*t56602*t56641;
            double t56703 = b2f*c*t56637;
            double t56704 = t56700+t56701+t56702+t56703;
            double t56705 = 1.0/t56704;
            double t56706 = t56705*t56699*(1.0/2.0);
            double t56707 = t56706+1.0;
            double t56708 = 1.0/pow(rho_a[index],4.0/3.0);
            double t56709 = 1.0/pow(rho_a[index],5.0/3.0);
            double t56710 = 1.0/sqrt(t56638);
            double t56711 = log(t56707);
            double t56712 = 1.0/t56649;
            double t56713 = 1.0/(t56646*t56646);
            double t56714 = b4p*t56602*t56709*(2.0/3.0);
            double t56715 = b2p*c*t56708*(1.0/3.0);
            double t56716 = b1p*c*t56710*t56708*(1.0/6.0);
            double t56717 = b3p*c*t56708*t56639*(1.0/2.0);
            double t56718 = t56714+t56715+t56716+t56717;
            double t56719 = t56712*t56713*t56652*t56718;
            double t56720 = gcaa*gcaa;
            double t56721 = t56720*t56720;
            double t56722 = 1.0/t56707;
            double t56723 = 1.0/(t56704*t56704);
            double t56724 = b4f*t56602*t56709*(2.0/3.0);
            double t56725 = b2f*c*t56708*(1.0/3.0);
            double t56726 = b1f*c*t56710*t56708*(1.0/6.0);
            double t56727 = b3f*c*t56708*t56639*(1.0/2.0);
            double t56728 = t56724+t56725+t56726+t56727;
            double t56729 = a1f*c*c0f*t56711*t56708*(2.0/3.0);
            double t56730 = a1p*c*c0p*t56650*t56708*(2.0/3.0);
            double t56731 = c0f*t56711*t56698*2.0;
            double t56732 = c0p*t56650*t56652*2.0;
            double t56733 = 1.0/(t56660*t56660);
            double t56734 = ccab4*t56630*t56628*t56629*t56658;
            double t56735 = ccab1*gamma_aa[index]*gcab*t56631*t56661;
            double t56736 = ccab3*gamma_aa[index]*gcab*t56632*t56626*t56627*t56666;
            double t56737 = ccab2*t56633*t56670*t56626*t56627;
            double t56738 = ccab0+t56734+t56735+t56736+t56737;
            double t56739 = b2p*c*t56607*(4.0/9.0);
            double t56740 = b4p*t56602*t56606*(1.0E1/9.0);
            double t56741 = 1.0/pow(t56596,3.0/2.0);
            double t56742 = b3p*t56602*t56606*t56608*(1.0/1.2E1);
            double t56743 = b1p*c*t56607*t56608*(2.0/9.0);
            double t56744 = b3p*c*t56607*t56597*(2.0/3.0);
            double t56745 = t56740+t56742+t56743+t56744+t56739-b1p*t56602*t56606*t56741*(1.0/3.6E1);
            double t56746 = t56613*t56615*t56624*t56745;
            double t56747 = 1.0/(t56605*t56605*t56605);
            double t56748 = 1.0/(t56612*t56612);
            double t56749 = 1.0/(t56605*t56605*t56605*t56605);
            double t56750 = t56623*t56615*t56609*t56748*t56749*(1.0/2.0);
            double t56751 = 1.0/d2fz0;
            double t56752 = 1.0/(rho_a[index]*rho_a[index]);
            double t56753 = 1.0/Aa;
            double t56754 = b1a*t56597;
            double t56755 = b3a*t56599;
            double t56756 = b2a*c*t56595;
            double t56757 = b4a*t56602*t56603;
            double t56758 = t56754+t56755+t56756+t56757;
            double t56759 = 1.0/t56758;
            double t56760 = t56753*t56759*(1.0/2.0);
            double t56761 = t56760+1.0;
            double t56762 = log(t56761);
            double t56763 = a1a*c*t56595;
            double t56764 = t56763+1.0;
            double t56765 = a1p*c*t56613*t56624*t56616*t56617*(2.0/3.0);
            double t56766 = 1.0/pow(rho_a[index],7.0/3.0);
            double t56767 = 1.0/pow(t56638,3.0/2.0);
            double t56768 = t56728*t56728;
            double t56769 = t56718*t56718;
            double t56770 = 1.0/(t56646*t56646*t56646);
            double t56771 = t56712*t56652*t56770*t56769*2.0;
            double t56772 = b4p*t56602*t56631*(1.0E1/9.0);
            double t56773 = b2p*c*t56766*(4.0/9.0);
            double t56774 = b3p*t56602*t56710*t56631*(1.0/1.2E1);
            double t56775 = b1p*c*t56710*t56766*(2.0/9.0);
            double t56776 = b3p*c*t56639*t56766*(2.0/3.0);
            double t56888 = b1p*t56602*t56631*t56767*(1.0/3.6E1);
            double t56777 = t56772+t56773+t56774+t56775+t56776-t56888;
            double t56778 = 1.0/(t56649*t56649);
            double t56779 = 1.0/(t56646*t56646*t56646*t56646);
            double t56780 = a1p*c*c0p*t56650*t56766*(8.0/9.0);
            double t56781 = t56722*t56723*t56728*t56698;
            double t56782 = t56730+t56781-t56719-t56729;
            double t56783 = a1p*c*c0p*t56616*t56625*(4.0/3.0);
            double t56784 = t56731-t56732;
            double t56785 = t56636*t56784*t56696;
            double t56786 = gamma_aa[index]*gcaa*t56631*4.0;
            double t56787 = gamma_aa[index]*gcaa*t56720*t56632*t56626*4.0;
            double t56788 = t56720*t56633*t56626*6.0;
            double t56789 = t56630*t56721*t56628;
            double t56790 = t56786+t56787+t56788+t56789+1.0;
            double t56791 = 1.0/t56790;
            double t56792 = gamma_aa[index]*gcaa*t56631;
            double t56793 = t56792+1.0;
            double t56794 = 1.0/t56793;
            double t56795 = gamma_aa[index]*gcaa*t56631*3.0;
            double t56796 = gamma_aa[index]*gcaa*t56720*t56632*t56626;
            double t56797 = t56720*t56633*t56626*3.0;
            double t56798 = t56795+t56796+t56797+1.0;
            double t56799 = 1.0/t56798;
            double t56800 = gamma_aa[index]*gcaa*t56631*2.0;
            double t56801 = t56720*t56633*t56626;
            double t56802 = t56800+t56801+1.0;
            double t56803 = 1.0/t56802;
            double t56804 = t56732+t56785;
            double t56805 = 1.0/(t56660*t56660*t56660);
            double t56806 = ccab1*gamma_aa[index]*gcab*t56805*t56626*t56671*t56627*(3.2E1/9.0);
            double t56807 = t56673*t56673;
            double t56808 = 1.0/(t56657*t56657*t56657);
            double t56809 = ccab4*t56630*t56807*t56628*t56808*t56629*2.0;
            double t56810 = t56676*t56676;
            double t56811 = 1.0/(t56669*t56669*t56669);
            double t56812 = ccab2*t56810*t56811*t56633*t56626*t56627*2.0;
            double t56813 = t56683*t56683;
            double t56814 = 1.0/(t56665*t56665*t56665);
            double t56815 = ccab3*gamma_aa[index]*gcab*t56632*t56813*t56814*t56626*t56627*2.0;
            double t56816 = t56636*t56782*t56696;
            double t56817 = -t56730+t56816+t56719;
            double t56818 = ccaa4*t56721*t56628*t56791*t56684*(3.2E1/3.0);
            double t56819 = ccaa1*gamma_aa[index]*gcaa*t56674*t56794*(8.0/3.0);
            double t56820 = ccaa3*gamma_aa[index]*gcaa*t56720*t56626*t56677*t56799*8.0;
            double t56821 = ccaa2*t56720*t56803*t56626*t56675*(1.6E1/3.0);
            double t56822 = 1.0/(t56793*t56793);
            double t56823 = gamma_aa[index]*gcaa*t56674*8.0;
            double t56824 = gamma_aa[index]*gcaa*t56720*t56626*t56677*8.0;
            double t56825 = t56720*t56626*t56675*1.6E1;
            double t56826 = t56823+t56824+t56825;
            double t56827 = 1.0/(t56798*t56798);
            double t56828 = gamma_aa[index]*gcaa*t56674*(3.2E1/3.0);
            double t56829 = gamma_aa[index]*gcaa*t56720*t56626*t56677*3.2E1;
            double t56830 = t56720*t56626*t56675*3.2E1;
            double t56831 = t56721*t56628*t56684*(3.2E1/3.0);
            double t56832 = t56830+t56831+t56828+t56829;
            double t56833 = 1.0/(t56790*t56790);
            double t56834 = gamma_aa[index]*gcaa*t56674*(1.6E1/3.0);
            double t56835 = t56720*t56626*t56675*(1.6E1/3.0);
            double t56836 = t56834+t56835;
            double t56837 = 1.0/(t56802*t56802);
            double t56838 = t56820+t56821+t56818+t56819-ccaa1*t56720*t56822*t56626*t56675*(8.0/3.0)-ccaa4*t56630* \
               t56721*t56832*t56833*t56628-ccaa2*t56720*t56633*t56626*t56836*t56837-ccaa3*gamma_aa[index]*gcaa*t56720* \
               t56632*t56626*t56826*t56827;
            double t56839 = gx*gx;
            double t56840 = t56839*t56839;
            double t56841 = gamma_aa[index]*gx*t56631;
            double t56842 = t56841+1.0;
            double t56862 = gamma_aa[index]*gx*t56674*(3.2E1/3.0);
            double t56863 = gamma_aa[index]*gx*t56626*t56677*t56839*3.2E1;
            double t56864 = t56626*t56675*t56839*3.2E1;
            double t56865 = t56840*t56628*t56684*(3.2E1/3.0);
            double t56843 = t56862+t56863+t56864+t56865;
            double t56844 = gamma_aa[index]*gx*t56631*4.0;
            double t56845 = gamma_aa[index]*gx*t56632*t56626*t56839*4.0;
            double t56846 = t56633*t56626*t56839*6.0;
            double t56847 = t56630*t56840*t56628;
            double t56848 = t56844+t56845+t56846+t56847+1.0;
            double t56867 = gamma_aa[index]*gx*t56674*(1.6E1/3.0);
            double t56868 = t56626*t56675*t56839*(1.6E1/3.0);
            double t56849 = t56867+t56868;
            double t56850 = gamma_aa[index]*gx*t56631*2.0;
            double t56851 = t56633*t56626*t56839;
            double t56852 = t56850+t56851+1.0;
            double t56853 = gamma_aa[index]*gx*t56631*3.0;
            double t56854 = gamma_aa[index]*gx*t56632*t56626*t56839;
            double t56855 = t56633*t56626*t56839*3.0;
            double t56856 = t56853+t56854+t56855+1.0;
            double t56857 = 1.0/(t56856*t56856);
            double t56858 = gamma_aa[index]*gx*t56674*8.0;
            double t56859 = gamma_aa[index]*gx*t56626*t56677*t56839*8.0;
            double t56860 = t56626*t56675*t56839*1.6E1;
            double t56861 = t56860+t56858+t56859;
            double t56866 = 1.0/(t56848*t56848);
            double t56869 = 1.0/(t56852*t56852);
            double t56870 = 1.0/t56848;
            double t56871 = 1.0/t56842;
            double t56872 = 1.0/t56856;
            double t56873 = 1.0/t56852;
            double t56874 = 1.0/(t56842*t56842);
            double t56875 = ccaa4*t56630*t56721*t56628*t56791;
            double t56876 = ccaa1*gamma_aa[index]*gcaa*t56631*t56794;
            double t56877 = ccaa3*gamma_aa[index]*gcaa*t56720*t56632*t56626*t56799;
            double t56878 = ccaa2*t56720*t56803*t56633*t56626;
            double t56879 = ccaa0+t56875+t56876+t56877+t56878;
            double t56880 = 1.0/(t56704*t56704*t56704);
            double t56881 = b4f*t56602*t56631*(1.0E1/9.0);
            double t56882 = b2f*c*t56766*(4.0/9.0);
            double t56883 = b3f*t56602*t56710*t56631*(1.0/1.2E1);
            double t56884 = b1f*c*t56710*t56766*(2.0/9.0);
            double t56885 = b3f*c*t56639*t56766*(2.0/3.0);
            double t56886 = t56881+t56882+t56883+t56884+t56885-b1f*t56602*t56631*t56767*(1.0/3.6E1);
            double t56887 = t56722*t56723*t56886*t56698;
            double t56889 = t56712*t56713*t56652*t56777;
            double t56890 = 1.0/(t56707*t56707);
            double t56891 = 1.0/(t56704*t56704*t56704*t56704);
            double t56892 = t56890*t56891*t56768*t56698*t56699*(1.0/2.0);
            double t56893 = t56652*t56609*t56769*t56778*t56779*(1.0/2.0);
            double t56894 = a1f*c*t56722*t56723*t56708*t56728*(2.0/3.0);
            double t56895 = a1p*c*t56712*t56713*t56708*t56718*(2.0/3.0);
            v_rho_a_rho_a_[index] = (t56732+t56785+rho_a[index]*t56817-rho_a[index]*(t56613*t56615*t56624*t56617- \
               a1p*c*c0p*t56616*t56625*(2.0/3.0))*2.0-c0p*t56615*t56625*2.0)*(ccab1*gamma_aa[index]*gcab*t56661*t56674* \
               (4.0/3.0)-ccab1*t56733*t56626*t56627*t56675*(4.0/3.0)+ccab2*t56670*t56626*t56627*t56675*(8.0/3.0)+ \
               ccab4*t56628*t56629*t56684*t56658*(1.6E1/3.0)-ccab4*t56630*t56690*t56628*t56673*t56629-ccab2*t56633* \
               t56626*t56627*t56693*t56676+ccab3*gamma_aa[index]*gcab*t56626*t56627*t56666*t56677*4.0-ccab3*gamma_aa[index]* \
               gcab*t56632*t56626*t56627*t56683*t56679)*-4.0+t56804*t56838*2.0+(rho_a[index]*(t56732+t56636*t56696* \
               (t56731-c0p*t56650*t56652*2.0))*2.0-c0p*rho_a[index]*t56615*t56625*4.0)*(t56812+t56806+t56815+t56809+ \
               ccab1*gamma_aa[index]*gcab*t56661*t56678*(4.4E1/9.0)-ccab1*t56733*t56626*t56627*t56672*(7.6E1/9.0) \
               +ccab2*t56670*t56626*t56627*t56672*(4.0E1/3.0)+ccab4*t56628*t56629*t56658*t56689*(3.68E2/9.0)-ccab2* \
               t56626*t56627*t56675*t56693*t56676*(1.6E1/3.0)-ccab4*t56690*t56628*t56673*t56629*t56684*(3.2E1/3.0) \
               -ccab2*t56633*t56626*t56627*t56693*(gamma_aa[index]*gcab*t56678*(8.8E1/9.0)+t56626*t56627*t56672*(4.0E1/ \
               3.0))-ccab4*t56630*t56690*t56628*t56629*(gamma_aa[index]*gcab*t56678*(1.76E2/9.0)+t56626*t56627*t56672* \
               8.0E1+t56628*t56629*t56689*(3.68E2/9.0)+gamma_aa[index]*gcab*t56626*t56671*t56627*(3.04E2/3.0))+ccab3* \
               gamma_aa[index]*gcab*t56626*t56671*t56627*t56666*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t56632*t56626* \
               t56627*t56679*(gamma_aa[index]*gcab*t56678*(4.4E1/3.0)+t56626*t56627*t56672*4.0E1+gamma_aa[index]* \
               gcab*t56626*t56671*t56627*(7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t56626*t56627*t56683*t56677*t56679* \
               8.0)+t56879*(t56730-t56719+t56636*t56696*(t56719+t56729-t56722*t56723*t56728*t56698-a1p*c*c0p*t56650* \
               t56708*(2.0/3.0)))*2.0+t56738*(t56783+rho_a[index]*(t56750+t56746+t56765-t56613*t56623*t56615*t56747* \
               2.0-a1p*c*c0p*t56607*t56625*(8.0/9.0)+Aa*t56751*t56752*t56636*t56762*t56764*(4.0/9.0))*2.0-rho_a[index]* \
               (-t56771-t56780+t56893+t56895+t56889+t56636*t56696*(t56771+t56780+t56892+t56894+t56887-t56712*t56713* \
               t56652*t56777-t56722*t56880*t56768*t56698*2.0-a1f*c*c0f*t56711*t56766*(8.0/9.0)-t56652*t56609*t56769* \
               t56778*t56779*(1.0/2.0)-a1p*c*t56712*t56713*t56708*t56718*(2.0/3.0)))+t56636*t56782*t56696*2.0-t56613* \
               t56615*t56624*t56617*2.0+t56712*t56713*t56652*t56718*2.0-a1p*c*c0p*t56650*t56708*(4.0/3.0))+(rho_a[index]* \
               t56804*2.0-c0p*rho_a[index]*t56615*t56625*4.0)*(t56812+t56806+t56815+t56809-ccab1*t56733*t56626*t56627* \
               t56672*(3.2E1/9.0)+ccab2*t56670*t56626*t56627*t56672*(3.2E1/9.0)-ccab2*t56628*t56629*t56693*t56689* \
               (3.2E1/9.0)+ccab4*t56628*t56629*t56658*t56689*(6.4E1/3.0)-ccab2*t56626*t56627*t56675*t56693*t56676* \
               (1.6E1/3.0)-ccab4*t56690*t56628*t56673*t56629*t56684*(3.2E1/3.0)-ccab4*t56630*t56690*t56628*t56629* \
               (t56626*t56627*t56672*(6.4E1/3.0)+t56628*t56629*t56689*(6.4E1/3.0)+gamma_aa[index]*gcab*t56626*t56671* \
               t56627*(1.28E2/3.0))+ccab3*gamma_aa[index]*gcab*t56626*t56671*t56627*t56666*(3.2E1/3.0)-ccab3*gamma_aa[index]* \
               gcab*t56632*t56626*t56627*t56679*(t56626*t56627*t56672*(3.2E1/3.0)+gamma_aa[index]*gcab*t56626*t56671* \
               t56627*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t56626*t56627*t56683*t56677*t56679*8.0)+t56738*(t56783+ \
               rho_a[index]*(t56750+t56746+t56765-t56613*t56623*t56615*t56747*2.0-a1p*c*c0p*t56607*t56625*(8.0/9.0) \
               -Aa*t56751*t56752*t56636*t56762*t56764*(4.0/9.0))*2.0-t56613*t56615*t56624*t56617*2.0)-c0*pow(rho_a[index],1.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t56871*t56674*(8.0/3.0)-cx1*t56626*t56675*t56874*t56839*(8.0/3.0)+cx2* \
               t56626*t56675*t56873*t56839*(1.6E1/3.0)+cx4*t56840*t56870*t56628*t56684*(3.2E1/3.0)-cx2*t56633*t56626* \
               t56839*t56849*t56869-cx4*t56630*t56840*t56843*t56628*t56866+cx3*gamma_aa[index]*gx*t56626*t56872*t56677* \
               t56839*8.0-cx3*gamma_aa[index]*gx*t56632*t56626*t56861*t56839*t56857)*(8.0/3.0)-rho_a[index]*t56804* \
               (ccaa1*gamma_aa[index]*gcaa*t56794*t56678*(8.8E1/9.0)-ccaa1*t56720*t56822*t56626*t56672*2.4E1+ccaa2* \
               t56720*t56803*t56626*t56672*(3.04E2/9.0)+ccaa4*t56721*t56628*t56791*t56689*(1.12E3/9.0)-ccaa4*t56721* \
               t56832*t56833*t56628*t56684*(6.4E1/3.0)-ccaa2*t56720*t56626*t56836*t56675*t56837*(3.2E1/3.0)-ccaa2* \
               t56720*t56633*t56626*t56837*(gamma_aa[index]*gcaa*t56678*(1.76E2/9.0)+t56720*t56626*t56672*(3.04E2/ \
               9.0))-ccaa4*t56630*t56721*t56833*t56628*(gamma_aa[index]*gcaa*t56678*(3.52E2/9.0)+t56720*t56626*t56672* \
               (6.08E2/3.0)+t56721*t56628*t56689*(1.12E3/9.0)+gamma_aa[index]*gcaa*t56720*t56626*t56671*2.88E2)+ccaa2* \
               t56720*1.0/(t56802*t56802*t56802)*t56633*t56626*(t56836*t56836)*2.0+ccaa4*t56630*t56721*(t56832*t56832) \
               *t56628*1.0/(t56790*t56790*t56790)*2.0+ccaa3*gamma_aa[index]*gcaa*t56720*t56626*t56671*t56799*7.2E1+ \
               ccaa1*gamma_aa[index]*gcaa*t56720*t56626*t56671*1.0/(t56793*t56793*t56793)*(1.28E2/9.0)+ccaa3*gamma_aa[index]* \
               gcaa*t56720*t56632*t56626*(t56826*t56826)*1.0/(t56798*t56798*t56798)*2.0-ccaa3*gamma_aa[index]*gcaa* \
               t56720*t56632*t56626*t56827*(gamma_aa[index]*gcaa*t56678*(8.8E1/3.0)+t56720*t56626*t56672*(3.04E2/ \
               3.0)+gamma_aa[index]*gcaa*t56720*t56626*t56671*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t56720*t56626*t56826* \
               t56827*t56677*1.6E1)+rho_a[index]*t56879*(-t56771-t56780+t56893+t56895+t56889+t56636*t56696*(t56771+ \
               t56780+t56892-t56893+t56894-t56895+t56887-t56889-t56722*t56880*t56768*t56698*2.0-a1f*c*c0f*t56711* \
               t56766*(8.0/9.0)))+rho_a[index]*t56817*t56838*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t56871*t56678*(8.8E1/9.0)-cx1*t56626*t56672*t56874*t56839*2.4E1+cx2*t56626*t56672*t56873*t56839* \
               (3.04E2/9.0)+cx4*t56840*t56870*t56628*t56689*(1.12E3/9.0)-cx2*t56626*t56675*t56839*t56849*t56869*(3.2E1/ \
               3.0)-cx4*t56840*t56843*t56628*t56684*t56866*(6.4E1/3.0)-cx2*t56633*t56626*t56839*t56869*(gamma_aa[index]* \
               gx*t56678*(1.76E2/9.0)+t56626*t56672*t56839*(3.04E2/9.0))-cx4*t56630*t56840*t56628*t56866*(gamma_aa[index]* \
               gx*t56678*(3.52E2/9.0)+t56626*t56672*t56839*(6.08E2/3.0)+t56840*t56628*t56689*(1.12E3/9.0)+gamma_aa[index]* \
               gx*t56626*t56671*t56839*2.88E2)+cx2*t56633*t56626*1.0/(t56852*t56852*t56852)*t56839*(t56849*t56849) \
               *2.0+cx4*t56630*t56840*(t56843*t56843)*t56628*1.0/(t56848*t56848*t56848)*2.0+cx3*gamma_aa[index]*gx* \
               t56626*t56671*t56872*t56839*7.2E1+cx1*gamma_aa[index]*gx*t56626*t56671*1.0/(t56842*t56842*t56842)* \
               t56839*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t56632*t56626*(t56861*t56861)*1.0/(t56856*t56856*t56856) \
               *t56839*2.0-cx3*gamma_aa[index]*gx*t56632*t56626*t56839*t56857*(gamma_aa[index]*gx*t56678*(8.8E1/3.0) \
               +t56626*t56672*t56839*(3.04E2/3.0)+gamma_aa[index]*gx*t56626*t56671*t56839*7.2E1)-cx3*gamma_aa[index]* \
               gx*t56626*t56861*t56677*t56839*t56857*1.6E1)+c0*t56641*(cx0+cx1*gamma_aa[index]*gx*t56631*t56871+cx2* \
               t56633*t56626*t56873*t56839+cx4*t56630*t56840*t56870*t56628+cx3*gamma_aa[index]*gx*t56632*t56626*t56872* \
               t56839)*(4.0/9.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t56897 = 1.0/pow(rho_a[index],1.0/3.0);
                double t56898 = c*t56897;
                double t56899 = sqrt(t56898);
                double t56900 = pow(t56898,3.0/2.0);
                double t56901 = c*c;
                double t56902 = 1.0/pow(rho_a[index],2.0/3.0);
                double t56903 = 1.0/c0p;
                double t56904 = b1p*t56899;
                double t56905 = b3p*t56900;
                double t56906 = b4p*t56901*t56902;
                double t56907 = b2p*c*t56897;
                double t56908 = t56904+t56905+t56906+t56907;
                double t56909 = 1.0/t56908;
                double t56910 = t56903*t56909*(1.0/2.0);
                double t56911 = t56910+1.0;
                double t56912 = log(t56911);
                double t56913 = a1p*c*t56897;
                double t56914 = t56913+1.0;
                double t56915 = 1.0/pow(rho_a[index],8.0/3.0);
                double t56916 = gamma_aa[index]*gamma_aa[index];
                double t56917 = gcaa*gcaa;
                double t56918 = t56917*t56917;
                double t56919 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t56920 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t56921 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t56922 = gamma_aa[index]*gcaa*t56915;
                double t56923 = t56922+1.0;
                double t56924 = gamma_aa[index]*gcaa*t56915*3.0;
                double t56925 = gamma_aa[index]*gcaa*t56921*t56916*t56917;
                double t56926 = t56920*t56916*t56917*3.0;
                double t56927 = t56924+t56925+t56926+1.0;
                double t56928 = t56916*t56916;
                double t56929 = gamma_aa[index]*gcaa*t56915*4.0;
                double t56930 = gamma_aa[index]*gcaa*t56921*t56916*t56917*4.0;
                double t56931 = t56920*t56916*t56917*6.0;
                double t56932 = t56918*t56919*t56928;
                double t56933 = t56930+t56931+t56932+t56929+1.0;
                double t56934 = gamma_aa[index]*gcaa*t56915*2.0;
                double t56935 = t56920*t56916*t56917;
                double t56936 = t56934+t56935+1.0;
                double t56937 = pow(2.0,1.0/3.0);
                double t56938 = t56937*2.0;
                double t56939 = t56938-2.0;
                double t56940 = two_13*2.0;
                double t56941 = t56940-2.0;
                double t56942 = 1.0/t56941;
                double t56943 = 1.0/c0f;
                double t56944 = b1f*t56899;
                double t56945 = b3f*t56900;
                double t56946 = b4f*t56901*t56902;
                double t56947 = b2f*c*t56897;
                double t56948 = t56944+t56945+t56946+t56947;
                double t56949 = 1.0/t56948;
                double t56950 = t56943*t56949*(1.0/2.0);
                double t56951 = t56950+1.0;
                double t56952 = log(t56951);
                double t56953 = a1f*c*t56897;
                double t56954 = t56953+1.0;
                double t56955 = c0f*t56952*t56954*2.0;
                double t56956 = c0p*t56912*t56914*2.0;
                double t56957 = rho_a[index]*2.0;
                double t56958 = 1.0/pow(t56957,1.0/3.0);
                double t56959 = c*t56958;
                double t56960 = gcab*gcab;
                double t56961 = t56960*t56960;
                double t56962 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t56963 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t56964 = gamma_aa[index]*gcab*t56915*2.0;
                double t56965 = t56920*t56960*t56916;
                double t56966 = t56964+t56965+1.0;
                double t56967 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t56968 = gamma_aa[index]*gcab*t56915;
                double t56969 = t56968+1.0;
                double t56970 = gamma_aa[index]*gcab*t56915*3.0;
                double t56971 = gamma_aa[index]*gcab*t56921*t56960*t56916;
                double t56972 = t56920*t56960*t56916*3.0;
                double t56973 = t56970+t56971+t56972+1.0;
                double t56974 = gamma_aa[index]*gcab*t56915*4.0;
                double t56975 = gamma_aa[index]*gcab*t56921*t56960*t56916*4.0;
                double t56976 = t56920*t56960*t56916*6.0;
                double t56977 = t56961*t56919*t56928;
                double t56978 = t56974+t56975+t56976+t56977+1.0;
                double t56979 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t56980 = 1.0/(t56966*t56966);
                double t56981 = 1.0/(t56973*t56973);
                double t56982 = 1.0/(t56978*t56978);
                double t56983 = gamma_aa[index]*gcab*t56979*(8.0/3.0);
                double t56984 = t56960*t56916*t56962*(8.0/3.0);
                double t56985 = t56983+t56984;
                double t56986 = gcab*t56915;
                double t56987 = gamma_aa[index]*t56920*t56960;
                double t56988 = t56986+t56987;
                double t56989 = gcab*t56915*(3.0/2.0);
                double t56990 = gamma_aa[index]*t56920*t56960*3.0;
                double t56991 = gcab*t56921*t56960*t56916*(3.0/2.0);
                double t56992 = t56990+t56991+t56989;
                double t56993 = gamma_aa[index]*gcab*t56979*4.0;
                double t56994 = gamma_aa[index]*gcab*t56960*t56916*t56967*4.0;
                double t56995 = t56960*t56916*t56962*8.0;
                double t56996 = t56993+t56994+t56995;
                double t56997 = gamma_aa[index]*gcab*t56979*(1.6E1/3.0);
                double t56998 = gamma_aa[index]*gcab*t56960*t56916*t56967*1.6E1;
                double t56999 = t56960*t56916*t56962*1.6E1;
                double t57000 = t56961*t56963*t56928*(1.6E1/3.0);
                double t57001 = t56997+t56998+t56999+t57000;
                double t57002 = gcab*t56915*2.0;
                double t57003 = gamma_aa[index]*t56920*t56960*6.0;
                double t57004 = gcab*t56921*t56960*t56916*6.0;
                double t57005 = gamma_aa[index]*t56916*t56961*t56919*2.0;
                double t57006 = t57002+t57003+t57004+t57005;
                double t57007 = t56955-t56956;
                double t57008 = t56942*t56939*t57007;
                double t57009 = t56956+t57008;
                double t57010 = rho_a[index]*t57009*2.0;
                double t57011 = sqrt(t56959);
                double t57012 = b1p*t57011;
                double t57013 = pow(t56959,3.0/2.0);
                double t57014 = b3p*t57013;
                double t57015 = b2p*c*t56958;
                double t57016 = 1.0/pow(t56957,2.0/3.0);
                double t57017 = b4p*t56901*t57016;
                double t57018 = t57012+t57014+t57015+t57017;
                double t57019 = 1.0/t57018;
                double t57020 = t56903*t57019*(1.0/2.0);
                double t57021 = t57020+1.0;
                double t57022 = log(t57021);
                double t57023 = a1p*c*t56958;
                double t57024 = t57023+1.0;
                double t57025 = t57010-c0p*rho_a[index]*t57022*t57024*4.0;
                double t57026 = 1.0/t56978;
                double t57027 = 1.0/t56966;
                double t57028 = 1.0/t56973;
                double t57029 = 1.0/(t56969*t56969);
                double t57030 = 1.0/(t56969*t56969*t56969);
                double t57031 = ccab3*gcab*t56921*t56960*t56916*t56981*t56996*(3.0/2.0);
                double t57032 = ccab2*gamma_aa[index]*t56920*t56960*t56980*t56985;
                double t57033 = ccab3*gamma_aa[index]*gcab*t56960*t56916*t56981*t56992*t56967*4.0;
                double t57034 = ccab4*gamma_aa[index]*t56916*t56961*t56919*t56982*t57001*2.0;
                double t57035 = ccab4*t56961*t56963*t56928*t56982*t57006*(1.6E1/3.0);
                double t57036 = ccab2*t56960*t56916*t56962*t56980*t56988*(8.0/3.0);
                double t57037 = gamma_aa[index]*t56960*t56962*4.0;
                double t57038 = 1.0/(t56966*t56966*t56966);
                double t57039 = 1.0/(t56973*t56973*t56973);
                double t57040 = 1.0/(t56978*t56978*t56978);
                double t57041 = 1.0/pow(t56957,4.0/3.0);
                double t57042 = 1.0/pow(rho_a[index],4.0/3.0);
                double t57043 = 1.0/pow(rho_a[index],5.0/3.0);
                double t57044 = 1.0/sqrt(t56898);
                double t57045 = 1.0/t56911;
                double t57046 = 1.0/(t56908*t56908);
                double t57047 = b4p*t56901*t57043*(2.0/3.0);
                double t57048 = b2p*c*t57042*(1.0/3.0);
                double t57049 = b1p*c*t57042*t57044*(1.0/6.0);
                double t57050 = b3p*c*t56899*t57042*(1.0/2.0);
                double t57051 = t57050+t57047+t57048+t57049;
                double t57052 = t56914*t57051*t57045*t57046;
                double t57053 = 1.0/t56969;
                double t57054 = gx*gx;
                double t57055 = t57054*t57054;
                double t57056 = gamma_aa[index]*gx*t56915;
                double t57057 = t57056+1.0;
                double t57058 = gamma_aa[index]*gx*t56915*3.0;
                double t57059 = gamma_aa[index]*gx*t56921*t56916*t57054;
                double t57060 = t56920*t56916*t57054*3.0;
                double t57061 = t57060+t57058+t57059+1.0;
                double t57062 = gamma_aa[index]*gx*t56915*4.0;
                double t57063 = gamma_aa[index]*gx*t56921*t56916*t57054*4.0;
                double t57064 = t56920*t56916*t57054*6.0;
                double t57065 = t56919*t56928*t57055;
                double t57066 = t57062+t57063+t57064+t57065+1.0;
                double t57067 = gamma_aa[index]*gx*t56915*2.0;
                double t57068 = t56920*t56916*t57054;
                double t57069 = t57067+t57068+1.0;
                double t57070 = 1.0/t56923;
                double t57071 = 1.0/t56933;
                double t57072 = 1.0/t56936;
                double t57073 = 1.0/t56927;
                double t57074 = 1.0/(t56923*t56923);
                double t57075 = 1.0/(t56927*t56927);
                double t57076 = 1.0/(t56936*t56936);
                double t57077 = gcaa*t56915*3.0;
                double t57078 = gamma_aa[index]*t56920*t56917*6.0;
                double t57079 = gcaa*t56921*t56916*t56917*3.0;
                double t57080 = t57077+t57078+t57079;
                double t57081 = 1.0/(t56933*t56933);
                double t57082 = gcaa*t56915*4.0;
                double t57083 = gamma_aa[index]*t56920*t56917*1.2E1;
                double t57084 = gcaa*t56921*t56916*t56917*1.2E1;
                double t57085 = gamma_aa[index]*t56916*t56918*t56919*4.0;
                double t57086 = t57082+t57083+t57084+t57085;
                double t57087 = gcaa*t56915*2.0;
                double t57088 = gamma_aa[index]*t56920*t56917*2.0;
                double t57089 = t57087+t57088;
                double t57090 = gamma_aa[index]*gcaa*t56979*(1.6E1/3.0);
                double t57091 = t56916*t56917*t56962*(1.6E1/3.0);
                double t57092 = t57090+t57091;
                double t57093 = gamma_aa[index]*gcaa*t56979*8.0;
                double t57094 = gamma_aa[index]*gcaa*t56916*t56917*t56967*8.0;
                double t57095 = t56916*t56917*t56962*1.6E1;
                double t57096 = t57093+t57094+t57095;
                double t57097 = gamma_aa[index]*gcaa*t56979*(3.2E1/3.0);
                double t57098 = gamma_aa[index]*gcaa*t56916*t56917*t56967*3.2E1;
                double t57099 = t56916*t56917*t56962*3.2E1;
                double t57100 = t56918*t56963*t56928*(3.2E1/3.0);
                double t57101 = t57100+t57097+t57098+t57099;
                double t57102 = 1.0/t56951;
                double t57103 = 1.0/(t56948*t56948);
                double t57104 = b4f*t56901*t57043*(2.0/3.0);
                double t57105 = b2f*c*t57042*(1.0/3.0);
                double t57106 = b1f*c*t57042*t57044*(1.0/6.0);
                double t57107 = b3f*c*t56899*t57042*(1.0/2.0);
                double t57108 = t57104+t57105+t57106+t57107;
                double t57109 = a1f*c*c0f*t56952*t57042*(2.0/3.0);
                double t57110 = a1p*c*c0p*t56912*t57042*(2.0/3.0);
                double t57111 = ccaa1*gcaa*t56915*t57070;
                double t57112 = ccaa4*gamma_aa[index]*t56916*t56918*t56919*t57071*4.0;
                double t57113 = ccaa2*gamma_aa[index]*t56920*t56917*t57072*2.0;
                double t57114 = ccaa3*gcaa*t56921*t56916*t56917*t57073*3.0;
                double t57115 = t57111+t57112+t57113+t57114-ccaa1*gamma_aa[index]*t56920*t56917*t57074-ccaa2*t56920* \
                   t56916*t56917*t57076*t57089-ccaa4*t56918*t56919*t56928*t57081*t57086-ccaa3*gamma_aa[index]*gcaa*t56921* \
                   t56916*t56917*t57080*t57075;
                double t57116 = 1.0/t57057;
                double t57117 = 1.0/t57066;
                double t57118 = 1.0/t57069;
                double t57119 = 1.0/t57061;
                double t57120 = 1.0/(t57057*t57057);
                double t57121 = 1.0/(t57061*t57061);
                double t57122 = 1.0/(t57069*t57069);
                double t57123 = gx*t56915*3.0;
                double t57124 = gamma_aa[index]*t56920*t57054*6.0;
                double t57125 = gx*t56921*t56916*t57054*3.0;
                double t57126 = t57123+t57124+t57125;
                double t57127 = 1.0/(t57066*t57066);
                double t57128 = gx*t56915*4.0;
                double t57129 = gamma_aa[index]*t56920*t57054*1.2E1;
                double t57130 = gx*t56921*t56916*t57054*1.2E1;
                double t57131 = gamma_aa[index]*t56916*t56919*t57055*4.0;
                double t57132 = t57130+t57131+t57128+t57129;
                double t57133 = gx*t56915*2.0;
                double t57134 = gamma_aa[index]*t56920*t57054*2.0;
                double t57135 = t57133+t57134;
                double t57136 = gamma_aa[index]*gx*t56979*(1.6E1/3.0);
                double t57137 = t56916*t56962*t57054*(1.6E1/3.0);
                double t57138 = t57136+t57137;
                double t57139 = gamma_aa[index]*gx*t56979*8.0;
                double t57140 = gamma_aa[index]*gx*t56916*t56967*t57054*8.0;
                double t57141 = t56916*t56962*t57054*1.6E1;
                double t57142 = t57140+t57141+t57139;
                double t57143 = gamma_aa[index]*gx*t56979*(3.2E1/3.0);
                double t57144 = gamma_aa[index]*gx*t56916*t56967*t57054*3.2E1;
                double t57145 = t56916*t56962*t57054*3.2E1;
                double t57146 = t56963*t56928*t57055*(3.2E1/3.0);
                double t57147 = t57143+t57144+t57145+t57146;
                v_rho_a_gamma_aa_[index] = t57025*(t57031+t57032+t57033+t57034+t57035+t57036-ccab2*gamma_aa[index]* \
                   t56960*t56962*t57027*(4.0/3.0)+ccab1*gamma_aa[index]*t56960*t56962*t57029*(4.0/3.0)+ccab4*t56961*t56919* \
                   t56928*t56982*(gamma_aa[index]*t56960*t56962*8.0+gamma_aa[index]*t56916*t56961*t56963*8.0+gcab*t56960* \
                   t56916*t56967*1.6E1)+ccab2*gamma_aa[index]*t56916*t56961*t56980*t56963*(4.0/3.0)-ccab4*gamma_aa[index]* \
                   t56916*t56961*t56963*t57026*8.0-ccab1*gcab*t56960*t56916*t56967*t57030*(4.0/3.0)-ccab3*gcab*t56960* \
                   t56916*t56967*t57028*4.0-ccab2*t56920*t56960*t56916*t56985*t56988*t57038*2.0-ccab4*t56961*t56919*t56928* \
                   t57001*t57040*t57006*2.0+ccab3*gamma_aa[index]*gcab*t56921*t56960*t56916*t56981*(t57037+gcab*t56960* \
                   t56916*t56967*4.0)-ccab3*gamma_aa[index]*gcab*t56921*t56960*t56916*t56992*t56996*t57039*2.0)-t57115* \
                   (t56956+t56942*t56939*(t56955-c0p*t56912*t56914*2.0))-(-t56956-t57008+rho_a[index]*((t57024*1.0/(t57018* \
                   t57018)*(b4p*t56901*1.0/pow(t56957,5.0/3.0)*(2.0/3.0)+b2p*c*t57041*(1.0/3.0)+b3p*c*t57011*t57041*(1.0/ \
                   2.0)+b1p*c*1.0/sqrt(t56959)*t57041*(1.0/6.0)))/t57021-a1p*c*c0p*t57022*t57041*(2.0/3.0))*2.0+rho_a[index]* \
                   (t57110-t57052+t56942*t56939*(t57052+t57109-t56954*t57102*t57103*t57108-a1p*c*c0p*t56912*t57042*(2.0/ \
                   3.0)))+c0p*t57022*t57024*2.0)*(ccab1*gcab*t56915*t57053*(1.0/2.0)+ccab2*gamma_aa[index]*t56920*t56960* \
                   t57027-ccab1*gamma_aa[index]*t56920*t56960*t57029*(1.0/2.0)-ccab2*t56920*t56960*t56916*t56980*t56988- \
                   ccab4*t56961*t56919*t56928*t56982*t57006+ccab4*gamma_aa[index]*t56916*t56961*t56919*t57026*2.0+ccab3* \
                   gcab*t56921*t56960*t56916*t57028*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t56921*t56960*t56916*t56981* \
                   t56992)*2.0+t57025*(t57031+t57032+t57033+t57034+t57035+t57036-ccab1*gcab*t56979*t57053*(4.0/3.0)-ccab2* \
                   gamma_aa[index]*t56960*t56962*t57027*4.0+ccab1*gamma_aa[index]*t56960*t56962*t57029*(8.0/3.0)+ccab4* \
                   t56961*t56919*t56928*t56982*(gcab*t56979*(1.6E1/3.0)+gamma_aa[index]*t56960*t56962*2.4E1+gamma_aa[index]* \
                   t56916*t56961*t56963*(4.0E1/3.0)+gcab*t56960*t56916*t56967*3.2E1)+ccab2*t56920*t56960*t56916*t56980* \
                   (t57037+gcab*t56979*(8.0/3.0))-ccab4*gamma_aa[index]*t56916*t56961*t56963*t57026*(4.0E1/3.0)-ccab1* \
                   gcab*t56960*t56916*t56967*t57030*(4.0/3.0)-ccab3*gcab*t56960*t56916*t56967*t57028*8.0-ccab2*t56920* \
                   t56960*t56916*t56985*t56988*t57038*2.0-ccab4*t56961*t56919*t56928*t57001*t57040*t57006*2.0+ccab3*gamma_aa[index]* \
                   gcab*t56921*t56960*t56916*t56981*(gcab*t56979*4.0+gamma_aa[index]*t56960*t56962*1.2E1+gcab*t56960* \
                   t56916*t56967*8.0)-ccab3*gamma_aa[index]*gcab*t56921*t56960*t56916*t56992*t56996*t57039*2.0)-rho_a[index]* \
                   t57009*(ccaa1*gcaa*t56979*t57070*(-8.0/3.0)-ccaa2*gamma_aa[index]*t56917*t56962*t57072*(3.2E1/3.0) \
                   +ccaa1*gamma_aa[index]*t56917*t56962*t57074*8.0+ccaa2*t56916*t56917*t56962*t57076*t57089*(1.6E1/3.0) \
                   +ccaa4*t56918*t56963*t56928*t57081*t57086*(3.2E1/3.0)+ccaa4*t56918*t56919*t56928*t57081*(gcaa*t56979* \
                   (3.2E1/3.0)+gamma_aa[index]*t56917*t56962*6.4E1+gamma_aa[index]*t56916*t56918*t56963*(1.28E2/3.0)+ \
                   gcaa*t56916*t56917*t56967*9.6E1)-ccaa1*gcaa*1.0/(t56923*t56923*t56923)*t56916*t56917*t56967*(1.6E1/ \
                   3.0)+ccaa2*t56920*t56916*t56917*t57076*(gcaa*t56979*(1.6E1/3.0)+gamma_aa[index]*t56917*t56962*(3.2E1/ \
                   3.0))-ccaa4*gamma_aa[index]*t56916*t56918*t56963*t57071*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t56920* \
                   t56917*t57092*t57076*2.0-ccaa3*gcaa*t56916*t56917*t56967*t57073*2.4E1+ccaa4*gamma_aa[index]*t56916* \
                   t56918*t56919*t57101*t57081*4.0+ccaa3*gcaa*t56921*t56916*t56917*t57075*t57096*3.0-ccaa4*1.0/(t56933* \
                   t56933*t56933)*t56918*t56919*t56928*t57101*t57086*2.0-ccaa2*t56920*t56916*t56917*1.0/(t56936*t56936* \
                   t56936)*t57092*t57089*2.0+ccaa3*gamma_aa[index]*gcaa*t56921*t56916*t56917*t57075*(gcaa*t56979*8.0+ \
                   gamma_aa[index]*t56917*t56962*3.2E1+gcaa*t56916*t56917*t56967*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t56916* \
                   t56917*t56967*t57080*t57075*8.0-ccaa3*gamma_aa[index]*gcaa*t56921*t56916*t56917*1.0/(t56927*t56927* \
                   t56927)*t57080*t57096*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t56979*t57116*(-8.0/3.0)+cx1*gamma_aa[index]* \
                   t56962*t57120*t57054*8.0-cx2*gamma_aa[index]*t56962*t57054*t57118*(3.2E1/3.0)+cx2*t56916*t56962*t57122* \
                   t57054*t57135*(1.6E1/3.0)+cx4*t56963*t56928*t57132*t57055*t57127*(3.2E1/3.0)+cx4*t56919*t56928*t57055* \
                   t57127*(gx*t56979*(3.2E1/3.0)+gamma_aa[index]*t56962*t57054*6.4E1+gamma_aa[index]*t56916*t56963*t57055* \
                   (1.28E2/3.0)+gx*t56916*t56967*t57054*9.6E1)-cx1*gx*t56916*t56967*t57054*1.0/(t57057*t57057*t57057) \
                   *(1.6E1/3.0)+cx2*t56920*t56916*t57122*t57054*(gx*t56979*(1.6E1/3.0)+gamma_aa[index]*t56962*t57054* \
                   (3.2E1/3.0))+cx2*gamma_aa[index]*t56920*t57122*t57054*t57138*2.0-cx4*gamma_aa[index]*t56916*t56963* \
                   t57117*t57055*(1.28E2/3.0)-cx3*gx*t56916*t56967*t57054*t57119*2.4E1+cx4*gamma_aa[index]*t56916*t56919* \
                   t57055*t57127*t57147*4.0+cx3*gx*t56921*t56916*t57121*t57142*t57054*3.0-cx2*t56920*t56916*t57054*t57135* \
                   t57138*1.0/(t57069*t57069*t57069)*2.0-cx4*t56919*t56928*t57132*t57055*1.0/(t57066*t57066*t57066)*t57147* \
                   2.0+cx3*gamma_aa[index]*gx*t56921*t56916*t57121*t57054*(gx*t56979*8.0+gamma_aa[index]*t56962*t57054* \
                   3.2E1+gx*t56916*t56967*t57054*2.4E1)+cx3*gamma_aa[index]*gx*t56916*t56967*t57121*t57054*t57126*8.0- \
                   cx3*gamma_aa[index]*gx*t56921*t56916*1.0/(t57061*t57061*t57061)*t57142*t57054*t57126*2.0)-rho_a[index]* \
                   t57115*(-t57110+t57052+t56942*t56939*(t57110-t57052-t57109+t56954*t57102*t57103*t57108))+c0*pow(rho_a[index],1.0/ \
                   3.0)*(cx1*gx*t56915*t57116-cx1*gamma_aa[index]*t56920*t57120*t57054+cx2*gamma_aa[index]*t56920*t57054* \
                   t57118*2.0-cx2*t56920*t56916*t57122*t57054*t57135-cx4*t56919*t56928*t57132*t57055*t57127+cx4*gamma_aa[index]* \
                   t56916*t56919*t57117*t57055*4.0+cx3*gx*t56921*t56916*t57054*t57119*3.0-cx3*gamma_aa[index]*gx*t56921* \
                   t56916*t57121*t57054*t57126)*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t57149 = 1.0/pow(rho_a[index],1.0/3.0);
                double t57150 = c*t57149;
                double t57151 = sqrt(t57150);
                double t57152 = pow(t57150,3.0/2.0);
                double t57153 = c*c;
                double t57154 = 1.0/pow(rho_a[index],2.0/3.0);
                double t57155 = 1.0/c0p;
                double t57156 = b1p*t57151;
                double t57157 = b3p*t57152;
                double t57158 = b4p*t57153*t57154;
                double t57159 = b2p*c*t57149;
                double t57160 = t57156+t57157+t57158+t57159;
                double t57161 = 1.0/t57160;
                double t57162 = t57161*t57155*(1.0/2.0);
                double t57163 = t57162+1.0;
                double t57164 = log(t57163);
                double t57165 = a1p*c*t57149;
                double t57166 = t57165+1.0;
                double t57167 = rho_a[index]*2.0;
                double t57168 = 1.0/pow(t57167,1.0/3.0);
                double t57169 = c*t57168;
                double t57170 = gcab*gcab;
                double t57171 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t57172 = 1.0/pow(rho_a[index],8.0/3.0);
                double t57173 = gamma_aa[index]*gamma_aa[index];
                double t57174 = t57170*t57170;
                double t57175 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t57176 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t57177 = gamma_aa[index]*gcab*t57172;
                double t57178 = t57177+1.0;
                double t57179 = gamma_aa[index]*gcab*t57172*2.0;
                double t57180 = t57170*t57171*t57173;
                double t57181 = t57180+t57179+1.0;
                double t57182 = gamma_aa[index]*gcab*t57172*3.0;
                double t57183 = gamma_aa[index]*gcab*t57170*t57173*t57176;
                double t57184 = t57170*t57171*t57173*3.0;
                double t57185 = t57182+t57183+t57184+1.0;
                double t57186 = t57173*t57173;
                double t57202 = gcab*t57172*2.0;
                double t57203 = gamma_aa[index]*t57170*t57171*6.0;
                double t57204 = gcab*t57170*t57173*t57176*6.0;
                double t57205 = gamma_aa[index]*t57173*t57174*t57175*2.0;
                double t57187 = t57202+t57203+t57204+t57205;
                double t57188 = gamma_aa[index]*gcab*t57172*4.0;
                double t57189 = gamma_aa[index]*gcab*t57170*t57173*t57176*4.0;
                double t57190 = t57170*t57171*t57173*6.0;
                double t57191 = t57174*t57175*t57186;
                double t57192 = t57190+t57191+t57188+t57189+1.0;
                double t57195 = gcab*t57172;
                double t57196 = gamma_aa[index]*t57170*t57171;
                double t57193 = t57195+t57196;
                double t57194 = 1.0/(t57185*t57185);
                double t57197 = 1.0/(t57181*t57181);
                double t57198 = gcab*t57172*(3.0/2.0);
                double t57199 = gamma_aa[index]*t57170*t57171*3.0;
                double t57200 = gcab*t57170*t57173*t57176*(3.0/2.0);
                double t57201 = t57200+t57198+t57199;
                double t57206 = 1.0/(t57192*t57192);
                double t57207 = gx*gx;
                double t57208 = t57207*t57207;
                double t57209 = gamma_aa[index]*gx*t57172;
                double t57210 = t57209+1.0;
                double t57211 = gamma_aa[index]*gx*t57172*2.0;
                double t57212 = t57171*t57207*t57173;
                double t57213 = t57211+t57212+1.0;
                double t57214 = gamma_aa[index]*gx*t57172*3.0;
                double t57215 = gamma_aa[index]*gx*t57207*t57173*t57176;
                double t57216 = t57171*t57207*t57173*3.0;
                double t57217 = t57214+t57215+t57216+1.0;
                double t57233 = gx*t57172*4.0;
                double t57234 = gamma_aa[index]*t57171*t57207*1.2E1;
                double t57235 = gx*t57207*t57173*t57176*1.2E1;
                double t57236 = gamma_aa[index]*t57208*t57173*t57175*4.0;
                double t57218 = t57233+t57234+t57235+t57236;
                double t57219 = gamma_aa[index]*gx*t57172*4.0;
                double t57220 = gamma_aa[index]*gx*t57207*t57173*t57176*4.0;
                double t57221 = t57171*t57207*t57173*6.0;
                double t57222 = t57208*t57175*t57186;
                double t57223 = t57220+t57221+t57222+t57219+1.0;
                double t57226 = gx*t57172*2.0;
                double t57227 = gamma_aa[index]*t57171*t57207*2.0;
                double t57224 = t57226+t57227;
                double t57225 = 1.0/(t57217*t57217);
                double t57228 = 1.0/(t57213*t57213);
                double t57229 = gx*t57172*3.0;
                double t57230 = gamma_aa[index]*t57171*t57207*6.0;
                double t57231 = gx*t57207*t57173*t57176*3.0;
                double t57232 = t57230+t57231+t57229;
                double t57237 = 1.0/(t57223*t57223);
                double t57238 = pow(2.0,1.0/3.0);
                double t57239 = t57238*2.0;
                double t57240 = t57239-2.0;
                double t57241 = two_13*2.0;
                double t57242 = t57241-2.0;
                double t57243 = 1.0/t57242;
                double t57244 = 1.0/c0f;
                double t57245 = b1f*t57151;
                double t57246 = b3f*t57152;
                double t57247 = b4f*t57153*t57154;
                double t57248 = b2f*c*t57149;
                double t57249 = t57245+t57246+t57247+t57248;
                double t57250 = 1.0/t57249;
                double t57251 = t57250*t57244*(1.0/2.0);
                double t57252 = t57251+1.0;
                double t57253 = log(t57252);
                double t57254 = a1f*c*t57149;
                double t57255 = t57254+1.0;
                double t57256 = c0f*t57253*t57255*2.0;
                double t57257 = c0p*t57164*t57166*2.0;
                double t57258 = gcaa*gcaa;
                double t57259 = t57258*t57258;
                double t57260 = gamma_aa[index]*gcaa*t57172;
                double t57261 = t57260+1.0;
                double t57262 = gamma_aa[index]*gcaa*t57172*2.0;
                double t57263 = t57171*t57173*t57258;
                double t57264 = t57262+t57263+1.0;
                double t57265 = gamma_aa[index]*gcaa*t57172*3.0;
                double t57266 = gamma_aa[index]*gcaa*t57173*t57176*t57258;
                double t57267 = t57171*t57173*t57258*3.0;
                double t57268 = t57265+t57266+t57267+1.0;
                double t57284 = gcaa*t57172*4.0;
                double t57285 = gamma_aa[index]*t57171*t57258*1.2E1;
                double t57286 = gcaa*t57173*t57176*t57258*1.2E1;
                double t57287 = gamma_aa[index]*t57173*t57175*t57259*4.0;
                double t57269 = t57284+t57285+t57286+t57287;
                double t57270 = gamma_aa[index]*gcaa*t57172*4.0;
                double t57271 = gamma_aa[index]*gcaa*t57173*t57176*t57258*4.0;
                double t57272 = t57171*t57173*t57258*6.0;
                double t57273 = t57175*t57186*t57259;
                double t57274 = t57270+t57271+t57272+t57273+1.0;
                double t57277 = gcaa*t57172*2.0;
                double t57278 = gamma_aa[index]*t57171*t57258*2.0;
                double t57275 = t57277+t57278;
                double t57276 = 1.0/(t57268*t57268);
                double t57279 = 1.0/(t57264*t57264);
                double t57280 = gcaa*t57172*3.0;
                double t57281 = gamma_aa[index]*t57171*t57258*6.0;
                double t57282 = gcaa*t57173*t57176*t57258*3.0;
                double t57283 = t57280+t57281+t57282;
                double t57288 = 1.0/(t57274*t57274);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t57257+t57240*t57243*(t57256-c0p*t57164*t57166*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t57155*(1.0/2.0))/(b1p*sqrt(t57169)+b3p*pow(t57169,3.0/2.0)+b4p*t57153* \
                   1.0/pow(t57167,2.0/3.0)+b2p*c*t57168)+1.0)*(a1p*c*t57168+1.0)*4.0)*((ccab2*t57170*t57171*(1.0/2.0) \
                   )/t57181-ccab1*t57170*t57171*1.0/(t57178*t57178)*(1.0/2.0)-ccab2*t57173*t57174*t57175*t57197*(1.0/ \
                   2.0)+(ccab4*t57173*t57174*t57175*3.0)/t57192-ccab4*t57206*t57174*t57175*t57186*(t57170*t57171*3.0+ \
                   t57173*t57174*t57175*3.0+gamma_aa[index]*gcab*t57170*t57176*6.0)+(ccab3*gamma_aa[index]*gcab*t57170* \
                   t57176*(3.0/2.0))/t57185+ccab1*gamma_aa[index]*gcab*t57170*t57176*1.0/(t57178*t57178*t57178)*(1.0/ \
                   2.0)+ccab2*t57170*t57171*1.0/(t57181*t57181*t57181)*t57173*(t57193*t57193)*2.0+ccab4*t57174*1.0/(t57192* \
                   t57192*t57192)*t57175*t57186*(t57187*t57187)*2.0-ccab2*gamma_aa[index]*t57170*t57171*t57193*t57197* \
                   2.0-ccab4*gamma_aa[index]*t57206*t57173*t57174*t57175*t57187*4.0-ccab3*gcab*t57201*t57170*t57173*t57176* \
                   t57194*3.0-ccab3*gamma_aa[index]*gcab*t57170*t57173*t57176*t57194*(t57170*t57171*(3.0/2.0)+gamma_aa[index]* \
                   gcab*t57170*t57176*(3.0/2.0))+ccab3*gamma_aa[index]*gcab*(t57201*t57201)*t57170*t57173*t57176*1.0/ \
                   (t57185*t57185*t57185)*2.0)*4.0+rho_a[index]*(t57257+t57240*t57243*(t57256-t57257))*(ccaa1*t57171* \
                   1.0/(t57261*t57261)*t57258*2.0-(ccaa2*t57171*t57258*2.0)/t57264+ccaa2*t57173*t57175*t57259*t57279* \
                   2.0-(ccaa4*t57173*t57175*t57259*1.2E1)/t57274+ccaa4*t57175*t57186*t57259*t57288*(t57171*t57258*1.2E1+ \
                   t57173*t57175*t57259*1.2E1+gamma_aa[index]*gcaa*t57176*t57258*2.4E1)-ccaa1*gamma_aa[index]*gcaa*1.0/ \
                   (t57261*t57261*t57261)*t57176*t57258*2.0-(ccaa3*gamma_aa[index]*gcaa*t57176*t57258*6.0)/t57268-ccaa2* \
                   t57171*t57173*1.0/(t57264*t57264*t57264)*(t57275*t57275)*t57258*2.0-ccaa4*t57175*1.0/(t57274*t57274* \
                   t57274)*t57186*t57259*(t57269*t57269)*2.0+ccaa2*gamma_aa[index]*t57171*t57275*t57258*t57279*4.0+ccaa4* \
                   gamma_aa[index]*t57173*t57175*t57259*t57269*t57288*8.0+ccaa3*gcaa*t57173*t57283*t57176*t57258*t57276* \
                   6.0+ccaa3*gamma_aa[index]*gcaa*t57173*t57176*t57258*t57276*(t57171*t57258*6.0+gamma_aa[index]*gcaa* \
                   t57176*t57258*6.0)-ccaa3*gamma_aa[index]*gcaa*t57173*(t57283*t57283)*t57176*t57258*1.0/(t57268*t57268* \
                   t57268)*2.0)*2.0-c0*pow(rho_a[index],4.0/3.0)*(cx1*1.0/(t57210*t57210)*t57171*t57207*2.0-(cx2*t57171* \
                   t57207*2.0)/t57213+cx2*t57208*t57173*t57228*t57175*2.0-(cx4*t57208*t57173*t57175*1.2E1)/t57223+cx4* \
                   t57208*t57237*t57175*t57186*(t57171*t57207*1.2E1+t57208*t57173*t57175*1.2E1+gamma_aa[index]*gx*t57207* \
                   t57176*2.4E1)-cx1*gamma_aa[index]*gx*1.0/(t57210*t57210*t57210)*t57207*t57176*2.0-(cx3*gamma_aa[index]* \
                   gx*t57207*t57176*6.0)/t57217-cx2*1.0/(t57213*t57213*t57213)*(t57224*t57224)*t57171*t57207*t57173*2.0- \
                   cx4*1.0/(t57223*t57223*t57223)*t57208*(t57218*t57218)*t57175*t57186*2.0+cx2*gamma_aa[index]*t57224* \
                   t57171*t57207*t57228*4.0+cx4*gamma_aa[index]*t57208*t57173*t57218*t57237*t57175*8.0+cx3*gx*t57232* \
                   t57207*t57225*t57173*t57176*6.0+cx3*gamma_aa[index]*gx*t57207*t57225*t57173*t57176*(t57171*t57207* \
                   6.0+gamma_aa[index]*gx*t57207*t57176*6.0)-cx3*gamma_aa[index]*gx*(t57232*t57232)*t57207*1.0/(t57217* \
                   t57217*t57217)*t57173*t57176*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void HCTH407_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccab3 = params_[28].second;
    double ccab4 = params_[29].second;
    double ccaa0 = params_[30].second;
    double ccaa1 = params_[31].second;
    double ccaa2 = params_[32].second;
    double ccaa3 = params_[33].second;
    double ccaa4 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cx4 = params_[39].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t51466 = 1.0/pow(rho_a[index],1.0/3.0);
            double t51467 = c*t51466;
            double t51468 = sqrt(t51467);
            double t51469 = pow(t51467,3.0/2.0);
            double t51470 = c*c;
            double t51471 = 1.0/pow(rho_a[index],2.0/3.0);
            double t51472 = 1.0/c0p;
            double t51473 = b1p*t51468;
            double t51474 = b3p*t51469;
            double t51475 = b4p*t51470*t51471;
            double t51476 = b2p*c*t51466;
            double t51477 = t51473+t51474+t51475+t51476;
            double t51478 = 1.0/t51477;
            double t51479 = t51472*t51478*(1.0/2.0);
            double t51480 = t51479+1.0;
            double t51481 = log(t51480);
            double t51482 = a1p*c*t51466;
            double t51483 = t51482+1.0;
            double t51484 = pow(2.0,1.0/3.0);
            double t51485 = t51484*2.0;
            double t51486 = t51485-2.0;
            double t51487 = two_13*2.0;
            double t51488 = t51487-2.0;
            double t51489 = 1.0/t51488;
            double t51490 = 1.0/c0f;
            double t51491 = 1.0/pow(rho_b[index],1.0/3.0);
            double t51492 = c*t51491;
            double t51493 = sqrt(t51492);
            double t51494 = pow(t51492,3.0/2.0);
            double t51495 = 1.0/pow(rho_b[index],2.0/3.0);
            double t51496 = b1p*t51493;
            double t51497 = b3p*t51494;
            double t51498 = b4p*t51470*t51495;
            double t51499 = b2p*c*t51491;
            double t51500 = t51496+t51497+t51498+t51499;
            double t51501 = 1.0/t51500;
            double t51502 = t51501*t51472*(1.0/2.0);
            double t51503 = t51502+1.0;
            double t51504 = log(t51503);
            double t51505 = a1p*c*t51491;
            double t51506 = t51505+1.0;
            double t51507 = c0p*t51504*t51506*2.0;
            double t51508 = rho_a[index]+rho_b[index];
            double t51509 = 1.0/pow(t51508,1.0/3.0);
            double t51510 = c*t51509;
            double t51511 = sqrt(t51510);
            double t51512 = pow(t51510,3.0/2.0);
            double t51513 = 1.0/pow(t51508,2.0/3.0);
            double t51514 = b1p*t51511;
            double t51515 = b3p*t51512;
            double t51516 = b4p*t51513*t51470;
            double t51517 = b2p*c*t51509;
            double t51518 = t51514+t51515+t51516+t51517;
            double t51519 = 1.0/t51518;
            double t51520 = t51472*t51519*(1.0/2.0);
            double t51521 = t51520+1.0;
            double t51522 = log(t51521);
            double t51523 = a1p*c*t51509;
            double t51524 = t51523+1.0;
            double t51525 = c0p*t51522*t51524*2.0;
            double t51526 = rho_a[index]-rho_b[index];
            double t51527 = t51526*t51526;
            double t51528 = 1.0/t51508;
            double t51529 = t51526*t51528;
            double t51530 = 1.0/(t51508*t51508*t51508*t51508);
            double t51531 = t51527*t51527;
            double t51532 = t51529+1.0;
            double t51533 = pow(t51532,4.0/3.0);
            double t51534 = -t51529+1.0;
            double t51535 = pow(t51534,4.0/3.0);
            double t51536 = t51533+t51535-2.0;
            double t51539 = 1.0/pow(rho_a[index],8.0/3.0);
            double t51540 = gamma_aa[index]*t51539*(1.0/2.0);
            double t51541 = 1.0/pow(rho_b[index],8.0/3.0);
            double t51542 = gamma_bb[index]*t51541*(1.0/2.0);
            double t51537 = t51540+t51542;
            double t51538 = gcab*gcab;
            double t51543 = t51537*t51537;
            double t51544 = t51538*t51538;
            double t51545 = t51543*t51543;
            double t51546 = c0p*t51481*t51483*2.0;
            double t51547 = b1f*t51468;
            double t51548 = b3f*t51469;
            double t51549 = b4f*t51470*t51471;
            double t51550 = b2f*c*t51466;
            double t51551 = t51550+t51547+t51548+t51549;
            double t51552 = 1.0/t51551;
            double t51553 = t51552*t51490*(1.0/2.0);
            double t51554 = t51553+1.0;
            double t51555 = log(t51554);
            double t51556 = a1f*c*t51466;
            double t51557 = t51556+1.0;
            double t51558 = t51546-c0f*t51555*t51557*2.0;
            double t51559 = t51546-t51486*t51558*t51489;
            double t51560 = gamma_aa[index]*gamma_aa[index];
            double t51561 = gcaa*gcaa;
            double t51562 = t51560*t51560;
            double t51563 = t51561*t51561;
            double t51564 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t51565 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t51566 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t51567 = b1f*t51493;
            double t51568 = b3f*t51494;
            double t51569 = b4f*t51470*t51495;
            double t51570 = b2f*c*t51491;
            double t51571 = t51570+t51567+t51568+t51569;
            double t51572 = 1.0/t51571;
            double t51573 = t51490*t51572*(1.0/2.0);
            double t51574 = t51573+1.0;
            double t51575 = log(t51574);
            double t51576 = a1f*c*t51491;
            double t51577 = t51576+1.0;
            double t51578 = t51507-c0f*t51575*t51577*2.0;
            double t51579 = t51507-t51486*t51578*t51489;
            double t51580 = gamma_bb[index]*gamma_bb[index];
            double t51581 = t51580*t51580;
            double t51582 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t51583 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t51584 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t51585 = gx*gx;
            double t51586 = t51585*t51585;
            functional_[index] = (rho_a[index]*t51559+rho_b[index]*t51579-t51508*(t51525-t51530*t51531*t51536* \
               t51489*(t51525-c0f*log((t51490*(1.0/2.0))/(b1f*t51511+b3f*t51512+b2f*c*t51509+b4f*t51513*t51470)+1.0) \
               *(a1f*c*t51509+1.0)*2.0)+(Aa*t51536*t51489*log((1.0/2.0)/(Aa*(b1a*t51511+b3a*t51512+b2a*c*t51509+b4a* \
               t51513*t51470))+1.0)*(t51530*t51531-1.0)*(a1a*c*t51509+1.0)*2.0)/d2fz0))*(ccab0+(ccab4*t51544*t51545) \
               /(gcab*t51537*4.0+t51544*t51545+t51543*t51538*6.0+gcab*t51543*t51537*t51538*4.0+1.0)+(ccab1*gcab*t51537) \
               /(gcab*t51537+1.0)+(ccab2*t51543*t51538)/(gcab*t51537*2.0+t51543*t51538+1.0)+(ccab3*gcab*t51543*t51537* \
               t51538)/(gcab*t51537*3.0+t51543*t51538*3.0+gcab*t51543*t51537*t51538+1.0))+c0*pow(rho_b[index],4.0/ \
               3.0)*(cx0+(cx2*t51580*t51584*t51585)/(gamma_bb[index]*gx*t51541*2.0+t51580*t51584*t51585+1.0)+(cx1* \
               gamma_bb[index]*gx*t51541)/(gamma_bb[index]*gx*t51541+1.0)+(cx4*t51581*t51582*t51586)/(gamma_bb[index]* \
               gx*t51541*4.0+t51580*t51584*t51585*6.0+t51581*t51582*t51586+gamma_bb[index]*gx*t51580*t51583*t51585* \
               4.0+1.0)+(cx3*gamma_bb[index]*gx*t51580*t51583*t51585)/(gamma_bb[index]*gx*t51541*3.0+t51580*t51584* \
               t51585*3.0+gamma_bb[index]*gx*t51580*t51583*t51585+1.0))+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t51560* \
               t51566*t51585)/(gamma_aa[index]*gx*t51539*2.0+t51560*t51566*t51585+1.0)+(cx1*gamma_aa[index]*gx*t51539) \
               /(gamma_aa[index]*gx*t51539+1.0)+(cx4*t51562*t51564*t51586)/(gamma_aa[index]*gx*t51539*4.0+t51560* \
               t51566*t51585*6.0+t51562*t51564*t51586+gamma_aa[index]*gx*t51560*t51565*t51585*4.0+1.0)+(cx3*gamma_aa[index]* \
               gx*t51560*t51565*t51585)/(gamma_aa[index]*gx*t51539*3.0+t51560*t51566*t51585*3.0+gamma_aa[index]*gx* \
               t51560*t51565*t51585+1.0))-rho_a[index]*t51559*(ccaa0+(ccaa2*t51560*t51561*t51566)/(gamma_aa[index]* \
               gcaa*t51539*2.0+t51560*t51561*t51566+1.0)+(ccaa1*gamma_aa[index]*gcaa*t51539)/(gamma_aa[index]*gcaa* \
               t51539+1.0)+(ccaa4*t51562*t51563*t51564)/(gamma_aa[index]*gcaa*t51539*4.0+t51560*t51561*t51566*6.0+ \
               t51562*t51563*t51564+gamma_aa[index]*gcaa*t51560*t51561*t51565*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t51560*t51561*t51565)/(gamma_aa[index]*gcaa*t51539*3.0+t51560*t51561*t51566*3.0+gamma_aa[index]*gcaa* \
               t51560*t51561*t51565+1.0))-rho_b[index]*t51579*(ccaa0+(ccaa2*t51561*t51580*t51584)/(gamma_bb[index]* \
               gcaa*t51541*2.0+t51561*t51580*t51584+1.0)+(ccaa1*gamma_bb[index]*gcaa*t51541)/(gamma_bb[index]*gcaa* \
               t51541+1.0)+(ccaa4*t51563*t51581*t51582)/(gamma_bb[index]*gcaa*t51541*4.0+t51561*t51580*t51584*6.0+ \
               t51563*t51581*t51582+gamma_bb[index]*gcaa*t51561*t51580*t51583*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa* \
               t51561*t51580*t51583)/(gamma_bb[index]*gcaa*t51541*3.0+t51561*t51580*t51584*3.0+gamma_bb[index]*gcaa* \
               t51561*t51580*t51583+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t55613 = 1.0/pow(rho_a[index],1.0/3.0);
            double t55614 = c*t55613;
            double t55615 = sqrt(t55614);
            double t55616 = pow(t55614,3.0/2.0);
            double t55617 = c*c;
            double t55618 = 1.0/pow(rho_a[index],2.0/3.0);
            double t55619 = 1.0/c0p;
            double t55620 = b1p*t55615;
            double t55621 = b3p*t55616;
            double t55622 = b4p*t55617*t55618;
            double t55623 = b2p*c*t55613;
            double t55624 = t55620+t55621+t55622+t55623;
            double t55625 = 1.0/t55624;
            double t55626 = t55625*t55619*(1.0/2.0);
            double t55627 = t55626+1.0;
            double t55628 = log(t55627);
            double t55629 = a1p*c*t55613;
            double t55630 = t55629+1.0;
            double t55631 = gamma_aa[index]*gamma_aa[index];
            double t55632 = gcaa*gcaa;
            double t55633 = t55631*t55631;
            double t55634 = t55632*t55632;
            double t55635 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t55636 = 1.0/pow(rho_a[index],8.0/3.0);
            double t55637 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t55638 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t55639 = gx*gx;
            double t55640 = t55639*t55639;
            functional_[index] = c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t55631*t55638*t55639)/(gamma_aa[index]* \
               gx*t55636*2.0+t55631*t55638*t55639+1.0)+(cx1*gamma_aa[index]*gx*t55636)/(gamma_aa[index]*gx*t55636+ \
               1.0)+(cx4*t55640*t55633*t55635)/(gamma_aa[index]*gx*t55636*4.0+t55640*t55633*t55635+t55631*t55638* \
               t55639*6.0+gamma_aa[index]*gx*t55631*t55637*t55639*4.0+1.0)+(cx3*gamma_aa[index]*gx*t55631*t55637* \
               t55639)/(gamma_aa[index]*gx*t55636*3.0+t55631*t55638*t55639*3.0+gamma_aa[index]*gx*t55631*t55637*t55639+ \
               1.0))-rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t55615+b3f*t55616+b2f* \
               c*t55613+b4f*t55617*t55618))+1.0)*(a1f*c*t55613+1.0)*2.0-c0p*t55630*t55628*2.0))/(two_13*2.0-2.0)+ \
               c0p*t55630*t55628*2.0)*(ccaa0+(ccaa2*t55631*t55632*t55638)/(gamma_aa[index]*gcaa*t55636*2.0+t55631* \
               t55632*t55638+1.0)+(ccaa1*gamma_aa[index]*gcaa*t55636)/(gamma_aa[index]*gcaa*t55636+1.0)+(ccaa4*t55633* \
               t55634*t55635)/(gamma_aa[index]*gcaa*t55636*4.0+t55631*t55632*t55638*6.0+t55633*t55634*t55635+gamma_aa[index]* \
               gcaa*t55631*t55632*t55637*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t55631*t55632*t55637)/(gamma_aa[index]* \
               gcaa*t55636*3.0+t55631*t55632*t55638*3.0+gamma_aa[index]*gcaa*t55631*t55632*t55637+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t54974 = 1.0/pow(rho_b[index],1.0/3.0);
            double t54975 = c*t54974;
            double t54976 = sqrt(t54975);
            double t54977 = pow(t54975,3.0/2.0);
            double t54978 = c*c;
            double t54979 = 1.0/pow(rho_b[index],2.0/3.0);
            double t54980 = 1.0/c0p;
            double t54981 = b1p*t54976;
            double t54982 = b3p*t54977;
            double t54983 = b4p*t54978*t54979;
            double t54984 = b2p*c*t54974;
            double t54985 = t54981+t54982+t54983+t54984;
            double t54986 = 1.0/t54985;
            double t54987 = t54980*t54986*(1.0/2.0);
            double t54988 = t54987+1.0;
            double t54989 = log(t54988);
            double t54990 = a1p*c*t54974;
            double t54991 = t54990+1.0;
            double t54992 = gamma_bb[index]*gamma_bb[index];
            double t54993 = gcaa*gcaa;
            double t54994 = t54992*t54992;
            double t54995 = t54993*t54993;
            double t54996 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t54997 = 1.0/pow(rho_b[index],8.0/3.0);
            double t54998 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t54999 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t55000 = gx*gx;
            double t55001 = t55000*t55000;
            functional_[index] = c0*pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t54992*t54999*t55000)/(gamma_bb[index]* \
               gx*t54997*2.0+t54992*t54999*t55000+1.0)+(cx1*gamma_bb[index]*gx*t54997)/(gamma_bb[index]*gx*t54997+ \
               1.0)+(cx4*t54994*t54996*t55001)/(gamma_bb[index]*gx*t54997*4.0+t54992*t54999*t55000*6.0+t54994*t54996* \
               t55001+gamma_bb[index]*gx*t54992*t54998*t55000*4.0+1.0)+(cx3*gamma_bb[index]*gx*t54992*t54998*t55000) \
               /(gamma_bb[index]*gx*t54997*3.0+t54992*t54999*t55000*3.0+gamma_bb[index]*gx*t54992*t54998*t55000+1.0) \
               )-rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t54976+b3f*t54977+b2f*c*t54974+ \
               b4f*t54978*t54979))+1.0)*(a1f*c*t54974+1.0)*2.0-c0p*t54991*t54989*2.0))/(two_13*2.0-2.0)+c0p*t54991* \
               t54989*2.0)*(ccaa0+(ccaa2*t54992*t54993*t54999)/(gamma_bb[index]*gcaa*t54997*2.0+t54992*t54993*t54999+ \
               1.0)+(ccaa1*gamma_bb[index]*gcaa*t54997)/(gamma_bb[index]*gcaa*t54997+1.0)+(ccaa4*t54994*t54995*t54996) \
               /(gamma_bb[index]*gcaa*t54997*4.0+t54992*t54993*t54999*6.0+t54994*t54995*t54996+gamma_bb[index]*gcaa* \
               t54992*t54993*t54998*4.0+1.0)+(ccaa3*gamma_bb[index]*gcaa*t54992*t54993*t54998)/(gamma_bb[index]*gcaa* \
               t54997*3.0+t54992*t54993*t54999*3.0+gamma_bb[index]*gcaa*t54992*t54993*t54998+1.0));
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t51588 = 1.0/pow(rho_a[index],1.0/3.0);
            double t51589 = c*t51588;
            double t51590 = sqrt(t51589);
            double t51591 = pow(t51589,3.0/2.0);
            double t51592 = c*c;
            double t51593 = 1.0/pow(rho_a[index],2.0/3.0);
            double t51594 = 1.0/c0p;
            double t51595 = b1p*t51590;
            double t51596 = b3p*t51591;
            double t51597 = b4p*t51592*t51593;
            double t51598 = b2p*c*t51588;
            double t51599 = t51595+t51596+t51597+t51598;
            double t51600 = 1.0/t51599;
            double t51601 = t51600*t51594*(1.0/2.0);
            double t51602 = t51601+1.0;
            double t51603 = log(t51602);
            double t51604 = a1p*c*t51588;
            double t51605 = t51604+1.0;
            double t51606 = gamma_aa[index]*gamma_aa[index];
            double t51607 = gcaa*gcaa;
            double t51608 = t51606*t51606;
            double t51609 = t51607*t51607;
            double t51610 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t51611 = 1.0/pow(rho_a[index],8.0/3.0);
            double t51612 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t51613 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t51614 = pow(2.0,1.0/3.0);
            double t51615 = t51614*2.0;
            double t51616 = t51615-2.0;
            double t51617 = two_13*2.0;
            double t51618 = t51617-2.0;
            double t51619 = 1.0/t51618;
            double t51620 = 1.0/c0f;
            double t51621 = b1f*t51590;
            double t51622 = b3f*t51591;
            double t51623 = b4f*t51592*t51593;
            double t51624 = b2f*c*t51588;
            double t51625 = t51621+t51622+t51623+t51624;
            double t51626 = 1.0/t51625;
            double t51627 = t51620*t51626*(1.0/2.0);
            double t51628 = t51627+1.0;
            double t51629 = log(t51628);
            double t51630 = a1f*c*t51588;
            double t51631 = t51630+1.0;
            double t51632 = c0f*t51631*t51629*2.0;
            double t51633 = c0p*t51603*t51605*2.0;
            double t51634 = 1.0/pow(rho_b[index],1.0/3.0);
            double t51635 = c*t51634;
            double t51636 = sqrt(t51635);
            double t51637 = pow(t51635,3.0/2.0);
            double t51638 = 1.0/pow(rho_b[index],2.0/3.0);
            double t51639 = b1p*t51636;
            double t51640 = b3p*t51637;
            double t51641 = b4p*t51592*t51638;
            double t51642 = b2p*c*t51634;
            double t51643 = t51640+t51641+t51642+t51639;
            double t51644 = 1.0/t51643;
            double t51645 = t51644*t51594*(1.0/2.0);
            double t51646 = t51645+1.0;
            double t51647 = log(t51646);
            double t51648 = a1p*c*t51634;
            double t51649 = t51648+1.0;
            double t51650 = c0p*t51647*t51649*2.0;
            double t51651 = rho_a[index]+rho_b[index];
            double t51652 = 1.0/pow(t51651,1.0/3.0);
            double t51653 = c*t51652;
            double t51654 = sqrt(t51653);
            double t51655 = pow(t51653,3.0/2.0);
            double t51656 = 1.0/pow(t51651,2.0/3.0);
            double t51657 = b1p*t51654;
            double t51658 = b3p*t51655;
            double t51659 = b4p*t51592*t51656;
            double t51660 = b2p*c*t51652;
            double t51661 = t51660+t51657+t51658+t51659;
            double t51662 = 1.0/t51661;
            double t51663 = t51662*t51594*(1.0/2.0);
            double t51664 = t51663+1.0;
            double t51665 = log(t51664);
            double t51666 = a1p*c*t51652;
            double t51667 = t51666+1.0;
            double t51668 = c0p*t51665*t51667*2.0;
            double t51669 = rho_a[index]-rho_b[index];
            double t51670 = t51669*t51669;
            double t51671 = 1.0/t51651;
            double t51672 = t51671*t51669;
            double t51673 = 1.0/(t51651*t51651*t51651*t51651);
            double t51674 = t51670*t51670;
            double t51675 = t51672+1.0;
            double t51676 = pow(t51675,4.0/3.0);
            double t51677 = -t51672+1.0;
            double t51678 = pow(t51677,4.0/3.0);
            double t51679 = t51676+t51678-2.0;
            double t51680 = gcab*gcab;
            double t51684 = gamma_aa[index]*t51611*(1.0/2.0);
            double t51685 = 1.0/pow(rho_b[index],8.0/3.0);
            double t51686 = gamma_bb[index]*t51685*(1.0/2.0);
            double t51681 = t51684+t51686;
            double t51682 = t51681*t51681;
            double t51683 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t51687 = t51680*t51680;
            double t51688 = t51682*t51682;
            double t51689 = t51680*t51682*6.0;
            double t51690 = gcab*t51680*t51681*t51682*4.0;
            double t51691 = t51687*t51688;
            double t51692 = gcab*t51681*4.0;
            double t51693 = t51690+t51691+t51692+t51689+1.0;
            double t51694 = gcab*t51681;
            double t51695 = t51694+1.0;
            double t51696 = t51680*t51682;
            double t51697 = gcab*t51681*2.0;
            double t51698 = t51696+t51697+1.0;
            double t51699 = t51680*t51682*3.0;
            double t51700 = gcab*t51680*t51681*t51682;
            double t51701 = gcab*t51681*3.0;
            double t51702 = t51700+t51701+t51699+1.0;
            double t51703 = 1.0/t51698;
            double t51704 = 1.0/t51702;
            double t51705 = 1.0/t51695;
            double t51706 = 1.0/t51693;
            double t51707 = 1.0/pow(t51651,4.0/3.0);
            double t51708 = b1f*t51654;
            double t51709 = b3f*t51655;
            double t51710 = b4f*t51592*t51656;
            double t51711 = b2f*c*t51652;
            double t51712 = t51710+t51711+t51708+t51709;
            double t51713 = 1.0/t51712;
            double t51714 = t51620*t51713*(1.0/2.0);
            double t51715 = t51714+1.0;
            double t51716 = log(t51715);
            double t51717 = a1f*c*t51652;
            double t51718 = t51717+1.0;
            double t51720 = c0f*t51716*t51718*2.0;
            double t51719 = -t51720+t51668;
            double t51721 = 1.0/(t51651*t51651);
            double t51749 = t51721*t51669;
            double t51722 = t51671-t51749;
            double t51723 = t51720-t51668;
            double t51724 = 1.0/pow(t51651,5.0/3.0);
            double t51725 = 1.0/sqrt(t51653);
            double t51726 = 1.0/t51664;
            double t51727 = 1.0/(t51661*t51661);
            double t51728 = b4p*t51724*t51592*(2.0/3.0);
            double t51729 = b2p*c*t51707*(1.0/3.0);
            double t51730 = b1p*c*t51707*t51725*(1.0/6.0);
            double t51731 = b3p*c*t51707*t51654*(1.0/2.0);
            double t51732 = t51730+t51731+t51728+t51729;
            double t51733 = t51732*t51726*t51727*t51667;
            double t51734 = 1.0/d2fz0;
            double t51735 = 1.0/Aa;
            double t51736 = b1a*t51654;
            double t51737 = b3a*t51655;
            double t51738 = b4a*t51592*t51656;
            double t51739 = b2a*c*t51652;
            double t51740 = t51736+t51737+t51738+t51739;
            double t51741 = 1.0/t51740;
            double t51742 = t51741*t51735*(1.0/2.0);
            double t51743 = t51742+1.0;
            double t51744 = log(t51743);
            double t51745 = a1a*c*t51652;
            double t51746 = t51745+1.0;
            double t51747 = 1.0/(t51651*t51651*t51651*t51651*t51651);
            double t51748 = pow(t51675,1.0/3.0);
            double t51750 = t51722*t51748*(4.0/3.0);
            double t51751 = pow(t51677,1.0/3.0);
            double t51752 = t51750-t51722*t51751*(4.0/3.0);
            double t51753 = t51673*t51674;
            double t51754 = t51753-1.0;
            double t51755 = 1.0/pow(rho_a[index],4.0/3.0);
            double t51756 = 1.0/pow(rho_a[index],5.0/3.0);
            double t51757 = 1.0/sqrt(t51589);
            double t51758 = 1.0/t51602;
            double t51759 = 1.0/(t51599*t51599);
            double t51760 = b4p*t51592*t51756*(2.0/3.0);
            double t51761 = b2p*c*t51755*(1.0/3.0);
            double t51762 = b1p*c*t51755*t51757*(1.0/6.0);
            double t51763 = b3p*c*t51590*t51755*(1.0/2.0);
            double t51764 = t51760+t51761+t51762+t51763;
            double t51765 = t51605*t51764*t51758*t51759;
            double t51766 = t51632-t51633;
            double t51767 = t51616*t51619*t51766;
            double t51768 = Aa*t51734*t51744*t51619*t51754*t51746*t51679*2.0;
            double t51769 = t51633+t51767;
            double t51770 = gamma_aa[index]*gcaa*t51611*4.0;
            double t51771 = gamma_aa[index]*gcaa*t51612*t51606*t51607*4.0;
            double t51772 = t51613*t51606*t51607*6.0;
            double t51773 = t51610*t51608*t51609;
            double t51774 = t51770+t51771+t51772+t51773+1.0;
            double t51775 = 1.0/t51774;
            double t51776 = gamma_aa[index]*gcaa*t51611;
            double t51777 = t51776+1.0;
            double t51778 = 1.0/t51777;
            double t51779 = gamma_aa[index]*gcaa*t51611*3.0;
            double t51780 = gamma_aa[index]*gcaa*t51612*t51606*t51607;
            double t51781 = t51613*t51606*t51607*3.0;
            double t51782 = t51780+t51781+t51779+1.0;
            double t51783 = 1.0/t51782;
            double t51784 = gamma_aa[index]*gcaa*t51611*2.0;
            double t51785 = t51613*t51606*t51607;
            double t51786 = t51784+t51785+1.0;
            double t51787 = 1.0/t51786;
            double t51788 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t51789 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t51790 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t51791 = gx*gx;
            double t51792 = t51791*t51791;
            double t51793 = gamma_aa[index]*gx*t51611*4.0;
            double t51794 = gamma_aa[index]*gx*t51612*t51606*t51791*4.0;
            double t51795 = t51613*t51606*t51791*6.0;
            double t51796 = t51610*t51608*t51792;
            double t51797 = t51793+t51794+t51795+t51796+1.0;
            double t51798 = 1.0/t51797;
            double t51799 = gamma_aa[index]*gx*t51611;
            double t51800 = t51799+1.0;
            double t51801 = 1.0/t51800;
            double t51802 = gamma_aa[index]*gx*t51611*3.0;
            double t51803 = gamma_aa[index]*gx*t51612*t51606*t51791;
            double t51804 = t51613*t51606*t51791*3.0;
            double t51805 = t51802+t51803+t51804+1.0;
            double t51806 = 1.0/t51805;
            double t51807 = gamma_aa[index]*gx*t51611*2.0;
            double t51808 = t51613*t51606*t51791;
            double t51809 = t51807+t51808+1.0;
            double t51810 = 1.0/t51809;
            double t51811 = 1.0/t51628;
            double t51812 = 1.0/(t51625*t51625);
            double t51813 = b4f*t51592*t51756*(2.0/3.0);
            double t51814 = b2f*c*t51755*(1.0/3.0);
            double t51815 = b1f*c*t51755*t51757*(1.0/6.0);
            double t51816 = b3f*c*t51590*t51755*(1.0/2.0);
            double t51817 = t51813+t51814+t51815+t51816;
            double t51818 = a1f*c*c0f*t51629*t51755*(2.0/3.0);
            double t51819 = a1p*c*c0p*t51603*t51755*(2.0/3.0);
            double t51820 = ccaa4*t51610*t51608*t51609*t51775;
            double t51821 = ccaa1*gamma_aa[index]*gcaa*t51611*t51778;
            double t51822 = ccaa3*gamma_aa[index]*gcaa*t51612*t51606*t51607*t51783;
            double t51823 = ccaa2*t51613*t51606*t51607*t51787;
            double t51824 = ccaa0+t51820+t51821+t51822+t51823;
            v_rho_a_[index] = -(ccab0+ccab1*gcab*t51705*t51681+ccab2*t51703*t51680*t51682+ccab4*t51706*t51687* \
               t51688+ccab3*gcab*t51704*t51680*t51681*t51682)*(-t51633+t51668-t51767+t51768+rho_a[index]*(-t51765+ \
               t51819+t51616*t51619*(t51818+t51765-t51631*t51811*t51812*t51817-a1p*c*c0p*t51603*t51755*(2.0/3.0)) \
               )-t51651*(-t51733+t51619*t51673*t51674*t51679*(t51733-(1.0/(t51712*t51712)*t51718*(b2f*c*t51707*(1.0/ \
               3.0)+b4f*t51724*t51592*(2.0/3.0)+b1f*c*t51707*t51725*(1.0/6.0)+b3f*c*t51707*t51654*(1.0/2.0)))/t51715+ \
               a1f*c*c0f*t51707*t51716*(2.0/3.0)-a1p*c*c0p*t51707*t51665*(2.0/3.0))+a1p*c*c0p*t51707*t51665*(2.0/ \
               3.0)-t51723*t51752*t51619*t51673*t51674+t51723*t51619*t51674*t51747*t51679*4.0+t51670*t51619*t51673* \
               t51719*t51669*t51679*4.0+Aa*t51734*t51744*t51619*t51746*t51679*(t51674*t51747*4.0-t51670*t51673*t51669* \
               4.0)*2.0-Aa*t51734*t51752*t51744*t51619*t51754*t51746*2.0-(1.0/(t51740*t51740)*t51734*t51619*t51754* \
               t51746*t51679*(b2a*c*t51707*(1.0/3.0)+b4a*t51724*t51592*(2.0/3.0)+b1a*c*t51707*t51725*(1.0/6.0)+b3a* \
               c*t51707*t51654*(1.0/2.0)))/t51743+Aa*a1a*c*t51707*t51734*t51744*t51619*t51754*t51679*(2.0/3.0))+t51723* \
               t51619*t51673*t51674*t51679)-t51824*(t51633+t51616*t51619*(t51632-c0p*t51603*t51605*2.0))-(rho_a[index]* \
               t51769+rho_b[index]*(t51650-t51616*t51619*(t51650-c0f*log((t51620*(1.0/2.0))/(b1f*t51636+b3f*t51637+ \
               b2f*c*t51634+b4f*t51592*t51638)+1.0)*(a1f*c*t51634+1.0)*2.0))-t51651*(t51668+t51768-t51619*t51673* \
               t51674*t51719*t51679))*(ccab1*gamma_aa[index]*gcab*t51705*t51683*(4.0/3.0)-ccab2*t51680*t51682*1.0/ \
               (t51698*t51698)*(gamma_aa[index]*gcab*t51683*(8.0/3.0)+gamma_aa[index]*t51680*t51681*t51683*(8.0/3.0) \
               )-ccab4*1.0/(t51693*t51693)*t51687*t51688*(gamma_aa[index]*gcab*t51683*(1.6E1/3.0)+gamma_aa[index]* \
               t51680*t51681*t51683*1.6E1+gamma_aa[index]*gcab*t51680*t51682*t51683*1.6E1+gamma_aa[index]*t51681* \
               t51682*t51683*t51687*(1.6E1/3.0))-ccab1*gamma_aa[index]*t51680*t51681*t51683*1.0/(t51695*t51695)*(4.0/ \
               3.0)+ccab2*gamma_aa[index]*t51703*t51680*t51681*t51683*(8.0/3.0)-ccab3*gcab*1.0/(t51702*t51702)*t51680* \
               t51681*t51682*(gamma_aa[index]*gcab*t51683*4.0+gamma_aa[index]*t51680*t51681*t51683*8.0+gamma_aa[index]* \
               gcab*t51680*t51682*t51683*4.0)+ccab3*gamma_aa[index]*gcab*t51704*t51680*t51682*t51683*4.0+ccab4*gamma_aa[index]* \
               t51706*t51681*t51682*t51683*t51687*(1.6E1/3.0))+rho_a[index]*t51769*(ccaa1*gamma_aa[index]*gcaa*t51683* \
               t51778*(8.0/3.0)+ccaa4*t51608*t51609*t51790*t51775*(3.2E1/3.0)+ccaa2*t51606*t51607*t51787*t51788*(1.6E1/ \
               3.0)-ccaa1*t51606*t51607*1.0/(t51777*t51777)*t51788*(8.0/3.0)-ccaa2*t51613*t51606*t51607*1.0/(t51786* \
               t51786)*(gamma_aa[index]*gcaa*t51683*(1.6E1/3.0)+t51606*t51607*t51788*(1.6E1/3.0))-ccaa4*t51610*t51608* \
               t51609*1.0/(t51774*t51774)*(gamma_aa[index]*gcaa*t51683*(3.2E1/3.0)+t51608*t51609*t51790*(3.2E1/3.0) \
               +t51606*t51607*t51788*3.2E1+gamma_aa[index]*gcaa*t51606*t51607*t51789*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t51606*t51607*t51783*t51789*8.0-ccaa3*gamma_aa[index]*gcaa*t51612*t51606*t51607*1.0/(t51782*t51782) \
               *(gamma_aa[index]*gcaa*t51683*8.0+t51606*t51607*t51788*1.6E1+gamma_aa[index]*gcaa*t51606*t51607*t51789* \
               8.0))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]*gx*t51611*t51801+cx2*t51810*t51613*t51606* \
               t51791+cx4*t51610*t51608*t51792*t51798+cx3*gamma_aa[index]*gx*t51612*t51606*t51806*t51791)*(4.0/3.0) \
               +rho_a[index]*t51824*(-t51765+t51819+t51616*t51619*(t51818+t51765-t51819-t51631*t51811*t51812*t51817) \
               )-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t51801*t51683*(8.0/3.0)+cx2*t51810*t51606*t51791* \
               t51788*(1.6E1/3.0)+cx4*t51608*t51790*t51792*t51798*(3.2E1/3.0)-cx1*1.0/(t51800*t51800)*t51606*t51791* \
               t51788*(8.0/3.0)-cx2*t51613*t51606*t51791*1.0/(t51809*t51809)*(gamma_aa[index]*gx*t51683*(1.6E1/3.0) \
               +t51606*t51791*t51788*(1.6E1/3.0))-cx4*t51610*t51608*t51792*1.0/(t51797*t51797)*(gamma_aa[index]*gx* \
               t51683*(3.2E1/3.0)+t51608*t51790*t51792*(3.2E1/3.0)+t51606*t51791*t51788*3.2E1+gamma_aa[index]*gx* \
               t51606*t51791*t51789*3.2E1)+cx3*gamma_aa[index]*gx*t51606*t51806*t51791*t51789*8.0-cx3*gamma_aa[index]* \
               gx*t51612*t51606*1.0/(t51805*t51805)*t51791*(gamma_aa[index]*gx*t51683*8.0+t51606*t51791*t51788*1.6E1+ \
               gamma_aa[index]*gx*t51606*t51791*t51789*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t55642 = 1.0/pow(rho_a[index],1.0/3.0);
            double t55643 = c*t55642;
            double t55644 = sqrt(t55643);
            double t55645 = pow(t55643,3.0/2.0);
            double t55646 = c*c;
            double t55647 = 1.0/pow(rho_a[index],2.0/3.0);
            double t55648 = 1.0/c0p;
            double t55649 = b1p*t55644;
            double t55650 = b3p*t55645;
            double t55651 = b4p*t55646*t55647;
            double t55652 = b2p*c*t55642;
            double t55653 = t55650+t55651+t55652+t55649;
            double t55654 = 1.0/t55653;
            double t55655 = t55654*t55648*(1.0/2.0);
            double t55656 = t55655+1.0;
            double t55657 = log(t55656);
            double t55658 = a1p*c*t55642;
            double t55659 = t55658+1.0;
            double t55660 = gamma_aa[index]*gamma_aa[index];
            double t55661 = gcaa*gcaa;
            double t55662 = t55660*t55660;
            double t55663 = t55661*t55661;
            double t55664 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t55665 = 1.0/pow(rho_a[index],8.0/3.0);
            double t55666 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t55667 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t55668 = pow(2.0,1.0/3.0);
            double t55669 = t55668*2.0;
            double t55670 = t55669-2.0;
            double t55671 = two_13*2.0;
            double t55672 = t55671-2.0;
            double t55673 = 1.0/t55672;
            double t55674 = 1.0/c0f;
            double t55675 = b1f*t55644;
            double t55676 = b3f*t55645;
            double t55677 = b4f*t55646*t55647;
            double t55678 = b2f*c*t55642;
            double t55679 = t55675+t55676+t55677+t55678;
            double t55680 = 1.0/t55679;
            double t55681 = t55680*t55674*(1.0/2.0);
            double t55682 = t55681+1.0;
            double t55683 = log(t55682);
            double t55684 = a1f*c*t55642;
            double t55685 = t55684+1.0;
            double t55686 = c0f*t55683*t55685*2.0;
            double t55687 = c0p*t55657*t55659*2.0;
            double t55688 = gamma_aa[index]*gcaa*t55665*4.0;
            double t55689 = gamma_aa[index]*gcaa*t55660*t55661*t55666*4.0;
            double t55690 = t55660*t55661*t55667*6.0;
            double t55691 = t55662*t55663*t55664;
            double t55692 = t55690+t55691+t55688+t55689+1.0;
            double t55693 = 1.0/t55692;
            double t55694 = gamma_aa[index]*gcaa*t55665;
            double t55695 = t55694+1.0;
            double t55696 = 1.0/t55695;
            double t55697 = gamma_aa[index]*gcaa*t55665*3.0;
            double t55698 = gamma_aa[index]*gcaa*t55660*t55661*t55666;
            double t55699 = t55660*t55661*t55667*3.0;
            double t55700 = t55697+t55698+t55699+1.0;
            double t55701 = 1.0/t55700;
            double t55702 = gamma_aa[index]*gcaa*t55665*2.0;
            double t55703 = t55660*t55661*t55667;
            double t55704 = t55702+t55703+1.0;
            double t55705 = 1.0/t55704;
            double t55706 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t55707 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t55708 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t55709 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t55710 = gx*gx;
            double t55711 = t55710*t55710;
            double t55712 = gamma_aa[index]*gx*t55665*4.0;
            double t55713 = gamma_aa[index]*gx*t55710*t55660*t55666*4.0;
            double t55714 = t55710*t55660*t55667*6.0;
            double t55715 = t55711*t55662*t55664;
            double t55716 = t55712+t55713+t55714+t55715+1.0;
            double t55717 = 1.0/t55716;
            double t55718 = gamma_aa[index]*gx*t55665;
            double t55719 = t55718+1.0;
            double t55720 = 1.0/t55719;
            double t55721 = gamma_aa[index]*gx*t55665*3.0;
            double t55722 = gamma_aa[index]*gx*t55710*t55660*t55666;
            double t55723 = t55710*t55660*t55667*3.0;
            double t55724 = t55721+t55722+t55723+1.0;
            double t55725 = 1.0/t55724;
            double t55726 = gamma_aa[index]*gx*t55665*2.0;
            double t55727 = t55710*t55660*t55667;
            double t55728 = t55726+t55727+1.0;
            double t55729 = 1.0/t55728;
            double t55730 = 1.0/pow(rho_a[index],4.0/3.0);
            double t55731 = 1.0/pow(rho_a[index],5.0/3.0);
            double t55732 = 1.0/sqrt(t55643);
            double t55733 = 1.0/t55656;
            double t55734 = 1.0/(t55653*t55653);
            double t55735 = b4p*t55731*t55646*(2.0/3.0);
            double t55736 = b2p*c*t55730*(1.0/3.0);
            double t55737 = b1p*c*t55730*t55732*(1.0/6.0);
            double t55738 = b3p*c*t55730*t55644*(1.0/2.0);
            double t55739 = t55735+t55736+t55737+t55738;
            double t55740 = t55733*t55734*t55739*t55659;
            double t55741 = ccaa4*t55662*t55663*t55664*t55693;
            double t55742 = ccaa1*gamma_aa[index]*gcaa*t55665*t55696;
            double t55743 = ccaa3*gamma_aa[index]*gcaa*t55701*t55660*t55661*t55666;
            double t55744 = ccaa2*t55660*t55705*t55661*t55667;
            double t55745 = ccaa0+t55741+t55742+t55743+t55744;
            v_rho_a_[index] = -t55745*(t55687+t55670*t55673*(t55686-c0p*t55657*t55659*2.0))+rho_a[index]*t55745* \
               (-t55740+t55670*t55673*(t55740-(t55685*1.0/(t55679*t55679)*(b2f*c*t55730*(1.0/3.0)+b4f*t55731*t55646* \
               (2.0/3.0)+b1f*c*t55730*t55732*(1.0/6.0)+b3f*c*t55730*t55644*(1.0/2.0)))/t55682+a1f*c*c0f*t55730*t55683* \
               (2.0/3.0)-a1p*c*c0p*t55730*t55657*(2.0/3.0))+a1p*c*c0p*t55730*t55657*(2.0/3.0))+c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+cx1*gamma_aa[index]*gx*t55720*t55665+cx2*t55710*t55660*t55729*t55667+cx4*t55711*t55662*t55717* \
               t55664+cx3*gamma_aa[index]*gx*t55710*t55660*t55725*t55666)*(4.0/3.0)+rho_a[index]*(t55687+t55670*t55673* \
               (t55686-t55687))*(ccaa1*gamma_aa[index]*gcaa*t55707*t55696*(8.0/3.0)+ccaa2*t55660*t55705*t55661*t55706* \
               (1.6E1/3.0)+ccaa4*t55662*t55663*t55709*t55693*(3.2E1/3.0)-ccaa1*t55660*t55661*t55706*1.0/(t55695*t55695) \
               *(8.0/3.0)-ccaa2*1.0/(t55704*t55704)*t55660*t55661*t55667*(gamma_aa[index]*gcaa*t55707*(1.6E1/3.0) \
               +t55660*t55661*t55706*(1.6E1/3.0))-ccaa4*t55662*t55663*t55664*1.0/(t55692*t55692)*(gamma_aa[index]* \
               gcaa*t55707*(3.2E1/3.0)+t55660*t55661*t55706*3.2E1+t55662*t55663*t55709*(3.2E1/3.0)+gamma_aa[index]* \
               gcaa*t55660*t55661*t55708*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t55701*t55660*t55661*t55708*8.0-ccaa3* \
               gamma_aa[index]*gcaa*1.0/(t55700*t55700)*t55660*t55661*t55666*(gamma_aa[index]*gcaa*t55707*8.0+t55660* \
               t55661*t55706*1.6E1+gamma_aa[index]*gcaa*t55660*t55661*t55708*8.0))-c0*pow(rho_a[index],4.0/3.0)*(cx1* \
               gamma_aa[index]*gx*t55720*t55707*(8.0/3.0)+cx2*t55710*t55660*t55706*t55729*(1.6E1/3.0)+cx4*t55711* \
               t55662*t55717*t55709*(3.2E1/3.0)-cx1*t55710*t55660*t55706*1.0/(t55719*t55719)*(8.0/3.0)-cx2*t55710* \
               t55660*1.0/(t55728*t55728)*t55667*(gamma_aa[index]*gx*t55707*(1.6E1/3.0)+t55710*t55660*t55706*(1.6E1/ \
               3.0))-cx4*t55711*t55662*1.0/(t55716*t55716)*t55664*(gamma_aa[index]*gx*t55707*(3.2E1/3.0)+t55710*t55660* \
               t55706*3.2E1+t55711*t55662*t55709*(3.2E1/3.0)+gamma_aa[index]*gx*t55710*t55660*t55708*3.2E1)+cx3*gamma_aa[index]* \
               gx*t55710*t55660*t55725*t55708*8.0-cx3*gamma_aa[index]*gx*t55710*t55660*1.0/(t55724*t55724)*t55666* \
               (gamma_aa[index]*gx*t55707*8.0+t55710*t55660*t55706*1.6E1+gamma_aa[index]*gx*t55710*t55660*t55708* \
               8.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t51826 = 1.0/pow(rho_b[index],1.0/3.0);
            double t51827 = c*t51826;
            double t51828 = sqrt(t51827);
            double t51829 = pow(t51827,3.0/2.0);
            double t51830 = c*c;
            double t51831 = 1.0/pow(rho_b[index],2.0/3.0);
            double t51832 = 1.0/c0p;
            double t51833 = b1p*t51828;
            double t51834 = b3p*t51829;
            double t51835 = b4p*t51830*t51831;
            double t51836 = b2p*c*t51826;
            double t51837 = t51833+t51834+t51835+t51836;
            double t51838 = 1.0/t51837;
            double t51839 = t51832*t51838*(1.0/2.0);
            double t51840 = t51839+1.0;
            double t51841 = log(t51840);
            double t51842 = a1p*c*t51826;
            double t51843 = t51842+1.0;
            double t51844 = gamma_bb[index]*gamma_bb[index];
            double t51845 = gcaa*gcaa;
            double t51846 = t51844*t51844;
            double t51847 = t51845*t51845;
            double t51848 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t51849 = 1.0/pow(rho_b[index],8.0/3.0);
            double t51850 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t51851 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t51852 = pow(2.0,1.0/3.0);
            double t51853 = t51852*2.0;
            double t51854 = t51853-2.0;
            double t51855 = two_13*2.0;
            double t51856 = t51855-2.0;
            double t51857 = 1.0/t51856;
            double t51858 = 1.0/c0f;
            double t51859 = 1.0/pow(rho_a[index],1.0/3.0);
            double t51860 = c*t51859;
            double t51861 = sqrt(t51860);
            double t51862 = pow(t51860,3.0/2.0);
            double t51863 = 1.0/pow(rho_a[index],2.0/3.0);
            double t51864 = b1p*t51861;
            double t51865 = b3p*t51862;
            double t51866 = b4p*t51830*t51863;
            double t51867 = b2p*c*t51859;
            double t51868 = t51864+t51865+t51866+t51867;
            double t51869 = 1.0/t51868;
            double t51870 = t51832*t51869*(1.0/2.0);
            double t51871 = t51870+1.0;
            double t51872 = log(t51871);
            double t51873 = a1p*c*t51859;
            double t51874 = t51873+1.0;
            double t51875 = c0p*t51872*t51874*2.0;
            double t51876 = b1f*t51828;
            double t51877 = b3f*t51829;
            double t51878 = b4f*t51830*t51831;
            double t51879 = b2f*c*t51826;
            double t51880 = t51876+t51877+t51878+t51879;
            double t51881 = 1.0/t51880;
            double t51882 = t51881*t51858*(1.0/2.0);
            double t51883 = t51882+1.0;
            double t51884 = log(t51883);
            double t51885 = a1f*c*t51826;
            double t51886 = t51885+1.0;
            double t51887 = c0f*t51884*t51886*2.0;
            double t51888 = c0p*t51841*t51843*2.0;
            double t51889 = rho_a[index]+rho_b[index];
            double t51890 = 1.0/pow(t51889,1.0/3.0);
            double t51891 = c*t51890;
            double t51892 = sqrt(t51891);
            double t51893 = pow(t51891,3.0/2.0);
            double t51894 = 1.0/pow(t51889,2.0/3.0);
            double t51895 = b1p*t51892;
            double t51896 = b3p*t51893;
            double t51897 = b4p*t51830*t51894;
            double t51898 = b2p*c*t51890;
            double t51899 = t51895+t51896+t51897+t51898;
            double t51900 = 1.0/t51899;
            double t51901 = t51900*t51832*(1.0/2.0);
            double t51902 = t51901+1.0;
            double t51903 = log(t51902);
            double t51904 = a1p*c*t51890;
            double t51905 = t51904+1.0;
            double t51906 = c0p*t51903*t51905*2.0;
            double t51907 = rho_a[index]-rho_b[index];
            double t51908 = t51907*t51907;
            double t51909 = 1.0/t51889;
            double t51910 = t51907*t51909;
            double t51911 = 1.0/(t51889*t51889*t51889*t51889);
            double t51912 = t51908*t51908;
            double t51913 = t51910+1.0;
            double t51914 = pow(t51913,4.0/3.0);
            double t51915 = -t51910+1.0;
            double t51916 = pow(t51915,4.0/3.0);
            double t51917 = t51914+t51916-2.0;
            double t51918 = gcab*gcab;
            double t51922 = 1.0/pow(rho_a[index],8.0/3.0);
            double t51923 = gamma_aa[index]*t51922*(1.0/2.0);
            double t51924 = gamma_bb[index]*t51849*(1.0/2.0);
            double t51919 = t51923+t51924;
            double t51920 = t51919*t51919;
            double t51921 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t51925 = t51918*t51918;
            double t51926 = t51920*t51920;
            double t51927 = t51920*t51918*6.0;
            double t51928 = gcab*t51920*t51918*t51919*4.0;
            double t51929 = t51925*t51926;
            double t51930 = gcab*t51919*4.0;
            double t51931 = t51930+t51927+t51928+t51929+1.0;
            double t51932 = gcab*t51919;
            double t51933 = t51932+1.0;
            double t51934 = t51920*t51918;
            double t51935 = gcab*t51919*2.0;
            double t51936 = t51934+t51935+1.0;
            double t51937 = t51920*t51918*3.0;
            double t51938 = gcab*t51920*t51918*t51919;
            double t51939 = gcab*t51919*3.0;
            double t51940 = t51937+t51938+t51939+1.0;
            double t51941 = 1.0/t51936;
            double t51942 = 1.0/t51940;
            double t51943 = 1.0/t51933;
            double t51944 = 1.0/t51931;
            double t51945 = 1.0/pow(t51889,4.0/3.0);
            double t51946 = b1f*t51892;
            double t51947 = b3f*t51893;
            double t51948 = b4f*t51830*t51894;
            double t51949 = b2f*c*t51890;
            double t51950 = t51946+t51947+t51948+t51949;
            double t51951 = 1.0/t51950;
            double t51952 = t51951*t51858*(1.0/2.0);
            double t51953 = t51952+1.0;
            double t51954 = log(t51953);
            double t51955 = a1f*c*t51890;
            double t51956 = t51955+1.0;
            double t51958 = c0f*t51954*t51956*2.0;
            double t51957 = t51906-t51958;
            double t51959 = 1.0/(t51889*t51889);
            double t51960 = t51907*t51959;
            double t51961 = t51960+t51909;
            double t51962 = 1.0/pow(t51889,5.0/3.0);
            double t51963 = 1.0/sqrt(t51891);
            double t51964 = 1.0/t51902;
            double t51965 = 1.0/(t51899*t51899);
            double t51966 = b4p*t51830*t51962*(2.0/3.0);
            double t51967 = b2p*c*t51945*(1.0/3.0);
            double t51968 = b1p*c*t51945*t51963*(1.0/6.0);
            double t51969 = b3p*c*t51945*t51892*(1.0/2.0);
            double t51970 = t51966+t51967+t51968+t51969;
            double t51971 = 1.0/d2fz0;
            double t51972 = 1.0/Aa;
            double t51973 = b1a*t51892;
            double t51974 = b3a*t51893;
            double t51975 = b4a*t51830*t51894;
            double t51976 = b2a*c*t51890;
            double t51977 = t51973+t51974+t51975+t51976;
            double t51978 = 1.0/t51977;
            double t51979 = t51972*t51978*(1.0/2.0);
            double t51980 = t51979+1.0;
            double t51981 = log(t51980);
            double t51982 = a1a*c*t51890;
            double t51983 = t51982+1.0;
            double t51984 = 1.0/(t51889*t51889*t51889*t51889*t51889);
            double t51985 = pow(t51913,1.0/3.0);
            double t51986 = t51961*t51985*(4.0/3.0);
            double t51987 = pow(t51915,1.0/3.0);
            double t51988 = t51986-t51961*t51987*(4.0/3.0);
            double t51989 = t51911*t51912;
            double t51990 = t51989-1.0;
            double t51991 = t51905*t51970*t51964*t51965;
            double t51992 = 1.0/pow(rho_b[index],4.0/3.0);
            double t51993 = 1.0/pow(rho_b[index],5.0/3.0);
            double t51994 = 1.0/sqrt(t51827);
            double t51995 = 1.0/t51840;
            double t51996 = 1.0/(t51837*t51837);
            double t51997 = b4p*t51830*t51993*(2.0/3.0);
            double t51998 = b2p*c*t51992*(1.0/3.0);
            double t51999 = b1p*c*t51992*t51994*(1.0/6.0);
            double t52000 = b3p*c*t51828*t51992*(1.0/2.0);
            double t52001 = t51997+t51998+t51999+t52000;
            double t52002 = t51843*t51995*t51996*t52001;
            double t52003 = t51887-t51888;
            double t52004 = t51854*t51857*t52003;
            double t52005 = Aa*t51917*t51971*t51981*t51990*t51857*t51983*2.0;
            double t52006 = t51888+t52004;
            double t52007 = gamma_bb[index]*gcaa*t51849*4.0;
            double t52008 = gamma_bb[index]*gcaa*t51850*t51844*t51845*4.0;
            double t52009 = t51851*t51844*t51845*6.0;
            double t52010 = t51846*t51847*t51848;
            double t52011 = t52010+t52007+t52008+t52009+1.0;
            double t52012 = 1.0/t52011;
            double t52013 = gamma_bb[index]*gcaa*t51849;
            double t52014 = t52013+1.0;
            double t52015 = 1.0/t52014;
            double t52016 = gamma_bb[index]*gcaa*t51849*3.0;
            double t52017 = gamma_bb[index]*gcaa*t51850*t51844*t51845;
            double t52018 = t51851*t51844*t51845*3.0;
            double t52019 = t52016+t52017+t52018+1.0;
            double t52020 = 1.0/t52019;
            double t52021 = gamma_bb[index]*gcaa*t51849*2.0;
            double t52022 = t51851*t51844*t51845;
            double t52023 = t52021+t52022+1.0;
            double t52024 = 1.0/t52023;
            double t52025 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t52026 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t52027 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t52028 = gx*gx;
            double t52029 = t52028*t52028;
            double t52030 = gamma_bb[index]*gx*t51849*4.0;
            double t52031 = gamma_bb[index]*gx*t51850*t51844*t52028*4.0;
            double t52032 = t51851*t51844*t52028*6.0;
            double t52033 = t51846*t51848*t52029;
            double t52034 = t52030+t52031+t52032+t52033+1.0;
            double t52035 = 1.0/t52034;
            double t52036 = gamma_bb[index]*gx*t51849;
            double t52037 = t52036+1.0;
            double t52038 = 1.0/t52037;
            double t52039 = gamma_bb[index]*gx*t51849*3.0;
            double t52040 = gamma_bb[index]*gx*t51850*t51844*t52028;
            double t52041 = t51851*t51844*t52028*3.0;
            double t52042 = t52040+t52041+t52039+1.0;
            double t52043 = 1.0/t52042;
            double t52044 = gamma_bb[index]*gx*t51849*2.0;
            double t52045 = t51851*t51844*t52028;
            double t52046 = t52044+t52045+1.0;
            double t52047 = 1.0/t52046;
            double t52048 = 1.0/t51883;
            double t52049 = 1.0/(t51880*t51880);
            double t52050 = b4f*t51830*t51993*(2.0/3.0);
            double t52051 = b2f*c*t51992*(1.0/3.0);
            double t52052 = b1f*c*t51992*t51994*(1.0/6.0);
            double t52053 = b3f*c*t51828*t51992*(1.0/2.0);
            double t52054 = t52050+t52051+t52052+t52053;
            double t52055 = a1f*c*c0f*t51884*t51992*(2.0/3.0);
            double t52056 = a1p*c*c0p*t51841*t51992*(2.0/3.0);
            double t52057 = ccaa4*t51846*t51847*t51848*t52012;
            double t52058 = ccaa1*gamma_bb[index]*gcaa*t51849*t52015;
            double t52059 = ccaa3*gamma_bb[index]*gcaa*t51850*t51844*t51845*t52020;
            double t52060 = ccaa2*t51851*t51844*t51845*t52024;
            double t52061 = ccaa0+t52060+t52057+t52058+t52059;
            v_rho_b_[index] = -(ccab0+ccab1*gcab*t51943*t51919+ccab2*t51920*t51941*t51918+ccab4*t51925*t51926* \
               t51944+ccab3*gcab*t51920*t51942*t51918*t51919)*(t51906-t51888-t52004+t52005+t51889*(t51991-t51911* \
               t51912*t51917*t51857*(t51991-(1.0/(t51950*t51950)*t51956*(b2f*c*t51945*(1.0/3.0)+b4f*t51830*t51962* \
               (2.0/3.0)+b1f*c*t51945*t51963*(1.0/6.0)+b3f*c*t51945*t51892*(1.0/2.0)))/t51953+a1f*c*c0f*t51945*t51954* \
               (2.0/3.0)-a1p*c*c0p*t51903*t51945*(2.0/3.0))-a1p*c*c0p*t51903*t51945*(2.0/3.0)+t51911*t51912*t51857* \
               t51957*t51988+t51912*t51917*t51857*t51957*t51984*4.0+t51911*t51907*t51908*t51917*t51857*t51957*4.0- \
               Aa*t51917*t51971*t51981*t51857*t51983*(t51912*t51984*4.0+t51911*t51907*t51908*4.0)*2.0-Aa*t51971*t51981* \
               t51990*t51857*t51983*t51988*2.0+(t51917*t51971*t51990*t51857*t51983*1.0/(t51977*t51977)*(b2a*c*t51945* \
               (1.0/3.0)+b4a*t51830*t51962*(2.0/3.0)+b1a*c*t51945*t51963*(1.0/6.0)+b3a*c*t51945*t51892*(1.0/2.0)) \
               )/t51980-Aa*a1a*c*t51917*t51971*t51945*t51981*t51990*t51857*(2.0/3.0))+rho_b[index]*(-t52002+t52056+ \
               t51854*t51857*(t52002+t52055-t51886*t52054*t52048*t52049-a1p*c*c0p*t51841*t51992*(2.0/3.0)))-t51911* \
               t51912*t51917*t51857*t51957)-t52061*(t51888+t51854*t51857*(t51887-c0p*t51841*t51843*2.0))-(rho_b[index]* \
               t52006+rho_a[index]*(t51875-t51854*t51857*(t51875-c0f*log((t51858*(1.0/2.0))/(b1f*t51861+b3f*t51862+ \
               b2f*c*t51859+b4f*t51830*t51863)+1.0)*(a1f*c*t51859+1.0)*2.0))-t51889*(t51906+t52005-t51911*t51912* \
               t51917*t51857*t51957))*(ccab1*gamma_bb[index]*gcab*t51921*t51943*(4.0/3.0)-ccab2*t51920*t51918*1.0/ \
               (t51936*t51936)*(gamma_bb[index]*gcab*t51921*(8.0/3.0)+gamma_bb[index]*t51921*t51918*t51919*(8.0/3.0) \
               )-ccab4*1.0/(t51931*t51931)*t51925*t51926*(gamma_bb[index]*gcab*t51921*(1.6E1/3.0)+gamma_bb[index]* \
               t51921*t51918*t51919*1.6E1+gamma_bb[index]*gcab*t51920*t51921*t51918*1.6E1+gamma_bb[index]*t51920* \
               t51921*t51925*t51919*(1.6E1/3.0))-ccab1*gamma_bb[index]*t51921*1.0/(t51933*t51933)*t51918*t51919*(4.0/ \
               3.0)+ccab2*gamma_bb[index]*t51921*t51941*t51918*t51919*(8.0/3.0)-ccab3*gcab*t51920*1.0/(t51940*t51940) \
               *t51918*t51919*(gamma_bb[index]*gcab*t51921*4.0+gamma_bb[index]*t51921*t51918*t51919*8.0+gamma_bb[index]* \
               gcab*t51920*t51921*t51918*4.0)+ccab3*gamma_bb[index]*gcab*t51920*t51921*t51942*t51918*4.0+ccab4*gamma_bb[index]* \
               t51920*t51921*t51925*t51944*t51919*(1.6E1/3.0))+rho_b[index]*t52006*(ccaa1*gamma_bb[index]*gcaa*t51921* \
               t52015*(8.0/3.0)+ccaa2*t51844*t51845*t52024*t52025*(1.6E1/3.0)+ccaa4*t51846*t51847*t52012*t52027*(3.2E1/ \
               3.0)-ccaa1*t51844*t51845*1.0/(t52014*t52014)*t52025*(8.0/3.0)-ccaa2*t51851*t51844*t51845*1.0/(t52023* \
               t52023)*(gamma_bb[index]*gcaa*t51921*(1.6E1/3.0)+t51844*t51845*t52025*(1.6E1/3.0))-ccaa4*t51846*t51847* \
               t51848*1.0/(t52011*t52011)*(gamma_bb[index]*gcaa*t51921*(3.2E1/3.0)+t51844*t51845*t52025*3.2E1+t51846* \
               t51847*t52027*(3.2E1/3.0)+gamma_bb[index]*gcaa*t51844*t51845*t52026*3.2E1)+ccaa3*gamma_bb[index]*gcaa* \
               t51844*t51845*t52020*t52026*8.0-ccaa3*gamma_bb[index]*gcaa*t51850*t51844*t51845*1.0/(t52019*t52019) \
               *(gamma_bb[index]*gcaa*t51921*8.0+t51844*t51845*t52025*1.6E1+gamma_bb[index]*gcaa*t51844*t51845*t52026* \
               8.0))+c0*pow(rho_b[index],1.0/3.0)*(cx0+cx1*gamma_bb[index]*gx*t51849*t52038+cx2*t51851*t51844*t52028* \
               t52047+cx4*t51846*t51848*t52035*t52029+cx3*gamma_bb[index]*gx*t51850*t51844*t52043*t52028)*(4.0/3.0) \
               +rho_b[index]*t52061*(-t52002+t52056+t51854*t51857*(t52002+t52055-t52056-t51886*t52054*t52048*t52049) \
               )-c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t51921*t52038*(8.0/3.0)+cx2*t51844*t52025*t52028* \
               t52047*(1.6E1/3.0)+cx4*t51846*t52035*t52027*t52029*(3.2E1/3.0)-cx1*t51844*t52025*t52028*1.0/(t52037* \
               t52037)*(8.0/3.0)-cx2*t51851*t51844*t52028*1.0/(t52046*t52046)*(gamma_bb[index]*gx*t51921*(1.6E1/3.0) \
               +t51844*t52025*t52028*(1.6E1/3.0))-cx4*t51846*t51848*1.0/(t52034*t52034)*t52029*(gamma_bb[index]*gx* \
               t51921*(3.2E1/3.0)+t51844*t52025*t52028*3.2E1+t51846*t52027*t52029*(3.2E1/3.0)+gamma_bb[index]*gx* \
               t51844*t52026*t52028*3.2E1)+cx3*gamma_bb[index]*gx*t51844*t52043*t52026*t52028*8.0-cx3*gamma_bb[index]* \
               gx*t51850*t51844*1.0/(t52042*t52042)*t52028*(gamma_bb[index]*gx*t51921*8.0+t51844*t52025*t52028*1.6E1+ \
               gamma_bb[index]*gx*t51844*t52026*t52028*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t55004 = 1.0/pow(rho_b[index],1.0/3.0);
            double t55005 = c*t55004;
            double t55006 = sqrt(t55005);
            double t55007 = pow(t55005,3.0/2.0);
            double t55008 = c*c;
            double t55009 = 1.0/pow(rho_b[index],2.0/3.0);
            double t55010 = 1.0/c0p;
            double t55011 = b1p*t55006;
            double t55012 = b3p*t55007;
            double t55013 = b4p*t55008*t55009;
            double t55014 = b2p*c*t55004;
            double t55015 = t55011+t55012+t55013+t55014;
            double t55016 = 1.0/t55015;
            double t55017 = t55010*t55016*(1.0/2.0);
            double t55018 = t55017+1.0;
            double t55019 = log(t55018);
            double t55020 = a1p*c*t55004;
            double t55021 = t55020+1.0;
            double t55022 = gamma_bb[index]*gamma_bb[index];
            double t55023 = gcaa*gcaa;
            double t55024 = t55022*t55022;
            double t55025 = t55023*t55023;
            double t55026 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t55027 = 1.0/pow(rho_b[index],8.0/3.0);
            double t55028 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t55029 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t55030 = pow(2.0,1.0/3.0);
            double t55031 = t55030*2.0;
            double t55032 = t55031-2.0;
            double t55033 = two_13*2.0;
            double t55034 = t55033-2.0;
            double t55035 = 1.0/t55034;
            double t55036 = 1.0/c0f;
            double t55037 = b1f*t55006;
            double t55038 = b3f*t55007;
            double t55039 = b4f*t55008*t55009;
            double t55040 = b2f*c*t55004;
            double t55041 = t55040+t55037+t55038+t55039;
            double t55042 = 1.0/t55041;
            double t55043 = t55042*t55036*(1.0/2.0);
            double t55044 = t55043+1.0;
            double t55045 = log(t55044);
            double t55046 = a1f*c*t55004;
            double t55047 = t55046+1.0;
            double t55048 = c0f*t55045*t55047*2.0;
            double t55049 = c0p*t55021*t55019*2.0;
            double t55050 = gamma_bb[index]*gcaa*t55027*4.0;
            double t55051 = gamma_bb[index]*gcaa*t55022*t55023*t55028*4.0;
            double t55052 = t55022*t55023*t55029*6.0;
            double t55053 = t55024*t55025*t55026;
            double t55054 = t55050+t55051+t55052+t55053+1.0;
            double t55055 = 1.0/t55054;
            double t55056 = gamma_bb[index]*gcaa*t55027;
            double t55057 = t55056+1.0;
            double t55058 = 1.0/t55057;
            double t55059 = gamma_bb[index]*gcaa*t55027*3.0;
            double t55060 = gamma_bb[index]*gcaa*t55022*t55023*t55028;
            double t55061 = t55022*t55023*t55029*3.0;
            double t55062 = t55060+t55061+t55059+1.0;
            double t55063 = 1.0/t55062;
            double t55064 = gamma_bb[index]*gcaa*t55027*2.0;
            double t55065 = t55022*t55023*t55029;
            double t55066 = t55064+t55065+1.0;
            double t55067 = 1.0/t55066;
            double t55068 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t55069 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t55070 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t55071 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t55072 = gx*gx;
            double t55073 = t55072*t55072;
            double t55074 = gamma_bb[index]*gx*t55027*4.0;
            double t55075 = gamma_bb[index]*gx*t55022*t55072*t55028*4.0;
            double t55076 = t55022*t55072*t55029*6.0;
            double t55077 = t55024*t55026*t55073;
            double t55078 = t55074+t55075+t55076+t55077+1.0;
            double t55079 = 1.0/t55078;
            double t55080 = gamma_bb[index]*gx*t55027;
            double t55081 = t55080+1.0;
            double t55082 = 1.0/t55081;
            double t55083 = gamma_bb[index]*gx*t55027*3.0;
            double t55084 = gamma_bb[index]*gx*t55022*t55072*t55028;
            double t55085 = t55022*t55072*t55029*3.0;
            double t55086 = t55083+t55084+t55085+1.0;
            double t55087 = 1.0/t55086;
            double t55088 = gamma_bb[index]*gx*t55027*2.0;
            double t55089 = t55022*t55072*t55029;
            double t55090 = t55088+t55089+1.0;
            double t55091 = 1.0/t55090;
            double t55092 = 1.0/pow(rho_b[index],4.0/3.0);
            double t55093 = 1.0/pow(rho_b[index],5.0/3.0);
            double t55094 = 1.0/sqrt(t55005);
            double t55095 = 1.0/t55018;
            double t55096 = 1.0/(t55015*t55015);
            double t55097 = b4p*t55008*t55093*(2.0/3.0);
            double t55098 = b2p*c*t55092*(1.0/3.0);
            double t55099 = b1p*c*t55092*t55094*(1.0/6.0);
            double t55100 = b3p*c*t55006*t55092*(1.0/2.0);
            double t55101 = t55100+t55097+t55098+t55099;
            double t55102 = t55101*t55021*t55095*t55096;
            double t55103 = ccaa4*t55024*t55025*t55026*t55055;
            double t55104 = ccaa1*gamma_bb[index]*gcaa*t55027*t55058;
            double t55105 = ccaa3*gamma_bb[index]*gcaa*t55022*t55023*t55063*t55028;
            double t55106 = ccaa2*t55022*t55023*t55029*t55067;
            double t55107 = ccaa0+t55103+t55104+t55105+t55106;
            v_rho_b_[index] = -t55107*(t55049+t55032*t55035*(t55048-c0p*t55021*t55019*2.0))+rho_b[index]*t55107* \
               (-t55102+t55032*t55035*(t55102-(1.0/(t55041*t55041)*t55047*(b2f*c*t55092*(1.0/3.0)+b4f*t55008*t55093* \
               (2.0/3.0)+b1f*c*t55092*t55094*(1.0/6.0)+b3f*c*t55006*t55092*(1.0/2.0)))/t55044+a1f*c*c0f*t55045*t55092* \
               (2.0/3.0)-a1p*c*c0p*t55019*t55092*(2.0/3.0))+a1p*c*c0p*t55019*t55092*(2.0/3.0))+c0*pow(rho_b[index],1.0/ \
               3.0)*(cx0+cx1*gamma_bb[index]*gx*t55027*t55082+cx2*t55022*t55072*t55091*t55029+cx4*t55024*t55026*t55073* \
               t55079+cx3*gamma_bb[index]*gx*t55022*t55072*t55028*t55087)*(4.0/3.0)+rho_b[index]*(t55049+t55032*t55035* \
               (t55048-t55049))*(ccaa1*gamma_bb[index]*gcaa*t55058*t55069*(8.0/3.0)+ccaa4*t55024*t55025*t55071*t55055* \
               (3.2E1/3.0)+ccaa2*t55022*t55023*t55067*t55068*(1.6E1/3.0)-ccaa1*t55022*t55023*1.0/(t55057*t55057)* \
               t55068*(8.0/3.0)-ccaa2*t55022*t55023*t55029*1.0/(t55066*t55066)*(gamma_bb[index]*gcaa*t55069*(1.6E1/ \
               3.0)+t55022*t55023*t55068*(1.6E1/3.0))-ccaa4*t55024*t55025*t55026*1.0/(t55054*t55054)*(gamma_bb[index]* \
               gcaa*t55069*(3.2E1/3.0)+t55024*t55025*t55071*(3.2E1/3.0)+t55022*t55023*t55068*3.2E1+gamma_bb[index]* \
               gcaa*t55022*t55023*t55070*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t55022*t55023*t55070*t55063*8.0-ccaa3* \
               gamma_bb[index]*gcaa*t55022*t55023*1.0/(t55062*t55062)*t55028*(gamma_bb[index]*gcaa*t55069*8.0+t55022* \
               t55023*t55068*1.6E1+gamma_bb[index]*gcaa*t55022*t55023*t55070*8.0))-c0*pow(rho_b[index],4.0/3.0)*(cx1* \
               gamma_bb[index]*gx*t55082*t55069*(8.0/3.0)+cx2*t55022*t55072*t55091*t55068*(1.6E1/3.0)+cx4*t55024* \
               t55071*t55073*t55079*(3.2E1/3.0)-cx1*t55022*t55072*1.0/(t55081*t55081)*t55068*(8.0/3.0)-cx2*t55022* \
               t55072*1.0/(t55090*t55090)*t55029*(gamma_bb[index]*gx*t55069*(1.6E1/3.0)+t55022*t55072*t55068*(1.6E1/ \
               3.0))-cx4*t55024*t55026*t55073*1.0/(t55078*t55078)*(gamma_bb[index]*gx*t55069*(3.2E1/3.0)+t55024*t55071* \
               t55073*(3.2E1/3.0)+t55022*t55072*t55068*3.2E1+gamma_bb[index]*gx*t55022*t55070*t55072*3.2E1)+cx3*gamma_bb[index]* \
               gx*t55022*t55070*t55072*t55087*8.0-cx3*gamma_bb[index]*gx*t55022*t55072*t55028*1.0/(t55086*t55086) \
               *(gamma_bb[index]*gx*t55069*8.0+t55022*t55072*t55068*1.6E1+gamma_bb[index]*gx*t55022*t55070*t55072* \
               8.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t52063 = 1.0/pow(rho_a[index],1.0/3.0);
                double t52064 = c*t52063;
                double t52065 = sqrt(t52064);
                double t52066 = pow(t52064,3.0/2.0);
                double t52067 = c*c;
                double t52068 = 1.0/pow(rho_a[index],2.0/3.0);
                double t52069 = 1.0/c0p;
                double t52070 = b1p*t52065;
                double t52071 = b3p*t52066;
                double t52072 = b4p*t52067*t52068;
                double t52073 = b2p*c*t52063;
                double t52074 = t52070+t52071+t52072+t52073;
                double t52075 = 1.0/t52074;
                double t52076 = t52075*t52069*(1.0/2.0);
                double t52077 = t52076+1.0;
                double t52078 = log(t52077);
                double t52079 = a1p*c*t52063;
                double t52080 = t52079+1.0;
                double t52081 = pow(2.0,1.0/3.0);
                double t52082 = t52081*2.0;
                double t52083 = t52082-2.0;
                double t52084 = two_13*2.0;
                double t52085 = t52084-2.0;
                double t52086 = 1.0/t52085;
                double t52087 = 1.0/c0f;
                double t52088 = 1.0/pow(rho_b[index],1.0/3.0);
                double t52089 = c*t52088;
                double t52090 = sqrt(t52089);
                double t52091 = pow(t52089,3.0/2.0);
                double t52092 = 1.0/pow(rho_b[index],2.0/3.0);
                double t52093 = b1p*t52090;
                double t52094 = b3p*t52091;
                double t52095 = b4p*t52092*t52067;
                double t52096 = b2p*c*t52088;
                double t52097 = t52093+t52094+t52095+t52096;
                double t52098 = 1.0/t52097;
                double t52099 = t52069*t52098*(1.0/2.0);
                double t52100 = t52099+1.0;
                double t52101 = log(t52100);
                double t52102 = a1p*c*t52088;
                double t52103 = t52102+1.0;
                double t52104 = c0p*t52101*t52103*2.0;
                double t52105 = rho_a[index]+rho_b[index];
                double t52106 = 1.0/pow(t52105,1.0/3.0);
                double t52107 = c*t52106;
                double t52108 = sqrt(t52107);
                double t52109 = pow(t52107,3.0/2.0);
                double t52110 = 1.0/pow(t52105,2.0/3.0);
                double t52111 = b1p*t52108;
                double t52112 = b3p*t52109;
                double t52113 = b4p*t52110*t52067;
                double t52114 = b2p*c*t52106;
                double t52115 = t52111+t52112+t52113+t52114;
                double t52116 = 1.0/t52115;
                double t52117 = t52116*t52069*(1.0/2.0);
                double t52118 = t52117+1.0;
                double t52119 = log(t52118);
                double t52120 = a1p*c*t52106;
                double t52121 = t52120+1.0;
                double t52122 = c0p*t52121*t52119*2.0;
                double t52123 = rho_a[index]-rho_b[index];
                double t52124 = t52123*t52123;
                double t52125 = 1.0/t52105;
                double t52126 = t52123*t52125;
                double t52127 = 1.0/(t52105*t52105*t52105*t52105);
                double t52128 = t52124*t52124;
                double t52129 = t52126+1.0;
                double t52130 = pow(t52129,4.0/3.0);
                double t52131 = -t52126+1.0;
                double t52132 = pow(t52131,4.0/3.0);
                double t52133 = t52130+t52132-2.0;
                double t52134 = 1.0/pow(rho_a[index],8.0/3.0);
                double t52135 = gamma_aa[index]*t52134*(1.0/2.0);
                double t52136 = 1.0/pow(rho_b[index],8.0/3.0);
                double t52137 = gamma_bb[index]*t52136*(1.0/2.0);
                double t52138 = t52135+t52137;
                double t52139 = gcab*t52138;
                double t52140 = t52139+1.0;
                double t52141 = gcab*gcab;
                double t52142 = t52138*t52138;
                double t52143 = t52141*t52141;
                double t52144 = t52142*t52142;
                double t52145 = t52141*t52142;
                double t52146 = gcab*t52138*2.0;
                double t52147 = t52145+t52146+1.0;
                double t52148 = t52141*t52142*3.0;
                double t52149 = gcab*t52141*t52142*t52138;
                double t52150 = gcab*t52138*3.0;
                double t52151 = t52150+t52148+t52149+1.0;
                double t52152 = t52141*t52142*6.0;
                double t52153 = gcab*t52141*t52142*t52138*4.0;
                double t52154 = t52143*t52144;
                double t52155 = gcab*t52138*4.0;
                double t52156 = t52152+t52153+t52154+t52155+1.0;
                double t52157 = c0p*t52080*t52078*2.0;
                double t52158 = gamma_aa[index]*gamma_aa[index];
                double t52159 = gx*gx;
                double t52160 = t52159*t52159;
                double t52161 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t52162 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t52163 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t52164 = gamma_aa[index]*gx*t52134;
                double t52165 = t52164+1.0;
                double t52166 = gamma_aa[index]*gx*t52134*3.0;
                double t52167 = gamma_aa[index]*gx*t52163*t52158*t52159;
                double t52168 = t52162*t52158*t52159*3.0;
                double t52169 = t52166+t52167+t52168+1.0;
                double t52170 = t52158*t52158;
                double t52171 = gamma_aa[index]*gx*t52134*4.0;
                double t52172 = gamma_aa[index]*gx*t52163*t52158*t52159*4.0;
                double t52173 = t52162*t52158*t52159*6.0;
                double t52174 = t52160*t52161*t52170;
                double t52175 = t52171+t52172+t52173+t52174+1.0;
                double t52176 = gamma_aa[index]*gx*t52134*2.0;
                double t52177 = t52162*t52158*t52159;
                double t52178 = t52176+t52177+1.0;
                double t52179 = b1f*t52065;
                double t52180 = b3f*t52066;
                double t52181 = b4f*t52067*t52068;
                double t52182 = b2f*c*t52063;
                double t52183 = t52180+t52181+t52182+t52179;
                double t52184 = 1.0/t52183;
                double t52185 = t52184*t52087*(1.0/2.0);
                double t52186 = t52185+1.0;
                double t52187 = log(t52186);
                double t52188 = a1f*c*t52063;
                double t52189 = t52188+1.0;
                double t52190 = t52157-c0f*t52187*t52189*2.0;
                double t52191 = t52157-t52190*t52083*t52086;
                double t52192 = gcaa*gcaa;
                double t52193 = t52192*t52192;
                double t52194 = gamma_aa[index]*gcaa*t52134;
                double t52195 = t52194+1.0;
                double t52196 = gamma_aa[index]*gcaa*t52134*3.0;
                double t52197 = gamma_aa[index]*gcaa*t52163*t52192*t52158;
                double t52198 = t52162*t52192*t52158*3.0;
                double t52199 = t52196+t52197+t52198+1.0;
                double t52200 = gamma_aa[index]*gcaa*t52134*4.0;
                double t52201 = gamma_aa[index]*gcaa*t52163*t52192*t52158*4.0;
                double t52202 = t52162*t52192*t52158*6.0;
                double t52203 = t52161*t52170*t52193;
                double t52204 = t52200+t52201+t52202+t52203+1.0;
                double t52205 = gamma_aa[index]*gcaa*t52134*2.0;
                double t52206 = t52162*t52192*t52158;
                double t52207 = t52205+t52206+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t52191+rho_b[index]*(t52104-t52083*t52086*(t52104-c0f*log((t52087* \
                   (1.0/2.0))/(b1f*t52090+b3f*t52091+b2f*c*t52088+b4f*t52092*t52067)+1.0)*(a1f*c*t52088+1.0)*2.0))-t52105* \
                   (t52122-t52133*t52127*t52128*t52086*(t52122-c0f*log((t52087*(1.0/2.0))/(b1f*t52108+b3f*t52109+b2f* \
                   c*t52106+b4f*t52110*t52067)+1.0)*(a1f*c*t52106+1.0)*2.0)+(Aa*t52133*t52086*log((1.0/2.0)/(Aa*(b1a* \
                   t52108+b3a*t52109+b2a*c*t52106+b4a*t52110*t52067))+1.0)*(t52127*t52128-1.0)*(a1a*c*t52106+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t52134*(1.0/2.0))/t52140-ccab4*t52143*t52144*1.0/(t52156*t52156)*(gcab*t52134* \
                   2.0+t52141*t52134*t52138*6.0+gcab*t52141*t52142*t52134*6.0+t52142*t52134*t52143*t52138*2.0)-ccab2* \
                   t52141*t52142*1.0/(t52147*t52147)*(gcab*t52134+t52141*t52134*t52138)-ccab1*1.0/(t52140*t52140)*t52141* \
                   t52134*t52138*(1.0/2.0)+(ccab2*t52141*t52134*t52138)/t52147+(ccab3*gcab*t52141*t52142*t52134*(3.0/ \
                   2.0))/t52151+(ccab4*t52142*t52134*t52143*t52138*2.0)/t52156-ccab3*gcab*t52141*t52142*1.0/(t52151*t52151) \
                   *t52138*(gcab*t52134*(3.0/2.0)+t52141*t52134*t52138*3.0+gcab*t52141*t52142*t52134*(3.0/2.0)))-rho_a[index]* \
                   t52191*((ccaa1*gcaa*t52134)/t52195+(ccaa2*gamma_aa[index]*t52162*t52192*2.0)/t52207-ccaa1*gamma_aa[index]* \
                   t52162*t52192*1.0/(t52195*t52195)-ccaa2*t52162*1.0/(t52207*t52207)*t52192*t52158*(gcaa*t52134*2.0+ \
                   gamma_aa[index]*t52162*t52192*2.0)+(ccaa4*gamma_aa[index]*t52161*t52193*t52158*4.0)/t52204+(ccaa3* \
                   gcaa*t52163*t52192*t52158*3.0)/t52199-ccaa4*1.0/(t52204*t52204)*t52161*t52170*t52193*(gcaa*t52134* \
                   4.0+gamma_aa[index]*t52162*t52192*1.2E1+gamma_aa[index]*t52161*t52193*t52158*4.0+gcaa*t52163*t52192* \
                   t52158*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t52163*t52192*t52158*1.0/(t52199*t52199)*(gcaa*t52134*3.0+ \
                   gamma_aa[index]*t52162*t52192*6.0+gcaa*t52163*t52192*t52158*3.0))+c0*pow(rho_a[index],4.0/3.0)*((cx1* \
                   gx*t52134)/t52165-cx1*gamma_aa[index]*t52162*1.0/(t52165*t52165)*t52159+(cx2*gamma_aa[index]*t52162* \
                   t52159*2.0)/t52178-cx2*t52162*t52158*t52159*1.0/(t52178*t52178)*(gx*t52134*2.0+gamma_aa[index]*t52162* \
                   t52159*2.0)+(cx4*gamma_aa[index]*t52160*t52161*t52158*4.0)/t52175+(cx3*gx*t52163*t52158*t52159*3.0) \
                   /t52169-cx4*t52160*t52161*t52170*1.0/(t52175*t52175)*(gx*t52134*4.0+gamma_aa[index]*t52162*t52159* \
                   1.2E1+gamma_aa[index]*t52160*t52161*t52158*4.0+gx*t52163*t52158*t52159*1.2E1)-cx3*gamma_aa[index]* \
                   gx*t52163*t52158*t52159*1.0/(t52169*t52169)*(gx*t52134*3.0+gamma_aa[index]*t52162*t52159*6.0+gx*t52163* \
                   t52158*t52159*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t55748 = 1.0/pow(rho_a[index],8.0/3.0);
                double t55749 = gamma_aa[index]*gamma_aa[index];
                double t55750 = gx*gx;
                double t55751 = t55750*t55750;
                double t55752 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t55753 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t55754 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t55755 = gamma_aa[index]*gx*t55748;
                double t55756 = t55755+1.0;
                double t55757 = gamma_aa[index]*gx*t55748*3.0;
                double t55758 = gamma_aa[index]*gx*t55750*t55754*t55749;
                double t55759 = t55750*t55753*t55749*3.0;
                double t55760 = t55757+t55758+t55759+1.0;
                double t55761 = t55749*t55749;
                double t55762 = gamma_aa[index]*gx*t55748*4.0;
                double t55763 = gamma_aa[index]*gx*t55750*t55754*t55749*4.0;
                double t55764 = t55750*t55753*t55749*6.0;
                double t55765 = t55751*t55752*t55761;
                double t55766 = t55762+t55763+t55764+t55765+1.0;
                double t55767 = gamma_aa[index]*gx*t55748*2.0;
                double t55768 = t55750*t55753*t55749;
                double t55769 = t55767+t55768+1.0;
                double t55770 = 1.0/pow(rho_a[index],1.0/3.0);
                double t55771 = c*t55770;
                double t55772 = sqrt(t55771);
                double t55773 = pow(t55771,3.0/2.0);
                double t55774 = c*c;
                double t55775 = 1.0/pow(rho_a[index],2.0/3.0);
                double t55776 = 1.0/c0p;
                double t55777 = b1p*t55772;
                double t55778 = b3p*t55773;
                double t55779 = b4p*t55774*t55775;
                double t55780 = b2p*c*t55770;
                double t55781 = t55780+t55777+t55778+t55779;
                double t55782 = 1.0/t55781;
                double t55783 = t55782*t55776*(1.0/2.0);
                double t55784 = t55783+1.0;
                double t55785 = log(t55784);
                double t55786 = a1p*c*t55770;
                double t55787 = t55786+1.0;
                double t55788 = gcaa*gcaa;
                double t55789 = t55788*t55788;
                double t55790 = gamma_aa[index]*gcaa*t55748;
                double t55791 = t55790+1.0;
                double t55792 = gamma_aa[index]*gcaa*t55748*3.0;
                double t55793 = gamma_aa[index]*gcaa*t55754*t55749*t55788;
                double t55794 = t55753*t55749*t55788*3.0;
                double t55795 = t55792+t55793+t55794+1.0;
                double t55796 = gamma_aa[index]*gcaa*t55748*4.0;
                double t55797 = gamma_aa[index]*gcaa*t55754*t55749*t55788*4.0;
                double t55798 = t55753*t55749*t55788*6.0;
                double t55799 = t55752*t55761*t55789;
                double t55800 = t55796+t55797+t55798+t55799+1.0;
                double t55801 = gamma_aa[index]*gcaa*t55748*2.0;
                double t55802 = t55753*t55749*t55788;
                double t55803 = t55801+t55802+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t55772+ \
                   b3f*t55773+b2f*c*t55770+b4f*t55774*t55775))+1.0)*(a1f*c*t55770+1.0)*2.0-c0p*t55785*t55787*2.0))/(two_13* \
                   2.0-2.0)+c0p*t55785*t55787*2.0)*((ccaa1*gcaa*t55748)/t55791+(ccaa2*gamma_aa[index]*t55753*t55788*2.0) \
                   /t55803-ccaa1*gamma_aa[index]*t55753*1.0/(t55791*t55791)*t55788-ccaa2*1.0/(t55803*t55803)*t55753*t55749* \
                   t55788*(gcaa*t55748*2.0+gamma_aa[index]*t55753*t55788*2.0)+(ccaa4*gamma_aa[index]*t55752*t55749*t55789* \
                   4.0)/t55800+(ccaa3*gcaa*t55754*t55749*t55788*3.0)/t55795-ccaa4*1.0/(t55800*t55800)*t55752*t55761*t55789* \
                   (gcaa*t55748*4.0+gamma_aa[index]*t55753*t55788*1.2E1+gamma_aa[index]*t55752*t55749*t55789*4.0+gcaa* \
                   t55754*t55749*t55788*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t55754*t55749*1.0/(t55795*t55795)*t55788*(gcaa* \
                   t55748*3.0+gamma_aa[index]*t55753*t55788*6.0+gcaa*t55754*t55749*t55788*3.0))+c0*pow(rho_a[index],4.0/ \
                   3.0)*((cx1*gx*t55748)/t55756-cx1*gamma_aa[index]*t55750*t55753*1.0/(t55756*t55756)+(cx2*gamma_aa[index]* \
                   t55750*t55753*2.0)/t55769-cx2*t55750*t55753*t55749*1.0/(t55769*t55769)*(gx*t55748*2.0+gamma_aa[index]* \
                   t55750*t55753*2.0)+(cx4*gamma_aa[index]*t55751*t55752*t55749*4.0)/t55766+(cx3*gx*t55750*t55754*t55749* \
                   3.0)/t55760-cx4*t55751*t55752*t55761*1.0/(t55766*t55766)*(gx*t55748*4.0+gamma_aa[index]*t55750*t55753* \
                   1.2E1+gamma_aa[index]*t55751*t55752*t55749*4.0+gx*t55750*t55754*t55749*1.2E1)-cx3*gamma_aa[index]* \
                   gx*t55750*1.0/(t55760*t55760)*t55754*t55749*(gx*t55748*3.0+gamma_aa[index]*t55750*t55753*6.0+gx*t55750* \
                   t55754*t55749*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t52210 = 1.0/pow(rho_a[index],1.0/3.0);
                double t52211 = c*t52210;
                double t52212 = sqrt(t52211);
                double t52213 = pow(t52211,3.0/2.0);
                double t52214 = c*c;
                double t52215 = 1.0/pow(rho_a[index],2.0/3.0);
                double t52216 = 1.0/c0p;
                double t52217 = b1p*t52212;
                double t52218 = b3p*t52213;
                double t52219 = b4p*t52214*t52215;
                double t52220 = b2p*c*t52210;
                double t52221 = t52220+t52217+t52218+t52219;
                double t52222 = 1.0/t52221;
                double t52223 = t52222*t52216*(1.0/2.0);
                double t52224 = t52223+1.0;
                double t52225 = log(t52224);
                double t52226 = a1p*c*t52210;
                double t52227 = t52226+1.0;
                double t52228 = pow(2.0,1.0/3.0);
                double t52229 = t52228*2.0;
                double t52230 = t52229-2.0;
                double t52231 = two_13*2.0;
                double t52232 = t52231-2.0;
                double t52233 = 1.0/t52232;
                double t52234 = 1.0/c0f;
                double t52235 = 1.0/pow(rho_b[index],1.0/3.0);
                double t52236 = c*t52235;
                double t52237 = sqrt(t52236);
                double t52238 = pow(t52236,3.0/2.0);
                double t52239 = 1.0/pow(rho_b[index],2.0/3.0);
                double t52240 = b1p*t52237;
                double t52241 = b3p*t52238;
                double t52242 = b4p*t52214*t52239;
                double t52243 = b2p*c*t52235;
                double t52244 = t52240+t52241+t52242+t52243;
                double t52245 = 1.0/t52244;
                double t52246 = t52216*t52245*(1.0/2.0);
                double t52247 = t52246+1.0;
                double t52248 = log(t52247);
                double t52249 = a1p*c*t52235;
                double t52250 = t52249+1.0;
                double t52251 = c0p*t52250*t52248*2.0;
                double t52252 = rho_a[index]+rho_b[index];
                double t52253 = 1.0/pow(t52252,1.0/3.0);
                double t52254 = c*t52253;
                double t52255 = sqrt(t52254);
                double t52256 = pow(t52254,3.0/2.0);
                double t52257 = 1.0/pow(t52252,2.0/3.0);
                double t52258 = b1p*t52255;
                double t52259 = b3p*t52256;
                double t52260 = b4p*t52214*t52257;
                double t52261 = b2p*c*t52253;
                double t52262 = t52260+t52261+t52258+t52259;
                double t52263 = 1.0/t52262;
                double t52264 = t52216*t52263*(1.0/2.0);
                double t52265 = t52264+1.0;
                double t52266 = log(t52265);
                double t52267 = a1p*c*t52253;
                double t52268 = t52267+1.0;
                double t52269 = c0p*t52266*t52268*2.0;
                double t52270 = rho_a[index]-rho_b[index];
                double t52271 = t52270*t52270;
                double t52272 = 1.0/t52252;
                double t52273 = t52270*t52272;
                double t52274 = 1.0/(t52252*t52252*t52252*t52252);
                double t52275 = t52271*t52271;
                double t52276 = t52273+1.0;
                double t52277 = pow(t52276,4.0/3.0);
                double t52278 = -t52273+1.0;
                double t52279 = pow(t52278,4.0/3.0);
                double t52280 = t52277+t52279-2.0;
                double t52281 = 1.0/pow(rho_b[index],8.0/3.0);
                double t52282 = 1.0/pow(rho_a[index],8.0/3.0);
                double t52283 = gamma_aa[index]*t52282*(1.0/2.0);
                double t52284 = gamma_bb[index]*t52281*(1.0/2.0);
                double t52285 = t52283+t52284;
                double t52286 = gcab*t52285;
                double t52287 = t52286+1.0;
                double t52288 = gcab*gcab;
                double t52289 = t52285*t52285;
                double t52290 = t52288*t52288;
                double t52291 = t52289*t52289;
                double t52292 = t52288*t52289;
                double t52293 = gcab*t52285*2.0;
                double t52294 = t52292+t52293+1.0;
                double t52295 = t52288*t52289*3.0;
                double t52296 = gcab*t52285*t52288*t52289;
                double t52297 = gcab*t52285*3.0;
                double t52298 = t52295+t52296+t52297+1.0;
                double t52299 = t52288*t52289*6.0;
                double t52300 = gcab*t52285*t52288*t52289*4.0;
                double t52301 = t52290*t52291;
                double t52302 = gcab*t52285*4.0;
                double t52303 = t52300+t52301+t52302+t52299+1.0;
                double t52304 = c0p*t52225*t52227*2.0;
                double t52305 = gamma_bb[index]*gamma_bb[index];
                double t52306 = gx*gx;
                double t52307 = t52306*t52306;
                double t52308 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t52309 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t52310 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t52311 = gamma_bb[index]*gx*t52281;
                double t52312 = t52311+1.0;
                double t52313 = gamma_bb[index]*gx*t52281*3.0;
                double t52314 = gamma_bb[index]*gx*t52310*t52305*t52306;
                double t52315 = t52305*t52306*t52309*3.0;
                double t52316 = t52313+t52314+t52315+1.0;
                double t52317 = t52305*t52305;
                double t52318 = gamma_bb[index]*gx*t52281*4.0;
                double t52319 = gamma_bb[index]*gx*t52310*t52305*t52306*4.0;
                double t52320 = t52305*t52306*t52309*6.0;
                double t52321 = t52307*t52308*t52317;
                double t52322 = t52320+t52321+t52318+t52319+1.0;
                double t52323 = gamma_bb[index]*gx*t52281*2.0;
                double t52324 = t52305*t52306*t52309;
                double t52325 = t52323+t52324+1.0;
                double t52326 = b1f*t52237;
                double t52327 = b3f*t52238;
                double t52328 = b4f*t52214*t52239;
                double t52329 = b2f*c*t52235;
                double t52330 = t52326+t52327+t52328+t52329;
                double t52331 = 1.0/t52330;
                double t52332 = t52331*t52234*(1.0/2.0);
                double t52333 = t52332+1.0;
                double t52334 = log(t52333);
                double t52335 = a1f*c*t52235;
                double t52336 = t52335+1.0;
                double t52337 = t52251-c0f*t52334*t52336*2.0;
                double t52338 = t52251-t52230*t52233*t52337;
                double t52339 = gcaa*gcaa;
                double t52340 = t52339*t52339;
                double t52341 = gamma_bb[index]*gcaa*t52281;
                double t52342 = t52341+1.0;
                double t52343 = gamma_bb[index]*gcaa*t52281*3.0;
                double t52344 = gamma_bb[index]*gcaa*t52310*t52305*t52339;
                double t52345 = t52305*t52309*t52339*3.0;
                double t52346 = t52343+t52344+t52345+1.0;
                double t52347 = gamma_bb[index]*gcaa*t52281*4.0;
                double t52348 = gamma_bb[index]*gcaa*t52310*t52305*t52339*4.0;
                double t52349 = t52305*t52309*t52339*6.0;
                double t52350 = t52340*t52308*t52317;
                double t52351 = t52350+t52347+t52348+t52349+1.0;
                double t52352 = gamma_bb[index]*gcaa*t52281*2.0;
                double t52353 = t52305*t52309*t52339;
                double t52354 = t52352+t52353+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t52338+rho_a[index]*(t52304-t52230*t52233*(t52304-c0f*log((t52234* \
                   (1.0/2.0))/(b1f*t52212+b3f*t52213+b2f*c*t52210+b4f*t52214*t52215)+1.0)*(a1f*c*t52210+1.0)*2.0))-t52252* \
                   (t52269-t52233*t52280*t52274*t52275*(t52269-c0f*log((t52234*(1.0/2.0))/(b1f*t52255+b3f*t52256+b2f* \
                   c*t52253+b4f*t52214*t52257)+1.0)*(a1f*c*t52253+1.0)*2.0)+(Aa*t52233*t52280*log((1.0/2.0)/(Aa*(b1a* \
                   t52255+b3a*t52256+b2a*c*t52253+b4a*t52214*t52257))+1.0)*(t52274*t52275-1.0)*(a1a*c*t52253+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t52281*(1.0/2.0))/t52287-ccab4*1.0/(t52303*t52303)*t52290*t52291*(gcab*t52281* \
                   2.0+t52281*t52285*t52288*6.0+gcab*t52281*t52288*t52289*6.0+t52281*t52290*t52285*t52289*2.0)-ccab2* \
                   1.0/(t52294*t52294)*t52288*t52289*(gcab*t52281+t52281*t52285*t52288)+(ccab2*t52281*t52285*t52288)/ \
                   t52294-ccab1*t52281*t52285*1.0/(t52287*t52287)*t52288*(1.0/2.0)+(ccab3*gcab*t52281*t52288*t52289*(3.0/ \
                   2.0))/t52298+(ccab4*t52281*t52290*t52285*t52289*2.0)/t52303-ccab3*gcab*t52285*t52288*t52289*1.0/(t52298* \
                   t52298)*(gcab*t52281*(3.0/2.0)+t52281*t52285*t52288*3.0+gcab*t52281*t52288*t52289*(3.0/2.0)))-rho_b[index]* \
                   t52338*((ccaa1*gcaa*t52281)/t52342-ccaa1*gamma_bb[index]*1.0/(t52342*t52342)*t52309*t52339+(ccaa2* \
                   gamma_bb[index]*t52309*t52339*2.0)/t52354-ccaa2*t52305*t52309*1.0/(t52354*t52354)*t52339*(gcaa*t52281* \
                   2.0+gamma_bb[index]*t52309*t52339*2.0)+(ccaa4*gamma_bb[index]*t52340*t52305*t52308*4.0)/t52351+(ccaa3* \
                   gcaa*t52310*t52305*t52339*3.0)/t52346-ccaa4*t52340*1.0/(t52351*t52351)*t52308*t52317*(gcaa*t52281* \
                   4.0+gamma_bb[index]*t52309*t52339*1.2E1+gamma_bb[index]*t52340*t52305*t52308*4.0+gcaa*t52310*t52305* \
                   t52339*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t52310*t52305*1.0/(t52346*t52346)*t52339*(gcaa*t52281*3.0+ \
                   gamma_bb[index]*t52309*t52339*6.0+gcaa*t52310*t52305*t52339*3.0))+c0*pow(rho_b[index],4.0/3.0)*((cx1* \
                   gx*t52281)/t52312-cx1*gamma_bb[index]*1.0/(t52312*t52312)*t52306*t52309+(cx2*gamma_bb[index]*t52306* \
                   t52309*2.0)/t52325-cx2*t52305*t52306*1.0/(t52325*t52325)*t52309*(gx*t52281*2.0+gamma_bb[index]*t52306* \
                   t52309*2.0)+(cx4*gamma_bb[index]*t52305*t52307*t52308*4.0)/t52322+(cx3*gx*t52310*t52305*t52306*3.0) \
                   /t52316-cx4*1.0/(t52322*t52322)*t52307*t52308*t52317*(gx*t52281*4.0+gamma_bb[index]*t52306*t52309* \
                   1.2E1+gamma_bb[index]*t52305*t52307*t52308*4.0+gx*t52310*t52305*t52306*1.2E1)-cx3*gamma_bb[index]* \
                   gx*t52310*t52305*t52306*1.0/(t52316*t52316)*(gx*t52281*3.0+gamma_bb[index]*t52306*t52309*6.0+gx*t52310* \
                   t52305*t52306*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t55111 = 1.0/pow(rho_b[index],8.0/3.0);
                double t55112 = gamma_bb[index]*gamma_bb[index];
                double t55113 = gx*gx;
                double t55114 = t55113*t55113;
                double t55115 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t55116 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t55117 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t55118 = gamma_bb[index]*gx*t55111;
                double t55119 = t55118+1.0;
                double t55120 = gamma_bb[index]*gx*t55111*3.0;
                double t55121 = gamma_bb[index]*gx*t55112*t55113*t55117;
                double t55122 = t55112*t55113*t55116*3.0;
                double t55123 = t55120+t55121+t55122+1.0;
                double t55124 = t55112*t55112;
                double t55125 = gamma_bb[index]*gx*t55111*4.0;
                double t55126 = gamma_bb[index]*gx*t55112*t55113*t55117*4.0;
                double t55127 = t55112*t55113*t55116*6.0;
                double t55128 = t55114*t55115*t55124;
                double t55129 = t55125+t55126+t55127+t55128+1.0;
                double t55130 = gamma_bb[index]*gx*t55111*2.0;
                double t55131 = t55112*t55113*t55116;
                double t55132 = t55130+t55131+1.0;
                double t55133 = 1.0/pow(rho_b[index],1.0/3.0);
                double t55134 = c*t55133;
                double t55135 = sqrt(t55134);
                double t55136 = pow(t55134,3.0/2.0);
                double t55137 = c*c;
                double t55138 = 1.0/pow(rho_b[index],2.0/3.0);
                double t55139 = 1.0/c0p;
                double t55140 = b1p*t55135;
                double t55141 = b3p*t55136;
                double t55142 = b4p*t55137*t55138;
                double t55143 = b2p*c*t55133;
                double t55144 = t55140+t55141+t55142+t55143;
                double t55145 = 1.0/t55144;
                double t55146 = t55145*t55139*(1.0/2.0);
                double t55147 = t55146+1.0;
                double t55148 = log(t55147);
                double t55149 = a1p*c*t55133;
                double t55150 = t55149+1.0;
                double t55151 = gcaa*gcaa;
                double t55152 = t55151*t55151;
                double t55153 = gamma_bb[index]*gcaa*t55111;
                double t55154 = t55153+1.0;
                double t55155 = gamma_bb[index]*gcaa*t55111*3.0;
                double t55156 = gamma_bb[index]*gcaa*t55112*t55151*t55117;
                double t55157 = t55112*t55151*t55116*3.0;
                double t55158 = t55155+t55156+t55157+1.0;
                double t55159 = gamma_bb[index]*gcaa*t55111*4.0;
                double t55160 = gamma_bb[index]*gcaa*t55112*t55151*t55117*4.0;
                double t55161 = t55112*t55151*t55116*6.0;
                double t55162 = t55115*t55124*t55152;
                double t55163 = t55160+t55161+t55162+t55159+1.0;
                double t55164 = gamma_bb[index]*gcaa*t55111*2.0;
                double t55165 = t55112*t55151*t55116;
                double t55166 = t55164+t55165+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t55135+ \
                   b3f*t55136+b2f*c*t55133+b4f*t55137*t55138))+1.0)*(a1f*c*t55133+1.0)*2.0-c0p*t55150*t55148*2.0))/(two_13* \
                   2.0-2.0)+c0p*t55150*t55148*2.0)*((ccaa1*gcaa*t55111)/t55154-ccaa1*gamma_bb[index]*t55151*t55116*1.0/ \
                   (t55154*t55154)+(ccaa2*gamma_bb[index]*t55151*t55116*2.0)/t55166-ccaa2*t55112*t55151*t55116*1.0/(t55166* \
                   t55166)*(gcaa*t55111*2.0+gamma_bb[index]*t55151*t55116*2.0)+(ccaa4*gamma_bb[index]*t55112*t55115*t55152* \
                   4.0)/t55163+(ccaa3*gcaa*t55112*t55151*t55117*3.0)/t55158-ccaa4*t55115*t55124*t55152*1.0/(t55163*t55163) \
                   *(gcaa*t55111*4.0+gamma_bb[index]*t55151*t55116*1.2E1+gamma_bb[index]*t55112*t55115*t55152*4.0+gcaa* \
                   t55112*t55151*t55117*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t55112*t55151*t55117*1.0/(t55158*t55158)*(gcaa* \
                   t55111*3.0+gamma_bb[index]*t55151*t55116*6.0+gcaa*t55112*t55151*t55117*3.0))+c0*pow(rho_b[index],4.0/ \
                   3.0)*((cx1*gx*t55111)/t55119-cx1*gamma_bb[index]*t55113*t55116*1.0/(t55119*t55119)+(cx2*gamma_bb[index]* \
                   t55113*t55116*2.0)/t55132-cx2*t55112*t55113*1.0/(t55132*t55132)*t55116*(gx*t55111*2.0+gamma_bb[index]* \
                   t55113*t55116*2.0)+(cx4*gamma_bb[index]*t55112*t55114*t55115*4.0)/t55129+(cx3*gx*t55112*t55113*t55117* \
                   3.0)/t55123-cx4*t55114*t55115*t55124*1.0/(t55129*t55129)*(gx*t55111*4.0+gamma_bb[index]*t55113*t55116* \
                   1.2E1+gamma_bb[index]*t55112*t55114*t55115*4.0+gx*t55112*t55113*t55117*1.2E1)-cx3*gamma_bb[index]* \
                   gx*t55112*t55113*1.0/(t55123*t55123)*t55117*(gx*t55111*3.0+gamma_bb[index]*t55113*t55116*6.0+gx*t55112* \
                   t55113*t55117*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t52358 = rho_a[index]+rho_b[index];
            double t52359 = 1.0/pow(t52358,1.0/3.0);
            double t52360 = c*t52359;
            double t52361 = sqrt(t52360);
            double t52362 = b1p*t52361;
            double t52363 = pow(t52360,3.0/2.0);
            double t52364 = b3p*t52363;
            double t52365 = c*c;
            double t52366 = 1.0/pow(t52358,2.0/3.0);
            double t52367 = b4p*t52365*t52366;
            double t52368 = b2p*c*t52359;
            double t52369 = t52362+t52364+t52367+t52368;
            double t52370 = 1.0/pow(t52358,4.0/3.0);
            double t52371 = 1.0/c0p;
            double t52372 = 1.0/t52369;
            double t52373 = t52371*t52372*(1.0/2.0);
            double t52374 = t52373+1.0;
            double t52375 = a1p*c*t52359;
            double t52376 = t52375+1.0;
            double t52377 = rho_a[index]-rho_b[index];
            double t52378 = t52377*t52377;
            double t52379 = 1.0/t52358;
            double t52380 = t52377*t52379;
            double t52381 = two_13*2.0;
            double t52382 = t52381-2.0;
            double t52383 = 1.0/t52382;
            double t52384 = 1.0/c0f;
            double t52385 = b1f*t52361;
            double t52386 = b3f*t52363;
            double t52387 = b4f*t52365*t52366;
            double t52388 = b2f*c*t52359;
            double t52389 = t52385+t52386+t52387+t52388;
            double t52390 = 1.0/t52389;
            double t52391 = t52390*t52384*(1.0/2.0);
            double t52392 = t52391+1.0;
            double t52393 = log(t52392);
            double t52394 = a1f*c*t52359;
            double t52395 = t52394+1.0;
            double t52396 = log(t52374);
            double t52406 = c0f*t52393*t52395*2.0;
            double t52407 = c0p*t52376*t52396*2.0;
            double t52397 = t52406-t52407;
            double t52398 = t52380+1.0;
            double t52399 = pow(t52398,4.0/3.0);
            double t52400 = -t52380+1.0;
            double t52401 = pow(t52400,4.0/3.0);
            double t52402 = t52401+t52399-2.0;
            double t52403 = 1.0/(t52358*t52358);
            double t52434 = t52403*t52377;
            double t52404 = -t52434+t52379;
            double t52405 = 1.0/(t52358*t52358*t52358*t52358);
            double t52408 = t52378*t52378;
            double t52409 = 1.0/pow(t52358,5.0/3.0);
            double t52410 = 1.0/sqrt(t52360);
            double t52411 = 1.0/t52374;
            double t52412 = 1.0/(t52369*t52369);
            double t52413 = b4p*t52409*t52365*(2.0/3.0);
            double t52414 = b2p*c*t52370*(1.0/3.0);
            double t52415 = b1p*c*t52410*t52370*(1.0/6.0);
            double t52416 = b3p*c*t52361*t52370*(1.0/2.0);
            double t52417 = t52413+t52414+t52415+t52416;
            double t52418 = t52411*t52412*t52417*t52376;
            double t52419 = 1.0/(t52358*t52358*t52358*t52358*t52358);
            double t52420 = 1.0/d2fz0;
            double t52421 = 1.0/Aa;
            double t52422 = b1a*t52361;
            double t52423 = b3a*t52363;
            double t52424 = b4a*t52365*t52366;
            double t52425 = b2a*c*t52359;
            double t52426 = t52422+t52423+t52424+t52425;
            double t52427 = 1.0/t52426;
            double t52428 = t52421*t52427*(1.0/2.0);
            double t52429 = t52428+1.0;
            double t52430 = log(t52429);
            double t52431 = a1a*c*t52359;
            double t52432 = t52431+1.0;
            double t52433 = pow(t52398,1.0/3.0);
            double t52435 = t52404*t52433*(4.0/3.0);
            double t52436 = pow(t52400,1.0/3.0);
            double t52511 = t52404*t52436*(4.0/3.0);
            double t52437 = -t52511+t52435;
            double t52438 = t52405*t52408;
            double t52439 = t52438-1.0;
            double t52440 = 1.0/pow(rho_a[index],1.0/3.0);
            double t52441 = c*t52440;
            double t52442 = sqrt(t52441);
            double t52443 = b1f*t52442;
            double t52444 = pow(t52441,3.0/2.0);
            double t52445 = b3f*t52444;
            double t52446 = 1.0/pow(rho_a[index],2.0/3.0);
            double t52447 = b4f*t52365*t52446;
            double t52448 = b2f*c*t52440;
            double t52449 = t52443+t52445+t52447+t52448;
            double t52450 = 1.0/pow(rho_a[index],4.0/3.0);
            double t52451 = b1p*t52442;
            double t52452 = b3p*t52444;
            double t52453 = b4p*t52365*t52446;
            double t52454 = b2p*c*t52440;
            double t52455 = t52451+t52452+t52453+t52454;
            double t52456 = 1.0/pow(rho_a[index],5.0/3.0);
            double t52457 = 1.0/sqrt(t52441);
            double t52458 = 1.0/t52449;
            double t52459 = t52384*t52458*(1.0/2.0);
            double t52460 = t52459+1.0;
            double t52461 = 1.0/t52455;
            double t52462 = t52371*t52461*(1.0/2.0);
            double t52463 = t52462+1.0;
            double t52464 = a1p*c*t52440;
            double t52465 = t52464+1.0;
            double t52466 = 1.0/t52463;
            double t52467 = 1.0/(t52455*t52455);
            double t52468 = b4p*t52365*t52456*(2.0/3.0);
            double t52469 = b2p*c*t52450*(1.0/3.0);
            double t52470 = b1p*c*t52450*t52457*(1.0/6.0);
            double t52471 = b3p*c*t52450*t52442*(1.0/2.0);
            double t52472 = t52470+t52471+t52468+t52469;
            double t52473 = t52472*t52465*t52466*t52467;
            double t52474 = log(t52463);
            double t52475 = pow(2.0,1.0/3.0);
            double t52476 = t52475*2.0;
            double t52477 = t52476-2.0;
            double t52478 = log(t52460);
            double t52479 = a1f*c*t52440;
            double t52480 = t52479+1.0;
            double t52481 = gcab*gcab;
            double t52485 = 1.0/pow(rho_a[index],8.0/3.0);
            double t52486 = gamma_aa[index]*t52485*(1.0/2.0);
            double t52487 = 1.0/pow(rho_b[index],8.0/3.0);
            double t52488 = gamma_bb[index]*t52487*(1.0/2.0);
            double t52482 = t52486+t52488;
            double t52483 = t52482*t52482;
            double t52484 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t52489 = t52481*t52481;
            double t52490 = t52483*t52483;
            double t52491 = t52481*t52483*6.0;
            double t52492 = gcab*t52481*t52482*t52483*4.0;
            double t52493 = t52490*t52489;
            double t52494 = gcab*t52482*4.0;
            double t52495 = t52491+t52492+t52493+t52494+1.0;
            double t52496 = gcab*t52482;
            double t52497 = t52496+1.0;
            double t52498 = t52481*t52483;
            double t52499 = gcab*t52482*2.0;
            double t52500 = t52498+t52499+1.0;
            double t52501 = t52481*t52483*3.0;
            double t52502 = gcab*t52481*t52482*t52483;
            double t52503 = gcab*t52482*3.0;
            double t52504 = t52501+t52502+t52503+1.0;
            double t52505 = 1.0/t52500;
            double t52506 = 1.0/t52504;
            double t52507 = 1.0/t52497;
            double t52508 = 1.0/t52495;
            double t52509 = 1.0/pow(t52358,7.0/3.0);
            double t52510 = 1.0/pow(t52358,8.0/3.0);
            double t52512 = 1.0/t52392;
            double t52513 = 1.0/(t52389*t52389);
            double t52514 = b4f*t52409*t52365*(2.0/3.0);
            double t52515 = b2f*c*t52370*(1.0/3.0);
            double t52516 = b1f*c*t52410*t52370*(1.0/6.0);
            double t52517 = b3f*c*t52361*t52370*(1.0/2.0);
            double t52518 = t52514+t52515+t52516+t52517;
            double t52519 = a1f*c*c0f*t52370*t52393*(2.0/3.0);
            double t52521 = t52512*t52513*t52518*t52395;
            double t52522 = a1p*c*c0p*t52370*t52396*(2.0/3.0);
            double t52520 = -t52521-t52522+t52418+t52519;
            double t52523 = t52417*t52417;
            double t52524 = 1.0/pow(t52360,3.0/2.0);
            double t52525 = b4p*t52510*t52365*(1.0E1/9.0);
            double t52526 = b2p*c*t52509*(4.0/9.0);
            double t52527 = b1p*c*t52410*t52509*(2.0/9.0);
            double t52528 = b3p*c*t52361*t52509*(2.0/3.0);
            double t52529 = b3p*t52410*t52510*t52365*(1.0/1.2E1);
            double t52530 = t52525+t52526+t52527+t52528+t52529-b1p*t52510*t52524*t52365*(1.0/3.6E1);
            double t52531 = 1.0/(t52369*t52369*t52369);
            double t52532 = t52411*t52531*t52523*t52376*2.0;
            double t52533 = t52518*t52518;
            double t52534 = 1.0/(t52374*t52374);
            double t52535 = 1.0/(t52369*t52369*t52369*t52369);
            double t52536 = t52521+t52522-t52418-t52519;
            double t52537 = t52403*2.0;
            double t52538 = 1.0/(t52358*t52358*t52358);
            double t52545 = t52538*t52377*2.0;
            double t52539 = -t52545+t52537;
            double t52540 = t52404*t52404;
            double t52541 = a1p*c*c0p*t52509*t52396*(8.0/9.0);
            double t52542 = 1.0/(t52358*t52358*t52358*t52358*t52358*t52358);
            double t52543 = t52408*t52419*4.0;
            double t52553 = t52405*t52377*t52378*4.0;
            double t52544 = t52543-t52553;
            double t52546 = t52436*t52539*(4.0/3.0);
            double t52547 = 1.0/pow(t52398,2.0/3.0);
            double t52548 = t52540*t52547*(4.0/9.0);
            double t52549 = 1.0/pow(t52400,2.0/3.0);
            double t52550 = t52540*t52549*(4.0/9.0);
            double t52551 = t52550+t52546+t52548-t52433*t52539*(4.0/3.0);
            double t52552 = 1.0/t52429;
            double t52554 = 1.0/(t52426*t52426);
            double t52555 = b4a*t52409*t52365*(2.0/3.0);
            double t52556 = b2a*c*t52370*(1.0/3.0);
            double t52557 = b1a*c*t52410*t52370*(1.0/6.0);
            double t52558 = b3a*c*t52361*t52370*(1.0/2.0);
            double t52559 = t52555+t52556+t52557+t52558;
            double t52560 = t52559*t52559;
            double t52561 = t52411*t52412*t52530*t52376;
            double t52562 = 1.0/t52460;
            double t52563 = b4f*t52365*t52456*(2.0/3.0);
            double t52564 = b2f*c*t52450*(1.0/3.0);
            double t52565 = b1f*c*t52450*t52457*(1.0/6.0);
            double t52566 = b3f*c*t52450*t52442*(1.0/2.0);
            double t52567 = t52563+t52564+t52565+t52566;
            double t52568 = 1.0/(t52449*t52449);
            double t52569 = 1.0/pow(rho_a[index],7.0/3.0);
            double t52570 = 1.0/pow(t52441,3.0/2.0);
            double t52571 = t52567*t52567;
            double t52572 = t52472*t52472;
            double t52573 = 1.0/(t52455*t52455*t52455);
            double t52574 = t52572*t52465*t52573*t52466*2.0;
            double t52575 = b4p*t52365*t52485*(1.0E1/9.0);
            double t52576 = b2p*c*t52569*(4.0/9.0);
            double t52577 = b3p*t52365*t52457*t52485*(1.0/1.2E1);
            double t52578 = b1p*c*t52457*t52569*(2.0/9.0);
            double t52579 = b3p*c*t52442*t52569*(2.0/3.0);
            double t52733 = b1p*t52570*t52365*t52485*(1.0/3.6E1);
            double t52580 = -t52733+t52575+t52576+t52577+t52578+t52579;
            double t52581 = 1.0/(t52463*t52463);
            double t52582 = 1.0/(t52455*t52455*t52455*t52455);
            double t52583 = a1p*c*c0p*t52474*t52569*(8.0/9.0);
            double t52584 = a1f*c*c0f*t52450*t52478*(2.0/3.0);
            double t52585 = a1p*c*c0p*t52450*t52474*(2.0/3.0);
            double t52586 = t52523*t52371*t52534*t52535*t52376*(1.0/2.0);
            double t52658 = t52480*t52562*t52567*t52568;
            double t52587 = t52473+t52584-t52585-t52658;
            double t52588 = gamma_aa[index]*gamma_aa[index];
            double t52589 = gcaa*gcaa;
            double t52590 = t52588*t52588;
            double t52591 = t52589*t52589;
            double t52592 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t52593 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t52594 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t52595 = c0f*t52480*t52478*2.0;
            double t52597 = c0p*t52465*t52474*2.0;
            double t52596 = t52595-t52597;
            double t52598 = 1.0/pow(rho_b[index],1.0/3.0);
            double t52599 = c*t52598;
            double t52600 = sqrt(t52599);
            double t52601 = pow(t52599,3.0/2.0);
            double t52602 = 1.0/pow(rho_b[index],2.0/3.0);
            double t52603 = b1p*t52600;
            double t52604 = b3p*t52601;
            double t52605 = b4p*t52602*t52365;
            double t52606 = b2p*c*t52598;
            double t52607 = t52603+t52604+t52605+t52606;
            double t52608 = 1.0/t52607;
            double t52609 = t52371*t52608*(1.0/2.0);
            double t52610 = t52609+1.0;
            double t52611 = log(t52610);
            double t52612 = a1p*c*t52598;
            double t52613 = t52612+1.0;
            double t52614 = c0p*t52611*t52613*2.0;
            double t52615 = t52402*t52405*t52408*t52383*t52397;
            double t52616 = Aa*t52402*t52420*t52430*t52432*t52383*t52439*2.0;
            double t52617 = gamma_aa[index]*gcab*t52484*(1.6E1/3.0);
            double t52618 = gamma_aa[index]*gcab*t52481*t52483*t52484*1.6E1;
            double t52619 = gamma_aa[index]*t52482*t52483*t52484*t52489*(1.6E1/3.0);
            double t52620 = gamma_aa[index]*t52481*t52482*t52484*1.6E1;
            double t52621 = t52620+t52617+t52618+t52619;
            double t52622 = 1.0/(t52497*t52497);
            double t52623 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t52624 = gamma_aa[index]*gcab*t52484*(8.0/3.0);
            double t52625 = gamma_aa[index]*t52481*t52482*t52484*(8.0/3.0);
            double t52626 = t52624+t52625;
            double t52627 = 1.0/(t52504*t52504);
            double t52628 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t52629 = 1.0/(t52495*t52495);
            double t52630 = 1.0/(t52500*t52500);
            double t52631 = gamma_aa[index]*gcab*t52484*4.0;
            double t52632 = gamma_aa[index]*gcab*t52481*t52483*t52484*4.0;
            double t52633 = gamma_aa[index]*t52481*t52482*t52484*8.0;
            double t52634 = t52631+t52632+t52633;
            double t52635 = t52383*t52477*t52596;
            double t52636 = t52635+t52597;
            double t52637 = gamma_aa[index]*gcaa*t52485*4.0;
            double t52638 = gamma_aa[index]*gcaa*t52593*t52588*t52589*4.0;
            double t52639 = t52594*t52588*t52589*6.0;
            double t52640 = t52590*t52591*t52592;
            double t52641 = t52640+t52637+t52638+t52639+1.0;
            double t52642 = 1.0/t52641;
            double t52643 = gamma_aa[index]*gcaa*t52485;
            double t52644 = t52643+1.0;
            double t52645 = 1.0/t52644;
            double t52646 = gamma_aa[index]*gcaa*t52485*3.0;
            double t52647 = gamma_aa[index]*gcaa*t52593*t52588*t52589;
            double t52648 = t52594*t52588*t52589*3.0;
            double t52649 = t52646+t52647+t52648+1.0;
            double t52650 = 1.0/t52649;
            double t52651 = gamma_aa[index]*gcaa*t52485*2.0;
            double t52652 = t52594*t52588*t52589;
            double t52653 = t52651+t52652+1.0;
            double t52654 = 1.0/t52653;
            double t52655 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t52656 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t52657 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t52659 = t52383*t52477*t52587;
            double t52660 = ccaa4*t52642*t52590*t52591*t52657*(3.2E1/3.0);
            double t52661 = ccaa1*gamma_aa[index]*gcaa*t52645*t52484*(8.0/3.0);
            double t52662 = ccaa3*gamma_aa[index]*gcaa*t52650*t52656*t52588*t52589*8.0;
            double t52663 = ccaa2*t52654*t52655*t52588*t52589*(1.6E1/3.0);
            double t52664 = 1.0/(t52644*t52644);
            double t52665 = gamma_aa[index]*gcaa*t52484*8.0;
            double t52666 = gamma_aa[index]*gcaa*t52656*t52588*t52589*8.0;
            double t52667 = t52655*t52588*t52589*1.6E1;
            double t52668 = t52665+t52666+t52667;
            double t52669 = 1.0/(t52649*t52649);
            double t52670 = gamma_aa[index]*gcaa*t52484*(3.2E1/3.0);
            double t52671 = gamma_aa[index]*gcaa*t52656*t52588*t52589*3.2E1;
            double t52672 = t52655*t52588*t52589*3.2E1;
            double t52673 = t52590*t52591*t52657*(3.2E1/3.0);
            double t52674 = t52670+t52671+t52672+t52673;
            double t52675 = 1.0/(t52641*t52641);
            double t52676 = gamma_aa[index]*gcaa*t52484*(1.6E1/3.0);
            double t52677 = t52655*t52588*t52589*(1.6E1/3.0);
            double t52678 = t52676+t52677;
            double t52679 = 1.0/(t52653*t52653);
            double t52680 = t52660+t52661+t52662+t52663-ccaa1*t52655*t52664*t52588*t52589*(8.0/3.0)-ccaa4*t52590* \
               t52591*t52592*t52674*t52675-ccaa2*t52594*t52588*t52678*t52589*t52679-ccaa3*gamma_aa[index]*gcaa*t52593* \
               t52668*t52588*t52669*t52589;
            double t52681 = -t52473+t52585+t52659;
            double t52682 = gx*gx;
            double t52683 = t52682*t52682;
            double t52684 = 1.0/pow(rho_a[index],1.0E1);
            double t52685 = gamma_aa[index]*gx*t52485;
            double t52686 = t52685+1.0;
            double t52706 = gamma_aa[index]*gx*t52484*(3.2E1/3.0);
            double t52707 = gamma_aa[index]*gx*t52682*t52656*t52588*3.2E1;
            double t52708 = t52655*t52682*t52588*3.2E1;
            double t52709 = t52590*t52683*t52657*(3.2E1/3.0);
            double t52687 = t52706+t52707+t52708+t52709;
            double t52688 = gamma_aa[index]*gx*t52485*4.0;
            double t52689 = gamma_aa[index]*gx*t52682*t52593*t52588*4.0;
            double t52690 = t52682*t52594*t52588*6.0;
            double t52691 = t52590*t52592*t52683;
            double t52692 = t52690+t52691+t52688+t52689+1.0;
            double t52712 = gamma_aa[index]*gx*t52484*(1.6E1/3.0);
            double t52713 = t52655*t52682*t52588*(1.6E1/3.0);
            double t52693 = t52712+t52713;
            double t52694 = gamma_aa[index]*gx*t52485*2.0;
            double t52695 = t52682*t52594*t52588;
            double t52696 = t52694+t52695+1.0;
            double t52697 = gamma_aa[index]*gx*t52485*3.0;
            double t52698 = gamma_aa[index]*gx*t52682*t52593*t52588;
            double t52699 = t52682*t52594*t52588*3.0;
            double t52700 = t52697+t52698+t52699+1.0;
            double t52701 = 1.0/(t52700*t52700);
            double t52702 = gamma_aa[index]*gx*t52484*8.0;
            double t52703 = gamma_aa[index]*gx*t52682*t52656*t52588*8.0;
            double t52704 = t52655*t52682*t52588*1.6E1;
            double t52705 = t52702+t52703+t52704;
            double t52710 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t52711 = 1.0/(t52692*t52692);
            double t52714 = 1.0/(t52696*t52696);
            double t52715 = 1.0/t52692;
            double t52716 = 1.0/t52686;
            double t52717 = 1.0/t52700;
            double t52718 = 1.0/t52696;
            double t52719 = 1.0/(t52686*t52686);
            double t52720 = ccaa4*t52642*t52590*t52591*t52592;
            double t52721 = ccaa1*gamma_aa[index]*gcaa*t52645*t52485;
            double t52722 = ccaa3*gamma_aa[index]*gcaa*t52650*t52593*t52588*t52589;
            double t52723 = ccaa2*t52654*t52594*t52588*t52589;
            double t52724 = ccaa0+t52720+t52721+t52722+t52723;
            double t52725 = 1.0/(t52449*t52449*t52449);
            double t52726 = b4f*t52365*t52485*(1.0E1/9.0);
            double t52727 = b2f*c*t52569*(4.0/9.0);
            double t52728 = b3f*t52365*t52457*t52485*(1.0/1.2E1);
            double t52729 = b1f*c*t52457*t52569*(2.0/9.0);
            double t52730 = b3f*c*t52442*t52569*(2.0/3.0);
            double t52731 = t52730+t52726+t52727+t52728+t52729-b1f*t52570*t52365*t52485*(1.0/3.6E1);
            double t52732 = t52731*t52480*t52562*t52568;
            double t52734 = t52580*t52465*t52466*t52467;
            double t52735 = 1.0/(t52460*t52460);
            double t52736 = 1.0/(t52449*t52449*t52449*t52449);
            double t52737 = t52480*t52571*t52384*t52735*t52736*(1.0/2.0);
            double t52738 = t52371*t52572*t52581*t52465*t52582*(1.0/2.0);
            double t52739 = a1f*c*t52450*t52562*t52567*t52568*(2.0/3.0);
            double t52740 = a1p*c*t52450*t52472*t52466*t52467*(2.0/3.0);
            v_rho_a_rho_a_[index] = (rho_a[index]*t52636+rho_b[index]*(t52614-t52383*t52477*(t52614-c0f*log((t52384* \
               (1.0/2.0))/(b1f*t52600+b3f*t52601+b2f*c*t52598+b4f*t52602*t52365)+1.0)*(a1f*c*t52598+1.0)*2.0))-t52358* \
               (t52407+t52615+t52616))*(-ccab2*t52630*t52481*t52483*(gamma_aa[index]*gcab*t52628*(8.8E1/9.0)+t52623* \
               t52481*t52588*(3.2E1/9.0)+gamma_aa[index]*t52481*t52482*t52628*(8.8E1/9.0))+ccab2*1.0/(t52500*t52500* \
               t52500)*t52481*(t52626*t52626)*t52483*2.0+ccab4*(t52621*t52621)*t52490*1.0/(t52495*t52495*t52495)* \
               t52489*2.0+ccab1*gamma_aa[index]*gcab*t52507*t52628*(4.4E1/9.0)-ccab1*t52622*t52623*t52481*t52588* \
               (3.2E1/9.0)+ccab2*t52505*t52623*t52481*t52588*(3.2E1/9.0)-ccab4*t52490*t52629*t52489*(gamma_aa[index]* \
               gcab*t52628*(1.76E2/9.0)+t52623*t52481*t52588*(6.4E1/3.0)+gamma_aa[index]*t52481*t52482*t52628*(1.76E2/ \
               3.0)+t52623*t52483*t52489*t52588*(6.4E1/3.0)+gamma_aa[index]*gcab*t52481*t52483*t52628*(1.76E2/3.0) \
               +gamma_aa[index]*t52482*t52483*t52628*t52489*(1.76E2/9.0)+gcab*t52623*t52481*t52482*t52588*(1.28E2/ \
               3.0))+ccab4*t52623*t52508*t52483*t52489*t52588*(6.4E1/3.0)-ccab1*gamma_aa[index]*t52622*t52481*t52482* \
               t52628*(4.4E1/9.0)+ccab2*gamma_aa[index]*t52505*t52481*t52482*t52628*(8.8E1/9.0)+ccab3*gcab*1.0/(t52504* \
               t52504*t52504)*t52481*(t52634*t52634)*t52482*t52483*2.0+ccab3*gamma_aa[index]*gcab*t52506*t52481*t52483* \
               t52628*(4.4E1/3.0)-ccab2*gamma_aa[index]*t52630*t52481*t52482*t52626*t52484*(1.6E1/3.0)+ccab4*gamma_aa[index]* \
               t52508*t52482*t52483*t52628*t52489*(1.76E2/9.0)+ccab3*gcab*t52506*t52623*t52481*t52482*t52588*(3.2E1/ \
               3.0)+ccab1*gcab*t52623*t52481*t52482*1.0/(t52497*t52497*t52497)*t52588*(3.2E1/9.0)-ccab3*gcab*t52481* \
               t52482*t52483*t52627*(gamma_aa[index]*gcab*t52628*(4.4E1/3.0)+t52623*t52481*t52588*(3.2E1/3.0)+gamma_aa[index]* \
               t52481*t52482*t52628*(8.8E1/3.0)+gamma_aa[index]*gcab*t52481*t52483*t52628*(4.4E1/3.0)+gcab*t52623* \
               t52481*t52482*t52588*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t52481*t52634*t52483*t52627*t52484*8.0- \
               ccab4*gamma_aa[index]*t52621*t52482*t52483*t52484*t52629*t52489*(3.2E1/3.0))+t52724*t52681*2.0+t52680* \
               t52636*2.0+(t52407+t52615+t52616+rho_a[index]*(-t52473+t52585+t52383*t52477*(t52473+t52584-t52480* \
               t52562*t52567*t52568-a1p*c*c0p*t52450*t52474*(2.0/3.0)))+t52358*(t52418-a1p*c*c0p*t52370*t52396*(2.0/ \
               3.0)-t52402*t52520*t52405*t52408*t52383-t52402*t52408*t52383*t52419*t52397*4.0+t52405*t52408*t52383* \
               t52437*t52397+t52402*t52405*t52383*t52377*t52378*t52397*4.0-Aa*t52402*t52420*t52430*t52432*t52544* \
               t52383*2.0+Aa*t52420*t52430*t52432*t52383*t52437*t52439*2.0+t52402*t52420*t52432*t52552*t52383*t52554* \
               t52439*t52559-Aa*a1a*c*t52402*t52420*t52430*t52370*t52383*t52439*(2.0/3.0))-c0p*t52465*t52474*2.0- \
               t52383*t52477*t52596)*(ccab1*gamma_aa[index]*gcab*t52507*t52484*(4.0/3.0)-ccab2*t52630*t52481*t52626* \
               t52483-ccab4*t52621*t52490*t52629*t52489-ccab1*gamma_aa[index]*t52622*t52481*t52482*t52484*(4.0/3.0) \
               +ccab2*gamma_aa[index]*t52505*t52481*t52482*t52484*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t52506*t52481* \
               t52483*t52484*4.0+ccab4*gamma_aa[index]*t52508*t52482*t52483*t52484*t52489*(1.6E1/3.0)-ccab3*gcab* \
               t52481*t52634*t52482*t52483*t52627)*2.0-(ccab0+ccab1*gcab*t52507*t52482+ccab2*t52505*t52481*t52483+ \
               ccab4*t52490*t52508*t52489+ccab3*gcab*t52506*t52481*t52482*t52483)*(-t52358*(-t52532-t52541+t52561+ \
               t52586+t52402*t52405*t52408*t52383*(t52532+t52541-t52561-t52586-t52512*t52533*t52395*1.0/(t52389*t52389* \
               t52389)*2.0+t52512*t52513*t52395*(b2f*c*t52509*(4.0/9.0)+b4f*t52510*t52365*(1.0E1/9.0)+b1f*c*t52410* \
               t52509*(2.0/9.0)+b3f*c*t52361*t52509*(2.0/3.0)-b1f*t52510*t52524*t52365*(1.0/3.6E1)+b3f*t52410*t52510* \
               t52365*(1.0/1.2E1))+t52533*1.0/(t52392*t52392)*t52384*t52395*1.0/(t52389*t52389*t52389*t52389)*(1.0/ \
               2.0)-a1f*c*c0f*t52509*t52393*(8.0/9.0)+a1f*c*t52512*t52513*t52370*t52518*(2.0/3.0)-a1p*c*t52411*t52412* \
               t52370*t52417*(2.0/3.0))+t52402*t52408*t52383*t52419*t52536*8.0-t52402*t52542*t52408*t52383*t52397* \
               2.0E1-t52405*t52408*t52383*t52437*t52536*2.0-t52405*t52551*t52408*t52383*t52397-t52402*t52405*t52383* \
               t52378*t52397*1.2E1+t52408*t52383*t52419*t52437*t52397*8.0+t52402*t52520*t52405*t52383*t52377*t52378* \
               8.0+t52402*t52383*t52419*t52377*t52378*t52397*3.2E1-t52405*t52383*t52437*t52377*t52378*t52397*8.0+ \
               a1p*c*t52411*t52412*t52370*t52417*(2.0/3.0)-Aa*t52420*t52430*t52432*t52551*t52383*t52439*2.0+Aa*t52420* \
               t52430*t52432*t52544*t52383*t52437*4.0-Aa*t52402*t52420*t52430*t52432*t52383*(t52542*t52408*2.0E1+ \
               t52405*t52378*1.2E1-t52419*t52377*t52378*3.2E1)*2.0+t52402*t52420*t52432*t52552*t52544*t52383*t52554* \
               t52559*2.0-t52420*t52432*t52552*t52383*t52437*t52554*t52439*t52559*2.0-t52402*t52420*t52432*t52560* \
               1.0/(t52426*t52426*t52426)*t52552*t52383*t52439*2.0+t52402*t52420*t52432*t52552*t52383*t52554*t52439* \
               (b2a*c*t52509*(4.0/9.0)+b4a*t52510*t52365*(1.0E1/9.0)+b1a*c*t52410*t52509*(2.0/9.0)+b3a*c*t52361*t52509* \
               (2.0/3.0)-b1a*t52510*t52524*t52365*(1.0/3.6E1)+b3a*t52410*t52510*t52365*(1.0/1.2E1))-Aa*a1a*c*t52402* \
               t52420*t52430*t52370*t52544*t52383*(4.0/3.0)-Aa*a1a*c*t52402*t52420*t52430*t52383*t52509*t52439*(8.0/ \
               9.0)+Aa*a1a*c*t52420*t52430*t52370*t52383*t52437*t52439*(4.0/3.0)+t52402*t52420*t52421*t52432*t52560* \
               1.0/(t52426*t52426*t52426*t52426)*t52383*1.0/(t52429*t52429)*t52439*(1.0/2.0)+a1a*c*t52402*t52420* \
               t52370*t52552*t52383*t52554*t52439*t52559*(2.0/3.0))+rho_a[index]*(t52740+t52734-t52574-t52583+t52738+ \
               t52383*t52477*(t52732+t52574+t52583+t52737+t52739-t52480*t52562*t52571*t52725*2.0-t52580*t52465*t52466* \
               t52467-a1f*c*c0f*t52478*t52569*(8.0/9.0)-t52371*t52572*t52581*t52465*t52582*(1.0/2.0)-a1p*c*t52450* \
               t52472*t52466*t52467*(2.0/3.0)))+t52383*t52477*t52587*2.0+t52411*t52412*t52417*t52376*2.0-t52472*t52465* \
               t52466*t52467*2.0+a1p*c*c0p*t52450*t52474*(4.0/3.0)-a1p*c*c0p*t52370*t52396*(4.0/3.0)+t52402*t52405* \
               t52408*t52383*t52536*2.0-t52402*t52408*t52383*t52419*t52397*8.0+t52405*t52408*t52383*t52437*t52397* \
               2.0+t52402*t52405*t52383*t52377*t52378*t52397*8.0-Aa*t52402*t52420*t52430*t52432*t52544*t52383*4.0+ \
               Aa*t52420*t52430*t52432*t52383*t52437*t52439*4.0+t52402*t52420*t52432*t52552*t52383*t52554*t52439* \
               t52559*2.0-Aa*a1a*c*t52402*t52420*t52430*t52370*t52383*t52439*(4.0/3.0))+rho_a[index]*t52724*(t52740+ \
               t52734-t52574-t52583+t52738-t52383*t52477*(t52740-t52732+t52734-t52574-t52583-t52737+t52738-t52739+ \
               t52480*t52562*t52571*t52725*2.0+a1f*c*c0f*t52478*t52569*(8.0/9.0)))-c0*pow(rho_a[index],1.0/3.0)*(cx1* \
               gamma_aa[index]*gx*t52716*t52484*(8.0/3.0)-cx1*t52655*t52682*t52719*t52588*(8.0/3.0)+cx2*t52655*t52682* \
               t52718*t52588*(1.6E1/3.0)+cx4*t52715*t52590*t52683*t52657*(3.2E1/3.0)-cx2*t52714*t52682*t52594*t52693* \
               t52588-cx4*t52711*t52590*t52592*t52683*t52687+cx3*gamma_aa[index]*gx*t52717*t52682*t52656*t52588*8.0- \
               cx3*gamma_aa[index]*gx*t52701*t52705*t52682*t52593*t52588)*(8.0/3.0)-rho_a[index]*t52636*(ccaa1*gamma_aa[index]* \
               gcaa*t52645*t52628*(8.8E1/9.0)+ccaa4*t52710*t52642*t52590*t52591*(1.12E3/9.0)-ccaa1*t52623*t52664* \
               t52588*t52589*2.4E1+ccaa2*t52623*t52654*t52588*t52589*(3.04E2/9.0)-ccaa4*t52590*t52591*t52674*t52657* \
               t52675*(6.4E1/3.0)-ccaa2*t52655*t52588*t52678*t52589*t52679*(3.2E1/3.0)-ccaa2*t52594*t52588*t52589* \
               t52679*(gamma_aa[index]*gcaa*t52628*(1.76E2/9.0)+t52623*t52588*t52589*(3.04E2/9.0))-ccaa4*t52590*t52591* \
               t52592*t52675*(gamma_aa[index]*gcaa*t52628*(3.52E2/9.0)+t52710*t52590*t52591*(1.12E3/9.0)+t52623*t52588* \
               t52589*(6.08E2/3.0)+gamma_aa[index]*gcaa*t52684*t52588*t52589*2.88E2)+ccaa4*1.0/(t52641*t52641*t52641) \
               *t52590*t52591*t52592*(t52674*t52674)*2.0+ccaa2*1.0/(t52653*t52653*t52653)*t52594*t52588*(t52678*t52678) \
               *t52589*2.0+ccaa3*gamma_aa[index]*gcaa*t52650*t52684*t52588*t52589*7.2E1+ccaa1*gamma_aa[index]*gcaa* \
               1.0/(t52644*t52644*t52644)*t52684*t52588*t52589*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t52593*1.0/ \
               (t52649*t52649*t52649)*(t52668*t52668)*t52588*t52589*2.0-ccaa3*gamma_aa[index]*gcaa*t52593*t52588* \
               t52669*t52589*(gamma_aa[index]*gcaa*t52628*(8.8E1/3.0)+t52623*t52588*t52589*(3.04E2/3.0)+gamma_aa[index]* \
               gcaa*t52684*t52588*t52589*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t52656*t52668*t52588*t52669*t52589*1.6E1) \
               -rho_a[index]*t52680*t52681*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t52716*t52628* \
               (8.8E1/9.0)-cx1*t52623*t52682*t52719*t52588*2.4E1+cx2*t52623*t52682*t52718*t52588*(3.04E2/9.0)+cx4* \
               t52710*t52715*t52590*t52683*(1.12E3/9.0)-cx2*t52714*t52655*t52682*t52693*t52588*(3.2E1/3.0)-cx4*t52711* \
               t52590*t52683*t52657*t52687*(6.4E1/3.0)-cx2*t52714*t52682*t52594*t52588*(gamma_aa[index]*gx*t52628* \
               (1.76E2/9.0)+t52623*t52682*t52588*(3.04E2/9.0))-cx4*t52711*t52590*t52592*t52683*(gamma_aa[index]*gx* \
               t52628*(3.52E2/9.0)+t52710*t52590*t52683*(1.12E3/9.0)+t52623*t52682*t52588*(6.08E2/3.0)+gamma_aa[index]* \
               gx*t52682*t52684*t52588*2.88E2)+cx2*t52682*t52594*(t52693*t52693)*t52588*1.0/(t52696*t52696*t52696) \
               *2.0+cx4*t52590*t52592*t52683*1.0/(t52692*t52692*t52692)*(t52687*t52687)*2.0+cx3*gamma_aa[index]*gx* \
               t52717*t52682*t52684*t52588*7.2E1+cx1*gamma_aa[index]*gx*t52682*t52684*1.0/(t52686*t52686*t52686)* \
               t52588*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*1.0/(t52700*t52700*t52700)*(t52705*t52705)*t52682*t52593* \
               t52588*2.0-cx3*gamma_aa[index]*gx*t52701*t52682*t52593*t52588*(gamma_aa[index]*gx*t52628*(8.8E1/3.0) \
               +t52623*t52682*t52588*(3.04E2/3.0)+gamma_aa[index]*gx*t52682*t52684*t52588*7.2E1)-cx3*gamma_aa[index]* \
               gx*t52701*t52705*t52682*t52656*t52588*1.6E1)+c0*t52446*(cx0+cx1*gamma_aa[index]*gx*t52716*t52485+cx2* \
               t52682*t52718*t52594*t52588+cx4*t52715*t52590*t52592*t52683+cx3*gamma_aa[index]*gx*t52717*t52682*t52593* \
               t52588)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            double t55809 = 1.0/pow(rho_a[index],1.0/3.0);
            double t55810 = c*t55809;
            double t55811 = sqrt(t55810);
            double t55812 = b1f*t55811;
            double t55813 = pow(t55810,3.0/2.0);
            double t55814 = b3f*t55813;
            double t55815 = c*c;
            double t55816 = 1.0/pow(rho_a[index],2.0/3.0);
            double t55817 = b4f*t55815*t55816;
            double t55818 = b2f*c*t55809;
            double t55819 = t55812+t55814+t55817+t55818;
            double t55820 = 1.0/pow(rho_a[index],4.0/3.0);
            double t55821 = b1p*t55811;
            double t55822 = b3p*t55813;
            double t55823 = b4p*t55815*t55816;
            double t55824 = b2p*c*t55809;
            double t55825 = t55821+t55822+t55823+t55824;
            double t55826 = 1.0/pow(rho_a[index],5.0/3.0);
            double t55827 = 1.0/sqrt(t55810);
            double t55828 = 1.0/c0f;
            double t55829 = 1.0/t55819;
            double t55830 = t55828*t55829*(1.0/2.0);
            double t55831 = t55830+1.0;
            double t55832 = 1.0/c0p;
            double t55833 = 1.0/t55825;
            double t55834 = t55832*t55833*(1.0/2.0);
            double t55835 = t55834+1.0;
            double t55836 = a1p*c*t55809;
            double t55837 = t55836+1.0;
            double t55838 = 1.0/t55835;
            double t55839 = 1.0/(t55825*t55825);
            double t55840 = b4p*t55815*t55826*(2.0/3.0);
            double t55841 = b2p*c*t55820*(1.0/3.0);
            double t55842 = b1p*c*t55820*t55827*(1.0/6.0);
            double t55843 = b3p*c*t55811*t55820*(1.0/2.0);
            double t55844 = t55840+t55841+t55842+t55843;
            double t55845 = t55844*t55837*t55838*t55839;
            double t55846 = log(t55835);
            double t55847 = gamma_aa[index]*gamma_aa[index];
            double t55848 = gcaa*gcaa;
            double t55849 = t55847*t55847;
            double t55850 = t55848*t55848;
            double t55851 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t55852 = 1.0/pow(rho_a[index],8.0/3.0);
            double t55853 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t55854 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t55855 = pow(2.0,1.0/3.0);
            double t55856 = t55855*2.0;
            double t55857 = t55856-2.0;
            double t55858 = two_13*2.0;
            double t55859 = t55858-2.0;
            double t55860 = 1.0/t55859;
            double t55861 = log(t55831);
            double t55862 = a1f*c*t55809;
            double t55863 = t55862+1.0;
            double t55864 = gamma_aa[index]*gcaa*t55852*4.0;
            double t55865 = gamma_aa[index]*gcaa*t55853*t55847*t55848*4.0;
            double t55866 = t55854*t55847*t55848*6.0;
            double t55867 = t55850*t55851*t55849;
            double t55868 = t55864+t55865+t55866+t55867+1.0;
            double t55869 = 1.0/t55868;
            double t55870 = gamma_aa[index]*gcaa*t55852;
            double t55871 = t55870+1.0;
            double t55872 = 1.0/t55871;
            double t55873 = gamma_aa[index]*gcaa*t55852*3.0;
            double t55874 = gamma_aa[index]*gcaa*t55853*t55847*t55848;
            double t55875 = t55854*t55847*t55848*3.0;
            double t55876 = t55873+t55874+t55875+1.0;
            double t55877 = 1.0/t55876;
            double t55878 = gamma_aa[index]*gcaa*t55852*2.0;
            double t55879 = t55854*t55847*t55848;
            double t55880 = t55878+t55879+1.0;
            double t55881 = 1.0/t55880;
            double t55882 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t55883 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t55884 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t55885 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t55886 = 1.0/t55831;
            double t55887 = 1.0/(t55819*t55819);
            double t55888 = b4f*t55815*t55826*(2.0/3.0);
            double t55889 = b2f*c*t55820*(1.0/3.0);
            double t55890 = b1f*c*t55820*t55827*(1.0/6.0);
            double t55891 = b3f*c*t55811*t55820*(1.0/2.0);
            double t55892 = t55890+t55891+t55888+t55889;
            double t55893 = a1f*c*c0f*t55820*t55861*(2.0/3.0);
            double t55894 = a1p*c*c0p*t55820*t55846*(2.0/3.0);
            double t55895 = ccaa4*t55850*t55849*t55885*t55869*(3.2E1/3.0);
            double t55896 = ccaa1*gamma_aa[index]*gcaa*t55872*t55883*(8.0/3.0);
            double t55897 = ccaa3*gamma_aa[index]*gcaa*t55847*t55848*t55884*t55877*8.0;
            double t55898 = ccaa2*t55881*t55882*t55847*t55848*(1.6E1/3.0);
            double t55899 = 1.0/(t55871*t55871);
            double t55900 = gamma_aa[index]*gcaa*t55883*8.0;
            double t55901 = gamma_aa[index]*gcaa*t55847*t55848*t55884*8.0;
            double t55902 = t55882*t55847*t55848*1.6E1;
            double t55903 = t55900+t55901+t55902;
            double t55904 = 1.0/(t55876*t55876);
            double t55905 = gamma_aa[index]*gcaa*t55883*(3.2E1/3.0);
            double t55906 = gamma_aa[index]*gcaa*t55847*t55848*t55884*3.2E1;
            double t55907 = t55882*t55847*t55848*3.2E1;
            double t55908 = t55850*t55849*t55885*(3.2E1/3.0);
            double t55909 = t55905+t55906+t55907+t55908;
            double t55910 = 1.0/(t55868*t55868);
            double t55911 = gamma_aa[index]*gcaa*t55883*(1.6E1/3.0);
            double t55912 = t55882*t55847*t55848*(1.6E1/3.0);
            double t55913 = t55911+t55912;
            double t55914 = 1.0/(t55880*t55880);
            double t55915 = t55895+t55896+t55897+t55898-ccaa1*t55882*t55847*t55848*t55899*(8.0/3.0)-ccaa4*t55910* \
               t55850*t55851*t55909*t55849-ccaa2*t55913*t55914*t55854*t55847*t55848-ccaa3*gamma_aa[index]*gcaa*t55903* \
               t55904*t55853*t55847*t55848;
            double t55916 = gx*gx;
            double t55917 = t55916*t55916;
            double t55918 = 1.0/pow(rho_a[index],1.0E1);
            double t55919 = gamma_aa[index]*gx*t55852;
            double t55920 = t55919+1.0;
            double t55921 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t55942 = gamma_aa[index]*gx*t55883*(3.2E1/3.0);
            double t55943 = gamma_aa[index]*gx*t55916*t55847*t55884*3.2E1;
            double t55944 = t55916*t55882*t55847*3.2E1;
            double t55945 = t55917*t55849*t55885*(3.2E1/3.0);
            double t55922 = t55942+t55943+t55944+t55945;
            double t55923 = gamma_aa[index]*gx*t55852*4.0;
            double t55924 = gamma_aa[index]*gx*t55853*t55916*t55847*4.0;
            double t55925 = t55916*t55854*t55847*6.0;
            double t55926 = t55851*t55917*t55849;
            double t55927 = t55923+t55924+t55925+t55926+1.0;
            double t55948 = gamma_aa[index]*gx*t55883*(1.6E1/3.0);
            double t55949 = t55916*t55882*t55847*(1.6E1/3.0);
            double t55928 = t55948+t55949;
            double t55929 = gamma_aa[index]*gx*t55852*2.0;
            double t55930 = t55916*t55854*t55847;
            double t55931 = t55930+t55929+1.0;
            double t55932 = gamma_aa[index]*gx*t55852*3.0;
            double t55933 = gamma_aa[index]*gx*t55853*t55916*t55847;
            double t55934 = t55916*t55854*t55847*3.0;
            double t55935 = t55932+t55933+t55934+1.0;
            double t55936 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t55937 = 1.0/(t55935*t55935);
            double t55938 = gamma_aa[index]*gx*t55883*8.0;
            double t55939 = gamma_aa[index]*gx*t55916*t55847*t55884*8.0;
            double t55940 = t55916*t55882*t55847*1.6E1;
            double t55941 = t55940+t55938+t55939;
            double t55946 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t55947 = 1.0/(t55927*t55927);
            double t55950 = 1.0/(t55931*t55931);
            double t55951 = 1.0/t55927;
            double t55952 = 1.0/t55920;
            double t55953 = 1.0/t55935;
            double t55954 = 1.0/t55931;
            double t55955 = c0f*t55861*t55863*2.0;
            double t55956 = c0p*t55837*t55846*2.0;
            double t55957 = 1.0/(t55920*t55920);
            double t55958 = ccaa4*t55850*t55851*t55849*t55869;
            double t55959 = ccaa1*gamma_aa[index]*gcaa*t55852*t55872;
            double t55960 = ccaa3*gamma_aa[index]*gcaa*t55853*t55847*t55848*t55877;
            double t55961 = ccaa2*t55854*t55881*t55847*t55848;
            double t55962 = ccaa0+t55960+t55961+t55958+t55959;
            double t55963 = 1.0/pow(rho_a[index],7.0/3.0);
            double t55964 = 1.0/pow(t55810,3.0/2.0);
            double t55965 = t55892*t55892;
            double t55966 = t55844*t55844;
            double t55967 = 1.0/(t55825*t55825*t55825);
            double t55968 = t55837*t55838*t55966*t55967*2.0;
            double t55969 = b4p*t55815*t55852*(1.0E1/9.0);
            double t55970 = b2p*c*t55963*(4.0/9.0);
            double t55971 = b3p*t55815*t55852*t55827*(1.0/1.2E1);
            double t55972 = b1p*c*t55827*t55963*(2.0/9.0);
            double t55973 = b3p*c*t55811*t55963*(2.0/3.0);
            double t55974 = t55970+t55971+t55972+t55973+t55969-b1p*t55815*t55852*t55964*(1.0/3.6E1);
            double t55975 = 1.0/(t55835*t55835);
            double t55976 = 1.0/(t55825*t55825*t55825*t55825);
            double t55977 = a1p*c*c0p*t55846*t55963*(8.0/9.0);
            v_rho_a_rho_a_[index] = t55915*(t55956+t55860*t55857*(t55955-c0p*t55837*t55846*2.0))*2.0+t55962*(- \
               t55845+t55894+t55860*t55857*(t55845+t55893-t55863*t55892*t55886*t55887-a1p*c*c0p*t55820*t55846*(2.0/ \
               3.0)))*2.0-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t55952*t55883*(8.0/3.0)-cx1*t55916* \
               t55882*t55847*t55957*(8.0/3.0)+cx2*t55916*t55882*t55954*t55847*(1.6E1/3.0)+cx4*t55951*t55917*t55849* \
               t55885*(3.2E1/3.0)-cx2*t55950*t55916*t55854*t55847*t55928-cx4*t55922*t55851*t55917*t55947*t55849+cx3* \
               gamma_aa[index]*gx*t55916*t55953*t55847*t55884*8.0-cx3*gamma_aa[index]*gx*t55941*t55853*t55916*t55847* \
               t55937)*(8.0/3.0)+rho_a[index]*t55962*(-t55968-t55977+t55860*t55857*(t55968+t55977-t55837*t55838*t55839* \
               t55974-t55863*1.0/(t55819*t55819*t55819)*t55965*t55886*2.0+t55863*t55886*t55887*(b2f*c*t55963*(4.0/ \
               9.0)+b4f*t55815*t55852*(1.0E1/9.0)+b1f*c*t55827*t55963*(2.0/9.0)+b3f*c*t55811*t55963*(2.0/3.0)-b1f* \
               t55815*t55852*t55964*(1.0/3.6E1)+b3f*t55815*t55852*t55827*(1.0/1.2E1))+1.0/(t55831*t55831)*t55863* \
               1.0/(t55819*t55819*t55819*t55819)*t55828*t55965*(1.0/2.0)-a1f*c*c0f*t55861*t55963*(8.0/9.0)-t55832* \
               t55837*t55966*t55975*t55976*(1.0/2.0)+a1f*c*t55820*t55892*t55886*t55887*(2.0/3.0)-a1p*c*t55820*t55844* \
               t55838*t55839*(2.0/3.0))+t55837*t55838*t55839*t55974+t55832*t55837*t55966*t55975*t55976*(1.0/2.0)+ \
               a1p*c*t55820*t55844*t55838*t55839*(2.0/3.0))-rho_a[index]*t55915*(-t55845+t55894+t55860*t55857*(t55845+ \
               t55893-t55894-t55863*t55892*t55886*t55887))*2.0-rho_a[index]*(t55956+t55860*t55857*(t55955-t55956) \
               )*(ccaa1*gamma_aa[index]*gcaa*t55872*t55936*(8.8E1/9.0)+ccaa2*t55921*t55881*t55847*t55848*(3.04E2/ \
               9.0)-ccaa1*t55921*t55847*t55848*t55899*2.4E1+ccaa4*t55850*t55946*t55849*t55869*(1.12E3/9.0)-ccaa2* \
               t55913*t55914*t55882*t55847*t55848*(3.2E1/3.0)-ccaa4*t55910*t55850*t55909*t55849*t55885*(6.4E1/3.0) \
               -ccaa2*t55914*t55854*t55847*t55848*(gamma_aa[index]*gcaa*t55936*(1.76E2/9.0)+t55921*t55847*t55848* \
               (3.04E2/9.0))-ccaa4*t55910*t55850*t55851*t55849*(gamma_aa[index]*gcaa*t55936*(3.52E2/9.0)+t55921*t55847* \
               t55848*(6.08E2/3.0)+t55850*t55946*t55849*(1.12E3/9.0)+gamma_aa[index]*gcaa*t55918*t55847*t55848*2.88E2) \
               +ccaa2*(t55913*t55913)*1.0/(t55880*t55880*t55880)*t55854*t55847*t55848*2.0+ccaa4*t55850*t55851*(t55909* \
               t55909)*t55849*1.0/(t55868*t55868*t55868)*2.0+ccaa3*gamma_aa[index]*gcaa*t55918*t55847*t55848*t55877* \
               7.2E1+ccaa1*gamma_aa[index]*gcaa*1.0/(t55871*t55871*t55871)*t55918*t55847*t55848*(1.28E2/9.0)+ccaa3* \
               gamma_aa[index]*gcaa*(t55903*t55903)*t55853*t55847*t55848*1.0/(t55876*t55876*t55876)*2.0-ccaa3*gamma_aa[index]* \
               gcaa*t55904*t55853*t55847*t55848*(gamma_aa[index]*gcaa*t55936*(8.8E1/3.0)+t55921*t55847*t55848*(3.04E2/ \
               3.0)+gamma_aa[index]*gcaa*t55918*t55847*t55848*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t55903*t55904*t55847* \
               t55848*t55884*1.6E1)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t55952*t55936*(8.8E1/9.0) \
               -cx1*t55921*t55916*t55847*t55957*2.4E1+cx2*t55921*t55916*t55954*t55847*(3.04E2/9.0)+cx4*t55951*t55917* \
               t55946*t55849*(1.12E3/9.0)-cx2*t55950*t55916*t55882*t55847*t55928*(3.2E1/3.0)-cx4*t55922*t55917*t55947* \
               t55849*t55885*(6.4E1/3.0)-cx2*t55950*t55916*t55854*t55847*(gamma_aa[index]*gx*t55936*(1.76E2/9.0)+ \
               t55921*t55916*t55847*(3.04E2/9.0))-cx4*t55851*t55917*t55947*t55849*(gamma_aa[index]*gx*t55936*(3.52E2/ \
               9.0)+t55921*t55916*t55847*(6.08E2/3.0)+t55917*t55946*t55849*(1.12E3/9.0)+gamma_aa[index]*gx*t55916* \
               t55918*t55847*2.88E2)+cx2*1.0/(t55931*t55931*t55931)*t55916*t55854*t55847*(t55928*t55928)*2.0+cx4* \
               (t55922*t55922)*t55851*t55917*1.0/(t55927*t55927*t55927)*t55849*2.0+cx3*gamma_aa[index]*gx*t55916* \
               t55953*t55918*t55847*7.2E1+cx1*gamma_aa[index]*gx*1.0/(t55920*t55920*t55920)*t55916*t55918*t55847* \
               (1.28E2/9.0)+cx3*gamma_aa[index]*gx*(t55941*t55941)*t55853*t55916*1.0/(t55935*t55935*t55935)*t55847* \
               2.0-cx3*gamma_aa[index]*gx*t55853*t55916*t55847*t55937*(gamma_aa[index]*gx*t55936*(8.8E1/3.0)+t55921* \
               t55916*t55847*(3.04E2/3.0)+gamma_aa[index]*gx*t55916*t55918*t55847*7.2E1)-cx3*gamma_aa[index]*gx*t55941* \
               t55916*t55847*t55937*t55884*1.6E1)+c0*t55816*(cx0+cx1*gamma_aa[index]*gx*t55852*t55952+cx2*t55916* \
               t55854*t55954*t55847+cx4*t55851*t55951*t55917*t55849+cx3*gamma_aa[index]*gx*t55853*t55916*t55953*t55847) \
               *(4.0/9.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t52742 = rho_a[index]+rho_b[index];
            double t52743 = 1.0/pow(t52742,1.0/3.0);
            double t52744 = c*t52743;
            double t52745 = sqrt(t52744);
            double t52746 = b1p*t52745;
            double t52747 = pow(t52744,3.0/2.0);
            double t52748 = b3p*t52747;
            double t52749 = c*c;
            double t52750 = 1.0/pow(t52742,2.0/3.0);
            double t52751 = b4p*t52750*t52749;
            double t52752 = b2p*c*t52743;
            double t52753 = t52751+t52752+t52746+t52748;
            double t52754 = 1.0/pow(t52742,4.0/3.0);
            double t52755 = 1.0/c0p;
            double t52756 = 1.0/t52753;
            double t52757 = t52755*t52756*(1.0/2.0);
            double t52758 = t52757+1.0;
            double t52759 = a1p*c*t52743;
            double t52760 = t52759+1.0;
            double t52761 = rho_a[index]-rho_b[index];
            double t52762 = t52761*t52761;
            double t52763 = 1.0/t52742;
            double t52764 = t52761*t52763;
            double t52765 = two_13*2.0;
            double t52766 = t52765-2.0;
            double t52767 = 1.0/t52766;
            double t52768 = 1.0/c0f;
            double t52769 = b1f*t52745;
            double t52770 = b3f*t52747;
            double t52771 = b4f*t52750*t52749;
            double t52772 = b2f*c*t52743;
            double t52773 = t52770+t52771+t52772+t52769;
            double t52774 = 1.0/t52773;
            double t52775 = t52774*t52768*(1.0/2.0);
            double t52776 = t52775+1.0;
            double t52777 = log(t52776);
            double t52778 = a1f*c*t52743;
            double t52779 = t52778+1.0;
            double t52780 = log(t52758);
            double t52790 = c0f*t52777*t52779*2.0;
            double t52791 = c0p*t52760*t52780*2.0;
            double t52781 = t52790-t52791;
            double t52782 = t52764+1.0;
            double t52783 = pow(t52782,4.0/3.0);
            double t52784 = -t52764+1.0;
            double t52785 = pow(t52784,4.0/3.0);
            double t52786 = t52783+t52785-2.0;
            double t52787 = 1.0/(t52742*t52742);
            double t52818 = t52761*t52787;
            double t52788 = t52763-t52818;
            double t52789 = 1.0/(t52742*t52742*t52742*t52742);
            double t52792 = t52762*t52762;
            double t52793 = 1.0/pow(t52742,5.0/3.0);
            double t52794 = 1.0/sqrt(t52744);
            double t52795 = 1.0/t52758;
            double t52796 = 1.0/(t52753*t52753);
            double t52797 = b4p*t52793*t52749*(2.0/3.0);
            double t52798 = b2p*c*t52754*(1.0/3.0);
            double t52799 = b1p*c*t52754*t52794*(1.0/6.0);
            double t52800 = b3p*c*t52745*t52754*(1.0/2.0);
            double t52801 = t52800+t52797+t52798+t52799;
            double t52802 = t52801*t52760*t52795*t52796;
            double t52803 = 1.0/(t52742*t52742*t52742*t52742*t52742);
            double t52804 = 1.0/d2fz0;
            double t52805 = 1.0/Aa;
            double t52806 = b1a*t52745;
            double t52807 = b3a*t52747;
            double t52808 = b4a*t52750*t52749;
            double t52809 = b2a*c*t52743;
            double t52810 = t52806+t52807+t52808+t52809;
            double t52811 = 1.0/t52810;
            double t52812 = t52811*t52805*(1.0/2.0);
            double t52813 = t52812+1.0;
            double t52814 = log(t52813);
            double t52815 = a1a*c*t52743;
            double t52816 = t52815+1.0;
            double t52817 = pow(t52782,1.0/3.0);
            double t52819 = t52817*t52788*(4.0/3.0);
            double t52820 = pow(t52784,1.0/3.0);
            double t52964 = t52820*t52788*(4.0/3.0);
            double t52821 = t52819-t52964;
            double t52822 = t52792*t52789;
            double t52823 = t52822-1.0;
            double t52824 = 1.0/pow(rho_a[index],1.0/3.0);
            double t52825 = c*t52824;
            double t52826 = sqrt(t52825);
            double t52827 = b1f*t52826;
            double t52828 = pow(t52825,3.0/2.0);
            double t52829 = b3f*t52828;
            double t52830 = 1.0/pow(rho_a[index],2.0/3.0);
            double t52831 = b4f*t52830*t52749;
            double t52832 = b2f*c*t52824;
            double t52833 = t52831+t52832+t52827+t52829;
            double t52834 = 1.0/pow(rho_a[index],4.0/3.0);
            double t52835 = b1p*t52826;
            double t52836 = b3p*t52828;
            double t52837 = b4p*t52830*t52749;
            double t52838 = b2p*c*t52824;
            double t52839 = t52835+t52836+t52837+t52838;
            double t52840 = 1.0/pow(rho_a[index],5.0/3.0);
            double t52841 = 1.0/sqrt(t52825);
            double t52842 = 1.0/t52833;
            double t52843 = t52842*t52768*(1.0/2.0);
            double t52844 = t52843+1.0;
            double t52845 = 1.0/t52839;
            double t52846 = t52755*t52845*(1.0/2.0);
            double t52847 = t52846+1.0;
            double t52848 = a1p*c*t52824;
            double t52849 = t52848+1.0;
            double t52850 = 1.0/t52847;
            double t52851 = 1.0/(t52839*t52839);
            double t52852 = b4p*t52840*t52749*(2.0/3.0);
            double t52853 = b2p*c*t52834*(1.0/3.0);
            double t52854 = b1p*c*t52841*t52834*(1.0/6.0);
            double t52855 = b3p*c*t52834*t52826*(1.0/2.0);
            double t52856 = t52852+t52853+t52854+t52855;
            double t52857 = t52850*t52851*t52856*t52849;
            double t52858 = log(t52847);
            double t52859 = pow(2.0,1.0/3.0);
            double t52860 = t52859*2.0;
            double t52861 = t52860-2.0;
            double t52862 = log(t52844);
            double t52863 = a1f*c*t52824;
            double t52864 = t52863+1.0;
            double t52865 = gcab*gcab;
            double t52869 = 1.0/pow(rho_a[index],8.0/3.0);
            double t52870 = gamma_aa[index]*t52869*(1.0/2.0);
            double t52871 = 1.0/pow(rho_b[index],8.0/3.0);
            double t52872 = gamma_bb[index]*t52871*(1.0/2.0);
            double t52866 = t52870+t52872;
            double t52867 = t52866*t52866;
            double t52868 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t52873 = t52865*t52865;
            double t52874 = t52867*t52867;
            double t52875 = t52865*t52867*6.0;
            double t52876 = gcab*t52865*t52866*t52867*4.0;
            double t52877 = t52873*t52874;
            double t52878 = gcab*t52866*4.0;
            double t52879 = t52875+t52876+t52877+t52878+1.0;
            double t52880 = gcab*t52866;
            double t52881 = t52880+1.0;
            double t52882 = t52865*t52867;
            double t52883 = gcab*t52866*2.0;
            double t52884 = t52882+t52883+1.0;
            double t52885 = t52865*t52867*3.0;
            double t52886 = gcab*t52865*t52866*t52867;
            double t52887 = gcab*t52866*3.0;
            double t52888 = t52885+t52886+t52887+1.0;
            double t52889 = t52761*t52762*t52781*t52767*t52786*t52789*4.0;
            double t52890 = t52763+t52818;
            double t52891 = 1.0/t52776;
            double t52892 = 1.0/(t52773*t52773);
            double t52893 = b4f*t52793*t52749*(2.0/3.0);
            double t52894 = b2f*c*t52754*(1.0/3.0);
            double t52895 = b1f*c*t52754*t52794*(1.0/6.0);
            double t52896 = b3f*c*t52745*t52754*(1.0/2.0);
            double t52897 = t52893+t52894+t52895+t52896;
            double t52898 = a1f*c*c0f*t52754*t52777*(2.0/3.0);
            double t52899 = t52803*t52792*4.0;
            double t52900 = t52820*t52890*(4.0/3.0);
            double t52963 = t52817*t52890*(4.0/3.0);
            double t52901 = t52900-t52963;
            double t52902 = 1.0/t52813;
            double t52903 = 1.0/(t52810*t52810);
            double t52904 = b4a*t52793*t52749*(2.0/3.0);
            double t52905 = b2a*c*t52754*(1.0/3.0);
            double t52906 = b1a*c*t52754*t52794*(1.0/6.0);
            double t52907 = b3a*c*t52745*t52754*(1.0/2.0);
            double t52908 = t52904+t52905+t52906+t52907;
            double t52909 = t52902*t52804*t52903*t52823*t52816*t52908*t52767*t52786;
            double t52910 = 1.0/pow(rho_b[index],1.0/3.0);
            double t52911 = c*t52910;
            double t52912 = sqrt(t52911);
            double t52913 = b1f*t52912;
            double t52914 = pow(t52911,3.0/2.0);
            double t52915 = b3f*t52914;
            double t52916 = 1.0/pow(rho_b[index],2.0/3.0);
            double t52917 = b4f*t52916*t52749;
            double t52918 = b2f*c*t52910;
            double t52919 = t52913+t52915+t52917+t52918;
            double t52920 = 1.0/pow(rho_b[index],4.0/3.0);
            double t52921 = b1p*t52912;
            double t52922 = b3p*t52914;
            double t52923 = b4p*t52916*t52749;
            double t52924 = b2p*c*t52910;
            double t52925 = t52921+t52922+t52923+t52924;
            double t52926 = 1.0/pow(rho_b[index],5.0/3.0);
            double t52927 = 1.0/sqrt(t52911);
            double t52928 = 1.0/t52919;
            double t52929 = t52928*t52768*(1.0/2.0);
            double t52930 = t52929+1.0;
            double t52931 = 1.0/t52925;
            double t52932 = t52931*t52755*(1.0/2.0);
            double t52933 = t52932+1.0;
            double t52934 = a1p*c*t52910;
            double t52935 = t52934+1.0;
            double t52936 = 1.0/t52933;
            double t52937 = 1.0/(t52925*t52925);
            double t52938 = b4p*t52926*t52749*(2.0/3.0);
            double t52939 = b2p*c*t52920*(1.0/3.0);
            double t52940 = b1p*c*t52920*t52927*(1.0/6.0);
            double t52941 = b3p*c*t52920*t52912*(1.0/2.0);
            double t52942 = t52940+t52941+t52938+t52939;
            double t52943 = t52942*t52935*t52936*t52937;
            double t52944 = log(t52933);
            double t52945 = log(t52930);
            double t52946 = a1f*c*t52910;
            double t52947 = t52946+1.0;
            double t52948 = t52781*t52792*t52767*t52786*t52789;
            double t52949 = Aa*t52804*t52814*t52823*t52816*t52767*t52786*2.0;
            double t52950 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t52951 = 1.0/(t52888*t52888);
            double t52952 = 1.0/t52881;
            double t52953 = 1.0/(t52879*t52879);
            double t52954 = 1.0/(t52884*t52884);
            double t52955 = 1.0/t52879;
            double t52956 = 1.0/(t52881*t52881);
            double t52957 = 1.0/t52884;
            double t52958 = 1.0/t52888;
            double t52960 = a1p*c*c0p*t52780*t52754*(2.0/3.0);
            double t52965 = t52891*t52892*t52779*t52897;
            double t52959 = t52802-t52960-t52965+t52898;
            double t52961 = 1.0/pow(t52742,7.0/3.0);
            double t52962 = 1.0/pow(t52742,8.0/3.0);
            double t52966 = t52801*t52801;
            double t52967 = 1.0/pow(t52744,3.0/2.0);
            double t52968 = b4p*t52962*t52749*(1.0E1/9.0);
            double t52969 = b2p*c*t52961*(4.0/9.0);
            double t52970 = b1p*c*t52961*t52794*(2.0/9.0);
            double t52971 = b3p*c*t52745*t52961*(2.0/3.0);
            double t52972 = b3p*t52962*t52749*t52794*(1.0/1.2E1);
            double t52973 = t52970+t52971+t52972+t52968+t52969-b1p*t52962*t52749*t52967*(1.0/3.6E1);
            double t52974 = t52760*t52973*t52795*t52796;
            double t52975 = 1.0/(t52753*t52753*t52753);
            double t52976 = t52897*t52897;
            double t52977 = 1.0/(t52758*t52758);
            double t52978 = 1.0/(t52753*t52753*t52753*t52753);
            double t52979 = t52760*t52755*t52966*t52977*t52978*(1.0/2.0);
            double t52980 = 1.0/(t52742*t52742*t52742);
            double t52981 = a1p*c*t52801*t52754*t52795*t52796*(2.0/3.0);
            double t52982 = 1.0/(t52742*t52742*t52742*t52742*t52742*t52742);
            double t52983 = t52761*t52762*t52789*4.0;
            double t52984 = t52983+t52899;
            double t52985 = t52820*t52761*t52980*(8.0/3.0);
            double t52986 = 1.0/pow(t52782,2.0/3.0);
            double t52987 = t52890*t52788*t52986*(4.0/9.0);
            double t52988 = 1.0/pow(t52784,2.0/3.0);
            double t52989 = t52890*t52788*t52988*(4.0/9.0);
            double t52990 = t52985+t52987+t52989-t52761*t52817*t52980*(8.0/3.0);
            double t52991 = t52983-t52899;
            double t52992 = t52908*t52908;
            double t52993 = t52821*t52781*t52792*t52767*t52789;
            double t52994 = Aa*t52804*t52814*t52816*t52767*t52786*t52984*2.0;
            double t52995 = Aa*t52821*t52804*t52814*t52823*t52816*t52767*2.0;
            double t52996 = c0f*t52862*t52864*2.0;
            double t52998 = c0p*t52849*t52858*2.0;
            double t52997 = t52996-t52998;
            double t52999 = c0f*t52945*t52947*2.0;
            double t53001 = c0p*t52935*t52944*2.0;
            double t53000 = t52999-t53001;
            double t53002 = gamma_aa[index]*gcab*t52950*(8.0/3.0);
            double t53003 = gamma_aa[index]*t52950*t52865*t52866*(8.0/3.0);
            double t53004 = t53002+t53003;
            double t53005 = gamma_bb[index]*gcab*t52868*(8.0/3.0);
            double t53006 = gamma_bb[index]*t52865*t52866*t52868*(8.0/3.0);
            double t53007 = t53005+t53006;
            double t53008 = gamma_aa[index]*gcab*t52950*(1.6E1/3.0);
            double t53009 = gamma_aa[index]*gcab*t52950*t52865*t52867*1.6E1;
            double t53010 = gamma_aa[index]*t52950*t52873*t52866*t52867*(1.6E1/3.0);
            double t53011 = gamma_aa[index]*t52950*t52865*t52866*1.6E1;
            double t53012 = t53010+t53011+t53008+t53009;
            double t53013 = gamma_bb[index]*gcab*t52868*(1.6E1/3.0);
            double t53014 = gamma_bb[index]*gcab*t52865*t52867*t52868*1.6E1;
            double t53015 = gamma_bb[index]*t52873*t52866*t52867*t52868*(1.6E1/3.0);
            double t53016 = gamma_bb[index]*t52865*t52866*t52868*1.6E1;
            double t53017 = t53013+t53014+t53015+t53016;
            double t53018 = gamma_aa[index]*gcab*t52950*4.0;
            double t53019 = gamma_aa[index]*gcab*t52950*t52865*t52867*4.0;
            double t53020 = gamma_aa[index]*t52950*t52865*t52866*8.0;
            double t53021 = t53020+t53018+t53019;
            double t53022 = gamma_bb[index]*gcab*t52868*4.0;
            double t53023 = gamma_bb[index]*gcab*t52865*t52867*t52868*4.0;
            double t53024 = gamma_bb[index]*t52865*t52866*t52868*8.0;
            double t53025 = t53022+t53023+t53024;
            v_rho_a_rho_b_[index] = (t52791+t52948+t52949+rho_a[index]*(-t52857+t52861*t52767*(t52857-(1.0/(t52833* \
               t52833)*t52864*(b2f*c*t52834*(1.0/3.0)+b4f*t52840*t52749*(2.0/3.0)+b1f*c*t52841*t52834*(1.0/6.0)+b3f* \
               c*t52834*t52826*(1.0/2.0)))/t52844+a1f*c*c0f*t52834*t52862*(2.0/3.0)-a1p*c*c0p*t52834*t52858*(2.0/ \
               3.0))+a1p*c*c0p*t52834*t52858*(2.0/3.0))+t52742*(t52802+t52909+t52993+t52995+t52889-a1p*c*c0p*t52780* \
               t52754*(2.0/3.0)-t52803*t52781*t52792*t52767*t52786*4.0-t52792*t52767*t52786*t52959*t52789-Aa*t52804* \
               t52814*t52816*t52767*t52786*(t52899-t52761*t52762*t52789*4.0)*2.0-Aa*a1a*c*t52804*t52814*t52823*t52754* \
               t52767*t52786*(2.0/3.0))-c0p*t52849*t52858*2.0-t52861*t52767*t52997)*(ccab1*gamma_bb[index]*gcab*t52952* \
               t52868*(4.0/3.0)-ccab4*t52953*t52873*t52874*t53017-ccab2*t52954*t52865*t52867*t53007-ccab1*gamma_bb[index]* \
               t52865*t52866*t52956*t52868*(4.0/3.0)+ccab2*gamma_bb[index]*t52865*t52866*t52957*t52868*(8.0/3.0)+ \
               ccab3*gamma_bb[index]*gcab*t52865*t52867*t52868*t52958*4.0+ccab4*gamma_bb[index]*t52873*t52955*t52866* \
               t52867*t52868*(1.6E1/3.0)-ccab3*gcab*t52951*t52865*t52866*t52867*t53025)-(ccab0+ccab1*gcab*t52952* \
               t52866+ccab4*t52873*t52874*t52955+ccab2*t52865*t52867*t52957+ccab3*gcab*t52865*t52866*t52867*t52958) \
               *(t52993-t52994+t52995-t52742*(t52981+t52974+t52979-t52760*t52795*t52966*t52975*2.0-a1p*c*c0p*t52780* \
               t52961*(8.0/9.0)-t52792*t52767*t52786*t52789*(t52981+t52974+t52979-t52760*t52795*t52966*t52975*2.0+ \
               1.0/(t52773*t52773*t52773)*t52891*t52976*t52779*2.0-t52891*t52892*t52779*(b2f*c*t52961*(4.0/9.0)+b4f* \
               t52962*t52749*(1.0E1/9.0)+b1f*c*t52961*t52794*(2.0/9.0)+b3f*c*t52745*t52961*(2.0/3.0)-b1f*t52962*t52749* \
               t52967*(1.0/3.6E1)+b3f*t52962*t52749*t52794*(1.0/1.2E1))-1.0/(t52773*t52773*t52773*t52773)*1.0/(t52776* \
               t52776)*t52768*t52976*t52779*(1.0/2.0)+a1f*c*c0f*t52961*t52777*(8.0/9.0)-a1p*c*c0p*t52780*t52961*(8.0/ \
               9.0)-a1f*c*t52754*t52891*t52892*t52897*(2.0/3.0))+t52901*t52803*t52781*t52792*t52767*4.0+t52803*t52821* \
               t52781*t52792*t52767*4.0-t52803*t52792*t52767*t52786*t52959*8.0-t52781*t52792*t52982*t52767*t52786* \
               2.0E1+t52901*t52792*t52767*t52959*t52789+t52821*t52792*t52767*t52959*t52789+t52762*t52781*t52767*t52786* \
               t52789*1.2E1+t52781*t52792*t52990*t52767*t52789-t52901*t52761*t52762*t52781*t52767*t52789*4.0+t52821* \
               t52761*t52762*t52781*t52767*t52789*4.0-Aa*t52901*t52804*t52814*t52816*t52991*t52767*2.0+Aa*t52804* \
               t52814*t52823*t52816*t52990*t52767*2.0+Aa*t52821*t52804*t52814*t52816*t52767*t52984*2.0-Aa*t52804* \
               t52814*t52816*t52767*t52786*(t52792*t52982*2.0E1-t52762*t52789*1.2E1)*2.0-t52901*t52902*t52804*t52903* \
               t52823*t52816*t52908*t52767-t52821*t52902*t52804*t52903*t52823*t52816*t52908*t52767-t52902*t52804* \
               t52903*t52816*t52908*t52991*t52767*t52786+t52902*t52804*t52903*t52816*t52908*t52767*t52786*t52984- \
               1.0/(t52810*t52810*t52810)*t52902*t52804*t52823*t52816*t52767*t52992*t52786*2.0+t52902*t52804*t52903* \
               t52823*t52816*t52767*t52786*(b2a*c*t52961*(4.0/9.0)+b4a*t52962*t52749*(1.0E1/9.0)+b1a*c*t52961*t52794* \
               (2.0/9.0)+b3a*c*t52745*t52961*(2.0/3.0)-b1a*t52962*t52749*t52967*(1.0/3.6E1)+b3a*t52962*t52749*t52794* \
               (1.0/1.2E1))+Aa*a1a*c*t52901*t52804*t52814*t52823*t52754*t52767*(2.0/3.0)+Aa*a1a*c*t52821*t52804*t52814* \
               t52823*t52754*t52767*(2.0/3.0)-Aa*a1a*c*t52804*t52814*t52823*t52961*t52767*t52786*(8.0/9.0)+Aa*a1a* \
               c*t52804*t52814*t52754*t52991*t52767*t52786*(2.0/3.0)-Aa*a1a*c*t52804*t52814*t52754*t52767*t52786* \
               t52984*(2.0/3.0)+1.0/(t52810*t52810*t52810*t52810)*t52804*1.0/(t52813*t52813)*t52805*t52823*t52816* \
               t52767*t52992*t52786*(1.0/2.0)+a1a*c*t52902*t52804*t52903*t52823*t52754*t52908*t52767*t52786*(2.0/ \
               3.0))+t52801*t52760*t52795*t52796*2.0-a1p*c*c0p*t52780*t52754*(4.0/3.0)-t52803*t52781*t52792*t52767* \
               t52786*8.0+t52901*t52781*t52792*t52767*t52789-t52792*t52767*t52786*t52959*t52789*2.0+Aa*t52901*t52804* \
               t52814*t52823*t52816*t52767*2.0+Aa*t52804*t52814*t52816*t52991*t52767*t52786*2.0+t52902*t52804*t52903* \
               t52823*t52816*t52908*t52767*t52786*2.0-Aa*a1a*c*t52804*t52814*t52823*t52754*t52767*t52786*(4.0/3.0) \
               )-(rho_a[index]*(t52998+t52861*t52767*t52997)+rho_b[index]*(t53001+t52861*t52767*t53000)-t52742*(t52791+ \
               t52948+t52949))*(ccab4*t52953*t52873*t52874*(gamma_aa[index]*gamma_bb[index]*t52950*t52865*t52868* \
               (6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*t52950*t52873*t52867*t52868*(6.4E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t52950*t52865*t52866*t52868*(1.28E2/3.0))-ccab2*t52865*1.0/(t52884*t52884*t52884) \
               *t52867*t53004*t53007*2.0-ccab4*t52873*t52874*1.0/(t52879*t52879*t52879)*t53012*t53017*2.0+ccab3*gcab* \
               t52951*t52865*t52866*t52867*(gamma_aa[index]*gamma_bb[index]*t52950*t52865*t52868*(3.2E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t52950*t52865*t52866*t52868*(3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]* \
               t52950*t52865*t52956*t52868*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t52950*t52865*t52957* \
               t52868*(3.2E1/9.0)+ccab2*gamma_aa[index]*t52950*t52954*t52865*t52866*t53007*(8.0/3.0)+ccab2*gamma_bb[index]* \
               t52954*t52865*t52866*t52868*t53004*(8.0/3.0)-ccab3*gcab*t52865*t52866*t52867*1.0/(t52888*t52888*t52888) \
               *t53021*t53025*2.0+ccab2*gamma_aa[index]*gamma_bb[index]*t52950*t52873*t52954*t52867*t52868*(3.2E1/ \
               9.0)-ccab4*gamma_aa[index]*gamma_bb[index]*t52950*t52873*t52955*t52867*t52868*(6.4E1/3.0)+ccab3*gamma_aa[index]* \
               gcab*t52950*t52951*t52865*t52867*t53025*4.0+ccab3*gamma_bb[index]*gcab*t52951*t52865*t52867*t52868* \
               t53021*4.0+ccab4*gamma_aa[index]*t52950*t52953*t52873*t52866*t52867*t53017*(1.6E1/3.0)+ccab4*gamma_bb[index]* \
               t52953*t52873*t52866*t52867*t52868*t53012*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t52950* \
               t52865*t52866*t52868*t52958*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t52950*1.0/(t52881* \
               t52881*t52881)*t52865*t52866*t52868*(3.2E1/9.0))+(t52791+t52948+t52949-t52742*(-t52802+t52960-t52909+ \
               t52994+t52889+t52803*t52781*t52792*t52767*t52786*4.0-t52901*t52781*t52792*t52767*t52789+t52792*t52767* \
               t52786*t52959*t52789-Aa*t52901*t52804*t52814*t52823*t52816*t52767*2.0+Aa*a1a*c*t52804*t52814*t52823* \
               t52754*t52767*t52786*(2.0/3.0))+rho_b[index]*(-t52943+t52861*t52767*(t52943-(1.0/(t52919*t52919)*t52947* \
               (b2f*c*t52920*(1.0/3.0)+b4f*t52926*t52749*(2.0/3.0)+b1f*c*t52920*t52927*(1.0/6.0)+b3f*c*t52920*t52912* \
               (1.0/2.0)))/t52930+a1f*c*c0f*t52920*t52945*(2.0/3.0)-a1p*c*c0p*t52920*t52944*(2.0/3.0))+a1p*c*c0p* \
               t52920*t52944*(2.0/3.0))-c0p*t52935*t52944*2.0-t52861*t52767*t53000)*(ccab1*gamma_aa[index]*gcab*t52950* \
               t52952*(4.0/3.0)-ccab4*t52953*t52873*t52874*t53012-ccab2*t52954*t52865*t52867*t53004-ccab1*gamma_aa[index]* \
               t52950*t52865*t52866*t52956*(4.0/3.0)+ccab2*gamma_aa[index]*t52950*t52865*t52866*t52957*(8.0/3.0)+ \
               ccab3*gamma_aa[index]*gcab*t52950*t52865*t52867*t52958*4.0+ccab4*gamma_aa[index]*t52950*t52873*t52955* \
               t52866*t52867*(1.6E1/3.0)-ccab3*gcab*t52951*t52865*t52866*t52867*t53021);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t53027 = rho_a[index]+rho_b[index];
            double t53028 = 1.0/pow(t53027,1.0/3.0);
            double t53029 = c*t53028;
            double t53030 = sqrt(t53029);
            double t53031 = b1p*t53030;
            double t53032 = pow(t53029,3.0/2.0);
            double t53033 = b3p*t53032;
            double t53034 = c*c;
            double t53035 = 1.0/pow(t53027,2.0/3.0);
            double t53036 = b4p*t53034*t53035;
            double t53037 = b2p*c*t53028;
            double t53038 = t53031+t53033+t53036+t53037;
            double t53039 = 1.0/pow(t53027,4.0/3.0);
            double t53040 = 1.0/c0p;
            double t53041 = 1.0/t53038;
            double t53042 = t53040*t53041*(1.0/2.0);
            double t53043 = t53042+1.0;
            double t53044 = a1p*c*t53028;
            double t53045 = t53044+1.0;
            double t53046 = rho_a[index]-rho_b[index];
            double t53047 = t53046*t53046;
            double t53048 = 1.0/t53027;
            double t53049 = t53046*t53048;
            double t53050 = two_13*2.0;
            double t53051 = t53050-2.0;
            double t53052 = 1.0/t53051;
            double t53053 = 1.0/c0f;
            double t53054 = b1f*t53030;
            double t53055 = b3f*t53032;
            double t53056 = b4f*t53034*t53035;
            double t53057 = b2f*c*t53028;
            double t53058 = t53054+t53055+t53056+t53057;
            double t53059 = 1.0/t53058;
            double t53060 = t53053*t53059*(1.0/2.0);
            double t53061 = t53060+1.0;
            double t53062 = log(t53061);
            double t53063 = a1f*c*t53028;
            double t53064 = t53063+1.0;
            double t53065 = log(t53043);
            double t53076 = c0f*t53062*t53064*2.0;
            double t53077 = c0p*t53045*t53065*2.0;
            double t53066 = t53076-t53077;
            double t53067 = t53049+1.0;
            double t53068 = pow(t53067,4.0/3.0);
            double t53069 = -t53049+1.0;
            double t53070 = pow(t53069,4.0/3.0);
            double t53071 = t53070+t53068-2.0;
            double t53072 = 1.0/(t53027*t53027);
            double t53073 = t53072*t53046;
            double t53074 = t53073+t53048;
            double t53075 = 1.0/(t53027*t53027*t53027*t53027);
            double t53078 = t53047*t53047;
            double t53079 = 1.0/pow(t53027,5.0/3.0);
            double t53080 = 1.0/sqrt(t53029);
            double t53081 = 1.0/t53043;
            double t53082 = 1.0/(t53038*t53038);
            double t53083 = b4p*t53034*t53079*(2.0/3.0);
            double t53084 = b2p*c*t53039*(1.0/3.0);
            double t53085 = b1p*c*t53080*t53039*(1.0/6.0);
            double t53086 = b3p*c*t53030*t53039*(1.0/2.0);
            double t53087 = t53083+t53084+t53085+t53086;
            double t53088 = 1.0/(t53027*t53027*t53027*t53027*t53027);
            double t53089 = 1.0/d2fz0;
            double t53090 = 1.0/Aa;
            double t53091 = b1a*t53030;
            double t53092 = b3a*t53032;
            double t53093 = b4a*t53034*t53035;
            double t53094 = b2a*c*t53028;
            double t53095 = t53091+t53092+t53093+t53094;
            double t53096 = 1.0/t53095;
            double t53097 = t53090*t53096*(1.0/2.0);
            double t53098 = t53097+1.0;
            double t53099 = log(t53098);
            double t53100 = a1a*c*t53028;
            double t53101 = t53100+1.0;
            double t53102 = pow(t53067,1.0/3.0);
            double t53103 = t53102*t53074*(4.0/3.0);
            double t53104 = pow(t53069,1.0/3.0);
            double t53180 = t53104*t53074*(4.0/3.0);
            double t53105 = t53103-t53180;
            double t53106 = t53075*t53078;
            double t53107 = t53106-1.0;
            double t53108 = 1.0/pow(rho_b[index],1.0/3.0);
            double t53109 = c*t53108;
            double t53110 = sqrt(t53109);
            double t53111 = b1f*t53110;
            double t53112 = pow(t53109,3.0/2.0);
            double t53113 = b3f*t53112;
            double t53114 = 1.0/pow(rho_b[index],2.0/3.0);
            double t53115 = b4f*t53114*t53034;
            double t53116 = b2f*c*t53108;
            double t53117 = t53111+t53113+t53115+t53116;
            double t53118 = 1.0/pow(rho_b[index],4.0/3.0);
            double t53119 = b1p*t53110;
            double t53120 = b3p*t53112;
            double t53121 = b4p*t53114*t53034;
            double t53122 = b2p*c*t53108;
            double t53123 = t53120+t53121+t53122+t53119;
            double t53124 = 1.0/pow(rho_b[index],5.0/3.0);
            double t53125 = 1.0/sqrt(t53109);
            double t53126 = 1.0/t53117;
            double t53127 = t53053*t53126*(1.0/2.0);
            double t53128 = t53127+1.0;
            double t53129 = 1.0/t53123;
            double t53130 = t53040*t53129*(1.0/2.0);
            double t53131 = t53130+1.0;
            double t53132 = a1p*c*t53108;
            double t53133 = t53132+1.0;
            double t53134 = 1.0/t53131;
            double t53135 = 1.0/(t53123*t53123);
            double t53136 = b4p*t53034*t53124*(2.0/3.0);
            double t53137 = b2p*c*t53118*(1.0/3.0);
            double t53138 = b1p*c*t53125*t53118*(1.0/6.0);
            double t53139 = b3p*c*t53110*t53118*(1.0/2.0);
            double t53140 = t53136+t53137+t53138+t53139;
            double t53141 = t53140*t53133*t53134*t53135;
            double t53142 = log(t53131);
            double t53143 = pow(2.0,1.0/3.0);
            double t53144 = t53143*2.0;
            double t53145 = t53144-2.0;
            double t53146 = log(t53128);
            double t53147 = a1f*c*t53108;
            double t53148 = t53147+1.0;
            double t53149 = gcab*gcab;
            double t53153 = 1.0/pow(rho_a[index],8.0/3.0);
            double t53154 = gamma_aa[index]*t53153*(1.0/2.0);
            double t53155 = 1.0/pow(rho_b[index],8.0/3.0);
            double t53156 = gamma_bb[index]*t53155*(1.0/2.0);
            double t53150 = t53154+t53156;
            double t53151 = t53150*t53150;
            double t53152 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t53157 = t53149*t53149;
            double t53158 = t53151*t53151;
            double t53159 = t53151*t53149*6.0;
            double t53160 = gcab*t53150*t53151*t53149*4.0;
            double t53161 = t53157*t53158;
            double t53162 = gcab*t53150*4.0;
            double t53163 = t53160+t53161+t53162+t53159+1.0;
            double t53164 = gcab*t53150;
            double t53165 = t53164+1.0;
            double t53166 = t53151*t53149;
            double t53167 = gcab*t53150*2.0;
            double t53168 = t53166+t53167+1.0;
            double t53169 = t53151*t53149*3.0;
            double t53170 = gcab*t53150*t53151*t53149;
            double t53171 = gcab*t53150*3.0;
            double t53172 = t53170+t53171+t53169+1.0;
            double t53173 = a1p*c*c0p*t53065*t53039*(2.0/3.0);
            double t53174 = 1.0/t53168;
            double t53175 = 1.0/t53172;
            double t53176 = 1.0/t53165;
            double t53177 = 1.0/t53163;
            double t53178 = 1.0/pow(t53027,7.0/3.0);
            double t53179 = 1.0/pow(t53027,8.0/3.0);
            double t53181 = 1.0/t53061;
            double t53182 = 1.0/(t53058*t53058);
            double t53183 = b4f*t53034*t53079*(2.0/3.0);
            double t53184 = b2f*c*t53039*(1.0/3.0);
            double t53185 = b1f*c*t53080*t53039*(1.0/6.0);
            double t53186 = b3f*c*t53030*t53039*(1.0/2.0);
            double t53187 = t53183+t53184+t53185+t53186;
            double t53188 = t53064*t53181*t53182*t53187;
            double t53190 = t53045*t53081*t53082*t53087;
            double t53191 = a1f*c*c0f*t53062*t53039*(2.0/3.0);
            double t53189 = -t53190+t53173-t53191+t53188;
            double t53192 = t53087*t53087;
            double t53193 = 1.0/pow(t53029,3.0/2.0);
            double t53194 = b4p*t53034*t53179*(1.0E1/9.0);
            double t53195 = b2p*c*t53178*(4.0/9.0);
            double t53196 = b1p*c*t53080*t53178*(2.0/9.0);
            double t53197 = b3p*c*t53030*t53178*(2.0/3.0);
            double t53198 = b3p*t53034*t53080*t53179*(1.0/1.2E1);
            double t53199 = t53194+t53195+t53196+t53197+t53198-b1p*t53034*t53193*t53179*(1.0/3.6E1);
            double t53200 = 1.0/(t53038*t53038*t53038);
            double t53201 = t53200*t53045*t53081*t53192*2.0;
            double t53202 = t53187*t53187;
            double t53203 = 1.0/(t53043*t53043);
            double t53204 = 1.0/(t53038*t53038*t53038*t53038);
            double t53205 = t53072*2.0;
            double t53206 = 1.0/(t53027*t53027*t53027);
            double t53207 = t53206*t53046*2.0;
            double t53208 = t53205+t53207;
            double t53209 = t53074*t53074;
            double t53210 = a1p*c*c0p*t53065*t53178*(8.0/9.0);
            double t53211 = 1.0/(t53027*t53027*t53027*t53027*t53027*t53027);
            double t53212 = t53046*t53047*t53075*4.0;
            double t53213 = t53078*t53088*4.0;
            double t53214 = t53212+t53213;
            double t53215 = t53102*t53208*(4.0/3.0);
            double t53216 = 1.0/pow(t53067,2.0/3.0);
            double t53217 = t53216*t53209*(4.0/9.0);
            double t53218 = 1.0/pow(t53069,2.0/3.0);
            double t53219 = t53209*t53218*(4.0/9.0);
            double t53220 = t53215+t53217+t53219-t53104*t53208*(4.0/3.0);
            double t53221 = 1.0/t53098;
            double t53222 = 1.0/(t53095*t53095);
            double t53223 = b4a*t53034*t53079*(2.0/3.0);
            double t53224 = b2a*c*t53039*(1.0/3.0);
            double t53225 = b1a*c*t53080*t53039*(1.0/6.0);
            double t53226 = b3a*c*t53030*t53039*(1.0/2.0);
            double t53227 = t53223+t53224+t53225+t53226;
            double t53228 = t53227*t53227;
            double t53229 = 1.0/t53128;
            double t53230 = b4f*t53034*t53124*(2.0/3.0);
            double t53231 = b2f*c*t53118*(1.0/3.0);
            double t53232 = b1f*c*t53125*t53118*(1.0/6.0);
            double t53233 = b3f*c*t53110*t53118*(1.0/2.0);
            double t53234 = t53230+t53231+t53232+t53233;
            double t53235 = 1.0/(t53117*t53117);
            double t53236 = 1.0/pow(rho_b[index],7.0/3.0);
            double t53237 = 1.0/pow(t53109,3.0/2.0);
            double t53238 = t53234*t53234;
            double t53239 = t53140*t53140;
            double t53240 = 1.0/(t53123*t53123*t53123);
            double t53241 = t53240*t53133*t53134*t53239*2.0;
            double t53242 = b4p*t53034*t53155*(1.0E1/9.0);
            double t53243 = b2p*c*t53236*(4.0/9.0);
            double t53244 = b3p*t53034*t53125*t53155*(1.0/1.2E1);
            double t53245 = b1p*c*t53125*t53236*(2.0/9.0);
            double t53246 = b3p*c*t53110*t53236*(2.0/3.0);
            double t53399 = b1p*t53034*t53155*t53237*(1.0/3.6E1);
            double t53247 = t53242+t53243+t53244+t53245+t53246-t53399;
            double t53248 = 1.0/(t53131*t53131);
            double t53249 = 1.0/(t53123*t53123*t53123*t53123);
            double t53250 = a1p*c*c0p*t53142*t53236*(8.0/9.0);
            double t53251 = a1f*c*c0f*t53118*t53146*(2.0/3.0);
            double t53252 = a1p*c*c0p*t53142*t53118*(2.0/3.0);
            double t53324 = t53234*t53235*t53148*t53229;
            double t53253 = t53141+t53251-t53252-t53324;
            double t53254 = gamma_bb[index]*gamma_bb[index];
            double t53255 = gcaa*gcaa;
            double t53256 = t53254*t53254;
            double t53257 = t53255*t53255;
            double t53258 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t53259 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t53260 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t53261 = 1.0/pow(rho_a[index],1.0/3.0);
            double t53262 = c*t53261;
            double t53263 = sqrt(t53262);
            double t53264 = pow(t53262,3.0/2.0);
            double t53265 = 1.0/pow(rho_a[index],2.0/3.0);
            double t53266 = b1p*t53263;
            double t53267 = b3p*t53264;
            double t53268 = b4p*t53034*t53265;
            double t53269 = b2p*c*t53261;
            double t53270 = t53266+t53267+t53268+t53269;
            double t53271 = 1.0/t53270;
            double t53272 = t53040*t53271*(1.0/2.0);
            double t53273 = t53272+1.0;
            double t53274 = log(t53273);
            double t53275 = a1p*c*t53261;
            double t53276 = t53275+1.0;
            double t53277 = c0p*t53274*t53276*2.0;
            double t53278 = c0f*t53146*t53148*2.0;
            double t53280 = c0p*t53133*t53142*2.0;
            double t53279 = -t53280+t53278;
            double t53281 = t53052*t53071*t53066*t53075*t53078;
            double t53282 = Aa*t53101*t53052*t53071*t53107*t53089*t53099*2.0;
            double t53283 = gamma_bb[index]*gcab*t53152*(1.6E1/3.0);
            double t53284 = gamma_bb[index]*gcab*t53151*t53152*t53149*1.6E1;
            double t53285 = gamma_bb[index]*t53150*t53151*t53152*t53157*(1.6E1/3.0);
            double t53286 = gamma_bb[index]*t53150*t53152*t53149*1.6E1;
            double t53287 = t53283+t53284+t53285+t53286;
            double t53288 = 1.0/(t53165*t53165);
            double t53289 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t53290 = gamma_bb[index]*gcab*t53152*(8.0/3.0);
            double t53291 = gamma_bb[index]*t53150*t53152*t53149*(8.0/3.0);
            double t53292 = t53290+t53291;
            double t53293 = 1.0/(t53172*t53172);
            double t53294 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t53295 = 1.0/(t53163*t53163);
            double t53296 = 1.0/(t53168*t53168);
            double t53297 = gamma_bb[index]*gcab*t53152*4.0;
            double t53298 = gamma_bb[index]*gcab*t53151*t53152*t53149*4.0;
            double t53299 = gamma_bb[index]*t53150*t53152*t53149*8.0;
            double t53300 = t53297+t53298+t53299;
            double t53301 = t53052*t53145*t53279;
            double t53302 = t53301+t53280;
            double t53303 = gamma_bb[index]*gcaa*t53155*4.0;
            double t53304 = gamma_bb[index]*gcaa*t53254*t53255*t53259*4.0;
            double t53305 = t53260*t53254*t53255*6.0;
            double t53306 = t53256*t53257*t53258;
            double t53307 = t53303+t53304+t53305+t53306+1.0;
            double t53308 = 1.0/t53307;
            double t53309 = gamma_bb[index]*gcaa*t53155;
            double t53310 = t53309+1.0;
            double t53311 = 1.0/t53310;
            double t53312 = gamma_bb[index]*gcaa*t53155*3.0;
            double t53313 = gamma_bb[index]*gcaa*t53254*t53255*t53259;
            double t53314 = t53260*t53254*t53255*3.0;
            double t53315 = t53312+t53313+t53314+1.0;
            double t53316 = 1.0/t53315;
            double t53317 = gamma_bb[index]*gcaa*t53155*2.0;
            double t53318 = t53260*t53254*t53255;
            double t53319 = t53317+t53318+1.0;
            double t53320 = 1.0/t53319;
            double t53321 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t53322 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t53323 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t53325 = t53052*t53145*t53253;
            double t53326 = ccaa4*t53323*t53308*t53256*t53257*(3.2E1/3.0);
            double t53327 = ccaa1*gamma_bb[index]*gcaa*t53311*t53152*(8.0/3.0);
            double t53328 = ccaa3*gamma_bb[index]*gcaa*t53322*t53316*t53254*t53255*8.0;
            double t53329 = ccaa2*t53320*t53321*t53254*t53255*(1.6E1/3.0);
            double t53330 = 1.0/(t53310*t53310);
            double t53331 = gamma_bb[index]*gcaa*t53152*8.0;
            double t53332 = gamma_bb[index]*gcaa*t53322*t53254*t53255*8.0;
            double t53333 = t53321*t53254*t53255*1.6E1;
            double t53334 = t53331+t53332+t53333;
            double t53335 = 1.0/(t53315*t53315);
            double t53336 = gamma_bb[index]*gcaa*t53152*(3.2E1/3.0);
            double t53337 = gamma_bb[index]*gcaa*t53322*t53254*t53255*3.2E1;
            double t53338 = t53321*t53254*t53255*3.2E1;
            double t53339 = t53323*t53256*t53257*(3.2E1/3.0);
            double t53340 = t53336+t53337+t53338+t53339;
            double t53341 = 1.0/(t53307*t53307);
            double t53342 = gamma_bb[index]*gcaa*t53152*(1.6E1/3.0);
            double t53343 = t53321*t53254*t53255*(1.6E1/3.0);
            double t53344 = t53342+t53343;
            double t53345 = 1.0/(t53319*t53319);
            double t53346 = t53326+t53327+t53328+t53329-ccaa1*t53321*t53330*t53254*t53255*(8.0/3.0)-ccaa2*t53260* \
               t53254*t53344*t53255*t53345-ccaa4*t53340*t53341*t53256*t53257*t53258-ccaa3*gamma_bb[index]*gcaa*t53334* \
               t53254*t53335*t53255*t53259;
            double t53347 = -t53141+t53252+t53325;
            double t53348 = gx*gx;
            double t53349 = t53348*t53348;
            double t53350 = 1.0/pow(rho_b[index],1.0E1);
            double t53351 = gamma_bb[index]*gx*t53155;
            double t53352 = t53351+1.0;
            double t53372 = gamma_bb[index]*gx*t53152*(3.2E1/3.0);
            double t53373 = gamma_bb[index]*gx*t53322*t53254*t53348*3.2E1;
            double t53374 = t53321*t53254*t53348*3.2E1;
            double t53375 = t53323*t53256*t53349*(3.2E1/3.0);
            double t53353 = t53372+t53373+t53374+t53375;
            double t53354 = gamma_bb[index]*gx*t53155*4.0;
            double t53355 = gamma_bb[index]*gx*t53254*t53348*t53259*4.0;
            double t53356 = t53260*t53254*t53348*6.0;
            double t53357 = t53256*t53258*t53349;
            double t53358 = t53354+t53355+t53356+t53357+1.0;
            double t53378 = gamma_bb[index]*gx*t53152*(1.6E1/3.0);
            double t53379 = t53321*t53254*t53348*(1.6E1/3.0);
            double t53359 = t53378+t53379;
            double t53360 = gamma_bb[index]*gx*t53155*2.0;
            double t53361 = t53260*t53254*t53348;
            double t53362 = t53360+t53361+1.0;
            double t53363 = gamma_bb[index]*gx*t53155*3.0;
            double t53364 = gamma_bb[index]*gx*t53254*t53348*t53259;
            double t53365 = t53260*t53254*t53348*3.0;
            double t53366 = t53363+t53364+t53365+1.0;
            double t53367 = 1.0/(t53366*t53366);
            double t53368 = gamma_bb[index]*gx*t53152*8.0;
            double t53369 = gamma_bb[index]*gx*t53322*t53254*t53348*8.0;
            double t53370 = t53321*t53254*t53348*1.6E1;
            double t53371 = t53370+t53368+t53369;
            double t53376 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t53377 = 1.0/(t53358*t53358);
            double t53380 = 1.0/(t53362*t53362);
            double t53381 = 1.0/t53358;
            double t53382 = 1.0/t53352;
            double t53383 = 1.0/t53366;
            double t53384 = 1.0/t53362;
            double t53385 = 1.0/(t53352*t53352);
            double t53386 = ccaa4*t53308*t53256*t53257*t53258;
            double t53387 = ccaa1*gamma_bb[index]*gcaa*t53311*t53155;
            double t53388 = ccaa3*gamma_bb[index]*gcaa*t53316*t53254*t53255*t53259;
            double t53389 = ccaa2*t53320*t53260*t53254*t53255;
            double t53390 = ccaa0+t53386+t53387+t53388+t53389;
            double t53391 = 1.0/(t53117*t53117*t53117);
            double t53392 = b4f*t53034*t53155*(1.0E1/9.0);
            double t53393 = b2f*c*t53236*(4.0/9.0);
            double t53394 = b3f*t53034*t53125*t53155*(1.0/1.2E1);
            double t53395 = b1f*c*t53125*t53236*(2.0/9.0);
            double t53396 = b3f*c*t53110*t53236*(2.0/3.0);
            double t53397 = t53392+t53393+t53394+t53395+t53396-b1f*t53034*t53155*t53237*(1.0/3.6E1);
            double t53398 = t53235*t53148*t53229*t53397;
            double t53400 = t53133*t53134*t53135*t53247;
            double t53401 = 1.0/(t53128*t53128);
            double t53402 = 1.0/(t53117*t53117*t53117*t53117);
            double t53403 = t53401*t53402*t53053*t53148*t53238*(1.0/2.0);
            double t53404 = t53040*t53133*t53239*t53248*t53249*(1.0/2.0);
            double t53405 = a1f*c*t53234*t53118*t53235*t53229*(2.0/3.0);
            double t53406 = a1p*c*t53140*t53134*t53135*t53118*(2.0/3.0);
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t53150*t53176+ccab2*t53151*t53174*t53149+ccab4*t53157*t53158* \
               t53177+ccab3*gcab*t53150*t53151*t53175*t53149)*(-rho_b[index]*(t53400-t53241-t53250+t53404+t53406+ \
               t53052*t53145*(t53241+t53250+t53403+t53405+t53398-t53133*t53134*t53135*t53247-t53148*t53229*t53238* \
               t53391*2.0-a1f*c*c0f*t53146*t53236*(8.0/9.0)-t53040*t53133*t53239*t53248*t53249*(1.0/2.0)-a1p*c*t53140* \
               t53134*t53135*t53118*(2.0/3.0)))-t53027*(t53201+t53210-t53045*t53081*t53082*t53199-t53052*t53071*t53075* \
               t53078*(t53201+t53210-t53045*t53081*t53082*t53199-t53202*t53064*t53181*1.0/(t53058*t53058*t53058)* \
               2.0+t53064*t53181*t53182*(b2f*c*t53178*(4.0/9.0)+b4f*t53034*t53179*(1.0E1/9.0)+b1f*c*t53080*t53178* \
               (2.0/9.0)+b3f*c*t53030*t53178*(2.0/3.0)-b1f*t53034*t53193*t53179*(1.0/3.6E1)+b3f*t53034*t53080*t53179* \
               (1.0/1.2E1))+t53202*1.0/(t53061*t53061)*t53053*t53064*1.0/(t53058*t53058*t53058*t53058)*(1.0/2.0)- \
               a1f*c*c0f*t53062*t53178*(8.0/9.0)-t53040*t53203*t53204*t53045*t53192*(1.0/2.0)+a1f*c*t53181*t53182* \
               t53039*t53187*(2.0/3.0)-a1p*c*t53081*t53082*t53039*t53087*(2.0/3.0))-t53040*t53203*t53204*t53045*t53192* \
               (1.0/2.0)+t53211*t53052*t53071*t53066*t53078*2.0E1+t53220*t53052*t53066*t53075*t53078+t53052*t53071* \
               t53047*t53066*t53075*1.2E1+t53105*t53052*t53066*t53078*t53088*8.0-t53105*t53052*t53075*t53078*t53189* \
               2.0-t53052*t53071*t53078*t53088*t53189*8.0+t53105*t53052*t53046*t53047*t53066*t53075*8.0+t53052*t53071* \
               t53046*t53047*t53066*t53088*3.2E1-t53052*t53071*t53046*t53047*t53075*t53189*8.0-a1p*c*t53081*t53082* \
               t53039*t53087*(2.0/3.0)+Aa*t53101*t53220*t53052*t53107*t53089*t53099*2.0+Aa*t53101*t53105*t53052*t53214* \
               t53089*t53099*4.0+Aa*t53101*t53052*t53071*t53089*t53099*(t53211*t53078*2.0E1+t53047*t53075*1.2E1+t53046* \
               t53047*t53088*3.2E1)*2.0-t53101*t53221*t53105*t53222*t53052*t53107*t53227*t53089*2.0-t53101*t53221* \
               t53222*t53052*t53214*t53071*t53227*t53089*2.0+t53101*t53221*t53052*t53071*t53107*t53228*1.0/(t53095* \
               t53095*t53095)*t53089*2.0-t53101*t53221*t53222*t53052*t53071*t53107*t53089*(b2a*c*t53178*(4.0/9.0) \
               +b4a*t53034*t53179*(1.0E1/9.0)+b1a*c*t53080*t53178*(2.0/9.0)+b3a*c*t53030*t53178*(2.0/3.0)-b1a*t53034* \
               t53193*t53179*(1.0/3.6E1)+b3a*t53034*t53080*t53179*(1.0/1.2E1))+Aa*a1a*c*t53105*t53052*t53107*t53039* \
               t53089*t53099*(4.0/3.0)+Aa*a1a*c*t53052*t53214*t53071*t53039*t53089*t53099*(4.0/3.0)+Aa*a1a*c*t53052* \
               t53071*t53107*t53178*t53089*t53099*(8.0/9.0)-t53101*t53052*t53071*t53107*t53090*t53228*1.0/(t53095* \
               t53095*t53095*t53095)*t53089*1.0/(t53098*t53098)*(1.0/2.0)-a1a*c*t53221*t53222*t53052*t53071*t53107* \
               t53227*t53039*t53089*(2.0/3.0))-t53052*t53145*t53253*2.0+t53140*t53133*t53134*t53135*2.0-t53045*t53081* \
               t53082*t53087*2.0-a1p*c*c0p*t53142*t53118*(4.0/3.0)+a1p*c*c0p*t53065*t53039*(4.0/3.0)+t53105*t53052* \
               t53066*t53075*t53078*2.0+t53052*t53071*t53066*t53078*t53088*8.0-t53052*t53071*t53075*t53078*t53189* \
               2.0+t53052*t53071*t53046*t53047*t53066*t53075*8.0+Aa*t53101*t53105*t53052*t53107*t53089*t53099*4.0+ \
               Aa*t53101*t53052*t53214*t53071*t53089*t53099*4.0-t53101*t53221*t53222*t53052*t53071*t53107*t53227* \
               t53089*2.0+Aa*a1a*c*t53052*t53071*t53107*t53039*t53089*t53099*(4.0/3.0))+(rho_b[index]*t53302+rho_a[index]* \
               (t53277-t53052*t53145*(t53277-c0f*log((t53053*(1.0/2.0))/(b1f*t53263+b3f*t53264+b2f*c*t53261+b4f*t53034* \
               t53265)+1.0)*(a1f*c*t53261+1.0)*2.0))-t53027*(t53281+t53282+t53077))*(-ccab2*t53151*t53149*t53296* \
               (gamma_bb[index]*gcab*t53294*(8.8E1/9.0)+t53254*t53149*t53289*(3.2E1/9.0)+gamma_bb[index]*t53150*t53149* \
               t53294*(8.8E1/9.0))+ccab2*t53151*(t53292*t53292)*t53149*1.0/(t53168*t53168*t53168)*2.0+ccab4*1.0/(t53163* \
               t53163*t53163)*t53157*t53158*(t53287*t53287)*2.0+ccab1*gamma_bb[index]*gcab*t53176*t53294*(4.4E1/9.0) \
               +ccab2*t53254*t53174*t53149*t53289*(3.2E1/9.0)-ccab1*t53254*t53149*t53288*t53289*(3.2E1/9.0)-ccab4* \
               t53157*t53158*t53295*(gamma_bb[index]*gcab*t53294*(1.76E2/9.0)+t53254*t53149*t53289*(6.4E1/3.0)+gamma_bb[index]* \
               t53150*t53149*t53294*(1.76E2/3.0)+t53151*t53254*t53157*t53289*(6.4E1/3.0)+gamma_bb[index]*gcab*t53151* \
               t53149*t53294*(1.76E2/3.0)+gamma_bb[index]*t53150*t53151*t53157*t53294*(1.76E2/9.0)+gcab*t53150*t53254* \
               t53149*t53289*(1.28E2/3.0))+ccab4*t53151*t53254*t53157*t53177*t53289*(6.4E1/3.0)+ccab2*gamma_bb[index]* \
               t53150*t53174*t53149*t53294*(8.8E1/9.0)-ccab1*gamma_bb[index]*t53150*t53149*t53294*t53288*(4.4E1/9.0) \
               +ccab3*gcab*(t53300*t53300)*t53150*t53151*1.0/(t53172*t53172*t53172)*t53149*2.0+ccab3*gamma_bb[index]* \
               gcab*t53151*t53175*t53149*t53294*(4.4E1/3.0)-ccab2*gamma_bb[index]*t53150*t53152*t53292*t53149*t53296* \
               (1.6E1/3.0)+ccab4*gamma_bb[index]*t53150*t53151*t53157*t53177*t53294*(1.76E2/9.0)+ccab3*gcab*t53150* \
               t53254*t53175*t53149*t53289*(3.2E1/3.0)+ccab1*gcab*t53150*t53254*1.0/(t53165*t53165*t53165)*t53149* \
               t53289*(3.2E1/9.0)-ccab3*gcab*t53150*t53151*t53149*t53293*(gamma_bb[index]*gcab*t53294*(4.4E1/3.0) \
               +t53254*t53149*t53289*(3.2E1/3.0)+gamma_bb[index]*t53150*t53149*t53294*(8.8E1/3.0)+gamma_bb[index]* \
               gcab*t53151*t53149*t53294*(4.4E1/3.0)+gcab*t53150*t53254*t53149*t53289*(3.2E1/3.0))-ccab3*gamma_bb[index]* \
               gcab*t53300*t53151*t53152*t53149*t53293*8.0-ccab4*gamma_bb[index]*t53150*t53151*t53152*t53157*t53295* \
               t53287*(3.2E1/3.0))+(t53281+t53282+t53077+rho_b[index]*(-t53141+t53252+t53052*t53145*(t53141+t53251- \
               t53234*t53235*t53148*t53229-a1p*c*c0p*t53142*t53118*(2.0/3.0)))-t53027*(t53173-t53045*t53081*t53082* \
               t53087+t53105*t53052*t53066*t53075*t53078+t53052*t53071*t53066*t53078*t53088*4.0-t53052*t53071*t53075* \
               t53078*t53189+t53052*t53071*t53046*t53047*t53066*t53075*4.0+Aa*t53101*t53105*t53052*t53107*t53089* \
               t53099*2.0+Aa*t53101*t53052*t53214*t53071*t53089*t53099*2.0-t53101*t53221*t53222*t53052*t53071*t53107* \
               t53227*t53089+Aa*a1a*c*t53052*t53071*t53107*t53039*t53089*t53099*(2.0/3.0))-c0p*t53133*t53142*2.0- \
               t53052*t53145*t53279)*(ccab1*gamma_bb[index]*gcab*t53152*t53176*(4.0/3.0)-ccab2*t53151*t53292*t53149* \
               t53296-ccab4*t53157*t53158*t53295*t53287+ccab2*gamma_bb[index]*t53150*t53152*t53174*t53149*(8.0/3.0) \
               -ccab1*gamma_bb[index]*t53150*t53152*t53149*t53288*(4.0/3.0)+ccab3*gamma_bb[index]*gcab*t53151*t53152* \
               t53175*t53149*4.0+ccab4*gamma_bb[index]*t53150*t53151*t53152*t53157*t53177*(1.6E1/3.0)-ccab3*gcab* \
               t53300*t53150*t53151*t53149*t53293)*2.0+t53302*t53346*2.0+t53390*t53347*2.0+rho_b[index]*t53390*(t53400- \
               t53241-t53250+t53404+t53406-t53052*t53145*(t53400-t53241-t53250-t53403+t53404-t53405+t53406-t53398+ \
               t53148*t53229*t53238*t53391*2.0+a1f*c*c0f*t53146*t53236*(8.0/9.0)))-c0*pow(rho_b[index],1.0/3.0)*(cx1* \
               gamma_bb[index]*gx*t53152*t53382*(8.0/3.0)-cx1*t53321*t53254*t53348*t53385*(8.0/3.0)+cx2*t53321*t53254* \
               t53348*t53384*(1.6E1/3.0)+cx4*t53323*t53381*t53256*t53349*(3.2E1/3.0)-cx2*t53260*t53254*t53380*t53348* \
               t53359-cx4*t53353*t53256*t53258*t53349*t53377+cx3*gamma_bb[index]*gx*t53322*t53254*t53383*t53348*8.0- \
               cx3*gamma_bb[index]*gx*t53254*t53371*t53348*t53259*t53367)*(8.0/3.0)-rho_b[index]*t53302*(ccaa1*gamma_bb[index]* \
               gcaa*t53311*t53294*(8.8E1/9.0)-ccaa1*t53330*t53254*t53255*t53289*2.4E1+ccaa2*t53320*t53254*t53255* \
               t53289*(3.04E2/9.0)+ccaa4*t53308*t53256*t53257*t53376*(1.12E3/9.0)-ccaa2*t53321*t53254*t53344*t53255* \
               t53345*(3.2E1/3.0)-ccaa4*t53340*t53323*t53341*t53256*t53257*(6.4E1/3.0)-ccaa2*t53260*t53254*t53255* \
               t53345*(gamma_bb[index]*gcaa*t53294*(1.76E2/9.0)+t53254*t53255*t53289*(3.04E2/9.0))-ccaa4*t53341*t53256* \
               t53257*t53258*(gamma_bb[index]*gcaa*t53294*(3.52E2/9.0)+t53254*t53255*t53289*(6.08E2/3.0)+t53256*t53257* \
               t53376*(1.12E3/9.0)+gamma_bb[index]*gcaa*t53350*t53254*t53255*2.88E2)+ccaa2*t53260*t53254*(t53344* \
               t53344)*t53255*1.0/(t53319*t53319*t53319)*2.0+ccaa4*(t53340*t53340)*1.0/(t53307*t53307*t53307)*t53256* \
               t53257*t53258*2.0+ccaa3*gamma_bb[index]*gcaa*t53350*t53316*t53254*t53255*7.2E1+ccaa1*gamma_bb[index]* \
               gcaa*1.0/(t53310*t53310*t53310)*t53350*t53254*t53255*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*1.0/(t53315* \
               t53315*t53315)*(t53334*t53334)*t53254*t53255*t53259*2.0-ccaa3*gamma_bb[index]*gcaa*t53254*t53335*t53255* \
               t53259*(gamma_bb[index]*gcaa*t53294*(8.8E1/3.0)+t53254*t53255*t53289*(3.04E2/3.0)+gamma_bb[index]* \
               gcaa*t53350*t53254*t53255*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t53322*t53334*t53254*t53335*t53255*1.6E1) \
               -rho_b[index]*t53346*t53347*2.0+c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t53382*t53294* \
               (8.8E1/9.0)-cx1*t53254*t53348*t53385*t53289*2.4E1+cx2*t53254*t53348*t53384*t53289*(3.04E2/9.0)+cx4* \
               t53381*t53256*t53349*t53376*(1.12E3/9.0)-cx2*t53321*t53254*t53380*t53348*t53359*(3.2E1/3.0)-cx4*t53323* \
               t53353*t53256*t53349*t53377*(6.4E1/3.0)-cx2*t53260*t53254*t53380*t53348*(gamma_bb[index]*gx*t53294* \
               (1.76E2/9.0)+t53254*t53348*t53289*(3.04E2/9.0))-cx4*t53256*t53258*t53349*t53377*(gamma_bb[index]*gx* \
               t53294*(3.52E2/9.0)+t53254*t53348*t53289*(6.08E2/3.0)+t53256*t53349*t53376*(1.12E3/9.0)+gamma_bb[index]* \
               gx*t53350*t53254*t53348*2.88E2)+cx2*t53260*t53254*1.0/(t53362*t53362*t53362)*t53348*(t53359*t53359) \
               *2.0+cx4*(t53353*t53353)*t53256*t53258*t53349*1.0/(t53358*t53358*t53358)*2.0+cx3*gamma_bb[index]*gx* \
               t53350*t53254*t53383*t53348*7.2E1+cx1*gamma_bb[index]*gx*t53350*1.0/(t53352*t53352*t53352)*t53254* \
               t53348*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t53254*(t53371*t53371)*t53348*1.0/(t53366*t53366*t53366) \
               *t53259*2.0-cx3*gamma_bb[index]*gx*t53254*t53348*t53259*t53367*(gamma_bb[index]*gx*t53294*(8.8E1/3.0) \
               +t53254*t53348*t53289*(3.04E2/3.0)+gamma_bb[index]*gx*t53350*t53254*t53348*7.2E1)-cx3*gamma_bb[index]* \
               gx*t53322*t53254*t53371*t53348*t53367*1.6E1)+c0*t53114*(cx0+cx1*gamma_bb[index]*gx*t53155*t53382+cx2* \
               t53260*t53254*t53348*t53384+cx4*t53381*t53256*t53258*t53349+cx3*gamma_bb[index]*gx*t53254*t53383*t53348* \
               t53259)*(4.0/9.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t55172 = 1.0/pow(rho_b[index],1.0/3.0);
            double t55173 = c*t55172;
            double t55174 = sqrt(t55173);
            double t55175 = b1f*t55174;
            double t55176 = pow(t55173,3.0/2.0);
            double t55177 = b3f*t55176;
            double t55178 = c*c;
            double t55179 = 1.0/pow(rho_b[index],2.0/3.0);
            double t55180 = b4f*t55178*t55179;
            double t55181 = b2f*c*t55172;
            double t55182 = t55180+t55181+t55175+t55177;
            double t55183 = 1.0/pow(rho_b[index],4.0/3.0);
            double t55184 = b1p*t55174;
            double t55185 = b3p*t55176;
            double t55186 = b4p*t55178*t55179;
            double t55187 = b2p*c*t55172;
            double t55188 = t55184+t55185+t55186+t55187;
            double t55189 = 1.0/pow(rho_b[index],5.0/3.0);
            double t55190 = 1.0/sqrt(t55173);
            double t55191 = 1.0/c0f;
            double t55192 = 1.0/t55182;
            double t55193 = t55191*t55192*(1.0/2.0);
            double t55194 = t55193+1.0;
            double t55195 = 1.0/c0p;
            double t55196 = 1.0/t55188;
            double t55197 = t55195*t55196*(1.0/2.0);
            double t55198 = t55197+1.0;
            double t55199 = a1p*c*t55172;
            double t55200 = t55199+1.0;
            double t55201 = 1.0/t55198;
            double t55202 = 1.0/(t55188*t55188);
            double t55203 = b4p*t55178*t55189*(2.0/3.0);
            double t55204 = b2p*c*t55183*(1.0/3.0);
            double t55205 = b1p*c*t55190*t55183*(1.0/6.0);
            double t55206 = b3p*c*t55174*t55183*(1.0/2.0);
            double t55207 = t55203+t55204+t55205+t55206;
            double t55208 = t55200*t55201*t55202*t55207;
            double t55209 = log(t55198);
            double t55210 = gamma_bb[index]*gamma_bb[index];
            double t55211 = gcaa*gcaa;
            double t55212 = t55210*t55210;
            double t55213 = t55211*t55211;
            double t55214 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t55215 = 1.0/pow(rho_b[index],8.0/3.0);
            double t55216 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t55217 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t55218 = pow(2.0,1.0/3.0);
            double t55219 = t55218*2.0;
            double t55220 = t55219-2.0;
            double t55221 = two_13*2.0;
            double t55222 = t55221-2.0;
            double t55223 = 1.0/t55222;
            double t55224 = log(t55194);
            double t55225 = a1f*c*t55172;
            double t55226 = t55225+1.0;
            double t55227 = gamma_bb[index]*gcaa*t55215*4.0;
            double t55228 = gamma_bb[index]*gcaa*t55210*t55211*t55216*4.0;
            double t55229 = t55210*t55211*t55217*6.0;
            double t55230 = t55212*t55213*t55214;
            double t55231 = t55230+t55227+t55228+t55229+1.0;
            double t55232 = 1.0/t55231;
            double t55233 = gamma_bb[index]*gcaa*t55215;
            double t55234 = t55233+1.0;
            double t55235 = 1.0/t55234;
            double t55236 = gamma_bb[index]*gcaa*t55215*3.0;
            double t55237 = gamma_bb[index]*gcaa*t55210*t55211*t55216;
            double t55238 = t55210*t55211*t55217*3.0;
            double t55239 = t55236+t55237+t55238+1.0;
            double t55240 = 1.0/t55239;
            double t55241 = gamma_bb[index]*gcaa*t55215*2.0;
            double t55242 = t55210*t55211*t55217;
            double t55243 = t55241+t55242+1.0;
            double t55244 = 1.0/t55243;
            double t55245 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t55246 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t55247 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t55248 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t55249 = 1.0/t55194;
            double t55250 = 1.0/(t55182*t55182);
            double t55251 = b4f*t55178*t55189*(2.0/3.0);
            double t55252 = b2f*c*t55183*(1.0/3.0);
            double t55253 = b1f*c*t55190*t55183*(1.0/6.0);
            double t55254 = b3f*c*t55174*t55183*(1.0/2.0);
            double t55255 = t55251+t55252+t55253+t55254;
            double t55256 = a1f*c*c0f*t55224*t55183*(2.0/3.0);
            double t55257 = a1p*c*c0p*t55209*t55183*(2.0/3.0);
            double t55258 = ccaa4*t55212*t55213*t55232*t55248*(3.2E1/3.0);
            double t55259 = ccaa1*gamma_bb[index]*gcaa*t55235*t55246*(8.0/3.0);
            double t55260 = ccaa3*gamma_bb[index]*gcaa*t55210*t55211*t55240*t55247*8.0;
            double t55261 = ccaa2*t55210*t55211*t55244*t55245*(1.6E1/3.0);
            double t55262 = 1.0/(t55234*t55234);
            double t55263 = gamma_bb[index]*gcaa*t55246*8.0;
            double t55264 = gamma_bb[index]*gcaa*t55210*t55211*t55247*8.0;
            double t55265 = t55210*t55211*t55245*1.6E1;
            double t55266 = t55263+t55264+t55265;
            double t55267 = 1.0/(t55239*t55239);
            double t55268 = gamma_bb[index]*gcaa*t55246*(3.2E1/3.0);
            double t55269 = gamma_bb[index]*gcaa*t55210*t55211*t55247*3.2E1;
            double t55270 = t55210*t55211*t55245*3.2E1;
            double t55271 = t55212*t55213*t55248*(3.2E1/3.0);
            double t55272 = t55270+t55271+t55268+t55269;
            double t55273 = 1.0/(t55231*t55231);
            double t55274 = gamma_bb[index]*gcaa*t55246*(1.6E1/3.0);
            double t55275 = t55210*t55211*t55245*(1.6E1/3.0);
            double t55276 = t55274+t55275;
            double t55277 = 1.0/(t55243*t55243);
            double t55278 = t55260+t55261+t55258+t55259-ccaa1*t55210*t55211*t55262*t55245*(8.0/3.0)-ccaa4*t55212* \
               t55213*t55214*t55272*t55273-ccaa2*t55210*t55211*t55217*t55276*t55277-ccaa3*gamma_bb[index]*gcaa*t55210* \
               t55211*t55216*t55266*t55267;
            double t55279 = gx*gx;
            double t55280 = t55279*t55279;
            double t55281 = 1.0/pow(rho_b[index],1.0E1);
            double t55282 = gamma_bb[index]*gx*t55215;
            double t55283 = t55282+1.0;
            double t55284 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t55305 = gamma_bb[index]*gx*t55246*(3.2E1/3.0);
            double t55306 = gamma_bb[index]*gx*t55210*t55247*t55279*3.2E1;
            double t55307 = t55210*t55245*t55279*3.2E1;
            double t55308 = t55212*t55280*t55248*(3.2E1/3.0);
            double t55285 = t55305+t55306+t55307+t55308;
            double t55286 = gamma_bb[index]*gx*t55215*4.0;
            double t55287 = gamma_bb[index]*gx*t55210*t55216*t55279*4.0;
            double t55288 = t55210*t55217*t55279*6.0;
            double t55289 = t55212*t55214*t55280;
            double t55290 = t55286+t55287+t55288+t55289+1.0;
            double t55311 = gamma_bb[index]*gx*t55246*(1.6E1/3.0);
            double t55312 = t55210*t55245*t55279*(1.6E1/3.0);
            double t55291 = t55311+t55312;
            double t55292 = gamma_bb[index]*gx*t55215*2.0;
            double t55293 = t55210*t55217*t55279;
            double t55294 = t55292+t55293+1.0;
            double t55295 = gamma_bb[index]*gx*t55215*3.0;
            double t55296 = gamma_bb[index]*gx*t55210*t55216*t55279;
            double t55297 = t55210*t55217*t55279*3.0;
            double t55298 = t55295+t55296+t55297+1.0;
            double t55299 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t55300 = 1.0/(t55298*t55298);
            double t55301 = gamma_bb[index]*gx*t55246*8.0;
            double t55302 = gamma_bb[index]*gx*t55210*t55247*t55279*8.0;
            double t55303 = t55210*t55245*t55279*1.6E1;
            double t55304 = t55301+t55302+t55303;
            double t55309 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t55310 = 1.0/(t55290*t55290);
            double t55313 = 1.0/(t55294*t55294);
            double t55314 = 1.0/t55290;
            double t55315 = 1.0/t55283;
            double t55316 = 1.0/t55298;
            double t55317 = 1.0/t55294;
            double t55318 = c0f*t55224*t55226*2.0;
            double t55319 = c0p*t55200*t55209*2.0;
            double t55320 = 1.0/(t55283*t55283);
            double t55321 = ccaa4*t55212*t55213*t55214*t55232;
            double t55322 = ccaa1*gamma_bb[index]*gcaa*t55215*t55235;
            double t55323 = ccaa3*gamma_bb[index]*gcaa*t55210*t55211*t55240*t55216;
            double t55324 = ccaa2*t55210*t55211*t55217*t55244;
            double t55325 = ccaa0+t55321+t55322+t55323+t55324;
            double t55326 = 1.0/pow(rho_b[index],7.0/3.0);
            double t55327 = 1.0/pow(t55173,3.0/2.0);
            double t55328 = t55255*t55255;
            double t55329 = t55207*t55207;
            double t55330 = 1.0/(t55188*t55188*t55188);
            double t55331 = t55200*t55201*t55330*t55329*2.0;
            double t55332 = b4p*t55215*t55178*(1.0E1/9.0);
            double t55333 = b2p*c*t55326*(4.0/9.0);
            double t55334 = b3p*t55215*t55190*t55178*(1.0/1.2E1);
            double t55335 = b1p*c*t55190*t55326*(2.0/9.0);
            double t55336 = b3p*c*t55326*t55174*(2.0/3.0);
            double t55337 = t55332+t55333+t55334+t55335+t55336-b1p*t55215*t55327*t55178*(1.0/3.6E1);
            double t55338 = 1.0/(t55198*t55198);
            double t55339 = 1.0/(t55188*t55188*t55188*t55188);
            double t55340 = a1p*c*c0p*t55209*t55326*(8.0/9.0);
            v_rho_b_rho_b_[index] = t55278*(t55319+t55220*t55223*(t55318-c0p*t55200*t55209*2.0))*2.0+t55325*(- \
               t55208+t55257+t55220*t55223*(t55208+t55256-t55250*t55226*t55255*t55249-a1p*c*c0p*t55209*t55183*(2.0/ \
               3.0)))*2.0-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]*gx*t55315*t55246*(8.0/3.0)-cx1*t55210* \
               t55320*t55245*t55279*(8.0/3.0)+cx2*t55210*t55245*t55317*t55279*(1.6E1/3.0)+cx4*t55212*t55314*t55280* \
               t55248*(3.2E1/3.0)-cx2*t55210*t55313*t55217*t55291*t55279-cx4*t55310*t55212*t55214*t55280*t55285+cx3* \
               gamma_bb[index]*gx*t55210*t55316*t55247*t55279*8.0-cx3*gamma_bb[index]*gx*t55210*t55300*t55304*t55216* \
               t55279)*(8.0/3.0)+rho_b[index]*t55325*(-t55331-t55340+t55220*t55223*(t55331+t55340-t55200*t55201*t55202* \
               t55337-t55226*1.0/(t55182*t55182*t55182)*t55328*t55249*2.0+t55250*t55226*t55249*(b2f*c*t55326*(4.0/ \
               9.0)+b4f*t55215*t55178*(1.0E1/9.0)+b1f*c*t55190*t55326*(2.0/9.0)+b3f*c*t55326*t55174*(2.0/3.0)-b1f* \
               t55215*t55327*t55178*(1.0/3.6E1)+b3f*t55215*t55190*t55178*(1.0/1.2E1))+t55226*1.0/(t55182*t55182*t55182* \
               t55182)*t55191*t55328*1.0/(t55194*t55194)*(1.0/2.0)-a1f*c*c0f*t55224*t55326*(8.0/9.0)-t55200*t55329* \
               t55338*t55195*t55339*(1.0/2.0)+a1f*c*t55250*t55183*t55255*t55249*(2.0/3.0)-a1p*c*t55201*t55202*t55207* \
               t55183*(2.0/3.0))+t55200*t55201*t55202*t55337+t55200*t55329*t55338*t55195*t55339*(1.0/2.0)+a1p*c*t55201* \
               t55202*t55207*t55183*(2.0/3.0))-rho_b[index]*t55278*(-t55208+t55257+t55220*t55223*(t55208+t55256-t55257- \
               t55250*t55226*t55255*t55249))*2.0-rho_b[index]*(t55319+t55220*t55223*(t55318-t55319))*(ccaa1*gamma_bb[index]* \
               gcaa*t55235*t55299*(8.8E1/9.0)-ccaa1*t55210*t55211*t55262*t55284*2.4E1+ccaa2*t55210*t55211*t55244* \
               t55284*(3.04E2/9.0)+ccaa4*t55212*t55213*t55232*t55309*(1.12E3/9.0)-ccaa2*t55210*t55211*t55245*t55276* \
               t55277*(3.2E1/3.0)-ccaa4*t55212*t55213*t55272*t55273*t55248*(6.4E1/3.0)-ccaa2*t55210*t55211*t55217* \
               t55277*(gamma_bb[index]*gcaa*t55299*(1.76E2/9.0)+t55210*t55211*t55284*(3.04E2/9.0))-ccaa4*t55212*t55213* \
               t55214*t55273*(gamma_bb[index]*gcaa*t55299*(3.52E2/9.0)+t55210*t55211*t55284*(6.08E2/3.0)+t55212*t55213* \
               t55309*(1.12E3/9.0)+gamma_bb[index]*gcaa*t55210*t55211*t55281*2.88E2)+ccaa4*t55212*t55213*1.0/(t55231* \
               t55231*t55231)*t55214*(t55272*t55272)*2.0+ccaa2*t55210*t55211*1.0/(t55243*t55243*t55243)*t55217*(t55276* \
               t55276)*2.0+ccaa3*gamma_bb[index]*gcaa*t55210*t55211*t55240*t55281*7.2E1+ccaa1*gamma_bb[index]*gcaa* \
               t55210*t55211*1.0/(t55234*t55234*t55234)*t55281*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t55210*t55211* \
               t55216*1.0/(t55239*t55239*t55239)*(t55266*t55266)*2.0-ccaa3*gamma_bb[index]*gcaa*t55210*t55211*t55216* \
               t55267*(gamma_bb[index]*gcaa*t55299*(8.8E1/3.0)+t55210*t55211*t55284*(3.04E2/3.0)+gamma_bb[index]* \
               gcaa*t55210*t55211*t55281*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t55210*t55211*t55247*t55266*t55267*1.6E1) \
               +c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t55315*t55299*(8.8E1/9.0)-cx1*t55210*t55320* \
               t55284*t55279*2.4E1+cx2*t55210*t55317*t55284*t55279*(3.04E2/9.0)+cx4*t55212*t55314*t55280*t55309*(1.12E3/ \
               9.0)-cx2*t55210*t55313*t55245*t55291*t55279*(3.2E1/3.0)-cx4*t55310*t55212*t55280*t55248*t55285*(6.4E1/ \
               3.0)-cx2*t55210*t55313*t55217*t55279*(gamma_bb[index]*gx*t55299*(1.76E2/9.0)+t55210*t55284*t55279* \
               (3.04E2/9.0))-cx4*t55310*t55212*t55214*t55280*(gamma_bb[index]*gx*t55299*(3.52E2/9.0)+t55212*t55280* \
               t55309*(1.12E3/9.0)+t55210*t55284*t55279*(6.08E2/3.0)+gamma_bb[index]*gx*t55210*t55281*t55279*2.88E2) \
               +cx2*t55210*t55217*(t55291*t55291)*1.0/(t55294*t55294*t55294)*t55279*2.0+cx4*t55212*t55214*t55280* \
               1.0/(t55290*t55290*t55290)*(t55285*t55285)*2.0+cx3*gamma_bb[index]*gx*t55210*t55316*t55281*t55279* \
               7.2E1+cx1*gamma_bb[index]*gx*t55210*t55281*1.0/(t55283*t55283*t55283)*t55279*(1.28E2/9.0)+cx3*gamma_bb[index]* \
               gx*t55210*(t55304*t55304)*t55216*t55279*1.0/(t55298*t55298*t55298)*2.0-cx3*gamma_bb[index]*gx*t55210* \
               t55300*t55216*t55279*(gamma_bb[index]*gx*t55299*(8.8E1/3.0)+t55210*t55284*t55279*(3.04E2/3.0)+gamma_bb[index]* \
               gx*t55210*t55281*t55279*7.2E1)-cx3*gamma_bb[index]*gx*t55210*t55300*t55304*t55247*t55279*1.6E1)+c0* \
               t55179*(cx0+cx1*gamma_bb[index]*gx*t55215*t55315+cx2*t55210*t55217*t55317*t55279+cx4*t55212*t55214* \
               t55314*t55280+cx3*gamma_bb[index]*gx*t55210*t55216*t55316*t55279)*(4.0/9.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t53408 = 1.0/pow(rho_a[index],1.0/3.0);
                double t53409 = c*t53408;
                double t53410 = sqrt(t53409);
                double t53411 = pow(t53409,3.0/2.0);
                double t53412 = c*c;
                double t53413 = 1.0/pow(rho_a[index],2.0/3.0);
                double t53414 = 1.0/c0p;
                double t53415 = b1p*t53410;
                double t53416 = b3p*t53411;
                double t53417 = b4p*t53412*t53413;
                double t53418 = b2p*c*t53408;
                double t53419 = t53415+t53416+t53417+t53418;
                double t53420 = 1.0/t53419;
                double t53421 = t53420*t53414*(1.0/2.0);
                double t53422 = t53421+1.0;
                double t53423 = log(t53422);
                double t53424 = a1p*c*t53408;
                double t53425 = t53424+1.0;
                double t53426 = 1.0/pow(rho_a[index],8.0/3.0);
                double t53427 = gamma_aa[index]*gamma_aa[index];
                double t53428 = gcaa*gcaa;
                double t53429 = t53428*t53428;
                double t53430 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t53431 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t53432 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t53433 = gamma_aa[index]*gcaa*t53426;
                double t53434 = t53433+1.0;
                double t53435 = gamma_aa[index]*gcaa*t53426*3.0;
                double t53436 = gamma_aa[index]*gcaa*t53432*t53427*t53428;
                double t53437 = t53431*t53427*t53428*3.0;
                double t53438 = t53435+t53436+t53437+1.0;
                double t53439 = t53427*t53427;
                double t53440 = gamma_aa[index]*gcaa*t53426*4.0;
                double t53441 = gamma_aa[index]*gcaa*t53432*t53427*t53428*4.0;
                double t53442 = t53431*t53427*t53428*6.0;
                double t53443 = t53430*t53429*t53439;
                double t53444 = t53440+t53441+t53442+t53443+1.0;
                double t53445 = gamma_aa[index]*gcaa*t53426*2.0;
                double t53446 = t53431*t53427*t53428;
                double t53447 = t53445+t53446+1.0;
                double t53448 = rho_a[index]+rho_b[index];
                double t53449 = 1.0/pow(t53448,1.0/3.0);
                double t53450 = c*t53449;
                double t53451 = sqrt(t53450);
                double t53452 = b1p*t53451;
                double t53453 = pow(t53450,3.0/2.0);
                double t53454 = b3p*t53453;
                double t53455 = 1.0/pow(t53448,2.0/3.0);
                double t53456 = b4p*t53412*t53455;
                double t53457 = b2p*c*t53449;
                double t53458 = t53452+t53454+t53456+t53457;
                double t53459 = 1.0/pow(t53448,4.0/3.0);
                double t53460 = two_13*2.0;
                double t53461 = t53460-2.0;
                double t53462 = 1.0/t53461;
                double t53463 = 1.0/c0f;
                double t53464 = 1.0/t53458;
                double t53465 = t53414*t53464*(1.0/2.0);
                double t53466 = t53465+1.0;
                double t53467 = a1p*c*t53449;
                double t53468 = t53467+1.0;
                double t53469 = rho_a[index]-rho_b[index];
                double t53470 = t53469*t53469;
                double t53471 = 1.0/t53448;
                double t53472 = t53471*t53469;
                double t53473 = b1f*t53451;
                double t53474 = b3f*t53453;
                double t53475 = b4f*t53412*t53455;
                double t53476 = b2f*c*t53449;
                double t53477 = t53473+t53474+t53475+t53476;
                double t53478 = 1.0/t53477;
                double t53479 = t53463*t53478*(1.0/2.0);
                double t53480 = t53479+1.0;
                double t53481 = log(t53480);
                double t53482 = a1f*c*t53449;
                double t53483 = t53482+1.0;
                double t53484 = log(t53466);
                double t53494 = c0f*t53481*t53483*2.0;
                double t53495 = c0p*t53484*t53468*2.0;
                double t53485 = t53494-t53495;
                double t53486 = t53472+1.0;
                double t53487 = pow(t53486,4.0/3.0);
                double t53488 = -t53472+1.0;
                double t53489 = pow(t53488,4.0/3.0);
                double t53490 = t53487+t53489-2.0;
                double t53491 = 1.0/(t53448*t53448);
                double t53522 = t53491*t53469;
                double t53492 = -t53522+t53471;
                double t53493 = 1.0/(t53448*t53448*t53448*t53448);
                double t53496 = t53470*t53470;
                double t53497 = 1.0/pow(t53448,5.0/3.0);
                double t53498 = 1.0/sqrt(t53450);
                double t53499 = 1.0/t53466;
                double t53500 = 1.0/(t53458*t53458);
                double t53501 = b4p*t53412*t53497*(2.0/3.0);
                double t53502 = b2p*c*t53459*(1.0/3.0);
                double t53503 = b1p*c*t53459*t53498*(1.0/6.0);
                double t53504 = b3p*c*t53451*t53459*(1.0/2.0);
                double t53505 = t53501+t53502+t53503+t53504;
                double t53506 = t53500*t53505*t53468*t53499;
                double t53507 = 1.0/(t53448*t53448*t53448*t53448*t53448);
                double t53508 = 1.0/d2fz0;
                double t53509 = 1.0/Aa;
                double t53510 = b1a*t53451;
                double t53511 = b3a*t53453;
                double t53512 = b4a*t53412*t53455;
                double t53513 = b2a*c*t53449;
                double t53514 = t53510+t53511+t53512+t53513;
                double t53515 = 1.0/t53514;
                double t53516 = t53515*t53509*(1.0/2.0);
                double t53517 = t53516+1.0;
                double t53518 = log(t53517);
                double t53519 = a1a*c*t53449;
                double t53520 = t53519+1.0;
                double t53521 = pow(t53486,1.0/3.0);
                double t53523 = t53521*t53492*(4.0/3.0);
                double t53524 = pow(t53488,1.0/3.0);
                double t53525 = t53523-t53524*t53492*(4.0/3.0);
                double t53526 = t53493*t53496;
                double t53527 = t53526-1.0;
                double t53528 = pow(2.0,1.0/3.0);
                double t53529 = t53528*2.0;
                double t53530 = t53529-2.0;
                double t53531 = a1f*c*t53408;
                double t53532 = t53531+1.0;
                double t53533 = b1f*t53410;
                double t53534 = b3f*t53411;
                double t53535 = b4f*t53412*t53413;
                double t53536 = b2f*c*t53408;
                double t53537 = t53533+t53534+t53535+t53536;
                double t53538 = 1.0/t53537;
                double t53539 = t53463*t53538*(1.0/2.0);
                double t53540 = t53539+1.0;
                double t53541 = 1.0/pow(rho_a[index],4.0/3.0);
                double t53542 = 1.0/pow(rho_a[index],5.0/3.0);
                double t53543 = 1.0/sqrt(t53409);
                double t53544 = log(t53540);
                double t53545 = 1.0/t53422;
                double t53546 = 1.0/(t53419*t53419);
                double t53547 = b4p*t53412*t53542*(2.0/3.0);
                double t53548 = b2p*c*t53541*(1.0/3.0);
                double t53549 = b1p*c*t53541*t53543*(1.0/6.0);
                double t53550 = b3p*c*t53410*t53541*(1.0/2.0);
                double t53551 = t53550+t53547+t53548+t53549;
                double t53552 = t53425*t53551*t53545*t53546;
                double t53553 = c0f*t53532*t53544*2.0;
                double t53554 = c0p*t53423*t53425*2.0;
                double t53555 = gamma_aa[index]*t53426*(1.0/2.0);
                double t53556 = 1.0/pow(rho_b[index],8.0/3.0);
                double t53557 = gamma_bb[index]*t53556*(1.0/2.0);
                double t53558 = t53555+t53557;
                double t53559 = gcab*t53558;
                double t53560 = t53559+1.0;
                double t53561 = gcab*gcab;
                double t53562 = t53558*t53558;
                double t53563 = t53561*t53561;
                double t53564 = t53562*t53562;
                double t53565 = t53561*t53562;
                double t53566 = gcab*t53558*2.0;
                double t53567 = t53565+t53566+1.0;
                double t53568 = t53561*t53562*3.0;
                double t53569 = gcab*t53561*t53562*t53558;
                double t53570 = gcab*t53558*3.0;
                double t53571 = t53570+t53568+t53569+1.0;
                double t53572 = t53561*t53562*6.0;
                double t53573 = gcab*t53561*t53562*t53558*4.0;
                double t53574 = t53563*t53564;
                double t53575 = gcab*t53558*4.0;
                double t53576 = t53572+t53573+t53574+t53575+1.0;
                double t53577 = t53553-t53554;
                double t53578 = 1.0/pow(rho_b[index],1.0/3.0);
                double t53579 = c*t53578;
                double t53580 = sqrt(t53579);
                double t53581 = pow(t53579,3.0/2.0);
                double t53582 = 1.0/pow(rho_b[index],2.0/3.0);
                double t53583 = b1p*t53580;
                double t53584 = b3p*t53581;
                double t53585 = b4p*t53412*t53582;
                double t53586 = b2p*c*t53578;
                double t53587 = t53583+t53584+t53585+t53586;
                double t53588 = 1.0/t53587;
                double t53589 = t53414*t53588*(1.0/2.0);
                double t53590 = t53589+1.0;
                double t53591 = log(t53590);
                double t53592 = a1p*c*t53578;
                double t53593 = t53592+1.0;
                double t53594 = c0p*t53591*t53593*2.0;
                double t53595 = t53462*t53490*t53493*t53485*t53496;
                double t53596 = Aa*t53520*t53462*t53490*t53508*t53518*t53527*2.0;
                double t53597 = 1.0/t53560;
                double t53598 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t53599 = 1.0/(t53560*t53560);
                double t53600 = 1.0/t53567;
                double t53601 = 1.0/(t53571*t53571);
                double t53602 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t53603 = 1.0/(t53567*t53567);
                double t53604 = 1.0/t53571;
                double t53605 = 1.0/t53576;
                double t53606 = 1.0/(t53576*t53576);
                double t53607 = gcab*t53426*2.0;
                double t53608 = t53426*t53561*t53558*6.0;
                double t53609 = gcab*t53426*t53561*t53562*6.0;
                double t53610 = t53426*t53562*t53563*t53558*2.0;
                double t53611 = t53610+t53607+t53608+t53609;
                double t53612 = gamma_aa[index]*gcab*t53598*(8.0/3.0);
                double t53613 = gamma_aa[index]*t53561*t53558*t53598*(8.0/3.0);
                double t53614 = t53612+t53613;
                double t53615 = gcab*t53426;
                double t53616 = t53426*t53561*t53558;
                double t53617 = t53615+t53616;
                double t53618 = gamma_aa[index]*gcab*t53598*(1.6E1/3.0);
                double t53619 = gamma_aa[index]*gcab*t53561*t53562*t53598*1.6E1;
                double t53620 = gamma_aa[index]*t53562*t53563*t53558*t53598*(1.6E1/3.0);
                double t53621 = gamma_aa[index]*t53561*t53558*t53598*1.6E1;
                double t53622 = t53620+t53621+t53618+t53619;
                double t53623 = gcab*t53426*(3.0/2.0);
                double t53624 = t53426*t53561*t53558*3.0;
                double t53625 = gcab*t53426*t53561*t53562*(3.0/2.0);
                double t53626 = t53623+t53624+t53625;
                double t53627 = gamma_aa[index]*gcab*t53598*4.0;
                double t53628 = gamma_aa[index]*gcab*t53561*t53562*t53598*4.0;
                double t53629 = gamma_aa[index]*t53561*t53558*t53598*8.0;
                double t53630 = t53627+t53628+t53629;
                double t53631 = gx*gx;
                double t53632 = t53631*t53631;
                double t53633 = gamma_aa[index]*gx*t53426;
                double t53634 = t53633+1.0;
                double t53635 = gamma_aa[index]*gx*t53426*3.0;
                double t53636 = gamma_aa[index]*gx*t53432*t53631*t53427;
                double t53637 = t53431*t53631*t53427*3.0;
                double t53638 = t53635+t53636+t53637+1.0;
                double t53639 = gamma_aa[index]*gx*t53426*4.0;
                double t53640 = gamma_aa[index]*gx*t53432*t53631*t53427*4.0;
                double t53641 = t53431*t53631*t53427*6.0;
                double t53642 = t53430*t53632*t53439;
                double t53643 = t53640+t53641+t53642+t53639+1.0;
                double t53644 = gamma_aa[index]*gx*t53426*2.0;
                double t53645 = t53431*t53631*t53427;
                double t53646 = t53644+t53645+1.0;
                double t53647 = t53530*t53462*t53577;
                double t53648 = t53554+t53647;
                double t53649 = 1.0/t53434;
                double t53650 = 1.0/t53444;
                double t53651 = 1.0/t53447;
                double t53652 = 1.0/t53438;
                double t53653 = 1.0/(t53434*t53434);
                double t53654 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t53655 = 1.0/(t53438*t53438);
                double t53656 = 1.0/(t53447*t53447);
                double t53657 = gcaa*t53426*3.0;
                double t53658 = gamma_aa[index]*t53431*t53428*6.0;
                double t53659 = gcaa*t53432*t53427*t53428*3.0;
                double t53660 = t53657+t53658+t53659;
                double t53661 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t53662 = 1.0/(t53444*t53444);
                double t53663 = gcaa*t53426*4.0;
                double t53664 = gamma_aa[index]*t53431*t53428*1.2E1;
                double t53665 = gcaa*t53432*t53427*t53428*1.2E1;
                double t53666 = gamma_aa[index]*t53430*t53427*t53429*4.0;
                double t53667 = t53663+t53664+t53665+t53666;
                double t53668 = gcaa*t53426*2.0;
                double t53669 = gamma_aa[index]*t53431*t53428*2.0;
                double t53670 = t53668+t53669;
                double t53671 = gamma_aa[index]*gcaa*t53598*(1.6E1/3.0);
                double t53672 = t53602*t53427*t53428*(1.6E1/3.0);
                double t53673 = t53671+t53672;
                double t53674 = gamma_aa[index]*gcaa*t53598*8.0;
                double t53675 = gamma_aa[index]*gcaa*t53427*t53428*t53654*8.0;
                double t53676 = t53602*t53427*t53428*1.6E1;
                double t53677 = t53674+t53675+t53676;
                double t53678 = gamma_aa[index]*gcaa*t53598*(3.2E1/3.0);
                double t53679 = gamma_aa[index]*gcaa*t53427*t53428*t53654*3.2E1;
                double t53680 = t53602*t53427*t53428*3.2E1;
                double t53681 = t53661*t53429*t53439*(3.2E1/3.0);
                double t53682 = t53680+t53681+t53678+t53679;
                double t53683 = 1.0/t53540;
                double t53684 = 1.0/(t53537*t53537);
                double t53685 = b4f*t53412*t53542*(2.0/3.0);
                double t53686 = b2f*c*t53541*(1.0/3.0);
                double t53687 = b1f*c*t53541*t53543*(1.0/6.0);
                double t53688 = b3f*c*t53410*t53541*(1.0/2.0);
                double t53689 = t53685+t53686+t53687+t53688;
                double t53690 = a1f*c*c0f*t53541*t53544*(2.0/3.0);
                double t53691 = a1p*c*c0p*t53423*t53541*(2.0/3.0);
                double t53692 = ccaa1*gcaa*t53426*t53649;
                double t53693 = ccaa4*gamma_aa[index]*t53430*t53650*t53427*t53429*4.0;
                double t53694 = ccaa2*gamma_aa[index]*t53431*t53651*t53428*2.0;
                double t53695 = ccaa3*gcaa*t53432*t53427*t53652*t53428*3.0;
                double t53696 = t53692+t53693+t53694+t53695-ccaa1*gamma_aa[index]*t53431*t53428*t53653-ccaa2*t53431* \
                   t53427*t53670*t53428*t53656-ccaa4*t53430*t53662*t53429*t53439*t53667-ccaa3*gamma_aa[index]*gcaa*t53432* \
                   t53660*t53427*t53428*t53655;
                double t53697 = 1.0/t53634;
                double t53698 = 1.0/t53643;
                double t53699 = 1.0/t53646;
                double t53700 = 1.0/t53638;
                double t53701 = 1.0/(t53634*t53634);
                double t53702 = 1.0/(t53638*t53638);
                double t53703 = 1.0/(t53646*t53646);
                double t53704 = gx*t53426*3.0;
                double t53705 = gamma_aa[index]*t53431*t53631*6.0;
                double t53706 = gx*t53432*t53631*t53427*3.0;
                double t53707 = t53704+t53705+t53706;
                double t53708 = 1.0/(t53643*t53643);
                double t53709 = gx*t53426*4.0;
                double t53710 = gamma_aa[index]*t53431*t53631*1.2E1;
                double t53711 = gx*t53432*t53631*t53427*1.2E1;
                double t53712 = gamma_aa[index]*t53430*t53632*t53427*4.0;
                double t53713 = t53710+t53711+t53712+t53709;
                double t53714 = gx*t53426*2.0;
                double t53715 = gamma_aa[index]*t53431*t53631*2.0;
                double t53716 = t53714+t53715;
                double t53717 = gamma_aa[index]*gx*t53598*(1.6E1/3.0);
                double t53718 = t53602*t53631*t53427*(1.6E1/3.0);
                double t53719 = t53717+t53718;
                double t53720 = gamma_aa[index]*gx*t53598*8.0;
                double t53721 = gamma_aa[index]*gx*t53631*t53427*t53654*8.0;
                double t53722 = t53602*t53631*t53427*1.6E1;
                double t53723 = t53720+t53721+t53722;
                double t53724 = gamma_aa[index]*gx*t53598*(3.2E1/3.0);
                double t53725 = gamma_aa[index]*gx*t53631*t53427*t53654*3.2E1;
                double t53726 = t53602*t53631*t53427*3.2E1;
                double t53727 = t53632*t53661*t53439*(3.2E1/3.0);
                double t53728 = t53724+t53725+t53726+t53727;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t53648+rho_b[index]*(t53594-t53530*t53462*(t53594-c0f*log((t53463* \
                   (1.0/2.0))/(b1f*t53580+b3f*t53581+b2f*c*t53578+b4f*t53412*t53582)+1.0)*(a1f*c*t53578+1.0)*2.0))-t53448* \
                   (t53495+t53595+t53596))*(ccab1*gcab*t53597*t53598*(4.0/3.0)-ccab2*t53603*t53561*t53562*(gcab*t53598* \
                   (8.0/3.0)+gamma_aa[index]*t53602*t53561*(4.0/3.0)+t53561*t53558*t53598*(8.0/3.0))-ccab4*t53606*t53563* \
                   t53564*(gcab*t53598*(1.6E1/3.0)+gamma_aa[index]*t53602*t53561*8.0+t53561*t53558*t53598*1.6E1+gamma_aa[index]* \
                   t53602*t53562*t53563*8.0+gcab*t53561*t53562*t53598*1.6E1+t53562*t53563*t53558*t53598*(1.6E1/3.0)+gamma_aa[index]* \
                   gcab*t53602*t53561*t53558*1.6E1)+ccab2*gamma_aa[index]*t53600*t53602*t53561*(4.0/3.0)-ccab1*gamma_aa[index]* \
                   t53602*t53561*t53599*(4.0/3.0)+ccab2*t53600*t53561*t53558*t53598*(8.0/3.0)-ccab1*t53561*t53558*t53598* \
                   t53599*(4.0/3.0)-ccab2*t53603*t53614*t53426*t53561*t53558+ccab4*t53605*t53562*t53563*t53558*t53598* \
                   (1.6E1/3.0)+ccab4*t53611*t53622*t53563*t53564*1.0/(t53576*t53576*t53576)*2.0+ccab2*t53614*t53561*t53562* \
                   t53617*1.0/(t53567*t53567*t53567)*2.0+ccab4*gamma_aa[index]*t53602*t53605*t53562*t53563*8.0+ccab3* \
                   gcab*t53604*t53561*t53562*t53598*4.0+ccab3*gamma_aa[index]*gcab*t53602*t53604*t53561*t53558*4.0-ccab2* \
                   gamma_aa[index]*t53603*t53561*t53617*t53558*t53598*(8.0/3.0)-ccab3*gcab*t53601*t53630*t53426*t53561* \
                   t53562*(3.0/2.0)-ccab4*t53622*t53426*t53606*t53562*t53563*t53558*2.0-ccab3*gcab*t53601*t53561*t53562* \
                   t53558*(gcab*t53598*4.0+gamma_aa[index]*t53602*t53561*4.0+t53561*t53558*t53598*8.0+gcab*t53561*t53562* \
                   t53598*4.0+gamma_aa[index]*gcab*t53602*t53561*t53558*4.0)+ccab1*gamma_aa[index]*gcab*t53602*1.0/(t53560* \
                   t53560*t53560)*t53561*t53558*(4.0/3.0)+ccab3*gcab*t53630*t53561*t53562*1.0/(t53571*t53571*t53571)* \
                   t53626*t53558*2.0-ccab3*gamma_aa[index]*gcab*t53601*t53561*t53562*t53626*t53598*4.0-ccab4*gamma_aa[index]* \
                   t53611*t53606*t53562*t53563*t53558*t53598*(1.6E1/3.0))-t53696*(t53554+t53530*t53462*(t53553-c0p*t53423* \
                   t53425*2.0))-(-t53554+t53495+t53595+t53596+t53448*(t53506-t53462*t53490*t53493*t53496*(t53506-(t53483* \
                   1.0/(t53477*t53477)*(b2f*c*t53459*(1.0/3.0)+b4f*t53412*t53497*(2.0/3.0)+b1f*c*t53459*t53498*(1.0/6.0) \
                   +b3f*c*t53451*t53459*(1.0/2.0)))/t53480+a1f*c*c0f*t53481*t53459*(2.0/3.0)-a1p*c*c0p*t53484*t53459* \
                   (2.0/3.0))-a1p*c*c0p*t53484*t53459*(2.0/3.0)-t53462*t53507*t53490*t53485*t53496*4.0+t53462*t53525* \
                   t53493*t53485*t53496+t53470*t53462*t53490*t53493*t53485*t53469*4.0-Aa*t53520*t53462*t53490*t53508* \
                   t53518*(t53507*t53496*4.0-t53470*t53493*t53469*4.0)*2.0+Aa*t53520*t53462*t53525*t53508*t53518*t53527* \
                   2.0+(t53520*1.0/(t53514*t53514)*t53462*t53490*t53508*t53527*(b2a*c*t53459*(1.0/3.0)+b4a*t53412*t53497* \
                   (2.0/3.0)+b1a*c*t53459*t53498*(1.0/6.0)+b3a*c*t53451*t53459*(1.0/2.0)))/t53517-Aa*a1a*c*t53462*t53490* \
                   t53508*t53518*t53527*t53459*(2.0/3.0))+rho_a[index]*(-t53552+t53691+t53530*t53462*(t53552+t53690-t53532* \
                   t53683*t53684*t53689-a1p*c*c0p*t53423*t53541*(2.0/3.0)))-t53530*t53462*t53577)*(ccab1*gcab*t53426* \
                   t53597*(1.0/2.0)+ccab2*t53600*t53426*t53561*t53558-ccab2*t53603*t53561*t53562*t53617-ccab4*t53611* \
                   t53606*t53563*t53564-ccab1*t53426*t53561*t53558*t53599*(1.0/2.0)+ccab4*t53605*t53426*t53562*t53563* \
                   t53558*2.0+ccab3*gcab*t53604*t53426*t53561*t53562*(3.0/2.0)-ccab3*gcab*t53601*t53561*t53562*t53626* \
                   t53558)-rho_a[index]*t53648*(ccaa1*gcaa*t53649*t53598*(-8.0/3.0)-ccaa2*gamma_aa[index]*t53602*t53651* \
                   t53428*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t53602*t53428*t53653*8.0+ccaa2*t53602*t53427*t53670*t53428* \
                   t53656*(1.6E1/3.0)+ccaa4*t53661*t53662*t53429*t53439*t53667*(3.2E1/3.0)+ccaa4*t53430*t53662*t53429* \
                   t53439*(gcaa*t53598*(3.2E1/3.0)+gamma_aa[index]*t53602*t53428*6.4E1+gamma_aa[index]*t53427*t53661* \
                   t53429*(1.28E2/3.0)+gcaa*t53427*t53428*t53654*9.6E1)-ccaa1*gcaa*1.0/(t53434*t53434*t53434)*t53427* \
                   t53428*t53654*(1.6E1/3.0)+ccaa2*t53431*t53427*t53428*t53656*(gcaa*t53598*(1.6E1/3.0)+gamma_aa[index]* \
                   t53602*t53428*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t53650*t53427*t53661*t53429*(1.28E2/3.0)+ccaa2*gamma_aa[index]* \
                   t53431*t53428*t53673*t53656*2.0-ccaa3*gcaa*t53427*t53652*t53428*t53654*2.4E1+ccaa4*gamma_aa[index]* \
                   t53430*t53427*t53662*t53429*t53682*4.0+ccaa3*gcaa*t53432*t53427*t53428*t53655*t53677*3.0-ccaa2*t53431* \
                   t53427*t53670*t53428*1.0/(t53447*t53447*t53447)*t53673*2.0-ccaa4*t53430*1.0/(t53444*t53444*t53444) \
                   *t53429*t53439*t53682*t53667*2.0+ccaa3*gamma_aa[index]*gcaa*t53432*t53427*t53428*t53655*(gcaa*t53598* \
                   8.0+gamma_aa[index]*t53602*t53428*3.2E1+gcaa*t53427*t53428*t53654*2.4E1)+ccaa3*gamma_aa[index]*gcaa* \
                   t53660*t53427*t53428*t53654*t53655*8.0-ccaa3*gamma_aa[index]*gcaa*t53432*t53660*t53427*t53428*1.0/ \
                   (t53438*t53438*t53438)*t53677*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t53598*t53697*(-8.0/3.0)+cx1* \
                   gamma_aa[index]*t53602*t53701*t53631*8.0-cx2*gamma_aa[index]*t53602*t53631*t53699*(3.2E1/3.0)+cx2* \
                   t53602*t53631*t53703*t53427*t53716*(1.6E1/3.0)+cx4*t53632*t53713*t53661*t53708*t53439*(3.2E1/3.0)+ \
                   cx4*t53430*t53632*t53708*t53439*(gx*t53598*(3.2E1/3.0)+gamma_aa[index]*t53602*t53631*6.4E1+gamma_aa[index]* \
                   t53632*t53427*t53661*(1.28E2/3.0)+gx*t53631*t53427*t53654*9.6E1)-cx1*gx*t53631*t53427*1.0/(t53634* \
                   t53634*t53634)*t53654*(1.6E1/3.0)+cx2*t53431*t53631*t53703*t53427*(gx*t53598*(1.6E1/3.0)+gamma_aa[index]* \
                   t53602*t53631*(3.2E1/3.0))+cx2*gamma_aa[index]*t53431*t53631*t53703*t53719*2.0-cx4*gamma_aa[index]* \
                   t53632*t53427*t53661*t53698*(1.28E2/3.0)-cx3*gx*t53700*t53631*t53427*t53654*2.4E1+cx4*gamma_aa[index]* \
                   t53430*t53632*t53427*t53708*t53728*4.0+cx3*gx*t53432*t53702*t53631*t53723*t53427*3.0-cx2*t53431*t53631* \
                   t53427*t53716*1.0/(t53646*t53646*t53646)*t53719*2.0-cx4*t53430*t53632*t53713*1.0/(t53643*t53643*t53643) \
                   *t53439*t53728*2.0+cx3*gamma_aa[index]*gx*t53432*t53702*t53631*t53427*(gx*t53598*8.0+gamma_aa[index]* \
                   t53602*t53631*3.2E1+gx*t53631*t53427*t53654*2.4E1)+cx3*gamma_aa[index]*gx*t53702*t53631*t53427*t53707* \
                   t53654*8.0-cx3*gamma_aa[index]*gx*t53432*t53631*t53723*t53427*t53707*1.0/(t53638*t53638*t53638)*2.0) \
                   +rho_a[index]*t53696*(-t53552+t53691+t53530*t53462*(t53552+t53690-t53691-t53532*t53683*t53684*t53689) \
                   )+c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t53426*t53697-cx1*gamma_aa[index]*t53431*t53701*t53631+cx2* \
                   gamma_aa[index]*t53431*t53631*t53699*2.0-cx2*t53431*t53631*t53703*t53427*t53716-cx4*t53430*t53632* \
                   t53713*t53708*t53439+cx4*gamma_aa[index]*t53430*t53632*t53427*t53698*4.0+cx3*gx*t53700*t53432*t53631* \
                   t53427*3.0-cx3*gamma_aa[index]*gx*t53432*t53702*t53631*t53427*t53707)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t55981 = 1.0/pow(rho_a[index],1.0/3.0);
                double t55982 = c*t55981;
                double t55983 = sqrt(t55982);
                double t55984 = pow(t55982,3.0/2.0);
                double t55985 = c*c;
                double t55986 = 1.0/pow(rho_a[index],2.0/3.0);
                double t55987 = 1.0/c0p;
                double t55988 = b1p*t55983;
                double t55989 = b3p*t55984;
                double t55990 = b4p*t55985*t55986;
                double t55991 = b2p*c*t55981;
                double t55992 = t55990+t55991+t55988+t55989;
                double t55993 = 1.0/t55992;
                double t55994 = t55993*t55987*(1.0/2.0);
                double t55995 = t55994+1.0;
                double t55996 = log(t55995);
                double t55997 = a1p*c*t55981;
                double t55998 = t55997+1.0;
                double t55999 = 1.0/pow(rho_a[index],8.0/3.0);
                double t56000 = gamma_aa[index]*gamma_aa[index];
                double t56001 = gcaa*gcaa;
                double t56002 = t56001*t56001;
                double t56003 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t56004 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t56005 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t56006 = gamma_aa[index]*gcaa*t55999;
                double t56007 = t56006+1.0;
                double t56008 = gamma_aa[index]*gcaa*t55999*3.0;
                double t56009 = gamma_aa[index]*gcaa*t56000*t56001*t56005;
                double t56010 = t56000*t56001*t56004*3.0;
                double t56011 = t56010+t56008+t56009+1.0;
                double t56012 = t56000*t56000;
                double t56013 = gamma_aa[index]*gcaa*t55999*4.0;
                double t56014 = gamma_aa[index]*gcaa*t56000*t56001*t56005*4.0;
                double t56015 = t56000*t56001*t56004*6.0;
                double t56016 = t56002*t56003*t56012;
                double t56017 = t56013+t56014+t56015+t56016+1.0;
                double t56018 = gamma_aa[index]*gcaa*t55999*2.0;
                double t56019 = t56000*t56001*t56004;
                double t56020 = t56018+t56019+1.0;
                double t56021 = gx*gx;
                double t56022 = t56021*t56021;
                double t56023 = gamma_aa[index]*gx*t55999;
                double t56024 = t56023+1.0;
                double t56025 = gamma_aa[index]*gx*t55999*3.0;
                double t56026 = gamma_aa[index]*gx*t56000*t56021*t56005;
                double t56027 = t56000*t56021*t56004*3.0;
                double t56028 = t56025+t56026+t56027+1.0;
                double t56029 = gamma_aa[index]*gx*t55999*4.0;
                double t56030 = gamma_aa[index]*gx*t56000*t56021*t56005*4.0;
                double t56031 = t56000*t56021*t56004*6.0;
                double t56032 = t56003*t56012*t56022;
                double t56033 = t56030+t56031+t56032+t56029+1.0;
                double t56034 = gamma_aa[index]*gx*t55999*2.0;
                double t56035 = t56000*t56021*t56004;
                double t56036 = t56034+t56035+1.0;
                double t56037 = pow(2.0,1.0/3.0);
                double t56038 = t56037*2.0;
                double t56039 = t56038-2.0;
                double t56040 = two_13*2.0;
                double t56041 = t56040-2.0;
                double t56042 = 1.0/t56041;
                double t56043 = 1.0/c0f;
                double t56044 = b1f*t55983;
                double t56045 = b3f*t55984;
                double t56046 = b4f*t55985*t55986;
                double t56047 = b2f*c*t55981;
                double t56048 = t56044+t56045+t56046+t56047;
                double t56049 = 1.0/t56048;
                double t56050 = t56043*t56049*(1.0/2.0);
                double t56051 = t56050+1.0;
                double t56052 = log(t56051);
                double t56053 = a1f*c*t55981;
                double t56054 = t56053+1.0;
                double t56055 = c0f*t56052*t56054*2.0;
                double t56056 = c0p*t55996*t55998*2.0;
                double t56057 = 1.0/t56007;
                double t56058 = 1.0/t56017;
                double t56059 = 1.0/t56020;
                double t56060 = 1.0/t56011;
                double t56061 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t56062 = 1.0/(t56007*t56007);
                double t56063 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t56064 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t56065 = 1.0/(t56011*t56011);
                double t56066 = 1.0/(t56020*t56020);
                double t56067 = gcaa*t55999*3.0;
                double t56068 = gamma_aa[index]*t56001*t56004*6.0;
                double t56069 = gcaa*t56000*t56001*t56005*3.0;
                double t56070 = t56067+t56068+t56069;
                double t56071 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t56072 = 1.0/(t56017*t56017);
                double t56073 = gcaa*t55999*4.0;
                double t56074 = gamma_aa[index]*t56001*t56004*1.2E1;
                double t56075 = gcaa*t56000*t56001*t56005*1.2E1;
                double t56076 = gamma_aa[index]*t56000*t56002*t56003*4.0;
                double t56077 = t56073+t56074+t56075+t56076;
                double t56078 = gcaa*t55999*2.0;
                double t56079 = gamma_aa[index]*t56001*t56004*2.0;
                double t56080 = t56078+t56079;
                double t56081 = gamma_aa[index]*gcaa*t56064*(1.6E1/3.0);
                double t56082 = t56000*t56001*t56061*(1.6E1/3.0);
                double t56083 = t56081+t56082;
                double t56084 = gamma_aa[index]*gcaa*t56064*8.0;
                double t56085 = gamma_aa[index]*gcaa*t56000*t56001*t56063*8.0;
                double t56086 = t56000*t56001*t56061*1.6E1;
                double t56087 = t56084+t56085+t56086;
                double t56088 = gamma_aa[index]*gcaa*t56064*(3.2E1/3.0);
                double t56089 = gamma_aa[index]*gcaa*t56000*t56001*t56063*3.2E1;
                double t56090 = t56000*t56001*t56061*3.2E1;
                double t56091 = t56002*t56012*t56071*(3.2E1/3.0);
                double t56092 = t56090+t56091+t56088+t56089;
                double t56093 = 1.0/pow(rho_a[index],4.0/3.0);
                double t56094 = 1.0/pow(rho_a[index],5.0/3.0);
                double t56095 = 1.0/sqrt(t55982);
                double t56096 = 1.0/t55995;
                double t56097 = 1.0/(t55992*t55992);
                double t56098 = b4p*t55985*t56094*(2.0/3.0);
                double t56099 = b2p*c*t56093*(1.0/3.0);
                double t56100 = b1p*c*t56093*t56095*(1.0/6.0);
                double t56101 = b3p*c*t55983*t56093*(1.0/2.0);
                double t56102 = t56100+t56101+t56098+t56099;
                double t56103 = t55998*t56102*t56096*t56097;
                double t56104 = ccaa1*gcaa*t55999*t56057;
                double t56105 = ccaa4*gamma_aa[index]*t56000*t56002*t56003*t56058*4.0;
                double t56106 = ccaa2*gamma_aa[index]*t56001*t56004*t56059*2.0;
                double t56107 = ccaa3*gcaa*t56000*t56001*t56005*t56060*3.0;
                double t56108 = t56104+t56105+t56106+t56107-ccaa1*gamma_aa[index]*t56001*t56004*t56062-ccaa2*t56000* \
                   t56001*t56004*t56080*t56066-ccaa4*t56002*t56003*t56012*t56072*t56077-ccaa3*gamma_aa[index]*gcaa*t56000* \
                   t56001*t56005*t56070*t56065;
                double t56109 = 1.0/t56024;
                double t56110 = 1.0/t56033;
                double t56111 = 1.0/t56036;
                double t56112 = 1.0/t56028;
                double t56113 = 1.0/(t56024*t56024);
                double t56114 = 1.0/(t56028*t56028);
                double t56115 = 1.0/(t56036*t56036);
                double t56116 = gx*t55999*3.0;
                double t56117 = gamma_aa[index]*t56021*t56004*6.0;
                double t56118 = gx*t56000*t56021*t56005*3.0;
                double t56119 = t56116+t56117+t56118;
                double t56120 = 1.0/(t56033*t56033);
                double t56121 = gx*t55999*4.0;
                double t56122 = gamma_aa[index]*t56021*t56004*1.2E1;
                double t56123 = gx*t56000*t56021*t56005*1.2E1;
                double t56124 = gamma_aa[index]*t56000*t56003*t56022*4.0;
                double t56125 = t56121+t56122+t56123+t56124;
                double t56126 = gx*t55999*2.0;
                double t56127 = gamma_aa[index]*t56021*t56004*2.0;
                double t56128 = t56126+t56127;
                double t56129 = gamma_aa[index]*gx*t56064*(1.6E1/3.0);
                double t56130 = t56000*t56021*t56061*(1.6E1/3.0);
                double t56131 = t56130+t56129;
                double t56132 = gamma_aa[index]*gx*t56064*8.0;
                double t56133 = gamma_aa[index]*gx*t56000*t56021*t56063*8.0;
                double t56134 = t56000*t56021*t56061*1.6E1;
                double t56135 = t56132+t56133+t56134;
                double t56136 = gamma_aa[index]*gx*t56064*(3.2E1/3.0);
                double t56137 = gamma_aa[index]*gx*t56000*t56021*t56063*3.2E1;
                double t56138 = t56000*t56021*t56061*3.2E1;
                double t56139 = t56012*t56022*t56071*(3.2E1/3.0);
                double t56140 = t56136+t56137+t56138+t56139;
                v_rho_a_gamma_aa_[index] = -t56108*(t56056+t56042*t56039*(t56055-c0p*t55996*t55998*2.0))+rho_a[index]* \
                   t56108*(-t56103+t56042*t56039*(t56103-(t56054*1.0/(t56048*t56048)*(b2f*c*t56093*(1.0/3.0)+b4f*t55985* \
                   t56094*(2.0/3.0)+b1f*c*t56093*t56095*(1.0/6.0)+b3f*c*t55983*t56093*(1.0/2.0)))/t56051+a1f*c*c0f*t56052* \
                   t56093*(2.0/3.0)-a1p*c*c0p*t55996*t56093*(2.0/3.0))+a1p*c*c0p*t55996*t56093*(2.0/3.0))-rho_a[index]* \
                   (t56056+t56042*t56039*(t56055-t56056))*(ccaa1*gcaa*t56064*t56057*(-8.0/3.0)+ccaa1*gamma_aa[index]* \
                   t56001*t56061*t56062*8.0-ccaa2*gamma_aa[index]*t56001*t56061*t56059*(3.2E1/3.0)+ccaa2*t56000*t56001* \
                   t56061*t56080*t56066*(1.6E1/3.0)+ccaa4*t56002*t56012*t56071*t56072*t56077*(3.2E1/3.0)+ccaa4*t56002* \
                   t56003*t56012*t56072*(gcaa*t56064*(3.2E1/3.0)+gamma_aa[index]*t56001*t56061*6.4E1+gamma_aa[index]* \
                   t56000*t56002*t56071*(1.28E2/3.0)+gcaa*t56000*t56001*t56063*9.6E1)-ccaa1*gcaa*t56000*t56001*1.0/(t56007* \
                   t56007*t56007)*t56063*(1.6E1/3.0)+ccaa2*t56000*t56001*t56004*t56066*(gcaa*t56064*(1.6E1/3.0)+gamma_aa[index]* \
                   t56001*t56061*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t56000*t56002*t56071*t56058*(1.28E2/3.0)+ccaa2*gamma_aa[index]* \
                   t56001*t56004*t56083*t56066*2.0-ccaa3*gcaa*t56000*t56001*t56060*t56063*2.4E1+ccaa4*gamma_aa[index]* \
                   t56000*t56002*t56003*t56072*t56092*4.0+ccaa3*gcaa*t56000*t56001*t56005*t56065*t56087*3.0-ccaa2*t56000* \
                   t56001*1.0/(t56020*t56020*t56020)*t56004*t56080*t56083*2.0-ccaa4*t56002*t56003*t56012*1.0/(t56017* \
                   t56017*t56017)*t56092*t56077*2.0+ccaa3*gamma_aa[index]*gcaa*t56000*t56001*t56005*t56065*(gcaa*t56064* \
                   8.0+gamma_aa[index]*t56001*t56061*3.2E1+gcaa*t56000*t56001*t56063*2.4E1)+ccaa3*gamma_aa[index]*gcaa* \
                   t56000*t56001*t56070*t56063*t56065*8.0-ccaa3*gamma_aa[index]*gcaa*t56000*t56001*1.0/(t56011*t56011* \
                   t56011)*t56005*t56070*t56087*2.0)+c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t56064*t56109*(-8.0/3.0)+cx1* \
                   gamma_aa[index]*t56021*t56113*t56061*8.0-cx2*gamma_aa[index]*t56021*t56111*t56061*(3.2E1/3.0)+cx2* \
                   t56000*t56021*t56061*t56115*t56128*(1.6E1/3.0)+cx4*t56012*t56120*t56022*t56071*t56125*(3.2E1/3.0)+ \
                   cx4*t56003*t56012*t56120*t56022*(gx*t56064*(3.2E1/3.0)+gamma_aa[index]*t56021*t56061*6.4E1+gamma_aa[index]* \
                   t56000*t56022*t56071*(1.28E2/3.0)+gx*t56000*t56021*t56063*9.6E1)-cx1*gx*t56000*t56021*1.0/(t56024* \
                   t56024*t56024)*t56063*(1.6E1/3.0)+cx2*t56000*t56021*t56004*t56115*(gx*t56064*(1.6E1/3.0)+gamma_aa[index]* \
                   t56021*t56061*(3.2E1/3.0))+cx2*gamma_aa[index]*t56021*t56004*t56131*t56115*2.0-cx4*gamma_aa[index]* \
                   t56000*t56110*t56022*t56071*(1.28E2/3.0)-cx3*gx*t56000*t56021*t56112*t56063*2.4E1+cx4*gamma_aa[index]* \
                   t56000*t56003*t56120*t56022*t56140*4.0+cx3*gx*t56000*t56021*t56005*t56114*t56135*3.0-cx2*t56000*t56021* \
                   t56004*t56131*1.0/(t56036*t56036*t56036)*t56128*2.0-cx4*t56003*t56012*t56022*t56140*1.0/(t56033*t56033* \
                   t56033)*t56125*2.0+cx3*gamma_aa[index]*gx*t56000*t56021*t56005*t56114*(gx*t56064*8.0+gamma_aa[index]* \
                   t56021*t56061*3.2E1+gx*t56000*t56021*t56063*2.4E1)+cx3*gamma_aa[index]*gx*t56000*t56021*t56114*t56063* \
                   t56119*8.0-cx3*gamma_aa[index]*gx*t56000*t56021*t56005*t56135*1.0/(t56028*t56028*t56028)*t56119*2.0) \
                   +c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t55999*t56109-cx1*gamma_aa[index]*t56021*t56004*t56113+cx2*gamma_aa[index]* \
                   t56021*t56111*t56004*2.0-cx2*t56000*t56021*t56004*t56115*t56128-cx4*t56003*t56012*t56120*t56022*t56125+ \
                   cx4*gamma_aa[index]*t56000*t56110*t56003*t56022*4.0+cx3*gx*t56000*t56021*t56112*t56005*3.0-cx3*gamma_aa[index]* \
                   gx*t56000*t56021*t56005*t56114*t56119)*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t53731 = rho_a[index]+rho_b[index];
                double t53732 = 1.0/pow(t53731,1.0/3.0);
                double t53733 = c*t53732;
                double t53734 = sqrt(t53733);
                double t53735 = b1p*t53734;
                double t53736 = pow(t53733,3.0/2.0);
                double t53737 = b3p*t53736;
                double t53738 = c*c;
                double t53739 = 1.0/pow(t53731,2.0/3.0);
                double t53740 = b4p*t53738*t53739;
                double t53741 = b2p*c*t53732;
                double t53742 = t53740+t53741+t53735+t53737;
                double t53743 = 1.0/pow(t53731,4.0/3.0);
                double t53744 = 1.0/c0p;
                double t53745 = 1.0/t53742;
                double t53746 = t53744*t53745*(1.0/2.0);
                double t53747 = t53746+1.0;
                double t53748 = a1p*c*t53732;
                double t53749 = t53748+1.0;
                double t53750 = rho_a[index]-rho_b[index];
                double t53751 = t53750*t53750;
                double t53752 = 1.0/t53731;
                double t53753 = t53750*t53752;
                double t53754 = two_13*2.0;
                double t53755 = t53754-2.0;
                double t53756 = 1.0/t53755;
                double t53757 = 1.0/c0f;
                double t53758 = b1f*t53734;
                double t53759 = b3f*t53736;
                double t53760 = b4f*t53738*t53739;
                double t53761 = b2f*c*t53732;
                double t53762 = t53760+t53761+t53758+t53759;
                double t53763 = 1.0/t53762;
                double t53764 = t53763*t53757*(1.0/2.0);
                double t53765 = t53764+1.0;
                double t53766 = log(t53765);
                double t53767 = a1f*c*t53732;
                double t53768 = t53767+1.0;
                double t53769 = log(t53747);
                double t53779 = c0f*t53766*t53768*2.0;
                double t53780 = c0p*t53749*t53769*2.0;
                double t53770 = -t53780+t53779;
                double t53771 = t53753+1.0;
                double t53772 = pow(t53771,4.0/3.0);
                double t53773 = -t53753+1.0;
                double t53774 = pow(t53773,4.0/3.0);
                double t53775 = t53772+t53774-2.0;
                double t53776 = 1.0/(t53731*t53731);
                double t53807 = t53750*t53776;
                double t53777 = t53752-t53807;
                double t53778 = 1.0/(t53731*t53731*t53731*t53731);
                double t53781 = t53751*t53751;
                double t53782 = 1.0/pow(t53731,5.0/3.0);
                double t53783 = 1.0/sqrt(t53733);
                double t53784 = 1.0/t53747;
                double t53785 = 1.0/(t53742*t53742);
                double t53786 = b4p*t53782*t53738*(2.0/3.0);
                double t53787 = b2p*c*t53743*(1.0/3.0);
                double t53788 = b1p*c*t53743*t53783*(1.0/6.0);
                double t53789 = b3p*c*t53734*t53743*(1.0/2.0);
                double t53790 = t53786+t53787+t53788+t53789;
                double t53791 = t53790*t53784*t53749*t53785;
                double t53792 = 1.0/(t53731*t53731*t53731*t53731*t53731);
                double t53793 = 1.0/d2fz0;
                double t53794 = 1.0/Aa;
                double t53795 = b1a*t53734;
                double t53796 = b3a*t53736;
                double t53797 = b4a*t53738*t53739;
                double t53798 = b2a*c*t53732;
                double t53799 = t53795+t53796+t53797+t53798;
                double t53800 = 1.0/t53799;
                double t53801 = t53800*t53794*(1.0/2.0);
                double t53802 = t53801+1.0;
                double t53803 = log(t53802);
                double t53804 = a1a*c*t53732;
                double t53805 = t53804+1.0;
                double t53806 = pow(t53771,1.0/3.0);
                double t53808 = t53806*t53777*(4.0/3.0);
                double t53809 = pow(t53773,1.0/3.0);
                double t53810 = t53808-t53809*t53777*(4.0/3.0);
                double t53811 = t53781*t53778;
                double t53812 = t53811-1.0;
                double t53813 = 1.0/pow(rho_a[index],1.0/3.0);
                double t53814 = c*t53813;
                double t53815 = sqrt(t53814);
                double t53816 = b1f*t53815;
                double t53817 = pow(t53814,3.0/2.0);
                double t53818 = b3f*t53817;
                double t53819 = 1.0/pow(rho_a[index],2.0/3.0);
                double t53820 = b4f*t53738*t53819;
                double t53821 = b2f*c*t53813;
                double t53822 = t53820+t53821+t53816+t53818;
                double t53823 = 1.0/pow(rho_a[index],4.0/3.0);
                double t53824 = b1p*t53815;
                double t53825 = b3p*t53817;
                double t53826 = b4p*t53738*t53819;
                double t53827 = b2p*c*t53813;
                double t53828 = t53824+t53825+t53826+t53827;
                double t53829 = 1.0/pow(rho_a[index],5.0/3.0);
                double t53830 = 1.0/sqrt(t53814);
                double t53831 = 1.0/t53822;
                double t53832 = t53831*t53757*(1.0/2.0);
                double t53833 = t53832+1.0;
                double t53834 = 1.0/t53828;
                double t53835 = t53744*t53834*(1.0/2.0);
                double t53836 = t53835+1.0;
                double t53837 = a1p*c*t53813;
                double t53838 = t53837+1.0;
                double t53839 = 1.0/t53836;
                double t53840 = 1.0/(t53828*t53828);
                double t53841 = b4p*t53738*t53829*(2.0/3.0);
                double t53842 = b2p*c*t53823*(1.0/3.0);
                double t53843 = b1p*c*t53830*t53823*(1.0/6.0);
                double t53844 = b3p*c*t53823*t53815*(1.0/2.0);
                double t53845 = t53841+t53842+t53843+t53844;
                double t53846 = t53840*t53845*t53838*t53839;
                double t53847 = log(t53836);
                double t53848 = pow(2.0,1.0/3.0);
                double t53849 = t53848*2.0;
                double t53850 = t53849-2.0;
                double t53851 = log(t53833);
                double t53852 = a1f*c*t53813;
                double t53853 = t53852+1.0;
                double t53854 = 1.0/pow(rho_b[index],8.0/3.0);
                double t53855 = 1.0/pow(rho_a[index],8.0/3.0);
                double t53856 = gamma_aa[index]*t53855*(1.0/2.0);
                double t53857 = gamma_bb[index]*t53854*(1.0/2.0);
                double t53858 = t53856+t53857;
                double t53859 = gcab*t53858;
                double t53860 = t53859+1.0;
                double t53861 = gcab*gcab;
                double t53862 = t53858*t53858;
                double t53863 = t53861*t53861;
                double t53864 = t53862*t53862;
                double t53865 = t53861*t53862;
                double t53866 = gcab*t53858*2.0;
                double t53867 = t53865+t53866+1.0;
                double t53868 = t53861*t53862*3.0;
                double t53869 = gcab*t53861*t53862*t53858;
                double t53870 = gcab*t53858*3.0;
                double t53871 = t53870+t53868+t53869+1.0;
                double t53872 = t53861*t53862*6.0;
                double t53873 = gcab*t53861*t53862*t53858*4.0;
                double t53874 = t53863*t53864;
                double t53875 = gcab*t53858*4.0;
                double t53876 = t53872+t53873+t53874+t53875+1.0;
                double t53877 = c0f*t53851*t53853*2.0;
                double t53879 = c0p*t53838*t53847*2.0;
                double t53878 = t53877-t53879;
                double t53880 = 1.0/pow(rho_b[index],1.0/3.0);
                double t53881 = c*t53880;
                double t53882 = sqrt(t53881);
                double t53883 = pow(t53881,3.0/2.0);
                double t53884 = 1.0/pow(rho_b[index],2.0/3.0);
                double t53885 = b1p*t53882;
                double t53886 = b3p*t53883;
                double t53887 = b4p*t53738*t53884;
                double t53888 = b2p*c*t53880;
                double t53889 = t53885+t53886+t53887+t53888;
                double t53890 = 1.0/t53889;
                double t53891 = t53744*t53890*(1.0/2.0);
                double t53892 = t53891+1.0;
                double t53893 = log(t53892);
                double t53894 = a1p*c*t53880;
                double t53895 = t53894+1.0;
                double t53896 = c0p*t53893*t53895*2.0;
                double t53897 = t53770*t53781*t53756*t53775*t53778;
                double t53898 = Aa*t53803*t53812*t53805*t53756*t53775*t53793*2.0;
                double t53899 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t53900 = 1.0/(t53871*t53871);
                double t53901 = 1.0/(t53876*t53876);
                double t53902 = gcab*t53854*2.0;
                double t53903 = t53861*t53854*t53858*6.0;
                double t53904 = gcab*t53861*t53862*t53854*6.0;
                double t53905 = t53862*t53854*t53863*t53858*2.0;
                double t53906 = t53902+t53903+t53904+t53905;
                double t53907 = 1.0/(t53867*t53867);
                double t53908 = gamma_aa[index]*gcab*t53899*(8.0/3.0);
                double t53909 = gamma_aa[index]*t53861*t53858*t53899*(8.0/3.0);
                double t53910 = t53908+t53909;
                double t53911 = gcab*t53854;
                double t53912 = t53861*t53854*t53858;
                double t53913 = t53911+t53912;
                double t53914 = gamma_aa[index]*gcab*t53899*(1.6E1/3.0);
                double t53915 = gamma_aa[index]*gcab*t53861*t53862*t53899*1.6E1;
                double t53916 = gamma_aa[index]*t53862*t53863*t53858*t53899*(1.6E1/3.0);
                double t53917 = gamma_aa[index]*t53861*t53858*t53899*1.6E1;
                double t53918 = t53914+t53915+t53916+t53917;
                double t53919 = 1.0/(t53860*t53860);
                double t53920 = 1.0/t53867;
                double t53921 = gcab*t53854*(3.0/2.0);
                double t53922 = t53861*t53854*t53858*3.0;
                double t53923 = gcab*t53861*t53862*t53854*(3.0/2.0);
                double t53924 = t53921+t53922+t53923;
                double t53925 = gamma_aa[index]*gcab*t53899*4.0;
                double t53926 = gamma_aa[index]*gcab*t53861*t53862*t53899*4.0;
                double t53927 = gamma_aa[index]*t53861*t53858*t53899*8.0;
                double t53928 = t53925+t53926+t53927;
                double t53929 = 1.0/t53871;
                double t53930 = 1.0/t53876;
                v_rho_a_gamma_bb_[index] = -(t53780+t53897+t53898+t53731*(t53791-t53781*t53756*t53775*t53778*(t53791- \
                   (1.0/(t53762*t53762)*t53768*(b2f*c*t53743*(1.0/3.0)+b4f*t53782*t53738*(2.0/3.0)+b1f*c*t53743*t53783* \
                   (1.0/6.0)+b3f*c*t53734*t53743*(1.0/2.0)))/t53765+a1f*c*c0f*t53743*t53766*(2.0/3.0)-a1p*c*c0p*t53743* \
                   t53769*(2.0/3.0))-a1p*c*c0p*t53743*t53769*(2.0/3.0)+t53810*t53770*t53781*t53756*t53778-t53770*t53781* \
                   t53756*t53792*t53775*4.0+t53750*t53751*t53770*t53756*t53775*t53778*4.0-Aa*t53803*t53805*t53756*t53775* \
                   t53793*(t53781*t53792*4.0-t53750*t53751*t53778*4.0)*2.0+Aa*t53810*t53803*t53812*t53805*t53756*t53793* \
                   2.0+(t53812*t53805*t53756*t53775*t53793*1.0/(t53799*t53799)*(b2a*c*t53743*(1.0/3.0)+b4a*t53782*t53738* \
                   (2.0/3.0)+b1a*c*t53743*t53783*(1.0/6.0)+b3a*c*t53734*t53743*(1.0/2.0)))/t53802-Aa*a1a*c*t53803*t53812* \
                   t53743*t53756*t53775*t53793*(2.0/3.0))+rho_a[index]*(-t53846+t53850*t53756*(t53846-(1.0/(t53822*t53822) \
                   *t53853*(b2f*c*t53823*(1.0/3.0)+b4f*t53738*t53829*(2.0/3.0)+b1f*c*t53830*t53823*(1.0/6.0)+b3f*c*t53823* \
                   t53815*(1.0/2.0)))/t53833+a1f*c*c0f*t53823*t53851*(2.0/3.0)-a1p*c*c0p*t53823*t53847*(2.0/3.0))+a1p* \
                   c*c0p*t53823*t53847*(2.0/3.0))-c0p*t53838*t53847*2.0-t53850*t53756*t53878)*((ccab1*gcab*t53854*(1.0/ \
                   2.0))/t53860-ccab2*t53913*t53861*t53862*t53907-ccab4*t53901*t53906*t53863*t53864+ccab2*t53920*t53861* \
                   t53854*t53858-ccab1*t53861*t53854*t53919*t53858*(1.0/2.0)+ccab4*t53930*t53862*t53854*t53863*t53858* \
                   2.0+ccab3*gcab*t53861*t53862*t53854*t53929*(3.0/2.0)-ccab3*gcab*t53900*t53861*t53924*t53862*t53858) \
                   +(rho_a[index]*(t53879+t53850*t53756*t53878)+rho_b[index]*(t53896-t53850*t53756*(t53896-c0f*log((t53757* \
                   (1.0/2.0))/(b1f*t53882+b3f*t53883+b2f*c*t53880+b4f*t53738*t53884)+1.0)*(a1f*c*t53880+1.0)*2.0))-t53731* \
                   (t53780+t53897+t53898))*(ccab4*t53901*t53863*t53864*(gamma_aa[index]*t53861*t53854*t53899*8.0+gamma_aa[index]* \
                   t53862*t53854*t53863*t53899*8.0+gamma_aa[index]*gcab*t53861*t53854*t53858*t53899*1.6E1)+ccab2*t53910* \
                   t53861*t53907*t53854*t53858-ccab2*t53910*t53913*t53861*t53862*1.0/(t53867*t53867*t53867)*2.0-ccab4* \
                   t53906*t53863*t53864*t53918*1.0/(t53876*t53876*t53876)*2.0-ccab2*gamma_aa[index]*t53920*t53861*t53854* \
                   t53899*(4.0/3.0)+ccab1*gamma_aa[index]*t53861*t53854*t53919*t53899*(4.0/3.0)-ccab4*gamma_aa[index]* \
                   t53930*t53862*t53854*t53863*t53899*8.0+ccab2*gamma_aa[index]*t53913*t53861*t53907*t53858*t53899*(8.0/ \
                   3.0)+ccab2*gamma_aa[index]*t53862*t53907*t53854*t53863*t53899*(4.0/3.0)+ccab3*gcab*t53900*t53861*t53862* \
                   t53854*t53928*(3.0/2.0)+ccab4*t53901*t53862*t53854*t53863*t53918*t53858*2.0+ccab3*gcab*t53900*t53861* \
                   t53862*t53858*(gamma_aa[index]*t53861*t53854*t53899*4.0+gamma_aa[index]*gcab*t53861*t53854*t53858* \
                   t53899*4.0)-ccab1*gamma_aa[index]*gcab*1.0/(t53860*t53860*t53860)*t53861*t53854*t53858*t53899*(4.0/ \
                   3.0)-ccab3*gcab*t53861*t53924*t53862*1.0/(t53871*t53871*t53871)*t53928*t53858*2.0+ccab3*gamma_aa[index]* \
                   gcab*t53900*t53861*t53924*t53862*t53899*4.0-ccab3*gamma_aa[index]*gcab*t53861*t53854*t53929*t53858* \
                   t53899*4.0+ccab4*gamma_aa[index]*t53901*t53906*t53862*t53863*t53858*t53899*(1.6E1/3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t53932 = rho_a[index]+rho_b[index];
                double t53933 = 1.0/pow(t53932,1.0/3.0);
                double t53934 = c*t53933;
                double t53935 = sqrt(t53934);
                double t53936 = b1p*t53935;
                double t53937 = pow(t53934,3.0/2.0);
                double t53938 = b3p*t53937;
                double t53939 = c*c;
                double t53940 = 1.0/pow(t53932,2.0/3.0);
                double t53941 = b4p*t53940*t53939;
                double t53942 = b2p*c*t53933;
                double t53943 = t53941+t53942+t53936+t53938;
                double t53944 = 1.0/pow(t53932,4.0/3.0);
                double t53945 = 1.0/c0p;
                double t53946 = 1.0/t53943;
                double t53947 = t53945*t53946*(1.0/2.0);
                double t53948 = t53947+1.0;
                double t53949 = a1p*c*t53933;
                double t53950 = t53949+1.0;
                double t53951 = rho_a[index]-rho_b[index];
                double t53952 = t53951*t53951;
                double t53953 = 1.0/t53932;
                double t53954 = t53951*t53953;
                double t53955 = two_13*2.0;
                double t53956 = t53955-2.0;
                double t53957 = 1.0/t53956;
                double t53958 = 1.0/c0f;
                double t53959 = b1f*t53935;
                double t53960 = b3f*t53937;
                double t53961 = b4f*t53940*t53939;
                double t53962 = b2f*c*t53933;
                double t53963 = t53960+t53961+t53962+t53959;
                double t53964 = 1.0/t53963;
                double t53965 = t53964*t53958*(1.0/2.0);
                double t53966 = t53965+1.0;
                double t53967 = log(t53966);
                double t53968 = a1f*c*t53933;
                double t53969 = t53968+1.0;
                double t53970 = log(t53948);
                double t53981 = c0f*t53967*t53969*2.0;
                double t53982 = c0p*t53950*t53970*2.0;
                double t53971 = t53981-t53982;
                double t53972 = t53954+1.0;
                double t53973 = pow(t53972,4.0/3.0);
                double t53974 = -t53954+1.0;
                double t53975 = pow(t53974,4.0/3.0);
                double t53976 = t53973+t53975-2.0;
                double t53977 = 1.0/(t53932*t53932);
                double t53978 = t53951*t53977;
                double t53979 = t53953+t53978;
                double t53980 = 1.0/(t53932*t53932*t53932*t53932);
                double t53983 = t53952*t53952;
                double t53984 = 1.0/pow(t53932,5.0/3.0);
                double t53985 = 1.0/sqrt(t53934);
                double t53986 = 1.0/t53948;
                double t53987 = 1.0/(t53943*t53943);
                double t53988 = b4p*t53939*t53984*(2.0/3.0);
                double t53989 = b2p*c*t53944*(1.0/3.0);
                double t53990 = b1p*c*t53944*t53985*(1.0/6.0);
                double t53991 = b3p*c*t53935*t53944*(1.0/2.0);
                double t53992 = t53990+t53991+t53988+t53989;
                double t53993 = 1.0/(t53932*t53932*t53932*t53932*t53932);
                double t53994 = 1.0/d2fz0;
                double t53995 = 1.0/Aa;
                double t53996 = b1a*t53935;
                double t53997 = b3a*t53937;
                double t53998 = b4a*t53940*t53939;
                double t53999 = b2a*c*t53933;
                double t54000 = t53996+t53997+t53998+t53999;
                double t54001 = 1.0/t54000;
                double t54002 = t53995*t54001*(1.0/2.0);
                double t54003 = t54002+1.0;
                double t54004 = log(t54003);
                double t54005 = a1a*c*t53933;
                double t54006 = t54005+1.0;
                double t54007 = pow(t53972,1.0/3.0);
                double t54008 = t53979*t54007*(4.0/3.0);
                double t54009 = pow(t53974,1.0/3.0);
                double t54010 = t54008-t53979*t54009*(4.0/3.0);
                double t54011 = t53980*t53983;
                double t54012 = t54011-1.0;
                double t54013 = 1.0/pow(rho_b[index],1.0/3.0);
                double t54014 = c*t54013;
                double t54015 = sqrt(t54014);
                double t54016 = b1f*t54015;
                double t54017 = pow(t54014,3.0/2.0);
                double t54018 = b3f*t54017;
                double t54019 = 1.0/pow(rho_b[index],2.0/3.0);
                double t54020 = b4f*t53939*t54019;
                double t54021 = b2f*c*t54013;
                double t54022 = t54020+t54021+t54016+t54018;
                double t54023 = 1.0/pow(rho_b[index],4.0/3.0);
                double t54024 = b1p*t54015;
                double t54025 = b3p*t54017;
                double t54026 = b4p*t53939*t54019;
                double t54027 = b2p*c*t54013;
                double t54028 = t54024+t54025+t54026+t54027;
                double t54029 = 1.0/pow(rho_b[index],5.0/3.0);
                double t54030 = 1.0/sqrt(t54014);
                double t54031 = 1.0/t54022;
                double t54032 = t53958*t54031*(1.0/2.0);
                double t54033 = t54032+1.0;
                double t54034 = 1.0/t54028;
                double t54035 = t53945*t54034*(1.0/2.0);
                double t54036 = t54035+1.0;
                double t54037 = a1p*c*t54013;
                double t54038 = t54037+1.0;
                double t54039 = 1.0/t54036;
                double t54040 = 1.0/(t54028*t54028);
                double t54041 = b4p*t53939*t54029*(2.0/3.0);
                double t54042 = b2p*c*t54023*(1.0/3.0);
                double t54043 = b1p*c*t54030*t54023*(1.0/6.0);
                double t54044 = b3p*c*t54023*t54015*(1.0/2.0);
                double t54045 = t54041+t54042+t54043+t54044;
                double t54046 = t54040*t54045*t54038*t54039;
                double t54047 = log(t54036);
                double t54048 = pow(2.0,1.0/3.0);
                double t54049 = t54048*2.0;
                double t54050 = t54049-2.0;
                double t54051 = log(t54033);
                double t54052 = a1f*c*t54013;
                double t54053 = t54052+1.0;
                double t54054 = 1.0/pow(rho_a[index],8.0/3.0);
                double t54055 = gamma_aa[index]*t54054*(1.0/2.0);
                double t54056 = 1.0/pow(rho_b[index],8.0/3.0);
                double t54057 = gamma_bb[index]*t54056*(1.0/2.0);
                double t54058 = t54055+t54057;
                double t54059 = gcab*t54058;
                double t54060 = t54059+1.0;
                double t54061 = gcab*gcab;
                double t54062 = t54058*t54058;
                double t54063 = t54061*t54061;
                double t54064 = t54062*t54062;
                double t54065 = t54061*t54062;
                double t54066 = gcab*t54058*2.0;
                double t54067 = t54065+t54066+1.0;
                double t54068 = t54061*t54062*3.0;
                double t54069 = gcab*t54061*t54062*t54058;
                double t54070 = gcab*t54058*3.0;
                double t54071 = t54070+t54068+t54069+1.0;
                double t54072 = t54061*t54062*6.0;
                double t54073 = gcab*t54061*t54062*t54058*4.0;
                double t54074 = t54063*t54064;
                double t54075 = gcab*t54058*4.0;
                double t54076 = t54072+t54073+t54074+t54075+1.0;
                double t54077 = a1p*c*c0p*t53970*t53944*(2.0/3.0);
                double t54078 = 1.0/pow(rho_a[index],1.0/3.0);
                double t54079 = c*t54078;
                double t54080 = sqrt(t54079);
                double t54081 = pow(t54079,3.0/2.0);
                double t54082 = 1.0/pow(rho_a[index],2.0/3.0);
                double t54083 = b1p*t54080;
                double t54084 = b3p*t54081;
                double t54085 = b4p*t53939*t54082;
                double t54086 = b2p*c*t54078;
                double t54087 = t54083+t54084+t54085+t54086;
                double t54088 = 1.0/t54087;
                double t54089 = t53945*t54088*(1.0/2.0);
                double t54090 = t54089+1.0;
                double t54091 = log(t54090);
                double t54092 = a1p*c*t54078;
                double t54093 = t54092+1.0;
                double t54094 = c0p*t54091*t54093*2.0;
                double t54095 = c0f*t54051*t54053*2.0;
                double t54097 = c0p*t54038*t54047*2.0;
                double t54096 = t54095-t54097;
                double t54098 = t53971*t53980*t53983*t53957*t53976;
                double t54099 = Aa*t53957*t53976*t53994*t54012*t54004*t54006*2.0;
                double t54100 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t54101 = 1.0/(t54071*t54071);
                double t54102 = 1.0/(t54076*t54076);
                double t54103 = gcab*t54054*2.0;
                double t54104 = t54061*t54054*t54058*6.0;
                double t54105 = gcab*t54061*t54062*t54054*6.0;
                double t54106 = t54062*t54054*t54063*t54058*2.0;
                double t54107 = t54103+t54104+t54105+t54106;
                double t54108 = 1.0/(t54067*t54067);
                double t54109 = gamma_bb[index]*gcab*t54100*(8.0/3.0);
                double t54110 = gamma_bb[index]*t54100*t54061*t54058*(8.0/3.0);
                double t54111 = t54110+t54109;
                double t54112 = gcab*t54054;
                double t54113 = t54061*t54054*t54058;
                double t54114 = t54112+t54113;
                double t54115 = gamma_bb[index]*gcab*t54100*(1.6E1/3.0);
                double t54116 = gamma_bb[index]*gcab*t54100*t54061*t54062*1.6E1;
                double t54117 = gamma_bb[index]*t54100*t54062*t54063*t54058*(1.6E1/3.0);
                double t54118 = gamma_bb[index]*t54100*t54061*t54058*1.6E1;
                double t54119 = t54115+t54116+t54117+t54118;
                double t54120 = 1.0/(t54060*t54060);
                double t54121 = 1.0/t54067;
                double t54122 = gcab*t54054*(3.0/2.0);
                double t54123 = t54061*t54054*t54058*3.0;
                double t54124 = gcab*t54061*t54062*t54054*(3.0/2.0);
                double t54125 = t54122+t54123+t54124;
                double t54126 = gamma_bb[index]*gcab*t54100*4.0;
                double t54127 = gamma_bb[index]*gcab*t54100*t54061*t54062*4.0;
                double t54128 = gamma_bb[index]*t54100*t54061*t54058*8.0;
                double t54129 = t54126+t54127+t54128;
                double t54130 = 1.0/t54071;
                double t54131 = 1.0/t54076;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t54097+t53957*t54050*t54096)+rho_a[index]*(t54094-t53957* \
                   t54050*(t54094-c0f*log((t53958*(1.0/2.0))/(b1f*t54080+b3f*t54081+b2f*c*t54078+b4f*t53939*t54082)+1.0) \
                   *(a1f*c*t54078+1.0)*2.0))-t53932*(t53982+t54098+t54099))*(ccab4*t54102*t54063*t54064*(gamma_bb[index]* \
                   t54100*t54061*t54054*8.0+gamma_bb[index]*t54100*t54062*t54054*t54063*8.0+gamma_bb[index]*gcab*t54100* \
                   t54061*t54054*t54058*1.6E1)+ccab2*t54111*t54061*t54054*t54108*t54058-ccab2*t54111*t54114*t54061*t54062* \
                   1.0/(t54067*t54067*t54067)*2.0-ccab4*t54107*t54063*t54064*t54119*1.0/(t54076*t54076*t54076)*2.0+ccab1* \
                   gamma_bb[index]*t54100*t54120*t54061*t54054*(4.0/3.0)-ccab2*gamma_bb[index]*t54100*t54121*t54061*t54054* \
                   (4.0/3.0)-ccab4*gamma_bb[index]*t54100*t54131*t54062*t54054*t54063*8.0+ccab2*gamma_bb[index]*t54100* \
                   t54114*t54061*t54108*t54058*(8.0/3.0)+ccab2*gamma_bb[index]*t54100*t54062*t54054*t54063*t54108*(4.0/ \
                   3.0)+ccab3*gcab*t54101*t54061*t54062*t54054*t54129*(3.0/2.0)+ccab4*t54102*t54062*t54054*t54063*t54119* \
                   t54058*2.0+ccab3*gcab*t54101*t54061*t54062*t54058*(gamma_bb[index]*t54100*t54061*t54054*4.0+gamma_bb[index]* \
                   gcab*t54100*t54061*t54054*t54058*4.0)-ccab1*gamma_bb[index]*gcab*t54100*1.0/(t54060*t54060*t54060) \
                   *t54061*t54054*t54058*(4.0/3.0)-ccab3*gcab*t54061*t54062*1.0/(t54071*t54071*t54071)*t54125*t54129* \
                   t54058*2.0+ccab3*gamma_bb[index]*gcab*t54100*t54101*t54061*t54062*t54125*4.0-ccab3*gamma_bb[index]* \
                   gcab*t54100*t54130*t54061*t54054*t54058*4.0+ccab4*gamma_bb[index]*t54100*t54102*t54062*t54107*t54063* \
                   t54058*(1.6E1/3.0))-(t53982+t54098+t54099+rho_b[index]*(-t54046+t53957*t54050*(t54046-(1.0/(t54022* \
                   t54022)*t54053*(b2f*c*t54023*(1.0/3.0)+b4f*t53939*t54029*(2.0/3.0)+b1f*c*t54030*t54023*(1.0/6.0)+b3f* \
                   c*t54023*t54015*(1.0/2.0)))/t54033+a1f*c*c0f*t54023*t54051*(2.0/3.0)-a1p*c*c0p*t54023*t54047*(2.0/ \
                   3.0))+a1p*c*c0p*t54023*t54047*(2.0/3.0))-t53932*(t54077-t53950*t53992*t53986*t53987+t53971*t53983* \
                   t53957*t53993*t53976*4.0+t53971*t53980*t53983*t53957*t54010-t53980*t53983*t53957*t53976*(t54077-t53950* \
                   t53992*t53986*t53987+(1.0/(t53963*t53963)*t53969*(b2f*c*t53944*(1.0/3.0)+b4f*t53939*t53984*(2.0/3.0) \
                   +b1f*c*t53944*t53985*(1.0/6.0)+b3f*c*t53935*t53944*(1.0/2.0)))/t53966-a1f*c*c0f*t53944*t53967*(2.0/ \
                   3.0))+t53951*t53952*t53971*t53980*t53957*t53976*4.0+Aa*t53957*t53976*t53994*t54004*t54006*(t53983* \
                   t53993*4.0+t53951*t53952*t53980*4.0)*2.0+Aa*t53957*t53994*t54010*t54012*t54004*t54006*2.0-(t53957* \
                   t53976*t53994*1.0/(t54000*t54000)*t54012*t54006*(b2a*c*t53944*(1.0/3.0)+b4a*t53939*t53984*(2.0/3.0) \
                   +b1a*c*t53944*t53985*(1.0/6.0)+b3a*c*t53935*t53944*(1.0/2.0)))/t54003+Aa*a1a*c*t53944*t53957*t53976* \
                   t53994*t54012*t54004*(2.0/3.0))-c0p*t54038*t54047*2.0-t53957*t54050*t54096)*((ccab1*gcab*t54054*(1.0/ \
                   2.0))/t54060-ccab2*t54114*t54061*t54062*t54108-ccab1*t54120*t54061*t54054*t54058*(1.0/2.0)-ccab4*t54102* \
                   t54107*t54063*t54064+ccab2*t54121*t54061*t54054*t54058+ccab4*t54131*t54062*t54054*t54063*t54058*2.0+ \
                   ccab3*gcab*t54130*t54061*t54062*t54054*(3.0/2.0)-ccab3*gcab*t54101*t54061*t54062*t54125*t54058);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t54134 = 1.0/pow(rho_b[index],1.0/3.0);
                double t54135 = c*t54134;
                double t54136 = sqrt(t54135);
                double t54137 = pow(t54135,3.0/2.0);
                double t54138 = c*c;
                double t54139 = 1.0/pow(rho_b[index],2.0/3.0);
                double t54140 = 1.0/c0p;
                double t54141 = b1p*t54136;
                double t54142 = b3p*t54137;
                double t54143 = b4p*t54138*t54139;
                double t54144 = b2p*c*t54134;
                double t54145 = t54141+t54142+t54143+t54144;
                double t54146 = 1.0/t54145;
                double t54147 = t54140*t54146*(1.0/2.0);
                double t54148 = t54147+1.0;
                double t54149 = log(t54148);
                double t54150 = a1p*c*t54134;
                double t54151 = t54150+1.0;
                double t54152 = 1.0/pow(rho_b[index],8.0/3.0);
                double t54153 = gamma_bb[index]*gamma_bb[index];
                double t54154 = gcaa*gcaa;
                double t54155 = t54154*t54154;
                double t54156 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t54157 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t54158 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t54159 = gamma_bb[index]*gcaa*t54152;
                double t54160 = t54159+1.0;
                double t54161 = gamma_bb[index]*gcaa*t54152*3.0;
                double t54162 = gamma_bb[index]*gcaa*t54153*t54154*t54158;
                double t54163 = t54153*t54154*t54157*3.0;
                double t54164 = t54161+t54162+t54163+1.0;
                double t54165 = t54153*t54153;
                double t54166 = gamma_bb[index]*gcaa*t54152*4.0;
                double t54167 = gamma_bb[index]*gcaa*t54153*t54154*t54158*4.0;
                double t54168 = t54153*t54154*t54157*6.0;
                double t54169 = t54155*t54156*t54165;
                double t54170 = t54166+t54167+t54168+t54169+1.0;
                double t54171 = gamma_bb[index]*gcaa*t54152*2.0;
                double t54172 = t54153*t54154*t54157;
                double t54173 = t54171+t54172+1.0;
                double t54174 = rho_a[index]+rho_b[index];
                double t54175 = 1.0/pow(t54174,1.0/3.0);
                double t54176 = c*t54175;
                double t54177 = sqrt(t54176);
                double t54178 = b1p*t54177;
                double t54179 = pow(t54176,3.0/2.0);
                double t54180 = b3p*t54179;
                double t54181 = 1.0/pow(t54174,2.0/3.0);
                double t54182 = b4p*t54181*t54138;
                double t54183 = b2p*c*t54175;
                double t54184 = t54180+t54182+t54183+t54178;
                double t54185 = 1.0/pow(t54174,4.0/3.0);
                double t54186 = two_13*2.0;
                double t54187 = t54186-2.0;
                double t54188 = 1.0/t54187;
                double t54189 = 1.0/c0f;
                double t54190 = 1.0/t54184;
                double t54191 = t54140*t54190*(1.0/2.0);
                double t54192 = t54191+1.0;
                double t54193 = a1p*c*t54175;
                double t54194 = t54193+1.0;
                double t54195 = rho_a[index]-rho_b[index];
                double t54196 = t54195*t54195;
                double t54197 = 1.0/t54174;
                double t54198 = t54195*t54197;
                double t54199 = b1f*t54177;
                double t54200 = b3f*t54179;
                double t54201 = b4f*t54181*t54138;
                double t54202 = b2f*c*t54175;
                double t54203 = t54200+t54201+t54202+t54199;
                double t54204 = 1.0/t54203;
                double t54205 = t54204*t54189*(1.0/2.0);
                double t54206 = t54205+1.0;
                double t54207 = log(t54206);
                double t54208 = a1f*c*t54175;
                double t54209 = t54208+1.0;
                double t54210 = log(t54192);
                double t54221 = c0f*t54207*t54209*2.0;
                double t54222 = c0p*t54210*t54194*2.0;
                double t54211 = t54221-t54222;
                double t54212 = t54198+1.0;
                double t54213 = pow(t54212,4.0/3.0);
                double t54214 = -t54198+1.0;
                double t54215 = pow(t54214,4.0/3.0);
                double t54216 = t54213+t54215-2.0;
                double t54217 = 1.0/(t54174*t54174);
                double t54218 = t54217*t54195;
                double t54219 = t54218+t54197;
                double t54220 = 1.0/(t54174*t54174*t54174*t54174);
                double t54223 = t54196*t54196;
                double t54224 = 1.0/pow(t54174,5.0/3.0);
                double t54225 = 1.0/sqrt(t54176);
                double t54226 = 1.0/t54192;
                double t54227 = 1.0/(t54184*t54184);
                double t54228 = b4p*t54224*t54138*(2.0/3.0);
                double t54229 = b2p*c*t54185*(1.0/3.0);
                double t54230 = b1p*c*t54225*t54185*(1.0/6.0);
                double t54231 = b3p*c*t54185*t54177*(1.0/2.0);
                double t54232 = t54230+t54231+t54228+t54229;
                double t54233 = 1.0/(t54174*t54174*t54174*t54174*t54174);
                double t54234 = 1.0/d2fz0;
                double t54235 = 1.0/Aa;
                double t54236 = b1a*t54177;
                double t54237 = b3a*t54179;
                double t54238 = b4a*t54181*t54138;
                double t54239 = b2a*c*t54175;
                double t54240 = t54236+t54237+t54238+t54239;
                double t54241 = 1.0/t54240;
                double t54242 = t54241*t54235*(1.0/2.0);
                double t54243 = t54242+1.0;
                double t54244 = log(t54243);
                double t54245 = a1a*c*t54175;
                double t54246 = t54245+1.0;
                double t54247 = pow(t54212,1.0/3.0);
                double t54248 = t54219*t54247*(4.0/3.0);
                double t54249 = pow(t54214,1.0/3.0);
                double t54250 = t54248-t54219*t54249*(4.0/3.0);
                double t54251 = t54220*t54223;
                double t54252 = t54251-1.0;
                double t54253 = pow(2.0,1.0/3.0);
                double t54254 = t54253*2.0;
                double t54255 = t54254-2.0;
                double t54256 = a1f*c*t54134;
                double t54257 = t54256+1.0;
                double t54258 = b1f*t54136;
                double t54259 = b3f*t54137;
                double t54260 = b4f*t54138*t54139;
                double t54261 = b2f*c*t54134;
                double t54262 = t54260+t54261+t54258+t54259;
                double t54263 = 1.0/t54262;
                double t54264 = t54263*t54189*(1.0/2.0);
                double t54265 = t54264+1.0;
                double t54266 = 1.0/pow(rho_b[index],4.0/3.0);
                double t54267 = 1.0/pow(rho_b[index],5.0/3.0);
                double t54268 = 1.0/sqrt(t54135);
                double t54269 = log(t54265);
                double t54270 = 1.0/t54148;
                double t54271 = 1.0/(t54145*t54145);
                double t54272 = b4p*t54138*t54267*(2.0/3.0);
                double t54273 = b2p*c*t54266*(1.0/3.0);
                double t54274 = b1p*c*t54266*t54268*(1.0/6.0);
                double t54275 = b3p*c*t54136*t54266*(1.0/2.0);
                double t54276 = t54272+t54273+t54274+t54275;
                double t54277 = t54151*t54270*t54271*t54276;
                double t54278 = c0f*t54257*t54269*2.0;
                double t54279 = c0p*t54151*t54149*2.0;
                double t54280 = 1.0/pow(rho_a[index],8.0/3.0);
                double t54281 = gamma_aa[index]*t54280*(1.0/2.0);
                double t54282 = gamma_bb[index]*t54152*(1.0/2.0);
                double t54283 = t54281+t54282;
                double t54284 = gcab*t54283;
                double t54285 = t54284+1.0;
                double t54286 = gcab*gcab;
                double t54287 = t54283*t54283;
                double t54288 = t54286*t54286;
                double t54289 = t54287*t54287;
                double t54290 = t54286*t54287;
                double t54291 = gcab*t54283*2.0;
                double t54292 = t54290+t54291+1.0;
                double t54293 = t54286*t54287*3.0;
                double t54294 = gcab*t54283*t54286*t54287;
                double t54295 = gcab*t54283*3.0;
                double t54296 = t54293+t54294+t54295+1.0;
                double t54297 = t54286*t54287*6.0;
                double t54298 = gcab*t54283*t54286*t54287*4.0;
                double t54299 = t54288*t54289;
                double t54300 = gcab*t54283*4.0;
                double t54301 = t54300+t54297+t54298+t54299+1.0;
                double t54302 = a1p*c*c0p*t54210*t54185*(2.0/3.0);
                double t54303 = 1.0/pow(rho_a[index],1.0/3.0);
                double t54304 = c*t54303;
                double t54305 = sqrt(t54304);
                double t54306 = pow(t54304,3.0/2.0);
                double t54307 = 1.0/pow(rho_a[index],2.0/3.0);
                double t54308 = b1p*t54305;
                double t54309 = b3p*t54306;
                double t54310 = b4p*t54307*t54138;
                double t54311 = b2p*c*t54303;
                double t54312 = t54310+t54311+t54308+t54309;
                double t54313 = 1.0/t54312;
                double t54314 = t54140*t54313*(1.0/2.0);
                double t54315 = t54314+1.0;
                double t54316 = log(t54315);
                double t54317 = a1p*c*t54303;
                double t54318 = t54317+1.0;
                double t54319 = c0p*t54316*t54318*2.0;
                double t54320 = t54278-t54279;
                double t54321 = t54211*t54220*t54223*t54216*t54188;
                double t54322 = Aa*t54216*t54234*t54252*t54244*t54246*t54188*2.0;
                double t54323 = 1.0/t54285;
                double t54324 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t54325 = 1.0/(t54285*t54285);
                double t54326 = 1.0/t54292;
                double t54327 = 1.0/(t54296*t54296);
                double t54328 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t54329 = 1.0/(t54292*t54292);
                double t54330 = 1.0/t54296;
                double t54331 = 1.0/t54301;
                double t54332 = 1.0/(t54301*t54301);
                double t54333 = gcab*t54152*2.0;
                double t54334 = t54152*t54283*t54286*6.0;
                double t54335 = gcab*t54152*t54286*t54287*6.0;
                double t54336 = t54152*t54283*t54287*t54288*2.0;
                double t54337 = t54333+t54334+t54335+t54336;
                double t54338 = gamma_bb[index]*gcab*t54324*(8.0/3.0);
                double t54339 = gamma_bb[index]*t54324*t54283*t54286*(8.0/3.0);
                double t54340 = t54338+t54339;
                double t54341 = gcab*t54152;
                double t54342 = t54152*t54283*t54286;
                double t54343 = t54341+t54342;
                double t54344 = gamma_bb[index]*gcab*t54324*(1.6E1/3.0);
                double t54345 = gamma_bb[index]*gcab*t54324*t54286*t54287*1.6E1;
                double t54346 = gamma_bb[index]*t54324*t54283*t54287*t54288*(1.6E1/3.0);
                double t54347 = gamma_bb[index]*t54324*t54283*t54286*1.6E1;
                double t54348 = t54344+t54345+t54346+t54347;
                double t54349 = gcab*t54152*(3.0/2.0);
                double t54350 = t54152*t54283*t54286*3.0;
                double t54351 = gcab*t54152*t54286*t54287*(3.0/2.0);
                double t54352 = t54350+t54351+t54349;
                double t54353 = gamma_bb[index]*gcab*t54324*4.0;
                double t54354 = gamma_bb[index]*gcab*t54324*t54286*t54287*4.0;
                double t54355 = gamma_bb[index]*t54324*t54283*t54286*8.0;
                double t54356 = t54353+t54354+t54355;
                double t54357 = gx*gx;
                double t54358 = t54357*t54357;
                double t54359 = gamma_bb[index]*gx*t54152;
                double t54360 = t54359+1.0;
                double t54361 = gamma_bb[index]*gx*t54152*3.0;
                double t54362 = gamma_bb[index]*gx*t54153*t54158*t54357;
                double t54363 = t54153*t54157*t54357*3.0;
                double t54364 = t54361+t54362+t54363+1.0;
                double t54365 = gamma_bb[index]*gx*t54152*4.0;
                double t54366 = gamma_bb[index]*gx*t54153*t54158*t54357*4.0;
                double t54367 = t54153*t54157*t54357*6.0;
                double t54368 = t54156*t54165*t54358;
                double t54369 = t54365+t54366+t54367+t54368+1.0;
                double t54370 = gamma_bb[index]*gx*t54152*2.0;
                double t54371 = t54153*t54157*t54357;
                double t54372 = t54370+t54371+1.0;
                double t54373 = t54320*t54255*t54188;
                double t54374 = t54373+t54279;
                double t54375 = 1.0/t54160;
                double t54376 = 1.0/t54170;
                double t54377 = 1.0/t54173;
                double t54378 = 1.0/t54164;
                double t54379 = 1.0/(t54160*t54160);
                double t54380 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t54381 = 1.0/(t54164*t54164);
                double t54382 = 1.0/(t54173*t54173);
                double t54383 = gcaa*t54152*3.0;
                double t54384 = gamma_bb[index]*t54154*t54157*6.0;
                double t54385 = gcaa*t54153*t54154*t54158*3.0;
                double t54386 = t54383+t54384+t54385;
                double t54387 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t54388 = 1.0/(t54170*t54170);
                double t54389 = gcaa*t54152*4.0;
                double t54390 = gamma_bb[index]*t54154*t54157*1.2E1;
                double t54391 = gcaa*t54153*t54154*t54158*1.2E1;
                double t54392 = gamma_bb[index]*t54153*t54155*t54156*4.0;
                double t54393 = t54390+t54391+t54392+t54389;
                double t54394 = gcaa*t54152*2.0;
                double t54395 = gamma_bb[index]*t54154*t54157*2.0;
                double t54396 = t54394+t54395;
                double t54397 = gamma_bb[index]*gcaa*t54324*(1.6E1/3.0);
                double t54398 = t54153*t54154*t54328*(1.6E1/3.0);
                double t54399 = t54397+t54398;
                double t54400 = gamma_bb[index]*gcaa*t54324*8.0;
                double t54401 = gamma_bb[index]*gcaa*t54153*t54154*t54380*8.0;
                double t54402 = t54153*t54154*t54328*1.6E1;
                double t54403 = t54400+t54401+t54402;
                double t54404 = gamma_bb[index]*gcaa*t54324*(3.2E1/3.0);
                double t54405 = gamma_bb[index]*gcaa*t54153*t54154*t54380*3.2E1;
                double t54406 = t54153*t54154*t54328*3.2E1;
                double t54407 = t54155*t54165*t54387*(3.2E1/3.0);
                double t54408 = t54404+t54405+t54406+t54407;
                double t54409 = 1.0/t54265;
                double t54410 = 1.0/(t54262*t54262);
                double t54411 = b4f*t54138*t54267*(2.0/3.0);
                double t54412 = b2f*c*t54266*(1.0/3.0);
                double t54413 = b1f*c*t54266*t54268*(1.0/6.0);
                double t54414 = b3f*c*t54136*t54266*(1.0/2.0);
                double t54415 = t54411+t54412+t54413+t54414;
                double t54416 = a1f*c*c0f*t54266*t54269*(2.0/3.0);
                double t54417 = a1p*c*c0p*t54149*t54266*(2.0/3.0);
                double t54418 = ccaa1*gcaa*t54152*t54375;
                double t54419 = ccaa4*gamma_bb[index]*t54153*t54155*t54156*t54376*4.0;
                double t54420 = ccaa2*gamma_bb[index]*t54154*t54157*t54377*2.0;
                double t54421 = ccaa3*gcaa*t54153*t54154*t54158*t54378*3.0;
                double t54422 = t54420+t54421+t54418+t54419-ccaa1*gamma_bb[index]*t54154*t54157*t54379-ccaa2*t54153* \
                   t54154*t54157*t54382*t54396-ccaa4*t54155*t54156*t54165*t54393*t54388-ccaa3*gamma_bb[index]*gcaa*t54153* \
                   t54154*t54381*t54158*t54386;
                double t54423 = 1.0/t54360;
                double t54424 = 1.0/t54369;
                double t54425 = 1.0/t54372;
                double t54426 = 1.0/t54364;
                double t54427 = 1.0/(t54360*t54360);
                double t54428 = 1.0/(t54364*t54364);
                double t54429 = 1.0/(t54372*t54372);
                double t54430 = gx*t54152*3.0;
                double t54431 = gamma_bb[index]*t54157*t54357*6.0;
                double t54432 = gx*t54153*t54158*t54357*3.0;
                double t54433 = t54430+t54431+t54432;
                double t54434 = 1.0/(t54369*t54369);
                double t54435 = gx*t54152*4.0;
                double t54436 = gamma_bb[index]*t54157*t54357*1.2E1;
                double t54437 = gx*t54153*t54158*t54357*1.2E1;
                double t54438 = gamma_bb[index]*t54153*t54156*t54358*4.0;
                double t54439 = t54435+t54436+t54437+t54438;
                double t54440 = gx*t54152*2.0;
                double t54441 = gamma_bb[index]*t54157*t54357*2.0;
                double t54442 = t54440+t54441;
                double t54443 = gamma_bb[index]*gx*t54324*(1.6E1/3.0);
                double t54444 = t54153*t54328*t54357*(1.6E1/3.0);
                double t54445 = t54443+t54444;
                double t54446 = gamma_bb[index]*gx*t54324*8.0;
                double t54447 = gamma_bb[index]*gx*t54153*t54380*t54357*8.0;
                double t54448 = t54153*t54328*t54357*1.6E1;
                double t54449 = t54446+t54447+t54448;
                double t54450 = gamma_bb[index]*gx*t54324*(3.2E1/3.0);
                double t54451 = gamma_bb[index]*gx*t54153*t54380*t54357*3.2E1;
                double t54452 = t54153*t54328*t54357*3.2E1;
                double t54453 = t54165*t54358*t54387*(3.2E1/3.0);
                double t54454 = t54450+t54451+t54452+t54453;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t54374+rho_a[index]*(t54319-t54255*t54188*(t54319-c0f*log((t54189* \
                   (1.0/2.0))/(b1f*t54305+b3f*t54306+b2f*c*t54303+b4f*t54307*t54138)+1.0)*(a1f*c*t54303+1.0)*2.0))-t54174* \
                   (t54222+t54321+t54322))*(ccab1*gcab*t54323*t54324*(4.0/3.0)-ccab2*t54329*t54286*t54287*(gcab*t54324* \
                   (8.0/3.0)+gamma_bb[index]*t54328*t54286*(4.0/3.0)+t54324*t54283*t54286*(8.0/3.0))-ccab4*t54332*t54288* \
                   t54289*(gcab*t54324*(1.6E1/3.0)+gamma_bb[index]*t54328*t54286*8.0+t54324*t54283*t54286*1.6E1+gamma_bb[index]* \
                   t54328*t54287*t54288*8.0+gcab*t54324*t54286*t54287*1.6E1+t54324*t54283*t54287*t54288*(1.6E1/3.0)+gamma_bb[index]* \
                   gcab*t54283*t54328*t54286*1.6E1)-ccab1*gamma_bb[index]*t54325*t54328*t54286*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t54326*t54328*t54286*(4.0/3.0)-ccab1*t54324*t54325*t54283*t54286*(4.0/3.0)+ccab2*t54324*t54326*t54283* \
                   t54286*(8.0/3.0)-ccab2*t54340*t54152*t54283*t54329*t54286+ccab4*t54331*t54324*t54283*t54287*t54288* \
                   (1.6E1/3.0)+ccab2*t54340*t54343*1.0/(t54292*t54292*t54292)*t54286*t54287*2.0+ccab4*1.0/(t54301*t54301* \
                   t54301)*t54337*t54348*t54288*t54289*2.0+ccab4*gamma_bb[index]*t54331*t54328*t54287*t54288*8.0+ccab3* \
                   gcab*t54330*t54324*t54286*t54287*4.0+ccab3*gamma_bb[index]*gcab*t54330*t54283*t54328*t54286*4.0-ccab2* \
                   gamma_bb[index]*t54324*t54343*t54283*t54329*t54286*(8.0/3.0)-ccab3*gcab*t54152*t54327*t54356*t54286* \
                   t54287*(3.0/2.0)-ccab4*t54152*t54332*t54283*t54348*t54287*t54288*2.0-ccab3*gcab*t54327*t54283*t54286* \
                   t54287*(gcab*t54324*4.0+gamma_bb[index]*t54328*t54286*4.0+t54324*t54283*t54286*8.0+gcab*t54324*t54286* \
                   t54287*4.0+gamma_bb[index]*gcab*t54283*t54328*t54286*4.0)+ccab1*gamma_bb[index]*gcab*t54283*t54328* \
                   1.0/(t54285*t54285*t54285)*t54286*(4.0/3.0)+ccab3*gcab*t54352*t54283*t54356*t54286*t54287*1.0/(t54296* \
                   t54296*t54296)*2.0-ccab3*gamma_bb[index]*gcab*t54324*t54352*t54327*t54286*t54287*4.0-ccab4*gamma_bb[index]* \
                   t54332*t54324*t54283*t54337*t54287*t54288*(1.6E1/3.0))-(t54222+t54321+t54322-t54279+rho_b[index]*(t54417- \
                   t54277+t54255*t54188*(t54416+t54277-t54410*t54415*t54409*t54257-a1p*c*c0p*t54149*t54266*(2.0/3.0)) \
                   )-t54174*(t54302-t54232*t54226*t54227*t54194+t54211*t54220*t54223*t54250*t54188+t54211*t54223*t54233* \
                   t54216*t54188*4.0-t54220*t54223*t54216*t54188*(t54302-t54232*t54226*t54227*t54194+(1.0/(t54203*t54203) \
                   *t54209*(b2f*c*t54185*(1.0/3.0)+b4f*t54224*t54138*(2.0/3.0)+b1f*c*t54225*t54185*(1.0/6.0)+b3f*c*t54185* \
                   t54177*(1.0/2.0)))/t54206-a1f*c*c0f*t54207*t54185*(2.0/3.0))+t54211*t54220*t54216*t54195*t54196*t54188* \
                   4.0+Aa*t54216*t54234*t54244*t54246*t54188*(t54223*t54233*4.0+t54220*t54195*t54196*4.0)*2.0+Aa*t54250* \
                   t54234*t54252*t54244*t54246*t54188*2.0-(1.0/(t54240*t54240)*t54216*t54234*t54252*t54246*t54188*(b2a* \
                   c*t54185*(1.0/3.0)+b4a*t54224*t54138*(2.0/3.0)+b1a*c*t54225*t54185*(1.0/6.0)+b3a*c*t54185*t54177*(1.0/ \
                   2.0)))/t54243+Aa*a1a*c*t54216*t54234*t54252*t54244*t54185*t54188*(2.0/3.0))-t54320*t54255*t54188)* \
                   (ccab1*gcab*t54152*t54323*(1.0/2.0)-ccab1*t54152*t54325*t54283*t54286*(1.0/2.0)+ccab2*t54152*t54326* \
                   t54283*t54286-ccab2*t54343*t54329*t54286*t54287-ccab4*t54332*t54337*t54288*t54289+ccab4*t54331*t54152* \
                   t54283*t54287*t54288*2.0+ccab3*gcab*t54330*t54152*t54286*t54287*(3.0/2.0)-ccab3*gcab*t54352*t54327* \
                   t54283*t54286*t54287)-t54422*(t54279+t54255*t54188*(t54278-c0p*t54151*t54149*2.0))-rho_b[index]*t54374* \
                   (ccaa1*gcaa*t54324*t54375*(-8.0/3.0)-ccaa2*gamma_bb[index]*t54154*t54328*t54377*(3.2E1/3.0)+ccaa1* \
                   gamma_bb[index]*t54154*t54328*t54379*8.0+ccaa2*t54153*t54154*t54328*t54382*t54396*(1.6E1/3.0)+ccaa4* \
                   t54155*t54165*t54393*t54387*t54388*(3.2E1/3.0)+ccaa4*t54155*t54156*t54165*t54388*(gcaa*t54324*(3.2E1/ \
                   3.0)+gamma_bb[index]*t54154*t54328*6.4E1+gamma_bb[index]*t54153*t54155*t54387*(1.28E2/3.0)+gcaa*t54153* \
                   t54154*t54380*9.6E1)-ccaa1*gcaa*1.0/(t54160*t54160*t54160)*t54153*t54154*t54380*(1.6E1/3.0)+ccaa2* \
                   t54153*t54154*t54157*t54382*(gcaa*t54324*(1.6E1/3.0)+gamma_bb[index]*t54154*t54328*(3.2E1/3.0))-ccaa4* \
                   gamma_bb[index]*t54153*t54155*t54376*t54387*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t54154*t54157*t54382* \
                   t54399*2.0-ccaa3*gcaa*t54153*t54154*t54380*t54378*2.4E1+ccaa4*gamma_bb[index]*t54153*t54155*t54156* \
                   t54408*t54388*4.0+ccaa3*gcaa*t54403*t54153*t54154*t54381*t54158*3.0-ccaa4*1.0/(t54170*t54170*t54170) \
                   *t54155*t54156*t54165*t54408*t54393*2.0-ccaa2*t54153*t54154*1.0/(t54173*t54173*t54173)*t54157*t54396* \
                   t54399*2.0+ccaa3*gamma_bb[index]*gcaa*t54153*t54154*t54381*t54158*(gcaa*t54324*8.0+gamma_bb[index]* \
                   t54154*t54328*3.2E1+gcaa*t54153*t54154*t54380*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t54153*t54154*t54380* \
                   t54381*t54386*8.0-ccaa3*gamma_bb[index]*gcaa*t54403*t54153*t54154*1.0/(t54164*t54164*t54164)*t54158* \
                   t54386*2.0)+c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t54324*t54423*(-8.0/3.0)+cx1*gamma_bb[index]*t54328* \
                   t54427*t54357*8.0-cx2*gamma_bb[index]*t54425*t54328*t54357*(3.2E1/3.0)+cx2*t54153*t54442*t54328*t54357* \
                   t54429*(1.6E1/3.0)+cx4*t54434*t54165*t54358*t54439*t54387*(3.2E1/3.0)+cx4*t54434*t54156*t54165*t54358* \
                   (gx*t54324*(3.2E1/3.0)+gamma_bb[index]*t54328*t54357*6.4E1+gamma_bb[index]*t54153*t54358*t54387*(1.28E2/ \
                   3.0)+gx*t54153*t54380*t54357*9.6E1)-cx1*gx*t54153*1.0/(t54360*t54360*t54360)*t54380*t54357*(1.6E1/ \
                   3.0)+cx2*t54153*t54157*t54357*t54429*(gx*t54324*(1.6E1/3.0)+gamma_bb[index]*t54328*t54357*(3.2E1/3.0) \
                   )+cx2*gamma_bb[index]*t54157*t54445*t54357*t54429*2.0-cx4*gamma_bb[index]*t54153*t54424*t54358*t54387* \
                   (1.28E2/3.0)-cx3*gx*t54153*t54380*t54426*t54357*2.4E1+cx4*gamma_bb[index]*t54153*t54434*t54156*t54454* \
                   t54358*4.0+cx3*gx*t54153*t54158*t54428*t54357*t54449*3.0-cx2*t54153*t54442*1.0/(t54372*t54372*t54372) \
                   *t54157*t54445*t54357*2.0-cx4*t54156*t54165*t54454*t54358*t54439*1.0/(t54369*t54369*t54369)*2.0+cx3* \
                   gamma_bb[index]*gx*t54153*t54158*t54428*t54357*(gx*t54324*8.0+gamma_bb[index]*t54328*t54357*3.2E1+ \
                   gx*t54153*t54380*t54357*2.4E1)+cx3*gamma_bb[index]*gx*t54153*t54433*t54380*t54428*t54357*8.0-cx3*gamma_bb[index]* \
                   gx*t54153*t54433*1.0/(t54364*t54364*t54364)*t54158*t54357*t54449*2.0)+rho_b[index]*t54422*(t54417- \
                   t54277+t54255*t54188*(t54416-t54417+t54277-t54410*t54415*t54409*t54257))+c0*pow(rho_b[index],1.0/3.0) \
                   *(cx1*gx*t54152*t54423-cx1*gamma_bb[index]*t54157*t54427*t54357+cx2*gamma_bb[index]*t54425*t54157* \
                   t54357*2.0-cx2*t54153*t54442*t54157*t54357*t54429-cx4*t54434*t54156*t54165*t54358*t54439+cx4*gamma_bb[index]* \
                   t54153*t54424*t54156*t54358*4.0+cx3*gx*t54153*t54426*t54158*t54357*3.0-cx3*gamma_bb[index]*gx*t54153* \
                   t54433*t54158*t54428*t54357)*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t55347 = 1.0/pow(rho_b[index],1.0/3.0);
                double t55348 = c*t55347;
                double t55349 = sqrt(t55348);
                double t55350 = pow(t55348,3.0/2.0);
                double t55351 = c*c;
                double t55352 = 1.0/pow(rho_b[index],2.0/3.0);
                double t55353 = 1.0/c0p;
                double t55354 = b1p*t55349;
                double t55355 = b3p*t55350;
                double t55356 = b4p*t55351*t55352;
                double t55357 = b2p*c*t55347;
                double t55358 = t55354+t55355+t55356+t55357;
                double t55359 = 1.0/t55358;
                double t55360 = t55353*t55359*(1.0/2.0);
                double t55361 = t55360+1.0;
                double t55362 = log(t55361);
                double t55363 = a1p*c*t55347;
                double t55364 = t55363+1.0;
                double t55365 = 1.0/pow(rho_b[index],8.0/3.0);
                double t55366 = gamma_bb[index]*gamma_bb[index];
                double t55367 = gcaa*gcaa;
                double t55368 = t55367*t55367;
                double t55369 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t55370 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t55371 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t55372 = gamma_bb[index]*gcaa*t55365;
                double t55373 = t55372+1.0;
                double t55374 = gamma_bb[index]*gcaa*t55365*3.0;
                double t55375 = gamma_bb[index]*gcaa*t55371*t55366*t55367;
                double t55376 = t55370*t55366*t55367*3.0;
                double t55377 = t55374+t55375+t55376+1.0;
                double t55378 = t55366*t55366;
                double t55379 = gamma_bb[index]*gcaa*t55365*4.0;
                double t55380 = gamma_bb[index]*gcaa*t55371*t55366*t55367*4.0;
                double t55381 = t55370*t55366*t55367*6.0;
                double t55382 = t55368*t55369*t55378;
                double t55383 = t55380+t55381+t55382+t55379+1.0;
                double t55384 = gamma_bb[index]*gcaa*t55365*2.0;
                double t55385 = t55370*t55366*t55367;
                double t55386 = t55384+t55385+1.0;
                double t55387 = gx*gx;
                double t55388 = t55387*t55387;
                double t55389 = gamma_bb[index]*gx*t55365;
                double t55390 = t55389+1.0;
                double t55391 = gamma_bb[index]*gx*t55365*3.0;
                double t55392 = gamma_bb[index]*gx*t55371*t55366*t55387;
                double t55393 = t55370*t55366*t55387*3.0;
                double t55394 = t55391+t55392+t55393+1.0;
                double t55395 = gamma_bb[index]*gx*t55365*4.0;
                double t55396 = gamma_bb[index]*gx*t55371*t55366*t55387*4.0;
                double t55397 = t55370*t55366*t55387*6.0;
                double t55398 = t55369*t55378*t55388;
                double t55399 = t55395+t55396+t55397+t55398+1.0;
                double t55400 = gamma_bb[index]*gx*t55365*2.0;
                double t55401 = t55370*t55366*t55387;
                double t55402 = t55400+t55401+1.0;
                double t55403 = pow(2.0,1.0/3.0);
                double t55404 = t55403*2.0;
                double t55405 = t55404-2.0;
                double t55406 = two_13*2.0;
                double t55407 = t55406-2.0;
                double t55408 = 1.0/t55407;
                double t55409 = 1.0/c0f;
                double t55410 = b1f*t55349;
                double t55411 = b3f*t55350;
                double t55412 = b4f*t55351*t55352;
                double t55413 = b2f*c*t55347;
                double t55414 = t55410+t55411+t55412+t55413;
                double t55415 = 1.0/t55414;
                double t55416 = t55415*t55409*(1.0/2.0);
                double t55417 = t55416+1.0;
                double t55418 = log(t55417);
                double t55419 = a1f*c*t55347;
                double t55420 = t55419+1.0;
                double t55421 = c0f*t55420*t55418*2.0;
                double t55422 = c0p*t55362*t55364*2.0;
                double t55423 = 1.0/t55373;
                double t55424 = 1.0/t55383;
                double t55425 = 1.0/t55386;
                double t55426 = 1.0/t55377;
                double t55427 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t55428 = 1.0/(t55373*t55373);
                double t55429 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t55430 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t55431 = 1.0/(t55377*t55377);
                double t55432 = 1.0/(t55386*t55386);
                double t55433 = gcaa*t55365*3.0;
                double t55434 = gamma_bb[index]*t55370*t55367*6.0;
                double t55435 = gcaa*t55371*t55366*t55367*3.0;
                double t55436 = t55433+t55434+t55435;
                double t55437 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t55438 = 1.0/(t55383*t55383);
                double t55439 = gcaa*t55365*4.0;
                double t55440 = gamma_bb[index]*t55370*t55367*1.2E1;
                double t55441 = gcaa*t55371*t55366*t55367*1.2E1;
                double t55442 = gamma_bb[index]*t55366*t55368*t55369*4.0;
                double t55443 = t55440+t55441+t55442+t55439;
                double t55444 = gcaa*t55365*2.0;
                double t55445 = gamma_bb[index]*t55370*t55367*2.0;
                double t55446 = t55444+t55445;
                double t55447 = gamma_bb[index]*gcaa*t55430*(1.6E1/3.0);
                double t55448 = t55427*t55366*t55367*(1.6E1/3.0);
                double t55449 = t55447+t55448;
                double t55450 = gamma_bb[index]*gcaa*t55430*8.0;
                double t55451 = gamma_bb[index]*gcaa*t55366*t55429*t55367*8.0;
                double t55452 = t55427*t55366*t55367*1.6E1;
                double t55453 = t55450+t55451+t55452;
                double t55454 = gamma_bb[index]*gcaa*t55430*(3.2E1/3.0);
                double t55455 = gamma_bb[index]*gcaa*t55366*t55429*t55367*3.2E1;
                double t55456 = t55427*t55366*t55367*3.2E1;
                double t55457 = t55437*t55368*t55378*(3.2E1/3.0);
                double t55458 = t55454+t55455+t55456+t55457;
                double t55459 = 1.0/pow(rho_b[index],4.0/3.0);
                double t55460 = 1.0/pow(rho_b[index],5.0/3.0);
                double t55461 = 1.0/sqrt(t55348);
                double t55462 = 1.0/t55361;
                double t55463 = 1.0/(t55358*t55358);
                double t55464 = b4p*t55351*t55460*(2.0/3.0);
                double t55465 = b2p*c*t55459*(1.0/3.0);
                double t55466 = b1p*c*t55461*t55459*(1.0/6.0);
                double t55467 = b3p*c*t55349*t55459*(1.0/2.0);
                double t55468 = t55464+t55465+t55466+t55467;
                double t55469 = t55462*t55364*t55463*t55468;
                double t55470 = ccaa1*gcaa*t55423*t55365;
                double t55471 = ccaa4*gamma_bb[index]*t55424*t55366*t55368*t55369*4.0;
                double t55472 = ccaa2*gamma_bb[index]*t55370*t55425*t55367*2.0;
                double t55473 = ccaa3*gcaa*t55371*t55426*t55366*t55367*3.0;
                double t55474 = t55470+t55471+t55472+t55473-ccaa1*gamma_bb[index]*t55370*t55428*t55367-ccaa2*t55432* \
                   t55370*t55446*t55366*t55367-ccaa4*t55443*t55438*t55368*t55369*t55378-ccaa3*gamma_bb[index]*gcaa*t55431* \
                   t55371*t55436*t55366*t55367;
                double t55475 = 1.0/t55390;
                double t55476 = 1.0/t55399;
                double t55477 = 1.0/t55402;
                double t55478 = 1.0/t55394;
                double t55479 = 1.0/(t55390*t55390);
                double t55480 = 1.0/(t55394*t55394);
                double t55481 = 1.0/(t55402*t55402);
                double t55482 = gx*t55365*3.0;
                double t55483 = gamma_bb[index]*t55370*t55387*6.0;
                double t55484 = gx*t55371*t55366*t55387*3.0;
                double t55485 = t55482+t55483+t55484;
                double t55486 = 1.0/(t55399*t55399);
                double t55487 = gx*t55365*4.0;
                double t55488 = gamma_bb[index]*t55370*t55387*1.2E1;
                double t55489 = gx*t55371*t55366*t55387*1.2E1;
                double t55490 = gamma_bb[index]*t55366*t55369*t55388*4.0;
                double t55491 = t55490+t55487+t55488+t55489;
                double t55492 = gx*t55365*2.0;
                double t55493 = gamma_bb[index]*t55370*t55387*2.0;
                double t55494 = t55492+t55493;
                double t55495 = gamma_bb[index]*gx*t55430*(1.6E1/3.0);
                double t55496 = t55427*t55366*t55387*(1.6E1/3.0);
                double t55497 = t55495+t55496;
                double t55498 = gamma_bb[index]*gx*t55430*8.0;
                double t55499 = gamma_bb[index]*gx*t55366*t55429*t55387*8.0;
                double t55500 = t55427*t55366*t55387*1.6E1;
                double t55501 = t55500+t55498+t55499;
                double t55502 = gamma_bb[index]*gx*t55430*(3.2E1/3.0);
                double t55503 = gamma_bb[index]*gx*t55366*t55429*t55387*3.2E1;
                double t55504 = t55427*t55366*t55387*3.2E1;
                double t55505 = t55437*t55378*t55388*(3.2E1/3.0);
                double t55506 = t55502+t55503+t55504+t55505;
                v_rho_b_gamma_bb_[index] = -t55474*(t55422+t55405*t55408*(t55421-c0p*t55362*t55364*2.0))+rho_b[index]* \
                   t55474*(-t55469+t55405*t55408*(t55469-(t55420*1.0/(t55414*t55414)*(b2f*c*t55459*(1.0/3.0)+b4f*t55351* \
                   t55460*(2.0/3.0)+b1f*c*t55461*t55459*(1.0/6.0)+b3f*c*t55349*t55459*(1.0/2.0)))/t55417+a1f*c*c0f*t55418* \
                   t55459*(2.0/3.0)-a1p*c*c0p*t55362*t55459*(2.0/3.0))+a1p*c*c0p*t55362*t55459*(2.0/3.0))-rho_b[index]* \
                   (t55422+t55405*t55408*(t55421-t55422))*(ccaa1*gcaa*t55430*t55423*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t55425*t55427*t55367*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t55427*t55428*t55367*8.0+ccaa2*t55432*t55427* \
                   t55446*t55366*t55367*(1.6E1/3.0)+ccaa4*t55443*t55437*t55438*t55368*t55378*(3.2E1/3.0)+ccaa4*t55438* \
                   t55368*t55369*t55378*(gcaa*t55430*(3.2E1/3.0)+gamma_bb[index]*t55427*t55367*6.4E1+gamma_bb[index]* \
                   t55437*t55366*t55368*(1.28E2/3.0)+gcaa*t55366*t55429*t55367*9.6E1)-ccaa1*gcaa*1.0/(t55373*t55373*t55373) \
                   *t55366*t55429*t55367*(1.6E1/3.0)+ccaa2*t55432*t55370*t55366*t55367*(gcaa*t55430*(1.6E1/3.0)+gamma_bb[index]* \
                   t55427*t55367*(3.2E1/3.0))+ccaa2*gamma_bb[index]*t55432*t55370*t55367*t55449*2.0-ccaa4*gamma_bb[index]* \
                   t55424*t55437*t55366*t55368*(1.28E2/3.0)-ccaa3*gcaa*t55426*t55366*t55429*t55367*2.4E1+ccaa4*gamma_bb[index]* \
                   t55366*t55438*t55368*t55458*t55369*4.0+ccaa3*gcaa*t55431*t55371*t55453*t55366*t55367*3.0-ccaa2*t55370* \
                   t55446*t55366*t55367*1.0/(t55386*t55386*t55386)*t55449*2.0-ccaa4*t55443*1.0/(t55383*t55383*t55383) \
                   *t55368*t55458*t55369*t55378*2.0+ccaa3*gamma_bb[index]*gcaa*t55431*t55371*t55366*t55367*(gcaa*t55430* \
                   8.0+gamma_bb[index]*t55427*t55367*3.2E1+gcaa*t55366*t55429*t55367*2.4E1)+ccaa3*gamma_bb[index]*gcaa* \
                   t55431*t55436*t55366*t55429*t55367*8.0-ccaa3*gamma_bb[index]*gcaa*t55371*t55453*t55436*t55366*t55367* \
                   1.0/(t55377*t55377*t55377)*2.0)+c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t55430*t55475*(-8.0/3.0)+cx1* \
                   gamma_bb[index]*t55427*t55387*t55479*8.0-cx2*gamma_bb[index]*t55427*t55387*t55477*(3.2E1/3.0)+cx2* \
                   t55427*t55481*t55366*t55494*t55387*(1.6E1/3.0)+cx4*t55437*t55491*t55378*t55486*t55388*(3.2E1/3.0)+ \
                   cx4*t55369*t55378*t55486*t55388*(gx*t55430*(3.2E1/3.0)+gamma_bb[index]*t55427*t55387*6.4E1+gamma_bb[index]* \
                   t55437*t55366*t55388*(1.28E2/3.0)+gx*t55366*t55429*t55387*9.6E1)-cx1*gx*1.0/(t55390*t55390*t55390) \
                   *t55366*t55429*t55387*(1.6E1/3.0)+cx2*t55370*t55481*t55366*t55387*(gx*t55430*(1.6E1/3.0)+gamma_bb[index]* \
                   t55427*t55387*(3.2E1/3.0))+cx2*gamma_bb[index]*t55370*t55481*t55387*t55497*2.0-cx4*gamma_bb[index]* \
                   t55437*t55366*t55476*t55388*(1.28E2/3.0)-cx3*gx*t55366*t55429*t55387*t55478*2.4E1+cx4*gamma_bb[index]* \
                   t55506*t55366*t55369*t55486*t55388*4.0+cx3*gx*t55501*t55371*t55480*t55366*t55387*3.0-cx2*1.0/(t55402* \
                   t55402*t55402)*t55370*t55366*t55494*t55387*t55497*2.0-cx4*t55506*t55491*t55369*t55378*t55388*1.0/(t55399* \
                   t55399*t55399)*2.0+cx3*gamma_bb[index]*gx*t55371*t55480*t55366*t55387*(gx*t55430*8.0+gamma_bb[index]* \
                   t55427*t55387*3.2E1+gx*t55366*t55429*t55387*2.4E1)+cx3*gamma_bb[index]*gx*t55480*t55366*t55429*t55485* \
                   t55387*8.0-cx3*gamma_bb[index]*gx*t55501*t55371*t55366*1.0/(t55394*t55394*t55394)*t55485*t55387*2.0) \
                   +c0*pow(rho_b[index],1.0/3.0)*(cx1*gx*t55365*t55475-cx1*gamma_bb[index]*t55370*t55387*t55479+cx2*gamma_bb[index]* \
                   t55370*t55387*t55477*2.0-cx2*t55370*t55481*t55366*t55494*t55387-cx4*t55491*t55369*t55378*t55486*t55388+ \
                   cx4*gamma_bb[index]*t55366*t55476*t55369*t55388*4.0+cx3*gx*t55371*t55366*t55387*t55478*3.0-cx3*gamma_bb[index]* \
                   gx*t55371*t55480*t55366*t55485*t55387)*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t54456 = 1.0/pow(rho_a[index],1.0/3.0);
                double t54457 = c*t54456;
                double t54458 = sqrt(t54457);
                double t54459 = pow(t54457,3.0/2.0);
                double t54460 = c*c;
                double t54461 = 1.0/pow(rho_a[index],2.0/3.0);
                double t54462 = 1.0/c0p;
                double t54463 = b1p*t54458;
                double t54464 = b3p*t54459;
                double t54465 = b4p*t54460*t54461;
                double t54466 = b2p*c*t54456;
                double t54467 = t54463+t54464+t54465+t54466;
                double t54468 = 1.0/t54467;
                double t54469 = t54462*t54468*(1.0/2.0);
                double t54470 = t54469+1.0;
                double t54471 = log(t54470);
                double t54472 = a1p*c*t54456;
                double t54473 = t54472+1.0;
                double t54474 = pow(2.0,1.0/3.0);
                double t54475 = t54474*2.0;
                double t54476 = t54475-2.0;
                double t54477 = two_13*2.0;
                double t54478 = t54477-2.0;
                double t54479 = 1.0/t54478;
                double t54480 = 1.0/c0f;
                double t54481 = 1.0/pow(rho_b[index],1.0/3.0);
                double t54482 = c*t54481;
                double t54483 = sqrt(t54482);
                double t54484 = pow(t54482,3.0/2.0);
                double t54485 = 1.0/pow(rho_b[index],2.0/3.0);
                double t54486 = b1p*t54483;
                double t54487 = b3p*t54484;
                double t54488 = b4p*t54460*t54485;
                double t54489 = b2p*c*t54481;
                double t54490 = t54486+t54487+t54488+t54489;
                double t54491 = 1.0/t54490;
                double t54492 = t54462*t54491*(1.0/2.0);
                double t54493 = t54492+1.0;
                double t54494 = log(t54493);
                double t54495 = a1p*c*t54481;
                double t54496 = t54495+1.0;
                double t54497 = c0p*t54494*t54496*2.0;
                double t54498 = rho_a[index]+rho_b[index];
                double t54499 = 1.0/pow(t54498,1.0/3.0);
                double t54500 = c*t54499;
                double t54501 = sqrt(t54500);
                double t54502 = pow(t54500,3.0/2.0);
                double t54503 = 1.0/pow(t54498,2.0/3.0);
                double t54504 = b1p*t54501;
                double t54505 = b3p*t54502;
                double t54506 = b4p*t54503*t54460;
                double t54507 = b2p*c*t54499;
                double t54508 = t54504+t54505+t54506+t54507;
                double t54509 = 1.0/t54508;
                double t54510 = t54462*t54509*(1.0/2.0);
                double t54511 = t54510+1.0;
                double t54512 = log(t54511);
                double t54513 = a1p*c*t54499;
                double t54514 = t54513+1.0;
                double t54515 = c0p*t54512*t54514*2.0;
                double t54516 = rho_a[index]-rho_b[index];
                double t54517 = t54516*t54516;
                double t54518 = 1.0/t54498;
                double t54519 = t54516*t54518;
                double t54520 = 1.0/(t54498*t54498*t54498*t54498);
                double t54521 = t54517*t54517;
                double t54522 = t54519+1.0;
                double t54523 = pow(t54522,4.0/3.0);
                double t54524 = -t54519+1.0;
                double t54525 = pow(t54524,4.0/3.0);
                double t54526 = t54523+t54525-2.0;
                double t54527 = gcab*gcab;
                double t54528 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t54529 = 1.0/pow(rho_a[index],8.0/3.0);
                double t54530 = gamma_aa[index]*t54529*(1.0/2.0);
                double t54531 = 1.0/pow(rho_b[index],8.0/3.0);
                double t54532 = gamma_bb[index]*t54531*(1.0/2.0);
                double t54533 = t54530+t54532;
                double t54534 = gcab*t54533;
                double t54535 = t54534+1.0;
                double t54536 = t54533*t54533;
                double t54537 = t54527*t54536;
                double t54538 = gcab*t54533*2.0;
                double t54539 = t54537+t54538+1.0;
                double t54540 = t54527*t54527;
                double t54557 = gcab*t54529*2.0;
                double t54558 = t54533*t54527*t54529*6.0;
                double t54559 = gcab*t54527*t54536*t54529*6.0;
                double t54560 = t54540*t54533*t54536*t54529*2.0;
                double t54541 = t54560+t54557+t54558+t54559;
                double t54542 = t54536*t54536;
                double t54562 = gcab*t54529*(3.0/2.0);
                double t54563 = t54533*t54527*t54529*3.0;
                double t54564 = gcab*t54527*t54536*t54529*(3.0/2.0);
                double t54543 = t54562+t54563+t54564;
                double t54544 = t54527*t54536*3.0;
                double t54545 = gcab*t54533*t54527*t54536;
                double t54546 = gcab*t54533*3.0;
                double t54547 = t54544+t54545+t54546+1.0;
                double t54554 = gcab*t54529;
                double t54555 = t54533*t54527*t54529;
                double t54548 = t54554+t54555;
                double t54549 = t54527*t54536*6.0;
                double t54550 = gcab*t54533*t54527*t54536*4.0;
                double t54551 = t54540*t54542;
                double t54552 = gcab*t54533*4.0;
                double t54553 = t54550+t54551+t54552+t54549+1.0;
                double t54556 = 1.0/(t54539*t54539);
                double t54561 = 1.0/(t54553*t54553);
                double t54565 = 1.0/(t54547*t54547);
                double t54566 = gx*gx;
                double t54567 = gamma_aa[index]*gamma_aa[index];
                double t54568 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t54569 = t54566*t54566;
                double t54570 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t54571 = gamma_aa[index]*gx*t54529;
                double t54572 = t54571+1.0;
                double t54573 = gamma_aa[index]*gx*t54529*2.0;
                double t54574 = t54528*t54566*t54567;
                double t54575 = t54573+t54574+1.0;
                double t54576 = gamma_aa[index]*gx*t54529*3.0;
                double t54577 = gamma_aa[index]*gx*t54566*t54567*t54568;
                double t54578 = t54528*t54566*t54567*3.0;
                double t54579 = t54576+t54577+t54578+1.0;
                double t54580 = t54567*t54567;
                double t54596 = gx*t54529*4.0;
                double t54597 = gamma_aa[index]*t54528*t54566*1.2E1;
                double t54598 = gx*t54566*t54567*t54568*1.2E1;
                double t54599 = gamma_aa[index]*t54570*t54567*t54569*4.0;
                double t54581 = t54596+t54597+t54598+t54599;
                double t54582 = gamma_aa[index]*gx*t54529*4.0;
                double t54583 = gamma_aa[index]*gx*t54566*t54567*t54568*4.0;
                double t54584 = t54528*t54566*t54567*6.0;
                double t54585 = t54570*t54580*t54569;
                double t54586 = t54582+t54583+t54584+t54585+1.0;
                double t54589 = gx*t54529*2.0;
                double t54590 = gamma_aa[index]*t54528*t54566*2.0;
                double t54587 = t54590+t54589;
                double t54588 = 1.0/(t54579*t54579);
                double t54591 = 1.0/(t54575*t54575);
                double t54592 = gx*t54529*3.0;
                double t54593 = gamma_aa[index]*t54528*t54566*6.0;
                double t54594 = gx*t54566*t54567*t54568*3.0;
                double t54595 = t54592+t54593+t54594;
                double t54600 = 1.0/(t54586*t54586);
                double t54601 = b1f*t54458;
                double t54602 = b3f*t54459;
                double t54603 = b4f*t54460*t54461;
                double t54604 = b2f*c*t54456;
                double t54605 = t54601+t54602+t54603+t54604;
                double t54606 = 1.0/t54605;
                double t54607 = t54480*t54606*(1.0/2.0);
                double t54608 = t54607+1.0;
                double t54609 = log(t54608);
                double t54610 = a1f*c*t54456;
                double t54611 = t54610+1.0;
                double t54612 = c0f*t54611*t54609*2.0;
                double t54613 = c0p*t54471*t54473*2.0;
                double t54614 = gcaa*gcaa;
                double t54615 = t54614*t54614;
                double t54616 = gamma_aa[index]*gcaa*t54529;
                double t54617 = t54616+1.0;
                double t54618 = gamma_aa[index]*gcaa*t54529*2.0;
                double t54619 = t54614*t54528*t54567;
                double t54620 = t54618+t54619+1.0;
                double t54621 = gamma_aa[index]*gcaa*t54529*3.0;
                double t54622 = gamma_aa[index]*gcaa*t54614*t54567*t54568;
                double t54623 = t54614*t54528*t54567*3.0;
                double t54624 = t54621+t54622+t54623+1.0;
                double t54640 = gcaa*t54529*4.0;
                double t54641 = gamma_aa[index]*t54614*t54528*1.2E1;
                double t54642 = gcaa*t54614*t54567*t54568*1.2E1;
                double t54643 = gamma_aa[index]*t54570*t54615*t54567*4.0;
                double t54625 = t54640+t54641+t54642+t54643;
                double t54626 = gamma_aa[index]*gcaa*t54529*4.0;
                double t54627 = gamma_aa[index]*gcaa*t54614*t54567*t54568*4.0;
                double t54628 = t54614*t54528*t54567*6.0;
                double t54629 = t54570*t54615*t54580;
                double t54630 = t54626+t54627+t54628+t54629+1.0;
                double t54633 = gcaa*t54529*2.0;
                double t54634 = gamma_aa[index]*t54614*t54528*2.0;
                double t54631 = t54633+t54634;
                double t54632 = 1.0/(t54624*t54624);
                double t54635 = 1.0/(t54620*t54620);
                double t54636 = gcaa*t54529*3.0;
                double t54637 = gamma_aa[index]*t54614*t54528*6.0;
                double t54638 = gcaa*t54614*t54567*t54568*3.0;
                double t54639 = t54636+t54637+t54638;
                double t54644 = 1.0/(t54630*t54630);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t54613+t54476*t54479*(t54612-c0p*t54471*t54473*2.0) \
                   )+rho_b[index]*(t54497-t54476*t54479*(t54497-c0f*log((t54480*(1.0/2.0))/(b1f*t54483+b3f*t54484+b2f* \
                   c*t54481+b4f*t54460*t54485)+1.0)*(a1f*c*t54481+1.0)*2.0))-t54498*(t54515-t54520*t54521*t54526*t54479* \
                   (t54515-c0f*log((t54480*(1.0/2.0))/(b1f*t54501+b3f*t54502+b2f*c*t54499+b4f*t54503*t54460)+1.0)*(a1f* \
                   c*t54499+1.0)*2.0)+(Aa*t54526*t54479*log((1.0/2.0)/(Aa*(b1a*t54501+b3a*t54502+b2a*c*t54499+b4a*t54503* \
                   t54460))+1.0)*(t54520*t54521-1.0)*(a1a*c*t54499+1.0)*2.0)/d2fz0))*(ccab1*1.0/(t54535*t54535)*t54527* \
                   t54528*(1.0/2.0)-(ccab2*t54527*t54528*(1.0/2.0))/t54539-ccab4*t54540*(t54541*t54541)*t54542*1.0/(t54553* \
                   t54553*t54553)*2.0-ccab2*t54527*t54536*1.0/(t54539*t54539*t54539)*(t54548*t54548)*2.0+ccab2*t54540* \
                   t54536*t54528*t54556*(1.0/2.0)+ccab4*t54540*t54542*t54561*(t54527*t54528*3.0+t54540*t54536*t54528* \
                   3.0+gcab*t54533*t54527*t54528*6.0)-(ccab4*t54540*t54536*t54528*3.0)/t54553+ccab2*t54533*t54527*t54529* \
                   t54556*t54548*2.0-ccab1*gcab*t54533*1.0/(t54535*t54535*t54535)*t54527*t54528*(1.0/2.0)-(ccab3*gcab* \
                   t54533*t54527*t54528*(3.0/2.0))/t54547-ccab3*gcab*t54533*(t54543*t54543)*t54527*t54536*1.0/(t54547* \
                   t54547*t54547)*2.0+ccab3*gcab*t54543*t54527*t54536*t54529*t54565*3.0+ccab4*t54540*t54541*t54533*t54561* \
                   t54536*t54529*4.0+ccab3*gcab*t54533*t54527*t54536*t54565*(t54527*t54528*(3.0/2.0)+gcab*t54533*t54527* \
                   t54528*(3.0/2.0)))-rho_a[index]*(t54613+t54476*t54479*(t54612-t54613))*((ccaa2*t54614*t54528*2.0)/ \
                   t54620-ccaa1*t54614*1.0/(t54617*t54617)*t54528*2.0-ccaa2*t54570*t54615*t54635*t54567*2.0+(ccaa4*t54570* \
                   t54615*t54567*1.2E1)/t54630-ccaa4*t54570*t54615*t54580*t54644*(t54614*t54528*1.2E1+t54570*t54615*t54567* \
                   1.2E1+gamma_aa[index]*gcaa*t54614*t54568*2.4E1)+(ccaa3*gamma_aa[index]*gcaa*t54614*t54568*6.0)/t54624+ \
                   ccaa1*gamma_aa[index]*gcaa*t54614*1.0/(t54617*t54617*t54617)*t54568*2.0+ccaa4*1.0/(t54630*t54630*t54630) \
                   *t54570*t54615*t54580*(t54625*t54625)*2.0+ccaa2*1.0/(t54620*t54620*t54620)*(t54631*t54631)*t54614* \
                   t54528*t54567*2.0-ccaa2*gamma_aa[index]*t54631*t54614*t54635*t54528*4.0-ccaa4*gamma_aa[index]*t54570* \
                   t54615*t54625*t54644*t54567*8.0-ccaa3*gcaa*t54614*t54632*t54567*t54639*t54568*6.0-ccaa3*gamma_aa[index]* \
                   gcaa*t54614*t54632*t54567*t54568*(t54614*t54528*6.0+gamma_aa[index]*gcaa*t54614*t54568*6.0)+ccaa3* \
                   gamma_aa[index]*gcaa*t54614*1.0/(t54624*t54624*t54624)*t54567*(t54639*t54639)*t54568*2.0)-c0*pow(rho_a[index],4.0/ \
                   3.0)*(cx1*1.0/(t54572*t54572)*t54528*t54566*2.0-(cx2*t54528*t54566*2.0)/t54575+cx2*t54570*t54591*t54567* \
                   t54569*2.0-(cx4*t54570*t54567*t54569*1.2E1)/t54586+cx4*t54600*t54570*t54580*t54569*(t54528*t54566* \
                   1.2E1+t54570*t54567*t54569*1.2E1+gamma_aa[index]*gx*t54566*t54568*2.4E1)-cx1*gamma_aa[index]*gx*1.0/ \
                   (t54572*t54572*t54572)*t54566*t54568*2.0-(cx3*gamma_aa[index]*gx*t54566*t54568*6.0)/t54579-cx2*t54528* \
                   t54566*1.0/(t54575*t54575*t54575)*t54567*(t54587*t54587)*2.0-cx4*t54570*t54580*(t54581*t54581)*1.0/ \
                   (t54586*t54586*t54586)*t54569*2.0+cx2*gamma_aa[index]*t54528*t54591*t54566*t54587*4.0+cx4*gamma_aa[index]* \
                   t54600*t54570*t54581*t54567*t54569*8.0+cx3*gx*t54566*t54567*t54568*t54595*t54588*6.0+cx3*gamma_aa[index]* \
                   gx*t54566*t54567*t54568*t54588*(t54528*t54566*6.0+gamma_aa[index]*gx*t54566*t54568*6.0)-cx3*gamma_aa[index]* \
                   gx*t54566*t54567*t54568*(t54595*t54595)*1.0/(t54579*t54579*t54579)*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t56147 = gx*gx;
                double t56148 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t56149 = 1.0/pow(rho_a[index],8.0/3.0);
                double t56150 = gamma_aa[index]*gamma_aa[index];
                double t56151 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t56152 = t56147*t56147;
                double t56153 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t56154 = gamma_aa[index]*gx*t56149;
                double t56155 = t56154+1.0;
                double t56156 = gamma_aa[index]*gx*t56149*2.0;
                double t56157 = t56150*t56147*t56148;
                double t56158 = t56156+t56157+1.0;
                double t56159 = gamma_aa[index]*gx*t56149*3.0;
                double t56160 = gamma_aa[index]*gx*t56150*t56151*t56147;
                double t56161 = t56150*t56147*t56148*3.0;
                double t56162 = t56160+t56161+t56159+1.0;
                double t56163 = t56150*t56150;
                double t56179 = gx*t56149*4.0;
                double t56180 = gamma_aa[index]*t56147*t56148*1.2E1;
                double t56181 = gx*t56150*t56151*t56147*1.2E1;
                double t56182 = gamma_aa[index]*t56150*t56152*t56153*4.0;
                double t56164 = t56180+t56181+t56182+t56179;
                double t56165 = gamma_aa[index]*gx*t56149*4.0;
                double t56166 = gamma_aa[index]*gx*t56150*t56151*t56147*4.0;
                double t56167 = t56150*t56147*t56148*6.0;
                double t56168 = t56152*t56153*t56163;
                double t56169 = t56165+t56166+t56167+t56168+1.0;
                double t56172 = gx*t56149*2.0;
                double t56173 = gamma_aa[index]*t56147*t56148*2.0;
                double t56170 = t56172+t56173;
                double t56171 = 1.0/(t56162*t56162);
                double t56174 = 1.0/(t56158*t56158);
                double t56175 = gx*t56149*3.0;
                double t56176 = gamma_aa[index]*t56147*t56148*6.0;
                double t56177 = gx*t56150*t56151*t56147*3.0;
                double t56178 = t56175+t56176+t56177;
                double t56183 = 1.0/(t56169*t56169);
                double t56184 = 1.0/pow(rho_a[index],1.0/3.0);
                double t56185 = c*t56184;
                double t56186 = sqrt(t56185);
                double t56187 = pow(t56185,3.0/2.0);
                double t56188 = c*c;
                double t56189 = 1.0/pow(rho_a[index],2.0/3.0);
                double t56190 = 1.0/c0p;
                double t56191 = b1p*t56186;
                double t56192 = b3p*t56187;
                double t56193 = b4p*t56188*t56189;
                double t56194 = b2p*c*t56184;
                double t56195 = t56191+t56192+t56193+t56194;
                double t56196 = 1.0/t56195;
                double t56197 = t56190*t56196*(1.0/2.0);
                double t56198 = t56197+1.0;
                double t56199 = log(t56198);
                double t56200 = a1p*c*t56184;
                double t56201 = t56200+1.0;
                double t56202 = gcaa*gcaa;
                double t56203 = t56202*t56202;
                double t56204 = gamma_aa[index]*gcaa*t56149;
                double t56205 = t56204+1.0;
                double t56206 = gamma_aa[index]*gcaa*t56149*2.0;
                double t56207 = t56202*t56150*t56148;
                double t56208 = t56206+t56207+1.0;
                double t56209 = gamma_aa[index]*gcaa*t56149*3.0;
                double t56210 = gamma_aa[index]*gcaa*t56202*t56150*t56151;
                double t56211 = t56202*t56150*t56148*3.0;
                double t56212 = t56210+t56211+t56209+1.0;
                double t56228 = gcaa*t56149*4.0;
                double t56229 = gamma_aa[index]*t56202*t56148*1.2E1;
                double t56230 = gcaa*t56202*t56150*t56151*1.2E1;
                double t56231 = gamma_aa[index]*t56203*t56150*t56153*4.0;
                double t56213 = t56230+t56231+t56228+t56229;
                double t56214 = gamma_aa[index]*gcaa*t56149*4.0;
                double t56215 = gamma_aa[index]*gcaa*t56202*t56150*t56151*4.0;
                double t56216 = t56202*t56150*t56148*6.0;
                double t56217 = t56203*t56153*t56163;
                double t56218 = t56214+t56215+t56216+t56217+1.0;
                double t56221 = gcaa*t56149*2.0;
                double t56222 = gamma_aa[index]*t56202*t56148*2.0;
                double t56219 = t56221+t56222;
                double t56220 = 1.0/(t56212*t56212);
                double t56223 = 1.0/(t56208*t56208);
                double t56224 = gcaa*t56149*3.0;
                double t56225 = gamma_aa[index]*t56202*t56148*6.0;
                double t56226 = gcaa*t56202*t56150*t56151*3.0;
                double t56227 = t56224+t56225+t56226;
                double t56232 = 1.0/(t56218*t56218);
                v_gamma_aa_gamma_aa_[index] = -c0*pow(rho_a[index],4.0/3.0)*(cx1*1.0/(t56155*t56155)*t56147*t56148* \
                   2.0-(cx2*t56147*t56148*2.0)/t56158+cx2*t56150*t56152*t56153*t56174*2.0-(cx4*t56150*t56152*t56153*1.2E1) \
                   /t56169+cx4*t56152*t56153*t56163*t56183*(t56147*t56148*1.2E1+t56150*t56152*t56153*1.2E1+gamma_aa[index]* \
                   gx*t56151*t56147*2.4E1)-cx1*gamma_aa[index]*gx*t56151*1.0/(t56155*t56155*t56155)*t56147*2.0-(cx3*gamma_aa[index]* \
                   gx*t56151*t56147*6.0)/t56162-cx2*t56150*(t56170*t56170)*t56147*t56148*1.0/(t56158*t56158*t56158)*2.0- \
                   cx4*t56152*t56153*t56163*(t56164*t56164)*1.0/(t56169*t56169*t56169)*2.0+cx2*gamma_aa[index]*t56170* \
                   t56147*t56174*t56148*4.0+cx4*gamma_aa[index]*t56150*t56152*t56153*t56164*t56183*8.0+cx3*gx*t56150* \
                   t56151*t56171*t56147*t56178*6.0+cx3*gamma_aa[index]*gx*t56150*t56151*t56171*t56147*(t56147*t56148* \
                   6.0+gamma_aa[index]*gx*t56151*t56147*6.0)-cx3*gamma_aa[index]*gx*t56150*t56151*1.0/(t56162*t56162* \
                   t56162)*t56147*(t56178*t56178)*2.0)+rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t56186+b3f*t56187+b2f*c*t56184+b4f*t56188*t56189))+1.0)*(a1f*c*t56184+1.0)*2.0-c0p*t56201*t56199* \
                   2.0))/(two_13*2.0-2.0)+c0p*t56201*t56199*2.0)*(ccaa1*t56202*1.0/(t56205*t56205)*t56148*2.0-(ccaa2* \
                   t56202*t56148*2.0)/t56208+ccaa2*t56203*t56150*t56223*t56153*2.0-(ccaa4*t56203*t56150*t56153*1.2E1) \
                   /t56218+ccaa4*t56203*t56232*t56153*t56163*(t56202*t56148*1.2E1+t56203*t56150*t56153*1.2E1+gamma_aa[index]* \
                   gcaa*t56202*t56151*2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t56202*t56151*6.0)/t56212-ccaa1*gamma_aa[index]* \
                   gcaa*t56202*t56151*1.0/(t56205*t56205*t56205)*2.0-ccaa4*t56203*(t56213*t56213)*t56153*t56163*1.0/(t56218* \
                   t56218*t56218)*2.0-ccaa2*t56202*t56150*1.0/(t56208*t56208*t56208)*(t56219*t56219)*t56148*2.0+ccaa2* \
                   gamma_aa[index]*t56202*t56223*t56219*t56148*4.0+ccaa4*gamma_aa[index]*t56203*t56150*t56213*t56232* \
                   t56153*8.0+ccaa3*gcaa*t56202*t56220*t56150*t56151*t56227*6.0+ccaa3*gamma_aa[index]*gcaa*t56202*t56220* \
                   t56150*t56151*(t56202*t56148*6.0+gamma_aa[index]*gcaa*t56202*t56151*6.0)-ccaa3*gamma_aa[index]*gcaa* \
                   t56202*1.0/(t56212*t56212*t56212)*t56150*t56151*(t56227*t56227)*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t54647 = 1.0/pow(rho_a[index],1.0/3.0);
                double t54648 = c*t54647;
                double t54649 = sqrt(t54648);
                double t54650 = pow(t54648,3.0/2.0);
                double t54651 = c*c;
                double t54652 = 1.0/pow(rho_a[index],2.0/3.0);
                double t54653 = 1.0/c0p;
                double t54654 = b1p*t54649;
                double t54655 = b3p*t54650;
                double t54656 = b4p*t54651*t54652;
                double t54657 = b2p*c*t54647;
                double t54658 = t54654+t54655+t54656+t54657;
                double t54659 = 1.0/t54658;
                double t54660 = t54653*t54659*(1.0/2.0);
                double t54661 = t54660+1.0;
                double t54662 = log(t54661);
                double t54663 = a1p*c*t54647;
                double t54664 = t54663+1.0;
                double t54665 = pow(2.0,1.0/3.0);
                double t54666 = t54665*2.0;
                double t54667 = t54666-2.0;
                double t54668 = two_13*2.0;
                double t54669 = t54668-2.0;
                double t54670 = 1.0/t54669;
                double t54671 = 1.0/c0f;
                double t54672 = 1.0/pow(rho_b[index],1.0/3.0);
                double t54673 = c*t54672;
                double t54674 = sqrt(t54673);
                double t54675 = pow(t54673,3.0/2.0);
                double t54676 = 1.0/pow(rho_b[index],2.0/3.0);
                double t54677 = b1p*t54674;
                double t54678 = b3p*t54675;
                double t54679 = b4p*t54651*t54676;
                double t54680 = b2p*c*t54672;
                double t54681 = t54680+t54677+t54678+t54679;
                double t54682 = 1.0/t54681;
                double t54683 = t54653*t54682*(1.0/2.0);
                double t54684 = t54683+1.0;
                double t54685 = log(t54684);
                double t54686 = a1p*c*t54672;
                double t54687 = t54686+1.0;
                double t54688 = c0p*t54685*t54687*2.0;
                double t54689 = rho_a[index]+rho_b[index];
                double t54690 = 1.0/pow(t54689,1.0/3.0);
                double t54691 = c*t54690;
                double t54692 = sqrt(t54691);
                double t54693 = pow(t54691,3.0/2.0);
                double t54694 = 1.0/pow(t54689,2.0/3.0);
                double t54695 = b1p*t54692;
                double t54696 = b3p*t54693;
                double t54697 = b4p*t54651*t54694;
                double t54698 = b2p*c*t54690;
                double t54699 = t54695+t54696+t54697+t54698;
                double t54700 = 1.0/t54699;
                double t54701 = t54700*t54653*(1.0/2.0);
                double t54702 = t54701+1.0;
                double t54703 = log(t54702);
                double t54704 = a1p*c*t54690;
                double t54705 = t54704+1.0;
                double t54706 = c0p*t54703*t54705*2.0;
                double t54707 = rho_a[index]-rho_b[index];
                double t54708 = t54707*t54707;
                double t54709 = 1.0/t54689;
                double t54710 = t54707*t54709;
                double t54711 = 1.0/(t54689*t54689*t54689*t54689);
                double t54712 = t54708*t54708;
                double t54713 = t54710+1.0;
                double t54714 = pow(t54713,4.0/3.0);
                double t54715 = -t54710+1.0;
                double t54716 = pow(t54715,4.0/3.0);
                double t54717 = t54714+t54716-2.0;
                double t54718 = gcab*gcab;
                double t54721 = 1.0/pow(rho_a[index],8.0/3.0);
                double t54722 = 1.0/pow(rho_b[index],8.0/3.0);
                double t54723 = gamma_aa[index]*t54721*(1.0/2.0);
                double t54724 = gamma_bb[index]*t54722*(1.0/2.0);
                double t54719 = t54723+t54724;
                double t54720 = t54719*t54719;
                double t54725 = t54718*t54718;
                double t54726 = t54720*t54720;
                double t54727 = t54720*t54718*3.0;
                double t54728 = gcab*t54720*t54718*t54719;
                double t54729 = gcab*t54719*3.0;
                double t54730 = t54727+t54728+t54729+1.0;
                double t54731 = t54720*t54718;
                double t54732 = gcab*t54719*2.0;
                double t54733 = t54731+t54732+1.0;
                double t54734 = t54720*t54718*6.0;
                double t54735 = gcab*t54720*t54718*t54719*4.0;
                double t54736 = t54725*t54726;
                double t54737 = gcab*t54719*4.0;
                double t54738 = t54734+t54735+t54736+t54737+1.0;
                double t54739 = 1.0/(t54733*t54733);
                double t54740 = gcab*t54721;
                double t54741 = t54721*t54718*t54719;
                double t54742 = t54740+t54741;
                double t54743 = gcab*t54722;
                double t54744 = t54722*t54718*t54719;
                double t54745 = t54743+t54744;
                double t54746 = gcab*t54719;
                double t54747 = t54746+1.0;
                double t54748 = gcab*t54721*2.0;
                double t54749 = t54721*t54718*t54719*6.0;
                double t54750 = gcab*t54720*t54721*t54718*6.0;
                double t54751 = t54720*t54721*t54725*t54719*2.0;
                double t54752 = t54750+t54751+t54748+t54749;
                double t54753 = 1.0/(t54738*t54738);
                double t54754 = gcab*t54722*2.0;
                double t54755 = t54722*t54718*t54719*6.0;
                double t54756 = gcab*t54720*t54722*t54718*6.0;
                double t54757 = t54720*t54722*t54725*t54719*2.0;
                double t54758 = t54754+t54755+t54756+t54757;
                double t54759 = gcab*t54721*(3.0/2.0);
                double t54760 = t54721*t54718*t54719*3.0;
                double t54761 = gcab*t54720*t54721*t54718*(3.0/2.0);
                double t54762 = t54760+t54761+t54759;
                double t54763 = 1.0/(t54730*t54730);
                double t54764 = gcab*t54722*(3.0/2.0);
                double t54765 = t54722*t54718*t54719*3.0;
                double t54766 = gcab*t54720*t54722*t54718*(3.0/2.0);
                double t54767 = t54764+t54765+t54766;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t54688-t54670*t54667*(t54688-c0f*log((t54671*(1.0/2.0) \
                   )/(b1f*t54674+b3f*t54675+b2f*c*t54672+b4f*t54651*t54676)+1.0)*(a1f*c*t54672+1.0)*2.0))+t54689*(t54706- \
                   t54711*t54712*t54670*t54717*(t54706-c0f*log((t54671*(1.0/2.0))/(b1f*t54692+b3f*t54693+b2f*c*t54690+ \
                   b4f*t54651*t54694)+1.0)*(a1f*c*t54690+1.0)*2.0)+(Aa*t54670*t54717*log((1.0/2.0)/(Aa*(b1a*t54692+b3a* \
                   t54693+b2a*c*t54690+b4a*t54651*t54694))+1.0)*(t54711*t54712-1.0)*(a1a*c*t54690+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t54670*t54667*(c0p*t54662*t54664*2.0-c0f*log((t54671*(1.0/2.0))/(b1f*t54649+b3f*t54650+b2f*c*t54647+ \
                   b4f*t54651*t54652)+1.0)*(a1f*c*t54647+1.0)*2.0)-c0p*t54662*t54664*2.0))*(ccab4*t54725*t54726*t54753* \
                   (t54721*t54722*t54718*3.0+t54720*t54721*t54722*t54725*3.0+gcab*t54721*t54722*t54718*t54719*6.0)-(ccab2* \
                   t54721*t54722*t54718*(1.0/2.0))/t54733+ccab1*t54721*t54722*t54718*1.0/(t54747*t54747)*(1.0/2.0)+ccab2* \
                   t54720*t54721*t54722*t54725*t54739*(1.0/2.0)+ccab2*t54722*t54742*t54718*t54719*t54739+ccab2*t54721* \
                   t54718*t54745*t54719*t54739-(ccab4*t54720*t54721*t54722*t54725*3.0)/t54738-ccab2*t54720*1.0/(t54733* \
                   t54733*t54733)*t54742*t54718*t54745*2.0-ccab4*t54725*t54752*t54726*1.0/(t54738*t54738*t54738)*t54758* \
                   2.0+ccab3*gcab*t54720*t54722*t54762*t54718*t54763*(3.0/2.0)+ccab3*gcab*t54720*t54721*t54718*t54763* \
                   t54767*(3.0/2.0)+ccab4*t54720*t54722*t54725*t54752*t54753*t54719*2.0+ccab4*t54720*t54721*t54725*t54753* \
                   t54719*t54758*2.0+ccab3*gcab*t54720*t54718*t54763*t54719*(t54721*t54722*t54718*(3.0/2.0)+gcab*t54721* \
                   t54722*t54718*t54719*(3.0/2.0))-(ccab3*gcab*t54721*t54722*t54718*t54719*(3.0/2.0))/t54730-ccab1*gcab* \
                   t54721*t54722*t54718*t54719*1.0/(t54747*t54747*t54747)*(1.0/2.0)-ccab3*gcab*t54720*1.0/(t54730*t54730* \
                   t54730)*t54762*t54718*t54719*t54767*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t54771 = 1.0/pow(rho_a[index],1.0/3.0);
                double t54772 = c*t54771;
                double t54773 = sqrt(t54772);
                double t54774 = pow(t54772,3.0/2.0);
                double t54775 = c*c;
                double t54776 = 1.0/pow(rho_a[index],2.0/3.0);
                double t54777 = 1.0/c0p;
                double t54778 = b1p*t54773;
                double t54779 = b3p*t54774;
                double t54780 = b4p*t54775*t54776;
                double t54781 = b2p*c*t54771;
                double t54782 = t54780+t54781+t54778+t54779;
                double t54783 = 1.0/t54782;
                double t54784 = t54783*t54777*(1.0/2.0);
                double t54785 = t54784+1.0;
                double t54786 = log(t54785);
                double t54787 = a1p*c*t54771;
                double t54788 = t54787+1.0;
                double t54789 = pow(2.0,1.0/3.0);
                double t54790 = t54789*2.0;
                double t54791 = t54790-2.0;
                double t54792 = two_13*2.0;
                double t54793 = t54792-2.0;
                double t54794 = 1.0/t54793;
                double t54795 = 1.0/c0f;
                double t54796 = 1.0/pow(rho_b[index],1.0/3.0);
                double t54797 = c*t54796;
                double t54798 = sqrt(t54797);
                double t54799 = pow(t54797,3.0/2.0);
                double t54800 = 1.0/pow(rho_b[index],2.0/3.0);
                double t54801 = b1p*t54798;
                double t54802 = b3p*t54799;
                double t54803 = b4p*t54800*t54775;
                double t54804 = b2p*c*t54796;
                double t54805 = t54801+t54802+t54803+t54804;
                double t54806 = 1.0/t54805;
                double t54807 = t54806*t54777*(1.0/2.0);
                double t54808 = t54807+1.0;
                double t54809 = log(t54808);
                double t54810 = a1p*c*t54796;
                double t54811 = t54810+1.0;
                double t54812 = c0p*t54811*t54809*2.0;
                double t54813 = rho_a[index]+rho_b[index];
                double t54814 = 1.0/pow(t54813,1.0/3.0);
                double t54815 = c*t54814;
                double t54816 = sqrt(t54815);
                double t54817 = pow(t54815,3.0/2.0);
                double t54818 = 1.0/pow(t54813,2.0/3.0);
                double t54819 = b1p*t54816;
                double t54820 = b3p*t54817;
                double t54821 = b4p*t54818*t54775;
                double t54822 = b2p*c*t54814;
                double t54823 = t54820+t54821+t54822+t54819;
                double t54824 = 1.0/t54823;
                double t54825 = t54824*t54777*(1.0/2.0);
                double t54826 = t54825+1.0;
                double t54827 = log(t54826);
                double t54828 = a1p*c*t54814;
                double t54829 = t54828+1.0;
                double t54830 = c0p*t54827*t54829*2.0;
                double t54831 = rho_a[index]-rho_b[index];
                double t54832 = t54831*t54831;
                double t54833 = 1.0/t54813;
                double t54834 = t54831*t54833;
                double t54835 = 1.0/(t54813*t54813*t54813*t54813);
                double t54836 = t54832*t54832;
                double t54837 = t54834+1.0;
                double t54838 = pow(t54837,4.0/3.0);
                double t54839 = -t54834+1.0;
                double t54840 = pow(t54839,4.0/3.0);
                double t54841 = t54840+t54838-2.0;
                double t54842 = gcab*gcab;
                double t54843 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t54844 = 1.0/pow(rho_a[index],8.0/3.0);
                double t54845 = gamma_aa[index]*t54844*(1.0/2.0);
                double t54846 = 1.0/pow(rho_b[index],8.0/3.0);
                double t54847 = gamma_bb[index]*t54846*(1.0/2.0);
                double t54848 = t54845+t54847;
                double t54849 = gcab*t54848;
                double t54850 = t54849+1.0;
                double t54851 = t54848*t54848;
                double t54852 = t54842*t54851;
                double t54853 = gcab*t54848*2.0;
                double t54854 = t54852+t54853+1.0;
                double t54855 = t54842*t54842;
                double t54872 = gcab*t54846*2.0;
                double t54873 = t54842*t54846*t54848*6.0;
                double t54874 = gcab*t54842*t54851*t54846*6.0;
                double t54875 = t54851*t54846*t54855*t54848*2.0;
                double t54856 = t54872+t54873+t54874+t54875;
                double t54857 = t54851*t54851;
                double t54877 = gcab*t54846*(3.0/2.0);
                double t54878 = t54842*t54846*t54848*3.0;
                double t54879 = gcab*t54842*t54851*t54846*(3.0/2.0);
                double t54858 = t54877+t54878+t54879;
                double t54859 = t54842*t54851*3.0;
                double t54860 = gcab*t54842*t54851*t54848;
                double t54861 = gcab*t54848*3.0;
                double t54862 = t54860+t54861+t54859+1.0;
                double t54869 = gcab*t54846;
                double t54870 = t54842*t54846*t54848;
                double t54863 = t54870+t54869;
                double t54864 = t54842*t54851*6.0;
                double t54865 = gcab*t54842*t54851*t54848*4.0;
                double t54866 = t54855*t54857;
                double t54867 = gcab*t54848*4.0;
                double t54868 = t54864+t54865+t54866+t54867+1.0;
                double t54871 = 1.0/(t54854*t54854);
                double t54876 = 1.0/(t54868*t54868);
                double t54880 = 1.0/(t54862*t54862);
                double t54881 = gx*gx;
                double t54882 = gamma_bb[index]*gamma_bb[index];
                double t54883 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t54884 = t54881*t54881;
                double t54885 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t54886 = gamma_bb[index]*gx*t54846;
                double t54887 = t54886+1.0;
                double t54888 = gamma_bb[index]*gx*t54846*2.0;
                double t54889 = t54843*t54881*t54882;
                double t54890 = t54888+t54889+1.0;
                double t54891 = gamma_bb[index]*gx*t54846*3.0;
                double t54892 = gamma_bb[index]*gx*t54881*t54882*t54883;
                double t54893 = t54843*t54881*t54882*3.0;
                double t54894 = t54891+t54892+t54893+1.0;
                double t54895 = t54882*t54882;
                double t54911 = gx*t54846*4.0;
                double t54912 = gamma_bb[index]*t54843*t54881*1.2E1;
                double t54913 = gx*t54881*t54882*t54883*1.2E1;
                double t54914 = gamma_bb[index]*t54882*t54884*t54885*4.0;
                double t54896 = t54911+t54912+t54913+t54914;
                double t54897 = gamma_bb[index]*gx*t54846*4.0;
                double t54898 = gamma_bb[index]*gx*t54881*t54882*t54883*4.0;
                double t54899 = t54843*t54881*t54882*6.0;
                double t54900 = t54884*t54885*t54895;
                double t54901 = t54900+t54897+t54898+t54899+1.0;
                double t54904 = gx*t54846*2.0;
                double t54905 = gamma_bb[index]*t54843*t54881*2.0;
                double t54902 = t54904+t54905;
                double t54903 = 1.0/(t54894*t54894);
                double t54906 = 1.0/(t54890*t54890);
                double t54907 = gx*t54846*3.0;
                double t54908 = gamma_bb[index]*t54843*t54881*6.0;
                double t54909 = gx*t54881*t54882*t54883*3.0;
                double t54910 = t54907+t54908+t54909;
                double t54915 = 1.0/(t54901*t54901);
                double t54916 = b1f*t54798;
                double t54917 = b3f*t54799;
                double t54918 = b4f*t54800*t54775;
                double t54919 = b2f*c*t54796;
                double t54920 = t54916+t54917+t54918+t54919;
                double t54921 = 1.0/t54920;
                double t54922 = t54921*t54795*(1.0/2.0);
                double t54923 = t54922+1.0;
                double t54924 = log(t54923);
                double t54925 = a1f*c*t54796;
                double t54926 = t54925+1.0;
                double t54927 = t54812-c0f*t54924*t54926*2.0;
                double t54928 = t54812-t54791*t54927*t54794;
                double t54929 = gcaa*gcaa;
                double t54930 = t54929*t54929;
                double t54931 = gamma_bb[index]*gcaa*t54846;
                double t54932 = t54931+1.0;
                double t54933 = gamma_bb[index]*gcaa*t54846*2.0;
                double t54934 = t54843*t54882*t54929;
                double t54935 = t54933+t54934+1.0;
                double t54936 = gamma_bb[index]*gcaa*t54846*3.0;
                double t54937 = gamma_bb[index]*gcaa*t54882*t54883*t54929;
                double t54938 = t54843*t54882*t54929*3.0;
                double t54939 = t54936+t54937+t54938+1.0;
                double t54955 = gcaa*t54846*4.0;
                double t54956 = gamma_bb[index]*t54843*t54929*1.2E1;
                double t54957 = gcaa*t54882*t54883*t54929*1.2E1;
                double t54958 = gamma_bb[index]*t54930*t54882*t54885*4.0;
                double t54940 = t54955+t54956+t54957+t54958;
                double t54941 = gamma_bb[index]*gcaa*t54846*4.0;
                double t54942 = gamma_bb[index]*gcaa*t54882*t54883*t54929*4.0;
                double t54943 = t54843*t54882*t54929*6.0;
                double t54944 = t54930*t54885*t54895;
                double t54945 = t54941+t54942+t54943+t54944+1.0;
                double t54948 = gcaa*t54846*2.0;
                double t54949 = gamma_bb[index]*t54843*t54929*2.0;
                double t54946 = t54948+t54949;
                double t54947 = 1.0/(t54939*t54939);
                double t54950 = 1.0/(t54935*t54935);
                double t54951 = gcaa*t54846*3.0;
                double t54952 = gamma_bb[index]*t54843*t54929*6.0;
                double t54953 = gcaa*t54882*t54883*t54929*3.0;
                double t54954 = t54951+t54952+t54953;
                double t54959 = 1.0/(t54945*t54945);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t54928+t54813*(t54830-t54841*t54835*t54836*t54794*(t54830- \
                   c0f*log((t54795*(1.0/2.0))/(b1f*t54816+b3f*t54817+b2f*c*t54814+b4f*t54818*t54775)+1.0)*(a1f*c*t54814+ \
                   1.0)*2.0)+(Aa*t54841*t54794*log((1.0/2.0)/(Aa*(b1a*t54816+b3a*t54817+b2a*c*t54814+b4a*t54818*t54775) \
                   )+1.0)*(t54835*t54836-1.0)*(a1a*c*t54814+1.0)*2.0)/d2fz0)+rho_a[index]*(t54791*t54794*(c0p*t54786* \
                   t54788*2.0-c0f*log((t54795*(1.0/2.0))/(b1f*t54773+b3f*t54774+b2f*c*t54771+b4f*t54775*t54776)+1.0)* \
                   (a1f*c*t54771+1.0)*2.0)-c0p*t54786*t54788*2.0))*(ccab1*1.0/(t54850*t54850)*t54842*t54843*(1.0/2.0) \
                   -(ccab2*t54842*t54843*(1.0/2.0))/t54854-ccab2*t54842*t54851*1.0/(t54854*t54854*t54854)*(t54863*t54863) \
                   *2.0-ccab4*t54855*(t54856*t54856)*t54857*1.0/(t54868*t54868*t54868)*2.0+ccab2*t54851*t54843*t54871* \
                   t54855*(1.0/2.0)+ccab4*t54855*t54857*t54876*(t54842*t54843*3.0+t54851*t54843*t54855*3.0+gcab*t54842* \
                   t54843*t54848*6.0)-(ccab4*t54851*t54843*t54855*3.0)/t54868+ccab2*t54842*t54871*t54863*t54846*t54848* \
                   2.0-ccab1*gcab*1.0/(t54850*t54850*t54850)*t54842*t54843*t54848*(1.0/2.0)-(ccab3*gcab*t54842*t54843* \
                   t54848*(3.0/2.0))/t54862-ccab3*gcab*t54842*t54851*1.0/(t54862*t54862*t54862)*t54848*(t54858*t54858) \
                   *2.0+ccab3*gcab*t54842*t54851*t54880*t54846*t54858*3.0+ccab4*t54851*t54846*t54855*t54856*t54848*t54876* \
                   4.0+ccab3*gcab*t54842*t54851*t54880*t54848*(t54842*t54843*(3.0/2.0)+gcab*t54842*t54843*t54848*(3.0/ \
                   2.0)))-c0*pow(rho_b[index],4.0/3.0)*(cx1*t54843*t54881*1.0/(t54887*t54887)*2.0-(cx2*t54843*t54881* \
                   2.0)/t54890+cx2*t54906*t54882*t54884*t54885*2.0-(cx4*t54882*t54884*t54885*1.2E1)/t54901+cx4*t54915* \
                   t54884*t54885*t54895*(t54843*t54881*1.2E1+t54882*t54884*t54885*1.2E1+gamma_bb[index]*gx*t54881*t54883* \
                   2.4E1)-cx1*gamma_bb[index]*gx*t54881*t54883*1.0/(t54887*t54887*t54887)*2.0-(cx3*gamma_bb[index]*gx* \
                   t54881*t54883*6.0)/t54894-cx2*(t54902*t54902)*t54843*t54881*1.0/(t54890*t54890*t54890)*t54882*2.0- \
                   cx4*1.0/(t54901*t54901*t54901)*t54884*t54885*t54895*(t54896*t54896)*2.0+cx2*gamma_bb[index]*t54902* \
                   t54843*t54906*t54881*4.0+cx4*gamma_bb[index]*t54915*t54882*t54884*t54885*t54896*8.0+cx3*gx*t54910* \
                   t54903*t54881*t54882*t54883*6.0+cx3*gamma_bb[index]*gx*t54903*t54881*t54882*t54883*(t54843*t54881* \
                   6.0+gamma_bb[index]*gx*t54881*t54883*6.0)-cx3*gamma_bb[index]*gx*(t54910*t54910)*t54881*t54882*t54883* \
                   1.0/(t54894*t54894*t54894)*2.0)+rho_b[index]*t54928*(ccaa1*1.0/(t54932*t54932)*t54843*t54929*2.0-(ccaa2* \
                   t54843*t54929*2.0)/t54935+ccaa2*t54930*t54950*t54882*t54885*2.0-(ccaa4*t54930*t54882*t54885*1.2E1) \
                   /t54945+ccaa4*t54930*t54885*t54895*t54959*(t54843*t54929*1.2E1+t54930*t54882*t54885*1.2E1+gamma_bb[index]* \
                   gcaa*t54883*t54929*2.4E1)-ccaa1*gamma_bb[index]*gcaa*1.0/(t54932*t54932*t54932)*t54883*t54929*2.0- \
                   (ccaa3*gamma_bb[index]*gcaa*t54883*t54929*6.0)/t54939-ccaa4*t54930*(t54940*t54940)*1.0/(t54945*t54945* \
                   t54945)*t54885*t54895*2.0-ccaa2*t54843*1.0/(t54935*t54935*t54935)*t54882*(t54946*t54946)*t54929*2.0+ \
                   ccaa2*gamma_bb[index]*t54950*t54843*t54946*t54929*4.0+ccaa4*gamma_bb[index]*t54930*t54940*t54882*t54885* \
                   t54959*8.0+ccaa3*gcaa*t54882*t54954*t54883*t54929*t54947*6.0+ccaa3*gamma_bb[index]*gcaa*t54882*t54883* \
                   t54929*t54947*(t54843*t54929*6.0+gamma_bb[index]*gcaa*t54883*t54929*6.0)-ccaa3*gamma_bb[index]*gcaa* \
                   t54882*(t54954*t54954)*t54883*t54929*1.0/(t54939*t54939*t54939)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t55513 = gx*gx;
                double t55514 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t55515 = 1.0/pow(rho_b[index],8.0/3.0);
                double t55516 = gamma_bb[index]*gamma_bb[index];
                double t55517 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t55518 = t55513*t55513;
                double t55519 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t55520 = gamma_bb[index]*gx*t55515;
                double t55521 = t55520+1.0;
                double t55522 = gamma_bb[index]*gx*t55515*2.0;
                double t55523 = t55513*t55514*t55516;
                double t55524 = t55522+t55523+1.0;
                double t55525 = gamma_bb[index]*gx*t55515*3.0;
                double t55526 = gamma_bb[index]*gx*t55513*t55516*t55517;
                double t55527 = t55513*t55514*t55516*3.0;
                double t55528 = t55525+t55526+t55527+1.0;
                double t55529 = t55516*t55516;
                double t55545 = gx*t55515*4.0;
                double t55546 = gamma_bb[index]*t55513*t55514*1.2E1;
                double t55547 = gx*t55513*t55516*t55517*1.2E1;
                double t55548 = gamma_bb[index]*t55516*t55518*t55519*4.0;
                double t55530 = t55545+t55546+t55547+t55548;
                double t55531 = gamma_bb[index]*gx*t55515*4.0;
                double t55532 = gamma_bb[index]*gx*t55513*t55516*t55517*4.0;
                double t55533 = t55513*t55514*t55516*6.0;
                double t55534 = t55518*t55519*t55529;
                double t55535 = t55531+t55532+t55533+t55534+1.0;
                double t55538 = gx*t55515*2.0;
                double t55539 = gamma_bb[index]*t55513*t55514*2.0;
                double t55536 = t55538+t55539;
                double t55537 = 1.0/(t55528*t55528);
                double t55540 = 1.0/(t55524*t55524);
                double t55541 = gx*t55515*3.0;
                double t55542 = gamma_bb[index]*t55513*t55514*6.0;
                double t55543 = gx*t55513*t55516*t55517*3.0;
                double t55544 = t55541+t55542+t55543;
                double t55549 = 1.0/(t55535*t55535);
                double t55550 = 1.0/pow(rho_b[index],1.0/3.0);
                double t55551 = c*t55550;
                double t55552 = sqrt(t55551);
                double t55553 = pow(t55551,3.0/2.0);
                double t55554 = c*c;
                double t55555 = 1.0/pow(rho_b[index],2.0/3.0);
                double t55556 = 1.0/c0p;
                double t55557 = b1p*t55552;
                double t55558 = b3p*t55553;
                double t55559 = b4p*t55554*t55555;
                double t55560 = b2p*c*t55550;
                double t55561 = t55560+t55557+t55558+t55559;
                double t55562 = 1.0/t55561;
                double t55563 = t55562*t55556*(1.0/2.0);
                double t55564 = t55563+1.0;
                double t55565 = log(t55564);
                double t55566 = a1p*c*t55550;
                double t55567 = t55566+1.0;
                double t55568 = gcaa*gcaa;
                double t55569 = t55568*t55568;
                double t55570 = gamma_bb[index]*gcaa*t55515;
                double t55571 = t55570+1.0;
                double t55572 = gamma_bb[index]*gcaa*t55515*2.0;
                double t55573 = t55514*t55516*t55568;
                double t55574 = t55572+t55573+1.0;
                double t55575 = gamma_bb[index]*gcaa*t55515*3.0;
                double t55576 = gamma_bb[index]*gcaa*t55516*t55517*t55568;
                double t55577 = t55514*t55516*t55568*3.0;
                double t55578 = t55575+t55576+t55577+1.0;
                double t55594 = gcaa*t55515*4.0;
                double t55595 = gamma_bb[index]*t55514*t55568*1.2E1;
                double t55596 = gcaa*t55516*t55517*t55568*1.2E1;
                double t55597 = gamma_bb[index]*t55516*t55519*t55569*4.0;
                double t55579 = t55594+t55595+t55596+t55597;
                double t55580 = gamma_bb[index]*gcaa*t55515*4.0;
                double t55581 = gamma_bb[index]*gcaa*t55516*t55517*t55568*4.0;
                double t55582 = t55514*t55516*t55568*6.0;
                double t55583 = t55519*t55529*t55569;
                double t55584 = t55580+t55581+t55582+t55583+1.0;
                double t55587 = gcaa*t55515*2.0;
                double t55588 = gamma_bb[index]*t55514*t55568*2.0;
                double t55585 = t55587+t55588;
                double t55586 = 1.0/(t55578*t55578);
                double t55589 = 1.0/(t55574*t55574);
                double t55590 = gcaa*t55515*3.0;
                double t55591 = gamma_bb[index]*t55514*t55568*6.0;
                double t55592 = gcaa*t55516*t55517*t55568*3.0;
                double t55593 = t55590+t55591+t55592;
                double t55598 = 1.0/(t55584*t55584);
                v_gamma_bb_gamma_bb_[index] = -c0*pow(rho_b[index],4.0/3.0)*(cx1*1.0/(t55521*t55521)*t55513*t55514* \
                   2.0-(cx2*t55513*t55514*2.0)/t55524+cx2*t55540*t55516*t55518*t55519*2.0-(cx4*t55516*t55518*t55519*1.2E1) \
                   /t55535+cx4*t55518*t55519*t55529*t55549*(t55513*t55514*1.2E1+t55516*t55518*t55519*1.2E1+gamma_bb[index]* \
                   gx*t55513*t55517*2.4E1)-cx1*gamma_bb[index]*gx*1.0/(t55521*t55521*t55521)*t55513*t55517*2.0-(cx3*gamma_bb[index]* \
                   gx*t55513*t55517*6.0)/t55528-cx2*t55513*t55514*1.0/(t55524*t55524*t55524)*t55516*(t55536*t55536)*2.0- \
                   cx4*(t55530*t55530)*1.0/(t55535*t55535*t55535)*t55518*t55519*t55529*2.0+cx2*gamma_bb[index]*t55513* \
                   t55540*t55514*t55536*4.0+cx4*gamma_bb[index]*t55530*t55516*t55518*t55519*t55549*8.0+cx3*gx*t55513* \
                   t55516*t55517*t55544*t55537*6.0+cx3*gamma_bb[index]*gx*t55513*t55516*t55517*t55537*(t55513*t55514* \
                   6.0+gamma_bb[index]*gx*t55513*t55517*6.0)-cx3*gamma_bb[index]*gx*t55513*t55516*t55517*(t55544*t55544) \
                   *1.0/(t55528*t55528*t55528)*2.0)+rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t55552+b3f*t55553+b2f*c*t55550+b4f*t55554*t55555))+1.0)*(a1f*c*t55550+1.0)*2.0-c0p*t55565*t55567* \
                   2.0))/(two_13*2.0-2.0)+c0p*t55565*t55567*2.0)*(ccaa1*t55514*1.0/(t55571*t55571)*t55568*2.0-(ccaa2* \
                   t55514*t55568*2.0)/t55574+ccaa2*t55516*t55519*t55569*t55589*2.0-(ccaa4*t55516*t55519*t55569*1.2E1) \
                   /t55584+ccaa4*t55519*t55529*t55569*t55598*(t55514*t55568*1.2E1+t55516*t55519*t55569*1.2E1+gamma_bb[index]* \
                   gcaa*t55517*t55568*2.4E1)-ccaa1*gamma_bb[index]*gcaa*t55517*1.0/(t55571*t55571*t55571)*t55568*2.0- \
                   (ccaa3*gamma_bb[index]*gcaa*t55517*t55568*6.0)/t55578-ccaa2*t55514*t55516*1.0/(t55574*t55574*t55574) \
                   *(t55585*t55585)*t55568*2.0-ccaa4*t55519*t55529*1.0/(t55584*t55584*t55584)*t55569*(t55579*t55579)* \
                   2.0+ccaa2*gamma_bb[index]*t55514*t55585*t55568*t55589*4.0+ccaa4*gamma_bb[index]*t55516*t55519*t55569* \
                   t55579*t55598*8.0+ccaa3*gcaa*t55516*t55517*t55593*t55568*t55586*6.0+ccaa3*gamma_bb[index]*gcaa*t55516* \
                   t55517*t55568*t55586*(t55514*t55568*6.0+gamma_bb[index]*gcaa*t55517*t55568*6.0)-ccaa3*gamma_bb[index]* \
                   gcaa*t55516*t55517*(t55593*t55593)*t55568*1.0/(t55578*t55578*t55578)*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

