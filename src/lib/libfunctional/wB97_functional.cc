/**********************************************************
* wB97_functional.cc: definitions for wB97_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wB97_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wB97_Functional::wB97_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wB97";
    description_ = "wB97 Range-Corrected Power Series GGA";
    citation_ = "J. Chai and M. Head-Gordon, J. Chem. Phys., 128, pp. 084106, 2008";

    double omega = 4.0000000000000002E-01;
    params_.push_back(make_pair("omega",omega));
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 3.9905100000000000E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.7006599999999999E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 1.0729200000000001E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = 8.8821100000000008E+00;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -2.5535199999999998E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = 1.1892600000000000E+01;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -2.6945200000000000E+01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 1.7092700000000001E+01;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = 1.1311599999999999E+00;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = -2.7491500000000002E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = 1.2090000000000000E+01;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = -5.7164200000000003E+00;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wB97_Functional::~wB97_Functional()
{
}
void wB97_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t142490 = 1.0/pow(rho_a[index],1.0/3.0);
            double t142491 = c*t142490;
            double t142492 = sqrt(t142491);
            double t142493 = pow(t142491,3.0/2.0);
            double t142494 = c*c;
            double t142495 = 1.0/pow(rho_a[index],2.0/3.0);
            double t142496 = 1.0/c0p;
            double t142497 = b1p*t142492;
            double t142498 = b3p*t142493;
            double t142499 = b4p*t142494*t142495;
            double t142500 = b2p*c*t142490;
            double t142501 = t142500+t142497+t142498+t142499;
            double t142502 = 1.0/t142501;
            double t142503 = t142502*t142496*(1.0/2.0);
            double t142504 = t142503+1.0;
            double t142505 = log(t142504);
            double t142506 = a1p*c*t142490;
            double t142507 = t142506+1.0;
            double t142508 = rho_a[index]*2.0;
            double t142509 = 1.0/pow(t142508,1.0/3.0);
            double t142510 = c*t142509;
            double t142511 = gamma_aa[index]*gamma_aa[index];
            double t142512 = gcab*gcab;
            double t142513 = t142511*t142511;
            double t142514 = t142512*t142512;
            double t142515 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t142516 = 1.0/pow(rho_a[index],8.0/3.0);
            double t142517 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t142518 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t142519 = pow(2.0,1.0/3.0);
            double t142520 = t142519*2.0;
            double t142521 = t142520-2.0;
            double t142522 = two_13*2.0;
            double t142523 = t142522-2.0;
            double t142524 = 1.0/t142523;
            double t142525 = 1.0/c0f;
            double t142526 = b1f*t142492;
            double t142527 = b3f*t142493;
            double t142528 = b4f*t142494*t142495;
            double t142529 = b2f*c*t142490;
            double t142530 = t142526+t142527+t142528+t142529;
            double t142531 = 1.0/t142530;
            double t142532 = t142531*t142525*(1.0/2.0);
            double t142533 = t142532+1.0;
            double t142534 = log(t142533);
            double t142535 = a1f*c*t142490;
            double t142536 = t142535+1.0;
            double t142537 = c0f*t142534*t142536*2.0;
            double t142538 = c0p*t142505*t142507*2.0;
            double t142539 = gcaa*gcaa;
            double t142540 = t142539*t142539;
            double t142541 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t142542 = 1.0/pow(t142541,1.0/3.0);
            double t142543 = 1.0/(omega*omega);
            double t142544 = pow(t142541,2.0/3.0);
            double t142545 = exp(-t142543*t142544);
            double t142546 = gx*gx;
            double t142547 = t142546*t142546;
            functional_[index] = (rho_a[index]*(t142538+t142521*t142524*(t142537-c0p*t142505*t142507*2.0))*2.0- \
               c0p*rho_a[index]*log((t142496*(1.0/2.0))/(b1p*sqrt(t142510)+b3p*pow(t142510,3.0/2.0)+b4p*1.0/pow(t142508,2.0/ \
               3.0)*t142494+b2p*c*t142509)+1.0)*(a1p*c*t142509+1.0)*4.0)*(ccab0+(ccab2*t142511*t142512*t142518)/(gamma_aa[index]* \
               gcab*t142516*2.0+t142511*t142512*t142518+1.0)+(ccab1*gamma_aa[index]*gcab*t142516)/(gamma_aa[index]* \
               gcab*t142516+1.0)+(ccab4*t142513*t142514*t142515)/(gamma_aa[index]*gcab*t142516*4.0+t142511*t142512* \
               t142518*6.0+t142513*t142514*t142515+gamma_aa[index]*gcab*t142511*t142512*t142517*4.0+1.0)+(ccab3*gamma_aa[index]* \
               gcab*t142511*t142512*t142517)/(gamma_aa[index]*gcab*t142516*3.0+t142511*t142512*t142518*3.0+gamma_aa[index]* \
               gcab*t142511*t142512*t142517+1.0))-rho_a[index]*(t142538+t142521*t142524*(t142537-t142538))*(ccaa0+ \
               (ccaa2*t142511*t142518*t142539)/(gamma_aa[index]*gcaa*t142516*2.0+t142511*t142518*t142539+1.0)+(ccaa1* \
               gamma_aa[index]*gcaa*t142516)/(gamma_aa[index]*gcaa*t142516+1.0)+(ccaa4*t142513*t142540*t142515)/(gamma_aa[index]* \
               gcaa*t142516*4.0+t142513*t142540*t142515+t142511*t142518*t142539*6.0+gamma_aa[index]*gcaa*t142511* \
               t142517*t142539*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa*t142511*t142517*t142539)/(gamma_aa[index]*gcaa* \
               t142516*3.0+t142511*t142518*t142539*3.0+gamma_aa[index]*gcaa*t142511*t142517*t142539+1.0))*2.0-c0* \
               pow(rho_a[index],4.0/3.0)*(omega*t142542*(erf(pow(t142541,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t142542*(-t142545+(omega*omega)*1.0/pow(t142541,2.0/3.0)*(t142545-1.0)*(1.0/2.0)+3.0/2.0))* \
               (4.0/3.0)-1.0)*(cx0+(cx2*t142511*t142518*t142546)/(gamma_aa[index]*gx*t142516*2.0+t142511*t142518* \
               t142546+1.0)+(cx1*gamma_aa[index]*gx*t142516)/(gamma_aa[index]*gx*t142516+1.0)+(cx4*t142513*t142515* \
               t142547)/(gamma_aa[index]*gx*t142516*4.0+t142511*t142518*t142546*6.0+t142513*t142515*t142547+gamma_aa[index]* \
               gx*t142511*t142517*t142546*4.0+1.0)+(cx3*gamma_aa[index]*gx*t142511*t142517*t142546)/(gamma_aa[index]* \
               gx*t142516*3.0+t142511*t142518*t142546*3.0+gamma_aa[index]*gx*t142511*t142517*t142546+1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t142549 = gamma_aa[index]*gamma_aa[index];
            double t142550 = gcab*gcab;
            double t142551 = t142549*t142549;
            double t142552 = t142550*t142550;
            double t142553 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t142554 = 1.0/pow(rho_a[index],8.0/3.0);
            double t142555 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t142556 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t142557 = rho_a[index]*2.0;
            double t142558 = 1.0/pow(t142557,1.0/3.0);
            double t142559 = c*t142558;
            double t142560 = sqrt(t142559);
            double t142561 = b1p*t142560;
            double t142562 = pow(t142559,3.0/2.0);
            double t142563 = b3p*t142562;
            double t142564 = b2p*c*t142558;
            double t142565 = c*c;
            double t142566 = 1.0/pow(t142557,2.0/3.0);
            double t142567 = b4p*t142565*t142566;
            double t142568 = t142561+t142563+t142564+t142567;
            double t142569 = 1.0/pow(t142557,4.0/3.0);
            double t142570 = 1.0/c0p;
            double t142571 = 1.0/t142568;
            double t142572 = t142570*t142571*(1.0/2.0);
            double t142573 = t142572+1.0;
            double t142574 = 1.0/pow(rho_a[index],1.0/3.0);
            double t142575 = c*t142574;
            double t142576 = sqrt(t142575);
            double t142577 = b1f*t142576;
            double t142578 = pow(t142575,3.0/2.0);
            double t142579 = b3f*t142578;
            double t142580 = 1.0/pow(rho_a[index],2.0/3.0);
            double t142581 = b4f*t142580*t142565;
            double t142582 = b2f*c*t142574;
            double t142583 = t142581+t142582+t142577+t142579;
            double t142584 = 1.0/pow(rho_a[index],4.0/3.0);
            double t142585 = b1p*t142576;
            double t142586 = b3p*t142578;
            double t142587 = b4p*t142580*t142565;
            double t142588 = b2p*c*t142574;
            double t142589 = t142585+t142586+t142587+t142588;
            double t142590 = 1.0/pow(rho_a[index],5.0/3.0);
            double t142591 = 1.0/sqrt(t142575);
            double t142592 = 1.0/c0f;
            double t142593 = 1.0/t142583;
            double t142594 = t142592*t142593*(1.0/2.0);
            double t142595 = t142594+1.0;
            double t142596 = 1.0/t142589;
            double t142597 = t142570*t142596*(1.0/2.0);
            double t142598 = t142597+1.0;
            double t142599 = a1p*c*t142574;
            double t142600 = t142599+1.0;
            double t142601 = 1.0/t142598;
            double t142602 = 1.0/(t142589*t142589);
            double t142603 = b4p*t142590*t142565*(2.0/3.0);
            double t142604 = b2p*c*t142584*(1.0/3.0);
            double t142605 = b1p*c*t142591*t142584*(1.0/6.0);
            double t142606 = b3p*c*t142584*t142576*(1.0/2.0);
            double t142607 = t142603+t142604+t142605+t142606;
            double t142608 = t142600*t142601*t142602*t142607;
            double t142609 = log(t142598);
            double t142610 = log(t142573);
            double t142611 = a1p*c*t142558;
            double t142612 = t142611+1.0;
            double t142613 = pow(2.0,1.0/3.0);
            double t142614 = t142613*2.0;
            double t142615 = t142614-2.0;
            double t142616 = two_13*2.0;
            double t142617 = t142616-2.0;
            double t142618 = 1.0/t142617;
            double t142619 = log(t142595);
            double t142620 = a1f*c*t142574;
            double t142621 = t142620+1.0;
            double t142622 = c0f*t142621*t142619*2.0;
            double t142624 = c0p*t142600*t142609*2.0;
            double t142623 = t142622-t142624;
            double t142625 = gcaa*gcaa;
            double t142626 = t142625*t142625;
            double t142627 = t142623*t142615*t142618;
            double t142628 = t142624+t142627;
            double t142629 = gamma_aa[index]*gcab*t142554*4.0;
            double t142630 = gamma_aa[index]*gcab*t142550*t142555*t142549*4.0;
            double t142631 = t142550*t142556*t142549*6.0;
            double t142632 = t142551*t142552*t142553;
            double t142633 = t142630+t142631+t142632+t142629+1.0;
            double t142634 = 1.0/t142633;
            double t142635 = gamma_aa[index]*gcab*t142554;
            double t142636 = t142635+1.0;
            double t142637 = 1.0/t142636;
            double t142638 = gamma_aa[index]*gcab*t142554*3.0;
            double t142639 = gamma_aa[index]*gcab*t142550*t142555*t142549;
            double t142640 = t142550*t142556*t142549*3.0;
            double t142641 = t142640+t142638+t142639+1.0;
            double t142642 = 1.0/t142641;
            double t142643 = gamma_aa[index]*gcab*t142554*2.0;
            double t142644 = t142550*t142556*t142549;
            double t142645 = t142643+t142644+1.0;
            double t142646 = 1.0/t142645;
            double t142647 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t142648 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t142649 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t142650 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t142651 = gamma_aa[index]*gcaa*t142554*4.0;
            double t142652 = gamma_aa[index]*gcaa*t142625*t142555*t142549*4.0;
            double t142653 = t142625*t142556*t142549*6.0;
            double t142654 = t142551*t142553*t142626;
            double t142655 = t142651+t142652+t142653+t142654+1.0;
            double t142656 = 1.0/t142655;
            double t142657 = gamma_aa[index]*gcaa*t142554;
            double t142658 = t142657+1.0;
            double t142659 = 1.0/t142658;
            double t142660 = gamma_aa[index]*gcaa*t142554*3.0;
            double t142661 = gamma_aa[index]*gcaa*t142625*t142555*t142549;
            double t142662 = t142625*t142556*t142549*3.0;
            double t142663 = t142660+t142661+t142662+1.0;
            double t142664 = 1.0/t142663;
            double t142665 = gamma_aa[index]*gcaa*t142554*2.0;
            double t142666 = t142625*t142556*t142549;
            double t142667 = t142665+t142666+1.0;
            double t142668 = 1.0/t142667;
            double t142669 = 1.0/t142595;
            double t142670 = 1.0/(t142583*t142583);
            double t142671 = b4f*t142590*t142565*(2.0/3.0);
            double t142672 = b2f*c*t142584*(1.0/3.0);
            double t142673 = b1f*c*t142591*t142584*(1.0/6.0);
            double t142674 = b3f*c*t142584*t142576*(1.0/2.0);
            double t142675 = t142671+t142672+t142673+t142674;
            double t142676 = a1f*c*c0f*t142619*t142584*(2.0/3.0);
            double t142677 = a1p*c*c0p*t142609*t142584*(2.0/3.0);
            double t142678 = ccaa4*t142551*t142553*t142626*t142656;
            double t142679 = ccaa1*gamma_aa[index]*gcaa*t142554*t142659;
            double t142680 = ccaa3*gamma_aa[index]*gcaa*t142625*t142555*t142664*t142549;
            double t142681 = ccaa2*t142625*t142556*t142549*t142668;
            double t142682 = ccaa0+t142680+t142681+t142678+t142679;
            double t142683 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t142684 = 1.0/(omega*omega);
            double t142685 = pow(t142683,2.0/3.0);
            double t142688 = t142684*t142685;
            double t142686 = exp(-t142688);
            double t142687 = 1.0/pow(t142683,1.0/3.0);
            double t142689 = omega*omega;
            double t142690 = t142686-1.0;
            double t142691 = 1.0/pow(t142683,2.0/3.0);
            double t142692 = 1.0/pow(t142683,4.0/3.0);
            double t142693 = 1.0/omega;
            double t142694 = t142690*t142691*t142689*(1.0/2.0);
            double t142695 = t142694-t142686+3.0/2.0;
            double t142696 = gx*gx;
            double t142697 = t142696*t142696;
            double t142698 = pow(rho_a[index],4.0/3.0);
            double t142699 = pow(t142683,1.0/3.0);
            double t142700 = t142693*t142699;
            double t142701 = erf(t142700);
            double t142702 = t142701*(3.991211251234741E15/2.251799813685248E15);
            double t142722 = omega*t142695*t142687;
            double t142703 = t142702-t142722;
            double t142704 = gamma_aa[index]*gx*t142554*4.0;
            double t142705 = gamma_aa[index]*gx*t142555*t142549*t142696*4.0;
            double t142706 = t142556*t142549*t142696*6.0;
            double t142707 = t142551*t142553*t142697;
            double t142708 = t142704+t142705+t142706+t142707+1.0;
            double t142709 = 1.0/t142708;
            double t142710 = gamma_aa[index]*gx*t142554;
            double t142711 = t142710+1.0;
            double t142712 = 1.0/t142711;
            double t142713 = gamma_aa[index]*gx*t142554*3.0;
            double t142714 = gamma_aa[index]*gx*t142555*t142549*t142696;
            double t142715 = t142556*t142549*t142696*3.0;
            double t142716 = t142713+t142714+t142715+1.0;
            double t142717 = 1.0/t142716;
            double t142718 = gamma_aa[index]*gx*t142554*2.0;
            double t142719 = t142556*t142549*t142696;
            double t142720 = t142718+t142719+1.0;
            double t142721 = 1.0/t142720;
            double t142723 = omega*t142703*t142687*(4.0/3.0);
            double t142724 = t142723-1.0;
            double t142725 = cx4*t142551*t142553*t142709*t142697;
            double t142726 = cx1*gamma_aa[index]*gx*t142712*t142554;
            double t142727 = cx3*gamma_aa[index]*gx*t142555*t142717*t142549*t142696;
            double t142728 = cx2*t142721*t142556*t142549*t142696;
            double t142729 = cx0+t142725+t142726+t142727+t142728;
            v_rho_a_[index] = -(rho_a[index]*t142628*2.0-c0p*rho_a[index]*t142610*t142612*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t142637*t142648*(4.0/3.0)+ccab4*t142551*t142650*t142552*t142634*(1.6E1/3.0)+ccab2*t142550*t142646* \
               t142647*t142549*(8.0/3.0)-ccab1*t142550*1.0/(t142636*t142636)*t142647*t142549*(4.0/3.0)-ccab2*t142550* \
               1.0/(t142645*t142645)*t142556*t142549*(gamma_aa[index]*gcab*t142648*(8.0/3.0)+t142550*t142647*t142549* \
               (8.0/3.0))-ccab4*t142551*t142552*1.0/(t142633*t142633)*t142553*(gamma_aa[index]*gcab*t142648*(1.6E1/ \
               3.0)+t142551*t142650*t142552*(1.6E1/3.0)+t142550*t142647*t142549*1.6E1+gamma_aa[index]*gcab*t142550* \
               t142549*t142649*1.6E1)+ccab3*gamma_aa[index]*gcab*t142550*t142642*t142549*t142649*4.0-ccab3*gamma_aa[index]* \
               gcab*t142550*1.0/(t142641*t142641)*t142555*t142549*(gamma_aa[index]*gcab*t142648*4.0+t142550*t142647* \
               t142549*8.0+gamma_aa[index]*gcab*t142550*t142549*t142649*4.0))-t142628*t142682-(rho_a[index]*((t142612* \
               1.0/(t142568*t142568)*(b4p*t142565*1.0/pow(t142557,5.0/3.0)*(2.0/3.0)+b2p*c*t142569*(1.0/3.0)+b3p* \
               c*t142560*t142569*(1.0/2.0)+b1p*c*1.0/sqrt(t142559)*t142569*(1.0/6.0)))/t142573-a1p*c*c0p*t142610* \
               t142569*(2.0/3.0))*2.0+rho_a[index]*(-t142608+t142677+t142615*t142618*(t142608+t142676-t142621*t142670* \
               t142675*t142669-a1p*c*c0p*t142609*t142584*(2.0/3.0)))+c0p*t142610*t142612*2.0-c0p*t142600*t142609* \
               2.0-t142623*t142615*t142618)*(ccab0+ccab1*gamma_aa[index]*gcab*t142554*t142637+ccab4*t142551*t142552* \
               t142553*t142634+ccab2*t142550*t142556*t142646*t142549+ccab3*gamma_aa[index]*gcab*t142550*t142642*t142555* \
               t142549)+rho_a[index]*t142628*(ccaa1*gamma_aa[index]*gcaa*t142648*t142659*(8.0/3.0)+ccaa4*t142551* \
               t142650*t142626*t142656*(3.2E1/3.0)+ccaa2*t142625*t142647*t142549*t142668*(1.6E1/3.0)-ccaa1*t142625* \
               t142647*t142549*1.0/(t142658*t142658)*(8.0/3.0)-ccaa2*t142625*t142556*t142549*1.0/(t142667*t142667) \
               *(gamma_aa[index]*gcaa*t142648*(1.6E1/3.0)+t142625*t142647*t142549*(1.6E1/3.0))-ccaa4*t142551*t142553* \
               t142626*1.0/(t142655*t142655)*(gamma_aa[index]*gcaa*t142648*(3.2E1/3.0)+t142551*t142650*t142626*(3.2E1/ \
               3.0)+t142625*t142647*t142549*3.2E1+gamma_aa[index]*gcaa*t142625*t142549*t142649*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t142625*t142664*t142549*t142649*8.0-ccaa3*gamma_aa[index]*gcaa*t142625*t142555*1.0/(t142663*t142663) \
               *t142549*(gamma_aa[index]*gcaa*t142648*8.0+t142625*t142647*t142549*1.6E1+gamma_aa[index]*gcaa*t142625* \
               t142549*t142649*8.0))+rho_a[index]*t142682*(-t142608+t142677+t142615*t142618*(t142608+t142676-t142677- \
               t142621*t142670*t142675*t142669))-c0*t142729*t142698*(omega*t142687*(omega*t142692*t142695*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t142687*((t142686*(1.0/3.0))/rho_a[index]+t142690*1.0/pow(t142683,5.0/3.0) \
               *t142689*(2.778046668940015E15/1.40737488355328E14)-t142684*t142686*t142687*(2.778046668940015E15/ \
               7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t142691*t142693*t142686*(1.108777112152858E31/1.584563250285287E29) \
               )*(4.0/3.0)-omega*t142703*t142692*(2.778046668940015E15/1.05553116266496E14))-c0*pow(rho_a[index],1.0/ \
               3.0)*t142724*t142729*(4.0/3.0)+c0*t142724*t142698*(cx1*gamma_aa[index]*gx*t142712*t142648*(8.0/3.0) \
               +cx2*t142721*t142647*t142549*t142696*(1.6E1/3.0)+cx4*t142551*t142650*t142709*t142697*(3.2E1/3.0)-cx1* \
               1.0/(t142711*t142711)*t142647*t142549*t142696*(8.0/3.0)-cx2*1.0/(t142720*t142720)*t142556*t142549* \
               t142696*(gamma_aa[index]*gx*t142648*(1.6E1/3.0)+t142647*t142549*t142696*(1.6E1/3.0))-cx4*t142551*t142553* \
               1.0/(t142708*t142708)*t142697*(gamma_aa[index]*gx*t142648*(3.2E1/3.0)+t142551*t142650*t142697*(3.2E1/ \
               3.0)+t142647*t142549*t142696*3.2E1+gamma_aa[index]*gx*t142549*t142649*t142696*3.2E1)+cx3*gamma_aa[index]* \
               gx*t142717*t142549*t142649*t142696*8.0-cx3*gamma_aa[index]*gx*1.0/(t142716*t142716)*t142555*t142549* \
               t142696*(gamma_aa[index]*gx*t142648*8.0+t142647*t142549*t142696*1.6E1+gamma_aa[index]*gx*t142549*t142649* \
               t142696*8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t142731 = 1.0/pow(rho_a[index],1.0/3.0);
                double t142732 = c*t142731;
                double t142733 = sqrt(t142732);
                double t142734 = pow(t142732,3.0/2.0);
                double t142735 = c*c;
                double t142736 = 1.0/pow(rho_a[index],2.0/3.0);
                double t142737 = 1.0/c0p;
                double t142738 = b1p*t142733;
                double t142739 = b3p*t142734;
                double t142740 = b4p*t142735*t142736;
                double t142741 = b2p*c*t142731;
                double t142742 = t142740+t142741+t142738+t142739;
                double t142743 = 1.0/t142742;
                double t142744 = t142743*t142737*(1.0/2.0);
                double t142745 = t142744+1.0;
                double t142746 = log(t142745);
                double t142747 = a1p*c*t142731;
                double t142748 = t142747+1.0;
                double t142749 = rho_a[index]*2.0;
                double t142750 = 1.0/pow(t142749,1.0/3.0);
                double t142751 = c*t142750;
                double t142752 = 1.0/pow(rho_a[index],8.0/3.0);
                double t142753 = gamma_aa[index]*gamma_aa[index];
                double t142754 = gcab*gcab;
                double t142755 = t142754*t142754;
                double t142756 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t142757 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t142758 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t142759 = gamma_aa[index]*gcab*t142752;
                double t142760 = t142759+1.0;
                double t142761 = gamma_aa[index]*gcab*t142752*3.0;
                double t142762 = gamma_aa[index]*gcab*t142753*t142754*t142758;
                double t142763 = t142753*t142754*t142757*3.0;
                double t142764 = t142761+t142762+t142763+1.0;
                double t142765 = t142753*t142753;
                double t142766 = gamma_aa[index]*gcab*t142752*4.0;
                double t142767 = gamma_aa[index]*gcab*t142753*t142754*t142758*4.0;
                double t142768 = t142753*t142754*t142757*6.0;
                double t142769 = t142755*t142756*t142765;
                double t142770 = t142766+t142767+t142768+t142769+1.0;
                double t142771 = gamma_aa[index]*gcab*t142752*2.0;
                double t142772 = t142753*t142754*t142757;
                double t142773 = t142771+t142772+1.0;
                double t142774 = pow(2.0,1.0/3.0);
                double t142775 = t142774*2.0;
                double t142776 = t142775-2.0;
                double t142777 = two_13*2.0;
                double t142778 = t142777-2.0;
                double t142779 = 1.0/t142778;
                double t142780 = 1.0/c0f;
                double t142781 = b1f*t142733;
                double t142782 = b3f*t142734;
                double t142783 = b4f*t142735*t142736;
                double t142784 = b2f*c*t142731;
                double t142785 = t142781+t142782+t142783+t142784;
                double t142786 = 1.0/t142785;
                double t142787 = t142780*t142786*(1.0/2.0);
                double t142788 = t142787+1.0;
                double t142789 = log(t142788);
                double t142790 = a1f*c*t142731;
                double t142791 = t142790+1.0;
                double t142792 = c0f*t142791*t142789*2.0;
                double t142793 = c0p*t142746*t142748*2.0;
                double t142794 = gcaa*gcaa;
                double t142795 = t142794*t142794;
                double t142796 = gamma_aa[index]*gcaa*t142752;
                double t142797 = t142796+1.0;
                double t142798 = gamma_aa[index]*gcaa*t142752*3.0;
                double t142799 = gamma_aa[index]*gcaa*t142753*t142758*t142794;
                double t142800 = t142753*t142757*t142794*3.0;
                double t142801 = t142800+t142798+t142799+1.0;
                double t142802 = gamma_aa[index]*gcaa*t142752*4.0;
                double t142803 = gamma_aa[index]*gcaa*t142753*t142758*t142794*4.0;
                double t142804 = t142753*t142757*t142794*6.0;
                double t142805 = t142756*t142765*t142795;
                double t142806 = t142802+t142803+t142804+t142805+1.0;
                double t142807 = gamma_aa[index]*gcaa*t142752*2.0;
                double t142808 = t142753*t142757*t142794;
                double t142809 = t142807+t142808+1.0;
                double t142810 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t142811 = 1.0/pow(t142810,1.0/3.0);
                double t142812 = 1.0/(omega*omega);
                double t142813 = pow(t142810,2.0/3.0);
                double t142814 = exp(-t142812*t142813);
                double t142815 = gx*gx;
                double t142816 = t142815*t142815;
                double t142817 = gamma_aa[index]*gx*t142752;
                double t142818 = t142817+1.0;
                double t142819 = gamma_aa[index]*gx*t142752*3.0;
                double t142820 = gamma_aa[index]*gx*t142815*t142753*t142758;
                double t142821 = t142815*t142753*t142757*3.0;
                double t142822 = t142820+t142821+t142819+1.0;
                double t142823 = gamma_aa[index]*gx*t142752*4.0;
                double t142824 = gamma_aa[index]*gx*t142815*t142753*t142758*4.0;
                double t142825 = t142815*t142753*t142757*6.0;
                double t142826 = t142816*t142756*t142765;
                double t142827 = t142823+t142824+t142825+t142826+1.0;
                double t142828 = gamma_aa[index]*gx*t142752*2.0;
                double t142829 = t142815*t142753*t142757;
                double t142830 = t142828+t142829+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t142793+t142776*t142779*(t142792-c0p*t142746*t142748*2.0))*2.0- \
                   c0p*rho_a[index]*log((t142737*(1.0/2.0))/(b1p*sqrt(t142751)+b3p*pow(t142751,3.0/2.0)+b4p*t142735*1.0/ \
                   pow(t142749,2.0/3.0)+b2p*c*t142750)+1.0)*(a1p*c*t142750+1.0)*4.0)*((ccab1*gcab*t142752*(1.0/2.0))/ \
                   t142760-ccab1*gamma_aa[index]*1.0/(t142760*t142760)*t142754*t142757*(1.0/2.0)+(ccab2*gamma_aa[index]* \
                   t142754*t142757)/t142773-ccab2*t142753*t142754*1.0/(t142773*t142773)*t142757*(gcab*t142752+gamma_aa[index]* \
                   t142754*t142757)+(ccab4*gamma_aa[index]*t142753*t142755*t142756*2.0)/t142770+(ccab3*gcab*t142753*t142754* \
                   t142758*(3.0/2.0))/t142764-ccab4*1.0/(t142770*t142770)*t142755*t142756*t142765*(gcab*t142752*2.0+gamma_aa[index]* \
                   t142754*t142757*6.0+gamma_aa[index]*t142753*t142755*t142756*2.0+gcab*t142753*t142754*t142758*6.0)- \
                   ccab3*gamma_aa[index]*gcab*t142753*t142754*1.0/(t142764*t142764)*t142758*(gcab*t142752*(3.0/2.0)+gamma_aa[index]* \
                   t142754*t142757*3.0+gcab*t142753*t142754*t142758*(3.0/2.0)))*2.0-rho_a[index]*(t142793+t142776*t142779* \
                   (t142792-t142793))*((ccaa1*gcaa*t142752)/t142797+(ccaa2*gamma_aa[index]*t142757*t142794*2.0)/t142809- \
                   ccaa1*gamma_aa[index]*t142757*t142794*1.0/(t142797*t142797)-ccaa2*t142753*1.0/(t142809*t142809)*t142757* \
                   t142794*(gcaa*t142752*2.0+gamma_aa[index]*t142757*t142794*2.0)+(ccaa4*gamma_aa[index]*t142753*t142756* \
                   t142795*4.0)/t142806+(ccaa3*gcaa*t142753*t142758*t142794*3.0)/t142801-ccaa4*1.0/(t142806*t142806)* \
                   t142756*t142765*t142795*(gcaa*t142752*4.0+gamma_aa[index]*t142757*t142794*1.2E1+gamma_aa[index]*t142753* \
                   t142756*t142795*4.0+gcaa*t142753*t142758*t142794*1.2E1)-ccaa3*gamma_aa[index]*gcaa*1.0/(t142801*t142801) \
                   *t142753*t142758*t142794*(gcaa*t142752*3.0+gamma_aa[index]*t142757*t142794*6.0+gcaa*t142753*t142758* \
                   t142794*3.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(omega*t142811*(erf(pow(t142810,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t142811*(-t142814+(omega*omega)*1.0/pow(t142810,2.0/3.0)*(t142814-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t142752)/t142818-cx1*gamma_aa[index]*t142815*1.0/(t142818* \
                   t142818)*t142757+(cx2*gamma_aa[index]*t142815*t142757*2.0)/t142830-cx2*1.0/(t142830*t142830)*t142815* \
                   t142753*t142757*(gx*t142752*2.0+gamma_aa[index]*t142815*t142757*2.0)+(cx4*gamma_aa[index]*t142753* \
                   t142816*t142756*4.0)/t142827+(cx3*gx*t142815*t142753*t142758*3.0)/t142822-cx4*t142816*1.0/(t142827* \
                   t142827)*t142756*t142765*(gx*t142752*4.0+gamma_aa[index]*t142815*t142757*1.2E1+gamma_aa[index]*t142753* \
                   t142816*t142756*4.0+gx*t142815*t142753*t142758*1.2E1)-cx3*gamma_aa[index]*gx*1.0/(t142822*t142822) \
                   *t142815*t142753*t142758*(gx*t142752*3.0+gamma_aa[index]*t142815*t142757*6.0+gx*t142815*t142753*t142758* \
                   3.0))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t142833 = rho_a[index]*2.0;
            double t142834 = 1.0/pow(t142833,1.0/3.0);
            double t142835 = c*t142834;
            double t142836 = sqrt(t142835);
            double t142837 = b1p*t142836;
            double t142838 = pow(t142835,3.0/2.0);
            double t142839 = b3p*t142838;
            double t142840 = b2p*c*t142834;
            double t142841 = c*c;
            double t142842 = 1.0/pow(t142833,2.0/3.0);
            double t142843 = b4p*t142841*t142842;
            double t142844 = t142840+t142843+t142837+t142839;
            double t142845 = 1.0/pow(t142833,8.0/3.0);
            double t142846 = 1.0/pow(t142833,7.0/3.0);
            double t142847 = 1.0/sqrt(t142835);
            double t142848 = 1.0/c0p;
            double t142849 = 1.0/t142844;
            double t142850 = t142848*t142849*(1.0/2.0);
            double t142851 = t142850+1.0;
            double t142852 = 1.0/t142851;
            double t142853 = a1p*c*t142834;
            double t142854 = t142853+1.0;
            double t142855 = 1.0/pow(t142833,4.0/3.0);
            double t142857 = b2p*c*t142855*(1.0/3.0);
            double t142858 = 1.0/pow(t142833,5.0/3.0);
            double t142859 = b4p*t142841*t142858*(2.0/3.0);
            double t142860 = b1p*c*t142855*t142847*(1.0/6.0);
            double t142861 = b3p*c*t142836*t142855*(1.0/2.0);
            double t142856 = t142860+t142861+t142857+t142859;
            double t142862 = t142856*t142856;
            double t142863 = 1.0/(t142844*t142844);
            double t142864 = log(t142851);
            double t142865 = gamma_aa[index]*gamma_aa[index];
            double t142866 = gcab*gcab;
            double t142867 = t142865*t142865;
            double t142868 = t142866*t142866;
            double t142869 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t142870 = 1.0/pow(rho_a[index],8.0/3.0);
            double t142871 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t142872 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t142873 = two_13*2.0;
            double t142874 = t142873-2.0;
            double t142875 = 1.0/t142874;
            double t142876 = 1.0/pow(rho_a[index],1.0/3.0);
            double t142877 = c*t142876;
            double t142878 = sqrt(t142877);
            double t142879 = pow(t142877,3.0/2.0);
            double t142880 = 1.0/pow(rho_a[index],2.0/3.0);
            double t142881 = b1p*t142878;
            double t142882 = b3p*t142879;
            double t142883 = b4p*t142841*t142880;
            double t142884 = b2p*c*t142876;
            double t142885 = t142881+t142882+t142883+t142884;
            double t142886 = 1.0/t142885;
            double t142887 = t142848*t142886*(1.0/2.0);
            double t142888 = t142887+1.0;
            double t142889 = log(t142888);
            double t142890 = a1p*c*t142876;
            double t142891 = t142890+1.0;
            double t142892 = gamma_aa[index]*gcab*t142870*4.0;
            double t142893 = gamma_aa[index]*gcab*t142871*t142865*t142866*4.0;
            double t142894 = t142872*t142865*t142866*6.0;
            double t142895 = t142867*t142868*t142869;
            double t142896 = t142892+t142893+t142894+t142895+1.0;
            double t142897 = 1.0/t142896;
            double t142898 = gamma_aa[index]*gcab*t142870;
            double t142899 = t142898+1.0;
            double t142900 = 1.0/t142899;
            double t142901 = gamma_aa[index]*gcab*t142870*3.0;
            double t142902 = gamma_aa[index]*gcab*t142871*t142865*t142866;
            double t142903 = t142872*t142865*t142866*3.0;
            double t142904 = t142901+t142902+t142903+1.0;
            double t142905 = 1.0/t142904;
            double t142906 = gamma_aa[index]*gcab*t142870*2.0;
            double t142907 = t142872*t142865*t142866;
            double t142908 = t142906+t142907+1.0;
            double t142909 = 1.0/t142908;
            double t142910 = 1.0/pow(rho_a[index],1.0E1);
            double t142911 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t142913 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t142914 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t142916 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t142923 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t142924 = gamma_aa[index]*gcab*t142913*(1.6E1/3.0);
            double t142925 = gamma_aa[index]*gcab*t142916*t142865*t142866*1.6E1;
            double t142926 = t142914*t142865*t142866*1.6E1;
            double t142927 = t142923*t142867*t142868*(1.6E1/3.0);
            double t142912 = t142924+t142925+t142926+t142927;
            double t142930 = gamma_aa[index]*gcab*t142913*(8.0/3.0);
            double t142931 = t142914*t142865*t142866*(8.0/3.0);
            double t142915 = t142930+t142931;
            double t142917 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t142918 = 1.0/(t142904*t142904);
            double t142919 = gamma_aa[index]*gcab*t142913*4.0;
            double t142920 = gamma_aa[index]*gcab*t142916*t142865*t142866*4.0;
            double t142921 = t142914*t142865*t142866*8.0;
            double t142922 = t142920+t142921+t142919;
            double t142928 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t142929 = 1.0/(t142896*t142896);
            double t142932 = 1.0/(t142908*t142908);
            double t142933 = pow(2.0,1.0/3.0);
            double t142934 = t142933*2.0;
            double t142935 = t142934-2.0;
            double t142936 = a1f*c*t142876;
            double t142937 = t142936+1.0;
            double t142938 = 1.0/c0f;
            double t142939 = b1f*t142878;
            double t142940 = b3f*t142879;
            double t142941 = b4f*t142841*t142880;
            double t142942 = b2f*c*t142876;
            double t142943 = t142940+t142941+t142942+t142939;
            double t142944 = 1.0/t142943;
            double t142945 = t142944*t142938*(1.0/2.0);
            double t142946 = t142945+1.0;
            double t142947 = 1.0/pow(rho_a[index],4.0/3.0);
            double t142948 = 1.0/pow(rho_a[index],5.0/3.0);
            double t142949 = 1.0/sqrt(t142877);
            double t142950 = log(t142946);
            double t142951 = 1.0/t142888;
            double t142952 = 1.0/(t142885*t142885);
            double t142953 = b4p*t142841*t142948*(2.0/3.0);
            double t142954 = b2p*c*t142947*(1.0/3.0);
            double t142955 = b1p*c*t142947*t142949*(1.0/6.0);
            double t142956 = b3p*c*t142947*t142878*(1.0/2.0);
            double t142957 = t142953+t142954+t142955+t142956;
            double t142958 = t142951*t142952*t142891*t142957;
            double t142959 = gcaa*gcaa;
            double t142960 = t142959*t142959;
            double t142961 = 1.0/t142946;
            double t142962 = 1.0/(t142943*t142943);
            double t142963 = b4f*t142841*t142948*(2.0/3.0);
            double t142964 = b2f*c*t142947*(1.0/3.0);
            double t142965 = b1f*c*t142947*t142949*(1.0/6.0);
            double t142966 = b3f*c*t142947*t142878*(1.0/2.0);
            double t142967 = t142963+t142964+t142965+t142966;
            double t142968 = a1f*c*c0f*t142950*t142947*(2.0/3.0);
            double t142969 = a1p*c*c0p*t142947*t142889*(2.0/3.0);
            double t142970 = c0f*t142950*t142937*2.0;
            double t142971 = c0p*t142891*t142889*2.0;
            double t142972 = 1.0/(t142899*t142899);
            double t142973 = ccab4*t142867*t142868*t142869*t142897;
            double t142974 = ccab1*gamma_aa[index]*gcab*t142900*t142870;
            double t142975 = ccab3*gamma_aa[index]*gcab*t142905*t142871*t142865*t142866;
            double t142976 = ccab2*t142872*t142909*t142865*t142866;
            double t142977 = ccab0+t142973+t142974+t142975+t142976;
            double t142978 = b2p*c*t142846*(4.0/9.0);
            double t142979 = b4p*t142841*t142845*(1.0E1/9.0);
            double t142980 = 1.0/pow(t142835,3.0/2.0);
            double t142981 = b3p*t142841*t142845*t142847*(1.0/1.2E1);
            double t142982 = b1p*c*t142846*t142847*(2.0/9.0);
            double t142983 = b3p*c*t142836*t142846*(2.0/3.0);
            double t142984 = t142981+t142982+t142983+t142978+t142979-b1p*t142841*t142845*t142980*(1.0/3.6E1);
            double t142985 = t142852*t142854*t142863*t142984;
            double t142986 = 1.0/(t142844*t142844*t142844);
            double t142987 = 1.0/(t142851*t142851);
            double t142988 = 1.0/(t142844*t142844*t142844*t142844);
            double t142989 = t142862*t142854*t142848*t142987*t142988*(1.0/2.0);
            double t142990 = 1.0/d2fz0;
            double t142991 = 1.0/(rho_a[index]*rho_a[index]);
            double t142992 = 1.0/Aa;
            double t142993 = b1a*t142836;
            double t142994 = b3a*t142838;
            double t142995 = b2a*c*t142834;
            double t142996 = b4a*t142841*t142842;
            double t142997 = t142993+t142994+t142995+t142996;
            double t142998 = 1.0/t142997;
            double t142999 = t142992*t142998*(1.0/2.0);
            double t143000 = t142999+1.0;
            double t143001 = log(t143000);
            double t143002 = a1a*c*t142834;
            double t143003 = t143002+1.0;
            double t143004 = a1p*c*t142852*t142863*t142855*t142856*(2.0/3.0);
            double t143005 = 1.0/pow(rho_a[index],7.0/3.0);
            double t143006 = 1.0/pow(t142877,3.0/2.0);
            double t143007 = t142967*t142967;
            double t143008 = t142957*t142957;
            double t143009 = 1.0/(t142885*t142885*t142885);
            double t143010 = t143008*t143009*t142951*t142891*2.0;
            double t143011 = b4p*t142841*t142870*(1.0E1/9.0);
            double t143012 = b2p*c*t143005*(4.0/9.0);
            double t143013 = b3p*t142841*t142870*t142949*(1.0/1.2E1);
            double t143014 = b1p*c*t143005*t142949*(2.0/9.0);
            double t143015 = b3p*c*t143005*t142878*(2.0/3.0);
            double t143089 = b1p*t143006*t142841*t142870*(1.0/3.6E1);
            double t143016 = t143011+t143012+t143013+t143014+t143015-t143089;
            double t143017 = 1.0/(t142888*t142888);
            double t143018 = 1.0/(t142885*t142885*t142885*t142885);
            double t143019 = a1p*c*c0p*t143005*t142889*(8.0/9.0);
            double t143054 = t142961*t142962*t142937*t142967;
            double t143020 = -t143054+t142958+t142968-t142969;
            double t143021 = a1p*c*c0p*t142855*t142864*(4.0/3.0);
            double t143022 = t142970-t142971;
            double t143023 = gamma_aa[index]*gcaa*t142870*4.0;
            double t143024 = gamma_aa[index]*gcaa*t142871*t142865*t142959*4.0;
            double t143025 = t142872*t142865*t142959*6.0;
            double t143026 = t142960*t142867*t142869;
            double t143027 = t143023+t143024+t143025+t143026+1.0;
            double t143028 = 1.0/t143027;
            double t143029 = gamma_aa[index]*gcaa*t142870;
            double t143030 = t143029+1.0;
            double t143031 = 1.0/t143030;
            double t143032 = gamma_aa[index]*gcaa*t142870*3.0;
            double t143033 = gamma_aa[index]*gcaa*t142871*t142865*t142959;
            double t143034 = t142872*t142865*t142959*3.0;
            double t143035 = t143032+t143033+t143034+1.0;
            double t143036 = 1.0/t143035;
            double t143037 = gamma_aa[index]*gcaa*t142870*2.0;
            double t143038 = t142872*t142865*t142959;
            double t143039 = t143037+t143038+1.0;
            double t143040 = 1.0/t143039;
            double t143041 = t143022*t142935*t142875;
            double t143042 = t143041+t142971;
            double t143043 = 1.0/(t142899*t142899*t142899);
            double t143044 = ccab1*gamma_aa[index]*gcab*t143043*t142910*t142865*t142866*(3.2E1/9.0);
            double t143045 = t142912*t142912;
            double t143046 = 1.0/(t142896*t142896*t142896);
            double t143047 = ccab4*t143045*t143046*t142867*t142868*t142869*2.0;
            double t143048 = t142915*t142915;
            double t143049 = 1.0/(t142908*t142908*t142908);
            double t143050 = ccab2*t143048*t143049*t142872*t142865*t142866*2.0;
            double t143051 = t142922*t142922;
            double t143052 = 1.0/(t142904*t142904*t142904);
            double t143053 = ccab3*gamma_aa[index]*gcab*t143051*t143052*t142871*t142865*t142866*2.0;
            double t143055 = ccaa4*t143028*t142923*t142960*t142867*(3.2E1/3.0);
            double t143056 = ccaa1*gamma_aa[index]*gcaa*t143031*t142913*(8.0/3.0);
            double t143057 = ccaa3*gamma_aa[index]*gcaa*t143036*t142916*t142865*t142959*8.0;
            double t143058 = ccaa2*t143040*t142914*t142865*t142959*(1.6E1/3.0);
            double t143059 = 1.0/(t143030*t143030);
            double t143060 = gamma_aa[index]*gcaa*t142913*8.0;
            double t143061 = gamma_aa[index]*gcaa*t142916*t142865*t142959*8.0;
            double t143062 = t142914*t142865*t142959*1.6E1;
            double t143063 = t143060+t143061+t143062;
            double t143064 = 1.0/(t143035*t143035);
            double t143065 = gamma_aa[index]*gcaa*t142913*(3.2E1/3.0);
            double t143066 = gamma_aa[index]*gcaa*t142916*t142865*t142959*3.2E1;
            double t143067 = t142914*t142865*t142959*3.2E1;
            double t143068 = t142923*t142960*t142867*(3.2E1/3.0);
            double t143069 = t143065+t143066+t143067+t143068;
            double t143070 = 1.0/(t143027*t143027);
            double t143071 = gamma_aa[index]*gcaa*t142913*(1.6E1/3.0);
            double t143072 = t142914*t142865*t142959*(1.6E1/3.0);
            double t143073 = t143071+t143072;
            double t143074 = 1.0/(t143039*t143039);
            double t143075 = t143055+t143056+t143057+t143058-ccaa1*t142914*t143059*t142865*t142959*(8.0/3.0)- \
               ccaa2*t143073*t143074*t142872*t142865*t142959-ccaa4*t143070*t142960*t143069*t142867*t142869-ccaa3* \
               gamma_aa[index]*gcaa*t143063*t143064*t142871*t142865*t142959;
            double t143076 = ccaa4*t143028*t142960*t142867*t142869;
            double t143077 = ccaa1*gamma_aa[index]*gcaa*t143031*t142870;
            double t143078 = ccaa3*gamma_aa[index]*gcaa*t143036*t142871*t142865*t142959;
            double t143079 = ccaa2*t143040*t142872*t142865*t142959;
            double t143080 = ccaa0+t143076+t143077+t143078+t143079;
            double t143081 = 1.0/(t142943*t142943*t142943);
            double t143082 = b4f*t142841*t142870*(1.0E1/9.0);
            double t143083 = b2f*c*t143005*(4.0/9.0);
            double t143084 = b3f*t142841*t142870*t142949*(1.0/1.2E1);
            double t143085 = b1f*c*t143005*t142949*(2.0/9.0);
            double t143086 = b3f*c*t143005*t142878*(2.0/3.0);
            double t143087 = t143082+t143083+t143084+t143085+t143086-b1f*t143006*t142841*t142870*(1.0/3.6E1);
            double t143088 = t142961*t143087*t142962*t142937;
            double t143090 = t143016*t142951*t142952*t142891;
            double t143091 = 1.0/(t142946*t142946);
            double t143092 = 1.0/(t142943*t142943*t142943*t142943);
            double t143093 = t143007*t143091*t143092*t142937*t142938*(1.0/2.0);
            double t143094 = t143008*t143017*t143018*t142891*t142848*(1.0/2.0);
            double t143095 = a1f*c*t142961*t142962*t142947*t142967*(2.0/3.0);
            double t143096 = a1p*c*t142951*t142952*t142947*t142957*(2.0/3.0);
            double t143097 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t143098 = 1.0/(omega*omega);
            double t143099 = pow(t143097,2.0/3.0);
            double t143102 = t143098*t143099;
            double t143100 = exp(-t143102);
            double t143101 = 1.0/pow(t143097,1.0/3.0);
            double t143103 = omega*omega;
            double t143104 = t143100-1.0;
            double t143105 = 1.0/pow(t143097,2.0/3.0);
            double t143106 = 1.0/pow(t143097,4.0/3.0);
            double t143107 = 1.0/omega;
            double t143108 = t143103*t143104*t143105*(1.0/2.0);
            double t143109 = -t143100+t143108+3.0/2.0;
            double t143110 = gx*gx;
            double t143111 = t143110*t143110;
            double t143112 = pow(rho_a[index],1.0/3.0);
            double t143113 = pow(t143097,1.0/3.0);
            double t143114 = t143113*t143107;
            double t143115 = erf(t143114);
            double t143116 = t143115*(3.991211251234741E15/2.251799813685248E15);
            double t143148 = omega*t143101*t143109;
            double t143117 = t143116-t143148;
            double t143118 = gamma_aa[index]*gx*t142870*4.0;
            double t143119 = gamma_aa[index]*gx*t143110*t142871*t142865*4.0;
            double t143120 = t143110*t142872*t142865*6.0;
            double t143121 = t143111*t142867*t142869;
            double t143122 = t143120+t143121+t143118+t143119+1.0;
            double t143123 = 1.0/t143122;
            double t143124 = gamma_aa[index]*gx*t142870;
            double t143125 = t143124+1.0;
            double t143126 = 1.0/t143125;
            double t143127 = gamma_aa[index]*gx*t142870*3.0;
            double t143128 = gamma_aa[index]*gx*t143110*t142871*t142865;
            double t143129 = t143110*t142872*t142865*3.0;
            double t143130 = t143127+t143128+t143129+1.0;
            double t143131 = 1.0/t143130;
            double t143132 = gamma_aa[index]*gx*t142870*2.0;
            double t143133 = t143110*t142872*t142865;
            double t143134 = t143132+t143133+1.0;
            double t143135 = 1.0/t143134;
            double t143136 = 1.0/rho_a[index];
            double t143137 = t143100*t143136*(1.0/3.0);
            double t143138 = 1.0/pow(t143097,5.0/3.0);
            double t143139 = t143103*t143104*t143138*(2.778046668940015E15/1.40737488355328E14);
            double t143143 = t143100*t143101*t143098*(2.778046668940015E15/7.0368744177664E13);
            double t143140 = -t143143+t143137+t143139;
            double t143141 = 1.0/sqrt(3.141592653589793);
            double t143142 = omega*t143106*t143109*(2.778046668940015E15/1.40737488355328E14);
            double t143144 = omega*t143101*t143140;
            double t143145 = t143100*t143105*t143141*t143107*(1.108777112152858E31/1.584563250285287E29);
            double t143146 = t143142+t143144+t143145;
            double t143147 = 1.0/pow(t143097,7.0/3.0);
            double t143149 = cx4*t143111*t143123*t142867*t142869;
            double t143150 = cx1*gamma_aa[index]*gx*t143126*t142870;
            double t143151 = cx3*gamma_aa[index]*gx*t143110*t143131*t142871*t142865;
            double t143152 = cx2*t143110*t143135*t142872*t142865;
            double t143153 = cx0+t143150+t143151+t143152+t143149;
            double t143154 = pow(rho_a[index],4.0/3.0);
            double t143155 = omega*t143101*t143146*(4.0/3.0);
            double t143156 = t143155-omega*t143106*t143117*(2.778046668940015E15/1.05553116266496E14);
            double t143157 = cx4*t143111*t143123*t142923*t142867*(3.2E1/3.0);
            double t143158 = cx1*gamma_aa[index]*gx*t143126*t142913*(8.0/3.0);
            double t143159 = cx3*gamma_aa[index]*gx*t143110*t143131*t142916*t142865*8.0;
            double t143160 = cx2*t143110*t143135*t142914*t142865*(1.6E1/3.0);
            double t143161 = 1.0/(t143125*t143125);
            double t143162 = gamma_aa[index]*gx*t142913*8.0;
            double t143163 = gamma_aa[index]*gx*t143110*t142916*t142865*8.0;
            double t143164 = t143110*t142914*t142865*1.6E1;
            double t143165 = t143162+t143163+t143164;
            double t143166 = 1.0/(t143130*t143130);
            double t143167 = gamma_aa[index]*gx*t142913*(3.2E1/3.0);
            double t143168 = gamma_aa[index]*gx*t143110*t142916*t142865*3.2E1;
            double t143169 = t143110*t142914*t142865*3.2E1;
            double t143170 = t143111*t142923*t142867*(3.2E1/3.0);
            double t143171 = t143170+t143167+t143168+t143169;
            double t143172 = 1.0/(t143122*t143122);
            double t143173 = gamma_aa[index]*gx*t142913*(1.6E1/3.0);
            double t143174 = t143110*t142914*t142865*(1.6E1/3.0);
            double t143175 = t143173+t143174;
            double t143176 = 1.0/(t143134*t143134);
            double t143177 = t143160+t143157+t143158+t143159-cx1*t143110*t143161*t142914*t142865*(8.0/3.0)-cx2* \
               t143110*t143175*t143176*t142872*t142865-cx4*t143111*t143171*t143172*t142867*t142869-cx3*gamma_aa[index]* \
               gx*t143110*t143165*t143166*t142871*t142865;
            double t143178 = omega*t143101*t143117*(4.0/3.0);
            double t143179 = t143178-1.0;
            v_rho_a_rho_a_[index] = -t142977*(-t143021-rho_a[index]*(t143004+t142985+t142989-t142852*t142862* \
               t142854*t142986*2.0-a1p*c*c0p*t142846*t142864*(8.0/9.0)+Aa*t143001*t143003*t142990*t142991*t142875* \
               (4.0/9.0))*2.0+rho_a[index]*(-t143010+t143090-t143019+t143094+t143096+t142935*t142875*(t143010+t143019+ \
               t143093+t143095+t143088-t143007*t143081*t142961*t142937*2.0-t143016*t142951*t142952*t142891-a1f*c* \
               c0f*t143005*t142950*(8.0/9.0)-t143008*t143017*t143018*t142891*t142848*(1.0/2.0)-a1p*c*t142951*t142952* \
               t142947*t142957*(2.0/3.0)))+t143020*t142935*t142875*2.0+t142852*t142854*t142863*t142856*2.0-t142951* \
               t142952*t142891*t142957*2.0+a1p*c*c0p*t142947*t142889*(4.0/3.0))+t143042*t143075*2.0+(rho_a[index]* \
               (t142971+t142935*t142875*(t142970-c0p*t142891*t142889*2.0))*2.0-c0p*rho_a[index]*t142854*t142864*4.0) \
               *(t143050+t143044+t143053+t143047+ccab1*gamma_aa[index]*gcab*t142900*t142917*(4.4E1/9.0)-ccab1*t142911* \
               t142972*t142865*t142866*(7.6E1/9.0)+ccab2*t142911*t142909*t142865*t142866*(4.0E1/3.0)+ccab4*t142928* \
               t142867*t142868*t142897*(3.68E2/9.0)-ccab2*t142914*t142932*t142915*t142865*t142866*(1.6E1/3.0)-ccab4* \
               t142912*t142923*t142929*t142867*t142868*(3.2E1/3.0)-ccab2*t142932*t142872*t142865*t142866*(gamma_aa[index]* \
               gcab*t142917*(8.8E1/9.0)+t142911*t142865*t142866*(4.0E1/3.0))-ccab4*t142929*t142867*t142868*t142869* \
               (gamma_aa[index]*gcab*t142917*(1.76E2/9.0)+t142911*t142865*t142866*8.0E1+t142928*t142867*t142868*(3.68E2/ \
               9.0)+gamma_aa[index]*gcab*t142910*t142865*t142866*(3.04E2/3.0))+ccab3*gamma_aa[index]*gcab*t142910* \
               t142905*t142865*t142866*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t142871*t142918*t142865*t142866*(gamma_aa[index]* \
               gcab*t142917*(4.4E1/3.0)+t142911*t142865*t142866*4.0E1+gamma_aa[index]*gcab*t142910*t142865*t142866* \
               (7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t142922*t142916*t142918*t142865*t142866*8.0)+t143080*(-t142958+ \
               t142969+t142935*t142875*(t142958+t142968-t142961*t142962*t142937*t142967-a1p*c*c0p*t142947*t142889* \
               (2.0/3.0)))*2.0+(-t142971+rho_a[index]*(-t142958+t142969+t143020*t142935*t142875)+rho_a[index]*(t142852* \
               t142854*t142863*t142856-a1p*c*c0p*t142855*t142864*(2.0/3.0))*2.0+c0p*t142854*t142864*2.0-t143022*t142935* \
               t142875)*(ccab1*gamma_aa[index]*gcab*t142900*t142913*(4.0/3.0)-ccab1*t142914*t142972*t142865*t142866* \
               (4.0/3.0)+ccab2*t142914*t142909*t142865*t142866*(8.0/3.0)+ccab4*t142923*t142867*t142868*t142897*(1.6E1/ \
               3.0)-ccab2*t142932*t142915*t142872*t142865*t142866-ccab4*t142912*t142929*t142867*t142868*t142869+ccab3* \
               gamma_aa[index]*gcab*t142905*t142916*t142865*t142866*4.0-ccab3*gamma_aa[index]*gcab*t142922*t142871* \
               t142918*t142865*t142866)*4.0+(rho_a[index]*t143042*2.0-c0p*rho_a[index]*t142854*t142864*4.0)*(t143050+ \
               t143044+t143053+t143047-ccab1*t142911*t142972*t142865*t142866*(3.2E1/9.0)+ccab2*t142911*t142909*t142865* \
               t142866*(3.2E1/9.0)-ccab2*t142932*t142928*t142867*t142868*(3.2E1/9.0)+ccab4*t142928*t142867*t142868* \
               t142897*(6.4E1/3.0)-ccab2*t142914*t142932*t142915*t142865*t142866*(1.6E1/3.0)-ccab4*t142912*t142923* \
               t142929*t142867*t142868*(3.2E1/3.0)-ccab4*t142929*t142867*t142868*t142869*(t142911*t142865*t142866* \
               (6.4E1/3.0)+t142928*t142867*t142868*(6.4E1/3.0)+gamma_aa[index]*gcab*t142910*t142865*t142866*(1.28E2/ \
               3.0))+ccab3*gamma_aa[index]*gcab*t142910*t142905*t142865*t142866*(3.2E1/3.0)-ccab3*gamma_aa[index]* \
               gcab*t142871*t142918*t142865*t142866*(t142911*t142865*t142866*(3.2E1/3.0)+gamma_aa[index]*gcab*t142910* \
               t142865*t142866*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t142922*t142916*t142918*t142865*t142866*8.0) \
               +t142977*(t143021+rho_a[index]*(t143004+t142985+t142989-t142852*t142862*t142854*t142986*2.0-a1p*c* \
               c0p*t142846*t142864*(8.0/9.0)-Aa*t143001*t143003*t142990*t142991*t142875*(4.0/9.0))*2.0-t142852*t142854* \
               t142863*t142856*2.0)+rho_a[index]*t143075*(t142958-t142969+t142935*t142875*(t143054-t142958-t142968+ \
               t142969))*2.0-rho_a[index]*t143042*(ccaa1*gamma_aa[index]*gcaa*t143031*t142917*(8.8E1/9.0)+ccaa2*t143040* \
               t142911*t142865*t142959*(3.04E2/9.0)-ccaa1*t142911*t143059*t142865*t142959*2.4E1+ccaa4*t143028*t142960* \
               t142928*t142867*(1.12E3/9.0)-ccaa4*t143070*t142923*t142960*t143069*t142867*(6.4E1/3.0)-ccaa2*t143073* \
               t143074*t142914*t142865*t142959*(3.2E1/3.0)-ccaa2*t143074*t142872*t142865*t142959*(gamma_aa[index]* \
               gcaa*t142917*(1.76E2/9.0)+t142911*t142865*t142959*(3.04E2/9.0))-ccaa4*t143070*t142960*t142867*t142869* \
               (gamma_aa[index]*gcaa*t142917*(3.52E2/9.0)+t142911*t142865*t142959*(6.08E2/3.0)+t142960*t142928*t142867* \
               (1.12E3/9.0)+gamma_aa[index]*gcaa*t142910*t142865*t142959*2.88E2)+ccaa2*(t143073*t143073)*1.0/(t143039* \
               t143039*t143039)*t142872*t142865*t142959*2.0+ccaa4*1.0/(t143027*t143027*t143027)*t142960*(t143069* \
               t143069)*t142867*t142869*2.0+ccaa3*gamma_aa[index]*gcaa*t142910*t143036*t142865*t142959*7.2E1+ccaa1* \
               gamma_aa[index]*gcaa*1.0/(t143030*t143030*t143030)*t142910*t142865*t142959*(1.28E2/9.0)+ccaa3*gamma_aa[index]* \
               gcaa*1.0/(t143035*t143035*t143035)*(t143063*t143063)*t142871*t142865*t142959*2.0-ccaa3*gamma_aa[index]* \
               gcaa*t143064*t142871*t142865*t142959*(gamma_aa[index]*gcaa*t142917*(8.8E1/3.0)+t142911*t142865*t142959* \
               (3.04E2/3.0)+gamma_aa[index]*gcaa*t142910*t142865*t142959*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t143063* \
               t143064*t142916*t142865*t142959*1.6E1)+rho_a[index]*t143080*(-t143010+t143090-t143019+t143094+t143096+ \
               t142935*t142875*(t143010-t143090+t143019+t143093-t143094+t143095-t143096+t143088-t143007*t143081*t142961* \
               t142937*2.0-a1f*c*c0f*t143005*t142950*(8.0/9.0)))-c0*t143154*t143179*(cx1*gamma_aa[index]*gx*t143126* \
               t142917*(8.8E1/9.0)-cx1*t143110*t143161*t142911*t142865*2.4E1+cx2*t143110*t143135*t142911*t142865* \
               (3.04E2/9.0)+cx4*t143111*t143123*t142928*t142867*(1.12E3/9.0)-cx2*t143110*t142914*t143175*t143176* \
               t142865*(3.2E1/3.0)-cx4*t143111*t143171*t143172*t142923*t142867*(6.4E1/3.0)-cx2*t143110*t143176*t142872* \
               t142865*(gamma_aa[index]*gx*t142917*(1.76E2/9.0)+t143110*t142911*t142865*(3.04E2/9.0))-cx4*t143111* \
               t143172*t142867*t142869*(gamma_aa[index]*gx*t142917*(3.52E2/9.0)+t143110*t142911*t142865*(6.08E2/3.0) \
               +t143111*t142928*t142867*(1.12E3/9.0)+gamma_aa[index]*gx*t143110*t142910*t142865*2.88E2)+cx2*t143110* \
               1.0/(t143134*t143134*t143134)*(t143175*t143175)*t142872*t142865*2.0+cx4*t143111*1.0/(t143122*t143122* \
               t143122)*(t143171*t143171)*t142867*t142869*2.0+cx3*gamma_aa[index]*gx*t143110*t143131*t142910*t142865* \
               7.2E1+cx1*gamma_aa[index]*gx*t143110*1.0/(t143125*t143125*t143125)*t142910*t142865*(1.28E2/9.0)+cx3* \
               gamma_aa[index]*gx*t143110*1.0/(t143130*t143130*t143130)*(t143165*t143165)*t142871*t142865*2.0-cx3* \
               gamma_aa[index]*gx*t143110*t143166*t142871*t142865*(gamma_aa[index]*gx*t142917*(8.8E1/3.0)+t143110* \
               t142911*t142865*(3.04E2/3.0)+gamma_aa[index]*gx*t143110*t142910*t142865*7.2E1)-cx3*gamma_aa[index]* \
               gx*t143110*t143165*t143166*t142916*t142865*1.6E1)-c0*t143112*t143153*t143156*(8.0/3.0)+c0*t143112* \
               t143177*t143179*(8.0/3.0)+c0*t143154*t143156*t143177*2.0-c0*t143153*t142880*t143179*(4.0/9.0)+c0*t143153* \
               t143154*(omega*t143101*(omega*t143101*(t143100*t142991*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t143100* \
               t143105*(7.717543294808713E30/4.951760157141521E27)+t143103*t143104*1.0/pow(t143097,8.0/3.0)*(3.858771647404357E31/ \
               1.980704062856608E28)-t143100*t143106*t143098*(7.717543294808713E30/9.903520314283042E27)+t143100* \
               t143101*t143136*t143098*(2.778046668940015E15/2.11106232532992E14))+omega*t143140*t143106*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t143109*t143147*(7.717543294808713E30/4.951760157141521E27)+t143100*t143141* \
               t143107*t143138*(3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t143100*t143141* \
               t143136*(1.108777112152858E31/2.37684487542793E29))*(4.0/3.0)+omega*t143106*t143146*(2.778046668940015E15/ \
               5.2776558133248E13)-omega*t143117*t143147*(7.717543294808713E30/3.713820117856141E27));
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t143181 = 1.0/pow(rho_a[index],1.0/3.0);
                double t143182 = c*t143181;
                double t143183 = sqrt(t143182);
                double t143184 = pow(t143182,3.0/2.0);
                double t143185 = c*c;
                double t143186 = 1.0/pow(rho_a[index],2.0/3.0);
                double t143187 = 1.0/c0p;
                double t143188 = b1p*t143183;
                double t143189 = b3p*t143184;
                double t143190 = b4p*t143185*t143186;
                double t143191 = b2p*c*t143181;
                double t143192 = t143190+t143191+t143188+t143189;
                double t143193 = 1.0/t143192;
                double t143194 = t143193*t143187*(1.0/2.0);
                double t143195 = t143194+1.0;
                double t143196 = log(t143195);
                double t143197 = a1p*c*t143181;
                double t143198 = t143197+1.0;
                double t143199 = 1.0/pow(rho_a[index],8.0/3.0);
                double t143200 = gamma_aa[index]*gamma_aa[index];
                double t143201 = gcaa*gcaa;
                double t143202 = t143201*t143201;
                double t143203 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t143204 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t143205 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t143206 = gamma_aa[index]*gcaa*t143199;
                double t143207 = t143206+1.0;
                double t143208 = gamma_aa[index]*gcaa*t143199*3.0;
                double t143209 = gamma_aa[index]*gcaa*t143200*t143201*t143205;
                double t143210 = t143200*t143201*t143204*3.0;
                double t143211 = t143210+t143208+t143209+1.0;
                double t143212 = t143200*t143200;
                double t143213 = gamma_aa[index]*gcaa*t143199*4.0;
                double t143214 = gamma_aa[index]*gcaa*t143200*t143201*t143205*4.0;
                double t143215 = t143200*t143201*t143204*6.0;
                double t143216 = t143202*t143203*t143212;
                double t143217 = t143213+t143214+t143215+t143216+1.0;
                double t143218 = gamma_aa[index]*gcaa*t143199*2.0;
                double t143219 = t143200*t143201*t143204;
                double t143220 = t143218+t143219+1.0;
                double t143221 = pow(2.0,1.0/3.0);
                double t143222 = t143221*2.0;
                double t143223 = t143222-2.0;
                double t143224 = two_13*2.0;
                double t143225 = t143224-2.0;
                double t143226 = 1.0/t143225;
                double t143227 = 1.0/c0f;
                double t143228 = b1f*t143183;
                double t143229 = b3f*t143184;
                double t143230 = b4f*t143185*t143186;
                double t143231 = b2f*c*t143181;
                double t143232 = t143230+t143231+t143228+t143229;
                double t143233 = 1.0/t143232;
                double t143234 = t143233*t143227*(1.0/2.0);
                double t143235 = t143234+1.0;
                double t143236 = log(t143235);
                double t143237 = a1f*c*t143181;
                double t143238 = t143237+1.0;
                double t143239 = c0f*t143236*t143238*2.0;
                double t143240 = c0p*t143196*t143198*2.0;
                double t143241 = rho_a[index]*2.0;
                double t143242 = 1.0/pow(t143241,1.0/3.0);
                double t143243 = c*t143242;
                double t143244 = gcab*gcab;
                double t143245 = t143244*t143244;
                double t143246 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t143247 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t143248 = gamma_aa[index]*gcab*t143199*2.0;
                double t143249 = t143200*t143204*t143244;
                double t143250 = t143248+t143249+1.0;
                double t143251 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t143252 = gamma_aa[index]*gcab*t143199;
                double t143253 = t143252+1.0;
                double t143254 = gamma_aa[index]*gcab*t143199*3.0;
                double t143255 = gamma_aa[index]*gcab*t143200*t143205*t143244;
                double t143256 = t143200*t143204*t143244*3.0;
                double t143257 = t143254+t143255+t143256+1.0;
                double t143258 = gamma_aa[index]*gcab*t143199*4.0;
                double t143259 = gamma_aa[index]*gcab*t143200*t143205*t143244*4.0;
                double t143260 = t143200*t143204*t143244*6.0;
                double t143261 = t143203*t143212*t143245;
                double t143262 = t143260+t143261+t143258+t143259+1.0;
                double t143263 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t143264 = 1.0/(t143250*t143250);
                double t143265 = 1.0/(t143257*t143257);
                double t143266 = 1.0/(t143262*t143262);
                double t143267 = gamma_aa[index]*gcab*t143263*(8.0/3.0);
                double t143268 = t143200*t143244*t143246*(8.0/3.0);
                double t143269 = t143267+t143268;
                double t143270 = gcab*t143199;
                double t143271 = gamma_aa[index]*t143204*t143244;
                double t143272 = t143270+t143271;
                double t143273 = gcab*t143199*(3.0/2.0);
                double t143274 = gamma_aa[index]*t143204*t143244*3.0;
                double t143275 = gcab*t143200*t143205*t143244*(3.0/2.0);
                double t143276 = t143273+t143274+t143275;
                double t143277 = gamma_aa[index]*gcab*t143263*4.0;
                double t143278 = gamma_aa[index]*gcab*t143200*t143251*t143244*4.0;
                double t143279 = t143200*t143244*t143246*8.0;
                double t143280 = t143277+t143278+t143279;
                double t143281 = gamma_aa[index]*gcab*t143263*(1.6E1/3.0);
                double t143282 = gamma_aa[index]*gcab*t143200*t143251*t143244*1.6E1;
                double t143283 = t143200*t143244*t143246*1.6E1;
                double t143284 = t143212*t143245*t143247*(1.6E1/3.0);
                double t143285 = t143281+t143282+t143283+t143284;
                double t143286 = gcab*t143199*2.0;
                double t143287 = gamma_aa[index]*t143204*t143244*6.0;
                double t143288 = gcab*t143200*t143205*t143244*6.0;
                double t143289 = gamma_aa[index]*t143200*t143203*t143245*2.0;
                double t143290 = t143286+t143287+t143288+t143289;
                double t143291 = t143240-t143239;
                double t143336 = t143223*t143226*t143291;
                double t143292 = t143240-t143336;
                double t143293 = rho_a[index]*t143292*2.0;
                double t143294 = sqrt(t143243);
                double t143295 = b1p*t143294;
                double t143296 = pow(t143243,3.0/2.0);
                double t143297 = b3p*t143296;
                double t143298 = b2p*c*t143242;
                double t143299 = 1.0/pow(t143241,2.0/3.0);
                double t143300 = b4p*t143185*t143299;
                double t143301 = t143300+t143295+t143297+t143298;
                double t143302 = 1.0/t143301;
                double t143303 = t143302*t143187*(1.0/2.0);
                double t143304 = t143303+1.0;
                double t143305 = log(t143304);
                double t143306 = a1p*c*t143242;
                double t143307 = t143306+1.0;
                double t143308 = t143293-c0p*rho_a[index]*t143305*t143307*4.0;
                double t143309 = 1.0/t143262;
                double t143310 = 1.0/t143250;
                double t143311 = 1.0/t143257;
                double t143312 = 1.0/(t143253*t143253);
                double t143313 = 1.0/(t143253*t143253*t143253);
                double t143314 = ccab3*gcab*t143200*t143205*t143244*t143280*t143265*(3.0/2.0);
                double t143315 = ccab2*gamma_aa[index]*t143204*t143244*t143264*t143269;
                double t143316 = ccab3*gamma_aa[index]*gcab*t143200*t143251*t143244*t143265*t143276*4.0;
                double t143317 = ccab4*gamma_aa[index]*t143200*t143203*t143245*t143266*t143285*2.0;
                double t143318 = ccab4*t143212*t143245*t143290*t143247*t143266*(1.6E1/3.0);
                double t143319 = ccab2*t143200*t143244*t143272*t143246*t143264*(8.0/3.0);
                double t143320 = gamma_aa[index]*t143244*t143246*4.0;
                double t143321 = 1.0/(t143250*t143250*t143250);
                double t143322 = 1.0/(t143257*t143257*t143257);
                double t143323 = 1.0/(t143262*t143262*t143262);
                double t143324 = 1.0/pow(t143241,4.0/3.0);
                double t143325 = 1.0/pow(rho_a[index],4.0/3.0);
                double t143326 = 1.0/pow(rho_a[index],5.0/3.0);
                double t143327 = 1.0/sqrt(t143182);
                double t143328 = 1.0/t143195;
                double t143329 = 1.0/(t143192*t143192);
                double t143330 = b4p*t143326*t143185*(2.0/3.0);
                double t143331 = b2p*c*t143325*(1.0/3.0);
                double t143332 = b1p*c*t143325*t143327*(1.0/6.0);
                double t143333 = b3p*c*t143325*t143183*(1.0/2.0);
                double t143334 = t143330+t143331+t143332+t143333;
                double t143335 = t143334*t143328*t143329*t143198;
                double t143337 = 1.0/t143253;
                double t143338 = 1.0/t143207;
                double t143339 = 1.0/t143217;
                double t143340 = 1.0/t143220;
                double t143341 = 1.0/t143211;
                double t143342 = 1.0/(t143207*t143207);
                double t143343 = 1.0/(t143211*t143211);
                double t143344 = 1.0/(t143220*t143220);
                double t143345 = gcaa*t143199*3.0;
                double t143346 = gamma_aa[index]*t143201*t143204*6.0;
                double t143347 = gcaa*t143200*t143201*t143205*3.0;
                double t143348 = t143345+t143346+t143347;
                double t143349 = 1.0/(t143217*t143217);
                double t143350 = gcaa*t143199*4.0;
                double t143351 = gamma_aa[index]*t143201*t143204*1.2E1;
                double t143352 = gcaa*t143200*t143201*t143205*1.2E1;
                double t143353 = gamma_aa[index]*t143200*t143202*t143203*4.0;
                double t143354 = t143350+t143351+t143352+t143353;
                double t143355 = gcaa*t143199*2.0;
                double t143356 = gamma_aa[index]*t143201*t143204*2.0;
                double t143357 = t143355+t143356;
                double t143358 = gamma_aa[index]*gcaa*t143263*(1.6E1/3.0);
                double t143359 = t143200*t143201*t143246*(1.6E1/3.0);
                double t143360 = t143358+t143359;
                double t143361 = gamma_aa[index]*gcaa*t143263*8.0;
                double t143362 = gamma_aa[index]*gcaa*t143200*t143201*t143251*8.0;
                double t143363 = t143200*t143201*t143246*1.6E1;
                double t143364 = t143361+t143362+t143363;
                double t143365 = gamma_aa[index]*gcaa*t143263*(3.2E1/3.0);
                double t143366 = gamma_aa[index]*gcaa*t143200*t143201*t143251*3.2E1;
                double t143367 = t143200*t143201*t143246*3.2E1;
                double t143368 = t143202*t143212*t143247*(3.2E1/3.0);
                double t143369 = t143365+t143366+t143367+t143368;
                double t143370 = 1.0/t143235;
                double t143371 = 1.0/(t143232*t143232);
                double t143372 = b4f*t143326*t143185*(2.0/3.0);
                double t143373 = b2f*c*t143325*(1.0/3.0);
                double t143374 = b1f*c*t143325*t143327*(1.0/6.0);
                double t143375 = b3f*c*t143325*t143183*(1.0/2.0);
                double t143376 = t143372+t143373+t143374+t143375;
                double t143377 = a1f*c*c0f*t143325*t143236*(2.0/3.0);
                double t143378 = a1p*c*c0p*t143325*t143196*(2.0/3.0);
                double t143379 = ccaa1*gcaa*t143338*t143199;
                double t143380 = ccaa4*gamma_aa[index]*t143200*t143202*t143203*t143339*4.0;
                double t143381 = ccaa2*gamma_aa[index]*t143201*t143204*t143340*2.0;
                double t143382 = ccaa3*gcaa*t143200*t143201*t143205*t143341*3.0;
                double t143383 = t143380+t143381+t143382+t143379-ccaa1*gamma_aa[index]*t143201*t143204*t143342-ccaa2* \
                   t143200*t143201*t143204*t143344*t143357-ccaa4*t143202*t143203*t143212*t143354*t143349-ccaa3*gamma_aa[index]* \
                   gcaa*t143200*t143201*t143205*t143343*t143348;
                double t143384 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t143385 = 1.0/pow(t143384,1.0/3.0);
                double t143386 = 1.0/(omega*omega);
                double t143387 = pow(t143384,2.0/3.0);
                double t143437 = t143386*t143387;
                double t143388 = exp(-t143437);
                double t143389 = gx*gx;
                double t143390 = t143389*t143389;
                double t143391 = gamma_aa[index]*gx*t143199;
                double t143392 = t143391+1.0;
                double t143393 = gamma_aa[index]*gx*t143199*3.0;
                double t143394 = gamma_aa[index]*gx*t143200*t143205*t143389;
                double t143395 = t143200*t143204*t143389*3.0;
                double t143396 = t143393+t143394+t143395+1.0;
                double t143397 = gamma_aa[index]*gx*t143199*2.0;
                double t143398 = t143200*t143204*t143389;
                double t143399 = t143397+t143398+1.0;
                double t143400 = 1.0/(t143396*t143396);
                double t143401 = gamma_aa[index]*gx*t143199*4.0;
                double t143402 = gamma_aa[index]*gx*t143200*t143205*t143389*4.0;
                double t143403 = t143200*t143204*t143389*6.0;
                double t143404 = t143203*t143212*t143390;
                double t143405 = t143401+t143402+t143403+t143404+1.0;
                double t143406 = 1.0/(t143405*t143405);
                double t143407 = 1.0/(t143399*t143399);
                double t143408 = gamma_aa[index]*gx*t143263*(1.6E1/3.0);
                double t143409 = t143200*t143246*t143389*(1.6E1/3.0);
                double t143410 = t143408+t143409;
                double t143411 = gx*t143199*2.0;
                double t143412 = gamma_aa[index]*t143204*t143389*2.0;
                double t143413 = t143411+t143412;
                double t143414 = gx*t143199*3.0;
                double t143415 = gamma_aa[index]*t143204*t143389*6.0;
                double t143416 = gx*t143200*t143205*t143389*3.0;
                double t143417 = t143414+t143415+t143416;
                double t143418 = gamma_aa[index]*gx*t143263*8.0;
                double t143419 = gamma_aa[index]*gx*t143200*t143251*t143389*8.0;
                double t143420 = t143200*t143246*t143389*1.6E1;
                double t143421 = t143420+t143418+t143419;
                double t143422 = gamma_aa[index]*gx*t143263*(3.2E1/3.0);
                double t143423 = gamma_aa[index]*gx*t143200*t143251*t143389*3.2E1;
                double t143424 = t143200*t143246*t143389*3.2E1;
                double t143425 = t143212*t143390*t143247*(3.2E1/3.0);
                double t143426 = t143422+t143423+t143424+t143425;
                double t143427 = gx*t143199*4.0;
                double t143428 = gamma_aa[index]*t143204*t143389*1.2E1;
                double t143429 = gx*t143200*t143205*t143389*1.2E1;
                double t143430 = gamma_aa[index]*t143200*t143203*t143390*4.0;
                double t143431 = t143430+t143427+t143428+t143429;
                double t143432 = 1.0/omega;
                double t143433 = pow(t143384,1.0/3.0);
                double t143434 = t143432*t143433;
                double t143435 = erf(t143434);
                double t143436 = t143435*(3.991211251234741E15/2.251799813685248E15);
                double t143438 = omega*omega;
                double t143439 = 1.0/pow(t143384,2.0/3.0);
                double t143440 = t143388-1.0;
                double t143441 = t143440*t143438*t143439*(1.0/2.0);
                double t143442 = t143441-t143388+3.0/2.0;
                double t143453 = omega*t143442*t143385;
                double t143443 = -t143453+t143436;
                double t143444 = omega*t143443*t143385*(4.0/3.0);
                double t143445 = t143444-1.0;
                double t143446 = 1.0/t143392;
                double t143447 = 1.0/t143405;
                double t143448 = 1.0/t143399;
                double t143449 = 1.0/t143396;
                double t143450 = 1.0/(t143392*t143392);
                double t143451 = pow(rho_a[index],4.0/3.0);
                double t143452 = 1.0/pow(t143384,4.0/3.0);
                double t143454 = cx1*gx*t143446*t143199;
                double t143455 = cx4*gamma_aa[index]*t143200*t143203*t143390*t143447*4.0;
                double t143456 = cx2*gamma_aa[index]*t143204*t143448*t143389*2.0;
                double t143457 = cx3*gx*t143200*t143205*t143449*t143389*3.0;
                double t143458 = t143454+t143455+t143456+t143457-cx1*gamma_aa[index]*t143204*t143450*t143389-cx2* \
                   t143200*t143204*t143413*t143407*t143389-cx4*t143203*t143212*t143431*t143406*t143390-cx3*gamma_aa[index]* \
                   gx*t143200*t143400*t143205*t143417*t143389;
                v_rho_a_gamma_aa_[index] = (-t143240+t143336+rho_a[index]*((1.0/(t143301*t143301)*t143307*(b4p*1.0/ \
                   pow(t143241,5.0/3.0)*t143185*(2.0/3.0)+b2p*c*t143324*(1.0/3.0)+b3p*c*t143324*t143294*(1.0/2.0)+b1p* \
                   c*1.0/sqrt(t143243)*t143324*(1.0/6.0)))/t143304-a1p*c*c0p*t143305*t143324*(2.0/3.0))*2.0+rho_a[index]* \
                   (-t143335+t143378+t143223*t143226*(t143335+t143377-t143370*t143371*t143238*t143376-a1p*c*c0p*t143325* \
                   t143196*(2.0/3.0)))+c0p*t143305*t143307*2.0)*(ccab1*gcab*t143337*t143199*(1.0/2.0)+ccab2*gamma_aa[index]* \
                   t143310*t143204*t143244-ccab1*gamma_aa[index]*t143204*t143312*t143244*(1.0/2.0)-ccab2*t143200*t143204* \
                   t143244*t143272*t143264-ccab4*t143203*t143212*t143245*t143290*t143266+ccab4*gamma_aa[index]*t143200* \
                   t143203*t143245*t143309*2.0+ccab3*gcab*t143200*t143311*t143205*t143244*(3.0/2.0)-ccab3*gamma_aa[index]* \
                   gcab*t143200*t143205*t143244*t143265*t143276)*-2.0+t143308*(t143314+t143315+t143316+t143317+t143318+ \
                   t143319-ccab2*gamma_aa[index]*t143310*t143244*t143246*(4.0/3.0)+ccab1*gamma_aa[index]*t143312*t143244* \
                   t143246*(4.0/3.0)+ccab4*t143203*t143212*t143245*t143266*(gamma_aa[index]*t143244*t143246*8.0+gamma_aa[index]* \
                   t143200*t143245*t143247*8.0+gcab*t143200*t143251*t143244*1.6E1)+ccab2*gamma_aa[index]*t143200*t143245* \
                   t143264*t143247*(4.0/3.0)-ccab4*gamma_aa[index]*t143200*t143245*t143309*t143247*8.0-ccab1*gcab*t143200* \
                   t143313*t143251*t143244*(4.0/3.0)-ccab3*gcab*t143200*t143311*t143251*t143244*4.0-ccab2*t143200*t143204* \
                   t143321*t143244*t143272*t143269*2.0-ccab4*t143203*t143212*t143323*t143245*t143290*t143285*2.0+ccab3* \
                   gamma_aa[index]*gcab*t143200*t143205*t143244*t143265*(t143320+gcab*t143200*t143251*t143244*4.0)-ccab3* \
                   gamma_aa[index]*gcab*t143200*t143205*t143322*t143244*t143280*t143276*2.0)-t143383*(t143240+t143223* \
                   t143226*(t143239-c0p*t143196*t143198*2.0))+t143308*(t143314+t143315+t143316+t143317+t143318+t143319- \
                   ccab1*gcab*t143263*t143337*(4.0/3.0)-ccab2*gamma_aa[index]*t143310*t143244*t143246*4.0+ccab1*gamma_aa[index]* \
                   t143312*t143244*t143246*(8.0/3.0)+ccab4*t143203*t143212*t143245*t143266*(gcab*t143263*(1.6E1/3.0)+ \
                   gamma_aa[index]*t143244*t143246*2.4E1+gamma_aa[index]*t143200*t143245*t143247*(4.0E1/3.0)+gcab*t143200* \
                   t143251*t143244*3.2E1)+ccab2*t143200*t143204*t143244*t143264*(t143320+gcab*t143263*(8.0/3.0))-ccab4* \
                   gamma_aa[index]*t143200*t143245*t143309*t143247*(4.0E1/3.0)-ccab1*gcab*t143200*t143313*t143251*t143244* \
                   (4.0/3.0)-ccab3*gcab*t143200*t143311*t143251*t143244*8.0-ccab2*t143200*t143204*t143321*t143244*t143272* \
                   t143269*2.0-ccab4*t143203*t143212*t143323*t143245*t143290*t143285*2.0+ccab3*gamma_aa[index]*gcab*t143200* \
                   t143205*t143244*t143265*(gcab*t143263*4.0+gamma_aa[index]*t143244*t143246*1.2E1+gcab*t143200*t143251* \
                   t143244*8.0)-ccab3*gamma_aa[index]*gcab*t143200*t143205*t143322*t143244*t143280*t143276*2.0)-rho_a[index]* \
                   t143292*(ccaa1*gcaa*t143263*t143338*(-8.0/3.0)-ccaa2*gamma_aa[index]*t143201*t143340*t143246*(3.2E1/ \
                   3.0)+ccaa1*gamma_aa[index]*t143201*t143342*t143246*8.0+ccaa2*t143200*t143201*t143344*t143246*t143357* \
                   (1.6E1/3.0)+ccaa4*t143202*t143212*t143354*t143247*t143349*(3.2E1/3.0)+ccaa4*t143202*t143203*t143212* \
                   t143349*(gcaa*t143263*(3.2E1/3.0)+gamma_aa[index]*t143201*t143246*6.4E1+gamma_aa[index]*t143200*t143202* \
                   t143247*(1.28E2/3.0)+gcaa*t143200*t143201*t143251*9.6E1)-ccaa1*gcaa*t143200*t143201*t143251*1.0/(t143207* \
                   t143207*t143207)*(1.6E1/3.0)+ccaa2*t143200*t143201*t143204*t143344*(gcaa*t143263*(1.6E1/3.0)+gamma_aa[index]* \
                   t143201*t143246*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t143201*t143204*t143360*t143344*2.0-ccaa4*gamma_aa[index]* \
                   t143200*t143202*t143247*t143339*(1.28E2/3.0)-ccaa3*gcaa*t143200*t143201*t143251*t143341*2.4E1+ccaa4* \
                   gamma_aa[index]*t143200*t143202*t143203*t143349*t143369*4.0+ccaa3*gcaa*t143200*t143201*t143205*t143343* \
                   t143364*3.0-ccaa2*t143200*t143201*1.0/(t143220*t143220*t143220)*t143204*t143360*t143357*2.0-ccaa4* \
                   t143202*t143203*t143212*1.0/(t143217*t143217*t143217)*t143354*t143369*2.0+ccaa3*gamma_aa[index]*gcaa* \
                   t143200*t143201*t143205*t143343*(gcaa*t143263*8.0+gamma_aa[index]*t143201*t143246*3.2E1+gcaa*t143200* \
                   t143201*t143251*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t143200*t143201*t143251*t143343*t143348*8.0-ccaa3* \
                   gamma_aa[index]*gcaa*t143200*t143201*1.0/(t143211*t143211*t143211)*t143205*t143364*t143348*2.0)+rho_a[index]* \
                   t143383*(-t143335+t143378+t143223*t143226*(t143335+t143377-t143378-t143370*t143371*t143238*t143376) \
                   )-c0*t143451*t143458*(omega*t143385*(omega*t143442*t143452*(2.778046668940015E15/1.40737488355328E14) \
                   +omega*t143385*((t143388*(1.0/3.0))/rho_a[index]+t143440*1.0/pow(t143384,5.0/3.0)*t143438*(2.778046668940015E15/ \
                   1.40737488355328E14)-t143385*t143386*t143388*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793) \
                   *t143432*t143439*t143388*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t143443*t143452* \
                   (2.778046668940015E15/1.05553116266496E14))-c0*t143451*t143445*(cx1*gx*t143263*t143446*(-8.0/3.0)+ \
                   cx1*gamma_aa[index]*t143450*t143246*t143389*8.0-cx2*gamma_aa[index]*t143246*t143448*t143389*(3.2E1/ \
                   3.0)+cx2*t143200*t143413*t143407*t143246*t143389*(1.6E1/3.0)+cx4*t143212*t143431*t143406*t143390*t143247* \
                   (3.2E1/3.0)+cx4*t143203*t143212*t143406*t143390*(gx*t143263*(3.2E1/3.0)+gamma_aa[index]*t143246*t143389* \
                   6.4E1+gamma_aa[index]*t143200*t143390*t143247*(1.28E2/3.0)+gx*t143200*t143251*t143389*9.6E1)-cx1*gx* \
                   t143200*t143251*1.0/(t143392*t143392*t143392)*t143389*(1.6E1/3.0)+cx2*t143200*t143204*t143407*t143389* \
                   (gx*t143263*(1.6E1/3.0)+gamma_aa[index]*t143246*t143389*(3.2E1/3.0))+cx2*gamma_aa[index]*t143410*t143204* \
                   t143407*t143389*2.0-cx4*gamma_aa[index]*t143200*t143390*t143247*t143447*(1.28E2/3.0)-cx3*gx*t143200* \
                   t143251*t143449*t143389*2.4E1+cx4*gamma_aa[index]*t143200*t143203*t143406*t143390*t143426*4.0+cx3* \
                   gx*t143200*t143400*t143205*t143421*t143389*3.0-cx2*t143200*t143410*t143204*t143413*t143389*1.0/(t143399* \
                   t143399*t143399)*2.0-cx4*t143203*t143212*t143431*1.0/(t143405*t143405*t143405)*t143390*t143426*2.0+ \
                   cx3*gamma_aa[index]*gx*t143200*t143400*t143205*t143389*(gx*t143263*8.0+gamma_aa[index]*t143246*t143389* \
                   3.2E1+gx*t143200*t143251*t143389*2.4E1)+cx3*gamma_aa[index]*gx*t143200*t143400*t143251*t143417*t143389* \
                   8.0-cx3*gamma_aa[index]*gx*t143200*t143205*t143421*t143417*1.0/(t143396*t143396*t143396)*t143389*2.0) \
                   -c0*pow(rho_a[index],1.0/3.0)*t143445*t143458*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t143460 = 1.0/pow(rho_a[index],1.0/3.0);
                double t143461 = c*t143460;
                double t143462 = sqrt(t143461);
                double t143463 = pow(t143461,3.0/2.0);
                double t143464 = c*c;
                double t143465 = 1.0/pow(rho_a[index],2.0/3.0);
                double t143466 = 1.0/c0p;
                double t143467 = b1p*t143462;
                double t143468 = b3p*t143463;
                double t143469 = b4p*t143464*t143465;
                double t143470 = b2p*c*t143460;
                double t143471 = t143470+t143467+t143468+t143469;
                double t143472 = 1.0/t143471;
                double t143473 = t143472*t143466*(1.0/2.0);
                double t143474 = t143473+1.0;
                double t143475 = log(t143474);
                double t143476 = a1p*c*t143460;
                double t143477 = t143476+1.0;
                double t143478 = rho_a[index]*2.0;
                double t143479 = 1.0/pow(t143478,1.0/3.0);
                double t143480 = c*t143479;
                double t143481 = gcab*gcab;
                double t143482 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t143483 = 1.0/pow(rho_a[index],8.0/3.0);
                double t143484 = gamma_aa[index]*gamma_aa[index];
                double t143485 = t143481*t143481;
                double t143486 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t143487 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t143488 = gamma_aa[index]*gcab*t143483;
                double t143489 = t143488+1.0;
                double t143490 = gamma_aa[index]*gcab*t143483*2.0;
                double t143491 = t143481*t143482*t143484;
                double t143492 = t143490+t143491+1.0;
                double t143493 = gamma_aa[index]*gcab*t143483*3.0;
                double t143494 = gamma_aa[index]*gcab*t143481*t143484*t143487;
                double t143495 = t143481*t143482*t143484*3.0;
                double t143496 = t143493+t143494+t143495+1.0;
                double t143497 = t143484*t143484;
                double t143513 = gcab*t143483*2.0;
                double t143514 = gamma_aa[index]*t143481*t143482*6.0;
                double t143515 = gcab*t143481*t143484*t143487*6.0;
                double t143516 = gamma_aa[index]*t143484*t143485*t143486*2.0;
                double t143498 = t143513+t143514+t143515+t143516;
                double t143499 = gamma_aa[index]*gcab*t143483*4.0;
                double t143500 = gamma_aa[index]*gcab*t143481*t143484*t143487*4.0;
                double t143501 = t143481*t143482*t143484*6.0;
                double t143502 = t143485*t143486*t143497;
                double t143503 = t143500+t143501+t143502+t143499+1.0;
                double t143506 = gcab*t143483;
                double t143507 = gamma_aa[index]*t143481*t143482;
                double t143504 = t143506+t143507;
                double t143505 = 1.0/(t143496*t143496);
                double t143508 = 1.0/(t143492*t143492);
                double t143509 = gcab*t143483*(3.0/2.0);
                double t143510 = gamma_aa[index]*t143481*t143482*3.0;
                double t143511 = gcab*t143481*t143484*t143487*(3.0/2.0);
                double t143512 = t143510+t143511+t143509;
                double t143517 = 1.0/(t143503*t143503);
                double t143518 = pow(2.0,1.0/3.0);
                double t143519 = t143518*2.0;
                double t143520 = t143519-2.0;
                double t143521 = two_13*2.0;
                double t143522 = t143521-2.0;
                double t143523 = 1.0/t143522;
                double t143524 = 1.0/c0f;
                double t143525 = b1f*t143462;
                double t143526 = b3f*t143463;
                double t143527 = b4f*t143464*t143465;
                double t143528 = b2f*c*t143460;
                double t143529 = t143525+t143526+t143527+t143528;
                double t143530 = 1.0/t143529;
                double t143531 = t143530*t143524*(1.0/2.0);
                double t143532 = t143531+1.0;
                double t143533 = log(t143532);
                double t143534 = a1f*c*t143460;
                double t143535 = t143534+1.0;
                double t143536 = c0f*t143533*t143535*2.0;
                double t143537 = c0p*t143475*t143477*2.0;
                double t143538 = gcaa*gcaa;
                double t143539 = t143538*t143538;
                double t143540 = gamma_aa[index]*gcaa*t143483;
                double t143541 = t143540+1.0;
                double t143542 = gamma_aa[index]*gcaa*t143483*2.0;
                double t143543 = t143482*t143484*t143538;
                double t143544 = t143542+t143543+1.0;
                double t143545 = gamma_aa[index]*gcaa*t143483*3.0;
                double t143546 = gamma_aa[index]*gcaa*t143484*t143538*t143487;
                double t143547 = t143482*t143484*t143538*3.0;
                double t143548 = t143545+t143546+t143547+1.0;
                double t143564 = gcaa*t143483*4.0;
                double t143565 = gamma_aa[index]*t143482*t143538*1.2E1;
                double t143566 = gcaa*t143484*t143538*t143487*1.2E1;
                double t143567 = gamma_aa[index]*t143484*t143539*t143486*4.0;
                double t143549 = t143564+t143565+t143566+t143567;
                double t143550 = gamma_aa[index]*gcaa*t143483*4.0;
                double t143551 = gamma_aa[index]*gcaa*t143484*t143538*t143487*4.0;
                double t143552 = t143482*t143484*t143538*6.0;
                double t143553 = t143539*t143486*t143497;
                double t143554 = t143550+t143551+t143552+t143553+1.0;
                double t143557 = gcaa*t143483*2.0;
                double t143558 = gamma_aa[index]*t143482*t143538*2.0;
                double t143555 = t143557+t143558;
                double t143556 = 1.0/(t143548*t143548);
                double t143559 = 1.0/(t143544*t143544);
                double t143560 = gcaa*t143483*3.0;
                double t143561 = gamma_aa[index]*t143482*t143538*6.0;
                double t143562 = gcaa*t143484*t143538*t143487*3.0;
                double t143563 = t143560+t143561+t143562;
                double t143568 = 1.0/(t143554*t143554);
                double t143569 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t143570 = 1.0/pow(t143569,1.0/3.0);
                double t143571 = 1.0/(omega*omega);
                double t143572 = pow(t143569,2.0/3.0);
                double t143573 = exp(-t143571*t143572);
                double t143574 = gx*gx;
                double t143575 = t143574*t143574;
                double t143576 = gamma_aa[index]*gx*t143483;
                double t143577 = t143576+1.0;
                double t143578 = gamma_aa[index]*gx*t143483*2.0;
                double t143579 = t143482*t143484*t143574;
                double t143580 = t143578+t143579+1.0;
                double t143581 = gamma_aa[index]*gx*t143483*3.0;
                double t143582 = gamma_aa[index]*gx*t143484*t143574*t143487;
                double t143583 = t143482*t143484*t143574*3.0;
                double t143584 = t143581+t143582+t143583+1.0;
                double t143600 = gx*t143483*4.0;
                double t143601 = gamma_aa[index]*t143482*t143574*1.2E1;
                double t143602 = gx*t143484*t143574*t143487*1.2E1;
                double t143603 = gamma_aa[index]*t143484*t143575*t143486*4.0;
                double t143585 = t143600+t143601+t143602+t143603;
                double t143586 = gamma_aa[index]*gx*t143483*4.0;
                double t143587 = gamma_aa[index]*gx*t143484*t143574*t143487*4.0;
                double t143588 = t143482*t143484*t143574*6.0;
                double t143589 = t143575*t143486*t143497;
                double t143590 = t143586+t143587+t143588+t143589+1.0;
                double t143593 = gx*t143483*2.0;
                double t143594 = gamma_aa[index]*t143482*t143574*2.0;
                double t143591 = t143593+t143594;
                double t143592 = 1.0/(t143584*t143584);
                double t143595 = 1.0/(t143580*t143580);
                double t143596 = gx*t143483*3.0;
                double t143597 = gamma_aa[index]*t143482*t143574*6.0;
                double t143598 = gx*t143484*t143574*t143487*3.0;
                double t143599 = t143596+t143597+t143598;
                double t143604 = 1.0/(t143590*t143590);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t143537+t143520*t143523*(t143536-c0p*t143475*t143477* \
                   2.0))*2.0-c0p*rho_a[index]*log((t143466*(1.0/2.0))/(b1p*sqrt(t143480)+b3p*pow(t143480,3.0/2.0)+b4p* \
                   t143464*1.0/pow(t143478,2.0/3.0)+b2p*c*t143479)+1.0)*(a1p*c*t143479+1.0)*4.0)*((ccab2*t143481*t143482* \
                   (1.0/2.0))/t143492-ccab1*t143481*t143482*1.0/(t143489*t143489)*(1.0/2.0)-ccab2*t143508*t143484*t143485* \
                   t143486*(1.0/2.0)+(ccab4*t143484*t143485*t143486*3.0)/t143503-ccab4*t143517*t143485*t143486*t143497* \
                   (t143481*t143482*3.0+t143484*t143485*t143486*3.0+gamma_aa[index]*gcab*t143481*t143487*6.0)+(ccab3* \
                   gamma_aa[index]*gcab*t143481*t143487*(3.0/2.0))/t143496+ccab1*gamma_aa[index]*gcab*t143481*t143487* \
                   1.0/(t143489*t143489*t143489)*(1.0/2.0)+ccab2*(t143504*t143504)*t143481*t143482*1.0/(t143492*t143492* \
                   t143492)*t143484*2.0+ccab4*1.0/(t143503*t143503*t143503)*t143485*t143486*t143497*(t143498*t143498) \
                   *2.0-ccab2*gamma_aa[index]*t143504*t143481*t143508*t143482*2.0-ccab4*gamma_aa[index]*t143517*t143484* \
                   t143485*t143486*t143498*4.0-ccab3*gcab*t143512*t143505*t143481*t143484*t143487*3.0-ccab3*gamma_aa[index]* \
                   gcab*t143505*t143481*t143484*t143487*(t143481*t143482*(3.0/2.0)+gamma_aa[index]*gcab*t143481*t143487* \
                   (3.0/2.0))+ccab3*gamma_aa[index]*gcab*(t143512*t143512)*t143481*t143484*t143487*1.0/(t143496*t143496* \
                   t143496)*2.0)*4.0+rho_a[index]*(t143537+t143520*t143523*(t143536-t143537))*(ccaa1*1.0/(t143541*t143541) \
                   *t143482*t143538*2.0-(ccaa2*t143482*t143538*2.0)/t143544+ccaa2*t143484*t143539*t143486*t143559*2.0- \
                   (ccaa4*t143484*t143539*t143486*1.2E1)/t143554+ccaa4*t143539*t143486*t143568*t143497*(t143482*t143538* \
                   1.2E1+t143484*t143539*t143486*1.2E1+gamma_aa[index]*gcaa*t143538*t143487*2.4E1)-ccaa1*gamma_aa[index]* \
                   gcaa*1.0/(t143541*t143541*t143541)*t143538*t143487*2.0-(ccaa3*gamma_aa[index]*gcaa*t143538*t143487* \
                   6.0)/t143548-ccaa2*1.0/(t143544*t143544*t143544)*t143482*(t143555*t143555)*t143484*t143538*2.0-ccaa4* \
                   1.0/(t143554*t143554*t143554)*t143539*t143486*(t143549*t143549)*t143497*2.0+ccaa2*gamma_aa[index]* \
                   t143482*t143555*t143538*t143559*4.0+ccaa4*gamma_aa[index]*t143484*t143539*t143486*t143549*t143568* \
                   8.0+ccaa3*gcaa*t143563*t143484*t143538*t143556*t143487*6.0+ccaa3*gamma_aa[index]*gcaa*t143484*t143538* \
                   t143556*t143487*(t143482*t143538*6.0+gamma_aa[index]*gcaa*t143538*t143487*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*(t143563*t143563)*t143484*t143538*1.0/(t143548*t143548*t143548)*t143487*2.0)*2.0+c0*pow(rho_a[index],4.0/ \
                   3.0)*(omega*t143570*(erf(pow(t143569,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t143570*(-t143573+(omega*omega)*1.0/pow(t143569,2.0/3.0)*(t143573-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*(cx1*t143482*t143574*1.0/(t143577*t143577)*2.0-(cx2*t143482*t143574*2.0)/t143580+cx2*t143484* \
                   t143575*t143486*t143595*2.0-(cx4*t143484*t143575*t143486*1.2E1)/t143590+cx4*t143604*t143575*t143486* \
                   t143497*(t143482*t143574*1.2E1+t143484*t143575*t143486*1.2E1+gamma_aa[index]*gx*t143574*t143487*2.4E1) \
                   -cx1*gamma_aa[index]*gx*t143574*t143487*1.0/(t143577*t143577*t143577)*2.0-(cx3*gamma_aa[index]*gx* \
                   t143574*t143487*6.0)/t143584-cx2*1.0/(t143580*t143580*t143580)*t143482*(t143591*t143591)*t143484*t143574* \
                   2.0-cx4*1.0/(t143590*t143590*t143590)*t143575*t143486*(t143585*t143585)*t143497*2.0+cx2*gamma_aa[index]* \
                   t143482*t143591*t143574*t143595*4.0+cx4*gamma_aa[index]*t143604*t143484*t143575*t143486*t143585*8.0+ \
                   cx3*gx*t143484*t143574*t143592*t143487*t143599*6.0+cx3*gamma_aa[index]*gx*t143484*t143574*t143592* \
                   t143487*(t143482*t143574*6.0+gamma_aa[index]*gx*t143574*t143487*6.0)-cx3*gamma_aa[index]*gx*t143484* \
                   t143574*1.0/(t143584*t143584*t143584)*t143487*(t143599*t143599)*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wB97_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t137200 = 1.0/pow(rho_a[index],1.0/3.0);
            double t137201 = c*t137200;
            double t137202 = sqrt(t137201);
            double t137203 = pow(t137201,3.0/2.0);
            double t137204 = c*c;
            double t137205 = 1.0/pow(rho_a[index],2.0/3.0);
            double t137206 = 1.0/c0p;
            double t137207 = b1p*t137202;
            double t137208 = b3p*t137203;
            double t137209 = b4p*t137204*t137205;
            double t137210 = b2p*c*t137200;
            double t137211 = t137210+t137207+t137208+t137209;
            double t137212 = 1.0/t137211;
            double t137213 = t137212*t137206*(1.0/2.0);
            double t137214 = t137213+1.0;
            double t137215 = log(t137214);
            double t137216 = a1p*c*t137200;
            double t137217 = t137216+1.0;
            double t137218 = pow(2.0,1.0/3.0);
            double t137219 = t137218*2.0;
            double t137220 = t137219-2.0;
            double t137221 = two_13*2.0;
            double t137222 = t137221-2.0;
            double t137223 = 1.0/t137222;
            double t137224 = 1.0/c0f;
            double t137225 = 1.0/pow(rho_b[index],1.0/3.0);
            double t137226 = c*t137225;
            double t137227 = sqrt(t137226);
            double t137228 = pow(t137226,3.0/2.0);
            double t137229 = 1.0/pow(rho_b[index],2.0/3.0);
            double t137230 = b1p*t137227;
            double t137231 = b3p*t137228;
            double t137232 = b4p*t137204*t137229;
            double t137233 = b2p*c*t137225;
            double t137234 = t137230+t137231+t137232+t137233;
            double t137235 = 1.0/t137234;
            double t137236 = t137206*t137235*(1.0/2.0);
            double t137237 = t137236+1.0;
            double t137238 = log(t137237);
            double t137239 = a1p*c*t137225;
            double t137240 = t137239+1.0;
            double t137241 = c0p*t137240*t137238*2.0;
            double t137242 = rho_a[index]+rho_b[index];
            double t137243 = 1.0/pow(t137242,1.0/3.0);
            double t137244 = c*t137243;
            double t137245 = sqrt(t137244);
            double t137246 = pow(t137244,3.0/2.0);
            double t137247 = 1.0/pow(t137242,2.0/3.0);
            double t137248 = b1p*t137245;
            double t137249 = b3p*t137246;
            double t137250 = b4p*t137204*t137247;
            double t137251 = b2p*c*t137243;
            double t137252 = t137250+t137251+t137248+t137249;
            double t137253 = 1.0/t137252;
            double t137254 = t137206*t137253*(1.0/2.0);
            double t137255 = t137254+1.0;
            double t137256 = log(t137255);
            double t137257 = a1p*c*t137243;
            double t137258 = t137257+1.0;
            double t137259 = c0p*t137256*t137258*2.0;
            double t137260 = rho_a[index]-rho_b[index];
            double t137261 = t137260*t137260;
            double t137262 = 1.0/t137242;
            double t137263 = t137260*t137262;
            double t137264 = 1.0/(t137242*t137242*t137242*t137242);
            double t137265 = t137261*t137261;
            double t137266 = t137263+1.0;
            double t137267 = pow(t137266,4.0/3.0);
            double t137268 = -t137263+1.0;
            double t137269 = pow(t137268,4.0/3.0);
            double t137270 = t137267+t137269-2.0;
            double t137273 = 1.0/pow(rho_a[index],8.0/3.0);
            double t137274 = gamma_aa[index]*t137273*(1.0/2.0);
            double t137275 = 1.0/pow(rho_b[index],8.0/3.0);
            double t137276 = gamma_bb[index]*t137275*(1.0/2.0);
            double t137271 = t137274+t137276;
            double t137272 = gcab*gcab;
            double t137277 = t137271*t137271;
            double t137278 = t137272*t137272;
            double t137279 = t137277*t137277;
            double t137280 = c0p*t137215*t137217*2.0;
            double t137281 = b1f*t137202;
            double t137282 = b3f*t137203;
            double t137283 = b4f*t137204*t137205;
            double t137284 = b2f*c*t137200;
            double t137285 = t137281+t137282+t137283+t137284;
            double t137286 = 1.0/t137285;
            double t137287 = t137224*t137286*(1.0/2.0);
            double t137288 = t137287+1.0;
            double t137289 = log(t137288);
            double t137290 = a1f*c*t137200;
            double t137291 = t137290+1.0;
            double t137292 = t137280-c0f*t137291*t137289*2.0;
            double t137293 = t137280-t137220*t137223*t137292;
            double t137294 = gamma_aa[index]*gamma_aa[index];
            double t137295 = gcaa*gcaa;
            double t137296 = t137294*t137294;
            double t137297 = t137295*t137295;
            double t137298 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t137299 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t137300 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t137301 = b1f*t137227;
            double t137302 = b3f*t137228;
            double t137303 = b4f*t137204*t137229;
            double t137304 = b2f*c*t137225;
            double t137305 = t137301+t137302+t137303+t137304;
            double t137306 = 1.0/t137305;
            double t137307 = t137224*t137306*(1.0/2.0);
            double t137308 = t137307+1.0;
            double t137309 = log(t137308);
            double t137310 = a1f*c*t137225;
            double t137311 = t137310+1.0;
            double t137312 = t137241-c0f*t137311*t137309*2.0;
            double t137313 = t137241-t137220*t137312*t137223;
            double t137314 = gamma_bb[index]*gamma_bb[index];
            double t137315 = t137314*t137314;
            double t137316 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t137317 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t137318 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t137319 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t137320 = 1.0/pow(t137319,1.0/3.0);
            double t137321 = 1.0/(omega*omega);
            double t137322 = pow(t137319,2.0/3.0);
            double t137323 = exp(-t137321*t137322);
            double t137324 = gx*gx;
            double t137325 = t137324*t137324;
            double t137326 = 1.0/omega;
            double t137327 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t137328 = 1.0/pow(t137327,1.0/3.0);
            double t137329 = omega*omega;
            double t137330 = pow(t137327,2.0/3.0);
            double t137331 = exp(-t137321*t137330);
            functional_[index] = (rho_b[index]*t137313+rho_a[index]*t137293-t137242*(t137259-t137223*t137270* \
               t137264*t137265*(t137259-c0f*log((t137224*(1.0/2.0))/(b1f*t137245+b3f*t137246+b2f*c*t137243+b4f*t137204* \
               t137247)+1.0)*(a1f*c*t137243+1.0)*2.0)+(Aa*t137223*t137270*log((1.0/2.0)/(Aa*(b1a*t137245+b3a*t137246+ \
               b2a*c*t137243+b4a*t137204*t137247))+1.0)*(t137264*t137265-1.0)*(a1a*c*t137243+1.0)*2.0)/d2fz0))*(ccab0+ \
               (ccab4*t137278*t137279)/(gcab*t137271*4.0+t137272*t137277*6.0+t137278*t137279+gcab*t137271*t137272* \
               t137277*4.0+1.0)+(ccab1*gcab*t137271)/(gcab*t137271+1.0)+(ccab2*t137272*t137277)/(gcab*t137271*2.0+ \
               t137272*t137277+1.0)+(ccab3*gcab*t137271*t137272*t137277)/(gcab*t137271*3.0+t137272*t137277*3.0+gcab* \
               t137271*t137272*t137277+1.0))-rho_b[index]*t137313*(ccaa0+(ccaa2*t137314*t137318*t137295)/(gamma_bb[index]* \
               gcaa*t137275*2.0+t137314*t137318*t137295+1.0)+(ccaa1*gamma_bb[index]*gcaa*t137275)/(gamma_bb[index]* \
               gcaa*t137275+1.0)+(ccaa4*t137315*t137316*t137297)/(gamma_bb[index]*gcaa*t137275*4.0+t137314*t137318* \
               t137295*6.0+t137315*t137316*t137297+gamma_bb[index]*gcaa*t137314*t137317*t137295*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t137314*t137317*t137295)/(gamma_bb[index]*gcaa*t137275*3.0+t137314*t137318*t137295*3.0+gamma_bb[index]* \
               gcaa*t137314*t137317*t137295+1.0))-rho_a[index]*t137293*(ccaa0+(ccaa2*t137300*t137294*t137295)/(gamma_aa[index]* \
               gcaa*t137273*2.0+t137300*t137294*t137295+1.0)+(ccaa1*gamma_aa[index]*gcaa*t137273)/(gamma_aa[index]* \
               gcaa*t137273+1.0)+(ccaa4*t137296*t137297*t137298)/(gamma_aa[index]*gcaa*t137273*4.0+t137300*t137294* \
               t137295*6.0+t137296*t137297*t137298+gamma_aa[index]*gcaa*t137294*t137295*t137299*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t137294*t137295*t137299)/(gamma_aa[index]*gcaa*t137273*3.0+t137300*t137294*t137295*3.0+gamma_aa[index]* \
               gcaa*t137294*t137295*t137299+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t137328*(erf(t137326*pow(t137327,1.0/ \
               3.0))*(3.991211251234741E15/2.251799813685248E15)-omega*t137328*(-t137331+1.0/pow(t137327,2.0/3.0) \
               *t137329*(t137331-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t137314*t137324*t137318)/(gamma_bb[index]* \
               gx*t137275*2.0+t137314*t137324*t137318+1.0)+(cx1*gamma_bb[index]*gx*t137275)/(gamma_bb[index]*gx*t137275+ \
               1.0)+(cx4*t137315*t137316*t137325)/(gamma_bb[index]*gx*t137275*4.0+t137314*t137324*t137318*6.0+t137315* \
               t137316*t137325+gamma_bb[index]*gx*t137314*t137324*t137317*4.0+1.0)+(cx3*gamma_bb[index]*gx*t137314* \
               t137324*t137317)/(gamma_bb[index]*gx*t137275*3.0+t137314*t137324*t137318*3.0+gamma_bb[index]*gx*t137314* \
               t137324*t137317+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t137320*(erf(t137326*pow(t137319,1.0/3.0) \
               )*(3.991211251234741E15/2.251799813685248E15)-omega*t137320*(-t137323+1.0/pow(t137319,2.0/3.0)*t137329* \
               (t137323-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t137300*t137324*t137294)/(gamma_aa[index]* \
               gx*t137273*2.0+t137300*t137324*t137294+1.0)+(cx1*gamma_aa[index]*gx*t137273)/(gamma_aa[index]*gx*t137273+ \
               1.0)+(cx4*t137325*t137296*t137298)/(gamma_aa[index]*gx*t137273*4.0+t137300*t137324*t137294*6.0+t137325* \
               t137296*t137298+gamma_aa[index]*gx*t137324*t137294*t137299*4.0+1.0)+(cx3*gamma_aa[index]*gx*t137324* \
               t137294*t137299)/(gamma_aa[index]*gx*t137273*3.0+t137300*t137324*t137294*3.0+gamma_aa[index]*gx*t137324* \
               t137294*t137299+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t141699 = 1.0/pow(rho_a[index],1.0/3.0);
            double t141700 = c*t141699;
            double t141701 = sqrt(t141700);
            double t141702 = pow(t141700,3.0/2.0);
            double t141703 = c*c;
            double t141704 = 1.0/pow(rho_a[index],2.0/3.0);
            double t141705 = 1.0/c0p;
            double t141706 = b1p*t141701;
            double t141707 = b3p*t141702;
            double t141708 = b4p*t141703*t141704;
            double t141709 = b2p*c*t141699;
            double t141710 = t141706+t141707+t141708+t141709;
            double t141711 = 1.0/t141710;
            double t141712 = t141711*t141705*(1.0/2.0);
            double t141713 = t141712+1.0;
            double t141714 = log(t141713);
            double t141715 = a1p*c*t141699;
            double t141716 = t141715+1.0;
            double t141717 = gamma_aa[index]*gamma_aa[index];
            double t141718 = gcaa*gcaa;
            double t141719 = t141717*t141717;
            double t141720 = t141718*t141718;
            double t141721 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t141722 = 1.0/pow(rho_a[index],8.0/3.0);
            double t141723 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t141724 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t141725 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t141726 = 1.0/pow(t141725,1.0/3.0);
            double t141727 = 1.0/(omega*omega);
            double t141728 = pow(t141725,2.0/3.0);
            double t141729 = exp(-t141727*t141728);
            double t141730 = gx*gx;
            double t141731 = t141730*t141730;
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t141701+ \
               b3f*t141702+b2f*c*t141699+b4f*t141703*t141704))+1.0)*(a1f*c*t141699+1.0)*2.0-c0p*t141714*t141716*2.0) \
               )/(two_13*2.0-2.0)+c0p*t141714*t141716*2.0)*(ccaa0+(ccaa2*t141724*t141717*t141718)/(gamma_aa[index]* \
               gcaa*t141722*2.0+t141724*t141717*t141718+1.0)+(ccaa1*gamma_aa[index]*gcaa*t141722)/(gamma_aa[index]* \
               gcaa*t141722+1.0)+(ccaa4*t141720*t141721*t141719)/(gamma_aa[index]*gcaa*t141722*4.0+t141720*t141721* \
               t141719+t141724*t141717*t141718*6.0+gamma_aa[index]*gcaa*t141723*t141717*t141718*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t141723*t141717*t141718)/(gamma_aa[index]*gcaa*t141722*3.0+t141724*t141717*t141718*3.0+gamma_aa[index]* \
               gcaa*t141723*t141717*t141718+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t141726*(erf(pow(t141725,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t141726*(-t141729+(omega*omega)*1.0/ \
               pow(t141725,2.0/3.0)*(t141729-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t141730*t141724*t141717) \
               /(gamma_aa[index]*gx*t141722*2.0+t141730*t141724*t141717+1.0)+(cx1*gamma_aa[index]*gx*t141722)/(gamma_aa[index]* \
               gx*t141722+1.0)+(cx4*t141721*t141731*t141719)/(gamma_aa[index]*gx*t141722*4.0+t141721*t141731*t141719+ \
               t141730*t141724*t141717*6.0+gamma_aa[index]*gx*t141730*t141723*t141717*4.0+1.0)+(cx3*gamma_aa[index]* \
               gx*t141730*t141723*t141717)/(gamma_aa[index]*gx*t141722*3.0+t141730*t141724*t141717*3.0+gamma_aa[index]* \
               gx*t141730*t141723*t141717+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t140944 = 1.0/pow(rho_b[index],1.0/3.0);
            double t140945 = c*t140944;
            double t140946 = sqrt(t140945);
            double t140947 = pow(t140945,3.0/2.0);
            double t140948 = c*c;
            double t140949 = 1.0/pow(rho_b[index],2.0/3.0);
            double t140950 = 1.0/c0p;
            double t140951 = b1p*t140946;
            double t140952 = b3p*t140947;
            double t140953 = b4p*t140948*t140949;
            double t140954 = b2p*c*t140944;
            double t140955 = t140951+t140952+t140953+t140954;
            double t140956 = 1.0/t140955;
            double t140957 = t140950*t140956*(1.0/2.0);
            double t140958 = t140957+1.0;
            double t140959 = log(t140958);
            double t140960 = a1p*c*t140944;
            double t140961 = t140960+1.0;
            double t140962 = gamma_bb[index]*gamma_bb[index];
            double t140963 = gcaa*gcaa;
            double t140964 = t140962*t140962;
            double t140965 = t140963*t140963;
            double t140966 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t140967 = 1.0/pow(rho_b[index],8.0/3.0);
            double t140968 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t140969 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t140970 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t140971 = 1.0/pow(t140970,1.0/3.0);
            double t140972 = 1.0/(omega*omega);
            double t140973 = pow(t140970,2.0/3.0);
            double t140974 = exp(-t140972*t140973);
            double t140975 = gx*gx;
            double t140976 = t140975*t140975;
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t140946+ \
               b3f*t140947+b2f*c*t140944+b4f*t140948*t140949))+1.0)*(a1f*c*t140944+1.0)*2.0-c0p*t140961*t140959*2.0) \
               )/(two_13*2.0-2.0)+c0p*t140961*t140959*2.0)*(ccaa0+(ccaa2*t140962*t140963*t140969)/(gamma_bb[index]* \
               gcaa*t140967*2.0+t140962*t140963*t140969+1.0)+(ccaa1*gamma_bb[index]*gcaa*t140967)/(gamma_bb[index]* \
               gcaa*t140967+1.0)+(ccaa4*t140964*t140965*t140966)/(gamma_bb[index]*gcaa*t140967*4.0+t140962*t140963* \
               t140969*6.0+t140964*t140965*t140966+gamma_bb[index]*gcaa*t140962*t140963*t140968*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t140962*t140963*t140968)/(gamma_bb[index]*gcaa*t140967*3.0+t140962*t140963*t140969*3.0+gamma_bb[index]* \
               gcaa*t140962*t140963*t140968+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t140971*(erf(pow(t140970,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t140971*(-t140974+(omega*omega)*1.0/ \
               pow(t140970,2.0/3.0)*(t140974-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t140962*t140975*t140969) \
               /(gamma_bb[index]*gx*t140967*2.0+t140962*t140975*t140969+1.0)+(cx1*gamma_bb[index]*gx*t140967)/(gamma_bb[index]* \
               gx*t140967+1.0)+(cx4*t140964*t140966*t140976)/(gamma_bb[index]*gx*t140967*4.0+t140962*t140975*t140969* \
               6.0+t140964*t140966*t140976+gamma_bb[index]*gx*t140962*t140975*t140968*4.0+1.0)+(cx3*gamma_bb[index]* \
               gx*t140962*t140975*t140968)/(gamma_bb[index]*gx*t140967*3.0+t140962*t140975*t140969*3.0+gamma_bb[index]* \
               gx*t140962*t140975*t140968+1.0));
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t137333 = 1.0/pow(rho_a[index],1.0/3.0);
            double t137334 = c*t137333;
            double t137335 = sqrt(t137334);
            double t137336 = pow(t137334,3.0/2.0);
            double t137337 = c*c;
            double t137338 = 1.0/pow(rho_a[index],2.0/3.0);
            double t137339 = 1.0/c0p;
            double t137340 = b1p*t137335;
            double t137341 = b3p*t137336;
            double t137342 = b4p*t137337*t137338;
            double t137343 = b2p*c*t137333;
            double t137344 = t137340+t137341+t137342+t137343;
            double t137345 = 1.0/t137344;
            double t137346 = t137345*t137339*(1.0/2.0);
            double t137347 = t137346+1.0;
            double t137348 = log(t137347);
            double t137349 = a1p*c*t137333;
            double t137350 = t137349+1.0;
            double t137351 = gamma_aa[index]*gamma_aa[index];
            double t137352 = gcaa*gcaa;
            double t137353 = t137351*t137351;
            double t137354 = t137352*t137352;
            double t137355 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t137356 = 1.0/pow(rho_a[index],8.0/3.0);
            double t137357 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t137358 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t137359 = pow(2.0,1.0/3.0);
            double t137360 = t137359*2.0;
            double t137361 = t137360-2.0;
            double t137362 = two_13*2.0;
            double t137363 = t137362-2.0;
            double t137364 = 1.0/t137363;
            double t137365 = 1.0/c0f;
            double t137366 = b1f*t137335;
            double t137367 = b3f*t137336;
            double t137368 = b4f*t137337*t137338;
            double t137369 = b2f*c*t137333;
            double t137370 = t137366+t137367+t137368+t137369;
            double t137371 = 1.0/t137370;
            double t137372 = t137371*t137365*(1.0/2.0);
            double t137373 = t137372+1.0;
            double t137374 = log(t137373);
            double t137375 = a1f*c*t137333;
            double t137376 = t137375+1.0;
            double t137377 = c0f*t137374*t137376*2.0;
            double t137378 = c0p*t137350*t137348*2.0;
            double t137379 = 1.0/pow(rho_b[index],1.0/3.0);
            double t137380 = c*t137379;
            double t137381 = sqrt(t137380);
            double t137382 = pow(t137380,3.0/2.0);
            double t137383 = 1.0/pow(rho_b[index],2.0/3.0);
            double t137384 = b1p*t137381;
            double t137385 = b3p*t137382;
            double t137386 = b4p*t137337*t137383;
            double t137387 = b2p*c*t137379;
            double t137388 = t137384+t137385+t137386+t137387;
            double t137389 = 1.0/t137388;
            double t137390 = t137339*t137389*(1.0/2.0);
            double t137391 = t137390+1.0;
            double t137392 = log(t137391);
            double t137393 = a1p*c*t137379;
            double t137394 = t137393+1.0;
            double t137395 = c0p*t137392*t137394*2.0;
            double t137396 = rho_a[index]+rho_b[index];
            double t137397 = 1.0/pow(t137396,1.0/3.0);
            double t137398 = c*t137397;
            double t137399 = sqrt(t137398);
            double t137400 = pow(t137398,3.0/2.0);
            double t137401 = 1.0/pow(t137396,2.0/3.0);
            double t137402 = b1p*t137399;
            double t137403 = b3p*t137400;
            double t137404 = b4p*t137401*t137337;
            double t137405 = b2p*c*t137397;
            double t137406 = t137402+t137403+t137404+t137405;
            double t137407 = 1.0/t137406;
            double t137408 = t137407*t137339*(1.0/2.0);
            double t137409 = t137408+1.0;
            double t137410 = log(t137409);
            double t137411 = a1p*c*t137397;
            double t137412 = t137411+1.0;
            double t137413 = c0p*t137410*t137412*2.0;
            double t137414 = rho_a[index]-rho_b[index];
            double t137415 = t137414*t137414;
            double t137416 = 1.0/t137396;
            double t137417 = t137414*t137416;
            double t137418 = 1.0/(t137396*t137396*t137396*t137396);
            double t137419 = t137415*t137415;
            double t137420 = t137417+1.0;
            double t137421 = pow(t137420,4.0/3.0);
            double t137422 = -t137417+1.0;
            double t137423 = pow(t137422,4.0/3.0);
            double t137424 = t137421+t137423-2.0;
            double t137425 = gcab*gcab;
            double t137429 = gamma_aa[index]*t137356*(1.0/2.0);
            double t137430 = 1.0/pow(rho_b[index],8.0/3.0);
            double t137431 = gamma_bb[index]*t137430*(1.0/2.0);
            double t137426 = t137431+t137429;
            double t137427 = t137426*t137426;
            double t137428 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t137432 = t137425*t137425;
            double t137433 = t137427*t137427;
            double t137434 = t137425*t137427*6.0;
            double t137435 = gcab*t137425*t137426*t137427*4.0;
            double t137436 = t137432*t137433;
            double t137437 = gcab*t137426*4.0;
            double t137438 = t137434+t137435+t137436+t137437+1.0;
            double t137439 = gcab*t137426;
            double t137440 = t137439+1.0;
            double t137441 = t137425*t137427;
            double t137442 = gcab*t137426*2.0;
            double t137443 = t137441+t137442+1.0;
            double t137444 = t137425*t137427*3.0;
            double t137445 = gcab*t137425*t137426*t137427;
            double t137446 = gcab*t137426*3.0;
            double t137447 = t137444+t137445+t137446+1.0;
            double t137448 = 1.0/t137443;
            double t137449 = 1.0/t137447;
            double t137450 = 1.0/t137440;
            double t137451 = 1.0/t137438;
            double t137452 = 1.0/pow(t137396,4.0/3.0);
            double t137453 = b1f*t137399;
            double t137454 = b3f*t137400;
            double t137455 = b4f*t137401*t137337;
            double t137456 = b2f*c*t137397;
            double t137457 = t137453+t137454+t137455+t137456;
            double t137458 = 1.0/t137457;
            double t137459 = t137365*t137458*(1.0/2.0);
            double t137460 = t137459+1.0;
            double t137461 = log(t137460);
            double t137462 = a1f*c*t137397;
            double t137463 = t137462+1.0;
            double t137465 = c0f*t137461*t137463*2.0;
            double t137464 = t137413-t137465;
            double t137466 = 1.0/(t137396*t137396);
            double t137493 = t137414*t137466;
            double t137467 = t137416-t137493;
            double t137468 = 1.0/pow(t137396,5.0/3.0);
            double t137469 = 1.0/sqrt(t137398);
            double t137470 = 1.0/t137409;
            double t137471 = 1.0/(t137406*t137406);
            double t137472 = b4p*t137337*t137468*(2.0/3.0);
            double t137473 = b2p*c*t137452*(1.0/3.0);
            double t137474 = b1p*c*t137452*t137469*(1.0/6.0);
            double t137475 = b3p*c*t137452*t137399*(1.0/2.0);
            double t137476 = t137472+t137473+t137474+t137475;
            double t137477 = t137412*t137470*t137471*t137476;
            double t137478 = 1.0/d2fz0;
            double t137479 = 1.0/Aa;
            double t137480 = b1a*t137399;
            double t137481 = b3a*t137400;
            double t137482 = b4a*t137401*t137337;
            double t137483 = b2a*c*t137397;
            double t137484 = t137480+t137481+t137482+t137483;
            double t137485 = 1.0/t137484;
            double t137486 = t137485*t137479*(1.0/2.0);
            double t137487 = t137486+1.0;
            double t137488 = log(t137487);
            double t137489 = a1a*c*t137397;
            double t137490 = t137489+1.0;
            double t137491 = 1.0/(t137396*t137396*t137396*t137396*t137396);
            double t137492 = pow(t137420,1.0/3.0);
            double t137494 = t137492*t137467*(4.0/3.0);
            double t137495 = pow(t137422,1.0/3.0);
            double t137496 = t137494-t137467*t137495*(4.0/3.0);
            double t137497 = t137418*t137419;
            double t137498 = t137497-1.0;
            double t137499 = 1.0/pow(rho_a[index],4.0/3.0);
            double t137500 = 1.0/pow(rho_a[index],5.0/3.0);
            double t137501 = 1.0/sqrt(t137334);
            double t137502 = 1.0/t137347;
            double t137503 = 1.0/(t137344*t137344);
            double t137504 = b4p*t137500*t137337*(2.0/3.0);
            double t137505 = b2p*c*t137499*(1.0/3.0);
            double t137506 = b1p*c*t137501*t137499*(1.0/6.0);
            double t137507 = b3p*c*t137335*t137499*(1.0/2.0);
            double t137508 = t137504+t137505+t137506+t137507;
            double t137509 = t137502*t137350*t137503*t137508;
            double t137510 = t137377-t137378;
            double t137511 = t137510*t137361*t137364;
            double t137512 = Aa*t137424*t137364*t137490*t137478*t137488*t137498*2.0;
            double t137513 = t137511+t137378;
            double t137514 = gamma_aa[index]*gcaa*t137356*4.0;
            double t137515 = gamma_aa[index]*gcaa*t137351*t137352*t137357*4.0;
            double t137516 = t137351*t137352*t137358*6.0;
            double t137517 = t137353*t137354*t137355;
            double t137518 = t137514+t137515+t137516+t137517+1.0;
            double t137519 = 1.0/t137518;
            double t137520 = gamma_aa[index]*gcaa*t137356;
            double t137521 = t137520+1.0;
            double t137522 = 1.0/t137521;
            double t137523 = gamma_aa[index]*gcaa*t137356*3.0;
            double t137524 = gamma_aa[index]*gcaa*t137351*t137352*t137357;
            double t137525 = t137351*t137352*t137358*3.0;
            double t137526 = t137523+t137524+t137525+1.0;
            double t137527 = 1.0/t137526;
            double t137528 = gamma_aa[index]*gcaa*t137356*2.0;
            double t137529 = t137351*t137352*t137358;
            double t137530 = t137528+t137529+1.0;
            double t137531 = 1.0/t137530;
            double t137532 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t137533 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t137534 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t137535 = 1.0/t137373;
            double t137536 = 1.0/(t137370*t137370);
            double t137537 = b4f*t137500*t137337*(2.0/3.0);
            double t137538 = b2f*c*t137499*(1.0/3.0);
            double t137539 = b1f*c*t137501*t137499*(1.0/6.0);
            double t137540 = b3f*c*t137335*t137499*(1.0/2.0);
            double t137541 = t137540+t137537+t137538+t137539;
            double t137542 = a1f*c*c0f*t137374*t137499*(2.0/3.0);
            double t137543 = a1p*c*c0p*t137348*t137499*(2.0/3.0);
            double t137544 = ccaa4*t137353*t137354*t137355*t137519;
            double t137545 = ccaa1*gamma_aa[index]*gcaa*t137522*t137356;
            double t137546 = ccaa3*gamma_aa[index]*gcaa*t137351*t137352*t137527*t137357;
            double t137547 = ccaa2*t137351*t137531*t137352*t137358;
            double t137548 = ccaa0+t137544+t137545+t137546+t137547;
            double t137549 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t137550 = 1.0/(omega*omega);
            double t137551 = pow(t137549,2.0/3.0);
            double t137554 = t137550*t137551;
            double t137552 = exp(-t137554);
            double t137553 = 1.0/pow(t137549,1.0/3.0);
            double t137555 = omega*omega;
            double t137556 = t137552-1.0;
            double t137557 = 1.0/pow(t137549,2.0/3.0);
            double t137558 = 1.0/pow(t137549,4.0/3.0);
            double t137559 = 1.0/omega;
            double t137560 = t137555*t137556*t137557*(1.0/2.0);
            double t137561 = t137560-t137552+3.0/2.0;
            double t137562 = gx*gx;
            double t137563 = t137562*t137562;
            double t137564 = pow(rho_a[index],4.0/3.0);
            double t137565 = pow(t137549,1.0/3.0);
            double t137566 = t137565*t137559;
            double t137567 = erf(t137566);
            double t137568 = t137567*(3.991211251234741E15/2.251799813685248E15);
            double t137588 = omega*t137561*t137553;
            double t137569 = t137568-t137588;
            double t137570 = gamma_aa[index]*gx*t137356*4.0;
            double t137571 = gamma_aa[index]*gx*t137351*t137562*t137357*4.0;
            double t137572 = t137351*t137562*t137358*6.0;
            double t137573 = t137353*t137355*t137563;
            double t137574 = t137570+t137571+t137572+t137573+1.0;
            double t137575 = 1.0/t137574;
            double t137576 = gamma_aa[index]*gx*t137356;
            double t137577 = t137576+1.0;
            double t137578 = 1.0/t137577;
            double t137579 = gamma_aa[index]*gx*t137356*3.0;
            double t137580 = gamma_aa[index]*gx*t137351*t137562*t137357;
            double t137581 = t137351*t137562*t137358*3.0;
            double t137582 = t137580+t137581+t137579+1.0;
            double t137583 = 1.0/t137582;
            double t137584 = gamma_aa[index]*gx*t137356*2.0;
            double t137585 = t137351*t137562*t137358;
            double t137586 = t137584+t137585+1.0;
            double t137587 = 1.0/t137586;
            double t137589 = omega*t137553*t137569*(4.0/3.0);
            double t137590 = t137589-1.0;
            double t137591 = cx4*t137353*t137355*t137563*t137575;
            double t137592 = cx1*gamma_aa[index]*gx*t137356*t137578;
            double t137593 = cx3*gamma_aa[index]*gx*t137351*t137562*t137357*t137583;
            double t137594 = cx2*t137351*t137562*t137358*t137587;
            double t137595 = cx0+t137591+t137592+t137593+t137594;
            v_rho_a_[index] = (ccab0+ccab1*gcab*t137450*t137426+ccab4*t137432*t137433*t137451+ccab2*t137425*t137427* \
               t137448+ccab3*gcab*t137425*t137426*t137427*t137449)*(t137511-t137413-t137512+t137378-rho_a[index]* \
               (t137543-t137509+t137361*t137364*(t137542+t137509-t137541*t137535*t137536*t137376-a1p*c*c0p*t137348* \
               t137499*(2.0/3.0)))+t137396*(-t137477+t137424*t137364*t137418*t137419*(t137477-(t137463*1.0/(t137457* \
               t137457)*(b2f*c*t137452*(1.0/3.0)+b4f*t137337*t137468*(2.0/3.0)+b1f*c*t137452*t137469*(1.0/6.0)+b3f* \
               c*t137452*t137399*(1.0/2.0)))/t137460+a1f*c*c0f*t137452*t137461*(2.0/3.0)-a1p*c*c0p*t137410*t137452* \
               (2.0/3.0))+a1p*c*c0p*t137410*t137452*(2.0/3.0)-t137424*t137364*t137419*t137464*t137491*4.0+t137364* \
               t137418*t137419*t137464*t137496+t137414*t137415*t137424*t137364*t137418*t137464*4.0+Aa*t137424*t137364* \
               t137490*t137478*t137488*(t137419*t137491*4.0-t137414*t137415*t137418*4.0)*2.0-Aa*t137364*t137490*t137478* \
               t137496*t137488*t137498*2.0-(t137424*t137364*t137490*1.0/(t137484*t137484)*t137478*t137498*(b2a*c* \
               t137452*(1.0/3.0)+b4a*t137337*t137468*(2.0/3.0)+b1a*c*t137452*t137469*(1.0/6.0)+b3a*c*t137452*t137399* \
               (1.0/2.0)))/t137487+Aa*a1a*c*t137424*t137452*t137364*t137478*t137488*t137498*(2.0/3.0))+t137424*t137364* \
               t137418*t137419*t137464)-t137548*(t137378+t137361*t137364*(t137377-c0p*t137350*t137348*2.0))-(rho_a[index]* \
               t137513+rho_b[index]*(t137395-t137361*t137364*(t137395-c0f*log((t137365*(1.0/2.0))/(b1f*t137381+b3f* \
               t137382+b2f*c*t137379+b4f*t137337*t137383)+1.0)*(a1f*c*t137379+1.0)*2.0))-t137396*(t137413+t137512- \
               t137424*t137364*t137418*t137419*t137464))*(ccab1*gamma_aa[index]*gcab*t137450*t137428*(4.0/3.0)-ccab2* \
               t137425*1.0/(t137443*t137443)*t137427*(gamma_aa[index]*gcab*t137428*(8.0/3.0)+gamma_aa[index]*t137425* \
               t137426*t137428*(8.0/3.0))-ccab4*t137432*t137433*1.0/(t137438*t137438)*(gamma_aa[index]*gcab*t137428* \
               (1.6E1/3.0)+gamma_aa[index]*t137425*t137426*t137428*1.6E1+gamma_aa[index]*gcab*t137425*t137427*t137428* \
               1.6E1+gamma_aa[index]*t137432*t137426*t137427*t137428*(1.6E1/3.0))-ccab1*gamma_aa[index]*1.0/(t137440* \
               t137440)*t137425*t137426*t137428*(4.0/3.0)+ccab2*gamma_aa[index]*t137425*t137426*t137428*t137448*(8.0/ \
               3.0)-ccab3*gcab*t137425*t137426*t137427*1.0/(t137447*t137447)*(gamma_aa[index]*gcab*t137428*4.0+gamma_aa[index]* \
               t137425*t137426*t137428*8.0+gamma_aa[index]*gcab*t137425*t137427*t137428*4.0)+ccab3*gamma_aa[index]* \
               gcab*t137425*t137427*t137428*t137449*4.0+ccab4*gamma_aa[index]*t137432*t137451*t137426*t137427*t137428* \
               (1.6E1/3.0))+rho_a[index]*t137513*(ccaa1*gamma_aa[index]*gcaa*t137522*t137428*(8.0/3.0)+ccaa2*t137351* \
               t137531*t137352*t137532*(1.6E1/3.0)+ccaa4*t137353*t137354*t137534*t137519*(3.2E1/3.0)-ccaa1*1.0/(t137521* \
               t137521)*t137351*t137352*t137532*(8.0/3.0)-ccaa2*1.0/(t137530*t137530)*t137351*t137352*t137358*(gamma_aa[index]* \
               gcaa*t137428*(1.6E1/3.0)+t137351*t137352*t137532*(1.6E1/3.0))-ccaa4*t137353*t137354*t137355*1.0/(t137518* \
               t137518)*(gamma_aa[index]*gcaa*t137428*(3.2E1/3.0)+t137351*t137352*t137532*3.2E1+t137353*t137354*t137534* \
               (3.2E1/3.0)+gamma_aa[index]*gcaa*t137351*t137352*t137533*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t137351* \
               t137352*t137533*t137527*8.0-ccaa3*gamma_aa[index]*gcaa*t137351*t137352*1.0/(t137526*t137526)*t137357* \
               (gamma_aa[index]*gcaa*t137428*8.0+t137351*t137352*t137532*1.6E1+gamma_aa[index]*gcaa*t137351*t137352* \
               t137533*8.0))+rho_a[index]*t137548*(t137543-t137509+t137361*t137364*(t137542-t137543+t137509-t137541* \
               t137535*t137536*t137376))-c0*t137564*t137595*(omega*t137553*(omega*t137561*t137558*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t137553*((t137552*(1.0/3.0))/rho_a[index]+t137555*t137556*1.0/pow(t137549,5.0/ \
               3.0)*(2.778046668940015E15/1.40737488355328E14)-t137550*t137552*t137553*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t137552*t137557*t137559*(1.108777112152858E31/1.584563250285287E29)) \
               *(4.0/3.0)-omega*t137558*t137569*(2.778046668940015E15/1.05553116266496E14))-c0*pow(rho_a[index],1.0/ \
               3.0)*t137590*t137595*(4.0/3.0)+c0*t137590*t137564*(cx1*gamma_aa[index]*gx*t137428*t137578*(8.0/3.0) \
               +cx2*t137351*t137532*t137562*t137587*(1.6E1/3.0)+cx4*t137353*t137534*t137563*t137575*(3.2E1/3.0)-cx1* \
               t137351*t137532*t137562*1.0/(t137577*t137577)*(8.0/3.0)-cx2*t137351*t137562*t137358*1.0/(t137586*t137586) \
               *(gamma_aa[index]*gx*t137428*(1.6E1/3.0)+t137351*t137532*t137562*(1.6E1/3.0))-cx4*t137353*t137355* \
               t137563*1.0/(t137574*t137574)*(gamma_aa[index]*gx*t137428*(3.2E1/3.0)+t137351*t137532*t137562*3.2E1+ \
               t137353*t137534*t137563*(3.2E1/3.0)+gamma_aa[index]*gx*t137351*t137533*t137562*3.2E1)+cx3*gamma_aa[index]* \
               gx*t137351*t137533*t137562*t137583*8.0-cx3*gamma_aa[index]*gx*t137351*t137562*t137357*1.0/(t137582* \
               t137582)*(gamma_aa[index]*gx*t137428*8.0+t137351*t137532*t137562*1.6E1+gamma_aa[index]*gx*t137351* \
               t137533*t137562*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t141733 = 1.0/pow(rho_a[index],1.0/3.0);
            double t141734 = c*t141733;
            double t141735 = sqrt(t141734);
            double t141736 = pow(t141734,3.0/2.0);
            double t141737 = c*c;
            double t141738 = 1.0/pow(rho_a[index],2.0/3.0);
            double t141739 = 1.0/c0p;
            double t141740 = b1p*t141735;
            double t141741 = b3p*t141736;
            double t141742 = b4p*t141737*t141738;
            double t141743 = b2p*c*t141733;
            double t141744 = t141740+t141741+t141742+t141743;
            double t141745 = 1.0/t141744;
            double t141746 = t141745*t141739*(1.0/2.0);
            double t141747 = t141746+1.0;
            double t141748 = log(t141747);
            double t141749 = a1p*c*t141733;
            double t141750 = t141749+1.0;
            double t141751 = gamma_aa[index]*gamma_aa[index];
            double t141752 = gcaa*gcaa;
            double t141753 = t141751*t141751;
            double t141754 = t141752*t141752;
            double t141755 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t141756 = 1.0/pow(rho_a[index],8.0/3.0);
            double t141757 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t141758 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t141759 = pow(2.0,1.0/3.0);
            double t141760 = t141759*2.0;
            double t141761 = t141760-2.0;
            double t141762 = two_13*2.0;
            double t141763 = t141762-2.0;
            double t141764 = 1.0/t141763;
            double t141765 = 1.0/c0f;
            double t141766 = b1f*t141735;
            double t141767 = b3f*t141736;
            double t141768 = b4f*t141737*t141738;
            double t141769 = b2f*c*t141733;
            double t141770 = t141766+t141767+t141768+t141769;
            double t141771 = 1.0/t141770;
            double t141772 = t141771*t141765*(1.0/2.0);
            double t141773 = t141772+1.0;
            double t141774 = log(t141773);
            double t141775 = a1f*c*t141733;
            double t141776 = t141775+1.0;
            double t141777 = c0f*t141774*t141776*2.0;
            double t141778 = c0p*t141750*t141748*2.0;
            double t141779 = gamma_aa[index]*gcaa*t141756*4.0;
            double t141780 = gamma_aa[index]*gcaa*t141751*t141752*t141757*4.0;
            double t141781 = t141751*t141752*t141758*6.0;
            double t141782 = t141753*t141754*t141755;
            double t141783 = t141780+t141781+t141782+t141779+1.0;
            double t141784 = 1.0/t141783;
            double t141785 = gamma_aa[index]*gcaa*t141756;
            double t141786 = t141785+1.0;
            double t141787 = 1.0/t141786;
            double t141788 = gamma_aa[index]*gcaa*t141756*3.0;
            double t141789 = gamma_aa[index]*gcaa*t141751*t141752*t141757;
            double t141790 = t141751*t141752*t141758*3.0;
            double t141791 = t141790+t141788+t141789+1.0;
            double t141792 = 1.0/t141791;
            double t141793 = gamma_aa[index]*gcaa*t141756*2.0;
            double t141794 = t141751*t141752*t141758;
            double t141795 = t141793+t141794+1.0;
            double t141796 = 1.0/t141795;
            double t141797 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t141798 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t141799 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t141800 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t141801 = 1.0/pow(rho_a[index],4.0/3.0);
            double t141802 = 1.0/pow(rho_a[index],5.0/3.0);
            double t141803 = 1.0/sqrt(t141734);
            double t141804 = 1.0/t141747;
            double t141805 = 1.0/(t141744*t141744);
            double t141806 = b4p*t141802*t141737*(2.0/3.0);
            double t141807 = b2p*c*t141801*(1.0/3.0);
            double t141808 = b1p*c*t141801*t141803*(1.0/6.0);
            double t141809 = b3p*c*t141801*t141735*(1.0/2.0);
            double t141810 = t141806+t141807+t141808+t141809;
            double t141811 = t141810*t141750*t141804*t141805;
            double t141812 = ccaa4*t141753*t141754*t141755*t141784;
            double t141813 = ccaa1*gamma_aa[index]*gcaa*t141756*t141787;
            double t141814 = ccaa3*gamma_aa[index]*gcaa*t141751*t141752*t141792*t141757;
            double t141815 = ccaa2*t141751*t141752*t141758*t141796;
            double t141816 = ccaa0+t141812+t141813+t141814+t141815;
            double t141817 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t141818 = 1.0/(omega*omega);
            double t141819 = pow(t141817,2.0/3.0);
            double t141822 = t141818*t141819;
            double t141820 = exp(-t141822);
            double t141821 = 1.0/pow(t141817,1.0/3.0);
            double t141823 = omega*omega;
            double t141824 = t141820-1.0;
            double t141825 = 1.0/pow(t141817,2.0/3.0);
            double t141826 = 1.0/pow(t141817,4.0/3.0);
            double t141827 = 1.0/omega;
            double t141828 = t141823*t141824*t141825*(1.0/2.0);
            double t141829 = -t141820+t141828+3.0/2.0;
            double t141830 = gx*gx;
            double t141831 = t141830*t141830;
            double t141832 = pow(rho_a[index],4.0/3.0);
            double t141833 = pow(t141817,1.0/3.0);
            double t141834 = t141833*t141827;
            double t141835 = erf(t141834);
            double t141836 = t141835*(3.991211251234741E15/2.251799813685248E15);
            double t141856 = omega*t141821*t141829;
            double t141837 = t141836-t141856;
            double t141838 = gamma_aa[index]*gx*t141756*4.0;
            double t141839 = gamma_aa[index]*gx*t141830*t141751*t141757*4.0;
            double t141840 = t141830*t141751*t141758*6.0;
            double t141841 = t141831*t141753*t141755;
            double t141842 = t141840+t141841+t141838+t141839+1.0;
            double t141843 = 1.0/t141842;
            double t141844 = gamma_aa[index]*gx*t141756;
            double t141845 = t141844+1.0;
            double t141846 = 1.0/t141845;
            double t141847 = gamma_aa[index]*gx*t141756*3.0;
            double t141848 = gamma_aa[index]*gx*t141830*t141751*t141757;
            double t141849 = t141830*t141751*t141758*3.0;
            double t141850 = t141847+t141848+t141849+1.0;
            double t141851 = 1.0/t141850;
            double t141852 = gamma_aa[index]*gx*t141756*2.0;
            double t141853 = t141830*t141751*t141758;
            double t141854 = t141852+t141853+1.0;
            double t141855 = 1.0/t141854;
            double t141857 = omega*t141821*t141837*(4.0/3.0);
            double t141858 = t141857-1.0;
            double t141859 = cx4*t141831*t141753*t141843*t141755;
            double t141860 = cx1*gamma_aa[index]*gx*t141756*t141846;
            double t141861 = cx3*gamma_aa[index]*gx*t141830*t141751*t141851*t141757;
            double t141862 = cx2*t141830*t141751*t141855*t141758;
            double t141863 = cx0+t141860+t141861+t141862+t141859;
            v_rho_a_[index] = -t141816*(t141778+t141761*t141764*(t141777-c0p*t141750*t141748*2.0))+rho_a[index]* \
               t141816*(-t141811+t141761*t141764*(t141811-(1.0/(t141770*t141770)*t141776*(b2f*c*t141801*(1.0/3.0) \
               +b4f*t141802*t141737*(2.0/3.0)+b1f*c*t141801*t141803*(1.0/6.0)+b3f*c*t141801*t141735*(1.0/2.0)))/t141773+ \
               a1f*c*c0f*t141801*t141774*(2.0/3.0)-a1p*c*c0p*t141801*t141748*(2.0/3.0))+a1p*c*c0p*t141801*t141748* \
               (2.0/3.0))+rho_a[index]*(t141778+t141761*t141764*(t141777-t141778))*(ccaa1*gamma_aa[index]*gcaa*t141787* \
               t141798*(8.0/3.0)+ccaa4*t141800*t141753*t141754*t141784*(3.2E1/3.0)+ccaa2*t141751*t141752*t141796* \
               t141797*(1.6E1/3.0)-ccaa1*t141751*t141752*1.0/(t141786*t141786)*t141797*(8.0/3.0)-ccaa2*t141751*t141752* \
               t141758*1.0/(t141795*t141795)*(gamma_aa[index]*gcaa*t141798*(1.6E1/3.0)+t141751*t141752*t141797*(1.6E1/ \
               3.0))-ccaa4*t141753*t141754*t141755*1.0/(t141783*t141783)*(gamma_aa[index]*gcaa*t141798*(3.2E1/3.0) \
               +t141800*t141753*t141754*(3.2E1/3.0)+t141751*t141752*t141797*3.2E1+gamma_aa[index]*gcaa*t141751*t141752* \
               t141799*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t141751*t141752*t141792*t141799*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t141751*t141752*1.0/(t141791*t141791)*t141757*(gamma_aa[index]*gcaa*t141798*8.0+t141751*t141752* \
               t141797*1.6E1+gamma_aa[index]*gcaa*t141751*t141752*t141799*8.0))-c0*t141832*t141863*(omega*t141821* \
               (omega*t141826*t141829*(2.778046668940015E15/1.40737488355328E14)+omega*t141821*((t141820*(1.0/3.0) \
               )/rho_a[index]+t141823*t141824*1.0/pow(t141817,5.0/3.0)*(2.778046668940015E15/1.40737488355328E14) \
               -t141820*t141821*t141818*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t141820* \
               t141825*t141827*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t141826*t141837*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_a[index],1.0/3.0)*t141863*t141858*(4.0/3.0)+c0*t141832*t141858*(cx1* \
               gamma_aa[index]*gx*t141846*t141798*(8.0/3.0)+cx2*t141830*t141751*t141855*t141797*(1.6E1/3.0)+cx4*t141800* \
               t141831*t141753*t141843*(3.2E1/3.0)-cx1*t141830*t141751*1.0/(t141845*t141845)*t141797*(8.0/3.0)-cx2* \
               t141830*t141751*1.0/(t141854*t141854)*t141758*(gamma_aa[index]*gx*t141798*(1.6E1/3.0)+t141830*t141751* \
               t141797*(1.6E1/3.0))-cx4*t141831*1.0/(t141842*t141842)*t141753*t141755*(gamma_aa[index]*gx*t141798* \
               (3.2E1/3.0)+t141800*t141831*t141753*(3.2E1/3.0)+t141830*t141751*t141797*3.2E1+gamma_aa[index]*gx*t141830* \
               t141751*t141799*3.2E1)+cx3*gamma_aa[index]*gx*t141830*t141751*t141851*t141799*8.0-cx3*gamma_aa[index]* \
               gx*t141830*t141751*1.0/(t141850*t141850)*t141757*(gamma_aa[index]*gx*t141798*8.0+t141830*t141751*t141797* \
               1.6E1+gamma_aa[index]*gx*t141830*t141751*t141799*8.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t137597 = 1.0/pow(rho_b[index],1.0/3.0);
            double t137598 = c*t137597;
            double t137599 = sqrt(t137598);
            double t137600 = pow(t137598,3.0/2.0);
            double t137601 = c*c;
            double t137602 = 1.0/pow(rho_b[index],2.0/3.0);
            double t137603 = 1.0/c0p;
            double t137604 = b1p*t137599;
            double t137605 = b3p*t137600;
            double t137606 = b4p*t137601*t137602;
            double t137607 = b2p*c*t137597;
            double t137608 = t137604+t137605+t137606+t137607;
            double t137609 = 1.0/t137608;
            double t137610 = t137603*t137609*(1.0/2.0);
            double t137611 = t137610+1.0;
            double t137612 = log(t137611);
            double t137613 = a1p*c*t137597;
            double t137614 = t137613+1.0;
            double t137615 = gamma_bb[index]*gamma_bb[index];
            double t137616 = gcaa*gcaa;
            double t137617 = t137615*t137615;
            double t137618 = t137616*t137616;
            double t137619 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t137620 = 1.0/pow(rho_b[index],8.0/3.0);
            double t137621 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t137622 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t137623 = pow(2.0,1.0/3.0);
            double t137624 = t137623*2.0;
            double t137625 = t137624-2.0;
            double t137626 = two_13*2.0;
            double t137627 = t137626-2.0;
            double t137628 = 1.0/t137627;
            double t137629 = 1.0/c0f;
            double t137630 = 1.0/pow(rho_a[index],1.0/3.0);
            double t137631 = c*t137630;
            double t137632 = sqrt(t137631);
            double t137633 = pow(t137631,3.0/2.0);
            double t137634 = 1.0/pow(rho_a[index],2.0/3.0);
            double t137635 = b1p*t137632;
            double t137636 = b3p*t137633;
            double t137637 = b4p*t137601*t137634;
            double t137638 = b2p*c*t137630;
            double t137639 = t137635+t137636+t137637+t137638;
            double t137640 = 1.0/t137639;
            double t137641 = t137603*t137640*(1.0/2.0);
            double t137642 = t137641+1.0;
            double t137643 = log(t137642);
            double t137644 = a1p*c*t137630;
            double t137645 = t137644+1.0;
            double t137646 = c0p*t137643*t137645*2.0;
            double t137647 = b1f*t137599;
            double t137648 = b3f*t137600;
            double t137649 = b4f*t137601*t137602;
            double t137650 = b2f*c*t137597;
            double t137651 = t137650+t137647+t137648+t137649;
            double t137652 = 1.0/t137651;
            double t137653 = t137652*t137629*(1.0/2.0);
            double t137654 = t137653+1.0;
            double t137655 = log(t137654);
            double t137656 = a1f*c*t137597;
            double t137657 = t137656+1.0;
            double t137658 = c0f*t137655*t137657*2.0;
            double t137659 = c0p*t137612*t137614*2.0;
            double t137660 = rho_a[index]+rho_b[index];
            double t137661 = 1.0/pow(t137660,1.0/3.0);
            double t137662 = c*t137661;
            double t137663 = sqrt(t137662);
            double t137664 = pow(t137662,3.0/2.0);
            double t137665 = 1.0/pow(t137660,2.0/3.0);
            double t137666 = b1p*t137663;
            double t137667 = b3p*t137664;
            double t137668 = b4p*t137601*t137665;
            double t137669 = b2p*c*t137661;
            double t137670 = t137666+t137667+t137668+t137669;
            double t137671 = 1.0/t137670;
            double t137672 = t137603*t137671*(1.0/2.0);
            double t137673 = t137672+1.0;
            double t137674 = log(t137673);
            double t137675 = a1p*c*t137661;
            double t137676 = t137675+1.0;
            double t137677 = c0p*t137674*t137676*2.0;
            double t137678 = rho_a[index]-rho_b[index];
            double t137679 = t137678*t137678;
            double t137680 = 1.0/t137660;
            double t137681 = t137680*t137678;
            double t137682 = 1.0/(t137660*t137660*t137660*t137660);
            double t137683 = t137679*t137679;
            double t137684 = t137681+1.0;
            double t137685 = pow(t137684,4.0/3.0);
            double t137686 = -t137681+1.0;
            double t137687 = pow(t137686,4.0/3.0);
            double t137688 = t137685+t137687-2.0;
            double t137689 = gcab*gcab;
            double t137693 = 1.0/pow(rho_a[index],8.0/3.0);
            double t137694 = gamma_aa[index]*t137693*(1.0/2.0);
            double t137695 = gamma_bb[index]*t137620*(1.0/2.0);
            double t137690 = t137694+t137695;
            double t137691 = t137690*t137690;
            double t137692 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t137696 = t137689*t137689;
            double t137697 = t137691*t137691;
            double t137698 = t137691*t137689*6.0;
            double t137699 = gcab*t137690*t137691*t137689*4.0;
            double t137700 = t137696*t137697;
            double t137701 = gcab*t137690*4.0;
            double t137702 = t137700+t137701+t137698+t137699+1.0;
            double t137703 = gcab*t137690;
            double t137704 = t137703+1.0;
            double t137705 = t137691*t137689;
            double t137706 = gcab*t137690*2.0;
            double t137707 = t137705+t137706+1.0;
            double t137708 = t137691*t137689*3.0;
            double t137709 = gcab*t137690*t137691*t137689;
            double t137710 = gcab*t137690*3.0;
            double t137711 = t137710+t137708+t137709+1.0;
            double t137712 = 1.0/t137707;
            double t137713 = 1.0/t137711;
            double t137714 = 1.0/t137704;
            double t137715 = 1.0/t137702;
            double t137716 = 1.0/pow(t137660,4.0/3.0);
            double t137717 = b1f*t137663;
            double t137718 = b3f*t137664;
            double t137719 = b4f*t137601*t137665;
            double t137720 = b2f*c*t137661;
            double t137721 = t137720+t137717+t137718+t137719;
            double t137722 = 1.0/t137721;
            double t137723 = t137722*t137629*(1.0/2.0);
            double t137724 = t137723+1.0;
            double t137725 = log(t137724);
            double t137726 = a1f*c*t137661;
            double t137727 = t137726+1.0;
            double t137729 = c0f*t137725*t137727*2.0;
            double t137728 = -t137729+t137677;
            double t137730 = 1.0/(t137660*t137660);
            double t137731 = t137730*t137678;
            double t137732 = t137731+t137680;
            double t137733 = t137729-t137677;
            double t137734 = 1.0/pow(t137660,5.0/3.0);
            double t137735 = 1.0/sqrt(t137662);
            double t137736 = 1.0/t137673;
            double t137737 = 1.0/(t137670*t137670);
            double t137738 = b4p*t137601*t137734*(2.0/3.0);
            double t137739 = b2p*c*t137716*(1.0/3.0);
            double t137740 = b1p*c*t137716*t137735*(1.0/6.0);
            double t137741 = b3p*c*t137716*t137663*(1.0/2.0);
            double t137742 = t137740+t137741+t137738+t137739;
            double t137743 = 1.0/d2fz0;
            double t137744 = 1.0/Aa;
            double t137745 = b1a*t137663;
            double t137746 = b3a*t137664;
            double t137747 = b4a*t137601*t137665;
            double t137748 = b2a*c*t137661;
            double t137749 = t137745+t137746+t137747+t137748;
            double t137750 = 1.0/t137749;
            double t137751 = t137750*t137744*(1.0/2.0);
            double t137752 = t137751+1.0;
            double t137753 = log(t137752);
            double t137754 = a1a*c*t137661;
            double t137755 = t137754+1.0;
            double t137756 = 1.0/(t137660*t137660*t137660*t137660*t137660);
            double t137757 = pow(t137684,1.0/3.0);
            double t137758 = t137732*t137757*(4.0/3.0);
            double t137759 = pow(t137686,1.0/3.0);
            double t137760 = t137758-t137732*t137759*(4.0/3.0);
            double t137761 = t137682*t137683;
            double t137762 = t137761-1.0;
            double t137763 = 1.0/pow(rho_b[index],4.0/3.0);
            double t137764 = 1.0/pow(rho_b[index],5.0/3.0);
            double t137765 = 1.0/sqrt(t137598);
            double t137766 = 1.0/t137611;
            double t137767 = 1.0/(t137608*t137608);
            double t137768 = b4p*t137601*t137764*(2.0/3.0);
            double t137769 = b2p*c*t137763*(1.0/3.0);
            double t137770 = b1p*c*t137763*t137765*(1.0/6.0);
            double t137771 = b3p*c*t137763*t137599*(1.0/2.0);
            double t137772 = t137770+t137771+t137768+t137769;
            double t137773 = t137614*t137772*t137766*t137767;
            double t137774 = t137658-t137659;
            double t137775 = t137625*t137628*t137774;
            double t137776 = Aa*t137743*t137753*t137762*t137628*t137755*t137688*2.0;
            double t137777 = a1p*c*c0p*t137716*t137674*(2.0/3.0);
            double t137778 = t137775+t137659;
            double t137779 = gamma_bb[index]*gcaa*t137620*4.0;
            double t137780 = gamma_bb[index]*gcaa*t137621*t137615*t137616*4.0;
            double t137781 = t137622*t137615*t137616*6.0;
            double t137782 = t137617*t137618*t137619;
            double t137783 = t137780+t137781+t137782+t137779+1.0;
            double t137784 = 1.0/t137783;
            double t137785 = gamma_bb[index]*gcaa*t137620;
            double t137786 = t137785+1.0;
            double t137787 = 1.0/t137786;
            double t137788 = gamma_bb[index]*gcaa*t137620*3.0;
            double t137789 = gamma_bb[index]*gcaa*t137621*t137615*t137616;
            double t137790 = t137622*t137615*t137616*3.0;
            double t137791 = t137790+t137788+t137789+1.0;
            double t137792 = 1.0/t137791;
            double t137793 = gamma_bb[index]*gcaa*t137620*2.0;
            double t137794 = t137622*t137615*t137616;
            double t137795 = t137793+t137794+1.0;
            double t137796 = 1.0/t137795;
            double t137797 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t137798 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t137799 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t137800 = 1.0/t137654;
            double t137801 = 1.0/(t137651*t137651);
            double t137802 = b4f*t137601*t137764*(2.0/3.0);
            double t137803 = b2f*c*t137763*(1.0/3.0);
            double t137804 = b1f*c*t137763*t137765*(1.0/6.0);
            double t137805 = b3f*c*t137763*t137599*(1.0/2.0);
            double t137806 = t137802+t137803+t137804+t137805;
            double t137807 = a1f*c*c0f*t137655*t137763*(2.0/3.0);
            double t137808 = a1p*c*c0p*t137612*t137763*(2.0/3.0);
            double t137809 = ccaa4*t137617*t137618*t137619*t137784;
            double t137810 = ccaa1*gamma_bb[index]*gcaa*t137620*t137787;
            double t137811 = ccaa3*gamma_bb[index]*gcaa*t137621*t137615*t137616*t137792;
            double t137812 = ccaa2*t137622*t137615*t137616*t137796;
            double t137813 = ccaa0+t137810+t137811+t137812+t137809;
            double t137814 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t137815 = 1.0/(omega*omega);
            double t137816 = pow(t137814,2.0/3.0);
            double t137819 = t137815*t137816;
            double t137817 = exp(-t137819);
            double t137818 = 1.0/pow(t137814,1.0/3.0);
            double t137820 = omega*omega;
            double t137821 = t137817-1.0;
            double t137822 = 1.0/pow(t137814,2.0/3.0);
            double t137823 = 1.0/pow(t137814,4.0/3.0);
            double t137824 = 1.0/omega;
            double t137825 = t137820*t137821*t137822*(1.0/2.0);
            double t137826 = t137825-t137817+3.0/2.0;
            double t137827 = gx*gx;
            double t137828 = t137827*t137827;
            double t137829 = pow(rho_b[index],4.0/3.0);
            double t137830 = pow(t137814,1.0/3.0);
            double t137831 = t137830*t137824;
            double t137832 = erf(t137831);
            double t137833 = t137832*(3.991211251234741E15/2.251799813685248E15);
            double t137853 = omega*t137826*t137818;
            double t137834 = t137833-t137853;
            double t137835 = gamma_bb[index]*gx*t137620*4.0;
            double t137836 = gamma_bb[index]*gx*t137621*t137615*t137827*4.0;
            double t137837 = t137622*t137615*t137827*6.0;
            double t137838 = t137617*t137619*t137828;
            double t137839 = t137835+t137836+t137837+t137838+1.0;
            double t137840 = 1.0/t137839;
            double t137841 = gamma_bb[index]*gx*t137620;
            double t137842 = t137841+1.0;
            double t137843 = 1.0/t137842;
            double t137844 = gamma_bb[index]*gx*t137620*3.0;
            double t137845 = gamma_bb[index]*gx*t137621*t137615*t137827;
            double t137846 = t137622*t137615*t137827*3.0;
            double t137847 = t137844+t137845+t137846+1.0;
            double t137848 = 1.0/t137847;
            double t137849 = gamma_bb[index]*gx*t137620*2.0;
            double t137850 = t137622*t137615*t137827;
            double t137851 = t137850+t137849+1.0;
            double t137852 = 1.0/t137851;
            double t137854 = omega*t137834*t137818*(4.0/3.0);
            double t137855 = t137854-1.0;
            double t137856 = cx4*t137840*t137617*t137619*t137828;
            double t137857 = cx1*gamma_bb[index]*gx*t137620*t137843;
            double t137858 = cx3*gamma_bb[index]*gx*t137621*t137615*t137827*t137848;
            double t137859 = cx2*t137622*t137615*t137852*t137827;
            double t137860 = cx0+t137856+t137857+t137858+t137859;
            v_rho_b_[index] = -t137813*(t137659+t137625*t137628*(t137658-c0p*t137612*t137614*2.0))-(ccab0+ccab1* \
               gcab*t137714*t137690+ccab2*t137712*t137691*t137689+ccab4*t137715*t137696*t137697+ccab3*gcab*t137713* \
               t137690*t137691*t137689)*(-t137775-t137659+t137677+t137776+rho_b[index]*(t137808-t137773+t137625*t137628* \
               (t137807+t137773-t137800*t137801*t137806*t137657-a1p*c*c0p*t137612*t137763*(2.0/3.0)))-t137660*(t137777- \
               t137742*t137736*t137737*t137676+t137733*t137760*t137628*t137682*t137683+t137733*t137628*t137683*t137756* \
               t137688*4.0-t137628*t137682*t137683*t137688*(t137777-t137742*t137736*t137737*t137676+(1.0/(t137721* \
               t137721)*t137727*(b2f*c*t137716*(1.0/3.0)+b4f*t137601*t137734*(2.0/3.0)+b1f*c*t137716*t137735*(1.0/ \
               6.0)+b3f*c*t137716*t137663*(1.0/2.0)))/t137724-a1f*c*c0f*t137716*t137725*(2.0/3.0))-t137628*t137682* \
               t137728*t137678*t137679*t137688*4.0+Aa*t137743*t137753*t137628*t137755*t137688*(t137683*t137756*4.0+ \
               t137682*t137678*t137679*4.0)*2.0+Aa*t137760*t137743*t137753*t137762*t137628*t137755*2.0-(t137743*t137762* \
               t137628*t137755*1.0/(t137749*t137749)*t137688*(b2a*c*t137716*(1.0/3.0)+b4a*t137601*t137734*(2.0/3.0) \
               +b1a*c*t137716*t137735*(1.0/6.0)+b3a*c*t137716*t137663*(1.0/2.0)))/t137752+Aa*a1a*c*t137716*t137743* \
               t137753*t137762*t137628*t137688*(2.0/3.0))+t137733*t137628*t137682*t137683*t137688)-(rho_b[index]* \
               t137778+rho_a[index]*(t137646-t137625*t137628*(t137646-c0f*log((t137629*(1.0/2.0))/(b1f*t137632+b3f* \
               t137633+b2f*c*t137630+b4f*t137601*t137634)+1.0)*(a1f*c*t137630+1.0)*2.0))-t137660*(t137677+t137776- \
               t137628*t137682*t137683*t137728*t137688))*(ccab1*gamma_bb[index]*gcab*t137714*t137692*(4.0/3.0)-ccab2* \
               1.0/(t137707*t137707)*t137691*t137689*(gamma_bb[index]*gcab*t137692*(8.0/3.0)+gamma_bb[index]*t137690* \
               t137692*t137689*(8.0/3.0))-ccab4*1.0/(t137702*t137702)*t137696*t137697*(gamma_bb[index]*gcab*t137692* \
               (1.6E1/3.0)+gamma_bb[index]*t137690*t137692*t137689*1.6E1+gamma_bb[index]*gcab*t137691*t137692*t137689* \
               1.6E1+gamma_bb[index]*t137690*t137691*t137692*t137696*(1.6E1/3.0))-ccab1*gamma_bb[index]*1.0/(t137704* \
               t137704)*t137690*t137692*t137689*(4.0/3.0)+ccab2*gamma_bb[index]*t137712*t137690*t137692*t137689*(8.0/ \
               3.0)-ccab3*gcab*1.0/(t137711*t137711)*t137690*t137691*t137689*(gamma_bb[index]*gcab*t137692*4.0+gamma_bb[index]* \
               t137690*t137692*t137689*8.0+gamma_bb[index]*gcab*t137691*t137692*t137689*4.0)+ccab3*gamma_bb[index]* \
               gcab*t137713*t137691*t137692*t137689*4.0+ccab4*gamma_bb[index]*t137715*t137690*t137691*t137692*t137696* \
               (1.6E1/3.0))+rho_b[index]*t137778*(ccaa1*gamma_bb[index]*gcaa*t137692*t137787*(8.0/3.0)+ccaa2*t137615* \
               t137616*t137796*t137797*(1.6E1/3.0)+ccaa4*t137617*t137618*t137784*t137799*(3.2E1/3.0)-ccaa1*t137615* \
               t137616*1.0/(t137786*t137786)*t137797*(8.0/3.0)-ccaa2*t137622*t137615*t137616*1.0/(t137795*t137795) \
               *(gamma_bb[index]*gcaa*t137692*(1.6E1/3.0)+t137615*t137616*t137797*(1.6E1/3.0))-ccaa4*t137617*t137618* \
               t137619*1.0/(t137783*t137783)*(gamma_bb[index]*gcaa*t137692*(3.2E1/3.0)+t137615*t137616*t137797*3.2E1+ \
               t137617*t137618*t137799*(3.2E1/3.0)+gamma_bb[index]*gcaa*t137615*t137616*t137798*3.2E1)+ccaa3*gamma_bb[index]* \
               gcaa*t137615*t137616*t137792*t137798*8.0-ccaa3*gamma_bb[index]*gcaa*t137621*t137615*t137616*1.0/(t137791* \
               t137791)*(gamma_bb[index]*gcaa*t137692*8.0+t137615*t137616*t137797*1.6E1+gamma_bb[index]*gcaa*t137615* \
               t137616*t137798*8.0))+rho_b[index]*t137813*(t137808-t137773+t137625*t137628*(t137807-t137808+t137773- \
               t137800*t137801*t137806*t137657))-c0*t137860*t137829*(omega*t137818*(omega*t137823*t137826*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t137818*((t137817*(1.0/3.0))/rho_b[index]+t137820*t137821*1.0/pow(t137814,5.0/ \
               3.0)*(2.778046668940015E15/1.40737488355328E14)-t137815*t137817*t137818*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t137822*t137824*t137817*(1.108777112152858E31/1.584563250285287E29)) \
               *(4.0/3.0)-omega*t137823*t137834*(2.778046668940015E15/1.05553116266496E14))-c0*pow(rho_b[index],1.0/ \
               3.0)*t137860*t137855*(4.0/3.0)+c0*t137855*t137829*(cx1*gamma_bb[index]*gx*t137843*t137692*(8.0/3.0) \
               +cx2*t137615*t137852*t137827*t137797*(1.6E1/3.0)+cx4*t137840*t137617*t137828*t137799*(3.2E1/3.0)-cx1* \
               t137615*1.0/(t137842*t137842)*t137827*t137797*(8.0/3.0)-cx2*t137622*t137615*1.0/(t137851*t137851)* \
               t137827*(gamma_bb[index]*gx*t137692*(1.6E1/3.0)+t137615*t137827*t137797*(1.6E1/3.0))-cx4*t137617*t137619* \
               t137828*1.0/(t137839*t137839)*(gamma_bb[index]*gx*t137692*(3.2E1/3.0)+t137615*t137827*t137797*3.2E1+ \
               t137617*t137828*t137799*(3.2E1/3.0)+gamma_bb[index]*gx*t137615*t137827*t137798*3.2E1)+cx3*gamma_bb[index]* \
               gx*t137615*t137827*t137848*t137798*8.0-cx3*gamma_bb[index]*gx*t137621*t137615*t137827*1.0/(t137847* \
               t137847)*(gamma_bb[index]*gx*t137692*8.0+t137615*t137827*t137797*1.6E1+gamma_bb[index]*gx*t137615* \
               t137827*t137798*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t140979 = 1.0/pow(rho_b[index],1.0/3.0);
            double t140980 = c*t140979;
            double t140981 = sqrt(t140980);
            double t140982 = pow(t140980,3.0/2.0);
            double t140983 = c*c;
            double t140984 = 1.0/pow(rho_b[index],2.0/3.0);
            double t140985 = 1.0/c0p;
            double t140986 = b1p*t140981;
            double t140987 = b3p*t140982;
            double t140988 = b4p*t140983*t140984;
            double t140989 = b2p*c*t140979;
            double t140990 = t140986+t140987+t140988+t140989;
            double t140991 = 1.0/t140990;
            double t140992 = t140991*t140985*(1.0/2.0);
            double t140993 = t140992+1.0;
            double t140994 = log(t140993);
            double t140995 = a1p*c*t140979;
            double t140996 = t140995+1.0;
            double t140997 = gamma_bb[index]*gamma_bb[index];
            double t140998 = gcaa*gcaa;
            double t140999 = t140997*t140997;
            double t141000 = t140998*t140998;
            double t141001 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t141002 = 1.0/pow(rho_b[index],8.0/3.0);
            double t141003 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t141004 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t141005 = pow(2.0,1.0/3.0);
            double t141006 = t141005*2.0;
            double t141007 = t141006-2.0;
            double t141008 = two_13*2.0;
            double t141009 = t141008-2.0;
            double t141010 = 1.0/t141009;
            double t141011 = 1.0/c0f;
            double t141012 = b1f*t140981;
            double t141013 = b3f*t140982;
            double t141014 = b4f*t140983*t140984;
            double t141015 = b2f*c*t140979;
            double t141016 = t141012+t141013+t141014+t141015;
            double t141017 = 1.0/t141016;
            double t141018 = t141011*t141017*(1.0/2.0);
            double t141019 = t141018+1.0;
            double t141020 = log(t141019);
            double t141021 = a1f*c*t140979;
            double t141022 = t141021+1.0;
            double t141023 = c0f*t141020*t141022*2.0;
            double t141024 = c0p*t140994*t140996*2.0;
            double t141025 = gamma_bb[index]*gcaa*t141002*4.0;
            double t141026 = gamma_bb[index]*gcaa*t141003*t140997*t140998*4.0;
            double t141027 = t141004*t140997*t140998*6.0;
            double t141028 = t141000*t141001*t140999;
            double t141029 = t141025+t141026+t141027+t141028+1.0;
            double t141030 = 1.0/t141029;
            double t141031 = gamma_bb[index]*gcaa*t141002;
            double t141032 = t141031+1.0;
            double t141033 = 1.0/t141032;
            double t141034 = gamma_bb[index]*gcaa*t141002*3.0;
            double t141035 = gamma_bb[index]*gcaa*t141003*t140997*t140998;
            double t141036 = t141004*t140997*t140998*3.0;
            double t141037 = t141034+t141035+t141036+1.0;
            double t141038 = 1.0/t141037;
            double t141039 = gamma_bb[index]*gcaa*t141002*2.0;
            double t141040 = t141004*t140997*t140998;
            double t141041 = t141040+t141039+1.0;
            double t141042 = 1.0/t141041;
            double t141043 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t141044 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t141045 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t141046 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t141047 = 1.0/pow(rho_b[index],4.0/3.0);
            double t141048 = 1.0/pow(rho_b[index],5.0/3.0);
            double t141049 = 1.0/sqrt(t140980);
            double t141050 = 1.0/t140993;
            double t141051 = 1.0/(t140990*t140990);
            double t141052 = b4p*t141048*t140983*(2.0/3.0);
            double t141053 = b2p*c*t141047*(1.0/3.0);
            double t141054 = b1p*c*t141047*t141049*(1.0/6.0);
            double t141055 = b3p*c*t141047*t140981*(1.0/2.0);
            double t141056 = t141052+t141053+t141054+t141055;
            double t141057 = t141050*t141051*t141056*t140996;
            double t141058 = ccaa4*t141000*t141001*t141030*t140999;
            double t141059 = ccaa1*gamma_bb[index]*gcaa*t141002*t141033;
            double t141060 = ccaa3*gamma_bb[index]*gcaa*t141003*t141038*t140997*t140998;
            double t141061 = ccaa2*t141004*t141042*t140997*t140998;
            double t141062 = ccaa0+t141060+t141061+t141058+t141059;
            double t141063 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t141064 = 1.0/(omega*omega);
            double t141065 = pow(t141063,2.0/3.0);
            double t141068 = t141064*t141065;
            double t141066 = exp(-t141068);
            double t141067 = 1.0/pow(t141063,1.0/3.0);
            double t141069 = omega*omega;
            double t141070 = t141066-1.0;
            double t141071 = 1.0/pow(t141063,2.0/3.0);
            double t141072 = 1.0/pow(t141063,4.0/3.0);
            double t141073 = 1.0/omega;
            double t141074 = t141070*t141071*t141069*(1.0/2.0);
            double t141075 = t141074-t141066+3.0/2.0;
            double t141076 = gx*gx;
            double t141077 = t141076*t141076;
            double t141078 = pow(rho_b[index],4.0/3.0);
            double t141079 = pow(t141063,1.0/3.0);
            double t141080 = t141073*t141079;
            double t141081 = erf(t141080);
            double t141082 = t141081*(3.991211251234741E15/2.251799813685248E15);
            double t141102 = omega*t141075*t141067;
            double t141083 = -t141102+t141082;
            double t141084 = gamma_bb[index]*gx*t141002*4.0;
            double t141085 = gamma_bb[index]*gx*t141003*t141076*t140997*4.0;
            double t141086 = t141004*t141076*t140997*6.0;
            double t141087 = t141001*t141077*t140999;
            double t141088 = t141084+t141085+t141086+t141087+1.0;
            double t141089 = 1.0/t141088;
            double t141090 = gamma_bb[index]*gx*t141002;
            double t141091 = t141090+1.0;
            double t141092 = 1.0/t141091;
            double t141093 = gamma_bb[index]*gx*t141002*3.0;
            double t141094 = gamma_bb[index]*gx*t141003*t141076*t140997;
            double t141095 = t141004*t141076*t140997*3.0;
            double t141096 = t141093+t141094+t141095+1.0;
            double t141097 = 1.0/t141096;
            double t141098 = gamma_bb[index]*gx*t141002*2.0;
            double t141099 = t141004*t141076*t140997;
            double t141100 = t141098+t141099+1.0;
            double t141101 = 1.0/t141100;
            double t141103 = omega*t141083*t141067*(4.0/3.0);
            double t141104 = t141103-1.0;
            double t141105 = cx4*t141001*t141077*t141089*t140999;
            double t141106 = cx1*gamma_bb[index]*gx*t141002*t141092;
            double t141107 = cx3*gamma_bb[index]*gx*t141003*t141076*t141097*t140997;
            double t141108 = cx2*t141101*t141004*t141076*t140997;
            double t141109 = cx0+t141105+t141106+t141107+t141108;
            v_rho_b_[index] = -t141062*(t141024+t141010*t141007*(t141023-c0p*t140994*t140996*2.0))+rho_b[index]* \
               t141062*(-t141057+t141010*t141007*(t141057-(t141022*1.0/(t141016*t141016)*(b2f*c*t141047*(1.0/3.0) \
               +b4f*t141048*t140983*(2.0/3.0)+b1f*c*t141047*t141049*(1.0/6.0)+b3f*c*t141047*t140981*(1.0/2.0)))/t141019+ \
               a1f*c*c0f*t141020*t141047*(2.0/3.0)-a1p*c*c0p*t141047*t140994*(2.0/3.0))+a1p*c*c0p*t141047*t140994* \
               (2.0/3.0))+rho_b[index]*(t141024+t141010*t141007*(t141023-t141024))*(ccaa1*gamma_bb[index]*gcaa*t141033* \
               t141044*(8.0/3.0)+ccaa4*t141000*t141030*t141046*t140999*(3.2E1/3.0)+ccaa2*t141042*t141043*t140997* \
               t140998*(1.6E1/3.0)-ccaa1*1.0/(t141032*t141032)*t141043*t140997*t140998*(8.0/3.0)-ccaa2*t141004*1.0/ \
               (t141041*t141041)*t140997*t140998*(gamma_bb[index]*gcaa*t141044*(1.6E1/3.0)+t141043*t140997*t140998* \
               (1.6E1/3.0))-ccaa4*t141000*t141001*1.0/(t141029*t141029)*t140999*(gamma_bb[index]*gcaa*t141044*(3.2E1/ \
               3.0)+t141000*t141046*t140999*(3.2E1/3.0)+t141043*t140997*t140998*3.2E1+gamma_bb[index]*gcaa*t141045* \
               t140997*t140998*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t141045*t141038*t140997*t140998*8.0-ccaa3*gamma_bb[index]* \
               gcaa*t141003*1.0/(t141037*t141037)*t140997*t140998*(gamma_bb[index]*gcaa*t141044*8.0+t141043*t140997* \
               t140998*1.6E1+gamma_bb[index]*gcaa*t141045*t140997*t140998*8.0))-c0*t141109*t141078*(omega*t141067* \
               (omega*t141072*t141075*(2.778046668940015E15/1.40737488355328E14)+omega*t141067*((t141066*(1.0/3.0) \
               )/rho_b[index]+t141070*1.0/pow(t141063,5.0/3.0)*t141069*(2.778046668940015E15/1.40737488355328E14) \
               -t141064*t141066*t141067*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t141071* \
               t141073*t141066*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t141072*t141083*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_b[index],1.0/3.0)*t141104*t141109*(4.0/3.0)+c0*t141104*t141078*(cx1* \
               gamma_bb[index]*gx*t141044*t141092*(8.0/3.0)+cx2*t141101*t141043*t141076*t140997*(1.6E1/3.0)+cx4*t141046* \
               t141077*t141089*t140999*(3.2E1/3.0)-cx1*t141043*1.0/(t141091*t141091)*t141076*t140997*(8.0/3.0)-cx2* \
               1.0/(t141100*t141100)*t141004*t141076*t140997*(gamma_bb[index]*gx*t141044*(1.6E1/3.0)+t141043*t141076* \
               t140997*(1.6E1/3.0))-cx4*t141001*t141077*1.0/(t141088*t141088)*t140999*(gamma_bb[index]*gx*t141044* \
               (3.2E1/3.0)+t141043*t141076*t140997*3.2E1+t141046*t141077*t140999*(3.2E1/3.0)+gamma_bb[index]*gx*t141045* \
               t141076*t140997*3.2E1)+cx3*gamma_bb[index]*gx*t141045*t141076*t141097*t140997*8.0-cx3*gamma_bb[index]* \
               gx*t141003*t141076*1.0/(t141096*t141096)*t140997*(gamma_bb[index]*gx*t141044*8.0+t141043*t141076*t140997* \
               1.6E1+gamma_bb[index]*gx*t141045*t141076*t140997*8.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t137862 = 1.0/pow(rho_a[index],1.0/3.0);
                double t137863 = c*t137862;
                double t137864 = sqrt(t137863);
                double t137865 = pow(t137863,3.0/2.0);
                double t137866 = c*c;
                double t137867 = 1.0/pow(rho_a[index],2.0/3.0);
                double t137868 = 1.0/c0p;
                double t137869 = b1p*t137864;
                double t137870 = b3p*t137865;
                double t137871 = b4p*t137866*t137867;
                double t137872 = b2p*c*t137862;
                double t137873 = t137870+t137871+t137872+t137869;
                double t137874 = 1.0/t137873;
                double t137875 = t137874*t137868*(1.0/2.0);
                double t137876 = t137875+1.0;
                double t137877 = log(t137876);
                double t137878 = a1p*c*t137862;
                double t137879 = t137878+1.0;
                double t137880 = pow(2.0,1.0/3.0);
                double t137881 = t137880*2.0;
                double t137882 = t137881-2.0;
                double t137883 = two_13*2.0;
                double t137884 = t137883-2.0;
                double t137885 = 1.0/t137884;
                double t137886 = 1.0/c0f;
                double t137887 = 1.0/pow(rho_b[index],1.0/3.0);
                double t137888 = c*t137887;
                double t137889 = sqrt(t137888);
                double t137890 = pow(t137888,3.0/2.0);
                double t137891 = 1.0/pow(rho_b[index],2.0/3.0);
                double t137892 = b1p*t137889;
                double t137893 = b3p*t137890;
                double t137894 = b4p*t137891*t137866;
                double t137895 = b2p*c*t137887;
                double t137896 = t137892+t137893+t137894+t137895;
                double t137897 = 1.0/t137896;
                double t137898 = t137868*t137897*(1.0/2.0);
                double t137899 = t137898+1.0;
                double t137900 = log(t137899);
                double t137901 = a1p*c*t137887;
                double t137902 = t137901+1.0;
                double t137903 = c0p*t137900*t137902*2.0;
                double t137904 = rho_a[index]+rho_b[index];
                double t137905 = 1.0/pow(t137904,1.0/3.0);
                double t137906 = c*t137905;
                double t137907 = sqrt(t137906);
                double t137908 = pow(t137906,3.0/2.0);
                double t137909 = 1.0/pow(t137904,2.0/3.0);
                double t137910 = b1p*t137907;
                double t137911 = b3p*t137908;
                double t137912 = b4p*t137909*t137866;
                double t137913 = b2p*c*t137905;
                double t137914 = t137910+t137911+t137912+t137913;
                double t137915 = 1.0/t137914;
                double t137916 = t137915*t137868*(1.0/2.0);
                double t137917 = t137916+1.0;
                double t137918 = log(t137917);
                double t137919 = a1p*c*t137905;
                double t137920 = t137919+1.0;
                double t137921 = c0p*t137920*t137918*2.0;
                double t137922 = rho_a[index]-rho_b[index];
                double t137923 = t137922*t137922;
                double t137924 = 1.0/t137904;
                double t137925 = t137922*t137924;
                double t137926 = 1.0/(t137904*t137904*t137904*t137904);
                double t137927 = t137923*t137923;
                double t137928 = t137925+1.0;
                double t137929 = pow(t137928,4.0/3.0);
                double t137930 = -t137925+1.0;
                double t137931 = pow(t137930,4.0/3.0);
                double t137932 = t137931+t137929-2.0;
                double t137933 = 1.0/pow(rho_a[index],8.0/3.0);
                double t137934 = gamma_aa[index]*t137933*(1.0/2.0);
                double t137935 = 1.0/pow(rho_b[index],8.0/3.0);
                double t137936 = gamma_bb[index]*t137935*(1.0/2.0);
                double t137937 = t137934+t137936;
                double t137938 = gcab*t137937;
                double t137939 = t137938+1.0;
                double t137940 = gcab*gcab;
                double t137941 = t137937*t137937;
                double t137942 = t137940*t137940;
                double t137943 = t137941*t137941;
                double t137944 = t137940*t137941;
                double t137945 = gcab*t137937*2.0;
                double t137946 = t137944+t137945+1.0;
                double t137947 = t137940*t137941*3.0;
                double t137948 = gcab*t137940*t137941*t137937;
                double t137949 = gcab*t137937*3.0;
                double t137950 = t137947+t137948+t137949+1.0;
                double t137951 = t137940*t137941*6.0;
                double t137952 = gcab*t137940*t137941*t137937*4.0;
                double t137953 = t137942*t137943;
                double t137954 = gcab*t137937*4.0;
                double t137955 = t137951+t137952+t137953+t137954+1.0;
                double t137956 = c0p*t137877*t137879*2.0;
                double t137957 = b1f*t137864;
                double t137958 = b3f*t137865;
                double t137959 = b4f*t137866*t137867;
                double t137960 = b2f*c*t137862;
                double t137961 = t137960+t137957+t137958+t137959;
                double t137962 = 1.0/t137961;
                double t137963 = t137962*t137886*(1.0/2.0);
                double t137964 = t137963+1.0;
                double t137965 = log(t137964);
                double t137966 = a1f*c*t137862;
                double t137967 = t137966+1.0;
                double t137968 = t137956-c0f*t137965*t137967*2.0;
                double t137969 = t137956-t137882*t137885*t137968;
                double t137970 = gamma_aa[index]*gamma_aa[index];
                double t137971 = gcaa*gcaa;
                double t137972 = t137971*t137971;
                double t137973 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t137974 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t137975 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t137976 = gamma_aa[index]*gcaa*t137933;
                double t137977 = t137976+1.0;
                double t137978 = gamma_aa[index]*gcaa*t137933*3.0;
                double t137979 = gamma_aa[index]*gcaa*t137970*t137971*t137975;
                double t137980 = t137970*t137971*t137974*3.0;
                double t137981 = t137980+t137978+t137979+1.0;
                double t137982 = t137970*t137970;
                double t137983 = gamma_aa[index]*gcaa*t137933*4.0;
                double t137984 = gamma_aa[index]*gcaa*t137970*t137971*t137975*4.0;
                double t137985 = t137970*t137971*t137974*6.0;
                double t137986 = t137972*t137973*t137982;
                double t137987 = t137983+t137984+t137985+t137986+1.0;
                double t137988 = gamma_aa[index]*gcaa*t137933*2.0;
                double t137989 = t137970*t137971*t137974;
                double t137990 = t137988+t137989+1.0;
                double t137991 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t137992 = 1.0/pow(t137991,1.0/3.0);
                double t137993 = 1.0/(omega*omega);
                double t137994 = pow(t137991,2.0/3.0);
                double t137995 = exp(-t137993*t137994);
                double t137996 = gx*gx;
                double t137997 = t137996*t137996;
                double t137998 = gamma_aa[index]*gx*t137933;
                double t137999 = t137998+1.0;
                double t138000 = gamma_aa[index]*gx*t137933*3.0;
                double t138001 = gamma_aa[index]*gx*t137970*t137975*t137996;
                double t138002 = t137970*t137974*t137996*3.0;
                double t138003 = t138000+t138001+t138002+1.0;
                double t138004 = gamma_aa[index]*gx*t137933*4.0;
                double t138005 = gamma_aa[index]*gx*t137970*t137975*t137996*4.0;
                double t138006 = t137970*t137974*t137996*6.0;
                double t138007 = t137973*t137982*t137997;
                double t138008 = t138004+t138005+t138006+t138007+1.0;
                double t138009 = gamma_aa[index]*gx*t137933*2.0;
                double t138010 = t137970*t137974*t137996;
                double t138011 = t138010+t138009+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t137969+rho_b[index]*(t137903-t137882*t137885*(t137903-c0f*log((t137886* \
                   (1.0/2.0))/(b1f*t137889+b3f*t137890+b2f*c*t137887+b4f*t137891*t137866)+1.0)*(a1f*c*t137887+1.0)*2.0) \
                   )-t137904*(t137921-t137932*t137926*t137927*t137885*(t137921-c0f*log((t137886*(1.0/2.0))/(b1f*t137907+ \
                   b3f*t137908+b2f*c*t137905+b4f*t137909*t137866)+1.0)*(a1f*c*t137905+1.0)*2.0)+(Aa*t137932*t137885*log((1.0/ \
                   2.0)/(Aa*(b1a*t137907+b3a*t137908+b2a*c*t137905+b4a*t137909*t137866))+1.0)*(t137926*t137927-1.0)*(a1a* \
                   c*t137905+1.0)*2.0)/d2fz0))*((ccab1*gcab*t137933*(1.0/2.0))/t137939-ccab4*t137942*t137943*1.0/(t137955* \
                   t137955)*(gcab*t137933*2.0+t137940*t137933*t137937*6.0+gcab*t137940*t137941*t137933*6.0+t137941*t137933* \
                   t137942*t137937*2.0)-ccab2*t137940*t137941*1.0/(t137946*t137946)*(gcab*t137933+t137940*t137933*t137937) \
                   +(ccab2*t137940*t137933*t137937)/t137946-ccab1*t137940*t137933*t137937*1.0/(t137939*t137939)*(1.0/ \
                   2.0)+(ccab3*gcab*t137940*t137941*t137933*(3.0/2.0))/t137950+(ccab4*t137941*t137933*t137942*t137937* \
                   2.0)/t137955-ccab3*gcab*t137940*t137941*1.0/(t137950*t137950)*t137937*(gcab*t137933*(3.0/2.0)+t137940* \
                   t137933*t137937*3.0+gcab*t137940*t137941*t137933*(3.0/2.0)))-rho_a[index]*t137969*((ccaa1*gcaa*t137933) \
                   /t137977+(ccaa2*gamma_aa[index]*t137971*t137974*2.0)/t137990-ccaa1*gamma_aa[index]*t137971*t137974* \
                   1.0/(t137977*t137977)-ccaa2*t137970*t137971*1.0/(t137990*t137990)*t137974*(gcaa*t137933*2.0+gamma_aa[index]* \
                   t137971*t137974*2.0)+(ccaa4*gamma_aa[index]*t137970*t137972*t137973*4.0)/t137987+(ccaa3*gcaa*t137970* \
                   t137971*t137975*3.0)/t137981-ccaa4*t137972*t137973*t137982*1.0/(t137987*t137987)*(gcaa*t137933*4.0+ \
                   gamma_aa[index]*t137971*t137974*1.2E1+gamma_aa[index]*t137970*t137972*t137973*4.0+gcaa*t137970*t137971* \
                   t137975*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t137970*t137971*1.0/(t137981*t137981)*t137975*(gcaa*t137933* \
                   3.0+gamma_aa[index]*t137971*t137974*6.0+gcaa*t137970*t137971*t137975*3.0))-c0*pow(rho_a[index],4.0/ \
                   3.0)*(omega*t137992*(erf(pow(t137991,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t137992*(-t137995+(omega*omega)*1.0/pow(t137991,2.0/3.0)*(t137995-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*((cx1*gx*t137933)/t137999-cx1*gamma_aa[index]*t137974*t137996*1.0/(t137999*t137999)+(cx2*gamma_aa[index]* \
                   t137974*t137996*2.0)/t138011-cx2*1.0/(t138011*t138011)*t137970*t137974*t137996*(gx*t137933*2.0+gamma_aa[index]* \
                   t137974*t137996*2.0)+(cx4*gamma_aa[index]*t137970*t137973*t137997*4.0)/t138008+(cx3*gx*t137970*t137975* \
                   t137996*3.0)/t138003-cx4*1.0/(t138008*t138008)*t137973*t137982*t137997*(gx*t137933*4.0+gamma_aa[index]* \
                   t137974*t137996*1.2E1+gamma_aa[index]*t137970*t137973*t137997*4.0+gx*t137970*t137975*t137996*1.2E1) \
                   -cx3*gamma_aa[index]*gx*1.0/(t138003*t138003)*t137970*t137975*t137996*(gx*t137933*3.0+gamma_aa[index]* \
                   t137974*t137996*6.0+gx*t137970*t137975*t137996*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t141866 = 1.0/pow(rho_a[index],1.0/3.0);
                double t141867 = c*t141866;
                double t141868 = sqrt(t141867);
                double t141869 = pow(t141867,3.0/2.0);
                double t141870 = c*c;
                double t141871 = 1.0/pow(rho_a[index],2.0/3.0);
                double t141872 = 1.0/c0p;
                double t141873 = b1p*t141868;
                double t141874 = b3p*t141869;
                double t141875 = b4p*t141870*t141871;
                double t141876 = b2p*c*t141866;
                double t141877 = t141873+t141874+t141875+t141876;
                double t141878 = 1.0/t141877;
                double t141879 = t141872*t141878*(1.0/2.0);
                double t141880 = t141879+1.0;
                double t141881 = log(t141880);
                double t141882 = a1p*c*t141866;
                double t141883 = t141882+1.0;
                double t141884 = 1.0/pow(rho_a[index],8.0/3.0);
                double t141885 = gamma_aa[index]*gamma_aa[index];
                double t141886 = gcaa*gcaa;
                double t141887 = t141886*t141886;
                double t141888 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t141889 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t141890 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t141891 = gamma_aa[index]*gcaa*t141884;
                double t141892 = t141891+1.0;
                double t141893 = gamma_aa[index]*gcaa*t141884*3.0;
                double t141894 = gamma_aa[index]*gcaa*t141890*t141885*t141886;
                double t141895 = t141885*t141886*t141889*3.0;
                double t141896 = t141893+t141894+t141895+1.0;
                double t141897 = t141885*t141885;
                double t141898 = gamma_aa[index]*gcaa*t141884*4.0;
                double t141899 = gamma_aa[index]*gcaa*t141890*t141885*t141886*4.0;
                double t141900 = t141885*t141886*t141889*6.0;
                double t141901 = t141887*t141888*t141897;
                double t141902 = t141900+t141901+t141898+t141899+1.0;
                double t141903 = gamma_aa[index]*gcaa*t141884*2.0;
                double t141904 = t141885*t141886*t141889;
                double t141905 = t141903+t141904+1.0;
                double t141906 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t141907 = 1.0/pow(t141906,1.0/3.0);
                double t141908 = 1.0/(omega*omega);
                double t141909 = pow(t141906,2.0/3.0);
                double t141910 = exp(-t141908*t141909);
                double t141911 = gx*gx;
                double t141912 = t141911*t141911;
                double t141913 = gamma_aa[index]*gx*t141884;
                double t141914 = t141913+1.0;
                double t141915 = gamma_aa[index]*gx*t141884*3.0;
                double t141916 = gamma_aa[index]*gx*t141911*t141890*t141885;
                double t141917 = t141911*t141885*t141889*3.0;
                double t141918 = t141915+t141916+t141917+1.0;
                double t141919 = gamma_aa[index]*gx*t141884*4.0;
                double t141920 = gamma_aa[index]*gx*t141911*t141890*t141885*4.0;
                double t141921 = t141911*t141885*t141889*6.0;
                double t141922 = t141912*t141888*t141897;
                double t141923 = t141920+t141921+t141922+t141919+1.0;
                double t141924 = gamma_aa[index]*gx*t141884*2.0;
                double t141925 = t141911*t141885*t141889;
                double t141926 = t141924+t141925+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t141868+ \
                   b3f*t141869+b2f*c*t141866+b4f*t141870*t141871))+1.0)*(a1f*c*t141866+1.0)*2.0-c0p*t141881*t141883*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t141881*t141883*2.0)*((ccaa1*gcaa*t141884)/t141892+(ccaa2*gamma_aa[index]*t141886* \
                   t141889*2.0)/t141905-ccaa1*gamma_aa[index]*1.0/(t141892*t141892)*t141886*t141889-ccaa2*1.0/(t141905* \
                   t141905)*t141885*t141886*t141889*(gcaa*t141884*2.0+gamma_aa[index]*t141886*t141889*2.0)+(ccaa4*gamma_aa[index]* \
                   t141885*t141887*t141888*4.0)/t141902+(ccaa3*gcaa*t141890*t141885*t141886*3.0)/t141896-ccaa4*1.0/(t141902* \
                   t141902)*t141887*t141888*t141897*(gcaa*t141884*4.0+gamma_aa[index]*t141886*t141889*1.2E1+gamma_aa[index]* \
                   t141885*t141887*t141888*4.0+gcaa*t141890*t141885*t141886*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t141890* \
                   t141885*t141886*1.0/(t141896*t141896)*(gcaa*t141884*3.0+gamma_aa[index]*t141886*t141889*6.0+gcaa*t141890* \
                   t141885*t141886*3.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t141907*(erf(pow(t141906,1.0/3.0)/omega) \
                   *(3.991211251234741E15/2.251799813685248E15)-omega*t141907*(-t141910+(omega*omega)*1.0/pow(t141906,2.0/ \
                   3.0)*(t141910-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t141884)/t141914-cx1*gamma_aa[index]* \
                   t141911*1.0/(t141914*t141914)*t141889+(cx2*gamma_aa[index]*t141911*t141889*2.0)/t141926-cx2*t141911* \
                   1.0/(t141926*t141926)*t141885*t141889*(gx*t141884*2.0+gamma_aa[index]*t141911*t141889*2.0)+(cx4*gamma_aa[index]* \
                   t141912*t141885*t141888*4.0)/t141923+(cx3*gx*t141911*t141890*t141885*3.0)/t141918-cx4*t141912*1.0/ \
                   (t141923*t141923)*t141888*t141897*(gx*t141884*4.0+gamma_aa[index]*t141911*t141889*1.2E1+gamma_aa[index]* \
                   t141912*t141885*t141888*4.0+gx*t141911*t141890*t141885*1.2E1)-cx3*gamma_aa[index]*gx*t141911*t141890* \
                   1.0/(t141918*t141918)*t141885*(gx*t141884*3.0+gamma_aa[index]*t141911*t141889*6.0+gx*t141911*t141890* \
                   t141885*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t138014 = 1.0/pow(rho_a[index],1.0/3.0);
                double t138015 = c*t138014;
                double t138016 = sqrt(t138015);
                double t138017 = pow(t138015,3.0/2.0);
                double t138018 = c*c;
                double t138019 = 1.0/pow(rho_a[index],2.0/3.0);
                double t138020 = 1.0/c0p;
                double t138021 = b1p*t138016;
                double t138022 = b3p*t138017;
                double t138023 = b4p*t138018*t138019;
                double t138024 = b2p*c*t138014;
                double t138025 = t138021+t138022+t138023+t138024;
                double t138026 = 1.0/t138025;
                double t138027 = t138020*t138026*(1.0/2.0);
                double t138028 = t138027+1.0;
                double t138029 = log(t138028);
                double t138030 = a1p*c*t138014;
                double t138031 = t138030+1.0;
                double t138032 = pow(2.0,1.0/3.0);
                double t138033 = t138032*2.0;
                double t138034 = t138033-2.0;
                double t138035 = two_13*2.0;
                double t138036 = t138035-2.0;
                double t138037 = 1.0/t138036;
                double t138038 = 1.0/c0f;
                double t138039 = 1.0/pow(rho_b[index],1.0/3.0);
                double t138040 = c*t138039;
                double t138041 = sqrt(t138040);
                double t138042 = pow(t138040,3.0/2.0);
                double t138043 = 1.0/pow(rho_b[index],2.0/3.0);
                double t138044 = b1p*t138041;
                double t138045 = b3p*t138042;
                double t138046 = b4p*t138043*t138018;
                double t138047 = b2p*c*t138039;
                double t138048 = t138044+t138045+t138046+t138047;
                double t138049 = 1.0/t138048;
                double t138050 = t138020*t138049*(1.0/2.0);
                double t138051 = t138050+1.0;
                double t138052 = log(t138051);
                double t138053 = a1p*c*t138039;
                double t138054 = t138053+1.0;
                double t138055 = c0p*t138052*t138054*2.0;
                double t138056 = rho_a[index]+rho_b[index];
                double t138057 = 1.0/pow(t138056,1.0/3.0);
                double t138058 = c*t138057;
                double t138059 = sqrt(t138058);
                double t138060 = pow(t138058,3.0/2.0);
                double t138061 = 1.0/pow(t138056,2.0/3.0);
                double t138062 = b1p*t138059;
                double t138063 = b3p*t138060;
                double t138064 = b4p*t138061*t138018;
                double t138065 = b2p*c*t138057;
                double t138066 = t138062+t138063+t138064+t138065;
                double t138067 = 1.0/t138066;
                double t138068 = t138020*t138067*(1.0/2.0);
                double t138069 = t138068+1.0;
                double t138070 = log(t138069);
                double t138071 = a1p*c*t138057;
                double t138072 = t138071+1.0;
                double t138073 = c0p*t138070*t138072*2.0;
                double t138074 = rho_a[index]-rho_b[index];
                double t138075 = t138074*t138074;
                double t138076 = 1.0/t138056;
                double t138077 = t138074*t138076;
                double t138078 = 1.0/(t138056*t138056*t138056*t138056);
                double t138079 = t138075*t138075;
                double t138080 = t138077+1.0;
                double t138081 = pow(t138080,4.0/3.0);
                double t138082 = -t138077+1.0;
                double t138083 = pow(t138082,4.0/3.0);
                double t138084 = t138081+t138083-2.0;
                double t138085 = 1.0/pow(rho_b[index],8.0/3.0);
                double t138086 = 1.0/pow(rho_a[index],8.0/3.0);
                double t138087 = gamma_aa[index]*t138086*(1.0/2.0);
                double t138088 = gamma_bb[index]*t138085*(1.0/2.0);
                double t138089 = t138087+t138088;
                double t138090 = gcab*t138089;
                double t138091 = t138090+1.0;
                double t138092 = gcab*gcab;
                double t138093 = t138089*t138089;
                double t138094 = t138092*t138092;
                double t138095 = t138093*t138093;
                double t138096 = t138092*t138093;
                double t138097 = gcab*t138089*2.0;
                double t138098 = t138096+t138097+1.0;
                double t138099 = t138092*t138093*3.0;
                double t138100 = gcab*t138092*t138093*t138089;
                double t138101 = gcab*t138089*3.0;
                double t138102 = t138100+t138101+t138099+1.0;
                double t138103 = t138092*t138093*6.0;
                double t138104 = gcab*t138092*t138093*t138089*4.0;
                double t138105 = t138094*t138095;
                double t138106 = gcab*t138089*4.0;
                double t138107 = t138103+t138104+t138105+t138106+1.0;
                double t138108 = c0p*t138031*t138029*2.0;
                double t138109 = b1f*t138041;
                double t138110 = b3f*t138042;
                double t138111 = b4f*t138043*t138018;
                double t138112 = b2f*c*t138039;
                double t138113 = t138110+t138111+t138112+t138109;
                double t138114 = 1.0/t138113;
                double t138115 = t138114*t138038*(1.0/2.0);
                double t138116 = t138115+1.0;
                double t138117 = log(t138116);
                double t138118 = a1f*c*t138039;
                double t138119 = t138118+1.0;
                double t138120 = t138055-c0f*t138117*t138119*2.0;
                double t138121 = t138055-t138120*t138034*t138037;
                double t138122 = gamma_bb[index]*gamma_bb[index];
                double t138123 = gcaa*gcaa;
                double t138124 = t138123*t138123;
                double t138125 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t138126 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t138127 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t138128 = gamma_bb[index]*gcaa*t138085;
                double t138129 = t138128+1.0;
                double t138130 = gamma_bb[index]*gcaa*t138085*3.0;
                double t138131 = gamma_bb[index]*gcaa*t138122*t138123*t138127;
                double t138132 = t138122*t138123*t138126*3.0;
                double t138133 = t138130+t138131+t138132+1.0;
                double t138134 = t138122*t138122;
                double t138135 = gamma_bb[index]*gcaa*t138085*4.0;
                double t138136 = gamma_bb[index]*gcaa*t138122*t138123*t138127*4.0;
                double t138137 = t138122*t138123*t138126*6.0;
                double t138138 = t138124*t138125*t138134;
                double t138139 = t138135+t138136+t138137+t138138+1.0;
                double t138140 = gamma_bb[index]*gcaa*t138085*2.0;
                double t138141 = t138122*t138123*t138126;
                double t138142 = t138140+t138141+1.0;
                double t138143 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t138144 = 1.0/pow(t138143,1.0/3.0);
                double t138145 = 1.0/(omega*omega);
                double t138146 = pow(t138143,2.0/3.0);
                double t138147 = exp(-t138145*t138146);
                double t138148 = gx*gx;
                double t138149 = t138148*t138148;
                double t138150 = gamma_bb[index]*gx*t138085;
                double t138151 = t138150+1.0;
                double t138152 = gamma_bb[index]*gx*t138085*3.0;
                double t138153 = gamma_bb[index]*gx*t138122*t138127*t138148;
                double t138154 = t138122*t138126*t138148*3.0;
                double t138155 = t138152+t138153+t138154+1.0;
                double t138156 = gamma_bb[index]*gx*t138085*4.0;
                double t138157 = gamma_bb[index]*gx*t138122*t138127*t138148*4.0;
                double t138158 = t138122*t138126*t138148*6.0;
                double t138159 = t138125*t138134*t138149;
                double t138160 = t138156+t138157+t138158+t138159+1.0;
                double t138161 = gamma_bb[index]*gx*t138085*2.0;
                double t138162 = t138122*t138126*t138148;
                double t138163 = t138161+t138162+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t138121+rho_a[index]*(t138108-t138034*t138037*(t138108-c0f*log((t138038* \
                   (1.0/2.0))/(b1f*t138016+b3f*t138017+b2f*c*t138014+b4f*t138018*t138019)+1.0)*(a1f*c*t138014+1.0)*2.0) \
                   )-t138056*(t138073-t138037*t138084*t138078*t138079*(t138073-c0f*log((t138038*(1.0/2.0))/(b1f*t138059+ \
                   b3f*t138060+b2f*c*t138057+b4f*t138061*t138018)+1.0)*(a1f*c*t138057+1.0)*2.0)+(Aa*t138037*t138084*log((1.0/ \
                   2.0)/(Aa*(b1a*t138059+b3a*t138060+b2a*c*t138057+b4a*t138061*t138018))+1.0)*(t138078*t138079-1.0)*(a1a* \
                   c*t138057+1.0)*2.0)/d2fz0))*((ccab1*gcab*t138085*(1.0/2.0))/t138091-ccab4*1.0/(t138107*t138107)*t138094* \
                   t138095*(gcab*t138085*2.0+t138092*t138085*t138089*6.0+gcab*t138092*t138093*t138085*6.0+t138093*t138085* \
                   t138094*t138089*2.0)-ccab2*t138092*t138093*1.0/(t138098*t138098)*(gcab*t138085+t138092*t138085*t138089) \
                   -ccab1*1.0/(t138091*t138091)*t138092*t138085*t138089*(1.0/2.0)+(ccab2*t138092*t138085*t138089)/t138098+ \
                   (ccab3*gcab*t138092*t138093*t138085*(3.0/2.0))/t138102+(ccab4*t138093*t138085*t138094*t138089*2.0) \
                   /t138107-ccab3*gcab*1.0/(t138102*t138102)*t138092*t138093*t138089*(gcab*t138085*(3.0/2.0)+t138092* \
                   t138085*t138089*3.0+gcab*t138092*t138093*t138085*(3.0/2.0)))-rho_b[index]*t138121*((ccaa1*gcaa*t138085) \
                   /t138129+(ccaa2*gamma_bb[index]*t138123*t138126*2.0)/t138142-ccaa1*gamma_bb[index]*t138123*t138126* \
                   1.0/(t138129*t138129)-ccaa2*t138122*t138123*1.0/(t138142*t138142)*t138126*(gcaa*t138085*2.0+gamma_bb[index]* \
                   t138123*t138126*2.0)+(ccaa4*gamma_bb[index]*t138122*t138124*t138125*4.0)/t138139+(ccaa3*gcaa*t138122* \
                   t138123*t138127*3.0)/t138133-ccaa4*t138124*t138125*t138134*1.0/(t138139*t138139)*(gcaa*t138085*4.0+ \
                   gamma_bb[index]*t138123*t138126*1.2E1+gamma_bb[index]*t138122*t138124*t138125*4.0+gcaa*t138122*t138123* \
                   t138127*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t138122*t138123*1.0/(t138133*t138133)*t138127*(gcaa*t138085* \
                   3.0+gamma_bb[index]*t138123*t138126*6.0+gcaa*t138122*t138123*t138127*3.0))-c0*pow(rho_b[index],4.0/ \
                   3.0)*(omega*t138144*(erf(pow(t138143,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t138144*(-t138147+(omega*omega)*1.0/pow(t138143,2.0/3.0)*(t138147-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*((cx1*gx*t138085)/t138151-cx1*gamma_bb[index]*1.0/(t138151*t138151)*t138126*t138148+(cx2*gamma_bb[index]* \
                   t138126*t138148*2.0)/t138163-cx2*t138122*t138126*1.0/(t138163*t138163)*t138148*(gx*t138085*2.0+gamma_bb[index]* \
                   t138126*t138148*2.0)+(cx4*gamma_bb[index]*t138122*t138125*t138149*4.0)/t138160+(cx3*gx*t138122*t138127* \
                   t138148*3.0)/t138155-cx4*1.0/(t138160*t138160)*t138125*t138134*t138149*(gx*t138085*4.0+gamma_bb[index]* \
                   t138126*t138148*1.2E1+gamma_bb[index]*t138122*t138125*t138149*4.0+gx*t138122*t138127*t138148*1.2E1) \
                   -cx3*gamma_bb[index]*gx*t138122*t138127*1.0/(t138155*t138155)*t138148*(gx*t138085*3.0+gamma_bb[index]* \
                   t138126*t138148*6.0+gx*t138122*t138127*t138148*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t141113 = 1.0/pow(rho_b[index],1.0/3.0);
                double t141114 = c*t141113;
                double t141115 = sqrt(t141114);
                double t141116 = pow(t141114,3.0/2.0);
                double t141117 = c*c;
                double t141118 = 1.0/pow(rho_b[index],2.0/3.0);
                double t141119 = 1.0/c0p;
                double t141120 = b1p*t141115;
                double t141121 = b3p*t141116;
                double t141122 = b4p*t141117*t141118;
                double t141123 = b2p*c*t141113;
                double t141124 = t141120+t141121+t141122+t141123;
                double t141125 = 1.0/t141124;
                double t141126 = t141125*t141119*(1.0/2.0);
                double t141127 = t141126+1.0;
                double t141128 = log(t141127);
                double t141129 = a1p*c*t141113;
                double t141130 = t141129+1.0;
                double t141131 = 1.0/pow(rho_b[index],8.0/3.0);
                double t141132 = gamma_bb[index]*gamma_bb[index];
                double t141133 = gcaa*gcaa;
                double t141134 = t141133*t141133;
                double t141135 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t141136 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t141137 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t141138 = gamma_bb[index]*gcaa*t141131;
                double t141139 = t141138+1.0;
                double t141140 = gamma_bb[index]*gcaa*t141131*3.0;
                double t141141 = gamma_bb[index]*gcaa*t141132*t141133*t141137;
                double t141142 = t141132*t141133*t141136*3.0;
                double t141143 = t141140+t141141+t141142+1.0;
                double t141144 = t141132*t141132;
                double t141145 = gamma_bb[index]*gcaa*t141131*4.0;
                double t141146 = gamma_bb[index]*gcaa*t141132*t141133*t141137*4.0;
                double t141147 = t141132*t141133*t141136*6.0;
                double t141148 = t141134*t141135*t141144;
                double t141149 = t141145+t141146+t141147+t141148+1.0;
                double t141150 = gamma_bb[index]*gcaa*t141131*2.0;
                double t141151 = t141132*t141133*t141136;
                double t141152 = t141150+t141151+1.0;
                double t141153 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t141154 = 1.0/pow(t141153,1.0/3.0);
                double t141155 = 1.0/(omega*omega);
                double t141156 = pow(t141153,2.0/3.0);
                double t141157 = exp(-t141155*t141156);
                double t141158 = gx*gx;
                double t141159 = t141158*t141158;
                double t141160 = gamma_bb[index]*gx*t141131;
                double t141161 = t141160+1.0;
                double t141162 = gamma_bb[index]*gx*t141131*3.0;
                double t141163 = gamma_bb[index]*gx*t141132*t141137*t141158;
                double t141164 = t141132*t141136*t141158*3.0;
                double t141165 = t141162+t141163+t141164+1.0;
                double t141166 = gamma_bb[index]*gx*t141131*4.0;
                double t141167 = gamma_bb[index]*gx*t141132*t141137*t141158*4.0;
                double t141168 = t141132*t141136*t141158*6.0;
                double t141169 = t141135*t141144*t141159;
                double t141170 = t141166+t141167+t141168+t141169+1.0;
                double t141171 = gamma_bb[index]*gx*t141131*2.0;
                double t141172 = t141132*t141136*t141158;
                double t141173 = t141171+t141172+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t141115+ \
                   b3f*t141116+b2f*c*t141113+b4f*t141117*t141118))+1.0)*(a1f*c*t141113+1.0)*2.0-c0p*t141130*t141128*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t141130*t141128*2.0)*((ccaa1*gcaa*t141131)/t141139+(ccaa2*gamma_bb[index]*t141133* \
                   t141136*2.0)/t141152-ccaa1*gamma_bb[index]*t141133*t141136*1.0/(t141139*t141139)-ccaa2*t141132*t141133* \
                   1.0/(t141152*t141152)*t141136*(gcaa*t141131*2.0+gamma_bb[index]*t141133*t141136*2.0)+(ccaa4*gamma_bb[index]* \
                   t141132*t141134*t141135*4.0)/t141149+(ccaa3*gcaa*t141132*t141133*t141137*3.0)/t141143-ccaa4*t141134* \
                   t141135*t141144*1.0/(t141149*t141149)*(gcaa*t141131*4.0+gamma_bb[index]*t141133*t141136*1.2E1+gamma_bb[index]* \
                   t141132*t141134*t141135*4.0+gcaa*t141132*t141133*t141137*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t141132* \
                   t141133*1.0/(t141143*t141143)*t141137*(gcaa*t141131*3.0+gamma_bb[index]*t141133*t141136*6.0+gcaa*t141132* \
                   t141133*t141137*3.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t141154*(erf(pow(t141153,1.0/3.0)/omega) \
                   *(3.991211251234741E15/2.251799813685248E15)-omega*t141154*(-t141157+(omega*omega)*1.0/pow(t141153,2.0/ \
                   3.0)*(t141157-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t141131)/t141161-cx1*gamma_bb[index]* \
                   1.0/(t141161*t141161)*t141136*t141158+(cx2*gamma_bb[index]*t141136*t141158*2.0)/t141173-cx2*t141132* \
                   t141136*1.0/(t141173*t141173)*t141158*(gx*t141131*2.0+gamma_bb[index]*t141136*t141158*2.0)+(cx4*gamma_bb[index]* \
                   t141132*t141135*t141159*4.0)/t141170+(cx3*gx*t141132*t141137*t141158*3.0)/t141165-cx4*1.0/(t141170* \
                   t141170)*t141135*t141144*t141159*(gx*t141131*4.0+gamma_bb[index]*t141136*t141158*1.2E1+gamma_bb[index]* \
                   t141132*t141135*t141159*4.0+gx*t141132*t141137*t141158*1.2E1)-cx3*gamma_bb[index]*gx*t141132*t141137* \
                   1.0/(t141165*t141165)*t141158*(gx*t141131*3.0+gamma_bb[index]*t141136*t141158*6.0+gx*t141132*t141137* \
                   t141158*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t138167 = rho_a[index]+rho_b[index];
            double t138168 = 1.0/pow(t138167,1.0/3.0);
            double t138169 = c*t138168;
            double t138170 = sqrt(t138169);
            double t138171 = b1p*t138170;
            double t138172 = pow(t138169,3.0/2.0);
            double t138173 = b3p*t138172;
            double t138174 = c*c;
            double t138175 = 1.0/pow(t138167,2.0/3.0);
            double t138176 = b4p*t138174*t138175;
            double t138177 = b2p*c*t138168;
            double t138178 = t138171+t138173+t138176+t138177;
            double t138179 = 1.0/pow(t138167,4.0/3.0);
            double t138180 = 1.0/c0p;
            double t138181 = 1.0/t138178;
            double t138182 = t138180*t138181*(1.0/2.0);
            double t138183 = t138182+1.0;
            double t138184 = a1p*c*t138168;
            double t138185 = t138184+1.0;
            double t138186 = rho_a[index]-rho_b[index];
            double t138187 = t138186*t138186;
            double t138188 = 1.0/t138167;
            double t138189 = t138186*t138188;
            double t138190 = two_13*2.0;
            double t138191 = t138190-2.0;
            double t138192 = 1.0/t138191;
            double t138193 = 1.0/c0f;
            double t138194 = b1f*t138170;
            double t138195 = b3f*t138172;
            double t138196 = b4f*t138174*t138175;
            double t138197 = b2f*c*t138168;
            double t138198 = t138194+t138195+t138196+t138197;
            double t138199 = 1.0/t138198;
            double t138200 = t138193*t138199*(1.0/2.0);
            double t138201 = t138200+1.0;
            double t138202 = log(t138201);
            double t138203 = a1f*c*t138168;
            double t138204 = t138203+1.0;
            double t138205 = log(t138183);
            double t138215 = c0f*t138202*t138204*2.0;
            double t138216 = c0p*t138205*t138185*2.0;
            double t138206 = t138215-t138216;
            double t138207 = t138189+1.0;
            double t138208 = pow(t138207,4.0/3.0);
            double t138209 = -t138189+1.0;
            double t138210 = pow(t138209,4.0/3.0);
            double t138211 = t138210+t138208-2.0;
            double t138212 = 1.0/(t138167*t138167);
            double t138243 = t138212*t138186;
            double t138213 = -t138243+t138188;
            double t138214 = 1.0/(t138167*t138167*t138167*t138167);
            double t138217 = t138187*t138187;
            double t138218 = 1.0/pow(t138167,5.0/3.0);
            double t138219 = 1.0/sqrt(t138169);
            double t138220 = 1.0/t138183;
            double t138221 = 1.0/(t138178*t138178);
            double t138222 = b4p*t138218*t138174*(2.0/3.0);
            double t138223 = b2p*c*t138179*(1.0/3.0);
            double t138224 = b1p*c*t138219*t138179*(1.0/6.0);
            double t138225 = b3p*c*t138170*t138179*(1.0/2.0);
            double t138226 = t138222+t138223+t138224+t138225;
            double t138227 = t138220*t138221*t138226*t138185;
            double t138228 = 1.0/(t138167*t138167*t138167*t138167*t138167);
            double t138229 = 1.0/d2fz0;
            double t138230 = 1.0/Aa;
            double t138231 = b1a*t138170;
            double t138232 = b3a*t138172;
            double t138233 = b4a*t138174*t138175;
            double t138234 = b2a*c*t138168;
            double t138235 = t138231+t138232+t138233+t138234;
            double t138236 = 1.0/t138235;
            double t138237 = t138230*t138236*(1.0/2.0);
            double t138238 = t138237+1.0;
            double t138239 = log(t138238);
            double t138240 = a1a*c*t138168;
            double t138241 = t138240+1.0;
            double t138242 = pow(t138207,1.0/3.0);
            double t138244 = t138213*t138242*(4.0/3.0);
            double t138245 = pow(t138209,1.0/3.0);
            double t138320 = t138213*t138245*(4.0/3.0);
            double t138246 = -t138320+t138244;
            double t138247 = t138214*t138217;
            double t138248 = t138247-1.0;
            double t138249 = 1.0/pow(rho_a[index],1.0/3.0);
            double t138250 = c*t138249;
            double t138251 = sqrt(t138250);
            double t138252 = b1f*t138251;
            double t138253 = pow(t138250,3.0/2.0);
            double t138254 = b3f*t138253;
            double t138255 = 1.0/pow(rho_a[index],2.0/3.0);
            double t138256 = b4f*t138174*t138255;
            double t138257 = b2f*c*t138249;
            double t138258 = t138252+t138254+t138256+t138257;
            double t138259 = 1.0/pow(rho_a[index],4.0/3.0);
            double t138260 = b1p*t138251;
            double t138261 = b3p*t138253;
            double t138262 = b4p*t138174*t138255;
            double t138263 = b2p*c*t138249;
            double t138264 = t138260+t138261+t138262+t138263;
            double t138265 = 1.0/pow(rho_a[index],5.0/3.0);
            double t138266 = 1.0/sqrt(t138250);
            double t138267 = 1.0/t138258;
            double t138268 = t138193*t138267*(1.0/2.0);
            double t138269 = t138268+1.0;
            double t138270 = 1.0/t138264;
            double t138271 = t138180*t138270*(1.0/2.0);
            double t138272 = t138271+1.0;
            double t138273 = a1p*c*t138249;
            double t138274 = t138273+1.0;
            double t138275 = 1.0/t138272;
            double t138276 = 1.0/(t138264*t138264);
            double t138277 = b4p*t138174*t138265*(2.0/3.0);
            double t138278 = b2p*c*t138259*(1.0/3.0);
            double t138279 = b1p*c*t138266*t138259*(1.0/6.0);
            double t138280 = b3p*c*t138251*t138259*(1.0/2.0);
            double t138281 = t138280+t138277+t138278+t138279;
            double t138282 = t138281*t138274*t138275*t138276;
            double t138283 = log(t138272);
            double t138284 = pow(2.0,1.0/3.0);
            double t138285 = t138284*2.0;
            double t138286 = t138285-2.0;
            double t138287 = log(t138269);
            double t138288 = a1f*c*t138249;
            double t138289 = t138288+1.0;
            double t138290 = gcab*gcab;
            double t138294 = 1.0/pow(rho_a[index],8.0/3.0);
            double t138295 = gamma_aa[index]*t138294*(1.0/2.0);
            double t138296 = 1.0/pow(rho_b[index],8.0/3.0);
            double t138297 = gamma_bb[index]*t138296*(1.0/2.0);
            double t138291 = t138295+t138297;
            double t138292 = t138291*t138291;
            double t138293 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t138298 = t138290*t138290;
            double t138299 = t138292*t138292;
            double t138300 = t138290*t138292*6.0;
            double t138301 = gcab*t138290*t138291*t138292*4.0;
            double t138302 = t138298*t138299;
            double t138303 = gcab*t138291*4.0;
            double t138304 = t138300+t138301+t138302+t138303+1.0;
            double t138305 = gcab*t138291;
            double t138306 = t138305+1.0;
            double t138307 = t138290*t138292;
            double t138308 = gcab*t138291*2.0;
            double t138309 = t138307+t138308+1.0;
            double t138310 = t138290*t138292*3.0;
            double t138311 = gcab*t138290*t138291*t138292;
            double t138312 = gcab*t138291*3.0;
            double t138313 = t138310+t138311+t138312+1.0;
            double t138314 = 1.0/t138309;
            double t138315 = 1.0/t138313;
            double t138316 = 1.0/t138306;
            double t138317 = 1.0/t138304;
            double t138318 = 1.0/pow(t138167,7.0/3.0);
            double t138319 = 1.0/pow(t138167,8.0/3.0);
            double t138321 = 1.0/t138201;
            double t138322 = 1.0/(t138198*t138198);
            double t138323 = b4f*t138218*t138174*(2.0/3.0);
            double t138324 = b2f*c*t138179*(1.0/3.0);
            double t138325 = b1f*c*t138219*t138179*(1.0/6.0);
            double t138326 = b3f*c*t138170*t138179*(1.0/2.0);
            double t138327 = t138323+t138324+t138325+t138326;
            double t138328 = a1f*c*c0f*t138202*t138179*(2.0/3.0);
            double t138330 = t138204*t138321*t138322*t138327;
            double t138331 = a1p*c*c0p*t138205*t138179*(2.0/3.0);
            double t138329 = -t138330-t138331+t138227+t138328;
            double t138332 = t138226*t138226;
            double t138333 = 1.0/pow(t138169,3.0/2.0);
            double t138334 = b4p*t138174*t138319*(1.0E1/9.0);
            double t138335 = b2p*c*t138318*(4.0/9.0);
            double t138336 = b1p*c*t138219*t138318*(2.0/9.0);
            double t138337 = b3p*c*t138170*t138318*(2.0/3.0);
            double t138338 = b3p*t138174*t138219*t138319*(1.0/1.2E1);
            double t138339 = t138334+t138335+t138336+t138337+t138338-b1p*t138333*t138174*t138319*(1.0/3.6E1);
            double t138340 = 1.0/(t138178*t138178*t138178);
            double t138341 = t138220*t138340*t138332*t138185*2.0;
            double t138342 = t138327*t138327;
            double t138343 = 1.0/(t138183*t138183);
            double t138344 = 1.0/(t138178*t138178*t138178*t138178);
            double t138345 = t138330+t138331-t138227-t138328;
            double t138346 = t138212*2.0;
            double t138347 = 1.0/(t138167*t138167*t138167);
            double t138354 = t138347*t138186*2.0;
            double t138348 = -t138354+t138346;
            double t138349 = t138213*t138213;
            double t138350 = a1p*c*c0p*t138205*t138318*(8.0/9.0);
            double t138351 = 1.0/(t138167*t138167*t138167*t138167*t138167*t138167);
            double t138352 = t138217*t138228*4.0;
            double t138362 = t138214*t138186*t138187*4.0;
            double t138353 = t138352-t138362;
            double t138355 = t138245*t138348*(4.0/3.0);
            double t138356 = 1.0/pow(t138207,2.0/3.0);
            double t138357 = t138356*t138349*(4.0/9.0);
            double t138358 = 1.0/pow(t138209,2.0/3.0);
            double t138359 = t138349*t138358*(4.0/9.0);
            double t138360 = t138355+t138357+t138359-t138242*t138348*(4.0/3.0);
            double t138361 = 1.0/t138238;
            double t138363 = 1.0/(t138235*t138235);
            double t138364 = b4a*t138218*t138174*(2.0/3.0);
            double t138365 = b2a*c*t138179*(1.0/3.0);
            double t138366 = b1a*c*t138219*t138179*(1.0/6.0);
            double t138367 = b3a*c*t138170*t138179*(1.0/2.0);
            double t138368 = t138364+t138365+t138366+t138367;
            double t138369 = t138368*t138368;
            double t138370 = t138220*t138221*t138185*t138339;
            double t138371 = 1.0/t138269;
            double t138372 = b4f*t138174*t138265*(2.0/3.0);
            double t138373 = b2f*c*t138259*(1.0/3.0);
            double t138374 = b1f*c*t138266*t138259*(1.0/6.0);
            double t138375 = b3f*c*t138251*t138259*(1.0/2.0);
            double t138376 = t138372+t138373+t138374+t138375;
            double t138377 = 1.0/(t138258*t138258);
            double t138378 = 1.0/pow(rho_a[index],7.0/3.0);
            double t138379 = 1.0/pow(t138250,3.0/2.0);
            double t138380 = t138376*t138376;
            double t138381 = t138281*t138281;
            double t138382 = 1.0/(t138264*t138264*t138264);
            double t138383 = t138381*t138274*t138382*t138275*2.0;
            double t138384 = b4p*t138174*t138294*(1.0E1/9.0);
            double t138385 = b2p*c*t138378*(4.0/9.0);
            double t138386 = b3p*t138174*t138266*t138294*(1.0/1.2E1);
            double t138387 = b1p*c*t138266*t138378*(2.0/9.0);
            double t138388 = b3p*c*t138251*t138378*(2.0/3.0);
            double t138506 = b1p*t138174*t138294*t138379*(1.0/3.6E1);
            double t138389 = -t138506+t138384+t138385+t138386+t138387+t138388;
            double t138390 = 1.0/(t138272*t138272);
            double t138391 = 1.0/(t138264*t138264*t138264*t138264);
            double t138392 = a1p*c*c0p*t138283*t138378*(8.0/9.0);
            double t138393 = a1f*c*c0f*t138259*t138287*(2.0/3.0);
            double t138394 = a1p*c*c0p*t138283*t138259*(2.0/3.0);
            double t138395 = t138332*t138180*t138343*t138344*t138185*(1.0/2.0);
            double t138467 = t138371*t138376*t138377*t138289;
            double t138396 = t138282+t138393-t138394-t138467;
            double t138397 = gamma_aa[index]*gamma_aa[index];
            double t138398 = gcaa*gcaa;
            double t138399 = t138397*t138397;
            double t138400 = t138398*t138398;
            double t138401 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t138402 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t138403 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t138404 = c0f*t138287*t138289*2.0;
            double t138406 = c0p*t138274*t138283*2.0;
            double t138405 = t138404-t138406;
            double t138407 = 1.0/pow(rho_b[index],1.0/3.0);
            double t138408 = c*t138407;
            double t138409 = sqrt(t138408);
            double t138410 = pow(t138408,3.0/2.0);
            double t138411 = 1.0/pow(rho_b[index],2.0/3.0);
            double t138412 = b1p*t138409;
            double t138413 = b3p*t138410;
            double t138414 = b4p*t138411*t138174;
            double t138415 = b2p*c*t138407;
            double t138416 = t138412+t138413+t138414+t138415;
            double t138417 = 1.0/t138416;
            double t138418 = t138180*t138417*(1.0/2.0);
            double t138419 = t138418+1.0;
            double t138420 = log(t138419);
            double t138421 = a1p*c*t138407;
            double t138422 = t138421+1.0;
            double t138423 = c0p*t138420*t138422*2.0;
            double t138424 = t138211*t138214*t138206*t138217*t138192;
            double t138425 = Aa*t138211*t138241*t138192*t138229*t138239*t138248*2.0;
            double t138426 = gamma_aa[index]*gcab*t138293*(1.6E1/3.0);
            double t138427 = gamma_aa[index]*gcab*t138290*t138292*t138293*1.6E1;
            double t138428 = gamma_aa[index]*t138291*t138292*t138293*t138298*(1.6E1/3.0);
            double t138429 = gamma_aa[index]*t138290*t138291*t138293*1.6E1;
            double t138430 = t138426+t138427+t138428+t138429;
            double t138431 = 1.0/(t138306*t138306);
            double t138432 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t138433 = gamma_aa[index]*gcab*t138293*(8.0/3.0);
            double t138434 = gamma_aa[index]*t138290*t138291*t138293*(8.0/3.0);
            double t138435 = t138433+t138434;
            double t138436 = 1.0/(t138313*t138313);
            double t138437 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t138438 = 1.0/(t138304*t138304);
            double t138439 = 1.0/(t138309*t138309);
            double t138440 = gamma_aa[index]*gcab*t138293*4.0;
            double t138441 = gamma_aa[index]*gcab*t138290*t138292*t138293*4.0;
            double t138442 = gamma_aa[index]*t138290*t138291*t138293*8.0;
            double t138443 = t138440+t138441+t138442;
            double t138444 = t138405*t138192*t138286;
            double t138445 = t138406+t138444;
            double t138446 = gamma_aa[index]*gcaa*t138294*4.0;
            double t138447 = gamma_aa[index]*gcaa*t138402*t138397*t138398*4.0;
            double t138448 = t138403*t138397*t138398*6.0;
            double t138449 = t138400*t138401*t138399;
            double t138450 = t138446+t138447+t138448+t138449+1.0;
            double t138451 = 1.0/t138450;
            double t138452 = gamma_aa[index]*gcaa*t138294;
            double t138453 = t138452+1.0;
            double t138454 = 1.0/t138453;
            double t138455 = gamma_aa[index]*gcaa*t138294*3.0;
            double t138456 = gamma_aa[index]*gcaa*t138402*t138397*t138398;
            double t138457 = t138403*t138397*t138398*3.0;
            double t138458 = t138455+t138456+t138457+1.0;
            double t138459 = 1.0/t138458;
            double t138460 = gamma_aa[index]*gcaa*t138294*2.0;
            double t138461 = t138403*t138397*t138398;
            double t138462 = t138460+t138461+1.0;
            double t138463 = 1.0/t138462;
            double t138464 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t138465 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t138466 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t138468 = t138192*t138286*t138396;
            double t138469 = ccaa4*t138400*t138451*t138466*t138399*(3.2E1/3.0);
            double t138470 = ccaa1*gamma_aa[index]*gcaa*t138454*t138293*(8.0/3.0);
            double t138471 = ccaa3*gamma_aa[index]*gcaa*t138465*t138459*t138397*t138398*8.0;
            double t138472 = ccaa2*t138463*t138464*t138397*t138398*(1.6E1/3.0);
            double t138473 = 1.0/(t138453*t138453);
            double t138474 = gamma_aa[index]*gcaa*t138293*8.0;
            double t138475 = gamma_aa[index]*gcaa*t138465*t138397*t138398*8.0;
            double t138476 = t138464*t138397*t138398*1.6E1;
            double t138477 = t138474+t138475+t138476;
            double t138478 = 1.0/(t138458*t138458);
            double t138479 = gamma_aa[index]*gcaa*t138293*(3.2E1/3.0);
            double t138480 = gamma_aa[index]*gcaa*t138465*t138397*t138398*3.2E1;
            double t138481 = t138464*t138397*t138398*3.2E1;
            double t138482 = t138400*t138466*t138399*(3.2E1/3.0);
            double t138483 = t138480+t138481+t138482+t138479;
            double t138484 = 1.0/(t138450*t138450);
            double t138485 = gamma_aa[index]*gcaa*t138293*(1.6E1/3.0);
            double t138486 = t138464*t138397*t138398*(1.6E1/3.0);
            double t138487 = t138485+t138486;
            double t138488 = 1.0/(t138462*t138462);
            double t138489 = t138470+t138471+t138472+t138469-ccaa1*t138464*t138473*t138397*t138398*(8.0/3.0)- \
               ccaa4*t138400*t138401*t138483*t138484*t138399-ccaa2*t138403*t138397*t138487*t138398*t138488-ccaa3* \
               gamma_aa[index]*gcaa*t138402*t138477*t138397*t138478*t138398;
            double t138490 = -t138282+t138394+t138468;
            double t138491 = 1.0/pow(rho_a[index],1.0E1);
            double t138492 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t138493 = ccaa4*t138400*t138401*t138451*t138399;
            double t138494 = ccaa1*gamma_aa[index]*gcaa*t138454*t138294;
            double t138495 = ccaa3*gamma_aa[index]*gcaa*t138402*t138459*t138397*t138398;
            double t138496 = ccaa2*t138403*t138463*t138397*t138398;
            double t138497 = ccaa0+t138493+t138494+t138495+t138496;
            double t138498 = 1.0/(t138258*t138258*t138258);
            double t138499 = b4f*t138174*t138294*(1.0E1/9.0);
            double t138500 = b2f*c*t138378*(4.0/9.0);
            double t138501 = b3f*t138174*t138266*t138294*(1.0/1.2E1);
            double t138502 = b1f*c*t138266*t138378*(2.0/9.0);
            double t138503 = b3f*c*t138251*t138378*(2.0/3.0);
            double t138504 = t138500+t138501+t138502+t138503+t138499-b1f*t138174*t138294*t138379*(1.0/3.6E1);
            double t138505 = t138504*t138371*t138377*t138289;
            double t138507 = t138274*t138275*t138276*t138389;
            double t138508 = 1.0/(t138269*t138269);
            double t138509 = 1.0/(t138258*t138258*t138258*t138258);
            double t138510 = t138380*t138193*t138508*t138509*t138289*(1.0/2.0);
            double t138511 = t138180*t138381*t138390*t138274*t138391*(1.0/2.0);
            double t138512 = a1f*c*t138371*t138259*t138376*t138377*(2.0/3.0);
            double t138513 = a1p*c*t138281*t138275*t138276*t138259*(2.0/3.0);
            double t138514 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t138515 = 1.0/(omega*omega);
            double t138516 = pow(t138514,2.0/3.0);
            double t138519 = t138515*t138516;
            double t138517 = exp(-t138519);
            double t138518 = 1.0/pow(t138514,1.0/3.0);
            double t138520 = omega*omega;
            double t138521 = t138517-1.0;
            double t138522 = 1.0/pow(t138514,2.0/3.0);
            double t138523 = 1.0/pow(t138514,4.0/3.0);
            double t138524 = 1.0/omega;
            double t138525 = t138520*t138521*t138522*(1.0/2.0);
            double t138526 = t138525-t138517+3.0/2.0;
            double t138527 = gx*gx;
            double t138528 = t138527*t138527;
            double t138529 = pow(rho_a[index],1.0/3.0);
            double t138530 = pow(t138514,1.0/3.0);
            double t138531 = t138530*t138524;
            double t138532 = erf(t138531);
            double t138533 = t138532*(3.991211251234741E15/2.251799813685248E15);
            double t138565 = omega*t138526*t138518;
            double t138534 = t138533-t138565;
            double t138535 = gamma_aa[index]*gx*t138294*4.0;
            double t138536 = gamma_aa[index]*gx*t138402*t138527*t138397*4.0;
            double t138537 = t138403*t138527*t138397*6.0;
            double t138538 = t138401*t138528*t138399;
            double t138539 = t138535+t138536+t138537+t138538+1.0;
            double t138540 = 1.0/t138539;
            double t138541 = gamma_aa[index]*gx*t138294;
            double t138542 = t138541+1.0;
            double t138543 = 1.0/t138542;
            double t138544 = gamma_aa[index]*gx*t138294*3.0;
            double t138545 = gamma_aa[index]*gx*t138402*t138527*t138397;
            double t138546 = t138403*t138527*t138397*3.0;
            double t138547 = t138544+t138545+t138546+1.0;
            double t138548 = 1.0/t138547;
            double t138549 = gamma_aa[index]*gx*t138294*2.0;
            double t138550 = t138403*t138527*t138397;
            double t138551 = t138550+t138549+1.0;
            double t138552 = 1.0/t138551;
            double t138553 = 1.0/rho_a[index];
            double t138554 = t138517*t138553*(1.0/3.0);
            double t138555 = 1.0/pow(t138514,5.0/3.0);
            double t138556 = t138520*t138521*t138555*(2.778046668940015E15/1.40737488355328E14);
            double t138560 = t138515*t138517*t138518*(2.778046668940015E15/7.0368744177664E13);
            double t138557 = -t138560+t138554+t138556;
            double t138558 = 1.0/sqrt(3.141592653589793);
            double t138559 = omega*t138523*t138526*(2.778046668940015E15/1.40737488355328E14);
            double t138561 = omega*t138518*t138557;
            double t138562 = t138522*t138524*t138517*t138558*(1.108777112152858E31/1.584563250285287E29);
            double t138563 = t138561+t138562+t138559;
            double t138564 = 1.0/pow(t138514,7.0/3.0);
            double t138566 = cx4*t138401*t138540*t138528*t138399;
            double t138567 = cx1*gamma_aa[index]*gx*t138543*t138294;
            double t138568 = cx3*gamma_aa[index]*gx*t138402*t138527*t138548*t138397;
            double t138569 = cx2*t138403*t138552*t138527*t138397;
            double t138570 = cx0+t138566+t138567+t138568+t138569;
            double t138571 = pow(rho_a[index],4.0/3.0);
            double t138572 = omega*t138523*t138534*(2.778046668940015E15/1.05553116266496E14);
            double t138573 = cx4*t138540*t138528*t138466*t138399*(3.2E1/3.0);
            double t138574 = cx1*gamma_aa[index]*gx*t138543*t138293*(8.0/3.0);
            double t138575 = cx3*gamma_aa[index]*gx*t138527*t138465*t138548*t138397*8.0;
            double t138576 = cx2*t138552*t138464*t138527*t138397*(1.6E1/3.0);
            double t138577 = 1.0/(t138542*t138542);
            double t138578 = gamma_aa[index]*gx*t138293*8.0;
            double t138579 = gamma_aa[index]*gx*t138527*t138465*t138397*8.0;
            double t138580 = t138464*t138527*t138397*1.6E1;
            double t138581 = t138580+t138578+t138579;
            double t138582 = 1.0/(t138547*t138547);
            double t138583 = gamma_aa[index]*gx*t138293*(3.2E1/3.0);
            double t138584 = gamma_aa[index]*gx*t138527*t138465*t138397*3.2E1;
            double t138585 = t138464*t138527*t138397*3.2E1;
            double t138586 = t138528*t138466*t138399*(3.2E1/3.0);
            double t138587 = t138583+t138584+t138585+t138586;
            double t138588 = 1.0/(t138539*t138539);
            double t138589 = gamma_aa[index]*gx*t138293*(1.6E1/3.0);
            double t138590 = t138464*t138527*t138397*(1.6E1/3.0);
            double t138591 = t138590+t138589;
            double t138592 = 1.0/(t138551*t138551);
            double t138593 = t138573+t138574+t138575+t138576-cx1*t138464*t138527*t138397*t138577*(8.0/3.0)-cx2* \
               t138403*t138527*t138591*t138592*t138397-cx4*t138401*t138528*t138587*t138399*t138588-cx3*gamma_aa[index]* \
               gx*t138402*t138527*t138581*t138582*t138397;
            double t138594 = t138572-omega*t138518*t138563*(4.0/3.0);
            double t138595 = omega*t138534*t138518*(4.0/3.0);
            double t138596 = t138595-1.0;
            v_rho_a_rho_a_[index] = (rho_a[index]*t138445+rho_b[index]*(t138423-t138192*t138286*(t138423-c0f* \
               log((t138193*(1.0/2.0))/(b1f*t138409+b3f*t138410+b2f*c*t138407+b4f*t138411*t138174)+1.0)*(a1f*c*t138407+ \
               1.0)*2.0))-t138167*(t138216+t138424+t138425))*(-ccab2*t138290*t138292*t138439*(gamma_aa[index]*gcab* \
               t138437*(8.8E1/9.0)+t138432*t138290*t138397*(3.2E1/9.0)+gamma_aa[index]*t138290*t138291*t138437*(8.8E1/ \
               9.0))+ccab2*t138290*1.0/(t138309*t138309*t138309)*(t138435*t138435)*t138292*2.0+ccab4*1.0/(t138304* \
               t138304*t138304)*(t138430*t138430)*t138298*t138299*2.0+ccab1*gamma_aa[index]*gcab*t138316*t138437* \
               (4.4E1/9.0)-ccab1*t138431*t138432*t138290*t138397*(3.2E1/9.0)+ccab2*t138314*t138432*t138290*t138397* \
               (3.2E1/9.0)-ccab4*t138438*t138298*t138299*(gamma_aa[index]*gcab*t138437*(1.76E2/9.0)+t138432*t138290* \
               t138397*(6.4E1/3.0)+gamma_aa[index]*t138290*t138291*t138437*(1.76E2/3.0)+t138432*t138292*t138298*t138397* \
               (6.4E1/3.0)+gamma_aa[index]*gcab*t138290*t138292*t138437*(1.76E2/3.0)+gamma_aa[index]*t138291*t138292* \
               t138437*t138298*(1.76E2/9.0)+gcab*t138432*t138290*t138291*t138397*(1.28E2/3.0))+ccab4*t138432*t138317* \
               t138292*t138298*t138397*(6.4E1/3.0)-ccab1*gamma_aa[index]*t138431*t138290*t138291*t138437*(4.4E1/9.0) \
               +ccab2*gamma_aa[index]*t138314*t138290*t138291*t138437*(8.8E1/9.0)+ccab3*gcab*1.0/(t138313*t138313* \
               t138313)*t138290*(t138443*t138443)*t138291*t138292*2.0+ccab3*gamma_aa[index]*gcab*t138315*t138290* \
               t138292*t138437*(4.4E1/3.0)-ccab2*gamma_aa[index]*t138290*t138291*t138435*t138293*t138439*(1.6E1/3.0) \
               +ccab4*gamma_aa[index]*t138317*t138291*t138292*t138437*t138298*(1.76E2/9.0)+ccab3*gcab*t138315*t138432* \
               t138290*t138291*t138397*(3.2E1/3.0)+ccab1*gcab*1.0/(t138306*t138306*t138306)*t138432*t138290*t138291* \
               t138397*(3.2E1/9.0)-ccab3*gcab*t138290*t138291*t138292*t138436*(gamma_aa[index]*gcab*t138437*(4.4E1/ \
               3.0)+t138432*t138290*t138397*(3.2E1/3.0)+gamma_aa[index]*t138290*t138291*t138437*(8.8E1/3.0)+gamma_aa[index]* \
               gcab*t138290*t138292*t138437*(4.4E1/3.0)+gcab*t138432*t138290*t138291*t138397*(3.2E1/3.0))-ccab3*gamma_aa[index]* \
               gcab*t138290*t138443*t138292*t138436*t138293*8.0-ccab4*gamma_aa[index]*t138430*t138291*t138292*t138293* \
               t138438*t138298*(3.2E1/3.0))+t138490*t138497*2.0+t138445*t138489*2.0+(t138216+t138424+t138425+rho_a[index]* \
               (-t138282+t138394+t138192*t138286*(t138282+t138393-t138371*t138376*t138377*t138289-a1p*c*c0p*t138283* \
               t138259*(2.0/3.0)))+t138167*(t138227-a1p*c*c0p*t138205*t138179*(2.0/3.0)-t138211*t138206*t138217*t138192* \
               t138228*4.0-t138211*t138214*t138217*t138192*t138329+t138214*t138206*t138217*t138192*t138246+t138211* \
               t138214*t138206*t138192*t138186*t138187*4.0-Aa*t138211*t138241*t138353*t138192*t138229*t138239*2.0+ \
               Aa*t138241*t138192*t138246*t138229*t138239*t138248*2.0+t138211*t138241*t138361*t138192*t138363*t138229* \
               t138248*t138368-Aa*a1a*c*t138211*t138192*t138229*t138239*t138248*t138179*(2.0/3.0))-c0p*t138274*t138283* \
               2.0-t138405*t138192*t138286)*(ccab1*gamma_aa[index]*gcab*t138316*t138293*(4.0/3.0)-ccab2*t138290*t138435* \
               t138292*t138439-ccab4*t138430*t138438*t138298*t138299-ccab1*gamma_aa[index]*t138431*t138290*t138291* \
               t138293*(4.0/3.0)+ccab2*gamma_aa[index]*t138314*t138290*t138291*t138293*(8.0/3.0)+ccab3*gamma_aa[index]* \
               gcab*t138315*t138290*t138292*t138293*4.0+ccab4*gamma_aa[index]*t138317*t138291*t138292*t138293*t138298* \
               (1.6E1/3.0)-ccab3*gcab*t138290*t138443*t138291*t138292*t138436)*2.0-(ccab0+ccab1*gcab*t138316*t138291+ \
               ccab2*t138314*t138290*t138292+ccab4*t138317*t138298*t138299+ccab3*gcab*t138315*t138290*t138291*t138292) \
               *(-t138167*(-t138341-t138350+t138370+t138395+t138211*t138214*t138217*t138192*(t138341+t138350-t138370- \
               t138395-t138204*t138321*t138342*1.0/(t138198*t138198*t138198)*2.0+t138204*t138321*t138322*(b2f*c*t138318* \
               (4.0/9.0)+b4f*t138174*t138319*(1.0E1/9.0)+b1f*c*t138219*t138318*(2.0/9.0)+b3f*c*t138170*t138318*(2.0/ \
               3.0)-b1f*t138333*t138174*t138319*(1.0/3.6E1)+b3f*t138174*t138219*t138319*(1.0/1.2E1))+1.0/(t138201* \
               t138201)*t138204*t138342*t138193*1.0/(t138198*t138198*t138198*t138198)*(1.0/2.0)-a1f*c*c0f*t138202* \
               t138318*(8.0/9.0)+a1f*c*t138321*t138322*t138327*t138179*(2.0/3.0)-a1p*c*t138220*t138221*t138226*t138179* \
               (2.0/3.0))-t138211*t138206*t138351*t138217*t138192*2.0E1-t138214*t138206*t138360*t138217*t138192-t138211* \
               t138214*t138206*t138192*t138187*1.2E1+t138211*t138217*t138192*t138228*t138345*8.0-t138214*t138217* \
               t138192*t138246*t138345*2.0+t138206*t138217*t138192*t138228*t138246*8.0+t138211*t138206*t138192*t138228* \
               t138186*t138187*3.2E1+t138211*t138214*t138192*t138329*t138186*t138187*8.0-t138214*t138206*t138192* \
               t138246*t138186*t138187*8.0+a1p*c*t138220*t138221*t138226*t138179*(2.0/3.0)-Aa*t138241*t138360*t138192* \
               t138229*t138239*t138248*2.0+Aa*t138241*t138353*t138192*t138246*t138229*t138239*4.0-Aa*t138211*t138241* \
               t138192*t138229*t138239*(t138351*t138217*2.0E1+t138214*t138187*1.2E1-t138228*t138186*t138187*3.2E1) \
               *2.0+t138211*t138241*t138361*t138353*t138192*t138363*t138229*t138368*2.0-t138241*t138361*t138192*t138246* \
               t138363*t138229*t138248*t138368*2.0-t138211*t138241*1.0/(t138235*t138235*t138235)*t138361*t138192* \
               t138229*t138248*t138369*2.0+t138211*t138241*t138361*t138192*t138363*t138229*t138248*(b2a*c*t138318* \
               (4.0/9.0)+b4a*t138174*t138319*(1.0E1/9.0)+b1a*c*t138219*t138318*(2.0/9.0)+b3a*c*t138170*t138318*(2.0/ \
               3.0)-b1a*t138333*t138174*t138319*(1.0/3.6E1)+b3a*t138174*t138219*t138319*(1.0/1.2E1))-Aa*a1a*c*t138211* \
               t138192*t138318*t138229*t138239*t138248*(8.0/9.0)-Aa*a1a*c*t138211*t138353*t138192*t138229*t138239* \
               t138179*(4.0/3.0)+Aa*a1a*c*t138192*t138246*t138229*t138239*t138248*t138179*(4.0/3.0)+t138211*t138230* \
               t138241*1.0/(t138235*t138235*t138235*t138235)*t138192*t138229*1.0/(t138238*t138238)*t138248*t138369* \
               (1.0/2.0)+a1a*c*t138211*t138361*t138192*t138363*t138229*t138248*t138179*t138368*(2.0/3.0))+rho_a[index]* \
               (t138511+t138513+t138507-t138383-t138392+t138192*t138286*(t138510+t138512+t138505+t138383+t138392- \
               t138371*t138380*t138289*t138498*2.0-t138274*t138275*t138276*t138389-a1f*c*c0f*t138287*t138378*(8.0/ \
               9.0)-t138180*t138381*t138390*t138274*t138391*(1.0/2.0)-a1p*c*t138281*t138275*t138276*t138259*(2.0/ \
               3.0)))+t138192*t138286*t138396*2.0+t138220*t138221*t138226*t138185*2.0-t138281*t138274*t138275*t138276* \
               2.0-a1p*c*c0p*t138205*t138179*(4.0/3.0)+a1p*c*c0p*t138283*t138259*(4.0/3.0)+t138211*t138214*t138217* \
               t138192*t138345*2.0-t138211*t138206*t138217*t138192*t138228*8.0+t138214*t138206*t138217*t138192*t138246* \
               2.0+t138211*t138214*t138206*t138192*t138186*t138187*8.0-Aa*t138211*t138241*t138353*t138192*t138229* \
               t138239*4.0+Aa*t138241*t138192*t138246*t138229*t138239*t138248*4.0+t138211*t138241*t138361*t138192* \
               t138363*t138229*t138248*t138368*2.0-Aa*a1a*c*t138211*t138192*t138229*t138239*t138248*t138179*(4.0/ \
               3.0))-rho_a[index]*t138445*(ccaa1*gamma_aa[index]*gcaa*t138454*t138437*(8.8E1/9.0)+ccaa4*t138400*t138451* \
               t138492*t138399*(1.12E3/9.0)-ccaa1*t138432*t138473*t138397*t138398*2.4E1+ccaa2*t138432*t138463*t138397* \
               t138398*(3.04E2/9.0)-ccaa4*t138400*t138483*t138466*t138484*t138399*(6.4E1/3.0)-ccaa2*t138464*t138397* \
               t138487*t138398*t138488*(3.2E1/3.0)-ccaa2*t138403*t138397*t138398*t138488*(gamma_aa[index]*gcaa*t138437* \
               (1.76E2/9.0)+t138432*t138397*t138398*(3.04E2/9.0))-ccaa4*t138400*t138401*t138484*t138399*(gamma_aa[index]* \
               gcaa*t138437*(3.52E2/9.0)+t138400*t138492*t138399*(1.12E3/9.0)+t138432*t138397*t138398*(6.08E2/3.0) \
               +gamma_aa[index]*gcaa*t138491*t138397*t138398*2.88E2)+ccaa4*t138400*t138401*1.0/(t138450*t138450*t138450) \
               *(t138483*t138483)*t138399*2.0+ccaa2*t138403*1.0/(t138462*t138462*t138462)*t138397*(t138487*t138487) \
               *t138398*2.0+ccaa3*gamma_aa[index]*gcaa*t138491*t138459*t138397*t138398*7.2E1+ccaa1*gamma_aa[index]* \
               gcaa*1.0/(t138453*t138453*t138453)*t138491*t138397*t138398*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa* \
               t138402*1.0/(t138458*t138458*t138458)*(t138477*t138477)*t138397*t138398*2.0-ccaa3*gamma_aa[index]* \
               gcaa*t138402*t138397*t138478*t138398*(gamma_aa[index]*gcaa*t138437*(8.8E1/3.0)+t138432*t138397*t138398* \
               (3.04E2/3.0)+gamma_aa[index]*gcaa*t138491*t138397*t138398*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t138465* \
               t138477*t138397*t138478*t138398*1.6E1)+rho_a[index]*t138497*(t138511+t138513+t138507-t138383-t138392+ \
               t138192*t138286*(t138510-t138511+t138512-t138513+t138505-t138507+t138383+t138392-t138371*t138380*t138289* \
               t138498*2.0-a1f*c*c0f*t138287*t138378*(8.0/9.0)))-rho_a[index]*t138490*t138489*2.0-c0*t138571*t138596* \
               (cx1*gamma_aa[index]*gx*t138543*t138437*(8.8E1/9.0)-cx1*t138432*t138527*t138397*t138577*2.4E1+cx2* \
               t138432*t138552*t138527*t138397*(3.04E2/9.0)+cx4*t138540*t138492*t138528*t138399*(1.12E3/9.0)-cx2* \
               t138464*t138527*t138591*t138592*t138397*(3.2E1/3.0)-cx4*t138528*t138466*t138587*t138399*t138588*(6.4E1/ \
               3.0)-cx2*t138403*t138527*t138592*t138397*(gamma_aa[index]*gx*t138437*(1.76E2/9.0)+t138432*t138527* \
               t138397*(3.04E2/9.0))-cx4*t138401*t138528*t138399*t138588*(gamma_aa[index]*gx*t138437*(3.52E2/9.0) \
               +t138432*t138527*t138397*(6.08E2/3.0)+t138492*t138528*t138399*(1.12E3/9.0)+gamma_aa[index]*gx*t138491* \
               t138527*t138397*2.88E2)+cx2*t138403*1.0/(t138551*t138551*t138551)*t138527*(t138591*t138591)*t138397* \
               2.0+cx4*t138401*t138528*1.0/(t138539*t138539*t138539)*(t138587*t138587)*t138399*2.0+cx3*gamma_aa[index]* \
               gx*t138491*t138527*t138548*t138397*7.2E1+cx1*gamma_aa[index]*gx*1.0/(t138542*t138542*t138542)*t138491* \
               t138527*t138397*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t138402*t138527*(t138581*t138581)*1.0/(t138547* \
               t138547*t138547)*t138397*2.0-cx3*gamma_aa[index]*gx*t138402*t138527*t138582*t138397*(gamma_aa[index]* \
               gx*t138437*(8.8E1/3.0)+t138432*t138527*t138397*(3.04E2/3.0)+gamma_aa[index]*gx*t138491*t138527*t138397* \
               7.2E1)-cx3*gamma_aa[index]*gx*t138527*t138581*t138465*t138582*t138397*1.6E1)-c0*t138255*t138570*t138596* \
               (4.0/9.0)+c0*t138570*t138529*t138594*(8.0/3.0)-c0*t138571*t138593*t138594*2.0+c0*t138529*t138593*t138596* \
               (8.0/3.0)+c0*t138570*t138571*(omega*t138523*t138563*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t138534*t138564*(7.717543294808713E30/3.713820117856141E27)+omega*t138518*(omega*t138523*t138557*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t138526*t138564*(7.717543294808713E30/4.951760157141521E27)+omega*t138518* \
               (1.0/(rho_a[index]*rho_a[index])*t138517*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t138522*t138517*(7.717543294808713E30/ \
               4.951760157141521E27)+t138520*t138521*1.0/pow(t138514,8.0/3.0)*(3.858771647404357E31/1.980704062856608E28) \
               -t138523*t138515*t138517*(7.717543294808713E30/9.903520314283042E27)+t138515*t138517*t138553*t138518* \
               (2.778046668940015E15/2.11106232532992E14))+t138524*t138517*t138555*t138558*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t138517*t138553*t138558*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else if (rho_a[index] > cutoff_) {
            double t141932 = 1.0/pow(rho_a[index],1.0/3.0);
            double t141933 = c*t141932;
            double t141934 = sqrt(t141933);
            double t141935 = b1f*t141934;
            double t141936 = pow(t141933,3.0/2.0);
            double t141937 = b3f*t141936;
            double t141938 = c*c;
            double t141939 = 1.0/pow(rho_a[index],2.0/3.0);
            double t141940 = b4f*t141938*t141939;
            double t141941 = b2f*c*t141932;
            double t141942 = t141940+t141941+t141935+t141937;
            double t141943 = 1.0/pow(rho_a[index],4.0/3.0);
            double t141944 = b1p*t141934;
            double t141945 = b3p*t141936;
            double t141946 = b4p*t141938*t141939;
            double t141947 = b2p*c*t141932;
            double t141948 = t141944+t141945+t141946+t141947;
            double t141949 = 1.0/pow(rho_a[index],5.0/3.0);
            double t141950 = 1.0/sqrt(t141933);
            double t141951 = 1.0/c0f;
            double t141952 = 1.0/t141942;
            double t141953 = t141951*t141952*(1.0/2.0);
            double t141954 = t141953+1.0;
            double t141955 = 1.0/c0p;
            double t141956 = 1.0/t141948;
            double t141957 = t141955*t141956*(1.0/2.0);
            double t141958 = t141957+1.0;
            double t141959 = a1p*c*t141932;
            double t141960 = t141959+1.0;
            double t141961 = 1.0/t141958;
            double t141962 = 1.0/(t141948*t141948);
            double t141963 = b4p*t141938*t141949*(2.0/3.0);
            double t141964 = b2p*c*t141943*(1.0/3.0);
            double t141965 = b1p*c*t141950*t141943*(1.0/6.0);
            double t141966 = b3p*c*t141934*t141943*(1.0/2.0);
            double t141967 = t141963+t141964+t141965+t141966;
            double t141968 = t141960*t141961*t141962*t141967;
            double t141969 = log(t141958);
            double t141970 = gamma_aa[index]*gamma_aa[index];
            double t141971 = gcaa*gcaa;
            double t141972 = t141970*t141970;
            double t141973 = t141971*t141971;
            double t141974 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t141975 = 1.0/pow(rho_a[index],8.0/3.0);
            double t141976 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t141977 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t141978 = pow(2.0,1.0/3.0);
            double t141979 = t141978*2.0;
            double t141980 = t141979-2.0;
            double t141981 = two_13*2.0;
            double t141982 = t141981-2.0;
            double t141983 = 1.0/t141982;
            double t141984 = log(t141954);
            double t141985 = a1f*c*t141932;
            double t141986 = t141985+1.0;
            double t141987 = gamma_aa[index]*gcaa*t141975*4.0;
            double t141988 = gamma_aa[index]*gcaa*t141970*t141971*t141976*4.0;
            double t141989 = t141970*t141971*t141977*6.0;
            double t141990 = t141972*t141973*t141974;
            double t141991 = t141990+t141987+t141988+t141989+1.0;
            double t141992 = 1.0/t141991;
            double t141993 = gamma_aa[index]*gcaa*t141975;
            double t141994 = t141993+1.0;
            double t141995 = 1.0/t141994;
            double t141996 = gamma_aa[index]*gcaa*t141975*3.0;
            double t141997 = gamma_aa[index]*gcaa*t141970*t141971*t141976;
            double t141998 = t141970*t141971*t141977*3.0;
            double t141999 = t141996+t141997+t141998+1.0;
            double t142000 = 1.0/t141999;
            double t142001 = gamma_aa[index]*gcaa*t141975*2.0;
            double t142002 = t141970*t141971*t141977;
            double t142003 = t142001+t142002+1.0;
            double t142004 = 1.0/t142003;
            double t142005 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t142006 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t142007 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t142008 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t142009 = 1.0/t141954;
            double t142010 = 1.0/(t141942*t141942);
            double t142011 = b4f*t141938*t141949*(2.0/3.0);
            double t142012 = b2f*c*t141943*(1.0/3.0);
            double t142013 = b1f*c*t141950*t141943*(1.0/6.0);
            double t142014 = b3f*c*t141934*t141943*(1.0/2.0);
            double t142015 = t142011+t142012+t142013+t142014;
            double t142016 = a1f*c*c0f*t141943*t141984*(2.0/3.0);
            double t142017 = a1p*c*c0p*t141943*t141969*(2.0/3.0);
            double t142018 = ccaa4*t142008*t141972*t141973*t141992*(3.2E1/3.0);
            double t142019 = ccaa1*gamma_aa[index]*gcaa*t142006*t141995*(8.0/3.0);
            double t142020 = ccaa3*gamma_aa[index]*gcaa*t142000*t142007*t141970*t141971*8.0;
            double t142021 = ccaa2*t142004*t142005*t141970*t141971*(1.6E1/3.0);
            double t142022 = 1.0/(t141994*t141994);
            double t142023 = gamma_aa[index]*gcaa*t142006*8.0;
            double t142024 = gamma_aa[index]*gcaa*t142007*t141970*t141971*8.0;
            double t142025 = t142005*t141970*t141971*1.6E1;
            double t142026 = t142023+t142024+t142025;
            double t142027 = 1.0/(t141999*t141999);
            double t142028 = gamma_aa[index]*gcaa*t142006*(3.2E1/3.0);
            double t142029 = gamma_aa[index]*gcaa*t142007*t141970*t141971*3.2E1;
            double t142030 = t142005*t141970*t141971*3.2E1;
            double t142031 = t142008*t141972*t141973*(3.2E1/3.0);
            double t142032 = t142030+t142031+t142028+t142029;
            double t142033 = 1.0/(t141991*t141991);
            double t142034 = gamma_aa[index]*gcaa*t142006*(1.6E1/3.0);
            double t142035 = t142005*t141970*t141971*(1.6E1/3.0);
            double t142036 = t142034+t142035;
            double t142037 = 1.0/(t142003*t142003);
            double t142038 = t142020+t142021+t142018+t142019-ccaa1*t142022*t142005*t141970*t141971*(8.0/3.0)- \
               ccaa4*t142032*t142033*t141972*t141973*t141974-ccaa2*t142036*t142037*t141970*t141971*t141977-ccaa3* \
               gamma_aa[index]*gcaa*t142026*t142027*t141970*t141971*t141976;
            double t142039 = c0f*t141984*t141986*2.0;
            double t142040 = c0p*t141960*t141969*2.0;
            double t142041 = 1.0/pow(rho_a[index],1.0E1);
            double t142042 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t142043 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t142044 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t142045 = ccaa4*t141972*t141973*t141974*t141992;
            double t142046 = ccaa1*gamma_aa[index]*gcaa*t141975*t141995;
            double t142047 = ccaa3*gamma_aa[index]*gcaa*t142000*t141970*t141971*t141976;
            double t142048 = ccaa2*t142004*t141970*t141971*t141977;
            double t142049 = ccaa0+t142045+t142046+t142047+t142048;
            double t142050 = 1.0/pow(rho_a[index],7.0/3.0);
            double t142051 = 1.0/pow(t141933,3.0/2.0);
            double t142052 = t142015*t142015;
            double t142053 = t141967*t141967;
            double t142054 = 1.0/(t141948*t141948*t141948);
            double t142055 = t142053*t142054*t141960*t141961*2.0;
            double t142056 = b4p*t141938*t141975*(1.0E1/9.0);
            double t142057 = b2p*c*t142050*(4.0/9.0);
            double t142058 = b3p*t141950*t141938*t141975*(1.0/1.2E1);
            double t142059 = b1p*c*t142050*t141950*(2.0/9.0);
            double t142060 = b3p*c*t142050*t141934*(2.0/3.0);
            double t142061 = t142060+t142056+t142057+t142058+t142059-b1p*t142051*t141938*t141975*(1.0/3.6E1);
            double t142062 = 1.0/(t141958*t141958);
            double t142063 = 1.0/(t141948*t141948*t141948*t141948);
            double t142064 = a1p*c*c0p*t142050*t141969*(8.0/9.0);
            double t142065 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t142066 = 1.0/(omega*omega);
            double t142067 = pow(t142065,2.0/3.0);
            double t142070 = t142066*t142067;
            double t142068 = exp(-t142070);
            double t142069 = 1.0/pow(t142065,1.0/3.0);
            double t142071 = omega*omega;
            double t142072 = t142068-1.0;
            double t142073 = 1.0/pow(t142065,2.0/3.0);
            double t142074 = 1.0/pow(t142065,4.0/3.0);
            double t142075 = 1.0/omega;
            double t142076 = t142071*t142072*t142073*(1.0/2.0);
            double t142077 = t142076-t142068+3.0/2.0;
            double t142078 = gx*gx;
            double t142079 = t142078*t142078;
            double t142080 = pow(rho_a[index],1.0/3.0);
            double t142081 = pow(t142065,1.0/3.0);
            double t142082 = t142081*t142075;
            double t142083 = erf(t142082);
            double t142084 = t142083*(3.991211251234741E15/2.251799813685248E15);
            double t142116 = omega*t142077*t142069;
            double t142085 = -t142116+t142084;
            double t142086 = gamma_aa[index]*gx*t141975*4.0;
            double t142087 = gamma_aa[index]*gx*t141970*t142078*t141976*4.0;
            double t142088 = t141970*t142078*t141977*6.0;
            double t142089 = t142079*t141972*t141974;
            double t142090 = t142086+t142087+t142088+t142089+1.0;
            double t142091 = 1.0/t142090;
            double t142092 = gamma_aa[index]*gx*t141975;
            double t142093 = t142092+1.0;
            double t142094 = 1.0/t142093;
            double t142095 = gamma_aa[index]*gx*t141975*3.0;
            double t142096 = gamma_aa[index]*gx*t141970*t142078*t141976;
            double t142097 = t141970*t142078*t141977*3.0;
            double t142098 = t142095+t142096+t142097+1.0;
            double t142099 = 1.0/t142098;
            double t142100 = gamma_aa[index]*gx*t141975*2.0;
            double t142101 = t141970*t142078*t141977;
            double t142102 = t142100+t142101+1.0;
            double t142103 = 1.0/t142102;
            double t142104 = 1.0/rho_a[index];
            double t142105 = t142104*t142068*(1.0/3.0);
            double t142106 = 1.0/pow(t142065,5.0/3.0);
            double t142107 = t142106*t142071*t142072*(2.778046668940015E15/1.40737488355328E14);
            double t142111 = t142066*t142068*t142069*(2.778046668940015E15/7.0368744177664E13);
            double t142108 = -t142111+t142105+t142107;
            double t142109 = 1.0/sqrt(3.141592653589793);
            double t142110 = omega*t142074*t142077*(2.778046668940015E15/1.40737488355328E14);
            double t142112 = omega*t142108*t142069;
            double t142113 = t142073*t142109*t142075*t142068*(1.108777112152858E31/1.584563250285287E29);
            double t142114 = t142110+t142112+t142113;
            double t142115 = 1.0/pow(t142065,7.0/3.0);
            double t142117 = cx4*t142091*t142079*t141972*t141974;
            double t142118 = cx1*gamma_aa[index]*gx*t142094*t141975;
            double t142119 = cx3*gamma_aa[index]*gx*t141970*t142078*t142099*t141976;
            double t142120 = cx2*t142103*t141970*t142078*t141977;
            double t142121 = cx0+t142120+t142117+t142118+t142119;
            double t142122 = pow(rho_a[index],4.0/3.0);
            double t142123 = omega*t142114*t142069*(4.0/3.0);
            double t142124 = t142123-omega*t142074*t142085*(2.778046668940015E15/1.05553116266496E14);
            double t142125 = cx4*t142008*t142091*t142079*t141972*(3.2E1/3.0);
            double t142126 = cx1*gamma_aa[index]*gx*t142006*t142094*(8.0/3.0);
            double t142127 = cx3*gamma_aa[index]*gx*t142007*t141970*t142078*t142099*8.0;
            double t142128 = cx2*t142103*t142005*t141970*t142078*(1.6E1/3.0);
            double t142129 = 1.0/(t142093*t142093);
            double t142130 = gamma_aa[index]*gx*t142006*8.0;
            double t142131 = gamma_aa[index]*gx*t142007*t141970*t142078*8.0;
            double t142132 = t142005*t141970*t142078*1.6E1;
            double t142133 = t142130+t142131+t142132;
            double t142134 = 1.0/(t142098*t142098);
            double t142135 = gamma_aa[index]*gx*t142006*(3.2E1/3.0);
            double t142136 = gamma_aa[index]*gx*t142007*t141970*t142078*3.2E1;
            double t142137 = t142005*t141970*t142078*3.2E1;
            double t142138 = t142008*t142079*t141972*(3.2E1/3.0);
            double t142139 = t142135+t142136+t142137+t142138;
            double t142140 = 1.0/(t142090*t142090);
            double t142141 = gamma_aa[index]*gx*t142006*(1.6E1/3.0);
            double t142142 = t142005*t141970*t142078*(1.6E1/3.0);
            double t142143 = t142141+t142142;
            double t142144 = 1.0/(t142102*t142102);
            double t142145 = t142125+t142126+t142127+t142128-cx1*t142005*t142129*t141970*t142078*(8.0/3.0)-cx2* \
               t142143*t142144*t141970*t142078*t141977-cx4*t142140*t142139*t142079*t141972*t141974-cx3*gamma_aa[index]* \
               gx*t142133*t142134*t141970*t142078*t141976;
            double t142146 = omega*t142085*t142069*(4.0/3.0);
            double t142147 = t142146-1.0;
            v_rho_a_rho_a_[index] = t142038*(t142040+t141980*t141983*(t142039-c0p*t141960*t141969*2.0))*2.0+t142049* \
               (t142017-t141968+t141980*t141983*(t142016+t141968-t142010*t142015*t142009*t141986-a1p*c*c0p*t141943* \
               t141969*(2.0/3.0)))*2.0+rho_a[index]*t142049*(-t142055-t142064+t141980*t141983*(t142055+t142064-t142061* \
               t141960*t141961*t141962-t142052*t142009*1.0/(t141942*t141942*t141942)*t141986*2.0+t142010*t142009* \
               t141986*(b2f*c*t142050*(4.0/9.0)+b4f*t141938*t141975*(1.0E1/9.0)+b1f*c*t142050*t141950*(2.0/9.0)+b3f* \
               c*t142050*t141934*(2.0/3.0)-b1f*t142051*t141938*t141975*(1.0/3.6E1)+b3f*t141950*t141938*t141975*(1.0/ \
               1.2E1))+t142052*1.0/(t141942*t141942*t141942*t141942)*t141951*1.0/(t141954*t141954)*t141986*(1.0/2.0) \
               -a1f*c*c0f*t142050*t141984*(8.0/9.0)-t142053*t142062*t142063*t141960*t141955*(1.0/2.0)+a1f*c*t142010* \
               t142015*t142009*t141943*(2.0/3.0)-a1p*c*t141943*t141961*t141962*t141967*(2.0/3.0))+t142061*t141960* \
               t141961*t141962+t142053*t142062*t142063*t141960*t141955*(1.0/2.0)+a1p*c*t141943*t141961*t141962*t141967* \
               (2.0/3.0))-rho_a[index]*t142038*(t142017-t141968+t141980*t141983*(t142016-t142017+t141968-t142010* \
               t142015*t142009*t141986))*2.0-rho_a[index]*(t142040-t141980*t141983*(t142040-t142039))*(ccaa1*gamma_aa[index]* \
               gcaa*t142043*t141995*(8.8E1/9.0)-ccaa1*t142022*t142042*t141970*t141971*2.4E1+ccaa2*t142004*t142042* \
               t141970*t141971*(3.04E2/9.0)+ccaa4*t142044*t141972*t141973*t141992*(1.12E3/9.0)-ccaa2*t142005*t142036* \
               t142037*t141970*t141971*(3.2E1/3.0)-ccaa4*t142032*t142033*t142008*t141972*t141973*(6.4E1/3.0)-ccaa2* \
               t142037*t141970*t141971*t141977*(gamma_aa[index]*gcaa*t142043*(1.76E2/9.0)+t142042*t141970*t141971* \
               (3.04E2/9.0))-ccaa4*t142033*t141972*t141973*t141974*(gamma_aa[index]*gcaa*t142043*(3.52E2/9.0)+t142042* \
               t141970*t141971*(6.08E2/3.0)+t142044*t141972*t141973*(1.12E3/9.0)+gamma_aa[index]*gcaa*t142041*t141970* \
               t141971*2.88E2)+ccaa2*1.0/(t142003*t142003*t142003)*(t142036*t142036)*t141970*t141971*t141977*2.0+ \
               ccaa4*(t142032*t142032)*t141972*t141973*1.0/(t141991*t141991*t141991)*t141974*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t142000*t142041*t141970*t141971*7.2E1+ccaa1*gamma_aa[index]*gcaa*t142041*t141970*t141971*1.0/ \
               (t141994*t141994*t141994)*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*(t142026*t142026)*t141970*t141971* \
               t141976*1.0/(t141999*t141999*t141999)*2.0-ccaa3*gamma_aa[index]*gcaa*t142027*t141970*t141971*t141976* \
               (gamma_aa[index]*gcaa*t142043*(8.8E1/3.0)+t142042*t141970*t141971*(3.04E2/3.0)+gamma_aa[index]*gcaa* \
               t142041*t141970*t141971*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t142007*t142026*t142027*t141970*t141971* \
               1.6E1)-c0*t142122*t142147*(cx1*gamma_aa[index]*gx*t142043*t142094*(8.8E1/9.0)-cx1*t142042*t142129* \
               t141970*t142078*2.4E1+cx2*t142103*t142042*t141970*t142078*(3.04E2/9.0)+cx4*t142044*t142091*t142079* \
               t141972*(1.12E3/9.0)-cx2*t142005*t142143*t142144*t141970*t142078*(3.2E1/3.0)-cx4*t142140*t142008*t142139* \
               t142079*t141972*(6.4E1/3.0)-cx2*t142144*t141970*t142078*t141977*(gamma_aa[index]*gx*t142043*(1.76E2/ \
               9.0)+t142042*t141970*t142078*(3.04E2/9.0))-cx4*t142140*t142079*t141972*t141974*(gamma_aa[index]*gx* \
               t142043*(3.52E2/9.0)+t142042*t141970*t142078*(6.08E2/3.0)+t142044*t142079*t141972*(1.12E3/9.0)+gamma_aa[index]* \
               gx*t142041*t141970*t142078*2.88E2)+cx2*1.0/(t142102*t142102*t142102)*(t142143*t142143)*t141970*t142078* \
               t141977*2.0+cx4*1.0/(t142090*t142090*t142090)*(t142139*t142139)*t142079*t141972*t141974*2.0+cx3*gamma_aa[index]* \
               gx*t142041*t141970*t142078*t142099*7.2E1+cx1*gamma_aa[index]*gx*t142041*1.0/(t142093*t142093*t142093) \
               *t141970*t142078*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*(t142133*t142133)*t141970*t142078*1.0/(t142098* \
               t142098*t142098)*t141976*2.0-cx3*gamma_aa[index]*gx*t142134*t141970*t142078*t141976*(gamma_aa[index]* \
               gx*t142043*(8.8E1/3.0)+t142042*t141970*t142078*(3.04E2/3.0)+gamma_aa[index]*gx*t142041*t141970*t142078* \
               7.2E1)-cx3*gamma_aa[index]*gx*t142007*t142133*t142134*t141970*t142078*1.6E1)-c0*t142121*t142124*t142080* \
               (8.0/3.0)+c0*t142122*t142124*t142145*2.0+c0*t142080*t142145*t142147*(8.0/3.0)-c0*t142121*t142147*t141939* \
               (4.0/9.0)+c0*t142121*t142122*(omega*t142114*t142074*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t142115*t142085*(7.717543294808713E30/3.713820117856141E27)+omega*t142069*(omega*t142108*t142074*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t142115*t142077*(7.717543294808713E30/4.951760157141521E27)+omega*t142069* \
               (1.0/(rho_a[index]*rho_a[index])*t142068*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t142073*t142068*(7.717543294808713E30/ \
               4.951760157141521E27)+t142071*t142072*1.0/pow(t142065,8.0/3.0)*(3.858771647404357E31/1.980704062856608E28) \
               -t142074*t142066*t142068*(7.717543294808713E30/9.903520314283042E27)+t142104*t142066*t142068*t142069* \
               (2.778046668940015E15/2.11106232532992E14))+t142106*t142109*t142075*t142068*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t142104*t142109*t142068*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t138598 = rho_a[index]+rho_b[index];
            double t138599 = 1.0/pow(t138598,1.0/3.0);
            double t138600 = c*t138599;
            double t138601 = sqrt(t138600);
            double t138602 = b1p*t138601;
            double t138603 = pow(t138600,3.0/2.0);
            double t138604 = b3p*t138603;
            double t138605 = c*c;
            double t138606 = 1.0/pow(t138598,2.0/3.0);
            double t138607 = b4p*t138605*t138606;
            double t138608 = b2p*c*t138599;
            double t138609 = t138602+t138604+t138607+t138608;
            double t138610 = 1.0/pow(t138598,4.0/3.0);
            double t138611 = 1.0/c0p;
            double t138612 = 1.0/t138609;
            double t138613 = t138611*t138612*(1.0/2.0);
            double t138614 = t138613+1.0;
            double t138615 = a1p*c*t138599;
            double t138616 = t138615+1.0;
            double t138617 = rho_a[index]-rho_b[index];
            double t138618 = t138617*t138617;
            double t138619 = 1.0/t138598;
            double t138620 = t138617*t138619;
            double t138621 = two_13*2.0;
            double t138622 = t138621-2.0;
            double t138623 = 1.0/t138622;
            double t138624 = 1.0/c0f;
            double t138625 = b1f*t138601;
            double t138626 = b3f*t138603;
            double t138627 = b4f*t138605*t138606;
            double t138628 = b2f*c*t138599;
            double t138629 = t138625+t138626+t138627+t138628;
            double t138630 = 1.0/t138629;
            double t138631 = t138630*t138624*(1.0/2.0);
            double t138632 = t138631+1.0;
            double t138633 = log(t138632);
            double t138634 = a1f*c*t138599;
            double t138635 = t138634+1.0;
            double t138636 = log(t138614);
            double t138646 = c0f*t138633*t138635*2.0;
            double t138647 = c0p*t138616*t138636*2.0;
            double t138637 = t138646-t138647;
            double t138638 = t138620+1.0;
            double t138639 = pow(t138638,4.0/3.0);
            double t138640 = -t138620+1.0;
            double t138641 = pow(t138640,4.0/3.0);
            double t138642 = t138641+t138639-2.0;
            double t138643 = 1.0/(t138598*t138598);
            double t138674 = t138643*t138617;
            double t138644 = t138619-t138674;
            double t138645 = 1.0/(t138598*t138598*t138598*t138598);
            double t138648 = t138618*t138618;
            double t138649 = 1.0/pow(t138598,5.0/3.0);
            double t138650 = 1.0/sqrt(t138600);
            double t138651 = 1.0/t138614;
            double t138652 = 1.0/(t138609*t138609);
            double t138653 = b4p*t138605*t138649*(2.0/3.0);
            double t138654 = b2p*c*t138610*(1.0/3.0);
            double t138655 = b1p*c*t138610*t138650*(1.0/6.0);
            double t138656 = b3p*c*t138601*t138610*(1.0/2.0);
            double t138657 = t138653+t138654+t138655+t138656;
            double t138658 = t138651*t138616*t138652*t138657;
            double t138659 = 1.0/(t138598*t138598*t138598*t138598*t138598);
            double t138660 = 1.0/d2fz0;
            double t138661 = 1.0/Aa;
            double t138662 = b1a*t138601;
            double t138663 = b3a*t138603;
            double t138664 = b4a*t138605*t138606;
            double t138665 = b2a*c*t138599;
            double t138666 = t138662+t138663+t138664+t138665;
            double t138667 = 1.0/t138666;
            double t138668 = t138661*t138667*(1.0/2.0);
            double t138669 = t138668+1.0;
            double t138670 = log(t138669);
            double t138671 = a1a*c*t138599;
            double t138672 = t138671+1.0;
            double t138673 = pow(t138638,1.0/3.0);
            double t138675 = t138644*t138673*(4.0/3.0);
            double t138676 = pow(t138640,1.0/3.0);
            double t138820 = t138644*t138676*(4.0/3.0);
            double t138677 = -t138820+t138675;
            double t138678 = t138645*t138648;
            double t138679 = t138678-1.0;
            double t138680 = 1.0/pow(rho_a[index],1.0/3.0);
            double t138681 = c*t138680;
            double t138682 = sqrt(t138681);
            double t138683 = b1f*t138682;
            double t138684 = pow(t138681,3.0/2.0);
            double t138685 = b3f*t138684;
            double t138686 = 1.0/pow(rho_a[index],2.0/3.0);
            double t138687 = b4f*t138605*t138686;
            double t138688 = b2f*c*t138680;
            double t138689 = t138683+t138685+t138687+t138688;
            double t138690 = 1.0/pow(rho_a[index],4.0/3.0);
            double t138691 = b1p*t138682;
            double t138692 = b3p*t138684;
            double t138693 = b4p*t138605*t138686;
            double t138694 = b2p*c*t138680;
            double t138695 = t138691+t138692+t138693+t138694;
            double t138696 = 1.0/pow(rho_a[index],5.0/3.0);
            double t138697 = 1.0/sqrt(t138681);
            double t138698 = 1.0/t138689;
            double t138699 = t138624*t138698*(1.0/2.0);
            double t138700 = t138699+1.0;
            double t138701 = 1.0/t138695;
            double t138702 = t138611*t138701*(1.0/2.0);
            double t138703 = t138702+1.0;
            double t138704 = a1p*c*t138680;
            double t138705 = t138704+1.0;
            double t138706 = 1.0/t138703;
            double t138707 = 1.0/(t138695*t138695);
            double t138708 = b4p*t138605*t138696*(2.0/3.0);
            double t138709 = b2p*c*t138690*(1.0/3.0);
            double t138710 = b1p*c*t138690*t138697*(1.0/6.0);
            double t138711 = b3p*c*t138690*t138682*(1.0/2.0);
            double t138712 = t138710+t138711+t138708+t138709;
            double t138713 = t138712*t138705*t138706*t138707;
            double t138714 = log(t138703);
            double t138715 = pow(2.0,1.0/3.0);
            double t138716 = t138715*2.0;
            double t138717 = t138716-2.0;
            double t138718 = log(t138700);
            double t138719 = a1f*c*t138680;
            double t138720 = t138719+1.0;
            double t138721 = gcab*gcab;
            double t138725 = 1.0/pow(rho_a[index],8.0/3.0);
            double t138726 = gamma_aa[index]*t138725*(1.0/2.0);
            double t138727 = 1.0/pow(rho_b[index],8.0/3.0);
            double t138728 = gamma_bb[index]*t138727*(1.0/2.0);
            double t138722 = t138726+t138728;
            double t138723 = t138722*t138722;
            double t138724 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t138729 = t138721*t138721;
            double t138730 = t138723*t138723;
            double t138731 = t138721*t138723*6.0;
            double t138732 = gcab*t138721*t138722*t138723*4.0;
            double t138733 = t138730*t138729;
            double t138734 = gcab*t138722*4.0;
            double t138735 = t138731+t138732+t138733+t138734+1.0;
            double t138736 = gcab*t138722;
            double t138737 = t138736+1.0;
            double t138738 = t138721*t138723;
            double t138739 = gcab*t138722*2.0;
            double t138740 = t138738+t138739+1.0;
            double t138741 = t138721*t138723*3.0;
            double t138742 = gcab*t138721*t138722*t138723;
            double t138743 = gcab*t138722*3.0;
            double t138744 = t138741+t138742+t138743+1.0;
            double t138745 = t138623*t138642*t138617*t138618*t138645*t138637*4.0;
            double t138746 = t138619+t138674;
            double t138747 = 1.0/t138632;
            double t138748 = 1.0/(t138629*t138629);
            double t138749 = b4f*t138605*t138649*(2.0/3.0);
            double t138750 = b2f*c*t138610*(1.0/3.0);
            double t138751 = b1f*c*t138610*t138650*(1.0/6.0);
            double t138752 = b3f*c*t138601*t138610*(1.0/2.0);
            double t138753 = t138750+t138751+t138752+t138749;
            double t138754 = a1f*c*c0f*t138610*t138633*(2.0/3.0);
            double t138755 = t138648*t138659*4.0;
            double t138756 = t138673*t138746*(4.0/3.0);
            double t138819 = t138746*t138676*(4.0/3.0);
            double t138757 = t138756-t138819;
            double t138758 = 1.0/t138669;
            double t138759 = 1.0/(t138666*t138666);
            double t138760 = b4a*t138605*t138649*(2.0/3.0);
            double t138761 = b2a*c*t138610*(1.0/3.0);
            double t138762 = b1a*c*t138610*t138650*(1.0/6.0);
            double t138763 = b3a*c*t138601*t138610*(1.0/2.0);
            double t138764 = t138760+t138761+t138762+t138763;
            double t138765 = t138623*t138642*t138660*t138672*t138764*t138758*t138759*t138679;
            double t138766 = 1.0/pow(rho_b[index],1.0/3.0);
            double t138767 = c*t138766;
            double t138768 = sqrt(t138767);
            double t138769 = b1f*t138768;
            double t138770 = pow(t138767,3.0/2.0);
            double t138771 = b3f*t138770;
            double t138772 = 1.0/pow(rho_b[index],2.0/3.0);
            double t138773 = b4f*t138605*t138772;
            double t138774 = b2f*c*t138766;
            double t138775 = t138771+t138773+t138774+t138769;
            double t138776 = 1.0/pow(rho_b[index],4.0/3.0);
            double t138777 = b1p*t138768;
            double t138778 = b3p*t138770;
            double t138779 = b4p*t138605*t138772;
            double t138780 = b2p*c*t138766;
            double t138781 = t138780+t138777+t138778+t138779;
            double t138782 = 1.0/pow(rho_b[index],5.0/3.0);
            double t138783 = 1.0/sqrt(t138767);
            double t138784 = 1.0/t138775;
            double t138785 = t138624*t138784*(1.0/2.0);
            double t138786 = t138785+1.0;
            double t138787 = 1.0/t138781;
            double t138788 = t138611*t138787*(1.0/2.0);
            double t138789 = t138788+1.0;
            double t138790 = a1p*c*t138766;
            double t138791 = t138790+1.0;
            double t138792 = 1.0/t138789;
            double t138793 = 1.0/(t138781*t138781);
            double t138794 = b4p*t138605*t138782*(2.0/3.0);
            double t138795 = b2p*c*t138776*(1.0/3.0);
            double t138796 = b1p*c*t138783*t138776*(1.0/6.0);
            double t138797 = b3p*c*t138776*t138768*(1.0/2.0);
            double t138798 = t138794+t138795+t138796+t138797;
            double t138799 = t138791*t138792*t138793*t138798;
            double t138800 = log(t138789);
            double t138801 = log(t138786);
            double t138802 = a1f*c*t138766;
            double t138803 = t138802+1.0;
            double t138804 = t138623*t138642*t138645*t138637*t138648;
            double t138805 = Aa*t138623*t138642*t138660*t138670*t138672*t138679*2.0;
            double t138806 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t138807 = 1.0/(t138744*t138744);
            double t138808 = 1.0/t138737;
            double t138809 = 1.0/(t138735*t138735);
            double t138810 = 1.0/(t138740*t138740);
            double t138811 = 1.0/t138735;
            double t138812 = 1.0/(t138737*t138737);
            double t138813 = 1.0/t138740;
            double t138814 = 1.0/t138744;
            double t138816 = a1p*c*c0p*t138610*t138636*(2.0/3.0);
            double t138821 = t138635*t138753*t138747*t138748;
            double t138815 = -t138821-t138816+t138754+t138658;
            double t138817 = 1.0/pow(t138598,7.0/3.0);
            double t138818 = 1.0/pow(t138598,8.0/3.0);
            double t138822 = t138657*t138657;
            double t138823 = 1.0/pow(t138600,3.0/2.0);
            double t138824 = b4p*t138605*t138818*(1.0E1/9.0);
            double t138825 = b2p*c*t138817*(4.0/9.0);
            double t138826 = b1p*c*t138650*t138817*(2.0/9.0);
            double t138827 = b3p*c*t138601*t138817*(2.0/3.0);
            double t138828 = b3p*t138605*t138650*t138818*(1.0/1.2E1);
            double t138829 = t138824+t138825+t138826+t138827+t138828-b1p*t138605*t138823*t138818*(1.0/3.6E1);
            double t138830 = t138651*t138616*t138652*t138829;
            double t138831 = 1.0/(t138609*t138609*t138609);
            double t138832 = t138753*t138753;
            double t138833 = 1.0/(t138614*t138614);
            double t138834 = 1.0/(t138609*t138609*t138609*t138609);
            double t138835 = t138611*t138822*t138616*t138833*t138834*(1.0/2.0);
            double t138836 = t138821+t138816-t138754-t138658;
            double t138837 = 1.0/(t138598*t138598*t138598);
            double t138838 = a1p*c*t138610*t138651*t138652*t138657*(2.0/3.0);
            double t138839 = 1.0/(t138598*t138598*t138598*t138598*t138598*t138598);
            double t138840 = t138617*t138618*t138645*4.0;
            double t138841 = t138840+t138755;
            double t138842 = t138617*t138837*t138676*(8.0/3.0);
            double t138843 = 1.0/pow(t138638,2.0/3.0);
            double t138844 = t138644*t138843*t138746*(4.0/9.0);
            double t138845 = 1.0/pow(t138640,2.0/3.0);
            double t138846 = t138644*t138746*t138845*(4.0/9.0);
            double t138847 = t138842+t138844+t138846-t138617*t138673*t138837*(8.0/3.0);
            double t138848 = t138840-t138755;
            double t138849 = t138764*t138764;
            double t138850 = t138623*t138645*t138637*t138648*t138757;
            double t138851 = t138623*t138645*t138637*t138648*t138677;
            double t138852 = Aa*t138623*t138642*t138660*t138670*t138841*t138672*2.0;
            double t138853 = Aa*t138623*t138660*t138670*t138672*t138757*t138679*2.0;
            double t138854 = Aa*t138623*t138660*t138670*t138672*t138677*t138679*2.0;
            double t138855 = c0f*t138720*t138718*2.0;
            double t138857 = c0p*t138705*t138714*2.0;
            double t138856 = t138855-t138857;
            double t138858 = c0f*t138801*t138803*2.0;
            double t138860 = c0p*t138800*t138791*2.0;
            double t138859 = -t138860+t138858;
            double t138861 = gamma_aa[index]*gcab*t138806*(8.0/3.0);
            double t138862 = gamma_aa[index]*t138721*t138722*t138806*(8.0/3.0);
            double t138863 = t138861+t138862;
            double t138864 = gamma_bb[index]*gcab*t138724*(8.0/3.0);
            double t138865 = gamma_bb[index]*t138721*t138722*t138724*(8.0/3.0);
            double t138866 = t138864+t138865;
            double t138867 = gamma_aa[index]*gcab*t138806*(1.6E1/3.0);
            double t138868 = gamma_aa[index]*gcab*t138721*t138723*t138806*1.6E1;
            double t138869 = gamma_aa[index]*t138722*t138723*t138806*t138729*(1.6E1/3.0);
            double t138870 = gamma_aa[index]*t138721*t138722*t138806*1.6E1;
            double t138871 = t138870+t138867+t138868+t138869;
            double t138872 = gamma_bb[index]*gcab*t138724*(1.6E1/3.0);
            double t138873 = gamma_bb[index]*gcab*t138721*t138723*t138724*1.6E1;
            double t138874 = gamma_bb[index]*t138722*t138723*t138724*t138729*(1.6E1/3.0);
            double t138875 = gamma_bb[index]*t138721*t138722*t138724*1.6E1;
            double t138876 = t138872+t138873+t138874+t138875;
            double t138877 = gamma_aa[index]*gcab*t138806*4.0;
            double t138878 = gamma_aa[index]*gcab*t138721*t138723*t138806*4.0;
            double t138879 = gamma_aa[index]*t138721*t138722*t138806*8.0;
            double t138880 = t138877+t138878+t138879;
            double t138881 = gamma_bb[index]*gcab*t138724*4.0;
            double t138882 = gamma_bb[index]*gcab*t138721*t138723*t138724*4.0;
            double t138883 = gamma_bb[index]*t138721*t138722*t138724*8.0;
            double t138884 = t138881+t138882+t138883;
            v_rho_a_rho_b_[index] = (t138804+t138805+t138647+rho_a[index]*(-t138713+t138623*t138717*(t138713- \
               (t138720*1.0/(t138689*t138689)*(b2f*c*t138690*(1.0/3.0)+b4f*t138605*t138696*(2.0/3.0)+b1f*c*t138690* \
               t138697*(1.0/6.0)+b3f*c*t138690*t138682*(1.0/2.0)))/t138700+a1f*c*c0f*t138690*t138718*(2.0/3.0)-a1p* \
               c*c0p*t138714*t138690*(2.0/3.0))+a1p*c*c0p*t138714*t138690*(2.0/3.0))+t138598*(t138851+t138745+t138854+ \
               t138765+t138658-a1p*c*c0p*t138610*t138636*(2.0/3.0)-t138623*t138642*t138815*t138645*t138648-t138623* \
               t138642*t138637*t138648*t138659*4.0-Aa*t138623*t138642*t138660*t138670*t138672*(t138755-t138617*t138618* \
               t138645*4.0)*2.0-Aa*a1a*c*t138610*t138623*t138642*t138660*t138670*t138679*(2.0/3.0))-c0p*t138705*t138714* \
               2.0-t138623*t138717*t138856)*(ccab1*gamma_bb[index]*gcab*t138724*t138808*(4.0/3.0)-ccab2*t138810*t138721* \
               t138723*t138866-ccab4*t138730*t138809*t138729*t138876-ccab1*gamma_bb[index]*t138721*t138722*t138812* \
               t138724*(4.0/3.0)+ccab2*gamma_bb[index]*t138721*t138722*t138813*t138724*(8.0/3.0)+ccab3*gamma_bb[index]* \
               gcab*t138721*t138723*t138724*t138814*4.0+ccab4*gamma_bb[index]*t138811*t138722*t138723*t138724*t138729* \
               (1.6E1/3.0)-ccab3*gcab*t138721*t138722*t138723*t138807*t138884)+(ccab0+ccab1*gcab*t138722*t138808+ \
               ccab2*t138721*t138723*t138813+ccab4*t138730*t138811*t138729+ccab3*gcab*t138721*t138722*t138723*t138814) \
               *(t138850-t138851+t138852+t138853-t138854+t138598*(t138830+t138835+t138838-t138651*t138822*t138831* \
               t138616*2.0-a1p*c*c0p*t138636*t138817*(8.0/9.0)-t138623*t138642*t138645*t138648*(t138830+t138835+t138838- \
               t138651*t138822*t138831*t138616*2.0+t138832*t138635*1.0/(t138629*t138629*t138629)*t138747*2.0-t138635* \
               t138747*t138748*(b2f*c*t138817*(4.0/9.0)+b4f*t138605*t138818*(1.0E1/9.0)+b1f*c*t138650*t138817*(2.0/ \
               9.0)+b3f*c*t138601*t138817*(2.0/3.0)-b1f*t138605*t138823*t138818*(1.0/3.6E1)+b3f*t138605*t138650*t138818* \
               (1.0/1.2E1))-1.0/(t138632*t138632)*t138624*t138832*t138635*1.0/(t138629*t138629*t138629*t138629)*(1.0/ \
               2.0)+a1f*c*c0f*t138633*t138817*(8.0/9.0)-a1p*c*c0p*t138636*t138817*(8.0/9.0)-a1f*c*t138610*t138753* \
               t138747*t138748*(2.0/3.0))+t138623*t138642*t138618*t138645*t138637*1.2E1-t138623*t138642*t138637*t138648* \
               t138839*2.0E1+t138623*t138642*t138836*t138648*t138659*8.0+t138623*t138645*t138637*t138648*t138847+ \
               t138623*t138645*t138836*t138648*t138757-t138623*t138645*t138836*t138648*t138677-t138623*t138637*t138648* \
               t138757*t138659*4.0+t138623*t138637*t138648*t138659*t138677*4.0+t138623*t138617*t138618*t138645*t138637* \
               t138757*4.0+t138623*t138617*t138618*t138645*t138637*t138677*4.0+Aa*t138623*t138660*t138670*t138841* \
               t138672*t138677*2.0+Aa*t138623*t138660*t138670*t138672*t138757*t138848*2.0+Aa*t138623*t138660*t138670* \
               t138672*t138847*t138679*2.0+Aa*t138623*t138642*t138660*t138670*t138672*(t138618*t138645*1.2E1-t138648* \
               t138839*2.0E1)*2.0+t138623*t138642*t138660*t138841*t138672*t138764*t138758*t138759-t138623*t138642* \
               t138660*t138672*t138764*t138758*t138848*t138759+t138623*t138660*t138672*t138764*t138757*t138758*t138759* \
               t138679-t138623*t138660*t138672*t138764*t138677*t138758*t138759*t138679-t138623*t138642*t138660*t138672* \
               1.0/(t138666*t138666*t138666)*t138758*t138849*t138679*2.0+t138623*t138642*t138660*t138672*t138758* \
               t138759*t138679*(b2a*c*t138817*(4.0/9.0)+b4a*t138605*t138818*(1.0E1/9.0)+b1a*c*t138650*t138817*(2.0/ \
               9.0)+b3a*c*t138601*t138817*(2.0/3.0)-b1a*t138605*t138823*t138818*(1.0/3.6E1)+b3a*t138605*t138650*t138818* \
               (1.0/1.2E1))-Aa*a1a*c*t138610*t138623*t138642*t138660*t138670*t138841*(2.0/3.0)+Aa*a1a*c*t138610*t138623* \
               t138642*t138660*t138670*t138848*(2.0/3.0)-Aa*a1a*c*t138610*t138623*t138660*t138670*t138757*t138679* \
               (2.0/3.0)+Aa*a1a*c*t138610*t138623*t138660*t138670*t138677*t138679*(2.0/3.0)-Aa*a1a*c*t138623*t138642* \
               t138660*t138670*t138817*t138679*(8.0/9.0)+t138623*t138642*t138660*t138661*t138672*1.0/(t138666*t138666* \
               t138666*t138666)*1.0/(t138669*t138669)*t138849*t138679*(1.0/2.0)+a1a*c*t138610*t138623*t138642*t138660* \
               t138764*t138758*t138759*t138679*(2.0/3.0))-t138651*t138616*t138652*t138657*2.0+a1p*c*c0p*t138610*t138636* \
               (4.0/3.0)-t138623*t138642*t138645*t138836*t138648*2.0+t138623*t138642*t138637*t138648*t138659*8.0- \
               Aa*t138623*t138642*t138660*t138670*t138672*t138848*2.0-t138623*t138642*t138660*t138672*t138764*t138758* \
               t138759*t138679*2.0+Aa*a1a*c*t138610*t138623*t138642*t138660*t138670*t138679*(4.0/3.0))-(rho_b[index]* \
               (t138860+t138623*t138717*t138859)+rho_a[index]*(t138857+t138623*t138717*t138856)-t138598*(t138804+ \
               t138805+t138647))*(ccab4*t138730*t138809*t138729*(gamma_aa[index]*gamma_bb[index]*t138721*t138724* \
               t138806*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*t138723*t138724*t138806*t138729*(6.4E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t138721*t138722*t138724*t138806*(1.28E2/3.0))-ccab2*t138721*1.0/(t138740*t138740* \
               t138740)*t138723*t138863*t138866*2.0-ccab4*t138730*1.0/(t138735*t138735*t138735)*t138871*t138729*t138876* \
               2.0+ccab3*gcab*t138721*t138722*t138723*t138807*(gamma_aa[index]*gamma_bb[index]*t138721*t138724*t138806* \
               (3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t138721*t138722*t138724*t138806*(3.2E1/3.0))+ccab1* \
               gamma_aa[index]*gamma_bb[index]*t138721*t138812*t138724*t138806*(3.2E1/9.0)-ccab2*gamma_aa[index]* \
               gamma_bb[index]*t138721*t138813*t138724*t138806*(3.2E1/9.0)+ccab2*gamma_bb[index]*t138810*t138721* \
               t138722*t138724*t138863*(8.0/3.0)+ccab2*gamma_aa[index]*t138810*t138721*t138722*t138806*t138866*(8.0/ \
               3.0)-ccab3*gcab*t138721*t138722*t138723*1.0/(t138744*t138744*t138744)*t138880*t138884*2.0+ccab2*gamma_aa[index]* \
               gamma_bb[index]*t138810*t138723*t138724*t138806*t138729*(3.2E1/9.0)-ccab4*gamma_aa[index]*gamma_bb[index]* \
               t138811*t138723*t138724*t138806*t138729*(6.4E1/3.0)+ccab3*gamma_bb[index]*gcab*t138721*t138723*t138724* \
               t138807*t138880*4.0+ccab3*gamma_aa[index]*gcab*t138721*t138723*t138806*t138807*t138884*4.0+ccab4*gamma_bb[index]* \
               t138722*t138723*t138724*t138871*t138809*t138729*(1.6E1/3.0)+ccab4*gamma_aa[index]*t138722*t138723* \
               t138806*t138809*t138729*t138876*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t138721*t138722* \
               t138724*t138814*t138806*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t138721*t138722*t138724* \
               t138806*1.0/(t138737*t138737*t138737)*(3.2E1/9.0))+(t138804+t138805+t138647-t138598*(t138850+t138816+ \
               t138852+t138745+t138853-t138765-t138658+t138623*t138642*t138815*t138645*t138648+t138623*t138642*t138637* \
               t138648*t138659*4.0+Aa*a1a*c*t138610*t138623*t138642*t138660*t138670*t138679*(2.0/3.0))+rho_b[index]* \
               (-t138799+t138623*t138717*(t138799-(t138803*1.0/(t138775*t138775)*(b2f*c*t138776*(1.0/3.0)+b4f*t138605* \
               t138782*(2.0/3.0)+b1f*c*t138783*t138776*(1.0/6.0)+b3f*c*t138776*t138768*(1.0/2.0)))/t138786+a1f*c* \
               c0f*t138801*t138776*(2.0/3.0)-a1p*c*c0p*t138800*t138776*(2.0/3.0))+a1p*c*c0p*t138800*t138776*(2.0/ \
               3.0))-c0p*t138800*t138791*2.0-t138623*t138717*t138859)*(ccab1*gamma_aa[index]*gcab*t138806*t138808* \
               (4.0/3.0)-ccab2*t138810*t138721*t138723*t138863-ccab4*t138730*t138871*t138809*t138729-ccab1*gamma_aa[index]* \
               t138721*t138722*t138812*t138806*(4.0/3.0)+ccab2*gamma_aa[index]*t138721*t138722*t138813*t138806*(8.0/ \
               3.0)+ccab3*gamma_aa[index]*gcab*t138721*t138723*t138814*t138806*4.0+ccab4*gamma_aa[index]*t138811* \
               t138722*t138723*t138806*t138729*(1.6E1/3.0)-ccab3*gcab*t138721*t138722*t138723*t138807*t138880);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t138886 = rho_a[index]+rho_b[index];
            double t138887 = 1.0/pow(t138886,1.0/3.0);
            double t138888 = c*t138887;
            double t138889 = sqrt(t138888);
            double t138890 = b1p*t138889;
            double t138891 = pow(t138888,3.0/2.0);
            double t138892 = b3p*t138891;
            double t138893 = c*c;
            double t138894 = 1.0/pow(t138886,2.0/3.0);
            double t138895 = b4p*t138893*t138894;
            double t138896 = b2p*c*t138887;
            double t138897 = t138890+t138892+t138895+t138896;
            double t138898 = 1.0/pow(t138886,4.0/3.0);
            double t138899 = 1.0/c0p;
            double t138900 = 1.0/t138897;
            double t138901 = t138900*t138899*(1.0/2.0);
            double t138902 = t138901+1.0;
            double t138903 = a1p*c*t138887;
            double t138904 = t138903+1.0;
            double t138905 = rho_a[index]-rho_b[index];
            double t138906 = t138905*t138905;
            double t138907 = 1.0/t138886;
            double t138908 = t138905*t138907;
            double t138909 = two_13*2.0;
            double t138910 = t138909-2.0;
            double t138911 = 1.0/t138910;
            double t138912 = 1.0/c0f;
            double t138913 = b1f*t138889;
            double t138914 = b3f*t138891;
            double t138915 = b4f*t138893*t138894;
            double t138916 = b2f*c*t138887;
            double t138917 = t138913+t138914+t138915+t138916;
            double t138918 = 1.0/t138917;
            double t138919 = t138912*t138918*(1.0/2.0);
            double t138920 = t138919+1.0;
            double t138921 = log(t138920);
            double t138922 = a1f*c*t138887;
            double t138923 = t138922+1.0;
            double t138924 = log(t138902);
            double t138935 = c0f*t138921*t138923*2.0;
            double t138936 = c0p*t138904*t138924*2.0;
            double t138925 = t138935-t138936;
            double t138926 = t138908+1.0;
            double t138927 = pow(t138926,4.0/3.0);
            double t138928 = -t138908+1.0;
            double t138929 = pow(t138928,4.0/3.0);
            double t138930 = t138927+t138929-2.0;
            double t138931 = 1.0/(t138886*t138886);
            double t138932 = t138931*t138905;
            double t138933 = t138932+t138907;
            double t138934 = 1.0/(t138886*t138886*t138886*t138886);
            double t138937 = t138906*t138906;
            double t138938 = 1.0/pow(t138886,5.0/3.0);
            double t138939 = 1.0/sqrt(t138888);
            double t138940 = 1.0/t138902;
            double t138941 = 1.0/(t138897*t138897);
            double t138942 = b4p*t138893*t138938*(2.0/3.0);
            double t138943 = b2p*c*t138898*(1.0/3.0);
            double t138944 = b1p*c*t138939*t138898*(1.0/6.0);
            double t138945 = b3p*c*t138889*t138898*(1.0/2.0);
            double t138946 = t138942+t138943+t138944+t138945;
            double t138947 = 1.0/(t138886*t138886*t138886*t138886*t138886);
            double t138948 = 1.0/d2fz0;
            double t138949 = 1.0/Aa;
            double t138950 = b1a*t138889;
            double t138951 = b3a*t138891;
            double t138952 = b4a*t138893*t138894;
            double t138953 = b2a*c*t138887;
            double t138954 = t138950+t138951+t138952+t138953;
            double t138955 = 1.0/t138954;
            double t138956 = t138955*t138949*(1.0/2.0);
            double t138957 = t138956+1.0;
            double t138958 = log(t138957);
            double t138959 = a1a*c*t138887;
            double t138960 = t138959+1.0;
            double t138961 = pow(t138926,1.0/3.0);
            double t138962 = t138933*t138961*(4.0/3.0);
            double t138963 = pow(t138928,1.0/3.0);
            double t139039 = t138933*t138963*(4.0/3.0);
            double t138964 = -t139039+t138962;
            double t138965 = t138934*t138937;
            double t138966 = t138965-1.0;
            double t138967 = 1.0/pow(rho_b[index],1.0/3.0);
            double t138968 = c*t138967;
            double t138969 = sqrt(t138968);
            double t138970 = b1f*t138969;
            double t138971 = pow(t138968,3.0/2.0);
            double t138972 = b3f*t138971;
            double t138973 = 1.0/pow(rho_b[index],2.0/3.0);
            double t138974 = b4f*t138973*t138893;
            double t138975 = b2f*c*t138967;
            double t138976 = t138970+t138972+t138974+t138975;
            double t138977 = 1.0/pow(rho_b[index],4.0/3.0);
            double t138978 = b1p*t138969;
            double t138979 = b3p*t138971;
            double t138980 = b4p*t138973*t138893;
            double t138981 = b2p*c*t138967;
            double t138982 = t138980+t138981+t138978+t138979;
            double t138983 = 1.0/pow(rho_b[index],5.0/3.0);
            double t138984 = 1.0/sqrt(t138968);
            double t138985 = 1.0/t138976;
            double t138986 = t138912*t138985*(1.0/2.0);
            double t138987 = t138986+1.0;
            double t138988 = 1.0/t138982;
            double t138989 = t138988*t138899*(1.0/2.0);
            double t138990 = t138989+1.0;
            double t138991 = a1p*c*t138967;
            double t138992 = t138991+1.0;
            double t138993 = 1.0/t138990;
            double t138994 = 1.0/(t138982*t138982);
            double t138995 = b4p*t138893*t138983*(2.0/3.0);
            double t138996 = b2p*c*t138977*(1.0/3.0);
            double t138997 = b1p*c*t138984*t138977*(1.0/6.0);
            double t138998 = b3p*c*t138977*t138969*(1.0/2.0);
            double t138999 = t138995+t138996+t138997+t138998;
            double t139000 = t138992*t138993*t138994*t138999;
            double t139001 = log(t138990);
            double t139002 = pow(2.0,1.0/3.0);
            double t139003 = t139002*2.0;
            double t139004 = t139003-2.0;
            double t139005 = log(t138987);
            double t139006 = a1f*c*t138967;
            double t139007 = t139006+1.0;
            double t139008 = gcab*gcab;
            double t139012 = 1.0/pow(rho_a[index],8.0/3.0);
            double t139013 = gamma_aa[index]*t139012*(1.0/2.0);
            double t139014 = 1.0/pow(rho_b[index],8.0/3.0);
            double t139015 = gamma_bb[index]*t139014*(1.0/2.0);
            double t139009 = t139013+t139015;
            double t139010 = t139009*t139009;
            double t139011 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t139016 = t139008*t139008;
            double t139017 = t139010*t139010;
            double t139018 = t139010*t139008*6.0;
            double t139019 = gcab*t139010*t139008*t139009*4.0;
            double t139020 = t139016*t139017;
            double t139021 = gcab*t139009*4.0;
            double t139022 = t139020+t139021+t139018+t139019+1.0;
            double t139023 = gcab*t139009;
            double t139024 = t139023+1.0;
            double t139025 = t139010*t139008;
            double t139026 = gcab*t139009*2.0;
            double t139027 = t139025+t139026+1.0;
            double t139028 = t139010*t139008*3.0;
            double t139029 = gcab*t139010*t139008*t139009;
            double t139030 = gcab*t139009*3.0;
            double t139031 = t139030+t139028+t139029+1.0;
            double t139032 = a1p*c*c0p*t138924*t138898*(2.0/3.0);
            double t139033 = 1.0/t139027;
            double t139034 = 1.0/t139031;
            double t139035 = 1.0/t139024;
            double t139036 = 1.0/t139022;
            double t139037 = 1.0/pow(t138886,7.0/3.0);
            double t139038 = 1.0/pow(t138886,8.0/3.0);
            double t139040 = 1.0/t138920;
            double t139041 = 1.0/(t138917*t138917);
            double t139042 = b4f*t138893*t138938*(2.0/3.0);
            double t139043 = b2f*c*t138898*(1.0/3.0);
            double t139044 = b1f*c*t138939*t138898*(1.0/6.0);
            double t139045 = b3f*c*t138889*t138898*(1.0/2.0);
            double t139046 = t139042+t139043+t139044+t139045;
            double t139047 = t139040*t139041*t139046*t138923;
            double t139049 = t138904*t138940*t138941*t138946;
            double t139050 = a1f*c*c0f*t138921*t138898*(2.0/3.0);
            double t139048 = t139032-t139050+t139047-t139049;
            double t139051 = t138946*t138946;
            double t139052 = 1.0/pow(t138888,3.0/2.0);
            double t139053 = b4p*t139038*t138893*(1.0E1/9.0);
            double t139054 = b2p*c*t139037*(4.0/9.0);
            double t139055 = b1p*c*t139037*t138939*(2.0/9.0);
            double t139056 = b3p*c*t139037*t138889*(2.0/3.0);
            double t139057 = b3p*t139038*t138893*t138939*(1.0/1.2E1);
            double t139058 = t139053+t139054+t139055+t139056+t139057-b1p*t139052*t139038*t138893*(1.0/3.6E1);
            double t139059 = 1.0/(t138897*t138897*t138897);
            double t139060 = t139051*t138904*t138940*t139059*2.0;
            double t139061 = t139046*t139046;
            double t139062 = 1.0/(t138902*t138902);
            double t139063 = 1.0/(t138897*t138897*t138897*t138897);
            double t139064 = t138931*2.0;
            double t139065 = 1.0/(t138886*t138886*t138886);
            double t139066 = t139065*t138905*2.0;
            double t139067 = t139064+t139066;
            double t139068 = t138933*t138933;
            double t139069 = a1p*c*c0p*t139037*t138924*(8.0/9.0);
            double t139070 = 1.0/(t138886*t138886*t138886*t138886*t138886*t138886);
            double t139071 = t138905*t138906*t138934*4.0;
            double t139072 = t138937*t138947*4.0;
            double t139073 = t139071+t139072;
            double t139074 = t139067*t138961*(4.0/3.0);
            double t139075 = 1.0/pow(t138926,2.0/3.0);
            double t139076 = t139075*t139068*(4.0/9.0);
            double t139077 = 1.0/pow(t138928,2.0/3.0);
            double t139078 = t139068*t139077*(4.0/9.0);
            double t139079 = t139074+t139076+t139078-t139067*t138963*(4.0/3.0);
            double t139080 = 1.0/t138957;
            double t139081 = 1.0/(t138954*t138954);
            double t139082 = b4a*t138893*t138938*(2.0/3.0);
            double t139083 = b2a*c*t138898*(1.0/3.0);
            double t139084 = b1a*c*t138939*t138898*(1.0/6.0);
            double t139085 = b3a*c*t138889*t138898*(1.0/2.0);
            double t139086 = t139082+t139083+t139084+t139085;
            double t139087 = t139086*t139086;
            double t139088 = 1.0/t138987;
            double t139089 = b4f*t138893*t138983*(2.0/3.0);
            double t139090 = b2f*c*t138977*(1.0/3.0);
            double t139091 = b1f*c*t138984*t138977*(1.0/6.0);
            double t139092 = b3f*c*t138977*t138969*(1.0/2.0);
            double t139093 = t139090+t139091+t139092+t139089;
            double t139094 = 1.0/(t138976*t138976);
            double t139095 = 1.0/pow(rho_b[index],7.0/3.0);
            double t139096 = 1.0/pow(t138968,3.0/2.0);
            double t139097 = t139093*t139093;
            double t139098 = t138999*t138999;
            double t139099 = 1.0/(t138982*t138982*t138982);
            double t139100 = t139098*t139099*t138992*t138993*2.0;
            double t139101 = b4p*t139014*t138893*(1.0E1/9.0);
            double t139102 = b2p*c*t139095*(4.0/9.0);
            double t139103 = b3p*t139014*t138893*t138984*(1.0/1.2E1);
            double t139104 = b1p*c*t139095*t138984*(2.0/9.0);
            double t139105 = b3p*c*t139095*t138969*(2.0/3.0);
            double t139222 = b1p*t139014*t139096*t138893*(1.0/3.6E1);
            double t139106 = t139101+t139102+t139103+t139104+t139105-t139222;
            double t139107 = 1.0/(t138990*t138990);
            double t139108 = 1.0/(t138982*t138982*t138982*t138982);
            double t139109 = a1p*c*c0p*t139001*t139095*(8.0/9.0);
            double t139110 = a1f*c*c0f*t139005*t138977*(2.0/3.0);
            double t139111 = a1p*c*c0p*t139001*t138977*(2.0/3.0);
            double t139183 = t139007*t139093*t139094*t139088;
            double t139112 = t139000+t139110-t139111-t139183;
            double t139113 = gamma_bb[index]*gamma_bb[index];
            double t139114 = gcaa*gcaa;
            double t139115 = t139113*t139113;
            double t139116 = t139114*t139114;
            double t139117 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t139118 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t139119 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t139120 = 1.0/pow(rho_a[index],1.0/3.0);
            double t139121 = c*t139120;
            double t139122 = sqrt(t139121);
            double t139123 = pow(t139121,3.0/2.0);
            double t139124 = 1.0/pow(rho_a[index],2.0/3.0);
            double t139125 = b1p*t139122;
            double t139126 = b3p*t139123;
            double t139127 = b4p*t139124*t138893;
            double t139128 = b2p*c*t139120;
            double t139129 = t139125+t139126+t139127+t139128;
            double t139130 = 1.0/t139129;
            double t139131 = t139130*t138899*(1.0/2.0);
            double t139132 = t139131+1.0;
            double t139133 = log(t139132);
            double t139134 = a1p*c*t139120;
            double t139135 = t139134+1.0;
            double t139136 = c0p*t139133*t139135*2.0;
            double t139137 = c0f*t139005*t139007*2.0;
            double t139139 = c0p*t139001*t138992*2.0;
            double t139138 = t139137-t139139;
            double t139140 = t138911*t138930*t138925*t138934*t138937;
            double t139141 = Aa*t138911*t138930*t138960*t138948*t138966*t138958*2.0;
            double t139142 = gamma_bb[index]*gcab*t139011*(1.6E1/3.0);
            double t139143 = gamma_bb[index]*gcab*t139010*t139011*t139008*1.6E1;
            double t139144 = gamma_bb[index]*t139010*t139011*t139016*t139009*(1.6E1/3.0);
            double t139145 = gamma_bb[index]*t139011*t139008*t139009*1.6E1;
            double t139146 = t139142+t139143+t139144+t139145;
            double t139147 = 1.0/(t139024*t139024);
            double t139148 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t139149 = gamma_bb[index]*gcab*t139011*(8.0/3.0);
            double t139150 = gamma_bb[index]*t139011*t139008*t139009*(8.0/3.0);
            double t139151 = t139150+t139149;
            double t139152 = 1.0/(t139031*t139031);
            double t139153 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t139154 = 1.0/(t139022*t139022);
            double t139155 = 1.0/(t139027*t139027);
            double t139156 = gamma_bb[index]*gcab*t139011*4.0;
            double t139157 = gamma_bb[index]*gcab*t139010*t139011*t139008*4.0;
            double t139158 = gamma_bb[index]*t139011*t139008*t139009*8.0;
            double t139159 = t139156+t139157+t139158;
            double t139160 = t139004*t138911*t139138;
            double t139161 = t139160+t139139;
            double t139162 = gamma_bb[index]*gcaa*t139014*4.0;
            double t139163 = gamma_bb[index]*gcaa*t139113*t139114*t139118*4.0;
            double t139164 = t139113*t139114*t139119*6.0;
            double t139165 = t139115*t139116*t139117;
            double t139166 = t139162+t139163+t139164+t139165+1.0;
            double t139167 = 1.0/t139166;
            double t139168 = gamma_bb[index]*gcaa*t139014;
            double t139169 = t139168+1.0;
            double t139170 = 1.0/t139169;
            double t139171 = gamma_bb[index]*gcaa*t139014*3.0;
            double t139172 = gamma_bb[index]*gcaa*t139113*t139114*t139118;
            double t139173 = t139113*t139114*t139119*3.0;
            double t139174 = t139171+t139172+t139173+1.0;
            double t139175 = 1.0/t139174;
            double t139176 = gamma_bb[index]*gcaa*t139014*2.0;
            double t139177 = t139113*t139114*t139119;
            double t139178 = t139176+t139177+1.0;
            double t139179 = 1.0/t139178;
            double t139180 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t139181 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t139182 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t139184 = t139004*t139112*t138911;
            double t139185 = ccaa4*t139115*t139116*t139182*t139167*(3.2E1/3.0);
            double t139186 = ccaa1*gamma_bb[index]*gcaa*t139011*t139170*(8.0/3.0);
            double t139187 = ccaa3*gamma_bb[index]*gcaa*t139113*t139114*t139181*t139175*8.0;
            double t139188 = ccaa2*t139113*t139114*t139180*t139179*(1.6E1/3.0);
            double t139189 = 1.0/(t139169*t139169);
            double t139190 = gamma_bb[index]*gcaa*t139011*8.0;
            double t139191 = gamma_bb[index]*gcaa*t139113*t139114*t139181*8.0;
            double t139192 = t139113*t139114*t139180*1.6E1;
            double t139193 = t139190+t139191+t139192;
            double t139194 = 1.0/(t139174*t139174);
            double t139195 = gamma_bb[index]*gcaa*t139011*(3.2E1/3.0);
            double t139196 = gamma_bb[index]*gcaa*t139113*t139114*t139181*3.2E1;
            double t139197 = t139113*t139114*t139180*3.2E1;
            double t139198 = t139115*t139116*t139182*(3.2E1/3.0);
            double t139199 = t139195+t139196+t139197+t139198;
            double t139200 = 1.0/(t139166*t139166);
            double t139201 = gamma_bb[index]*gcaa*t139011*(1.6E1/3.0);
            double t139202 = t139113*t139114*t139180*(1.6E1/3.0);
            double t139203 = t139201+t139202;
            double t139204 = 1.0/(t139178*t139178);
            double t139205 = t139185+t139186+t139187+t139188-ccaa1*t139113*t139114*t139180*t139189*(8.0/3.0)- \
               ccaa2*t139113*t139203*t139114*t139204*t139119-ccaa4*t139200*t139115*t139116*t139117*t139199-ccaa3* \
               gamma_bb[index]*gcaa*t139113*t139114*t139118*t139193*t139194;
            double t139206 = -t139000+t139111+t139184;
            double t139207 = 1.0/pow(rho_b[index],1.0E1);
            double t139208 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t139209 = ccaa4*t139115*t139116*t139117*t139167;
            double t139210 = ccaa1*gamma_bb[index]*gcaa*t139014*t139170;
            double t139211 = ccaa3*gamma_bb[index]*gcaa*t139113*t139114*t139118*t139175;
            double t139212 = ccaa2*t139113*t139114*t139119*t139179;
            double t139213 = ccaa0+t139210+t139211+t139212+t139209;
            double t139214 = 1.0/(t138976*t138976*t138976);
            double t139215 = b4f*t139014*t138893*(1.0E1/9.0);
            double t139216 = b2f*c*t139095*(4.0/9.0);
            double t139217 = b3f*t139014*t138893*t138984*(1.0/1.2E1);
            double t139218 = b1f*c*t139095*t138984*(2.0/9.0);
            double t139219 = b3f*c*t139095*t138969*(2.0/3.0);
            double t139220 = t139215+t139216+t139217+t139218+t139219-b1f*t139014*t139096*t138893*(1.0/3.6E1);
            double t139221 = t139220*t139007*t139094*t139088;
            double t139223 = t139106*t138992*t138993*t138994;
            double t139224 = 1.0/(t138987*t138987);
            double t139225 = 1.0/(t138976*t138976*t138976*t138976);
            double t139226 = t139007*t139224*t139225*t138912*t139097*(1.0/2.0);
            double t139227 = t139107*t139108*t139098*t138992*t138899*(1.0/2.0);
            double t139228 = a1f*c*t139093*t139094*t139088*t138977*(2.0/3.0);
            double t139229 = a1p*c*t138993*t138994*t138977*t138999*(2.0/3.0);
            double t139230 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t139231 = 1.0/(omega*omega);
            double t139232 = pow(t139230,2.0/3.0);
            double t139235 = t139231*t139232;
            double t139233 = exp(-t139235);
            double t139234 = 1.0/pow(t139230,1.0/3.0);
            double t139236 = omega*omega;
            double t139237 = t139233-1.0;
            double t139238 = 1.0/pow(t139230,2.0/3.0);
            double t139239 = 1.0/pow(t139230,4.0/3.0);
            double t139240 = 1.0/omega;
            double t139241 = t139236*t139237*t139238*(1.0/2.0);
            double t139242 = t139241-t139233+3.0/2.0;
            double t139243 = gx*gx;
            double t139244 = t139243*t139243;
            double t139245 = pow(rho_b[index],1.0/3.0);
            double t139246 = pow(t139230,1.0/3.0);
            double t139247 = t139240*t139246;
            double t139248 = erf(t139247);
            double t139249 = t139248*(3.991211251234741E15/2.251799813685248E15);
            double t139281 = omega*t139242*t139234;
            double t139250 = -t139281+t139249;
            double t139251 = gamma_bb[index]*gx*t139014*4.0;
            double t139252 = gamma_bb[index]*gx*t139113*t139243*t139118*4.0;
            double t139253 = t139113*t139243*t139119*6.0;
            double t139254 = t139115*t139117*t139244;
            double t139255 = t139251+t139252+t139253+t139254+1.0;
            double t139256 = 1.0/t139255;
            double t139257 = gamma_bb[index]*gx*t139014;
            double t139258 = t139257+1.0;
            double t139259 = 1.0/t139258;
            double t139260 = gamma_bb[index]*gx*t139014*3.0;
            double t139261 = gamma_bb[index]*gx*t139113*t139243*t139118;
            double t139262 = t139113*t139243*t139119*3.0;
            double t139263 = t139260+t139261+t139262+1.0;
            double t139264 = 1.0/t139263;
            double t139265 = gamma_bb[index]*gx*t139014*2.0;
            double t139266 = t139113*t139243*t139119;
            double t139267 = t139265+t139266+1.0;
            double t139268 = 1.0/t139267;
            double t139269 = 1.0/rho_b[index];
            double t139270 = t139233*t139269*(1.0/3.0);
            double t139271 = 1.0/pow(t139230,5.0/3.0);
            double t139272 = t139271*t139236*t139237*(2.778046668940015E15/1.40737488355328E14);
            double t139276 = t139231*t139233*t139234*(2.778046668940015E15/7.0368744177664E13);
            double t139273 = t139270+t139272-t139276;
            double t139274 = 1.0/sqrt(3.141592653589793);
            double t139275 = omega*t139242*t139239*(2.778046668940015E15/1.40737488355328E14);
            double t139277 = omega*t139234*t139273;
            double t139278 = t139240*t139233*t139238*t139274*(1.108777112152858E31/1.584563250285287E29);
            double t139279 = t139275+t139277+t139278;
            double t139280 = 1.0/pow(t139230,7.0/3.0);
            double t139282 = cx4*t139115*t139117*t139244*t139256;
            double t139283 = cx1*gamma_bb[index]*gx*t139014*t139259;
            double t139284 = cx3*gamma_bb[index]*gx*t139113*t139243*t139118*t139264;
            double t139285 = cx2*t139113*t139243*t139119*t139268;
            double t139286 = cx0+t139282+t139283+t139284+t139285;
            double t139287 = pow(rho_b[index],4.0/3.0);
            double t139288 = omega*t139250*t139239*(2.778046668940015E15/1.05553116266496E14);
            double t139289 = cx4*t139115*t139244*t139182*t139256*(3.2E1/3.0);
            double t139290 = cx1*gamma_bb[index]*gx*t139011*t139259*(8.0/3.0);
            double t139291 = cx3*gamma_bb[index]*gx*t139113*t139243*t139181*t139264*8.0;
            double t139292 = cx2*t139113*t139180*t139243*t139268*(1.6E1/3.0);
            double t139293 = 1.0/(t139258*t139258);
            double t139294 = gamma_bb[index]*gx*t139011*8.0;
            double t139295 = gamma_bb[index]*gx*t139113*t139243*t139181*8.0;
            double t139296 = t139113*t139180*t139243*1.6E1;
            double t139297 = t139294+t139295+t139296;
            double t139298 = 1.0/(t139263*t139263);
            double t139299 = gamma_bb[index]*gx*t139011*(3.2E1/3.0);
            double t139300 = gamma_bb[index]*gx*t139113*t139243*t139181*3.2E1;
            double t139301 = t139113*t139180*t139243*3.2E1;
            double t139302 = t139115*t139244*t139182*(3.2E1/3.0);
            double t139303 = t139300+t139301+t139302+t139299;
            double t139304 = 1.0/(t139255*t139255);
            double t139305 = gamma_bb[index]*gx*t139011*(1.6E1/3.0);
            double t139306 = t139113*t139180*t139243*(1.6E1/3.0);
            double t139307 = t139305+t139306;
            double t139308 = 1.0/(t139267*t139267);
            double t139309 = t139290+t139291+t139292+t139289-cx1*t139113*t139180*t139243*t139293*(8.0/3.0)-cx2* \
               t139113*t139243*t139307*t139119*t139308-cx4*t139303*t139115*t139304*t139117*t139244-cx3*gamma_bb[index]* \
               gx*t139113*t139243*t139118*t139297*t139298;
            double t139310 = t139288-omega*t139234*t139279*(4.0/3.0);
            double t139311 = omega*t139250*t139234*(4.0/3.0);
            double t139312 = t139311-1.0;
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t139035*t139009+ccab2*t139010*t139033*t139008+ccab4*t139016* \
               t139017*t139036+ccab3*gcab*t139010*t139034*t139008*t139009)*(-rho_b[index]*(-t139100+t139223-t139109+ \
               t139227+t139229+t139004*t138911*(t139100+t139221+t139109+t139226+t139228-t139007*t139214*t139088*t139097* \
               2.0-t139106*t138992*t138993*t138994-a1f*c*c0f*t139005*t139095*(8.0/9.0)-t139107*t139108*t139098*t138992* \
               t138899*(1.0/2.0)-a1p*c*t138993*t138994*t138977*t138999*(2.0/3.0)))-t138886*(t139060+t139069-t138904* \
               t138940*t138941*t139058-t138911*t138930*t138934*t138937*(t139060+t139069-t138904*t138940*t138941*t139058- \
               t139040*t139061*t138923*1.0/(t138917*t138917*t138917)*2.0+t139040*t139041*t138923*(b2f*c*t139037*(4.0/ \
               9.0)+b4f*t139038*t138893*(1.0E1/9.0)+b1f*c*t139037*t138939*(2.0/9.0)+b3f*c*t139037*t138889*(2.0/3.0) \
               -b1f*t139052*t139038*t138893*(1.0/3.6E1)+b3f*t139038*t138893*t138939*(1.0/1.2E1))+t139061*1.0/(t138920* \
               t138920)*t138912*t138923*1.0/(t138917*t138917*t138917*t138917)*(1.0/2.0)-a1f*c*c0f*t139037*t138921* \
               (8.0/9.0)-t139051*t139062*t139063*t138904*t138899*(1.0/2.0)+a1f*c*t139040*t139041*t139046*t138898* \
               (2.0/3.0)-a1p*c*t138940*t138941*t138946*t138898*(2.0/3.0))-t139051*t139062*t139063*t138904*t138899* \
               (1.0/2.0)+t139070*t138911*t138930*t138925*t138937*2.0E1+t138911*t138930*t138906*t138925*t138934*1.2E1- \
               t138911*t138930*t139048*t138937*t138947*8.0-t138911*t139048*t138934*t138937*t138964*2.0+t138911*t138925* \
               t138934*t139079*t138937+t138911*t138925*t138937*t138964*t138947*8.0-t138911*t138930*t139048*t138905* \
               t138906*t138934*8.0+t138911*t138930*t138905*t138906*t138925*t138947*3.2E1+t138911*t138905*t138906* \
               t138925*t138934*t138964*8.0-a1p*c*t138940*t138941*t138946*t138898*(2.0/3.0)+Aa*t138911*t139073*t138960* \
               t138964*t138948*t138958*4.0+Aa*t138911*t138960*t139079*t138948*t138966*t138958*2.0+Aa*t138911*t138930* \
               t138960*t138948*t138958*(t139070*t138937*2.0E1+t138906*t138934*1.2E1+t138905*t138906*t138947*3.2E1) \
               *2.0-t139080*t139081*t138911*t139073*t138930*t138960*t139086*t138948*2.0-t139080*t139081*t138911*t138960* \
               t139086*t138964*t138948*t138966*2.0+t139080*t138911*t138930*t138960*t139087*1.0/(t138954*t138954*t138954) \
               *t138948*t138966*2.0-t139080*t139081*t138911*t138930*t138960*t138948*t138966*(b2a*c*t139037*(4.0/9.0) \
               +b4a*t139038*t138893*(1.0E1/9.0)+b1a*c*t139037*t138939*(2.0/9.0)+b3a*c*t139037*t138889*(2.0/3.0)-b1a* \
               t139052*t139038*t138893*(1.0/3.6E1)+b3a*t139038*t138893*t138939*(1.0/1.2E1))+Aa*a1a*c*t138911*t139037* \
               t138930*t138948*t138966*t138958*(8.0/9.0)+Aa*a1a*c*t138911*t139073*t138930*t138948*t138958*t138898* \
               (4.0/3.0)+Aa*a1a*c*t138911*t138964*t138948*t138966*t138958*t138898*(4.0/3.0)-t138911*t138930*t138960* \
               t139087*1.0/(t138954*t138954*t138954*t138954)*t138948*1.0/(t138957*t138957)*t138966*t138949*(1.0/2.0) \
               -a1a*c*t139080*t139081*t138911*t138930*t139086*t138948*t138966*t138898*(2.0/3.0))-t139004*t139112* \
               t138911*2.0-t138904*t138940*t138941*t138946*2.0+t138992*t138993*t138994*t138999*2.0-a1p*c*c0p*t139001* \
               t138977*(4.0/3.0)+a1p*c*c0p*t138924*t138898*(4.0/3.0)-t138911*t138930*t139048*t138934*t138937*2.0+ \
               t138911*t138930*t138925*t138937*t138947*8.0+t138911*t138925*t138934*t138937*t138964*2.0+t138911*t138930* \
               t138905*t138906*t138925*t138934*8.0+Aa*t138911*t139073*t138930*t138960*t138948*t138958*4.0+Aa*t138911* \
               t138960*t138964*t138948*t138966*t138958*4.0-t139080*t139081*t138911*t138930*t138960*t139086*t138948* \
               t138966*2.0+Aa*a1a*c*t138911*t138930*t138948*t138966*t138958*t138898*(4.0/3.0))+(rho_b[index]*t139161+ \
               rho_a[index]*(t139136-t139004*t138911*(t139136-c0f*log((t138912*(1.0/2.0))/(b1f*t139122+b3f*t139123+ \
               b2f*c*t139120+b4f*t139124*t138893)+1.0)*(a1f*c*t139120+1.0)*2.0))-t138886*(t139140+t139141+t138936) \
               )*(-ccab2*t139010*t139008*t139155*(gamma_bb[index]*gcab*t139153*(8.8E1/9.0)+t139113*t139008*t139148* \
               (3.2E1/9.0)+gamma_bb[index]*t139008*t139009*t139153*(8.8E1/9.0))+ccab2*t139010*(t139151*t139151)*t139008* \
               1.0/(t139027*t139027*t139027)*2.0+ccab4*1.0/(t139022*t139022*t139022)*t139016*t139017*(t139146*t139146) \
               *2.0+ccab1*gamma_bb[index]*gcab*t139035*t139153*(4.4E1/9.0)+ccab2*t139113*t139033*t139008*t139148* \
               (3.2E1/9.0)-ccab1*t139113*t139008*t139147*t139148*(3.2E1/9.0)-ccab4*t139016*t139017*t139154*(gamma_bb[index]* \
               gcab*t139153*(1.76E2/9.0)+t139113*t139008*t139148*(6.4E1/3.0)+gamma_bb[index]*t139008*t139009*t139153* \
               (1.76E2/3.0)+t139010*t139113*t139016*t139148*(6.4E1/3.0)+gamma_bb[index]*gcab*t139010*t139008*t139153* \
               (1.76E2/3.0)+gamma_bb[index]*t139010*t139016*t139009*t139153*(1.76E2/9.0)+gcab*t139113*t139008*t139009* \
               t139148*(1.28E2/3.0))+ccab4*t139010*t139113*t139016*t139036*t139148*(6.4E1/3.0)+ccab2*gamma_bb[index]* \
               t139033*t139008*t139009*t139153*(8.8E1/9.0)-ccab1*gamma_bb[index]*t139008*t139009*t139153*t139147* \
               (4.4E1/9.0)+ccab3*gcab*t139010*1.0/(t139031*t139031*t139031)*t139008*t139009*(t139159*t139159)*2.0+ \
               ccab3*gamma_bb[index]*gcab*t139010*t139034*t139008*t139153*(4.4E1/3.0)-ccab2*gamma_bb[index]*t139011* \
               t139151*t139008*t139009*t139155*(1.6E1/3.0)+ccab4*gamma_bb[index]*t139010*t139016*t139009*t139036* \
               t139153*(1.76E2/9.0)+ccab3*gcab*t139113*t139034*t139008*t139009*t139148*(3.2E1/3.0)+ccab1*gcab*t139113* \
               1.0/(t139024*t139024*t139024)*t139008*t139009*t139148*(3.2E1/9.0)-ccab3*gcab*t139010*t139008*t139152* \
               t139009*(gamma_bb[index]*gcab*t139153*(4.4E1/3.0)+t139113*t139008*t139148*(3.2E1/3.0)+gamma_bb[index]* \
               t139008*t139009*t139153*(8.8E1/3.0)+gamma_bb[index]*gcab*t139010*t139008*t139153*(4.4E1/3.0)+gcab* \
               t139113*t139008*t139009*t139148*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t139010*t139011*t139008*t139152* \
               t139159*8.0-ccab4*gamma_bb[index]*t139010*t139011*t139016*t139009*t139154*t139146*(3.2E1/3.0))+(t139140+ \
               t139141+t138936+rho_b[index]*(-t139000+t139111+t139004*t138911*(t139000+t139110-t139007*t139093*t139094* \
               t139088-a1p*c*c0p*t139001*t138977*(2.0/3.0)))-t138886*(t139032-t138904*t138940*t138941*t138946-t138911* \
               t138930*t139048*t138934*t138937+t138911*t138930*t138925*t138937*t138947*4.0+t138911*t138925*t138934* \
               t138937*t138964+t138911*t138930*t138905*t138906*t138925*t138934*4.0+Aa*t138911*t139073*t138930*t138960* \
               t138948*t138958*2.0+Aa*t138911*t138960*t138964*t138948*t138966*t138958*2.0-t139080*t139081*t138911* \
               t138930*t138960*t139086*t138948*t138966+Aa*a1a*c*t138911*t138930*t138948*t138966*t138958*t138898*(2.0/ \
               3.0))-c0p*t139001*t138992*2.0-t139004*t138911*t139138)*(ccab1*gamma_bb[index]*gcab*t139011*t139035* \
               (4.0/3.0)-ccab2*t139010*t139151*t139008*t139155-ccab4*t139016*t139017*t139154*t139146+ccab2*gamma_bb[index]* \
               t139011*t139033*t139008*t139009*(8.0/3.0)-ccab1*gamma_bb[index]*t139011*t139008*t139009*t139147*(4.0/ \
               3.0)+ccab3*gamma_bb[index]*gcab*t139010*t139011*t139034*t139008*4.0+ccab4*gamma_bb[index]*t139010* \
               t139011*t139016*t139009*t139036*(1.6E1/3.0)-ccab3*gcab*t139010*t139008*t139152*t139009*t139159)*2.0+ \
               t139213*t139206*2.0+t139205*t139161*2.0-rho_b[index]*t139161*(ccaa1*gamma_bb[index]*gcaa*t139170*t139153* \
               (8.8E1/9.0)-ccaa1*t139113*t139114*t139148*t139189*2.4E1+ccaa2*t139113*t139114*t139148*t139179*(3.04E2/ \
               9.0)+ccaa4*t139115*t139116*t139208*t139167*(1.12E3/9.0)-ccaa2*t139113*t139203*t139114*t139204*t139180* \
               (3.2E1/3.0)-ccaa4*t139200*t139115*t139116*t139182*t139199*(6.4E1/3.0)-ccaa2*t139113*t139114*t139204* \
               t139119*(gamma_bb[index]*gcaa*t139153*(1.76E2/9.0)+t139113*t139114*t139148*(3.04E2/9.0))-ccaa4*t139200* \
               t139115*t139116*t139117*(gamma_bb[index]*gcaa*t139153*(3.52E2/9.0)+t139113*t139114*t139148*(6.08E2/ \
               3.0)+t139115*t139116*t139208*(1.12E3/9.0)+gamma_bb[index]*gcaa*t139113*t139114*t139207*2.88E2)+ccaa2* \
               t139113*(t139203*t139203)*t139114*t139119*1.0/(t139178*t139178*t139178)*2.0+ccaa4*t139115*t139116* \
               t139117*1.0/(t139166*t139166*t139166)*(t139199*t139199)*2.0+ccaa3*gamma_bb[index]*gcaa*t139113*t139114* \
               t139207*t139175*7.2E1+ccaa1*gamma_bb[index]*gcaa*t139113*t139114*t139207*1.0/(t139169*t139169*t139169) \
               *(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t139113*t139114*t139118*1.0/(t139174*t139174*t139174)*(t139193* \
               t139193)*2.0-ccaa3*gamma_bb[index]*gcaa*t139113*t139114*t139118*t139194*(gamma_bb[index]*gcaa*t139153* \
               (8.8E1/3.0)+t139113*t139114*t139148*(3.04E2/3.0)+gamma_bb[index]*gcaa*t139113*t139114*t139207*7.2E1) \
               -ccaa3*gamma_bb[index]*gcaa*t139113*t139114*t139181*t139193*t139194*1.6E1)+rho_b[index]*t139213*(- \
               t139100+t139223-t139109+t139227+t139229+t139004*t138911*(t139100+t139221-t139223+t139109+t139226-t139227+ \
               t139228-t139229-t139007*t139214*t139088*t139097*2.0-a1f*c*c0f*t139005*t139095*(8.0/9.0)))-rho_b[index]* \
               t139205*t139206*2.0-c0*t139312*t139287*(cx1*gamma_bb[index]*gx*t139153*t139259*(8.8E1/9.0)-cx1*t139113* \
               t139243*t139148*t139293*2.4E1+cx2*t139113*t139243*t139148*t139268*(3.04E2/9.0)+cx4*t139115*t139208* \
               t139244*t139256*(1.12E3/9.0)-cx2*t139113*t139180*t139243*t139307*t139308*(3.2E1/3.0)-cx4*t139303*t139115* \
               t139304*t139244*t139182*(6.4E1/3.0)-cx2*t139113*t139243*t139119*t139308*(gamma_bb[index]*gx*t139153* \
               (1.76E2/9.0)+t139113*t139243*t139148*(3.04E2/9.0))-cx4*t139115*t139304*t139117*t139244*(gamma_bb[index]* \
               gx*t139153*(3.52E2/9.0)+t139113*t139243*t139148*(6.08E2/3.0)+t139115*t139208*t139244*(1.12E3/9.0)+ \
               gamma_bb[index]*gx*t139113*t139207*t139243*2.88E2)+cx2*t139113*t139243*(t139307*t139307)*t139119*1.0/ \
               (t139267*t139267*t139267)*2.0+cx4*(t139303*t139303)*t139115*t139117*t139244*1.0/(t139255*t139255*t139255) \
               *2.0+cx3*gamma_bb[index]*gx*t139113*t139207*t139243*t139264*7.2E1+cx1*gamma_bb[index]*gx*t139113*t139207* \
               t139243*1.0/(t139258*t139258*t139258)*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t139113*t139243*t139118* \
               1.0/(t139263*t139263*t139263)*(t139297*t139297)*2.0-cx3*gamma_bb[index]*gx*t139113*t139243*t139118* \
               t139298*(gamma_bb[index]*gx*t139153*(8.8E1/3.0)+t139113*t139243*t139148*(3.04E2/3.0)+gamma_bb[index]* \
               gx*t139113*t139207*t139243*7.2E1)-cx3*gamma_bb[index]*gx*t139113*t139243*t139181*t139297*t139298*1.6E1) \
               +c0*t139312*t139245*t139309*(8.0/3.0)+c0*t139310*t139245*t139286*(8.0/3.0)-c0*t139310*t139309*t139287* \
               2.0-c0*t139312*t139286*t138973*(4.0/9.0)+c0*t139286*t139287*(omega*t139250*t139280*(-7.717543294808713E30/ \
               3.713820117856141E27)+omega*t139239*t139279*(2.778046668940015E15/5.2776558133248E13)+omega*t139234* \
               (omega*t139242*t139280*(7.717543294808713E30/4.951760157141521E27)+omega*t139273*t139239*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t139234*(1.0/(rho_b[index]*rho_b[index])*t139233*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t139233*t139238*(7.717543294808713E30/4.951760157141521E27)+1.0/pow(t139230,8.0/3.0)* \
               t139236*t139237*(3.858771647404357E31/1.980704062856608E28)-t139231*t139233*t139239*(7.717543294808713E30/ \
               9.903520314283042E27)+t139231*t139233*t139234*t139269*(2.778046668940015E15/2.11106232532992E14))+ \
               t139240*t139233*t139271*t139274*(3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega) \
               *t139233*t139274*t139269*(1.108777112152858E31/2.37684487542793E29))*(4.0/3.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t141179 = 1.0/pow(rho_b[index],1.0/3.0);
            double t141180 = c*t141179;
            double t141181 = sqrt(t141180);
            double t141182 = b1f*t141181;
            double t141183 = pow(t141180,3.0/2.0);
            double t141184 = b3f*t141183;
            double t141185 = c*c;
            double t141186 = 1.0/pow(rho_b[index],2.0/3.0);
            double t141187 = b4f*t141185*t141186;
            double t141188 = b2f*c*t141179;
            double t141189 = t141182+t141184+t141187+t141188;
            double t141190 = 1.0/pow(rho_b[index],4.0/3.0);
            double t141191 = b1p*t141181;
            double t141192 = b3p*t141183;
            double t141193 = b4p*t141185*t141186;
            double t141194 = b2p*c*t141179;
            double t141195 = t141191+t141192+t141193+t141194;
            double t141196 = 1.0/pow(rho_b[index],5.0/3.0);
            double t141197 = 1.0/sqrt(t141180);
            double t141198 = 1.0/c0f;
            double t141199 = 1.0/t141189;
            double t141200 = t141198*t141199*(1.0/2.0);
            double t141201 = t141200+1.0;
            double t141202 = 1.0/c0p;
            double t141203 = 1.0/t141195;
            double t141204 = t141202*t141203*(1.0/2.0);
            double t141205 = t141204+1.0;
            double t141206 = a1p*c*t141179;
            double t141207 = t141206+1.0;
            double t141208 = 1.0/t141205;
            double t141209 = 1.0/(t141195*t141195);
            double t141210 = b4p*t141185*t141196*(2.0/3.0);
            double t141211 = b2p*c*t141190*(1.0/3.0);
            double t141212 = b1p*c*t141190*t141197*(1.0/6.0);
            double t141213 = b3p*c*t141181*t141190*(1.0/2.0);
            double t141214 = t141210+t141211+t141212+t141213;
            double t141215 = t141214*t141207*t141208*t141209;
            double t141216 = log(t141205);
            double t141217 = gamma_bb[index]*gamma_bb[index];
            double t141218 = gcaa*gcaa;
            double t141219 = t141217*t141217;
            double t141220 = t141218*t141218;
            double t141221 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t141222 = 1.0/pow(rho_b[index],8.0/3.0);
            double t141223 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t141224 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t141225 = pow(2.0,1.0/3.0);
            double t141226 = t141225*2.0;
            double t141227 = t141226-2.0;
            double t141228 = two_13*2.0;
            double t141229 = t141228-2.0;
            double t141230 = 1.0/t141229;
            double t141231 = log(t141201);
            double t141232 = a1f*c*t141179;
            double t141233 = t141232+1.0;
            double t141234 = gamma_bb[index]*gcaa*t141222*4.0;
            double t141235 = gamma_bb[index]*gcaa*t141223*t141217*t141218*4.0;
            double t141236 = t141224*t141217*t141218*6.0;
            double t141237 = t141220*t141221*t141219;
            double t141238 = t141234+t141235+t141236+t141237+1.0;
            double t141239 = 1.0/t141238;
            double t141240 = gamma_bb[index]*gcaa*t141222;
            double t141241 = t141240+1.0;
            double t141242 = 1.0/t141241;
            double t141243 = gamma_bb[index]*gcaa*t141222*3.0;
            double t141244 = gamma_bb[index]*gcaa*t141223*t141217*t141218;
            double t141245 = t141224*t141217*t141218*3.0;
            double t141246 = t141243+t141244+t141245+1.0;
            double t141247 = 1.0/t141246;
            double t141248 = gamma_bb[index]*gcaa*t141222*2.0;
            double t141249 = t141224*t141217*t141218;
            double t141250 = t141248+t141249+1.0;
            double t141251 = 1.0/t141250;
            double t141252 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t141253 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t141254 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t141255 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t141256 = 1.0/t141201;
            double t141257 = 1.0/(t141189*t141189);
            double t141258 = b4f*t141185*t141196*(2.0/3.0);
            double t141259 = b2f*c*t141190*(1.0/3.0);
            double t141260 = b1f*c*t141190*t141197*(1.0/6.0);
            double t141261 = b3f*c*t141181*t141190*(1.0/2.0);
            double t141262 = t141260+t141261+t141258+t141259;
            double t141263 = a1f*c*c0f*t141231*t141190*(2.0/3.0);
            double t141264 = a1p*c*c0p*t141216*t141190*(2.0/3.0);
            double t141265 = ccaa4*t141220*t141219*t141255*t141239*(3.2E1/3.0);
            double t141266 = ccaa1*gamma_bb[index]*gcaa*t141242*t141253*(8.0/3.0);
            double t141267 = ccaa3*gamma_bb[index]*gcaa*t141217*t141218*t141254*t141247*8.0;
            double t141268 = ccaa2*t141251*t141252*t141217*t141218*(1.6E1/3.0);
            double t141269 = 1.0/(t141241*t141241);
            double t141270 = gamma_bb[index]*gcaa*t141253*8.0;
            double t141271 = gamma_bb[index]*gcaa*t141217*t141218*t141254*8.0;
            double t141272 = t141252*t141217*t141218*1.6E1;
            double t141273 = t141270+t141271+t141272;
            double t141274 = 1.0/(t141246*t141246);
            double t141275 = gamma_bb[index]*gcaa*t141253*(3.2E1/3.0);
            double t141276 = gamma_bb[index]*gcaa*t141217*t141218*t141254*3.2E1;
            double t141277 = t141252*t141217*t141218*3.2E1;
            double t141278 = t141220*t141219*t141255*(3.2E1/3.0);
            double t141279 = t141275+t141276+t141277+t141278;
            double t141280 = 1.0/(t141238*t141238);
            double t141281 = gamma_bb[index]*gcaa*t141253*(1.6E1/3.0);
            double t141282 = t141252*t141217*t141218*(1.6E1/3.0);
            double t141283 = t141281+t141282;
            double t141284 = 1.0/(t141250*t141250);
            double t141285 = t141265+t141266+t141267+t141268-ccaa1*t141252*t141217*t141218*t141269*(8.0/3.0)- \
               ccaa4*t141220*t141221*t141280*t141219*t141279-ccaa2*t141224*t141217*t141218*t141283*t141284-ccaa3* \
               gamma_bb[index]*gcaa*t141223*t141217*t141218*t141273*t141274;
            double t141286 = c0f*t141231*t141233*2.0;
            double t141287 = c0p*t141207*t141216*2.0;
            double t141288 = 1.0/pow(rho_b[index],1.0E1);
            double t141289 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t141290 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t141291 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t141292 = ccaa4*t141220*t141221*t141219*t141239;
            double t141293 = ccaa1*gamma_bb[index]*gcaa*t141222*t141242;
            double t141294 = ccaa3*gamma_bb[index]*gcaa*t141223*t141217*t141218*t141247;
            double t141295 = ccaa2*t141224*t141251*t141217*t141218;
            double t141296 = ccaa0+t141292+t141293+t141294+t141295;
            double t141297 = 1.0/pow(rho_b[index],7.0/3.0);
            double t141298 = 1.0/pow(t141180,3.0/2.0);
            double t141299 = t141262*t141262;
            double t141300 = t141214*t141214;
            double t141301 = 1.0/(t141195*t141195*t141195);
            double t141302 = t141300*t141301*t141207*t141208*2.0;
            double t141303 = b4p*t141222*t141185*(1.0E1/9.0);
            double t141304 = b2p*c*t141297*(4.0/9.0);
            double t141305 = b3p*t141222*t141185*t141197*(1.0/1.2E1);
            double t141306 = b1p*c*t141197*t141297*(2.0/9.0);
            double t141307 = b3p*c*t141181*t141297*(2.0/3.0);
            double t141308 = t141303+t141304+t141305+t141306+t141307-b1p*t141222*t141185*t141298*(1.0/3.6E1);
            double t141309 = 1.0/(t141205*t141205);
            double t141310 = 1.0/(t141195*t141195*t141195*t141195);
            double t141311 = a1p*c*c0p*t141216*t141297*(8.0/9.0);
            double t141312 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t141313 = 1.0/(omega*omega);
            double t141314 = pow(t141312,2.0/3.0);
            double t141317 = t141313*t141314;
            double t141315 = exp(-t141317);
            double t141316 = 1.0/pow(t141312,1.0/3.0);
            double t141318 = omega*omega;
            double t141319 = t141315-1.0;
            double t141320 = 1.0/pow(t141312,2.0/3.0);
            double t141321 = 1.0/pow(t141312,4.0/3.0);
            double t141322 = 1.0/omega;
            double t141323 = t141320*t141318*t141319*(1.0/2.0);
            double t141324 = t141323-t141315+3.0/2.0;
            double t141325 = gx*gx;
            double t141326 = t141325*t141325;
            double t141327 = pow(rho_b[index],1.0/3.0);
            double t141328 = pow(t141312,1.0/3.0);
            double t141329 = t141322*t141328;
            double t141330 = erf(t141329);
            double t141331 = t141330*(3.991211251234741E15/2.251799813685248E15);
            double t141363 = omega*t141324*t141316;
            double t141332 = t141331-t141363;
            double t141333 = gamma_bb[index]*gx*t141222*4.0;
            double t141334 = gamma_bb[index]*gx*t141223*t141217*t141325*4.0;
            double t141335 = t141224*t141217*t141325*6.0;
            double t141336 = t141221*t141326*t141219;
            double t141337 = t141333+t141334+t141335+t141336+1.0;
            double t141338 = 1.0/t141337;
            double t141339 = gamma_bb[index]*gx*t141222;
            double t141340 = t141339+1.0;
            double t141341 = 1.0/t141340;
            double t141342 = gamma_bb[index]*gx*t141222*3.0;
            double t141343 = gamma_bb[index]*gx*t141223*t141217*t141325;
            double t141344 = t141224*t141217*t141325*3.0;
            double t141345 = t141342+t141343+t141344+1.0;
            double t141346 = 1.0/t141345;
            double t141347 = gamma_bb[index]*gx*t141222*2.0;
            double t141348 = t141224*t141217*t141325;
            double t141349 = t141347+t141348+1.0;
            double t141350 = 1.0/t141349;
            double t141351 = 1.0/rho_b[index];
            double t141352 = t141315*t141351*(1.0/3.0);
            double t141353 = 1.0/pow(t141312,5.0/3.0);
            double t141354 = t141353*t141318*t141319*(2.778046668940015E15/1.40737488355328E14);
            double t141358 = t141313*t141315*t141316*(2.778046668940015E15/7.0368744177664E13);
            double t141355 = t141352+t141354-t141358;
            double t141356 = 1.0/sqrt(3.141592653589793);
            double t141357 = omega*t141321*t141324*(2.778046668940015E15/1.40737488355328E14);
            double t141359 = omega*t141316*t141355;
            double t141360 = t141320*t141322*t141315*t141356*(1.108777112152858E31/1.584563250285287E29);
            double t141361 = t141360+t141357+t141359;
            double t141362 = 1.0/pow(t141312,7.0/3.0);
            double t141364 = cx4*t141221*t141326*t141219*t141338;
            double t141365 = cx1*gamma_bb[index]*gx*t141222*t141341;
            double t141366 = cx3*gamma_bb[index]*gx*t141223*t141217*t141325*t141346;
            double t141367 = cx2*t141224*t141350*t141217*t141325;
            double t141368 = cx0+t141364+t141365+t141366+t141367;
            double t141369 = pow(rho_b[index],4.0/3.0);
            double t141370 = omega*t141321*t141332*(2.778046668940015E15/1.05553116266496E14);
            double t141371 = cx4*t141326*t141219*t141255*t141338*(3.2E1/3.0);
            double t141372 = cx1*gamma_bb[index]*gx*t141341*t141253*(8.0/3.0);
            double t141373 = cx3*gamma_bb[index]*gx*t141217*t141325*t141254*t141346*8.0;
            double t141374 = cx2*t141350*t141252*t141217*t141325*(1.6E1/3.0);
            double t141375 = 1.0/(t141340*t141340);
            double t141376 = gamma_bb[index]*gx*t141253*8.0;
            double t141377 = gamma_bb[index]*gx*t141217*t141325*t141254*8.0;
            double t141378 = t141252*t141217*t141325*1.6E1;
            double t141379 = t141376+t141377+t141378;
            double t141380 = 1.0/(t141345*t141345);
            double t141381 = gamma_bb[index]*gx*t141253*(3.2E1/3.0);
            double t141382 = gamma_bb[index]*gx*t141217*t141325*t141254*3.2E1;
            double t141383 = t141252*t141217*t141325*3.2E1;
            double t141384 = t141326*t141219*t141255*(3.2E1/3.0);
            double t141385 = t141381+t141382+t141383+t141384;
            double t141386 = 1.0/(t141337*t141337);
            double t141387 = gamma_bb[index]*gx*t141253*(1.6E1/3.0);
            double t141388 = t141252*t141217*t141325*(1.6E1/3.0);
            double t141389 = t141387+t141388;
            double t141390 = 1.0/(t141349*t141349);
            double t141391 = t141371+t141372+t141373+t141374-cx1*t141252*t141217*t141325*t141375*(8.0/3.0)-cx2* \
               t141224*t141217*t141325*t141390*t141389-cx4*t141221*t141326*t141219*t141385*t141386-cx3*gamma_bb[index]* \
               gx*t141223*t141217*t141325*t141380*t141379;
            double t141392 = t141370-omega*t141316*t141361*(4.0/3.0);
            double t141393 = omega*t141332*t141316*(4.0/3.0);
            double t141394 = t141393-1.0;
            v_rho_b_rho_b_[index] = t141285*(t141287+t141230*t141227*(t141286-c0p*t141207*t141216*2.0))*2.0+t141296* \
               (-t141215+t141264+t141230*t141227*(t141215+t141263-t141233*t141262*t141256*t141257-a1p*c*c0p*t141216* \
               t141190*(2.0/3.0)))*2.0+rho_b[index]*t141296*(-t141302-t141311+t141230*t141227*(t141302+t141311-t141207* \
               t141208*t141209*t141308-t141233*t141256*1.0/(t141189*t141189*t141189)*t141299*2.0+t141233*t141256* \
               t141257*(b2f*c*t141297*(4.0/9.0)+b4f*t141222*t141185*(1.0E1/9.0)+b1f*c*t141197*t141297*(2.0/9.0)+b3f* \
               c*t141181*t141297*(2.0/3.0)-b1f*t141222*t141185*t141298*(1.0/3.6E1)+b3f*t141222*t141185*t141197*(1.0/ \
               1.2E1))+1.0/(t141201*t141201)*t141233*1.0/(t141189*t141189*t141189*t141189)*t141198*t141299*(1.0/2.0) \
               -a1f*c*c0f*t141231*t141297*(8.0/9.0)-t141300*t141202*t141310*t141207*t141309*(1.0/2.0)+a1f*c*t141190* \
               t141262*t141256*t141257*(2.0/3.0)-a1p*c*t141214*t141190*t141208*t141209*(2.0/3.0))+t141207*t141208* \
               t141209*t141308+t141300*t141202*t141310*t141207*t141309*(1.0/2.0)+a1p*c*t141214*t141190*t141208*t141209* \
               (2.0/3.0))-rho_b[index]*t141285*(-t141215+t141264+t141230*t141227*(t141215+t141263-t141264-t141233* \
               t141262*t141256*t141257))*2.0-rho_b[index]*(t141287+t141230*t141227*(t141286-t141287))*(ccaa1*gamma_bb[index]* \
               gcaa*t141242*t141290*(8.8E1/9.0)+ccaa4*t141220*t141219*t141291*t141239*(1.12E3/9.0)+ccaa2*t141251* \
               t141217*t141218*t141289*(3.04E2/9.0)-ccaa1*t141217*t141218*t141269*t141289*2.4E1-ccaa2*t141252*t141217* \
               t141218*t141283*t141284*(3.2E1/3.0)-ccaa4*t141220*t141280*t141219*t141255*t141279*(6.4E1/3.0)-ccaa2* \
               t141224*t141217*t141218*t141284*(gamma_bb[index]*gcaa*t141290*(1.76E2/9.0)+t141217*t141218*t141289* \
               (3.04E2/9.0))-ccaa4*t141220*t141221*t141280*t141219*(gamma_bb[index]*gcaa*t141290*(3.52E2/9.0)+t141220* \
               t141219*t141291*(1.12E3/9.0)+t141217*t141218*t141289*(6.08E2/3.0)+gamma_bb[index]*gcaa*t141217*t141218* \
               t141288*2.88E2)+ccaa2*1.0/(t141250*t141250*t141250)*t141224*t141217*t141218*(t141283*t141283)*2.0+ \
               ccaa4*t141220*t141221*t141219*1.0/(t141238*t141238*t141238)*(t141279*t141279)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t141217*t141218*t141247*t141288*7.2E1+ccaa1*gamma_bb[index]*gcaa*1.0/(t141241*t141241*t141241) \
               *t141217*t141218*t141288*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t141223*t141217*t141218*1.0/(t141246* \
               t141246*t141246)*(t141273*t141273)*2.0-ccaa3*gamma_bb[index]*gcaa*t141223*t141217*t141218*t141274* \
               (gamma_bb[index]*gcaa*t141290*(8.8E1/3.0)+t141217*t141218*t141289*(3.04E2/3.0)+gamma_bb[index]*gcaa* \
               t141217*t141218*t141288*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t141217*t141218*t141254*t141273*t141274* \
               1.6E1)-c0*t141394*t141369*(cx1*gamma_bb[index]*gx*t141341*t141290*(8.8E1/9.0)-cx1*t141217*t141325* \
               t141375*t141289*2.4E1+cx2*t141350*t141217*t141325*t141289*(3.04E2/9.0)+cx4*t141326*t141219*t141291* \
               t141338*(1.12E3/9.0)-cx2*t141252*t141217*t141325*t141390*t141389*(3.2E1/3.0)-cx4*t141326*t141219*t141255* \
               t141385*t141386*(6.4E1/3.0)-cx2*t141224*t141217*t141325*t141390*(gamma_bb[index]*gx*t141290*(1.76E2/ \
               9.0)+t141217*t141325*t141289*(3.04E2/9.0))-cx4*t141221*t141326*t141219*t141386*(gamma_bb[index]*gx* \
               t141290*(3.52E2/9.0)+t141326*t141219*t141291*(1.12E3/9.0)+t141217*t141325*t141289*(6.08E2/3.0)+gamma_bb[index]* \
               gx*t141217*t141325*t141288*2.88E2)+cx2*t141224*t141217*t141325*1.0/(t141349*t141349*t141349)*(t141389* \
               t141389)*2.0+cx4*t141221*t141326*t141219*1.0/(t141337*t141337*t141337)*(t141385*t141385)*2.0+cx3*gamma_bb[index]* \
               gx*t141217*t141325*t141346*t141288*7.2E1+cx1*gamma_bb[index]*gx*1.0/(t141340*t141340*t141340)*t141217* \
               t141325*t141288*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t141223*t141217*t141325*1.0/(t141345*t141345*t141345) \
               *(t141379*t141379)*2.0-cx3*gamma_bb[index]*gx*t141223*t141217*t141325*t141380*(gamma_bb[index]*gx* \
               t141290*(8.8E1/3.0)+t141217*t141325*t141289*(3.04E2/3.0)+gamma_bb[index]*gx*t141217*t141325*t141288* \
               7.2E1)-cx3*gamma_bb[index]*gx*t141217*t141325*t141254*t141380*t141379*1.6E1)+c0*t141327*t141391*t141394* \
               (8.0/3.0)+c0*t141327*t141392*t141368*(8.0/3.0)-c0*t141391*t141392*t141369*2.0-c0*t141186*t141394*t141368* \
               (4.0/9.0)+c0*t141368*t141369*(omega*t141321*t141361*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t141332*t141362*(7.717543294808713E30/3.713820117856141E27)+omega*t141316*(omega*t141321*t141355*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t141324*t141362*(7.717543294808713E30/4.951760157141521E27)+omega*t141316* \
               (1.0/(rho_b[index]*rho_b[index])*t141315*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t141320*t141315*(7.717543294808713E30/ \
               4.951760157141521E27)+1.0/pow(t141312,8.0/3.0)*t141318*t141319*(3.858771647404357E31/1.980704062856608E28) \
               -t141321*t141313*t141315*(7.717543294808713E30/9.903520314283042E27)+t141313*t141315*t141351*t141316* \
               (2.778046668940015E15/2.11106232532992E14))+t141322*t141315*t141353*t141356*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t141315*t141351*t141356*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t139314 = 1.0/pow(rho_a[index],1.0/3.0);
                double t139315 = c*t139314;
                double t139316 = sqrt(t139315);
                double t139317 = pow(t139315,3.0/2.0);
                double t139318 = c*c;
                double t139319 = 1.0/pow(rho_a[index],2.0/3.0);
                double t139320 = 1.0/c0p;
                double t139321 = b1p*t139316;
                double t139322 = b3p*t139317;
                double t139323 = b4p*t139318*t139319;
                double t139324 = b2p*c*t139314;
                double t139325 = t139321+t139322+t139323+t139324;
                double t139326 = 1.0/t139325;
                double t139327 = t139320*t139326*(1.0/2.0);
                double t139328 = t139327+1.0;
                double t139329 = log(t139328);
                double t139330 = a1p*c*t139314;
                double t139331 = t139330+1.0;
                double t139332 = 1.0/pow(rho_a[index],8.0/3.0);
                double t139333 = gamma_aa[index]*gamma_aa[index];
                double t139334 = gcaa*gcaa;
                double t139335 = t139334*t139334;
                double t139336 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t139337 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t139338 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t139339 = gamma_aa[index]*gcaa*t139332;
                double t139340 = t139339+1.0;
                double t139341 = gamma_aa[index]*gcaa*t139332*3.0;
                double t139342 = gamma_aa[index]*gcaa*t139333*t139334*t139338;
                double t139343 = t139333*t139334*t139337*3.0;
                double t139344 = t139341+t139342+t139343+1.0;
                double t139345 = t139333*t139333;
                double t139346 = gamma_aa[index]*gcaa*t139332*4.0;
                double t139347 = gamma_aa[index]*gcaa*t139333*t139334*t139338*4.0;
                double t139348 = t139333*t139334*t139337*6.0;
                double t139349 = t139335*t139336*t139345;
                double t139350 = t139346+t139347+t139348+t139349+1.0;
                double t139351 = gamma_aa[index]*gcaa*t139332*2.0;
                double t139352 = t139333*t139334*t139337;
                double t139353 = t139351+t139352+1.0;
                double t139354 = rho_a[index]+rho_b[index];
                double t139355 = 1.0/pow(t139354,1.0/3.0);
                double t139356 = c*t139355;
                double t139357 = sqrt(t139356);
                double t139358 = b1p*t139357;
                double t139359 = pow(t139356,3.0/2.0);
                double t139360 = b3p*t139359;
                double t139361 = 1.0/pow(t139354,2.0/3.0);
                double t139362 = b4p*t139361*t139318;
                double t139363 = b2p*c*t139355;
                double t139364 = t139360+t139362+t139363+t139358;
                double t139365 = 1.0/pow(t139354,4.0/3.0);
                double t139366 = two_13*2.0;
                double t139367 = t139366-2.0;
                double t139368 = 1.0/t139367;
                double t139369 = 1.0/c0f;
                double t139370 = 1.0/t139364;
                double t139371 = t139320*t139370*(1.0/2.0);
                double t139372 = t139371+1.0;
                double t139373 = a1p*c*t139355;
                double t139374 = t139373+1.0;
                double t139375 = rho_a[index]-rho_b[index];
                double t139376 = t139375*t139375;
                double t139377 = 1.0/t139354;
                double t139378 = t139375*t139377;
                double t139379 = b1f*t139357;
                double t139380 = b3f*t139359;
                double t139381 = b4f*t139361*t139318;
                double t139382 = b2f*c*t139355;
                double t139383 = t139380+t139381+t139382+t139379;
                double t139384 = 1.0/t139383;
                double t139385 = t139384*t139369*(1.0/2.0);
                double t139386 = t139385+1.0;
                double t139387 = log(t139386);
                double t139388 = a1f*c*t139355;
                double t139389 = t139388+1.0;
                double t139390 = log(t139372);
                double t139400 = c0f*t139387*t139389*2.0;
                double t139401 = c0p*t139390*t139374*2.0;
                double t139391 = t139400-t139401;
                double t139392 = t139378+1.0;
                double t139393 = pow(t139392,4.0/3.0);
                double t139394 = -t139378+1.0;
                double t139395 = pow(t139394,4.0/3.0);
                double t139396 = t139393+t139395-2.0;
                double t139397 = 1.0/(t139354*t139354);
                double t139428 = t139375*t139397;
                double t139398 = -t139428+t139377;
                double t139399 = 1.0/(t139354*t139354*t139354*t139354);
                double t139402 = t139376*t139376;
                double t139403 = 1.0/pow(t139354,5.0/3.0);
                double t139404 = 1.0/sqrt(t139356);
                double t139405 = 1.0/t139372;
                double t139406 = 1.0/(t139364*t139364);
                double t139407 = b4p*t139403*t139318*(2.0/3.0);
                double t139408 = b2p*c*t139365*(1.0/3.0);
                double t139409 = b1p*c*t139404*t139365*(1.0/6.0);
                double t139410 = b3p*c*t139365*t139357*(1.0/2.0);
                double t139411 = t139410+t139407+t139408+t139409;
                double t139412 = t139411*t139405*t139406*t139374;
                double t139413 = 1.0/(t139354*t139354*t139354*t139354*t139354);
                double t139414 = 1.0/d2fz0;
                double t139415 = 1.0/Aa;
                double t139416 = b1a*t139357;
                double t139417 = b3a*t139359;
                double t139418 = b4a*t139361*t139318;
                double t139419 = b2a*c*t139355;
                double t139420 = t139416+t139417+t139418+t139419;
                double t139421 = 1.0/t139420;
                double t139422 = t139421*t139415*(1.0/2.0);
                double t139423 = t139422+1.0;
                double t139424 = log(t139423);
                double t139425 = a1a*c*t139355;
                double t139426 = t139425+1.0;
                double t139427 = pow(t139392,1.0/3.0);
                double t139429 = t139427*t139398*(4.0/3.0);
                double t139430 = pow(t139394,1.0/3.0);
                double t139431 = t139429-t139430*t139398*(4.0/3.0);
                double t139432 = t139402*t139399;
                double t139433 = t139432-1.0;
                double t139434 = pow(2.0,1.0/3.0);
                double t139435 = t139434*2.0;
                double t139436 = t139435-2.0;
                double t139437 = a1f*c*t139314;
                double t139438 = t139437+1.0;
                double t139439 = b1f*t139316;
                double t139440 = b3f*t139317;
                double t139441 = b4f*t139318*t139319;
                double t139442 = b2f*c*t139314;
                double t139443 = t139440+t139441+t139442+t139439;
                double t139444 = 1.0/t139443;
                double t139445 = t139444*t139369*(1.0/2.0);
                double t139446 = t139445+1.0;
                double t139447 = 1.0/pow(rho_a[index],4.0/3.0);
                double t139448 = 1.0/pow(rho_a[index],5.0/3.0);
                double t139449 = 1.0/sqrt(t139315);
                double t139450 = log(t139446);
                double t139451 = 1.0/t139328;
                double t139452 = 1.0/(t139325*t139325);
                double t139453 = b4p*t139318*t139448*(2.0/3.0);
                double t139454 = b2p*c*t139447*(1.0/3.0);
                double t139455 = b1p*c*t139447*t139449*(1.0/6.0);
                double t139456 = b3p*c*t139316*t139447*(1.0/2.0);
                double t139457 = t139453+t139454+t139455+t139456;
                double t139458 = t139331*t139451*t139452*t139457;
                double t139459 = c0f*t139450*t139438*2.0;
                double t139460 = c0p*t139331*t139329*2.0;
                double t139461 = gamma_aa[index]*t139332*(1.0/2.0);
                double t139462 = 1.0/pow(rho_b[index],8.0/3.0);
                double t139463 = gamma_bb[index]*t139462*(1.0/2.0);
                double t139464 = t139461+t139463;
                double t139465 = gcab*t139464;
                double t139466 = t139465+1.0;
                double t139467 = gcab*gcab;
                double t139468 = t139464*t139464;
                double t139469 = t139467*t139467;
                double t139470 = t139468*t139468;
                double t139471 = t139467*t139468;
                double t139472 = gcab*t139464*2.0;
                double t139473 = t139471+t139472+1.0;
                double t139474 = t139467*t139468*3.0;
                double t139475 = gcab*t139464*t139467*t139468;
                double t139476 = gcab*t139464*3.0;
                double t139477 = t139474+t139475+t139476+1.0;
                double t139478 = t139467*t139468*6.0;
                double t139479 = gcab*t139464*t139467*t139468*4.0;
                double t139480 = t139470*t139469;
                double t139481 = gcab*t139464*4.0;
                double t139482 = t139480+t139481+t139478+t139479+1.0;
                double t139483 = t139460-t139459;
                double t139484 = t139436*t139483*t139368;
                double t139485 = 1.0/pow(rho_b[index],1.0/3.0);
                double t139486 = c*t139485;
                double t139487 = sqrt(t139486);
                double t139488 = pow(t139486,3.0/2.0);
                double t139489 = 1.0/pow(rho_b[index],2.0/3.0);
                double t139490 = b1p*t139487;
                double t139491 = b3p*t139488;
                double t139492 = b4p*t139318*t139489;
                double t139493 = b2p*c*t139485;
                double t139494 = t139490+t139491+t139492+t139493;
                double t139495 = 1.0/t139494;
                double t139496 = t139320*t139495*(1.0/2.0);
                double t139497 = t139496+1.0;
                double t139498 = log(t139497);
                double t139499 = a1p*c*t139485;
                double t139500 = t139499+1.0;
                double t139501 = c0p*t139500*t139498*2.0;
                double t139502 = t139402*t139391*t139368*t139396*t139399;
                double t139503 = Aa*t139414*t139424*t139433*t139426*t139368*t139396*2.0;
                double t139504 = 1.0/t139466;
                double t139505 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t139506 = 1.0/(t139466*t139466);
                double t139507 = 1.0/t139473;
                double t139508 = 1.0/(t139477*t139477);
                double t139509 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t139510 = 1.0/(t139473*t139473);
                double t139511 = 1.0/t139477;
                double t139512 = 1.0/t139482;
                double t139513 = 1.0/(t139482*t139482);
                double t139514 = gcab*t139332*2.0;
                double t139515 = t139332*t139464*t139467*6.0;
                double t139516 = gcab*t139332*t139467*t139468*6.0;
                double t139517 = t139332*t139464*t139468*t139469*2.0;
                double t139518 = t139514+t139515+t139516+t139517;
                double t139519 = gamma_aa[index]*gcab*t139505*(8.0/3.0);
                double t139520 = gamma_aa[index]*t139505*t139464*t139467*(8.0/3.0);
                double t139521 = t139520+t139519;
                double t139522 = gcab*t139332;
                double t139523 = t139332*t139464*t139467;
                double t139524 = t139522+t139523;
                double t139525 = gamma_aa[index]*gcab*t139505*(1.6E1/3.0);
                double t139526 = gamma_aa[index]*gcab*t139505*t139467*t139468*1.6E1;
                double t139527 = gamma_aa[index]*t139505*t139464*t139468*t139469*(1.6E1/3.0);
                double t139528 = gamma_aa[index]*t139505*t139464*t139467*1.6E1;
                double t139529 = t139525+t139526+t139527+t139528;
                double t139530 = gcab*t139332*(3.0/2.0);
                double t139531 = t139332*t139464*t139467*3.0;
                double t139532 = gcab*t139332*t139467*t139468*(3.0/2.0);
                double t139533 = t139530+t139531+t139532;
                double t139534 = gamma_aa[index]*gcab*t139505*4.0;
                double t139535 = gamma_aa[index]*gcab*t139505*t139467*t139468*4.0;
                double t139536 = gamma_aa[index]*t139505*t139464*t139467*8.0;
                double t139537 = t139534+t139535+t139536;
                double t139538 = t139460-t139484;
                double t139539 = 1.0/t139340;
                double t139540 = 1.0/t139350;
                double t139541 = 1.0/t139353;
                double t139542 = 1.0/t139344;
                double t139543 = 1.0/(t139340*t139340);
                double t139544 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t139545 = 1.0/(t139344*t139344);
                double t139546 = 1.0/(t139353*t139353);
                double t139547 = gcaa*t139332*3.0;
                double t139548 = gamma_aa[index]*t139334*t139337*6.0;
                double t139549 = gcaa*t139333*t139334*t139338*3.0;
                double t139550 = t139547+t139548+t139549;
                double t139551 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t139552 = 1.0/(t139350*t139350);
                double t139553 = gcaa*t139332*4.0;
                double t139554 = gamma_aa[index]*t139334*t139337*1.2E1;
                double t139555 = gcaa*t139333*t139334*t139338*1.2E1;
                double t139556 = gamma_aa[index]*t139333*t139335*t139336*4.0;
                double t139557 = t139553+t139554+t139555+t139556;
                double t139558 = gcaa*t139332*2.0;
                double t139559 = gamma_aa[index]*t139334*t139337*2.0;
                double t139560 = t139558+t139559;
                double t139561 = gamma_aa[index]*gcaa*t139505*(1.6E1/3.0);
                double t139562 = t139333*t139334*t139509*(1.6E1/3.0);
                double t139563 = t139561+t139562;
                double t139564 = gamma_aa[index]*gcaa*t139505*8.0;
                double t139565 = gamma_aa[index]*gcaa*t139333*t139334*t139544*8.0;
                double t139566 = t139333*t139334*t139509*1.6E1;
                double t139567 = t139564+t139565+t139566;
                double t139568 = gamma_aa[index]*gcaa*t139505*(3.2E1/3.0);
                double t139569 = gamma_aa[index]*gcaa*t139333*t139334*t139544*3.2E1;
                double t139570 = t139333*t139334*t139509*3.2E1;
                double t139571 = t139335*t139551*t139345*(3.2E1/3.0);
                double t139572 = t139570+t139571+t139568+t139569;
                double t139573 = 1.0/t139446;
                double t139574 = 1.0/(t139443*t139443);
                double t139575 = b4f*t139318*t139448*(2.0/3.0);
                double t139576 = b2f*c*t139447*(1.0/3.0);
                double t139577 = b1f*c*t139447*t139449*(1.0/6.0);
                double t139578 = b3f*c*t139316*t139447*(1.0/2.0);
                double t139579 = t139575+t139576+t139577+t139578;
                double t139580 = a1f*c*c0f*t139450*t139447*(2.0/3.0);
                double t139581 = a1p*c*c0p*t139329*t139447*(2.0/3.0);
                double t139582 = ccaa1*gcaa*t139332*t139539;
                double t139583 = ccaa4*gamma_aa[index]*t139333*t139540*t139335*t139336*4.0;
                double t139584 = ccaa2*gamma_aa[index]*t139334*t139541*t139337*2.0;
                double t139585 = ccaa3*gcaa*t139333*t139334*t139542*t139338*3.0;
                double t139586 = t139582+t139583+t139584+t139585-ccaa1*gamma_aa[index]*t139334*t139543*t139337-ccaa2* \
                   t139333*t139334*t139560*t139337*t139546-ccaa4*t139335*t139336*t139345*t139552*t139557-ccaa3*gamma_aa[index]* \
                   gcaa*t139333*t139334*t139550*t139338*t139545;
                double t139587 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t139588 = 1.0/pow(t139587,1.0/3.0);
                double t139589 = 1.0/(omega*omega);
                double t139590 = pow(t139587,2.0/3.0);
                double t139640 = t139590*t139589;
                double t139591 = exp(-t139640);
                double t139592 = gx*gx;
                double t139593 = t139592*t139592;
                double t139594 = gamma_aa[index]*gx*t139332;
                double t139595 = t139594+1.0;
                double t139596 = gamma_aa[index]*gx*t139332*3.0;
                double t139597 = gamma_aa[index]*gx*t139333*t139338*t139592;
                double t139598 = t139333*t139337*t139592*3.0;
                double t139599 = t139596+t139597+t139598+1.0;
                double t139600 = gamma_aa[index]*gx*t139332*2.0;
                double t139601 = t139333*t139337*t139592;
                double t139602 = t139600+t139601+1.0;
                double t139603 = 1.0/(t139599*t139599);
                double t139604 = gamma_aa[index]*gx*t139332*4.0;
                double t139605 = gamma_aa[index]*gx*t139333*t139338*t139592*4.0;
                double t139606 = t139333*t139337*t139592*6.0;
                double t139607 = t139336*t139345*t139593;
                double t139608 = t139604+t139605+t139606+t139607+1.0;
                double t139609 = 1.0/(t139608*t139608);
                double t139610 = 1.0/(t139602*t139602);
                double t139611 = gamma_aa[index]*gx*t139505*(1.6E1/3.0);
                double t139612 = t139333*t139509*t139592*(1.6E1/3.0);
                double t139613 = t139611+t139612;
                double t139614 = gx*t139332*2.0;
                double t139615 = gamma_aa[index]*t139337*t139592*2.0;
                double t139616 = t139614+t139615;
                double t139617 = gx*t139332*3.0;
                double t139618 = gamma_aa[index]*t139337*t139592*6.0;
                double t139619 = gx*t139333*t139338*t139592*3.0;
                double t139620 = t139617+t139618+t139619;
                double t139621 = gamma_aa[index]*gx*t139505*8.0;
                double t139622 = gamma_aa[index]*gx*t139333*t139544*t139592*8.0;
                double t139623 = t139333*t139509*t139592*1.6E1;
                double t139624 = t139621+t139622+t139623;
                double t139625 = gamma_aa[index]*gx*t139505*(3.2E1/3.0);
                double t139626 = gamma_aa[index]*gx*t139333*t139544*t139592*3.2E1;
                double t139627 = t139333*t139509*t139592*3.2E1;
                double t139628 = t139551*t139345*t139593*(3.2E1/3.0);
                double t139629 = t139625+t139626+t139627+t139628;
                double t139630 = gx*t139332*4.0;
                double t139631 = gamma_aa[index]*t139337*t139592*1.2E1;
                double t139632 = gx*t139333*t139338*t139592*1.2E1;
                double t139633 = gamma_aa[index]*t139333*t139336*t139593*4.0;
                double t139634 = t139630+t139631+t139632+t139633;
                double t139635 = 1.0/omega;
                double t139636 = pow(t139587,1.0/3.0);
                double t139637 = t139635*t139636;
                double t139638 = erf(t139637);
                double t139639 = t139638*(3.991211251234741E15/2.251799813685248E15);
                double t139641 = omega*omega;
                double t139642 = 1.0/pow(t139587,2.0/3.0);
                double t139643 = t139591-1.0;
                double t139644 = t139641*t139642*t139643*(1.0/2.0);
                double t139645 = t139644-t139591+3.0/2.0;
                double t139656 = omega*t139645*t139588;
                double t139646 = -t139656+t139639;
                double t139647 = omega*t139646*t139588*(4.0/3.0);
                double t139648 = t139647-1.0;
                double t139649 = 1.0/t139595;
                double t139650 = 1.0/t139608;
                double t139651 = 1.0/t139602;
                double t139652 = 1.0/t139599;
                double t139653 = 1.0/(t139595*t139595);
                double t139654 = pow(rho_a[index],4.0/3.0);
                double t139655 = 1.0/pow(t139587,4.0/3.0);
                double t139657 = cx1*gx*t139332*t139649;
                double t139658 = cx4*gamma_aa[index]*t139333*t139650*t139336*t139593*4.0;
                double t139659 = cx2*gamma_aa[index]*t139651*t139337*t139592*2.0;
                double t139660 = cx3*gx*t139333*t139652*t139338*t139592*3.0;
                double t139661 = t139660+t139657+t139658+t139659-cx1*gamma_aa[index]*t139337*t139653*t139592-cx2* \
                   t139610*t139333*t139337*t139616*t139592-cx4*t139336*t139345*t139634*t139609*t139593-cx3*gamma_aa[index]* \
                   gx*t139620*t139333*t139603*t139338*t139592;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t139538+rho_b[index]*(t139501-t139436*t139368*(t139501- \
                   c0f*log((t139369*(1.0/2.0))/(b1f*t139487+b3f*t139488+b2f*c*t139485+b4f*t139318*t139489)+1.0)*(a1f* \
                   c*t139485+1.0)*2.0))-t139354*(t139401+t139502+t139503))*(ccab1*gcab*t139504*t139505*(4.0/3.0)-ccab2* \
                   t139510*t139467*t139468*(gcab*t139505*(8.0/3.0)+gamma_aa[index]*t139509*t139467*(4.0/3.0)+t139505* \
                   t139464*t139467*(8.0/3.0))-ccab4*t139513*t139470*t139469*(gcab*t139505*(1.6E1/3.0)+gamma_aa[index]* \
                   t139509*t139467*8.0+t139505*t139464*t139467*1.6E1+gamma_aa[index]*t139509*t139468*t139469*8.0+gcab* \
                   t139505*t139467*t139468*1.6E1+t139505*t139464*t139468*t139469*(1.6E1/3.0)+gamma_aa[index]*gcab*t139464* \
                   t139509*t139467*1.6E1)-ccab1*gamma_aa[index]*t139506*t139509*t139467*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t139507*t139509*t139467*(4.0/3.0)-ccab1*t139505*t139506*t139464*t139467*(4.0/3.0)+ccab2*t139505*t139507* \
                   t139464*t139467*(8.0/3.0)-ccab2*t139510*t139332*t139521*t139464*t139467+ccab4*t139512*t139505*t139464* \
                   t139468*t139469*(1.6E1/3.0)+ccab2*t139521*t139524*1.0/(t139473*t139473*t139473)*t139467*t139468*2.0+ \
                   ccab4*t139470*1.0/(t139482*t139482*t139482)*t139518*t139529*t139469*2.0+ccab4*gamma_aa[index]*t139512* \
                   t139509*t139468*t139469*8.0+ccab3*gcab*t139511*t139505*t139467*t139468*4.0+ccab3*gamma_aa[index]*gcab* \
                   t139511*t139464*t139509*t139467*4.0-ccab2*gamma_aa[index]*t139510*t139505*t139524*t139464*t139467* \
                   (8.0/3.0)-ccab3*gcab*t139332*t139508*t139537*t139467*t139468*(3.0/2.0)-ccab4*t139332*t139513*t139464* \
                   t139529*t139468*t139469*2.0-ccab3*gcab*t139508*t139464*t139467*t139468*(gcab*t139505*4.0+gamma_aa[index]* \
                   t139509*t139467*4.0+t139505*t139464*t139467*8.0+gcab*t139505*t139467*t139468*4.0+gamma_aa[index]*gcab* \
                   t139464*t139509*t139467*4.0)+ccab1*gamma_aa[index]*gcab*t139464*t139509*1.0/(t139466*t139466*t139466) \
                   *t139467*(4.0/3.0)+ccab3*gcab*t139533*t139464*t139537*t139467*t139468*1.0/(t139477*t139477*t139477) \
                   *2.0-ccab3*gamma_aa[index]*gcab*t139505*t139533*t139508*t139467*t139468*4.0-ccab4*gamma_aa[index]* \
                   t139513*t139505*t139464*t139518*t139468*t139469*(1.6E1/3.0))-t139586*(t139460+t139436*t139368*(t139459- \
                   c0p*t139331*t139329*2.0))-(t139401+t139502+t139503-t139460+t139484+t139354*(t139412-t139402*t139368* \
                   t139396*t139399*(t139412-(1.0/(t139383*t139383)*t139389*(b2f*c*t139365*(1.0/3.0)+b4f*t139403*t139318* \
                   (2.0/3.0)+b1f*c*t139404*t139365*(1.0/6.0)+b3f*c*t139365*t139357*(1.0/2.0)))/t139386+a1f*c*c0f*t139365* \
                   t139387*(2.0/3.0)-a1p*c*c0p*t139390*t139365*(2.0/3.0))-a1p*c*c0p*t139390*t139365*(2.0/3.0)-t139402* \
                   t139413*t139391*t139368*t139396*4.0+t139402*t139431*t139391*t139368*t139399+t139391*t139375*t139376* \
                   t139368*t139396*t139399*4.0-Aa*t139414*t139424*t139426*t139368*t139396*(t139402*t139413*4.0-t139375* \
                   t139376*t139399*4.0)*2.0+Aa*t139431*t139414*t139424*t139433*t139426*t139368*2.0+(1.0/(t139420*t139420) \
                   *t139414*t139433*t139426*t139368*t139396*(b2a*c*t139365*(1.0/3.0)+b4a*t139403*t139318*(2.0/3.0)+b1a* \
                   c*t139404*t139365*(1.0/6.0)+b3a*c*t139365*t139357*(1.0/2.0)))/t139423-Aa*a1a*c*t139414*t139424*t139433* \
                   t139365*t139368*t139396*(2.0/3.0))+rho_a[index]*(t139581-t139458+t139436*t139368*(t139580+t139458- \
                   t139438*t139573*t139574*t139579-a1p*c*c0p*t139329*t139447*(2.0/3.0))))*(ccab1*gcab*t139332*t139504* \
                   (1.0/2.0)-ccab1*t139332*t139506*t139464*t139467*(1.0/2.0)+ccab2*t139332*t139507*t139464*t139467-ccab2* \
                   t139510*t139524*t139467*t139468-ccab4*t139513*t139470*t139518*t139469+ccab4*t139332*t139512*t139464* \
                   t139468*t139469*2.0+ccab3*gcab*t139511*t139332*t139467*t139468*(3.0/2.0)-ccab3*gcab*t139533*t139508* \
                   t139464*t139467*t139468)-rho_a[index]*t139538*(ccaa1*gcaa*t139505*t139539*(-8.0/3.0)-ccaa2*gamma_aa[index]* \
                   t139334*t139541*t139509*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t139334*t139543*t139509*8.0+ccaa2*t139333* \
                   t139334*t139560*t139509*t139546*(1.6E1/3.0)+ccaa4*t139335*t139551*t139345*t139552*t139557*(3.2E1/3.0) \
                   +ccaa4*t139335*t139336*t139345*t139552*(gcaa*t139505*(3.2E1/3.0)+gamma_aa[index]*t139334*t139509*6.4E1+ \
                   gamma_aa[index]*t139333*t139335*t139551*(1.28E2/3.0)+gcaa*t139333*t139334*t139544*9.6E1)-ccaa1*gcaa* \
                   1.0/(t139340*t139340*t139340)*t139333*t139334*t139544*(1.6E1/3.0)+ccaa2*t139333*t139334*t139337*t139546* \
                   (gcaa*t139505*(1.6E1/3.0)+gamma_aa[index]*t139334*t139509*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t139333* \
                   t139540*t139335*t139551*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t139334*t139337*t139563*t139546*2.0-ccaa3* \
                   gcaa*t139333*t139334*t139542*t139544*2.4E1+ccaa4*gamma_aa[index]*t139333*t139335*t139336*t139552*t139572* \
                   4.0+ccaa3*gcaa*t139333*t139334*t139338*t139545*t139567*3.0-ccaa2*t139333*t139334*1.0/(t139353*t139353* \
                   t139353)*t139560*t139337*t139563*2.0-ccaa4*1.0/(t139350*t139350*t139350)*t139335*t139336*t139345*t139572* \
                   t139557*2.0+ccaa3*gamma_aa[index]*gcaa*t139333*t139334*t139338*t139545*(gcaa*t139505*8.0+gamma_aa[index]* \
                   t139334*t139509*3.2E1+gcaa*t139333*t139334*t139544*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t139333*t139334* \
                   t139550*t139544*t139545*8.0-ccaa3*gamma_aa[index]*gcaa*t139333*t139334*t139550*1.0/(t139344*t139344* \
                   t139344)*t139338*t139567*2.0)+rho_a[index]*t139586*(t139581-t139458+t139436*t139368*(t139580-t139581+ \
                   t139458-t139438*t139573*t139574*t139579))-c0*t139661*t139654*(omega*t139588*(omega*t139645*t139655* \
                   (2.778046668940015E15/1.40737488355328E14)+omega*t139588*((t139591*(1.0/3.0))/rho_a[index]+t139641* \
                   t139643*1.0/pow(t139587,5.0/3.0)*(2.778046668940015E15/1.40737488355328E14)-t139591*t139588*t139589* \
                   (2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t139642*t139635*t139591*(1.108777112152858E31/ \
                   1.584563250285287E29))*(4.0/3.0)-omega*t139646*t139655*(2.778046668940015E15/1.05553116266496E14)) \
                   -c0*t139654*t139648*(cx1*gx*t139505*t139649*(-8.0/3.0)+cx1*gamma_aa[index]*t139509*t139653*t139592* \
                   8.0-cx2*gamma_aa[index]*t139651*t139509*t139592*(3.2E1/3.0)+cx2*t139610*t139333*t139616*t139509*t139592* \
                   (1.6E1/3.0)+cx4*t139551*t139345*t139634*t139609*t139593*(3.2E1/3.0)+cx4*t139336*t139345*t139609*t139593* \
                   (gx*t139505*(3.2E1/3.0)+gamma_aa[index]*t139509*t139592*6.4E1+gamma_aa[index]*t139333*t139551*t139593* \
                   (1.28E2/3.0)+gx*t139333*t139544*t139592*9.6E1)-cx1*gx*t139333*t139544*t139592*1.0/(t139595*t139595* \
                   t139595)*(1.6E1/3.0)+cx2*t139610*t139333*t139337*t139592*(gx*t139505*(1.6E1/3.0)+gamma_aa[index]*t139509* \
                   t139592*(3.2E1/3.0))+cx2*gamma_aa[index]*t139610*t139613*t139337*t139592*2.0-cx4*gamma_aa[index]*t139333* \
                   t139551*t139650*t139593*(1.28E2/3.0)-cx3*gx*t139333*t139544*t139652*t139592*2.4E1+cx4*gamma_aa[index]* \
                   t139333*t139336*t139609*t139593*t139629*4.0+cx3*gx*t139333*t139603*t139624*t139338*t139592*3.0-cx2* \
                   1.0/(t139602*t139602*t139602)*t139333*t139613*t139337*t139616*t139592*2.0-cx4*t139336*t139345*t139634* \
                   1.0/(t139608*t139608*t139608)*t139593*t139629*2.0+cx3*gamma_aa[index]*gx*t139333*t139603*t139338*t139592* \
                   (gx*t139505*8.0+gamma_aa[index]*t139509*t139592*3.2E1+gx*t139333*t139544*t139592*2.4E1)+cx3*gamma_aa[index]* \
                   gx*t139620*t139333*t139603*t139544*t139592*8.0-cx3*gamma_aa[index]*gx*t139620*t139333*t139624*t139338* \
                   t139592*1.0/(t139599*t139599*t139599)*2.0)-c0*pow(rho_a[index],1.0/3.0)*t139661*t139648*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t142151 = 1.0/pow(rho_a[index],1.0/3.0);
                double t142152 = c*t142151;
                double t142153 = sqrt(t142152);
                double t142154 = pow(t142152,3.0/2.0);
                double t142155 = c*c;
                double t142156 = 1.0/pow(rho_a[index],2.0/3.0);
                double t142157 = 1.0/c0p;
                double t142158 = b1p*t142153;
                double t142159 = b3p*t142154;
                double t142160 = b4p*t142155*t142156;
                double t142161 = b2p*c*t142151;
                double t142162 = t142160+t142161+t142158+t142159;
                double t142163 = 1.0/t142162;
                double t142164 = t142163*t142157*(1.0/2.0);
                double t142165 = t142164+1.0;
                double t142166 = log(t142165);
                double t142167 = a1p*c*t142151;
                double t142168 = t142167+1.0;
                double t142169 = 1.0/pow(rho_a[index],8.0/3.0);
                double t142170 = gamma_aa[index]*gamma_aa[index];
                double t142171 = gcaa*gcaa;
                double t142172 = t142171*t142171;
                double t142173 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t142174 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t142175 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t142176 = gamma_aa[index]*gcaa*t142169;
                double t142177 = t142176+1.0;
                double t142178 = gamma_aa[index]*gcaa*t142169*3.0;
                double t142179 = gamma_aa[index]*gcaa*t142170*t142171*t142175;
                double t142180 = t142170*t142171*t142174*3.0;
                double t142181 = t142180+t142178+t142179+1.0;
                double t142182 = t142170*t142170;
                double t142183 = gamma_aa[index]*gcaa*t142169*4.0;
                double t142184 = gamma_aa[index]*gcaa*t142170*t142171*t142175*4.0;
                double t142185 = t142170*t142171*t142174*6.0;
                double t142186 = t142172*t142173*t142182;
                double t142187 = t142183+t142184+t142185+t142186+1.0;
                double t142188 = gamma_aa[index]*gcaa*t142169*2.0;
                double t142189 = t142170*t142171*t142174;
                double t142190 = t142188+t142189+1.0;
                double t142191 = pow(2.0,1.0/3.0);
                double t142192 = t142191*2.0;
                double t142193 = t142192-2.0;
                double t142194 = two_13*2.0;
                double t142195 = t142194-2.0;
                double t142196 = 1.0/t142195;
                double t142197 = 1.0/c0f;
                double t142198 = b1f*t142153;
                double t142199 = b3f*t142154;
                double t142200 = b4f*t142155*t142156;
                double t142201 = b2f*c*t142151;
                double t142202 = t142200+t142201+t142198+t142199;
                double t142203 = 1.0/t142202;
                double t142204 = t142203*t142197*(1.0/2.0);
                double t142205 = t142204+1.0;
                double t142206 = log(t142205);
                double t142207 = a1f*c*t142151;
                double t142208 = t142207+1.0;
                double t142209 = c0f*t142206*t142208*2.0;
                double t142210 = c0p*t142166*t142168*2.0;
                double t142211 = 1.0/t142177;
                double t142212 = 1.0/t142187;
                double t142213 = 1.0/t142190;
                double t142214 = 1.0/t142181;
                double t142215 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t142216 = 1.0/(t142177*t142177);
                double t142217 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t142218 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t142219 = 1.0/(t142181*t142181);
                double t142220 = 1.0/(t142190*t142190);
                double t142221 = gcaa*t142169*3.0;
                double t142222 = gamma_aa[index]*t142171*t142174*6.0;
                double t142223 = gcaa*t142170*t142171*t142175*3.0;
                double t142224 = t142221+t142222+t142223;
                double t142225 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t142226 = 1.0/(t142187*t142187);
                double t142227 = gcaa*t142169*4.0;
                double t142228 = gamma_aa[index]*t142171*t142174*1.2E1;
                double t142229 = gcaa*t142170*t142171*t142175*1.2E1;
                double t142230 = gamma_aa[index]*t142170*t142172*t142173*4.0;
                double t142231 = t142230+t142227+t142228+t142229;
                double t142232 = gcaa*t142169*2.0;
                double t142233 = gamma_aa[index]*t142171*t142174*2.0;
                double t142234 = t142232+t142233;
                double t142235 = gamma_aa[index]*gcaa*t142218*(1.6E1/3.0);
                double t142236 = t142170*t142215*t142171*(1.6E1/3.0);
                double t142237 = t142235+t142236;
                double t142238 = gamma_aa[index]*gcaa*t142218*8.0;
                double t142239 = gamma_aa[index]*gcaa*t142170*t142171*t142217*8.0;
                double t142240 = t142170*t142215*t142171*1.6E1;
                double t142241 = t142240+t142238+t142239;
                double t142242 = gamma_aa[index]*gcaa*t142218*(3.2E1/3.0);
                double t142243 = gamma_aa[index]*gcaa*t142170*t142171*t142217*3.2E1;
                double t142244 = t142170*t142215*t142171*3.2E1;
                double t142245 = t142225*t142172*t142182*(3.2E1/3.0);
                double t142246 = t142242+t142243+t142244+t142245;
                double t142247 = 1.0/pow(rho_a[index],4.0/3.0);
                double t142248 = 1.0/pow(rho_a[index],5.0/3.0);
                double t142249 = 1.0/sqrt(t142152);
                double t142250 = 1.0/t142165;
                double t142251 = 1.0/(t142162*t142162);
                double t142252 = b4p*t142155*t142248*(2.0/3.0);
                double t142253 = b2p*c*t142247*(1.0/3.0);
                double t142254 = b1p*c*t142247*t142249*(1.0/6.0);
                double t142255 = b3p*c*t142153*t142247*(1.0/2.0);
                double t142256 = t142252+t142253+t142254+t142255;
                double t142257 = t142250*t142251*t142256*t142168;
                double t142258 = ccaa1*gcaa*t142211*t142169;
                double t142259 = ccaa4*gamma_aa[index]*t142212*t142170*t142172*t142173*4.0;
                double t142260 = ccaa2*gamma_aa[index]*t142213*t142171*t142174*2.0;
                double t142261 = ccaa3*gcaa*t142214*t142170*t142171*t142175*3.0;
                double t142262 = t142260+t142261+t142258+t142259-ccaa1*gamma_aa[index]*t142171*t142216*t142174-ccaa2* \
                   t142220*t142170*t142171*t142234*t142174-ccaa4*t142231*t142172*t142226*t142173*t142182-ccaa3*gamma_aa[index]* \
                   gcaa*t142170*t142224*t142171*t142219*t142175;
                double t142263 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t142264 = 1.0/pow(t142263,1.0/3.0);
                double t142265 = 1.0/(omega*omega);
                double t142266 = pow(t142263,2.0/3.0);
                double t142316 = t142265*t142266;
                double t142267 = exp(-t142316);
                double t142268 = gx*gx;
                double t142269 = t142268*t142268;
                double t142270 = gamma_aa[index]*gx*t142169;
                double t142271 = t142270+1.0;
                double t142272 = gamma_aa[index]*gx*t142169*3.0;
                double t142273 = gamma_aa[index]*gx*t142170*t142175*t142268;
                double t142274 = t142170*t142174*t142268*3.0;
                double t142275 = t142272+t142273+t142274+1.0;
                double t142276 = gamma_aa[index]*gx*t142169*2.0;
                double t142277 = t142170*t142174*t142268;
                double t142278 = t142276+t142277+1.0;
                double t142279 = 1.0/(t142275*t142275);
                double t142280 = gamma_aa[index]*gx*t142169*4.0;
                double t142281 = gamma_aa[index]*gx*t142170*t142175*t142268*4.0;
                double t142282 = t142170*t142174*t142268*6.0;
                double t142283 = t142173*t142182*t142269;
                double t142284 = t142280+t142281+t142282+t142283+1.0;
                double t142285 = 1.0/(t142284*t142284);
                double t142286 = 1.0/(t142278*t142278);
                double t142287 = gamma_aa[index]*gx*t142218*(1.6E1/3.0);
                double t142288 = t142170*t142215*t142268*(1.6E1/3.0);
                double t142289 = t142287+t142288;
                double t142290 = gx*t142169*2.0;
                double t142291 = gamma_aa[index]*t142174*t142268*2.0;
                double t142292 = t142290+t142291;
                double t142293 = gx*t142169*3.0;
                double t142294 = gamma_aa[index]*t142174*t142268*6.0;
                double t142295 = gx*t142170*t142175*t142268*3.0;
                double t142296 = t142293+t142294+t142295;
                double t142297 = gamma_aa[index]*gx*t142218*8.0;
                double t142298 = gamma_aa[index]*gx*t142170*t142217*t142268*8.0;
                double t142299 = t142170*t142215*t142268*1.6E1;
                double t142300 = t142297+t142298+t142299;
                double t142301 = gamma_aa[index]*gx*t142218*(3.2E1/3.0);
                double t142302 = gamma_aa[index]*gx*t142170*t142217*t142268*3.2E1;
                double t142303 = t142170*t142215*t142268*3.2E1;
                double t142304 = t142225*t142182*t142269*(3.2E1/3.0);
                double t142305 = t142301+t142302+t142303+t142304;
                double t142306 = gx*t142169*4.0;
                double t142307 = gamma_aa[index]*t142174*t142268*1.2E1;
                double t142308 = gx*t142170*t142175*t142268*1.2E1;
                double t142309 = gamma_aa[index]*t142170*t142173*t142269*4.0;
                double t142310 = t142306+t142307+t142308+t142309;
                double t142311 = 1.0/omega;
                double t142312 = pow(t142263,1.0/3.0);
                double t142313 = t142311*t142312;
                double t142314 = erf(t142313);
                double t142315 = t142314*(3.991211251234741E15/2.251799813685248E15);
                double t142317 = omega*omega;
                double t142318 = 1.0/pow(t142263,2.0/3.0);
                double t142319 = t142267-1.0;
                double t142320 = t142317*t142318*t142319*(1.0/2.0);
                double t142321 = t142320-t142267+3.0/2.0;
                double t142332 = omega*t142321*t142264;
                double t142322 = -t142332+t142315;
                double t142323 = omega*t142322*t142264*(4.0/3.0);
                double t142324 = t142323-1.0;
                double t142325 = 1.0/t142271;
                double t142326 = 1.0/t142284;
                double t142327 = 1.0/t142278;
                double t142328 = 1.0/t142275;
                double t142329 = 1.0/(t142271*t142271);
                double t142330 = pow(rho_a[index],4.0/3.0);
                double t142331 = 1.0/pow(t142263,4.0/3.0);
                double t142333 = cx1*gx*t142325*t142169;
                double t142334 = cx4*gamma_aa[index]*t142170*t142173*t142326*t142269*4.0;
                double t142335 = cx2*gamma_aa[index]*t142174*t142327*t142268*2.0;
                double t142336 = cx3*gx*t142170*t142175*t142328*t142268*3.0;
                double t142337 = t142333+t142334+t142335+t142336-cx1*gamma_aa[index]*t142174*t142329*t142268-cx2* \
                   t142170*t142174*t142292*t142268*t142286-cx4*t142310*t142173*t142182*t142285*t142269-cx3*gamma_aa[index]* \
                   gx*t142170*t142175*t142268*t142296*t142279;
                v_rho_a_gamma_aa_[index] = -t142262*(t142210+t142193*t142196*(t142209-c0p*t142166*t142168*2.0))+rho_a[index]* \
                   t142262*(-t142257+t142193*t142196*(t142257-(1.0/(t142202*t142202)*t142208*(b2f*c*t142247*(1.0/3.0) \
                   +b4f*t142155*t142248*(2.0/3.0)+b1f*c*t142247*t142249*(1.0/6.0)+b3f*c*t142153*t142247*(1.0/2.0)))/t142205+ \
                   a1f*c*c0f*t142206*t142247*(2.0/3.0)-a1p*c*c0p*t142166*t142247*(2.0/3.0))+a1p*c*c0p*t142166*t142247* \
                   (2.0/3.0))-rho_a[index]*(t142210-t142193*t142196*(t142210-t142209))*(ccaa1*gcaa*t142211*t142218*(- \
                   8.0/3.0)-ccaa2*gamma_aa[index]*t142213*t142215*t142171*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t142215*t142171* \
                   t142216*8.0+ccaa2*t142220*t142170*t142215*t142171*t142234*(1.6E1/3.0)+ccaa4*t142231*t142225*t142172* \
                   t142226*t142182*(3.2E1/3.0)+ccaa4*t142172*t142226*t142173*t142182*(gcaa*t142218*(3.2E1/3.0)+gamma_aa[index]* \
                   t142215*t142171*6.4E1+gamma_aa[index]*t142170*t142225*t142172*(1.28E2/3.0)+gcaa*t142170*t142171*t142217* \
                   9.6E1)-ccaa1*gcaa*t142170*t142171*t142217*1.0/(t142177*t142177*t142177)*(1.6E1/3.0)+ccaa2*t142220* \
                   t142170*t142171*t142174*(gcaa*t142218*(1.6E1/3.0)+gamma_aa[index]*t142215*t142171*(3.2E1/3.0))-ccaa4* \
                   gamma_aa[index]*t142212*t142170*t142225*t142172*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t142220*t142171* \
                   t142174*t142237*2.0-ccaa3*gcaa*t142214*t142170*t142171*t142217*2.4E1+ccaa4*gamma_aa[index]*t142170* \
                   t142172*t142226*t142173*t142246*4.0+ccaa3*gcaa*t142241*t142170*t142171*t142219*t142175*3.0-ccaa2*t142170* \
                   t142171*t142234*1.0/(t142190*t142190*t142190)*t142174*t142237*2.0-ccaa4*t142231*t142172*t142173*t142182* \
                   t142246*1.0/(t142187*t142187*t142187)*2.0+ccaa3*gamma_aa[index]*gcaa*t142170*t142171*t142219*t142175* \
                   (gcaa*t142218*8.0+gamma_aa[index]*t142215*t142171*3.2E1+gcaa*t142170*t142171*t142217*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t142170*t142224*t142171*t142217*t142219*8.0-ccaa3*gamma_aa[index]*gcaa*t142241* \
                   t142170*t142224*t142171*1.0/(t142181*t142181*t142181)*t142175*2.0)-c0*t142330*t142337*(omega*t142264* \
                   (omega*t142321*t142331*(2.778046668940015E15/1.40737488355328E14)+omega*t142264*((t142267*(1.0/3.0) \
                   )/rho_a[index]+1.0/pow(t142263,5.0/3.0)*t142317*t142319*(2.778046668940015E15/1.40737488355328E14) \
                   -t142264*t142265*t142267*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t142311* \
                   t142318*t142267*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t142322*t142331*(2.778046668940015E15/ \
                   1.05553116266496E14))-c0*t142330*t142324*(cx1*gx*t142325*t142218*(-8.0/3.0)+cx1*gamma_aa[index]*t142215* \
                   t142329*t142268*8.0-cx2*gamma_aa[index]*t142215*t142327*t142268*(3.2E1/3.0)+cx2*t142170*t142215*t142292* \
                   t142268*t142286*(1.6E1/3.0)+cx4*t142310*t142225*t142182*t142285*t142269*(3.2E1/3.0)+cx4*t142173*t142182* \
                   t142285*t142269*(gx*t142218*(3.2E1/3.0)+gamma_aa[index]*t142215*t142268*6.4E1+gamma_aa[index]*t142170* \
                   t142225*t142269*(1.28E2/3.0)+gx*t142170*t142217*t142268*9.6E1)-cx1*gx*t142170*t142217*1.0/(t142271* \
                   t142271*t142271)*t142268*(1.6E1/3.0)+cx2*t142170*t142174*t142268*t142286*(gx*t142218*(1.6E1/3.0)+gamma_aa[index]* \
                   t142215*t142268*(3.2E1/3.0))+cx2*gamma_aa[index]*t142174*t142268*t142286*t142289*2.0-cx4*gamma_aa[index]* \
                   t142170*t142225*t142326*t142269*(1.28E2/3.0)-cx3*gx*t142170*t142217*t142328*t142268*2.4E1+cx4*gamma_aa[index]* \
                   t142170*t142305*t142173*t142285*t142269*4.0+cx3*gx*t142300*t142170*t142175*t142268*t142279*3.0-cx2* \
                   t142170*t142174*t142292*t142268*1.0/(t142278*t142278*t142278)*t142289*2.0-cx4*t142310*t142305*t142173* \
                   t142182*1.0/(t142284*t142284*t142284)*t142269*2.0+cx3*gamma_aa[index]*gx*t142170*t142175*t142268*t142279* \
                   (gx*t142218*8.0+gamma_aa[index]*t142215*t142268*3.2E1+gx*t142170*t142217*t142268*2.4E1)+cx3*gamma_aa[index]* \
                   gx*t142170*t142217*t142268*t142296*t142279*8.0-cx3*gamma_aa[index]*gx*t142300*t142170*t142175*1.0/ \
                   (t142275*t142275*t142275)*t142268*t142296*2.0)-c0*pow(rho_a[index],1.0/3.0)*t142324*t142337*(4.0/3.0) \
                   ;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t139664 = rho_a[index]+rho_b[index];
                double t139665 = 1.0/pow(t139664,1.0/3.0);
                double t139666 = c*t139665;
                double t139667 = sqrt(t139666);
                double t139668 = b1p*t139667;
                double t139669 = pow(t139666,3.0/2.0);
                double t139670 = b3p*t139669;
                double t139671 = c*c;
                double t139672 = 1.0/pow(t139664,2.0/3.0);
                double t139673 = b4p*t139671*t139672;
                double t139674 = b2p*c*t139665;
                double t139675 = t139670+t139673+t139674+t139668;
                double t139676 = 1.0/pow(t139664,4.0/3.0);
                double t139677 = 1.0/c0p;
                double t139678 = 1.0/t139675;
                double t139679 = t139677*t139678*(1.0/2.0);
                double t139680 = t139679+1.0;
                double t139681 = a1p*c*t139665;
                double t139682 = t139681+1.0;
                double t139683 = rho_a[index]-rho_b[index];
                double t139684 = t139683*t139683;
                double t139685 = 1.0/t139664;
                double t139686 = t139683*t139685;
                double t139687 = two_13*2.0;
                double t139688 = t139687-2.0;
                double t139689 = 1.0/t139688;
                double t139690 = 1.0/c0f;
                double t139691 = b1f*t139667;
                double t139692 = b3f*t139669;
                double t139693 = b4f*t139671*t139672;
                double t139694 = b2f*c*t139665;
                double t139695 = t139691+t139692+t139693+t139694;
                double t139696 = 1.0/t139695;
                double t139697 = t139690*t139696*(1.0/2.0);
                double t139698 = t139697+1.0;
                double t139699 = log(t139698);
                double t139700 = a1f*c*t139665;
                double t139701 = t139700+1.0;
                double t139702 = log(t139680);
                double t139712 = c0f*t139701*t139699*2.0;
                double t139713 = c0p*t139702*t139682*2.0;
                double t139703 = t139712-t139713;
                double t139704 = t139686+1.0;
                double t139705 = pow(t139704,4.0/3.0);
                double t139706 = -t139686+1.0;
                double t139707 = pow(t139706,4.0/3.0);
                double t139708 = t139705+t139707-2.0;
                double t139709 = 1.0/(t139664*t139664);
                double t139740 = t139709*t139683;
                double t139710 = -t139740+t139685;
                double t139711 = 1.0/(t139664*t139664*t139664*t139664);
                double t139714 = t139684*t139684;
                double t139715 = 1.0/pow(t139664,5.0/3.0);
                double t139716 = 1.0/sqrt(t139666);
                double t139717 = 1.0/t139680;
                double t139718 = 1.0/(t139675*t139675);
                double t139719 = b4p*t139715*t139671*(2.0/3.0);
                double t139720 = b2p*c*t139676*(1.0/3.0);
                double t139721 = b1p*c*t139716*t139676*(1.0/6.0);
                double t139722 = b3p*c*t139667*t139676*(1.0/2.0);
                double t139723 = t139720+t139721+t139722+t139719;
                double t139724 = t139723*t139717*t139682*t139718;
                double t139725 = 1.0/(t139664*t139664*t139664*t139664*t139664);
                double t139726 = 1.0/d2fz0;
                double t139727 = 1.0/Aa;
                double t139728 = b1a*t139667;
                double t139729 = b3a*t139669;
                double t139730 = b4a*t139671*t139672;
                double t139731 = b2a*c*t139665;
                double t139732 = t139730+t139731+t139728+t139729;
                double t139733 = 1.0/t139732;
                double t139734 = t139733*t139727*(1.0/2.0);
                double t139735 = t139734+1.0;
                double t139736 = log(t139735);
                double t139737 = a1a*c*t139665;
                double t139738 = t139737+1.0;
                double t139739 = pow(t139704,1.0/3.0);
                double t139741 = t139710*t139739*(4.0/3.0);
                double t139742 = pow(t139706,1.0/3.0);
                double t139743 = t139741-t139710*t139742*(4.0/3.0);
                double t139744 = t139711*t139714;
                double t139745 = t139744-1.0;
                double t139746 = 1.0/pow(rho_a[index],1.0/3.0);
                double t139747 = c*t139746;
                double t139748 = sqrt(t139747);
                double t139749 = b1f*t139748;
                double t139750 = pow(t139747,3.0/2.0);
                double t139751 = b3f*t139750;
                double t139752 = 1.0/pow(rho_a[index],2.0/3.0);
                double t139753 = b4f*t139671*t139752;
                double t139754 = b2f*c*t139746;
                double t139755 = t139751+t139753+t139754+t139749;
                double t139756 = 1.0/pow(rho_a[index],4.0/3.0);
                double t139757 = b1p*t139748;
                double t139758 = b3p*t139750;
                double t139759 = b4p*t139671*t139752;
                double t139760 = b2p*c*t139746;
                double t139761 = t139760+t139757+t139758+t139759;
                double t139762 = 1.0/pow(rho_a[index],5.0/3.0);
                double t139763 = 1.0/sqrt(t139747);
                double t139764 = 1.0/t139755;
                double t139765 = t139690*t139764*(1.0/2.0);
                double t139766 = t139765+1.0;
                double t139767 = 1.0/t139761;
                double t139768 = t139677*t139767*(1.0/2.0);
                double t139769 = t139768+1.0;
                double t139770 = a1p*c*t139746;
                double t139771 = t139770+1.0;
                double t139772 = 1.0/t139769;
                double t139773 = 1.0/(t139761*t139761);
                double t139774 = b4p*t139671*t139762*(2.0/3.0);
                double t139775 = b2p*c*t139756*(1.0/3.0);
                double t139776 = b1p*c*t139763*t139756*(1.0/6.0);
                double t139777 = b3p*c*t139756*t139748*(1.0/2.0);
                double t139778 = t139774+t139775+t139776+t139777;
                double t139779 = t139771*t139772*t139773*t139778;
                double t139780 = log(t139769);
                double t139781 = pow(2.0,1.0/3.0);
                double t139782 = t139781*2.0;
                double t139783 = t139782-2.0;
                double t139784 = log(t139766);
                double t139785 = a1f*c*t139746;
                double t139786 = t139785+1.0;
                double t139787 = 1.0/pow(rho_b[index],8.0/3.0);
                double t139788 = 1.0/pow(rho_a[index],8.0/3.0);
                double t139789 = gamma_aa[index]*t139788*(1.0/2.0);
                double t139790 = gamma_bb[index]*t139787*(1.0/2.0);
                double t139791 = t139790+t139789;
                double t139792 = gcab*t139791;
                double t139793 = t139792+1.0;
                double t139794 = gcab*gcab;
                double t139795 = t139791*t139791;
                double t139796 = t139794*t139794;
                double t139797 = t139795*t139795;
                double t139798 = t139794*t139795;
                double t139799 = gcab*t139791*2.0;
                double t139800 = t139798+t139799+1.0;
                double t139801 = t139794*t139795*3.0;
                double t139802 = gcab*t139791*t139794*t139795;
                double t139803 = gcab*t139791*3.0;
                double t139804 = t139801+t139802+t139803+1.0;
                double t139805 = t139794*t139795*6.0;
                double t139806 = gcab*t139791*t139794*t139795*4.0;
                double t139807 = t139796*t139797;
                double t139808 = gcab*t139791*4.0;
                double t139809 = t139805+t139806+t139807+t139808+1.0;
                double t139810 = c0f*t139784*t139786*2.0;
                double t139812 = c0p*t139771*t139780*2.0;
                double t139811 = t139810-t139812;
                double t139813 = 1.0/pow(rho_b[index],1.0/3.0);
                double t139814 = c*t139813;
                double t139815 = sqrt(t139814);
                double t139816 = pow(t139814,3.0/2.0);
                double t139817 = 1.0/pow(rho_b[index],2.0/3.0);
                double t139818 = b1p*t139815;
                double t139819 = b3p*t139816;
                double t139820 = b4p*t139671*t139817;
                double t139821 = b2p*c*t139813;
                double t139822 = t139820+t139821+t139818+t139819;
                double t139823 = 1.0/t139822;
                double t139824 = t139823*t139677*(1.0/2.0);
                double t139825 = t139824+1.0;
                double t139826 = log(t139825);
                double t139827 = a1p*c*t139813;
                double t139828 = t139827+1.0;
                double t139829 = c0p*t139826*t139828*2.0;
                double t139830 = t139711*t139703*t139714*t139708*t139689;
                double t139831 = Aa*t139708*t139726*t139736*t139745*t139738*t139689*2.0;
                double t139832 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t139833 = 1.0/(t139804*t139804);
                double t139834 = 1.0/(t139809*t139809);
                double t139835 = gcab*t139787*2.0;
                double t139836 = t139791*t139794*t139787*6.0;
                double t139837 = gcab*t139794*t139795*t139787*6.0;
                double t139838 = t139791*t139795*t139787*t139796*2.0;
                double t139839 = t139835+t139836+t139837+t139838;
                double t139840 = 1.0/(t139800*t139800);
                double t139841 = gamma_aa[index]*gcab*t139832*(8.0/3.0);
                double t139842 = gamma_aa[index]*t139832*t139791*t139794*(8.0/3.0);
                double t139843 = t139841+t139842;
                double t139844 = gcab*t139787;
                double t139845 = t139791*t139794*t139787;
                double t139846 = t139844+t139845;
                double t139847 = gamma_aa[index]*gcab*t139832*(1.6E1/3.0);
                double t139848 = gamma_aa[index]*gcab*t139832*t139794*t139795*1.6E1;
                double t139849 = gamma_aa[index]*t139832*t139791*t139795*t139796*(1.6E1/3.0);
                double t139850 = gamma_aa[index]*t139832*t139791*t139794*1.6E1;
                double t139851 = t139850+t139847+t139848+t139849;
                double t139852 = 1.0/(t139793*t139793);
                double t139853 = 1.0/t139800;
                double t139854 = gcab*t139787*(3.0/2.0);
                double t139855 = t139791*t139794*t139787*3.0;
                double t139856 = gcab*t139794*t139795*t139787*(3.0/2.0);
                double t139857 = t139854+t139855+t139856;
                double t139858 = gamma_aa[index]*gcab*t139832*4.0;
                double t139859 = gamma_aa[index]*gcab*t139832*t139794*t139795*4.0;
                double t139860 = gamma_aa[index]*t139832*t139791*t139794*8.0;
                double t139861 = t139860+t139858+t139859;
                double t139862 = 1.0/t139804;
                double t139863 = 1.0/t139809;
                v_rho_a_gamma_bb_[index] = -(t139713+t139830+t139831+t139664*(t139724-t139711*t139714*t139708*t139689* \
                   (t139724-(t139701*1.0/(t139695*t139695)*(b2f*c*t139676*(1.0/3.0)+b4f*t139715*t139671*(2.0/3.0)+b1f* \
                   c*t139716*t139676*(1.0/6.0)+b3f*c*t139667*t139676*(1.0/2.0)))/t139698+a1f*c*c0f*t139676*t139699*(2.0/ \
                   3.0)-a1p*c*c0p*t139702*t139676*(2.0/3.0))-a1p*c*c0p*t139702*t139676*(2.0/3.0)+t139711*t139703*t139714* \
                   t139743*t139689-t139703*t139714*t139725*t139708*t139689*4.0+t139711*t139703*t139708*t139683*t139684* \
                   t139689*4.0-Aa*t139708*t139726*t139736*t139738*t139689*(t139714*t139725*4.0-t139711*t139683*t139684* \
                   4.0)*2.0+Aa*t139743*t139726*t139736*t139745*t139738*t139689*2.0+(1.0/(t139732*t139732)*t139708*t139726* \
                   t139745*t139738*t139689*(b2a*c*t139676*(1.0/3.0)+b4a*t139715*t139671*(2.0/3.0)+b1a*c*t139716*t139676* \
                   (1.0/6.0)+b3a*c*t139667*t139676*(1.0/2.0)))/t139735-Aa*a1a*c*t139708*t139726*t139736*t139745*t139676* \
                   t139689*(2.0/3.0))+rho_a[index]*(-t139779+t139783*t139689*(t139779-(1.0/(t139755*t139755)*t139786* \
                   (b2f*c*t139756*(1.0/3.0)+b4f*t139671*t139762*(2.0/3.0)+b1f*c*t139763*t139756*(1.0/6.0)+b3f*c*t139756* \
                   t139748*(1.0/2.0)))/t139766+a1f*c*c0f*t139756*t139784*(2.0/3.0)-a1p*c*c0p*t139780*t139756*(2.0/3.0) \
                   )+a1p*c*c0p*t139780*t139756*(2.0/3.0))-c0p*t139771*t139780*2.0-t139811*t139783*t139689)*((ccab1*gcab* \
                   t139787*(1.0/2.0))/t139793-ccab2*t139840*t139846*t139794*t139795-ccab1*t139852*t139791*t139794*t139787* \
                   (1.0/2.0)+ccab2*t139853*t139791*t139794*t139787-ccab4*t139834*t139839*t139796*t139797+ccab4*t139791* \
                   t139863*t139795*t139787*t139796*2.0+ccab3*gcab*t139862*t139794*t139795*t139787*(3.0/2.0)-ccab3*gcab* \
                   t139833*t139791*t139794*t139857*t139795)+(rho_a[index]*(t139812+t139811*t139783*t139689)+rho_b[index]* \
                   (t139829-t139783*t139689*(t139829-c0f*log((t139690*(1.0/2.0))/(b1f*t139815+b3f*t139816+b2f*c*t139813+ \
                   b4f*t139671*t139817)+1.0)*(a1f*c*t139813+1.0)*2.0))-t139664*(t139713+t139830+t139831))*(ccab4*t139834* \
                   t139796*t139797*(gamma_aa[index]*t139832*t139794*t139787*8.0+gamma_aa[index]*t139832*t139795*t139787* \
                   t139796*8.0+gamma_aa[index]*gcab*t139832*t139791*t139794*t139787*1.6E1)+ccab2*t139840*t139843*t139791* \
                   t139794*t139787-ccab2*1.0/(t139800*t139800*t139800)*t139843*t139846*t139794*t139795*2.0-ccab4*t139851* \
                   1.0/(t139809*t139809*t139809)*t139839*t139796*t139797*2.0+ccab1*gamma_aa[index]*t139832*t139852*t139794* \
                   t139787*(4.0/3.0)-ccab2*gamma_aa[index]*t139832*t139853*t139794*t139787*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t139840*t139832*t139791*t139846*t139794*(8.0/3.0)+ccab2*gamma_aa[index]*t139840*t139832*t139795*t139787* \
                   t139796*(4.0/3.0)-ccab4*gamma_aa[index]*t139832*t139863*t139795*t139787*t139796*8.0+ccab3*gcab*t139833* \
                   t139861*t139794*t139795*t139787*(3.0/2.0)+ccab4*t139851*t139834*t139791*t139795*t139787*t139796*2.0+ \
                   ccab3*gcab*t139833*t139791*t139794*t139795*(gamma_aa[index]*t139832*t139794*t139787*4.0+gamma_aa[index]* \
                   gcab*t139832*t139791*t139794*t139787*4.0)-ccab1*gamma_aa[index]*gcab*t139832*t139791*1.0/(t139793* \
                   t139793*t139793)*t139794*t139787*(4.0/3.0)-ccab3*gcab*1.0/(t139804*t139804*t139804)*t139861*t139791* \
                   t139794*t139857*t139795*2.0+ccab3*gamma_aa[index]*gcab*t139832*t139833*t139794*t139857*t139795*4.0- \
                   ccab3*gamma_aa[index]*gcab*t139832*t139862*t139791*t139794*t139787*4.0+ccab4*gamma_aa[index]*t139832* \
                   t139834*t139791*t139839*t139795*t139796*(1.6E1/3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t139865 = rho_a[index]+rho_b[index];
                double t139866 = 1.0/pow(t139865,1.0/3.0);
                double t139867 = c*t139866;
                double t139868 = sqrt(t139867);
                double t139869 = b1p*t139868;
                double t139870 = pow(t139867,3.0/2.0);
                double t139871 = b3p*t139870;
                double t139872 = c*c;
                double t139873 = 1.0/pow(t139865,2.0/3.0);
                double t139874 = b4p*t139872*t139873;
                double t139875 = b2p*c*t139866;
                double t139876 = t139871+t139874+t139875+t139869;
                double t139877 = 1.0/pow(t139865,4.0/3.0);
                double t139878 = 1.0/c0p;
                double t139879 = 1.0/t139876;
                double t139880 = t139878*t139879*(1.0/2.0);
                double t139881 = t139880+1.0;
                double t139882 = a1p*c*t139866;
                double t139883 = t139882+1.0;
                double t139884 = rho_a[index]-rho_b[index];
                double t139885 = t139884*t139884;
                double t139886 = 1.0/t139865;
                double t139887 = t139884*t139886;
                double t139888 = two_13*2.0;
                double t139889 = t139888-2.0;
                double t139890 = 1.0/t139889;
                double t139891 = 1.0/c0f;
                double t139892 = b1f*t139868;
                double t139893 = b3f*t139870;
                double t139894 = b4f*t139872*t139873;
                double t139895 = b2f*c*t139866;
                double t139896 = t139892+t139893+t139894+t139895;
                double t139897 = 1.0/t139896;
                double t139898 = t139891*t139897*(1.0/2.0);
                double t139899 = t139898+1.0;
                double t139900 = log(t139899);
                double t139901 = a1f*c*t139866;
                double t139902 = t139901+1.0;
                double t139903 = log(t139881);
                double t139914 = c0f*t139900*t139902*2.0;
                double t139915 = c0p*t139903*t139883*2.0;
                double t139904 = t139914-t139915;
                double t139905 = t139887+1.0;
                double t139906 = pow(t139905,4.0/3.0);
                double t139907 = -t139887+1.0;
                double t139908 = pow(t139907,4.0/3.0);
                double t139909 = t139906+t139908-2.0;
                double t139910 = 1.0/(t139865*t139865);
                double t139911 = t139910*t139884;
                double t139912 = t139911+t139886;
                double t139913 = 1.0/(t139865*t139865*t139865*t139865);
                double t139916 = t139885*t139885;
                double t139917 = 1.0/pow(t139865,5.0/3.0);
                double t139918 = 1.0/sqrt(t139867);
                double t139919 = 1.0/t139881;
                double t139920 = 1.0/(t139876*t139876);
                double t139921 = b4p*t139872*t139917*(2.0/3.0);
                double t139922 = b2p*c*t139877*(1.0/3.0);
                double t139923 = b1p*c*t139918*t139877*(1.0/6.0);
                double t139924 = b3p*c*t139868*t139877*(1.0/2.0);
                double t139925 = t139921+t139922+t139923+t139924;
                double t139926 = 1.0/(t139865*t139865*t139865*t139865*t139865);
                double t139927 = 1.0/d2fz0;
                double t139928 = 1.0/Aa;
                double t139929 = b1a*t139868;
                double t139930 = b3a*t139870;
                double t139931 = b4a*t139872*t139873;
                double t139932 = b2a*c*t139866;
                double t139933 = t139930+t139931+t139932+t139929;
                double t139934 = 1.0/t139933;
                double t139935 = t139934*t139928*(1.0/2.0);
                double t139936 = t139935+1.0;
                double t139937 = log(t139936);
                double t139938 = a1a*c*t139866;
                double t139939 = t139938+1.0;
                double t139940 = pow(t139905,1.0/3.0);
                double t139941 = t139912*t139940*(4.0/3.0);
                double t139942 = pow(t139907,1.0/3.0);
                double t139943 = t139941-t139912*t139942*(4.0/3.0);
                double t139944 = t139913*t139916;
                double t139945 = t139944-1.0;
                double t139946 = 1.0/pow(rho_b[index],1.0/3.0);
                double t139947 = c*t139946;
                double t139948 = sqrt(t139947);
                double t139949 = b1f*t139948;
                double t139950 = pow(t139947,3.0/2.0);
                double t139951 = b3f*t139950;
                double t139952 = 1.0/pow(rho_b[index],2.0/3.0);
                double t139953 = b4f*t139952*t139872;
                double t139954 = b2f*c*t139946;
                double t139955 = t139951+t139953+t139954+t139949;
                double t139956 = 1.0/pow(rho_b[index],4.0/3.0);
                double t139957 = b1p*t139948;
                double t139958 = b3p*t139950;
                double t139959 = b4p*t139952*t139872;
                double t139960 = b2p*c*t139946;
                double t139961 = t139960+t139957+t139958+t139959;
                double t139962 = 1.0/pow(rho_b[index],5.0/3.0);
                double t139963 = 1.0/sqrt(t139947);
                double t139964 = 1.0/t139955;
                double t139965 = t139891*t139964*(1.0/2.0);
                double t139966 = t139965+1.0;
                double t139967 = 1.0/t139961;
                double t139968 = t139967*t139878*(1.0/2.0);
                double t139969 = t139968+1.0;
                double t139970 = a1p*c*t139946;
                double t139971 = t139970+1.0;
                double t139972 = 1.0/t139969;
                double t139973 = 1.0/(t139961*t139961);
                double t139974 = b4p*t139872*t139962*(2.0/3.0);
                double t139975 = b2p*c*t139956*(1.0/3.0);
                double t139976 = b1p*c*t139963*t139956*(1.0/6.0);
                double t139977 = b3p*c*t139956*t139948*(1.0/2.0);
                double t139978 = t139974+t139975+t139976+t139977;
                double t139979 = t139971*t139972*t139973*t139978;
                double t139980 = log(t139969);
                double t139981 = pow(2.0,1.0/3.0);
                double t139982 = t139981*2.0;
                double t139983 = t139982-2.0;
                double t139984 = log(t139966);
                double t139985 = a1f*c*t139946;
                double t139986 = t139985+1.0;
                double t139987 = 1.0/pow(rho_a[index],8.0/3.0);
                double t139988 = gamma_aa[index]*t139987*(1.0/2.0);
                double t139989 = 1.0/pow(rho_b[index],8.0/3.0);
                double t139990 = gamma_bb[index]*t139989*(1.0/2.0);
                double t139991 = t139990+t139988;
                double t139992 = gcab*t139991;
                double t139993 = t139992+1.0;
                double t139994 = gcab*gcab;
                double t139995 = t139991*t139991;
                double t139996 = t139994*t139994;
                double t139997 = t139995*t139995;
                double t139998 = t139994*t139995;
                double t139999 = gcab*t139991*2.0;
                double t140000 = t139998+t139999+1.0;
                double t140001 = t139994*t139995*3.0;
                double t140002 = gcab*t139991*t139994*t139995;
                double t140003 = gcab*t139991*3.0;
                double t140004 = t140001+t140002+t140003+1.0;
                double t140005 = t139994*t139995*6.0;
                double t140006 = gcab*t139991*t139994*t139995*4.0;
                double t140007 = t139996*t139997;
                double t140008 = gcab*t139991*4.0;
                double t140009 = t140005+t140006+t140007+t140008+1.0;
                double t140010 = a1p*c*c0p*t139903*t139877*(2.0/3.0);
                double t140011 = 1.0/pow(rho_a[index],1.0/3.0);
                double t140012 = c*t140011;
                double t140013 = sqrt(t140012);
                double t140014 = pow(t140012,3.0/2.0);
                double t140015 = 1.0/pow(rho_a[index],2.0/3.0);
                double t140016 = b1p*t140013;
                double t140017 = b3p*t140014;
                double t140018 = b4p*t139872*t140015;
                double t140019 = b2p*c*t140011;
                double t140020 = t140016+t140017+t140018+t140019;
                double t140021 = 1.0/t140020;
                double t140022 = t139878*t140021*(1.0/2.0);
                double t140023 = t140022+1.0;
                double t140024 = log(t140023);
                double t140025 = a1p*c*t140011;
                double t140026 = t140025+1.0;
                double t140027 = c0p*t140024*t140026*2.0;
                double t140028 = c0f*t139984*t139986*2.0;
                double t140030 = c0p*t139971*t139980*2.0;
                double t140029 = -t140030+t140028;
                double t140031 = t139904*t139913*t139916*t139890*t139909;
                double t140032 = Aa*t139890*t139909*t139927*t139945*t139937*t139939*2.0;
                double t140033 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t140034 = 1.0/(t140004*t140004);
                double t140035 = 1.0/(t140009*t140009);
                double t140036 = gcab*t139987*2.0;
                double t140037 = t139991*t139994*t139987*6.0;
                double t140038 = gcab*t139994*t139995*t139987*6.0;
                double t140039 = t139991*t139995*t139987*t139996*2.0;
                double t140040 = t140036+t140037+t140038+t140039;
                double t140041 = 1.0/(t140000*t140000);
                double t140042 = gamma_bb[index]*gcab*t140033*(8.0/3.0);
                double t140043 = gamma_bb[index]*t139991*t139994*t140033*(8.0/3.0);
                double t140044 = t140042+t140043;
                double t140045 = gcab*t139987;
                double t140046 = t139991*t139994*t139987;
                double t140047 = t140045+t140046;
                double t140048 = gamma_bb[index]*gcab*t140033*(1.6E1/3.0);
                double t140049 = gamma_bb[index]*gcab*t139994*t139995*t140033*1.6E1;
                double t140050 = gamma_bb[index]*t139991*t139995*t139996*t140033*(1.6E1/3.0);
                double t140051 = gamma_bb[index]*t139991*t139994*t140033*1.6E1;
                double t140052 = t140050+t140051+t140048+t140049;
                double t140053 = 1.0/(t139993*t139993);
                double t140054 = 1.0/t140000;
                double t140055 = gcab*t139987*(3.0/2.0);
                double t140056 = t139991*t139994*t139987*3.0;
                double t140057 = gcab*t139994*t139995*t139987*(3.0/2.0);
                double t140058 = t140055+t140056+t140057;
                double t140059 = gamma_bb[index]*gcab*t140033*4.0;
                double t140060 = gamma_bb[index]*gcab*t139994*t139995*t140033*4.0;
                double t140061 = gamma_bb[index]*t139991*t139994*t140033*8.0;
                double t140062 = t140060+t140061+t140059;
                double t140063 = 1.0/t140004;
                double t140064 = 1.0/t140009;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t140030+t139890*t139983*t140029)+rho_a[index]*(t140027- \
                   t139890*t139983*(t140027-c0f*log((t139891*(1.0/2.0))/(b1f*t140013+b3f*t140014+b2f*c*t140011+b4f*t139872* \
                   t140015)+1.0)*(a1f*c*t140011+1.0)*2.0))-t139865*(t139915+t140031+t140032))*(ccab4*t139996*t139997* \
                   t140035*(gamma_bb[index]*t139994*t139987*t140033*8.0+gamma_bb[index]*t139995*t139987*t139996*t140033* \
                   8.0+gamma_bb[index]*gcab*t139991*t139994*t139987*t140033*1.6E1)+ccab2*t139991*t139994*t139987*t140041* \
                   t140044-ccab2*t139994*t139995*1.0/(t140000*t140000*t140000)*t140044*t140047*2.0-ccab4*t139996*t139997* \
                   t140040*t140052*1.0/(t140009*t140009*t140009)*2.0+ccab1*gamma_bb[index]*t139994*t139987*t140033*t140053* \
                   (4.0/3.0)-ccab2*gamma_bb[index]*t139994*t139987*t140033*t140054*(4.0/3.0)+ccab2*gamma_bb[index]*t139995* \
                   t139987*t139996*t140041*t140033*(4.0/3.0)-ccab4*gamma_bb[index]*t139995*t139987*t139996*t140033*t140064* \
                   8.0+ccab2*gamma_bb[index]*t139991*t139994*t140041*t140033*t140047*(8.0/3.0)+ccab3*gcab*t139994*t139995* \
                   t139987*t140034*t140062*(3.0/2.0)+ccab4*t139991*t139995*t139987*t139996*t140052*t140035*2.0+ccab3* \
                   gcab*t139991*t139994*t139995*t140034*(gamma_bb[index]*t139994*t139987*t140033*4.0+gamma_bb[index]* \
                   gcab*t139991*t139994*t139987*t140033*4.0)-ccab1*gamma_bb[index]*gcab*t139991*1.0/(t139993*t139993* \
                   t139993)*t139994*t139987*t140033*(4.0/3.0)-ccab3*gcab*t139991*t139994*t139995*1.0/(t140004*t140004* \
                   t140004)*t140062*t140058*2.0-ccab3*gamma_bb[index]*gcab*t139991*t139994*t139987*t140033*t140063*4.0+ \
                   ccab3*gamma_bb[index]*gcab*t139994*t139995*t140033*t140034*t140058*4.0+ccab4*gamma_bb[index]*t139991* \
                   t139995*t139996*t140040*t140033*t140035*(1.6E1/3.0))-(t139915+t140031+t140032+rho_b[index]*(-t139979+ \
                   t139890*t139983*(t139979-(1.0/(t139955*t139955)*t139986*(b2f*c*t139956*(1.0/3.0)+b4f*t139872*t139962* \
                   (2.0/3.0)+b1f*c*t139963*t139956*(1.0/6.0)+b3f*c*t139956*t139948*(1.0/2.0)))/t139966+a1f*c*c0f*t139956* \
                   t139984*(2.0/3.0)-a1p*c*c0p*t139980*t139956*(2.0/3.0))+a1p*c*c0p*t139980*t139956*(2.0/3.0))-t139865* \
                   (t140010-t139920*t139925*t139883*t139919+t139904*t139913*t139916*t139943*t139890+t139904*t139916*t139890* \
                   t139926*t139909*4.0-t139913*t139916*t139890*t139909*(t140010-t139920*t139925*t139883*t139919+(t139902* \
                   1.0/(t139896*t139896)*(b2f*c*t139877*(1.0/3.0)+b4f*t139872*t139917*(2.0/3.0)+b1f*c*t139918*t139877* \
                   (1.0/6.0)+b3f*c*t139868*t139877*(1.0/2.0)))/t139899-a1f*c*c0f*t139900*t139877*(2.0/3.0))+t139904*t139913* \
                   t139890*t139909*t139884*t139885*4.0+Aa*t139890*t139909*t139927*t139937*t139939*(t139916*t139926*4.0+ \
                   t139913*t139884*t139885*4.0)*2.0+Aa*t139943*t139890*t139927*t139945*t139937*t139939*2.0-(1.0/(t139933* \
                   t139933)*t139890*t139909*t139927*t139945*t139939*(b2a*c*t139877*(1.0/3.0)+b4a*t139872*t139917*(2.0/ \
                   3.0)+b1a*c*t139918*t139877*(1.0/6.0)+b3a*c*t139868*t139877*(1.0/2.0)))/t139936+Aa*a1a*c*t139890*t139909* \
                   t139927*t139945*t139937*t139877*(2.0/3.0))-c0p*t139971*t139980*2.0-t139890*t139983*t140029)*((ccab1* \
                   gcab*t139987*(1.0/2.0))/t139993-ccab1*t139991*t139994*t139987*t140053*(1.0/2.0)+ccab2*t139991*t139994* \
                   t139987*t140054-ccab2*t139994*t139995*t140041*t140047-ccab4*t139996*t139997*t140040*t140035+ccab4* \
                   t139991*t139995*t139987*t139996*t140064*2.0+ccab3*gcab*t139994*t139995*t139987*t140063*(3.0/2.0)-ccab3* \
                   gcab*t139991*t139994*t139995*t140034*t140058);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t140067 = 1.0/pow(rho_b[index],1.0/3.0);
                double t140068 = c*t140067;
                double t140069 = sqrt(t140068);
                double t140070 = pow(t140068,3.0/2.0);
                double t140071 = c*c;
                double t140072 = 1.0/pow(rho_b[index],2.0/3.0);
                double t140073 = 1.0/c0p;
                double t140074 = b1p*t140069;
                double t140075 = b3p*t140070;
                double t140076 = b4p*t140071*t140072;
                double t140077 = b2p*c*t140067;
                double t140078 = t140074+t140075+t140076+t140077;
                double t140079 = 1.0/t140078;
                double t140080 = t140073*t140079*(1.0/2.0);
                double t140081 = t140080+1.0;
                double t140082 = log(t140081);
                double t140083 = a1p*c*t140067;
                double t140084 = t140083+1.0;
                double t140085 = 1.0/pow(rho_b[index],8.0/3.0);
                double t140086 = gamma_bb[index]*gamma_bb[index];
                double t140087 = gcaa*gcaa;
                double t140088 = t140087*t140087;
                double t140089 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t140090 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t140091 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t140092 = gamma_bb[index]*gcaa*t140085;
                double t140093 = t140092+1.0;
                double t140094 = gamma_bb[index]*gcaa*t140085*3.0;
                double t140095 = gamma_bb[index]*gcaa*t140091*t140086*t140087;
                double t140096 = t140090*t140086*t140087*3.0;
                double t140097 = t140094+t140095+t140096+1.0;
                double t140098 = t140086*t140086;
                double t140099 = gamma_bb[index]*gcaa*t140085*4.0;
                double t140100 = gamma_bb[index]*gcaa*t140091*t140086*t140087*4.0;
                double t140101 = t140090*t140086*t140087*6.0;
                double t140102 = t140088*t140089*t140098;
                double t140103 = t140100+t140101+t140102+t140099+1.0;
                double t140104 = gamma_bb[index]*gcaa*t140085*2.0;
                double t140105 = t140090*t140086*t140087;
                double t140106 = t140104+t140105+1.0;
                double t140107 = rho_a[index]+rho_b[index];
                double t140108 = 1.0/pow(t140107,1.0/3.0);
                double t140109 = c*t140108;
                double t140110 = sqrt(t140109);
                double t140111 = b1p*t140110;
                double t140112 = pow(t140109,3.0/2.0);
                double t140113 = b3p*t140112;
                double t140114 = 1.0/pow(t140107,2.0/3.0);
                double t140115 = b4p*t140114*t140071;
                double t140116 = b2p*c*t140108;
                double t140117 = t140111+t140113+t140115+t140116;
                double t140118 = 1.0/pow(t140107,4.0/3.0);
                double t140119 = two_13*2.0;
                double t140120 = t140119-2.0;
                double t140121 = 1.0/t140120;
                double t140122 = 1.0/c0f;
                double t140123 = 1.0/t140117;
                double t140124 = t140123*t140073*(1.0/2.0);
                double t140125 = t140124+1.0;
                double t140126 = a1p*c*t140108;
                double t140127 = t140126+1.0;
                double t140128 = rho_a[index]-rho_b[index];
                double t140129 = t140128*t140128;
                double t140130 = 1.0/t140107;
                double t140131 = t140130*t140128;
                double t140132 = b1f*t140110;
                double t140133 = b3f*t140112;
                double t140134 = b4f*t140114*t140071;
                double t140135 = b2f*c*t140108;
                double t140136 = t140132+t140133+t140134+t140135;
                double t140137 = 1.0/t140136;
                double t140138 = t140122*t140137*(1.0/2.0);
                double t140139 = t140138+1.0;
                double t140140 = log(t140139);
                double t140141 = a1f*c*t140108;
                double t140142 = t140141+1.0;
                double t140143 = log(t140125);
                double t140154 = c0f*t140140*t140142*2.0;
                double t140155 = c0p*t140143*t140127*2.0;
                double t140144 = t140154-t140155;
                double t140145 = t140131+1.0;
                double t140146 = pow(t140145,4.0/3.0);
                double t140147 = -t140131+1.0;
                double t140148 = pow(t140147,4.0/3.0);
                double t140149 = t140146+t140148-2.0;
                double t140150 = 1.0/(t140107*t140107);
                double t140151 = t140150*t140128;
                double t140152 = t140130+t140151;
                double t140153 = 1.0/(t140107*t140107*t140107*t140107);
                double t140156 = t140129*t140129;
                double t140157 = 1.0/pow(t140107,5.0/3.0);
                double t140158 = 1.0/sqrt(t140109);
                double t140159 = 1.0/t140125;
                double t140160 = 1.0/(t140117*t140117);
                double t140161 = b4p*t140071*t140157*(2.0/3.0);
                double t140162 = b2p*c*t140118*(1.0/3.0);
                double t140163 = b1p*c*t140118*t140158*(1.0/6.0);
                double t140164 = b3p*c*t140110*t140118*(1.0/2.0);
                double t140165 = t140161+t140162+t140163+t140164;
                double t140166 = 1.0/(t140107*t140107*t140107*t140107*t140107);
                double t140167 = 1.0/d2fz0;
                double t140168 = 1.0/Aa;
                double t140169 = b1a*t140110;
                double t140170 = b3a*t140112;
                double t140171 = b4a*t140114*t140071;
                double t140172 = b2a*c*t140108;
                double t140173 = t140170+t140171+t140172+t140169;
                double t140174 = 1.0/t140173;
                double t140175 = t140174*t140168*(1.0/2.0);
                double t140176 = t140175+1.0;
                double t140177 = log(t140176);
                double t140178 = a1a*c*t140108;
                double t140179 = t140178+1.0;
                double t140180 = pow(t140145,1.0/3.0);
                double t140181 = t140152*t140180*(4.0/3.0);
                double t140182 = pow(t140147,1.0/3.0);
                double t140183 = t140181-t140152*t140182*(4.0/3.0);
                double t140184 = t140153*t140156;
                double t140185 = t140184-1.0;
                double t140186 = pow(2.0,1.0/3.0);
                double t140187 = t140186*2.0;
                double t140188 = t140187-2.0;
                double t140189 = a1f*c*t140067;
                double t140190 = t140189+1.0;
                double t140191 = b1f*t140069;
                double t140192 = b3f*t140070;
                double t140193 = b4f*t140071*t140072;
                double t140194 = b2f*c*t140067;
                double t140195 = t140191+t140192+t140193+t140194;
                double t140196 = 1.0/t140195;
                double t140197 = t140122*t140196*(1.0/2.0);
                double t140198 = t140197+1.0;
                double t140199 = 1.0/pow(rho_b[index],4.0/3.0);
                double t140200 = 1.0/pow(rho_b[index],5.0/3.0);
                double t140201 = 1.0/sqrt(t140068);
                double t140202 = log(t140198);
                double t140203 = 1.0/t140081;
                double t140204 = 1.0/(t140078*t140078);
                double t140205 = b4p*t140200*t140071*(2.0/3.0);
                double t140206 = b2p*c*t140199*(1.0/3.0);
                double t140207 = b1p*c*t140201*t140199*(1.0/6.0);
                double t140208 = b3p*c*t140069*t140199*(1.0/2.0);
                double t140209 = t140205+t140206+t140207+t140208;
                double t140210 = t140203*t140204*t140209*t140084;
                double t140211 = c0f*t140202*t140190*2.0;
                double t140212 = c0p*t140082*t140084*2.0;
                double t140213 = 1.0/pow(rho_a[index],8.0/3.0);
                double t140214 = gamma_aa[index]*t140213*(1.0/2.0);
                double t140215 = gamma_bb[index]*t140085*(1.0/2.0);
                double t140216 = t140214+t140215;
                double t140217 = gcab*t140216;
                double t140218 = t140217+1.0;
                double t140219 = gcab*gcab;
                double t140220 = t140216*t140216;
                double t140221 = t140219*t140219;
                double t140222 = t140220*t140220;
                double t140223 = t140220*t140219;
                double t140224 = gcab*t140216*2.0;
                double t140225 = t140223+t140224+1.0;
                double t140226 = t140220*t140219*3.0;
                double t140227 = gcab*t140220*t140216*t140219;
                double t140228 = gcab*t140216*3.0;
                double t140229 = t140226+t140227+t140228+1.0;
                double t140230 = t140220*t140219*6.0;
                double t140231 = gcab*t140220*t140216*t140219*4.0;
                double t140232 = t140221*t140222;
                double t140233 = gcab*t140216*4.0;
                double t140234 = t140230+t140231+t140232+t140233+1.0;
                double t140235 = a1p*c*c0p*t140143*t140118*(2.0/3.0);
                double t140236 = 1.0/pow(rho_a[index],1.0/3.0);
                double t140237 = c*t140236;
                double t140238 = sqrt(t140237);
                double t140239 = pow(t140237,3.0/2.0);
                double t140240 = 1.0/pow(rho_a[index],2.0/3.0);
                double t140241 = b1p*t140238;
                double t140242 = b3p*t140239;
                double t140243 = b4p*t140240*t140071;
                double t140244 = b2p*c*t140236;
                double t140245 = t140241+t140242+t140243+t140244;
                double t140246 = 1.0/t140245;
                double t140247 = t140073*t140246*(1.0/2.0);
                double t140248 = t140247+1.0;
                double t140249 = log(t140248);
                double t140250 = a1p*c*t140236;
                double t140251 = t140250+1.0;
                double t140252 = c0p*t140251*t140249*2.0;
                double t140253 = t140211-t140212;
                double t140254 = t140121*t140144*t140153*t140156*t140149;
                double t140255 = Aa*t140121*t140149*t140167*t140185*t140177*t140179*2.0;
                double t140256 = 1.0/t140218;
                double t140257 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t140258 = 1.0/(t140218*t140218);
                double t140259 = 1.0/t140225;
                double t140260 = 1.0/(t140229*t140229);
                double t140261 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t140262 = 1.0/(t140225*t140225);
                double t140263 = 1.0/t140229;
                double t140264 = 1.0/t140234;
                double t140265 = 1.0/(t140234*t140234);
                double t140266 = gcab*t140085*2.0;
                double t140267 = t140216*t140219*t140085*6.0;
                double t140268 = gcab*t140220*t140219*t140085*6.0;
                double t140269 = t140220*t140221*t140216*t140085*2.0;
                double t140270 = t140266+t140267+t140268+t140269;
                double t140271 = gamma_bb[index]*gcab*t140257*(8.0/3.0);
                double t140272 = gamma_bb[index]*t140216*t140219*t140257*(8.0/3.0);
                double t140273 = t140271+t140272;
                double t140274 = gcab*t140085;
                double t140275 = t140216*t140219*t140085;
                double t140276 = t140274+t140275;
                double t140277 = gamma_bb[index]*gcab*t140257*(1.6E1/3.0);
                double t140278 = gamma_bb[index]*gcab*t140220*t140219*t140257*1.6E1;
                double t140279 = gamma_bb[index]*t140220*t140221*t140216*t140257*(1.6E1/3.0);
                double t140280 = gamma_bb[index]*t140216*t140219*t140257*1.6E1;
                double t140281 = t140280+t140277+t140278+t140279;
                double t140282 = gcab*t140085*(3.0/2.0);
                double t140283 = t140216*t140219*t140085*3.0;
                double t140284 = gcab*t140220*t140219*t140085*(3.0/2.0);
                double t140285 = t140282+t140283+t140284;
                double t140286 = gamma_bb[index]*gcab*t140257*4.0;
                double t140287 = gamma_bb[index]*gcab*t140220*t140219*t140257*4.0;
                double t140288 = gamma_bb[index]*t140216*t140219*t140257*8.0;
                double t140289 = t140286+t140287+t140288;
                double t140290 = t140121*t140253*t140188;
                double t140291 = t140212+t140290;
                double t140292 = 1.0/t140093;
                double t140293 = 1.0/t140103;
                double t140294 = 1.0/t140106;
                double t140295 = 1.0/t140097;
                double t140296 = 1.0/(t140093*t140093);
                double t140297 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t140298 = 1.0/(t140097*t140097);
                double t140299 = 1.0/(t140106*t140106);
                double t140300 = gcaa*t140085*3.0;
                double t140301 = gamma_bb[index]*t140090*t140087*6.0;
                double t140302 = gcaa*t140091*t140086*t140087*3.0;
                double t140303 = t140300+t140301+t140302;
                double t140304 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t140305 = 1.0/(t140103*t140103);
                double t140306 = gcaa*t140085*4.0;
                double t140307 = gamma_bb[index]*t140090*t140087*1.2E1;
                double t140308 = gcaa*t140091*t140086*t140087*1.2E1;
                double t140309 = gamma_bb[index]*t140086*t140088*t140089*4.0;
                double t140310 = t140306+t140307+t140308+t140309;
                double t140311 = gcaa*t140085*2.0;
                double t140312 = gamma_bb[index]*t140090*t140087*2.0;
                double t140313 = t140311+t140312;
                double t140314 = gamma_bb[index]*gcaa*t140257*(1.6E1/3.0);
                double t140315 = t140261*t140086*t140087*(1.6E1/3.0);
                double t140316 = t140314+t140315;
                double t140317 = gamma_bb[index]*gcaa*t140257*8.0;
                double t140318 = gamma_bb[index]*gcaa*t140086*t140087*t140297*8.0;
                double t140319 = t140261*t140086*t140087*1.6E1;
                double t140320 = t140317+t140318+t140319;
                double t140321 = gamma_bb[index]*gcaa*t140257*(3.2E1/3.0);
                double t140322 = gamma_bb[index]*gcaa*t140086*t140087*t140297*3.2E1;
                double t140323 = t140261*t140086*t140087*3.2E1;
                double t140324 = t140304*t140088*t140098*(3.2E1/3.0);
                double t140325 = t140321+t140322+t140323+t140324;
                double t140326 = 1.0/t140198;
                double t140327 = 1.0/(t140195*t140195);
                double t140328 = b4f*t140200*t140071*(2.0/3.0);
                double t140329 = b2f*c*t140199*(1.0/3.0);
                double t140330 = b1f*c*t140201*t140199*(1.0/6.0);
                double t140331 = b3f*c*t140069*t140199*(1.0/2.0);
                double t140332 = t140330+t140331+t140328+t140329;
                double t140333 = a1f*c*c0f*t140202*t140199*(2.0/3.0);
                double t140334 = a1p*c*c0p*t140082*t140199*(2.0/3.0);
                double t140335 = ccaa1*gcaa*t140085*t140292;
                double t140336 = ccaa4*gamma_bb[index]*t140086*t140293*t140088*t140089*4.0;
                double t140337 = ccaa2*gamma_bb[index]*t140090*t140087*t140294*2.0;
                double t140338 = ccaa3*gcaa*t140091*t140086*t140087*t140295*3.0;
                double t140339 = t140335+t140336+t140337+t140338-ccaa1*gamma_bb[index]*t140090*t140087*t140296-ccaa4* \
                   t140310*t140305*t140088*t140089*t140098-ccaa2*t140313*t140090*t140086*t140087*t140299-ccaa3*gamma_bb[index]* \
                   gcaa*t140303*t140091*t140086*t140087*t140298;
                double t140340 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t140341 = 1.0/pow(t140340,1.0/3.0);
                double t140342 = 1.0/(omega*omega);
                double t140343 = pow(t140340,2.0/3.0);
                double t140393 = t140342*t140343;
                double t140344 = exp(-t140393);
                double t140345 = gx*gx;
                double t140346 = t140345*t140345;
                double t140347 = gamma_bb[index]*gx*t140085;
                double t140348 = t140347+1.0;
                double t140349 = gamma_bb[index]*gx*t140085*3.0;
                double t140350 = gamma_bb[index]*gx*t140091*t140345*t140086;
                double t140351 = t140090*t140345*t140086*3.0;
                double t140352 = t140350+t140351+t140349+1.0;
                double t140353 = gamma_bb[index]*gx*t140085*2.0;
                double t140354 = t140090*t140345*t140086;
                double t140355 = t140353+t140354+1.0;
                double t140356 = 1.0/(t140352*t140352);
                double t140357 = gamma_bb[index]*gx*t140085*4.0;
                double t140358 = gamma_bb[index]*gx*t140091*t140345*t140086*4.0;
                double t140359 = t140090*t140345*t140086*6.0;
                double t140360 = t140346*t140089*t140098;
                double t140361 = t140360+t140357+t140358+t140359+1.0;
                double t140362 = 1.0/(t140361*t140361);
                double t140363 = 1.0/(t140355*t140355);
                double t140364 = gamma_bb[index]*gx*t140257*(1.6E1/3.0);
                double t140365 = t140261*t140345*t140086*(1.6E1/3.0);
                double t140366 = t140364+t140365;
                double t140367 = gx*t140085*2.0;
                double t140368 = gamma_bb[index]*t140090*t140345*2.0;
                double t140369 = t140367+t140368;
                double t140370 = gx*t140085*3.0;
                double t140371 = gamma_bb[index]*t140090*t140345*6.0;
                double t140372 = gx*t140091*t140345*t140086*3.0;
                double t140373 = t140370+t140371+t140372;
                double t140374 = gamma_bb[index]*gx*t140257*8.0;
                double t140375 = gamma_bb[index]*gx*t140345*t140086*t140297*8.0;
                double t140376 = t140261*t140345*t140086*1.6E1;
                double t140377 = t140374+t140375+t140376;
                double t140378 = gamma_bb[index]*gx*t140257*(3.2E1/3.0);
                double t140379 = gamma_bb[index]*gx*t140345*t140086*t140297*3.2E1;
                double t140380 = t140261*t140345*t140086*3.2E1;
                double t140381 = t140304*t140346*t140098*(3.2E1/3.0);
                double t140382 = t140380+t140381+t140378+t140379;
                double t140383 = gx*t140085*4.0;
                double t140384 = gamma_bb[index]*t140090*t140345*1.2E1;
                double t140385 = gx*t140091*t140345*t140086*1.2E1;
                double t140386 = gamma_bb[index]*t140346*t140086*t140089*4.0;
                double t140387 = t140383+t140384+t140385+t140386;
                double t140388 = 1.0/omega;
                double t140389 = pow(t140340,1.0/3.0);
                double t140390 = t140388*t140389;
                double t140391 = erf(t140390);
                double t140392 = t140391*(3.991211251234741E15/2.251799813685248E15);
                double t140394 = omega*omega;
                double t140395 = 1.0/pow(t140340,2.0/3.0);
                double t140396 = t140344-1.0;
                double t140397 = t140394*t140395*t140396*(1.0/2.0);
                double t140398 = -t140344+t140397+3.0/2.0;
                double t140409 = omega*t140341*t140398;
                double t140399 = -t140409+t140392;
                double t140400 = omega*t140341*t140399*(4.0/3.0);
                double t140401 = t140400-1.0;
                double t140402 = 1.0/t140348;
                double t140403 = 1.0/t140361;
                double t140404 = 1.0/t140355;
                double t140405 = 1.0/t140352;
                double t140406 = 1.0/(t140348*t140348);
                double t140407 = pow(rho_b[index],4.0/3.0);
                double t140408 = 1.0/pow(t140340,4.0/3.0);
                double t140410 = cx1*gx*t140402*t140085;
                double t140411 = cx4*gamma_bb[index]*t140403*t140346*t140086*t140089*4.0;
                double t140412 = cx2*gamma_bb[index]*t140404*t140090*t140345*2.0;
                double t140413 = cx3*gx*t140405*t140091*t140345*t140086*3.0;
                double t140414 = t140410+t140411+t140412+t140413-cx1*gamma_bb[index]*t140090*t140406*t140345-cx2* \
                   t140090*t140345*t140363*t140086*t140369-cx4*t140362*t140346*t140089*t140098*t140387-cx3*gamma_bb[index]* \
                   gx*t140091*t140345*t140373*t140086*t140356;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t140291+rho_a[index]*(t140252-t140121*t140188*(t140252- \
                   c0f*log((t140122*(1.0/2.0))/(b1f*t140238+b3f*t140239+b2f*c*t140236+b4f*t140240*t140071)+1.0)*(a1f* \
                   c*t140236+1.0)*2.0))-t140107*(t140155+t140254+t140255))*(ccab1*gcab*t140256*t140257*(4.0/3.0)-ccab2* \
                   t140220*t140262*t140219*(gcab*t140257*(8.0/3.0)+gamma_bb[index]*t140261*t140219*(4.0/3.0)+t140216* \
                   t140219*t140257*(8.0/3.0))-ccab4*t140221*t140222*t140265*(gcab*t140257*(1.6E1/3.0)+gamma_bb[index]* \
                   t140261*t140219*8.0+t140216*t140219*t140257*1.6E1+gamma_bb[index]*t140220*t140221*t140261*8.0+gcab* \
                   t140220*t140219*t140257*1.6E1+t140220*t140221*t140216*t140257*(1.6E1/3.0)+gamma_bb[index]*gcab*t140216* \
                   t140261*t140219*1.6E1)-ccab1*gamma_bb[index]*t140261*t140219*t140258*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t140261*t140219*t140259*(4.0/3.0)-ccab1*t140216*t140219*t140257*t140258*(4.0/3.0)+ccab2*t140216*t140219* \
                   t140257*t140259*(8.0/3.0)+ccab4*t140220*t140221*t140216*t140264*t140257*(1.6E1/3.0)-ccab2*t140216* \
                   t140262*t140219*t140273*t140085+ccab4*t140221*t140222*1.0/(t140234*t140234*t140234)*t140270*t140281* \
                   2.0+ccab2*t140220*1.0/(t140225*t140225*t140225)*t140219*t140273*t140276*2.0+ccab4*gamma_bb[index]* \
                   t140220*t140221*t140261*t140264*8.0+ccab3*gcab*t140220*t140263*t140219*t140257*4.0+ccab3*gamma_bb[index]* \
                   gcab*t140216*t140261*t140263*t140219*4.0-ccab2*gamma_bb[index]*t140216*t140262*t140219*t140257*t140276* \
                   (8.0/3.0)-ccab3*gcab*t140220*t140260*t140219*t140085*t140289*(3.0/2.0)-ccab4*t140220*t140221*t140216* \
                   t140281*t140085*t140265*2.0-ccab3*gcab*t140220*t140260*t140216*t140219*(gcab*t140257*4.0+gamma_bb[index]* \
                   t140261*t140219*4.0+t140216*t140219*t140257*8.0+gcab*t140220*t140219*t140257*4.0+gamma_bb[index]*gcab* \
                   t140216*t140261*t140219*4.0)+ccab1*gamma_bb[index]*gcab*t140216*t140261*1.0/(t140218*t140218*t140218) \
                   *t140219*(4.0/3.0)+ccab3*gcab*t140220*t140216*t140219*1.0/(t140229*t140229*t140229)*t140285*t140289* \
                   2.0-ccab3*gamma_bb[index]*gcab*t140220*t140260*t140219*t140257*t140285*4.0-ccab4*gamma_bb[index]*t140220* \
                   t140221*t140216*t140270*t140265*t140257*(1.6E1/3.0))-(-t140212+t140155+t140254+t140255+rho_b[index]* \
                   (-t140210+t140334+t140121*t140188*(t140210+t140333-t140332*t140190*t140326*t140327-a1p*c*c0p*t140082* \
                   t140199*(2.0/3.0)))-t140107*(t140235-t140160*t140127*t140165*t140159+t140121*t140144*t140153*t140156* \
                   t140183+t140121*t140144*t140156*t140166*t140149*4.0-t140121*t140153*t140156*t140149*(t140235-t140160* \
                   t140127*t140165*t140159+(t140142*1.0/(t140136*t140136)*(b2f*c*t140118*(1.0/3.0)+b4f*t140071*t140157* \
                   (2.0/3.0)+b1f*c*t140118*t140158*(1.0/6.0)+b3f*c*t140110*t140118*(1.0/2.0)))/t140139-a1f*c*c0f*t140140* \
                   t140118*(2.0/3.0))+t140121*t140144*t140153*t140128*t140129*t140149*4.0+Aa*t140121*t140149*t140167* \
                   t140177*t140179*(t140156*t140166*4.0+t140153*t140128*t140129*4.0)*2.0+Aa*t140121*t140183*t140167*t140185* \
                   t140177*t140179*2.0-(t140121*1.0/(t140173*t140173)*t140149*t140167*t140185*t140179*(b2a*c*t140118* \
                   (1.0/3.0)+b4a*t140071*t140157*(2.0/3.0)+b1a*c*t140118*t140158*(1.0/6.0)+b3a*c*t140110*t140118*(1.0/ \
                   2.0)))/t140176+Aa*a1a*c*t140121*t140118*t140149*t140167*t140185*t140177*(2.0/3.0))-t140121*t140253* \
                   t140188)*(ccab1*gcab*t140085*t140256*(1.0/2.0)-ccab4*t140221*t140222*t140270*t140265-ccab2*t140220* \
                   t140262*t140219*t140276-ccab1*t140216*t140219*t140085*t140258*(1.0/2.0)+ccab2*t140216*t140219*t140085* \
                   t140259+ccab4*t140220*t140221*t140216*t140264*t140085*2.0+ccab3*gcab*t140220*t140263*t140219*t140085* \
                   (3.0/2.0)-ccab3*gcab*t140220*t140260*t140216*t140219*t140285)-t140339*(t140212+t140121*t140188*(t140211- \
                   c0p*t140082*t140084*2.0))-rho_b[index]*t140291*(ccaa1*gcaa*t140292*t140257*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t140261*t140087*t140294*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t140261*t140087*t140296*8.0+ccaa4*t140310* \
                   t140304*t140305*t140088*t140098*(3.2E1/3.0)+ccaa2*t140313*t140261*t140086*t140087*t140299*(1.6E1/3.0) \
                   +ccaa4*t140305*t140088*t140089*t140098*(gcaa*t140257*(3.2E1/3.0)+gamma_bb[index]*t140261*t140087*6.4E1+ \
                   gamma_bb[index]*t140304*t140086*t140088*(1.28E2/3.0)+gcaa*t140086*t140087*t140297*9.6E1)-ccaa1*gcaa* \
                   1.0/(t140093*t140093*t140093)*t140086*t140087*t140297*(1.6E1/3.0)+ccaa2*t140090*t140086*t140087*t140299* \
                   (gcaa*t140257*(1.6E1/3.0)+gamma_bb[index]*t140261*t140087*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t140304* \
                   t140086*t140293*t140088*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t140090*t140316*t140087*t140299*2.0-ccaa3* \
                   gcaa*t140086*t140087*t140295*t140297*2.4E1+ccaa4*gamma_bb[index]*t140305*t140325*t140086*t140088*t140089* \
                   4.0+ccaa3*gcaa*t140320*t140091*t140086*t140087*t140298*3.0-ccaa2*1.0/(t140106*t140106*t140106)*t140313* \
                   t140090*t140316*t140086*t140087*2.0-ccaa4*1.0/(t140103*t140103*t140103)*t140310*t140325*t140088*t140089* \
                   t140098*2.0+ccaa3*gamma_bb[index]*gcaa*t140091*t140086*t140087*t140298*(gcaa*t140257*8.0+gamma_bb[index]* \
                   t140261*t140087*3.2E1+gcaa*t140086*t140087*t140297*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t140303*t140086* \
                   t140087*t140297*t140298*8.0-ccaa3*gamma_bb[index]*gcaa*t140320*t140303*t140091*t140086*t140087*1.0/ \
                   (t140097*t140097*t140097)*2.0)+rho_b[index]*t140339*(-t140210+t140334+t140121*t140188*(t140210+t140333- \
                   t140334-t140332*t140190*t140326*t140327))-c0*t140414*t140407*(omega*t140341*(omega*t140408*t140398* \
                   (2.778046668940015E15/1.40737488355328E14)+omega*t140341*((t140344*(1.0/3.0))/rho_b[index]+1.0/pow(t140340,5.0/ \
                   3.0)*t140394*t140396*(2.778046668940015E15/1.40737488355328E14)-t140341*t140342*t140344*(2.778046668940015E15/ \
                   7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t140344*t140395*t140388*(1.108777112152858E31/1.584563250285287E29) \
                   )*(4.0/3.0)-omega*t140408*t140399*(2.778046668940015E15/1.05553116266496E14))-c0*t140401*t140407*(cx1* \
                   gx*t140402*t140257*(-8.0/3.0)+cx1*gamma_bb[index]*t140261*t140406*t140345*8.0-cx2*gamma_bb[index]* \
                   t140404*t140261*t140345*(3.2E1/3.0)+cx2*t140261*t140345*t140363*t140086*t140369*(1.6E1/3.0)+cx4*t140304* \
                   t140362*t140346*t140098*t140387*(3.2E1/3.0)+cx4*t140362*t140346*t140089*t140098*(gx*t140257*(3.2E1/ \
                   3.0)+gamma_bb[index]*t140261*t140345*6.4E1+gamma_bb[index]*t140304*t140346*t140086*(1.28E2/3.0)+gx* \
                   t140345*t140086*t140297*9.6E1)-cx1*gx*t140345*t140086*1.0/(t140348*t140348*t140348)*t140297*(1.6E1/ \
                   3.0)+cx2*t140090*t140345*t140363*t140086*(gx*t140257*(1.6E1/3.0)+gamma_bb[index]*t140261*t140345*(3.2E1/ \
                   3.0))+cx2*gamma_bb[index]*t140090*t140345*t140363*t140366*2.0-cx4*gamma_bb[index]*t140304*t140403* \
                   t140346*t140086*(1.28E2/3.0)-cx3*gx*t140405*t140345*t140086*t140297*2.4E1+cx4*gamma_bb[index]*t140362* \
                   t140346*t140382*t140086*t140089*4.0+cx3*gx*t140091*t140345*t140086*t140356*t140377*3.0-cx2*t140090* \
                   t140345*1.0/(t140355*t140355*t140355)*t140086*t140366*t140369*2.0-cx4*1.0/(t140361*t140361*t140361) \
                   *t140346*t140382*t140089*t140098*t140387*2.0+cx3*gamma_bb[index]*gx*t140091*t140345*t140086*t140356* \
                   (gx*t140257*8.0+gamma_bb[index]*t140261*t140345*3.2E1+gx*t140345*t140086*t140297*2.4E1)+cx3*gamma_bb[index]* \
                   gx*t140345*t140373*t140086*t140356*t140297*8.0-cx3*gamma_bb[index]*gx*t140091*1.0/(t140352*t140352* \
                   t140352)*t140345*t140373*t140086*t140377*2.0)-c0*pow(rho_b[index],1.0/3.0)*t140401*t140414*(4.0/3.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t141401 = 1.0/pow(rho_b[index],1.0/3.0);
                double t141402 = c*t141401;
                double t141403 = sqrt(t141402);
                double t141404 = pow(t141402,3.0/2.0);
                double t141405 = c*c;
                double t141406 = 1.0/pow(rho_b[index],2.0/3.0);
                double t141407 = 1.0/c0p;
                double t141408 = b1p*t141403;
                double t141409 = b3p*t141404;
                double t141410 = b4p*t141405*t141406;
                double t141411 = b2p*c*t141401;
                double t141412 = t141410+t141411+t141408+t141409;
                double t141413 = 1.0/t141412;
                double t141414 = t141413*t141407*(1.0/2.0);
                double t141415 = t141414+1.0;
                double t141416 = log(t141415);
                double t141417 = a1p*c*t141401;
                double t141418 = t141417+1.0;
                double t141419 = 1.0/pow(rho_b[index],8.0/3.0);
                double t141420 = gamma_bb[index]*gamma_bb[index];
                double t141421 = gcaa*gcaa;
                double t141422 = t141421*t141421;
                double t141423 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t141424 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t141425 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t141426 = gamma_bb[index]*gcaa*t141419;
                double t141427 = t141426+1.0;
                double t141428 = gamma_bb[index]*gcaa*t141419*3.0;
                double t141429 = gamma_bb[index]*gcaa*t141420*t141421*t141425;
                double t141430 = t141420*t141421*t141424*3.0;
                double t141431 = t141430+t141428+t141429+1.0;
                double t141432 = t141420*t141420;
                double t141433 = gamma_bb[index]*gcaa*t141419*4.0;
                double t141434 = gamma_bb[index]*gcaa*t141420*t141421*t141425*4.0;
                double t141435 = t141420*t141421*t141424*6.0;
                double t141436 = t141422*t141423*t141432;
                double t141437 = t141433+t141434+t141435+t141436+1.0;
                double t141438 = gamma_bb[index]*gcaa*t141419*2.0;
                double t141439 = t141420*t141421*t141424;
                double t141440 = t141438+t141439+1.0;
                double t141441 = pow(2.0,1.0/3.0);
                double t141442 = t141441*2.0;
                double t141443 = t141442-2.0;
                double t141444 = two_13*2.0;
                double t141445 = t141444-2.0;
                double t141446 = 1.0/t141445;
                double t141447 = 1.0/c0f;
                double t141448 = b1f*t141403;
                double t141449 = b3f*t141404;
                double t141450 = b4f*t141405*t141406;
                double t141451 = b2f*c*t141401;
                double t141452 = t141450+t141451+t141448+t141449;
                double t141453 = 1.0/t141452;
                double t141454 = t141453*t141447*(1.0/2.0);
                double t141455 = t141454+1.0;
                double t141456 = log(t141455);
                double t141457 = a1f*c*t141401;
                double t141458 = t141457+1.0;
                double t141459 = c0f*t141456*t141458*2.0;
                double t141460 = c0p*t141416*t141418*2.0;
                double t141461 = 1.0/t141427;
                double t141462 = 1.0/t141437;
                double t141463 = 1.0/t141440;
                double t141464 = 1.0/t141431;
                double t141465 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t141466 = 1.0/(t141427*t141427);
                double t141467 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t141468 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t141469 = 1.0/(t141431*t141431);
                double t141470 = 1.0/(t141440*t141440);
                double t141471 = gcaa*t141419*3.0;
                double t141472 = gamma_bb[index]*t141421*t141424*6.0;
                double t141473 = gcaa*t141420*t141421*t141425*3.0;
                double t141474 = t141471+t141472+t141473;
                double t141475 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t141476 = 1.0/(t141437*t141437);
                double t141477 = gcaa*t141419*4.0;
                double t141478 = gamma_bb[index]*t141421*t141424*1.2E1;
                double t141479 = gcaa*t141420*t141421*t141425*1.2E1;
                double t141480 = gamma_bb[index]*t141420*t141422*t141423*4.0;
                double t141481 = t141480+t141477+t141478+t141479;
                double t141482 = gcaa*t141419*2.0;
                double t141483 = gamma_bb[index]*t141421*t141424*2.0;
                double t141484 = t141482+t141483;
                double t141485 = gamma_bb[index]*gcaa*t141468*(1.6E1/3.0);
                double t141486 = t141420*t141421*t141465*(1.6E1/3.0);
                double t141487 = t141485+t141486;
                double t141488 = gamma_bb[index]*gcaa*t141468*8.0;
                double t141489 = gamma_bb[index]*gcaa*t141420*t141421*t141467*8.0;
                double t141490 = t141420*t141421*t141465*1.6E1;
                double t141491 = t141490+t141488+t141489;
                double t141492 = gamma_bb[index]*gcaa*t141468*(3.2E1/3.0);
                double t141493 = gamma_bb[index]*gcaa*t141420*t141421*t141467*3.2E1;
                double t141494 = t141420*t141421*t141465*3.2E1;
                double t141495 = t141422*t141432*t141475*(3.2E1/3.0);
                double t141496 = t141492+t141493+t141494+t141495;
                double t141497 = 1.0/pow(rho_b[index],4.0/3.0);
                double t141498 = 1.0/pow(rho_b[index],5.0/3.0);
                double t141499 = 1.0/sqrt(t141402);
                double t141500 = 1.0/t141415;
                double t141501 = 1.0/(t141412*t141412);
                double t141502 = b4p*t141405*t141498*(2.0/3.0);
                double t141503 = b2p*c*t141497*(1.0/3.0);
                double t141504 = b1p*c*t141497*t141499*(1.0/6.0);
                double t141505 = b3p*c*t141403*t141497*(1.0/2.0);
                double t141506 = t141502+t141503+t141504+t141505;
                double t141507 = t141500*t141501*t141506*t141418;
                double t141508 = ccaa1*gcaa*t141461*t141419;
                double t141509 = ccaa4*gamma_bb[index]*t141420*t141422*t141423*t141462*4.0;
                double t141510 = ccaa2*gamma_bb[index]*t141421*t141424*t141463*2.0;
                double t141511 = ccaa3*gcaa*t141420*t141421*t141425*t141464*3.0;
                double t141512 = t141510+t141511+t141508+t141509-ccaa1*gamma_bb[index]*t141421*t141424*t141466-ccaa2* \
                   t141420*t141421*t141424*t141470*t141484-ccaa4*t141422*t141423*t141432*t141481*t141476-ccaa3*gamma_bb[index]* \
                   gcaa*t141420*t141421*t141425*t141474*t141469;
                double t141513 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t141514 = 1.0/pow(t141513,1.0/3.0);
                double t141515 = 1.0/(omega*omega);
                double t141516 = pow(t141513,2.0/3.0);
                double t141566 = t141515*t141516;
                double t141517 = exp(-t141566);
                double t141518 = gx*gx;
                double t141519 = t141518*t141518;
                double t141520 = gamma_bb[index]*gx*t141419;
                double t141521 = t141520+1.0;
                double t141522 = gamma_bb[index]*gx*t141419*3.0;
                double t141523 = gamma_bb[index]*gx*t141420*t141425*t141518;
                double t141524 = t141420*t141424*t141518*3.0;
                double t141525 = t141522+t141523+t141524+1.0;
                double t141526 = gamma_bb[index]*gx*t141419*2.0;
                double t141527 = t141420*t141424*t141518;
                double t141528 = t141526+t141527+1.0;
                double t141529 = 1.0/(t141525*t141525);
                double t141530 = gamma_bb[index]*gx*t141419*4.0;
                double t141531 = gamma_bb[index]*gx*t141420*t141425*t141518*4.0;
                double t141532 = t141420*t141424*t141518*6.0;
                double t141533 = t141423*t141432*t141519;
                double t141534 = t141530+t141531+t141532+t141533+1.0;
                double t141535 = 1.0/(t141534*t141534);
                double t141536 = 1.0/(t141528*t141528);
                double t141537 = gamma_bb[index]*gx*t141468*(1.6E1/3.0);
                double t141538 = t141420*t141518*t141465*(1.6E1/3.0);
                double t141539 = t141537+t141538;
                double t141540 = gx*t141419*2.0;
                double t141541 = gamma_bb[index]*t141424*t141518*2.0;
                double t141542 = t141540+t141541;
                double t141543 = gx*t141419*3.0;
                double t141544 = gamma_bb[index]*t141424*t141518*6.0;
                double t141545 = gx*t141420*t141425*t141518*3.0;
                double t141546 = t141543+t141544+t141545;
                double t141547 = gamma_bb[index]*gx*t141468*8.0;
                double t141548 = gamma_bb[index]*gx*t141420*t141518*t141467*8.0;
                double t141549 = t141420*t141518*t141465*1.6E1;
                double t141550 = t141547+t141548+t141549;
                double t141551 = gamma_bb[index]*gx*t141468*(3.2E1/3.0);
                double t141552 = gamma_bb[index]*gx*t141420*t141518*t141467*3.2E1;
                double t141553 = t141420*t141518*t141465*3.2E1;
                double t141554 = t141432*t141519*t141475*(3.2E1/3.0);
                double t141555 = t141551+t141552+t141553+t141554;
                double t141556 = gx*t141419*4.0;
                double t141557 = gamma_bb[index]*t141424*t141518*1.2E1;
                double t141558 = gx*t141420*t141425*t141518*1.2E1;
                double t141559 = gamma_bb[index]*t141420*t141423*t141519*4.0;
                double t141560 = t141556+t141557+t141558+t141559;
                double t141561 = 1.0/omega;
                double t141562 = pow(t141513,1.0/3.0);
                double t141563 = t141561*t141562;
                double t141564 = erf(t141563);
                double t141565 = t141564*(3.991211251234741E15/2.251799813685248E15);
                double t141567 = omega*omega;
                double t141568 = 1.0/pow(t141513,2.0/3.0);
                double t141569 = t141517-1.0;
                double t141570 = t141567*t141568*t141569*(1.0/2.0);
                double t141571 = t141570-t141517+3.0/2.0;
                double t141582 = omega*t141514*t141571;
                double t141572 = -t141582+t141565;
                double t141573 = omega*t141514*t141572*(4.0/3.0);
                double t141574 = t141573-1.0;
                double t141575 = 1.0/t141521;
                double t141576 = 1.0/t141534;
                double t141577 = 1.0/t141528;
                double t141578 = 1.0/t141525;
                double t141579 = 1.0/(t141521*t141521);
                double t141580 = pow(rho_b[index],4.0/3.0);
                double t141581 = 1.0/pow(t141513,4.0/3.0);
                double t141583 = cx1*gx*t141419*t141575;
                double t141584 = cx4*gamma_bb[index]*t141420*t141423*t141519*t141576*4.0;
                double t141585 = cx2*gamma_bb[index]*t141424*t141518*t141577*2.0;
                double t141586 = cx3*gx*t141420*t141425*t141518*t141578*3.0;
                double t141587 = t141583+t141584+t141585+t141586-cx1*gamma_bb[index]*t141424*t141518*t141579-cx2* \
                   t141420*t141424*t141542*t141518*t141536-cx4*t141423*t141432*t141560*t141535*t141519-cx3*gamma_bb[index]* \
                   gx*t141420*t141425*t141518*t141546*t141529;
                v_rho_b_gamma_bb_[index] = -t141512*(t141460+t141443*t141446*(t141459-c0p*t141416*t141418*2.0))+rho_b[index]* \
                   t141512*(-t141507+t141443*t141446*(t141507-(1.0/(t141452*t141452)*t141458*(b2f*c*t141497*(1.0/3.0) \
                   +b4f*t141405*t141498*(2.0/3.0)+b1f*c*t141497*t141499*(1.0/6.0)+b3f*c*t141403*t141497*(1.0/2.0)))/t141455+ \
                   a1f*c*c0f*t141456*t141497*(2.0/3.0)-a1p*c*c0p*t141416*t141497*(2.0/3.0))+a1p*c*c0p*t141416*t141497* \
                   (2.0/3.0))-rho_b[index]*(t141460-t141443*t141446*(t141460-t141459))*(ccaa1*gcaa*t141461*t141468*(- \
                   8.0/3.0)-ccaa2*gamma_bb[index]*t141421*t141463*t141465*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t141421*t141465* \
                   t141466*8.0+ccaa2*t141420*t141421*t141470*t141465*t141484*(1.6E1/3.0)+ccaa4*t141422*t141432*t141481* \
                   t141475*t141476*(3.2E1/3.0)+ccaa4*t141422*t141423*t141432*t141476*(gcaa*t141468*(3.2E1/3.0)+gamma_bb[index]* \
                   t141421*t141465*6.4E1+gamma_bb[index]*t141420*t141422*t141475*(1.28E2/3.0)+gcaa*t141420*t141421*t141467* \
                   9.6E1)-ccaa1*gcaa*t141420*t141421*1.0/(t141427*t141427*t141427)*t141467*(1.6E1/3.0)+ccaa2*t141420* \
                   t141421*t141424*t141470*(gcaa*t141468*(1.6E1/3.0)+gamma_bb[index]*t141421*t141465*(3.2E1/3.0))-ccaa4* \
                   gamma_bb[index]*t141420*t141422*t141462*t141475*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t141421*t141424* \
                   t141470*t141487*2.0-ccaa3*gcaa*t141420*t141421*t141464*t141467*2.4E1+ccaa4*gamma_bb[index]*t141420* \
                   t141422*t141423*t141476*t141496*4.0+ccaa3*gcaa*t141420*t141421*t141425*t141491*t141469*3.0-ccaa2*t141420* \
                   t141421*1.0/(t141440*t141440*t141440)*t141424*t141484*t141487*2.0-ccaa4*t141422*t141423*t141432*t141481* \
                   1.0/(t141437*t141437*t141437)*t141496*2.0+ccaa3*gamma_bb[index]*gcaa*t141420*t141421*t141425*t141469* \
                   (gcaa*t141468*8.0+gamma_bb[index]*t141421*t141465*3.2E1+gcaa*t141420*t141421*t141467*2.4E1)+ccaa3* \
                   gamma_bb[index]*gcaa*t141420*t141421*t141474*t141467*t141469*8.0-ccaa3*gamma_bb[index]*gcaa*t141420* \
                   t141421*1.0/(t141431*t141431*t141431)*t141425*t141491*t141474*2.0)-c0*t141580*t141587*(omega*t141514* \
                   (omega*t141571*t141581*(2.778046668940015E15/1.40737488355328E14)+omega*t141514*((t141517*(1.0/3.0) \
                   )/rho_b[index]+1.0/pow(t141513,5.0/3.0)*t141567*t141569*(2.778046668940015E15/1.40737488355328E14) \
                   -t141514*t141515*t141517*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t141561* \
                   t141517*t141568*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t141572*t141581*(2.778046668940015E15/ \
                   1.05553116266496E14))-c0*t141580*t141574*(cx1*gx*t141575*t141468*(-8.0/3.0)+cx1*gamma_bb[index]*t141518* \
                   t141465*t141579*8.0-cx2*gamma_bb[index]*t141518*t141465*t141577*(3.2E1/3.0)+cx2*t141420*t141542*t141518* \
                   t141536*t141465*(1.6E1/3.0)+cx4*t141432*t141560*t141535*t141519*t141475*(3.2E1/3.0)+cx4*t141423*t141432* \
                   t141535*t141519*(gx*t141468*(3.2E1/3.0)+gamma_bb[index]*t141518*t141465*6.4E1+gamma_bb[index]*t141420* \
                   t141519*t141475*(1.28E2/3.0)+gx*t141420*t141518*t141467*9.6E1)-cx1*gx*t141420*1.0/(t141521*t141521* \
                   t141521)*t141518*t141467*(1.6E1/3.0)+cx2*t141420*t141424*t141518*t141536*(gx*t141468*(1.6E1/3.0)+gamma_bb[index]* \
                   t141518*t141465*(3.2E1/3.0))+cx2*gamma_bb[index]*t141424*t141518*t141536*t141539*2.0-cx4*gamma_bb[index]* \
                   t141420*t141519*t141475*t141576*(1.28E2/3.0)-cx3*gx*t141420*t141518*t141467*t141578*2.4E1+cx4*gamma_bb[index]* \
                   t141420*t141423*t141535*t141519*t141555*4.0+cx3*gx*t141420*t141550*t141425*t141518*t141529*3.0-cx2* \
                   t141420*t141424*t141542*t141518*1.0/(t141528*t141528*t141528)*t141539*2.0-cx4*t141423*t141432*t141560* \
                   1.0/(t141534*t141534*t141534)*t141519*t141555*2.0+cx3*gamma_bb[index]*gx*t141420*t141425*t141518*t141529* \
                   (gx*t141468*8.0+gamma_bb[index]*t141518*t141465*3.2E1+gx*t141420*t141518*t141467*2.4E1)+cx3*gamma_bb[index]* \
                   gx*t141420*t141518*t141546*t141529*t141467*8.0-cx3*gamma_bb[index]*gx*t141420*t141550*t141425*1.0/ \
                   (t141525*t141525*t141525)*t141518*t141546*2.0)-c0*pow(rho_b[index],1.0/3.0)*t141574*t141587*(4.0/3.0) \
                   ;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t140416 = 1.0/pow(rho_a[index],1.0/3.0);
                double t140417 = c*t140416;
                double t140418 = sqrt(t140417);
                double t140419 = pow(t140417,3.0/2.0);
                double t140420 = c*c;
                double t140421 = 1.0/pow(rho_a[index],2.0/3.0);
                double t140422 = 1.0/c0p;
                double t140423 = b1p*t140418;
                double t140424 = b3p*t140419;
                double t140425 = b4p*t140420*t140421;
                double t140426 = b2p*c*t140416;
                double t140427 = t140423+t140424+t140425+t140426;
                double t140428 = 1.0/t140427;
                double t140429 = t140422*t140428*(1.0/2.0);
                double t140430 = t140429+1.0;
                double t140431 = log(t140430);
                double t140432 = a1p*c*t140416;
                double t140433 = t140432+1.0;
                double t140434 = pow(2.0,1.0/3.0);
                double t140435 = t140434*2.0;
                double t140436 = t140435-2.0;
                double t140437 = two_13*2.0;
                double t140438 = t140437-2.0;
                double t140439 = 1.0/t140438;
                double t140440 = 1.0/c0f;
                double t140441 = 1.0/pow(rho_b[index],1.0/3.0);
                double t140442 = c*t140441;
                double t140443 = sqrt(t140442);
                double t140444 = pow(t140442,3.0/2.0);
                double t140445 = 1.0/pow(rho_b[index],2.0/3.0);
                double t140446 = b1p*t140443;
                double t140447 = b3p*t140444;
                double t140448 = b4p*t140420*t140445;
                double t140449 = b2p*c*t140441;
                double t140450 = t140446+t140447+t140448+t140449;
                double t140451 = 1.0/t140450;
                double t140452 = t140422*t140451*(1.0/2.0);
                double t140453 = t140452+1.0;
                double t140454 = log(t140453);
                double t140455 = a1p*c*t140441;
                double t140456 = t140455+1.0;
                double t140457 = c0p*t140454*t140456*2.0;
                double t140458 = rho_a[index]+rho_b[index];
                double t140459 = 1.0/pow(t140458,1.0/3.0);
                double t140460 = c*t140459;
                double t140461 = sqrt(t140460);
                double t140462 = pow(t140460,3.0/2.0);
                double t140463 = 1.0/pow(t140458,2.0/3.0);
                double t140464 = b1p*t140461;
                double t140465 = b3p*t140462;
                double t140466 = b4p*t140420*t140463;
                double t140467 = b2p*c*t140459;
                double t140468 = t140464+t140465+t140466+t140467;
                double t140469 = 1.0/t140468;
                double t140470 = t140422*t140469*(1.0/2.0);
                double t140471 = t140470+1.0;
                double t140472 = log(t140471);
                double t140473 = a1p*c*t140459;
                double t140474 = t140473+1.0;
                double t140475 = c0p*t140472*t140474*2.0;
                double t140476 = rho_a[index]-rho_b[index];
                double t140477 = t140476*t140476;
                double t140478 = 1.0/t140458;
                double t140479 = t140476*t140478;
                double t140480 = 1.0/(t140458*t140458*t140458*t140458);
                double t140481 = t140477*t140477;
                double t140482 = t140479+1.0;
                double t140483 = pow(t140482,4.0/3.0);
                double t140484 = -t140479+1.0;
                double t140485 = pow(t140484,4.0/3.0);
                double t140486 = t140483+t140485-2.0;
                double t140487 = gcab*gcab;
                double t140488 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t140489 = 1.0/pow(rho_a[index],8.0/3.0);
                double t140490 = gamma_aa[index]*t140489*(1.0/2.0);
                double t140491 = 1.0/pow(rho_b[index],8.0/3.0);
                double t140492 = gamma_bb[index]*t140491*(1.0/2.0);
                double t140493 = t140490+t140492;
                double t140494 = gcab*t140493;
                double t140495 = t140494+1.0;
                double t140496 = t140493*t140493;
                double t140497 = t140487*t140496;
                double t140498 = gcab*t140493*2.0;
                double t140499 = t140497+t140498+1.0;
                double t140500 = t140487*t140487;
                double t140517 = gcab*t140489*2.0;
                double t140518 = t140493*t140487*t140489*6.0;
                double t140519 = gcab*t140487*t140496*t140489*6.0;
                double t140520 = t140500*t140493*t140496*t140489*2.0;
                double t140501 = t140520+t140517+t140518+t140519;
                double t140502 = t140496*t140496;
                double t140522 = gcab*t140489*(3.0/2.0);
                double t140523 = t140493*t140487*t140489*3.0;
                double t140524 = gcab*t140487*t140496*t140489*(3.0/2.0);
                double t140503 = t140522+t140523+t140524;
                double t140504 = t140487*t140496*3.0;
                double t140505 = gcab*t140493*t140487*t140496;
                double t140506 = gcab*t140493*3.0;
                double t140507 = t140504+t140505+t140506+1.0;
                double t140514 = gcab*t140489;
                double t140515 = t140493*t140487*t140489;
                double t140508 = t140514+t140515;
                double t140509 = t140487*t140496*6.0;
                double t140510 = gcab*t140493*t140487*t140496*4.0;
                double t140511 = t140500*t140502;
                double t140512 = gcab*t140493*4.0;
                double t140513 = t140510+t140511+t140512+t140509+1.0;
                double t140516 = 1.0/(t140499*t140499);
                double t140521 = 1.0/(t140513*t140513);
                double t140525 = 1.0/(t140507*t140507);
                double t140526 = b1f*t140418;
                double t140527 = b3f*t140419;
                double t140528 = b4f*t140420*t140421;
                double t140529 = b2f*c*t140416;
                double t140530 = t140526+t140527+t140528+t140529;
                double t140531 = 1.0/t140530;
                double t140532 = t140440*t140531*(1.0/2.0);
                double t140533 = t140532+1.0;
                double t140534 = log(t140533);
                double t140535 = a1f*c*t140416;
                double t140536 = t140535+1.0;
                double t140537 = c0f*t140534*t140536*2.0;
                double t140538 = c0p*t140431*t140433*2.0;
                double t140539 = gcaa*gcaa;
                double t140540 = gamma_aa[index]*gamma_aa[index];
                double t140541 = t140539*t140539;
                double t140542 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t140543 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t140544 = gamma_aa[index]*gcaa*t140489;
                double t140545 = t140544+1.0;
                double t140546 = gamma_aa[index]*gcaa*t140489*2.0;
                double t140547 = t140540*t140539*t140488;
                double t140548 = t140546+t140547+1.0;
                double t140549 = gamma_aa[index]*gcaa*t140489*3.0;
                double t140550 = gamma_aa[index]*gcaa*t140540*t140543*t140539;
                double t140551 = t140540*t140539*t140488*3.0;
                double t140552 = t140550+t140551+t140549+1.0;
                double t140553 = t140540*t140540;
                double t140569 = gcaa*t140489*4.0;
                double t140570 = gamma_aa[index]*t140539*t140488*1.2E1;
                double t140571 = gcaa*t140540*t140543*t140539*1.2E1;
                double t140572 = gamma_aa[index]*t140540*t140541*t140542*4.0;
                double t140554 = t140570+t140571+t140572+t140569;
                double t140555 = gamma_aa[index]*gcaa*t140489*4.0;
                double t140556 = gamma_aa[index]*gcaa*t140540*t140543*t140539*4.0;
                double t140557 = t140540*t140539*t140488*6.0;
                double t140558 = t140541*t140542*t140553;
                double t140559 = t140555+t140556+t140557+t140558+1.0;
                double t140562 = gcaa*t140489*2.0;
                double t140563 = gamma_aa[index]*t140539*t140488*2.0;
                double t140560 = t140562+t140563;
                double t140561 = 1.0/(t140552*t140552);
                double t140564 = 1.0/(t140548*t140548);
                double t140565 = gcaa*t140489*3.0;
                double t140566 = gamma_aa[index]*t140539*t140488*6.0;
                double t140567 = gcaa*t140540*t140543*t140539*3.0;
                double t140568 = t140565+t140566+t140567;
                double t140573 = 1.0/(t140559*t140559);
                double t140574 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t140575 = 1.0/pow(t140574,1.0/3.0);
                double t140576 = 1.0/(omega*omega);
                double t140577 = pow(t140574,2.0/3.0);
                double t140578 = exp(-t140576*t140577);
                double t140579 = gx*gx;
                double t140580 = t140579*t140579;
                double t140581 = gamma_aa[index]*gx*t140489;
                double t140582 = t140581+1.0;
                double t140583 = gamma_aa[index]*gx*t140489*2.0;
                double t140584 = t140540*t140488*t140579;
                double t140585 = t140583+t140584+1.0;
                double t140586 = gamma_aa[index]*gx*t140489*3.0;
                double t140587 = gamma_aa[index]*gx*t140540*t140543*t140579;
                double t140588 = t140540*t140488*t140579*3.0;
                double t140589 = t140586+t140587+t140588+1.0;
                double t140605 = gx*t140489*4.0;
                double t140606 = gamma_aa[index]*t140488*t140579*1.2E1;
                double t140607 = gx*t140540*t140543*t140579*1.2E1;
                double t140608 = gamma_aa[index]*t140540*t140542*t140580*4.0;
                double t140590 = t140605+t140606+t140607+t140608;
                double t140591 = gamma_aa[index]*gx*t140489*4.0;
                double t140592 = gamma_aa[index]*gx*t140540*t140543*t140579*4.0;
                double t140593 = t140540*t140488*t140579*6.0;
                double t140594 = t140542*t140553*t140580;
                double t140595 = t140591+t140592+t140593+t140594+1.0;
                double t140598 = gx*t140489*2.0;
                double t140599 = gamma_aa[index]*t140488*t140579*2.0;
                double t140596 = t140598+t140599;
                double t140597 = 1.0/(t140589*t140589);
                double t140600 = 1.0/(t140585*t140585);
                double t140601 = gx*t140489*3.0;
                double t140602 = gamma_aa[index]*t140488*t140579*6.0;
                double t140603 = gx*t140540*t140543*t140579*3.0;
                double t140604 = t140601+t140602+t140603;
                double t140609 = 1.0/(t140595*t140595);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t140538+t140436*t140439*(t140537-c0p*t140431*t140433* \
                   2.0))+rho_b[index]*(t140457-t140436*t140439*(t140457-c0f*log((t140440*(1.0/2.0))/(b1f*t140443+b3f* \
                   t140444+b2f*c*t140441+b4f*t140420*t140445)+1.0)*(a1f*c*t140441+1.0)*2.0))-t140458*(t140475-t140480* \
                   t140481*t140439*t140486*(t140475-c0f*log((t140440*(1.0/2.0))/(b1f*t140461+b3f*t140462+b2f*c*t140459+ \
                   b4f*t140420*t140463)+1.0)*(a1f*c*t140459+1.0)*2.0)+(Aa*t140439*t140486*log((1.0/2.0)/(Aa*(b1a*t140461+ \
                   b3a*t140462+b2a*c*t140459+b4a*t140420*t140463))+1.0)*(t140480*t140481-1.0)*(a1a*c*t140459+1.0)*2.0) \
                   /d2fz0))*(ccab1*1.0/(t140495*t140495)*t140487*t140488*(1.0/2.0)-(ccab2*t140487*t140488*(1.0/2.0))/ \
                   t140499-ccab4*t140500*(t140501*t140501)*t140502*1.0/(t140513*t140513*t140513)*2.0-ccab2*(t140508*t140508) \
                   *t140487*t140496*1.0/(t140499*t140499*t140499)*2.0+ccab2*t140500*t140516*t140496*t140488*(1.0/2.0) \
                   +ccab4*t140500*t140502*t140521*(t140487*t140488*3.0+t140500*t140496*t140488*3.0+gcab*t140493*t140487* \
                   t140488*6.0)-(ccab4*t140500*t140496*t140488*3.0)/t140513+ccab2*t140516*t140508*t140493*t140487*t140489* \
                   2.0-(ccab3*gcab*t140493*t140487*t140488*(3.0/2.0))/t140507-ccab1*gcab*t140493*1.0/(t140495*t140495* \
                   t140495)*t140487*t140488*(1.0/2.0)-ccab3*gcab*(t140503*t140503)*1.0/(t140507*t140507*t140507)*t140493* \
                   t140487*t140496*2.0+ccab3*gcab*t140503*t140525*t140487*t140496*t140489*3.0+ccab4*t140500*t140501*t140521* \
                   t140493*t140496*t140489*4.0+ccab3*gcab*t140525*t140493*t140487*t140496*(t140487*t140488*(3.0/2.0)+ \
                   gcab*t140493*t140487*t140488*(3.0/2.0)))+rho_a[index]*(t140538+t140436*t140439*(t140537-t140538))* \
                   (ccaa1*1.0/(t140545*t140545)*t140539*t140488*2.0-(ccaa2*t140539*t140488*2.0)/t140548+ccaa2*t140540* \
                   t140541*t140542*t140564*2.0-(ccaa4*t140540*t140541*t140542*1.2E1)/t140559+ccaa4*t140541*t140542*t140553* \
                   t140573*(t140539*t140488*1.2E1+t140540*t140541*t140542*1.2E1+gamma_aa[index]*gcaa*t140543*t140539* \
                   2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t140543*t140539*6.0)/t140552-ccaa1*gamma_aa[index]*gcaa*t140543* \
                   1.0/(t140545*t140545*t140545)*t140539*2.0-ccaa4*t140541*t140542*t140553*(t140554*t140554)*1.0/(t140559* \
                   t140559*t140559)*2.0-ccaa2*t140540*(t140560*t140560)*t140539*1.0/(t140548*t140548*t140548)*t140488* \
                   2.0+ccaa2*gamma_aa[index]*t140560*t140564*t140539*t140488*4.0+ccaa4*gamma_aa[index]*t140540*t140541* \
                   t140542*t140554*t140573*8.0+ccaa3*gcaa*t140540*t140543*t140561*t140539*t140568*6.0+ccaa3*gamma_aa[index]* \
                   gcaa*t140540*t140543*t140561*t140539*(t140539*t140488*6.0+gamma_aa[index]*gcaa*t140543*t140539*6.0) \
                   -ccaa3*gamma_aa[index]*gcaa*t140540*t140543*1.0/(t140552*t140552*t140552)*t140539*(t140568*t140568) \
                   *2.0)+c0*pow(rho_a[index],4.0/3.0)*(omega*t140575*(erf(pow(t140574,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t140575*(-t140578+(omega*omega)*1.0/pow(t140574,2.0/3.0)*(t140578-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*1.0/(t140582*t140582)*t140488*t140579*2.0-(cx2*t140488*t140579* \
                   2.0)/t140585+cx2*t140600*t140540*t140542*t140580*2.0-(cx4*t140540*t140542*t140580*1.2E1)/t140595+cx4* \
                   t140542*t140553*t140580*t140609*(t140488*t140579*1.2E1+t140540*t140542*t140580*1.2E1+gamma_aa[index]* \
                   gx*t140543*t140579*2.4E1)-cx1*gamma_aa[index]*gx*t140543*1.0/(t140582*t140582*t140582)*t140579*2.0- \
                   (cx3*gamma_aa[index]*gx*t140543*t140579*6.0)/t140589-cx2*t140540*1.0/(t140585*t140585*t140585)*t140488* \
                   (t140596*t140596)*t140579*2.0-cx4*t140542*t140553*t140580*(t140590*t140590)*1.0/(t140595*t140595*t140595) \
                   *2.0+cx2*gamma_aa[index]*t140600*t140488*t140596*t140579*4.0+cx4*gamma_aa[index]*t140540*t140542*t140580* \
                   t140590*t140609*8.0+cx3*gx*t140540*t140604*t140543*t140579*t140597*6.0+cx3*gamma_aa[index]*gx*t140540* \
                   t140543*t140579*t140597*(t140488*t140579*6.0+gamma_aa[index]*gx*t140543*t140579*6.0)-cx3*gamma_aa[index]* \
                   gx*t140540*(t140604*t140604)*t140543*t140579*1.0/(t140589*t140589*t140589)*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t142344 = 1.0/pow(rho_a[index],1.0/3.0);
                double t142345 = c*t142344;
                double t142346 = sqrt(t142345);
                double t142347 = pow(t142345,3.0/2.0);
                double t142348 = c*c;
                double t142349 = 1.0/pow(rho_a[index],2.0/3.0);
                double t142350 = 1.0/c0p;
                double t142351 = b1p*t142346;
                double t142352 = b3p*t142347;
                double t142353 = b4p*t142348*t142349;
                double t142354 = b2p*c*t142344;
                double t142355 = t142351+t142352+t142353+t142354;
                double t142356 = 1.0/t142355;
                double t142357 = t142350*t142356*(1.0/2.0);
                double t142358 = t142357+1.0;
                double t142359 = log(t142358);
                double t142360 = a1p*c*t142344;
                double t142361 = t142360+1.0;
                double t142362 = gcaa*gcaa;
                double t142363 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t142364 = 1.0/pow(rho_a[index],8.0/3.0);
                double t142365 = gamma_aa[index]*gamma_aa[index];
                double t142366 = t142362*t142362;
                double t142367 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t142368 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t142369 = gamma_aa[index]*gcaa*t142364;
                double t142370 = t142369+1.0;
                double t142371 = gamma_aa[index]*gcaa*t142364*2.0;
                double t142372 = t142362*t142363*t142365;
                double t142373 = t142371+t142372+1.0;
                double t142374 = gamma_aa[index]*gcaa*t142364*3.0;
                double t142375 = gamma_aa[index]*gcaa*t142362*t142365*t142368;
                double t142376 = t142362*t142363*t142365*3.0;
                double t142377 = t142374+t142375+t142376+1.0;
                double t142378 = t142365*t142365;
                double t142394 = gcaa*t142364*4.0;
                double t142395 = gamma_aa[index]*t142362*t142363*1.2E1;
                double t142396 = gcaa*t142362*t142365*t142368*1.2E1;
                double t142397 = gamma_aa[index]*t142365*t142366*t142367*4.0;
                double t142379 = t142394+t142395+t142396+t142397;
                double t142380 = gamma_aa[index]*gcaa*t142364*4.0;
                double t142381 = gamma_aa[index]*gcaa*t142362*t142365*t142368*4.0;
                double t142382 = t142362*t142363*t142365*6.0;
                double t142383 = t142366*t142367*t142378;
                double t142384 = t142380+t142381+t142382+t142383+1.0;
                double t142387 = gcaa*t142364*2.0;
                double t142388 = gamma_aa[index]*t142362*t142363*2.0;
                double t142385 = t142387+t142388;
                double t142386 = 1.0/(t142377*t142377);
                double t142389 = 1.0/(t142373*t142373);
                double t142390 = gcaa*t142364*3.0;
                double t142391 = gamma_aa[index]*t142362*t142363*6.0;
                double t142392 = gcaa*t142362*t142365*t142368*3.0;
                double t142393 = t142390+t142391+t142392;
                double t142398 = 1.0/(t142384*t142384);
                double t142399 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t142400 = 1.0/pow(t142399,1.0/3.0);
                double t142401 = 1.0/(omega*omega);
                double t142402 = pow(t142399,2.0/3.0);
                double t142403 = exp(-t142401*t142402);
                double t142404 = gx*gx;
                double t142405 = t142404*t142404;
                double t142406 = gamma_aa[index]*gx*t142364;
                double t142407 = t142406+1.0;
                double t142408 = gamma_aa[index]*gx*t142364*2.0;
                double t142409 = t142404*t142363*t142365;
                double t142410 = t142408+t142409+1.0;
                double t142411 = gamma_aa[index]*gx*t142364*3.0;
                double t142412 = gamma_aa[index]*gx*t142404*t142365*t142368;
                double t142413 = t142404*t142363*t142365*3.0;
                double t142414 = t142411+t142412+t142413+1.0;
                double t142430 = gx*t142364*4.0;
                double t142431 = gamma_aa[index]*t142404*t142363*1.2E1;
                double t142432 = gx*t142404*t142365*t142368*1.2E1;
                double t142433 = gamma_aa[index]*t142405*t142365*t142367*4.0;
                double t142415 = t142430+t142431+t142432+t142433;
                double t142416 = gamma_aa[index]*gx*t142364*4.0;
                double t142417 = gamma_aa[index]*gx*t142404*t142365*t142368*4.0;
                double t142418 = t142404*t142363*t142365*6.0;
                double t142419 = t142405*t142367*t142378;
                double t142420 = t142416+t142417+t142418+t142419+1.0;
                double t142423 = gx*t142364*2.0;
                double t142424 = gamma_aa[index]*t142404*t142363*2.0;
                double t142421 = t142423+t142424;
                double t142422 = 1.0/(t142414*t142414);
                double t142425 = 1.0/(t142410*t142410);
                double t142426 = gx*t142364*3.0;
                double t142427 = gamma_aa[index]*t142404*t142363*6.0;
                double t142428 = gx*t142404*t142365*t142368*3.0;
                double t142429 = t142426+t142427+t142428;
                double t142434 = 1.0/(t142420*t142420);
                v_gamma_aa_gamma_aa_[index] = rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t142346+b3f*t142347+b2f*c*t142344+b4f*t142348*t142349))+1.0)*(a1f*c*t142344+1.0)*2.0-c0p*t142361*t142359* \
                   2.0))/(two_13*2.0-2.0)+c0p*t142361*t142359*2.0)*(ccaa1*1.0/(t142370*t142370)*t142362*t142363*2.0-(ccaa2* \
                   t142362*t142363*2.0)/t142373+ccaa2*t142365*t142366*t142367*t142389*2.0-(ccaa4*t142365*t142366*t142367* \
                   1.2E1)/t142384+ccaa4*t142366*t142367*t142378*t142398*(t142362*t142363*1.2E1+t142365*t142366*t142367* \
                   1.2E1+gamma_aa[index]*gcaa*t142362*t142368*2.4E1)-ccaa1*gamma_aa[index]*gcaa*1.0/(t142370*t142370* \
                   t142370)*t142362*t142368*2.0-(ccaa3*gamma_aa[index]*gcaa*t142362*t142368*6.0)/t142377-ccaa2*t142362* \
                   t142363*1.0/(t142373*t142373*t142373)*t142365*(t142385*t142385)*2.0-ccaa4*t142366*1.0/(t142384*t142384* \
                   t142384)*t142367*t142378*(t142379*t142379)*2.0+ccaa2*gamma_aa[index]*t142362*t142363*t142385*t142389* \
                   4.0+ccaa4*gamma_aa[index]*t142365*t142366*t142367*t142379*t142398*8.0+ccaa3*gcaa*t142362*t142365*t142393* \
                   t142368*t142386*6.0+ccaa3*gamma_aa[index]*gcaa*t142362*t142365*t142368*t142386*(t142362*t142363*6.0+ \
                   gamma_aa[index]*gcaa*t142362*t142368*6.0)-ccaa3*gamma_aa[index]*gcaa*t142362*t142365*(t142393*t142393) \
                   *t142368*1.0/(t142377*t142377*t142377)*2.0)+c0*pow(rho_a[index],4.0/3.0)*(omega*t142400*(erf(pow(t142399,1.0/ \
                   3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t142400*(-t142403+(omega*omega)*1.0/ \
                   pow(t142399,2.0/3.0)*(t142403-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*t142404*1.0/(t142407*t142407) \
                   *t142363*2.0-(cx2*t142404*t142363*2.0)/t142410+cx2*t142405*t142425*t142365*t142367*2.0-(cx4*t142405* \
                   t142365*t142367*1.2E1)/t142420+cx4*t142405*t142434*t142367*t142378*(t142404*t142363*1.2E1+t142405* \
                   t142365*t142367*1.2E1+gamma_aa[index]*gx*t142404*t142368*2.4E1)-cx1*gamma_aa[index]*gx*t142404*1.0/ \
                   (t142407*t142407*t142407)*t142368*2.0-(cx3*gamma_aa[index]*gx*t142404*t142368*6.0)/t142414-cx2*1.0/ \
                   (t142410*t142410*t142410)*(t142421*t142421)*t142404*t142363*t142365*2.0-cx4*1.0/(t142420*t142420*t142420) \
                   *t142405*(t142415*t142415)*t142367*t142378*2.0+cx2*gamma_aa[index]*t142421*t142404*t142425*t142363* \
                   4.0+cx4*gamma_aa[index]*t142405*t142415*t142434*t142365*t142367*8.0+cx3*gx*t142404*t142422*t142365* \
                   t142429*t142368*6.0+cx3*gamma_aa[index]*gx*t142404*t142422*t142365*t142368*(t142404*t142363*6.0+gamma_aa[index]* \
                   gx*t142404*t142368*6.0)-cx3*gamma_aa[index]*gx*t142404*1.0/(t142414*t142414*t142414)*t142365*(t142429* \
                   t142429)*t142368*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t140612 = 1.0/pow(rho_a[index],1.0/3.0);
                double t140613 = c*t140612;
                double t140614 = sqrt(t140613);
                double t140615 = pow(t140613,3.0/2.0);
                double t140616 = c*c;
                double t140617 = 1.0/pow(rho_a[index],2.0/3.0);
                double t140618 = 1.0/c0p;
                double t140619 = b1p*t140614;
                double t140620 = b3p*t140615;
                double t140621 = b4p*t140616*t140617;
                double t140622 = b2p*c*t140612;
                double t140623 = t140620+t140621+t140622+t140619;
                double t140624 = 1.0/t140623;
                double t140625 = t140624*t140618*(1.0/2.0);
                double t140626 = t140625+1.0;
                double t140627 = log(t140626);
                double t140628 = a1p*c*t140612;
                double t140629 = t140628+1.0;
                double t140630 = pow(2.0,1.0/3.0);
                double t140631 = t140630*2.0;
                double t140632 = t140631-2.0;
                double t140633 = two_13*2.0;
                double t140634 = t140633-2.0;
                double t140635 = 1.0/t140634;
                double t140636 = 1.0/c0f;
                double t140637 = 1.0/pow(rho_b[index],1.0/3.0);
                double t140638 = c*t140637;
                double t140639 = sqrt(t140638);
                double t140640 = pow(t140638,3.0/2.0);
                double t140641 = 1.0/pow(rho_b[index],2.0/3.0);
                double t140642 = b1p*t140639;
                double t140643 = b3p*t140640;
                double t140644 = b4p*t140641*t140616;
                double t140645 = b2p*c*t140637;
                double t140646 = t140642+t140643+t140644+t140645;
                double t140647 = 1.0/t140646;
                double t140648 = t140618*t140647*(1.0/2.0);
                double t140649 = t140648+1.0;
                double t140650 = log(t140649);
                double t140651 = a1p*c*t140637;
                double t140652 = t140651+1.0;
                double t140653 = c0p*t140650*t140652*2.0;
                double t140654 = rho_a[index]+rho_b[index];
                double t140655 = 1.0/pow(t140654,1.0/3.0);
                double t140656 = c*t140655;
                double t140657 = sqrt(t140656);
                double t140658 = pow(t140656,3.0/2.0);
                double t140659 = 1.0/pow(t140654,2.0/3.0);
                double t140660 = b1p*t140657;
                double t140661 = b3p*t140658;
                double t140662 = b4p*t140616*t140659;
                double t140663 = b2p*c*t140655;
                double t140664 = t140660+t140661+t140662+t140663;
                double t140665 = 1.0/t140664;
                double t140666 = t140618*t140665*(1.0/2.0);
                double t140667 = t140666+1.0;
                double t140668 = log(t140667);
                double t140669 = a1p*c*t140655;
                double t140670 = t140669+1.0;
                double t140671 = c0p*t140670*t140668*2.0;
                double t140672 = rho_a[index]-rho_b[index];
                double t140673 = t140672*t140672;
                double t140674 = 1.0/t140654;
                double t140675 = t140672*t140674;
                double t140676 = 1.0/(t140654*t140654*t140654*t140654);
                double t140677 = t140673*t140673;
                double t140678 = t140675+1.0;
                double t140679 = pow(t140678,4.0/3.0);
                double t140680 = -t140675+1.0;
                double t140681 = pow(t140680,4.0/3.0);
                double t140682 = t140681+t140679-2.0;
                double t140683 = gcab*gcab;
                double t140686 = 1.0/pow(rho_a[index],8.0/3.0);
                double t140687 = 1.0/pow(rho_b[index],8.0/3.0);
                double t140688 = gamma_aa[index]*t140686*(1.0/2.0);
                double t140689 = gamma_bb[index]*t140687*(1.0/2.0);
                double t140684 = t140688+t140689;
                double t140685 = t140684*t140684;
                double t140690 = t140683*t140683;
                double t140691 = t140685*t140685;
                double t140692 = t140683*t140685*3.0;
                double t140693 = gcab*t140683*t140684*t140685;
                double t140694 = gcab*t140684*3.0;
                double t140695 = t140692+t140693+t140694+1.0;
                double t140696 = t140683*t140685;
                double t140697 = gcab*t140684*2.0;
                double t140698 = t140696+t140697+1.0;
                double t140699 = t140683*t140685*6.0;
                double t140700 = gcab*t140683*t140684*t140685*4.0;
                double t140701 = t140690*t140691;
                double t140702 = gcab*t140684*4.0;
                double t140703 = t140700+t140701+t140702+t140699+1.0;
                double t140704 = 1.0/(t140698*t140698);
                double t140705 = gcab*t140686;
                double t140706 = t140683*t140684*t140686;
                double t140707 = t140705+t140706;
                double t140708 = gcab*t140687;
                double t140709 = t140683*t140684*t140687;
                double t140710 = t140708+t140709;
                double t140711 = gcab*t140684;
                double t140712 = t140711+1.0;
                double t140713 = gcab*t140686*2.0;
                double t140714 = t140683*t140684*t140686*6.0;
                double t140715 = gcab*t140683*t140685*t140686*6.0;
                double t140716 = t140690*t140684*t140685*t140686*2.0;
                double t140717 = t140713+t140714+t140715+t140716;
                double t140718 = 1.0/(t140703*t140703);
                double t140719 = gcab*t140687*2.0;
                double t140720 = t140683*t140684*t140687*6.0;
                double t140721 = gcab*t140683*t140685*t140687*6.0;
                double t140722 = t140690*t140684*t140685*t140687*2.0;
                double t140723 = t140720+t140721+t140722+t140719;
                double t140724 = gcab*t140686*(3.0/2.0);
                double t140725 = t140683*t140684*t140686*3.0;
                double t140726 = gcab*t140683*t140685*t140686*(3.0/2.0);
                double t140727 = t140724+t140725+t140726;
                double t140728 = 1.0/(t140695*t140695);
                double t140729 = gcab*t140687*(3.0/2.0);
                double t140730 = t140683*t140684*t140687*3.0;
                double t140731 = gcab*t140683*t140685*t140687*(3.0/2.0);
                double t140732 = t140730+t140731+t140729;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t140653-t140632*t140635*(t140653-c0f*log((t140636*(1.0/ \
                   2.0))/(b1f*t140639+b3f*t140640+b2f*c*t140637+b4f*t140641*t140616)+1.0)*(a1f*c*t140637+1.0)*2.0))+t140654* \
                   (t140671-t140635*t140682*t140676*t140677*(t140671-c0f*log((t140636*(1.0/2.0))/(b1f*t140657+b3f*t140658+ \
                   b2f*c*t140655+b4f*t140616*t140659)+1.0)*(a1f*c*t140655+1.0)*2.0)+(Aa*t140635*t140682*log((1.0/2.0) \
                   /(Aa*(b1a*t140657+b3a*t140658+b2a*c*t140655+b4a*t140616*t140659))+1.0)*(t140676*t140677-1.0)*(a1a* \
                   c*t140655+1.0)*2.0)/d2fz0)+rho_a[index]*(t140632*t140635*(c0p*t140627*t140629*2.0-c0f*log((t140636* \
                   (1.0/2.0))/(b1f*t140614+b3f*t140615+b2f*c*t140612+b4f*t140616*t140617)+1.0)*(a1f*c*t140612+1.0)*2.0) \
                   -c0p*t140627*t140629*2.0))*(ccab4*t140690*t140691*t140718*(t140683*t140686*t140687*3.0+t140690*t140685* \
                   t140686*t140687*3.0+gcab*t140683*t140684*t140686*t140687*6.0)+ccab1*1.0/(t140712*t140712)*t140683* \
                   t140686*t140687*(1.0/2.0)-(ccab2*t140683*t140686*t140687*(1.0/2.0))/t140698+ccab2*t140710*t140704* \
                   t140683*t140684*t140686+ccab2*t140704*t140707*t140683*t140684*t140687+ccab2*t140704*t140690*t140685* \
                   t140686*t140687*(1.0/2.0)-ccab4*1.0/(t140703*t140703*t140703)*t140723*t140690*t140717*t140691*2.0- \
                   ccab2*t140710*t140707*t140683*t140685*1.0/(t140698*t140698*t140698)*2.0-(ccab4*t140690*t140685*t140686* \
                   t140687*3.0)/t140703+ccab3*gcab*t140732*t140683*t140728*t140685*t140686*(3.0/2.0)+ccab3*gcab*t140727* \
                   t140683*t140728*t140685*t140687*(3.0/2.0)+ccab4*t140723*t140690*t140718*t140684*t140685*t140686*2.0+ \
                   ccab4*t140690*t140717*t140718*t140684*t140685*t140687*2.0+ccab3*gcab*t140683*t140728*t140684*t140685* \
                   (t140683*t140686*t140687*(3.0/2.0)+gcab*t140683*t140684*t140686*t140687*(3.0/2.0))-ccab1*gcab*1.0/ \
                   (t140712*t140712*t140712)*t140683*t140684*t140686*t140687*(1.0/2.0)-(ccab3*gcab*t140683*t140684*t140686* \
                   t140687*(3.0/2.0))/t140695-ccab3*gcab*t140732*t140727*t140683*t140684*t140685*1.0/(t140695*t140695* \
                   t140695)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t140736 = 1.0/pow(rho_a[index],1.0/3.0);
                double t140737 = c*t140736;
                double t140738 = sqrt(t140737);
                double t140739 = pow(t140737,3.0/2.0);
                double t140740 = c*c;
                double t140741 = 1.0/pow(rho_a[index],2.0/3.0);
                double t140742 = 1.0/c0p;
                double t140743 = b1p*t140738;
                double t140744 = b3p*t140739;
                double t140745 = b4p*t140740*t140741;
                double t140746 = b2p*c*t140736;
                double t140747 = t140743+t140744+t140745+t140746;
                double t140748 = 1.0/t140747;
                double t140749 = t140742*t140748*(1.0/2.0);
                double t140750 = t140749+1.0;
                double t140751 = log(t140750);
                double t140752 = a1p*c*t140736;
                double t140753 = t140752+1.0;
                double t140754 = pow(2.0,1.0/3.0);
                double t140755 = t140754*2.0;
                double t140756 = t140755-2.0;
                double t140757 = two_13*2.0;
                double t140758 = t140757-2.0;
                double t140759 = 1.0/t140758;
                double t140760 = 1.0/c0f;
                double t140761 = 1.0/pow(rho_b[index],1.0/3.0);
                double t140762 = c*t140761;
                double t140763 = sqrt(t140762);
                double t140764 = pow(t140762,3.0/2.0);
                double t140765 = 1.0/pow(rho_b[index],2.0/3.0);
                double t140766 = b1p*t140763;
                double t140767 = b3p*t140764;
                double t140768 = b4p*t140740*t140765;
                double t140769 = b2p*c*t140761;
                double t140770 = t140766+t140767+t140768+t140769;
                double t140771 = 1.0/t140770;
                double t140772 = t140742*t140771*(1.0/2.0);
                double t140773 = t140772+1.0;
                double t140774 = log(t140773);
                double t140775 = a1p*c*t140761;
                double t140776 = t140775+1.0;
                double t140777 = c0p*t140774*t140776*2.0;
                double t140778 = rho_a[index]+rho_b[index];
                double t140779 = 1.0/pow(t140778,1.0/3.0);
                double t140780 = c*t140779;
                double t140781 = sqrt(t140780);
                double t140782 = pow(t140780,3.0/2.0);
                double t140783 = 1.0/pow(t140778,2.0/3.0);
                double t140784 = b1p*t140781;
                double t140785 = b3p*t140782;
                double t140786 = b4p*t140740*t140783;
                double t140787 = b2p*c*t140779;
                double t140788 = t140784+t140785+t140786+t140787;
                double t140789 = 1.0/t140788;
                double t140790 = t140742*t140789*(1.0/2.0);
                double t140791 = t140790+1.0;
                double t140792 = log(t140791);
                double t140793 = a1p*c*t140779;
                double t140794 = t140793+1.0;
                double t140795 = c0p*t140792*t140794*2.0;
                double t140796 = rho_a[index]-rho_b[index];
                double t140797 = t140796*t140796;
                double t140798 = 1.0/t140778;
                double t140799 = t140796*t140798;
                double t140800 = 1.0/(t140778*t140778*t140778*t140778);
                double t140801 = t140797*t140797;
                double t140802 = t140799+1.0;
                double t140803 = pow(t140802,4.0/3.0);
                double t140804 = -t140799+1.0;
                double t140805 = pow(t140804,4.0/3.0);
                double t140806 = t140803+t140805-2.0;
                double t140807 = gcab*gcab;
                double t140808 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t140809 = 1.0/pow(rho_a[index],8.0/3.0);
                double t140810 = gamma_aa[index]*t140809*(1.0/2.0);
                double t140811 = 1.0/pow(rho_b[index],8.0/3.0);
                double t140812 = gamma_bb[index]*t140811*(1.0/2.0);
                double t140813 = t140810+t140812;
                double t140814 = gcab*t140813;
                double t140815 = t140814+1.0;
                double t140816 = t140813*t140813;
                double t140817 = t140807*t140816;
                double t140818 = gcab*t140813*2.0;
                double t140819 = t140817+t140818+1.0;
                double t140820 = t140807*t140807;
                double t140837 = gcab*t140811*2.0;
                double t140838 = t140811*t140813*t140807*6.0;
                double t140839 = gcab*t140811*t140807*t140816*6.0;
                double t140840 = t140811*t140820*t140813*t140816*2.0;
                double t140821 = t140840+t140837+t140838+t140839;
                double t140822 = t140816*t140816;
                double t140842 = gcab*t140811*(3.0/2.0);
                double t140843 = t140811*t140813*t140807*3.0;
                double t140844 = gcab*t140811*t140807*t140816*(3.0/2.0);
                double t140823 = t140842+t140843+t140844;
                double t140824 = t140807*t140816*3.0;
                double t140825 = gcab*t140813*t140807*t140816;
                double t140826 = gcab*t140813*3.0;
                double t140827 = t140824+t140825+t140826+1.0;
                double t140834 = gcab*t140811;
                double t140835 = t140811*t140813*t140807;
                double t140828 = t140834+t140835;
                double t140829 = t140807*t140816*6.0;
                double t140830 = gcab*t140813*t140807*t140816*4.0;
                double t140831 = t140820*t140822;
                double t140832 = gcab*t140813*4.0;
                double t140833 = t140830+t140831+t140832+t140829+1.0;
                double t140836 = 1.0/(t140819*t140819);
                double t140841 = 1.0/(t140833*t140833);
                double t140845 = 1.0/(t140827*t140827);
                double t140846 = b1f*t140763;
                double t140847 = b3f*t140764;
                double t140848 = b4f*t140740*t140765;
                double t140849 = b2f*c*t140761;
                double t140850 = t140846+t140847+t140848+t140849;
                double t140851 = 1.0/t140850;
                double t140852 = t140760*t140851*(1.0/2.0);
                double t140853 = t140852+1.0;
                double t140854 = log(t140853);
                double t140855 = a1f*c*t140761;
                double t140856 = t140855+1.0;
                double t140857 = t140777-c0f*t140854*t140856*2.0;
                double t140858 = t140777-t140756*t140857*t140759;
                double t140859 = gcaa*gcaa;
                double t140860 = gamma_bb[index]*gamma_bb[index];
                double t140861 = t140859*t140859;
                double t140862 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t140863 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t140864 = gamma_bb[index]*gcaa*t140811;
                double t140865 = t140864+1.0;
                double t140866 = gamma_bb[index]*gcaa*t140811*2.0;
                double t140867 = t140860*t140808*t140859;
                double t140868 = t140866+t140867+1.0;
                double t140869 = gamma_bb[index]*gcaa*t140811*3.0;
                double t140870 = gamma_bb[index]*gcaa*t140860*t140863*t140859;
                double t140871 = t140860*t140808*t140859*3.0;
                double t140872 = t140870+t140871+t140869+1.0;
                double t140873 = t140860*t140860;
                double t140889 = gcaa*t140811*4.0;
                double t140890 = gamma_bb[index]*t140808*t140859*1.2E1;
                double t140891 = gcaa*t140860*t140863*t140859*1.2E1;
                double t140892 = gamma_bb[index]*t140860*t140861*t140862*4.0;
                double t140874 = t140890+t140891+t140892+t140889;
                double t140875 = gamma_bb[index]*gcaa*t140811*4.0;
                double t140876 = gamma_bb[index]*gcaa*t140860*t140863*t140859*4.0;
                double t140877 = t140860*t140808*t140859*6.0;
                double t140878 = t140861*t140862*t140873;
                double t140879 = t140875+t140876+t140877+t140878+1.0;
                double t140882 = gcaa*t140811*2.0;
                double t140883 = gamma_bb[index]*t140808*t140859*2.0;
                double t140880 = t140882+t140883;
                double t140881 = 1.0/(t140872*t140872);
                double t140884 = 1.0/(t140868*t140868);
                double t140885 = gcaa*t140811*3.0;
                double t140886 = gamma_bb[index]*t140808*t140859*6.0;
                double t140887 = gcaa*t140860*t140863*t140859*3.0;
                double t140888 = t140885+t140886+t140887;
                double t140893 = 1.0/(t140879*t140879);
                double t140894 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t140895 = 1.0/pow(t140894,1.0/3.0);
                double t140896 = 1.0/(omega*omega);
                double t140897 = pow(t140894,2.0/3.0);
                double t140898 = exp(-t140896*t140897);
                double t140899 = gx*gx;
                double t140900 = t140899*t140899;
                double t140901 = gamma_bb[index]*gx*t140811;
                double t140902 = t140901+1.0;
                double t140903 = gamma_bb[index]*gx*t140811*2.0;
                double t140904 = t140860*t140808*t140899;
                double t140905 = t140903+t140904+1.0;
                double t140906 = gamma_bb[index]*gx*t140811*3.0;
                double t140907 = gamma_bb[index]*gx*t140860*t140863*t140899;
                double t140908 = t140860*t140808*t140899*3.0;
                double t140909 = t140906+t140907+t140908+1.0;
                double t140925 = gx*t140811*4.0;
                double t140926 = gamma_bb[index]*t140808*t140899*1.2E1;
                double t140927 = gx*t140860*t140863*t140899*1.2E1;
                double t140928 = gamma_bb[index]*t140900*t140860*t140862*4.0;
                double t140910 = t140925+t140926+t140927+t140928;
                double t140911 = gamma_bb[index]*gx*t140811*4.0;
                double t140912 = gamma_bb[index]*gx*t140860*t140863*t140899*4.0;
                double t140913 = t140860*t140808*t140899*6.0;
                double t140914 = t140900*t140862*t140873;
                double t140915 = t140911+t140912+t140913+t140914+1.0;
                double t140918 = gx*t140811*2.0;
                double t140919 = gamma_bb[index]*t140808*t140899*2.0;
                double t140916 = t140918+t140919;
                double t140917 = 1.0/(t140909*t140909);
                double t140920 = 1.0/(t140905*t140905);
                double t140921 = gx*t140811*3.0;
                double t140922 = gamma_bb[index]*t140808*t140899*6.0;
                double t140923 = gx*t140860*t140863*t140899*3.0;
                double t140924 = t140921+t140922+t140923;
                double t140929 = 1.0/(t140915*t140915);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t140858+t140778*(t140795-t140800*t140801*t140806*t140759* \
                   (t140795-c0f*log((t140760*(1.0/2.0))/(b1f*t140781+b3f*t140782+b2f*c*t140779+b4f*t140740*t140783)+1.0) \
                   *(a1f*c*t140779+1.0)*2.0)+(Aa*t140806*t140759*log((1.0/2.0)/(Aa*(b1a*t140781+b3a*t140782+b2a*c*t140779+ \
                   b4a*t140740*t140783))+1.0)*(t140800*t140801-1.0)*(a1a*c*t140779+1.0)*2.0)/d2fz0)+rho_a[index]*(t140756* \
                   t140759*(c0p*t140751*t140753*2.0-c0f*log((t140760*(1.0/2.0))/(b1f*t140738+b3f*t140739+b2f*c*t140736+ \
                   b4f*t140740*t140741)+1.0)*(a1f*c*t140736+1.0)*2.0)-c0p*t140751*t140753*2.0))*(ccab1*1.0/(t140815*t140815) \
                   *t140807*t140808*(1.0/2.0)-(ccab2*t140807*t140808*(1.0/2.0))/t140819-ccab4*t140820*(t140821*t140821) \
                   *t140822*1.0/(t140833*t140833*t140833)*2.0-ccab2*t140807*t140816*1.0/(t140819*t140819*t140819)*(t140828* \
                   t140828)*2.0+ccab2*t140820*t140816*t140808*t140836*(1.0/2.0)+ccab4*t140820*t140822*t140841*(t140807* \
                   t140808*3.0+t140820*t140816*t140808*3.0+gcab*t140813*t140807*t140808*6.0)-(ccab4*t140820*t140816*t140808* \
                   3.0)/t140833+ccab2*t140811*t140813*t140807*t140836*t140828*2.0-ccab1*gcab*t140813*1.0/(t140815*t140815* \
                   t140815)*t140807*t140808*(1.0/2.0)-(ccab3*gcab*t140813*t140807*t140808*(3.0/2.0))/t140827-ccab3*gcab* \
                   t140813*(t140823*t140823)*t140807*t140816*1.0/(t140827*t140827*t140827)*2.0+ccab3*gcab*t140811*t140823* \
                   t140807*t140816*t140845*3.0+ccab4*t140811*t140820*t140821*t140813*t140841*t140816*4.0+ccab3*gcab*t140813* \
                   t140807*t140816*t140845*(t140807*t140808*(3.0/2.0)+gcab*t140813*t140807*t140808*(3.0/2.0)))+rho_b[index]* \
                   t140858*(ccaa1*t140808*1.0/(t140865*t140865)*t140859*2.0-(ccaa2*t140808*t140859*2.0)/t140868+ccaa2* \
                   t140860*t140861*t140862*t140884*2.0-(ccaa4*t140860*t140861*t140862*1.2E1)/t140879+ccaa4*t140861*t140862* \
                   t140873*t140893*(t140808*t140859*1.2E1+t140860*t140861*t140862*1.2E1+gamma_bb[index]*gcaa*t140863* \
                   t140859*2.4E1)-(ccaa3*gamma_bb[index]*gcaa*t140863*t140859*6.0)/t140872-ccaa1*gamma_bb[index]*gcaa* \
                   t140863*1.0/(t140865*t140865*t140865)*t140859*2.0-ccaa2*t140860*t140808*(t140880*t140880)*t140859* \
                   1.0/(t140868*t140868*t140868)*2.0-ccaa4*t140861*t140862*t140873*(t140874*t140874)*1.0/(t140879*t140879* \
                   t140879)*2.0+ccaa2*gamma_bb[index]*t140808*t140880*t140884*t140859*4.0+ccaa4*gamma_bb[index]*t140860* \
                   t140861*t140862*t140874*t140893*8.0+ccaa3*gcaa*t140860*t140863*t140881*t140859*t140888*6.0+ccaa3*gamma_bb[index]* \
                   gcaa*t140860*t140863*t140881*t140859*(t140808*t140859*6.0+gamma_bb[index]*gcaa*t140863*t140859*6.0) \
                   -ccaa3*gamma_bb[index]*gcaa*t140860*t140863*1.0/(t140872*t140872*t140872)*t140859*(t140888*t140888) \
                   *2.0)+c0*pow(rho_b[index],4.0/3.0)*(omega*t140895*(erf(pow(t140894,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t140895*(-t140898+(omega*omega)*1.0/pow(t140894,2.0/3.0)*(t140898-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*1.0/(t140902*t140902)*t140808*t140899*2.0-(cx2*t140808*t140899* \
                   2.0)/t140905+cx2*t140900*t140920*t140860*t140862*2.0-(cx4*t140900*t140860*t140862*1.2E1)/t140915+cx4* \
                   t140900*t140862*t140873*t140929*(t140808*t140899*1.2E1+t140900*t140860*t140862*1.2E1+gamma_bb[index]* \
                   gx*t140863*t140899*2.4E1)-cx1*gamma_bb[index]*gx*1.0/(t140902*t140902*t140902)*t140863*t140899*2.0- \
                   (cx3*gamma_bb[index]*gx*t140863*t140899*6.0)/t140909-cx2*t140860*1.0/(t140905*t140905*t140905)*t140808* \
                   (t140916*t140916)*t140899*2.0-cx4*t140900*(t140910*t140910)*1.0/(t140915*t140915*t140915)*t140862* \
                   t140873*2.0+cx2*gamma_bb[index]*t140920*t140808*t140916*t140899*4.0+cx4*gamma_bb[index]*t140900*t140910* \
                   t140860*t140862*t140929*8.0+cx3*gx*t140860*t140924*t140863*t140917*t140899*6.0+cx3*gamma_bb[index]* \
                   gx*t140860*t140863*t140917*t140899*(t140808*t140899*6.0+gamma_bb[index]*gx*t140863*t140899*6.0)-cx3* \
                   gamma_bb[index]*gx*t140860*(t140924*t140924)*t140863*1.0/(t140909*t140909*t140909)*t140899*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t141594 = 1.0/pow(rho_b[index],1.0/3.0);
                double t141595 = c*t141594;
                double t141596 = sqrt(t141595);
                double t141597 = pow(t141595,3.0/2.0);
                double t141598 = c*c;
                double t141599 = 1.0/pow(rho_b[index],2.0/3.0);
                double t141600 = 1.0/c0p;
                double t141601 = b1p*t141596;
                double t141602 = b3p*t141597;
                double t141603 = b4p*t141598*t141599;
                double t141604 = b2p*c*t141594;
                double t141605 = t141601+t141602+t141603+t141604;
                double t141606 = 1.0/t141605;
                double t141607 = t141600*t141606*(1.0/2.0);
                double t141608 = t141607+1.0;
                double t141609 = log(t141608);
                double t141610 = a1p*c*t141594;
                double t141611 = t141610+1.0;
                double t141612 = gcaa*gcaa;
                double t141613 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t141614 = 1.0/pow(rho_b[index],8.0/3.0);
                double t141615 = gamma_bb[index]*gamma_bb[index];
                double t141616 = t141612*t141612;
                double t141617 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t141618 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t141619 = gamma_bb[index]*gcaa*t141614;
                double t141620 = t141619+1.0;
                double t141621 = gamma_bb[index]*gcaa*t141614*2.0;
                double t141622 = t141612*t141613*t141615;
                double t141623 = t141621+t141622+1.0;
                double t141624 = gamma_bb[index]*gcaa*t141614*3.0;
                double t141625 = gamma_bb[index]*gcaa*t141612*t141615*t141618;
                double t141626 = t141612*t141613*t141615*3.0;
                double t141627 = t141624+t141625+t141626+1.0;
                double t141628 = t141615*t141615;
                double t141644 = gcaa*t141614*4.0;
                double t141645 = gamma_bb[index]*t141612*t141613*1.2E1;
                double t141646 = gcaa*t141612*t141615*t141618*1.2E1;
                double t141647 = gamma_bb[index]*t141615*t141616*t141617*4.0;
                double t141629 = t141644+t141645+t141646+t141647;
                double t141630 = gamma_bb[index]*gcaa*t141614*4.0;
                double t141631 = gamma_bb[index]*gcaa*t141612*t141615*t141618*4.0;
                double t141632 = t141612*t141613*t141615*6.0;
                double t141633 = t141616*t141617*t141628;
                double t141634 = t141630+t141631+t141632+t141633+1.0;
                double t141637 = gcaa*t141614*2.0;
                double t141638 = gamma_bb[index]*t141612*t141613*2.0;
                double t141635 = t141637+t141638;
                double t141636 = 1.0/(t141627*t141627);
                double t141639 = 1.0/(t141623*t141623);
                double t141640 = gcaa*t141614*3.0;
                double t141641 = gamma_bb[index]*t141612*t141613*6.0;
                double t141642 = gcaa*t141612*t141615*t141618*3.0;
                double t141643 = t141640+t141641+t141642;
                double t141648 = 1.0/(t141634*t141634);
                double t141649 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t141650 = 1.0/pow(t141649,1.0/3.0);
                double t141651 = 1.0/(omega*omega);
                double t141652 = pow(t141649,2.0/3.0);
                double t141653 = exp(-t141651*t141652);
                double t141654 = gx*gx;
                double t141655 = t141654*t141654;
                double t141656 = gamma_bb[index]*gx*t141614;
                double t141657 = t141656+1.0;
                double t141658 = gamma_bb[index]*gx*t141614*2.0;
                double t141659 = t141613*t141615*t141654;
                double t141660 = t141658+t141659+1.0;
                double t141661 = gamma_bb[index]*gx*t141614*3.0;
                double t141662 = gamma_bb[index]*gx*t141615*t141618*t141654;
                double t141663 = t141613*t141615*t141654*3.0;
                double t141664 = t141661+t141662+t141663+1.0;
                double t141680 = gx*t141614*4.0;
                double t141681 = gamma_bb[index]*t141613*t141654*1.2E1;
                double t141682 = gx*t141615*t141618*t141654*1.2E1;
                double t141683 = gamma_bb[index]*t141615*t141617*t141655*4.0;
                double t141665 = t141680+t141681+t141682+t141683;
                double t141666 = gamma_bb[index]*gx*t141614*4.0;
                double t141667 = gamma_bb[index]*gx*t141615*t141618*t141654*4.0;
                double t141668 = t141613*t141615*t141654*6.0;
                double t141669 = t141617*t141628*t141655;
                double t141670 = t141666+t141667+t141668+t141669+1.0;
                double t141673 = gx*t141614*2.0;
                double t141674 = gamma_bb[index]*t141613*t141654*2.0;
                double t141671 = t141673+t141674;
                double t141672 = 1.0/(t141664*t141664);
                double t141675 = 1.0/(t141660*t141660);
                double t141676 = gx*t141614*3.0;
                double t141677 = gamma_bb[index]*t141613*t141654*6.0;
                double t141678 = gx*t141615*t141618*t141654*3.0;
                double t141679 = t141676+t141677+t141678;
                double t141684 = 1.0/(t141670*t141670);
                v_gamma_bb_gamma_bb_[index] = rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t141596+b3f*t141597+b2f*c*t141594+b4f*t141598*t141599))+1.0)*(a1f*c*t141594+1.0)*2.0-c0p*t141611*t141609* \
                   2.0))/(two_13*2.0-2.0)+c0p*t141611*t141609*2.0)*(ccaa1*1.0/(t141620*t141620)*t141612*t141613*2.0-(ccaa2* \
                   t141612*t141613*2.0)/t141623+ccaa2*t141615*t141616*t141617*t141639*2.0-(ccaa4*t141615*t141616*t141617* \
                   1.2E1)/t141634+ccaa4*t141616*t141617*t141628*t141648*(t141612*t141613*1.2E1+t141615*t141616*t141617* \
                   1.2E1+gamma_bb[index]*gcaa*t141612*t141618*2.4E1)-ccaa1*gamma_bb[index]*gcaa*1.0/(t141620*t141620* \
                   t141620)*t141612*t141618*2.0-(ccaa3*gamma_bb[index]*gcaa*t141612*t141618*6.0)/t141627-ccaa2*t141612* \
                   t141613*1.0/(t141623*t141623*t141623)*t141615*(t141635*t141635)*2.0-ccaa4*t141616*1.0/(t141634*t141634* \
                   t141634)*t141617*t141628*(t141629*t141629)*2.0+ccaa2*gamma_bb[index]*t141612*t141613*t141635*t141639* \
                   4.0+ccaa4*gamma_bb[index]*t141615*t141616*t141617*t141629*t141648*8.0+ccaa3*gcaa*t141612*t141615*t141643* \
                   t141618*t141636*6.0+ccaa3*gamma_bb[index]*gcaa*t141612*t141615*t141618*t141636*(t141612*t141613*6.0+ \
                   gamma_bb[index]*gcaa*t141612*t141618*6.0)-ccaa3*gamma_bb[index]*gcaa*t141612*t141615*(t141643*t141643) \
                   *t141618*1.0/(t141627*t141627*t141627)*2.0)+c0*pow(rho_b[index],4.0/3.0)*(omega*t141650*(erf(pow(t141649,1.0/ \
                   3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t141650*(-t141653+(omega*omega)*1.0/ \
                   pow(t141649,2.0/3.0)*(t141653-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*t141613*t141654*1.0/(t141657* \
                   t141657)*2.0-(cx2*t141613*t141654*2.0)/t141660+cx2*t141615*t141617*t141655*t141675*2.0-(cx4*t141615* \
                   t141617*t141655*1.2E1)/t141670+cx4*t141617*t141628*t141655*t141684*(t141613*t141654*1.2E1+t141615* \
                   t141617*t141655*1.2E1+gamma_bb[index]*gx*t141618*t141654*2.4E1)-cx1*gamma_bb[index]*gx*t141618*t141654* \
                   1.0/(t141657*t141657*t141657)*2.0-(cx3*gamma_bb[index]*gx*t141618*t141654*6.0)/t141664-cx2*t141613* \
                   t141615*1.0/(t141660*t141660*t141660)*(t141671*t141671)*t141654*2.0-cx4*1.0/(t141670*t141670*t141670) \
                   *t141617*t141628*t141655*(t141665*t141665)*2.0+cx2*gamma_bb[index]*t141613*t141671*t141654*t141675* \
                   4.0+cx4*gamma_bb[index]*t141615*t141617*t141655*t141665*t141684*8.0+cx3*gx*t141615*t141618*t141654* \
                   t141672*t141679*6.0+cx3*gamma_bb[index]*gx*t141615*t141618*t141654*t141672*(t141613*t141654*6.0+gamma_bb[index]* \
                   gx*t141618*t141654*6.0)-cx3*gamma_bb[index]*gx*t141615*t141618*t141654*1.0/(t141664*t141664*t141664) \
                   *(t141679*t141679)*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

