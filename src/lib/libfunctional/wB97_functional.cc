/**********************************************************
* wB97_functional.cc: definitions for wB97_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wB97_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wB97_Functional::wB97_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wB97";
    description_ = "wB97 Range-Corrected Power Series GGA";
    citation_ = "J. Chai and M. Head-Gordon, J. Chem. Phys., 128, pp. 084106, 2008";

    double omega = 4.0000000000000002E-01;
    params_.push_back(make_pair("omega",omega));
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 3.9905100000000000E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.7006599999999999E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 1.0729200000000001E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = 8.8821100000000008E+00;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -2.5535199999999998E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = 1.1892600000000000E+01;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -2.6945200000000000E+01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 1.7092700000000001E+01;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = 1.1311599999999999E+00;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = -2.7491500000000002E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = 1.2090000000000000E+01;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = -5.7164200000000003E+00;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wB97_Functional::~wB97_Functional()
{
}
void wB97_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t158470 = 1.0/pow(rho_a[index],1.0/3.0);
            double t158471 = c*t158470;
            double t158472 = sqrt(t158471);
            double t158473 = pow(t158471,3.0/2.0);
            double t158474 = c*c;
            double t158475 = 1.0/pow(rho_a[index],2.0/3.0);
            double t158476 = 1.0/c0p;
            double t158477 = b1p*t158472;
            double t158478 = b3p*t158473;
            double t158479 = b4p*t158474*t158475;
            double t158480 = b2p*c*t158470;
            double t158481 = t158480+t158477+t158478+t158479;
            double t158482 = 1.0/t158481;
            double t158483 = t158482*t158476*(1.0/2.0);
            double t158484 = t158483+1.0;
            double t158485 = log(t158484);
            double t158486 = a1p*c*t158470;
            double t158487 = t158486+1.0;
            double t158488 = rho_a[index]*2.0;
            double t158489 = 1.0/pow(t158488,1.0/3.0);
            double t158490 = c*t158489;
            double t158491 = gamma_aa[index]*gamma_aa[index];
            double t158492 = gcab*gcab;
            double t158493 = t158491*t158491;
            double t158494 = t158492*t158492;
            double t158495 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t158496 = 1.0/pow(rho_a[index],8.0/3.0);
            double t158497 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t158498 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t158499 = pow(2.0,1.0/3.0);
            double t158500 = t158499*2.0;
            double t158501 = t158500-2.0;
            double t158502 = two_13*2.0;
            double t158503 = t158502-2.0;
            double t158504 = 1.0/t158503;
            double t158505 = 1.0/c0f;
            double t158506 = b1f*t158472;
            double t158507 = b3f*t158473;
            double t158508 = b4f*t158474*t158475;
            double t158509 = b2f*c*t158470;
            double t158510 = t158506+t158507+t158508+t158509;
            double t158511 = 1.0/t158510;
            double t158512 = t158511*t158505*(1.0/2.0);
            double t158513 = t158512+1.0;
            double t158514 = log(t158513);
            double t158515 = a1f*c*t158470;
            double t158516 = t158515+1.0;
            double t158517 = c0f*t158514*t158516*2.0;
            double t158518 = c0p*t158485*t158487*2.0;
            double t158519 = gcaa*gcaa;
            double t158520 = t158519*t158519;
            double t158521 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t158522 = 1.0/pow(t158521,1.0/3.0);
            double t158523 = 1.0/(omega*omega);
            double t158524 = pow(t158521,2.0/3.0);
            double t158525 = exp(-t158523*t158524);
            double t158526 = gx*gx;
            double t158527 = t158526*t158526;
            functional_[index] = (rho_a[index]*(t158518+t158501*t158504*(t158517-c0p*t158485*t158487*2.0))*2.0- \
               c0p*rho_a[index]*log((t158476*(1.0/2.0))/(b1p*sqrt(t158490)+b3p*pow(t158490,3.0/2.0)+b4p*t158474*1.0/ \
               pow(t158488,2.0/3.0)+b2p*c*t158489)+1.0)*(a1p*c*t158489+1.0)*4.0)*(ccab0+(ccab2*t158491*t158492*t158498) \
               /(gamma_aa[index]*gcab*t158496*2.0+t158491*t158492*t158498+1.0)+(ccab1*gamma_aa[index]*gcab*t158496) \
               /(gamma_aa[index]*gcab*t158496+1.0)+(ccab4*t158493*t158494*t158495)/(gamma_aa[index]*gcab*t158496* \
               4.0+t158491*t158492*t158498*6.0+t158493*t158494*t158495+gamma_aa[index]*gcab*t158491*t158492*t158497* \
               4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t158491*t158492*t158497)/(gamma_aa[index]*gcab*t158496*3.0+t158491* \
               t158492*t158498*3.0+gamma_aa[index]*gcab*t158491*t158492*t158497+1.0))-rho_a[index]*(t158518+t158501* \
               t158504*(t158517-t158518))*(ccaa0+(ccaa2*t158491*t158519*t158498)/(gamma_aa[index]*gcaa*t158496*2.0+ \
               t158491*t158519*t158498+1.0)+(ccaa1*gamma_aa[index]*gcaa*t158496)/(gamma_aa[index]*gcaa*t158496+1.0) \
               +(ccaa4*t158520*t158493*t158495)/(gamma_aa[index]*gcaa*t158496*4.0+t158520*t158493*t158495+t158491* \
               t158519*t158498*6.0+gamma_aa[index]*gcaa*t158491*t158519*t158497*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t158491*t158519*t158497)/(gamma_aa[index]*gcaa*t158496*3.0+t158491*t158519*t158498*3.0+gamma_aa[index]* \
               gcaa*t158491*t158519*t158497+1.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(omega*t158522*(erf(pow(t158521,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t158522*(-t158525+(omega*omega)*1.0/ \
               pow(t158521,2.0/3.0)*(t158525-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t158526*t158491*t158498) \
               /(gamma_aa[index]*gx*t158496*2.0+t158526*t158491*t158498+1.0)+(cx1*gamma_aa[index]*gx*t158496)/(gamma_aa[index]* \
               gx*t158496+1.0)+(cx4*t158527*t158493*t158495)/(gamma_aa[index]*gx*t158496*4.0+t158526*t158491*t158498* \
               6.0+t158527*t158493*t158495+gamma_aa[index]*gx*t158526*t158491*t158497*4.0+1.0)+(cx3*gamma_aa[index]* \
               gx*t158526*t158491*t158497)/(gamma_aa[index]*gx*t158496*3.0+t158526*t158491*t158498*3.0+gamma_aa[index]* \
               gx*t158526*t158491*t158497+1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t158529 = gamma_aa[index]*gamma_aa[index];
            double t158530 = gcab*gcab;
            double t158531 = t158529*t158529;
            double t158532 = t158530*t158530;
            double t158533 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t158534 = 1.0/pow(rho_a[index],8.0/3.0);
            double t158535 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t158536 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t158537 = rho_a[index]*2.0;
            double t158538 = 1.0/pow(t158537,1.0/3.0);
            double t158539 = c*t158538;
            double t158540 = sqrt(t158539);
            double t158541 = b1p*t158540;
            double t158542 = pow(t158539,3.0/2.0);
            double t158543 = b3p*t158542;
            double t158544 = b2p*c*t158538;
            double t158545 = c*c;
            double t158546 = 1.0/pow(t158537,2.0/3.0);
            double t158547 = b4p*t158545*t158546;
            double t158548 = t158541+t158543+t158544+t158547;
            double t158549 = 1.0/pow(t158537,4.0/3.0);
            double t158550 = 1.0/c0p;
            double t158551 = 1.0/t158548;
            double t158552 = t158550*t158551*(1.0/2.0);
            double t158553 = t158552+1.0;
            double t158554 = 1.0/pow(rho_a[index],1.0/3.0);
            double t158555 = c*t158554;
            double t158556 = sqrt(t158555);
            double t158557 = b1f*t158556;
            double t158558 = pow(t158555,3.0/2.0);
            double t158559 = b3f*t158558;
            double t158560 = 1.0/pow(rho_a[index],2.0/3.0);
            double t158561 = b4f*t158560*t158545;
            double t158562 = b2f*c*t158554;
            double t158563 = t158561+t158562+t158557+t158559;
            double t158564 = 1.0/pow(rho_a[index],4.0/3.0);
            double t158565 = b1p*t158556;
            double t158566 = b3p*t158558;
            double t158567 = b4p*t158560*t158545;
            double t158568 = b2p*c*t158554;
            double t158569 = t158565+t158566+t158567+t158568;
            double t158570 = 1.0/pow(rho_a[index],5.0/3.0);
            double t158571 = 1.0/sqrt(t158555);
            double t158572 = 1.0/c0f;
            double t158573 = 1.0/t158563;
            double t158574 = t158572*t158573*(1.0/2.0);
            double t158575 = t158574+1.0;
            double t158576 = 1.0/t158569;
            double t158577 = t158550*t158576*(1.0/2.0);
            double t158578 = t158577+1.0;
            double t158579 = a1p*c*t158554;
            double t158580 = t158579+1.0;
            double t158581 = 1.0/t158578;
            double t158582 = 1.0/(t158569*t158569);
            double t158583 = b4p*t158570*t158545*(2.0/3.0);
            double t158584 = b2p*c*t158564*(1.0/3.0);
            double t158585 = b1p*c*t158571*t158564*(1.0/6.0);
            double t158586 = b3p*c*t158564*t158556*(1.0/2.0);
            double t158587 = t158583+t158584+t158585+t158586;
            double t158588 = t158580*t158581*t158582*t158587;
            double t158589 = log(t158578);
            double t158590 = log(t158553);
            double t158591 = a1p*c*t158538;
            double t158592 = t158591+1.0;
            double t158593 = pow(2.0,1.0/3.0);
            double t158594 = t158593*2.0;
            double t158595 = t158594-2.0;
            double t158596 = two_13*2.0;
            double t158597 = t158596-2.0;
            double t158598 = 1.0/t158597;
            double t158599 = log(t158575);
            double t158600 = a1f*c*t158554;
            double t158601 = t158600+1.0;
            double t158602 = c0f*t158601*t158599*2.0;
            double t158604 = c0p*t158580*t158589*2.0;
            double t158603 = t158602-t158604;
            double t158605 = gcaa*gcaa;
            double t158606 = t158605*t158605;
            double t158607 = t158603*t158595*t158598;
            double t158608 = t158604+t158607;
            double t158609 = gamma_aa[index]*gcab*t158534*4.0;
            double t158610 = gamma_aa[index]*gcab*t158530*t158535*t158529*4.0;
            double t158611 = t158530*t158536*t158529*6.0;
            double t158612 = t158531*t158532*t158533;
            double t158613 = t158610+t158611+t158612+t158609+1.0;
            double t158614 = 1.0/t158613;
            double t158615 = gamma_aa[index]*gcab*t158534;
            double t158616 = t158615+1.0;
            double t158617 = 1.0/t158616;
            double t158618 = gamma_aa[index]*gcab*t158534*3.0;
            double t158619 = gamma_aa[index]*gcab*t158530*t158535*t158529;
            double t158620 = t158530*t158536*t158529*3.0;
            double t158621 = t158620+t158618+t158619+1.0;
            double t158622 = 1.0/t158621;
            double t158623 = gamma_aa[index]*gcab*t158534*2.0;
            double t158624 = t158530*t158536*t158529;
            double t158625 = t158623+t158624+1.0;
            double t158626 = 1.0/t158625;
            double t158627 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t158628 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t158629 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t158630 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t158631 = gamma_aa[index]*gcaa*t158534*4.0;
            double t158632 = gamma_aa[index]*gcaa*t158605*t158535*t158529*4.0;
            double t158633 = t158605*t158536*t158529*6.0;
            double t158634 = t158531*t158533*t158606;
            double t158635 = t158631+t158632+t158633+t158634+1.0;
            double t158636 = 1.0/t158635;
            double t158637 = gamma_aa[index]*gcaa*t158534;
            double t158638 = t158637+1.0;
            double t158639 = 1.0/t158638;
            double t158640 = gamma_aa[index]*gcaa*t158534*3.0;
            double t158641 = gamma_aa[index]*gcaa*t158605*t158535*t158529;
            double t158642 = t158605*t158536*t158529*3.0;
            double t158643 = t158640+t158641+t158642+1.0;
            double t158644 = 1.0/t158643;
            double t158645 = gamma_aa[index]*gcaa*t158534*2.0;
            double t158646 = t158605*t158536*t158529;
            double t158647 = t158645+t158646+1.0;
            double t158648 = 1.0/t158647;
            double t158649 = 1.0/t158575;
            double t158650 = 1.0/(t158563*t158563);
            double t158651 = b4f*t158570*t158545*(2.0/3.0);
            double t158652 = b2f*c*t158564*(1.0/3.0);
            double t158653 = b1f*c*t158571*t158564*(1.0/6.0);
            double t158654 = b3f*c*t158564*t158556*(1.0/2.0);
            double t158655 = t158651+t158652+t158653+t158654;
            double t158656 = a1f*c*c0f*t158564*t158599*(2.0/3.0);
            double t158657 = a1p*c*c0p*t158564*t158589*(2.0/3.0);
            double t158658 = ccaa4*t158531*t158533*t158606*t158636;
            double t158659 = ccaa1*gamma_aa[index]*gcaa*t158534*t158639;
            double t158660 = ccaa3*gamma_aa[index]*gcaa*t158605*t158535*t158644*t158529;
            double t158661 = ccaa2*t158605*t158536*t158529*t158648;
            double t158662 = ccaa0+t158660+t158661+t158658+t158659;
            double t158663 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t158664 = 1.0/(omega*omega);
            double t158665 = pow(t158663,2.0/3.0);
            double t158668 = t158664*t158665;
            double t158666 = exp(-t158668);
            double t158667 = 1.0/pow(t158663,1.0/3.0);
            double t158669 = omega*omega;
            double t158670 = t158666-1.0;
            double t158671 = 1.0/pow(t158663,2.0/3.0);
            double t158672 = 1.0/pow(t158663,4.0/3.0);
            double t158673 = 1.0/omega;
            double t158674 = t158670*t158671*t158669*(1.0/2.0);
            double t158675 = t158674-t158666+3.0/2.0;
            double t158676 = gx*gx;
            double t158677 = t158676*t158676;
            double t158678 = pow(rho_a[index],4.0/3.0);
            double t158679 = pow(t158663,1.0/3.0);
            double t158680 = t158673*t158679;
            double t158681 = erf(t158680);
            double t158682 = t158681*(3.991211251234741E15/2.251799813685248E15);
            double t158702 = omega*t158675*t158667;
            double t158683 = -t158702+t158682;
            double t158684 = gamma_aa[index]*gx*t158534*4.0;
            double t158685 = gamma_aa[index]*gx*t158535*t158529*t158676*4.0;
            double t158686 = t158536*t158529*t158676*6.0;
            double t158687 = t158531*t158533*t158677;
            double t158688 = t158684+t158685+t158686+t158687+1.0;
            double t158689 = 1.0/t158688;
            double t158690 = gamma_aa[index]*gx*t158534;
            double t158691 = t158690+1.0;
            double t158692 = 1.0/t158691;
            double t158693 = gamma_aa[index]*gx*t158534*3.0;
            double t158694 = gamma_aa[index]*gx*t158535*t158529*t158676;
            double t158695 = t158536*t158529*t158676*3.0;
            double t158696 = t158693+t158694+t158695+1.0;
            double t158697 = 1.0/t158696;
            double t158698 = gamma_aa[index]*gx*t158534*2.0;
            double t158699 = t158536*t158529*t158676;
            double t158700 = t158698+t158699+1.0;
            double t158701 = 1.0/t158700;
            double t158703 = omega*t158683*t158667*(4.0/3.0);
            double t158704 = t158703-1.0;
            double t158705 = cx4*t158531*t158533*t158677*t158689;
            double t158706 = cx1*gamma_aa[index]*gx*t158534*t158692;
            double t158707 = cx3*gamma_aa[index]*gx*t158535*t158529*t158676*t158697;
            double t158708 = cx2*t158701*t158536*t158529*t158676;
            double t158709 = cx0+t158705+t158706+t158707+t158708;
            v_rho_a_[index] = -(rho_a[index]*t158608*2.0-c0p*rho_a[index]*t158590*t158592*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t158617*t158628*(4.0/3.0)+ccab4*t158531*t158630*t158532*t158614*(1.6E1/3.0)+ccab2*t158530*t158626* \
               t158627*t158529*(8.0/3.0)-ccab1*t158530*1.0/(t158616*t158616)*t158627*t158529*(4.0/3.0)-ccab2*t158530* \
               1.0/(t158625*t158625)*t158536*t158529*(gamma_aa[index]*gcab*t158628*(8.0/3.0)+t158530*t158627*t158529* \
               (8.0/3.0))-ccab4*t158531*t158532*1.0/(t158613*t158613)*t158533*(gamma_aa[index]*gcab*t158628*(1.6E1/ \
               3.0)+t158531*t158630*t158532*(1.6E1/3.0)+t158530*t158627*t158529*1.6E1+gamma_aa[index]*gcab*t158530* \
               t158529*t158629*1.6E1)+ccab3*gamma_aa[index]*gcab*t158530*t158622*t158529*t158629*4.0-ccab3*gamma_aa[index]* \
               gcab*t158530*1.0/(t158621*t158621)*t158535*t158529*(gamma_aa[index]*gcab*t158628*4.0+t158530*t158627* \
               t158529*8.0+gamma_aa[index]*gcab*t158530*t158529*t158629*4.0))-t158608*t158662-(rho_a[index]*((t158592* \
               1.0/(t158548*t158548)*(b4p*t158545*1.0/pow(t158537,5.0/3.0)*(2.0/3.0)+b2p*c*t158549*(1.0/3.0)+b3p* \
               c*t158540*t158549*(1.0/2.0)+b1p*c*1.0/sqrt(t158539)*t158549*(1.0/6.0)))/t158553-a1p*c*c0p*t158590* \
               t158549*(2.0/3.0))*2.0+rho_a[index]*(t158657-t158588+t158595*t158598*(t158656+t158588-t158601*t158650* \
               t158655*t158649-a1p*c*c0p*t158564*t158589*(2.0/3.0)))+c0p*t158590*t158592*2.0-c0p*t158580*t158589* \
               2.0-t158603*t158595*t158598)*(ccab0+ccab1*gamma_aa[index]*gcab*t158534*t158617+ccab4*t158531*t158532* \
               t158533*t158614+ccab2*t158530*t158536*t158626*t158529+ccab3*gamma_aa[index]*gcab*t158530*t158622*t158535* \
               t158529)+rho_a[index]*t158608*(ccaa1*gamma_aa[index]*gcaa*t158628*t158639*(8.0/3.0)+ccaa4*t158531* \
               t158630*t158606*t158636*(3.2E1/3.0)+ccaa2*t158605*t158627*t158529*t158648*(1.6E1/3.0)-ccaa1*t158605* \
               t158627*t158529*1.0/(t158638*t158638)*(8.0/3.0)-ccaa2*t158605*t158536*t158529*1.0/(t158647*t158647) \
               *(gamma_aa[index]*gcaa*t158628*(1.6E1/3.0)+t158605*t158627*t158529*(1.6E1/3.0))-ccaa4*t158531*t158533* \
               t158606*1.0/(t158635*t158635)*(gamma_aa[index]*gcaa*t158628*(3.2E1/3.0)+t158531*t158630*t158606*(3.2E1/ \
               3.0)+t158605*t158627*t158529*3.2E1+gamma_aa[index]*gcaa*t158605*t158529*t158629*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t158605*t158644*t158529*t158629*8.0-ccaa3*gamma_aa[index]*gcaa*t158605*t158535*1.0/(t158643*t158643) \
               *t158529*(gamma_aa[index]*gcaa*t158628*8.0+t158605*t158627*t158529*1.6E1+gamma_aa[index]*gcaa*t158605* \
               t158529*t158629*8.0))+rho_a[index]*t158662*(t158657-t158588+t158595*t158598*(t158656-t158657+t158588- \
               t158601*t158650*t158655*t158649))-c0*t158709*t158678*(omega*t158667*(omega*t158672*t158675*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t158667*((t158666*(1.0/3.0))/rho_a[index]+t158670*1.0/pow(t158663,5.0/3.0) \
               *t158669*(2.778046668940015E15/1.40737488355328E14)-t158664*t158666*t158667*(2.778046668940015E15/ \
               7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t158671*t158673*t158666*(1.108777112152858E31/1.584563250285287E29) \
               )*(4.0/3.0)-omega*t158672*t158683*(2.778046668940015E15/1.05553116266496E14))-c0*pow(rho_a[index],1.0/ \
               3.0)*t158704*t158709*(4.0/3.0)+c0*t158704*t158678*(cx1*gamma_aa[index]*gx*t158628*t158692*(8.0/3.0) \
               +cx2*t158701*t158627*t158529*t158676*(1.6E1/3.0)+cx4*t158531*t158630*t158677*t158689*(3.2E1/3.0)-cx1* \
               t158627*t158529*1.0/(t158691*t158691)*t158676*(8.0/3.0)-cx2*1.0/(t158700*t158700)*t158536*t158529* \
               t158676*(gamma_aa[index]*gx*t158628*(1.6E1/3.0)+t158627*t158529*t158676*(1.6E1/3.0))-cx4*t158531*t158533* \
               t158677*1.0/(t158688*t158688)*(gamma_aa[index]*gx*t158628*(3.2E1/3.0)+t158531*t158630*t158677*(3.2E1/ \
               3.0)+t158627*t158529*t158676*3.2E1+gamma_aa[index]*gx*t158529*t158629*t158676*3.2E1)+cx3*gamma_aa[index]* \
               gx*t158529*t158629*t158676*t158697*8.0-cx3*gamma_aa[index]*gx*t158535*t158529*t158676*1.0/(t158696* \
               t158696)*(gamma_aa[index]*gx*t158628*8.0+t158627*t158529*t158676*1.6E1+gamma_aa[index]*gx*t158529* \
               t158629*t158676*8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t158711 = 1.0/pow(rho_a[index],1.0/3.0);
                double t158712 = c*t158711;
                double t158713 = sqrt(t158712);
                double t158714 = pow(t158712,3.0/2.0);
                double t158715 = c*c;
                double t158716 = 1.0/pow(rho_a[index],2.0/3.0);
                double t158717 = 1.0/c0p;
                double t158718 = b1p*t158713;
                double t158719 = b3p*t158714;
                double t158720 = b4p*t158715*t158716;
                double t158721 = b2p*c*t158711;
                double t158722 = t158720+t158721+t158718+t158719;
                double t158723 = 1.0/t158722;
                double t158724 = t158723*t158717*(1.0/2.0);
                double t158725 = t158724+1.0;
                double t158726 = log(t158725);
                double t158727 = a1p*c*t158711;
                double t158728 = t158727+1.0;
                double t158729 = rho_a[index]*2.0;
                double t158730 = 1.0/pow(t158729,1.0/3.0);
                double t158731 = c*t158730;
                double t158732 = 1.0/pow(rho_a[index],8.0/3.0);
                double t158733 = gamma_aa[index]*gamma_aa[index];
                double t158734 = gcab*gcab;
                double t158735 = t158734*t158734;
                double t158736 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t158737 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t158738 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t158739 = gamma_aa[index]*gcab*t158732;
                double t158740 = t158739+1.0;
                double t158741 = gamma_aa[index]*gcab*t158732*3.0;
                double t158742 = gamma_aa[index]*gcab*t158733*t158734*t158738;
                double t158743 = t158733*t158734*t158737*3.0;
                double t158744 = t158741+t158742+t158743+1.0;
                double t158745 = t158733*t158733;
                double t158746 = gamma_aa[index]*gcab*t158732*4.0;
                double t158747 = gamma_aa[index]*gcab*t158733*t158734*t158738*4.0;
                double t158748 = t158733*t158734*t158737*6.0;
                double t158749 = t158735*t158736*t158745;
                double t158750 = t158746+t158747+t158748+t158749+1.0;
                double t158751 = gamma_aa[index]*gcab*t158732*2.0;
                double t158752 = t158733*t158734*t158737;
                double t158753 = t158751+t158752+1.0;
                double t158754 = pow(2.0,1.0/3.0);
                double t158755 = t158754*2.0;
                double t158756 = t158755-2.0;
                double t158757 = two_13*2.0;
                double t158758 = t158757-2.0;
                double t158759 = 1.0/t158758;
                double t158760 = 1.0/c0f;
                double t158761 = b1f*t158713;
                double t158762 = b3f*t158714;
                double t158763 = b4f*t158715*t158716;
                double t158764 = b2f*c*t158711;
                double t158765 = t158761+t158762+t158763+t158764;
                double t158766 = 1.0/t158765;
                double t158767 = t158760*t158766*(1.0/2.0);
                double t158768 = t158767+1.0;
                double t158769 = log(t158768);
                double t158770 = a1f*c*t158711;
                double t158771 = t158770+1.0;
                double t158772 = c0f*t158771*t158769*2.0;
                double t158773 = c0p*t158726*t158728*2.0;
                double t158774 = gcaa*gcaa;
                double t158775 = t158774*t158774;
                double t158776 = gamma_aa[index]*gcaa*t158732;
                double t158777 = t158776+1.0;
                double t158778 = gamma_aa[index]*gcaa*t158732*3.0;
                double t158779 = gamma_aa[index]*gcaa*t158733*t158738*t158774;
                double t158780 = t158733*t158737*t158774*3.0;
                double t158781 = t158780+t158778+t158779+1.0;
                double t158782 = gamma_aa[index]*gcaa*t158732*4.0;
                double t158783 = gamma_aa[index]*gcaa*t158733*t158738*t158774*4.0;
                double t158784 = t158733*t158737*t158774*6.0;
                double t158785 = t158736*t158745*t158775;
                double t158786 = t158782+t158783+t158784+t158785+1.0;
                double t158787 = gamma_aa[index]*gcaa*t158732*2.0;
                double t158788 = t158733*t158737*t158774;
                double t158789 = t158787+t158788+1.0;
                double t158790 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t158791 = 1.0/pow(t158790,1.0/3.0);
                double t158792 = 1.0/(omega*omega);
                double t158793 = pow(t158790,2.0/3.0);
                double t158794 = exp(-t158792*t158793);
                double t158795 = gx*gx;
                double t158796 = t158795*t158795;
                double t158797 = gamma_aa[index]*gx*t158732;
                double t158798 = t158797+1.0;
                double t158799 = gamma_aa[index]*gx*t158732*3.0;
                double t158800 = gamma_aa[index]*gx*t158733*t158738*t158795;
                double t158801 = t158733*t158737*t158795*3.0;
                double t158802 = t158800+t158801+t158799+1.0;
                double t158803 = gamma_aa[index]*gx*t158732*4.0;
                double t158804 = gamma_aa[index]*gx*t158733*t158738*t158795*4.0;
                double t158805 = t158733*t158737*t158795*6.0;
                double t158806 = t158736*t158745*t158796;
                double t158807 = t158803+t158804+t158805+t158806+1.0;
                double t158808 = gamma_aa[index]*gx*t158732*2.0;
                double t158809 = t158733*t158737*t158795;
                double t158810 = t158808+t158809+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t158773+t158756*t158759*(t158772-c0p*t158726*t158728*2.0))*2.0- \
                   c0p*rho_a[index]*log((t158717*(1.0/2.0))/(b1p*sqrt(t158731)+b3p*pow(t158731,3.0/2.0)+b4p*t158715*1.0/ \
                   pow(t158729,2.0/3.0)+b2p*c*t158730)+1.0)*(a1p*c*t158730+1.0)*4.0)*((ccab1*gcab*t158732*(1.0/2.0))/ \
                   t158740-ccab1*gamma_aa[index]*1.0/(t158740*t158740)*t158734*t158737*(1.0/2.0)+(ccab2*gamma_aa[index]* \
                   t158734*t158737)/t158753-ccab2*t158733*t158734*1.0/(t158753*t158753)*t158737*(gcab*t158732+gamma_aa[index]* \
                   t158734*t158737)+(ccab4*gamma_aa[index]*t158733*t158735*t158736*2.0)/t158750+(ccab3*gcab*t158733*t158734* \
                   t158738*(3.0/2.0))/t158744-ccab4*1.0/(t158750*t158750)*t158735*t158736*t158745*(gcab*t158732*2.0+gamma_aa[index]* \
                   t158734*t158737*6.0+gamma_aa[index]*t158733*t158735*t158736*2.0+gcab*t158733*t158734*t158738*6.0)- \
                   ccab3*gamma_aa[index]*gcab*t158733*t158734*1.0/(t158744*t158744)*t158738*(gcab*t158732*(3.0/2.0)+gamma_aa[index]* \
                   t158734*t158737*3.0+gcab*t158733*t158734*t158738*(3.0/2.0)))*2.0-rho_a[index]*(t158773+t158756*t158759* \
                   (t158772-t158773))*((ccaa1*gcaa*t158732)/t158777-ccaa1*gamma_aa[index]*t158737*t158774*1.0/(t158777* \
                   t158777)+(ccaa2*gamma_aa[index]*t158737*t158774*2.0)/t158789-ccaa2*t158733*t158737*t158774*1.0/(t158789* \
                   t158789)*(gcaa*t158732*2.0+gamma_aa[index]*t158737*t158774*2.0)+(ccaa4*gamma_aa[index]*t158733*t158736* \
                   t158775*4.0)/t158786+(ccaa3*gcaa*t158733*t158738*t158774*3.0)/t158781-ccaa4*t158736*t158745*t158775* \
                   1.0/(t158786*t158786)*(gcaa*t158732*4.0+gamma_aa[index]*t158737*t158774*1.2E1+gamma_aa[index]*t158733* \
                   t158736*t158775*4.0+gcaa*t158733*t158738*t158774*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t158733*1.0/(t158781* \
                   t158781)*t158738*t158774*(gcaa*t158732*3.0+gamma_aa[index]*t158737*t158774*6.0+gcaa*t158733*t158738* \
                   t158774*3.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(omega*t158791*(erf(pow(t158790,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t158791*(-t158794+(omega*omega)*1.0/pow(t158790,2.0/3.0)*(t158794-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t158732)/t158798-cx1*gamma_aa[index]*t158737*t158795* \
                   1.0/(t158798*t158798)+(cx2*gamma_aa[index]*t158737*t158795*2.0)/t158810-cx2*1.0/(t158810*t158810)* \
                   t158733*t158737*t158795*(gx*t158732*2.0+gamma_aa[index]*t158737*t158795*2.0)+(cx4*gamma_aa[index]* \
                   t158733*t158736*t158796*4.0)/t158807+(cx3*gx*t158733*t158738*t158795*3.0)/t158802-cx4*1.0/(t158807* \
                   t158807)*t158736*t158745*t158796*(gx*t158732*4.0+gamma_aa[index]*t158737*t158795*1.2E1+gamma_aa[index]* \
                   t158733*t158736*t158796*4.0+gx*t158733*t158738*t158795*1.2E1)-cx3*gamma_aa[index]*gx*1.0/(t158802* \
                   t158802)*t158733*t158738*t158795*(gx*t158732*3.0+gamma_aa[index]*t158737*t158795*6.0+gx*t158733*t158738* \
                   t158795*3.0))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t158813 = rho_a[index]*2.0;
            double t158814 = 1.0/pow(t158813,1.0/3.0);
            double t158815 = c*t158814;
            double t158816 = sqrt(t158815);
            double t158817 = b1p*t158816;
            double t158818 = pow(t158815,3.0/2.0);
            double t158819 = b3p*t158818;
            double t158820 = b2p*c*t158814;
            double t158821 = c*c;
            double t158822 = 1.0/pow(t158813,2.0/3.0);
            double t158823 = b4p*t158821*t158822;
            double t158824 = t158820+t158823+t158817+t158819;
            double t158825 = 1.0/pow(t158813,8.0/3.0);
            double t158826 = 1.0/pow(t158813,7.0/3.0);
            double t158827 = 1.0/sqrt(t158815);
            double t158828 = 1.0/c0p;
            double t158829 = 1.0/t158824;
            double t158830 = t158828*t158829*(1.0/2.0);
            double t158831 = t158830+1.0;
            double t158832 = 1.0/t158831;
            double t158833 = a1p*c*t158814;
            double t158834 = t158833+1.0;
            double t158835 = 1.0/pow(t158813,4.0/3.0);
            double t158837 = b2p*c*t158835*(1.0/3.0);
            double t158838 = 1.0/pow(t158813,5.0/3.0);
            double t158839 = b4p*t158821*t158838*(2.0/3.0);
            double t158840 = b1p*c*t158835*t158827*(1.0/6.0);
            double t158841 = b3p*c*t158816*t158835*(1.0/2.0);
            double t158836 = t158840+t158841+t158837+t158839;
            double t158842 = t158836*t158836;
            double t158843 = 1.0/(t158824*t158824);
            double t158844 = log(t158831);
            double t158845 = gamma_aa[index]*gamma_aa[index];
            double t158846 = gcab*gcab;
            double t158847 = t158845*t158845;
            double t158848 = t158846*t158846;
            double t158849 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t158850 = 1.0/pow(rho_a[index],8.0/3.0);
            double t158851 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t158852 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t158853 = two_13*2.0;
            double t158854 = t158853-2.0;
            double t158855 = 1.0/t158854;
            double t158856 = 1.0/pow(rho_a[index],1.0/3.0);
            double t158857 = c*t158856;
            double t158858 = sqrt(t158857);
            double t158859 = pow(t158857,3.0/2.0);
            double t158860 = 1.0/pow(rho_a[index],2.0/3.0);
            double t158861 = b1p*t158858;
            double t158862 = b3p*t158859;
            double t158863 = b4p*t158821*t158860;
            double t158864 = b2p*c*t158856;
            double t158865 = t158861+t158862+t158863+t158864;
            double t158866 = 1.0/t158865;
            double t158867 = t158828*t158866*(1.0/2.0);
            double t158868 = t158867+1.0;
            double t158869 = log(t158868);
            double t158870 = a1p*c*t158856;
            double t158871 = t158870+1.0;
            double t158872 = gamma_aa[index]*gcab*t158850*4.0;
            double t158873 = gamma_aa[index]*gcab*t158851*t158845*t158846*4.0;
            double t158874 = t158852*t158845*t158846*6.0;
            double t158875 = t158847*t158848*t158849;
            double t158876 = t158872+t158873+t158874+t158875+1.0;
            double t158877 = 1.0/t158876;
            double t158878 = gamma_aa[index]*gcab*t158850;
            double t158879 = t158878+1.0;
            double t158880 = 1.0/t158879;
            double t158881 = gamma_aa[index]*gcab*t158850*3.0;
            double t158882 = gamma_aa[index]*gcab*t158851*t158845*t158846;
            double t158883 = t158852*t158845*t158846*3.0;
            double t158884 = t158881+t158882+t158883+1.0;
            double t158885 = 1.0/t158884;
            double t158886 = gamma_aa[index]*gcab*t158850*2.0;
            double t158887 = t158852*t158845*t158846;
            double t158888 = t158886+t158887+1.0;
            double t158889 = 1.0/t158888;
            double t158890 = 1.0/pow(rho_a[index],1.0E1);
            double t158891 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t158893 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t158894 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t158896 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t158903 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t158904 = gamma_aa[index]*gcab*t158893*(1.6E1/3.0);
            double t158905 = gamma_aa[index]*gcab*t158845*t158846*t158896*1.6E1;
            double t158906 = t158845*t158846*t158894*1.6E1;
            double t158907 = t158903*t158847*t158848*(1.6E1/3.0);
            double t158892 = t158904+t158905+t158906+t158907;
            double t158910 = gamma_aa[index]*gcab*t158893*(8.0/3.0);
            double t158911 = t158845*t158846*t158894*(8.0/3.0);
            double t158895 = t158910+t158911;
            double t158897 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t158898 = 1.0/(t158884*t158884);
            double t158899 = gamma_aa[index]*gcab*t158893*4.0;
            double t158900 = gamma_aa[index]*gcab*t158845*t158846*t158896*4.0;
            double t158901 = t158845*t158846*t158894*8.0;
            double t158902 = t158900+t158901+t158899;
            double t158908 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t158909 = 1.0/(t158876*t158876);
            double t158912 = 1.0/(t158888*t158888);
            double t158913 = pow(2.0,1.0/3.0);
            double t158914 = t158913*2.0;
            double t158915 = t158914-2.0;
            double t158916 = a1f*c*t158856;
            double t158917 = t158916+1.0;
            double t158918 = 1.0/c0f;
            double t158919 = b1f*t158858;
            double t158920 = b3f*t158859;
            double t158921 = b4f*t158821*t158860;
            double t158922 = b2f*c*t158856;
            double t158923 = t158920+t158921+t158922+t158919;
            double t158924 = 1.0/t158923;
            double t158925 = t158924*t158918*(1.0/2.0);
            double t158926 = t158925+1.0;
            double t158927 = 1.0/pow(rho_a[index],4.0/3.0);
            double t158928 = 1.0/pow(rho_a[index],5.0/3.0);
            double t158929 = 1.0/sqrt(t158857);
            double t158930 = log(t158926);
            double t158931 = 1.0/t158868;
            double t158932 = 1.0/(t158865*t158865);
            double t158933 = b4p*t158821*t158928*(2.0/3.0);
            double t158934 = b2p*c*t158927*(1.0/3.0);
            double t158935 = b1p*c*t158927*t158929*(1.0/6.0);
            double t158936 = b3p*c*t158927*t158858*(1.0/2.0);
            double t158937 = t158933+t158934+t158935+t158936;
            double t158938 = t158931*t158932*t158871*t158937;
            double t158939 = gcaa*gcaa;
            double t158940 = t158939*t158939;
            double t158941 = 1.0/t158926;
            double t158942 = 1.0/(t158923*t158923);
            double t158943 = b4f*t158821*t158928*(2.0/3.0);
            double t158944 = b2f*c*t158927*(1.0/3.0);
            double t158945 = b1f*c*t158927*t158929*(1.0/6.0);
            double t158946 = b3f*c*t158927*t158858*(1.0/2.0);
            double t158947 = t158943+t158944+t158945+t158946;
            double t158948 = a1f*c*c0f*t158930*t158927*(2.0/3.0);
            double t158949 = a1p*c*c0p*t158927*t158869*(2.0/3.0);
            double t158950 = c0f*t158930*t158917*2.0;
            double t158951 = c0p*t158871*t158869*2.0;
            double t158952 = 1.0/(t158879*t158879);
            double t158953 = ccab4*t158847*t158848*t158849*t158877;
            double t158954 = ccab1*gamma_aa[index]*gcab*t158850*t158880;
            double t158955 = ccab3*gamma_aa[index]*gcab*t158851*t158845*t158846*t158885;
            double t158956 = ccab2*t158852*t158845*t158846*t158889;
            double t158957 = ccab0+t158953+t158954+t158955+t158956;
            double t158958 = b2p*c*t158826*(4.0/9.0);
            double t158959 = b4p*t158821*t158825*(1.0E1/9.0);
            double t158960 = 1.0/pow(t158815,3.0/2.0);
            double t158961 = b3p*t158821*t158825*t158827*(1.0/1.2E1);
            double t158962 = b1p*c*t158826*t158827*(2.0/9.0);
            double t158963 = b3p*c*t158816*t158826*(2.0/3.0);
            double t158964 = t158961+t158962+t158963+t158958+t158959-b1p*t158821*t158825*t158960*(1.0/3.6E1);
            double t158965 = t158832*t158834*t158843*t158964;
            double t158966 = 1.0/(t158824*t158824*t158824);
            double t158967 = 1.0/(t158831*t158831);
            double t158968 = 1.0/(t158824*t158824*t158824*t158824);
            double t158969 = t158842*t158834*t158828*t158967*t158968*(1.0/2.0);
            double t158970 = 1.0/d2fz0;
            double t158971 = 1.0/(rho_a[index]*rho_a[index]);
            double t158972 = 1.0/Aa;
            double t158973 = b1a*t158816;
            double t158974 = b3a*t158818;
            double t158975 = b2a*c*t158814;
            double t158976 = b4a*t158821*t158822;
            double t158977 = t158973+t158974+t158975+t158976;
            double t158978 = 1.0/t158977;
            double t158979 = t158972*t158978*(1.0/2.0);
            double t158980 = t158979+1.0;
            double t158981 = log(t158980);
            double t158982 = a1a*c*t158814;
            double t158983 = t158982+1.0;
            double t158984 = a1p*c*t158832*t158843*t158835*t158836*(2.0/3.0);
            double t158985 = 1.0/pow(rho_a[index],7.0/3.0);
            double t158986 = 1.0/pow(t158857,3.0/2.0);
            double t158987 = t158947*t158947;
            double t158988 = t158937*t158937;
            double t158989 = 1.0/(t158865*t158865*t158865);
            double t158990 = t158931*t158871*t158988*t158989*2.0;
            double t158991 = b4p*t158821*t158850*(1.0E1/9.0);
            double t158992 = b2p*c*t158985*(4.0/9.0);
            double t158993 = b3p*t158821*t158850*t158929*(1.0/1.2E1);
            double t158994 = b1p*c*t158929*t158985*(2.0/9.0);
            double t158995 = b3p*c*t158858*t158985*(2.0/3.0);
            double t159069 = b1p*t158821*t158850*t158986*(1.0/3.6E1);
            double t158996 = -t159069+t158991+t158992+t158993+t158994+t158995;
            double t158997 = 1.0/(t158868*t158868);
            double t158998 = 1.0/(t158865*t158865*t158865*t158865);
            double t158999 = a1p*c*c0p*t158985*t158869*(8.0/9.0);
            double t159034 = t158941*t158942*t158917*t158947;
            double t159000 = -t159034+t158938+t158948-t158949;
            double t159001 = a1p*c*c0p*t158835*t158844*(4.0/3.0);
            double t159002 = t158950-t158951;
            double t159003 = gamma_aa[index]*gcaa*t158850*4.0;
            double t159004 = gamma_aa[index]*gcaa*t158851*t158845*t158939*4.0;
            double t159005 = t158852*t158845*t158939*6.0;
            double t159006 = t158940*t158847*t158849;
            double t159007 = t159003+t159004+t159005+t159006+1.0;
            double t159008 = 1.0/t159007;
            double t159009 = gamma_aa[index]*gcaa*t158850;
            double t159010 = t159009+1.0;
            double t159011 = 1.0/t159010;
            double t159012 = gamma_aa[index]*gcaa*t158850*3.0;
            double t159013 = gamma_aa[index]*gcaa*t158851*t158845*t158939;
            double t159014 = t158852*t158845*t158939*3.0;
            double t159015 = t159012+t159013+t159014+1.0;
            double t159016 = 1.0/t159015;
            double t159017 = gamma_aa[index]*gcaa*t158850*2.0;
            double t159018 = t158852*t158845*t158939;
            double t159019 = t159017+t159018+1.0;
            double t159020 = 1.0/t159019;
            double t159021 = t159002*t158915*t158855;
            double t159022 = t159021+t158951;
            double t159023 = 1.0/(t158879*t158879*t158879);
            double t159024 = ccab1*gamma_aa[index]*gcab*t159023*t158845*t158890*t158846*(3.2E1/9.0);
            double t159025 = t158892*t158892;
            double t159026 = 1.0/(t158876*t158876*t158876);
            double t159027 = ccab4*t159025*t159026*t158847*t158848*t158849*2.0;
            double t159028 = t158895*t158895;
            double t159029 = 1.0/(t158888*t158888*t158888);
            double t159030 = ccab2*t159028*t159029*t158852*t158845*t158846*2.0;
            double t159031 = t158902*t158902;
            double t159032 = 1.0/(t158884*t158884*t158884);
            double t159033 = ccab3*gamma_aa[index]*gcab*t159031*t159032*t158851*t158845*t158846*2.0;
            double t159035 = ccaa4*t159008*t158903*t158940*t158847*(3.2E1/3.0);
            double t159036 = ccaa1*gamma_aa[index]*gcaa*t159011*t158893*(8.0/3.0);
            double t159037 = ccaa3*gamma_aa[index]*gcaa*t159016*t158845*t158939*t158896*8.0;
            double t159038 = ccaa2*t159020*t158845*t158894*t158939*(1.6E1/3.0);
            double t159039 = 1.0/(t159010*t159010);
            double t159040 = gamma_aa[index]*gcaa*t158893*8.0;
            double t159041 = gamma_aa[index]*gcaa*t158845*t158939*t158896*8.0;
            double t159042 = t158845*t158894*t158939*1.6E1;
            double t159043 = t159040+t159041+t159042;
            double t159044 = 1.0/(t159015*t159015);
            double t159045 = gamma_aa[index]*gcaa*t158893*(3.2E1/3.0);
            double t159046 = gamma_aa[index]*gcaa*t158845*t158939*t158896*3.2E1;
            double t159047 = t158845*t158894*t158939*3.2E1;
            double t159048 = t158903*t158940*t158847*(3.2E1/3.0);
            double t159049 = t159045+t159046+t159047+t159048;
            double t159050 = 1.0/(t159007*t159007);
            double t159051 = gamma_aa[index]*gcaa*t158893*(1.6E1/3.0);
            double t159052 = t158845*t158894*t158939*(1.6E1/3.0);
            double t159053 = t159051+t159052;
            double t159054 = 1.0/(t159019*t159019);
            double t159055 = t159035+t159036+t159037+t159038-ccaa1*t159039*t158845*t158894*t158939*(8.0/3.0)- \
               ccaa2*t159053*t159054*t158852*t158845*t158939-ccaa4*t159050*t158940*t159049*t158847*t158849-ccaa3* \
               gamma_aa[index]*gcaa*t159043*t159044*t158851*t158845*t158939;
            double t159056 = ccaa4*t159008*t158940*t158847*t158849;
            double t159057 = ccaa1*gamma_aa[index]*gcaa*t159011*t158850;
            double t159058 = ccaa3*gamma_aa[index]*gcaa*t159016*t158851*t158845*t158939;
            double t159059 = ccaa2*t159020*t158852*t158845*t158939;
            double t159060 = ccaa0+t159056+t159057+t159058+t159059;
            double t159061 = 1.0/(t158923*t158923*t158923);
            double t159062 = b4f*t158821*t158850*(1.0E1/9.0);
            double t159063 = b2f*c*t158985*(4.0/9.0);
            double t159064 = b3f*t158821*t158850*t158929*(1.0/1.2E1);
            double t159065 = b1f*c*t158929*t158985*(2.0/9.0);
            double t159066 = b3f*c*t158858*t158985*(2.0/3.0);
            double t159067 = t159062+t159063+t159064+t159065+t159066-b1f*t158821*t158850*t158986*(1.0/3.6E1);
            double t159068 = t158941*t159067*t158942*t158917;
            double t159070 = t158931*t158932*t158871*t158996;
            double t159071 = 1.0/(t158926*t158926);
            double t159072 = 1.0/(t158923*t158923*t158923*t158923);
            double t159073 = t159071*t159072*t158917*t158918*t158987*(1.0/2.0);
            double t159074 = t158871*t158828*t158988*t158997*t158998*(1.0/2.0);
            double t159075 = a1f*c*t158941*t158942*t158927*t158947*(2.0/3.0);
            double t159076 = a1p*c*t158931*t158932*t158927*t158937*(2.0/3.0);
            double t159077 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t159078 = 1.0/(omega*omega);
            double t159079 = pow(t159077,2.0/3.0);
            double t159082 = t159078*t159079;
            double t159080 = exp(-t159082);
            double t159081 = 1.0/pow(t159077,1.0/3.0);
            double t159083 = omega*omega;
            double t159084 = t159080-1.0;
            double t159085 = 1.0/pow(t159077,2.0/3.0);
            double t159086 = 1.0/pow(t159077,4.0/3.0);
            double t159087 = 1.0/omega;
            double t159088 = t159083*t159084*t159085*(1.0/2.0);
            double t159089 = -t159080+t159088+3.0/2.0;
            double t159090 = gx*gx;
            double t159091 = t159090*t159090;
            double t159092 = pow(rho_a[index],1.0/3.0);
            double t159093 = pow(t159077,1.0/3.0);
            double t159094 = t159093*t159087;
            double t159095 = erf(t159094);
            double t159096 = t159095*(3.991211251234741E15/2.251799813685248E15);
            double t159128 = omega*t159081*t159089;
            double t159097 = -t159128+t159096;
            double t159098 = gamma_aa[index]*gx*t158850*4.0;
            double t159099 = gamma_aa[index]*gx*t159090*t158851*t158845*4.0;
            double t159100 = t159090*t158852*t158845*6.0;
            double t159101 = t159091*t158847*t158849;
            double t159102 = t159100+t159101+t159098+t159099+1.0;
            double t159103 = 1.0/t159102;
            double t159104 = gamma_aa[index]*gx*t158850;
            double t159105 = t159104+1.0;
            double t159106 = 1.0/t159105;
            double t159107 = gamma_aa[index]*gx*t158850*3.0;
            double t159108 = gamma_aa[index]*gx*t159090*t158851*t158845;
            double t159109 = t159090*t158852*t158845*3.0;
            double t159110 = t159107+t159108+t159109+1.0;
            double t159111 = 1.0/t159110;
            double t159112 = gamma_aa[index]*gx*t158850*2.0;
            double t159113 = t159090*t158852*t158845;
            double t159114 = t159112+t159113+1.0;
            double t159115 = 1.0/t159114;
            double t159116 = 1.0/rho_a[index];
            double t159117 = t159080*t159116*(1.0/3.0);
            double t159118 = 1.0/pow(t159077,5.0/3.0);
            double t159119 = t159118*t159083*t159084*(2.778046668940015E15/1.40737488355328E14);
            double t159123 = t159080*t159081*t159078*(2.778046668940015E15/7.0368744177664E13);
            double t159120 = -t159123+t159117+t159119;
            double t159121 = 1.0/sqrt(3.141592653589793);
            double t159122 = omega*t159086*t159089*(2.778046668940015E15/1.40737488355328E14);
            double t159124 = omega*t159120*t159081;
            double t159125 = t159121*t159080*t159085*t159087*(1.108777112152858E31/1.584563250285287E29);
            double t159126 = t159122+t159124+t159125;
            double t159127 = 1.0/pow(t159077,7.0/3.0);
            double t159129 = cx4*t159103*t159091*t158847*t158849;
            double t159130 = cx1*gamma_aa[index]*gx*t159106*t158850;
            double t159131 = cx3*gamma_aa[index]*gx*t159111*t159090*t158851*t158845;
            double t159132 = cx2*t159115*t159090*t158852*t158845;
            double t159133 = cx0+t159130+t159131+t159132+t159129;
            double t159134 = pow(rho_a[index],4.0/3.0);
            double t159135 = omega*t159081*t159126*(4.0/3.0);
            double t159136 = t159135-omega*t159086*t159097*(2.778046668940015E15/1.05553116266496E14);
            double t159137 = cx4*t159103*t159091*t158903*t158847*(3.2E1/3.0);
            double t159138 = cx1*gamma_aa[index]*gx*t159106*t158893*(8.0/3.0);
            double t159139 = cx3*gamma_aa[index]*gx*t159111*t159090*t158845*t158896*8.0;
            double t159140 = cx2*t159115*t159090*t158845*t158894*(1.6E1/3.0);
            double t159141 = 1.0/(t159105*t159105);
            double t159142 = gamma_aa[index]*gx*t158893*8.0;
            double t159143 = gamma_aa[index]*gx*t159090*t158845*t158896*8.0;
            double t159144 = t159090*t158845*t158894*1.6E1;
            double t159145 = t159142+t159143+t159144;
            double t159146 = 1.0/(t159110*t159110);
            double t159147 = gamma_aa[index]*gx*t158893*(3.2E1/3.0);
            double t159148 = gamma_aa[index]*gx*t159090*t158845*t158896*3.2E1;
            double t159149 = t159090*t158845*t158894*3.2E1;
            double t159150 = t159091*t158903*t158847*(3.2E1/3.0);
            double t159151 = t159150+t159147+t159148+t159149;
            double t159152 = 1.0/(t159102*t159102);
            double t159153 = gamma_aa[index]*gx*t158893*(1.6E1/3.0);
            double t159154 = t159090*t158845*t158894*(1.6E1/3.0);
            double t159155 = t159153+t159154;
            double t159156 = 1.0/(t159114*t159114);
            double t159157 = t159140+t159137+t159138+t159139-cx1*t159141*t159090*t158845*t158894*(8.0/3.0)-cx2* \
               t159090*t159155*t159156*t158852*t158845-cx4*t159151*t159152*t159091*t158847*t158849-cx3*gamma_aa[index]* \
               gx*t159090*t159145*t159146*t158851*t158845;
            double t159158 = omega*t159081*t159097*(4.0/3.0);
            double t159159 = t159158-1.0;
            v_rho_a_rho_a_[index] = -t158957*(-t159001-rho_a[index]*(t158965+t158984+t158969-t158832*t158842* \
               t158834*t158966*2.0-a1p*c*c0p*t158826*t158844*(8.0/9.0)+Aa*t158970*t158971*t158855*t158981*t158983* \
               (4.0/9.0))*2.0+rho_a[index]*(t159070+t159074+t159076-t158990-t158999+t158915*t158855*(t159073+t159075+ \
               t159068+t158990+t158999-t159061*t158941*t158917*t158987*2.0-t158931*t158932*t158871*t158996-a1f*c* \
               c0f*t158930*t158985*(8.0/9.0)-t158871*t158828*t158988*t158997*t158998*(1.0/2.0)-a1p*c*t158931*t158932* \
               t158927*t158937*(2.0/3.0)))+t159000*t158915*t158855*2.0+t158832*t158834*t158843*t158836*2.0-t158931* \
               t158932*t158871*t158937*2.0+a1p*c*c0p*t158927*t158869*(4.0/3.0))+t159022*t159055*2.0+(rho_a[index]* \
               (t158951+t158915*t158855*(t158950-c0p*t158871*t158869*2.0))*2.0-c0p*rho_a[index]*t158834*t158844*4.0) \
               *(t159030+t159024+t159033+t159027+ccab1*gamma_aa[index]*gcab*t158880*t158897*(4.4E1/9.0)-ccab1*t158952* \
               t158845*t158846*t158891*(7.6E1/9.0)+ccab2*t158845*t158846*t158891*t158889*(4.0E1/3.0)+ccab4*t158908* \
               t158847*t158848*t158877*(3.68E2/9.0)-ccab2*t158912*t158845*t158846*t158894*t158895*(1.6E1/3.0)-ccab4* \
               t158903*t158909*t158847*t158892*t158848*(3.2E1/3.0)-ccab2*t158912*t158852*t158845*t158846*(gamma_aa[index]* \
               gcab*t158897*(8.8E1/9.0)+t158845*t158846*t158891*(4.0E1/3.0))-ccab4*t158909*t158847*t158848*t158849* \
               (gamma_aa[index]*gcab*t158897*(1.76E2/9.0)+t158845*t158846*t158891*8.0E1+t158908*t158847*t158848*(3.68E2/ \
               9.0)+gamma_aa[index]*gcab*t158845*t158890*t158846*(3.04E2/3.0))+ccab3*gamma_aa[index]*gcab*t158845* \
               t158890*t158846*t158885*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t158851*t158845*t158846*t158898*(gamma_aa[index]* \
               gcab*t158897*(4.4E1/3.0)+t158845*t158846*t158891*4.0E1+gamma_aa[index]*gcab*t158845*t158890*t158846* \
               (7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t158902*t158845*t158846*t158896*t158898*8.0)+t159060*(-t158938+ \
               t158949+t158915*t158855*(t158938+t158948-t158941*t158942*t158917*t158947-a1p*c*c0p*t158927*t158869* \
               (2.0/3.0)))*2.0+(-t158951+rho_a[index]*(-t158938+t158949+t159000*t158915*t158855)+rho_a[index]*(t158832* \
               t158834*t158843*t158836-a1p*c*c0p*t158835*t158844*(2.0/3.0))*2.0+c0p*t158834*t158844*2.0-t159002*t158915* \
               t158855)*(ccab1*gamma_aa[index]*gcab*t158880*t158893*(4.0/3.0)-ccab1*t158952*t158845*t158846*t158894* \
               (4.0/3.0)+ccab4*t158903*t158847*t158848*t158877*(1.6E1/3.0)+ccab2*t158845*t158846*t158894*t158889* \
               (8.0/3.0)-ccab2*t158912*t158852*t158845*t158846*t158895-ccab4*t158909*t158847*t158892*t158848*t158849+ \
               ccab3*gamma_aa[index]*gcab*t158845*t158846*t158885*t158896*4.0-ccab3*gamma_aa[index]*gcab*t158902* \
               t158851*t158845*t158846*t158898)*4.0+(rho_a[index]*t159022*2.0-c0p*rho_a[index]*t158834*t158844*4.0) \
               *(t159030+t159024+t159033+t159027-ccab1*t158952*t158845*t158846*t158891*(3.2E1/9.0)-ccab2*t158912* \
               t158908*t158847*t158848*(3.2E1/9.0)+ccab2*t158845*t158846*t158891*t158889*(3.2E1/9.0)+ccab4*t158908* \
               t158847*t158848*t158877*(6.4E1/3.0)-ccab2*t158912*t158845*t158846*t158894*t158895*(1.6E1/3.0)-ccab4* \
               t158903*t158909*t158847*t158892*t158848*(3.2E1/3.0)-ccab4*t158909*t158847*t158848*t158849*(t158845* \
               t158846*t158891*(6.4E1/3.0)+t158908*t158847*t158848*(6.4E1/3.0)+gamma_aa[index]*gcab*t158845*t158890* \
               t158846*(1.28E2/3.0))+ccab3*gamma_aa[index]*gcab*t158845*t158890*t158846*t158885*(3.2E1/3.0)-ccab3* \
               gamma_aa[index]*gcab*t158851*t158845*t158846*t158898*(t158845*t158846*t158891*(3.2E1/3.0)+gamma_aa[index]* \
               gcab*t158845*t158890*t158846*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t158902*t158845*t158846*t158896* \
               t158898*8.0)+t158957*(t159001+rho_a[index]*(t158965+t158984+t158969-t158832*t158842*t158834*t158966* \
               2.0-a1p*c*c0p*t158826*t158844*(8.0/9.0)-Aa*t158970*t158971*t158855*t158981*t158983*(4.0/9.0))*2.0- \
               t158832*t158834*t158843*t158836*2.0)+rho_a[index]*t159055*(t158938-t158949+t158915*t158855*(t159034- \
               t158938-t158948+t158949))*2.0+rho_a[index]*t159060*(t159070+t159074+t159076-t158990-t158999-t158915* \
               t158855*(t159070-t159073+t159074-t159075+t159076-t159068-t158990-t158999+t159061*t158941*t158917*t158987* \
               2.0+a1f*c*c0f*t158930*t158985*(8.0/9.0)))-rho_a[index]*t159022*(ccaa1*gamma_aa[index]*gcaa*t159011* \
               t158897*(8.8E1/9.0)+ccaa2*t159020*t158845*t158891*t158939*(3.04E2/9.0)+ccaa4*t159008*t158940*t158908* \
               t158847*(1.12E3/9.0)-ccaa1*t159039*t158845*t158891*t158939*2.4E1-ccaa4*t159050*t158903*t158940*t159049* \
               t158847*(6.4E1/3.0)-ccaa2*t159053*t159054*t158845*t158894*t158939*(3.2E1/3.0)-ccaa2*t159054*t158852* \
               t158845*t158939*(gamma_aa[index]*gcaa*t158897*(1.76E2/9.0)+t158845*t158891*t158939*(3.04E2/9.0))-ccaa4* \
               t159050*t158940*t158847*t158849*(gamma_aa[index]*gcaa*t158897*(3.52E2/9.0)+t158940*t158908*t158847* \
               (1.12E3/9.0)+t158845*t158891*t158939*(6.08E2/3.0)+gamma_aa[index]*gcaa*t158845*t158890*t158939*2.88E2) \
               +ccaa2*(t159053*t159053)*1.0/(t159019*t159019*t159019)*t158852*t158845*t158939*2.0+ccaa4*1.0/(t159007* \
               t159007*t159007)*t158940*(t159049*t159049)*t158847*t158849*2.0+ccaa3*gamma_aa[index]*gcaa*t159016* \
               t158845*t158890*t158939*7.2E1+ccaa1*gamma_aa[index]*gcaa*1.0/(t159010*t159010*t159010)*t158845*t158890* \
               t158939*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*1.0/(t159015*t159015*t159015)*(t159043*t159043)*t158851* \
               t158845*t158939*2.0-ccaa3*gamma_aa[index]*gcaa*t159044*t158851*t158845*t158939*(gamma_aa[index]*gcaa* \
               t158897*(8.8E1/3.0)+t158845*t158891*t158939*(3.04E2/3.0)+gamma_aa[index]*gcaa*t158845*t158890*t158939* \
               7.2E1)-ccaa3*gamma_aa[index]*gcaa*t159043*t159044*t158845*t158939*t158896*1.6E1)-c0*t159134*t159159* \
               (cx1*gamma_aa[index]*gx*t159106*t158897*(8.8E1/9.0)-cx1*t159141*t159090*t158845*t158891*2.4E1+cx2* \
               t159115*t159090*t158845*t158891*(3.04E2/9.0)+cx4*t159103*t159091*t158908*t158847*(1.12E3/9.0)-cx2* \
               t159090*t159155*t159156*t158845*t158894*(3.2E1/3.0)-cx4*t159151*t159152*t159091*t158903*t158847*(6.4E1/ \
               3.0)-cx2*t159090*t159156*t158852*t158845*(gamma_aa[index]*gx*t158897*(1.76E2/9.0)+t159090*t158845* \
               t158891*(3.04E2/9.0))-cx4*t159152*t159091*t158847*t158849*(gamma_aa[index]*gx*t158897*(3.52E2/9.0) \
               +t159090*t158845*t158891*(6.08E2/3.0)+t159091*t158908*t158847*(1.12E3/9.0)+gamma_aa[index]*gx*t159090* \
               t158845*t158890*2.88E2)+cx2*1.0/(t159114*t159114*t159114)*t159090*(t159155*t159155)*t158852*t158845* \
               2.0+cx4*1.0/(t159102*t159102*t159102)*(t159151*t159151)*t159091*t158847*t158849*2.0+cx3*gamma_aa[index]* \
               gx*t159111*t159090*t158845*t158890*7.2E1+cx1*gamma_aa[index]*gx*1.0/(t159105*t159105*t159105)*t159090* \
               t158845*t158890*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*1.0/(t159110*t159110*t159110)*t159090*(t159145* \
               t159145)*t158851*t158845*2.0-cx3*gamma_aa[index]*gx*t159090*t159146*t158851*t158845*(gamma_aa[index]* \
               gx*t158897*(8.8E1/3.0)+t159090*t158845*t158891*(3.04E2/3.0)+gamma_aa[index]*gx*t159090*t158845*t158890* \
               7.2E1)-cx3*gamma_aa[index]*gx*t159090*t159145*t159146*t158845*t158896*1.6E1)-c0*t159133*t159136*t159092* \
               (8.0/3.0)+c0*t159134*t159136*t159157*2.0-c0*t159133*t158860*t159159*(4.0/9.0)+c0*t159092*t159157*t159159* \
               (8.0/3.0)+c0*t159133*t159134*(omega*t159081*(omega*t159081*(t159080*t158971*(5.0/9.0)-1.0/(omega*omega* \
               omega*omega)*t159080*t159085*(7.717543294808713E30/4.951760157141521E27)+t159083*t159084*1.0/pow(t159077,8.0/ \
               3.0)*(3.858771647404357E31/1.980704062856608E28)-t159080*t159086*t159078*(7.717543294808713E30/9.903520314283042E27) \
               +t159080*t159116*t159081*t159078*(2.778046668940015E15/2.11106232532992E14))+omega*t159120*t159086* \
               (2.778046668940015E15/7.0368744177664E13)+omega*t159127*t159089*(7.717543294808713E30/4.951760157141521E27) \
               +t159121*t159080*t159118*t159087*(3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega) \
               *t159121*t159080*t159116*(1.108777112152858E31/2.37684487542793E29))*(4.0/3.0)+omega*t159126*t159086* \
               (2.778046668940015E15/5.2776558133248E13)-omega*t159127*t159097*(7.717543294808713E30/3.713820117856141E27) \
               );
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t159161 = 1.0/pow(rho_a[index],1.0/3.0);
                double t159162 = c*t159161;
                double t159163 = sqrt(t159162);
                double t159164 = pow(t159162,3.0/2.0);
                double t159165 = c*c;
                double t159166 = 1.0/pow(rho_a[index],2.0/3.0);
                double t159167 = 1.0/c0p;
                double t159168 = b1p*t159163;
                double t159169 = b3p*t159164;
                double t159170 = b4p*t159165*t159166;
                double t159171 = b2p*c*t159161;
                double t159172 = t159170+t159171+t159168+t159169;
                double t159173 = 1.0/t159172;
                double t159174 = t159173*t159167*(1.0/2.0);
                double t159175 = t159174+1.0;
                double t159176 = log(t159175);
                double t159177 = a1p*c*t159161;
                double t159178 = t159177+1.0;
                double t159179 = 1.0/pow(rho_a[index],8.0/3.0);
                double t159180 = gamma_aa[index]*gamma_aa[index];
                double t159181 = gcaa*gcaa;
                double t159182 = t159181*t159181;
                double t159183 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t159184 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t159185 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t159186 = gamma_aa[index]*gcaa*t159179;
                double t159187 = t159186+1.0;
                double t159188 = gamma_aa[index]*gcaa*t159179*3.0;
                double t159189 = gamma_aa[index]*gcaa*t159180*t159181*t159185;
                double t159190 = t159180*t159181*t159184*3.0;
                double t159191 = t159190+t159188+t159189+1.0;
                double t159192 = t159180*t159180;
                double t159193 = gamma_aa[index]*gcaa*t159179*4.0;
                double t159194 = gamma_aa[index]*gcaa*t159180*t159181*t159185*4.0;
                double t159195 = t159180*t159181*t159184*6.0;
                double t159196 = t159182*t159183*t159192;
                double t159197 = t159193+t159194+t159195+t159196+1.0;
                double t159198 = gamma_aa[index]*gcaa*t159179*2.0;
                double t159199 = t159180*t159181*t159184;
                double t159200 = t159198+t159199+1.0;
                double t159201 = pow(2.0,1.0/3.0);
                double t159202 = t159201*2.0;
                double t159203 = t159202-2.0;
                double t159204 = two_13*2.0;
                double t159205 = t159204-2.0;
                double t159206 = 1.0/t159205;
                double t159207 = 1.0/c0f;
                double t159208 = b1f*t159163;
                double t159209 = b3f*t159164;
                double t159210 = b4f*t159165*t159166;
                double t159211 = b2f*c*t159161;
                double t159212 = t159210+t159211+t159208+t159209;
                double t159213 = 1.0/t159212;
                double t159214 = t159213*t159207*(1.0/2.0);
                double t159215 = t159214+1.0;
                double t159216 = log(t159215);
                double t159217 = a1f*c*t159161;
                double t159218 = t159217+1.0;
                double t159219 = c0f*t159216*t159218*2.0;
                double t159220 = c0p*t159176*t159178*2.0;
                double t159221 = rho_a[index]*2.0;
                double t159222 = 1.0/pow(t159221,1.0/3.0);
                double t159223 = c*t159222;
                double t159224 = gcab*gcab;
                double t159225 = t159224*t159224;
                double t159226 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t159227 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t159228 = gamma_aa[index]*gcab*t159179*2.0;
                double t159229 = t159224*t159180*t159184;
                double t159230 = t159228+t159229+1.0;
                double t159231 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t159232 = gamma_aa[index]*gcab*t159179;
                double t159233 = t159232+1.0;
                double t159234 = gamma_aa[index]*gcab*t159179*3.0;
                double t159235 = gamma_aa[index]*gcab*t159224*t159180*t159185;
                double t159236 = t159224*t159180*t159184*3.0;
                double t159237 = t159234+t159235+t159236+1.0;
                double t159238 = gamma_aa[index]*gcab*t159179*4.0;
                double t159239 = gamma_aa[index]*gcab*t159224*t159180*t159185*4.0;
                double t159240 = t159224*t159180*t159184*6.0;
                double t159241 = t159225*t159183*t159192;
                double t159242 = t159240+t159241+t159238+t159239+1.0;
                double t159243 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t159244 = 1.0/(t159230*t159230);
                double t159245 = 1.0/(t159237*t159237);
                double t159246 = 1.0/(t159242*t159242);
                double t159247 = gamma_aa[index]*gcab*t159243*(8.0/3.0);
                double t159248 = t159224*t159180*t159226*(8.0/3.0);
                double t159249 = t159247+t159248;
                double t159250 = gcab*t159179;
                double t159251 = gamma_aa[index]*t159224*t159184;
                double t159252 = t159250+t159251;
                double t159253 = gcab*t159179*(3.0/2.0);
                double t159254 = gamma_aa[index]*t159224*t159184*3.0;
                double t159255 = gcab*t159224*t159180*t159185*(3.0/2.0);
                double t159256 = t159253+t159254+t159255;
                double t159257 = gamma_aa[index]*gcab*t159243*4.0;
                double t159258 = gamma_aa[index]*gcab*t159231*t159224*t159180*4.0;
                double t159259 = t159224*t159180*t159226*8.0;
                double t159260 = t159257+t159258+t159259;
                double t159261 = gamma_aa[index]*gcab*t159243*(1.6E1/3.0);
                double t159262 = gamma_aa[index]*gcab*t159231*t159224*t159180*1.6E1;
                double t159263 = t159224*t159180*t159226*1.6E1;
                double t159264 = t159225*t159227*t159192*(1.6E1/3.0);
                double t159265 = t159261+t159262+t159263+t159264;
                double t159266 = gcab*t159179*2.0;
                double t159267 = gamma_aa[index]*t159224*t159184*6.0;
                double t159268 = gcab*t159224*t159180*t159185*6.0;
                double t159269 = gamma_aa[index]*t159180*t159225*t159183*2.0;
                double t159270 = t159266+t159267+t159268+t159269;
                double t159271 = t159220-t159219;
                double t159316 = t159203*t159206*t159271;
                double t159272 = t159220-t159316;
                double t159273 = rho_a[index]*t159272*2.0;
                double t159274 = sqrt(t159223);
                double t159275 = b1p*t159274;
                double t159276 = pow(t159223,3.0/2.0);
                double t159277 = b3p*t159276;
                double t159278 = b2p*c*t159222;
                double t159279 = 1.0/pow(t159221,2.0/3.0);
                double t159280 = b4p*t159165*t159279;
                double t159281 = t159280+t159275+t159277+t159278;
                double t159282 = 1.0/t159281;
                double t159283 = t159282*t159167*(1.0/2.0);
                double t159284 = t159283+1.0;
                double t159285 = log(t159284);
                double t159286 = a1p*c*t159222;
                double t159287 = t159286+1.0;
                double t159288 = t159273-c0p*rho_a[index]*t159285*t159287*4.0;
                double t159289 = 1.0/t159242;
                double t159290 = 1.0/t159230;
                double t159291 = 1.0/t159237;
                double t159292 = 1.0/(t159233*t159233);
                double t159293 = 1.0/(t159233*t159233*t159233);
                double t159294 = ccab3*gcab*t159224*t159260*t159180*t159245*t159185*(3.0/2.0);
                double t159295 = ccab2*gamma_aa[index]*t159224*t159244*t159184*t159249;
                double t159296 = ccab3*gamma_aa[index]*gcab*t159231*t159224*t159180*t159245*t159256*4.0;
                double t159297 = ccab4*gamma_aa[index]*t159180*t159225*t159183*t159246*t159265*2.0;
                double t159298 = ccab4*t159225*t159270*t159227*t159192*t159246*(1.6E1/3.0);
                double t159299 = ccab2*t159224*t159180*t159252*t159226*t159244*(8.0/3.0);
                double t159300 = gamma_aa[index]*t159224*t159226*4.0;
                double t159301 = 1.0/(t159230*t159230*t159230);
                double t159302 = 1.0/(t159237*t159237*t159237);
                double t159303 = 1.0/(t159242*t159242*t159242);
                double t159304 = 1.0/pow(t159221,4.0/3.0);
                double t159305 = 1.0/pow(rho_a[index],4.0/3.0);
                double t159306 = 1.0/pow(rho_a[index],5.0/3.0);
                double t159307 = 1.0/sqrt(t159162);
                double t159308 = 1.0/t159175;
                double t159309 = 1.0/(t159172*t159172);
                double t159310 = b4p*t159306*t159165*(2.0/3.0);
                double t159311 = b2p*c*t159305*(1.0/3.0);
                double t159312 = b1p*c*t159305*t159307*(1.0/6.0);
                double t159313 = b3p*c*t159305*t159163*(1.0/2.0);
                double t159314 = t159310+t159311+t159312+t159313;
                double t159315 = t159314*t159308*t159309*t159178;
                double t159317 = 1.0/t159233;
                double t159318 = 1.0/t159187;
                double t159319 = 1.0/t159197;
                double t159320 = 1.0/t159200;
                double t159321 = 1.0/t159191;
                double t159322 = 1.0/(t159187*t159187);
                double t159323 = 1.0/(t159191*t159191);
                double t159324 = 1.0/(t159200*t159200);
                double t159325 = gcaa*t159179*3.0;
                double t159326 = gamma_aa[index]*t159181*t159184*6.0;
                double t159327 = gcaa*t159180*t159181*t159185*3.0;
                double t159328 = t159325+t159326+t159327;
                double t159329 = 1.0/(t159197*t159197);
                double t159330 = gcaa*t159179*4.0;
                double t159331 = gamma_aa[index]*t159181*t159184*1.2E1;
                double t159332 = gcaa*t159180*t159181*t159185*1.2E1;
                double t159333 = gamma_aa[index]*t159180*t159182*t159183*4.0;
                double t159334 = t159330+t159331+t159332+t159333;
                double t159335 = gcaa*t159179*2.0;
                double t159336 = gamma_aa[index]*t159181*t159184*2.0;
                double t159337 = t159335+t159336;
                double t159338 = gamma_aa[index]*gcaa*t159243*(1.6E1/3.0);
                double t159339 = t159180*t159181*t159226*(1.6E1/3.0);
                double t159340 = t159338+t159339;
                double t159341 = gamma_aa[index]*gcaa*t159243*8.0;
                double t159342 = gamma_aa[index]*gcaa*t159231*t159180*t159181*8.0;
                double t159343 = t159180*t159181*t159226*1.6E1;
                double t159344 = t159341+t159342+t159343;
                double t159345 = gamma_aa[index]*gcaa*t159243*(3.2E1/3.0);
                double t159346 = gamma_aa[index]*gcaa*t159231*t159180*t159181*3.2E1;
                double t159347 = t159180*t159181*t159226*3.2E1;
                double t159348 = t159182*t159227*t159192*(3.2E1/3.0);
                double t159349 = t159345+t159346+t159347+t159348;
                double t159350 = 1.0/t159215;
                double t159351 = 1.0/(t159212*t159212);
                double t159352 = b4f*t159306*t159165*(2.0/3.0);
                double t159353 = b2f*c*t159305*(1.0/3.0);
                double t159354 = b1f*c*t159305*t159307*(1.0/6.0);
                double t159355 = b3f*c*t159305*t159163*(1.0/2.0);
                double t159356 = t159352+t159353+t159354+t159355;
                double t159357 = a1f*c*c0f*t159305*t159216*(2.0/3.0);
                double t159358 = a1p*c*c0p*t159305*t159176*(2.0/3.0);
                double t159359 = ccaa1*gcaa*t159318*t159179;
                double t159360 = ccaa4*gamma_aa[index]*t159180*t159182*t159183*t159319*4.0;
                double t159361 = ccaa2*gamma_aa[index]*t159320*t159181*t159184*2.0;
                double t159362 = ccaa3*gcaa*t159321*t159180*t159181*t159185*3.0;
                double t159363 = t159360+t159361+t159362+t159359-ccaa1*gamma_aa[index]*t159322*t159181*t159184-ccaa2* \
                   t159180*t159324*t159181*t159184*t159337-ccaa4*t159334*t159182*t159183*t159192*t159329-ccaa3*gamma_aa[index]* \
                   gcaa*t159323*t159180*t159181*t159328*t159185;
                double t159364 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t159365 = 1.0/pow(t159364,1.0/3.0);
                double t159366 = 1.0/(omega*omega);
                double t159367 = pow(t159364,2.0/3.0);
                double t159417 = t159366*t159367;
                double t159368 = exp(-t159417);
                double t159369 = gx*gx;
                double t159370 = t159369*t159369;
                double t159371 = gamma_aa[index]*gx*t159179;
                double t159372 = t159371+1.0;
                double t159373 = gamma_aa[index]*gx*t159179*3.0;
                double t159374 = gamma_aa[index]*gx*t159180*t159185*t159369;
                double t159375 = t159180*t159184*t159369*3.0;
                double t159376 = t159373+t159374+t159375+1.0;
                double t159377 = gamma_aa[index]*gx*t159179*2.0;
                double t159378 = t159180*t159184*t159369;
                double t159379 = t159377+t159378+1.0;
                double t159380 = 1.0/(t159376*t159376);
                double t159381 = gamma_aa[index]*gx*t159179*4.0;
                double t159382 = gamma_aa[index]*gx*t159180*t159185*t159369*4.0;
                double t159383 = t159180*t159184*t159369*6.0;
                double t159384 = t159370*t159183*t159192;
                double t159385 = t159381+t159382+t159383+t159384+1.0;
                double t159386 = 1.0/(t159385*t159385);
                double t159387 = 1.0/(t159379*t159379);
                double t159388 = gamma_aa[index]*gx*t159243*(1.6E1/3.0);
                double t159389 = t159180*t159226*t159369*(1.6E1/3.0);
                double t159390 = t159388+t159389;
                double t159391 = gx*t159179*2.0;
                double t159392 = gamma_aa[index]*t159184*t159369*2.0;
                double t159393 = t159391+t159392;
                double t159394 = gx*t159179*3.0;
                double t159395 = gamma_aa[index]*t159184*t159369*6.0;
                double t159396 = gx*t159180*t159185*t159369*3.0;
                double t159397 = t159394+t159395+t159396;
                double t159398 = gamma_aa[index]*gx*t159243*8.0;
                double t159399 = gamma_aa[index]*gx*t159231*t159180*t159369*8.0;
                double t159400 = t159180*t159226*t159369*1.6E1;
                double t159401 = t159400+t159398+t159399;
                double t159402 = gamma_aa[index]*gx*t159243*(3.2E1/3.0);
                double t159403 = gamma_aa[index]*gx*t159231*t159180*t159369*3.2E1;
                double t159404 = t159180*t159226*t159369*3.2E1;
                double t159405 = t159370*t159227*t159192*(3.2E1/3.0);
                double t159406 = t159402+t159403+t159404+t159405;
                double t159407 = gx*t159179*4.0;
                double t159408 = gamma_aa[index]*t159184*t159369*1.2E1;
                double t159409 = gx*t159180*t159185*t159369*1.2E1;
                double t159410 = gamma_aa[index]*t159180*t159370*t159183*4.0;
                double t159411 = t159410+t159407+t159408+t159409;
                double t159412 = 1.0/omega;
                double t159413 = pow(t159364,1.0/3.0);
                double t159414 = t159412*t159413;
                double t159415 = erf(t159414);
                double t159416 = t159415*(3.991211251234741E15/2.251799813685248E15);
                double t159418 = omega*omega;
                double t159419 = 1.0/pow(t159364,2.0/3.0);
                double t159420 = t159368-1.0;
                double t159421 = t159420*t159418*t159419*(1.0/2.0);
                double t159422 = t159421-t159368+3.0/2.0;
                double t159433 = omega*t159422*t159365;
                double t159423 = -t159433+t159416;
                double t159424 = omega*t159423*t159365*(4.0/3.0);
                double t159425 = t159424-1.0;
                double t159426 = 1.0/t159372;
                double t159427 = 1.0/t159385;
                double t159428 = 1.0/t159379;
                double t159429 = 1.0/t159376;
                double t159430 = 1.0/(t159372*t159372);
                double t159431 = pow(rho_a[index],4.0/3.0);
                double t159432 = 1.0/pow(t159364,4.0/3.0);
                double t159434 = cx1*gx*t159426*t159179;
                double t159435 = cx4*gamma_aa[index]*t159180*t159370*t159183*t159427*4.0;
                double t159436 = cx2*gamma_aa[index]*t159184*t159428*t159369*2.0;
                double t159437 = cx3*gx*t159180*t159185*t159429*t159369*3.0;
                double t159438 = t159434+t159435+t159436+t159437-cx1*gamma_aa[index]*t159430*t159184*t159369-cx2* \
                   t159180*t159184*t159393*t159369*t159387-cx4*t159411*t159370*t159183*t159192*t159386-cx3*gamma_aa[index]* \
                   gx*t159180*t159380*t159185*t159369*t159397;
                v_rho_a_gamma_aa_[index] = (-t159220+t159316+rho_a[index]*((1.0/(t159281*t159281)*t159287*(b4p*1.0/ \
                   pow(t159221,5.0/3.0)*t159165*(2.0/3.0)+b2p*c*t159304*(1.0/3.0)+b3p*c*t159304*t159274*(1.0/2.0)+b1p* \
                   c*1.0/sqrt(t159223)*t159304*(1.0/6.0)))/t159284-a1p*c*c0p*t159304*t159285*(2.0/3.0))*2.0+rho_a[index]* \
                   (-t159315+t159358+t159203*t159206*(t159315+t159357-t159350*t159351*t159218*t159356-a1p*c*c0p*t159305* \
                   t159176*(2.0/3.0)))+c0p*t159285*t159287*2.0)*(ccab1*gcab*t159317*t159179*(1.0/2.0)+ccab2*gamma_aa[index]* \
                   t159224*t159290*t159184-ccab1*gamma_aa[index]*t159224*t159184*t159292*(1.0/2.0)-ccab2*t159224*t159180* \
                   t159252*t159244*t159184-ccab4*t159225*t159270*t159183*t159192*t159246+ccab4*gamma_aa[index]*t159180* \
                   t159225*t159183*t159289*2.0+ccab3*gcab*t159224*t159180*t159291*t159185*(3.0/2.0)-ccab3*gamma_aa[index]* \
                   gcab*t159224*t159180*t159245*t159256*t159185)*-2.0+t159288*(t159294+t159295+t159296+t159297+t159298+ \
                   t159299-ccab2*gamma_aa[index]*t159224*t159226*t159290*(4.0/3.0)+ccab1*gamma_aa[index]*t159224*t159226* \
                   t159292*(4.0/3.0)+ccab4*t159225*t159183*t159192*t159246*(gamma_aa[index]*t159224*t159226*8.0+gamma_aa[index]* \
                   t159180*t159225*t159227*8.0+gcab*t159231*t159224*t159180*1.6E1)+ccab2*gamma_aa[index]*t159180*t159225* \
                   t159244*t159227*(4.0/3.0)-ccab4*gamma_aa[index]*t159180*t159225*t159227*t159289*8.0-ccab1*gcab*t159231* \
                   t159224*t159180*t159293*(4.0/3.0)-ccab3*gcab*t159231*t159224*t159180*t159291*4.0-ccab2*t159301*t159224* \
                   t159180*t159252*t159184*t159249*2.0-ccab4*t159303*t159225*t159270*t159183*t159192*t159265*2.0+ccab3* \
                   gamma_aa[index]*gcab*t159224*t159180*t159245*t159185*(t159300+gcab*t159231*t159224*t159180*4.0)-ccab3* \
                   gamma_aa[index]*gcab*t159302*t159224*t159260*t159180*t159256*t159185*2.0)-t159363*(t159220+t159203* \
                   t159206*(t159219-c0p*t159176*t159178*2.0))+t159288*(t159294+t159295+t159296+t159297+t159298+t159299- \
                   ccab1*gcab*t159243*t159317*(4.0/3.0)-ccab2*gamma_aa[index]*t159224*t159226*t159290*4.0+ccab1*gamma_aa[index]* \
                   t159224*t159226*t159292*(8.0/3.0)+ccab4*t159225*t159183*t159192*t159246*(gcab*t159243*(1.6E1/3.0)+ \
                   gamma_aa[index]*t159224*t159226*2.4E1+gamma_aa[index]*t159180*t159225*t159227*(4.0E1/3.0)+gcab*t159231* \
                   t159224*t159180*3.2E1)+ccab2*t159224*t159180*t159244*t159184*(t159300+gcab*t159243*(8.0/3.0))-ccab4* \
                   gamma_aa[index]*t159180*t159225*t159227*t159289*(4.0E1/3.0)-ccab1*gcab*t159231*t159224*t159180*t159293* \
                   (4.0/3.0)-ccab3*gcab*t159231*t159224*t159180*t159291*8.0-ccab2*t159301*t159224*t159180*t159252*t159184* \
                   t159249*2.0-ccab4*t159303*t159225*t159270*t159183*t159192*t159265*2.0+ccab3*gamma_aa[index]*gcab*t159224* \
                   t159180*t159245*t159185*(gcab*t159243*4.0+gamma_aa[index]*t159224*t159226*1.2E1+gcab*t159231*t159224* \
                   t159180*8.0)-ccab3*gamma_aa[index]*gcab*t159302*t159224*t159260*t159180*t159256*t159185*2.0)-rho_a[index]* \
                   t159272*(ccaa1*gcaa*t159243*t159318*(-8.0/3.0)-ccaa2*gamma_aa[index]*t159320*t159181*t159226*(3.2E1/ \
                   3.0)+ccaa1*gamma_aa[index]*t159322*t159181*t159226*8.0+ccaa2*t159180*t159324*t159181*t159226*t159337* \
                   (1.6E1/3.0)+ccaa4*t159334*t159182*t159227*t159192*t159329*(3.2E1/3.0)+ccaa4*t159182*t159183*t159192* \
                   t159329*(gcaa*t159243*(3.2E1/3.0)+gamma_aa[index]*t159181*t159226*6.4E1+gamma_aa[index]*t159180*t159182* \
                   t159227*(1.28E2/3.0)+gcaa*t159231*t159180*t159181*9.6E1)-ccaa1*gcaa*t159231*t159180*t159181*1.0/(t159187* \
                   t159187*t159187)*(1.6E1/3.0)+ccaa2*t159180*t159324*t159181*t159184*(gcaa*t159243*(1.6E1/3.0)+gamma_aa[index]* \
                   t159181*t159226*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t159340*t159324*t159181*t159184*2.0-ccaa4*gamma_aa[index]* \
                   t159180*t159182*t159227*t159319*(1.28E2/3.0)-ccaa3*gcaa*t159231*t159321*t159180*t159181*2.4E1+ccaa4* \
                   gamma_aa[index]*t159180*t159182*t159183*t159329*t159349*4.0+ccaa3*gcaa*t159323*t159180*t159181*t159344* \
                   t159185*3.0-ccaa2*1.0/(t159200*t159200*t159200)*t159340*t159180*t159181*t159184*t159337*2.0-ccaa4* \
                   t159334*t159182*t159183*t159192*t159349*1.0/(t159197*t159197*t159197)*2.0+ccaa3*gamma_aa[index]*gcaa* \
                   t159323*t159180*t159181*t159185*(gcaa*t159243*8.0+gamma_aa[index]*t159181*t159226*3.2E1+gcaa*t159231* \
                   t159180*t159181*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t159231*t159323*t159180*t159181*t159328*8.0-ccaa3* \
                   gamma_aa[index]*gcaa*t159180*t159181*1.0/(t159191*t159191*t159191)*t159344*t159328*t159185*2.0)+rho_a[index]* \
                   t159363*(-t159315+t159358+t159203*t159206*(t159315+t159357-t159358-t159350*t159351*t159218*t159356) \
                   )-c0*t159431*t159438*(omega*t159365*(omega*t159422*t159432*(2.778046668940015E15/1.40737488355328E14) \
                   +omega*t159365*((t159368*(1.0/3.0))/rho_a[index]+t159420*1.0/pow(t159364,5.0/3.0)*t159418*(2.778046668940015E15/ \
                   1.40737488355328E14)-t159365*t159366*t159368*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793) \
                   *t159412*t159419*t159368*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t159423*t159432* \
                   (2.778046668940015E15/1.05553116266496E14))-c0*t159431*t159425*(cx1*gx*t159243*t159426*(-8.0/3.0)+ \
                   cx1*gamma_aa[index]*t159430*t159226*t159369*8.0-cx2*gamma_aa[index]*t159226*t159428*t159369*(3.2E1/ \
                   3.0)+cx2*t159180*t159226*t159393*t159369*t159387*(1.6E1/3.0)+cx4*t159411*t159370*t159227*t159192*t159386* \
                   (3.2E1/3.0)+cx4*t159370*t159183*t159192*t159386*(gx*t159243*(3.2E1/3.0)+gamma_aa[index]*t159226*t159369* \
                   6.4E1+gamma_aa[index]*t159180*t159370*t159227*(1.28E2/3.0)+gx*t159231*t159180*t159369*9.6E1)-cx1*gx* \
                   t159231*t159180*1.0/(t159372*t159372*t159372)*t159369*(1.6E1/3.0)+cx2*t159180*t159184*t159369*t159387* \
                   (gx*t159243*(1.6E1/3.0)+gamma_aa[index]*t159226*t159369*(3.2E1/3.0))+cx2*gamma_aa[index]*t159390*t159184* \
                   t159369*t159387*2.0-cx4*gamma_aa[index]*t159180*t159370*t159227*t159427*(1.28E2/3.0)-cx3*gx*t159231* \
                   t159180*t159429*t159369*2.4E1+cx4*gamma_aa[index]*t159180*t159370*t159406*t159183*t159386*4.0+cx3* \
                   gx*t159401*t159180*t159380*t159185*t159369*3.0-cx2*t159180*t159390*t159184*t159393*t159369*1.0/(t159379* \
                   t159379*t159379)*2.0-cx4*t159411*t159370*t159406*t159183*t159192*1.0/(t159385*t159385*t159385)*2.0+ \
                   cx3*gamma_aa[index]*gx*t159180*t159380*t159185*t159369*(gx*t159243*8.0+gamma_aa[index]*t159226*t159369* \
                   3.2E1+gx*t159231*t159180*t159369*2.4E1)+cx3*gamma_aa[index]*gx*t159231*t159180*t159380*t159369*t159397* \
                   8.0-cx3*gamma_aa[index]*gx*t159401*t159180*t159185*1.0/(t159376*t159376*t159376)*t159369*t159397*2.0) \
                   -c0*pow(rho_a[index],1.0/3.0)*t159425*t159438*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t159440 = 1.0/pow(rho_a[index],1.0/3.0);
                double t159441 = c*t159440;
                double t159442 = sqrt(t159441);
                double t159443 = pow(t159441,3.0/2.0);
                double t159444 = c*c;
                double t159445 = 1.0/pow(rho_a[index],2.0/3.0);
                double t159446 = 1.0/c0p;
                double t159447 = b1p*t159442;
                double t159448 = b3p*t159443;
                double t159449 = b4p*t159444*t159445;
                double t159450 = b2p*c*t159440;
                double t159451 = t159450+t159447+t159448+t159449;
                double t159452 = 1.0/t159451;
                double t159453 = t159452*t159446*(1.0/2.0);
                double t159454 = t159453+1.0;
                double t159455 = log(t159454);
                double t159456 = a1p*c*t159440;
                double t159457 = t159456+1.0;
                double t159458 = rho_a[index]*2.0;
                double t159459 = 1.0/pow(t159458,1.0/3.0);
                double t159460 = c*t159459;
                double t159461 = gcab*gcab;
                double t159462 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t159463 = 1.0/pow(rho_a[index],8.0/3.0);
                double t159464 = gamma_aa[index]*gamma_aa[index];
                double t159465 = t159461*t159461;
                double t159466 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t159467 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t159468 = gamma_aa[index]*gcab*t159463;
                double t159469 = t159468+1.0;
                double t159470 = gamma_aa[index]*gcab*t159463*2.0;
                double t159471 = t159461*t159462*t159464;
                double t159472 = t159470+t159471+1.0;
                double t159473 = gamma_aa[index]*gcab*t159463*3.0;
                double t159474 = gamma_aa[index]*gcab*t159461*t159464*t159467;
                double t159475 = t159461*t159462*t159464*3.0;
                double t159476 = t159473+t159474+t159475+1.0;
                double t159477 = t159464*t159464;
                double t159493 = gcab*t159463*2.0;
                double t159494 = gamma_aa[index]*t159461*t159462*6.0;
                double t159495 = gcab*t159461*t159464*t159467*6.0;
                double t159496 = gamma_aa[index]*t159464*t159465*t159466*2.0;
                double t159478 = t159493+t159494+t159495+t159496;
                double t159479 = gamma_aa[index]*gcab*t159463*4.0;
                double t159480 = gamma_aa[index]*gcab*t159461*t159464*t159467*4.0;
                double t159481 = t159461*t159462*t159464*6.0;
                double t159482 = t159465*t159466*t159477;
                double t159483 = t159480+t159481+t159482+t159479+1.0;
                double t159486 = gcab*t159463;
                double t159487 = gamma_aa[index]*t159461*t159462;
                double t159484 = t159486+t159487;
                double t159485 = 1.0/(t159476*t159476);
                double t159488 = 1.0/(t159472*t159472);
                double t159489 = gcab*t159463*(3.0/2.0);
                double t159490 = gamma_aa[index]*t159461*t159462*3.0;
                double t159491 = gcab*t159461*t159464*t159467*(3.0/2.0);
                double t159492 = t159490+t159491+t159489;
                double t159497 = 1.0/(t159483*t159483);
                double t159498 = pow(2.0,1.0/3.0);
                double t159499 = t159498*2.0;
                double t159500 = t159499-2.0;
                double t159501 = two_13*2.0;
                double t159502 = t159501-2.0;
                double t159503 = 1.0/t159502;
                double t159504 = 1.0/c0f;
                double t159505 = b1f*t159442;
                double t159506 = b3f*t159443;
                double t159507 = b4f*t159444*t159445;
                double t159508 = b2f*c*t159440;
                double t159509 = t159505+t159506+t159507+t159508;
                double t159510 = 1.0/t159509;
                double t159511 = t159510*t159504*(1.0/2.0);
                double t159512 = t159511+1.0;
                double t159513 = log(t159512);
                double t159514 = a1f*c*t159440;
                double t159515 = t159514+1.0;
                double t159516 = c0f*t159513*t159515*2.0;
                double t159517 = c0p*t159455*t159457*2.0;
                double t159518 = gcaa*gcaa;
                double t159519 = t159518*t159518;
                double t159520 = gamma_aa[index]*gcaa*t159463;
                double t159521 = t159520+1.0;
                double t159522 = gamma_aa[index]*gcaa*t159463*2.0;
                double t159523 = t159462*t159464*t159518;
                double t159524 = t159522+t159523+1.0;
                double t159525 = gamma_aa[index]*gcaa*t159463*3.0;
                double t159526 = gamma_aa[index]*gcaa*t159464*t159518*t159467;
                double t159527 = t159462*t159464*t159518*3.0;
                double t159528 = t159525+t159526+t159527+1.0;
                double t159544 = gcaa*t159463*4.0;
                double t159545 = gamma_aa[index]*t159462*t159518*1.2E1;
                double t159546 = gcaa*t159464*t159518*t159467*1.2E1;
                double t159547 = gamma_aa[index]*t159464*t159519*t159466*4.0;
                double t159529 = t159544+t159545+t159546+t159547;
                double t159530 = gamma_aa[index]*gcaa*t159463*4.0;
                double t159531 = gamma_aa[index]*gcaa*t159464*t159518*t159467*4.0;
                double t159532 = t159462*t159464*t159518*6.0;
                double t159533 = t159519*t159466*t159477;
                double t159534 = t159530+t159531+t159532+t159533+1.0;
                double t159537 = gcaa*t159463*2.0;
                double t159538 = gamma_aa[index]*t159462*t159518*2.0;
                double t159535 = t159537+t159538;
                double t159536 = 1.0/(t159528*t159528);
                double t159539 = 1.0/(t159524*t159524);
                double t159540 = gcaa*t159463*3.0;
                double t159541 = gamma_aa[index]*t159462*t159518*6.0;
                double t159542 = gcaa*t159464*t159518*t159467*3.0;
                double t159543 = t159540+t159541+t159542;
                double t159548 = 1.0/(t159534*t159534);
                double t159549 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t159550 = 1.0/pow(t159549,1.0/3.0);
                double t159551 = 1.0/(omega*omega);
                double t159552 = pow(t159549,2.0/3.0);
                double t159553 = exp(-t159551*t159552);
                double t159554 = gx*gx;
                double t159555 = t159554*t159554;
                double t159556 = gamma_aa[index]*gx*t159463;
                double t159557 = t159556+1.0;
                double t159558 = gamma_aa[index]*gx*t159463*2.0;
                double t159559 = t159462*t159464*t159554;
                double t159560 = t159558+t159559+1.0;
                double t159561 = gamma_aa[index]*gx*t159463*3.0;
                double t159562 = gamma_aa[index]*gx*t159464*t159554*t159467;
                double t159563 = t159462*t159464*t159554*3.0;
                double t159564 = t159561+t159562+t159563+1.0;
                double t159580 = gx*t159463*4.0;
                double t159581 = gamma_aa[index]*t159462*t159554*1.2E1;
                double t159582 = gx*t159464*t159554*t159467*1.2E1;
                double t159583 = gamma_aa[index]*t159464*t159555*t159466*4.0;
                double t159565 = t159580+t159581+t159582+t159583;
                double t159566 = gamma_aa[index]*gx*t159463*4.0;
                double t159567 = gamma_aa[index]*gx*t159464*t159554*t159467*4.0;
                double t159568 = t159462*t159464*t159554*6.0;
                double t159569 = t159555*t159466*t159477;
                double t159570 = t159566+t159567+t159568+t159569+1.0;
                double t159573 = gx*t159463*2.0;
                double t159574 = gamma_aa[index]*t159462*t159554*2.0;
                double t159571 = t159573+t159574;
                double t159572 = 1.0/(t159564*t159564);
                double t159575 = 1.0/(t159560*t159560);
                double t159576 = gx*t159463*3.0;
                double t159577 = gamma_aa[index]*t159462*t159554*6.0;
                double t159578 = gx*t159464*t159554*t159467*3.0;
                double t159579 = t159576+t159577+t159578;
                double t159584 = 1.0/(t159570*t159570);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t159517+t159500*t159503*(t159516-c0p*t159455*t159457* \
                   2.0))*2.0-c0p*rho_a[index]*log((t159446*(1.0/2.0))/(b1p*sqrt(t159460)+b3p*pow(t159460,3.0/2.0)+b4p* \
                   t159444*1.0/pow(t159458,2.0/3.0)+b2p*c*t159459)+1.0)*(a1p*c*t159459+1.0)*4.0)*((ccab2*t159461*t159462* \
                   (1.0/2.0))/t159472-ccab1*t159461*t159462*1.0/(t159469*t159469)*(1.0/2.0)-ccab2*t159464*t159465*t159466* \
                   t159488*(1.0/2.0)+(ccab4*t159464*t159465*t159466*3.0)/t159483-ccab4*t159465*t159466*t159477*t159497* \
                   (t159461*t159462*3.0+t159464*t159465*t159466*3.0+gamma_aa[index]*gcab*t159461*t159467*6.0)+(ccab3* \
                   gamma_aa[index]*gcab*t159461*t159467*(3.0/2.0))/t159476+ccab1*gamma_aa[index]*gcab*t159461*t159467* \
                   1.0/(t159469*t159469*t159469)*(1.0/2.0)+ccab2*t159461*t159462*1.0/(t159472*t159472*t159472)*t159464* \
                   (t159484*t159484)*2.0+ccab4*t159465*1.0/(t159483*t159483*t159483)*t159466*t159477*(t159478*t159478) \
                   *2.0-ccab2*gamma_aa[index]*t159461*t159462*t159484*t159488*2.0-ccab4*gamma_aa[index]*t159464*t159465* \
                   t159466*t159478*t159497*4.0-ccab3*gcab*t159461*t159464*t159492*t159467*t159485*3.0-ccab3*gamma_aa[index]* \
                   gcab*t159461*t159464*t159467*t159485*(t159461*t159462*(3.0/2.0)+gamma_aa[index]*gcab*t159461*t159467* \
                   (3.0/2.0))+ccab3*gamma_aa[index]*gcab*t159461*t159464*(t159492*t159492)*t159467*1.0/(t159476*t159476* \
                   t159476)*2.0)*4.0+rho_a[index]*(t159517+t159500*t159503*(t159516-t159517))*(ccaa1*1.0/(t159521*t159521) \
                   *t159462*t159518*2.0-(ccaa2*t159462*t159518*2.0)/t159524+ccaa2*t159464*t159519*t159466*t159539*2.0- \
                   (ccaa4*t159464*t159519*t159466*1.2E1)/t159534+ccaa4*t159519*t159466*t159548*t159477*(t159462*t159518* \
                   1.2E1+t159464*t159519*t159466*1.2E1+gamma_aa[index]*gcaa*t159518*t159467*2.4E1)-ccaa1*gamma_aa[index]* \
                   gcaa*1.0/(t159521*t159521*t159521)*t159518*t159467*2.0-(ccaa3*gamma_aa[index]*gcaa*t159518*t159467* \
                   6.0)/t159528-ccaa2*1.0/(t159524*t159524*t159524)*t159462*(t159535*t159535)*t159464*t159518*2.0-ccaa4* \
                   1.0/(t159534*t159534*t159534)*t159519*t159466*(t159529*t159529)*t159477*2.0+ccaa2*gamma_aa[index]* \
                   t159462*t159535*t159518*t159539*4.0+ccaa4*gamma_aa[index]*t159464*t159519*t159466*t159529*t159548* \
                   8.0+ccaa3*gcaa*t159543*t159464*t159518*t159536*t159467*6.0+ccaa3*gamma_aa[index]*gcaa*t159464*t159518* \
                   t159536*t159467*(t159462*t159518*6.0+gamma_aa[index]*gcaa*t159518*t159467*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*(t159543*t159543)*t159464*t159518*1.0/(t159528*t159528*t159528)*t159467*2.0)*2.0+c0*pow(rho_a[index],4.0/ \
                   3.0)*(omega*t159550*(erf(pow(t159549,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t159550*(-t159553+(omega*omega)*1.0/pow(t159549,2.0/3.0)*(t159553-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*(cx1*t159462*t159554*1.0/(t159557*t159557)*2.0-(cx2*t159462*t159554*2.0)/t159560+cx2*t159464* \
                   t159555*t159466*t159575*2.0-(cx4*t159464*t159555*t159466*1.2E1)/t159570+cx4*t159555*t159466*t159584* \
                   t159477*(t159462*t159554*1.2E1+t159464*t159555*t159466*1.2E1+gamma_aa[index]*gx*t159554*t159467*2.4E1) \
                   -cx1*gamma_aa[index]*gx*t159554*t159467*1.0/(t159557*t159557*t159557)*2.0-(cx3*gamma_aa[index]*gx* \
                   t159554*t159467*6.0)/t159564-cx2*1.0/(t159560*t159560*t159560)*t159462*(t159571*t159571)*t159464*t159554* \
                   2.0-cx4*1.0/(t159570*t159570*t159570)*t159555*t159466*(t159565*t159565)*t159477*2.0+cx2*gamma_aa[index]* \
                   t159462*t159571*t159554*t159575*4.0+cx4*gamma_aa[index]*t159464*t159555*t159466*t159565*t159584*8.0+ \
                   cx3*gx*t159464*t159554*t159572*t159467*t159579*6.0+cx3*gamma_aa[index]*gx*t159464*t159554*t159572* \
                   t159467*(t159462*t159554*6.0+gamma_aa[index]*gx*t159554*t159467*6.0)-cx3*gamma_aa[index]*gx*t159464* \
                   t159554*1.0/(t159564*t159564*t159564)*t159467*(t159579*t159579)*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wB97_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t153179 = 1.0/pow(rho_a[index],1.0/3.0);
            double t153180 = c*t153179;
            double t153181 = sqrt(t153180);
            double t153182 = pow(t153180,3.0/2.0);
            double t153183 = c*c;
            double t153184 = 1.0/pow(rho_a[index],2.0/3.0);
            double t153185 = 1.0/c0p;
            double t153186 = b1p*t153181;
            double t153187 = b3p*t153182;
            double t153188 = b4p*t153183*t153184;
            double t153189 = b2p*c*t153179;
            double t153190 = t153186+t153187+t153188+t153189;
            double t153191 = 1.0/t153190;
            double t153192 = t153191*t153185*(1.0/2.0);
            double t153193 = t153192+1.0;
            double t153194 = log(t153193);
            double t153195 = a1p*c*t153179;
            double t153196 = t153195+1.0;
            double t153197 = pow(2.0,1.0/3.0);
            double t153198 = t153197*2.0;
            double t153199 = t153198-2.0;
            double t153200 = two_13*2.0;
            double t153201 = t153200-2.0;
            double t153202 = 1.0/t153201;
            double t153203 = 1.0/c0f;
            double t153204 = 1.0/pow(rho_b[index],1.0/3.0);
            double t153205 = c*t153204;
            double t153206 = sqrt(t153205);
            double t153207 = pow(t153205,3.0/2.0);
            double t153208 = 1.0/pow(rho_b[index],2.0/3.0);
            double t153209 = b1p*t153206;
            double t153210 = b3p*t153207;
            double t153211 = b4p*t153208*t153183;
            double t153212 = b2p*c*t153204;
            double t153213 = t153210+t153211+t153212+t153209;
            double t153214 = 1.0/t153213;
            double t153215 = t153214*t153185*(1.0/2.0);
            double t153216 = t153215+1.0;
            double t153217 = log(t153216);
            double t153218 = a1p*c*t153204;
            double t153219 = t153218+1.0;
            double t153220 = c0p*t153217*t153219*2.0;
            double t153221 = rho_a[index]+rho_b[index];
            double t153222 = 1.0/pow(t153221,1.0/3.0);
            double t153223 = c*t153222;
            double t153224 = sqrt(t153223);
            double t153225 = pow(t153223,3.0/2.0);
            double t153226 = 1.0/pow(t153221,2.0/3.0);
            double t153227 = b1p*t153224;
            double t153228 = b3p*t153225;
            double t153229 = b4p*t153226*t153183;
            double t153230 = b2p*c*t153222;
            double t153231 = t153230+t153227+t153228+t153229;
            double t153232 = 1.0/t153231;
            double t153233 = t153232*t153185*(1.0/2.0);
            double t153234 = t153233+1.0;
            double t153235 = log(t153234);
            double t153236 = a1p*c*t153222;
            double t153237 = t153236+1.0;
            double t153238 = c0p*t153235*t153237*2.0;
            double t153239 = rho_a[index]-rho_b[index];
            double t153240 = t153239*t153239;
            double t153241 = 1.0/t153221;
            double t153242 = t153241*t153239;
            double t153243 = 1.0/(t153221*t153221*t153221*t153221);
            double t153244 = t153240*t153240;
            double t153245 = t153242+1.0;
            double t153246 = pow(t153245,4.0/3.0);
            double t153247 = -t153242+1.0;
            double t153248 = pow(t153247,4.0/3.0);
            double t153249 = t153246+t153248-2.0;
            double t153252 = 1.0/pow(rho_a[index],8.0/3.0);
            double t153253 = gamma_aa[index]*t153252*(1.0/2.0);
            double t153254 = 1.0/pow(rho_b[index],8.0/3.0);
            double t153255 = gamma_bb[index]*t153254*(1.0/2.0);
            double t153250 = t153253+t153255;
            double t153251 = gcab*gcab;
            double t153256 = t153250*t153250;
            double t153257 = t153251*t153251;
            double t153258 = t153256*t153256;
            double t153259 = c0p*t153194*t153196*2.0;
            double t153260 = b1f*t153181;
            double t153261 = b3f*t153182;
            double t153262 = b4f*t153183*t153184;
            double t153263 = b2f*c*t153179;
            double t153264 = t153260+t153261+t153262+t153263;
            double t153265 = 1.0/t153264;
            double t153266 = t153203*t153265*(1.0/2.0);
            double t153267 = t153266+1.0;
            double t153268 = log(t153267);
            double t153269 = a1f*c*t153179;
            double t153270 = t153269+1.0;
            double t153271 = t153259-c0f*t153270*t153268*2.0;
            double t153272 = t153259-t153202*t153271*t153199;
            double t153273 = gamma_aa[index]*gamma_aa[index];
            double t153274 = gcaa*gcaa;
            double t153275 = t153273*t153273;
            double t153276 = t153274*t153274;
            double t153277 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t153278 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t153279 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t153280 = b1f*t153206;
            double t153281 = b3f*t153207;
            double t153282 = b4f*t153208*t153183;
            double t153283 = b2f*c*t153204;
            double t153284 = t153280+t153281+t153282+t153283;
            double t153285 = 1.0/t153284;
            double t153286 = t153203*t153285*(1.0/2.0);
            double t153287 = t153286+1.0;
            double t153288 = log(t153287);
            double t153289 = a1f*c*t153204;
            double t153290 = t153289+1.0;
            double t153291 = t153220-c0f*t153290*t153288*2.0;
            double t153292 = t153220-t153202*t153291*t153199;
            double t153293 = gamma_bb[index]*gamma_bb[index];
            double t153294 = t153293*t153293;
            double t153295 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t153296 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t153297 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t153298 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t153299 = 1.0/pow(t153298,1.0/3.0);
            double t153300 = 1.0/(omega*omega);
            double t153301 = pow(t153298,2.0/3.0);
            double t153302 = exp(-t153300*t153301);
            double t153303 = gx*gx;
            double t153304 = t153303*t153303;
            double t153305 = 1.0/omega;
            double t153306 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t153307 = 1.0/pow(t153306,1.0/3.0);
            double t153308 = omega*omega;
            double t153309 = pow(t153306,2.0/3.0);
            double t153310 = exp(-t153300*t153309);
            functional_[index] = (rho_a[index]*t153272+rho_b[index]*t153292-t153221*(t153238-t153202*t153243* \
               t153244*t153249*(t153238-c0f*log((t153203*(1.0/2.0))/(b1f*t153224+b3f*t153225+b2f*c*t153222+b4f*t153226* \
               t153183)+1.0)*(a1f*c*t153222+1.0)*2.0)+(Aa*t153202*t153249*log((1.0/2.0)/(Aa*(b1a*t153224+b3a*t153225+ \
               b2a*c*t153222+b4a*t153226*t153183))+1.0)*(t153243*t153244-1.0)*(a1a*c*t153222+1.0)*2.0)/d2fz0))*(ccab0+ \
               (ccab4*t153257*t153258)/(gcab*t153250*4.0+t153251*t153256*6.0+t153257*t153258+gcab*t153250*t153251* \
               t153256*4.0+1.0)+(ccab1*gcab*t153250)/(gcab*t153250+1.0)+(ccab2*t153251*t153256)/(gcab*t153250*2.0+ \
               t153251*t153256+1.0)+(ccab3*gcab*t153250*t153251*t153256)/(gcab*t153250*3.0+t153251*t153256*3.0+gcab* \
               t153250*t153251*t153256+1.0))-rho_a[index]*t153272*(ccaa0+(ccaa2*t153273*t153274*t153279)/(gamma_aa[index]* \
               gcaa*t153252*2.0+t153273*t153274*t153279+1.0)+(ccaa1*gamma_aa[index]*gcaa*t153252)/(gamma_aa[index]* \
               gcaa*t153252+1.0)+(ccaa4*t153275*t153276*t153277)/(gamma_aa[index]*gcaa*t153252*4.0+t153273*t153274* \
               t153279*6.0+t153275*t153276*t153277+gamma_aa[index]*gcaa*t153273*t153274*t153278*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t153273*t153274*t153278)/(gamma_aa[index]*gcaa*t153252*3.0+t153273*t153274*t153279*3.0+gamma_aa[index]* \
               gcaa*t153273*t153274*t153278+1.0))-rho_b[index]*t153292*(ccaa0+(ccaa2*t153274*t153293*t153297)/(gamma_bb[index]* \
               gcaa*t153254*2.0+t153274*t153293*t153297+1.0)+(ccaa1*gamma_bb[index]*gcaa*t153254)/(gamma_bb[index]* \
               gcaa*t153254+1.0)+(ccaa4*t153276*t153294*t153295)/(gamma_bb[index]*gcaa*t153254*4.0+t153274*t153293* \
               t153297*6.0+t153276*t153294*t153295+gamma_bb[index]*gcaa*t153274*t153293*t153296*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t153274*t153293*t153296)/(gamma_bb[index]*gcaa*t153254*3.0+t153274*t153293*t153297*3.0+gamma_bb[index]* \
               gcaa*t153274*t153293*t153296+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t153299*(erf(t153305*pow(t153298,1.0/ \
               3.0))*(3.991211251234741E15/2.251799813685248E15)-omega*t153299*(-t153302+t153308*1.0/pow(t153298,2.0/ \
               3.0)*(t153302-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t153303*t153273*t153279)/(gamma_aa[index]* \
               gx*t153252*2.0+t153303*t153273*t153279+1.0)+(cx1*gamma_aa[index]*gx*t153252)/(gamma_aa[index]*gx*t153252+ \
               1.0)+(cx4*t153304*t153275*t153277)/(gamma_aa[index]*gx*t153252*4.0+t153303*t153273*t153279*6.0+t153304* \
               t153275*t153277+gamma_aa[index]*gx*t153303*t153273*t153278*4.0+1.0)+(cx3*gamma_aa[index]*gx*t153303* \
               t153273*t153278)/(gamma_aa[index]*gx*t153252*3.0+t153303*t153273*t153279*3.0+gamma_aa[index]*gx*t153303* \
               t153273*t153278+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t153307*(erf(t153305*pow(t153306,1.0/3.0) \
               )*(3.991211251234741E15/2.251799813685248E15)-omega*t153307*(-t153310+1.0/pow(t153306,2.0/3.0)*t153308* \
               (t153310-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t153303*t153293*t153297)/(gamma_bb[index]* \
               gx*t153254*2.0+t153303*t153293*t153297+1.0)+(cx1*gamma_bb[index]*gx*t153254)/(gamma_bb[index]*gx*t153254+ \
               1.0)+(cx4*t153304*t153294*t153295)/(gamma_bb[index]*gx*t153254*4.0+t153303*t153293*t153297*6.0+t153304* \
               t153294*t153295+gamma_bb[index]*gx*t153303*t153293*t153296*4.0+1.0)+(cx3*gamma_bb[index]*gx*t153303* \
               t153293*t153296)/(gamma_bb[index]*gx*t153254*3.0+t153303*t153293*t153297*3.0+gamma_bb[index]*gx*t153303* \
               t153293*t153296+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t157679 = 1.0/pow(rho_a[index],1.0/3.0);
            double t157680 = c*t157679;
            double t157681 = sqrt(t157680);
            double t157682 = pow(t157680,3.0/2.0);
            double t157683 = c*c;
            double t157684 = 1.0/pow(rho_a[index],2.0/3.0);
            double t157685 = 1.0/c0p;
            double t157686 = b1p*t157681;
            double t157687 = b3p*t157682;
            double t157688 = b4p*t157683*t157684;
            double t157689 = b2p*c*t157679;
            double t157690 = t157686+t157687+t157688+t157689;
            double t157691 = 1.0/t157690;
            double t157692 = t157691*t157685*(1.0/2.0);
            double t157693 = t157692+1.0;
            double t157694 = log(t157693);
            double t157695 = a1p*c*t157679;
            double t157696 = t157695+1.0;
            double t157697 = gamma_aa[index]*gamma_aa[index];
            double t157698 = gcaa*gcaa;
            double t157699 = t157697*t157697;
            double t157700 = t157698*t157698;
            double t157701 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t157702 = 1.0/pow(rho_a[index],8.0/3.0);
            double t157703 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t157704 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t157705 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t157706 = 1.0/pow(t157705,1.0/3.0);
            double t157707 = 1.0/(omega*omega);
            double t157708 = pow(t157705,2.0/3.0);
            double t157709 = exp(-t157707*t157708);
            double t157710 = gx*gx;
            double t157711 = t157710*t157710;
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t157681+ \
               b3f*t157682+b2f*c*t157679+b4f*t157683*t157684))+1.0)*(a1f*c*t157679+1.0)*2.0-c0p*t157694*t157696*2.0) \
               )/(two_13*2.0-2.0)+c0p*t157694*t157696*2.0)*(ccaa0+(ccaa2*t157704*t157697*t157698)/(gamma_aa[index]* \
               gcaa*t157702*2.0+t157704*t157697*t157698+1.0)+(ccaa1*gamma_aa[index]*gcaa*t157702)/(gamma_aa[index]* \
               gcaa*t157702+1.0)+(ccaa4*t157700*t157701*t157699)/(gamma_aa[index]*gcaa*t157702*4.0+t157700*t157701* \
               t157699+t157704*t157697*t157698*6.0+gamma_aa[index]*gcaa*t157703*t157697*t157698*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t157703*t157697*t157698)/(gamma_aa[index]*gcaa*t157702*3.0+t157704*t157697*t157698*3.0+gamma_aa[index]* \
               gcaa*t157703*t157697*t157698+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t157706*(erf(pow(t157705,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t157706*(-t157709+(omega*omega)*1.0/ \
               pow(t157705,2.0/3.0)*(t157709-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t157710*t157704*t157697) \
               /(gamma_aa[index]*gx*t157702*2.0+t157710*t157704*t157697+1.0)+(cx1*gamma_aa[index]*gx*t157702)/(gamma_aa[index]* \
               gx*t157702+1.0)+(cx4*t157701*t157711*t157699)/(gamma_aa[index]*gx*t157702*4.0+t157701*t157711*t157699+ \
               t157710*t157704*t157697*6.0+gamma_aa[index]*gx*t157710*t157703*t157697*4.0+1.0)+(cx3*gamma_aa[index]* \
               gx*t157710*t157703*t157697)/(gamma_aa[index]*gx*t157702*3.0+t157710*t157704*t157697*3.0+gamma_aa[index]* \
               gx*t157710*t157703*t157697+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t156924 = 1.0/pow(rho_b[index],1.0/3.0);
            double t156925 = c*t156924;
            double t156926 = sqrt(t156925);
            double t156927 = pow(t156925,3.0/2.0);
            double t156928 = c*c;
            double t156929 = 1.0/pow(rho_b[index],2.0/3.0);
            double t156930 = 1.0/c0p;
            double t156931 = b1p*t156926;
            double t156932 = b3p*t156927;
            double t156933 = b4p*t156928*t156929;
            double t156934 = b2p*c*t156924;
            double t156935 = t156931+t156932+t156933+t156934;
            double t156936 = 1.0/t156935;
            double t156937 = t156930*t156936*(1.0/2.0);
            double t156938 = t156937+1.0;
            double t156939 = log(t156938);
            double t156940 = a1p*c*t156924;
            double t156941 = t156940+1.0;
            double t156942 = gamma_bb[index]*gamma_bb[index];
            double t156943 = gcaa*gcaa;
            double t156944 = t156942*t156942;
            double t156945 = t156943*t156943;
            double t156946 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t156947 = 1.0/pow(rho_b[index],8.0/3.0);
            double t156948 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t156949 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t156950 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t156951 = 1.0/pow(t156950,1.0/3.0);
            double t156952 = 1.0/(omega*omega);
            double t156953 = pow(t156950,2.0/3.0);
            double t156954 = exp(-t156952*t156953);
            double t156955 = gx*gx;
            double t156956 = t156955*t156955;
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t156926+ \
               b3f*t156927+b2f*c*t156924+b4f*t156928*t156929))+1.0)*(a1f*c*t156924+1.0)*2.0-c0p*t156941*t156939*2.0) \
               )/(two_13*2.0-2.0)+c0p*t156941*t156939*2.0)*(ccaa0+(ccaa2*t156942*t156943*t156949)/(gamma_bb[index]* \
               gcaa*t156947*2.0+t156942*t156943*t156949+1.0)+(ccaa1*gamma_bb[index]*gcaa*t156947)/(gamma_bb[index]* \
               gcaa*t156947+1.0)+(ccaa4*t156944*t156945*t156946)/(gamma_bb[index]*gcaa*t156947*4.0+t156942*t156943* \
               t156949*6.0+t156944*t156945*t156946+gamma_bb[index]*gcaa*t156942*t156943*t156948*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t156942*t156943*t156948)/(gamma_bb[index]*gcaa*t156947*3.0+t156942*t156943*t156949*3.0+gamma_bb[index]* \
               gcaa*t156942*t156943*t156948+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t156951*(erf(pow(t156950,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t156951*(-t156954+(omega*omega)*1.0/ \
               pow(t156950,2.0/3.0)*(t156954-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t156942*t156955*t156949) \
               /(gamma_bb[index]*gx*t156947*2.0+t156942*t156955*t156949+1.0)+(cx1*gamma_bb[index]*gx*t156947)/(gamma_bb[index]* \
               gx*t156947+1.0)+(cx4*t156944*t156946*t156956)/(gamma_bb[index]*gx*t156947*4.0+t156942*t156955*t156949* \
               6.0+t156944*t156946*t156956+gamma_bb[index]*gx*t156942*t156955*t156948*4.0+1.0)+(cx3*gamma_bb[index]* \
               gx*t156942*t156955*t156948)/(gamma_bb[index]*gx*t156947*3.0+t156942*t156955*t156949*3.0+gamma_bb[index]* \
               gx*t156942*t156955*t156948+1.0));
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t153312 = 1.0/pow(rho_a[index],1.0/3.0);
            double t153313 = c*t153312;
            double t153314 = sqrt(t153313);
            double t153315 = pow(t153313,3.0/2.0);
            double t153316 = c*c;
            double t153317 = 1.0/pow(rho_a[index],2.0/3.0);
            double t153318 = 1.0/c0p;
            double t153319 = b1p*t153314;
            double t153320 = b3p*t153315;
            double t153321 = b4p*t153316*t153317;
            double t153322 = b2p*c*t153312;
            double t153323 = t153320+t153321+t153322+t153319;
            double t153324 = 1.0/t153323;
            double t153325 = t153324*t153318*(1.0/2.0);
            double t153326 = t153325+1.0;
            double t153327 = log(t153326);
            double t153328 = a1p*c*t153312;
            double t153329 = t153328+1.0;
            double t153330 = gamma_aa[index]*gamma_aa[index];
            double t153331 = gcaa*gcaa;
            double t153332 = t153330*t153330;
            double t153333 = t153331*t153331;
            double t153334 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t153335 = 1.0/pow(rho_a[index],8.0/3.0);
            double t153336 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t153337 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t153338 = pow(2.0,1.0/3.0);
            double t153339 = t153338*2.0;
            double t153340 = t153339-2.0;
            double t153341 = two_13*2.0;
            double t153342 = t153341-2.0;
            double t153343 = 1.0/t153342;
            double t153344 = 1.0/c0f;
            double t153345 = b1f*t153314;
            double t153346 = b3f*t153315;
            double t153347 = b4f*t153316*t153317;
            double t153348 = b2f*c*t153312;
            double t153349 = t153345+t153346+t153347+t153348;
            double t153350 = 1.0/t153349;
            double t153351 = t153350*t153344*(1.0/2.0);
            double t153352 = t153351+1.0;
            double t153353 = log(t153352);
            double t153354 = a1f*c*t153312;
            double t153355 = t153354+1.0;
            double t153356 = c0f*t153353*t153355*2.0;
            double t153357 = c0p*t153327*t153329*2.0;
            double t153358 = 1.0/pow(rho_b[index],1.0/3.0);
            double t153359 = c*t153358;
            double t153360 = sqrt(t153359);
            double t153361 = pow(t153359,3.0/2.0);
            double t153362 = 1.0/pow(rho_b[index],2.0/3.0);
            double t153363 = b1p*t153360;
            double t153364 = b3p*t153361;
            double t153365 = b4p*t153316*t153362;
            double t153366 = b2p*c*t153358;
            double t153367 = t153363+t153364+t153365+t153366;
            double t153368 = 1.0/t153367;
            double t153369 = t153318*t153368*(1.0/2.0);
            double t153370 = t153369+1.0;
            double t153371 = log(t153370);
            double t153372 = a1p*c*t153358;
            double t153373 = t153372+1.0;
            double t153374 = c0p*t153371*t153373*2.0;
            double t153375 = rho_a[index]+rho_b[index];
            double t153376 = 1.0/pow(t153375,1.0/3.0);
            double t153377 = c*t153376;
            double t153378 = sqrt(t153377);
            double t153379 = pow(t153377,3.0/2.0);
            double t153380 = 1.0/pow(t153375,2.0/3.0);
            double t153381 = b1p*t153378;
            double t153382 = b3p*t153379;
            double t153383 = b4p*t153316*t153380;
            double t153384 = b2p*c*t153376;
            double t153385 = t153381+t153382+t153383+t153384;
            double t153386 = 1.0/t153385;
            double t153387 = t153318*t153386*(1.0/2.0);
            double t153388 = t153387+1.0;
            double t153389 = log(t153388);
            double t153390 = a1p*c*t153376;
            double t153391 = t153390+1.0;
            double t153392 = c0p*t153391*t153389*2.0;
            double t153393 = rho_a[index]-rho_b[index];
            double t153394 = t153393*t153393;
            double t153395 = 1.0/t153375;
            double t153396 = t153393*t153395;
            double t153397 = 1.0/(t153375*t153375*t153375*t153375);
            double t153398 = t153394*t153394;
            double t153399 = t153396+1.0;
            double t153400 = pow(t153399,4.0/3.0);
            double t153401 = -t153396+1.0;
            double t153402 = pow(t153401,4.0/3.0);
            double t153403 = t153400+t153402-2.0;
            double t153404 = gcab*gcab;
            double t153408 = gamma_aa[index]*t153335*(1.0/2.0);
            double t153409 = 1.0/pow(rho_b[index],8.0/3.0);
            double t153410 = gamma_bb[index]*t153409*(1.0/2.0);
            double t153405 = t153410+t153408;
            double t153406 = t153405*t153405;
            double t153407 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t153411 = t153404*t153404;
            double t153412 = t153406*t153406;
            double t153413 = t153404*t153406*6.0;
            double t153414 = gcab*t153404*t153405*t153406*4.0;
            double t153415 = t153411*t153412;
            double t153416 = gcab*t153405*4.0;
            double t153417 = t153413+t153414+t153415+t153416+1.0;
            double t153418 = gcab*t153405;
            double t153419 = t153418+1.0;
            double t153420 = t153404*t153406;
            double t153421 = gcab*t153405*2.0;
            double t153422 = t153420+t153421+1.0;
            double t153423 = t153404*t153406*3.0;
            double t153424 = gcab*t153404*t153405*t153406;
            double t153425 = gcab*t153405*3.0;
            double t153426 = t153423+t153424+t153425+1.0;
            double t153427 = 1.0/t153422;
            double t153428 = 1.0/t153426;
            double t153429 = 1.0/t153419;
            double t153430 = 1.0/t153417;
            double t153431 = 1.0/pow(t153375,4.0/3.0);
            double t153432 = b1f*t153378;
            double t153433 = b3f*t153379;
            double t153434 = b4f*t153316*t153380;
            double t153435 = b2f*c*t153376;
            double t153436 = t153432+t153433+t153434+t153435;
            double t153437 = 1.0/t153436;
            double t153438 = t153344*t153437*(1.0/2.0);
            double t153439 = t153438+1.0;
            double t153440 = log(t153439);
            double t153441 = a1f*c*t153376;
            double t153442 = t153441+1.0;
            double t153444 = c0f*t153440*t153442*2.0;
            double t153443 = -t153444+t153392;
            double t153445 = 1.0/(t153375*t153375);
            double t153473 = t153445*t153393;
            double t153446 = -t153473+t153395;
            double t153447 = t153444-t153392;
            double t153448 = 1.0/pow(t153375,5.0/3.0);
            double t153449 = 1.0/sqrt(t153377);
            double t153450 = 1.0/t153388;
            double t153451 = 1.0/(t153385*t153385);
            double t153452 = b4p*t153316*t153448*(2.0/3.0);
            double t153453 = b2p*c*t153431*(1.0/3.0);
            double t153454 = b1p*c*t153431*t153449*(1.0/6.0);
            double t153455 = b3p*c*t153431*t153378*(1.0/2.0);
            double t153456 = t153452+t153453+t153454+t153455;
            double t153457 = t153450*t153451*t153391*t153456;
            double t153458 = 1.0/d2fz0;
            double t153459 = 1.0/Aa;
            double t153460 = b1a*t153378;
            double t153461 = b3a*t153379;
            double t153462 = b4a*t153316*t153380;
            double t153463 = b2a*c*t153376;
            double t153464 = t153460+t153461+t153462+t153463;
            double t153465 = 1.0/t153464;
            double t153466 = t153465*t153459*(1.0/2.0);
            double t153467 = t153466+1.0;
            double t153468 = log(t153467);
            double t153469 = a1a*c*t153376;
            double t153470 = t153469+1.0;
            double t153471 = 1.0/(t153375*t153375*t153375*t153375*t153375);
            double t153472 = pow(t153399,1.0/3.0);
            double t153474 = t153472*t153446*(4.0/3.0);
            double t153475 = pow(t153401,1.0/3.0);
            double t153476 = t153474-t153446*t153475*(4.0/3.0);
            double t153477 = t153397*t153398;
            double t153478 = t153477-1.0;
            double t153479 = 1.0/pow(rho_a[index],4.0/3.0);
            double t153480 = 1.0/pow(rho_a[index],5.0/3.0);
            double t153481 = 1.0/sqrt(t153313);
            double t153482 = 1.0/t153326;
            double t153483 = 1.0/(t153323*t153323);
            double t153484 = b4p*t153316*t153480*(2.0/3.0);
            double t153485 = b2p*c*t153479*(1.0/3.0);
            double t153486 = b1p*c*t153481*t153479*(1.0/6.0);
            double t153487 = b3p*c*t153314*t153479*(1.0/2.0);
            double t153488 = t153484+t153485+t153486+t153487;
            double t153489 = t153329*t153482*t153483*t153488;
            double t153490 = t153356-t153357;
            double t153491 = t153340*t153343*t153490;
            double t153492 = Aa*t153403*t153343*t153470*t153458*t153468*t153478*2.0;
            double t153493 = t153491+t153357;
            double t153494 = gamma_aa[index]*gcaa*t153335*4.0;
            double t153495 = gamma_aa[index]*gcaa*t153330*t153331*t153336*4.0;
            double t153496 = t153330*t153331*t153337*6.0;
            double t153497 = t153332*t153333*t153334;
            double t153498 = t153494+t153495+t153496+t153497+1.0;
            double t153499 = 1.0/t153498;
            double t153500 = gamma_aa[index]*gcaa*t153335;
            double t153501 = t153500+1.0;
            double t153502 = 1.0/t153501;
            double t153503 = gamma_aa[index]*gcaa*t153335*3.0;
            double t153504 = gamma_aa[index]*gcaa*t153330*t153331*t153336;
            double t153505 = t153330*t153331*t153337*3.0;
            double t153506 = t153503+t153504+t153505+1.0;
            double t153507 = 1.0/t153506;
            double t153508 = gamma_aa[index]*gcaa*t153335*2.0;
            double t153509 = t153330*t153331*t153337;
            double t153510 = t153508+t153509+1.0;
            double t153511 = 1.0/t153510;
            double t153512 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t153513 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t153514 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t153515 = 1.0/t153352;
            double t153516 = 1.0/(t153349*t153349);
            double t153517 = b4f*t153316*t153480*(2.0/3.0);
            double t153518 = b2f*c*t153479*(1.0/3.0);
            double t153519 = b1f*c*t153481*t153479*(1.0/6.0);
            double t153520 = b3f*c*t153314*t153479*(1.0/2.0);
            double t153521 = t153520+t153517+t153518+t153519;
            double t153522 = a1f*c*c0f*t153353*t153479*(2.0/3.0);
            double t153523 = a1p*c*c0p*t153327*t153479*(2.0/3.0);
            double t153524 = ccaa4*t153332*t153333*t153334*t153499;
            double t153525 = ccaa1*gamma_aa[index]*gcaa*t153502*t153335;
            double t153526 = ccaa3*gamma_aa[index]*gcaa*t153330*t153331*t153336*t153507;
            double t153527 = ccaa2*t153330*t153331*t153511*t153337;
            double t153528 = ccaa0+t153524+t153525+t153526+t153527;
            double t153529 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t153530 = 1.0/(omega*omega);
            double t153531 = pow(t153529,2.0/3.0);
            double t153534 = t153530*t153531;
            double t153532 = exp(-t153534);
            double t153533 = 1.0/pow(t153529,1.0/3.0);
            double t153535 = omega*omega;
            double t153536 = t153532-1.0;
            double t153537 = 1.0/pow(t153529,2.0/3.0);
            double t153538 = 1.0/pow(t153529,4.0/3.0);
            double t153539 = 1.0/omega;
            double t153540 = t153535*t153536*t153537*(1.0/2.0);
            double t153541 = t153540-t153532+3.0/2.0;
            double t153542 = gx*gx;
            double t153543 = t153542*t153542;
            double t153544 = pow(rho_a[index],4.0/3.0);
            double t153545 = pow(t153529,1.0/3.0);
            double t153546 = t153545*t153539;
            double t153547 = erf(t153546);
            double t153548 = t153547*(3.991211251234741E15/2.251799813685248E15);
            double t153568 = omega*t153541*t153533;
            double t153549 = t153548-t153568;
            double t153550 = gamma_aa[index]*gx*t153335*4.0;
            double t153551 = gamma_aa[index]*gx*t153330*t153542*t153336*4.0;
            double t153552 = t153330*t153542*t153337*6.0;
            double t153553 = t153332*t153334*t153543;
            double t153554 = t153550+t153551+t153552+t153553+1.0;
            double t153555 = 1.0/t153554;
            double t153556 = gamma_aa[index]*gx*t153335;
            double t153557 = t153556+1.0;
            double t153558 = 1.0/t153557;
            double t153559 = gamma_aa[index]*gx*t153335*3.0;
            double t153560 = gamma_aa[index]*gx*t153330*t153542*t153336;
            double t153561 = t153330*t153542*t153337*3.0;
            double t153562 = t153560+t153561+t153559+1.0;
            double t153563 = 1.0/t153562;
            double t153564 = gamma_aa[index]*gx*t153335*2.0;
            double t153565 = t153330*t153542*t153337;
            double t153566 = t153564+t153565+1.0;
            double t153567 = 1.0/t153566;
            double t153569 = omega*t153533*t153549*(4.0/3.0);
            double t153570 = t153569-1.0;
            double t153571 = cx4*t153332*t153334*t153543*t153555;
            double t153572 = cx1*gamma_aa[index]*gx*t153335*t153558;
            double t153573 = cx3*gamma_aa[index]*gx*t153330*t153542*t153336*t153563;
            double t153574 = cx2*t153330*t153542*t153337*t153567;
            double t153575 = cx0+t153571+t153572+t153573+t153574;
            v_rho_a_[index] = -(ccab0+ccab1*gcab*t153405*t153429+ccab4*t153411*t153412*t153430+ccab2*t153404* \
               t153406*t153427+ccab3*gcab*t153404*t153405*t153406*t153428)*(t153392-t153491-t153357+t153492+rho_a[index]* \
               (t153523-t153489+t153340*t153343*(t153522+t153489-t153521*t153515*t153516*t153355-a1p*c*c0p*t153327* \
               t153479*(2.0/3.0)))-t153375*(-t153457+t153403*t153343*t153397*t153398*(t153457-(t153442*1.0/(t153436* \
               t153436)*(b2f*c*t153431*(1.0/3.0)+b4f*t153316*t153448*(2.0/3.0)+b1f*c*t153431*t153449*(1.0/6.0)+b3f* \
               c*t153431*t153378*(1.0/2.0)))/t153439+a1f*c*c0f*t153431*t153440*(2.0/3.0)-a1p*c*c0p*t153431*t153389* \
               (2.0/3.0))+a1p*c*c0p*t153431*t153389*(2.0/3.0)+t153403*t153343*t153471*t153447*t153398*4.0-t153343* \
               t153447*t153476*t153397*t153398+t153403*t153343*t153443*t153393*t153394*t153397*4.0+Aa*t153403*t153343* \
               t153470*t153458*t153468*(t153471*t153398*4.0-t153393*t153394*t153397*4.0)*2.0-Aa*t153343*t153470*t153458* \
               t153476*t153468*t153478*2.0-(t153403*t153343*t153470*1.0/(t153464*t153464)*t153458*t153478*(b2a*c* \
               t153431*(1.0/3.0)+b4a*t153316*t153448*(2.0/3.0)+b1a*c*t153431*t153449*(1.0/6.0)+b3a*c*t153431*t153378* \
               (1.0/2.0)))/t153467+Aa*a1a*c*t153403*t153431*t153343*t153458*t153468*t153478*(2.0/3.0))+t153403*t153343* \
               t153447*t153397*t153398)-t153528*(t153357+t153340*t153343*(t153356-c0p*t153327*t153329*2.0))-(rho_a[index]* \
               t153493+rho_b[index]*(t153374-t153340*t153343*(t153374-c0f*log((t153344*(1.0/2.0))/(b1f*t153360+b3f* \
               t153361+b2f*c*t153358+b4f*t153316*t153362)+1.0)*(a1f*c*t153358+1.0)*2.0))-t153375*(t153392+t153492- \
               t153403*t153343*t153443*t153397*t153398))*(ccab1*gamma_aa[index]*gcab*t153407*t153429*(4.0/3.0)-ccab2* \
               t153404*1.0/(t153422*t153422)*t153406*(gamma_aa[index]*gcab*t153407*(8.0/3.0)+gamma_aa[index]*t153404* \
               t153405*t153407*(8.0/3.0))-ccab4*t153411*t153412*1.0/(t153417*t153417)*(gamma_aa[index]*gcab*t153407* \
               (1.6E1/3.0)+gamma_aa[index]*t153404*t153405*t153407*1.6E1+gamma_aa[index]*gcab*t153404*t153406*t153407* \
               1.6E1+gamma_aa[index]*t153411*t153405*t153406*t153407*(1.6E1/3.0))-ccab1*gamma_aa[index]*t153404*t153405* \
               t153407*1.0/(t153419*t153419)*(4.0/3.0)+ccab2*gamma_aa[index]*t153404*t153405*t153407*t153427*(8.0/ \
               3.0)-ccab3*gcab*t153404*t153405*t153406*1.0/(t153426*t153426)*(gamma_aa[index]*gcab*t153407*4.0+gamma_aa[index]* \
               t153404*t153405*t153407*8.0+gamma_aa[index]*gcab*t153404*t153406*t153407*4.0)+ccab3*gamma_aa[index]* \
               gcab*t153404*t153406*t153407*t153428*4.0+ccab4*gamma_aa[index]*t153411*t153430*t153405*t153406*t153407* \
               (1.6E1/3.0))+rho_a[index]*t153493*(ccaa1*gamma_aa[index]*gcaa*t153502*t153407*(8.0/3.0)+ccaa2*t153330* \
               t153331*t153511*t153512*(1.6E1/3.0)+ccaa4*t153332*t153333*t153514*t153499*(3.2E1/3.0)-ccaa1*t153330* \
               1.0/(t153501*t153501)*t153331*t153512*(8.0/3.0)-ccaa2*t153330*1.0/(t153510*t153510)*t153331*t153337* \
               (gamma_aa[index]*gcaa*t153407*(1.6E1/3.0)+t153330*t153331*t153512*(1.6E1/3.0))-ccaa4*t153332*t153333* \
               t153334*1.0/(t153498*t153498)*(gamma_aa[index]*gcaa*t153407*(3.2E1/3.0)+t153330*t153331*t153512*3.2E1+ \
               t153332*t153333*t153514*(3.2E1/3.0)+gamma_aa[index]*gcaa*t153330*t153331*t153513*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t153330*t153331*t153513*t153507*8.0-ccaa3*gamma_aa[index]*gcaa*t153330*t153331*1.0/(t153506*t153506) \
               *t153336*(gamma_aa[index]*gcaa*t153407*8.0+t153330*t153331*t153512*1.6E1+gamma_aa[index]*gcaa*t153330* \
               t153331*t153513*8.0))+rho_a[index]*t153528*(t153523-t153489+t153340*t153343*(t153522-t153523+t153489- \
               t153521*t153515*t153516*t153355))-c0*t153544*t153575*(omega*t153533*(omega*t153541*t153538*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t153533*((t153532*(1.0/3.0))/rho_a[index]+t153535*t153536*1.0/pow(t153529,5.0/ \
               3.0)*(2.778046668940015E15/1.40737488355328E14)-t153530*t153532*t153533*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t153532*t153537*t153539*(1.108777112152858E31/1.584563250285287E29)) \
               *(4.0/3.0)-omega*t153538*t153549*(2.778046668940015E15/1.05553116266496E14))-c0*pow(rho_a[index],1.0/ \
               3.0)*t153570*t153575*(4.0/3.0)+c0*t153570*t153544*(cx1*gamma_aa[index]*gx*t153407*t153558*(8.0/3.0) \
               +cx2*t153330*t153512*t153542*t153567*(1.6E1/3.0)+cx4*t153332*t153514*t153543*t153555*(3.2E1/3.0)-cx1* \
               t153330*t153512*t153542*1.0/(t153557*t153557)*(8.0/3.0)-cx2*t153330*t153542*t153337*1.0/(t153566*t153566) \
               *(gamma_aa[index]*gx*t153407*(1.6E1/3.0)+t153330*t153512*t153542*(1.6E1/3.0))-cx4*t153332*t153334* \
               t153543*1.0/(t153554*t153554)*(gamma_aa[index]*gx*t153407*(3.2E1/3.0)+t153330*t153512*t153542*3.2E1+ \
               t153332*t153514*t153543*(3.2E1/3.0)+gamma_aa[index]*gx*t153330*t153513*t153542*3.2E1)+cx3*gamma_aa[index]* \
               gx*t153330*t153513*t153542*t153563*8.0-cx3*gamma_aa[index]*gx*t153330*t153542*t153336*1.0/(t153562* \
               t153562)*(gamma_aa[index]*gx*t153407*8.0+t153330*t153512*t153542*1.6E1+gamma_aa[index]*gx*t153330* \
               t153513*t153542*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t157713 = 1.0/pow(rho_a[index],1.0/3.0);
            double t157714 = c*t157713;
            double t157715 = sqrt(t157714);
            double t157716 = pow(t157714,3.0/2.0);
            double t157717 = c*c;
            double t157718 = 1.0/pow(rho_a[index],2.0/3.0);
            double t157719 = 1.0/c0p;
            double t157720 = b1p*t157715;
            double t157721 = b3p*t157716;
            double t157722 = b4p*t157717*t157718;
            double t157723 = b2p*c*t157713;
            double t157724 = t157720+t157721+t157722+t157723;
            double t157725 = 1.0/t157724;
            double t157726 = t157725*t157719*(1.0/2.0);
            double t157727 = t157726+1.0;
            double t157728 = log(t157727);
            double t157729 = a1p*c*t157713;
            double t157730 = t157729+1.0;
            double t157731 = gamma_aa[index]*gamma_aa[index];
            double t157732 = gcaa*gcaa;
            double t157733 = t157731*t157731;
            double t157734 = t157732*t157732;
            double t157735 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t157736 = 1.0/pow(rho_a[index],8.0/3.0);
            double t157737 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t157738 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t157739 = pow(2.0,1.0/3.0);
            double t157740 = t157739*2.0;
            double t157741 = t157740-2.0;
            double t157742 = two_13*2.0;
            double t157743 = t157742-2.0;
            double t157744 = 1.0/t157743;
            double t157745 = 1.0/c0f;
            double t157746 = b1f*t157715;
            double t157747 = b3f*t157716;
            double t157748 = b4f*t157717*t157718;
            double t157749 = b2f*c*t157713;
            double t157750 = t157746+t157747+t157748+t157749;
            double t157751 = 1.0/t157750;
            double t157752 = t157751*t157745*(1.0/2.0);
            double t157753 = t157752+1.0;
            double t157754 = log(t157753);
            double t157755 = a1f*c*t157713;
            double t157756 = t157755+1.0;
            double t157757 = c0f*t157754*t157756*2.0;
            double t157758 = c0p*t157730*t157728*2.0;
            double t157759 = gamma_aa[index]*gcaa*t157736*4.0;
            double t157760 = gamma_aa[index]*gcaa*t157731*t157732*t157737*4.0;
            double t157761 = t157731*t157732*t157738*6.0;
            double t157762 = t157733*t157734*t157735;
            double t157763 = t157760+t157761+t157762+t157759+1.0;
            double t157764 = 1.0/t157763;
            double t157765 = gamma_aa[index]*gcaa*t157736;
            double t157766 = t157765+1.0;
            double t157767 = 1.0/t157766;
            double t157768 = gamma_aa[index]*gcaa*t157736*3.0;
            double t157769 = gamma_aa[index]*gcaa*t157731*t157732*t157737;
            double t157770 = t157731*t157732*t157738*3.0;
            double t157771 = t157770+t157768+t157769+1.0;
            double t157772 = 1.0/t157771;
            double t157773 = gamma_aa[index]*gcaa*t157736*2.0;
            double t157774 = t157731*t157732*t157738;
            double t157775 = t157773+t157774+1.0;
            double t157776 = 1.0/t157775;
            double t157777 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t157778 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t157779 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t157780 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t157781 = 1.0/pow(rho_a[index],4.0/3.0);
            double t157782 = 1.0/pow(rho_a[index],5.0/3.0);
            double t157783 = 1.0/sqrt(t157714);
            double t157784 = 1.0/t157727;
            double t157785 = 1.0/(t157724*t157724);
            double t157786 = b4p*t157717*t157782*(2.0/3.0);
            double t157787 = b2p*c*t157781*(1.0/3.0);
            double t157788 = b1p*c*t157781*t157783*(1.0/6.0);
            double t157789 = b3p*c*t157715*t157781*(1.0/2.0);
            double t157790 = t157786+t157787+t157788+t157789;
            double t157791 = t157730*t157790*t157784*t157785;
            double t157792 = ccaa4*t157733*t157734*t157735*t157764;
            double t157793 = ccaa1*gamma_aa[index]*gcaa*t157736*t157767;
            double t157794 = ccaa3*gamma_aa[index]*gcaa*t157731*t157732*t157772*t157737;
            double t157795 = ccaa2*t157731*t157732*t157738*t157776;
            double t157796 = ccaa0+t157792+t157793+t157794+t157795;
            double t157797 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t157798 = 1.0/(omega*omega);
            double t157799 = pow(t157797,2.0/3.0);
            double t157802 = t157798*t157799;
            double t157800 = exp(-t157802);
            double t157801 = 1.0/pow(t157797,1.0/3.0);
            double t157803 = omega*omega;
            double t157804 = t157800-1.0;
            double t157805 = 1.0/pow(t157797,2.0/3.0);
            double t157806 = 1.0/pow(t157797,4.0/3.0);
            double t157807 = 1.0/omega;
            double t157808 = t157803*t157804*t157805*(1.0/2.0);
            double t157809 = -t157800+t157808+3.0/2.0;
            double t157810 = gx*gx;
            double t157811 = t157810*t157810;
            double t157812 = pow(rho_a[index],4.0/3.0);
            double t157813 = pow(t157797,1.0/3.0);
            double t157814 = t157813*t157807;
            double t157815 = erf(t157814);
            double t157816 = t157815*(3.991211251234741E15/2.251799813685248E15);
            double t157836 = omega*t157801*t157809;
            double t157817 = t157816-t157836;
            double t157818 = gamma_aa[index]*gx*t157736*4.0;
            double t157819 = gamma_aa[index]*gx*t157810*t157731*t157737*4.0;
            double t157820 = t157810*t157731*t157738*6.0;
            double t157821 = t157811*t157733*t157735;
            double t157822 = t157820+t157821+t157818+t157819+1.0;
            double t157823 = 1.0/t157822;
            double t157824 = gamma_aa[index]*gx*t157736;
            double t157825 = t157824+1.0;
            double t157826 = 1.0/t157825;
            double t157827 = gamma_aa[index]*gx*t157736*3.0;
            double t157828 = gamma_aa[index]*gx*t157810*t157731*t157737;
            double t157829 = t157810*t157731*t157738*3.0;
            double t157830 = t157827+t157828+t157829+1.0;
            double t157831 = 1.0/t157830;
            double t157832 = gamma_aa[index]*gx*t157736*2.0;
            double t157833 = t157810*t157731*t157738;
            double t157834 = t157832+t157833+1.0;
            double t157835 = 1.0/t157834;
            double t157837 = omega*t157801*t157817*(4.0/3.0);
            double t157838 = t157837-1.0;
            double t157839 = cx4*t157811*t157733*t157823*t157735;
            double t157840 = cx1*gamma_aa[index]*gx*t157736*t157826;
            double t157841 = cx3*gamma_aa[index]*gx*t157810*t157731*t157831*t157737;
            double t157842 = cx2*t157810*t157731*t157835*t157738;
            double t157843 = cx0+t157840+t157841+t157842+t157839;
            v_rho_a_[index] = -t157796*(t157758+t157741*t157744*(t157757-c0p*t157730*t157728*2.0))+rho_a[index]* \
               t157796*(-t157791+t157741*t157744*(t157791-(1.0/(t157750*t157750)*t157756*(b2f*c*t157781*(1.0/3.0) \
               +b4f*t157717*t157782*(2.0/3.0)+b1f*c*t157781*t157783*(1.0/6.0)+b3f*c*t157715*t157781*(1.0/2.0)))/t157753+ \
               a1f*c*c0f*t157754*t157781*(2.0/3.0)-a1p*c*c0p*t157781*t157728*(2.0/3.0))+a1p*c*c0p*t157781*t157728* \
               (2.0/3.0))+rho_a[index]*(t157758+t157741*t157744*(t157757-t157758))*(ccaa1*gamma_aa[index]*gcaa*t157767* \
               t157778*(8.0/3.0)+ccaa4*t157733*t157734*t157780*t157764*(3.2E1/3.0)+ccaa2*t157731*t157732*t157776* \
               t157777*(1.6E1/3.0)-ccaa1*t157731*t157732*1.0/(t157766*t157766)*t157777*(8.0/3.0)-ccaa2*t157731*t157732* \
               t157738*1.0/(t157775*t157775)*(gamma_aa[index]*gcaa*t157778*(1.6E1/3.0)+t157731*t157732*t157777*(1.6E1/ \
               3.0))-ccaa4*t157733*t157734*t157735*1.0/(t157763*t157763)*(gamma_aa[index]*gcaa*t157778*(3.2E1/3.0) \
               +t157733*t157734*t157780*(3.2E1/3.0)+t157731*t157732*t157777*3.2E1+gamma_aa[index]*gcaa*t157731*t157732* \
               t157779*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t157731*t157732*t157772*t157779*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t157731*t157732*1.0/(t157771*t157771)*t157737*(gamma_aa[index]*gcaa*t157778*8.0+t157731*t157732* \
               t157777*1.6E1+gamma_aa[index]*gcaa*t157731*t157732*t157779*8.0))-c0*t157812*t157843*(omega*t157801* \
               (omega*t157806*t157809*(2.778046668940015E15/1.40737488355328E14)+omega*t157801*((t157800*(1.0/3.0) \
               )/rho_a[index]+t157803*t157804*1.0/pow(t157797,5.0/3.0)*(2.778046668940015E15/1.40737488355328E14) \
               -t157800*t157801*t157798*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t157800* \
               t157805*t157807*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t157806*t157817*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_a[index],1.0/3.0)*t157843*t157838*(4.0/3.0)+c0*t157812*t157838*(cx1* \
               gamma_aa[index]*gx*t157826*t157778*(8.0/3.0)+cx2*t157810*t157731*t157835*t157777*(1.6E1/3.0)+cx4*t157811* \
               t157733*t157823*t157780*(3.2E1/3.0)-cx1*t157810*t157731*1.0/(t157825*t157825)*t157777*(8.0/3.0)-cx2* \
               t157810*t157731*1.0/(t157834*t157834)*t157738*(gamma_aa[index]*gx*t157778*(1.6E1/3.0)+t157810*t157731* \
               t157777*(1.6E1/3.0))-cx4*t157811*1.0/(t157822*t157822)*t157733*t157735*(gamma_aa[index]*gx*t157778* \
               (3.2E1/3.0)+t157811*t157733*t157780*(3.2E1/3.0)+t157810*t157731*t157777*3.2E1+gamma_aa[index]*gx*t157810* \
               t157731*t157779*3.2E1)+cx3*gamma_aa[index]*gx*t157810*t157731*t157831*t157779*8.0-cx3*gamma_aa[index]* \
               gx*t157810*t157731*1.0/(t157830*t157830)*t157737*(gamma_aa[index]*gx*t157778*8.0+t157810*t157731*t157777* \
               1.6E1+gamma_aa[index]*gx*t157810*t157731*t157779*8.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t153577 = 1.0/pow(rho_b[index],1.0/3.0);
            double t153578 = c*t153577;
            double t153579 = sqrt(t153578);
            double t153580 = pow(t153578,3.0/2.0);
            double t153581 = c*c;
            double t153582 = 1.0/pow(rho_b[index],2.0/3.0);
            double t153583 = 1.0/c0p;
            double t153584 = b1p*t153579;
            double t153585 = b3p*t153580;
            double t153586 = b4p*t153581*t153582;
            double t153587 = b2p*c*t153577;
            double t153588 = t153584+t153585+t153586+t153587;
            double t153589 = 1.0/t153588;
            double t153590 = t153583*t153589*(1.0/2.0);
            double t153591 = t153590+1.0;
            double t153592 = log(t153591);
            double t153593 = a1p*c*t153577;
            double t153594 = t153593+1.0;
            double t153595 = gamma_bb[index]*gamma_bb[index];
            double t153596 = gcaa*gcaa;
            double t153597 = t153595*t153595;
            double t153598 = t153596*t153596;
            double t153599 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t153600 = 1.0/pow(rho_b[index],8.0/3.0);
            double t153601 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t153602 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t153603 = pow(2.0,1.0/3.0);
            double t153604 = t153603*2.0;
            double t153605 = t153604-2.0;
            double t153606 = two_13*2.0;
            double t153607 = t153606-2.0;
            double t153608 = 1.0/t153607;
            double t153609 = 1.0/c0f;
            double t153610 = 1.0/pow(rho_a[index],1.0/3.0);
            double t153611 = c*t153610;
            double t153612 = sqrt(t153611);
            double t153613 = pow(t153611,3.0/2.0);
            double t153614 = 1.0/pow(rho_a[index],2.0/3.0);
            double t153615 = b1p*t153612;
            double t153616 = b3p*t153613;
            double t153617 = b4p*t153614*t153581;
            double t153618 = b2p*c*t153610;
            double t153619 = t153615+t153616+t153617+t153618;
            double t153620 = 1.0/t153619;
            double t153621 = t153620*t153583*(1.0/2.0);
            double t153622 = t153621+1.0;
            double t153623 = log(t153622);
            double t153624 = a1p*c*t153610;
            double t153625 = t153624+1.0;
            double t153626 = c0p*t153623*t153625*2.0;
            double t153627 = b1f*t153579;
            double t153628 = b3f*t153580;
            double t153629 = b4f*t153581*t153582;
            double t153630 = b2f*c*t153577;
            double t153631 = t153630+t153627+t153628+t153629;
            double t153632 = 1.0/t153631;
            double t153633 = t153632*t153609*(1.0/2.0);
            double t153634 = t153633+1.0;
            double t153635 = log(t153634);
            double t153636 = a1f*c*t153577;
            double t153637 = t153636+1.0;
            double t153638 = c0f*t153635*t153637*2.0;
            double t153639 = c0p*t153592*t153594*2.0;
            double t153640 = rho_a[index]+rho_b[index];
            double t153641 = 1.0/pow(t153640,1.0/3.0);
            double t153642 = c*t153641;
            double t153643 = sqrt(t153642);
            double t153644 = pow(t153642,3.0/2.0);
            double t153645 = 1.0/pow(t153640,2.0/3.0);
            double t153646 = b1p*t153643;
            double t153647 = b3p*t153644;
            double t153648 = b4p*t153581*t153645;
            double t153649 = b2p*c*t153641;
            double t153650 = t153646+t153647+t153648+t153649;
            double t153651 = 1.0/t153650;
            double t153652 = t153651*t153583*(1.0/2.0);
            double t153653 = t153652+1.0;
            double t153654 = log(t153653);
            double t153655 = a1p*c*t153641;
            double t153656 = t153655+1.0;
            double t153657 = c0p*t153654*t153656*2.0;
            double t153658 = rho_a[index]-rho_b[index];
            double t153659 = t153658*t153658;
            double t153660 = 1.0/t153640;
            double t153661 = t153660*t153658;
            double t153662 = 1.0/(t153640*t153640*t153640*t153640);
            double t153663 = t153659*t153659;
            double t153664 = t153661+1.0;
            double t153665 = pow(t153664,4.0/3.0);
            double t153666 = -t153661+1.0;
            double t153667 = pow(t153666,4.0/3.0);
            double t153668 = t153665+t153667-2.0;
            double t153669 = gcab*gcab;
            double t153673 = 1.0/pow(rho_a[index],8.0/3.0);
            double t153674 = gamma_aa[index]*t153673*(1.0/2.0);
            double t153675 = gamma_bb[index]*t153600*(1.0/2.0);
            double t153670 = t153674+t153675;
            double t153671 = t153670*t153670;
            double t153672 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t153676 = t153669*t153669;
            double t153677 = t153671*t153671;
            double t153678 = t153671*t153669*6.0;
            double t153679 = gcab*t153670*t153671*t153669*4.0;
            double t153680 = t153676*t153677;
            double t153681 = gcab*t153670*4.0;
            double t153682 = t153680+t153681+t153678+t153679+1.0;
            double t153683 = gcab*t153670;
            double t153684 = t153683+1.0;
            double t153685 = t153671*t153669;
            double t153686 = gcab*t153670*2.0;
            double t153687 = t153685+t153686+1.0;
            double t153688 = t153671*t153669*3.0;
            double t153689 = gcab*t153670*t153671*t153669;
            double t153690 = gcab*t153670*3.0;
            double t153691 = t153690+t153688+t153689+1.0;
            double t153692 = 1.0/t153687;
            double t153693 = 1.0/t153691;
            double t153694 = 1.0/t153684;
            double t153695 = 1.0/t153682;
            double t153696 = 1.0/pow(t153640,4.0/3.0);
            double t153697 = b1f*t153643;
            double t153698 = b3f*t153644;
            double t153699 = b4f*t153581*t153645;
            double t153700 = b2f*c*t153641;
            double t153701 = t153700+t153697+t153698+t153699;
            double t153702 = 1.0/t153701;
            double t153703 = t153702*t153609*(1.0/2.0);
            double t153704 = t153703+1.0;
            double t153705 = log(t153704);
            double t153706 = a1f*c*t153641;
            double t153707 = t153706+1.0;
            double t153709 = c0f*t153705*t153707*2.0;
            double t153708 = -t153709+t153657;
            double t153710 = 1.0/(t153640*t153640);
            double t153711 = t153710*t153658;
            double t153712 = t153711+t153660;
            double t153713 = t153709-t153657;
            double t153714 = 1.0/pow(t153640,5.0/3.0);
            double t153715 = 1.0/sqrt(t153642);
            double t153716 = 1.0/t153653;
            double t153717 = 1.0/(t153650*t153650);
            double t153718 = b4p*t153714*t153581*(2.0/3.0);
            double t153719 = b2p*c*t153696*(1.0/3.0);
            double t153720 = b1p*c*t153715*t153696*(1.0/6.0);
            double t153721 = b3p*c*t153643*t153696*(1.0/2.0);
            double t153722 = t153720+t153721+t153718+t153719;
            double t153723 = 1.0/d2fz0;
            double t153724 = 1.0/Aa;
            double t153725 = b1a*t153643;
            double t153726 = b3a*t153644;
            double t153727 = b4a*t153581*t153645;
            double t153728 = b2a*c*t153641;
            double t153729 = t153725+t153726+t153727+t153728;
            double t153730 = 1.0/t153729;
            double t153731 = t153730*t153724*(1.0/2.0);
            double t153732 = t153731+1.0;
            double t153733 = log(t153732);
            double t153734 = a1a*c*t153641;
            double t153735 = t153734+1.0;
            double t153736 = 1.0/(t153640*t153640*t153640*t153640*t153640);
            double t153737 = pow(t153664,1.0/3.0);
            double t153738 = t153712*t153737*(4.0/3.0);
            double t153739 = pow(t153666,1.0/3.0);
            double t153740 = t153738-t153712*t153739*(4.0/3.0);
            double t153741 = t153662*t153663;
            double t153742 = t153741-1.0;
            double t153743 = 1.0/pow(rho_b[index],4.0/3.0);
            double t153744 = 1.0/pow(rho_b[index],5.0/3.0);
            double t153745 = 1.0/sqrt(t153578);
            double t153746 = 1.0/t153591;
            double t153747 = 1.0/(t153588*t153588);
            double t153748 = b4p*t153581*t153744*(2.0/3.0);
            double t153749 = b2p*c*t153743*(1.0/3.0);
            double t153750 = b1p*c*t153743*t153745*(1.0/6.0);
            double t153751 = b3p*c*t153743*t153579*(1.0/2.0);
            double t153752 = t153750+t153751+t153748+t153749;
            double t153753 = t153752*t153746*t153594*t153747;
            double t153754 = t153638-t153639;
            double t153755 = t153605*t153608*t153754;
            double t153756 = Aa*t153723*t153733*t153742*t153608*t153735*t153668*2.0;
            double t153757 = a1p*c*c0p*t153654*t153696*(2.0/3.0);
            double t153758 = t153755+t153639;
            double t153759 = gamma_bb[index]*gcaa*t153600*4.0;
            double t153760 = gamma_bb[index]*gcaa*t153601*t153595*t153596*4.0;
            double t153761 = t153602*t153595*t153596*6.0;
            double t153762 = t153597*t153598*t153599;
            double t153763 = t153760+t153761+t153762+t153759+1.0;
            double t153764 = 1.0/t153763;
            double t153765 = gamma_bb[index]*gcaa*t153600;
            double t153766 = t153765+1.0;
            double t153767 = 1.0/t153766;
            double t153768 = gamma_bb[index]*gcaa*t153600*3.0;
            double t153769 = gamma_bb[index]*gcaa*t153601*t153595*t153596;
            double t153770 = t153602*t153595*t153596*3.0;
            double t153771 = t153770+t153768+t153769+1.0;
            double t153772 = 1.0/t153771;
            double t153773 = gamma_bb[index]*gcaa*t153600*2.0;
            double t153774 = t153602*t153595*t153596;
            double t153775 = t153773+t153774+1.0;
            double t153776 = 1.0/t153775;
            double t153777 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t153778 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t153779 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t153780 = 1.0/t153634;
            double t153781 = 1.0/(t153631*t153631);
            double t153782 = b4f*t153581*t153744*(2.0/3.0);
            double t153783 = b2f*c*t153743*(1.0/3.0);
            double t153784 = b1f*c*t153743*t153745*(1.0/6.0);
            double t153785 = b3f*c*t153743*t153579*(1.0/2.0);
            double t153786 = t153782+t153783+t153784+t153785;
            double t153787 = a1f*c*c0f*t153635*t153743*(2.0/3.0);
            double t153788 = a1p*c*c0p*t153743*t153592*(2.0/3.0);
            double t153789 = ccaa4*t153764*t153597*t153598*t153599;
            double t153790 = ccaa1*gamma_bb[index]*gcaa*t153600*t153767;
            double t153791 = ccaa3*gamma_bb[index]*gcaa*t153601*t153772*t153595*t153596;
            double t153792 = ccaa2*t153602*t153595*t153596*t153776;
            double t153793 = ccaa0+t153790+t153791+t153792+t153789;
            double t153794 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t153795 = 1.0/(omega*omega);
            double t153796 = pow(t153794,2.0/3.0);
            double t153799 = t153795*t153796;
            double t153797 = exp(-t153799);
            double t153798 = 1.0/pow(t153794,1.0/3.0);
            double t153800 = omega*omega;
            double t153801 = t153797-1.0;
            double t153802 = 1.0/pow(t153794,2.0/3.0);
            double t153803 = 1.0/pow(t153794,4.0/3.0);
            double t153804 = 1.0/omega;
            double t153805 = t153800*t153801*t153802*(1.0/2.0);
            double t153806 = t153805-t153797+3.0/2.0;
            double t153807 = gx*gx;
            double t153808 = t153807*t153807;
            double t153809 = pow(rho_b[index],4.0/3.0);
            double t153810 = pow(t153794,1.0/3.0);
            double t153811 = t153810*t153804;
            double t153812 = erf(t153811);
            double t153813 = t153812*(3.991211251234741E15/2.251799813685248E15);
            double t153833 = omega*t153806*t153798;
            double t153814 = t153813-t153833;
            double t153815 = gamma_bb[index]*gx*t153600*4.0;
            double t153816 = gamma_bb[index]*gx*t153601*t153807*t153595*4.0;
            double t153817 = t153602*t153807*t153595*6.0;
            double t153818 = t153808*t153597*t153599;
            double t153819 = t153815+t153816+t153817+t153818+1.0;
            double t153820 = 1.0/t153819;
            double t153821 = gamma_bb[index]*gx*t153600;
            double t153822 = t153821+1.0;
            double t153823 = 1.0/t153822;
            double t153824 = gamma_bb[index]*gx*t153600*3.0;
            double t153825 = gamma_bb[index]*gx*t153601*t153807*t153595;
            double t153826 = t153602*t153807*t153595*3.0;
            double t153827 = t153824+t153825+t153826+1.0;
            double t153828 = 1.0/t153827;
            double t153829 = gamma_bb[index]*gx*t153600*2.0;
            double t153830 = t153602*t153807*t153595;
            double t153831 = t153830+t153829+1.0;
            double t153832 = 1.0/t153831;
            double t153834 = omega*t153814*t153798*(4.0/3.0);
            double t153835 = t153834-1.0;
            double t153836 = cx4*t153820*t153808*t153597*t153599;
            double t153837 = cx1*gamma_bb[index]*gx*t153600*t153823;
            double t153838 = cx3*gamma_bb[index]*gx*t153601*t153807*t153828*t153595;
            double t153839 = cx2*t153602*t153832*t153807*t153595;
            double t153840 = cx0+t153836+t153837+t153838+t153839;
            v_rho_b_[index] = -t153793*(t153639+t153605*t153608*(t153638-c0p*t153592*t153594*2.0))-(ccab0+ccab1* \
               gcab*t153670*t153694+ccab2*t153671*t153692*t153669+ccab4*t153676*t153677*t153695+ccab3*gcab*t153670* \
               t153671*t153693*t153669)*(-t153755-t153639+t153657+t153756+rho_b[index]*(-t153753+t153788+t153605* \
               t153608*(t153753+t153787-t153780*t153637*t153781*t153786-a1p*c*c0p*t153743*t153592*(2.0/3.0)))-t153640* \
               (t153757-t153722*t153716*t153717*t153656+t153713*t153740*t153608*t153662*t153663+t153713*t153608*t153663* \
               t153736*t153668*4.0-t153608*t153662*t153663*t153668*(t153757-t153722*t153716*t153717*t153656+(1.0/ \
               (t153701*t153701)*t153707*(b2f*c*t153696*(1.0/3.0)+b4f*t153714*t153581*(2.0/3.0)+b1f*c*t153715*t153696* \
               (1.0/6.0)+b3f*c*t153643*t153696*(1.0/2.0)))/t153704-a1f*c*c0f*t153705*t153696*(2.0/3.0))-t153608*t153662* \
               t153708*t153658*t153659*t153668*4.0+Aa*t153723*t153733*t153608*t153735*t153668*(t153663*t153736*4.0+ \
               t153662*t153658*t153659*4.0)*2.0+Aa*t153740*t153723*t153733*t153742*t153608*t153735*2.0-(t153723*t153742* \
               t153608*t153735*1.0/(t153729*t153729)*t153668*(b2a*c*t153696*(1.0/3.0)+b4a*t153714*t153581*(2.0/3.0) \
               +b1a*c*t153715*t153696*(1.0/6.0)+b3a*c*t153643*t153696*(1.0/2.0)))/t153732+Aa*a1a*c*t153723*t153733* \
               t153742*t153608*t153668*t153696*(2.0/3.0))+t153713*t153608*t153662*t153663*t153668)-(rho_b[index]* \
               t153758+rho_a[index]*(t153626-t153605*t153608*(t153626-c0f*log((t153609*(1.0/2.0))/(b1f*t153612+b3f* \
               t153613+b2f*c*t153610+b4f*t153614*t153581)+1.0)*(a1f*c*t153610+1.0)*2.0))-t153640*(t153657+t153756- \
               t153608*t153662*t153663*t153708*t153668))*(ccab1*gamma_bb[index]*gcab*t153672*t153694*(4.0/3.0)-ccab2* \
               t153671*t153669*1.0/(t153687*t153687)*(gamma_bb[index]*gcab*t153672*(8.0/3.0)+gamma_bb[index]*t153670* \
               t153672*t153669*(8.0/3.0))-ccab4*1.0/(t153682*t153682)*t153676*t153677*(gamma_bb[index]*gcab*t153672* \
               (1.6E1/3.0)+gamma_bb[index]*t153670*t153672*t153669*1.6E1+gamma_bb[index]*gcab*t153671*t153672*t153669* \
               1.6E1+gamma_bb[index]*t153670*t153671*t153672*t153676*(1.6E1/3.0))-ccab1*gamma_bb[index]*t153670*t153672* \
               1.0/(t153684*t153684)*t153669*(4.0/3.0)+ccab2*gamma_bb[index]*t153670*t153672*t153692*t153669*(8.0/ \
               3.0)-ccab3*gcab*t153670*t153671*1.0/(t153691*t153691)*t153669*(gamma_bb[index]*gcab*t153672*4.0+gamma_bb[index]* \
               t153670*t153672*t153669*8.0+gamma_bb[index]*gcab*t153671*t153672*t153669*4.0)+ccab3*gamma_bb[index]* \
               gcab*t153671*t153672*t153693*t153669*4.0+ccab4*gamma_bb[index]*t153670*t153671*t153672*t153676*t153695* \
               (1.6E1/3.0))+rho_b[index]*t153758*(ccaa1*gamma_bb[index]*gcaa*t153672*t153767*(8.0/3.0)+ccaa2*t153595* \
               t153596*t153776*t153777*(1.6E1/3.0)+ccaa4*t153764*t153597*t153598*t153779*(3.2E1/3.0)-ccaa1*t153595* \
               1.0/(t153766*t153766)*t153596*t153777*(8.0/3.0)-ccaa2*t153602*t153595*1.0/(t153775*t153775)*t153596* \
               (gamma_bb[index]*gcaa*t153672*(1.6E1/3.0)+t153595*t153596*t153777*(1.6E1/3.0))-ccaa4*1.0/(t153763* \
               t153763)*t153597*t153598*t153599*(gamma_bb[index]*gcaa*t153672*(3.2E1/3.0)+t153595*t153596*t153777* \
               3.2E1+t153597*t153598*t153779*(3.2E1/3.0)+gamma_bb[index]*gcaa*t153595*t153596*t153778*3.2E1)+ccaa3* \
               gamma_bb[index]*gcaa*t153772*t153595*t153596*t153778*8.0-ccaa3*gamma_bb[index]*gcaa*t153601*1.0/(t153771* \
               t153771)*t153595*t153596*(gamma_bb[index]*gcaa*t153672*8.0+t153595*t153596*t153777*1.6E1+gamma_bb[index]* \
               gcaa*t153595*t153596*t153778*8.0))+rho_b[index]*t153793*(-t153753+t153788+t153605*t153608*(t153753+ \
               t153787-t153788-t153780*t153637*t153781*t153786))-c0*t153840*t153809*(omega*t153798*(omega*t153803* \
               t153806*(2.778046668940015E15/1.40737488355328E14)+omega*t153798*((t153797*(1.0/3.0))/rho_b[index]+ \
               t153800*t153801*1.0/pow(t153794,5.0/3.0)*(2.778046668940015E15/1.40737488355328E14)-t153795*t153797* \
               t153798*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t153802*t153804*t153797* \
               (1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t153803*t153814*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_b[index],1.0/3.0)*t153840*t153835*(4.0/3.0)+c0*t153835*t153809*(cx1* \
               gamma_bb[index]*gx*t153823*t153672*(8.0/3.0)+cx2*t153832*t153807*t153595*t153777*(1.6E1/3.0)+cx4*t153820* \
               t153808*t153597*t153779*(3.2E1/3.0)-cx1*1.0/(t153822*t153822)*t153807*t153595*t153777*(8.0/3.0)-cx2* \
               t153602*1.0/(t153831*t153831)*t153807*t153595*(gamma_bb[index]*gx*t153672*(1.6E1/3.0)+t153807*t153595* \
               t153777*(1.6E1/3.0))-cx4*t153808*1.0/(t153819*t153819)*t153597*t153599*(gamma_bb[index]*gx*t153672* \
               (3.2E1/3.0)+t153807*t153595*t153777*3.2E1+t153808*t153597*t153779*(3.2E1/3.0)+gamma_bb[index]*gx*t153807* \
               t153595*t153778*3.2E1)+cx3*gamma_bb[index]*gx*t153807*t153828*t153595*t153778*8.0-cx3*gamma_bb[index]* \
               gx*t153601*t153807*1.0/(t153827*t153827)*t153595*(gamma_bb[index]*gx*t153672*8.0+t153807*t153595*t153777* \
               1.6E1+gamma_bb[index]*gx*t153807*t153595*t153778*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t156959 = 1.0/pow(rho_b[index],1.0/3.0);
            double t156960 = c*t156959;
            double t156961 = sqrt(t156960);
            double t156962 = pow(t156960,3.0/2.0);
            double t156963 = c*c;
            double t156964 = 1.0/pow(rho_b[index],2.0/3.0);
            double t156965 = 1.0/c0p;
            double t156966 = b1p*t156961;
            double t156967 = b3p*t156962;
            double t156968 = b4p*t156963*t156964;
            double t156969 = b2p*c*t156959;
            double t156970 = t156966+t156967+t156968+t156969;
            double t156971 = 1.0/t156970;
            double t156972 = t156971*t156965*(1.0/2.0);
            double t156973 = t156972+1.0;
            double t156974 = log(t156973);
            double t156975 = a1p*c*t156959;
            double t156976 = t156975+1.0;
            double t156977 = gamma_bb[index]*gamma_bb[index];
            double t156978 = gcaa*gcaa;
            double t156979 = t156977*t156977;
            double t156980 = t156978*t156978;
            double t156981 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t156982 = 1.0/pow(rho_b[index],8.0/3.0);
            double t156983 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t156984 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t156985 = pow(2.0,1.0/3.0);
            double t156986 = t156985*2.0;
            double t156987 = t156986-2.0;
            double t156988 = two_13*2.0;
            double t156989 = t156988-2.0;
            double t156990 = 1.0/t156989;
            double t156991 = 1.0/c0f;
            double t156992 = b1f*t156961;
            double t156993 = b3f*t156962;
            double t156994 = b4f*t156963*t156964;
            double t156995 = b2f*c*t156959;
            double t156996 = t156992+t156993+t156994+t156995;
            double t156997 = 1.0/t156996;
            double t156998 = t156991*t156997*(1.0/2.0);
            double t156999 = t156998+1.0;
            double t157000 = log(t156999);
            double t157001 = a1f*c*t156959;
            double t157002 = t157001+1.0;
            double t157003 = c0f*t157000*t157002*2.0;
            double t157004 = c0p*t156974*t156976*2.0;
            double t157005 = gamma_bb[index]*gcaa*t156982*4.0;
            double t157006 = gamma_bb[index]*gcaa*t156983*t156977*t156978*4.0;
            double t157007 = t156984*t156977*t156978*6.0;
            double t157008 = t156980*t156981*t156979;
            double t157009 = t157005+t157006+t157007+t157008+1.0;
            double t157010 = 1.0/t157009;
            double t157011 = gamma_bb[index]*gcaa*t156982;
            double t157012 = t157011+1.0;
            double t157013 = 1.0/t157012;
            double t157014 = gamma_bb[index]*gcaa*t156982*3.0;
            double t157015 = gamma_bb[index]*gcaa*t156983*t156977*t156978;
            double t157016 = t156984*t156977*t156978*3.0;
            double t157017 = t157014+t157015+t157016+1.0;
            double t157018 = 1.0/t157017;
            double t157019 = gamma_bb[index]*gcaa*t156982*2.0;
            double t157020 = t156984*t156977*t156978;
            double t157021 = t157020+t157019+1.0;
            double t157022 = 1.0/t157021;
            double t157023 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t157024 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t157025 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t157026 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t157027 = 1.0/pow(rho_b[index],4.0/3.0);
            double t157028 = 1.0/pow(rho_b[index],5.0/3.0);
            double t157029 = 1.0/sqrt(t156960);
            double t157030 = 1.0/t156973;
            double t157031 = 1.0/(t156970*t156970);
            double t157032 = b4p*t157028*t156963*(2.0/3.0);
            double t157033 = b2p*c*t157027*(1.0/3.0);
            double t157034 = b1p*c*t157027*t157029*(1.0/6.0);
            double t157035 = b3p*c*t157027*t156961*(1.0/2.0);
            double t157036 = t157032+t157033+t157034+t157035;
            double t157037 = t157030*t157031*t157036*t156976;
            double t157038 = ccaa4*t157010*t156980*t156981*t156979;
            double t157039 = ccaa1*gamma_bb[index]*gcaa*t157013*t156982;
            double t157040 = ccaa3*gamma_bb[index]*gcaa*t157018*t156983*t156977*t156978;
            double t157041 = ccaa2*t157022*t156984*t156977*t156978;
            double t157042 = ccaa0+t157040+t157041+t157038+t157039;
            double t157043 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t157044 = 1.0/(omega*omega);
            double t157045 = pow(t157043,2.0/3.0);
            double t157048 = t157044*t157045;
            double t157046 = exp(-t157048);
            double t157047 = 1.0/pow(t157043,1.0/3.0);
            double t157049 = omega*omega;
            double t157050 = t157046-1.0;
            double t157051 = 1.0/pow(t157043,2.0/3.0);
            double t157052 = 1.0/pow(t157043,4.0/3.0);
            double t157053 = 1.0/omega;
            double t157054 = t157050*t157051*t157049*(1.0/2.0);
            double t157055 = t157054-t157046+3.0/2.0;
            double t157056 = gx*gx;
            double t157057 = t157056*t157056;
            double t157058 = pow(rho_b[index],4.0/3.0);
            double t157059 = pow(t157043,1.0/3.0);
            double t157060 = t157053*t157059;
            double t157061 = erf(t157060);
            double t157062 = t157061*(3.991211251234741E15/2.251799813685248E15);
            double t157082 = omega*t157055*t157047;
            double t157063 = t157062-t157082;
            double t157064 = gamma_bb[index]*gx*t156982*4.0;
            double t157065 = gamma_bb[index]*gx*t157056*t156983*t156977*4.0;
            double t157066 = t157056*t156984*t156977*6.0;
            double t157067 = t157057*t156981*t156979;
            double t157068 = t157064+t157065+t157066+t157067+1.0;
            double t157069 = 1.0/t157068;
            double t157070 = gamma_bb[index]*gx*t156982;
            double t157071 = t157070+1.0;
            double t157072 = 1.0/t157071;
            double t157073 = gamma_bb[index]*gx*t156982*3.0;
            double t157074 = gamma_bb[index]*gx*t157056*t156983*t156977;
            double t157075 = t157056*t156984*t156977*3.0;
            double t157076 = t157073+t157074+t157075+1.0;
            double t157077 = 1.0/t157076;
            double t157078 = gamma_bb[index]*gx*t156982*2.0;
            double t157079 = t157056*t156984*t156977;
            double t157080 = t157078+t157079+1.0;
            double t157081 = 1.0/t157080;
            double t157083 = omega*t157063*t157047*(4.0/3.0);
            double t157084 = t157083-1.0;
            double t157085 = cx4*t157057*t157069*t156981*t156979;
            double t157086 = cx1*gamma_bb[index]*gx*t157072*t156982;
            double t157087 = cx3*gamma_bb[index]*gx*t157056*t157077*t156983*t156977;
            double t157088 = cx2*t157081*t157056*t156984*t156977;
            double t157089 = cx0+t157085+t157086+t157087+t157088;
            v_rho_b_[index] = -t157042*(t157004+t156990*t156987*(t157003-c0p*t156974*t156976*2.0))+rho_b[index]* \
               t157042*(-t157037+t156990*t156987*(t157037-(t157002*1.0/(t156996*t156996)*(b2f*c*t157027*(1.0/3.0) \
               +b4f*t157028*t156963*(2.0/3.0)+b1f*c*t157027*t157029*(1.0/6.0)+b3f*c*t157027*t156961*(1.0/2.0)))/t156999+ \
               a1f*c*c0f*t157000*t157027*(2.0/3.0)-a1p*c*c0p*t157027*t156974*(2.0/3.0))+a1p*c*c0p*t157027*t156974* \
               (2.0/3.0))+rho_b[index]*(t157004+t156990*t156987*(t157003-t157004))*(ccaa1*gamma_bb[index]*gcaa*t157013* \
               t157024*(8.0/3.0)+ccaa4*t157010*t157026*t156980*t156979*(3.2E1/3.0)+ccaa2*t157022*t157023*t156977* \
               t156978*(1.6E1/3.0)-ccaa1*1.0/(t157012*t157012)*t157023*t156977*t156978*(8.0/3.0)-ccaa2*1.0/(t157021* \
               t157021)*t156984*t156977*t156978*(gamma_bb[index]*gcaa*t157024*(1.6E1/3.0)+t157023*t156977*t156978* \
               (1.6E1/3.0))-ccaa4*1.0/(t157009*t157009)*t156980*t156981*t156979*(gamma_bb[index]*gcaa*t157024*(3.2E1/ \
               3.0)+t157026*t156980*t156979*(3.2E1/3.0)+t157023*t156977*t156978*3.2E1+gamma_bb[index]*gcaa*t157025* \
               t156977*t156978*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t157025*t157018*t156977*t156978*8.0-ccaa3*gamma_bb[index]* \
               gcaa*1.0/(t157017*t157017)*t156983*t156977*t156978*(gamma_bb[index]*gcaa*t157024*8.0+t157023*t156977* \
               t156978*1.6E1+gamma_bb[index]*gcaa*t157025*t156977*t156978*8.0))-c0*t157058*t157089*(omega*t157047* \
               (omega*t157052*t157055*(2.778046668940015E15/1.40737488355328E14)+omega*t157047*((t157046*(1.0/3.0) \
               )/rho_b[index]+t157050*1.0/pow(t157043,5.0/3.0)*t157049*(2.778046668940015E15/1.40737488355328E14) \
               -t157044*t157046*t157047*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t157051* \
               t157053*t157046*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t157052*t157063*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_b[index],1.0/3.0)*t157084*t157089*(4.0/3.0)+c0*t157084*t157058*(cx1* \
               gamma_bb[index]*gx*t157024*t157072*(8.0/3.0)+cx2*t157023*t157081*t157056*t156977*(1.6E1/3.0)+cx4*t157026* \
               t157057*t157069*t156979*(3.2E1/3.0)-cx1*t157023*1.0/(t157071*t157071)*t157056*t156977*(8.0/3.0)-cx2* \
               1.0/(t157080*t157080)*t157056*t156984*t156977*(gamma_bb[index]*gx*t157024*(1.6E1/3.0)+t157023*t157056* \
               t156977*(1.6E1/3.0))-cx4*t157057*1.0/(t157068*t157068)*t156981*t156979*(gamma_bb[index]*gx*t157024* \
               (3.2E1/3.0)+t157023*t157056*t156977*3.2E1+t157026*t157057*t156979*(3.2E1/3.0)+gamma_bb[index]*gx*t157025* \
               t157056*t156977*3.2E1)+cx3*gamma_bb[index]*gx*t157025*t157056*t157077*t156977*8.0-cx3*gamma_bb[index]* \
               gx*t157056*1.0/(t157076*t157076)*t156983*t156977*(gamma_bb[index]*gx*t157024*8.0+t157023*t157056*t156977* \
               1.6E1+gamma_bb[index]*gx*t157025*t157056*t156977*8.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t153842 = 1.0/pow(rho_a[index],1.0/3.0);
                double t153843 = c*t153842;
                double t153844 = sqrt(t153843);
                double t153845 = pow(t153843,3.0/2.0);
                double t153846 = c*c;
                double t153847 = 1.0/pow(rho_a[index],2.0/3.0);
                double t153848 = 1.0/c0p;
                double t153849 = b1p*t153844;
                double t153850 = b3p*t153845;
                double t153851 = b4p*t153846*t153847;
                double t153852 = b2p*c*t153842;
                double t153853 = t153850+t153851+t153852+t153849;
                double t153854 = 1.0/t153853;
                double t153855 = t153854*t153848*(1.0/2.0);
                double t153856 = t153855+1.0;
                double t153857 = log(t153856);
                double t153858 = a1p*c*t153842;
                double t153859 = t153858+1.0;
                double t153860 = pow(2.0,1.0/3.0);
                double t153861 = t153860*2.0;
                double t153862 = t153861-2.0;
                double t153863 = two_13*2.0;
                double t153864 = t153863-2.0;
                double t153865 = 1.0/t153864;
                double t153866 = 1.0/c0f;
                double t153867 = 1.0/pow(rho_b[index],1.0/3.0);
                double t153868 = c*t153867;
                double t153869 = sqrt(t153868);
                double t153870 = pow(t153868,3.0/2.0);
                double t153871 = 1.0/pow(rho_b[index],2.0/3.0);
                double t153872 = b1p*t153869;
                double t153873 = b3p*t153870;
                double t153874 = b4p*t153871*t153846;
                double t153875 = b2p*c*t153867;
                double t153876 = t153872+t153873+t153874+t153875;
                double t153877 = 1.0/t153876;
                double t153878 = t153848*t153877*(1.0/2.0);
                double t153879 = t153878+1.0;
                double t153880 = log(t153879);
                double t153881 = a1p*c*t153867;
                double t153882 = t153881+1.0;
                double t153883 = c0p*t153880*t153882*2.0;
                double t153884 = rho_a[index]+rho_b[index];
                double t153885 = 1.0/pow(t153884,1.0/3.0);
                double t153886 = c*t153885;
                double t153887 = sqrt(t153886);
                double t153888 = pow(t153886,3.0/2.0);
                double t153889 = 1.0/pow(t153884,2.0/3.0);
                double t153890 = b1p*t153887;
                double t153891 = b3p*t153888;
                double t153892 = b4p*t153846*t153889;
                double t153893 = b2p*c*t153885;
                double t153894 = t153890+t153891+t153892+t153893;
                double t153895 = 1.0/t153894;
                double t153896 = t153848*t153895*(1.0/2.0);
                double t153897 = t153896+1.0;
                double t153898 = log(t153897);
                double t153899 = a1p*c*t153885;
                double t153900 = t153899+1.0;
                double t153901 = c0p*t153900*t153898*2.0;
                double t153902 = rho_a[index]-rho_b[index];
                double t153903 = t153902*t153902;
                double t153904 = 1.0/t153884;
                double t153905 = t153902*t153904;
                double t153906 = 1.0/(t153884*t153884*t153884*t153884);
                double t153907 = t153903*t153903;
                double t153908 = t153905+1.0;
                double t153909 = pow(t153908,4.0/3.0);
                double t153910 = -t153905+1.0;
                double t153911 = pow(t153910,4.0/3.0);
                double t153912 = t153911+t153909-2.0;
                double t153913 = 1.0/pow(rho_a[index],8.0/3.0);
                double t153914 = gamma_aa[index]*t153913*(1.0/2.0);
                double t153915 = 1.0/pow(rho_b[index],8.0/3.0);
                double t153916 = gamma_bb[index]*t153915*(1.0/2.0);
                double t153917 = t153914+t153916;
                double t153918 = gcab*t153917;
                double t153919 = t153918+1.0;
                double t153920 = gcab*gcab;
                double t153921 = t153917*t153917;
                double t153922 = t153920*t153920;
                double t153923 = t153921*t153921;
                double t153924 = t153920*t153921;
                double t153925 = gcab*t153917*2.0;
                double t153926 = t153924+t153925+1.0;
                double t153927 = t153920*t153921*3.0;
                double t153928 = gcab*t153920*t153921*t153917;
                double t153929 = gcab*t153917*3.0;
                double t153930 = t153927+t153928+t153929+1.0;
                double t153931 = t153920*t153921*6.0;
                double t153932 = gcab*t153920*t153921*t153917*4.0;
                double t153933 = t153922*t153923;
                double t153934 = gcab*t153917*4.0;
                double t153935 = t153931+t153932+t153933+t153934+1.0;
                double t153936 = c0p*t153857*t153859*2.0;
                double t153937 = b1f*t153844;
                double t153938 = b3f*t153845;
                double t153939 = b4f*t153846*t153847;
                double t153940 = b2f*c*t153842;
                double t153941 = t153940+t153937+t153938+t153939;
                double t153942 = 1.0/t153941;
                double t153943 = t153942*t153866*(1.0/2.0);
                double t153944 = t153943+1.0;
                double t153945 = log(t153944);
                double t153946 = a1f*c*t153842;
                double t153947 = t153946+1.0;
                double t153948 = t153936-c0f*t153945*t153947*2.0;
                double t153949 = t153936-t153862*t153865*t153948;
                double t153950 = gamma_aa[index]*gamma_aa[index];
                double t153951 = gcaa*gcaa;
                double t153952 = t153951*t153951;
                double t153953 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t153954 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t153955 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t153956 = gamma_aa[index]*gcaa*t153913;
                double t153957 = t153956+1.0;
                double t153958 = gamma_aa[index]*gcaa*t153913*3.0;
                double t153959 = gamma_aa[index]*gcaa*t153950*t153951*t153955;
                double t153960 = t153950*t153951*t153954*3.0;
                double t153961 = t153960+t153958+t153959+1.0;
                double t153962 = t153950*t153950;
                double t153963 = gamma_aa[index]*gcaa*t153913*4.0;
                double t153964 = gamma_aa[index]*gcaa*t153950*t153951*t153955*4.0;
                double t153965 = t153950*t153951*t153954*6.0;
                double t153966 = t153952*t153953*t153962;
                double t153967 = t153963+t153964+t153965+t153966+1.0;
                double t153968 = gamma_aa[index]*gcaa*t153913*2.0;
                double t153969 = t153950*t153951*t153954;
                double t153970 = t153968+t153969+1.0;
                double t153971 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t153972 = 1.0/pow(t153971,1.0/3.0);
                double t153973 = 1.0/(omega*omega);
                double t153974 = pow(t153971,2.0/3.0);
                double t153975 = exp(-t153973*t153974);
                double t153976 = gx*gx;
                double t153977 = t153976*t153976;
                double t153978 = gamma_aa[index]*gx*t153913;
                double t153979 = t153978+1.0;
                double t153980 = gamma_aa[index]*gx*t153913*3.0;
                double t153981 = gamma_aa[index]*gx*t153950*t153955*t153976;
                double t153982 = t153950*t153954*t153976*3.0;
                double t153983 = t153980+t153981+t153982+1.0;
                double t153984 = gamma_aa[index]*gx*t153913*4.0;
                double t153985 = gamma_aa[index]*gx*t153950*t153955*t153976*4.0;
                double t153986 = t153950*t153954*t153976*6.0;
                double t153987 = t153953*t153962*t153977;
                double t153988 = t153984+t153985+t153986+t153987+1.0;
                double t153989 = gamma_aa[index]*gx*t153913*2.0;
                double t153990 = t153950*t153954*t153976;
                double t153991 = t153990+t153989+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t153949+rho_b[index]*(t153883-t153862*t153865*(t153883-c0f*log((t153866* \
                   (1.0/2.0))/(b1f*t153869+b3f*t153870+b2f*c*t153867+b4f*t153871*t153846)+1.0)*(a1f*c*t153867+1.0)*2.0) \
                   )-t153884*(t153901-t153912*t153906*t153907*t153865*(t153901-c0f*log((t153866*(1.0/2.0))/(b1f*t153887+ \
                   b3f*t153888+b2f*c*t153885+b4f*t153846*t153889)+1.0)*(a1f*c*t153885+1.0)*2.0)+(Aa*t153912*t153865*log((1.0/ \
                   2.0)/(Aa*(b1a*t153887+b3a*t153888+b2a*c*t153885+b4a*t153846*t153889))+1.0)*(t153906*t153907-1.0)*(a1a* \
                   c*t153885+1.0)*2.0)/d2fz0))*((ccab1*gcab*t153913*(1.0/2.0))/t153919-ccab4*t153922*t153923*1.0/(t153935* \
                   t153935)*(gcab*t153913*2.0+t153920*t153913*t153917*6.0+gcab*t153920*t153921*t153913*6.0+t153921*t153913* \
                   t153922*t153917*2.0)-ccab2*t153920*t153921*1.0/(t153926*t153926)*(gcab*t153913+t153920*t153913*t153917) \
                   +(ccab2*t153920*t153913*t153917)/t153926-ccab1*t153920*t153913*t153917*1.0/(t153919*t153919)*(1.0/ \
                   2.0)+(ccab3*gcab*t153920*t153921*t153913*(3.0/2.0))/t153930+(ccab4*t153921*t153913*t153922*t153917* \
                   2.0)/t153935-ccab3*gcab*t153920*t153921*1.0/(t153930*t153930)*t153917*(gcab*t153913*(3.0/2.0)+t153920* \
                   t153913*t153917*3.0+gcab*t153920*t153921*t153913*(3.0/2.0)))-rho_a[index]*t153949*((ccaa1*gcaa*t153913) \
                   /t153957+(ccaa2*gamma_aa[index]*t153951*t153954*2.0)/t153970-ccaa1*gamma_aa[index]*t153951*t153954* \
                   1.0/(t153957*t153957)-ccaa2*t153950*t153951*1.0/(t153970*t153970)*t153954*(gcaa*t153913*2.0+gamma_aa[index]* \
                   t153951*t153954*2.0)+(ccaa4*gamma_aa[index]*t153950*t153952*t153953*4.0)/t153967+(ccaa3*gcaa*t153950* \
                   t153951*t153955*3.0)/t153961-ccaa4*t153952*t153953*t153962*1.0/(t153967*t153967)*(gcaa*t153913*4.0+ \
                   gamma_aa[index]*t153951*t153954*1.2E1+gamma_aa[index]*t153950*t153952*t153953*4.0+gcaa*t153950*t153951* \
                   t153955*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t153950*t153951*1.0/(t153961*t153961)*t153955*(gcaa*t153913* \
                   3.0+gamma_aa[index]*t153951*t153954*6.0+gcaa*t153950*t153951*t153955*3.0))-c0*pow(rho_a[index],4.0/ \
                   3.0)*(omega*t153972*(erf(pow(t153971,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t153972*(-t153975+(omega*omega)*1.0/pow(t153971,2.0/3.0)*(t153975-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*((cx1*gx*t153913)/t153979-cx1*gamma_aa[index]*t153954*t153976*1.0/(t153979*t153979)+(cx2*gamma_aa[index]* \
                   t153954*t153976*2.0)/t153991-cx2*t153950*t153954*1.0/(t153991*t153991)*t153976*(gx*t153913*2.0+gamma_aa[index]* \
                   t153954*t153976*2.0)+(cx4*gamma_aa[index]*t153950*t153953*t153977*4.0)/t153988+(cx3*gx*t153950*t153955* \
                   t153976*3.0)/t153983-cx4*t153953*t153962*t153977*1.0/(t153988*t153988)*(gx*t153913*4.0+gamma_aa[index]* \
                   t153954*t153976*1.2E1+gamma_aa[index]*t153950*t153953*t153977*4.0+gx*t153950*t153955*t153976*1.2E1) \
                   -cx3*gamma_aa[index]*gx*t153950*t153955*1.0/(t153983*t153983)*t153976*(gx*t153913*3.0+gamma_aa[index]* \
                   t153954*t153976*6.0+gx*t153950*t153955*t153976*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t157846 = 1.0/pow(rho_a[index],1.0/3.0);
                double t157847 = c*t157846;
                double t157848 = sqrt(t157847);
                double t157849 = pow(t157847,3.0/2.0);
                double t157850 = c*c;
                double t157851 = 1.0/pow(rho_a[index],2.0/3.0);
                double t157852 = 1.0/c0p;
                double t157853 = b1p*t157848;
                double t157854 = b3p*t157849;
                double t157855 = b4p*t157850*t157851;
                double t157856 = b2p*c*t157846;
                double t157857 = t157853+t157854+t157855+t157856;
                double t157858 = 1.0/t157857;
                double t157859 = t157852*t157858*(1.0/2.0);
                double t157860 = t157859+1.0;
                double t157861 = log(t157860);
                double t157862 = a1p*c*t157846;
                double t157863 = t157862+1.0;
                double t157864 = 1.0/pow(rho_a[index],8.0/3.0);
                double t157865 = gamma_aa[index]*gamma_aa[index];
                double t157866 = gcaa*gcaa;
                double t157867 = t157866*t157866;
                double t157868 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t157869 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t157870 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t157871 = gamma_aa[index]*gcaa*t157864;
                double t157872 = t157871+1.0;
                double t157873 = gamma_aa[index]*gcaa*t157864*3.0;
                double t157874 = gamma_aa[index]*gcaa*t157870*t157865*t157866;
                double t157875 = t157865*t157866*t157869*3.0;
                double t157876 = t157873+t157874+t157875+1.0;
                double t157877 = t157865*t157865;
                double t157878 = gamma_aa[index]*gcaa*t157864*4.0;
                double t157879 = gamma_aa[index]*gcaa*t157870*t157865*t157866*4.0;
                double t157880 = t157865*t157866*t157869*6.0;
                double t157881 = t157867*t157868*t157877;
                double t157882 = t157880+t157881+t157878+t157879+1.0;
                double t157883 = gamma_aa[index]*gcaa*t157864*2.0;
                double t157884 = t157865*t157866*t157869;
                double t157885 = t157883+t157884+1.0;
                double t157886 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t157887 = 1.0/pow(t157886,1.0/3.0);
                double t157888 = 1.0/(omega*omega);
                double t157889 = pow(t157886,2.0/3.0);
                double t157890 = exp(-t157888*t157889);
                double t157891 = gx*gx;
                double t157892 = t157891*t157891;
                double t157893 = gamma_aa[index]*gx*t157864;
                double t157894 = t157893+1.0;
                double t157895 = gamma_aa[index]*gx*t157864*3.0;
                double t157896 = gamma_aa[index]*gx*t157870*t157891*t157865;
                double t157897 = t157891*t157865*t157869*3.0;
                double t157898 = t157895+t157896+t157897+1.0;
                double t157899 = gamma_aa[index]*gx*t157864*4.0;
                double t157900 = gamma_aa[index]*gx*t157870*t157891*t157865*4.0;
                double t157901 = t157891*t157865*t157869*6.0;
                double t157902 = t157892*t157868*t157877;
                double t157903 = t157900+t157901+t157902+t157899+1.0;
                double t157904 = gamma_aa[index]*gx*t157864*2.0;
                double t157905 = t157891*t157865*t157869;
                double t157906 = t157904+t157905+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t157848+ \
                   b3f*t157849+b2f*c*t157846+b4f*t157850*t157851))+1.0)*(a1f*c*t157846+1.0)*2.0-c0p*t157861*t157863*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t157861*t157863*2.0)*((ccaa1*gcaa*t157864)/t157872-ccaa1*gamma_aa[index]*1.0/ \
                   (t157872*t157872)*t157866*t157869+(ccaa2*gamma_aa[index]*t157866*t157869*2.0)/t157885-ccaa2*t157865* \
                   t157866*1.0/(t157885*t157885)*t157869*(gcaa*t157864*2.0+gamma_aa[index]*t157866*t157869*2.0)+(ccaa4* \
                   gamma_aa[index]*t157865*t157867*t157868*4.0)/t157882+(ccaa3*gcaa*t157870*t157865*t157866*3.0)/t157876- \
                   ccaa4*1.0/(t157882*t157882)*t157867*t157868*t157877*(gcaa*t157864*4.0+gamma_aa[index]*t157866*t157869* \
                   1.2E1+gamma_aa[index]*t157865*t157867*t157868*4.0+gcaa*t157870*t157865*t157866*1.2E1)-ccaa3*gamma_aa[index]* \
                   gcaa*t157870*t157865*t157866*1.0/(t157876*t157876)*(gcaa*t157864*3.0+gamma_aa[index]*t157866*t157869* \
                   6.0+gcaa*t157870*t157865*t157866*3.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t157887*(erf(pow(t157886,1.0/ \
                   3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t157887*(-t157890+(omega*omega)*1.0/ \
                   pow(t157886,2.0/3.0)*(t157890-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t157864)/t157894-cx1* \
                   gamma_aa[index]*t157891*1.0/(t157894*t157894)*t157869+(cx2*gamma_aa[index]*t157891*t157869*2.0)/t157906- \
                   cx2*1.0/(t157906*t157906)*t157891*t157865*t157869*(gx*t157864*2.0+gamma_aa[index]*t157891*t157869* \
                   2.0)+(cx4*gamma_aa[index]*t157865*t157892*t157868*4.0)/t157903+(cx3*gx*t157870*t157891*t157865*3.0) \
                   /t157898-cx4*1.0/(t157903*t157903)*t157892*t157868*t157877*(gx*t157864*4.0+gamma_aa[index]*t157891* \
                   t157869*1.2E1+gamma_aa[index]*t157865*t157892*t157868*4.0+gx*t157870*t157891*t157865*1.2E1)-cx3*gamma_aa[index]* \
                   gx*t157870*t157891*t157865*1.0/(t157898*t157898)*(gx*t157864*3.0+gamma_aa[index]*t157891*t157869*6.0+ \
                   gx*t157870*t157891*t157865*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t153994 = 1.0/pow(rho_a[index],1.0/3.0);
                double t153995 = c*t153994;
                double t153996 = sqrt(t153995);
                double t153997 = pow(t153995,3.0/2.0);
                double t153998 = c*c;
                double t153999 = 1.0/pow(rho_a[index],2.0/3.0);
                double t154000 = 1.0/c0p;
                double t154001 = b1p*t153996;
                double t154002 = b3p*t153997;
                double t154003 = b4p*t153998*t153999;
                double t154004 = b2p*c*t153994;
                double t154005 = t154001+t154002+t154003+t154004;
                double t154006 = 1.0/t154005;
                double t154007 = t154000*t154006*(1.0/2.0);
                double t154008 = t154007+1.0;
                double t154009 = log(t154008);
                double t154010 = a1p*c*t153994;
                double t154011 = t154010+1.0;
                double t154012 = pow(2.0,1.0/3.0);
                double t154013 = t154012*2.0;
                double t154014 = t154013-2.0;
                double t154015 = two_13*2.0;
                double t154016 = t154015-2.0;
                double t154017 = 1.0/t154016;
                double t154018 = 1.0/c0f;
                double t154019 = 1.0/pow(rho_b[index],1.0/3.0);
                double t154020 = c*t154019;
                double t154021 = sqrt(t154020);
                double t154022 = pow(t154020,3.0/2.0);
                double t154023 = 1.0/pow(rho_b[index],2.0/3.0);
                double t154024 = b1p*t154021;
                double t154025 = b3p*t154022;
                double t154026 = b4p*t154023*t153998;
                double t154027 = b2p*c*t154019;
                double t154028 = t154024+t154025+t154026+t154027;
                double t154029 = 1.0/t154028;
                double t154030 = t154000*t154029*(1.0/2.0);
                double t154031 = t154030+1.0;
                double t154032 = log(t154031);
                double t154033 = a1p*c*t154019;
                double t154034 = t154033+1.0;
                double t154035 = c0p*t154032*t154034*2.0;
                double t154036 = rho_a[index]+rho_b[index];
                double t154037 = 1.0/pow(t154036,1.0/3.0);
                double t154038 = c*t154037;
                double t154039 = sqrt(t154038);
                double t154040 = pow(t154038,3.0/2.0);
                double t154041 = 1.0/pow(t154036,2.0/3.0);
                double t154042 = b1p*t154039;
                double t154043 = b3p*t154040;
                double t154044 = b4p*t154041*t153998;
                double t154045 = b2p*c*t154037;
                double t154046 = t154042+t154043+t154044+t154045;
                double t154047 = 1.0/t154046;
                double t154048 = t154000*t154047*(1.0/2.0);
                double t154049 = t154048+1.0;
                double t154050 = log(t154049);
                double t154051 = a1p*c*t154037;
                double t154052 = t154051+1.0;
                double t154053 = c0p*t154050*t154052*2.0;
                double t154054 = rho_a[index]-rho_b[index];
                double t154055 = t154054*t154054;
                double t154056 = 1.0/t154036;
                double t154057 = t154054*t154056;
                double t154058 = 1.0/(t154036*t154036*t154036*t154036);
                double t154059 = t154055*t154055;
                double t154060 = t154057+1.0;
                double t154061 = pow(t154060,4.0/3.0);
                double t154062 = -t154057+1.0;
                double t154063 = pow(t154062,4.0/3.0);
                double t154064 = t154061+t154063-2.0;
                double t154065 = 1.0/pow(rho_b[index],8.0/3.0);
                double t154066 = 1.0/pow(rho_a[index],8.0/3.0);
                double t154067 = gamma_aa[index]*t154066*(1.0/2.0);
                double t154068 = gamma_bb[index]*t154065*(1.0/2.0);
                double t154069 = t154067+t154068;
                double t154070 = gcab*t154069;
                double t154071 = t154070+1.0;
                double t154072 = gcab*gcab;
                double t154073 = t154069*t154069;
                double t154074 = t154072*t154072;
                double t154075 = t154073*t154073;
                double t154076 = t154072*t154073;
                double t154077 = gcab*t154069*2.0;
                double t154078 = t154076+t154077+1.0;
                double t154079 = t154072*t154073*3.0;
                double t154080 = gcab*t154072*t154073*t154069;
                double t154081 = gcab*t154069*3.0;
                double t154082 = t154080+t154081+t154079+1.0;
                double t154083 = t154072*t154073*6.0;
                double t154084 = gcab*t154072*t154073*t154069*4.0;
                double t154085 = t154074*t154075;
                double t154086 = gcab*t154069*4.0;
                double t154087 = t154083+t154084+t154085+t154086+1.0;
                double t154088 = c0p*t154011*t154009*2.0;
                double t154089 = b1f*t154021;
                double t154090 = b3f*t154022;
                double t154091 = b4f*t154023*t153998;
                double t154092 = b2f*c*t154019;
                double t154093 = t154090+t154091+t154092+t154089;
                double t154094 = 1.0/t154093;
                double t154095 = t154018*t154094*(1.0/2.0);
                double t154096 = t154095+1.0;
                double t154097 = log(t154096);
                double t154098 = a1f*c*t154019;
                double t154099 = t154098+1.0;
                double t154100 = t154035-c0f*t154097*t154099*2.0;
                double t154101 = t154035-t154100*t154014*t154017;
                double t154102 = gamma_bb[index]*gamma_bb[index];
                double t154103 = gcaa*gcaa;
                double t154104 = t154103*t154103;
                double t154105 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t154106 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t154107 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t154108 = gamma_bb[index]*gcaa*t154065;
                double t154109 = t154108+1.0;
                double t154110 = gamma_bb[index]*gcaa*t154065*3.0;
                double t154111 = gamma_bb[index]*gcaa*t154102*t154103*t154107;
                double t154112 = t154102*t154103*t154106*3.0;
                double t154113 = t154110+t154111+t154112+1.0;
                double t154114 = t154102*t154102;
                double t154115 = gamma_bb[index]*gcaa*t154065*4.0;
                double t154116 = gamma_bb[index]*gcaa*t154102*t154103*t154107*4.0;
                double t154117 = t154102*t154103*t154106*6.0;
                double t154118 = t154104*t154105*t154114;
                double t154119 = t154115+t154116+t154117+t154118+1.0;
                double t154120 = gamma_bb[index]*gcaa*t154065*2.0;
                double t154121 = t154102*t154103*t154106;
                double t154122 = t154120+t154121+1.0;
                double t154123 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t154124 = 1.0/pow(t154123,1.0/3.0);
                double t154125 = 1.0/(omega*omega);
                double t154126 = pow(t154123,2.0/3.0);
                double t154127 = exp(-t154125*t154126);
                double t154128 = gx*gx;
                double t154129 = t154128*t154128;
                double t154130 = gamma_bb[index]*gx*t154065;
                double t154131 = t154130+1.0;
                double t154132 = gamma_bb[index]*gx*t154065*3.0;
                double t154133 = gamma_bb[index]*gx*t154102*t154107*t154128;
                double t154134 = t154102*t154106*t154128*3.0;
                double t154135 = t154132+t154133+t154134+1.0;
                double t154136 = gamma_bb[index]*gx*t154065*4.0;
                double t154137 = gamma_bb[index]*gx*t154102*t154107*t154128*4.0;
                double t154138 = t154102*t154106*t154128*6.0;
                double t154139 = t154105*t154114*t154129;
                double t154140 = t154136+t154137+t154138+t154139+1.0;
                double t154141 = gamma_bb[index]*gx*t154065*2.0;
                double t154142 = t154102*t154106*t154128;
                double t154143 = t154141+t154142+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t154101+rho_a[index]*(t154088-t154014*t154017*(t154088-c0f*log((t154018* \
                   (1.0/2.0))/(b1f*t153996+b3f*t153997+b2f*c*t153994+b4f*t153998*t153999)+1.0)*(a1f*c*t153994+1.0)*2.0) \
                   )-t154036*(t154053-t154017*t154064*t154058*t154059*(t154053-c0f*log((t154018*(1.0/2.0))/(b1f*t154039+ \
                   b3f*t154040+b2f*c*t154037+b4f*t154041*t153998)+1.0)*(a1f*c*t154037+1.0)*2.0)+(Aa*t154017*t154064*log((1.0/ \
                   2.0)/(Aa*(b1a*t154039+b3a*t154040+b2a*c*t154037+b4a*t154041*t153998))+1.0)*(t154058*t154059-1.0)*(a1a* \
                   c*t154037+1.0)*2.0)/d2fz0))*((ccab1*gcab*t154065*(1.0/2.0))/t154071-ccab4*t154074*t154075*1.0/(t154087* \
                   t154087)*(gcab*t154065*2.0+t154072*t154065*t154069*6.0+gcab*t154072*t154073*t154065*6.0+t154073*t154065* \
                   t154074*t154069*2.0)-ccab2*t154072*t154073*1.0/(t154078*t154078)*(gcab*t154065+t154072*t154065*t154069) \
                   -ccab1*1.0/(t154071*t154071)*t154072*t154065*t154069*(1.0/2.0)+(ccab2*t154072*t154065*t154069)/t154078+ \
                   (ccab3*gcab*t154072*t154073*t154065*(3.0/2.0))/t154082+(ccab4*t154073*t154065*t154074*t154069*2.0) \
                   /t154087-ccab3*gcab*t154072*t154073*1.0/(t154082*t154082)*t154069*(gcab*t154065*(3.0/2.0)+t154072* \
                   t154065*t154069*3.0+gcab*t154072*t154073*t154065*(3.0/2.0)))-rho_b[index]*t154101*((ccaa1*gcaa*t154065) \
                   /t154109+(ccaa2*gamma_bb[index]*t154103*t154106*2.0)/t154122-ccaa1*gamma_bb[index]*t154103*t154106* \
                   1.0/(t154109*t154109)-ccaa2*t154102*t154103*1.0/(t154122*t154122)*t154106*(gcaa*t154065*2.0+gamma_bb[index]* \
                   t154103*t154106*2.0)+(ccaa4*gamma_bb[index]*t154102*t154104*t154105*4.0)/t154119+(ccaa3*gcaa*t154102* \
                   t154103*t154107*3.0)/t154113-ccaa4*t154104*t154105*t154114*1.0/(t154119*t154119)*(gcaa*t154065*4.0+ \
                   gamma_bb[index]*t154103*t154106*1.2E1+gamma_bb[index]*t154102*t154104*t154105*4.0+gcaa*t154102*t154103* \
                   t154107*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t154102*t154103*1.0/(t154113*t154113)*t154107*(gcaa*t154065* \
                   3.0+gamma_bb[index]*t154103*t154106*6.0+gcaa*t154102*t154103*t154107*3.0))-c0*pow(rho_b[index],4.0/ \
                   3.0)*(omega*t154124*(erf(pow(t154123,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t154124*(-t154127+(omega*omega)*1.0/pow(t154123,2.0/3.0)*(t154127-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*((cx1*gx*t154065)/t154131-cx1*gamma_bb[index]*1.0/(t154131*t154131)*t154106*t154128+(cx2*gamma_bb[index]* \
                   t154106*t154128*2.0)/t154143-cx2*t154102*t154106*1.0/(t154143*t154143)*t154128*(gx*t154065*2.0+gamma_bb[index]* \
                   t154106*t154128*2.0)+(cx4*gamma_bb[index]*t154102*t154105*t154129*4.0)/t154140+(cx3*gx*t154102*t154107* \
                   t154128*3.0)/t154135-cx4*1.0/(t154140*t154140)*t154105*t154114*t154129*(gx*t154065*4.0+gamma_bb[index]* \
                   t154106*t154128*1.2E1+gamma_bb[index]*t154102*t154105*t154129*4.0+gx*t154102*t154107*t154128*1.2E1) \
                   -cx3*gamma_bb[index]*gx*t154102*t154107*1.0/(t154135*t154135)*t154128*(gx*t154065*3.0+gamma_bb[index]* \
                   t154106*t154128*6.0+gx*t154102*t154107*t154128*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t157093 = 1.0/pow(rho_b[index],1.0/3.0);
                double t157094 = c*t157093;
                double t157095 = sqrt(t157094);
                double t157096 = pow(t157094,3.0/2.0);
                double t157097 = c*c;
                double t157098 = 1.0/pow(rho_b[index],2.0/3.0);
                double t157099 = 1.0/c0p;
                double t157100 = b1p*t157095;
                double t157101 = b3p*t157096;
                double t157102 = b4p*t157097*t157098;
                double t157103 = b2p*c*t157093;
                double t157104 = t157100+t157101+t157102+t157103;
                double t157105 = 1.0/t157104;
                double t157106 = t157105*t157099*(1.0/2.0);
                double t157107 = t157106+1.0;
                double t157108 = log(t157107);
                double t157109 = a1p*c*t157093;
                double t157110 = t157109+1.0;
                double t157111 = 1.0/pow(rho_b[index],8.0/3.0);
                double t157112 = gamma_bb[index]*gamma_bb[index];
                double t157113 = gcaa*gcaa;
                double t157114 = t157113*t157113;
                double t157115 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t157116 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t157117 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t157118 = gamma_bb[index]*gcaa*t157111;
                double t157119 = t157118+1.0;
                double t157120 = gamma_bb[index]*gcaa*t157111*3.0;
                double t157121 = gamma_bb[index]*gcaa*t157112*t157113*t157117;
                double t157122 = t157112*t157113*t157116*3.0;
                double t157123 = t157120+t157121+t157122+1.0;
                double t157124 = t157112*t157112;
                double t157125 = gamma_bb[index]*gcaa*t157111*4.0;
                double t157126 = gamma_bb[index]*gcaa*t157112*t157113*t157117*4.0;
                double t157127 = t157112*t157113*t157116*6.0;
                double t157128 = t157114*t157115*t157124;
                double t157129 = t157125+t157126+t157127+t157128+1.0;
                double t157130 = gamma_bb[index]*gcaa*t157111*2.0;
                double t157131 = t157112*t157113*t157116;
                double t157132 = t157130+t157131+1.0;
                double t157133 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t157134 = 1.0/pow(t157133,1.0/3.0);
                double t157135 = 1.0/(omega*omega);
                double t157136 = pow(t157133,2.0/3.0);
                double t157137 = exp(-t157135*t157136);
                double t157138 = gx*gx;
                double t157139 = t157138*t157138;
                double t157140 = gamma_bb[index]*gx*t157111;
                double t157141 = t157140+1.0;
                double t157142 = gamma_bb[index]*gx*t157111*3.0;
                double t157143 = gamma_bb[index]*gx*t157112*t157117*t157138;
                double t157144 = t157112*t157116*t157138*3.0;
                double t157145 = t157142+t157143+t157144+1.0;
                double t157146 = gamma_bb[index]*gx*t157111*4.0;
                double t157147 = gamma_bb[index]*gx*t157112*t157117*t157138*4.0;
                double t157148 = t157112*t157116*t157138*6.0;
                double t157149 = t157115*t157124*t157139;
                double t157150 = t157146+t157147+t157148+t157149+1.0;
                double t157151 = gamma_bb[index]*gx*t157111*2.0;
                double t157152 = t157112*t157116*t157138;
                double t157153 = t157151+t157152+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t157095+ \
                   b3f*t157096+b2f*c*t157093+b4f*t157097*t157098))+1.0)*(a1f*c*t157093+1.0)*2.0-c0p*t157110*t157108*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t157110*t157108*2.0)*((ccaa1*gcaa*t157111)/t157119+(ccaa2*gamma_bb[index]*t157113* \
                   t157116*2.0)/t157132-ccaa1*gamma_bb[index]*t157113*t157116*1.0/(t157119*t157119)-ccaa2*t157112*t157113* \
                   1.0/(t157132*t157132)*t157116*(gcaa*t157111*2.0+gamma_bb[index]*t157113*t157116*2.0)+(ccaa4*gamma_bb[index]* \
                   t157112*t157114*t157115*4.0)/t157129+(ccaa3*gcaa*t157112*t157113*t157117*3.0)/t157123-ccaa4*t157114* \
                   t157115*t157124*1.0/(t157129*t157129)*(gcaa*t157111*4.0+gamma_bb[index]*t157113*t157116*1.2E1+gamma_bb[index]* \
                   t157112*t157114*t157115*4.0+gcaa*t157112*t157113*t157117*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t157112* \
                   t157113*1.0/(t157123*t157123)*t157117*(gcaa*t157111*3.0+gamma_bb[index]*t157113*t157116*6.0+gcaa*t157112* \
                   t157113*t157117*3.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t157134*(erf(pow(t157133,1.0/3.0)/omega) \
                   *(3.991211251234741E15/2.251799813685248E15)-omega*t157134*(-t157137+(omega*omega)*1.0/pow(t157133,2.0/ \
                   3.0)*(t157137-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t157111)/t157141-cx1*gamma_bb[index]* \
                   1.0/(t157141*t157141)*t157116*t157138+(cx2*gamma_bb[index]*t157116*t157138*2.0)/t157153-cx2*t157112* \
                   t157116*1.0/(t157153*t157153)*t157138*(gx*t157111*2.0+gamma_bb[index]*t157116*t157138*2.0)+(cx4*gamma_bb[index]* \
                   t157112*t157115*t157139*4.0)/t157150+(cx3*gx*t157112*t157117*t157138*3.0)/t157145-cx4*1.0/(t157150* \
                   t157150)*t157115*t157124*t157139*(gx*t157111*4.0+gamma_bb[index]*t157116*t157138*1.2E1+gamma_bb[index]* \
                   t157112*t157115*t157139*4.0+gx*t157112*t157117*t157138*1.2E1)-cx3*gamma_bb[index]*gx*t157112*t157117* \
                   1.0/(t157145*t157145)*t157138*(gx*t157111*3.0+gamma_bb[index]*t157116*t157138*6.0+gx*t157112*t157117* \
                   t157138*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t154147 = rho_a[index]+rho_b[index];
            double t154148 = 1.0/pow(t154147,1.0/3.0);
            double t154149 = c*t154148;
            double t154150 = sqrt(t154149);
            double t154151 = b1p*t154150;
            double t154152 = pow(t154149,3.0/2.0);
            double t154153 = b3p*t154152;
            double t154154 = c*c;
            double t154155 = 1.0/pow(t154147,2.0/3.0);
            double t154156 = b4p*t154154*t154155;
            double t154157 = b2p*c*t154148;
            double t154158 = t154151+t154153+t154156+t154157;
            double t154159 = 1.0/pow(t154147,4.0/3.0);
            double t154160 = 1.0/c0p;
            double t154161 = 1.0/t154158;
            double t154162 = t154160*t154161*(1.0/2.0);
            double t154163 = t154162+1.0;
            double t154164 = a1p*c*t154148;
            double t154165 = t154164+1.0;
            double t154166 = rho_a[index]-rho_b[index];
            double t154167 = t154166*t154166;
            double t154168 = 1.0/t154147;
            double t154169 = t154166*t154168;
            double t154170 = two_13*2.0;
            double t154171 = t154170-2.0;
            double t154172 = 1.0/t154171;
            double t154173 = 1.0/c0f;
            double t154174 = b1f*t154150;
            double t154175 = b3f*t154152;
            double t154176 = b4f*t154154*t154155;
            double t154177 = b2f*c*t154148;
            double t154178 = t154174+t154175+t154176+t154177;
            double t154179 = 1.0/t154178;
            double t154180 = t154173*t154179*(1.0/2.0);
            double t154181 = t154180+1.0;
            double t154182 = log(t154181);
            double t154183 = a1f*c*t154148;
            double t154184 = t154183+1.0;
            double t154185 = log(t154163);
            double t154195 = c0f*t154182*t154184*2.0;
            double t154196 = c0p*t154165*t154185*2.0;
            double t154186 = t154195-t154196;
            double t154187 = t154169+1.0;
            double t154188 = pow(t154187,4.0/3.0);
            double t154189 = -t154169+1.0;
            double t154190 = pow(t154189,4.0/3.0);
            double t154191 = t154190+t154188-2.0;
            double t154192 = 1.0/(t154147*t154147);
            double t154223 = t154192*t154166;
            double t154193 = -t154223+t154168;
            double t154194 = 1.0/(t154147*t154147*t154147*t154147);
            double t154197 = t154167*t154167;
            double t154198 = 1.0/pow(t154147,5.0/3.0);
            double t154199 = 1.0/sqrt(t154149);
            double t154200 = 1.0/t154163;
            double t154201 = 1.0/(t154158*t154158);
            double t154202 = b4p*t154154*t154198*(2.0/3.0);
            double t154203 = b2p*c*t154159*(1.0/3.0);
            double t154204 = b1p*c*t154159*t154199*(1.0/6.0);
            double t154205 = b3p*c*t154150*t154159*(1.0/2.0);
            double t154206 = t154202+t154203+t154204+t154205;
            double t154207 = t154200*t154201*t154206*t154165;
            double t154208 = 1.0/(t154147*t154147*t154147*t154147*t154147);
            double t154209 = 1.0/d2fz0;
            double t154210 = 1.0/Aa;
            double t154211 = b1a*t154150;
            double t154212 = b3a*t154152;
            double t154213 = b4a*t154154*t154155;
            double t154214 = b2a*c*t154148;
            double t154215 = t154211+t154212+t154213+t154214;
            double t154216 = 1.0/t154215;
            double t154217 = t154210*t154216*(1.0/2.0);
            double t154218 = t154217+1.0;
            double t154219 = log(t154218);
            double t154220 = a1a*c*t154148;
            double t154221 = t154220+1.0;
            double t154222 = pow(t154187,1.0/3.0);
            double t154224 = t154222*t154193*(4.0/3.0);
            double t154225 = pow(t154189,1.0/3.0);
            double t154300 = t154225*t154193*(4.0/3.0);
            double t154226 = -t154300+t154224;
            double t154227 = t154194*t154197;
            double t154228 = t154227-1.0;
            double t154229 = 1.0/pow(rho_a[index],1.0/3.0);
            double t154230 = c*t154229;
            double t154231 = sqrt(t154230);
            double t154232 = b1f*t154231;
            double t154233 = pow(t154230,3.0/2.0);
            double t154234 = b3f*t154233;
            double t154235 = 1.0/pow(rho_a[index],2.0/3.0);
            double t154236 = b4f*t154154*t154235;
            double t154237 = b2f*c*t154229;
            double t154238 = t154232+t154234+t154236+t154237;
            double t154239 = 1.0/pow(rho_a[index],4.0/3.0);
            double t154240 = b1p*t154231;
            double t154241 = b3p*t154233;
            double t154242 = b4p*t154154*t154235;
            double t154243 = b2p*c*t154229;
            double t154244 = t154240+t154241+t154242+t154243;
            double t154245 = 1.0/pow(rho_a[index],5.0/3.0);
            double t154246 = 1.0/sqrt(t154230);
            double t154247 = 1.0/t154238;
            double t154248 = t154173*t154247*(1.0/2.0);
            double t154249 = t154248+1.0;
            double t154250 = 1.0/t154244;
            double t154251 = t154160*t154250*(1.0/2.0);
            double t154252 = t154251+1.0;
            double t154253 = a1p*c*t154229;
            double t154254 = t154253+1.0;
            double t154255 = 1.0/t154252;
            double t154256 = 1.0/(t154244*t154244);
            double t154257 = b4p*t154154*t154245*(2.0/3.0);
            double t154258 = b2p*c*t154239*(1.0/3.0);
            double t154259 = b1p*c*t154246*t154239*(1.0/6.0);
            double t154260 = b3p*c*t154231*t154239*(1.0/2.0);
            double t154261 = t154260+t154257+t154258+t154259;
            double t154262 = t154261*t154254*t154255*t154256;
            double t154263 = log(t154252);
            double t154264 = pow(2.0,1.0/3.0);
            double t154265 = t154264*2.0;
            double t154266 = t154265-2.0;
            double t154267 = log(t154249);
            double t154268 = a1f*c*t154229;
            double t154269 = t154268+1.0;
            double t154270 = gcab*gcab;
            double t154274 = 1.0/pow(rho_a[index],8.0/3.0);
            double t154275 = gamma_aa[index]*t154274*(1.0/2.0);
            double t154276 = 1.0/pow(rho_b[index],8.0/3.0);
            double t154277 = gamma_bb[index]*t154276*(1.0/2.0);
            double t154271 = t154275+t154277;
            double t154272 = t154271*t154271;
            double t154273 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t154278 = t154270*t154270;
            double t154279 = t154272*t154272;
            double t154280 = t154270*t154272*6.0;
            double t154281 = gcab*t154270*t154271*t154272*4.0;
            double t154282 = t154278*t154279;
            double t154283 = gcab*t154271*4.0;
            double t154284 = t154280+t154281+t154282+t154283+1.0;
            double t154285 = gcab*t154271;
            double t154286 = t154285+1.0;
            double t154287 = t154270*t154272;
            double t154288 = gcab*t154271*2.0;
            double t154289 = t154287+t154288+1.0;
            double t154290 = t154270*t154272*3.0;
            double t154291 = gcab*t154270*t154271*t154272;
            double t154292 = gcab*t154271*3.0;
            double t154293 = t154290+t154291+t154292+1.0;
            double t154294 = 1.0/t154289;
            double t154295 = 1.0/t154293;
            double t154296 = 1.0/t154286;
            double t154297 = 1.0/t154284;
            double t154298 = 1.0/pow(t154147,7.0/3.0);
            double t154299 = 1.0/pow(t154147,8.0/3.0);
            double t154301 = 1.0/t154181;
            double t154302 = 1.0/(t154178*t154178);
            double t154303 = b4f*t154154*t154198*(2.0/3.0);
            double t154304 = b2f*c*t154159*(1.0/3.0);
            double t154305 = b1f*c*t154159*t154199*(1.0/6.0);
            double t154306 = b3f*c*t154150*t154159*(1.0/2.0);
            double t154307 = t154303+t154304+t154305+t154306;
            double t154308 = a1f*c*c0f*t154182*t154159*(2.0/3.0);
            double t154310 = t154301*t154302*t154307*t154184;
            double t154311 = a1p*c*c0p*t154185*t154159*(2.0/3.0);
            double t154309 = -t154310-t154311+t154207+t154308;
            double t154312 = t154206*t154206;
            double t154313 = 1.0/pow(t154149,3.0/2.0);
            double t154314 = b4p*t154154*t154299*(1.0E1/9.0);
            double t154315 = b2p*c*t154298*(4.0/9.0);
            double t154316 = b1p*c*t154199*t154298*(2.0/9.0);
            double t154317 = b3p*c*t154150*t154298*(2.0/3.0);
            double t154318 = b3p*t154154*t154199*t154299*(1.0/1.2E1);
            double t154319 = t154314+t154315+t154316+t154317+t154318-b1p*t154313*t154154*t154299*(1.0/3.6E1);
            double t154320 = 1.0/(t154158*t154158*t154158);
            double t154321 = t154200*t154320*t154312*t154165*2.0;
            double t154322 = t154307*t154307;
            double t154323 = 1.0/(t154163*t154163);
            double t154324 = 1.0/(t154158*t154158*t154158*t154158);
            double t154325 = t154310+t154311-t154207-t154308;
            double t154326 = t154192*2.0;
            double t154327 = 1.0/(t154147*t154147*t154147);
            double t154334 = t154327*t154166*2.0;
            double t154328 = -t154334+t154326;
            double t154329 = t154193*t154193;
            double t154330 = a1p*c*c0p*t154185*t154298*(8.0/9.0);
            double t154331 = 1.0/(t154147*t154147*t154147*t154147*t154147*t154147);
            double t154332 = t154208*t154197*4.0;
            double t154342 = t154166*t154167*t154194*4.0;
            double t154333 = t154332-t154342;
            double t154335 = t154225*t154328*(4.0/3.0);
            double t154336 = 1.0/pow(t154187,2.0/3.0);
            double t154337 = t154336*t154329*(4.0/9.0);
            double t154338 = 1.0/pow(t154189,2.0/3.0);
            double t154339 = t154329*t154338*(4.0/9.0);
            double t154340 = t154335+t154337+t154339-t154222*t154328*(4.0/3.0);
            double t154341 = 1.0/t154218;
            double t154343 = 1.0/(t154215*t154215);
            double t154344 = b4a*t154154*t154198*(2.0/3.0);
            double t154345 = b2a*c*t154159*(1.0/3.0);
            double t154346 = b1a*c*t154159*t154199*(1.0/6.0);
            double t154347 = b3a*c*t154150*t154159*(1.0/2.0);
            double t154348 = t154344+t154345+t154346+t154347;
            double t154349 = t154348*t154348;
            double t154350 = t154200*t154201*t154165*t154319;
            double t154351 = 1.0/t154249;
            double t154352 = b4f*t154154*t154245*(2.0/3.0);
            double t154353 = b2f*c*t154239*(1.0/3.0);
            double t154354 = b1f*c*t154246*t154239*(1.0/6.0);
            double t154355 = b3f*c*t154231*t154239*(1.0/2.0);
            double t154356 = t154352+t154353+t154354+t154355;
            double t154357 = 1.0/(t154238*t154238);
            double t154358 = 1.0/pow(rho_a[index],7.0/3.0);
            double t154359 = 1.0/pow(t154230,3.0/2.0);
            double t154360 = t154356*t154356;
            double t154361 = t154261*t154261;
            double t154362 = 1.0/(t154244*t154244*t154244);
            double t154363 = t154361*t154254*t154362*t154255*2.0;
            double t154364 = b4p*t154154*t154274*(1.0E1/9.0);
            double t154365 = b2p*c*t154358*(4.0/9.0);
            double t154366 = b3p*t154154*t154246*t154274*(1.0/1.2E1);
            double t154367 = b1p*c*t154246*t154358*(2.0/9.0);
            double t154368 = b3p*c*t154231*t154358*(2.0/3.0);
            double t154486 = b1p*t154154*t154274*t154359*(1.0/3.6E1);
            double t154369 = t154364+t154365+t154366+t154367+t154368-t154486;
            double t154370 = 1.0/(t154252*t154252);
            double t154371 = 1.0/(t154244*t154244*t154244*t154244);
            double t154372 = a1p*c*c0p*t154263*t154358*(8.0/9.0);
            double t154373 = a1f*c*c0f*t154239*t154267*(2.0/3.0);
            double t154374 = a1p*c*c0p*t154263*t154239*(2.0/3.0);
            double t154375 = t154312*t154160*t154323*t154324*t154165*(1.0/2.0);
            double t154447 = t154351*t154356*t154357*t154269;
            double t154376 = t154262+t154373-t154374-t154447;
            double t154377 = gamma_aa[index]*gamma_aa[index];
            double t154378 = gcaa*gcaa;
            double t154379 = t154377*t154377;
            double t154380 = t154378*t154378;
            double t154381 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t154382 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t154383 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t154384 = c0f*t154267*t154269*2.0;
            double t154386 = c0p*t154254*t154263*2.0;
            double t154385 = t154384-t154386;
            double t154387 = 1.0/pow(rho_b[index],1.0/3.0);
            double t154388 = c*t154387;
            double t154389 = sqrt(t154388);
            double t154390 = pow(t154388,3.0/2.0);
            double t154391 = 1.0/pow(rho_b[index],2.0/3.0);
            double t154392 = b1p*t154389;
            double t154393 = b3p*t154390;
            double t154394 = b4p*t154154*t154391;
            double t154395 = b2p*c*t154387;
            double t154396 = t154392+t154393+t154394+t154395;
            double t154397 = 1.0/t154396;
            double t154398 = t154160*t154397*(1.0/2.0);
            double t154399 = t154398+1.0;
            double t154400 = log(t154399);
            double t154401 = a1p*c*t154387;
            double t154402 = t154401+1.0;
            double t154403 = c0p*t154400*t154402*2.0;
            double t154404 = t154172*t154191*t154194*t154186*t154197;
            double t154405 = Aa*t154221*t154172*t154191*t154209*t154219*t154228*2.0;
            double t154406 = gamma_aa[index]*gcab*t154273*(1.6E1/3.0);
            double t154407 = gamma_aa[index]*gcab*t154270*t154272*t154273*1.6E1;
            double t154408 = gamma_aa[index]*t154271*t154272*t154273*t154278*(1.6E1/3.0);
            double t154409 = gamma_aa[index]*t154270*t154271*t154273*1.6E1;
            double t154410 = t154406+t154407+t154408+t154409;
            double t154411 = 1.0/(t154286*t154286);
            double t154412 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t154413 = gamma_aa[index]*gcab*t154273*(8.0/3.0);
            double t154414 = gamma_aa[index]*t154270*t154271*t154273*(8.0/3.0);
            double t154415 = t154413+t154414;
            double t154416 = 1.0/(t154293*t154293);
            double t154417 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t154418 = 1.0/(t154284*t154284);
            double t154419 = 1.0/(t154289*t154289);
            double t154420 = gamma_aa[index]*gcab*t154273*4.0;
            double t154421 = gamma_aa[index]*gcab*t154270*t154272*t154273*4.0;
            double t154422 = gamma_aa[index]*t154270*t154271*t154273*8.0;
            double t154423 = t154420+t154421+t154422;
            double t154424 = t154172*t154266*t154385;
            double t154425 = t154424+t154386;
            double t154426 = gamma_aa[index]*gcaa*t154274*4.0;
            double t154427 = gamma_aa[index]*gcaa*t154382*t154377*t154378*4.0;
            double t154428 = t154383*t154377*t154378*6.0;
            double t154429 = t154380*t154381*t154379;
            double t154430 = t154426+t154427+t154428+t154429+1.0;
            double t154431 = 1.0/t154430;
            double t154432 = gamma_aa[index]*gcaa*t154274;
            double t154433 = t154432+1.0;
            double t154434 = 1.0/t154433;
            double t154435 = gamma_aa[index]*gcaa*t154274*3.0;
            double t154436 = gamma_aa[index]*gcaa*t154382*t154377*t154378;
            double t154437 = t154383*t154377*t154378*3.0;
            double t154438 = t154435+t154436+t154437+1.0;
            double t154439 = 1.0/t154438;
            double t154440 = gamma_aa[index]*gcaa*t154274*2.0;
            double t154441 = t154383*t154377*t154378;
            double t154442 = t154440+t154441+1.0;
            double t154443 = 1.0/t154442;
            double t154444 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t154445 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t154446 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t154448 = t154172*t154266*t154376;
            double t154449 = ccaa4*t154431*t154380*t154446*t154379*(3.2E1/3.0);
            double t154450 = ccaa1*gamma_aa[index]*gcaa*t154434*t154273*(8.0/3.0);
            double t154451 = ccaa3*gamma_aa[index]*gcaa*t154445*t154439*t154377*t154378*8.0;
            double t154452 = ccaa2*t154443*t154444*t154377*t154378*(1.6E1/3.0);
            double t154453 = 1.0/(t154433*t154433);
            double t154454 = gamma_aa[index]*gcaa*t154273*8.0;
            double t154455 = gamma_aa[index]*gcaa*t154445*t154377*t154378*8.0;
            double t154456 = t154444*t154377*t154378*1.6E1;
            double t154457 = t154454+t154455+t154456;
            double t154458 = 1.0/(t154438*t154438);
            double t154459 = gamma_aa[index]*gcaa*t154273*(3.2E1/3.0);
            double t154460 = gamma_aa[index]*gcaa*t154445*t154377*t154378*3.2E1;
            double t154461 = t154444*t154377*t154378*3.2E1;
            double t154462 = t154380*t154446*t154379*(3.2E1/3.0);
            double t154463 = t154460+t154461+t154462+t154459;
            double t154464 = 1.0/(t154430*t154430);
            double t154465 = gamma_aa[index]*gcaa*t154273*(1.6E1/3.0);
            double t154466 = t154444*t154377*t154378*(1.6E1/3.0);
            double t154467 = t154465+t154466;
            double t154468 = 1.0/(t154442*t154442);
            double t154469 = t154450+t154451+t154452+t154449-ccaa1*t154444*t154453*t154377*t154378*(8.0/3.0)- \
               ccaa4*t154380*t154381*t154463*t154464*t154379-ccaa2*t154383*t154377*t154467*t154378*t154468-ccaa3* \
               gamma_aa[index]*gcaa*t154382*t154457*t154377*t154458*t154378;
            double t154470 = -t154262+t154374+t154448;
            double t154471 = 1.0/pow(rho_a[index],1.0E1);
            double t154472 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t154473 = ccaa4*t154431*t154380*t154381*t154379;
            double t154474 = ccaa1*gamma_aa[index]*gcaa*t154434*t154274;
            double t154475 = ccaa3*gamma_aa[index]*gcaa*t154382*t154439*t154377*t154378;
            double t154476 = ccaa2*t154443*t154383*t154377*t154378;
            double t154477 = ccaa0+t154473+t154474+t154475+t154476;
            double t154478 = 1.0/(t154238*t154238*t154238);
            double t154479 = b4f*t154154*t154274*(1.0E1/9.0);
            double t154480 = b2f*c*t154358*(4.0/9.0);
            double t154481 = b3f*t154154*t154246*t154274*(1.0/1.2E1);
            double t154482 = b1f*c*t154246*t154358*(2.0/9.0);
            double t154483 = b3f*c*t154231*t154358*(2.0/3.0);
            double t154484 = t154480+t154481+t154482+t154483+t154479-b1f*t154154*t154274*t154359*(1.0/3.6E1);
            double t154485 = t154351*t154357*t154484*t154269;
            double t154487 = t154254*t154255*t154256*t154369;
            double t154488 = 1.0/(t154249*t154249);
            double t154489 = 1.0/(t154238*t154238*t154238*t154238);
            double t154490 = t154360*t154173*t154269*t154488*t154489*(1.0/2.0);
            double t154491 = t154160*t154361*t154370*t154254*t154371*(1.0/2.0);
            double t154492 = a1f*c*t154351*t154239*t154356*t154357*(2.0/3.0);
            double t154493 = a1p*c*t154261*t154255*t154256*t154239*(2.0/3.0);
            double t154494 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t154495 = 1.0/(omega*omega);
            double t154496 = pow(t154494,2.0/3.0);
            double t154499 = t154495*t154496;
            double t154497 = exp(-t154499);
            double t154498 = 1.0/pow(t154494,1.0/3.0);
            double t154500 = omega*omega;
            double t154501 = t154497-1.0;
            double t154502 = 1.0/pow(t154494,2.0/3.0);
            double t154503 = 1.0/pow(t154494,4.0/3.0);
            double t154504 = 1.0/omega;
            double t154505 = t154500*t154501*t154502*(1.0/2.0);
            double t154506 = t154505-t154497+3.0/2.0;
            double t154507 = gx*gx;
            double t154508 = t154507*t154507;
            double t154509 = pow(rho_a[index],1.0/3.0);
            double t154510 = pow(t154494,1.0/3.0);
            double t154511 = t154510*t154504;
            double t154512 = erf(t154511);
            double t154513 = t154512*(3.991211251234741E15/2.251799813685248E15);
            double t154545 = omega*t154506*t154498;
            double t154514 = t154513-t154545;
            double t154515 = gamma_aa[index]*gx*t154274*4.0;
            double t154516 = gamma_aa[index]*gx*t154507*t154382*t154377*4.0;
            double t154517 = t154507*t154383*t154377*6.0;
            double t154518 = t154381*t154508*t154379;
            double t154519 = t154515+t154516+t154517+t154518+1.0;
            double t154520 = 1.0/t154519;
            double t154521 = gamma_aa[index]*gx*t154274;
            double t154522 = t154521+1.0;
            double t154523 = 1.0/t154522;
            double t154524 = gamma_aa[index]*gx*t154274*3.0;
            double t154525 = gamma_aa[index]*gx*t154507*t154382*t154377;
            double t154526 = t154507*t154383*t154377*3.0;
            double t154527 = t154524+t154525+t154526+1.0;
            double t154528 = 1.0/t154527;
            double t154529 = gamma_aa[index]*gx*t154274*2.0;
            double t154530 = t154507*t154383*t154377;
            double t154531 = t154530+t154529+1.0;
            double t154532 = 1.0/t154531;
            double t154533 = 1.0/rho_a[index];
            double t154534 = t154533*t154497*(1.0/3.0);
            double t154535 = 1.0/pow(t154494,5.0/3.0);
            double t154536 = t154500*t154501*t154535*(2.778046668940015E15/1.40737488355328E14);
            double t154540 = t154495*t154497*t154498*(2.778046668940015E15/7.0368744177664E13);
            double t154537 = -t154540+t154534+t154536;
            double t154538 = 1.0/sqrt(3.141592653589793);
            double t154539 = omega*t154503*t154506*(2.778046668940015E15/1.40737488355328E14);
            double t154541 = omega*t154537*t154498;
            double t154542 = t154502*t154504*t154538*t154497*(1.108777112152858E31/1.584563250285287E29);
            double t154543 = t154541+t154542+t154539;
            double t154544 = 1.0/pow(t154494,7.0/3.0);
            double t154546 = cx4*t154520*t154381*t154508*t154379;
            double t154547 = cx1*gamma_aa[index]*gx*t154523*t154274;
            double t154548 = cx3*gamma_aa[index]*gx*t154507*t154382*t154528*t154377;
            double t154549 = cx2*t154532*t154507*t154383*t154377;
            double t154550 = cx0+t154546+t154547+t154548+t154549;
            double t154551 = pow(rho_a[index],4.0/3.0);
            double t154552 = omega*t154503*t154514*(2.778046668940015E15/1.05553116266496E14);
            double t154553 = cx4*t154520*t154508*t154446*t154379*(3.2E1/3.0);
            double t154554 = cx1*gamma_aa[index]*gx*t154523*t154273*(8.0/3.0);
            double t154555 = cx3*gamma_aa[index]*gx*t154507*t154445*t154528*t154377*8.0;
            double t154556 = cx2*t154532*t154444*t154507*t154377*(1.6E1/3.0);
            double t154557 = 1.0/(t154522*t154522);
            double t154558 = gamma_aa[index]*gx*t154273*8.0;
            double t154559 = gamma_aa[index]*gx*t154507*t154445*t154377*8.0;
            double t154560 = t154444*t154507*t154377*1.6E1;
            double t154561 = t154560+t154558+t154559;
            double t154562 = 1.0/(t154527*t154527);
            double t154563 = gamma_aa[index]*gx*t154273*(3.2E1/3.0);
            double t154564 = gamma_aa[index]*gx*t154507*t154445*t154377*3.2E1;
            double t154565 = t154444*t154507*t154377*3.2E1;
            double t154566 = t154508*t154446*t154379*(3.2E1/3.0);
            double t154567 = t154563+t154564+t154565+t154566;
            double t154568 = 1.0/(t154519*t154519);
            double t154569 = gamma_aa[index]*gx*t154273*(1.6E1/3.0);
            double t154570 = t154444*t154507*t154377*(1.6E1/3.0);
            double t154571 = t154570+t154569;
            double t154572 = 1.0/(t154531*t154531);
            double t154573 = t154553+t154554+t154555+t154556-cx1*t154444*t154507*t154377*t154557*(8.0/3.0)-cx2* \
               t154507*t154571*t154383*t154572*t154377-cx4*t154381*t154508*t154567*t154379*t154568-cx3*gamma_aa[index]* \
               gx*t154507*t154561*t154382*t154562*t154377;
            double t154574 = t154552-omega*t154543*t154498*(4.0/3.0);
            double t154575 = omega*t154514*t154498*(4.0/3.0);
            double t154576 = t154575-1.0;
            v_rho_a_rho_a_[index] = (rho_a[index]*t154425+rho_b[index]*(t154403-t154172*t154266*(t154403-c0f* \
               log((t154173*(1.0/2.0))/(b1f*t154389+b3f*t154390+b2f*c*t154387+b4f*t154154*t154391)+1.0)*(a1f*c*t154387+ \
               1.0)*2.0))-t154147*(t154404+t154405+t154196))*(-ccab2*t154270*t154272*t154419*(gamma_aa[index]*gcab* \
               t154417*(8.8E1/9.0)+t154412*t154270*t154377*(3.2E1/9.0)+gamma_aa[index]*t154270*t154271*t154417*(8.8E1/ \
               9.0))+ccab2*t154270*(t154415*t154415)*t154272*1.0/(t154289*t154289*t154289)*2.0+ccab4*(t154410*t154410) \
               *1.0/(t154284*t154284*t154284)*t154278*t154279*2.0+ccab1*gamma_aa[index]*gcab*t154417*t154296*(4.4E1/ \
               9.0)-ccab1*t154411*t154412*t154270*t154377*(3.2E1/9.0)+ccab2*t154412*t154270*t154294*t154377*(3.2E1/ \
               9.0)-ccab4*t154418*t154278*t154279*(gamma_aa[index]*gcab*t154417*(1.76E2/9.0)+t154412*t154270*t154377* \
               (6.4E1/3.0)+gamma_aa[index]*t154270*t154271*t154417*(1.76E2/3.0)+t154412*t154272*t154278*t154377*(6.4E1/ \
               3.0)+gamma_aa[index]*gcab*t154270*t154272*t154417*(1.76E2/3.0)+gamma_aa[index]*t154271*t154272*t154417* \
               t154278*(1.76E2/9.0)+gcab*t154412*t154270*t154271*t154377*(1.28E2/3.0))+ccab4*t154412*t154272*t154278* \
               t154377*t154297*(6.4E1/3.0)-ccab1*gamma_aa[index]*t154411*t154270*t154271*t154417*(4.4E1/9.0)+ccab2* \
               gamma_aa[index]*t154270*t154271*t154417*t154294*(8.8E1/9.0)+ccab3*gcab*t154270*(t154423*t154423)*t154271* \
               t154272*1.0/(t154293*t154293*t154293)*2.0+ccab3*gamma_aa[index]*gcab*t154270*t154272*t154417*t154295* \
               (4.4E1/3.0)-ccab2*gamma_aa[index]*t154270*t154271*t154415*t154273*t154419*(1.6E1/3.0)+ccab4*gamma_aa[index]* \
               t154271*t154272*t154417*t154278*t154297*(1.76E2/9.0)+ccab3*gcab*t154412*t154270*t154271*t154295*t154377* \
               (3.2E1/3.0)+ccab1*gcab*t154412*t154270*t154271*1.0/(t154286*t154286*t154286)*t154377*(3.2E1/9.0)-ccab3* \
               gcab*t154270*t154271*t154272*t154416*(gamma_aa[index]*gcab*t154417*(4.4E1/3.0)+t154412*t154270*t154377* \
               (3.2E1/3.0)+gamma_aa[index]*t154270*t154271*t154417*(8.8E1/3.0)+gamma_aa[index]*gcab*t154270*t154272* \
               t154417*(4.4E1/3.0)+gcab*t154412*t154270*t154271*t154377*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t154270* \
               t154423*t154272*t154416*t154273*8.0-ccab4*gamma_aa[index]*t154410*t154271*t154272*t154273*t154418* \
               t154278*(3.2E1/3.0))+t154470*t154477*2.0+t154425*t154469*2.0+(t154404+t154405+t154196+rho_a[index]* \
               (-t154262+t154374+t154172*t154266*(t154262+t154373-t154351*t154356*t154357*t154269-a1p*c*c0p*t154263* \
               t154239*(2.0/3.0)))+t154147*(t154207-a1p*c*c0p*t154185*t154159*(2.0/3.0)-t154172*t154208*t154191*t154186* \
               t154197*4.0-t154172*t154191*t154309*t154194*t154197+t154172*t154226*t154194*t154186*t154197+t154172* \
               t154191*t154166*t154167*t154194*t154186*4.0-Aa*t154221*t154333*t154172*t154191*t154209*t154219*2.0+ \
               Aa*t154221*t154172*t154226*t154209*t154219*t154228*2.0+t154221*t154341*t154172*t154343*t154191*t154209* \
               t154228*t154348-Aa*a1a*c*t154172*t154191*t154209*t154219*t154228*t154159*(2.0/3.0))-c0p*t154254*t154263* \
               2.0-t154172*t154266*t154385)*(ccab1*gamma_aa[index]*gcab*t154273*t154296*(4.0/3.0)-ccab2*t154270*t154415* \
               t154272*t154419-ccab4*t154410*t154418*t154278*t154279-ccab1*gamma_aa[index]*t154411*t154270*t154271* \
               t154273*(4.0/3.0)+ccab2*gamma_aa[index]*t154270*t154271*t154273*t154294*(8.0/3.0)+ccab3*gamma_aa[index]* \
               gcab*t154270*t154272*t154273*t154295*4.0+ccab4*gamma_aa[index]*t154271*t154272*t154273*t154278*t154297* \
               (1.6E1/3.0)-ccab3*gcab*t154270*t154423*t154271*t154272*t154416)*2.0-(ccab0+ccab1*gcab*t154271*t154296+ \
               ccab2*t154270*t154272*t154294+ccab4*t154278*t154279*t154297+ccab3*gcab*t154270*t154271*t154272*t154295) \
               *(-t154147*(-t154321-t154330+t154350+t154375+t154172*t154191*t154194*t154197*(t154321+t154330-t154350- \
               t154375-t154301*t154322*t154184*1.0/(t154178*t154178*t154178)*2.0+t154301*t154302*t154184*(b2f*c*t154298* \
               (4.0/9.0)+b4f*t154154*t154299*(1.0E1/9.0)+b1f*c*t154199*t154298*(2.0/9.0)+b3f*c*t154150*t154298*(2.0/ \
               3.0)-b1f*t154313*t154154*t154299*(1.0/3.6E1)+b3f*t154154*t154199*t154299*(1.0/1.2E1))+t154322*1.0/ \
               (t154181*t154181)*t154173*t154184*1.0/(t154178*t154178*t154178*t154178)*(1.0/2.0)-a1f*c*c0f*t154182* \
               t154298*(8.0/9.0)+a1f*c*t154301*t154302*t154307*t154159*(2.0/3.0)-a1p*c*t154200*t154201*t154206*t154159* \
               (2.0/3.0))+t154172*t154208*t154325*t154191*t154197*8.0-t154331*t154172*t154191*t154186*t154197*2.0E1- \
               t154172*t154226*t154325*t154194*t154197*2.0+t154172*t154208*t154226*t154186*t154197*8.0-t154340*t154172* \
               t154194*t154186*t154197-t154172*t154191*t154167*t154194*t154186*1.2E1+t154172*t154208*t154191*t154166* \
               t154167*t154186*3.2E1+t154172*t154191*t154309*t154166*t154167*t154194*8.0-t154172*t154226*t154166* \
               t154167*t154194*t154186*8.0+a1p*c*t154200*t154201*t154206*t154159*(2.0/3.0)-Aa*t154221*t154340*t154172* \
               t154209*t154219*t154228*2.0+Aa*t154221*t154333*t154172*t154226*t154209*t154219*4.0-Aa*t154221*t154172* \
               t154191*t154209*t154219*(t154331*t154197*2.0E1+t154167*t154194*1.2E1-t154208*t154166*t154167*3.2E1) \
               *2.0+t154221*t154341*t154333*t154172*t154343*t154191*t154209*t154348*2.0-t154221*t154341*t154172*t154226* \
               t154343*t154209*t154228*t154348*2.0-t154221*1.0/(t154215*t154215*t154215)*t154341*t154172*t154191* \
               t154209*t154228*t154349*2.0+t154221*t154341*t154172*t154343*t154191*t154209*t154228*(b2a*c*t154298* \
               (4.0/9.0)+b4a*t154154*t154299*(1.0E1/9.0)+b1a*c*t154199*t154298*(2.0/9.0)+b3a*c*t154150*t154298*(2.0/ \
               3.0)-b1a*t154313*t154154*t154299*(1.0/3.6E1)+b3a*t154154*t154199*t154299*(1.0/1.2E1))-Aa*a1a*c*t154333* \
               t154172*t154191*t154209*t154219*t154159*(4.0/3.0)+Aa*a1a*c*t154172*t154226*t154209*t154219*t154228* \
               t154159*(4.0/3.0)-Aa*a1a*c*t154172*t154191*t154209*t154219*t154228*t154298*(8.0/9.0)+t154210*t154221* \
               1.0/(t154215*t154215*t154215*t154215)*t154172*t154191*t154209*1.0/(t154218*t154218)*t154228*t154349* \
               (1.0/2.0)+a1a*c*t154341*t154172*t154343*t154191*t154209*t154228*t154159*t154348*(2.0/3.0))+rho_a[index]* \
               (-t154363-t154372+t154491+t154493+t154487+t154172*t154266*(t154363+t154372+t154490+t154492+t154485- \
               t154351*t154360*t154269*t154478*2.0-t154254*t154255*t154256*t154369-a1f*c*c0f*t154267*t154358*(8.0/ \
               9.0)-t154160*t154361*t154370*t154254*t154371*(1.0/2.0)-a1p*c*t154261*t154255*t154256*t154239*(2.0/ \
               3.0)))+t154172*t154266*t154376*2.0+t154200*t154201*t154206*t154165*2.0-t154261*t154254*t154255*t154256* \
               2.0+a1p*c*c0p*t154263*t154239*(4.0/3.0)-a1p*c*c0p*t154185*t154159*(4.0/3.0)+t154172*t154325*t154191* \
               t154194*t154197*2.0-t154172*t154208*t154191*t154186*t154197*8.0+t154172*t154226*t154194*t154186*t154197* \
               2.0+t154172*t154191*t154166*t154167*t154194*t154186*8.0-Aa*t154221*t154333*t154172*t154191*t154209* \
               t154219*4.0+Aa*t154221*t154172*t154226*t154209*t154219*t154228*4.0+t154221*t154341*t154172*t154343* \
               t154191*t154209*t154228*t154348*2.0-Aa*a1a*c*t154172*t154191*t154209*t154219*t154228*t154159*(4.0/ \
               3.0))-rho_a[index]*t154425*(ccaa1*gamma_aa[index]*gcaa*t154434*t154417*(8.8E1/9.0)-ccaa1*t154412*t154453* \
               t154377*t154378*2.4E1+ccaa2*t154412*t154443*t154377*t154378*(3.04E2/9.0)+ccaa4*t154431*t154380*t154472* \
               t154379*(1.12E3/9.0)-ccaa4*t154380*t154463*t154446*t154464*t154379*(6.4E1/3.0)-ccaa2*t154444*t154377* \
               t154467*t154378*t154468*(3.2E1/3.0)-ccaa2*t154383*t154377*t154378*t154468*(gamma_aa[index]*gcaa*t154417* \
               (1.76E2/9.0)+t154412*t154377*t154378*(3.04E2/9.0))-ccaa4*t154380*t154381*t154464*t154379*(gamma_aa[index]* \
               gcaa*t154417*(3.52E2/9.0)+t154412*t154377*t154378*(6.08E2/3.0)+t154380*t154472*t154379*(1.12E3/9.0) \
               +gamma_aa[index]*gcaa*t154471*t154377*t154378*2.88E2)+ccaa4*1.0/(t154430*t154430*t154430)*t154380* \
               t154381*(t154463*t154463)*t154379*2.0+ccaa2*1.0/(t154442*t154442*t154442)*t154383*t154377*(t154467* \
               t154467)*t154378*2.0+ccaa3*gamma_aa[index]*gcaa*t154471*t154439*t154377*t154378*7.2E1+ccaa1*gamma_aa[index]* \
               gcaa*1.0/(t154433*t154433*t154433)*t154471*t154377*t154378*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa* \
               t154382*1.0/(t154438*t154438*t154438)*(t154457*t154457)*t154377*t154378*2.0-ccaa3*gamma_aa[index]* \
               gcaa*t154382*t154377*t154458*t154378*(gamma_aa[index]*gcaa*t154417*(8.8E1/3.0)+t154412*t154377*t154378* \
               (3.04E2/3.0)+gamma_aa[index]*gcaa*t154471*t154377*t154378*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t154445* \
               t154457*t154377*t154458*t154378*1.6E1)+rho_a[index]*t154477*(-t154363-t154372+t154491+t154493+t154487+ \
               t154172*t154266*(t154363+t154372+t154490-t154491+t154492-t154493+t154485-t154487-t154351*t154360*t154269* \
               t154478*2.0-a1f*c*c0f*t154267*t154358*(8.0/9.0)))-rho_a[index]*t154470*t154469*2.0-c0*t154551*t154576* \
               (cx1*gamma_aa[index]*gx*t154523*t154417*(8.8E1/9.0)-cx1*t154412*t154507*t154377*t154557*2.4E1+cx2* \
               t154412*t154532*t154507*t154377*(3.04E2/9.0)+cx4*t154520*t154472*t154508*t154379*(1.12E3/9.0)-cx2* \
               t154444*t154507*t154571*t154572*t154377*(3.2E1/3.0)-cx4*t154508*t154446*t154567*t154379*t154568*(6.4E1/ \
               3.0)-cx2*t154507*t154383*t154572*t154377*(gamma_aa[index]*gx*t154417*(1.76E2/9.0)+t154412*t154507* \
               t154377*(3.04E2/9.0))-cx4*t154381*t154508*t154379*t154568*(gamma_aa[index]*gx*t154417*(3.52E2/9.0) \
               +t154412*t154507*t154377*(6.08E2/3.0)+t154472*t154508*t154379*(1.12E3/9.0)+gamma_aa[index]*gx*t154471* \
               t154507*t154377*2.88E2)+cx2*1.0/(t154531*t154531*t154531)*t154507*(t154571*t154571)*t154383*t154377* \
               2.0+cx4*t154381*t154508*1.0/(t154519*t154519*t154519)*(t154567*t154567)*t154379*2.0+cx3*gamma_aa[index]* \
               gx*t154471*t154507*t154528*t154377*7.2E1+cx1*gamma_aa[index]*gx*1.0/(t154522*t154522*t154522)*t154471* \
               t154507*t154377*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t154507*(t154561*t154561)*t154382*1.0/(t154527* \
               t154527*t154527)*t154377*2.0-cx3*gamma_aa[index]*gx*t154507*t154382*t154562*t154377*(gamma_aa[index]* \
               gx*t154417*(8.8E1/3.0)+t154412*t154507*t154377*(3.04E2/3.0)+gamma_aa[index]*gx*t154471*t154507*t154377* \
               7.2E1)-cx3*gamma_aa[index]*gx*t154507*t154561*t154445*t154562*t154377*1.6E1)-c0*t154235*t154550*t154576* \
               (4.0/9.0)+c0*t154550*t154509*t154574*(8.0/3.0)-c0*t154551*t154573*t154574*2.0+c0*t154509*t154573*t154576* \
               (8.0/3.0)+c0*t154550*t154551*(omega*t154503*t154543*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t154514*t154544*(7.717543294808713E30/3.713820117856141E27)+omega*t154498*(omega*t154503*t154537*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t154506*t154544*(7.717543294808713E30/4.951760157141521E27)+omega*t154498* \
               (1.0/(rho_a[index]*rho_a[index])*t154497*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t154502*t154497*(7.717543294808713E30/ \
               4.951760157141521E27)+t154500*t154501*1.0/pow(t154494,8.0/3.0)*(3.858771647404357E31/1.980704062856608E28) \
               -t154503*t154495*t154497*(7.717543294808713E30/9.903520314283042E27)+t154533*t154495*t154497*t154498* \
               (2.778046668940015E15/2.11106232532992E14))+t154504*t154535*t154538*t154497*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t154533*t154538*t154497*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else if (rho_a[index] > cutoff_) {
            double t157912 = 1.0/pow(rho_a[index],1.0/3.0);
            double t157913 = c*t157912;
            double t157914 = sqrt(t157913);
            double t157915 = b1f*t157914;
            double t157916 = pow(t157913,3.0/2.0);
            double t157917 = b3f*t157916;
            double t157918 = c*c;
            double t157919 = 1.0/pow(rho_a[index],2.0/3.0);
            double t157920 = b4f*t157918*t157919;
            double t157921 = b2f*c*t157912;
            double t157922 = t157920+t157921+t157915+t157917;
            double t157923 = 1.0/pow(rho_a[index],4.0/3.0);
            double t157924 = b1p*t157914;
            double t157925 = b3p*t157916;
            double t157926 = b4p*t157918*t157919;
            double t157927 = b2p*c*t157912;
            double t157928 = t157924+t157925+t157926+t157927;
            double t157929 = 1.0/pow(rho_a[index],5.0/3.0);
            double t157930 = 1.0/sqrt(t157913);
            double t157931 = 1.0/c0f;
            double t157932 = 1.0/t157922;
            double t157933 = t157931*t157932*(1.0/2.0);
            double t157934 = t157933+1.0;
            double t157935 = 1.0/c0p;
            double t157936 = 1.0/t157928;
            double t157937 = t157935*t157936*(1.0/2.0);
            double t157938 = t157937+1.0;
            double t157939 = a1p*c*t157912;
            double t157940 = t157939+1.0;
            double t157941 = 1.0/t157938;
            double t157942 = 1.0/(t157928*t157928);
            double t157943 = b4p*t157918*t157929*(2.0/3.0);
            double t157944 = b2p*c*t157923*(1.0/3.0);
            double t157945 = b1p*c*t157930*t157923*(1.0/6.0);
            double t157946 = b3p*c*t157914*t157923*(1.0/2.0);
            double t157947 = t157943+t157944+t157945+t157946;
            double t157948 = t157940*t157941*t157942*t157947;
            double t157949 = log(t157938);
            double t157950 = gamma_aa[index]*gamma_aa[index];
            double t157951 = gcaa*gcaa;
            double t157952 = t157950*t157950;
            double t157953 = t157951*t157951;
            double t157954 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t157955 = 1.0/pow(rho_a[index],8.0/3.0);
            double t157956 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t157957 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t157958 = pow(2.0,1.0/3.0);
            double t157959 = t157958*2.0;
            double t157960 = t157959-2.0;
            double t157961 = two_13*2.0;
            double t157962 = t157961-2.0;
            double t157963 = 1.0/t157962;
            double t157964 = log(t157934);
            double t157965 = a1f*c*t157912;
            double t157966 = t157965+1.0;
            double t157967 = gamma_aa[index]*gcaa*t157955*4.0;
            double t157968 = gamma_aa[index]*gcaa*t157950*t157951*t157956*4.0;
            double t157969 = t157950*t157951*t157957*6.0;
            double t157970 = t157952*t157953*t157954;
            double t157971 = t157970+t157967+t157968+t157969+1.0;
            double t157972 = 1.0/t157971;
            double t157973 = gamma_aa[index]*gcaa*t157955;
            double t157974 = t157973+1.0;
            double t157975 = 1.0/t157974;
            double t157976 = gamma_aa[index]*gcaa*t157955*3.0;
            double t157977 = gamma_aa[index]*gcaa*t157950*t157951*t157956;
            double t157978 = t157950*t157951*t157957*3.0;
            double t157979 = t157976+t157977+t157978+1.0;
            double t157980 = 1.0/t157979;
            double t157981 = gamma_aa[index]*gcaa*t157955*2.0;
            double t157982 = t157950*t157951*t157957;
            double t157983 = t157981+t157982+1.0;
            double t157984 = 1.0/t157983;
            double t157985 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t157986 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t157987 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t157988 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t157989 = 1.0/t157934;
            double t157990 = 1.0/(t157922*t157922);
            double t157991 = b4f*t157918*t157929*(2.0/3.0);
            double t157992 = b2f*c*t157923*(1.0/3.0);
            double t157993 = b1f*c*t157930*t157923*(1.0/6.0);
            double t157994 = b3f*c*t157914*t157923*(1.0/2.0);
            double t157995 = t157991+t157992+t157993+t157994;
            double t157996 = a1f*c*c0f*t157923*t157964*(2.0/3.0);
            double t157997 = a1p*c*c0p*t157923*t157949*(2.0/3.0);
            double t157998 = ccaa4*t157952*t157953*t157972*t157988*(3.2E1/3.0);
            double t157999 = ccaa1*gamma_aa[index]*gcaa*t157975*t157986*(8.0/3.0);
            double t158000 = ccaa3*gamma_aa[index]*gcaa*t157950*t157951*t157980*t157987*8.0;
            double t158001 = ccaa2*t157950*t157951*t157984*t157985*(1.6E1/3.0);
            double t158002 = 1.0/(t157974*t157974);
            double t158003 = gamma_aa[index]*gcaa*t157986*8.0;
            double t158004 = gamma_aa[index]*gcaa*t157950*t157951*t157987*8.0;
            double t158005 = t157950*t157951*t157985*1.6E1;
            double t158006 = t158003+t158004+t158005;
            double t158007 = 1.0/(t157979*t157979);
            double t158008 = gamma_aa[index]*gcaa*t157986*(3.2E1/3.0);
            double t158009 = gamma_aa[index]*gcaa*t157950*t157951*t157987*3.2E1;
            double t158010 = t157950*t157951*t157985*3.2E1;
            double t158011 = t157952*t157953*t157988*(3.2E1/3.0);
            double t158012 = t158010+t158011+t158008+t158009;
            double t158013 = 1.0/(t157971*t157971);
            double t158014 = gamma_aa[index]*gcaa*t157986*(1.6E1/3.0);
            double t158015 = t157950*t157951*t157985*(1.6E1/3.0);
            double t158016 = t158014+t158015;
            double t158017 = 1.0/(t157983*t157983);
            double t158018 = t158000+t158001+t157998+t157999-ccaa1*t158002*t157950*t157951*t157985*(8.0/3.0)- \
               ccaa4*t158012*t158013*t157952*t157953*t157954-ccaa2*t158016*t158017*t157950*t157951*t157957-ccaa3* \
               gamma_aa[index]*gcaa*t158006*t158007*t157950*t157951*t157956;
            double t158019 = c0f*t157964*t157966*2.0;
            double t158020 = c0p*t157940*t157949*2.0;
            double t158021 = 1.0/pow(rho_a[index],1.0E1);
            double t158022 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t158023 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t158024 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t158025 = ccaa4*t157952*t157953*t157954*t157972;
            double t158026 = ccaa1*gamma_aa[index]*gcaa*t157955*t157975;
            double t158027 = ccaa3*gamma_aa[index]*gcaa*t157950*t157951*t157980*t157956;
            double t158028 = ccaa2*t157950*t157951*t157957*t157984;
            double t158029 = ccaa0+t158025+t158026+t158027+t158028;
            double t158030 = 1.0/pow(rho_a[index],7.0/3.0);
            double t158031 = 1.0/pow(t157913,3.0/2.0);
            double t158032 = t157995*t157995;
            double t158033 = t157947*t157947;
            double t158034 = 1.0/(t157928*t157928*t157928);
            double t158035 = t158033*t158034*t157940*t157941*2.0;
            double t158036 = b4p*t157918*t157955*(1.0E1/9.0);
            double t158037 = b2p*c*t158030*(4.0/9.0);
            double t158038 = b3p*t157930*t157918*t157955*(1.0/1.2E1);
            double t158039 = b1p*c*t158030*t157930*(2.0/9.0);
            double t158040 = b3p*c*t158030*t157914*(2.0/3.0);
            double t158041 = t158040+t158036+t158037+t158038+t158039-b1p*t158031*t157918*t157955*(1.0/3.6E1);
            double t158042 = 1.0/(t157938*t157938);
            double t158043 = 1.0/(t157928*t157928*t157928*t157928);
            double t158044 = a1p*c*c0p*t158030*t157949*(8.0/9.0);
            double t158045 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t158046 = 1.0/(omega*omega);
            double t158047 = pow(t158045,2.0/3.0);
            double t158050 = t158046*t158047;
            double t158048 = exp(-t158050);
            double t158049 = 1.0/pow(t158045,1.0/3.0);
            double t158051 = omega*omega;
            double t158052 = t158048-1.0;
            double t158053 = 1.0/pow(t158045,2.0/3.0);
            double t158054 = 1.0/pow(t158045,4.0/3.0);
            double t158055 = 1.0/omega;
            double t158056 = t158051*t158052*t158053*(1.0/2.0);
            double t158057 = t158056-t158048+3.0/2.0;
            double t158058 = gx*gx;
            double t158059 = t158058*t158058;
            double t158060 = pow(rho_a[index],1.0/3.0);
            double t158061 = pow(t158045,1.0/3.0);
            double t158062 = t158061*t158055;
            double t158063 = erf(t158062);
            double t158064 = t158063*(3.991211251234741E15/2.251799813685248E15);
            double t158096 = omega*t158057*t158049;
            double t158065 = t158064-t158096;
            double t158066 = gamma_aa[index]*gx*t157955*4.0;
            double t158067 = gamma_aa[index]*gx*t157950*t158058*t157956*4.0;
            double t158068 = t157950*t158058*t157957*6.0;
            double t158069 = t158059*t157952*t157954;
            double t158070 = t158066+t158067+t158068+t158069+1.0;
            double t158071 = 1.0/t158070;
            double t158072 = gamma_aa[index]*gx*t157955;
            double t158073 = t158072+1.0;
            double t158074 = 1.0/t158073;
            double t158075 = gamma_aa[index]*gx*t157955*3.0;
            double t158076 = gamma_aa[index]*gx*t157950*t158058*t157956;
            double t158077 = t157950*t158058*t157957*3.0;
            double t158078 = t158075+t158076+t158077+1.0;
            double t158079 = 1.0/t158078;
            double t158080 = gamma_aa[index]*gx*t157955*2.0;
            double t158081 = t157950*t158058*t157957;
            double t158082 = t158080+t158081+1.0;
            double t158083 = 1.0/t158082;
            double t158084 = 1.0/rho_a[index];
            double t158085 = t158048*t158084*(1.0/3.0);
            double t158086 = 1.0/pow(t158045,5.0/3.0);
            double t158087 = t158051*t158052*t158086*(2.778046668940015E15/1.40737488355328E14);
            double t158091 = t158046*t158048*t158049*(2.778046668940015E15/7.0368744177664E13);
            double t158088 = -t158091+t158085+t158087;
            double t158089 = 1.0/sqrt(3.141592653589793);
            double t158090 = omega*t158054*t158057*(2.778046668940015E15/1.40737488355328E14);
            double t158092 = omega*t158049*t158088;
            double t158093 = t158053*t158055*t158048*t158089*(1.108777112152858E31/1.584563250285287E29);
            double t158094 = t158090+t158092+t158093;
            double t158095 = 1.0/pow(t158045,7.0/3.0);
            double t158097 = cx4*t158071*t158059*t157952*t157954;
            double t158098 = cx1*gamma_aa[index]*gx*t158074*t157955;
            double t158099 = cx3*gamma_aa[index]*gx*t157950*t158058*t158079*t157956;
            double t158100 = cx2*t158083*t157950*t158058*t157957;
            double t158101 = cx0+t158100+t158097+t158098+t158099;
            double t158102 = pow(rho_a[index],4.0/3.0);
            double t158103 = omega*t158054*t158065*(2.778046668940015E15/1.05553116266496E14);
            double t158104 = cx4*t158071*t158059*t157952*t157988*(3.2E1/3.0);
            double t158105 = cx1*gamma_aa[index]*gx*t158074*t157986*(8.0/3.0);
            double t158106 = cx3*gamma_aa[index]*gx*t157950*t158058*t158079*t157987*8.0;
            double t158107 = cx2*t158083*t157950*t158058*t157985*(1.6E1/3.0);
            double t158108 = 1.0/(t158073*t158073);
            double t158109 = gamma_aa[index]*gx*t157986*8.0;
            double t158110 = gamma_aa[index]*gx*t157950*t158058*t157987*8.0;
            double t158111 = t157950*t158058*t157985*1.6E1;
            double t158112 = t158110+t158111+t158109;
            double t158113 = 1.0/(t158078*t158078);
            double t158114 = gamma_aa[index]*gx*t157986*(3.2E1/3.0);
            double t158115 = gamma_aa[index]*gx*t157950*t158058*t157987*3.2E1;
            double t158116 = t157950*t158058*t157985*3.2E1;
            double t158117 = t158059*t157952*t157988*(3.2E1/3.0);
            double t158118 = t158114+t158115+t158116+t158117;
            double t158119 = 1.0/(t158070*t158070);
            double t158120 = gamma_aa[index]*gx*t157986*(1.6E1/3.0);
            double t158121 = t157950*t158058*t157985*(1.6E1/3.0);
            double t158122 = t158120+t158121;
            double t158123 = 1.0/(t158082*t158082);
            double t158124 = t158104+t158105+t158106+t158107-cx1*t158108*t157950*t158058*t157985*(8.0/3.0)-cx2* \
               t158122*t158123*t157950*t158058*t157957-cx4*t158118*t158119*t158059*t157952*t157954-cx3*gamma_aa[index]* \
               gx*t158112*t158113*t157950*t158058*t157956;
            double t158125 = t158103-omega*t158049*t158094*(4.0/3.0);
            double t158126 = omega*t158065*t158049*(4.0/3.0);
            double t158127 = t158126-1.0;
            v_rho_a_rho_a_[index] = t158018*(t158020+t157960*t157963*(t158019-c0p*t157940*t157949*2.0))*2.0+t158029* \
               (-t157948+t157997+t157960*t157963*(t157948+t157996-t157990*t157966*t157995*t157989-a1p*c*c0p*t157923* \
               t157949*(2.0/3.0)))*2.0+rho_a[index]*t158029*(-t158035-t158044+t157960*t157963*(t158035+t158044-t158041* \
               t157940*t157941*t157942-t158032*1.0/(t157922*t157922*t157922)*t157966*t157989*2.0+t157990*t157966* \
               t157989*(b2f*c*t158030*(4.0/9.0)+b4f*t157918*t157955*(1.0E1/9.0)+b1f*c*t158030*t157930*(2.0/9.0)+b3f* \
               c*t158030*t157914*(2.0/3.0)-b1f*t158031*t157918*t157955*(1.0/3.6E1)+b3f*t157930*t157918*t157955*(1.0/ \
               1.2E1))+t158032*1.0/(t157922*t157922*t157922*t157922)*t157931*1.0/(t157934*t157934)*t157966*(1.0/2.0) \
               -a1f*c*c0f*t158030*t157964*(8.0/9.0)-t158033*t158042*t158043*t157940*t157935*(1.0/2.0)+a1f*c*t157923* \
               t157990*t157995*t157989*(2.0/3.0)-a1p*c*t157923*t157941*t157942*t157947*(2.0/3.0))+t158041*t157940* \
               t157941*t157942+t158033*t158042*t158043*t157940*t157935*(1.0/2.0)+a1p*c*t157923*t157941*t157942*t157947* \
               (2.0/3.0))-rho_a[index]*t158018*(-t157948+t157997+t157960*t157963*(t157948+t157996-t157997-t157990* \
               t157966*t157995*t157989))*2.0-rho_a[index]*(t158020-t157960*t157963*(t158020-t158019))*(ccaa1*gamma_aa[index]* \
               gcaa*t158023*t157975*(8.8E1/9.0)-ccaa1*t158002*t158022*t157950*t157951*2.4E1+ccaa2*t158022*t157950* \
               t157951*t157984*(3.04E2/9.0)+ccaa4*t158024*t157952*t157953*t157972*(1.12E3/9.0)-ccaa2*t158016*t158017* \
               t157950*t157951*t157985*(3.2E1/3.0)-ccaa4*t158012*t158013*t157952*t157953*t157988*(6.4E1/3.0)-ccaa2* \
               t158017*t157950*t157951*t157957*(gamma_aa[index]*gcaa*t158023*(1.76E2/9.0)+t158022*t157950*t157951* \
               (3.04E2/9.0))-ccaa4*t158013*t157952*t157953*t157954*(gamma_aa[index]*gcaa*t158023*(3.52E2/9.0)+t158022* \
               t157950*t157951*(6.08E2/3.0)+t158024*t157952*t157953*(1.12E3/9.0)+gamma_aa[index]*gcaa*t158021*t157950* \
               t157951*2.88E2)+ccaa4*(t158012*t158012)*t157952*t157953*1.0/(t157971*t157971*t157971)*t157954*2.0+ \
               ccaa2*(t158016*t158016)*t157950*t157951*1.0/(t157983*t157983*t157983)*t157957*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t158021*t157950*t157951*t157980*7.2E1+ccaa1*gamma_aa[index]*gcaa*t158021*t157950*t157951*1.0/ \
               (t157974*t157974*t157974)*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*(t158006*t158006)*t157950*t157951* \
               t157956*1.0/(t157979*t157979*t157979)*2.0-ccaa3*gamma_aa[index]*gcaa*t158007*t157950*t157951*t157956* \
               (gamma_aa[index]*gcaa*t158023*(8.8E1/3.0)+t158022*t157950*t157951*(3.04E2/3.0)+gamma_aa[index]*gcaa* \
               t158021*t157950*t157951*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t158006*t158007*t157950*t157951*t157987* \
               1.6E1)-c0*t158102*t158127*(cx1*gamma_aa[index]*gx*t158023*t158074*(8.8E1/9.0)-cx1*t158022*t158108* \
               t157950*t158058*2.4E1+cx2*t158022*t158083*t157950*t158058*(3.04E2/9.0)+cx4*t158024*t158071*t158059* \
               t157952*(1.12E3/9.0)-cx2*t158122*t158123*t157950*t158058*t157985*(3.2E1/3.0)-cx4*t158118*t158119*t158059* \
               t157952*t157988*(6.4E1/3.0)-cx2*t158123*t157950*t158058*t157957*(gamma_aa[index]*gx*t158023*(1.76E2/ \
               9.0)+t158022*t157950*t158058*(3.04E2/9.0))-cx4*t158119*t158059*t157952*t157954*(gamma_aa[index]*gx* \
               t158023*(3.52E2/9.0)+t158022*t157950*t158058*(6.08E2/3.0)+t158024*t158059*t157952*(1.12E3/9.0)+gamma_aa[index]* \
               gx*t158021*t157950*t158058*2.88E2)+cx2*(t158122*t158122)*1.0/(t158082*t158082*t158082)*t157950*t158058* \
               t157957*2.0+cx4*1.0/(t158070*t158070*t158070)*(t158118*t158118)*t158059*t157952*t157954*2.0+cx3*gamma_aa[index]* \
               gx*t158021*t157950*t158058*t158079*7.2E1+cx1*gamma_aa[index]*gx*t158021*1.0/(t158073*t158073*t158073) \
               *t157950*t158058*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*(t158112*t158112)*t157950*t158058*1.0/(t158078* \
               t158078*t158078)*t157956*2.0-cx3*gamma_aa[index]*gx*t158113*t157950*t158058*t157956*(gamma_aa[index]* \
               gx*t158023*(8.8E1/3.0)+t158022*t157950*t158058*(3.04E2/3.0)+gamma_aa[index]*gx*t158021*t157950*t158058* \
               7.2E1)-cx3*gamma_aa[index]*gx*t158112*t158113*t157950*t158058*t157987*1.6E1)+c0*t158101*t158060*t158125* \
               (8.0/3.0)-c0*t158102*t158124*t158125*2.0+c0*t158060*t158124*t158127*(8.0/3.0)-c0*t158101*t158127*t157919* \
               (4.0/9.0)+c0*t158101*t158102*(omega*t158054*t158094*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t158065*t158095*(7.717543294808713E30/3.713820117856141E27)+omega*t158049*(omega*t158054*t158088*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t158057*t158095*(7.717543294808713E30/4.951760157141521E27)+omega*t158049* \
               (1.0/(rho_a[index]*rho_a[index])*t158048*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t158053*t158048*(7.717543294808713E30/ \
               4.951760157141521E27)+t158051*t158052*1.0/pow(t158045,8.0/3.0)*(3.858771647404357E31/1.980704062856608E28) \
               -t158054*t158046*t158048*(7.717543294808713E30/9.903520314283042E27)+t158046*t158048*t158084*t158049* \
               (2.778046668940015E15/2.11106232532992E14))+t158055*t158048*t158086*t158089*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t158048*t158084*t158089*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t154578 = rho_a[index]+rho_b[index];
            double t154579 = 1.0/pow(t154578,1.0/3.0);
            double t154580 = c*t154579;
            double t154581 = sqrt(t154580);
            double t154582 = b1p*t154581;
            double t154583 = pow(t154580,3.0/2.0);
            double t154584 = b3p*t154583;
            double t154585 = c*c;
            double t154586 = 1.0/pow(t154578,2.0/3.0);
            double t154587 = b4p*t154585*t154586;
            double t154588 = b2p*c*t154579;
            double t154589 = t154582+t154584+t154587+t154588;
            double t154590 = 1.0/pow(t154578,4.0/3.0);
            double t154591 = 1.0/c0p;
            double t154592 = 1.0/t154589;
            double t154593 = t154591*t154592*(1.0/2.0);
            double t154594 = t154593+1.0;
            double t154595 = a1p*c*t154579;
            double t154596 = t154595+1.0;
            double t154597 = rho_a[index]-rho_b[index];
            double t154598 = t154597*t154597;
            double t154599 = 1.0/t154578;
            double t154600 = t154597*t154599;
            double t154601 = two_13*2.0;
            double t154602 = t154601-2.0;
            double t154603 = 1.0/t154602;
            double t154604 = 1.0/c0f;
            double t154605 = b1f*t154581;
            double t154606 = b3f*t154583;
            double t154607 = b4f*t154585*t154586;
            double t154608 = b2f*c*t154579;
            double t154609 = t154605+t154606+t154607+t154608;
            double t154610 = 1.0/t154609;
            double t154611 = t154610*t154604*(1.0/2.0);
            double t154612 = t154611+1.0;
            double t154613 = log(t154612);
            double t154614 = a1f*c*t154579;
            double t154615 = t154614+1.0;
            double t154616 = log(t154594);
            double t154626 = c0f*t154613*t154615*2.0;
            double t154627 = c0p*t154616*t154596*2.0;
            double t154617 = t154626-t154627;
            double t154618 = t154600+1.0;
            double t154619 = pow(t154618,4.0/3.0);
            double t154620 = -t154600+1.0;
            double t154621 = pow(t154620,4.0/3.0);
            double t154622 = t154621+t154619-2.0;
            double t154623 = 1.0/(t154578*t154578);
            double t154654 = t154623*t154597;
            double t154624 = -t154654+t154599;
            double t154625 = 1.0/(t154578*t154578*t154578*t154578);
            double t154628 = t154598*t154598;
            double t154629 = 1.0/pow(t154578,5.0/3.0);
            double t154630 = 1.0/sqrt(t154580);
            double t154631 = 1.0/t154594;
            double t154632 = 1.0/(t154589*t154589);
            double t154633 = b4p*t154629*t154585*(2.0/3.0);
            double t154634 = b2p*c*t154590*(1.0/3.0);
            double t154635 = b1p*c*t154630*t154590*(1.0/6.0);
            double t154636 = b3p*c*t154581*t154590*(1.0/2.0);
            double t154637 = t154633+t154634+t154635+t154636;
            double t154638 = t154631*t154632*t154637*t154596;
            double t154639 = 1.0/(t154578*t154578*t154578*t154578*t154578);
            double t154640 = 1.0/d2fz0;
            double t154641 = 1.0/Aa;
            double t154642 = b1a*t154581;
            double t154643 = b3a*t154583;
            double t154644 = b4a*t154585*t154586;
            double t154645 = b2a*c*t154579;
            double t154646 = t154642+t154643+t154644+t154645;
            double t154647 = 1.0/t154646;
            double t154648 = t154641*t154647*(1.0/2.0);
            double t154649 = t154648+1.0;
            double t154650 = log(t154649);
            double t154651 = a1a*c*t154579;
            double t154652 = t154651+1.0;
            double t154653 = pow(t154618,1.0/3.0);
            double t154655 = t154624*t154653*(4.0/3.0);
            double t154656 = pow(t154620,1.0/3.0);
            double t154800 = t154624*t154656*(4.0/3.0);
            double t154657 = -t154800+t154655;
            double t154658 = t154625*t154628;
            double t154659 = t154658-1.0;
            double t154660 = 1.0/pow(rho_a[index],1.0/3.0);
            double t154661 = c*t154660;
            double t154662 = sqrt(t154661);
            double t154663 = b1f*t154662;
            double t154664 = pow(t154661,3.0/2.0);
            double t154665 = b3f*t154664;
            double t154666 = 1.0/pow(rho_a[index],2.0/3.0);
            double t154667 = b4f*t154585*t154666;
            double t154668 = b2f*c*t154660;
            double t154669 = t154663+t154665+t154667+t154668;
            double t154670 = 1.0/pow(rho_a[index],4.0/3.0);
            double t154671 = b1p*t154662;
            double t154672 = b3p*t154664;
            double t154673 = b4p*t154585*t154666;
            double t154674 = b2p*c*t154660;
            double t154675 = t154671+t154672+t154673+t154674;
            double t154676 = 1.0/pow(rho_a[index],5.0/3.0);
            double t154677 = 1.0/sqrt(t154661);
            double t154678 = 1.0/t154669;
            double t154679 = t154604*t154678*(1.0/2.0);
            double t154680 = t154679+1.0;
            double t154681 = 1.0/t154675;
            double t154682 = t154591*t154681*(1.0/2.0);
            double t154683 = t154682+1.0;
            double t154684 = a1p*c*t154660;
            double t154685 = t154684+1.0;
            double t154686 = 1.0/t154683;
            double t154687 = 1.0/(t154675*t154675);
            double t154688 = b4p*t154585*t154676*(2.0/3.0);
            double t154689 = b2p*c*t154670*(1.0/3.0);
            double t154690 = b1p*c*t154670*t154677*(1.0/6.0);
            double t154691 = b3p*c*t154670*t154662*(1.0/2.0);
            double t154692 = t154690+t154691+t154688+t154689;
            double t154693 = t154692*t154685*t154686*t154687;
            double t154694 = log(t154683);
            double t154695 = pow(2.0,1.0/3.0);
            double t154696 = t154695*2.0;
            double t154697 = t154696-2.0;
            double t154698 = log(t154680);
            double t154699 = a1f*c*t154660;
            double t154700 = t154699+1.0;
            double t154701 = gcab*gcab;
            double t154705 = 1.0/pow(rho_a[index],8.0/3.0);
            double t154706 = gamma_aa[index]*t154705*(1.0/2.0);
            double t154707 = 1.0/pow(rho_b[index],8.0/3.0);
            double t154708 = gamma_bb[index]*t154707*(1.0/2.0);
            double t154702 = t154706+t154708;
            double t154703 = t154702*t154702;
            double t154704 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t154709 = t154701*t154701;
            double t154710 = t154703*t154703;
            double t154711 = t154701*t154703*6.0;
            double t154712 = gcab*t154701*t154702*t154703*4.0;
            double t154713 = t154710*t154709;
            double t154714 = gcab*t154702*4.0;
            double t154715 = t154711+t154712+t154713+t154714+1.0;
            double t154716 = gcab*t154702;
            double t154717 = t154716+1.0;
            double t154718 = t154701*t154703;
            double t154719 = gcab*t154702*2.0;
            double t154720 = t154718+t154719+1.0;
            double t154721 = t154701*t154703*3.0;
            double t154722 = gcab*t154701*t154702*t154703;
            double t154723 = gcab*t154702*3.0;
            double t154724 = t154721+t154722+t154723+1.0;
            double t154725 = t154603*t154622*t154625*t154617*t154597*t154598*4.0;
            double t154726 = t154654+t154599;
            double t154727 = 1.0/t154612;
            double t154728 = 1.0/(t154609*t154609);
            double t154729 = b4f*t154629*t154585*(2.0/3.0);
            double t154730 = b2f*c*t154590*(1.0/3.0);
            double t154731 = b1f*c*t154630*t154590*(1.0/6.0);
            double t154732 = b3f*c*t154581*t154590*(1.0/2.0);
            double t154733 = t154730+t154731+t154732+t154729;
            double t154734 = a1f*c*c0f*t154613*t154590*(2.0/3.0);
            double t154735 = t154628*t154639*4.0;
            double t154736 = t154653*t154726*(4.0/3.0);
            double t154799 = t154726*t154656*(4.0/3.0);
            double t154737 = t154736-t154799;
            double t154738 = 1.0/t154649;
            double t154739 = 1.0/(t154646*t154646);
            double t154740 = b4a*t154629*t154585*(2.0/3.0);
            double t154741 = b2a*c*t154590*(1.0/3.0);
            double t154742 = b1a*c*t154630*t154590*(1.0/6.0);
            double t154743 = b3a*c*t154581*t154590*(1.0/2.0);
            double t154744 = t154740+t154741+t154742+t154743;
            double t154745 = t154603*t154622*t154640*t154652*t154744*t154738*t154739*t154659;
            double t154746 = 1.0/pow(rho_b[index],1.0/3.0);
            double t154747 = c*t154746;
            double t154748 = sqrt(t154747);
            double t154749 = b1f*t154748;
            double t154750 = pow(t154747,3.0/2.0);
            double t154751 = b3f*t154750;
            double t154752 = 1.0/pow(rho_b[index],2.0/3.0);
            double t154753 = b4f*t154752*t154585;
            double t154754 = b2f*c*t154746;
            double t154755 = t154751+t154753+t154754+t154749;
            double t154756 = 1.0/pow(rho_b[index],4.0/3.0);
            double t154757 = b1p*t154748;
            double t154758 = b3p*t154750;
            double t154759 = b4p*t154752*t154585;
            double t154760 = b2p*c*t154746;
            double t154761 = t154760+t154757+t154758+t154759;
            double t154762 = 1.0/pow(rho_b[index],5.0/3.0);
            double t154763 = 1.0/sqrt(t154747);
            double t154764 = 1.0/t154755;
            double t154765 = t154604*t154764*(1.0/2.0);
            double t154766 = t154765+1.0;
            double t154767 = 1.0/t154761;
            double t154768 = t154591*t154767*(1.0/2.0);
            double t154769 = t154768+1.0;
            double t154770 = a1p*c*t154746;
            double t154771 = t154770+1.0;
            double t154772 = 1.0/t154769;
            double t154773 = 1.0/(t154761*t154761);
            double t154774 = b4p*t154762*t154585*(2.0/3.0);
            double t154775 = b2p*c*t154756*(1.0/3.0);
            double t154776 = b1p*c*t154763*t154756*(1.0/6.0);
            double t154777 = b3p*c*t154756*t154748*(1.0/2.0);
            double t154778 = t154774+t154775+t154776+t154777;
            double t154779 = t154771*t154772*t154773*t154778;
            double t154780 = log(t154769);
            double t154781 = log(t154766);
            double t154782 = a1f*c*t154746;
            double t154783 = t154782+1.0;
            double t154784 = t154603*t154622*t154625*t154617*t154628;
            double t154785 = Aa*t154603*t154622*t154640*t154650*t154652*t154659*2.0;
            double t154786 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t154787 = 1.0/(t154724*t154724);
            double t154788 = 1.0/t154717;
            double t154789 = 1.0/(t154715*t154715);
            double t154790 = 1.0/(t154720*t154720);
            double t154791 = 1.0/t154715;
            double t154792 = 1.0/(t154717*t154717);
            double t154793 = 1.0/t154720;
            double t154794 = 1.0/t154724;
            double t154796 = a1p*c*c0p*t154616*t154590*(2.0/3.0);
            double t154801 = t154615*t154733*t154727*t154728;
            double t154795 = -t154801+t154734+t154638-t154796;
            double t154797 = 1.0/pow(t154578,7.0/3.0);
            double t154798 = 1.0/pow(t154578,8.0/3.0);
            double t154802 = t154637*t154637;
            double t154803 = 1.0/pow(t154580,3.0/2.0);
            double t154804 = b4p*t154585*t154798*(1.0E1/9.0);
            double t154805 = b2p*c*t154797*(4.0/9.0);
            double t154806 = b1p*c*t154630*t154797*(2.0/9.0);
            double t154807 = b3p*c*t154581*t154797*(2.0/3.0);
            double t154808 = b3p*t154630*t154585*t154798*(1.0/1.2E1);
            double t154809 = t154804+t154805+t154806+t154807+t154808-b1p*t154803*t154585*t154798*(1.0/3.6E1);
            double t154810 = t154631*t154632*t154809*t154596;
            double t154811 = 1.0/(t154589*t154589*t154589);
            double t154812 = t154733*t154733;
            double t154813 = 1.0/(t154594*t154594);
            double t154814 = 1.0/(t154589*t154589*t154589*t154589);
            double t154815 = t154802*t154813*t154814*t154591*t154596*(1.0/2.0);
            double t154816 = t154801-t154734-t154638+t154796;
            double t154817 = 1.0/(t154578*t154578*t154578);
            double t154818 = a1p*c*t154631*t154632*t154590*t154637*(2.0/3.0);
            double t154819 = 1.0/(t154578*t154578*t154578*t154578*t154578*t154578);
            double t154820 = t154625*t154597*t154598*4.0;
            double t154821 = t154820+t154735;
            double t154822 = t154817*t154656*t154597*(8.0/3.0);
            double t154823 = 1.0/pow(t154618,2.0/3.0);
            double t154824 = t154624*t154823*t154726*(4.0/9.0);
            double t154825 = 1.0/pow(t154620,2.0/3.0);
            double t154826 = t154624*t154726*t154825*(4.0/9.0);
            double t154827 = t154822+t154824+t154826-t154653*t154817*t154597*(8.0/3.0);
            double t154828 = t154820-t154735;
            double t154829 = t154744*t154744;
            double t154830 = t154603*t154625*t154617*t154628*t154737;
            double t154831 = t154603*t154625*t154617*t154628*t154657;
            double t154832 = Aa*t154603*t154622*t154640*t154650*t154821*t154652*2.0;
            double t154833 = Aa*t154603*t154640*t154650*t154652*t154737*t154659*2.0;
            double t154834 = Aa*t154603*t154640*t154650*t154652*t154657*t154659*2.0;
            double t154835 = c0f*t154700*t154698*2.0;
            double t154837 = c0p*t154685*t154694*2.0;
            double t154836 = t154835-t154837;
            double t154838 = c0f*t154781*t154783*2.0;
            double t154840 = c0p*t154771*t154780*2.0;
            double t154839 = -t154840+t154838;
            double t154841 = gamma_aa[index]*gcab*t154786*(8.0/3.0);
            double t154842 = gamma_aa[index]*t154701*t154702*t154786*(8.0/3.0);
            double t154843 = t154841+t154842;
            double t154844 = gamma_bb[index]*gcab*t154704*(8.0/3.0);
            double t154845 = gamma_bb[index]*t154701*t154702*t154704*(8.0/3.0);
            double t154846 = t154844+t154845;
            double t154847 = gamma_aa[index]*gcab*t154786*(1.6E1/3.0);
            double t154848 = gamma_aa[index]*gcab*t154701*t154703*t154786*1.6E1;
            double t154849 = gamma_aa[index]*t154702*t154703*t154709*t154786*(1.6E1/3.0);
            double t154850 = gamma_aa[index]*t154701*t154702*t154786*1.6E1;
            double t154851 = t154850+t154847+t154848+t154849;
            double t154852 = gamma_bb[index]*gcab*t154704*(1.6E1/3.0);
            double t154853 = gamma_bb[index]*gcab*t154701*t154703*t154704*1.6E1;
            double t154854 = gamma_bb[index]*t154702*t154703*t154704*t154709*(1.6E1/3.0);
            double t154855 = gamma_bb[index]*t154701*t154702*t154704*1.6E1;
            double t154856 = t154852+t154853+t154854+t154855;
            double t154857 = gamma_aa[index]*gcab*t154786*4.0;
            double t154858 = gamma_aa[index]*gcab*t154701*t154703*t154786*4.0;
            double t154859 = gamma_aa[index]*t154701*t154702*t154786*8.0;
            double t154860 = t154857+t154858+t154859;
            double t154861 = gamma_bb[index]*gcab*t154704*4.0;
            double t154862 = gamma_bb[index]*gcab*t154701*t154703*t154704*4.0;
            double t154863 = gamma_bb[index]*t154701*t154702*t154704*8.0;
            double t154864 = t154861+t154862+t154863;
            v_rho_a_rho_b_[index] = (t154627+t154784+t154785+rho_a[index]*(-t154693+t154603*t154697*(t154693- \
               (t154700*1.0/(t154669*t154669)*(b2f*c*t154670*(1.0/3.0)+b4f*t154585*t154676*(2.0/3.0)+b1f*c*t154670* \
               t154677*(1.0/6.0)+b3f*c*t154670*t154662*(1.0/2.0)))/t154680+a1f*c*c0f*t154670*t154698*(2.0/3.0)-a1p* \
               c*c0p*t154670*t154694*(2.0/3.0))+a1p*c*c0p*t154670*t154694*(2.0/3.0))+t154578*(t154831+t154725+t154834+ \
               t154745+t154638-a1p*c*c0p*t154616*t154590*(2.0/3.0)-t154603*t154622*t154617*t154628*t154639*4.0-t154603* \
               t154622*t154625*t154628*t154795-Aa*t154603*t154622*t154640*t154650*t154652*(t154735-t154625*t154597* \
               t154598*4.0)*2.0-Aa*a1a*c*t154603*t154622*t154640*t154650*t154590*t154659*(2.0/3.0))-c0p*t154685*t154694* \
               2.0-t154603*t154836*t154697)*(ccab1*gamma_bb[index]*gcab*t154704*t154788*(4.0/3.0)-ccab2*t154701*t154703* \
               t154790*t154846-ccab4*t154710*t154709*t154856*t154789-ccab1*gamma_bb[index]*t154701*t154702*t154704* \
               t154792*(4.0/3.0)+ccab2*gamma_bb[index]*t154701*t154702*t154704*t154793*(8.0/3.0)+ccab3*gamma_bb[index]* \
               gcab*t154701*t154703*t154704*t154794*4.0+ccab4*gamma_bb[index]*t154702*t154703*t154704*t154709*t154791* \
               (1.6E1/3.0)-ccab3*gcab*t154701*t154702*t154703*t154864*t154787)+(ccab0+ccab1*gcab*t154702*t154788+ \
               ccab2*t154701*t154703*t154793+ccab4*t154710*t154709*t154791+ccab3*gcab*t154701*t154702*t154703*t154794) \
               *(t154830-t154831+t154832+t154833-t154834+t154578*(t154810+t154815+t154818-t154631*t154802*t154811* \
               t154596*2.0-a1p*c*c0p*t154616*t154797*(8.0/9.0)-t154603*t154622*t154625*t154628*(t154810+t154815+t154818- \
               t154631*t154802*t154811*t154596*2.0+t154812*t154615*1.0/(t154609*t154609*t154609)*t154727*2.0-t154615* \
               t154727*t154728*(b2f*c*t154797*(4.0/9.0)+b4f*t154585*t154798*(1.0E1/9.0)+b1f*c*t154630*t154797*(2.0/ \
               9.0)+b3f*c*t154581*t154797*(2.0/3.0)-b1f*t154803*t154585*t154798*(1.0/3.6E1)+b3f*t154630*t154585*t154798* \
               (1.0/1.2E1))-1.0/(t154612*t154612)*t154604*t154812*t154615*1.0/(t154609*t154609*t154609*t154609)*(1.0/ \
               2.0)+a1f*c*c0f*t154613*t154797*(8.0/9.0)-a1p*c*c0p*t154616*t154797*(8.0/9.0)-a1f*c*t154733*t154590* \
               t154727*t154728*(2.0/3.0))-t154603*t154622*t154617*t154628*t154819*2.0E1+t154603*t154622*t154625*t154617* \
               t154598*1.2E1+t154603*t154622*t154816*t154628*t154639*8.0+t154603*t154625*t154617*t154628*t154827+ \
               t154603*t154625*t154816*t154628*t154737-t154603*t154625*t154816*t154628*t154657-t154603*t154617*t154628* \
               t154737*t154639*4.0+t154603*t154617*t154628*t154639*t154657*4.0+t154603*t154625*t154617*t154737*t154597* \
               t154598*4.0+t154603*t154625*t154617*t154657*t154597*t154598*4.0+Aa*t154603*t154640*t154650*t154821* \
               t154652*t154657*2.0+Aa*t154603*t154640*t154650*t154652*t154737*t154828*2.0+Aa*t154603*t154640*t154650* \
               t154652*t154827*t154659*2.0-Aa*t154603*t154622*t154640*t154650*t154652*(t154628*t154819*2.0E1-t154625* \
               t154598*1.2E1)*2.0+t154603*t154622*t154640*t154821*t154652*t154744*t154738*t154739-t154603*t154622* \
               t154640*t154652*t154744*t154738*t154828*t154739+t154603*t154640*t154652*t154744*t154737*t154738*t154739* \
               t154659-t154603*t154640*t154652*t154744*t154657*t154738*t154739*t154659-t154603*t154622*t154640*t154652* \
               1.0/(t154646*t154646*t154646)*t154738*t154829*t154659*2.0+t154603*t154622*t154640*t154652*t154738* \
               t154739*t154659*(b2a*c*t154797*(4.0/9.0)+b4a*t154585*t154798*(1.0E1/9.0)+b1a*c*t154630*t154797*(2.0/ \
               9.0)+b3a*c*t154581*t154797*(2.0/3.0)-b1a*t154803*t154585*t154798*(1.0/3.6E1)+b3a*t154630*t154585*t154798* \
               (1.0/1.2E1))-Aa*a1a*c*t154603*t154622*t154640*t154650*t154821*t154590*(2.0/3.0)+Aa*a1a*c*t154603*t154622* \
               t154640*t154650*t154590*t154828*(2.0/3.0)-Aa*a1a*c*t154603*t154640*t154650*t154590*t154737*t154659* \
               (2.0/3.0)+Aa*a1a*c*t154603*t154640*t154650*t154590*t154657*t154659*(2.0/3.0)-Aa*a1a*c*t154603*t154622* \
               t154640*t154650*t154659*t154797*(8.0/9.0)+t154603*t154622*t154640*t154641*t154652*1.0/(t154646*t154646* \
               t154646*t154646)*1.0/(t154649*t154649)*t154829*t154659*(1.0/2.0)+a1a*c*t154603*t154622*t154640*t154590* \
               t154744*t154738*t154739*t154659*(2.0/3.0))-t154631*t154632*t154637*t154596*2.0+a1p*c*c0p*t154616*t154590* \
               (4.0/3.0)-t154603*t154622*t154625*t154816*t154628*2.0+t154603*t154622*t154617*t154628*t154639*8.0- \
               Aa*t154603*t154622*t154640*t154650*t154652*t154828*2.0-t154603*t154622*t154640*t154652*t154744*t154738* \
               t154739*t154659*2.0+Aa*a1a*c*t154603*t154622*t154640*t154650*t154590*t154659*(4.0/3.0))-(rho_b[index]* \
               (t154840+t154603*t154839*t154697)+rho_a[index]*(t154837+t154603*t154836*t154697)-t154578*(t154627+ \
               t154784+t154785))*(ccab4*t154710*t154709*t154789*(gamma_aa[index]*gamma_bb[index]*t154701*t154704* \
               t154786*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*t154703*t154704*t154709*t154786*(6.4E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t154701*t154702*t154704*t154786*(1.28E2/3.0))-ccab2*t154701*1.0/(t154720*t154720* \
               t154720)*t154703*t154843*t154846*2.0-ccab4*t154710*1.0/(t154715*t154715*t154715)*t154851*t154709*t154856* \
               2.0+ccab3*gcab*t154701*t154702*t154703*t154787*(gamma_aa[index]*gamma_bb[index]*t154701*t154704*t154786* \
               (3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t154701*t154702*t154704*t154786*(3.2E1/3.0))+ccab1* \
               gamma_aa[index]*gamma_bb[index]*t154701*t154704*t154792*t154786*(3.2E1/9.0)-ccab2*gamma_aa[index]* \
               gamma_bb[index]*t154701*t154704*t154793*t154786*(3.2E1/9.0)+ccab2*gamma_bb[index]*t154701*t154702* \
               t154704*t154843*t154790*(8.0/3.0)+ccab2*gamma_aa[index]*t154701*t154702*t154790*t154846*t154786*(8.0/ \
               3.0)-ccab3*gcab*t154701*t154702*t154703*1.0/(t154724*t154724*t154724)*t154860*t154864*2.0+ccab2*gamma_aa[index]* \
               gamma_bb[index]*t154703*t154704*t154709*t154790*t154786*(3.2E1/9.0)-ccab4*gamma_aa[index]*gamma_bb[index]* \
               t154703*t154704*t154709*t154791*t154786*(6.4E1/3.0)+ccab3*gamma_bb[index]*gcab*t154701*t154703*t154704* \
               t154860*t154787*4.0+ccab3*gamma_aa[index]*gcab*t154701*t154703*t154864*t154786*t154787*4.0+ccab4*gamma_bb[index]* \
               t154702*t154703*t154704*t154851*t154709*t154789*(1.6E1/3.0)+ccab4*gamma_aa[index]*t154702*t154703* \
               t154709*t154856*t154786*t154789*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t154701*t154702* \
               t154704*t154794*t154786*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t154701*t154702*t154704* \
               1.0/(t154717*t154717*t154717)*t154786*(3.2E1/9.0))+(t154627+t154784+t154785-t154578*(t154830+t154832+ \
               t154725+t154833-t154745-t154638+t154796+t154603*t154622*t154617*t154628*t154639*4.0+t154603*t154622* \
               t154625*t154628*t154795+Aa*a1a*c*t154603*t154622*t154640*t154650*t154590*t154659*(2.0/3.0))+rho_b[index]* \
               (-t154779+t154603*t154697*(t154779-(1.0/(t154755*t154755)*t154783*(b2f*c*t154756*(1.0/3.0)+b4f*t154762* \
               t154585*(2.0/3.0)+b1f*c*t154763*t154756*(1.0/6.0)+b3f*c*t154756*t154748*(1.0/2.0)))/t154766+a1f*c* \
               c0f*t154781*t154756*(2.0/3.0)-a1p*c*c0p*t154780*t154756*(2.0/3.0))+a1p*c*c0p*t154780*t154756*(2.0/ \
               3.0))-c0p*t154771*t154780*2.0-t154603*t154839*t154697)*(ccab1*gamma_aa[index]*gcab*t154786*t154788* \
               (4.0/3.0)-ccab2*t154701*t154703*t154843*t154790-ccab4*t154710*t154851*t154709*t154789-ccab1*gamma_aa[index]* \
               t154701*t154702*t154792*t154786*(4.0/3.0)+ccab2*gamma_aa[index]*t154701*t154702*t154793*t154786*(8.0/ \
               3.0)+ccab3*gamma_aa[index]*gcab*t154701*t154703*t154794*t154786*4.0+ccab4*gamma_aa[index]*t154702* \
               t154703*t154709*t154791*t154786*(1.6E1/3.0)-ccab3*gcab*t154701*t154702*t154703*t154860*t154787);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t154866 = rho_a[index]+rho_b[index];
            double t154867 = 1.0/pow(t154866,1.0/3.0);
            double t154868 = c*t154867;
            double t154869 = sqrt(t154868);
            double t154870 = b1p*t154869;
            double t154871 = pow(t154868,3.0/2.0);
            double t154872 = b3p*t154871;
            double t154873 = c*c;
            double t154874 = 1.0/pow(t154866,2.0/3.0);
            double t154875 = b4p*t154873*t154874;
            double t154876 = b2p*c*t154867;
            double t154877 = t154870+t154872+t154875+t154876;
            double t154878 = 1.0/pow(t154866,4.0/3.0);
            double t154879 = 1.0/c0p;
            double t154880 = 1.0/t154877;
            double t154881 = t154880*t154879*(1.0/2.0);
            double t154882 = t154881+1.0;
            double t154883 = a1p*c*t154867;
            double t154884 = t154883+1.0;
            double t154885 = rho_a[index]-rho_b[index];
            double t154886 = t154885*t154885;
            double t154887 = 1.0/t154866;
            double t154888 = t154885*t154887;
            double t154889 = two_13*2.0;
            double t154890 = t154889-2.0;
            double t154891 = 1.0/t154890;
            double t154892 = 1.0/c0f;
            double t154893 = b1f*t154869;
            double t154894 = b3f*t154871;
            double t154895 = b4f*t154873*t154874;
            double t154896 = b2f*c*t154867;
            double t154897 = t154893+t154894+t154895+t154896;
            double t154898 = 1.0/t154897;
            double t154899 = t154892*t154898*(1.0/2.0);
            double t154900 = t154899+1.0;
            double t154901 = log(t154900);
            double t154902 = a1f*c*t154867;
            double t154903 = t154902+1.0;
            double t154904 = log(t154882);
            double t154915 = c0f*t154901*t154903*2.0;
            double t154916 = c0p*t154904*t154884*2.0;
            double t154905 = t154915-t154916;
            double t154906 = t154888+1.0;
            double t154907 = pow(t154906,4.0/3.0);
            double t154908 = -t154888+1.0;
            double t154909 = pow(t154908,4.0/3.0);
            double t154910 = t154907+t154909-2.0;
            double t154911 = 1.0/(t154866*t154866);
            double t154912 = t154911*t154885;
            double t154913 = t154912+t154887;
            double t154914 = 1.0/(t154866*t154866*t154866*t154866);
            double t154917 = t154886*t154886;
            double t154918 = 1.0/pow(t154866,5.0/3.0);
            double t154919 = 1.0/sqrt(t154868);
            double t154920 = 1.0/t154882;
            double t154921 = 1.0/(t154877*t154877);
            double t154922 = b4p*t154873*t154918*(2.0/3.0);
            double t154923 = b2p*c*t154878*(1.0/3.0);
            double t154924 = b1p*c*t154919*t154878*(1.0/6.0);
            double t154925 = b3p*c*t154869*t154878*(1.0/2.0);
            double t154926 = t154922+t154923+t154924+t154925;
            double t154927 = 1.0/(t154866*t154866*t154866*t154866*t154866);
            double t154928 = 1.0/d2fz0;
            double t154929 = 1.0/Aa;
            double t154930 = b1a*t154869;
            double t154931 = b3a*t154871;
            double t154932 = b4a*t154873*t154874;
            double t154933 = b2a*c*t154867;
            double t154934 = t154930+t154931+t154932+t154933;
            double t154935 = 1.0/t154934;
            double t154936 = t154935*t154929*(1.0/2.0);
            double t154937 = t154936+1.0;
            double t154938 = log(t154937);
            double t154939 = a1a*c*t154867;
            double t154940 = t154939+1.0;
            double t154941 = pow(t154906,1.0/3.0);
            double t154942 = t154913*t154941*(4.0/3.0);
            double t154943 = pow(t154908,1.0/3.0);
            double t155019 = t154913*t154943*(4.0/3.0);
            double t154944 = -t155019+t154942;
            double t154945 = t154914*t154917;
            double t154946 = t154945-1.0;
            double t154947 = 1.0/pow(rho_b[index],1.0/3.0);
            double t154948 = c*t154947;
            double t154949 = sqrt(t154948);
            double t154950 = b1f*t154949;
            double t154951 = pow(t154948,3.0/2.0);
            double t154952 = b3f*t154951;
            double t154953 = 1.0/pow(rho_b[index],2.0/3.0);
            double t154954 = b4f*t154953*t154873;
            double t154955 = b2f*c*t154947;
            double t154956 = t154950+t154952+t154954+t154955;
            double t154957 = 1.0/pow(rho_b[index],4.0/3.0);
            double t154958 = b1p*t154949;
            double t154959 = b3p*t154951;
            double t154960 = b4p*t154953*t154873;
            double t154961 = b2p*c*t154947;
            double t154962 = t154960+t154961+t154958+t154959;
            double t154963 = 1.0/pow(rho_b[index],5.0/3.0);
            double t154964 = 1.0/sqrt(t154948);
            double t154965 = 1.0/t154956;
            double t154966 = t154892*t154965*(1.0/2.0);
            double t154967 = t154966+1.0;
            double t154968 = 1.0/t154962;
            double t154969 = t154968*t154879*(1.0/2.0);
            double t154970 = t154969+1.0;
            double t154971 = a1p*c*t154947;
            double t154972 = t154971+1.0;
            double t154973 = 1.0/t154970;
            double t154974 = 1.0/(t154962*t154962);
            double t154975 = b4p*t154873*t154963*(2.0/3.0);
            double t154976 = b2p*c*t154957*(1.0/3.0);
            double t154977 = b1p*c*t154964*t154957*(1.0/6.0);
            double t154978 = b3p*c*t154957*t154949*(1.0/2.0);
            double t154979 = t154975+t154976+t154977+t154978;
            double t154980 = t154972*t154973*t154974*t154979;
            double t154981 = log(t154970);
            double t154982 = pow(2.0,1.0/3.0);
            double t154983 = t154982*2.0;
            double t154984 = t154983-2.0;
            double t154985 = log(t154967);
            double t154986 = a1f*c*t154947;
            double t154987 = t154986+1.0;
            double t154988 = gcab*gcab;
            double t154992 = 1.0/pow(rho_a[index],8.0/3.0);
            double t154993 = gamma_aa[index]*t154992*(1.0/2.0);
            double t154994 = 1.0/pow(rho_b[index],8.0/3.0);
            double t154995 = gamma_bb[index]*t154994*(1.0/2.0);
            double t154989 = t154993+t154995;
            double t154990 = t154989*t154989;
            double t154991 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t154996 = t154988*t154988;
            double t154997 = t154990*t154990;
            double t154998 = t154990*t154988*6.0;
            double t154999 = gcab*t154990*t154988*t154989*4.0;
            double t155000 = t154996*t154997;
            double t155001 = gcab*t154989*4.0;
            double t155002 = t155000+t155001+t154998+t154999+1.0;
            double t155003 = gcab*t154989;
            double t155004 = t155003+1.0;
            double t155005 = t154990*t154988;
            double t155006 = gcab*t154989*2.0;
            double t155007 = t155005+t155006+1.0;
            double t155008 = t154990*t154988*3.0;
            double t155009 = gcab*t154990*t154988*t154989;
            double t155010 = gcab*t154989*3.0;
            double t155011 = t155010+t155008+t155009+1.0;
            double t155012 = a1p*c*c0p*t154904*t154878*(2.0/3.0);
            double t155013 = 1.0/t155007;
            double t155014 = 1.0/t155011;
            double t155015 = 1.0/t155004;
            double t155016 = 1.0/t155002;
            double t155017 = 1.0/pow(t154866,7.0/3.0);
            double t155018 = 1.0/pow(t154866,8.0/3.0);
            double t155020 = 1.0/t154900;
            double t155021 = 1.0/(t154897*t154897);
            double t155022 = b4f*t154873*t154918*(2.0/3.0);
            double t155023 = b2f*c*t154878*(1.0/3.0);
            double t155024 = b1f*c*t154919*t154878*(1.0/6.0);
            double t155025 = b3f*c*t154869*t154878*(1.0/2.0);
            double t155026 = t155022+t155023+t155024+t155025;
            double t155027 = t155020*t155021*t155026*t154903;
            double t155029 = t154920*t154921*t154926*t154884;
            double t155030 = a1f*c*c0f*t154901*t154878*(2.0/3.0);
            double t155028 = t155012-t155030+t155027-t155029;
            double t155031 = t154926*t154926;
            double t155032 = 1.0/pow(t154868,3.0/2.0);
            double t155033 = b4p*t155018*t154873*(1.0E1/9.0);
            double t155034 = b2p*c*t155017*(4.0/9.0);
            double t155035 = b1p*c*t155017*t154919*(2.0/9.0);
            double t155036 = b3p*c*t155017*t154869*(2.0/3.0);
            double t155037 = b3p*t155018*t154873*t154919*(1.0/1.2E1);
            double t155038 = t155033+t155034+t155035+t155036+t155037-b1p*t155032*t155018*t154873*(1.0/3.6E1);
            double t155039 = 1.0/(t154877*t154877*t154877);
            double t155040 = t155031*t154920*t155039*t154884*2.0;
            double t155041 = t155026*t155026;
            double t155042 = 1.0/(t154882*t154882);
            double t155043 = 1.0/(t154877*t154877*t154877*t154877);
            double t155044 = t154911*2.0;
            double t155045 = 1.0/(t154866*t154866*t154866);
            double t155046 = t155045*t154885*2.0;
            double t155047 = t155044+t155046;
            double t155048 = t154913*t154913;
            double t155049 = a1p*c*c0p*t155017*t154904*(8.0/9.0);
            double t155050 = 1.0/(t154866*t154866*t154866*t154866*t154866*t154866);
            double t155051 = t154914*t154885*t154886*4.0;
            double t155052 = t154917*t154927*4.0;
            double t155053 = t155051+t155052;
            double t155054 = t155047*t154941*(4.0/3.0);
            double t155055 = 1.0/pow(t154906,2.0/3.0);
            double t155056 = t155055*t155048*(4.0/9.0);
            double t155057 = 1.0/pow(t154908,2.0/3.0);
            double t155058 = t155048*t155057*(4.0/9.0);
            double t155059 = t155054+t155056+t155058-t155047*t154943*(4.0/3.0);
            double t155060 = 1.0/t154937;
            double t155061 = 1.0/(t154934*t154934);
            double t155062 = b4a*t154873*t154918*(2.0/3.0);
            double t155063 = b2a*c*t154878*(1.0/3.0);
            double t155064 = b1a*c*t154919*t154878*(1.0/6.0);
            double t155065 = b3a*c*t154869*t154878*(1.0/2.0);
            double t155066 = t155062+t155063+t155064+t155065;
            double t155067 = t155066*t155066;
            double t155068 = 1.0/t154967;
            double t155069 = b4f*t154873*t154963*(2.0/3.0);
            double t155070 = b2f*c*t154957*(1.0/3.0);
            double t155071 = b1f*c*t154964*t154957*(1.0/6.0);
            double t155072 = b3f*c*t154957*t154949*(1.0/2.0);
            double t155073 = t155070+t155071+t155072+t155069;
            double t155074 = 1.0/(t154956*t154956);
            double t155075 = 1.0/pow(rho_b[index],7.0/3.0);
            double t155076 = 1.0/pow(t154948,3.0/2.0);
            double t155077 = t155073*t155073;
            double t155078 = t154979*t154979;
            double t155079 = 1.0/(t154962*t154962*t154962);
            double t155080 = t155078*t155079*t154972*t154973*2.0;
            double t155081 = b4p*t154873*t154994*(1.0E1/9.0);
            double t155082 = b2p*c*t155075*(4.0/9.0);
            double t155083 = b3p*t154873*t154964*t154994*(1.0/1.2E1);
            double t155084 = b1p*c*t155075*t154964*(2.0/9.0);
            double t155085 = b3p*c*t155075*t154949*(2.0/3.0);
            double t155202 = b1p*t155076*t154873*t154994*(1.0/3.6E1);
            double t155086 = -t155202+t155081+t155082+t155083+t155084+t155085;
            double t155087 = 1.0/(t154970*t154970);
            double t155088 = 1.0/(t154962*t154962*t154962*t154962);
            double t155089 = a1p*c*c0p*t155075*t154981*(8.0/9.0);
            double t155090 = a1f*c*c0f*t154957*t154985*(2.0/3.0);
            double t155091 = a1p*c*c0p*t154981*t154957*(2.0/3.0);
            double t155163 = t155073*t155074*t155068*t154987;
            double t155092 = t155090-t155091-t155163+t154980;
            double t155093 = gamma_bb[index]*gamma_bb[index];
            double t155094 = gcaa*gcaa;
            double t155095 = t155093*t155093;
            double t155096 = t155094*t155094;
            double t155097 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t155098 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t155099 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t155100 = 1.0/pow(rho_a[index],1.0/3.0);
            double t155101 = c*t155100;
            double t155102 = sqrt(t155101);
            double t155103 = pow(t155101,3.0/2.0);
            double t155104 = 1.0/pow(rho_a[index],2.0/3.0);
            double t155105 = b1p*t155102;
            double t155106 = b3p*t155103;
            double t155107 = b4p*t155104*t154873;
            double t155108 = b2p*c*t155100;
            double t155109 = t155105+t155106+t155107+t155108;
            double t155110 = 1.0/t155109;
            double t155111 = t155110*t154879*(1.0/2.0);
            double t155112 = t155111+1.0;
            double t155113 = log(t155112);
            double t155114 = a1p*c*t155100;
            double t155115 = t155114+1.0;
            double t155116 = c0p*t155113*t155115*2.0;
            double t155117 = c0f*t154985*t154987*2.0;
            double t155119 = c0p*t154972*t154981*2.0;
            double t155118 = t155117-t155119;
            double t155120 = t154910*t154905*t154914*t154917*t154891;
            double t155121 = Aa*t154910*t154940*t154891*t154928*t154946*t154938*2.0;
            double t155122 = gamma_bb[index]*gcab*t154991*(1.6E1/3.0);
            double t155123 = gamma_bb[index]*gcab*t154990*t154991*t154988*1.6E1;
            double t155124 = gamma_bb[index]*t154990*t154991*t154996*t154989*(1.6E1/3.0);
            double t155125 = gamma_bb[index]*t154991*t154988*t154989*1.6E1;
            double t155126 = t155122+t155123+t155124+t155125;
            double t155127 = 1.0/(t155004*t155004);
            double t155128 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t155129 = gamma_bb[index]*gcab*t154991*(8.0/3.0);
            double t155130 = gamma_bb[index]*t154991*t154988*t154989*(8.0/3.0);
            double t155131 = t155130+t155129;
            double t155132 = 1.0/(t155011*t155011);
            double t155133 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t155134 = 1.0/(t155002*t155002);
            double t155135 = 1.0/(t155007*t155007);
            double t155136 = gamma_bb[index]*gcab*t154991*4.0;
            double t155137 = gamma_bb[index]*gcab*t154990*t154991*t154988*4.0;
            double t155138 = gamma_bb[index]*t154991*t154988*t154989*8.0;
            double t155139 = t155136+t155137+t155138;
            double t155140 = t155118*t154891*t154984;
            double t155141 = t155140+t155119;
            double t155142 = gamma_bb[index]*gcaa*t154994*4.0;
            double t155143 = gamma_bb[index]*gcaa*t155093*t155094*t155098*4.0;
            double t155144 = t155093*t155094*t155099*6.0;
            double t155145 = t155095*t155096*t155097;
            double t155146 = t155142+t155143+t155144+t155145+1.0;
            double t155147 = 1.0/t155146;
            double t155148 = gamma_bb[index]*gcaa*t154994;
            double t155149 = t155148+1.0;
            double t155150 = 1.0/t155149;
            double t155151 = gamma_bb[index]*gcaa*t154994*3.0;
            double t155152 = gamma_bb[index]*gcaa*t155093*t155094*t155098;
            double t155153 = t155093*t155094*t155099*3.0;
            double t155154 = t155151+t155152+t155153+1.0;
            double t155155 = 1.0/t155154;
            double t155156 = gamma_bb[index]*gcaa*t154994*2.0;
            double t155157 = t155093*t155094*t155099;
            double t155158 = t155156+t155157+1.0;
            double t155159 = 1.0/t155158;
            double t155160 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t155161 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t155162 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t155164 = t155092*t154891*t154984;
            double t155165 = ccaa4*t155162*t155147*t155095*t155096*(3.2E1/3.0);
            double t155166 = ccaa1*gamma_bb[index]*gcaa*t155150*t154991*(8.0/3.0);
            double t155167 = ccaa3*gamma_bb[index]*gcaa*t155161*t155155*t155093*t155094*8.0;
            double t155168 = ccaa2*t155160*t155093*t155094*t155159*(1.6E1/3.0);
            double t155169 = 1.0/(t155149*t155149);
            double t155170 = gamma_bb[index]*gcaa*t154991*8.0;
            double t155171 = gamma_bb[index]*gcaa*t155161*t155093*t155094*8.0;
            double t155172 = t155160*t155093*t155094*1.6E1;
            double t155173 = t155170+t155171+t155172;
            double t155174 = 1.0/(t155154*t155154);
            double t155175 = gamma_bb[index]*gcaa*t154991*(3.2E1/3.0);
            double t155176 = gamma_bb[index]*gcaa*t155161*t155093*t155094*3.2E1;
            double t155177 = t155160*t155093*t155094*3.2E1;
            double t155178 = t155162*t155095*t155096*(3.2E1/3.0);
            double t155179 = t155175+t155176+t155177+t155178;
            double t155180 = 1.0/(t155146*t155146);
            double t155181 = gamma_bb[index]*gcaa*t154991*(1.6E1/3.0);
            double t155182 = t155160*t155093*t155094*(1.6E1/3.0);
            double t155183 = t155181+t155182;
            double t155184 = 1.0/(t155158*t155158);
            double t155185 = t155165+t155166+t155167+t155168-ccaa1*t155160*t155093*t155094*t155169*(8.0/3.0)- \
               ccaa2*t155093*t155183*t155094*t155184*t155099-ccaa4*t155180*t155095*t155096*t155097*t155179-ccaa3* \
               gamma_bb[index]*gcaa*t155173*t155093*t155174*t155094*t155098;
            double t155186 = t155091+t155164-t154980;
            double t155187 = 1.0/pow(rho_b[index],1.0E1);
            double t155188 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t155189 = ccaa4*t155147*t155095*t155096*t155097;
            double t155190 = ccaa1*gamma_bb[index]*gcaa*t155150*t154994;
            double t155191 = ccaa3*gamma_bb[index]*gcaa*t155155*t155093*t155094*t155098;
            double t155192 = ccaa2*t155093*t155094*t155159*t155099;
            double t155193 = ccaa0+t155190+t155191+t155192+t155189;
            double t155194 = 1.0/(t154956*t154956*t154956);
            double t155195 = b4f*t154873*t154994*(1.0E1/9.0);
            double t155196 = b2f*c*t155075*(4.0/9.0);
            double t155197 = b3f*t154873*t154964*t154994*(1.0/1.2E1);
            double t155198 = b1f*c*t155075*t154964*(2.0/9.0);
            double t155199 = b3f*c*t155075*t154949*(2.0/3.0);
            double t155200 = t155195+t155196+t155197+t155198+t155199-b1f*t155076*t154873*t154994*(1.0/3.6E1);
            double t155201 = t155200*t155074*t155068*t154987;
            double t155203 = t155086*t154972*t154973*t154974;
            double t155204 = 1.0/(t154967*t154967);
            double t155205 = 1.0/(t154956*t154956*t154956*t154956);
            double t155206 = t155204*t155205*t155077*t154892*t154987*(1.0/2.0);
            double t155207 = t155078*t155087*t155088*t154972*t154879*(1.0/2.0);
            double t155208 = a1f*c*t155073*t155074*t155068*t154957*(2.0/3.0);
            double t155209 = a1p*c*t154973*t154974*t154957*t154979*(2.0/3.0);
            double t155210 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t155211 = 1.0/(omega*omega);
            double t155212 = pow(t155210,2.0/3.0);
            double t155215 = t155211*t155212;
            double t155213 = exp(-t155215);
            double t155214 = 1.0/pow(t155210,1.0/3.0);
            double t155216 = omega*omega;
            double t155217 = t155213-1.0;
            double t155218 = 1.0/pow(t155210,2.0/3.0);
            double t155219 = 1.0/pow(t155210,4.0/3.0);
            double t155220 = 1.0/omega;
            double t155221 = t155216*t155217*t155218*(1.0/2.0);
            double t155222 = t155221-t155213+3.0/2.0;
            double t155223 = gx*gx;
            double t155224 = t155223*t155223;
            double t155225 = pow(rho_b[index],1.0/3.0);
            double t155226 = pow(t155210,1.0/3.0);
            double t155227 = t155220*t155226;
            double t155228 = erf(t155227);
            double t155229 = t155228*(3.991211251234741E15/2.251799813685248E15);
            double t155261 = omega*t155222*t155214;
            double t155230 = -t155261+t155229;
            double t155231 = gamma_bb[index]*gx*t154994*4.0;
            double t155232 = gamma_bb[index]*gx*t155223*t155093*t155098*4.0;
            double t155233 = t155223*t155093*t155099*6.0;
            double t155234 = t155224*t155095*t155097;
            double t155235 = t155231+t155232+t155233+t155234+1.0;
            double t155236 = 1.0/t155235;
            double t155237 = gamma_bb[index]*gx*t154994;
            double t155238 = t155237+1.0;
            double t155239 = 1.0/t155238;
            double t155240 = gamma_bb[index]*gx*t154994*3.0;
            double t155241 = gamma_bb[index]*gx*t155223*t155093*t155098;
            double t155242 = t155223*t155093*t155099*3.0;
            double t155243 = t155240+t155241+t155242+1.0;
            double t155244 = 1.0/t155243;
            double t155245 = gamma_bb[index]*gx*t154994*2.0;
            double t155246 = t155223*t155093*t155099;
            double t155247 = t155245+t155246+1.0;
            double t155248 = 1.0/t155247;
            double t155249 = 1.0/rho_b[index];
            double t155250 = t155213*t155249*(1.0/3.0);
            double t155251 = 1.0/pow(t155210,5.0/3.0);
            double t155252 = t155251*t155216*t155217*(2.778046668940015E15/1.40737488355328E14);
            double t155256 = t155211*t155213*t155214*(2.778046668940015E15/7.0368744177664E13);
            double t155253 = t155250+t155252-t155256;
            double t155254 = 1.0/sqrt(3.141592653589793);
            double t155255 = omega*t155222*t155219*(2.778046668940015E15/1.40737488355328E14);
            double t155257 = omega*t155214*t155253;
            double t155258 = t155220*t155213*t155218*t155254*(1.108777112152858E31/1.584563250285287E29);
            double t155259 = t155255+t155257+t155258;
            double t155260 = 1.0/pow(t155210,7.0/3.0);
            double t155262 = cx4*t155224*t155236*t155095*t155097;
            double t155263 = cx1*gamma_bb[index]*gx*t155239*t154994;
            double t155264 = cx3*gamma_bb[index]*gx*t155223*t155244*t155093*t155098;
            double t155265 = cx2*t155223*t155093*t155248*t155099;
            double t155266 = cx0+t155262+t155263+t155264+t155265;
            double t155267 = pow(rho_b[index],4.0/3.0);
            double t155268 = omega*t155230*t155219*(2.778046668940015E15/1.05553116266496E14);
            double t155269 = cx4*t155224*t155162*t155236*t155095*(3.2E1/3.0);
            double t155270 = cx1*gamma_bb[index]*gx*t155239*t154991*(8.0/3.0);
            double t155271 = cx3*gamma_bb[index]*gx*t155223*t155161*t155244*t155093*8.0;
            double t155272 = cx2*t155160*t155223*t155093*t155248*(1.6E1/3.0);
            double t155273 = 1.0/(t155238*t155238);
            double t155274 = gamma_bb[index]*gx*t154991*8.0;
            double t155275 = gamma_bb[index]*gx*t155223*t155161*t155093*8.0;
            double t155276 = t155160*t155223*t155093*1.6E1;
            double t155277 = t155274+t155275+t155276;
            double t155278 = 1.0/(t155243*t155243);
            double t155279 = gamma_bb[index]*gx*t154991*(3.2E1/3.0);
            double t155280 = gamma_bb[index]*gx*t155223*t155161*t155093*3.2E1;
            double t155281 = t155160*t155223*t155093*3.2E1;
            double t155282 = t155224*t155162*t155095*(3.2E1/3.0);
            double t155283 = t155280+t155281+t155282+t155279;
            double t155284 = 1.0/(t155235*t155235);
            double t155285 = gamma_bb[index]*gx*t154991*(1.6E1/3.0);
            double t155286 = t155160*t155223*t155093*(1.6E1/3.0);
            double t155287 = t155285+t155286;
            double t155288 = 1.0/(t155247*t155247);
            double t155289 = t155270+t155271+t155272+t155269-cx1*t155160*t155223*t155093*t155273*(8.0/3.0)-cx2* \
               t155223*t155093*t155287*t155099*t155288-cx4*t155224*t155283*t155095*t155284*t155097-cx3*gamma_bb[index]* \
               gx*t155223*t155093*t155277*t155098*t155278;
            double t155290 = t155268-omega*t155214*t155259*(4.0/3.0);
            double t155291 = omega*t155230*t155214*(4.0/3.0);
            double t155292 = t155291-1.0;
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t155015*t154989+ccab2*t155013*t154990*t154988+ccab4*t155016* \
               t154996*t154997+ccab3*gcab*t155014*t154990*t154988*t154989)*(-rho_b[index]*(t155203-t155080+t155207+ \
               t155209-t155089+t154891*t154984*(t155201+t155080+t155206+t155208+t155089-t155068*t155077*t155194*t154987* \
               2.0-t155086*t154972*t154973*t154974-a1f*c*c0f*t155075*t154985*(8.0/9.0)-t155078*t155087*t155088*t154972* \
               t154879*(1.0/2.0)-a1p*c*t154973*t154974*t154957*t154979*(2.0/3.0)))-t154866*(t155040+t155049-t154920* \
               t154921*t155038*t154884-t154910*t154914*t154917*t154891*(t155040+t155049-t154920*t154921*t155038*t154884- \
               t155020*t155041*t154903*1.0/(t154897*t154897*t154897)*2.0+t155020*t155021*t154903*(b2f*c*t155017*(4.0/ \
               9.0)+b4f*t155018*t154873*(1.0E1/9.0)+b1f*c*t155017*t154919*(2.0/9.0)+b3f*c*t155017*t154869*(2.0/3.0) \
               -b1f*t155032*t155018*t154873*(1.0/3.6E1)+b3f*t155018*t154873*t154919*(1.0/1.2E1))+t155041*1.0/(t154900* \
               t154900)*t154903*t154892*1.0/(t154897*t154897*t154897*t154897)*(1.0/2.0)-a1f*c*c0f*t155017*t154901* \
               (8.0/9.0)-t155031*t155042*t155043*t154884*t154879*(1.0/2.0)+a1f*c*t155020*t155021*t155026*t154878* \
               (2.0/3.0)-a1p*c*t154920*t154921*t154926*t154878*(2.0/3.0))-t155031*t155042*t155043*t154884*t154879* \
               (1.0/2.0)+t155050*t154910*t154905*t154917*t154891*2.0E1-t154910*t155028*t154917*t154891*t154927*8.0- \
               t155028*t154914*t154917*t154944*t154891*2.0+t154910*t154905*t154914*t154891*t154886*1.2E1+t154905* \
               t154914*t155059*t154917*t154891+t154905*t154917*t154944*t154891*t154927*8.0-t154910*t155028*t154914* \
               t154891*t154885*t154886*8.0+t154910*t154905*t154891*t154927*t154885*t154886*3.2E1+t154905*t154914* \
               t154944*t154891*t154885*t154886*8.0-a1p*c*t154920*t154921*t154926*t154878*(2.0/3.0)+Aa*t155053*t154940* \
               t154944*t154891*t154928*t154938*4.0+Aa*t154940*t155059*t154891*t154928*t154946*t154938*2.0+Aa*t154910* \
               t154940*t154891*t154928*t154938*(t155050*t154917*2.0E1+t154914*t154886*1.2E1+t154927*t154885*t154886* \
               3.2E1)*2.0-t155060*t155061*t155053*t154910*t154940*t155066*t154891*t154928*2.0-t155060*t155061*t154940* \
               t155066*t154944*t154891*t154928*t154946*2.0+t155060*t154910*t154940*t155067*1.0/(t154934*t154934*t154934) \
               *t154891*t154928*t154946*2.0-t155060*t155061*t154910*t154940*t154891*t154928*t154946*(b2a*c*t155017* \
               (4.0/9.0)+b4a*t155018*t154873*(1.0E1/9.0)+b1a*c*t155017*t154919*(2.0/9.0)+b3a*c*t155017*t154869*(2.0/ \
               3.0)-b1a*t155032*t155018*t154873*(1.0/3.6E1)+b3a*t155018*t154873*t154919*(1.0/1.2E1))+Aa*a1a*c*t155017* \
               t154910*t154891*t154928*t154946*t154938*(8.0/9.0)+Aa*a1a*c*t155053*t154910*t154891*t154928*t154938* \
               t154878*(4.0/3.0)+Aa*a1a*c*t154944*t154891*t154928*t154946*t154938*t154878*(4.0/3.0)-t154910*t154940* \
               t155067*1.0/(t154934*t154934*t154934*t154934)*t154891*t154928*1.0/(t154937*t154937)*t154946*t154929* \
               (1.0/2.0)-a1a*c*t155060*t155061*t154910*t155066*t154891*t154928*t154946*t154878*(2.0/3.0))-t155092* \
               t154891*t154984*2.0-t154920*t154921*t154926*t154884*2.0+t154972*t154973*t154974*t154979*2.0+a1p*c* \
               c0p*t154904*t154878*(4.0/3.0)-a1p*c*c0p*t154981*t154957*(4.0/3.0)-t154910*t155028*t154914*t154917* \
               t154891*2.0+t154910*t154905*t154917*t154891*t154927*8.0+t154905*t154914*t154917*t154944*t154891*2.0+ \
               t154910*t154905*t154914*t154891*t154885*t154886*8.0+Aa*t155053*t154910*t154940*t154891*t154928*t154938* \
               4.0+Aa*t154940*t154944*t154891*t154928*t154946*t154938*4.0-t155060*t155061*t154910*t154940*t155066* \
               t154891*t154928*t154946*2.0+Aa*a1a*c*t154910*t154891*t154928*t154946*t154938*t154878*(4.0/3.0))+(rho_b[index]* \
               t155141+rho_a[index]*(t155116-t154891*t154984*(t155116-c0f*log((t154892*(1.0/2.0))/(b1f*t155102+b3f* \
               t155103+b2f*c*t155100+b4f*t155104*t154873)+1.0)*(a1f*c*t155100+1.0)*2.0))-t154866*(t155120+t155121+ \
               t154916))*(-ccab2*t155135*t154990*t154988*(gamma_bb[index]*gcab*t155133*(8.8E1/9.0)+t155128*t155093* \
               t154988*(3.2E1/9.0)+gamma_bb[index]*t155133*t154988*t154989*(8.8E1/9.0))+ccab2*(t155131*t155131)*1.0/ \
               (t155007*t155007*t155007)*t154990*t154988*2.0+ccab4*1.0/(t155002*t155002*t155002)*(t155126*t155126) \
               *t154996*t154997*2.0+ccab1*gamma_bb[index]*gcab*t155015*t155133*(4.4E1/9.0)+ccab2*t155013*t155128* \
               t155093*t154988*(3.2E1/9.0)-ccab1*t155127*t155128*t155093*t154988*(3.2E1/9.0)-ccab4*t155134*t154996* \
               t154997*(gamma_bb[index]*gcab*t155133*(1.76E2/9.0)+t155128*t155093*t154988*(6.4E1/3.0)+gamma_bb[index]* \
               t155133*t154988*t154989*(1.76E2/3.0)+t155128*t155093*t154990*t154996*(6.4E1/3.0)+gamma_bb[index]*gcab* \
               t155133*t154990*t154988*(1.76E2/3.0)+gamma_bb[index]*t155133*t154990*t154996*t154989*(1.76E2/9.0)+ \
               gcab*t155128*t155093*t154988*t154989*(1.28E2/3.0))+ccab4*t155016*t155128*t155093*t154990*t154996*(6.4E1/ \
               3.0)+ccab2*gamma_bb[index]*t155013*t155133*t154988*t154989*(8.8E1/9.0)-ccab1*gamma_bb[index]*t155133* \
               t155127*t154988*t154989*(4.4E1/9.0)+ccab3*gcab*1.0/(t155011*t155011*t155011)*(t155139*t155139)*t154990* \
               t154988*t154989*2.0+ccab3*gamma_bb[index]*gcab*t155014*t155133*t154990*t154988*(4.4E1/3.0)-ccab2*gamma_bb[index]* \
               t155131*t155135*t154991*t154988*t154989*(1.6E1/3.0)+ccab4*gamma_bb[index]*t155016*t155133*t154990* \
               t154996*t154989*(1.76E2/9.0)+ccab3*gcab*t155014*t155128*t155093*t154988*t154989*(3.2E1/3.0)+ccab1* \
               gcab*1.0/(t155004*t155004*t155004)*t155128*t155093*t154988*t154989*(3.2E1/9.0)-ccab3*gcab*t155132* \
               t154990*t154988*t154989*(gamma_bb[index]*gcab*t155133*(4.4E1/3.0)+t155128*t155093*t154988*(3.2E1/3.0) \
               +gamma_bb[index]*t155133*t154988*t154989*(8.8E1/3.0)+gamma_bb[index]*gcab*t155133*t154990*t154988* \
               (4.4E1/3.0)+gcab*t155128*t155093*t154988*t154989*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t155132*t155139* \
               t154990*t154991*t154988*8.0-ccab4*gamma_bb[index]*t155134*t155126*t154990*t154991*t154996*t154989* \
               (3.2E1/3.0))+(t155120+t155121+t154916+rho_b[index]*(t155091-t154980+t154891*t154984*(t155090+t154980- \
               t155073*t155074*t155068*t154987-a1p*c*c0p*t154981*t154957*(2.0/3.0)))-t154866*(t155012-t154920*t154921* \
               t154926*t154884-t154910*t155028*t154914*t154917*t154891+t154910*t154905*t154917*t154891*t154927*4.0+ \
               t154905*t154914*t154917*t154944*t154891+t154910*t154905*t154914*t154891*t154885*t154886*4.0+Aa*t155053* \
               t154910*t154940*t154891*t154928*t154938*2.0+Aa*t154940*t154944*t154891*t154928*t154946*t154938*2.0- \
               t155060*t155061*t154910*t154940*t155066*t154891*t154928*t154946+Aa*a1a*c*t154910*t154891*t154928*t154946* \
               t154938*t154878*(2.0/3.0))-c0p*t154972*t154981*2.0-t155118*t154891*t154984)*(ccab1*gamma_bb[index]* \
               gcab*t155015*t154991*(4.0/3.0)-ccab2*t155131*t155135*t154990*t154988-ccab4*t155134*t155126*t154996* \
               t154997+ccab2*gamma_bb[index]*t155013*t154991*t154988*t154989*(8.0/3.0)-ccab1*gamma_bb[index]*t155127* \
               t154991*t154988*t154989*(4.0/3.0)+ccab3*gamma_bb[index]*gcab*t155014*t154990*t154991*t154988*4.0+ccab4* \
               gamma_bb[index]*t155016*t154990*t154991*t154996*t154989*(1.6E1/3.0)-ccab3*gcab*t155132*t155139*t154990* \
               t154988*t154989)*2.0+t155141*t155185*2.0+t155193*t155186*2.0-rho_b[index]*t155141*(ccaa1*gamma_bb[index]* \
               gcaa*t155150*t155133*(8.8E1/9.0)-ccaa1*t155128*t155093*t155094*t155169*2.4E1+ccaa2*t155128*t155093* \
               t155094*t155159*(3.04E2/9.0)+ccaa4*t155147*t155095*t155096*t155188*(1.12E3/9.0)-ccaa2*t155160*t155093* \
               t155183*t155094*t155184*(3.2E1/3.0)-ccaa4*t155162*t155180*t155095*t155096*t155179*(6.4E1/3.0)-ccaa2* \
               t155093*t155094*t155184*t155099*(gamma_bb[index]*gcaa*t155133*(1.76E2/9.0)+t155128*t155093*t155094* \
               (3.04E2/9.0))-ccaa4*t155180*t155095*t155096*t155097*(gamma_bb[index]*gcaa*t155133*(3.52E2/9.0)+t155128* \
               t155093*t155094*(6.08E2/3.0)+t155095*t155096*t155188*(1.12E3/9.0)+gamma_bb[index]*gcaa*t155093*t155094* \
               t155187*2.88E2)+ccaa2*t155093*(t155183*t155183)*t155094*1.0/(t155158*t155158*t155158)*t155099*2.0+ \
               ccaa4*1.0/(t155146*t155146*t155146)*t155095*t155096*t155097*(t155179*t155179)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t155155*t155093*t155094*t155187*7.2E1+ccaa1*gamma_bb[index]*gcaa*t155093*t155094*1.0/(t155149* \
               t155149*t155149)*t155187*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*1.0/(t155154*t155154*t155154)*(t155173* \
               t155173)*t155093*t155094*t155098*2.0-ccaa3*gamma_bb[index]*gcaa*t155093*t155174*t155094*t155098*(gamma_bb[index]* \
               gcaa*t155133*(8.8E1/3.0)+t155128*t155093*t155094*(3.04E2/3.0)+gamma_bb[index]*gcaa*t155093*t155094* \
               t155187*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t155161*t155173*t155093*t155174*t155094*1.6E1)+rho_b[index]* \
               t155193*(t155203-t155080+t155207+t155209-t155089+t154891*t154984*(t155201-t155203+t155080+t155206- \
               t155207+t155208-t155209+t155089-t155068*t155077*t155194*t154987*2.0-a1f*c*c0f*t155075*t154985*(8.0/ \
               9.0)))-rho_b[index]*t155185*t155186*2.0-c0*t155292*t155267*(cx1*gamma_bb[index]*gx*t155133*t155239* \
               (8.8E1/9.0)-cx1*t155223*t155128*t155093*t155273*2.4E1+cx2*t155223*t155128*t155093*t155248*(3.04E2/ \
               9.0)+cx4*t155224*t155236*t155095*t155188*(1.12E3/9.0)-cx2*t155160*t155223*t155093*t155287*t155288* \
               (3.2E1/3.0)-cx4*t155224*t155162*t155283*t155095*t155284*(6.4E1/3.0)-cx2*t155223*t155093*t155099*t155288* \
               (gamma_bb[index]*gx*t155133*(1.76E2/9.0)+t155223*t155128*t155093*(3.04E2/9.0))-cx4*t155224*t155095* \
               t155284*t155097*(gamma_bb[index]*gx*t155133*(3.52E2/9.0)+t155223*t155128*t155093*(6.08E2/3.0)+t155224* \
               t155095*t155188*(1.12E3/9.0)+gamma_bb[index]*gx*t155223*t155093*t155187*2.88E2)+cx2*t155223*t155093* \
               1.0/(t155247*t155247*t155247)*(t155287*t155287)*t155099*2.0+cx4*t155224*1.0/(t155235*t155235*t155235) \
               *(t155283*t155283)*t155095*t155097*2.0+cx3*gamma_bb[index]*gx*t155223*t155244*t155093*t155187*7.2E1+ \
               cx1*gamma_bb[index]*gx*t155223*t155093*1.0/(t155238*t155238*t155238)*t155187*(1.28E2/9.0)+cx3*gamma_bb[index]* \
               gx*t155223*1.0/(t155243*t155243*t155243)*t155093*(t155277*t155277)*t155098*2.0-cx3*gamma_bb[index]* \
               gx*t155223*t155093*t155098*t155278*(gamma_bb[index]*gx*t155133*(8.8E1/3.0)+t155223*t155128*t155093* \
               (3.04E2/3.0)+gamma_bb[index]*gx*t155223*t155093*t155187*7.2E1)-cx3*gamma_bb[index]*gx*t155223*t155161* \
               t155093*t155277*t155278*1.6E1)+c0*t155225*t155290*t155266*(8.0/3.0)+c0*t155225*t155292*t155289*(8.0/ \
               3.0)-c0*t155292*t155266*t154953*(4.0/9.0)-c0*t155290*t155267*t155289*2.0+c0*t155266*t155267*(omega* \
               t155230*t155260*(-7.717543294808713E30/3.713820117856141E27)+omega*t155219*t155259*(2.778046668940015E15/ \
               5.2776558133248E13)+omega*t155214*(omega*t155222*t155260*(7.717543294808713E30/4.951760157141521E27) \
               +omega*t155253*t155219*(2.778046668940015E15/7.0368744177664E13)+omega*t155214*(1.0/(rho_b[index]* \
               rho_b[index])*t155213*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t155213*t155218*(7.717543294808713E30/ \
               4.951760157141521E27)+1.0/pow(t155210,8.0/3.0)*t155216*t155217*(3.858771647404357E31/1.980704062856608E28) \
               -t155211*t155213*t155219*(7.717543294808713E30/9.903520314283042E27)+t155211*t155213*t155214*t155249* \
               (2.778046668940015E15/2.11106232532992E14))+t155220*t155213*t155251*t155254*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t155213*t155254*t155249*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t157159 = 1.0/pow(rho_b[index],1.0/3.0);
            double t157160 = c*t157159;
            double t157161 = sqrt(t157160);
            double t157162 = b1f*t157161;
            double t157163 = pow(t157160,3.0/2.0);
            double t157164 = b3f*t157163;
            double t157165 = c*c;
            double t157166 = 1.0/pow(rho_b[index],2.0/3.0);
            double t157167 = b4f*t157165*t157166;
            double t157168 = b2f*c*t157159;
            double t157169 = t157162+t157164+t157167+t157168;
            double t157170 = 1.0/pow(rho_b[index],4.0/3.0);
            double t157171 = b1p*t157161;
            double t157172 = b3p*t157163;
            double t157173 = b4p*t157165*t157166;
            double t157174 = b2p*c*t157159;
            double t157175 = t157171+t157172+t157173+t157174;
            double t157176 = 1.0/pow(rho_b[index],5.0/3.0);
            double t157177 = 1.0/sqrt(t157160);
            double t157178 = 1.0/c0f;
            double t157179 = 1.0/t157169;
            double t157180 = t157178*t157179*(1.0/2.0);
            double t157181 = t157180+1.0;
            double t157182 = 1.0/c0p;
            double t157183 = 1.0/t157175;
            double t157184 = t157182*t157183*(1.0/2.0);
            double t157185 = t157184+1.0;
            double t157186 = a1p*c*t157159;
            double t157187 = t157186+1.0;
            double t157188 = 1.0/t157185;
            double t157189 = 1.0/(t157175*t157175);
            double t157190 = b4p*t157165*t157176*(2.0/3.0);
            double t157191 = b2p*c*t157170*(1.0/3.0);
            double t157192 = b1p*c*t157170*t157177*(1.0/6.0);
            double t157193 = b3p*c*t157161*t157170*(1.0/2.0);
            double t157194 = t157190+t157191+t157192+t157193;
            double t157195 = t157194*t157187*t157188*t157189;
            double t157196 = log(t157185);
            double t157197 = gamma_bb[index]*gamma_bb[index];
            double t157198 = gcaa*gcaa;
            double t157199 = t157197*t157197;
            double t157200 = t157198*t157198;
            double t157201 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t157202 = 1.0/pow(rho_b[index],8.0/3.0);
            double t157203 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t157204 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t157205 = pow(2.0,1.0/3.0);
            double t157206 = t157205*2.0;
            double t157207 = t157206-2.0;
            double t157208 = two_13*2.0;
            double t157209 = t157208-2.0;
            double t157210 = 1.0/t157209;
            double t157211 = log(t157181);
            double t157212 = a1f*c*t157159;
            double t157213 = t157212+1.0;
            double t157214 = gamma_bb[index]*gcaa*t157202*4.0;
            double t157215 = gamma_bb[index]*gcaa*t157203*t157197*t157198*4.0;
            double t157216 = t157204*t157197*t157198*6.0;
            double t157217 = t157200*t157201*t157199;
            double t157218 = t157214+t157215+t157216+t157217+1.0;
            double t157219 = 1.0/t157218;
            double t157220 = gamma_bb[index]*gcaa*t157202;
            double t157221 = t157220+1.0;
            double t157222 = 1.0/t157221;
            double t157223 = gamma_bb[index]*gcaa*t157202*3.0;
            double t157224 = gamma_bb[index]*gcaa*t157203*t157197*t157198;
            double t157225 = t157204*t157197*t157198*3.0;
            double t157226 = t157223+t157224+t157225+1.0;
            double t157227 = 1.0/t157226;
            double t157228 = gamma_bb[index]*gcaa*t157202*2.0;
            double t157229 = t157204*t157197*t157198;
            double t157230 = t157228+t157229+1.0;
            double t157231 = 1.0/t157230;
            double t157232 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t157233 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t157234 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t157235 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t157236 = 1.0/t157181;
            double t157237 = 1.0/(t157169*t157169);
            double t157238 = b4f*t157165*t157176*(2.0/3.0);
            double t157239 = b2f*c*t157170*(1.0/3.0);
            double t157240 = b1f*c*t157170*t157177*(1.0/6.0);
            double t157241 = b3f*c*t157161*t157170*(1.0/2.0);
            double t157242 = t157240+t157241+t157238+t157239;
            double t157243 = a1f*c*c0f*t157211*t157170*(2.0/3.0);
            double t157244 = a1p*c*c0p*t157170*t157196*(2.0/3.0);
            double t157245 = ccaa4*t157200*t157235*t157219*t157199*(3.2E1/3.0);
            double t157246 = ccaa1*gamma_bb[index]*gcaa*t157222*t157233*(8.0/3.0);
            double t157247 = ccaa3*gamma_bb[index]*gcaa*t157234*t157227*t157197*t157198*8.0;
            double t157248 = ccaa2*t157231*t157232*t157197*t157198*(1.6E1/3.0);
            double t157249 = 1.0/(t157221*t157221);
            double t157250 = gamma_bb[index]*gcaa*t157233*8.0;
            double t157251 = gamma_bb[index]*gcaa*t157234*t157197*t157198*8.0;
            double t157252 = t157232*t157197*t157198*1.6E1;
            double t157253 = t157250+t157251+t157252;
            double t157254 = 1.0/(t157226*t157226);
            double t157255 = gamma_bb[index]*gcaa*t157233*(3.2E1/3.0);
            double t157256 = gamma_bb[index]*gcaa*t157234*t157197*t157198*3.2E1;
            double t157257 = t157232*t157197*t157198*3.2E1;
            double t157258 = t157200*t157235*t157199*(3.2E1/3.0);
            double t157259 = t157255+t157256+t157257+t157258;
            double t157260 = 1.0/(t157218*t157218);
            double t157261 = gamma_bb[index]*gcaa*t157233*(1.6E1/3.0);
            double t157262 = t157232*t157197*t157198*(1.6E1/3.0);
            double t157263 = t157261+t157262;
            double t157264 = 1.0/(t157230*t157230);
            double t157265 = t157245+t157246+t157247+t157248-ccaa1*t157232*t157249*t157197*t157198*(8.0/3.0)- \
               ccaa4*t157200*t157201*t157260*t157259*t157199-ccaa2*t157204*t157263*t157264*t157197*t157198-ccaa3* \
               gamma_bb[index]*gcaa*t157203*t157253*t157254*t157197*t157198;
            double t157266 = c0f*t157211*t157213*2.0;
            double t157267 = c0p*t157187*t157196*2.0;
            double t157268 = 1.0/pow(rho_b[index],1.0E1);
            double t157269 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t157270 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t157271 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t157272 = ccaa4*t157200*t157201*t157219*t157199;
            double t157273 = ccaa1*gamma_bb[index]*gcaa*t157202*t157222;
            double t157274 = ccaa3*gamma_bb[index]*gcaa*t157203*t157227*t157197*t157198;
            double t157275 = ccaa2*t157204*t157231*t157197*t157198;
            double t157276 = ccaa0+t157272+t157273+t157274+t157275;
            double t157277 = 1.0/pow(rho_b[index],7.0/3.0);
            double t157278 = 1.0/pow(t157160,3.0/2.0);
            double t157279 = t157242*t157242;
            double t157280 = t157194*t157194;
            double t157281 = 1.0/(t157175*t157175*t157175);
            double t157282 = t157280*t157281*t157187*t157188*2.0;
            double t157283 = b4p*t157202*t157165*(1.0E1/9.0);
            double t157284 = b2p*c*t157277*(4.0/9.0);
            double t157285 = b3p*t157202*t157165*t157177*(1.0/1.2E1);
            double t157286 = b1p*c*t157177*t157277*(2.0/9.0);
            double t157287 = b3p*c*t157161*t157277*(2.0/3.0);
            double t157288 = t157283+t157284+t157285+t157286+t157287-b1p*t157202*t157165*t157278*(1.0/3.6E1);
            double t157289 = 1.0/(t157185*t157185);
            double t157290 = 1.0/(t157175*t157175*t157175*t157175);
            double t157291 = a1p*c*c0p*t157196*t157277*(8.0/9.0);
            double t157292 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t157293 = 1.0/(omega*omega);
            double t157294 = pow(t157292,2.0/3.0);
            double t157297 = t157293*t157294;
            double t157295 = exp(-t157297);
            double t157296 = 1.0/pow(t157292,1.0/3.0);
            double t157298 = omega*omega;
            double t157299 = t157295-1.0;
            double t157300 = 1.0/pow(t157292,2.0/3.0);
            double t157301 = 1.0/pow(t157292,4.0/3.0);
            double t157302 = 1.0/omega;
            double t157303 = t157300*t157298*t157299*(1.0/2.0);
            double t157304 = t157303-t157295+3.0/2.0;
            double t157305 = gx*gx;
            double t157306 = t157305*t157305;
            double t157307 = pow(rho_b[index],1.0/3.0);
            double t157308 = pow(t157292,1.0/3.0);
            double t157309 = t157302*t157308;
            double t157310 = erf(t157309);
            double t157311 = t157310*(3.991211251234741E15/2.251799813685248E15);
            double t157343 = omega*t157304*t157296;
            double t157312 = t157311-t157343;
            double t157313 = gamma_bb[index]*gx*t157202*4.0;
            double t157314 = gamma_bb[index]*gx*t157203*t157305*t157197*4.0;
            double t157315 = t157204*t157305*t157197*6.0;
            double t157316 = t157201*t157306*t157199;
            double t157317 = t157313+t157314+t157315+t157316+1.0;
            double t157318 = 1.0/t157317;
            double t157319 = gamma_bb[index]*gx*t157202;
            double t157320 = t157319+1.0;
            double t157321 = 1.0/t157320;
            double t157322 = gamma_bb[index]*gx*t157202*3.0;
            double t157323 = gamma_bb[index]*gx*t157203*t157305*t157197;
            double t157324 = t157204*t157305*t157197*3.0;
            double t157325 = t157322+t157323+t157324+1.0;
            double t157326 = 1.0/t157325;
            double t157327 = gamma_bb[index]*gx*t157202*2.0;
            double t157328 = t157204*t157305*t157197;
            double t157329 = t157327+t157328+1.0;
            double t157330 = 1.0/t157329;
            double t157331 = 1.0/rho_b[index];
            double t157332 = t157331*t157295*(1.0/3.0);
            double t157333 = 1.0/pow(t157292,5.0/3.0);
            double t157334 = t157333*t157298*t157299*(2.778046668940015E15/1.40737488355328E14);
            double t157338 = t157293*t157295*t157296*(2.778046668940015E15/7.0368744177664E13);
            double t157335 = t157332+t157334-t157338;
            double t157336 = 1.0/sqrt(3.141592653589793);
            double t157337 = omega*t157301*t157304*(2.778046668940015E15/1.40737488355328E14);
            double t157339 = omega*t157335*t157296;
            double t157340 = t157300*t157302*t157336*t157295*(1.108777112152858E31/1.584563250285287E29);
            double t157341 = t157340+t157337+t157339;
            double t157342 = 1.0/pow(t157292,7.0/3.0);
            double t157344 = cx4*t157201*t157306*t157318*t157199;
            double t157345 = cx1*gamma_bb[index]*gx*t157202*t157321;
            double t157346 = cx3*gamma_bb[index]*gx*t157203*t157305*t157326*t157197;
            double t157347 = cx2*t157204*t157330*t157305*t157197;
            double t157348 = cx0+t157344+t157345+t157346+t157347;
            double t157349 = pow(rho_b[index],4.0/3.0);
            double t157350 = omega*t157301*t157312*(2.778046668940015E15/1.05553116266496E14);
            double t157351 = cx4*t157306*t157235*t157318*t157199*(3.2E1/3.0);
            double t157352 = cx1*gamma_bb[index]*gx*t157321*t157233*(8.0/3.0);
            double t157353 = cx3*gamma_bb[index]*gx*t157305*t157234*t157326*t157197*8.0;
            double t157354 = cx2*t157330*t157232*t157305*t157197*(1.6E1/3.0);
            double t157355 = 1.0/(t157320*t157320);
            double t157356 = gamma_bb[index]*gx*t157233*8.0;
            double t157357 = gamma_bb[index]*gx*t157305*t157234*t157197*8.0;
            double t157358 = t157232*t157305*t157197*1.6E1;
            double t157359 = t157356+t157357+t157358;
            double t157360 = 1.0/(t157325*t157325);
            double t157361 = gamma_bb[index]*gx*t157233*(3.2E1/3.0);
            double t157362 = gamma_bb[index]*gx*t157305*t157234*t157197*3.2E1;
            double t157363 = t157232*t157305*t157197*3.2E1;
            double t157364 = t157306*t157235*t157199*(3.2E1/3.0);
            double t157365 = t157361+t157362+t157363+t157364;
            double t157366 = 1.0/(t157317*t157317);
            double t157367 = gamma_bb[index]*gx*t157233*(1.6E1/3.0);
            double t157368 = t157232*t157305*t157197*(1.6E1/3.0);
            double t157369 = t157367+t157368;
            double t157370 = 1.0/(t157329*t157329);
            double t157371 = t157351+t157352+t157353+t157354-cx1*t157232*t157305*t157355*t157197*(8.0/3.0)-cx2* \
               t157204*t157305*t157370*t157197*t157369-cx4*t157201*t157306*t157365*t157366*t157199-cx3*gamma_bb[index]* \
               gx*t157203*t157305*t157360*t157197*t157359;
            double t157372 = t157350-omega*t157341*t157296*(4.0/3.0);
            double t157373 = omega*t157312*t157296*(4.0/3.0);
            double t157374 = t157373-1.0;
            v_rho_b_rho_b_[index] = t157265*(t157267+t157210*t157207*(t157266-c0p*t157187*t157196*2.0))*2.0+t157276* \
               (t157244-t157195+t157210*t157207*(t157243+t157195-t157213*t157242*t157236*t157237-a1p*c*c0p*t157170* \
               t157196*(2.0/3.0)))*2.0+rho_b[index]*t157276*(-t157282-t157291+t157210*t157207*(t157282+t157291-t157187* \
               t157188*t157189*t157288-t157213*t157236*1.0/(t157169*t157169*t157169)*t157279*2.0+t157213*t157236* \
               t157237*(b2f*c*t157277*(4.0/9.0)+b4f*t157202*t157165*(1.0E1/9.0)+b1f*c*t157177*t157277*(2.0/9.0)+b3f* \
               c*t157161*t157277*(2.0/3.0)-b1f*t157202*t157165*t157278*(1.0/3.6E1)+b3f*t157202*t157165*t157177*(1.0/ \
               1.2E1))+t157213*1.0/(t157181*t157181)*1.0/(t157169*t157169*t157169*t157169)*t157178*t157279*(1.0/2.0) \
               -a1f*c*c0f*t157211*t157277*(8.0/9.0)-t157280*t157182*t157290*t157187*t157289*(1.0/2.0)+a1f*c*t157170* \
               t157242*t157236*t157237*(2.0/3.0)-a1p*c*t157170*t157194*t157188*t157189*(2.0/3.0))+t157187*t157188* \
               t157189*t157288+t157280*t157182*t157290*t157187*t157289*(1.0/2.0)+a1p*c*t157170*t157194*t157188*t157189* \
               (2.0/3.0))-rho_b[index]*t157265*(t157244-t157195+t157210*t157207*(t157243-t157244+t157195-t157213* \
               t157242*t157236*t157237))*2.0-rho_b[index]*(t157267+t157210*t157207*(t157266-t157267))*(ccaa1*gamma_bb[index]* \
               gcaa*t157222*t157270*(8.8E1/9.0)+ccaa4*t157200*t157271*t157219*t157199*(1.12E3/9.0)+ccaa2*t157231* \
               t157197*t157269*t157198*(3.04E2/9.0)-ccaa1*t157249*t157197*t157269*t157198*2.4E1-ccaa4*t157200*t157260* \
               t157235*t157259*t157199*(6.4E1/3.0)-ccaa2*t157232*t157263*t157264*t157197*t157198*(3.2E1/3.0)-ccaa2* \
               t157204*t157264*t157197*t157198*(gamma_bb[index]*gcaa*t157270*(1.76E2/9.0)+t157197*t157269*t157198* \
               (3.04E2/9.0))-ccaa4*t157200*t157201*t157260*t157199*(gamma_bb[index]*gcaa*t157270*(3.52E2/9.0)+t157200* \
               t157271*t157199*(1.12E3/9.0)+t157197*t157269*t157198*(6.08E2/3.0)+gamma_bb[index]*gcaa*t157268*t157197* \
               t157198*2.88E2)+ccaa4*t157200*t157201*1.0/(t157218*t157218*t157218)*(t157259*t157259)*t157199*2.0+ \
               ccaa2*1.0/(t157230*t157230*t157230)*t157204*(t157263*t157263)*t157197*t157198*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t157227*t157268*t157197*t157198*7.2E1+ccaa1*gamma_bb[index]*gcaa*1.0/(t157221*t157221*t157221) \
               *t157268*t157197*t157198*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t157203*1.0/(t157226*t157226*t157226) \
               *(t157253*t157253)*t157197*t157198*2.0-ccaa3*gamma_bb[index]*gcaa*t157203*t157254*t157197*t157198* \
               (gamma_bb[index]*gcaa*t157270*(8.8E1/3.0)+t157197*t157269*t157198*(3.04E2/3.0)+gamma_bb[index]*gcaa* \
               t157268*t157197*t157198*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t157234*t157253*t157254*t157197*t157198* \
               1.6E1)-c0*t157374*t157349*(cx1*gamma_bb[index]*gx*t157321*t157270*(8.8E1/9.0)-cx1*t157305*t157355* \
               t157197*t157269*2.4E1+cx2*t157330*t157305*t157197*t157269*(3.04E2/9.0)+cx4*t157306*t157271*t157318* \
               t157199*(1.12E3/9.0)-cx2*t157232*t157305*t157370*t157197*t157369*(3.2E1/3.0)-cx4*t157306*t157235*t157365* \
               t157366*t157199*(6.4E1/3.0)-cx2*t157204*t157305*t157370*t157197*(gamma_bb[index]*gx*t157270*(1.76E2/ \
               9.0)+t157305*t157197*t157269*(3.04E2/9.0))-cx4*t157201*t157306*t157366*t157199*(gamma_bb[index]*gx* \
               t157270*(3.52E2/9.0)+t157306*t157271*t157199*(1.12E3/9.0)+t157305*t157197*t157269*(6.08E2/3.0)+gamma_bb[index]* \
               gx*t157305*t157268*t157197*2.88E2)+cx2*t157204*t157305*1.0/(t157329*t157329*t157329)*t157197*(t157369* \
               t157369)*2.0+cx4*t157201*t157306*1.0/(t157317*t157317*t157317)*(t157365*t157365)*t157199*2.0+cx3*gamma_bb[index]* \
               gx*t157305*t157326*t157268*t157197*7.2E1+cx1*gamma_bb[index]*gx*1.0/(t157320*t157320*t157320)*t157305* \
               t157268*t157197*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t157203*t157305*1.0/(t157325*t157325*t157325)* \
               t157197*(t157359*t157359)*2.0-cx3*gamma_bb[index]*gx*t157203*t157305*t157360*t157197*(gamma_bb[index]* \
               gx*t157270*(8.8E1/3.0)+t157305*t157197*t157269*(3.04E2/3.0)+gamma_bb[index]*gx*t157305*t157268*t157197* \
               7.2E1)-cx3*gamma_bb[index]*gx*t157305*t157234*t157360*t157197*t157359*1.6E1)+c0*t157307*t157371*t157374* \
               (8.0/3.0)+c0*t157307*t157372*t157348*(8.0/3.0)-c0*t157371*t157372*t157349*2.0-c0*t157166*t157374*t157348* \
               (4.0/9.0)+c0*t157348*t157349*(omega*t157301*t157341*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t157312*t157342*(7.717543294808713E30/3.713820117856141E27)+omega*t157296*(omega*t157301*t157335*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t157304*t157342*(7.717543294808713E30/4.951760157141521E27)+omega*t157296* \
               (1.0/(rho_b[index]*rho_b[index])*t157295*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t157300*t157295*(7.717543294808713E30/ \
               4.951760157141521E27)+1.0/pow(t157292,8.0/3.0)*t157298*t157299*(3.858771647404357E31/1.980704062856608E28) \
               -t157301*t157293*t157295*(7.717543294808713E30/9.903520314283042E27)+t157331*t157293*t157295*t157296* \
               (2.778046668940015E15/2.11106232532992E14))+t157302*t157333*t157336*t157295*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t157331*t157336*t157295*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t155294 = 1.0/pow(rho_a[index],1.0/3.0);
                double t155295 = c*t155294;
                double t155296 = sqrt(t155295);
                double t155297 = pow(t155295,3.0/2.0);
                double t155298 = c*c;
                double t155299 = 1.0/pow(rho_a[index],2.0/3.0);
                double t155300 = 1.0/c0p;
                double t155301 = b1p*t155296;
                double t155302 = b3p*t155297;
                double t155303 = b4p*t155298*t155299;
                double t155304 = b2p*c*t155294;
                double t155305 = t155301+t155302+t155303+t155304;
                double t155306 = 1.0/t155305;
                double t155307 = t155300*t155306*(1.0/2.0);
                double t155308 = t155307+1.0;
                double t155309 = log(t155308);
                double t155310 = a1p*c*t155294;
                double t155311 = t155310+1.0;
                double t155312 = 1.0/pow(rho_a[index],8.0/3.0);
                double t155313 = gamma_aa[index]*gamma_aa[index];
                double t155314 = gcaa*gcaa;
                double t155315 = t155314*t155314;
                double t155316 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t155317 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t155318 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t155319 = gamma_aa[index]*gcaa*t155312;
                double t155320 = t155319+1.0;
                double t155321 = gamma_aa[index]*gcaa*t155312*3.0;
                double t155322 = gamma_aa[index]*gcaa*t155313*t155314*t155318;
                double t155323 = t155313*t155314*t155317*3.0;
                double t155324 = t155321+t155322+t155323+1.0;
                double t155325 = t155313*t155313;
                double t155326 = gamma_aa[index]*gcaa*t155312*4.0;
                double t155327 = gamma_aa[index]*gcaa*t155313*t155314*t155318*4.0;
                double t155328 = t155313*t155314*t155317*6.0;
                double t155329 = t155315*t155316*t155325;
                double t155330 = t155326+t155327+t155328+t155329+1.0;
                double t155331 = gamma_aa[index]*gcaa*t155312*2.0;
                double t155332 = t155313*t155314*t155317;
                double t155333 = t155331+t155332+1.0;
                double t155334 = rho_a[index]+rho_b[index];
                double t155335 = 1.0/pow(t155334,1.0/3.0);
                double t155336 = c*t155335;
                double t155337 = sqrt(t155336);
                double t155338 = b1p*t155337;
                double t155339 = pow(t155336,3.0/2.0);
                double t155340 = b3p*t155339;
                double t155341 = 1.0/pow(t155334,2.0/3.0);
                double t155342 = b4p*t155341*t155298;
                double t155343 = b2p*c*t155335;
                double t155344 = t155340+t155342+t155343+t155338;
                double t155345 = 1.0/pow(t155334,4.0/3.0);
                double t155346 = two_13*2.0;
                double t155347 = t155346-2.0;
                double t155348 = 1.0/t155347;
                double t155349 = 1.0/c0f;
                double t155350 = 1.0/t155344;
                double t155351 = t155300*t155350*(1.0/2.0);
                double t155352 = t155351+1.0;
                double t155353 = a1p*c*t155335;
                double t155354 = t155353+1.0;
                double t155355 = rho_a[index]-rho_b[index];
                double t155356 = t155355*t155355;
                double t155357 = 1.0/t155334;
                double t155358 = t155355*t155357;
                double t155359 = b1f*t155337;
                double t155360 = b3f*t155339;
                double t155361 = b4f*t155341*t155298;
                double t155362 = b2f*c*t155335;
                double t155363 = t155360+t155361+t155362+t155359;
                double t155364 = 1.0/t155363;
                double t155365 = t155364*t155349*(1.0/2.0);
                double t155366 = t155365+1.0;
                double t155367 = log(t155366);
                double t155368 = a1f*c*t155335;
                double t155369 = t155368+1.0;
                double t155370 = log(t155352);
                double t155380 = c0f*t155367*t155369*2.0;
                double t155381 = c0p*t155370*t155354*2.0;
                double t155371 = t155380-t155381;
                double t155372 = t155358+1.0;
                double t155373 = pow(t155372,4.0/3.0);
                double t155374 = -t155358+1.0;
                double t155375 = pow(t155374,4.0/3.0);
                double t155376 = t155373+t155375-2.0;
                double t155377 = 1.0/(t155334*t155334);
                double t155408 = t155355*t155377;
                double t155378 = -t155408+t155357;
                double t155379 = 1.0/(t155334*t155334*t155334*t155334);
                double t155382 = t155356*t155356;
                double t155383 = 1.0/pow(t155334,5.0/3.0);
                double t155384 = 1.0/sqrt(t155336);
                double t155385 = 1.0/t155352;
                double t155386 = 1.0/(t155344*t155344);
                double t155387 = b4p*t155383*t155298*(2.0/3.0);
                double t155388 = b2p*c*t155345*(1.0/3.0);
                double t155389 = b1p*c*t155345*t155384*(1.0/6.0);
                double t155390 = b3p*c*t155345*t155337*(1.0/2.0);
                double t155391 = t155390+t155387+t155388+t155389;
                double t155392 = t155354*t155391*t155385*t155386;
                double t155393 = 1.0/(t155334*t155334*t155334*t155334*t155334);
                double t155394 = 1.0/d2fz0;
                double t155395 = 1.0/Aa;
                double t155396 = b1a*t155337;
                double t155397 = b3a*t155339;
                double t155398 = b4a*t155341*t155298;
                double t155399 = b2a*c*t155335;
                double t155400 = t155396+t155397+t155398+t155399;
                double t155401 = 1.0/t155400;
                double t155402 = t155401*t155395*(1.0/2.0);
                double t155403 = t155402+1.0;
                double t155404 = log(t155403);
                double t155405 = a1a*c*t155335;
                double t155406 = t155405+1.0;
                double t155407 = pow(t155372,1.0/3.0);
                double t155409 = t155407*t155378*(4.0/3.0);
                double t155410 = pow(t155374,1.0/3.0);
                double t155411 = t155409-t155410*t155378*(4.0/3.0);
                double t155412 = t155382*t155379;
                double t155413 = t155412-1.0;
                double t155414 = pow(2.0,1.0/3.0);
                double t155415 = t155414*2.0;
                double t155416 = t155415-2.0;
                double t155417 = a1f*c*t155294;
                double t155418 = t155417+1.0;
                double t155419 = b1f*t155296;
                double t155420 = b3f*t155297;
                double t155421 = b4f*t155298*t155299;
                double t155422 = b2f*c*t155294;
                double t155423 = t155420+t155421+t155422+t155419;
                double t155424 = 1.0/t155423;
                double t155425 = t155424*t155349*(1.0/2.0);
                double t155426 = t155425+1.0;
                double t155427 = 1.0/pow(rho_a[index],4.0/3.0);
                double t155428 = 1.0/pow(rho_a[index],5.0/3.0);
                double t155429 = 1.0/sqrt(t155295);
                double t155430 = log(t155426);
                double t155431 = 1.0/t155308;
                double t155432 = 1.0/(t155305*t155305);
                double t155433 = b4p*t155428*t155298*(2.0/3.0);
                double t155434 = b2p*c*t155427*(1.0/3.0);
                double t155435 = b1p*c*t155427*t155429*(1.0/6.0);
                double t155436 = b3p*c*t155427*t155296*(1.0/2.0);
                double t155437 = t155433+t155434+t155435+t155436;
                double t155438 = t155311*t155431*t155432*t155437;
                double t155439 = c0f*t155430*t155418*2.0;
                double t155440 = c0p*t155311*t155309*2.0;
                double t155441 = gamma_aa[index]*t155312*(1.0/2.0);
                double t155442 = 1.0/pow(rho_b[index],8.0/3.0);
                double t155443 = gamma_bb[index]*t155442*(1.0/2.0);
                double t155444 = t155441+t155443;
                double t155445 = gcab*t155444;
                double t155446 = t155445+1.0;
                double t155447 = gcab*gcab;
                double t155448 = t155444*t155444;
                double t155449 = t155447*t155447;
                double t155450 = t155448*t155448;
                double t155451 = t155447*t155448;
                double t155452 = gcab*t155444*2.0;
                double t155453 = t155451+t155452+1.0;
                double t155454 = t155447*t155448*3.0;
                double t155455 = gcab*t155444*t155447*t155448;
                double t155456 = gcab*t155444*3.0;
                double t155457 = t155454+t155455+t155456+1.0;
                double t155458 = t155447*t155448*6.0;
                double t155459 = gcab*t155444*t155447*t155448*4.0;
                double t155460 = t155450*t155449;
                double t155461 = gcab*t155444*4.0;
                double t155462 = t155460+t155461+t155458+t155459+1.0;
                double t155463 = t155440-t155439;
                double t155464 = t155416*t155463*t155348;
                double t155465 = 1.0/pow(rho_b[index],1.0/3.0);
                double t155466 = c*t155465;
                double t155467 = sqrt(t155466);
                double t155468 = pow(t155466,3.0/2.0);
                double t155469 = 1.0/pow(rho_b[index],2.0/3.0);
                double t155470 = b1p*t155467;
                double t155471 = b3p*t155468;
                double t155472 = b4p*t155298*t155469;
                double t155473 = b2p*c*t155465;
                double t155474 = t155470+t155471+t155472+t155473;
                double t155475 = 1.0/t155474;
                double t155476 = t155300*t155475*(1.0/2.0);
                double t155477 = t155476+1.0;
                double t155478 = log(t155477);
                double t155479 = a1p*c*t155465;
                double t155480 = t155479+1.0;
                double t155481 = c0p*t155480*t155478*2.0;
                double t155482 = t155371*t155382*t155348*t155376*t155379;
                double t155483 = Aa*t155404*t155413*t155406*t155348*t155376*t155394*2.0;
                double t155484 = 1.0/t155446;
                double t155485 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t155486 = 1.0/(t155446*t155446);
                double t155487 = 1.0/t155453;
                double t155488 = 1.0/(t155457*t155457);
                double t155489 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t155490 = 1.0/(t155453*t155453);
                double t155491 = 1.0/t155457;
                double t155492 = 1.0/t155462;
                double t155493 = 1.0/(t155462*t155462);
                double t155494 = gcab*t155312*2.0;
                double t155495 = t155312*t155444*t155447*6.0;
                double t155496 = gcab*t155312*t155447*t155448*6.0;
                double t155497 = t155312*t155444*t155448*t155449*2.0;
                double t155498 = t155494+t155495+t155496+t155497;
                double t155499 = gamma_aa[index]*gcab*t155485*(8.0/3.0);
                double t155500 = gamma_aa[index]*t155444*t155447*t155485*(8.0/3.0);
                double t155501 = t155500+t155499;
                double t155502 = gcab*t155312;
                double t155503 = t155312*t155444*t155447;
                double t155504 = t155502+t155503;
                double t155505 = gamma_aa[index]*gcab*t155485*(1.6E1/3.0);
                double t155506 = gamma_aa[index]*gcab*t155447*t155448*t155485*1.6E1;
                double t155507 = gamma_aa[index]*t155444*t155448*t155449*t155485*(1.6E1/3.0);
                double t155508 = gamma_aa[index]*t155444*t155447*t155485*1.6E1;
                double t155509 = t155505+t155506+t155507+t155508;
                double t155510 = gcab*t155312*(3.0/2.0);
                double t155511 = t155312*t155444*t155447*3.0;
                double t155512 = gcab*t155312*t155447*t155448*(3.0/2.0);
                double t155513 = t155510+t155511+t155512;
                double t155514 = gamma_aa[index]*gcab*t155485*4.0;
                double t155515 = gamma_aa[index]*gcab*t155447*t155448*t155485*4.0;
                double t155516 = gamma_aa[index]*t155444*t155447*t155485*8.0;
                double t155517 = t155514+t155515+t155516;
                double t155518 = t155440-t155464;
                double t155519 = 1.0/t155320;
                double t155520 = 1.0/t155330;
                double t155521 = 1.0/t155333;
                double t155522 = 1.0/t155324;
                double t155523 = 1.0/(t155320*t155320);
                double t155524 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t155525 = 1.0/(t155324*t155324);
                double t155526 = 1.0/(t155333*t155333);
                double t155527 = gcaa*t155312*3.0;
                double t155528 = gamma_aa[index]*t155314*t155317*6.0;
                double t155529 = gcaa*t155313*t155314*t155318*3.0;
                double t155530 = t155527+t155528+t155529;
                double t155531 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t155532 = 1.0/(t155330*t155330);
                double t155533 = gcaa*t155312*4.0;
                double t155534 = gamma_aa[index]*t155314*t155317*1.2E1;
                double t155535 = gcaa*t155313*t155314*t155318*1.2E1;
                double t155536 = gamma_aa[index]*t155313*t155315*t155316*4.0;
                double t155537 = t155533+t155534+t155535+t155536;
                double t155538 = gcaa*t155312*2.0;
                double t155539 = gamma_aa[index]*t155314*t155317*2.0;
                double t155540 = t155538+t155539;
                double t155541 = gamma_aa[index]*gcaa*t155485*(1.6E1/3.0);
                double t155542 = t155313*t155314*t155489*(1.6E1/3.0);
                double t155543 = t155541+t155542;
                double t155544 = gamma_aa[index]*gcaa*t155485*8.0;
                double t155545 = gamma_aa[index]*gcaa*t155313*t155314*t155524*8.0;
                double t155546 = t155313*t155314*t155489*1.6E1;
                double t155547 = t155544+t155545+t155546;
                double t155548 = gamma_aa[index]*gcaa*t155485*(3.2E1/3.0);
                double t155549 = gamma_aa[index]*gcaa*t155313*t155314*t155524*3.2E1;
                double t155550 = t155313*t155314*t155489*3.2E1;
                double t155551 = t155315*t155531*t155325*(3.2E1/3.0);
                double t155552 = t155550+t155551+t155548+t155549;
                double t155553 = 1.0/t155426;
                double t155554 = 1.0/(t155423*t155423);
                double t155555 = b4f*t155428*t155298*(2.0/3.0);
                double t155556 = b2f*c*t155427*(1.0/3.0);
                double t155557 = b1f*c*t155427*t155429*(1.0/6.0);
                double t155558 = b3f*c*t155427*t155296*(1.0/2.0);
                double t155559 = t155555+t155556+t155557+t155558;
                double t155560 = a1f*c*c0f*t155430*t155427*(2.0/3.0);
                double t155561 = a1p*c*c0p*t155309*t155427*(2.0/3.0);
                double t155562 = ccaa1*gcaa*t155312*t155519;
                double t155563 = ccaa4*gamma_aa[index]*t155313*t155520*t155315*t155316*4.0;
                double t155564 = ccaa2*gamma_aa[index]*t155314*t155521*t155317*2.0;
                double t155565 = ccaa3*gcaa*t155313*t155314*t155522*t155318*3.0;
                double t155566 = t155562+t155563+t155564+t155565-ccaa1*gamma_aa[index]*t155314*t155523*t155317-ccaa2* \
                   t155313*t155314*t155540*t155317*t155526-ccaa4*t155315*t155316*t155325*t155532*t155537-ccaa3*gamma_aa[index]* \
                   gcaa*t155313*t155314*t155530*t155318*t155525;
                double t155567 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t155568 = 1.0/pow(t155567,1.0/3.0);
                double t155569 = 1.0/(omega*omega);
                double t155570 = pow(t155567,2.0/3.0);
                double t155620 = t155570*t155569;
                double t155571 = exp(-t155620);
                double t155572 = gx*gx;
                double t155573 = t155572*t155572;
                double t155574 = gamma_aa[index]*gx*t155312;
                double t155575 = t155574+1.0;
                double t155576 = gamma_aa[index]*gx*t155312*3.0;
                double t155577 = gamma_aa[index]*gx*t155313*t155318*t155572;
                double t155578 = t155313*t155317*t155572*3.0;
                double t155579 = t155576+t155577+t155578+1.0;
                double t155580 = gamma_aa[index]*gx*t155312*2.0;
                double t155581 = t155313*t155317*t155572;
                double t155582 = t155580+t155581+1.0;
                double t155583 = 1.0/(t155579*t155579);
                double t155584 = gamma_aa[index]*gx*t155312*4.0;
                double t155585 = gamma_aa[index]*gx*t155313*t155318*t155572*4.0;
                double t155586 = t155313*t155317*t155572*6.0;
                double t155587 = t155316*t155325*t155573;
                double t155588 = t155584+t155585+t155586+t155587+1.0;
                double t155589 = 1.0/(t155588*t155588);
                double t155590 = 1.0/(t155582*t155582);
                double t155591 = gamma_aa[index]*gx*t155485*(1.6E1/3.0);
                double t155592 = t155313*t155572*t155489*(1.6E1/3.0);
                double t155593 = t155591+t155592;
                double t155594 = gx*t155312*2.0;
                double t155595 = gamma_aa[index]*t155317*t155572*2.0;
                double t155596 = t155594+t155595;
                double t155597 = gx*t155312*3.0;
                double t155598 = gamma_aa[index]*t155317*t155572*6.0;
                double t155599 = gx*t155313*t155318*t155572*3.0;
                double t155600 = t155597+t155598+t155599;
                double t155601 = gamma_aa[index]*gx*t155485*8.0;
                double t155602 = gamma_aa[index]*gx*t155313*t155524*t155572*8.0;
                double t155603 = t155313*t155572*t155489*1.6E1;
                double t155604 = t155601+t155602+t155603;
                double t155605 = gamma_aa[index]*gx*t155485*(3.2E1/3.0);
                double t155606 = gamma_aa[index]*gx*t155313*t155524*t155572*3.2E1;
                double t155607 = t155313*t155572*t155489*3.2E1;
                double t155608 = t155531*t155325*t155573*(3.2E1/3.0);
                double t155609 = t155605+t155606+t155607+t155608;
                double t155610 = gx*t155312*4.0;
                double t155611 = gamma_aa[index]*t155317*t155572*1.2E1;
                double t155612 = gx*t155313*t155318*t155572*1.2E1;
                double t155613 = gamma_aa[index]*t155313*t155316*t155573*4.0;
                double t155614 = t155610+t155611+t155612+t155613;
                double t155615 = 1.0/omega;
                double t155616 = pow(t155567,1.0/3.0);
                double t155617 = t155615*t155616;
                double t155618 = erf(t155617);
                double t155619 = t155618*(3.991211251234741E15/2.251799813685248E15);
                double t155621 = omega*omega;
                double t155622 = 1.0/pow(t155567,2.0/3.0);
                double t155623 = t155571-1.0;
                double t155624 = t155621*t155622*t155623*(1.0/2.0);
                double t155625 = t155624-t155571+3.0/2.0;
                double t155636 = omega*t155625*t155568;
                double t155626 = -t155636+t155619;
                double t155627 = omega*t155626*t155568*(4.0/3.0);
                double t155628 = t155627-1.0;
                double t155629 = 1.0/t155575;
                double t155630 = 1.0/t155588;
                double t155631 = 1.0/t155582;
                double t155632 = 1.0/t155579;
                double t155633 = 1.0/(t155575*t155575);
                double t155634 = pow(rho_a[index],4.0/3.0);
                double t155635 = 1.0/pow(t155567,4.0/3.0);
                double t155637 = cx1*gx*t155312*t155629;
                double t155638 = cx4*gamma_aa[index]*t155313*t155630*t155316*t155573*4.0;
                double t155639 = cx2*gamma_aa[index]*t155631*t155317*t155572*2.0;
                double t155640 = cx3*gx*t155313*t155632*t155318*t155572*3.0;
                double t155641 = t155640+t155637+t155638+t155639-cx1*gamma_aa[index]*t155317*t155633*t155572-cx2* \
                   t155313*t155317*t155572*t155590*t155596-cx4*t155316*t155325*t155614*t155573*t155589-cx3*gamma_aa[index]* \
                   gx*t155600*t155313*t155318*t155572*t155583;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t155518+rho_b[index]*(t155481-t155416*t155348*(t155481- \
                   c0f*log((t155349*(1.0/2.0))/(b1f*t155467+b3f*t155468+b2f*c*t155465+b4f*t155298*t155469)+1.0)*(a1f* \
                   c*t155465+1.0)*2.0))-t155334*(t155381+t155482+t155483))*(ccab1*gcab*t155484*t155485*(4.0/3.0)-ccab2* \
                   t155490*t155447*t155448*(gcab*t155485*(8.0/3.0)+gamma_aa[index]*t155447*t155489*(4.0/3.0)+t155444* \
                   t155447*t155485*(8.0/3.0))-ccab4*t155450*t155493*t155449*(gcab*t155485*(1.6E1/3.0)+gamma_aa[index]* \
                   t155447*t155489*8.0+t155444*t155447*t155485*1.6E1+gamma_aa[index]*t155448*t155449*t155489*8.0+gcab* \
                   t155447*t155448*t155485*1.6E1+t155444*t155448*t155449*t155485*(1.6E1/3.0)+gamma_aa[index]*gcab*t155444* \
                   t155447*t155489*1.6E1)-ccab1*gamma_aa[index]*t155447*t155486*t155489*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t155447*t155487*t155489*(4.0/3.0)-ccab1*t155444*t155447*t155485*t155486*(4.0/3.0)+ccab2*t155444*t155447* \
                   t155485*t155487*(8.0/3.0)-ccab2*t155312*t155501*t155444*t155490*t155447+ccab4*t155444*t155492*t155448* \
                   t155449*t155485*(1.6E1/3.0)+ccab2*t155501*t155504*1.0/(t155453*t155453*t155453)*t155447*t155448*2.0+ \
                   ccab4*t155450*1.0/(t155462*t155462*t155462)*t155509*t155449*t155498*2.0+ccab4*gamma_aa[index]*t155492* \
                   t155448*t155449*t155489*8.0+ccab3*gcab*t155491*t155447*t155448*t155485*4.0+ccab3*gamma_aa[index]*gcab* \
                   t155444*t155491*t155447*t155489*4.0-ccab2*gamma_aa[index]*t155504*t155444*t155490*t155447*t155485* \
                   (8.0/3.0)-ccab3*gcab*t155312*t155517*t155447*t155448*t155488*(3.0/2.0)-ccab4*t155312*t155444*t155509* \
                   t155448*t155493*t155449*2.0-ccab3*gcab*t155444*t155447*t155448*t155488*(gcab*t155485*4.0+gamma_aa[index]* \
                   t155447*t155489*4.0+t155444*t155447*t155485*8.0+gcab*t155447*t155448*t155485*4.0+gamma_aa[index]*gcab* \
                   t155444*t155447*t155489*4.0)+ccab1*gamma_aa[index]*gcab*t155444*1.0/(t155446*t155446*t155446)*t155447* \
                   t155489*(4.0/3.0)+ccab3*gcab*t155513*t155444*t155517*t155447*t155448*1.0/(t155457*t155457*t155457) \
                   *2.0-ccab3*gamma_aa[index]*gcab*t155513*t155447*t155448*t155485*t155488*4.0-ccab4*gamma_aa[index]* \
                   t155444*t155448*t155493*t155449*t155485*t155498*(1.6E1/3.0))-t155566*(t155440+t155416*t155348*(t155439- \
                   c0p*t155311*t155309*2.0))-(-t155440+t155381+t155464+t155482+t155483+t155334*(t155392-t155382*t155348* \
                   t155376*t155379*(t155392-(1.0/(t155363*t155363)*t155369*(b2f*c*t155345*(1.0/3.0)+b4f*t155383*t155298* \
                   (2.0/3.0)+b1f*c*t155345*t155384*(1.0/6.0)+b3f*c*t155345*t155337*(1.0/2.0)))/t155366+a1f*c*c0f*t155345* \
                   t155367*(2.0/3.0)-a1p*c*c0p*t155370*t155345*(2.0/3.0))-a1p*c*c0p*t155370*t155345*(2.0/3.0)+t155411* \
                   t155371*t155382*t155348*t155379-t155371*t155382*t155348*t155393*t155376*4.0+t155371*t155355*t155356* \
                   t155348*t155376*t155379*4.0-Aa*t155404*t155406*t155348*t155376*t155394*(t155382*t155393*4.0-t155355* \
                   t155356*t155379*4.0)*2.0+Aa*t155411*t155404*t155413*t155406*t155348*t155394*2.0+(1.0/(t155400*t155400) \
                   *t155413*t155406*t155348*t155376*t155394*(b2a*c*t155345*(1.0/3.0)+b4a*t155383*t155298*(2.0/3.0)+b1a* \
                   c*t155345*t155384*(1.0/6.0)+b3a*c*t155345*t155337*(1.0/2.0)))/t155403-Aa*a1a*c*t155404*t155413*t155345* \
                   t155348*t155376*t155394*(2.0/3.0))+rho_a[index]*(t155561-t155438+t155416*t155348*(t155560+t155438- \
                   t155418*t155553*t155554*t155559-a1p*c*c0p*t155309*t155427*(2.0/3.0))))*(ccab1*gcab*t155312*t155484* \
                   (1.0/2.0)-ccab1*t155312*t155444*t155447*t155486*(1.0/2.0)+ccab2*t155312*t155444*t155447*t155487-ccab2* \
                   t155504*t155490*t155447*t155448-ccab4*t155450*t155493*t155449*t155498+ccab4*t155312*t155444*t155492* \
                   t155448*t155449*2.0+ccab3*gcab*t155312*t155491*t155447*t155448*(3.0/2.0)-ccab3*gcab*t155513*t155444* \
                   t155447*t155448*t155488)-rho_a[index]*t155518*(ccaa1*gcaa*t155519*t155485*(-8.0/3.0)-ccaa2*gamma_aa[index]* \
                   t155314*t155521*t155489*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t155314*t155523*t155489*8.0+ccaa4*t155315* \
                   t155531*t155325*t155532*t155537*(3.2E1/3.0)+ccaa2*t155313*t155314*t155540*t155526*t155489*(1.6E1/3.0) \
                   +ccaa4*t155315*t155316*t155325*t155532*(gcaa*t155485*(3.2E1/3.0)+gamma_aa[index]*t155314*t155489*6.4E1+ \
                   gamma_aa[index]*t155313*t155315*t155531*(1.28E2/3.0)+gcaa*t155313*t155314*t155524*9.6E1)-ccaa1*gcaa* \
                   1.0/(t155320*t155320*t155320)*t155313*t155314*t155524*(1.6E1/3.0)+ccaa2*t155313*t155314*t155317*t155526* \
                   (gcaa*t155485*(1.6E1/3.0)+gamma_aa[index]*t155314*t155489*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t155313* \
                   t155520*t155315*t155531*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t155314*t155317*t155543*t155526*2.0-ccaa3* \
                   gcaa*t155313*t155314*t155522*t155524*2.4E1+ccaa4*gamma_aa[index]*t155313*t155315*t155316*t155532*t155552* \
                   4.0+ccaa3*gcaa*t155313*t155314*t155318*t155525*t155547*3.0-ccaa2*t155313*t155314*1.0/(t155333*t155333* \
                   t155333)*t155540*t155317*t155543*2.0-ccaa4*1.0/(t155330*t155330*t155330)*t155315*t155316*t155325*t155552* \
                   t155537*2.0+ccaa3*gamma_aa[index]*gcaa*t155313*t155314*t155318*t155525*(gcaa*t155485*8.0+gamma_aa[index]* \
                   t155314*t155489*3.2E1+gcaa*t155313*t155314*t155524*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t155313*t155314* \
                   t155530*t155524*t155525*8.0-ccaa3*gamma_aa[index]*gcaa*t155313*t155314*t155530*1.0/(t155324*t155324* \
                   t155324)*t155318*t155547*2.0)+rho_a[index]*t155566*(t155561-t155438+t155416*t155348*(t155560-t155561+ \
                   t155438-t155418*t155553*t155554*t155559))-c0*t155641*t155634*(omega*t155568*(omega*t155625*t155635* \
                   (2.778046668940015E15/1.40737488355328E14)+omega*t155568*((t155571*(1.0/3.0))/rho_a[index]+t155621* \
                   t155623*1.0/pow(t155567,5.0/3.0)*(2.778046668940015E15/1.40737488355328E14)-t155571*t155568*t155569* \
                   (2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t155622*t155615*t155571*(1.108777112152858E31/ \
                   1.584563250285287E29))*(4.0/3.0)-omega*t155626*t155635*(2.778046668940015E15/1.05553116266496E14)) \
                   -c0*t155634*t155628*(cx1*gx*t155485*t155629*(-8.0/3.0)+cx1*gamma_aa[index]*t155633*t155572*t155489* \
                   8.0-cx2*gamma_aa[index]*t155631*t155572*t155489*(3.2E1/3.0)+cx2*t155313*t155572*t155590*t155596*t155489* \
                   (1.6E1/3.0)+cx4*t155531*t155325*t155614*t155573*t155589*(3.2E1/3.0)+cx4*t155316*t155325*t155573*t155589* \
                   (gx*t155485*(3.2E1/3.0)+gamma_aa[index]*t155572*t155489*6.4E1+gamma_aa[index]*t155313*t155531*t155573* \
                   (1.28E2/3.0)+gx*t155313*t155524*t155572*9.6E1)-cx1*gx*t155313*t155524*t155572*1.0/(t155575*t155575* \
                   t155575)*(1.6E1/3.0)+cx2*t155313*t155317*t155572*t155590*(gx*t155485*(1.6E1/3.0)+gamma_aa[index]*t155572* \
                   t155489*(3.2E1/3.0))+cx2*gamma_aa[index]*t155317*t155572*t155590*t155593*2.0-cx4*gamma_aa[index]*t155313* \
                   t155531*t155630*t155573*(1.28E2/3.0)-cx3*gx*t155313*t155524*t155632*t155572*2.4E1+cx4*gamma_aa[index]* \
                   t155313*t155316*t155573*t155609*t155589*4.0+cx3*gx*t155313*t155604*t155318*t155572*t155583*3.0-cx2* \
                   t155313*t155317*t155572*1.0/(t155582*t155582*t155582)*t155593*t155596*2.0-cx4*t155316*t155325*t155614* \
                   t155573*t155609*1.0/(t155588*t155588*t155588)*2.0+cx3*gamma_aa[index]*gx*t155313*t155318*t155572*t155583* \
                   (gx*t155485*8.0+gamma_aa[index]*t155572*t155489*3.2E1+gx*t155313*t155524*t155572*2.4E1)+cx3*gamma_aa[index]* \
                   gx*t155600*t155313*t155524*t155572*t155583*8.0-cx3*gamma_aa[index]*gx*t155600*t155313*t155604*t155318* \
                   t155572*1.0/(t155579*t155579*t155579)*2.0)-c0*pow(rho_a[index],1.0/3.0)*t155641*t155628*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t158131 = 1.0/pow(rho_a[index],1.0/3.0);
                double t158132 = c*t158131;
                double t158133 = sqrt(t158132);
                double t158134 = pow(t158132,3.0/2.0);
                double t158135 = c*c;
                double t158136 = 1.0/pow(rho_a[index],2.0/3.0);
                double t158137 = 1.0/c0p;
                double t158138 = b1p*t158133;
                double t158139 = b3p*t158134;
                double t158140 = b4p*t158135*t158136;
                double t158141 = b2p*c*t158131;
                double t158142 = t158140+t158141+t158138+t158139;
                double t158143 = 1.0/t158142;
                double t158144 = t158143*t158137*(1.0/2.0);
                double t158145 = t158144+1.0;
                double t158146 = log(t158145);
                double t158147 = a1p*c*t158131;
                double t158148 = t158147+1.0;
                double t158149 = 1.0/pow(rho_a[index],8.0/3.0);
                double t158150 = gamma_aa[index]*gamma_aa[index];
                double t158151 = gcaa*gcaa;
                double t158152 = t158151*t158151;
                double t158153 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t158154 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t158155 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t158156 = gamma_aa[index]*gcaa*t158149;
                double t158157 = t158156+1.0;
                double t158158 = gamma_aa[index]*gcaa*t158149*3.0;
                double t158159 = gamma_aa[index]*gcaa*t158150*t158151*t158155;
                double t158160 = t158150*t158151*t158154*3.0;
                double t158161 = t158160+t158158+t158159+1.0;
                double t158162 = t158150*t158150;
                double t158163 = gamma_aa[index]*gcaa*t158149*4.0;
                double t158164 = gamma_aa[index]*gcaa*t158150*t158151*t158155*4.0;
                double t158165 = t158150*t158151*t158154*6.0;
                double t158166 = t158152*t158153*t158162;
                double t158167 = t158163+t158164+t158165+t158166+1.0;
                double t158168 = gamma_aa[index]*gcaa*t158149*2.0;
                double t158169 = t158150*t158151*t158154;
                double t158170 = t158168+t158169+1.0;
                double t158171 = pow(2.0,1.0/3.0);
                double t158172 = t158171*2.0;
                double t158173 = t158172-2.0;
                double t158174 = two_13*2.0;
                double t158175 = t158174-2.0;
                double t158176 = 1.0/t158175;
                double t158177 = 1.0/c0f;
                double t158178 = b1f*t158133;
                double t158179 = b3f*t158134;
                double t158180 = b4f*t158135*t158136;
                double t158181 = b2f*c*t158131;
                double t158182 = t158180+t158181+t158178+t158179;
                double t158183 = 1.0/t158182;
                double t158184 = t158183*t158177*(1.0/2.0);
                double t158185 = t158184+1.0;
                double t158186 = log(t158185);
                double t158187 = a1f*c*t158131;
                double t158188 = t158187+1.0;
                double t158189 = c0f*t158186*t158188*2.0;
                double t158190 = c0p*t158146*t158148*2.0;
                double t158191 = 1.0/t158157;
                double t158192 = 1.0/t158167;
                double t158193 = 1.0/t158170;
                double t158194 = 1.0/t158161;
                double t158195 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t158196 = 1.0/(t158157*t158157);
                double t158197 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t158198 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t158199 = 1.0/(t158161*t158161);
                double t158200 = 1.0/(t158170*t158170);
                double t158201 = gcaa*t158149*3.0;
                double t158202 = gamma_aa[index]*t158151*t158154*6.0;
                double t158203 = gcaa*t158150*t158151*t158155*3.0;
                double t158204 = t158201+t158202+t158203;
                double t158205 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t158206 = 1.0/(t158167*t158167);
                double t158207 = gcaa*t158149*4.0;
                double t158208 = gamma_aa[index]*t158151*t158154*1.2E1;
                double t158209 = gcaa*t158150*t158151*t158155*1.2E1;
                double t158210 = gamma_aa[index]*t158150*t158152*t158153*4.0;
                double t158211 = t158210+t158207+t158208+t158209;
                double t158212 = gcaa*t158149*2.0;
                double t158213 = gamma_aa[index]*t158151*t158154*2.0;
                double t158214 = t158212+t158213;
                double t158215 = gamma_aa[index]*gcaa*t158198*(1.6E1/3.0);
                double t158216 = t158150*t158151*t158195*(1.6E1/3.0);
                double t158217 = t158215+t158216;
                double t158218 = gamma_aa[index]*gcaa*t158198*8.0;
                double t158219 = gamma_aa[index]*gcaa*t158150*t158151*t158197*8.0;
                double t158220 = t158150*t158151*t158195*1.6E1;
                double t158221 = t158220+t158218+t158219;
                double t158222 = gamma_aa[index]*gcaa*t158198*(3.2E1/3.0);
                double t158223 = gamma_aa[index]*gcaa*t158150*t158151*t158197*3.2E1;
                double t158224 = t158150*t158151*t158195*3.2E1;
                double t158225 = t158205*t158152*t158162*(3.2E1/3.0);
                double t158226 = t158222+t158223+t158224+t158225;
                double t158227 = 1.0/pow(rho_a[index],4.0/3.0);
                double t158228 = 1.0/pow(rho_a[index],5.0/3.0);
                double t158229 = 1.0/sqrt(t158132);
                double t158230 = 1.0/t158145;
                double t158231 = 1.0/(t158142*t158142);
                double t158232 = b4p*t158135*t158228*(2.0/3.0);
                double t158233 = b2p*c*t158227*(1.0/3.0);
                double t158234 = b1p*c*t158227*t158229*(1.0/6.0);
                double t158235 = b3p*c*t158133*t158227*(1.0/2.0);
                double t158236 = t158232+t158233+t158234+t158235;
                double t158237 = t158230*t158231*t158236*t158148;
                double t158238 = ccaa1*gcaa*t158191*t158149;
                double t158239 = ccaa4*gamma_aa[index]*t158150*t158152*t158153*t158192*4.0;
                double t158240 = ccaa2*gamma_aa[index]*t158151*t158154*t158193*2.0;
                double t158241 = ccaa3*gcaa*t158150*t158151*t158155*t158194*3.0;
                double t158242 = t158240+t158241+t158238+t158239-ccaa1*gamma_aa[index]*t158151*t158154*t158196-ccaa2* \
                   t158200*t158150*t158151*t158214*t158154-ccaa4*t158211*t158152*t158206*t158153*t158162-ccaa3*gamma_aa[index]* \
                   gcaa*t158150*t158204*t158151*t158155*t158199;
                double t158243 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t158244 = 1.0/pow(t158243,1.0/3.0);
                double t158245 = 1.0/(omega*omega);
                double t158246 = pow(t158243,2.0/3.0);
                double t158296 = t158245*t158246;
                double t158247 = exp(-t158296);
                double t158248 = gx*gx;
                double t158249 = t158248*t158248;
                double t158250 = gamma_aa[index]*gx*t158149;
                double t158251 = t158250+1.0;
                double t158252 = gamma_aa[index]*gx*t158149*3.0;
                double t158253 = gamma_aa[index]*gx*t158150*t158155*t158248;
                double t158254 = t158150*t158154*t158248*3.0;
                double t158255 = t158252+t158253+t158254+1.0;
                double t158256 = gamma_aa[index]*gx*t158149*2.0;
                double t158257 = t158150*t158154*t158248;
                double t158258 = t158256+t158257+1.0;
                double t158259 = 1.0/(t158255*t158255);
                double t158260 = gamma_aa[index]*gx*t158149*4.0;
                double t158261 = gamma_aa[index]*gx*t158150*t158155*t158248*4.0;
                double t158262 = t158150*t158154*t158248*6.0;
                double t158263 = t158153*t158162*t158249;
                double t158264 = t158260+t158261+t158262+t158263+1.0;
                double t158265 = 1.0/(t158264*t158264);
                double t158266 = 1.0/(t158258*t158258);
                double t158267 = gamma_aa[index]*gx*t158198*(1.6E1/3.0);
                double t158268 = t158150*t158248*t158195*(1.6E1/3.0);
                double t158269 = t158267+t158268;
                double t158270 = gx*t158149*2.0;
                double t158271 = gamma_aa[index]*t158154*t158248*2.0;
                double t158272 = t158270+t158271;
                double t158273 = gx*t158149*3.0;
                double t158274 = gamma_aa[index]*t158154*t158248*6.0;
                double t158275 = gx*t158150*t158155*t158248*3.0;
                double t158276 = t158273+t158274+t158275;
                double t158277 = gamma_aa[index]*gx*t158198*8.0;
                double t158278 = gamma_aa[index]*gx*t158150*t158248*t158197*8.0;
                double t158279 = t158150*t158248*t158195*1.6E1;
                double t158280 = t158277+t158278+t158279;
                double t158281 = gamma_aa[index]*gx*t158198*(3.2E1/3.0);
                double t158282 = gamma_aa[index]*gx*t158150*t158248*t158197*3.2E1;
                double t158283 = t158150*t158248*t158195*3.2E1;
                double t158284 = t158205*t158162*t158249*(3.2E1/3.0);
                double t158285 = t158281+t158282+t158283+t158284;
                double t158286 = gx*t158149*4.0;
                double t158287 = gamma_aa[index]*t158154*t158248*1.2E1;
                double t158288 = gx*t158150*t158155*t158248*1.2E1;
                double t158289 = gamma_aa[index]*t158150*t158153*t158249*4.0;
                double t158290 = t158286+t158287+t158288+t158289;
                double t158291 = 1.0/omega;
                double t158292 = pow(t158243,1.0/3.0);
                double t158293 = t158291*t158292;
                double t158294 = erf(t158293);
                double t158295 = t158294*(3.991211251234741E15/2.251799813685248E15);
                double t158297 = omega*omega;
                double t158298 = 1.0/pow(t158243,2.0/3.0);
                double t158299 = t158247-1.0;
                double t158300 = t158297*t158298*t158299*(1.0/2.0);
                double t158301 = t158300-t158247+3.0/2.0;
                double t158312 = omega*t158301*t158244;
                double t158302 = -t158312+t158295;
                double t158303 = omega*t158302*t158244*(4.0/3.0);
                double t158304 = t158303-1.0;
                double t158305 = 1.0/t158251;
                double t158306 = 1.0/t158264;
                double t158307 = 1.0/t158258;
                double t158308 = 1.0/t158255;
                double t158309 = 1.0/(t158251*t158251);
                double t158310 = pow(rho_a[index],4.0/3.0);
                double t158311 = 1.0/pow(t158243,4.0/3.0);
                double t158313 = cx1*gx*t158305*t158149;
                double t158314 = cx4*gamma_aa[index]*t158150*t158153*t158306*t158249*4.0;
                double t158315 = cx2*gamma_aa[index]*t158154*t158307*t158248*2.0;
                double t158316 = cx3*gx*t158150*t158155*t158308*t158248*3.0;
                double t158317 = t158313+t158314+t158315+t158316-cx1*gamma_aa[index]*t158154*t158309*t158248-cx2* \
                   t158150*t158154*t158272*t158248*t158266-cx4*t158153*t158162*t158290*t158265*t158249-cx3*gamma_aa[index]* \
                   gx*t158150*t158155*t158248*t158276*t158259;
                v_rho_a_gamma_aa_[index] = -t158242*(t158190+t158173*t158176*(t158189-c0p*t158146*t158148*2.0))+rho_a[index]* \
                   t158242*(-t158237+t158173*t158176*(t158237-(1.0/(t158182*t158182)*t158188*(b2f*c*t158227*(1.0/3.0) \
                   +b4f*t158135*t158228*(2.0/3.0)+b1f*c*t158227*t158229*(1.0/6.0)+b3f*c*t158133*t158227*(1.0/2.0)))/t158185+ \
                   a1f*c*c0f*t158227*t158186*(2.0/3.0)-a1p*c*c0p*t158146*t158227*(2.0/3.0))+a1p*c*c0p*t158146*t158227* \
                   (2.0/3.0))-rho_a[index]*(t158190-t158173*t158176*(t158190-t158189))*(ccaa1*gcaa*t158191*t158198*(- \
                   8.0/3.0)-ccaa2*gamma_aa[index]*t158151*t158193*t158195*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t158151*t158195* \
                   t158196*8.0+ccaa2*t158200*t158150*t158151*t158214*t158195*(1.6E1/3.0)+ccaa4*t158211*t158205*t158152* \
                   t158206*t158162*(3.2E1/3.0)+ccaa4*t158152*t158206*t158153*t158162*(gcaa*t158198*(3.2E1/3.0)+gamma_aa[index]* \
                   t158151*t158195*6.4E1+gamma_aa[index]*t158150*t158205*t158152*(1.28E2/3.0)+gcaa*t158150*t158151*t158197* \
                   9.6E1)-ccaa1*gcaa*t158150*t158151*1.0/(t158157*t158157*t158157)*t158197*(1.6E1/3.0)+ccaa2*t158200* \
                   t158150*t158151*t158154*(gcaa*t158198*(1.6E1/3.0)+gamma_aa[index]*t158151*t158195*(3.2E1/3.0))+ccaa2* \
                   gamma_aa[index]*t158200*t158151*t158154*t158217*2.0-ccaa4*gamma_aa[index]*t158150*t158205*t158152* \
                   t158192*(1.28E2/3.0)-ccaa3*gcaa*t158150*t158151*t158194*t158197*2.4E1+ccaa4*gamma_aa[index]*t158150* \
                   t158152*t158206*t158153*t158226*4.0+ccaa3*gcaa*t158221*t158150*t158151*t158155*t158199*3.0-ccaa2*t158150* \
                   t158151*t158214*1.0/(t158170*t158170*t158170)*t158154*t158217*2.0-ccaa4*t158211*t158152*t158153*t158162* \
                   t158226*1.0/(t158167*t158167*t158167)*2.0+ccaa3*gamma_aa[index]*gcaa*t158150*t158151*t158155*t158199* \
                   (gcaa*t158198*8.0+gamma_aa[index]*t158151*t158195*3.2E1+gcaa*t158150*t158151*t158197*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t158150*t158204*t158151*t158197*t158199*8.0-ccaa3*gamma_aa[index]*gcaa*t158221* \
                   t158150*t158204*t158151*1.0/(t158161*t158161*t158161)*t158155*2.0)-c0*t158310*t158317*(omega*t158244* \
                   (omega*t158301*t158311*(2.778046668940015E15/1.40737488355328E14)+omega*t158244*((t158247*(1.0/3.0) \
                   )/rho_a[index]+1.0/pow(t158243,5.0/3.0)*t158297*t158299*(2.778046668940015E15/1.40737488355328E14) \
                   -t158244*t158245*t158247*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t158291* \
                   t158247*t158298*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t158302*t158311*(2.778046668940015E15/ \
                   1.05553116266496E14))-c0*t158310*t158304*(cx1*gx*t158305*t158198*(-8.0/3.0)+cx1*gamma_aa[index]*t158309* \
                   t158248*t158195*8.0-cx2*gamma_aa[index]*t158307*t158248*t158195*(3.2E1/3.0)+cx2*t158150*t158272*t158248* \
                   t158266*t158195*(1.6E1/3.0)+cx4*t158205*t158162*t158290*t158265*t158249*(3.2E1/3.0)+cx4*t158153*t158162* \
                   t158265*t158249*(gx*t158198*(3.2E1/3.0)+gamma_aa[index]*t158248*t158195*6.4E1+gamma_aa[index]*t158150* \
                   t158205*t158249*(1.28E2/3.0)+gx*t158150*t158248*t158197*9.6E1)-cx1*gx*t158150*1.0/(t158251*t158251* \
                   t158251)*t158248*t158197*(1.6E1/3.0)+cx2*t158150*t158154*t158248*t158266*(gx*t158198*(1.6E1/3.0)+gamma_aa[index]* \
                   t158248*t158195*(3.2E1/3.0))+cx2*gamma_aa[index]*t158154*t158248*t158266*t158269*2.0-cx4*gamma_aa[index]* \
                   t158150*t158205*t158306*t158249*(1.28E2/3.0)-cx3*gx*t158150*t158308*t158248*t158197*2.4E1+cx4*gamma_aa[index]* \
                   t158150*t158153*t158265*t158249*t158285*4.0+cx3*gx*t158150*t158280*t158155*t158248*t158259*3.0-cx2* \
                   t158150*t158154*t158272*t158248*1.0/(t158258*t158258*t158258)*t158269*2.0-cx4*t158153*t158162*t158290* \
                   1.0/(t158264*t158264*t158264)*t158249*t158285*2.0+cx3*gamma_aa[index]*gx*t158150*t158155*t158248*t158259* \
                   (gx*t158198*8.0+gamma_aa[index]*t158248*t158195*3.2E1+gx*t158150*t158248*t158197*2.4E1)+cx3*gamma_aa[index]* \
                   gx*t158150*t158248*t158276*t158259*t158197*8.0-cx3*gamma_aa[index]*gx*t158150*t158280*t158155*1.0/ \
                   (t158255*t158255*t158255)*t158248*t158276*2.0)-c0*pow(rho_a[index],1.0/3.0)*t158304*t158317*(4.0/3.0) \
                   ;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t155644 = rho_a[index]+rho_b[index];
                double t155645 = 1.0/pow(t155644,1.0/3.0);
                double t155646 = c*t155645;
                double t155647 = sqrt(t155646);
                double t155648 = b1p*t155647;
                double t155649 = pow(t155646,3.0/2.0);
                double t155650 = b3p*t155649;
                double t155651 = c*c;
                double t155652 = 1.0/pow(t155644,2.0/3.0);
                double t155653 = b4p*t155651*t155652;
                double t155654 = b2p*c*t155645;
                double t155655 = t155650+t155653+t155654+t155648;
                double t155656 = 1.0/pow(t155644,4.0/3.0);
                double t155657 = 1.0/c0p;
                double t155658 = 1.0/t155655;
                double t155659 = t155657*t155658*(1.0/2.0);
                double t155660 = t155659+1.0;
                double t155661 = a1p*c*t155645;
                double t155662 = t155661+1.0;
                double t155663 = rho_a[index]-rho_b[index];
                double t155664 = t155663*t155663;
                double t155665 = 1.0/t155644;
                double t155666 = t155663*t155665;
                double t155667 = two_13*2.0;
                double t155668 = t155667-2.0;
                double t155669 = 1.0/t155668;
                double t155670 = 1.0/c0f;
                double t155671 = b1f*t155647;
                double t155672 = b3f*t155649;
                double t155673 = b4f*t155651*t155652;
                double t155674 = b2f*c*t155645;
                double t155675 = t155671+t155672+t155673+t155674;
                double t155676 = 1.0/t155675;
                double t155677 = t155670*t155676*(1.0/2.0);
                double t155678 = t155677+1.0;
                double t155679 = log(t155678);
                double t155680 = a1f*c*t155645;
                double t155681 = t155680+1.0;
                double t155682 = log(t155660);
                double t155692 = c0f*t155681*t155679*2.0;
                double t155693 = c0p*t155662*t155682*2.0;
                double t155683 = t155692-t155693;
                double t155684 = t155666+1.0;
                double t155685 = pow(t155684,4.0/3.0);
                double t155686 = -t155666+1.0;
                double t155687 = pow(t155686,4.0/3.0);
                double t155688 = t155685+t155687-2.0;
                double t155689 = 1.0/(t155644*t155644);
                double t155720 = t155663*t155689;
                double t155690 = -t155720+t155665;
                double t155691 = 1.0/(t155644*t155644*t155644*t155644);
                double t155694 = t155664*t155664;
                double t155695 = 1.0/pow(t155644,5.0/3.0);
                double t155696 = 1.0/sqrt(t155646);
                double t155697 = 1.0/t155660;
                double t155698 = 1.0/(t155655*t155655);
                double t155699 = b4p*t155651*t155695*(2.0/3.0);
                double t155700 = b2p*c*t155656*(1.0/3.0);
                double t155701 = b1p*c*t155656*t155696*(1.0/6.0);
                double t155702 = b3p*c*t155647*t155656*(1.0/2.0);
                double t155703 = t155700+t155701+t155702+t155699;
                double t155704 = t155703*t155662*t155697*t155698;
                double t155705 = 1.0/(t155644*t155644*t155644*t155644*t155644);
                double t155706 = 1.0/d2fz0;
                double t155707 = 1.0/Aa;
                double t155708 = b1a*t155647;
                double t155709 = b3a*t155649;
                double t155710 = b4a*t155651*t155652;
                double t155711 = b2a*c*t155645;
                double t155712 = t155710+t155711+t155708+t155709;
                double t155713 = 1.0/t155712;
                double t155714 = t155713*t155707*(1.0/2.0);
                double t155715 = t155714+1.0;
                double t155716 = log(t155715);
                double t155717 = a1a*c*t155645;
                double t155718 = t155717+1.0;
                double t155719 = pow(t155684,1.0/3.0);
                double t155721 = t155690*t155719*(4.0/3.0);
                double t155722 = pow(t155686,1.0/3.0);
                double t155723 = t155721-t155722*t155690*(4.0/3.0);
                double t155724 = t155691*t155694;
                double t155725 = t155724-1.0;
                double t155726 = 1.0/pow(rho_a[index],1.0/3.0);
                double t155727 = c*t155726;
                double t155728 = sqrt(t155727);
                double t155729 = b1f*t155728;
                double t155730 = pow(t155727,3.0/2.0);
                double t155731 = b3f*t155730;
                double t155732 = 1.0/pow(rho_a[index],2.0/3.0);
                double t155733 = b4f*t155651*t155732;
                double t155734 = b2f*c*t155726;
                double t155735 = t155731+t155733+t155734+t155729;
                double t155736 = 1.0/pow(rho_a[index],4.0/3.0);
                double t155737 = b1p*t155728;
                double t155738 = b3p*t155730;
                double t155739 = b4p*t155651*t155732;
                double t155740 = b2p*c*t155726;
                double t155741 = t155740+t155737+t155738+t155739;
                double t155742 = 1.0/pow(rho_a[index],5.0/3.0);
                double t155743 = 1.0/sqrt(t155727);
                double t155744 = 1.0/t155735;
                double t155745 = t155670*t155744*(1.0/2.0);
                double t155746 = t155745+1.0;
                double t155747 = 1.0/t155741;
                double t155748 = t155657*t155747*(1.0/2.0);
                double t155749 = t155748+1.0;
                double t155750 = a1p*c*t155726;
                double t155751 = t155750+1.0;
                double t155752 = 1.0/t155749;
                double t155753 = 1.0/(t155741*t155741);
                double t155754 = b4p*t155651*t155742*(2.0/3.0);
                double t155755 = b2p*c*t155736*(1.0/3.0);
                double t155756 = b1p*c*t155743*t155736*(1.0/6.0);
                double t155757 = b3p*c*t155736*t155728*(1.0/2.0);
                double t155758 = t155754+t155755+t155756+t155757;
                double t155759 = t155751*t155752*t155753*t155758;
                double t155760 = log(t155749);
                double t155761 = pow(2.0,1.0/3.0);
                double t155762 = t155761*2.0;
                double t155763 = t155762-2.0;
                double t155764 = log(t155746);
                double t155765 = a1f*c*t155726;
                double t155766 = t155765+1.0;
                double t155767 = 1.0/pow(rho_b[index],8.0/3.0);
                double t155768 = 1.0/pow(rho_a[index],8.0/3.0);
                double t155769 = gamma_aa[index]*t155768*(1.0/2.0);
                double t155770 = gamma_bb[index]*t155767*(1.0/2.0);
                double t155771 = t155770+t155769;
                double t155772 = gcab*t155771;
                double t155773 = t155772+1.0;
                double t155774 = gcab*gcab;
                double t155775 = t155771*t155771;
                double t155776 = t155774*t155774;
                double t155777 = t155775*t155775;
                double t155778 = t155774*t155775;
                double t155779 = gcab*t155771*2.0;
                double t155780 = t155778+t155779+1.0;
                double t155781 = t155774*t155775*3.0;
                double t155782 = gcab*t155771*t155774*t155775;
                double t155783 = gcab*t155771*3.0;
                double t155784 = t155781+t155782+t155783+1.0;
                double t155785 = t155774*t155775*6.0;
                double t155786 = gcab*t155771*t155774*t155775*4.0;
                double t155787 = t155776*t155777;
                double t155788 = gcab*t155771*4.0;
                double t155789 = t155785+t155786+t155787+t155788+1.0;
                double t155790 = c0f*t155764*t155766*2.0;
                double t155792 = c0p*t155751*t155760*2.0;
                double t155791 = t155790-t155792;
                double t155793 = 1.0/pow(rho_b[index],1.0/3.0);
                double t155794 = c*t155793;
                double t155795 = sqrt(t155794);
                double t155796 = pow(t155794,3.0/2.0);
                double t155797 = 1.0/pow(rho_b[index],2.0/3.0);
                double t155798 = b1p*t155795;
                double t155799 = b3p*t155796;
                double t155800 = b4p*t155651*t155797;
                double t155801 = b2p*c*t155793;
                double t155802 = t155800+t155801+t155798+t155799;
                double t155803 = 1.0/t155802;
                double t155804 = t155803*t155657*(1.0/2.0);
                double t155805 = t155804+1.0;
                double t155806 = log(t155805);
                double t155807 = a1p*c*t155793;
                double t155808 = t155807+1.0;
                double t155809 = c0p*t155806*t155808*2.0;
                double t155810 = t155691*t155683*t155694*t155669*t155688;
                double t155811 = Aa*t155706*t155716*t155725*t155718*t155669*t155688*2.0;
                double t155812 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t155813 = 1.0/(t155784*t155784);
                double t155814 = 1.0/(t155789*t155789);
                double t155815 = gcab*t155767*2.0;
                double t155816 = t155771*t155774*t155767*6.0;
                double t155817 = gcab*t155774*t155775*t155767*6.0;
                double t155818 = t155771*t155775*t155767*t155776*2.0;
                double t155819 = t155815+t155816+t155817+t155818;
                double t155820 = 1.0/(t155780*t155780);
                double t155821 = gamma_aa[index]*gcab*t155812*(8.0/3.0);
                double t155822 = gamma_aa[index]*t155812*t155771*t155774*(8.0/3.0);
                double t155823 = t155821+t155822;
                double t155824 = gcab*t155767;
                double t155825 = t155771*t155774*t155767;
                double t155826 = t155824+t155825;
                double t155827 = gamma_aa[index]*gcab*t155812*(1.6E1/3.0);
                double t155828 = gamma_aa[index]*gcab*t155812*t155774*t155775*1.6E1;
                double t155829 = gamma_aa[index]*t155812*t155771*t155775*t155776*(1.6E1/3.0);
                double t155830 = gamma_aa[index]*t155812*t155771*t155774*1.6E1;
                double t155831 = t155830+t155827+t155828+t155829;
                double t155832 = 1.0/(t155773*t155773);
                double t155833 = 1.0/t155780;
                double t155834 = gcab*t155767*(3.0/2.0);
                double t155835 = t155771*t155774*t155767*3.0;
                double t155836 = gcab*t155774*t155775*t155767*(3.0/2.0);
                double t155837 = t155834+t155835+t155836;
                double t155838 = gamma_aa[index]*gcab*t155812*4.0;
                double t155839 = gamma_aa[index]*gcab*t155812*t155774*t155775*4.0;
                double t155840 = gamma_aa[index]*t155812*t155771*t155774*8.0;
                double t155841 = t155840+t155838+t155839;
                double t155842 = 1.0/t155784;
                double t155843 = 1.0/t155789;
                v_rho_a_gamma_bb_[index] = -(t155810+t155811+t155693+t155644*(t155704-t155691*t155694*t155669*t155688* \
                   (t155704-(t155681*1.0/(t155675*t155675)*(b2f*c*t155656*(1.0/3.0)+b4f*t155651*t155695*(2.0/3.0)+b1f* \
                   c*t155656*t155696*(1.0/6.0)+b3f*c*t155647*t155656*(1.0/2.0)))/t155678+a1f*c*c0f*t155656*t155679*(2.0/ \
                   3.0)-a1p*c*c0p*t155682*t155656*(2.0/3.0))-a1p*c*c0p*t155682*t155656*(2.0/3.0)+t155723*t155691*t155683* \
                   t155694*t155669-t155705*t155683*t155694*t155669*t155688*4.0+t155663*t155664*t155691*t155683*t155669* \
                   t155688*4.0-Aa*t155706*t155716*t155718*t155669*t155688*(t155705*t155694*4.0-t155663*t155664*t155691* \
                   4.0)*2.0+Aa*t155723*t155706*t155716*t155725*t155718*t155669*2.0+(1.0/(t155712*t155712)*t155706*t155725* \
                   t155718*t155669*t155688*(b2a*c*t155656*(1.0/3.0)+b4a*t155651*t155695*(2.0/3.0)+b1a*c*t155656*t155696* \
                   (1.0/6.0)+b3a*c*t155647*t155656*(1.0/2.0)))/t155715-Aa*a1a*c*t155706*t155716*t155725*t155656*t155669* \
                   t155688*(2.0/3.0))+rho_a[index]*(-t155759+t155763*t155669*(t155759-(1.0/(t155735*t155735)*t155766* \
                   (b2f*c*t155736*(1.0/3.0)+b4f*t155651*t155742*(2.0/3.0)+b1f*c*t155743*t155736*(1.0/6.0)+b3f*c*t155736* \
                   t155728*(1.0/2.0)))/t155746+a1f*c*c0f*t155736*t155764*(2.0/3.0)-a1p*c*c0p*t155760*t155736*(2.0/3.0) \
                   )+a1p*c*c0p*t155760*t155736*(2.0/3.0))-c0p*t155751*t155760*2.0-t155763*t155791*t155669)*((ccab1*gcab* \
                   t155767*(1.0/2.0))/t155773-ccab2*t155820*t155826*t155774*t155775-ccab1*t155832*t155771*t155774*t155767* \
                   (1.0/2.0)+ccab2*t155833*t155771*t155774*t155767-ccab4*t155814*t155819*t155776*t155777+ccab4*t155771* \
                   t155843*t155775*t155767*t155776*2.0+ccab3*gcab*t155842*t155774*t155775*t155767*(3.0/2.0)-ccab3*gcab* \
                   t155813*t155771*t155774*t155837*t155775)+(rho_a[index]*(t155792+t155763*t155791*t155669)+rho_b[index]* \
                   (t155809-t155763*t155669*(t155809-c0f*log((t155670*(1.0/2.0))/(b1f*t155795+b3f*t155796+b2f*c*t155793+ \
                   b4f*t155651*t155797)+1.0)*(a1f*c*t155793+1.0)*2.0))-t155644*(t155810+t155811+t155693))*(ccab4*t155814* \
                   t155776*t155777*(gamma_aa[index]*t155812*t155774*t155767*8.0+gamma_aa[index]*t155812*t155775*t155767* \
                   t155776*8.0+gamma_aa[index]*gcab*t155812*t155771*t155774*t155767*1.6E1)+ccab2*t155820*t155823*t155771* \
                   t155774*t155767-ccab2*t155823*1.0/(t155780*t155780*t155780)*t155826*t155774*t155775*2.0-ccab4*t155831* \
                   t155819*t155776*t155777*1.0/(t155789*t155789*t155789)*2.0+ccab1*gamma_aa[index]*t155812*t155832*t155774* \
                   t155767*(4.0/3.0)-ccab2*gamma_aa[index]*t155812*t155833*t155774*t155767*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t155820*t155812*t155771*t155826*t155774*(8.0/3.0)+ccab2*gamma_aa[index]*t155820*t155812*t155775*t155767* \
                   t155776*(4.0/3.0)-ccab4*gamma_aa[index]*t155812*t155843*t155775*t155767*t155776*8.0+ccab3*gcab*t155813* \
                   t155841*t155774*t155775*t155767*(3.0/2.0)+ccab4*t155831*t155814*t155771*t155775*t155767*t155776*2.0+ \
                   ccab3*gcab*t155813*t155771*t155774*t155775*(gamma_aa[index]*t155812*t155774*t155767*4.0+gamma_aa[index]* \
                   gcab*t155812*t155771*t155774*t155767*4.0)-ccab1*gamma_aa[index]*gcab*t155812*t155771*1.0/(t155773* \
                   t155773*t155773)*t155774*t155767*(4.0/3.0)-ccab3*gcab*t155841*t155771*t155774*t155837*t155775*1.0/ \
                   (t155784*t155784*t155784)*2.0+ccab3*gamma_aa[index]*gcab*t155812*t155813*t155774*t155837*t155775*4.0- \
                   ccab3*gamma_aa[index]*gcab*t155812*t155842*t155771*t155774*t155767*4.0+ccab4*gamma_aa[index]*t155812* \
                   t155814*t155771*t155819*t155775*t155776*(1.6E1/3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t155845 = rho_a[index]+rho_b[index];
                double t155846 = 1.0/pow(t155845,1.0/3.0);
                double t155847 = c*t155846;
                double t155848 = sqrt(t155847);
                double t155849 = b1p*t155848;
                double t155850 = pow(t155847,3.0/2.0);
                double t155851 = b3p*t155850;
                double t155852 = c*c;
                double t155853 = 1.0/pow(t155845,2.0/3.0);
                double t155854 = b4p*t155852*t155853;
                double t155855 = b2p*c*t155846;
                double t155856 = t155851+t155854+t155855+t155849;
                double t155857 = 1.0/pow(t155845,4.0/3.0);
                double t155858 = 1.0/c0p;
                double t155859 = 1.0/t155856;
                double t155860 = t155858*t155859*(1.0/2.0);
                double t155861 = t155860+1.0;
                double t155862 = a1p*c*t155846;
                double t155863 = t155862+1.0;
                double t155864 = rho_a[index]-rho_b[index];
                double t155865 = t155864*t155864;
                double t155866 = 1.0/t155845;
                double t155867 = t155864*t155866;
                double t155868 = two_13*2.0;
                double t155869 = t155868-2.0;
                double t155870 = 1.0/t155869;
                double t155871 = 1.0/c0f;
                double t155872 = b1f*t155848;
                double t155873 = b3f*t155850;
                double t155874 = b4f*t155852*t155853;
                double t155875 = b2f*c*t155846;
                double t155876 = t155872+t155873+t155874+t155875;
                double t155877 = 1.0/t155876;
                double t155878 = t155871*t155877*(1.0/2.0);
                double t155879 = t155878+1.0;
                double t155880 = log(t155879);
                double t155881 = a1f*c*t155846;
                double t155882 = t155881+1.0;
                double t155883 = log(t155861);
                double t155894 = c0f*t155880*t155882*2.0;
                double t155895 = c0p*t155863*t155883*2.0;
                double t155884 = t155894-t155895;
                double t155885 = t155867+1.0;
                double t155886 = pow(t155885,4.0/3.0);
                double t155887 = -t155867+1.0;
                double t155888 = pow(t155887,4.0/3.0);
                double t155889 = t155886+t155888-2.0;
                double t155890 = 1.0/(t155845*t155845);
                double t155891 = t155890*t155864;
                double t155892 = t155891+t155866;
                double t155893 = 1.0/(t155845*t155845*t155845*t155845);
                double t155896 = t155865*t155865;
                double t155897 = 1.0/pow(t155845,5.0/3.0);
                double t155898 = 1.0/sqrt(t155847);
                double t155899 = 1.0/t155861;
                double t155900 = 1.0/(t155856*t155856);
                double t155901 = b4p*t155852*t155897*(2.0/3.0);
                double t155902 = b2p*c*t155857*(1.0/3.0);
                double t155903 = b1p*c*t155857*t155898*(1.0/6.0);
                double t155904 = b3p*c*t155848*t155857*(1.0/2.0);
                double t155905 = t155901+t155902+t155903+t155904;
                double t155906 = 1.0/(t155845*t155845*t155845*t155845*t155845);
                double t155907 = 1.0/d2fz0;
                double t155908 = 1.0/Aa;
                double t155909 = b1a*t155848;
                double t155910 = b3a*t155850;
                double t155911 = b4a*t155852*t155853;
                double t155912 = b2a*c*t155846;
                double t155913 = t155910+t155911+t155912+t155909;
                double t155914 = 1.0/t155913;
                double t155915 = t155914*t155908*(1.0/2.0);
                double t155916 = t155915+1.0;
                double t155917 = log(t155916);
                double t155918 = a1a*c*t155846;
                double t155919 = t155918+1.0;
                double t155920 = pow(t155885,1.0/3.0);
                double t155921 = t155920*t155892*(4.0/3.0);
                double t155922 = pow(t155887,1.0/3.0);
                double t155923 = t155921-t155922*t155892*(4.0/3.0);
                double t155924 = t155893*t155896;
                double t155925 = t155924-1.0;
                double t155926 = 1.0/pow(rho_b[index],1.0/3.0);
                double t155927 = c*t155926;
                double t155928 = sqrt(t155927);
                double t155929 = b1f*t155928;
                double t155930 = pow(t155927,3.0/2.0);
                double t155931 = b3f*t155930;
                double t155932 = 1.0/pow(rho_b[index],2.0/3.0);
                double t155933 = b4f*t155932*t155852;
                double t155934 = b2f*c*t155926;
                double t155935 = t155931+t155933+t155934+t155929;
                double t155936 = 1.0/pow(rho_b[index],4.0/3.0);
                double t155937 = b1p*t155928;
                double t155938 = b3p*t155930;
                double t155939 = b4p*t155932*t155852;
                double t155940 = b2p*c*t155926;
                double t155941 = t155940+t155937+t155938+t155939;
                double t155942 = 1.0/pow(rho_b[index],5.0/3.0);
                double t155943 = 1.0/sqrt(t155927);
                double t155944 = 1.0/t155935;
                double t155945 = t155871*t155944*(1.0/2.0);
                double t155946 = t155945+1.0;
                double t155947 = 1.0/t155941;
                double t155948 = t155947*t155858*(1.0/2.0);
                double t155949 = t155948+1.0;
                double t155950 = a1p*c*t155926;
                double t155951 = t155950+1.0;
                double t155952 = 1.0/t155949;
                double t155953 = 1.0/(t155941*t155941);
                double t155954 = b4p*t155852*t155942*(2.0/3.0);
                double t155955 = b2p*c*t155936*(1.0/3.0);
                double t155956 = b1p*c*t155943*t155936*(1.0/6.0);
                double t155957 = b3p*c*t155936*t155928*(1.0/2.0);
                double t155958 = t155954+t155955+t155956+t155957;
                double t155959 = t155951*t155952*t155953*t155958;
                double t155960 = log(t155949);
                double t155961 = pow(2.0,1.0/3.0);
                double t155962 = t155961*2.0;
                double t155963 = t155962-2.0;
                double t155964 = log(t155946);
                double t155965 = a1f*c*t155926;
                double t155966 = t155965+1.0;
                double t155967 = 1.0/pow(rho_a[index],8.0/3.0);
                double t155968 = gamma_aa[index]*t155967*(1.0/2.0);
                double t155969 = 1.0/pow(rho_b[index],8.0/3.0);
                double t155970 = gamma_bb[index]*t155969*(1.0/2.0);
                double t155971 = t155970+t155968;
                double t155972 = gcab*t155971;
                double t155973 = t155972+1.0;
                double t155974 = gcab*gcab;
                double t155975 = t155971*t155971;
                double t155976 = t155974*t155974;
                double t155977 = t155975*t155975;
                double t155978 = t155974*t155975;
                double t155979 = gcab*t155971*2.0;
                double t155980 = t155978+t155979+1.0;
                double t155981 = t155974*t155975*3.0;
                double t155982 = gcab*t155971*t155974*t155975;
                double t155983 = gcab*t155971*3.0;
                double t155984 = t155981+t155982+t155983+1.0;
                double t155985 = t155974*t155975*6.0;
                double t155986 = gcab*t155971*t155974*t155975*4.0;
                double t155987 = t155976*t155977;
                double t155988 = gcab*t155971*4.0;
                double t155989 = t155985+t155986+t155987+t155988+1.0;
                double t155990 = a1p*c*c0p*t155883*t155857*(2.0/3.0);
                double t155991 = 1.0/pow(rho_a[index],1.0/3.0);
                double t155992 = c*t155991;
                double t155993 = sqrt(t155992);
                double t155994 = pow(t155992,3.0/2.0);
                double t155995 = 1.0/pow(rho_a[index],2.0/3.0);
                double t155996 = b1p*t155993;
                double t155997 = b3p*t155994;
                double t155998 = b4p*t155852*t155995;
                double t155999 = b2p*c*t155991;
                double t156000 = t155996+t155997+t155998+t155999;
                double t156001 = 1.0/t156000;
                double t156002 = t156001*t155858*(1.0/2.0);
                double t156003 = t156002+1.0;
                double t156004 = log(t156003);
                double t156005 = a1p*c*t155991;
                double t156006 = t156005+1.0;
                double t156007 = c0p*t156004*t156006*2.0;
                double t156008 = c0f*t155964*t155966*2.0;
                double t156010 = c0p*t155951*t155960*2.0;
                double t156009 = -t156010+t156008;
                double t156011 = t155870*t155884*t155893*t155896*t155889;
                double t156012 = Aa*t155870*t155907*t155925*t155917*t155919*t155889*2.0;
                double t156013 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t156014 = 1.0/(t155984*t155984);
                double t156015 = 1.0/(t155989*t155989);
                double t156016 = gcab*t155967*2.0;
                double t156017 = t155971*t155974*t155967*6.0;
                double t156018 = gcab*t155974*t155975*t155967*6.0;
                double t156019 = t155971*t155975*t155967*t155976*2.0;
                double t156020 = t156016+t156017+t156018+t156019;
                double t156021 = 1.0/(t155980*t155980);
                double t156022 = gamma_bb[index]*gcab*t156013*(8.0/3.0);
                double t156023 = gamma_bb[index]*t156013*t155971*t155974*(8.0/3.0);
                double t156024 = t156022+t156023;
                double t156025 = gcab*t155967;
                double t156026 = t155971*t155974*t155967;
                double t156027 = t156025+t156026;
                double t156028 = gamma_bb[index]*gcab*t156013*(1.6E1/3.0);
                double t156029 = gamma_bb[index]*gcab*t156013*t155974*t155975*1.6E1;
                double t156030 = gamma_bb[index]*t156013*t155971*t155975*t155976*(1.6E1/3.0);
                double t156031 = gamma_bb[index]*t156013*t155971*t155974*1.6E1;
                double t156032 = t156030+t156031+t156028+t156029;
                double t156033 = 1.0/(t155973*t155973);
                double t156034 = 1.0/t155980;
                double t156035 = gcab*t155967*(3.0/2.0);
                double t156036 = t155971*t155974*t155967*3.0;
                double t156037 = gcab*t155974*t155975*t155967*(3.0/2.0);
                double t156038 = t156035+t156036+t156037;
                double t156039 = gamma_bb[index]*gcab*t156013*4.0;
                double t156040 = gamma_bb[index]*gcab*t156013*t155974*t155975*4.0;
                double t156041 = gamma_bb[index]*t156013*t155971*t155974*8.0;
                double t156042 = t156040+t156041+t156039;
                double t156043 = 1.0/t155984;
                double t156044 = 1.0/t155989;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t156010+t156009*t155870*t155963)+rho_a[index]*(t156007- \
                   t155870*t155963*(t156007-c0f*log((t155871*(1.0/2.0))/(b1f*t155993+b3f*t155994+b2f*c*t155991+b4f*t155852* \
                   t155995)+1.0)*(a1f*c*t155991+1.0)*2.0))-t155845*(t156011+t156012+t155895))*(ccab4*t156015*t155976* \
                   t155977*(gamma_bb[index]*t156013*t155974*t155967*8.0+gamma_bb[index]*t156013*t155975*t155967*t155976* \
                   8.0+gamma_bb[index]*gcab*t156013*t155971*t155974*t155967*1.6E1)+ccab2*t156021*t156024*t155971*t155974* \
                   t155967-ccab2*t156024*t156027*1.0/(t155980*t155980*t155980)*t155974*t155975*2.0-ccab4*t156020*t156032* \
                   t155976*t155977*1.0/(t155989*t155989*t155989)*2.0+ccab1*gamma_bb[index]*t156013*t156033*t155974*t155967* \
                   (4.0/3.0)-ccab2*gamma_bb[index]*t156013*t156034*t155974*t155967*(4.0/3.0)+ccab2*gamma_bb[index]*t156021* \
                   t156013*t156027*t155971*t155974*(8.0/3.0)+ccab2*gamma_bb[index]*t156021*t156013*t155975*t155967*t155976* \
                   (4.0/3.0)-ccab4*gamma_bb[index]*t156013*t156044*t155975*t155967*t155976*8.0+ccab3*gcab*t156014*t156042* \
                   t155974*t155975*t155967*(3.0/2.0)+ccab4*t156032*t156015*t155971*t155975*t155967*t155976*2.0+ccab3* \
                   gcab*t156014*t155971*t155974*t155975*(gamma_bb[index]*t156013*t155974*t155967*4.0+gamma_bb[index]* \
                   gcab*t156013*t155971*t155974*t155967*4.0)-ccab1*gamma_bb[index]*gcab*t156013*t155971*1.0/(t155973* \
                   t155973*t155973)*t155974*t155967*(4.0/3.0)-ccab3*gcab*t156042*t156038*t155971*t155974*t155975*1.0/ \
                   (t155984*t155984*t155984)*2.0+ccab3*gamma_bb[index]*gcab*t156013*t156014*t156038*t155974*t155975*4.0- \
                   ccab3*gamma_bb[index]*gcab*t156013*t156043*t155971*t155974*t155967*4.0+ccab4*gamma_bb[index]*t156020* \
                   t156013*t156015*t155971*t155975*t155976*(1.6E1/3.0))-(t156011+t156012+t155895+rho_b[index]*(-t155959+ \
                   t155870*t155963*(t155959-(1.0/(t155935*t155935)*t155966*(b2f*c*t155936*(1.0/3.0)+b4f*t155852*t155942* \
                   (2.0/3.0)+b1f*c*t155943*t155936*(1.0/6.0)+b3f*c*t155936*t155928*(1.0/2.0)))/t155946+a1f*c*c0f*t155936* \
                   t155964*(2.0/3.0)-a1p*c*c0p*t155960*t155936*(2.0/3.0))+a1p*c*c0p*t155960*t155936*(2.0/3.0))-t155845* \
                   (t155990-t155900*t155905*t155863*t155899+t155923*t155870*t155884*t155893*t155896+t155870*t155906*t155884* \
                   t155896*t155889*4.0-t155870*t155893*t155896*t155889*(t155990-t155900*t155905*t155863*t155899+(t155882* \
                   1.0/(t155876*t155876)*(b2f*c*t155857*(1.0/3.0)+b4f*t155852*t155897*(2.0/3.0)+b1f*c*t155857*t155898* \
                   (1.0/6.0)+b3f*c*t155848*t155857*(1.0/2.0)))/t155879-a1f*c*c0f*t155880*t155857*(2.0/3.0))+t155870*t155864* \
                   t155865*t155884*t155893*t155889*4.0+Aa*t155870*t155907*t155917*t155919*t155889*(t155906*t155896*4.0+ \
                   t155864*t155865*t155893*4.0)*2.0+Aa*t155923*t155870*t155907*t155925*t155917*t155919*2.0-(1.0/(t155913* \
                   t155913)*t155870*t155907*t155925*t155919*t155889*(b2a*c*t155857*(1.0/3.0)+b4a*t155852*t155897*(2.0/ \
                   3.0)+b1a*c*t155857*t155898*(1.0/6.0)+b3a*c*t155848*t155857*(1.0/2.0)))/t155916+Aa*a1a*c*t155870*t155907* \
                   t155925*t155917*t155857*t155889*(2.0/3.0))-c0p*t155951*t155960*2.0-t156009*t155870*t155963)*((ccab1* \
                   gcab*t155967*(1.0/2.0))/t155973-ccab2*t156021*t156027*t155974*t155975-ccab4*t156020*t156015*t155976* \
                   t155977-ccab1*t156033*t155971*t155974*t155967*(1.0/2.0)+ccab2*t156034*t155971*t155974*t155967+ccab4* \
                   t156044*t155971*t155975*t155967*t155976*2.0+ccab3*gcab*t156043*t155974*t155975*t155967*(3.0/2.0)-ccab3* \
                   gcab*t156014*t156038*t155971*t155974*t155975);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t156047 = 1.0/pow(rho_b[index],1.0/3.0);
                double t156048 = c*t156047;
                double t156049 = sqrt(t156048);
                double t156050 = pow(t156048,3.0/2.0);
                double t156051 = c*c;
                double t156052 = 1.0/pow(rho_b[index],2.0/3.0);
                double t156053 = 1.0/c0p;
                double t156054 = b1p*t156049;
                double t156055 = b3p*t156050;
                double t156056 = b4p*t156051*t156052;
                double t156057 = b2p*c*t156047;
                double t156058 = t156054+t156055+t156056+t156057;
                double t156059 = 1.0/t156058;
                double t156060 = t156053*t156059*(1.0/2.0);
                double t156061 = t156060+1.0;
                double t156062 = log(t156061);
                double t156063 = a1p*c*t156047;
                double t156064 = t156063+1.0;
                double t156065 = 1.0/pow(rho_b[index],8.0/3.0);
                double t156066 = gamma_bb[index]*gamma_bb[index];
                double t156067 = gcaa*gcaa;
                double t156068 = t156067*t156067;
                double t156069 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t156070 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t156071 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t156072 = gamma_bb[index]*gcaa*t156065;
                double t156073 = t156072+1.0;
                double t156074 = gamma_bb[index]*gcaa*t156065*3.0;
                double t156075 = gamma_bb[index]*gcaa*t156071*t156066*t156067;
                double t156076 = t156070*t156066*t156067*3.0;
                double t156077 = t156074+t156075+t156076+1.0;
                double t156078 = t156066*t156066;
                double t156079 = gamma_bb[index]*gcaa*t156065*4.0;
                double t156080 = gamma_bb[index]*gcaa*t156071*t156066*t156067*4.0;
                double t156081 = t156070*t156066*t156067*6.0;
                double t156082 = t156068*t156069*t156078;
                double t156083 = t156080+t156081+t156082+t156079+1.0;
                double t156084 = gamma_bb[index]*gcaa*t156065*2.0;
                double t156085 = t156070*t156066*t156067;
                double t156086 = t156084+t156085+1.0;
                double t156087 = rho_a[index]+rho_b[index];
                double t156088 = 1.0/pow(t156087,1.0/3.0);
                double t156089 = c*t156088;
                double t156090 = sqrt(t156089);
                double t156091 = b1p*t156090;
                double t156092 = pow(t156089,3.0/2.0);
                double t156093 = b3p*t156092;
                double t156094 = 1.0/pow(t156087,2.0/3.0);
                double t156095 = b4p*t156051*t156094;
                double t156096 = b2p*c*t156088;
                double t156097 = t156091+t156093+t156095+t156096;
                double t156098 = 1.0/pow(t156087,4.0/3.0);
                double t156099 = two_13*2.0;
                double t156100 = t156099-2.0;
                double t156101 = 1.0/t156100;
                double t156102 = 1.0/c0f;
                double t156103 = 1.0/t156097;
                double t156104 = t156103*t156053*(1.0/2.0);
                double t156105 = t156104+1.0;
                double t156106 = a1p*c*t156088;
                double t156107 = t156106+1.0;
                double t156108 = rho_a[index]-rho_b[index];
                double t156109 = t156108*t156108;
                double t156110 = 1.0/t156087;
                double t156111 = t156110*t156108;
                double t156112 = b1f*t156090;
                double t156113 = b3f*t156092;
                double t156114 = b4f*t156051*t156094;
                double t156115 = b2f*c*t156088;
                double t156116 = t156112+t156113+t156114+t156115;
                double t156117 = 1.0/t156116;
                double t156118 = t156102*t156117*(1.0/2.0);
                double t156119 = t156118+1.0;
                double t156120 = log(t156119);
                double t156121 = a1f*c*t156088;
                double t156122 = t156121+1.0;
                double t156123 = log(t156105);
                double t156134 = c0f*t156120*t156122*2.0;
                double t156135 = c0p*t156123*t156107*2.0;
                double t156124 = t156134-t156135;
                double t156125 = t156111+1.0;
                double t156126 = pow(t156125,4.0/3.0);
                double t156127 = -t156111+1.0;
                double t156128 = pow(t156127,4.0/3.0);
                double t156129 = t156126+t156128-2.0;
                double t156130 = 1.0/(t156087*t156087);
                double t156131 = t156130*t156108;
                double t156132 = t156110+t156131;
                double t156133 = 1.0/(t156087*t156087*t156087*t156087);
                double t156136 = t156109*t156109;
                double t156137 = 1.0/pow(t156087,5.0/3.0);
                double t156138 = 1.0/sqrt(t156089);
                double t156139 = 1.0/t156105;
                double t156140 = 1.0/(t156097*t156097);
                double t156141 = b4p*t156051*t156137*(2.0/3.0);
                double t156142 = b2p*c*t156098*(1.0/3.0);
                double t156143 = b1p*c*t156138*t156098*(1.0/6.0);
                double t156144 = b3p*c*t156090*t156098*(1.0/2.0);
                double t156145 = t156141+t156142+t156143+t156144;
                double t156146 = 1.0/(t156087*t156087*t156087*t156087*t156087);
                double t156147 = 1.0/d2fz0;
                double t156148 = 1.0/Aa;
                double t156149 = b1a*t156090;
                double t156150 = b3a*t156092;
                double t156151 = b4a*t156051*t156094;
                double t156152 = b2a*c*t156088;
                double t156153 = t156150+t156151+t156152+t156149;
                double t156154 = 1.0/t156153;
                double t156155 = t156154*t156148*(1.0/2.0);
                double t156156 = t156155+1.0;
                double t156157 = log(t156156);
                double t156158 = a1a*c*t156088;
                double t156159 = t156158+1.0;
                double t156160 = pow(t156125,1.0/3.0);
                double t156161 = t156132*t156160*(4.0/3.0);
                double t156162 = pow(t156127,1.0/3.0);
                double t156163 = t156161-t156132*t156162*(4.0/3.0);
                double t156164 = t156133*t156136;
                double t156165 = t156164-1.0;
                double t156166 = pow(2.0,1.0/3.0);
                double t156167 = t156166*2.0;
                double t156168 = t156167-2.0;
                double t156169 = a1f*c*t156047;
                double t156170 = t156169+1.0;
                double t156171 = b1f*t156049;
                double t156172 = b3f*t156050;
                double t156173 = b4f*t156051*t156052;
                double t156174 = b2f*c*t156047;
                double t156175 = t156171+t156172+t156173+t156174;
                double t156176 = 1.0/t156175;
                double t156177 = t156102*t156176*(1.0/2.0);
                double t156178 = t156177+1.0;
                double t156179 = 1.0/pow(rho_b[index],4.0/3.0);
                double t156180 = 1.0/pow(rho_b[index],5.0/3.0);
                double t156181 = 1.0/sqrt(t156048);
                double t156182 = log(t156178);
                double t156183 = 1.0/t156061;
                double t156184 = 1.0/(t156058*t156058);
                double t156185 = b4p*t156051*t156180*(2.0/3.0);
                double t156186 = b2p*c*t156179*(1.0/3.0);
                double t156187 = b1p*c*t156181*t156179*(1.0/6.0);
                double t156188 = b3p*c*t156049*t156179*(1.0/2.0);
                double t156189 = t156185+t156186+t156187+t156188;
                double t156190 = t156064*t156183*t156184*t156189;
                double t156191 = c0f*t156170*t156182*2.0;
                double t156192 = c0p*t156062*t156064*2.0;
                double t156193 = 1.0/pow(rho_a[index],8.0/3.0);
                double t156194 = gamma_aa[index]*t156193*(1.0/2.0);
                double t156195 = gamma_bb[index]*t156065*(1.0/2.0);
                double t156196 = t156194+t156195;
                double t156197 = gcab*t156196;
                double t156198 = t156197+1.0;
                double t156199 = gcab*gcab;
                double t156200 = t156196*t156196;
                double t156201 = t156199*t156199;
                double t156202 = t156200*t156200;
                double t156203 = t156200*t156199;
                double t156204 = gcab*t156196*2.0;
                double t156205 = t156203+t156204+1.0;
                double t156206 = t156200*t156199*3.0;
                double t156207 = gcab*t156200*t156196*t156199;
                double t156208 = gcab*t156196*3.0;
                double t156209 = t156206+t156207+t156208+1.0;
                double t156210 = t156200*t156199*6.0;
                double t156211 = gcab*t156200*t156196*t156199*4.0;
                double t156212 = t156201*t156202;
                double t156213 = gcab*t156196*4.0;
                double t156214 = t156210+t156211+t156212+t156213+1.0;
                double t156215 = a1p*c*c0p*t156123*t156098*(2.0/3.0);
                double t156216 = 1.0/pow(rho_a[index],1.0/3.0);
                double t156217 = c*t156216;
                double t156218 = sqrt(t156217);
                double t156219 = pow(t156217,3.0/2.0);
                double t156220 = 1.0/pow(rho_a[index],2.0/3.0);
                double t156221 = b1p*t156218;
                double t156222 = b3p*t156219;
                double t156223 = b4p*t156220*t156051;
                double t156224 = b2p*c*t156216;
                double t156225 = t156221+t156222+t156223+t156224;
                double t156226 = 1.0/t156225;
                double t156227 = t156053*t156226*(1.0/2.0);
                double t156228 = t156227+1.0;
                double t156229 = log(t156228);
                double t156230 = a1p*c*t156216;
                double t156231 = t156230+1.0;
                double t156232 = c0p*t156231*t156229*2.0;
                double t156233 = t156191-t156192;
                double t156234 = t156101*t156124*t156133*t156136*t156129;
                double t156235 = Aa*t156101*t156129*t156147*t156165*t156157*t156159*2.0;
                double t156236 = 1.0/t156198;
                double t156237 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t156238 = 1.0/(t156198*t156198);
                double t156239 = 1.0/t156205;
                double t156240 = 1.0/(t156209*t156209);
                double t156241 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t156242 = 1.0/(t156205*t156205);
                double t156243 = 1.0/t156209;
                double t156244 = 1.0/t156214;
                double t156245 = 1.0/(t156214*t156214);
                double t156246 = gcab*t156065*2.0;
                double t156247 = t156065*t156196*t156199*6.0;
                double t156248 = gcab*t156200*t156065*t156199*6.0;
                double t156249 = t156200*t156201*t156065*t156196*2.0;
                double t156250 = t156246+t156247+t156248+t156249;
                double t156251 = gamma_bb[index]*gcab*t156237*(8.0/3.0);
                double t156252 = gamma_bb[index]*t156237*t156196*t156199*(8.0/3.0);
                double t156253 = t156251+t156252;
                double t156254 = gcab*t156065;
                double t156255 = t156065*t156196*t156199;
                double t156256 = t156254+t156255;
                double t156257 = gamma_bb[index]*gcab*t156237*(1.6E1/3.0);
                double t156258 = gamma_bb[index]*gcab*t156200*t156237*t156199*1.6E1;
                double t156259 = gamma_bb[index]*t156200*t156201*t156237*t156196*(1.6E1/3.0);
                double t156260 = gamma_bb[index]*t156237*t156196*t156199*1.6E1;
                double t156261 = t156260+t156257+t156258+t156259;
                double t156262 = gcab*t156065*(3.0/2.0);
                double t156263 = t156065*t156196*t156199*3.0;
                double t156264 = gcab*t156200*t156065*t156199*(3.0/2.0);
                double t156265 = t156262+t156263+t156264;
                double t156266 = gamma_bb[index]*gcab*t156237*4.0;
                double t156267 = gamma_bb[index]*gcab*t156200*t156237*t156199*4.0;
                double t156268 = gamma_bb[index]*t156237*t156196*t156199*8.0;
                double t156269 = t156266+t156267+t156268;
                double t156270 = t156101*t156233*t156168;
                double t156271 = t156270+t156192;
                double t156272 = 1.0/t156073;
                double t156273 = 1.0/t156083;
                double t156274 = 1.0/t156086;
                double t156275 = 1.0/t156077;
                double t156276 = 1.0/(t156073*t156073);
                double t156277 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t156278 = 1.0/(t156077*t156077);
                double t156279 = 1.0/(t156086*t156086);
                double t156280 = gcaa*t156065*3.0;
                double t156281 = gamma_bb[index]*t156070*t156067*6.0;
                double t156282 = gcaa*t156071*t156066*t156067*3.0;
                double t156283 = t156280+t156281+t156282;
                double t156284 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t156285 = 1.0/(t156083*t156083);
                double t156286 = gcaa*t156065*4.0;
                double t156287 = gamma_bb[index]*t156070*t156067*1.2E1;
                double t156288 = gcaa*t156071*t156066*t156067*1.2E1;
                double t156289 = gamma_bb[index]*t156066*t156068*t156069*4.0;
                double t156290 = t156286+t156287+t156288+t156289;
                double t156291 = gcaa*t156065*2.0;
                double t156292 = gamma_bb[index]*t156070*t156067*2.0;
                double t156293 = t156291+t156292;
                double t156294 = gamma_bb[index]*gcaa*t156237*(1.6E1/3.0);
                double t156295 = t156241*t156066*t156067*(1.6E1/3.0);
                double t156296 = t156294+t156295;
                double t156297 = gamma_bb[index]*gcaa*t156237*8.0;
                double t156298 = gamma_bb[index]*gcaa*t156066*t156067*t156277*8.0;
                double t156299 = t156241*t156066*t156067*1.6E1;
                double t156300 = t156297+t156298+t156299;
                double t156301 = gamma_bb[index]*gcaa*t156237*(3.2E1/3.0);
                double t156302 = gamma_bb[index]*gcaa*t156066*t156067*t156277*3.2E1;
                double t156303 = t156241*t156066*t156067*3.2E1;
                double t156304 = t156068*t156284*t156078*(3.2E1/3.0);
                double t156305 = t156301+t156302+t156303+t156304;
                double t156306 = 1.0/t156178;
                double t156307 = 1.0/(t156175*t156175);
                double t156308 = b4f*t156051*t156180*(2.0/3.0);
                double t156309 = b2f*c*t156179*(1.0/3.0);
                double t156310 = b1f*c*t156181*t156179*(1.0/6.0);
                double t156311 = b3f*c*t156049*t156179*(1.0/2.0);
                double t156312 = t156310+t156311+t156308+t156309;
                double t156313 = a1f*c*c0f*t156182*t156179*(2.0/3.0);
                double t156314 = a1p*c*c0p*t156062*t156179*(2.0/3.0);
                double t156315 = ccaa1*gcaa*t156065*t156272;
                double t156316 = ccaa4*gamma_bb[index]*t156066*t156273*t156068*t156069*4.0;
                double t156317 = ccaa2*gamma_bb[index]*t156070*t156067*t156274*2.0;
                double t156318 = ccaa3*gcaa*t156071*t156066*t156067*t156275*3.0;
                double t156319 = t156315+t156316+t156317+t156318-ccaa1*gamma_bb[index]*t156070*t156067*t156276-ccaa2* \
                   t156070*t156066*t156067*t156293*t156279-ccaa4*t156290*t156068*t156069*t156078*t156285-ccaa3*gamma_bb[index]* \
                   gcaa*t156071*t156066*t156067*t156283*t156278;
                double t156320 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t156321 = 1.0/pow(t156320,1.0/3.0);
                double t156322 = 1.0/(omega*omega);
                double t156323 = pow(t156320,2.0/3.0);
                double t156373 = t156322*t156323;
                double t156324 = exp(-t156373);
                double t156325 = gx*gx;
                double t156326 = t156325*t156325;
                double t156327 = gamma_bb[index]*gx*t156065;
                double t156328 = t156327+1.0;
                double t156329 = gamma_bb[index]*gx*t156065*3.0;
                double t156330 = gamma_bb[index]*gx*t156071*t156325*t156066;
                double t156331 = t156070*t156325*t156066*3.0;
                double t156332 = t156330+t156331+t156329+1.0;
                double t156333 = gamma_bb[index]*gx*t156065*2.0;
                double t156334 = t156070*t156325*t156066;
                double t156335 = t156333+t156334+1.0;
                double t156336 = 1.0/(t156332*t156332);
                double t156337 = gamma_bb[index]*gx*t156065*4.0;
                double t156338 = gamma_bb[index]*gx*t156071*t156325*t156066*4.0;
                double t156339 = t156070*t156325*t156066*6.0;
                double t156340 = t156326*t156069*t156078;
                double t156341 = t156340+t156337+t156338+t156339+1.0;
                double t156342 = 1.0/(t156341*t156341);
                double t156343 = 1.0/(t156335*t156335);
                double t156344 = gamma_bb[index]*gx*t156237*(1.6E1/3.0);
                double t156345 = t156241*t156325*t156066*(1.6E1/3.0);
                double t156346 = t156344+t156345;
                double t156347 = gx*t156065*2.0;
                double t156348 = gamma_bb[index]*t156070*t156325*2.0;
                double t156349 = t156347+t156348;
                double t156350 = gx*t156065*3.0;
                double t156351 = gamma_bb[index]*t156070*t156325*6.0;
                double t156352 = gx*t156071*t156325*t156066*3.0;
                double t156353 = t156350+t156351+t156352;
                double t156354 = gamma_bb[index]*gx*t156237*8.0;
                double t156355 = gamma_bb[index]*gx*t156325*t156066*t156277*8.0;
                double t156356 = t156241*t156325*t156066*1.6E1;
                double t156357 = t156354+t156355+t156356;
                double t156358 = gamma_bb[index]*gx*t156237*(3.2E1/3.0);
                double t156359 = gamma_bb[index]*gx*t156325*t156066*t156277*3.2E1;
                double t156360 = t156241*t156325*t156066*3.2E1;
                double t156361 = t156326*t156284*t156078*(3.2E1/3.0);
                double t156362 = t156360+t156361+t156358+t156359;
                double t156363 = gx*t156065*4.0;
                double t156364 = gamma_bb[index]*t156070*t156325*1.2E1;
                double t156365 = gx*t156071*t156325*t156066*1.2E1;
                double t156366 = gamma_bb[index]*t156326*t156066*t156069*4.0;
                double t156367 = t156363+t156364+t156365+t156366;
                double t156368 = 1.0/omega;
                double t156369 = pow(t156320,1.0/3.0);
                double t156370 = t156368*t156369;
                double t156371 = erf(t156370);
                double t156372 = t156371*(3.991211251234741E15/2.251799813685248E15);
                double t156374 = omega*omega;
                double t156375 = 1.0/pow(t156320,2.0/3.0);
                double t156376 = t156324-1.0;
                double t156377 = t156374*t156375*t156376*(1.0/2.0);
                double t156378 = -t156324+t156377+3.0/2.0;
                double t156389 = omega*t156321*t156378;
                double t156379 = t156372-t156389;
                double t156380 = omega*t156321*t156379*(4.0/3.0);
                double t156381 = t156380-1.0;
                double t156382 = 1.0/t156328;
                double t156383 = 1.0/t156341;
                double t156384 = 1.0/t156335;
                double t156385 = 1.0/t156332;
                double t156386 = 1.0/(t156328*t156328);
                double t156387 = pow(rho_b[index],4.0/3.0);
                double t156388 = 1.0/pow(t156320,4.0/3.0);
                double t156390 = cx1*gx*t156065*t156382;
                double t156391 = cx4*gamma_bb[index]*t156326*t156066*t156383*t156069*4.0;
                double t156392 = cx2*gamma_bb[index]*t156070*t156325*t156384*2.0;
                double t156393 = cx3*gx*t156071*t156325*t156066*t156385*3.0;
                double t156394 = t156390+t156391+t156392+t156393-cx1*gamma_bb[index]*t156070*t156325*t156386-cx2* \
                   t156070*t156325*t156343*t156066*t156349-cx4*t156342*t156326*t156069*t156078*t156367-cx3*gamma_bb[index]* \
                   gx*t156071*t156325*t156353*t156066*t156336;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t156271+rho_a[index]*(t156232-t156101*t156168*(t156232- \
                   c0f*log((t156102*(1.0/2.0))/(b1f*t156218+b3f*t156219+b2f*c*t156216+b4f*t156220*t156051)+1.0)*(a1f* \
                   c*t156216+1.0)*2.0))-t156087*(t156135+t156234+t156235))*(ccab1*gcab*t156236*t156237*(4.0/3.0)-ccab2* \
                   t156200*t156242*t156199*(gcab*t156237*(8.0/3.0)+gamma_bb[index]*t156241*t156199*(4.0/3.0)+t156237* \
                   t156196*t156199*(8.0/3.0))-ccab4*t156201*t156202*t156245*(gcab*t156237*(1.6E1/3.0)+gamma_bb[index]* \
                   t156241*t156199*8.0+t156237*t156196*t156199*1.6E1+gamma_bb[index]*t156200*t156201*t156241*8.0+gcab* \
                   t156200*t156237*t156199*1.6E1+t156200*t156201*t156237*t156196*(1.6E1/3.0)+gamma_bb[index]*gcab*t156241* \
                   t156196*t156199*1.6E1)-ccab1*gamma_bb[index]*t156241*t156238*t156199*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t156241*t156239*t156199*(4.0/3.0)-ccab1*t156237*t156238*t156196*t156199*(4.0/3.0)+ccab2*t156237*t156239* \
                   t156196*t156199*(8.0/3.0)+ccab4*t156200*t156201*t156244*t156237*t156196*(1.6E1/3.0)-ccab2*t156242* \
                   t156253*t156065*t156196*t156199+ccab4*t156201*t156202*1.0/(t156214*t156214*t156214)*t156250*t156261* \
                   2.0+ccab2*t156200*1.0/(t156205*t156205*t156205)*t156253*t156256*t156199*2.0+ccab4*gamma_bb[index]* \
                   t156200*t156201*t156241*t156244*8.0+ccab3*gcab*t156200*t156243*t156237*t156199*4.0+ccab3*gamma_bb[index]* \
                   gcab*t156241*t156243*t156196*t156199*4.0-ccab2*gamma_bb[index]*t156242*t156237*t156256*t156196*t156199* \
                   (8.0/3.0)-ccab3*gcab*t156200*t156240*t156065*t156269*t156199*(3.0/2.0)-ccab4*t156200*t156201*t156261* \
                   t156065*t156245*t156196*2.0-ccab3*gcab*t156200*t156240*t156196*t156199*(gcab*t156237*4.0+gamma_bb[index]* \
                   t156241*t156199*4.0+t156237*t156196*t156199*8.0+gcab*t156200*t156237*t156199*4.0+gamma_bb[index]*gcab* \
                   t156241*t156196*t156199*4.0)+ccab1*gamma_bb[index]*gcab*t156241*t156196*1.0/(t156198*t156198*t156198) \
                   *t156199*(4.0/3.0)+ccab3*gcab*t156200*1.0/(t156209*t156209*t156209)*t156265*t156196*t156269*t156199* \
                   2.0-ccab3*gamma_bb[index]*gcab*t156200*t156240*t156237*t156265*t156199*4.0-ccab4*gamma_bb[index]*t156200* \
                   t156201*t156250*t156245*t156237*t156196*(1.6E1/3.0))-(t156135+t156234+t156235-t156192+rho_b[index]* \
                   (t156314-t156190+t156101*t156168*(t156313+t156190-t156312*t156170*t156306*t156307-a1p*c*c0p*t156062* \
                   t156179*(2.0/3.0)))-t156087*(t156215-t156140*t156107*t156145*t156139+t156101*t156124*t156133*t156136* \
                   t156163+t156101*t156124*t156136*t156146*t156129*4.0-t156101*t156133*t156136*t156129*(t156215-t156140* \
                   t156107*t156145*t156139+(t156122*1.0/(t156116*t156116)*(b2f*c*t156098*(1.0/3.0)+b4f*t156051*t156137* \
                   (2.0/3.0)+b1f*c*t156138*t156098*(1.0/6.0)+b3f*c*t156090*t156098*(1.0/2.0)))/t156119-a1f*c*c0f*t156120* \
                   t156098*(2.0/3.0))+t156101*t156124*t156133*t156108*t156109*t156129*4.0+Aa*t156101*t156129*t156147* \
                   t156157*t156159*(t156136*t156146*4.0+t156133*t156108*t156109*4.0)*2.0+Aa*t156101*t156163*t156147*t156165* \
                   t156157*t156159*2.0-(t156101*1.0/(t156153*t156153)*t156129*t156147*t156165*t156159*(b2a*c*t156098* \
                   (1.0/3.0)+b4a*t156051*t156137*(2.0/3.0)+b1a*c*t156138*t156098*(1.0/6.0)+b3a*c*t156090*t156098*(1.0/ \
                   2.0)))/t156156+Aa*a1a*c*t156101*t156129*t156147*t156165*t156157*t156098*(2.0/3.0))-t156101*t156233* \
                   t156168)*(ccab1*gcab*t156065*t156236*(1.0/2.0)-ccab4*t156201*t156202*t156250*t156245-ccab2*t156200* \
                   t156242*t156256*t156199-ccab1*t156065*t156238*t156196*t156199*(1.0/2.0)+ccab2*t156065*t156239*t156196* \
                   t156199+ccab4*t156200*t156201*t156244*t156065*t156196*2.0+ccab3*gcab*t156200*t156243*t156065*t156199* \
                   (3.0/2.0)-ccab3*gcab*t156200*t156240*t156265*t156196*t156199)-t156319*(t156192+t156101*t156168*(t156191- \
                   c0p*t156062*t156064*2.0))-rho_b[index]*t156271*(ccaa1*gcaa*t156272*t156237*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t156241*t156067*t156274*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t156241*t156067*t156276*8.0+ccaa2*t156241* \
                   t156066*t156067*t156293*t156279*(1.6E1/3.0)+ccaa4*t156290*t156068*t156284*t156078*t156285*(3.2E1/3.0) \
                   +ccaa4*t156068*t156069*t156078*t156285*(gcaa*t156237*(3.2E1/3.0)+gamma_bb[index]*t156241*t156067*6.4E1+ \
                   gamma_bb[index]*t156066*t156068*t156284*(1.28E2/3.0)+gcaa*t156066*t156067*t156277*9.6E1)-ccaa1*gcaa* \
                   1.0/(t156073*t156073*t156073)*t156066*t156067*t156277*(1.6E1/3.0)+ccaa2*t156070*t156066*t156067*t156279* \
                   (gcaa*t156237*(1.6E1/3.0)+gamma_bb[index]*t156241*t156067*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t156066* \
                   t156273*t156068*t156284*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t156070*t156067*t156296*t156279*2.0-ccaa3* \
                   gcaa*t156066*t156067*t156275*t156277*2.4E1+ccaa4*gamma_bb[index]*t156305*t156066*t156068*t156069*t156285* \
                   4.0+ccaa3*gcaa*t156300*t156071*t156066*t156067*t156278*3.0-ccaa4*t156305*1.0/(t156083*t156083*t156083) \
                   *t156290*t156068*t156069*t156078*2.0-ccaa2*t156070*t156066*t156067*1.0/(t156086*t156086*t156086)*t156293* \
                   t156296*2.0+ccaa3*gamma_bb[index]*gcaa*t156071*t156066*t156067*t156278*(gcaa*t156237*8.0+gamma_bb[index]* \
                   t156241*t156067*3.2E1+gcaa*t156066*t156067*t156277*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t156066*t156067* \
                   t156283*t156277*t156278*8.0-ccaa3*gamma_bb[index]*gcaa*t156300*t156071*t156066*t156067*t156283*1.0/ \
                   (t156077*t156077*t156077)*2.0)+rho_b[index]*t156319*(t156314-t156190+t156101*t156168*(t156313-t156314+ \
                   t156190-t156312*t156170*t156306*t156307))-c0*t156394*t156387*(omega*t156321*(omega*t156378*t156388* \
                   (2.778046668940015E15/1.40737488355328E14)+omega*t156321*((t156324*(1.0/3.0))/rho_b[index]+1.0/pow(t156320,5.0/ \
                   3.0)*t156374*t156376*(2.778046668940015E15/1.40737488355328E14)-t156321*t156322*t156324*(2.778046668940015E15/ \
                   7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t156324*t156375*t156368*(1.108777112152858E31/1.584563250285287E29) \
                   )*(4.0/3.0)-omega*t156379*t156388*(2.778046668940015E15/1.05553116266496E14))-c0*t156381*t156387*(cx1* \
                   gx*t156237*t156382*(-8.0/3.0)+cx1*gamma_bb[index]*t156241*t156325*t156386*8.0-cx2*gamma_bb[index]* \
                   t156241*t156325*t156384*(3.2E1/3.0)+cx2*t156241*t156325*t156343*t156066*t156349*(1.6E1/3.0)+cx4*t156342* \
                   t156326*t156284*t156078*t156367*(3.2E1/3.0)+cx4*t156342*t156326*t156069*t156078*(gx*t156237*(3.2E1/ \
                   3.0)+gamma_bb[index]*t156241*t156325*6.4E1+gamma_bb[index]*t156326*t156066*t156284*(1.28E2/3.0)+gx* \
                   t156325*t156066*t156277*9.6E1)-cx1*gx*t156325*t156066*1.0/(t156328*t156328*t156328)*t156277*(1.6E1/ \
                   3.0)+cx2*t156070*t156325*t156343*t156066*(gx*t156237*(1.6E1/3.0)+gamma_bb[index]*t156241*t156325*(3.2E1/ \
                   3.0))+cx2*gamma_bb[index]*t156070*t156325*t156343*t156346*2.0-cx4*gamma_bb[index]*t156326*t156066* \
                   t156284*t156383*(1.28E2/3.0)-cx3*gx*t156325*t156066*t156277*t156385*2.4E1+cx4*gamma_bb[index]*t156342* \
                   t156326*t156362*t156066*t156069*4.0+cx3*gx*t156071*t156325*t156066*t156336*t156357*3.0-cx2*t156070* \
                   t156325*1.0/(t156335*t156335*t156335)*t156066*t156346*t156349*2.0-cx4*1.0/(t156341*t156341*t156341) \
                   *t156326*t156362*t156069*t156078*t156367*2.0+cx3*gamma_bb[index]*gx*t156071*t156325*t156066*t156336* \
                   (gx*t156237*8.0+gamma_bb[index]*t156241*t156325*3.2E1+gx*t156325*t156066*t156277*2.4E1)+cx3*gamma_bb[index]* \
                   gx*t156325*t156353*t156066*t156336*t156277*8.0-cx3*gamma_bb[index]*gx*t156071*1.0/(t156332*t156332* \
                   t156332)*t156325*t156353*t156066*t156357*2.0)-c0*pow(rho_b[index],1.0/3.0)*t156381*t156394*(4.0/3.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t157381 = 1.0/pow(rho_b[index],1.0/3.0);
                double t157382 = c*t157381;
                double t157383 = sqrt(t157382);
                double t157384 = pow(t157382,3.0/2.0);
                double t157385 = c*c;
                double t157386 = 1.0/pow(rho_b[index],2.0/3.0);
                double t157387 = 1.0/c0p;
                double t157388 = b1p*t157383;
                double t157389 = b3p*t157384;
                double t157390 = b4p*t157385*t157386;
                double t157391 = b2p*c*t157381;
                double t157392 = t157390+t157391+t157388+t157389;
                double t157393 = 1.0/t157392;
                double t157394 = t157393*t157387*(1.0/2.0);
                double t157395 = t157394+1.0;
                double t157396 = log(t157395);
                double t157397 = a1p*c*t157381;
                double t157398 = t157397+1.0;
                double t157399 = 1.0/pow(rho_b[index],8.0/3.0);
                double t157400 = gamma_bb[index]*gamma_bb[index];
                double t157401 = gcaa*gcaa;
                double t157402 = t157401*t157401;
                double t157403 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t157404 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t157405 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t157406 = gamma_bb[index]*gcaa*t157399;
                double t157407 = t157406+1.0;
                double t157408 = gamma_bb[index]*gcaa*t157399*3.0;
                double t157409 = gamma_bb[index]*gcaa*t157400*t157401*t157405;
                double t157410 = t157400*t157401*t157404*3.0;
                double t157411 = t157410+t157408+t157409+1.0;
                double t157412 = t157400*t157400;
                double t157413 = gamma_bb[index]*gcaa*t157399*4.0;
                double t157414 = gamma_bb[index]*gcaa*t157400*t157401*t157405*4.0;
                double t157415 = t157400*t157401*t157404*6.0;
                double t157416 = t157402*t157403*t157412;
                double t157417 = t157413+t157414+t157415+t157416+1.0;
                double t157418 = gamma_bb[index]*gcaa*t157399*2.0;
                double t157419 = t157400*t157401*t157404;
                double t157420 = t157418+t157419+1.0;
                double t157421 = pow(2.0,1.0/3.0);
                double t157422 = t157421*2.0;
                double t157423 = t157422-2.0;
                double t157424 = two_13*2.0;
                double t157425 = t157424-2.0;
                double t157426 = 1.0/t157425;
                double t157427 = 1.0/c0f;
                double t157428 = b1f*t157383;
                double t157429 = b3f*t157384;
                double t157430 = b4f*t157385*t157386;
                double t157431 = b2f*c*t157381;
                double t157432 = t157430+t157431+t157428+t157429;
                double t157433 = 1.0/t157432;
                double t157434 = t157433*t157427*(1.0/2.0);
                double t157435 = t157434+1.0;
                double t157436 = log(t157435);
                double t157437 = a1f*c*t157381;
                double t157438 = t157437+1.0;
                double t157439 = c0f*t157436*t157438*2.0;
                double t157440 = c0p*t157396*t157398*2.0;
                double t157441 = 1.0/t157407;
                double t157442 = 1.0/t157417;
                double t157443 = 1.0/t157420;
                double t157444 = 1.0/t157411;
                double t157445 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t157446 = 1.0/(t157407*t157407);
                double t157447 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t157448 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t157449 = 1.0/(t157411*t157411);
                double t157450 = 1.0/(t157420*t157420);
                double t157451 = gcaa*t157399*3.0;
                double t157452 = gamma_bb[index]*t157401*t157404*6.0;
                double t157453 = gcaa*t157400*t157401*t157405*3.0;
                double t157454 = t157451+t157452+t157453;
                double t157455 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t157456 = 1.0/(t157417*t157417);
                double t157457 = gcaa*t157399*4.0;
                double t157458 = gamma_bb[index]*t157401*t157404*1.2E1;
                double t157459 = gcaa*t157400*t157401*t157405*1.2E1;
                double t157460 = gamma_bb[index]*t157400*t157402*t157403*4.0;
                double t157461 = t157460+t157457+t157458+t157459;
                double t157462 = gcaa*t157399*2.0;
                double t157463 = gamma_bb[index]*t157401*t157404*2.0;
                double t157464 = t157462+t157463;
                double t157465 = gamma_bb[index]*gcaa*t157448*(1.6E1/3.0);
                double t157466 = t157400*t157401*t157445*(1.6E1/3.0);
                double t157467 = t157465+t157466;
                double t157468 = gamma_bb[index]*gcaa*t157448*8.0;
                double t157469 = gamma_bb[index]*gcaa*t157400*t157401*t157447*8.0;
                double t157470 = t157400*t157401*t157445*1.6E1;
                double t157471 = t157470+t157468+t157469;
                double t157472 = gamma_bb[index]*gcaa*t157448*(3.2E1/3.0);
                double t157473 = gamma_bb[index]*gcaa*t157400*t157401*t157447*3.2E1;
                double t157474 = t157400*t157401*t157445*3.2E1;
                double t157475 = t157402*t157412*t157455*(3.2E1/3.0);
                double t157476 = t157472+t157473+t157474+t157475;
                double t157477 = 1.0/pow(rho_b[index],4.0/3.0);
                double t157478 = 1.0/pow(rho_b[index],5.0/3.0);
                double t157479 = 1.0/sqrt(t157382);
                double t157480 = 1.0/t157395;
                double t157481 = 1.0/(t157392*t157392);
                double t157482 = b4p*t157385*t157478*(2.0/3.0);
                double t157483 = b2p*c*t157477*(1.0/3.0);
                double t157484 = b1p*c*t157477*t157479*(1.0/6.0);
                double t157485 = b3p*c*t157383*t157477*(1.0/2.0);
                double t157486 = t157482+t157483+t157484+t157485;
                double t157487 = t157480*t157481*t157486*t157398;
                double t157488 = ccaa1*gcaa*t157441*t157399;
                double t157489 = ccaa4*gamma_bb[index]*t157400*t157402*t157403*t157442*4.0;
                double t157490 = ccaa2*gamma_bb[index]*t157401*t157404*t157443*2.0;
                double t157491 = ccaa3*gcaa*t157400*t157401*t157405*t157444*3.0;
                double t157492 = t157490+t157491+t157488+t157489-ccaa1*gamma_bb[index]*t157401*t157404*t157446-ccaa2* \
                   t157400*t157401*t157404*t157450*t157464-ccaa4*t157402*t157403*t157412*t157461*t157456-ccaa3*gamma_bb[index]* \
                   gcaa*t157400*t157401*t157405*t157454*t157449;
                double t157493 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t157494 = 1.0/pow(t157493,1.0/3.0);
                double t157495 = 1.0/(omega*omega);
                double t157496 = pow(t157493,2.0/3.0);
                double t157546 = t157495*t157496;
                double t157497 = exp(-t157546);
                double t157498 = gx*gx;
                double t157499 = t157498*t157498;
                double t157500 = gamma_bb[index]*gx*t157399;
                double t157501 = t157500+1.0;
                double t157502 = gamma_bb[index]*gx*t157399*3.0;
                double t157503 = gamma_bb[index]*gx*t157400*t157405*t157498;
                double t157504 = t157400*t157404*t157498*3.0;
                double t157505 = t157502+t157503+t157504+1.0;
                double t157506 = gamma_bb[index]*gx*t157399*2.0;
                double t157507 = t157400*t157404*t157498;
                double t157508 = t157506+t157507+1.0;
                double t157509 = 1.0/(t157505*t157505);
                double t157510 = gamma_bb[index]*gx*t157399*4.0;
                double t157511 = gamma_bb[index]*gx*t157400*t157405*t157498*4.0;
                double t157512 = t157400*t157404*t157498*6.0;
                double t157513 = t157403*t157412*t157499;
                double t157514 = t157510+t157511+t157512+t157513+1.0;
                double t157515 = 1.0/(t157514*t157514);
                double t157516 = 1.0/(t157508*t157508);
                double t157517 = gamma_bb[index]*gx*t157448*(1.6E1/3.0);
                double t157518 = t157400*t157445*t157498*(1.6E1/3.0);
                double t157519 = t157517+t157518;
                double t157520 = gx*t157399*2.0;
                double t157521 = gamma_bb[index]*t157404*t157498*2.0;
                double t157522 = t157520+t157521;
                double t157523 = gx*t157399*3.0;
                double t157524 = gamma_bb[index]*t157404*t157498*6.0;
                double t157525 = gx*t157400*t157405*t157498*3.0;
                double t157526 = t157523+t157524+t157525;
                double t157527 = gamma_bb[index]*gx*t157448*8.0;
                double t157528 = gamma_bb[index]*gx*t157400*t157447*t157498*8.0;
                double t157529 = t157400*t157445*t157498*1.6E1;
                double t157530 = t157527+t157528+t157529;
                double t157531 = gamma_bb[index]*gx*t157448*(3.2E1/3.0);
                double t157532 = gamma_bb[index]*gx*t157400*t157447*t157498*3.2E1;
                double t157533 = t157400*t157445*t157498*3.2E1;
                double t157534 = t157412*t157455*t157499*(3.2E1/3.0);
                double t157535 = t157531+t157532+t157533+t157534;
                double t157536 = gx*t157399*4.0;
                double t157537 = gamma_bb[index]*t157404*t157498*1.2E1;
                double t157538 = gx*t157400*t157405*t157498*1.2E1;
                double t157539 = gamma_bb[index]*t157400*t157403*t157499*4.0;
                double t157540 = t157536+t157537+t157538+t157539;
                double t157541 = 1.0/omega;
                double t157542 = pow(t157493,1.0/3.0);
                double t157543 = t157541*t157542;
                double t157544 = erf(t157543);
                double t157545 = t157544*(3.991211251234741E15/2.251799813685248E15);
                double t157547 = omega*omega;
                double t157548 = 1.0/pow(t157493,2.0/3.0);
                double t157549 = t157497-1.0;
                double t157550 = t157547*t157548*t157549*(1.0/2.0);
                double t157551 = t157550-t157497+3.0/2.0;
                double t157562 = omega*t157551*t157494;
                double t157552 = -t157562+t157545;
                double t157553 = omega*t157552*t157494*(4.0/3.0);
                double t157554 = t157553-1.0;
                double t157555 = 1.0/t157501;
                double t157556 = 1.0/t157514;
                double t157557 = 1.0/t157508;
                double t157558 = 1.0/t157505;
                double t157559 = 1.0/(t157501*t157501);
                double t157560 = pow(rho_b[index],4.0/3.0);
                double t157561 = 1.0/pow(t157493,4.0/3.0);
                double t157563 = cx1*gx*t157555*t157399;
                double t157564 = cx4*gamma_bb[index]*t157400*t157403*t157556*t157499*4.0;
                double t157565 = cx2*gamma_bb[index]*t157404*t157557*t157498*2.0;
                double t157566 = cx3*gx*t157400*t157405*t157558*t157498*3.0;
                double t157567 = t157563+t157564+t157565+t157566-cx1*gamma_bb[index]*t157404*t157559*t157498-cx2* \
                   t157400*t157404*t157522*t157516*t157498-cx4*t157403*t157412*t157540*t157515*t157499-cx3*gamma_bb[index]* \
                   gx*t157400*t157405*t157526*t157509*t157498;
                v_rho_b_gamma_bb_[index] = -t157492*(t157440+t157423*t157426*(t157439-c0p*t157396*t157398*2.0))+rho_b[index]* \
                   t157492*(-t157487+t157423*t157426*(t157487-(1.0/(t157432*t157432)*t157438*(b2f*c*t157477*(1.0/3.0) \
                   +b4f*t157385*t157478*(2.0/3.0)+b1f*c*t157477*t157479*(1.0/6.0)+b3f*c*t157383*t157477*(1.0/2.0)))/t157435+ \
                   a1f*c*c0f*t157436*t157477*(2.0/3.0)-a1p*c*c0p*t157396*t157477*(2.0/3.0))+a1p*c*c0p*t157396*t157477* \
                   (2.0/3.0))-rho_b[index]*(t157440-t157423*t157426*(t157440-t157439))*(ccaa1*gcaa*t157441*t157448*(- \
                   8.0/3.0)-ccaa2*gamma_bb[index]*t157401*t157443*t157445*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t157401*t157445* \
                   t157446*8.0+ccaa2*t157400*t157401*t157450*t157445*t157464*(1.6E1/3.0)+ccaa4*t157402*t157412*t157461* \
                   t157455*t157456*(3.2E1/3.0)+ccaa4*t157402*t157403*t157412*t157456*(gcaa*t157448*(3.2E1/3.0)+gamma_bb[index]* \
                   t157401*t157445*6.4E1+gamma_bb[index]*t157400*t157402*t157455*(1.28E2/3.0)+gcaa*t157400*t157401*t157447* \
                   9.6E1)-ccaa1*gcaa*t157400*t157401*1.0/(t157407*t157407*t157407)*t157447*(1.6E1/3.0)+ccaa2*t157400* \
                   t157401*t157404*t157450*(gcaa*t157448*(1.6E1/3.0)+gamma_bb[index]*t157401*t157445*(3.2E1/3.0))-ccaa4* \
                   gamma_bb[index]*t157400*t157402*t157442*t157455*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t157401*t157404* \
                   t157450*t157467*2.0-ccaa3*gcaa*t157400*t157401*t157444*t157447*2.4E1+ccaa4*gamma_bb[index]*t157400* \
                   t157402*t157403*t157456*t157476*4.0+ccaa3*gcaa*t157400*t157401*t157405*t157471*t157449*3.0-ccaa2*t157400* \
                   t157401*1.0/(t157420*t157420*t157420)*t157404*t157464*t157467*2.0-ccaa4*t157402*t157403*t157412*t157461* \
                   1.0/(t157417*t157417*t157417)*t157476*2.0+ccaa3*gamma_bb[index]*gcaa*t157400*t157401*t157405*t157449* \
                   (gcaa*t157448*8.0+gamma_bb[index]*t157401*t157445*3.2E1+gcaa*t157400*t157401*t157447*2.4E1)+ccaa3* \
                   gamma_bb[index]*gcaa*t157400*t157401*t157454*t157447*t157449*8.0-ccaa3*gamma_bb[index]*gcaa*t157400* \
                   t157401*1.0/(t157411*t157411*t157411)*t157405*t157471*t157454*2.0)-c0*t157560*t157567*(omega*t157494* \
                   (omega*t157551*t157561*(2.778046668940015E15/1.40737488355328E14)+omega*t157494*((t157497*(1.0/3.0) \
                   )/rho_b[index]+1.0/pow(t157493,5.0/3.0)*t157547*t157549*(2.778046668940015E15/1.40737488355328E14) \
                   -t157494*t157495*t157497*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t157541* \
                   t157548*t157497*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t157552*t157561*(2.778046668940015E15/ \
                   1.05553116266496E14))-c0*t157560*t157554*(cx1*gx*t157555*t157448*(-8.0/3.0)+cx1*gamma_bb[index]*t157445* \
                   t157559*t157498*8.0-cx2*gamma_bb[index]*t157445*t157557*t157498*(3.2E1/3.0)+cx2*t157400*t157522*t157516* \
                   t157445*t157498*(1.6E1/3.0)+cx4*t157412*t157540*t157515*t157455*t157499*(3.2E1/3.0)+cx4*t157403*t157412* \
                   t157515*t157499*(gx*t157448*(3.2E1/3.0)+gamma_bb[index]*t157445*t157498*6.4E1+gamma_bb[index]*t157400* \
                   t157455*t157499*(1.28E2/3.0)+gx*t157400*t157447*t157498*9.6E1)-cx1*gx*t157400*1.0/(t157501*t157501* \
                   t157501)*t157447*t157498*(1.6E1/3.0)+cx2*t157400*t157404*t157516*t157498*(gx*t157448*(1.6E1/3.0)+gamma_bb[index]* \
                   t157445*t157498*(3.2E1/3.0))+cx2*gamma_bb[index]*t157404*t157516*t157519*t157498*2.0-cx4*gamma_bb[index]* \
                   t157400*t157455*t157556*t157499*(1.28E2/3.0)-cx3*gx*t157400*t157447*t157558*t157498*2.4E1+cx4*gamma_bb[index]* \
                   t157400*t157403*t157515*t157535*t157499*4.0+cx3*gx*t157400*t157530*t157405*t157509*t157498*3.0-cx2* \
                   t157400*t157404*t157522*1.0/(t157508*t157508*t157508)*t157519*t157498*2.0-cx4*t157403*t157412*t157540* \
                   1.0/(t157514*t157514*t157514)*t157535*t157499*2.0+cx3*gamma_bb[index]*gx*t157400*t157405*t157509*t157498* \
                   (gx*t157448*8.0+gamma_bb[index]*t157445*t157498*3.2E1+gx*t157400*t157447*t157498*2.4E1)+cx3*gamma_bb[index]* \
                   gx*t157400*t157526*t157509*t157447*t157498*8.0-cx3*gamma_bb[index]*gx*t157400*t157530*t157405*1.0/ \
                   (t157505*t157505*t157505)*t157526*t157498*2.0)-c0*pow(rho_b[index],1.0/3.0)*t157554*t157567*(4.0/3.0) \
                   ;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t156396 = 1.0/pow(rho_a[index],1.0/3.0);
                double t156397 = c*t156396;
                double t156398 = sqrt(t156397);
                double t156399 = pow(t156397,3.0/2.0);
                double t156400 = c*c;
                double t156401 = 1.0/pow(rho_a[index],2.0/3.0);
                double t156402 = 1.0/c0p;
                double t156403 = b1p*t156398;
                double t156404 = b3p*t156399;
                double t156405 = b4p*t156400*t156401;
                double t156406 = b2p*c*t156396;
                double t156407 = t156403+t156404+t156405+t156406;
                double t156408 = 1.0/t156407;
                double t156409 = t156402*t156408*(1.0/2.0);
                double t156410 = t156409+1.0;
                double t156411 = log(t156410);
                double t156412 = a1p*c*t156396;
                double t156413 = t156412+1.0;
                double t156414 = pow(2.0,1.0/3.0);
                double t156415 = t156414*2.0;
                double t156416 = t156415-2.0;
                double t156417 = two_13*2.0;
                double t156418 = t156417-2.0;
                double t156419 = 1.0/t156418;
                double t156420 = 1.0/c0f;
                double t156421 = 1.0/pow(rho_b[index],1.0/3.0);
                double t156422 = c*t156421;
                double t156423 = sqrt(t156422);
                double t156424 = pow(t156422,3.0/2.0);
                double t156425 = 1.0/pow(rho_b[index],2.0/3.0);
                double t156426 = b1p*t156423;
                double t156427 = b3p*t156424;
                double t156428 = b4p*t156400*t156425;
                double t156429 = b2p*c*t156421;
                double t156430 = t156426+t156427+t156428+t156429;
                double t156431 = 1.0/t156430;
                double t156432 = t156402*t156431*(1.0/2.0);
                double t156433 = t156432+1.0;
                double t156434 = log(t156433);
                double t156435 = a1p*c*t156421;
                double t156436 = t156435+1.0;
                double t156437 = c0p*t156434*t156436*2.0;
                double t156438 = rho_a[index]+rho_b[index];
                double t156439 = 1.0/pow(t156438,1.0/3.0);
                double t156440 = c*t156439;
                double t156441 = sqrt(t156440);
                double t156442 = pow(t156440,3.0/2.0);
                double t156443 = 1.0/pow(t156438,2.0/3.0);
                double t156444 = b1p*t156441;
                double t156445 = b3p*t156442;
                double t156446 = b4p*t156400*t156443;
                double t156447 = b2p*c*t156439;
                double t156448 = t156444+t156445+t156446+t156447;
                double t156449 = 1.0/t156448;
                double t156450 = t156402*t156449*(1.0/2.0);
                double t156451 = t156450+1.0;
                double t156452 = log(t156451);
                double t156453 = a1p*c*t156439;
                double t156454 = t156453+1.0;
                double t156455 = c0p*t156452*t156454*2.0;
                double t156456 = rho_a[index]-rho_b[index];
                double t156457 = t156456*t156456;
                double t156458 = 1.0/t156438;
                double t156459 = t156456*t156458;
                double t156460 = 1.0/(t156438*t156438*t156438*t156438);
                double t156461 = t156457*t156457;
                double t156462 = t156459+1.0;
                double t156463 = pow(t156462,4.0/3.0);
                double t156464 = -t156459+1.0;
                double t156465 = pow(t156464,4.0/3.0);
                double t156466 = t156463+t156465-2.0;
                double t156467 = gcab*gcab;
                double t156468 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t156469 = 1.0/pow(rho_a[index],8.0/3.0);
                double t156470 = gamma_aa[index]*t156469*(1.0/2.0);
                double t156471 = 1.0/pow(rho_b[index],8.0/3.0);
                double t156472 = gamma_bb[index]*t156471*(1.0/2.0);
                double t156473 = t156470+t156472;
                double t156474 = gcab*t156473;
                double t156475 = t156474+1.0;
                double t156476 = t156473*t156473;
                double t156477 = t156467*t156476;
                double t156478 = gcab*t156473*2.0;
                double t156479 = t156477+t156478+1.0;
                double t156480 = t156467*t156467;
                double t156497 = gcab*t156469*2.0;
                double t156498 = t156473*t156467*t156469*6.0;
                double t156499 = gcab*t156467*t156476*t156469*6.0;
                double t156500 = t156480*t156473*t156476*t156469*2.0;
                double t156481 = t156500+t156497+t156498+t156499;
                double t156482 = t156476*t156476;
                double t156502 = gcab*t156469*(3.0/2.0);
                double t156503 = t156473*t156467*t156469*3.0;
                double t156504 = gcab*t156467*t156476*t156469*(3.0/2.0);
                double t156483 = t156502+t156503+t156504;
                double t156484 = t156467*t156476*3.0;
                double t156485 = gcab*t156473*t156467*t156476;
                double t156486 = gcab*t156473*3.0;
                double t156487 = t156484+t156485+t156486+1.0;
                double t156494 = gcab*t156469;
                double t156495 = t156473*t156467*t156469;
                double t156488 = t156494+t156495;
                double t156489 = t156467*t156476*6.0;
                double t156490 = gcab*t156473*t156467*t156476*4.0;
                double t156491 = t156480*t156482;
                double t156492 = gcab*t156473*4.0;
                double t156493 = t156490+t156491+t156492+t156489+1.0;
                double t156496 = 1.0/(t156479*t156479);
                double t156501 = 1.0/(t156493*t156493);
                double t156505 = 1.0/(t156487*t156487);
                double t156506 = b1f*t156398;
                double t156507 = b3f*t156399;
                double t156508 = b4f*t156400*t156401;
                double t156509 = b2f*c*t156396;
                double t156510 = t156506+t156507+t156508+t156509;
                double t156511 = 1.0/t156510;
                double t156512 = t156420*t156511*(1.0/2.0);
                double t156513 = t156512+1.0;
                double t156514 = log(t156513);
                double t156515 = a1f*c*t156396;
                double t156516 = t156515+1.0;
                double t156517 = c0f*t156514*t156516*2.0;
                double t156518 = c0p*t156411*t156413*2.0;
                double t156519 = gcaa*gcaa;
                double t156520 = gamma_aa[index]*gamma_aa[index];
                double t156521 = t156519*t156519;
                double t156522 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t156523 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t156524 = gamma_aa[index]*gcaa*t156469;
                double t156525 = t156524+1.0;
                double t156526 = gamma_aa[index]*gcaa*t156469*2.0;
                double t156527 = t156520*t156519*t156468;
                double t156528 = t156526+t156527+1.0;
                double t156529 = gamma_aa[index]*gcaa*t156469*3.0;
                double t156530 = gamma_aa[index]*gcaa*t156520*t156523*t156519;
                double t156531 = t156520*t156519*t156468*3.0;
                double t156532 = t156530+t156531+t156529+1.0;
                double t156533 = t156520*t156520;
                double t156549 = gcaa*t156469*4.0;
                double t156550 = gamma_aa[index]*t156519*t156468*1.2E1;
                double t156551 = gcaa*t156520*t156523*t156519*1.2E1;
                double t156552 = gamma_aa[index]*t156520*t156521*t156522*4.0;
                double t156534 = t156550+t156551+t156552+t156549;
                double t156535 = gamma_aa[index]*gcaa*t156469*4.0;
                double t156536 = gamma_aa[index]*gcaa*t156520*t156523*t156519*4.0;
                double t156537 = t156520*t156519*t156468*6.0;
                double t156538 = t156521*t156522*t156533;
                double t156539 = t156535+t156536+t156537+t156538+1.0;
                double t156542 = gcaa*t156469*2.0;
                double t156543 = gamma_aa[index]*t156519*t156468*2.0;
                double t156540 = t156542+t156543;
                double t156541 = 1.0/(t156532*t156532);
                double t156544 = 1.0/(t156528*t156528);
                double t156545 = gcaa*t156469*3.0;
                double t156546 = gamma_aa[index]*t156519*t156468*6.0;
                double t156547 = gcaa*t156520*t156523*t156519*3.0;
                double t156548 = t156545+t156546+t156547;
                double t156553 = 1.0/(t156539*t156539);
                double t156554 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t156555 = 1.0/pow(t156554,1.0/3.0);
                double t156556 = 1.0/(omega*omega);
                double t156557 = pow(t156554,2.0/3.0);
                double t156558 = exp(-t156556*t156557);
                double t156559 = gx*gx;
                double t156560 = t156559*t156559;
                double t156561 = gamma_aa[index]*gx*t156469;
                double t156562 = t156561+1.0;
                double t156563 = gamma_aa[index]*gx*t156469*2.0;
                double t156564 = t156520*t156468*t156559;
                double t156565 = t156563+t156564+1.0;
                double t156566 = gamma_aa[index]*gx*t156469*3.0;
                double t156567 = gamma_aa[index]*gx*t156520*t156523*t156559;
                double t156568 = t156520*t156468*t156559*3.0;
                double t156569 = t156566+t156567+t156568+1.0;
                double t156585 = gx*t156469*4.0;
                double t156586 = gamma_aa[index]*t156468*t156559*1.2E1;
                double t156587 = gx*t156520*t156523*t156559*1.2E1;
                double t156588 = gamma_aa[index]*t156520*t156522*t156560*4.0;
                double t156570 = t156585+t156586+t156587+t156588;
                double t156571 = gamma_aa[index]*gx*t156469*4.0;
                double t156572 = gamma_aa[index]*gx*t156520*t156523*t156559*4.0;
                double t156573 = t156520*t156468*t156559*6.0;
                double t156574 = t156522*t156533*t156560;
                double t156575 = t156571+t156572+t156573+t156574+1.0;
                double t156578 = gx*t156469*2.0;
                double t156579 = gamma_aa[index]*t156468*t156559*2.0;
                double t156576 = t156578+t156579;
                double t156577 = 1.0/(t156569*t156569);
                double t156580 = 1.0/(t156565*t156565);
                double t156581 = gx*t156469*3.0;
                double t156582 = gamma_aa[index]*t156468*t156559*6.0;
                double t156583 = gx*t156520*t156523*t156559*3.0;
                double t156584 = t156581+t156582+t156583;
                double t156589 = 1.0/(t156575*t156575);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t156518+t156416*t156419*(t156517-c0p*t156411*t156413* \
                   2.0))+rho_b[index]*(t156437-t156416*t156419*(t156437-c0f*log((t156420*(1.0/2.0))/(b1f*t156423+b3f* \
                   t156424+b2f*c*t156421+b4f*t156400*t156425)+1.0)*(a1f*c*t156421+1.0)*2.0))-t156438*(t156455-t156460* \
                   t156461*t156419*t156466*(t156455-c0f*log((t156420*(1.0/2.0))/(b1f*t156441+b3f*t156442+b2f*c*t156439+ \
                   b4f*t156400*t156443)+1.0)*(a1f*c*t156439+1.0)*2.0)+(Aa*t156419*t156466*log((1.0/2.0)/(Aa*(b1a*t156441+ \
                   b3a*t156442+b2a*c*t156439+b4a*t156400*t156443))+1.0)*(t156460*t156461-1.0)*(a1a*c*t156439+1.0)*2.0) \
                   /d2fz0))*(ccab1*1.0/(t156475*t156475)*t156467*t156468*(1.0/2.0)-(ccab2*t156467*t156468*(1.0/2.0))/ \
                   t156479-ccab4*t156480*(t156481*t156481)*t156482*1.0/(t156493*t156493*t156493)*2.0-ccab2*t156467*t156476* \
                   1.0/(t156479*t156479*t156479)*(t156488*t156488)*2.0+ccab2*t156480*t156476*t156468*t156496*(1.0/2.0) \
                   +ccab4*t156501*t156480*t156482*(t156467*t156468*3.0+t156480*t156476*t156468*3.0+gcab*t156473*t156467* \
                   t156468*6.0)-(ccab4*t156480*t156476*t156468*3.0)/t156493+ccab2*t156473*t156467*t156469*t156496*t156488* \
                   2.0-ccab1*gcab*t156473*1.0/(t156475*t156475*t156475)*t156467*t156468*(1.0/2.0)-(ccab3*gcab*t156473* \
                   t156467*t156468*(3.0/2.0))/t156487-ccab3*gcab*t156473*(t156483*t156483)*t156467*t156476*1.0/(t156487* \
                   t156487*t156487)*2.0+ccab3*gcab*t156505*t156483*t156467*t156476*t156469*3.0+ccab4*t156501*t156480* \
                   t156481*t156473*t156476*t156469*4.0+ccab3*gcab*t156505*t156473*t156467*t156476*(t156467*t156468*(3.0/ \
                   2.0)+gcab*t156473*t156467*t156468*(3.0/2.0)))+rho_a[index]*(t156518+t156416*t156419*(t156517-t156518) \
                   )*(ccaa1*1.0/(t156525*t156525)*t156519*t156468*2.0-(ccaa2*t156519*t156468*2.0)/t156528+ccaa2*t156520* \
                   t156521*t156522*t156544*2.0-(ccaa4*t156520*t156521*t156522*1.2E1)/t156539+ccaa4*t156521*t156522*t156533* \
                   t156553*(t156519*t156468*1.2E1+t156520*t156521*t156522*1.2E1+gamma_aa[index]*gcaa*t156523*t156519* \
                   2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t156523*t156519*6.0)/t156532-ccaa1*gamma_aa[index]*gcaa*t156523* \
                   1.0/(t156525*t156525*t156525)*t156519*2.0-ccaa4*t156521*t156522*t156533*(t156534*t156534)*1.0/(t156539* \
                   t156539*t156539)*2.0-ccaa2*t156520*(t156540*t156540)*t156519*1.0/(t156528*t156528*t156528)*t156468* \
                   2.0+ccaa2*gamma_aa[index]*t156540*t156544*t156519*t156468*4.0+ccaa4*gamma_aa[index]*t156520*t156521* \
                   t156522*t156534*t156553*8.0+ccaa3*gcaa*t156520*t156523*t156541*t156519*t156548*6.0+ccaa3*gamma_aa[index]* \
                   gcaa*t156520*t156523*t156541*t156519*(t156519*t156468*6.0+gamma_aa[index]*gcaa*t156523*t156519*6.0) \
                   -ccaa3*gamma_aa[index]*gcaa*t156520*t156523*1.0/(t156532*t156532*t156532)*t156519*(t156548*t156548) \
                   *2.0)+c0*pow(rho_a[index],4.0/3.0)*(omega*t156555*(erf(pow(t156554,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t156555*(-t156558+(omega*omega)*1.0/pow(t156554,2.0/3.0)*(t156558-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*1.0/(t156562*t156562)*t156468*t156559*2.0-(cx2*t156468*t156559* \
                   2.0)/t156565+cx2*t156520*t156522*t156560*t156580*2.0-(cx4*t156520*t156522*t156560*1.2E1)/t156575+cx4* \
                   t156522*t156533*t156560*t156589*(t156468*t156559*1.2E1+t156520*t156522*t156560*1.2E1+gamma_aa[index]* \
                   gx*t156523*t156559*2.4E1)-cx1*gamma_aa[index]*gx*t156523*1.0/(t156562*t156562*t156562)*t156559*2.0- \
                   (cx3*gamma_aa[index]*gx*t156523*t156559*6.0)/t156569-cx2*t156520*1.0/(t156565*t156565*t156565)*t156468* \
                   (t156576*t156576)*t156559*2.0-cx4*t156522*t156533*t156560*(t156570*t156570)*1.0/(t156575*t156575*t156575) \
                   *2.0+cx2*gamma_aa[index]*t156580*t156468*t156576*t156559*4.0+cx4*gamma_aa[index]*t156520*t156522*t156560* \
                   t156570*t156589*8.0+cx3*gx*t156520*t156523*t156584*t156559*t156577*6.0+cx3*gamma_aa[index]*gx*t156520* \
                   t156523*t156559*t156577*(t156468*t156559*6.0+gamma_aa[index]*gx*t156523*t156559*6.0)-cx3*gamma_aa[index]* \
                   gx*t156520*t156523*(t156584*t156584)*t156559*1.0/(t156569*t156569*t156569)*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t158324 = 1.0/pow(rho_a[index],1.0/3.0);
                double t158325 = c*t158324;
                double t158326 = sqrt(t158325);
                double t158327 = pow(t158325,3.0/2.0);
                double t158328 = c*c;
                double t158329 = 1.0/pow(rho_a[index],2.0/3.0);
                double t158330 = 1.0/c0p;
                double t158331 = b1p*t158326;
                double t158332 = b3p*t158327;
                double t158333 = b4p*t158328*t158329;
                double t158334 = b2p*c*t158324;
                double t158335 = t158331+t158332+t158333+t158334;
                double t158336 = 1.0/t158335;
                double t158337 = t158330*t158336*(1.0/2.0);
                double t158338 = t158337+1.0;
                double t158339 = log(t158338);
                double t158340 = a1p*c*t158324;
                double t158341 = t158340+1.0;
                double t158342 = gcaa*gcaa;
                double t158343 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t158344 = 1.0/pow(rho_a[index],8.0/3.0);
                double t158345 = gamma_aa[index]*gamma_aa[index];
                double t158346 = t158342*t158342;
                double t158347 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t158348 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t158349 = gamma_aa[index]*gcaa*t158344;
                double t158350 = t158349+1.0;
                double t158351 = gamma_aa[index]*gcaa*t158344*2.0;
                double t158352 = t158342*t158343*t158345;
                double t158353 = t158351+t158352+1.0;
                double t158354 = gamma_aa[index]*gcaa*t158344*3.0;
                double t158355 = gamma_aa[index]*gcaa*t158342*t158345*t158348;
                double t158356 = t158342*t158343*t158345*3.0;
                double t158357 = t158354+t158355+t158356+1.0;
                double t158358 = t158345*t158345;
                double t158374 = gcaa*t158344*4.0;
                double t158375 = gamma_aa[index]*t158342*t158343*1.2E1;
                double t158376 = gcaa*t158342*t158345*t158348*1.2E1;
                double t158377 = gamma_aa[index]*t158345*t158346*t158347*4.0;
                double t158359 = t158374+t158375+t158376+t158377;
                double t158360 = gamma_aa[index]*gcaa*t158344*4.0;
                double t158361 = gamma_aa[index]*gcaa*t158342*t158345*t158348*4.0;
                double t158362 = t158342*t158343*t158345*6.0;
                double t158363 = t158346*t158347*t158358;
                double t158364 = t158360+t158361+t158362+t158363+1.0;
                double t158367 = gcaa*t158344*2.0;
                double t158368 = gamma_aa[index]*t158342*t158343*2.0;
                double t158365 = t158367+t158368;
                double t158366 = 1.0/(t158357*t158357);
                double t158369 = 1.0/(t158353*t158353);
                double t158370 = gcaa*t158344*3.0;
                double t158371 = gamma_aa[index]*t158342*t158343*6.0;
                double t158372 = gcaa*t158342*t158345*t158348*3.0;
                double t158373 = t158370+t158371+t158372;
                double t158378 = 1.0/(t158364*t158364);
                double t158379 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t158380 = 1.0/pow(t158379,1.0/3.0);
                double t158381 = 1.0/(omega*omega);
                double t158382 = pow(t158379,2.0/3.0);
                double t158383 = exp(-t158381*t158382);
                double t158384 = gx*gx;
                double t158385 = t158384*t158384;
                double t158386 = gamma_aa[index]*gx*t158344;
                double t158387 = t158386+1.0;
                double t158388 = gamma_aa[index]*gx*t158344*2.0;
                double t158389 = t158343*t158345*t158384;
                double t158390 = t158388+t158389+1.0;
                double t158391 = gamma_aa[index]*gx*t158344*3.0;
                double t158392 = gamma_aa[index]*gx*t158345*t158348*t158384;
                double t158393 = t158343*t158345*t158384*3.0;
                double t158394 = t158391+t158392+t158393+1.0;
                double t158410 = gx*t158344*4.0;
                double t158411 = gamma_aa[index]*t158343*t158384*1.2E1;
                double t158412 = gx*t158345*t158348*t158384*1.2E1;
                double t158413 = gamma_aa[index]*t158345*t158347*t158385*4.0;
                double t158395 = t158410+t158411+t158412+t158413;
                double t158396 = gamma_aa[index]*gx*t158344*4.0;
                double t158397 = gamma_aa[index]*gx*t158345*t158348*t158384*4.0;
                double t158398 = t158343*t158345*t158384*6.0;
                double t158399 = t158347*t158358*t158385;
                double t158400 = t158396+t158397+t158398+t158399+1.0;
                double t158403 = gx*t158344*2.0;
                double t158404 = gamma_aa[index]*t158343*t158384*2.0;
                double t158401 = t158403+t158404;
                double t158402 = 1.0/(t158394*t158394);
                double t158405 = 1.0/(t158390*t158390);
                double t158406 = gx*t158344*3.0;
                double t158407 = gamma_aa[index]*t158343*t158384*6.0;
                double t158408 = gx*t158345*t158348*t158384*3.0;
                double t158409 = t158406+t158407+t158408;
                double t158414 = 1.0/(t158400*t158400);
                v_gamma_aa_gamma_aa_[index] = rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t158326+b3f*t158327+b2f*c*t158324+b4f*t158328*t158329))+1.0)*(a1f*c*t158324+1.0)*2.0-c0p*t158341*t158339* \
                   2.0))/(two_13*2.0-2.0)+c0p*t158341*t158339*2.0)*(ccaa1*1.0/(t158350*t158350)*t158342*t158343*2.0-(ccaa2* \
                   t158342*t158343*2.0)/t158353+ccaa2*t158345*t158346*t158347*t158369*2.0-(ccaa4*t158345*t158346*t158347* \
                   1.2E1)/t158364+ccaa4*t158346*t158347*t158358*t158378*(t158342*t158343*1.2E1+t158345*t158346*t158347* \
                   1.2E1+gamma_aa[index]*gcaa*t158342*t158348*2.4E1)-ccaa1*gamma_aa[index]*gcaa*1.0/(t158350*t158350* \
                   t158350)*t158342*t158348*2.0-(ccaa3*gamma_aa[index]*gcaa*t158342*t158348*6.0)/t158357-ccaa2*t158342* \
                   t158343*1.0/(t158353*t158353*t158353)*t158345*(t158365*t158365)*2.0-ccaa4*t158346*1.0/(t158364*t158364* \
                   t158364)*t158347*t158358*(t158359*t158359)*2.0+ccaa2*gamma_aa[index]*t158342*t158343*t158365*t158369* \
                   4.0+ccaa4*gamma_aa[index]*t158345*t158346*t158347*t158359*t158378*8.0+ccaa3*gcaa*t158342*t158345*t158373* \
                   t158348*t158366*6.0+ccaa3*gamma_aa[index]*gcaa*t158342*t158345*t158348*t158366*(t158342*t158343*6.0+ \
                   gamma_aa[index]*gcaa*t158342*t158348*6.0)-ccaa3*gamma_aa[index]*gcaa*t158342*t158345*(t158373*t158373) \
                   *t158348*1.0/(t158357*t158357*t158357)*2.0)+c0*pow(rho_a[index],4.0/3.0)*(omega*t158380*(erf(pow(t158379,1.0/ \
                   3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t158380*(-t158383+(omega*omega)*1.0/ \
                   pow(t158379,2.0/3.0)*(t158383-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*t158343*t158384*1.0/(t158387* \
                   t158387)*2.0-(cx2*t158343*t158384*2.0)/t158390+cx2*t158405*t158345*t158347*t158385*2.0-(cx4*t158345* \
                   t158347*t158385*1.2E1)/t158400+cx4*t158414*t158347*t158358*t158385*(t158343*t158384*1.2E1+t158345* \
                   t158347*t158385*1.2E1+gamma_aa[index]*gx*t158348*t158384*2.4E1)-cx1*gamma_aa[index]*gx*t158348*t158384* \
                   1.0/(t158387*t158387*t158387)*2.0-(cx3*gamma_aa[index]*gx*t158348*t158384*6.0)/t158394-cx2*(t158401* \
                   t158401)*t158343*t158345*1.0/(t158390*t158390*t158390)*t158384*2.0-cx4*1.0/(t158400*t158400*t158400) \
                   *t158347*t158358*t158385*(t158395*t158395)*2.0+cx2*gamma_aa[index]*t158401*t158405*t158343*t158384* \
                   4.0+cx4*gamma_aa[index]*t158414*t158345*t158347*t158385*t158395*8.0+cx3*gx*t158402*t158345*t158409* \
                   t158348*t158384*6.0+cx3*gamma_aa[index]*gx*t158402*t158345*t158348*t158384*(t158343*t158384*6.0+gamma_aa[index]* \
                   gx*t158348*t158384*6.0)-cx3*gamma_aa[index]*gx*t158345*(t158409*t158409)*t158348*t158384*1.0/(t158394* \
                   t158394*t158394)*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t156592 = 1.0/pow(rho_a[index],1.0/3.0);
                double t156593 = c*t156592;
                double t156594 = sqrt(t156593);
                double t156595 = pow(t156593,3.0/2.0);
                double t156596 = c*c;
                double t156597 = 1.0/pow(rho_a[index],2.0/3.0);
                double t156598 = 1.0/c0p;
                double t156599 = b1p*t156594;
                double t156600 = b3p*t156595;
                double t156601 = b4p*t156596*t156597;
                double t156602 = b2p*c*t156592;
                double t156603 = t156600+t156601+t156602+t156599;
                double t156604 = 1.0/t156603;
                double t156605 = t156604*t156598*(1.0/2.0);
                double t156606 = t156605+1.0;
                double t156607 = log(t156606);
                double t156608 = a1p*c*t156592;
                double t156609 = t156608+1.0;
                double t156610 = pow(2.0,1.0/3.0);
                double t156611 = t156610*2.0;
                double t156612 = t156611-2.0;
                double t156613 = two_13*2.0;
                double t156614 = t156613-2.0;
                double t156615 = 1.0/t156614;
                double t156616 = 1.0/c0f;
                double t156617 = 1.0/pow(rho_b[index],1.0/3.0);
                double t156618 = c*t156617;
                double t156619 = sqrt(t156618);
                double t156620 = pow(t156618,3.0/2.0);
                double t156621 = 1.0/pow(rho_b[index],2.0/3.0);
                double t156622 = b1p*t156619;
                double t156623 = b3p*t156620;
                double t156624 = b4p*t156621*t156596;
                double t156625 = b2p*c*t156617;
                double t156626 = t156622+t156623+t156624+t156625;
                double t156627 = 1.0/t156626;
                double t156628 = t156627*t156598*(1.0/2.0);
                double t156629 = t156628+1.0;
                double t156630 = log(t156629);
                double t156631 = a1p*c*t156617;
                double t156632 = t156631+1.0;
                double t156633 = c0p*t156630*t156632*2.0;
                double t156634 = rho_a[index]+rho_b[index];
                double t156635 = 1.0/pow(t156634,1.0/3.0);
                double t156636 = c*t156635;
                double t156637 = sqrt(t156636);
                double t156638 = pow(t156636,3.0/2.0);
                double t156639 = 1.0/pow(t156634,2.0/3.0);
                double t156640 = b1p*t156637;
                double t156641 = b3p*t156638;
                double t156642 = b4p*t156639*t156596;
                double t156643 = b2p*c*t156635;
                double t156644 = t156640+t156641+t156642+t156643;
                double t156645 = 1.0/t156644;
                double t156646 = t156645*t156598*(1.0/2.0);
                double t156647 = t156646+1.0;
                double t156648 = log(t156647);
                double t156649 = a1p*c*t156635;
                double t156650 = t156649+1.0;
                double t156651 = c0p*t156650*t156648*2.0;
                double t156652 = rho_a[index]-rho_b[index];
                double t156653 = t156652*t156652;
                double t156654 = 1.0/t156634;
                double t156655 = t156652*t156654;
                double t156656 = 1.0/(t156634*t156634*t156634*t156634);
                double t156657 = t156653*t156653;
                double t156658 = t156655+1.0;
                double t156659 = pow(t156658,4.0/3.0);
                double t156660 = -t156655+1.0;
                double t156661 = pow(t156660,4.0/3.0);
                double t156662 = t156661+t156659-2.0;
                double t156663 = gcab*gcab;
                double t156666 = 1.0/pow(rho_a[index],8.0/3.0);
                double t156667 = 1.0/pow(rho_b[index],8.0/3.0);
                double t156668 = gamma_aa[index]*t156666*(1.0/2.0);
                double t156669 = gamma_bb[index]*t156667*(1.0/2.0);
                double t156664 = t156668+t156669;
                double t156665 = t156664*t156664;
                double t156670 = t156663*t156663;
                double t156671 = t156665*t156665;
                double t156672 = t156663*t156665*3.0;
                double t156673 = gcab*t156663*t156664*t156665;
                double t156674 = gcab*t156664*3.0;
                double t156675 = t156672+t156673+t156674+1.0;
                double t156676 = t156663*t156665;
                double t156677 = gcab*t156664*2.0;
                double t156678 = t156676+t156677+1.0;
                double t156679 = t156663*t156665*6.0;
                double t156680 = gcab*t156663*t156664*t156665*4.0;
                double t156681 = t156670*t156671;
                double t156682 = gcab*t156664*4.0;
                double t156683 = t156680+t156681+t156682+t156679+1.0;
                double t156684 = 1.0/(t156678*t156678);
                double t156685 = gcab*t156666;
                double t156686 = t156663*t156664*t156666;
                double t156687 = t156685+t156686;
                double t156688 = gcab*t156667;
                double t156689 = t156663*t156664*t156667;
                double t156690 = t156688+t156689;
                double t156691 = gcab*t156664;
                double t156692 = t156691+1.0;
                double t156693 = gcab*t156666*2.0;
                double t156694 = t156663*t156664*t156666*6.0;
                double t156695 = gcab*t156663*t156665*t156666*6.0;
                double t156696 = t156670*t156664*t156665*t156666*2.0;
                double t156697 = t156693+t156694+t156695+t156696;
                double t156698 = 1.0/(t156683*t156683);
                double t156699 = gcab*t156667*2.0;
                double t156700 = t156663*t156664*t156667*6.0;
                double t156701 = gcab*t156663*t156665*t156667*6.0;
                double t156702 = t156670*t156664*t156665*t156667*2.0;
                double t156703 = t156700+t156701+t156702+t156699;
                double t156704 = gcab*t156666*(3.0/2.0);
                double t156705 = t156663*t156664*t156666*3.0;
                double t156706 = gcab*t156663*t156665*t156666*(3.0/2.0);
                double t156707 = t156704+t156705+t156706;
                double t156708 = 1.0/(t156675*t156675);
                double t156709 = gcab*t156667*(3.0/2.0);
                double t156710 = t156663*t156664*t156667*3.0;
                double t156711 = gcab*t156663*t156665*t156667*(3.0/2.0);
                double t156712 = t156710+t156711+t156709;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t156633-t156612*t156615*(t156633-c0f*log((t156616*(1.0/ \
                   2.0))/(b1f*t156619+b3f*t156620+b2f*c*t156617+b4f*t156621*t156596)+1.0)*(a1f*c*t156617+1.0)*2.0))+t156634* \
                   (t156651-t156615*t156662*t156656*t156657*(t156651-c0f*log((t156616*(1.0/2.0))/(b1f*t156637+b3f*t156638+ \
                   b2f*c*t156635+b4f*t156639*t156596)+1.0)*(a1f*c*t156635+1.0)*2.0)+(Aa*t156615*t156662*log((1.0/2.0) \
                   /(Aa*(b1a*t156637+b3a*t156638+b2a*c*t156635+b4a*t156639*t156596))+1.0)*(t156656*t156657-1.0)*(a1a* \
                   c*t156635+1.0)*2.0)/d2fz0)+rho_a[index]*(t156612*t156615*(c0p*t156607*t156609*2.0-c0f*log((t156616* \
                   (1.0/2.0))/(b1f*t156594+b3f*t156595+b2f*c*t156592+b4f*t156596*t156597)+1.0)*(a1f*c*t156592+1.0)*2.0) \
                   -c0p*t156607*t156609*2.0))*(ccab4*t156670*t156671*t156698*(t156663*t156666*t156667*3.0+t156670*t156665* \
                   t156666*t156667*3.0+gcab*t156663*t156664*t156666*t156667*6.0)+ccab1*t156663*1.0/(t156692*t156692)* \
                   t156666*t156667*(1.0/2.0)-(ccab2*t156663*t156666*t156667*(1.0/2.0))/t156678+ccab2*t156663*t156690* \
                   t156664*t156666*t156684+ccab2*t156670*t156665*t156666*t156684*t156667*(1.0/2.0)+ccab2*t156663*t156664* \
                   t156684*t156667*t156687-ccab4*t156703*t156670*t156671*1.0/(t156683*t156683*t156683)*t156697*2.0-(ccab4* \
                   t156670*t156665*t156666*t156667*3.0)/t156683-ccab2*t156663*t156690*t156665*1.0/(t156678*t156678*t156678) \
                   *t156687*2.0+ccab3*gcab*t156712*t156663*t156708*t156665*t156666*(3.0/2.0)+ccab3*gcab*t156707*t156663* \
                   t156708*t156665*t156667*(3.0/2.0)+ccab4*t156703*t156670*t156664*t156665*t156666*t156698*2.0+ccab4* \
                   t156670*t156664*t156665*t156667*t156697*t156698*2.0+ccab3*gcab*t156663*t156708*t156664*t156665*(t156663* \
                   t156666*t156667*(3.0/2.0)+gcab*t156663*t156664*t156666*t156667*(3.0/2.0))-ccab1*gcab*t156663*t156664* \
                   1.0/(t156692*t156692*t156692)*t156666*t156667*(1.0/2.0)-(ccab3*gcab*t156663*t156664*t156666*t156667* \
                   (3.0/2.0))/t156675-ccab3*gcab*t156712*t156707*t156663*t156664*t156665*1.0/(t156675*t156675*t156675) \
                   *2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t156716 = 1.0/pow(rho_a[index],1.0/3.0);
                double t156717 = c*t156716;
                double t156718 = sqrt(t156717);
                double t156719 = pow(t156717,3.0/2.0);
                double t156720 = c*c;
                double t156721 = 1.0/pow(rho_a[index],2.0/3.0);
                double t156722 = 1.0/c0p;
                double t156723 = b1p*t156718;
                double t156724 = b3p*t156719;
                double t156725 = b4p*t156720*t156721;
                double t156726 = b2p*c*t156716;
                double t156727 = t156723+t156724+t156725+t156726;
                double t156728 = 1.0/t156727;
                double t156729 = t156722*t156728*(1.0/2.0);
                double t156730 = t156729+1.0;
                double t156731 = log(t156730);
                double t156732 = a1p*c*t156716;
                double t156733 = t156732+1.0;
                double t156734 = pow(2.0,1.0/3.0);
                double t156735 = t156734*2.0;
                double t156736 = t156735-2.0;
                double t156737 = two_13*2.0;
                double t156738 = t156737-2.0;
                double t156739 = 1.0/t156738;
                double t156740 = 1.0/c0f;
                double t156741 = 1.0/pow(rho_b[index],1.0/3.0);
                double t156742 = c*t156741;
                double t156743 = sqrt(t156742);
                double t156744 = pow(t156742,3.0/2.0);
                double t156745 = 1.0/pow(rho_b[index],2.0/3.0);
                double t156746 = b1p*t156743;
                double t156747 = b3p*t156744;
                double t156748 = b4p*t156720*t156745;
                double t156749 = b2p*c*t156741;
                double t156750 = t156746+t156747+t156748+t156749;
                double t156751 = 1.0/t156750;
                double t156752 = t156722*t156751*(1.0/2.0);
                double t156753 = t156752+1.0;
                double t156754 = log(t156753);
                double t156755 = a1p*c*t156741;
                double t156756 = t156755+1.0;
                double t156757 = c0p*t156754*t156756*2.0;
                double t156758 = rho_a[index]+rho_b[index];
                double t156759 = 1.0/pow(t156758,1.0/3.0);
                double t156760 = c*t156759;
                double t156761 = sqrt(t156760);
                double t156762 = pow(t156760,3.0/2.0);
                double t156763 = 1.0/pow(t156758,2.0/3.0);
                double t156764 = b1p*t156761;
                double t156765 = b3p*t156762;
                double t156766 = b4p*t156720*t156763;
                double t156767 = b2p*c*t156759;
                double t156768 = t156764+t156765+t156766+t156767;
                double t156769 = 1.0/t156768;
                double t156770 = t156722*t156769*(1.0/2.0);
                double t156771 = t156770+1.0;
                double t156772 = log(t156771);
                double t156773 = a1p*c*t156759;
                double t156774 = t156773+1.0;
                double t156775 = c0p*t156772*t156774*2.0;
                double t156776 = rho_a[index]-rho_b[index];
                double t156777 = t156776*t156776;
                double t156778 = 1.0/t156758;
                double t156779 = t156776*t156778;
                double t156780 = 1.0/(t156758*t156758*t156758*t156758);
                double t156781 = t156777*t156777;
                double t156782 = t156779+1.0;
                double t156783 = pow(t156782,4.0/3.0);
                double t156784 = -t156779+1.0;
                double t156785 = pow(t156784,4.0/3.0);
                double t156786 = t156783+t156785-2.0;
                double t156787 = gcab*gcab;
                double t156788 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t156789 = 1.0/pow(rho_a[index],8.0/3.0);
                double t156790 = gamma_aa[index]*t156789*(1.0/2.0);
                double t156791 = 1.0/pow(rho_b[index],8.0/3.0);
                double t156792 = gamma_bb[index]*t156791*(1.0/2.0);
                double t156793 = t156790+t156792;
                double t156794 = gcab*t156793;
                double t156795 = t156794+1.0;
                double t156796 = t156793*t156793;
                double t156797 = t156787*t156796;
                double t156798 = gcab*t156793*2.0;
                double t156799 = t156797+t156798+1.0;
                double t156800 = t156787*t156787;
                double t156817 = gcab*t156791*2.0;
                double t156818 = t156791*t156793*t156787*6.0;
                double t156819 = gcab*t156791*t156787*t156796*6.0;
                double t156820 = t156800*t156791*t156793*t156796*2.0;
                double t156801 = t156820+t156817+t156818+t156819;
                double t156802 = t156796*t156796;
                double t156822 = gcab*t156791*(3.0/2.0);
                double t156823 = t156791*t156793*t156787*3.0;
                double t156824 = gcab*t156791*t156787*t156796*(3.0/2.0);
                double t156803 = t156822+t156823+t156824;
                double t156804 = t156787*t156796*3.0;
                double t156805 = gcab*t156793*t156787*t156796;
                double t156806 = gcab*t156793*3.0;
                double t156807 = t156804+t156805+t156806+1.0;
                double t156814 = gcab*t156791;
                double t156815 = t156791*t156793*t156787;
                double t156808 = t156814+t156815;
                double t156809 = t156787*t156796*6.0;
                double t156810 = gcab*t156793*t156787*t156796*4.0;
                double t156811 = t156800*t156802;
                double t156812 = gcab*t156793*4.0;
                double t156813 = t156810+t156811+t156812+t156809+1.0;
                double t156816 = 1.0/(t156799*t156799);
                double t156821 = 1.0/(t156813*t156813);
                double t156825 = 1.0/(t156807*t156807);
                double t156826 = b1f*t156743;
                double t156827 = b3f*t156744;
                double t156828 = b4f*t156720*t156745;
                double t156829 = b2f*c*t156741;
                double t156830 = t156826+t156827+t156828+t156829;
                double t156831 = 1.0/t156830;
                double t156832 = t156740*t156831*(1.0/2.0);
                double t156833 = t156832+1.0;
                double t156834 = log(t156833);
                double t156835 = a1f*c*t156741;
                double t156836 = t156835+1.0;
                double t156837 = t156757-c0f*t156834*t156836*2.0;
                double t156838 = t156757-t156736*t156837*t156739;
                double t156839 = gcaa*gcaa;
                double t156840 = gamma_bb[index]*gamma_bb[index];
                double t156841 = t156839*t156839;
                double t156842 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t156843 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t156844 = gamma_bb[index]*gcaa*t156791;
                double t156845 = t156844+1.0;
                double t156846 = gamma_bb[index]*gcaa*t156791*2.0;
                double t156847 = t156840*t156839*t156788;
                double t156848 = t156846+t156847+1.0;
                double t156849 = gamma_bb[index]*gcaa*t156791*3.0;
                double t156850 = gamma_bb[index]*gcaa*t156840*t156843*t156839;
                double t156851 = t156840*t156839*t156788*3.0;
                double t156852 = t156850+t156851+t156849+1.0;
                double t156853 = t156840*t156840;
                double t156869 = gcaa*t156791*4.0;
                double t156870 = gamma_bb[index]*t156839*t156788*1.2E1;
                double t156871 = gcaa*t156840*t156843*t156839*1.2E1;
                double t156872 = gamma_bb[index]*t156840*t156841*t156842*4.0;
                double t156854 = t156870+t156871+t156872+t156869;
                double t156855 = gamma_bb[index]*gcaa*t156791*4.0;
                double t156856 = gamma_bb[index]*gcaa*t156840*t156843*t156839*4.0;
                double t156857 = t156840*t156839*t156788*6.0;
                double t156858 = t156841*t156842*t156853;
                double t156859 = t156855+t156856+t156857+t156858+1.0;
                double t156862 = gcaa*t156791*2.0;
                double t156863 = gamma_bb[index]*t156839*t156788*2.0;
                double t156860 = t156862+t156863;
                double t156861 = 1.0/(t156852*t156852);
                double t156864 = 1.0/(t156848*t156848);
                double t156865 = gcaa*t156791*3.0;
                double t156866 = gamma_bb[index]*t156839*t156788*6.0;
                double t156867 = gcaa*t156840*t156843*t156839*3.0;
                double t156868 = t156865+t156866+t156867;
                double t156873 = 1.0/(t156859*t156859);
                double t156874 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t156875 = 1.0/pow(t156874,1.0/3.0);
                double t156876 = 1.0/(omega*omega);
                double t156877 = pow(t156874,2.0/3.0);
                double t156878 = exp(-t156876*t156877);
                double t156879 = gx*gx;
                double t156880 = t156879*t156879;
                double t156881 = gamma_bb[index]*gx*t156791;
                double t156882 = t156881+1.0;
                double t156883 = gamma_bb[index]*gx*t156791*2.0;
                double t156884 = t156840*t156788*t156879;
                double t156885 = t156883+t156884+1.0;
                double t156886 = gamma_bb[index]*gx*t156791*3.0;
                double t156887 = gamma_bb[index]*gx*t156840*t156843*t156879;
                double t156888 = t156840*t156788*t156879*3.0;
                double t156889 = t156886+t156887+t156888+1.0;
                double t156905 = gx*t156791*4.0;
                double t156906 = gamma_bb[index]*t156788*t156879*1.2E1;
                double t156907 = gx*t156840*t156843*t156879*1.2E1;
                double t156908 = gamma_bb[index]*t156840*t156842*t156880*4.0;
                double t156890 = t156905+t156906+t156907+t156908;
                double t156891 = gamma_bb[index]*gx*t156791*4.0;
                double t156892 = gamma_bb[index]*gx*t156840*t156843*t156879*4.0;
                double t156893 = t156840*t156788*t156879*6.0;
                double t156894 = t156842*t156853*t156880;
                double t156895 = t156891+t156892+t156893+t156894+1.0;
                double t156898 = gx*t156791*2.0;
                double t156899 = gamma_bb[index]*t156788*t156879*2.0;
                double t156896 = t156898+t156899;
                double t156897 = 1.0/(t156889*t156889);
                double t156900 = 1.0/(t156885*t156885);
                double t156901 = gx*t156791*3.0;
                double t156902 = gamma_bb[index]*t156788*t156879*6.0;
                double t156903 = gx*t156840*t156843*t156879*3.0;
                double t156904 = t156901+t156902+t156903;
                double t156909 = 1.0/(t156895*t156895);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t156838+t156758*(t156775-t156780*t156781*t156739*t156786* \
                   (t156775-c0f*log((t156740*(1.0/2.0))/(b1f*t156761+b3f*t156762+b2f*c*t156759+b4f*t156720*t156763)+1.0) \
                   *(a1f*c*t156759+1.0)*2.0)+(Aa*t156739*t156786*log((1.0/2.0)/(Aa*(b1a*t156761+b3a*t156762+b2a*c*t156759+ \
                   b4a*t156720*t156763))+1.0)*(t156780*t156781-1.0)*(a1a*c*t156759+1.0)*2.0)/d2fz0)+rho_a[index]*(t156736* \
                   t156739*(c0p*t156731*t156733*2.0-c0f*log((t156740*(1.0/2.0))/(b1f*t156718+b3f*t156719+b2f*c*t156716+ \
                   b4f*t156720*t156721)+1.0)*(a1f*c*t156716+1.0)*2.0)-c0p*t156731*t156733*2.0))*(ccab1*1.0/(t156795*t156795) \
                   *t156787*t156788*(1.0/2.0)-(ccab2*t156787*t156788*(1.0/2.0))/t156799-ccab4*t156800*(t156801*t156801) \
                   *t156802*1.0/(t156813*t156813*t156813)*2.0-ccab2*(t156808*t156808)*t156787*t156796*1.0/(t156799*t156799* \
                   t156799)*2.0+ccab2*t156800*t156816*t156796*t156788*(1.0/2.0)+ccab4*t156800*t156802*t156821*(t156787* \
                   t156788*3.0+t156800*t156796*t156788*3.0+gcab*t156793*t156787*t156788*6.0)-(ccab4*t156800*t156796*t156788* \
                   3.0)/t156813+ccab2*t156816*t156808*t156791*t156793*t156787*2.0-(ccab3*gcab*t156793*t156787*t156788* \
                   (3.0/2.0))/t156807-ccab1*gcab*t156793*1.0/(t156795*t156795*t156795)*t156787*t156788*(1.0/2.0)-ccab3* \
                   gcab*(t156803*t156803)*1.0/(t156807*t156807*t156807)*t156793*t156787*t156796*2.0+ccab3*gcab*t156803* \
                   t156825*t156791*t156787*t156796*3.0+ccab4*t156800*t156801*t156821*t156791*t156793*t156796*4.0+ccab3* \
                   gcab*t156825*t156793*t156787*t156796*(t156787*t156788*(3.0/2.0)+gcab*t156793*t156787*t156788*(3.0/ \
                   2.0)))+rho_b[index]*t156838*(ccaa1*1.0/(t156845*t156845)*t156839*t156788*2.0-(ccaa2*t156839*t156788* \
                   2.0)/t156848+ccaa2*t156840*t156841*t156842*t156864*2.0-(ccaa4*t156840*t156841*t156842*1.2E1)/t156859+ \
                   ccaa4*t156841*t156842*t156853*t156873*(t156839*t156788*1.2E1+t156840*t156841*t156842*1.2E1+gamma_bb[index]* \
                   gcaa*t156843*t156839*2.4E1)-(ccaa3*gamma_bb[index]*gcaa*t156843*t156839*6.0)/t156852-ccaa1*gamma_bb[index]* \
                   gcaa*t156843*1.0/(t156845*t156845*t156845)*t156839*2.0-ccaa4*t156841*t156842*t156853*(t156854*t156854) \
                   *1.0/(t156859*t156859*t156859)*2.0-ccaa2*t156840*(t156860*t156860)*t156839*1.0/(t156848*t156848*t156848) \
                   *t156788*2.0+ccaa2*gamma_bb[index]*t156860*t156864*t156839*t156788*4.0+ccaa4*gamma_bb[index]*t156840* \
                   t156841*t156842*t156854*t156873*8.0+ccaa3*gcaa*t156840*t156843*t156861*t156839*t156868*6.0+ccaa3*gamma_bb[index]* \
                   gcaa*t156840*t156843*t156861*t156839*(t156839*t156788*6.0+gamma_bb[index]*gcaa*t156843*t156839*6.0) \
                   -ccaa3*gamma_bb[index]*gcaa*t156840*t156843*1.0/(t156852*t156852*t156852)*t156839*(t156868*t156868) \
                   *2.0)+c0*pow(rho_b[index],4.0/3.0)*(omega*t156875*(erf(pow(t156874,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t156875*(-t156878+(omega*omega)*1.0/pow(t156874,2.0/3.0)*(t156878-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*1.0/(t156882*t156882)*t156788*t156879*2.0-(cx2*t156788*t156879* \
                   2.0)/t156885+cx2*t156900*t156840*t156842*t156880*2.0-(cx4*t156840*t156842*t156880*1.2E1)/t156895+cx4* \
                   t156842*t156853*t156880*t156909*(t156788*t156879*1.2E1+t156840*t156842*t156880*1.2E1+gamma_bb[index]* \
                   gx*t156843*t156879*2.4E1)-cx1*gamma_bb[index]*gx*t156843*1.0/(t156882*t156882*t156882)*t156879*2.0- \
                   (cx3*gamma_bb[index]*gx*t156843*t156879*6.0)/t156889-cx2*t156840*1.0/(t156885*t156885*t156885)*t156788* \
                   (t156896*t156896)*t156879*2.0-cx4*t156842*t156853*t156880*(t156890*t156890)*1.0/(t156895*t156895*t156895) \
                   *2.0+cx2*gamma_bb[index]*t156900*t156788*t156896*t156879*4.0+cx4*gamma_bb[index]*t156840*t156842*t156880* \
                   t156890*t156909*8.0+cx3*gx*t156840*t156904*t156843*t156879*t156897*6.0+cx3*gamma_bb[index]*gx*t156840* \
                   t156843*t156879*t156897*(t156788*t156879*6.0+gamma_bb[index]*gx*t156843*t156879*6.0)-cx3*gamma_bb[index]* \
                   gx*t156840*(t156904*t156904)*t156843*t156879*1.0/(t156889*t156889*t156889)*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t157574 = 1.0/pow(rho_b[index],1.0/3.0);
                double t157575 = c*t157574;
                double t157576 = sqrt(t157575);
                double t157577 = pow(t157575,3.0/2.0);
                double t157578 = c*c;
                double t157579 = 1.0/pow(rho_b[index],2.0/3.0);
                double t157580 = 1.0/c0p;
                double t157581 = b1p*t157576;
                double t157582 = b3p*t157577;
                double t157583 = b4p*t157578*t157579;
                double t157584 = b2p*c*t157574;
                double t157585 = t157581+t157582+t157583+t157584;
                double t157586 = 1.0/t157585;
                double t157587 = t157580*t157586*(1.0/2.0);
                double t157588 = t157587+1.0;
                double t157589 = log(t157588);
                double t157590 = a1p*c*t157574;
                double t157591 = t157590+1.0;
                double t157592 = gcaa*gcaa;
                double t157593 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t157594 = 1.0/pow(rho_b[index],8.0/3.0);
                double t157595 = gamma_bb[index]*gamma_bb[index];
                double t157596 = t157592*t157592;
                double t157597 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t157598 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t157599 = gamma_bb[index]*gcaa*t157594;
                double t157600 = t157599+1.0;
                double t157601 = gamma_bb[index]*gcaa*t157594*2.0;
                double t157602 = t157592*t157593*t157595;
                double t157603 = t157601+t157602+1.0;
                double t157604 = gamma_bb[index]*gcaa*t157594*3.0;
                double t157605 = gamma_bb[index]*gcaa*t157592*t157595*t157598;
                double t157606 = t157592*t157593*t157595*3.0;
                double t157607 = t157604+t157605+t157606+1.0;
                double t157608 = t157595*t157595;
                double t157624 = gcaa*t157594*4.0;
                double t157625 = gamma_bb[index]*t157592*t157593*1.2E1;
                double t157626 = gcaa*t157592*t157595*t157598*1.2E1;
                double t157627 = gamma_bb[index]*t157595*t157596*t157597*4.0;
                double t157609 = t157624+t157625+t157626+t157627;
                double t157610 = gamma_bb[index]*gcaa*t157594*4.0;
                double t157611 = gamma_bb[index]*gcaa*t157592*t157595*t157598*4.0;
                double t157612 = t157592*t157593*t157595*6.0;
                double t157613 = t157608*t157596*t157597;
                double t157614 = t157610+t157611+t157612+t157613+1.0;
                double t157617 = gcaa*t157594*2.0;
                double t157618 = gamma_bb[index]*t157592*t157593*2.0;
                double t157615 = t157617+t157618;
                double t157616 = 1.0/(t157607*t157607);
                double t157619 = 1.0/(t157603*t157603);
                double t157620 = gcaa*t157594*3.0;
                double t157621 = gamma_bb[index]*t157592*t157593*6.0;
                double t157622 = gcaa*t157592*t157595*t157598*3.0;
                double t157623 = t157620+t157621+t157622;
                double t157628 = 1.0/(t157614*t157614);
                double t157629 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t157630 = 1.0/pow(t157629,1.0/3.0);
                double t157631 = 1.0/(omega*omega);
                double t157632 = pow(t157629,2.0/3.0);
                double t157633 = exp(-t157631*t157632);
                double t157634 = gx*gx;
                double t157635 = t157634*t157634;
                double t157636 = gamma_bb[index]*gx*t157594;
                double t157637 = t157636+1.0;
                double t157638 = gamma_bb[index]*gx*t157594*2.0;
                double t157639 = t157634*t157593*t157595;
                double t157640 = t157638+t157639+1.0;
                double t157641 = gamma_bb[index]*gx*t157594*3.0;
                double t157642 = gamma_bb[index]*gx*t157634*t157595*t157598;
                double t157643 = t157634*t157593*t157595*3.0;
                double t157644 = t157641+t157642+t157643+1.0;
                double t157660 = gx*t157594*4.0;
                double t157661 = gamma_bb[index]*t157634*t157593*1.2E1;
                double t157662 = gx*t157634*t157595*t157598*1.2E1;
                double t157663 = gamma_bb[index]*t157635*t157595*t157597*4.0;
                double t157645 = t157660+t157661+t157662+t157663;
                double t157646 = gamma_bb[index]*gx*t157594*4.0;
                double t157647 = gamma_bb[index]*gx*t157634*t157595*t157598*4.0;
                double t157648 = t157634*t157593*t157595*6.0;
                double t157649 = t157608*t157635*t157597;
                double t157650 = t157646+t157647+t157648+t157649+1.0;
                double t157653 = gx*t157594*2.0;
                double t157654 = gamma_bb[index]*t157634*t157593*2.0;
                double t157651 = t157653+t157654;
                double t157652 = 1.0/(t157644*t157644);
                double t157655 = 1.0/(t157640*t157640);
                double t157656 = gx*t157594*3.0;
                double t157657 = gamma_bb[index]*t157634*t157593*6.0;
                double t157658 = gx*t157634*t157595*t157598*3.0;
                double t157659 = t157656+t157657+t157658;
                double t157664 = 1.0/(t157650*t157650);
                v_gamma_bb_gamma_bb_[index] = rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t157576+b3f*t157577+b2f*c*t157574+b4f*t157578*t157579))+1.0)*(a1f*c*t157574+1.0)*2.0-c0p*t157591*t157589* \
                   2.0))/(two_13*2.0-2.0)+c0p*t157591*t157589*2.0)*(ccaa1*1.0/(t157600*t157600)*t157592*t157593*2.0-(ccaa2* \
                   t157592*t157593*2.0)/t157603+ccaa2*t157619*t157595*t157596*t157597*2.0-(ccaa4*t157595*t157596*t157597* \
                   1.2E1)/t157614+ccaa4*t157608*t157628*t157596*t157597*(t157592*t157593*1.2E1+t157595*t157596*t157597* \
                   1.2E1+gamma_bb[index]*gcaa*t157592*t157598*2.4E1)-ccaa1*gamma_bb[index]*gcaa*1.0/(t157600*t157600* \
                   t157600)*t157592*t157598*2.0-(ccaa3*gamma_bb[index]*gcaa*t157592*t157598*6.0)/t157607-ccaa2*1.0/(t157603* \
                   t157603*t157603)*(t157615*t157615)*t157592*t157593*t157595*2.0-ccaa4*1.0/(t157614*t157614*t157614) \
                   *t157608*(t157609*t157609)*t157596*t157597*2.0+ccaa2*gamma_bb[index]*t157615*t157592*t157619*t157593* \
                   4.0+ccaa4*gamma_bb[index]*t157609*t157628*t157595*t157596*t157597*8.0+ccaa3*gcaa*t157623*t157616*t157592* \
                   t157595*t157598*6.0+ccaa3*gamma_bb[index]*gcaa*t157616*t157592*t157595*t157598*(t157592*t157593*6.0+ \
                   gamma_bb[index]*gcaa*t157592*t157598*6.0)-ccaa3*gamma_bb[index]*gcaa*(t157623*t157623)*1.0/(t157607* \
                   t157607*t157607)*t157592*t157595*t157598*2.0)+c0*pow(rho_b[index],4.0/3.0)*(omega*t157630*(erf(pow(t157629,1.0/ \
                   3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t157630*(-t157633+(omega*omega)*1.0/ \
                   pow(t157629,2.0/3.0)*(t157633-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*t157634*1.0/(t157637*t157637) \
                   *t157593*2.0-(cx2*t157634*t157593*2.0)/t157640+cx2*t157635*t157655*t157595*t157597*2.0-(cx4*t157635* \
                   t157595*t157597*1.2E1)/t157650+cx4*t157608*t157635*t157664*t157597*(t157634*t157593*1.2E1+t157635* \
                   t157595*t157597*1.2E1+gamma_bb[index]*gx*t157634*t157598*2.4E1)-cx1*gamma_bb[index]*gx*t157634*1.0/ \
                   (t157637*t157637*t157637)*t157598*2.0-(cx3*gamma_bb[index]*gx*t157634*t157598*6.0)/t157644-cx2*1.0/ \
                   (t157640*t157640*t157640)*(t157651*t157651)*t157634*t157593*t157595*2.0-cx4*1.0/(t157650*t157650*t157650) \
                   *t157608*t157635*(t157645*t157645)*t157597*2.0+cx2*gamma_bb[index]*t157651*t157634*t157655*t157593* \
                   4.0+cx4*gamma_bb[index]*t157635*t157645*t157664*t157595*t157597*8.0+cx3*gx*t157634*t157652*t157595* \
                   t157659*t157598*6.0+cx3*gamma_bb[index]*gx*t157634*t157652*t157595*t157598*(t157634*t157593*6.0+gamma_bb[index]* \
                   gx*t157634*t157598*6.0)-cx3*gamma_bb[index]*gx*t157634*1.0/(t157644*t157644*t157644)*t157595*(t157659* \
                   t157659)*t157598*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

