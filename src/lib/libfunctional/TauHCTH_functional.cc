/**********************************************************
* TauHCTH_functional.cc: definitions for TauHCTH_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 31-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "TauHCTH_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

TauHCTH_Functional::TauHCTH_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "TauHCTH";
    description_ = "TauHCTH Power Series Pure Meta-GGA";
    citation_ = "A.D. Boese and N.C. Handy, J. Chem. Phys., 116(22), 9559, 2002";
    
    double X = 0.0000000000000000E+00;
    params_.push_back(make_pair("X",X));
    double C_k = 9.1155997446911918E+00;
    params_.push_back(make_pair("C_k",C_k));
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 6.5261999999999998E-01;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 6.3638000000000003E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.4080000000000000E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = -3.3755000000000002E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccaa0 = 4.1385000000000000E-01;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -9.0859999999999996E-01;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = -5.4899999999999997E-02;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = 1.7480000000000000E+00;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double cx0 = 1.1073400000000000E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = -1.0533999999999999E+00;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 6.3491000000000000E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = -2.5531000000000001E+00;
    params_.push_back(make_pair("cx3",cx3));
    double cxnl0 = 1.1000000000000001E-03;
    params_.push_back(make_pair("cxnl0",cxnl0));
    double cxnl1 = -3.0409999999999998E-01;
    params_.push_back(make_pair("cxnl1",cxnl1));
    double cxnl2 = 6.9542999999999999E+00;
    params_.push_back(make_pair("cxnl2",cxnl2));
    double cxnl3 = -7.2350000000000003E-01;
    params_.push_back(make_pair("cxnl3",cxnl3));

    is_gga_ = true;
    is_meta_ = true;

    //Required allocateion
    allocate();
}
TauHCTH_Functional::~TauHCTH_Functional()
{
}
void TauHCTH_Functional::computeRKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double c0 = params_[2].second;
    double two_13 = params_[3].second;
    double d2fz0 = params_[4].second;
    double c = params_[5].second;
    double Aa = params_[6].second;
    double a1a = params_[7].second;
    double b1a = params_[8].second;
    double b2a = params_[9].second;
    double b3a = params_[10].second;
    double b4a = params_[11].second;
    double c0p = params_[12].second;
    double a1p = params_[13].second;
    double b1p = params_[14].second;
    double b2p = params_[15].second;
    double b3p = params_[16].second;
    double b4p = params_[17].second;
    double c0f = params_[18].second;
    double a1f = params_[19].second;
    double b1f = params_[20].second;
    double b2f = params_[21].second;
    double b3f = params_[22].second;
    double b4f = params_[23].second;
    double gcab = params_[24].second;
    double gcaa = params_[25].second;
    double gx = params_[26].second;
    double ccab0 = params_[27].second;
    double ccab1 = params_[28].second;
    double ccab2 = params_[29].second;
    double ccab3 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cxnl0 = params_[39].second;
    double cxnl1 = params_[40].second;
    double cxnl2 = params_[41].second;
    double cxnl3 = params_[42].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t22229 = 1/pow(rho_a[index],1.0/3.0);
            double t22230 = c*t22229;
            double t22231 = sqrt(t22230);
            double t22232 = pow(t22230,3.0/2.0);
            double t22233 = c*c;
            double t22234 = 1/pow(rho_a[index],2.0/3.0);
            double t22235 = 1/c0p;
            double t22236 = b1p*t22231;
            double t22237 = b3p*t22232;
            double t22238 = b4p*t22233*t22234;
            double t22239 = b2p*c*t22229;
            double t22240 = t22236+t22237+t22238+t22239;
            double t22241 = 1/t22240;
            double t22242 = t22241*t22235*(1.0/2.0);
            double t22243 = t22242+1.0;
            double t22244 = log(t22243);
            double t22245 = a1p*c*t22229;
            double t22246 = t22245+1.0;
            double t22247 = rho_a[index]*2.0;
            double t22248 = 1/pow(t22247,1.0/3.0);
            double t22249 = c*t22248;
            double t22250 = 1/pow(rho_a[index],8.0/3.0);
            double t22251 = gamma_aa[index]*gamma_aa[index];
            double t22252 = gcab*gcab;
            double t22253 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t22254 = 1/pow(rho_a[index],1.6E1/3.0);
            double t22255 = pow(2.0,1.0/3.0);
            double t22256 = t22255*2.0;
            double t22257 = t22256-2.0;
            double t22258 = two_13*2.0;
            double t22259 = t22258-2.0;
            double t22260 = 1/t22259;
            double t22261 = 1/c0f;
            double t22262 = b1f*t22231;
            double t22263 = b3f*t22232;
            double t22264 = b4f*t22233*t22234;
            double t22265 = b2f*c*t22229;
            double t22266 = t22262+t22263+t22264+t22265;
            double t22267 = 1/t22266;
            double t22268 = t22261*t22267*(1.0/2.0);
            double t22269 = t22268+1.0;
            double t22270 = log(t22269);
            double t22271 = a1f*c*t22229;
            double t22272 = t22271+1.0;
            double t22273 = c0f*t22270*t22272*2.0;
            double t22274 = c0p*t22244*t22246*2.0;
            double t22275 = gcaa*gcaa;
            double t22276 = pow(rho_a[index],5.0/3.0);
            double t22277 = C_k*t22276;
            double t22278 = tau_a[index]*1.0E20;
            double t22279 = 1/tau_a[index];
            double t22280 = -t22277+t22278;
            double t22281 = ( (t22280 > 0.0) ?  1.0 : 0.0 ) ;
            double t22282 = C_k*t22281*t22276*t22279;
            double t22283 = t22277-t22278;
            double t22284 = ( (t22283 > 0.0) ?  1.0 : 0.0 ) ;
            double t22285 = t22284*1.0E20;
            double t22286 = t22282+t22285-1.0;
            double t22287 = t22286*t22286;
            double t22288 = t22282+t22285+1.0;
            double t22289 = t22287*t22287;
            double t22290 = gx*gx;
            double t22291 = gamma_aa[index]*gx*t22250;
            double t22292 = t22291+1.0;
            double t22293 = 1/t22292;
            double t22294 = gamma_aa[index]*gx*t22250*3.0;
            double t22295 = gamma_aa[index]*gx*t22251*t22253*t22290;
            double t22296 = t22251*t22254*t22290*3.0;
            double t22297 = t22294+t22295+t22296+1.0;
            double t22298 = 1/t22297;
            double t22299 = gamma_aa[index]*gx*t22250*2.0;
            double t22300 = t22251*t22254*t22290;
            double t22301 = t22300+t22299+1.0;
            double t22302 = 1/t22301;
            functional_[index] = (rho_a[index]*(t22274+t22260*t22257*(t22273-c0p*t22244*t22246*2.0))*2.0-c0p* \
               rho_a[index]*log((t22235*(1.0/2.0))/(b1p*sqrt(t22249)+b3p*pow(t22249,3.0/2.0)+b4p*t22233*1/pow(t22247,2.0/ \
               3.0)+b2p*c*t22248)+1.0)*(a1p*c*t22248+1.0)*4.0)*(ccab0+(ccab2*t22251*t22252*t22254)/(gamma_aa[index]* \
               gcab*t22250*2.0+t22251*t22252*t22254+1.0)+(ccab1*gamma_aa[index]*gcab*t22250)/(gamma_aa[index]*gcab* \
               t22250+1.0)+(ccab3*gamma_aa[index]*gcab*t22251*t22252*t22253)/(gamma_aa[index]*gcab*t22250*3.0+t22251* \
               t22252*t22254*3.0+gamma_aa[index]*gcab*t22251*t22252*t22253+1.0))-rho_a[index]*(t22274+t22260*t22257* \
               (t22273-t22274))*(ccaa0+(ccaa2*t22251*t22254*t22275)/(gamma_aa[index]*gcaa*t22250*2.0+t22251*t22254* \
               t22275+1.0)+(ccaa1*gamma_aa[index]*gcaa*t22250)/(gamma_aa[index]*gcaa*t22250+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t22251*t22253*t22275)/(gamma_aa[index]*gcaa*t22250*3.0+t22251*t22254*t22275*3.0+gamma_aa[index]* \
               gcaa*t22251*t22253*t22275+1.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cx0+(t22286/t22288-t22286* \
               t22287*1/(t22288*t22288*t22288)*2.0+t22286*1/(t22288*t22288*t22288*t22288*t22288)*t22289)*(cxnl0+cxnl1* \
               gamma_aa[index]*gx*t22250*t22293+cxnl2*t22302*t22251*t22254*t22290+cxnl3*gamma_aa[index]*gx*t22251* \
               t22253*t22290*t22298)+cx1*gamma_aa[index]*gx*t22250*t22293+cx2*t22302*t22251*t22254*t22290+cx3*gamma_aa[index]* \
               gx*t22251*t22253*t22290*t22298)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t22304 = 1/pow(rho_a[index],8.0/3.0);
            double t22305 = gamma_aa[index]*gamma_aa[index];
            double t22306 = gcab*gcab;
            double t22307 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t22308 = 1/pow(rho_a[index],1.6E1/3.0);
            double t22309 = rho_a[index]*2.0;
            double t22310 = 1/pow(t22309,1.0/3.0);
            double t22311 = c*t22310;
            double t22312 = sqrt(t22311);
            double t22313 = b1p*t22312;
            double t22314 = pow(t22311,3.0/2.0);
            double t22315 = b3p*t22314;
            double t22316 = b2p*c*t22310;
            double t22317 = c*c;
            double t22318 = 1/pow(t22309,2.0/3.0);
            double t22319 = b4p*t22317*t22318;
            double t22320 = t22313+t22315+t22316+t22319;
            double t22321 = 1/pow(t22309,4.0/3.0);
            double t22322 = 1/c0p;
            double t22323 = 1/t22320;
            double t22324 = t22322*t22323*(1.0/2.0);
            double t22325 = t22324+1.0;
            double t22326 = 1/pow(rho_a[index],1.0/3.0);
            double t22327 = c*t22326;
            double t22328 = sqrt(t22327);
            double t22329 = b1f*t22328;
            double t22330 = pow(t22327,3.0/2.0);
            double t22331 = b3f*t22330;
            double t22332 = 1/pow(rho_a[index],2.0/3.0);
            double t22333 = b4f*t22332*t22317;
            double t22334 = b2f*c*t22326;
            double t22335 = t22331+t22333+t22334+t22329;
            double t22336 = 1/pow(rho_a[index],4.0/3.0);
            double t22337 = b1p*t22328;
            double t22338 = b3p*t22330;
            double t22339 = b4p*t22332*t22317;
            double t22340 = b2p*c*t22326;
            double t22341 = t22340+t22337+t22338+t22339;
            double t22342 = 1/pow(rho_a[index],5.0/3.0);
            double t22343 = 1/sqrt(t22327);
            double t22344 = 1/c0f;
            double t22345 = 1/t22335;
            double t22346 = t22344*t22345*(1.0/2.0);
            double t22347 = t22346+1.0;
            double t22348 = 1/t22341;
            double t22349 = t22322*t22348*(1.0/2.0);
            double t22350 = t22349+1.0;
            double t22351 = a1p*c*t22326;
            double t22352 = t22351+1.0;
            double t22353 = 1/t22350;
            double t22354 = 1/(t22341*t22341);
            double t22355 = b4p*t22342*t22317*(2.0/3.0);
            double t22356 = b2p*c*t22336*(1.0/3.0);
            double t22357 = b1p*c*t22343*t22336*(1.0/6.0);
            double t22358 = b3p*c*t22336*t22328*(1.0/2.0);
            double t22359 = t22355+t22356+t22357+t22358;
            double t22360 = t22352*t22353*t22354*t22359;
            double t22361 = log(t22350);
            double t22362 = log(t22325);
            double t22363 = a1p*c*t22310;
            double t22364 = t22363+1.0;
            double t22365 = pow(2.0,1.0/3.0);
            double t22366 = t22365*2.0;
            double t22367 = t22366-2.0;
            double t22368 = two_13*2.0;
            double t22369 = t22368-2.0;
            double t22370 = 1/t22369;
            double t22371 = log(t22347);
            double t22372 = a1f*c*t22326;
            double t22373 = t22372+1.0;
            double t22374 = c0f*t22371*t22373*2.0;
            double t22376 = c0p*t22352*t22361*2.0;
            double t22375 = t22374-t22376;
            double t22377 = gcaa*gcaa;
            double t22378 = pow(rho_a[index],5.0/3.0);
            double t22379 = C_k*t22378;
            double t22380 = tau_a[index]*1.0E20;
            double t22381 = 1/tau_a[index];
            double t22382 = t22380-t22379;
            double t22383 = ( (t22382 > 0.0) ?  1.0 : 0.0 ) ;
            double t22384 = C_k*t22381*t22383*t22378;
            double t22385 = -t22380+t22379;
            double t22386 = ( (t22385 > 0.0) ?  1.0 : 0.0 ) ;
            double t22387 = t22386*1.0E20;
            double t22388 = t22384+t22387-1.0;
            double t22389 = t22388*t22388;
            double t22390 = t22384+t22387+1.0;
            double t22391 = t22389*t22389;
            double t22392 = gx*gx;
            double t22393 = gamma_aa[index]*gx*t22304;
            double t22394 = t22393+1.0;
            double t22395 = 1/t22394;
            double t22396 = gamma_aa[index]*gx*t22304*3.0;
            double t22397 = gamma_aa[index]*gx*t22305*t22307*t22392;
            double t22398 = t22305*t22308*t22392*3.0;
            double t22399 = t22396+t22397+t22398+1.0;
            double t22400 = 1/t22399;
            double t22401 = gamma_aa[index]*gx*t22304*2.0;
            double t22402 = t22305*t22308*t22392;
            double t22403 = t22401+t22402+1.0;
            double t22404 = 1/t22403;
            double t22405 = 1/t22390;
            double t22406 = 1/(t22390*t22390*t22390);
            double t22407 = 1/(t22390*t22390*t22390*t22390*t22390);
            double t22408 = t22407*t22391*t22388;
            double t22409 = 1/pow(rho_a[index],1.9E1/3.0);
            double t22410 = 1/pow(rho_a[index],1.1E1/3.0);
            double t22411 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t22412 = cxnl1*gamma_aa[index]*gx*t22304*t22395;
            double t22413 = cxnl3*gamma_aa[index]*gx*t22400*t22305*t22307*t22392;
            double t22414 = cxnl2*t22305*t22404*t22308*t22392;
            double t22415 = cxnl0+t22412+t22413+t22414;
            double t22416 = 0.0 ;
            double t22417 = pow(rho_a[index],2.0/3.0);
            double t22418 = C_k*t22416*t22417*(5.0E20/3.0);
            double t22419 = C_k*C_k;
            double t22420 = pow(rho_a[index],7.0/3.0);
            double t22421 = C_k*t22381*t22417*t22383*(5.0/3.0);
            double t22423 = t22420*t22416*t22381*t22419*(5.0/3.0);
            double t22422 = t22421-t22423+t22418;
            double t22424 = 1/(t22394*t22394);
            double t22425 = gamma_aa[index]*gx*t22410*8.0;
            double t22426 = gamma_aa[index]*gx*t22411*t22305*t22392*8.0;
            double t22427 = t22305*t22409*t22392*1.6E1;
            double t22428 = t22425+t22426+t22427;
            double t22429 = 1/(t22399*t22399);
            double t22430 = gamma_aa[index]*gx*t22410*(1.6E1/3.0);
            double t22431 = t22305*t22409*t22392*(1.6E1/3.0);
            double t22432 = t22430+t22431;
            double t22433 = 1/(t22403*t22403);
            double t22434 = t22405*t22388;
            double t22435 = t22434+t22408-t22406*t22388*t22389*2.0;
            double t22436 = t22370*t22375*t22367;
            double t22437 = t22436+t22376;
            double t22438 = gamma_aa[index]*gcab*t22304;
            double t22439 = t22438+1.0;
            double t22440 = 1/t22439;
            double t22441 = gamma_aa[index]*gcab*t22304*3.0;
            double t22442 = gamma_aa[index]*gcab*t22305*t22306*t22307;
            double t22443 = t22305*t22306*t22308*3.0;
            double t22444 = t22441+t22442+t22443+1.0;
            double t22445 = 1/t22444;
            double t22446 = gamma_aa[index]*gcab*t22304*2.0;
            double t22447 = t22305*t22306*t22308;
            double t22448 = t22446+t22447+1.0;
            double t22449 = 1/t22448;
            double t22450 = gamma_aa[index]*gcaa*t22304;
            double t22451 = t22450+1.0;
            double t22452 = 1/t22451;
            double t22453 = gamma_aa[index]*gcaa*t22304*3.0;
            double t22454 = gamma_aa[index]*gcaa*t22305*t22307*t22377;
            double t22455 = t22305*t22308*t22377*3.0;
            double t22456 = t22453+t22454+t22455+1.0;
            double t22457 = 1/t22456;
            double t22458 = gamma_aa[index]*gcaa*t22304*2.0;
            double t22459 = t22305*t22308*t22377;
            double t22460 = t22458+t22459+1.0;
            double t22461 = 1/t22460;
            double t22462 = 1/t22347;
            double t22463 = 1/(t22335*t22335);
            double t22464 = b4f*t22342*t22317*(2.0/3.0);
            double t22465 = b2f*c*t22336*(1.0/3.0);
            double t22466 = b1f*c*t22343*t22336*(1.0/6.0);
            double t22467 = b3f*c*t22336*t22328*(1.0/2.0);
            double t22468 = t22464+t22465+t22466+t22467;
            double t22469 = a1f*c*c0f*t22371*t22336*(2.0/3.0);
            double t22470 = a1p*c*c0p*t22361*t22336*(2.0/3.0);
            double t22471 = ccaa1*gamma_aa[index]*gcaa*t22304*t22452;
            double t22472 = ccaa3*gamma_aa[index]*gcaa*t22305*t22307*t22457*t22377;
            double t22473 = ccaa2*t22305*t22308*t22461*t22377;
            double t22474 = ccaa0+t22471+t22472+t22473;
            v_rho_a_[index] = -(ccab0+ccab1*gamma_aa[index]*gcab*t22304*t22440+ccab2*t22305*t22306*t22308*t22449+ \
               ccab3*gamma_aa[index]*gcab*t22305*t22306*t22307*t22445)*(rho_a[index]*((1/(t22320*t22320)*t22364*(b4p* \
               t22317*1/pow(t22309,5.0/3.0)*(2.0/3.0)+b2p*c*t22321*(1.0/3.0)+b3p*c*t22312*t22321*(1.0/2.0)+b1p*c* \
               1/sqrt(t22311)*t22321*(1.0/6.0)))/t22325-a1p*c*c0p*t22321*t22362*(2.0/3.0))*2.0+rho_a[index]*(-t22360+ \
               t22470+t22370*t22367*(t22360+t22469-t22462*t22373*t22463*t22468-a1p*c*c0p*t22361*t22336*(2.0/3.0)) \
               )-c0p*t22352*t22361*2.0+c0p*t22362*t22364*2.0-t22370*t22375*t22367)-t22437*t22474-(c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+t22415*t22435+cx1*gamma_aa[index]*gx*t22304*t22395+cx2*t22305*t22404*t22308*t22392+cx3*gamma_aa[index]* \
               gx*t22400*t22305*t22307*t22392)*(4.0/3.0)-c0*pow(rho_a[index],4.0/3.0)*(t22435*(cxnl1*gamma_aa[index]* \
               gx*t22410*t22395*(8.0/3.0)+cxnl2*t22305*t22404*t22409*t22392*(1.6E1/3.0)-cxnl1*t22305*t22424*t22409* \
               t22392*(8.0/3.0)-cxnl2*t22305*t22432*t22433*t22308*t22392+cxnl3*gamma_aa[index]*gx*t22400*t22411*t22305* \
               t22392*8.0-cxnl3*gamma_aa[index]*gx*t22305*t22307*t22392*t22428*t22429)-t22415*(t22422*t22405-t22422* \
               1/(t22390*t22390)*t22388+t22422*t22407*t22391*5.0-t22422*t22406*t22389*6.0-t22422*1/(t22390*t22390* \
               t22390*t22390*t22390*t22390)*t22391*t22388*5.0+t22422*1/(t22390*t22390*t22390*t22390)*t22388*t22389* \
               6.0)+cx1*gamma_aa[index]*gx*t22410*t22395*(8.0/3.0)-cx1*t22305*t22424*t22409*t22392*(8.0/3.0)+cx2* \
               t22305*t22404*t22409*t22392*(1.6E1/3.0)-cx2*t22305*t22432*t22433*t22308*t22392+cx3*gamma_aa[index]* \
               gx*t22400*t22411*t22305*t22392*8.0-cx3*gamma_aa[index]*gx*t22305*t22307*t22392*t22428*t22429))*(X- \
               1.0)-(rho_a[index]*t22437*2.0-c0p*rho_a[index]*t22362*t22364*4.0)*(ccab1*gamma_aa[index]*gcab*t22410* \
               t22440*(4.0/3.0)+ccab2*t22305*t22306*t22409*t22449*(8.0/3.0)-ccab1*t22305*t22306*t22409*1/(t22439* \
               t22439)*(4.0/3.0)-ccab2*t22305*t22306*t22308*1/(t22448*t22448)*(gamma_aa[index]*gcab*t22410*(8.0/3.0) \
               +t22305*t22306*t22409*(8.0/3.0))+ccab3*gamma_aa[index]*gcab*t22411*t22305*t22306*t22445*4.0-ccab3* \
               gamma_aa[index]*gcab*t22305*t22306*t22307*1/(t22444*t22444)*(gamma_aa[index]*gcab*t22410*4.0+t22305* \
               t22306*t22409*8.0+gamma_aa[index]*gcab*t22411*t22305*t22306*4.0))+rho_a[index]*t22474*(-t22360+t22470+ \
               t22370*t22367*(t22360-t22470+t22469-t22462*t22373*t22463*t22468))+rho_a[index]*t22437*(ccaa1*gamma_aa[index]* \
               gcaa*t22410*t22452*(8.0/3.0)+ccaa2*t22305*t22461*t22409*t22377*(1.6E1/3.0)-ccaa1*t22305*1/(t22451* \
               t22451)*t22409*t22377*(8.0/3.0)-ccaa2*t22305*1/(t22460*t22460)*t22308*t22377*(gamma_aa[index]*gcaa* \
               t22410*(1.6E1/3.0)+t22305*t22409*t22377*(1.6E1/3.0))+ccaa3*gamma_aa[index]*gcaa*t22411*t22305*t22457* \
               t22377*8.0-ccaa3*gamma_aa[index]*gcaa*t22305*t22307*1/(t22456*t22456)*t22377*(gamma_aa[index]*gcaa* \
               t22410*8.0+t22305*t22409*t22377*1.6E1+gamma_aa[index]*gcaa*t22411*t22305*t22377*8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t22476 = 1/pow(rho_a[index],1.0/3.0);
                double t22477 = c*t22476;
                double t22478 = sqrt(t22477);
                double t22479 = pow(t22477,3.0/2.0);
                double t22480 = c*c;
                double t22481 = 1/pow(rho_a[index],2.0/3.0);
                double t22482 = 1/c0p;
                double t22483 = b1p*t22478;
                double t22484 = b3p*t22479;
                double t22485 = b4p*t22480*t22481;
                double t22486 = b2p*c*t22476;
                double t22487 = t22483+t22484+t22485+t22486;
                double t22488 = 1/t22487;
                double t22489 = t22482*t22488*(1.0/2.0);
                double t22490 = t22489+1.0;
                double t22491 = log(t22490);
                double t22492 = a1p*c*t22476;
                double t22493 = t22492+1.0;
                double t22494 = rho_a[index]*2.0;
                double t22495 = 1/pow(t22494,1.0/3.0);
                double t22496 = c*t22495;
                double t22497 = 1/pow(rho_a[index],8.0/3.0);
                double t22498 = gcab*gcab;
                double t22499 = 1/pow(rho_a[index],1.6E1/3.0);
                double t22500 = gamma_aa[index]*gamma_aa[index];
                double t22501 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t22502 = gamma_aa[index]*gcab*t22497;
                double t22503 = t22502+1.0;
                double t22504 = gamma_aa[index]*gcab*t22497*3.0;
                double t22505 = gamma_aa[index]*gcab*t22500*t22501*t22498;
                double t22506 = t22500*t22498*t22499*3.0;
                double t22507 = t22504+t22505+t22506+1.0;
                double t22508 = gamma_aa[index]*gcab*t22497*2.0;
                double t22509 = t22500*t22498*t22499;
                double t22510 = t22508+t22509+1.0;
                double t22511 = pow(2.0,1.0/3.0);
                double t22512 = t22511*2.0;
                double t22513 = t22512-2.0;
                double t22514 = two_13*2.0;
                double t22515 = t22514-2.0;
                double t22516 = 1/t22515;
                double t22517 = 1/c0f;
                double t22518 = b1f*t22478;
                double t22519 = b3f*t22479;
                double t22520 = b4f*t22480*t22481;
                double t22521 = b2f*c*t22476;
                double t22522 = t22520+t22521+t22518+t22519;
                double t22523 = 1/t22522;
                double t22524 = t22523*t22517*(1.0/2.0);
                double t22525 = t22524+1.0;
                double t22526 = log(t22525);
                double t22527 = a1f*c*t22476;
                double t22528 = t22527+1.0;
                double t22529 = c0f*t22526*t22528*2.0;
                double t22530 = c0p*t22491*t22493*2.0;
                double t22531 = gcaa*gcaa;
                double t22532 = gamma_aa[index]*gcaa*t22497;
                double t22533 = t22532+1.0;
                double t22534 = gamma_aa[index]*gcaa*t22497*3.0;
                double t22535 = gamma_aa[index]*gcaa*t22500*t22501*t22531;
                double t22536 = t22500*t22531*t22499*3.0;
                double t22537 = t22534+t22535+t22536+1.0;
                double t22538 = gamma_aa[index]*gcaa*t22497*2.0;
                double t22539 = t22500*t22531*t22499;
                double t22540 = t22538+t22539+1.0;
                double t22541 = pow(rho_a[index],5.0/3.0);
                double t22542 = C_k*t22541;
                double t22543 = tau_a[index]*1.0E20;
                double t22544 = 1/tau_a[index];
                double t22545 = -t22542+t22543;
                double t22546 = ( (t22545 > 0.0) ?  1.0 : 0.0 ) ;
                double t22547 = C_k*t22541*t22544*t22546;
                double t22548 = t22542-t22543;
                double t22549 = ( (t22548 > 0.0) ?  1.0 : 0.0 ) ;
                double t22550 = t22549*1.0E20;
                double t22551 = t22550+t22547-1.0;
                double t22552 = t22551*t22551;
                double t22553 = t22550+t22547+1.0;
                double t22554 = t22552*t22552;
                double t22555 = gx*gx;
                double t22556 = gamma_aa[index]*gx*t22497;
                double t22557 = t22556+1.0;
                double t22558 = gamma_aa[index]*gx*t22497*3.0;
                double t22559 = gamma_aa[index]*gx*t22500*t22501*t22555;
                double t22560 = t22500*t22555*t22499*3.0;
                double t22561 = t22560+t22558+t22559+1.0;
                double t22562 = gamma_aa[index]*gx*t22497*2.0;
                double t22563 = t22500*t22555*t22499;
                double t22564 = t22562+t22563+1.0;
                double t22565 = 1/t22557;
                double t22566 = 1/t22564;
                double t22567 = 1/t22561;
                double t22568 = 1/(t22557*t22557);
                double t22569 = gx*t22497*3.0;
                double t22570 = gamma_aa[index]*t22555*t22499*6.0;
                double t22571 = gx*t22500*t22501*t22555*3.0;
                double t22572 = t22570+t22571+t22569;
                double t22573 = 1/(t22561*t22561);
                double t22574 = gx*t22497*2.0;
                double t22575 = gamma_aa[index]*t22555*t22499*2.0;
                double t22576 = t22574+t22575;
                double t22577 = 1/(t22564*t22564);
                v_gamma_aa_[index] = (rho_a[index]*(t22530+t22513*t22516*(t22529-c0p*t22491*t22493*2.0))*2.0-c0p* \
                   rho_a[index]*log((t22482*(1.0/2.0))/(b1p*sqrt(t22496)+b3p*pow(t22496,3.0/2.0)+b4p*t22480*1/pow(t22494,2.0/ \
                   3.0)+b2p*c*t22495)+1.0)*(a1p*c*t22495+1.0)*4.0)*((ccab1*gcab*t22497*(1.0/2.0))/t22503+(ccab2*gamma_aa[index]* \
                   t22498*t22499)/t22510-ccab1*gamma_aa[index]*1/(t22503*t22503)*t22498*t22499*(1.0/2.0)-ccab2*t22500* \
                   1/(t22510*t22510)*t22498*t22499*(gcab*t22497+gamma_aa[index]*t22498*t22499)+(ccab3*gcab*t22500*t22501* \
                   t22498*(3.0/2.0))/t22507-ccab3*gamma_aa[index]*gcab*t22500*t22501*1/(t22507*t22507)*t22498*(gcab*t22497* \
                   (3.0/2.0)+gamma_aa[index]*t22498*t22499*3.0+gcab*t22500*t22501*t22498*(3.0/2.0)))*2.0-rho_a[index]* \
                   (t22530-t22513*t22516*(t22530-t22529))*((ccaa1*gcaa*t22497)/t22533+(ccaa2*gamma_aa[index]*t22531*t22499* \
                   2.0)/t22540-ccaa1*gamma_aa[index]*t22531*1/(t22533*t22533)*t22499-ccaa2*t22500*t22531*1/(t22540*t22540) \
                   *t22499*(gcaa*t22497*2.0+gamma_aa[index]*t22531*t22499*2.0)+(ccaa3*gcaa*t22500*t22501*t22531*3.0)/ \
                   t22537-ccaa3*gamma_aa[index]*gcaa*t22500*t22501*t22531*1/(t22537*t22537)*(gcaa*t22497*3.0+gamma_aa[index]* \
                   t22531*t22499*6.0+gcaa*t22500*t22501*t22531*3.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((t22551/ \
                   t22553-t22551*t22552*1/(t22553*t22553*t22553)*2.0+t22551*1/(t22553*t22553*t22553*t22553*t22553)*t22554) \
                   *(cxnl1*gx*t22565*t22497+cxnl2*gamma_aa[index]*t22555*t22566*t22499*2.0-cxnl1*gamma_aa[index]*t22555* \
                   t22568*t22499-cxnl2*t22500*t22555*t22576*t22577*t22499+cxnl3*gx*t22500*t22501*t22555*t22567*3.0-cxnl3* \
                   gamma_aa[index]*gx*t22500*t22501*t22572*t22555*t22573)+cx1*gx*t22565*t22497-cx1*gamma_aa[index]*t22555* \
                   t22568*t22499+cx2*gamma_aa[index]*t22555*t22566*t22499*2.0-cx2*t22500*t22555*t22576*t22577*t22499+ \
                   cx3*gx*t22500*t22501*t22555*t22567*3.0-cx3*gamma_aa[index]*gx*t22500*t22501*t22572*t22555*t22573)* \
                   2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                double t22579 = 1/pow(rho_a[index],8.0/3.0);
                double t22580 = gamma_aa[index]*gamma_aa[index];
                double t22581 = gx*gx;
                double t22582 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t22583 = 1/pow(rho_a[index],1.6E1/3.0);
                double t22584 = pow(rho_a[index],5.0/3.0);
                double t22585 = tau_a[index]*1.0E20;
                double t22588 = C_k*t22584;
                double t22586 = t22585-t22588;
                double t22587 = 0.0 ;
                double t22589 = 1/tau_a[index];
                double t22590 = ( (t22586 > 0.0) ?  1.0 : 0.0 ) ;
                double t22591 = t22587*1.0E40;
                double t22592 = 1/(tau_a[index]*tau_a[index]);
                double t22593 = C_k*t22590*t22592*t22584;
                double t22600 = C_k*t22584*t22587*t22589*1.0E20;
                double t22594 = -t22600+t22591+t22593;
                double t22595 = -t22585+t22588;
                double t22596 = ( (t22595 > 0.0) ?  1.0 : 0.0 ) ;
                double t22597 = t22596*1.0E20;
                double t22598 = C_k*t22590*t22584*t22589;
                double t22599 = t22597+t22598+1.0;
                double t22601 = t22597+t22598-1.0;
                double t22602 = t22601*t22601;
                double t22603 = t22602*t22602;
                double t22604 = pow(rho_a[index],4.0/3.0);
                double t22605 = gamma_aa[index]*gx*t22579;
                double t22606 = t22605+1.0;
                double t22607 = 1/t22606;
                double t22608 = cxnl1*gamma_aa[index]*gx*t22607*t22579;
                double t22609 = gamma_aa[index]*gx*t22579*3.0;
                double t22610 = gamma_aa[index]*gx*t22580*t22581*t22582;
                double t22611 = t22580*t22581*t22583*3.0;
                double t22612 = t22610+t22611+t22609+1.0;
                double t22613 = 1/t22612;
                double t22614 = cxnl3*gamma_aa[index]*gx*t22613*t22580*t22581*t22582;
                double t22615 = gamma_aa[index]*gx*t22579*2.0;
                double t22616 = t22580*t22581*t22583;
                double t22617 = t22615+t22616+1.0;
                double t22618 = 1/t22617;
                double t22619 = cxnl2*t22580*t22581*t22618*t22583;
                double t22620 = cxnl0+t22614+t22608+t22619;
                double t22621 = 1/t22599;
                double t22622 = 1/(t22599*t22599*t22599);
                double t22623 = 1/(t22599*t22599*t22599*t22599);
                double t22624 = 1/(t22599*t22599*t22599*t22599*t22599);
                double t22625 = 1/(t22599*t22599*t22599*t22599*t22599*t22599);
                double t22626 = 1/(t22599*t22599);
                v_tau_a_[index] = (c0*t22620*t22604*(t22621*t22587*1.0E40-t22602*t22622*t22587*6.0E40-t22601*t22626* \
                   t22587*1.0E40+t22603*t22624*t22587*5.0E40+t22601*t22602*t22623*t22587*6.0E40-t22601*t22603*t22625* \
                   t22587*5.0E40)+c0*t22620*t22604*(t22621*t22594-t22602*t22622*t22594*6.0-t22601*t22626*t22594+t22603* \
                   t22624*t22594*5.0+t22601*t22602*t22623*t22594*6.0-t22601*t22603*t22625*t22594*5.0))*(X-1.0);
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t22628 = rho_a[index]*2.0;
            double t22629 = 1/pow(t22628,1.0/3.0);
            double t22630 = c*t22629;
            double t22631 = sqrt(t22630);
            double t22632 = b1p*t22631;
            double t22633 = pow(t22630,3.0/2.0);
            double t22634 = b3p*t22633;
            double t22635 = b2p*c*t22629;
            double t22636 = c*c;
            double t22637 = 1/pow(t22628,2.0/3.0);
            double t22638 = b4p*t22636*t22637;
            double t22639 = t22632+t22634+t22635+t22638;
            double t22640 = 1/pow(t22628,8.0/3.0);
            double t22641 = 1/pow(t22628,7.0/3.0);
            double t22642 = 1/sqrt(t22630);
            double t22643 = 1/c0p;
            double t22644 = 1/t22639;
            double t22645 = t22643*t22644*(1.0/2.0);
            double t22646 = t22645+1.0;
            double t22647 = 1/t22646;
            double t22648 = a1p*c*t22629;
            double t22649 = t22648+1.0;
            double t22650 = 1/pow(t22628,4.0/3.0);
            double t22652 = b2p*c*t22650*(1.0/3.0);
            double t22653 = 1/pow(t22628,5.0/3.0);
            double t22654 = b4p*t22653*t22636*(2.0/3.0);
            double t22655 = b1p*c*t22650*t22642*(1.0/6.0);
            double t22656 = b3p*c*t22631*t22650*(1.0/2.0);
            double t22651 = t22652+t22654+t22655+t22656;
            double t22657 = t22651*t22651;
            double t22658 = 1/(t22639*t22639);
            double t22659 = log(t22646);
            double t22660 = 1/pow(rho_a[index],8.0/3.0);
            double t22661 = gamma_aa[index]*gamma_aa[index];
            double t22662 = gcab*gcab;
            double t22663 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t22664 = 1/pow(rho_a[index],1.6E1/3.0);
            double t22665 = two_13*2.0;
            double t22666 = t22665-2.0;
            double t22667 = 1/t22666;
            double t22668 = 1/pow(rho_a[index],1.0/3.0);
            double t22669 = c*t22668;
            double t22670 = sqrt(t22669);
            double t22671 = b1f*t22670;
            double t22672 = pow(t22669,3.0/2.0);
            double t22673 = b3f*t22672;
            double t22674 = 1/pow(rho_a[index],2.0/3.0);
            double t22675 = b4f*t22636*t22674;
            double t22676 = b2f*c*t22668;
            double t22677 = t22671+t22673+t22675+t22676;
            double t22678 = 1/pow(rho_a[index],4.0/3.0);
            double t22679 = b1p*t22670;
            double t22680 = b3p*t22672;
            double t22681 = b4p*t22636*t22674;
            double t22682 = b2p*c*t22668;
            double t22683 = t22680+t22681+t22682+t22679;
            double t22684 = 1/pow(rho_a[index],5.0/3.0);
            double t22685 = 1/sqrt(t22669);
            double t22686 = 1/c0f;
            double t22687 = 1/t22677;
            double t22688 = t22686*t22687*(1.0/2.0);
            double t22689 = t22688+1.0;
            double t22690 = 1/t22683;
            double t22691 = t22643*t22690*(1.0/2.0);
            double t22692 = t22691+1.0;
            double t22693 = a1p*c*t22668;
            double t22694 = t22693+1.0;
            double t22695 = 1/t22692;
            double t22696 = 1/(t22683*t22683);
            double t22697 = b4p*t22636*t22684*(2.0/3.0);
            double t22698 = b2p*c*t22678*(1.0/3.0);
            double t22699 = b1p*c*t22685*t22678*(1.0/6.0);
            double t22700 = b3p*c*t22670*t22678*(1.0/2.0);
            double t22701 = t22700+t22697+t22698+t22699;
            double t22702 = t22701*t22694*t22695*t22696;
            double t22703 = log(t22692);
            double t22704 = gcaa*gcaa;
            double t22705 = pow(2.0,1.0/3.0);
            double t22706 = t22705*2.0;
            double t22707 = t22706-2.0;
            double t22708 = log(t22689);
            double t22709 = a1f*c*t22668;
            double t22710 = t22709+1.0;
            double t22711 = gamma_aa[index]*gcab*t22660*3.0;
            double t22712 = gamma_aa[index]*gcab*t22661*t22662*t22663;
            double t22713 = t22661*t22662*t22664*3.0;
            double t22714 = t22711+t22712+t22713+1.0;
            double t22715 = 1/t22714;
            double t22716 = gamma_aa[index]*gcab*t22660*2.0;
            double t22717 = t22661*t22662*t22664;
            double t22718 = t22716+t22717+1.0;
            double t22719 = 1/t22718;
            double t22720 = 1/pow(rho_a[index],1.0E1);
            double t22721 = gamma_aa[index]*gcab*t22660;
            double t22722 = t22721+1.0;
            double t22723 = 1/pow(rho_a[index],2.2E1/3.0);
            double t22725 = 1/pow(rho_a[index],1.1E1/3.0);
            double t22727 = 1/pow(rho_a[index],1.9E1/3.0);
            double t22733 = gamma_aa[index]*gcab*t22725*(8.0/3.0);
            double t22734 = t22661*t22662*t22727*(8.0/3.0);
            double t22724 = t22733+t22734;
            double t22726 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t22728 = 1/(t22714*t22714);
            double t22729 = gamma_aa[index]*gcab*t22725*4.0;
            double t22730 = gamma_aa[index]*gcab*t22661*t22662*t22726*4.0;
            double t22731 = t22661*t22662*t22727*8.0;
            double t22732 = t22730+t22731+t22729;
            double t22735 = 1/(t22718*t22718);
            double t22736 = pow(rho_a[index],5.0/3.0);
            double t22737 = C_k*t22736;
            double t22738 = tau_a[index]*1.0E20;
            double t22739 = 1/tau_a[index];
            double t22740 = -t22737+t22738;
            double t22741 = ( (t22740 > 0.0) ?  1.0 : 0.0 ) ;
            double t22742 = C_k*t22741*t22736*t22739;
            double t22743 = t22737-t22738;
            double t22744 = ( (t22743 > 0.0) ?  1.0 : 0.0 ) ;
            double t22745 = t22744*1.0E20;
            double t22746 = t22742+t22745-1.0;
            double t22747 = t22746*t22746;
            double t22748 = t22742+t22745+1.0;
            double t22749 = t22747*t22747;
            double t22750 = gx*gx;
            double t22751 = gamma_aa[index]*gx*t22660;
            double t22752 = t22751+1.0;
            double t22753 = 1/t22752;
            double t22754 = gamma_aa[index]*gx*t22660*3.0;
            double t22755 = gamma_aa[index]*gx*t22750*t22661*t22663;
            double t22756 = t22750*t22661*t22664*3.0;
            double t22757 = t22754+t22755+t22756+1.0;
            double t22758 = 1/t22757;
            double t22759 = gamma_aa[index]*gx*t22660*2.0;
            double t22760 = t22750*t22661*t22664;
            double t22761 = t22760+t22759+1.0;
            double t22762 = 1/t22761;
            double t22763 = 1/t22748;
            double t22764 = 1/(t22748*t22748*t22748);
            double t22765 = 1/(t22748*t22748*t22748*t22748*t22748);
            double t22766 = t22746*t22765*t22749;
            double t22767 = cxnl1*gamma_aa[index]*gx*t22660*t22753;
            double t22768 = cxnl3*gamma_aa[index]*gx*t22750*t22661*t22663*t22758;
            double t22769 = cxnl2*t22750*t22661*t22762*t22664;
            double t22770 = cxnl0+t22767+t22768+t22769;
            double t22771 = 0.0 ;
            double t22772 = pow(rho_a[index],2.0/3.0);
            double t22773 = C_k*t22771*t22772*(5.0E20/3.0);
            double t22774 = C_k*C_k;
            double t22775 = pow(rho_a[index],7.0/3.0);
            double t22776 = C_k*t22741*t22772*t22739*(5.0/3.0);
            double t22778 = t22771*t22774*t22739*t22775*(5.0/3.0);
            double t22777 = t22773+t22776-t22778;
            double t22779 = 1/(t22752*t22752);
            double t22780 = gamma_aa[index]*gx*t22725*8.0;
            double t22781 = gamma_aa[index]*gx*t22750*t22661*t22726*8.0;
            double t22782 = t22750*t22661*t22727*1.6E1;
            double t22783 = t22780+t22781+t22782;
            double t22784 = 1/(t22757*t22757);
            double t22785 = gamma_aa[index]*gx*t22725*(1.6E1/3.0);
            double t22786 = t22750*t22661*t22727*(1.6E1/3.0);
            double t22787 = t22785+t22786;
            double t22788 = 1/(t22761*t22761);
            double t22789 = t22763*t22746;
            double t22825 = t22746*t22764*t22747*2.0;
            double t22790 = -t22825+t22766+t22789;
            double t22791 = 1/pow(rho_a[index],1.4E1/3.0);
            double t22792 = cxnl1*gamma_aa[index]*gx*t22725*t22753*(8.0/3.0);
            double t22793 = cxnl3*gamma_aa[index]*gx*t22750*t22661*t22726*t22758*8.0;
            double t22794 = cxnl2*t22750*t22661*t22762*t22727*(1.6E1/3.0);
            double t22795 = t22792+t22793+t22794-cxnl1*t22750*t22661*t22727*t22779*(8.0/3.0)-cxnl2*t22750*t22661* \
               t22664*t22787*t22788-cxnl3*gamma_aa[index]*gx*t22750*t22661*t22663*t22783*t22784;
            double t22796 = t22763*t22777;
            double t22797 = 1/(t22748*t22748);
            double t22798 = 1/(t22748*t22748*t22748*t22748);
            double t22799 = t22746*t22747*t22777*t22798*6.0;
            double t22800 = t22765*t22749*t22777*5.0;
            double t22801 = 1/(t22748*t22748*t22748*t22748*t22748*t22748);
            double t22802 = t22800+t22796+t22799-t22764*t22747*t22777*6.0-t22746*t22777*t22797-t22801*t22746* \
               t22749*t22777*5.0;
            double t22803 = pow(rho_a[index],4.0/3.0);
            double t22804 = rho_a[index]*rho_a[index];
            double t22805 = 0.0 ;
            double t22806 = t22777*t22777;
            double t22807 = C_k*t22771*t22668*(1.0E21/9.0);
            double t22808 = C_k*rho_a[index]*t22804*t22805*t22774*t22739*(2.5E1/9.0);
            double t22809 = C_k*t22741*t22739*t22668*(1.0E1/9.0);
            double t22811 = t22803*t22805*t22774*(2.5E21/9.0);
            double t22812 = t22803*t22771*t22774*t22739*(2.0E1/3.0);
            double t22810 = -t22811-t22812+t22807+t22808+t22809;
            double t22813 = 1/(t22752*t22752*t22752);
            double t22814 = t22787*t22787;
            double t22815 = 1/(t22761*t22761*t22761);
            double t22816 = gamma_aa[index]*gx*t22791*(8.8E1/3.0);
            double t22817 = gamma_aa[index]*gx*t22720*t22750*t22661*7.2E1;
            double t22818 = t22723*t22750*t22661*(3.04E2/3.0);
            double t22819 = t22816+t22817+t22818;
            double t22820 = t22783*t22783;
            double t22821 = 1/(t22757*t22757*t22757);
            double t22822 = gamma_aa[index]*gx*t22791*(1.76E2/9.0);
            double t22823 = t22723*t22750*t22661*(3.04E2/9.0);
            double t22824 = t22822+t22823;
            double t22826 = c0f*t22710*t22708*2.0;
            double t22827 = c0p*t22703*t22694*2.0;
            double t22828 = 1/t22722;
            double t22829 = 1/(t22722*t22722*t22722);
            double t22830 = ccab1*gamma_aa[index]*gcab*t22720*t22661*t22662*t22829*(3.2E1/9.0);
            double t22831 = 1/(t22722*t22722);
            double t22832 = t22724*t22724;
            double t22833 = 1/(t22718*t22718*t22718);
            double t22834 = ccab2*t22661*t22832*t22662*t22833*t22664*2.0;
            double t22835 = t22732*t22732;
            double t22836 = 1/(t22714*t22714*t22714);
            double t22837 = ccab3*gamma_aa[index]*gcab*t22661*t22662*t22663*t22835*t22836*2.0;
            double t22838 = 1/t22689;
            double t22839 = 1/(t22677*t22677);
            double t22840 = b4f*t22636*t22684*(2.0/3.0);
            double t22841 = b2f*c*t22678*(1.0/3.0);
            double t22842 = b1f*c*t22685*t22678*(1.0/6.0);
            double t22843 = b3f*c*t22670*t22678*(1.0/2.0);
            double t22844 = t22840+t22841+t22842+t22843;
            double t22845 = a1f*c*c0f*t22708*t22678*(2.0/3.0);
            double t22846 = a1p*c*c0p*t22703*t22678*(2.0/3.0);
            double t22847 = t22826-t22827;
            double t22848 = t22707*t22667*t22847;
            double t22849 = ccab1*gamma_aa[index]*gcab*t22660*t22828;
            double t22850 = ccab3*gamma_aa[index]*gcab*t22661*t22715*t22662*t22663;
            double t22851 = ccab2*t22661*t22662*t22664*t22719;
            double t22852 = ccab0+t22850+t22851+t22849;
            double t22853 = b2p*c*t22641*(4.0/9.0);
            double t22854 = b4p*t22640*t22636*(1.0E1/9.0);
            double t22855 = 1/pow(t22630,3.0/2.0);
            double t22856 = b3p*t22640*t22642*t22636*(1.0/1.2E1);
            double t22857 = b1p*c*t22641*t22642*(2.0/9.0);
            double t22858 = b3p*c*t22631*t22641*(2.0/3.0);
            double t22859 = t22853+t22854+t22856+t22857+t22858-b1p*t22640*t22636*t22855*(1.0/3.6E1);
            double t22860 = t22647*t22649*t22658*t22859;
            double t22861 = 1/(t22639*t22639*t22639);
            double t22862 = 1/(t22646*t22646);
            double t22863 = 1/(t22639*t22639*t22639*t22639);
            double t22864 = t22643*t22862*t22863*t22657*t22649*(1.0/2.0);
            double t22865 = 1/d2fz0;
            double t22866 = 1/(rho_a[index]*rho_a[index]);
            double t22867 = 1/Aa;
            double t22868 = b1a*t22631;
            double t22869 = b3a*t22633;
            double t22870 = b2a*c*t22629;
            double t22871 = b4a*t22636*t22637;
            double t22872 = t22870+t22871+t22868+t22869;
            double t22873 = 1/t22872;
            double t22874 = t22873*t22867*(1.0/2.0);
            double t22875 = t22874+1.0;
            double t22876 = log(t22875);
            double t22877 = a1a*c*t22629;
            double t22878 = t22877+1.0;
            double t22879 = a1p*c*t22650*t22651*t22647*t22658*(2.0/3.0);
            double t22880 = 1/pow(rho_a[index],7.0/3.0);
            double t22881 = 1/pow(t22669,3.0/2.0);
            double t22882 = t22844*t22844;
            double t22883 = t22701*t22701;
            double t22884 = 1/(t22683*t22683*t22683);
            double t22885 = t22694*t22883*t22695*t22884*2.0;
            double t22886 = b4p*t22660*t22636*(1.0E1/9.0);
            double t22887 = b2p*c*t22880*(4.0/9.0);
            double t22888 = b3p*t22660*t22636*t22685*(1.0/1.2E1);
            double t22889 = b1p*c*t22880*t22685*(2.0/9.0);
            double t22890 = b3p*c*t22670*t22880*(2.0/3.0);
            double t22939 = b1p*t22660*t22636*t22881*(1.0/3.6E1);
            double t22891 = t22890-t22939+t22886+t22887+t22888+t22889;
            double t22892 = 1/(t22692*t22692);
            double t22893 = 1/(t22683*t22683*t22683*t22683);
            double t22894 = a1p*c*c0p*t22703*t22880*(8.0/9.0);
            double t22920 = t22710*t22844*t22838*t22839;
            double t22895 = t22702-t22920+t22845-t22846;
            double t22896 = a1p*c*c0p*t22650*t22659*(4.0/3.0);
            double t22897 = t22827+t22848;
            double t22898 = gamma_aa[index]*gcaa*t22660;
            double t22899 = t22898+1.0;
            double t22900 = 1/t22899;
            double t22901 = gamma_aa[index]*gcaa*t22660*3.0;
            double t22902 = gamma_aa[index]*gcaa*t22704*t22661*t22663;
            double t22903 = t22704*t22661*t22664*3.0;
            double t22904 = t22901+t22902+t22903+1.0;
            double t22905 = 1/t22904;
            double t22906 = gamma_aa[index]*gcaa*t22660*2.0;
            double t22907 = t22704*t22661*t22664;
            double t22908 = t22906+t22907+1.0;
            double t22909 = 1/t22908;
            double t22910 = 1/(t22899*t22899);
            double t22911 = gamma_aa[index]*gcaa*t22725*(1.6E1/3.0);
            double t22912 = t22704*t22661*t22727*(1.6E1/3.0);
            double t22913 = t22911+t22912;
            double t22914 = gamma_aa[index]*gcaa*t22725*8.0;
            double t22915 = gamma_aa[index]*gcaa*t22704*t22661*t22726*8.0;
            double t22916 = t22704*t22661*t22727*1.6E1;
            double t22917 = t22914+t22915+t22916;
            double t22918 = 1/(t22904*t22904);
            double t22919 = 1/(t22908*t22908);
            double t22921 = t22707*t22667*t22895;
            double t22922 = ccaa1*gamma_aa[index]*gcaa*t22900*t22725*(8.0/3.0);
            double t22923 = ccaa3*gamma_aa[index]*gcaa*t22704*t22661*t22905*t22726*8.0;
            double t22924 = ccaa2*t22704*t22661*t22727*t22909*(1.6E1/3.0);
            double t22925 = t22922+t22923+t22924-ccaa1*t22910*t22704*t22661*t22727*(8.0/3.0)-ccaa2*t22704*t22661* \
               t22913*t22664*t22919-ccaa3*gamma_aa[index]*gcaa*t22704*t22661*t22663*t22917*t22918;
            double t22926 = -t22702+t22921+t22846;
            double t22927 = ccaa1*gamma_aa[index]*gcaa*t22900*t22660;
            double t22928 = ccaa3*gamma_aa[index]*gcaa*t22704*t22661*t22905*t22663;
            double t22929 = ccaa2*t22704*t22661*t22664*t22909;
            double t22930 = ccaa0+t22927+t22928+t22929;
            double t22931 = 1/(t22677*t22677*t22677);
            double t22932 = b4f*t22660*t22636*(1.0E1/9.0);
            double t22933 = b2f*c*t22880*(4.0/9.0);
            double t22934 = b3f*t22660*t22636*t22685*(1.0/1.2E1);
            double t22935 = b1f*c*t22880*t22685*(2.0/9.0);
            double t22936 = b3f*c*t22670*t22880*(2.0/3.0);
            double t22937 = t22932+t22933+t22934+t22935+t22936-b1f*t22660*t22636*t22881*(1.0/3.6E1);
            double t22938 = t22710*t22838*t22937*t22839;
            double t22940 = t22891*t22694*t22695*t22696;
            double t22941 = 1/(t22689*t22689);
            double t22942 = 1/(t22677*t22677*t22677*t22677);
            double t22943 = t22710*t22941*t22942*t22882*t22686*(1.0/2.0);
            double t22944 = t22643*t22694*t22883*t22892*t22893*(1.0/2.0);
            double t22945 = a1f*c*t22844*t22838*t22839*t22678*(2.0/3.0);
            double t22946 = a1p*c*t22701*t22695*t22678*t22696*(2.0/3.0);
            v_rho_a_rho_a_[index] = (rho_a[index]*(t22827+t22707*t22667*(t22826-c0p*t22703*t22694*2.0))*2.0-c0p* \
               rho_a[index]*t22649*t22659*4.0)*(t22830+t22834+t22837-ccab1*t22723*t22831*t22661*t22662*(3.2E1/9.0) \
               +ccab2*t22723*t22661*t22662*t22719*(3.2E1/9.0)-ccab2*1/pow(rho_a[index],3.8E1/3.0)*(t22661*t22661) \
               *(t22662*t22662)*t22735*(3.2E1/9.0)-ccab2*t22661*t22724*t22662*t22735*t22727*(1.6E1/3.0)+ccab3*gamma_aa[index]* \
               gcab*t22720*t22661*t22715*t22662*(3.2E1/3.0)-ccab3*gamma_aa[index]*gcab*t22661*t22662*t22663*t22728* \
               (t22723*t22661*t22662*(3.2E1/3.0)+gamma_aa[index]*gcab*t22720*t22661*t22662*(3.2E1/3.0))-ccab3*gamma_aa[index]* \
               gcab*t22732*t22661*t22662*t22726*t22728*8.0)-t22852*(-t22896-rho_a[index]*(t22860+t22864+t22879-t22861* \
               t22647*t22657*t22649*2.0-a1p*c*c0p*t22641*t22659*(8.0/9.0)+Aa*t22667*t22865*t22866*t22876*t22878*(4.0/ \
               9.0))*2.0+rho_a[index]*(t22940+t22944+t22946-t22885-t22894+t22707*t22667*(t22943+t22945+t22938+t22885+ \
               t22894-t22710*t22931*t22882*t22838*2.0-t22891*t22694*t22695*t22696-a1f*c*c0f*t22708*t22880*(8.0/9.0) \
               -t22643*t22694*t22883*t22892*t22893*(1.0/2.0)-a1p*c*t22701*t22695*t22678*t22696*(2.0/3.0)))+t22707* \
               t22667*t22895*2.0+t22651*t22647*t22649*t22658*2.0-t22701*t22694*t22695*t22696*2.0+a1p*c*c0p*t22703* \
               t22678*(4.0/3.0))+t22925*t22897*2.0+(-t22827-t22848+rho_a[index]*t22926+rho_a[index]*(t22651*t22647* \
               t22649*t22658-a1p*c*c0p*t22650*t22659*(2.0/3.0))*2.0+c0p*t22649*t22659*2.0)*(ccab1*gamma_aa[index]* \
               gcab*t22725*t22828*(4.0/3.0)-ccab1*t22831*t22661*t22662*t22727*(4.0/3.0)+ccab2*t22661*t22662*t22727* \
               t22719*(8.0/3.0)-ccab2*t22661*t22724*t22662*t22735*t22664+ccab3*gamma_aa[index]*gcab*t22661*t22715* \
               t22662*t22726*4.0-ccab3*gamma_aa[index]*gcab*t22732*t22661*t22662*t22663*t22728)*4.0+t22930*(-t22702+ \
               t22846+t22707*t22667*(t22702+t22845-t22710*t22844*t22838*t22839-a1p*c*c0p*t22703*t22678*(2.0/3.0)) \
               )*2.0+(rho_a[index]*t22897*2.0-c0p*rho_a[index]*t22649*t22659*4.0)*(t22830+t22834+t22837+ccab1*gamma_aa[index]* \
               gcab*t22791*t22828*(4.4E1/9.0)-ccab1*t22723*t22831*t22661*t22662*(7.6E1/9.0)+ccab2*t22723*t22661*t22662* \
               t22719*(4.0E1/3.0)-ccab2*t22661*t22724*t22662*t22735*t22727*(1.6E1/3.0)-ccab2*t22661*t22662*t22735* \
               t22664*(gamma_aa[index]*gcab*t22791*(8.8E1/9.0)+t22723*t22661*t22662*(4.0E1/3.0))+ccab3*gamma_aa[index]* \
               gcab*t22720*t22661*t22715*t22662*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t22661*t22662*t22663*t22728* \
               (gamma_aa[index]*gcab*t22791*(4.4E1/3.0)+t22723*t22661*t22662*4.0E1+gamma_aa[index]*gcab*t22720*t22661* \
               t22662*(7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t22732*t22661*t22662*t22726*t22728*8.0)+t22852*(t22896+ \
               rho_a[index]*(t22860+t22864+t22879-t22861*t22647*t22657*t22649*2.0-a1p*c*c0p*t22641*t22659*(8.0/9.0) \
               -Aa*t22667*t22865*t22866*t22876*t22878*(4.0/9.0))*2.0-t22651*t22647*t22649*t22658*2.0)-(X-1.0)*(c0* \
               t22803*(t22790*(cxnl1*gamma_aa[index]*gx*t22753*t22791*(8.8E1/9.0)+cxnl2*t22723*t22750*t22661*t22762* \
               (3.04E2/9.0)-cxnl1*t22723*t22750*t22661*t22779*2.4E1+cxnl2*t22750*t22661*t22814*t22815*t22664*2.0- \
               cxnl2*t22750*t22661*t22824*t22664*t22788-cxnl2*t22750*t22661*t22727*t22787*t22788*(3.2E1/3.0)+cxnl1* \
               gamma_aa[index]*gx*t22720*t22750*t22813*t22661*(1.28E2/9.0)+cxnl3*gamma_aa[index]*gx*t22720*t22750* \
               t22661*t22758*7.2E1+cxnl3*gamma_aa[index]*gx*t22820*t22821*t22750*t22661*t22663*2.0-cxnl3*gamma_aa[index]* \
               gx*t22750*t22661*t22663*t22819*t22784-cxnl3*gamma_aa[index]*gx*t22750*t22661*t22726*t22783*t22784* \
               1.6E1)-t22802*t22795*2.0-t22770*(-t22810*t22763+t22806*t22797*2.0+t22801*t22806*t22749*5.0E1+t22810* \
               t22764*t22747*6.0-t22810*t22765*t22749*5.0+t22806*t22746*t22764*1.0E1+t22810*t22746*t22797-t22806* \
               t22747*t22798*3.6E1+t22801*t22810*t22746*t22749*5.0+t22806*t22746*t22747*t22765*4.0-t22810*t22746* \
               t22747*t22798*6.0-t22806*t22746*1/(t22748*t22748*t22748*t22748*t22748*t22748*t22748)*t22749*3.0E1) \
               +cx1*gamma_aa[index]*gx*t22753*t22791*(8.8E1/9.0)-cx1*t22723*t22750*t22661*t22779*2.4E1+cx2*t22723* \
               t22750*t22661*t22762*(3.04E2/9.0)+cx2*t22750*t22661*t22814*t22815*t22664*2.0-cx2*t22750*t22661*t22824* \
               t22664*t22788-cx2*t22750*t22661*t22727*t22787*t22788*(3.2E1/3.0)+cx1*gamma_aa[index]*gx*t22720*t22750* \
               t22813*t22661*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t22720*t22750*t22661*t22758*7.2E1+cx3*gamma_aa[index]* \
               gx*t22820*t22821*t22750*t22661*t22663*2.0-cx3*gamma_aa[index]*gx*t22750*t22661*t22663*t22819*t22784- \
               cx3*gamma_aa[index]*gx*t22750*t22661*t22726*t22783*t22784*1.6E1)+c0*pow(rho_a[index],1.0/3.0)*(t22802* \
               t22770-t22790*t22795-cx1*gamma_aa[index]*gx*t22725*t22753*(8.0/3.0)+cx1*t22750*t22661*t22727*t22779* \
               (8.0/3.0)-cx2*t22750*t22661*t22762*t22727*(1.6E1/3.0)+cx2*t22750*t22661*t22664*t22787*t22788-cx3*gamma_aa[index]* \
               gx*t22750*t22661*t22726*t22758*8.0+cx3*gamma_aa[index]*gx*t22750*t22661*t22663*t22783*t22784)*(8.0/ \
               3.0)+c0*t22674*(cx0+t22770*t22790+cx1*gamma_aa[index]*gx*t22660*t22753+cx2*t22750*t22661*t22762*t22664+ \
               cx3*gamma_aa[index]*gx*t22750*t22661*t22663*t22758)*(4.0/9.0))+rho_a[index]*t22930*(t22940+t22944+ \
               t22946-t22885-t22894-t22707*t22667*(t22940-t22943+t22944-t22945+t22946-t22938-t22885-t22894+t22710* \
               t22931*t22882*t22838*2.0+a1f*c*c0f*t22708*t22880*(8.0/9.0)))-rho_a[index]*t22897*(ccaa1*gamma_aa[index]* \
               gcaa*t22900*t22791*(8.8E1/9.0)-ccaa1*t22910*t22704*t22723*t22661*2.4E1+ccaa2*t22704*t22723*t22661* \
               t22909*(3.04E2/9.0)-ccaa2*t22704*t22661*t22913*t22727*t22919*(3.2E1/3.0)-ccaa2*t22704*t22661*t22664* \
               t22919*(gamma_aa[index]*gcaa*t22791*(1.76E2/9.0)+t22704*t22723*t22661*(3.04E2/9.0))+ccaa2*t22704*t22661* \
               (t22913*t22913)*t22664*1/(t22908*t22908*t22908)*2.0+ccaa3*gamma_aa[index]*gcaa*t22720*t22704*t22661* \
               t22905*7.2E1+ccaa1*gamma_aa[index]*gcaa*t22720*t22704*t22661*1/(t22899*t22899*t22899)*(1.28E2/9.0) \
               +ccaa3*gamma_aa[index]*gcaa*t22704*t22661*1/(t22904*t22904*t22904)*t22663*(t22917*t22917)*2.0-ccaa3* \
               gamma_aa[index]*gcaa*t22704*t22661*t22663*t22918*(gamma_aa[index]*gcaa*t22791*(8.8E1/3.0)+t22704*t22723* \
               t22661*(3.04E2/3.0)+gamma_aa[index]*gcaa*t22720*t22704*t22661*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t22704* \
               t22661*t22726*t22917*t22918*1.6E1)-rho_a[index]*t22925*t22926*2.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t22948 = 1/pow(rho_a[index],8.0/3.0);
                double t22949 = gx*gx;
                double t22950 = 1/pow(rho_a[index],1.6E1/3.0);
                double t22951 = gamma_aa[index]*gamma_aa[index];
                double t22952 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t22953 = gamma_aa[index]*gx*t22948;
                double t22954 = t22953+1.0;
                double t22955 = gamma_aa[index]*gx*t22948*3.0;
                double t22956 = gamma_aa[index]*gx*t22951*t22952*t22949;
                double t22957 = t22950*t22951*t22949*3.0;
                double t22958 = t22955+t22956+t22957+1.0;
                double t22959 = gamma_aa[index]*gx*t22948*2.0;
                double t22960 = t22950*t22951*t22949;
                double t22961 = t22960+t22959+1.0;
                double t22962 = tau_a[index]*1.0E20;
                double t22963 = pow(rho_a[index],5.0/3.0);
                double t22968 = C_k*t22963;
                double t22964 = t22962-t22968;
                double t22965 = 0.0 ;
                double t22966 = pow(rho_a[index],2.0/3.0);
                double t22967 = 1/tau_a[index];
                double t22969 = ( (t22964 > 0.0) ?  1.0 : 0.0 ) ;
                double t22970 = C_k*t22965*t22966*(5.0E20/3.0);
                double t22971 = C_k*C_k;
                double t22972 = pow(rho_a[index],7.0/3.0);
                double t22973 = C_k*t22966*t22967*t22969*(5.0/3.0);
                double t22980 = t22971*t22972*t22965*t22967*(5.0/3.0);
                double t22974 = t22970-t22980+t22973;
                double t22975 = -t22962+t22968;
                double t22976 = ( (t22975 > 0.0) ?  1.0 : 0.0 ) ;
                double t22977 = t22976*1.0E20;
                double t22978 = C_k*t22963*t22967*t22969;
                double t22979 = t22977+t22978+1.0;
                double t22981 = t22977+t22978-1.0;
                double t22982 = t22981*t22981;
                double t22983 = t22982*t22982;
                double t22984 = 1/t22979;
                double t22985 = 1/(t22979*t22979*t22979);
                double t22986 = 1/(t22979*t22979*t22979*t22979*t22979);
                double t22987 = 1/t22954;
                double t22988 = 1/t22961;
                double t22989 = 1/t22958;
                double t22990 = 1/pow(rho_a[index],1.9E1/3.0);
                double t22991 = 1/(t22954*t22954);
                double t22992 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t22993 = 1/pow(rho_a[index],1.1E1/3.0);
                double t22994 = 1/(t22958*t22958);
                double t22995 = 1/(t22961*t22961);
                double t22996 = gx*t22948*3.0;
                double t22997 = gamma_aa[index]*t22950*t22949*6.0;
                double t22998 = gx*t22951*t22952*t22949*3.0;
                double t22999 = t22996+t22997+t22998;
                double t23000 = gx*t22948*2.0;
                double t23001 = gamma_aa[index]*t22950*t22949*2.0;
                double t23002 = t23000+t23001;
                double t23003 = gamma_aa[index]*gx*t22993*(1.6E1/3.0);
                double t23004 = t22951*t22990*t22949*(1.6E1/3.0);
                double t23005 = t23003+t23004;
                double t23006 = gamma_aa[index]*gx*t22993*8.0;
                double t23007 = gamma_aa[index]*gx*t22951*t22992*t22949*8.0;
                double t23008 = t22951*t22990*t22949*1.6E1;
                double t23009 = t23006+t23007+t23008;
                double t23010 = 1/(t22954*t22954*t22954);
                double t23011 = gx*t22993*8.0;
                double t23012 = gamma_aa[index]*t22990*t22949*3.2E1;
                double t23013 = gx*t22951*t22992*t22949*2.4E1;
                double t23014 = t23011+t23012+t23013;
                double t23015 = gx*t22993*(1.6E1/3.0);
                double t23016 = gamma_aa[index]*t22990*t22949*(3.2E1/3.0);
                double t23017 = t23015+t23016;
                double t23018 = 1/(t22961*t22961*t22961);
                double t23019 = 1/(t22958*t22958*t22958);
                double t23020 = t22981*t22984;
                double t23021 = t22981*t22983*t22986;
                double t23022 = t23020+t23021-t22981*t22982*t22985*2.0;
                double t23023 = cxnl1*gx*t22948*t22987;
                double t23024 = cxnl2*gamma_aa[index]*t22950*t22949*t22988*2.0;
                double t23025 = cxnl3*gx*t22951*t22952*t22949*t22989*3.0;
                double t23026 = t23023+t23024+t23025-cxnl1*gamma_aa[index]*t22950*t22991*t22949-cxnl2*t22950*t22951* \
                   t22949*t22995*t23002-cxnl3*gamma_aa[index]*gx*t22951*t22952*t22949*t22994*t22999;
                double t23027 = 1/pow(rho_a[index],1.0/3.0);
                double t23028 = c*t23027;
                double t23029 = sqrt(t23028);
                double t23030 = pow(t23028,3.0/2.0);
                double t23031 = c*c;
                double t23032 = 1/pow(rho_a[index],2.0/3.0);
                double t23033 = 1/c0p;
                double t23034 = b1p*t23029;
                double t23035 = b3p*t23030;
                double t23036 = b4p*t23031*t23032;
                double t23037 = b2p*c*t23027;
                double t23038 = t23034+t23035+t23036+t23037;
                double t23039 = 1/t23038;
                double t23040 = t23033*t23039*(1.0/2.0);
                double t23041 = t23040+1.0;
                double t23042 = log(t23041);
                double t23043 = a1p*c*t23027;
                double t23044 = t23043+1.0;
                double t23045 = gcaa*gcaa;
                double t23046 = gamma_aa[index]*gcaa*t22948;
                double t23047 = t23046+1.0;
                double t23048 = gamma_aa[index]*gcaa*t22948*3.0;
                double t23049 = gamma_aa[index]*gcaa*t22951*t22952*t23045;
                double t23050 = t22950*t22951*t23045*3.0;
                double t23051 = t23050+t23048+t23049+1.0;
                double t23052 = gamma_aa[index]*gcaa*t22948*2.0;
                double t23053 = t22950*t22951*t23045;
                double t23054 = t23052+t23053+1.0;
                double t23055 = pow(2.0,1.0/3.0);
                double t23056 = t23055*2.0;
                double t23057 = t23056-2.0;
                double t23058 = two_13*2.0;
                double t23059 = t23058-2.0;
                double t23060 = 1/t23059;
                double t23061 = 1/c0f;
                double t23062 = b1f*t23029;
                double t23063 = b3f*t23030;
                double t23064 = b4f*t23031*t23032;
                double t23065 = b2f*c*t23027;
                double t23066 = t23062+t23063+t23064+t23065;
                double t23067 = 1/t23066;
                double t23068 = t23061*t23067*(1.0/2.0);
                double t23069 = t23068+1.0;
                double t23070 = log(t23069);
                double t23071 = a1f*c*t23027;
                double t23072 = t23071+1.0;
                double t23073 = c0f*t23070*t23072*2.0;
                double t23074 = c0p*t23042*t23044*2.0;
                double t23075 = rho_a[index]*2.0;
                double t23076 = 1/pow(t23075,1.0/3.0);
                double t23077 = c*t23076;
                double t23078 = gcab*gcab;
                double t23079 = gamma_aa[index]*gcab*t22948;
                double t23080 = t23079+1.0;
                double t23081 = gamma_aa[index]*gcab*t22948*3.0;
                double t23082 = gamma_aa[index]*gcab*t22951*t22952*t23078;
                double t23083 = t22950*t22951*t23078*3.0;
                double t23084 = t23081+t23082+t23083+1.0;
                double t23085 = gamma_aa[index]*gcab*t22948*2.0;
                double t23086 = t22950*t22951*t23078;
                double t23087 = t23085+t23086+1.0;
                double t23088 = 1/(t23084*t23084);
                double t23089 = 1/(t23087*t23087);
                double t23090 = gamma_aa[index]*gcab*t22993*(8.0/3.0);
                double t23091 = t22951*t22990*t23078*(8.0/3.0);
                double t23092 = t23090+t23091;
                double t23093 = gcab*t22948;
                double t23094 = gamma_aa[index]*t22950*t23078;
                double t23095 = t23093+t23094;
                double t23096 = gcab*t22948*(3.0/2.0);
                double t23097 = gamma_aa[index]*t22950*t23078*3.0;
                double t23098 = gcab*t22951*t22952*t23078*(3.0/2.0);
                double t23099 = t23096+t23097+t23098;
                double t23100 = gamma_aa[index]*gcab*t22993*4.0;
                double t23101 = gamma_aa[index]*gcab*t22951*t22992*t23078*4.0;
                double t23102 = t22951*t22990*t23078*8.0;
                double t23103 = t23100+t23101+t23102;
                double t23104 = sqrt(t23077);
                double t23105 = b1p*t23104;
                double t23106 = pow(t23077,3.0/2.0);
                double t23107 = b3p*t23106;
                double t23108 = b2p*c*t23076;
                double t23109 = 1/pow(t23075,2.0/3.0);
                double t23110 = b4p*t23031*t23109;
                double t23111 = t23110+t23105+t23107+t23108;
                double t23112 = 1/t23111;
                double t23113 = t23112*t23033*(1.0/2.0);
                double t23114 = t23113+1.0;
                double t23115 = a1p*c*t23076;
                double t23116 = t23115+1.0;
                double t23117 = 1/pow(t23075,4.0/3.0);
                double t23118 = log(t23114);
                double t23119 = 1/pow(rho_a[index],4.0/3.0);
                double t23120 = 1/pow(rho_a[index],5.0/3.0);
                double t23121 = 1/sqrt(t23028);
                double t23122 = 1/t23041;
                double t23123 = 1/(t23038*t23038);
                double t23124 = b4p*t23120*t23031*(2.0/3.0);
                double t23125 = b2p*c*t23119*(1.0/3.0);
                double t23126 = b1p*c*t23121*t23119*(1.0/6.0);
                double t23127 = b3p*c*t23029*t23119*(1.0/2.0);
                double t23128 = t23124+t23125+t23126+t23127;
                double t23129 = t23122*t23123*t23044*t23128;
                double t23130 = t23073-t23074;
                double t23131 = t23130*t23060*t23057;
                double t23132 = 1/t23080;
                double t23133 = 1/t23087;
                double t23134 = 1/t23084;
                double t23135 = 1/(t23080*t23080);
                double t23136 = t23131+t23074;
                double t23137 = rho_a[index]*t23136*2.0;
                double t23138 = t23137-c0p*rho_a[index]*t23116*t23118*4.0;
                double t23139 = 1/(t23080*t23080*t23080);
                double t23140 = ccab3*gcab*t22951*t22952*t23103*t23078*t23088*(3.0/2.0);
                double t23141 = ccab2*gamma_aa[index]*t22950*t23092*t23078*t23089;
                double t23142 = ccab3*gamma_aa[index]*gcab*t22951*t22992*t23078*t23088*t23099*4.0;
                double t23143 = gamma_aa[index]*t22990*t23078*4.0;
                double t23144 = ccab2*t22951*t22990*t23095*t23078*t23089*(8.0/3.0);
                double t23145 = 1/(t23087*t23087*t23087);
                double t23146 = 1/(t23084*t23084*t23084);
                double t23147 = 1/t23047;
                double t23148 = 1/t23054;
                double t23149 = 1/t23051;
                double t23150 = 1/(t23047*t23047);
                double t23151 = 1/(t23051*t23051);
                double t23152 = 1/(t23054*t23054);
                double t23153 = gcaa*t22948*3.0;
                double t23154 = gamma_aa[index]*t22950*t23045*6.0;
                double t23155 = gcaa*t22951*t22952*t23045*3.0;
                double t23156 = t23153+t23154+t23155;
                double t23157 = gcaa*t22948*2.0;
                double t23158 = gamma_aa[index]*t22950*t23045*2.0;
                double t23159 = t23157+t23158;
                double t23160 = gamma_aa[index]*gcaa*t22993*(1.6E1/3.0);
                double t23161 = t22951*t22990*t23045*(1.6E1/3.0);
                double t23162 = t23160+t23161;
                double t23163 = gamma_aa[index]*gcaa*t22993*8.0;
                double t23164 = gamma_aa[index]*gcaa*t22951*t22992*t23045*8.0;
                double t23165 = t22951*t22990*t23045*1.6E1;
                double t23166 = t23163+t23164+t23165;
                double t23167 = 1/t23069;
                double t23168 = 1/(t23066*t23066);
                double t23169 = b4f*t23120*t23031*(2.0/3.0);
                double t23170 = b2f*c*t23119*(1.0/3.0);
                double t23171 = b1f*c*t23121*t23119*(1.0/6.0);
                double t23172 = b3f*c*t23029*t23119*(1.0/2.0);
                double t23173 = t23170+t23171+t23172+t23169;
                double t23174 = a1f*c*c0f*t23070*t23119*(2.0/3.0);
                double t23175 = a1p*c*c0p*t23042*t23119*(2.0/3.0);
                double t23176 = ccaa1*gcaa*t22948*t23147;
                double t23177 = ccaa2*gamma_aa[index]*t22950*t23045*t23148*2.0;
                double t23178 = ccaa3*gcaa*t22951*t22952*t23045*t23149*3.0;
                double t23179 = t23176+t23177+t23178-ccaa1*gamma_aa[index]*t22950*t23150*t23045-ccaa2*t22950*t22951* \
                   t23152*t23045*t23159-ccaa3*gamma_aa[index]*gcaa*t22951*t22952*t23151*t23045*t23156;
                v_rho_a_gamma_aa_[index] = -(X-1.0)*(c0*pow(rho_a[index],1.0/3.0)*(t23022*t23026+cx1*gx*t22948*t22987- \
                   cx1*gamma_aa[index]*t22950*t22991*t22949+cx2*gamma_aa[index]*t22950*t22949*t22988*2.0-cx2*t22950*t22951* \
                   t22949*t22995*t23002+cx3*gx*t22951*t22952*t22949*t22989*3.0-cx3*gamma_aa[index]*gx*t22951*t22952*t22949* \
                   t22994*t22999)*(4.0/3.0)+c0*pow(rho_a[index],4.0/3.0)*(t23026*(t22974*t22984-t22981*t22974*1/(t22979* \
                   t22979)-t22982*t22974*t22985*6.0+t22974*t22983*t22986*5.0+t22981*t22982*t22974*1/(t22979*t22979*t22979* \
                   t22979)*6.0-t22981*t22974*t22983*1/(t22979*t22979*t22979*t22979*t22979*t22979)*5.0)+t23022*(cxnl1* \
                   gx*t22993*t22987*(-8.0/3.0)+cxnl1*gamma_aa[index]*t22990*t22991*t22949*8.0-cxnl2*gamma_aa[index]*t22990* \
                   t22949*t22988*(3.2E1/3.0)+cxnl2*t22951*t22990*t22949*t22995*t23002*(1.6E1/3.0)+cxnl2*t22950*t22951* \
                   t22949*t22995*t23017+cxnl2*gamma_aa[index]*t22950*t22949*t22995*t23005*2.0-cxnl3*gx*t22951*t22992* \
                   t22949*t22989*2.4E1-cxnl1*gx*t22951*t22992*t22949*t23010*(1.6E1/3.0)+cxnl3*gx*t22951*t22952*t22949* \
                   t22994*t23009*3.0-cxnl2*t22950*t22951*t22949*t23002*t23005*t23018*2.0+cxnl3*gamma_aa[index]*gx*t22951* \
                   t22992*t22949*t22994*t22999*8.0+cxnl3*gamma_aa[index]*gx*t22951*t22952*t22949*t22994*t23014-cxnl3* \
                   gamma_aa[index]*gx*t22951*t22952*t22949*t22999*t23009*t23019*2.0)-cx1*gx*t22993*t22987*(8.0/3.0)+cx1* \
                   gamma_aa[index]*t22990*t22991*t22949*8.0-cx2*gamma_aa[index]*t22990*t22949*t22988*(3.2E1/3.0)+cx2* \
                   t22951*t22990*t22949*t22995*t23002*(1.6E1/3.0)+cx2*t22950*t22951*t22949*t22995*t23017+cx2*gamma_aa[index]* \
                   t22950*t22949*t22995*t23005*2.0-cx1*gx*t22951*t22992*t22949*t23010*(1.6E1/3.0)-cx3*gx*t22951*t22992* \
                   t22949*t22989*2.4E1+cx3*gx*t22951*t22952*t22949*t22994*t23009*3.0-cx2*t22950*t22951*t22949*t23002* \
                   t23005*t23018*2.0+cx3*gamma_aa[index]*gx*t22951*t22992*t22949*t22994*t22999*8.0+cx3*gamma_aa[index]* \
                   gx*t22951*t22952*t22949*t22994*t23014-cx3*gamma_aa[index]*gx*t22951*t22952*t22949*t22999*t23009*t23019* \
                   2.0))+t23138*(t23140+t23141+t23142+t23144-ccab1*gcab*t22993*t23132*(4.0/3.0)-ccab2*gamma_aa[index]* \
                   t22990*t23133*t23078*4.0+ccab1*gamma_aa[index]*t22990*t23135*t23078*(8.0/3.0)+ccab2*t22950*t22951* \
                   t23078*t23089*(t23143+gcab*t22993*(8.0/3.0))-ccab3*gcab*t22951*t22992*t23134*t23078*8.0-ccab1*gcab* \
                   t22951*t22992*t23139*t23078*(4.0/3.0)-ccab2*t22950*t22951*t23145*t23092*t23095*t23078*2.0+ccab3*gamma_aa[index]* \
                   gcab*t22951*t22952*t23078*t23088*(gcab*t22993*4.0+gamma_aa[index]*t22990*t23078*1.2E1+gcab*t22951* \
                   t22992*t23078*8.0)-ccab3*gamma_aa[index]*gcab*t22951*t22952*t23103*t23146*t23078*t23099*2.0)-t23179* \
                   (t23074+t23060*t23057*(t23073-c0p*t23042*t23044*2.0))-(-t23131-t23074+rho_a[index]*((1/(t23111*t23111) \
                   *t23116*(b4p*t23031*1/pow(t23075,5.0/3.0)*(2.0/3.0)+b2p*c*t23117*(1.0/3.0)+b3p*c*t23104*t23117*(1.0/ \
                   2.0)+b1p*c*t23117*1/sqrt(t23077)*(1.0/6.0)))/t23114-a1p*c*c0p*t23117*t23118*(2.0/3.0))*2.0+rho_a[index]* \
                   (-t23129+t23175+t23060*t23057*(t23129+t23174-t23072*t23173*t23167*t23168-a1p*c*c0p*t23042*t23119*(2.0/ \
                   3.0)))+c0p*t23116*t23118*2.0)*(ccab1*gcab*t22948*t23132*(1.0/2.0)+ccab2*gamma_aa[index]*t22950*t23133* \
                   t23078-ccab1*gamma_aa[index]*t22950*t23135*t23078*(1.0/2.0)-ccab2*t22950*t22951*t23095*t23078*t23089+ \
                   ccab3*gcab*t22951*t22952*t23134*t23078*(3.0/2.0)-ccab3*gamma_aa[index]*gcab*t22951*t22952*t23078*t23088* \
                   t23099)*2.0+t23138*(t23140+t23141+t23142+t23144-ccab2*gamma_aa[index]*t22990*t23133*t23078*(4.0/3.0) \
                   +ccab1*gamma_aa[index]*t22990*t23135*t23078*(4.0/3.0)+ccab2*gamma_aa[index]*1/pow(rho_a[index],3.5E1/ \
                   3.0)*t22951*(t23078*t23078)*t23089*(4.0/3.0)-ccab3*gcab*t22951*t22992*t23134*t23078*4.0-ccab1*gcab* \
                   t22951*t22992*t23139*t23078*(4.0/3.0)-ccab2*t22950*t22951*t23145*t23092*t23095*t23078*2.0+ccab3*gamma_aa[index]* \
                   gcab*t22951*t22952*t23078*t23088*(t23143+gcab*t22951*t22992*t23078*4.0)-ccab3*gamma_aa[index]*gcab* \
                   t22951*t22952*t23103*t23146*t23078*t23099*2.0)+rho_a[index]*t23179*(-t23129+t23175+t23060*t23057*(t23129+ \
                   t23174-t23175-t23072*t23173*t23167*t23168))-rho_a[index]*t23136*(ccaa1*gcaa*t22993*t23147*(-8.0/3.0) \
                   +ccaa1*gamma_aa[index]*t22990*t23150*t23045*8.0-ccaa2*gamma_aa[index]*t22990*t23045*t23148*(3.2E1/ \
                   3.0)+ccaa2*t22951*t22990*t23152*t23045*t23159*(1.6E1/3.0)-ccaa1*gcaa*t22951*t22992*t23045*1/(t23047* \
                   t23047*t23047)*(1.6E1/3.0)+ccaa2*t22950*t22951*t23152*t23045*(gcaa*t22993*(1.6E1/3.0)+gamma_aa[index]* \
                   t22990*t23045*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t22950*t23152*t23045*t23162*2.0-ccaa3*gcaa*t22951* \
                   t22992*t23045*t23149*2.4E1+ccaa3*gcaa*t22951*t22952*t23151*t23045*t23166*3.0-ccaa2*t22950*t22951*t23045* \
                   1/(t23054*t23054*t23054)*t23162*t23159*2.0+ccaa3*gamma_aa[index]*gcaa*t22951*t22952*t23151*t23045* \
                   (gcaa*t22993*8.0+gamma_aa[index]*t22990*t23045*3.2E1+gcaa*t22951*t22992*t23045*2.4E1)+ccaa3*gamma_aa[index]* \
                   gcaa*t22951*t22992*t23151*t23045*t23156*8.0-ccaa3*gamma_aa[index]*gcaa*t22951*t22952*1/(t23051*t23051* \
                   t23051)*t23045*t23156*t23166*2.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t23181 = 1/pow(rho_a[index],1.0/3.0);
                double t23182 = c*t23181;
                double t23183 = sqrt(t23182);
                double t23184 = pow(t23182,3.0/2.0);
                double t23185 = c*c;
                double t23186 = 1/pow(rho_a[index],2.0/3.0);
                double t23187 = 1/c0p;
                double t23188 = b1p*t23183;
                double t23189 = b3p*t23184;
                double t23190 = b4p*t23185*t23186;
                double t23191 = b2p*c*t23181;
                double t23192 = t23190+t23191+t23188+t23189;
                double t23193 = 1/t23192;
                double t23194 = t23193*t23187*(1.0/2.0);
                double t23195 = t23194+1.0;
                double t23196 = log(t23195);
                double t23197 = a1p*c*t23181;
                double t23198 = t23197+1.0;
                double t23199 = rho_a[index]*2.0;
                double t23200 = 1/pow(t23199,1.0/3.0);
                double t23201 = c*t23200;
                double t23202 = gcab*gcab;
                double t23203 = 1/pow(rho_a[index],1.6E1/3.0);
                double t23204 = 1/pow(rho_a[index],8.0/3.0);
                double t23205 = gamma_aa[index]*gcab*t23204;
                double t23206 = t23205+1.0;
                double t23207 = gamma_aa[index]*gamma_aa[index];
                double t23208 = gamma_aa[index]*gcab*t23204*2.0;
                double t23209 = t23202*t23203*t23207;
                double t23210 = t23208+t23209+1.0;
                double t23211 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t23212 = gamma_aa[index]*gcab*t23204*3.0;
                double t23213 = gamma_aa[index]*gcab*t23202*t23211*t23207;
                double t23214 = t23202*t23203*t23207*3.0;
                double t23215 = t23212+t23213+t23214+1.0;
                double t23218 = gcab*t23204;
                double t23219 = gamma_aa[index]*t23202*t23203;
                double t23216 = t23218+t23219;
                double t23217 = 1/(t23215*t23215);
                double t23220 = 1/(t23210*t23210);
                double t23221 = gcab*t23204*(3.0/2.0);
                double t23222 = gamma_aa[index]*t23202*t23203*3.0;
                double t23223 = gcab*t23202*t23211*t23207*(3.0/2.0);
                double t23224 = t23221+t23222+t23223;
                double t23225 = pow(2.0,1.0/3.0);
                double t23226 = t23225*2.0;
                double t23227 = t23226-2.0;
                double t23228 = two_13*2.0;
                double t23229 = t23228-2.0;
                double t23230 = 1/t23229;
                double t23231 = 1/c0f;
                double t23232 = b1f*t23183;
                double t23233 = b3f*t23184;
                double t23234 = b4f*t23185*t23186;
                double t23235 = b2f*c*t23181;
                double t23236 = t23232+t23233+t23234+t23235;
                double t23237 = 1/t23236;
                double t23238 = t23231*t23237*(1.0/2.0);
                double t23239 = t23238+1.0;
                double t23240 = log(t23239);
                double t23241 = a1f*c*t23181;
                double t23242 = t23241+1.0;
                double t23243 = c0f*t23240*t23242*2.0;
                double t23244 = c0p*t23196*t23198*2.0;
                double t23245 = gcaa*gcaa;
                double t23246 = gamma_aa[index]*gcaa*t23204;
                double t23247 = t23246+1.0;
                double t23248 = 1/pow(rho_a[index],3.2E1/3.0);
                double t23249 = gamma_aa[index]*gcaa*t23204*2.0;
                double t23250 = t23203*t23207*t23245;
                double t23251 = t23250+t23249+1.0;
                double t23252 = gamma_aa[index]*gcaa*t23204*3.0;
                double t23253 = gamma_aa[index]*gcaa*t23211*t23207*t23245;
                double t23254 = t23203*t23207*t23245*3.0;
                double t23255 = t23252+t23253+t23254+1.0;
                double t23258 = gcaa*t23204*2.0;
                double t23259 = gamma_aa[index]*t23203*t23245*2.0;
                double t23256 = t23258+t23259;
                double t23257 = 1/(t23255*t23255);
                double t23260 = 1/(t23251*t23251);
                double t23261 = gcaa*t23204*3.0;
                double t23262 = gamma_aa[index]*t23203*t23245*6.0;
                double t23263 = gcaa*t23211*t23207*t23245*3.0;
                double t23264 = t23261+t23262+t23263;
                double t23265 = pow(rho_a[index],5.0/3.0);
                double t23266 = C_k*t23265;
                double t23267 = tau_a[index]*1.0E20;
                double t23268 = 1/tau_a[index];
                double t23269 = -t23266+t23267;
                double t23270 = ( (t23269 > 0.0) ?  1.0 : 0.0 ) ;
                double t23271 = C_k*t23270*t23265*t23268;
                double t23272 = t23266-t23267;
                double t23273 = ( (t23272 > 0.0) ?  1.0 : 0.0 ) ;
                double t23274 = t23273*1.0E20;
                double t23275 = t23271+t23274-1.0;
                double t23276 = t23275*t23275;
                double t23277 = t23271+t23274+1.0;
                double t23278 = t23276*t23276;
                double t23279 = gx*gx;
                double t23280 = gamma_aa[index]*gx*t23204;
                double t23281 = t23280+1.0;
                double t23282 = gamma_aa[index]*gx*t23204*2.0;
                double t23283 = t23203*t23207*t23279;
                double t23284 = t23282+t23283+1.0;
                double t23285 = gamma_aa[index]*gx*t23204*3.0;
                double t23286 = gamma_aa[index]*gx*t23211*t23207*t23279;
                double t23287 = t23203*t23207*t23279*3.0;
                double t23288 = t23285+t23286+t23287+1.0;
                double t23291 = gx*t23204*2.0;
                double t23292 = gamma_aa[index]*t23203*t23279*2.0;
                double t23289 = t23291+t23292;
                double t23290 = 1/(t23288*t23288);
                double t23293 = 1/(t23284*t23284);
                double t23294 = gx*t23204*3.0;
                double t23295 = gamma_aa[index]*t23203*t23279*6.0;
                double t23296 = gx*t23211*t23207*t23279*3.0;
                double t23297 = t23294+t23295+t23296;
                double t23298 = 1/(t23281*t23281);
                double t23299 = 1/t23284;
                double t23300 = 1/t23288;
                double t23301 = 1/(t23281*t23281*t23281);
                double t23302 = t23279*t23279;
                double t23303 = t23203*t23279*6.0;
                double t23304 = gamma_aa[index]*gx*t23211*t23279*6.0;
                double t23305 = t23303+t23304;
                double t23306 = t23289*t23289;
                double t23307 = 1/(t23284*t23284*t23284);
                double t23308 = t23297*t23297;
                double t23309 = 1/(t23288*t23288*t23288);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t23244+t23230*t23227*(t23243-c0p*t23196*t23198*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t23187*(1.0/2.0))/(b1p*sqrt(t23201)+b3p*pow(t23201,3.0/2.0)+b4p*t23185* \
                   1/pow(t23199,2.0/3.0)+b2p*c*t23200)+1.0)*(a1p*c*t23200+1.0)*4.0)*((ccab2*t23202*t23203*(1.0/2.0))/ \
                   t23210-ccab1*t23202*t23203*1/(t23206*t23206)*(1.0/2.0)-ccab2*(t23202*t23202)*t23220*t23207*t23248* \
                   (1.0/2.0)+ccab1*gamma_aa[index]*gcab*t23202*t23211*1/(t23206*t23206*t23206)*(1.0/2.0)+(ccab3*gamma_aa[index]* \
                   gcab*t23202*t23211*(3.0/2.0))/t23215+ccab2*1/(t23210*t23210*t23210)*t23202*t23203*t23207*(t23216*t23216) \
                   *2.0-ccab2*gamma_aa[index]*t23202*t23220*t23203*t23216*2.0-ccab3*gcab*t23202*t23211*t23224*t23207* \
                   t23217*3.0-ccab3*gamma_aa[index]*gcab*t23202*t23211*t23207*t23217*(t23202*t23203*(3.0/2.0)+gamma_aa[index]* \
                   gcab*t23202*t23211*(3.0/2.0))+ccab3*gamma_aa[index]*gcab*t23202*t23211*1/(t23215*t23215*t23215)*(t23224* \
                   t23224)*t23207*2.0)*4.0-rho_a[index]*(t23244+t23230*t23227*(t23243-t23244))*((ccaa2*t23203*t23245* \
                   2.0)/t23251-ccaa1*t23203*t23245*1/(t23247*t23247)*2.0-ccaa2*t23260*t23207*(t23245*t23245)*t23248*2.0+ \
                   (ccaa3*gamma_aa[index]*gcaa*t23211*t23245*6.0)/t23255+ccaa1*gamma_aa[index]*gcaa*t23211*t23245*1/(t23247* \
                   t23247*t23247)*2.0+ccaa2*t23203*1/(t23251*t23251*t23251)*t23207*t23245*(t23256*t23256)*2.0-ccaa2*gamma_aa[index]* \
                   t23203*t23260*t23245*t23256*4.0-ccaa3*gcaa*t23211*t23207*t23245*t23264*t23257*6.0-ccaa3*gamma_aa[index]* \
                   gcaa*t23211*t23207*t23245*t23257*(t23203*t23245*6.0+gamma_aa[index]*gcaa*t23211*t23245*6.0)+ccaa3* \
                   gamma_aa[index]*gcaa*t23211*t23207*t23245*1/(t23255*t23255*t23255)*(t23264*t23264)*2.0)*2.0+c0*pow(rho_a[index],4.0/ \
                   3.0)*(X-1.0)*(((t23271+ ( (t23266-tau_a[index]*1.0E20 > 0.0) ? 1.0*1.0E20 : 0.0 ) -1.0)/t23277-t23275* \
                   t23276*1/(t23277*t23277*t23277)*2.0+t23275*1/(t23277*t23277*t23277*t23277*t23277)*t23278)*(cxnl1*t23203* \
                   t23279*t23298*2.0-cxnl2*t23203*t23279*t23299*2.0+cxnl2*t23302*t23207*t23248*t23293*2.0-cxnl2*t23203* \
                   t23207*t23306*t23307*t23279*2.0-cxnl1*gamma_aa[index]*gx*t23211*t23301*t23279*2.0-cxnl3*gamma_aa[index]* \
                   gx*t23300*t23211*t23279*6.0+cxnl2*gamma_aa[index]*t23203*t23293*t23279*t23289*4.0+cxnl3*gx*t23211* \
                   t23207*t23290*t23279*t23297*6.0+cxnl3*gamma_aa[index]*gx*t23211*t23305*t23207*t23290*t23279-cxnl3* \
                   gamma_aa[index]*gx*t23211*t23207*t23308*t23309*t23279*2.0)+cx1*t23203*t23279*t23298*2.0-cx2*t23203* \
                   t23279*t23299*2.0+cx2*t23302*t23207*t23248*t23293*2.0-cx2*t23203*t23207*t23306*t23307*t23279*2.0-cx1* \
                   gamma_aa[index]*gx*t23211*t23301*t23279*2.0-cx3*gamma_aa[index]*gx*t23300*t23211*t23279*6.0+cx2*gamma_aa[index]* \
                   t23203*t23293*t23279*t23289*4.0+cx3*gx*t23211*t23207*t23290*t23279*t23297*6.0+cx3*gamma_aa[index]* \
                   gx*t23211*t23305*t23207*t23290*t23279-cx3*gamma_aa[index]*gx*t23211*t23207*t23308*t23309*t23279*2.0) \
                   *2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t23311 = 1/pow(rho_a[index],8.0/3.0);
                double t23312 = gamma_aa[index]*gamma_aa[index];
                double t23313 = gx*gx;
                double t23314 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t23315 = 1/pow(rho_a[index],1.6E1/3.0);
                double t23316 = pow(rho_a[index],5.0/3.0);
                double t23317 = C_k*t23316;
                double t23318 = tau_a[index]*1.0E20;
                double t23319 = -t23317+t23318;
                double t23320 = 1/tau_a[index];
                double t23321 = 0.0 ;
                double t23322 = C_k*C_k;
                double t23323 = pow(rho_a[index],7.0/3.0);
                double t23324 = pow(rho_a[index],2.0/3.0);
                double t23325 = 0.0 ;
                double t23326 = 1/(tau_a[index]*tau_a[index]);
                double t23327 = ( (t23319 > 0.0) ?  1.0 : 0.0 ) ;
                double t23328 = C_k*t23320*t23316*t23327;
                double t23329 = t23317-t23318;
                double t23330 = ( (t23329 > 0.0) ?  1.0 : 0.0 ) ;
                double t23331 = t23330*1.0E20;
                double t23332 = t23331+t23328+1.0;
                double t23333 = 1/(t23332*t23332);
                double t23334 = C_k*t23321*t23324*(5.0E40/3.0);
                double t23335 = t23322*t23323*t23325*t23326*(5.0/3.0);
                double t23336 = C_k*t23320*t23324*t23325*(5.0E20/3.0);
                double t23339 = t23320*t23321*t23322*t23323*(5.0E20/3.0);
                double t23340 = C_k*t23324*t23326*t23327*(5.0/3.0);
                double t23337 = -t23340+t23334+t23335+t23336-t23339;
                double t23338 = t23331+t23328-1.0;
                double t23341 = t23338*t23338;
                double t23342 = t23341*t23341;
                double t23343 = t23325*1.0E40;
                double t23344 = C_k*t23316*t23326*t23327;
                double t23350 = C_k*t23320*t23316*t23325*1.0E20;
                double t23345 = -t23350+t23343+t23344;
                double t23346 = C_k*t23324*t23325*(5.0E20/3.0);
                double t23347 = C_k*t23320*t23324*t23327*(5.0/3.0);
                double t23351 = t23320*t23322*t23323*t23325*(5.0/3.0);
                double t23348 = -t23351+t23346+t23347;
                double t23349 = 1/(t23332*t23332*t23332);
                double t23352 = 1/(t23332*t23332*t23332*t23332);
                double t23353 = 1/(t23332*t23332*t23332*t23332*t23332);
                double t23354 = 1/(t23332*t23332*t23332*t23332*t23332*t23332);
                double t23355 = gamma_aa[index]*gx*t23311;
                double t23356 = t23355+1.0;
                double t23357 = 1/t23356;
                double t23358 = gamma_aa[index]*gx*t23311*3.0;
                double t23359 = gamma_aa[index]*gx*t23312*t23313*t23314;
                double t23360 = t23312*t23313*t23315*3.0;
                double t23361 = t23360+t23358+t23359+1.0;
                double t23362 = 1/t23361;
                double t23363 = gamma_aa[index]*gx*t23311*2.0;
                double t23364 = t23312*t23313*t23315;
                double t23365 = t23363+t23364+1.0;
                double t23366 = 1/t23365;
                double t23367 = 1/pow(rho_a[index],1.9E1/3.0);
                double t23368 = 1/pow(rho_a[index],1.1E1/3.0);
                double t23369 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t23370 = cxnl1*gamma_aa[index]*gx*t23311*t23357;
                double t23371 = cxnl3*gamma_aa[index]*gx*t23312*t23313*t23314*t23362;
                double t23372 = cxnl2*t23312*t23313*t23315*t23366;
                double t23373 = cxnl0+t23370+t23371+t23372;
                double t23374 = 1/t23332;
                double t23375 = t23345*t23374;
                double t23376 = t23341*t23352*t23345*t23338*6.0;
                double t23377 = t23342*t23353*t23345*5.0;
                double t23378 = t23375+t23376+t23377-t23333*t23345*t23338-t23341*t23345*t23349*6.0-t23342*t23345* \
                   t23354*t23338*5.0;
                v_rho_a_tau_a_[index] = -(c0*pow(rho_a[index],4.0/3.0)*(t23373*(t23337*t23374+t23342*t23353*t23337* \
                   5.0+t23333*t23345*t23348*2.0-t23333*t23337*t23338-t23341*t23337*t23349*6.0-t23341*t23352*t23345*t23348* \
                   3.6E1+t23341*t23352*t23337*t23338*6.0+t23342*t23345*t23354*t23348*5.0E1-t23342*t23354*t23337*t23338* \
                   5.0+t23345*t23338*t23348*t23349*1.0E1-1/(t23332*t23332*t23332*t23332*t23332*t23332*t23332)*t23342* \
                   t23345*t23338*t23348*3.0E1+t23341*t23353*t23345*t23338*t23348*4.0)+t23378*(cxnl1*gamma_aa[index]*gx* \
                   t23357*t23368*(8.0/3.0)+cxnl2*t23312*t23313*t23366*t23367*(1.6E1/3.0)-cxnl1*t23312*t23313*1/(t23356* \
                   t23356)*t23367*(8.0/3.0)-cxnl2*t23312*t23313*t23315*1/(t23365*t23365)*(gamma_aa[index]*gx*t23368*(1.6E1/ \
                   3.0)+t23312*t23313*t23367*(1.6E1/3.0))+cxnl3*gamma_aa[index]*gx*t23312*t23313*t23362*t23369*8.0-cxnl3* \
                   gamma_aa[index]*gx*t23312*t23313*t23314*1/(t23361*t23361)*(gamma_aa[index]*gx*t23368*8.0+t23312*t23313* \
                   t23367*1.6E1+gamma_aa[index]*gx*t23312*t23313*t23369*8.0)))-c0*pow(rho_a[index],1.0/3.0)*t23373*t23378* \
                   (4.0/3.0))*(X-1.0);
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                double t23380 = 1/pow(rho_a[index],8.0/3.0);
                double t23381 = gamma_aa[index]*gamma_aa[index];
                double t23382 = gx*gx;
                double t23383 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t23384 = 1/pow(rho_a[index],1.6E1/3.0);
                double t23385 = tau_a[index]*1.0E20;
                double t23386 = pow(rho_a[index],5.0/3.0);
                double t23387 = C_k*t23386;
                double t23388 = t23385-t23387;
                double t23389 = 0.0 ;
                double t23390 = -t23385+t23387;
                double t23391 = ( (t23390 > 0.0) ?  1.0 : 0.0 ) ;
                double t23392 = t23391*1.0E20;
                double t23393 = 1/tau_a[index];
                double t23394 = ( (t23388 > 0.0) ?  1.0 : 0.0 ) ;
                double t23395 = C_k*t23393*t23394*t23386;
                double t23396 = t23392+t23395+1.0;
                double t23397 = t23389*t23389;
                double t23398 = t23392+t23395-1.0;
                double t23399 = 1/(t23396*t23396*t23396);
                double t23400 = 0.0 ;
                double t23401 = t23398*t23398;
                double t23402 = t23401*t23401;
                double t23403 = 1/(t23396*t23396*t23396*t23396);
                double t23404 = 1/(t23396*t23396*t23396*t23396*t23396);
                double t23405 = 1/(t23396*t23396*t23396*t23396*t23396*t23396);
                double t23406 = 1/(t23396*t23396);
                double t23407 = pow(rho_a[index],4.0/3.0);
                double t23408 = gamma_aa[index]*gx*t23380;
                double t23409 = t23408+1.0;
                double t23410 = 1/t23409;
                double t23411 = cxnl1*gamma_aa[index]*gx*t23410*t23380;
                double t23412 = gamma_aa[index]*gx*t23380*3.0;
                double t23413 = gamma_aa[index]*gx*t23381*t23382*t23383;
                double t23414 = t23381*t23382*t23384*3.0;
                double t23415 = t23412+t23413+t23414+1.0;
                double t23416 = 1/t23415;
                double t23417 = cxnl3*gamma_aa[index]*gx*t23416*t23381*t23382*t23383;
                double t23418 = gamma_aa[index]*gx*t23380*2.0;
                double t23419 = t23381*t23382*t23384;
                double t23420 = t23418+t23419+1.0;
                double t23421 = 1/t23420;
                double t23422 = cxnl2*t23421*t23381*t23382*t23384;
                double t23423 = cxnl0+t23411+t23422+t23417;
                double t23424 = 1/t23396;
                double t23425 = 1/(tau_a[index]*tau_a[index]);
                double t23427 = t23389*1.0E40;
                double t23428 = C_k*t23393*t23386*t23389*1.0E20;
                double t23429 = C_k*t23425*t23394*t23386;
                double t23426 = t23427-t23428+t23429;
                double t23430 = t23426*t23426;
                double t23431 = 1/(t23396*t23396*t23396*t23396*t23396*t23396*t23396);
                double t23432 = t23400*1.0E60;
                double t23433 = C_k*t23425*t23386*t23389*2.0E20;
                double t23434 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t23436 = C_k*t23400*t23393*t23386*1.0E40;
                double t23437 = C_k*t23434*t23394*t23386*2.0;
                double t23435 = t23432+t23433-t23436-t23437;
                double t23438 = X-1.0;
                double t23439 = t23428-t23429;
                v_tau_a_tau_a_[index] = t23438*(c0*t23423*t23407*( 0.0 +t23406*t23397*2.0E80+t23400*t23402*t23404* \
                   5.0E60-t23400*t23401*t23399*6.0E60-t23401*t23403*t23397*3.6E81-t23400*t23406*t23398*1.0E60+t23402* \
                   t23405*t23397*5.0E81+t23397*t23398*t23399*1.0E81+t23400*t23401*t23403*t23398*6.0E60-t23400*t23402* \
                   t23405*t23398*5.0E60+t23401*t23404*t23397*t23398*4.0E80-t23402*t23431*t23397*t23398*3.0E81)+c0*t23423* \
                   t23407*(t23430*t23406*2.0+t23424*t23435-t23401*t23403*t23430*3.6E1+t23402*t23430*t23405*5.0E1+t23402* \
                   t23404*t23435*5.0-t23401*t23435*t23399*6.0-t23406*t23435*t23398+t23430*t23398*t23399*1.0E1+t23401* \
                   t23430*t23404*t23398*4.0-t23402*t23430*t23431*t23398*3.0E1+t23401*t23403*t23435*t23398*6.0-t23402* \
                   t23405*t23435*t23398*5.0))-c0*t23423*t23407*t23438*(t23406*t23439*t23389*2.0E40-t23401*t23403*t23439* \
                   t23389*3.6E41+t23402*t23405*t23439*t23389*5.0E41+t23439*t23389*t23398*t23399*1.0E41+t23401*t23404* \
                   t23439*t23389*t23398*4.0E40-t23402*t23431*t23439*t23389*t23398*3.0E41);
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    double t23441 = tau_a[index]*1.0E20;
                    double t23442 = pow(rho_a[index],5.0/3.0);
                    double t23443 = C_k*t23442;
                    double t23444 = t23441-t23443;
                    double t23445 = -t23441+t23443;
                    double t23446 = ( (t23445 > 0.0) ?  1.0 : 0.0 ) ;
                    double t23447 = t23446*1.0E20;
                    double t23448 = 1/tau_a[index];
                    double t23449 = ( (t23444 > 0.0) ?  1.0 : 0.0 ) ;
                    double t23450 = C_k*t23442*t23448*t23449;
                    double t23451 = t23450+t23447-1.0;
                    double t23452 = t23450+t23447+1.0;
                    double t23453 = 0.0 ;
                    double t23454 = t23451*t23451;
                    double t23455 = t23454*t23454;
                    double t23456 = 1/pow(rho_a[index],8.0/3.0);
                    double t23457 = gx*gx;
                    double t23458 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t23459 = gamma_aa[index]*gamma_aa[index];
                    double t23460 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t23461 = gamma_aa[index]*gx*t23456;
                    double t23462 = t23461+1.0;
                    double t23463 = gamma_aa[index]*gx*t23456*3.0;
                    double t23464 = gamma_aa[index]*gx*t23460*t23457*t23459;
                    double t23465 = t23457*t23458*t23459*3.0;
                    double t23466 = t23463+t23464+t23465+1.0;
                    double t23467 = gamma_aa[index]*gx*t23456*2.0;
                    double t23468 = t23457*t23458*t23459;
                    double t23469 = t23467+t23468+1.0;
                    double t23470 = pow(rho_a[index],4.0/3.0);
                    double t23471 = X-1.0;
                    double t23472 = 1/t23462;
                    double t23473 = cxnl1*gx*t23472*t23456;
                    double t23474 = 1/t23469;
                    double t23475 = cxnl2*gamma_aa[index]*t23474*t23457*t23458*2.0;
                    double t23476 = 1/t23466;
                    double t23477 = cxnl3*gx*t23460*t23457*t23476*t23459*3.0;
                    double t23478 = 1/(t23462*t23462);
                    double t23479 = gx*t23456*3.0;
                    double t23480 = gamma_aa[index]*t23457*t23458*6.0;
                    double t23481 = gx*t23460*t23457*t23459*3.0;
                    double t23482 = t23480+t23481+t23479;
                    double t23483 = 1/(t23466*t23466);
                    double t23484 = gx*t23456*2.0;
                    double t23485 = gamma_aa[index]*t23457*t23458*2.0;
                    double t23486 = t23484+t23485;
                    double t23487 = 1/(t23469*t23469);
                    double t23488 = t23473+t23475+t23477-cxnl1*gamma_aa[index]*t23457*t23458*t23478-cxnl2*t23457*t23458* \
                       t23459*t23486*t23487-cxnl3*gamma_aa[index]*gx*t23460*t23482*t23483*t23457*t23459;
                    double t23489 = 1/t23452;
                    double t23490 = t23453*1.0E40;
                    double t23491 = 1/(tau_a[index]*tau_a[index]);
                    double t23492 = C_k*t23442*t23491*t23449;
                    double t23495 = C_k*t23442*t23453*t23448*1.0E20;
                    double t23493 = t23490+t23492-t23495;
                    double t23494 = 1/(t23452*t23452);
                    double t23496 = 1/(t23452*t23452*t23452);
                    double t23497 = 1/(t23452*t23452*t23452*t23452);
                    double t23498 = 1/(t23452*t23452*t23452*t23452*t23452);
                    double t23499 = 1/(t23452*t23452*t23452*t23452*t23452*t23452);
                    v_gamma_aa_tau_a_[index] = c0*t23470*t23471*t23488*( 0.0 -t23451*t23453*t23494*1.0E40-t23453*t23454* \
                       t23496*6.0E40+t23453*t23455*t23498*5.0E40+t23451*t23453*t23454*t23497*6.0E40-t23451*t23453*t23455* \
                       t23499*5.0E40)+c0*t23470*t23471*t23488*(t23493*t23489-t23451*t23493*t23494-t23454*t23493*t23496*6.0+ \
                       t23455*t23493*t23498*5.0+t23451*t23454*t23493*t23497*6.0-t23451*t23455*t23493*t23499*5.0);
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void TauHCTH_Functional::computeUKSFunctional(boost::shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double X = params_[0].second;
    double C_k = params_[1].second;
    double c0 = params_[2].second;
    double two_13 = params_[3].second;
    double d2fz0 = params_[4].second;
    double c = params_[5].second;
    double Aa = params_[6].second;
    double a1a = params_[7].second;
    double b1a = params_[8].second;
    double b2a = params_[9].second;
    double b3a = params_[10].second;
    double b4a = params_[11].second;
    double c0p = params_[12].second;
    double a1p = params_[13].second;
    double b1p = params_[14].second;
    double b2p = params_[15].second;
    double b3p = params_[16].second;
    double b4p = params_[17].second;
    double c0f = params_[18].second;
    double a1f = params_[19].second;
    double b1f = params_[20].second;
    double b2f = params_[21].second;
    double b3f = params_[22].second;
    double b4f = params_[23].second;
    double gcab = params_[24].second;
    double gcaa = params_[25].second;
    double gx = params_[26].second;
    double ccab0 = params_[27].second;
    double ccab1 = params_[28].second;
    double ccab2 = params_[29].second;
    double ccab3 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double cx0 = params_[35].second;
    double cx1 = params_[36].second;
    double cx2 = params_[37].second;
    double cx3 = params_[38].second;
    double cxnl0 = params_[39].second;
    double cxnl1 = params_[40].second;
    double cxnl2 = params_[41].second;
    double cxnl3 = params_[42].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t16194 = pow(rho_a[index],5.0/3.0);
            double t16195 = C_k*t16194;
            double t16196 = tau_a[index]*1.0E20;
            double t16197 = 1/tau_a[index];
            double t16198 = -t16195+t16196;
            double t16199 = ( (t16198 > 0.0) ?  1.0 : 0.0 ) ;
            double t16200 = C_k*t16194*t16197*t16199;
            double t16201 = t16195-t16196;
            double t16202 = ( (t16201 > 0.0) ?  1.0 : 0.0 ) ;
            double t16203 = t16202*1.0E20;
            double t16204 = t16200+t16203-1.0;
            double t16205 = t16204*t16204;
            double t16206 = t16200+t16203+1.0;
            double t16207 = t16205*t16205;
            double t16208 = 1/pow(rho_a[index],8.0/3.0);
            double t16209 = gamma_aa[index]*gamma_aa[index];
            double t16210 = gx*gx;
            double t16211 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t16212 = 1/pow(rho_a[index],1.6E1/3.0);
            double t16213 = gamma_aa[index]*gx*t16208;
            double t16214 = t16213+1.0;
            double t16215 = 1/t16214;
            double t16216 = gamma_aa[index]*gx*t16208*3.0;
            double t16217 = gamma_aa[index]*gx*t16210*t16211*t16209;
            double t16218 = t16210*t16212*t16209*3.0;
            double t16219 = t16216+t16217+t16218+1.0;
            double t16220 = 1/t16219;
            double t16221 = gamma_aa[index]*gx*t16208*2.0;
            double t16222 = t16210*t16212*t16209;
            double t16223 = t16221+t16222+1.0;
            double t16224 = 1/t16223;
            double t16225 = pow(rho_b[index],5.0/3.0);
            double t16226 = C_k*t16225;
            double t16227 = t16226-t16196;
            double t16228 = ( (t16227 > 0.0) ?  1.0 : 0.0 ) ;
            double t16229 = t16228*1.0E20;
            double t16230 = 1/tau_b[index];
            double t16231 = tau_b[index]*1.0E20;
            double t16232 = t16231-t16226;
            double t16233 = ( (t16232 > 0.0) ?  1.0 : 0.0 ) ;
            double t16234 = C_k*t16230*t16233*t16225;
            double t16235 = t16234+t16229-1.0;
            double t16236 = t16235*t16235;
            double t16237 = t16234+t16229+1.0;
            double t16238 = t16236*t16236;
            double t16239 = 1/pow(rho_b[index],8.0/3.0);
            double t16240 = gamma_bb[index]*gamma_bb[index];
            double t16241 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t16242 = 1/pow(rho_b[index],1.6E1/3.0);
            double t16243 = gamma_bb[index]*gx*t16239;
            double t16244 = t16243+1.0;
            double t16245 = 1/t16244;
            double t16246 = gamma_bb[index]*gx*t16239*3.0;
            double t16247 = gamma_bb[index]*gx*t16210*t16240*t16241;
            double t16248 = t16210*t16240*t16242*3.0;
            double t16249 = t16246+t16247+t16248+1.0;
            double t16250 = 1/t16249;
            double t16251 = gamma_bb[index]*gx*t16239*2.0;
            double t16252 = t16210*t16240*t16242;
            double t16253 = t16251+t16252+1.0;
            double t16254 = 1/t16253;
            double t16255 = 1/pow(rho_a[index],1.0/3.0);
            double t16256 = c*t16255;
            double t16257 = sqrt(t16256);
            double t16258 = pow(t16256,3.0/2.0);
            double t16259 = c*c;
            double t16260 = 1/pow(rho_a[index],2.0/3.0);
            double t16261 = 1/c0p;
            double t16262 = b1p*t16257;
            double t16263 = b3p*t16258;
            double t16264 = b4p*t16260*t16259;
            double t16265 = b2p*c*t16255;
            double t16266 = t16262+t16263+t16264+t16265;
            double t16267 = 1/t16266;
            double t16268 = t16261*t16267*(1.0/2.0);
            double t16269 = t16268+1.0;
            double t16270 = log(t16269);
            double t16271 = a1p*c*t16255;
            double t16272 = t16271+1.0;
            double t16273 = pow(2.0,1.0/3.0);
            double t16274 = t16273*2.0;
            double t16275 = t16274-2.0;
            double t16276 = two_13*2.0;
            double t16277 = t16276-2.0;
            double t16278 = 1/t16277;
            double t16279 = 1/c0f;
            double t16280 = 1/pow(rho_b[index],1.0/3.0);
            double t16281 = c*t16280;
            double t16282 = sqrt(t16281);
            double t16283 = pow(t16281,3.0/2.0);
            double t16284 = 1/pow(rho_b[index],2.0/3.0);
            double t16285 = b1p*t16282;
            double t16286 = b3p*t16283;
            double t16287 = b4p*t16284*t16259;
            double t16288 = b2p*c*t16280;
            double t16289 = t16285+t16286+t16287+t16288;
            double t16290 = 1/t16289;
            double t16291 = t16261*t16290*(1.0/2.0);
            double t16292 = t16291+1.0;
            double t16293 = log(t16292);
            double t16294 = a1p*c*t16280;
            double t16295 = t16294+1.0;
            double t16296 = c0p*t16293*t16295*2.0;
            double t16297 = rho_a[index]+rho_b[index];
            double t16298 = 1/pow(t16297,1.0/3.0);
            double t16299 = c*t16298;
            double t16300 = sqrt(t16299);
            double t16301 = pow(t16299,3.0/2.0);
            double t16302 = 1/pow(t16297,2.0/3.0);
            double t16303 = b1p*t16300;
            double t16304 = b3p*t16301;
            double t16305 = b4p*t16302*t16259;
            double t16306 = b2p*c*t16298;
            double t16307 = t16303+t16304+t16305+t16306;
            double t16308 = 1/t16307;
            double t16309 = t16261*t16308*(1.0/2.0);
            double t16310 = t16309+1.0;
            double t16311 = log(t16310);
            double t16312 = a1p*c*t16298;
            double t16313 = t16312+1.0;
            double t16314 = c0p*t16311*t16313*2.0;
            double t16315 = rho_a[index]-rho_b[index];
            double t16316 = t16315*t16315;
            double t16317 = 1/t16297;
            double t16318 = t16315*t16317;
            double t16319 = 1/(t16297*t16297*t16297*t16297);
            double t16320 = t16316*t16316;
            double t16321 = t16318+1.0;
            double t16322 = pow(t16321,4.0/3.0);
            double t16323 = -t16318+1.0;
            double t16324 = pow(t16323,4.0/3.0);
            double t16325 = t16322+t16324-2.0;
            double t16328 = gamma_aa[index]*t16208*(1.0/2.0);
            double t16329 = gamma_bb[index]*t16239*(1.0/2.0);
            double t16326 = t16328+t16329;
            double t16327 = gcab*gcab;
            double t16330 = t16326*t16326;
            double t16331 = c0p*t16270*t16272*2.0;
            double t16332 = b1f*t16257;
            double t16333 = b3f*t16258;
            double t16334 = b4f*t16260*t16259;
            double t16335 = b2f*c*t16255;
            double t16336 = t16332+t16333+t16334+t16335;
            double t16337 = 1/t16336;
            double t16338 = t16337*t16279*(1.0/2.0);
            double t16339 = t16338+1.0;
            double t16340 = log(t16339);
            double t16341 = a1f*c*t16255;
            double t16342 = t16341+1.0;
            double t16343 = t16331-c0f*t16340*t16342*2.0;
            double t16344 = t16331-t16343*t16275*t16278;
            double t16345 = gcaa*gcaa;
            double t16346 = b1f*t16282;
            double t16347 = b3f*t16283;
            double t16348 = b4f*t16284*t16259;
            double t16349 = b2f*c*t16280;
            double t16350 = t16346+t16347+t16348+t16349;
            double t16351 = 1/t16350;
            double t16352 = t16351*t16279*(1.0/2.0);
            double t16353 = t16352+1.0;
            double t16354 = log(t16353);
            double t16355 = a1f*c*t16280;
            double t16356 = t16355+1.0;
            double t16357 = t16296-c0f*t16354*t16356*2.0;
            double t16358 = t16296-t16275*t16357*t16278;
            functional_[index] = (rho_a[index]*t16344+rho_b[index]*t16358-t16297*(t16314-t16320*t16325*t16319* \
               t16278*(t16314-c0f*log((t16279*(1.0/2.0))/(b1f*t16300+b3f*t16301+b2f*c*t16298+b4f*t16302*t16259)+1.0) \
               *(a1f*c*t16298+1.0)*2.0)+(Aa*t16325*t16278*log((1.0/2.0)/(Aa*(b1a*t16300+b3a*t16301+b2a*c*t16298+b4a* \
               t16302*t16259))+1.0)*(t16320*t16319-1.0)*(a1a*c*t16298+1.0)*2.0)/d2fz0))*(ccab0+(ccab1*gcab*t16326) \
               /(gcab*t16326+1.0)+(ccab2*t16330*t16327)/(gcab*t16326*2.0+t16330*t16327+1.0)+(ccab3*gcab*t16330*t16326* \
               t16327)/(gcab*t16326*3.0+t16330*t16327*3.0+gcab*t16330*t16326*t16327+1.0))-(c0*pow(rho_a[index],4.0/ \
               3.0)*(cx0+(t16204/t16206-t16204*t16205*1/(t16206*t16206*t16206)*2.0+t16204*1/(t16206*t16206*t16206* \
               t16206*t16206)*t16207)*(cxnl0+cxnl1*gamma_aa[index]*gx*t16215*t16208+cxnl2*t16210*t16212*t16224*t16209+ \
               cxnl3*gamma_aa[index]*gx*t16210*t16211*t16220*t16209)+cx1*gamma_aa[index]*gx*t16215*t16208+cx2*t16210* \
               t16212*t16224*t16209+cx3*gamma_aa[index]*gx*t16210*t16211*t16220*t16209)+c0*pow(rho_b[index],4.0/3.0) \
               *(cx0+(t16235/t16237-t16235*t16236*1/(t16237*t16237*t16237)*2.0+t16235*1/(t16237*t16237*t16237*t16237* \
               t16237)*t16238)*(cxnl0+cxnl1*gamma_bb[index]*gx*t16245*t16239+cxnl2*t16210*t16240*t16242*t16254+cxnl3* \
               gamma_bb[index]*gx*t16210*t16240*t16241*t16250)+cx1*gamma_bb[index]*gx*t16245*t16239+cx2*t16210*t16240* \
               t16242*t16254+cx3*gamma_bb[index]*gx*t16210*t16240*t16241*t16250))*(X-1.0)-rho_a[index]*t16344*(ccaa0+ \
               (ccaa2*t16212*t16209*t16345)/(gamma_aa[index]*gcaa*t16208*2.0+t16212*t16209*t16345+1.0)+(ccaa1*gamma_aa[index]* \
               gcaa*t16208)/(gamma_aa[index]*gcaa*t16208+1.0)+(ccaa3*gamma_aa[index]*gcaa*t16211*t16209*t16345)/(gamma_aa[index]* \
               gcaa*t16208*3.0+t16212*t16209*t16345*3.0+gamma_aa[index]*gcaa*t16211*t16209*t16345+1.0))-rho_b[index]* \
               t16358*(ccaa0+(ccaa2*t16240*t16242*t16345)/(gamma_bb[index]*gcaa*t16239*2.0+t16240*t16242*t16345+1.0) \
               +(ccaa1*gamma_bb[index]*gcaa*t16239)/(gamma_bb[index]*gcaa*t16239+1.0)+(ccaa3*gamma_bb[index]*gcaa* \
               t16240*t16241*t16345)/(gamma_bb[index]*gcaa*t16239*3.0+t16240*t16242*t16345*3.0+gamma_bb[index]*gcaa* \
               t16240*t16241*t16345+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t21290 = 1/pow(rho_a[index],1.0/3.0);
            double t21291 = c*t21290;
            double t21292 = sqrt(t21291);
            double t21293 = pow(t21291,3.0/2.0);
            double t21294 = c*c;
            double t21295 = 1/pow(rho_a[index],2.0/3.0);
            double t21296 = 1/c0p;
            double t21297 = b1p*t21292;
            double t21298 = b3p*t21293;
            double t21299 = b4p*t21294*t21295;
            double t21300 = b2p*c*t21290;
            double t21301 = t21300+t21297+t21298+t21299;
            double t21302 = 1/t21301;
            double t21303 = t21302*t21296*(1.0/2.0);
            double t21304 = t21303+1.0;
            double t21305 = log(t21304);
            double t21306 = a1p*c*t21290;
            double t21307 = t21306+1.0;
            double t21308 = 1/pow(rho_a[index],8.0/3.0);
            double t21309 = gamma_aa[index]*gamma_aa[index];
            double t21310 = gcaa*gcaa;
            double t21311 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t21312 = 1/pow(rho_a[index],1.6E1/3.0);
            double t21313 = pow(rho_a[index],5.0/3.0);
            double t21314 = C_k*t21313;
            double t21315 = tau_a[index]*1.0E20;
            double t21316 = 1/tau_a[index];
            double t21317 = -t21314+t21315;
            double t21318 = ( (t21317 > 0.0) ?  1.0 : 0.0 ) ;
            double t21319 = C_k*t21313*t21316*t21318;
            double t21320 = t21314-t21315;
            double t21321 = ( (t21320 > 0.0) ?  1.0 : 0.0 ) ;
            double t21322 = t21321*1.0E20;
            double t21323 = t21322+t21319-1.0;
            double t21324 = t21323*t21323;
            double t21325 = t21322+t21319+1.0;
            double t21326 = t21324*t21324;
            double t21327 = gx*gx;
            double t21328 = gamma_aa[index]*gx*t21308;
            double t21329 = t21328+1.0;
            double t21330 = 1/t21329;
            double t21331 = gamma_aa[index]*gx*t21308*3.0;
            double t21332 = gamma_aa[index]*gx*t21311*t21309*t21327;
            double t21333 = t21312*t21309*t21327*3.0;
            double t21334 = t21331+t21332+t21333+1.0;
            double t21335 = 1/t21334;
            double t21336 = gamma_aa[index]*gx*t21308*2.0;
            double t21337 = t21312*t21309*t21327;
            double t21338 = t21336+t21337+1.0;
            double t21339 = 1/t21338;
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t21292+ \
               b3f*t21293+b2f*c*t21290+b4f*t21294*t21295))+1.0)*(a1f*c*t21290+1.0)*2.0-c0p*t21305*t21307*2.0))/(two_13* \
               2.0-2.0)+c0p*t21305*t21307*2.0)*(ccaa0+(ccaa2*t21310*t21312*t21309)/(gamma_aa[index]*gcaa*t21308*2.0+ \
               t21310*t21312*t21309+1.0)+(ccaa1*gamma_aa[index]*gcaa*t21308)/(gamma_aa[index]*gcaa*t21308+1.0)+(ccaa3* \
               gamma_aa[index]*gcaa*t21310*t21311*t21309)/(gamma_aa[index]*gcaa*t21308*3.0+t21310*t21312*t21309*3.0+ \
               gamma_aa[index]*gcaa*t21310*t21311*t21309+1.0))-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cx0+(t21323/ \
               t21325-t21323*t21324*1/(t21325*t21325*t21325)*2.0+t21323*1/(t21325*t21325*t21325*t21325*t21325)*t21326) \
               *(cxnl0+cxnl1*gamma_aa[index]*gx*t21330*t21308+cxnl2*t21312*t21309*t21327*t21339+cxnl3*gamma_aa[index]* \
               gx*t21311*t21335*t21309*t21327)+cx1*gamma_aa[index]*gx*t21330*t21308+cx2*t21312*t21309*t21327*t21339+ \
               cx3*gamma_aa[index]*gx*t21311*t21335*t21309*t21327);
        } else if (rho_b[index] > cutoff_) {
            double t20202 = 1/pow(rho_b[index],1.0/3.0);
            double t20203 = c*t20202;
            double t20204 = sqrt(t20203);
            double t20205 = pow(t20203,3.0/2.0);
            double t20206 = c*c;
            double t20207 = 1/pow(rho_b[index],2.0/3.0);
            double t20208 = 1/c0p;
            double t20209 = b1p*t20204;
            double t20210 = b3p*t20205;
            double t20211 = b4p*t20206*t20207;
            double t20212 = b2p*c*t20202;
            double t20213 = t20210+t20211+t20212+t20209;
            double t20214 = 1/t20213;
            double t20215 = t20214*t20208*(1.0/2.0);
            double t20216 = t20215+1.0;
            double t20217 = log(t20216);
            double t20218 = a1p*c*t20202;
            double t20219 = t20218+1.0;
            double t20220 = 1/pow(rho_b[index],8.0/3.0);
            double t20221 = gamma_bb[index]*gamma_bb[index];
            double t20222 = gcaa*gcaa;
            double t20223 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t20224 = 1/pow(rho_b[index],1.6E1/3.0);
            double t20225 = pow(rho_b[index],5.0/3.0);
            double t20226 = C_k*t20225;
            double t20235 = tau_a[index]*1.0E20;
            double t20227 = t20226-t20235;
            double t20228 = ( (t20227 > 0.0) ?  1.0 : 0.0 ) ;
            double t20229 = t20228*1.0E20;
            double t20230 = 1/tau_b[index];
            double t20231 = tau_b[index]*1.0E20;
            double t20232 = t20231-t20226;
            double t20233 = ( (t20232 > 0.0) ?  1.0 : 0.0 ) ;
            double t20234 = C_k*t20230*t20233*t20225;
            double t20236 = t20234+t20229-1.0;
            double t20237 = t20236*t20236;
            double t20238 = t20234+t20229+1.0;
            double t20239 = t20237*t20237;
            double t20240 = gx*gx;
            double t20241 = gamma_bb[index]*gx*t20220;
            double t20242 = t20241+1.0;
            double t20243 = 1/t20242;
            double t20244 = gamma_bb[index]*gx*t20220*3.0;
            double t20245 = gamma_bb[index]*gx*t20221*t20240*t20223;
            double t20246 = t20221*t20240*t20224*3.0;
            double t20247 = t20244+t20245+t20246+1.0;
            double t20248 = 1/t20247;
            double t20249 = gamma_bb[index]*gx*t20220*2.0;
            double t20250 = t20221*t20240*t20224;
            double t20251 = t20250+t20249+1.0;
            double t20252 = 1/t20251;
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t20204+ \
               b3f*t20205+b2f*c*t20202+b4f*t20206*t20207))+1.0)*(a1f*c*t20202+1.0)*2.0-c0p*t20217*t20219*2.0))/(two_13* \
               2.0-2.0)+c0p*t20217*t20219*2.0)*(ccaa0+(ccaa2*t20221*t20222*t20224)/(gamma_bb[index]*gcaa*t20220*2.0+ \
               t20221*t20222*t20224+1.0)+(ccaa1*gamma_bb[index]*gcaa*t20220)/(gamma_bb[index]*gcaa*t20220+1.0)+(ccaa3* \
               gamma_bb[index]*gcaa*t20221*t20222*t20223)/(gamma_bb[index]*gcaa*t20220*3.0+t20221*t20222*t20224*3.0+ \
               gamma_bb[index]*gcaa*t20221*t20222*t20223+1.0))-c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cx0+(t20236/ \
               t20238-t20236*t20237*1/(t20238*t20238*t20238)*2.0+t20236*1/(t20238*t20238*t20238*t20238*t20238)*t20239) \
               *(cxnl0+cxnl1*gamma_bb[index]*gx*t20220*t20243+cxnl2*t20221*t20240*t20224*t20252+cxnl3*gamma_bb[index]* \
               gx*t20221*t20240*t20223*t20248)+cx1*gamma_bb[index]*gx*t20220*t20243+cx2*t20221*t20240*t20224*t20252+ \
               cx3*gamma_bb[index]*gx*t20221*t20240*t20223*t20248);
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t16360 = 1/pow(rho_a[index],1.0/3.0);
            double t16361 = c*t16360;
            double t16362 = sqrt(t16361);
            double t16363 = pow(t16361,3.0/2.0);
            double t16364 = c*c;
            double t16365 = 1/pow(rho_a[index],2.0/3.0);
            double t16366 = 1/c0p;
            double t16367 = b1p*t16362;
            double t16368 = b3p*t16363;
            double t16369 = b4p*t16364*t16365;
            double t16370 = b2p*c*t16360;
            double t16371 = t16370+t16367+t16368+t16369;
            double t16372 = 1/t16371;
            double t16373 = t16372*t16366*(1.0/2.0);
            double t16374 = t16373+1.0;
            double t16375 = log(t16374);
            double t16376 = a1p*c*t16360;
            double t16377 = t16376+1.0;
            double t16378 = pow(2.0,1.0/3.0);
            double t16379 = t16378*2.0;
            double t16380 = t16379-2.0;
            double t16381 = two_13*2.0;
            double t16382 = t16381-2.0;
            double t16383 = 1/t16382;
            double t16384 = 1/c0f;
            double t16385 = 1/pow(rho_b[index],1.0/3.0);
            double t16386 = c*t16385;
            double t16387 = sqrt(t16386);
            double t16388 = pow(t16386,3.0/2.0);
            double t16389 = 1/pow(rho_b[index],2.0/3.0);
            double t16390 = b1p*t16387;
            double t16391 = b3p*t16388;
            double t16392 = b4p*t16364*t16389;
            double t16393 = b2p*c*t16385;
            double t16394 = t16390+t16391+t16392+t16393;
            double t16395 = 1/t16394;
            double t16396 = t16366*t16395*(1.0/2.0);
            double t16397 = t16396+1.0;
            double t16398 = log(t16397);
            double t16399 = a1p*c*t16385;
            double t16400 = t16399+1.0;
            double t16401 = c0p*t16400*t16398*2.0;
            double t16402 = rho_a[index]+rho_b[index];
            double t16403 = 1/pow(t16402,1.0/3.0);
            double t16404 = c*t16403;
            double t16405 = sqrt(t16404);
            double t16406 = pow(t16404,3.0/2.0);
            double t16407 = 1/pow(t16402,2.0/3.0);
            double t16408 = b1p*t16405;
            double t16409 = b3p*t16406;
            double t16410 = b4p*t16407*t16364;
            double t16411 = b2p*c*t16403;
            double t16412 = t16410+t16411+t16408+t16409;
            double t16413 = 1/t16412;
            double t16414 = t16413*t16366*(1.0/2.0);
            double t16415 = t16414+1.0;
            double t16416 = log(t16415);
            double t16417 = a1p*c*t16403;
            double t16418 = t16417+1.0;
            double t16419 = c0p*t16416*t16418*2.0;
            double t16420 = rho_a[index]-rho_b[index];
            double t16421 = t16420*t16420;
            double t16422 = 1/t16402;
            double t16423 = t16420*t16422;
            double t16424 = 1/(t16402*t16402*t16402*t16402);
            double t16425 = t16421*t16421;
            double t16426 = t16423+1.0;
            double t16427 = pow(t16426,4.0/3.0);
            double t16428 = -t16423+1.0;
            double t16429 = pow(t16428,4.0/3.0);
            double t16430 = t16427+t16429-2.0;
            double t16431 = gcab*gcab;
            double t16435 = 1/pow(rho_a[index],8.0/3.0);
            double t16436 = gamma_aa[index]*t16435*(1.0/2.0);
            double t16437 = 1/pow(rho_b[index],8.0/3.0);
            double t16438 = gamma_bb[index]*t16437*(1.0/2.0);
            double t16432 = t16436+t16438;
            double t16433 = t16432*t16432;
            double t16434 = 1/pow(rho_a[index],1.1E1/3.0);
            double t16439 = gcab*t16432;
            double t16440 = t16439+1.0;
            double t16441 = t16431*t16433;
            double t16442 = gcab*t16432*2.0;
            double t16443 = t16441+t16442+1.0;
            double t16444 = t16431*t16433*3.0;
            double t16445 = gcab*t16431*t16432*t16433;
            double t16446 = gcab*t16432*3.0;
            double t16447 = t16444+t16445+t16446+1.0;
            double t16448 = c0p*t16375*t16377*2.0;
            double t16449 = 1/t16443;
            double t16450 = 1/t16447;
            double t16451 = 1/t16440;
            double t16452 = 1/pow(t16402,4.0/3.0);
            double t16453 = b1f*t16405;
            double t16454 = b3f*t16406;
            double t16455 = b4f*t16407*t16364;
            double t16456 = b2f*c*t16403;
            double t16457 = t16453+t16454+t16455+t16456;
            double t16458 = 1/t16457;
            double t16459 = t16384*t16458*(1.0/2.0);
            double t16460 = t16459+1.0;
            double t16461 = log(t16460);
            double t16462 = a1f*c*t16403;
            double t16463 = t16462+1.0;
            double t16465 = c0f*t16461*t16463*2.0;
            double t16464 = t16419-t16465;
            double t16466 = 1/(t16402*t16402);
            double t16493 = t16420*t16466;
            double t16467 = t16422-t16493;
            double t16468 = 1/pow(t16402,5.0/3.0);
            double t16469 = 1/sqrt(t16404);
            double t16470 = 1/t16415;
            double t16471 = 1/(t16412*t16412);
            double t16472 = b4p*t16364*t16468*(2.0/3.0);
            double t16473 = b2p*c*t16452*(1.0/3.0);
            double t16474 = b1p*c*t16452*t16469*(1.0/6.0);
            double t16475 = b3p*c*t16405*t16452*(1.0/2.0);
            double t16476 = t16472+t16473+t16474+t16475;
            double t16477 = t16470*t16471*t16418*t16476;
            double t16478 = 1/d2fz0;
            double t16479 = 1/Aa;
            double t16480 = b1a*t16405;
            double t16481 = b3a*t16406;
            double t16482 = b4a*t16407*t16364;
            double t16483 = b2a*c*t16403;
            double t16484 = t16480+t16481+t16482+t16483;
            double t16485 = 1/t16484;
            double t16486 = t16485*t16479*(1.0/2.0);
            double t16487 = t16486+1.0;
            double t16488 = log(t16487);
            double t16489 = a1a*c*t16403;
            double t16490 = t16489+1.0;
            double t16491 = 1/(t16402*t16402*t16402*t16402*t16402);
            double t16492 = pow(t16426,1.0/3.0);
            double t16494 = t16492*t16467*(4.0/3.0);
            double t16495 = pow(t16428,1.0/3.0);
            double t16496 = t16494-t16467*t16495*(4.0/3.0);
            double t16497 = t16424*t16425;
            double t16498 = t16497-1.0;
            double t16499 = a1f*c*t16360;
            double t16500 = t16499+1.0;
            double t16501 = b1f*t16362;
            double t16502 = b3f*t16363;
            double t16503 = b4f*t16364*t16365;
            double t16504 = b2f*c*t16360;
            double t16505 = t16501+t16502+t16503+t16504;
            double t16506 = 1/t16505;
            double t16507 = t16506*t16384*(1.0/2.0);
            double t16508 = t16507+1.0;
            double t16509 = 1/pow(rho_a[index],4.0/3.0);
            double t16510 = 1/pow(rho_a[index],5.0/3.0);
            double t16511 = 1/sqrt(t16361);
            double t16512 = log(t16508);
            double t16513 = 1/t16374;
            double t16514 = 1/(t16371*t16371);
            double t16515 = b4p*t16510*t16364*(2.0/3.0);
            double t16516 = b2p*c*t16509*(1.0/3.0);
            double t16517 = b1p*c*t16511*t16509*(1.0/6.0);
            double t16518 = b3p*c*t16362*t16509*(1.0/2.0);
            double t16519 = t16515+t16516+t16517+t16518;
            double t16520 = t16513*t16514*t16519*t16377;
            double t16521 = Aa*t16430*t16490*t16383*t16478*t16488*t16498*2.0;
            double t16523 = c0f*t16500*t16512*2.0;
            double t16522 = -t16523+t16448;
            double t16524 = gamma_aa[index]*gamma_aa[index];
            double t16525 = gcaa*gcaa;
            double t16526 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t16527 = 1/pow(rho_a[index],1.6E1/3.0);
            double t16528 = pow(rho_a[index],5.0/3.0);
            double t16529 = C_k*t16528;
            double t16530 = tau_a[index]*1.0E20;
            double t16531 = 1/tau_a[index];
            double t16532 = t16530-t16529;
            double t16533 = ( (t16532 > 0.0) ?  1.0 : 0.0 ) ;
            double t16534 = C_k*t16531*t16533*t16528;
            double t16535 = -t16530+t16529;
            double t16536 = ( (t16535 > 0.0) ?  1.0 : 0.0 ) ;
            double t16537 = t16536*1.0E20;
            double t16538 = t16534+t16537-1.0;
            double t16539 = t16538*t16538;
            double t16540 = t16534+t16537+1.0;
            double t16541 = t16539*t16539;
            double t16542 = gx*gx;
            double t16543 = gamma_aa[index]*gx*t16435;
            double t16544 = t16543+1.0;
            double t16545 = 1/t16544;
            double t16546 = gamma_aa[index]*gx*t16435*3.0;
            double t16547 = gamma_aa[index]*gx*t16524*t16542*t16526;
            double t16548 = t16524*t16542*t16527*3.0;
            double t16549 = t16546+t16547+t16548+1.0;
            double t16550 = 1/t16549;
            double t16551 = gamma_aa[index]*gx*t16435*2.0;
            double t16552 = t16524*t16542*t16527;
            double t16553 = t16551+t16552+1.0;
            double t16554 = 1/t16553;
            double t16555 = 1/t16540;
            double t16556 = 1/(t16540*t16540*t16540);
            double t16557 = 1/(t16540*t16540*t16540*t16540*t16540);
            double t16558 = t16541*t16538*t16557;
            double t16559 = 1/pow(rho_a[index],1.9E1/3.0);
            double t16560 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t16561 = cxnl1*gamma_aa[index]*gx*t16435*t16545;
            double t16562 = cxnl3*gamma_aa[index]*gx*t16550*t16524*t16542*t16526;
            double t16563 = cxnl2*t16524*t16542*t16527*t16554;
            double t16564 = cxnl0+t16561+t16562+t16563;
            double t16565 = 0.0 ;
            double t16566 = pow(rho_a[index],2.0/3.0);
            double t16567 = C_k*t16565*t16566*(5.0E20/3.0);
            double t16568 = C_k*C_k;
            double t16569 = pow(rho_a[index],7.0/3.0);
            double t16570 = C_k*t16531*t16533*t16566*(5.0/3.0);
            double t16572 = t16531*t16565*t16568*t16569*(5.0/3.0);
            double t16571 = t16570-t16572+t16567;
            double t16573 = 1/(t16544*t16544);
            double t16574 = gamma_aa[index]*gx*t16434*8.0;
            double t16575 = gamma_aa[index]*gx*t16524*t16542*t16560*8.0;
            double t16576 = t16524*t16542*t16559*1.6E1;
            double t16577 = t16574+t16575+t16576;
            double t16578 = 1/(t16549*t16549);
            double t16579 = gamma_aa[index]*gx*t16434*(1.6E1/3.0);
            double t16580 = t16524*t16542*t16559*(1.6E1/3.0);
            double t16581 = t16580+t16579;
            double t16582 = 1/(t16553*t16553);
            double t16583 = t16555*t16538;
            double t16584 = t16583+t16558-t16538*t16556*t16539*2.0;
            double t16585 = t16523-t16448;
            double t16586 = t16380*t16383*t16585;
            double t16587 = t16448+t16586;
            double t16588 = gamma_aa[index]*gcaa*t16435;
            double t16589 = t16588+1.0;
            double t16590 = 1/t16589;
            double t16591 = gamma_aa[index]*gcaa*t16435*3.0;
            double t16592 = gamma_aa[index]*gcaa*t16524*t16525*t16526;
            double t16593 = t16524*t16525*t16527*3.0;
            double t16594 = t16591+t16592+t16593+1.0;
            double t16595 = 1/t16594;
            double t16596 = gamma_aa[index]*gcaa*t16435*2.0;
            double t16597 = t16524*t16525*t16527;
            double t16598 = t16596+t16597+1.0;
            double t16599 = 1/t16598;
            double t16600 = 1/t16508;
            double t16601 = 1/(t16505*t16505);
            double t16602 = b4f*t16510*t16364*(2.0/3.0);
            double t16603 = b2f*c*t16509*(1.0/3.0);
            double t16604 = b1f*c*t16511*t16509*(1.0/6.0);
            double t16605 = b3f*c*t16362*t16509*(1.0/2.0);
            double t16606 = t16602+t16603+t16604+t16605;
            double t16607 = a1f*c*c0f*t16512*t16509*(2.0/3.0);
            double t16608 = a1p*c*c0p*t16509*t16375*(2.0/3.0);
            double t16609 = ccaa1*gamma_aa[index]*gcaa*t16435*t16590;
            double t16610 = ccaa3*gamma_aa[index]*gcaa*t16524*t16525*t16526*t16595;
            double t16611 = ccaa2*t16524*t16525*t16527*t16599;
            double t16612 = ccaa0+t16610+t16611+t16609;
            v_rho_a_[index] = -(ccab0+ccab1*gcab*t16432*t16451+ccab2*t16431*t16433*t16449+ccab3*gcab*t16431*t16432* \
               t16450*t16433)*(t16521+t16419-t16448+rho_a[index]*(-t16520+t16608+t16380*t16383*(t16520+t16607-t16500* \
               t16600*t16601*t16606-a1p*c*c0p*t16509*t16375*(2.0/3.0)))-t16402*(-t16477+t16430*t16424*t16425*t16383* \
               (t16477-(t16463*1/(t16457*t16457)*(b2f*c*t16452*(1.0/3.0)+b4f*t16364*t16468*(2.0/3.0)+b1f*c*t16452* \
               t16469*(1.0/6.0)+b3f*c*t16405*t16452*(1.0/2.0)))/t16460+a1f*c*c0f*t16452*t16461*(2.0/3.0)-a1p*c*c0p* \
               t16416*t16452*(2.0/3.0))+a1p*c*c0p*t16416*t16452*(2.0/3.0)-t16430*t16425*t16383*t16464*t16491*4.0+ \
               t16424*t16425*t16383*t16464*t16496+t16420*t16421*t16430*t16424*t16383*t16464*4.0+Aa*t16430*t16490* \
               t16383*t16478*t16488*(t16425*t16491*4.0-t16420*t16421*t16424*4.0)*2.0-Aa*t16490*t16383*t16478*t16496* \
               t16488*t16498*2.0-(t16430*t16490*t16383*1/(t16484*t16484)*t16478*t16498*(b2a*c*t16452*(1.0/3.0)+b4a* \
               t16364*t16468*(2.0/3.0)+b1a*c*t16452*t16469*(1.0/6.0)+b3a*c*t16405*t16452*(1.0/2.0)))/t16487+Aa*a1a* \
               c*t16430*t16452*t16383*t16478*t16488*t16498*(2.0/3.0))+t16522*t16380*t16383-t16430*t16424*t16425*t16383* \
               t16464)-t16612*t16587-(c0*pow(rho_a[index],1.0/3.0)*(cx0+t16564*t16584+cx1*gamma_aa[index]*gx*t16435* \
               t16545+cx2*t16524*t16542*t16527*t16554+cx3*gamma_aa[index]*gx*t16550*t16524*t16542*t16526)*(4.0/3.0) \
               -c0*pow(rho_a[index],4.0/3.0)*(t16584*(cxnl1*gamma_aa[index]*gx*t16434*t16545*(8.0/3.0)-cxnl1*t16524* \
               t16542*t16573*t16559*(8.0/3.0)+cxnl2*t16524*t16542*t16554*t16559*(1.6E1/3.0)-cxnl2*t16524*t16542*t16527* \
               t16581*t16582+cxnl3*gamma_aa[index]*gx*t16550*t16524*t16542*t16560*8.0-cxnl3*gamma_aa[index]*gx*t16524* \
               t16542*t16526*t16577*t16578)-t16564*(t16571*t16555-1/(t16540*t16540)*t16571*t16538+t16541*t16571*t16557* \
               5.0-t16571*t16556*t16539*6.0-1/(t16540*t16540*t16540*t16540*t16540*t16540)*t16541*t16571*t16538*5.0+ \
               1/(t16540*t16540*t16540*t16540)*t16571*t16538*t16539*6.0)+cx1*gamma_aa[index]*gx*t16434*t16545*(8.0/ \
               3.0)-cx1*t16524*t16542*t16573*t16559*(8.0/3.0)+cx2*t16524*t16542*t16554*t16559*(1.6E1/3.0)-cx2*t16524* \
               t16542*t16527*t16581*t16582+cx3*gamma_aa[index]*gx*t16550*t16524*t16542*t16560*8.0-cx3*gamma_aa[index]* \
               gx*t16524*t16542*t16526*t16577*t16578))*(X-1.0)-(rho_a[index]*(t16448-t16522*t16380*t16383)+rho_b[index]* \
               (t16401-t16380*t16383*(t16401-c0f*log((t16384*(1.0/2.0))/(b1f*t16387+b3f*t16388+b2f*c*t16385+b4f*t16364* \
               t16389)+1.0)*(a1f*c*t16385+1.0)*2.0))-t16402*(t16521+t16419-t16430*t16424*t16425*t16383*t16464))*(ccab1* \
               gamma_aa[index]*gcab*t16451*t16434*(4.0/3.0)-ccab2*t16431*t16433*1/(t16443*t16443)*(gamma_aa[index]* \
               gcab*t16434*(8.0/3.0)+gamma_aa[index]*t16431*t16432*t16434*(8.0/3.0))-ccab1*gamma_aa[index]*t16431* \
               1/(t16440*t16440)*t16432*t16434*(4.0/3.0)+ccab2*gamma_aa[index]*t16431*t16432*t16434*t16449*(8.0/3.0) \
               -ccab3*gcab*t16431*t16432*t16433*1/(t16447*t16447)*(gamma_aa[index]*gcab*t16434*4.0+gamma_aa[index]* \
               t16431*t16432*t16434*8.0+gamma_aa[index]*gcab*t16431*t16433*t16434*4.0)+ccab3*gamma_aa[index]*gcab* \
               t16431*t16450*t16433*t16434*4.0)+rho_a[index]*t16612*(-t16520+t16608+t16380*t16383*(t16520+t16607- \
               t16608-t16500*t16600*t16601*t16606))+rho_a[index]*t16587*(ccaa1*gamma_aa[index]*gcaa*t16434*t16590* \
               (8.0/3.0)+ccaa2*t16524*t16525*t16559*t16599*(1.6E1/3.0)-ccaa1*t16524*t16525*t16559*1/(t16589*t16589) \
               *(8.0/3.0)-ccaa2*t16524*t16525*t16527*1/(t16598*t16598)*(gamma_aa[index]*gcaa*t16434*(1.6E1/3.0)+t16524* \
               t16525*t16559*(1.6E1/3.0))+ccaa3*gamma_aa[index]*gcaa*t16524*t16560*t16525*t16595*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t16524*t16525*t16526*1/(t16594*t16594)*(gamma_aa[index]*gcaa*t16434*8.0+t16524*t16525*t16559* \
               1.6E1+gamma_aa[index]*gcaa*t16524*t16560*t16525*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t21341 = 1/pow(rho_a[index],1.0/3.0);
            double t21342 = c*t21341;
            double t21343 = sqrt(t21342);
            double t21344 = pow(t21342,3.0/2.0);
            double t21345 = c*c;
            double t21346 = 1/pow(rho_a[index],2.0/3.0);
            double t21347 = 1/c0p;
            double t21348 = b1p*t21343;
            double t21349 = b3p*t21344;
            double t21350 = b4p*t21345*t21346;
            double t21351 = b2p*c*t21341;
            double t21352 = t21350+t21351+t21348+t21349;
            double t21353 = 1/t21352;
            double t21354 = t21353*t21347*(1.0/2.0);
            double t21355 = t21354+1.0;
            double t21356 = log(t21355);
            double t21357 = a1p*c*t21341;
            double t21358 = t21357+1.0;
            double t21359 = 1/pow(rho_a[index],8.0/3.0);
            double t21360 = gamma_aa[index]*gamma_aa[index];
            double t21361 = gcaa*gcaa;
            double t21362 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t21363 = 1/pow(rho_a[index],1.6E1/3.0);
            double t21364 = pow(2.0,1.0/3.0);
            double t21365 = t21364*2.0;
            double t21366 = t21365-2.0;
            double t21367 = two_13*2.0;
            double t21368 = t21367-2.0;
            double t21369 = 1/t21368;
            double t21370 = 1/c0f;
            double t21371 = b1f*t21343;
            double t21372 = b3f*t21344;
            double t21373 = b4f*t21345*t21346;
            double t21374 = b2f*c*t21341;
            double t21375 = t21371+t21372+t21373+t21374;
            double t21376 = 1/t21375;
            double t21377 = t21370*t21376*(1.0/2.0);
            double t21378 = t21377+1.0;
            double t21379 = log(t21378);
            double t21380 = a1f*c*t21341;
            double t21381 = t21380+1.0;
            double t21382 = c0f*t21381*t21379*2.0;
            double t21383 = c0p*t21356*t21358*2.0;
            double t21384 = gamma_aa[index]*gcaa*t21359;
            double t21385 = t21384+1.0;
            double t21386 = 1/t21385;
            double t21387 = gamma_aa[index]*gcaa*t21359*3.0;
            double t21388 = gamma_aa[index]*gcaa*t21360*t21361*t21362;
            double t21389 = t21360*t21361*t21363*3.0;
            double t21390 = t21387+t21388+t21389+1.0;
            double t21391 = 1/t21390;
            double t21392 = gamma_aa[index]*gcaa*t21359*2.0;
            double t21393 = t21360*t21361*t21363;
            double t21394 = t21392+t21393+1.0;
            double t21395 = 1/t21394;
            double t21396 = 1/pow(rho_a[index],1.9E1/3.0);
            double t21397 = 1/pow(rho_a[index],1.1E1/3.0);
            double t21398 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t21399 = 1/pow(rho_a[index],4.0/3.0);
            double t21400 = 1/pow(rho_a[index],5.0/3.0);
            double t21401 = 1/sqrt(t21342);
            double t21402 = 1/t21355;
            double t21403 = 1/(t21352*t21352);
            double t21404 = b4p*t21400*t21345*(2.0/3.0);
            double t21405 = b2p*c*t21399*(1.0/3.0);
            double t21406 = b1p*c*t21401*t21399*(1.0/6.0);
            double t21407 = b3p*c*t21343*t21399*(1.0/2.0);
            double t21408 = t21404+t21405+t21406+t21407;
            double t21409 = t21402*t21403*t21408*t21358;
            double t21410 = ccaa1*gamma_aa[index]*gcaa*t21359*t21386;
            double t21411 = ccaa3*gamma_aa[index]*gcaa*t21360*t21361*t21362*t21391;
            double t21412 = ccaa2*t21360*t21361*t21363*t21395;
            double t21413 = ccaa0+t21410+t21411+t21412;
            double t21414 = pow(rho_a[index],5.0/3.0);
            double t21415 = C_k*t21414;
            double t21416 = tau_a[index]*1.0E20;
            double t21417 = 1/tau_a[index];
            double t21418 = -t21415+t21416;
            double t21419 = ( (t21418 > 0.0) ?  1.0 : 0.0 ) ;
            double t21420 = C_k*t21414*t21417*t21419;
            double t21421 = t21415-t21416;
            double t21422 = ( (t21421 > 0.0) ?  1.0 : 0.0 ) ;
            double t21423 = t21422*1.0E20;
            double t21424 = t21420+t21423-1.0;
            double t21425 = t21424*t21424;
            double t21426 = t21420+t21423+1.0;
            double t21427 = t21425*t21425;
            double t21428 = gx*gx;
            double t21429 = gamma_aa[index]*gx*t21359;
            double t21430 = t21429+1.0;
            double t21431 = 1/t21430;
            double t21432 = gamma_aa[index]*gx*t21359*3.0;
            double t21433 = gamma_aa[index]*gx*t21360*t21362*t21428;
            double t21434 = t21360*t21363*t21428*3.0;
            double t21435 = t21432+t21433+t21434+1.0;
            double t21436 = 1/t21435;
            double t21437 = gamma_aa[index]*gx*t21359*2.0;
            double t21438 = t21360*t21363*t21428;
            double t21439 = t21437+t21438+1.0;
            double t21440 = 1/t21439;
            double t21441 = X-1.0;
            double t21442 = 1/t21426;
            double t21443 = t21424*t21442;
            double t21444 = 1/(t21426*t21426*t21426);
            double t21445 = 1/(t21426*t21426*t21426*t21426*t21426);
            double t21446 = t21424*t21427*t21445;
            double t21447 = t21443+t21446-t21424*t21425*t21444*2.0;
            double t21448 = cxnl1*gamma_aa[index]*gx*t21431*t21359;
            double t21449 = cxnl3*gamma_aa[index]*gx*t21360*t21362*t21436*t21428;
            double t21450 = cxnl2*t21440*t21360*t21363*t21428;
            double t21451 = cxnl0+t21450+t21448+t21449;
            double t21452 = 0.0 ;
            double t21453 = pow(rho_a[index],2.0/3.0);
            double t21454 = C_k*t21452*t21453*(5.0E20/3.0);
            double t21455 = C_k*C_k;
            double t21456 = pow(rho_a[index],7.0/3.0);
            double t21457 = C_k*t21417*t21453*t21419*(5.0/3.0);
            double t21459 = t21452*t21417*t21455*t21456*(5.0/3.0);
            double t21458 = t21454+t21457-t21459;
            double t21460 = 1/(t21430*t21430);
            double t21461 = gamma_aa[index]*gx*t21397*8.0;
            double t21462 = gamma_aa[index]*gx*t21360*t21428*t21398*8.0;
            double t21463 = t21360*t21428*t21396*1.6E1;
            double t21464 = t21461+t21462+t21463;
            double t21465 = 1/(t21435*t21435);
            double t21466 = gamma_aa[index]*gx*t21397*(1.6E1/3.0);
            double t21467 = t21360*t21428*t21396*(1.6E1/3.0);
            double t21468 = t21466+t21467;
            double t21469 = 1/(t21439*t21439);
            v_rho_a_[index] = -t21413*(t21383+t21366*t21369*(t21382-c0p*t21356*t21358*2.0))+rho_a[index]*(t21383+ \
               t21366*t21369*(t21382-t21383))*(ccaa1*gamma_aa[index]*gcaa*t21386*t21397*(8.0/3.0)+ccaa2*t21360*t21361* \
               t21395*t21396*(1.6E1/3.0)-ccaa1*t21360*t21361*1/(t21385*t21385)*t21396*(8.0/3.0)-ccaa2*t21360*t21361* \
               t21363*1/(t21394*t21394)*(gamma_aa[index]*gcaa*t21397*(1.6E1/3.0)+t21360*t21361*t21396*(1.6E1/3.0) \
               )+ccaa3*gamma_aa[index]*gcaa*t21360*t21361*t21391*t21398*8.0-ccaa3*gamma_aa[index]*gcaa*t21360*t21361* \
               t21362*1/(t21390*t21390)*(gamma_aa[index]*gcaa*t21397*8.0+t21360*t21361*t21396*1.6E1+gamma_aa[index]* \
               gcaa*t21360*t21361*t21398*8.0))+rho_a[index]*t21413*(-t21409+t21366*t21369*(t21409-(t21381*1/(t21375* \
               t21375)*(b2f*c*t21399*(1.0/3.0)+b4f*t21400*t21345*(2.0/3.0)+b1f*c*t21401*t21399*(1.0/6.0)+b3f*c*t21343* \
               t21399*(1.0/2.0)))/t21378+a1f*c*c0f*t21379*t21399*(2.0/3.0)-a1p*c*c0p*t21356*t21399*(2.0/3.0))+a1p* \
               c*c0p*t21356*t21399*(2.0/3.0))-c0*pow(rho_a[index],1.0/3.0)*t21441*(cx0+t21451*t21447+cx1*gamma_aa[index]* \
               gx*t21431*t21359+cx2*t21440*t21360*t21363*t21428+cx3*gamma_aa[index]*gx*t21360*t21362*t21436*t21428) \
               *(4.0/3.0)+c0*pow(rho_a[index],4.0/3.0)*t21441*(t21447*(cxnl1*gamma_aa[index]*gx*t21431*t21397*(8.0/ \
               3.0)+cxnl2*t21440*t21360*t21428*t21396*(1.6E1/3.0)-cxnl1*t21360*t21460*t21428*t21396*(8.0/3.0)-cxnl2* \
               t21360*t21363*t21428*t21468*t21469+cxnl3*gamma_aa[index]*gx*t21360*t21436*t21428*t21398*8.0-cxnl3* \
               gamma_aa[index]*gx*t21360*t21362*t21428*t21464*t21465)-t21451*(t21442*t21458-t21424*1/(t21426*t21426) \
               *t21458-t21425*t21444*t21458*6.0+t21427*t21445*t21458*5.0+t21424*t21425*1/(t21426*t21426*t21426*t21426) \
               *t21458*6.0-t21424*1/(t21426*t21426*t21426*t21426*t21426*t21426)*t21427*t21458*5.0)+cx1*gamma_aa[index]* \
               gx*t21431*t21397*(8.0/3.0)-cx1*t21360*t21460*t21428*t21396*(8.0/3.0)+cx2*t21440*t21360*t21428*t21396* \
               (1.6E1/3.0)-cx2*t21360*t21363*t21428*t21468*t21469+cx3*gamma_aa[index]*gx*t21360*t21436*t21428*t21398* \
               8.0-cx3*gamma_aa[index]*gx*t21360*t21362*t21428*t21464*t21465);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t16614 = 1/pow(rho_a[index],1.0/3.0);
            double t16615 = c*t16614;
            double t16616 = sqrt(t16615);
            double t16617 = pow(t16615,3.0/2.0);
            double t16618 = c*c;
            double t16619 = 1/pow(rho_a[index],2.0/3.0);
            double t16620 = 1/c0p;
            double t16621 = b1p*t16616;
            double t16622 = b3p*t16617;
            double t16623 = b4p*t16618*t16619;
            double t16624 = b2p*c*t16614;
            double t16625 = t16621+t16622+t16623+t16624;
            double t16626 = 1/t16625;
            double t16627 = t16620*t16626*(1.0/2.0);
            double t16628 = t16627+1.0;
            double t16629 = log(t16628);
            double t16630 = a1p*c*t16614;
            double t16631 = t16630+1.0;
            double t16632 = pow(2.0,1.0/3.0);
            double t16633 = t16632*2.0;
            double t16634 = t16633-2.0;
            double t16635 = two_13*2.0;
            double t16636 = t16635-2.0;
            double t16637 = 1/t16636;
            double t16638 = 1/c0f;
            double t16639 = 1/pow(rho_b[index],1.0/3.0);
            double t16640 = c*t16639;
            double t16641 = sqrt(t16640);
            double t16642 = pow(t16640,3.0/2.0);
            double t16643 = 1/pow(rho_b[index],2.0/3.0);
            double t16644 = b1p*t16641;
            double t16645 = b3p*t16642;
            double t16646 = b4p*t16643*t16618;
            double t16647 = b2p*c*t16639;
            double t16648 = t16644+t16645+t16646+t16647;
            double t16649 = 1/t16648;
            double t16650 = t16620*t16649*(1.0/2.0);
            double t16651 = t16650+1.0;
            double t16652 = log(t16651);
            double t16653 = a1p*c*t16639;
            double t16654 = t16653+1.0;
            double t16655 = c0p*t16652*t16654*2.0;
            double t16656 = rho_a[index]+rho_b[index];
            double t16657 = 1/pow(t16656,1.0/3.0);
            double t16658 = c*t16657;
            double t16659 = sqrt(t16658);
            double t16660 = pow(t16658,3.0/2.0);
            double t16661 = 1/pow(t16656,2.0/3.0);
            double t16662 = b1p*t16659;
            double t16663 = b3p*t16660;
            double t16664 = b4p*t16661*t16618;
            double t16665 = b2p*c*t16657;
            double t16666 = t16662+t16663+t16664+t16665;
            double t16667 = 1/t16666;
            double t16668 = t16620*t16667*(1.0/2.0);
            double t16669 = t16668+1.0;
            double t16670 = log(t16669);
            double t16671 = a1p*c*t16657;
            double t16672 = t16671+1.0;
            double t16673 = c0p*t16670*t16672*2.0;
            double t16674 = rho_a[index]-rho_b[index];
            double t16675 = t16674*t16674;
            double t16676 = 1/t16656;
            double t16677 = t16674*t16676;
            double t16678 = 1/(t16656*t16656*t16656*t16656);
            double t16679 = t16675*t16675;
            double t16680 = t16677+1.0;
            double t16681 = pow(t16680,4.0/3.0);
            double t16682 = -t16677+1.0;
            double t16683 = pow(t16682,4.0/3.0);
            double t16684 = t16681+t16683-2.0;
            double t16685 = gcab*gcab;
            double t16689 = 1/pow(rho_a[index],8.0/3.0);
            double t16690 = gamma_aa[index]*t16689*(1.0/2.0);
            double t16691 = 1/pow(rho_b[index],8.0/3.0);
            double t16692 = gamma_bb[index]*t16691*(1.0/2.0);
            double t16686 = t16690+t16692;
            double t16687 = t16686*t16686;
            double t16688 = 1/pow(rho_b[index],1.1E1/3.0);
            double t16693 = gcab*t16686;
            double t16694 = t16693+1.0;
            double t16695 = t16685*t16687;
            double t16696 = gcab*t16686*2.0;
            double t16697 = t16695+t16696+1.0;
            double t16698 = t16685*t16687*3.0;
            double t16699 = gcab*t16685*t16686*t16687;
            double t16700 = gcab*t16686*3.0;
            double t16701 = t16700+t16698+t16699+1.0;
            double t16702 = c0p*t16631*t16629*2.0;
            double t16703 = 1/t16697;
            double t16704 = 1/t16701;
            double t16705 = 1/t16694;
            double t16706 = 1/pow(t16656,4.0/3.0);
            double t16707 = b1f*t16659;
            double t16708 = b3f*t16660;
            double t16709 = b4f*t16661*t16618;
            double t16710 = b2f*c*t16657;
            double t16711 = t16710+t16707+t16708+t16709;
            double t16712 = 1/t16711;
            double t16713 = t16712*t16638*(1.0/2.0);
            double t16714 = t16713+1.0;
            double t16715 = log(t16714);
            double t16716 = a1f*c*t16657;
            double t16717 = t16716+1.0;
            double t16719 = c0f*t16715*t16717*2.0;
            double t16718 = t16673-t16719;
            double t16720 = 1/(t16656*t16656);
            double t16721 = t16720*t16674;
            double t16722 = t16721+t16676;
            double t16723 = 1/pow(t16656,5.0/3.0);
            double t16724 = 1/sqrt(t16658);
            double t16725 = 1/t16669;
            double t16726 = 1/(t16666*t16666);
            double t16727 = b4p*t16723*t16618*(2.0/3.0);
            double t16728 = b2p*c*t16706*(1.0/3.0);
            double t16729 = b1p*c*t16706*t16724*(1.0/6.0);
            double t16730 = b3p*c*t16706*t16659*(1.0/2.0);
            double t16731 = t16730+t16727+t16728+t16729;
            double t16732 = 1/d2fz0;
            double t16733 = 1/Aa;
            double t16734 = b1a*t16659;
            double t16735 = b3a*t16660;
            double t16736 = b4a*t16661*t16618;
            double t16737 = b2a*c*t16657;
            double t16738 = t16734+t16735+t16736+t16737;
            double t16739 = 1/t16738;
            double t16740 = t16733*t16739*(1.0/2.0);
            double t16741 = t16740+1.0;
            double t16742 = log(t16741);
            double t16743 = a1a*c*t16657;
            double t16744 = t16743+1.0;
            double t16745 = 1/(t16656*t16656*t16656*t16656*t16656);
            double t16746 = pow(t16680,1.0/3.0);
            double t16747 = t16722*t16746*(4.0/3.0);
            double t16748 = pow(t16682,1.0/3.0);
            double t16749 = t16747-t16722*t16748*(4.0/3.0);
            double t16750 = t16678*t16679;
            double t16751 = t16750-1.0;
            double t16752 = t16731*t16725*t16672*t16726;
            double t16753 = a1f*c*t16639;
            double t16754 = t16753+1.0;
            double t16755 = b1f*t16641;
            double t16756 = b3f*t16642;
            double t16757 = b4f*t16643*t16618;
            double t16758 = b2f*c*t16639;
            double t16759 = t16755+t16756+t16757+t16758;
            double t16760 = 1/t16759;
            double t16761 = t16760*t16638*(1.0/2.0);
            double t16762 = t16761+1.0;
            double t16763 = 1/pow(rho_b[index],4.0/3.0);
            double t16764 = 1/pow(rho_b[index],5.0/3.0);
            double t16765 = 1/sqrt(t16640);
            double t16766 = log(t16762);
            double t16767 = 1/t16651;
            double t16768 = 1/(t16648*t16648);
            double t16769 = b4p*t16618*t16764*(2.0/3.0);
            double t16770 = b2p*c*t16763*(1.0/3.0);
            double t16771 = b1p*c*t16763*t16765*(1.0/6.0);
            double t16772 = b3p*c*t16641*t16763*(1.0/2.0);
            double t16773 = t16770+t16771+t16772+t16769;
            double t16774 = t16654*t16773*t16767*t16768;
            double t16777 = c0f*t16754*t16766*2.0;
            double t16775 = t16655-t16777;
            double t16776 = Aa*t16732*t16742*t16751*t16744*t16637*t16684*2.0;
            double t16778 = t16634*t16637*t16775;
            double t16779 = gamma_bb[index]*gamma_bb[index];
            double t16780 = gcaa*gcaa;
            double t16781 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t16782 = 1/pow(rho_b[index],1.6E1/3.0);
            double t16783 = pow(rho_b[index],5.0/3.0);
            double t16784 = C_k*t16783;
            double t16793 = tau_a[index]*1.0E20;
            double t16785 = t16784-t16793;
            double t16786 = ( (t16785 > 0.0) ?  1.0 : 0.0 ) ;
            double t16787 = t16786*1.0E20;
            double t16788 = 1/tau_b[index];
            double t16789 = tau_b[index]*1.0E20;
            double t16790 = -t16784+t16789;
            double t16791 = ( (t16790 > 0.0) ?  1.0 : 0.0 ) ;
            double t16792 = C_k*t16791*t16783*t16788;
            double t16794 = t16792+t16787-1.0;
            double t16795 = t16794*t16794;
            double t16796 = t16792+t16787+1.0;
            double t16797 = t16795*t16795;
            double t16798 = gx*gx;
            double t16799 = gamma_bb[index]*gx*t16691;
            double t16800 = t16799+1.0;
            double t16801 = 1/t16800;
            double t16802 = gamma_bb[index]*gx*t16691*3.0;
            double t16803 = gamma_bb[index]*gx*t16781*t16779*t16798;
            double t16804 = t16782*t16779*t16798*3.0;
            double t16805 = t16802+t16803+t16804+1.0;
            double t16806 = 1/t16805;
            double t16807 = gamma_bb[index]*gx*t16691*2.0;
            double t16808 = t16782*t16779*t16798;
            double t16809 = t16807+t16808+1.0;
            double t16810 = 1/t16809;
            double t16811 = 1/t16796;
            double t16812 = t16811*t16794;
            double t16813 = 1/(t16796*t16796*t16796);
            double t16814 = 1/(t16796*t16796*t16796*t16796*t16796);
            double t16815 = t16814*t16794*t16797;
            double t16816 = t16812+t16815-t16813*t16794*t16795*2.0;
            double t16817 = 1/pow(rho_b[index],1.9E1/3.0);
            double t16818 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t16819 = cxnl1*gamma_bb[index]*gx*t16801*t16691;
            double t16820 = cxnl3*gamma_bb[index]*gx*t16806*t16781*t16779*t16798;
            double t16821 = cxnl2*t16810*t16782*t16779*t16798;
            double t16822 = cxnl0+t16820+t16821+t16819;
            double t16823 = pow(rho_b[index],2.0/3.0);
            double t16824 = -t16784+t16793;
            double t16825 = 0.0 ;
            double t16826 = C_k*t16823*t16825*(5.0E20/3.0);
            double t16827 = C_k*C_k;
            double t16828 = pow(rho_b[index],7.0/3.0);
            double t16829 = 0.0 ;
            double t16830 = C_k*t16823*t16791*t16788*(5.0/3.0);
            double t16832 = t16827*t16828*t16829*t16788*(5.0/3.0);
            double t16831 = t16830-t16832+t16826;
            double t16833 = 1/(t16800*t16800);
            double t16834 = gamma_bb[index]*gx*t16688*8.0;
            double t16835 = gamma_bb[index]*gx*t16818*t16779*t16798*8.0;
            double t16836 = t16817*t16779*t16798*1.6E1;
            double t16837 = t16834+t16835+t16836;
            double t16838 = 1/(t16805*t16805);
            double t16839 = gamma_bb[index]*gx*t16688*(1.6E1/3.0);
            double t16840 = t16817*t16779*t16798*(1.6E1/3.0);
            double t16841 = t16840+t16839;
            double t16842 = 1/(t16809*t16809);
            double t16843 = t16655-t16778;
            double t16844 = gamma_bb[index]*gcaa*t16691;
            double t16845 = t16844+1.0;
            double t16846 = 1/t16845;
            double t16847 = gamma_bb[index]*gcaa*t16691*3.0;
            double t16848 = gamma_bb[index]*gcaa*t16780*t16781*t16779;
            double t16849 = t16780*t16782*t16779*3.0;
            double t16850 = t16847+t16848+t16849+1.0;
            double t16851 = 1/t16850;
            double t16852 = gamma_bb[index]*gcaa*t16691*2.0;
            double t16853 = t16780*t16782*t16779;
            double t16854 = t16852+t16853+1.0;
            double t16855 = 1/t16854;
            double t16856 = 1/t16762;
            double t16857 = 1/(t16759*t16759);
            double t16858 = b4f*t16618*t16764*(2.0/3.0);
            double t16859 = b2f*c*t16763*(1.0/3.0);
            double t16860 = b1f*c*t16763*t16765*(1.0/6.0);
            double t16861 = b3f*c*t16641*t16763*(1.0/2.0);
            double t16862 = t16860+t16861+t16858+t16859;
            double t16863 = a1f*c*c0f*t16763*t16766*(2.0/3.0);
            double t16864 = a1p*c*c0p*t16652*t16763*(2.0/3.0);
            double t16865 = ccaa1*gamma_bb[index]*gcaa*t16691*t16846;
            double t16866 = ccaa3*gamma_bb[index]*gcaa*t16851*t16780*t16781*t16779;
            double t16867 = ccaa2*t16780*t16782*t16855*t16779;
            double t16868 = ccaa0+t16865+t16866+t16867;
            v_rho_b_[index] = -t16843*t16868-(ccab0+ccab1*gcab*t16705*t16686+ccab2*t16703*t16685*t16687+ccab3* \
               gcab*t16704*t16685*t16686*t16687)*(-t16655+t16673+t16776+t16778+t16656*(t16752-t16637*t16684*t16678* \
               t16679*(t16752-(1/(t16711*t16711)*t16717*(b2f*c*t16706*(1.0/3.0)+b4f*t16723*t16618*(2.0/3.0)+b1f*c* \
               t16706*t16724*(1.0/6.0)+b3f*c*t16706*t16659*(1.0/2.0)))/t16714+a1f*c*c0f*t16706*t16715*(2.0/3.0)-a1p* \
               c*c0p*t16670*t16706*(2.0/3.0))-a1p*c*c0p*t16670*t16706*(2.0/3.0)+t16637*t16718*t16745*t16684*t16679* \
               4.0+t16637*t16718*t16749*t16678*t16679+t16637*t16718*t16674*t16675*t16684*t16678*4.0-Aa*t16732*t16742* \
               t16744*t16637*t16684*(t16745*t16679*4.0+t16674*t16675*t16678*4.0)*2.0-Aa*t16732*t16742*t16751*t16744* \
               t16637*t16749*2.0+(t16732*t16751*t16744*t16637*t16684*1/(t16738*t16738)*(b2a*c*t16706*(1.0/3.0)+b4a* \
               t16723*t16618*(2.0/3.0)+b1a*c*t16706*t16724*(1.0/6.0)+b3a*c*t16706*t16659*(1.0/2.0)))/t16741-Aa*a1a* \
               c*t16732*t16706*t16742*t16751*t16637*t16684*(2.0/3.0))+rho_b[index]*(-t16774+t16864+t16634*t16637* \
               (t16863+t16774-t16754*t16862*t16856*t16857-a1p*c*c0p*t16652*t16763*(2.0/3.0)))-t16637*t16718*t16684* \
               t16678*t16679)-(c0*pow(rho_b[index],1.0/3.0)*(cx0+t16822*t16816+cx1*gamma_bb[index]*gx*t16801*t16691+ \
               cx2*t16810*t16782*t16779*t16798+cx3*gamma_bb[index]*gx*t16806*t16781*t16779*t16798)*(4.0/3.0)-c0*pow(rho_b[index],4.0/ \
               3.0)*(t16816*(cxnl1*gamma_bb[index]*gx*t16801*t16688*(8.0/3.0)+cxnl2*t16810*t16817*t16779*t16798*(1.6E1/ \
               3.0)-cxnl1*t16833*t16817*t16779*t16798*(8.0/3.0)-cxnl2*t16841*t16842*t16782*t16779*t16798+cxnl3*gamma_bb[index]* \
               gx*t16806*t16818*t16779*t16798*8.0-cxnl3*gamma_bb[index]*gx*t16781*t16837*t16838*t16779*t16798)-t16822* \
               (t16811*t16831-t16831*t16794*1/(t16796*t16796)-t16813*t16831*t16795*6.0+t16831*t16814*t16797*5.0+t16831* \
               t16794*t16795*1/(t16796*t16796*t16796*t16796)*6.0-t16831*t16794*1/(t16796*t16796*t16796*t16796*t16796* \
               t16796)*t16797*5.0)+cx1*gamma_bb[index]*gx*t16801*t16688*(8.0/3.0)-cx1*t16833*t16817*t16779*t16798* \
               (8.0/3.0)+cx2*t16810*t16817*t16779*t16798*(1.6E1/3.0)-cx2*t16841*t16842*t16782*t16779*t16798+cx3*gamma_bb[index]* \
               gx*t16806*t16818*t16779*t16798*8.0-cx3*gamma_bb[index]*gx*t16781*t16837*t16838*t16779*t16798))*(X- \
               1.0)-(rho_b[index]*(t16655-t16634*t16637*t16775)+rho_a[index]*(t16702-t16634*t16637*(t16702-c0f*log((t16638* \
               (1.0/2.0))/(b1f*t16616+b3f*t16617+b2f*c*t16614+b4f*t16618*t16619)+1.0)*(a1f*c*t16614+1.0)*2.0))-t16656* \
               (t16673+t16776-t16637*t16718*t16684*t16678*t16679))*(ccab1*gamma_bb[index]*gcab*t16705*t16688*(4.0/ \
               3.0)-ccab2*t16685*t16687*1/(t16697*t16697)*(gamma_bb[index]*gcab*t16688*(8.0/3.0)+gamma_bb[index]* \
               t16685*t16686*t16688*(8.0/3.0))-ccab1*gamma_bb[index]*t16685*1/(t16694*t16694)*t16686*t16688*(4.0/ \
               3.0)+ccab2*gamma_bb[index]*t16703*t16685*t16686*t16688*(8.0/3.0)-ccab3*gcab*1/(t16701*t16701)*t16685* \
               t16686*t16687*(gamma_bb[index]*gcab*t16688*4.0+gamma_bb[index]*t16685*t16686*t16688*8.0+gamma_bb[index]* \
               gcab*t16685*t16687*t16688*4.0)+ccab3*gamma_bb[index]*gcab*t16704*t16685*t16687*t16688*4.0)+rho_b[index]* \
               t16868*(-t16774+t16864+t16634*t16637*(t16863+t16774-t16864-t16754*t16862*t16856*t16857))+rho_b[index]* \
               t16843*(ccaa1*gamma_bb[index]*gcaa*t16846*t16688*(8.0/3.0)+ccaa2*t16780*t16817*t16855*t16779*(1.6E1/ \
               3.0)-ccaa1*t16780*t16817*1/(t16845*t16845)*t16779*(8.0/3.0)-ccaa2*t16780*t16782*1/(t16854*t16854)* \
               t16779*(gamma_bb[index]*gcaa*t16688*(1.6E1/3.0)+t16780*t16817*t16779*(1.6E1/3.0))+ccaa3*gamma_bb[index]* \
               gcaa*t16851*t16780*t16818*t16779*8.0-ccaa3*gamma_bb[index]*gcaa*1/(t16850*t16850)*t16780*t16781*t16779* \
               (gamma_bb[index]*gcaa*t16688*8.0+t16780*t16817*t16779*1.6E1+gamma_bb[index]*gcaa*t16780*t16818*t16779* \
               8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t20255 = 1/pow(rho_b[index],1.0/3.0);
            double t20256 = c*t20255;
            double t20257 = sqrt(t20256);
            double t20258 = pow(t20256,3.0/2.0);
            double t20259 = c*c;
            double t20260 = 1/pow(rho_b[index],2.0/3.0);
            double t20261 = 1/c0p;
            double t20262 = b1p*t20257;
            double t20263 = b3p*t20258;
            double t20264 = b4p*t20260*t20259;
            double t20265 = b2p*c*t20255;
            double t20266 = t20262+t20263+t20264+t20265;
            double t20267 = 1/t20266;
            double t20268 = t20261*t20267*(1.0/2.0);
            double t20269 = t20268+1.0;
            double t20270 = log(t20269);
            double t20271 = a1p*c*t20255;
            double t20272 = t20271+1.0;
            double t20273 = 1/pow(rho_b[index],8.0/3.0);
            double t20274 = gamma_bb[index]*gamma_bb[index];
            double t20275 = gcaa*gcaa;
            double t20276 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t20277 = 1/pow(rho_b[index],1.6E1/3.0);
            double t20278 = pow(2.0,1.0/3.0);
            double t20279 = t20278*2.0;
            double t20280 = t20279-2.0;
            double t20281 = two_13*2.0;
            double t20282 = t20281-2.0;
            double t20283 = 1/t20282;
            double t20284 = 1/c0f;
            double t20285 = b1f*t20257;
            double t20286 = b3f*t20258;
            double t20287 = b4f*t20260*t20259;
            double t20288 = b2f*c*t20255;
            double t20289 = t20285+t20286+t20287+t20288;
            double t20290 = 1/t20289;
            double t20291 = t20290*t20284*(1.0/2.0);
            double t20292 = t20291+1.0;
            double t20293 = log(t20292);
            double t20294 = a1f*c*t20255;
            double t20295 = t20294+1.0;
            double t20296 = c0f*t20293*t20295*2.0;
            double t20297 = c0p*t20270*t20272*2.0;
            double t20298 = gamma_bb[index]*gcaa*t20273;
            double t20299 = t20298+1.0;
            double t20300 = 1/t20299;
            double t20301 = gamma_bb[index]*gcaa*t20273*3.0;
            double t20302 = gamma_bb[index]*gcaa*t20274*t20275*t20276;
            double t20303 = t20274*t20275*t20277*3.0;
            double t20304 = t20301+t20302+t20303+1.0;
            double t20305 = 1/t20304;
            double t20306 = gamma_bb[index]*gcaa*t20273*2.0;
            double t20307 = t20274*t20275*t20277;
            double t20308 = t20306+t20307+1.0;
            double t20309 = 1/t20308;
            double t20310 = 1/pow(rho_b[index],1.9E1/3.0);
            double t20311 = 1/pow(rho_b[index],1.1E1/3.0);
            double t20312 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t20313 = 1/pow(rho_b[index],4.0/3.0);
            double t20314 = 1/pow(rho_b[index],5.0/3.0);
            double t20315 = 1/sqrt(t20256);
            double t20316 = 1/t20269;
            double t20317 = 1/(t20266*t20266);
            double t20318 = b4p*t20314*t20259*(2.0/3.0);
            double t20319 = b2p*c*t20313*(1.0/3.0);
            double t20320 = b1p*c*t20313*t20315*(1.0/6.0);
            double t20321 = b3p*c*t20313*t20257*(1.0/2.0);
            double t20322 = t20320+t20321+t20318+t20319;
            double t20323 = t20322*t20316*t20272*t20317;
            double t20324 = ccaa1*gamma_bb[index]*gcaa*t20300*t20273;
            double t20325 = ccaa3*gamma_bb[index]*gcaa*t20305*t20274*t20275*t20276;
            double t20326 = ccaa2*t20309*t20274*t20275*t20277;
            double t20327 = ccaa0+t20324+t20325+t20326;
            double t20328 = pow(rho_b[index],5.0/3.0);
            double t20329 = C_k*t20328;
            double t20338 = tau_a[index]*1.0E20;
            double t20330 = t20329-t20338;
            double t20331 = ( (t20330 > 0.0) ?  1.0 : 0.0 ) ;
            double t20332 = t20331*1.0E20;
            double t20333 = 1/tau_b[index];
            double t20334 = tau_b[index]*1.0E20;
            double t20335 = t20334-t20329;
            double t20336 = ( (t20335 > 0.0) ?  1.0 : 0.0 ) ;
            double t20337 = C_k*t20333*t20336*t20328;
            double t20339 = t20332+t20337-1.0;
            double t20340 = t20339*t20339;
            double t20341 = t20332+t20337+1.0;
            double t20342 = t20340*t20340;
            double t20343 = gx*gx;
            double t20344 = gamma_bb[index]*gx*t20273;
            double t20345 = t20344+1.0;
            double t20346 = 1/t20345;
            double t20347 = gamma_bb[index]*gx*t20273*3.0;
            double t20348 = gamma_bb[index]*gx*t20343*t20274*t20276;
            double t20349 = t20343*t20274*t20277*3.0;
            double t20350 = t20347+t20348+t20349+1.0;
            double t20351 = 1/t20350;
            double t20352 = gamma_bb[index]*gx*t20273*2.0;
            double t20353 = t20343*t20274*t20277;
            double t20354 = t20352+t20353+1.0;
            double t20355 = 1/t20354;
            double t20356 = X-1.0;
            double t20357 = 1/t20341;
            double t20358 = t20339*t20357;
            double t20359 = 1/(t20341*t20341*t20341);
            double t20360 = 1/(t20341*t20341*t20341*t20341*t20341);
            double t20361 = t20342*t20360*t20339;
            double t20362 = t20361+t20358-t20340*t20339*t20359*2.0;
            double t20363 = cxnl1*gamma_bb[index]*gx*t20273*t20346;
            double t20364 = cxnl3*gamma_bb[index]*gx*t20351*t20343*t20274*t20276;
            double t20365 = cxnl2*t20343*t20274*t20355*t20277;
            double t20366 = cxnl0+t20363+t20364+t20365;
            double t20367 = pow(rho_b[index],2.0/3.0);
            double t20368 = -t20329+t20338;
            double t20369 = 0.0 ;
            double t20370 = C_k*t20367*t20369*(5.0E20/3.0);
            double t20371 = C_k*C_k;
            double t20372 = pow(rho_b[index],7.0/3.0);
            double t20373 = 0.0 ;
            double t20374 = C_k*t20333*t20336*t20367*(5.0/3.0);
            double t20376 = t20333*t20371*t20372*t20373*(5.0/3.0);
            double t20375 = t20370+t20374-t20376;
            double t20377 = 1/(t20345*t20345);
            double t20378 = gamma_bb[index]*gx*t20311*8.0;
            double t20379 = gamma_bb[index]*gx*t20312*t20343*t20274*8.0;
            double t20380 = t20310*t20343*t20274*1.6E1;
            double t20381 = t20380+t20378+t20379;
            double t20382 = 1/(t20350*t20350);
            double t20383 = gamma_bb[index]*gx*t20311*(1.6E1/3.0);
            double t20384 = t20310*t20343*t20274*(1.6E1/3.0);
            double t20385 = t20383+t20384;
            double t20386 = 1/(t20354*t20354);
            v_rho_b_[index] = -t20327*(t20297+t20280*t20283*(t20296-c0p*t20270*t20272*2.0))+rho_b[index]*(t20297+ \
               t20280*t20283*(t20296-t20297))*(ccaa1*gamma_bb[index]*gcaa*t20300*t20311*(8.0/3.0)+ccaa2*t20310*t20309* \
               t20274*t20275*(1.6E1/3.0)-ccaa1*t20310*t20274*t20275*1/(t20299*t20299)*(8.0/3.0)-ccaa2*1/(t20308*t20308) \
               *t20274*t20275*t20277*(gamma_bb[index]*gcaa*t20311*(1.6E1/3.0)+t20310*t20274*t20275*(1.6E1/3.0))+ccaa3* \
               gamma_bb[index]*gcaa*t20312*t20305*t20274*t20275*8.0-ccaa3*gamma_bb[index]*gcaa*1/(t20304*t20304)* \
               t20274*t20275*t20276*(gamma_bb[index]*gcaa*t20311*8.0+t20310*t20274*t20275*1.6E1+gamma_bb[index]*gcaa* \
               t20312*t20274*t20275*8.0))+rho_b[index]*t20327*(-t20323+t20280*t20283*(t20323-(t20295*1/(t20289*t20289) \
               *(b2f*c*t20313*(1.0/3.0)+b4f*t20314*t20259*(2.0/3.0)+b1f*c*t20313*t20315*(1.0/6.0)+b3f*c*t20313*t20257* \
               (1.0/2.0)))/t20292+a1f*c*c0f*t20313*t20293*(2.0/3.0)-a1p*c*c0p*t20313*t20270*(2.0/3.0))+a1p*c*c0p* \
               t20313*t20270*(2.0/3.0))-c0*pow(rho_b[index],1.0/3.0)*t20356*(cx0+t20362*t20366+cx1*gamma_bb[index]* \
               gx*t20273*t20346+cx2*t20343*t20274*t20355*t20277+cx3*gamma_bb[index]*gx*t20351*t20343*t20274*t20276) \
               *(4.0/3.0)+c0*pow(rho_b[index],4.0/3.0)*t20356*(t20362*(cxnl1*gamma_bb[index]*gx*t20311*t20346*(8.0/ \
               3.0)+cxnl2*t20310*t20343*t20274*t20355*(1.6E1/3.0)-cxnl1*t20310*t20343*t20274*t20377*(8.0/3.0)-cxnl2* \
               t20343*t20274*t20277*t20385*t20386+cxnl3*gamma_bb[index]*gx*t20312*t20351*t20343*t20274*8.0-cxnl3* \
               gamma_bb[index]*gx*t20343*t20381*t20274*t20382*t20276)-t20366*(t20357*t20375-1/(t20341*t20341)*t20339* \
               t20375+t20342*t20360*t20375*5.0-t20340*t20375*t20359*6.0+t20340*1/(t20341*t20341*t20341*t20341)*t20339* \
               t20375*6.0-1/(t20341*t20341*t20341*t20341*t20341*t20341)*t20342*t20339*t20375*5.0)+cx1*gamma_bb[index]* \
               gx*t20311*t20346*(8.0/3.0)-cx1*t20310*t20343*t20274*t20377*(8.0/3.0)+cx2*t20310*t20343*t20274*t20355* \
               (1.6E1/3.0)-cx2*t20343*t20274*t20277*t20385*t20386+cx3*gamma_bb[index]*gx*t20312*t20351*t20343*t20274* \
               8.0-cx3*gamma_bb[index]*gx*t20343*t20381*t20274*t20382*t20276);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t16870 = 1/pow(rho_a[index],1.0/3.0);
                double t16871 = c*t16870;
                double t16872 = sqrt(t16871);
                double t16873 = pow(t16871,3.0/2.0);
                double t16874 = c*c;
                double t16875 = 1/pow(rho_a[index],2.0/3.0);
                double t16876 = 1/c0p;
                double t16877 = b1p*t16872;
                double t16878 = b3p*t16873;
                double t16879 = b4p*t16874*t16875;
                double t16880 = b2p*c*t16870;
                double t16881 = t16880+t16877+t16878+t16879;
                double t16882 = 1/t16881;
                double t16883 = t16882*t16876*(1.0/2.0);
                double t16884 = t16883+1.0;
                double t16885 = log(t16884);
                double t16886 = a1p*c*t16870;
                double t16887 = t16886+1.0;
                double t16888 = pow(2.0,1.0/3.0);
                double t16889 = t16888*2.0;
                double t16890 = t16889-2.0;
                double t16891 = two_13*2.0;
                double t16892 = t16891-2.0;
                double t16893 = 1/t16892;
                double t16894 = 1/c0f;
                double t16895 = 1/pow(rho_b[index],1.0/3.0);
                double t16896 = c*t16895;
                double t16897 = sqrt(t16896);
                double t16898 = pow(t16896,3.0/2.0);
                double t16899 = 1/pow(rho_b[index],2.0/3.0);
                double t16900 = b1p*t16897;
                double t16901 = b3p*t16898;
                double t16902 = b4p*t16874*t16899;
                double t16903 = b2p*c*t16895;
                double t16904 = t16900+t16901+t16902+t16903;
                double t16905 = 1/t16904;
                double t16906 = t16905*t16876*(1.0/2.0);
                double t16907 = t16906+1.0;
                double t16908 = log(t16907);
                double t16909 = a1p*c*t16895;
                double t16910 = t16909+1.0;
                double t16911 = c0p*t16910*t16908*2.0;
                double t16912 = rho_a[index]+rho_b[index];
                double t16913 = 1/pow(t16912,1.0/3.0);
                double t16914 = c*t16913;
                double t16915 = sqrt(t16914);
                double t16916 = pow(t16914,3.0/2.0);
                double t16917 = 1/pow(t16912,2.0/3.0);
                double t16918 = b1p*t16915;
                double t16919 = b3p*t16916;
                double t16920 = b4p*t16917*t16874;
                double t16921 = b2p*c*t16913;
                double t16922 = t16920+t16921+t16918+t16919;
                double t16923 = 1/t16922;
                double t16924 = t16923*t16876*(1.0/2.0);
                double t16925 = t16924+1.0;
                double t16926 = log(t16925);
                double t16927 = a1p*c*t16913;
                double t16928 = t16927+1.0;
                double t16929 = c0p*t16926*t16928*2.0;
                double t16930 = rho_a[index]-rho_b[index];
                double t16931 = t16930*t16930;
                double t16932 = 1/t16912;
                double t16933 = t16930*t16932;
                double t16934 = 1/(t16912*t16912*t16912*t16912);
                double t16935 = t16931*t16931;
                double t16936 = t16933+1.0;
                double t16937 = pow(t16936,4.0/3.0);
                double t16938 = -t16933+1.0;
                double t16939 = pow(t16938,4.0/3.0);
                double t16940 = t16937+t16939-2.0;
                double t16941 = 1/pow(rho_a[index],8.0/3.0);
                double t16942 = gamma_aa[index]*t16941*(1.0/2.0);
                double t16943 = 1/pow(rho_b[index],8.0/3.0);
                double t16944 = gamma_bb[index]*t16943*(1.0/2.0);
                double t16945 = t16942+t16944;
                double t16946 = gcab*t16945;
                double t16947 = t16946+1.0;
                double t16948 = gcab*gcab;
                double t16949 = t16945*t16945;
                double t16950 = t16948*t16949;
                double t16951 = gcab*t16945*2.0;
                double t16952 = t16950+t16951+1.0;
                double t16953 = t16948*t16949*3.0;
                double t16954 = gcab*t16945*t16948*t16949;
                double t16955 = gcab*t16945*3.0;
                double t16956 = t16953+t16954+t16955+1.0;
                double t16957 = c0p*t16885*t16887*2.0;
                double t16958 = b1f*t16872;
                double t16959 = b3f*t16873;
                double t16960 = b4f*t16874*t16875;
                double t16961 = b2f*c*t16870;
                double t16962 = t16960+t16961+t16958+t16959;
                double t16963 = 1/t16962;
                double t16964 = t16963*t16894*(1.0/2.0);
                double t16965 = t16964+1.0;
                double t16966 = log(t16965);
                double t16967 = a1f*c*t16870;
                double t16968 = t16967+1.0;
                double t16969 = t16957-c0f*t16966*t16968*2.0;
                double t16970 = t16957-t16890*t16893*t16969;
                double t16971 = gcaa*gcaa;
                double t16972 = 1/pow(rho_a[index],1.6E1/3.0);
                double t16973 = gamma_aa[index]*gamma_aa[index];
                double t16974 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t16975 = gamma_aa[index]*gcaa*t16941;
                double t16976 = t16975+1.0;
                double t16977 = gamma_aa[index]*gcaa*t16941*3.0;
                double t16978 = gamma_aa[index]*gcaa*t16971*t16973*t16974;
                double t16979 = t16971*t16972*t16973*3.0;
                double t16980 = t16977+t16978+t16979+1.0;
                double t16981 = gamma_aa[index]*gcaa*t16941*2.0;
                double t16982 = t16971*t16972*t16973;
                double t16983 = t16981+t16982+1.0;
                double t16984 = pow(rho_a[index],5.0/3.0);
                double t16985 = C_k*t16984;
                double t16986 = tau_a[index]*1.0E20;
                double t16987 = 1/tau_a[index];
                double t16988 = -t16985+t16986;
                double t16989 = ( (t16988 > 0.0) ?  1.0 : 0.0 ) ;
                double t16990 = C_k*t16984*t16987*t16989;
                double t16991 = t16985-t16986;
                double t16992 = ( (t16991 > 0.0) ?  1.0 : 0.0 ) ;
                double t16993 = t16992*1.0E20;
                double t16994 = t16990+t16993-1.0;
                double t16995 = t16994*t16994;
                double t16996 = t16990+t16993+1.0;
                double t16997 = t16995*t16995;
                double t16998 = gx*gx;
                double t16999 = gamma_aa[index]*gx*t16941;
                double t17000 = t16999+1.0;
                double t17001 = gamma_aa[index]*gx*t16941*3.0;
                double t17002 = gamma_aa[index]*gx*t16973*t16974*t16998;
                double t17003 = t16972*t16973*t16998*3.0;
                double t17004 = t17001+t17002+t17003+1.0;
                double t17005 = gamma_aa[index]*gx*t16941*2.0;
                double t17006 = t16972*t16973*t16998;
                double t17007 = t17005+t17006+1.0;
                double t17008 = 1/t17000;
                double t17009 = 1/t17007;
                double t17010 = 1/t17004;
                double t17011 = 1/(t17000*t17000);
                double t17012 = gx*t16941*3.0;
                double t17013 = gamma_aa[index]*t16972*t16998*6.0;
                double t17014 = gx*t16973*t16974*t16998*3.0;
                double t17015 = t17012+t17013+t17014;
                double t17016 = 1/(t17004*t17004);
                double t17017 = gx*t16941*2.0;
                double t17018 = gamma_aa[index]*t16972*t16998*2.0;
                double t17019 = t17017+t17018;
                double t17020 = 1/(t17007*t17007);
                v_gamma_aa_[index] = (rho_a[index]*t16970+rho_b[index]*(t16911-t16890*t16893*(t16911-c0f*log((t16894* \
                   (1.0/2.0))/(b1f*t16897+b3f*t16898+b2f*c*t16895+b4f*t16874*t16899)+1.0)*(a1f*c*t16895+1.0)*2.0))-t16912* \
                   (t16929-t16940*t16934*t16935*t16893*(t16929-c0f*log((t16894*(1.0/2.0))/(b1f*t16915+b3f*t16916+b2f* \
                   c*t16913+b4f*t16917*t16874)+1.0)*(a1f*c*t16913+1.0)*2.0)+(Aa*t16940*t16893*log((1.0/2.0)/(Aa*(b1a* \
                   t16915+b3a*t16916+b2a*c*t16913+b4a*t16917*t16874))+1.0)*(t16934*t16935-1.0)*(a1a*c*t16913+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t16941*(1.0/2.0))/t16947-ccab2*1/(t16952*t16952)*t16948*t16949*(gcab*t16941+ \
                   t16941*t16945*t16948)+(ccab2*t16941*t16945*t16948)/t16952-ccab1*t16941*t16945*1/(t16947*t16947)*t16948* \
                   (1.0/2.0)+(ccab3*gcab*t16941*t16948*t16949*(3.0/2.0))/t16956-ccab3*gcab*t16945*1/(t16956*t16956)*t16948* \
                   t16949*(gcab*t16941*(3.0/2.0)+t16941*t16945*t16948*3.0+gcab*t16941*t16948*t16949*(3.0/2.0)))-rho_a[index]* \
                   t16970*((ccaa1*gcaa*t16941)/t16976+(ccaa2*gamma_aa[index]*t16971*t16972*2.0)/t16983-ccaa1*gamma_aa[index]* \
                   t16971*t16972*1/(t16976*t16976)-ccaa2*t16971*t16972*t16973*1/(t16983*t16983)*(gcaa*t16941*2.0+gamma_aa[index]* \
                   t16971*t16972*2.0)+(ccaa3*gcaa*t16971*t16973*t16974*3.0)/t16980-ccaa3*gamma_aa[index]*gcaa*t16971* \
                   1/(t16980*t16980)*t16973*t16974*(gcaa*t16941*3.0+gamma_aa[index]*t16971*t16972*6.0+gcaa*t16971*t16973* \
                   t16974*3.0))-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((t16994/t16996-t16994*t16995*1/(t16996*t16996*t16996) \
                   *2.0+t16994*1/(t16996*t16996*t16996*t16996*t16996)*t16997)*(cxnl1*gx*t16941*t17008-cxnl1*gamma_aa[index]* \
                   t16972*t16998*t17011+cxnl2*gamma_aa[index]*t16972*t16998*t17009*2.0-cxnl2*t16972*t16973*t16998*t17020* \
                   t17019+cxnl3*gx*t16973*t16974*t16998*t17010*3.0-cxnl3*gamma_aa[index]*gx*t16973*t16974*t16998*t17015* \
                   t17016)+cx1*gx*t16941*t17008-cx1*gamma_aa[index]*t16972*t16998*t17011+cx2*gamma_aa[index]*t16972*t16998* \
                   t17009*2.0-cx2*t16972*t16973*t16998*t17020*t17019+cx3*gx*t16973*t16974*t16998*t17010*3.0-cx3*gamma_aa[index]* \
                   gx*t16973*t16974*t16998*t17015*t17016);
            } else if (rho_a[index] > cutoff_) {
                double t21472 = 1/pow(rho_a[index],1.0/3.0);
                double t21473 = c*t21472;
                double t21474 = sqrt(t21473);
                double t21475 = pow(t21473,3.0/2.0);
                double t21476 = c*c;
                double t21477 = 1/pow(rho_a[index],2.0/3.0);
                double t21478 = 1/c0p;
                double t21479 = b1p*t21474;
                double t21480 = b3p*t21475;
                double t21481 = b4p*t21476*t21477;
                double t21482 = b2p*c*t21472;
                double t21483 = t21480+t21481+t21482+t21479;
                double t21484 = 1/t21483;
                double t21485 = t21484*t21478*(1.0/2.0);
                double t21486 = t21485+1.0;
                double t21487 = log(t21486);
                double t21488 = a1p*c*t21472;
                double t21489 = t21488+1.0;
                double t21490 = 1/pow(rho_a[index],8.0/3.0);
                double t21491 = gcaa*gcaa;
                double t21492 = 1/pow(rho_a[index],1.6E1/3.0);
                double t21493 = gamma_aa[index]*gamma_aa[index];
                double t21494 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t21495 = gamma_aa[index]*gcaa*t21490;
                double t21496 = t21495+1.0;
                double t21497 = gamma_aa[index]*gcaa*t21490*3.0;
                double t21498 = gamma_aa[index]*gcaa*t21491*t21493*t21494;
                double t21499 = t21491*t21492*t21493*3.0;
                double t21500 = t21497+t21498+t21499+1.0;
                double t21501 = gamma_aa[index]*gcaa*t21490*2.0;
                double t21502 = t21491*t21492*t21493;
                double t21503 = t21501+t21502+1.0;
                double t21504 = pow(rho_a[index],5.0/3.0);
                double t21505 = C_k*t21504;
                double t21506 = tau_a[index]*1.0E20;
                double t21507 = 1/tau_a[index];
                double t21508 = -t21505+t21506;
                double t21509 = ( (t21508 > 0.0) ?  1.0 : 0.0 ) ;
                double t21510 = C_k*t21504*t21507*t21509;
                double t21511 = t21505-t21506;
                double t21512 = ( (t21511 > 0.0) ?  1.0 : 0.0 ) ;
                double t21513 = t21512*1.0E20;
                double t21514 = t21510+t21513-1.0;
                double t21515 = t21514*t21514;
                double t21516 = t21510+t21513+1.0;
                double t21517 = t21515*t21515;
                double t21518 = gx*gx;
                double t21519 = gamma_aa[index]*gx*t21490;
                double t21520 = t21519+1.0;
                double t21521 = gamma_aa[index]*gx*t21490*3.0;
                double t21522 = gamma_aa[index]*gx*t21518*t21493*t21494;
                double t21523 = t21518*t21492*t21493*3.0;
                double t21524 = t21521+t21522+t21523+1.0;
                double t21525 = gamma_aa[index]*gx*t21490*2.0;
                double t21526 = t21518*t21492*t21493;
                double t21527 = t21525+t21526+1.0;
                double t21528 = 1/t21520;
                double t21529 = 1/t21527;
                double t21530 = 1/t21524;
                double t21531 = 1/(t21520*t21520);
                double t21532 = gx*t21490*3.0;
                double t21533 = gamma_aa[index]*t21518*t21492*6.0;
                double t21534 = gx*t21518*t21493*t21494*3.0;
                double t21535 = t21532+t21533+t21534;
                double t21536 = 1/(t21524*t21524);
                double t21537 = gx*t21490*2.0;
                double t21538 = gamma_aa[index]*t21518*t21492*2.0;
                double t21539 = t21537+t21538;
                double t21540 = 1/(t21527*t21527);
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t21474+ \
                   b3f*t21475+b2f*c*t21472+b4f*t21476*t21477))+1.0)*(a1f*c*t21472+1.0)*2.0-c0p*t21487*t21489*2.0))/(two_13* \
                   2.0-2.0)+c0p*t21487*t21489*2.0)*((ccaa1*gcaa*t21490)/t21496+(ccaa2*gamma_aa[index]*t21491*t21492*2.0) \
                   /t21503-ccaa1*gamma_aa[index]*t21491*t21492*1/(t21496*t21496)-ccaa2*1/(t21503*t21503)*t21491*t21492* \
                   t21493*(gcaa*t21490*2.0+gamma_aa[index]*t21491*t21492*2.0)+(ccaa3*gcaa*t21491*t21493*t21494*3.0)/t21500- \
                   ccaa3*gamma_aa[index]*gcaa*1/(t21500*t21500)*t21491*t21493*t21494*(gcaa*t21490*3.0+gamma_aa[index]* \
                   t21491*t21492*6.0+gcaa*t21491*t21493*t21494*3.0))-c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((t21514/t21516- \
                   t21514*t21515*1/(t21516*t21516*t21516)*2.0+t21514*1/(t21516*t21516*t21516*t21516*t21516)*t21517)*(cxnl1* \
                   gx*t21490*t21528-cxnl1*gamma_aa[index]*t21531*t21518*t21492+cxnl2*gamma_aa[index]*t21518*t21492*t21529* \
                   2.0-cxnl2*t21540*t21518*t21492*t21493*t21539+cxnl3*gx*t21530*t21518*t21493*t21494*3.0-cxnl3*gamma_aa[index]* \
                   gx*t21535*t21518*t21536*t21493*t21494)+cx1*gx*t21490*t21528-cx1*gamma_aa[index]*t21531*t21518*t21492+ \
                   cx2*gamma_aa[index]*t21518*t21492*t21529*2.0-cx2*t21540*t21518*t21492*t21493*t21539+cx3*gx*t21530* \
                   t21518*t21493*t21494*3.0-cx3*gamma_aa[index]*gx*t21535*t21518*t21536*t21493*t21494);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t17023 = 1/pow(rho_a[index],1.0/3.0);
                double t17024 = c*t17023;
                double t17025 = sqrt(t17024);
                double t17026 = pow(t17024,3.0/2.0);
                double t17027 = c*c;
                double t17028 = 1/pow(rho_a[index],2.0/3.0);
                double t17029 = 1/c0p;
                double t17030 = b1p*t17025;
                double t17031 = b3p*t17026;
                double t17032 = b4p*t17027*t17028;
                double t17033 = b2p*c*t17023;
                double t17034 = t17030+t17031+t17032+t17033;
                double t17035 = 1/t17034;
                double t17036 = t17035*t17029*(1.0/2.0);
                double t17037 = t17036+1.0;
                double t17038 = log(t17037);
                double t17039 = a1p*c*t17023;
                double t17040 = t17039+1.0;
                double t17041 = pow(2.0,1.0/3.0);
                double t17042 = t17041*2.0;
                double t17043 = t17042-2.0;
                double t17044 = two_13*2.0;
                double t17045 = t17044-2.0;
                double t17046 = 1/t17045;
                double t17047 = 1/c0f;
                double t17048 = 1/pow(rho_b[index],1.0/3.0);
                double t17049 = c*t17048;
                double t17050 = sqrt(t17049);
                double t17051 = pow(t17049,3.0/2.0);
                double t17052 = 1/pow(rho_b[index],2.0/3.0);
                double t17053 = b1p*t17050;
                double t17054 = b3p*t17051;
                double t17055 = b4p*t17052*t17027;
                double t17056 = b2p*c*t17048;
                double t17057 = t17053+t17054+t17055+t17056;
                double t17058 = 1/t17057;
                double t17059 = t17029*t17058*(1.0/2.0);
                double t17060 = t17059+1.0;
                double t17061 = log(t17060);
                double t17062 = a1p*c*t17048;
                double t17063 = t17062+1.0;
                double t17064 = c0p*t17061*t17063*2.0;
                double t17065 = rho_a[index]+rho_b[index];
                double t17066 = 1/pow(t17065,1.0/3.0);
                double t17067 = c*t17066;
                double t17068 = sqrt(t17067);
                double t17069 = pow(t17067,3.0/2.0);
                double t17070 = 1/pow(t17065,2.0/3.0);
                double t17071 = b1p*t17068;
                double t17072 = b3p*t17069;
                double t17073 = b4p*t17070*t17027;
                double t17074 = b2p*c*t17066;
                double t17075 = t17071+t17072+t17073+t17074;
                double t17076 = 1/t17075;
                double t17077 = t17029*t17076*(1.0/2.0);
                double t17078 = t17077+1.0;
                double t17079 = log(t17078);
                double t17080 = a1p*c*t17066;
                double t17081 = t17080+1.0;
                double t17082 = c0p*t17081*t17079*2.0;
                double t17083 = rho_a[index]-rho_b[index];
                double t17084 = t17083*t17083;
                double t17085 = 1/t17065;
                double t17086 = t17083*t17085;
                double t17087 = 1/(t17065*t17065*t17065*t17065);
                double t17088 = t17084*t17084;
                double t17089 = t17086+1.0;
                double t17090 = pow(t17089,4.0/3.0);
                double t17091 = -t17086+1.0;
                double t17092 = pow(t17091,4.0/3.0);
                double t17093 = t17090+t17092-2.0;
                double t17094 = 1/pow(rho_b[index],8.0/3.0);
                double t17095 = 1/pow(rho_a[index],8.0/3.0);
                double t17096 = gamma_aa[index]*t17095*(1.0/2.0);
                double t17097 = gamma_bb[index]*t17094*(1.0/2.0);
                double t17098 = t17096+t17097;
                double t17099 = gcab*t17098;
                double t17100 = t17099+1.0;
                double t17101 = gcab*gcab;
                double t17102 = t17098*t17098;
                double t17103 = t17101*t17102;
                double t17104 = gcab*t17098*2.0;
                double t17105 = t17103+t17104+1.0;
                double t17106 = t17101*t17102*3.0;
                double t17107 = gcab*t17101*t17102*t17098;
                double t17108 = gcab*t17098*3.0;
                double t17109 = t17106+t17107+t17108+1.0;
                double t17110 = c0p*t17040*t17038*2.0;
                double t17111 = b1f*t17050;
                double t17112 = b3f*t17051;
                double t17113 = b4f*t17052*t17027;
                double t17114 = b2f*c*t17048;
                double t17115 = t17111+t17112+t17113+t17114;
                double t17116 = 1/t17115;
                double t17117 = t17116*t17047*(1.0/2.0);
                double t17118 = t17117+1.0;
                double t17119 = log(t17118);
                double t17120 = a1f*c*t17048;
                double t17121 = t17120+1.0;
                double t17122 = t17064-c0f*t17121*t17119*2.0;
                double t17123 = t17064-t17122*t17043*t17046;
                double t17124 = gcaa*gcaa;
                double t17125 = 1/pow(rho_b[index],1.6E1/3.0);
                double t17126 = gamma_bb[index]*gamma_bb[index];
                double t17127 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t17128 = gamma_bb[index]*gcaa*t17094;
                double t17129 = t17128+1.0;
                double t17130 = gamma_bb[index]*gcaa*t17094*3.0;
                double t17131 = gamma_bb[index]*gcaa*t17124*t17126*t17127;
                double t17132 = t17124*t17125*t17126*3.0;
                double t17133 = t17130+t17131+t17132+1.0;
                double t17134 = gamma_bb[index]*gcaa*t17094*2.0;
                double t17135 = t17124*t17125*t17126;
                double t17136 = t17134+t17135+1.0;
                double t17137 = pow(rho_b[index],5.0/3.0);
                double t17138 = C_k*t17137;
                double t17147 = tau_a[index]*1.0E20;
                double t17139 = t17138-t17147;
                double t17140 = ( (t17139 > 0.0) ?  1.0 : 0.0 ) ;
                double t17141 = t17140*1.0E20;
                double t17142 = 1/tau_b[index];
                double t17143 = tau_b[index]*1.0E20;
                double t17144 = t17143-t17138;
                double t17145 = ( (t17144 > 0.0) ?  1.0 : 0.0 ) ;
                double t17146 = C_k*t17142*t17145*t17137;
                double t17148 = t17141+t17146-1.0;
                double t17149 = t17148*t17148;
                double t17150 = t17141+t17146+1.0;
                double t17151 = t17149*t17149;
                double t17152 = gx*gx;
                double t17153 = gamma_bb[index]*gx*t17094;
                double t17154 = t17153+1.0;
                double t17155 = gamma_bb[index]*gx*t17094*3.0;
                double t17156 = gamma_bb[index]*gx*t17152*t17126*t17127;
                double t17157 = t17125*t17152*t17126*3.0;
                double t17158 = t17155+t17156+t17157+1.0;
                double t17159 = gamma_bb[index]*gx*t17094*2.0;
                double t17160 = t17125*t17152*t17126;
                double t17161 = t17160+t17159+1.0;
                double t17162 = 1/t17154;
                double t17163 = 1/t17161;
                double t17164 = 1/t17158;
                double t17165 = 1/(t17154*t17154);
                double t17166 = gx*t17094*3.0;
                double t17167 = gamma_bb[index]*t17125*t17152*6.0;
                double t17168 = gx*t17152*t17126*t17127*3.0;
                double t17169 = t17166+t17167+t17168;
                double t17170 = 1/(t17158*t17158);
                double t17171 = gx*t17094*2.0;
                double t17172 = gamma_bb[index]*t17125*t17152*2.0;
                double t17173 = t17171+t17172;
                double t17174 = 1/(t17161*t17161);
                v_gamma_bb_[index] = (rho_b[index]*t17123+rho_a[index]*(t17110-t17043*t17046*(t17110-c0f*log((t17047* \
                   (1.0/2.0))/(b1f*t17025+b3f*t17026+b2f*c*t17023+b4f*t17027*t17028)+1.0)*(a1f*c*t17023+1.0)*2.0))-t17065* \
                   (t17082-t17046*t17093*t17087*t17088*(t17082-c0f*log((t17047*(1.0/2.0))/(b1f*t17068+b3f*t17069+b2f* \
                   c*t17066+b4f*t17070*t17027)+1.0)*(a1f*c*t17066+1.0)*2.0)+(Aa*t17046*t17093*log((1.0/2.0)/(Aa*(b1a* \
                   t17068+b3a*t17069+b2a*c*t17066+b4a*t17070*t17027))+1.0)*(t17087*t17088-1.0)*(a1a*c*t17066+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t17094*(1.0/2.0))/t17100-ccab2*t17101*t17102*1/(t17105*t17105)*(gcab*t17094+ \
                   t17101*t17094*t17098)-ccab1*1/(t17100*t17100)*t17101*t17094*t17098*(1.0/2.0)+(ccab2*t17101*t17094* \
                   t17098)/t17105+(ccab3*gcab*t17101*t17102*t17094*(3.0/2.0))/t17109-ccab3*gcab*t17101*t17102*1/(t17109* \
                   t17109)*t17098*(gcab*t17094*(3.0/2.0)+t17101*t17094*t17098*3.0+gcab*t17101*t17102*t17094*(3.0/2.0) \
                   ))-rho_b[index]*t17123*((ccaa1*gcaa*t17094)/t17129+(ccaa2*gamma_bb[index]*t17124*t17125*2.0)/t17136- \
                   ccaa1*gamma_bb[index]*t17124*t17125*1/(t17129*t17129)-ccaa2*t17124*t17125*t17126*1/(t17136*t17136) \
                   *(gcaa*t17094*2.0+gamma_bb[index]*t17124*t17125*2.0)+(ccaa3*gcaa*t17124*t17126*t17127*3.0)/t17133- \
                   ccaa3*gamma_bb[index]*gcaa*t17124*1/(t17133*t17133)*t17126*t17127*(gcaa*t17094*3.0+gamma_bb[index]* \
                   t17124*t17125*6.0+gcaa*t17124*t17126*t17127*3.0))-c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((t17148/t17150+ \
                   1/(t17150*t17150*t17150*t17150*t17150)*t17151*t17148-1/(t17150*t17150*t17150)*t17148*t17149*2.0)*(cxnl1* \
                   gx*t17162*t17094+cxnl2*gamma_bb[index]*t17125*t17152*t17163*2.0-cxnl1*gamma_bb[index]*t17125*t17152* \
                   t17165-cxnl2*t17125*t17152*t17126*t17173*t17174+cxnl3*gx*t17152*t17126*t17127*t17164*3.0-cxnl3*gamma_bb[index]* \
                   gx*t17152*t17170*t17126*t17127*t17169)+cx1*gx*t17162*t17094-cx1*gamma_bb[index]*t17125*t17152*t17165+ \
                   cx2*gamma_bb[index]*t17125*t17152*t17163*2.0-cx2*t17125*t17152*t17126*t17173*t17174+cx3*gx*t17152* \
                   t17126*t17127*t17164*3.0-cx3*gamma_bb[index]*gx*t17152*t17170*t17126*t17127*t17169);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t20390 = 1/pow(rho_b[index],1.0/3.0);
                double t20391 = c*t20390;
                double t20392 = sqrt(t20391);
                double t20393 = pow(t20391,3.0/2.0);
                double t20394 = c*c;
                double t20395 = 1/pow(rho_b[index],2.0/3.0);
                double t20396 = 1/c0p;
                double t20397 = b1p*t20392;
                double t20398 = b3p*t20393;
                double t20399 = b4p*t20394*t20395;
                double t20400 = b2p*c*t20390;
                double t20401 = t20400+t20397+t20398+t20399;
                double t20402 = 1/t20401;
                double t20403 = t20402*t20396*(1.0/2.0);
                double t20404 = t20403+1.0;
                double t20405 = log(t20404);
                double t20406 = a1p*c*t20390;
                double t20407 = t20406+1.0;
                double t20408 = 1/pow(rho_b[index],8.0/3.0);
                double t20409 = gcaa*gcaa;
                double t20410 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20411 = gamma_bb[index]*gamma_bb[index];
                double t20412 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20413 = gamma_bb[index]*gcaa*t20408;
                double t20414 = t20413+1.0;
                double t20415 = gamma_bb[index]*gcaa*t20408*3.0;
                double t20416 = gamma_bb[index]*gcaa*t20411*t20412*t20409;
                double t20417 = t20410*t20411*t20409*3.0;
                double t20418 = t20415+t20416+t20417+1.0;
                double t20419 = gamma_bb[index]*gcaa*t20408*2.0;
                double t20420 = t20410*t20411*t20409;
                double t20421 = t20420+t20419+1.0;
                double t20422 = pow(rho_b[index],5.0/3.0);
                double t20423 = C_k*t20422;
                double t20432 = tau_a[index]*1.0E20;
                double t20424 = t20423-t20432;
                double t20425 = ( (t20424 > 0.0) ?  1.0 : 0.0 ) ;
                double t20426 = t20425*1.0E20;
                double t20427 = 1/tau_b[index];
                double t20428 = tau_b[index]*1.0E20;
                double t20429 = -t20423+t20428;
                double t20430 = ( (t20429 > 0.0) ?  1.0 : 0.0 ) ;
                double t20431 = C_k*t20430*t20422*t20427;
                double t20433 = t20431+t20426-1.0;
                double t20434 = t20433*t20433;
                double t20435 = t20431+t20426+1.0;
                double t20436 = t20434*t20434;
                double t20437 = gx*gx;
                double t20438 = gamma_bb[index]*gx*t20408;
                double t20439 = t20438+1.0;
                double t20440 = gamma_bb[index]*gx*t20408*3.0;
                double t20441 = gamma_bb[index]*gx*t20411*t20412*t20437;
                double t20442 = t20410*t20411*t20437*3.0;
                double t20443 = t20440+t20441+t20442+1.0;
                double t20444 = gamma_bb[index]*gx*t20408*2.0;
                double t20445 = t20410*t20411*t20437;
                double t20446 = t20444+t20445+1.0;
                double t20447 = 1/t20439;
                double t20448 = 1/t20446;
                double t20449 = 1/t20443;
                double t20450 = 1/(t20439*t20439);
                double t20451 = gx*t20408*3.0;
                double t20452 = gamma_bb[index]*t20410*t20437*6.0;
                double t20453 = gx*t20411*t20412*t20437*3.0;
                double t20454 = t20451+t20452+t20453;
                double t20455 = 1/(t20443*t20443);
                double t20456 = gx*t20408*2.0;
                double t20457 = gamma_bb[index]*t20410*t20437*2.0;
                double t20458 = t20456+t20457;
                double t20459 = 1/(t20446*t20446);
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t20392+ \
                   b3f*t20393+b2f*c*t20390+b4f*t20394*t20395))+1.0)*(a1f*c*t20390+1.0)*2.0-c0p*t20405*t20407*2.0))/(two_13* \
                   2.0-2.0)+c0p*t20405*t20407*2.0)*((ccaa1*gcaa*t20408)/t20414+(ccaa2*gamma_bb[index]*t20410*t20409*2.0) \
                   /t20421-ccaa1*gamma_bb[index]*t20410*1/(t20414*t20414)*t20409-ccaa2*t20410*t20411*1/(t20421*t20421) \
                   *t20409*(gcaa*t20408*2.0+gamma_bb[index]*t20410*t20409*2.0)+(ccaa3*gcaa*t20411*t20412*t20409*3.0)/ \
                   t20418-ccaa3*gamma_bb[index]*gcaa*t20411*t20412*t20409*1/(t20418*t20418)*(gcaa*t20408*3.0+gamma_bb[index]* \
                   t20410*t20409*6.0+gcaa*t20411*t20412*t20409*3.0))-c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((t20433/t20435- \
                   t20433*t20434*1/(t20435*t20435*t20435)*2.0+t20433*1/(t20435*t20435*t20435*t20435*t20435)*t20436)*(cxnl1* \
                   gx*t20408*t20447-cxnl1*gamma_bb[index]*t20410*t20450*t20437+cxnl2*gamma_bb[index]*t20410*t20437*t20448* \
                   2.0-cxnl2*t20410*t20411*t20437*t20458*t20459+cxnl3*gx*t20411*t20412*t20437*t20449*3.0-cxnl3*gamma_bb[index]* \
                   gx*t20411*t20412*t20454*t20437*t20455)+cx1*gx*t20408*t20447-cx1*gamma_bb[index]*t20410*t20450*t20437+ \
                   cx2*gamma_bb[index]*t20410*t20437*t20448*2.0-cx2*t20410*t20411*t20437*t20458*t20459+cx3*gx*t20411* \
                   t20412*t20437*t20449*3.0-cx3*gamma_bb[index]*gx*t20411*t20412*t20454*t20437*t20455);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t17176 = 1/pow(rho_a[index],8.0/3.0);
                double t17177 = gamma_aa[index]*gamma_aa[index];
                double t17178 = gx*gx;
                double t17179 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t17180 = 1/pow(rho_a[index],1.6E1/3.0);
                double t17181 = pow(rho_a[index],5.0/3.0);
                double t17182 = tau_a[index]*1.0E20;
                double t17185 = C_k*t17181;
                double t17183 = t17182-t17185;
                double t17184 = 0.0 ;
                double t17186 = 1/tau_a[index];
                double t17187 = ( (t17183 > 0.0) ?  1.0 : 0.0 ) ;
                double t17188 = t17184*1.0E40;
                double t17189 = 1/(tau_a[index]*tau_a[index]);
                double t17190 = C_k*t17181*t17187*t17189;
                double t17197 = C_k*t17181*t17184*t17186*1.0E20;
                double t17191 = t17190+t17188-t17197;
                double t17192 = -t17182+t17185;
                double t17193 = ( (t17192 > 0.0) ?  1.0 : 0.0 ) ;
                double t17194 = t17193*1.0E20;
                double t17195 = C_k*t17181*t17186*t17187;
                double t17196 = t17194+t17195+1.0;
                double t17198 = t17194+t17195-1.0;
                double t17199 = t17198*t17198;
                double t17200 = t17199*t17199;
                double t17201 = 1/pow(rho_b[index],8.0/3.0);
                double t17202 = gamma_bb[index]*gamma_bb[index];
                double t17203 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t17204 = 1/pow(rho_b[index],1.6E1/3.0);
                double t17205 = pow(rho_b[index],5.0/3.0);
                double t17206 = C_k*t17205;
                double t17207 = t17206-t17182;
                double t17208 = ( (t17207 > 0.0) ?  1.0 : 0.0 ) ;
                double t17209 = t17208*1.0E20;
                double t17210 = 1/tau_b[index];
                double t17211 = tau_b[index]*1.0E20;
                double t17212 = t17211-t17206;
                double t17213 = ( (t17212 > 0.0) ?  1.0 : 0.0 ) ;
                double t17214 = C_k*t17210*t17213*t17205;
                double t17215 = t17214+t17209-1.0;
                double t17216 = t17214+t17209+1.0;
                double t17217 = -t17206+t17182;
                double t17218 = 0.0 ;
                double t17219 = t17215*t17215;
                double t17220 = t17219*t17219;
                v_tau_a_[index] = (c0*pow(rho_a[index],4.0/3.0)*(cxnl0+(cxnl2*t17180*t17177*t17178)/(gamma_aa[index]* \
                   gx*t17176*2.0+t17180*t17177*t17178+1.0)+(cxnl1*gamma_aa[index]*gx*t17176)/(gamma_aa[index]*gx*t17176+ \
                   1.0)+(cxnl3*gamma_aa[index]*gx*t17177*t17178*t17179)/(gamma_aa[index]*gx*t17176*3.0+t17180*t17177* \
                   t17178*3.0+gamma_aa[index]*gx*t17177*t17178*t17179+1.0))*(t17191/t17196+t17200*t17191*1/(t17196*t17196* \
                   t17196*t17196*t17196)*5.0-t17191*1/(t17196*t17196)*t17198-t17191*1/(t17196*t17196*t17196)*t17199*6.0- \
                   t17200*t17191*1/(t17196*t17196*t17196*t17196*t17196*t17196)*t17198*5.0+t17191*1/(t17196*t17196*t17196* \
                   t17196)*t17198*t17199*6.0)+c0*pow(rho_b[index],4.0/3.0)*(cxnl0+(cxnl2*t17202*t17204*t17178)/(gamma_bb[index]* \
                   gx*t17201*2.0+t17202*t17204*t17178+1.0)+(cxnl1*gamma_bb[index]*gx*t17201)/(gamma_bb[index]*gx*t17201+ \
                   1.0)+(cxnl3*gamma_bb[index]*gx*t17202*t17203*t17178)/(gamma_bb[index]*gx*t17201*3.0+t17202*t17204* \
                   t17178*3.0+gamma_bb[index]*gx*t17202*t17203*t17178+1.0))*(( 0.0 )/t17216+t17220*1/(t17216*t17216*t17216* \
                   t17216*t17216)*t17218*5.0E40-t17215*1/(t17216*t17216)*t17218*1.0E40-1/(t17216*t17216*t17216)*t17218* \
                   t17219*6.0E40-t17220*t17215*1/(t17216*t17216*t17216*t17216*t17216*t17216)*t17218*5.0E40+t17215*1/(t17216* \
                   t17216*t17216*t17216)*t17218*t17219*6.0E40))*(X-1.0);
            } else if (rho_a[index] > cutoff_) {
                double t21544 = 1/pow(rho_a[index],8.0/3.0);
                double t21545 = gamma_aa[index]*gamma_aa[index];
                double t21546 = gx*gx;
                double t21547 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t21548 = 1/pow(rho_a[index],1.6E1/3.0);
                double t21549 = pow(rho_a[index],5.0/3.0);
                double t21550 = tau_a[index]*1.0E20;
                double t21553 = C_k*t21549;
                double t21551 = t21550-t21553;
                double t21552 = 0.0 ;
                double t21554 = 1/tau_a[index];
                double t21555 = ( (t21551 > 0.0) ?  1.0 : 0.0 ) ;
                double t21556 = t21552*1.0E40;
                double t21557 = 1/(tau_a[index]*tau_a[index]);
                double t21558 = C_k*t21555*t21557*t21549;
                double t21565 = C_k*t21552*t21554*t21549*1.0E20;
                double t21559 = t21556-t21565+t21558;
                double t21560 = -t21550+t21553;
                double t21561 = ( (t21560 > 0.0) ?  1.0 : 0.0 ) ;
                double t21562 = t21561*1.0E20;
                double t21563 = C_k*t21554*t21555*t21549;
                double t21564 = t21562+t21563+1.0;
                double t21566 = t21562+t21563-1.0;
                double t21567 = t21566*t21566;
                double t21568 = t21567*t21567;
                v_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t21545*t21546*t21548)/(gamma_aa[index]* \
                   gx*t21544*2.0+t21545*t21546*t21548+1.0)+(cxnl1*gamma_aa[index]*gx*t21544)/(gamma_aa[index]*gx*t21544+ \
                   1.0)+(cxnl3*gamma_aa[index]*gx*t21545*t21546*t21547)/(gamma_aa[index]*gx*t21544*3.0+t21545*t21546* \
                   t21548*3.0+gamma_aa[index]*gx*t21545*t21546*t21547+1.0))*(t21559/t21564-1/(t21564*t21564)*t21566*t21559- \
                   1/(t21564*t21564*t21564)*t21567*t21559*6.0+1/(t21564*t21564*t21564*t21564*t21564)*t21559*t21568*5.0+ \
                   1/(t21564*t21564*t21564*t21564)*t21566*t21567*t21559*6.0-1/(t21564*t21564*t21564*t21564*t21564*t21564) \
                   *t21566*t21559*t21568*5.0);
            } else if (rho_b[index] > cutoff_) {
                double t20461 = 1/pow(rho_b[index],8.0/3.0);
                double t20462 = gamma_bb[index]*gamma_bb[index];
                double t20463 = gx*gx;
                double t20464 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20465 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20466 = tau_a[index]*1.0E20;
                double t20467 = pow(rho_b[index],5.0/3.0);
                double t20468 = C_k*t20467;
                double t20469 = -t20466+t20468;
                double t20470 = ( (t20469 > 0.0) ?  1.0 : 0.0 ) ;
                double t20471 = t20470*1.0E20;
                double t20472 = 1/tau_b[index];
                double t20473 = tau_b[index]*1.0E20;
                double t20474 = t20473-t20468;
                double t20475 = ( (t20474 > 0.0) ?  1.0 : 0.0 ) ;
                double t20476 = C_k*t20472*t20475*t20467;
                double t20477 = t20471+t20476-1.0;
                double t20478 = t20471+t20476+1.0;
                double t20479 = t20466-t20468;
                double t20480 = 0.0 ;
                double t20481 = t20477*t20477;
                double t20482 = t20481*t20481;
                v_tau_a_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t20462*t20463*t20465)/(gamma_bb[index]* \
                   gx*t20461*2.0+t20462*t20463*t20465+1.0)+(cxnl1*gamma_bb[index]*gx*t20461)/(gamma_bb[index]*gx*t20461+ \
                   1.0)+(cxnl3*gamma_bb[index]*gx*t20462*t20463*t20464)/(gamma_bb[index]*gx*t20461*3.0+t20462*t20463* \
                   t20465*3.0+gamma_bb[index]*gx*t20462*t20463*t20464+1.0))*(( 0.0 )/t20478-t20480*t20481*1/(t20478*t20478* \
                   t20478)*6.0E40+t20480*t20482*1/(t20478*t20478*t20478*t20478*t20478)*5.0E40-t20480*t20477*1/(t20478* \
                   t20478)*1.0E40+t20480*t20481*t20477*1/(t20478*t20478*t20478*t20478)*6.0E40-t20480*t20482*t20477*1/ \
                   (t20478*t20478*t20478*t20478*t20478*t20478)*5.0E40);
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t17222 = 1/pow(rho_b[index],8.0/3.0);
                double t17223 = gamma_bb[index]*gamma_bb[index];
                double t17224 = gx*gx;
                double t17225 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t17226 = 1/pow(rho_b[index],1.6E1/3.0);
                double t17227 = pow(rho_b[index],5.0/3.0);
                double t17228 = tau_b[index]*1.0E20;
                double t17230 = C_k*t17227;
                double t17229 = -t17230+t17228;
                double t17231 = 1/tau_b[index];
                double t17232 = ( (t17229 > 0.0) ?  1.0 : 0.0 ) ;
                double t17233 = 0.0 ;
                double t17234 = 1/(tau_b[index]*tau_b[index]);
                double t17242 = C_k*t17231*t17233*t17227*1.0E20;
                double t17243 = C_k*t17232*t17234*t17227;
                double t17235 = t17242-t17243;
                double t17240 = tau_a[index]*1.0E20;
                double t17236 = t17230-t17240;
                double t17237 = ( (t17236 > 0.0) ?  1.0 : 0.0 ) ;
                double t17238 = t17237*1.0E20;
                double t17239 = C_k*t17231*t17232*t17227;
                double t17241 = t17238+t17239+1.0;
                double t17244 = t17238+t17239-1.0;
                double t17245 = t17244*t17244;
                double t17246 = t17245*t17245;
                v_tau_b_[index] = -c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t17223*t17224*t17226)/(gamma_bb[index]* \
                   gx*t17222*2.0+t17223*t17224*t17226+1.0)+(cxnl1*gamma_bb[index]*gx*t17222)/(gamma_bb[index]*gx*t17222+ \
                   1.0)+(cxnl3*gamma_bb[index]*gx*t17223*t17224*t17225)/(gamma_bb[index]*gx*t17222*3.0+t17223*t17224* \
                   t17226*3.0+gamma_bb[index]*gx*t17223*t17224*t17225+1.0))*(t17235/t17241-1/(t17241*t17241)*t17235*t17244- \
                   1/(t17241*t17241*t17241)*t17235*t17245*6.0+1/(t17241*t17241*t17241*t17241*t17241)*t17235*t17246*5.0+ \
                   1/(t17241*t17241*t17241*t17241)*t17235*t17244*t17245*6.0-1/(t17241*t17241*t17241*t17241*t17241*t17241) \
                   *t17235*t17244*t17246*5.0);
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t20484 = 1/pow(rho_b[index],8.0/3.0);
                double t20485 = gamma_bb[index]*gamma_bb[index];
                double t20486 = gx*gx;
                double t20487 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20488 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20489 = pow(rho_b[index],5.0/3.0);
                double t20490 = tau_b[index]*1.0E20;
                double t20492 = C_k*t20489;
                double t20491 = t20490-t20492;
                double t20493 = 1/tau_b[index];
                double t20494 = ( (t20491 > 0.0) ?  1.0 : 0.0 ) ;
                double t20495 = 0.0 ;
                double t20496 = 1/(tau_b[index]*tau_b[index]);
                double t20504 = C_k*t20493*t20495*t20489*1.0E20;
                double t20505 = C_k*t20494*t20496*t20489;
                double t20497 = t20504-t20505;
                double t20502 = tau_a[index]*1.0E20;
                double t20498 = -t20502+t20492;
                double t20499 = ( (t20498 > 0.0) ?  1.0 : 0.0 ) ;
                double t20500 = t20499*1.0E20;
                double t20501 = C_k*t20493*t20494*t20489;
                double t20503 = t20500+t20501+1.0;
                double t20506 = t20500+t20501-1.0;
                double t20507 = t20506*t20506;
                double t20508 = t20507*t20507;
                v_tau_b_[index] = -c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t20485*t20486*t20488)/(gamma_bb[index]* \
                   gx*t20484*2.0+t20485*t20486*t20488+1.0)+(cxnl1*gamma_bb[index]*gx*t20484)/(gamma_bb[index]*gx*t20484+ \
                   1.0)+(cxnl3*gamma_bb[index]*gx*t20485*t20486*t20487)/(gamma_bb[index]*gx*t20484*3.0+t20485*t20486* \
                   t20488*3.0+gamma_bb[index]*gx*t20485*t20486*t20487+1.0))*(t20497/t20503-1/(t20503*t20503)*t20506*t20497- \
                   1/(t20503*t20503*t20503)*t20507*t20497*6.0+1/(t20503*t20503*t20503*t20503*t20503)*t20508*t20497*5.0+ \
                   1/(t20503*t20503*t20503*t20503)*t20506*t20507*t20497*6.0-1/(t20503*t20503*t20503*t20503*t20503*t20503) \
                   *t20506*t20508*t20497*5.0);
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t17248 = gcab*gcab;
            double t17252 = 1/pow(rho_a[index],8.0/3.0);
            double t17253 = gamma_aa[index]*t17252*(1.0/2.0);
            double t17254 = 1/pow(rho_b[index],8.0/3.0);
            double t17255 = gamma_bb[index]*t17254*(1.0/2.0);
            double t17249 = t17253+t17255;
            double t17250 = t17249*t17249;
            double t17251 = 1/pow(rho_a[index],1.1E1/3.0);
            double t17256 = gcab*t17249;
            double t17257 = t17256+1.0;
            double t17258 = t17250*t17248;
            double t17259 = gcab*t17249*2.0;
            double t17260 = t17258+t17259+1.0;
            double t17261 = t17250*t17248*3.0;
            double t17262 = gcab*t17250*t17248*t17249;
            double t17263 = gcab*t17249*3.0;
            double t17264 = t17261+t17262+t17263+1.0;
            double t17265 = rho_a[index]+rho_b[index];
            double t17266 = 1/pow(t17265,1.0/3.0);
            double t17267 = c*t17266;
            double t17268 = sqrt(t17267);
            double t17269 = b1p*t17268;
            double t17270 = pow(t17267,3.0/2.0);
            double t17271 = b3p*t17270;
            double t17272 = c*c;
            double t17273 = 1/pow(t17265,2.0/3.0);
            double t17274 = b4p*t17272*t17273;
            double t17275 = b2p*c*t17266;
            double t17276 = t17271+t17274+t17275+t17269;
            double t17277 = 1/pow(t17265,4.0/3.0);
            double t17278 = 1/c0p;
            double t17279 = 1/t17276;
            double t17280 = t17278*t17279*(1.0/2.0);
            double t17281 = t17280+1.0;
            double t17282 = a1p*c*t17266;
            double t17283 = t17282+1.0;
            double t17284 = rho_a[index]-rho_b[index];
            double t17285 = t17284*t17284;
            double t17286 = 1/t17265;
            double t17287 = t17284*t17286;
            double t17288 = two_13*2.0;
            double t17289 = t17288-2.0;
            double t17290 = 1/t17289;
            double t17291 = 1/c0f;
            double t17292 = b1f*t17268;
            double t17293 = b3f*t17270;
            double t17294 = b4f*t17272*t17273;
            double t17295 = b2f*c*t17266;
            double t17296 = t17292+t17293+t17294+t17295;
            double t17297 = 1/t17296;
            double t17298 = t17291*t17297*(1.0/2.0);
            double t17299 = t17298+1.0;
            double t17300 = log(t17299);
            double t17301 = a1f*c*t17266;
            double t17302 = t17301+1.0;
            double t17303 = log(t17281);
            double t17313 = c0f*t17300*t17302*2.0;
            double t17314 = c0p*t17303*t17283*2.0;
            double t17304 = t17313-t17314;
            double t17305 = t17287+1.0;
            double t17306 = pow(t17305,4.0/3.0);
            double t17307 = -t17287+1.0;
            double t17308 = pow(t17307,4.0/3.0);
            double t17309 = t17306+t17308-2.0;
            double t17310 = 1/(t17265*t17265);
            double t17341 = t17310*t17284;
            double t17311 = -t17341+t17286;
            double t17312 = 1/(t17265*t17265*t17265*t17265);
            double t17315 = t17285*t17285;
            double t17316 = 1/pow(t17265,5.0/3.0);
            double t17317 = 1/sqrt(t17267);
            double t17318 = 1/t17281;
            double t17319 = 1/(t17276*t17276);
            double t17320 = b4p*t17316*t17272*(2.0/3.0);
            double t17321 = b2p*c*t17277*(1.0/3.0);
            double t17322 = b1p*c*t17317*t17277*(1.0/6.0);
            double t17323 = b3p*c*t17268*t17277*(1.0/2.0);
            double t17324 = t17320+t17321+t17322+t17323;
            double t17325 = t17324*t17318*t17283*t17319;
            double t17326 = 1/(t17265*t17265*t17265*t17265*t17265);
            double t17327 = 1/d2fz0;
            double t17328 = 1/Aa;
            double t17329 = b1a*t17268;
            double t17330 = b3a*t17270;
            double t17331 = b4a*t17272*t17273;
            double t17332 = b2a*c*t17266;
            double t17333 = t17330+t17331+t17332+t17329;
            double t17334 = 1/t17333;
            double t17335 = t17334*t17328*(1.0/2.0);
            double t17336 = t17335+1.0;
            double t17337 = log(t17336);
            double t17338 = a1a*c*t17266;
            double t17339 = t17338+1.0;
            double t17340 = pow(t17305,1.0/3.0);
            double t17342 = t17311*t17340*(4.0/3.0);
            double t17343 = pow(t17307,1.0/3.0);
            double t17500 = t17311*t17343*(4.0/3.0);
            double t17344 = -t17500+t17342;
            double t17345 = t17312*t17315;
            double t17346 = t17345-1.0;
            double t17347 = 1/pow(rho_a[index],1.0/3.0);
            double t17348 = c*t17347;
            double t17349 = sqrt(t17348);
            double t17350 = b1f*t17349;
            double t17351 = pow(t17348,3.0/2.0);
            double t17352 = b3f*t17351;
            double t17353 = 1/pow(rho_a[index],2.0/3.0);
            double t17354 = b4f*t17272*t17353;
            double t17355 = b2f*c*t17347;
            double t17356 = t17350+t17352+t17354+t17355;
            double t17357 = 1/pow(rho_a[index],4.0/3.0);
            double t17358 = b1p*t17349;
            double t17359 = b3p*t17351;
            double t17360 = b4p*t17272*t17353;
            double t17361 = b2p*c*t17347;
            double t17362 = t17360+t17361+t17358+t17359;
            double t17363 = 1/pow(rho_a[index],5.0/3.0);
            double t17364 = 1/sqrt(t17348);
            double t17365 = 1/t17356;
            double t17366 = t17291*t17365*(1.0/2.0);
            double t17367 = t17366+1.0;
            double t17368 = 1/t17362;
            double t17369 = t17278*t17368*(1.0/2.0);
            double t17370 = t17369+1.0;
            double t17371 = a1p*c*t17347;
            double t17372 = t17371+1.0;
            double t17373 = 1/t17370;
            double t17374 = 1/(t17362*t17362);
            double t17375 = b4p*t17272*t17363*(2.0/3.0);
            double t17376 = b2p*c*t17357*(1.0/3.0);
            double t17377 = b1p*c*t17364*t17357*(1.0/6.0);
            double t17378 = b3p*c*t17357*t17349*(1.0/2.0);
            double t17379 = t17375+t17376+t17377+t17378;
            double t17380 = t17372*t17373*t17374*t17379;
            double t17381 = log(t17370);
            double t17382 = pow(2.0,1.0/3.0);
            double t17383 = t17382*2.0;
            double t17384 = t17383-2.0;
            double t17385 = log(t17367);
            double t17386 = a1f*c*t17347;
            double t17387 = t17386+1.0;
            double t17388 = 1/t17367;
            double t17389 = 1/(t17356*t17356);
            double t17390 = b4f*t17272*t17363*(2.0/3.0);
            double t17391 = b2f*c*t17357*(1.0/3.0);
            double t17392 = b1f*c*t17364*t17357*(1.0/6.0);
            double t17393 = b3f*c*t17357*t17349*(1.0/2.0);
            double t17394 = t17390+t17391+t17392+t17393;
            double t17395 = a1f*c*c0f*t17357*t17385*(2.0/3.0);
            double t17396 = a1p*c*c0p*t17381*t17357*(2.0/3.0);
            double t17397 = gamma_aa[index]*gamma_aa[index];
            double t17398 = gcaa*gcaa;
            double t17399 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t17400 = 1/pow(rho_a[index],1.6E1/3.0);
            double t17401 = pow(rho_a[index],5.0/3.0);
            double t17402 = C_k*t17401;
            double t17403 = tau_a[index]*1.0E20;
            double t17404 = 1/tau_a[index];
            double t17405 = -t17402+t17403;
            double t17406 = ( (t17405 > 0.0) ?  1.0 : 0.0 ) ;
            double t17407 = C_k*t17401*t17404*t17406;
            double t17408 = t17402-t17403;
            double t17409 = ( (t17408 > 0.0) ?  1.0 : 0.0 ) ;
            double t17410 = t17409*1.0E20;
            double t17411 = t17410+t17407-1.0;
            double t17412 = t17411*t17411;
            double t17413 = t17410+t17407+1.0;
            double t17414 = t17412*t17412;
            double t17415 = gx*gx;
            double t17416 = gamma_aa[index]*gx*t17252;
            double t17417 = t17416+1.0;
            double t17418 = 1/t17417;
            double t17419 = gamma_aa[index]*gx*t17252*3.0;
            double t17420 = gamma_aa[index]*gx*t17415*t17397*t17399;
            double t17421 = t17400*t17415*t17397*3.0;
            double t17422 = t17420+t17421+t17419+1.0;
            double t17423 = 1/t17422;
            double t17424 = gamma_aa[index]*gx*t17252*2.0;
            double t17425 = t17400*t17415*t17397;
            double t17426 = t17424+t17425+1.0;
            double t17427 = 1/t17426;
            double t17428 = 1/t17413;
            double t17429 = 1/(t17413*t17413*t17413);
            double t17430 = 1/(t17413*t17413*t17413*t17413*t17413);
            double t17431 = t17411*t17430*t17414;
            double t17432 = 1/pow(rho_a[index],1.9E1/3.0);
            double t17433 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t17434 = cxnl1*gamma_aa[index]*gx*t17252*t17418;
            double t17435 = cxnl3*gamma_aa[index]*gx*t17423*t17415*t17397*t17399;
            double t17436 = cxnl2*t17400*t17415*t17427*t17397;
            double t17437 = cxnl0+t17434+t17435+t17436;
            double t17438 = 0.0 ;
            double t17439 = pow(rho_a[index],2.0/3.0);
            double t17440 = C_k*t17438*t17439*(5.0E20/3.0);
            double t17441 = C_k*C_k;
            double t17442 = pow(rho_a[index],7.0/3.0);
            double t17443 = C_k*t17404*t17406*t17439*(5.0/3.0);
            double t17445 = t17404*t17441*t17442*t17438*(5.0/3.0);
            double t17444 = t17440+t17443-t17445;
            double t17446 = 1/(t17417*t17417);
            double t17447 = gamma_aa[index]*gx*t17251*8.0;
            double t17448 = gamma_aa[index]*gx*t17415*t17433*t17397*8.0;
            double t17449 = t17432*t17415*t17397*1.6E1;
            double t17450 = t17447+t17448+t17449;
            double t17451 = 1/(t17422*t17422);
            double t17452 = gamma_aa[index]*gx*t17251*(1.6E1/3.0);
            double t17453 = t17432*t17415*t17397*(1.6E1/3.0);
            double t17454 = t17452+t17453;
            double t17455 = 1/(t17426*t17426);
            double t17456 = t17411*t17428;
            double t17494 = t17411*t17412*t17429*2.0;
            double t17457 = t17431+t17456-t17494;
            double t17458 = 1/pow(rho_a[index],1.0E1);
            double t17459 = 1/pow(rho_a[index],2.2E1/3.0);
            double t17460 = 1/pow(rho_a[index],1.4E1/3.0);
            double t17461 = cxnl1*gamma_aa[index]*gx*t17251*t17418*(8.0/3.0);
            double t17462 = cxnl3*gamma_aa[index]*gx*t17423*t17415*t17433*t17397*8.0;
            double t17463 = cxnl2*t17432*t17415*t17427*t17397*(1.6E1/3.0);
            double t17464 = t17461+t17462+t17463-cxnl1*t17432*t17415*t17446*t17397*(8.0/3.0)-cxnl2*t17400*t17415* \
               t17454*t17455*t17397-cxnl3*gamma_aa[index]*gx*t17450*t17415*t17451*t17397*t17399;
            double t17465 = t17444*t17428;
            double t17466 = 1/(t17413*t17413);
            double t17467 = 1/(t17413*t17413*t17413*t17413);
            double t17468 = t17411*t17412*t17444*t17467*6.0;
            double t17469 = t17430*t17414*t17444*5.0;
            double t17470 = 1/(t17413*t17413*t17413*t17413*t17413*t17413);
            double t17471 = t17465+t17468+t17469-t17411*t17444*t17466-t17412*t17444*t17429*6.0-t17411*t17414* \
               t17470*t17444*5.0;
            double t17472 = pow(rho_a[index],4.0/3.0);
            double t17473 = rho_a[index]*rho_a[index];
            double t17474 = 0.0 ;
            double t17475 = t17444*t17444;
            double t17476 = C_k*t17347*t17438*(1.0E21/9.0);
            double t17477 = C_k*rho_a[index]*t17404*t17441*t17473*t17474*(2.5E1/9.0);
            double t17478 = C_k*t17404*t17406*t17347*(1.0E1/9.0);
            double t17480 = t17441*t17472*t17474*(2.5E21/9.0);
            double t17481 = t17404*t17441*t17472*t17438*(2.0E1/3.0);
            double t17479 = -t17480-t17481+t17476+t17477+t17478;
            double t17482 = 1/(t17417*t17417*t17417);
            double t17483 = t17454*t17454;
            double t17484 = 1/(t17426*t17426*t17426);
            double t17485 = gamma_aa[index]*gx*t17460*(8.8E1/3.0);
            double t17486 = gamma_aa[index]*gx*t17415*t17458*t17397*7.2E1;
            double t17487 = t17415*t17459*t17397*(3.04E2/3.0);
            double t17488 = t17485+t17486+t17487;
            double t17489 = t17450*t17450;
            double t17490 = 1/(t17422*t17422*t17422);
            double t17491 = gamma_aa[index]*gx*t17460*(1.76E2/9.0);
            double t17492 = t17415*t17459*t17397*(3.04E2/9.0);
            double t17493 = t17491+t17492;
            double t17495 = 1/t17260;
            double t17496 = 1/t17264;
            double t17497 = 1/t17257;
            double t17498 = 1/pow(t17265,7.0/3.0);
            double t17499 = 1/pow(t17265,8.0/3.0);
            double t17501 = 1/t17299;
            double t17502 = 1/(t17296*t17296);
            double t17503 = b4f*t17316*t17272*(2.0/3.0);
            double t17504 = b2f*c*t17277*(1.0/3.0);
            double t17505 = b1f*c*t17317*t17277*(1.0/6.0);
            double t17506 = b3f*c*t17268*t17277*(1.0/2.0);
            double t17507 = t17503+t17504+t17505+t17506;
            double t17508 = a1f*c*c0f*t17300*t17277*(2.0/3.0);
            double t17510 = t17302*t17501*t17502*t17507;
            double t17511 = a1p*c*c0p*t17303*t17277*(2.0/3.0);
            double t17509 = -t17510-t17511+t17325+t17508;
            double t17512 = t17324*t17324;
            double t17513 = 1/pow(t17267,3.0/2.0);
            double t17514 = b4p*t17272*t17499*(1.0E1/9.0);
            double t17515 = b2p*c*t17498*(4.0/9.0);
            double t17516 = b1p*c*t17317*t17498*(2.0/9.0);
            double t17517 = b3p*c*t17268*t17498*(2.0/3.0);
            double t17518 = b3p*t17272*t17317*t17499*(1.0/1.2E1);
            double t17519 = t17514+t17515+t17516+t17517+t17518-b1p*t17513*t17272*t17499*(1.0/3.6E1);
            double t17520 = 1/(t17276*t17276*t17276);
            double t17521 = t17520*t17512*t17318*t17283*2.0;
            double t17522 = t17507*t17507;
            double t17523 = 1/(t17281*t17281);
            double t17524 = 1/(t17276*t17276*t17276*t17276);
            double t17525 = t17510+t17511-t17325-t17508;
            double t17526 = t17310*2.0;
            double t17527 = 1/(t17265*t17265*t17265);
            double t17534 = t17284*t17527*2.0;
            double t17528 = -t17534+t17526;
            double t17529 = t17311*t17311;
            double t17530 = a1p*c*c0p*t17303*t17498*(8.0/9.0);
            double t17531 = 1/(t17265*t17265*t17265*t17265*t17265*t17265);
            double t17532 = t17315*t17326*4.0;
            double t17542 = t17312*t17284*t17285*4.0;
            double t17533 = t17532-t17542;
            double t17535 = t17343*t17528*(4.0/3.0);
            double t17536 = 1/pow(t17305,2.0/3.0);
            double t17537 = t17536*t17529*(4.0/9.0);
            double t17538 = 1/pow(t17307,2.0/3.0);
            double t17539 = t17529*t17538*(4.0/9.0);
            double t17540 = t17535+t17537+t17539-t17340*t17528*(4.0/3.0);
            double t17541 = 1/t17336;
            double t17543 = 1/(t17333*t17333);
            double t17544 = b4a*t17316*t17272*(2.0/3.0);
            double t17545 = b2a*c*t17277*(1.0/3.0);
            double t17546 = b1a*c*t17317*t17277*(1.0/6.0);
            double t17547 = b3a*c*t17268*t17277*(1.0/2.0);
            double t17548 = t17544+t17545+t17546+t17547;
            double t17549 = t17548*t17548;
            double t17550 = t17318*t17283*t17319*t17519;
            double t17551 = 1/pow(rho_a[index],7.0/3.0);
            double t17552 = 1/pow(t17348,3.0/2.0);
            double t17553 = t17394*t17394;
            double t17554 = t17379*t17379;
            double t17555 = 1/(t17362*t17362*t17362);
            double t17556 = t17372*t17373*t17554*t17555*2.0;
            double t17557 = b4p*t17252*t17272*(1.0E1/9.0);
            double t17558 = b2p*c*t17551*(4.0/9.0);
            double t17559 = b3p*t17252*t17272*t17364*(1.0/1.2E1);
            double t17560 = b1p*c*t17551*t17364*(2.0/9.0);
            double t17561 = b3p*c*t17551*t17349*(2.0/3.0);
            double t17643 = b1p*t17252*t17272*t17552*(1.0/3.6E1);
            double t17562 = t17560+t17561-t17643+t17557+t17558+t17559;
            double t17563 = 1/(t17370*t17370);
            double t17564 = 1/(t17362*t17362*t17362*t17362);
            double t17565 = a1p*c*c0p*t17551*t17381*(8.0/9.0);
            double t17566 = t17512*t17523*t17524*t17283*t17278*(1.0/2.0);
            double t17624 = t17394*t17387*t17388*t17389;
            double t17567 = t17380-t17624+t17395-t17396;
            double t17568 = c0f*t17385*t17387*2.0;
            double t17570 = c0p*t17372*t17381*2.0;
            double t17569 = -t17570+t17568;
            double t17571 = 1/pow(rho_b[index],1.0/3.0);
            double t17572 = c*t17571;
            double t17573 = sqrt(t17572);
            double t17574 = pow(t17572,3.0/2.0);
            double t17575 = 1/pow(rho_b[index],2.0/3.0);
            double t17576 = b1p*t17573;
            double t17577 = b3p*t17574;
            double t17578 = b4p*t17272*t17575;
            double t17579 = b2p*c*t17571;
            double t17580 = t17576+t17577+t17578+t17579;
            double t17581 = 1/t17580;
            double t17582 = t17581*t17278*(1.0/2.0);
            double t17583 = t17582+1.0;
            double t17584 = log(t17583);
            double t17585 = a1p*c*t17571;
            double t17586 = t17585+1.0;
            double t17587 = c0p*t17584*t17586*2.0;
            double t17588 = t17312*t17304*t17315*t17290*t17309;
            double t17589 = Aa*t17290*t17309*t17327*t17337*t17346*t17339*2.0;
            double t17590 = 1/(t17257*t17257);
            double t17591 = gamma_aa[index]*gcab*t17251*(8.0/3.0);
            double t17592 = gamma_aa[index]*t17251*t17248*t17249*(8.0/3.0);
            double t17593 = t17591+t17592;
            double t17594 = 1/(t17264*t17264);
            double t17595 = 1/(t17260*t17260);
            double t17596 = gamma_aa[index]*gcab*t17251*4.0;
            double t17597 = gamma_aa[index]*gcab*t17250*t17251*t17248*4.0;
            double t17598 = gamma_aa[index]*t17251*t17248*t17249*8.0;
            double t17599 = t17596+t17597+t17598;
            double t17600 = t17290*t17384*t17569;
            double t17601 = t17600+t17570;
            double t17602 = gamma_aa[index]*gcaa*t17252;
            double t17603 = t17602+1.0;
            double t17604 = 1/t17603;
            double t17605 = gamma_aa[index]*gcaa*t17252*3.0;
            double t17606 = gamma_aa[index]*gcaa*t17397*t17398*t17399;
            double t17607 = t17400*t17397*t17398*3.0;
            double t17608 = t17605+t17606+t17607+1.0;
            double t17609 = 1/t17608;
            double t17610 = gamma_aa[index]*gcaa*t17252*2.0;
            double t17611 = t17400*t17397*t17398;
            double t17612 = t17610+t17611+1.0;
            double t17613 = 1/t17612;
            double t17614 = 1/(t17603*t17603);
            double t17615 = gamma_aa[index]*gcaa*t17251*(1.6E1/3.0);
            double t17616 = t17432*t17397*t17398*(1.6E1/3.0);
            double t17617 = t17615+t17616;
            double t17618 = gamma_aa[index]*gcaa*t17251*8.0;
            double t17619 = gamma_aa[index]*gcaa*t17433*t17397*t17398*8.0;
            double t17620 = t17432*t17397*t17398*1.6E1;
            double t17621 = t17620+t17618+t17619;
            double t17622 = 1/(t17608*t17608);
            double t17623 = 1/(t17612*t17612);
            double t17625 = t17290*t17384*t17567;
            double t17626 = ccaa1*gamma_aa[index]*gcaa*t17251*t17604*(8.0/3.0);
            double t17627 = ccaa3*gamma_aa[index]*gcaa*t17433*t17609*t17397*t17398*8.0;
            double t17628 = ccaa2*t17432*t17613*t17397*t17398*(1.6E1/3.0);
            double t17629 = t17626+t17627+t17628-ccaa1*t17432*t17614*t17397*t17398*(8.0/3.0)-ccaa2*t17400*t17623* \
               t17617*t17397*t17398-ccaa3*gamma_aa[index]*gcaa*t17621*t17622*t17397*t17398*t17399;
            double t17630 = -t17380+t17625+t17396;
            double t17631 = ccaa1*gamma_aa[index]*gcaa*t17252*t17604;
            double t17632 = ccaa3*gamma_aa[index]*gcaa*t17609*t17397*t17398*t17399;
            double t17633 = ccaa2*t17400*t17613*t17397*t17398;
            double t17634 = ccaa0+t17631+t17632+t17633;
            double t17635 = 1/(t17356*t17356*t17356);
            double t17636 = b4f*t17252*t17272*(1.0E1/9.0);
            double t17637 = b2f*c*t17551*(4.0/9.0);
            double t17638 = b3f*t17252*t17272*t17364*(1.0/1.2E1);
            double t17639 = b1f*c*t17551*t17364*(2.0/9.0);
            double t17640 = b3f*c*t17551*t17349*(2.0/3.0);
            double t17641 = t17640+t17636+t17637+t17638+t17639-b1f*t17252*t17272*t17552*(1.0/3.6E1);
            double t17642 = t17641*t17387*t17388*t17389;
            double t17644 = t17372*t17373*t17562*t17374;
            double t17645 = 1/(t17367*t17367);
            double t17646 = 1/(t17356*t17356*t17356*t17356);
            double t17647 = t17291*t17553*t17645*t17646*t17387*(1.0/2.0);
            double t17648 = t17372*t17554*t17563*t17564*t17278*(1.0/2.0);
            double t17649 = a1f*c*t17357*t17394*t17388*t17389*(2.0/3.0);
            double t17650 = a1p*c*t17373*t17374*t17357*t17379*(2.0/3.0);
            v_rho_a_rho_a_[index] = t17630*t17634*2.0+t17601*t17629*2.0+(ccab1*gamma_aa[index]*gcab*t17251*t17497* \
               (4.0/3.0)-ccab2*t17250*t17248*t17593*t17595-ccab1*gamma_aa[index]*t17251*t17248*t17590*t17249*(4.0/ \
               3.0)+ccab2*gamma_aa[index]*t17251*t17248*t17249*t17495*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t17250* \
               t17251*t17248*t17496*4.0-ccab3*gcab*t17250*t17248*t17249*t17594*t17599)*(t17314+t17588+t17589+rho_a[index]* \
               (-t17380+t17396+t17290*t17384*(t17380+t17395-t17394*t17387*t17388*t17389-a1p*c*c0p*t17381*t17357*(2.0/ \
               3.0)))+t17265*(t17325-a1p*c*c0p*t17303*t17277*(2.0/3.0)+t17312*t17304*t17315*t17290*t17344-t17304* \
               t17315*t17290*t17326*t17309*4.0-t17312*t17315*t17290*t17309*t17509+t17312*t17304*t17290*t17309*t17284* \
               t17285*4.0-Aa*t17290*t17533*t17309*t17327*t17337*t17339*2.0+Aa*t17290*t17344*t17327*t17337*t17346* \
               t17339*2.0+t17541*t17290*t17309*t17327*t17543*t17346*t17339*t17548-Aa*a1a*c*t17290*t17309*t17327*t17337* \
               t17346*t17277*(2.0/3.0))-c0p*t17372*t17381*2.0-t17290*t17384*t17569)*2.0+(rho_a[index]*t17601+rho_b[index]* \
               (t17587-t17290*t17384*(t17587-c0f*log((t17291*(1.0/2.0))/(b1f*t17573+b3f*t17574+b2f*c*t17571+b4f*t17272* \
               t17575)+1.0)*(a1f*c*t17571+1.0)*2.0))-t17265*(t17314+t17588+t17589))*(-ccab2*t17250*t17248*t17595* \
               (gamma_aa[index]*gcab*t17460*(8.8E1/9.0)+t17248*t17459*t17397*(3.2E1/9.0)+gamma_aa[index]*t17460*t17248* \
               t17249*(8.8E1/9.0))+ccab2*t17250*1/(t17260*t17260*t17260)*t17248*(t17593*t17593)*2.0+ccab1*gamma_aa[index]* \
               gcab*t17460*t17497*(4.4E1/9.0)-ccab1*t17248*t17590*t17459*t17397*(3.2E1/9.0)+ccab2*t17248*t17459*t17495* \
               t17397*(3.2E1/9.0)-ccab1*gamma_aa[index]*t17460*t17248*t17590*t17249*(4.4E1/9.0)+ccab2*gamma_aa[index]* \
               t17460*t17248*t17249*t17495*(8.8E1/9.0)+ccab3*gcab*t17250*1/(t17264*t17264*t17264)*t17248*t17249*(t17599* \
               t17599)*2.0+ccab3*gamma_aa[index]*gcab*t17250*t17460*t17248*t17496*(4.4E1/3.0)-ccab2*gamma_aa[index]* \
               t17251*t17248*t17249*t17593*t17595*(1.6E1/3.0)+ccab3*gcab*t17248*t17249*t17459*t17397*t17496*(3.2E1/ \
               3.0)+ccab1*gcab*t17248*1/(t17257*t17257*t17257)*t17249*t17459*t17397*(3.2E1/9.0)-ccab3*gcab*t17250* \
               t17248*t17249*t17594*(gamma_aa[index]*gcab*t17460*(4.4E1/3.0)+t17248*t17459*t17397*(3.2E1/3.0)+gamma_aa[index]* \
               t17460*t17248*t17249*(8.8E1/3.0)+gamma_aa[index]*gcab*t17250*t17460*t17248*(4.4E1/3.0)+gcab*t17248* \
               t17249*t17459*t17397*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t17250*t17251*t17248*t17594*t17599*8.0) \
               -(ccab0+ccab1*gcab*t17249*t17497+ccab2*t17250*t17248*t17495+ccab3*gcab*t17250*t17248*t17249*t17496) \
               *(-t17265*(-t17521-t17530+t17550+t17566+t17312*t17315*t17290*t17309*(t17521+t17530-t17550-t17566-t17302* \
               t17501*t17522*1/(t17296*t17296*t17296)*2.0+t17302*t17501*t17502*(b2f*c*t17498*(4.0/9.0)+b4f*t17272* \
               t17499*(1.0E1/9.0)+b1f*c*t17317*t17498*(2.0/9.0)+b3f*c*t17268*t17498*(2.0/3.0)-b1f*t17513*t17272*t17499* \
               (1.0/3.6E1)+b3f*t17272*t17317*t17499*(1.0/1.2E1))+t17302*t17522*t17291*1/(t17296*t17296*t17296*t17296) \
               *1/(t17299*t17299)*(1.0/2.0)-a1f*c*c0f*t17300*t17498*(8.0/9.0)+a1f*c*t17501*t17502*t17507*t17277*(2.0/ \
               3.0)-a1p*c*t17324*t17318*t17319*t17277*(2.0/3.0))-t17312*t17304*t17315*t17540*t17290-t17304*t17315* \
               t17531*t17290*t17309*2.0E1-t17312*t17315*t17290*t17344*t17525*2.0+t17304*t17315*t17290*t17326*t17344* \
               8.0-t17312*t17304*t17290*t17309*t17285*1.2E1+t17315*t17290*t17326*t17309*t17525*8.0-t17312*t17304* \
               t17290*t17344*t17284*t17285*8.0+t17304*t17290*t17326*t17309*t17284*t17285*3.2E1+t17312*t17290*t17309* \
               t17284*t17509*t17285*8.0+a1p*c*t17324*t17318*t17319*t17277*(2.0/3.0)-Aa*t17540*t17290*t17327*t17337* \
               t17346*t17339*2.0+Aa*t17290*t17344*t17533*t17327*t17337*t17339*4.0-Aa*t17290*t17309*t17327*t17337* \
               t17339*(t17315*t17531*2.0E1+t17312*t17285*1.2E1-t17326*t17284*t17285*3.2E1)*2.0+t17541*t17290*t17533* \
               t17309*t17327*t17543*t17339*t17548*2.0-t17541*t17290*t17344*t17327*t17543*t17346*t17339*t17548*2.0- \
               1/(t17333*t17333*t17333)*t17541*t17290*t17309*t17327*t17346*t17339*t17549*2.0+t17541*t17290*t17309* \
               t17327*t17543*t17346*t17339*(b2a*c*t17498*(4.0/9.0)+b4a*t17272*t17499*(1.0E1/9.0)+b1a*c*t17317*t17498* \
               (2.0/9.0)+b3a*c*t17268*t17498*(2.0/3.0)-b1a*t17513*t17272*t17499*(1.0/3.6E1)+b3a*t17272*t17317*t17499* \
               (1.0/1.2E1))-Aa*a1a*c*t17290*t17533*t17309*t17327*t17337*t17277*(4.0/3.0)+Aa*a1a*c*t17290*t17344*t17327* \
               t17337*t17346*t17277*(4.0/3.0)-Aa*a1a*c*t17290*t17309*t17327*t17337*t17346*t17498*(8.0/9.0)+1/(t17333* \
               t17333*t17333*t17333)*t17290*t17309*t17327*1/(t17336*t17336)*t17328*t17346*t17339*t17549*(1.0/2.0) \
               +a1a*c*t17541*t17290*t17309*t17327*t17543*t17346*t17277*t17548*(2.0/3.0))+rho_a[index]*(t17650+t17644- \
               t17556-t17565+t17648+t17290*t17384*(t17642+t17556+t17565+t17647+t17649-t17372*t17373*t17562*t17374- \
               t17553*t17635*t17387*t17388*2.0-a1f*c*c0f*t17551*t17385*(8.0/9.0)-t17372*t17554*t17563*t17564*t17278* \
               (1.0/2.0)-a1p*c*t17373*t17374*t17357*t17379*(2.0/3.0)))+t17290*t17384*t17567*2.0+t17324*t17318*t17283* \
               t17319*2.0-t17372*t17373*t17374*t17379*2.0-a1p*c*c0p*t17303*t17277*(4.0/3.0)+a1p*c*c0p*t17381*t17357* \
               (4.0/3.0)+t17312*t17304*t17315*t17290*t17344*2.0+t17312*t17315*t17290*t17309*t17525*2.0-t17304*t17315* \
               t17290*t17326*t17309*8.0+t17312*t17304*t17290*t17309*t17284*t17285*8.0-Aa*t17290*t17533*t17309*t17327* \
               t17337*t17339*4.0+Aa*t17290*t17344*t17327*t17337*t17346*t17339*4.0+t17541*t17290*t17309*t17327*t17543* \
               t17346*t17339*t17548*2.0-Aa*a1a*c*t17290*t17309*t17327*t17337*t17346*t17277*(4.0/3.0))-(X-1.0)*(c0* \
               t17472*(t17457*(cxnl1*gamma_aa[index]*gx*t17460*t17418*(8.8E1/9.0)-cxnl1*t17415*t17446*t17459*t17397* \
               2.4E1+cxnl2*t17415*t17427*t17459*t17397*(3.04E2/9.0)-cxnl2*t17400*t17415*t17455*t17493*t17397+cxnl2* \
               t17400*t17415*t17483*t17484*t17397*2.0-cxnl2*t17432*t17415*t17454*t17455*t17397*(3.2E1/3.0)+cxnl3* \
               gamma_aa[index]*gx*t17423*t17415*t17458*t17397*7.2E1+cxnl1*gamma_aa[index]*gx*t17415*t17482*t17458* \
               t17397*(1.28E2/9.0)-cxnl3*gamma_aa[index]*gx*t17450*t17415*t17433*t17451*t17397*1.6E1-cxnl3*gamma_aa[index]* \
               gx*t17415*t17451*t17397*t17488*t17399+cxnl3*gamma_aa[index]*gx*t17415*t17490*t17397*t17399*t17489* \
               2.0)-t17471*t17464*2.0-t17437*(t17466*t17475*2.0-t17428*t17479-t17430*t17414*t17479*5.0+t17414*t17470* \
               t17475*5.0E1+t17411*t17429*t17475*1.0E1-t17412*t17475*t17467*3.6E1+t17411*t17466*t17479+t17412*t17429* \
               t17479*6.0+t17411*t17412*t17430*t17475*4.0+t17411*t17414*t17470*t17479*5.0-t17411*t17412*t17467*t17479* \
               6.0-t17411*1/(t17413*t17413*t17413*t17413*t17413*t17413*t17413)*t17414*t17475*3.0E1)+cx1*gamma_aa[index]* \
               gx*t17460*t17418*(8.8E1/9.0)-cx1*t17415*t17446*t17459*t17397*2.4E1+cx2*t17415*t17427*t17459*t17397* \
               (3.04E2/9.0)-cx2*t17400*t17415*t17455*t17493*t17397+cx2*t17400*t17415*t17483*t17484*t17397*2.0-cx2* \
               t17432*t17415*t17454*t17455*t17397*(3.2E1/3.0)+cx1*gamma_aa[index]*gx*t17415*t17482*t17458*t17397* \
               (1.28E2/9.0)+cx3*gamma_aa[index]*gx*t17423*t17415*t17458*t17397*7.2E1-cx3*gamma_aa[index]*gx*t17450* \
               t17415*t17433*t17451*t17397*1.6E1-cx3*gamma_aa[index]*gx*t17415*t17451*t17397*t17488*t17399+cx3*gamma_aa[index]* \
               gx*t17415*t17490*t17397*t17399*t17489*2.0)+c0*pow(rho_a[index],1.0/3.0)*(t17471*t17437-t17464*t17457- \
               cx1*gamma_aa[index]*gx*t17251*t17418*(8.0/3.0)+cx1*t17432*t17415*t17446*t17397*(8.0/3.0)-cx2*t17432* \
               t17415*t17427*t17397*(1.6E1/3.0)+cx2*t17400*t17415*t17454*t17455*t17397-cx3*gamma_aa[index]*gx*t17423* \
               t17415*t17433*t17397*8.0+cx3*gamma_aa[index]*gx*t17450*t17415*t17451*t17397*t17399)*(8.0/3.0)+c0*t17353* \
               (cx0+t17437*t17457+cx1*gamma_aa[index]*gx*t17252*t17418+cx2*t17400*t17415*t17427*t17397+cx3*gamma_aa[index]* \
               gx*t17423*t17415*t17397*t17399)*(4.0/9.0))+rho_a[index]*t17634*(t17650+t17644-t17556-t17565+t17648- \
               t17290*t17384*(t17650-t17642+t17644-t17556-t17565-t17647+t17648-t17649+t17553*t17635*t17387*t17388* \
               2.0+a1f*c*c0f*t17551*t17385*(8.0/9.0)))-rho_a[index]*t17601*(ccaa1*gamma_aa[index]*gcaa*t17460*t17604* \
               (8.8E1/9.0)-ccaa1*t17614*t17459*t17397*t17398*2.4E1+ccaa2*t17613*t17459*t17397*t17398*(3.04E2/9.0) \
               -ccaa2*t17432*t17623*t17617*t17397*t17398*(3.2E1/3.0)-ccaa2*t17400*t17623*t17397*t17398*(gamma_aa[index]* \
               gcaa*t17460*(1.76E2/9.0)+t17459*t17397*t17398*(3.04E2/9.0))+ccaa2*t17400*1/(t17612*t17612*t17612)* \
               (t17617*t17617)*t17397*t17398*2.0+ccaa3*gamma_aa[index]*gcaa*t17609*t17458*t17397*t17398*7.2E1+ccaa1* \
               gamma_aa[index]*gcaa*1/(t17603*t17603*t17603)*t17458*t17397*t17398*(1.28E2/9.0)+ccaa3*gamma_aa[index]* \
               gcaa*(t17621*t17621)*1/(t17608*t17608*t17608)*t17397*t17398*t17399*2.0-ccaa3*gamma_aa[index]*gcaa* \
               t17622*t17397*t17398*t17399*(gamma_aa[index]*gcaa*t17460*(8.8E1/3.0)+t17459*t17397*t17398*(3.04E2/ \
               3.0)+gamma_aa[index]*gcaa*t17458*t17397*t17398*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t17621*t17433*t17622* \
               t17397*t17398*1.6E1)-rho_a[index]*t17630*t17629*2.0;
        } else if (rho_a[index] > cutoff_) {
            double t21571 = 1/pow(rho_a[index],1.0/3.0);
            double t21572 = c*t21571;
            double t21573 = sqrt(t21572);
            double t21574 = b1f*t21573;
            double t21575 = pow(t21572,3.0/2.0);
            double t21576 = b3f*t21575;
            double t21577 = c*c;
            double t21578 = 1/pow(rho_a[index],2.0/3.0);
            double t21579 = b4f*t21577*t21578;
            double t21580 = b2f*c*t21571;
            double t21581 = t21580+t21574+t21576+t21579;
            double t21582 = 1/pow(rho_a[index],4.0/3.0);
            double t21583 = b1p*t21573;
            double t21584 = b3p*t21575;
            double t21585 = b4p*t21577*t21578;
            double t21586 = b2p*c*t21571;
            double t21587 = t21583+t21584+t21585+t21586;
            double t21588 = 1/pow(rho_a[index],5.0/3.0);
            double t21589 = 1/sqrt(t21572);
            double t21590 = 1/c0f;
            double t21591 = 1/t21581;
            double t21592 = t21590*t21591*(1.0/2.0);
            double t21593 = t21592+1.0;
            double t21594 = 1/c0p;
            double t21595 = 1/t21587;
            double t21596 = t21594*t21595*(1.0/2.0);
            double t21597 = t21596+1.0;
            double t21598 = a1p*c*t21571;
            double t21599 = t21598+1.0;
            double t21600 = 1/t21597;
            double t21601 = 1/(t21587*t21587);
            double t21602 = b4p*t21577*t21588*(2.0/3.0);
            double t21603 = b2p*c*t21582*(1.0/3.0);
            double t21604 = b1p*c*t21582*t21589*(1.0/6.0);
            double t21605 = b3p*c*t21573*t21582*(1.0/2.0);
            double t21606 = t21602+t21603+t21604+t21605;
            double t21607 = t21600*t21601*t21606*t21599;
            double t21608 = log(t21597);
            double t21609 = 1/pow(rho_a[index],8.0/3.0);
            double t21610 = gamma_aa[index]*gamma_aa[index];
            double t21611 = gcaa*gcaa;
            double t21612 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t21613 = 1/pow(rho_a[index],1.6E1/3.0);
            double t21614 = pow(2.0,1.0/3.0);
            double t21615 = t21614*2.0;
            double t21616 = t21615-2.0;
            double t21617 = two_13*2.0;
            double t21618 = t21617-2.0;
            double t21619 = 1/t21618;
            double t21620 = log(t21593);
            double t21621 = a1f*c*t21571;
            double t21622 = t21621+1.0;
            double t21623 = gamma_aa[index]*gcaa*t21609;
            double t21624 = t21623+1.0;
            double t21625 = 1/t21624;
            double t21626 = gamma_aa[index]*gcaa*t21609*3.0;
            double t21627 = gamma_aa[index]*gcaa*t21610*t21611*t21612;
            double t21628 = t21610*t21611*t21613*3.0;
            double t21629 = t21626+t21627+t21628+1.0;
            double t21630 = 1/t21629;
            double t21631 = gamma_aa[index]*gcaa*t21609*2.0;
            double t21632 = t21610*t21611*t21613;
            double t21633 = t21631+t21632+1.0;
            double t21634 = 1/t21633;
            double t21635 = 1/pow(rho_a[index],1.9E1/3.0);
            double t21636 = 1/pow(rho_a[index],1.1E1/3.0);
            double t21637 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t21638 = c0f*t21620*t21622*2.0;
            double t21639 = c0p*t21608*t21599*2.0;
            double t21640 = 1/pow(rho_a[index],1.0E1);
            double t21641 = 1/pow(rho_a[index],2.2E1/3.0);
            double t21642 = 1/(t21624*t21624);
            double t21643 = gamma_aa[index]*gcaa*t21636*(1.6E1/3.0);
            double t21644 = t21610*t21611*t21635*(1.6E1/3.0);
            double t21645 = t21643+t21644;
            double t21646 = gamma_aa[index]*gcaa*t21636*8.0;
            double t21647 = gamma_aa[index]*gcaa*t21610*t21611*t21637*8.0;
            double t21648 = t21610*t21611*t21635*1.6E1;
            double t21649 = t21646+t21647+t21648;
            double t21650 = 1/(t21629*t21629);
            double t21651 = 1/pow(rho_a[index],1.4E1/3.0);
            double t21652 = 1/(t21633*t21633);
            double t21653 = 1/t21593;
            double t21654 = 1/(t21581*t21581);
            double t21655 = b4f*t21577*t21588*(2.0/3.0);
            double t21656 = b2f*c*t21582*(1.0/3.0);
            double t21657 = b1f*c*t21582*t21589*(1.0/6.0);
            double t21658 = b3f*c*t21573*t21582*(1.0/2.0);
            double t21659 = t21655+t21656+t21657+t21658;
            double t21660 = a1f*c*c0f*t21620*t21582*(2.0/3.0);
            double t21661 = a1p*c*c0p*t21608*t21582*(2.0/3.0);
            double t21662 = ccaa1*gamma_aa[index]*gcaa*t21625*t21636*(8.0/3.0);
            double t21663 = ccaa3*gamma_aa[index]*gcaa*t21610*t21611*t21630*t21637*8.0;
            double t21664 = ccaa2*t21610*t21611*t21634*t21635*(1.6E1/3.0);
            double t21665 = t21662+t21663+t21664-ccaa1*t21610*t21611*t21642*t21635*(8.0/3.0)-ccaa2*t21610*t21611* \
               t21613*t21652*t21645-ccaa3*gamma_aa[index]*gcaa*t21610*t21611*t21612*t21650*t21649;
            double t21666 = ccaa1*gamma_aa[index]*gcaa*t21625*t21609;
            double t21667 = ccaa3*gamma_aa[index]*gcaa*t21610*t21611*t21612*t21630;
            double t21668 = ccaa2*t21610*t21611*t21613*t21634;
            double t21669 = ccaa0+t21666+t21667+t21668;
            double t21670 = 1/pow(rho_a[index],7.0/3.0);
            double t21671 = 1/pow(t21572,3.0/2.0);
            double t21672 = t21659*t21659;
            double t21673 = t21606*t21606;
            double t21674 = 1/(t21587*t21587*t21587);
            double t21675 = t21600*t21673*t21674*t21599*2.0;
            double t21676 = b4p*t21609*t21577*(1.0E1/9.0);
            double t21677 = b2p*c*t21670*(4.0/9.0);
            double t21678 = b3p*t21609*t21577*t21589*(1.0/1.2E1);
            double t21679 = b1p*c*t21670*t21589*(2.0/9.0);
            double t21680 = b3p*c*t21670*t21573*(2.0/3.0);
            double t21681 = t21680+t21676+t21677+t21678+t21679-b1p*t21671*t21609*t21577*(1.0/3.6E1);
            double t21682 = 1/(t21597*t21597);
            double t21683 = 1/(t21587*t21587*t21587*t21587);
            double t21684 = a1p*c*c0p*t21670*t21608*(8.0/9.0);
            double t21685 = pow(rho_a[index],5.0/3.0);
            double t21686 = C_k*t21685;
            double t21687 = tau_a[index]*1.0E20;
            double t21688 = 1/tau_a[index];
            double t21689 = -t21686+t21687;
            double t21690 = ( (t21689 > 0.0) ?  1.0 : 0.0 ) ;
            double t21691 = C_k*t21690*t21685*t21688;
            double t21692 = t21686-t21687;
            double t21693 = ( (t21692 > 0.0) ?  1.0 : 0.0 ) ;
            double t21694 = t21693*1.0E20;
            double t21695 = t21691+t21694-1.0;
            double t21696 = t21695*t21695;
            double t21697 = t21691+t21694+1.0;
            double t21698 = t21696*t21696;
            double t21699 = gx*gx;
            double t21700 = gamma_aa[index]*gx*t21609;
            double t21701 = t21700+1.0;
            double t21715 = gamma_aa[index]*gx*t21636*(1.6E1/3.0);
            double t21716 = t21610*t21635*t21699*(1.6E1/3.0);
            double t21702 = t21715+t21716;
            double t21703 = gamma_aa[index]*gx*t21609*2.0;
            double t21704 = t21610*t21613*t21699;
            double t21705 = t21703+t21704+1.0;
            double t21706 = gamma_aa[index]*gx*t21609*3.0;
            double t21707 = gamma_aa[index]*gx*t21610*t21612*t21699;
            double t21708 = t21610*t21613*t21699*3.0;
            double t21709 = t21706+t21707+t21708+1.0;
            double t21710 = 1/(t21709*t21709);
            double t21711 = gamma_aa[index]*gx*t21636*8.0;
            double t21712 = gamma_aa[index]*gx*t21610*t21637*t21699*8.0;
            double t21713 = t21610*t21635*t21699*1.6E1;
            double t21714 = t21711+t21712+t21713;
            double t21717 = 1/(t21705*t21705);
            double t21718 = 1/t21701;
            double t21719 = 1/t21709;
            double t21720 = 1/t21705;
            double t21721 = 1/(t21701*t21701);
            double t21722 = 0.0 ;
            double t21723 = pow(rho_a[index],2.0/3.0);
            double t21724 = 1/t21697;
            double t21725 = C_k*t21722*t21723*(5.0E20/3.0);
            double t21726 = C_k*C_k;
            double t21727 = pow(rho_a[index],7.0/3.0);
            double t21728 = C_k*t21723*t21690*t21688*(5.0/3.0);
            double t21730 = t21722*t21726*t21727*t21688*(5.0/3.0);
            double t21729 = -t21730+t21725+t21728;
            double t21731 = 1/(t21697*t21697*t21697);
            double t21732 = 1/(t21697*t21697*t21697*t21697*t21697);
            double t21733 = pow(rho_a[index],4.0/3.0);
            double t21734 = rho_a[index]*rho_a[index];
            double t21735 = 0.0 ;
            double t21736 = 1/(t21697*t21697);
            double t21737 = t21729*t21729;
            double t21738 = 1/(t21697*t21697*t21697*t21697);
            double t21739 = 1/(t21697*t21697*t21697*t21697*t21697*t21697);
            double t21740 = C_k*t21722*t21571*(1.0E21/9.0);
            double t21741 = C_k*rho_a[index]*t21734*t21726*t21735*t21688*(2.5E1/9.0);
            double t21742 = C_k*t21571*t21690*t21688*(1.0E1/9.0);
            double t21744 = t21733*t21726*t21735*(2.5E21/9.0);
            double t21745 = t21722*t21733*t21726*t21688*(2.0E1/3.0);
            double t21743 = t21740+t21741+t21742-t21744-t21745;
            double t21746 = 1/(t21701*t21701*t21701);
            double t21747 = t21702*t21702;
            double t21748 = 1/(t21705*t21705*t21705);
            double t21749 = gamma_aa[index]*gx*t21651*(8.8E1/3.0);
            double t21750 = gamma_aa[index]*gx*t21610*t21640*t21699*7.2E1;
            double t21751 = t21610*t21641*t21699*(3.04E2/3.0);
            double t21752 = t21750+t21751+t21749;
            double t21753 = t21714*t21714;
            double t21754 = 1/(t21709*t21709*t21709);
            double t21755 = gamma_aa[index]*gx*t21651*(1.76E2/9.0);
            double t21756 = t21610*t21641*t21699*(3.04E2/9.0);
            double t21757 = t21755+t21756;
            double t21758 = X-1.0;
            double t21759 = t21732*t21695*t21698;
            double t21760 = cxnl1*gamma_aa[index]*gx*t21609*t21718;
            double t21761 = cxnl3*gamma_aa[index]*gx*t21610*t21612*t21719*t21699;
            double t21762 = cxnl2*t21610*t21720*t21613*t21699;
            double t21763 = cxnl0+t21760+t21761+t21762;
            double t21764 = t21724*t21695;
            double t21765 = t21764+t21759-t21731*t21695*t21696*2.0;
            double t21766 = cxnl1*gamma_aa[index]*gx*t21636*t21718*(8.0/3.0);
            double t21767 = cxnl3*gamma_aa[index]*gx*t21610*t21637*t21719*t21699*8.0;
            double t21768 = cxnl2*t21610*t21720*t21635*t21699*(1.6E1/3.0);
            double t21769 = t21766+t21767+t21768-cxnl1*t21610*t21721*t21635*t21699*(8.0/3.0)-cxnl2*t21610*t21702* \
               t21613*t21717*t21699-cxnl3*gamma_aa[index]*gx*t21610*t21710*t21612*t21714*t21699;
            double t21770 = t21724*t21729;
            double t21771 = t21729*t21738*t21695*t21696*6.0;
            double t21772 = t21732*t21729*t21698*5.0;
            double t21773 = t21770+t21771+t21772-t21731*t21729*t21696*6.0-t21736*t21729*t21695-t21729*t21739* \
               t21695*t21698*5.0;
            v_rho_a_rho_a_[index] = t21665*(t21639+t21616*t21619*(t21638-c0p*t21608*t21599*2.0))*2.0+t21669*(- \
               t21607+t21661+t21616*t21619*(t21660+t21607-t21622*t21653*t21654*t21659-a1p*c*c0p*t21608*t21582*(2.0/ \
               3.0)))*2.0+rho_a[index]*t21669*(-t21675-t21684+t21616*t21619*(t21675+t21684-t21600*t21601*t21681*t21599- \
               t21622*1/(t21581*t21581*t21581)*t21653*t21672*2.0+t21622*t21653*t21654*(b2f*c*t21670*(4.0/9.0)+b4f* \
               t21609*t21577*(1.0E1/9.0)+b1f*c*t21670*t21589*(2.0/9.0)+b3f*c*t21670*t21573*(2.0/3.0)-b1f*t21671*t21609* \
               t21577*(1.0/3.6E1)+b3f*t21609*t21577*t21589*(1.0/1.2E1))+t21622*1/(t21581*t21581*t21581*t21581)*t21590* \
               t21672*1/(t21593*t21593)*(1.0/2.0)-a1f*c*c0f*t21620*t21670*(8.0/9.0)-t21673*t21682*t21683*t21594*t21599* \
               (1.0/2.0)+a1f*c*t21653*t21582*t21654*t21659*(2.0/3.0)-a1p*c*t21600*t21601*t21606*t21582*(2.0/3.0)) \
               +t21600*t21601*t21681*t21599+t21673*t21682*t21683*t21594*t21599*(1.0/2.0)+a1p*c*t21600*t21601*t21606* \
               t21582*(2.0/3.0))-rho_a[index]*t21665*(-t21607+t21661+t21616*t21619*(t21660+t21607-t21661-t21622*t21653* \
               t21654*t21659))*2.0-rho_a[index]*(t21639+t21616*t21619*(t21638-t21639))*(ccaa1*gamma_aa[index]*gcaa* \
               t21651*t21625*(8.8E1/9.0)-ccaa1*t21610*t21611*t21641*t21642*2.4E1+ccaa2*t21610*t21611*t21641*t21634* \
               (3.04E2/9.0)-ccaa2*t21610*t21611*t21652*t21635*t21645*(3.2E1/3.0)-ccaa2*t21610*t21611*t21613*t21652* \
               (gamma_aa[index]*gcaa*t21651*(1.76E2/9.0)+t21610*t21611*t21641*(3.04E2/9.0))+ccaa2*t21610*t21611*t21613* \
               1/(t21633*t21633*t21633)*(t21645*t21645)*2.0+ccaa3*gamma_aa[index]*gcaa*t21610*t21611*t21630*t21640* \
               7.2E1+ccaa1*gamma_aa[index]*gcaa*t21610*t21611*t21640*1/(t21624*t21624*t21624)*(1.28E2/9.0)+ccaa3* \
               gamma_aa[index]*gcaa*t21610*t21611*t21612*1/(t21629*t21629*t21629)*(t21649*t21649)*2.0-ccaa3*gamma_aa[index]* \
               gcaa*t21610*t21611*t21612*t21650*(gamma_aa[index]*gcaa*t21651*(8.8E1/3.0)+t21610*t21611*t21641*(3.04E2/ \
               3.0)+gamma_aa[index]*gcaa*t21610*t21611*t21640*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t21610*t21611*t21650* \
               t21637*t21649*1.6E1)-c0*t21578*t21758*(cx0+t21763*t21765+cx1*gamma_aa[index]*gx*t21609*t21718+cx2* \
               t21610*t21720*t21613*t21699+cx3*gamma_aa[index]*gx*t21610*t21612*t21719*t21699)*(4.0/9.0)-c0*t21733* \
               t21758*((t21759+t21724*(t21691+ ( (t21686-tau_a[index]*1.0E20 > 0.0) ? 1.0*1.0E20 : 0.0 ) -1.0)-t21731* \
               t21695*t21696*2.0)*(cxnl1*gamma_aa[index]*gx*t21651*t21718*(8.8E1/9.0)-cxnl1*t21610*t21721*t21641* \
               t21699*2.4E1+cxnl2*t21610*t21720*t21641*t21699*(3.04E2/9.0)-cxnl2*t21610*t21702*t21635*t21717*t21699* \
               (3.2E1/3.0)-cxnl2*t21610*t21613*t21717*t21757*t21699+cxnl2*t21610*t21613*t21747*t21748*t21699*2.0+ \
               cxnl1*gamma_aa[index]*gx*t21610*t21640*t21746*t21699*(1.28E2/9.0)+cxnl3*gamma_aa[index]*gx*t21610* \
               t21640*t21719*t21699*7.2E1-cxnl3*gamma_aa[index]*gx*t21610*t21710*t21612*t21752*t21699-cxnl3*gamma_aa[index]* \
               gx*t21610*t21710*t21714*t21637*t21699*1.6E1+cxnl3*gamma_aa[index]*gx*t21610*t21612*t21753*t21754*t21699* \
               2.0)-t21773*t21769*2.0-t21763*(-t21724*t21743+t21736*t21737*2.0+t21731*t21743*t21696*6.0+t21731*t21737* \
               t21695*1.0E1-t21732*t21743*t21698*5.0+t21743*t21736*t21695-t21737*t21738*t21696*3.6E1+t21737*t21739* \
               t21698*5.0E1+t21732*t21737*t21695*t21696*4.0-t21743*t21738*t21695*t21696*6.0+t21743*t21739*t21695* \
               t21698*5.0-t21737*t21695*1/(t21697*t21697*t21697*t21697*t21697*t21697*t21697)*t21698*3.0E1)+cx1*gamma_aa[index]* \
               gx*t21651*t21718*(8.8E1/9.0)-cx1*t21610*t21721*t21641*t21699*2.4E1+cx2*t21610*t21720*t21641*t21699* \
               (3.04E2/9.0)-cx2*t21610*t21702*t21635*t21717*t21699*(3.2E1/3.0)-cx2*t21610*t21613*t21717*t21757*t21699+ \
               cx2*t21610*t21613*t21747*t21748*t21699*2.0+cx1*gamma_aa[index]*gx*t21610*t21640*t21746*t21699*(1.28E2/ \
               9.0)+cx3*gamma_aa[index]*gx*t21610*t21640*t21719*t21699*7.2E1-cx3*gamma_aa[index]*gx*t21610*t21710* \
               t21612*t21752*t21699-cx3*gamma_aa[index]*gx*t21610*t21710*t21714*t21637*t21699*1.6E1+cx3*gamma_aa[index]* \
               gx*t21610*t21612*t21753*t21754*t21699*2.0)-c0*pow(rho_a[index],1.0/3.0)*t21758*(t21763*t21773-t21765* \
               t21769-cx1*gamma_aa[index]*gx*t21636*t21718*(8.0/3.0)+cx1*t21610*t21721*t21635*t21699*(8.0/3.0)-cx2* \
               t21610*t21720*t21635*t21699*(1.6E1/3.0)+cx2*t21610*t21702*t21613*t21717*t21699-cx3*gamma_aa[index]* \
               gx*t21610*t21637*t21719*t21699*8.0+cx3*gamma_aa[index]*gx*t21610*t21710*t21612*t21714*t21699)*(8.0/ \
               3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t17652 = 1/pow(rho_a[index],1.0/3.0);
            double t17653 = c*t17652;
            double t17654 = sqrt(t17653);
            double t17655 = pow(t17653,3.0/2.0);
            double t17656 = c*c;
            double t17657 = 1/pow(rho_a[index],2.0/3.0);
            double t17658 = 1/c0p;
            double t17659 = b1p*t17654;
            double t17660 = b3p*t17655;
            double t17661 = b4p*t17656*t17657;
            double t17662 = b2p*c*t17652;
            double t17663 = t17660+t17661+t17662+t17659;
            double t17664 = 1/t17663;
            double t17665 = t17664*t17658*(1.0/2.0);
            double t17666 = t17665+1.0;
            double t17667 = log(t17666);
            double t17668 = a1p*c*t17652;
            double t17669 = t17668+1.0;
            double t17670 = pow(2.0,1.0/3.0);
            double t17671 = t17670*2.0;
            double t17672 = t17671-2.0;
            double t17673 = two_13*2.0;
            double t17674 = t17673-2.0;
            double t17675 = 1/t17674;
            double t17676 = 1/c0f;
            double t17677 = 1/pow(rho_b[index],1.0/3.0);
            double t17678 = c*t17677;
            double t17679 = sqrt(t17678);
            double t17680 = pow(t17678,3.0/2.0);
            double t17681 = 1/pow(rho_b[index],2.0/3.0);
            double t17682 = b1p*t17679;
            double t17683 = b3p*t17680;
            double t17684 = b4p*t17681*t17656;
            double t17685 = b2p*c*t17677;
            double t17686 = t17682+t17683+t17684+t17685;
            double t17687 = 1/t17686;
            double t17688 = t17658*t17687*(1.0/2.0);
            double t17689 = t17688+1.0;
            double t17690 = log(t17689);
            double t17691 = a1p*c*t17677;
            double t17692 = t17691+1.0;
            double t17693 = c0p*t17690*t17692*2.0;
            double t17694 = rho_a[index]+rho_b[index];
            double t17695 = 1/pow(t17694,1.0/3.0);
            double t17696 = c*t17695;
            double t17697 = sqrt(t17696);
            double t17698 = pow(t17696,3.0/2.0);
            double t17699 = 1/pow(t17694,2.0/3.0);
            double t17700 = b1p*t17697;
            double t17701 = b3p*t17698;
            double t17702 = b4p*t17656*t17699;
            double t17703 = b2p*c*t17695;
            double t17704 = t17700+t17701+t17702+t17703;
            double t17705 = 1/t17704;
            double t17706 = t17705*t17658*(1.0/2.0);
            double t17707 = t17706+1.0;
            double t17708 = log(t17707);
            double t17709 = a1p*c*t17695;
            double t17710 = t17709+1.0;
            double t17711 = c0p*t17710*t17708*2.0;
            double t17712 = rho_a[index]-rho_b[index];
            double t17713 = t17712*t17712;
            double t17714 = 1/t17694;
            double t17715 = t17712*t17714;
            double t17716 = 1/(t17694*t17694*t17694*t17694);
            double t17717 = t17713*t17713;
            double t17718 = t17715+1.0;
            double t17719 = pow(t17718,4.0/3.0);
            double t17720 = -t17715+1.0;
            double t17721 = pow(t17720,4.0/3.0);
            double t17722 = t17721+t17719-2.0;
            double t17723 = gcab*gcab;
            double t17724 = 1/pow(rho_a[index],1.1E1/3.0);
            double t17725 = 1/pow(rho_b[index],1.1E1/3.0);
            double t17726 = 1/pow(rho_a[index],8.0/3.0);
            double t17727 = gamma_aa[index]*t17726*(1.0/2.0);
            double t17728 = 1/pow(rho_b[index],8.0/3.0);
            double t17729 = gamma_bb[index]*t17728*(1.0/2.0);
            double t17730 = t17727+t17729;
            double t17731 = t17730*t17730;
            double t17732 = t17731*t17723*3.0;
            double t17733 = gcab*t17730*t17731*t17723;
            double t17734 = gcab*t17730*3.0;
            double t17735 = t17732+t17733+t17734+1.0;
            double t17736 = t17731*t17723;
            double t17737 = gcab*t17730*2.0;
            double t17738 = t17736+t17737+1.0;
            double t17739 = gamma_aa[index]*gcab*t17724*4.0;
            double t17740 = gamma_aa[index]*gcab*t17731*t17723*t17724*4.0;
            double t17741 = gamma_aa[index]*t17730*t17723*t17724*8.0;
            double t17742 = t17740+t17741+t17739;
            double t17743 = 1/(t17735*t17735);
            double t17744 = gamma_bb[index]*gcab*t17725*4.0;
            double t17745 = gamma_bb[index]*gcab*t17731*t17723*t17725*4.0;
            double t17746 = gamma_bb[index]*t17730*t17723*t17725*8.0;
            double t17747 = t17744+t17745+t17746;
            double t17748 = gamma_aa[index]*gcab*t17724*(8.0/3.0);
            double t17749 = gamma_aa[index]*t17730*t17723*t17724*(8.0/3.0);
            double t17750 = t17748+t17749;
            double t17751 = gamma_bb[index]*gcab*t17725*(8.0/3.0);
            double t17752 = gamma_bb[index]*t17730*t17723*t17725*(8.0/3.0);
            double t17753 = t17751+t17752;
            double t17754 = 1/(t17738*t17738);
            double t17755 = gcab*t17730;
            double t17756 = t17755+1.0;
            double t17757 = 1/(t17756*t17756);
            double t17758 = 1/t17738;
            double t17759 = 1/t17735;
            double t17760 = 1/pow(t17694,4.0/3.0);
            double t17761 = b1f*t17697;
            double t17762 = b3f*t17698;
            double t17763 = b4f*t17656*t17699;
            double t17764 = b2f*c*t17695;
            double t17765 = t17761+t17762+t17763+t17764;
            double t17766 = 1/t17765;
            double t17767 = t17676*t17766*(1.0/2.0);
            double t17768 = t17767+1.0;
            double t17769 = log(t17768);
            double t17770 = a1f*c*t17695;
            double t17771 = t17770+1.0;
            double t17773 = c0f*t17771*t17769*2.0;
            double t17772 = t17711-t17773;
            double t17774 = 1/(t17694*t17694);
            double t17801 = t17712*t17774;
            double t17775 = -t17801+t17714;
            double t17776 = 1/pow(t17694,5.0/3.0);
            double t17777 = 1/sqrt(t17696);
            double t17778 = 1/t17707;
            double t17779 = 1/(t17704*t17704);
            double t17780 = b4p*t17656*t17776*(2.0/3.0);
            double t17781 = b2p*c*t17760*(1.0/3.0);
            double t17782 = b1p*c*t17760*t17777*(1.0/6.0);
            double t17783 = b3p*c*t17760*t17697*(1.0/2.0);
            double t17784 = t17780+t17781+t17782+t17783;
            double t17785 = t17710*t17784*t17778*t17779;
            double t17786 = 1/d2fz0;
            double t17787 = 1/Aa;
            double t17788 = b1a*t17697;
            double t17789 = b3a*t17698;
            double t17790 = b4a*t17656*t17699;
            double t17791 = b2a*c*t17695;
            double t17792 = t17790+t17791+t17788+t17789;
            double t17793 = 1/t17792;
            double t17794 = t17793*t17787*(1.0/2.0);
            double t17795 = t17794+1.0;
            double t17796 = log(t17795);
            double t17797 = a1a*c*t17695;
            double t17798 = t17797+1.0;
            double t17799 = 1/(t17694*t17694*t17694*t17694*t17694);
            double t17800 = pow(t17718,1.0/3.0);
            double t17802 = t17800*t17775*(4.0/3.0);
            double t17803 = pow(t17720,1.0/3.0);
            double t17881 = t17803*t17775*(4.0/3.0);
            double t17804 = t17802-t17881;
            double t17805 = t17716*t17717;
            double t17806 = t17805-1.0;
            double t17807 = a1f*c*t17652;
            double t17808 = t17807+1.0;
            double t17809 = b1f*t17654;
            double t17810 = b3f*t17655;
            double t17811 = b4f*t17656*t17657;
            double t17812 = b2f*c*t17652;
            double t17813 = t17810+t17811+t17812+t17809;
            double t17814 = 1/t17813;
            double t17815 = t17814*t17676*(1.0/2.0);
            double t17816 = t17815+1.0;
            double t17817 = 1/pow(rho_a[index],4.0/3.0);
            double t17818 = 1/pow(rho_a[index],5.0/3.0);
            double t17819 = 1/sqrt(t17653);
            double t17820 = log(t17816);
            double t17821 = 1/t17666;
            double t17822 = 1/(t17663*t17663);
            double t17823 = b4p*t17656*t17818*(2.0/3.0);
            double t17824 = b2p*c*t17817*(1.0/3.0);
            double t17825 = b1p*c*t17817*t17819*(1.0/6.0);
            double t17826 = b3p*c*t17654*t17817*(1.0/2.0);
            double t17827 = t17823+t17824+t17825+t17826;
            double t17828 = t17821*t17822*t17827*t17669;
            double t17829 = c0f*t17820*t17808*2.0;
            double t17830 = c0p*t17667*t17669*2.0;
            double t17831 = Aa*t17722*t17806*t17675*t17786*t17796*t17798*2.0;
            double t17832 = 1/t17756;
            double t17833 = t17712*t17713*t17722*t17716*t17772*t17675*4.0;
            double t17834 = t17801+t17714;
            double t17835 = 1/t17768;
            double t17836 = 1/(t17765*t17765);
            double t17837 = b4f*t17656*t17776*(2.0/3.0);
            double t17838 = b2f*c*t17760*(1.0/3.0);
            double t17839 = b1f*c*t17760*t17777*(1.0/6.0);
            double t17840 = b3f*c*t17760*t17697*(1.0/2.0);
            double t17841 = t17840+t17837+t17838+t17839;
            double t17842 = a1f*c*c0f*t17760*t17769*(2.0/3.0);
            double t17843 = a1p*c*c0p*t17760*t17708*(2.0/3.0);
            double t17844 = t17717*t17799*4.0;
            double t17845 = t17800*t17834*(4.0/3.0);
            double t17880 = t17803*t17834*(4.0/3.0);
            double t17846 = -t17880+t17845;
            double t17847 = 1/t17795;
            double t17848 = 1/(t17792*t17792);
            double t17849 = b4a*t17656*t17776*(2.0/3.0);
            double t17850 = b2a*c*t17760*(1.0/3.0);
            double t17851 = b1a*c*t17760*t17777*(1.0/6.0);
            double t17852 = b3a*c*t17760*t17697*(1.0/2.0);
            double t17853 = t17850+t17851+t17852+t17849;
            double t17854 = Aa*a1a*c*t17722*t17760*t17806*t17675*t17786*t17796*(2.0/3.0);
            double t17855 = a1f*c*t17677;
            double t17856 = t17855+1.0;
            double t17857 = b1f*t17679;
            double t17858 = b3f*t17680;
            double t17859 = b4f*t17681*t17656;
            double t17860 = b2f*c*t17677;
            double t17861 = t17860+t17857+t17858+t17859;
            double t17862 = 1/t17861;
            double t17863 = t17862*t17676*(1.0/2.0);
            double t17864 = t17863+1.0;
            double t17865 = 1/pow(rho_b[index],4.0/3.0);
            double t17866 = 1/pow(rho_b[index],5.0/3.0);
            double t17867 = 1/sqrt(t17678);
            double t17868 = log(t17864);
            double t17869 = 1/t17689;
            double t17870 = 1/(t17686*t17686);
            double t17871 = b4p*t17656*t17866*(2.0/3.0);
            double t17872 = b2p*c*t17865*(1.0/3.0);
            double t17873 = b1p*c*t17865*t17867*(1.0/6.0);
            double t17874 = b3p*c*t17865*t17679*(1.0/2.0);
            double t17875 = t17871+t17872+t17873+t17874;
            double t17876 = t17870*t17692*t17875*t17869;
            double t17877 = t17693-c0f*t17856*t17868*2.0;
            double t17878 = 1/pow(t17694,7.0/3.0);
            double t17879 = 1/pow(t17694,8.0/3.0);
            double t17897 = t17841*t17771*t17835*t17836;
            double t17882 = t17842-t17843+t17785-t17897;
            double t17883 = t17784*t17784;
            double t17884 = 1/pow(t17696,3.0/2.0);
            double t17885 = b4p*t17656*t17879*(1.0E1/9.0);
            double t17886 = b2p*c*t17878*(4.0/9.0);
            double t17887 = b1p*c*t17777*t17878*(2.0/9.0);
            double t17888 = b3p*c*t17697*t17878*(2.0/3.0);
            double t17889 = b3p*t17656*t17777*t17879*(1.0/1.2E1);
            double t17890 = t17885+t17886+t17887+t17888+t17889-b1p*t17656*t17884*t17879*(1.0/3.6E1);
            double t17891 = t17710*t17890*t17778*t17779;
            double t17892 = 1/(t17704*t17704*t17704);
            double t17893 = t17841*t17841;
            double t17894 = 1/(t17707*t17707);
            double t17895 = 1/(t17704*t17704*t17704*t17704);
            double t17896 = t17710*t17658*t17883*t17894*t17895*(1.0/2.0);
            double t17898 = 1/(t17694*t17694*t17694);
            double t17899 = a1p*c*t17760*t17784*t17778*t17779*(2.0/3.0);
            double t17900 = 1/(t17694*t17694*t17694*t17694*t17694*t17694);
            double t17901 = t17712*t17713*t17716*4.0;
            double t17902 = t17901+t17844;
            double t17903 = t17712*t17803*t17898*(8.0/3.0);
            double t17904 = 1/pow(t17718,2.0/3.0);
            double t17905 = t17904*t17834*t17775*(4.0/9.0);
            double t17906 = 1/pow(t17720,2.0/3.0);
            double t17907 = t17834*t17906*t17775*(4.0/9.0);
            double t17908 = t17903+t17905+t17907-t17800*t17712*t17898*(8.0/3.0);
            double t17909 = t17901-t17844;
            double t17910 = t17853*t17853;
            double t17911 = t17710*t17883*t17892*t17778*2.0;
            double t17912 = a1p*c*c0p*t17708*t17878*(8.0/9.0);
            double t17913 = t17716*t17717*t17772*t17675*t17846;
            v_rho_a_rho_b_[index] = -(rho_b[index]*(t17693-t17672*t17675*t17877)+rho_a[index]*(t17830+t17672* \
               t17675*(t17829-c0p*t17667*t17669*2.0))-t17694*(t17711+t17831-t17722*t17716*t17717*t17772*t17675))* \
               (ccab2*t17731*t17723*t17750*t17753*1/(t17738*t17738*t17738)*-2.0+ccab3*gcab*t17730*t17731*t17723*t17743* \
               (gamma_aa[index]*gamma_bb[index]*t17723*t17724*t17725*(3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]* \
               gcab*t17730*t17723*t17724*t17725*(3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]*t17723*t17724* \
               t17725*t17757*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t17723*t17724*t17725*t17758*(3.2E1/ \
               9.0)+ccab2*gamma_aa[index]*t17730*t17723*t17724*t17753*t17754*(8.0/3.0)+ccab2*gamma_bb[index]*t17730* \
               t17723*t17750*t17725*t17754*(8.0/3.0)+ccab2*gamma_aa[index]*gamma_bb[index]*t17731*(t17723*t17723) \
               *t17724*t17725*t17754*(3.2E1/9.0)-ccab3*gcab*t17730*t17731*t17723*t17742*1/(t17735*t17735*t17735)* \
               t17747*2.0+ccab3*gamma_bb[index]*gcab*t17731*t17723*t17742*t17725*t17743*4.0+ccab3*gamma_aa[index]* \
               gcab*t17731*t17723*t17724*t17743*t17747*4.0-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t17730*t17723* \
               t17724*t17725*t17759*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t17730*t17723*t17724*t17725* \
               1/(t17756*t17756*t17756)*(3.2E1/9.0))+(ccab1*gamma_aa[index]*gcab*t17724*t17832*(4.0/3.0)-ccab2*t17731* \
               t17723*t17750*t17754-ccab1*gamma_aa[index]*t17730*t17723*t17724*t17757*(4.0/3.0)+ccab2*gamma_aa[index]* \
               t17730*t17723*t17724*t17758*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t17731*t17723*t17724*t17759*4.0-ccab3* \
               gcab*t17730*t17731*t17723*t17742*t17743)*(t17711+t17831-t17693+t17694*(t17913+t17833-t17843-t17854+ \
               t17785-t17722*t17716*t17717*t17675*t17882+t17722*t17717*t17772*t17675*t17799*4.0-Aa*t17722*t17902* \
               t17675*t17786*t17796*t17798*2.0-Aa*t17806*t17675*t17846*t17786*t17796*t17798*2.0+t17722*t17806*t17853* \
               t17675*t17847*t17848*t17786*t17798)+rho_b[index]*(-t17876+t17672*t17675*(t17876-(1/(t17861*t17861) \
               *t17856*(b2f*c*t17865*(1.0/3.0)+b4f*t17656*t17866*(2.0/3.0)+b1f*c*t17865*t17867*(1.0/6.0)+b3f*c*t17865* \
               t17679*(1.0/2.0)))/t17864+a1f*c*c0f*t17865*t17868*(2.0/3.0)-a1p*c*c0p*t17690*t17865*(2.0/3.0))+a1p* \
               c*c0p*t17690*t17865*(2.0/3.0))+t17672*t17675*t17877-t17722*t17716*t17717*t17675*(t17711-t17773))+(ccab0+ \
               ccab1*gcab*t17730*t17832+ccab2*t17731*t17723*t17758+ccab3*gcab*t17730*t17731*t17723*t17759)*(-t17913+ \
               t17694*(-t17911-t17912+t17891+t17896+t17899+t17900*t17722*t17717*t17772*t17675*2.0E1-t17713*t17722* \
               t17716*t17772*t17675*1.2E1+t17804*t17716*t17717*t17675*t17882-t17716*t17717*t17772*t17908*t17675-t17716* \
               t17717*t17675*t17846*t17882-t17804*t17717*t17772*t17675*t17799*4.0-t17722*t17717*t17675*t17882*t17799* \
               8.0+t17717*t17772*t17675*t17846*t17799*4.0+t17722*t17716*t17717*t17675*(t17911+t17912-t17891-t17896- \
               t17899-t17771*t17835*1/(t17765*t17765*t17765)*t17893*2.0+t17771*t17835*t17836*(b2f*c*t17878*(4.0/9.0) \
               +b4f*t17656*t17879*(1.0E1/9.0)+b1f*c*t17777*t17878*(2.0/9.0)+b3f*c*t17697*t17878*(2.0/3.0)-b1f*t17656* \
               t17884*t17879*(1.0/3.6E1)+b3f*t17656*t17777*t17879*(1.0/1.2E1))+t17771*1/(t17765*t17765*t17765*t17765) \
               *t17676*t17893*1/(t17768*t17768)*(1.0/2.0)-a1f*c*c0f*t17769*t17878*(8.0/9.0)+a1f*c*t17760*t17841*t17835* \
               t17836*(2.0/3.0))-t17712*t17713*t17804*t17716*t17772*t17675*4.0-t17712*t17713*t17716*t17772*t17675* \
               t17846*4.0+Aa*t17902*t17804*t17675*t17786*t17796*t17798*2.0+Aa*t17806*t17908*t17675*t17786*t17796* \
               t17798*2.0+Aa*t17675*t17846*t17909*t17786*t17796*t17798*2.0-Aa*t17722*t17675*t17786*t17796*t17798* \
               (t17900*t17717*2.0E1-t17713*t17716*1.2E1)*2.0+t17722*t17902*t17853*t17675*t17847*t17848*t17786*t17798- \
               t17804*t17806*t17853*t17675*t17847*t17848*t17786*t17798-t17722*t17853*t17675*t17909*t17847*t17848* \
               t17786*t17798+t17806*t17853*t17675*t17846*t17847*t17848*t17786*t17798-t17910*t17722*t17806*t17675* \
               1/(t17792*t17792*t17792)*t17847*t17786*t17798*2.0+t17722*t17806*t17675*t17847*t17848*t17786*t17798* \
               (b2a*c*t17878*(4.0/9.0)+b4a*t17656*t17879*(1.0E1/9.0)+b1a*c*t17777*t17878*(2.0/9.0)+b3a*c*t17697*t17878* \
               (2.0/3.0)-b1a*t17656*t17884*t17879*(1.0/3.6E1)+b3a*t17656*t17777*t17879*(1.0/1.2E1))-Aa*a1a*c*t17722* \
               t17902*t17760*t17675*t17786*t17796*(2.0/3.0)+Aa*a1a*c*t17804*t17760*t17806*t17675*t17786*t17796*(2.0/ \
               3.0)+Aa*a1a*c*t17722*t17760*t17675*t17909*t17786*t17796*(2.0/3.0)-Aa*a1a*c*t17760*t17806*t17675*t17846* \
               t17786*t17796*(2.0/3.0)-Aa*a1a*c*t17722*t17806*t17675*t17786*t17796*t17878*(8.0/9.0)+t17910*t17722* \
               t17806*t17675*1/(t17792*t17792*t17792*t17792)*t17786*1/(t17795*t17795)*t17787*t17798*(1.0/2.0)+a1a* \
               c*t17722*t17760*t17806*t17853*t17675*t17847*t17848*t17786*(2.0/3.0))-t17710*t17784*t17778*t17779*2.0+ \
               t17722*t17716*t17717*t17675*(t17842-t17843+t17785-t17897)*2.0+a1p*c*c0p*t17760*t17708*(4.0/3.0)-t17722* \
               t17717*t17772*t17675*t17799*8.0+t17804*t17716*t17717*t17675*(t17711-t17773)+Aa*t17722*t17902*t17675* \
               t17786*t17796*t17798*2.0-Aa*t17804*t17806*t17675*t17786*t17796*t17798*2.0-Aa*t17722*t17675*t17909* \
               t17786*t17796*t17798*2.0+Aa*t17806*t17675*t17846*t17786*t17796*t17798*2.0-t17722*t17806*t17853*t17675* \
               t17847*t17848*t17786*t17798*2.0+Aa*a1a*c*t17722*t17760*t17806*t17675*t17786*t17796*(4.0/3.0))+(ccab1* \
               gamma_bb[index]*gcab*t17832*t17725*(4.0/3.0)-ccab2*t17731*t17723*t17753*t17754-ccab1*gamma_bb[index]* \
               t17730*t17723*t17725*t17757*(4.0/3.0)+ccab2*gamma_bb[index]*t17730*t17723*t17725*t17758*(8.0/3.0)+ \
               ccab3*gamma_bb[index]*gcab*t17731*t17723*t17725*t17759*4.0-ccab3*gcab*t17730*t17731*t17723*t17743* \
               t17747)*(t17711-t17830+t17831-t17694*(t17833+t17843+t17854-t17785+t17722*t17716*t17717*t17675*(t17842+ \
               t17785-t17841*t17771*t17835*t17836-a1p*c*c0p*t17760*t17708*(2.0/3.0))+t17804*t17716*t17717*t17772* \
               t17675-t17722*t17717*t17772*t17675*t17799*4.0-Aa*t17804*t17806*t17675*t17786*t17796*t17798*2.0+Aa* \
               t17722*t17675*t17786*t17796*t17798*(t17844-t17712*t17713*t17716*4.0)*2.0-t17722*t17806*t17853*t17675* \
               t17847*t17848*t17786*t17798)+rho_a[index]*(-t17828+t17672*t17675*(t17828-(1/(t17813*t17813)*t17808* \
               (b2f*c*t17817*(1.0/3.0)+b4f*t17656*t17818*(2.0/3.0)+b1f*c*t17817*t17819*(1.0/6.0)+b3f*c*t17654*t17817* \
               (1.0/2.0)))/t17816+a1f*c*c0f*t17820*t17817*(2.0/3.0)-a1p*c*c0p*t17817*t17667*(2.0/3.0))+a1p*c*c0p* \
               t17817*t17667*(2.0/3.0))+t17672*t17675*(t17830-t17829)-t17722*t17716*t17717*t17772*t17675);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t17915 = gcab*gcab;
            double t17919 = 1/pow(rho_a[index],8.0/3.0);
            double t17920 = gamma_aa[index]*t17919*(1.0/2.0);
            double t17921 = 1/pow(rho_b[index],8.0/3.0);
            double t17922 = gamma_bb[index]*t17921*(1.0/2.0);
            double t17916 = t17920+t17922;
            double t17917 = t17916*t17916;
            double t17918 = 1/pow(rho_b[index],1.1E1/3.0);
            double t17923 = gcab*t17916;
            double t17924 = t17923+1.0;
            double t17925 = t17915*t17917;
            double t17926 = gcab*t17916*2.0;
            double t17927 = t17925+t17926+1.0;
            double t17928 = t17915*t17917*3.0;
            double t17929 = gcab*t17915*t17916*t17917;
            double t17930 = gcab*t17916*3.0;
            double t17931 = t17930+t17928+t17929+1.0;
            double t17932 = rho_a[index]+rho_b[index];
            double t17933 = 1/pow(t17932,1.0/3.0);
            double t17934 = c*t17933;
            double t17935 = sqrt(t17934);
            double t17936 = b1p*t17935;
            double t17937 = pow(t17934,3.0/2.0);
            double t17938 = b3p*t17937;
            double t17939 = c*c;
            double t17940 = 1/pow(t17932,2.0/3.0);
            double t17941 = b4p*t17940*t17939;
            double t17942 = b2p*c*t17933;
            double t17943 = t17941+t17942+t17936+t17938;
            double t17944 = 1/pow(t17932,4.0/3.0);
            double t17945 = 1/c0p;
            double t17946 = 1/t17943;
            double t17947 = t17945*t17946*(1.0/2.0);
            double t17948 = t17947+1.0;
            double t17949 = a1p*c*t17933;
            double t17950 = t17949+1.0;
            double t17951 = rho_a[index]-rho_b[index];
            double t17952 = t17951*t17951;
            double t17953 = 1/t17932;
            double t17954 = t17951*t17953;
            double t17955 = two_13*2.0;
            double t17956 = t17955-2.0;
            double t17957 = 1/t17956;
            double t17958 = 1/c0f;
            double t17959 = b1f*t17935;
            double t17960 = b3f*t17937;
            double t17961 = b4f*t17940*t17939;
            double t17962 = b2f*c*t17933;
            double t17963 = t17960+t17961+t17962+t17959;
            double t17964 = 1/t17963;
            double t17965 = t17964*t17958*(1.0/2.0);
            double t17966 = t17965+1.0;
            double t17967 = log(t17966);
            double t17968 = a1f*c*t17933;
            double t17969 = t17968+1.0;
            double t17970 = log(t17948);
            double t17981 = c0f*t17967*t17969*2.0;
            double t17982 = c0p*t17950*t17970*2.0;
            double t17971 = t17981-t17982;
            double t17972 = t17954+1.0;
            double t17973 = pow(t17972,4.0/3.0);
            double t17974 = -t17954+1.0;
            double t17975 = pow(t17974,4.0/3.0);
            double t17976 = t17973+t17975-2.0;
            double t17977 = 1/(t17932*t17932);
            double t17978 = t17951*t17977;
            double t17979 = t17953+t17978;
            double t17980 = 1/(t17932*t17932*t17932*t17932);
            double t17983 = t17952*t17952;
            double t17984 = 1/pow(t17932,5.0/3.0);
            double t17985 = 1/sqrt(t17934);
            double t17986 = 1/t17948;
            double t17987 = 1/(t17943*t17943);
            double t17988 = b4p*t17939*t17984*(2.0/3.0);
            double t17989 = b2p*c*t17944*(1.0/3.0);
            double t17990 = b1p*c*t17944*t17985*(1.0/6.0);
            double t17991 = b3p*c*t17935*t17944*(1.0/2.0);
            double t17992 = t17990+t17991+t17988+t17989;
            double t17993 = 1/(t17932*t17932*t17932*t17932*t17932);
            double t17994 = 1/d2fz0;
            double t17995 = 1/Aa;
            double t17996 = b1a*t17935;
            double t17997 = b3a*t17937;
            double t17998 = b4a*t17940*t17939;
            double t17999 = b2a*c*t17933;
            double t18000 = t17996+t17997+t17998+t17999;
            double t18001 = 1/t18000;
            double t18002 = t17995*t18001*(1.0/2.0);
            double t18003 = t18002+1.0;
            double t18004 = log(t18003);
            double t18005 = a1a*c*t17933;
            double t18006 = t18005+1.0;
            double t18007 = pow(t17972,1.0/3.0);
            double t18008 = t17979*t18007*(4.0/3.0);
            double t18009 = pow(t17974,1.0/3.0);
            double t18171 = t17979*t18009*(4.0/3.0);
            double t18010 = t18008-t18171;
            double t18011 = t17980*t17983;
            double t18012 = t18011-1.0;
            double t18013 = 1/pow(rho_b[index],1.0/3.0);
            double t18014 = c*t18013;
            double t18015 = sqrt(t18014);
            double t18016 = b1f*t18015;
            double t18017 = pow(t18014,3.0/2.0);
            double t18018 = b3f*t18017;
            double t18019 = 1/pow(rho_b[index],2.0/3.0);
            double t18020 = b4f*t17939*t18019;
            double t18021 = b2f*c*t18013;
            double t18022 = t18020+t18021+t18016+t18018;
            double t18023 = 1/pow(rho_b[index],4.0/3.0);
            double t18024 = b1p*t18015;
            double t18025 = b3p*t18017;
            double t18026 = b4p*t17939*t18019;
            double t18027 = b2p*c*t18013;
            double t18028 = t18024+t18025+t18026+t18027;
            double t18029 = 1/pow(rho_b[index],5.0/3.0);
            double t18030 = 1/sqrt(t18014);
            double t18031 = 1/t18022;
            double t18032 = t17958*t18031*(1.0/2.0);
            double t18033 = t18032+1.0;
            double t18034 = 1/t18028;
            double t18035 = t17945*t18034*(1.0/2.0);
            double t18036 = t18035+1.0;
            double t18037 = a1p*c*t18013;
            double t18038 = t18037+1.0;
            double t18039 = 1/t18036;
            double t18040 = 1/(t18028*t18028);
            double t18041 = b4p*t17939*t18029*(2.0/3.0);
            double t18042 = b2p*c*t18023*(1.0/3.0);
            double t18043 = b1p*c*t18030*t18023*(1.0/6.0);
            double t18044 = b3p*c*t18023*t18015*(1.0/2.0);
            double t18045 = t18041+t18042+t18043+t18044;
            double t18046 = t18040*t18045*t18038*t18039;
            double t18047 = log(t18036);
            double t18048 = pow(2.0,1.0/3.0);
            double t18049 = t18048*2.0;
            double t18050 = t18049-2.0;
            double t18051 = log(t18033);
            double t18052 = a1f*c*t18013;
            double t18053 = t18052+1.0;
            double t18054 = a1p*c*c0p*t17970*t17944*(2.0/3.0);
            double t18055 = 1/t18033;
            double t18056 = 1/(t18022*t18022);
            double t18057 = b4f*t17939*t18029*(2.0/3.0);
            double t18058 = b2f*c*t18023*(1.0/3.0);
            double t18059 = b1f*c*t18030*t18023*(1.0/6.0);
            double t18060 = b3f*c*t18023*t18015*(1.0/2.0);
            double t18061 = t18060+t18057+t18058+t18059;
            double t18062 = a1f*c*c0f*t18023*t18051*(2.0/3.0);
            double t18063 = a1p*c*c0p*t18023*t18047*(2.0/3.0);
            double t18064 = gamma_bb[index]*gamma_bb[index];
            double t18065 = gcaa*gcaa;
            double t18066 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t18067 = 1/pow(rho_b[index],1.6E1/3.0);
            double t18068 = pow(rho_b[index],5.0/3.0);
            double t18069 = C_k*t18068;
            double t18078 = tau_a[index]*1.0E20;
            double t18070 = t18069-t18078;
            double t18071 = ( (t18070 > 0.0) ?  1.0 : 0.0 ) ;
            double t18072 = t18071*1.0E20;
            double t18073 = 1/tau_b[index];
            double t18074 = tau_b[index]*1.0E20;
            double t18075 = t18074-t18069;
            double t18076 = ( (t18075 > 0.0) ?  1.0 : 0.0 ) ;
            double t18077 = C_k*t18073*t18076*t18068;
            double t18079 = t18072+t18077-1.0;
            double t18080 = t18079*t18079;
            double t18081 = t18072+t18077+1.0;
            double t18082 = t18080*t18080;
            double t18083 = gx*gx;
            double t18084 = gamma_bb[index]*gx*t17921;
            double t18085 = t18084+1.0;
            double t18086 = 1/t18085;
            double t18087 = gamma_bb[index]*gx*t17921*3.0;
            double t18088 = gamma_bb[index]*gx*t18064*t18083*t18066;
            double t18089 = t18064*t18083*t18067*3.0;
            double t18090 = t18087+t18088+t18089+1.0;
            double t18091 = 1/t18090;
            double t18092 = gamma_bb[index]*gx*t17921*2.0;
            double t18093 = t18064*t18083*t18067;
            double t18094 = t18092+t18093+1.0;
            double t18095 = 1/t18094;
            double t18096 = 1/t18081;
            double t18097 = t18096*t18079;
            double t18098 = 1/(t18081*t18081*t18081);
            double t18099 = 1/(t18081*t18081*t18081*t18081*t18081);
            double t18100 = t18082*t18079*t18099;
            double t18128 = t18080*t18079*t18098*2.0;
            double t18101 = t18100-t18128+t18097;
            double t18102 = 1/pow(rho_b[index],1.9E1/3.0);
            double t18103 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t18104 = cxnl1*gamma_bb[index]*gx*t17921*t18086;
            double t18105 = cxnl3*gamma_bb[index]*gx*t18064*t18091*t18083*t18066;
            double t18106 = cxnl2*t18064*t18083*t18067*t18095;
            double t18107 = cxnl0+t18104+t18105+t18106;
            double t18108 = pow(rho_b[index],2.0/3.0);
            double t18109 = -t18069+t18078;
            double t18110 = 0.0 ;
            double t18111 = C_k*t18110*t18108*(5.0E20/3.0);
            double t18112 = C_k*C_k;
            double t18113 = pow(rho_b[index],7.0/3.0);
            double t18114 = 0.0 ;
            double t18115 = C_k*t18108*t18073*t18076*(5.0/3.0);
            double t18117 = t18112*t18113*t18114*t18073*(5.0/3.0);
            double t18116 = t18111+t18115-t18117;
            double t18118 = 1/(t18085*t18085);
            double t18119 = gamma_bb[index]*gx*t17918*8.0;
            double t18120 = gamma_bb[index]*gx*t18103*t18064*t18083*8.0;
            double t18121 = t18102*t18064*t18083*1.6E1;
            double t18122 = t18120+t18121+t18119;
            double t18123 = 1/(t18090*t18090);
            double t18124 = gamma_bb[index]*gx*t17918*(1.6E1/3.0);
            double t18125 = t18102*t18064*t18083*(1.6E1/3.0);
            double t18126 = t18124+t18125;
            double t18127 = 1/(t18094*t18094);
            double t18129 = 1/pow(rho_b[index],1.0E1);
            double t18130 = 1/pow(rho_b[index],2.2E1/3.0);
            double t18131 = 1/pow(rho_b[index],1.4E1/3.0);
            double t18132 = cxnl1*gamma_bb[index]*gx*t17918*t18086*(8.0/3.0);
            double t18133 = cxnl3*gamma_bb[index]*gx*t18103*t18064*t18091*t18083*8.0;
            double t18134 = cxnl2*t18102*t18064*t18083*t18095*(1.6E1/3.0);
            double t18135 = t18132+t18133+t18134-cxnl1*t18102*t18064*t18118*t18083*(8.0/3.0)-cxnl2*t18126*t18064* \
               t18127*t18083*t18067-cxnl3*gamma_bb[index]*gx*t18122*t18123*t18064*t18083*t18066;
            double t18136 = t18116*t18096;
            double t18137 = 1/(t18081*t18081);
            double t18138 = 1/(t18081*t18081*t18081*t18081);
            double t18139 = t18080*t18116*t18138*t18079*6.0;
            double t18140 = t18116*t18082*t18099*5.0;
            double t18141 = 1/(t18081*t18081*t18081*t18081*t18081*t18081);
            double t18142 = t18140+t18136+t18139-t18080*t18116*t18098*6.0-t18116*t18137*t18079-t18141*t18116* \
               t18082*t18079*5.0;
            double t18143 = pow(rho_b[index],4.0/3.0);
            double t18144 = rho_b[index]*rho_b[index];
            double t18145 = t18116*t18116;
            double t18146 = 0.0 ;
            double t18147 = C_k*t18110*t18013*(1.0E21/9.0);
            double t18148 = 0.0 ;
            double t18149 = C_k*rho_b[index]*t18112*t18144*t18073*t18148*(2.5E1/9.0);
            double t18150 = C_k*t18013*t18073*t18076*(1.0E1/9.0);
            double t18152 = t18112*t18143*t18146*(2.5E21/9.0);
            double t18153 = t18112*t18114*t18143*t18073*(2.0E1/3.0);
            double t18151 = t18150-t18152-t18153+t18147+t18149;
            double t18154 = 1/(t18085*t18085*t18085);
            double t18155 = t18126*t18126;
            double t18156 = 1/(t18094*t18094*t18094);
            double t18157 = gamma_bb[index]*gx*t18131*(8.8E1/3.0);
            double t18158 = gamma_bb[index]*gx*t18064*t18083*t18129*7.2E1;
            double t18159 = t18130*t18064*t18083*(3.04E2/3.0);
            double t18160 = t18157+t18158+t18159;
            double t18161 = t18122*t18122;
            double t18162 = 1/(t18090*t18090*t18090);
            double t18163 = gamma_bb[index]*gx*t18131*(1.76E2/9.0);
            double t18164 = t18130*t18064*t18083*(3.04E2/9.0);
            double t18165 = t18163+t18164;
            double t18166 = 1/t17927;
            double t18167 = 1/t17931;
            double t18168 = 1/t17924;
            double t18169 = 1/pow(t17932,7.0/3.0);
            double t18170 = 1/pow(t17932,8.0/3.0);
            double t18172 = 1/t17966;
            double t18173 = 1/(t17963*t17963);
            double t18174 = b4f*t17939*t17984*(2.0/3.0);
            double t18175 = b2f*c*t17944*(1.0/3.0);
            double t18176 = b1f*c*t17944*t17985*(1.0/6.0);
            double t18177 = b3f*c*t17935*t17944*(1.0/2.0);
            double t18178 = t18174+t18175+t18176+t18177;
            double t18179 = t17969*t18172*t18173*t18178;
            double t18181 = t17950*t17992*t17986*t17987;
            double t18182 = a1f*c*c0f*t17944*t17967*(2.0/3.0);
            double t18180 = t18054-t18181-t18182+t18179;
            double t18183 = t17992*t17992;
            double t18184 = 1/pow(t17934,3.0/2.0);
            double t18185 = b4p*t17939*t18170*(1.0E1/9.0);
            double t18186 = b2p*c*t18169*(4.0/9.0);
            double t18187 = b1p*c*t17985*t18169*(2.0/9.0);
            double t18188 = b3p*c*t17935*t18169*(2.0/3.0);
            double t18189 = b3p*t17939*t17985*t18170*(1.0/1.2E1);
            double t18190 = t18185+t18186+t18187+t18188+t18189-b1p*t17939*t18170*t18184*(1.0/3.6E1);
            double t18191 = 1/(t17943*t17943*t17943);
            double t18192 = t17950*t17986*t18191*t18183*2.0;
            double t18193 = t18178*t18178;
            double t18194 = 1/(t17948*t17948);
            double t18195 = 1/(t17943*t17943*t17943*t17943);
            double t18196 = t17977*2.0;
            double t18197 = 1/(t17932*t17932*t17932);
            double t18198 = t17951*t18197*2.0;
            double t18199 = t18196+t18198;
            double t18200 = t17979*t17979;
            double t18201 = a1p*c*c0p*t17970*t18169*(8.0/9.0);
            double t18202 = 1/(t17932*t17932*t17932*t17932*t17932*t17932);
            double t18203 = t17951*t17952*t17980*4.0;
            double t18204 = t17983*t17993*4.0;
            double t18205 = t18203+t18204;
            double t18206 = t18007*t18199*(4.0/3.0);
            double t18207 = 1/pow(t17972,2.0/3.0);
            double t18208 = t18200*t18207*(4.0/9.0);
            double t18209 = 1/pow(t17974,2.0/3.0);
            double t18210 = t18200*t18209*(4.0/9.0);
            double t18211 = t18210+t18206+t18208-t18009*t18199*(4.0/3.0);
            double t18212 = 1/t18003;
            double t18213 = 1/(t18000*t18000);
            double t18214 = b4a*t17939*t17984*(2.0/3.0);
            double t18215 = b2a*c*t17944*(1.0/3.0);
            double t18216 = b1a*c*t17944*t17985*(1.0/6.0);
            double t18217 = b3a*c*t17935*t17944*(1.0/2.0);
            double t18218 = t18214+t18215+t18216+t18217;
            double t18219 = t18218*t18218;
            double t18220 = 1/pow(rho_b[index],7.0/3.0);
            double t18221 = 1/pow(t18014,3.0/2.0);
            double t18222 = t18061*t18061;
            double t18223 = t18045*t18045;
            double t18224 = 1/(t18028*t18028*t18028);
            double t18225 = t18223*t18224*t18038*t18039*2.0;
            double t18226 = b4p*t17921*t17939*(1.0E1/9.0);
            double t18227 = b2p*c*t18220*(4.0/9.0);
            double t18228 = b3p*t17921*t17939*t18030*(1.0/1.2E1);
            double t18229 = b1p*c*t18030*t18220*(2.0/9.0);
            double t18230 = b3p*c*t18220*t18015*(2.0/3.0);
            double t18311 = b1p*t17921*t17939*t18221*(1.0/3.6E1);
            double t18231 = t18230-t18311+t18226+t18227+t18228+t18229;
            double t18232 = 1/(t18036*t18036);
            double t18233 = 1/(t18028*t18028*t18028*t18028);
            double t18234 = a1p*c*c0p*t18220*t18047*(8.0/9.0);
            double t18292 = t18061*t18053*t18055*t18056;
            double t18235 = t18062-t18063+t18046-t18292;
            double t18236 = 1/pow(rho_a[index],1.0/3.0);
            double t18237 = c*t18236;
            double t18238 = sqrt(t18237);
            double t18239 = pow(t18237,3.0/2.0);
            double t18240 = 1/pow(rho_a[index],2.0/3.0);
            double t18241 = b1p*t18238;
            double t18242 = b3p*t18239;
            double t18243 = b4p*t17939*t18240;
            double t18244 = b2p*c*t18236;
            double t18245 = t18241+t18242+t18243+t18244;
            double t18246 = 1/t18245;
            double t18247 = t17945*t18246*(1.0/2.0);
            double t18248 = t18247+1.0;
            double t18249 = log(t18248);
            double t18250 = a1p*c*t18236;
            double t18251 = t18250+1.0;
            double t18252 = c0p*t18251*t18249*2.0;
            double t18253 = c0f*t18051*t18053*2.0;
            double t18255 = c0p*t18038*t18047*2.0;
            double t18254 = t18253-t18255;
            double t18256 = t17971*t17980*t17983*t17957*t17976;
            double t18257 = Aa*t17957*t17976*t17994*t18012*t18004*t18006*2.0;
            double t18258 = 1/(t17924*t17924);
            double t18259 = gamma_bb[index]*gcab*t17918*(8.0/3.0);
            double t18260 = gamma_bb[index]*t17915*t17916*t17918*(8.0/3.0);
            double t18261 = t18260+t18259;
            double t18262 = 1/(t17931*t17931);
            double t18263 = 1/(t17927*t17927);
            double t18264 = gamma_bb[index]*gcab*t17918*4.0;
            double t18265 = gamma_bb[index]*gcab*t17915*t17917*t17918*4.0;
            double t18266 = gamma_bb[index]*t17915*t17916*t17918*8.0;
            double t18267 = t18264+t18265+t18266;
            double t18268 = t17957*t18050*t18254;
            double t18269 = t18255+t18268;
            double t18270 = gamma_bb[index]*gcaa*t17921;
            double t18271 = t18270+1.0;
            double t18272 = 1/t18271;
            double t18273 = gamma_bb[index]*gcaa*t17921*3.0;
            double t18274 = gamma_bb[index]*gcaa*t18064*t18065*t18066;
            double t18275 = t18064*t18065*t18067*3.0;
            double t18276 = t18273+t18274+t18275+1.0;
            double t18277 = 1/t18276;
            double t18278 = gamma_bb[index]*gcaa*t17921*2.0;
            double t18279 = t18064*t18065*t18067;
            double t18280 = t18278+t18279+1.0;
            double t18281 = 1/t18280;
            double t18282 = 1/(t18271*t18271);
            double t18283 = gamma_bb[index]*gcaa*t17918*(1.6E1/3.0);
            double t18284 = t18102*t18064*t18065*(1.6E1/3.0);
            double t18285 = t18283+t18284;
            double t18286 = gamma_bb[index]*gcaa*t17918*8.0;
            double t18287 = gamma_bb[index]*gcaa*t18103*t18064*t18065*8.0;
            double t18288 = t18102*t18064*t18065*1.6E1;
            double t18289 = t18286+t18287+t18288;
            double t18290 = 1/(t18276*t18276);
            double t18291 = 1/(t18280*t18280);
            double t18293 = t17957*t18050*t18235;
            double t18294 = ccaa1*gamma_bb[index]*gcaa*t17918*t18272*(8.0/3.0);
            double t18295 = ccaa3*gamma_bb[index]*gcaa*t18103*t18064*t18065*t18277*8.0;
            double t18296 = ccaa2*t18102*t18064*t18065*t18281*(1.6E1/3.0);
            double t18297 = t18294+t18295+t18296-ccaa1*t18102*t18064*t18065*t18282*(8.0/3.0)-ccaa2*t18064*t18065* \
               t18291*t18067*t18285-ccaa3*gamma_bb[index]*gcaa*t18064*t18065*t18290*t18066*t18289;
            double t18298 = t18063-t18046+t18293;
            double t18299 = ccaa1*gamma_bb[index]*gcaa*t17921*t18272;
            double t18300 = ccaa3*gamma_bb[index]*gcaa*t18064*t18065*t18066*t18277;
            double t18301 = ccaa2*t18064*t18065*t18281*t18067;
            double t18302 = ccaa0+t18300+t18301+t18299;
            double t18303 = 1/(t18022*t18022*t18022);
            double t18304 = b4f*t17921*t17939*(1.0E1/9.0);
            double t18305 = b2f*c*t18220*(4.0/9.0);
            double t18306 = b3f*t17921*t17939*t18030*(1.0/1.2E1);
            double t18307 = b1f*c*t18030*t18220*(2.0/9.0);
            double t18308 = b3f*c*t18220*t18015*(2.0/3.0);
            double t18309 = t18304+t18305+t18306+t18307+t18308-b1f*t17921*t17939*t18221*(1.0/3.6E1);
            double t18310 = t18053*t18055*t18056*t18309;
            double t18312 = t18040*t18231*t18038*t18039;
            double t18313 = 1/(t18033*t18033);
            double t18314 = 1/(t18022*t18022*t18022*t18022);
            double t18315 = t17958*t18222*t18313*t18053*t18314*(1.0/2.0);
            double t18316 = t17945*t18223*t18232*t18233*t18038*(1.0/2.0);
            double t18317 = a1f*c*t18023*t18061*t18055*t18056*(2.0/3.0);
            double t18318 = a1p*c*t18040*t18023*t18045*t18039*(2.0/3.0);
            v_rho_b_rho_b_[index] = (ccab1*gamma_bb[index]*gcab*t17918*t18168*(4.0/3.0)-ccab2*t17915*t17917*t18261* \
               t18263+ccab2*gamma_bb[index]*t17915*t17916*t17918*t18166*(8.0/3.0)-ccab1*gamma_bb[index]*t17915*t17916* \
               t17918*t18258*(4.0/3.0)+ccab3*gamma_bb[index]*gcab*t17915*t17917*t17918*t18167*4.0-ccab3*gcab*t17915* \
               t17916*t17917*t18262*t18267)*(t17982+t18256+t18257+rho_b[index]*(t18063-t18046+t17957*t18050*(t18062+ \
               t18046-t18061*t18053*t18055*t18056-a1p*c*c0p*t18023*t18047*(2.0/3.0)))-t17932*(t18054-t17950*t17992* \
               t17986*t17987+t17971*t17983*t17957*t17993*t17976*4.0+t17971*t17980*t17983*t17957*t18010-t17980*t17983* \
               t17957*t17976*t18180+t17951*t17952*t17971*t17980*t17957*t17976*4.0+Aa*t17957*t17976*t17994*t18004* \
               t18006*t18205*2.0+Aa*t17957*t17994*t18010*t18012*t18004*t18006*2.0-t17957*t17976*t17994*t18012*t18212* \
               t18006*t18213*t18218+Aa*a1a*c*t17944*t17957*t17976*t17994*t18012*t18004*(2.0/3.0))-c0p*t18038*t18047* \
               2.0-t17957*t18050*t18254)*2.0+t18302*t18298*2.0+t18269*t18297*2.0+(rho_b[index]*t18269+rho_a[index]* \
               (t18252-t17957*t18050*(t18252-c0f*log((t17958*(1.0/2.0))/(b1f*t18238+b3f*t18239+b2f*c*t18236+b4f*t17939* \
               t18240)+1.0)*(a1f*c*t18236+1.0)*2.0))-t17932*(t17982+t18256+t18257))*(-ccab2*t17915*t17917*t18263* \
               (gamma_bb[index]*gcab*t18131*(8.8E1/9.0)+t17915*t18130*t18064*(3.2E1/9.0)+gamma_bb[index]*t17915*t17916* \
               t18131*(8.8E1/9.0))+ccab2*t17915*t17917*1/(t17927*t17927*t17927)*(t18261*t18261)*2.0+ccab1*gamma_bb[index]* \
               gcab*t18131*t18168*(4.4E1/9.0)+ccab2*t17915*t18130*t18064*t18166*(3.2E1/9.0)-ccab1*t17915*t18130*t18064* \
               t18258*(3.2E1/9.0)+ccab2*gamma_bb[index]*t17915*t17916*t18131*t18166*(8.8E1/9.0)-ccab1*gamma_bb[index]* \
               t17915*t17916*t18131*t18258*(4.4E1/9.0)+ccab3*gcab*1/(t17931*t17931*t17931)*t17915*t17916*t17917*(t18267* \
               t18267)*2.0+ccab3*gamma_bb[index]*gcab*t17915*t17917*t18131*t18167*(4.4E1/3.0)-ccab2*gamma_bb[index]* \
               t17915*t17916*t17918*t18261*t18263*(1.6E1/3.0)+ccab3*gcab*t17915*t17916*t18130*t18064*t18167*(3.2E1/ \
               3.0)+ccab1*gcab*t17915*1/(t17924*t17924*t17924)*t17916*t18130*t18064*(3.2E1/9.0)-ccab3*gcab*t17915* \
               t17916*t17917*t18262*(gamma_bb[index]*gcab*t18131*(4.4E1/3.0)+t17915*t18130*t18064*(3.2E1/3.0)+gamma_bb[index]* \
               t17915*t17916*t18131*(8.8E1/3.0)+gamma_bb[index]*gcab*t17915*t17917*t18131*(4.4E1/3.0)+gcab*t17915* \
               t17916*t18130*t18064*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t17915*t17917*t17918*t18262*t18267*8.0) \
               +(ccab0+ccab1*gcab*t17916*t18168+ccab2*t17915*t17917*t18166+ccab3*gcab*t17915*t17916*t17917*t18167) \
               *(-rho_b[index]*(t18312-t18225-t18234+t18316+t18318+t17957*t18050*(t18310+t18225+t18234+t18315+t18317- \
               t18222*t18303*t18053*t18055*2.0-t18040*t18231*t18038*t18039-a1f*c*c0f*t18220*t18051*(8.0/9.0)-t17945* \
               t18223*t18232*t18233*t18038*(1.0/2.0)-a1p*c*t18040*t18023*t18045*t18039*(2.0/3.0)))-t17932*(t18201+ \
               t18192-t17950*t17986*t17987*t18190-t17980*t17983*t17957*t17976*(t18201+t18192-t17950*t17986*t17987* \
               t18190-1/(t17963*t17963*t17963)*t17969*t18172*t18193*2.0+t17969*t18172*t18173*(b2f*c*t18169*(4.0/9.0) \
               +b4f*t17939*t18170*(1.0E1/9.0)+b1f*c*t17985*t18169*(2.0/9.0)+b3f*c*t17935*t18169*(2.0/3.0)-b1f*t17939* \
               t18170*t18184*(1.0/3.6E1)+b3f*t17939*t17985*t18170*(1.0/1.2E1))+1/(t17963*t17963*t17963*t17963)*1/ \
               (t17966*t17966)*t17958*t17969*t18193*(1.0/2.0)-a1f*c*c0f*t17967*t18169*(8.0/9.0)-t17950*t17945*t18183* \
               t18194*t18195*(1.0/2.0)+a1f*c*t17944*t18172*t18173*t18178*(2.0/3.0)-a1p*c*t17944*t17992*t17986*t17987* \
               (2.0/3.0))+t17952*t17971*t17980*t17957*t17976*1.2E1+t17971*t17980*t17983*t17957*t18211+t17971*t17983* \
               t17957*t17993*t18010*8.0+t17971*t17983*t17957*t17976*t18202*2.0E1-t17983*t17957*t17993*t17976*t18180* \
               8.0-t17980*t17983*t17957*t18010*t18180*2.0-t17950*t17945*t18183*t18194*t18195*(1.0/2.0)+t17951*t17952* \
               t17971*t17957*t17993*t17976*3.2E1+t17951*t17952*t17971*t17980*t17957*t18010*8.0-t17951*t17952*t17980* \
               t17957*t17976*t18180*8.0-a1p*c*t17944*t17992*t17986*t17987*(2.0/3.0)+Aa*t17957*t17994*t18012*t18004* \
               t18211*t18006*2.0+Aa*t17957*t17994*t18010*t18004*t18006*t18205*4.0+Aa*t17957*t17976*t17994*t18004* \
               t18006*(t17952*t17980*1.2E1+t17983*t18202*2.0E1+t17951*t17952*t17993*3.2E1)*2.0-t17957*t17976*t17994* \
               t18212*t18006*t18213*t18205*t18218*2.0-t17957*t17994*t18010*t18012*t18212*t18006*t18213*t18218*2.0+ \
               t17957*t17976*t17994*1/(t18000*t18000*t18000)*t18012*t18212*t18006*t18219*2.0-t17957*t17976*t17994* \
               t18012*t18212*t18006*t18213*(b2a*c*t18169*(4.0/9.0)+b4a*t17939*t18170*(1.0E1/9.0)+b1a*c*t17985*t18169* \
               (2.0/9.0)+b3a*c*t17935*t18169*(2.0/3.0)-b1a*t17939*t18170*t18184*(1.0/3.6E1)+b3a*t17939*t17985*t18170* \
               (1.0/1.2E1))+Aa*a1a*c*t17944*t17957*t17976*t17994*t18004*t18205*(4.0/3.0)+Aa*a1a*c*t17944*t17957*t17994* \
               t18010*t18012*t18004*(4.0/3.0)+Aa*a1a*c*t17957*t17976*t17994*t18012*t18004*t18169*(8.0/9.0)-t17957* \
               t17976*t17994*t17995*1/(t18000*t18000*t18000*t18000)*1/(t18003*t18003)*t18012*t18006*t18219*(1.0/2.0) \
               -a1a*c*t17944*t17957*t17976*t17994*t18012*t18212*t18213*t18218*(2.0/3.0))-t17957*t18050*t18235*2.0- \
               t17950*t17992*t17986*t17987*2.0+t18040*t18045*t18038*t18039*2.0+a1p*c*c0p*t17970*t17944*(4.0/3.0)- \
               a1p*c*c0p*t18023*t18047*(4.0/3.0)+t17971*t17983*t17957*t17993*t17976*8.0+t17971*t17980*t17983*t17957* \
               t18010*2.0-t17980*t17983*t17957*t17976*t18180*2.0+t17951*t17952*t17971*t17980*t17957*t17976*8.0+Aa* \
               t17957*t17976*t17994*t18004*t18006*t18205*4.0+Aa*t17957*t17994*t18010*t18012*t18004*t18006*4.0-t17957* \
               t17976*t17994*t18012*t18212*t18006*t18213*t18218*2.0+Aa*a1a*c*t17944*t17957*t17976*t17994*t18012*t18004* \
               (4.0/3.0))-(X-1.0)*(c0*t18143*(t18101*(cxnl1*gamma_bb[index]*gx*t18131*t18086*(8.8E1/9.0)-cxnl1*t18130* \
               t18064*t18118*t18083*2.4E1+cxnl2*t18130*t18064*t18083*t18095*(3.04E2/9.0)-cxnl2*t18102*t18126*t18064* \
               t18127*t18083*(3.2E1/3.0)-cxnl2*t18064*t18127*t18083*t18165*t18067+cxnl2*t18064*t18083*t18155*t18156* \
               t18067*2.0+cxnl1*gamma_bb[index]*gx*t18064*t18154*t18083*t18129*(1.28E2/9.0)+cxnl3*gamma_bb[index]* \
               gx*t18064*t18091*t18083*t18129*7.2E1-cxnl3*gamma_bb[index]*gx*t18103*t18122*t18123*t18064*t18083*1.6E1- \
               cxnl3*gamma_bb[index]*gx*t18123*t18160*t18064*t18083*t18066+cxnl3*gamma_bb[index]*gx*t18161*t18162* \
               t18064*t18083*t18066*2.0)-t18142*t18135*2.0-t18107*(t18145*t18137*2.0-t18151*t18096+t18141*t18082* \
               t18145*5.0E1-t18080*t18145*t18138*3.6E1+t18151*t18080*t18098*6.0+t18151*t18137*t18079-t18151*t18082* \
               t18099*5.0+t18145*t18079*t18098*1.0E1+t18141*t18151*t18082*t18079*5.0-t18151*t18080*t18138*t18079* \
               6.0+t18080*t18145*t18079*t18099*4.0-1/(t18081*t18081*t18081*t18081*t18081*t18081*t18081)*t18082*t18145* \
               t18079*3.0E1)+cx1*gamma_bb[index]*gx*t18131*t18086*(8.8E1/9.0)-cx1*t18130*t18064*t18118*t18083*2.4E1+ \
               cx2*t18130*t18064*t18083*t18095*(3.04E2/9.0)-cx2*t18102*t18126*t18064*t18127*t18083*(3.2E1/3.0)-cx2* \
               t18064*t18127*t18083*t18165*t18067+cx2*t18064*t18083*t18155*t18156*t18067*2.0+cx1*gamma_bb[index]* \
               gx*t18064*t18154*t18083*t18129*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t18064*t18091*t18083*t18129*7.2E1- \
               cx3*gamma_bb[index]*gx*t18103*t18122*t18123*t18064*t18083*1.6E1-cx3*gamma_bb[index]*gx*t18123*t18160* \
               t18064*t18083*t18066+cx3*gamma_bb[index]*gx*t18161*t18162*t18064*t18083*t18066*2.0)-c0*pow(rho_b[index],1.0/ \
               3.0)*(t18101*t18135-t18142*t18107+cx1*gamma_bb[index]*gx*t17918*t18086*(8.0/3.0)-cx1*t18102*t18064* \
               t18118*t18083*(8.0/3.0)+cx2*t18102*t18064*t18083*t18095*(1.6E1/3.0)-cx2*t18126*t18064*t18127*t18083* \
               t18067+cx3*gamma_bb[index]*gx*t18103*t18064*t18091*t18083*8.0-cx3*gamma_bb[index]*gx*t18122*t18123* \
               t18064*t18083*t18066)*(8.0/3.0)+c0*t18019*(cx0+t18101*t18107+cx1*gamma_bb[index]*gx*t17921*t18086+ \
               cx2*t18064*t18083*t18067*t18095+cx3*gamma_bb[index]*gx*t18064*t18091*t18083*t18066)*(4.0/9.0))-rho_b[index]* \
               t18269*(ccaa1*gamma_bb[index]*gcaa*t18131*t18272*(8.8E1/9.0)-ccaa1*t18130*t18064*t18065*t18282*2.4E1+ \
               ccaa2*t18130*t18064*t18065*t18281*(3.04E2/9.0)-ccaa2*t18102*t18064*t18065*t18291*t18285*(3.2E1/3.0) \
               -ccaa2*t18064*t18065*t18291*t18067*(gamma_bb[index]*gcaa*t18131*(1.76E2/9.0)+t18130*t18064*t18065* \
               (3.04E2/9.0))+ccaa2*t18064*1/(t18280*t18280*t18280)*t18065*t18067*(t18285*t18285)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t18064*t18065*t18129*t18277*7.2E1+ccaa1*gamma_bb[index]*gcaa*t18064*1/(t18271*t18271*t18271)* \
               t18065*t18129*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t18064*t18065*t18066*1/(t18276*t18276*t18276) \
               *(t18289*t18289)*2.0-ccaa3*gamma_bb[index]*gcaa*t18064*t18065*t18290*t18066*(gamma_bb[index]*gcaa* \
               t18131*(8.8E1/3.0)+t18130*t18064*t18065*(3.04E2/3.0)+gamma_bb[index]*gcaa*t18064*t18065*t18129*7.2E1) \
               -ccaa3*gamma_bb[index]*gcaa*t18103*t18064*t18065*t18290*t18289*1.6E1)+rho_b[index]*t18302*(t18312- \
               t18225-t18234+t18316+t18318+t17957*t18050*(t18310-t18312+t18225+t18234+t18315-t18316+t18317-t18318- \
               t18222*t18303*t18053*t18055*2.0-a1f*c*c0f*t18220*t18051*(8.0/9.0)))-rho_b[index]*t18297*t18298*2.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t20512 = 1/pow(rho_b[index],1.0/3.0);
            double t20513 = c*t20512;
            double t20514 = sqrt(t20513);
            double t20515 = b1f*t20514;
            double t20516 = pow(t20513,3.0/2.0);
            double t20517 = b3f*t20516;
            double t20518 = c*c;
            double t20519 = 1/pow(rho_b[index],2.0/3.0);
            double t20520 = b4f*t20518*t20519;
            double t20521 = b2f*c*t20512;
            double t20522 = t20520+t20521+t20515+t20517;
            double t20523 = 1/pow(rho_b[index],4.0/3.0);
            double t20524 = b1p*t20514;
            double t20525 = b3p*t20516;
            double t20526 = b4p*t20518*t20519;
            double t20527 = b2p*c*t20512;
            double t20528 = t20524+t20525+t20526+t20527;
            double t20529 = 1/pow(rho_b[index],5.0/3.0);
            double t20530 = 1/sqrt(t20513);
            double t20531 = 1/c0f;
            double t20532 = 1/t20522;
            double t20533 = t20531*t20532*(1.0/2.0);
            double t20534 = t20533+1.0;
            double t20535 = 1/c0p;
            double t20536 = 1/t20528;
            double t20537 = t20535*t20536*(1.0/2.0);
            double t20538 = t20537+1.0;
            double t20539 = a1p*c*t20512;
            double t20540 = t20539+1.0;
            double t20541 = 1/t20538;
            double t20542 = 1/(t20528*t20528);
            double t20543 = b4p*t20518*t20529*(2.0/3.0);
            double t20544 = b2p*c*t20523*(1.0/3.0);
            double t20545 = b1p*c*t20530*t20523*(1.0/6.0);
            double t20546 = b3p*c*t20514*t20523*(1.0/2.0);
            double t20547 = t20543+t20544+t20545+t20546;
            double t20548 = t20540*t20541*t20542*t20547;
            double t20549 = log(t20538);
            double t20550 = 1/pow(rho_b[index],8.0/3.0);
            double t20551 = gamma_bb[index]*gamma_bb[index];
            double t20552 = gcaa*gcaa;
            double t20553 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t20554 = 1/pow(rho_b[index],1.6E1/3.0);
            double t20555 = pow(2.0,1.0/3.0);
            double t20556 = t20555*2.0;
            double t20557 = t20556-2.0;
            double t20558 = two_13*2.0;
            double t20559 = t20558-2.0;
            double t20560 = 1/t20559;
            double t20561 = log(t20534);
            double t20562 = a1f*c*t20512;
            double t20563 = t20562+1.0;
            double t20564 = gamma_bb[index]*gcaa*t20550;
            double t20565 = t20564+1.0;
            double t20566 = 1/t20565;
            double t20567 = gamma_bb[index]*gcaa*t20550*3.0;
            double t20568 = gamma_bb[index]*gcaa*t20551*t20552*t20553;
            double t20569 = t20551*t20552*t20554*3.0;
            double t20570 = t20567+t20568+t20569+1.0;
            double t20571 = 1/t20570;
            double t20572 = gamma_bb[index]*gcaa*t20550*2.0;
            double t20573 = t20551*t20552*t20554;
            double t20574 = t20572+t20573+1.0;
            double t20575 = 1/t20574;
            double t20576 = 1/pow(rho_b[index],1.9E1/3.0);
            double t20577 = 1/pow(rho_b[index],1.1E1/3.0);
            double t20578 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t20579 = c0f*t20561*t20563*2.0;
            double t20580 = c0p*t20540*t20549*2.0;
            double t20581 = 1/pow(rho_b[index],1.0E1);
            double t20582 = 1/pow(rho_b[index],2.2E1/3.0);
            double t20583 = 1/(t20565*t20565);
            double t20584 = gamma_bb[index]*gcaa*t20577*(1.6E1/3.0);
            double t20585 = t20551*t20552*t20576*(1.6E1/3.0);
            double t20586 = t20584+t20585;
            double t20587 = gamma_bb[index]*gcaa*t20577*8.0;
            double t20588 = gamma_bb[index]*gcaa*t20551*t20552*t20578*8.0;
            double t20589 = t20551*t20552*t20576*1.6E1;
            double t20590 = t20587+t20588+t20589;
            double t20591 = 1/(t20570*t20570);
            double t20592 = 1/pow(rho_b[index],1.4E1/3.0);
            double t20593 = 1/(t20574*t20574);
            double t20594 = 1/t20534;
            double t20595 = 1/(t20522*t20522);
            double t20596 = b4f*t20518*t20529*(2.0/3.0);
            double t20597 = b2f*c*t20523*(1.0/3.0);
            double t20598 = b1f*c*t20530*t20523*(1.0/6.0);
            double t20599 = b3f*c*t20514*t20523*(1.0/2.0);
            double t20600 = t20596+t20597+t20598+t20599;
            double t20601 = a1f*c*c0f*t20523*t20561*(2.0/3.0);
            double t20602 = a1p*c*c0p*t20523*t20549*(2.0/3.0);
            double t20603 = ccaa1*gamma_bb[index]*gcaa*t20566*t20577*(8.0/3.0);
            double t20604 = ccaa3*gamma_bb[index]*gcaa*t20551*t20552*t20571*t20578*8.0;
            double t20605 = ccaa2*t20551*t20552*t20575*t20576*(1.6E1/3.0);
            double t20606 = t20603+t20604+t20605-ccaa1*t20551*t20552*t20583*t20576*(8.0/3.0)-ccaa2*t20551*t20552* \
               t20554*t20593*t20586-ccaa3*gamma_bb[index]*gcaa*t20551*t20552*t20553*t20590*t20591;
            double t20607 = ccaa1*gamma_bb[index]*gcaa*t20550*t20566;
            double t20608 = ccaa3*gamma_bb[index]*gcaa*t20551*t20552*t20553*t20571;
            double t20609 = ccaa2*t20551*t20552*t20554*t20575;
            double t20610 = ccaa0+t20607+t20608+t20609;
            double t20611 = 1/pow(rho_b[index],7.0/3.0);
            double t20612 = 1/pow(t20513,3.0/2.0);
            double t20613 = t20600*t20600;
            double t20614 = t20547*t20547;
            double t20615 = 1/(t20528*t20528*t20528);
            double t20616 = t20540*t20541*t20614*t20615*2.0;
            double t20617 = b4p*t20550*t20518*(1.0E1/9.0);
            double t20618 = b2p*c*t20611*(4.0/9.0);
            double t20619 = b3p*t20530*t20550*t20518*(1.0/1.2E1);
            double t20620 = b1p*c*t20530*t20611*(2.0/9.0);
            double t20621 = b3p*c*t20611*t20514*(2.0/3.0);
            double t20622 = t20620+t20621+t20617+t20618+t20619-b1p*t20612*t20550*t20518*(1.0/3.6E1);
            double t20623 = 1/(t20538*t20538);
            double t20624 = 1/(t20528*t20528*t20528*t20528);
            double t20625 = a1p*c*c0p*t20611*t20549*(8.0/9.0);
            double t20626 = pow(rho_b[index],5.0/3.0);
            double t20627 = C_k*t20626;
            double t20636 = tau_a[index]*1.0E20;
            double t20628 = t20627-t20636;
            double t20629 = ( (t20628 > 0.0) ?  1.0 : 0.0 ) ;
            double t20630 = t20629*1.0E20;
            double t20631 = 1/tau_b[index];
            double t20632 = tau_b[index]*1.0E20;
            double t20633 = t20632-t20627;
            double t20634 = ( (t20633 > 0.0) ?  1.0 : 0.0 ) ;
            double t20635 = C_k*t20631*t20634*t20626;
            double t20637 = t20630+t20635-1.0;
            double t20638 = t20637*t20637;
            double t20639 = t20630+t20635+1.0;
            double t20640 = t20638*t20638;
            double t20641 = gx*gx;
            double t20642 = gamma_bb[index]*gx*t20550;
            double t20643 = t20642+1.0;
            double t20657 = gamma_bb[index]*gx*t20577*(1.6E1/3.0);
            double t20658 = t20551*t20641*t20576*(1.6E1/3.0);
            double t20644 = t20657+t20658;
            double t20645 = gamma_bb[index]*gx*t20550*2.0;
            double t20646 = t20551*t20641*t20554;
            double t20647 = t20645+t20646+1.0;
            double t20648 = gamma_bb[index]*gx*t20550*3.0;
            double t20649 = gamma_bb[index]*gx*t20551*t20641*t20553;
            double t20650 = t20551*t20641*t20554*3.0;
            double t20651 = t20650+t20648+t20649+1.0;
            double t20652 = 1/(t20651*t20651);
            double t20653 = gamma_bb[index]*gx*t20577*8.0;
            double t20654 = gamma_bb[index]*gx*t20551*t20641*t20578*8.0;
            double t20655 = t20551*t20641*t20576*1.6E1;
            double t20656 = t20653+t20654+t20655;
            double t20659 = 1/(t20647*t20647);
            double t20660 = 1/t20643;
            double t20661 = 1/t20651;
            double t20662 = 1/t20647;
            double t20663 = 1/(t20643*t20643);
            double t20664 = pow(rho_b[index],2.0/3.0);
            double t20665 = 1/t20639;
            double t20666 = -t20627+t20636;
            double t20667 = 0.0 ;
            double t20668 = C_k*t20664*t20667*(5.0E20/3.0);
            double t20669 = C_k*C_k;
            double t20670 = pow(rho_b[index],7.0/3.0);
            double t20671 = 0.0 ;
            double t20672 = C_k*t20631*t20634*t20664*(5.0/3.0);
            double t20674 = t20631*t20670*t20671*t20669*(5.0/3.0);
            double t20673 = t20672-t20674+t20668;
            double t20675 = 1/(t20639*t20639*t20639);
            double t20676 = 1/(t20639*t20639*t20639*t20639*t20639);
            double t20677 = pow(rho_b[index],4.0/3.0);
            double t20678 = rho_b[index]*rho_b[index];
            double t20679 = 1/(t20639*t20639);
            double t20680 = t20673*t20673;
            double t20681 = 1/(t20639*t20639*t20639*t20639);
            double t20682 = 1/(t20639*t20639*t20639*t20639*t20639*t20639);
            double t20683 = 0.0 ;
            double t20684 = C_k*t20512*t20667*(1.0E21/9.0);
            double t20685 = 0.0 ;
            double t20686 = C_k*rho_b[index]*t20631*t20685*t20669*t20678*(2.5E1/9.0);
            double t20687 = C_k*t20512*t20631*t20634*(1.0E1/9.0);
            double t20689 = t20683*t20677*t20669*(2.5E21/9.0);
            double t20690 = t20631*t20671*t20677*t20669*(2.0E1/3.0);
            double t20688 = -t20690+t20684+t20686+t20687-t20689;
            double t20691 = 1/(t20643*t20643*t20643);
            double t20692 = t20644*t20644;
            double t20693 = 1/(t20647*t20647*t20647);
            double t20694 = gamma_bb[index]*gx*t20592*(8.8E1/3.0);
            double t20695 = gamma_bb[index]*gx*t20551*t20641*t20581*7.2E1;
            double t20696 = t20551*t20641*t20582*(3.04E2/3.0);
            double t20697 = t20694+t20695+t20696;
            double t20698 = t20656*t20656;
            double t20699 = 1/(t20651*t20651*t20651);
            double t20700 = gamma_bb[index]*gx*t20592*(1.76E2/9.0);
            double t20701 = t20551*t20641*t20582*(3.04E2/9.0);
            double t20702 = t20700+t20701;
            double t20703 = X-1.0;
            double t20704 = t20637*t20665;
            double t20705 = t20640*t20637*t20676;
            double t20711 = t20637*t20638*t20675*2.0;
            double t20706 = -t20711+t20704+t20705;
            double t20707 = cxnl1*gamma_bb[index]*gx*t20550*t20660;
            double t20708 = cxnl3*gamma_bb[index]*gx*t20551*t20641*t20553*t20661;
            double t20709 = cxnl2*t20551*t20641*t20554*t20662;
            double t20710 = cxnl0+t20707+t20708+t20709;
            double t20712 = cxnl1*gamma_bb[index]*gx*t20660*t20577*(8.0/3.0);
            double t20713 = cxnl3*gamma_bb[index]*gx*t20551*t20641*t20661*t20578*8.0;
            double t20714 = cxnl2*t20551*t20641*t20662*t20576*(1.6E1/3.0);
            double t20715 = t20712+t20713+t20714-cxnl1*t20551*t20641*t20663*t20576*(8.0/3.0)-cxnl2*t20551*t20641* \
               t20554*t20644*t20659-cxnl3*gamma_bb[index]*gx*t20551*t20641*t20553*t20652*t20656;
            double t20716 = t20673*t20665;
            double t20717 = t20681*t20637*t20673*t20638*6.0;
            double t20718 = t20640*t20673*t20676*5.0;
            double t20719 = t20716+t20717+t20718-t20673*t20638*t20675*6.0-t20637*t20673*t20679-t20640*t20637* \
               t20673*t20682*5.0;
            v_rho_b_rho_b_[index] = t20606*(t20580+t20560*t20557*(t20579-c0p*t20540*t20549*2.0))*2.0+t20610*(t20602- \
               t20548+t20560*t20557*(t20601+t20548-t20600*t20563*t20594*t20595-a1p*c*c0p*t20523*t20549*(2.0/3.0)) \
               )*2.0+rho_b[index]*t20610*(-t20616-t20625+t20560*t20557*(t20616+t20625-t20540*t20541*t20622*t20542- \
               1/(t20522*t20522*t20522)*t20613*t20563*t20594*2.0+t20563*t20594*t20595*(b2f*c*t20611*(4.0/9.0)+b4f* \
               t20550*t20518*(1.0E1/9.0)+b1f*c*t20530*t20611*(2.0/9.0)+b3f*c*t20611*t20514*(2.0/3.0)-b1f*t20612*t20550* \
               t20518*(1.0/3.6E1)+b3f*t20530*t20550*t20518*(1.0/1.2E1))+1/(t20522*t20522*t20522*t20522)*t20531*t20613* \
               1/(t20534*t20534)*t20563*(1.0/2.0)-a1f*c*c0f*t20611*t20561*(8.0/9.0)-t20540*t20614*t20623*t20624*t20535* \
               (1.0/2.0)+a1f*c*t20600*t20523*t20594*t20595*(2.0/3.0)-a1p*c*t20523*t20541*t20542*t20547*(2.0/3.0)) \
               +t20540*t20541*t20622*t20542+t20540*t20614*t20623*t20624*t20535*(1.0/2.0)+a1p*c*t20523*t20541*t20542* \
               t20547*(2.0/3.0))-rho_b[index]*t20606*(t20602-t20548+t20560*t20557*(t20601-t20602+t20548-t20600*t20563* \
               t20594*t20595))*2.0-rho_b[index]*(t20580-t20560*t20557*(t20580-t20579))*(ccaa1*gamma_bb[index]*gcaa* \
               t20592*t20566*(8.8E1/9.0)-ccaa1*t20551*t20552*t20582*t20583*2.4E1+ccaa2*t20551*t20552*t20582*t20575* \
               (3.04E2/9.0)-ccaa2*t20551*t20552*t20593*t20576*t20586*(3.2E1/3.0)-ccaa2*t20551*t20552*t20554*t20593* \
               (gamma_bb[index]*gcaa*t20592*(1.76E2/9.0)+t20551*t20552*t20582*(3.04E2/9.0))+ccaa2*t20551*t20552*t20554* \
               1/(t20574*t20574*t20574)*(t20586*t20586)*2.0+ccaa3*gamma_bb[index]*gcaa*t20551*t20552*t20571*t20581* \
               7.2E1+ccaa1*gamma_bb[index]*gcaa*t20551*t20552*t20581*1/(t20565*t20565*t20565)*(1.28E2/9.0)+ccaa3* \
               gamma_bb[index]*gcaa*t20551*t20552*1/(t20570*t20570*t20570)*t20553*(t20590*t20590)*2.0-ccaa3*gamma_bb[index]* \
               gcaa*t20551*t20552*t20553*t20591*(gamma_bb[index]*gcaa*t20592*(8.8E1/3.0)+t20551*t20552*t20582*(3.04E2/ \
               3.0)+gamma_bb[index]*gcaa*t20551*t20552*t20581*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t20551*t20552*t20590* \
               t20591*t20578*1.6E1)-c0*t20703*t20519*(cx0+t20710*t20706+cx1*gamma_bb[index]*gx*t20550*t20660+cx2* \
               t20551*t20641*t20554*t20662+cx3*gamma_bb[index]*gx*t20551*t20641*t20553*t20661)*(4.0/9.0)-c0*t20703* \
               t20677*(t20706*(cxnl1*gamma_bb[index]*gx*t20660*t20592*(8.8E1/9.0)-cxnl1*t20551*t20641*t20582*t20663* \
               2.4E1+cxnl2*t20551*t20641*t20662*t20582*(3.04E2/9.0)-cxnl2*t20702*t20551*t20641*t20554*t20659+cxnl2* \
               t20551*t20641*t20554*t20692*t20693*2.0-cxnl2*t20551*t20641*t20644*t20576*t20659*(3.2E1/3.0)+cxnl3* \
               gamma_bb[index]*gx*t20551*t20641*t20661*t20581*7.2E1+cxnl1*gamma_bb[index]*gx*t20551*t20641*t20581* \
               t20691*(1.28E2/9.0)-cxnl3*gamma_bb[index]*gx*t20551*t20641*t20553*t20652*t20697-cxnl3*gamma_bb[index]* \
               gx*t20551*t20641*t20652*t20656*t20578*1.6E1+cxnl3*gamma_bb[index]*gx*t20551*t20641*t20553*t20698*t20699* \
               2.0)-t20715*t20719*2.0-t20710*(t20680*t20679*2.0-t20665*t20688+t20640*t20680*t20682*5.0E1-t20680*t20681* \
               t20638*3.6E1+t20680*t20637*t20675*1.0E1-t20640*t20676*t20688*5.0+t20638*t20675*t20688*6.0+t20637*t20679* \
               t20688+t20640*t20637*t20682*t20688*5.0+t20680*t20637*t20638*t20676*4.0-t20681*t20637*t20638*t20688* \
               6.0-t20640*t20680*t20637*1/(t20639*t20639*t20639*t20639*t20639*t20639*t20639)*3.0E1)+cx1*gamma_bb[index]* \
               gx*t20660*t20592*(8.8E1/9.0)-cx1*t20551*t20641*t20582*t20663*2.4E1+cx2*t20551*t20641*t20662*t20582* \
               (3.04E2/9.0)-cx2*t20702*t20551*t20641*t20554*t20659+cx2*t20551*t20641*t20554*t20692*t20693*2.0-cx2* \
               t20551*t20641*t20644*t20576*t20659*(3.2E1/3.0)+cx1*gamma_bb[index]*gx*t20551*t20641*t20581*t20691* \
               (1.28E2/9.0)+cx3*gamma_bb[index]*gx*t20551*t20641*t20661*t20581*7.2E1-cx3*gamma_bb[index]*gx*t20551* \
               t20641*t20553*t20652*t20697-cx3*gamma_bb[index]*gx*t20551*t20641*t20652*t20656*t20578*1.6E1+cx3*gamma_bb[index]* \
               gx*t20551*t20641*t20553*t20698*t20699*2.0)-c0*pow(rho_b[index],1.0/3.0)*t20703*(t20710*t20719-t20706* \
               t20715-cx1*gamma_bb[index]*gx*t20660*t20577*(8.0/3.0)+cx1*t20551*t20641*t20663*t20576*(8.0/3.0)-cx2* \
               t20551*t20641*t20662*t20576*(1.6E1/3.0)+cx2*t20551*t20641*t20554*t20644*t20659-cx3*gamma_bb[index]* \
               gx*t20551*t20641*t20661*t20578*8.0+cx3*gamma_bb[index]*gx*t20551*t20641*t20553*t20652*t20656)*(8.0/ \
               3.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t18320 = 1/pow(rho_a[index],1.0/3.0);
                double t18321 = c*t18320;
                double t18322 = sqrt(t18321);
                double t18323 = pow(t18321,3.0/2.0);
                double t18324 = c*c;
                double t18325 = 1/pow(rho_a[index],2.0/3.0);
                double t18326 = 1/c0p;
                double t18327 = b1p*t18322;
                double t18328 = b3p*t18323;
                double t18329 = b4p*t18324*t18325;
                double t18330 = b2p*c*t18320;
                double t18331 = t18330+t18327+t18328+t18329;
                double t18332 = 1/t18331;
                double t18333 = t18332*t18326*(1.0/2.0);
                double t18334 = t18333+1.0;
                double t18335 = log(t18334);
                double t18336 = a1p*c*t18320;
                double t18337 = t18336+1.0;
                double t18338 = pow(2.0,1.0/3.0);
                double t18339 = t18338*2.0;
                double t18340 = t18339-2.0;
                double t18341 = two_13*2.0;
                double t18342 = t18341-2.0;
                double t18343 = 1/t18342;
                double t18344 = 1/c0f;
                double t18345 = 1/pow(rho_b[index],1.0/3.0);
                double t18346 = c*t18345;
                double t18347 = sqrt(t18346);
                double t18348 = pow(t18346,3.0/2.0);
                double t18349 = 1/pow(rho_b[index],2.0/3.0);
                double t18350 = b1p*t18347;
                double t18351 = b3p*t18348;
                double t18352 = b4p*t18324*t18349;
                double t18353 = b2p*c*t18345;
                double t18354 = t18350+t18351+t18352+t18353;
                double t18355 = 1/t18354;
                double t18356 = t18326*t18355*(1.0/2.0);
                double t18357 = t18356+1.0;
                double t18358 = log(t18357);
                double t18359 = a1p*c*t18345;
                double t18360 = t18359+1.0;
                double t18361 = c0p*t18360*t18358*2.0;
                double t18362 = rho_a[index]+rho_b[index];
                double t18363 = 1/pow(t18362,1.0/3.0);
                double t18364 = c*t18363;
                double t18365 = sqrt(t18364);
                double t18366 = pow(t18364,3.0/2.0);
                double t18367 = 1/pow(t18362,2.0/3.0);
                double t18368 = b1p*t18365;
                double t18369 = b3p*t18366;
                double t18370 = b4p*t18324*t18367;
                double t18371 = b2p*c*t18363;
                double t18372 = t18370+t18371+t18368+t18369;
                double t18373 = 1/t18372;
                double t18374 = t18326*t18373*(1.0/2.0);
                double t18375 = t18374+1.0;
                double t18376 = log(t18375);
                double t18377 = a1p*c*t18363;
                double t18378 = t18377+1.0;
                double t18379 = c0p*t18376*t18378*2.0;
                double t18380 = rho_a[index]-rho_b[index];
                double t18381 = t18380*t18380;
                double t18382 = 1/t18362;
                double t18383 = t18380*t18382;
                double t18384 = 1/(t18362*t18362*t18362*t18362);
                double t18385 = t18381*t18381;
                double t18386 = t18383+1.0;
                double t18387 = pow(t18386,4.0/3.0);
                double t18388 = -t18383+1.0;
                double t18389 = pow(t18388,4.0/3.0);
                double t18390 = t18387+t18389-2.0;
                double t18391 = 1/pow(rho_a[index],1.1E1/3.0);
                double t18392 = 1/pow(rho_a[index],8.0/3.0);
                double t18393 = gamma_aa[index]*t18392*(1.0/2.0);
                double t18394 = 1/pow(rho_b[index],8.0/3.0);
                double t18395 = gamma_bb[index]*t18394*(1.0/2.0);
                double t18396 = t18393+t18395;
                double t18397 = gcab*t18396;
                double t18398 = t18397+1.0;
                double t18399 = gcab*gcab;
                double t18400 = t18396*t18396;
                double t18401 = 1/pow(rho_a[index],1.9E1/3.0);
                double t18402 = t18400*t18399;
                double t18403 = gcab*t18396*2.0;
                double t18404 = t18402+t18403+1.0;
                double t18405 = t18400*t18399*3.0;
                double t18406 = gcab*t18400*t18396*t18399;
                double t18407 = gcab*t18396*3.0;
                double t18408 = t18405+t18406+t18407+1.0;
                double t18409 = 1/(t18398*t18398);
                double t18410 = 1/t18404;
                double t18411 = 1/(t18408*t18408);
                double t18412 = 1/(t18404*t18404);
                double t18413 = gamma_aa[index]*gcab*t18391*(8.0/3.0);
                double t18414 = gamma_aa[index]*t18391*t18396*t18399*(8.0/3.0);
                double t18415 = t18413+t18414;
                double t18416 = 1/t18408;
                double t18417 = gamma_aa[index]*gcab*t18391*4.0;
                double t18418 = gamma_aa[index]*gcab*t18400*t18391*t18399*4.0;
                double t18419 = gamma_aa[index]*t18391*t18396*t18399*8.0;
                double t18420 = t18417+t18418+t18419;
                double t18421 = gcab*t18392;
                double t18422 = t18392*t18396*t18399;
                double t18423 = t18421+t18422;
                double t18424 = gcab*t18392*(3.0/2.0);
                double t18425 = t18392*t18396*t18399*3.0;
                double t18426 = gcab*t18400*t18392*t18399*(3.0/2.0);
                double t18427 = t18424+t18425+t18426;
                double t18428 = gx*gx;
                double t18429 = 1/pow(rho_a[index],1.6E1/3.0);
                double t18430 = gamma_aa[index]*gamma_aa[index];
                double t18431 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t18432 = gamma_aa[index]*gx*t18392;
                double t18433 = t18432+1.0;
                double t18434 = gamma_aa[index]*gx*t18392*3.0;
                double t18435 = gamma_aa[index]*gx*t18430*t18431*t18428;
                double t18436 = t18430*t18428*t18429*3.0;
                double t18437 = t18434+t18435+t18436+1.0;
                double t18438 = gamma_aa[index]*gx*t18392*2.0;
                double t18439 = t18430*t18428*t18429;
                double t18440 = t18438+t18439+1.0;
                double t18441 = tau_a[index]*1.0E20;
                double t18442 = pow(rho_a[index],5.0/3.0);
                double t18447 = C_k*t18442;
                double t18443 = t18441-t18447;
                double t18444 = 0.0 ;
                double t18445 = pow(rho_a[index],2.0/3.0);
                double t18446 = 1/tau_a[index];
                double t18448 = ( (t18443 > 0.0) ?  1.0 : 0.0 ) ;
                double t18449 = C_k*t18444*t18445*(5.0E20/3.0);
                double t18450 = C_k*C_k;
                double t18451 = pow(rho_a[index],7.0/3.0);
                double t18452 = C_k*t18445*t18446*t18448*(5.0/3.0);
                double t18459 = t18450*t18451*t18444*t18446*(5.0/3.0);
                double t18453 = t18452+t18449-t18459;
                double t18454 = -t18441+t18447;
                double t18455 = ( (t18454 > 0.0) ?  1.0 : 0.0 ) ;
                double t18456 = t18455*1.0E20;
                double t18457 = C_k*t18442*t18446*t18448;
                double t18458 = t18456+t18457+1.0;
                double t18460 = t18456+t18457-1.0;
                double t18461 = t18460*t18460;
                double t18462 = t18461*t18461;
                double t18463 = 1/t18458;
                double t18464 = 1/(t18458*t18458*t18458);
                double t18465 = 1/(t18458*t18458*t18458*t18458*t18458);
                double t18466 = 1/t18433;
                double t18467 = 1/t18440;
                double t18468 = 1/t18437;
                double t18469 = 1/(t18433*t18433);
                double t18470 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t18471 = 1/(t18437*t18437);
                double t18472 = 1/(t18440*t18440);
                double t18473 = gx*t18392*3.0;
                double t18474 = gamma_aa[index]*t18428*t18429*6.0;
                double t18475 = gx*t18430*t18431*t18428*3.0;
                double t18476 = t18473+t18474+t18475;
                double t18477 = gx*t18392*2.0;
                double t18478 = gamma_aa[index]*t18428*t18429*2.0;
                double t18479 = t18477+t18478;
                double t18480 = gamma_aa[index]*gx*t18391*(1.6E1/3.0);
                double t18481 = t18401*t18430*t18428*(1.6E1/3.0);
                double t18482 = t18480+t18481;
                double t18483 = gamma_aa[index]*gx*t18391*8.0;
                double t18484 = gamma_aa[index]*gx*t18430*t18470*t18428*8.0;
                double t18485 = t18401*t18430*t18428*1.6E1;
                double t18486 = t18483+t18484+t18485;
                double t18487 = 1/(t18433*t18433*t18433);
                double t18488 = gx*t18391*8.0;
                double t18489 = gamma_aa[index]*t18401*t18428*3.2E1;
                double t18490 = gx*t18430*t18470*t18428*2.4E1;
                double t18491 = t18490+t18488+t18489;
                double t18492 = gx*t18391*(1.6E1/3.0);
                double t18493 = gamma_aa[index]*t18401*t18428*(3.2E1/3.0);
                double t18494 = t18492+t18493;
                double t18495 = 1/(t18440*t18440*t18440);
                double t18496 = 1/(t18437*t18437*t18437);
                double t18497 = t18460*t18463;
                double t18498 = t18460*t18462*t18465;
                double t18499 = t18497+t18498-t18460*t18461*t18464*2.0;
                double t18500 = cxnl1*gx*t18392*t18466;
                double t18501 = cxnl2*gamma_aa[index]*t18428*t18429*t18467*2.0;
                double t18502 = cxnl3*gx*t18430*t18431*t18428*t18468*3.0;
                double t18503 = t18500+t18501+t18502-cxnl1*gamma_aa[index]*t18428*t18429*t18469-cxnl2*t18430*t18472* \
                   t18428*t18429*t18479-cxnl3*gamma_aa[index]*gx*t18430*t18431*t18471*t18428*t18476;
                double t18504 = b1f*t18322;
                double t18505 = b3f*t18323;
                double t18506 = b4f*t18324*t18325;
                double t18507 = b2f*c*t18320;
                double t18508 = t18504+t18505+t18506+t18507;
                double t18509 = 1/t18508;
                double t18510 = t18344*t18509*(1.0/2.0);
                double t18511 = t18510+1.0;
                double t18512 = log(t18511);
                double t18513 = a1f*c*t18320;
                double t18514 = t18513+1.0;
                double t18515 = c0f*t18512*t18514*2.0;
                double t18516 = c0p*t18335*t18337*2.0;
                double t18517 = gcaa*gcaa;
                double t18518 = gamma_aa[index]*gcaa*t18392;
                double t18519 = t18518+1.0;
                double t18520 = gamma_aa[index]*gcaa*t18392*3.0;
                double t18521 = gamma_aa[index]*gcaa*t18430*t18431*t18517;
                double t18522 = t18430*t18517*t18429*3.0;
                double t18523 = t18520+t18521+t18522+1.0;
                double t18524 = gamma_aa[index]*gcaa*t18392*2.0;
                double t18525 = t18430*t18517*t18429;
                double t18526 = t18524+t18525+1.0;
                double t18527 = 1/t18398;
                double t18528 = 1/pow(t18362,4.0/3.0);
                double t18529 = b1f*t18365;
                double t18530 = b3f*t18366;
                double t18531 = b4f*t18324*t18367;
                double t18532 = b2f*c*t18363;
                double t18533 = t18530+t18531+t18532+t18529;
                double t18534 = 1/t18533;
                double t18535 = t18344*t18534*(1.0/2.0);
                double t18536 = t18535+1.0;
                double t18537 = log(t18536);
                double t18538 = a1f*c*t18363;
                double t18539 = t18538+1.0;
                double t18541 = c0f*t18537*t18539*2.0;
                double t18540 = -t18541+t18379;
                double t18542 = 1/(t18362*t18362);
                double t18570 = t18380*t18542;
                double t18543 = -t18570+t18382;
                double t18544 = t18541-t18379;
                double t18545 = 1/pow(t18362,5.0/3.0);
                double t18546 = 1/sqrt(t18364);
                double t18547 = 1/t18375;
                double t18548 = 1/(t18372*t18372);
                double t18549 = b4p*t18324*t18545*(2.0/3.0);
                double t18550 = b2p*c*t18528*(1.0/3.0);
                double t18551 = b1p*c*t18528*t18546*(1.0/6.0);
                double t18552 = b3p*c*t18365*t18528*(1.0/2.0);
                double t18553 = t18550+t18551+t18552+t18549;
                double t18554 = t18553*t18547*t18548*t18378;
                double t18555 = 1/d2fz0;
                double t18556 = 1/Aa;
                double t18557 = b1a*t18365;
                double t18558 = b3a*t18366;
                double t18559 = b4a*t18324*t18367;
                double t18560 = b2a*c*t18363;
                double t18561 = t18560+t18557+t18558+t18559;
                double t18562 = 1/t18561;
                double t18563 = t18562*t18556*(1.0/2.0);
                double t18564 = t18563+1.0;
                double t18565 = log(t18564);
                double t18566 = a1a*c*t18363;
                double t18567 = t18566+1.0;
                double t18568 = 1/(t18362*t18362*t18362*t18362*t18362);
                double t18569 = pow(t18386,1.0/3.0);
                double t18571 = t18543*t18569*(4.0/3.0);
                double t18572 = pow(t18388,1.0/3.0);
                double t18573 = t18571-t18543*t18572*(4.0/3.0);
                double t18574 = t18384*t18385;
                double t18575 = t18574-1.0;
                double t18576 = 1/pow(rho_a[index],4.0/3.0);
                double t18577 = 1/pow(rho_a[index],5.0/3.0);
                double t18578 = 1/sqrt(t18321);
                double t18579 = 1/t18334;
                double t18580 = 1/(t18331*t18331);
                double t18581 = b4p*t18324*t18577*(2.0/3.0);
                double t18582 = b2p*c*t18576*(1.0/3.0);
                double t18583 = b1p*c*t18576*t18578*(1.0/6.0);
                double t18584 = b3p*c*t18322*t18576*(1.0/2.0);
                double t18585 = t18581+t18582+t18583+t18584;
                double t18586 = t18337*t18580*t18585*t18579;
                double t18587 = t18515-t18516;
                double t18588 = t18340*t18343*t18587;
                double t18589 = Aa*t18343*t18390*t18555*t18565*t18575*t18567*2.0;
                double t18590 = t18516+t18588;
                double t18591 = 1/t18519;
                double t18592 = 1/t18526;
                double t18593 = 1/t18523;
                double t18594 = 1/(t18519*t18519);
                double t18595 = 1/(t18523*t18523);
                double t18596 = 1/(t18526*t18526);
                double t18597 = gcaa*t18392*3.0;
                double t18598 = gamma_aa[index]*t18517*t18429*6.0;
                double t18599 = gcaa*t18430*t18431*t18517*3.0;
                double t18600 = t18597+t18598+t18599;
                double t18601 = gcaa*t18392*2.0;
                double t18602 = gamma_aa[index]*t18517*t18429*2.0;
                double t18603 = t18601+t18602;
                double t18604 = gamma_aa[index]*gcaa*t18391*(1.6E1/3.0);
                double t18605 = t18401*t18430*t18517*(1.6E1/3.0);
                double t18606 = t18604+t18605;
                double t18607 = gamma_aa[index]*gcaa*t18391*8.0;
                double t18608 = gamma_aa[index]*gcaa*t18430*t18470*t18517*8.0;
                double t18609 = t18401*t18430*t18517*1.6E1;
                double t18610 = t18607+t18608+t18609;
                double t18611 = 1/t18511;
                double t18612 = 1/(t18508*t18508);
                double t18613 = b4f*t18324*t18577*(2.0/3.0);
                double t18614 = b2f*c*t18576*(1.0/3.0);
                double t18615 = b1f*c*t18576*t18578*(1.0/6.0);
                double t18616 = b3f*c*t18322*t18576*(1.0/2.0);
                double t18617 = t18613+t18614+t18615+t18616;
                double t18618 = a1f*c*c0f*t18512*t18576*(2.0/3.0);
                double t18619 = a1p*c*c0p*t18335*t18576*(2.0/3.0);
                double t18620 = ccaa1*gcaa*t18392*t18591;
                double t18621 = ccaa2*gamma_aa[index]*t18517*t18429*t18592*2.0;
                double t18622 = ccaa3*gcaa*t18430*t18431*t18517*t18593*3.0;
                double t18623 = t18620+t18621+t18622-ccaa1*gamma_aa[index]*t18517*t18429*t18594-ccaa2*t18430*t18603* \
                   t18517*t18429*t18596-ccaa3*gamma_aa[index]*gcaa*t18600*t18430*t18431*t18517*t18595;
                v_rho_a_gamma_aa_[index] = -(X-1.0)*(c0*pow(rho_a[index],1.0/3.0)*(t18503*t18499+cx1*gx*t18392*t18466- \
                   cx1*gamma_aa[index]*t18428*t18429*t18469+cx2*gamma_aa[index]*t18428*t18429*t18467*2.0-cx2*t18430*t18472* \
                   t18428*t18429*t18479+cx3*gx*t18430*t18431*t18428*t18468*3.0-cx3*gamma_aa[index]*gx*t18430*t18431*t18471* \
                   t18428*t18476)*(4.0/3.0)+c0*pow(rho_a[index],4.0/3.0)*(t18503*(t18453*t18463-t18460*t18453*1/(t18458* \
                   t18458)-t18461*t18453*t18464*6.0+t18453*t18462*t18465*5.0+t18460*t18461*t18453*1/(t18458*t18458*t18458* \
                   t18458)*6.0-t18460*t18453*t18462*1/(t18458*t18458*t18458*t18458*t18458*t18458)*5.0)+t18499*(cxnl1* \
                   gx*t18391*t18466*(-8.0/3.0)-cxnl2*gamma_aa[index]*t18401*t18428*t18467*(3.2E1/3.0)+cxnl1*gamma_aa[index]* \
                   t18401*t18428*t18469*8.0+cxnl2*t18401*t18430*t18472*t18428*t18479*(1.6E1/3.0)+cxnl2*t18430*t18472* \
                   t18428*t18429*t18494+cxnl2*gamma_aa[index]*t18472*t18428*t18482*t18429*2.0-cxnl1*gx*t18430*t18470* \
                   t18428*t18487*(1.6E1/3.0)-cxnl3*gx*t18430*t18470*t18428*t18468*2.4E1+cxnl3*gx*t18430*t18431*t18471* \
                   t18428*t18486*3.0-cxnl2*t18430*t18428*t18482*t18429*t18495*t18479*2.0+cxnl3*gamma_aa[index]*gx*t18430* \
                   t18431*t18471*t18428*t18491+cxnl3*gamma_aa[index]*gx*t18430*t18470*t18471*t18428*t18476*8.0-cxnl3* \
                   gamma_aa[index]*gx*t18430*t18431*t18428*t18476*t18486*t18496*2.0)-cx1*gx*t18391*t18466*(8.0/3.0)+cx1* \
                   gamma_aa[index]*t18401*t18428*t18469*8.0-cx2*gamma_aa[index]*t18401*t18428*t18467*(3.2E1/3.0)+cx2* \
                   t18401*t18430*t18472*t18428*t18479*(1.6E1/3.0)+cx2*t18430*t18472*t18428*t18429*t18494+cx2*gamma_aa[index]* \
                   t18472*t18428*t18482*t18429*2.0-cx1*gx*t18430*t18470*t18428*t18487*(1.6E1/3.0)-cx3*gx*t18430*t18470* \
                   t18428*t18468*2.4E1+cx3*gx*t18430*t18431*t18471*t18428*t18486*3.0-cx2*t18430*t18428*t18482*t18429* \
                   t18495*t18479*2.0+cx3*gamma_aa[index]*gx*t18430*t18431*t18471*t18428*t18491+cx3*gamma_aa[index]*gx* \
                   t18430*t18470*t18471*t18428*t18476*8.0-cx3*gamma_aa[index]*gx*t18430*t18431*t18428*t18476*t18486*t18496* \
                   2.0))-t18623*t18590-(rho_a[index]*(t18516+t18340*t18343*(t18515-c0p*t18335*t18337*2.0))+rho_b[index]* \
                   (t18361-t18340*t18343*(t18361-c0f*log((t18344*(1.0/2.0))/(b1f*t18347+b3f*t18348+b2f*c*t18345+b4f*t18324* \
                   t18349)+1.0)*(a1f*c*t18345+1.0)*2.0))-t18362*(t18379+t18589-t18540*t18343*t18390*t18384*t18385))*(ccab1* \
                   gcab*t18391*t18527*(4.0/3.0)-ccab2*t18400*t18412*t18399*(gcab*t18391*(8.0/3.0)+gamma_aa[index]*t18401* \
                   t18399*(4.0/3.0)+t18391*t18396*t18399*(8.0/3.0))+ccab2*gamma_aa[index]*t18401*t18410*t18399*(4.0/3.0) \
                   -ccab1*gamma_aa[index]*t18401*t18409*t18399*(4.0/3.0)+ccab2*t18410*t18391*t18396*t18399*(8.0/3.0)- \
                   ccab1*t18391*t18409*t18396*t18399*(4.0/3.0)-ccab2*t18412*t18415*t18392*t18396*t18399+ccab2*t18400* \
                   1/(t18404*t18404*t18404)*t18423*t18415*t18399*2.0+ccab3*gcab*t18400*t18416*t18391*t18399*4.0+ccab3* \
                   gamma_aa[index]*gcab*t18401*t18416*t18396*t18399*4.0-ccab2*gamma_aa[index]*t18412*t18423*t18391*t18396* \
                   t18399*(8.0/3.0)-ccab3*gcab*t18400*t18411*t18420*t18392*t18399*(3.0/2.0)-ccab3*gcab*t18400*t18411* \
                   t18396*t18399*(gcab*t18391*4.0+gamma_aa[index]*t18401*t18399*4.0+t18391*t18396*t18399*8.0+gcab*t18400* \
                   t18391*t18399*4.0+gamma_aa[index]*gcab*t18401*t18396*t18399*4.0)+ccab1*gamma_aa[index]*gcab*t18401* \
                   t18396*1/(t18398*t18398*t18398)*t18399*(4.0/3.0)+ccab3*gcab*t18400*t18420*1/(t18408*t18408*t18408) \
                   *t18427*t18396*t18399*2.0-ccab3*gamma_aa[index]*gcab*t18400*t18411*t18391*t18427*t18399*4.0)-(ccab1* \
                   gcab*t18392*t18527*(1.0/2.0)-ccab2*t18400*t18412*t18423*t18399+ccab2*t18410*t18392*t18396*t18399-ccab1* \
                   t18409*t18392*t18396*t18399*(1.0/2.0)+ccab3*gcab*t18400*t18416*t18392*t18399*(3.0/2.0)-ccab3*gcab* \
                   t18400*t18411*t18427*t18396*t18399)*(-t18516+t18379-t18588+t18589+rho_a[index]*(t18619-t18586+t18340* \
                   t18343*(t18618+t18586-t18611*t18612*t18514*t18617-a1p*c*c0p*t18335*t18576*(2.0/3.0)))-t18362*(-t18554+ \
                   t18343*t18390*t18384*t18385*(t18554-(1/(t18533*t18533)*t18539*(b2f*c*t18528*(1.0/3.0)+b4f*t18324*t18545* \
                   (2.0/3.0)+b1f*c*t18528*t18546*(1.0/6.0)+b3f*c*t18365*t18528*(1.0/2.0)))/t18536+a1f*c*c0f*t18528*t18537* \
                   (2.0/3.0)-a1p*c*c0p*t18528*t18376*(2.0/3.0))+a1p*c*c0p*t18528*t18376*(2.0/3.0)-t18343*t18544*t18384* \
                   t18573*t18385+t18343*t18390*t18544*t18385*t18568*4.0+t18540*t18343*t18380*t18381*t18390*t18384*4.0+ \
                   Aa*t18343*t18390*t18555*t18565*t18567*(t18385*t18568*4.0-t18380*t18381*t18384*4.0)*2.0-Aa*t18343*t18555* \
                   t18573*t18565*t18575*t18567*2.0-(t18343*t18390*1/(t18561*t18561)*t18555*t18575*t18567*(b2a*c*t18528* \
                   (1.0/3.0)+b4a*t18324*t18545*(2.0/3.0)+b1a*c*t18528*t18546*(1.0/6.0)+b3a*c*t18365*t18528*(1.0/2.0)) \
                   )/t18564+Aa*a1a*c*t18343*t18390*t18528*t18555*t18565*t18575*(2.0/3.0))+t18343*t18390*t18544*t18384* \
                   t18385)+rho_a[index]*t18623*(t18619-t18586+t18340*t18343*(t18618-t18619+t18586-t18611*t18612*t18514* \
                   t18617))-rho_a[index]*t18590*(ccaa1*gcaa*t18391*t18591*(-8.0/3.0)-ccaa2*gamma_aa[index]*t18401*t18517* \
                   t18592*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t18401*t18517*t18594*8.0+ccaa2*t18401*t18430*t18603*t18517* \
                   t18596*(1.6E1/3.0)-ccaa1*gcaa*t18430*t18470*t18517*1/(t18519*t18519*t18519)*(1.6E1/3.0)+ccaa2*t18430* \
                   t18517*t18429*t18596*(gcaa*t18391*(1.6E1/3.0)+gamma_aa[index]*t18401*t18517*(3.2E1/3.0))+ccaa2*gamma_aa[index]* \
                   t18606*t18517*t18429*t18596*2.0-ccaa3*gcaa*t18430*t18470*t18517*t18593*2.4E1+ccaa3*gcaa*t18430*t18610* \
                   t18431*t18517*t18595*3.0-ccaa2*t18430*t18603*t18606*t18517*1/(t18526*t18526*t18526)*t18429*2.0+ccaa3* \
                   gamma_aa[index]*gcaa*t18430*t18431*t18517*t18595*(gcaa*t18391*8.0+gamma_aa[index]*t18401*t18517*3.2E1+ \
                   gcaa*t18430*t18470*t18517*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t18600*t18430*t18470*t18517*t18595*8.0- \
                   ccaa3*gamma_aa[index]*gcaa*t18600*t18430*t18610*t18431*1/(t18523*t18523*t18523)*t18517*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t21777 = 1/pow(rho_a[index],1.0/3.0);
                double t21778 = c*t21777;
                double t21779 = sqrt(t21778);
                double t21780 = pow(t21778,3.0/2.0);
                double t21781 = c*c;
                double t21782 = 1/pow(rho_a[index],2.0/3.0);
                double t21783 = 1/c0p;
                double t21784 = b1p*t21779;
                double t21785 = b3p*t21780;
                double t21786 = b4p*t21781*t21782;
                double t21787 = b2p*c*t21777;
                double t21788 = t21784+t21785+t21786+t21787;
                double t21789 = 1/t21788;
                double t21790 = t21783*t21789*(1.0/2.0);
                double t21791 = t21790+1.0;
                double t21792 = log(t21791);
                double t21793 = a1p*c*t21777;
                double t21794 = t21793+1.0;
                double t21795 = 1/pow(rho_a[index],8.0/3.0);
                double t21796 = gcaa*gcaa;
                double t21797 = 1/pow(rho_a[index],1.6E1/3.0);
                double t21798 = gamma_aa[index]*gamma_aa[index];
                double t21799 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t21800 = gamma_aa[index]*gcaa*t21795;
                double t21801 = t21800+1.0;
                double t21802 = gamma_aa[index]*gcaa*t21795*3.0;
                double t21803 = gamma_aa[index]*gcaa*t21796*t21798*t21799;
                double t21804 = t21796*t21797*t21798*3.0;
                double t21805 = t21802+t21803+t21804+1.0;
                double t21806 = gamma_aa[index]*gcaa*t21795*2.0;
                double t21807 = t21796*t21797*t21798;
                double t21808 = t21806+t21807+1.0;
                double t21809 = pow(2.0,1.0/3.0);
                double t21810 = t21809*2.0;
                double t21811 = t21810-2.0;
                double t21812 = two_13*2.0;
                double t21813 = t21812-2.0;
                double t21814 = 1/t21813;
                double t21815 = 1/c0f;
                double t21816 = b1f*t21779;
                double t21817 = b3f*t21780;
                double t21818 = b4f*t21781*t21782;
                double t21819 = b2f*c*t21777;
                double t21820 = t21816+t21817+t21818+t21819;
                double t21821 = 1/t21820;
                double t21822 = t21821*t21815*(1.0/2.0);
                double t21823 = t21822+1.0;
                double t21824 = log(t21823);
                double t21825 = a1f*c*t21777;
                double t21826 = t21825+1.0;
                double t21827 = c0f*t21824*t21826*2.0;
                double t21828 = c0p*t21792*t21794*2.0;
                double t21829 = 1/t21801;
                double t21830 = 1/t21808;
                double t21831 = 1/t21805;
                double t21832 = 1/pow(rho_a[index],1.9E1/3.0);
                double t21833 = 1/(t21801*t21801);
                double t21834 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t21835 = 1/pow(rho_a[index],1.1E1/3.0);
                double t21836 = 1/(t21805*t21805);
                double t21837 = 1/(t21808*t21808);
                double t21838 = gcaa*t21795*3.0;
                double t21839 = gamma_aa[index]*t21796*t21797*6.0;
                double t21840 = gcaa*t21796*t21798*t21799*3.0;
                double t21841 = t21840+t21838+t21839;
                double t21842 = gcaa*t21795*2.0;
                double t21843 = gamma_aa[index]*t21796*t21797*2.0;
                double t21844 = t21842+t21843;
                double t21845 = gamma_aa[index]*gcaa*t21835*(1.6E1/3.0);
                double t21846 = t21832*t21796*t21798*(1.6E1/3.0);
                double t21847 = t21845+t21846;
                double t21848 = gamma_aa[index]*gcaa*t21835*8.0;
                double t21849 = gamma_aa[index]*gcaa*t21834*t21796*t21798*8.0;
                double t21850 = t21832*t21796*t21798*1.6E1;
                double t21851 = t21850+t21848+t21849;
                double t21852 = 1/pow(rho_a[index],4.0/3.0);
                double t21853 = 1/pow(rho_a[index],5.0/3.0);
                double t21854 = 1/sqrt(t21778);
                double t21855 = 1/t21791;
                double t21856 = 1/(t21788*t21788);
                double t21857 = b4p*t21781*t21853*(2.0/3.0);
                double t21858 = b2p*c*t21852*(1.0/3.0);
                double t21859 = b1p*c*t21852*t21854*(1.0/6.0);
                double t21860 = b3p*c*t21852*t21779*(1.0/2.0);
                double t21861 = t21860+t21857+t21858+t21859;
                double t21862 = t21861*t21855*t21856*t21794;
                double t21863 = ccaa1*gcaa*t21829*t21795;
                double t21864 = ccaa2*gamma_aa[index]*t21830*t21796*t21797*2.0;
                double t21865 = ccaa3*gcaa*t21831*t21796*t21798*t21799*3.0;
                double t21866 = t21863+t21864+t21865-ccaa1*gamma_aa[index]*t21833*t21796*t21797-ccaa2*t21844*t21837* \
                   t21796*t21797*t21798-ccaa3*gamma_aa[index]*gcaa*t21841*t21836*t21796*t21798*t21799;
                double t21867 = pow(rho_a[index],5.0/3.0);
                double t21868 = C_k*t21867;
                double t21869 = tau_a[index]*1.0E20;
                double t21870 = 1/tau_a[index];
                double t21871 = -t21868+t21869;
                double t21872 = ( (t21871 > 0.0) ?  1.0 : 0.0 ) ;
                double t21873 = C_k*t21870*t21872*t21867;
                double t21874 = t21868-t21869;
                double t21875 = ( (t21874 > 0.0) ?  1.0 : 0.0 ) ;
                double t21876 = t21875*1.0E20;
                double t21877 = t21873+t21876-1.0;
                double t21878 = t21877*t21877;
                double t21879 = t21873+t21876+1.0;
                double t21880 = t21878*t21878;
                double t21881 = gx*gx;
                double t21882 = gamma_aa[index]*gx*t21795;
                double t21883 = t21882+1.0;
                double t21884 = gamma_aa[index]*gx*t21795*3.0;
                double t21885 = gamma_aa[index]*gx*t21881*t21798*t21799;
                double t21886 = t21881*t21797*t21798*3.0;
                double t21887 = t21884+t21885+t21886+1.0;
                double t21888 = gamma_aa[index]*gx*t21795*2.0;
                double t21889 = t21881*t21797*t21798;
                double t21890 = t21888+t21889+1.0;
                double t21891 = 1/t21883;
                double t21892 = 1/t21890;
                double t21893 = 1/t21887;
                double t21894 = 1/(t21883*t21883);
                double t21895 = gx*t21795*3.0;
                double t21896 = gamma_aa[index]*t21881*t21797*6.0;
                double t21897 = gx*t21881*t21798*t21799*3.0;
                double t21898 = t21895+t21896+t21897;
                double t21899 = 1/(t21887*t21887);
                double t21900 = gx*t21795*2.0;
                double t21901 = gamma_aa[index]*t21881*t21797*2.0;
                double t21902 = t21900+t21901;
                double t21903 = 1/(t21890*t21890);
                double t21904 = X-1.0;
                double t21905 = cxnl1*gx*t21891*t21795;
                double t21906 = cxnl2*gamma_aa[index]*t21881*t21892*t21797*2.0;
                double t21907 = cxnl3*gx*t21881*t21893*t21798*t21799*3.0;
                double t21908 = t21905+t21906+t21907-cxnl1*gamma_aa[index]*t21881*t21894*t21797-cxnl2*t21902*t21903* \
                   t21881*t21797*t21798-cxnl3*gamma_aa[index]*gx*t21881*t21798*t21799*t21898*t21899;
                double t21909 = 0.0 ;
                double t21910 = pow(rho_a[index],2.0/3.0);
                double t21911 = 1/t21879;
                double t21912 = C_k*t21910*t21909*(5.0E20/3.0);
                double t21913 = C_k*C_k;
                double t21914 = pow(rho_a[index],7.0/3.0);
                double t21915 = C_k*t21910*t21870*t21872*(5.0/3.0);
                double t21917 = t21913*t21914*t21870*t21909*(5.0/3.0);
                double t21916 = t21912+t21915-t21917;
                double t21918 = 1/(t21879*t21879*t21879);
                double t21919 = 1/(t21879*t21879*t21879*t21879*t21879);
                double t21920 = t21911*t21877;
                double t21921 = t21880*t21919*t21877;
                double t21922 = t21920+t21921-t21918*t21877*t21878*2.0;
                double t21923 = gamma_aa[index]*gx*t21835*(1.6E1/3.0);
                double t21924 = t21832*t21881*t21798*(1.6E1/3.0);
                double t21925 = t21923+t21924;
                double t21926 = gamma_aa[index]*gx*t21835*8.0;
                double t21927 = gamma_aa[index]*gx*t21834*t21881*t21798*8.0;
                double t21928 = t21832*t21881*t21798*1.6E1;
                double t21929 = t21926+t21927+t21928;
                double t21930 = 1/(t21883*t21883*t21883);
                double t21931 = gx*t21835*8.0;
                double t21932 = gamma_aa[index]*t21832*t21881*3.2E1;
                double t21933 = gx*t21834*t21881*t21798*2.4E1;
                double t21934 = t21931+t21932+t21933;
                double t21935 = gx*t21835*(1.6E1/3.0);
                double t21936 = gamma_aa[index]*t21832*t21881*(3.2E1/3.0);
                double t21937 = t21935+t21936;
                double t21938 = 1/(t21890*t21890*t21890);
                double t21939 = 1/(t21887*t21887*t21887);
                v_rho_a_gamma_aa_[index] = -t21866*(t21828+t21811*t21814*(t21827-c0p*t21792*t21794*2.0))+rho_a[index]* \
                   t21866*(-t21862+t21811*t21814*(t21862-(1/(t21820*t21820)*t21826*(b2f*c*t21852*(1.0/3.0)+b4f*t21781* \
                   t21853*(2.0/3.0)+b1f*c*t21852*t21854*(1.0/6.0)+b3f*c*t21852*t21779*(1.0/2.0)))/t21823+a1f*c*c0f*t21824* \
                   t21852*(2.0/3.0)-a1p*c*c0p*t21852*t21792*(2.0/3.0))+a1p*c*c0p*t21852*t21792*(2.0/3.0))-rho_a[index]* \
                   (t21828+t21811*t21814*(t21827-t21828))*(ccaa1*gcaa*t21835*t21829*(-8.0/3.0)-ccaa2*gamma_aa[index]* \
                   t21830*t21832*t21796*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t21832*t21833*t21796*8.0+ccaa2*t21832*t21844* \
                   t21837*t21796*t21798*(1.6E1/3.0)-ccaa1*gcaa*1/(t21801*t21801*t21801)*t21834*t21796*t21798*(1.6E1/3.0) \
                   +ccaa2*t21837*t21796*t21797*t21798*(gcaa*t21835*(1.6E1/3.0)+gamma_aa[index]*t21832*t21796*(3.2E1/3.0) \
                   )+ccaa2*gamma_aa[index]*t21837*t21847*t21796*t21797*2.0-ccaa3*gcaa*t21831*t21834*t21796*t21798*2.4E1+ \
                   ccaa3*gcaa*t21851*t21836*t21796*t21798*t21799*3.0-ccaa2*1/(t21808*t21808*t21808)*t21844*t21847*t21796* \
                   t21797*t21798*2.0+ccaa3*gamma_aa[index]*gcaa*t21836*t21796*t21798*t21799*(gcaa*t21835*8.0+gamma_aa[index]* \
                   t21832*t21796*3.2E1+gcaa*t21834*t21796*t21798*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t21841*t21834*t21836* \
                   t21796*t21798*8.0-ccaa3*gamma_aa[index]*gcaa*1/(t21805*t21805*t21805)*t21841*t21851*t21796*t21798* \
                   t21799*2.0)-c0*pow(rho_a[index],1.0/3.0)*t21904*(t21922*t21908+cx1*gx*t21891*t21795-cx1*gamma_aa[index]* \
                   t21881*t21894*t21797+cx2*gamma_aa[index]*t21881*t21892*t21797*2.0-cx2*t21902*t21903*t21881*t21797* \
                   t21798+cx3*gx*t21881*t21893*t21798*t21799*3.0-cx3*gamma_aa[index]*gx*t21881*t21798*t21799*t21898*t21899) \
                   *(4.0/3.0)-c0*pow(rho_a[index],4.0/3.0)*t21904*(t21908*(t21911*t21916-t21916*t21877*1/(t21879*t21879) \
                   +t21880*t21916*t21919*5.0-t21916*t21918*t21878*6.0-t21880*t21916*t21877*1/(t21879*t21879*t21879*t21879* \
                   t21879*t21879)*5.0+t21916*t21877*t21878*1/(t21879*t21879*t21879*t21879)*6.0)+t21922*(cxnl1*gx*t21835* \
                   t21891*(-8.0/3.0)-cxnl2*gamma_aa[index]*t21832*t21881*t21892*(3.2E1/3.0)+cxnl1*gamma_aa[index]*t21832* \
                   t21881*t21894*8.0+cxnl2*t21902*t21903*t21832*t21881*t21798*(1.6E1/3.0)+cxnl2*t21903*t21881*t21937* \
                   t21797*t21798+cxnl2*gamma_aa[index]*t21903*t21925*t21881*t21797*2.0-cxnl1*gx*t21930*t21834*t21881* \
                   t21798*(1.6E1/3.0)-cxnl3*gx*t21834*t21881*t21893*t21798*2.4E1+cxnl3*gx*t21881*t21929*t21798*t21799* \
                   t21899*3.0-cxnl2*t21902*t21925*t21881*t21938*t21797*t21798*2.0+cxnl3*gamma_aa[index]*gx*t21834*t21881* \
                   t21798*t21898*t21899*8.0+cxnl3*gamma_aa[index]*gx*t21934*t21881*t21798*t21799*t21899-cxnl3*gamma_aa[index]* \
                   gx*t21881*t21929*t21939*t21798*t21799*t21898*2.0)-cx1*gx*t21835*t21891*(8.0/3.0)+cx1*gamma_aa[index]* \
                   t21832*t21881*t21894*8.0-cx2*gamma_aa[index]*t21832*t21881*t21892*(3.2E1/3.0)+cx2*t21902*t21903*t21832* \
                   t21881*t21798*(1.6E1/3.0)+cx2*t21903*t21881*t21937*t21797*t21798+cx2*gamma_aa[index]*t21903*t21925* \
                   t21881*t21797*2.0-cx1*gx*t21930*t21834*t21881*t21798*(1.6E1/3.0)-cx3*gx*t21834*t21881*t21893*t21798* \
                   2.4E1+cx3*gx*t21881*t21929*t21798*t21799*t21899*3.0-cx2*t21902*t21925*t21881*t21938*t21797*t21798* \
                   2.0+cx3*gamma_aa[index]*gx*t21834*t21881*t21798*t21898*t21899*8.0+cx3*gamma_aa[index]*gx*t21934*t21881* \
                   t21798*t21799*t21899-cx3*gamma_aa[index]*gx*t21881*t21929*t21939*t21798*t21799*t21898*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t18626 = 1/pow(rho_a[index],1.0/3.0);
                double t18627 = c*t18626;
                double t18628 = sqrt(t18627);
                double t18629 = pow(t18627,3.0/2.0);
                double t18630 = c*c;
                double t18631 = 1/pow(rho_a[index],2.0/3.0);
                double t18632 = 1/c0p;
                double t18633 = b1p*t18628;
                double t18634 = b3p*t18629;
                double t18635 = b4p*t18630*t18631;
                double t18636 = b2p*c*t18626;
                double t18637 = t18633+t18634+t18635+t18636;
                double t18638 = 1/t18637;
                double t18639 = t18632*t18638*(1.0/2.0);
                double t18640 = t18639+1.0;
                double t18641 = log(t18640);
                double t18642 = a1p*c*t18626;
                double t18643 = t18642+1.0;
                double t18644 = pow(2.0,1.0/3.0);
                double t18645 = t18644*2.0;
                double t18646 = t18645-2.0;
                double t18647 = two_13*2.0;
                double t18648 = t18647-2.0;
                double t18649 = 1/t18648;
                double t18650 = 1/c0f;
                double t18651 = 1/pow(rho_b[index],1.0/3.0);
                double t18652 = c*t18651;
                double t18653 = sqrt(t18652);
                double t18654 = pow(t18652,3.0/2.0);
                double t18655 = 1/pow(rho_b[index],2.0/3.0);
                double t18656 = b1p*t18653;
                double t18657 = b3p*t18654;
                double t18658 = b4p*t18630*t18655;
                double t18659 = b2p*c*t18651;
                double t18660 = t18656+t18657+t18658+t18659;
                double t18661 = 1/t18660;
                double t18662 = t18632*t18661*(1.0/2.0);
                double t18663 = t18662+1.0;
                double t18664 = log(t18663);
                double t18665 = a1p*c*t18651;
                double t18666 = t18665+1.0;
                double t18667 = c0p*t18664*t18666*2.0;
                double t18668 = rho_a[index]+rho_b[index];
                double t18669 = 1/pow(t18668,1.0/3.0);
                double t18670 = c*t18669;
                double t18671 = sqrt(t18670);
                double t18672 = pow(t18670,3.0/2.0);
                double t18673 = 1/pow(t18668,2.0/3.0);
                double t18674 = b1p*t18671;
                double t18675 = b3p*t18672;
                double t18676 = b4p*t18630*t18673;
                double t18677 = b2p*c*t18669;
                double t18678 = t18674+t18675+t18676+t18677;
                double t18679 = 1/t18678;
                double t18680 = t18632*t18679*(1.0/2.0);
                double t18681 = t18680+1.0;
                double t18682 = log(t18681);
                double t18683 = a1p*c*t18669;
                double t18684 = t18683+1.0;
                double t18685 = c0p*t18682*t18684*2.0;
                double t18686 = rho_a[index]-rho_b[index];
                double t18687 = t18686*t18686;
                double t18688 = 1/t18668;
                double t18689 = t18686*t18688;
                double t18690 = 1/(t18668*t18668*t18668*t18668);
                double t18691 = t18687*t18687;
                double t18692 = t18689+1.0;
                double t18693 = pow(t18692,4.0/3.0);
                double t18694 = -t18689+1.0;
                double t18695 = pow(t18694,4.0/3.0);
                double t18696 = t18693+t18695-2.0;
                double t18697 = gcab*gcab;
                double t18698 = 1/pow(rho_a[index],1.1E1/3.0);
                double t18699 = 1/pow(rho_b[index],8.0/3.0);
                double t18700 = 1/pow(rho_a[index],8.0/3.0);
                double t18701 = gamma_aa[index]*t18700*(1.0/2.0);
                double t18702 = gamma_bb[index]*t18699*(1.0/2.0);
                double t18703 = t18701+t18702;
                double t18704 = t18703*t18703;
                double t18705 = t18704*t18697*3.0;
                double t18706 = gcab*t18703*t18704*t18697;
                double t18707 = gcab*t18703*3.0;
                double t18708 = t18705+t18706+t18707+1.0;
                double t18709 = 1/(t18708*t18708);
                double t18710 = gamma_aa[index]*gcab*t18698*(8.0/3.0);
                double t18711 = gamma_aa[index]*t18703*t18697*t18698*(8.0/3.0);
                double t18712 = t18710+t18711;
                double t18713 = t18704*t18697;
                double t18714 = gcab*t18703*2.0;
                double t18715 = t18713+t18714+1.0;
                double t18716 = gamma_aa[index]*gcab*t18698*4.0;
                double t18717 = gamma_aa[index]*gcab*t18704*t18697*t18698*4.0;
                double t18718 = gamma_aa[index]*t18703*t18697*t18698*8.0;
                double t18719 = t18716+t18717+t18718;
                double t18720 = gcab*t18699;
                double t18721 = t18703*t18697*t18699;
                double t18722 = t18720+t18721;
                double t18723 = 1/(t18715*t18715);
                double t18724 = gcab*t18703;
                double t18725 = t18724+1.0;
                double t18726 = gcab*t18699*(3.0/2.0);
                double t18727 = t18703*t18697*t18699*3.0;
                double t18728 = gcab*t18704*t18697*t18699*(3.0/2.0);
                double t18729 = t18726+t18727+t18728;
                double t18730 = c0p*t18641*t18643*2.0;
                double t18731 = 1/(t18725*t18725);
                double t18732 = 1/t18715;
                double t18733 = 1/t18708;
                double t18734 = 1/pow(t18668,4.0/3.0);
                double t18735 = b1f*t18671;
                double t18736 = b3f*t18672;
                double t18737 = b4f*t18630*t18673;
                double t18738 = b2f*c*t18669;
                double t18739 = t18735+t18736+t18737+t18738;
                double t18740 = 1/t18739;
                double t18741 = t18650*t18740*(1.0/2.0);
                double t18742 = t18741+1.0;
                double t18743 = log(t18742);
                double t18744 = a1f*c*t18669;
                double t18745 = t18744+1.0;
                double t18747 = c0f*t18743*t18745*2.0;
                double t18746 = -t18747+t18685;
                double t18748 = 1/(t18668*t18668);
                double t18776 = t18748*t18686;
                double t18749 = -t18776+t18688;
                double t18750 = t18747-t18685;
                double t18751 = 1/pow(t18668,5.0/3.0);
                double t18752 = 1/sqrt(t18670);
                double t18753 = 1/t18681;
                double t18754 = 1/(t18678*t18678);
                double t18755 = b4p*t18630*t18751*(2.0/3.0);
                double t18756 = b2p*c*t18734*(1.0/3.0);
                double t18757 = b1p*c*t18734*t18752*(1.0/6.0);
                double t18758 = b3p*c*t18671*t18734*(1.0/2.0);
                double t18759 = t18755+t18756+t18757+t18758;
                double t18760 = t18753*t18754*t18684*t18759;
                double t18761 = 1/d2fz0;
                double t18762 = 1/Aa;
                double t18763 = b1a*t18671;
                double t18764 = b3a*t18672;
                double t18765 = b4a*t18630*t18673;
                double t18766 = b2a*c*t18669;
                double t18767 = t18763+t18764+t18765+t18766;
                double t18768 = 1/t18767;
                double t18769 = t18762*t18768*(1.0/2.0);
                double t18770 = t18769+1.0;
                double t18771 = log(t18770);
                double t18772 = a1a*c*t18669;
                double t18773 = t18772+1.0;
                double t18774 = 1/(t18668*t18668*t18668*t18668*t18668);
                double t18775 = pow(t18692,1.0/3.0);
                double t18777 = t18775*t18749*(4.0/3.0);
                double t18778 = pow(t18694,1.0/3.0);
                double t18779 = t18777-t18749*t18778*(4.0/3.0);
                double t18780 = t18690*t18691;
                double t18781 = t18780-1.0;
                double t18782 = a1f*c*t18626;
                double t18783 = t18782+1.0;
                double t18784 = b1f*t18628;
                double t18785 = b3f*t18629;
                double t18786 = b4f*t18630*t18631;
                double t18787 = b2f*c*t18626;
                double t18788 = t18784+t18785+t18786+t18787;
                double t18789 = 1/t18788;
                double t18790 = t18650*t18789*(1.0/2.0);
                double t18791 = t18790+1.0;
                double t18792 = 1/pow(rho_a[index],4.0/3.0);
                double t18793 = 1/pow(rho_a[index],5.0/3.0);
                double t18794 = 1/sqrt(t18627);
                double t18795 = log(t18791);
                double t18796 = 1/t18640;
                double t18797 = 1/(t18637*t18637);
                double t18798 = b4p*t18630*t18793*(2.0/3.0);
                double t18799 = b2p*c*t18792*(1.0/3.0);
                double t18800 = b1p*c*t18792*t18794*(1.0/6.0);
                double t18801 = b3p*c*t18628*t18792*(1.0/2.0);
                double t18802 = t18800+t18801+t18798+t18799;
                double t18803 = t18802*t18643*t18796*t18797;
                double t18804 = Aa*t18761*t18771*t18781*t18773*t18649*t18696*2.0;
                double t18805 = t18730-c0f*t18783*t18795*2.0;
                v_rho_a_gamma_bb_[index] = -((ccab1*gcab*t18699*(1.0/2.0))/t18725-ccab2*t18704*t18722*t18723*t18697- \
                   ccab1*t18703*t18731*t18697*t18699*(1.0/2.0)+ccab2*t18703*t18732*t18697*t18699+ccab3*gcab*t18704*t18733* \
                   t18697*t18699*(3.0/2.0)-ccab3*gcab*t18703*t18704*t18709*t18729*t18697)*(-t18730+t18804+t18685+rho_a[index]* \
                   (-t18803+t18646*t18649*(t18803-(t18783*1/(t18788*t18788)*(b2f*c*t18792*(1.0/3.0)+b4f*t18630*t18793* \
                   (2.0/3.0)+b1f*c*t18792*t18794*(1.0/6.0)+b3f*c*t18628*t18792*(1.0/2.0)))/t18791+a1f*c*c0f*t18792*t18795* \
                   (2.0/3.0)-a1p*c*c0p*t18641*t18792*(2.0/3.0))+a1p*c*c0p*t18641*t18792*(2.0/3.0))-t18668*(-t18760+t18690* \
                   t18691*t18649*t18696*(t18760-(t18745*1/(t18739*t18739)*(b2f*c*t18734*(1.0/3.0)+b4f*t18630*t18751*(2.0/ \
                   3.0)+b1f*c*t18734*t18752*(1.0/6.0)+b3f*c*t18671*t18734*(1.0/2.0)))/t18742+a1f*c*c0f*t18734*t18743* \
                   (2.0/3.0)-a1p*c*c0p*t18734*t18682*(2.0/3.0))+a1p*c*c0p*t18734*t18682*(2.0/3.0)-t18750*t18690*t18691* \
                   t18649*t18779+t18750*t18691*t18774*t18649*t18696*4.0+t18690*t18746*t18649*t18686*t18687*t18696*4.0+ \
                   Aa*t18761*t18771*t18773*t18649*t18696*(t18691*t18774*4.0-t18690*t18686*t18687*4.0)*2.0-Aa*t18761*t18771* \
                   t18781*t18773*t18649*t18779*2.0-(t18761*t18781*t18773*t18649*1/(t18767*t18767)*t18696*(b2a*c*t18734* \
                   (1.0/3.0)+b4a*t18630*t18751*(2.0/3.0)+b1a*c*t18734*t18752*(1.0/6.0)+b3a*c*t18671*t18734*(1.0/2.0)) \
                   )/t18770+Aa*a1a*c*t18734*t18761*t18771*t18781*t18649*t18696*(2.0/3.0))+t18805*t18646*t18649+t18750* \
                   t18690*t18691*t18649*t18696)+(rho_a[index]*(t18730-t18805*t18646*t18649)+rho_b[index]*(t18667-t18646* \
                   t18649*(t18667-c0f*log((t18650*(1.0/2.0))/(b1f*t18653+b3f*t18654+b2f*c*t18651+b4f*t18630*t18655)+1.0) \
                   *(a1f*c*t18651+1.0)*2.0))-t18668*(t18804+t18685-t18690*t18691*t18746*t18649*t18696))*(ccab2*t18703* \
                   t18712*t18723*t18697*t18699-ccab2*t18712*t18704*t18722*1/(t18715*t18715*t18715)*t18697*2.0+ccab1*gamma_aa[index]* \
                   t18731*t18697*t18698*t18699*(4.0/3.0)-ccab2*gamma_aa[index]*t18732*t18697*t18698*t18699*(4.0/3.0)+ \
                   ccab2*gamma_aa[index]*t18703*t18722*t18723*t18697*t18698*(8.0/3.0)+ccab3*gcab*t18704*t18709*t18719* \
                   t18697*t18699*(3.0/2.0)+ccab3*gcab*t18703*t18704*t18709*t18697*(gamma_aa[index]*t18697*t18698*t18699* \
                   4.0+gamma_aa[index]*gcab*t18703*t18697*t18698*t18699*4.0)+ccab2*gamma_aa[index]*t18704*t18723*(t18697* \
                   t18697)*t18698*t18699*(4.0/3.0)-ccab1*gamma_aa[index]*gcab*t18703*1/(t18725*t18725*t18725)*t18697* \
                   t18698*t18699*(4.0/3.0)-ccab3*gcab*t18703*t18704*1/(t18708*t18708*t18708)*t18719*t18729*t18697*2.0+ \
                   ccab3*gamma_aa[index]*gcab*t18704*t18709*t18729*t18697*t18698*4.0-ccab3*gamma_aa[index]*gcab*t18703* \
                   t18733*t18697*t18698*t18699*4.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t18807 = 1/pow(rho_a[index],1.0/3.0);
                double t18808 = c*t18807;
                double t18809 = sqrt(t18808);
                double t18810 = pow(t18808,3.0/2.0);
                double t18811 = c*c;
                double t18812 = 1/pow(rho_a[index],2.0/3.0);
                double t18813 = 1/c0p;
                double t18814 = b1p*t18809;
                double t18815 = b3p*t18810;
                double t18816 = b4p*t18811*t18812;
                double t18817 = b2p*c*t18807;
                double t18818 = t18814+t18815+t18816+t18817;
                double t18819 = 1/t18818;
                double t18820 = t18813*t18819*(1.0/2.0);
                double t18821 = t18820+1.0;
                double t18822 = log(t18821);
                double t18823 = a1p*c*t18807;
                double t18824 = t18823+1.0;
                double t18825 = pow(2.0,1.0/3.0);
                double t18826 = t18825*2.0;
                double t18827 = t18826-2.0;
                double t18828 = two_13*2.0;
                double t18829 = t18828-2.0;
                double t18830 = 1/t18829;
                double t18831 = 1/c0f;
                double t18832 = 1/pow(rho_b[index],1.0/3.0);
                double t18833 = c*t18832;
                double t18834 = sqrt(t18833);
                double t18835 = pow(t18833,3.0/2.0);
                double t18836 = 1/pow(rho_b[index],2.0/3.0);
                double t18837 = b1p*t18834;
                double t18838 = b3p*t18835;
                double t18839 = b4p*t18811*t18836;
                double t18840 = b2p*c*t18832;
                double t18841 = t18840+t18837+t18838+t18839;
                double t18842 = 1/t18841;
                double t18843 = t18813*t18842*(1.0/2.0);
                double t18844 = t18843+1.0;
                double t18845 = log(t18844);
                double t18846 = a1p*c*t18832;
                double t18847 = t18846+1.0;
                double t18848 = c0p*t18845*t18847*2.0;
                double t18849 = rho_a[index]+rho_b[index];
                double t18850 = 1/pow(t18849,1.0/3.0);
                double t18851 = c*t18850;
                double t18852 = sqrt(t18851);
                double t18853 = pow(t18851,3.0/2.0);
                double t18854 = 1/pow(t18849,2.0/3.0);
                double t18855 = b1p*t18852;
                double t18856 = b3p*t18853;
                double t18857 = b4p*t18811*t18854;
                double t18858 = b2p*c*t18850;
                double t18859 = t18855+t18856+t18857+t18858;
                double t18860 = 1/t18859;
                double t18861 = t18813*t18860*(1.0/2.0);
                double t18862 = t18861+1.0;
                double t18863 = log(t18862);
                double t18864 = a1p*c*t18850;
                double t18865 = t18864+1.0;
                double t18866 = c0p*t18863*t18865*2.0;
                double t18867 = rho_a[index]-rho_b[index];
                double t18868 = t18867*t18867;
                double t18869 = 1/t18849;
                double t18870 = t18867*t18869;
                double t18871 = 1/(t18849*t18849*t18849*t18849);
                double t18872 = t18868*t18868;
                double t18873 = t18870+1.0;
                double t18874 = pow(t18873,4.0/3.0);
                double t18875 = -t18870+1.0;
                double t18876 = pow(t18875,4.0/3.0);
                double t18877 = t18874+t18876-2.0;
                double t18878 = gcab*gcab;
                double t18879 = 1/pow(rho_a[index],8.0/3.0);
                double t18880 = 1/pow(rho_b[index],1.1E1/3.0);
                double t18881 = gamma_aa[index]*t18879*(1.0/2.0);
                double t18882 = 1/pow(rho_b[index],8.0/3.0);
                double t18883 = gamma_bb[index]*t18882*(1.0/2.0);
                double t18884 = t18881+t18883;
                double t18885 = t18884*t18884;
                double t18886 = t18885*t18878*3.0;
                double t18887 = gcab*t18884*t18885*t18878;
                double t18888 = gcab*t18884*3.0;
                double t18889 = t18886+t18887+t18888+1.0;
                double t18890 = 1/(t18889*t18889);
                double t18891 = gamma_bb[index]*gcab*t18880*(8.0/3.0);
                double t18892 = gamma_bb[index]*t18880*t18884*t18878*(8.0/3.0);
                double t18893 = t18891+t18892;
                double t18894 = t18885*t18878;
                double t18895 = gcab*t18884*2.0;
                double t18896 = t18894+t18895+1.0;
                double t18897 = gamma_bb[index]*gcab*t18880*4.0;
                double t18898 = gamma_bb[index]*gcab*t18880*t18885*t18878*4.0;
                double t18899 = gamma_bb[index]*t18880*t18884*t18878*8.0;
                double t18900 = t18897+t18898+t18899;
                double t18901 = gcab*t18879;
                double t18902 = t18884*t18878*t18879;
                double t18903 = t18901+t18902;
                double t18904 = 1/(t18896*t18896);
                double t18905 = gcab*t18884;
                double t18906 = t18905+1.0;
                double t18907 = gcab*t18879*(3.0/2.0);
                double t18908 = t18884*t18878*t18879*3.0;
                double t18909 = gcab*t18885*t18878*t18879*(3.0/2.0);
                double t18910 = t18907+t18908+t18909;
                double t18911 = c0p*t18822*t18824*2.0;
                double t18912 = 1/(t18906*t18906);
                double t18913 = 1/t18896;
                double t18914 = 1/t18889;
                double t18915 = 1/pow(t18849,4.0/3.0);
                double t18916 = b1f*t18852;
                double t18917 = b3f*t18853;
                double t18918 = b4f*t18811*t18854;
                double t18919 = b2f*c*t18850;
                double t18920 = t18916+t18917+t18918+t18919;
                double t18921 = 1/t18920;
                double t18922 = t18831*t18921*(1.0/2.0);
                double t18923 = t18922+1.0;
                double t18924 = log(t18923);
                double t18925 = a1f*c*t18850;
                double t18926 = t18925+1.0;
                double t18928 = c0f*t18924*t18926*2.0;
                double t18927 = -t18928+t18866;
                double t18929 = 1/(t18849*t18849);
                double t18930 = t18929*t18867;
                double t18931 = t18930+t18869;
                double t18932 = t18928-t18866;
                double t18933 = 1/pow(t18849,5.0/3.0);
                double t18934 = 1/sqrt(t18851);
                double t18935 = 1/t18862;
                double t18936 = 1/(t18859*t18859);
                double t18937 = b4p*t18811*t18933*(2.0/3.0);
                double t18938 = b2p*c*t18915*(1.0/3.0);
                double t18939 = b1p*c*t18915*t18934*(1.0/6.0);
                double t18940 = b3p*c*t18852*t18915*(1.0/2.0);
                double t18941 = t18940+t18937+t18938+t18939;
                double t18942 = 1/d2fz0;
                double t18943 = 1/Aa;
                double t18944 = b1a*t18852;
                double t18945 = b3a*t18853;
                double t18946 = b4a*t18811*t18854;
                double t18947 = b2a*c*t18850;
                double t18948 = t18944+t18945+t18946+t18947;
                double t18949 = 1/t18948;
                double t18950 = t18943*t18949*(1.0/2.0);
                double t18951 = t18950+1.0;
                double t18952 = log(t18951);
                double t18953 = a1a*c*t18850;
                double t18954 = t18953+1.0;
                double t18955 = 1/(t18849*t18849*t18849*t18849*t18849);
                double t18956 = pow(t18873,1.0/3.0);
                double t18957 = t18931*t18956*(4.0/3.0);
                double t18958 = pow(t18875,1.0/3.0);
                double t18959 = t18957-t18931*t18958*(4.0/3.0);
                double t18960 = t18871*t18872;
                double t18961 = t18960-1.0;
                double t18962 = a1f*c*t18832;
                double t18963 = t18962+1.0;
                double t18964 = b1f*t18834;
                double t18965 = b3f*t18835;
                double t18966 = b4f*t18811*t18836;
                double t18967 = b2f*c*t18832;
                double t18968 = t18964+t18965+t18966+t18967;
                double t18969 = 1/t18968;
                double t18970 = t18831*t18969*(1.0/2.0);
                double t18971 = t18970+1.0;
                double t18972 = 1/pow(rho_b[index],4.0/3.0);
                double t18973 = 1/pow(rho_b[index],5.0/3.0);
                double t18974 = 1/sqrt(t18833);
                double t18975 = log(t18971);
                double t18976 = 1/t18844;
                double t18977 = 1/(t18841*t18841);
                double t18978 = b4p*t18811*t18973*(2.0/3.0);
                double t18979 = b2p*c*t18972*(1.0/3.0);
                double t18980 = b1p*c*t18972*t18974*(1.0/6.0);
                double t18981 = b3p*c*t18834*t18972*(1.0/2.0);
                double t18982 = t18980+t18981+t18978+t18979;
                double t18983 = t18847*t18982*t18976*t18977;
                double t18984 = t18848-c0f*t18963*t18975*2.0;
                double t18985 = Aa*t18830*t18942*t18952*t18961*t18954*t18877*2.0;
                double t18986 = a1p*c*c0p*t18915*t18863*(2.0/3.0);
                v_rho_b_gamma_aa_[index] = -((ccab1*gcab*t18879*(1.0/2.0))/t18906-ccab2*t18903*t18904*t18885*t18878- \
                   ccab1*t18912*t18884*t18878*t18879*(1.0/2.0)+ccab2*t18913*t18884*t18878*t18879+ccab3*gcab*t18914*t18885* \
                   t18878*t18879*(3.0/2.0)-ccab3*gcab*t18910*t18890*t18884*t18885*t18878)*(-t18848+t18866+t18985+rho_b[index]* \
                   (-t18983+t18830*t18827*(t18983-(t18963*1/(t18968*t18968)*(b2f*c*t18972*(1.0/3.0)+b4f*t18811*t18973* \
                   (2.0/3.0)+b1f*c*t18972*t18974*(1.0/6.0)+b3f*c*t18834*t18972*(1.0/2.0)))/t18971+a1f*c*c0f*t18972*t18975* \
                   (2.0/3.0)-a1p*c*c0p*t18845*t18972*(2.0/3.0))+a1p*c*c0p*t18845*t18972*(2.0/3.0))-t18849*(t18986-t18941* \
                   t18935*t18936*t18865+t18830*t18932*t18871*t18872*t18959+t18830*t18932*t18872*t18955*t18877*4.0-t18830* \
                   t18871*t18872*t18877*(t18986-t18941*t18935*t18936*t18865+(1/(t18920*t18920)*t18926*(b2f*c*t18915*(1.0/ \
                   3.0)+b4f*t18811*t18933*(2.0/3.0)+b1f*c*t18915*t18934*(1.0/6.0)+b3f*c*t18852*t18915*(1.0/2.0)))/t18923- \
                   a1f*c*c0f*t18915*t18924*(2.0/3.0))-t18830*t18871*t18927*t18867*t18868*t18877*4.0+Aa*t18830*t18942* \
                   t18952*t18954*t18877*(t18872*t18955*4.0+t18871*t18867*t18868*4.0)*2.0+Aa*t18830*t18942*t18952*t18961* \
                   t18954*t18959*2.0-(t18830*t18942*t18961*t18954*1/(t18948*t18948)*t18877*(b2a*c*t18915*(1.0/3.0)+b4a* \
                   t18811*t18933*(2.0/3.0)+b1a*c*t18915*t18934*(1.0/6.0)+b3a*c*t18852*t18915*(1.0/2.0)))/t18951+Aa*a1a* \
                   c*t18830*t18915*t18942*t18952*t18961*t18877*(2.0/3.0))+t18830*t18827*t18984+t18830*t18932*t18871*t18872* \
                   t18877)+(rho_b[index]*(t18848-t18830*t18827*t18984)+rho_a[index]*(t18911-t18830*t18827*(t18911-c0f* \
                   log((t18831*(1.0/2.0))/(b1f*t18809+b3f*t18810+b2f*c*t18807+b4f*t18811*t18812)+1.0)*(a1f*c*t18807+1.0) \
                   *2.0))-t18849*(t18866+t18985-t18830*t18871*t18872*t18927*t18877))*(ccab2*t18904*t18884*t18893*t18878* \
                   t18879-ccab2*t18903*t18893*t18885*t18878*1/(t18896*t18896*t18896)*2.0+ccab1*gamma_bb[index]*t18912* \
                   t18880*t18878*t18879*(4.0/3.0)-ccab2*gamma_bb[index]*t18913*t18880*t18878*t18879*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t18903*t18904*t18880*t18884*t18878*(8.0/3.0)+ccab3*gcab*t18900*t18890*t18885*t18878*t18879*(3.0/2.0) \
                   +ccab3*gcab*t18890*t18884*t18885*t18878*(gamma_bb[index]*t18880*t18878*t18879*4.0+gamma_bb[index]* \
                   gcab*t18880*t18884*t18878*t18879*4.0)+ccab2*gamma_bb[index]*t18904*t18880*t18885*(t18878*t18878)*t18879* \
                   (4.0/3.0)-ccab1*gamma_bb[index]*gcab*1/(t18906*t18906*t18906)*t18880*t18884*t18878*t18879*(4.0/3.0) \
                   -ccab3*gcab*t18900*t18910*t18884*t18885*t18878*1/(t18889*t18889*t18889)*2.0+ccab3*gamma_bb[index]* \
                   gcab*t18910*t18880*t18890*t18885*t18878*4.0-ccab3*gamma_bb[index]*gcab*t18914*t18880*t18884*t18878* \
                   t18879*4.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t18989 = 1/pow(rho_a[index],1.0/3.0);
                double t18990 = c*t18989;
                double t18991 = sqrt(t18990);
                double t18992 = pow(t18990,3.0/2.0);
                double t18993 = c*c;
                double t18994 = 1/pow(rho_a[index],2.0/3.0);
                double t18995 = 1/c0p;
                double t18996 = b1p*t18991;
                double t18997 = b3p*t18992;
                double t18998 = b4p*t18993*t18994;
                double t18999 = b2p*c*t18989;
                double t19000 = t18996+t18997+t18998+t18999;
                double t19001 = 1/t19000;
                double t19002 = t18995*t19001*(1.0/2.0);
                double t19003 = t19002+1.0;
                double t19004 = log(t19003);
                double t19005 = a1p*c*t18989;
                double t19006 = t19005+1.0;
                double t19007 = pow(2.0,1.0/3.0);
                double t19008 = t19007*2.0;
                double t19009 = t19008-2.0;
                double t19010 = two_13*2.0;
                double t19011 = t19010-2.0;
                double t19012 = 1/t19011;
                double t19013 = 1/c0f;
                double t19014 = 1/pow(rho_b[index],1.0/3.0);
                double t19015 = c*t19014;
                double t19016 = sqrt(t19015);
                double t19017 = pow(t19015,3.0/2.0);
                double t19018 = 1/pow(rho_b[index],2.0/3.0);
                double t19019 = b1p*t19016;
                double t19020 = b3p*t19017;
                double t19021 = b4p*t18993*t19018;
                double t19022 = b2p*c*t19014;
                double t19023 = t19020+t19021+t19022+t19019;
                double t19024 = 1/t19023;
                double t19025 = t18995*t19024*(1.0/2.0);
                double t19026 = t19025+1.0;
                double t19027 = log(t19026);
                double t19028 = a1p*c*t19014;
                double t19029 = t19028+1.0;
                double t19030 = c0p*t19027*t19029*2.0;
                double t19031 = rho_a[index]+rho_b[index];
                double t19032 = 1/pow(t19031,1.0/3.0);
                double t19033 = c*t19032;
                double t19034 = sqrt(t19033);
                double t19035 = pow(t19033,3.0/2.0);
                double t19036 = 1/pow(t19031,2.0/3.0);
                double t19037 = b1p*t19034;
                double t19038 = b3p*t19035;
                double t19039 = b4p*t18993*t19036;
                double t19040 = b2p*c*t19032;
                double t19041 = t19040+t19037+t19038+t19039;
                double t19042 = 1/t19041;
                double t19043 = t18995*t19042*(1.0/2.0);
                double t19044 = t19043+1.0;
                double t19045 = log(t19044);
                double t19046 = a1p*c*t19032;
                double t19047 = t19046+1.0;
                double t19048 = c0p*t19045*t19047*2.0;
                double t19049 = rho_a[index]-rho_b[index];
                double t19050 = t19049*t19049;
                double t19051 = 1/t19031;
                double t19052 = t19051*t19049;
                double t19053 = 1/(t19031*t19031*t19031*t19031);
                double t19054 = t19050*t19050;
                double t19055 = t19052+1.0;
                double t19056 = pow(t19055,4.0/3.0);
                double t19057 = -t19052+1.0;
                double t19058 = pow(t19057,4.0/3.0);
                double t19059 = t19056+t19058-2.0;
                double t19060 = 1/pow(rho_b[index],1.1E1/3.0);
                double t19061 = 1/pow(rho_a[index],8.0/3.0);
                double t19062 = gamma_aa[index]*t19061*(1.0/2.0);
                double t19063 = 1/pow(rho_b[index],8.0/3.0);
                double t19064 = gamma_bb[index]*t19063*(1.0/2.0);
                double t19065 = t19062+t19064;
                double t19066 = gcab*t19065;
                double t19067 = t19066+1.0;
                double t19068 = gcab*gcab;
                double t19069 = t19065*t19065;
                double t19070 = 1/pow(rho_b[index],1.9E1/3.0);
                double t19071 = t19068*t19069;
                double t19072 = gcab*t19065*2.0;
                double t19073 = t19071+t19072+1.0;
                double t19074 = t19068*t19069*3.0;
                double t19075 = gcab*t19065*t19068*t19069;
                double t19076 = gcab*t19065*3.0;
                double t19077 = t19074+t19075+t19076+1.0;
                double t19078 = 1/(t19067*t19067);
                double t19079 = 1/t19073;
                double t19080 = 1/(t19077*t19077);
                double t19081 = 1/(t19073*t19073);
                double t19082 = gamma_bb[index]*gcab*t19060*(8.0/3.0);
                double t19083 = gamma_bb[index]*t19060*t19065*t19068*(8.0/3.0);
                double t19084 = t19082+t19083;
                double t19085 = 1/t19077;
                double t19086 = gamma_bb[index]*gcab*t19060*4.0;
                double t19087 = gamma_bb[index]*gcab*t19060*t19068*t19069*4.0;
                double t19088 = gamma_bb[index]*t19060*t19065*t19068*8.0;
                double t19089 = t19086+t19087+t19088;
                double t19090 = gcab*t19063;
                double t19091 = t19063*t19065*t19068;
                double t19092 = t19090+t19091;
                double t19093 = gcab*t19063*(3.0/2.0);
                double t19094 = t19063*t19065*t19068*3.0;
                double t19095 = gcab*t19063*t19068*t19069*(3.0/2.0);
                double t19096 = t19093+t19094+t19095;
                double t19097 = gx*gx;
                double t19098 = 1/pow(rho_b[index],1.6E1/3.0);
                double t19099 = gamma_bb[index]*gamma_bb[index];
                double t19100 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t19101 = gamma_bb[index]*gx*t19063;
                double t19102 = t19101+1.0;
                double t19103 = gamma_bb[index]*gx*t19063*3.0;
                double t19104 = gamma_bb[index]*gx*t19100*t19097*t19099;
                double t19105 = t19097*t19098*t19099*3.0;
                double t19106 = t19103+t19104+t19105+1.0;
                double t19107 = gamma_bb[index]*gx*t19063*2.0;
                double t19108 = t19097*t19098*t19099;
                double t19109 = t19107+t19108+1.0;
                double t19110 = pow(rho_b[index],5.0/3.0);
                double t19111 = pow(rho_b[index],2.0/3.0);
                double t19112 = 1/tau_b[index];
                double t19113 = tau_b[index]*1.0E20;
                double t19116 = C_k*t19110;
                double t19114 = t19113-t19116;
                double t19115 = tau_a[index]*1.0E20;
                double t19117 = ( (t19114 > 0.0) ?  1.0 : 0.0 ) ;
                double t19118 = C_k*C_k;
                double t19119 = pow(rho_b[index],7.0/3.0);
                double t19120 = 0.0 ;
                double t19121 = C_k*t19111*t19112*t19117*(5.0/3.0);
                double t19122 = -t19115+t19116;
                double t19123 = ( (t19122 > 0.0) ?  1.0 : 0.0 ) ;
                double t19124 = t19123*1.0E20;
                double t19125 = C_k*t19110*t19112*t19117;
                double t19126 = t19124+t19125+1.0;
                double t19127 = t19115-t19116;
                double t19128 = 0.0 ;
                double t19129 = C_k*t19111*t19128*(5.0E20/3.0);
                double t19132 = t19120*t19112*t19118*t19119*(5.0/3.0);
                double t19130 = t19121-t19132+t19129;
                double t19131 = t19124+t19125-1.0;
                double t19133 = t19131*t19131;
                double t19134 = t19133*t19133;
                double t19135 = 1/t19126;
                double t19136 = 1/(t19126*t19126*t19126);
                double t19137 = 1/(t19126*t19126*t19126*t19126*t19126);
                double t19138 = 1/t19102;
                double t19139 = 1/t19109;
                double t19140 = 1/t19106;
                double t19141 = 1/(t19102*t19102);
                double t19142 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t19143 = 1/(t19106*t19106);
                double t19144 = 1/(t19109*t19109);
                double t19145 = gx*t19063*3.0;
                double t19146 = gamma_bb[index]*t19097*t19098*6.0;
                double t19147 = gx*t19100*t19097*t19099*3.0;
                double t19148 = t19145+t19146+t19147;
                double t19149 = gx*t19063*2.0;
                double t19150 = gamma_bb[index]*t19097*t19098*2.0;
                double t19151 = t19150+t19149;
                double t19152 = gamma_bb[index]*gx*t19060*(1.6E1/3.0);
                double t19153 = t19070*t19097*t19099*(1.6E1/3.0);
                double t19154 = t19152+t19153;
                double t19155 = gamma_bb[index]*gx*t19060*8.0;
                double t19156 = gamma_bb[index]*gx*t19142*t19097*t19099*8.0;
                double t19157 = t19070*t19097*t19099*1.6E1;
                double t19158 = t19155+t19156+t19157;
                double t19159 = 1/(t19102*t19102*t19102);
                double t19160 = gx*t19060*8.0;
                double t19161 = gamma_bb[index]*t19070*t19097*3.2E1;
                double t19162 = gx*t19142*t19097*t19099*2.4E1;
                double t19163 = t19160+t19161+t19162;
                double t19164 = gx*t19060*(1.6E1/3.0);
                double t19165 = gamma_bb[index]*t19070*t19097*(3.2E1/3.0);
                double t19166 = t19164+t19165;
                double t19167 = 1/(t19109*t19109*t19109);
                double t19168 = 1/(t19106*t19106*t19106);
                double t19169 = t19131*t19135;
                double t19170 = t19131*t19134*t19137;
                double t19171 = t19170+t19169-t19131*t19133*t19136*2.0;
                double t19172 = cxnl1*gx*t19063*t19138;
                double t19173 = cxnl2*gamma_bb[index]*t19139*t19097*t19098*2.0;
                double t19174 = cxnl3*gx*t19100*t19140*t19097*t19099*3.0;
                double t19175 = t19172+t19173+t19174-cxnl1*gamma_bb[index]*t19141*t19097*t19098-cxnl2*t19151*t19144* \
                   t19097*t19098*t19099-cxnl3*gamma_bb[index]*gx*t19100*t19143*t19148*t19097*t19099;
                double t19176 = b1f*t19016;
                double t19177 = b3f*t19017;
                double t19178 = b4f*t18993*t19018;
                double t19179 = b2f*c*t19014;
                double t19180 = t19176+t19177+t19178+t19179;
                double t19181 = 1/t19180;
                double t19182 = t19013*t19181*(1.0/2.0);
                double t19183 = t19182+1.0;
                double t19184 = log(t19183);
                double t19185 = a1f*c*t19014;
                double t19186 = t19185+1.0;
                double t19258 = c0f*t19184*t19186*2.0;
                double t19187 = t19030-t19258;
                double t19259 = t19012*t19009*t19187;
                double t19188 = t19030-t19259;
                double t19189 = gcaa*gcaa;
                double t19190 = gamma_bb[index]*gcaa*t19063;
                double t19191 = t19190+1.0;
                double t19192 = gamma_bb[index]*gcaa*t19063*3.0;
                double t19193 = gamma_bb[index]*gcaa*t19100*t19099*t19189;
                double t19194 = t19098*t19099*t19189*3.0;
                double t19195 = t19192+t19193+t19194+1.0;
                double t19196 = gamma_bb[index]*gcaa*t19063*2.0;
                double t19197 = t19098*t19099*t19189;
                double t19198 = t19196+t19197+1.0;
                double t19199 = 1/t19067;
                double t19200 = 1/pow(t19031,4.0/3.0);
                double t19201 = b1f*t19034;
                double t19202 = b3f*t19035;
                double t19203 = b4f*t18993*t19036;
                double t19204 = b2f*c*t19032;
                double t19205 = t19201+t19202+t19203+t19204;
                double t19206 = 1/t19205;
                double t19207 = t19013*t19206*(1.0/2.0);
                double t19208 = t19207+1.0;
                double t19209 = log(t19208);
                double t19210 = a1f*c*t19032;
                double t19211 = t19210+1.0;
                double t19213 = c0f*t19211*t19209*2.0;
                double t19212 = -t19213+t19048;
                double t19214 = 1/(t19031*t19031);
                double t19215 = t19214*t19049;
                double t19216 = t19051+t19215;
                double t19217 = t19213-t19048;
                double t19218 = 1/pow(t19031,5.0/3.0);
                double t19219 = 1/sqrt(t19033);
                double t19220 = 1/t19044;
                double t19221 = 1/(t19041*t19041);
                double t19222 = b4p*t18993*t19218*(2.0/3.0);
                double t19223 = b2p*c*t19200*(1.0/3.0);
                double t19224 = b1p*c*t19200*t19219*(1.0/6.0);
                double t19225 = b3p*c*t19200*t19034*(1.0/2.0);
                double t19226 = t19222+t19223+t19224+t19225;
                double t19227 = 1/d2fz0;
                double t19228 = 1/Aa;
                double t19229 = b1a*t19034;
                double t19230 = b3a*t19035;
                double t19231 = b4a*t18993*t19036;
                double t19232 = b2a*c*t19032;
                double t19233 = t19230+t19231+t19232+t19229;
                double t19234 = 1/t19233;
                double t19235 = t19234*t19228*(1.0/2.0);
                double t19236 = t19235+1.0;
                double t19237 = log(t19236);
                double t19238 = a1a*c*t19032;
                double t19239 = t19238+1.0;
                double t19240 = 1/(t19031*t19031*t19031*t19031*t19031);
                double t19241 = pow(t19055,1.0/3.0);
                double t19242 = t19241*t19216*(4.0/3.0);
                double t19243 = pow(t19057,1.0/3.0);
                double t19244 = t19242-t19216*t19243*(4.0/3.0);
                double t19245 = t19053*t19054;
                double t19246 = t19245-1.0;
                double t19247 = 1/pow(rho_b[index],4.0/3.0);
                double t19248 = 1/pow(rho_b[index],5.0/3.0);
                double t19249 = 1/sqrt(t19015);
                double t19250 = 1/t19026;
                double t19251 = 1/(t19023*t19023);
                double t19252 = b4p*t18993*t19248*(2.0/3.0);
                double t19253 = b2p*c*t19247*(1.0/3.0);
                double t19254 = b1p*c*t19247*t19249*(1.0/6.0);
                double t19255 = b3p*c*t19016*t19247*(1.0/2.0);
                double t19256 = t19252+t19253+t19254+t19255;
                double t19257 = t19250*t19251*t19029*t19256;
                double t19260 = Aa*t19012*t19227*t19237*t19246*t19059*t19239*2.0;
                double t19261 = a1p*c*c0p*t19200*t19045*(2.0/3.0);
                double t19262 = 1/t19191;
                double t19263 = 1/t19198;
                double t19264 = 1/t19195;
                double t19265 = 1/(t19191*t19191);
                double t19266 = 1/(t19195*t19195);
                double t19267 = 1/(t19198*t19198);
                double t19268 = gcaa*t19063*3.0;
                double t19269 = gamma_bb[index]*t19098*t19189*6.0;
                double t19270 = gcaa*t19100*t19099*t19189*3.0;
                double t19271 = t19270+t19268+t19269;
                double t19272 = gcaa*t19063*2.0;
                double t19273 = gamma_bb[index]*t19098*t19189*2.0;
                double t19274 = t19272+t19273;
                double t19275 = gamma_bb[index]*gcaa*t19060*(1.6E1/3.0);
                double t19276 = t19070*t19099*t19189*(1.6E1/3.0);
                double t19277 = t19275+t19276;
                double t19278 = gamma_bb[index]*gcaa*t19060*8.0;
                double t19279 = gamma_bb[index]*gcaa*t19142*t19099*t19189*8.0;
                double t19280 = t19070*t19099*t19189*1.6E1;
                double t19281 = t19280+t19278+t19279;
                double t19282 = 1/t19183;
                double t19283 = 1/(t19180*t19180);
                double t19284 = b4f*t18993*t19248*(2.0/3.0);
                double t19285 = b2f*c*t19247*(1.0/3.0);
                double t19286 = b1f*c*t19247*t19249*(1.0/6.0);
                double t19287 = b3f*c*t19016*t19247*(1.0/2.0);
                double t19288 = t19284+t19285+t19286+t19287;
                double t19289 = a1f*c*c0f*t19184*t19247*(2.0/3.0);
                double t19290 = a1p*c*c0p*t19027*t19247*(2.0/3.0);
                double t19291 = ccaa1*gcaa*t19063*t19262;
                double t19292 = ccaa2*gamma_bb[index]*t19263*t19098*t19189*2.0;
                double t19293 = ccaa3*gcaa*t19100*t19264*t19099*t19189*3.0;
                double t19294 = t19291+t19292+t19293-ccaa1*gamma_bb[index]*t19265*t19098*t19189-ccaa2*t19274*t19267* \
                   t19098*t19099*t19189-ccaa3*gamma_bb[index]*gcaa*t19100*t19271*t19266*t19099*t19189;
                v_rho_b_gamma_bb_[index] = -(X-1.0)*(c0*pow(rho_b[index],1.0/3.0)*(t19171*t19175+cx1*gx*t19063*t19138- \
                   cx1*gamma_bb[index]*t19141*t19097*t19098+cx2*gamma_bb[index]*t19139*t19097*t19098*2.0-cx2*t19151*t19144* \
                   t19097*t19098*t19099+cx3*gx*t19100*t19140*t19097*t19099*3.0-cx3*gamma_bb[index]*gx*t19100*t19143*t19148* \
                   t19097*t19099)*(4.0/3.0)+c0*pow(rho_b[index],4.0/3.0)*(t19175*(t19130*t19135-t19130*t19131*1/(t19126* \
                   t19126)-t19130*t19133*t19136*6.0+t19130*t19134*t19137*5.0+t19130*t19131*t19133*1/(t19126*t19126*t19126* \
                   t19126)*6.0-t19130*t19131*t19134*1/(t19126*t19126*t19126*t19126*t19126*t19126)*5.0)+t19171*(cxnl1* \
                   gx*t19060*t19138*(-8.0/3.0)+cxnl1*gamma_bb[index]*t19141*t19070*t19097*8.0-cxnl2*gamma_bb[index]*t19070* \
                   t19139*t19097*(3.2E1/3.0)+cxnl2*t19070*t19151*t19144*t19097*t19099*(1.6E1/3.0)+cxnl2*t19144*t19166* \
                   t19097*t19098*t19099+cxnl2*gamma_bb[index]*t19144*t19154*t19097*t19098*2.0-cxnl3*gx*t19140*t19142* \
                   t19097*t19099*2.4E1-cxnl1*gx*t19142*t19159*t19097*t19099*(1.6E1/3.0)+cxnl3*gx*t19100*t19143*t19158* \
                   t19097*t19099*3.0-cxnl2*t19151*t19154*t19167*t19097*t19098*t19099*2.0+cxnl3*gamma_bb[index]*gx*t19100* \
                   t19143*t19163*t19097*t19099+cxnl3*gamma_bb[index]*gx*t19142*t19143*t19148*t19097*t19099*8.0-cxnl3* \
                   gamma_bb[index]*gx*t19100*t19148*t19158*t19168*t19097*t19099*2.0)-cx1*gx*t19060*t19138*(8.0/3.0)+cx1* \
                   gamma_bb[index]*t19141*t19070*t19097*8.0-cx2*gamma_bb[index]*t19070*t19139*t19097*(3.2E1/3.0)+cx2* \
                   t19070*t19151*t19144*t19097*t19099*(1.6E1/3.0)+cx2*t19144*t19166*t19097*t19098*t19099+cx2*gamma_bb[index]* \
                   t19144*t19154*t19097*t19098*2.0-cx1*gx*t19142*t19159*t19097*t19099*(1.6E1/3.0)-cx3*gx*t19140*t19142* \
                   t19097*t19099*2.4E1+cx3*gx*t19100*t19143*t19158*t19097*t19099*3.0-cx2*t19151*t19154*t19167*t19097* \
                   t19098*t19099*2.0+cx3*gamma_bb[index]*gx*t19100*t19143*t19163*t19097*t19099+cx3*gamma_bb[index]*gx* \
                   t19142*t19143*t19148*t19097*t19099*8.0-cx3*gamma_bb[index]*gx*t19100*t19148*t19158*t19168*t19097*t19099* \
                   2.0))-t19294*t19188-(ccab1*gcab*t19063*t19199*(1.0/2.0)-ccab1*t19063*t19065*t19068*t19078*(1.0/2.0) \
                   -ccab2*t19081*t19092*t19068*t19069+ccab2*t19063*t19065*t19068*t19079+ccab3*gcab*t19063*t19085*t19068* \
                   t19069*(3.0/2.0)-ccab3*gcab*t19080*t19065*t19068*t19069*t19096)*(-t19030+t19260+t19048+t19259+rho_b[index]* \
                   (t19290-t19257+t19012*t19009*(t19257+t19289-t19282*t19283*t19186*t19288-a1p*c*c0p*t19027*t19247*(2.0/ \
                   3.0)))-t19031*(t19261-t19220*t19221*t19226*t19047+t19012*t19053*t19054*t19217*t19244+t19012*t19240* \
                   t19054*t19217*t19059*4.0-t19012*t19053*t19054*t19059*(t19261-t19220*t19221*t19226*t19047+(t19211*1/ \
                   (t19205*t19205)*(b2f*c*t19200*(1.0/3.0)+b4f*t18993*t19218*(2.0/3.0)+b1f*c*t19200*t19219*(1.0/6.0)+ \
                   b3f*c*t19200*t19034*(1.0/2.0)))/t19208-a1f*c*c0f*t19200*t19209*(2.0/3.0))-t19012*t19050*t19212*t19053* \
                   t19049*t19059*4.0+Aa*t19012*t19227*t19237*t19059*t19239*(t19240*t19054*4.0+t19050*t19053*t19049*4.0) \
                   *2.0+Aa*t19012*t19244*t19227*t19237*t19246*t19239*2.0-(t19012*1/(t19233*t19233)*t19227*t19246*t19059* \
                   t19239*(b2a*c*t19200*(1.0/3.0)+b4a*t18993*t19218*(2.0/3.0)+b1a*c*t19200*t19219*(1.0/6.0)+b3a*c*t19200* \
                   t19034*(1.0/2.0)))/t19236+Aa*a1a*c*t19200*t19012*t19227*t19237*t19246*t19059*(2.0/3.0))+t19012*t19053* \
                   t19054*t19217*t19059)+(-rho_b[index]*t19188+t19031*(t19260+t19048-t19012*t19212*t19053*t19054*t19059) \
                   +rho_a[index]*(t19012*t19009*(c0p*t19004*t19006*2.0-c0f*log((t19013*(1.0/2.0))/(b1f*t18991+b3f*t18992+ \
                   b2f*c*t18989+b4f*t18993*t18994)+1.0)*(a1f*c*t18989+1.0)*2.0)-c0p*t19004*t19006*2.0))*(ccab1*gcab*t19060* \
                   t19199*(4.0/3.0)-ccab2*t19081*t19068*t19069*(gcab*t19060*(8.0/3.0)+gamma_bb[index]*t19070*t19068*(4.0/ \
                   3.0)+t19060*t19065*t19068*(8.0/3.0))-ccab1*gamma_bb[index]*t19070*t19068*t19078*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t19070*t19068*t19079*(4.0/3.0)-ccab1*t19060*t19065*t19068*t19078*(4.0/3.0)+ccab2*t19060*t19065*t19068* \
                   t19079*(8.0/3.0)-ccab2*t19063*t19081*t19065*t19084*t19068+ccab2*1/(t19073*t19073*t19073)*t19092*t19084* \
                   t19068*t19069*2.0+ccab3*gcab*t19060*t19085*t19068*t19069*4.0+ccab3*gamma_bb[index]*gcab*t19070*t19065* \
                   t19085*t19068*4.0-ccab2*gamma_bb[index]*t19060*t19081*t19065*t19092*t19068*(8.0/3.0)-ccab3*gcab*t19080* \
                   t19063*t19068*t19069*t19089*(3.0/2.0)-ccab3*gcab*t19080*t19065*t19068*t19069*(gcab*t19060*4.0+gamma_bb[index]* \
                   t19070*t19068*4.0+t19060*t19065*t19068*8.0+gcab*t19060*t19068*t19069*4.0+gamma_bb[index]*gcab*t19070* \
                   t19065*t19068*4.0)+ccab1*gamma_bb[index]*gcab*t19070*t19065*1/(t19067*t19067*t19067)*t19068*(4.0/3.0) \
                   +ccab3*gcab*t19065*t19068*1/(t19077*t19077*t19077)*t19069*t19096*t19089*2.0-ccab3*gamma_bb[index]* \
                   gcab*t19060*t19080*t19068*t19069*t19096*4.0)-rho_b[index]*t19188*(ccaa1*gcaa*t19060*t19262*(-8.0/3.0) \
                   -ccaa2*gamma_bb[index]*t19070*t19263*t19189*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t19070*t19265*t19189* \
                   8.0+ccaa2*t19070*t19274*t19267*t19099*t19189*(1.6E1/3.0)-ccaa1*gcaa*t19142*1/(t19191*t19191*t19191) \
                   *t19099*t19189*(1.6E1/3.0)+ccaa2*t19267*t19098*t19099*t19189*(gcaa*t19060*(1.6E1/3.0)+gamma_bb[index]* \
                   t19070*t19189*(3.2E1/3.0))+ccaa2*gamma_bb[index]*t19267*t19277*t19098*t19189*2.0-ccaa3*gcaa*t19142* \
                   t19264*t19099*t19189*2.4E1+ccaa3*gcaa*t19100*t19281*t19266*t19099*t19189*3.0-ccaa2*t19274*t19277*t19098* \
                   t19099*t19189*1/(t19198*t19198*t19198)*2.0+ccaa3*gamma_bb[index]*gcaa*t19100*t19266*t19099*t19189* \
                   (gcaa*t19060*8.0+gamma_bb[index]*t19070*t19189*3.2E1+gcaa*t19142*t19099*t19189*2.4E1)+ccaa3*gamma_bb[index]* \
                   gcaa*t19142*t19271*t19266*t19099*t19189*8.0-ccaa3*gamma_bb[index]*gcaa*t19100*t19271*t19281*1/(t19195* \
                   t19195*t19195)*t19099*t19189*2.0)-rho_b[index]*t19294*(-t19290+t19257+t19012*t19009*(t19290-t19257- \
                   t19289+t19282*t19283*t19186*t19288));
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t20726 = 1/pow(rho_b[index],1.0/3.0);
                double t20727 = c*t20726;
                double t20728 = sqrt(t20727);
                double t20729 = pow(t20727,3.0/2.0);
                double t20730 = c*c;
                double t20731 = 1/pow(rho_b[index],2.0/3.0);
                double t20732 = 1/c0p;
                double t20733 = b1p*t20728;
                double t20734 = b3p*t20729;
                double t20735 = b4p*t20730*t20731;
                double t20736 = b2p*c*t20726;
                double t20737 = t20733+t20734+t20735+t20736;
                double t20738 = 1/t20737;
                double t20739 = t20732*t20738*(1.0/2.0);
                double t20740 = t20739+1.0;
                double t20741 = log(t20740);
                double t20742 = a1p*c*t20726;
                double t20743 = t20742+1.0;
                double t20744 = 1/pow(rho_b[index],8.0/3.0);
                double t20745 = gcaa*gcaa;
                double t20746 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20747 = gamma_bb[index]*gamma_bb[index];
                double t20748 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20749 = gamma_bb[index]*gcaa*t20744;
                double t20750 = t20749+1.0;
                double t20751 = gamma_bb[index]*gcaa*t20744*3.0;
                double t20752 = gamma_bb[index]*gcaa*t20745*t20747*t20748;
                double t20753 = t20745*t20746*t20747*3.0;
                double t20754 = t20751+t20752+t20753+1.0;
                double t20755 = gamma_bb[index]*gcaa*t20744*2.0;
                double t20756 = t20745*t20746*t20747;
                double t20757 = t20755+t20756+1.0;
                double t20758 = pow(2.0,1.0/3.0);
                double t20759 = t20758*2.0;
                double t20760 = t20759-2.0;
                double t20761 = two_13*2.0;
                double t20762 = t20761-2.0;
                double t20763 = 1/t20762;
                double t20764 = 1/c0f;
                double t20765 = b1f*t20728;
                double t20766 = b3f*t20729;
                double t20767 = b4f*t20730*t20731;
                double t20768 = b2f*c*t20726;
                double t20769 = t20765+t20766+t20767+t20768;
                double t20770 = 1/t20769;
                double t20771 = t20770*t20764*(1.0/2.0);
                double t20772 = t20771+1.0;
                double t20773 = log(t20772);
                double t20774 = a1f*c*t20726;
                double t20775 = t20774+1.0;
                double t20776 = c0f*t20773*t20775*2.0;
                double t20777 = c0p*t20741*t20743*2.0;
                double t20778 = 1/t20750;
                double t20779 = 1/t20757;
                double t20780 = 1/t20754;
                double t20781 = 1/pow(rho_b[index],1.9E1/3.0);
                double t20782 = 1/(t20750*t20750);
                double t20783 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t20784 = 1/pow(rho_b[index],1.1E1/3.0);
                double t20785 = 1/(t20754*t20754);
                double t20786 = 1/(t20757*t20757);
                double t20787 = gcaa*t20744*3.0;
                double t20788 = gamma_bb[index]*t20745*t20746*6.0;
                double t20789 = gcaa*t20745*t20747*t20748*3.0;
                double t20790 = t20787+t20788+t20789;
                double t20791 = gcaa*t20744*2.0;
                double t20792 = gamma_bb[index]*t20745*t20746*2.0;
                double t20793 = t20791+t20792;
                double t20794 = gamma_bb[index]*gcaa*t20784*(1.6E1/3.0);
                double t20795 = t20745*t20781*t20747*(1.6E1/3.0);
                double t20796 = t20794+t20795;
                double t20797 = gamma_bb[index]*gcaa*t20784*8.0;
                double t20798 = gamma_bb[index]*gcaa*t20745*t20747*t20783*8.0;
                double t20799 = t20745*t20781*t20747*1.6E1;
                double t20800 = t20797+t20798+t20799;
                double t20801 = 1/pow(rho_b[index],4.0/3.0);
                double t20802 = 1/pow(rho_b[index],5.0/3.0);
                double t20803 = 1/sqrt(t20727);
                double t20804 = 1/t20740;
                double t20805 = 1/(t20737*t20737);
                double t20806 = b4p*t20730*t20802*(2.0/3.0);
                double t20807 = b2p*c*t20801*(1.0/3.0);
                double t20808 = b1p*c*t20801*t20803*(1.0/6.0);
                double t20809 = b3p*c*t20801*t20728*(1.0/2.0);
                double t20810 = t20806+t20807+t20808+t20809;
                double t20811 = t20810*t20804*t20805*t20743;
                double t20812 = ccaa1*gcaa*t20744*t20778;
                double t20813 = ccaa2*gamma_bb[index]*t20745*t20746*t20779*2.0;
                double t20814 = ccaa3*gcaa*t20780*t20745*t20747*t20748*3.0;
                double t20815 = t20812+t20813+t20814-ccaa1*gamma_bb[index]*t20745*t20746*t20782-ccaa2*t20745*t20746* \
                   t20747*t20793*t20786-ccaa3*gamma_bb[index]*gcaa*t20745*t20790*t20747*t20748*t20785;
                double t20816 = pow(rho_b[index],5.0/3.0);
                double t20817 = C_k*t20816;
                double t20826 = tau_a[index]*1.0E20;
                double t20818 = t20817-t20826;
                double t20819 = ( (t20818 > 0.0) ?  1.0 : 0.0 ) ;
                double t20820 = t20819*1.0E20;
                double t20821 = 1/tau_b[index];
                double t20822 = tau_b[index]*1.0E20;
                double t20823 = t20822-t20817;
                double t20824 = ( (t20823 > 0.0) ?  1.0 : 0.0 ) ;
                double t20825 = C_k*t20821*t20824*t20816;
                double t20827 = t20820+t20825-1.0;
                double t20828 = t20827*t20827;
                double t20829 = t20820+t20825+1.0;
                double t20830 = t20828*t20828;
                double t20831 = gx*gx;
                double t20832 = gamma_bb[index]*gx*t20744;
                double t20833 = t20832+1.0;
                double t20834 = gamma_bb[index]*gx*t20744*3.0;
                double t20835 = gamma_bb[index]*gx*t20831*t20747*t20748;
                double t20836 = t20831*t20746*t20747*3.0;
                double t20837 = t20834+t20835+t20836+1.0;
                double t20838 = gamma_bb[index]*gx*t20744*2.0;
                double t20839 = t20831*t20746*t20747;
                double t20840 = t20838+t20839+1.0;
                double t20841 = 1/t20833;
                double t20842 = 1/t20840;
                double t20843 = 1/t20837;
                double t20844 = 1/(t20833*t20833);
                double t20845 = gx*t20744*3.0;
                double t20846 = gamma_bb[index]*t20831*t20746*6.0;
                double t20847 = gx*t20831*t20747*t20748*3.0;
                double t20848 = t20845+t20846+t20847;
                double t20849 = 1/(t20837*t20837);
                double t20850 = gx*t20744*2.0;
                double t20851 = gamma_bb[index]*t20831*t20746*2.0;
                double t20852 = t20850+t20851;
                double t20853 = 1/(t20840*t20840);
                double t20854 = X-1.0;
                double t20855 = cxnl1*gx*t20841*t20744;
                double t20856 = cxnl2*gamma_bb[index]*t20831*t20842*t20746*2.0;
                double t20857 = cxnl3*gx*t20831*t20843*t20747*t20748*3.0;
                double t20858 = t20855+t20856+t20857-cxnl1*gamma_bb[index]*t20831*t20844*t20746-cxnl2*t20831*t20852* \
                   t20853*t20746*t20747-cxnl3*gamma_bb[index]*gx*t20831*t20747*t20748*t20848*t20849;
                double t20859 = pow(rho_b[index],2.0/3.0);
                double t20860 = 1/t20829;
                double t20861 = -t20817+t20826;
                double t20862 = 0.0 ;
                double t20863 = C_k*t20862*t20859*(5.0E20/3.0);
                double t20864 = C_k*C_k;
                double t20865 = pow(rho_b[index],7.0/3.0);
                double t20866 = 0.0 ;
                double t20867 = C_k*t20821*t20824*t20859*(5.0/3.0);
                double t20869 = t20821*t20864*t20865*t20866*(5.0/3.0);
                double t20868 = t20863+t20867-t20869;
                double t20870 = 1/(t20829*t20829*t20829);
                double t20871 = 1/(t20829*t20829*t20829*t20829*t20829);
                double t20872 = t20860*t20827;
                double t20873 = t20830*t20871*t20827;
                double t20874 = t20872+t20873-t20870*t20827*t20828*2.0;
                double t20875 = gamma_bb[index]*gx*t20784*(1.6E1/3.0);
                double t20876 = t20831*t20781*t20747*(1.6E1/3.0);
                double t20877 = t20875+t20876;
                double t20878 = gamma_bb[index]*gx*t20784*8.0;
                double t20879 = gamma_bb[index]*gx*t20831*t20747*t20783*8.0;
                double t20880 = t20831*t20781*t20747*1.6E1;
                double t20881 = t20880+t20878+t20879;
                double t20882 = 1/(t20833*t20833*t20833);
                double t20883 = gx*t20784*8.0;
                double t20884 = gamma_bb[index]*t20831*t20781*3.2E1;
                double t20885 = gx*t20831*t20747*t20783*2.4E1;
                double t20886 = t20883+t20884+t20885;
                double t20887 = gx*t20784*(1.6E1/3.0);
                double t20888 = gamma_bb[index]*t20831*t20781*(3.2E1/3.0);
                double t20889 = t20887+t20888;
                double t20890 = 1/(t20840*t20840*t20840);
                double t20891 = 1/(t20837*t20837*t20837);
                v_rho_b_gamma_bb_[index] = -t20815*(t20777+t20760*t20763*(t20776-c0p*t20741*t20743*2.0))+rho_b[index]* \
                   t20815*(-t20811+t20760*t20763*(t20811-(t20775*1/(t20769*t20769)*(b2f*c*t20801*(1.0/3.0)+b4f*t20730* \
                   t20802*(2.0/3.0)+b1f*c*t20801*t20803*(1.0/6.0)+b3f*c*t20801*t20728*(1.0/2.0)))/t20772+a1f*c*c0f*t20801* \
                   t20773*(2.0/3.0)-a1p*c*c0p*t20801*t20741*(2.0/3.0))+a1p*c*c0p*t20801*t20741*(2.0/3.0))-rho_b[index]* \
                   (t20777+t20760*t20763*(t20776-t20777))*(ccaa1*gcaa*t20784*t20778*(-8.0/3.0)+ccaa1*gamma_bb[index]* \
                   t20745*t20781*t20782*8.0-ccaa2*gamma_bb[index]*t20745*t20781*t20779*(3.2E1/3.0)+ccaa2*t20745*t20781* \
                   t20747*t20793*t20786*(1.6E1/3.0)-ccaa1*gcaa*1/(t20750*t20750*t20750)*t20745*t20747*t20783*(1.6E1/3.0) \
                   +ccaa2*t20745*t20746*t20747*t20786*(gcaa*t20784*(1.6E1/3.0)+gamma_bb[index]*t20745*t20781*(3.2E1/3.0) \
                   )+ccaa2*gamma_bb[index]*t20745*t20746*t20786*t20796*2.0-ccaa3*gcaa*t20780*t20745*t20747*t20783*2.4E1+ \
                   ccaa3*gcaa*t20800*t20745*t20747*t20748*t20785*3.0-ccaa2*t20745*t20746*t20747*1/(t20757*t20757*t20757) \
                   *t20793*t20796*2.0+ccaa3*gamma_bb[index]*gcaa*t20745*t20747*t20748*t20785*(gcaa*t20784*8.0+gamma_bb[index]* \
                   t20745*t20781*3.2E1+gcaa*t20745*t20747*t20783*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t20745*t20790*t20747* \
                   t20783*t20785*8.0-ccaa3*gamma_bb[index]*gcaa*t20800*t20745*1/(t20754*t20754*t20754)*t20790*t20747* \
                   t20748*2.0)-c0*pow(rho_b[index],1.0/3.0)*t20854*(t20874*t20858+cx1*gx*t20841*t20744-cx1*gamma_bb[index]* \
                   t20831*t20844*t20746+cx2*gamma_bb[index]*t20831*t20842*t20746*2.0-cx2*t20831*t20852*t20853*t20746* \
                   t20747+cx3*gx*t20831*t20843*t20747*t20748*3.0-cx3*gamma_bb[index]*gx*t20831*t20747*t20748*t20848*t20849) \
                   *(4.0/3.0)-c0*pow(rho_b[index],4.0/3.0)*t20854*(t20858*(t20860*t20868-t20827*1/(t20829*t20829)*t20868+ \
                   t20830*t20871*t20868*5.0-t20870*t20828*t20868*6.0-t20830*t20827*1/(t20829*t20829*t20829*t20829*t20829* \
                   t20829)*t20868*5.0+t20827*t20828*1/(t20829*t20829*t20829*t20829)*t20868*6.0)+t20874*(cxnl1*gx*t20841* \
                   t20784*(-8.0/3.0)-cxnl2*gamma_bb[index]*t20831*t20842*t20781*(3.2E1/3.0)+cxnl1*gamma_bb[index]*t20831* \
                   t20781*t20844*8.0+cxnl2*t20831*t20852*t20781*t20853*t20747*(1.6E1/3.0)+cxnl2*t20831*t20853*t20746* \
                   t20747*t20889+cxnl2*gamma_bb[index]*t20831*t20853*t20746*t20877*2.0-cxnl3*gx*t20831*t20843*t20747* \
                   t20783*2.4E1-cxnl1*gx*t20831*t20747*t20783*t20882*(1.6E1/3.0)+cxnl3*gx*t20831*t20881*t20747*t20748* \
                   t20849*3.0-cxnl2*t20831*t20852*t20746*t20890*t20747*t20877*2.0+cxnl3*gamma_bb[index]*gx*t20831*t20747* \
                   t20783*t20848*t20849*8.0+cxnl3*gamma_bb[index]*gx*t20831*t20747*t20748*t20849*t20886-cxnl3*gamma_bb[index]* \
                   gx*t20831*t20881*t20747*t20891*t20748*t20848*2.0)-cx1*gx*t20841*t20784*(8.0/3.0)+cx1*gamma_bb[index]* \
                   t20831*t20781*t20844*8.0-cx2*gamma_bb[index]*t20831*t20842*t20781*(3.2E1/3.0)+cx2*t20831*t20852*t20781* \
                   t20853*t20747*(1.6E1/3.0)+cx2*t20831*t20853*t20746*t20747*t20889+cx2*gamma_bb[index]*t20831*t20853* \
                   t20746*t20877*2.0-cx1*gx*t20831*t20747*t20783*t20882*(1.6E1/3.0)-cx3*gx*t20831*t20843*t20747*t20783* \
                   2.4E1+cx3*gx*t20831*t20881*t20747*t20748*t20849*3.0-cx2*t20831*t20852*t20746*t20890*t20747*t20877* \
                   2.0+cx3*gamma_bb[index]*gx*t20831*t20747*t20783*t20848*t20849*8.0+cx3*gamma_bb[index]*gx*t20831*t20747* \
                   t20748*t20849*t20886-cx3*gamma_bb[index]*gx*t20831*t20881*t20747*t20891*t20748*t20848*2.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19296 = 1/pow(rho_a[index],1.0/3.0);
                double t19297 = c*t19296;
                double t19298 = sqrt(t19297);
                double t19299 = pow(t19297,3.0/2.0);
                double t19300 = c*c;
                double t19301 = 1/pow(rho_a[index],2.0/3.0);
                double t19302 = 1/c0p;
                double t19303 = b1p*t19298;
                double t19304 = b3p*t19299;
                double t19305 = b4p*t19300*t19301;
                double t19306 = b2p*c*t19296;
                double t19307 = t19303+t19304+t19305+t19306;
                double t19308 = 1/t19307;
                double t19309 = t19302*t19308*(1.0/2.0);
                double t19310 = t19309+1.0;
                double t19311 = log(t19310);
                double t19312 = a1p*c*t19296;
                double t19313 = t19312+1.0;
                double t19314 = pow(2.0,1.0/3.0);
                double t19315 = t19314*2.0;
                double t19316 = t19315-2.0;
                double t19317 = two_13*2.0;
                double t19318 = t19317-2.0;
                double t19319 = 1/t19318;
                double t19320 = 1/c0f;
                double t19321 = 1/pow(rho_b[index],1.0/3.0);
                double t19322 = c*t19321;
                double t19323 = sqrt(t19322);
                double t19324 = pow(t19322,3.0/2.0);
                double t19325 = 1/pow(rho_b[index],2.0/3.0);
                double t19326 = b1p*t19323;
                double t19327 = b3p*t19324;
                double t19328 = b4p*t19300*t19325;
                double t19329 = b2p*c*t19321;
                double t19330 = t19326+t19327+t19328+t19329;
                double t19331 = 1/t19330;
                double t19332 = t19302*t19331*(1.0/2.0);
                double t19333 = t19332+1.0;
                double t19334 = log(t19333);
                double t19335 = a1p*c*t19321;
                double t19336 = t19335+1.0;
                double t19337 = c0p*t19334*t19336*2.0;
                double t19338 = rho_a[index]+rho_b[index];
                double t19339 = 1/pow(t19338,1.0/3.0);
                double t19340 = c*t19339;
                double t19341 = sqrt(t19340);
                double t19342 = pow(t19340,3.0/2.0);
                double t19343 = 1/pow(t19338,2.0/3.0);
                double t19344 = b1p*t19341;
                double t19345 = b3p*t19342;
                double t19346 = b4p*t19300*t19343;
                double t19347 = b2p*c*t19339;
                double t19348 = t19344+t19345+t19346+t19347;
                double t19349 = 1/t19348;
                double t19350 = t19302*t19349*(1.0/2.0);
                double t19351 = t19350+1.0;
                double t19352 = log(t19351);
                double t19353 = a1p*c*t19339;
                double t19354 = t19353+1.0;
                double t19355 = c0p*t19352*t19354*2.0;
                double t19356 = rho_a[index]-rho_b[index];
                double t19357 = t19356*t19356;
                double t19358 = 1/t19338;
                double t19359 = t19356*t19358;
                double t19360 = 1/(t19338*t19338*t19338*t19338);
                double t19361 = t19357*t19357;
                double t19362 = t19359+1.0;
                double t19363 = pow(t19362,4.0/3.0);
                double t19364 = -t19359+1.0;
                double t19365 = pow(t19364,4.0/3.0);
                double t19366 = t19363+t19365-2.0;
                double t19367 = gcab*gcab;
                double t19368 = 1/pow(rho_a[index],1.6E1/3.0);
                double t19369 = 1/pow(rho_a[index],8.0/3.0);
                double t19370 = gamma_aa[index]*t19369*(1.0/2.0);
                double t19371 = 1/pow(rho_b[index],8.0/3.0);
                double t19372 = gamma_bb[index]*t19371*(1.0/2.0);
                double t19373 = t19370+t19372;
                double t19374 = gcab*t19373;
                double t19375 = t19374+1.0;
                double t19376 = t19373*t19373;
                double t19377 = t19367*t19376;
                double t19378 = gcab*t19373*2.0;
                double t19379 = t19377+t19378+1.0;
                double t19389 = gcab*t19369*(3.0/2.0);
                double t19390 = t19373*t19367*t19369*3.0;
                double t19391 = gcab*t19367*t19376*t19369*(3.0/2.0);
                double t19380 = t19390+t19391+t19389;
                double t19381 = t19367*t19376*3.0;
                double t19382 = gcab*t19373*t19367*t19376;
                double t19383 = gcab*t19373*3.0;
                double t19384 = t19381+t19382+t19383+1.0;
                double t19386 = gcab*t19369;
                double t19387 = t19373*t19367*t19369;
                double t19385 = t19386+t19387;
                double t19388 = 1/(t19379*t19379);
                double t19392 = 1/(t19384*t19384);
                double t19393 = b1f*t19298;
                double t19394 = b3f*t19299;
                double t19395 = b4f*t19300*t19301;
                double t19396 = b2f*c*t19296;
                double t19397 = t19393+t19394+t19395+t19396;
                double t19398 = 1/t19397;
                double t19399 = t19320*t19398*(1.0/2.0);
                double t19400 = t19399+1.0;
                double t19401 = log(t19400);
                double t19402 = a1f*c*t19296;
                double t19403 = t19402+1.0;
                double t19404 = c0f*t19401*t19403*2.0;
                double t19405 = c0p*t19311*t19313*2.0;
                double t19406 = gcaa*gcaa;
                double t19407 = gamma_aa[index]*gcaa*t19369;
                double t19408 = t19407+1.0;
                double t19409 = gamma_aa[index]*gamma_aa[index];
                double t19410 = gamma_aa[index]*gcaa*t19369*2.0;
                double t19411 = t19406*t19409*t19368;
                double t19412 = t19410+t19411+1.0;
                double t19413 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t19414 = gamma_aa[index]*gcaa*t19369*3.0;
                double t19415 = gamma_aa[index]*gcaa*t19413*t19406*t19409;
                double t19416 = t19406*t19409*t19368*3.0;
                double t19417 = t19414+t19415+t19416+1.0;
                double t19420 = gcaa*t19369*2.0;
                double t19421 = gamma_aa[index]*t19406*t19368*2.0;
                double t19418 = t19420+t19421;
                double t19419 = 1/(t19417*t19417);
                double t19422 = 1/(t19412*t19412);
                double t19423 = gcaa*t19369*3.0;
                double t19424 = gamma_aa[index]*t19406*t19368*6.0;
                double t19425 = gcaa*t19413*t19406*t19409*3.0;
                double t19426 = t19423+t19424+t19425;
                double t19427 = pow(rho_a[index],5.0/3.0);
                double t19428 = C_k*t19427;
                double t19429 = tau_a[index]*1.0E20;
                double t19430 = 1/tau_a[index];
                double t19431 = -t19428+t19429;
                double t19432 = ( (t19431 > 0.0) ?  1.0 : 0.0 ) ;
                double t19433 = C_k*t19430*t19432*t19427;
                double t19434 = t19428-t19429;
                double t19435 = ( (t19434 > 0.0) ?  1.0 : 0.0 ) ;
                double t19436 = t19435*1.0E20;
                double t19437 = t19433+t19436-1.0;
                double t19438 = t19437*t19437;
                double t19439 = t19433+t19436+1.0;
                double t19440 = t19438*t19438;
                double t19441 = gx*gx;
                double t19442 = gamma_aa[index]*gx*t19369;
                double t19443 = t19442+1.0;
                double t19444 = 1/pow(rho_a[index],3.2E1/3.0);
                double t19445 = gamma_aa[index]*gx*t19369*2.0;
                double t19446 = t19441*t19409*t19368;
                double t19447 = t19445+t19446+1.0;
                double t19448 = gamma_aa[index]*gx*t19369*3.0;
                double t19449 = gamma_aa[index]*gx*t19413*t19441*t19409;
                double t19450 = t19441*t19409*t19368*3.0;
                double t19451 = t19450+t19448+t19449+1.0;
                double t19454 = gx*t19369*2.0;
                double t19455 = gamma_aa[index]*t19441*t19368*2.0;
                double t19452 = t19454+t19455;
                double t19453 = 1/(t19451*t19451);
                double t19456 = 1/(t19447*t19447);
                double t19457 = gx*t19369*3.0;
                double t19458 = gamma_aa[index]*t19441*t19368*6.0;
                double t19459 = gx*t19413*t19441*t19409*3.0;
                double t19460 = t19457+t19458+t19459;
                double t19461 = 1/(t19443*t19443);
                double t19462 = 1/t19447;
                double t19463 = 1/t19451;
                double t19464 = 1/(t19443*t19443*t19443);
                double t19465 = t19441*t19441;
                double t19466 = t19441*t19368*6.0;
                double t19467 = gamma_aa[index]*gx*t19413*t19441*6.0;
                double t19468 = t19466+t19467;
                double t19469 = t19452*t19452;
                double t19470 = 1/(t19447*t19447*t19447);
                double t19471 = t19460*t19460;
                double t19472 = 1/(t19451*t19451*t19451);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t19405+t19316*t19319*(t19404-c0p*t19311*t19313*2.0) \
                   )+rho_b[index]*(t19337-t19316*t19319*(t19337-c0f*log((t19320*(1.0/2.0))/(b1f*t19323+b3f*t19324+b2f* \
                   c*t19321+b4f*t19300*t19325)+1.0)*(a1f*c*t19321+1.0)*2.0))-t19338*(t19355-t19360*t19361*t19319*t19366* \
                   (t19355-c0f*log((t19320*(1.0/2.0))/(b1f*t19341+b3f*t19342+b2f*c*t19339+b4f*t19300*t19343)+1.0)*(a1f* \
                   c*t19339+1.0)*2.0)+(Aa*t19319*t19366*log((1.0/2.0)/(Aa*(b1a*t19341+b3a*t19342+b2a*c*t19339+b4a*t19300* \
                   t19343))+1.0)*(t19360*t19361-1.0)*(a1a*c*t19339+1.0)*2.0)/d2fz0))*(ccab1*1/(t19375*t19375)*t19367* \
                   t19368*(1.0/2.0)-(ccab2*t19367*t19368*(1.0/2.0))/t19379-ccab2*t19367*t19376*(t19385*t19385)*1/(t19379* \
                   t19379*t19379)*2.0+ccab2*(t19367*t19367)*t19376*t19368*t19388*(1.0/2.0)+ccab2*t19373*t19367*t19385* \
                   t19369*t19388*2.0-ccab1*gcab*t19373*1/(t19375*t19375*t19375)*t19367*t19368*(1.0/2.0)-(ccab3*gcab*t19373* \
                   t19367*t19368*(3.0/2.0))/t19384-ccab3*gcab*(t19380*t19380)*t19373*1/(t19384*t19384*t19384)*t19367* \
                   t19376*2.0+ccab3*gcab*t19380*t19392*t19367*t19376*t19369*3.0+ccab3*gcab*t19373*t19392*t19367*t19376* \
                   (t19367*t19368*(3.0/2.0)+gcab*t19373*t19367*t19368*(3.0/2.0)))-rho_a[index]*(t19405+t19316*t19319* \
                   (t19404-t19405))*((ccaa2*t19406*t19368*2.0)/t19412-ccaa1*t19406*1/(t19408*t19408)*t19368*2.0-ccaa2* \
                   t19422*(t19406*t19406)*t19444*t19409*2.0+ccaa1*gamma_aa[index]*gcaa*t19413*t19406*1/(t19408*t19408* \
                   t19408)*2.0+(ccaa3*gamma_aa[index]*gcaa*t19413*t19406*6.0)/t19417+ccaa2*1/(t19412*t19412*t19412)*t19406* \
                   t19409*(t19418*t19418)*t19368*2.0-ccaa2*gamma_aa[index]*t19422*t19406*t19418*t19368*4.0-ccaa3*gcaa* \
                   t19413*t19406*t19426*t19409*t19419*6.0-ccaa3*gamma_aa[index]*gcaa*t19413*t19406*t19409*t19419*(t19406* \
                   t19368*6.0+gamma_aa[index]*gcaa*t19413*t19406*6.0)+ccaa3*gamma_aa[index]*gcaa*t19413*t19406*1/(t19417* \
                   t19417*t19417)*(t19426*t19426)*t19409*2.0)+c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(((t19433+ ( (t19428- \
                   tau_a[index]*1.0E20 > 0.0) ? 1.0*1.0E20 : 0.0 ) -1.0)/t19439+t19440*t19437*1/(t19439*t19439*t19439* \
                   t19439*t19439)-t19437*t19438*1/(t19439*t19439*t19439)*2.0)*(cxnl1*t19441*t19461*t19368*2.0-cxnl2*t19441* \
                   t19462*t19368*2.0+cxnl2*t19444*t19409*t19456*t19465*2.0-cxnl2*t19441*t19470*t19409*t19368*t19469*2.0- \
                   cxnl1*gamma_aa[index]*gx*t19413*t19441*t19464*2.0-cxnl3*gamma_aa[index]*gx*t19413*t19441*t19463*6.0+ \
                   cxnl2*gamma_aa[index]*t19441*t19452*t19456*t19368*4.0+cxnl3*gx*t19413*t19441*t19460*t19453*t19409* \
                   6.0-cxnl3*gamma_aa[index]*gx*t19413*t19441*t19471*t19409*t19472*2.0+cxnl3*gamma_aa[index]*gx*t19413* \
                   t19441*t19453*t19409*t19468)+cx1*t19441*t19461*t19368*2.0-cx2*t19441*t19462*t19368*2.0+cx2*t19444* \
                   t19409*t19456*t19465*2.0-cx2*t19441*t19470*t19409*t19368*t19469*2.0-cx1*gamma_aa[index]*gx*t19413* \
                   t19441*t19464*2.0-cx3*gamma_aa[index]*gx*t19413*t19441*t19463*6.0+cx2*gamma_aa[index]*t19441*t19452* \
                   t19456*t19368*4.0+cx3*gx*t19413*t19441*t19460*t19453*t19409*6.0-cx3*gamma_aa[index]*gx*t19413*t19441* \
                   t19471*t19409*t19472*2.0+cx3*gamma_aa[index]*gx*t19413*t19441*t19453*t19409*t19468);
            } else if (rho_a[index] > cutoff_) {
                double t21946 = 1/pow(rho_a[index],1.0/3.0);
                double t21947 = c*t21946;
                double t21948 = sqrt(t21947);
                double t21949 = pow(t21947,3.0/2.0);
                double t21950 = c*c;
                double t21951 = 1/pow(rho_a[index],2.0/3.0);
                double t21952 = 1/c0p;
                double t21953 = b1p*t21948;
                double t21954 = b3p*t21949;
                double t21955 = b4p*t21950*t21951;
                double t21956 = b2p*c*t21946;
                double t21957 = t21953+t21954+t21955+t21956;
                double t21958 = 1/t21957;
                double t21959 = t21952*t21958*(1.0/2.0);
                double t21960 = t21959+1.0;
                double t21961 = log(t21960);
                double t21962 = a1p*c*t21946;
                double t21963 = t21962+1.0;
                double t21964 = gcaa*gcaa;
                double t21965 = 1/pow(rho_a[index],1.6E1/3.0);
                double t21966 = 1/pow(rho_a[index],8.0/3.0);
                double t21967 = gamma_aa[index]*gcaa*t21966;
                double t21968 = t21967+1.0;
                double t21969 = gamma_aa[index]*gamma_aa[index];
                double t21970 = gamma_aa[index]*gcaa*t21966*2.0;
                double t21971 = t21964*t21965*t21969;
                double t21972 = t21970+t21971+1.0;
                double t21973 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t21974 = gamma_aa[index]*gcaa*t21966*3.0;
                double t21975 = gamma_aa[index]*gcaa*t21964*t21973*t21969;
                double t21976 = t21964*t21965*t21969*3.0;
                double t21977 = t21974+t21975+t21976+1.0;
                double t21980 = gcaa*t21966*2.0;
                double t21981 = gamma_aa[index]*t21964*t21965*2.0;
                double t21978 = t21980+t21981;
                double t21979 = 1/(t21977*t21977);
                double t21982 = 1/(t21972*t21972);
                double t21983 = gcaa*t21966*3.0;
                double t21984 = gamma_aa[index]*t21964*t21965*6.0;
                double t21985 = gcaa*t21964*t21973*t21969*3.0;
                double t21986 = t21983+t21984+t21985;
                double t21987 = pow(rho_a[index],5.0/3.0);
                double t21988 = C_k*t21987;
                double t21989 = tau_a[index]*1.0E20;
                double t21990 = 1/tau_a[index];
                double t21991 = -t21988+t21989;
                double t21992 = ( (t21991 > 0.0) ?  1.0 : 0.0 ) ;
                double t21993 = C_k*t21990*t21992*t21987;
                double t21994 = t21988-t21989;
                double t21995 = ( (t21994 > 0.0) ?  1.0 : 0.0 ) ;
                double t21996 = t21995*1.0E20;
                double t21997 = t21993+t21996-1.0;
                double t21998 = t21997*t21997;
                double t21999 = t21993+t21996+1.0;
                double t22000 = t21998*t21998;
                double t22001 = gx*gx;
                double t22002 = gamma_aa[index]*gx*t21966;
                double t22003 = t22002+1.0;
                double t22004 = 1/pow(rho_a[index],3.2E1/3.0);
                double t22005 = gamma_aa[index]*gx*t21966*2.0;
                double t22006 = t21965*t21969*t22001;
                double t22007 = t22005+t22006+1.0;
                double t22008 = gamma_aa[index]*gx*t21966*3.0;
                double t22009 = gamma_aa[index]*gx*t21973*t21969*t22001;
                double t22010 = t21965*t21969*t22001*3.0;
                double t22011 = t22010+t22008+t22009+1.0;
                double t22014 = gx*t21966*2.0;
                double t22015 = gamma_aa[index]*t21965*t22001*2.0;
                double t22012 = t22014+t22015;
                double t22013 = 1/(t22011*t22011);
                double t22016 = 1/(t22007*t22007);
                double t22017 = gx*t21966*3.0;
                double t22018 = gamma_aa[index]*t21965*t22001*6.0;
                double t22019 = gx*t21973*t21969*t22001*3.0;
                double t22020 = t22017+t22018+t22019;
                double t22021 = 1/(t22003*t22003);
                double t22022 = 1/t22007;
                double t22023 = 1/t22011;
                double t22024 = 1/(t22003*t22003*t22003);
                double t22025 = t22001*t22001;
                double t22026 = t21965*t22001*6.0;
                double t22027 = gamma_aa[index]*gx*t21973*t22001*6.0;
                double t22028 = t22026+t22027;
                double t22029 = t22012*t22012;
                double t22030 = 1/(t22007*t22007*t22007);
                double t22031 = t22020*t22020;
                double t22032 = 1/(t22011*t22011*t22011);
                v_gamma_aa_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t21948+b3f*t21949+b2f*c*t21946+b4f*t21950*t21951))+1.0)*(a1f*c*t21946+1.0)*2.0-c0p*t21961*t21963* \
                   2.0))/(two_13*2.0-2.0)+c0p*t21961*t21963*2.0)*((ccaa2*t21964*t21965*2.0)/t21972-ccaa1*t21964*t21965* \
                   1/(t21968*t21968)*2.0-ccaa2*(t21964*t21964)*t21982*t21969*t22004*2.0+ccaa1*gamma_aa[index]*gcaa*t21964* \
                   t21973*1/(t21968*t21968*t21968)*2.0+(ccaa3*gamma_aa[index]*gcaa*t21964*t21973*6.0)/t21977+ccaa2*1/ \
                   (t21972*t21972*t21972)*t21964*t21965*t21969*(t21978*t21978)*2.0-ccaa2*gamma_aa[index]*t21964*t21982* \
                   t21965*t21978*4.0-ccaa3*gcaa*t21964*t21973*t21986*t21969*t21979*6.0-ccaa3*gamma_aa[index]*gcaa*t21964* \
                   t21973*t21969*t21979*(t21964*t21965*6.0+gamma_aa[index]*gcaa*t21964*t21973*6.0)+ccaa3*gamma_aa[index]* \
                   gcaa*t21964*t21973*1/(t21977*t21977*t21977)*(t21986*t21986)*t21969*2.0)+c0*pow(rho_a[index],4.0/3.0) \
                   *(X-1.0)*(((t21993+ ( (t21988-tau_a[index]*1.0E20 > 0.0) ? 1.0*1.0E20 : 0.0 ) -1.0)/t21999-t21997* \
                   t21998*1/(t21999*t21999*t21999)*2.0+t21997*1/(t21999*t21999*t21999*t21999*t21999)*t22000)*(cxnl1*t21965* \
                   t22001*t22021*2.0-cxnl2*t21965*t22001*t22022*2.0+cxnl2*t21969*t22004*t22016*t22025*2.0-cxnl2*t21965* \
                   t21969*t22001*t22030*t22029*2.0-cxnl1*gamma_aa[index]*gx*t21973*t22001*t22024*2.0-cxnl3*gamma_aa[index]* \
                   gx*t21973*t22001*t22023*6.0+cxnl2*gamma_aa[index]*t21965*t22001*t22012*t22016*4.0+cxnl3*gx*t21973* \
                   t21969*t22001*t22020*t22013*6.0-cxnl3*gamma_aa[index]*gx*t21973*t21969*t22001*t22031*t22032*2.0+cxnl3* \
                   gamma_aa[index]*gx*t21973*t21969*t22001*t22013*t22028)+cx1*t21965*t22001*t22021*2.0-cx2*t21965*t22001* \
                   t22022*2.0+cx2*t21969*t22004*t22016*t22025*2.0-cx2*t21965*t21969*t22001*t22030*t22029*2.0-cx1*gamma_aa[index]* \
                   gx*t21973*t22001*t22024*2.0-cx3*gamma_aa[index]*gx*t21973*t22001*t22023*6.0+cx2*gamma_aa[index]*t21965* \
                   t22001*t22012*t22016*4.0+cx3*gx*t21973*t21969*t22001*t22020*t22013*6.0-cx3*gamma_aa[index]*gx*t21973* \
                   t21969*t22001*t22031*t22032*2.0+cx3*gamma_aa[index]*gx*t21973*t21969*t22001*t22013*t22028);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19475 = 1/pow(rho_a[index],1.0/3.0);
                double t19476 = c*t19475;
                double t19477 = sqrt(t19476);
                double t19478 = pow(t19476,3.0/2.0);
                double t19479 = c*c;
                double t19480 = 1/pow(rho_a[index],2.0/3.0);
                double t19481 = 1/c0p;
                double t19482 = b1p*t19477;
                double t19483 = b3p*t19478;
                double t19484 = b4p*t19480*t19479;
                double t19485 = b2p*c*t19475;
                double t19486 = t19482+t19483+t19484+t19485;
                double t19487 = 1/t19486;
                double t19488 = t19481*t19487*(1.0/2.0);
                double t19489 = t19488+1.0;
                double t19490 = log(t19489);
                double t19491 = a1p*c*t19475;
                double t19492 = t19491+1.0;
                double t19493 = pow(2.0,1.0/3.0);
                double t19494 = t19493*2.0;
                double t19495 = t19494-2.0;
                double t19496 = two_13*2.0;
                double t19497 = t19496-2.0;
                double t19498 = 1/t19497;
                double t19499 = 1/c0f;
                double t19500 = 1/pow(rho_b[index],1.0/3.0);
                double t19501 = c*t19500;
                double t19502 = sqrt(t19501);
                double t19503 = pow(t19501,3.0/2.0);
                double t19504 = 1/pow(rho_b[index],2.0/3.0);
                double t19505 = b1p*t19502;
                double t19506 = b3p*t19503;
                double t19507 = b4p*t19504*t19479;
                double t19508 = b2p*c*t19500;
                double t19509 = t19505+t19506+t19507+t19508;
                double t19510 = 1/t19509;
                double t19511 = t19510*t19481*(1.0/2.0);
                double t19512 = t19511+1.0;
                double t19513 = log(t19512);
                double t19514 = a1p*c*t19500;
                double t19515 = t19514+1.0;
                double t19516 = c0p*t19513*t19515*2.0;
                double t19517 = rho_a[index]+rho_b[index];
                double t19518 = 1/pow(t19517,1.0/3.0);
                double t19519 = c*t19518;
                double t19520 = sqrt(t19519);
                double t19521 = pow(t19519,3.0/2.0);
                double t19522 = 1/pow(t19517,2.0/3.0);
                double t19523 = b1p*t19520;
                double t19524 = b3p*t19521;
                double t19525 = b4p*t19522*t19479;
                double t19526 = b2p*c*t19518;
                double t19527 = t19523+t19524+t19525+t19526;
                double t19528 = 1/t19527;
                double t19529 = t19481*t19528*(1.0/2.0);
                double t19530 = t19529+1.0;
                double t19531 = log(t19530);
                double t19532 = a1p*c*t19518;
                double t19533 = t19532+1.0;
                double t19534 = c0p*t19531*t19533*2.0;
                double t19535 = rho_a[index]-rho_b[index];
                double t19536 = t19535*t19535;
                double t19537 = 1/t19517;
                double t19538 = t19535*t19537;
                double t19539 = 1/(t19517*t19517*t19517*t19517);
                double t19540 = t19536*t19536;
                double t19541 = t19538+1.0;
                double t19542 = pow(t19541,4.0/3.0);
                double t19543 = -t19538+1.0;
                double t19544 = pow(t19543,4.0/3.0);
                double t19545 = t19542+t19544-2.0;
                double t19546 = gcab*gcab;
                double t19547 = 1/pow(rho_a[index],8.0/3.0);
                double t19548 = 1/pow(rho_b[index],8.0/3.0);
                double t19549 = gamma_aa[index]*t19547*(1.0/2.0);
                double t19550 = gamma_bb[index]*t19548*(1.0/2.0);
                double t19551 = t19550+t19549;
                double t19552 = t19551*t19551;
                double t19553 = t19552*t19546*3.0;
                double t19554 = gcab*t19551*t19552*t19546;
                double t19555 = gcab*t19551*3.0;
                double t19556 = t19553+t19554+t19555+1.0;
                double t19557 = t19552*t19546;
                double t19558 = gcab*t19551*2.0;
                double t19559 = t19557+t19558+1.0;
                double t19560 = 1/(t19559*t19559);
                double t19561 = gcab*t19547;
                double t19562 = t19551*t19546*t19547;
                double t19563 = t19561+t19562;
                double t19564 = gcab*t19548;
                double t19565 = t19551*t19546*t19548;
                double t19566 = t19564+t19565;
                double t19567 = gcab*t19551;
                double t19568 = t19567+1.0;
                double t19569 = gcab*t19547*(3.0/2.0);
                double t19570 = t19551*t19546*t19547*3.0;
                double t19571 = gcab*t19552*t19546*t19547*(3.0/2.0);
                double t19572 = t19570+t19571+t19569;
                double t19573 = 1/(t19556*t19556);
                double t19574 = gcab*t19548*(3.0/2.0);
                double t19575 = t19551*t19546*t19548*3.0;
                double t19576 = gcab*t19552*t19546*t19548*(3.0/2.0);
                double t19577 = t19574+t19575+t19576;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t19516-t19495*t19498*(t19516-c0f*log((t19499*(1.0/2.0) \
                   )/(b1f*t19502+b3f*t19503+b2f*c*t19500+b4f*t19504*t19479)+1.0)*(a1f*c*t19500+1.0)*2.0))+t19517*(t19534- \
                   t19540*t19545*t19539*t19498*(t19534-c0f*log((t19499*(1.0/2.0))/(b1f*t19520+b3f*t19521+b2f*c*t19518+ \
                   b4f*t19522*t19479)+1.0)*(a1f*c*t19518+1.0)*2.0)+(Aa*t19545*t19498*log((1.0/2.0)/(Aa*(b1a*t19520+b3a* \
                   t19521+b2a*c*t19518+b4a*t19522*t19479))+1.0)*(t19540*t19539-1.0)*(a1a*c*t19518+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t19495*t19498*(c0p*t19490*t19492*2.0-c0f*log((t19499*(1.0/2.0))/(b1f*t19477+b3f*t19478+b2f*c*t19475+ \
                   b4f*t19480*t19479)+1.0)*(a1f*c*t19475+1.0)*2.0)-c0p*t19490*t19492*2.0))*(ccab1*t19546*t19547*t19548* \
                   1/(t19568*t19568)*(1.0/2.0)-(ccab2*t19546*t19547*t19548*(1.0/2.0))/t19559+ccab2*t19551*t19560*t19563* \
                   t19546*t19548+ccab2*t19551*t19560*t19546*t19547*t19566+ccab2*t19560*t19552*(t19546*t19546)*t19547* \
                   t19548*(1.0/2.0)-ccab2*t19552*t19563*t19546*t19566*1/(t19559*t19559*t19559)*2.0+ccab3*gcab*t19552* \
                   t19572*t19546*t19573*t19548*(3.0/2.0)+ccab3*gcab*t19552*t19546*t19573*t19547*t19577*(3.0/2.0)+ccab3* \
                   gcab*t19551*t19552*t19546*t19573*(t19546*t19547*t19548*(3.0/2.0)+gcab*t19551*t19546*t19547*t19548* \
                   (3.0/2.0))-(ccab3*gcab*t19551*t19546*t19547*t19548*(3.0/2.0))/t19556-ccab1*gcab*t19551*t19546*t19547* \
                   t19548*1/(t19568*t19568*t19568)*(1.0/2.0)-ccab3*gcab*t19551*t19552*t19572*t19546*1/(t19556*t19556* \
                   t19556)*t19577*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19581 = 1/pow(rho_a[index],1.0/3.0);
                double t19582 = c*t19581;
                double t19583 = sqrt(t19582);
                double t19584 = pow(t19582,3.0/2.0);
                double t19585 = c*c;
                double t19586 = 1/pow(rho_a[index],2.0/3.0);
                double t19587 = 1/c0p;
                double t19588 = b1p*t19583;
                double t19589 = b3p*t19584;
                double t19590 = b4p*t19585*t19586;
                double t19591 = b2p*c*t19581;
                double t19592 = t19590+t19591+t19588+t19589;
                double t19593 = 1/t19592;
                double t19594 = t19593*t19587*(1.0/2.0);
                double t19595 = t19594+1.0;
                double t19596 = log(t19595);
                double t19597 = a1p*c*t19581;
                double t19598 = t19597+1.0;
                double t19599 = pow(2.0,1.0/3.0);
                double t19600 = t19599*2.0;
                double t19601 = t19600-2.0;
                double t19602 = two_13*2.0;
                double t19603 = t19602-2.0;
                double t19604 = 1/t19603;
                double t19605 = 1/c0f;
                double t19606 = 1/pow(rho_b[index],1.0/3.0);
                double t19607 = c*t19606;
                double t19608 = sqrt(t19607);
                double t19609 = pow(t19607,3.0/2.0);
                double t19610 = 1/pow(rho_b[index],2.0/3.0);
                double t19611 = b1p*t19608;
                double t19612 = b3p*t19609;
                double t19613 = b4p*t19610*t19585;
                double t19614 = b2p*c*t19606;
                double t19615 = t19611+t19612+t19613+t19614;
                double t19616 = 1/t19615;
                double t19617 = t19616*t19587*(1.0/2.0);
                double t19618 = t19617+1.0;
                double t19619 = log(t19618);
                double t19620 = a1p*c*t19606;
                double t19621 = t19620+1.0;
                double t19622 = c0p*t19621*t19619*2.0;
                double t19623 = rho_a[index]+rho_b[index];
                double t19624 = 1/pow(t19623,1.0/3.0);
                double t19625 = c*t19624;
                double t19626 = sqrt(t19625);
                double t19627 = pow(t19625,3.0/2.0);
                double t19628 = 1/pow(t19623,2.0/3.0);
                double t19629 = b1p*t19626;
                double t19630 = b3p*t19627;
                double t19631 = b4p*t19628*t19585;
                double t19632 = b2p*c*t19624;
                double t19633 = t19630+t19631+t19632+t19629;
                double t19634 = 1/t19633;
                double t19635 = t19634*t19587*(1.0/2.0);
                double t19636 = t19635+1.0;
                double t19637 = log(t19636);
                double t19638 = a1p*c*t19624;
                double t19639 = t19638+1.0;
                double t19640 = c0p*t19637*t19639*2.0;
                double t19641 = rho_a[index]-rho_b[index];
                double t19642 = t19641*t19641;
                double t19643 = 1/t19623;
                double t19644 = t19641*t19643;
                double t19645 = 1/(t19623*t19623*t19623*t19623);
                double t19646 = t19642*t19642;
                double t19647 = t19644+1.0;
                double t19648 = pow(t19647,4.0/3.0);
                double t19649 = -t19644+1.0;
                double t19650 = pow(t19649,4.0/3.0);
                double t19651 = t19650+t19648-2.0;
                double t19652 = gcab*gcab;
                double t19653 = 1/pow(rho_b[index],1.6E1/3.0);
                double t19654 = 1/pow(rho_a[index],8.0/3.0);
                double t19655 = gamma_aa[index]*t19654*(1.0/2.0);
                double t19656 = 1/pow(rho_b[index],8.0/3.0);
                double t19657 = gamma_bb[index]*t19656*(1.0/2.0);
                double t19658 = t19655+t19657;
                double t19659 = gcab*t19658;
                double t19660 = t19659+1.0;
                double t19661 = t19658*t19658;
                double t19662 = t19652*t19661;
                double t19663 = gcab*t19658*2.0;
                double t19664 = t19662+t19663+1.0;
                double t19674 = gcab*t19656*(3.0/2.0);
                double t19675 = t19652*t19656*t19658*3.0;
                double t19676 = gcab*t19652*t19661*t19656*(3.0/2.0);
                double t19665 = t19674+t19675+t19676;
                double t19666 = t19652*t19661*3.0;
                double t19667 = gcab*t19652*t19661*t19658;
                double t19668 = gcab*t19658*3.0;
                double t19669 = t19666+t19667+t19668+1.0;
                double t19671 = gcab*t19656;
                double t19672 = t19652*t19656*t19658;
                double t19670 = t19671+t19672;
                double t19673 = 1/(t19664*t19664);
                double t19677 = 1/(t19669*t19669);
                double t19678 = b1f*t19608;
                double t19679 = b3f*t19609;
                double t19680 = b4f*t19610*t19585;
                double t19681 = b2f*c*t19606;
                double t19682 = t19680+t19681+t19678+t19679;
                double t19683 = 1/t19682;
                double t19684 = t19605*t19683*(1.0/2.0);
                double t19685 = t19684+1.0;
                double t19686 = log(t19685);
                double t19687 = a1f*c*t19606;
                double t19688 = t19687+1.0;
                double t19689 = t19622-c0f*t19686*t19688*2.0;
                double t19690 = t19622-t19601*t19604*t19689;
                double t19691 = gcaa*gcaa;
                double t19692 = gamma_bb[index]*gcaa*t19656;
                double t19693 = t19692+1.0;
                double t19694 = gamma_bb[index]*gamma_bb[index];
                double t19695 = gamma_bb[index]*gcaa*t19656*2.0;
                double t19696 = t19653*t19691*t19694;
                double t19697 = t19695+t19696+1.0;
                double t19698 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t19699 = gamma_bb[index]*gcaa*t19656*3.0;
                double t19700 = gamma_bb[index]*gcaa*t19691*t19694*t19698;
                double t19701 = t19653*t19691*t19694*3.0;
                double t19702 = t19700+t19701+t19699+1.0;
                double t19705 = gcaa*t19656*2.0;
                double t19706 = gamma_bb[index]*t19653*t19691*2.0;
                double t19703 = t19705+t19706;
                double t19704 = 1/(t19702*t19702);
                double t19707 = 1/(t19697*t19697);
                double t19708 = gcaa*t19656*3.0;
                double t19709 = gamma_bb[index]*t19653*t19691*6.0;
                double t19710 = gcaa*t19691*t19694*t19698*3.0;
                double t19711 = t19710+t19708+t19709;
                double t19712 = pow(rho_b[index],5.0/3.0);
                double t19713 = C_k*t19712;
                double t19722 = tau_a[index]*1.0E20;
                double t19714 = t19713-t19722;
                double t19715 = ( (t19714 > 0.0) ?  1.0 : 0.0 ) ;
                double t19716 = t19715*1.0E20;
                double t19717 = 1/tau_b[index];
                double t19718 = tau_b[index]*1.0E20;
                double t19719 = -t19713+t19718;
                double t19720 = ( (t19719 > 0.0) ?  1.0 : 0.0 ) ;
                double t19721 = C_k*t19720*t19712*t19717;
                double t19723 = t19721+t19716-1.0;
                double t19724 = t19723*t19723;
                double t19725 = t19721+t19716+1.0;
                double t19726 = t19724*t19724;
                double t19727 = gx*gx;
                double t19728 = gamma_bb[index]*gx*t19656;
                double t19729 = t19728+1.0;
                double t19730 = 1/pow(rho_b[index],3.2E1/3.0);
                double t19731 = gamma_bb[index]*gx*t19656*2.0;
                double t19732 = t19653*t19727*t19694;
                double t19733 = t19731+t19732+1.0;
                double t19734 = gamma_bb[index]*gx*t19656*3.0;
                double t19735 = gamma_bb[index]*gx*t19727*t19694*t19698;
                double t19736 = t19653*t19727*t19694*3.0;
                double t19737 = t19734+t19735+t19736+1.0;
                double t19740 = gx*t19656*2.0;
                double t19741 = gamma_bb[index]*t19653*t19727*2.0;
                double t19738 = t19740+t19741;
                double t19739 = 1/(t19737*t19737);
                double t19742 = 1/(t19733*t19733);
                double t19743 = gx*t19656*3.0;
                double t19744 = gamma_bb[index]*t19653*t19727*6.0;
                double t19745 = gx*t19727*t19694*t19698*3.0;
                double t19746 = t19743+t19744+t19745;
                double t19747 = 1/(t19729*t19729);
                double t19748 = 1/t19733;
                double t19749 = 1/t19737;
                double t19750 = 1/(t19729*t19729*t19729);
                double t19751 = t19727*t19727;
                double t19752 = t19653*t19727*6.0;
                double t19753 = gamma_bb[index]*gx*t19727*t19698*6.0;
                double t19754 = t19752+t19753;
                double t19755 = t19738*t19738;
                double t19756 = 1/(t19733*t19733*t19733);
                double t19757 = t19746*t19746;
                double t19758 = 1/(t19737*t19737*t19737);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t19690+t19623*(t19640-t19604*t19651*t19645*t19646*(t19640- \
                   c0f*log((t19605*(1.0/2.0))/(b1f*t19626+b3f*t19627+b2f*c*t19624+b4f*t19628*t19585)+1.0)*(a1f*c*t19624+ \
                   1.0)*2.0)+(Aa*t19604*t19651*log((1.0/2.0)/(Aa*(b1a*t19626+b3a*t19627+b2a*c*t19624+b4a*t19628*t19585) \
                   )+1.0)*(t19645*t19646-1.0)*(a1a*c*t19624+1.0)*2.0)/d2fz0)+rho_a[index]*(t19601*t19604*(c0p*t19596* \
                   t19598*2.0-c0f*log((t19605*(1.0/2.0))/(b1f*t19583+b3f*t19584+b2f*c*t19581+b4f*t19585*t19586)+1.0)* \
                   (a1f*c*t19581+1.0)*2.0)-c0p*t19596*t19598*2.0))*(ccab1*1/(t19660*t19660)*t19652*t19653*(1.0/2.0)-(ccab2* \
                   t19652*t19653*(1.0/2.0))/t19664-ccab2*t19652*t19661*(t19670*t19670)*1/(t19664*t19664*t19664)*2.0+ccab2* \
                   (t19652*t19652)*t19661*t19653*t19673*(1.0/2.0)+ccab2*t19652*t19670*t19673*t19656*t19658*2.0-ccab1* \
                   gcab*1/(t19660*t19660*t19660)*t19652*t19653*t19658*(1.0/2.0)-(ccab3*gcab*t19652*t19653*t19658*(3.0/ \
                   2.0))/t19669-ccab3*gcab*t19652*t19661*(t19665*t19665)*t19658*1/(t19669*t19669*t19669)*2.0+ccab3*gcab* \
                   t19652*t19661*t19656*t19665*t19677*3.0+ccab3*gcab*t19652*t19661*t19658*t19677*(t19652*t19653*(3.0/ \
                   2.0)+gcab*t19652*t19653*t19658*(3.0/2.0)))+rho_b[index]*t19690*(ccaa1*t19653*t19691*1/(t19693*t19693) \
                   *2.0-(ccaa2*t19653*t19691*2.0)/t19697+ccaa2*t19730*t19707*(t19691*t19691)*t19694*2.0-(ccaa3*gamma_bb[index]* \
                   gcaa*t19691*t19698*6.0)/t19702-ccaa1*gamma_bb[index]*gcaa*t19691*1/(t19693*t19693*t19693)*t19698*2.0- \
                   ccaa2*(t19703*t19703)*t19653*t19691*t19694*1/(t19697*t19697*t19697)*2.0+ccaa2*gamma_bb[index]*t19703* \
                   t19653*t19707*t19691*4.0+ccaa3*gcaa*t19711*t19704*t19691*t19694*t19698*6.0+ccaa3*gamma_bb[index]*gcaa* \
                   t19704*t19691*t19694*t19698*(t19653*t19691*6.0+gamma_bb[index]*gcaa*t19691*t19698*6.0)-ccaa3*gamma_bb[index]* \
                   gcaa*1/(t19702*t19702*t19702)*(t19711*t19711)*t19691*t19694*t19698*2.0)+c0*pow(rho_b[index],4.0/3.0) \
                   *(X-1.0)*((t19723/t19725-t19723*t19724*1/(t19725*t19725*t19725)*2.0+t19723*1/(t19725*t19725*t19725* \
                   t19725*t19725)*t19726)*(cxnl1*t19653*t19727*t19747*2.0-cxnl2*t19653*t19727*t19748*2.0+cxnl2*t19730* \
                   t19742*t19751*t19694*2.0-cxnl2*t19653*t19727*t19755*t19756*t19694*2.0-cxnl1*gamma_bb[index]*gx*t19750* \
                   t19727*t19698*2.0-cxnl3*gamma_bb[index]*gx*t19727*t19749*t19698*6.0+cxnl2*gamma_bb[index]*t19742*t19653* \
                   t19727*t19738*4.0+cxnl3*gx*t19727*t19746*t19694*t19739*t19698*6.0+cxnl3*gamma_bb[index]*gx*t19727* \
                   t19754*t19694*t19739*t19698-cxnl3*gamma_bb[index]*gx*t19727*t19694*t19757*t19758*t19698*2.0)+cx1*t19653* \
                   t19727*t19747*2.0-cx2*t19653*t19727*t19748*2.0+cx2*t19730*t19742*t19751*t19694*2.0-cx2*t19653*t19727* \
                   t19755*t19756*t19694*2.0-cx1*gamma_bb[index]*gx*t19750*t19727*t19698*2.0-cx3*gamma_bb[index]*gx*t19727* \
                   t19749*t19698*6.0+cx2*gamma_bb[index]*t19742*t19653*t19727*t19738*4.0+cx3*gx*t19727*t19746*t19694* \
                   t19739*t19698*6.0+cx3*gamma_bb[index]*gx*t19727*t19754*t19694*t19739*t19698-cx3*gamma_bb[index]*gx* \
                   t19727*t19694*t19757*t19758*t19698*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t20898 = 1/pow(rho_b[index],1.0/3.0);
                double t20899 = c*t20898;
                double t20900 = sqrt(t20899);
                double t20901 = pow(t20899,3.0/2.0);
                double t20902 = c*c;
                double t20903 = 1/pow(rho_b[index],2.0/3.0);
                double t20904 = 1/c0p;
                double t20905 = b1p*t20900;
                double t20906 = b3p*t20901;
                double t20907 = b4p*t20902*t20903;
                double t20908 = b2p*c*t20898;
                double t20909 = t20905+t20906+t20907+t20908;
                double t20910 = 1/t20909;
                double t20911 = t20910*t20904*(1.0/2.0);
                double t20912 = t20911+1.0;
                double t20913 = log(t20912);
                double t20914 = a1p*c*t20898;
                double t20915 = t20914+1.0;
                double t20916 = gcaa*gcaa;
                double t20917 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20918 = 1/pow(rho_b[index],8.0/3.0);
                double t20919 = gamma_bb[index]*gcaa*t20918;
                double t20920 = t20919+1.0;
                double t20921 = gamma_bb[index]*gamma_bb[index];
                double t20922 = gamma_bb[index]*gcaa*t20918*2.0;
                double t20923 = t20921*t20916*t20917;
                double t20924 = t20922+t20923+1.0;
                double t20925 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20926 = gamma_bb[index]*gcaa*t20918*3.0;
                double t20927 = gamma_bb[index]*gcaa*t20921*t20916*t20925;
                double t20928 = t20921*t20916*t20917*3.0;
                double t20929 = t20926+t20927+t20928+1.0;
                double t20932 = gcaa*t20918*2.0;
                double t20933 = gamma_bb[index]*t20916*t20917*2.0;
                double t20930 = t20932+t20933;
                double t20931 = 1/(t20929*t20929);
                double t20934 = 1/(t20924*t20924);
                double t20935 = gcaa*t20918*3.0;
                double t20936 = gamma_bb[index]*t20916*t20917*6.0;
                double t20937 = gcaa*t20921*t20916*t20925*3.0;
                double t20938 = t20935+t20936+t20937;
                double t20939 = pow(rho_b[index],5.0/3.0);
                double t20940 = C_k*t20939;
                double t20949 = tau_a[index]*1.0E20;
                double t20941 = t20940-t20949;
                double t20942 = ( (t20941 > 0.0) ?  1.0 : 0.0 ) ;
                double t20943 = t20942*1.0E20;
                double t20944 = 1/tau_b[index];
                double t20945 = tau_b[index]*1.0E20;
                double t20946 = -t20940+t20945;
                double t20947 = ( (t20946 > 0.0) ?  1.0 : 0.0 ) ;
                double t20948 = C_k*t20944*t20947*t20939;
                double t20950 = t20943+t20948-1.0;
                double t20951 = t20950*t20950;
                double t20952 = t20943+t20948+1.0;
                double t20953 = t20951*t20951;
                double t20954 = gx*gx;
                double t20955 = gamma_bb[index]*gx*t20918;
                double t20956 = t20955+1.0;
                double t20957 = 1/pow(rho_b[index],3.2E1/3.0);
                double t20958 = gamma_bb[index]*gx*t20918*2.0;
                double t20959 = t20921*t20917*t20954;
                double t20960 = t20958+t20959+1.0;
                double t20961 = gamma_bb[index]*gx*t20918*3.0;
                double t20962 = gamma_bb[index]*gx*t20921*t20925*t20954;
                double t20963 = t20921*t20917*t20954*3.0;
                double t20964 = t20961+t20962+t20963+1.0;
                double t20967 = gx*t20918*2.0;
                double t20968 = gamma_bb[index]*t20917*t20954*2.0;
                double t20965 = t20967+t20968;
                double t20966 = 1/(t20964*t20964);
                double t20969 = 1/(t20960*t20960);
                double t20970 = gx*t20918*3.0;
                double t20971 = gamma_bb[index]*t20917*t20954*6.0;
                double t20972 = gx*t20921*t20925*t20954*3.0;
                double t20973 = t20970+t20971+t20972;
                double t20974 = 1/(t20956*t20956);
                double t20975 = 1/t20960;
                double t20976 = 1/t20964;
                double t20977 = 1/(t20956*t20956*t20956);
                double t20978 = t20954*t20954;
                double t20979 = t20917*t20954*6.0;
                double t20980 = gamma_bb[index]*gx*t20925*t20954*6.0;
                double t20981 = t20980+t20979;
                double t20982 = t20965*t20965;
                double t20983 = 1/(t20960*t20960*t20960);
                double t20984 = t20973*t20973;
                double t20985 = 1/(t20964*t20964*t20964);
                v_gamma_bb_gamma_bb_[index] = rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t20900+b3f*t20901+b2f*c*t20898+b4f*t20902*t20903))+1.0)*(a1f*c*t20898+1.0)*2.0-c0p*t20913*t20915*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t20913*t20915*2.0)*(ccaa1*1/(t20920*t20920)*t20916*t20917*2.0-(ccaa2*t20916* \
                   t20917*2.0)/t20924+ccaa2*t20921*(t20916*t20916)*t20934*t20957*2.0-ccaa1*gamma_bb[index]*gcaa*1/(t20920* \
                   t20920*t20920)*t20916*t20925*2.0-(ccaa3*gamma_bb[index]*gcaa*t20916*t20925*6.0)/t20929-ccaa2*t20921* \
                   (t20930*t20930)*1/(t20924*t20924*t20924)*t20916*t20917*2.0+ccaa2*gamma_bb[index]*t20930*t20916*t20934* \
                   t20917*4.0+ccaa3*gcaa*t20921*t20931*t20916*t20925*t20938*6.0+ccaa3*gamma_bb[index]*gcaa*t20921*t20931* \
                   t20916*t20925*(t20916*t20917*6.0+gamma_bb[index]*gcaa*t20916*t20925*6.0)-ccaa3*gamma_bb[index]*gcaa* \
                   t20921*t20916*t20925*1/(t20929*t20929*t20929)*(t20938*t20938)*2.0)+c0*pow(rho_b[index],4.0/3.0)*(X- \
                   1.0)*((t20950/t20952-t20950*t20951*1/(t20952*t20952*t20952)*2.0+t20950*1/(t20952*t20952*t20952*t20952* \
                   t20952)*t20953)*(cxnl1*t20917*t20954*t20974*2.0-cxnl2*t20917*t20954*t20975*2.0+cxnl2*t20921*t20957* \
                   t20969*t20978*2.0-cxnl2*t20921*t20917*t20954*t20982*t20983*2.0-cxnl1*gamma_bb[index]*gx*t20925*t20954* \
                   t20977*2.0-cxnl3*gamma_bb[index]*gx*t20925*t20954*t20976*6.0+cxnl2*gamma_bb[index]*t20917*t20954*t20965* \
                   t20969*4.0+cxnl3*gx*t20921*t20925*t20954*t20973*t20966*6.0+cxnl3*gamma_bb[index]*gx*t20921*t20925* \
                   t20954*t20981*t20966-cxnl3*gamma_bb[index]*gx*t20921*t20925*t20954*t20984*t20985*2.0)+cx1*t20917*t20954* \
                   t20974*2.0-cx2*t20917*t20954*t20975*2.0+cx2*t20921*t20957*t20969*t20978*2.0-cx2*t20921*t20917*t20954* \
                   t20982*t20983*2.0-cx1*gamma_bb[index]*gx*t20925*t20954*t20977*2.0-cx3*gamma_bb[index]*gx*t20925*t20954* \
                   t20976*6.0+cx2*gamma_bb[index]*t20917*t20954*t20965*t20969*4.0+cx3*gx*t20921*t20925*t20954*t20973* \
                   t20966*6.0+cx3*gamma_bb[index]*gx*t20921*t20925*t20954*t20981*t20966-cx3*gamma_bb[index]*gx*t20921* \
                   t20925*t20954*t20984*t20985*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19760 = 1/pow(rho_a[index],8.0/3.0);
                double t19761 = gamma_aa[index]*gamma_aa[index];
                double t19762 = gx*gx;
                double t19763 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t19764 = 1/pow(rho_a[index],1.6E1/3.0);
                double t19765 = pow(rho_a[index],5.0/3.0);
                double t19766 = C_k*t19765;
                double t19767 = tau_a[index]*1.0E20;
                double t19768 = -t19766+t19767;
                double t19769 = 1/tau_a[index];
                double t19770 = 0.0 ;
                double t19771 = C_k*C_k;
                double t19772 = pow(rho_a[index],7.0/3.0);
                double t19773 = pow(rho_a[index],2.0/3.0);
                double t19774 = 0.0 ;
                double t19775 = 1/(tau_a[index]*tau_a[index]);
                double t19776 = ( (t19768 > 0.0) ?  1.0 : 0.0 ) ;
                double t19777 = C_k*t19765*t19776*t19769;
                double t19778 = t19766-t19767;
                double t19779 = ( (t19778 > 0.0) ?  1.0 : 0.0 ) ;
                double t19780 = t19779*1.0E20;
                double t19781 = t19780+t19777+1.0;
                double t19782 = 1/(t19781*t19781);
                double t19783 = C_k*t19770*t19773*(5.0E40/3.0);
                double t19784 = t19771*t19772*t19774*t19775*(5.0/3.0);
                double t19785 = C_k*t19773*t19774*t19769*(5.0E20/3.0);
                double t19788 = t19770*t19771*t19772*t19769*(5.0E20/3.0);
                double t19789 = C_k*t19773*t19775*t19776*(5.0/3.0);
                double t19786 = t19783+t19784+t19785-t19788-t19789;
                double t19787 = t19780+t19777-1.0;
                double t19790 = t19787*t19787;
                double t19791 = t19790*t19790;
                double t19792 = t19774*1.0E40;
                double t19793 = C_k*t19765*t19775*t19776;
                double t19799 = C_k*t19765*t19774*t19769*1.0E20;
                double t19794 = t19792+t19793-t19799;
                double t19795 = C_k*t19773*t19774*(5.0E20/3.0);
                double t19796 = C_k*t19773*t19776*t19769*(5.0/3.0);
                double t19800 = t19771*t19772*t19774*t19769*(5.0/3.0);
                double t19797 = -t19800+t19795+t19796;
                double t19798 = 1/(t19781*t19781*t19781);
                double t19801 = 1/(t19781*t19781*t19781*t19781);
                double t19802 = 1/(t19781*t19781*t19781*t19781*t19781);
                double t19803 = 1/(t19781*t19781*t19781*t19781*t19781*t19781);
                double t19804 = gamma_aa[index]*gx*t19760;
                double t19805 = t19804+1.0;
                double t19806 = 1/t19805;
                double t19807 = gamma_aa[index]*gx*t19760*3.0;
                double t19808 = gamma_aa[index]*gx*t19761*t19762*t19763;
                double t19809 = t19761*t19762*t19764*3.0;
                double t19810 = t19807+t19808+t19809+1.0;
                double t19811 = 1/t19810;
                double t19812 = gamma_aa[index]*gx*t19760*2.0;
                double t19813 = t19761*t19762*t19764;
                double t19814 = t19812+t19813+1.0;
                double t19815 = 1/t19814;
                double t19816 = 1/pow(rho_a[index],1.9E1/3.0);
                double t19817 = 1/pow(rho_a[index],1.1E1/3.0);
                double t19818 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t19819 = cxnl1*gamma_aa[index]*gx*t19760*t19806;
                double t19820 = cxnl3*gamma_aa[index]*gx*t19811*t19761*t19762*t19763;
                double t19821 = cxnl2*t19761*t19815*t19762*t19764;
                double t19822 = cxnl0+t19820+t19821+t19819;
                double t19823 = 1/t19781;
                double t19824 = t19823*t19794;
                double t19825 = t19801*t19790*t19794*t19787*6.0;
                double t19826 = t19802*t19791*t19794*5.0;
                double t19827 = t19824+t19825+t19826-t19782*t19794*t19787-t19790*t19794*t19798*6.0-t19803*t19791* \
                   t19794*t19787*5.0;
                v_rho_a_tau_a_[index] = -(c0*pow(rho_a[index],4.0/3.0)*(t19822*(t19823*t19786+t19802*t19791*t19786* \
                   5.0+t19782*t19794*t19797*2.0-t19782*t19786*t19787-t19790*t19786*t19798*6.0-t19801*t19790*t19794*t19797* \
                   3.6E1+t19801*t19790*t19786*t19787*6.0+t19803*t19791*t19794*t19797*5.0E1-t19803*t19791*t19786*t19787* \
                   5.0+t19794*t19787*t19797*t19798*1.0E1-1/(t19781*t19781*t19781*t19781*t19781*t19781*t19781)*t19791* \
                   t19794*t19787*t19797*3.0E1+t19802*t19790*t19794*t19787*t19797*4.0)+t19827*(cxnl1*gamma_aa[index]*gx* \
                   t19806*t19817*(8.0/3.0)+cxnl2*t19761*t19815*t19762*t19816*(1.6E1/3.0)-cxnl1*1/(t19805*t19805)*t19761* \
                   t19762*t19816*(8.0/3.0)-cxnl2*1/(t19814*t19814)*t19761*t19762*t19764*(gamma_aa[index]*gx*t19817*(1.6E1/ \
                   3.0)+t19761*t19762*t19816*(1.6E1/3.0))+cxnl3*gamma_aa[index]*gx*t19811*t19761*t19762*t19818*8.0-cxnl3* \
                   gamma_aa[index]*gx*1/(t19810*t19810)*t19761*t19762*t19763*(gamma_aa[index]*gx*t19817*8.0+t19761*t19762* \
                   t19816*1.6E1+gamma_aa[index]*gx*t19761*t19762*t19818*8.0)))-c0*pow(rho_a[index],1.0/3.0)*t19822*t19827* \
                   (4.0/3.0))*(X-1.0);
            } else if (rho_a[index] > cutoff_) {
                double t22039 = 1/pow(rho_a[index],8.0/3.0);
                double t22040 = gamma_aa[index]*gamma_aa[index];
                double t22041 = gx*gx;
                double t22042 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t22043 = 1/pow(rho_a[index],1.6E1/3.0);
                double t22044 = pow(rho_a[index],5.0/3.0);
                double t22045 = C_k*t22044;
                double t22046 = tau_a[index]*1.0E20;
                double t22047 = -t22045+t22046;
                double t22048 = 1/tau_a[index];
                double t22049 = 0.0 ;
                double t22050 = C_k*C_k;
                double t22051 = pow(rho_a[index],7.0/3.0);
                double t22052 = pow(rho_a[index],2.0/3.0);
                double t22053 = 0.0 ;
                double t22054 = 1/(tau_a[index]*tau_a[index]);
                double t22055 = ( (t22047 > 0.0) ?  1.0 : 0.0 ) ;
                double t22056 = C_k*t22044*t22055*t22048;
                double t22057 = t22045-t22046;
                double t22058 = ( (t22057 > 0.0) ?  1.0 : 0.0 ) ;
                double t22059 = t22058*1.0E20;
                double t22060 = t22056+t22059+1.0;
                double t22061 = 1/(t22060*t22060);
                double t22062 = C_k*t22052*t22049*(5.0E40/3.0);
                double t22063 = t22050*t22051*t22053*t22054*(5.0/3.0);
                double t22064 = C_k*t22052*t22053*t22048*(5.0E20/3.0);
                double t22067 = t22050*t22051*t22048*t22049*(5.0E20/3.0);
                double t22068 = C_k*t22052*t22054*t22055*(5.0/3.0);
                double t22065 = t22062+t22063+t22064-t22067-t22068;
                double t22066 = t22056+t22059-1.0;
                double t22069 = t22066*t22066;
                double t22070 = t22069*t22069;
                double t22071 = t22053*1.0E40;
                double t22072 = C_k*t22044*t22054*t22055;
                double t22078 = C_k*t22044*t22053*t22048*1.0E20;
                double t22073 = t22071+t22072-t22078;
                double t22074 = C_k*t22052*t22053*(5.0E20/3.0);
                double t22075 = C_k*t22052*t22055*t22048*(5.0/3.0);
                double t22079 = t22050*t22051*t22053*t22048*(5.0/3.0);
                double t22076 = t22074+t22075-t22079;
                double t22077 = 1/(t22060*t22060*t22060);
                double t22080 = 1/(t22060*t22060*t22060*t22060);
                double t22081 = 1/(t22060*t22060*t22060*t22060*t22060);
                double t22082 = 1/(t22060*t22060*t22060*t22060*t22060*t22060);
                double t22083 = gamma_aa[index]*gx*t22039;
                double t22084 = t22083+1.0;
                double t22085 = 1/t22084;
                double t22086 = gamma_aa[index]*gx*t22039*3.0;
                double t22087 = gamma_aa[index]*gx*t22040*t22041*t22042;
                double t22088 = t22040*t22041*t22043*3.0;
                double t22089 = t22086+t22087+t22088+1.0;
                double t22090 = 1/t22089;
                double t22091 = gamma_aa[index]*gx*t22039*2.0;
                double t22092 = t22040*t22041*t22043;
                double t22093 = t22091+t22092+1.0;
                double t22094 = 1/t22093;
                double t22095 = 1/pow(rho_a[index],1.9E1/3.0);
                double t22096 = 1/pow(rho_a[index],1.1E1/3.0);
                double t22097 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t22098 = 1/t22060;
                double t22099 = X-1.0;
                double t22100 = cxnl1*gamma_aa[index]*gx*t22039*t22085;
                double t22101 = cxnl3*gamma_aa[index]*gx*t22040*t22041*t22042*t22090;
                double t22102 = cxnl2*t22040*t22041*t22043*t22094;
                double t22103 = cxnl0+t22100+t22101+t22102;
                double t22104 = t22073*t22098;
                double t22105 = t22080*t22073*t22066*t22069*6.0;
                double t22106 = t22070*t22081*t22073*5.0;
                double t22107 = t22104+t22105+t22106-t22061*t22073*t22066-t22073*t22077*t22069*6.0-t22070*t22073* \
                   t22082*t22066*5.0;
                v_rho_a_tau_a_[index] = -c0*pow(rho_a[index],4.0/3.0)*t22099*(t22103*(t22065*t22098+t22070*t22081* \
                   t22065*5.0+t22061*t22073*t22076*2.0-t22061*t22065*t22066-t22065*t22077*t22069*6.0+t22070*t22073*t22082* \
                   t22076*5.0E1-t22070*t22082*t22065*t22066*5.0-t22080*t22073*t22076*t22069*3.6E1+t22080*t22065*t22066* \
                   t22069*6.0+t22073*t22066*t22076*t22077*1.0E1-1/(t22060*t22060*t22060*t22060*t22060*t22060*t22060)* \
                   t22070*t22073*t22066*t22076*3.0E1+t22081*t22073*t22066*t22076*t22069*4.0)+t22107*(cxnl1*gamma_aa[index]* \
                   gx*t22085*t22096*(8.0/3.0)+cxnl2*t22040*t22041*t22094*t22095*(1.6E1/3.0)-cxnl1*t22040*t22041*1/(t22084* \
                   t22084)*t22095*(8.0/3.0)-cxnl2*t22040*t22041*t22043*1/(t22093*t22093)*(gamma_aa[index]*gx*t22096*(1.6E1/ \
                   3.0)+t22040*t22041*t22095*(1.6E1/3.0))+cxnl3*gamma_aa[index]*gx*t22040*t22041*t22090*t22097*8.0-cxnl3* \
                   gamma_aa[index]*gx*t22040*t22041*t22042*1/(t22089*t22089)*(gamma_aa[index]*gx*t22096*8.0+t22040*t22041* \
                   t22095*1.6E1+gamma_aa[index]*gx*t22040*t22041*t22097*8.0)))+c0*pow(rho_a[index],1.0/3.0)*t22103*t22107* \
                   t22099*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19830 = gamma_bb[index]*gamma_bb[index];
                double t19831 = gx*gx;
                double t19832 = 1/pow(rho_b[index],8.0/3.0);
                double t19833 = 1/pow(rho_b[index],1.6E1/3.0);
                double t19834 = 1/pow(rho_b[index],1.9E1/3.0);
                double t19835 = gamma_bb[index]*gx*t19832;
                double t19836 = t19835+1.0;
                double t19837 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t19838 = 1/pow(rho_b[index],1.1E1/3.0);
                double t19839 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t19840 = gamma_bb[index]*gx*t19832*3.0;
                double t19841 = gamma_bb[index]*gx*t19830*t19831*t19837;
                double t19842 = t19830*t19831*t19833*3.0;
                double t19843 = t19840+t19841+t19842+1.0;
                double t19844 = gamma_bb[index]*gx*t19832*2.0;
                double t19845 = t19830*t19831*t19833;
                double t19846 = t19844+t19845+1.0;
                double t19847 = tau_a[index]*1.0E20;
                double t19848 = pow(rho_b[index],5.0/3.0);
                double t19849 = C_k*t19848;
                double t19850 = -t19847+t19849;
                double t19851 = ( (t19850 > 0.0) ?  1.0 : 0.0 ) ;
                double t19852 = t19851*1.0E20;
                double t19853 = 1/tau_b[index];
                double t19854 = tau_b[index]*1.0E20;
                double t19855 = t19854-t19849;
                double t19856 = ( (t19855 > 0.0) ?  1.0 : 0.0 ) ;
                double t19857 = C_k*t19853*t19856*t19848;
                double t19858 = t19852+t19857-1.0;
                double t19859 = t19852+t19857+1.0;
                double t19860 = t19847-t19849;
                double t19861 = 0.0 ;
                double t19862 = t19858*t19858;
                double t19863 = t19862*t19862;
                double t19864 = 1/t19836;
                double t19865 = 1/t19843;
                double t19866 = 1/t19846;
                double t19867 = pow(rho_b[index],2.0/3.0);
                double t19868 = 1/(t19859*t19859);
                double t19869 = C_k*t19861*t19867*(5.0E20/3.0);
                double t19870 = C_k*C_k;
                double t19871 = pow(rho_b[index],7.0/3.0);
                double t19872 = 0.0 ;
                double t19873 = C_k*t19853*t19856*t19867*(5.0/3.0);
                double t19876 = t19870*t19853*t19871*t19872*(5.0/3.0);
                double t19874 = t19873-t19876+t19869;
                double t19875 = 1/(t19859*t19859*t19859*t19859);
                double t19877 = 1/(t19859*t19859*t19859*t19859*t19859);
                double t19878 = 1/(t19859*t19859*t19859*t19859*t19859*t19859);
                double t19879 = 1/t19859;
                double t19880 = 1/(t19859*t19859*t19859);
                double t19881 = 0.0 ;
                double t19882 = cxnl1*gamma_bb[index]*gx*t19832*t19864;
                double t19883 = cxnl3*gamma_bb[index]*gx*t19830*t19831*t19837*t19865;
                double t19884 = cxnl2*t19830*t19831*t19833*t19866;
                double t19885 = cxnl0+t19882+t19883+t19884;
                double t19886 = t19861*t19862*t19875*t19858*6.0E40;
                double t19887 = t19861*t19863*t19877*5.0E40;
                double t19888 = t19861*t19879*1.0E40;
                double t19889 = t19886+t19887+t19888-t19861*t19862*t19880*6.0E40-t19861*t19858*t19868*1.0E40-t19861* \
                   t19863*t19858*t19878*5.0E40;
                v_rho_b_tau_a_[index] = -(c0*pow(rho_b[index],4.0/3.0)*(t19885*(t19861*t19874*t19868*2.0E40-t19861* \
                   t19862*t19874*t19875*3.6E41+t19861*t19880*t19874*t19858*1.0E41+t19861*t19863*t19874*t19878*5.0E41+ \
                   C_k*t19881*t19867*t19879*(5.0E40/3.0)-t19861*t19863*t19874*t19858*1/(t19859*t19859*t19859*t19859*t19859* \
                   t19859*t19859)*3.0E41-C_k*t19862*t19880*t19881*t19867*1.0E41+C_k*t19863*t19881*t19867*t19877*(2.5E41/ \
                   3.0)-C_k*t19881*t19858*t19867*t19868*(5.0E40/3.0)+t19861*t19862*t19874*t19858*t19877*4.0E40+C_k*t19862* \
                   t19881*t19875*t19858*t19867*1.0E41-C_k*t19863*t19881*t19858*t19867*t19878*(2.5E41/3.0))+t19889*(cxnl1* \
                   gamma_bb[index]*gx*t19864*t19838*(8.0/3.0)+cxnl2*t19830*t19831*t19834*t19866*(1.6E1/3.0)-cxnl1*t19830* \
                   t19831*t19834*1/(t19836*t19836)*(8.0/3.0)-cxnl2*t19830*t19831*t19833*1/(t19846*t19846)*(gamma_bb[index]* \
                   gx*t19838*(1.6E1/3.0)+t19830*t19831*t19834*(1.6E1/3.0))+cxnl3*gamma_bb[index]*gx*t19830*t19831*t19865* \
                   t19839*8.0-cxnl3*gamma_bb[index]*gx*t19830*t19831*1/(t19843*t19843)*t19837*(gamma_bb[index]*gx*t19838* \
                   8.0+t19830*t19831*t19834*1.6E1+gamma_bb[index]*gx*t19830*t19831*t19839*8.0)))-c0*pow(rho_b[index],1.0/ \
                   3.0)*t19885*t19889*(4.0/3.0))*(X-1.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t20989 = gamma_bb[index]*gamma_bb[index];
                double t20990 = gx*gx;
                double t20991 = 1/pow(rho_b[index],8.0/3.0);
                double t20992 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20993 = 1/pow(rho_b[index],1.9E1/3.0);
                double t20994 = gamma_bb[index]*gx*t20991;
                double t20995 = t20994+1.0;
                double t20996 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20997 = 1/pow(rho_b[index],1.1E1/3.0);
                double t20998 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t20999 = gamma_bb[index]*gx*t20991*3.0;
                double t21000 = gamma_bb[index]*gx*t20990*t20996*t20989;
                double t21001 = t20990*t20992*t20989*3.0;
                double t21002 = t20999+t21000+t21001+1.0;
                double t21003 = gamma_bb[index]*gx*t20991*2.0;
                double t21004 = t20990*t20992*t20989;
                double t21005 = t21003+t21004+1.0;
                double t21006 = tau_a[index]*1.0E20;
                double t21007 = pow(rho_b[index],5.0/3.0);
                double t21008 = C_k*t21007;
                double t21009 = -t21006+t21008;
                double t21010 = ( (t21009 > 0.0) ?  1.0 : 0.0 ) ;
                double t21011 = t21010*1.0E20;
                double t21012 = 1/tau_b[index];
                double t21013 = tau_b[index]*1.0E20;
                double t21014 = t21013-t21008;
                double t21015 = ( (t21014 > 0.0) ?  1.0 : 0.0 ) ;
                double t21016 = C_k*t21012*t21015*t21007;
                double t21017 = t21011+t21016-1.0;
                double t21018 = t21011+t21016+1.0;
                double t21019 = t21006-t21008;
                double t21020 = 0.0 ;
                double t21021 = t21017*t21017;
                double t21022 = t21021*t21021;
                double t21023 = 1/t20995;
                double t21024 = 1/t21002;
                double t21025 = 1/t21005;
                double t21026 = pow(rho_b[index],2.0/3.0);
                double t21027 = 1/(t21018*t21018);
                double t21028 = C_k*t21020*t21026*(5.0E20/3.0);
                double t21029 = C_k*C_k;
                double t21030 = pow(rho_b[index],7.0/3.0);
                double t21031 = 0.0 ;
                double t21032 = C_k*t21012*t21015*t21026*(5.0/3.0);
                double t21035 = t21012*t21030*t21031*t21029*(5.0/3.0);
                double t21033 = t21032-t21035+t21028;
                double t21034 = 1/(t21018*t21018*t21018*t21018);
                double t21036 = 1/(t21018*t21018*t21018*t21018*t21018);
                double t21037 = 1/(t21018*t21018*t21018*t21018*t21018*t21018);
                double t21038 = 1/t21018;
                double t21039 = 1/(t21018*t21018*t21018);
                double t21040 = 0.0 ;
                double t21041 = X-1.0;
                double t21042 = cxnl1*gamma_bb[index]*gx*t20991*t21023;
                double t21043 = cxnl3*gamma_bb[index]*gx*t20990*t20996*t20989*t21024;
                double t21044 = cxnl2*t20990*t20992*t20989*t21025;
                double t21045 = cxnl0+t21042+t21043+t21044;
                double t21046 = t21020*t21038*1.0E40;
                double t21047 = t21020*t21021*t21034*t21017*6.0E40;
                double t21048 = t21020*t21022*t21036*5.0E40;
                double t21049 = t21046+t21047+t21048-t21020*t21021*t21039*6.0E40-t21020*t21017*t21027*1.0E40-t21020* \
                   t21022*t21017*t21037*5.0E40;
                v_rho_b_tau_a_[index] = -c0*pow(rho_b[index],4.0/3.0)*t21041*(t21045*(t21020*t21033*t21027*2.0E40- \
                   t21020*t21021*t21033*t21034*3.6E41+t21020*t21022*t21033*t21037*5.0E41+t21020*t21033*t21017*t21039* \
                   1.0E41+C_k*t21040*t21026*t21038*(5.0E40/3.0)-t21020*t21022*t21033*t21017*1/(t21018*t21018*t21018*t21018* \
                   t21018*t21018*t21018)*3.0E41+C_k*t21022*t21040*t21026*t21036*(2.5E41/3.0)-C_k*t21021*t21040*t21026* \
                   t21039*1.0E41-C_k*t21040*t21017*t21026*t21027*(5.0E40/3.0)+t21020*t21021*t21033*t21017*t21036*4.0E40+ \
                   C_k*t21021*t21040*t21034*t21017*t21026*1.0E41-C_k*t21022*t21040*t21017*t21026*t21037*(2.5E41/3.0)) \
                   +t21049*(cxnl1*gamma_bb[index]*gx*t20997*t21023*(8.0/3.0)+cxnl2*t20990*t20993*t20989*t21025*(1.6E1/ \
                   3.0)-cxnl1*t20990*t20993*1/(t20995*t20995)*t20989*(8.0/3.0)-cxnl2*t20990*t20992*t20989*1/(t21005*t21005) \
                   *(gamma_bb[index]*gx*t20997*(1.6E1/3.0)+t20990*t20993*t20989*(1.6E1/3.0))+cxnl3*gamma_bb[index]*gx* \
                   t20990*t20989*t20998*t21024*8.0-cxnl3*gamma_bb[index]*gx*t20990*t20996*t20989*1/(t21002*t21002)*(gamma_bb[index]* \
                   gx*t20997*8.0+t20990*t20993*t20989*1.6E1+gamma_bb[index]*gx*t20990*t20989*t20998*8.0)))+c0*pow(rho_b[index],1.0/ \
                   3.0)*t21041*t21045*t21049*(4.0/3.0);
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19891 = 1/pow(rho_b[index],8.0/3.0);
                double t19892 = gamma_bb[index]*gamma_bb[index];
                double t19893 = gx*gx;
                double t19894 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t19895 = 1/pow(rho_b[index],1.6E1/3.0);
                double t19896 = pow(rho_b[index],5.0/3.0);
                double t19897 = C_k*t19896;
                double t19898 = 1/tau_b[index];
                double t19899 = tau_b[index]*1.0E20;
                double t19900 = -t19897+t19899;
                double t19901 = C_k*C_k;
                double t19902 = pow(rho_b[index],7.0/3.0);
                double t19903 = 0.0 ;
                double t19904 = pow(rho_b[index],2.0/3.0);
                double t19905 = 1/(tau_b[index]*tau_b[index]);
                double t19906 = ( (t19900 > 0.0) ?  1.0 : 0.0 ) ;
                double t19911 = tau_a[index]*1.0E20;
                double t19907 = -t19911+t19897;
                double t19908 = ( (t19907 > 0.0) ?  1.0 : 0.0 ) ;
                double t19909 = t19908*1.0E20;
                double t19910 = C_k*t19906*t19896*t19898;
                double t19912 = t19910+t19909+1.0;
                double t19913 = 0.0 ;
                double t19914 = t19901*t19902*t19903*t19905*(5.0/3.0);
                double t19915 = C_k*t19903*t19904*t19898*(5.0E20/3.0);
                double t19916 = 1/(t19912*t19912);
                double t19917 = t19910+t19909-1.0;
                double t19918 = t19917*t19917;
                double t19920 = t19901*t19902*t19913*t19898*(5.0E20/3.0);
                double t19921 = C_k*t19904*t19905*t19906*(5.0/3.0);
                double t19919 = -t19920-t19921+t19914+t19915;
                double t19922 = t19918*t19918;
                double t19923 = t19920+t19921-t19914-t19915;
                double t19924 = C_k*t19905*t19906*t19896;
                double t19925 = t19911-t19897;
                double t19926 = 0.0 ;
                double t19927 = C_k*t19904*t19926*(5.0E20/3.0);
                double t19928 = C_k*t19904*t19906*t19898*(5.0/3.0);
                double t19933 = t19901*t19902*t19903*t19898*(5.0/3.0);
                double t19929 = -t19933+t19927+t19928;
                double t19930 = 1/(t19912*t19912*t19912);
                double t19932 = C_k*t19903*t19896*t19898*1.0E20;
                double t19931 = -t19932+t19924;
                double t19934 = 1/(t19912*t19912*t19912*t19912);
                double t19935 = t19932-t19924;
                double t19936 = 1/(t19912*t19912*t19912*t19912*t19912);
                double t19937 = 1/(t19912*t19912*t19912*t19912*t19912*t19912);
                double t19938 = 1/t19912;
                double t19939 = gamma_bb[index]*gx*t19891;
                double t19940 = t19939+1.0;
                double t19941 = 1/t19940;
                double t19942 = gamma_bb[index]*gx*t19891*3.0;
                double t19943 = gamma_bb[index]*gx*t19892*t19893*t19894;
                double t19944 = t19892*t19893*t19895*3.0;
                double t19945 = t19942+t19943+t19944+1.0;
                double t19946 = 1/t19945;
                double t19947 = gamma_bb[index]*gx*t19891*2.0;
                double t19948 = t19892*t19893*t19895;
                double t19949 = t19947+t19948+1.0;
                double t19950 = 1/t19949;
                double t19951 = 1/pow(rho_b[index],1.9E1/3.0);
                double t19952 = 1/pow(rho_b[index],1.1E1/3.0);
                double t19953 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t19954 = cxnl1*gamma_bb[index]*gx*t19941*t19891;
                double t19955 = cxnl3*gamma_bb[index]*gx*t19892*t19946*t19893*t19894;
                double t19956 = cxnl2*t19950*t19892*t19893*t19895;
                double t19957 = cxnl0+t19954+t19955+t19956;
                double t19958 = t19935*t19938;
                double t19959 = t19934*t19917*t19935*t19918*6.0;
                double t19960 = t19922*t19935*t19936*5.0;
                double t19961 = t19960+t19958+t19959-t19930*t19935*t19918*6.0-t19916*t19917*t19935-t19922*t19917* \
                   t19935*t19937*5.0;
                v_rho_b_tau_b_[index] = -(c0*pow(rho_b[index],4.0/3.0)*(t19957*(t19919*t19938-t19922*t19923*t19936* \
                   5.0-t19930*t19918*t19919*6.0+t19931*t19916*t19929*2.0-t19916*t19917*t19919+t19930*t19931*t19917*t19929* \
                   1.0E1+t19922*t19923*t19917*t19937*5.0-t19922*t19935*t19937*t19929*5.0E1+t19934*t19917*t19918*t19919* \
                   6.0+t19934*t19935*t19918*t19929*3.6E1+1/(t19912*t19912*t19912*t19912*t19912*t19912*t19912)*t19922* \
                   t19917*t19935*t19929*3.0E1-t19917*t19935*t19918*t19936*t19929*4.0)-t19961*(cxnl1*gamma_bb[index]*gx* \
                   t19941*t19952*(8.0/3.0)+cxnl2*t19950*t19951*t19892*t19893*(1.6E1/3.0)-cxnl1*1/(t19940*t19940)*t19951* \
                   t19892*t19893*(8.0/3.0)-cxnl2*t19892*t19893*t19895*1/(t19949*t19949)*(gamma_bb[index]*gx*t19952*(1.6E1/ \
                   3.0)+t19951*t19892*t19893*(1.6E1/3.0))+cxnl3*gamma_bb[index]*gx*t19953*t19892*t19946*t19893*8.0-cxnl3* \
                   gamma_bb[index]*gx*1/(t19945*t19945)*t19892*t19893*t19894*(gamma_bb[index]*gx*t19952*8.0+t19951*t19892* \
                   t19893*1.6E1+gamma_bb[index]*gx*t19953*t19892*t19893*8.0)))+c0*pow(rho_b[index],1.0/3.0)*t19961*t19957* \
                   (4.0/3.0))*(X-1.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t21051 = 1/pow(rho_b[index],8.0/3.0);
                double t21052 = gamma_bb[index]*gamma_bb[index];
                double t21053 = gx*gx;
                double t21054 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t21055 = 1/pow(rho_b[index],1.6E1/3.0);
                double t21056 = pow(rho_b[index],5.0/3.0);
                double t21057 = C_k*t21056;
                double t21058 = 1/tau_b[index];
                double t21059 = tau_b[index]*1.0E20;
                double t21060 = -t21057+t21059;
                double t21061 = C_k*C_k;
                double t21062 = pow(rho_b[index],7.0/3.0);
                double t21063 = 0.0 ;
                double t21064 = pow(rho_b[index],2.0/3.0);
                double t21065 = 1/(tau_b[index]*tau_b[index]);
                double t21066 = ( (t21060 > 0.0) ?  1.0 : 0.0 ) ;
                double t21071 = tau_a[index]*1.0E20;
                double t21067 = -t21071+t21057;
                double t21068 = ( (t21067 > 0.0) ?  1.0 : 0.0 ) ;
                double t21069 = t21068*1.0E20;
                double t21070 = C_k*t21056*t21066*t21058;
                double t21072 = t21070+t21069+1.0;
                double t21073 = 0.0 ;
                double t21074 = t21061*t21062*t21063*t21065*(5.0/3.0);
                double t21075 = C_k*t21063*t21064*t21058*(5.0E20/3.0);
                double t21076 = 1/(t21072*t21072);
                double t21077 = t21070+t21069-1.0;
                double t21078 = t21077*t21077;
                double t21080 = t21061*t21062*t21073*t21058*(5.0E20/3.0);
                double t21081 = C_k*t21064*t21065*t21066*(5.0/3.0);
                double t21079 = -t21080-t21081+t21074+t21075;
                double t21082 = t21078*t21078;
                double t21083 = t21080+t21081-t21074-t21075;
                double t21084 = C_k*t21063*t21056*t21058*1.0E20;
                double t21092 = C_k*t21056*t21065*t21066;
                double t21085 = -t21092+t21084;
                double t21086 = t21071-t21057;
                double t21087 = 0.0 ;
                double t21088 = C_k*t21064*t21087*(5.0E20/3.0);
                double t21089 = C_k*t21064*t21066*t21058*(5.0/3.0);
                double t21093 = t21061*t21062*t21063*t21058*(5.0/3.0);
                double t21090 = -t21093+t21088+t21089;
                double t21091 = 1/(t21072*t21072*t21072);
                double t21094 = 1/(t21072*t21072*t21072*t21072);
                double t21095 = 1/(t21072*t21072*t21072*t21072*t21072);
                double t21096 = 1/(t21072*t21072*t21072*t21072*t21072*t21072);
                double t21097 = 1/t21072;
                double t21098 = gamma_bb[index]*gx*t21051;
                double t21099 = t21098+1.0;
                double t21100 = 1/t21099;
                double t21101 = gamma_bb[index]*gx*t21051*3.0;
                double t21102 = gamma_bb[index]*gx*t21052*t21053*t21054;
                double t21103 = t21052*t21053*t21055*3.0;
                double t21104 = t21101+t21102+t21103+1.0;
                double t21105 = 1/t21104;
                double t21106 = gamma_bb[index]*gx*t21051*2.0;
                double t21107 = t21052*t21053*t21055;
                double t21108 = t21106+t21107+1.0;
                double t21109 = 1/t21108;
                double t21110 = 1/pow(rho_b[index],1.9E1/3.0);
                double t21111 = 1/pow(rho_b[index],1.1E1/3.0);
                double t21112 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t21113 = X-1.0;
                double t21114 = cxnl1*gamma_bb[index]*gx*t21100*t21051;
                double t21115 = cxnl3*gamma_bb[index]*gx*t21105*t21052*t21053*t21054;
                double t21116 = cxnl2*t21052*t21053*t21055*t21109;
                double t21117 = cxnl0+t21114+t21115+t21116;
                double t21118 = t21085*t21097;
                double t21119 = t21085*t21094*t21077*t21078*6.0;
                double t21120 = t21082*t21085*t21095*5.0;
                double t21121 = t21120+t21118+t21119-t21091*t21085*t21078*6.0-t21076*t21085*t21077-t21082*t21085* \
                   t21077*t21096*5.0;
                v_rho_b_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*t21113*(t21117*(-t21079*t21097+t21090*t21076* \
                   t21085*2.0+t21082*t21083*t21095*5.0+t21091*t21078*t21079*6.0+t21076*t21077*t21079+t21090*t21091*t21085* \
                   t21077*1.0E1+t21090*t21082*t21085*t21096*5.0E1-t21090*t21085*t21094*t21078*3.6E1-t21082*t21083*t21077* \
                   t21096*5.0-t21094*t21077*t21078*t21079*6.0-1/(t21072*t21072*t21072*t21072*t21072*t21072*t21072)*t21090* \
                   t21082*t21085*t21077*3.0E1+t21090*t21085*t21077*t21095*t21078*4.0)+t21121*(cxnl1*gamma_bb[index]*gx* \
                   t21100*t21111*(8.0/3.0)+cxnl2*t21110*t21052*t21053*t21109*(1.6E1/3.0)-cxnl1*t21110*t21052*t21053*1/ \
                   (t21099*t21099)*(8.0/3.0)-cxnl2*t21052*t21053*1/(t21108*t21108)*t21055*(gamma_bb[index]*gx*t21111* \
                   (1.6E1/3.0)+t21110*t21052*t21053*(1.6E1/3.0))+cxnl3*gamma_bb[index]*gx*t21112*t21105*t21052*t21053* \
                   8.0-cxnl3*gamma_bb[index]*gx*1/(t21104*t21104)*t21052*t21053*t21054*(gamma_bb[index]*gx*t21111*8.0+ \
                   t21110*t21052*t21053*1.6E1+gamma_bb[index]*gx*t21112*t21052*t21053*8.0)))-c0*pow(rho_b[index],1.0/ \
                   3.0)*t21121*t21113*t21117*(4.0/3.0);
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t19963 = 1/pow(rho_b[index],8.0/3.0);
                double t19964 = gamma_bb[index]*gamma_bb[index];
                double t19965 = gx*gx;
                double t19966 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t19967 = 1/pow(rho_b[index],1.6E1/3.0);
                double t19968 = tau_a[index]*1.0E20;
                double t19969 = pow(rho_b[index],5.0/3.0);
                double t19970 = C_k*t19969;
                double t19981 = -t19970+t19968;
                double t19971 = 0.0 ;
                double t19972 = t19970-t19968;
                double t19973 = ( (t19972 > 0.0) ?  1.0 : 0.0 ) ;
                double t19974 = t19973*1.0E20;
                double t19975 = 1/tau_b[index];
                double t19976 = tau_b[index]*1.0E20;
                double t19977 = -t19970+t19976;
                double t19978 = ( (t19977 > 0.0) ?  1.0 : 0.0 ) ;
                double t19979 = C_k*t19975*t19969*t19978;
                double t19980 = t19974+t19979+1.0;
                double t19982 = t19971*t19971;
                double t19983 = t19974+t19979-1.0;
                double t19984 = 1/(t19980*t19980*t19980);
                double t19985 = 0.0 ;
                double t19986 = t19983*t19983;
                double t19987 = t19986*t19986;
                double t19988 = 1/(t19980*t19980*t19980*t19980);
                double t19989 = 1/(t19980*t19980*t19980*t19980*t19980);
                double t19990 = 1/(t19980*t19980*t19980*t19980*t19980*t19980);
                double t19991 = 1/(t19980*t19980);
                double t19992 = 1/pow(rho_a[index],8.0/3.0);
                double t19993 = gamma_aa[index]*gamma_aa[index];
                double t19994 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t19995 = 1/pow(rho_a[index],1.6E1/3.0);
                double t19996 = pow(rho_a[index],5.0/3.0);
                double t19997 = C_k*t19996;
                double t19998 = t19968-t19997;
                double t19999 = 1/tau_a[index];
                double t20000 = 0.0 ;
                double t20001 = ( (t19998 > 0.0) ?  1.0 : 0.0 ) ;
                double t20002 = 0.0 ;
                double t20003 = 1/(tau_a[index]*tau_a[index]);
                double t20010 = t20002*1.0E40;
                double t20011 = C_k*t19996*t19999*t20002*1.0E20;
                double t20012 = C_k*t19996*t20001*t20003;
                double t20004 = t20010-t20011+t20012;
                double t20005 = -t19968+t19997;
                double t20006 = ( (t20005 > 0.0) ?  1.0 : 0.0 ) ;
                double t20007 = t20006*1.0E20;
                double t20008 = C_k*t19996*t19999*t20001;
                double t20009 = t20007+t20008+1.0;
                double t20013 = t20004*t20004;
                double t20014 = t20007+t20008-1.0;
                double t20015 = t20014*t20014;
                double t20016 = t20015*t20015;
                double t20017 = 1/(t20009*t20009);
                double t20018 = t20000*1.0E60;
                double t20019 = C_k*t19996*t20002*t20003*2.0E20;
                double t20020 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t20023 = C_k*t19996*t19999*t20000*1.0E40;
                double t20024 = C_k*t19996*t20001*t20020*2.0;
                double t20021 = -t20023-t20024+t20018+t20019;
                double t20022 = 1/(t20009*t20009*t20009);
                double t20025 = 1/(t20009*t20009*t20009*t20009);
                double t20026 = 1/(t20009*t20009*t20009*t20009*t20009);
                double t20027 = 1/(t20009*t20009*t20009*t20009*t20009*t20009);
                v_tau_a_tau_a_[index] = (c0*pow(rho_b[index],4.0/3.0)*(cxnl0+(cxnl2*t19964*t19965*t19967)/(gamma_bb[index]* \
                   gx*t19963*2.0+t19964*t19965*t19967+1.0)+(cxnl1*gamma_bb[index]*gx*t19963)/(gamma_bb[index]*gx*t19963+ \
                   1.0)+(cxnl3*gamma_bb[index]*gx*t19964*t19965*t19966)/(gamma_bb[index]*gx*t19963*3.0+t19964*t19965* \
                   t19967*3.0+gamma_bb[index]*gx*t19964*t19965*t19966+1.0))*(t19982*t19991*2.0E80+( 0.0 )/t19980+t19982* \
                   t19983*t19984*1.0E81+t19990*t19982*t19987*5.0E81-t19991*t19983*t19985*1.0E60-t19984*t19985*t19986* \
                   6.0E60-t19982*t19986*t19988*3.6E81+t19985*t19987*t19989*5.0E60-t19990*t19983*t19985*t19987*5.0E60+ \
                   t19982*t19983*t19986*t19989*4.0E80+t19983*t19985*t19986*t19988*6.0E60-1/(t19980*t19980*t19980*t19980* \
                   t19980*t19980*t19980)*t19982*t19983*t19987*3.0E81)+c0*pow(rho_a[index],4.0/3.0)*(cxnl0+(cxnl2*t19965* \
                   t19993*t19995)/(gamma_aa[index]*gx*t19992*2.0+t19965*t19993*t19995+1.0)+(cxnl1*gamma_aa[index]*gx* \
                   t19992)/(gamma_aa[index]*gx*t19992+1.0)+(cxnl3*gamma_aa[index]*gx*t19965*t19993*t19994)/(gamma_aa[index]* \
                   gx*t19992*3.0+t19965*t19993*t19995*3.0+gamma_aa[index]*gx*t19965*t19993*t19994+1.0))*(t20013*t20017* \
                   2.0+t20021/t20009-t20021*t20022*t20015*6.0+t20013*t20022*t20014*1.0E1-t20021*t20014*t20017-t20013* \
                   t20015*t20025*3.6E1+t20021*t20016*t20026*5.0+t20013*t20016*t20027*5.0E1+t20021*t20014*t20015*t20025* \
                   6.0+t20013*t20014*t20015*t20026*4.0-t20021*t20014*t20016*t20027*5.0-t20013*t20014*t20016*1/(t20009* \
                   t20009*t20009*t20009*t20009*t20009*t20009)*3.0E1))*(X-1.0);
            } else if (rho_a[index] > cutoff_) {
                double t22112 = 1/pow(rho_a[index],8.0/3.0);
                double t22113 = gamma_aa[index]*gamma_aa[index];
                double t22114 = gx*gx;
                double t22115 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t22116 = 1/pow(rho_a[index],1.6E1/3.0);
                double t22117 = pow(rho_a[index],5.0/3.0);
                double t22118 = C_k*t22117;
                double t22119 = tau_a[index]*1.0E20;
                double t22120 = -t22118+t22119;
                double t22121 = 1/tau_a[index];
                double t22122 = 0.0 ;
                double t22123 = ( (t22120 > 0.0) ?  1.0 : 0.0 ) ;
                double t22124 = 0.0 ;
                double t22125 = 1/(tau_a[index]*tau_a[index]);
                double t22128 = t22124*1.0E40;
                double t22129 = C_k*t22121*t22124*t22117*1.0E20;
                double t22130 = C_k*t22123*t22125*t22117;
                double t22126 = t22130+t22128-t22129;
                double t22127 = C_k*t22121*t22123*t22117;
                double t22131 = t22126*t22126;
                double t22132 = t22118-t22119;
                double t22133 = ( (t22132 > 0.0) ?  1.0 : 0.0 ) ;
                double t22134 = t22133*1.0E20;
                double t22135 = t22134+t22127-1.0;
                double t22136 = t22134+t22127+1.0;
                double t22137 = t22135*t22135;
                double t22138 = t22137*t22137;
                double t22139 = 1/(t22136*t22136);
                double t22140 = t22122*1.0E60;
                double t22141 = C_k*t22124*t22125*t22117*2.0E20;
                double t22142 = 1/(tau_a[index]*tau_a[index]*tau_a[index]);
                double t22145 = C_k*t22121*t22122*t22117*1.0E40;
                double t22146 = C_k*t22123*t22142*t22117*2.0;
                double t22143 = t22140+t22141-t22145-t22146;
                double t22144 = 1/(t22136*t22136*t22136);
                double t22147 = 1/(t22136*t22136*t22136*t22136);
                double t22148 = 1/(t22136*t22136*t22136*t22136*t22136);
                double t22149 = 1/(t22136*t22136*t22136*t22136*t22136*t22136);
                v_tau_a_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t22113*t22114*t22116)/ \
                   (gamma_aa[index]*gx*t22112*2.0+t22113*t22114*t22116+1.0)+(cxnl1*gamma_aa[index]*gx*t22112)/(gamma_aa[index]* \
                   gx*t22112+1.0)+(cxnl3*gamma_aa[index]*gx*t22113*t22114*t22115)/(gamma_aa[index]*gx*t22112*3.0+t22113* \
                   t22114*t22116*3.0+gamma_aa[index]*gx*t22113*t22114*t22115+1.0))*(t22143/(t22127+ ( (t22118-tau_a[index]* \
                   1.0E20 > 0.0) ? 1.0*1.0E20 : 0.0 ) +1.0)+t22131*t22139*2.0+t22131*t22135*t22144*1.0E1-t22131*t22137* \
                   t22147*3.6E1-t22143*t22144*t22137*6.0-t22143*t22135*t22139+t22131*t22138*t22149*5.0E1+t22143*t22138* \
                   t22148*5.0+t22131*t22135*t22137*t22148*4.0+t22143*t22135*t22137*t22147*6.0-t22143*t22135*t22138*t22149* \
                   5.0-t22131*t22135*1/(t22136*t22136*t22136*t22136*t22136*t22136*t22136)*t22138*3.0E1);
            } else if (rho_b[index] > cutoff_) {
                double t21123 = 1/pow(rho_b[index],8.0/3.0);
                double t21124 = gamma_bb[index]*gamma_bb[index];
                double t21125 = gx*gx;
                double t21126 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t21127 = 1/pow(rho_b[index],1.6E1/3.0);
                double t21128 = tau_a[index]*1.0E20;
                double t21129 = pow(rho_b[index],5.0/3.0);
                double t21130 = C_k*t21129;
                double t21141 = -t21130+t21128;
                double t21131 = 0.0 ;
                double t21132 = t21130-t21128;
                double t21133 = ( (t21132 > 0.0) ?  1.0 : 0.0 ) ;
                double t21134 = t21133*1.0E20;
                double t21135 = 1/tau_b[index];
                double t21136 = tau_b[index]*1.0E20;
                double t21137 = -t21130+t21136;
                double t21138 = ( (t21137 > 0.0) ?  1.0 : 0.0 ) ;
                double t21139 = C_k*t21135*t21129*t21138;
                double t21140 = t21134+t21139+1.0;
                double t21142 = t21131*t21131;
                double t21143 = t21134+t21139-1.0;
                double t21144 = 1/(t21140*t21140*t21140);
                double t21145 = 0.0 ;
                double t21146 = t21143*t21143;
                double t21147 = t21146*t21146;
                double t21148 = 1/(t21140*t21140*t21140*t21140);
                double t21149 = 1/(t21140*t21140*t21140*t21140*t21140);
                double t21150 = 1/(t21140*t21140*t21140*t21140*t21140*t21140);
                double t21151 = 1/(t21140*t21140);
                v_tau_a_tau_a_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t21124*t21125*t21127)/ \
                   (gamma_bb[index]*gx*t21123*2.0+t21124*t21125*t21127+1.0)+(cxnl1*gamma_bb[index]*gx*t21123)/(gamma_bb[index]* \
                   gx*t21123+1.0)+(cxnl3*gamma_bb[index]*gx*t21124*t21125*t21126)/(gamma_bb[index]*gx*t21123*3.0+t21124* \
                   t21125*t21127*3.0+gamma_bb[index]*gx*t21124*t21125*t21126+1.0))*(t21142*t21151*2.0E80+( 0.0 )/t21140+ \
                   t21142*t21143*t21144*1.0E81+t21150*t21142*t21147*5.0E81-t21151*t21143*t21145*1.0E60-t21144*t21145* \
                   t21146*6.0E60-t21142*t21146*t21148*3.6E81+t21145*t21147*t21149*5.0E60-t21150*t21143*t21145*t21147* \
                   5.0E60+t21142*t21143*t21146*t21149*4.0E80+t21143*t21145*t21146*t21148*6.0E60-1/(t21140*t21140*t21140* \
                   t21140*t21140*t21140*t21140)*t21142*t21143*t21147*3.0E81);
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t20029 = 1/pow(rho_b[index],8.0/3.0);
                double t20030 = gamma_bb[index]*gamma_bb[index];
                double t20031 = gx*gx;
                double t20032 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20033 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20034 = pow(rho_b[index],5.0/3.0);
                double t20035 = tau_b[index]*1.0E20;
                double t20038 = C_k*t20034;
                double t20036 = t20035-t20038;
                double t20037 = tau_a[index]*1.0E20;
                double t20039 = 1/tau_b[index];
                double t20040 = ( (t20036 > 0.0) ?  1.0 : 0.0 ) ;
                double t20041 = t20037-t20038;
                double t20042 = 0.0 ;
                double t20043 = 0.0 ;
                double t20044 = 1/(tau_b[index]*tau_b[index]);
                double t20045 = C_k*t20040*t20034*t20044;
                double t20046 = -t20037+t20038;
                double t20047 = ( (t20046 > 0.0) ?  1.0 : 0.0 ) ;
                double t20048 = t20047*1.0E20;
                double t20049 = C_k*t20040*t20034*t20039;
                double t20050 = t20048+t20049+1.0;
                double t20052 = C_k*t20034*t20043*t20039*1.0E20;
                double t20051 = -t20052+t20045;
                double t20053 = t20048+t20049-1.0;
                double t20054 = t20052-t20045;
                double t20055 = t20053*t20053;
                double t20056 = t20055*t20055;
                v_tau_a_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t20030*t20031*t20033)/ \
                   (gamma_bb[index]*gx*t20029*2.0+t20030*t20031*t20033+1.0)+(cxnl1*gamma_bb[index]*gx*t20029)/(gamma_bb[index]* \
                   gx*t20029+1.0)+(cxnl3*gamma_bb[index]*gx*t20030*t20031*t20032)/(gamma_bb[index]*gx*t20029*3.0+t20030* \
                   t20031*t20033*3.0+gamma_bb[index]*gx*t20030*t20031*t20032+1.0))*(1/(t20050*t20050)*t20042*t20051*2.0E40+ \
                   1/(t20050*t20050*t20050)*t20042*t20051*t20053*1.0E41+1/(t20050*t20050*t20050*t20050)*t20042*t20054* \
                   t20055*3.6E41-1/(t20050*t20050*t20050*t20050*t20050*t20050)*t20042*t20054*t20056*5.0E41-1/(t20050* \
                   t20050*t20050*t20050*t20050)*t20042*t20053*t20054*t20055*4.0E40+1/(t20050*t20050*t20050*t20050*t20050* \
                   t20050*t20050)*t20042*t20053*t20054*t20056*3.0E41);
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t21153 = 1/pow(rho_b[index],8.0/3.0);
                double t21154 = gamma_bb[index]*gamma_bb[index];
                double t21155 = gx*gx;
                double t21156 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t21157 = 1/pow(rho_b[index],1.6E1/3.0);
                double t21158 = pow(rho_b[index],5.0/3.0);
                double t21159 = tau_b[index]*1.0E20;
                double t21162 = C_k*t21158;
                double t21160 = -t21162+t21159;
                double t21161 = tau_a[index]*1.0E20;
                double t21163 = 1/tau_b[index];
                double t21164 = ( (t21160 > 0.0) ?  1.0 : 0.0 ) ;
                double t21165 = t21161-t21162;
                double t21166 = 0.0 ;
                double t21167 = 0.0 ;
                double t21168 = 1/(tau_b[index]*tau_b[index]);
                double t21175 = C_k*t21163*t21158*t21167*1.0E20;
                double t21176 = C_k*t21164*t21158*t21168;
                double t21169 = t21175-t21176;
                double t21170 = -t21161+t21162;
                double t21171 = ( (t21170 > 0.0) ?  1.0 : 0.0 ) ;
                double t21172 = t21171*1.0E20;
                double t21173 = C_k*t21163*t21164*t21158;
                double t21174 = t21172+t21173+1.0;
                double t21177 = t21172+t21173-1.0;
                double t21178 = t21177*t21177;
                double t21179 = t21178*t21178;
                v_tau_a_tau_b_[index] = -c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t21154*t21155*t21157) \
                   /(gamma_bb[index]*gx*t21153*2.0+t21154*t21155*t21157+1.0)+(cxnl1*gamma_bb[index]*gx*t21153)/(gamma_bb[index]* \
                   gx*t21153+1.0)+(cxnl3*gamma_bb[index]*gx*t21154*t21155*t21156)/(gamma_bb[index]*gx*t21153*3.0+t21154* \
                   t21155*t21157*3.0+gamma_bb[index]*gx*t21154*t21155*t21156+1.0))*(1/(t21174*t21174)*t21166*t21169*2.0E40+ \
                   1/(t21174*t21174*t21174)*t21166*t21177*t21169*1.0E41-1/(t21174*t21174*t21174*t21174)*t21166*t21169* \
                   t21178*3.6E41+1/(t21174*t21174*t21174*t21174*t21174*t21174)*t21166*t21169*t21179*5.0E41+1/(t21174* \
                   t21174*t21174*t21174*t21174)*t21166*t21177*t21169*t21178*4.0E40-1/(t21174*t21174*t21174*t21174*t21174* \
                   t21174*t21174)*t21166*t21177*t21169*t21179*3.0E41);
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t20058 = 1/pow(rho_b[index],8.0/3.0);
                double t20059 = gamma_bb[index]*gamma_bb[index];
                double t20060 = gx*gx;
                double t20061 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t20062 = 1/pow(rho_b[index],1.6E1/3.0);
                double t20063 = pow(rho_b[index],5.0/3.0);
                double t20064 = tau_b[index]*1.0E20;
                double t20066 = C_k*t20063;
                double t20065 = t20064-t20066;
                double t20067 = 1/tau_b[index];
                double t20068 = ( (t20065 > 0.0) ?  1.0 : 0.0 ) ;
                double t20069 = 0.0 ;
                double t20070 = 1/(tau_b[index]*tau_b[index]);
                double t20087 = C_k*t20063*t20067*t20069*1.0E20;
                double t20088 = C_k*t20070*t20063*t20068;
                double t20071 = -t20087+t20088;
                double t20082 = tau_a[index]*1.0E20;
                double t20072 = -t20082+t20066;
                double t20073 = ( (t20072 > 0.0) ?  1.0 : 0.0 ) ;
                double t20074 = t20073*1.0E20;
                double t20075 = C_k*t20063*t20067*t20068;
                double t20076 = t20074+t20075+1.0;
                double t20077 = 0.0 ;
                double t20078 = C_k*t20063*t20067*t20077*1.0E40;
                double t20079 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t20080 = C_k*t20063*t20068*t20079*2.0;
                double t20084 = C_k*t20070*t20063*t20069*2.0E20;
                double t20081 = t20080-t20084+t20078;
                double t20083 = t20074+t20075-1.0;
                double t20085 = t20083*t20083;
                double t20086 = t20085*t20085;
                double t20089 = t20087-t20088;
                double t20090 = 1/(t20076*t20076*t20076*t20076);
                double t20091 = t20089*t20089;
                double t20092 = 1/(t20076*t20076*t20076*t20076*t20076);
                double t20093 = 1/(t20076*t20076*t20076*t20076*t20076*t20076);
                double t20094 = 1/(t20076*t20076);
                double t20095 = 1/(t20076*t20076*t20076);
                v_tau_b_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t20060*t20062*t20059)/ \
                   (gamma_bb[index]*gx*t20058*2.0+t20060*t20062*t20059+1.0)+(cxnl1*gamma_bb[index]*gx*t20058)/(gamma_bb[index]* \
                   gx*t20058+1.0)+(cxnl3*gamma_bb[index]*gx*t20060*t20061*t20059)/(gamma_bb[index]*gx*t20058*3.0+t20060* \
                   t20062*t20059*3.0+gamma_bb[index]*gx*t20060*t20061*t20059+1.0))*(-t20081/t20076+(t20071*t20071)*t20094* \
                   2.0-t20090*t20091*t20085*3.6E1+t20081*t20083*t20094-t20081*t20092*t20086*5.0+t20091*t20083*t20095* \
                   1.0E1+t20081*t20085*t20095*6.0+t20091*t20093*t20086*5.0E1-t20081*t20090*t20083*t20085*6.0+t20091*t20083* \
                   t20092*t20085*4.0+t20081*t20083*t20093*t20086*5.0-t20091*t20083*1/(t20076*t20076*t20076*t20076*t20076* \
                   t20076*t20076)*t20086*3.0E1);
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t21181 = 1/pow(rho_b[index],8.0/3.0);
                double t21182 = gamma_bb[index]*gamma_bb[index];
                double t21183 = gx*gx;
                double t21184 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t21185 = 1/pow(rho_b[index],1.6E1/3.0);
                double t21186 = pow(rho_b[index],5.0/3.0);
                double t21187 = tau_b[index]*1.0E20;
                double t21189 = C_k*t21186;
                double t21188 = t21187-t21189;
                double t21190 = 1/tau_b[index];
                double t21191 = ( (t21188 > 0.0) ?  1.0 : 0.0 ) ;
                double t21192 = 0.0 ;
                double t21193 = 1/(tau_b[index]*tau_b[index]);
                double t21210 = C_k*t21190*t21192*t21186*1.0E20;
                double t21211 = C_k*t21191*t21193*t21186;
                double t21194 = t21210-t21211;
                double t21205 = tau_a[index]*1.0E20;
                double t21195 = -t21205+t21189;
                double t21196 = ( (t21195 > 0.0) ?  1.0 : 0.0 ) ;
                double t21197 = t21196*1.0E20;
                double t21198 = C_k*t21190*t21191*t21186;
                double t21199 = t21197+t21198+1.0;
                double t21200 = 0.0 ;
                double t21201 = C_k*t21200*t21190*t21186*1.0E40;
                double t21202 = 1/(tau_b[index]*tau_b[index]*tau_b[index]);
                double t21203 = C_k*t21202*t21191*t21186*2.0;
                double t21207 = C_k*t21192*t21193*t21186*2.0E20;
                double t21204 = t21201+t21203-t21207;
                double t21206 = t21197+t21198-1.0;
                double t21208 = t21206*t21206;
                double t21209 = t21208*t21208;
                double t21212 = t21194*t21194;
                double t21213 = 1/(t21199*t21199*t21199*t21199);
                double t21214 = 1/(t21199*t21199*t21199*t21199*t21199);
                double t21215 = 1/(t21199*t21199*t21199*t21199*t21199*t21199);
                double t21216 = 1/(t21199*t21199);
                double t21217 = 1/(t21199*t21199*t21199);
                v_tau_b_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(cxnl0+(cxnl2*t21182*t21183*t21185)/ \
                   (gamma_bb[index]*gx*t21181*2.0+t21182*t21183*t21185+1.0)+(cxnl1*gamma_bb[index]*gx*t21181)/(gamma_bb[index]* \
                   gx*t21181+1.0)+(cxnl3*gamma_bb[index]*gx*t21182*t21183*t21184)/(gamma_bb[index]*gx*t21181*3.0+t21182* \
                   t21183*t21185*3.0+gamma_bb[index]*gx*t21182*t21183*t21184+1.0))*(t21212*t21216*2.0-t21204/t21199-t21212* \
                   t21213*t21208*3.6E1+t21212*t21206*t21217*1.0E1+t21204*t21206*t21216+t21212*t21215*t21209*5.0E1-t21204* \
                   t21214*t21209*5.0+t21204*t21208*t21217*6.0+t21212*t21214*t21206*t21208*4.0-t21204*t21213*t21206*t21208* \
                   6.0+t21204*t21206*t21215*t21209*5.0-t21212*t21206*t21209*1/(t21199*t21199*t21199*t21199*t21199*t21199* \
                   t21199)*3.0E1);
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t20097 = 1/pow(rho_a[index],8.0/3.0);
                    double t20098 = gx*gx;
                    double t20099 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t20100 = gamma_aa[index]*gamma_aa[index];
                    double t20101 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t20102 = gamma_aa[index]*gx*t20097;
                    double t20103 = t20102+1.0;
                    double t20104 = gamma_aa[index]*gx*t20097*3.0;
                    double t20105 = gamma_aa[index]*gx*t20100*t20101*t20098;
                    double t20106 = t20100*t20098*t20099*3.0;
                    double t20107 = t20104+t20105+t20106+1.0;
                    double t20108 = gamma_aa[index]*gx*t20097*2.0;
                    double t20109 = t20100*t20098*t20099;
                    double t20110 = t20108+t20109+1.0;
                    double t20111 = pow(rho_a[index],5.0/3.0);
                    double t20112 = tau_a[index]*1.0E20;
                    double t20115 = C_k*t20111;
                    double t20113 = t20112-t20115;
                    double t20114 = 0.0 ;
                    double t20116 = 1/tau_a[index];
                    double t20117 = ( (t20113 > 0.0) ?  1.0 : 0.0 ) ;
                    double t20118 = t20114*1.0E40;
                    double t20119 = 1/(tau_a[index]*tau_a[index]);
                    double t20120 = C_k*t20111*t20117*t20119;
                    double t20127 = C_k*t20111*t20114*t20116*1.0E20;
                    double t20121 = t20120+t20118-t20127;
                    double t20122 = -t20112+t20115;
                    double t20123 = ( (t20122 > 0.0) ?  1.0 : 0.0 ) ;
                    double t20124 = t20123*1.0E20;
                    double t20125 = C_k*t20111*t20116*t20117;
                    double t20126 = t20124+t20125+1.0;
                    double t20128 = t20124+t20125-1.0;
                    double t20129 = t20128*t20128;
                    double t20130 = t20129*t20129;
                    v_gamma_aa_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t20097)/t20103+(cxnl2* \
                       gamma_aa[index]*t20098*t20099*2.0)/t20110-cxnl1*gamma_aa[index]*1/(t20103*t20103)*t20098*t20099-cxnl2* \
                       t20100*1/(t20110*t20110)*t20098*t20099*(gx*t20097*2.0+gamma_aa[index]*t20098*t20099*2.0)+(cxnl3*gx* \
                       t20100*t20101*t20098*3.0)/t20107-cxnl3*gamma_aa[index]*gx*t20100*t20101*1/(t20107*t20107)*t20098*(gx* \
                       t20097*3.0+gamma_aa[index]*t20098*t20099*6.0+gx*t20100*t20101*t20098*3.0))*(t20121/t20126+t20121*t20130* \
                       1/(t20126*t20126*t20126*t20126*t20126)*5.0-t20121*1/(t20126*t20126)*t20128-t20121*1/(t20126*t20126* \
                       t20126)*t20129*6.0-t20121*t20130*1/(t20126*t20126*t20126*t20126*t20126*t20126)*t20128*5.0+t20121*1/ \
                       (t20126*t20126*t20126*t20126)*t20128*t20129*6.0);
                } else if (rho_a[index] > cutoff_) {
                    double t22153 = 1/pow(rho_a[index],8.0/3.0);
                    double t22154 = gx*gx;
                    double t22155 = 1/pow(rho_a[index],1.6E1/3.0);
                    double t22156 = gamma_aa[index]*gamma_aa[index];
                    double t22157 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                       rho_a[index]*rho_a[index]);
                    double t22158 = gamma_aa[index]*gx*t22153;
                    double t22159 = t22158+1.0;
                    double t22160 = gamma_aa[index]*gx*t22153*3.0;
                    double t22161 = gamma_aa[index]*gx*t22154*t22156*t22157;
                    double t22162 = t22154*t22155*t22156*3.0;
                    double t22163 = t22160+t22161+t22162+1.0;
                    double t22164 = gamma_aa[index]*gx*t22153*2.0;
                    double t22165 = t22154*t22155*t22156;
                    double t22166 = t22164+t22165+1.0;
                    double t22167 = pow(rho_a[index],5.0/3.0);
                    double t22168 = tau_a[index]*1.0E20;
                    double t22171 = C_k*t22167;
                    double t22169 = -t22171+t22168;
                    double t22170 = 0.0 ;
                    double t22172 = 1/tau_a[index];
                    double t22173 = ( (t22169 > 0.0) ?  1.0 : 0.0 ) ;
                    double t22174 = t22170*1.0E40;
                    double t22175 = 1/(tau_a[index]*tau_a[index]);
                    double t22176 = C_k*t22173*t22175*t22167;
                    double t22183 = C_k*t22170*t22172*t22167*1.0E20;
                    double t22177 = t22174-t22183+t22176;
                    double t22178 = t22171-t22168;
                    double t22179 = ( (t22178 > 0.0) ?  1.0 : 0.0 ) ;
                    double t22180 = t22179*1.0E20;
                    double t22181 = C_k*t22172*t22173*t22167;
                    double t22182 = t22180+t22181+1.0;
                    double t22184 = t22180+t22181-1.0;
                    double t22185 = t22184*t22184;
                    double t22186 = t22185*t22185;
                    v_gamma_aa_tau_a_[index] = c0*pow(rho_a[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t22153)/t22159+(cxnl2* \
                       gamma_aa[index]*t22154*t22155*2.0)/t22166-cxnl1*gamma_aa[index]*t22154*t22155*1/(t22159*t22159)-cxnl2* \
                       t22154*t22155*t22156*1/(t22166*t22166)*(gx*t22153*2.0+gamma_aa[index]*t22154*t22155*2.0)+(cxnl3*gx* \
                       t22154*t22156*t22157*3.0)/t22163-cxnl3*gamma_aa[index]*gx*t22154*1/(t22163*t22163)*t22156*t22157*(gx* \
                       t22153*3.0+gamma_aa[index]*t22154*t22155*6.0+gx*t22154*t22156*t22157*3.0))*(t22177/t22182-1/(t22182* \
                       t22182)*t22184*t22177-1/(t22182*t22182*t22182)*t22185*t22177*6.0+1/(t22182*t22182*t22182*t22182*t22182) \
                       *t22177*t22186*5.0+1/(t22182*t22182*t22182*t22182)*t22184*t22185*t22177*6.0-1/(t22182*t22182*t22182* \
                       t22182*t22182*t22182)*t22184*t22177*t22186*5.0);
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t20133 = tau_a[index]*1.0E20;
                    double t20134 = pow(rho_b[index],5.0/3.0);
                    double t20135 = C_k*t20134;
                    double t20136 = -t20133+t20135;
                    double t20137 = ( (t20136 > 0.0) ?  1.0 : 0.0 ) ;
                    double t20138 = t20137*1.0E20;
                    double t20139 = 1/tau_b[index];
                    double t20140 = tau_b[index]*1.0E20;
                    double t20141 = t20140-t20135;
                    double t20142 = ( (t20141 > 0.0) ?  1.0 : 0.0 ) ;
                    double t20143 = C_k*t20142*t20134*t20139;
                    double t20144 = t20143+t20138-1.0;
                    double t20145 = t20143+t20138+1.0;
                    double t20146 = t20133-t20135;
                    double t20147 = 0.0 ;
                    double t20148 = t20144*t20144;
                    double t20149 = t20148*t20148;
                    double t20150 = 1/pow(rho_b[index],8.0/3.0);
                    double t20151 = gx*gx;
                    double t20152 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t20153 = gamma_bb[index]*gamma_bb[index];
                    double t20154 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t20155 = gamma_bb[index]*gx*t20150;
                    double t20156 = t20155+1.0;
                    double t20157 = gamma_bb[index]*gx*t20150*3.0;
                    double t20158 = gamma_bb[index]*gx*t20151*t20153*t20154;
                    double t20159 = t20151*t20152*t20153*3.0;
                    double t20160 = t20157+t20158+t20159+1.0;
                    double t20161 = gamma_bb[index]*gx*t20150*2.0;
                    double t20162 = t20151*t20152*t20153;
                    double t20163 = t20161+t20162+1.0;
                    v_gamma_bb_tau_a_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(( 0.0 )/t20145-t20144*1/(t20145* \
                       t20145)*t20147*1.0E40-1/(t20145*t20145*t20145)*t20147*t20148*6.0E40+1/(t20145*t20145*t20145*t20145* \
                       t20145)*t20147*t20149*5.0E40+t20144*1/(t20145*t20145*t20145*t20145)*t20147*t20148*6.0E40-t20144*1/ \
                       (t20145*t20145*t20145*t20145*t20145*t20145)*t20147*t20149*5.0E40)*((cxnl1*gx*t20150)/t20156+(cxnl2* \
                       gamma_bb[index]*t20151*t20152*2.0)/t20163-cxnl1*gamma_bb[index]*t20151*t20152*1/(t20156*t20156)-cxnl2* \
                       t20151*t20152*t20153*1/(t20163*t20163)*(gx*t20150*2.0+gamma_bb[index]*t20151*t20152*2.0)+(cxnl3*gx* \
                       t20151*t20153*t20154*3.0)/t20160-cxnl3*gamma_bb[index]*gx*t20151*1/(t20160*t20160)*t20153*t20154*(gx* \
                       t20150*3.0+gamma_bb[index]*t20151*t20152*6.0+gx*t20151*t20153*t20154*3.0));
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    double t21221 = tau_a[index]*1.0E20;
                    double t21222 = pow(rho_b[index],5.0/3.0);
                    double t21223 = C_k*t21222;
                    double t21224 = -t21221+t21223;
                    double t21225 = ( (t21224 > 0.0) ?  1.0 : 0.0 ) ;
                    double t21226 = t21225*1.0E20;
                    double t21227 = 1/tau_b[index];
                    double t21228 = tau_b[index]*1.0E20;
                    double t21229 = -t21223+t21228;
                    double t21230 = ( (t21229 > 0.0) ?  1.0 : 0.0 ) ;
                    double t21231 = C_k*t21230*t21222*t21227;
                    double t21232 = t21231+t21226-1.0;
                    double t21233 = t21231+t21226+1.0;
                    double t21234 = t21221-t21223;
                    double t21235 = 0.0 ;
                    double t21236 = t21232*t21232;
                    double t21237 = t21236*t21236;
                    double t21238 = 1/pow(rho_b[index],8.0/3.0);
                    double t21239 = gx*gx;
                    double t21240 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t21241 = gamma_bb[index]*gamma_bb[index];
                    double t21242 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t21243 = gamma_bb[index]*gx*t21238;
                    double t21244 = t21243+1.0;
                    double t21245 = gamma_bb[index]*gx*t21238*3.0;
                    double t21246 = gamma_bb[index]*gx*t21241*t21242*t21239;
                    double t21247 = t21240*t21241*t21239*3.0;
                    double t21248 = t21245+t21246+t21247+1.0;
                    double t21249 = gamma_bb[index]*gx*t21238*2.0;
                    double t21250 = t21240*t21241*t21239;
                    double t21251 = t21250+t21249+1.0;
                    v_gamma_bb_tau_a_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*(( 0.0 )/t21233-t21232*1/(t21233* \
                       t21233)*t21235*1.0E40-1/(t21233*t21233*t21233)*t21235*t21236*6.0E40+1/(t21233*t21233*t21233*t21233* \
                       t21233)*t21235*t21237*5.0E40+t21232*1/(t21233*t21233*t21233*t21233)*t21235*t21236*6.0E40-t21232*1/ \
                       (t21233*t21233*t21233*t21233*t21233*t21233)*t21235*t21237*5.0E40)*((cxnl1*gx*t21238)/t21244+(cxnl2* \
                       gamma_bb[index]*t21240*t21239*2.0)/t21251-cxnl1*gamma_bb[index]*t21240*1/(t21244*t21244)*t21239-cxnl2* \
                       t21240*t21241*1/(t21251*t21251)*t21239*(gx*t21238*2.0+gamma_bb[index]*t21240*t21239*2.0)+(cxnl3*gx* \
                       t21241*t21242*t21239*3.0)/t21248-cxnl3*gamma_bb[index]*gx*t21241*t21242*t21239*1/(t21248*t21248)*(gx* \
                       t21238*3.0+gamma_bb[index]*t21240*t21239*6.0+gx*t21241*t21242*t21239*3.0));
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    double t20167 = pow(rho_b[index],5.0/3.0);
                    double t20168 = tau_b[index]*1.0E20;
                    double t20170 = C_k*t20167;
                    double t20169 = -t20170+t20168;
                    double t20171 = 1/tau_b[index];
                    double t20172 = ( (t20169 > 0.0) ?  1.0 : 0.0 ) ;
                    double t20173 = 0.0 ;
                    double t20174 = 1/(tau_b[index]*tau_b[index]);
                    double t20182 = C_k*t20171*t20173*t20167*1.0E20;
                    double t20183 = C_k*t20172*t20174*t20167;
                    double t20175 = t20182-t20183;
                    double t20180 = tau_a[index]*1.0E20;
                    double t20176 = t20170-t20180;
                    double t20177 = ( (t20176 > 0.0) ?  1.0 : 0.0 ) ;
                    double t20178 = t20177*1.0E20;
                    double t20179 = C_k*t20171*t20172*t20167;
                    double t20181 = t20178+t20179+1.0;
                    double t20184 = t20178+t20179-1.0;
                    double t20185 = t20184*t20184;
                    double t20186 = t20185*t20185;
                    double t20187 = 1/pow(rho_b[index],8.0/3.0);
                    double t20188 = gx*gx;
                    double t20189 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t20190 = gamma_bb[index]*gamma_bb[index];
                    double t20191 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t20192 = gamma_bb[index]*gx*t20187;
                    double t20193 = t20192+1.0;
                    double t20194 = gamma_bb[index]*gx*t20187*3.0;
                    double t20195 = gamma_bb[index]*gx*t20190*t20191*t20188;
                    double t20196 = t20190*t20188*t20189*3.0;
                    double t20197 = t20194+t20195+t20196+1.0;
                    double t20198 = gamma_bb[index]*gx*t20187*2.0;
                    double t20199 = t20190*t20188*t20189;
                    double t20200 = t20198+t20199+1.0;
                    v_gamma_bb_tau_b_[index] = -c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t20187)/t20193+(cxnl2* \
                       gamma_bb[index]*t20188*t20189*2.0)/t20200-cxnl1*gamma_bb[index]*1/(t20193*t20193)*t20188*t20189-cxnl2* \
                       1/(t20200*t20200)*t20190*t20188*t20189*(gx*t20187*2.0+gamma_bb[index]*t20188*t20189*2.0)+(cxnl3*gx* \
                       t20190*t20191*t20188*3.0)/t20197-cxnl3*gamma_bb[index]*gx*t20190*t20191*t20188*1/(t20197*t20197)*(gx* \
                       t20187*3.0+gamma_bb[index]*t20188*t20189*6.0+gx*t20190*t20191*t20188*3.0))*(t20175/t20181-1/(t20181* \
                       t20181)*t20175*t20184-1/(t20181*t20181*t20181)*t20175*t20185*6.0+1/(t20181*t20181*t20181*t20181*t20181) \
                       *t20175*t20186*5.0+1/(t20181*t20181*t20181*t20181)*t20175*t20184*t20185*6.0-1/(t20181*t20181*t20181* \
                       t20181*t20181*t20181)*t20175*t20184*t20186*5.0);
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    double t21255 = pow(rho_b[index],5.0/3.0);
                    double t21256 = tau_b[index]*1.0E20;
                    double t21258 = C_k*t21255;
                    double t21257 = t21256-t21258;
                    double t21259 = 1/tau_b[index];
                    double t21260 = ( (t21257 > 0.0) ?  1.0 : 0.0 ) ;
                    double t21261 = 0.0 ;
                    double t21262 = 1/(tau_b[index]*tau_b[index]);
                    double t21263 = C_k*t21260*t21262*t21255;
                    double t21268 = tau_a[index]*1.0E20;
                    double t21264 = t21258-t21268;
                    double t21265 = ( (t21264 > 0.0) ?  1.0 : 0.0 ) ;
                    double t21266 = t21265*1.0E20;
                    double t21267 = C_k*t21260*t21255*t21259;
                    double t21269 = t21266+t21267+1.0;
                    double t21270 = t21266+t21267-1.0;
                    double t21271 = t21270*t21270;
                    double t21273 = C_k*t21261*t21255*t21259*1.0E20;
                    double t21272 = t21263-t21273;
                    double t21274 = t21271*t21271;
                    double t21275 = 1/pow(rho_b[index],8.0/3.0);
                    double t21276 = gx*gx;
                    double t21277 = 1/pow(rho_b[index],1.6E1/3.0);
                    double t21278 = gamma_bb[index]*gamma_bb[index];
                    double t21279 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                       rho_b[index]*rho_b[index]);
                    double t21280 = gamma_bb[index]*gx*t21275;
                    double t21281 = t21280+1.0;
                    double t21282 = gamma_bb[index]*gx*t21275*3.0;
                    double t21283 = gamma_bb[index]*gx*t21276*t21278*t21279;
                    double t21284 = t21276*t21277*t21278*3.0;
                    double t21285 = t21282+t21283+t21284+1.0;
                    double t21286 = gamma_bb[index]*gx*t21275*2.0;
                    double t21287 = t21276*t21277*t21278;
                    double t21288 = t21286+t21287+1.0;
                    v_gamma_bb_tau_b_[index] = c0*pow(rho_b[index],4.0/3.0)*(X-1.0)*((cxnl1*gx*t21275)/t21281-cxnl1*gamma_bb[index]* \
                       1/(t21281*t21281)*t21276*t21277+(cxnl2*gamma_bb[index]*t21276*t21277*2.0)/t21288-cxnl2*t21276*t21277* \
                       t21278*1/(t21288*t21288)*(gx*t21275*2.0+gamma_bb[index]*t21276*t21277*2.0)+(cxnl3*gx*t21276*t21278* \
                       t21279*3.0)/t21285-cxnl3*gamma_bb[index]*gx*t21276*1/(t21285*t21285)*t21278*t21279*(gx*t21275*3.0+ \
                       gamma_bb[index]*t21276*t21277*6.0+gx*t21276*t21278*t21279*3.0))*(t21272/t21269-t21270*t21272*1/(t21269* \
                       t21269)-t21271*t21272*1/(t21269*t21269*t21269)*6.0+t21272*t21274*1/(t21269*t21269*t21269*t21269*t21269) \
                       *5.0+t21270*t21271*t21272*1/(t21269*t21269*t21269*t21269)*6.0-t21270*t21274*1/(t21269*t21269*t21269* \
                       t21269*t21269*t21269)*(t21263-t21273)*5.0);
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

