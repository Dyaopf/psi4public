/**********************************************************
* FT97B_X_functional.cc: definitions for FT97B_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 25-May-2011
*
***********************************************************/
#include <libmints/mints.h>
#include "FT97B_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

FT97B_X_Functional::FT97B_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "FT97B_X";
    description_ = "Filitov and Theil 1997 Exchange";
    citation_ = "M. Filatov and W. Theil, Mol. Phys., 91(5), 847-859, 1997.";

    double c = -9.3052573634909974E-01;
    params_.push_back(make_pair("c",c));
    double d0 = 2.9136440000000000E-03;
    params_.push_back(make_pair("d0",d0));
    double d1 = 9.4741689999999995E-04;
    params_.push_back(make_pair("d1",d1));
    double d2 = 2.5011489999999999E+03;
    params_.push_back(make_pair("d2",d2));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
FT97B_X_Functional::~FT97B_X_Functional()
{
}
void FT97B_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double c = params_[0].second;
    double d0 = params_[1].second;
    double d1 = params_[2].second;
    double d2 = params_[3].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t3564 = 1.0/pow(rho_a[index],8.0/3.0);
            double t3565 = log(gamma_aa[index]*t3564+sqrt((gamma_aa[index]*gamma_aa[index])*(t3564*t3564)+1.0) \
               );
            double t3567 = d2*d2;
            double t3568 = gamma_aa[index]+t3567;
            double t3569 = 1.0/t3568;
            double t3570 = d1*gamma_aa[index]*t3569;
            double t3566 = d0+t3570;
            functional_[index] = c*pow(rho_a[index],4.0/3.0)*((gamma_aa[index]*t3564*t3566*1.0/sqrt(gamma_aa[index]* \
               t3564*(t3565*t3565)*(t3566*t3566)*9.0+1.0))/c-1.0)*-2.0;
        } else {
            functional_[index] = 0.0;
        }

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t3572 = 1.0/pow(rho_a[index],8.0/3.0);
            double t3580 = gamma_aa[index]*t3572;
            double t3573 = log(t3580+sqrt(t3580*t3580+1.0));
            double t3575 = d2*d2;
            double t3576 = gamma_aa[index]+t3575;
            double t3577 = 1.0/t3576;
            double t3578 = d1*gamma_aa[index]*t3577;
            double t3574 = d0+t3578;
            double t3579 = 1.0/c;
            double t3581 = t3573*t3573;
            double t3582 = t3574*t3574;
            double t3583 = gamma_aa[index]*t3572*t3581*t3582*9.0;
            double t3584 = t3583+1.0;
            double t3585 = 1.0/sqrt(t3584);
            double t3586 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t3587 = gamma_aa[index]*gamma_aa[index];
            v_rho_a_[index] = c*pow(rho_a[index],1.0/3.0)*(gamma_aa[index]*t3572*t3574*t3585*t3579-1.0)*(-4.0/ \
               3.0)+c*pow(rho_a[index],4.0/3.0)*(gamma_aa[index]*t3574*t3585*t3586*t3579*(8.0/3.0)-gamma_aa[index]* \
               t3572*t3574*1.0/pow(t3584,3.0/2.0)*t3579*(gamma_aa[index]*t3581*t3582*t3586*2.4E1+1.0/pow(rho_a[index],1.9E1/ \
               3.0)*t3573*t3582*t3587*1.0/sqrt(1.0/pow(rho_a[index],1.6E1/3.0)*t3587+1.0)*4.8E1)*(1.0/2.0));
        } else {
            v_rho_a_[index] = 0.0;
        }

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t3589 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3597 = gamma_aa[index]*t3589;
                double t3590 = log(t3597+sqrt(t3597*t3597+1.0));
                double t3592 = d2*d2;
                double t3593 = gamma_aa[index]+t3592;
                double t3594 = 1.0/t3593;
                double t3595 = d1*gamma_aa[index]*t3594;
                double t3591 = d0+t3595;
                double t3596 = 1.0/c;
                double t3598 = t3590*t3590;
                double t3599 = t3591*t3591;
                double t3600 = gamma_aa[index]*t3589*t3598*t3599*9.0;
                double t3601 = t3600+1.0;
                double t3602 = 1.0/sqrt(t3601);
                double t3603 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3604 = d1*t3594;
                double t3605 = 1.0/(t3593*t3593);
                double t3606 = t3604-d1*gamma_aa[index]*t3605;
                v_gamma_aa_[index] = c*pow(rho_a[index],4.0/3.0)*(t3591*t3596*t3589*t3602+gamma_aa[index]*t3596*t3589* \
                   t3602*t3606-gamma_aa[index]*t3591*t3596*t3589*1.0/pow(t3601,3.0/2.0)*(t3589*t3598*t3599*9.0+gamma_aa[index]* \
                   t3590*t3599*t3603*1.0/sqrt((gamma_aa[index]*gamma_aa[index])*t3603+1.0)*1.8E1+gamma_aa[index]*t3591* \
                   t3589*t3598*t3606*1.8E1)*(1.0/2.0))*-2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            }

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            }

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t3609 = 1.0/pow(rho_a[index],8.0/3.0);
            double t3617 = gamma_aa[index]*t3609;
            double t3610 = log(t3617+sqrt(t3617*t3617+1.0));
            double t3612 = d2*d2;
            double t3613 = gamma_aa[index]+t3612;
            double t3614 = 1.0/t3613;
            double t3615 = d1*gamma_aa[index]*t3614;
            double t3611 = d0+t3615;
            double t3616 = 1.0/c;
            double t3618 = t3610*t3610;
            double t3619 = t3611*t3611;
            double t3620 = gamma_aa[index]*t3609*t3618*t3619*9.0;
            double t3621 = t3620+1.0;
            double t3622 = 1.0/sqrt(t3621);
            double t3623 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t3624 = gamma_aa[index]*gamma_aa[index];
            double t3625 = 1.0/pow(t3621,3.0/2.0);
            double t3626 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t3627 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t3628 = t3624*t3627;
            double t3629 = t3628+1.0;
            double t3630 = 1.0/sqrt(t3629);
            double t3631 = gamma_aa[index]*t3623*t3618*t3619*2.4E1;
            double t3632 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t3633 = t3610*t3630*t3632*t3624*t3619*4.8E1;
            double t3634 = t3631+t3633;
            v_rho_a_rho_a_[index] = c*1.0/pow(rho_a[index],2.0/3.0)*(gamma_aa[index]*t3611*t3622*t3616*t3609- \
               1.0)*(-4.0/9.0)-c*pow(rho_a[index],4.0/3.0)*(gamma_aa[index]*t3611*t3622*t3616*t3626*(8.8E1/9.0)-gamma_aa[index]* \
               t3611*t3623*t3616*t3625*t3634*(8.0/3.0)-gamma_aa[index]*t3611*t3616*t3625*t3609*(gamma_aa[index]*t3626* \
               t3618*t3619*8.8E1+1.0/pow(rho_a[index],2.2E1/3.0)*t3610*t3630*t3624*t3619*4.32E2+(gamma_aa[index]* \
               1.0/pow(rho_a[index],1.0E1)*t3624*t3619*1.28E2)/t3629-1.0/pow(rho_a[index],3.8E1/3.0)*t3610*(t3624* \
               t3624)*t3619*1.0/pow(t3629,3.0/2.0)*1.28E2)*(1.0/2.0)+gamma_aa[index]*t3611*1.0/pow(t3621,5.0/2.0) \
               *t3616*(t3634*t3634)*t3609*(3.0/4.0))+c*pow(rho_a[index],1.0/3.0)*(gamma_aa[index]*t3611*t3622*t3623* \
               t3616*(8.0/3.0)-gamma_aa[index]*t3611*t3616*t3625*t3634*t3609*(1.0/2.0))*(8.0/3.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        }

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t3636 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3644 = gamma_aa[index]*t3636;
                double t3637 = log(t3644+sqrt(t3644*t3644+1.0));
                double t3639 = d2*d2;
                double t3640 = gamma_aa[index]+t3639;
                double t3641 = 1.0/t3640;
                double t3642 = d1*gamma_aa[index]*t3641;
                double t3638 = d0+t3642;
                double t3643 = 1.0/c;
                double t3645 = t3637*t3637;
                double t3646 = t3638*t3638;
                double t3647 = gamma_aa[index]*t3636*t3645*t3646*9.0;
                double t3648 = t3647+1.0;
                double t3649 = 1.0/sqrt(t3648);
                double t3650 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3651 = d1*t3641;
                double t3652 = 1.0/(t3640*t3640);
                double t3660 = d1*gamma_aa[index]*t3652;
                double t3653 = t3651-t3660;
                double t3654 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t3655 = gamma_aa[index]*gamma_aa[index];
                double t3656 = t3650*t3655;
                double t3657 = t3656+1.0;
                double t3658 = 1.0/sqrt(t3657);
                double t3659 = 1.0/pow(t3648,3.0/2.0);
                double t3661 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t3662 = t3636*t3645*t3646*9.0;
                double t3663 = gamma_aa[index]*t3650*t3637*t3646*t3658*1.8E1;
                double t3664 = gamma_aa[index]*t3653*t3636*t3645*t3638*1.8E1;
                double t3665 = t3662+t3663+t3664;
                double t3666 = gamma_aa[index]*t3645*t3654*t3646*2.4E1;
                double t3667 = t3661*t3637*t3646*t3655*t3658*4.8E1;
                double t3668 = t3666+t3667;
                v_rho_a_gamma_aa_[index] = -c*pow(rho_a[index],4.0/3.0)*(t3643*t3654*t3638*t3649*(-8.0/3.0)-gamma_aa[index]* \
                   t3643*t3653*t3654*t3649*(8.0/3.0)+t3643*t3636*t3638*t3659*t3668*(1.0/2.0)+gamma_aa[index]*t3643*t3653* \
                   t3636*t3659*t3668*(1.0/2.0)+gamma_aa[index]*t3643*t3654*t3638*t3665*t3659*(4.0/3.0)+gamma_aa[index]* \
                   t3643*t3636*t3638*t3659*(t3645*t3654*t3646*2.4E1+(1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t3646*t3655*4.8E1)/t3657+gamma_aa[index]* \
                   t3653*t3645*t3654*t3638*4.8E1+gamma_aa[index]*t3661*t3637*t3646*t3658*1.44E2+t3661*t3653*t3637*t3655* \
                   t3638*t3658*9.6E1-gamma_aa[index]*1.0/pow(rho_a[index],3.5E1/3.0)*t3637*t3646*t3655*1.0/pow(t3657,3.0/ \
                   2.0)*4.8E1)*(1.0/2.0)-gamma_aa[index]*t3643*t3636*t3638*t3665*1.0/pow(t3648,5.0/2.0)*t3668*(3.0/4.0) \
                   )-c*pow(rho_a[index],1.0/3.0)*(t3643*t3636*t3638*t3649+gamma_aa[index]*t3643*t3653*t3636*t3649-gamma_aa[index]* \
                   t3643*t3636*t3638*t3665*t3659*(1.0/2.0))*(4.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            }

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t3670 = d2*d2;
                double t3671 = gamma_aa[index]+t3670;
                double t3672 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3677 = gamma_aa[index]*t3672;
                double t3673 = log(t3677+sqrt(t3677*t3677+1.0));
                double t3674 = 1.0/t3671;
                double t3679 = d1*gamma_aa[index]*t3674;
                double t3675 = d0+t3679;
                double t3676 = 1.0/c;
                double t3678 = t3673*t3673;
                double t3680 = t3675*t3675;
                double t3681 = gamma_aa[index]*t3680*t3672*t3678*9.0;
                double t3682 = t3681+1.0;
                double t3683 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3684 = d1*t3674;
                double t3685 = 1.0/(t3671*t3671);
                double t3694 = d1*gamma_aa[index]*t3685;
                double t3686 = t3684-t3694;
                double t3687 = 1.0/sqrt(t3682);
                double t3688 = t3680*t3672*t3678*9.0;
                double t3689 = gamma_aa[index]*gamma_aa[index];
                double t3690 = t3683*t3689;
                double t3691 = t3690+1.0;
                double t3692 = 1.0/sqrt(t3691);
                double t3693 = gamma_aa[index]*t3680*t3673*t3683*t3692*1.8E1;
                double t3695 = gamma_aa[index]*t3672*t3675*t3686*t3678*1.8E1;
                double t3696 = t3693+t3695+t3688;
                double t3697 = 1.0/pow(t3682,3.0/2.0);
                double t3698 = d1*t3685*2.0;
                double t3699 = 1.0/(t3671*t3671*t3671);
                double t3700 = t3698-d1*gamma_aa[index]*t3699*2.0;
                v_gamma_aa_gamma_aa_[index] = c*pow(rho_a[index],4.0/3.0)*(t3672*t3676*t3686*t3687*-2.0+gamma_aa[index]* \
                   t3672*t3676*t3687*t3700+t3672*t3675*t3676*t3696*t3697+gamma_aa[index]*t3672*t3676*t3686*t3696*t3697+ \
                   gamma_aa[index]*t3672*t3675*t3676*t3697*(t3680*t3673*t3683*t3692*3.6E1+t3672*t3675*t3686*t3678*3.6E1+ \
                   gamma_aa[index]*t3672*(t3686*t3686)*t3678*1.8E1+(gamma_aa[index]*1.0/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t3680*1.8E1)/t3691-1.0/pow(rho_a[index],3.2E1/ \
                   3.0)*t3680*t3673*1.0/pow(t3691,3.0/2.0)*t3689*1.8E1-gamma_aa[index]*t3672*t3675*t3678*t3700*1.8E1+ \
                   gamma_aa[index]*t3673*t3683*t3692*t3675*t3686*7.2E1)*(1.0/2.0)-gamma_aa[index]*t3672*1.0/pow(t3682,5.0/ \
                   2.0)*t3675*t3676*(t3696*t3696)*(3.0/4.0))*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            }

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            }

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            }

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                }

            }
        }
    }
}
void FT97B_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double c = params_[0].second;
    double d0 = params_[1].second;
    double d1 = params_[2].second;
    double d2 = params_[3].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t2896 = 1.0/pow(rho_a[index],8.0/3.0);
            double t2897 = log(gamma_aa[index]*t2896+sqrt((gamma_aa[index]*gamma_aa[index])*(t2896*t2896)+1.0) \
               );
            double t2899 = d2*d2;
            double t2900 = gamma_aa[index]+t2899;
            double t2901 = 1.0/t2900;
            double t2902 = d1*gamma_aa[index]*t2901;
            double t2898 = d0+t2902;
            double t2903 = 1.0/c;
            double t2904 = 1.0/pow(rho_b[index],8.0/3.0);
            double t2905 = log(gamma_bb[index]*t2904+sqrt((gamma_bb[index]*gamma_bb[index])*(t2904*t2904)+1.0) \
               );
            double t2907 = gamma_bb[index]+t2899;
            double t2908 = 1.0/t2907;
            double t2909 = d1*gamma_bb[index]*t2908;
            double t2906 = d0+t2909;
            functional_[index] = -c*pow(rho_a[index],4.0/3.0)*(gamma_aa[index]*t2896*t2898*t2903*1.0/sqrt(gamma_aa[index]* \
               t2896*(t2897*t2897)*(t2898*t2898)*9.0+1.0)-1.0)-c*pow(rho_b[index],4.0/3.0)*(gamma_bb[index]*t2903* \
               t2904*t2906*1.0/sqrt(gamma_bb[index]*t2904*(t2905*t2905)*(t2906*t2906)*9.0+1.0)-1.0);
        } else if (rho_a[index] > cutoff_) {
            double t3361 = 1.0/pow(rho_a[index],8.0/3.0);
            double t3362 = log(gamma_aa[index]*t3361+sqrt((gamma_aa[index]*gamma_aa[index])*(t3361*t3361)+1.0) \
               );
            double t3364 = d2*d2;
            double t3365 = gamma_aa[index]+t3364;
            double t3366 = 1.0/t3365;
            double t3367 = d1*gamma_aa[index]*t3366;
            double t3363 = d0+t3367;
            functional_[index] = -c*pow(rho_a[index],4.0/3.0)*((gamma_aa[index]*t3361*t3363*1.0/sqrt(gamma_aa[index]* \
               t3361*(t3362*t3362)*(t3363*t3363)*9.0+1.0))/c-1.0);
        } else if (rho_b[index] > cutoff_) {
            double t3194 = 1.0/pow(rho_b[index],8.0/3.0);
            double t3195 = log(gamma_bb[index]*t3194+sqrt((gamma_bb[index]*gamma_bb[index])*(t3194*t3194)+1.0) \
               );
            double t3197 = d2*d2;
            double t3198 = gamma_bb[index]+t3197;
            double t3199 = 1.0/t3198;
            double t3200 = d1*gamma_bb[index]*t3199;
            double t3196 = d0+t3200;
            functional_[index] = -c*pow(rho_b[index],4.0/3.0)*((gamma_bb[index]*t3194*t3196*1.0/sqrt(gamma_bb[index]* \
               t3194*(t3195*t3195)*(t3196*t3196)*9.0+1.0))/c-1.0);
        } else {
            functional_[index] = 0.0;
        }

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t2911 = 1.0/pow(rho_a[index],8.0/3.0);
            double t2919 = gamma_aa[index]*t2911;
            double t2912 = log(t2919+sqrt(t2919*t2919+1.0));
            double t2914 = d2*d2;
            double t2915 = gamma_aa[index]+t2914;
            double t2916 = 1.0/t2915;
            double t2917 = d1*gamma_aa[index]*t2916;
            double t2913 = d0+t2917;
            double t2918 = 1.0/c;
            double t2920 = t2912*t2912;
            double t2921 = t2913*t2913;
            double t2922 = gamma_aa[index]*t2911*t2920*t2921*9.0;
            double t2923 = t2922+1.0;
            double t2924 = 1.0/sqrt(t2923);
            double t2925 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t2926 = gamma_aa[index]*gamma_aa[index];
            v_rho_a_[index] = c*pow(rho_a[index],1.0/3.0)*(gamma_aa[index]*t2911*t2913*t2924*t2918-1.0)*(-4.0/ \
               3.0)+c*pow(rho_a[index],4.0/3.0)*(gamma_aa[index]*t2913*t2924*t2925*t2918*(8.0/3.0)-gamma_aa[index]* \
               t2911*t2913*1.0/pow(t2923,3.0/2.0)*t2918*(gamma_aa[index]*t2920*t2921*t2925*2.4E1+1.0/pow(rho_a[index],1.9E1/ \
               3.0)*t2912*t2921*t2926*1.0/sqrt(1.0/pow(rho_a[index],1.6E1/3.0)*t2926+1.0)*4.8E1)*(1.0/2.0));
        } else if (rho_a[index] > cutoff_) {
            double t3369 = 1.0/pow(rho_a[index],8.0/3.0);
            double t3377 = gamma_aa[index]*t3369;
            double t3370 = log(t3377+sqrt(t3377*t3377+1.0));
            double t3372 = d2*d2;
            double t3373 = gamma_aa[index]+t3372;
            double t3374 = 1.0/t3373;
            double t3375 = d1*gamma_aa[index]*t3374;
            double t3371 = d0+t3375;
            double t3376 = 1.0/c;
            double t3378 = t3370*t3370;
            double t3379 = t3371*t3371;
            double t3380 = gamma_aa[index]*t3369*t3378*t3379*9.0;
            double t3381 = t3380+1.0;
            double t3382 = 1.0/sqrt(t3381);
            double t3383 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t3384 = gamma_aa[index]*gamma_aa[index];
            v_rho_a_[index] = c*pow(rho_a[index],1.0/3.0)*(gamma_aa[index]*t3371*t3382*t3376*t3369-1.0)*(-4.0/ \
               3.0)+c*pow(rho_a[index],4.0/3.0)*(gamma_aa[index]*t3371*t3382*t3383*t3376*(8.0/3.0)-gamma_aa[index]* \
               t3371*1.0/pow(t3381,3.0/2.0)*t3376*t3369*(gamma_aa[index]*t3383*t3378*t3379*2.4E1+1.0/pow(rho_a[index],1.9E1/ \
               3.0)*t3370*t3384*t3379*1.0/sqrt(1.0/pow(rho_a[index],1.6E1/3.0)*t3384+1.0)*4.8E1)*(1.0/2.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        }

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t2928 = 1.0/pow(rho_b[index],8.0/3.0);
            double t2936 = gamma_bb[index]*t2928;
            double t2929 = log(t2936+sqrt(t2936*t2936+1.0));
            double t2931 = d2*d2;
            double t2932 = gamma_bb[index]+t2931;
            double t2933 = 1.0/t2932;
            double t2934 = d1*gamma_bb[index]*t2933;
            double t2930 = d0+t2934;
            double t2935 = 1.0/c;
            double t2937 = t2929*t2929;
            double t2938 = t2930*t2930;
            double t2939 = gamma_bb[index]*t2928*t2937*t2938*9.0;
            double t2940 = t2939+1.0;
            double t2941 = 1.0/sqrt(t2940);
            double t2942 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t2943 = gamma_bb[index]*gamma_bb[index];
            v_rho_b_[index] = c*pow(rho_b[index],1.0/3.0)*(gamma_bb[index]*t2930*t2941*t2935*t2928-1.0)*(-4.0/ \
               3.0)+c*pow(rho_b[index],4.0/3.0)*(gamma_bb[index]*t2930*t2941*t2942*t2935*(8.0/3.0)-gamma_bb[index]* \
               t2930*1.0/pow(t2940,3.0/2.0)*t2935*t2928*(gamma_bb[index]*t2942*t2937*t2938*2.4E1+1.0/pow(rho_b[index],1.9E1/ \
               3.0)*t2943*t2929*t2938*1.0/sqrt(1.0/pow(rho_b[index],1.6E1/3.0)*t2943+1.0)*4.8E1)*(1.0/2.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t3203 = 1.0/pow(rho_b[index],8.0/3.0);
            double t3211 = gamma_bb[index]*t3203;
            double t3204 = log(t3211+sqrt(t3211*t3211+1.0));
            double t3206 = d2*d2;
            double t3207 = gamma_bb[index]+t3206;
            double t3208 = 1.0/t3207;
            double t3209 = d1*gamma_bb[index]*t3208;
            double t3205 = d0+t3209;
            double t3210 = 1.0/c;
            double t3212 = t3204*t3204;
            double t3213 = t3205*t3205;
            double t3214 = gamma_bb[index]*t3203*t3212*t3213*9.0;
            double t3215 = t3214+1.0;
            double t3216 = 1.0/sqrt(t3215);
            double t3217 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t3218 = gamma_bb[index]*gamma_bb[index];
            v_rho_b_[index] = c*pow(rho_b[index],1.0/3.0)*(gamma_bb[index]*t3210*t3203*t3205*t3216-1.0)*(-4.0/ \
               3.0)+c*pow(rho_b[index],4.0/3.0)*(gamma_bb[index]*t3210*t3205*t3216*t3217*(8.0/3.0)-gamma_bb[index]* \
               t3210*t3203*t3205*1.0/pow(t3215,3.0/2.0)*(gamma_bb[index]*t3212*t3213*t3217*2.4E1+1.0/pow(rho_b[index],1.9E1/ \
               3.0)*t3204*t3213*t3218*1.0/sqrt(1.0/pow(rho_b[index],1.6E1/3.0)*t3218+1.0)*4.8E1)*(1.0/2.0));
        } else {
            v_rho_b_[index] = 0.0;
        }

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2945 = 1.0/pow(rho_a[index],8.0/3.0);
                double t2953 = gamma_aa[index]*t2945;
                double t2946 = log(t2953+sqrt(t2953*t2953+1.0));
                double t2948 = d2*d2;
                double t2949 = gamma_aa[index]+t2948;
                double t2950 = 1.0/t2949;
                double t2951 = d1*gamma_aa[index]*t2950;
                double t2947 = d0+t2951;
                double t2952 = 1.0/c;
                double t2954 = t2946*t2946;
                double t2955 = t2947*t2947;
                double t2956 = gamma_aa[index]*t2945*t2954*t2955*9.0;
                double t2957 = t2956+1.0;
                double t2958 = 1.0/sqrt(t2957);
                double t2959 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t2960 = d1*t2950;
                double t2961 = 1.0/(t2949*t2949);
                double t2962 = t2960-d1*gamma_aa[index]*t2961;
                v_gamma_aa_[index] = -c*pow(rho_a[index],4.0/3.0)*(t2952*t2945*t2947*t2958+gamma_aa[index]*t2952* \
                   t2962*t2945*t2958-gamma_aa[index]*t2952*t2945*t2947*1.0/pow(t2957,3.0/2.0)*(t2945*t2954*t2955*9.0+ \
                   gamma_aa[index]*t2946*t2955*t2959*1.0/sqrt((gamma_aa[index]*gamma_aa[index])*t2959+1.0)*1.8E1+gamma_aa[index]* \
                   t2962*t2945*t2954*t2947*1.8E1)*(1.0/2.0));
            } else if (rho_a[index] > cutoff_) {
                double t3387 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3395 = gamma_aa[index]*t3387;
                double t3388 = log(t3395+sqrt(t3395*t3395+1.0));
                double t3390 = d2*d2;
                double t3391 = gamma_aa[index]+t3390;
                double t3392 = 1.0/t3391;
                double t3393 = d1*gamma_aa[index]*t3392;
                double t3389 = d0+t3393;
                double t3394 = 1.0/c;
                double t3396 = t3388*t3388;
                double t3397 = t3389*t3389;
                double t3398 = gamma_aa[index]*t3387*t3396*t3397*9.0;
                double t3399 = t3398+1.0;
                double t3400 = 1.0/sqrt(t3399);
                double t3401 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3402 = d1*t3392;
                double t3403 = 1.0/(t3391*t3391);
                double t3404 = t3402-d1*gamma_aa[index]*t3403;
                v_gamma_aa_[index] = -c*pow(rho_a[index],4.0/3.0)*(t3394*t3387*t3389*t3400+gamma_aa[index]*t3394* \
                   t3387*t3400*t3404-gamma_aa[index]*t3394*t3387*t3389*1.0/pow(t3399,3.0/2.0)*(t3387*t3396*t3397*9.0+ \
                   gamma_aa[index]*t3388*t3397*t3401*1.0/sqrt((gamma_aa[index]*gamma_aa[index])*t3401+1.0)*1.8E1+gamma_aa[index]* \
                   t3387*t3396*t3389*t3404*1.8E1)*(1.0/2.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            }

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            }

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t2965 = 1.0/pow(rho_b[index],8.0/3.0);
                double t2973 = gamma_bb[index]*t2965;
                double t2966 = log(t2973+sqrt(t2973*t2973+1.0));
                double t2968 = d2*d2;
                double t2969 = gamma_bb[index]+t2968;
                double t2970 = 1.0/t2969;
                double t2971 = d1*gamma_bb[index]*t2970;
                double t2967 = d0+t2971;
                double t2972 = 1.0/c;
                double t2974 = t2966*t2966;
                double t2975 = t2967*t2967;
                double t2976 = gamma_bb[index]*t2965*t2974*t2975*9.0;
                double t2977 = t2976+1.0;
                double t2978 = 1.0/sqrt(t2977);
                double t2979 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t2980 = d1*t2970;
                double t2981 = 1.0/(t2969*t2969);
                double t2982 = t2980-d1*gamma_bb[index]*t2981;
                v_gamma_bb_[index] = -c*pow(rho_b[index],4.0/3.0)*(t2972*t2965*t2967*t2978+gamma_bb[index]*t2972* \
                   t2982*t2965*t2978-gamma_bb[index]*t2972*t2965*t2967*1.0/pow(t2977,3.0/2.0)*(t2965*t2974*t2975*9.0+ \
                   gamma_bb[index]*t2966*t2975*t2979*1.0/sqrt((gamma_bb[index]*gamma_bb[index])*t2979+1.0)*1.8E1+gamma_bb[index]* \
                   t2982*t2965*t2974*t2967*1.8E1)*(1.0/2.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t3222 = 1.0/pow(rho_b[index],8.0/3.0);
                double t3230 = gamma_bb[index]*t3222;
                double t3223 = log(t3230+sqrt(t3230*t3230+1.0));
                double t3225 = d2*d2;
                double t3226 = gamma_bb[index]+t3225;
                double t3227 = 1.0/t3226;
                double t3228 = d1*gamma_bb[index]*t3227;
                double t3224 = d0+t3228;
                double t3229 = 1.0/c;
                double t3231 = t3223*t3223;
                double t3232 = t3224*t3224;
                double t3233 = gamma_bb[index]*t3222*t3231*t3232*9.0;
                double t3234 = t3233+1.0;
                double t3235 = 1.0/sqrt(t3234);
                double t3236 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t3237 = d1*t3227;
                double t3238 = 1.0/(t3226*t3226);
                double t3239 = t3237-d1*gamma_bb[index]*t3238;
                v_gamma_bb_[index] = -c*pow(rho_b[index],4.0/3.0)*(t3222*t3224*t3235*t3229+gamma_bb[index]*t3222* \
                   t3235*t3229*t3239-gamma_bb[index]*t3222*t3224*1.0/pow(t3234,3.0/2.0)*t3229*(t3222*t3231*t3232*9.0+ \
                   gamma_bb[index]*t3223*t3232*t3236*1.0/sqrt((gamma_bb[index]*gamma_bb[index])*t3236+1.0)*1.8E1+gamma_bb[index]* \
                   t3222*t3231*t3224*t3239*1.8E1)*(1.0/2.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            }
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            }

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            }
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t2986 = 1.0/pow(rho_a[index],8.0/3.0);
            double t2994 = gamma_aa[index]*t2986;
            double t2987 = log(t2994+sqrt(t2994*t2994+1.0));
            double t2989 = d2*d2;
            double t2990 = gamma_aa[index]+t2989;
            double t2991 = 1.0/t2990;
            double t2992 = d1*gamma_aa[index]*t2991;
            double t2988 = d0+t2992;
            double t2993 = 1.0/c;
            double t2995 = t2987*t2987;
            double t2996 = t2988*t2988;
            double t2997 = gamma_aa[index]*t2986*t2995*t2996*9.0;
            double t2998 = t2997+1.0;
            double t2999 = 1.0/sqrt(t2998);
            double t3000 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t3001 = gamma_aa[index]*gamma_aa[index];
            double t3002 = 1.0/pow(t2998,3.0/2.0);
            double t3003 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t3004 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t3005 = t3001*t3004;
            double t3006 = t3005+1.0;
            double t3007 = 1.0/sqrt(t3006);
            double t3008 = gamma_aa[index]*t2995*t2996*t3000*2.4E1;
            double t3009 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t3010 = t2987*t2996*t3001*t3007*t3009*4.8E1;
            double t3011 = t3010+t3008;
            v_rho_a_rho_a_[index] = c*1.0/pow(rho_a[index],2.0/3.0)*(gamma_aa[index]*t2993*t2986*t2988*t2999- \
               1.0)*(-4.0/9.0)-c*pow(rho_a[index],4.0/3.0)*(gamma_aa[index]*t2993*t2988*t2999*t3003*(8.8E1/9.0)-gamma_aa[index]* \
               t2993*t2988*t3000*t3002*t3011*(8.0/3.0)-gamma_aa[index]*t2993*t2986*t2988*t3002*(gamma_aa[index]*t2995* \
               t2996*t3003*8.8E1+1.0/pow(rho_a[index],2.2E1/3.0)*t2987*t2996*t3001*t3007*4.32E2+(gamma_aa[index]* \
               1.0/pow(rho_a[index],1.0E1)*t2996*t3001*1.28E2)/t3006-1.0/pow(rho_a[index],3.8E1/3.0)*t2987*t2996* \
               (t3001*t3001)*1.0/pow(t3006,3.0/2.0)*1.28E2)*(1.0/2.0)+gamma_aa[index]*t2993*t2986*t2988*1.0/pow(t2998,5.0/ \
               2.0)*(t3011*t3011)*(3.0/4.0))+c*pow(rho_a[index],1.0/3.0)*(gamma_aa[index]*t2993*t2988*t2999*t3000* \
               (8.0/3.0)-gamma_aa[index]*t2993*t2986*t2988*t3002*t3011*(1.0/2.0))*(8.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t3410 = 1.0/pow(rho_a[index],8.0/3.0);
            double t3418 = gamma_aa[index]*t3410;
            double t3411 = log(t3418+sqrt(t3418*t3418+1.0));
            double t3413 = d2*d2;
            double t3414 = gamma_aa[index]+t3413;
            double t3415 = 1.0/t3414;
            double t3416 = d1*gamma_aa[index]*t3415;
            double t3412 = d0+t3416;
            double t3417 = 1.0/c;
            double t3419 = t3411*t3411;
            double t3420 = t3412*t3412;
            double t3421 = gamma_aa[index]*t3410*t3420*t3419*9.0;
            double t3422 = t3421+1.0;
            double t3423 = 1.0/sqrt(t3422);
            double t3424 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t3425 = gamma_aa[index]*gamma_aa[index];
            double t3426 = 1.0/pow(t3422,3.0/2.0);
            double t3427 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t3428 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t3429 = t3425*t3428;
            double t3430 = t3429+1.0;
            double t3431 = 1.0/sqrt(t3430);
            double t3432 = gamma_aa[index]*t3420*t3424*t3419*2.4E1;
            double t3433 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t3434 = t3411*t3420*t3431*t3433*t3425*4.8E1;
            double t3435 = t3432+t3434;
            v_rho_a_rho_a_[index] = c*1.0/pow(rho_a[index],2.0/3.0)*(gamma_aa[index]*t3410*t3412*t3423*t3417- \
               1.0)*(-4.0/9.0)-c*pow(rho_a[index],4.0/3.0)*(gamma_aa[index]*t3412*t3423*t3417*t3427*(8.8E1/9.0)-gamma_aa[index]* \
               t3412*t3424*t3417*t3426*t3435*(8.0/3.0)-gamma_aa[index]*t3410*t3412*t3417*t3426*(gamma_aa[index]*t3420* \
               t3427*t3419*8.8E1+1.0/pow(rho_a[index],2.2E1/3.0)*t3411*t3420*t3431*t3425*4.32E2+(gamma_aa[index]* \
               1.0/pow(rho_a[index],1.0E1)*t3420*t3425*1.28E2)/t3430-1.0/pow(rho_a[index],3.8E1/3.0)*t3411*t3420* \
               1.0/pow(t3430,3.0/2.0)*(t3425*t3425)*1.28E2)*(1.0/2.0)+gamma_aa[index]*t3410*t3412*1.0/pow(t3422,5.0/ \
               2.0)*t3417*(t3435*t3435)*(3.0/4.0))+c*pow(rho_a[index],1.0/3.0)*(gamma_aa[index]*t3412*t3423*t3424* \
               t3417*(8.0/3.0)-gamma_aa[index]*t3410*t3412*t3417*t3426*t3435*(1.0/2.0))*(8.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        }

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        }

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t3014 = 1.0/pow(rho_b[index],8.0/3.0);
            double t3022 = gamma_bb[index]*t3014;
            double t3015 = log(t3022+sqrt(t3022*t3022+1.0));
            double t3017 = d2*d2;
            double t3018 = gamma_bb[index]+t3017;
            double t3019 = 1.0/t3018;
            double t3020 = d1*gamma_bb[index]*t3019;
            double t3016 = d0+t3020;
            double t3021 = 1.0/c;
            double t3023 = t3015*t3015;
            double t3024 = t3016*t3016;
            double t3025 = gamma_bb[index]*t3014*t3023*t3024*9.0;
            double t3026 = t3025+1.0;
            double t3027 = 1.0/sqrt(t3026);
            double t3028 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t3029 = gamma_bb[index]*gamma_bb[index];
            double t3030 = 1.0/pow(t3026,3.0/2.0);
            double t3031 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t3032 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t3033 = t3032*t3029;
            double t3034 = t3033+1.0;
            double t3035 = 1.0/sqrt(t3034);
            double t3036 = gamma_bb[index]*t3023*t3024*t3028*2.4E1;
            double t3037 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t3038 = t3015*t3024*t3035*t3037*t3029*4.8E1;
            double t3039 = t3036+t3038;
            v_rho_b_rho_b_[index] = c*1.0/pow(rho_b[index],2.0/3.0)*(gamma_bb[index]*t3021*t3014*t3016*t3027- \
               1.0)*(-4.0/9.0)-c*pow(rho_b[index],4.0/3.0)*(gamma_bb[index]*t3021*t3031*t3016*t3027*(8.8E1/9.0)-gamma_bb[index]* \
               t3021*t3030*t3016*t3028*t3039*(8.0/3.0)-gamma_bb[index]*t3021*t3030*t3014*t3016*(gamma_bb[index]*t3031* \
               t3023*t3024*8.8E1+1.0/pow(rho_b[index],2.2E1/3.0)*t3015*t3024*t3035*t3029*4.32E2+(gamma_bb[index]* \
               1.0/pow(rho_b[index],1.0E1)*t3024*t3029*1.28E2)/t3034-1.0/pow(rho_b[index],3.8E1/3.0)*t3015*t3024* \
               1.0/pow(t3034,3.0/2.0)*(t3029*t3029)*1.28E2)*(1.0/2.0)+gamma_bb[index]*t3021*t3014*t3016*1.0/pow(t3026,5.0/ \
               2.0)*(t3039*t3039)*(3.0/4.0))+c*pow(rho_b[index],1.0/3.0)*(gamma_bb[index]*t3021*t3016*t3027*t3028* \
               (8.0/3.0)-gamma_bb[index]*t3021*t3030*t3014*t3016*t3039*(1.0/2.0))*(8.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t3245 = 1.0/pow(rho_b[index],8.0/3.0);
            double t3253 = gamma_bb[index]*t3245;
            double t3246 = log(t3253+sqrt(t3253*t3253+1.0));
            double t3248 = d2*d2;
            double t3249 = gamma_bb[index]+t3248;
            double t3250 = 1.0/t3249;
            double t3251 = d1*gamma_bb[index]*t3250;
            double t3247 = d0+t3251;
            double t3252 = 1.0/c;
            double t3254 = t3246*t3246;
            double t3255 = t3247*t3247;
            double t3256 = gamma_bb[index]*t3245*t3254*t3255*9.0;
            double t3257 = t3256+1.0;
            double t3258 = 1.0/sqrt(t3257);
            double t3259 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t3260 = gamma_bb[index]*gamma_bb[index];
            double t3261 = 1.0/pow(t3257,3.0/2.0);
            double t3262 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t3263 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t3264 = t3260*t3263;
            double t3265 = t3264+1.0;
            double t3266 = 1.0/sqrt(t3265);
            double t3267 = gamma_bb[index]*t3254*t3255*t3259*2.4E1;
            double t3268 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t3269 = t3260*t3246*t3255*t3266*t3268*4.8E1;
            double t3270 = t3267+t3269;
            v_rho_b_rho_b_[index] = c*1.0/pow(rho_b[index],2.0/3.0)*(gamma_bb[index]*t3252*t3245*t3247*t3258- \
               1.0)*(-4.0/9.0)-c*pow(rho_b[index],4.0/3.0)*(gamma_bb[index]*t3252*t3262*t3247*t3258*(8.8E1/9.0)-gamma_bb[index]* \
               t3252*t3261*t3270*t3247*t3259*(8.0/3.0)-gamma_bb[index]*t3252*t3261*t3245*t3247*(gamma_bb[index]*t3262* \
               t3254*t3255*8.8E1+1.0/pow(rho_b[index],2.2E1/3.0)*t3260*t3246*t3255*t3266*4.32E2+(gamma_bb[index]* \
               1.0/pow(rho_b[index],1.0E1)*t3260*t3255*1.28E2)/t3265-1.0/pow(rho_b[index],3.8E1/3.0)*(t3260*t3260) \
               *t3246*t3255*1.0/pow(t3265,3.0/2.0)*1.28E2)*(1.0/2.0)+gamma_bb[index]*t3252*(t3270*t3270)*t3245*t3247* \
               1.0/pow(t3257,5.0/2.0)*(3.0/4.0))+c*pow(rho_b[index],1.0/3.0)*(gamma_bb[index]*t3252*t3247*t3258*t3259* \
               (8.0/3.0)-gamma_bb[index]*t3252*t3261*t3270*t3245*t3247*(1.0/2.0))*(8.0/3.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        }

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3041 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3049 = gamma_aa[index]*t3041;
                double t3042 = log(t3049+sqrt(t3049*t3049+1.0));
                double t3044 = d2*d2;
                double t3045 = gamma_aa[index]+t3044;
                double t3046 = 1.0/t3045;
                double t3047 = d1*gamma_aa[index]*t3046;
                double t3043 = d0+t3047;
                double t3048 = 1.0/c;
                double t3050 = t3042*t3042;
                double t3051 = t3043*t3043;
                double t3052 = gamma_aa[index]*t3041*t3050*t3051*9.0;
                double t3053 = t3052+1.0;
                double t3054 = 1.0/sqrt(t3053);
                double t3055 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3056 = d1*t3046;
                double t3057 = 1.0/(t3045*t3045);
                double t3065 = d1*gamma_aa[index]*t3057;
                double t3058 = t3056-t3065;
                double t3059 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t3060 = gamma_aa[index]*gamma_aa[index];
                double t3061 = t3060*t3055;
                double t3062 = t3061+1.0;
                double t3063 = 1.0/sqrt(t3062);
                double t3064 = 1.0/pow(t3053,3.0/2.0);
                double t3066 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t3067 = t3041*t3050*t3051*9.0;
                double t3068 = gamma_aa[index]*t3042*t3051*t3063*t3055*1.8E1;
                double t3069 = gamma_aa[index]*t3041*t3050*t3043*t3058*1.8E1;
                double t3070 = t3067+t3068+t3069;
                double t3071 = gamma_aa[index]*t3050*t3051*t3059*2.4E1;
                double t3072 = t3042*t3051*t3060*t3063*t3066*4.8E1;
                double t3073 = t3071+t3072;
                v_rho_a_gamma_aa_[index] = -c*pow(rho_a[index],4.0/3.0)*(t3043*t3054*t3048*t3059*(-8.0/3.0)-gamma_aa[index]* \
                   t3054*t3048*t3058*t3059*(8.0/3.0)+t3041*t3043*t3064*t3073*t3048*(1.0/2.0)+gamma_aa[index]*t3041*t3064* \
                   t3073*t3048*t3058*(1.0/2.0)+gamma_aa[index]*t3043*t3070*t3064*t3048*t3059*(4.0/3.0)+gamma_aa[index]* \
                   t3041*t3043*t3064*t3048*(t3050*t3051*t3059*2.4E1+(1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t3051*t3060*4.8E1)/t3062+gamma_aa[index]* \
                   t3042*t3051*t3063*t3066*1.44E2+gamma_aa[index]*t3050*t3043*t3058*t3059*4.8E1+t3042*t3060*t3043*t3063* \
                   t3066*t3058*9.6E1-gamma_aa[index]*1.0/pow(rho_a[index],3.5E1/3.0)*t3042*t3051*t3060*1.0/pow(t3062,3.0/ \
                   2.0)*4.8E1)*(1.0/2.0)-gamma_aa[index]*t3041*t3043*t3070*1.0/pow(t3053,5.0/2.0)*t3073*t3048*(3.0/4.0) \
                   )-c*pow(rho_a[index],1.0/3.0)*(t3041*t3043*t3054*t3048+gamma_aa[index]*t3041*t3054*t3048*t3058-gamma_aa[index]* \
                   t3041*t3043*t3070*t3064*t3048*(1.0/2.0))*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t3439 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3447 = gamma_aa[index]*t3439;
                double t3440 = log(t3447+sqrt(t3447*t3447+1.0));
                double t3442 = d2*d2;
                double t3443 = gamma_aa[index]+t3442;
                double t3444 = 1.0/t3443;
                double t3445 = d1*gamma_aa[index]*t3444;
                double t3441 = d0+t3445;
                double t3446 = 1.0/c;
                double t3448 = t3440*t3440;
                double t3449 = t3441*t3441;
                double t3450 = gamma_aa[index]*t3439*t3448*t3449*9.0;
                double t3451 = t3450+1.0;
                double t3452 = 1.0/sqrt(t3451);
                double t3453 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3454 = d1*t3444;
                double t3455 = 1.0/(t3443*t3443);
                double t3463 = d1*gamma_aa[index]*t3455;
                double t3456 = t3454-t3463;
                double t3457 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t3458 = gamma_aa[index]*gamma_aa[index];
                double t3459 = t3453*t3458;
                double t3460 = t3459+1.0;
                double t3461 = 1.0/sqrt(t3460);
                double t3462 = 1.0/pow(t3451,3.0/2.0);
                double t3464 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t3465 = t3439*t3448*t3449*9.0;
                double t3466 = gamma_aa[index]*t3440*t3461*t3453*t3449*1.8E1;
                double t3467 = gamma_aa[index]*t3441*t3456*t3439*t3448*1.8E1;
                double t3468 = t3465+t3466+t3467;
                double t3469 = gamma_aa[index]*t3448*t3457*t3449*2.4E1;
                double t3470 = t3440*t3461*t3464*t3449*t3458*4.8E1;
                double t3471 = t3470+t3469;
                v_rho_a_gamma_aa_[index] = -c*pow(rho_a[index],4.0/3.0)*(t3441*t3452*t3446*t3457*(-8.0/3.0)-gamma_aa[index]* \
                   t3452*t3446*t3456*t3457*(8.0/3.0)+t3441*t3462*t3471*t3446*t3439*(1.0/2.0)+gamma_aa[index]*t3441*t3462* \
                   t3446*t3457*t3468*(4.0/3.0)+gamma_aa[index]*t3462*t3471*t3446*t3456*t3439*(1.0/2.0)+gamma_aa[index]* \
                   t3441*t3462*t3446*t3439*(t3448*t3457*t3449*2.4E1+(1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t3449*t3458*4.8E1)/t3460+gamma_aa[index]* \
                   t3440*t3461*t3464*t3449*1.44E2+gamma_aa[index]*t3441*t3456*t3448*t3457*4.8E1+t3440*t3441*t3461*t3464* \
                   t3456*t3458*9.6E1-gamma_aa[index]*1.0/pow(rho_a[index],3.5E1/3.0)*t3440*1.0/pow(t3460,3.0/2.0)*t3449* \
                   t3458*4.8E1)*(1.0/2.0)-gamma_aa[index]*t3441*1.0/pow(t3451,5.0/2.0)*t3471*t3446*t3439*t3468*(3.0/4.0) \
                   )-c*pow(rho_a[index],1.0/3.0)*(t3441*t3452*t3446*t3439+gamma_aa[index]*t3452*t3446*t3456*t3439-gamma_aa[index]* \
                   t3441*t3462*t3446*t3439*t3468*(1.0/2.0))*(4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            }

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            }

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            }

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            }

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            }

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3079 = 1.0/pow(rho_b[index],8.0/3.0);
                double t3087 = gamma_bb[index]*t3079;
                double t3080 = log(t3087+sqrt(t3087*t3087+1.0));
                double t3082 = d2*d2;
                double t3083 = gamma_bb[index]+t3082;
                double t3084 = 1.0/t3083;
                double t3085 = d1*gamma_bb[index]*t3084;
                double t3081 = d0+t3085;
                double t3086 = 1.0/c;
                double t3088 = t3080*t3080;
                double t3089 = t3081*t3081;
                double t3090 = gamma_bb[index]*t3079*t3088*t3089*9.0;
                double t3091 = t3090+1.0;
                double t3092 = 1.0/sqrt(t3091);
                double t3093 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t3094 = d1*t3084;
                double t3095 = 1.0/(t3083*t3083);
                double t3103 = d1*gamma_bb[index]*t3095;
                double t3096 = t3094-t3103;
                double t3097 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t3098 = gamma_bb[index]*gamma_bb[index];
                double t3099 = t3093*t3098;
                double t3100 = t3099+1.0;
                double t3101 = 1.0/sqrt(t3100);
                double t3102 = 1.0/pow(t3091,3.0/2.0);
                double t3104 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t3105 = t3079*t3088*t3089*9.0;
                double t3106 = gamma_bb[index]*t3080*t3093*t3089*t3101*1.8E1;
                double t3107 = gamma_bb[index]*t3081*t3096*t3079*t3088*1.8E1;
                double t3108 = t3105+t3106+t3107;
                double t3109 = gamma_bb[index]*t3088*t3097*t3089*2.4E1;
                double t3110 = t3080*t3089*t3098*t3101*t3104*4.8E1;
                double t3111 = t3110+t3109;
                v_rho_b_gamma_bb_[index] = -c*pow(rho_b[index],4.0/3.0)*(t3081*t3092*t3086*t3097*(-8.0/3.0)-gamma_bb[index]* \
                   t3092*t3086*t3096*t3097*(8.0/3.0)+t3081*t3086*t3079*t3102*t3111*(1.0/2.0)+gamma_bb[index]*t3081*t3086* \
                   t3097*t3102*t3108*(4.0/3.0)+gamma_bb[index]*t3086*t3096*t3079*t3102*t3111*(1.0/2.0)+gamma_bb[index]* \
                   t3081*t3086*t3079*t3102*(t3088*t3097*t3089*2.4E1+(1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t3089*t3098*4.8E1)/t3100+gamma_bb[index]* \
                   t3081*t3096*t3088*t3097*4.8E1+gamma_bb[index]*t3080*t3089*t3101*t3104*1.44E2+t3080*t3081*t3096*t3098* \
                   t3101*t3104*9.6E1-gamma_bb[index]*1.0/pow(rho_b[index],3.5E1/3.0)*t3080*t3089*t3098*1.0/pow(t3100,3.0/ \
                   2.0)*4.8E1)*(1.0/2.0)-gamma_bb[index]*t3081*1.0/pow(t3091,5.0/2.0)*t3086*t3079*t3111*t3108*(3.0/4.0) \
                   )-c*pow(rho_b[index],1.0/3.0)*(t3081*t3092*t3086*t3079+gamma_bb[index]*t3092*t3086*t3096*t3079-gamma_bb[index]* \
                   t3081*t3086*t3079*t3102*t3108*(1.0/2.0))*(4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t3277 = 1.0/pow(rho_b[index],8.0/3.0);
                double t3285 = gamma_bb[index]*t3277;
                double t3278 = log(t3285+sqrt(t3285*t3285+1.0));
                double t3280 = d2*d2;
                double t3281 = gamma_bb[index]+t3280;
                double t3282 = 1.0/t3281;
                double t3283 = d1*gamma_bb[index]*t3282;
                double t3279 = d0+t3283;
                double t3284 = 1.0/c;
                double t3286 = t3278*t3278;
                double t3287 = t3279*t3279;
                double t3288 = gamma_bb[index]*t3277*t3286*t3287*9.0;
                double t3289 = t3288+1.0;
                double t3290 = 1.0/sqrt(t3289);
                double t3291 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t3292 = d1*t3282;
                double t3293 = 1.0/(t3281*t3281);
                double t3301 = d1*gamma_bb[index]*t3293;
                double t3294 = t3292-t3301;
                double t3295 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t3296 = gamma_bb[index]*gamma_bb[index];
                double t3297 = t3291*t3296;
                double t3298 = t3297+1.0;
                double t3299 = 1.0/sqrt(t3298);
                double t3300 = 1.0/pow(t3289,3.0/2.0);
                double t3302 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t3303 = t3277*t3286*t3287*9.0;
                double t3304 = gamma_bb[index]*t3291*t3278*t3287*t3299*1.8E1;
                double t3305 = gamma_bb[index]*t3294*t3277*t3286*t3279*1.8E1;
                double t3306 = t3303+t3304+t3305;
                double t3307 = gamma_bb[index]*t3286*t3295*t3287*2.4E1;
                double t3308 = t3278*t3287*t3296*t3299*t3302*4.8E1;
                double t3309 = t3307+t3308;
                v_rho_b_gamma_bb_[index] = -c*pow(rho_b[index],4.0/3.0)*(t3290*t3284*t3295*t3279*(-8.0/3.0)-gamma_bb[index]* \
                   t3290*t3284*t3294*t3295*(8.0/3.0)+t3284*t3277*t3279*t3300*t3309*(1.0/2.0)+gamma_bb[index]*t3284*t3294* \
                   t3277*t3300*t3309*(1.0/2.0)+gamma_bb[index]*t3284*t3295*t3279*t3300*t3306*(4.0/3.0)+gamma_bb[index]* \
                   t3284*t3277*t3279*t3300*(t3286*t3295*t3287*2.4E1+(1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t3287*t3296*4.8E1)/t3298+gamma_bb[index]* \
                   t3294*t3286*t3295*t3279*4.8E1+gamma_bb[index]*t3278*t3287*t3299*t3302*1.44E2+t3294*t3278*t3296*t3279* \
                   t3299*t3302*9.6E1-gamma_bb[index]*1.0/pow(rho_b[index],3.5E1/3.0)*t3278*t3287*t3296*1.0/pow(t3298,3.0/ \
                   2.0)*4.8E1)*(1.0/2.0)-gamma_bb[index]*t3284*t3277*t3279*1.0/pow(t3289,5.0/2.0)*t3306*t3309*(3.0/4.0) \
                   )-c*pow(rho_b[index],1.0/3.0)*(t3290*t3284*t3277*t3279+gamma_bb[index]*t3290*t3284*t3294*t3277-gamma_bb[index]* \
                   t3284*t3277*t3279*t3300*t3306*(1.0/2.0))*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            }

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3113 = d2*d2;
                double t3114 = gamma_aa[index]+t3113;
                double t3115 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3120 = gamma_aa[index]*t3115;
                double t3116 = log(t3120+sqrt(t3120*t3120+1.0));
                double t3117 = 1.0/t3114;
                double t3122 = d1*gamma_aa[index]*t3117;
                double t3118 = d0+t3122;
                double t3119 = 1.0/c;
                double t3121 = t3116*t3116;
                double t3123 = t3118*t3118;
                double t3124 = gamma_aa[index]*t3121*t3123*t3115*9.0;
                double t3125 = t3124+1.0;
                double t3126 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3127 = d1*t3117;
                double t3128 = 1.0/(t3114*t3114);
                double t3137 = d1*gamma_aa[index]*t3128;
                double t3129 = t3127-t3137;
                double t3130 = 1.0/sqrt(t3125);
                double t3131 = t3121*t3123*t3115*9.0;
                double t3132 = gamma_aa[index]*gamma_aa[index];
                double t3133 = t3132*t3126;
                double t3134 = t3133+1.0;
                double t3135 = 1.0/sqrt(t3134);
                double t3136 = gamma_aa[index]*t3123*t3116*t3126*t3135*1.8E1;
                double t3138 = gamma_aa[index]*t3121*t3115*t3118*t3129*1.8E1;
                double t3139 = t3131+t3136+t3138;
                double t3140 = 1.0/pow(t3125,3.0/2.0);
                double t3141 = d1*t3128*2.0;
                double t3142 = 1.0/(t3114*t3114*t3114);
                double t3143 = t3141-d1*gamma_aa[index]*t3142*2.0;
                v_gamma_aa_gamma_aa_[index] = c*pow(rho_a[index],4.0/3.0)*(t3130*t3115*t3119*t3129*-2.0+gamma_aa[index]* \
                   t3130*t3115*t3143*t3119+t3140*t3115*t3118*t3119*t3139+gamma_aa[index]*t3140*t3115*t3119*t3129*t3139+ \
                   gamma_aa[index]*t3140*t3115*t3118*t3119*(t3123*t3116*t3126*t3135*3.6E1+t3121*t3115*t3118*t3129*3.6E1+ \
                   gamma_aa[index]*t3121*t3115*(t3129*t3129)*1.8E1+(gamma_aa[index]*1.0/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t3123*1.8E1)/t3134-1.0/pow(rho_a[index],3.2E1/ \
                   3.0)*t3123*t3132*t3116*1.0/pow(t3134,3.0/2.0)*1.8E1-gamma_aa[index]*t3121*t3115*t3143*t3118*1.8E1+ \
                   gamma_aa[index]*t3116*t3126*t3135*t3118*t3129*7.2E1)*(1.0/2.0)-gamma_aa[index]*t3115*1.0/pow(t3125,5.0/ \
                   2.0)*t3118*t3119*(t3139*t3139)*(3.0/4.0));
            } else if (rho_a[index] > cutoff_) {
                double t3478 = d2*d2;
                double t3479 = gamma_aa[index]+t3478;
                double t3480 = 1.0/pow(rho_a[index],8.0/3.0);
                double t3485 = gamma_aa[index]*t3480;
                double t3481 = log(t3485+sqrt(t3485*t3485+1.0));
                double t3482 = 1.0/t3479;
                double t3487 = d1*gamma_aa[index]*t3482;
                double t3483 = d0+t3487;
                double t3484 = 1.0/c;
                double t3486 = t3481*t3481;
                double t3488 = t3483*t3483;
                double t3489 = gamma_aa[index]*t3480*t3486*t3488*9.0;
                double t3490 = t3489+1.0;
                double t3491 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t3492 = d1*t3482;
                double t3493 = 1.0/(t3479*t3479);
                double t3502 = d1*gamma_aa[index]*t3493;
                double t3494 = t3492-t3502;
                double t3495 = 1.0/sqrt(t3490);
                double t3496 = t3480*t3486*t3488*9.0;
                double t3497 = gamma_aa[index]*gamma_aa[index];
                double t3498 = t3491*t3497;
                double t3499 = t3498+1.0;
                double t3500 = 1.0/sqrt(t3499);
                double t3501 = gamma_aa[index]*t3481*t3491*t3488*t3500*1.8E1;
                double t3503 = gamma_aa[index]*t3480*t3483*t3494*t3486*1.8E1;
                double t3504 = t3496+t3501+t3503;
                double t3505 = 1.0/pow(t3490,3.0/2.0);
                double t3506 = d1*t3493*2.0;
                double t3507 = 1.0/(t3479*t3479*t3479);
                double t3508 = t3506-d1*gamma_aa[index]*t3507*2.0;
                v_gamma_aa_gamma_aa_[index] = c*pow(rho_a[index],4.0/3.0)*(t3480*t3484*t3494*t3495*-2.0+gamma_aa[index]* \
                   t3480*t3484*t3495*t3508+t3480*t3483*t3484*t3504*t3505+gamma_aa[index]*t3480*t3484*t3494*t3504*t3505+ \
                   gamma_aa[index]*t3480*t3483*t3484*t3505*(t3480*t3483*t3494*t3486*3.6E1+t3481*t3491*t3488*t3500*3.6E1+ \
                   gamma_aa[index]*t3480*(t3494*t3494)*t3486*1.8E1+(gamma_aa[index]*1.0/(rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index])*t3488*1.8E1)/t3499-1.0/pow(rho_a[index],3.2E1/ \
                   3.0)*t3481*t3488*t3497*1.0/pow(t3499,3.0/2.0)*1.8E1-gamma_aa[index]*t3480*t3483*t3486*t3508*1.8E1+ \
                   gamma_aa[index]*t3481*t3491*t3483*t3494*t3500*7.2E1)*(1.0/2.0)-gamma_aa[index]*t3480*1.0/pow(t3490,5.0/ \
                   2.0)*t3483*t3484*(t3504*t3504)*(3.0/4.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            }

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            }

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            }

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            }

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            }

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t3149 = d2*d2;
                double t3150 = gamma_bb[index]+t3149;
                double t3151 = 1.0/pow(rho_b[index],8.0/3.0);
                double t3156 = gamma_bb[index]*t3151;
                double t3152 = log(t3156+sqrt(t3156*t3156+1.0));
                double t3153 = 1.0/t3150;
                double t3158 = d1*gamma_bb[index]*t3153;
                double t3154 = d0+t3158;
                double t3155 = 1.0/c;
                double t3157 = t3152*t3152;
                double t3159 = t3154*t3154;
                double t3160 = gamma_bb[index]*t3151*t3157*t3159*9.0;
                double t3161 = t3160+1.0;
                double t3162 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t3163 = d1*t3153;
                double t3164 = 1.0/(t3150*t3150);
                double t3173 = d1*gamma_bb[index]*t3164;
                double t3165 = t3163-t3173;
                double t3166 = 1.0/sqrt(t3161);
                double t3167 = t3151*t3157*t3159*9.0;
                double t3168 = gamma_bb[index]*gamma_bb[index];
                double t3169 = t3162*t3168;
                double t3170 = t3169+1.0;
                double t3171 = 1.0/sqrt(t3170);
                double t3172 = gamma_bb[index]*t3152*t3162*t3171*t3159*1.8E1;
                double t3174 = gamma_bb[index]*t3151*t3154*t3165*t3157*1.8E1;
                double t3175 = t3172+t3174+t3167;
                double t3176 = 1.0/pow(t3161,3.0/2.0);
                double t3177 = d1*t3164*2.0;
                double t3178 = 1.0/(t3150*t3150*t3150);
                double t3179 = t3177-d1*gamma_bb[index]*t3178*2.0;
                v_gamma_bb_gamma_bb_[index] = c*pow(rho_b[index],4.0/3.0)*(t3151*t3155*t3165*t3166*-2.0+gamma_bb[index]* \
                   t3151*t3155*t3166*t3179+t3151*t3154*t3155*t3175*t3176+gamma_bb[index]*t3151*t3155*t3165*t3175*t3176+ \
                   gamma_bb[index]*t3151*t3154*t3155*t3176*(t3152*t3162*t3171*t3159*3.6E1+t3151*t3154*t3165*t3157*3.6E1+ \
                   gamma_bb[index]*t3151*(t3165*t3165)*t3157*1.8E1+(gamma_bb[index]*1.0/(rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t3159*1.8E1)/t3170-1.0/pow(rho_b[index],3.2E1/ \
                   3.0)*t3152*1.0/pow(t3170,3.0/2.0)*t3159*t3168*1.8E1-gamma_bb[index]*t3151*t3154*t3157*t3179*1.8E1+ \
                   gamma_bb[index]*t3152*t3162*t3171*t3154*t3165*7.2E1)*(1.0/2.0)-gamma_bb[index]*t3151*1.0/pow(t3161,5.0/ \
                   2.0)*t3154*t3155*(t3175*t3175)*(3.0/4.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t3316 = d2*d2;
                double t3317 = gamma_bb[index]+t3316;
                double t3318 = 1.0/pow(rho_b[index],8.0/3.0);
                double t3323 = gamma_bb[index]*t3318;
                double t3319 = log(t3323+sqrt(t3323*t3323+1.0));
                double t3320 = 1.0/t3317;
                double t3325 = d1*gamma_bb[index]*t3320;
                double t3321 = d0+t3325;
                double t3322 = 1.0/c;
                double t3324 = t3319*t3319;
                double t3326 = t3321*t3321;
                double t3327 = gamma_bb[index]*t3324*t3326*t3318*9.0;
                double t3328 = t3327+1.0;
                double t3329 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t3330 = d1*t3320;
                double t3331 = 1.0/(t3317*t3317);
                double t3340 = d1*gamma_bb[index]*t3331;
                double t3332 = t3330-t3340;
                double t3333 = 1.0/sqrt(t3328);
                double t3334 = t3324*t3326*t3318*9.0;
                double t3335 = gamma_bb[index]*gamma_bb[index];
                double t3336 = t3335*t3329;
                double t3337 = t3336+1.0;
                double t3338 = 1.0/sqrt(t3337);
                double t3339 = gamma_bb[index]*t3326*t3319*t3329*t3338*1.8E1;
                double t3341 = gamma_bb[index]*t3321*t3332*t3324*t3318*1.8E1;
                double t3342 = t3341+t3334+t3339;
                double t3343 = 1.0/pow(t3328,3.0/2.0);
                double t3344 = d1*t3331*2.0;
                double t3345 = 1.0/(t3317*t3317*t3317);
                double t3346 = t3344-d1*gamma_bb[index]*t3345*2.0;
                v_gamma_bb_gamma_bb_[index] = c*pow(rho_b[index],4.0/3.0)*(t3322*t3332*t3333*t3318*-2.0+gamma_bb[index]* \
                   t3322*t3333*t3318*t3346+t3321*t3322*t3342*t3343*t3318+gamma_bb[index]*t3322*t3332*t3342*t3343*t3318+ \
                   gamma_bb[index]*t3321*t3322*t3343*t3318*(t3321*t3332*t3324*t3318*3.6E1+t3326*t3319*t3329*t3338*3.6E1+ \
                   gamma_bb[index]*(t3332*t3332)*t3324*t3318*1.8E1+(gamma_bb[index]*1.0/(rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index])*t3326*1.8E1)/t3337-1.0/pow(rho_b[index],3.2E1/ \
                   3.0)*t3326*t3335*t3319*1.0/pow(t3337,3.0/2.0)*1.8E1-gamma_bb[index]*t3321*t3324*t3318*t3346*1.8E1+ \
                   gamma_bb[index]*t3321*t3332*t3319*t3329*t3338*7.2E1)*(1.0/2.0)-gamma_bb[index]*t3321*t3322*(t3342* \
                   t3342)*t3318*1.0/pow(t3328,5.0/2.0)*(3.0/4.0));
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            }

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            }

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            }

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            }

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            }

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            }

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            }

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            }

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                }

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                }

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                }

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                }

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                }

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                }

            }
        }
    }
}

}}

