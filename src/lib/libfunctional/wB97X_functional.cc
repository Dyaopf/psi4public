/**********************************************************
* wB97X_functional.cc: definitions for wB97X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wB97X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wB97X_Functional::wB97X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wB97X";
    description_ = "wB97X Hybrid Range-Corrected Power Series GGA";
    citation_ = "J. Chai and M. Head-Gordon, J. Chem. Phys., 128, pp. 084106, 2008";

    double omega = 2.9999999999999999E-01;
    params_.push_back(make_pair("omega",omega));
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 2.3703099999999999E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.1399500000000000E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 6.5840500000000004E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = -3.7813200000000000E+00;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -4.3387900000000004E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = 1.8230799999999999E+01;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -3.1742999999999999E+01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 1.7290099999999999E+01;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 8.4229399999999999E-01;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = 7.2647899999999999E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 1.0476000000000001E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = -5.7063499999999996E+00;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = 1.3279400000000001E+01;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wB97X_Functional::~wB97X_Functional()
{
}
void wB97X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t148909 = 1.0/pow(rho_a[index],1.0/3.0);
            double t148910 = c*t148909;
            double t148911 = sqrt(t148910);
            double t148912 = pow(t148910,3.0/2.0);
            double t148913 = c*c;
            double t148914 = 1.0/pow(rho_a[index],2.0/3.0);
            double t148915 = 1.0/c0p;
            double t148916 = b1p*t148911;
            double t148917 = b3p*t148912;
            double t148918 = b4p*t148913*t148914;
            double t148919 = b2p*c*t148909;
            double t148920 = t148916+t148917+t148918+t148919;
            double t148921 = 1.0/t148920;
            double t148922 = t148921*t148915*(1.0/2.0);
            double t148923 = t148922+1.0;
            double t148924 = log(t148923);
            double t148925 = a1p*c*t148909;
            double t148926 = t148925+1.0;
            double t148927 = rho_a[index]*2.0;
            double t148928 = 1.0/pow(t148927,1.0/3.0);
            double t148929 = c*t148928;
            double t148930 = gamma_aa[index]*gamma_aa[index];
            double t148931 = gcab*gcab;
            double t148932 = t148930*t148930;
            double t148933 = t148931*t148931;
            double t148934 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t148935 = 1.0/pow(rho_a[index],8.0/3.0);
            double t148936 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t148937 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t148938 = pow(2.0,1.0/3.0);
            double t148939 = t148938*2.0;
            double t148940 = t148939-2.0;
            double t148941 = two_13*2.0;
            double t148942 = t148941-2.0;
            double t148943 = 1.0/t148942;
            double t148944 = 1.0/c0f;
            double t148945 = b1f*t148911;
            double t148946 = b3f*t148912;
            double t148947 = b4f*t148913*t148914;
            double t148948 = b2f*c*t148909;
            double t148949 = t148945+t148946+t148947+t148948;
            double t148950 = 1.0/t148949;
            double t148951 = t148950*t148944*(1.0/2.0);
            double t148952 = t148951+1.0;
            double t148953 = log(t148952);
            double t148954 = a1f*c*t148909;
            double t148955 = t148954+1.0;
            double t148956 = c0f*t148953*t148955*2.0;
            double t148957 = c0p*t148924*t148926*2.0;
            double t148958 = gcaa*gcaa;
            double t148959 = t148958*t148958;
            double t148960 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t148961 = 1.0/pow(t148960,1.0/3.0);
            double t148962 = 1.0/(omega*omega);
            double t148963 = pow(t148960,2.0/3.0);
            double t148964 = exp(-t148962*t148963);
            double t148965 = gx*gx;
            double t148966 = t148965*t148965;
            functional_[index] = (rho_a[index]*(t148957+t148940*t148943*(t148956-c0p*t148924*t148926*2.0))*2.0- \
               c0p*rho_a[index]*log((t148915*(1.0/2.0))/(b1p*sqrt(t148929)+b3p*pow(t148929,3.0/2.0)+b4p*t148913*1.0/ \
               pow(t148927,2.0/3.0)+b2p*c*t148928)+1.0)*(a1p*c*t148928+1.0)*4.0)*(ccab0+(ccab2*t148930*t148931*t148937) \
               /(gamma_aa[index]*gcab*t148935*2.0+t148930*t148931*t148937+1.0)+(ccab1*gamma_aa[index]*gcab*t148935) \
               /(gamma_aa[index]*gcab*t148935+1.0)+(ccab4*t148932*t148933*t148934)/(gamma_aa[index]*gcab*t148935* \
               4.0+t148930*t148931*t148937*6.0+t148932*t148933*t148934+gamma_aa[index]*gcab*t148930*t148931*t148936* \
               4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t148930*t148931*t148936)/(gamma_aa[index]*gcab*t148935*3.0+t148930* \
               t148931*t148937*3.0+gamma_aa[index]*gcab*t148930*t148931*t148936+1.0))-rho_a[index]*(t148957+t148940* \
               t148943*(t148956-t148957))*(ccaa0+(ccaa2*t148930*t148937*t148958)/(gamma_aa[index]*gcaa*t148935*2.0+ \
               t148930*t148937*t148958+1.0)+(ccaa1*gamma_aa[index]*gcaa*t148935)/(gamma_aa[index]*gcaa*t148935+1.0) \
               +(ccaa4*t148932*t148934*t148959)/(gamma_aa[index]*gcaa*t148935*4.0+t148930*t148937*t148958*6.0+t148932* \
               t148934*t148959+gamma_aa[index]*gcaa*t148930*t148936*t148958*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t148930*t148936*t148958)/(gamma_aa[index]*gcaa*t148935*3.0+t148930*t148937*t148958*3.0+gamma_aa[index]* \
               gcaa*t148930*t148936*t148958+1.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(omega*t148961*(erf(pow(t148960,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t148961*(-t148964+(omega*omega)*1.0/ \
               pow(t148960,2.0/3.0)*(t148964-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t148930*t148937*t148965) \
               /(gamma_aa[index]*gx*t148935*2.0+t148930*t148937*t148965+1.0)+(cx1*gamma_aa[index]*gx*t148935)/(gamma_aa[index]* \
               gx*t148935+1.0)+(cx4*t148932*t148934*t148966)/(gamma_aa[index]*gx*t148935*4.0+t148930*t148937*t148965* \
               6.0+t148932*t148934*t148966+gamma_aa[index]*gx*t148930*t148936*t148965*4.0+1.0)+(cx3*gamma_aa[index]* \
               gx*t148930*t148936*t148965)/(gamma_aa[index]*gx*t148935*3.0+t148930*t148937*t148965*3.0+gamma_aa[index]* \
               gx*t148930*t148936*t148965+1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t148968 = gamma_aa[index]*gamma_aa[index];
            double t148969 = gcab*gcab;
            double t148970 = t148968*t148968;
            double t148971 = t148969*t148969;
            double t148972 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t148973 = 1.0/pow(rho_a[index],8.0/3.0);
            double t148974 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t148975 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t148976 = rho_a[index]*2.0;
            double t148977 = 1.0/pow(t148976,1.0/3.0);
            double t148978 = c*t148977;
            double t148979 = sqrt(t148978);
            double t148980 = b1p*t148979;
            double t148981 = pow(t148978,3.0/2.0);
            double t148982 = b3p*t148981;
            double t148983 = b2p*c*t148977;
            double t148984 = c*c;
            double t148985 = 1.0/pow(t148976,2.0/3.0);
            double t148986 = b4p*t148984*t148985;
            double t148987 = t148980+t148982+t148983+t148986;
            double t148988 = 1.0/pow(t148976,4.0/3.0);
            double t148989 = 1.0/c0p;
            double t148990 = 1.0/t148987;
            double t148991 = t148990*t148989*(1.0/2.0);
            double t148992 = t148991+1.0;
            double t148993 = 1.0/pow(rho_a[index],1.0/3.0);
            double t148994 = c*t148993;
            double t148995 = sqrt(t148994);
            double t148996 = b1f*t148995;
            double t148997 = pow(t148994,3.0/2.0);
            double t148998 = b3f*t148997;
            double t148999 = 1.0/pow(rho_a[index],2.0/3.0);
            double t149000 = b4f*t148984*t148999;
            double t149001 = b2f*c*t148993;
            double t149002 = t149000+t149001+t148996+t148998;
            double t149003 = 1.0/pow(rho_a[index],4.0/3.0);
            double t149004 = b1p*t148995;
            double t149005 = b3p*t148997;
            double t149006 = b4p*t148984*t148999;
            double t149007 = b2p*c*t148993;
            double t149008 = t149004+t149005+t149006+t149007;
            double t149009 = 1.0/pow(rho_a[index],5.0/3.0);
            double t149010 = 1.0/sqrt(t148994);
            double t149011 = 1.0/c0f;
            double t149012 = 1.0/t149002;
            double t149013 = t149011*t149012*(1.0/2.0);
            double t149014 = t149013+1.0;
            double t149015 = 1.0/t149008;
            double t149016 = t149015*t148989*(1.0/2.0);
            double t149017 = t149016+1.0;
            double t149018 = a1p*c*t148993;
            double t149019 = t149018+1.0;
            double t149020 = 1.0/t149017;
            double t149021 = 1.0/(t149008*t149008);
            double t149022 = b4p*t149009*t148984*(2.0/3.0);
            double t149023 = b2p*c*t149003*(1.0/3.0);
            double t149024 = b1p*c*t149010*t149003*(1.0/6.0);
            double t149025 = b3p*c*t149003*t148995*(1.0/2.0);
            double t149026 = t149022+t149023+t149024+t149025;
            double t149027 = t149020*t149021*t149026*t149019;
            double t149028 = log(t149017);
            double t149029 = log(t148992);
            double t149030 = a1p*c*t148977;
            double t149031 = t149030+1.0;
            double t149032 = pow(2.0,1.0/3.0);
            double t149033 = t149032*2.0;
            double t149034 = t149033-2.0;
            double t149035 = two_13*2.0;
            double t149036 = t149035-2.0;
            double t149037 = 1.0/t149036;
            double t149038 = log(t149014);
            double t149039 = a1f*c*t148993;
            double t149040 = t149039+1.0;
            double t149041 = c0f*t149040*t149038*2.0;
            double t149043 = c0p*t149019*t149028*2.0;
            double t149042 = t149041-t149043;
            double t149044 = gcaa*gcaa;
            double t149045 = t149044*t149044;
            double t149046 = t149042*t149034*t149037;
            double t149047 = t149043+t149046;
            double t149048 = gamma_aa[index]*gcab*t148973*4.0;
            double t149049 = gamma_aa[index]*gcab*t148974*t148968*t148969*4.0;
            double t149050 = t148975*t148968*t148969*6.0;
            double t149051 = t148970*t148971*t148972;
            double t149052 = t149050+t149051+t149048+t149049+1.0;
            double t149053 = 1.0/t149052;
            double t149054 = gamma_aa[index]*gcab*t148973;
            double t149055 = t149054+1.0;
            double t149056 = 1.0/t149055;
            double t149057 = gamma_aa[index]*gcab*t148973*3.0;
            double t149058 = gamma_aa[index]*gcab*t148974*t148968*t148969;
            double t149059 = t148975*t148968*t148969*3.0;
            double t149060 = t149057+t149058+t149059+1.0;
            double t149061 = 1.0/t149060;
            double t149062 = gamma_aa[index]*gcab*t148973*2.0;
            double t149063 = t148975*t148968*t148969;
            double t149064 = t149062+t149063+1.0;
            double t149065 = 1.0/t149064;
            double t149066 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t149067 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t149068 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t149069 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t149070 = gamma_aa[index]*gcaa*t148973*4.0;
            double t149071 = gamma_aa[index]*gcaa*t149044*t148974*t148968*4.0;
            double t149072 = t149044*t148975*t148968*6.0;
            double t149073 = t149045*t148970*t148972;
            double t149074 = t149070+t149071+t149072+t149073+1.0;
            double t149075 = 1.0/t149074;
            double t149076 = gamma_aa[index]*gcaa*t148973;
            double t149077 = t149076+1.0;
            double t149078 = 1.0/t149077;
            double t149079 = gamma_aa[index]*gcaa*t148973*3.0;
            double t149080 = gamma_aa[index]*gcaa*t149044*t148974*t148968;
            double t149081 = t149044*t148975*t148968*3.0;
            double t149082 = t149080+t149081+t149079+1.0;
            double t149083 = 1.0/t149082;
            double t149084 = gamma_aa[index]*gcaa*t148973*2.0;
            double t149085 = t149044*t148975*t148968;
            double t149086 = t149084+t149085+1.0;
            double t149087 = 1.0/t149086;
            double t149088 = 1.0/t149014;
            double t149089 = 1.0/(t149002*t149002);
            double t149090 = b4f*t149009*t148984*(2.0/3.0);
            double t149091 = b2f*c*t149003*(1.0/3.0);
            double t149092 = b1f*c*t149010*t149003*(1.0/6.0);
            double t149093 = b3f*c*t149003*t148995*(1.0/2.0);
            double t149094 = t149090+t149091+t149092+t149093;
            double t149095 = a1f*c*c0f*t149003*t149038*(2.0/3.0);
            double t149096 = a1p*c*c0p*t149003*t149028*(2.0/3.0);
            double t149097 = ccaa4*t149045*t149075*t148970*t148972;
            double t149098 = ccaa1*gamma_aa[index]*gcaa*t149078*t148973;
            double t149099 = ccaa3*gamma_aa[index]*gcaa*t149044*t149083*t148974*t148968;
            double t149100 = ccaa2*t149044*t149087*t148975*t148968;
            double t149101 = ccaa0+t149100+t149097+t149098+t149099;
            double t149102 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t149103 = 1.0/(omega*omega);
            double t149104 = pow(t149102,2.0/3.0);
            double t149107 = t149103*t149104;
            double t149105 = exp(-t149107);
            double t149106 = 1.0/pow(t149102,1.0/3.0);
            double t149108 = omega*omega;
            double t149109 = t149105-1.0;
            double t149110 = 1.0/pow(t149102,2.0/3.0);
            double t149111 = 1.0/pow(t149102,4.0/3.0);
            double t149112 = 1.0/omega;
            double t149113 = t149110*t149108*t149109*(1.0/2.0);
            double t149114 = t149113-t149105+3.0/2.0;
            double t149115 = gx*gx;
            double t149116 = t149115*t149115;
            double t149117 = pow(rho_a[index],4.0/3.0);
            double t149118 = pow(t149102,1.0/3.0);
            double t149119 = t149112*t149118;
            double t149120 = erf(t149119);
            double t149121 = t149120*(3.991211251234741E15/2.251799813685248E15);
            double t149141 = omega*t149114*t149106;
            double t149122 = t149121-t149141;
            double t149123 = gamma_aa[index]*gx*t148973*4.0;
            double t149124 = gamma_aa[index]*gx*t149115*t148974*t148968*4.0;
            double t149125 = t149115*t148975*t148968*6.0;
            double t149126 = t149116*t148970*t148972;
            double t149127 = t149123+t149124+t149125+t149126+1.0;
            double t149128 = 1.0/t149127;
            double t149129 = gamma_aa[index]*gx*t148973;
            double t149130 = t149129+1.0;
            double t149131 = 1.0/t149130;
            double t149132 = gamma_aa[index]*gx*t148973*3.0;
            double t149133 = gamma_aa[index]*gx*t149115*t148974*t148968;
            double t149134 = t149115*t148975*t148968*3.0;
            double t149135 = t149132+t149133+t149134+1.0;
            double t149136 = 1.0/t149135;
            double t149137 = gamma_aa[index]*gx*t148973*2.0;
            double t149138 = t149115*t148975*t148968;
            double t149139 = t149137+t149138+1.0;
            double t149140 = 1.0/t149139;
            double t149142 = omega*t149122*t149106*(4.0/3.0);
            double t149143 = t149142-1.0;
            double t149144 = cx4*t149116*t149128*t148970*t148972;
            double t149145 = cx1*gamma_aa[index]*gx*t149131*t148973;
            double t149146 = cx3*gamma_aa[index]*gx*t149115*t149136*t148974*t148968;
            double t149147 = cx2*t149140*t149115*t148975*t148968;
            double t149148 = cx0+t149144+t149145+t149146+t149147;
            v_rho_a_[index] = -(rho_a[index]*t149047*2.0-c0p*rho_a[index]*t149031*t149029*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t149056*t149067*(4.0/3.0)+ccab4*t149053*t148970*t149069*t148971*(1.6E1/3.0)+ccab2*t149065*t149066* \
               t148968*t148969*(8.0/3.0)-ccab1*1.0/(t149055*t149055)*t149066*t148968*t148969*(4.0/3.0)-ccab2*1.0/ \
               (t149064*t149064)*t148975*t148968*t148969*(gamma_aa[index]*gcab*t149067*(8.0/3.0)+t149066*t148968* \
               t148969*(8.0/3.0))-ccab4*1.0/(t149052*t149052)*t148970*t148971*t148972*(gamma_aa[index]*gcab*t149067* \
               (1.6E1/3.0)+t148970*t149069*t148971*(1.6E1/3.0)+t149066*t148968*t148969*1.6E1+gamma_aa[index]*gcab* \
               t149068*t148968*t148969*1.6E1)+ccab3*gamma_aa[index]*gcab*t149061*t149068*t148968*t148969*4.0-ccab3* \
               gamma_aa[index]*gcab*1.0/(t149060*t149060)*t148974*t148968*t148969*(gamma_aa[index]*gcab*t149067*4.0+ \
               t149066*t148968*t148969*8.0+gamma_aa[index]*gcab*t149068*t148968*t148969*4.0))-t149101*t149047-(rho_a[index]* \
               ((t149031*1.0/(t148987*t148987)*(b4p*t148984*1.0/pow(t148976,5.0/3.0)*(2.0/3.0)+b2p*c*t148988*(1.0/ \
               3.0)+b3p*c*t148979*t148988*(1.0/2.0)+b1p*c*1.0/sqrt(t148978)*t148988*(1.0/6.0)))/t148992-a1p*c*c0p* \
               t149029*t148988*(2.0/3.0))*2.0+rho_a[index]*(-t149027+t149096+t149034*t149037*(t149027+t149095-t149040* \
               t149094*t149088*t149089-a1p*c*c0p*t149003*t149028*(2.0/3.0)))+c0p*t149031*t149029*2.0-c0p*t149019* \
               t149028*2.0-t149042*t149034*t149037)*(ccab0+ccab1*gamma_aa[index]*gcab*t149056*t148973+ccab4*t149053* \
               t148970*t148971*t148972+ccab2*t149065*t148975*t148968*t148969+ccab3*gamma_aa[index]*gcab*t149061*t148974* \
               t148968*t148969)+rho_a[index]*t149047*(ccaa1*gamma_aa[index]*gcaa*t149067*t149078*(8.0/3.0)+ccaa4* \
               t149045*t149075*t148970*t149069*(3.2E1/3.0)+ccaa2*t149044*t149066*t149087*t148968*(1.6E1/3.0)-ccaa1* \
               t149044*t149066*1.0/(t149077*t149077)*t148968*(8.0/3.0)-ccaa2*t149044*1.0/(t149086*t149086)*t148975* \
               t148968*(gamma_aa[index]*gcaa*t149067*(1.6E1/3.0)+t149044*t149066*t148968*(1.6E1/3.0))-ccaa4*t149045* \
               1.0/(t149074*t149074)*t148970*t148972*(gamma_aa[index]*gcaa*t149067*(3.2E1/3.0)+t149045*t148970*t149069* \
               (3.2E1/3.0)+t149044*t149066*t148968*3.2E1+gamma_aa[index]*gcaa*t149044*t149068*t148968*3.2E1)+ccaa3* \
               gamma_aa[index]*gcaa*t149044*t149083*t149068*t148968*8.0-ccaa3*gamma_aa[index]*gcaa*t149044*1.0/(t149082* \
               t149082)*t148974*t148968*(gamma_aa[index]*gcaa*t149067*8.0+t149044*t149066*t148968*1.6E1+gamma_aa[index]* \
               gcaa*t149044*t149068*t148968*8.0))+rho_a[index]*t149101*(-t149027+t149096+t149034*t149037*(t149027+ \
               t149095-t149096-t149040*t149094*t149088*t149089))-c0*t149117*t149148*(omega*t149106*(omega*t149111* \
               t149114*(2.778046668940015E15/1.40737488355328E14)+omega*t149106*((t149105*(1.0/3.0))/rho_a[index]+ \
               1.0/pow(t149102,5.0/3.0)*t149108*t149109*(2.778046668940015E15/1.40737488355328E14)-t149103*t149105* \
               t149106*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t149110*t149112*t149105* \
               (1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t149111*t149122*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_a[index],1.0/3.0)*t149143*t149148*(4.0/3.0)+c0*t149143*t149117*(cx1* \
               gamma_aa[index]*gx*t149131*t149067*(8.0/3.0)+cx2*t149140*t149115*t149066*t148968*(1.6E1/3.0)+cx4*t149116* \
               t149128*t148970*t149069*(3.2E1/3.0)-cx1*1.0/(t149130*t149130)*t149115*t149066*t148968*(8.0/3.0)-cx2* \
               t149115*1.0/(t149139*t149139)*t148975*t148968*(gamma_aa[index]*gx*t149067*(1.6E1/3.0)+t149115*t149066* \
               t148968*(1.6E1/3.0))-cx4*t149116*1.0/(t149127*t149127)*t148970*t148972*(gamma_aa[index]*gx*t149067* \
               (3.2E1/3.0)+t149116*t148970*t149069*(3.2E1/3.0)+t149115*t149066*t148968*3.2E1+gamma_aa[index]*gx*t149115* \
               t149068*t148968*3.2E1)+cx3*gamma_aa[index]*gx*t149115*t149136*t149068*t148968*8.0-cx3*gamma_aa[index]* \
               gx*t149115*1.0/(t149135*t149135)*t148974*t148968*(gamma_aa[index]*gx*t149067*8.0+t149115*t149066*t148968* \
               1.6E1+gamma_aa[index]*gx*t149115*t149068*t148968*8.0));
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t149150 = 1.0/pow(rho_a[index],1.0/3.0);
                double t149151 = c*t149150;
                double t149152 = sqrt(t149151);
                double t149153 = pow(t149151,3.0/2.0);
                double t149154 = c*c;
                double t149155 = 1.0/pow(rho_a[index],2.0/3.0);
                double t149156 = 1.0/c0p;
                double t149157 = b1p*t149152;
                double t149158 = b3p*t149153;
                double t149159 = b4p*t149154*t149155;
                double t149160 = b2p*c*t149150;
                double t149161 = t149160+t149157+t149158+t149159;
                double t149162 = 1.0/t149161;
                double t149163 = t149162*t149156*(1.0/2.0);
                double t149164 = t149163+1.0;
                double t149165 = log(t149164);
                double t149166 = a1p*c*t149150;
                double t149167 = t149166+1.0;
                double t149168 = rho_a[index]*2.0;
                double t149169 = 1.0/pow(t149168,1.0/3.0);
                double t149170 = c*t149169;
                double t149171 = 1.0/pow(rho_a[index],8.0/3.0);
                double t149172 = gamma_aa[index]*gamma_aa[index];
                double t149173 = gcab*gcab;
                double t149174 = t149173*t149173;
                double t149175 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t149176 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t149177 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t149178 = gamma_aa[index]*gcab*t149171;
                double t149179 = t149178+1.0;
                double t149180 = gamma_aa[index]*gcab*t149171*3.0;
                double t149181 = gamma_aa[index]*gcab*t149172*t149173*t149177;
                double t149182 = t149172*t149173*t149176*3.0;
                double t149183 = t149180+t149181+t149182+1.0;
                double t149184 = t149172*t149172;
                double t149185 = gamma_aa[index]*gcab*t149171*4.0;
                double t149186 = gamma_aa[index]*gcab*t149172*t149173*t149177*4.0;
                double t149187 = t149172*t149173*t149176*6.0;
                double t149188 = t149174*t149175*t149184;
                double t149189 = t149185+t149186+t149187+t149188+1.0;
                double t149190 = gamma_aa[index]*gcab*t149171*2.0;
                double t149191 = t149172*t149173*t149176;
                double t149192 = t149190+t149191+1.0;
                double t149193 = pow(2.0,1.0/3.0);
                double t149194 = t149193*2.0;
                double t149195 = t149194-2.0;
                double t149196 = two_13*2.0;
                double t149197 = t149196-2.0;
                double t149198 = 1.0/t149197;
                double t149199 = 1.0/c0f;
                double t149200 = b1f*t149152;
                double t149201 = b3f*t149153;
                double t149202 = b4f*t149154*t149155;
                double t149203 = b2f*c*t149150;
                double t149204 = t149200+t149201+t149202+t149203;
                double t149205 = 1.0/t149204;
                double t149206 = t149205*t149199*(1.0/2.0);
                double t149207 = t149206+1.0;
                double t149208 = log(t149207);
                double t149209 = a1f*c*t149150;
                double t149210 = t149209+1.0;
                double t149211 = c0f*t149210*t149208*2.0;
                double t149212 = c0p*t149165*t149167*2.0;
                double t149213 = gcaa*gcaa;
                double t149214 = t149213*t149213;
                double t149215 = gamma_aa[index]*gcaa*t149171;
                double t149216 = t149215+1.0;
                double t149217 = gamma_aa[index]*gcaa*t149171*3.0;
                double t149218 = gamma_aa[index]*gcaa*t149213*t149172*t149177;
                double t149219 = t149213*t149172*t149176*3.0;
                double t149220 = t149217+t149218+t149219+1.0;
                double t149221 = gamma_aa[index]*gcaa*t149171*4.0;
                double t149222 = gamma_aa[index]*gcaa*t149213*t149172*t149177*4.0;
                double t149223 = t149213*t149172*t149176*6.0;
                double t149224 = t149214*t149175*t149184;
                double t149225 = t149221+t149222+t149223+t149224+1.0;
                double t149226 = gamma_aa[index]*gcaa*t149171*2.0;
                double t149227 = t149213*t149172*t149176;
                double t149228 = t149226+t149227+1.0;
                double t149229 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t149230 = 1.0/pow(t149229,1.0/3.0);
                double t149231 = 1.0/(omega*omega);
                double t149232 = pow(t149229,2.0/3.0);
                double t149233 = exp(-t149231*t149232);
                double t149234 = gx*gx;
                double t149235 = t149234*t149234;
                double t149236 = gamma_aa[index]*gx*t149171;
                double t149237 = t149236+1.0;
                double t149238 = gamma_aa[index]*gx*t149171*3.0;
                double t149239 = gamma_aa[index]*gx*t149234*t149172*t149177;
                double t149240 = t149234*t149172*t149176*3.0;
                double t149241 = t149240+t149238+t149239+1.0;
                double t149242 = gamma_aa[index]*gx*t149171*4.0;
                double t149243 = gamma_aa[index]*gx*t149234*t149172*t149177*4.0;
                double t149244 = t149234*t149172*t149176*6.0;
                double t149245 = t149235*t149175*t149184;
                double t149246 = t149242+t149243+t149244+t149245+1.0;
                double t149247 = gamma_aa[index]*gx*t149171*2.0;
                double t149248 = t149234*t149172*t149176;
                double t149249 = t149247+t149248+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t149212+t149195*t149198*(t149211-c0p*t149165*t149167*2.0))*2.0- \
                   c0p*rho_a[index]*log((t149156*(1.0/2.0))/(b1p*sqrt(t149170)+b3p*pow(t149170,3.0/2.0)+b4p*t149154*1.0/ \
                   pow(t149168,2.0/3.0)+b2p*c*t149169)+1.0)*(a1p*c*t149169+1.0)*4.0)*((ccab1*gcab*t149171*(1.0/2.0))/ \
                   t149179+(ccab2*gamma_aa[index]*t149173*t149176)/t149192-ccab1*gamma_aa[index]*t149173*t149176*1.0/ \
                   (t149179*t149179)*(1.0/2.0)-ccab2*t149172*t149173*1.0/(t149192*t149192)*t149176*(gcab*t149171+gamma_aa[index]* \
                   t149173*t149176)+(ccab4*gamma_aa[index]*t149172*t149174*t149175*2.0)/t149189+(ccab3*gcab*t149172*t149173* \
                   t149177*(3.0/2.0))/t149183-ccab4*t149174*t149175*t149184*1.0/(t149189*t149189)*(gcab*t149171*2.0+gamma_aa[index]* \
                   t149173*t149176*6.0+gamma_aa[index]*t149172*t149174*t149175*2.0+gcab*t149172*t149173*t149177*6.0)- \
                   ccab3*gamma_aa[index]*gcab*t149172*t149173*1.0/(t149183*t149183)*t149177*(gcab*t149171*(3.0/2.0)+gamma_aa[index]* \
                   t149173*t149176*3.0+gcab*t149172*t149173*t149177*(3.0/2.0)))*2.0-rho_a[index]*(t149212+t149195*t149198* \
                   (t149211-t149212))*((ccaa1*gcaa*t149171)/t149216-ccaa1*gamma_aa[index]*t149213*1.0/(t149216*t149216) \
                   *t149176+(ccaa2*gamma_aa[index]*t149213*t149176*2.0)/t149228-ccaa2*t149213*t149172*1.0/(t149228*t149228) \
                   *t149176*(gcaa*t149171*2.0+gamma_aa[index]*t149213*t149176*2.0)+(ccaa4*gamma_aa[index]*t149214*t149172* \
                   t149175*4.0)/t149225+(ccaa3*gcaa*t149213*t149172*t149177*3.0)/t149220-ccaa4*t149214*1.0/(t149225*t149225) \
                   *t149175*t149184*(gcaa*t149171*4.0+gamma_aa[index]*t149213*t149176*1.2E1+gamma_aa[index]*t149214*t149172* \
                   t149175*4.0+gcaa*t149213*t149172*t149177*1.2E1)-ccaa3*gamma_aa[index]*gcaa*1.0/(t149220*t149220)*t149213* \
                   t149172*t149177*(gcaa*t149171*3.0+gamma_aa[index]*t149213*t149176*6.0+gcaa*t149213*t149172*t149177* \
                   3.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(omega*t149230*(erf(pow(t149229,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t149230*(-t149233+(omega*omega)*1.0/pow(t149229,2.0/3.0)*(t149233-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t149171)/t149237-cx1*gamma_aa[index]*t149234*1.0/(t149237* \
                   t149237)*t149176+(cx2*gamma_aa[index]*t149234*t149176*2.0)/t149249-cx2*t149234*t149172*t149176*1.0/ \
                   (t149249*t149249)*(gx*t149171*2.0+gamma_aa[index]*t149234*t149176*2.0)+(cx4*gamma_aa[index]*t149172* \
                   t149235*t149175*4.0)/t149246+(cx3*gx*t149234*t149172*t149177*3.0)/t149241-cx4*t149235*1.0/(t149246* \
                   t149246)*t149175*t149184*(gx*t149171*4.0+gamma_aa[index]*t149234*t149176*1.2E1+gamma_aa[index]*t149172* \
                   t149235*t149175*4.0+gx*t149234*t149172*t149177*1.2E1)-cx3*gamma_aa[index]*gx*1.0/(t149241*t149241) \
                   *t149234*t149172*t149177*(gx*t149171*3.0+gamma_aa[index]*t149234*t149176*6.0+gx*t149234*t149172*t149177* \
                   3.0))*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t149252 = rho_a[index]*2.0;
            double t149253 = 1.0/pow(t149252,1.0/3.0);
            double t149254 = c*t149253;
            double t149255 = sqrt(t149254);
            double t149256 = b1p*t149255;
            double t149257 = pow(t149254,3.0/2.0);
            double t149258 = b3p*t149257;
            double t149259 = b2p*c*t149253;
            double t149260 = c*c;
            double t149261 = 1.0/pow(t149252,2.0/3.0);
            double t149262 = b4p*t149260*t149261;
            double t149263 = t149262+t149256+t149258+t149259;
            double t149264 = 1.0/pow(t149252,8.0/3.0);
            double t149265 = 1.0/pow(t149252,7.0/3.0);
            double t149266 = 1.0/sqrt(t149254);
            double t149267 = 1.0/c0p;
            double t149268 = 1.0/t149263;
            double t149269 = t149267*t149268*(1.0/2.0);
            double t149270 = t149269+1.0;
            double t149271 = 1.0/t149270;
            double t149272 = a1p*c*t149253;
            double t149273 = t149272+1.0;
            double t149274 = 1.0/pow(t149252,4.0/3.0);
            double t149276 = b2p*c*t149274*(1.0/3.0);
            double t149277 = 1.0/pow(t149252,5.0/3.0);
            double t149278 = b4p*t149260*t149277*(2.0/3.0);
            double t149279 = b1p*c*t149274*t149266*(1.0/6.0);
            double t149280 = b3p*c*t149255*t149274*(1.0/2.0);
            double t149275 = t149280+t149276+t149278+t149279;
            double t149281 = t149275*t149275;
            double t149282 = 1.0/(t149263*t149263);
            double t149283 = log(t149270);
            double t149284 = gamma_aa[index]*gamma_aa[index];
            double t149285 = gcab*gcab;
            double t149286 = t149284*t149284;
            double t149287 = t149285*t149285;
            double t149288 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t149289 = 1.0/pow(rho_a[index],8.0/3.0);
            double t149290 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t149291 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t149292 = two_13*2.0;
            double t149293 = t149292-2.0;
            double t149294 = 1.0/t149293;
            double t149295 = 1.0/pow(rho_a[index],1.0/3.0);
            double t149296 = c*t149295;
            double t149297 = sqrt(t149296);
            double t149298 = pow(t149296,3.0/2.0);
            double t149299 = 1.0/pow(rho_a[index],2.0/3.0);
            double t149300 = b1p*t149297;
            double t149301 = b3p*t149298;
            double t149302 = b4p*t149260*t149299;
            double t149303 = b2p*c*t149295;
            double t149304 = t149300+t149301+t149302+t149303;
            double t149305 = 1.0/t149304;
            double t149306 = t149305*t149267*(1.0/2.0);
            double t149307 = t149306+1.0;
            double t149308 = log(t149307);
            double t149309 = a1p*c*t149295;
            double t149310 = t149309+1.0;
            double t149311 = gamma_aa[index]*gcab*t149289*4.0;
            double t149312 = gamma_aa[index]*gcab*t149290*t149284*t149285*4.0;
            double t149313 = t149291*t149284*t149285*6.0;
            double t149314 = t149286*t149287*t149288;
            double t149315 = t149311+t149312+t149313+t149314+1.0;
            double t149316 = 1.0/t149315;
            double t149317 = gamma_aa[index]*gcab*t149289;
            double t149318 = t149317+1.0;
            double t149319 = 1.0/t149318;
            double t149320 = gamma_aa[index]*gcab*t149289*3.0;
            double t149321 = gamma_aa[index]*gcab*t149290*t149284*t149285;
            double t149322 = t149291*t149284*t149285*3.0;
            double t149323 = t149320+t149321+t149322+1.0;
            double t149324 = 1.0/t149323;
            double t149325 = gamma_aa[index]*gcab*t149289*2.0;
            double t149326 = t149291*t149284*t149285;
            double t149327 = t149325+t149326+1.0;
            double t149328 = 1.0/t149327;
            double t149329 = 1.0/pow(rho_a[index],1.0E1);
            double t149330 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t149332 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t149333 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t149335 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t149342 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t149343 = gamma_aa[index]*gcab*t149332*(1.6E1/3.0);
            double t149344 = gamma_aa[index]*gcab*t149335*t149284*t149285*1.6E1;
            double t149345 = t149333*t149284*t149285*1.6E1;
            double t149346 = t149342*t149286*t149287*(1.6E1/3.0);
            double t149331 = t149343+t149344+t149345+t149346;
            double t149349 = gamma_aa[index]*gcab*t149332*(8.0/3.0);
            double t149350 = t149333*t149284*t149285*(8.0/3.0);
            double t149334 = t149350+t149349;
            double t149336 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t149337 = 1.0/(t149323*t149323);
            double t149338 = gamma_aa[index]*gcab*t149332*4.0;
            double t149339 = gamma_aa[index]*gcab*t149335*t149284*t149285*4.0;
            double t149340 = t149333*t149284*t149285*8.0;
            double t149341 = t149340+t149338+t149339;
            double t149347 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t149348 = 1.0/(t149315*t149315);
            double t149351 = 1.0/(t149327*t149327);
            double t149352 = pow(2.0,1.0/3.0);
            double t149353 = t149352*2.0;
            double t149354 = t149353-2.0;
            double t149355 = a1f*c*t149295;
            double t149356 = t149355+1.0;
            double t149357 = 1.0/c0f;
            double t149358 = b1f*t149297;
            double t149359 = b3f*t149298;
            double t149360 = b4f*t149260*t149299;
            double t149361 = b2f*c*t149295;
            double t149362 = t149360+t149361+t149358+t149359;
            double t149363 = 1.0/t149362;
            double t149364 = t149363*t149357*(1.0/2.0);
            double t149365 = t149364+1.0;
            double t149366 = 1.0/pow(rho_a[index],4.0/3.0);
            double t149367 = 1.0/pow(rho_a[index],5.0/3.0);
            double t149368 = 1.0/sqrt(t149296);
            double t149369 = log(t149365);
            double t149370 = 1.0/t149307;
            double t149371 = 1.0/(t149304*t149304);
            double t149372 = b4p*t149260*t149367*(2.0/3.0);
            double t149373 = b2p*c*t149366*(1.0/3.0);
            double t149374 = b1p*c*t149366*t149368*(1.0/6.0);
            double t149375 = b3p*c*t149366*t149297*(1.0/2.0);
            double t149376 = t149372+t149373+t149374+t149375;
            double t149377 = t149310*t149370*t149371*t149376;
            double t149378 = gcaa*gcaa;
            double t149379 = t149378*t149378;
            double t149380 = 1.0/t149365;
            double t149381 = 1.0/(t149362*t149362);
            double t149382 = b4f*t149260*t149367*(2.0/3.0);
            double t149383 = b2f*c*t149366*(1.0/3.0);
            double t149384 = b1f*c*t149366*t149368*(1.0/6.0);
            double t149385 = b3f*c*t149366*t149297*(1.0/2.0);
            double t149386 = t149382+t149383+t149384+t149385;
            double t149387 = a1f*c*c0f*t149366*t149369*(2.0/3.0);
            double t149388 = a1p*c*c0p*t149308*t149366*(2.0/3.0);
            double t149389 = c0f*t149356*t149369*2.0;
            double t149390 = c0p*t149310*t149308*2.0;
            double t149391 = 1.0/(t149318*t149318);
            double t149392 = ccab4*t149316*t149286*t149287*t149288;
            double t149393 = ccab1*gamma_aa[index]*gcab*t149319*t149289;
            double t149394 = ccab3*gamma_aa[index]*gcab*t149324*t149290*t149284*t149285;
            double t149395 = ccab2*t149291*t149328*t149284*t149285;
            double t149396 = ccab0+t149392+t149393+t149394+t149395;
            double t149397 = b2p*c*t149265*(4.0/9.0);
            double t149398 = b4p*t149260*t149264*(1.0E1/9.0);
            double t149399 = 1.0/pow(t149254,3.0/2.0);
            double t149400 = b3p*t149260*t149264*t149266*(1.0/1.2E1);
            double t149401 = b1p*c*t149265*t149266*(2.0/9.0);
            double t149402 = b3p*c*t149255*t149265*(2.0/3.0);
            double t149403 = t149400+t149401+t149402+t149397+t149398-b1p*t149260*t149264*t149399*(1.0/3.6E1);
            double t149404 = t149403*t149271*t149273*t149282;
            double t149405 = 1.0/(t149263*t149263*t149263);
            double t149406 = 1.0/(t149270*t149270);
            double t149407 = 1.0/(t149263*t149263*t149263*t149263);
            double t149408 = t149406*t149281*t149407*t149273*t149267*(1.0/2.0);
            double t149409 = 1.0/d2fz0;
            double t149410 = 1.0/(rho_a[index]*rho_a[index]);
            double t149411 = 1.0/Aa;
            double t149412 = b1a*t149255;
            double t149413 = b3a*t149257;
            double t149414 = b2a*c*t149253;
            double t149415 = b4a*t149260*t149261;
            double t149416 = t149412+t149413+t149414+t149415;
            double t149417 = 1.0/t149416;
            double t149418 = t149411*t149417*(1.0/2.0);
            double t149419 = t149418+1.0;
            double t149420 = log(t149419);
            double t149421 = a1a*c*t149253;
            double t149422 = t149421+1.0;
            double t149423 = a1p*c*t149271*t149282*t149274*t149275*(2.0/3.0);
            double t149424 = 1.0/pow(rho_a[index],7.0/3.0);
            double t149425 = 1.0/pow(t149296,3.0/2.0);
            double t149426 = t149386*t149386;
            double t149427 = t149376*t149376;
            double t149428 = 1.0/(t149304*t149304*t149304);
            double t149429 = t149310*t149370*t149427*t149428*2.0;
            double t149430 = b4p*t149260*t149289*(1.0E1/9.0);
            double t149431 = b2p*c*t149424*(4.0/9.0);
            double t149432 = b3p*t149260*t149368*t149289*(1.0/1.2E1);
            double t149433 = b1p*c*t149424*t149368*(2.0/9.0);
            double t149434 = b3p*c*t149424*t149297*(2.0/3.0);
            double t149508 = b1p*t149260*t149425*t149289*(1.0/3.6E1);
            double t149435 = t149430+t149431+t149432+t149433+t149434-t149508;
            double t149436 = 1.0/(t149307*t149307);
            double t149437 = 1.0/(t149304*t149304*t149304*t149304);
            double t149438 = a1p*c*c0p*t149424*t149308*(8.0/9.0);
            double t149473 = t149380*t149381*t149356*t149386;
            double t149439 = -t149473+t149377+t149387-t149388;
            double t149440 = a1p*c*c0p*t149274*t149283*(4.0/3.0);
            double t149441 = t149390-t149389;
            double t149442 = t149441*t149354*t149294;
            double t149443 = gamma_aa[index]*gcaa*t149289*4.0;
            double t149444 = gamma_aa[index]*gcaa*t149290*t149284*t149378*4.0;
            double t149445 = t149291*t149284*t149378*6.0;
            double t149446 = t149286*t149288*t149379;
            double t149447 = t149443+t149444+t149445+t149446+1.0;
            double t149448 = 1.0/t149447;
            double t149449 = gamma_aa[index]*gcaa*t149289;
            double t149450 = t149449+1.0;
            double t149451 = 1.0/t149450;
            double t149452 = gamma_aa[index]*gcaa*t149289*3.0;
            double t149453 = gamma_aa[index]*gcaa*t149290*t149284*t149378;
            double t149454 = t149291*t149284*t149378*3.0;
            double t149455 = t149452+t149453+t149454+1.0;
            double t149456 = 1.0/t149455;
            double t149457 = gamma_aa[index]*gcaa*t149289*2.0;
            double t149458 = t149291*t149284*t149378;
            double t149459 = t149457+t149458+1.0;
            double t149460 = 1.0/t149459;
            double t149461 = t149442-t149390;
            double t149462 = 1.0/(t149318*t149318*t149318);
            double t149463 = ccab1*gamma_aa[index]*gcab*t149462*t149284*t149329*t149285*(3.2E1/9.0);
            double t149464 = t149331*t149331;
            double t149465 = 1.0/(t149315*t149315*t149315);
            double t149466 = ccab4*t149464*t149465*t149286*t149287*t149288*2.0;
            double t149467 = t149334*t149334;
            double t149468 = 1.0/(t149327*t149327*t149327);
            double t149469 = ccab2*t149291*t149284*t149285*t149467*t149468*2.0;
            double t149470 = t149341*t149341;
            double t149471 = 1.0/(t149323*t149323*t149323);
            double t149472 = ccab3*gamma_aa[index]*gcab*t149290*t149470*t149471*t149284*t149285*2.0;
            double t149474 = ccaa4*t149342*t149286*t149448*t149379*(3.2E1/3.0);
            double t149475 = ccaa1*gamma_aa[index]*gcaa*t149332*t149451*(8.0/3.0);
            double t149476 = ccaa3*gamma_aa[index]*gcaa*t149335*t149284*t149456*t149378*8.0;
            double t149477 = ccaa2*t149333*t149460*t149284*t149378*(1.6E1/3.0);
            double t149478 = 1.0/(t149450*t149450);
            double t149479 = gamma_aa[index]*gcaa*t149332*8.0;
            double t149480 = gamma_aa[index]*gcaa*t149335*t149284*t149378*8.0;
            double t149481 = t149333*t149284*t149378*1.6E1;
            double t149482 = t149480+t149481+t149479;
            double t149483 = 1.0/(t149455*t149455);
            double t149484 = gamma_aa[index]*gcaa*t149332*(3.2E1/3.0);
            double t149485 = gamma_aa[index]*gcaa*t149335*t149284*t149378*3.2E1;
            double t149486 = t149333*t149284*t149378*3.2E1;
            double t149487 = t149342*t149286*t149379*(3.2E1/3.0);
            double t149488 = t149484+t149485+t149486+t149487;
            double t149489 = 1.0/(t149447*t149447);
            double t149490 = gamma_aa[index]*gcaa*t149332*(1.6E1/3.0);
            double t149491 = t149333*t149284*t149378*(1.6E1/3.0);
            double t149492 = t149490+t149491;
            double t149493 = 1.0/(t149459*t149459);
            double t149494 = t149474+t149475+t149476+t149477-ccaa1*t149333*t149284*t149378*t149478*(8.0/3.0)- \
               ccaa2*t149291*t149284*t149492*t149493*t149378-ccaa4*t149286*t149288*t149379*t149488*t149489-ccaa3* \
               gamma_aa[index]*gcaa*t149290*t149284*t149482*t149483*t149378;
            double t149495 = ccaa4*t149286*t149448*t149288*t149379;
            double t149496 = ccaa1*gamma_aa[index]*gcaa*t149451*t149289;
            double t149497 = ccaa3*gamma_aa[index]*gcaa*t149290*t149284*t149456*t149378;
            double t149498 = ccaa2*t149460*t149291*t149284*t149378;
            double t149499 = ccaa0+t149495+t149496+t149497+t149498;
            double t149500 = 1.0/(t149362*t149362*t149362);
            double t149501 = b4f*t149260*t149289*(1.0E1/9.0);
            double t149502 = b2f*c*t149424*(4.0/9.0);
            double t149503 = b3f*t149260*t149368*t149289*(1.0/1.2E1);
            double t149504 = b1f*c*t149424*t149368*(2.0/9.0);
            double t149505 = b3f*c*t149424*t149297*(2.0/3.0);
            double t149506 = t149501+t149502+t149503+t149504+t149505-b1f*t149260*t149425*t149289*(1.0/3.6E1);
            double t149507 = t149380*t149506*t149381*t149356;
            double t149509 = t149310*t149370*t149371*t149435;
            double t149510 = 1.0/(t149365*t149365);
            double t149511 = 1.0/(t149362*t149362*t149362*t149362);
            double t149512 = t149510*t149511*t149426*t149356*t149357*(1.0/2.0);
            double t149513 = t149310*t149427*t149436*t149437*t149267*(1.0/2.0);
            double t149514 = a1f*c*t149380*t149381*t149366*t149386*(2.0/3.0);
            double t149515 = a1p*c*t149370*t149371*t149366*t149376*(2.0/3.0);
            double t149516 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t149517 = 1.0/(omega*omega);
            double t149518 = pow(t149516,2.0/3.0);
            double t149521 = t149517*t149518;
            double t149519 = exp(-t149521);
            double t149520 = 1.0/pow(t149516,1.0/3.0);
            double t149522 = omega*omega;
            double t149523 = t149519-1.0;
            double t149524 = 1.0/pow(t149516,2.0/3.0);
            double t149525 = 1.0/pow(t149516,4.0/3.0);
            double t149526 = 1.0/omega;
            double t149527 = t149522*t149523*t149524*(1.0/2.0);
            double t149528 = t149527-t149519+3.0/2.0;
            double t149529 = gx*gx;
            double t149530 = t149529*t149529;
            double t149531 = pow(rho_a[index],1.0/3.0);
            double t149532 = pow(t149516,1.0/3.0);
            double t149533 = t149532*t149526;
            double t149534 = erf(t149533);
            double t149535 = t149534*(3.991211251234741E15/2.251799813685248E15);
            double t149567 = omega*t149520*t149528;
            double t149536 = t149535-t149567;
            double t149537 = gamma_aa[index]*gx*t149289*4.0;
            double t149538 = gamma_aa[index]*gx*t149290*t149284*t149529*4.0;
            double t149539 = t149291*t149284*t149529*6.0;
            double t149540 = t149530*t149286*t149288;
            double t149541 = t149540+t149537+t149538+t149539+1.0;
            double t149542 = 1.0/t149541;
            double t149543 = gamma_aa[index]*gx*t149289;
            double t149544 = t149543+1.0;
            double t149545 = 1.0/t149544;
            double t149546 = gamma_aa[index]*gx*t149289*3.0;
            double t149547 = gamma_aa[index]*gx*t149290*t149284*t149529;
            double t149548 = t149291*t149284*t149529*3.0;
            double t149549 = t149546+t149547+t149548+1.0;
            double t149550 = 1.0/t149549;
            double t149551 = gamma_aa[index]*gx*t149289*2.0;
            double t149552 = t149291*t149284*t149529;
            double t149553 = t149551+t149552+1.0;
            double t149554 = 1.0/t149553;
            double t149555 = 1.0/rho_a[index];
            double t149556 = t149519*t149555*(1.0/3.0);
            double t149557 = 1.0/pow(t149516,5.0/3.0);
            double t149558 = t149522*t149523*t149557*(2.778046668940015E15/1.40737488355328E14);
            double t149562 = t149520*t149517*t149519*(2.778046668940015E15/7.0368744177664E13);
            double t149559 = -t149562+t149556+t149558;
            double t149560 = 1.0/sqrt(3.141592653589793);
            double t149561 = omega*t149525*t149528*(2.778046668940015E15/1.40737488355328E14);
            double t149563 = omega*t149520*t149559;
            double t149564 = t149524*t149560*t149526*t149519*(1.108777112152858E31/1.584563250285287E29);
            double t149565 = t149561+t149563+t149564;
            double t149566 = 1.0/pow(t149516,7.0/3.0);
            double t149568 = cx4*t149530*t149542*t149286*t149288;
            double t149569 = cx1*gamma_aa[index]*gx*t149545*t149289;
            double t149570 = cx3*gamma_aa[index]*gx*t149550*t149290*t149284*t149529;
            double t149571 = cx2*t149291*t149284*t149554*t149529;
            double t149572 = cx0+t149570+t149571+t149568+t149569;
            double t149573 = pow(rho_a[index],4.0/3.0);
            double t149574 = omega*t149520*t149565*(4.0/3.0);
            double t149575 = t149574-omega*t149525*t149536*(2.778046668940015E15/1.05553116266496E14);
            double t149576 = cx4*t149530*t149342*t149542*t149286*(3.2E1/3.0);
            double t149577 = cx1*gamma_aa[index]*gx*t149332*t149545*(8.0/3.0);
            double t149578 = cx3*gamma_aa[index]*gx*t149550*t149335*t149284*t149529*8.0;
            double t149579 = cx2*t149333*t149284*t149554*t149529*(1.6E1/3.0);
            double t149580 = 1.0/(t149544*t149544);
            double t149581 = gamma_aa[index]*gx*t149332*8.0;
            double t149582 = gamma_aa[index]*gx*t149335*t149284*t149529*8.0;
            double t149583 = t149333*t149284*t149529*1.6E1;
            double t149584 = t149581+t149582+t149583;
            double t149585 = 1.0/(t149549*t149549);
            double t149586 = gamma_aa[index]*gx*t149332*(3.2E1/3.0);
            double t149587 = gamma_aa[index]*gx*t149335*t149284*t149529*3.2E1;
            double t149588 = t149333*t149284*t149529*3.2E1;
            double t149589 = t149530*t149342*t149286*(3.2E1/3.0);
            double t149590 = t149586+t149587+t149588+t149589;
            double t149591 = 1.0/(t149541*t149541);
            double t149592 = gamma_aa[index]*gx*t149332*(1.6E1/3.0);
            double t149593 = t149333*t149284*t149529*(1.6E1/3.0);
            double t149594 = t149592+t149593;
            double t149595 = 1.0/(t149553*t149553);
            double t149596 = t149576+t149577+t149578+t149579-cx1*t149333*t149580*t149284*t149529*(8.0/3.0)-cx2* \
               t149291*t149284*t149529*t149594*t149595-cx4*t149530*t149590*t149591*t149286*t149288-cx3*gamma_aa[index]* \
               gx*t149290*t149284*t149529*t149584*t149585;
            double t149597 = omega*t149520*t149536*(4.0/3.0);
            double t149598 = t149597-1.0;
            v_rho_a_rho_a_[index] = -t149396*(-t149440-rho_a[index]*(t149404+t149423+t149408-t149405*t149271* \
               t149281*t149273*2.0-a1p*c*c0p*t149265*t149283*(8.0/9.0)+Aa*t149410*t149420*t149422*t149409*t149294* \
               (4.0/9.0))*2.0+rho_a[index]*(t149513+t149515+t149509-t149429-t149438+t149354*t149294*(t149512+t149514+ \
               t149507+t149429+t149438-t149310*t149370*t149371*t149435-t149500*t149380*t149426*t149356*2.0-a1f*c* \
               c0f*t149424*t149369*(8.0/9.0)-t149310*t149427*t149436*t149437*t149267*(1.0/2.0)-a1p*c*t149370*t149371* \
               t149366*t149376*(2.0/3.0)))+t149354*t149294*t149439*2.0-t149310*t149370*t149371*t149376*2.0+t149271* \
               t149273*t149282*t149275*2.0+a1p*c*c0p*t149308*t149366*(4.0/3.0))-t149461*t149494*2.0+(rho_a[index]* \
               (t149390+t149354*t149294*(t149389-c0p*t149310*t149308*2.0))*2.0-c0p*rho_a[index]*t149273*t149283*4.0) \
               *(t149463+t149472+t149466+t149469+ccab1*gamma_aa[index]*gcab*t149336*t149319*(4.4E1/9.0)-ccab1*t149330* \
               t149391*t149284*t149285*(7.6E1/9.0)+ccab2*t149330*t149328*t149284*t149285*(4.0E1/3.0)+ccab4*t149316* \
               t149347*t149286*t149287*(3.68E2/9.0)-ccab2*t149333*t149351*t149334*t149284*t149285*(1.6E1/3.0)-ccab4* \
               t149331*t149342*t149348*t149286*t149287*(3.2E1/3.0)-ccab2*t149351*t149291*t149284*t149285*(gamma_aa[index]* \
               gcab*t149336*(8.8E1/9.0)+t149330*t149284*t149285*(4.0E1/3.0))-ccab4*t149348*t149286*t149287*t149288* \
               (gamma_aa[index]*gcab*t149336*(1.76E2/9.0)+t149330*t149284*t149285*8.0E1+t149347*t149286*t149287*(3.68E2/ \
               9.0)+gamma_aa[index]*gcab*t149284*t149329*t149285*(3.04E2/3.0))+ccab3*gamma_aa[index]*gcab*t149324* \
               t149284*t149329*t149285*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t149290*t149337*t149284*t149285*(gamma_aa[index]* \
               gcab*t149336*(4.4E1/3.0)+t149330*t149284*t149285*4.0E1+gamma_aa[index]*gcab*t149284*t149329*t149285* \
               (7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t149341*t149335*t149337*t149284*t149285*8.0)+(t149442-t149390+ \
               rho_a[index]*(-t149377+t149388+t149354*t149294*t149439)+rho_a[index]*(t149271*t149273*t149282*t149275- \
               a1p*c*c0p*t149274*t149283*(2.0/3.0))*2.0+c0p*t149273*t149283*2.0)*(ccab1*gamma_aa[index]*gcab*t149332* \
               t149319*(4.0/3.0)-ccab1*t149333*t149391*t149284*t149285*(4.0/3.0)+ccab2*t149333*t149328*t149284*t149285* \
               (8.0/3.0)+ccab4*t149342*t149316*t149286*t149287*(1.6E1/3.0)-ccab2*t149351*t149334*t149291*t149284* \
               t149285-ccab4*t149331*t149348*t149286*t149287*t149288+ccab3*gamma_aa[index]*gcab*t149324*t149335*t149284* \
               t149285*4.0-ccab3*gamma_aa[index]*gcab*t149341*t149290*t149337*t149284*t149285)*4.0+t149499*(-t149377+ \
               t149388+t149354*t149294*(t149377+t149387-t149380*t149381*t149356*t149386-a1p*c*c0p*t149308*t149366* \
               (2.0/3.0)))*2.0-(rho_a[index]*t149461*2.0+c0p*rho_a[index]*t149273*t149283*4.0)*(t149463+t149472+t149466+ \
               t149469-ccab1*t149330*t149391*t149284*t149285*(3.2E1/9.0)+ccab2*t149330*t149328*t149284*t149285*(3.2E1/ \
               9.0)-ccab2*t149351*t149347*t149286*t149287*(3.2E1/9.0)+ccab4*t149316*t149347*t149286*t149287*(6.4E1/ \
               3.0)-ccab2*t149333*t149351*t149334*t149284*t149285*(1.6E1/3.0)-ccab4*t149331*t149342*t149348*t149286* \
               t149287*(3.2E1/3.0)-ccab4*t149348*t149286*t149287*t149288*(t149330*t149284*t149285*(6.4E1/3.0)+t149347* \
               t149286*t149287*(6.4E1/3.0)+gamma_aa[index]*gcab*t149284*t149329*t149285*(1.28E2/3.0))+ccab3*gamma_aa[index]* \
               gcab*t149324*t149284*t149329*t149285*(3.2E1/3.0)-ccab3*gamma_aa[index]*gcab*t149290*t149337*t149284* \
               t149285*(t149330*t149284*t149285*(3.2E1/3.0)+gamma_aa[index]*gcab*t149284*t149329*t149285*(3.2E1/3.0) \
               )-ccab3*gamma_aa[index]*gcab*t149341*t149335*t149337*t149284*t149285*8.0)+t149396*(t149440+rho_a[index]* \
               (t149404+t149423+t149408-t149405*t149271*t149281*t149273*2.0-a1p*c*c0p*t149265*t149283*(8.0/9.0)-Aa* \
               t149410*t149420*t149422*t149409*t149294*(4.0/9.0))*2.0-t149271*t149273*t149282*t149275*2.0)+rho_a[index]* \
               t149494*(t149377-t149388+t149354*t149294*(t149473-t149377-t149387+t149388))*2.0+rho_a[index]*t149499* \
               (t149513+t149515+t149509-t149429-t149438+t149354*t149294*(t149512-t149513+t149514-t149515+t149507- \
               t149509+t149429+t149438-t149500*t149380*t149426*t149356*2.0-a1f*c*c0f*t149424*t149369*(8.0/9.0)))+ \
               rho_a[index]*(t149442-t149390)*(ccaa1*gamma_aa[index]*gcaa*t149451*t149336*(8.8E1/9.0)+ccaa2*t149330* \
               t149460*t149284*t149378*(3.04E2/9.0)-ccaa1*t149330*t149284*t149378*t149478*2.4E1+ccaa4*t149347*t149286* \
               t149448*t149379*(1.12E3/9.0)-ccaa2*t149333*t149284*t149492*t149493*t149378*(3.2E1/3.0)-ccaa4*t149342* \
               t149286*t149379*t149488*t149489*(6.4E1/3.0)-ccaa2*t149291*t149284*t149493*t149378*(gamma_aa[index]* \
               gcaa*t149336*(1.76E2/9.0)+t149330*t149284*t149378*(3.04E2/9.0))-ccaa4*t149286*t149288*t149379*t149489* \
               (gamma_aa[index]*gcaa*t149336*(3.52E2/9.0)+t149330*t149284*t149378*(6.08E2/3.0)+t149347*t149286*t149379* \
               (1.12E3/9.0)+gamma_aa[index]*gcaa*t149284*t149329*t149378*2.88E2)+ccaa2*t149291*t149284*(t149492*t149492) \
               *t149378*1.0/(t149459*t149459*t149459)*2.0+ccaa4*1.0/(t149447*t149447*t149447)*t149286*t149288*t149379* \
               (t149488*t149488)*2.0+ccaa3*gamma_aa[index]*gcaa*t149284*t149329*t149456*t149378*7.2E1+ccaa1*gamma_aa[index]* \
               gcaa*1.0/(t149450*t149450*t149450)*t149284*t149329*t149378*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa* \
               t149290*t149284*1.0/(t149455*t149455*t149455)*(t149482*t149482)*t149378*2.0-ccaa3*gamma_aa[index]* \
               gcaa*t149290*t149284*t149483*t149378*(gamma_aa[index]*gcaa*t149336*(8.8E1/3.0)+t149330*t149284*t149378* \
               (3.04E2/3.0)+gamma_aa[index]*gcaa*t149284*t149329*t149378*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t149335* \
               t149284*t149482*t149483*t149378*1.6E1)-c0*t149573*t149598*(cx1*gamma_aa[index]*gx*t149336*t149545* \
               (8.8E1/9.0)-cx1*t149330*t149580*t149284*t149529*2.4E1+cx2*t149330*t149284*t149554*t149529*(3.04E2/ \
               9.0)+cx4*t149530*t149542*t149347*t149286*(1.12E3/9.0)-cx2*t149333*t149284*t149529*t149594*t149595* \
               (3.2E1/3.0)-cx4*t149530*t149342*t149590*t149591*t149286*(6.4E1/3.0)-cx2*t149291*t149284*t149529*t149595* \
               (gamma_aa[index]*gx*t149336*(1.76E2/9.0)+t149330*t149284*t149529*(3.04E2/9.0))-cx4*t149530*t149591* \
               t149286*t149288*(gamma_aa[index]*gx*t149336*(3.52E2/9.0)+t149330*t149284*t149529*(6.08E2/3.0)+t149530* \
               t149347*t149286*(1.12E3/9.0)+gamma_aa[index]*gx*t149284*t149329*t149529*2.88E2)+cx2*t149291*1.0/(t149553* \
               t149553*t149553)*t149284*t149529*(t149594*t149594)*2.0+cx4*t149530*1.0/(t149541*t149541*t149541)*(t149590* \
               t149590)*t149286*t149288*2.0+cx3*gamma_aa[index]*gx*t149550*t149284*t149329*t149529*7.2E1+cx1*gamma_aa[index]* \
               gx*1.0/(t149544*t149544*t149544)*t149284*t149329*t149529*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t149290* \
               t149284*t149529*(t149584*t149584)*1.0/(t149549*t149549*t149549)*2.0-cx3*gamma_aa[index]*gx*t149290* \
               t149284*t149529*t149585*(gamma_aa[index]*gx*t149336*(8.8E1/3.0)+t149330*t149284*t149529*(3.04E2/3.0) \
               +gamma_aa[index]*gx*t149284*t149329*t149529*7.2E1)-cx3*gamma_aa[index]*gx*t149335*t149284*t149529* \
               t149584*t149585*1.6E1)-c0*t149531*t149572*t149575*(8.0/3.0)+c0*t149531*t149596*t149598*(8.0/3.0)+c0* \
               t149573*t149575*t149596*2.0-c0*t149572*t149299*t149598*(4.0/9.0)+c0*t149572*t149573*(omega*t149520* \
               (omega*t149520*(t149410*t149519*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t149524*t149519*(7.717543294808713E30/ \
               4.951760157141521E27)+t149522*t149523*1.0/pow(t149516,8.0/3.0)*(3.858771647404357E31/1.980704062856608E28) \
               -t149525*t149517*t149519*(7.717543294808713E30/9.903520314283042E27)+t149520*t149517*t149519*t149555* \
               (2.778046668940015E15/2.11106232532992E14))+omega*t149525*t149559*(2.778046668940015E15/7.0368744177664E13) \
               +omega*t149528*t149566*(7.717543294808713E30/4.951760157141521E27)+t149560*t149526*t149519*t149557* \
               (3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t149560*t149519*t149555*(1.108777112152858E31/ \
               2.37684487542793E29))*(4.0/3.0)+omega*t149525*t149565*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t149536*t149566*(7.717543294808713E30/3.713820117856141E27));
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t149600 = 1.0/pow(rho_a[index],1.0/3.0);
                double t149601 = c*t149600;
                double t149602 = sqrt(t149601);
                double t149603 = pow(t149601,3.0/2.0);
                double t149604 = c*c;
                double t149605 = 1.0/pow(rho_a[index],2.0/3.0);
                double t149606 = 1.0/c0p;
                double t149607 = b1p*t149602;
                double t149608 = b3p*t149603;
                double t149609 = b4p*t149604*t149605;
                double t149610 = b2p*c*t149600;
                double t149611 = t149610+t149607+t149608+t149609;
                double t149612 = 1.0/t149611;
                double t149613 = t149612*t149606*(1.0/2.0);
                double t149614 = t149613+1.0;
                double t149615 = log(t149614);
                double t149616 = a1p*c*t149600;
                double t149617 = t149616+1.0;
                double t149618 = 1.0/pow(rho_a[index],8.0/3.0);
                double t149619 = gamma_aa[index]*gamma_aa[index];
                double t149620 = gcaa*gcaa;
                double t149621 = t149620*t149620;
                double t149622 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t149623 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t149624 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t149625 = gamma_aa[index]*gcaa*t149618;
                double t149626 = t149625+1.0;
                double t149627 = gamma_aa[index]*gcaa*t149618*3.0;
                double t149628 = gamma_aa[index]*gcaa*t149620*t149624*t149619;
                double t149629 = t149620*t149623*t149619*3.0;
                double t149630 = t149627+t149628+t149629+1.0;
                double t149631 = t149619*t149619;
                double t149632 = gamma_aa[index]*gcaa*t149618*4.0;
                double t149633 = gamma_aa[index]*gcaa*t149620*t149624*t149619*4.0;
                double t149634 = t149620*t149623*t149619*6.0;
                double t149635 = t149621*t149622*t149631;
                double t149636 = t149632+t149633+t149634+t149635+1.0;
                double t149637 = gamma_aa[index]*gcaa*t149618*2.0;
                double t149638 = t149620*t149623*t149619;
                double t149639 = t149637+t149638+1.0;
                double t149640 = pow(2.0,1.0/3.0);
                double t149641 = t149640*2.0;
                double t149642 = t149641-2.0;
                double t149643 = two_13*2.0;
                double t149644 = t149643-2.0;
                double t149645 = 1.0/t149644;
                double t149646 = 1.0/c0f;
                double t149647 = b1f*t149602;
                double t149648 = b3f*t149603;
                double t149649 = b4f*t149604*t149605;
                double t149650 = b2f*c*t149600;
                double t149651 = t149650+t149647+t149648+t149649;
                double t149652 = 1.0/t149651;
                double t149653 = t149652*t149646*(1.0/2.0);
                double t149654 = t149653+1.0;
                double t149655 = log(t149654);
                double t149656 = a1f*c*t149600;
                double t149657 = t149656+1.0;
                double t149658 = c0f*t149655*t149657*2.0;
                double t149659 = c0p*t149615*t149617*2.0;
                double t149660 = rho_a[index]*2.0;
                double t149661 = 1.0/pow(t149660,1.0/3.0);
                double t149662 = c*t149661;
                double t149663 = gcab*gcab;
                double t149664 = t149663*t149663;
                double t149665 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t149666 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t149667 = gamma_aa[index]*gcab*t149618*2.0;
                double t149668 = t149623*t149663*t149619;
                double t149669 = t149667+t149668+1.0;
                double t149670 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t149671 = gamma_aa[index]*gcab*t149618;
                double t149672 = t149671+1.0;
                double t149673 = gamma_aa[index]*gcab*t149618*3.0;
                double t149674 = gamma_aa[index]*gcab*t149624*t149663*t149619;
                double t149675 = t149623*t149663*t149619*3.0;
                double t149676 = t149673+t149674+t149675+1.0;
                double t149677 = gamma_aa[index]*gcab*t149618*4.0;
                double t149678 = gamma_aa[index]*gcab*t149624*t149663*t149619*4.0;
                double t149679 = t149623*t149663*t149619*6.0;
                double t149680 = t149622*t149631*t149664;
                double t149681 = t149680+t149677+t149678+t149679+1.0;
                double t149682 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t149683 = 1.0/(t149669*t149669);
                double t149684 = 1.0/(t149676*t149676);
                double t149685 = 1.0/(t149681*t149681);
                double t149686 = gamma_aa[index]*gcab*t149682*(8.0/3.0);
                double t149687 = t149663*t149619*t149665*(8.0/3.0);
                double t149688 = t149686+t149687;
                double t149689 = gcab*t149618;
                double t149690 = gamma_aa[index]*t149623*t149663;
                double t149691 = t149690+t149689;
                double t149692 = gcab*t149618*(3.0/2.0);
                double t149693 = gamma_aa[index]*t149623*t149663*3.0;
                double t149694 = gcab*t149624*t149663*t149619*(3.0/2.0);
                double t149695 = t149692+t149693+t149694;
                double t149696 = gamma_aa[index]*gcab*t149682*4.0;
                double t149697 = gamma_aa[index]*gcab*t149670*t149663*t149619*4.0;
                double t149698 = t149663*t149619*t149665*8.0;
                double t149699 = t149696+t149697+t149698;
                double t149700 = gamma_aa[index]*gcab*t149682*(1.6E1/3.0);
                double t149701 = gamma_aa[index]*gcab*t149670*t149663*t149619*1.6E1;
                double t149702 = t149663*t149619*t149665*1.6E1;
                double t149703 = t149631*t149664*t149666*(1.6E1/3.0);
                double t149704 = t149700+t149701+t149702+t149703;
                double t149705 = gcab*t149618*2.0;
                double t149706 = gamma_aa[index]*t149623*t149663*6.0;
                double t149707 = gcab*t149624*t149663*t149619*6.0;
                double t149708 = gamma_aa[index]*t149622*t149619*t149664*2.0;
                double t149709 = t149705+t149706+t149707+t149708;
                double t149710 = t149658-t149659;
                double t149711 = t149710*t149642*t149645;
                double t149712 = t149711+t149659;
                double t149713 = rho_a[index]*t149712*2.0;
                double t149714 = sqrt(t149662);
                double t149715 = b1p*t149714;
                double t149716 = pow(t149662,3.0/2.0);
                double t149717 = b3p*t149716;
                double t149718 = b2p*c*t149661;
                double t149719 = 1.0/pow(t149660,2.0/3.0);
                double t149720 = b4p*t149604*t149719;
                double t149721 = t149720+t149715+t149717+t149718;
                double t149722 = 1.0/t149721;
                double t149723 = t149722*t149606*(1.0/2.0);
                double t149724 = t149723+1.0;
                double t149725 = log(t149724);
                double t149726 = a1p*c*t149661;
                double t149727 = t149726+1.0;
                double t149728 = t149713-c0p*rho_a[index]*t149725*t149727*4.0;
                double t149729 = 1.0/t149681;
                double t149730 = 1.0/t149669;
                double t149731 = 1.0/t149676;
                double t149732 = 1.0/(t149672*t149672);
                double t149733 = 1.0/(t149672*t149672*t149672);
                double t149734 = ccab3*gcab*t149624*t149663*t149619*t149684*t149699*(3.0/2.0);
                double t149735 = ccab2*gamma_aa[index]*t149623*t149663*t149683*t149688;
                double t149736 = ccab3*gamma_aa[index]*gcab*t149670*t149663*t149619*t149684*t149695*4.0;
                double t149737 = ccab4*gamma_aa[index]*t149622*t149704*t149619*t149664*t149685*2.0;
                double t149738 = ccab4*t149631*t149664*t149709*t149666*t149685*(1.6E1/3.0);
                double t149739 = ccab2*t149663*t149619*t149691*t149665*t149683*(8.0/3.0);
                double t149740 = gamma_aa[index]*t149663*t149665*4.0;
                double t149741 = 1.0/(t149669*t149669*t149669);
                double t149742 = 1.0/(t149676*t149676*t149676);
                double t149743 = 1.0/(t149681*t149681*t149681);
                double t149744 = 1.0/pow(t149660,4.0/3.0);
                double t149745 = 1.0/pow(rho_a[index],4.0/3.0);
                double t149746 = 1.0/pow(rho_a[index],5.0/3.0);
                double t149747 = 1.0/sqrt(t149601);
                double t149748 = 1.0/t149614;
                double t149749 = 1.0/(t149611*t149611);
                double t149750 = b4p*t149604*t149746*(2.0/3.0);
                double t149751 = b2p*c*t149745*(1.0/3.0);
                double t149752 = b1p*c*t149745*t149747*(1.0/6.0);
                double t149753 = b3p*c*t149602*t149745*(1.0/2.0);
                double t149754 = t149750+t149751+t149752+t149753;
                double t149755 = t149617*t149754*t149748*t149749;
                double t149756 = 1.0/t149672;
                double t149757 = 1.0/t149626;
                double t149758 = 1.0/t149636;
                double t149759 = 1.0/t149639;
                double t149760 = 1.0/t149630;
                double t149761 = 1.0/(t149626*t149626);
                double t149762 = 1.0/(t149630*t149630);
                double t149763 = 1.0/(t149639*t149639);
                double t149764 = gcaa*t149618*3.0;
                double t149765 = gamma_aa[index]*t149620*t149623*6.0;
                double t149766 = gcaa*t149620*t149624*t149619*3.0;
                double t149767 = t149764+t149765+t149766;
                double t149768 = 1.0/(t149636*t149636);
                double t149769 = gcaa*t149618*4.0;
                double t149770 = gamma_aa[index]*t149620*t149623*1.2E1;
                double t149771 = gcaa*t149620*t149624*t149619*1.2E1;
                double t149772 = gamma_aa[index]*t149621*t149622*t149619*4.0;
                double t149773 = t149770+t149771+t149772+t149769;
                double t149774 = gcaa*t149618*2.0;
                double t149775 = gamma_aa[index]*t149620*t149623*2.0;
                double t149776 = t149774+t149775;
                double t149777 = gamma_aa[index]*gcaa*t149682*(1.6E1/3.0);
                double t149778 = t149620*t149619*t149665*(1.6E1/3.0);
                double t149779 = t149777+t149778;
                double t149780 = gamma_aa[index]*gcaa*t149682*8.0;
                double t149781 = gamma_aa[index]*gcaa*t149620*t149670*t149619*8.0;
                double t149782 = t149620*t149619*t149665*1.6E1;
                double t149783 = t149780+t149781+t149782;
                double t149784 = gamma_aa[index]*gcaa*t149682*(3.2E1/3.0);
                double t149785 = gamma_aa[index]*gcaa*t149620*t149670*t149619*3.2E1;
                double t149786 = t149620*t149619*t149665*3.2E1;
                double t149787 = t149621*t149631*t149666*(3.2E1/3.0);
                double t149788 = t149784+t149785+t149786+t149787;
                double t149789 = 1.0/t149654;
                double t149790 = 1.0/(t149651*t149651);
                double t149791 = b4f*t149604*t149746*(2.0/3.0);
                double t149792 = b2f*c*t149745*(1.0/3.0);
                double t149793 = b1f*c*t149745*t149747*(1.0/6.0);
                double t149794 = b3f*c*t149602*t149745*(1.0/2.0);
                double t149795 = t149791+t149792+t149793+t149794;
                double t149796 = a1f*c*c0f*t149655*t149745*(2.0/3.0);
                double t149797 = a1p*c*c0p*t149615*t149745*(2.0/3.0);
                double t149798 = ccaa1*gcaa*t149618*t149757;
                double t149799 = ccaa4*gamma_aa[index]*t149621*t149622*t149619*t149758*4.0;
                double t149800 = ccaa2*gamma_aa[index]*t149620*t149623*t149759*2.0;
                double t149801 = ccaa3*gcaa*t149620*t149624*t149760*t149619*3.0;
                double t149802 = t149800+t149801+t149798+t149799-ccaa1*gamma_aa[index]*t149620*t149623*t149761-ccaa4* \
                   t149621*t149622*t149631*t149773*t149768-ccaa2*t149620*t149623*t149619*t149763*t149776-ccaa3*gamma_aa[index]* \
                   gcaa*t149620*t149624*t149762*t149619*t149767;
                double t149803 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t149804 = 1.0/pow(t149803,1.0/3.0);
                double t149805 = 1.0/(omega*omega);
                double t149806 = pow(t149803,2.0/3.0);
                double t149856 = t149805*t149806;
                double t149807 = exp(-t149856);
                double t149808 = gx*gx;
                double t149809 = t149808*t149808;
                double t149810 = gamma_aa[index]*gx*t149618;
                double t149811 = t149810+1.0;
                double t149812 = gamma_aa[index]*gx*t149618*3.0;
                double t149813 = gamma_aa[index]*gx*t149624*t149619*t149808;
                double t149814 = t149623*t149619*t149808*3.0;
                double t149815 = t149812+t149813+t149814+1.0;
                double t149816 = gamma_aa[index]*gx*t149618*2.0;
                double t149817 = t149623*t149619*t149808;
                double t149818 = t149816+t149817+1.0;
                double t149819 = 1.0/(t149815*t149815);
                double t149820 = gamma_aa[index]*gx*t149618*4.0;
                double t149821 = gamma_aa[index]*gx*t149624*t149619*t149808*4.0;
                double t149822 = t149623*t149619*t149808*6.0;
                double t149823 = t149622*t149631*t149809;
                double t149824 = t149820+t149821+t149822+t149823+1.0;
                double t149825 = 1.0/(t149824*t149824);
                double t149826 = 1.0/(t149818*t149818);
                double t149827 = gamma_aa[index]*gx*t149682*(1.6E1/3.0);
                double t149828 = t149619*t149808*t149665*(1.6E1/3.0);
                double t149829 = t149827+t149828;
                double t149830 = gx*t149618*2.0;
                double t149831 = gamma_aa[index]*t149623*t149808*2.0;
                double t149832 = t149830+t149831;
                double t149833 = gx*t149618*3.0;
                double t149834 = gamma_aa[index]*t149623*t149808*6.0;
                double t149835 = gx*t149624*t149619*t149808*3.0;
                double t149836 = t149833+t149834+t149835;
                double t149837 = gamma_aa[index]*gx*t149682*8.0;
                double t149838 = gamma_aa[index]*gx*t149670*t149619*t149808*8.0;
                double t149839 = t149619*t149808*t149665*1.6E1;
                double t149840 = t149837+t149838+t149839;
                double t149841 = gamma_aa[index]*gx*t149682*(3.2E1/3.0);
                double t149842 = gamma_aa[index]*gx*t149670*t149619*t149808*3.2E1;
                double t149843 = t149619*t149808*t149665*3.2E1;
                double t149844 = t149631*t149809*t149666*(3.2E1/3.0);
                double t149845 = t149841+t149842+t149843+t149844;
                double t149846 = gx*t149618*4.0;
                double t149847 = gamma_aa[index]*t149623*t149808*1.2E1;
                double t149848 = gx*t149624*t149619*t149808*1.2E1;
                double t149849 = gamma_aa[index]*t149622*t149619*t149809*4.0;
                double t149850 = t149846+t149847+t149848+t149849;
                double t149851 = 1.0/omega;
                double t149852 = pow(t149803,1.0/3.0);
                double t149853 = t149851*t149852;
                double t149854 = erf(t149853);
                double t149855 = t149854*(3.991211251234741E15/2.251799813685248E15);
                double t149857 = omega*omega;
                double t149858 = 1.0/pow(t149803,2.0/3.0);
                double t149859 = t149807-1.0;
                double t149860 = t149857*t149858*t149859*(1.0/2.0);
                double t149861 = t149860-t149807+3.0/2.0;
                double t149872 = omega*t149804*t149861;
                double t149862 = -t149872+t149855;
                double t149863 = omega*t149804*t149862*(4.0/3.0);
                double t149864 = t149863-1.0;
                double t149865 = 1.0/t149811;
                double t149866 = 1.0/t149824;
                double t149867 = 1.0/t149818;
                double t149868 = 1.0/t149815;
                double t149869 = 1.0/(t149811*t149811);
                double t149870 = pow(rho_a[index],4.0/3.0);
                double t149871 = 1.0/pow(t149803,4.0/3.0);
                double t149873 = cx1*gx*t149618*t149865;
                double t149874 = cx4*gamma_aa[index]*t149622*t149619*t149809*t149866*4.0;
                double t149875 = cx2*gamma_aa[index]*t149623*t149808*t149867*2.0;
                double t149876 = cx3*gx*t149624*t149619*t149808*t149868*3.0;
                double t149877 = t149873+t149874+t149875+t149876-cx1*gamma_aa[index]*t149623*t149808*t149869-cx2* \
                   t149623*t149832*t149619*t149808*t149826-cx4*t149622*t149631*t149850*t149825*t149809-cx3*gamma_aa[index]* \
                   gx*t149624*t149619*t149808*t149836*t149819;
                v_rho_a_gamma_aa_[index] = t149728*(t149734+t149735+t149736+t149737+t149738+t149739-ccab2*gamma_aa[index]* \
                   t149730*t149663*t149665*(4.0/3.0)+ccab1*gamma_aa[index]*t149732*t149663*t149665*(4.0/3.0)+ccab4*t149622* \
                   t149631*t149664*t149685*(gamma_aa[index]*t149663*t149665*8.0+gamma_aa[index]*t149619*t149664*t149666* \
                   8.0+gcab*t149670*t149663*t149619*1.6E1)+ccab2*gamma_aa[index]*t149619*t149664*t149683*t149666*(4.0/ \
                   3.0)-ccab4*gamma_aa[index]*t149619*t149664*t149666*t149729*8.0-ccab1*gcab*t149670*t149733*t149663* \
                   t149619*(4.0/3.0)-ccab3*gcab*t149731*t149670*t149663*t149619*4.0-ccab4*t149622*t149631*t149704*t149743* \
                   t149664*t149709*2.0-ccab2*t149623*t149741*t149663*t149619*t149691*t149688*2.0+ccab3*gamma_aa[index]* \
                   gcab*t149624*t149663*t149619*t149684*(t149740+gcab*t149670*t149663*t149619*4.0)-ccab3*gamma_aa[index]* \
                   gcab*t149624*t149742*t149663*t149619*t149695*t149699*2.0)-t149802*(t149659+t149642*t149645*(t149658- \
                   c0p*t149615*t149617*2.0))-(-t149711-t149659+rho_a[index]*((1.0/(t149721*t149721)*t149727*(b4p*t149604* \
                   1.0/pow(t149660,5.0/3.0)*(2.0/3.0)+b2p*c*t149744*(1.0/3.0)+b3p*c*t149714*t149744*(1.0/2.0)+b1p*c*1.0/ \
                   sqrt(t149662)*t149744*(1.0/6.0)))/t149724-a1p*c*c0p*t149725*t149744*(2.0/3.0))*2.0+rho_a[index]*(- \
                   t149755+t149797+t149642*t149645*(t149755+t149796-t149790*t149657*t149795*t149789-a1p*c*c0p*t149615* \
                   t149745*(2.0/3.0)))+c0p*t149725*t149727*2.0)*(ccab1*gcab*t149618*t149756*(1.0/2.0)+ccab2*gamma_aa[index]* \
                   t149730*t149623*t149663-ccab1*gamma_aa[index]*t149623*t149732*t149663*(1.0/2.0)-ccab4*t149622*t149631* \
                   t149664*t149709*t149685-ccab2*t149623*t149663*t149619*t149691*t149683+ccab4*gamma_aa[index]*t149622* \
                   t149619*t149664*t149729*2.0+ccab3*gcab*t149731*t149624*t149663*t149619*(3.0/2.0)-ccab3*gamma_aa[index]* \
                   gcab*t149624*t149663*t149619*t149684*t149695)*2.0+t149728*(t149734+t149735+t149736+t149737+t149738+ \
                   t149739-ccab1*gcab*t149682*t149756*(4.0/3.0)-ccab2*gamma_aa[index]*t149730*t149663*t149665*4.0+ccab1* \
                   gamma_aa[index]*t149732*t149663*t149665*(8.0/3.0)+ccab4*t149622*t149631*t149664*t149685*(gcab*t149682* \
                   (1.6E1/3.0)+gamma_aa[index]*t149663*t149665*2.4E1+gamma_aa[index]*t149619*t149664*t149666*(4.0E1/3.0) \
                   +gcab*t149670*t149663*t149619*3.2E1)+ccab2*t149623*t149663*t149619*t149683*(t149740+gcab*t149682*(8.0/ \
                   3.0))-ccab4*gamma_aa[index]*t149619*t149664*t149666*t149729*(4.0E1/3.0)-ccab1*gcab*t149670*t149733* \
                   t149663*t149619*(4.0/3.0)-ccab3*gcab*t149731*t149670*t149663*t149619*8.0-ccab4*t149622*t149631*t149704* \
                   t149743*t149664*t149709*2.0-ccab2*t149623*t149741*t149663*t149619*t149691*t149688*2.0+ccab3*gamma_aa[index]* \
                   gcab*t149624*t149663*t149619*t149684*(gcab*t149682*4.0+gamma_aa[index]*t149663*t149665*1.2E1+gcab* \
                   t149670*t149663*t149619*8.0)-ccab3*gamma_aa[index]*gcab*t149624*t149742*t149663*t149619*t149695*t149699* \
                   2.0)-rho_a[index]*t149712*(ccaa1*gcaa*t149682*t149757*(-8.0/3.0)+ccaa1*gamma_aa[index]*t149620*t149761* \
                   t149665*8.0-ccaa2*gamma_aa[index]*t149620*t149665*t149759*(3.2E1/3.0)+ccaa2*t149620*t149619*t149763* \
                   t149665*t149776*(1.6E1/3.0)+ccaa4*t149621*t149631*t149773*t149666*t149768*(3.2E1/3.0)+ccaa4*t149621* \
                   t149622*t149631*t149768*(gcaa*t149682*(3.2E1/3.0)+gamma_aa[index]*t149620*t149665*6.4E1+gamma_aa[index]* \
                   t149621*t149619*t149666*(1.28E2/3.0)+gcaa*t149620*t149670*t149619*9.6E1)-ccaa1*gcaa*t149620*t149670* \
                   1.0/(t149626*t149626*t149626)*t149619*(1.6E1/3.0)+ccaa2*t149620*t149623*t149619*t149763*(gcaa*t149682* \
                   (1.6E1/3.0)+gamma_aa[index]*t149620*t149665*(3.2E1/3.0))+ccaa2*gamma_aa[index]*t149620*t149623*t149763* \
                   t149779*2.0-ccaa4*gamma_aa[index]*t149621*t149619*t149666*t149758*(1.28E2/3.0)-ccaa3*gcaa*t149620* \
                   t149670*t149760*t149619*2.4E1+ccaa4*gamma_aa[index]*t149621*t149622*t149619*t149768*t149788*4.0+ccaa3* \
                   gcaa*t149620*t149624*t149762*t149619*t149783*3.0-ccaa4*t149621*t149622*t149631*1.0/(t149636*t149636* \
                   t149636)*t149773*t149788*2.0-ccaa2*t149620*t149623*t149619*1.0/(t149639*t149639*t149639)*t149776*t149779* \
                   2.0+ccaa3*gamma_aa[index]*gcaa*t149620*t149624*t149762*t149619*(gcaa*t149682*8.0+gamma_aa[index]*t149620* \
                   t149665*3.2E1+gcaa*t149620*t149670*t149619*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t149620*t149670*t149762* \
                   t149619*t149767*8.0-ccaa3*gamma_aa[index]*gcaa*t149620*1.0/(t149630*t149630*t149630)*t149624*t149619* \
                   t149783*t149767*2.0)+rho_a[index]*t149802*(-t149755+t149797+t149642*t149645*(t149755+t149796-t149797- \
                   t149790*t149657*t149795*t149789))-c0*t149870*t149877*(omega*t149804*(omega*t149861*t149871*(2.778046668940015E15/ \
                   1.40737488355328E14)+omega*t149804*((t149807*(1.0/3.0))/rho_a[index]+1.0/pow(t149803,5.0/3.0)*t149857* \
                   t149859*(2.778046668940015E15/1.40737488355328E14)-t149804*t149805*t149807*(2.778046668940015E15/7.0368744177664E13) \
                   )+1.0/sqrt(3.141592653589793)*t149851*t149807*t149858*(1.108777112152858E31/1.584563250285287E29)) \
                   *(4.0/3.0)-omega*t149862*t149871*(2.778046668940015E15/1.05553116266496E14))-c0*t149870*t149864*(cx1* \
                   gx*t149682*t149865*(-8.0/3.0)+cx1*gamma_aa[index]*t149808*t149665*t149869*8.0-cx2*gamma_aa[index]* \
                   t149808*t149665*t149867*(3.2E1/3.0)+cx2*t149832*t149619*t149808*t149826*t149665*(1.6E1/3.0)+cx4*t149631* \
                   t149850*t149825*t149809*t149666*(3.2E1/3.0)+cx4*t149622*t149631*t149825*t149809*(gx*t149682*(3.2E1/ \
                   3.0)+gamma_aa[index]*t149808*t149665*6.4E1+gamma_aa[index]*t149619*t149809*t149666*(1.28E2/3.0)+gx* \
                   t149670*t149619*t149808*9.6E1)-cx1*gx*1.0/(t149811*t149811*t149811)*t149670*t149619*t149808*(1.6E1/ \
                   3.0)+cx2*t149623*t149619*t149808*t149826*(gx*t149682*(1.6E1/3.0)+gamma_aa[index]*t149808*t149665*(3.2E1/ \
                   3.0))+cx2*gamma_aa[index]*t149623*t149808*t149826*t149829*2.0-cx4*gamma_aa[index]*t149619*t149809* \
                   t149666*t149866*(1.28E2/3.0)-cx3*gx*t149670*t149619*t149808*t149868*2.4E1+cx4*gamma_aa[index]*t149622* \
                   t149825*t149619*t149809*t149845*4.0+cx3*gx*t149624*t149840*t149619*t149808*t149819*3.0-cx2*t149623* \
                   t149832*t149619*t149808*1.0/(t149818*t149818*t149818)*t149829*2.0-cx4*t149622*t149631*t149850*1.0/ \
                   (t149824*t149824*t149824)*t149809*t149845*2.0+cx3*gamma_aa[index]*gx*t149624*t149619*t149808*t149819* \
                   (gx*t149682*8.0+gamma_aa[index]*t149808*t149665*3.2E1+gx*t149670*t149619*t149808*2.4E1)+cx3*gamma_aa[index]* \
                   gx*t149670*t149619*t149808*t149836*t149819*8.0-cx3*gamma_aa[index]*gx*t149624*t149840*1.0/(t149815* \
                   t149815*t149815)*t149619*t149808*t149836*2.0)-c0*pow(rho_a[index],1.0/3.0)*t149864*t149877*(4.0/3.0) \
                   ;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t149879 = 1.0/pow(rho_a[index],1.0/3.0);
                double t149880 = c*t149879;
                double t149881 = sqrt(t149880);
                double t149882 = pow(t149880,3.0/2.0);
                double t149883 = c*c;
                double t149884 = 1.0/pow(rho_a[index],2.0/3.0);
                double t149885 = 1.0/c0p;
                double t149886 = b1p*t149881;
                double t149887 = b3p*t149882;
                double t149888 = b4p*t149883*t149884;
                double t149889 = b2p*c*t149879;
                double t149890 = t149886+t149887+t149888+t149889;
                double t149891 = 1.0/t149890;
                double t149892 = t149891*t149885*(1.0/2.0);
                double t149893 = t149892+1.0;
                double t149894 = log(t149893);
                double t149895 = a1p*c*t149879;
                double t149896 = t149895+1.0;
                double t149897 = rho_a[index]*2.0;
                double t149898 = 1.0/pow(t149897,1.0/3.0);
                double t149899 = c*t149898;
                double t149900 = gcab*gcab;
                double t149901 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t149902 = 1.0/pow(rho_a[index],8.0/3.0);
                double t149903 = gamma_aa[index]*gamma_aa[index];
                double t149904 = t149900*t149900;
                double t149905 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t149906 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t149907 = gamma_aa[index]*gcab*t149902;
                double t149908 = t149907+1.0;
                double t149909 = gamma_aa[index]*gcab*t149902*2.0;
                double t149910 = t149900*t149901*t149903;
                double t149911 = t149910+t149909+1.0;
                double t149912 = gamma_aa[index]*gcab*t149902*3.0;
                double t149913 = gamma_aa[index]*gcab*t149900*t149903*t149906;
                double t149914 = t149900*t149901*t149903*3.0;
                double t149915 = t149912+t149913+t149914+1.0;
                double t149916 = t149903*t149903;
                double t149932 = gcab*t149902*2.0;
                double t149933 = gamma_aa[index]*t149900*t149901*6.0;
                double t149934 = gcab*t149900*t149903*t149906*6.0;
                double t149935 = gamma_aa[index]*t149903*t149904*t149905*2.0;
                double t149917 = t149932+t149933+t149934+t149935;
                double t149918 = gamma_aa[index]*gcab*t149902*4.0;
                double t149919 = gamma_aa[index]*gcab*t149900*t149903*t149906*4.0;
                double t149920 = t149900*t149901*t149903*6.0;
                double t149921 = t149904*t149905*t149916;
                double t149922 = t149920+t149921+t149918+t149919+1.0;
                double t149925 = gcab*t149902;
                double t149926 = gamma_aa[index]*t149900*t149901;
                double t149923 = t149925+t149926;
                double t149924 = 1.0/(t149915*t149915);
                double t149927 = 1.0/(t149911*t149911);
                double t149928 = gcab*t149902*(3.0/2.0);
                double t149929 = gamma_aa[index]*t149900*t149901*3.0;
                double t149930 = gcab*t149900*t149903*t149906*(3.0/2.0);
                double t149931 = t149930+t149928+t149929;
                double t149936 = 1.0/(t149922*t149922);
                double t149937 = pow(2.0,1.0/3.0);
                double t149938 = t149937*2.0;
                double t149939 = t149938-2.0;
                double t149940 = two_13*2.0;
                double t149941 = t149940-2.0;
                double t149942 = 1.0/t149941;
                double t149943 = 1.0/c0f;
                double t149944 = b1f*t149881;
                double t149945 = b3f*t149882;
                double t149946 = b4f*t149883*t149884;
                double t149947 = b2f*c*t149879;
                double t149948 = t149944+t149945+t149946+t149947;
                double t149949 = 1.0/t149948;
                double t149950 = t149943*t149949*(1.0/2.0);
                double t149951 = t149950+1.0;
                double t149952 = log(t149951);
                double t149953 = a1f*c*t149879;
                double t149954 = t149953+1.0;
                double t149955 = c0f*t149952*t149954*2.0;
                double t149956 = c0p*t149894*t149896*2.0;
                double t149957 = gcaa*gcaa;
                double t149958 = t149957*t149957;
                double t149959 = gamma_aa[index]*gcaa*t149902;
                double t149960 = t149959+1.0;
                double t149961 = gamma_aa[index]*gcaa*t149902*2.0;
                double t149962 = t149901*t149903*t149957;
                double t149963 = t149961+t149962+1.0;
                double t149964 = gamma_aa[index]*gcaa*t149902*3.0;
                double t149965 = gamma_aa[index]*gcaa*t149903*t149906*t149957;
                double t149966 = t149901*t149903*t149957*3.0;
                double t149967 = t149964+t149965+t149966+1.0;
                double t149983 = gcaa*t149902*4.0;
                double t149984 = gamma_aa[index]*t149901*t149957*1.2E1;
                double t149985 = gcaa*t149903*t149906*t149957*1.2E1;
                double t149986 = gamma_aa[index]*t149903*t149905*t149958*4.0;
                double t149968 = t149983+t149984+t149985+t149986;
                double t149969 = gamma_aa[index]*gcaa*t149902*4.0;
                double t149970 = gamma_aa[index]*gcaa*t149903*t149906*t149957*4.0;
                double t149971 = t149901*t149903*t149957*6.0;
                double t149972 = t149905*t149916*t149958;
                double t149973 = t149970+t149971+t149972+t149969+1.0;
                double t149976 = gcaa*t149902*2.0;
                double t149977 = gamma_aa[index]*t149901*t149957*2.0;
                double t149974 = t149976+t149977;
                double t149975 = 1.0/(t149967*t149967);
                double t149978 = 1.0/(t149963*t149963);
                double t149979 = gcaa*t149902*3.0;
                double t149980 = gamma_aa[index]*t149901*t149957*6.0;
                double t149981 = gcaa*t149903*t149906*t149957*3.0;
                double t149982 = t149980+t149981+t149979;
                double t149987 = 1.0/(t149973*t149973);
                double t149988 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t149989 = 1.0/pow(t149988,1.0/3.0);
                double t149990 = 1.0/(omega*omega);
                double t149991 = pow(t149988,2.0/3.0);
                double t149992 = exp(-t149990*t149991);
                double t149993 = gx*gx;
                double t149994 = t149993*t149993;
                double t149995 = gamma_aa[index]*gx*t149902;
                double t149996 = t149995+1.0;
                double t149997 = gamma_aa[index]*gx*t149902*2.0;
                double t149998 = t149901*t149903*t149993;
                double t149999 = t149997+t149998+1.0;
                double t150000 = gamma_aa[index]*gx*t149902*3.0;
                double t150001 = gamma_aa[index]*gx*t149903*t149906*t149993;
                double t150002 = t149901*t149903*t149993*3.0;
                double t150003 = t150000+t150001+t150002+1.0;
                double t150019 = gx*t149902*4.0;
                double t150020 = gamma_aa[index]*t149901*t149993*1.2E1;
                double t150021 = gx*t149903*t149906*t149993*1.2E1;
                double t150022 = gamma_aa[index]*t149903*t149905*t149994*4.0;
                double t150004 = t150020+t150021+t150022+t150019;
                double t150005 = gamma_aa[index]*gx*t149902*4.0;
                double t150006 = gamma_aa[index]*gx*t149903*t149906*t149993*4.0;
                double t150007 = t149901*t149903*t149993*6.0;
                double t150008 = t149905*t149916*t149994;
                double t150009 = t150005+t150006+t150007+t150008+1.0;
                double t150012 = gx*t149902*2.0;
                double t150013 = gamma_aa[index]*t149901*t149993*2.0;
                double t150010 = t150012+t150013;
                double t150011 = 1.0/(t150003*t150003);
                double t150014 = 1.0/(t149999*t149999);
                double t150015 = gx*t149902*3.0;
                double t150016 = gamma_aa[index]*t149901*t149993*6.0;
                double t150017 = gx*t149903*t149906*t149993*3.0;
                double t150018 = t150015+t150016+t150017;
                double t150023 = 1.0/(t150009*t150009);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t149956+t149942*t149939*(t149955-c0p*t149894*t149896* \
                   2.0))*2.0-c0p*rho_a[index]*log((t149885*(1.0/2.0))/(b1p*sqrt(t149899)+b3p*pow(t149899,3.0/2.0)+b4p* \
                   t149883*1.0/pow(t149897,2.0/3.0)+b2p*c*t149898)+1.0)*(a1p*c*t149898+1.0)*4.0)*((ccab2*t149900*t149901* \
                   (1.0/2.0))/t149911-ccab1*t149900*t149901*1.0/(t149908*t149908)*(1.0/2.0)-ccab2*t149903*t149904*t149905* \
                   t149927*(1.0/2.0)+(ccab4*t149903*t149904*t149905*3.0)/t149922-ccab4*t149904*t149905*t149916*t149936* \
                   (t149900*t149901*3.0+t149903*t149904*t149905*3.0+gamma_aa[index]*gcab*t149900*t149906*6.0)+(ccab3* \
                   gamma_aa[index]*gcab*t149900*t149906*(3.0/2.0))/t149915+ccab1*gamma_aa[index]*gcab*t149900*t149906* \
                   1.0/(t149908*t149908*t149908)*(1.0/2.0)+ccab2*t149900*t149901*1.0/(t149911*t149911*t149911)*t149903* \
                   (t149923*t149923)*2.0+ccab4*t149904*1.0/(t149922*t149922*t149922)*t149905*t149916*(t149917*t149917) \
                   *2.0-ccab2*gamma_aa[index]*t149900*t149901*t149923*t149927*2.0-ccab4*gamma_aa[index]*t149903*t149904* \
                   t149905*t149917*t149936*4.0-ccab3*gcab*t149900*t149903*t149931*t149906*t149924*3.0-ccab3*gamma_aa[index]* \
                   gcab*t149900*t149903*t149906*t149924*(t149900*t149901*(3.0/2.0)+gamma_aa[index]*gcab*t149900*t149906* \
                   (3.0/2.0))+ccab3*gamma_aa[index]*gcab*t149900*t149903*(t149931*t149931)*t149906*1.0/(t149915*t149915* \
                   t149915)*2.0)*4.0+rho_a[index]*(t149956+t149942*t149939*(t149955-t149956))*(ccaa1*t149901*1.0/(t149960* \
                   t149960)*t149957*2.0-(ccaa2*t149901*t149957*2.0)/t149963+ccaa2*t149903*t149905*t149958*t149978*2.0- \
                   (ccaa4*t149903*t149905*t149958*1.2E1)/t149973+ccaa4*t149905*t149916*t149958*t149987*(t149901*t149957* \
                   1.2E1+t149903*t149905*t149958*1.2E1+gamma_aa[index]*gcaa*t149906*t149957*2.4E1)-ccaa1*gamma_aa[index]* \
                   gcaa*t149906*1.0/(t149960*t149960*t149960)*t149957*2.0-(ccaa3*gamma_aa[index]*gcaa*t149906*t149957* \
                   6.0)/t149967-ccaa2*t149901*t149903*1.0/(t149963*t149963*t149963)*(t149974*t149974)*t149957*2.0-ccaa4* \
                   t149905*t149916*1.0/(t149973*t149973*t149973)*t149958*(t149968*t149968)*2.0+ccaa2*gamma_aa[index]* \
                   t149901*t149974*t149957*t149978*4.0+ccaa4*gamma_aa[index]*t149903*t149905*t149958*t149968*t149987* \
                   8.0+ccaa3*gcaa*t149903*t149906*t149982*t149957*t149975*6.0+ccaa3*gamma_aa[index]*gcaa*t149903*t149906* \
                   t149957*t149975*(t149901*t149957*6.0+gamma_aa[index]*gcaa*t149906*t149957*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*t149903*t149906*(t149982*t149982)*t149957*1.0/(t149967*t149967*t149967)*2.0)*2.0+c0*pow(rho_a[index],4.0/ \
                   3.0)*(omega*t149989*(erf(pow(t149988,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t149989*(-t149992+(omega*omega)*1.0/pow(t149988,2.0/3.0)*(t149992-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*(cx1*t149901*t149993*1.0/(t149996*t149996)*2.0-(cx2*t149901*t149993*2.0)/t149999+cx2*t149903* \
                   t149905*t149994*t150014*2.0-(cx4*t149903*t149905*t149994*1.2E1)/t150009+cx4*t149905*t149916*t149994* \
                   t150023*(t149901*t149993*1.2E1+t149903*t149905*t149994*1.2E1+gamma_aa[index]*gx*t149906*t149993*2.4E1) \
                   -cx1*gamma_aa[index]*gx*t149906*t149993*1.0/(t149996*t149996*t149996)*2.0-(cx3*gamma_aa[index]*gx* \
                   t149906*t149993*6.0)/t150003-cx2*t149901*t149903*t149993*1.0/(t149999*t149999*t149999)*(t150010*t150010) \
                   *2.0-cx4*t149905*t149916*t149994*(t150004*t150004)*1.0/(t150009*t150009*t150009)*2.0+cx2*gamma_aa[index]* \
                   t149901*t149993*t150010*t150014*4.0+cx4*gamma_aa[index]*t149903*t149905*t149994*t150004*t150023*8.0+ \
                   cx3*gx*t149903*t149906*t149993*t150011*t150018*6.0+cx3*gamma_aa[index]*gx*t149903*t149906*t149993* \
                   t150011*(t149901*t149993*6.0+gamma_aa[index]*gx*t149906*t149993*6.0)-cx3*gamma_aa[index]*gx*t149903* \
                   t149906*t149993*1.0/(t150003*t150003*t150003)*(t150018*t150018)*2.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wB97X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t143619 = 1.0/pow(rho_a[index],1.0/3.0);
            double t143620 = c*t143619;
            double t143621 = sqrt(t143620);
            double t143622 = pow(t143620,3.0/2.0);
            double t143623 = c*c;
            double t143624 = 1.0/pow(rho_a[index],2.0/3.0);
            double t143625 = 1.0/c0p;
            double t143626 = b1p*t143621;
            double t143627 = b3p*t143622;
            double t143628 = b4p*t143623*t143624;
            double t143629 = b2p*c*t143619;
            double t143630 = t143626+t143627+t143628+t143629;
            double t143631 = 1.0/t143630;
            double t143632 = t143631*t143625*(1.0/2.0);
            double t143633 = t143632+1.0;
            double t143634 = log(t143633);
            double t143635 = a1p*c*t143619;
            double t143636 = t143635+1.0;
            double t143637 = pow(2.0,1.0/3.0);
            double t143638 = t143637*2.0;
            double t143639 = t143638-2.0;
            double t143640 = two_13*2.0;
            double t143641 = t143640-2.0;
            double t143642 = 1.0/t143641;
            double t143643 = 1.0/c0f;
            double t143644 = 1.0/pow(rho_b[index],1.0/3.0);
            double t143645 = c*t143644;
            double t143646 = sqrt(t143645);
            double t143647 = pow(t143645,3.0/2.0);
            double t143648 = 1.0/pow(rho_b[index],2.0/3.0);
            double t143649 = b1p*t143646;
            double t143650 = b3p*t143647;
            double t143651 = b4p*t143623*t143648;
            double t143652 = b2p*c*t143644;
            double t143653 = t143650+t143651+t143652+t143649;
            double t143654 = 1.0/t143653;
            double t143655 = t143625*t143654*(1.0/2.0);
            double t143656 = t143655+1.0;
            double t143657 = log(t143656);
            double t143658 = a1p*c*t143644;
            double t143659 = t143658+1.0;
            double t143660 = c0p*t143657*t143659*2.0;
            double t143661 = rho_a[index]+rho_b[index];
            double t143662 = 1.0/pow(t143661,1.0/3.0);
            double t143663 = c*t143662;
            double t143664 = sqrt(t143663);
            double t143665 = pow(t143663,3.0/2.0);
            double t143666 = 1.0/pow(t143661,2.0/3.0);
            double t143667 = b1p*t143664;
            double t143668 = b3p*t143665;
            double t143669 = b4p*t143623*t143666;
            double t143670 = b2p*c*t143662;
            double t143671 = t143670+t143667+t143668+t143669;
            double t143672 = 1.0/t143671;
            double t143673 = t143625*t143672*(1.0/2.0);
            double t143674 = t143673+1.0;
            double t143675 = log(t143674);
            double t143676 = a1p*c*t143662;
            double t143677 = t143676+1.0;
            double t143678 = c0p*t143675*t143677*2.0;
            double t143679 = rho_a[index]-rho_b[index];
            double t143680 = t143679*t143679;
            double t143681 = 1.0/t143661;
            double t143682 = t143681*t143679;
            double t143683 = 1.0/(t143661*t143661*t143661*t143661);
            double t143684 = t143680*t143680;
            double t143685 = t143682+1.0;
            double t143686 = pow(t143685,4.0/3.0);
            double t143687 = -t143682+1.0;
            double t143688 = pow(t143687,4.0/3.0);
            double t143689 = t143686+t143688-2.0;
            double t143692 = 1.0/pow(rho_a[index],8.0/3.0);
            double t143693 = gamma_aa[index]*t143692*(1.0/2.0);
            double t143694 = 1.0/pow(rho_b[index],8.0/3.0);
            double t143695 = gamma_bb[index]*t143694*(1.0/2.0);
            double t143690 = t143693+t143695;
            double t143691 = gcab*gcab;
            double t143696 = t143690*t143690;
            double t143697 = t143691*t143691;
            double t143698 = t143696*t143696;
            double t143699 = c0p*t143634*t143636*2.0;
            double t143700 = b1f*t143621;
            double t143701 = b3f*t143622;
            double t143702 = b4f*t143623*t143624;
            double t143703 = b2f*c*t143619;
            double t143704 = t143700+t143701+t143702+t143703;
            double t143705 = 1.0/t143704;
            double t143706 = t143705*t143643*(1.0/2.0);
            double t143707 = t143706+1.0;
            double t143708 = log(t143707);
            double t143709 = a1f*c*t143619;
            double t143710 = t143709+1.0;
            double t143711 = t143699-c0f*t143710*t143708*2.0;
            double t143712 = t143699-t143711*t143642*t143639;
            double t143713 = gamma_aa[index]*gamma_aa[index];
            double t143714 = gcaa*gcaa;
            double t143715 = t143713*t143713;
            double t143716 = t143714*t143714;
            double t143717 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t143718 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t143719 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t143720 = b1f*t143646;
            double t143721 = b3f*t143647;
            double t143722 = b4f*t143623*t143648;
            double t143723 = b2f*c*t143644;
            double t143724 = t143720+t143721+t143722+t143723;
            double t143725 = 1.0/t143724;
            double t143726 = t143643*t143725*(1.0/2.0);
            double t143727 = t143726+1.0;
            double t143728 = log(t143727);
            double t143729 = a1f*c*t143644;
            double t143730 = t143729+1.0;
            double t143731 = t143660-c0f*t143730*t143728*2.0;
            double t143732 = t143660-t143731*t143642*t143639;
            double t143733 = gamma_bb[index]*gamma_bb[index];
            double t143734 = t143733*t143733;
            double t143735 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t143736 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t143737 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t143738 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t143739 = 1.0/pow(t143738,1.0/3.0);
            double t143740 = 1.0/(omega*omega);
            double t143741 = pow(t143738,2.0/3.0);
            double t143742 = exp(-t143740*t143741);
            double t143743 = gx*gx;
            double t143744 = t143743*t143743;
            double t143745 = 1.0/omega;
            double t143746 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t143747 = 1.0/pow(t143746,1.0/3.0);
            double t143748 = omega*omega;
            double t143749 = pow(t143746,2.0/3.0);
            double t143750 = exp(-t143740*t143749);
            functional_[index] = (rho_a[index]*t143712+rho_b[index]*t143732-t143661*(t143678-t143642*t143683* \
               t143684*t143689*(t143678-c0f*log((t143643*(1.0/2.0))/(b1f*t143664+b3f*t143665+b2f*c*t143662+b4f*t143623* \
               t143666)+1.0)*(a1f*c*t143662+1.0)*2.0)+(Aa*t143642*t143689*log((1.0/2.0)/(Aa*(b1a*t143664+b3a*t143665+ \
               b2a*c*t143662+b4a*t143623*t143666))+1.0)*(t143683*t143684-1.0)*(a1a*c*t143662+1.0)*2.0)/d2fz0))*(ccab0+ \
               (ccab4*t143697*t143698)/(gcab*t143690*4.0+t143691*t143696*6.0+t143697*t143698+gcab*t143690*t143691* \
               t143696*4.0+1.0)+(ccab1*gcab*t143690)/(gcab*t143690+1.0)+(ccab2*t143691*t143696)/(gcab*t143690*2.0+ \
               t143691*t143696+1.0)+(ccab3*gcab*t143690*t143691*t143696)/(gcab*t143690*3.0+t143691*t143696*3.0+gcab* \
               t143690*t143691*t143696+1.0))-rho_a[index]*t143712*(ccaa0+(ccaa2*t143713*t143714*t143719)/(gamma_aa[index]* \
               gcaa*t143692*2.0+t143713*t143714*t143719+1.0)+(ccaa1*gamma_aa[index]*gcaa*t143692)/(gamma_aa[index]* \
               gcaa*t143692+1.0)+(ccaa4*t143715*t143716*t143717)/(gamma_aa[index]*gcaa*t143692*4.0+t143713*t143714* \
               t143719*6.0+t143715*t143716*t143717+gamma_aa[index]*gcaa*t143713*t143714*t143718*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t143713*t143714*t143718)/(gamma_aa[index]*gcaa*t143692*3.0+t143713*t143714*t143719*3.0+gamma_aa[index]* \
               gcaa*t143713*t143714*t143718+1.0))-rho_b[index]*t143732*(ccaa0+(ccaa2*t143714*t143733*t143737)/(gamma_bb[index]* \
               gcaa*t143694*2.0+t143714*t143733*t143737+1.0)+(ccaa1*gamma_bb[index]*gcaa*t143694)/(gamma_bb[index]* \
               gcaa*t143694+1.0)+(ccaa4*t143716*t143734*t143735)/(gamma_bb[index]*gcaa*t143694*4.0+t143714*t143733* \
               t143737*6.0+t143716*t143734*t143735+gamma_bb[index]*gcaa*t143714*t143733*t143736*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t143714*t143733*t143736)/(gamma_bb[index]*gcaa*t143694*3.0+t143714*t143733*t143737*3.0+gamma_bb[index]* \
               gcaa*t143714*t143733*t143736+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t143739*(erf(t143745*pow(t143738,1.0/ \
               3.0))*(3.991211251234741E15/2.251799813685248E15)-omega*t143739*(-t143742+1.0/pow(t143738,2.0/3.0) \
               *t143748*(t143742-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t143713*t143743*t143719)/(gamma_aa[index]* \
               gx*t143692*2.0+t143713*t143743*t143719+1.0)+(cx1*gamma_aa[index]*gx*t143692)/(gamma_aa[index]*gx*t143692+ \
               1.0)+(cx4*t143715*t143717*t143744)/(gamma_aa[index]*gx*t143692*4.0+t143713*t143743*t143719*6.0+t143715* \
               t143717*t143744+gamma_aa[index]*gx*t143713*t143743*t143718*4.0+1.0)+(cx3*gamma_aa[index]*gx*t143713* \
               t143743*t143718)/(gamma_aa[index]*gx*t143692*3.0+t143713*t143743*t143719*3.0+gamma_aa[index]*gx*t143713* \
               t143743*t143718+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t143747*(erf(t143745*pow(t143746,1.0/3.0) \
               )*(3.991211251234741E15/2.251799813685248E15)-omega*t143747*(-t143750+1.0/pow(t143746,2.0/3.0)*t143748* \
               (t143750-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t143733*t143743*t143737)/(gamma_bb[index]* \
               gx*t143694*2.0+t143733*t143743*t143737+1.0)+(cx1*gamma_bb[index]*gx*t143694)/(gamma_bb[index]*gx*t143694+ \
               1.0)+(cx4*t143734*t143735*t143744)/(gamma_bb[index]*gx*t143694*4.0+t143733*t143743*t143737*6.0+t143734* \
               t143735*t143744+gamma_bb[index]*gx*t143733*t143743*t143736*4.0+1.0)+(cx3*gamma_bb[index]*gx*t143733* \
               t143743*t143736)/(gamma_bb[index]*gx*t143694*3.0+t143733*t143743*t143737*3.0+gamma_bb[index]*gx*t143733* \
               t143743*t143736+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t148118 = 1.0/pow(rho_a[index],1.0/3.0);
            double t148119 = c*t148118;
            double t148120 = sqrt(t148119);
            double t148121 = pow(t148119,3.0/2.0);
            double t148122 = c*c;
            double t148123 = 1.0/pow(rho_a[index],2.0/3.0);
            double t148124 = 1.0/c0p;
            double t148125 = b1p*t148120;
            double t148126 = b3p*t148121;
            double t148127 = b4p*t148122*t148123;
            double t148128 = b2p*c*t148118;
            double t148129 = t148125+t148126+t148127+t148128;
            double t148130 = 1.0/t148129;
            double t148131 = t148130*t148124*(1.0/2.0);
            double t148132 = t148131+1.0;
            double t148133 = log(t148132);
            double t148134 = a1p*c*t148118;
            double t148135 = t148134+1.0;
            double t148136 = gamma_aa[index]*gamma_aa[index];
            double t148137 = gcaa*gcaa;
            double t148138 = t148136*t148136;
            double t148139 = t148137*t148137;
            double t148140 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t148141 = 1.0/pow(rho_a[index],8.0/3.0);
            double t148142 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t148143 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t148144 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t148145 = 1.0/pow(t148144,1.0/3.0);
            double t148146 = 1.0/(omega*omega);
            double t148147 = pow(t148144,2.0/3.0);
            double t148148 = exp(-t148146*t148147);
            double t148149 = gx*gx;
            double t148150 = t148149*t148149;
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t148120+ \
               b3f*t148121+b2f*c*t148118+b4f*t148122*t148123))+1.0)*(a1f*c*t148118+1.0)*2.0-c0p*t148133*t148135*2.0) \
               )/(two_13*2.0-2.0)+c0p*t148133*t148135*2.0)*(ccaa0+(ccaa2*t148143*t148136*t148137)/(gamma_aa[index]* \
               gcaa*t148141*2.0+t148143*t148136*t148137+1.0)+(ccaa1*gamma_aa[index]*gcaa*t148141)/(gamma_aa[index]* \
               gcaa*t148141+1.0)+(ccaa4*t148140*t148138*t148139)/(gamma_aa[index]*gcaa*t148141*4.0+t148143*t148136* \
               t148137*6.0+t148140*t148138*t148139+gamma_aa[index]*gcaa*t148142*t148136*t148137*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t148142*t148136*t148137)/(gamma_aa[index]*gcaa*t148141*3.0+t148143*t148136*t148137*3.0+gamma_aa[index]* \
               gcaa*t148142*t148136*t148137+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t148145*(erf(pow(t148144,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t148145*(-t148148+(omega*omega)*1.0/ \
               pow(t148144,2.0/3.0)*(t148148-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t148143*t148136*t148149) \
               /(gamma_aa[index]*gx*t148141*2.0+t148143*t148136*t148149+1.0)+(cx1*gamma_aa[index]*gx*t148141)/(gamma_aa[index]* \
               gx*t148141+1.0)+(cx4*t148140*t148150*t148138)/(gamma_aa[index]*gx*t148141*4.0+t148140*t148150*t148138+ \
               t148143*t148136*t148149*6.0+gamma_aa[index]*gx*t148142*t148136*t148149*4.0+1.0)+(cx3*gamma_aa[index]* \
               gx*t148142*t148136*t148149)/(gamma_aa[index]*gx*t148141*3.0+t148143*t148136*t148149*3.0+gamma_aa[index]* \
               gx*t148142*t148136*t148149+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t147363 = 1.0/pow(rho_b[index],1.0/3.0);
            double t147364 = c*t147363;
            double t147365 = sqrt(t147364);
            double t147366 = pow(t147364,3.0/2.0);
            double t147367 = c*c;
            double t147368 = 1.0/pow(rho_b[index],2.0/3.0);
            double t147369 = 1.0/c0p;
            double t147370 = b1p*t147365;
            double t147371 = b3p*t147366;
            double t147372 = b4p*t147367*t147368;
            double t147373 = b2p*c*t147363;
            double t147374 = t147370+t147371+t147372+t147373;
            double t147375 = 1.0/t147374;
            double t147376 = t147375*t147369*(1.0/2.0);
            double t147377 = t147376+1.0;
            double t147378 = log(t147377);
            double t147379 = a1p*c*t147363;
            double t147380 = t147379+1.0;
            double t147381 = gamma_bb[index]*gamma_bb[index];
            double t147382 = gcaa*gcaa;
            double t147383 = t147381*t147381;
            double t147384 = t147382*t147382;
            double t147385 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t147386 = 1.0/pow(rho_b[index],8.0/3.0);
            double t147387 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t147388 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t147389 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t147390 = 1.0/pow(t147389,1.0/3.0);
            double t147391 = 1.0/(omega*omega);
            double t147392 = pow(t147389,2.0/3.0);
            double t147393 = exp(-t147391*t147392);
            double t147394 = gx*gx;
            double t147395 = t147394*t147394;
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t147365+ \
               b3f*t147366+b2f*c*t147363+b4f*t147367*t147368))+1.0)*(a1f*c*t147363+1.0)*2.0-c0p*t147380*t147378*2.0) \
               )/(two_13*2.0-2.0)+c0p*t147380*t147378*2.0)*(ccaa0+(ccaa2*t147381*t147382*t147388)/(gamma_bb[index]* \
               gcaa*t147386*2.0+t147381*t147382*t147388+1.0)+(ccaa1*gamma_bb[index]*gcaa*t147386)/(gamma_bb[index]* \
               gcaa*t147386+1.0)+(ccaa4*t147383*t147384*t147385)/(gamma_bb[index]*gcaa*t147386*4.0+t147381*t147382* \
               t147388*6.0+t147383*t147384*t147385+gamma_bb[index]*gcaa*t147381*t147382*t147387*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t147381*t147382*t147387)/(gamma_bb[index]*gcaa*t147386*3.0+t147381*t147382*t147388*3.0+gamma_bb[index]* \
               gcaa*t147381*t147382*t147387+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t147390*(erf(pow(t147389,1.0/ \
               3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t147390*(-t147393+(omega*omega)*1.0/ \
               pow(t147389,2.0/3.0)*(t147393-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx0+(cx2*t147381*t147394*t147388) \
               /(gamma_bb[index]*gx*t147386*2.0+t147381*t147394*t147388+1.0)+(cx1*gamma_bb[index]*gx*t147386)/(gamma_bb[index]* \
               gx*t147386+1.0)+(cx4*t147383*t147385*t147395)/(gamma_bb[index]*gx*t147386*4.0+t147381*t147394*t147388* \
               6.0+t147383*t147385*t147395+gamma_bb[index]*gx*t147381*t147394*t147387*4.0+1.0)+(cx3*gamma_bb[index]* \
               gx*t147381*t147394*t147387)/(gamma_bb[index]*gx*t147386*3.0+t147381*t147394*t147388*3.0+gamma_bb[index]* \
               gx*t147381*t147394*t147387+1.0));
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t143752 = 1.0/pow(rho_a[index],1.0/3.0);
            double t143753 = c*t143752;
            double t143754 = sqrt(t143753);
            double t143755 = pow(t143753,3.0/2.0);
            double t143756 = c*c;
            double t143757 = 1.0/pow(rho_a[index],2.0/3.0);
            double t143758 = 1.0/c0p;
            double t143759 = b1p*t143754;
            double t143760 = b3p*t143755;
            double t143761 = b4p*t143756*t143757;
            double t143762 = b2p*c*t143752;
            double t143763 = t143760+t143761+t143762+t143759;
            double t143764 = 1.0/t143763;
            double t143765 = t143764*t143758*(1.0/2.0);
            double t143766 = t143765+1.0;
            double t143767 = log(t143766);
            double t143768 = a1p*c*t143752;
            double t143769 = t143768+1.0;
            double t143770 = gamma_aa[index]*gamma_aa[index];
            double t143771 = gcaa*gcaa;
            double t143772 = t143770*t143770;
            double t143773 = t143771*t143771;
            double t143774 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t143775 = 1.0/pow(rho_a[index],8.0/3.0);
            double t143776 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t143777 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t143778 = pow(2.0,1.0/3.0);
            double t143779 = t143778*2.0;
            double t143780 = t143779-2.0;
            double t143781 = two_13*2.0;
            double t143782 = t143781-2.0;
            double t143783 = 1.0/t143782;
            double t143784 = 1.0/c0f;
            double t143785 = b1f*t143754;
            double t143786 = b3f*t143755;
            double t143787 = b4f*t143756*t143757;
            double t143788 = b2f*c*t143752;
            double t143789 = t143785+t143786+t143787+t143788;
            double t143790 = 1.0/t143789;
            double t143791 = t143790*t143784*(1.0/2.0);
            double t143792 = t143791+1.0;
            double t143793 = log(t143792);
            double t143794 = a1f*c*t143752;
            double t143795 = t143794+1.0;
            double t143796 = c0f*t143793*t143795*2.0;
            double t143797 = c0p*t143767*t143769*2.0;
            double t143798 = 1.0/pow(rho_b[index],1.0/3.0);
            double t143799 = c*t143798;
            double t143800 = sqrt(t143799);
            double t143801 = pow(t143799,3.0/2.0);
            double t143802 = 1.0/pow(rho_b[index],2.0/3.0);
            double t143803 = b1p*t143800;
            double t143804 = b3p*t143801;
            double t143805 = b4p*t143802*t143756;
            double t143806 = b2p*c*t143798;
            double t143807 = t143803+t143804+t143805+t143806;
            double t143808 = 1.0/t143807;
            double t143809 = t143808*t143758*(1.0/2.0);
            double t143810 = t143809+1.0;
            double t143811 = log(t143810);
            double t143812 = a1p*c*t143798;
            double t143813 = t143812+1.0;
            double t143814 = c0p*t143811*t143813*2.0;
            double t143815 = rho_a[index]+rho_b[index];
            double t143816 = 1.0/pow(t143815,1.0/3.0);
            double t143817 = c*t143816;
            double t143818 = sqrt(t143817);
            double t143819 = pow(t143817,3.0/2.0);
            double t143820 = 1.0/pow(t143815,2.0/3.0);
            double t143821 = b1p*t143818;
            double t143822 = b3p*t143819;
            double t143823 = b4p*t143820*t143756;
            double t143824 = b2p*c*t143816;
            double t143825 = t143821+t143822+t143823+t143824;
            double t143826 = 1.0/t143825;
            double t143827 = t143826*t143758*(1.0/2.0);
            double t143828 = t143827+1.0;
            double t143829 = log(t143828);
            double t143830 = a1p*c*t143816;
            double t143831 = t143830+1.0;
            double t143832 = c0p*t143831*t143829*2.0;
            double t143833 = rho_a[index]-rho_b[index];
            double t143834 = t143833*t143833;
            double t143835 = 1.0/t143815;
            double t143836 = t143833*t143835;
            double t143837 = 1.0/(t143815*t143815*t143815*t143815);
            double t143838 = t143834*t143834;
            double t143839 = t143836+1.0;
            double t143840 = pow(t143839,4.0/3.0);
            double t143841 = -t143836+1.0;
            double t143842 = pow(t143841,4.0/3.0);
            double t143843 = t143840+t143842-2.0;
            double t143844 = gcab*gcab;
            double t143848 = gamma_aa[index]*t143775*(1.0/2.0);
            double t143849 = 1.0/pow(rho_b[index],8.0/3.0);
            double t143850 = gamma_bb[index]*t143849*(1.0/2.0);
            double t143845 = t143850+t143848;
            double t143846 = t143845*t143845;
            double t143847 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t143851 = t143844*t143844;
            double t143852 = t143846*t143846;
            double t143853 = t143844*t143846*6.0;
            double t143854 = gcab*t143844*t143845*t143846*4.0;
            double t143855 = t143851*t143852;
            double t143856 = gcab*t143845*4.0;
            double t143857 = t143853+t143854+t143855+t143856+1.0;
            double t143858 = gcab*t143845;
            double t143859 = t143858+1.0;
            double t143860 = t143844*t143846;
            double t143861 = gcab*t143845*2.0;
            double t143862 = t143860+t143861+1.0;
            double t143863 = t143844*t143846*3.0;
            double t143864 = gcab*t143844*t143845*t143846;
            double t143865 = gcab*t143845*3.0;
            double t143866 = t143863+t143864+t143865+1.0;
            double t143867 = 1.0/t143862;
            double t143868 = 1.0/t143866;
            double t143869 = 1.0/t143859;
            double t143870 = 1.0/t143857;
            double t143871 = 1.0/pow(t143815,4.0/3.0);
            double t143872 = b1f*t143818;
            double t143873 = b3f*t143819;
            double t143874 = b4f*t143820*t143756;
            double t143875 = b2f*c*t143816;
            double t143876 = t143872+t143873+t143874+t143875;
            double t143877 = 1.0/t143876;
            double t143878 = t143784*t143877*(1.0/2.0);
            double t143879 = t143878+1.0;
            double t143880 = log(t143879);
            double t143881 = a1f*c*t143816;
            double t143882 = t143881+1.0;
            double t143884 = c0f*t143880*t143882*2.0;
            double t143883 = t143832-t143884;
            double t143885 = 1.0/(t143815*t143815);
            double t143912 = t143833*t143885;
            double t143886 = -t143912+t143835;
            double t143887 = 1.0/pow(t143815,5.0/3.0);
            double t143888 = 1.0/sqrt(t143817);
            double t143889 = 1.0/t143828;
            double t143890 = 1.0/(t143825*t143825);
            double t143891 = b4p*t143756*t143887*(2.0/3.0);
            double t143892 = b2p*c*t143871*(1.0/3.0);
            double t143893 = b1p*c*t143871*t143888*(1.0/6.0);
            double t143894 = b3p*c*t143871*t143818*(1.0/2.0);
            double t143895 = t143891+t143892+t143893+t143894;
            double t143896 = t143831*t143890*t143895*t143889;
            double t143897 = 1.0/d2fz0;
            double t143898 = 1.0/Aa;
            double t143899 = b1a*t143818;
            double t143900 = b3a*t143819;
            double t143901 = b4a*t143820*t143756;
            double t143902 = b2a*c*t143816;
            double t143903 = t143900+t143901+t143902+t143899;
            double t143904 = 1.0/t143903;
            double t143905 = t143904*t143898*(1.0/2.0);
            double t143906 = t143905+1.0;
            double t143907 = log(t143906);
            double t143908 = a1a*c*t143816;
            double t143909 = t143908+1.0;
            double t143910 = 1.0/(t143815*t143815*t143815*t143815*t143815);
            double t143911 = pow(t143839,1.0/3.0);
            double t143913 = t143911*t143886*(4.0/3.0);
            double t143914 = pow(t143841,1.0/3.0);
            double t143915 = t143913-t143914*t143886*(4.0/3.0);
            double t143916 = t143837*t143838;
            double t143917 = t143916-1.0;
            double t143918 = 1.0/pow(rho_a[index],4.0/3.0);
            double t143919 = 1.0/pow(rho_a[index],5.0/3.0);
            double t143920 = 1.0/sqrt(t143753);
            double t143921 = 1.0/t143766;
            double t143922 = 1.0/(t143763*t143763);
            double t143923 = b4p*t143756*t143919*(2.0/3.0);
            double t143924 = b2p*c*t143918*(1.0/3.0);
            double t143925 = b1p*c*t143920*t143918*(1.0/6.0);
            double t143926 = b3p*c*t143754*t143918*(1.0/2.0);
            double t143927 = t143923+t143924+t143925+t143926;
            double t143928 = t143921*t143922*t143927*t143769;
            double t143929 = t143796-t143797;
            double t143930 = t143780*t143783*t143929;
            double t143931 = Aa*t143843*t143907*t143917*t143783*t143909*t143897*2.0;
            double t143932 = t143930+t143797;
            double t143933 = gamma_aa[index]*gcaa*t143775*4.0;
            double t143934 = gamma_aa[index]*gcaa*t143770*t143771*t143776*4.0;
            double t143935 = t143770*t143771*t143777*6.0;
            double t143936 = t143772*t143773*t143774;
            double t143937 = t143933+t143934+t143935+t143936+1.0;
            double t143938 = 1.0/t143937;
            double t143939 = gamma_aa[index]*gcaa*t143775;
            double t143940 = t143939+1.0;
            double t143941 = 1.0/t143940;
            double t143942 = gamma_aa[index]*gcaa*t143775*3.0;
            double t143943 = gamma_aa[index]*gcaa*t143770*t143771*t143776;
            double t143944 = t143770*t143771*t143777*3.0;
            double t143945 = t143942+t143943+t143944+1.0;
            double t143946 = 1.0/t143945;
            double t143947 = gamma_aa[index]*gcaa*t143775*2.0;
            double t143948 = t143770*t143771*t143777;
            double t143949 = t143947+t143948+1.0;
            double t143950 = 1.0/t143949;
            double t143951 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t143952 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t143953 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t143954 = 1.0/t143792;
            double t143955 = 1.0/(t143789*t143789);
            double t143956 = b4f*t143756*t143919*(2.0/3.0);
            double t143957 = b2f*c*t143918*(1.0/3.0);
            double t143958 = b1f*c*t143920*t143918*(1.0/6.0);
            double t143959 = b3f*c*t143754*t143918*(1.0/2.0);
            double t143960 = t143956+t143957+t143958+t143959;
            double t143961 = a1f*c*c0f*t143918*t143793*(2.0/3.0);
            double t143962 = a1p*c*c0p*t143918*t143767*(2.0/3.0);
            double t143963 = ccaa4*t143772*t143773*t143774*t143938;
            double t143964 = ccaa1*gamma_aa[index]*gcaa*t143941*t143775;
            double t143965 = ccaa3*gamma_aa[index]*gcaa*t143770*t143771*t143946*t143776;
            double t143966 = ccaa2*t143770*t143950*t143771*t143777;
            double t143967 = ccaa0+t143963+t143964+t143965+t143966;
            double t143968 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t143969 = 1.0/(omega*omega);
            double t143970 = pow(t143968,2.0/3.0);
            double t143973 = t143970*t143969;
            double t143971 = exp(-t143973);
            double t143972 = 1.0/pow(t143968,1.0/3.0);
            double t143974 = omega*omega;
            double t143975 = t143971-1.0;
            double t143976 = 1.0/pow(t143968,2.0/3.0);
            double t143977 = 1.0/pow(t143968,4.0/3.0);
            double t143978 = 1.0/omega;
            double t143979 = t143974*t143975*t143976*(1.0/2.0);
            double t143980 = -t143971+t143979+3.0/2.0;
            double t143981 = gx*gx;
            double t143982 = t143981*t143981;
            double t143983 = pow(rho_a[index],4.0/3.0);
            double t143984 = pow(t143968,1.0/3.0);
            double t143985 = t143984*t143978;
            double t143986 = erf(t143985);
            double t143987 = t143986*(3.991211251234741E15/2.251799813685248E15);
            double t144007 = omega*t143980*t143972;
            double t143988 = -t144007+t143987;
            double t143989 = gamma_aa[index]*gx*t143775*4.0;
            double t143990 = gamma_aa[index]*gx*t143770*t143981*t143776*4.0;
            double t143991 = t143770*t143981*t143777*6.0;
            double t143992 = t143772*t143774*t143982;
            double t143993 = t143990+t143991+t143992+t143989+1.0;
            double t143994 = 1.0/t143993;
            double t143995 = gamma_aa[index]*gx*t143775;
            double t143996 = t143995+1.0;
            double t143997 = 1.0/t143996;
            double t143998 = gamma_aa[index]*gx*t143775*3.0;
            double t143999 = gamma_aa[index]*gx*t143770*t143981*t143776;
            double t144000 = t143770*t143981*t143777*3.0;
            double t144001 = t144000+t143998+t143999+1.0;
            double t144002 = 1.0/t144001;
            double t144003 = gamma_aa[index]*gx*t143775*2.0;
            double t144004 = t143770*t143981*t143777;
            double t144005 = t144003+t144004+1.0;
            double t144006 = 1.0/t144005;
            double t144008 = omega*t143972*t143988*(4.0/3.0);
            double t144009 = t144008-1.0;
            double t144010 = cx4*t143772*t143774*t143982*t143994;
            double t144011 = cx1*gamma_aa[index]*gx*t143775*t143997;
            double t144012 = cx3*gamma_aa[index]*gx*t144002*t143770*t143981*t143776;
            double t144013 = cx2*t144006*t143770*t143981*t143777;
            double t144014 = cx0+t144010+t144011+t144012+t144013;
            v_rho_a_[index] = (ccab0+ccab1*gcab*t143845*t143869+ccab4*t143851*t143852*t143870+ccab2*t143844*t143846* \
               t143867+ccab3*gcab*t143844*t143845*t143846*t143868)*(t143930-t143832-t143931+t143797-rho_a[index]* \
               (t143962-t143928+t143780*t143783*(t143961+t143928-t143960*t143954*t143955*t143795-a1p*c*c0p*t143918* \
               t143767*(2.0/3.0)))+t143815*(-t143896+t143843*t143783*t143837*t143838*(t143896-(t143882*1.0/(t143876* \
               t143876)*(b2f*c*t143871*(1.0/3.0)+b4f*t143756*t143887*(2.0/3.0)+b1f*c*t143871*t143888*(1.0/6.0)+b3f* \
               c*t143871*t143818*(1.0/2.0)))/t143879+a1f*c*c0f*t143871*t143880*(2.0/3.0)-a1p*c*c0p*t143871*t143829* \
               (2.0/3.0))+a1p*c*c0p*t143871*t143829*(2.0/3.0)-t143910*t143843*t143783*t143838*t143883*4.0+t143915* \
               t143783*t143837*t143838*t143883+t143833*t143834*t143843*t143783*t143837*t143883*4.0+Aa*t143843*t143907* \
               t143783*t143909*t143897*(t143910*t143838*4.0-t143833*t143834*t143837*4.0)*2.0-Aa*t143915*t143907*t143917* \
               t143783*t143909*t143897*2.0-(1.0/(t143903*t143903)*t143843*t143917*t143783*t143909*t143897*(b2a*c* \
               t143871*(1.0/3.0)+b4a*t143756*t143887*(2.0/3.0)+b1a*c*t143871*t143888*(1.0/6.0)+b3a*c*t143871*t143818* \
               (1.0/2.0)))/t143906+Aa*a1a*c*t143843*t143871*t143907*t143917*t143783*t143897*(2.0/3.0))+t143843*t143783* \
               t143837*t143838*t143883)-t143967*(t143797+t143780*t143783*(t143796-c0p*t143767*t143769*2.0))-(rho_a[index]* \
               t143932+rho_b[index]*(t143814-t143780*t143783*(t143814-c0f*log((t143784*(1.0/2.0))/(b1f*t143800+b3f* \
               t143801+b2f*c*t143798+b4f*t143802*t143756)+1.0)*(a1f*c*t143798+1.0)*2.0))-t143815*(t143832+t143931- \
               t143843*t143783*t143837*t143838*t143883))*(ccab1*gamma_aa[index]*gcab*t143847*t143869*(4.0/3.0)-ccab2* \
               t143844*1.0/(t143862*t143862)*t143846*(gamma_aa[index]*gcab*t143847*(8.0/3.0)+gamma_aa[index]*t143844* \
               t143845*t143847*(8.0/3.0))-ccab4*t143851*t143852*1.0/(t143857*t143857)*(gamma_aa[index]*gcab*t143847* \
               (1.6E1/3.0)+gamma_aa[index]*t143844*t143845*t143847*1.6E1+gamma_aa[index]*gcab*t143844*t143846*t143847* \
               1.6E1+gamma_aa[index]*t143851*t143845*t143846*t143847*(1.6E1/3.0))-ccab1*gamma_aa[index]*t143844*t143845* \
               t143847*1.0/(t143859*t143859)*(4.0/3.0)+ccab2*gamma_aa[index]*t143844*t143845*t143847*t143867*(8.0/ \
               3.0)-ccab3*gcab*t143844*t143845*t143846*1.0/(t143866*t143866)*(gamma_aa[index]*gcab*t143847*4.0+gamma_aa[index]* \
               t143844*t143845*t143847*8.0+gamma_aa[index]*gcab*t143844*t143846*t143847*4.0)+ccab3*gamma_aa[index]* \
               gcab*t143844*t143846*t143847*t143868*4.0+ccab4*gamma_aa[index]*t143851*t143870*t143845*t143846*t143847* \
               (1.6E1/3.0))+rho_a[index]*t143932*(ccaa1*gamma_aa[index]*gcaa*t143941*t143847*(8.0/3.0)+ccaa2*t143770* \
               t143950*t143771*t143951*(1.6E1/3.0)+ccaa4*t143772*t143773*t143953*t143938*(3.2E1/3.0)-ccaa1*1.0/(t143940* \
               t143940)*t143770*t143771*t143951*(8.0/3.0)-ccaa2*t143770*t143771*t143777*1.0/(t143949*t143949)*(gamma_aa[index]* \
               gcaa*t143847*(1.6E1/3.0)+t143770*t143771*t143951*(1.6E1/3.0))-ccaa4*t143772*t143773*t143774*1.0/(t143937* \
               t143937)*(gamma_aa[index]*gcaa*t143847*(3.2E1/3.0)+t143770*t143771*t143951*3.2E1+t143772*t143773*t143953* \
               (3.2E1/3.0)+gamma_aa[index]*gcaa*t143770*t143771*t143952*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t143770* \
               t143771*t143952*t143946*8.0-ccaa3*gamma_aa[index]*gcaa*t143770*t143771*1.0/(t143945*t143945)*t143776* \
               (gamma_aa[index]*gcaa*t143847*8.0+t143770*t143771*t143951*1.6E1+gamma_aa[index]*gcaa*t143770*t143771* \
               t143952*8.0))+rho_a[index]*t143967*(t143962-t143928+t143780*t143783*(t143961-t143962+t143928-t143960* \
               t143954*t143955*t143795))-c0*t144014*t143983*(omega*t143972*(omega*t143980*t143977*(2.778046668940015E15/ \
               1.40737488355328E14)+omega*t143972*((t143971*(1.0/3.0))/rho_a[index]+t143974*t143975*1.0/pow(t143968,5.0/ \
               3.0)*(2.778046668940015E15/1.40737488355328E14)-t143971*t143972*t143969*(2.778046668940015E15/7.0368744177664E13) \
               )+1.0/sqrt(3.141592653589793)*t143971*t143976*t143978*(1.108777112152858E31/1.584563250285287E29)) \
               *(4.0/3.0)-omega*t143977*t143988*(2.778046668940015E15/1.05553116266496E14))-c0*pow(rho_a[index],1.0/ \
               3.0)*t144014*t144009*(4.0/3.0)+c0*t144009*t143983*(cx1*gamma_aa[index]*gx*t143847*t143997*(8.0/3.0) \
               +cx2*t144006*t143770*t143951*t143981*(1.6E1/3.0)+cx4*t143772*t143953*t143982*t143994*(3.2E1/3.0)-cx1* \
               t143770*t143951*t143981*1.0/(t143996*t143996)*(8.0/3.0)-cx2*1.0/(t144005*t144005)*t143770*t143981* \
               t143777*(gamma_aa[index]*gx*t143847*(1.6E1/3.0)+t143770*t143951*t143981*(1.6E1/3.0))-cx4*t143772*t143774* \
               t143982*1.0/(t143993*t143993)*(gamma_aa[index]*gx*t143847*(3.2E1/3.0)+t143770*t143951*t143981*3.2E1+ \
               t143772*t143953*t143982*(3.2E1/3.0)+gamma_aa[index]*gx*t143770*t143952*t143981*3.2E1)+cx3*gamma_aa[index]* \
               gx*t144002*t143770*t143952*t143981*8.0-cx3*gamma_aa[index]*gx*1.0/(t144001*t144001)*t143770*t143981* \
               t143776*(gamma_aa[index]*gx*t143847*8.0+t143770*t143951*t143981*1.6E1+gamma_aa[index]*gx*t143770*t143952* \
               t143981*8.0));
        } else if (rho_a[index] > cutoff_) {
            double t148152 = 1.0/pow(rho_a[index],1.0/3.0);
            double t148153 = c*t148152;
            double t148154 = sqrt(t148153);
            double t148155 = pow(t148153,3.0/2.0);
            double t148156 = c*c;
            double t148157 = 1.0/pow(rho_a[index],2.0/3.0);
            double t148158 = 1.0/c0p;
            double t148159 = b1p*t148154;
            double t148160 = b3p*t148155;
            double t148161 = b4p*t148156*t148157;
            double t148162 = b2p*c*t148152;
            double t148163 = t148160+t148161+t148162+t148159;
            double t148164 = 1.0/t148163;
            double t148165 = t148164*t148158*(1.0/2.0);
            double t148166 = t148165+1.0;
            double t148167 = log(t148166);
            double t148168 = a1p*c*t148152;
            double t148169 = t148168+1.0;
            double t148170 = gamma_aa[index]*gamma_aa[index];
            double t148171 = gcaa*gcaa;
            double t148172 = t148170*t148170;
            double t148173 = t148171*t148171;
            double t148174 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t148175 = 1.0/pow(rho_a[index],8.0/3.0);
            double t148176 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t148177 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t148178 = pow(2.0,1.0/3.0);
            double t148179 = t148178*2.0;
            double t148180 = t148179-2.0;
            double t148181 = two_13*2.0;
            double t148182 = t148181-2.0;
            double t148183 = 1.0/t148182;
            double t148184 = 1.0/c0f;
            double t148185 = b1f*t148154;
            double t148186 = b3f*t148155;
            double t148187 = b4f*t148156*t148157;
            double t148188 = b2f*c*t148152;
            double t148189 = t148185+t148186+t148187+t148188;
            double t148190 = 1.0/t148189;
            double t148191 = t148190*t148184*(1.0/2.0);
            double t148192 = t148191+1.0;
            double t148193 = log(t148192);
            double t148194 = a1f*c*t148152;
            double t148195 = t148194+1.0;
            double t148196 = c0f*t148193*t148195*2.0;
            double t148197 = c0p*t148167*t148169*2.0;
            double t148198 = gamma_aa[index]*gcaa*t148175*4.0;
            double t148199 = gamma_aa[index]*gcaa*t148170*t148171*t148176*4.0;
            double t148200 = t148170*t148171*t148177*6.0;
            double t148201 = t148172*t148173*t148174;
            double t148202 = t148200+t148201+t148198+t148199+1.0;
            double t148203 = 1.0/t148202;
            double t148204 = gamma_aa[index]*gcaa*t148175;
            double t148205 = t148204+1.0;
            double t148206 = 1.0/t148205;
            double t148207 = gamma_aa[index]*gcaa*t148175*3.0;
            double t148208 = gamma_aa[index]*gcaa*t148170*t148171*t148176;
            double t148209 = t148170*t148171*t148177*3.0;
            double t148210 = t148207+t148208+t148209+1.0;
            double t148211 = 1.0/t148210;
            double t148212 = gamma_aa[index]*gcaa*t148175*2.0;
            double t148213 = t148170*t148171*t148177;
            double t148214 = t148212+t148213+1.0;
            double t148215 = 1.0/t148214;
            double t148216 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t148217 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t148218 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t148219 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t148220 = 1.0/pow(rho_a[index],4.0/3.0);
            double t148221 = 1.0/pow(rho_a[index],5.0/3.0);
            double t148222 = 1.0/sqrt(t148153);
            double t148223 = 1.0/t148166;
            double t148224 = 1.0/(t148163*t148163);
            double t148225 = b4p*t148221*t148156*(2.0/3.0);
            double t148226 = b2p*c*t148220*(1.0/3.0);
            double t148227 = b1p*c*t148220*t148222*(1.0/6.0);
            double t148228 = b3p*c*t148220*t148154*(1.0/2.0);
            double t148229 = t148225+t148226+t148227+t148228;
            double t148230 = t148223*t148224*t148229*t148169;
            double t148231 = ccaa4*t148203*t148172*t148173*t148174;
            double t148232 = ccaa1*gamma_aa[index]*gcaa*t148206*t148175;
            double t148233 = ccaa3*gamma_aa[index]*gcaa*t148211*t148170*t148171*t148176;
            double t148234 = ccaa2*t148170*t148215*t148171*t148177;
            double t148235 = ccaa0+t148231+t148232+t148233+t148234;
            double t148236 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t148237 = 1.0/(omega*omega);
            double t148238 = pow(t148236,2.0/3.0);
            double t148241 = t148237*t148238;
            double t148239 = exp(-t148241);
            double t148240 = 1.0/pow(t148236,1.0/3.0);
            double t148242 = omega*omega;
            double t148243 = t148239-1.0;
            double t148244 = 1.0/pow(t148236,2.0/3.0);
            double t148245 = 1.0/pow(t148236,4.0/3.0);
            double t148246 = 1.0/omega;
            double t148247 = t148242*t148243*t148244*(1.0/2.0);
            double t148248 = t148247-t148239+3.0/2.0;
            double t148249 = gx*gx;
            double t148250 = t148249*t148249;
            double t148251 = pow(rho_a[index],4.0/3.0);
            double t148252 = pow(t148236,1.0/3.0);
            double t148253 = t148252*t148246;
            double t148254 = erf(t148253);
            double t148255 = t148254*(3.991211251234741E15/2.251799813685248E15);
            double t148275 = omega*t148240*t148248;
            double t148256 = t148255-t148275;
            double t148257 = gamma_aa[index]*gx*t148175*4.0;
            double t148258 = gamma_aa[index]*gx*t148170*t148176*t148249*4.0;
            double t148259 = t148170*t148177*t148249*6.0;
            double t148260 = t148250*t148172*t148174;
            double t148261 = t148260+t148257+t148258+t148259+1.0;
            double t148262 = 1.0/t148261;
            double t148263 = gamma_aa[index]*gx*t148175;
            double t148264 = t148263+1.0;
            double t148265 = 1.0/t148264;
            double t148266 = gamma_aa[index]*gx*t148175*3.0;
            double t148267 = gamma_aa[index]*gx*t148170*t148176*t148249;
            double t148268 = t148170*t148177*t148249*3.0;
            double t148269 = t148266+t148267+t148268+1.0;
            double t148270 = 1.0/t148269;
            double t148271 = gamma_aa[index]*gx*t148175*2.0;
            double t148272 = t148170*t148177*t148249;
            double t148273 = t148271+t148272+1.0;
            double t148274 = 1.0/t148273;
            double t148276 = omega*t148240*t148256*(4.0/3.0);
            double t148277 = t148276-1.0;
            double t148278 = cx4*t148250*t148172*t148262*t148174;
            double t148279 = cx1*gamma_aa[index]*gx*t148175*t148265;
            double t148280 = cx3*gamma_aa[index]*gx*t148170*t148270*t148176*t148249;
            double t148281 = cx2*t148170*t148274*t148177*t148249;
            double t148282 = cx0+t148280+t148281+t148278+t148279;
            v_rho_a_[index] = -t148235*(t148197+t148180*t148183*(t148196-c0p*t148167*t148169*2.0))+rho_a[index]* \
               t148235*(-t148230+t148180*t148183*(t148230-(t148195*1.0/(t148189*t148189)*(b2f*c*t148220*(1.0/3.0) \
               +b4f*t148221*t148156*(2.0/3.0)+b1f*c*t148220*t148222*(1.0/6.0)+b3f*c*t148220*t148154*(1.0/2.0)))/t148192+ \
               a1f*c*c0f*t148220*t148193*(2.0/3.0)-a1p*c*c0p*t148220*t148167*(2.0/3.0))+a1p*c*c0p*t148220*t148167* \
               (2.0/3.0))+rho_a[index]*(t148197+t148180*t148183*(t148196-t148197))*(ccaa1*gamma_aa[index]*gcaa*t148206* \
               t148217*(8.0/3.0)+ccaa2*t148170*t148215*t148171*t148216*(1.6E1/3.0)+ccaa4*t148203*t148172*t148173* \
               t148219*(3.2E1/3.0)-ccaa1*1.0/(t148205*t148205)*t148170*t148171*t148216*(8.0/3.0)-ccaa2*1.0/(t148214* \
               t148214)*t148170*t148171*t148177*(gamma_aa[index]*gcaa*t148217*(1.6E1/3.0)+t148170*t148171*t148216* \
               (1.6E1/3.0))-ccaa4*1.0/(t148202*t148202)*t148172*t148173*t148174*(gamma_aa[index]*gcaa*t148217*(3.2E1/ \
               3.0)+t148170*t148171*t148216*3.2E1+t148172*t148173*t148219*(3.2E1/3.0)+gamma_aa[index]*gcaa*t148170* \
               t148171*t148218*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t148211*t148170*t148171*t148218*8.0-ccaa3*gamma_aa[index]* \
               gcaa*1.0/(t148210*t148210)*t148170*t148171*t148176*(gamma_aa[index]*gcaa*t148217*8.0+t148170*t148171* \
               t148216*1.6E1+gamma_aa[index]*gcaa*t148170*t148171*t148218*8.0))-c0*t148251*t148282*(omega*t148240* \
               (omega*t148245*t148248*(2.778046668940015E15/1.40737488355328E14)+omega*t148240*((t148239*(1.0/3.0) \
               )/rho_a[index]+t148242*t148243*1.0/pow(t148236,5.0/3.0)*(2.778046668940015E15/1.40737488355328E14) \
               -t148240*t148237*t148239*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t148244* \
               t148246*t148239*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t148245*t148256*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_a[index],1.0/3.0)*t148282*t148277*(4.0/3.0)+c0*t148251*t148277*(cx1* \
               gamma_aa[index]*gx*t148217*t148265*(8.0/3.0)+cx2*t148170*t148216*t148274*t148249*(1.6E1/3.0)+cx4*t148250* \
               t148172*t148262*t148219*(3.2E1/3.0)-cx1*t148170*t148216*1.0/(t148264*t148264)*t148249*(8.0/3.0)-cx2* \
               t148170*1.0/(t148273*t148273)*t148177*t148249*(gamma_aa[index]*gx*t148217*(1.6E1/3.0)+t148170*t148216* \
               t148249*(1.6E1/3.0))-cx4*t148250*1.0/(t148261*t148261)*t148172*t148174*(gamma_aa[index]*gx*t148217* \
               (3.2E1/3.0)+t148250*t148172*t148219*(3.2E1/3.0)+t148170*t148216*t148249*3.2E1+gamma_aa[index]*gx*t148170* \
               t148218*t148249*3.2E1)+cx3*gamma_aa[index]*gx*t148170*t148270*t148218*t148249*8.0-cx3*gamma_aa[index]* \
               gx*t148170*t148176*t148249*1.0/(t148269*t148269)*(gamma_aa[index]*gx*t148217*8.0+t148170*t148216*t148249* \
               1.6E1+gamma_aa[index]*gx*t148170*t148218*t148249*8.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t144016 = 1.0/pow(rho_b[index],1.0/3.0);
            double t144017 = c*t144016;
            double t144018 = sqrt(t144017);
            double t144019 = pow(t144017,3.0/2.0);
            double t144020 = c*c;
            double t144021 = 1.0/pow(rho_b[index],2.0/3.0);
            double t144022 = 1.0/c0p;
            double t144023 = b1p*t144018;
            double t144024 = b3p*t144019;
            double t144025 = b4p*t144020*t144021;
            double t144026 = b2p*c*t144016;
            double t144027 = t144023+t144024+t144025+t144026;
            double t144028 = 1.0/t144027;
            double t144029 = t144022*t144028*(1.0/2.0);
            double t144030 = t144029+1.0;
            double t144031 = log(t144030);
            double t144032 = a1p*c*t144016;
            double t144033 = t144032+1.0;
            double t144034 = gamma_bb[index]*gamma_bb[index];
            double t144035 = gcaa*gcaa;
            double t144036 = t144034*t144034;
            double t144037 = t144035*t144035;
            double t144038 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t144039 = 1.0/pow(rho_b[index],8.0/3.0);
            double t144040 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t144041 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t144042 = pow(2.0,1.0/3.0);
            double t144043 = t144042*2.0;
            double t144044 = t144043-2.0;
            double t144045 = two_13*2.0;
            double t144046 = t144045-2.0;
            double t144047 = 1.0/t144046;
            double t144048 = 1.0/c0f;
            double t144049 = 1.0/pow(rho_a[index],1.0/3.0);
            double t144050 = c*t144049;
            double t144051 = sqrt(t144050);
            double t144052 = pow(t144050,3.0/2.0);
            double t144053 = 1.0/pow(rho_a[index],2.0/3.0);
            double t144054 = b1p*t144051;
            double t144055 = b3p*t144052;
            double t144056 = b4p*t144020*t144053;
            double t144057 = b2p*c*t144049;
            double t144058 = t144054+t144055+t144056+t144057;
            double t144059 = 1.0/t144058;
            double t144060 = t144022*t144059*(1.0/2.0);
            double t144061 = t144060+1.0;
            double t144062 = log(t144061);
            double t144063 = a1p*c*t144049;
            double t144064 = t144063+1.0;
            double t144065 = c0p*t144062*t144064*2.0;
            double t144066 = b1f*t144018;
            double t144067 = b3f*t144019;
            double t144068 = b4f*t144020*t144021;
            double t144069 = b2f*c*t144016;
            double t144070 = t144066+t144067+t144068+t144069;
            double t144071 = 1.0/t144070;
            double t144072 = t144071*t144048*(1.0/2.0);
            double t144073 = t144072+1.0;
            double t144074 = log(t144073);
            double t144075 = a1f*c*t144016;
            double t144076 = t144075+1.0;
            double t144077 = c0f*t144074*t144076*2.0;
            double t144078 = c0p*t144031*t144033*2.0;
            double t144079 = rho_a[index]+rho_b[index];
            double t144080 = 1.0/pow(t144079,1.0/3.0);
            double t144081 = c*t144080;
            double t144082 = sqrt(t144081);
            double t144083 = pow(t144081,3.0/2.0);
            double t144084 = 1.0/pow(t144079,2.0/3.0);
            double t144085 = b1p*t144082;
            double t144086 = b3p*t144083;
            double t144087 = b4p*t144020*t144084;
            double t144088 = b2p*c*t144080;
            double t144089 = t144085+t144086+t144087+t144088;
            double t144090 = 1.0/t144089;
            double t144091 = t144022*t144090*(1.0/2.0);
            double t144092 = t144091+1.0;
            double t144093 = log(t144092);
            double t144094 = a1p*c*t144080;
            double t144095 = t144094+1.0;
            double t144096 = c0p*t144093*t144095*2.0;
            double t144097 = rho_a[index]-rho_b[index];
            double t144098 = t144097*t144097;
            double t144099 = 1.0/t144079;
            double t144100 = t144097*t144099;
            double t144101 = 1.0/(t144079*t144079*t144079*t144079);
            double t144102 = t144098*t144098;
            double t144103 = t144100+1.0;
            double t144104 = pow(t144103,4.0/3.0);
            double t144105 = -t144100+1.0;
            double t144106 = pow(t144105,4.0/3.0);
            double t144107 = t144104+t144106-2.0;
            double t144108 = gcab*gcab;
            double t144112 = 1.0/pow(rho_a[index],8.0/3.0);
            double t144113 = gamma_aa[index]*t144112*(1.0/2.0);
            double t144114 = gamma_bb[index]*t144039*(1.0/2.0);
            double t144109 = t144113+t144114;
            double t144110 = t144109*t144109;
            double t144111 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t144115 = t144108*t144108;
            double t144116 = t144110*t144110;
            double t144117 = t144110*t144108*6.0;
            double t144118 = gcab*t144110*t144108*t144109*4.0;
            double t144119 = t144115*t144116;
            double t144120 = gcab*t144109*4.0;
            double t144121 = t144120+t144117+t144118+t144119+1.0;
            double t144122 = gcab*t144109;
            double t144123 = t144122+1.0;
            double t144124 = t144110*t144108;
            double t144125 = gcab*t144109*2.0;
            double t144126 = t144124+t144125+1.0;
            double t144127 = t144110*t144108*3.0;
            double t144128 = gcab*t144110*t144108*t144109;
            double t144129 = gcab*t144109*3.0;
            double t144130 = t144127+t144128+t144129+1.0;
            double t144131 = 1.0/t144126;
            double t144132 = 1.0/t144130;
            double t144133 = 1.0/t144123;
            double t144134 = 1.0/t144121;
            double t144135 = 1.0/pow(t144079,4.0/3.0);
            double t144136 = b1f*t144082;
            double t144137 = b3f*t144083;
            double t144138 = b4f*t144020*t144084;
            double t144139 = b2f*c*t144080;
            double t144140 = t144136+t144137+t144138+t144139;
            double t144141 = 1.0/t144140;
            double t144142 = t144141*t144048*(1.0/2.0);
            double t144143 = t144142+1.0;
            double t144144 = log(t144143);
            double t144145 = a1f*c*t144080;
            double t144146 = t144145+1.0;
            double t144148 = c0f*t144144*t144146*2.0;
            double t144147 = -t144148+t144096;
            double t144149 = 1.0/(t144079*t144079);
            double t144150 = t144149*t144097;
            double t144151 = t144150+t144099;
            double t144152 = t144148-t144096;
            double t144153 = 1.0/pow(t144079,5.0/3.0);
            double t144154 = 1.0/sqrt(t144081);
            double t144155 = 1.0/t144092;
            double t144156 = 1.0/(t144089*t144089);
            double t144157 = b4p*t144020*t144153*(2.0/3.0);
            double t144158 = b2p*c*t144135*(1.0/3.0);
            double t144159 = b1p*c*t144135*t144154*(1.0/6.0);
            double t144160 = b3p*c*t144135*t144082*(1.0/2.0);
            double t144161 = t144160+t144157+t144158+t144159;
            double t144162 = 1.0/d2fz0;
            double t144163 = 1.0/Aa;
            double t144164 = b1a*t144082;
            double t144165 = b3a*t144083;
            double t144166 = b4a*t144020*t144084;
            double t144167 = b2a*c*t144080;
            double t144168 = t144164+t144165+t144166+t144167;
            double t144169 = 1.0/t144168;
            double t144170 = t144163*t144169*(1.0/2.0);
            double t144171 = t144170+1.0;
            double t144172 = log(t144171);
            double t144173 = a1a*c*t144080;
            double t144174 = t144173+1.0;
            double t144175 = 1.0/(t144079*t144079*t144079*t144079*t144079);
            double t144176 = pow(t144103,1.0/3.0);
            double t144177 = t144151*t144176*(4.0/3.0);
            double t144178 = pow(t144105,1.0/3.0);
            double t144179 = t144177-t144151*t144178*(4.0/3.0);
            double t144180 = t144101*t144102;
            double t144181 = t144180-1.0;
            double t144182 = 1.0/pow(rho_b[index],4.0/3.0);
            double t144183 = 1.0/pow(rho_b[index],5.0/3.0);
            double t144184 = 1.0/sqrt(t144017);
            double t144185 = 1.0/t144030;
            double t144186 = 1.0/(t144027*t144027);
            double t144187 = b4p*t144020*t144183*(2.0/3.0);
            double t144188 = b2p*c*t144182*(1.0/3.0);
            double t144189 = b1p*c*t144182*t144184*(1.0/6.0);
            double t144190 = b3p*c*t144018*t144182*(1.0/2.0);
            double t144191 = t144190+t144187+t144188+t144189;
            double t144192 = t144033*t144191*t144185*t144186;
            double t144193 = t144077-t144078;
            double t144194 = t144044*t144047*t144193;
            double t144195 = Aa*t144107*t144162*t144172*t144181*t144047*t144174*2.0;
            double t144196 = a1p*c*c0p*t144135*t144093*(2.0/3.0);
            double t144197 = t144194+t144078;
            double t144198 = gamma_bb[index]*gcaa*t144039*4.0;
            double t144199 = gamma_bb[index]*gcaa*t144040*t144034*t144035*4.0;
            double t144200 = t144041*t144034*t144035*6.0;
            double t144201 = t144036*t144037*t144038;
            double t144202 = t144200+t144201+t144198+t144199+1.0;
            double t144203 = 1.0/t144202;
            double t144204 = gamma_bb[index]*gcaa*t144039;
            double t144205 = t144204+1.0;
            double t144206 = 1.0/t144205;
            double t144207 = gamma_bb[index]*gcaa*t144039*3.0;
            double t144208 = gamma_bb[index]*gcaa*t144040*t144034*t144035;
            double t144209 = t144041*t144034*t144035*3.0;
            double t144210 = t144207+t144208+t144209+1.0;
            double t144211 = 1.0/t144210;
            double t144212 = gamma_bb[index]*gcaa*t144039*2.0;
            double t144213 = t144041*t144034*t144035;
            double t144214 = t144212+t144213+1.0;
            double t144215 = 1.0/t144214;
            double t144216 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t144217 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t144218 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t144219 = 1.0/t144073;
            double t144220 = 1.0/(t144070*t144070);
            double t144221 = b4f*t144020*t144183*(2.0/3.0);
            double t144222 = b2f*c*t144182*(1.0/3.0);
            double t144223 = b1f*c*t144182*t144184*(1.0/6.0);
            double t144224 = b3f*c*t144018*t144182*(1.0/2.0);
            double t144225 = t144221+t144222+t144223+t144224;
            double t144226 = a1f*c*c0f*t144074*t144182*(2.0/3.0);
            double t144227 = a1p*c*c0p*t144031*t144182*(2.0/3.0);
            double t144228 = ccaa4*t144203*t144036*t144037*t144038;
            double t144229 = ccaa1*gamma_bb[index]*gcaa*t144206*t144039;
            double t144230 = ccaa3*gamma_bb[index]*gcaa*t144040*t144211*t144034*t144035;
            double t144231 = ccaa2*t144041*t144034*t144035*t144215;
            double t144232 = ccaa0+t144230+t144231+t144228+t144229;
            double t144233 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t144234 = 1.0/(omega*omega);
            double t144235 = pow(t144233,2.0/3.0);
            double t144238 = t144234*t144235;
            double t144236 = exp(-t144238);
            double t144237 = 1.0/pow(t144233,1.0/3.0);
            double t144239 = omega*omega;
            double t144240 = t144236-1.0;
            double t144241 = 1.0/pow(t144233,2.0/3.0);
            double t144242 = 1.0/pow(t144233,4.0/3.0);
            double t144243 = 1.0/omega;
            double t144244 = t144240*t144241*t144239*(1.0/2.0);
            double t144245 = t144244-t144236+3.0/2.0;
            double t144246 = gx*gx;
            double t144247 = t144246*t144246;
            double t144248 = pow(rho_b[index],4.0/3.0);
            double t144249 = pow(t144233,1.0/3.0);
            double t144250 = t144243*t144249;
            double t144251 = erf(t144250);
            double t144252 = t144251*(3.991211251234741E15/2.251799813685248E15);
            double t144272 = omega*t144245*t144237;
            double t144253 = t144252-t144272;
            double t144254 = gamma_bb[index]*gx*t144039*4.0;
            double t144255 = gamma_bb[index]*gx*t144040*t144034*t144246*4.0;
            double t144256 = t144041*t144034*t144246*6.0;
            double t144257 = t144036*t144038*t144247;
            double t144258 = t144254+t144255+t144256+t144257+1.0;
            double t144259 = 1.0/t144258;
            double t144260 = gamma_bb[index]*gx*t144039;
            double t144261 = t144260+1.0;
            double t144262 = 1.0/t144261;
            double t144263 = gamma_bb[index]*gx*t144039*3.0;
            double t144264 = gamma_bb[index]*gx*t144040*t144034*t144246;
            double t144265 = t144041*t144034*t144246*3.0;
            double t144266 = t144263+t144264+t144265+1.0;
            double t144267 = 1.0/t144266;
            double t144268 = gamma_bb[index]*gx*t144039*2.0;
            double t144269 = t144041*t144034*t144246;
            double t144270 = t144268+t144269+1.0;
            double t144271 = 1.0/t144270;
            double t144273 = omega*t144253*t144237*(4.0/3.0);
            double t144274 = t144273-1.0;
            double t144275 = cx4*t144036*t144038*t144247*t144259;
            double t144276 = cx1*gamma_bb[index]*gx*t144262*t144039;
            double t144277 = cx3*gamma_bb[index]*gx*t144040*t144034*t144246*t144267;
            double t144278 = cx2*t144041*t144034*t144271*t144246;
            double t144279 = cx0+t144275+t144276+t144277+t144278;
            v_rho_b_[index] = -t144232*(t144078+t144044*t144047*(t144077-c0p*t144031*t144033*2.0))-(ccab0+ccab1* \
               gcab*t144133*t144109+ccab2*t144110*t144131*t144108+ccab4*t144115*t144116*t144134+ccab3*gcab*t144110* \
               t144132*t144108*t144109)*(-t144194-t144078+t144096+t144195+rho_b[index]*(t144227-t144192+t144044*t144047* \
               (t144226+t144192-t144220*t144225*t144219*t144076-a1p*c*c0p*t144031*t144182*(2.0/3.0)))-t144079*(t144196- \
               t144161*t144155*t144156*t144095+t144101*t144102*t144152*t144047*t144179+t144102*t144107*t144152*t144047* \
               t144175*4.0-t144101*t144102*t144107*t144047*(t144196-t144161*t144155*t144156*t144095+(1.0/(t144140* \
               t144140)*t144146*(b2f*c*t144135*(1.0/3.0)+b4f*t144020*t144153*(2.0/3.0)+b1f*c*t144135*t144154*(1.0/ \
               6.0)+b3f*c*t144135*t144082*(1.0/2.0)))/t144143-a1f*c*c0f*t144135*t144144*(2.0/3.0))-t144101*t144107* \
               t144047*t144147*t144097*t144098*4.0+Aa*t144107*t144162*t144172*t144047*t144174*(t144102*t144175*4.0+ \
               t144101*t144097*t144098*4.0)*2.0+Aa*t144162*t144172*t144181*t144047*t144174*t144179*2.0-(t144107*t144162* \
               t144181*t144047*t144174*1.0/(t144168*t144168)*(b2a*c*t144135*(1.0/3.0)+b4a*t144020*t144153*(2.0/3.0) \
               +b1a*c*t144135*t144154*(1.0/6.0)+b3a*c*t144135*t144082*(1.0/2.0)))/t144171+Aa*a1a*c*t144107*t144135* \
               t144162*t144172*t144181*t144047*(2.0/3.0))+t144101*t144102*t144107*t144152*t144047)-(rho_b[index]* \
               t144197+rho_a[index]*(t144065-t144044*t144047*(t144065-c0f*log((t144048*(1.0/2.0))/(b1f*t144051+b3f* \
               t144052+b2f*c*t144049+b4f*t144020*t144053)+1.0)*(a1f*c*t144049+1.0)*2.0))-t144079*(t144096+t144195- \
               t144101*t144102*t144107*t144047*t144147))*(ccab1*gamma_bb[index]*gcab*t144111*t144133*(4.0/3.0)-ccab2* \
               t144110*t144108*1.0/(t144126*t144126)*(gamma_bb[index]*gcab*t144111*(8.0/3.0)+gamma_bb[index]*t144111* \
               t144108*t144109*(8.0/3.0))-ccab4*1.0/(t144121*t144121)*t144115*t144116*(gamma_bb[index]*gcab*t144111* \
               (1.6E1/3.0)+gamma_bb[index]*t144111*t144108*t144109*1.6E1+gamma_bb[index]*gcab*t144110*t144111*t144108* \
               1.6E1+gamma_bb[index]*t144110*t144111*t144115*t144109*(1.6E1/3.0))-ccab1*gamma_bb[index]*t144111*1.0/ \
               (t144123*t144123)*t144108*t144109*(4.0/3.0)+ccab2*gamma_bb[index]*t144111*t144131*t144108*t144109* \
               (8.0/3.0)-ccab3*gcab*t144110*1.0/(t144130*t144130)*t144108*t144109*(gamma_bb[index]*gcab*t144111*4.0+ \
               gamma_bb[index]*t144111*t144108*t144109*8.0+gamma_bb[index]*gcab*t144110*t144111*t144108*4.0)+ccab3* \
               gamma_bb[index]*gcab*t144110*t144111*t144132*t144108*4.0+ccab4*gamma_bb[index]*t144110*t144111*t144115* \
               t144134*t144109*(1.6E1/3.0))+rho_b[index]*t144197*(ccaa1*gamma_bb[index]*gcaa*t144111*t144206*(8.0/ \
               3.0)+ccaa2*t144034*t144035*t144215*t144216*(1.6E1/3.0)+ccaa4*t144203*t144036*t144037*t144218*(3.2E1/ \
               3.0)-ccaa1*t144034*1.0/(t144205*t144205)*t144035*t144216*(8.0/3.0)-ccaa2*t144041*t144034*1.0/(t144214* \
               t144214)*t144035*(gamma_bb[index]*gcaa*t144111*(1.6E1/3.0)+t144034*t144035*t144216*(1.6E1/3.0))-ccaa4* \
               1.0/(t144202*t144202)*t144036*t144037*t144038*(gamma_bb[index]*gcaa*t144111*(3.2E1/3.0)+t144034*t144035* \
               t144216*3.2E1+t144036*t144037*t144218*(3.2E1/3.0)+gamma_bb[index]*gcaa*t144034*t144035*t144217*3.2E1) \
               +ccaa3*gamma_bb[index]*gcaa*t144211*t144034*t144035*t144217*8.0-ccaa3*gamma_bb[index]*gcaa*1.0/(t144210* \
               t144210)*t144040*t144034*t144035*(gamma_bb[index]*gcaa*t144111*8.0+t144034*t144035*t144216*1.6E1+gamma_bb[index]* \
               gcaa*t144034*t144035*t144217*8.0))+rho_b[index]*t144232*(t144227-t144192+t144044*t144047*(t144226- \
               t144227+t144192-t144220*t144225*t144219*t144076))-c0*t144248*t144279*(omega*t144237*(omega*t144242* \
               t144245*(2.778046668940015E15/1.40737488355328E14)+omega*t144237*((t144236*(1.0/3.0))/rho_b[index]+ \
               t144240*1.0/pow(t144233,5.0/3.0)*t144239*(2.778046668940015E15/1.40737488355328E14)-t144234*t144236* \
               t144237*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t144241*t144243*t144236* \
               (1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t144242*t144253*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_b[index],1.0/3.0)*t144274*t144279*(4.0/3.0)+c0*t144274*t144248*(cx1* \
               gamma_bb[index]*gx*t144111*t144262*(8.0/3.0)+cx2*t144034*t144216*t144271*t144246*(1.6E1/3.0)+cx4*t144036* \
               t144218*t144247*t144259*(3.2E1/3.0)-cx1*t144034*t144216*1.0/(t144261*t144261)*t144246*(8.0/3.0)-cx2* \
               t144041*t144034*1.0/(t144270*t144270)*t144246*(gamma_bb[index]*gx*t144111*(1.6E1/3.0)+t144034*t144216* \
               t144246*(1.6E1/3.0))-cx4*t144036*t144038*t144247*1.0/(t144258*t144258)*(gamma_bb[index]*gx*t144111* \
               (3.2E1/3.0)+t144034*t144216*t144246*3.2E1+t144036*t144218*t144247*(3.2E1/3.0)+gamma_bb[index]*gx*t144034* \
               t144217*t144246*3.2E1)+cx3*gamma_bb[index]*gx*t144034*t144217*t144246*t144267*8.0-cx3*gamma_bb[index]* \
               gx*t144040*t144034*t144246*1.0/(t144266*t144266)*(gamma_bb[index]*gx*t144111*8.0+t144034*t144216*t144246* \
               1.6E1+gamma_bb[index]*gx*t144034*t144217*t144246*8.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t147398 = 1.0/pow(rho_b[index],1.0/3.0);
            double t147399 = c*t147398;
            double t147400 = sqrt(t147399);
            double t147401 = pow(t147399,3.0/2.0);
            double t147402 = c*c;
            double t147403 = 1.0/pow(rho_b[index],2.0/3.0);
            double t147404 = 1.0/c0p;
            double t147405 = b1p*t147400;
            double t147406 = b3p*t147401;
            double t147407 = b4p*t147402*t147403;
            double t147408 = b2p*c*t147398;
            double t147409 = t147405+t147406+t147407+t147408;
            double t147410 = 1.0/t147409;
            double t147411 = t147410*t147404*(1.0/2.0);
            double t147412 = t147411+1.0;
            double t147413 = log(t147412);
            double t147414 = a1p*c*t147398;
            double t147415 = t147414+1.0;
            double t147416 = gamma_bb[index]*gamma_bb[index];
            double t147417 = gcaa*gcaa;
            double t147418 = t147416*t147416;
            double t147419 = t147417*t147417;
            double t147420 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t147421 = 1.0/pow(rho_b[index],8.0/3.0);
            double t147422 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t147423 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t147424 = pow(2.0,1.0/3.0);
            double t147425 = t147424*2.0;
            double t147426 = t147425-2.0;
            double t147427 = two_13*2.0;
            double t147428 = t147427-2.0;
            double t147429 = 1.0/t147428;
            double t147430 = 1.0/c0f;
            double t147431 = b1f*t147400;
            double t147432 = b3f*t147401;
            double t147433 = b4f*t147402*t147403;
            double t147434 = b2f*c*t147398;
            double t147435 = t147431+t147432+t147433+t147434;
            double t147436 = 1.0/t147435;
            double t147437 = t147430*t147436*(1.0/2.0);
            double t147438 = t147437+1.0;
            double t147439 = log(t147438);
            double t147440 = a1f*c*t147398;
            double t147441 = t147440+1.0;
            double t147442 = c0f*t147441*t147439*2.0;
            double t147443 = c0p*t147413*t147415*2.0;
            double t147444 = gamma_bb[index]*gcaa*t147421*4.0;
            double t147445 = gamma_bb[index]*gcaa*t147422*t147416*t147417*4.0;
            double t147446 = t147423*t147416*t147417*6.0;
            double t147447 = t147420*t147418*t147419;
            double t147448 = t147444+t147445+t147446+t147447+1.0;
            double t147449 = 1.0/t147448;
            double t147450 = gamma_bb[index]*gcaa*t147421;
            double t147451 = t147450+1.0;
            double t147452 = 1.0/t147451;
            double t147453 = gamma_bb[index]*gcaa*t147421*3.0;
            double t147454 = gamma_bb[index]*gcaa*t147422*t147416*t147417;
            double t147455 = t147423*t147416*t147417*3.0;
            double t147456 = t147453+t147454+t147455+1.0;
            double t147457 = 1.0/t147456;
            double t147458 = gamma_bb[index]*gcaa*t147421*2.0;
            double t147459 = t147423*t147416*t147417;
            double t147460 = t147458+t147459+1.0;
            double t147461 = 1.0/t147460;
            double t147462 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t147463 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t147464 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t147465 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t147466 = 1.0/pow(rho_b[index],4.0/3.0);
            double t147467 = 1.0/pow(rho_b[index],5.0/3.0);
            double t147468 = 1.0/sqrt(t147399);
            double t147469 = 1.0/t147412;
            double t147470 = 1.0/(t147409*t147409);
            double t147471 = b4p*t147402*t147467*(2.0/3.0);
            double t147472 = b2p*c*t147466*(1.0/3.0);
            double t147473 = b1p*c*t147466*t147468*(1.0/6.0);
            double t147474 = b3p*c*t147400*t147466*(1.0/2.0);
            double t147475 = t147471+t147472+t147473+t147474;
            double t147476 = t147415*t147470*t147475*t147469;
            double t147477 = ccaa4*t147420*t147418*t147419*t147449;
            double t147478 = ccaa1*gamma_bb[index]*gcaa*t147421*t147452;
            double t147479 = ccaa3*gamma_bb[index]*gcaa*t147422*t147416*t147417*t147457;
            double t147480 = ccaa2*t147423*t147416*t147461*t147417;
            double t147481 = ccaa0+t147480+t147477+t147478+t147479;
            double t147482 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t147483 = 1.0/(omega*omega);
            double t147484 = pow(t147482,2.0/3.0);
            double t147487 = t147483*t147484;
            double t147485 = exp(-t147487);
            double t147486 = 1.0/pow(t147482,1.0/3.0);
            double t147488 = omega*omega;
            double t147489 = t147485-1.0;
            double t147490 = 1.0/pow(t147482,2.0/3.0);
            double t147491 = 1.0/pow(t147482,4.0/3.0);
            double t147492 = 1.0/omega;
            double t147493 = t147490*t147488*t147489*(1.0/2.0);
            double t147494 = t147493-t147485+3.0/2.0;
            double t147495 = gx*gx;
            double t147496 = t147495*t147495;
            double t147497 = pow(rho_b[index],4.0/3.0);
            double t147498 = pow(t147482,1.0/3.0);
            double t147499 = t147492*t147498;
            double t147500 = erf(t147499);
            double t147501 = t147500*(3.991211251234741E15/2.251799813685248E15);
            double t147521 = omega*t147494*t147486;
            double t147502 = t147501-t147521;
            double t147503 = gamma_bb[index]*gx*t147421*4.0;
            double t147504 = gamma_bb[index]*gx*t147422*t147416*t147495*4.0;
            double t147505 = t147423*t147416*t147495*6.0;
            double t147506 = t147420*t147418*t147496;
            double t147507 = t147503+t147504+t147505+t147506+1.0;
            double t147508 = 1.0/t147507;
            double t147509 = gamma_bb[index]*gx*t147421;
            double t147510 = t147509+1.0;
            double t147511 = 1.0/t147510;
            double t147512 = gamma_bb[index]*gx*t147421*3.0;
            double t147513 = gamma_bb[index]*gx*t147422*t147416*t147495;
            double t147514 = t147423*t147416*t147495*3.0;
            double t147515 = t147512+t147513+t147514+1.0;
            double t147516 = 1.0/t147515;
            double t147517 = gamma_bb[index]*gx*t147421*2.0;
            double t147518 = t147423*t147416*t147495;
            double t147519 = t147517+t147518+1.0;
            double t147520 = 1.0/t147519;
            double t147522 = omega*t147502*t147486*(4.0/3.0);
            double t147523 = t147522-1.0;
            double t147524 = cx4*t147420*t147418*t147508*t147496;
            double t147525 = cx1*gamma_bb[index]*gx*t147421*t147511;
            double t147526 = cx3*gamma_bb[index]*gx*t147422*t147416*t147516*t147495;
            double t147527 = cx2*t147520*t147423*t147416*t147495;
            double t147528 = cx0+t147524+t147525+t147526+t147527;
            v_rho_b_[index] = -t147481*(t147443+t147426*t147429*(t147442-c0p*t147413*t147415*2.0))+rho_b[index]* \
               t147481*(-t147476+t147426*t147429*(t147476-(t147441*1.0/(t147435*t147435)*(b2f*c*t147466*(1.0/3.0) \
               +b4f*t147402*t147467*(2.0/3.0)+b1f*c*t147466*t147468*(1.0/6.0)+b3f*c*t147400*t147466*(1.0/2.0)))/t147438+ \
               a1f*c*c0f*t147439*t147466*(2.0/3.0)-a1p*c*c0p*t147413*t147466*(2.0/3.0))+a1p*c*c0p*t147413*t147466* \
               (2.0/3.0))+rho_b[index]*(t147443+t147426*t147429*(t147442-t147443))*(ccaa1*gamma_bb[index]*gcaa*t147452* \
               t147463*(8.0/3.0)+ccaa2*t147416*t147461*t147417*t147462*(1.6E1/3.0)+ccaa4*t147418*t147419*t147465* \
               t147449*(3.2E1/3.0)-ccaa1*1.0/(t147451*t147451)*t147416*t147417*t147462*(8.0/3.0)-ccaa2*t147423*1.0/ \
               (t147460*t147460)*t147416*t147417*(gamma_bb[index]*gcaa*t147463*(1.6E1/3.0)+t147416*t147417*t147462* \
               (1.6E1/3.0))-ccaa4*t147420*t147418*t147419*1.0/(t147448*t147448)*(gamma_bb[index]*gcaa*t147463*(3.2E1/ \
               3.0)+t147416*t147417*t147462*3.2E1+t147418*t147419*t147465*(3.2E1/3.0)+gamma_bb[index]*gcaa*t147416* \
               t147417*t147464*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t147416*t147417*t147464*t147457*8.0-ccaa3*gamma_bb[index]* \
               gcaa*t147422*t147416*t147417*1.0/(t147456*t147456)*(gamma_bb[index]*gcaa*t147463*8.0+t147416*t147417* \
               t147462*1.6E1+gamma_bb[index]*gcaa*t147416*t147417*t147464*8.0))-c0*t147528*t147497*(omega*t147486* \
               (omega*t147491*t147494*(2.778046668940015E15/1.40737488355328E14)+omega*t147486*((t147485*(1.0/3.0) \
               )/rho_b[index]+1.0/pow(t147482,5.0/3.0)*t147488*t147489*(2.778046668940015E15/1.40737488355328E14) \
               -t147483*t147485*t147486*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t147490* \
               t147492*t147485*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t147502*t147491*(2.778046668940015E15/ \
               1.05553116266496E14))-c0*pow(rho_b[index],1.0/3.0)*t147523*t147528*(4.0/3.0)+c0*t147523*t147497*(cx1* \
               gamma_bb[index]*gx*t147511*t147463*(8.0/3.0)+cx2*t147520*t147416*t147462*t147495*(1.6E1/3.0)+cx4*t147418* \
               t147508*t147465*t147496*(3.2E1/3.0)-cx1*1.0/(t147510*t147510)*t147416*t147462*t147495*(8.0/3.0)-cx2* \
               t147423*t147416*1.0/(t147519*t147519)*t147495*(gamma_bb[index]*gx*t147463*(1.6E1/3.0)+t147416*t147462* \
               t147495*(1.6E1/3.0))-cx4*t147420*1.0/(t147507*t147507)*t147418*t147496*(gamma_bb[index]*gx*t147463* \
               (3.2E1/3.0)+t147416*t147462*t147495*3.2E1+t147418*t147465*t147496*(3.2E1/3.0)+gamma_bb[index]*gx*t147416* \
               t147464*t147495*3.2E1)+cx3*gamma_bb[index]*gx*t147416*t147516*t147464*t147495*8.0-cx3*gamma_bb[index]* \
               gx*t147422*t147416*1.0/(t147515*t147515)*t147495*(gamma_bb[index]*gx*t147463*8.0+t147416*t147462*t147495* \
               1.6E1+gamma_bb[index]*gx*t147416*t147464*t147495*8.0));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t144281 = 1.0/pow(rho_a[index],1.0/3.0);
                double t144282 = c*t144281;
                double t144283 = sqrt(t144282);
                double t144284 = pow(t144282,3.0/2.0);
                double t144285 = c*c;
                double t144286 = 1.0/pow(rho_a[index],2.0/3.0);
                double t144287 = 1.0/c0p;
                double t144288 = b1p*t144283;
                double t144289 = b3p*t144284;
                double t144290 = b4p*t144285*t144286;
                double t144291 = b2p*c*t144281;
                double t144292 = t144290+t144291+t144288+t144289;
                double t144293 = 1.0/t144292;
                double t144294 = t144293*t144287*(1.0/2.0);
                double t144295 = t144294+1.0;
                double t144296 = log(t144295);
                double t144297 = a1p*c*t144281;
                double t144298 = t144297+1.0;
                double t144299 = pow(2.0,1.0/3.0);
                double t144300 = t144299*2.0;
                double t144301 = t144300-2.0;
                double t144302 = two_13*2.0;
                double t144303 = t144302-2.0;
                double t144304 = 1.0/t144303;
                double t144305 = 1.0/c0f;
                double t144306 = 1.0/pow(rho_b[index],1.0/3.0);
                double t144307 = c*t144306;
                double t144308 = sqrt(t144307);
                double t144309 = pow(t144307,3.0/2.0);
                double t144310 = 1.0/pow(rho_b[index],2.0/3.0);
                double t144311 = b1p*t144308;
                double t144312 = b3p*t144309;
                double t144313 = b4p*t144310*t144285;
                double t144314 = b2p*c*t144306;
                double t144315 = t144311+t144312+t144313+t144314;
                double t144316 = 1.0/t144315;
                double t144317 = t144316*t144287*(1.0/2.0);
                double t144318 = t144317+1.0;
                double t144319 = log(t144318);
                double t144320 = a1p*c*t144306;
                double t144321 = t144320+1.0;
                double t144322 = c0p*t144321*t144319*2.0;
                double t144323 = rho_a[index]+rho_b[index];
                double t144324 = 1.0/pow(t144323,1.0/3.0);
                double t144325 = c*t144324;
                double t144326 = sqrt(t144325);
                double t144327 = pow(t144325,3.0/2.0);
                double t144328 = 1.0/pow(t144323,2.0/3.0);
                double t144329 = b1p*t144326;
                double t144330 = b3p*t144327;
                double t144331 = b4p*t144328*t144285;
                double t144332 = b2p*c*t144324;
                double t144333 = t144330+t144331+t144332+t144329;
                double t144334 = 1.0/t144333;
                double t144335 = t144334*t144287*(1.0/2.0);
                double t144336 = t144335+1.0;
                double t144337 = log(t144336);
                double t144338 = a1p*c*t144324;
                double t144339 = t144338+1.0;
                double t144340 = c0p*t144337*t144339*2.0;
                double t144341 = rho_a[index]-rho_b[index];
                double t144342 = t144341*t144341;
                double t144343 = 1.0/t144323;
                double t144344 = t144341*t144343;
                double t144345 = 1.0/(t144323*t144323*t144323*t144323);
                double t144346 = t144342*t144342;
                double t144347 = t144344+1.0;
                double t144348 = pow(t144347,4.0/3.0);
                double t144349 = -t144344+1.0;
                double t144350 = pow(t144349,4.0/3.0);
                double t144351 = t144350+t144348-2.0;
                double t144352 = 1.0/pow(rho_a[index],8.0/3.0);
                double t144353 = gamma_aa[index]*t144352*(1.0/2.0);
                double t144354 = 1.0/pow(rho_b[index],8.0/3.0);
                double t144355 = gamma_bb[index]*t144354*(1.0/2.0);
                double t144356 = t144353+t144355;
                double t144357 = gcab*t144356;
                double t144358 = t144357+1.0;
                double t144359 = gcab*gcab;
                double t144360 = t144356*t144356;
                double t144361 = t144359*t144359;
                double t144362 = t144360*t144360;
                double t144363 = t144360*t144359;
                double t144364 = gcab*t144356*2.0;
                double t144365 = t144363+t144364+1.0;
                double t144366 = t144360*t144359*3.0;
                double t144367 = gcab*t144360*t144356*t144359;
                double t144368 = gcab*t144356*3.0;
                double t144369 = t144366+t144367+t144368+1.0;
                double t144370 = t144360*t144359*6.0;
                double t144371 = gcab*t144360*t144356*t144359*4.0;
                double t144372 = t144361*t144362;
                double t144373 = gcab*t144356*4.0;
                double t144374 = t144370+t144371+t144372+t144373+1.0;
                double t144375 = c0p*t144296*t144298*2.0;
                double t144376 = b1f*t144283;
                double t144377 = b3f*t144284;
                double t144378 = b4f*t144285*t144286;
                double t144379 = b2f*c*t144281;
                double t144380 = t144376+t144377+t144378+t144379;
                double t144381 = 1.0/t144380;
                double t144382 = t144305*t144381*(1.0/2.0);
                double t144383 = t144382+1.0;
                double t144384 = log(t144383);
                double t144385 = a1f*c*t144281;
                double t144386 = t144385+1.0;
                double t144387 = t144375-c0f*t144384*t144386*2.0;
                double t144388 = t144375-t144301*t144304*t144387;
                double t144389 = gamma_aa[index]*gamma_aa[index];
                double t144390 = gcaa*gcaa;
                double t144391 = t144390*t144390;
                double t144392 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t144393 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t144394 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t144395 = gamma_aa[index]*gcaa*t144352;
                double t144396 = t144395+1.0;
                double t144397 = gamma_aa[index]*gcaa*t144352*3.0;
                double t144398 = gamma_aa[index]*gcaa*t144390*t144394*t144389;
                double t144399 = t144390*t144393*t144389*3.0;
                double t144400 = t144397+t144398+t144399+1.0;
                double t144401 = t144389*t144389;
                double t144402 = gamma_aa[index]*gcaa*t144352*4.0;
                double t144403 = gamma_aa[index]*gcaa*t144390*t144394*t144389*4.0;
                double t144404 = t144390*t144393*t144389*6.0;
                double t144405 = t144401*t144391*t144392;
                double t144406 = t144402+t144403+t144404+t144405+1.0;
                double t144407 = gamma_aa[index]*gcaa*t144352*2.0;
                double t144408 = t144390*t144393*t144389;
                double t144409 = t144407+t144408+1.0;
                double t144410 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t144411 = 1.0/pow(t144410,1.0/3.0);
                double t144412 = 1.0/(omega*omega);
                double t144413 = pow(t144410,2.0/3.0);
                double t144414 = exp(-t144412*t144413);
                double t144415 = gx*gx;
                double t144416 = t144415*t144415;
                double t144417 = gamma_aa[index]*gx*t144352;
                double t144418 = t144417+1.0;
                double t144419 = gamma_aa[index]*gx*t144352*3.0;
                double t144420 = gamma_aa[index]*gx*t144415*t144394*t144389;
                double t144421 = t144415*t144393*t144389*3.0;
                double t144422 = t144420+t144421+t144419+1.0;
                double t144423 = gamma_aa[index]*gx*t144352*4.0;
                double t144424 = gamma_aa[index]*gx*t144415*t144394*t144389*4.0;
                double t144425 = t144415*t144393*t144389*6.0;
                double t144426 = t144401*t144416*t144392;
                double t144427 = t144423+t144424+t144425+t144426+1.0;
                double t144428 = gamma_aa[index]*gx*t144352*2.0;
                double t144429 = t144415*t144393*t144389;
                double t144430 = t144428+t144429+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t144388+rho_b[index]*(t144322-t144301*t144304*(t144322-c0f*log((t144305* \
                   (1.0/2.0))/(b1f*t144308+b3f*t144309+b2f*c*t144306+b4f*t144310*t144285)+1.0)*(a1f*c*t144306+1.0)*2.0) \
                   )-t144323*(t144340-t144304*t144351*t144345*t144346*(t144340-c0f*log((t144305*(1.0/2.0))/(b1f*t144326+ \
                   b3f*t144327+b2f*c*t144324+b4f*t144328*t144285)+1.0)*(a1f*c*t144324+1.0)*2.0)+(Aa*t144304*t144351*log((1.0/ \
                   2.0)/(Aa*(b1a*t144326+b3a*t144327+b2a*c*t144324+b4a*t144328*t144285))+1.0)*(t144345*t144346-1.0)*(a1a* \
                   c*t144324+1.0)*2.0)/d2fz0))*((ccab1*gcab*t144352*(1.0/2.0))/t144358-ccab4*t144361*t144362*1.0/(t144374* \
                   t144374)*(gcab*t144352*2.0+t144352*t144356*t144359*6.0+gcab*t144360*t144352*t144359*6.0+t144360*t144352* \
                   t144361*t144356*2.0)-ccab2*t144360*1.0/(t144365*t144365)*t144359*(gcab*t144352+t144352*t144356*t144359) \
                   +(ccab2*t144352*t144356*t144359)/t144365-ccab1*t144352*t144356*1.0/(t144358*t144358)*t144359*(1.0/ \
                   2.0)+(ccab3*gcab*t144360*t144352*t144359*(3.0/2.0))/t144369+(ccab4*t144360*t144352*t144361*t144356* \
                   2.0)/t144374-ccab3*gcab*t144360*t144356*t144359*1.0/(t144369*t144369)*(gcab*t144352*(3.0/2.0)+t144352* \
                   t144356*t144359*3.0+gcab*t144360*t144352*t144359*(3.0/2.0)))-rho_a[index]*t144388*((ccaa1*gcaa*t144352) \
                   /t144396+(ccaa2*gamma_aa[index]*t144390*t144393*2.0)/t144409-ccaa1*gamma_aa[index]*t144390*t144393* \
                   1.0/(t144396*t144396)-ccaa2*t144390*1.0/(t144409*t144409)*t144393*t144389*(gcaa*t144352*2.0+gamma_aa[index]* \
                   t144390*t144393*2.0)+(ccaa4*gamma_aa[index]*t144391*t144392*t144389*4.0)/t144406+(ccaa3*gcaa*t144390* \
                   t144394*t144389*3.0)/t144400-ccaa4*t144401*1.0/(t144406*t144406)*t144391*t144392*(gcaa*t144352*4.0+ \
                   gamma_aa[index]*t144390*t144393*1.2E1+gamma_aa[index]*t144391*t144392*t144389*4.0+gcaa*t144390*t144394* \
                   t144389*1.2E1)-ccaa3*gamma_aa[index]*gcaa*1.0/(t144400*t144400)*t144390*t144394*t144389*(gcaa*t144352* \
                   3.0+gamma_aa[index]*t144390*t144393*6.0+gcaa*t144390*t144394*t144389*3.0))-c0*pow(rho_a[index],4.0/ \
                   3.0)*(omega*t144411*(erf(pow(t144410,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t144411*(-t144414+(omega*omega)*1.0/pow(t144410,2.0/3.0)*(t144414-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*((cx1*gx*t144352)/t144418-cx1*gamma_aa[index]*t144415*1.0/(t144418*t144418)*t144393+(cx2*gamma_aa[index]* \
                   t144415*t144393*2.0)/t144430-cx2*1.0/(t144430*t144430)*t144415*t144393*t144389*(gx*t144352*2.0+gamma_aa[index]* \
                   t144415*t144393*2.0)+(cx4*gamma_aa[index]*t144416*t144392*t144389*4.0)/t144427+(cx3*gx*t144415*t144394* \
                   t144389*3.0)/t144422-cx4*t144401*t144416*1.0/(t144427*t144427)*t144392*(gx*t144352*4.0+gamma_aa[index]* \
                   t144415*t144393*1.2E1+gamma_aa[index]*t144416*t144392*t144389*4.0+gx*t144415*t144394*t144389*1.2E1) \
                   -cx3*gamma_aa[index]*gx*1.0/(t144422*t144422)*t144415*t144394*t144389*(gx*t144352*3.0+gamma_aa[index]* \
                   t144415*t144393*6.0+gx*t144415*t144394*t144389*3.0));
            } else if (rho_a[index] > cutoff_) {
                double t148285 = 1.0/pow(rho_a[index],1.0/3.0);
                double t148286 = c*t148285;
                double t148287 = sqrt(t148286);
                double t148288 = pow(t148286,3.0/2.0);
                double t148289 = c*c;
                double t148290 = 1.0/pow(rho_a[index],2.0/3.0);
                double t148291 = 1.0/c0p;
                double t148292 = b1p*t148287;
                double t148293 = b3p*t148288;
                double t148294 = b4p*t148290*t148289;
                double t148295 = b2p*c*t148285;
                double t148296 = t148292+t148293+t148294+t148295;
                double t148297 = 1.0/t148296;
                double t148298 = t148291*t148297*(1.0/2.0);
                double t148299 = t148298+1.0;
                double t148300 = log(t148299);
                double t148301 = a1p*c*t148285;
                double t148302 = t148301+1.0;
                double t148303 = 1.0/pow(rho_a[index],8.0/3.0);
                double t148304 = gamma_aa[index]*gamma_aa[index];
                double t148305 = gcaa*gcaa;
                double t148306 = t148305*t148305;
                double t148307 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t148308 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t148309 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t148310 = gamma_aa[index]*gcaa*t148303;
                double t148311 = t148310+1.0;
                double t148312 = gamma_aa[index]*gcaa*t148303*3.0;
                double t148313 = gamma_aa[index]*gcaa*t148304*t148305*t148309;
                double t148314 = t148304*t148305*t148308*3.0;
                double t148315 = t148312+t148313+t148314+1.0;
                double t148316 = t148304*t148304;
                double t148317 = gamma_aa[index]*gcaa*t148303*4.0;
                double t148318 = gamma_aa[index]*gcaa*t148304*t148305*t148309*4.0;
                double t148319 = t148304*t148305*t148308*6.0;
                double t148320 = t148306*t148307*t148316;
                double t148321 = t148320+t148317+t148318+t148319+1.0;
                double t148322 = gamma_aa[index]*gcaa*t148303*2.0;
                double t148323 = t148304*t148305*t148308;
                double t148324 = t148322+t148323+1.0;
                double t148325 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t148326 = 1.0/pow(t148325,1.0/3.0);
                double t148327 = 1.0/(omega*omega);
                double t148328 = pow(t148325,2.0/3.0);
                double t148329 = exp(-t148327*t148328);
                double t148330 = gx*gx;
                double t148331 = t148330*t148330;
                double t148332 = gamma_aa[index]*gx*t148303;
                double t148333 = t148332+1.0;
                double t148334 = gamma_aa[index]*gx*t148303*3.0;
                double t148335 = gamma_aa[index]*gx*t148330*t148304*t148309;
                double t148336 = t148330*t148304*t148308*3.0;
                double t148337 = t148334+t148335+t148336+1.0;
                double t148338 = gamma_aa[index]*gx*t148303*4.0;
                double t148339 = gamma_aa[index]*gx*t148330*t148304*t148309*4.0;
                double t148340 = t148330*t148304*t148308*6.0;
                double t148341 = t148331*t148307*t148316;
                double t148342 = t148340+t148341+t148338+t148339+1.0;
                double t148343 = gamma_aa[index]*gx*t148303*2.0;
                double t148344 = t148330*t148304*t148308;
                double t148345 = t148343+t148344+1.0;
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t148287+ \
                   b3f*t148288+b2f*c*t148285+b4f*t148290*t148289))+1.0)*(a1f*c*t148285+1.0)*2.0-c0p*t148300*t148302*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t148300*t148302*2.0)*((ccaa1*gcaa*t148303)/t148311-ccaa1*gamma_aa[index]*1.0/ \
                   (t148311*t148311)*t148305*t148308+(ccaa2*gamma_aa[index]*t148305*t148308*2.0)/t148324-ccaa2*t148304* \
                   t148305*1.0/(t148324*t148324)*t148308*(gcaa*t148303*2.0+gamma_aa[index]*t148305*t148308*2.0)+(ccaa4* \
                   gamma_aa[index]*t148304*t148306*t148307*4.0)/t148321+(ccaa3*gcaa*t148304*t148305*t148309*3.0)/t148315- \
                   ccaa4*1.0/(t148321*t148321)*t148306*t148307*t148316*(gcaa*t148303*4.0+gamma_aa[index]*t148305*t148308* \
                   1.2E1+gamma_aa[index]*t148304*t148306*t148307*4.0+gcaa*t148304*t148305*t148309*1.2E1)-ccaa3*gamma_aa[index]* \
                   gcaa*t148304*t148305*1.0/(t148315*t148315)*t148309*(gcaa*t148303*3.0+gamma_aa[index]*t148305*t148308* \
                   6.0+gcaa*t148304*t148305*t148309*3.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t148326*(erf(pow(t148325,1.0/ \
                   3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t148326*(-t148329+(omega*omega)*1.0/ \
                   pow(t148325,2.0/3.0)*(t148329-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t148303)/t148333-cx1* \
                   gamma_aa[index]*t148330*1.0/(t148333*t148333)*t148308+(cx2*gamma_aa[index]*t148330*t148308*2.0)/t148345- \
                   cx2*t148330*t148304*t148308*1.0/(t148345*t148345)*(gx*t148303*2.0+gamma_aa[index]*t148330*t148308* \
                   2.0)+(cx4*gamma_aa[index]*t148304*t148331*t148307*4.0)/t148342+(cx3*gx*t148330*t148304*t148309*3.0) \
                   /t148337-cx4*t148331*1.0/(t148342*t148342)*t148307*t148316*(gx*t148303*4.0+gamma_aa[index]*t148330* \
                   t148308*1.2E1+gamma_aa[index]*t148304*t148331*t148307*4.0+gx*t148330*t148304*t148309*1.2E1)-cx3*gamma_aa[index]* \
                   gx*t148330*t148304*t148309*1.0/(t148337*t148337)*(gx*t148303*3.0+gamma_aa[index]*t148330*t148308*6.0+ \
                   gx*t148330*t148304*t148309*3.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t144433 = 1.0/pow(rho_a[index],1.0/3.0);
                double t144434 = c*t144433;
                double t144435 = sqrt(t144434);
                double t144436 = pow(t144434,3.0/2.0);
                double t144437 = c*c;
                double t144438 = 1.0/pow(rho_a[index],2.0/3.0);
                double t144439 = 1.0/c0p;
                double t144440 = b1p*t144435;
                double t144441 = b3p*t144436;
                double t144442 = b4p*t144437*t144438;
                double t144443 = b2p*c*t144433;
                double t144444 = t144440+t144441+t144442+t144443;
                double t144445 = 1.0/t144444;
                double t144446 = t144445*t144439*(1.0/2.0);
                double t144447 = t144446+1.0;
                double t144448 = log(t144447);
                double t144449 = a1p*c*t144433;
                double t144450 = t144449+1.0;
                double t144451 = pow(2.0,1.0/3.0);
                double t144452 = t144451*2.0;
                double t144453 = t144452-2.0;
                double t144454 = two_13*2.0;
                double t144455 = t144454-2.0;
                double t144456 = 1.0/t144455;
                double t144457 = 1.0/c0f;
                double t144458 = 1.0/pow(rho_b[index],1.0/3.0);
                double t144459 = c*t144458;
                double t144460 = sqrt(t144459);
                double t144461 = pow(t144459,3.0/2.0);
                double t144462 = 1.0/pow(rho_b[index],2.0/3.0);
                double t144463 = b1p*t144460;
                double t144464 = b3p*t144461;
                double t144465 = b4p*t144462*t144437;
                double t144466 = b2p*c*t144458;
                double t144467 = t144463+t144464+t144465+t144466;
                double t144468 = 1.0/t144467;
                double t144469 = t144439*t144468*(1.0/2.0);
                double t144470 = t144469+1.0;
                double t144471 = log(t144470);
                double t144472 = a1p*c*t144458;
                double t144473 = t144472+1.0;
                double t144474 = c0p*t144471*t144473*2.0;
                double t144475 = rho_a[index]+rho_b[index];
                double t144476 = 1.0/pow(t144475,1.0/3.0);
                double t144477 = c*t144476;
                double t144478 = sqrt(t144477);
                double t144479 = pow(t144477,3.0/2.0);
                double t144480 = 1.0/pow(t144475,2.0/3.0);
                double t144481 = b1p*t144478;
                double t144482 = b3p*t144479;
                double t144483 = b4p*t144480*t144437;
                double t144484 = b2p*c*t144476;
                double t144485 = t144481+t144482+t144483+t144484;
                double t144486 = 1.0/t144485;
                double t144487 = t144439*t144486*(1.0/2.0);
                double t144488 = t144487+1.0;
                double t144489 = log(t144488);
                double t144490 = a1p*c*t144476;
                double t144491 = t144490+1.0;
                double t144492 = c0p*t144491*t144489*2.0;
                double t144493 = rho_a[index]-rho_b[index];
                double t144494 = t144493*t144493;
                double t144495 = 1.0/t144475;
                double t144496 = t144493*t144495;
                double t144497 = 1.0/(t144475*t144475*t144475*t144475);
                double t144498 = t144494*t144494;
                double t144499 = t144496+1.0;
                double t144500 = pow(t144499,4.0/3.0);
                double t144501 = -t144496+1.0;
                double t144502 = pow(t144501,4.0/3.0);
                double t144503 = t144500+t144502-2.0;
                double t144504 = 1.0/pow(rho_b[index],8.0/3.0);
                double t144505 = 1.0/pow(rho_a[index],8.0/3.0);
                double t144506 = gamma_aa[index]*t144505*(1.0/2.0);
                double t144507 = gamma_bb[index]*t144504*(1.0/2.0);
                double t144508 = t144506+t144507;
                double t144509 = gcab*t144508;
                double t144510 = t144509+1.0;
                double t144511 = gcab*gcab;
                double t144512 = t144508*t144508;
                double t144513 = t144511*t144511;
                double t144514 = t144512*t144512;
                double t144515 = t144511*t144512;
                double t144516 = gcab*t144508*2.0;
                double t144517 = t144515+t144516+1.0;
                double t144518 = t144511*t144512*3.0;
                double t144519 = gcab*t144511*t144512*t144508;
                double t144520 = gcab*t144508*3.0;
                double t144521 = t144520+t144518+t144519+1.0;
                double t144522 = t144511*t144512*6.0;
                double t144523 = gcab*t144511*t144512*t144508*4.0;
                double t144524 = t144513*t144514;
                double t144525 = gcab*t144508*4.0;
                double t144526 = t144522+t144523+t144524+t144525+1.0;
                double t144527 = c0p*t144450*t144448*2.0;
                double t144528 = b1f*t144460;
                double t144529 = b3f*t144461;
                double t144530 = b4f*t144462*t144437;
                double t144531 = b2f*c*t144458;
                double t144532 = t144530+t144531+t144528+t144529;
                double t144533 = 1.0/t144532;
                double t144534 = t144533*t144457*(1.0/2.0);
                double t144535 = t144534+1.0;
                double t144536 = log(t144535);
                double t144537 = a1f*c*t144458;
                double t144538 = t144537+1.0;
                double t144539 = t144474-c0f*t144536*t144538*2.0;
                double t144540 = t144474-t144453*t144456*t144539;
                double t144541 = gamma_bb[index]*gamma_bb[index];
                double t144542 = gcaa*gcaa;
                double t144543 = t144542*t144542;
                double t144544 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t144545 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t144546 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t144547 = gamma_bb[index]*gcaa*t144504;
                double t144548 = t144547+1.0;
                double t144549 = gamma_bb[index]*gcaa*t144504*3.0;
                double t144550 = gamma_bb[index]*gcaa*t144541*t144542*t144546;
                double t144551 = t144541*t144542*t144545*3.0;
                double t144552 = t144550+t144551+t144549+1.0;
                double t144553 = t144541*t144541;
                double t144554 = gamma_bb[index]*gcaa*t144504*4.0;
                double t144555 = gamma_bb[index]*gcaa*t144541*t144542*t144546*4.0;
                double t144556 = t144541*t144542*t144545*6.0;
                double t144557 = t144543*t144544*t144553;
                double t144558 = t144554+t144555+t144556+t144557+1.0;
                double t144559 = gamma_bb[index]*gcaa*t144504*2.0;
                double t144560 = t144541*t144542*t144545;
                double t144561 = t144560+t144559+1.0;
                double t144562 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t144563 = 1.0/pow(t144562,1.0/3.0);
                double t144564 = 1.0/(omega*omega);
                double t144565 = pow(t144562,2.0/3.0);
                double t144566 = exp(-t144564*t144565);
                double t144567 = gx*gx;
                double t144568 = t144567*t144567;
                double t144569 = gamma_bb[index]*gx*t144504;
                double t144570 = t144569+1.0;
                double t144571 = gamma_bb[index]*gx*t144504*3.0;
                double t144572 = gamma_bb[index]*gx*t144541*t144546*t144567;
                double t144573 = t144541*t144545*t144567*3.0;
                double t144574 = t144571+t144572+t144573+1.0;
                double t144575 = gamma_bb[index]*gx*t144504*4.0;
                double t144576 = gamma_bb[index]*gx*t144541*t144546*t144567*4.0;
                double t144577 = t144541*t144545*t144567*6.0;
                double t144578 = t144544*t144553*t144568;
                double t144579 = t144575+t144576+t144577+t144578+1.0;
                double t144580 = gamma_bb[index]*gx*t144504*2.0;
                double t144581 = t144541*t144545*t144567;
                double t144582 = t144580+t144581+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t144540+rho_a[index]*(t144527-t144453*t144456*(t144527-c0f*log((t144457* \
                   (1.0/2.0))/(b1f*t144435+b3f*t144436+b2f*c*t144433+b4f*t144437*t144438)+1.0)*(a1f*c*t144433+1.0)*2.0) \
                   )-t144475*(t144492-t144503*t144456*t144497*t144498*(t144492-c0f*log((t144457*(1.0/2.0))/(b1f*t144478+ \
                   b3f*t144479+b2f*c*t144476+b4f*t144480*t144437)+1.0)*(a1f*c*t144476+1.0)*2.0)+(Aa*t144503*t144456*log((1.0/ \
                   2.0)/(Aa*(b1a*t144478+b3a*t144479+b2a*c*t144476+b4a*t144480*t144437))+1.0)*(t144497*t144498-1.0)*(a1a* \
                   c*t144476+1.0)*2.0)/d2fz0))*((ccab1*gcab*t144504*(1.0/2.0))/t144510-ccab4*t144513*t144514*1.0/(t144526* \
                   t144526)*(gcab*t144504*2.0+t144511*t144504*t144508*6.0+gcab*t144511*t144512*t144504*6.0+t144512*t144504* \
                   t144513*t144508*2.0)-ccab2*t144511*t144512*1.0/(t144517*t144517)*(gcab*t144504+t144511*t144504*t144508) \
                   -ccab1*1.0/(t144510*t144510)*t144511*t144504*t144508*(1.0/2.0)+(ccab2*t144511*t144504*t144508)/t144517+ \
                   (ccab3*gcab*t144511*t144512*t144504*(3.0/2.0))/t144521+(ccab4*t144512*t144504*t144513*t144508*2.0) \
                   /t144526-ccab3*gcab*t144511*t144512*1.0/(t144521*t144521)*t144508*(gcab*t144504*(3.0/2.0)+t144511* \
                   t144504*t144508*3.0+gcab*t144511*t144512*t144504*(3.0/2.0)))-rho_b[index]*t144540*((ccaa1*gcaa*t144504) \
                   /t144548+(ccaa2*gamma_bb[index]*t144542*t144545*2.0)/t144561-ccaa1*gamma_bb[index]*t144542*t144545* \
                   1.0/(t144548*t144548)-ccaa2*t144541*t144542*1.0/(t144561*t144561)*t144545*(gcaa*t144504*2.0+gamma_bb[index]* \
                   t144542*t144545*2.0)+(ccaa4*gamma_bb[index]*t144541*t144543*t144544*4.0)/t144558+(ccaa3*gcaa*t144541* \
                   t144542*t144546*3.0)/t144552-ccaa4*t144543*t144544*t144553*1.0/(t144558*t144558)*(gcaa*t144504*4.0+ \
                   gamma_bb[index]*t144542*t144545*1.2E1+gamma_bb[index]*t144541*t144543*t144544*4.0+gcaa*t144541*t144542* \
                   t144546*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t144541*t144542*1.0/(t144552*t144552)*t144546*(gcaa*t144504* \
                   3.0+gamma_bb[index]*t144542*t144545*6.0+gcaa*t144541*t144542*t144546*3.0))-c0*pow(rho_b[index],4.0/ \
                   3.0)*(omega*t144563*(erf(pow(t144562,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega* \
                   t144563*(-t144566+(omega*omega)*1.0/pow(t144562,2.0/3.0)*(t144566-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0) \
                   -1.0)*((cx1*gx*t144504)/t144570-cx1*gamma_bb[index]*1.0/(t144570*t144570)*t144545*t144567+(cx2*gamma_bb[index]* \
                   t144545*t144567*2.0)/t144582-cx2*t144541*t144545*1.0/(t144582*t144582)*t144567*(gx*t144504*2.0+gamma_bb[index]* \
                   t144545*t144567*2.0)+(cx4*gamma_bb[index]*t144541*t144544*t144568*4.0)/t144579+(cx3*gx*t144541*t144546* \
                   t144567*3.0)/t144574-cx4*t144544*t144553*t144568*1.0/(t144579*t144579)*(gx*t144504*4.0+gamma_bb[index]* \
                   t144545*t144567*1.2E1+gamma_bb[index]*t144541*t144544*t144568*4.0+gx*t144541*t144546*t144567*1.2E1) \
                   -cx3*gamma_bb[index]*gx*t144541*t144546*1.0/(t144574*t144574)*t144567*(gx*t144504*3.0+gamma_bb[index]* \
                   t144545*t144567*6.0+gx*t144541*t144546*t144567*3.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t147532 = 1.0/pow(rho_b[index],1.0/3.0);
                double t147533 = c*t147532;
                double t147534 = sqrt(t147533);
                double t147535 = pow(t147533,3.0/2.0);
                double t147536 = c*c;
                double t147537 = 1.0/pow(rho_b[index],2.0/3.0);
                double t147538 = 1.0/c0p;
                double t147539 = b1p*t147534;
                double t147540 = b3p*t147535;
                double t147541 = b4p*t147536*t147537;
                double t147542 = b2p*c*t147532;
                double t147543 = t147540+t147541+t147542+t147539;
                double t147544 = 1.0/t147543;
                double t147545 = t147544*t147538*(1.0/2.0);
                double t147546 = t147545+1.0;
                double t147547 = log(t147546);
                double t147548 = a1p*c*t147532;
                double t147549 = t147548+1.0;
                double t147550 = 1.0/pow(rho_b[index],8.0/3.0);
                double t147551 = gamma_bb[index]*gamma_bb[index];
                double t147552 = gcaa*gcaa;
                double t147553 = t147552*t147552;
                double t147554 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t147555 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t147556 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t147557 = gamma_bb[index]*gcaa*t147550;
                double t147558 = t147557+1.0;
                double t147559 = gamma_bb[index]*gcaa*t147550*3.0;
                double t147560 = gamma_bb[index]*gcaa*t147551*t147552*t147556;
                double t147561 = t147551*t147552*t147555*3.0;
                double t147562 = t147560+t147561+t147559+1.0;
                double t147563 = t147551*t147551;
                double t147564 = gamma_bb[index]*gcaa*t147550*4.0;
                double t147565 = gamma_bb[index]*gcaa*t147551*t147552*t147556*4.0;
                double t147566 = t147551*t147552*t147555*6.0;
                double t147567 = t147553*t147554*t147563;
                double t147568 = t147564+t147565+t147566+t147567+1.0;
                double t147569 = gamma_bb[index]*gcaa*t147550*2.0;
                double t147570 = t147551*t147552*t147555;
                double t147571 = t147570+t147569+1.0;
                double t147572 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t147573 = 1.0/pow(t147572,1.0/3.0);
                double t147574 = 1.0/(omega*omega);
                double t147575 = pow(t147572,2.0/3.0);
                double t147576 = exp(-t147574*t147575);
                double t147577 = gx*gx;
                double t147578 = t147577*t147577;
                double t147579 = gamma_bb[index]*gx*t147550;
                double t147580 = t147579+1.0;
                double t147581 = gamma_bb[index]*gx*t147550*3.0;
                double t147582 = gamma_bb[index]*gx*t147551*t147556*t147577;
                double t147583 = t147551*t147555*t147577*3.0;
                double t147584 = t147581+t147582+t147583+1.0;
                double t147585 = gamma_bb[index]*gx*t147550*4.0;
                double t147586 = gamma_bb[index]*gx*t147551*t147556*t147577*4.0;
                double t147587 = t147551*t147555*t147577*6.0;
                double t147588 = t147554*t147563*t147578;
                double t147589 = t147585+t147586+t147587+t147588+1.0;
                double t147590 = gamma_bb[index]*gx*t147550*2.0;
                double t147591 = t147551*t147555*t147577;
                double t147592 = t147590+t147591+1.0;
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t147534+ \
                   b3f*t147535+b2f*c*t147532+b4f*t147536*t147537))+1.0)*(a1f*c*t147532+1.0)*2.0-c0p*t147547*t147549*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t147547*t147549*2.0)*((ccaa1*gcaa*t147550)/t147558+(ccaa2*gamma_bb[index]*t147552* \
                   t147555*2.0)/t147571-ccaa1*gamma_bb[index]*t147552*t147555*1.0/(t147558*t147558)-ccaa2*t147551*t147552* \
                   1.0/(t147571*t147571)*t147555*(gcaa*t147550*2.0+gamma_bb[index]*t147552*t147555*2.0)+(ccaa4*gamma_bb[index]* \
                   t147551*t147553*t147554*4.0)/t147568+(ccaa3*gcaa*t147551*t147552*t147556*3.0)/t147562-ccaa4*t147553* \
                   t147554*t147563*1.0/(t147568*t147568)*(gcaa*t147550*4.0+gamma_bb[index]*t147552*t147555*1.2E1+gamma_bb[index]* \
                   t147551*t147553*t147554*4.0+gcaa*t147551*t147552*t147556*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t147551* \
                   t147552*1.0/(t147562*t147562)*t147556*(gcaa*t147550*3.0+gamma_bb[index]*t147552*t147555*6.0+gcaa*t147551* \
                   t147552*t147556*3.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t147573*(erf(pow(t147572,1.0/3.0)/omega) \
                   *(3.991211251234741E15/2.251799813685248E15)-omega*t147573*(-t147576+(omega*omega)*1.0/pow(t147572,2.0/ \
                   3.0)*(t147576-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*((cx1*gx*t147550)/t147580-cx1*gamma_bb[index]* \
                   1.0/(t147580*t147580)*t147555*t147577+(cx2*gamma_bb[index]*t147555*t147577*2.0)/t147592-cx2*t147551* \
                   t147555*1.0/(t147592*t147592)*t147577*(gx*t147550*2.0+gamma_bb[index]*t147555*t147577*2.0)+(cx4*gamma_bb[index]* \
                   t147551*t147554*t147578*4.0)/t147589+(cx3*gx*t147551*t147556*t147577*3.0)/t147584-cx4*t147554*t147563* \
                   t147578*1.0/(t147589*t147589)*(gx*t147550*4.0+gamma_bb[index]*t147555*t147577*1.2E1+gamma_bb[index]* \
                   t147551*t147554*t147578*4.0+gx*t147551*t147556*t147577*1.2E1)-cx3*gamma_bb[index]*gx*t147551*t147556* \
                   1.0/(t147584*t147584)*t147577*(gx*t147550*3.0+gamma_bb[index]*t147555*t147577*6.0+gx*t147551*t147556* \
                   t147577*3.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t144586 = rho_a[index]+rho_b[index];
            double t144587 = 1.0/pow(t144586,1.0/3.0);
            double t144588 = c*t144587;
            double t144589 = sqrt(t144588);
            double t144590 = b1p*t144589;
            double t144591 = pow(t144588,3.0/2.0);
            double t144592 = b3p*t144591;
            double t144593 = c*c;
            double t144594 = 1.0/pow(t144586,2.0/3.0);
            double t144595 = b4p*t144593*t144594;
            double t144596 = b2p*c*t144587;
            double t144597 = t144590+t144592+t144595+t144596;
            double t144598 = 1.0/pow(t144586,4.0/3.0);
            double t144599 = 1.0/c0p;
            double t144600 = 1.0/t144597;
            double t144601 = t144600*t144599*(1.0/2.0);
            double t144602 = t144601+1.0;
            double t144603 = a1p*c*t144587;
            double t144604 = t144603+1.0;
            double t144605 = rho_a[index]-rho_b[index];
            double t144606 = t144605*t144605;
            double t144607 = 1.0/t144586;
            double t144608 = t144605*t144607;
            double t144609 = two_13*2.0;
            double t144610 = t144609-2.0;
            double t144611 = 1.0/t144610;
            double t144612 = 1.0/c0f;
            double t144613 = b1f*t144589;
            double t144614 = b3f*t144591;
            double t144615 = b4f*t144593*t144594;
            double t144616 = b2f*c*t144587;
            double t144617 = t144613+t144614+t144615+t144616;
            double t144618 = 1.0/t144617;
            double t144619 = t144612*t144618*(1.0/2.0);
            double t144620 = t144619+1.0;
            double t144621 = log(t144620);
            double t144622 = a1f*c*t144587;
            double t144623 = t144622+1.0;
            double t144624 = log(t144602);
            double t144634 = c0f*t144621*t144623*2.0;
            double t144635 = c0p*t144604*t144624*2.0;
            double t144625 = t144634-t144635;
            double t144626 = t144608+1.0;
            double t144627 = pow(t144626,4.0/3.0);
            double t144628 = -t144608+1.0;
            double t144629 = pow(t144628,4.0/3.0);
            double t144630 = t144627+t144629-2.0;
            double t144631 = 1.0/(t144586*t144586);
            double t144662 = t144631*t144605;
            double t144632 = t144607-t144662;
            double t144633 = 1.0/(t144586*t144586*t144586*t144586);
            double t144636 = t144606*t144606;
            double t144637 = 1.0/pow(t144586,5.0/3.0);
            double t144638 = 1.0/sqrt(t144588);
            double t144639 = 1.0/t144602;
            double t144640 = 1.0/(t144597*t144597);
            double t144641 = b4p*t144637*t144593*(2.0/3.0);
            double t144642 = b2p*c*t144598*(1.0/3.0);
            double t144643 = b1p*c*t144638*t144598*(1.0/6.0);
            double t144644 = b3p*c*t144589*t144598*(1.0/2.0);
            double t144645 = t144641+t144642+t144643+t144644;
            double t144646 = t144604*t144640*t144645*t144639;
            double t144647 = 1.0/(t144586*t144586*t144586*t144586*t144586);
            double t144648 = 1.0/d2fz0;
            double t144649 = 1.0/Aa;
            double t144650 = b1a*t144589;
            double t144651 = b3a*t144591;
            double t144652 = b4a*t144593*t144594;
            double t144653 = b2a*c*t144587;
            double t144654 = t144650+t144651+t144652+t144653;
            double t144655 = 1.0/t144654;
            double t144656 = t144655*t144649*(1.0/2.0);
            double t144657 = t144656+1.0;
            double t144658 = log(t144657);
            double t144659 = a1a*c*t144587;
            double t144660 = t144659+1.0;
            double t144661 = pow(t144626,1.0/3.0);
            double t144663 = t144632*t144661*(4.0/3.0);
            double t144664 = pow(t144628,1.0/3.0);
            double t144739 = t144632*t144664*(4.0/3.0);
            double t144665 = t144663-t144739;
            double t144666 = t144633*t144636;
            double t144667 = t144666-1.0;
            double t144668 = 1.0/pow(rho_a[index],1.0/3.0);
            double t144669 = c*t144668;
            double t144670 = sqrt(t144669);
            double t144671 = b1f*t144670;
            double t144672 = pow(t144669,3.0/2.0);
            double t144673 = b3f*t144672;
            double t144674 = 1.0/pow(rho_a[index],2.0/3.0);
            double t144675 = b4f*t144593*t144674;
            double t144676 = b2f*c*t144668;
            double t144677 = t144671+t144673+t144675+t144676;
            double t144678 = 1.0/pow(rho_a[index],4.0/3.0);
            double t144679 = b1p*t144670;
            double t144680 = b3p*t144672;
            double t144681 = b4p*t144593*t144674;
            double t144682 = b2p*c*t144668;
            double t144683 = t144680+t144681+t144682+t144679;
            double t144684 = 1.0/pow(rho_a[index],5.0/3.0);
            double t144685 = 1.0/sqrt(t144669);
            double t144686 = 1.0/t144677;
            double t144687 = t144612*t144686*(1.0/2.0);
            double t144688 = t144687+1.0;
            double t144689 = 1.0/t144683;
            double t144690 = t144599*t144689*(1.0/2.0);
            double t144691 = t144690+1.0;
            double t144692 = a1p*c*t144668;
            double t144693 = t144692+1.0;
            double t144694 = 1.0/t144691;
            double t144695 = 1.0/(t144683*t144683);
            double t144696 = b4p*t144593*t144684*(2.0/3.0);
            double t144697 = b2p*c*t144678*(1.0/3.0);
            double t144698 = b1p*c*t144685*t144678*(1.0/6.0);
            double t144699 = b3p*c*t144670*t144678*(1.0/2.0);
            double t144700 = t144696+t144697+t144698+t144699;
            double t144701 = t144700*t144693*t144694*t144695;
            double t144702 = log(t144691);
            double t144703 = pow(2.0,1.0/3.0);
            double t144704 = t144703*2.0;
            double t144705 = t144704-2.0;
            double t144706 = log(t144688);
            double t144707 = a1f*c*t144668;
            double t144708 = t144707+1.0;
            double t144709 = gcab*gcab;
            double t144713 = 1.0/pow(rho_a[index],8.0/3.0);
            double t144714 = gamma_aa[index]*t144713*(1.0/2.0);
            double t144715 = 1.0/pow(rho_b[index],8.0/3.0);
            double t144716 = gamma_bb[index]*t144715*(1.0/2.0);
            double t144710 = t144714+t144716;
            double t144711 = t144710*t144710;
            double t144712 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t144717 = t144709*t144709;
            double t144718 = t144711*t144711;
            double t144719 = t144711*t144709*6.0;
            double t144720 = gcab*t144710*t144711*t144709*4.0;
            double t144721 = t144717*t144718;
            double t144722 = gcab*t144710*4.0;
            double t144723 = t144720+t144721+t144722+t144719+1.0;
            double t144724 = gcab*t144710;
            double t144725 = t144724+1.0;
            double t144726 = t144711*t144709;
            double t144727 = gcab*t144710*2.0;
            double t144728 = t144726+t144727+1.0;
            double t144729 = t144711*t144709*3.0;
            double t144730 = gcab*t144710*t144711*t144709;
            double t144731 = gcab*t144710*3.0;
            double t144732 = t144730+t144731+t144729+1.0;
            double t144733 = 1.0/t144728;
            double t144734 = 1.0/t144732;
            double t144735 = 1.0/t144725;
            double t144736 = 1.0/t144723;
            double t144737 = 1.0/pow(t144586,7.0/3.0);
            double t144738 = 1.0/pow(t144586,8.0/3.0);
            double t144740 = 1.0/t144620;
            double t144741 = 1.0/(t144617*t144617);
            double t144742 = b4f*t144637*t144593*(2.0/3.0);
            double t144743 = b2f*c*t144598*(1.0/3.0);
            double t144744 = b1f*c*t144638*t144598*(1.0/6.0);
            double t144745 = b3f*c*t144589*t144598*(1.0/2.0);
            double t144746 = t144742+t144743+t144744+t144745;
            double t144747 = a1f*c*c0f*t144621*t144598*(2.0/3.0);
            double t144749 = t144623*t144740*t144741*t144746;
            double t144750 = a1p*c*c0p*t144624*t144598*(2.0/3.0);
            double t144748 = -t144750+t144646+t144747-t144749;
            double t144751 = t144645*t144645;
            double t144752 = 1.0/pow(t144588,3.0/2.0);
            double t144753 = b4p*t144593*t144738*(1.0E1/9.0);
            double t144754 = b2p*c*t144737*(4.0/9.0);
            double t144755 = b1p*c*t144638*t144737*(2.0/9.0);
            double t144756 = b3p*c*t144737*t144589*(2.0/3.0);
            double t144757 = b3p*t144593*t144638*t144738*(1.0/1.2E1);
            double t144758 = t144753+t144754+t144755+t144756+t144757-b1p*t144752*t144593*t144738*(1.0/3.6E1);
            double t144759 = 1.0/(t144597*t144597*t144597);
            double t144760 = t144604*t144751*t144639*t144759*2.0;
            double t144761 = t144746*t144746;
            double t144762 = 1.0/(t144602*t144602);
            double t144763 = 1.0/(t144597*t144597*t144597*t144597);
            double t144764 = t144750-t144646-t144747+t144749;
            double t144765 = t144631*2.0;
            double t144766 = 1.0/(t144586*t144586*t144586);
            double t144773 = t144605*t144766*2.0;
            double t144767 = -t144773+t144765;
            double t144768 = t144632*t144632;
            double t144769 = a1p*c*c0p*t144624*t144737*(8.0/9.0);
            double t144770 = 1.0/(t144586*t144586*t144586*t144586*t144586*t144586);
            double t144771 = t144636*t144647*4.0;
            double t144781 = t144605*t144606*t144633*4.0;
            double t144772 = t144771-t144781;
            double t144774 = t144664*t144767*(4.0/3.0);
            double t144775 = 1.0/pow(t144626,2.0/3.0);
            double t144776 = t144775*t144768*(4.0/9.0);
            double t144777 = 1.0/pow(t144628,2.0/3.0);
            double t144778 = t144768*t144777*(4.0/9.0);
            double t144779 = t144774+t144776+t144778-t144661*t144767*(4.0/3.0);
            double t144780 = 1.0/t144657;
            double t144782 = 1.0/(t144654*t144654);
            double t144783 = b4a*t144637*t144593*(2.0/3.0);
            double t144784 = b2a*c*t144598*(1.0/3.0);
            double t144785 = b1a*c*t144638*t144598*(1.0/6.0);
            double t144786 = b3a*c*t144589*t144598*(1.0/2.0);
            double t144787 = t144783+t144784+t144785+t144786;
            double t144788 = t144787*t144787;
            double t144789 = t144604*t144640*t144639*t144758;
            double t144790 = 1.0/t144688;
            double t144791 = b4f*t144593*t144684*(2.0/3.0);
            double t144792 = b2f*c*t144678*(1.0/3.0);
            double t144793 = b1f*c*t144685*t144678*(1.0/6.0);
            double t144794 = b3f*c*t144670*t144678*(1.0/2.0);
            double t144795 = t144791+t144792+t144793+t144794;
            double t144796 = 1.0/(t144677*t144677);
            double t144797 = 1.0/pow(rho_a[index],7.0/3.0);
            double t144798 = 1.0/pow(t144669,3.0/2.0);
            double t144799 = t144795*t144795;
            double t144800 = t144700*t144700;
            double t144801 = 1.0/(t144683*t144683*t144683);
            double t144802 = t144800*t144801*t144693*t144694*2.0;
            double t144803 = b4p*t144713*t144593*(1.0E1/9.0);
            double t144804 = b2p*c*t144797*(4.0/9.0);
            double t144805 = b3p*t144713*t144593*t144685*(1.0/1.2E1);
            double t144806 = b1p*c*t144685*t144797*(2.0/9.0);
            double t144807 = b3p*c*t144670*t144797*(2.0/3.0);
            double t144925 = b1p*t144713*t144593*t144798*(1.0/3.6E1);
            double t144808 = t144803+t144804+t144805+t144806+t144807-t144925;
            double t144809 = 1.0/(t144691*t144691);
            double t144810 = 1.0/(t144683*t144683*t144683*t144683);
            double t144811 = a1p*c*c0p*t144702*t144797*(8.0/9.0);
            double t144812 = a1f*c*c0f*t144706*t144678*(2.0/3.0);
            double t144813 = a1p*c*c0p*t144702*t144678*(2.0/3.0);
            double t144814 = t144604*t144751*t144762*t144763*t144599*(1.0/2.0);
            double t144886 = t144708*t144790*t144795*t144796;
            double t144815 = t144701+t144812-t144813-t144886;
            double t144816 = gamma_aa[index]*gamma_aa[index];
            double t144817 = gcaa*gcaa;
            double t144818 = t144816*t144816;
            double t144819 = t144817*t144817;
            double t144820 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t144821 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t144822 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t144823 = c0f*t144706*t144708*2.0;
            double t144825 = c0p*t144702*t144693*2.0;
            double t144824 = t144823-t144825;
            double t144826 = 1.0/pow(rho_b[index],1.0/3.0);
            double t144827 = c*t144826;
            double t144828 = sqrt(t144827);
            double t144829 = pow(t144827,3.0/2.0);
            double t144830 = 1.0/pow(rho_b[index],2.0/3.0);
            double t144831 = b1p*t144828;
            double t144832 = b3p*t144829;
            double t144833 = b4p*t144830*t144593;
            double t144834 = b2p*c*t144826;
            double t144835 = t144831+t144832+t144833+t144834;
            double t144836 = 1.0/t144835;
            double t144837 = t144836*t144599*(1.0/2.0);
            double t144838 = t144837+1.0;
            double t144839 = log(t144838);
            double t144840 = a1p*c*t144826;
            double t144841 = t144840+1.0;
            double t144842 = c0p*t144841*t144839*2.0;
            double t144843 = t144611*t144630*t144633*t144625*t144636;
            double t144844 = Aa*t144611*t144630*t144660*t144648*t144658*t144667*2.0;
            double t144845 = gamma_aa[index]*gcab*t144712*(1.6E1/3.0);
            double t144846 = gamma_aa[index]*gcab*t144711*t144712*t144709*1.6E1;
            double t144847 = gamma_aa[index]*t144710*t144711*t144712*t144717*(1.6E1/3.0);
            double t144848 = gamma_aa[index]*t144710*t144712*t144709*1.6E1;
            double t144849 = t144845+t144846+t144847+t144848;
            double t144850 = 1.0/(t144725*t144725);
            double t144851 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t144852 = gamma_aa[index]*gcab*t144712*(8.0/3.0);
            double t144853 = gamma_aa[index]*t144710*t144712*t144709*(8.0/3.0);
            double t144854 = t144852+t144853;
            double t144855 = 1.0/(t144732*t144732);
            double t144856 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t144857 = 1.0/(t144723*t144723);
            double t144858 = 1.0/(t144728*t144728);
            double t144859 = gamma_aa[index]*gcab*t144712*4.0;
            double t144860 = gamma_aa[index]*gcab*t144711*t144712*t144709*4.0;
            double t144861 = gamma_aa[index]*t144710*t144712*t144709*8.0;
            double t144862 = t144860+t144861+t144859;
            double t144863 = t144611*t144705*t144824;
            double t144864 = t144825+t144863;
            double t144865 = gamma_aa[index]*gcaa*t144713*4.0;
            double t144866 = gamma_aa[index]*gcaa*t144821*t144816*t144817*4.0;
            double t144867 = t144822*t144816*t144817*6.0;
            double t144868 = t144820*t144818*t144819;
            double t144869 = t144865+t144866+t144867+t144868+1.0;
            double t144870 = 1.0/t144869;
            double t144871 = gamma_aa[index]*gcaa*t144713;
            double t144872 = t144871+1.0;
            double t144873 = 1.0/t144872;
            double t144874 = gamma_aa[index]*gcaa*t144713*3.0;
            double t144875 = gamma_aa[index]*gcaa*t144821*t144816*t144817;
            double t144876 = t144822*t144816*t144817*3.0;
            double t144877 = t144874+t144875+t144876+1.0;
            double t144878 = 1.0/t144877;
            double t144879 = gamma_aa[index]*gcaa*t144713*2.0;
            double t144880 = t144822*t144816*t144817;
            double t144881 = t144880+t144879+1.0;
            double t144882 = 1.0/t144881;
            double t144883 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t144884 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t144885 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t144887 = t144611*t144705*t144815;
            double t144888 = ccaa4*t144870*t144818*t144819*t144885*(3.2E1/3.0);
            double t144889 = ccaa1*gamma_aa[index]*gcaa*t144712*t144873*(8.0/3.0);
            double t144890 = ccaa3*gamma_aa[index]*gcaa*t144816*t144817*t144884*t144878*8.0;
            double t144891 = ccaa2*t144816*t144817*t144882*t144883*(1.6E1/3.0);
            double t144892 = 1.0/(t144872*t144872);
            double t144893 = gamma_aa[index]*gcaa*t144712*8.0;
            double t144894 = gamma_aa[index]*gcaa*t144816*t144817*t144884*8.0;
            double t144895 = t144816*t144817*t144883*1.6E1;
            double t144896 = t144893+t144894+t144895;
            double t144897 = 1.0/(t144877*t144877);
            double t144898 = gamma_aa[index]*gcaa*t144712*(3.2E1/3.0);
            double t144899 = gamma_aa[index]*gcaa*t144816*t144817*t144884*3.2E1;
            double t144900 = t144816*t144817*t144883*3.2E1;
            double t144901 = t144818*t144819*t144885*(3.2E1/3.0);
            double t144902 = t144900+t144901+t144898+t144899;
            double t144903 = 1.0/(t144869*t144869);
            double t144904 = gamma_aa[index]*gcaa*t144712*(1.6E1/3.0);
            double t144905 = t144816*t144817*t144883*(1.6E1/3.0);
            double t144906 = t144904+t144905;
            double t144907 = 1.0/(t144881*t144881);
            double t144908 = t144890+t144891+t144888+t144889-ccaa1*t144816*t144817*t144883*t144892*(8.0/3.0)- \
               ccaa4*t144820*t144902*t144903*t144818*t144819-ccaa2*t144822*t144816*t144906*t144817*t144907-ccaa3* \
               gamma_aa[index]*gcaa*t144821*t144816*t144817*t144896*t144897;
            double t144909 = -t144701+t144813+t144887;
            double t144910 = 1.0/pow(rho_a[index],1.0E1);
            double t144911 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t144912 = ccaa4*t144820*t144870*t144818*t144819;
            double t144913 = ccaa1*gamma_aa[index]*gcaa*t144713*t144873;
            double t144914 = ccaa3*gamma_aa[index]*gcaa*t144821*t144816*t144817*t144878;
            double t144915 = ccaa2*t144822*t144816*t144817*t144882;
            double t144916 = ccaa0+t144912+t144913+t144914+t144915;
            double t144917 = 1.0/(t144677*t144677*t144677);
            double t144918 = b4f*t144713*t144593*(1.0E1/9.0);
            double t144919 = b2f*c*t144797*(4.0/9.0);
            double t144920 = b3f*t144713*t144593*t144685*(1.0/1.2E1);
            double t144921 = b1f*c*t144685*t144797*(2.0/9.0);
            double t144922 = b3f*c*t144670*t144797*(2.0/3.0);
            double t144923 = t144920+t144921+t144922+t144918+t144919-b1f*t144713*t144593*t144798*(1.0/3.6E1);
            double t144924 = t144923*t144708*t144790*t144796;
            double t144926 = t144808*t144693*t144694*t144695;
            double t144927 = 1.0/(t144688*t144688);
            double t144928 = 1.0/(t144677*t144677*t144677*t144677);
            double t144929 = t144612*t144708*t144927*t144928*t144799*(1.0/2.0);
            double t144930 = t144800*t144810*t144809*t144693*t144599*(1.0/2.0);
            double t144931 = a1f*c*t144790*t144678*t144795*t144796*(2.0/3.0);
            double t144932 = a1p*c*t144700*t144694*t144695*t144678*(2.0/3.0);
            double t144933 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t144934 = 1.0/(omega*omega);
            double t144935 = pow(t144933,2.0/3.0);
            double t144938 = t144934*t144935;
            double t144936 = exp(-t144938);
            double t144937 = 1.0/pow(t144933,1.0/3.0);
            double t144939 = omega*omega;
            double t144940 = t144936-1.0;
            double t144941 = 1.0/pow(t144933,2.0/3.0);
            double t144942 = 1.0/pow(t144933,4.0/3.0);
            double t144943 = 1.0/omega;
            double t144944 = t144940*t144941*t144939*(1.0/2.0);
            double t144945 = t144944-t144936+3.0/2.0;
            double t144946 = gx*gx;
            double t144947 = t144946*t144946;
            double t144948 = pow(rho_a[index],1.0/3.0);
            double t144949 = pow(t144933,1.0/3.0);
            double t144950 = t144943*t144949;
            double t144951 = erf(t144950);
            double t144952 = t144951*(3.991211251234741E15/2.251799813685248E15);
            double t144984 = omega*t144945*t144937;
            double t144953 = t144952-t144984;
            double t144954 = gamma_aa[index]*gx*t144713*4.0;
            double t144955 = gamma_aa[index]*gx*t144821*t144816*t144946*4.0;
            double t144956 = t144822*t144816*t144946*6.0;
            double t144957 = t144820*t144818*t144947;
            double t144958 = t144954+t144955+t144956+t144957+1.0;
            double t144959 = 1.0/t144958;
            double t144960 = gamma_aa[index]*gx*t144713;
            double t144961 = t144960+1.0;
            double t144962 = 1.0/t144961;
            double t144963 = gamma_aa[index]*gx*t144713*3.0;
            double t144964 = gamma_aa[index]*gx*t144821*t144816*t144946;
            double t144965 = t144822*t144816*t144946*3.0;
            double t144966 = t144963+t144964+t144965+1.0;
            double t144967 = 1.0/t144966;
            double t144968 = gamma_aa[index]*gx*t144713*2.0;
            double t144969 = t144822*t144816*t144946;
            double t144970 = t144968+t144969+1.0;
            double t144971 = 1.0/t144970;
            double t144972 = 1.0/rho_a[index];
            double t144973 = t144936*t144972*(1.0/3.0);
            double t144974 = 1.0/pow(t144933,5.0/3.0);
            double t144975 = t144940*t144974*t144939*(2.778046668940015E15/1.40737488355328E14);
            double t144979 = t144934*t144936*t144937*(2.778046668940015E15/7.0368744177664E13);
            double t144976 = t144973+t144975-t144979;
            double t144977 = 1.0/sqrt(3.141592653589793);
            double t144978 = omega*t144942*t144945*(2.778046668940015E15/1.40737488355328E14);
            double t144980 = omega*t144937*t144976;
            double t144981 = t144941*t144943*t144936*t144977*(1.108777112152858E31/1.584563250285287E29);
            double t144982 = t144980+t144981+t144978;
            double t144983 = 1.0/pow(t144933,7.0/3.0);
            double t144985 = cx4*t144820*t144818*t144947*t144959;
            double t144986 = cx1*gamma_aa[index]*gx*t144713*t144962;
            double t144987 = cx3*gamma_aa[index]*gx*t144821*t144816*t144946*t144967;
            double t144988 = cx2*t144822*t144816*t144971*t144946;
            double t144989 = cx0+t144985+t144986+t144987+t144988;
            double t144990 = pow(rho_a[index],4.0/3.0);
            double t144991 = omega*t144942*t144953*(2.778046668940015E15/1.05553116266496E14);
            double t144992 = cx4*t144818*t144947*t144885*t144959*(3.2E1/3.0);
            double t144993 = cx1*gamma_aa[index]*gx*t144712*t144962*(8.0/3.0);
            double t144994 = cx3*gamma_aa[index]*gx*t144816*t144946*t144884*t144967*8.0;
            double t144995 = cx2*t144816*t144971*t144883*t144946*(1.6E1/3.0);
            double t144996 = 1.0/(t144961*t144961);
            double t144997 = gamma_aa[index]*gx*t144712*8.0;
            double t144998 = gamma_aa[index]*gx*t144816*t144946*t144884*8.0;
            double t144999 = t144816*t144883*t144946*1.6E1;
            double t145000 = t144997+t144998+t144999;
            double t145001 = 1.0/(t144966*t144966);
            double t145002 = gamma_aa[index]*gx*t144712*(3.2E1/3.0);
            double t145003 = gamma_aa[index]*gx*t144816*t144946*t144884*3.2E1;
            double t145004 = t144816*t144883*t144946*3.2E1;
            double t145005 = t144818*t144947*t144885*(3.2E1/3.0);
            double t145006 = t145002+t145003+t145004+t145005;
            double t145007 = 1.0/(t144958*t144958);
            double t145008 = gamma_aa[index]*gx*t144712*(1.6E1/3.0);
            double t145009 = t144816*t144883*t144946*(1.6E1/3.0);
            double t145010 = t145008+t145009;
            double t145011 = 1.0/(t144970*t144970);
            double t145012 = t144992+t144993+t144994+t144995-cx1*t144816*t144883*t144946*t144996*(8.0/3.0)-cx2* \
               t145010*t145011*t144822*t144816*t144946-cx4*t145006*t145007*t144820*t144818*t144947-cx3*gamma_aa[index]* \
               gx*t145000*t145001*t144821*t144816*t144946;
            double t145013 = t144991-omega*t144937*t144982*(4.0/3.0);
            double t145014 = omega*t144953*t144937*(4.0/3.0);
            double t145015 = t145014-1.0;
            v_rho_a_rho_a_[index] = (rho_a[index]*t144864+rho_b[index]*(t144842-t144611*t144705*(t144842-c0f* \
               log((t144612*(1.0/2.0))/(b1f*t144828+b3f*t144829+b2f*c*t144826+b4f*t144830*t144593)+1.0)*(a1f*c*t144826+ \
               1.0)*2.0))-t144586*(t144635+t144843+t144844))*(-ccab2*t144711*t144709*t144858*(gamma_aa[index]*gcab* \
               t144856*(8.8E1/9.0)+t144851*t144816*t144709*(3.2E1/9.0)+gamma_aa[index]*t144710*t144709*t144856*(8.8E1/ \
               9.0))+ccab2*t144711*t144709*1.0/(t144728*t144728*t144728)*(t144854*t144854)*2.0+ccab4*1.0/(t144723* \
               t144723*t144723)*t144717*t144718*(t144849*t144849)*2.0+ccab1*gamma_aa[index]*gcab*t144735*t144856* \
               (4.4E1/9.0)-ccab1*t144850*t144851*t144816*t144709*(3.2E1/9.0)+ccab2*t144733*t144851*t144816*t144709* \
               (3.2E1/9.0)-ccab4*t144717*t144718*t144857*(gamma_aa[index]*gcab*t144856*(1.76E2/9.0)+t144851*t144816* \
               t144709*(6.4E1/3.0)+gamma_aa[index]*t144710*t144709*t144856*(1.76E2/3.0)+t144711*t144851*t144717*t144816* \
               (6.4E1/3.0)+gamma_aa[index]*gcab*t144711*t144709*t144856*(1.76E2/3.0)+gamma_aa[index]*t144710*t144711* \
               t144717*t144856*(1.76E2/9.0)+gcab*t144710*t144851*t144816*t144709*(1.28E2/3.0))+ccab4*t144711*t144851* \
               t144717*t144816*t144736*(6.4E1/3.0)-ccab1*gamma_aa[index]*t144710*t144850*t144709*t144856*(4.4E1/9.0) \
               +ccab2*gamma_aa[index]*t144710*t144733*t144709*t144856*(8.8E1/9.0)+ccab3*gcab*t144710*t144711*1.0/ \
               (t144732*t144732*t144732)*t144709*(t144862*t144862)*2.0+ccab3*gamma_aa[index]*gcab*t144711*t144734* \
               t144709*t144856*(4.4E1/3.0)+ccab4*gamma_aa[index]*t144710*t144711*t144717*t144736*t144856*(1.76E2/ \
               9.0)-ccab2*gamma_aa[index]*t144710*t144712*t144709*t144854*t144858*(1.6E1/3.0)+ccab3*gcab*t144710* \
               t144734*t144851*t144816*t144709*(3.2E1/3.0)+ccab1*gcab*t144710*1.0/(t144725*t144725*t144725)*t144851* \
               t144816*t144709*(3.2E1/9.0)-ccab3*gcab*t144710*t144711*t144709*t144855*(gamma_aa[index]*gcab*t144856* \
               (4.4E1/3.0)+t144851*t144816*t144709*(3.2E1/3.0)+gamma_aa[index]*t144710*t144709*t144856*(8.8E1/3.0) \
               +gamma_aa[index]*gcab*t144711*t144709*t144856*(4.4E1/3.0)+gcab*t144710*t144851*t144816*t144709*(3.2E1/ \
               3.0))-ccab3*gamma_aa[index]*gcab*t144711*t144712*t144709*t144862*t144855*8.0-ccab4*gamma_aa[index]* \
               t144710*t144711*t144712*t144717*t144857*t144849*(3.2E1/3.0))+t144916*t144909*2.0+t144908*t144864*2.0+ \
               (t144635+t144843+t144844+rho_a[index]*(-t144701+t144813+t144611*t144705*(t144701+t144812-t144708*t144790* \
               t144795*t144796-a1p*c*c0p*t144702*t144678*(2.0/3.0)))+t144586*(t144646-a1p*c*c0p*t144624*t144598*(2.0/ \
               3.0)-t144611*t144630*t144625*t144636*t144647*4.0-t144611*t144630*t144633*t144636*t144748+t144611*t144633* \
               t144625*t144636*t144665+t144611*t144630*t144605*t144606*t144633*t144625*4.0-Aa*t144611*t144630*t144660* \
               t144772*t144648*t144658*2.0+Aa*t144611*t144660*t144665*t144648*t144658*t144667*2.0+t144611*t144630* \
               t144660*t144780*t144782*t144648*t144667*t144787-Aa*a1a*c*t144611*t144630*t144648*t144658*t144667*t144598* \
               (2.0/3.0))-c0p*t144702*t144693*2.0-t144611*t144705*t144824)*(ccab1*gamma_aa[index]*gcab*t144712*t144735* \
               (4.0/3.0)-ccab2*t144711*t144709*t144854*t144858-ccab4*t144717*t144718*t144857*t144849-ccab1*gamma_aa[index]* \
               t144710*t144712*t144850*t144709*(4.0/3.0)+ccab2*gamma_aa[index]*t144710*t144712*t144733*t144709*(8.0/ \
               3.0)+ccab3*gamma_aa[index]*gcab*t144711*t144712*t144734*t144709*4.0+ccab4*gamma_aa[index]*t144710* \
               t144711*t144712*t144717*t144736*(1.6E1/3.0)-ccab3*gcab*t144710*t144711*t144709*t144862*t144855)*2.0- \
               (ccab0+ccab1*gcab*t144710*t144735+ccab2*t144711*t144733*t144709+ccab4*t144717*t144718*t144736+ccab3* \
               gcab*t144710*t144711*t144734*t144709)*(-t144586*(-t144760+t144814-t144769+t144789+t144611*t144630* \
               t144633*t144636*(t144760-t144814+t144769-t144789-t144623*t144740*1.0/(t144617*t144617*t144617)*t144761* \
               2.0+t144623*t144740*t144741*(b2f*c*t144737*(4.0/9.0)+b4f*t144593*t144738*(1.0E1/9.0)+b1f*c*t144638* \
               t144737*(2.0/9.0)+b3f*c*t144737*t144589*(2.0/3.0)-b1f*t144752*t144593*t144738*(1.0/3.6E1)+b3f*t144593* \
               t144638*t144738*(1.0/1.2E1))+1.0/(t144620*t144620)*t144612*t144623*1.0/(t144617*t144617*t144617*t144617) \
               *t144761*(1.0/2.0)-a1f*c*c0f*t144621*t144737*(8.0/9.0)+a1f*c*t144740*t144741*t144746*t144598*(2.0/ \
               3.0)-a1p*c*t144640*t144645*t144639*t144598*(2.0/3.0))-t144611*t144630*t144606*t144633*t144625*1.2E1- \
               t144611*t144630*t144625*t144770*t144636*2.0E1+t144611*t144630*t144636*t144647*t144764*8.0-t144611* \
               t144633*t144636*t144665*t144764*2.0+t144611*t144625*t144636*t144647*t144665*8.0-t144611*t144633*t144625* \
               t144636*t144779+t144611*t144630*t144605*t144606*t144625*t144647*3.2E1+t144611*t144630*t144605*t144606* \
               t144633*t144748*8.0-t144611*t144605*t144606*t144633*t144625*t144665*8.0+a1p*c*t144640*t144645*t144639* \
               t144598*(2.0/3.0)+Aa*t144611*t144660*t144772*t144665*t144648*t144658*4.0-Aa*t144611*t144660*t144648* \
               t144658*t144667*t144779*2.0-Aa*t144611*t144630*t144660*t144648*t144658*(t144606*t144633*1.2E1+t144770* \
               t144636*2.0E1-t144605*t144606*t144647*3.2E1)*2.0+t144611*t144630*t144660*t144780*t144772*t144782*t144648* \
               t144787*2.0-t144611*t144660*t144780*t144665*t144782*t144648*t144667*t144787*2.0-t144611*t144630*t144660* \
               1.0/(t144654*t144654*t144654)*t144780*t144648*t144667*t144788*2.0+t144611*t144630*t144660*t144780* \
               t144782*t144648*t144667*(b2a*c*t144737*(4.0/9.0)+b4a*t144593*t144738*(1.0E1/9.0)+b1a*c*t144638*t144737* \
               (2.0/9.0)+b3a*c*t144737*t144589*(2.0/3.0)-b1a*t144752*t144593*t144738*(1.0/3.6E1)+b3a*t144593*t144638* \
               t144738*(1.0/1.2E1))-Aa*a1a*c*t144611*t144630*t144737*t144648*t144658*t144667*(8.0/9.0)-Aa*a1a*c*t144611* \
               t144630*t144772*t144648*t144658*t144598*(4.0/3.0)+Aa*a1a*c*t144611*t144665*t144648*t144658*t144667* \
               t144598*(4.0/3.0)+t144611*t144630*t144660*1.0/(t144654*t144654*t144654*t144654)*t144648*1.0/(t144657* \
               t144657)*t144649*t144667*t144788*(1.0/2.0)+a1a*c*t144611*t144630*t144780*t144782*t144648*t144667*t144598* \
               t144787*(2.0/3.0))+rho_a[index]*(-t144802-t144811+t144930+t144932+t144926+t144611*t144705*(t144802+ \
               t144811+t144931+t144924+t144929-t144708*t144790*t144917*t144799*2.0-t144808*t144693*t144694*t144695- \
               a1f*c*c0f*t144706*t144797*(8.0/9.0)-t144800*t144810*t144809*t144693*t144599*(1.0/2.0)-a1p*c*t144700* \
               t144694*t144695*t144678*(2.0/3.0)))+t144611*t144705*t144815*2.0+t144604*t144640*t144645*t144639*2.0- \
               t144700*t144693*t144694*t144695*2.0+a1p*c*c0p*t144702*t144678*(4.0/3.0)-a1p*c*c0p*t144624*t144598* \
               (4.0/3.0)+t144611*t144630*t144633*t144636*t144764*2.0-t144611*t144630*t144625*t144636*t144647*8.0+ \
               t144611*t144633*t144625*t144636*t144665*2.0+t144611*t144630*t144605*t144606*t144633*t144625*8.0-Aa* \
               t144611*t144630*t144660*t144772*t144648*t144658*4.0+Aa*t144611*t144660*t144665*t144648*t144658*t144667* \
               4.0+t144611*t144630*t144660*t144780*t144782*t144648*t144667*t144787*2.0-Aa*a1a*c*t144611*t144630*t144648* \
               t144658*t144667*t144598*(4.0/3.0))-rho_a[index]*t144864*(ccaa1*gamma_aa[index]*gcaa*t144873*t144856* \
               (8.8E1/9.0)-ccaa1*t144851*t144816*t144817*t144892*2.4E1+ccaa2*t144851*t144816*t144817*t144882*(3.04E2/ \
               9.0)+ccaa4*t144911*t144870*t144818*t144819*(1.12E3/9.0)-ccaa2*t144816*t144906*t144817*t144907*t144883* \
               (3.2E1/3.0)-ccaa4*t144902*t144903*t144818*t144819*t144885*(6.4E1/3.0)-ccaa2*t144822*t144816*t144817* \
               t144907*(gamma_aa[index]*gcaa*t144856*(1.76E2/9.0)+t144851*t144816*t144817*(3.04E2/9.0))-ccaa4*t144820* \
               t144903*t144818*t144819*(gamma_aa[index]*gcaa*t144856*(3.52E2/9.0)+t144851*t144816*t144817*(6.08E2/ \
               3.0)+t144911*t144818*t144819*(1.12E3/9.0)+gamma_aa[index]*gcaa*t144910*t144816*t144817*2.88E2)+ccaa2* \
               t144822*t144816*(t144906*t144906)*t144817*1.0/(t144881*t144881*t144881)*2.0+ccaa4*t144820*(t144902* \
               t144902)*t144818*t144819*1.0/(t144869*t144869*t144869)*2.0+ccaa3*gamma_aa[index]*gcaa*t144910*t144816* \
               t144817*t144878*7.2E1+ccaa1*gamma_aa[index]*gcaa*t144910*t144816*t144817*1.0/(t144872*t144872*t144872) \
               *(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t144821*t144816*t144817*1.0/(t144877*t144877*t144877)*(t144896* \
               t144896)*2.0-ccaa3*gamma_aa[index]*gcaa*t144821*t144816*t144817*t144897*(gamma_aa[index]*gcaa*t144856* \
               (8.8E1/3.0)+t144851*t144816*t144817*(3.04E2/3.0)+gamma_aa[index]*gcaa*t144910*t144816*t144817*7.2E1) \
               -ccaa3*gamma_aa[index]*gcaa*t144816*t144817*t144884*t144896*t144897*1.6E1)+rho_a[index]*t144916*(- \
               t144802-t144811+t144930+t144932+t144926+t144611*t144705*(t144802+t144811-t144930+t144931-t144932+t144924- \
               t144926+t144929-t144708*t144790*t144917*t144799*2.0-a1f*c*c0f*t144706*t144797*(8.0/9.0)))-rho_a[index]* \
               t144908*t144909*2.0-c0*t145015*t144990*(cx1*gamma_aa[index]*gx*t144962*t144856*(8.8E1/9.0)-cx1*t144851* \
               t144816*t144946*t144996*2.4E1+cx2*t144851*t144816*t144971*t144946*(3.04E2/9.0)+cx4*t144911*t144818* \
               t144947*t144959*(1.12E3/9.0)-cx2*t145010*t145011*t144816*t144883*t144946*(3.2E1/3.0)-cx4*t145006*t145007* \
               t144818*t144947*t144885*(6.4E1/3.0)-cx2*t145011*t144822*t144816*t144946*(gamma_aa[index]*gx*t144856* \
               (1.76E2/9.0)+t144851*t144816*t144946*(3.04E2/9.0))-cx4*t145007*t144820*t144818*t144947*(gamma_aa[index]* \
               gx*t144856*(3.52E2/9.0)+t144911*t144818*t144947*(1.12E3/9.0)+t144851*t144816*t144946*(6.08E2/3.0)+ \
               gamma_aa[index]*gx*t144910*t144816*t144946*2.88E2)+cx2*(t145010*t145010)*t144822*t144816*1.0/(t144970* \
               t144970*t144970)*t144946*2.0+cx4*(t145006*t145006)*t144820*t144818*t144947*1.0/(t144958*t144958*t144958) \
               *2.0+cx3*gamma_aa[index]*gx*t144910*t144816*t144946*t144967*7.2E1+cx1*gamma_aa[index]*gx*t144910*t144816* \
               1.0/(t144961*t144961*t144961)*t144946*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*(t145000*t145000)*t144821* \
               t144816*t144946*1.0/(t144966*t144966*t144966)*2.0-cx3*gamma_aa[index]*gx*t145001*t144821*t144816*t144946* \
               (gamma_aa[index]*gx*t144856*(8.8E1/3.0)+t144851*t144816*t144946*(3.04E2/3.0)+gamma_aa[index]*gx*t144910* \
               t144816*t144946*7.2E1)-cx3*gamma_aa[index]*gx*t145000*t145001*t144816*t144946*t144884*1.6E1)-c0*t145012* \
               t145013*t144990*2.0+c0*t145012*t145015*t144948*(8.0/3.0)-c0*t145015*t144674*t144989*(4.0/9.0)+c0*t145013* \
               t144948*t144989*(8.0/3.0)+c0*t144990*t144989*(omega*t144942*t144982*(2.778046668940015E15/5.2776558133248E13) \
               -omega*t144953*t144983*(7.717543294808713E30/3.713820117856141E27)+omega*t144937*(omega*t144942*t144976* \
               (2.778046668940015E15/7.0368744177664E13)+omega*t144945*t144983*(7.717543294808713E30/4.951760157141521E27) \
               +omega*t144937*(1.0/(rho_a[index]*rho_a[index])*t144936*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t144941* \
               t144936*(7.717543294808713E30/4.951760157141521E27)+t144940*1.0/pow(t144933,8.0/3.0)*t144939*(3.858771647404357E31/ \
               1.980704062856608E28)-t144942*t144934*t144936*(7.717543294808713E30/9.903520314283042E27)+t144934* \
               t144936*t144972*t144937*(2.778046668940015E15/2.11106232532992E14))+t144943*t144936*t144974*t144977* \
               (3.080234563013177E46/1.115037259926531E43)+1.0/(omega*omega*omega)*t144936*t144972*t144977*(1.108777112152858E31/ \
               2.37684487542793E29))*(4.0/3.0));
        } else if (rho_a[index] > cutoff_) {
            double t148351 = 1.0/pow(rho_a[index],1.0/3.0);
            double t148352 = c*t148351;
            double t148353 = sqrt(t148352);
            double t148354 = b1f*t148353;
            double t148355 = pow(t148352,3.0/2.0);
            double t148356 = b3f*t148355;
            double t148357 = c*c;
            double t148358 = 1.0/pow(rho_a[index],2.0/3.0);
            double t148359 = b4f*t148357*t148358;
            double t148360 = b2f*c*t148351;
            double t148361 = t148360+t148354+t148356+t148359;
            double t148362 = 1.0/pow(rho_a[index],4.0/3.0);
            double t148363 = b1p*t148353;
            double t148364 = b3p*t148355;
            double t148365 = b4p*t148357*t148358;
            double t148366 = b2p*c*t148351;
            double t148367 = t148363+t148364+t148365+t148366;
            double t148368 = 1.0/pow(rho_a[index],5.0/3.0);
            double t148369 = 1.0/sqrt(t148352);
            double t148370 = 1.0/c0f;
            double t148371 = 1.0/t148361;
            double t148372 = t148370*t148371*(1.0/2.0);
            double t148373 = t148372+1.0;
            double t148374 = 1.0/c0p;
            double t148375 = 1.0/t148367;
            double t148376 = t148374*t148375*(1.0/2.0);
            double t148377 = t148376+1.0;
            double t148378 = a1p*c*t148351;
            double t148379 = t148378+1.0;
            double t148380 = 1.0/t148377;
            double t148381 = 1.0/(t148367*t148367);
            double t148382 = b4p*t148357*t148368*(2.0/3.0);
            double t148383 = b2p*c*t148362*(1.0/3.0);
            double t148384 = b1p*c*t148362*t148369*(1.0/6.0);
            double t148385 = b3p*c*t148353*t148362*(1.0/2.0);
            double t148386 = t148382+t148383+t148384+t148385;
            double t148387 = t148380*t148381*t148386*t148379;
            double t148388 = log(t148377);
            double t148389 = gamma_aa[index]*gamma_aa[index];
            double t148390 = gcaa*gcaa;
            double t148391 = t148389*t148389;
            double t148392 = t148390*t148390;
            double t148393 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t148394 = 1.0/pow(rho_a[index],8.0/3.0);
            double t148395 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t148396 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t148397 = pow(2.0,1.0/3.0);
            double t148398 = t148397*2.0;
            double t148399 = t148398-2.0;
            double t148400 = two_13*2.0;
            double t148401 = t148400-2.0;
            double t148402 = 1.0/t148401;
            double t148403 = log(t148373);
            double t148404 = a1f*c*t148351;
            double t148405 = t148404+1.0;
            double t148406 = gamma_aa[index]*gcaa*t148394*4.0;
            double t148407 = gamma_aa[index]*gcaa*t148390*t148395*t148389*4.0;
            double t148408 = t148390*t148396*t148389*6.0;
            double t148409 = t148391*t148392*t148393;
            double t148410 = t148406+t148407+t148408+t148409+1.0;
            double t148411 = 1.0/t148410;
            double t148412 = gamma_aa[index]*gcaa*t148394;
            double t148413 = t148412+1.0;
            double t148414 = 1.0/t148413;
            double t148415 = gamma_aa[index]*gcaa*t148394*3.0;
            double t148416 = gamma_aa[index]*gcaa*t148390*t148395*t148389;
            double t148417 = t148390*t148396*t148389*3.0;
            double t148418 = t148415+t148416+t148417+1.0;
            double t148419 = 1.0/t148418;
            double t148420 = gamma_aa[index]*gcaa*t148394*2.0;
            double t148421 = t148390*t148396*t148389;
            double t148422 = t148420+t148421+1.0;
            double t148423 = 1.0/t148422;
            double t148424 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t148425 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t148426 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t148427 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t148428 = 1.0/t148373;
            double t148429 = 1.0/(t148361*t148361);
            double t148430 = b4f*t148357*t148368*(2.0/3.0);
            double t148431 = b2f*c*t148362*(1.0/3.0);
            double t148432 = b1f*c*t148362*t148369*(1.0/6.0);
            double t148433 = b3f*c*t148353*t148362*(1.0/2.0);
            double t148434 = t148430+t148431+t148432+t148433;
            double t148435 = a1f*c*c0f*t148403*t148362*(2.0/3.0);
            double t148436 = a1p*c*c0p*t148362*t148388*(2.0/3.0);
            double t148437 = ccaa4*t148411*t148391*t148427*t148392*(3.2E1/3.0);
            double t148438 = ccaa1*gamma_aa[index]*gcaa*t148414*t148425*(8.0/3.0);
            double t148439 = ccaa3*gamma_aa[index]*gcaa*t148390*t148426*t148419*t148389*8.0;
            double t148440 = ccaa2*t148423*t148424*t148390*t148389*(1.6E1/3.0);
            double t148441 = 1.0/(t148413*t148413);
            double t148442 = gamma_aa[index]*gcaa*t148425*8.0;
            double t148443 = gamma_aa[index]*gcaa*t148390*t148426*t148389*8.0;
            double t148444 = t148424*t148390*t148389*1.6E1;
            double t148445 = t148442+t148443+t148444;
            double t148446 = 1.0/(t148418*t148418);
            double t148447 = gamma_aa[index]*gcaa*t148425*(3.2E1/3.0);
            double t148448 = gamma_aa[index]*gcaa*t148390*t148426*t148389*3.2E1;
            double t148449 = t148424*t148390*t148389*3.2E1;
            double t148450 = t148391*t148427*t148392*(3.2E1/3.0);
            double t148451 = t148450+t148447+t148448+t148449;
            double t148452 = 1.0/(t148410*t148410);
            double t148453 = gamma_aa[index]*gcaa*t148425*(1.6E1/3.0);
            double t148454 = t148424*t148390*t148389*(1.6E1/3.0);
            double t148455 = t148453+t148454;
            double t148456 = 1.0/(t148422*t148422);
            double t148457 = t148440+t148437+t148438+t148439-ccaa1*t148441*t148424*t148390*t148389*(8.0/3.0)- \
               ccaa4*t148451*t148452*t148391*t148392*t148393-ccaa2*t148390*t148455*t148456*t148396*t148389-ccaa3* \
               gamma_aa[index]*gcaa*t148390*t148445*t148446*t148395*t148389;
            double t148458 = c0f*t148403*t148405*2.0;
            double t148459 = c0p*t148379*t148388*2.0;
            double t148460 = 1.0/pow(rho_a[index],1.0E1);
            double t148461 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t148462 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t148463 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t148464 = ccaa4*t148411*t148391*t148392*t148393;
            double t148465 = ccaa1*gamma_aa[index]*gcaa*t148414*t148394;
            double t148466 = ccaa3*gamma_aa[index]*gcaa*t148390*t148419*t148395*t148389;
            double t148467 = ccaa2*t148423*t148390*t148396*t148389;
            double t148468 = ccaa0+t148464+t148465+t148466+t148467;
            double t148469 = 1.0/pow(rho_a[index],7.0/3.0);
            double t148470 = 1.0/pow(t148352,3.0/2.0);
            double t148471 = t148434*t148434;
            double t148472 = t148386*t148386;
            double t148473 = 1.0/(t148367*t148367*t148367);
            double t148474 = t148380*t148472*t148473*t148379*2.0;
            double t148475 = b4p*t148357*t148394*(1.0E1/9.0);
            double t148476 = b2p*c*t148469*(4.0/9.0);
            double t148477 = b3p*t148357*t148394*t148369*(1.0/1.2E1);
            double t148478 = b1p*c*t148369*t148469*(2.0/9.0);
            double t148479 = b3p*c*t148353*t148469*(2.0/3.0);
            double t148480 = t148475+t148476+t148477+t148478+t148479-b1p*t148470*t148357*t148394*(1.0/3.6E1);
            double t148481 = 1.0/(t148377*t148377);
            double t148482 = 1.0/(t148367*t148367*t148367*t148367);
            double t148483 = a1p*c*c0p*t148388*t148469*(8.0/9.0);
            double t148484 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
            double t148485 = 1.0/(omega*omega);
            double t148486 = pow(t148484,2.0/3.0);
            double t148489 = t148485*t148486;
            double t148487 = exp(-t148489);
            double t148488 = 1.0/pow(t148484,1.0/3.0);
            double t148490 = omega*omega;
            double t148491 = t148487-1.0;
            double t148492 = 1.0/pow(t148484,2.0/3.0);
            double t148493 = 1.0/pow(t148484,4.0/3.0);
            double t148494 = 1.0/omega;
            double t148495 = t148490*t148491*t148492*(1.0/2.0);
            double t148496 = t148495-t148487+3.0/2.0;
            double t148497 = gx*gx;
            double t148498 = t148497*t148497;
            double t148499 = pow(rho_a[index],1.0/3.0);
            double t148500 = pow(t148484,1.0/3.0);
            double t148501 = t148500*t148494;
            double t148502 = erf(t148501);
            double t148503 = t148502*(3.991211251234741E15/2.251799813685248E15);
            double t148535 = omega*t148496*t148488;
            double t148504 = t148503-t148535;
            double t148505 = gamma_aa[index]*gx*t148394*4.0;
            double t148506 = gamma_aa[index]*gx*t148395*t148389*t148497*4.0;
            double t148507 = t148396*t148389*t148497*6.0;
            double t148508 = t148391*t148393*t148498;
            double t148509 = t148505+t148506+t148507+t148508+1.0;
            double t148510 = 1.0/t148509;
            double t148511 = gamma_aa[index]*gx*t148394;
            double t148512 = t148511+1.0;
            double t148513 = 1.0/t148512;
            double t148514 = gamma_aa[index]*gx*t148394*3.0;
            double t148515 = gamma_aa[index]*gx*t148395*t148389*t148497;
            double t148516 = t148396*t148389*t148497*3.0;
            double t148517 = t148514+t148515+t148516+1.0;
            double t148518 = 1.0/t148517;
            double t148519 = gamma_aa[index]*gx*t148394*2.0;
            double t148520 = t148396*t148389*t148497;
            double t148521 = t148520+t148519+1.0;
            double t148522 = 1.0/t148521;
            double t148523 = 1.0/rho_a[index];
            double t148524 = t148523*t148487*(1.0/3.0);
            double t148525 = 1.0/pow(t148484,5.0/3.0);
            double t148526 = t148525*t148490*t148491*(2.778046668940015E15/1.40737488355328E14);
            double t148530 = t148485*t148487*t148488*(2.778046668940015E15/7.0368744177664E13);
            double t148527 = -t148530+t148524+t148526;
            double t148528 = 1.0/sqrt(3.141592653589793);
            double t148529 = omega*t148493*t148496*(2.778046668940015E15/1.40737488355328E14);
            double t148531 = omega*t148527*t148488;
            double t148532 = t148492*t148528*t148494*t148487*(1.108777112152858E31/1.584563250285287E29);
            double t148533 = t148531+t148532+t148529;
            double t148534 = 1.0/pow(t148484,7.0/3.0);
            double t148536 = cx4*t148510*t148391*t148393*t148498;
            double t148537 = cx1*gamma_aa[index]*gx*t148513*t148394;
            double t148538 = cx3*gamma_aa[index]*gx*t148518*t148395*t148389*t148497;
            double t148539 = cx2*t148522*t148396*t148389*t148497;
            double t148540 = cx0+t148536+t148537+t148538+t148539;
            double t148541 = pow(rho_a[index],4.0/3.0);
            double t148542 = omega*t148504*t148493*(2.778046668940015E15/1.05553116266496E14);
            double t148543 = cx4*t148510*t148391*t148427*t148498*(3.2E1/3.0);
            double t148544 = cx1*gamma_aa[index]*gx*t148513*t148425*(8.0/3.0);
            double t148545 = cx3*gamma_aa[index]*gx*t148426*t148518*t148389*t148497*8.0;
            double t148546 = cx2*t148522*t148424*t148389*t148497*(1.6E1/3.0);
            double t148547 = 1.0/(t148512*t148512);
            double t148548 = gamma_aa[index]*gx*t148425*8.0;
            double t148549 = gamma_aa[index]*gx*t148426*t148389*t148497*8.0;
            double t148550 = t148424*t148389*t148497*1.6E1;
            double t148551 = t148550+t148548+t148549;
            double t148552 = 1.0/(t148517*t148517);
            double t148553 = gamma_aa[index]*gx*t148425*(3.2E1/3.0);
            double t148554 = gamma_aa[index]*gx*t148426*t148389*t148497*3.2E1;
            double t148555 = t148424*t148389*t148497*3.2E1;
            double t148556 = t148391*t148427*t148498*(3.2E1/3.0);
            double t148557 = t148553+t148554+t148555+t148556;
            double t148558 = 1.0/(t148509*t148509);
            double t148559 = gamma_aa[index]*gx*t148425*(1.6E1/3.0);
            double t148560 = t148424*t148389*t148497*(1.6E1/3.0);
            double t148561 = t148560+t148559;
            double t148562 = 1.0/(t148521*t148521);
            double t148563 = t148543+t148544+t148545+t148546-cx1*t148424*t148547*t148389*t148497*(8.0/3.0)-cx2* \
               t148561*t148562*t148396*t148389*t148497-cx4*t148391*t148393*t148557*t148558*t148498-cx3*gamma_aa[index]* \
               gx*t148551*t148552*t148395*t148389*t148497;
            double t148564 = t148542-omega*t148533*t148488*(4.0/3.0);
            double t148565 = omega*t148504*t148488*(4.0/3.0);
            double t148566 = t148565-1.0;
            v_rho_a_rho_a_[index] = t148457*(t148459+t148402*t148399*(t148458-c0p*t148379*t148388*2.0))*2.0+t148468* \
               (t148436-t148387+t148402*t148399*(t148435+t148387-t148405*t148434*t148428*t148429-a1p*c*c0p*t148362* \
               t148388*(2.0/3.0)))*2.0+rho_a[index]*t148468*(-t148474-t148483+t148402*t148399*(t148474+t148483-t148380* \
               t148381*t148480*t148379-t148405*1.0/(t148361*t148361*t148361)*t148471*t148428*2.0+t148405*t148428* \
               t148429*(b2f*c*t148469*(4.0/9.0)+b4f*t148357*t148394*(1.0E1/9.0)+b1f*c*t148369*t148469*(2.0/9.0)+b3f* \
               c*t148353*t148469*(2.0/3.0)-b1f*t148470*t148357*t148394*(1.0/3.6E1)+b3f*t148357*t148394*t148369*(1.0/ \
               1.2E1))+t148405*1.0/(t148361*t148361*t148361*t148361)*t148370*t148471*1.0/(t148373*t148373)*(1.0/2.0) \
               -a1f*c*c0f*t148403*t148469*(8.0/9.0)-t148472*t148481*t148374*t148482*t148379*(1.0/2.0)+a1f*c*t148362* \
               t148434*t148428*t148429*(2.0/3.0)-a1p*c*t148362*t148380*t148381*t148386*(2.0/3.0))+t148380*t148381* \
               t148480*t148379+t148472*t148481*t148374*t148482*t148379*(1.0/2.0)+a1p*c*t148362*t148380*t148381*t148386* \
               (2.0/3.0))-rho_a[index]*t148457*(t148436-t148387+t148402*t148399*(t148435-t148436+t148387-t148405* \
               t148434*t148428*t148429))*2.0-rho_a[index]*(t148459+t148402*t148399*(t148458-t148459))*(ccaa1*gamma_aa[index]* \
               gcaa*t148414*t148462*(8.8E1/9.0)+ccaa4*t148411*t148391*t148463*t148392*(1.12E3/9.0)-ccaa1*t148441* \
               t148461*t148390*t148389*2.4E1+ccaa2*t148423*t148461*t148390*t148389*(3.04E2/9.0)-ccaa4*t148451*t148452* \
               t148391*t148427*t148392*(6.4E1/3.0)-ccaa2*t148424*t148390*t148455*t148456*t148389*(3.2E1/3.0)-ccaa2* \
               t148390*t148456*t148396*t148389*(gamma_aa[index]*gcaa*t148462*(1.76E2/9.0)+t148461*t148390*t148389* \
               (3.04E2/9.0))-ccaa4*t148452*t148391*t148392*t148393*(gamma_aa[index]*gcaa*t148462*(3.52E2/9.0)+t148391* \
               t148463*t148392*(1.12E3/9.0)+t148461*t148390*t148389*(6.08E2/3.0)+gamma_aa[index]*gcaa*t148460*t148390* \
               t148389*2.88E2)+ccaa4*1.0/(t148410*t148410*t148410)*(t148451*t148451)*t148391*t148392*t148393*2.0+ \
               ccaa2*1.0/(t148422*t148422*t148422)*t148390*(t148455*t148455)*t148396*t148389*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t148460*t148390*t148419*t148389*7.2E1+ccaa1*gamma_aa[index]*gcaa*1.0/(t148413*t148413*t148413) \
               *t148460*t148390*t148389*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*t148390*1.0/(t148418*t148418*t148418) \
               *(t148445*t148445)*t148395*t148389*2.0-ccaa3*gamma_aa[index]*gcaa*t148390*t148446*t148395*t148389* \
               (gamma_aa[index]*gcaa*t148462*(8.8E1/3.0)+t148461*t148390*t148389*(3.04E2/3.0)+gamma_aa[index]*gcaa* \
               t148460*t148390*t148389*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t148390*t148426*t148445*t148446*t148389* \
               1.6E1)-c0*t148541*t148566*(cx1*gamma_aa[index]*gx*t148513*t148462*(8.8E1/9.0)-cx1*t148461*t148547* \
               t148389*t148497*2.4E1+cx2*t148522*t148461*t148389*t148497*(3.04E2/9.0)+cx4*t148510*t148391*t148463* \
               t148498*(1.12E3/9.0)-cx2*t148424*t148561*t148562*t148389*t148497*(3.2E1/3.0)-cx4*t148391*t148427*t148557* \
               t148558*t148498*(6.4E1/3.0)-cx2*t148562*t148396*t148389*t148497*(gamma_aa[index]*gx*t148462*(1.76E2/ \
               9.0)+t148461*t148389*t148497*(3.04E2/9.0))-cx4*t148391*t148393*t148558*t148498*(gamma_aa[index]*gx* \
               t148462*(3.52E2/9.0)+t148391*t148463*t148498*(1.12E3/9.0)+t148461*t148389*t148497*(6.08E2/3.0)+gamma_aa[index]* \
               gx*t148460*t148389*t148497*2.88E2)+cx2*1.0/(t148521*t148521*t148521)*(t148561*t148561)*t148396*t148389* \
               t148497*2.0+cx4*t148391*1.0/(t148509*t148509*t148509)*t148393*(t148557*t148557)*t148498*2.0+cx3*gamma_aa[index]* \
               gx*t148460*t148518*t148389*t148497*7.2E1+cx1*gamma_aa[index]*gx*1.0/(t148512*t148512*t148512)*t148460* \
               t148389*t148497*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*(t148551*t148551)*1.0/(t148517*t148517*t148517) \
               *t148395*t148389*t148497*2.0-cx3*gamma_aa[index]*gx*t148552*t148395*t148389*t148497*(gamma_aa[index]* \
               gx*t148462*(8.8E1/3.0)+t148461*t148389*t148497*(3.04E2/3.0)+gamma_aa[index]*gx*t148460*t148389*t148497* \
               7.2E1)-cx3*gamma_aa[index]*gx*t148551*t148426*t148552*t148389*t148497*1.6E1)-c0*t148541*t148563*t148564* \
               2.0-c0*t148540*t148358*t148566*(4.0/9.0)+c0*t148540*t148564*t148499*(8.0/3.0)+c0*t148563*t148566*t148499* \
               (8.0/3.0)+c0*t148540*t148541*(omega*t148504*t148534*(-7.717543294808713E30/3.713820117856141E27)+omega* \
               t148533*t148493*(2.778046668940015E15/5.2776558133248E13)+omega*t148488*(omega*t148527*t148493*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t148534*t148496*(7.717543294808713E30/4.951760157141521E27)+omega*t148488* \
               (1.0/(rho_a[index]*rho_a[index])*t148487*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t148492*t148487*(7.717543294808713E30/ \
               4.951760157141521E27)+t148490*t148491*1.0/pow(t148484,8.0/3.0)*(3.858771647404357E31/1.980704062856608E28) \
               -t148493*t148485*t148487*(7.717543294808713E30/9.903520314283042E27)+t148523*t148485*t148487*t148488* \
               (2.778046668940015E15/2.11106232532992E14))+t148525*t148528*t148494*t148487*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t148523*t148528*t148487*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t145017 = rho_a[index]+rho_b[index];
            double t145018 = 1.0/pow(t145017,1.0/3.0);
            double t145019 = c*t145018;
            double t145020 = sqrt(t145019);
            double t145021 = b1p*t145020;
            double t145022 = pow(t145019,3.0/2.0);
            double t145023 = b3p*t145022;
            double t145024 = c*c;
            double t145025 = 1.0/pow(t145017,2.0/3.0);
            double t145026 = b4p*t145024*t145025;
            double t145027 = b2p*c*t145018;
            double t145028 = t145021+t145023+t145026+t145027;
            double t145029 = 1.0/pow(t145017,4.0/3.0);
            double t145030 = 1.0/c0p;
            double t145031 = 1.0/t145028;
            double t145032 = t145030*t145031*(1.0/2.0);
            double t145033 = t145032+1.0;
            double t145034 = a1p*c*t145018;
            double t145035 = t145034+1.0;
            double t145036 = rho_a[index]-rho_b[index];
            double t145037 = t145036*t145036;
            double t145038 = 1.0/t145017;
            double t145039 = t145036*t145038;
            double t145040 = two_13*2.0;
            double t145041 = t145040-2.0;
            double t145042 = 1.0/t145041;
            double t145043 = 1.0/c0f;
            double t145044 = b1f*t145020;
            double t145045 = b3f*t145022;
            double t145046 = b4f*t145024*t145025;
            double t145047 = b2f*c*t145018;
            double t145048 = t145044+t145045+t145046+t145047;
            double t145049 = 1.0/t145048;
            double t145050 = t145043*t145049*(1.0/2.0);
            double t145051 = t145050+1.0;
            double t145052 = log(t145051);
            double t145053 = a1f*c*t145018;
            double t145054 = t145053+1.0;
            double t145055 = log(t145033);
            double t145065 = c0f*t145052*t145054*2.0;
            double t145066 = c0p*t145035*t145055*2.0;
            double t145056 = t145065-t145066;
            double t145057 = t145039+1.0;
            double t145058 = pow(t145057,4.0/3.0);
            double t145059 = -t145039+1.0;
            double t145060 = pow(t145059,4.0/3.0);
            double t145061 = t145060+t145058-2.0;
            double t145062 = 1.0/(t145017*t145017);
            double t145093 = t145062*t145036;
            double t145063 = t145038-t145093;
            double t145064 = 1.0/(t145017*t145017*t145017*t145017);
            double t145067 = t145037*t145037;
            double t145068 = 1.0/pow(t145017,5.0/3.0);
            double t145069 = 1.0/sqrt(t145019);
            double t145070 = 1.0/t145033;
            double t145071 = 1.0/(t145028*t145028);
            double t145072 = b4p*t145024*t145068*(2.0/3.0);
            double t145073 = b2p*c*t145029*(1.0/3.0);
            double t145074 = b1p*c*t145029*t145069*(1.0/6.0);
            double t145075 = b3p*c*t145020*t145029*(1.0/2.0);
            double t145076 = t145072+t145073+t145074+t145075;
            double t145077 = t145070*t145035*t145071*t145076;
            double t145078 = 1.0/(t145017*t145017*t145017*t145017*t145017);
            double t145079 = 1.0/d2fz0;
            double t145080 = 1.0/Aa;
            double t145081 = b1a*t145020;
            double t145082 = b3a*t145022;
            double t145083 = b4a*t145024*t145025;
            double t145084 = b2a*c*t145018;
            double t145085 = t145081+t145082+t145083+t145084;
            double t145086 = 1.0/t145085;
            double t145087 = t145080*t145086*(1.0/2.0);
            double t145088 = t145087+1.0;
            double t145089 = log(t145088);
            double t145090 = a1a*c*t145018;
            double t145091 = t145090+1.0;
            double t145092 = pow(t145057,1.0/3.0);
            double t145094 = t145063*t145092*(4.0/3.0);
            double t145095 = pow(t145059,1.0/3.0);
            double t145239 = t145063*t145095*(4.0/3.0);
            double t145096 = t145094-t145239;
            double t145097 = t145064*t145067;
            double t145098 = t145097-1.0;
            double t145099 = 1.0/pow(rho_a[index],1.0/3.0);
            double t145100 = c*t145099;
            double t145101 = sqrt(t145100);
            double t145102 = b1f*t145101;
            double t145103 = pow(t145100,3.0/2.0);
            double t145104 = b3f*t145103;
            double t145105 = 1.0/pow(rho_a[index],2.0/3.0);
            double t145106 = b4f*t145024*t145105;
            double t145107 = b2f*c*t145099;
            double t145108 = t145102+t145104+t145106+t145107;
            double t145109 = 1.0/pow(rho_a[index],4.0/3.0);
            double t145110 = b1p*t145101;
            double t145111 = b3p*t145103;
            double t145112 = b4p*t145024*t145105;
            double t145113 = b2p*c*t145099;
            double t145114 = t145110+t145111+t145112+t145113;
            double t145115 = 1.0/pow(rho_a[index],5.0/3.0);
            double t145116 = 1.0/sqrt(t145100);
            double t145117 = 1.0/t145108;
            double t145118 = t145043*t145117*(1.0/2.0);
            double t145119 = t145118+1.0;
            double t145120 = 1.0/t145114;
            double t145121 = t145030*t145120*(1.0/2.0);
            double t145122 = t145121+1.0;
            double t145123 = a1p*c*t145099;
            double t145124 = t145123+1.0;
            double t145125 = 1.0/t145122;
            double t145126 = 1.0/(t145114*t145114);
            double t145127 = b4p*t145024*t145115*(2.0/3.0);
            double t145128 = b2p*c*t145109*(1.0/3.0);
            double t145129 = b1p*c*t145116*t145109*(1.0/6.0);
            double t145130 = b3p*c*t145101*t145109*(1.0/2.0);
            double t145131 = t145130+t145127+t145128+t145129;
            double t145132 = t145131*t145124*t145125*t145126;
            double t145133 = log(t145122);
            double t145134 = pow(2.0,1.0/3.0);
            double t145135 = t145134*2.0;
            double t145136 = t145135-2.0;
            double t145137 = log(t145119);
            double t145138 = a1f*c*t145099;
            double t145139 = t145138+1.0;
            double t145140 = gcab*gcab;
            double t145144 = 1.0/pow(rho_a[index],8.0/3.0);
            double t145145 = gamma_aa[index]*t145144*(1.0/2.0);
            double t145146 = 1.0/pow(rho_b[index],8.0/3.0);
            double t145147 = gamma_bb[index]*t145146*(1.0/2.0);
            double t145141 = t145145+t145147;
            double t145142 = t145141*t145141;
            double t145143 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t145148 = t145140*t145140;
            double t145149 = t145142*t145142;
            double t145150 = t145140*t145142*6.0;
            double t145151 = gcab*t145140*t145141*t145142*4.0;
            double t145152 = t145148*t145149;
            double t145153 = gcab*t145141*4.0;
            double t145154 = t145150+t145151+t145152+t145153+1.0;
            double t145155 = gcab*t145141;
            double t145156 = t145155+1.0;
            double t145157 = t145140*t145142;
            double t145158 = gcab*t145141*2.0;
            double t145159 = t145157+t145158+1.0;
            double t145160 = t145140*t145142*3.0;
            double t145161 = gcab*t145140*t145141*t145142;
            double t145162 = gcab*t145141*3.0;
            double t145163 = t145160+t145161+t145162+1.0;
            double t145164 = t145042*t145061*t145036*t145037*t145064*t145056*4.0;
            double t145165 = t145038+t145093;
            double t145166 = 1.0/t145051;
            double t145167 = 1.0/(t145048*t145048);
            double t145168 = b4f*t145024*t145068*(2.0/3.0);
            double t145169 = b2f*c*t145029*(1.0/3.0);
            double t145170 = b1f*c*t145029*t145069*(1.0/6.0);
            double t145171 = b3f*c*t145020*t145029*(1.0/2.0);
            double t145172 = t145170+t145171+t145168+t145169;
            double t145173 = a1f*c*c0f*t145052*t145029*(2.0/3.0);
            double t145174 = t145067*t145078*4.0;
            double t145175 = t145092*t145165*(4.0/3.0);
            double t145238 = t145165*t145095*(4.0/3.0);
            double t145176 = t145175-t145238;
            double t145177 = 1.0/t145088;
            double t145178 = 1.0/(t145085*t145085);
            double t145179 = b4a*t145024*t145068*(2.0/3.0);
            double t145180 = b2a*c*t145029*(1.0/3.0);
            double t145181 = b1a*c*t145029*t145069*(1.0/6.0);
            double t145182 = b3a*c*t145020*t145029*(1.0/2.0);
            double t145183 = t145180+t145181+t145182+t145179;
            double t145184 = t145042*t145061*t145091*t145183*t145177*t145079*t145178*t145098;
            double t145185 = 1.0/pow(rho_b[index],1.0/3.0);
            double t145186 = c*t145185;
            double t145187 = sqrt(t145186);
            double t145188 = b1f*t145187;
            double t145189 = pow(t145186,3.0/2.0);
            double t145190 = b3f*t145189;
            double t145191 = 1.0/pow(rho_b[index],2.0/3.0);
            double t145192 = b4f*t145024*t145191;
            double t145193 = b2f*c*t145185;
            double t145194 = t145190+t145192+t145193+t145188;
            double t145195 = 1.0/pow(rho_b[index],4.0/3.0);
            double t145196 = b1p*t145187;
            double t145197 = b3p*t145189;
            double t145198 = b4p*t145024*t145191;
            double t145199 = b2p*c*t145185;
            double t145200 = t145196+t145197+t145198+t145199;
            double t145201 = 1.0/pow(rho_b[index],5.0/3.0);
            double t145202 = 1.0/sqrt(t145186);
            double t145203 = 1.0/t145194;
            double t145204 = t145203*t145043*(1.0/2.0);
            double t145205 = t145204+1.0;
            double t145206 = 1.0/t145200;
            double t145207 = t145030*t145206*(1.0/2.0);
            double t145208 = t145207+1.0;
            double t145209 = a1p*c*t145185;
            double t145210 = t145209+1.0;
            double t145211 = 1.0/t145208;
            double t145212 = 1.0/(t145200*t145200);
            double t145213 = b4p*t145201*t145024*(2.0/3.0);
            double t145214 = b2p*c*t145195*(1.0/3.0);
            double t145215 = b1p*c*t145202*t145195*(1.0/6.0);
            double t145216 = b3p*c*t145195*t145187*(1.0/2.0);
            double t145217 = t145213+t145214+t145215+t145216;
            double t145218 = t145210*t145211*t145212*t145217;
            double t145219 = log(t145208);
            double t145220 = log(t145205);
            double t145221 = a1f*c*t145185;
            double t145222 = t145221+1.0;
            double t145223 = t145042*t145061*t145064*t145056*t145067;
            double t145224 = Aa*t145042*t145061*t145091*t145079*t145089*t145098*2.0;
            double t145225 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t145226 = 1.0/(t145163*t145163);
            double t145227 = 1.0/t145156;
            double t145228 = 1.0/(t145154*t145154);
            double t145229 = 1.0/(t145159*t145159);
            double t145230 = 1.0/t145154;
            double t145231 = 1.0/(t145156*t145156);
            double t145232 = 1.0/t145159;
            double t145233 = 1.0/t145163;
            double t145235 = a1p*c*c0p*t145055*t145029*(2.0/3.0);
            double t145240 = t145054*t145172*t145166*t145167;
            double t145234 = -t145240-t145235+t145173+t145077;
            double t145236 = 1.0/pow(t145017,7.0/3.0);
            double t145237 = 1.0/pow(t145017,8.0/3.0);
            double t145241 = t145076*t145076;
            double t145242 = 1.0/pow(t145019,3.0/2.0);
            double t145243 = b4p*t145024*t145237*(1.0E1/9.0);
            double t145244 = b2p*c*t145236*(4.0/9.0);
            double t145245 = b1p*c*t145236*t145069*(2.0/9.0);
            double t145246 = b3p*c*t145020*t145236*(2.0/3.0);
            double t145247 = b3p*t145024*t145237*t145069*(1.0/1.2E1);
            double t145248 = t145243+t145244+t145245+t145246+t145247-b1p*t145024*t145242*t145237*(1.0/3.6E1);
            double t145249 = t145070*t145035*t145071*t145248;
            double t145250 = 1.0/(t145028*t145028*t145028);
            double t145251 = t145172*t145172;
            double t145252 = 1.0/(t145033*t145033);
            double t145253 = 1.0/(t145028*t145028*t145028*t145028);
            double t145254 = t145030*t145241*t145035*t145252*t145253*(1.0/2.0);
            double t145255 = t145240+t145235-t145173-t145077;
            double t145256 = 1.0/(t145017*t145017*t145017);
            double t145257 = a1p*c*t145070*t145071*t145029*t145076*(2.0/3.0);
            double t145258 = 1.0/(t145017*t145017*t145017*t145017*t145017*t145017);
            double t145259 = t145036*t145037*t145064*4.0;
            double t145260 = t145174+t145259;
            double t145261 = t145036*t145256*t145095*(8.0/3.0);
            double t145262 = 1.0/pow(t145057,2.0/3.0);
            double t145263 = t145063*t145262*t145165*(4.0/9.0);
            double t145264 = 1.0/pow(t145059,2.0/3.0);
            double t145265 = t145063*t145165*t145264*(4.0/9.0);
            double t145266 = t145261+t145263+t145265-t145036*t145092*t145256*(8.0/3.0);
            double t145267 = t145183*t145183;
            double t145268 = t145174-t145259;
            double t145269 = t145042*t145064*t145056*t145067*t145176;
            double t145270 = t145042*t145064*t145056*t145067*t145096;
            double t145271 = Aa*t145042*t145061*t145260*t145091*t145079*t145089*2.0;
            double t145272 = Aa*t145042*t145091*t145176*t145079*t145089*t145098*2.0;
            double t145273 = Aa*t145042*t145091*t145096*t145079*t145089*t145098*2.0;
            double t145274 = c0f*t145137*t145139*2.0;
            double t145276 = c0p*t145124*t145133*2.0;
            double t145275 = t145274-t145276;
            double t145277 = c0f*t145220*t145222*2.0;
            double t145279 = c0p*t145210*t145219*2.0;
            double t145278 = t145277-t145279;
            double t145280 = gamma_aa[index]*gcab*t145225*(8.0/3.0);
            double t145281 = gamma_aa[index]*t145140*t145141*t145225*(8.0/3.0);
            double t145282 = t145280+t145281;
            double t145283 = gamma_bb[index]*gcab*t145143*(8.0/3.0);
            double t145284 = gamma_bb[index]*t145140*t145141*t145143*(8.0/3.0);
            double t145285 = t145283+t145284;
            double t145286 = gamma_aa[index]*gcab*t145225*(1.6E1/3.0);
            double t145287 = gamma_aa[index]*gcab*t145140*t145142*t145225*1.6E1;
            double t145288 = gamma_aa[index]*t145141*t145142*t145225*t145148*(1.6E1/3.0);
            double t145289 = gamma_aa[index]*t145140*t145141*t145225*1.6E1;
            double t145290 = t145286+t145287+t145288+t145289;
            double t145291 = gamma_bb[index]*gcab*t145143*(1.6E1/3.0);
            double t145292 = gamma_bb[index]*gcab*t145140*t145142*t145143*1.6E1;
            double t145293 = gamma_bb[index]*t145141*t145142*t145143*t145148*(1.6E1/3.0);
            double t145294 = gamma_bb[index]*t145140*t145141*t145143*1.6E1;
            double t145295 = t145291+t145292+t145293+t145294;
            double t145296 = gamma_aa[index]*gcab*t145225*4.0;
            double t145297 = gamma_aa[index]*gcab*t145140*t145142*t145225*4.0;
            double t145298 = gamma_aa[index]*t145140*t145141*t145225*8.0;
            double t145299 = t145296+t145297+t145298;
            double t145300 = gamma_bb[index]*gcab*t145143*4.0;
            double t145301 = gamma_bb[index]*gcab*t145140*t145142*t145143*4.0;
            double t145302 = gamma_bb[index]*t145140*t145141*t145143*8.0;
            double t145303 = t145300+t145301+t145302;
            v_rho_a_rho_b_[index] = (t145223+t145224+t145066+rho_a[index]*(-t145132+t145042*t145136*(t145132- \
               (1.0/(t145108*t145108)*t145139*(b2f*c*t145109*(1.0/3.0)+b4f*t145024*t145115*(2.0/3.0)+b1f*c*t145116* \
               t145109*(1.0/6.0)+b3f*c*t145101*t145109*(1.0/2.0)))/t145119+a1f*c*c0f*t145109*t145137*(2.0/3.0)-a1p* \
               c*c0p*t145133*t145109*(2.0/3.0))+a1p*c*c0p*t145133*t145109*(2.0/3.0))+t145017*(t145270+t145164+t145273+ \
               t145184+t145077-a1p*c*c0p*t145055*t145029*(2.0/3.0)-t145042*t145061*t145234*t145064*t145067-t145042* \
               t145061*t145056*t145067*t145078*4.0-Aa*t145042*t145061*t145091*t145079*t145089*(t145174-t145036*t145037* \
               t145064*4.0)*2.0-Aa*a1a*c*t145042*t145061*t145029*t145079*t145089*t145098*(2.0/3.0))-c0p*t145124*t145133* \
               2.0-t145042*t145136*t145275)*(ccab1*gamma_bb[index]*gcab*t145143*t145227*(4.0/3.0)-ccab2*t145140*t145142* \
               t145229*t145285-ccab4*t145228*t145148*t145149*t145295-ccab1*gamma_bb[index]*t145140*t145141*t145231* \
               t145143*(4.0/3.0)+ccab2*gamma_bb[index]*t145140*t145141*t145232*t145143*(8.0/3.0)+ccab3*gamma_bb[index]* \
               gcab*t145140*t145142*t145143*t145233*4.0+ccab4*gamma_bb[index]*t145230*t145141*t145142*t145143*t145148* \
               (1.6E1/3.0)-ccab3*gcab*t145140*t145141*t145303*t145142*t145226)-(rho_a[index]*(t145276+t145042*t145136* \
               t145275)+rho_b[index]*(t145279+t145042*t145136*t145278)-t145017*(t145223+t145224+t145066))*(ccab4* \
               t145228*t145148*t145149*(gamma_aa[index]*gamma_bb[index]*t145140*t145143*t145225*(6.4E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*t145142*t145143*t145225*t145148*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t145140* \
               t145141*t145143*t145225*(1.28E2/3.0))-ccab2*t145140*t145142*t145282*1.0/(t145159*t145159*t145159)* \
               t145285*2.0-ccab4*1.0/(t145154*t145154*t145154)*t145290*t145148*t145149*t145295*2.0+ccab3*gcab*t145140* \
               t145141*t145142*t145226*(gamma_aa[index]*gamma_bb[index]*t145140*t145143*t145225*(3.2E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t145140*t145141*t145143*t145225*(3.2E1/3.0))+ccab1*gamma_aa[index]*gamma_bb[index]* \
               t145140*t145231*t145143*t145225*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]*t145140*t145232* \
               t145143*t145225*(3.2E1/9.0)+ccab2*gamma_bb[index]*t145140*t145141*t145143*t145282*t145229*(8.0/3.0) \
               +ccab2*gamma_aa[index]*t145140*t145141*t145225*t145229*t145285*(8.0/3.0)-ccab3*gcab*t145140*t145141* \
               t145303*t145142*1.0/(t145163*t145163*t145163)*t145299*2.0-ccab4*gamma_aa[index]*gamma_bb[index]*t145230* \
               t145142*t145143*t145225*t145148*(6.4E1/3.0)+ccab2*gamma_aa[index]*gamma_bb[index]*t145142*t145143* \
               t145225*t145148*t145229*(3.2E1/9.0)+ccab3*gamma_aa[index]*gcab*t145140*t145303*t145142*t145225*t145226* \
               4.0+ccab3*gamma_bb[index]*gcab*t145140*t145142*t145143*t145226*t145299*4.0+ccab4*gamma_bb[index]*t145141* \
               t145142*t145143*t145290*t145228*t145148*(1.6E1/3.0)+ccab4*gamma_aa[index]*t145141*t145142*t145225* \
               t145228*t145148*t145295*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t145140*t145141*t145143* \
               t145233*t145225*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t145140*t145141*t145143*t145225* \
               1.0/(t145156*t145156*t145156)*(3.2E1/9.0))+(ccab0+ccab1*gcab*t145141*t145227+ccab2*t145140*t145142* \
               t145232+ccab4*t145230*t145148*t145149+ccab3*gcab*t145140*t145141*t145142*t145233)*(-t145270+t145271+ \
               t145272-t145273+t145269+t145017*(t145254+t145257+t145249-t145070*t145241*t145250*t145035*2.0-a1p*c* \
               c0p*t145055*t145236*(8.0/9.0)-t145042*t145061*t145064*t145067*(t145254+t145257+t145249-t145070*t145241* \
               t145250*t145035*2.0+t145251*t145054*1.0/(t145048*t145048*t145048)*t145166*2.0-t145054*t145166*t145167* \
               (b2f*c*t145236*(4.0/9.0)+b4f*t145024*t145237*(1.0E1/9.0)+b1f*c*t145236*t145069*(2.0/9.0)+b3f*c*t145020* \
               t145236*(2.0/3.0)-b1f*t145024*t145242*t145237*(1.0/3.6E1)+b3f*t145024*t145237*t145069*(1.0/1.2E1)) \
               -1.0/(t145051*t145051)*t145043*t145251*t145054*1.0/(t145048*t145048*t145048*t145048)*(1.0/2.0)+a1f* \
               c*c0f*t145052*t145236*(8.0/9.0)-a1p*c*c0p*t145055*t145236*(8.0/9.0)-a1f*c*t145172*t145029*t145166* \
               t145167*(2.0/3.0))+t145042*t145061*t145037*t145064*t145056*1.2E1-t145042*t145061*t145056*t145067*t145258* \
               2.0E1+t145042*t145061*t145255*t145067*t145078*8.0+t145042*t145064*t145056*t145067*t145266+t145042* \
               t145064*t145255*t145067*t145176-t145042*t145064*t145255*t145067*t145096-t145042*t145056*t145067*t145176* \
               t145078*4.0+t145042*t145056*t145067*t145078*t145096*4.0+t145042*t145036*t145037*t145064*t145056*t145176* \
               4.0+t145042*t145036*t145037*t145064*t145056*t145096*4.0+Aa*t145042*t145260*t145091*t145096*t145079* \
               t145089*2.0-Aa*t145042*t145091*t145176*t145079*t145268*t145089*2.0+Aa*t145042*t145091*t145266*t145079* \
               t145089*t145098*2.0+Aa*t145042*t145061*t145091*t145079*t145089*(t145037*t145064*1.2E1-t145067*t145258* \
               2.0E1)*2.0+t145042*t145061*t145260*t145091*t145183*t145177*t145079*t145178+t145042*t145061*t145091* \
               t145183*t145177*t145079*t145178*t145268+t145042*t145091*t145183*t145176*t145177*t145079*t145178*t145098- \
               t145042*t145091*t145183*t145096*t145177*t145079*t145178*t145098-t145042*t145061*t145091*1.0/(t145085* \
               t145085*t145085)*t145177*t145267*t145079*t145098*2.0+t145042*t145061*t145091*t145177*t145079*t145178* \
               t145098*(b2a*c*t145236*(4.0/9.0)+b4a*t145024*t145237*(1.0E1/9.0)+b1a*c*t145236*t145069*(2.0/9.0)+b3a* \
               c*t145020*t145236*(2.0/3.0)-b1a*t145024*t145242*t145237*(1.0/3.6E1)+b3a*t145024*t145237*t145069*(1.0/ \
               1.2E1))-Aa*a1a*c*t145042*t145061*t145260*t145029*t145079*t145089*(2.0/3.0)-Aa*a1a*c*t145042*t145061* \
               t145029*t145079*t145268*t145089*(2.0/3.0)-Aa*a1a*c*t145042*t145061*t145236*t145079*t145089*t145098* \
               (8.0/9.0)-Aa*a1a*c*t145042*t145029*t145176*t145079*t145089*t145098*(2.0/3.0)+Aa*a1a*c*t145042*t145029* \
               t145096*t145079*t145089*t145098*(2.0/3.0)+t145042*t145061*t145080*t145091*1.0/(t145085*t145085*t145085* \
               t145085)*t145267*t145079*1.0/(t145088*t145088)*t145098*(1.0/2.0)+a1a*c*t145042*t145061*t145029*t145183* \
               t145177*t145079*t145178*t145098*(2.0/3.0))-t145070*t145035*t145071*t145076*2.0+a1p*c*c0p*t145055*t145029* \
               (4.0/3.0)-t145042*t145061*t145064*t145255*t145067*2.0+t145042*t145061*t145056*t145067*t145078*8.0+ \
               Aa*t145042*t145061*t145091*t145079*t145089*(t145174-t145259)*2.0-t145042*t145061*t145091*t145183*t145177* \
               t145079*t145178*t145098*2.0+Aa*a1a*c*t145042*t145061*t145029*t145079*t145089*t145098*(4.0/3.0))+(t145223+ \
               t145224+t145066-t145017*(t145235+t145271+t145164+t145272-t145184-t145077+t145269+t145042*t145061*t145234* \
               t145064*t145067+t145042*t145061*t145056*t145067*t145078*4.0+Aa*a1a*c*t145042*t145061*t145029*t145079* \
               t145089*t145098*(2.0/3.0))+rho_b[index]*(-t145218+t145042*t145136*(t145218-(t145222*1.0/(t145194*t145194) \
               *(b2f*c*t145195*(1.0/3.0)+b4f*t145201*t145024*(2.0/3.0)+b1f*c*t145202*t145195*(1.0/6.0)+b3f*c*t145195* \
               t145187*(1.0/2.0)))/t145205+a1f*c*c0f*t145220*t145195*(2.0/3.0)-a1p*c*c0p*t145219*t145195*(2.0/3.0) \
               )+a1p*c*c0p*t145219*t145195*(2.0/3.0))-c0p*t145210*t145219*2.0-t145042*t145136*t145278)*(ccab1*gamma_aa[index]* \
               gcab*t145225*t145227*(4.0/3.0)-ccab2*t145140*t145142*t145282*t145229-ccab4*t145290*t145228*t145148* \
               t145149-ccab1*gamma_aa[index]*t145140*t145141*t145231*t145225*(4.0/3.0)+ccab2*gamma_aa[index]*t145140* \
               t145141*t145232*t145225*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t145140*t145142*t145233*t145225*4.0+ccab4* \
               gamma_aa[index]*t145230*t145141*t145142*t145225*t145148*(1.6E1/3.0)-ccab3*gcab*t145140*t145141*t145142* \
               t145226*t145299);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t145305 = rho_a[index]+rho_b[index];
            double t145306 = 1.0/pow(t145305,1.0/3.0);
            double t145307 = c*t145306;
            double t145308 = sqrt(t145307);
            double t145309 = b1p*t145308;
            double t145310 = pow(t145307,3.0/2.0);
            double t145311 = b3p*t145310;
            double t145312 = c*c;
            double t145313 = 1.0/pow(t145305,2.0/3.0);
            double t145314 = b4p*t145312*t145313;
            double t145315 = b2p*c*t145306;
            double t145316 = t145311+t145314+t145315+t145309;
            double t145317 = 1.0/pow(t145305,4.0/3.0);
            double t145318 = 1.0/c0p;
            double t145319 = 1.0/t145316;
            double t145320 = t145318*t145319*(1.0/2.0);
            double t145321 = t145320+1.0;
            double t145322 = a1p*c*t145306;
            double t145323 = t145322+1.0;
            double t145324 = rho_a[index]-rho_b[index];
            double t145325 = t145324*t145324;
            double t145326 = 1.0/t145305;
            double t145327 = t145324*t145326;
            double t145328 = two_13*2.0;
            double t145329 = t145328-2.0;
            double t145330 = 1.0/t145329;
            double t145331 = 1.0/c0f;
            double t145332 = b1f*t145308;
            double t145333 = b3f*t145310;
            double t145334 = b4f*t145312*t145313;
            double t145335 = b2f*c*t145306;
            double t145336 = t145332+t145333+t145334+t145335;
            double t145337 = 1.0/t145336;
            double t145338 = t145331*t145337*(1.0/2.0);
            double t145339 = t145338+1.0;
            double t145340 = log(t145339);
            double t145341 = a1f*c*t145306;
            double t145342 = t145341+1.0;
            double t145343 = log(t145321);
            double t145354 = c0f*t145340*t145342*2.0;
            double t145355 = c0p*t145323*t145343*2.0;
            double t145344 = t145354-t145355;
            double t145345 = t145327+1.0;
            double t145346 = pow(t145345,4.0/3.0);
            double t145347 = -t145327+1.0;
            double t145348 = pow(t145347,4.0/3.0);
            double t145349 = t145346+t145348-2.0;
            double t145350 = 1.0/(t145305*t145305);
            double t145351 = t145350*t145324;
            double t145352 = t145351+t145326;
            double t145353 = 1.0/(t145305*t145305*t145305*t145305);
            double t145356 = t145325*t145325;
            double t145357 = 1.0/pow(t145305,5.0/3.0);
            double t145358 = 1.0/sqrt(t145307);
            double t145359 = 1.0/t145321;
            double t145360 = 1.0/(t145316*t145316);
            double t145361 = b4p*t145312*t145357*(2.0/3.0);
            double t145362 = b2p*c*t145317*(1.0/3.0);
            double t145363 = b1p*c*t145317*t145358*(1.0/6.0);
            double t145364 = b3p*c*t145308*t145317*(1.0/2.0);
            double t145365 = t145361+t145362+t145363+t145364;
            double t145366 = 1.0/(t145305*t145305*t145305*t145305*t145305);
            double t145367 = 1.0/d2fz0;
            double t145368 = 1.0/Aa;
            double t145369 = b1a*t145308;
            double t145370 = b3a*t145310;
            double t145371 = b4a*t145312*t145313;
            double t145372 = b2a*c*t145306;
            double t145373 = t145370+t145371+t145372+t145369;
            double t145374 = 1.0/t145373;
            double t145375 = t145374*t145368*(1.0/2.0);
            double t145376 = t145375+1.0;
            double t145377 = log(t145376);
            double t145378 = a1a*c*t145306;
            double t145379 = t145378+1.0;
            double t145380 = pow(t145345,1.0/3.0);
            double t145381 = t145352*t145380*(4.0/3.0);
            double t145382 = pow(t145347,1.0/3.0);
            double t145458 = t145352*t145382*(4.0/3.0);
            double t145383 = t145381-t145458;
            double t145384 = t145353*t145356;
            double t145385 = t145384-1.0;
            double t145386 = 1.0/pow(rho_b[index],1.0/3.0);
            double t145387 = c*t145386;
            double t145388 = sqrt(t145387);
            double t145389 = b1f*t145388;
            double t145390 = pow(t145387,3.0/2.0);
            double t145391 = b3f*t145390;
            double t145392 = 1.0/pow(rho_b[index],2.0/3.0);
            double t145393 = b4f*t145312*t145392;
            double t145394 = b2f*c*t145386;
            double t145395 = t145391+t145393+t145394+t145389;
            double t145396 = 1.0/pow(rho_b[index],4.0/3.0);
            double t145397 = b1p*t145388;
            double t145398 = b3p*t145390;
            double t145399 = b4p*t145312*t145392;
            double t145400 = b2p*c*t145386;
            double t145401 = t145400+t145397+t145398+t145399;
            double t145402 = 1.0/pow(rho_b[index],5.0/3.0);
            double t145403 = 1.0/sqrt(t145387);
            double t145404 = 1.0/t145395;
            double t145405 = t145331*t145404*(1.0/2.0);
            double t145406 = t145405+1.0;
            double t145407 = 1.0/t145401;
            double t145408 = t145407*t145318*(1.0/2.0);
            double t145409 = t145408+1.0;
            double t145410 = a1p*c*t145386;
            double t145411 = t145410+1.0;
            double t145412 = 1.0/t145409;
            double t145413 = 1.0/(t145401*t145401);
            double t145414 = b4p*t145312*t145402*(2.0/3.0);
            double t145415 = b2p*c*t145396*(1.0/3.0);
            double t145416 = b1p*c*t145403*t145396*(1.0/6.0);
            double t145417 = b3p*c*t145396*t145388*(1.0/2.0);
            double t145418 = t145414+t145415+t145416+t145417;
            double t145419 = t145411*t145412*t145413*t145418;
            double t145420 = log(t145409);
            double t145421 = pow(2.0,1.0/3.0);
            double t145422 = t145421*2.0;
            double t145423 = t145422-2.0;
            double t145424 = log(t145406);
            double t145425 = a1f*c*t145386;
            double t145426 = t145425+1.0;
            double t145427 = gcab*gcab;
            double t145431 = 1.0/pow(rho_a[index],8.0/3.0);
            double t145432 = gamma_aa[index]*t145431*(1.0/2.0);
            double t145433 = 1.0/pow(rho_b[index],8.0/3.0);
            double t145434 = gamma_bb[index]*t145433*(1.0/2.0);
            double t145428 = t145432+t145434;
            double t145429 = t145428*t145428;
            double t145430 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t145435 = t145427*t145427;
            double t145436 = t145429*t145429;
            double t145437 = t145427*t145429*6.0;
            double t145438 = gcab*t145427*t145428*t145429*4.0;
            double t145439 = t145435*t145436;
            double t145440 = gcab*t145428*4.0;
            double t145441 = t145440+t145437+t145438+t145439+1.0;
            double t145442 = gcab*t145428;
            double t145443 = t145442+1.0;
            double t145444 = t145427*t145429;
            double t145445 = gcab*t145428*2.0;
            double t145446 = t145444+t145445+1.0;
            double t145447 = t145427*t145429*3.0;
            double t145448 = gcab*t145427*t145428*t145429;
            double t145449 = gcab*t145428*3.0;
            double t145450 = t145447+t145448+t145449+1.0;
            double t145451 = a1p*c*c0p*t145343*t145317*(2.0/3.0);
            double t145452 = 1.0/t145446;
            double t145453 = 1.0/t145450;
            double t145454 = 1.0/t145443;
            double t145455 = 1.0/t145441;
            double t145456 = 1.0/pow(t145305,7.0/3.0);
            double t145457 = 1.0/pow(t145305,8.0/3.0);
            double t145459 = 1.0/t145339;
            double t145460 = 1.0/(t145336*t145336);
            double t145461 = b4f*t145312*t145357*(2.0/3.0);
            double t145462 = b2f*c*t145317*(1.0/3.0);
            double t145463 = b1f*c*t145317*t145358*(1.0/6.0);
            double t145464 = b3f*c*t145308*t145317*(1.0/2.0);
            double t145465 = t145461+t145462+t145463+t145464;
            double t145466 = t145342*t145460*t145465*t145459;
            double t145468 = t145323*t145360*t145365*t145359;
            double t145469 = a1f*c*c0f*t145340*t145317*(2.0/3.0);
            double t145467 = t145451+t145466-t145468-t145469;
            double t145470 = t145365*t145365;
            double t145471 = 1.0/pow(t145307,3.0/2.0);
            double t145472 = b4p*t145312*t145457*(1.0E1/9.0);
            double t145473 = b2p*c*t145456*(4.0/9.0);
            double t145474 = b1p*c*t145456*t145358*(2.0/9.0);
            double t145475 = b3p*c*t145308*t145456*(2.0/3.0);
            double t145476 = b3p*t145312*t145358*t145457*(1.0/1.2E1);
            double t145477 = t145472+t145473+t145474+t145475+t145476-b1p*t145312*t145471*t145457*(1.0/3.6E1);
            double t145478 = 1.0/(t145316*t145316*t145316);
            double t145479 = t145323*t145470*t145359*t145478*2.0;
            double t145480 = t145465*t145465;
            double t145481 = 1.0/(t145321*t145321);
            double t145482 = 1.0/(t145316*t145316*t145316*t145316);
            double t145483 = t145350*2.0;
            double t145484 = 1.0/(t145305*t145305*t145305);
            double t145485 = t145324*t145484*2.0;
            double t145486 = t145483+t145485;
            double t145487 = t145352*t145352;
            double t145488 = a1p*c*c0p*t145343*t145456*(8.0/9.0);
            double t145489 = 1.0/(t145305*t145305*t145305*t145305*t145305*t145305);
            double t145490 = t145324*t145325*t145353*4.0;
            double t145491 = t145356*t145366*4.0;
            double t145492 = t145490+t145491;
            double t145493 = t145380*t145486*(4.0/3.0);
            double t145494 = 1.0/pow(t145345,2.0/3.0);
            double t145495 = t145494*t145487*(4.0/9.0);
            double t145496 = 1.0/pow(t145347,2.0/3.0);
            double t145497 = t145487*t145496*(4.0/9.0);
            double t145498 = t145493+t145495+t145497-t145382*t145486*(4.0/3.0);
            double t145499 = 1.0/t145376;
            double t145500 = 1.0/(t145373*t145373);
            double t145501 = b4a*t145312*t145357*(2.0/3.0);
            double t145502 = b2a*c*t145317*(1.0/3.0);
            double t145503 = b1a*c*t145317*t145358*(1.0/6.0);
            double t145504 = b3a*c*t145308*t145317*(1.0/2.0);
            double t145505 = t145501+t145502+t145503+t145504;
            double t145506 = t145505*t145505;
            double t145507 = 1.0/t145406;
            double t145508 = b4f*t145312*t145402*(2.0/3.0);
            double t145509 = b2f*c*t145396*(1.0/3.0);
            double t145510 = b1f*c*t145403*t145396*(1.0/6.0);
            double t145511 = b3f*c*t145396*t145388*(1.0/2.0);
            double t145512 = t145510+t145511+t145508+t145509;
            double t145513 = 1.0/(t145395*t145395);
            double t145514 = 1.0/pow(rho_b[index],7.0/3.0);
            double t145515 = 1.0/pow(t145387,3.0/2.0);
            double t145516 = t145512*t145512;
            double t145517 = t145418*t145418;
            double t145518 = 1.0/(t145401*t145401*t145401);
            double t145519 = t145411*t145412*t145517*t145518*2.0;
            double t145520 = b4p*t145312*t145433*(1.0E1/9.0);
            double t145521 = b2p*c*t145514*(4.0/9.0);
            double t145522 = b3p*t145312*t145403*t145433*(1.0/1.2E1);
            double t145523 = b1p*c*t145403*t145514*(2.0/9.0);
            double t145524 = b3p*c*t145514*t145388*(2.0/3.0);
            double t145641 = b1p*t145312*t145433*t145515*(1.0/3.6E1);
            double t145525 = t145520+t145521+t145522+t145523+t145524-t145641;
            double t145526 = 1.0/(t145409*t145409);
            double t145527 = 1.0/(t145401*t145401*t145401*t145401);
            double t145528 = a1p*c*c0p*t145420*t145514*(8.0/9.0);
            double t145529 = a1f*c*c0f*t145424*t145396*(2.0/3.0);
            double t145530 = a1p*c*c0p*t145420*t145396*(2.0/3.0);
            double t145531 = t145512*t145513*t145426*t145507;
            double t145532 = t145530+t145531-t145419-t145529;
            double t145533 = gamma_bb[index]*gamma_bb[index];
            double t145534 = gcaa*gcaa;
            double t145535 = t145533*t145533;
            double t145536 = t145534*t145534;
            double t145537 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t145538 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t145539 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t145540 = 1.0/pow(rho_a[index],1.0/3.0);
            double t145541 = c*t145540;
            double t145542 = sqrt(t145541);
            double t145543 = pow(t145541,3.0/2.0);
            double t145544 = 1.0/pow(rho_a[index],2.0/3.0);
            double t145545 = b1p*t145542;
            double t145546 = b3p*t145543;
            double t145547 = b4p*t145312*t145544;
            double t145548 = b2p*c*t145540;
            double t145549 = t145545+t145546+t145547+t145548;
            double t145550 = 1.0/t145549;
            double t145551 = t145550*t145318*(1.0/2.0);
            double t145552 = t145551+1.0;
            double t145553 = log(t145552);
            double t145554 = a1p*c*t145540;
            double t145555 = t145554+1.0;
            double t145556 = c0p*t145553*t145555*2.0;
            double t145557 = c0f*t145424*t145426*2.0;
            double t145559 = c0p*t145411*t145420*2.0;
            double t145558 = t145557-t145559;
            double t145560 = t145330*t145344*t145353*t145356*t145349;
            double t145561 = Aa*t145330*t145349*t145367*t145385*t145377*t145379*2.0;
            double t145562 = gamma_bb[index]*gcab*t145430*(1.6E1/3.0);
            double t145563 = gamma_bb[index]*gcab*t145430*t145427*t145429*1.6E1;
            double t145564 = gamma_bb[index]*t145430*t145435*t145428*t145429*(1.6E1/3.0);
            double t145565 = gamma_bb[index]*t145430*t145427*t145428*1.6E1;
            double t145566 = t145562+t145563+t145564+t145565;
            double t145567 = 1.0/(t145443*t145443);
            double t145568 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t145569 = gamma_bb[index]*gcab*t145430*(8.0/3.0);
            double t145570 = gamma_bb[index]*t145430*t145427*t145428*(8.0/3.0);
            double t145571 = t145570+t145569;
            double t145572 = 1.0/(t145450*t145450);
            double t145573 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t145574 = 1.0/(t145441*t145441);
            double t145575 = 1.0/(t145446*t145446);
            double t145576 = gamma_bb[index]*gcab*t145430*4.0;
            double t145577 = gamma_bb[index]*gcab*t145430*t145427*t145429*4.0;
            double t145578 = gamma_bb[index]*t145430*t145427*t145428*8.0;
            double t145579 = t145576+t145577+t145578;
            double t145580 = t145330*t145423*t145558;
            double t145581 = t145580+t145559;
            double t145582 = gamma_bb[index]*gcaa*t145433*4.0;
            double t145583 = gamma_bb[index]*gcaa*t145533*t145534*t145538*4.0;
            double t145584 = t145533*t145534*t145539*6.0;
            double t145585 = t145535*t145536*t145537;
            double t145586 = t145582+t145583+t145584+t145585+1.0;
            double t145587 = 1.0/t145586;
            double t145588 = gamma_bb[index]*gcaa*t145433;
            double t145589 = t145588+1.0;
            double t145590 = 1.0/t145589;
            double t145591 = gamma_bb[index]*gcaa*t145433*3.0;
            double t145592 = gamma_bb[index]*gcaa*t145533*t145534*t145538;
            double t145593 = t145533*t145534*t145539*3.0;
            double t145594 = t145591+t145592+t145593+1.0;
            double t145595 = 1.0/t145594;
            double t145596 = gamma_bb[index]*gcaa*t145433*2.0;
            double t145597 = t145533*t145534*t145539;
            double t145598 = t145596+t145597+1.0;
            double t145599 = 1.0/t145598;
            double t145600 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t145601 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t145602 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t145603 = t145330*t145423*t145532;
            double t145604 = -t145530+t145603+t145419;
            double t145605 = ccaa4*t145602*t145535*t145536*t145587*(3.2E1/3.0);
            double t145606 = ccaa1*gamma_bb[index]*gcaa*t145430*t145590*(8.0/3.0);
            double t145607 = ccaa3*gamma_bb[index]*gcaa*t145601*t145533*t145534*t145595*8.0;
            double t145608 = ccaa2*t145600*t145533*t145534*t145599*(1.6E1/3.0);
            double t145609 = 1.0/(t145589*t145589);
            double t145610 = gamma_bb[index]*gcaa*t145430*8.0;
            double t145611 = gamma_bb[index]*gcaa*t145601*t145533*t145534*8.0;
            double t145612 = t145600*t145533*t145534*1.6E1;
            double t145613 = t145610+t145611+t145612;
            double t145614 = 1.0/(t145594*t145594);
            double t145615 = gamma_bb[index]*gcaa*t145430*(3.2E1/3.0);
            double t145616 = gamma_bb[index]*gcaa*t145601*t145533*t145534*3.2E1;
            double t145617 = t145600*t145533*t145534*3.2E1;
            double t145618 = t145602*t145535*t145536*(3.2E1/3.0);
            double t145619 = t145615+t145616+t145617+t145618;
            double t145620 = 1.0/(t145586*t145586);
            double t145621 = gamma_bb[index]*gcaa*t145430*(1.6E1/3.0);
            double t145622 = t145600*t145533*t145534*(1.6E1/3.0);
            double t145623 = t145621+t145622;
            double t145624 = 1.0/(t145598*t145598);
            double t145625 = t145605+t145606+t145607+t145608-ccaa1*t145600*t145533*t145534*t145609*(8.0/3.0)- \
               ccaa2*t145533*t145623*t145534*t145624*t145539-ccaa4*t145620*t145535*t145536*t145537*t145619-ccaa3* \
               gamma_bb[index]*gcaa*t145613*t145533*t145614*t145534*t145538;
            double t145626 = 1.0/pow(rho_b[index],1.0E1);
            double t145627 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t145628 = ccaa4*t145535*t145536*t145537*t145587;
            double t145629 = ccaa1*gamma_bb[index]*gcaa*t145433*t145590;
            double t145630 = ccaa3*gamma_bb[index]*gcaa*t145533*t145534*t145538*t145595;
            double t145631 = ccaa2*t145533*t145534*t145539*t145599;
            double t145632 = ccaa0+t145630+t145631+t145628+t145629;
            double t145633 = 1.0/(t145395*t145395*t145395);
            double t145634 = b4f*t145312*t145433*(1.0E1/9.0);
            double t145635 = b2f*c*t145514*(4.0/9.0);
            double t145636 = b3f*t145312*t145403*t145433*(1.0/1.2E1);
            double t145637 = b1f*c*t145403*t145514*(2.0/9.0);
            double t145638 = b3f*c*t145514*t145388*(2.0/3.0);
            double t145639 = t145634+t145635+t145636+t145637+t145638-b1f*t145312*t145433*t145515*(1.0/3.6E1);
            double t145640 = t145513*t145426*t145507*t145639;
            double t145642 = t145411*t145412*t145413*t145525;
            double t145643 = 1.0/(t145406*t145406);
            double t145644 = 1.0/(t145395*t145395*t145395*t145395);
            double t145645 = t145331*t145426*t145516*t145643*t145644*(1.0/2.0);
            double t145646 = t145411*t145318*t145517*t145526*t145527*(1.0/2.0);
            double t145647 = a1f*c*t145512*t145513*t145507*t145396*(2.0/3.0);
            double t145648 = a1p*c*t145412*t145413*t145418*t145396*(2.0/3.0);
            double t145649 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t145650 = 1.0/(omega*omega);
            double t145651 = pow(t145649,2.0/3.0);
            double t145654 = t145650*t145651;
            double t145652 = exp(-t145654);
            double t145653 = 1.0/pow(t145649,1.0/3.0);
            double t145655 = omega*omega;
            double t145656 = t145652-1.0;
            double t145657 = 1.0/pow(t145649,2.0/3.0);
            double t145658 = 1.0/pow(t145649,4.0/3.0);
            double t145659 = 1.0/omega;
            double t145660 = t145655*t145656*t145657*(1.0/2.0);
            double t145661 = t145660-t145652+3.0/2.0;
            double t145662 = gx*gx;
            double t145663 = t145662*t145662;
            double t145664 = pow(rho_b[index],1.0/3.0);
            double t145665 = pow(t145649,1.0/3.0);
            double t145666 = t145665*t145659;
            double t145667 = erf(t145666);
            double t145668 = t145667*(3.991211251234741E15/2.251799813685248E15);
            double t145700 = omega*t145661*t145653;
            double t145669 = -t145700+t145668;
            double t145670 = gamma_bb[index]*gx*t145433*4.0;
            double t145671 = gamma_bb[index]*gx*t145533*t145662*t145538*4.0;
            double t145672 = t145533*t145662*t145539*6.0;
            double t145673 = t145535*t145537*t145663;
            double t145674 = t145670+t145671+t145672+t145673+1.0;
            double t145675 = 1.0/t145674;
            double t145676 = gamma_bb[index]*gx*t145433;
            double t145677 = t145676+1.0;
            double t145678 = 1.0/t145677;
            double t145679 = gamma_bb[index]*gx*t145433*3.0;
            double t145680 = gamma_bb[index]*gx*t145533*t145662*t145538;
            double t145681 = t145533*t145662*t145539*3.0;
            double t145682 = t145680+t145681+t145679+1.0;
            double t145683 = 1.0/t145682;
            double t145684 = gamma_bb[index]*gx*t145433*2.0;
            double t145685 = t145533*t145662*t145539;
            double t145686 = t145684+t145685+1.0;
            double t145687 = 1.0/t145686;
            double t145688 = 1.0/rho_b[index];
            double t145689 = t145652*t145688*(1.0/3.0);
            double t145690 = 1.0/pow(t145649,5.0/3.0);
            double t145691 = t145690*t145655*t145656*(2.778046668940015E15/1.40737488355328E14);
            double t145695 = t145650*t145652*t145653*(2.778046668940015E15/7.0368744177664E13);
            double t145692 = t145691-t145695+t145689;
            double t145693 = 1.0/sqrt(3.141592653589793);
            double t145694 = omega*t145661*t145658*(2.778046668940015E15/1.40737488355328E14);
            double t145696 = omega*t145653*t145692;
            double t145697 = t145652*t145657*t145693*t145659*(1.108777112152858E31/1.584563250285287E29);
            double t145698 = t145694+t145696+t145697;
            double t145699 = 1.0/pow(t145649,7.0/3.0);
            double t145701 = cx4*t145535*t145537*t145663*t145675;
            double t145702 = cx1*gamma_bb[index]*gx*t145433*t145678;
            double t145703 = cx3*gamma_bb[index]*gx*t145533*t145662*t145538*t145683;
            double t145704 = cx2*t145533*t145662*t145539*t145687;
            double t145705 = cx0+t145701+t145702+t145703+t145704;
            double t145706 = pow(rho_b[index],4.0/3.0);
            double t145707 = omega*t145653*t145698*(4.0/3.0);
            double t145708 = t145707-omega*t145658*t145669*(2.778046668940015E15/1.05553116266496E14);
            double t145709 = cx4*t145602*t145535*t145663*t145675*(3.2E1/3.0);
            double t145710 = cx1*gamma_bb[index]*gx*t145430*t145678*(8.0/3.0);
            double t145711 = cx3*gamma_bb[index]*gx*t145601*t145533*t145662*t145683*8.0;
            double t145712 = cx2*t145600*t145533*t145662*t145687*(1.6E1/3.0);
            double t145713 = 1.0/(t145677*t145677);
            double t145714 = gamma_bb[index]*gx*t145430*8.0;
            double t145715 = gamma_bb[index]*gx*t145601*t145533*t145662*8.0;
            double t145716 = t145600*t145533*t145662*1.6E1;
            double t145717 = t145714+t145715+t145716;
            double t145718 = 1.0/(t145682*t145682);
            double t145719 = gamma_bb[index]*gx*t145430*(3.2E1/3.0);
            double t145720 = gamma_bb[index]*gx*t145601*t145533*t145662*3.2E1;
            double t145721 = t145600*t145533*t145662*3.2E1;
            double t145722 = t145602*t145535*t145663*(3.2E1/3.0);
            double t145723 = t145720+t145721+t145722+t145719;
            double t145724 = 1.0/(t145674*t145674);
            double t145725 = gamma_bb[index]*gx*t145430*(1.6E1/3.0);
            double t145726 = t145600*t145533*t145662*(1.6E1/3.0);
            double t145727 = t145725+t145726;
            double t145728 = 1.0/(t145686*t145686);
            double t145729 = t145710+t145711+t145712+t145709-cx1*t145600*t145533*t145713*t145662*(8.0/3.0)-cx2* \
               t145533*t145662*t145727*t145539*t145728-cx4*t145723*t145535*t145724*t145537*t145663-cx3*gamma_bb[index]* \
               gx*t145533*t145662*t145717*t145538*t145718;
            double t145730 = omega*t145653*t145669*(4.0/3.0);
            double t145731 = t145730-1.0;
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t145454*t145428+ccab2*t145452*t145427*t145429+ccab4*t145435* \
               t145436*t145455+ccab3*gcab*t145453*t145427*t145428*t145429)*(-rho_b[index]*(t145642-t145519-t145528+ \
               t145646+t145648+t145330*t145423*(t145640+t145519+t145528+t145645+t145647-t145411*t145412*t145413*t145525- \
               t145426*t145507*t145516*t145633*2.0-a1f*c*c0f*t145424*t145514*(8.0/9.0)-t145411*t145318*t145517*t145526* \
               t145527*(1.0/2.0)-a1p*c*t145412*t145413*t145418*t145396*(2.0/3.0)))-t145305*(t145479+t145488-t145323* \
               t145360*t145359*t145477-t145330*t145353*t145356*t145349*(t145479+t145488-t145323*t145360*t145359*t145477- \
               t145342*1.0/(t145336*t145336*t145336)*t145480*t145459*2.0+t145342*t145460*t145459*(b2f*c*t145456*(4.0/ \
               9.0)+b4f*t145312*t145457*(1.0E1/9.0)+b1f*c*t145456*t145358*(2.0/9.0)+b3f*c*t145308*t145456*(2.0/3.0) \
               -b1f*t145312*t145471*t145457*(1.0/3.6E1)+b3f*t145312*t145358*t145457*(1.0/1.2E1))+t145331*t145342* \
               1.0/(t145336*t145336*t145336*t145336)*t145480*1.0/(t145339*t145339)*(1.0/2.0)-a1f*c*c0f*t145340*t145456* \
               (8.0/9.0)-t145323*t145470*t145318*t145481*t145482*(1.0/2.0)+a1f*c*t145460*t145317*t145465*t145459* \
               (2.0/3.0)-a1p*c*t145360*t145317*t145365*t145359*(2.0/3.0))+t145330*t145325*t145344*t145353*t145349* \
               1.2E1-t145323*t145470*t145318*t145481*t145482*(1.0/2.0)+t145330*t145344*t145356*t145383*t145366*8.0- \
               t145330*t145353*t145356*t145383*t145467*2.0+t145330*t145344*t145353*t145356*t145498+t145330*t145344* \
               t145356*t145349*t145489*2.0E1-t145330*t145356*t145366*t145349*t145467*8.0+t145330*t145324*t145325* \
               t145344*t145353*t145383*8.0+t145330*t145324*t145325*t145344*t145366*t145349*3.2E1-t145330*t145324* \
               t145325*t145353*t145349*t145467*8.0-a1p*c*t145360*t145317*t145365*t145359*(2.0/3.0)+Aa*t145330*t145383* \
               t145492*t145367*t145377*t145379*4.0+Aa*t145330*t145367*t145385*t145377*t145379*t145498*2.0+Aa*t145330* \
               t145349*t145367*t145377*t145379*(t145325*t145353*1.2E1+t145356*t145489*2.0E1+t145324*t145325*t145366* \
               3.2E1)*2.0-t145500*t145330*t145505*t145383*t145367*t145385*t145379*t145499*2.0-t145500*t145330*t145505* \
               t145492*t145349*t145367*t145379*t145499*2.0+t145330*t145506*1.0/(t145373*t145373*t145373)*t145349* \
               t145367*t145385*t145379*t145499*2.0-t145500*t145330*t145349*t145367*t145385*t145379*t145499*(b2a*c* \
               t145456*(4.0/9.0)+b4a*t145312*t145457*(1.0E1/9.0)+b1a*c*t145456*t145358*(2.0/9.0)+b3a*c*t145308*t145456* \
               (2.0/3.0)-b1a*t145312*t145471*t145457*(1.0/3.6E1)+b3a*t145312*t145358*t145457*(1.0/1.2E1))+Aa*a1a* \
               c*t145330*t145317*t145383*t145367*t145385*t145377*(4.0/3.0)+Aa*a1a*c*t145330*t145317*t145492*t145349* \
               t145367*t145377*(4.0/3.0)+Aa*a1a*c*t145330*t145456*t145349*t145367*t145385*t145377*(8.0/9.0)-t145330* \
               t145506*1.0/(t145373*t145373*t145373*t145373)*t145349*t145367*1.0/(t145376*t145376)*t145385*t145368* \
               t145379*(1.0/2.0)-a1a*c*t145500*t145330*t145505*t145317*t145349*t145367*t145385*t145499*(2.0/3.0)) \
               +t145330*t145423*t145532*2.0+t145411*t145412*t145413*t145418*2.0-t145323*t145360*t145365*t145359*2.0+ \
               a1p*c*c0p*t145343*t145317*(4.0/3.0)-a1p*c*c0p*t145420*t145396*(4.0/3.0)+t145330*t145344*t145353*t145356* \
               t145383*2.0+t145330*t145344*t145356*t145366*t145349*8.0-t145330*t145353*t145356*t145349*t145467*2.0+ \
               t145330*t145324*t145325*t145344*t145353*t145349*8.0+Aa*t145330*t145383*t145367*t145385*t145377*t145379* \
               4.0+Aa*t145330*t145492*t145349*t145367*t145377*t145379*4.0-t145500*t145330*t145505*t145349*t145367* \
               t145385*t145379*t145499*2.0+Aa*a1a*c*t145330*t145317*t145349*t145367*t145385*t145377*(4.0/3.0))+(rho_b[index]* \
               t145581+rho_a[index]*(t145556-t145330*t145423*(t145556-c0f*log((t145331*(1.0/2.0))/(b1f*t145542+b3f* \
               t145543+b2f*c*t145540+b4f*t145312*t145544)+1.0)*(a1f*c*t145540+1.0)*2.0))-t145305*(t145560+t145561+ \
               t145355))*(-ccab2*t145427*t145429*t145575*(gamma_bb[index]*gcab*t145573*(8.8E1/9.0)+t145533*t145427* \
               t145568*(3.2E1/9.0)+gamma_bb[index]*t145427*t145428*t145573*(8.8E1/9.0))+ccab4*1.0/(t145441*t145441* \
               t145441)*t145435*t145436*(t145566*t145566)*2.0+ccab2*t145427*(t145571*t145571)*1.0/(t145446*t145446* \
               t145446)*t145429*2.0+ccab1*gamma_bb[index]*gcab*t145454*t145573*(4.4E1/9.0)+ccab2*t145452*t145533* \
               t145427*t145568*(3.2E1/9.0)-ccab1*t145533*t145427*t145567*t145568*(3.2E1/9.0)-ccab4*t145435*t145436* \
               t145574*(gamma_bb[index]*gcab*t145573*(1.76E2/9.0)+t145533*t145427*t145568*(6.4E1/3.0)+gamma_bb[index]* \
               t145427*t145428*t145573*(1.76E2/3.0)+t145533*t145435*t145429*t145568*(6.4E1/3.0)+gamma_bb[index]*gcab* \
               t145427*t145429*t145573*(1.76E2/3.0)+gamma_bb[index]*t145435*t145428*t145429*t145573*(1.76E2/9.0)+ \
               gcab*t145533*t145427*t145428*t145568*(1.28E2/3.0))+ccab4*t145533*t145435*t145455*t145429*t145568*(6.4E1/ \
               3.0)+ccab2*gamma_bb[index]*t145452*t145427*t145428*t145573*(8.8E1/9.0)-ccab1*gamma_bb[index]*t145427* \
               t145428*t145573*t145567*(4.4E1/9.0)+ccab3*gcab*1.0/(t145450*t145450*t145450)*t145427*t145428*t145429* \
               (t145579*t145579)*2.0+ccab3*gamma_bb[index]*gcab*t145453*t145427*t145429*t145573*(4.4E1/3.0)-ccab2* \
               gamma_bb[index]*t145430*t145427*t145571*t145428*t145575*(1.6E1/3.0)+ccab4*gamma_bb[index]*t145435* \
               t145428*t145455*t145429*t145573*(1.76E2/9.0)+ccab3*gcab*t145533*t145453*t145427*t145428*t145568*(3.2E1/ \
               3.0)+ccab1*gcab*1.0/(t145443*t145443*t145443)*t145533*t145427*t145428*t145568*(3.2E1/9.0)-ccab3*gcab* \
               t145427*t145428*t145572*t145429*(gamma_bb[index]*gcab*t145573*(4.4E1/3.0)+t145533*t145427*t145568* \
               (3.2E1/3.0)+gamma_bb[index]*t145427*t145428*t145573*(8.8E1/3.0)+gamma_bb[index]*gcab*t145427*t145429* \
               t145573*(4.4E1/3.0)+gcab*t145533*t145427*t145428*t145568*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t145430* \
               t145427*t145572*t145429*t145579*8.0-ccab4*gamma_bb[index]*t145430*t145435*t145428*t145429*t145574* \
               t145566*(3.2E1/3.0))+(t145560+t145561+t145355+rho_b[index]*(t145530-t145419+t145330*t145423*(t145419+ \
               t145529-t145512*t145513*t145426*t145507-a1p*c*c0p*t145420*t145396*(2.0/3.0)))-t145305*(t145451-t145323* \
               t145360*t145365*t145359+t145330*t145344*t145353*t145356*t145383+t145330*t145344*t145356*t145366*t145349* \
               4.0-t145330*t145353*t145356*t145349*t145467+t145330*t145324*t145325*t145344*t145353*t145349*4.0+Aa* \
               t145330*t145383*t145367*t145385*t145377*t145379*2.0+Aa*t145330*t145492*t145349*t145367*t145377*t145379* \
               2.0-t145500*t145330*t145505*t145349*t145367*t145385*t145379*t145499+Aa*a1a*c*t145330*t145317*t145349* \
               t145367*t145385*t145377*(2.0/3.0))-c0p*t145411*t145420*2.0-t145330*t145423*t145558)*(ccab1*gamma_bb[index]* \
               gcab*t145430*t145454*(4.0/3.0)-ccab2*t145427*t145571*t145429*t145575-ccab4*t145435*t145436*t145574* \
               t145566+ccab2*gamma_bb[index]*t145430*t145452*t145427*t145428*(8.0/3.0)-ccab1*gamma_bb[index]*t145430* \
               t145427*t145428*t145567*(4.0/3.0)+ccab3*gamma_bb[index]*gcab*t145430*t145453*t145427*t145429*4.0+ccab4* \
               gamma_bb[index]*t145430*t145435*t145428*t145455*t145429*(1.6E1/3.0)-ccab3*gcab*t145427*t145428*t145572* \
               t145429*t145579)*2.0-t145604*t145632*2.0+t145625*t145581*2.0-rho_b[index]*t145581*(ccaa1*gamma_bb[index]* \
               gcaa*t145590*t145573*(8.8E1/9.0)-ccaa1*t145533*t145534*t145609*t145568*2.4E1+ccaa4*t145535*t145536* \
               t145627*t145587*(1.12E3/9.0)+ccaa2*t145533*t145534*t145568*t145599*(3.04E2/9.0)-ccaa2*t145600*t145533* \
               t145623*t145534*t145624*(3.2E1/3.0)-ccaa4*t145602*t145620*t145535*t145536*t145619*(6.4E1/3.0)-ccaa2* \
               t145533*t145534*t145624*t145539*(gamma_bb[index]*gcaa*t145573*(1.76E2/9.0)+t145533*t145534*t145568* \
               (3.04E2/9.0))-ccaa4*t145620*t145535*t145536*t145537*(gamma_bb[index]*gcaa*t145573*(3.52E2/9.0)+t145533* \
               t145534*t145568*(6.08E2/3.0)+t145535*t145536*t145627*(1.12E3/9.0)+gamma_bb[index]*gcaa*t145533*t145534* \
               t145626*2.88E2)+ccaa2*t145533*(t145623*t145623)*t145534*t145539*1.0/(t145598*t145598*t145598)*2.0+ \
               ccaa4*t145535*t145536*t145537*(t145619*t145619)*1.0/(t145586*t145586*t145586)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t145533*t145534*t145626*t145595*7.2E1+ccaa1*gamma_bb[index]*gcaa*t145533*t145534*t145626*1.0/ \
               (t145589*t145589*t145589)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*(t145613*t145613)*t145533*t145534* \
               t145538*1.0/(t145594*t145594*t145594)*2.0-ccaa3*gamma_bb[index]*gcaa*t145533*t145614*t145534*t145538* \
               (gamma_bb[index]*gcaa*t145573*(8.8E1/3.0)+t145533*t145534*t145568*(3.04E2/3.0)+gamma_bb[index]*gcaa* \
               t145533*t145534*t145626*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t145601*t145613*t145533*t145614*t145534* \
               1.6E1)+rho_b[index]*t145632*(t145642-t145519-t145528+t145646+t145648+t145330*t145423*(t145640-t145642+ \
               t145519+t145528+t145645-t145646+t145647-t145648-t145426*t145507*t145516*t145633*2.0-a1f*c*c0f*t145424* \
               t145514*(8.0/9.0)))+rho_b[index]*t145604*t145625*2.0-c0*t145731*t145706*(cx1*gamma_bb[index]*gx*t145573* \
               t145678*(8.8E1/9.0)-cx1*t145533*t145713*t145662*t145568*2.4E1+cx2*t145533*t145662*t145568*t145687* \
               (3.04E2/9.0)+cx4*t145535*t145627*t145663*t145675*(1.12E3/9.0)-cx2*t145600*t145533*t145662*t145727* \
               t145728*(3.2E1/3.0)-cx4*t145602*t145723*t145535*t145724*t145663*(6.4E1/3.0)-cx2*t145533*t145662*t145539* \
               t145728*(gamma_bb[index]*gx*t145573*(1.76E2/9.0)+t145533*t145662*t145568*(3.04E2/9.0))-cx4*t145535* \
               t145724*t145537*t145663*(gamma_bb[index]*gx*t145573*(3.52E2/9.0)+t145535*t145627*t145663*(1.12E3/9.0) \
               +t145533*t145662*t145568*(6.08E2/3.0)+gamma_bb[index]*gx*t145533*t145626*t145662*2.88E2)+cx2*t145533* \
               t145662*(t145727*t145727)*t145539*1.0/(t145686*t145686*t145686)*2.0+cx4*(t145723*t145723)*t145535* \
               t145537*t145663*1.0/(t145674*t145674*t145674)*2.0+cx3*gamma_bb[index]*gx*t145533*t145626*t145662*t145683* \
               7.2E1+cx1*gamma_bb[index]*gx*t145533*t145626*t145662*1.0/(t145677*t145677*t145677)*(1.28E2/9.0)+cx3* \
               gamma_bb[index]*gx*t145533*t145662*(t145717*t145717)*t145538*1.0/(t145682*t145682*t145682)*2.0-cx3* \
               gamma_bb[index]*gx*t145533*t145662*t145538*t145718*(gamma_bb[index]*gx*t145573*(8.8E1/3.0)+t145533* \
               t145662*t145568*(3.04E2/3.0)+gamma_bb[index]*gx*t145533*t145626*t145662*7.2E1)-cx3*gamma_bb[index]* \
               gx*t145601*t145533*t145662*t145717*t145718*1.6E1)-c0*t145731*t145705*t145392*(4.0/9.0)-c0*t145705* \
               t145708*t145664*(8.0/3.0)+c0*t145731*t145664*t145729*(8.0/3.0)+c0*t145706*t145708*t145729*2.0+c0*t145705* \
               t145706*(omega*t145658*t145698*(2.778046668940015E15/5.2776558133248E13)-omega*t145669*t145699*(7.717543294808713E30/ \
               3.713820117856141E27)+omega*t145653*(omega*t145692*t145658*(2.778046668940015E15/7.0368744177664E13) \
               +omega*t145661*t145699*(7.717543294808713E30/4.951760157141521E27)+omega*t145653*(1.0/(rho_b[index]* \
               rho_b[index])*t145652*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t145652*t145657*(7.717543294808713E30/ \
               4.951760157141521E27)+t145655*t145656*1.0/pow(t145649,8.0/3.0)*(3.858771647404357E31/1.980704062856608E28) \
               -t145650*t145652*t145658*(7.717543294808713E30/9.903520314283042E27)+t145650*t145652*t145653*t145688* \
               (2.778046668940015E15/2.11106232532992E14))+t145652*t145690*t145693*t145659*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t145652*t145693*t145688*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t147598 = 1.0/pow(rho_b[index],1.0/3.0);
            double t147599 = c*t147598;
            double t147600 = sqrt(t147599);
            double t147601 = b1f*t147600;
            double t147602 = pow(t147599,3.0/2.0);
            double t147603 = b3f*t147602;
            double t147604 = c*c;
            double t147605 = 1.0/pow(rho_b[index],2.0/3.0);
            double t147606 = b4f*t147604*t147605;
            double t147607 = b2f*c*t147598;
            double t147608 = t147601+t147603+t147606+t147607;
            double t147609 = 1.0/pow(rho_b[index],4.0/3.0);
            double t147610 = b1p*t147600;
            double t147611 = b3p*t147602;
            double t147612 = b4p*t147604*t147605;
            double t147613 = b2p*c*t147598;
            double t147614 = t147610+t147611+t147612+t147613;
            double t147615 = 1.0/pow(rho_b[index],5.0/3.0);
            double t147616 = 1.0/sqrt(t147599);
            double t147617 = 1.0/c0f;
            double t147618 = 1.0/t147608;
            double t147619 = t147617*t147618*(1.0/2.0);
            double t147620 = t147619+1.0;
            double t147621 = 1.0/c0p;
            double t147622 = 1.0/t147614;
            double t147623 = t147621*t147622*(1.0/2.0);
            double t147624 = t147623+1.0;
            double t147625 = a1p*c*t147598;
            double t147626 = t147625+1.0;
            double t147627 = 1.0/t147624;
            double t147628 = 1.0/(t147614*t147614);
            double t147629 = b4p*t147604*t147615*(2.0/3.0);
            double t147630 = b2p*c*t147609*(1.0/3.0);
            double t147631 = b1p*c*t147616*t147609*(1.0/6.0);
            double t147632 = b3p*c*t147600*t147609*(1.0/2.0);
            double t147633 = t147630+t147631+t147632+t147629;
            double t147634 = t147633*t147626*t147627*t147628;
            double t147635 = log(t147624);
            double t147636 = gamma_bb[index]*gamma_bb[index];
            double t147637 = gcaa*gcaa;
            double t147638 = t147636*t147636;
            double t147639 = t147637*t147637;
            double t147640 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t147641 = 1.0/pow(rho_b[index],8.0/3.0);
            double t147642 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t147643 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t147644 = pow(2.0,1.0/3.0);
            double t147645 = t147644*2.0;
            double t147646 = t147645-2.0;
            double t147647 = two_13*2.0;
            double t147648 = t147647-2.0;
            double t147649 = 1.0/t147648;
            double t147650 = log(t147620);
            double t147651 = a1f*c*t147598;
            double t147652 = t147651+1.0;
            double t147653 = gamma_bb[index]*gcaa*t147641*4.0;
            double t147654 = gamma_bb[index]*gcaa*t147642*t147636*t147637*4.0;
            double t147655 = t147643*t147636*t147637*6.0;
            double t147656 = t147640*t147638*t147639;
            double t147657 = t147653+t147654+t147655+t147656+1.0;
            double t147658 = 1.0/t147657;
            double t147659 = gamma_bb[index]*gcaa*t147641;
            double t147660 = t147659+1.0;
            double t147661 = 1.0/t147660;
            double t147662 = gamma_bb[index]*gcaa*t147641*3.0;
            double t147663 = gamma_bb[index]*gcaa*t147642*t147636*t147637;
            double t147664 = t147643*t147636*t147637*3.0;
            double t147665 = t147662+t147663+t147664+1.0;
            double t147666 = 1.0/t147665;
            double t147667 = gamma_bb[index]*gcaa*t147641*2.0;
            double t147668 = t147643*t147636*t147637;
            double t147669 = t147667+t147668+1.0;
            double t147670 = 1.0/t147669;
            double t147671 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t147672 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t147673 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t147674 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t147675 = 1.0/t147620;
            double t147676 = 1.0/(t147608*t147608);
            double t147677 = b4f*t147604*t147615*(2.0/3.0);
            double t147678 = b2f*c*t147609*(1.0/3.0);
            double t147679 = b1f*c*t147616*t147609*(1.0/6.0);
            double t147680 = b3f*c*t147600*t147609*(1.0/2.0);
            double t147681 = t147680+t147677+t147678+t147679;
            double t147682 = a1f*c*c0f*t147650*t147609*(2.0/3.0);
            double t147683 = a1p*c*c0p*t147635*t147609*(2.0/3.0);
            double t147684 = ccaa4*t147638*t147674*t147639*t147658*(3.2E1/3.0);
            double t147685 = ccaa1*gamma_bb[index]*gcaa*t147661*t147672*(8.0/3.0);
            double t147686 = ccaa3*gamma_bb[index]*gcaa*t147636*t147637*t147673*t147666*8.0;
            double t147687 = ccaa2*t147670*t147671*t147636*t147637*(1.6E1/3.0);
            double t147688 = 1.0/(t147660*t147660);
            double t147689 = gamma_bb[index]*gcaa*t147672*8.0;
            double t147690 = gamma_bb[index]*gcaa*t147636*t147637*t147673*8.0;
            double t147691 = t147671*t147636*t147637*1.6E1;
            double t147692 = t147690+t147691+t147689;
            double t147693 = 1.0/(t147665*t147665);
            double t147694 = gamma_bb[index]*gcaa*t147672*(3.2E1/3.0);
            double t147695 = gamma_bb[index]*gcaa*t147636*t147637*t147673*3.2E1;
            double t147696 = t147671*t147636*t147637*3.2E1;
            double t147697 = t147638*t147674*t147639*(3.2E1/3.0);
            double t147698 = t147694+t147695+t147696+t147697;
            double t147699 = 1.0/(t147657*t147657);
            double t147700 = gamma_bb[index]*gcaa*t147672*(1.6E1/3.0);
            double t147701 = t147671*t147636*t147637*(1.6E1/3.0);
            double t147702 = t147700+t147701;
            double t147703 = 1.0/(t147669*t147669);
            double t147704 = t147684+t147685+t147686+t147687-ccaa1*t147671*t147636*t147637*t147688*(8.0/3.0)- \
               ccaa2*t147702*t147703*t147643*t147636*t147637-ccaa4*t147640*t147638*t147639*t147698*t147699-ccaa3* \
               gamma_bb[index]*gcaa*t147642*t147636*t147637*t147692*t147693;
            double t147705 = c0f*t147650*t147652*2.0;
            double t147706 = c0p*t147626*t147635*2.0;
            double t147707 = 1.0/pow(rho_b[index],1.0E1);
            double t147708 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t147709 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t147710 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t147711 = ccaa4*t147640*t147638*t147639*t147658;
            double t147712 = ccaa1*gamma_bb[index]*gcaa*t147641*t147661;
            double t147713 = ccaa3*gamma_bb[index]*gcaa*t147642*t147636*t147637*t147666;
            double t147714 = ccaa2*t147643*t147670*t147636*t147637;
            double t147715 = ccaa0+t147711+t147712+t147713+t147714;
            double t147716 = 1.0/pow(rho_b[index],7.0/3.0);
            double t147717 = 1.0/pow(t147599,3.0/2.0);
            double t147718 = t147681*t147681;
            double t147719 = t147633*t147633;
            double t147720 = 1.0/(t147614*t147614*t147614);
            double t147721 = t147720*t147626*t147627*t147719*2.0;
            double t147722 = b4p*t147604*t147641*(1.0E1/9.0);
            double t147723 = b2p*c*t147716*(4.0/9.0);
            double t147724 = b3p*t147604*t147641*t147616*(1.0/1.2E1);
            double t147725 = b1p*c*t147616*t147716*(2.0/9.0);
            double t147726 = b3p*c*t147600*t147716*(2.0/3.0);
            double t147727 = t147722+t147723+t147724+t147725+t147726-b1p*t147604*t147641*t147717*(1.0/3.6E1);
            double t147728 = 1.0/(t147624*t147624);
            double t147729 = 1.0/(t147614*t147614*t147614*t147614);
            double t147730 = a1p*c*c0p*t147635*t147716*(8.0/9.0);
            double t147731 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
            double t147732 = 1.0/(omega*omega);
            double t147733 = pow(t147731,2.0/3.0);
            double t147736 = t147732*t147733;
            double t147734 = exp(-t147736);
            double t147735 = 1.0/pow(t147731,1.0/3.0);
            double t147737 = omega*omega;
            double t147738 = t147734-1.0;
            double t147739 = 1.0/pow(t147731,2.0/3.0);
            double t147740 = 1.0/pow(t147731,4.0/3.0);
            double t147741 = 1.0/omega;
            double t147742 = t147737*t147738*t147739*(1.0/2.0);
            double t147743 = t147742-t147734+3.0/2.0;
            double t147744 = gx*gx;
            double t147745 = t147744*t147744;
            double t147746 = pow(rho_b[index],1.0/3.0);
            double t147747 = pow(t147731,1.0/3.0);
            double t147748 = t147741*t147747;
            double t147749 = erf(t147748);
            double t147750 = t147749*(3.991211251234741E15/2.251799813685248E15);
            double t147782 = omega*t147743*t147735;
            double t147751 = t147750-t147782;
            double t147752 = gamma_bb[index]*gx*t147641*4.0;
            double t147753 = gamma_bb[index]*gx*t147642*t147636*t147744*4.0;
            double t147754 = t147643*t147636*t147744*6.0;
            double t147755 = t147640*t147745*t147638;
            double t147756 = t147752+t147753+t147754+t147755+1.0;
            double t147757 = 1.0/t147756;
            double t147758 = gamma_bb[index]*gx*t147641;
            double t147759 = t147758+1.0;
            double t147760 = 1.0/t147759;
            double t147761 = gamma_bb[index]*gx*t147641*3.0;
            double t147762 = gamma_bb[index]*gx*t147642*t147636*t147744;
            double t147763 = t147643*t147636*t147744*3.0;
            double t147764 = t147761+t147762+t147763+1.0;
            double t147765 = 1.0/t147764;
            double t147766 = gamma_bb[index]*gx*t147641*2.0;
            double t147767 = t147643*t147636*t147744;
            double t147768 = t147766+t147767+1.0;
            double t147769 = 1.0/t147768;
            double t147770 = 1.0/rho_b[index];
            double t147771 = t147734*t147770*(1.0/3.0);
            double t147772 = 1.0/pow(t147731,5.0/3.0);
            double t147773 = t147772*t147737*t147738*(2.778046668940015E15/1.40737488355328E14);
            double t147777 = t147732*t147734*t147735*(2.778046668940015E15/7.0368744177664E13);
            double t147774 = t147771+t147773-t147777;
            double t147775 = 1.0/sqrt(3.141592653589793);
            double t147776 = omega*t147740*t147743*(2.778046668940015E15/1.40737488355328E14);
            double t147778 = omega*t147735*t147774;
            double t147779 = t147741*t147734*t147739*t147775*(1.108777112152858E31/1.584563250285287E29);
            double t147780 = t147776+t147778+t147779;
            double t147781 = 1.0/pow(t147731,7.0/3.0);
            double t147783 = cx4*t147640*t147745*t147638*t147757;
            double t147784 = cx1*gamma_bb[index]*gx*t147641*t147760;
            double t147785 = cx3*gamma_bb[index]*gx*t147642*t147636*t147744*t147765;
            double t147786 = cx2*t147643*t147636*t147744*t147769;
            double t147787 = cx0+t147783+t147784+t147785+t147786;
            double t147788 = pow(rho_b[index],4.0/3.0);
            double t147789 = omega*t147740*t147751*(2.778046668940015E15/1.05553116266496E14);
            double t147790 = cx4*t147745*t147638*t147674*t147757*(3.2E1/3.0);
            double t147791 = cx1*gamma_bb[index]*gx*t147760*t147672*(8.0/3.0);
            double t147792 = cx3*gamma_bb[index]*gx*t147636*t147744*t147673*t147765*8.0;
            double t147793 = cx2*t147671*t147636*t147744*t147769*(1.6E1/3.0);
            double t147794 = 1.0/(t147759*t147759);
            double t147795 = gamma_bb[index]*gx*t147672*8.0;
            double t147796 = gamma_bb[index]*gx*t147636*t147744*t147673*8.0;
            double t147797 = t147671*t147636*t147744*1.6E1;
            double t147798 = t147795+t147796+t147797;
            double t147799 = 1.0/(t147764*t147764);
            double t147800 = gamma_bb[index]*gx*t147672*(3.2E1/3.0);
            double t147801 = gamma_bb[index]*gx*t147636*t147744*t147673*3.2E1;
            double t147802 = t147671*t147636*t147744*3.2E1;
            double t147803 = t147745*t147638*t147674*(3.2E1/3.0);
            double t147804 = t147800+t147801+t147802+t147803;
            double t147805 = 1.0/(t147756*t147756);
            double t147806 = gamma_bb[index]*gx*t147672*(1.6E1/3.0);
            double t147807 = t147671*t147636*t147744*(1.6E1/3.0);
            double t147808 = t147806+t147807;
            double t147809 = 1.0/(t147768*t147768);
            double t147810 = t147790+t147791+t147792+t147793-cx1*t147671*t147636*t147744*t147794*(8.0/3.0)-cx2* \
               t147643*t147636*t147744*t147808*t147809-cx4*t147640*t147804*t147805*t147745*t147638-cx3*gamma_bb[index]* \
               gx*t147642*t147636*t147744*t147798*t147799;
            double t147811 = t147789-omega*t147735*t147780*(4.0/3.0);
            double t147812 = omega*t147751*t147735*(4.0/3.0);
            double t147813 = t147812-1.0;
            v_rho_b_rho_b_[index] = t147704*(t147706+t147646*t147649*(t147705-c0p*t147626*t147635*2.0))*2.0+t147715* \
               (-t147634+t147683+t147646*t147649*(t147634+t147682-t147652*t147681*t147675*t147676-a1p*c*c0p*t147635* \
               t147609*(2.0/3.0)))*2.0+rho_b[index]*t147715*(-t147721-t147730+t147646*t147649*(t147721+t147730-t147626* \
               t147627*t147628*t147727-t147652*1.0/(t147608*t147608*t147608)*t147718*t147675*2.0+t147652*t147675* \
               t147676*(b2f*c*t147716*(4.0/9.0)+b4f*t147604*t147641*(1.0E1/9.0)+b1f*c*t147616*t147716*(2.0/9.0)+b3f* \
               c*t147600*t147716*(2.0/3.0)-b1f*t147604*t147641*t147717*(1.0/3.6E1)+b3f*t147604*t147641*t147616*(1.0/ \
               1.2E1))+1.0/(t147620*t147620)*t147652*1.0/(t147608*t147608*t147608*t147608)*t147617*t147718*(1.0/2.0) \
               -a1f*c*c0f*t147650*t147716*(8.0/9.0)-t147621*t147626*t147719*t147728*t147729*(1.0/2.0)+a1f*c*t147609* \
               t147681*t147675*t147676*(2.0/3.0)-a1p*c*t147633*t147609*t147627*t147628*(2.0/3.0))+t147626*t147627* \
               t147628*t147727+t147621*t147626*t147719*t147728*t147729*(1.0/2.0)+a1p*c*t147633*t147609*t147627*t147628* \
               (2.0/3.0))-rho_b[index]*t147704*(-t147634+t147683+t147646*t147649*(t147634+t147682-t147683-t147652* \
               t147681*t147675*t147676))*2.0-rho_b[index]*(t147706+t147646*t147649*(t147705-t147706))*(ccaa1*gamma_bb[index]* \
               gcaa*t147661*t147709*(8.8E1/9.0)+ccaa2*t147670*t147636*t147708*t147637*(3.04E2/9.0)+ccaa4*t147710* \
               t147638*t147639*t147658*(1.12E3/9.0)-ccaa1*t147636*t147708*t147637*t147688*2.4E1-ccaa2*t147702*t147703* \
               t147671*t147636*t147637*(3.2E1/3.0)-ccaa4*t147638*t147674*t147639*t147698*t147699*(6.4E1/3.0)-ccaa2* \
               t147703*t147643*t147636*t147637*(gamma_bb[index]*gcaa*t147709*(1.76E2/9.0)+t147636*t147708*t147637* \
               (3.04E2/9.0))-ccaa4*t147640*t147638*t147639*t147699*(gamma_bb[index]*gcaa*t147709*(3.52E2/9.0)+t147710* \
               t147638*t147639*(1.12E3/9.0)+t147636*t147708*t147637*(6.08E2/3.0)+gamma_bb[index]*gcaa*t147707*t147636* \
               t147637*2.88E2)+ccaa2*(t147702*t147702)*t147643*t147636*t147637*1.0/(t147669*t147669*t147669)*2.0+ \
               ccaa4*t147640*t147638*t147639*1.0/(t147657*t147657*t147657)*(t147698*t147698)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t147707*t147636*t147637*t147666*7.2E1+ccaa1*gamma_bb[index]*gcaa*1.0/(t147660*t147660*t147660) \
               *t147707*t147636*t147637*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t147642*t147636*t147637*1.0/(t147665* \
               t147665*t147665)*(t147692*t147692)*2.0-ccaa3*gamma_bb[index]*gcaa*t147642*t147636*t147637*t147693* \
               (gamma_bb[index]*gcaa*t147709*(8.8E1/3.0)+t147636*t147708*t147637*(3.04E2/3.0)+gamma_bb[index]*gcaa* \
               t147707*t147636*t147637*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t147636*t147637*t147673*t147692*t147693* \
               1.6E1)-c0*t147813*t147788*(cx1*gamma_bb[index]*gx*t147760*t147709*(8.8E1/9.0)-cx1*t147636*t147708* \
               t147744*t147794*2.4E1+cx2*t147636*t147708*t147744*t147769*(3.04E2/9.0)+cx4*t147710*t147745*t147638* \
               t147757*(1.12E3/9.0)-cx2*t147671*t147636*t147744*t147808*t147809*(3.2E1/3.0)-cx4*t147804*t147805*t147745* \
               t147638*t147674*(6.4E1/3.0)-cx2*t147643*t147636*t147744*t147809*(gamma_bb[index]*gx*t147709*(1.76E2/ \
               9.0)+t147636*t147708*t147744*(3.04E2/9.0))-cx4*t147640*t147805*t147745*t147638*(gamma_bb[index]*gx* \
               t147709*(3.52E2/9.0)+t147710*t147745*t147638*(1.12E3/9.0)+t147636*t147708*t147744*(6.08E2/3.0)+gamma_bb[index]* \
               gx*t147707*t147636*t147744*2.88E2)+cx2*t147643*t147636*t147744*(t147808*t147808)*1.0/(t147768*t147768* \
               t147768)*2.0+cx4*t147640*(t147804*t147804)*t147745*t147638*1.0/(t147756*t147756*t147756)*2.0+cx3*gamma_bb[index]* \
               gx*t147707*t147636*t147744*t147765*7.2E1+cx1*gamma_bb[index]*gx*t147707*t147636*t147744*1.0/(t147759* \
               t147759*t147759)*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t147642*t147636*t147744*1.0/(t147764*t147764* \
               t147764)*(t147798*t147798)*2.0-cx3*gamma_bb[index]*gx*t147642*t147636*t147744*t147799*(gamma_bb[index]* \
               gx*t147709*(8.8E1/3.0)+t147636*t147708*t147744*(3.04E2/3.0)+gamma_bb[index]*gx*t147707*t147636*t147744* \
               7.2E1)-cx3*gamma_bb[index]*gx*t147636*t147744*t147673*t147798*t147799*1.6E1)+c0*t147810*t147813*t147746* \
               (8.0/3.0)-c0*t147810*t147811*t147788*2.0-c0*t147605*t147813*t147787*(4.0/9.0)+c0*t147811*t147746*t147787* \
               (8.0/3.0)+c0*t147787*t147788*(omega*t147740*t147780*(2.778046668940015E15/5.2776558133248E13)-omega* \
               t147751*t147781*(7.717543294808713E30/3.713820117856141E27)+omega*t147735*(omega*t147740*t147774*(2.778046668940015E15/ \
               7.0368744177664E13)+omega*t147743*t147781*(7.717543294808713E30/4.951760157141521E27)+omega*t147735* \
               (1.0/(rho_b[index]*rho_b[index])*t147734*(5.0/9.0)-1.0/(omega*omega*omega*omega)*t147734*t147739*(7.717543294808713E30/ \
               4.951760157141521E27)+1.0/pow(t147731,8.0/3.0)*t147737*t147738*(3.858771647404357E31/1.980704062856608E28) \
               -t147740*t147732*t147734*(7.717543294808713E30/9.903520314283042E27)+t147732*t147734*t147770*t147735* \
               (2.778046668940015E15/2.11106232532992E14))+t147741*t147734*t147772*t147775*(3.080234563013177E46/ \
               1.115037259926531E43)+1.0/(omega*omega*omega)*t147734*t147770*t147775*(1.108777112152858E31/2.37684487542793E29) \
               )*(4.0/3.0));
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t145733 = 1.0/pow(rho_a[index],1.0/3.0);
                double t145734 = c*t145733;
                double t145735 = sqrt(t145734);
                double t145736 = pow(t145734,3.0/2.0);
                double t145737 = c*c;
                double t145738 = 1.0/pow(rho_a[index],2.0/3.0);
                double t145739 = 1.0/c0p;
                double t145740 = b1p*t145735;
                double t145741 = b3p*t145736;
                double t145742 = b4p*t145737*t145738;
                double t145743 = b2p*c*t145733;
                double t145744 = t145740+t145741+t145742+t145743;
                double t145745 = 1.0/t145744;
                double t145746 = t145745*t145739*(1.0/2.0);
                double t145747 = t145746+1.0;
                double t145748 = log(t145747);
                double t145749 = a1p*c*t145733;
                double t145750 = t145749+1.0;
                double t145751 = 1.0/pow(rho_a[index],8.0/3.0);
                double t145752 = gamma_aa[index]*gamma_aa[index];
                double t145753 = gcaa*gcaa;
                double t145754 = t145753*t145753;
                double t145755 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t145756 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t145757 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t145758 = gamma_aa[index]*gcaa*t145751;
                double t145759 = t145758+1.0;
                double t145760 = gamma_aa[index]*gcaa*t145751*3.0;
                double t145761 = gamma_aa[index]*gcaa*t145752*t145753*t145757;
                double t145762 = t145752*t145753*t145756*3.0;
                double t145763 = t145760+t145761+t145762+1.0;
                double t145764 = t145752*t145752;
                double t145765 = gamma_aa[index]*gcaa*t145751*4.0;
                double t145766 = gamma_aa[index]*gcaa*t145752*t145753*t145757*4.0;
                double t145767 = t145752*t145753*t145756*6.0;
                double t145768 = t145754*t145755*t145764;
                double t145769 = t145765+t145766+t145767+t145768+1.0;
                double t145770 = gamma_aa[index]*gcaa*t145751*2.0;
                double t145771 = t145752*t145753*t145756;
                double t145772 = t145770+t145771+1.0;
                double t145773 = rho_a[index]+rho_b[index];
                double t145774 = 1.0/pow(t145773,1.0/3.0);
                double t145775 = c*t145774;
                double t145776 = sqrt(t145775);
                double t145777 = b1p*t145776;
                double t145778 = pow(t145775,3.0/2.0);
                double t145779 = b3p*t145778;
                double t145780 = 1.0/pow(t145773,2.0/3.0);
                double t145781 = b4p*t145780*t145737;
                double t145782 = b2p*c*t145774;
                double t145783 = t145781+t145782+t145777+t145779;
                double t145784 = 1.0/pow(t145773,4.0/3.0);
                double t145785 = two_13*2.0;
                double t145786 = t145785-2.0;
                double t145787 = 1.0/t145786;
                double t145788 = 1.0/c0f;
                double t145789 = 1.0/t145783;
                double t145790 = t145739*t145789*(1.0/2.0);
                double t145791 = t145790+1.0;
                double t145792 = a1p*c*t145774;
                double t145793 = t145792+1.0;
                double t145794 = rho_a[index]-rho_b[index];
                double t145795 = t145794*t145794;
                double t145796 = 1.0/t145773;
                double t145797 = t145794*t145796;
                double t145798 = b1f*t145776;
                double t145799 = b3f*t145778;
                double t145800 = b4f*t145780*t145737;
                double t145801 = b2f*c*t145774;
                double t145802 = t145800+t145801+t145798+t145799;
                double t145803 = 1.0/t145802;
                double t145804 = t145803*t145788*(1.0/2.0);
                double t145805 = t145804+1.0;
                double t145806 = log(t145805);
                double t145807 = a1f*c*t145774;
                double t145808 = t145807+1.0;
                double t145809 = log(t145791);
                double t145819 = c0f*t145806*t145808*2.0;
                double t145820 = c0p*t145809*t145793*2.0;
                double t145810 = -t145820+t145819;
                double t145811 = t145797+1.0;
                double t145812 = pow(t145811,4.0/3.0);
                double t145813 = -t145797+1.0;
                double t145814 = pow(t145813,4.0/3.0);
                double t145815 = t145812+t145814-2.0;
                double t145816 = 1.0/(t145773*t145773);
                double t145847 = t145816*t145794;
                double t145817 = -t145847+t145796;
                double t145818 = 1.0/(t145773*t145773*t145773*t145773);
                double t145821 = t145795*t145795;
                double t145822 = 1.0/pow(t145773,5.0/3.0);
                double t145823 = 1.0/sqrt(t145775);
                double t145824 = 1.0/t145791;
                double t145825 = 1.0/(t145783*t145783);
                double t145826 = b4p*t145822*t145737*(2.0/3.0);
                double t145827 = b2p*c*t145784*(1.0/3.0);
                double t145828 = b1p*c*t145823*t145784*(1.0/6.0);
                double t145829 = b3p*c*t145784*t145776*(1.0/2.0);
                double t145830 = t145826+t145827+t145828+t145829;
                double t145831 = t145830*t145824*t145825*t145793;
                double t145832 = 1.0/(t145773*t145773*t145773*t145773*t145773);
                double t145833 = 1.0/d2fz0;
                double t145834 = 1.0/Aa;
                double t145835 = b1a*t145776;
                double t145836 = b3a*t145778;
                double t145837 = b4a*t145780*t145737;
                double t145838 = b2a*c*t145774;
                double t145839 = t145835+t145836+t145837+t145838;
                double t145840 = 1.0/t145839;
                double t145841 = t145840*t145834*(1.0/2.0);
                double t145842 = t145841+1.0;
                double t145843 = log(t145842);
                double t145844 = a1a*c*t145774;
                double t145845 = t145844+1.0;
                double t145846 = pow(t145811,1.0/3.0);
                double t145848 = t145817*t145846*(4.0/3.0);
                double t145849 = pow(t145813,1.0/3.0);
                double t145850 = t145848-t145817*t145849*(4.0/3.0);
                double t145851 = t145821*t145818;
                double t145852 = t145851-1.0;
                double t145853 = pow(2.0,1.0/3.0);
                double t145854 = t145853*2.0;
                double t145855 = t145854-2.0;
                double t145856 = a1f*c*t145733;
                double t145857 = t145856+1.0;
                double t145858 = b1f*t145735;
                double t145859 = b3f*t145736;
                double t145860 = b4f*t145737*t145738;
                double t145861 = b2f*c*t145733;
                double t145862 = t145860+t145861+t145858+t145859;
                double t145863 = 1.0/t145862;
                double t145864 = t145863*t145788*(1.0/2.0);
                double t145865 = t145864+1.0;
                double t145866 = 1.0/pow(rho_a[index],4.0/3.0);
                double t145867 = 1.0/pow(rho_a[index],5.0/3.0);
                double t145868 = 1.0/sqrt(t145734);
                double t145869 = log(t145865);
                double t145870 = 1.0/t145747;
                double t145871 = 1.0/(t145744*t145744);
                double t145872 = b4p*t145737*t145867*(2.0/3.0);
                double t145873 = b2p*c*t145866*(1.0/3.0);
                double t145874 = b1p*c*t145866*t145868*(1.0/6.0);
                double t145875 = b3p*c*t145735*t145866*(1.0/2.0);
                double t145876 = t145872+t145873+t145874+t145875;
                double t145877 = t145750*t145870*t145871*t145876;
                double t145878 = c0f*t145857*t145869*2.0;
                double t145879 = c0p*t145750*t145748*2.0;
                double t145880 = gamma_aa[index]*t145751*(1.0/2.0);
                double t145881 = 1.0/pow(rho_b[index],8.0/3.0);
                double t145882 = gamma_bb[index]*t145881*(1.0/2.0);
                double t145883 = t145880+t145882;
                double t145884 = gcab*t145883;
                double t145885 = t145884+1.0;
                double t145886 = gcab*gcab;
                double t145887 = t145883*t145883;
                double t145888 = t145886*t145886;
                double t145889 = t145887*t145887;
                double t145890 = t145886*t145887;
                double t145891 = gcab*t145883*2.0;
                double t145892 = t145890+t145891+1.0;
                double t145893 = t145886*t145887*3.0;
                double t145894 = gcab*t145883*t145886*t145887;
                double t145895 = gcab*t145883*3.0;
                double t145896 = t145893+t145894+t145895+1.0;
                double t145897 = t145886*t145887*6.0;
                double t145898 = gcab*t145883*t145886*t145887*4.0;
                double t145899 = t145888*t145889;
                double t145900 = gcab*t145883*4.0;
                double t145901 = t145900+t145897+t145898+t145899+1.0;
                double t145902 = t145878-t145879;
                double t145903 = 1.0/pow(rho_b[index],1.0/3.0);
                double t145904 = c*t145903;
                double t145905 = sqrt(t145904);
                double t145906 = pow(t145904,3.0/2.0);
                double t145907 = 1.0/pow(rho_b[index],2.0/3.0);
                double t145908 = b1p*t145905;
                double t145909 = b3p*t145906;
                double t145910 = b4p*t145907*t145737;
                double t145911 = b2p*c*t145903;
                double t145912 = t145910+t145911+t145908+t145909;
                double t145913 = 1.0/t145912;
                double t145914 = t145913*t145739*(1.0/2.0);
                double t145915 = t145914+1.0;
                double t145916 = log(t145915);
                double t145917 = a1p*c*t145903;
                double t145918 = t145917+1.0;
                double t145919 = c0p*t145916*t145918*2.0;
                double t145920 = t145810*t145821*t145815*t145818*t145787;
                double t145921 = Aa*t145815*t145833*t145843*t145852*t145845*t145787*2.0;
                double t145922 = 1.0/t145885;
                double t145923 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t145924 = 1.0/(t145885*t145885);
                double t145925 = 1.0/t145892;
                double t145926 = 1.0/(t145896*t145896);
                double t145927 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t145928 = 1.0/(t145892*t145892);
                double t145929 = 1.0/t145896;
                double t145930 = 1.0/t145901;
                double t145931 = 1.0/(t145901*t145901);
                double t145932 = gcab*t145751*2.0;
                double t145933 = t145751*t145883*t145886*6.0;
                double t145934 = gcab*t145751*t145886*t145887*6.0;
                double t145935 = t145751*t145883*t145887*t145888*2.0;
                double t145936 = t145932+t145933+t145934+t145935;
                double t145937 = gamma_aa[index]*gcab*t145923*(8.0/3.0);
                double t145938 = gamma_aa[index]*t145923*t145883*t145886*(8.0/3.0);
                double t145939 = t145937+t145938;
                double t145940 = gcab*t145751;
                double t145941 = t145751*t145883*t145886;
                double t145942 = t145940+t145941;
                double t145943 = gamma_aa[index]*gcab*t145923*(1.6E1/3.0);
                double t145944 = gamma_aa[index]*gcab*t145923*t145886*t145887*1.6E1;
                double t145945 = gamma_aa[index]*t145923*t145883*t145887*t145888*(1.6E1/3.0);
                double t145946 = gamma_aa[index]*t145923*t145883*t145886*1.6E1;
                double t145947 = t145943+t145944+t145945+t145946;
                double t145948 = gcab*t145751*(3.0/2.0);
                double t145949 = t145751*t145883*t145886*3.0;
                double t145950 = gcab*t145751*t145886*t145887*(3.0/2.0);
                double t145951 = t145950+t145948+t145949;
                double t145952 = gamma_aa[index]*gcab*t145923*4.0;
                double t145953 = gamma_aa[index]*gcab*t145923*t145886*t145887*4.0;
                double t145954 = gamma_aa[index]*t145923*t145883*t145886*8.0;
                double t145955 = t145952+t145953+t145954;
                double t145956 = t145902*t145855*t145787;
                double t145957 = t145956+t145879;
                double t145958 = 1.0/t145759;
                double t145959 = 1.0/t145769;
                double t145960 = 1.0/t145772;
                double t145961 = 1.0/t145763;
                double t145962 = 1.0/(t145759*t145759);
                double t145963 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t145964 = 1.0/(t145763*t145763);
                double t145965 = 1.0/(t145772*t145772);
                double t145966 = gcaa*t145751*3.0;
                double t145967 = gamma_aa[index]*t145753*t145756*6.0;
                double t145968 = gcaa*t145752*t145753*t145757*3.0;
                double t145969 = t145966+t145967+t145968;
                double t145970 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t145971 = 1.0/(t145769*t145769);
                double t145972 = gcaa*t145751*4.0;
                double t145973 = gamma_aa[index]*t145753*t145756*1.2E1;
                double t145974 = gcaa*t145752*t145753*t145757*1.2E1;
                double t145975 = gamma_aa[index]*t145752*t145754*t145755*4.0;
                double t145976 = t145972+t145973+t145974+t145975;
                double t145977 = gcaa*t145751*2.0;
                double t145978 = gamma_aa[index]*t145753*t145756*2.0;
                double t145979 = t145977+t145978;
                double t145980 = gamma_aa[index]*gcaa*t145923*(1.6E1/3.0);
                double t145981 = t145752*t145753*t145927*(1.6E1/3.0);
                double t145982 = t145980+t145981;
                double t145983 = gamma_aa[index]*gcaa*t145923*8.0;
                double t145984 = gamma_aa[index]*gcaa*t145752*t145753*t145963*8.0;
                double t145985 = t145752*t145753*t145927*1.6E1;
                double t145986 = t145983+t145984+t145985;
                double t145987 = gamma_aa[index]*gcaa*t145923*(3.2E1/3.0);
                double t145988 = gamma_aa[index]*gcaa*t145752*t145753*t145963*3.2E1;
                double t145989 = t145752*t145753*t145927*3.2E1;
                double t145990 = t145754*t145970*t145764*(3.2E1/3.0);
                double t145991 = t145990+t145987+t145988+t145989;
                double t145992 = 1.0/t145865;
                double t145993 = 1.0/(t145862*t145862);
                double t145994 = b4f*t145737*t145867*(2.0/3.0);
                double t145995 = b2f*c*t145866*(1.0/3.0);
                double t145996 = b1f*c*t145866*t145868*(1.0/6.0);
                double t145997 = b3f*c*t145735*t145866*(1.0/2.0);
                double t145998 = t145994+t145995+t145996+t145997;
                double t145999 = a1f*c*c0f*t145866*t145869*(2.0/3.0);
                double t146000 = a1p*c*c0p*t145748*t145866*(2.0/3.0);
                double t146001 = ccaa1*gcaa*t145751*t145958;
                double t146002 = ccaa4*gamma_aa[index]*t145752*t145754*t145755*t145959*4.0;
                double t146003 = ccaa2*gamma_aa[index]*t145753*t145960*t145756*2.0;
                double t146004 = ccaa3*gcaa*t145752*t145753*t145961*t145757*3.0;
                double t146005 = t146001+t146002+t146003+t146004-ccaa1*gamma_aa[index]*t145753*t145962*t145756-ccaa4* \
                   t145754*t145755*t145764*t145971*t145976-ccaa2*t145752*t145753*t145756*t145965*t145979-ccaa3*gamma_aa[index]* \
                   gcaa*t145752*t145753*t145757*t145964*t145969;
                double t146006 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t146007 = 1.0/pow(t146006,1.0/3.0);
                double t146008 = 1.0/(omega*omega);
                double t146009 = pow(t146006,2.0/3.0);
                double t146059 = t146008*t146009;
                double t146010 = exp(-t146059);
                double t146011 = gx*gx;
                double t146012 = t146011*t146011;
                double t146013 = gamma_aa[index]*gx*t145751;
                double t146014 = t146013+1.0;
                double t146015 = gamma_aa[index]*gx*t145751*3.0;
                double t146016 = gamma_aa[index]*gx*t146011*t145752*t145757;
                double t146017 = t146011*t145752*t145756*3.0;
                double t146018 = t146015+t146016+t146017+1.0;
                double t146019 = gamma_aa[index]*gx*t145751*2.0;
                double t146020 = t146011*t145752*t145756;
                double t146021 = t146020+t146019+1.0;
                double t146022 = 1.0/(t146018*t146018);
                double t146023 = gamma_aa[index]*gx*t145751*4.0;
                double t146024 = gamma_aa[index]*gx*t146011*t145752*t145757*4.0;
                double t146025 = t146011*t145752*t145756*6.0;
                double t146026 = t146012*t145755*t145764;
                double t146027 = t146023+t146024+t146025+t146026+1.0;
                double t146028 = 1.0/(t146027*t146027);
                double t146029 = 1.0/(t146021*t146021);
                double t146030 = gamma_aa[index]*gx*t145923*(1.6E1/3.0);
                double t146031 = t146011*t145752*t145927*(1.6E1/3.0);
                double t146032 = t146030+t146031;
                double t146033 = gx*t145751*2.0;
                double t146034 = gamma_aa[index]*t146011*t145756*2.0;
                double t146035 = t146033+t146034;
                double t146036 = gx*t145751*3.0;
                double t146037 = gamma_aa[index]*t146011*t145756*6.0;
                double t146038 = gx*t146011*t145752*t145757*3.0;
                double t146039 = t146036+t146037+t146038;
                double t146040 = gamma_aa[index]*gx*t145923*8.0;
                double t146041 = gamma_aa[index]*gx*t146011*t145752*t145963*8.0;
                double t146042 = t146011*t145752*t145927*1.6E1;
                double t146043 = t146040+t146041+t146042;
                double t146044 = gamma_aa[index]*gx*t145923*(3.2E1/3.0);
                double t146045 = gamma_aa[index]*gx*t146011*t145752*t145963*3.2E1;
                double t146046 = t146011*t145752*t145927*3.2E1;
                double t146047 = t146012*t145970*t145764*(3.2E1/3.0);
                double t146048 = t146044+t146045+t146046+t146047;
                double t146049 = gx*t145751*4.0;
                double t146050 = gamma_aa[index]*t146011*t145756*1.2E1;
                double t146051 = gx*t146011*t145752*t145757*1.2E1;
                double t146052 = gamma_aa[index]*t146012*t145752*t145755*4.0;
                double t146053 = t146050+t146051+t146052+t146049;
                double t146054 = 1.0/omega;
                double t146055 = pow(t146006,1.0/3.0);
                double t146056 = t146054*t146055;
                double t146057 = erf(t146056);
                double t146058 = t146057*(3.991211251234741E15/2.251799813685248E15);
                double t146060 = omega*omega;
                double t146061 = 1.0/pow(t146006,2.0/3.0);
                double t146062 = t146010-1.0;
                double t146063 = t146060*t146061*t146062*(1.0/2.0);
                double t146064 = -t146010+t146063+3.0/2.0;
                double t146075 = omega*t146007*t146064;
                double t146065 = -t146075+t146058;
                double t146066 = omega*t146007*t146065*(4.0/3.0);
                double t146067 = t146066-1.0;
                double t146068 = 1.0/t146014;
                double t146069 = 1.0/t146027;
                double t146070 = 1.0/t146021;
                double t146071 = 1.0/t146018;
                double t146072 = 1.0/(t146014*t146014);
                double t146073 = pow(rho_a[index],4.0/3.0);
                double t146074 = 1.0/pow(t146006,4.0/3.0);
                double t146076 = cx1*gx*t145751*t146068;
                double t146077 = cx4*gamma_aa[index]*t146012*t145752*t146069*t145755*4.0;
                double t146078 = cx2*gamma_aa[index]*t146011*t146070*t145756*2.0;
                double t146079 = cx3*gx*t146011*t146071*t145752*t145757*3.0;
                double t146080 = t146076+t146077+t146078+t146079-cx1*gamma_aa[index]*t146011*t146072*t145756-cx2* \
                   t146011*t146035*t146029*t145752*t145756-cx4*t146012*t146053*t146028*t145755*t145764-cx3*gamma_aa[index]* \
                   gx*t146011*t146022*t146039*t145752*t145757;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t145957+rho_b[index]*(t145919-t145855*t145787*(t145919- \
                   c0f*log((t145788*(1.0/2.0))/(b1f*t145905+b3f*t145906+b2f*c*t145903+b4f*t145907*t145737)+1.0)*(a1f* \
                   c*t145903+1.0)*2.0))-t145773*(t145820+t145920+t145921))*(ccab1*gcab*t145922*t145923*(4.0/3.0)-ccab2* \
                   t145928*t145886*t145887*(gcab*t145923*(8.0/3.0)+gamma_aa[index]*t145927*t145886*(4.0/3.0)+t145923* \
                   t145883*t145886*(8.0/3.0))-ccab4*t145931*t145888*t145889*(gcab*t145923*(1.6E1/3.0)+gamma_aa[index]* \
                   t145927*t145886*8.0+t145923*t145883*t145886*1.6E1+gamma_aa[index]*t145927*t145887*t145888*8.0+gcab* \
                   t145923*t145886*t145887*1.6E1+t145923*t145883*t145887*t145888*(1.6E1/3.0)+gamma_aa[index]*gcab*t145927* \
                   t145883*t145886*1.6E1)-ccab1*gamma_aa[index]*t145924*t145927*t145886*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t145925*t145927*t145886*(4.0/3.0)-ccab1*t145923*t145924*t145883*t145886*(4.0/3.0)+ccab2*t145923*t145925* \
                   t145883*t145886*(8.0/3.0)-ccab2*t145751*t145883*t145928*t145939*t145886+ccab4*t145930*t145923*t145883* \
                   t145887*t145888*(1.6E1/3.0)+ccab4*1.0/(t145901*t145901*t145901)*t145936*t145947*t145888*t145889*2.0+ \
                   ccab2*t145942*1.0/(t145892*t145892*t145892)*t145939*t145886*t145887*2.0+ccab4*gamma_aa[index]*t145930* \
                   t145927*t145887*t145888*8.0+ccab3*gcab*t145923*t145929*t145886*t145887*4.0+ccab3*gamma_aa[index]*gcab* \
                   t145927*t145883*t145929*t145886*4.0-ccab2*gamma_aa[index]*t145923*t145942*t145883*t145928*t145886* \
                   (8.0/3.0)-ccab3*gcab*t145751*t145926*t145955*t145886*t145887*(3.0/2.0)-ccab4*t145751*t145931*t145883* \
                   t145947*t145887*t145888*2.0-ccab3*gcab*t145926*t145883*t145886*t145887*(gcab*t145923*4.0+gamma_aa[index]* \
                   t145927*t145886*4.0+t145923*t145883*t145886*8.0+gcab*t145923*t145886*t145887*4.0+gamma_aa[index]*gcab* \
                   t145927*t145883*t145886*4.0)+ccab1*gamma_aa[index]*gcab*t145927*t145883*1.0/(t145885*t145885*t145885) \
                   *t145886*(4.0/3.0)+ccab3*gcab*t145951*t145883*t145955*t145886*t145887*1.0/(t145896*t145896*t145896) \
                   *2.0-ccab3*gamma_aa[index]*gcab*t145923*t145951*t145926*t145886*t145887*4.0-ccab4*gamma_aa[index]* \
                   t145931*t145923*t145936*t145883*t145887*t145888*(1.6E1/3.0))-t146005*(t145879+t145855*t145787*(t145878- \
                   c0p*t145750*t145748*2.0))-(t145820+t145920+t145921-t145879+t145773*(t145831-t145821*t145815*t145818* \
                   t145787*(t145831-(1.0/(t145802*t145802)*t145808*(b2f*c*t145784*(1.0/3.0)+b4f*t145822*t145737*(2.0/ \
                   3.0)+b1f*c*t145823*t145784*(1.0/6.0)+b3f*c*t145784*t145776*(1.0/2.0)))/t145805+a1f*c*c0f*t145806*t145784* \
                   (2.0/3.0)-a1p*c*c0p*t145809*t145784*(2.0/3.0))-a1p*c*c0p*t145809*t145784*(2.0/3.0)-t145810*t145821* \
                   t145832*t145815*t145787*4.0+t145810*t145821*t145850*t145818*t145787+t145810*t145815*t145818*t145794* \
                   t145795*t145787*4.0-Aa*t145815*t145833*t145843*t145845*t145787*(t145821*t145832*4.0-t145818*t145794* \
                   t145795*4.0)*2.0+Aa*t145850*t145833*t145843*t145852*t145845*t145787*2.0+(t145815*t145833*t145852*t145845* \
                   1.0/(t145839*t145839)*t145787*(b2a*c*t145784*(1.0/3.0)+b4a*t145822*t145737*(2.0/3.0)+b1a*c*t145823* \
                   t145784*(1.0/6.0)+b3a*c*t145784*t145776*(1.0/2.0)))/t145842-Aa*a1a*c*t145815*t145833*t145843*t145852* \
                   t145784*t145787*(2.0/3.0))+rho_a[index]*(t146000-t145877+t145855*t145787*(t145877+t145999-t145857* \
                   t145992*t145993*t145998-a1p*c*c0p*t145748*t145866*(2.0/3.0)))-t145902*t145855*t145787)*(ccab1*gcab* \
                   t145751*t145922*(1.0/2.0)-ccab1*t145751*t145924*t145883*t145886*(1.0/2.0)+ccab2*t145751*t145925*t145883* \
                   t145886-ccab2*t145942*t145928*t145886*t145887-ccab4*t145931*t145936*t145888*t145889+ccab4*t145930* \
                   t145751*t145883*t145887*t145888*2.0+ccab3*gcab*t145751*t145929*t145886*t145887*(3.0/2.0)-ccab3*gcab* \
                   t145951*t145926*t145883*t145886*t145887)-rho_a[index]*t145957*(ccaa1*gcaa*t145923*t145958*(-8.0/3.0) \
                   -ccaa2*gamma_aa[index]*t145753*t145960*t145927*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t145753*t145962*t145927* \
                   8.0+ccaa4*t145754*t145970*t145764*t145971*t145976*(3.2E1/3.0)+ccaa2*t145752*t145753*t145927*t145965* \
                   t145979*(1.6E1/3.0)+ccaa4*t145754*t145755*t145764*t145971*(gcaa*t145923*(3.2E1/3.0)+gamma_aa[index]* \
                   t145753*t145927*6.4E1+gamma_aa[index]*t145752*t145754*t145970*(1.28E2/3.0)+gcaa*t145752*t145753*t145963* \
                   9.6E1)-ccaa1*gcaa*t145752*t145753*t145963*1.0/(t145759*t145759*t145759)*(1.6E1/3.0)+ccaa2*t145752* \
                   t145753*t145756*t145965*(gcaa*t145923*(1.6E1/3.0)+gamma_aa[index]*t145753*t145927*(3.2E1/3.0))-ccaa4* \
                   gamma_aa[index]*t145752*t145754*t145970*t145959*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t145753*t145756* \
                   t145982*t145965*2.0-ccaa3*gcaa*t145752*t145753*t145961*t145963*2.4E1+ccaa4*gamma_aa[index]*t145752* \
                   t145754*t145755*t145971*t145991*4.0+ccaa3*gcaa*t145752*t145753*t145757*t145964*t145986*3.0-ccaa2*t145752* \
                   t145753*1.0/(t145772*t145772*t145772)*t145756*t145982*t145979*2.0-ccaa4*t145754*t145755*t145764*t145991* \
                   1.0/(t145769*t145769*t145769)*t145976*2.0+ccaa3*gamma_aa[index]*gcaa*t145752*t145753*t145757*t145964* \
                   (gcaa*t145923*8.0+gamma_aa[index]*t145753*t145927*3.2E1+gcaa*t145752*t145753*t145963*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t145752*t145753*t145963*t145964*t145969*8.0-ccaa3*gamma_aa[index]*gcaa*t145752* \
                   t145753*1.0/(t145763*t145763*t145763)*t145757*t145986*t145969*2.0)-rho_a[index]*t146005*(-t146000+ \
                   t145877+t145855*t145787*(t146000-t145877-t145999+t145857*t145992*t145993*t145998))-c0*t146080*t146073* \
                   (omega*t146007*(omega*t146064*t146074*(2.778046668940015E15/1.40737488355328E14)+omega*t146007*((t146010* \
                   (1.0/3.0))/rho_a[index]+1.0/pow(t146006,5.0/3.0)*t146060*t146062*(2.778046668940015E15/1.40737488355328E14) \
                   -t146010*t146007*t146008*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t146010* \
                   t146061*t146054*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t146065*t146074*(2.778046668940015E15/ \
                   1.05553116266496E14))-c0*t146073*t146067*(cx1*gx*t145923*t146068*(-8.0/3.0)+cx1*gamma_aa[index]*t146011* \
                   t146072*t145927*8.0-cx2*gamma_aa[index]*t146011*t146070*t145927*(3.2E1/3.0)+cx2*t146011*t146035*t146029* \
                   t145752*t145927*(1.6E1/3.0)+cx4*t146012*t146053*t146028*t145970*t145764*(3.2E1/3.0)+cx4*t146012*t146028* \
                   t145755*t145764*(gx*t145923*(3.2E1/3.0)+gamma_aa[index]*t146011*t145927*6.4E1+gamma_aa[index]*t146012* \
                   t145752*t145970*(1.28E2/3.0)+gx*t146011*t145752*t145963*9.6E1)-cx1*gx*t146011*1.0/(t146014*t146014* \
                   t146014)*t145752*t145963*(1.6E1/3.0)+cx2*t146011*t146029*t145752*t145756*(gx*t145923*(1.6E1/3.0)+gamma_aa[index]* \
                   t146011*t145927*(3.2E1/3.0))+cx2*gamma_aa[index]*t146011*t146032*t146029*t145756*2.0-cx4*gamma_aa[index]* \
                   t146012*t145752*t145970*t146069*(1.28E2/3.0)-cx3*gx*t146011*t146071*t145752*t145963*2.4E1+cx4*gamma_aa[index]* \
                   t146012*t146028*t146048*t145752*t145755*4.0+cx3*gx*t146011*t146022*t146043*t145752*t145757*3.0-cx2* \
                   t146011*1.0/(t146021*t146021*t146021)*t146032*t146035*t145752*t145756*2.0-cx4*t146012*t146053*1.0/ \
                   (t146027*t146027*t146027)*t146048*t145755*t145764*2.0+cx3*gamma_aa[index]*gx*t146011*t146022*t145752* \
                   t145757*(gx*t145923*8.0+gamma_aa[index]*t146011*t145927*3.2E1+gx*t146011*t145752*t145963*2.4E1)+cx3* \
                   gamma_aa[index]*gx*t146011*t146022*t146039*t145752*t145963*8.0-cx3*gamma_aa[index]*gx*t146011*t146043* \
                   1.0/(t146018*t146018*t146018)*t146039*t145752*t145757*2.0)-c0*pow(rho_a[index],1.0/3.0)*t146080*t146067* \
                   (4.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t148570 = 1.0/pow(rho_a[index],1.0/3.0);
                double t148571 = c*t148570;
                double t148572 = sqrt(t148571);
                double t148573 = pow(t148571,3.0/2.0);
                double t148574 = c*c;
                double t148575 = 1.0/pow(rho_a[index],2.0/3.0);
                double t148576 = 1.0/c0p;
                double t148577 = b1p*t148572;
                double t148578 = b3p*t148573;
                double t148579 = b4p*t148574*t148575;
                double t148580 = b2p*c*t148570;
                double t148581 = t148580+t148577+t148578+t148579;
                double t148582 = 1.0/t148581;
                double t148583 = t148582*t148576*(1.0/2.0);
                double t148584 = t148583+1.0;
                double t148585 = log(t148584);
                double t148586 = a1p*c*t148570;
                double t148587 = t148586+1.0;
                double t148588 = 1.0/pow(rho_a[index],8.0/3.0);
                double t148589 = gamma_aa[index]*gamma_aa[index];
                double t148590 = gcaa*gcaa;
                double t148591 = t148590*t148590;
                double t148592 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t148593 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t148594 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t148595 = gamma_aa[index]*gcaa*t148588;
                double t148596 = t148595+1.0;
                double t148597 = gamma_aa[index]*gcaa*t148588*3.0;
                double t148598 = gamma_aa[index]*gcaa*t148590*t148594*t148589;
                double t148599 = t148590*t148593*t148589*3.0;
                double t148600 = t148597+t148598+t148599+1.0;
                double t148601 = t148589*t148589;
                double t148602 = gamma_aa[index]*gcaa*t148588*4.0;
                double t148603 = gamma_aa[index]*gcaa*t148590*t148594*t148589*4.0;
                double t148604 = t148590*t148593*t148589*6.0;
                double t148605 = t148601*t148591*t148592;
                double t148606 = t148602+t148603+t148604+t148605+1.0;
                double t148607 = gamma_aa[index]*gcaa*t148588*2.0;
                double t148608 = t148590*t148593*t148589;
                double t148609 = t148607+t148608+1.0;
                double t148610 = pow(2.0,1.0/3.0);
                double t148611 = t148610*2.0;
                double t148612 = t148611-2.0;
                double t148613 = two_13*2.0;
                double t148614 = t148613-2.0;
                double t148615 = 1.0/t148614;
                double t148616 = 1.0/c0f;
                double t148617 = b1f*t148572;
                double t148618 = b3f*t148573;
                double t148619 = b4f*t148574*t148575;
                double t148620 = b2f*c*t148570;
                double t148621 = t148620+t148617+t148618+t148619;
                double t148622 = 1.0/t148621;
                double t148623 = t148622*t148616*(1.0/2.0);
                double t148624 = t148623+1.0;
                double t148625 = log(t148624);
                double t148626 = a1f*c*t148570;
                double t148627 = t148626+1.0;
                double t148628 = c0f*t148625*t148627*2.0;
                double t148629 = c0p*t148585*t148587*2.0;
                double t148630 = 1.0/t148596;
                double t148631 = 1.0/t148606;
                double t148632 = 1.0/t148609;
                double t148633 = 1.0/t148600;
                double t148634 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t148635 = 1.0/(t148596*t148596);
                double t148636 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t148637 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t148638 = 1.0/(t148600*t148600);
                double t148639 = 1.0/(t148609*t148609);
                double t148640 = gcaa*t148588*3.0;
                double t148641 = gamma_aa[index]*t148590*t148593*6.0;
                double t148642 = gcaa*t148590*t148594*t148589*3.0;
                double t148643 = t148640+t148641+t148642;
                double t148644 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t148645 = 1.0/(t148606*t148606);
                double t148646 = gcaa*t148588*4.0;
                double t148647 = gamma_aa[index]*t148590*t148593*1.2E1;
                double t148648 = gcaa*t148590*t148594*t148589*1.2E1;
                double t148649 = gamma_aa[index]*t148591*t148592*t148589*4.0;
                double t148650 = t148646+t148647+t148648+t148649;
                double t148651 = gcaa*t148588*2.0;
                double t148652 = gamma_aa[index]*t148590*t148593*2.0;
                double t148653 = t148651+t148652;
                double t148654 = gamma_aa[index]*gcaa*t148637*(1.6E1/3.0);
                double t148655 = t148634*t148590*t148589*(1.6E1/3.0);
                double t148656 = t148654+t148655;
                double t148657 = gamma_aa[index]*gcaa*t148637*8.0;
                double t148658 = gamma_aa[index]*gcaa*t148590*t148636*t148589*8.0;
                double t148659 = t148634*t148590*t148589*1.6E1;
                double t148660 = t148657+t148658+t148659;
                double t148661 = gamma_aa[index]*gcaa*t148637*(3.2E1/3.0);
                double t148662 = gamma_aa[index]*gcaa*t148590*t148636*t148589*3.2E1;
                double t148663 = t148634*t148590*t148589*3.2E1;
                double t148664 = t148601*t148644*t148591*(3.2E1/3.0);
                double t148665 = t148661+t148662+t148663+t148664;
                double t148666 = 1.0/pow(rho_a[index],4.0/3.0);
                double t148667 = 1.0/pow(rho_a[index],5.0/3.0);
                double t148668 = 1.0/sqrt(t148571);
                double t148669 = 1.0/t148584;
                double t148670 = 1.0/(t148581*t148581);
                double t148671 = b4p*t148574*t148667*(2.0/3.0);
                double t148672 = b2p*c*t148666*(1.0/3.0);
                double t148673 = b1p*c*t148666*t148668*(1.0/6.0);
                double t148674 = b3p*c*t148572*t148666*(1.0/2.0);
                double t148675 = t148671+t148672+t148673+t148674;
                double t148676 = t148670*t148675*t148587*t148669;
                double t148677 = ccaa1*gcaa*t148630*t148588;
                double t148678 = ccaa4*gamma_aa[index]*t148631*t148591*t148592*t148589*4.0;
                double t148679 = ccaa2*gamma_aa[index]*t148632*t148590*t148593*2.0;
                double t148680 = ccaa3*gcaa*t148633*t148590*t148594*t148589*3.0;
                double t148681 = t148680+t148677+t148678+t148679-ccaa1*gamma_aa[index]*t148590*t148635*t148593-ccaa4* \
                   t148601*t148650*t148591*t148645*t148592-ccaa2*t148590*t148653*t148593*t148639*t148589-ccaa3*gamma_aa[index]* \
                   gcaa*t148643*t148590*t148638*t148594*t148589;
                double t148682 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t148683 = 1.0/pow(t148682,1.0/3.0);
                double t148684 = 1.0/(omega*omega);
                double t148685 = pow(t148682,2.0/3.0);
                double t148735 = t148684*t148685;
                double t148686 = exp(-t148735);
                double t148687 = gx*gx;
                double t148688 = t148687*t148687;
                double t148689 = gamma_aa[index]*gx*t148588;
                double t148690 = t148689+1.0;
                double t148691 = gamma_aa[index]*gx*t148588*3.0;
                double t148692 = gamma_aa[index]*gx*t148594*t148687*t148589;
                double t148693 = t148593*t148687*t148589*3.0;
                double t148694 = t148691+t148692+t148693+1.0;
                double t148695 = gamma_aa[index]*gx*t148588*2.0;
                double t148696 = t148593*t148687*t148589;
                double t148697 = t148695+t148696+1.0;
                double t148698 = 1.0/(t148694*t148694);
                double t148699 = gamma_aa[index]*gx*t148588*4.0;
                double t148700 = gamma_aa[index]*gx*t148594*t148687*t148589*4.0;
                double t148701 = t148593*t148687*t148589*6.0;
                double t148702 = t148601*t148592*t148688;
                double t148703 = t148700+t148701+t148702+t148699+1.0;
                double t148704 = 1.0/(t148703*t148703);
                double t148705 = 1.0/(t148697*t148697);
                double t148706 = gamma_aa[index]*gx*t148637*(1.6E1/3.0);
                double t148707 = t148634*t148687*t148589*(1.6E1/3.0);
                double t148708 = t148706+t148707;
                double t148709 = gx*t148588*2.0;
                double t148710 = gamma_aa[index]*t148593*t148687*2.0;
                double t148711 = t148710+t148709;
                double t148712 = gx*t148588*3.0;
                double t148713 = gamma_aa[index]*t148593*t148687*6.0;
                double t148714 = gx*t148594*t148687*t148589*3.0;
                double t148715 = t148712+t148713+t148714;
                double t148716 = gamma_aa[index]*gx*t148637*8.0;
                double t148717 = gamma_aa[index]*gx*t148636*t148687*t148589*8.0;
                double t148718 = t148634*t148687*t148589*1.6E1;
                double t148719 = t148716+t148717+t148718;
                double t148720 = gamma_aa[index]*gx*t148637*(3.2E1/3.0);
                double t148721 = gamma_aa[index]*gx*t148636*t148687*t148589*3.2E1;
                double t148722 = t148634*t148687*t148589*3.2E1;
                double t148723 = t148601*t148644*t148688*(3.2E1/3.0);
                double t148724 = t148720+t148721+t148722+t148723;
                double t148725 = gx*t148588*4.0;
                double t148726 = gamma_aa[index]*t148593*t148687*1.2E1;
                double t148727 = gx*t148594*t148687*t148589*1.2E1;
                double t148728 = gamma_aa[index]*t148592*t148589*t148688*4.0;
                double t148729 = t148725+t148726+t148727+t148728;
                double t148730 = 1.0/omega;
                double t148731 = pow(t148682,1.0/3.0);
                double t148732 = t148730*t148731;
                double t148733 = erf(t148732);
                double t148734 = t148733*(3.991211251234741E15/2.251799813685248E15);
                double t148736 = omega*omega;
                double t148737 = 1.0/pow(t148682,2.0/3.0);
                double t148738 = t148686-1.0;
                double t148739 = t148736*t148737*t148738*(1.0/2.0);
                double t148740 = t148739-t148686+3.0/2.0;
                double t148751 = omega*t148740*t148683;
                double t148741 = -t148751+t148734;
                double t148742 = omega*t148741*t148683*(4.0/3.0);
                double t148743 = t148742-1.0;
                double t148744 = 1.0/t148690;
                double t148745 = 1.0/t148703;
                double t148746 = 1.0/t148697;
                double t148747 = 1.0/t148694;
                double t148748 = 1.0/(t148690*t148690);
                double t148749 = pow(rho_a[index],4.0/3.0);
                double t148750 = 1.0/pow(t148682,4.0/3.0);
                double t148752 = cx1*gx*t148744*t148588;
                double t148753 = cx4*gamma_aa[index]*t148592*t148745*t148589*t148688*4.0;
                double t148754 = cx2*gamma_aa[index]*t148593*t148746*t148687*2.0;
                double t148755 = cx3*gx*t148594*t148747*t148687*t148589*3.0;
                double t148756 = t148752+t148753+t148754+t148755-cx1*gamma_aa[index]*t148593*t148748*t148687-cx2* \
                   t148711*t148705*t148593*t148687*t148589-cx4*t148601*t148704*t148592*t148729*t148688-cx3*gamma_aa[index]* \
                   gx*t148715*t148594*t148687*t148589*t148698;
                v_rho_a_gamma_aa_[index] = -t148681*(t148629+t148612*t148615*(t148628-c0p*t148585*t148587*2.0))+rho_a[index]* \
                   t148681*(-t148676+t148612*t148615*(t148676-(1.0/(t148621*t148621)*t148627*(b2f*c*t148666*(1.0/3.0) \
                   +b4f*t148574*t148667*(2.0/3.0)+b1f*c*t148666*t148668*(1.0/6.0)+b3f*c*t148572*t148666*(1.0/2.0)))/t148624+ \
                   a1f*c*c0f*t148625*t148666*(2.0/3.0)-a1p*c*c0p*t148585*t148666*(2.0/3.0))+a1p*c*c0p*t148585*t148666* \
                   (2.0/3.0))-rho_a[index]*(t148629+t148612*t148615*(t148628-t148629))*(ccaa1*gcaa*t148630*t148637*(- \
                   8.0/3.0)-ccaa2*gamma_aa[index]*t148632*t148634*t148590*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t148634*t148590* \
                   t148635*8.0+ccaa4*t148601*t148650*t148644*t148591*t148645*(3.2E1/3.0)+ccaa2*t148634*t148590*t148653* \
                   t148639*t148589*(1.6E1/3.0)+ccaa4*t148601*t148591*t148645*t148592*(gcaa*t148637*(3.2E1/3.0)+gamma_aa[index]* \
                   t148634*t148590*6.4E1+gamma_aa[index]*t148644*t148591*t148589*(1.28E2/3.0)+gcaa*t148590*t148636*t148589* \
                   9.6E1)-ccaa1*gcaa*t148590*t148636*1.0/(t148596*t148596*t148596)*t148589*(1.6E1/3.0)+ccaa2*t148590* \
                   t148593*t148639*t148589*(gcaa*t148637*(1.6E1/3.0)+gamma_aa[index]*t148634*t148590*(3.2E1/3.0))-ccaa4* \
                   gamma_aa[index]*t148631*t148644*t148591*t148589*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t148590*t148593* \
                   t148656*t148639*2.0-ccaa3*gcaa*t148633*t148590*t148636*t148589*2.4E1+ccaa4*gamma_aa[index]*t148591* \
                   t148645*t148592*t148665*t148589*4.0+ccaa3*gcaa*t148660*t148590*t148638*t148594*t148589*3.0-ccaa4*t148601* \
                   t148650*1.0/(t148606*t148606*t148606)*t148591*t148592*t148665*2.0-ccaa2*t148590*t148653*1.0/(t148609* \
                   t148609*t148609)*t148593*t148656*t148589*2.0+ccaa3*gamma_aa[index]*gcaa*t148590*t148638*t148594*t148589* \
                   (gcaa*t148637*8.0+gamma_aa[index]*t148634*t148590*3.2E1+gcaa*t148590*t148636*t148589*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t148643*t148590*t148636*t148638*t148589*8.0-ccaa3*gamma_aa[index]*gcaa*1.0/(t148600* \
                   t148600*t148600)*t148660*t148643*t148590*t148594*t148589*2.0)-c0*t148756*t148749*(omega*t148683*(omega* \
                   t148740*t148750*(2.778046668940015E15/1.40737488355328E14)+omega*t148683*((t148686*(1.0/3.0))/rho_a[index]+ \
                   1.0/pow(t148682,5.0/3.0)*t148736*t148738*(2.778046668940015E15/1.40737488355328E14)-t148683*t148684* \
                   t148686*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t148730*t148737*t148686* \
                   (1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t148741*t148750*(2.778046668940015E15/ \
                   1.05553116266496E14))-c0*t148743*t148749*(cx1*gx*t148744*t148637*(-8.0/3.0)+cx1*gamma_aa[index]*t148634* \
                   t148748*t148687*8.0-cx2*gamma_aa[index]*t148634*t148746*t148687*(3.2E1/3.0)+cx2*t148711*t148705*t148634* \
                   t148687*t148589*(1.6E1/3.0)+cx4*t148601*t148704*t148644*t148729*t148688*(3.2E1/3.0)+cx4*t148601*t148704* \
                   t148592*t148688*(gx*t148637*(3.2E1/3.0)+gamma_aa[index]*t148634*t148687*6.4E1+gamma_aa[index]*t148644* \
                   t148589*t148688*(1.28E2/3.0)+gx*t148636*t148687*t148589*9.6E1)-cx1*gx*t148636*1.0/(t148690*t148690* \
                   t148690)*t148687*t148589*(1.6E1/3.0)+cx2*t148705*t148593*t148687*t148589*(gx*t148637*(1.6E1/3.0)+gamma_aa[index]* \
                   t148634*t148687*(3.2E1/3.0))+cx2*gamma_aa[index]*t148705*t148708*t148593*t148687*2.0-cx4*gamma_aa[index]* \
                   t148644*t148745*t148589*t148688*(1.28E2/3.0)-cx3*gx*t148636*t148747*t148687*t148589*2.4E1+cx4*gamma_aa[index]* \
                   t148704*t148724*t148592*t148589*t148688*4.0+cx3*gx*t148719*t148594*t148687*t148589*t148698*3.0-cx2* \
                   t148711*t148708*t148593*t148687*t148589*1.0/(t148697*t148697*t148697)*2.0-cx4*t148601*1.0/(t148703* \
                   t148703*t148703)*t148724*t148592*t148729*t148688*2.0+cx3*gamma_aa[index]*gx*t148594*t148687*t148589* \
                   t148698*(gx*t148637*8.0+gamma_aa[index]*t148634*t148687*3.2E1+gx*t148636*t148687*t148589*2.4E1)+cx3* \
                   gamma_aa[index]*gx*t148715*t148636*t148687*t148589*t148698*8.0-cx3*gamma_aa[index]*gx*t148715*t148719* \
                   t148594*1.0/(t148694*t148694*t148694)*t148687*t148589*2.0)-c0*pow(rho_a[index],1.0/3.0)*t148743*t148756* \
                   (4.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t146083 = rho_a[index]+rho_b[index];
                double t146084 = 1.0/pow(t146083,1.0/3.0);
                double t146085 = c*t146084;
                double t146086 = sqrt(t146085);
                double t146087 = b1p*t146086;
                double t146088 = pow(t146085,3.0/2.0);
                double t146089 = b3p*t146088;
                double t146090 = c*c;
                double t146091 = 1.0/pow(t146083,2.0/3.0);
                double t146092 = b4p*t146090*t146091;
                double t146093 = b2p*c*t146084;
                double t146094 = t146092+t146093+t146087+t146089;
                double t146095 = 1.0/pow(t146083,4.0/3.0);
                double t146096 = 1.0/c0p;
                double t146097 = 1.0/t146094;
                double t146098 = t146096*t146097*(1.0/2.0);
                double t146099 = t146098+1.0;
                double t146100 = a1p*c*t146084;
                double t146101 = t146100+1.0;
                double t146102 = rho_a[index]-rho_b[index];
                double t146103 = t146102*t146102;
                double t146104 = 1.0/t146083;
                double t146105 = t146102*t146104;
                double t146106 = two_13*2.0;
                double t146107 = t146106-2.0;
                double t146108 = 1.0/t146107;
                double t146109 = 1.0/c0f;
                double t146110 = b1f*t146086;
                double t146111 = b3f*t146088;
                double t146112 = b4f*t146090*t146091;
                double t146113 = b2f*c*t146084;
                double t146114 = t146110+t146111+t146112+t146113;
                double t146115 = 1.0/t146114;
                double t146116 = t146115*t146109*(1.0/2.0);
                double t146117 = t146116+1.0;
                double t146118 = log(t146117);
                double t146119 = a1f*c*t146084;
                double t146120 = t146119+1.0;
                double t146121 = log(t146099);
                double t146131 = c0f*t146120*t146118*2.0;
                double t146132 = c0p*t146101*t146121*2.0;
                double t146122 = t146131-t146132;
                double t146123 = t146105+1.0;
                double t146124 = pow(t146123,4.0/3.0);
                double t146125 = -t146105+1.0;
                double t146126 = pow(t146125,4.0/3.0);
                double t146127 = t146124+t146126-2.0;
                double t146128 = 1.0/(t146083*t146083);
                double t146159 = t146102*t146128;
                double t146129 = t146104-t146159;
                double t146130 = 1.0/(t146083*t146083*t146083*t146083);
                double t146133 = t146103*t146103;
                double t146134 = 1.0/pow(t146083,5.0/3.0);
                double t146135 = 1.0/sqrt(t146085);
                double t146136 = 1.0/t146099;
                double t146137 = 1.0/(t146094*t146094);
                double t146138 = b4p*t146134*t146090*(2.0/3.0);
                double t146139 = b2p*c*t146095*(1.0/3.0);
                double t146140 = b1p*c*t146135*t146095*(1.0/6.0);
                double t146141 = b3p*c*t146086*t146095*(1.0/2.0);
                double t146142 = t146140+t146141+t146138+t146139;
                double t146143 = t146101*t146142*t146136*t146137;
                double t146144 = 1.0/(t146083*t146083*t146083*t146083*t146083);
                double t146145 = 1.0/d2fz0;
                double t146146 = 1.0/Aa;
                double t146147 = b1a*t146086;
                double t146148 = b3a*t146088;
                double t146149 = b4a*t146090*t146091;
                double t146150 = b2a*c*t146084;
                double t146151 = t146150+t146147+t146148+t146149;
                double t146152 = 1.0/t146151;
                double t146153 = t146152*t146146*(1.0/2.0);
                double t146154 = t146153+1.0;
                double t146155 = log(t146154);
                double t146156 = a1a*c*t146084;
                double t146157 = t146156+1.0;
                double t146158 = pow(t146123,1.0/3.0);
                double t146160 = t146129*t146158*(4.0/3.0);
                double t146161 = pow(t146125,1.0/3.0);
                double t146162 = t146160-t146161*t146129*(4.0/3.0);
                double t146163 = t146130*t146133;
                double t146164 = t146163-1.0;
                double t146165 = 1.0/pow(rho_a[index],1.0/3.0);
                double t146166 = c*t146165;
                double t146167 = sqrt(t146166);
                double t146168 = b1f*t146167;
                double t146169 = pow(t146166,3.0/2.0);
                double t146170 = b3f*t146169;
                double t146171 = 1.0/pow(rho_a[index],2.0/3.0);
                double t146172 = b4f*t146090*t146171;
                double t146173 = b2f*c*t146165;
                double t146174 = t146170+t146172+t146173+t146168;
                double t146175 = 1.0/pow(rho_a[index],4.0/3.0);
                double t146176 = b1p*t146167;
                double t146177 = b3p*t146169;
                double t146178 = b4p*t146090*t146171;
                double t146179 = b2p*c*t146165;
                double t146180 = t146176+t146177+t146178+t146179;
                double t146181 = 1.0/pow(rho_a[index],5.0/3.0);
                double t146182 = 1.0/sqrt(t146166);
                double t146183 = 1.0/t146174;
                double t146184 = t146109*t146183*(1.0/2.0);
                double t146185 = t146184+1.0;
                double t146186 = 1.0/t146180;
                double t146187 = t146096*t146186*(1.0/2.0);
                double t146188 = t146187+1.0;
                double t146189 = a1p*c*t146165;
                double t146190 = t146189+1.0;
                double t146191 = 1.0/t146188;
                double t146192 = 1.0/(t146180*t146180);
                double t146193 = b4p*t146090*t146181*(2.0/3.0);
                double t146194 = b2p*c*t146175*(1.0/3.0);
                double t146195 = b1p*c*t146182*t146175*(1.0/6.0);
                double t146196 = b3p*c*t146175*t146167*(1.0/2.0);
                double t146197 = t146193+t146194+t146195+t146196;
                double t146198 = t146190*t146191*t146192*t146197;
                double t146199 = log(t146188);
                double t146200 = pow(2.0,1.0/3.0);
                double t146201 = t146200*2.0;
                double t146202 = t146201-2.0;
                double t146203 = log(t146185);
                double t146204 = a1f*c*t146165;
                double t146205 = t146204+1.0;
                double t146206 = 1.0/pow(rho_b[index],8.0/3.0);
                double t146207 = 1.0/pow(rho_a[index],8.0/3.0);
                double t146208 = gamma_aa[index]*t146207*(1.0/2.0);
                double t146209 = gamma_bb[index]*t146206*(1.0/2.0);
                double t146210 = t146208+t146209;
                double t146211 = gcab*t146210;
                double t146212 = t146211+1.0;
                double t146213 = gcab*gcab;
                double t146214 = t146210*t146210;
                double t146215 = t146213*t146213;
                double t146216 = t146214*t146214;
                double t146217 = t146213*t146214;
                double t146218 = gcab*t146210*2.0;
                double t146219 = t146217+t146218+1.0;
                double t146220 = t146213*t146214*3.0;
                double t146221 = gcab*t146210*t146213*t146214;
                double t146222 = gcab*t146210*3.0;
                double t146223 = t146220+t146221+t146222+1.0;
                double t146224 = t146213*t146214*6.0;
                double t146225 = gcab*t146210*t146213*t146214*4.0;
                double t146226 = t146215*t146216;
                double t146227 = gcab*t146210*4.0;
                double t146228 = t146224+t146225+t146226+t146227+1.0;
                double t146229 = c0f*t146203*t146205*2.0;
                double t146231 = c0p*t146190*t146199*2.0;
                double t146230 = -t146231+t146229;
                double t146232 = 1.0/pow(rho_b[index],1.0/3.0);
                double t146233 = c*t146232;
                double t146234 = sqrt(t146233);
                double t146235 = pow(t146233,3.0/2.0);
                double t146236 = 1.0/pow(rho_b[index],2.0/3.0);
                double t146237 = b1p*t146234;
                double t146238 = b3p*t146235;
                double t146239 = b4p*t146090*t146236;
                double t146240 = b2p*c*t146232;
                double t146241 = t146240+t146237+t146238+t146239;
                double t146242 = 1.0/t146241;
                double t146243 = t146242*t146096*(1.0/2.0);
                double t146244 = t146243+1.0;
                double t146245 = log(t146244);
                double t146246 = a1p*c*t146232;
                double t146247 = t146246+1.0;
                double t146248 = c0p*t146245*t146247*2.0;
                double t146249 = t146130*t146122*t146133*t146108*t146127;
                double t146250 = Aa*t146108*t146127*t146145*t146155*t146164*t146157*2.0;
                double t146251 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t146252 = 1.0/(t146223*t146223);
                double t146253 = 1.0/(t146228*t146228);
                double t146254 = gcab*t146206*2.0;
                double t146255 = t146210*t146213*t146206*6.0;
                double t146256 = gcab*t146213*t146214*t146206*6.0;
                double t146257 = t146210*t146214*t146206*t146215*2.0;
                double t146258 = t146254+t146255+t146256+t146257;
                double t146259 = 1.0/(t146219*t146219);
                double t146260 = gamma_aa[index]*gcab*t146251*(8.0/3.0);
                double t146261 = gamma_aa[index]*t146210*t146213*t146251*(8.0/3.0);
                double t146262 = t146260+t146261;
                double t146263 = gcab*t146206;
                double t146264 = t146210*t146213*t146206;
                double t146265 = t146263+t146264;
                double t146266 = gamma_aa[index]*gcab*t146251*(1.6E1/3.0);
                double t146267 = gamma_aa[index]*gcab*t146213*t146214*t146251*1.6E1;
                double t146268 = gamma_aa[index]*t146210*t146214*t146215*t146251*(1.6E1/3.0);
                double t146269 = gamma_aa[index]*t146210*t146213*t146251*1.6E1;
                double t146270 = t146266+t146267+t146268+t146269;
                double t146271 = 1.0/(t146212*t146212);
                double t146272 = 1.0/t146219;
                double t146273 = gcab*t146206*(3.0/2.0);
                double t146274 = t146210*t146213*t146206*3.0;
                double t146275 = gcab*t146213*t146214*t146206*(3.0/2.0);
                double t146276 = t146273+t146274+t146275;
                double t146277 = gamma_aa[index]*gcab*t146251*4.0;
                double t146278 = gamma_aa[index]*gcab*t146213*t146214*t146251*4.0;
                double t146279 = gamma_aa[index]*t146210*t146213*t146251*8.0;
                double t146280 = t146277+t146278+t146279;
                double t146281 = 1.0/t146223;
                double t146282 = 1.0/t146228;
                v_rho_a_gamma_bb_[index] = -(t146132+t146250+t146249+t146083*(t146143-t146130*t146133*t146108*t146127* \
                   (t146143-(t146120*1.0/(t146114*t146114)*(b2f*c*t146095*(1.0/3.0)+b4f*t146134*t146090*(2.0/3.0)+b1f* \
                   c*t146135*t146095*(1.0/6.0)+b3f*c*t146086*t146095*(1.0/2.0)))/t146117+a1f*c*c0f*t146118*t146095*(2.0/ \
                   3.0)-a1p*c*c0p*t146121*t146095*(2.0/3.0))-a1p*c*c0p*t146121*t146095*(2.0/3.0)+t146130*t146122*t146133* \
                   t146108*t146162-t146122*t146133*t146108*t146144*t146127*4.0+t146102*t146103*t146130*t146122*t146108* \
                   t146127*4.0-Aa*t146108*t146127*t146145*t146155*t146157*(t146133*t146144*4.0-t146102*t146103*t146130* \
                   4.0)*2.0+Aa*t146108*t146162*t146145*t146155*t146164*t146157*2.0+(1.0/(t146151*t146151)*t146108*t146127* \
                   t146145*t146164*t146157*(b2a*c*t146095*(1.0/3.0)+b4a*t146134*t146090*(2.0/3.0)+b1a*c*t146135*t146095* \
                   (1.0/6.0)+b3a*c*t146086*t146095*(1.0/2.0)))/t146154-Aa*a1a*c*t146108*t146127*t146145*t146155*t146164* \
                   t146095*(2.0/3.0))+rho_a[index]*(-t146198+t146202*t146108*(t146198-(t146205*1.0/(t146174*t146174)* \
                   (b2f*c*t146175*(1.0/3.0)+b4f*t146090*t146181*(2.0/3.0)+b1f*c*t146182*t146175*(1.0/6.0)+b3f*c*t146175* \
                   t146167*(1.0/2.0)))/t146185+a1f*c*c0f*t146203*t146175*(2.0/3.0)-a1p*c*c0p*t146175*t146199*(2.0/3.0) \
                   )+a1p*c*c0p*t146175*t146199*(2.0/3.0))-c0p*t146190*t146199*2.0-t146202*t146230*t146108)*((ccab1*gcab* \
                   t146206*(1.0/2.0))/t146212-ccab1*t146210*t146213*t146206*t146271*(1.0/2.0)+ccab2*t146210*t146213*t146206* \
                   t146272-ccab2*t146213*t146214*t146265*t146259-ccab4*t146215*t146216*t146253*t146258+ccab4*t146210* \
                   t146214*t146206*t146215*t146282*2.0+ccab3*gcab*t146213*t146214*t146206*t146281*(3.0/2.0)-ccab3*gcab* \
                   t146210*t146213*t146214*t146252*t146276)+(rho_a[index]*(t146231+t146202*t146230*t146108)+rho_b[index]* \
                   (t146248-t146202*t146108*(t146248-c0f*log((t146109*(1.0/2.0))/(b1f*t146234+b3f*t146235+b2f*c*t146232+ \
                   b4f*t146090*t146236)+1.0)*(a1f*c*t146232+1.0)*2.0))-t146083*(t146132+t146250+t146249))*(ccab4*t146215* \
                   t146216*t146253*(gamma_aa[index]*t146213*t146206*t146251*8.0+gamma_aa[index]*t146214*t146206*t146215* \
                   t146251*8.0+gamma_aa[index]*gcab*t146210*t146213*t146206*t146251*1.6E1)+ccab2*t146210*t146213*t146206* \
                   t146262*t146259-ccab2*t146213*t146214*t146262*1.0/(t146219*t146219*t146219)*t146265*2.0-ccab4*t146215* \
                   t146216*t146270*1.0/(t146228*t146228*t146228)*t146258*2.0+ccab1*gamma_aa[index]*t146213*t146206*t146251* \
                   t146271*(4.0/3.0)-ccab2*gamma_aa[index]*t146213*t146206*t146251*t146272*(4.0/3.0)-ccab4*gamma_aa[index]* \
                   t146214*t146206*t146215*t146251*t146282*8.0+ccab2*gamma_aa[index]*t146210*t146213*t146251*t146265* \
                   t146259*(8.0/3.0)+ccab2*gamma_aa[index]*t146214*t146206*t146215*t146251*t146259*(4.0/3.0)+ccab3*gcab* \
                   t146213*t146214*t146206*t146252*t146280*(3.0/2.0)+ccab4*t146210*t146214*t146206*t146215*t146270*t146253* \
                   2.0+ccab3*gcab*t146210*t146213*t146214*t146252*(gamma_aa[index]*t146213*t146206*t146251*4.0+gamma_aa[index]* \
                   gcab*t146210*t146213*t146206*t146251*4.0)-ccab1*gamma_aa[index]*gcab*t146210*1.0/(t146212*t146212* \
                   t146212)*t146213*t146206*t146251*(4.0/3.0)-ccab3*gcab*t146210*t146213*t146214*1.0/(t146223*t146223* \
                   t146223)*t146280*t146276*2.0-ccab3*gamma_aa[index]*gcab*t146210*t146213*t146206*t146251*t146281*4.0+ \
                   ccab3*gamma_aa[index]*gcab*t146213*t146214*t146251*t146252*t146276*4.0+ccab4*gamma_aa[index]*t146210* \
                   t146214*t146215*t146251*t146253*t146258*(1.6E1/3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t146284 = rho_a[index]+rho_b[index];
                double t146285 = 1.0/pow(t146284,1.0/3.0);
                double t146286 = c*t146285;
                double t146287 = sqrt(t146286);
                double t146288 = b1p*t146287;
                double t146289 = pow(t146286,3.0/2.0);
                double t146290 = b3p*t146289;
                double t146291 = c*c;
                double t146292 = 1.0/pow(t146284,2.0/3.0);
                double t146293 = b4p*t146291*t146292;
                double t146294 = b2p*c*t146285;
                double t146295 = t146290+t146293+t146294+t146288;
                double t146296 = 1.0/pow(t146284,4.0/3.0);
                double t146297 = 1.0/c0p;
                double t146298 = 1.0/t146295;
                double t146299 = t146297*t146298*(1.0/2.0);
                double t146300 = t146299+1.0;
                double t146301 = a1p*c*t146285;
                double t146302 = t146301+1.0;
                double t146303 = rho_a[index]-rho_b[index];
                double t146304 = t146303*t146303;
                double t146305 = 1.0/t146284;
                double t146306 = t146303*t146305;
                double t146307 = two_13*2.0;
                double t146308 = t146307-2.0;
                double t146309 = 1.0/t146308;
                double t146310 = 1.0/c0f;
                double t146311 = b1f*t146287;
                double t146312 = b3f*t146289;
                double t146313 = b4f*t146291*t146292;
                double t146314 = b2f*c*t146285;
                double t146315 = t146311+t146312+t146313+t146314;
                double t146316 = 1.0/t146315;
                double t146317 = t146310*t146316*(1.0/2.0);
                double t146318 = t146317+1.0;
                double t146319 = log(t146318);
                double t146320 = a1f*c*t146285;
                double t146321 = t146320+1.0;
                double t146322 = log(t146300);
                double t146333 = c0f*t146321*t146319*2.0;
                double t146334 = c0p*t146302*t146322*2.0;
                double t146323 = t146333-t146334;
                double t146324 = t146306+1.0;
                double t146325 = pow(t146324,4.0/3.0);
                double t146326 = -t146306+1.0;
                double t146327 = pow(t146326,4.0/3.0);
                double t146328 = t146325+t146327-2.0;
                double t146329 = 1.0/(t146284*t146284);
                double t146330 = t146303*t146329;
                double t146331 = t146330+t146305;
                double t146332 = 1.0/(t146284*t146284*t146284*t146284);
                double t146335 = t146304*t146304;
                double t146336 = 1.0/pow(t146284,5.0/3.0);
                double t146337 = 1.0/sqrt(t146286);
                double t146338 = 1.0/t146300;
                double t146339 = 1.0/(t146295*t146295);
                double t146340 = b4p*t146291*t146336*(2.0/3.0);
                double t146341 = b2p*c*t146296*(1.0/3.0);
                double t146342 = b1p*c*t146337*t146296*(1.0/6.0);
                double t146343 = b3p*c*t146287*t146296*(1.0/2.0);
                double t146344 = t146340+t146341+t146342+t146343;
                double t146345 = 1.0/(t146284*t146284*t146284*t146284*t146284);
                double t146346 = 1.0/d2fz0;
                double t146347 = 1.0/Aa;
                double t146348 = b1a*t146287;
                double t146349 = b3a*t146289;
                double t146350 = b4a*t146291*t146292;
                double t146351 = b2a*c*t146285;
                double t146352 = t146350+t146351+t146348+t146349;
                double t146353 = 1.0/t146352;
                double t146354 = t146353*t146347*(1.0/2.0);
                double t146355 = t146354+1.0;
                double t146356 = log(t146355);
                double t146357 = a1a*c*t146285;
                double t146358 = t146357+1.0;
                double t146359 = pow(t146324,1.0/3.0);
                double t146360 = t146331*t146359*(4.0/3.0);
                double t146361 = pow(t146326,1.0/3.0);
                double t146362 = t146360-t146331*t146361*(4.0/3.0);
                double t146363 = t146332*t146335;
                double t146364 = t146363-1.0;
                double t146365 = 1.0/pow(rho_b[index],1.0/3.0);
                double t146366 = c*t146365;
                double t146367 = sqrt(t146366);
                double t146368 = b1f*t146367;
                double t146369 = pow(t146366,3.0/2.0);
                double t146370 = b3f*t146369;
                double t146371 = 1.0/pow(rho_b[index],2.0/3.0);
                double t146372 = b4f*t146371*t146291;
                double t146373 = b2f*c*t146365;
                double t146374 = t146370+t146372+t146373+t146368;
                double t146375 = 1.0/pow(rho_b[index],4.0/3.0);
                double t146376 = b1p*t146367;
                double t146377 = b3p*t146369;
                double t146378 = b4p*t146371*t146291;
                double t146379 = b2p*c*t146365;
                double t146380 = t146376+t146377+t146378+t146379;
                double t146381 = 1.0/pow(rho_b[index],5.0/3.0);
                double t146382 = 1.0/sqrt(t146366);
                double t146383 = 1.0/t146374;
                double t146384 = t146310*t146383*(1.0/2.0);
                double t146385 = t146384+1.0;
                double t146386 = 1.0/t146380;
                double t146387 = t146386*t146297*(1.0/2.0);
                double t146388 = t146387+1.0;
                double t146389 = a1p*c*t146365;
                double t146390 = t146389+1.0;
                double t146391 = 1.0/t146388;
                double t146392 = 1.0/(t146380*t146380);
                double t146393 = b4p*t146291*t146381*(2.0/3.0);
                double t146394 = b2p*c*t146375*(1.0/3.0);
                double t146395 = b1p*c*t146382*t146375*(1.0/6.0);
                double t146396 = b3p*c*t146375*t146367*(1.0/2.0);
                double t146397 = t146393+t146394+t146395+t146396;
                double t146398 = t146390*t146391*t146392*t146397;
                double t146399 = log(t146388);
                double t146400 = pow(2.0,1.0/3.0);
                double t146401 = t146400*2.0;
                double t146402 = t146401-2.0;
                double t146403 = log(t146385);
                double t146404 = a1f*c*t146365;
                double t146405 = t146404+1.0;
                double t146406 = 1.0/pow(rho_a[index],8.0/3.0);
                double t146407 = gamma_aa[index]*t146406*(1.0/2.0);
                double t146408 = 1.0/pow(rho_b[index],8.0/3.0);
                double t146409 = gamma_bb[index]*t146408*(1.0/2.0);
                double t146410 = t146407+t146409;
                double t146411 = gcab*t146410;
                double t146412 = t146411+1.0;
                double t146413 = gcab*gcab;
                double t146414 = t146410*t146410;
                double t146415 = t146413*t146413;
                double t146416 = t146414*t146414;
                double t146417 = t146413*t146414;
                double t146418 = gcab*t146410*2.0;
                double t146419 = t146417+t146418+1.0;
                double t146420 = t146413*t146414*3.0;
                double t146421 = gcab*t146410*t146413*t146414;
                double t146422 = gcab*t146410*3.0;
                double t146423 = t146420+t146421+t146422+1.0;
                double t146424 = t146413*t146414*6.0;
                double t146425 = gcab*t146410*t146413*t146414*4.0;
                double t146426 = t146415*t146416;
                double t146427 = gcab*t146410*4.0;
                double t146428 = t146424+t146425+t146426+t146427+1.0;
                double t146429 = a1p*c*c0p*t146322*t146296*(2.0/3.0);
                double t146430 = 1.0/pow(rho_a[index],1.0/3.0);
                double t146431 = c*t146430;
                double t146432 = sqrt(t146431);
                double t146433 = pow(t146431,3.0/2.0);
                double t146434 = 1.0/pow(rho_a[index],2.0/3.0);
                double t146435 = b1p*t146432;
                double t146436 = b3p*t146433;
                double t146437 = b4p*t146434*t146291;
                double t146438 = b2p*c*t146430;
                double t146439 = t146435+t146436+t146437+t146438;
                double t146440 = 1.0/t146439;
                double t146441 = t146440*t146297*(1.0/2.0);
                double t146442 = t146441+1.0;
                double t146443 = log(t146442);
                double t146444 = a1p*c*t146430;
                double t146445 = t146444+1.0;
                double t146446 = c0p*t146443*t146445*2.0;
                double t146447 = c0f*t146403*t146405*2.0;
                double t146449 = c0p*t146390*t146399*2.0;
                double t146448 = t146447-t146449;
                double t146450 = t146323*t146332*t146335*t146309*t146328;
                double t146451 = Aa*t146309*t146328*t146346*t146364*t146356*t146358*2.0;
                double t146452 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t146453 = 1.0/(t146423*t146423);
                double t146454 = 1.0/(t146428*t146428);
                double t146455 = gcab*t146406*2.0;
                double t146456 = t146410*t146413*t146406*6.0;
                double t146457 = gcab*t146413*t146414*t146406*6.0;
                double t146458 = t146410*t146414*t146406*t146415*2.0;
                double t146459 = t146455+t146456+t146457+t146458;
                double t146460 = 1.0/(t146419*t146419);
                double t146461 = gamma_bb[index]*gcab*t146452*(8.0/3.0);
                double t146462 = gamma_bb[index]*t146410*t146413*t146452*(8.0/3.0);
                double t146463 = t146461+t146462;
                double t146464 = gcab*t146406;
                double t146465 = t146410*t146413*t146406;
                double t146466 = t146464+t146465;
                double t146467 = gamma_bb[index]*gcab*t146452*(1.6E1/3.0);
                double t146468 = gamma_bb[index]*gcab*t146413*t146414*t146452*1.6E1;
                double t146469 = gamma_bb[index]*t146410*t146414*t146415*t146452*(1.6E1/3.0);
                double t146470 = gamma_bb[index]*t146410*t146413*t146452*1.6E1;
                double t146471 = t146470+t146467+t146468+t146469;
                double t146472 = 1.0/(t146412*t146412);
                double t146473 = 1.0/t146419;
                double t146474 = gcab*t146406*(3.0/2.0);
                double t146475 = t146410*t146413*t146406*3.0;
                double t146476 = gcab*t146413*t146414*t146406*(3.0/2.0);
                double t146477 = t146474+t146475+t146476;
                double t146478 = gamma_bb[index]*gcab*t146452*4.0;
                double t146479 = gamma_bb[index]*gcab*t146413*t146414*t146452*4.0;
                double t146480 = gamma_bb[index]*t146410*t146413*t146452*8.0;
                double t146481 = t146480+t146478+t146479;
                double t146482 = 1.0/t146423;
                double t146483 = 1.0/t146428;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t146449+t146402*t146309*t146448)+rho_a[index]*(t146446- \
                   t146402*t146309*(t146446-c0f*log((t146310*(1.0/2.0))/(b1f*t146432+b3f*t146433+b2f*c*t146430+b4f*t146434* \
                   t146291)+1.0)*(a1f*c*t146430+1.0)*2.0))-t146284*(t146450+t146334+t146451))*(ccab4*t146415*t146416* \
                   t146454*(gamma_bb[index]*t146413*t146406*t146452*8.0+gamma_bb[index]*t146414*t146406*t146415*t146452* \
                   8.0+gamma_bb[index]*gcab*t146410*t146413*t146406*t146452*1.6E1)+ccab2*t146410*t146413*t146406*t146460* \
                   t146463-ccab2*t146413*t146414*t146463*1.0/(t146419*t146419*t146419)*t146466*2.0-ccab4*t146415*t146416* \
                   t146471*1.0/(t146428*t146428*t146428)*t146459*2.0+ccab1*gamma_bb[index]*t146413*t146406*t146452*t146472* \
                   (4.0/3.0)-ccab2*gamma_bb[index]*t146413*t146406*t146452*t146473*(4.0/3.0)+ccab2*gamma_bb[index]*t146410* \
                   t146413*t146460*t146452*t146466*(8.0/3.0)+ccab2*gamma_bb[index]*t146414*t146406*t146415*t146460*t146452* \
                   (4.0/3.0)-ccab4*gamma_bb[index]*t146414*t146406*t146415*t146452*t146483*8.0+ccab3*gcab*t146413*t146414* \
                   t146406*t146453*t146481*(3.0/2.0)+ccab4*t146410*t146414*t146406*t146415*t146471*t146454*2.0+ccab3* \
                   gcab*t146410*t146413*t146414*t146453*(gamma_bb[index]*t146413*t146406*t146452*4.0+gamma_bb[index]* \
                   gcab*t146410*t146413*t146406*t146452*4.0)-ccab1*gamma_bb[index]*gcab*t146410*1.0/(t146412*t146412* \
                   t146412)*t146413*t146406*t146452*(4.0/3.0)-ccab3*gcab*t146410*t146413*t146414*1.0/(t146423*t146423* \
                   t146423)*t146481*t146477*2.0-ccab3*gamma_bb[index]*gcab*t146410*t146413*t146406*t146452*t146482*4.0+ \
                   ccab3*gamma_bb[index]*gcab*t146413*t146414*t146452*t146453*t146477*4.0+ccab4*gamma_bb[index]*t146410* \
                   t146414*t146415*t146452*t146454*t146459*(1.6E1/3.0))-(t146450+t146334+t146451+rho_b[index]*(-t146398+ \
                   t146402*t146309*(t146398-(t146405*1.0/(t146374*t146374)*(b2f*c*t146375*(1.0/3.0)+b4f*t146291*t146381* \
                   (2.0/3.0)+b1f*c*t146382*t146375*(1.0/6.0)+b3f*c*t146375*t146367*(1.0/2.0)))/t146385+a1f*c*c0f*t146403* \
                   t146375*(2.0/3.0)-a1p*c*c0p*t146375*t146399*(2.0/3.0))+a1p*c*c0p*t146375*t146399*(2.0/3.0))-t146284* \
                   (t146429-t146302*t146344*t146338*t146339+t146323*t146332*t146335*t146362*t146309+t146323*t146335*t146309* \
                   t146345*t146328*4.0-t146332*t146335*t146309*t146328*(t146429-t146302*t146344*t146338*t146339+(t146321* \
                   1.0/(t146315*t146315)*(b2f*c*t146296*(1.0/3.0)+b4f*t146291*t146336*(2.0/3.0)+b1f*c*t146337*t146296* \
                   (1.0/6.0)+b3f*c*t146287*t146296*(1.0/2.0)))/t146318-a1f*c*c0f*t146319*t146296*(2.0/3.0))+t146303*t146304* \
                   t146323*t146332*t146309*t146328*4.0+Aa*t146309*t146328*t146346*t146356*t146358*(t146335*t146345*4.0+ \
                   t146303*t146304*t146332*4.0)*2.0+Aa*t146362*t146309*t146346*t146364*t146356*t146358*2.0-(1.0/(t146352* \
                   t146352)*t146309*t146328*t146346*t146364*t146358*(b2a*c*t146296*(1.0/3.0)+b4a*t146291*t146336*(2.0/ \
                   3.0)+b1a*c*t146337*t146296*(1.0/6.0)+b3a*c*t146287*t146296*(1.0/2.0)))/t146355+Aa*a1a*c*t146309*t146328* \
                   t146346*t146364*t146356*t146296*(2.0/3.0))-c0p*t146390*t146399*2.0-t146402*t146309*t146448)*((ccab1* \
                   gcab*t146406*(1.0/2.0))/t146412-ccab1*t146410*t146413*t146406*t146472*(1.0/2.0)+ccab2*t146410*t146413* \
                   t146406*t146473-ccab2*t146413*t146414*t146460*t146466-ccab4*t146415*t146416*t146454*t146459+ccab4* \
                   t146410*t146414*t146406*t146415*t146483*2.0+ccab3*gcab*t146413*t146414*t146406*t146482*(3.0/2.0)-ccab3* \
                   gcab*t146410*t146413*t146414*t146453*t146477);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t146486 = 1.0/pow(rho_b[index],1.0/3.0);
                double t146487 = c*t146486;
                double t146488 = sqrt(t146487);
                double t146489 = pow(t146487,3.0/2.0);
                double t146490 = c*c;
                double t146491 = 1.0/pow(rho_b[index],2.0/3.0);
                double t146492 = 1.0/c0p;
                double t146493 = b1p*t146488;
                double t146494 = b3p*t146489;
                double t146495 = b4p*t146490*t146491;
                double t146496 = b2p*c*t146486;
                double t146497 = t146493+t146494+t146495+t146496;
                double t146498 = 1.0/t146497;
                double t146499 = t146492*t146498*(1.0/2.0);
                double t146500 = t146499+1.0;
                double t146501 = log(t146500);
                double t146502 = a1p*c*t146486;
                double t146503 = t146502+1.0;
                double t146504 = 1.0/pow(rho_b[index],8.0/3.0);
                double t146505 = gamma_bb[index]*gamma_bb[index];
                double t146506 = gcaa*gcaa;
                double t146507 = t146506*t146506;
                double t146508 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t146509 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t146510 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t146511 = gamma_bb[index]*gcaa*t146504;
                double t146512 = t146511+1.0;
                double t146513 = gamma_bb[index]*gcaa*t146504*3.0;
                double t146514 = gamma_bb[index]*gcaa*t146510*t146505*t146506;
                double t146515 = t146505*t146506*t146509*3.0;
                double t146516 = t146513+t146514+t146515+1.0;
                double t146517 = t146505*t146505;
                double t146518 = gamma_bb[index]*gcaa*t146504*4.0;
                double t146519 = gamma_bb[index]*gcaa*t146510*t146505*t146506*4.0;
                double t146520 = t146505*t146506*t146509*6.0;
                double t146521 = t146507*t146508*t146517;
                double t146522 = t146520+t146521+t146518+t146519+1.0;
                double t146523 = gamma_bb[index]*gcaa*t146504*2.0;
                double t146524 = t146505*t146506*t146509;
                double t146525 = t146523+t146524+1.0;
                double t146526 = rho_a[index]+rho_b[index];
                double t146527 = 1.0/pow(t146526,1.0/3.0);
                double t146528 = c*t146527;
                double t146529 = sqrt(t146528);
                double t146530 = b1p*t146529;
                double t146531 = pow(t146528,3.0/2.0);
                double t146532 = b3p*t146531;
                double t146533 = 1.0/pow(t146526,2.0/3.0);
                double t146534 = b4p*t146533*t146490;
                double t146535 = b2p*c*t146527;
                double t146536 = t146530+t146532+t146534+t146535;
                double t146537 = 1.0/pow(t146526,4.0/3.0);
                double t146538 = two_13*2.0;
                double t146539 = t146538-2.0;
                double t146540 = 1.0/t146539;
                double t146541 = 1.0/c0f;
                double t146542 = 1.0/t146536;
                double t146543 = t146542*t146492*(1.0/2.0);
                double t146544 = t146543+1.0;
                double t146545 = a1p*c*t146527;
                double t146546 = t146545+1.0;
                double t146547 = rho_a[index]-rho_b[index];
                double t146548 = t146547*t146547;
                double t146549 = 1.0/t146526;
                double t146550 = t146547*t146549;
                double t146551 = b1f*t146529;
                double t146552 = b3f*t146531;
                double t146553 = b4f*t146533*t146490;
                double t146554 = b2f*c*t146527;
                double t146555 = t146551+t146552+t146553+t146554;
                double t146556 = 1.0/t146555;
                double t146557 = t146541*t146556*(1.0/2.0);
                double t146558 = t146557+1.0;
                double t146559 = log(t146558);
                double t146560 = a1f*c*t146527;
                double t146561 = t146560+1.0;
                double t146562 = log(t146544);
                double t146573 = c0f*t146561*t146559*2.0;
                double t146574 = c0p*t146562*t146546*2.0;
                double t146563 = t146573-t146574;
                double t146564 = t146550+1.0;
                double t146565 = pow(t146564,4.0/3.0);
                double t146566 = -t146550+1.0;
                double t146567 = pow(t146566,4.0/3.0);
                double t146568 = t146565+t146567-2.0;
                double t146569 = 1.0/(t146526*t146526);
                double t146570 = t146547*t146569;
                double t146571 = t146570+t146549;
                double t146572 = 1.0/(t146526*t146526*t146526*t146526);
                double t146575 = t146548*t146548;
                double t146576 = 1.0/pow(t146526,5.0/3.0);
                double t146577 = 1.0/sqrt(t146528);
                double t146578 = 1.0/t146544;
                double t146579 = 1.0/(t146536*t146536);
                double t146580 = b4p*t146490*t146576*(2.0/3.0);
                double t146581 = b2p*c*t146537*(1.0/3.0);
                double t146582 = b1p*c*t146537*t146577*(1.0/6.0);
                double t146583 = b3p*c*t146537*t146529*(1.0/2.0);
                double t146584 = t146580+t146581+t146582+t146583;
                double t146585 = 1.0/(t146526*t146526*t146526*t146526*t146526);
                double t146586 = 1.0/d2fz0;
                double t146587 = 1.0/Aa;
                double t146588 = b1a*t146529;
                double t146589 = b3a*t146531;
                double t146590 = b4a*t146533*t146490;
                double t146591 = b2a*c*t146527;
                double t146592 = t146590+t146591+t146588+t146589;
                double t146593 = 1.0/t146592;
                double t146594 = t146593*t146587*(1.0/2.0);
                double t146595 = t146594+1.0;
                double t146596 = log(t146595);
                double t146597 = a1a*c*t146527;
                double t146598 = t146597+1.0;
                double t146599 = pow(t146564,1.0/3.0);
                double t146600 = t146571*t146599*(4.0/3.0);
                double t146601 = pow(t146566,1.0/3.0);
                double t146602 = t146600-t146601*t146571*(4.0/3.0);
                double t146603 = t146572*t146575;
                double t146604 = t146603-1.0;
                double t146605 = pow(2.0,1.0/3.0);
                double t146606 = t146605*2.0;
                double t146607 = t146606-2.0;
                double t146608 = a1f*c*t146486;
                double t146609 = t146608+1.0;
                double t146610 = b1f*t146488;
                double t146611 = b3f*t146489;
                double t146612 = b4f*t146490*t146491;
                double t146613 = b2f*c*t146486;
                double t146614 = t146610+t146611+t146612+t146613;
                double t146615 = 1.0/t146614;
                double t146616 = t146541*t146615*(1.0/2.0);
                double t146617 = t146616+1.0;
                double t146618 = 1.0/pow(rho_b[index],4.0/3.0);
                double t146619 = 1.0/pow(rho_b[index],5.0/3.0);
                double t146620 = 1.0/sqrt(t146487);
                double t146621 = log(t146617);
                double t146622 = 1.0/t146500;
                double t146623 = 1.0/(t146497*t146497);
                double t146624 = b4p*t146490*t146619*(2.0/3.0);
                double t146625 = b2p*c*t146618*(1.0/3.0);
                double t146626 = b1p*c*t146620*t146618*(1.0/6.0);
                double t146627 = b3p*c*t146618*t146488*(1.0/2.0);
                double t146628 = t146624+t146625+t146626+t146627;
                double t146629 = t146503*t146622*t146623*t146628;
                double t146630 = c0f*t146621*t146609*2.0;
                double t146631 = c0p*t146501*t146503*2.0;
                double t146632 = 1.0/pow(rho_a[index],8.0/3.0);
                double t146633 = gamma_aa[index]*t146632*(1.0/2.0);
                double t146634 = gamma_bb[index]*t146504*(1.0/2.0);
                double t146635 = t146633+t146634;
                double t146636 = gcab*t146635;
                double t146637 = t146636+1.0;
                double t146638 = gcab*gcab;
                double t146639 = t146635*t146635;
                double t146640 = t146638*t146638;
                double t146641 = t146639*t146639;
                double t146642 = t146638*t146639;
                double t146643 = gcab*t146635*2.0;
                double t146644 = t146642+t146643+1.0;
                double t146645 = t146638*t146639*3.0;
                double t146646 = gcab*t146635*t146638*t146639;
                double t146647 = gcab*t146635*3.0;
                double t146648 = t146645+t146646+t146647+1.0;
                double t146649 = t146638*t146639*6.0;
                double t146650 = gcab*t146635*t146638*t146639*4.0;
                double t146651 = t146640*t146641;
                double t146652 = gcab*t146635*4.0;
                double t146653 = t146650+t146651+t146652+t146649+1.0;
                double t146654 = a1p*c*c0p*t146562*t146537*(2.0/3.0);
                double t146655 = 1.0/pow(rho_a[index],1.0/3.0);
                double t146656 = c*t146655;
                double t146657 = sqrt(t146656);
                double t146658 = pow(t146656,3.0/2.0);
                double t146659 = 1.0/pow(rho_a[index],2.0/3.0);
                double t146660 = b1p*t146657;
                double t146661 = b3p*t146658;
                double t146662 = b4p*t146490*t146659;
                double t146663 = b2p*c*t146655;
                double t146664 = t146660+t146661+t146662+t146663;
                double t146665 = 1.0/t146664;
                double t146666 = t146492*t146665*(1.0/2.0);
                double t146667 = t146666+1.0;
                double t146668 = log(t146667);
                double t146669 = a1p*c*t146655;
                double t146670 = t146669+1.0;
                double t146671 = c0p*t146670*t146668*2.0;
                double t146672 = t146630-t146631;
                double t146673 = t146540*t146563*t146572*t146575*t146568;
                double t146674 = Aa*t146540*t146604*t146568*t146586*t146596*t146598*2.0;
                double t146675 = 1.0/t146637;
                double t146676 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t146677 = 1.0/(t146637*t146637);
                double t146678 = 1.0/t146644;
                double t146679 = 1.0/(t146648*t146648);
                double t146680 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t146681 = 1.0/(t146644*t146644);
                double t146682 = 1.0/t146648;
                double t146683 = 1.0/t146653;
                double t146684 = 1.0/(t146653*t146653);
                double t146685 = gcab*t146504*2.0;
                double t146686 = t146504*t146635*t146638*6.0;
                double t146687 = gcab*t146504*t146638*t146639*6.0;
                double t146688 = t146504*t146640*t146635*t146639*2.0;
                double t146689 = t146685+t146686+t146687+t146688;
                double t146690 = gamma_bb[index]*gcab*t146676*(8.0/3.0);
                double t146691 = gamma_bb[index]*t146635*t146638*t146676*(8.0/3.0);
                double t146692 = t146690+t146691;
                double t146693 = gcab*t146504;
                double t146694 = t146504*t146635*t146638;
                double t146695 = t146693+t146694;
                double t146696 = gamma_bb[index]*gcab*t146676*(1.6E1/3.0);
                double t146697 = gamma_bb[index]*gcab*t146638*t146639*t146676*1.6E1;
                double t146698 = gamma_bb[index]*t146640*t146635*t146639*t146676*(1.6E1/3.0);
                double t146699 = gamma_bb[index]*t146635*t146638*t146676*1.6E1;
                double t146700 = t146696+t146697+t146698+t146699;
                double t146701 = gcab*t146504*(3.0/2.0);
                double t146702 = t146504*t146635*t146638*3.0;
                double t146703 = gcab*t146504*t146638*t146639*(3.0/2.0);
                double t146704 = t146701+t146702+t146703;
                double t146705 = gamma_bb[index]*gcab*t146676*4.0;
                double t146706 = gamma_bb[index]*gcab*t146638*t146639*t146676*4.0;
                double t146707 = gamma_bb[index]*t146635*t146638*t146676*8.0;
                double t146708 = t146705+t146706+t146707;
                double t146709 = t146540*t146607*t146672;
                double t146710 = t146631+t146709;
                double t146711 = 1.0/t146512;
                double t146712 = 1.0/t146522;
                double t146713 = 1.0/t146525;
                double t146714 = 1.0/t146516;
                double t146715 = 1.0/(t146512*t146512);
                double t146716 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t146717 = 1.0/(t146516*t146516);
                double t146718 = 1.0/(t146525*t146525);
                double t146719 = gcaa*t146504*3.0;
                double t146720 = gamma_bb[index]*t146506*t146509*6.0;
                double t146721 = gcaa*t146510*t146505*t146506*3.0;
                double t146722 = t146720+t146721+t146719;
                double t146723 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t146724 = 1.0/(t146522*t146522);
                double t146725 = gcaa*t146504*4.0;
                double t146726 = gamma_bb[index]*t146506*t146509*1.2E1;
                double t146727 = gcaa*t146510*t146505*t146506*1.2E1;
                double t146728 = gamma_bb[index]*t146505*t146507*t146508*4.0;
                double t146729 = t146725+t146726+t146727+t146728;
                double t146730 = gcaa*t146504*2.0;
                double t146731 = gamma_bb[index]*t146506*t146509*2.0;
                double t146732 = t146730+t146731;
                double t146733 = gamma_bb[index]*gcaa*t146676*(1.6E1/3.0);
                double t146734 = t146505*t146506*t146680*(1.6E1/3.0);
                double t146735 = t146733+t146734;
                double t146736 = gamma_bb[index]*gcaa*t146676*8.0;
                double t146737 = gamma_bb[index]*gcaa*t146505*t146506*t146716*8.0;
                double t146738 = t146505*t146506*t146680*1.6E1;
                double t146739 = t146736+t146737+t146738;
                double t146740 = gamma_bb[index]*gcaa*t146676*(3.2E1/3.0);
                double t146741 = gamma_bb[index]*gcaa*t146505*t146506*t146716*3.2E1;
                double t146742 = t146505*t146506*t146680*3.2E1;
                double t146743 = t146507*t146723*t146517*(3.2E1/3.0);
                double t146744 = t146740+t146741+t146742+t146743;
                double t146745 = 1.0/t146617;
                double t146746 = 1.0/(t146614*t146614);
                double t146747 = b4f*t146490*t146619*(2.0/3.0);
                double t146748 = b2f*c*t146618*(1.0/3.0);
                double t146749 = b1f*c*t146620*t146618*(1.0/6.0);
                double t146750 = b3f*c*t146618*t146488*(1.0/2.0);
                double t146751 = t146750+t146747+t146748+t146749;
                double t146752 = a1f*c*c0f*t146621*t146618*(2.0/3.0);
                double t146753 = a1p*c*c0p*t146501*t146618*(2.0/3.0);
                double t146754 = ccaa1*gcaa*t146504*t146711;
                double t146755 = ccaa4*gamma_bb[index]*t146505*t146712*t146507*t146508*4.0;
                double t146756 = ccaa2*gamma_bb[index]*t146506*t146713*t146509*2.0;
                double t146757 = ccaa3*gcaa*t146510*t146505*t146506*t146714*3.0;
                double t146758 = t146754+t146755+t146756+t146757-ccaa1*gamma_bb[index]*t146506*t146715*t146509-ccaa2* \
                   t146505*t146506*t146732*t146509*t146718-ccaa4*t146507*t146508*t146517*t146724*t146729-ccaa3*gamma_bb[index]* \
                   gcaa*t146510*t146505*t146506*t146722*t146717;
                double t146759 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t146760 = 1.0/pow(t146759,1.0/3.0);
                double t146761 = 1.0/(omega*omega);
                double t146762 = pow(t146759,2.0/3.0);
                double t146812 = t146761*t146762;
                double t146763 = exp(-t146812);
                double t146764 = gx*gx;
                double t146765 = t146764*t146764;
                double t146766 = gamma_bb[index]*gx*t146504;
                double t146767 = t146766+1.0;
                double t146768 = gamma_bb[index]*gx*t146504*3.0;
                double t146769 = gamma_bb[index]*gx*t146510*t146505*t146764;
                double t146770 = t146505*t146509*t146764*3.0;
                double t146771 = t146770+t146768+t146769+1.0;
                double t146772 = gamma_bb[index]*gx*t146504*2.0;
                double t146773 = t146505*t146509*t146764;
                double t146774 = t146772+t146773+1.0;
                double t146775 = 1.0/(t146771*t146771);
                double t146776 = gamma_bb[index]*gx*t146504*4.0;
                double t146777 = gamma_bb[index]*gx*t146510*t146505*t146764*4.0;
                double t146778 = t146505*t146509*t146764*6.0;
                double t146779 = t146508*t146517*t146765;
                double t146780 = t146776+t146777+t146778+t146779+1.0;
                double t146781 = 1.0/(t146780*t146780);
                double t146782 = 1.0/(t146774*t146774);
                double t146783 = gamma_bb[index]*gx*t146676*(1.6E1/3.0);
                double t146784 = t146505*t146680*t146764*(1.6E1/3.0);
                double t146785 = t146783+t146784;
                double t146786 = gx*t146504*2.0;
                double t146787 = gamma_bb[index]*t146509*t146764*2.0;
                double t146788 = t146786+t146787;
                double t146789 = gx*t146504*3.0;
                double t146790 = gamma_bb[index]*t146509*t146764*6.0;
                double t146791 = gx*t146510*t146505*t146764*3.0;
                double t146792 = t146790+t146791+t146789;
                double t146793 = gamma_bb[index]*gx*t146676*8.0;
                double t146794 = gamma_bb[index]*gx*t146505*t146716*t146764*8.0;
                double t146795 = t146505*t146680*t146764*1.6E1;
                double t146796 = t146793+t146794+t146795;
                double t146797 = gamma_bb[index]*gx*t146676*(3.2E1/3.0);
                double t146798 = gamma_bb[index]*gx*t146505*t146716*t146764*3.2E1;
                double t146799 = t146505*t146680*t146764*3.2E1;
                double t146800 = t146723*t146517*t146765*(3.2E1/3.0);
                double t146801 = t146800+t146797+t146798+t146799;
                double t146802 = gx*t146504*4.0;
                double t146803 = gamma_bb[index]*t146509*t146764*1.2E1;
                double t146804 = gx*t146510*t146505*t146764*1.2E1;
                double t146805 = gamma_bb[index]*t146505*t146508*t146765*4.0;
                double t146806 = t146802+t146803+t146804+t146805;
                double t146807 = 1.0/omega;
                double t146808 = pow(t146759,1.0/3.0);
                double t146809 = t146807*t146808;
                double t146810 = erf(t146809);
                double t146811 = t146810*(3.991211251234741E15/2.251799813685248E15);
                double t146813 = omega*omega;
                double t146814 = 1.0/pow(t146759,2.0/3.0);
                double t146815 = t146763-1.0;
                double t146816 = t146813*t146814*t146815*(1.0/2.0);
                double t146817 = t146816-t146763+3.0/2.0;
                double t146828 = omega*t146760*t146817;
                double t146818 = t146811-t146828;
                double t146819 = omega*t146760*t146818*(4.0/3.0);
                double t146820 = t146819-1.0;
                double t146821 = 1.0/t146767;
                double t146822 = 1.0/t146780;
                double t146823 = 1.0/t146774;
                double t146824 = 1.0/t146771;
                double t146825 = 1.0/(t146767*t146767);
                double t146826 = pow(rho_b[index],4.0/3.0);
                double t146827 = 1.0/pow(t146759,4.0/3.0);
                double t146829 = cx1*gx*t146504*t146821;
                double t146830 = cx4*gamma_bb[index]*t146505*t146822*t146508*t146765*4.0;
                double t146831 = cx2*gamma_bb[index]*t146823*t146509*t146764*2.0;
                double t146832 = cx3*gx*t146510*t146505*t146824*t146764*3.0;
                double t146833 = t146830+t146831+t146832+t146829-cx1*gamma_bb[index]*t146509*t146825*t146764-cx2* \
                   t146505*t146509*t146764*t146782*t146788-cx4*t146508*t146517*t146806*t146781*t146765-cx3*gamma_bb[index]* \
                   gx*t146510*t146505*t146764*t146792*t146775;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t146710+rho_a[index]*(t146671-t146540*t146607*(t146671- \
                   c0f*log((t146541*(1.0/2.0))/(b1f*t146657+b3f*t146658+b2f*c*t146655+b4f*t146490*t146659)+1.0)*(a1f* \
                   c*t146655+1.0)*2.0))-t146526*(t146574+t146673+t146674))*(ccab1*gcab*t146675*t146676*(4.0/3.0)-ccab2* \
                   t146681*t146638*t146639*(gcab*t146676*(8.0/3.0)+gamma_bb[index]*t146680*t146638*(4.0/3.0)+t146635* \
                   t146638*t146676*(8.0/3.0))-ccab4*t146640*t146641*t146684*(gcab*t146676*(1.6E1/3.0)+gamma_bb[index]* \
                   t146680*t146638*8.0+t146635*t146638*t146676*1.6E1+gamma_bb[index]*t146640*t146680*t146639*8.0+gcab* \
                   t146638*t146639*t146676*1.6E1+t146640*t146635*t146639*t146676*(1.6E1/3.0)+gamma_bb[index]*gcab*t146635* \
                   t146680*t146638*1.6E1)-ccab1*gamma_bb[index]*t146680*t146638*t146677*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t146680*t146638*t146678*(4.0/3.0)-ccab1*t146635*t146638*t146676*t146677*(4.0/3.0)+ccab2*t146635*t146638* \
                   t146676*t146678*(8.0/3.0)-ccab2*t146504*t146635*t146681*t146638*t146692+ccab4*t146640*t146635*t146683* \
                   t146639*t146676*(1.6E1/3.0)+ccab4*t146700*t146640*t146641*1.0/(t146653*t146653*t146653)*t146689*2.0+ \
                   ccab2*1.0/(t146644*t146644*t146644)*t146638*t146692*t146639*t146695*2.0+ccab4*gamma_bb[index]*t146640* \
                   t146680*t146683*t146639*8.0+ccab3*gcab*t146682*t146638*t146639*t146676*4.0+ccab3*gamma_bb[index]*gcab* \
                   t146635*t146680*t146682*t146638*4.0-ccab2*gamma_bb[index]*t146635*t146681*t146638*t146676*t146695* \
                   (8.0/3.0)-ccab3*gcab*t146504*t146708*t146638*t146639*t146679*(3.0/2.0)-ccab4*t146700*t146504*t146640* \
                   t146635*t146639*t146684*2.0-ccab3*gcab*t146635*t146638*t146639*t146679*(gcab*t146676*4.0+gamma_bb[index]* \
                   t146680*t146638*4.0+t146635*t146638*t146676*8.0+gcab*t146638*t146639*t146676*4.0+gamma_bb[index]*gcab* \
                   t146635*t146680*t146638*4.0)+ccab1*gamma_bb[index]*gcab*t146635*t146680*1.0/(t146637*t146637*t146637) \
                   *t146638*(4.0/3.0)+ccab3*gcab*t146704*t146635*t146708*t146638*t146639*1.0/(t146648*t146648*t146648) \
                   *2.0-ccab3*gamma_bb[index]*gcab*t146704*t146638*t146639*t146676*t146679*4.0-ccab4*gamma_bb[index]* \
                   t146640*t146635*t146639*t146684*t146676*t146689*(1.6E1/3.0))-(-t146631+t146574+t146673+t146674+rho_b[index]* \
                   (t146753-t146629+t146540*t146607*(t146752+t146629-t146751*t146609*t146745*t146746-a1p*c*c0p*t146501* \
                   t146618*(2.0/3.0)))-t146526*(t146654-t146546*t146584*t146578*t146579+t146602*t146540*t146563*t146572* \
                   t146575+t146540*t146563*t146575*t146585*t146568*4.0-t146540*t146572*t146575*t146568*(t146654-t146546* \
                   t146584*t146578*t146579+(t146561*1.0/(t146555*t146555)*(b2f*c*t146537*(1.0/3.0)+b4f*t146490*t146576* \
                   (2.0/3.0)+b1f*c*t146537*t146577*(1.0/6.0)+b3f*c*t146537*t146529*(1.0/2.0)))/t146558-a1f*c*c0f*t146537* \
                   t146559*(2.0/3.0))+t146540*t146563*t146572*t146547*t146548*t146568*4.0+Aa*t146540*t146568*t146586* \
                   t146596*t146598*(t146575*t146585*4.0+t146572*t146547*t146548*4.0)*2.0+Aa*t146602*t146540*t146604*t146586* \
                   t146596*t146598*2.0-(t146540*t146604*1.0/(t146592*t146592)*t146568*t146586*t146598*(b2a*c*t146537* \
                   (1.0/3.0)+b4a*t146490*t146576*(2.0/3.0)+b1a*c*t146537*t146577*(1.0/6.0)+b3a*c*t146537*t146529*(1.0/ \
                   2.0)))/t146595+Aa*a1a*c*t146540*t146604*t146537*t146568*t146586*t146596*(2.0/3.0))-t146540*t146607* \
                   t146672)*(ccab1*gcab*t146504*t146675*(1.0/2.0)-ccab1*t146504*t146635*t146638*t146677*(1.0/2.0)+ccab2* \
                   t146504*t146635*t146638*t146678-ccab4*t146640*t146641*t146684*t146689-ccab2*t146681*t146638*t146639* \
                   t146695+ccab4*t146504*t146640*t146635*t146683*t146639*2.0+ccab3*gcab*t146504*t146682*t146638*t146639* \
                   (3.0/2.0)-ccab3*gcab*t146704*t146635*t146638*t146639*t146679)-t146758*(t146631+t146540*t146607*(t146630- \
                   c0p*t146501*t146503*2.0))-rho_b[index]*t146710*(ccaa1*gcaa*t146711*t146676*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t146506*t146713*t146680*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t146506*t146715*t146680*8.0+ccaa2*t146505* \
                   t146506*t146732*t146680*t146718*(1.6E1/3.0)+ccaa4*t146507*t146723*t146517*t146724*t146729*(3.2E1/3.0) \
                   +ccaa4*t146507*t146508*t146517*t146724*(gcaa*t146676*(3.2E1/3.0)+gamma_bb[index]*t146506*t146680*6.4E1+ \
                   gamma_bb[index]*t146505*t146507*t146723*(1.28E2/3.0)+gcaa*t146505*t146506*t146716*9.6E1)-ccaa1*gcaa* \
                   1.0/(t146512*t146512*t146512)*t146505*t146506*t146716*(1.6E1/3.0)+ccaa2*t146505*t146506*t146509*t146718* \
                   (gcaa*t146676*(1.6E1/3.0)+gamma_bb[index]*t146506*t146680*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t146505* \
                   t146712*t146507*t146723*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t146506*t146509*t146735*t146718*2.0-ccaa3* \
                   gcaa*t146505*t146506*t146714*t146716*2.4E1+ccaa4*gamma_bb[index]*t146505*t146507*t146508*t146724*t146744* \
                   4.0+ccaa3*gcaa*t146510*t146505*t146506*t146717*t146739*3.0-ccaa2*t146505*t146506*1.0/(t146525*t146525* \
                   t146525)*t146732*t146509*t146735*2.0-ccaa4*1.0/(t146522*t146522*t146522)*t146507*t146508*t146517*t146744* \
                   t146729*2.0+ccaa3*gamma_bb[index]*gcaa*t146510*t146505*t146506*t146717*(gcaa*t146676*8.0+gamma_bb[index]* \
                   t146506*t146680*3.2E1+gcaa*t146505*t146506*t146716*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t146505*t146506* \
                   t146722*t146716*t146717*8.0-ccaa3*gamma_bb[index]*gcaa*t146510*t146505*t146506*t146722*1.0/(t146516* \
                   t146516*t146516)*t146739*2.0)+rho_b[index]*t146758*(t146753-t146629+t146540*t146607*(t146752-t146753+ \
                   t146629-t146751*t146609*t146745*t146746))-c0*t146833*t146826*(omega*t146760*(omega*t146817*t146827* \
                   (2.778046668940015E15/1.40737488355328E14)+omega*t146760*((t146763*(1.0/3.0))/rho_b[index]+t146813* \
                   t146815*1.0/pow(t146759,5.0/3.0)*(2.778046668940015E15/1.40737488355328E14)-t146760*t146761*t146763* \
                   (2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t146814*t146807*t146763*(1.108777112152858E31/ \
                   1.584563250285287E29))*(4.0/3.0)-omega*t146818*t146827*(2.778046668940015E15/1.05553116266496E14)) \
                   -c0*t146820*t146826*(cx1*gx*t146821*t146676*(-8.0/3.0)+cx1*gamma_bb[index]*t146680*t146825*t146764* \
                   8.0-cx2*gamma_bb[index]*t146823*t146680*t146764*(3.2E1/3.0)+cx2*t146505*t146680*t146764*t146782*t146788* \
                   (1.6E1/3.0)+cx4*t146723*t146517*t146806*t146781*t146765*(3.2E1/3.0)+cx4*t146508*t146517*t146781*t146765* \
                   (gx*t146676*(3.2E1/3.0)+gamma_bb[index]*t146680*t146764*6.4E1+gamma_bb[index]*t146505*t146723*t146765* \
                   (1.28E2/3.0)+gx*t146505*t146716*t146764*9.6E1)-cx1*gx*t146505*t146716*t146764*1.0/(t146767*t146767* \
                   t146767)*(1.6E1/3.0)+cx2*t146505*t146509*t146764*t146782*(gx*t146676*(1.6E1/3.0)+gamma_bb[index]*t146680* \
                   t146764*(3.2E1/3.0))+cx2*gamma_bb[index]*t146509*t146764*t146782*t146785*2.0-cx4*gamma_bb[index]*t146505* \
                   t146723*t146822*t146765*(1.28E2/3.0)-cx3*gx*t146505*t146716*t146824*t146764*2.4E1+cx4*gamma_bb[index]* \
                   t146801*t146505*t146508*t146781*t146765*4.0+cx3*gx*t146510*t146505*t146764*t146775*t146796*3.0-cx2* \
                   t146505*t146509*t146764*1.0/(t146774*t146774*t146774)*t146785*t146788*2.0-cx4*t146801*t146508*t146517* \
                   t146806*1.0/(t146780*t146780*t146780)*t146765*2.0+cx3*gamma_bb[index]*gx*t146510*t146505*t146764*t146775* \
                   (gx*t146676*8.0+gamma_bb[index]*t146680*t146764*3.2E1+gx*t146505*t146716*t146764*2.4E1)+cx3*gamma_bb[index]* \
                   gx*t146505*t146716*t146764*t146792*t146775*8.0-cx3*gamma_bb[index]*gx*t146510*t146505*1.0/(t146771* \
                   t146771*t146771)*t146764*t146792*t146796*2.0)-c0*pow(rho_b[index],1.0/3.0)*t146820*t146833*(4.0/3.0) \
                   ;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t147820 = 1.0/pow(rho_b[index],1.0/3.0);
                double t147821 = c*t147820;
                double t147822 = sqrt(t147821);
                double t147823 = pow(t147821,3.0/2.0);
                double t147824 = c*c;
                double t147825 = 1.0/pow(rho_b[index],2.0/3.0);
                double t147826 = 1.0/c0p;
                double t147827 = b1p*t147822;
                double t147828 = b3p*t147823;
                double t147829 = b4p*t147824*t147825;
                double t147830 = b2p*c*t147820;
                double t147831 = t147830+t147827+t147828+t147829;
                double t147832 = 1.0/t147831;
                double t147833 = t147832*t147826*(1.0/2.0);
                double t147834 = t147833+1.0;
                double t147835 = log(t147834);
                double t147836 = a1p*c*t147820;
                double t147837 = t147836+1.0;
                double t147838 = 1.0/pow(rho_b[index],8.0/3.0);
                double t147839 = gamma_bb[index]*gamma_bb[index];
                double t147840 = gcaa*gcaa;
                double t147841 = t147840*t147840;
                double t147842 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t147843 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t147844 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t147845 = gamma_bb[index]*gcaa*t147838;
                double t147846 = t147845+1.0;
                double t147847 = gamma_bb[index]*gcaa*t147838*3.0;
                double t147848 = gamma_bb[index]*gcaa*t147840*t147844*t147839;
                double t147849 = t147840*t147843*t147839*3.0;
                double t147850 = t147847+t147848+t147849+1.0;
                double t147851 = t147839*t147839;
                double t147852 = gamma_bb[index]*gcaa*t147838*4.0;
                double t147853 = gamma_bb[index]*gcaa*t147840*t147844*t147839*4.0;
                double t147854 = t147840*t147843*t147839*6.0;
                double t147855 = t147841*t147842*t147851;
                double t147856 = t147852+t147853+t147854+t147855+1.0;
                double t147857 = gamma_bb[index]*gcaa*t147838*2.0;
                double t147858 = t147840*t147843*t147839;
                double t147859 = t147857+t147858+1.0;
                double t147860 = pow(2.0,1.0/3.0);
                double t147861 = t147860*2.0;
                double t147862 = t147861-2.0;
                double t147863 = two_13*2.0;
                double t147864 = t147863-2.0;
                double t147865 = 1.0/t147864;
                double t147866 = 1.0/c0f;
                double t147867 = b1f*t147822;
                double t147868 = b3f*t147823;
                double t147869 = b4f*t147824*t147825;
                double t147870 = b2f*c*t147820;
                double t147871 = t147870+t147867+t147868+t147869;
                double t147872 = 1.0/t147871;
                double t147873 = t147872*t147866*(1.0/2.0);
                double t147874 = t147873+1.0;
                double t147875 = log(t147874);
                double t147876 = a1f*c*t147820;
                double t147877 = t147876+1.0;
                double t147878 = c0f*t147875*t147877*2.0;
                double t147879 = c0p*t147835*t147837*2.0;
                double t147880 = 1.0/t147846;
                double t147881 = 1.0/t147856;
                double t147882 = 1.0/t147859;
                double t147883 = 1.0/t147850;
                double t147884 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t147885 = 1.0/(t147846*t147846);
                double t147886 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t147887 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t147888 = 1.0/(t147850*t147850);
                double t147889 = 1.0/(t147859*t147859);
                double t147890 = gcaa*t147838*3.0;
                double t147891 = gamma_bb[index]*t147840*t147843*6.0;
                double t147892 = gcaa*t147840*t147844*t147839*3.0;
                double t147893 = t147890+t147891+t147892;
                double t147894 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t147895 = 1.0/(t147856*t147856);
                double t147896 = gcaa*t147838*4.0;
                double t147897 = gamma_bb[index]*t147840*t147843*1.2E1;
                double t147898 = gcaa*t147840*t147844*t147839*1.2E1;
                double t147899 = gamma_bb[index]*t147841*t147842*t147839*4.0;
                double t147900 = t147896+t147897+t147898+t147899;
                double t147901 = gcaa*t147838*2.0;
                double t147902 = gamma_bb[index]*t147840*t147843*2.0;
                double t147903 = t147901+t147902;
                double t147904 = gamma_bb[index]*gcaa*t147887*(1.6E1/3.0);
                double t147905 = t147840*t147839*t147884*(1.6E1/3.0);
                double t147906 = t147904+t147905;
                double t147907 = gamma_bb[index]*gcaa*t147887*8.0;
                double t147908 = gamma_bb[index]*gcaa*t147840*t147839*t147886*8.0;
                double t147909 = t147840*t147839*t147884*1.6E1;
                double t147910 = t147907+t147908+t147909;
                double t147911 = gamma_bb[index]*gcaa*t147887*(3.2E1/3.0);
                double t147912 = gamma_bb[index]*gcaa*t147840*t147839*t147886*3.2E1;
                double t147913 = t147840*t147839*t147884*3.2E1;
                double t147914 = t147841*t147851*t147894*(3.2E1/3.0);
                double t147915 = t147911+t147912+t147913+t147914;
                double t147916 = 1.0/pow(rho_b[index],4.0/3.0);
                double t147917 = 1.0/pow(rho_b[index],5.0/3.0);
                double t147918 = 1.0/sqrt(t147821);
                double t147919 = 1.0/t147834;
                double t147920 = 1.0/(t147831*t147831);
                double t147921 = b4p*t147824*t147917*(2.0/3.0);
                double t147922 = b2p*c*t147916*(1.0/3.0);
                double t147923 = b1p*c*t147916*t147918*(1.0/6.0);
                double t147924 = b3p*c*t147822*t147916*(1.0/2.0);
                double t147925 = t147921+t147922+t147923+t147924;
                double t147926 = t147920*t147925*t147837*t147919;
                double t147927 = ccaa1*gcaa*t147880*t147838;
                double t147928 = ccaa4*gamma_bb[index]*t147841*t147842*t147881*t147839*4.0;
                double t147929 = ccaa2*gamma_bb[index]*t147840*t147843*t147882*2.0;
                double t147930 = ccaa3*gcaa*t147840*t147844*t147883*t147839*3.0;
                double t147931 = t147930+t147927+t147928+t147929-ccaa1*gamma_bb[index]*t147840*t147843*t147885-ccaa4* \
                   t147900*t147841*t147842*t147851*t147895-ccaa2*t147840*t147903*t147843*t147839*t147889-ccaa3*gamma_bb[index]* \
                   gcaa*t147840*t147844*t147839*t147893*t147888;
                double t147932 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t147933 = 1.0/pow(t147932,1.0/3.0);
                double t147934 = 1.0/(omega*omega);
                double t147935 = pow(t147932,2.0/3.0);
                double t147985 = t147934*t147935;
                double t147936 = exp(-t147985);
                double t147937 = gx*gx;
                double t147938 = t147937*t147937;
                double t147939 = gamma_bb[index]*gx*t147838;
                double t147940 = t147939+1.0;
                double t147941 = gamma_bb[index]*gx*t147838*3.0;
                double t147942 = gamma_bb[index]*gx*t147844*t147937*t147839;
                double t147943 = t147843*t147937*t147839*3.0;
                double t147944 = t147941+t147942+t147943+1.0;
                double t147945 = gamma_bb[index]*gx*t147838*2.0;
                double t147946 = t147843*t147937*t147839;
                double t147947 = t147945+t147946+1.0;
                double t147948 = 1.0/(t147944*t147944);
                double t147949 = gamma_bb[index]*gx*t147838*4.0;
                double t147950 = gamma_bb[index]*gx*t147844*t147937*t147839*4.0;
                double t147951 = t147843*t147937*t147839*6.0;
                double t147952 = t147842*t147851*t147938;
                double t147953 = t147950+t147951+t147952+t147949+1.0;
                double t147954 = 1.0/(t147953*t147953);
                double t147955 = 1.0/(t147947*t147947);
                double t147956 = gamma_bb[index]*gx*t147887*(1.6E1/3.0);
                double t147957 = t147937*t147839*t147884*(1.6E1/3.0);
                double t147958 = t147956+t147957;
                double t147959 = gx*t147838*2.0;
                double t147960 = gamma_bb[index]*t147843*t147937*2.0;
                double t147961 = t147960+t147959;
                double t147962 = gx*t147838*3.0;
                double t147963 = gamma_bb[index]*t147843*t147937*6.0;
                double t147964 = gx*t147844*t147937*t147839*3.0;
                double t147965 = t147962+t147963+t147964;
                double t147966 = gamma_bb[index]*gx*t147887*8.0;
                double t147967 = gamma_bb[index]*gx*t147937*t147839*t147886*8.0;
                double t147968 = t147937*t147839*t147884*1.6E1;
                double t147969 = t147966+t147967+t147968;
                double t147970 = gamma_bb[index]*gx*t147887*(3.2E1/3.0);
                double t147971 = gamma_bb[index]*gx*t147937*t147839*t147886*3.2E1;
                double t147972 = t147937*t147839*t147884*3.2E1;
                double t147973 = t147851*t147938*t147894*(3.2E1/3.0);
                double t147974 = t147970+t147971+t147972+t147973;
                double t147975 = gx*t147838*4.0;
                double t147976 = gamma_bb[index]*t147843*t147937*1.2E1;
                double t147977 = gx*t147844*t147937*t147839*1.2E1;
                double t147978 = gamma_bb[index]*t147842*t147839*t147938*4.0;
                double t147979 = t147975+t147976+t147977+t147978;
                double t147980 = 1.0/omega;
                double t147981 = pow(t147932,1.0/3.0);
                double t147982 = t147980*t147981;
                double t147983 = erf(t147982);
                double t147984 = t147983*(3.991211251234741E15/2.251799813685248E15);
                double t147986 = omega*omega;
                double t147987 = 1.0/pow(t147932,2.0/3.0);
                double t147988 = t147936-1.0;
                double t147989 = t147986*t147987*t147988*(1.0/2.0);
                double t147990 = -t147936+t147989+3.0/2.0;
                double t148001 = omega*t147933*t147990;
                double t147991 = -t148001+t147984;
                double t147992 = omega*t147933*t147991*(4.0/3.0);
                double t147993 = t147992-1.0;
                double t147994 = 1.0/t147940;
                double t147995 = 1.0/t147953;
                double t147996 = 1.0/t147947;
                double t147997 = 1.0/t147944;
                double t147998 = 1.0/(t147940*t147940);
                double t147999 = pow(rho_b[index],4.0/3.0);
                double t148000 = 1.0/pow(t147932,4.0/3.0);
                double t148002 = cx1*gx*t147838*t147994;
                double t148003 = cx4*gamma_bb[index]*t147842*t147839*t147938*t147995*4.0;
                double t148004 = cx2*gamma_bb[index]*t147843*t147937*t147996*2.0;
                double t148005 = cx3*gx*t147844*t147937*t147839*t147997*3.0;
                double t148006 = t148002+t148003+t148004+t148005-cx1*gamma_bb[index]*t147843*t147937*t147998-cx2* \
                   t147843*t147961*t147937*t147955*t147839-cx4*t147842*t147851*t147954*t147938*t147979-cx3*gamma_bb[index]* \
                   gx*t147844*t147937*t147839*t147965*t147948;
                v_rho_b_gamma_bb_[index] = -t147931*(t147879+t147862*t147865*(t147878-c0p*t147835*t147837*2.0))+rho_b[index]* \
                   t147931*(-t147926+t147862*t147865*(t147926-(1.0/(t147871*t147871)*t147877*(b2f*c*t147916*(1.0/3.0) \
                   +b4f*t147824*t147917*(2.0/3.0)+b1f*c*t147916*t147918*(1.0/6.0)+b3f*c*t147822*t147916*(1.0/2.0)))/t147874+ \
                   a1f*c*c0f*t147916*t147875*(2.0/3.0)-a1p*c*c0p*t147835*t147916*(2.0/3.0))+a1p*c*c0p*t147835*t147916* \
                   (2.0/3.0))-rho_b[index]*(t147879+t147862*t147865*(t147878-t147879))*(ccaa1*gcaa*t147880*t147887*(- \
                   8.0/3.0)-ccaa2*gamma_bb[index]*t147840*t147882*t147884*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t147840*t147884* \
                   t147885*8.0+ccaa4*t147900*t147841*t147851*t147894*t147895*(3.2E1/3.0)+ccaa2*t147840*t147903*t147839* \
                   t147884*t147889*(1.6E1/3.0)+ccaa4*t147841*t147842*t147851*t147895*(gcaa*t147887*(3.2E1/3.0)+gamma_bb[index]* \
                   t147840*t147884*6.4E1+gamma_bb[index]*t147841*t147839*t147894*(1.28E2/3.0)+gcaa*t147840*t147839*t147886* \
                   9.6E1)-ccaa1*gcaa*t147840*1.0/(t147846*t147846*t147846)*t147839*t147886*(1.6E1/3.0)+ccaa2*t147840* \
                   t147843*t147839*t147889*(gcaa*t147887*(1.6E1/3.0)+gamma_bb[index]*t147840*t147884*(3.2E1/3.0))+ccaa2* \
                   gamma_bb[index]*t147840*t147843*t147906*t147889*2.0-ccaa4*gamma_bb[index]*t147841*t147881*t147839* \
                   t147894*(1.28E2/3.0)-ccaa3*gcaa*t147840*t147883*t147839*t147886*2.4E1+ccaa4*gamma_bb[index]*t147841* \
                   t147842*t147915*t147839*t147895*4.0+ccaa3*gcaa*t147910*t147840*t147844*t147839*t147888*3.0-ccaa4*t147900* \
                   t147841*t147842*t147851*t147915*1.0/(t147856*t147856*t147856)*2.0-ccaa2*t147840*t147903*t147843*t147906* \
                   t147839*1.0/(t147859*t147859*t147859)*2.0+ccaa3*gamma_bb[index]*gcaa*t147840*t147844*t147839*t147888* \
                   (gcaa*t147887*8.0+gamma_bb[index]*t147840*t147884*3.2E1+gcaa*t147840*t147839*t147886*2.4E1)+ccaa3* \
                   gamma_bb[index]*gcaa*t147840*t147839*t147893*t147886*t147888*8.0-ccaa3*gamma_bb[index]*gcaa*t147910* \
                   t147840*1.0/(t147850*t147850*t147850)*t147844*t147839*t147893*2.0)-c0*t148006*t147999*(omega*t147933* \
                   (omega*t148000*t147990*(2.778046668940015E15/1.40737488355328E14)+omega*t147933*((t147936*(1.0/3.0) \
                   )/rho_b[index]+1.0/pow(t147932,5.0/3.0)*t147986*t147988*(2.778046668940015E15/1.40737488355328E14) \
                   -t147933*t147934*t147936*(2.778046668940015E15/7.0368744177664E13))+1.0/sqrt(3.141592653589793)*t147980* \
                   t147936*t147987*(1.108777112152858E31/1.584563250285287E29))*(4.0/3.0)-omega*t148000*t147991*(2.778046668940015E15/ \
                   1.05553116266496E14))-c0*t147993*t147999*(cx1*gx*t147994*t147887*(-8.0/3.0)+cx1*gamma_bb[index]*t147937* \
                   t147884*t147998*8.0-cx2*gamma_bb[index]*t147937*t147884*t147996*(3.2E1/3.0)+cx2*t147961*t147937*t147955* \
                   t147839*t147884*(1.6E1/3.0)+cx4*t147851*t147954*t147938*t147894*t147979*(3.2E1/3.0)+cx4*t147842*t147851* \
                   t147954*t147938*(gx*t147887*(3.2E1/3.0)+gamma_bb[index]*t147937*t147884*6.4E1+gamma_bb[index]*t147839* \
                   t147938*t147894*(1.28E2/3.0)+gx*t147937*t147839*t147886*9.6E1)-cx1*gx*1.0/(t147940*t147940*t147940) \
                   *t147937*t147839*t147886*(1.6E1/3.0)+cx2*t147843*t147937*t147955*t147839*(gx*t147887*(1.6E1/3.0)+gamma_bb[index]* \
                   t147937*t147884*(3.2E1/3.0))+cx2*gamma_bb[index]*t147843*t147937*t147955*t147958*2.0-cx4*gamma_bb[index]* \
                   t147839*t147938*t147894*t147995*(1.28E2/3.0)-cx3*gx*t147937*t147839*t147886*t147997*2.4E1+cx4*gamma_bb[index]* \
                   t147842*t147954*t147839*t147938*t147974*4.0+cx3*gx*t147844*t147937*t147839*t147948*t147969*3.0-cx2* \
                   t147843*t147961*t147937*t147839*1.0/(t147947*t147947*t147947)*t147958*2.0-cx4*t147842*t147851*1.0/ \
                   (t147953*t147953*t147953)*t147938*t147974*t147979*2.0+cx3*gamma_bb[index]*gx*t147844*t147937*t147839* \
                   t147948*(gx*t147887*8.0+gamma_bb[index]*t147937*t147884*3.2E1+gx*t147937*t147839*t147886*2.4E1)+cx3* \
                   gamma_bb[index]*gx*t147937*t147839*t147965*t147948*t147886*8.0-cx3*gamma_bb[index]*gx*t147844*1.0/ \
                   (t147944*t147944*t147944)*t147937*t147839*t147965*t147969*2.0)-c0*pow(rho_b[index],1.0/3.0)*t148006* \
                   t147993*(4.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t146835 = 1.0/pow(rho_a[index],1.0/3.0);
                double t146836 = c*t146835;
                double t146837 = sqrt(t146836);
                double t146838 = pow(t146836,3.0/2.0);
                double t146839 = c*c;
                double t146840 = 1.0/pow(rho_a[index],2.0/3.0);
                double t146841 = 1.0/c0p;
                double t146842 = b1p*t146837;
                double t146843 = b3p*t146838;
                double t146844 = b4p*t146840*t146839;
                double t146845 = b2p*c*t146835;
                double t146846 = t146842+t146843+t146844+t146845;
                double t146847 = 1.0/t146846;
                double t146848 = t146841*t146847*(1.0/2.0);
                double t146849 = t146848+1.0;
                double t146850 = log(t146849);
                double t146851 = a1p*c*t146835;
                double t146852 = t146851+1.0;
                double t146853 = pow(2.0,1.0/3.0);
                double t146854 = t146853*2.0;
                double t146855 = t146854-2.0;
                double t146856 = two_13*2.0;
                double t146857 = t146856-2.0;
                double t146858 = 1.0/t146857;
                double t146859 = 1.0/c0f;
                double t146860 = 1.0/pow(rho_b[index],1.0/3.0);
                double t146861 = c*t146860;
                double t146862 = sqrt(t146861);
                double t146863 = pow(t146861,3.0/2.0);
                double t146864 = 1.0/pow(rho_b[index],2.0/3.0);
                double t146865 = b1p*t146862;
                double t146866 = b3p*t146863;
                double t146867 = b4p*t146864*t146839;
                double t146868 = b2p*c*t146860;
                double t146869 = t146865+t146866+t146867+t146868;
                double t146870 = 1.0/t146869;
                double t146871 = t146841*t146870*(1.0/2.0);
                double t146872 = t146871+1.0;
                double t146873 = log(t146872);
                double t146874 = a1p*c*t146860;
                double t146875 = t146874+1.0;
                double t146876 = c0p*t146873*t146875*2.0;
                double t146877 = rho_a[index]+rho_b[index];
                double t146878 = 1.0/pow(t146877,1.0/3.0);
                double t146879 = c*t146878;
                double t146880 = sqrt(t146879);
                double t146881 = pow(t146879,3.0/2.0);
                double t146882 = 1.0/pow(t146877,2.0/3.0);
                double t146883 = b1p*t146880;
                double t146884 = b3p*t146881;
                double t146885 = b4p*t146882*t146839;
                double t146886 = b2p*c*t146878;
                double t146887 = t146883+t146884+t146885+t146886;
                double t146888 = 1.0/t146887;
                double t146889 = t146841*t146888*(1.0/2.0);
                double t146890 = t146889+1.0;
                double t146891 = log(t146890);
                double t146892 = a1p*c*t146878;
                double t146893 = t146892+1.0;
                double t146894 = c0p*t146891*t146893*2.0;
                double t146895 = rho_a[index]-rho_b[index];
                double t146896 = t146895*t146895;
                double t146897 = 1.0/t146877;
                double t146898 = t146895*t146897;
                double t146899 = 1.0/(t146877*t146877*t146877*t146877);
                double t146900 = t146896*t146896;
                double t146901 = t146898+1.0;
                double t146902 = pow(t146901,4.0/3.0);
                double t146903 = -t146898+1.0;
                double t146904 = pow(t146903,4.0/3.0);
                double t146905 = t146902+t146904-2.0;
                double t146906 = gcab*gcab;
                double t146907 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t146908 = 1.0/pow(rho_a[index],8.0/3.0);
                double t146909 = gamma_aa[index]*t146908*(1.0/2.0);
                double t146910 = 1.0/pow(rho_b[index],8.0/3.0);
                double t146911 = gamma_bb[index]*t146910*(1.0/2.0);
                double t146912 = t146911+t146909;
                double t146913 = gcab*t146912;
                double t146914 = t146913+1.0;
                double t146915 = t146912*t146912;
                double t146916 = t146906*t146915;
                double t146917 = gcab*t146912*2.0;
                double t146918 = t146916+t146917+1.0;
                double t146919 = t146906*t146906;
                double t146936 = gcab*t146908*2.0;
                double t146937 = t146912*t146906*t146908*6.0;
                double t146938 = gcab*t146906*t146915*t146908*6.0;
                double t146939 = t146912*t146915*t146908*t146919*2.0;
                double t146920 = t146936+t146937+t146938+t146939;
                double t146921 = t146915*t146915;
                double t146941 = gcab*t146908*(3.0/2.0);
                double t146942 = t146912*t146906*t146908*3.0;
                double t146943 = gcab*t146906*t146915*t146908*(3.0/2.0);
                double t146922 = t146941+t146942+t146943;
                double t146923 = t146906*t146915*3.0;
                double t146924 = gcab*t146912*t146906*t146915;
                double t146925 = gcab*t146912*3.0;
                double t146926 = t146923+t146924+t146925+1.0;
                double t146933 = gcab*t146908;
                double t146934 = t146912*t146906*t146908;
                double t146927 = t146933+t146934;
                double t146928 = t146906*t146915*6.0;
                double t146929 = gcab*t146912*t146906*t146915*4.0;
                double t146930 = t146921*t146919;
                double t146931 = gcab*t146912*4.0;
                double t146932 = t146930+t146931+t146928+t146929+1.0;
                double t146935 = 1.0/(t146918*t146918);
                double t146940 = 1.0/(t146932*t146932);
                double t146944 = 1.0/(t146926*t146926);
                double t146945 = b1f*t146837;
                double t146946 = b3f*t146838;
                double t146947 = b4f*t146840*t146839;
                double t146948 = b2f*c*t146835;
                double t146949 = t146945+t146946+t146947+t146948;
                double t146950 = 1.0/t146949;
                double t146951 = t146950*t146859*(1.0/2.0);
                double t146952 = t146951+1.0;
                double t146953 = log(t146952);
                double t146954 = a1f*c*t146835;
                double t146955 = t146954+1.0;
                double t146956 = c0f*t146953*t146955*2.0;
                double t146957 = c0p*t146850*t146852*2.0;
                double t146958 = gcaa*gcaa;
                double t146959 = gamma_aa[index]*gamma_aa[index];
                double t146960 = t146958*t146958;
                double t146961 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t146962 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t146963 = gamma_aa[index]*gcaa*t146908;
                double t146964 = t146963+1.0;
                double t146965 = gamma_aa[index]*gcaa*t146908*2.0;
                double t146966 = t146907*t146958*t146959;
                double t146967 = t146965+t146966+1.0;
                double t146968 = gamma_aa[index]*gcaa*t146908*3.0;
                double t146969 = gamma_aa[index]*gcaa*t146962*t146958*t146959;
                double t146970 = t146907*t146958*t146959*3.0;
                double t146971 = t146970+t146968+t146969+1.0;
                double t146972 = t146959*t146959;
                double t146988 = gcaa*t146908*4.0;
                double t146989 = gamma_aa[index]*t146907*t146958*1.2E1;
                double t146990 = gcaa*t146962*t146958*t146959*1.2E1;
                double t146991 = gamma_aa[index]*t146960*t146961*t146959*4.0;
                double t146973 = t146990+t146991+t146988+t146989;
                double t146974 = gamma_aa[index]*gcaa*t146908*4.0;
                double t146975 = gamma_aa[index]*gcaa*t146962*t146958*t146959*4.0;
                double t146976 = t146907*t146958*t146959*6.0;
                double t146977 = t146960*t146961*t146972;
                double t146978 = t146974+t146975+t146976+t146977+1.0;
                double t146981 = gcaa*t146908*2.0;
                double t146982 = gamma_aa[index]*t146907*t146958*2.0;
                double t146979 = t146981+t146982;
                double t146980 = 1.0/(t146971*t146971);
                double t146983 = 1.0/(t146967*t146967);
                double t146984 = gcaa*t146908*3.0;
                double t146985 = gamma_aa[index]*t146907*t146958*6.0;
                double t146986 = gcaa*t146962*t146958*t146959*3.0;
                double t146987 = t146984+t146985+t146986;
                double t146992 = 1.0/(t146978*t146978);
                double t146993 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t146994 = 1.0/pow(t146993,1.0/3.0);
                double t146995 = 1.0/(omega*omega);
                double t146996 = pow(t146993,2.0/3.0);
                double t146997 = exp(-t146995*t146996);
                double t146998 = gx*gx;
                double t146999 = t146998*t146998;
                double t147000 = gamma_aa[index]*gx*t146908;
                double t147001 = t147000+1.0;
                double t147002 = gamma_aa[index]*gx*t146908*2.0;
                double t147003 = t146907*t146959*t146998;
                double t147004 = t147002+t147003+1.0;
                double t147005 = gamma_aa[index]*gx*t146908*3.0;
                double t147006 = gamma_aa[index]*gx*t146962*t146959*t146998;
                double t147007 = t146907*t146959*t146998*3.0;
                double t147008 = t147005+t147006+t147007+1.0;
                double t147024 = gx*t146908*4.0;
                double t147025 = gamma_aa[index]*t146907*t146998*1.2E1;
                double t147026 = gx*t146962*t146959*t146998*1.2E1;
                double t147027 = gamma_aa[index]*t146961*t146959*t146999*4.0;
                double t147009 = t147024+t147025+t147026+t147027;
                double t147010 = gamma_aa[index]*gx*t146908*4.0;
                double t147011 = gamma_aa[index]*gx*t146962*t146959*t146998*4.0;
                double t147012 = t146907*t146959*t146998*6.0;
                double t147013 = t146961*t146972*t146999;
                double t147014 = t147010+t147011+t147012+t147013+1.0;
                double t147017 = gx*t146908*2.0;
                double t147018 = gamma_aa[index]*t146907*t146998*2.0;
                double t147015 = t147017+t147018;
                double t147016 = 1.0/(t147008*t147008);
                double t147019 = 1.0/(t147004*t147004);
                double t147020 = gx*t146908*3.0;
                double t147021 = gamma_aa[index]*t146907*t146998*6.0;
                double t147022 = gx*t146962*t146959*t146998*3.0;
                double t147023 = t147020+t147021+t147022;
                double t147028 = 1.0/(t147014*t147014);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t146957+t146855*t146858*(t146956-c0p*t146850*t146852* \
                   2.0))+rho_b[index]*(t146876-t146855*t146858*(t146876-c0f*log((t146859*(1.0/2.0))/(b1f*t146862+b3f* \
                   t146863+b2f*c*t146860+b4f*t146864*t146839)+1.0)*(a1f*c*t146860+1.0)*2.0))-t146877*(t146894-t146900* \
                   t146905*t146858*t146899*(t146894-c0f*log((t146859*(1.0/2.0))/(b1f*t146880+b3f*t146881+b2f*c*t146878+ \
                   b4f*t146882*t146839)+1.0)*(a1f*c*t146878+1.0)*2.0)+(Aa*t146905*t146858*log((1.0/2.0)/(Aa*(b1a*t146880+ \
                   b3a*t146881+b2a*c*t146878+b4a*t146882*t146839))+1.0)*(t146900*t146899-1.0)*(a1a*c*t146878+1.0)*2.0) \
                   /d2fz0))*(ccab1*1.0/(t146914*t146914)*t146906*t146907*(1.0/2.0)-(ccab2*t146906*t146907*(1.0/2.0))/ \
                   t146918-ccab4*(t146920*t146920)*t146921*1.0/(t146932*t146932*t146932)*t146919*2.0-ccab2*t146906*t146915* \
                   1.0/(t146918*t146918*t146918)*(t146927*t146927)*2.0+ccab2*t146915*t146907*t146935*t146919*(1.0/2.0) \
                   +ccab4*t146921*t146940*t146919*(t146906*t146907*3.0+t146915*t146907*t146919*3.0+gcab*t146912*t146906* \
                   t146907*6.0)-(ccab4*t146915*t146907*t146919*3.0)/t146932+ccab2*t146912*t146906*t146908*t146935*t146927* \
                   2.0-ccab1*gcab*t146912*1.0/(t146914*t146914*t146914)*t146906*t146907*(1.0/2.0)-(ccab3*gcab*t146912* \
                   t146906*t146907*(3.0/2.0))/t146926-ccab3*gcab*t146912*(t146922*t146922)*t146906*t146915*1.0/(t146926* \
                   t146926*t146926)*2.0+ccab3*gcab*t146922*t146906*t146915*t146908*t146944*3.0+ccab4*t146920*t146912* \
                   t146940*t146915*t146908*t146919*4.0+ccab3*gcab*t146912*t146906*t146915*t146944*(t146906*t146907*(3.0/ \
                   2.0)+gcab*t146912*t146906*t146907*(3.0/2.0)))+rho_a[index]*(t146957+t146855*t146858*(t146956-t146957) \
                   )*(ccaa1*t146907*1.0/(t146964*t146964)*t146958*2.0-(ccaa2*t146907*t146958*2.0)/t146967+ccaa2*t146960* \
                   t146961*t146983*t146959*2.0-(ccaa4*t146960*t146961*t146959*1.2E1)/t146978+ccaa4*t146960*t146961*t146972* \
                   t146992*(t146907*t146958*1.2E1+t146960*t146961*t146959*1.2E1+gamma_aa[index]*gcaa*t146962*t146958* \
                   2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t146962*t146958*6.0)/t146971-ccaa1*gamma_aa[index]*gcaa*t146962* \
                   1.0/(t146964*t146964*t146964)*t146958*2.0-ccaa4*t146960*t146961*t146972*(t146973*t146973)*1.0/(t146978* \
                   t146978*t146978)*2.0-ccaa2*t146907*t146958*1.0/(t146967*t146967*t146967)*t146959*(t146979*t146979) \
                   *2.0+ccaa2*gamma_aa[index]*t146907*t146983*t146958*t146979*4.0+ccaa4*gamma_aa[index]*t146960*t146961* \
                   t146973*t146992*t146959*8.0+ccaa3*gcaa*t146962*t146980*t146958*t146959*t146987*6.0+ccaa3*gamma_aa[index]* \
                   gcaa*t146962*t146980*t146958*t146959*(t146907*t146958*6.0+gamma_aa[index]*gcaa*t146962*t146958*6.0) \
                   -ccaa3*gamma_aa[index]*gcaa*t146962*1.0/(t146971*t146971*t146971)*t146958*t146959*(t146987*t146987) \
                   *2.0)+c0*pow(rho_a[index],4.0/3.0)*(omega*t146994*(erf(pow(t146993,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t146994*(-t146997+(omega*omega)*1.0/pow(t146993,2.0/3.0)*(t146997-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*1.0/(t147001*t147001)*t146907*t146998*2.0-(cx2*t146907*t146998* \
                   2.0)/t147004+cx2*t147019*t146961*t146959*t146999*2.0-(cx4*t146961*t146959*t146999*1.2E1)/t147014+cx4* \
                   t147028*t146961*t146972*t146999*(t146907*t146998*1.2E1+t146961*t146959*t146999*1.2E1+gamma_aa[index]* \
                   gx*t146962*t146998*2.4E1)-cx1*gamma_aa[index]*gx*1.0/(t147001*t147001*t147001)*t146962*t146998*2.0- \
                   (cx3*gamma_aa[index]*gx*t146962*t146998*6.0)/t147008-cx2*1.0/(t147004*t147004*t147004)*(t147015*t147015) \
                   *t146907*t146959*t146998*2.0-cx4*1.0/(t147014*t147014*t147014)*(t147009*t147009)*t146961*t146972*t146999* \
                   2.0+cx2*gamma_aa[index]*t147015*t147019*t146907*t146998*4.0+cx4*gamma_aa[index]*t147009*t147028*t146961* \
                   t146959*t146999*8.0+cx3*gx*t147023*t147016*t146962*t146959*t146998*6.0+cx3*gamma_aa[index]*gx*t147016* \
                   t146962*t146959*t146998*(t146907*t146998*6.0+gamma_aa[index]*gx*t146962*t146998*6.0)-cx3*gamma_aa[index]* \
                   gx*(t147023*t147023)*1.0/(t147008*t147008*t147008)*t146962*t146959*t146998*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t148763 = 1.0/pow(rho_a[index],1.0/3.0);
                double t148764 = c*t148763;
                double t148765 = sqrt(t148764);
                double t148766 = pow(t148764,3.0/2.0);
                double t148767 = c*c;
                double t148768 = 1.0/pow(rho_a[index],2.0/3.0);
                double t148769 = 1.0/c0p;
                double t148770 = b1p*t148765;
                double t148771 = b3p*t148766;
                double t148772 = b4p*t148767*t148768;
                double t148773 = b2p*c*t148763;
                double t148774 = t148770+t148771+t148772+t148773;
                double t148775 = 1.0/t148774;
                double t148776 = t148775*t148769*(1.0/2.0);
                double t148777 = t148776+1.0;
                double t148778 = log(t148777);
                double t148779 = a1p*c*t148763;
                double t148780 = t148779+1.0;
                double t148781 = gcaa*gcaa;
                double t148782 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t148783 = 1.0/pow(rho_a[index],8.0/3.0);
                double t148784 = gamma_aa[index]*gamma_aa[index];
                double t148785 = t148781*t148781;
                double t148786 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t148787 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t148788 = gamma_aa[index]*gcaa*t148783;
                double t148789 = t148788+1.0;
                double t148790 = gamma_aa[index]*gcaa*t148783*2.0;
                double t148791 = t148781*t148782*t148784;
                double t148792 = t148790+t148791+1.0;
                double t148793 = gamma_aa[index]*gcaa*t148783*3.0;
                double t148794 = gamma_aa[index]*gcaa*t148781*t148784*t148787;
                double t148795 = t148781*t148782*t148784*3.0;
                double t148796 = t148793+t148794+t148795+1.0;
                double t148797 = t148784*t148784;
                double t148813 = gcaa*t148783*4.0;
                double t148814 = gamma_aa[index]*t148781*t148782*1.2E1;
                double t148815 = gcaa*t148781*t148784*t148787*1.2E1;
                double t148816 = gamma_aa[index]*t148784*t148785*t148786*4.0;
                double t148798 = t148813+t148814+t148815+t148816;
                double t148799 = gamma_aa[index]*gcaa*t148783*4.0;
                double t148800 = gamma_aa[index]*gcaa*t148781*t148784*t148787*4.0;
                double t148801 = t148781*t148782*t148784*6.0;
                double t148802 = t148785*t148786*t148797;
                double t148803 = t148800+t148801+t148802+t148799+1.0;
                double t148806 = gcaa*t148783*2.0;
                double t148807 = gamma_aa[index]*t148781*t148782*2.0;
                double t148804 = t148806+t148807;
                double t148805 = 1.0/(t148796*t148796);
                double t148808 = 1.0/(t148792*t148792);
                double t148809 = gcaa*t148783*3.0;
                double t148810 = gamma_aa[index]*t148781*t148782*6.0;
                double t148811 = gcaa*t148781*t148784*t148787*3.0;
                double t148812 = t148810+t148811+t148809;
                double t148817 = 1.0/(t148803*t148803);
                double t148818 = rho_a[index]*(8.334140006820045E15/1.40737488355328E14);
                double t148819 = 1.0/pow(t148818,1.0/3.0);
                double t148820 = 1.0/(omega*omega);
                double t148821 = pow(t148818,2.0/3.0);
                double t148822 = exp(-t148820*t148821);
                double t148823 = gx*gx;
                double t148824 = t148823*t148823;
                double t148825 = gamma_aa[index]*gx*t148783;
                double t148826 = t148825+1.0;
                double t148827 = gamma_aa[index]*gx*t148783*2.0;
                double t148828 = t148823*t148782*t148784;
                double t148829 = t148827+t148828+1.0;
                double t148830 = gamma_aa[index]*gx*t148783*3.0;
                double t148831 = gamma_aa[index]*gx*t148823*t148784*t148787;
                double t148832 = t148823*t148782*t148784*3.0;
                double t148833 = t148830+t148831+t148832+1.0;
                double t148849 = gx*t148783*4.0;
                double t148850 = gamma_aa[index]*t148823*t148782*1.2E1;
                double t148851 = gx*t148823*t148784*t148787*1.2E1;
                double t148852 = gamma_aa[index]*t148824*t148784*t148786*4.0;
                double t148834 = t148850+t148851+t148852+t148849;
                double t148835 = gamma_aa[index]*gx*t148783*4.0;
                double t148836 = gamma_aa[index]*gx*t148823*t148784*t148787*4.0;
                double t148837 = t148823*t148782*t148784*6.0;
                double t148838 = t148824*t148786*t148797;
                double t148839 = t148835+t148836+t148837+t148838+1.0;
                double t148842 = gx*t148783*2.0;
                double t148843 = gamma_aa[index]*t148823*t148782*2.0;
                double t148840 = t148842+t148843;
                double t148841 = 1.0/(t148833*t148833);
                double t148844 = 1.0/(t148829*t148829);
                double t148845 = gx*t148783*3.0;
                double t148846 = gamma_aa[index]*t148823*t148782*6.0;
                double t148847 = gx*t148823*t148784*t148787*3.0;
                double t148848 = t148845+t148846+t148847;
                double t148853 = 1.0/(t148839*t148839);
                v_gamma_aa_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t148765+b3f*t148766+b2f*c*t148763+b4f*t148767*t148768))+1.0)*(a1f*c*t148763+1.0)*2.0-c0p*t148780* \
                   t148778*2.0))/(two_13*2.0-2.0)+c0p*t148780*t148778*2.0)*((ccaa2*t148781*t148782*2.0)/t148792-ccaa1* \
                   t148781*t148782*1.0/(t148789*t148789)*2.0-ccaa2*t148808*t148784*t148785*t148786*2.0+(ccaa4*t148784* \
                   t148785*t148786*1.2E1)/t148803-ccaa4*t148817*t148785*t148786*t148797*(t148781*t148782*1.2E1+t148784* \
                   t148785*t148786*1.2E1+gamma_aa[index]*gcaa*t148781*t148787*2.4E1)+(ccaa3*gamma_aa[index]*gcaa*t148781* \
                   t148787*6.0)/t148796+ccaa1*gamma_aa[index]*gcaa*t148781*t148787*1.0/(t148789*t148789*t148789)*2.0+ \
                   ccaa2*(t148804*t148804)*t148781*t148782*1.0/(t148792*t148792*t148792)*t148784*2.0+ccaa4*1.0/(t148803* \
                   t148803*t148803)*t148785*t148786*t148797*(t148798*t148798)*2.0-ccaa2*gamma_aa[index]*t148804*t148781* \
                   t148808*t148782*4.0-ccaa4*gamma_aa[index]*t148817*t148784*t148785*t148786*t148798*8.0-ccaa3*gcaa*t148812* \
                   t148805*t148781*t148784*t148787*6.0-ccaa3*gamma_aa[index]*gcaa*t148805*t148781*t148784*t148787*(t148781* \
                   t148782*6.0+gamma_aa[index]*gcaa*t148781*t148787*6.0)+ccaa3*gamma_aa[index]*gcaa*(t148812*t148812) \
                   *t148781*t148784*t148787*1.0/(t148796*t148796*t148796)*2.0)+c0*pow(rho_a[index],4.0/3.0)*(omega*t148819* \
                   (erf(pow(t148818,1.0/3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t148819*(-t148822+ \
                   (omega*omega)*1.0/pow(t148818,2.0/3.0)*(t148822-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*t148823* \
                   1.0/(t148826*t148826)*t148782*2.0-(cx2*t148823*t148782*2.0)/t148829+cx2*t148824*t148844*t148784*t148786* \
                   2.0-(cx4*t148824*t148784*t148786*1.2E1)/t148839+cx4*t148824*t148853*t148786*t148797*(t148823*t148782* \
                   1.2E1+t148824*t148784*t148786*1.2E1+gamma_aa[index]*gx*t148823*t148787*2.4E1)-cx1*gamma_aa[index]* \
                   gx*t148823*1.0/(t148826*t148826*t148826)*t148787*2.0-(cx3*gamma_aa[index]*gx*t148823*t148787*6.0)/ \
                   t148833-cx2*(t148840*t148840)*t148823*t148782*t148784*1.0/(t148829*t148829*t148829)*2.0-cx4*t148824* \
                   (t148834*t148834)*1.0/(t148839*t148839*t148839)*t148786*t148797*2.0+cx2*gamma_aa[index]*t148840*t148823* \
                   t148844*t148782*4.0+cx4*gamma_aa[index]*t148824*t148834*t148853*t148784*t148786*8.0+cx3*gx*t148823* \
                   t148841*t148784*t148848*t148787*6.0+cx3*gamma_aa[index]*gx*t148823*t148841*t148784*t148787*(t148823* \
                   t148782*6.0+gamma_aa[index]*gx*t148823*t148787*6.0)-cx3*gamma_aa[index]*gx*t148823*1.0/(t148833*t148833* \
                   t148833)*t148784*(t148848*t148848)*t148787*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t147031 = 1.0/pow(rho_a[index],1.0/3.0);
                double t147032 = c*t147031;
                double t147033 = sqrt(t147032);
                double t147034 = pow(t147032,3.0/2.0);
                double t147035 = c*c;
                double t147036 = 1.0/pow(rho_a[index],2.0/3.0);
                double t147037 = 1.0/c0p;
                double t147038 = b1p*t147033;
                double t147039 = b3p*t147034;
                double t147040 = b4p*t147035*t147036;
                double t147041 = b2p*c*t147031;
                double t147042 = t147040+t147041+t147038+t147039;
                double t147043 = 1.0/t147042;
                double t147044 = t147043*t147037*(1.0/2.0);
                double t147045 = t147044+1.0;
                double t147046 = log(t147045);
                double t147047 = a1p*c*t147031;
                double t147048 = t147047+1.0;
                double t147049 = pow(2.0,1.0/3.0);
                double t147050 = t147049*2.0;
                double t147051 = t147050-2.0;
                double t147052 = two_13*2.0;
                double t147053 = t147052-2.0;
                double t147054 = 1.0/t147053;
                double t147055 = 1.0/c0f;
                double t147056 = 1.0/pow(rho_b[index],1.0/3.0);
                double t147057 = c*t147056;
                double t147058 = sqrt(t147057);
                double t147059 = pow(t147057,3.0/2.0);
                double t147060 = 1.0/pow(rho_b[index],2.0/3.0);
                double t147061 = b1p*t147058;
                double t147062 = b3p*t147059;
                double t147063 = b4p*t147060*t147035;
                double t147064 = b2p*c*t147056;
                double t147065 = t147061+t147062+t147063+t147064;
                double t147066 = 1.0/t147065;
                double t147067 = t147037*t147066*(1.0/2.0);
                double t147068 = t147067+1.0;
                double t147069 = log(t147068);
                double t147070 = a1p*c*t147056;
                double t147071 = t147070+1.0;
                double t147072 = c0p*t147071*t147069*2.0;
                double t147073 = rho_a[index]+rho_b[index];
                double t147074 = 1.0/pow(t147073,1.0/3.0);
                double t147075 = c*t147074;
                double t147076 = sqrt(t147075);
                double t147077 = pow(t147075,3.0/2.0);
                double t147078 = 1.0/pow(t147073,2.0/3.0);
                double t147079 = b1p*t147076;
                double t147080 = b3p*t147077;
                double t147081 = b4p*t147035*t147078;
                double t147082 = b2p*c*t147074;
                double t147083 = t147080+t147081+t147082+t147079;
                double t147084 = 1.0/t147083;
                double t147085 = t147037*t147084*(1.0/2.0);
                double t147086 = t147085+1.0;
                double t147087 = log(t147086);
                double t147088 = a1p*c*t147074;
                double t147089 = t147088+1.0;
                double t147090 = c0p*t147087*t147089*2.0;
                double t147091 = rho_a[index]-rho_b[index];
                double t147092 = t147091*t147091;
                double t147093 = 1.0/t147073;
                double t147094 = t147091*t147093;
                double t147095 = 1.0/(t147073*t147073*t147073*t147073);
                double t147096 = t147092*t147092;
                double t147097 = t147094+1.0;
                double t147098 = pow(t147097,4.0/3.0);
                double t147099 = -t147094+1.0;
                double t147100 = pow(t147099,4.0/3.0);
                double t147101 = t147100+t147098-2.0;
                double t147102 = gcab*gcab;
                double t147105 = 1.0/pow(rho_a[index],8.0/3.0);
                double t147106 = 1.0/pow(rho_b[index],8.0/3.0);
                double t147107 = gamma_aa[index]*t147105*(1.0/2.0);
                double t147108 = gamma_bb[index]*t147106*(1.0/2.0);
                double t147103 = t147107+t147108;
                double t147104 = t147103*t147103;
                double t147109 = t147102*t147102;
                double t147110 = t147104*t147104;
                double t147111 = t147102*t147104*3.0;
                double t147112 = gcab*t147102*t147103*t147104;
                double t147113 = gcab*t147103*3.0;
                double t147114 = t147111+t147112+t147113+1.0;
                double t147115 = t147102*t147104;
                double t147116 = gcab*t147103*2.0;
                double t147117 = t147115+t147116+1.0;
                double t147118 = t147102*t147104*6.0;
                double t147119 = gcab*t147102*t147103*t147104*4.0;
                double t147120 = t147110*t147109;
                double t147121 = gcab*t147103*4.0;
                double t147122 = t147120+t147121+t147118+t147119+1.0;
                double t147123 = 1.0/(t147117*t147117);
                double t147124 = gcab*t147105;
                double t147125 = t147102*t147103*t147105;
                double t147126 = t147124+t147125;
                double t147127 = gcab*t147106;
                double t147128 = t147102*t147103*t147106;
                double t147129 = t147127+t147128;
                double t147130 = gcab*t147103;
                double t147131 = t147130+1.0;
                double t147132 = gcab*t147105*2.0;
                double t147133 = t147102*t147103*t147105*6.0;
                double t147134 = gcab*t147102*t147104*t147105*6.0;
                double t147135 = t147103*t147104*t147105*t147109*2.0;
                double t147136 = t147132+t147133+t147134+t147135;
                double t147137 = 1.0/(t147122*t147122);
                double t147138 = gcab*t147106*2.0;
                double t147139 = t147102*t147103*t147106*6.0;
                double t147140 = gcab*t147102*t147104*t147106*6.0;
                double t147141 = t147103*t147104*t147106*t147109*2.0;
                double t147142 = t147140+t147141+t147138+t147139;
                double t147143 = gcab*t147105*(3.0/2.0);
                double t147144 = t147102*t147103*t147105*3.0;
                double t147145 = gcab*t147102*t147104*t147105*(3.0/2.0);
                double t147146 = t147143+t147144+t147145;
                double t147147 = 1.0/(t147114*t147114);
                double t147148 = gcab*t147106*(3.0/2.0);
                double t147149 = t147102*t147103*t147106*3.0;
                double t147150 = gcab*t147102*t147104*t147106*(3.0/2.0);
                double t147151 = t147150+t147148+t147149;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t147072-t147051*t147054*(t147072-c0f*log((t147055*(1.0/ \
                   2.0))/(b1f*t147058+b3f*t147059+b2f*c*t147056+b4f*t147060*t147035)+1.0)*(a1f*c*t147056+1.0)*2.0))+t147073* \
                   (t147090-t147101*t147054*t147095*t147096*(t147090-c0f*log((t147055*(1.0/2.0))/(b1f*t147076+b3f*t147077+ \
                   b2f*c*t147074+b4f*t147035*t147078)+1.0)*(a1f*c*t147074+1.0)*2.0)+(Aa*t147101*t147054*log((1.0/2.0) \
                   /(Aa*(b1a*t147076+b3a*t147077+b2a*c*t147074+b4a*t147035*t147078))+1.0)*(t147095*t147096-1.0)*(a1a* \
                   c*t147074+1.0)*2.0)/d2fz0)+rho_a[index]*(t147051*t147054*(c0p*t147046*t147048*2.0-c0f*log((t147055* \
                   (1.0/2.0))/(b1f*t147033+b3f*t147034+b2f*c*t147031+b4f*t147035*t147036)+1.0)*(a1f*c*t147031+1.0)*2.0) \
                   -c0p*t147046*t147048*2.0))*(ccab4*t147110*t147109*t147137*(t147102*t147105*t147106*3.0+t147104*t147105* \
                   t147106*t147109*3.0+gcab*t147102*t147103*t147105*t147106*6.0)+ccab1*t147102*1.0/(t147131*t147131)* \
                   t147105*t147106*(1.0/2.0)-(ccab2*t147102*t147105*t147106*(1.0/2.0))/t147117+ccab2*t147102*t147103* \
                   t147123*t147106*t147126+ccab2*t147102*t147103*t147105*t147123*t147129+ccab2*t147104*t147105*t147123* \
                   t147106*t147109*(1.0/2.0)-(ccab4*t147104*t147105*t147106*t147109*3.0)/t147122-ccab4*t147110*1.0/(t147122* \
                   t147122*t147122)*t147142*t147109*t147136*2.0-ccab2*t147102*t147104*1.0/(t147117*t147117*t147117)*t147126* \
                   t147129*2.0+ccab3*gcab*t147102*t147104*t147105*t147151*t147147*(3.0/2.0)+ccab3*gcab*t147102*t147104* \
                   t147106*t147146*t147147*(3.0/2.0)+ccab4*t147103*t147104*t147105*t147142*t147109*t147137*2.0+ccab4* \
                   t147103*t147104*t147106*t147109*t147136*t147137*2.0+ccab3*gcab*t147102*t147103*t147104*t147147*(t147102* \
                   t147105*t147106*(3.0/2.0)+gcab*t147102*t147103*t147105*t147106*(3.0/2.0))-ccab1*gcab*t147102*t147103* \
                   1.0/(t147131*t147131*t147131)*t147105*t147106*(1.0/2.0)-(ccab3*gcab*t147102*t147103*t147105*t147106* \
                   (3.0/2.0))/t147114-ccab3*gcab*t147102*t147103*t147104*1.0/(t147114*t147114*t147114)*t147151*t147146* \
                   2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t147155 = 1.0/pow(rho_a[index],1.0/3.0);
                double t147156 = c*t147155;
                double t147157 = sqrt(t147156);
                double t147158 = pow(t147156,3.0/2.0);
                double t147159 = c*c;
                double t147160 = 1.0/pow(rho_a[index],2.0/3.0);
                double t147161 = 1.0/c0p;
                double t147162 = b1p*t147157;
                double t147163 = b3p*t147158;
                double t147164 = b4p*t147160*t147159;
                double t147165 = b2p*c*t147155;
                double t147166 = t147162+t147163+t147164+t147165;
                double t147167 = 1.0/t147166;
                double t147168 = t147161*t147167*(1.0/2.0);
                double t147169 = t147168+1.0;
                double t147170 = log(t147169);
                double t147171 = a1p*c*t147155;
                double t147172 = t147171+1.0;
                double t147173 = pow(2.0,1.0/3.0);
                double t147174 = t147173*2.0;
                double t147175 = t147174-2.0;
                double t147176 = two_13*2.0;
                double t147177 = t147176-2.0;
                double t147178 = 1.0/t147177;
                double t147179 = 1.0/c0f;
                double t147180 = 1.0/pow(rho_b[index],1.0/3.0);
                double t147181 = c*t147180;
                double t147182 = sqrt(t147181);
                double t147183 = pow(t147181,3.0/2.0);
                double t147184 = 1.0/pow(rho_b[index],2.0/3.0);
                double t147185 = b1p*t147182;
                double t147186 = b3p*t147183;
                double t147187 = b4p*t147184*t147159;
                double t147188 = b2p*c*t147180;
                double t147189 = t147185+t147186+t147187+t147188;
                double t147190 = 1.0/t147189;
                double t147191 = t147161*t147190*(1.0/2.0);
                double t147192 = t147191+1.0;
                double t147193 = log(t147192);
                double t147194 = a1p*c*t147180;
                double t147195 = t147194+1.0;
                double t147196 = c0p*t147193*t147195*2.0;
                double t147197 = rho_a[index]+rho_b[index];
                double t147198 = 1.0/pow(t147197,1.0/3.0);
                double t147199 = c*t147198;
                double t147200 = sqrt(t147199);
                double t147201 = pow(t147199,3.0/2.0);
                double t147202 = 1.0/pow(t147197,2.0/3.0);
                double t147203 = b1p*t147200;
                double t147204 = b3p*t147201;
                double t147205 = b4p*t147202*t147159;
                double t147206 = b2p*c*t147198;
                double t147207 = t147203+t147204+t147205+t147206;
                double t147208 = 1.0/t147207;
                double t147209 = t147161*t147208*(1.0/2.0);
                double t147210 = t147209+1.0;
                double t147211 = log(t147210);
                double t147212 = a1p*c*t147198;
                double t147213 = t147212+1.0;
                double t147214 = c0p*t147211*t147213*2.0;
                double t147215 = rho_a[index]-rho_b[index];
                double t147216 = t147215*t147215;
                double t147217 = 1.0/t147197;
                double t147218 = t147215*t147217;
                double t147219 = 1.0/(t147197*t147197*t147197*t147197);
                double t147220 = t147216*t147216;
                double t147221 = t147218+1.0;
                double t147222 = pow(t147221,4.0/3.0);
                double t147223 = -t147218+1.0;
                double t147224 = pow(t147223,4.0/3.0);
                double t147225 = t147222+t147224-2.0;
                double t147226 = gcab*gcab;
                double t147227 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t147228 = 1.0/pow(rho_a[index],8.0/3.0);
                double t147229 = gamma_aa[index]*t147228*(1.0/2.0);
                double t147230 = 1.0/pow(rho_b[index],8.0/3.0);
                double t147231 = gamma_bb[index]*t147230*(1.0/2.0);
                double t147232 = t147231+t147229;
                double t147233 = gcab*t147232;
                double t147234 = t147233+1.0;
                double t147235 = t147232*t147232;
                double t147236 = t147226*t147235;
                double t147237 = gcab*t147232*2.0;
                double t147238 = t147236+t147237+1.0;
                double t147239 = t147226*t147226;
                double t147256 = gcab*t147230*2.0;
                double t147257 = t147230*t147232*t147226*6.0;
                double t147258 = gcab*t147230*t147226*t147235*6.0;
                double t147259 = t147230*t147232*t147235*t147239*2.0;
                double t147240 = t147256+t147257+t147258+t147259;
                double t147241 = t147235*t147235;
                double t147261 = gcab*t147230*(3.0/2.0);
                double t147262 = t147230*t147232*t147226*3.0;
                double t147263 = gcab*t147230*t147226*t147235*(3.0/2.0);
                double t147242 = t147261+t147262+t147263;
                double t147243 = t147226*t147235*3.0;
                double t147244 = gcab*t147232*t147226*t147235;
                double t147245 = gcab*t147232*3.0;
                double t147246 = t147243+t147244+t147245+1.0;
                double t147253 = gcab*t147230;
                double t147254 = t147230*t147232*t147226;
                double t147247 = t147253+t147254;
                double t147248 = t147226*t147235*6.0;
                double t147249 = gcab*t147232*t147226*t147235*4.0;
                double t147250 = t147241*t147239;
                double t147251 = gcab*t147232*4.0;
                double t147252 = t147250+t147251+t147248+t147249+1.0;
                double t147255 = 1.0/(t147238*t147238);
                double t147260 = 1.0/(t147252*t147252);
                double t147264 = 1.0/(t147246*t147246);
                double t147265 = b1f*t147182;
                double t147266 = b3f*t147183;
                double t147267 = b4f*t147184*t147159;
                double t147268 = b2f*c*t147180;
                double t147269 = t147265+t147266+t147267+t147268;
                double t147270 = 1.0/t147269;
                double t147271 = t147270*t147179*(1.0/2.0);
                double t147272 = t147271+1.0;
                double t147273 = log(t147272);
                double t147274 = a1f*c*t147180;
                double t147275 = t147274+1.0;
                double t147276 = t147196-c0f*t147273*t147275*2.0;
                double t147277 = t147196-t147175*t147276*t147178;
                double t147278 = gcaa*gcaa;
                double t147279 = gamma_bb[index]*gamma_bb[index];
                double t147280 = t147278*t147278;
                double t147281 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t147282 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t147283 = gamma_bb[index]*gcaa*t147230;
                double t147284 = t147283+1.0;
                double t147285 = gamma_bb[index]*gcaa*t147230*2.0;
                double t147286 = t147227*t147278*t147279;
                double t147287 = t147285+t147286+1.0;
                double t147288 = gamma_bb[index]*gcaa*t147230*3.0;
                double t147289 = gamma_bb[index]*gcaa*t147282*t147278*t147279;
                double t147290 = t147227*t147278*t147279*3.0;
                double t147291 = t147290+t147288+t147289+1.0;
                double t147292 = t147279*t147279;
                double t147308 = gcaa*t147230*4.0;
                double t147309 = gamma_bb[index]*t147227*t147278*1.2E1;
                double t147310 = gcaa*t147282*t147278*t147279*1.2E1;
                double t147311 = gamma_bb[index]*t147280*t147281*t147279*4.0;
                double t147293 = t147310+t147311+t147308+t147309;
                double t147294 = gamma_bb[index]*gcaa*t147230*4.0;
                double t147295 = gamma_bb[index]*gcaa*t147282*t147278*t147279*4.0;
                double t147296 = t147227*t147278*t147279*6.0;
                double t147297 = t147280*t147281*t147292;
                double t147298 = t147294+t147295+t147296+t147297+1.0;
                double t147301 = gcaa*t147230*2.0;
                double t147302 = gamma_bb[index]*t147227*t147278*2.0;
                double t147299 = t147301+t147302;
                double t147300 = 1.0/(t147291*t147291);
                double t147303 = 1.0/(t147287*t147287);
                double t147304 = gcaa*t147230*3.0;
                double t147305 = gamma_bb[index]*t147227*t147278*6.0;
                double t147306 = gcaa*t147282*t147278*t147279*3.0;
                double t147307 = t147304+t147305+t147306;
                double t147312 = 1.0/(t147298*t147298);
                double t147313 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t147314 = 1.0/pow(t147313,1.0/3.0);
                double t147315 = 1.0/(omega*omega);
                double t147316 = pow(t147313,2.0/3.0);
                double t147317 = exp(-t147315*t147316);
                double t147318 = gx*gx;
                double t147319 = t147318*t147318;
                double t147320 = gamma_bb[index]*gx*t147230;
                double t147321 = t147320+1.0;
                double t147322 = gamma_bb[index]*gx*t147230*2.0;
                double t147323 = t147227*t147318*t147279;
                double t147324 = t147322+t147323+1.0;
                double t147325 = gamma_bb[index]*gx*t147230*3.0;
                double t147326 = gamma_bb[index]*gx*t147282*t147318*t147279;
                double t147327 = t147227*t147318*t147279*3.0;
                double t147328 = t147325+t147326+t147327+1.0;
                double t147344 = gx*t147230*4.0;
                double t147345 = gamma_bb[index]*t147227*t147318*1.2E1;
                double t147346 = gx*t147282*t147318*t147279*1.2E1;
                double t147347 = gamma_bb[index]*t147281*t147319*t147279*4.0;
                double t147329 = t147344+t147345+t147346+t147347;
                double t147330 = gamma_bb[index]*gx*t147230*4.0;
                double t147331 = gamma_bb[index]*gx*t147282*t147318*t147279*4.0;
                double t147332 = t147227*t147318*t147279*6.0;
                double t147333 = t147281*t147292*t147319;
                double t147334 = t147330+t147331+t147332+t147333+1.0;
                double t147337 = gx*t147230*2.0;
                double t147338 = gamma_bb[index]*t147227*t147318*2.0;
                double t147335 = t147337+t147338;
                double t147336 = 1.0/(t147328*t147328);
                double t147339 = 1.0/(t147324*t147324);
                double t147340 = gx*t147230*3.0;
                double t147341 = gamma_bb[index]*t147227*t147318*6.0;
                double t147342 = gx*t147282*t147318*t147279*3.0;
                double t147343 = t147340+t147341+t147342;
                double t147348 = 1.0/(t147334*t147334);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t147277+t147197*(t147214-t147220*t147225*t147219*t147178* \
                   (t147214-c0f*log((t147179*(1.0/2.0))/(b1f*t147200+b3f*t147201+b2f*c*t147198+b4f*t147202*t147159)+1.0) \
                   *(a1f*c*t147198+1.0)*2.0)+(Aa*t147225*t147178*log((1.0/2.0)/(Aa*(b1a*t147200+b3a*t147201+b2a*c*t147198+ \
                   b4a*t147202*t147159))+1.0)*(t147220*t147219-1.0)*(a1a*c*t147198+1.0)*2.0)/d2fz0)+rho_a[index]*(t147175* \
                   t147178*(c0p*t147170*t147172*2.0-c0f*log((t147179*(1.0/2.0))/(b1f*t147157+b3f*t147158+b2f*c*t147155+ \
                   b4f*t147160*t147159)+1.0)*(a1f*c*t147155+1.0)*2.0)-c0p*t147170*t147172*2.0))*(ccab1*1.0/(t147234*t147234) \
                   *t147226*t147227*(1.0/2.0)-(ccab2*t147226*t147227*(1.0/2.0))/t147238-ccab4*(t147240*t147240)*t147241* \
                   1.0/(t147252*t147252*t147252)*t147239*2.0-ccab2*t147226*t147235*1.0/(t147238*t147238*t147238)*(t147247* \
                   t147247)*2.0+ccab2*t147235*t147227*t147255*t147239*(1.0/2.0)+ccab4*t147241*t147260*t147239*(t147226* \
                   t147227*3.0+t147235*t147227*t147239*3.0+gcab*t147232*t147226*t147227*6.0)-(ccab4*t147235*t147227*t147239* \
                   3.0)/t147252+ccab2*t147230*t147232*t147226*t147255*t147247*2.0-ccab1*gcab*t147232*1.0/(t147234*t147234* \
                   t147234)*t147226*t147227*(1.0/2.0)-(ccab3*gcab*t147232*t147226*t147227*(3.0/2.0))/t147246-ccab3*gcab* \
                   t147232*(t147242*t147242)*t147226*t147235*1.0/(t147246*t147246*t147246)*2.0+ccab3*gcab*t147230*t147242* \
                   t147226*t147235*t147264*3.0+ccab4*t147230*t147240*t147232*t147260*t147235*t147239*4.0+ccab3*gcab*t147232* \
                   t147226*t147235*t147264*(t147226*t147227*(3.0/2.0)+gcab*t147232*t147226*t147227*(3.0/2.0)))+rho_b[index]* \
                   t147277*(ccaa1*t147227*1.0/(t147284*t147284)*t147278*2.0-(ccaa2*t147227*t147278*2.0)/t147287+ccaa2* \
                   t147303*t147280*t147281*t147279*2.0-(ccaa4*t147280*t147281*t147279*1.2E1)/t147298+ccaa4*t147312*t147280* \
                   t147281*t147292*(t147227*t147278*1.2E1+t147280*t147281*t147279*1.2E1+gamma_bb[index]*gcaa*t147282* \
                   t147278*2.4E1)-(ccaa3*gamma_bb[index]*gcaa*t147282*t147278*6.0)/t147291-ccaa1*gamma_bb[index]*gcaa* \
                   t147282*1.0/(t147284*t147284*t147284)*t147278*2.0-ccaa4*t147280*t147281*t147292*(t147293*t147293)* \
                   1.0/(t147298*t147298*t147298)*2.0-ccaa2*t147227*t147278*1.0/(t147287*t147287*t147287)*t147279*(t147299* \
                   t147299)*2.0+ccaa2*gamma_bb[index]*t147303*t147227*t147278*t147299*4.0+ccaa4*gamma_bb[index]*t147312* \
                   t147280*t147281*t147293*t147279*8.0+ccaa3*gcaa*t147300*t147307*t147282*t147278*t147279*6.0+ccaa3*gamma_bb[index]* \
                   gcaa*t147300*t147282*t147278*t147279*(t147227*t147278*6.0+gamma_bb[index]*gcaa*t147282*t147278*6.0) \
                   -ccaa3*gamma_bb[index]*gcaa*(t147307*t147307)*t147282*1.0/(t147291*t147291*t147291)*t147278*t147279* \
                   2.0)+c0*pow(rho_b[index],4.0/3.0)*(omega*t147314*(erf(pow(t147313,1.0/3.0)/omega)*(3.991211251234741E15/ \
                   2.251799813685248E15)-omega*t147314*(-t147317+(omega*omega)*1.0/pow(t147313,2.0/3.0)*(t147317-1.0) \
                   *(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*1.0/(t147321*t147321)*t147227*t147318*2.0-(cx2*t147227*t147318* \
                   2.0)/t147324+cx2*t147281*t147319*t147339*t147279*2.0-(cx4*t147281*t147319*t147279*1.2E1)/t147334+cx4* \
                   t147281*t147292*t147319*t147348*(t147227*t147318*1.2E1+t147281*t147319*t147279*1.2E1+gamma_bb[index]* \
                   gx*t147282*t147318*2.4E1)-cx1*gamma_bb[index]*gx*1.0/(t147321*t147321*t147321)*t147282*t147318*2.0- \
                   (cx3*gamma_bb[index]*gx*t147282*t147318*6.0)/t147328-cx2*1.0/(t147324*t147324*t147324)*t147227*(t147335* \
                   t147335)*t147318*t147279*2.0-cx4*1.0/(t147334*t147334*t147334)*t147281*t147292*t147319*(t147329*t147329) \
                   *2.0+cx2*gamma_bb[index]*t147227*t147335*t147318*t147339*4.0+cx4*gamma_bb[index]*t147281*t147319*t147329* \
                   t147348*t147279*8.0+cx3*gx*t147343*t147282*t147318*t147336*t147279*6.0+cx3*gamma_bb[index]*gx*t147282* \
                   t147318*t147336*t147279*(t147227*t147318*6.0+gamma_bb[index]*gx*t147282*t147318*6.0)-cx3*gamma_bb[index]* \
                   gx*(t147343*t147343)*t147282*t147318*1.0/(t147328*t147328*t147328)*t147279*2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t148013 = 1.0/pow(rho_b[index],1.0/3.0);
                double t148014 = c*t148013;
                double t148015 = sqrt(t148014);
                double t148016 = pow(t148014,3.0/2.0);
                double t148017 = c*c;
                double t148018 = 1.0/pow(rho_b[index],2.0/3.0);
                double t148019 = 1.0/c0p;
                double t148020 = b1p*t148015;
                double t148021 = b3p*t148016;
                double t148022 = b4p*t148017*t148018;
                double t148023 = b2p*c*t148013;
                double t148024 = t148020+t148021+t148022+t148023;
                double t148025 = 1.0/t148024;
                double t148026 = t148025*t148019*(1.0/2.0);
                double t148027 = t148026+1.0;
                double t148028 = log(t148027);
                double t148029 = a1p*c*t148013;
                double t148030 = t148029+1.0;
                double t148031 = gcaa*gcaa;
                double t148032 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t148033 = 1.0/pow(rho_b[index],8.0/3.0);
                double t148034 = gamma_bb[index]*gamma_bb[index];
                double t148035 = t148031*t148031;
                double t148036 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t148037 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t148038 = gamma_bb[index]*gcaa*t148033;
                double t148039 = t148038+1.0;
                double t148040 = gamma_bb[index]*gcaa*t148033*2.0;
                double t148041 = t148031*t148032*t148034;
                double t148042 = t148040+t148041+1.0;
                double t148043 = gamma_bb[index]*gcaa*t148033*3.0;
                double t148044 = gamma_bb[index]*gcaa*t148031*t148034*t148037;
                double t148045 = t148031*t148032*t148034*3.0;
                double t148046 = t148043+t148044+t148045+1.0;
                double t148047 = t148034*t148034;
                double t148063 = gcaa*t148033*4.0;
                double t148064 = gamma_bb[index]*t148031*t148032*1.2E1;
                double t148065 = gcaa*t148031*t148034*t148037*1.2E1;
                double t148066 = gamma_bb[index]*t148034*t148035*t148036*4.0;
                double t148048 = t148063+t148064+t148065+t148066;
                double t148049 = gamma_bb[index]*gcaa*t148033*4.0;
                double t148050 = gamma_bb[index]*gcaa*t148031*t148034*t148037*4.0;
                double t148051 = t148031*t148032*t148034*6.0;
                double t148052 = t148035*t148036*t148047;
                double t148053 = t148050+t148051+t148052+t148049+1.0;
                double t148056 = gcaa*t148033*2.0;
                double t148057 = gamma_bb[index]*t148031*t148032*2.0;
                double t148054 = t148056+t148057;
                double t148055 = 1.0/(t148046*t148046);
                double t148058 = 1.0/(t148042*t148042);
                double t148059 = gcaa*t148033*3.0;
                double t148060 = gamma_bb[index]*t148031*t148032*6.0;
                double t148061 = gcaa*t148031*t148034*t148037*3.0;
                double t148062 = t148060+t148061+t148059;
                double t148067 = 1.0/(t148053*t148053);
                double t148068 = rho_b[index]*(8.334140006820045E15/1.40737488355328E14);
                double t148069 = 1.0/pow(t148068,1.0/3.0);
                double t148070 = 1.0/(omega*omega);
                double t148071 = pow(t148068,2.0/3.0);
                double t148072 = exp(-t148070*t148071);
                double t148073 = gx*gx;
                double t148074 = t148073*t148073;
                double t148075 = gamma_bb[index]*gx*t148033;
                double t148076 = t148075+1.0;
                double t148077 = gamma_bb[index]*gx*t148033*2.0;
                double t148078 = t148032*t148034*t148073;
                double t148079 = t148077+t148078+1.0;
                double t148080 = gamma_bb[index]*gx*t148033*3.0;
                double t148081 = gamma_bb[index]*gx*t148034*t148037*t148073;
                double t148082 = t148032*t148034*t148073*3.0;
                double t148083 = t148080+t148081+t148082+1.0;
                double t148099 = gx*t148033*4.0;
                double t148100 = gamma_bb[index]*t148032*t148073*1.2E1;
                double t148101 = gx*t148034*t148037*t148073*1.2E1;
                double t148102 = gamma_bb[index]*t148034*t148036*t148074*4.0;
                double t148084 = t148100+t148101+t148102+t148099;
                double t148085 = gamma_bb[index]*gx*t148033*4.0;
                double t148086 = gamma_bb[index]*gx*t148034*t148037*t148073*4.0;
                double t148087 = t148032*t148034*t148073*6.0;
                double t148088 = t148036*t148047*t148074;
                double t148089 = t148085+t148086+t148087+t148088+1.0;
                double t148092 = gx*t148033*2.0;
                double t148093 = gamma_bb[index]*t148032*t148073*2.0;
                double t148090 = t148092+t148093;
                double t148091 = 1.0/(t148083*t148083);
                double t148094 = 1.0/(t148079*t148079);
                double t148095 = gx*t148033*3.0;
                double t148096 = gamma_bb[index]*t148032*t148073*6.0;
                double t148097 = gx*t148034*t148037*t148073*3.0;
                double t148098 = t148095+t148096+t148097;
                double t148103 = 1.0/(t148089*t148089);
                v_gamma_bb_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t148015+b3f*t148016+b2f*c*t148013+b4f*t148017*t148018))+1.0)*(a1f*c*t148013+1.0)*2.0-c0p*t148030* \
                   t148028*2.0))/(two_13*2.0-2.0)+c0p*t148030*t148028*2.0)*((ccaa2*t148031*t148032*2.0)/t148042-ccaa1* \
                   t148031*t148032*1.0/(t148039*t148039)*2.0-ccaa2*t148034*t148035*t148036*t148058*2.0+(ccaa4*t148034* \
                   t148035*t148036*1.2E1)/t148053-ccaa4*t148035*t148036*t148047*t148067*(t148031*t148032*1.2E1+t148034* \
                   t148035*t148036*1.2E1+gamma_bb[index]*gcaa*t148031*t148037*2.4E1)+(ccaa3*gamma_bb[index]*gcaa*t148031* \
                   t148037*6.0)/t148046+ccaa1*gamma_bb[index]*gcaa*t148031*t148037*1.0/(t148039*t148039*t148039)*2.0+ \
                   ccaa2*t148031*t148032*1.0/(t148042*t148042*t148042)*t148034*(t148054*t148054)*2.0+ccaa4*t148035*1.0/ \
                   (t148053*t148053*t148053)*t148036*t148047*(t148048*t148048)*2.0-ccaa2*gamma_bb[index]*t148031*t148032* \
                   t148054*t148058*4.0-ccaa4*gamma_bb[index]*t148034*t148035*t148036*t148048*t148067*8.0-ccaa3*gcaa*t148031* \
                   t148034*t148062*t148037*t148055*6.0-ccaa3*gamma_bb[index]*gcaa*t148031*t148034*t148037*t148055*(t148031* \
                   t148032*6.0+gamma_bb[index]*gcaa*t148031*t148037*6.0)+ccaa3*gamma_bb[index]*gcaa*t148031*t148034*(t148062* \
                   t148062)*t148037*1.0/(t148046*t148046*t148046)*2.0)+c0*pow(rho_b[index],4.0/3.0)*(omega*t148069*(erf(pow(t148068,1.0/ \
                   3.0)/omega)*(3.991211251234741E15/2.251799813685248E15)-omega*t148069*(-t148072+(omega*omega)*1.0/ \
                   pow(t148068,2.0/3.0)*(t148072-1.0)*(1.0/2.0)+3.0/2.0))*(4.0/3.0)-1.0)*(cx1*t148032*t148073*1.0/(t148076* \
                   t148076)*2.0-(cx2*t148032*t148073*2.0)/t148079+cx2*t148034*t148036*t148074*t148094*2.0-(cx4*t148034* \
                   t148036*t148074*1.2E1)/t148089+cx4*t148103*t148036*t148047*t148074*(t148032*t148073*1.2E1+t148034* \
                   t148036*t148074*1.2E1+gamma_bb[index]*gx*t148037*t148073*2.4E1)-cx1*gamma_bb[index]*gx*t148037*t148073* \
                   1.0/(t148076*t148076*t148076)*2.0-(cx3*gamma_bb[index]*gx*t148037*t148073*6.0)/t148083-cx2*t148032* \
                   t148034*(t148090*t148090)*t148073*1.0/(t148079*t148079*t148079)*2.0-cx4*t148036*t148047*t148074*(t148084* \
                   t148084)*1.0/(t148089*t148089*t148089)*2.0+cx2*gamma_bb[index]*t148032*t148090*t148073*t148094*4.0+ \
                   cx4*gamma_bb[index]*t148103*t148034*t148036*t148074*t148084*8.0+cx3*gx*t148034*t148037*t148073*t148091* \
                   t148098*6.0+cx3*gamma_bb[index]*gx*t148034*t148037*t148073*t148091*(t148032*t148073*6.0+gamma_bb[index]* \
                   gx*t148037*t148073*6.0)-cx3*gamma_bb[index]*gx*t148034*t148037*t148073*1.0/(t148083*t148083*t148083) \
                   *(t148098*t148098)*2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

