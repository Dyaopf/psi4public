/**********************************************************
* B_X_functional.cc: definitions for B_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "B_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

B_X_Functional::B_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "B_X";
    description_ = "Becke Exchange (S+B88)";
    citation_ = "A.D. Becke, Phys. Rev. A, 38(6):3098-3100, 1988";

    double d = 4.1999999999999997E-03;
    params_.push_back(make_pair("d",d));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
B_X_Functional::~B_X_Functional()
{
}
void B_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double d = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t133967 = sqrt(gamma_aa[index]);
            double t133968 = 1.0/pow(rho_a[index],4.0/3.0);
            functional_[index] = -pow(rho_a[index],4.0/3.0)*((d*gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0) \
               *2.0)/(d*t133967*t133968*log(t133967*t133968+sqrt((t133967*t133967)*(t133968*t133968)+1.0))*6.0+1.0) \
               +4.190715359480463E15/2.251799813685248E15);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t133970 = sqrt(gamma_aa[index]);
            double t133971 = 1.0/pow(rho_a[index],4.0/3.0);
            double t133972 = t133970*t133971;
            double t133973 = log(t133972+sqrt(t133972*t133972+1.0));
            double t133974 = d*t133970*t133971*t133973*6.0;
            double t133975 = t133974+1.0;
            double t133976 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t133977 = 1.0/pow(rho_a[index],8.0/3.0);
            double t133978 = 1.0/t133975;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d*gamma_aa[index]*t133976*t133978*(1.6E1/3.0)-d*gamma_aa[index]* \
               1.0/(t133975*t133975)*t133977*(d*1.0/pow(rho_a[index],7.0/3.0)*t133970*t133973*8.0+d*gamma_aa[index]* \
               t133976*1.0/sqrt(gamma_aa[index]*t133977+1.0)*8.0)*2.0)*(1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]* \
               t133977*t133978*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t133980 = sqrt(gamma_aa[index]);
                double t133981 = 1.0/pow(rho_a[index],4.0/3.0);
                double t133982 = 1.0/pow(rho_a[index],8.0/3.0);
                double t133983 = t133980*t133981;
                double t133984 = log(t133983+sqrt(t133983*t133983+1.0));
                double t133985 = d*t133980*t133981*t133984*6.0;
                double t133986 = t133985+1.0;
                v_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*((d*t133982*2.0)/t133986-d*gamma_aa[index]*t133982* \
                   1.0/(t133986*t133986)*(d*t133982*1.0/sqrt(gamma_aa[index]*t133982+1.0)*3.0+d*1.0/sqrt(gamma_aa[index]) \
                   *t133981*t133984*3.0)*2.0);
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t133989 = sqrt(gamma_aa[index]);
            double t133990 = 1.0/pow(rho_a[index],4.0/3.0);
            double t133991 = t133990*t133989;
            double t133992 = log(t133991+sqrt(t133991*t133991+1.0));
            double t133993 = d*t133990*t133992*t133989*6.0;
            double t133994 = t133993+1.0;
            double t133995 = 1.0/pow(rho_a[index],8.0/3.0);
            double t133998 = gamma_aa[index]*t133995;
            double t133999 = t133998+1.0;
            double t134000 = 1.0/sqrt(t133999);
            double t134001 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t134003 = d*gamma_aa[index]*t134000*t134001*8.0;
            double t134004 = 1.0/pow(rho_a[index],7.0/3.0);
            double t134005 = d*t134004*t133992*t133989*8.0;
            double t133996 = t134003+t134005;
            double t133997 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t134002 = 1.0/(t133994*t133994);
            double t134006 = 1.0/t133994;
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]*t134001*t134006*(1.6E1/3.0)- \
               d*gamma_aa[index]*t134002*t133995*t133996*2.0)*(4.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(d*gamma_aa[index]* \
               t134006*t133995*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_a[index],4.0/3.0) \
               *(d*gamma_aa[index]*t134006*t133997*(1.76E2/9.0)-d*gamma_aa[index]*t134002*t133995*(d*gamma_aa[index]* \
               t134000*t133997*4.0E1-d*(gamma_aa[index]*gamma_aa[index])*1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t133999,3.0/ \
               2.0)*(3.2E1/3.0)+d*1.0/pow(rho_a[index],1.0E1/3.0)*t133992*t133989*(5.6E1/3.0))*2.0+d*gamma_aa[index]* \
               1.0/(t133994*t133994*t133994)*t133995*(t133996*t133996)*4.0-d*gamma_aa[index]*t134001*t134002*t133996* \
               (3.2E1/3.0))*(1.0/2.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t134008 = sqrt(gamma_aa[index]);
                double t134009 = 1.0/pow(rho_a[index],4.0/3.0);
                double t134010 = 1.0/pow(rho_a[index],8.0/3.0);
                double t134011 = t134008*t134009;
                double t134012 = log(t134011+sqrt(t134011*t134011+1.0));
                double t134013 = d*t134012*t134008*t134009*6.0;
                double t134014 = t134013+1.0;
                double t134015 = 1.0/t134014;
                double t134016 = 1.0/(t134014*t134014);
                double t134017 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t134018 = gamma_aa[index]*t134010;
                double t134019 = t134018+1.0;
                double t134020 = 1.0/sqrt(t134019);
                double t134021 = d*t134010*t134020*3.0;
                double t134022 = 1.0/sqrt(gamma_aa[index]);
                double t134023 = d*t134012*t134022*t134009*3.0;
                double t134024 = t134021+t134023;
                double t134025 = 1.0/pow(rho_a[index],7.0/3.0);
                double t134026 = d*gamma_aa[index]*t134020*t134017*8.0;
                double t134027 = d*t134012*t134025*t134008*8.0;
                double t134028 = t134026+t134027;
                v_rho_a_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t134015*t134017*(-1.6E1/3.0)+d*t134010*t134016* \
                   t134028*2.0+d*gamma_aa[index]*t134010*t134016*(d*t134020*t134017*1.2E1+d*t134012*t134022*t134025*4.0- \
                   d*gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t134019,3.0/2.0)*4.0)*2.0+d*gamma_aa[index]* \
                   t134024*t134016*t134017*(1.6E1/3.0)-d*gamma_aa[index]*t134010*1.0/(t134014*t134014*t134014)*t134024* \
                   t134028*4.0)*(-1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*t134010*t134015*2.0-d*gamma_aa[index]*t134010* \
                   t134024*t134016*2.0)*(2.0/3.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t134030 = 1.0/pow(rho_a[index],8.0/3.0);
                double t134031 = 1.0/pow(rho_a[index],4.0/3.0);
                double t134032 = sqrt(gamma_aa[index]);
                double t134033 = t134031*t134032;
                double t134034 = log(t134033+sqrt(t134033*t134033+1.0));
                double t134035 = d*t134031*t134032*t134034*6.0;
                double t134036 = t134035+1.0;
                double t134037 = 1.0/(t134036*t134036);
                double t134038 = gamma_aa[index]*t134030;
                double t134039 = t134038+1.0;
                double t134040 = 1.0/sqrt(t134039);
                double t134041 = d*t134030*t134040*3.0;
                double t134042 = 1.0/sqrt(gamma_aa[index]);
                double t134043 = d*t134031*t134042*t134034*3.0;
                double t134044 = t134041+t134043;
                v_gamma_aa_gamma_aa_[index] = -pow(rho_a[index],4.0/3.0)*(d*t134030*t134044*t134037*-4.0+d*gamma_aa[index]* \
                   t134030*(t134044*t134044)*1.0/(t134036*t134036*t134036)*4.0+d*gamma_aa[index]*t134030*t134037*(d*1.0/ \
                   pow(rho_a[index],1.6E1/3.0)*1.0/pow(t134039,3.0/2.0)*(3.0/2.0)-(d*t134030*t134040*(3.0/2.0))/gamma_aa[index]+ \
                   d*1.0/pow(gamma_aa[index],3.0/2.0)*t134031*t134034*(3.0/2.0))*2.0);
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void B_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double d = params_[0].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t133535 = sqrt(gamma_aa[index]);
            double t133536 = 1.0/pow(rho_a[index],4.0/3.0);
            double t133537 = sqrt(gamma_bb[index]);
            double t133538 = 1.0/pow(rho_b[index],4.0/3.0);
            functional_[index] = pow(rho_a[index],4.0/3.0)*((d*gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0)* \
               2.0)/(d*t133535*t133536*log(t133535*t133536+sqrt((t133535*t133535)*(t133536*t133536)+1.0))*6.0+1.0) \
               +4.190715359480463E15/2.251799813685248E15)*(-1.0/2.0)-pow(rho_b[index],4.0/3.0)*((d*gamma_bb[index]* \
               1.0/pow(rho_b[index],8.0/3.0)*2.0)/(d*t133537*t133538*log(t133537*t133538+sqrt((t133537*t133537)*(t133538* \
               t133538)+1.0))*6.0+1.0)+4.190715359480463E15/2.251799813685248E15)*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t133823 = sqrt(gamma_aa[index]);
            double t133824 = 1.0/pow(rho_a[index],4.0/3.0);
            functional_[index] = pow(rho_a[index],4.0/3.0)*((d*gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0)* \
               2.0)/(d*t133823*t133824*log(t133823*t133824+sqrt((t133823*t133823)*(t133824*t133824)+1.0))*6.0+1.0) \
               +4.190715359480463E15/2.251799813685248E15)*(-1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            double t133715 = sqrt(gamma_bb[index]);
            double t133716 = 1.0/pow(rho_b[index],4.0/3.0);
            functional_[index] = pow(rho_b[index],4.0/3.0)*((d*gamma_bb[index]*1.0/pow(rho_b[index],8.0/3.0)* \
               2.0)/(d*t133715*t133716*log(t133715*t133716+sqrt((t133715*t133715)*(t133716*t133716)+1.0))*6.0+1.0) \
               +4.190715359480463E15/2.251799813685248E15)*(-1.0/2.0);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t133540 = sqrt(gamma_aa[index]);
            double t133541 = 1.0/pow(rho_a[index],4.0/3.0);
            double t133542 = t133540*t133541;
            double t133543 = log(t133542+sqrt(t133542*t133542+1.0));
            double t133544 = d*t133540*t133541*t133543*6.0;
            double t133545 = t133544+1.0;
            double t133546 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t133547 = 1.0/pow(rho_a[index],8.0/3.0);
            double t133548 = 1.0/t133545;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d*gamma_aa[index]*t133546*t133548*(1.6E1/3.0)-d*gamma_aa[index]* \
               1.0/(t133545*t133545)*t133547*(d*1.0/pow(rho_a[index],7.0/3.0)*t133540*t133543*8.0+d*gamma_aa[index]* \
               t133546*1.0/sqrt(gamma_aa[index]*t133547+1.0)*8.0)*2.0)*(1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]* \
               t133547*t133548*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t133826 = sqrt(gamma_aa[index]);
            double t133827 = 1.0/pow(rho_a[index],4.0/3.0);
            double t133828 = t133826*t133827;
            double t133829 = log(t133828+sqrt(t133828*t133828+1.0));
            double t133830 = d*t133826*t133827*t133829*6.0;
            double t133831 = t133830+1.0;
            double t133832 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t133833 = 1.0/pow(rho_a[index],8.0/3.0);
            double t133834 = 1.0/t133831;
            v_rho_a_[index] = pow(rho_a[index],4.0/3.0)*(d*gamma_aa[index]*t133832*t133834*(1.6E1/3.0)-d*gamma_aa[index]* \
               1.0/(t133831*t133831)*t133833*(d*1.0/pow(rho_a[index],7.0/3.0)*t133826*t133829*8.0+d*gamma_aa[index]* \
               t133832*1.0/sqrt(gamma_aa[index]*t133833+1.0)*8.0)*2.0)*(1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]* \
               t133833*t133834*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t133550 = sqrt(gamma_bb[index]);
            double t133551 = 1.0/pow(rho_b[index],4.0/3.0);
            double t133552 = t133550*t133551;
            double t133553 = log(t133552+sqrt(t133552*t133552+1.0));
            double t133554 = d*t133550*t133551*t133553*6.0;
            double t133555 = t133554+1.0;
            double t133556 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t133557 = 1.0/pow(rho_b[index],8.0/3.0);
            double t133558 = 1.0/t133555;
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d*gamma_bb[index]*t133556*t133558*(1.6E1/3.0)-d*gamma_bb[index]* \
               1.0/(t133555*t133555)*t133557*(d*1.0/pow(rho_b[index],7.0/3.0)*t133550*t133553*8.0+d*gamma_bb[index]* \
               t133556*1.0/sqrt(gamma_bb[index]*t133557+1.0)*8.0)*2.0)*(1.0/2.0)-pow(rho_b[index],1.0/3.0)*(d*gamma_bb[index]* \
               t133557*t133558*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t133719 = sqrt(gamma_bb[index]);
            double t133720 = 1.0/pow(rho_b[index],4.0/3.0);
            double t133721 = t133720*t133719;
            double t133722 = log(t133721+sqrt(t133721*t133721+1.0));
            double t133723 = d*t133720*t133722*t133719*6.0;
            double t133724 = t133723+1.0;
            double t133725 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t133726 = 1.0/pow(rho_b[index],8.0/3.0);
            double t133727 = 1.0/t133724;
            v_rho_b_[index] = pow(rho_b[index],4.0/3.0)*(d*gamma_bb[index]*t133725*t133727*(1.6E1/3.0)-d*gamma_bb[index]* \
               1.0/(t133724*t133724)*t133726*(d*1.0/pow(rho_b[index],7.0/3.0)*t133722*t133719*8.0+d*gamma_bb[index]* \
               t133725*1.0/sqrt(gamma_bb[index]*t133726+1.0)*8.0)*2.0)*(1.0/2.0)-pow(rho_b[index],1.0/3.0)*(d*gamma_bb[index]* \
               t133726*t133727*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/3.0);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t133560 = sqrt(gamma_aa[index]);
                double t133561 = 1.0/pow(rho_a[index],4.0/3.0);
                double t133562 = 1.0/pow(rho_a[index],8.0/3.0);
                double t133563 = t133560*t133561;
                double t133564 = log(t133563+sqrt(t133563*t133563+1.0));
                double t133565 = d*t133560*t133561*t133564*6.0;
                double t133566 = t133565+1.0;
                v_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*((d*t133562*2.0)/t133566-d*gamma_aa[index]*t133562* \
                   1.0/(t133566*t133566)*(d*t133562*1.0/sqrt(gamma_aa[index]*t133562+1.0)*3.0+d*1.0/sqrt(gamma_aa[index]) \
                   *t133561*t133564*3.0)*2.0)*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                double t133837 = sqrt(gamma_aa[index]);
                double t133838 = 1.0/pow(rho_a[index],4.0/3.0);
                double t133839 = 1.0/pow(rho_a[index],8.0/3.0);
                double t133840 = t133837*t133838;
                double t133841 = log(t133840+sqrt(t133840*t133840+1.0));
                double t133842 = d*t133841*t133837*t133838*6.0;
                double t133843 = t133842+1.0;
                v_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*((d*t133839*2.0)/t133843-d*gamma_aa[index]*1.0/(t133843* \
                   t133843)*t133839*(d*t133839*1.0/sqrt(gamma_aa[index]*t133839+1.0)*3.0+d*1.0/sqrt(gamma_aa[index])* \
                   t133841*t133838*3.0)*2.0)*(-1.0/2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t133569 = sqrt(gamma_bb[index]);
                double t133570 = 1.0/pow(rho_b[index],4.0/3.0);
                double t133571 = 1.0/pow(rho_b[index],8.0/3.0);
                double t133572 = t133570*t133569;
                double t133573 = log(t133572+sqrt(t133572*t133572+1.0));
                double t133574 = d*t133570*t133573*t133569*6.0;
                double t133575 = t133574+1.0;
                v_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*((d*t133571*2.0)/t133575-d*gamma_bb[index]*t133571* \
                   1.0/(t133575*t133575)*(d*t133571*1.0/sqrt(gamma_bb[index]*t133571+1.0)*3.0+d*1.0/sqrt(gamma_bb[index]) \
                   *t133570*t133573*3.0)*2.0)*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t133731 = sqrt(gamma_bb[index]);
                double t133732 = 1.0/pow(rho_b[index],4.0/3.0);
                double t133733 = 1.0/pow(rho_b[index],8.0/3.0);
                double t133734 = t133731*t133732;
                double t133735 = log(t133734+sqrt(t133734*t133734+1.0));
                double t133736 = d*t133731*t133732*t133735*6.0;
                double t133737 = t133736+1.0;
                v_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*((d*t133733*2.0)/t133737-d*gamma_bb[index]*t133733* \
                   1.0/(t133737*t133737)*(d*t133733*1.0/sqrt(gamma_bb[index]*t133733+1.0)*3.0+d*1.0/sqrt(gamma_bb[index]) \
                   *t133732*t133735*3.0)*2.0)*(-1.0/2.0);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t133579 = sqrt(gamma_aa[index]);
            double t133580 = 1.0/pow(rho_a[index],4.0/3.0);
            double t133581 = t133580*t133579;
            double t133582 = log(t133581+sqrt(t133581*t133581+1.0));
            double t133583 = d*t133580*t133582*t133579*6.0;
            double t133584 = t133583+1.0;
            double t133585 = 1.0/pow(rho_a[index],8.0/3.0);
            double t133588 = gamma_aa[index]*t133585;
            double t133589 = t133588+1.0;
            double t133590 = 1.0/sqrt(t133589);
            double t133591 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t133593 = d*gamma_aa[index]*t133590*t133591*8.0;
            double t133594 = 1.0/pow(rho_a[index],7.0/3.0);
            double t133595 = d*t133582*t133594*t133579*8.0;
            double t133586 = t133593+t133595;
            double t133587 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t133592 = 1.0/(t133584*t133584);
            double t133596 = 1.0/t133584;
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]*t133591*t133596*(1.6E1/3.0)- \
               d*gamma_aa[index]*t133592*t133585*t133586*2.0)*(4.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(d*gamma_aa[index]* \
               t133585*t133596*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_a[index],4.0/3.0) \
               *(d*gamma_aa[index]*t133587*t133596*(1.76E2/9.0)-d*gamma_aa[index]*t133592*t133585*(d*gamma_aa[index]* \
               t133590*t133587*4.0E1-d*(gamma_aa[index]*gamma_aa[index])*1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t133589,3.0/ \
               2.0)*(3.2E1/3.0)+d*1.0/pow(rho_a[index],1.0E1/3.0)*t133582*t133579*(5.6E1/3.0))*2.0+d*gamma_aa[index]* \
               1.0/(t133584*t133584*t133584)*t133585*(t133586*t133586)*4.0-d*gamma_aa[index]*t133591*t133592*t133586* \
               (3.2E1/3.0))*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            double t133849 = sqrt(gamma_aa[index]);
            double t133850 = 1.0/pow(rho_a[index],4.0/3.0);
            double t133851 = t133850*t133849;
            double t133852 = log(t133851+sqrt(t133851*t133851+1.0));
            double t133853 = d*t133850*t133852*t133849*6.0;
            double t133854 = t133853+1.0;
            double t133855 = 1.0/pow(rho_a[index],8.0/3.0);
            double t133858 = gamma_aa[index]*t133855;
            double t133859 = t133858+1.0;
            double t133860 = 1.0/sqrt(t133859);
            double t133861 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t133863 = d*gamma_aa[index]*t133860*t133861*8.0;
            double t133864 = 1.0/pow(rho_a[index],7.0/3.0);
            double t133865 = d*t133852*t133864*t133849*8.0;
            double t133856 = t133863+t133865;
            double t133857 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t133862 = 1.0/(t133854*t133854);
            double t133866 = 1.0/t133854;
            v_rho_a_rho_a_[index] = pow(rho_a[index],1.0/3.0)*(d*gamma_aa[index]*t133861*t133866*(1.6E1/3.0)- \
               d*gamma_aa[index]*t133862*t133855*t133856*2.0)*(4.0/3.0)-1.0/pow(rho_a[index],2.0/3.0)*(d*gamma_aa[index]* \
               t133855*t133866*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_a[index],4.0/3.0) \
               *(d*gamma_aa[index]*t133857*t133866*(1.76E2/9.0)-d*gamma_aa[index]*t133862*t133855*(d*gamma_aa[index]* \
               t133860*t133857*4.0E1-d*(gamma_aa[index]*gamma_aa[index])*1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t133859,3.0/ \
               2.0)*(3.2E1/3.0)+d*1.0/pow(rho_a[index],1.0E1/3.0)*t133852*t133849*(5.6E1/3.0))*2.0+d*gamma_aa[index]* \
               1.0/(t133854*t133854*t133854)*t133855*(t133856*t133856)*4.0-d*gamma_aa[index]*t133861*t133862*t133856* \
               (3.2E1/3.0))*(1.0/2.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t133599 = sqrt(gamma_bb[index]);
            double t133600 = 1.0/pow(rho_b[index],4.0/3.0);
            double t133601 = t133600*t133599;
            double t133602 = log(t133601+sqrt(t133601*t133601+1.0));
            double t133603 = d*t133600*t133602*t133599*6.0;
            double t133604 = t133603+1.0;
            double t133605 = 1.0/pow(rho_b[index],8.0/3.0);
            double t133608 = gamma_bb[index]*t133605;
            double t133609 = t133608+1.0;
            double t133610 = 1.0/sqrt(t133609);
            double t133611 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t133613 = d*gamma_bb[index]*t133610*t133611*8.0;
            double t133614 = 1.0/pow(rho_b[index],7.0/3.0);
            double t133615 = d*t133602*t133614*t133599*8.0;
            double t133606 = t133613+t133615;
            double t133607 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t133612 = 1.0/(t133604*t133604);
            double t133616 = 1.0/t133604;
            v_rho_b_rho_b_[index] = pow(rho_b[index],1.0/3.0)*(d*gamma_bb[index]*t133611*t133616*(1.6E1/3.0)- \
               d*gamma_bb[index]*t133612*t133605*t133606*2.0)*(4.0/3.0)-1.0/pow(rho_b[index],2.0/3.0)*(d*gamma_bb[index]* \
               t133605*t133616*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_b[index],4.0/3.0) \
               *(d*gamma_bb[index]*t133607*t133616*(1.76E2/9.0)-d*gamma_bb[index]*t133612*t133605*(d*gamma_bb[index]* \
               t133610*t133607*4.0E1-d*(gamma_bb[index]*gamma_bb[index])*1.0/pow(rho_b[index],2.2E1/3.0)*1.0/pow(t133609,3.0/ \
               2.0)*(3.2E1/3.0)+d*1.0/pow(rho_b[index],1.0E1/3.0)*t133602*t133599*(5.6E1/3.0))*2.0+d*gamma_bb[index]* \
               1.0/(t133604*t133604*t133604)*t133605*(t133606*t133606)*4.0-d*gamma_bb[index]*t133611*t133612*t133606* \
               (3.2E1/3.0))*(1.0/2.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t133743 = sqrt(gamma_bb[index]);
            double t133744 = 1.0/pow(rho_b[index],4.0/3.0);
            double t133745 = t133743*t133744;
            double t133746 = log(t133745+sqrt(t133745*t133745+1.0));
            double t133747 = d*t133743*t133744*t133746*6.0;
            double t133748 = t133747+1.0;
            double t133749 = 1.0/pow(rho_b[index],8.0/3.0);
            double t133752 = gamma_bb[index]*t133749;
            double t133753 = t133752+1.0;
            double t133754 = 1.0/sqrt(t133753);
            double t133755 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t133757 = d*gamma_bb[index]*t133754*t133755*8.0;
            double t133758 = 1.0/pow(rho_b[index],7.0/3.0);
            double t133759 = d*t133743*t133746*t133758*8.0;
            double t133750 = t133757+t133759;
            double t133751 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t133756 = 1.0/(t133748*t133748);
            double t133760 = 1.0/t133748;
            v_rho_b_rho_b_[index] = pow(rho_b[index],1.0/3.0)*(d*gamma_bb[index]*t133760*t133755*(1.6E1/3.0)- \
               d*gamma_bb[index]*t133750*t133756*t133749*2.0)*(4.0/3.0)-1.0/pow(rho_b[index],2.0/3.0)*(d*gamma_bb[index]* \
               t133760*t133749*2.0+4.190715359480463E15/2.251799813685248E15)*(2.0/9.0)-pow(rho_b[index],4.0/3.0) \
               *(d*gamma_bb[index]*t133751*t133760*(1.76E2/9.0)-d*gamma_bb[index]*t133756*t133749*(d*gamma_bb[index]* \
               t133751*t133754*4.0E1-d*(gamma_bb[index]*gamma_bb[index])*1.0/pow(rho_b[index],2.2E1/3.0)*1.0/pow(t133753,3.0/ \
               2.0)*(3.2E1/3.0)+d*1.0/pow(rho_b[index],1.0E1/3.0)*t133743*t133746*(5.6E1/3.0))*2.0+d*gamma_bb[index]* \
               (t133750*t133750)*1.0/(t133748*t133748*t133748)*t133749*4.0-d*gamma_bb[index]*t133750*t133755*t133756* \
               (3.2E1/3.0))*(1.0/2.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t133618 = sqrt(gamma_aa[index]);
                double t133619 = 1.0/pow(rho_a[index],4.0/3.0);
                double t133620 = 1.0/pow(rho_a[index],8.0/3.0);
                double t133621 = t133618*t133619;
                double t133622 = log(t133621+sqrt(t133621*t133621+1.0));
                double t133623 = d*t133622*t133618*t133619*6.0;
                double t133624 = t133623+1.0;
                double t133625 = 1.0/t133624;
                double t133626 = 1.0/(t133624*t133624);
                double t133627 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t133628 = gamma_aa[index]*t133620;
                double t133629 = t133628+1.0;
                double t133630 = 1.0/sqrt(t133629);
                double t133631 = d*t133620*t133630*3.0;
                double t133632 = 1.0/sqrt(gamma_aa[index]);
                double t133633 = d*t133622*t133632*t133619*3.0;
                double t133634 = t133631+t133633;
                double t133635 = 1.0/pow(rho_a[index],7.0/3.0);
                double t133636 = d*gamma_aa[index]*t133630*t133627*8.0;
                double t133637 = d*t133622*t133635*t133618*8.0;
                double t133638 = t133636+t133637;
                v_rho_a_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t133625*t133627*(-1.6E1/3.0)+d*t133620*t133626* \
                   t133638*2.0+d*gamma_aa[index]*t133620*t133626*(d*t133630*t133627*1.2E1+d*t133622*t133632*t133635*4.0- \
                   d*gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t133629,3.0/2.0)*4.0)*2.0+d*gamma_aa[index]* \
                   t133634*t133626*t133627*(1.6E1/3.0)-d*gamma_aa[index]*t133620*1.0/(t133624*t133624*t133624)*t133634* \
                   t133638*4.0)*(-1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*t133620*t133625*2.0-d*gamma_aa[index]*t133620* \
                   t133634*t133626*2.0)*(2.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                double t133870 = sqrt(gamma_aa[index]);
                double t133871 = 1.0/pow(rho_a[index],4.0/3.0);
                double t133872 = 1.0/pow(rho_a[index],8.0/3.0);
                double t133873 = t133870*t133871;
                double t133874 = log(t133873+sqrt(t133873*t133873+1.0));
                double t133875 = d*t133870*t133871*t133874*6.0;
                double t133876 = t133875+1.0;
                double t133877 = 1.0/t133876;
                double t133878 = 1.0/(t133876*t133876);
                double t133879 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t133880 = gamma_aa[index]*t133872;
                double t133881 = t133880+1.0;
                double t133882 = 1.0/sqrt(t133881);
                double t133883 = d*t133872*t133882*3.0;
                double t133884 = 1.0/sqrt(gamma_aa[index]);
                double t133885 = d*t133871*t133874*t133884*3.0;
                double t133886 = t133883+t133885;
                double t133887 = 1.0/pow(rho_a[index],7.0/3.0);
                double t133888 = d*gamma_aa[index]*t133882*t133879*8.0;
                double t133889 = d*t133870*t133874*t133887*8.0;
                double t133890 = t133888+t133889;
                v_rho_a_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t133877*t133879*(-1.6E1/3.0)+d*t133872*t133890* \
                   t133878*2.0+d*gamma_aa[index]*t133872*t133878*(d*t133882*t133879*1.2E1+d*t133874*t133884*t133887*4.0- \
                   d*gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t133881,3.0/2.0)*4.0)*2.0+d*gamma_aa[index]* \
                   t133886*t133878*t133879*(1.6E1/3.0)-d*gamma_aa[index]*t133872*t133890*1.0/(t133876*t133876*t133876) \
                   *t133886*4.0)*(-1.0/2.0)-pow(rho_a[index],1.0/3.0)*(d*t133872*t133877*2.0-d*gamma_aa[index]*t133872* \
                   t133886*t133878*2.0)*(2.0/3.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t133644 = sqrt(gamma_bb[index]);
                double t133645 = 1.0/pow(rho_b[index],4.0/3.0);
                double t133646 = 1.0/pow(rho_b[index],8.0/3.0);
                double t133647 = t133644*t133645;
                double t133648 = log(t133647+sqrt(t133647*t133647+1.0));
                double t133649 = d*t133644*t133645*t133648*6.0;
                double t133650 = t133649+1.0;
                double t133651 = 1.0/t133650;
                double t133652 = 1.0/(t133650*t133650);
                double t133653 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t133654 = gamma_bb[index]*t133646;
                double t133655 = t133654+1.0;
                double t133656 = 1.0/sqrt(t133655);
                double t133657 = d*t133646*t133656*3.0;
                double t133658 = 1.0/sqrt(gamma_bb[index]);
                double t133659 = d*t133645*t133648*t133658*3.0;
                double t133660 = t133657+t133659;
                double t133661 = 1.0/pow(rho_b[index],7.0/3.0);
                double t133662 = d*gamma_bb[index]*t133653*t133656*8.0;
                double t133663 = d*t133661*t133644*t133648*8.0;
                double t133664 = t133662+t133663;
                v_rho_b_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*(d*t133651*t133653*(-1.6E1/3.0)+d*t133652*t133646* \
                   t133664*2.0+d*gamma_bb[index]*t133652*t133646*(d*t133653*t133656*1.2E1+d*t133661*t133648*t133658*4.0- \
                   d*gamma_bb[index]*1.0/pow(rho_b[index],1.9E1/3.0)*1.0/pow(t133655,3.0/2.0)*4.0)*2.0+d*gamma_bb[index]* \
                   t133660*t133652*t133653*(1.6E1/3.0)-d*gamma_bb[index]*1.0/(t133650*t133650*t133650)*t133660*t133646* \
                   t133664*4.0)*(-1.0/2.0)-pow(rho_b[index],1.0/3.0)*(d*t133651*t133646*2.0-d*gamma_bb[index]*t133660* \
                   t133652*t133646*2.0)*(2.0/3.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t133767 = sqrt(gamma_bb[index]);
                double t133768 = 1.0/pow(rho_b[index],4.0/3.0);
                double t133769 = 1.0/pow(rho_b[index],8.0/3.0);
                double t133770 = t133767*t133768;
                double t133771 = log(t133770+sqrt(t133770*t133770+1.0));
                double t133772 = d*t133771*t133767*t133768*6.0;
                double t133773 = t133772+1.0;
                double t133774 = 1.0/t133773;
                double t133775 = 1.0/(t133773*t133773);
                double t133776 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t133777 = gamma_bb[index]*t133769;
                double t133778 = t133777+1.0;
                double t133779 = 1.0/sqrt(t133778);
                double t133780 = d*t133769*t133779*3.0;
                double t133781 = 1.0/sqrt(gamma_bb[index]);
                double t133782 = d*t133771*t133781*t133768*3.0;
                double t133783 = t133780+t133782;
                double t133784 = 1.0/pow(rho_b[index],7.0/3.0);
                double t133785 = d*gamma_bb[index]*t133776*t133779*8.0;
                double t133786 = d*t133771*t133784*t133767*8.0;
                double t133787 = t133785+t133786;
                v_rho_b_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*(d*t133774*t133776*(-1.6E1/3.0)+d*t133775*t133769* \
                   t133787*2.0+d*gamma_bb[index]*t133775*t133769*(d*t133776*t133779*1.2E1+d*t133771*t133781*t133784*4.0- \
                   d*gamma_bb[index]*1.0/pow(rho_b[index],1.9E1/3.0)*1.0/pow(t133778,3.0/2.0)*4.0)*2.0+d*gamma_bb[index]* \
                   t133783*t133775*t133776*(1.6E1/3.0)-d*gamma_bb[index]*1.0/(t133773*t133773*t133773)*t133783*t133769* \
                   t133787*4.0)*(-1.0/2.0)-pow(rho_b[index],1.0/3.0)*(d*t133774*t133769*2.0-d*gamma_bb[index]*t133783* \
                   t133775*t133769*2.0)*(2.0/3.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t133666 = 1.0/pow(rho_a[index],8.0/3.0);
                double t133667 = 1.0/pow(rho_a[index],4.0/3.0);
                double t133668 = sqrt(gamma_aa[index]);
                double t133669 = t133667*t133668;
                double t133670 = log(t133669+sqrt(t133669*t133669+1.0));
                double t133671 = d*t133670*t133667*t133668*6.0;
                double t133672 = t133671+1.0;
                double t133673 = 1.0/(t133672*t133672);
                double t133674 = gamma_aa[index]*t133666;
                double t133675 = t133674+1.0;
                double t133676 = 1.0/sqrt(t133675);
                double t133677 = d*t133666*t133676*3.0;
                double t133678 = 1.0/sqrt(gamma_aa[index]);
                double t133679 = d*t133670*t133667*t133678*3.0;
                double t133680 = t133677+t133679;
                v_gamma_aa_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t133680*t133673*t133666*-4.0+d*gamma_aa[index]* \
                   (t133680*t133680)*1.0/(t133672*t133672*t133672)*t133666*4.0+d*gamma_aa[index]*t133673*t133666*(d*1.0/ \
                   pow(rho_a[index],1.6E1/3.0)*1.0/pow(t133675,3.0/2.0)*(3.0/2.0)+d*1.0/pow(gamma_aa[index],3.0/2.0)* \
                   t133670*t133667*(3.0/2.0)-(d*t133666*t133676*(3.0/2.0))/gamma_aa[index])*2.0)*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                double t133897 = 1.0/pow(rho_a[index],8.0/3.0);
                double t133898 = 1.0/pow(rho_a[index],4.0/3.0);
                double t133899 = sqrt(gamma_aa[index]);
                double t133900 = t133898*t133899;
                double t133901 = log(t133900+sqrt(t133900*t133900+1.0));
                double t133902 = d*t133901*t133898*t133899*6.0;
                double t133903 = t133902+1.0;
                double t133904 = 1.0/(t133903*t133903);
                double t133905 = gamma_aa[index]*t133897;
                double t133906 = t133905+1.0;
                double t133907 = 1.0/sqrt(t133906);
                double t133908 = d*t133907*t133897*3.0;
                double t133909 = 1.0/sqrt(gamma_aa[index]);
                double t133910 = d*t133901*t133909*t133898*3.0;
                double t133911 = t133910+t133908;
                v_gamma_aa_gamma_aa_[index] = pow(rho_a[index],4.0/3.0)*(d*t133911*t133904*t133897*-4.0+d*gamma_aa[index]* \
                   (t133911*t133911)*1.0/(t133903*t133903*t133903)*t133897*4.0+d*gamma_aa[index]*t133904*t133897*(d*1.0/ \
                   pow(rho_a[index],1.6E1/3.0)*1.0/pow(t133906,3.0/2.0)*(3.0/2.0)+d*1.0/pow(gamma_aa[index],3.0/2.0)* \
                   t133901*t133898*(3.0/2.0)-(d*t133907*t133897*(3.0/2.0))/gamma_aa[index])*2.0)*(-1.0/2.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t133686 = 1.0/pow(rho_b[index],8.0/3.0);
                double t133687 = 1.0/pow(rho_b[index],4.0/3.0);
                double t133688 = sqrt(gamma_bb[index]);
                double t133689 = t133687*t133688;
                double t133690 = log(t133689+sqrt(t133689*t133689+1.0));
                double t133691 = d*t133690*t133687*t133688*6.0;
                double t133692 = t133691+1.0;
                double t133693 = 1.0/(t133692*t133692);
                double t133694 = gamma_bb[index]*t133686;
                double t133695 = t133694+1.0;
                double t133696 = 1.0/sqrt(t133695);
                double t133697 = d*t133686*t133696*3.0;
                double t133698 = 1.0/sqrt(gamma_bb[index]);
                double t133699 = d*t133690*t133687*t133698*3.0;
                double t133700 = t133697+t133699;
                v_gamma_bb_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*(d*t133700*t133693*t133686*-4.0+d*gamma_bb[index]* \
                   (t133700*t133700)*1.0/(t133692*t133692*t133692)*t133686*4.0+d*gamma_bb[index]*t133693*t133686*(d*1.0/ \
                   pow(rho_b[index],1.6E1/3.0)*1.0/pow(t133695,3.0/2.0)*(3.0/2.0)+d*1.0/pow(gamma_bb[index],3.0/2.0)* \
                   t133690*t133687*(3.0/2.0)-(d*t133686*t133696*(3.0/2.0))/gamma_bb[index])*2.0)*(-1.0/2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t133794 = 1.0/pow(rho_b[index],8.0/3.0);
                double t133795 = 1.0/pow(rho_b[index],4.0/3.0);
                double t133796 = sqrt(gamma_bb[index]);
                double t133797 = t133795*t133796;
                double t133798 = log(t133797+sqrt(t133797*t133797+1.0));
                double t133799 = d*t133795*t133796*t133798*6.0;
                double t133800 = t133799+1.0;
                double t133801 = 1.0/(t133800*t133800);
                double t133802 = gamma_bb[index]*t133794;
                double t133803 = t133802+1.0;
                double t133804 = 1.0/sqrt(t133803);
                double t133805 = d*t133804*t133794*3.0;
                double t133806 = 1.0/sqrt(gamma_bb[index]);
                double t133807 = d*t133806*t133795*t133798*3.0;
                double t133808 = t133805+t133807;
                v_gamma_bb_gamma_bb_[index] = pow(rho_b[index],4.0/3.0)*(d*t133801*t133808*t133794*-4.0+d*gamma_bb[index]* \
                   1.0/(t133800*t133800*t133800)*(t133808*t133808)*t133794*4.0+d*gamma_bb[index]*t133801*t133794*(d*1.0/ \
                   pow(rho_b[index],1.6E1/3.0)*1.0/pow(t133803,3.0/2.0)*(3.0/2.0)-(d*t133804*t133794*(3.0/2.0))/gamma_bb[index]+ \
                   d*1.0/pow(gamma_bb[index],3.0/2.0)*t133795*t133798*(3.0/2.0))*2.0)*(-1.0/2.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

