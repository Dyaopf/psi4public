/**********************************************************
* B_X_functional.cc: definitions for B_X_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 25-May-2011
*
***********************************************************/
#include <libmints/mints.h>
#include "B_X_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

B_X_Functional::B_X_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "B_X";
    description_ = "Becke Exchange (S+B88)";
    citation_ = "A.D. Becke, Phys. Rev. A, 38(6):3098-3100, 1988";

    double c = 9.3052573634909974E-01;
    params_.push_back(make_pair("c",c));
    double d = 4.1999999999999997E-03;
    params_.push_back(make_pair("d",d));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
B_X_Functional::~B_X_Functional()
{
}
void B_X_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double c = params_[0].second;
    double d = params_[1].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t582 = 1.0/pow(rho_a[index],4.0/3.0);
            double t583 = sqrt(gamma_aa[index]);
            functional_[index] = c*pow(rho_a[index],4.0/3.0)*-2.0-(d*gamma_aa[index]*t582*2.0)/(d*t582*t583*log(t582* \
               t583+sqrt((t582*t582)*(t583*t583)+1.0))*6.0+1.0);
        } else {
            functional_[index] = 0.0;
        }

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t585 = sqrt(gamma_aa[index]);
            double t586 = 1.0/pow(rho_a[index],4.0/3.0);
            double t587 = t585*t586;
            double t588 = log(t587+sqrt(t587*t587+1.0));
            double t589 = d*t585*t586*t588*6.0;
            double t590 = t589+1.0;
            double t591 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = c*pow(rho_a[index],1.0/3.0)*(-4.0/3.0)+(d*gamma_aa[index]*t591*(4.0/3.0))/t590- \
               d*gamma_aa[index]*t586*1.0/(t590*t590)*(d*t585*t588*t591*8.0+d*gamma_aa[index]*1.0/pow(rho_a[index],1.1E1/ \
               3.0)*1.0/sqrt(gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0)+1.0)*8.0);
        } else {
            v_rho_a_[index] = 0.0;
        }

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t593 = 1.0/pow(rho_a[index],4.0/3.0);
                double t594 = sqrt(gamma_aa[index]);
                double t595 = 1.0/pow(rho_a[index],8.0/3.0);
                double t596 = t593*t594;
                double t597 = log(t596+sqrt(t596*t596+1.0));
                double t598 = d*t593*t594*t597*6.0;
                double t599 = t598+1.0;
                v_gamma_aa_[index] = (d*t593*-2.0)/t599+d*gamma_aa[index]*t593*1.0/(t599*t599)*(d*t595*1.0/sqrt(gamma_aa[index]* \
                   t595+1.0)*3.0+d*1.0/sqrt(gamma_aa[index])*t593*t597*3.0)*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            }

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            }

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t602 = sqrt(gamma_aa[index]);
            double t603 = 1.0/pow(rho_a[index],4.0/3.0);
            double t604 = t602*t603;
            double t605 = log(t604+sqrt(t604*t604+1.0));
            double t606 = d*t602*t603*t605*6.0;
            double t607 = t606+1.0;
            double t609 = 1.0/pow(rho_a[index],8.0/3.0);
            double t610 = gamma_aa[index]*t609;
            double t611 = t610+1.0;
            double t612 = 1.0/sqrt(t611);
            double t614 = 1.0/pow(rho_a[index],7.0/3.0);
            double t616 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t617 = d*gamma_aa[index]*t612*t616*8.0;
            double t618 = d*t602*t605*t614*8.0;
            double t608 = t617+t618;
            double t613 = 1.0/pow(rho_a[index],1.0E1/3.0);
            double t615 = 1.0/(t607*t607);
            v_rho_a_rho_a_[index] = c*1.0/pow(rho_a[index],2.0/3.0)*(-4.0/9.0)-(d*gamma_aa[index]*t613*(2.8E1/ \
               9.0))/t607+d*gamma_aa[index]*t603*t615*(d*t602*t605*t613*(5.6E1/3.0)-d*(gamma_aa[index]*gamma_aa[index]) \
               *1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t611,3.0/2.0)*(3.2E1/3.0)+d*gamma_aa[index]*1.0/pow(rho_a[index],1.4E1/ \
               3.0)*t612*4.0E1)-d*gamma_aa[index]*t603*1.0/(t607*t607*t607)*(t608*t608)*2.0+d*gamma_aa[index]*t608* \
               t614*t615*(8.0/3.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        }

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t620 = sqrt(gamma_aa[index]);
                double t621 = 1.0/pow(rho_a[index],4.0/3.0);
                double t622 = t620*t621;
                double t623 = log(t622+sqrt(t622*t622+1.0));
                double t624 = d*t620*t621*t623*6.0;
                double t625 = t624+1.0;
                double t626 = 1.0/pow(rho_a[index],7.0/3.0);
                double t627 = 1.0/pow(rho_a[index],8.0/3.0);
                double t628 = gamma_aa[index]*t627;
                double t629 = t628+1.0;
                double t630 = 1.0/sqrt(t629);
                double t631 = 1.0/(t625*t625);
                double t632 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t633 = 1.0/sqrt(gamma_aa[index]);
                double t634 = d*t627*t630*3.0;
                double t635 = d*t621*t623*t633*3.0;
                double t636 = t634+t635;
                double t637 = d*gamma_aa[index]*t630*t632*8.0;
                double t638 = d*t620*t623*t626*8.0;
                double t639 = t637+t638;
                v_rho_a_gamma_aa_[index] = (d*t626*(4.0/3.0))/t625-d*t621*t631*t639-d*gamma_aa[index]*t621*t631*(d* \
                   t630*t632*1.2E1+d*t623*t626*t633*4.0-d*gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t629,3.0/ \
                   2.0)*4.0)-d*gamma_aa[index]*t626*t631*t636*(4.0/3.0)+d*gamma_aa[index]*t621*1.0/(t625*t625*t625)*t636* \
                   t639*2.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            }

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t641 = 1.0/pow(rho_a[index],8.0/3.0);
                double t642 = 1.0/pow(rho_a[index],4.0/3.0);
                double t643 = sqrt(gamma_aa[index]);
                double t644 = t642*t643;
                double t645 = log(t644+sqrt(t644*t644+1.0));
                double t646 = d*t642*t643*t645*6.0;
                double t647 = t646+1.0;
                double t648 = 1.0/(t647*t647);
                double t649 = gamma_aa[index]*t641;
                double t650 = t649+1.0;
                double t651 = 1.0/sqrt(t650);
                double t652 = d*t641*t651*3.0;
                double t653 = 1.0/sqrt(gamma_aa[index]);
                double t654 = d*t642*t645*t653*3.0;
                double t655 = t652+t654;
                v_gamma_aa_gamma_aa_[index] = d*t642*t648*t655*4.0-d*gamma_aa[index]*t642*1.0/(t647*t647*t647)*(t655* \
                   t655)*4.0-d*gamma_aa[index]*t642*t648*(d*1.0/pow(rho_a[index],1.6E1/3.0)*1.0/pow(t650,3.0/2.0)*(3.0/ \
                   2.0)+d*1.0/pow(gamma_aa[index],3.0/2.0)*t642*t645*(3.0/2.0)-(d*t641*t651*(3.0/2.0))/gamma_aa[index]) \
                   *2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            }

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            }

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            }

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                }

            }
        }
    }
}
void B_X_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double c = params_[0].second;
    double d = params_[1].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t166 = 1.0/pow(rho_a[index],4.0/3.0);
            double t167 = sqrt(gamma_aa[index]);
            double t168 = 1.0/pow(rho_b[index],4.0/3.0);
            double t169 = sqrt(gamma_bb[index]);
            functional_[index] = -c*(pow(rho_a[index],4.0/3.0)+pow(rho_b[index],4.0/3.0))-(d*gamma_aa[index]* \
               t166)/(d*t166*t167*log(t166*t167+sqrt((t166*t166)*(t167*t167)+1.0))*6.0+1.0)-(d*gamma_bb[index]*t168) \
               /(d*t168*t169*log(t168*t169+sqrt((t168*t168)*(t169*t169)+1.0))*6.0+1.0);
        } else if (rho_a[index] > cutoff_) {
            double t442 = 1.0/pow(rho_a[index],4.0/3.0);
            double t443 = sqrt(gamma_aa[index]);
            functional_[index] = -c*pow(rho_a[index],4.0/3.0)-(d*gamma_aa[index]*t442)/(d*t442*t443*log(t442* \
               t443+sqrt((t442*t442)*(t443*t443)+1.0))*6.0+1.0);
        } else if (rho_b[index] > cutoff_) {
            double t338 = 1.0/pow(rho_b[index],4.0/3.0);
            double t339 = sqrt(gamma_bb[index]);
            functional_[index] = -c*pow(rho_b[index],4.0/3.0)-(d*gamma_bb[index]*t338)/(d*t338*t339*log(t338* \
               t339+sqrt((t338*t338)*(t339*t339)+1.0))*6.0+1.0);
        } else {
            functional_[index] = 0.0;
        }

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t171 = sqrt(gamma_aa[index]);
            double t172 = 1.0/pow(rho_a[index],4.0/3.0);
            double t173 = t171*t172;
            double t174 = log(t173+sqrt(t173*t173+1.0));
            double t175 = d*t171*t172*t174*6.0;
            double t176 = t175+1.0;
            double t177 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = c*pow(rho_a[index],1.0/3.0)*(-4.0/3.0)+(d*gamma_aa[index]*t177*(4.0/3.0))/t176- \
               d*gamma_aa[index]*t172*1.0/(t176*t176)*(d*t171*t174*t177*8.0+d*gamma_aa[index]*1.0/pow(rho_a[index],1.1E1/ \
               3.0)*1.0/sqrt(gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0)+1.0)*8.0);
        } else if (rho_a[index] > cutoff_) {
            double t445 = sqrt(gamma_aa[index]);
            double t446 = 1.0/pow(rho_a[index],4.0/3.0);
            double t447 = t445*t446;
            double t448 = log(t447+sqrt(t447*t447+1.0));
            double t449 = d*t445*t446*t448*6.0;
            double t450 = t449+1.0;
            double t451 = 1.0/pow(rho_a[index],7.0/3.0);
            v_rho_a_[index] = c*pow(rho_a[index],1.0/3.0)*(-4.0/3.0)+(d*gamma_aa[index]*t451*(4.0/3.0))/t450- \
               d*gamma_aa[index]*t446*1.0/(t450*t450)*(d*t445*t448*t451*8.0+d*gamma_aa[index]*1.0/pow(rho_a[index],1.1E1/ \
               3.0)*1.0/sqrt(gamma_aa[index]*1.0/pow(rho_a[index],8.0/3.0)+1.0)*8.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        }

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t179 = sqrt(gamma_bb[index]);
            double t180 = 1.0/pow(rho_b[index],4.0/3.0);
            double t181 = t179*t180;
            double t182 = log(t181+sqrt(t181*t181+1.0));
            double t183 = d*t179*t180*t182*6.0;
            double t184 = t183+1.0;
            double t185 = 1.0/pow(rho_b[index],7.0/3.0);
            v_rho_b_[index] = c*pow(rho_b[index],1.0/3.0)*(-4.0/3.0)+(d*gamma_bb[index]*t185*(4.0/3.0))/t184- \
               d*gamma_bb[index]*t180*1.0/(t184*t184)*(d*t179*t182*t185*8.0+d*gamma_bb[index]*1.0/pow(rho_b[index],1.1E1/ \
               3.0)*1.0/sqrt(gamma_bb[index]*1.0/pow(rho_b[index],8.0/3.0)+1.0)*8.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t342 = sqrt(gamma_bb[index]);
            double t343 = 1.0/pow(rho_b[index],4.0/3.0);
            double t344 = t342*t343;
            double t345 = log(t344+sqrt(t344*t344+1.0));
            double t346 = d*t342*t343*t345*6.0;
            double t347 = t346+1.0;
            double t348 = 1.0/pow(rho_b[index],7.0/3.0);
            v_rho_b_[index] = c*pow(rho_b[index],1.0/3.0)*(-4.0/3.0)+(d*gamma_bb[index]*t348*(4.0/3.0))/t347- \
               d*gamma_bb[index]*t343*1.0/(t347*t347)*(d*t342*t345*t348*8.0+d*gamma_bb[index]*1.0/pow(rho_b[index],1.1E1/ \
               3.0)*1.0/sqrt(gamma_bb[index]*1.0/pow(rho_b[index],8.0/3.0)+1.0)*8.0);
        } else {
            v_rho_b_[index] = 0.0;
        }

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t187 = 1.0/pow(rho_a[index],4.0/3.0);
                double t188 = sqrt(gamma_aa[index]);
                double t189 = 1.0/pow(rho_a[index],8.0/3.0);
                double t190 = t187*t188;
                double t191 = log(t190+sqrt(t190*t190+1.0));
                double t192 = d*t187*t188*t191*6.0;
                double t193 = t192+1.0;
                v_gamma_aa_[index] = -(d*t187)/t193+d*gamma_aa[index]*t187*1.0/(t193*t193)*(d*t189*1.0/sqrt(gamma_aa[index]* \
                   t189+1.0)*3.0+d*1.0/sqrt(gamma_aa[index])*t187*t191*3.0);
            } else if (rho_a[index] > cutoff_) {
                double t454 = 1.0/pow(rho_a[index],4.0/3.0);
                double t455 = sqrt(gamma_aa[index]);
                double t456 = 1.0/pow(rho_a[index],8.0/3.0);
                double t457 = t454*t455;
                double t458 = log(t457+sqrt(t457*t457+1.0));
                double t459 = d*t454*t455*t458*6.0;
                double t460 = t459+1.0;
                v_gamma_aa_[index] = -(d*t454)/t460+d*gamma_aa[index]*t454*1.0/(t460*t460)*(d*t456*1.0/sqrt(gamma_aa[index]* \
                   t456+1.0)*3.0+d*1.0/sqrt(gamma_aa[index])*t454*t458*3.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            }

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            }

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t196 = 1.0/pow(rho_b[index],4.0/3.0);
                double t197 = sqrt(gamma_bb[index]);
                double t198 = 1.0/pow(rho_b[index],8.0/3.0);
                double t199 = t196*t197;
                double t200 = log(t199+sqrt(t199*t199+1.0));
                double t201 = d*t196*t197*t200*6.0;
                double t202 = t201+1.0;
                v_gamma_bb_[index] = -(d*t196)/t202+d*gamma_bb[index]*t196*1.0/(t202*t202)*(d*t198*1.0/sqrt(gamma_bb[index]* \
                   t198+1.0)*3.0+d*1.0/sqrt(gamma_bb[index])*t196*t200*3.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t352 = 1.0/pow(rho_b[index],4.0/3.0);
                double t353 = sqrt(gamma_bb[index]);
                double t354 = 1.0/pow(rho_b[index],8.0/3.0);
                double t355 = t352*t353;
                double t356 = log(t355+sqrt(t355*t355+1.0));
                double t357 = d*t352*t353*t356*6.0;
                double t358 = t357+1.0;
                v_gamma_bb_[index] = -(d*t352)/t358+d*gamma_bb[index]*t352*1.0/(t358*t358)*(d*t354*1.0/sqrt(gamma_bb[index]* \
                   t354+1.0)*3.0+d*1.0/sqrt(gamma_bb[index])*t352*t356*3.0);
            } else {
                v_gamma_bb_[index] = 0.0;
            }
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            }

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            }
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t206 = sqrt(gamma_aa[index]);
            double t207 = 1.0/pow(rho_a[index],4.0/3.0);
            double t208 = t206*t207;
            double t209 = log(t208+sqrt(t208*t208+1.0));
            double t210 = d*t206*t207*t209*6.0;
            double t211 = t210+1.0;
            double t213 = 1.0/pow(rho_a[index],8.0/3.0);
            double t214 = gamma_aa[index]*t213;
            double t215 = t214+1.0;
            double t216 = 1.0/sqrt(t215);
            double t218 = 1.0/pow(rho_a[index],7.0/3.0);
            double t220 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t221 = d*gamma_aa[index]*t216*t220*8.0;
            double t222 = d*t206*t209*t218*8.0;
            double t212 = t221+t222;
            double t217 = 1.0/pow(rho_a[index],1.0E1/3.0);
            double t219 = 1.0/(t211*t211);
            v_rho_a_rho_a_[index] = c*1.0/pow(rho_a[index],2.0/3.0)*(-4.0/9.0)-(d*gamma_aa[index]*t217*(2.8E1/ \
               9.0))/t211+d*gamma_aa[index]*t207*t219*(d*t206*t209*t217*(5.6E1/3.0)-d*(gamma_aa[index]*gamma_aa[index]) \
               *1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t215,3.0/2.0)*(3.2E1/3.0)+d*gamma_aa[index]*1.0/pow(rho_a[index],1.4E1/ \
               3.0)*t216*4.0E1)-d*gamma_aa[index]*t207*1.0/(t211*t211*t211)*(t212*t212)*2.0+d*gamma_aa[index]*t212* \
               t218*t219*(8.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            double t466 = sqrt(gamma_aa[index]);
            double t467 = 1.0/pow(rho_a[index],4.0/3.0);
            double t468 = t466*t467;
            double t469 = log(t468+sqrt(t468*t468+1.0));
            double t470 = d*t466*t467*t469*6.0;
            double t471 = t470+1.0;
            double t473 = 1.0/pow(rho_a[index],8.0/3.0);
            double t474 = gamma_aa[index]*t473;
            double t475 = t474+1.0;
            double t476 = 1.0/sqrt(t475);
            double t478 = 1.0/pow(rho_a[index],7.0/3.0);
            double t480 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t481 = d*gamma_aa[index]*t476*t480*8.0;
            double t482 = d*t466*t469*t478*8.0;
            double t472 = t481+t482;
            double t477 = 1.0/pow(rho_a[index],1.0E1/3.0);
            double t479 = 1.0/(t471*t471);
            v_rho_a_rho_a_[index] = c*1.0/pow(rho_a[index],2.0/3.0)*(-4.0/9.0)-(d*gamma_aa[index]*t477*(2.8E1/ \
               9.0))/t471+d*gamma_aa[index]*t467*t479*(d*t466*t469*t477*(5.6E1/3.0)-d*(gamma_aa[index]*gamma_aa[index]) \
               *1.0/pow(rho_a[index],2.2E1/3.0)*1.0/pow(t475,3.0/2.0)*(3.2E1/3.0)+d*gamma_aa[index]*1.0/pow(rho_a[index],1.4E1/ \
               3.0)*t476*4.0E1)-d*gamma_aa[index]*t467*1.0/(t471*t471*t471)*(t472*t472)*2.0+d*gamma_aa[index]*t472* \
               t478*t479*(8.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        }

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        }

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t225 = sqrt(gamma_bb[index]);
            double t226 = 1.0/pow(rho_b[index],4.0/3.0);
            double t227 = t225*t226;
            double t228 = log(t227+sqrt(t227*t227+1.0));
            double t229 = d*t225*t226*t228*6.0;
            double t230 = t229+1.0;
            double t232 = 1.0/pow(rho_b[index],8.0/3.0);
            double t233 = gamma_bb[index]*t232;
            double t234 = t233+1.0;
            double t235 = 1.0/sqrt(t234);
            double t237 = 1.0/pow(rho_b[index],7.0/3.0);
            double t239 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t240 = d*gamma_bb[index]*t235*t239*8.0;
            double t241 = d*t225*t228*t237*8.0;
            double t231 = t240+t241;
            double t236 = 1.0/pow(rho_b[index],1.0E1/3.0);
            double t238 = 1.0/(t230*t230);
            v_rho_b_rho_b_[index] = c*1.0/pow(rho_b[index],2.0/3.0)*(-4.0/9.0)-(d*gamma_bb[index]*t236*(2.8E1/ \
               9.0))/t230+d*gamma_bb[index]*t226*t238*(d*t225*t228*t236*(5.6E1/3.0)-d*(gamma_bb[index]*gamma_bb[index]) \
               *1.0/pow(rho_b[index],2.2E1/3.0)*1.0/pow(t234,3.0/2.0)*(3.2E1/3.0)+d*gamma_bb[index]*1.0/pow(rho_b[index],1.4E1/ \
               3.0)*t235*4.0E1)-d*gamma_bb[index]*t226*1.0/(t230*t230*t230)*(t231*t231)*2.0+d*gamma_bb[index]*t231* \
               t237*t238*(8.0/3.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t364 = sqrt(gamma_bb[index]);
            double t365 = 1.0/pow(rho_b[index],4.0/3.0);
            double t366 = t364*t365;
            double t367 = log(t366+sqrt(t366*t366+1.0));
            double t368 = d*t364*t365*t367*6.0;
            double t369 = t368+1.0;
            double t371 = 1.0/pow(rho_b[index],8.0/3.0);
            double t372 = gamma_bb[index]*t371;
            double t373 = t372+1.0;
            double t374 = 1.0/sqrt(t373);
            double t376 = 1.0/pow(rho_b[index],7.0/3.0);
            double t378 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t379 = d*gamma_bb[index]*t374*t378*8.0;
            double t380 = d*t364*t367*t376*8.0;
            double t370 = t379+t380;
            double t375 = 1.0/pow(rho_b[index],1.0E1/3.0);
            double t377 = 1.0/(t369*t369);
            v_rho_b_rho_b_[index] = c*1.0/pow(rho_b[index],2.0/3.0)*(-4.0/9.0)-(d*gamma_bb[index]*t375*(2.8E1/ \
               9.0))/t369+d*gamma_bb[index]*t365*t377*(d*t364*t367*t375*(5.6E1/3.0)-d*(gamma_bb[index]*gamma_bb[index]) \
               *1.0/pow(rho_b[index],2.2E1/3.0)*1.0/pow(t373,3.0/2.0)*(3.2E1/3.0)+d*gamma_bb[index]*1.0/pow(rho_b[index],1.4E1/ \
               3.0)*t374*4.0E1)-d*gamma_bb[index]*t365*1.0/(t369*t369*t369)*(t370*t370)*2.0+d*gamma_bb[index]*t370* \
               t376*t377*(8.0/3.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        }

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t243 = sqrt(gamma_aa[index]);
                double t244 = 1.0/pow(rho_a[index],4.0/3.0);
                double t245 = t243*t244;
                double t246 = log(t245+sqrt(t245*t245+1.0));
                double t247 = d*t243*t244*t246*6.0;
                double t248 = t247+1.0;
                double t249 = 1.0/pow(rho_a[index],7.0/3.0);
                double t250 = 1.0/pow(rho_a[index],8.0/3.0);
                double t251 = gamma_aa[index]*t250;
                double t252 = t251+1.0;
                double t253 = 1.0/sqrt(t252);
                double t254 = 1.0/(t248*t248);
                double t255 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t256 = 1.0/sqrt(gamma_aa[index]);
                double t257 = d*t250*t253*3.0;
                double t258 = d*t244*t246*t256*3.0;
                double t259 = t257+t258;
                double t260 = d*gamma_aa[index]*t253*t255*8.0;
                double t261 = d*t243*t246*t249*8.0;
                double t262 = t260+t261;
                v_rho_a_gamma_aa_[index] = (d*t249*(4.0/3.0))/t248-d*t244*t254*t262-d*gamma_aa[index]*t244*t254*(d* \
                   t253*t255*1.2E1+d*t246*t249*t256*4.0-d*gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t252,3.0/ \
                   2.0)*4.0)-d*gamma_aa[index]*t249*t254*t259*(4.0/3.0)+d*gamma_aa[index]*t244*1.0/(t248*t248*t248)*t259* \
                   t262*2.0;
            } else if (rho_a[index] > cutoff_) {
                double t486 = sqrt(gamma_aa[index]);
                double t487 = 1.0/pow(rho_a[index],4.0/3.0);
                double t488 = t486*t487;
                double t489 = log(t488+sqrt(t488*t488+1.0));
                double t490 = d*t486*t487*t489*6.0;
                double t491 = t490+1.0;
                double t492 = 1.0/pow(rho_a[index],7.0/3.0);
                double t493 = 1.0/pow(rho_a[index],8.0/3.0);
                double t494 = gamma_aa[index]*t493;
                double t495 = t494+1.0;
                double t496 = 1.0/sqrt(t495);
                double t497 = 1.0/(t491*t491);
                double t498 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t499 = 1.0/sqrt(gamma_aa[index]);
                double t500 = d*t493*t496*3.0;
                double t501 = d*t487*t489*t499*3.0;
                double t502 = t500+t501;
                double t503 = d*gamma_aa[index]*t496*t498*8.0;
                double t504 = d*t486*t489*t492*8.0;
                double t505 = t503+t504;
                v_rho_a_gamma_aa_[index] = (d*t492*(4.0/3.0))/t491-d*t487*t497*t505-d*gamma_aa[index]*t487*t497*(d* \
                   t496*t498*1.2E1+d*t489*t492*t499*4.0-d*gamma_aa[index]*1.0/pow(rho_a[index],1.9E1/3.0)*1.0/pow(t495,3.0/ \
                   2.0)*4.0)-d*gamma_aa[index]*t492*t497*t502*(4.0/3.0)+d*gamma_aa[index]*t487*1.0/(t491*t491*t491)*t502* \
                   t505*2.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            }

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            }

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            }

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            }

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            }

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t268 = sqrt(gamma_bb[index]);
                double t269 = 1.0/pow(rho_b[index],4.0/3.0);
                double t270 = t268*t269;
                double t271 = log(t270+sqrt(t270*t270+1.0));
                double t272 = d*t268*t269*t271*6.0;
                double t273 = t272+1.0;
                double t274 = 1.0/pow(rho_b[index],7.0/3.0);
                double t275 = 1.0/pow(rho_b[index],8.0/3.0);
                double t276 = gamma_bb[index]*t275;
                double t277 = t276+1.0;
                double t278 = 1.0/sqrt(t277);
                double t279 = 1.0/(t273*t273);
                double t280 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t281 = 1.0/sqrt(gamma_bb[index]);
                double t282 = d*t275*t278*3.0;
                double t283 = d*t269*t271*t281*3.0;
                double t284 = t282+t283;
                double t285 = d*gamma_bb[index]*t278*t280*8.0;
                double t286 = d*t268*t271*t274*8.0;
                double t287 = t285+t286;
                v_rho_b_gamma_bb_[index] = (d*t274*(4.0/3.0))/t273-d*t269*t279*t287-d*gamma_bb[index]*t269*t279*(d* \
                   t278*t280*1.2E1+d*t271*t274*t281*4.0-d*gamma_bb[index]*1.0/pow(rho_b[index],1.9E1/3.0)*1.0/pow(t277,3.0/ \
                   2.0)*4.0)-d*gamma_bb[index]*t274*t279*t284*(4.0/3.0)+d*gamma_bb[index]*t269*1.0/(t273*t273*t273)*t284* \
                   t287*2.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t387 = sqrt(gamma_bb[index]);
                double t388 = 1.0/pow(rho_b[index],4.0/3.0);
                double t389 = t387*t388;
                double t390 = log(t389+sqrt(t389*t389+1.0));
                double t391 = d*t387*t388*t390*6.0;
                double t392 = t391+1.0;
                double t393 = 1.0/pow(rho_b[index],7.0/3.0);
                double t394 = 1.0/pow(rho_b[index],8.0/3.0);
                double t395 = gamma_bb[index]*t394;
                double t396 = t395+1.0;
                double t397 = 1.0/sqrt(t396);
                double t398 = 1.0/(t392*t392);
                double t399 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t400 = 1.0/sqrt(gamma_bb[index]);
                double t401 = d*t394*t397*3.0;
                double t402 = d*t388*t390*t400*3.0;
                double t403 = t401+t402;
                double t404 = d*gamma_bb[index]*t397*t399*8.0;
                double t405 = d*t387*t390*t393*8.0;
                double t406 = t404+t405;
                v_rho_b_gamma_bb_[index] = (d*t393*(4.0/3.0))/t392-d*t388*t398*t406-d*gamma_bb[index]*t388*t398*(d* \
                   t397*t399*1.2E1+d*t390*t393*t400*4.0-d*gamma_bb[index]*1.0/pow(rho_b[index],1.9E1/3.0)*1.0/pow(t396,3.0/ \
                   2.0)*4.0)-d*gamma_bb[index]*t393*t398*t403*(4.0/3.0)+d*gamma_bb[index]*t388*1.0/(t392*t392*t392)*t403* \
                   t406*2.0;
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            }

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t289 = 1.0/pow(rho_a[index],8.0/3.0);
                double t290 = 1.0/pow(rho_a[index],4.0/3.0);
                double t291 = sqrt(gamma_aa[index]);
                double t292 = t290*t291;
                double t293 = log(t292+sqrt(t292*t292+1.0));
                double t294 = d*t290*t291*t293*6.0;
                double t295 = t294+1.0;
                double t296 = 1.0/(t295*t295);
                double t297 = gamma_aa[index]*t289;
                double t298 = t297+1.0;
                double t299 = 1.0/sqrt(t298);
                double t300 = d*t289*t299*3.0;
                double t301 = 1.0/sqrt(gamma_aa[index]);
                double t302 = d*t290*t293*t301*3.0;
                double t303 = t300+t302;
                v_gamma_aa_gamma_aa_[index] = d*t290*t296*t303*2.0-d*gamma_aa[index]*t290*1.0/(t295*t295*t295)*(t303* \
                   t303)*2.0-d*gamma_aa[index]*t290*t296*(d*1.0/pow(rho_a[index],1.6E1/3.0)*1.0/pow(t298,3.0/2.0)*(3.0/ \
                   2.0)-(d*t289*t299*(3.0/2.0))/gamma_aa[index]+d*1.0/pow(gamma_aa[index],3.0/2.0)*t290*t293*(3.0/2.0) \
                   );
            } else if (rho_a[index] > cutoff_) {
                double t512 = 1.0/pow(rho_a[index],8.0/3.0);
                double t513 = 1.0/pow(rho_a[index],4.0/3.0);
                double t514 = sqrt(gamma_aa[index]);
                double t515 = t513*t514;
                double t516 = log(t515+sqrt(t515*t515+1.0));
                double t517 = d*t513*t514*t516*6.0;
                double t518 = t517+1.0;
                double t519 = 1.0/(t518*t518);
                double t520 = gamma_aa[index]*t512;
                double t521 = t520+1.0;
                double t522 = 1.0/sqrt(t521);
                double t523 = d*t512*t522*3.0;
                double t524 = 1.0/sqrt(gamma_aa[index]);
                double t525 = d*t513*t516*t524*3.0;
                double t526 = t523+t525;
                v_gamma_aa_gamma_aa_[index] = d*t513*t519*t526*2.0-d*gamma_aa[index]*t513*1.0/(t518*t518*t518)*(t526* \
                   t526)*2.0-d*gamma_aa[index]*t513*t519*(d*1.0/pow(rho_a[index],1.6E1/3.0)*1.0/pow(t521,3.0/2.0)*(3.0/ \
                   2.0)+d*1.0/pow(gamma_aa[index],3.0/2.0)*t513*t516*(3.0/2.0)-(d*t512*t522*(3.0/2.0))/gamma_aa[index]) \
                   ;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            }

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            }

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            }

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            }

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            }

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t309 = 1.0/pow(rho_b[index],8.0/3.0);
                double t310 = 1.0/pow(rho_b[index],4.0/3.0);
                double t311 = sqrt(gamma_bb[index]);
                double t312 = t310*t311;
                double t313 = log(t312+sqrt(t312*t312+1.0));
                double t314 = d*t310*t311*t313*6.0;
                double t315 = t314+1.0;
                double t316 = 1.0/(t315*t315);
                double t317 = gamma_bb[index]*t309;
                double t318 = t317+1.0;
                double t319 = 1.0/sqrt(t318);
                double t320 = d*t309*t319*3.0;
                double t321 = 1.0/sqrt(gamma_bb[index]);
                double t322 = d*t310*t313*t321*3.0;
                double t323 = t320+t322;
                v_gamma_bb_gamma_bb_[index] = d*t310*t316*t323*2.0-d*gamma_bb[index]*t310*1.0/(t315*t315*t315)*(t323* \
                   t323)*2.0-d*gamma_bb[index]*t310*t316*(d*1.0/pow(rho_b[index],1.6E1/3.0)*1.0/pow(t318,3.0/2.0)*(3.0/ \
                   2.0)-(d*t309*t319*(3.0/2.0))/gamma_bb[index]+d*1.0/pow(gamma_bb[index],3.0/2.0)*t310*t313*(3.0/2.0) \
                   );
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t413 = 1.0/pow(rho_b[index],8.0/3.0);
                double t414 = 1.0/pow(rho_b[index],4.0/3.0);
                double t415 = sqrt(gamma_bb[index]);
                double t416 = t414*t415;
                double t417 = log(t416+sqrt(t416*t416+1.0));
                double t418 = d*t414*t415*t417*6.0;
                double t419 = t418+1.0;
                double t420 = 1.0/(t419*t419);
                double t421 = gamma_bb[index]*t413;
                double t422 = t421+1.0;
                double t423 = 1.0/sqrt(t422);
                double t424 = d*t413*t423*3.0;
                double t425 = 1.0/sqrt(gamma_bb[index]);
                double t426 = d*t414*t417*t425*3.0;
                double t427 = t424+t426;
                v_gamma_bb_gamma_bb_[index] = d*t414*t420*t427*2.0-d*gamma_bb[index]*t414*1.0/(t419*t419*t419)*(t427* \
                   t427)*2.0-d*gamma_bb[index]*t414*t420*(d*1.0/pow(rho_b[index],1.6E1/3.0)*1.0/pow(t422,3.0/2.0)*(3.0/ \
                   2.0)+d*1.0/pow(gamma_bb[index],3.0/2.0)*t414*t417*(3.0/2.0)-(d*t413*t423*(3.0/2.0))/gamma_bb[index]) \
                   ;
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            }

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            }

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            }

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            }

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            }

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            }

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            }

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            }

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                }

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                }

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                }

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                }

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                }

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                }

            }
        }
    }
}

}}

