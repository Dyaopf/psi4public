#include <libmints/vector.h>
#include "VWN_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

VWN_CFunctional::VWN_CFunctional()
{
    name_ = "VWN_C";
    description_ = "    VWN5 Correlation Functional\n";
    citation_ = "    S.H. Vosko, L. Wilk, and M. Nusair, Can. J. Phys., 58, 1200-1211, 1980\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = false;
    meta_ = false;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["d2fz0"] =   1.7099209341613653E+00;
    parameters_["EcP_1"] =   3.1090699999999999E-02;
    parameters_["EcP_2"] =  -1.0498000000000000E-01;
    parameters_["EcP_3"] =   3.7274400000000001E+00;
    parameters_["EcP_4"] =   1.2935200000000000E+01;
    parameters_["EcF_1"] =   1.5545349999999999E-02;
    parameters_["EcF_2"] =  -3.2500000000000001E-01;
    parameters_["EcF_3"] =   7.0604199999999997E+00;
    parameters_["EcF_4"] =   1.8057800000000000E+01;
    parameters_["Ac_1"] =  -1.6886863940389629E-02;
    parameters_["Ac_2"] =  -4.7584000000000003E-03;
    parameters_["Ac_3"] =   1.1310700000000000E+00;
    parameters_["Ac_4"] =   1.3004500000000000E+01;
    parameters_["two_13"] =   1.2599210498948732E+00;
}
VWN_CFunctional::~VWN_CFunctional()
{
}
void VWN_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double c = parameters_["c"];
    double d2fz0 = parameters_["d2fz0"];
    double EcP_1 = parameters_["EcP_1"];
    double EcP_2 = parameters_["EcP_2"];
    double EcP_3 = parameters_["EcP_3"];
    double EcP_4 = parameters_["EcP_4"];
    double EcF_1 = parameters_["EcF_1"];
    double EcF_2 = parameters_["EcF_2"];
    double EcF_3 = parameters_["EcF_3"];
    double EcF_4 = parameters_["EcF_4"];
    double Ac_1 = parameters_["Ac_1"];
    double Ac_2 = parameters_["Ac_2"];
    double Ac_3 = parameters_["Ac_3"];
    double Ac_4 = parameters_["Ac_4"];
    double two_13 = parameters_["two_13"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t18564 = rho_a+rho_b;
                double t18565 = 1.0/pow(t18564,1.0/3.0);
                double t18566 = c*t18565;
                double t18567 = sqrt(t18566);
                double t18568 = EcP_4*4.0;
                double t18569 = EcP_3*EcP_3;
                double t18570 = t18568-t18569;
                double t18571 = EcP_2-t18567;
                double t18572 = EcP_3*t18567;
                double t18573 = EcP_4+t18572+t18566;
                double t18574 = 1.0/t18573;
                double t18575 = sqrt(t18570);
                double t18576 = t18567*2.0;
                double t18577 = EcP_3+t18576;
                double t18578 = 1.0/t18577;
                double t18579 = t18575*t18578;
                double t18580 = atan(t18579);
                double t18581 = 1.0/sqrt(t18570);
                double t18582 = EcF_4*4.0;
                double t18583 = EcF_3*EcF_3;
                double t18584 = t18582-t18583;
                double t18585 = EcF_2-t18567;
                double t18586 = EcF_3*t18567;
                double t18587 = EcF_4+t18566+t18586;
                double t18588 = 1.0/t18587;
                double t18589 = sqrt(t18584);
                double t18590 = EcF_3+t18576;
                double t18591 = 1.0/t18590;
                double t18592 = t18591*t18589;
                double t18593 = atan(t18592);
                double t18594 = 1.0/sqrt(t18584);
                double t18595 = c*t18565*t18574;
                double t18596 = log(t18595);
                double t18597 = EcP_3*t18580*t18581*2.0;
                double t18598 = t18571*t18571;
                double t18599 = t18574*t18598;
                double t18600 = log(t18599);
                double t18601 = EcP_2*4.0;
                double t18602 = EcP_3*2.0;
                double t18603 = t18601+t18602;
                double t18604 = t18603*t18580*t18581;
                double t18605 = t18600+t18604;
                double t18606 = EcP_2*EcP_2;
                double t18607 = EcP_2*EcP_3;
                double t18608 = EcP_4+t18606+t18607;
                double t18609 = 1.0/t18608;
                double t18610 = t18596+t18597-EcP_2*EcP_3*t18605*t18609;
                double t18611 = EcP_1*t18610;
                v[Q] += scale * t18564*(t18611-((pow(2.0,1.0/3.0)*2.0-2.0)*(t18611-EcF_1*(log(c*t18565*t18588)+EcF_3*t18593*t18594*2.0-(EcF_2*EcF_3*(log((t18585*t18585)*t18588)+t18593*t18594*(EcF_2*4.0+EcF_3*2.0)))/(EcF_4+EcF_2*EcF_2+EcF_2*EcF_3))))/(two_13*2.0-2.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t18613 = rho_a+rho_b;
                double t18614 = 1.0/pow(t18613,1.0/3.0);
                double t18615 = c*t18614;
                double t18616 = sqrt(t18615);
                double t18617 = EcP_4*4.0;
                double t18618 = EcP_3*EcP_3;
                double t18619 = t18617-t18618;
                double t18620 = EcP_2-t18616;
                double t18621 = EcP_3*t18616;
                double t18622 = EcP_4+t18621+t18615;
                double t18623 = 1.0/t18622;
                double t18624 = sqrt(t18619);
                double t18625 = t18616*2.0;
                double t18626 = EcP_3+t18625;
                double t18627 = 1.0/t18626;
                double t18628 = t18624*t18627;
                double t18629 = atan(t18628);
                double t18630 = 1.0/sqrt(t18619);
                double t18631 = 1.0/pow(t18613,4.0/3.0);
                double t18632 = c*t18631*(1.0/3.0);
                double t18633 = 1.0/sqrt(t18615);
                double t18634 = EcP_3*c*t18631*t18633*(1.0/6.0);
                double t18635 = t18632+t18634;
                double t18636 = t18620*t18620;
                double t18637 = 1.0/(t18622*t18622);
                double t18638 = EcP_2*4.0;
                double t18639 = EcP_3*2.0;
                double t18640 = t18638+t18639;
                double t18641 = 1.0/(t18626*t18626);
                double t18642 = EcP_2*EcP_2;
                double t18643 = EcP_2*EcP_3;
                double t18644 = EcP_4+t18642+t18643;
                double t18645 = 1.0/t18644;
                double t18646 = t18641*t18619;
                double t18647 = t18646+1.0;
                double t18648 = 1.0/t18647;
                double t18649 = 1.0/c;
                double t18650 = EcF_3*t18616;
                double t18651 = EcF_4+t18650+t18615;
                double t18652 = pow(t18613,1.0/3.0);
                double t18653 = EcF_3*c*t18631*t18633*(1.0/6.0);
                double t18654 = t18632+t18653;
                double t18655 = EcF_2-t18616;
                double t18656 = 1.0/(t18651*t18651);
                double t18657 = 1.0/t18651;
                double t18658 = EcF_3+t18625;
                double t18659 = 1.0/(t18658*t18658);
                double t18660 = EcF_4*4.0;
                double t18661 = EcF_3*EcF_3;
                double t18662 = t18660-t18661;
                double t18663 = t18662*t18659;
                double t18664 = t18663+1.0;
                double t18665 = 1.0/t18664;
                double t18666 = c*t18631*t18623*(1.0/3.0);
                double t18667 = t18666-c*t18614*t18635*t18637;
                double t18668 = t18622*t18652*t18649*t18667;
                double t18669 = t18635*t18636*t18637;
                double t18670 = c*t18620*t18631*t18623*t18633*(1.0/3.0);
                double t18671 = t18670+t18669;
                double t18672 = 1.0/(t18620*t18620);
                double t18673 = t18622*t18671*t18672;
                double t18674 = c*t18631*t18640*t18641*t18633*t18648*(1.0/3.0);
                double t18675 = t18673+t18674;
                double t18676 = EcP_2*EcP_3*t18645*t18675;
                double t18677 = t18676+t18668-EcP_3*c*t18631*t18641*t18633*t18648*(2.0/3.0);
                double t18678 = EcP_1*t18677;
                double t18679 = pow(2.0,1.0/3.0);
                double t18680 = t18679*2.0;
                double t18681 = t18680-2.0;
                double t18682 = two_13*2.0;
                double t18683 = t18682-2.0;
                double t18684 = 1.0/t18683;
                double t18685 = t18655*t18655;
                double t18686 = sqrt(t18662);
                double t18687 = 1.0/t18658;
                double t18688 = t18686*t18687;
                double t18689 = atan(t18688);
                double t18690 = 1.0/sqrt(t18662);
                double t18691 = EcF_2*4.0;
                double t18692 = EcF_3*2.0;
                double t18693 = t18691+t18692;
                double t18694 = EcF_2*EcF_2;
                double t18695 = EcF_2*EcF_3;
                double t18696 = EcF_4+t18694+t18695;
                double t18697 = 1.0/t18696;
                double t18698 = c*t18614*t18623;
                double t18699 = log(t18698);
                double t18700 = EcP_3*t18630*t18629*2.0;
                double t18701 = t18623*t18636;
                double t18702 = log(t18701);
                double t18703 = t18630*t18640*t18629;
                double t18704 = t18702+t18703;
                double t18705 = t18700+t18699-EcP_2*EcP_3*t18704*t18645;
                double t18706 = EcP_1*t18705;
                v_rho_a[Q] += scale * t18706-t18613*(t18678-t18681*t18684*(t18678-EcF_1*(EcF_2*EcF_3*t18697*(t18651*1.0/(t18655*t18655)*(t18654*t18656*t18685+c*t18631*t18633*t18655*t18657*(1.0/3.0))+c*t18631*t18633*t18665*t18693*t18659*(1.0/3.0))+t18651*t18652*t18649*(c*t18631*t18657*(1.0/3.0)-c*t18614*t18654*t18656)-EcF_3*c*t18631*t18633*t18665*t18659*(2.0/3.0))))-t18681*t18684*(t18706-EcF_1*(log(c*t18614*t18657)+EcF_3*t18690*t18689*2.0-EcF_2*EcF_3*t18697*(log(t18657*t18685)+t18690*t18693*t18689)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t18708 = rho_a+rho_b;
                double t18709 = 1.0/pow(t18708,1.0/3.0);
                double t18710 = c*t18709;
                double t18711 = sqrt(t18710);
                double t18712 = EcP_4*4.0;
                double t18713 = EcP_3*EcP_3;
                double t18714 = t18712-t18713;
                double t18715 = EcP_2-t18711;
                double t18716 = EcP_3*t18711;
                double t18717 = EcP_4+t18710+t18716;
                double t18718 = 1.0/t18717;
                double t18719 = sqrt(t18714);
                double t18720 = t18711*2.0;
                double t18721 = EcP_3+t18720;
                double t18722 = 1.0/t18721;
                double t18723 = t18722*t18719;
                double t18724 = atan(t18723);
                double t18725 = 1.0/sqrt(t18714);
                double t18726 = 1.0/pow(t18708,4.0/3.0);
                double t18727 = c*t18726*(1.0/3.0);
                double t18728 = 1.0/sqrt(t18710);
                double t18729 = EcP_3*c*t18726*t18728*(1.0/6.0);
                double t18730 = t18727+t18729;
                double t18731 = t18715*t18715;
                double t18732 = 1.0/(t18717*t18717);
                double t18733 = EcP_2*4.0;
                double t18734 = EcP_3*2.0;
                double t18735 = t18733+t18734;
                double t18736 = 1.0/(t18721*t18721);
                double t18737 = EcP_2*EcP_2;
                double t18738 = EcP_2*EcP_3;
                double t18739 = EcP_4+t18737+t18738;
                double t18740 = 1.0/t18739;
                double t18741 = t18714*t18736;
                double t18742 = t18741+1.0;
                double t18743 = 1.0/t18742;
                double t18744 = 1.0/c;
                double t18745 = EcF_3*t18711;
                double t18746 = EcF_4+t18710+t18745;
                double t18747 = pow(t18708,1.0/3.0);
                double t18748 = EcF_3*c*t18726*t18728*(1.0/6.0);
                double t18749 = t18727+t18748;
                double t18750 = EcF_2-t18711;
                double t18751 = 1.0/(t18746*t18746);
                double t18752 = 1.0/t18746;
                double t18753 = EcF_3+t18720;
                double t18754 = 1.0/(t18753*t18753);
                double t18755 = EcF_4*4.0;
                double t18756 = EcF_3*EcF_3;
                double t18757 = t18755-t18756;
                double t18758 = t18754*t18757;
                double t18759 = t18758+1.0;
                double t18760 = 1.0/t18759;
                double t18761 = c*t18726*t18718*(1.0/3.0);
                double t18762 = t18761-c*t18730*t18732*t18709;
                double t18763 = t18717*t18744*t18762*t18747;
                double t18764 = t18730*t18731*t18732;
                double t18765 = c*t18715*t18726*t18718*t18728*(1.0/3.0);
                double t18766 = t18764+t18765;
                double t18767 = 1.0/(t18715*t18715);
                double t18768 = t18717*t18766*t18767;
                double t18769 = c*t18743*t18726*t18735*t18736*t18728*(1.0/3.0);
                double t18770 = t18768+t18769;
                double t18771 = EcP_2*EcP_3*t18740*t18770;
                double t18772 = t18771+t18763-EcP_3*c*t18743*t18726*t18736*t18728*(2.0/3.0);
                double t18773 = EcP_1*t18772;
                double t18774 = pow(2.0,1.0/3.0);
                double t18775 = t18774*2.0;
                double t18776 = t18775-2.0;
                double t18777 = two_13*2.0;
                double t18778 = t18777-2.0;
                double t18779 = 1.0/t18778;
                double t18780 = t18750*t18750;
                double t18781 = sqrt(t18757);
                double t18782 = 1.0/t18753;
                double t18783 = t18781*t18782;
                double t18784 = atan(t18783);
                double t18785 = 1.0/sqrt(t18757);
                double t18786 = EcF_2*4.0;
                double t18787 = EcF_3*2.0;
                double t18788 = t18786+t18787;
                double t18789 = EcF_2*EcF_2;
                double t18790 = EcF_2*EcF_3;
                double t18791 = EcF_4+t18790+t18789;
                double t18792 = 1.0/t18791;
                double t18793 = c*t18709*t18718;
                double t18794 = log(t18793);
                double t18795 = EcP_3*t18724*t18725*2.0;
                double t18796 = t18731*t18718;
                double t18797 = log(t18796);
                double t18798 = t18724*t18725*t18735;
                double t18799 = t18797+t18798;
                double t18800 = t18794+t18795-EcP_2*EcP_3*t18740*t18799;
                double t18801 = EcP_1*t18800;
                v_rho_b[Q] += scale * t18801-t18708*(t18773-t18776*t18779*(t18773-EcF_1*(EcF_2*EcF_3*t18792*(1.0/(t18750*t18750)*t18746*(t18751*t18780*t18749+c*t18750*t18752*t18726*t18728*(1.0/3.0))+c*t18760*t18726*t18754*t18728*t18788*(1.0/3.0))+t18744*t18746*t18747*(c*t18752*t18726*(1.0/3.0)-c*t18751*t18709*t18749)-EcF_3*c*t18760*t18726*t18754*t18728*(2.0/3.0))))-t18776*t18779*(t18801-EcF_1*(log(c*t18752*t18709)+EcF_3*t18784*t18785*2.0-EcF_2*EcF_3*t18792*(log(t18752*t18780)+t18784*t18785*t18788)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t18808 = rho_a+rho_b;
                double t18809 = 1.0/pow(t18808,1.0/3.0);
                double t18810 = c*t18809;
                double t18811 = 1.0/pow(t18808,4.0/3.0);
                double t18812 = sqrt(t18810);
                double t18813 = EcP_3*t18812;
                double t18814 = EcP_4+t18810+t18813;
                double t18815 = c*t18811*(1.0/3.0);
                double t18816 = 1.0/sqrt(t18810);
                double t18817 = EcP_3*c*t18811*t18816*(1.0/6.0);
                double t18818 = t18815+t18817;
                double t18819 = EcP_2-t18812;
                double t18820 = 1.0/(t18814*t18814);
                double t18821 = 1.0/t18814;
                double t18822 = t18812*2.0;
                double t18823 = EcP_3+t18822;
                double t18824 = 1.0/(t18823*t18823);
                double t18825 = EcP_4*4.0;
                double t18826 = EcP_3*EcP_3;
                double t18827 = t18825-t18826;
                double t18828 = t18824*t18827;
                double t18829 = t18828+1.0;
                double t18830 = 1.0/t18829;
                double t18831 = 1.0/c;
                double t18832 = c*t18811*t18821*(1.0/3.0);
                double t18835 = c*t18820*t18809*t18818;
                double t18833 = t18832-t18835;
                double t18834 = pow(t18808,1.0/3.0);
                double t18836 = 1.0/pow(t18808,7.0/3.0);
                double t18837 = EcP_2*EcP_2;
                double t18838 = EcP_2*EcP_3;
                double t18839 = EcP_4+t18837+t18838;
                double t18840 = 1.0/t18839;
                double t18841 = t18819*t18819;
                double t18842 = t18820*t18841*t18818;
                double t18843 = c*t18811*t18821*t18816*t18819*(1.0/3.0);
                double t18844 = t18842+t18843;
                double t18845 = 1.0/(t18819*t18819);
                double t18846 = c*t18836*(4.0/9.0);
                double t18847 = EcP_3*c*t18816*t18836*(2.0/9.0);
                double t18848 = c*c;
                double t18849 = 1.0/pow(t18808,8.0/3.0);
                double t18850 = 1.0/pow(t18810,3.0/2.0);
                double t18895 = EcP_3*t18850*t18848*t18849*(1.0/3.6E1);
                double t18851 = t18846+t18847-t18895;
                double t18852 = t18818*t18818;
                double t18853 = 1.0/(t18814*t18814*t18814);
                double t18854 = EcP_2*4.0;
                double t18855 = EcP_3*2.0;
                double t18856 = t18854+t18855;
                double t18857 = 1.0/(t18823*t18823*t18823);
                double t18858 = 1.0/(t18823*t18823*t18823*t18823*t18823);
                double t18859 = 1.0/(t18829*t18829);
                double t18860 = EcF_3*t18812;
                double t18861 = EcF_4+t18810+t18860;
                double t18862 = EcF_3*c*t18811*t18816*(1.0/6.0);
                double t18863 = t18815+t18862;
                double t18864 = 1.0/t18861;
                double t18865 = c*t18811*t18864*(1.0/3.0);
                double t18866 = 1.0/(t18861*t18861);
                double t18921 = c*t18809*t18863*t18866;
                double t18867 = -t18921+t18865;
                double t18868 = 1.0/pow(t18808,2.0/3.0);
                double t18869 = EcF_2-t18812;
                double t18870 = 1.0/(t18869*t18869);
                double t18871 = t18869*t18869;
                double t18872 = EcF_3*c*t18816*t18836*(2.0/9.0);
                double t18873 = t18872+t18846-EcF_3*t18850*t18848*t18849*(1.0/3.6E1);
                double t18874 = t18863*t18863;
                double t18875 = 1.0/(t18861*t18861*t18861);
                double t18876 = EcF_3+t18822;
                double t18877 = EcF_2*4.0;
                double t18878 = EcF_3*2.0;
                double t18879 = t18877+t18878;
                double t18880 = 1.0/(t18876*t18876);
                double t18881 = EcF_4*4.0;
                double t18882 = EcF_3*EcF_3;
                double t18883 = t18881-t18882;
                double t18884 = t18880*t18883;
                double t18885 = t18884+1.0;
                double t18886 = 1.0/t18885;
                double t18887 = t18871*t18863*t18866;
                double t18888 = c*t18811*t18816*t18864*t18869*(1.0/3.0);
                double t18889 = t18887+t18888;
                double t18890 = 1.0/(t18876*t18876*t18876);
                double t18891 = 1.0/(t18876*t18876*t18876*t18876*t18876);
                double t18892 = 1.0/(t18885*t18885);
                double t18893 = t18831*t18833*t18834*t18818;
                double t18894 = c*t18821*t18836*(4.0/9.0);
                double t18896 = c*t18852*t18853*t18809*2.0;
                double t18897 = t18894+t18896-c*t18811*t18820*t18818*(2.0/3.0)-c*t18820*t18851*t18809;
                double t18898 = t18831*t18814*t18834*t18897;
                double t18899 = t18844*t18818*t18845;
                double t18900 = c*t18821*t18836*(1.0/1.8E1);
                double t18901 = t18841*t18852*t18853*2.0;
                double t18902 = t18821*t18850*t18819*t18848*t18849*(1.0/1.8E1);
                double t18903 = c*t18811*t18820*t18816*t18818*t18819*(2.0/3.0);
                double t18904 = t18900+t18901+t18902+t18903-t18820*t18841*t18851-c*t18821*t18816*t18836*t18819*(4.0/9.0);
                double t18905 = c*t18830*t18824*t18816*t18836*t18856*(4.0/9.0);
                double t18906 = 1.0/(t18819*t18819*t18819);
                double t18907 = c*t18811*t18814*t18816*t18906*t18844*(1.0/3.0);
                double t18908 = c*t18827*t18836*t18856*t18858*t18859*(2.0/9.0);
                double t18909 = t18905+t18907+t18908+t18899-t18814*t18904*t18845-c*t18830*t18836*t18856*t18857*(2.0/9.0)-t18830*t18850*t18824*t18856*t18848*t18849*(1.0/1.8E1);
                double t18910 = EcP_2*EcP_3*t18840*t18909;
                double t18911 = EcP_3*c*t18830*t18836*t18857*(4.0/9.0);
                double t18912 = EcP_3*t18830*t18850*t18824*t18848*t18849*(1.0/9.0);
                double t18913 = t18910+t18911+t18912+t18893+t18898-t18831*t18814*t18833*t18868*(1.0/3.0)-EcP_3*c*t18830*t18824*t18816*t18836*(8.0/9.0)-EcP_3*c*t18827*t18836*t18858*t18859*(4.0/9.0);
                double t18914 = EcP_1*t18913;
                double t18915 = pow(2.0,1.0/3.0);
                double t18916 = t18915*2.0;
                double t18917 = t18916-2.0;
                double t18918 = two_13*2.0;
                double t18919 = t18918-2.0;
                double t18920 = 1.0/t18919;
                double t18922 = EcF_2*EcF_2;
                double t18923 = EcF_2*EcF_3;
                double t18924 = EcF_4+t18922+t18923;
                double t18925 = 1.0/t18924;
                double t18926 = t18831*t18814*t18833*t18834;
                double t18927 = t18814*t18844*t18845;
                double t18928 = c*t18811*t18830*t18824*t18816*t18856*(1.0/3.0);
                double t18929 = t18927+t18928;
                double t18930 = EcP_2*EcP_3*t18840*t18929;
                double t18931 = t18930+t18926-EcP_3*c*t18811*t18830*t18824*t18816*(2.0/3.0);
                v_rho_a_rho_a[Q] += scale * EcP_1*t18931*-2.0+t18808*(t18914-t18920*t18917*(t18914-EcF_1*(t18831*t18834*t18861*(c*t18836*t18864*(4.0/9.0)-c*t18811*t18863*t18866*(2.0/3.0)-c*t18809*t18873*t18866+c*t18809*t18874*t18875*2.0)+t18831*t18834*t18863*t18867-t18831*t18861*t18867*t18868*(1.0/3.0)+EcF_2*EcF_3*t18925*(-t18861*t18870*(c*t18836*t18864*(1.0/1.8E1)-t18871*t18873*t18866+t18871*t18874*t18875*2.0-c*t18816*t18836*t18864*t18869*(4.0/9.0)+t18850*t18864*t18848*t18849*t18869*(1.0/1.8E1)+c*t18811*t18816*t18863*t18866*t18869*(2.0/3.0))+t18870*t18863*t18889-c*t18836*t18890*t18886*t18879*(2.0/9.0)+c*t18816*t18880*t18836*t18886*t18879*(4.0/9.0)+c*t18836*t18891*t18883*t18892*t18879*(2.0/9.0)-t18850*t18880*t18848*t18849*t18886*t18879*(1.0/1.8E1)+c*t18811*t18816*t18861*1.0/(t18869*t18869*t18869)*t18889*(1.0/3.0))+EcF_3*c*t18836*t18890*t18886*(4.0/9.0)-EcF_3*c*t18816*t18880*t18836*t18886*(8.0/9.0)-EcF_3*c*t18836*t18891*t18883*t18892*(4.0/9.0)+EcF_3*t18850*t18880*t18848*t18849*t18886*(1.0/9.0))))+t18920*t18917*(EcP_1*t18931-EcF_1*(t18831*t18834*t18861*t18867+EcF_2*EcF_3*t18925*(t18861*t18870*t18889+c*t18811*t18816*t18880*t18886*t18879*(1.0/3.0))-EcF_3*c*t18811*t18816*t18880*t18886*(2.0/3.0)))*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t18933 = rho_a+rho_b;
                double t18934 = 1.0/pow(t18933,1.0/3.0);
                double t18935 = c*t18934;
                double t18936 = 1.0/pow(t18933,4.0/3.0);
                double t18937 = sqrt(t18935);
                double t18938 = EcP_3*t18937;
                double t18939 = EcP_4+t18935+t18938;
                double t18940 = c*t18936*(1.0/3.0);
                double t18941 = 1.0/sqrt(t18935);
                double t18942 = EcP_3*c*t18941*t18936*(1.0/6.0);
                double t18943 = t18940+t18942;
                double t18944 = EcP_2-t18937;
                double t18945 = 1.0/(t18939*t18939);
                double t18946 = 1.0/t18939;
                double t18947 = t18937*2.0;
                double t18948 = EcP_3+t18947;
                double t18949 = 1.0/(t18948*t18948);
                double t18950 = EcP_4*4.0;
                double t18951 = EcP_3*EcP_3;
                double t18952 = t18950-t18951;
                double t18953 = t18952*t18949;
                double t18954 = t18953+1.0;
                double t18955 = 1.0/t18954;
                double t18956 = 1.0/c;
                double t18957 = c*t18936*t18946*(1.0/3.0);
                double t18960 = c*t18934*t18943*t18945;
                double t18958 = -t18960+t18957;
                double t18959 = pow(t18933,1.0/3.0);
                double t18961 = 1.0/pow(t18933,7.0/3.0);
                double t18962 = EcP_2*EcP_2;
                double t18963 = EcP_2*EcP_3;
                double t18964 = EcP_4+t18962+t18963;
                double t18965 = 1.0/t18964;
                double t18966 = t18944*t18944;
                double t18967 = t18943*t18945*t18966;
                double t18968 = c*t18941*t18944*t18936*t18946*(1.0/3.0);
                double t18969 = t18967+t18968;
                double t18970 = 1.0/(t18944*t18944);
                double t18971 = c*t18961*(4.0/9.0);
                double t18972 = EcP_3*c*t18941*t18961*(2.0/9.0);
                double t18973 = c*c;
                double t18974 = 1.0/pow(t18933,8.0/3.0);
                double t18975 = 1.0/pow(t18935,3.0/2.0);
                double t19020 = EcP_3*t18973*t18974*t18975*(1.0/3.6E1);
                double t18976 = t18971+t18972-t19020;
                double t18977 = t18943*t18943;
                double t18978 = 1.0/(t18939*t18939*t18939);
                double t18979 = EcP_2*4.0;
                double t18980 = EcP_3*2.0;
                double t18981 = t18980+t18979;
                double t18982 = 1.0/(t18948*t18948*t18948);
                double t18983 = 1.0/(t18948*t18948*t18948*t18948*t18948);
                double t18984 = 1.0/(t18954*t18954);
                double t18985 = EcF_3*t18937;
                double t18986 = EcF_4+t18935+t18985;
                double t18987 = EcF_3*c*t18941*t18936*(1.0/6.0);
                double t18988 = t18940+t18987;
                double t18989 = 1.0/t18986;
                double t18990 = c*t18936*t18989*(1.0/3.0);
                double t18991 = 1.0/(t18986*t18986);
                double t19046 = c*t18934*t18991*t18988;
                double t18992 = t18990-t19046;
                double t18993 = 1.0/pow(t18933,2.0/3.0);
                double t18994 = EcF_2-t18937;
                double t18995 = 1.0/(t18994*t18994);
                double t18996 = t18994*t18994;
                double t18997 = EcF_3*c*t18941*t18961*(2.0/9.0);
                double t18998 = t18971+t18997-EcF_3*t18973*t18974*t18975*(1.0/3.6E1);
                double t18999 = t18988*t18988;
                double t19000 = 1.0/(t18986*t18986*t18986);
                double t19001 = EcF_3+t18947;
                double t19002 = EcF_2*4.0;
                double t19003 = EcF_3*2.0;
                double t19004 = t19002+t19003;
                double t19005 = 1.0/(t19001*t19001);
                double t19006 = EcF_4*4.0;
                double t19007 = EcF_3*EcF_3;
                double t19008 = t19006-t19007;
                double t19009 = t19005*t19008;
                double t19010 = t19009+1.0;
                double t19011 = 1.0/t19010;
                double t19012 = t18991*t18996*t18988;
                double t19013 = c*t18941*t18936*t18994*t18989*(1.0/3.0);
                double t19014 = t19012+t19013;
                double t19015 = 1.0/(t19001*t19001*t19001);
                double t19016 = 1.0/(t19001*t19001*t19001*t19001*t19001);
                double t19017 = 1.0/(t19010*t19010);
                double t19018 = t18943*t18956*t18958*t18959;
                double t19019 = c*t18961*t18946*(4.0/9.0);
                double t19021 = c*t18934*t18977*t18978*2.0;
                double t19022 = t19021+t19019-c*t18943*t18936*t18945*(2.0/3.0)-c*t18934*t18945*t18976;
                double t19023 = t18956*t18939*t18959*t19022;
                double t19024 = t18943*t18970*t18969;
                double t19025 = c*t18961*t18946*(1.0/1.8E1);
                double t19026 = t18966*t18977*t18978*2.0;
                double t19027 = t18944*t18946*t18973*t18974*t18975*(1.0/1.8E1);
                double t19028 = c*t18941*t18943*t18944*t18936*t18945*(2.0/3.0);
                double t19029 = t19025+t19026+t19027+t19028-t18945*t18966*t18976-c*t18941*t18961*t18944*t18946*(4.0/9.0);
                double t19030 = c*t18941*t18961*t18981*t18955*t18949*(4.0/9.0);
                double t19031 = 1.0/(t18944*t18944*t18944);
                double t19032 = c*t18941*t18936*t18939*t18969*t19031*(1.0/3.0);
                double t19033 = c*t18952*t18961*t18981*t18983*t18984*(2.0/9.0);
                double t19034 = t19030+t19032+t19024+t19033-t18970*t18939*t19029-c*t18961*t18981*t18955*t18982*(2.0/9.0)-t18981*t18955*t18973*t18974*t18975*t18949*(1.0/1.8E1);
                double t19035 = EcP_2*EcP_3*t18965*t19034;
                double t19036 = EcP_3*c*t18961*t18955*t18982*(4.0/9.0);
                double t19037 = EcP_3*t18955*t18973*t18974*t18975*t18949*(1.0/9.0);
                double t19038 = t19023+t19035+t19018+t19036+t19037-t18956*t18939*t18993*t18958*(1.0/3.0)-EcP_3*c*t18941*t18961*t18955*t18949*(8.0/9.0)-EcP_3*c*t18952*t18961*t18983*t18984*(4.0/9.0);
                double t19039 = EcP_1*t19038;
                double t19040 = pow(2.0,1.0/3.0);
                double t19041 = t19040*2.0;
                double t19042 = t19041-2.0;
                double t19043 = two_13*2.0;
                double t19044 = t19043-2.0;
                double t19045 = 1.0/t19044;
                double t19047 = EcF_2*EcF_2;
                double t19048 = EcF_2*EcF_3;
                double t19049 = EcF_4+t19047+t19048;
                double t19050 = 1.0/t19049;
                double t19051 = t18956*t18939*t18958*t18959;
                double t19052 = t18970*t18939*t18969;
                double t19053 = c*t18941*t18936*t18981*t18955*t18949*(1.0/3.0);
                double t19054 = t19052+t19053;
                double t19055 = EcP_2*EcP_3*t18965*t19054;
                double t19056 = t19051+t19055-EcP_3*c*t18941*t18936*t18955*t18949*(2.0/3.0);
                v_rho_a_rho_b[Q] += scale * EcP_1*t19056*-2.0+t18933*(t19039-t19042*t19045*(t19039-EcF_1*(t18956*t18959*t18986*(c*t18961*t18989*(4.0/9.0)-c*t18934*t18991*t18998-c*t18936*t18991*t18988*(2.0/3.0)+c*t18934*t18999*t19000*2.0)-t18956*t18992*t18993*t18986*(1.0/3.0)+t18956*t18992*t18959*t18988+EcF_2*EcF_3*t19050*(-t18986*t18995*(c*t18961*t18989*(1.0/1.8E1)-t18991*t18996*t18998+t18996*t18999*t19000*2.0-c*t18941*t18961*t18994*t18989*(4.0/9.0)+t18973*t18974*t18975*t18994*t18989*(1.0/1.8E1)+c*t18941*t18936*t18991*t18994*t18988*(2.0/3.0))+t18995*t18988*t19014-c*t18961*t19011*t19004*t19015*(2.0/9.0)+c*t18941*t18961*t19011*t19004*t19005*(4.0/9.0)+c*t18961*t19004*t19016*t19008*t19017*(2.0/9.0)-t18973*t18974*t18975*t19011*t19004*t19005*(1.0/1.8E1)+c*t18941*t18936*1.0/(t18994*t18994*t18994)*t18986*t19014*(1.0/3.0))+EcF_3*c*t18961*t19011*t19015*(4.0/9.0)-EcF_3*c*t18941*t18961*t19011*t19005*(8.0/9.0)-EcF_3*c*t18961*t19016*t19008*t19017*(4.0/9.0)+EcF_3*t18973*t18974*t18975*t19011*t19005*(1.0/9.0))))+t19042*t19045*(EcP_1*t19056-EcF_1*(t18956*t18992*t18959*t18986+EcF_2*EcF_3*t19050*(t18986*t18995*t19014+c*t18941*t18936*t19011*t19004*t19005*(1.0/3.0))-EcF_3*c*t18941*t18936*t19011*t19005*(2.0/3.0)))*2.0;
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t19058 = rho_a+rho_b;
                double t19059 = 1.0/pow(t19058,1.0/3.0);
                double t19060 = c*t19059;
                double t19061 = 1.0/pow(t19058,4.0/3.0);
                double t19062 = sqrt(t19060);
                double t19063 = EcP_3*t19062;
                double t19064 = EcP_4+t19060+t19063;
                double t19065 = c*t19061*(1.0/3.0);
                double t19066 = 1.0/sqrt(t19060);
                double t19067 = EcP_3*c*t19061*t19066*(1.0/6.0);
                double t19068 = t19065+t19067;
                double t19069 = EcP_2-t19062;
                double t19070 = 1.0/(t19064*t19064);
                double t19071 = 1.0/t19064;
                double t19072 = t19062*2.0;
                double t19073 = EcP_3+t19072;
                double t19074 = 1.0/(t19073*t19073);
                double t19075 = EcP_4*4.0;
                double t19076 = EcP_3*EcP_3;
                double t19077 = t19075-t19076;
                double t19078 = t19074*t19077;
                double t19079 = t19078+1.0;
                double t19080 = 1.0/t19079;
                double t19081 = 1.0/c;
                double t19082 = c*t19061*t19071*(1.0/3.0);
                double t19085 = c*t19070*t19059*t19068;
                double t19083 = t19082-t19085;
                double t19084 = pow(t19058,1.0/3.0);
                double t19086 = 1.0/pow(t19058,7.0/3.0);
                double t19087 = EcP_2*EcP_2;
                double t19088 = EcP_2*EcP_3;
                double t19089 = EcP_4+t19087+t19088;
                double t19090 = 1.0/t19089;
                double t19091 = t19069*t19069;
                double t19092 = t19070*t19091*t19068;
                double t19093 = c*t19061*t19071*t19066*t19069*(1.0/3.0);
                double t19094 = t19092+t19093;
                double t19095 = 1.0/(t19069*t19069);
                double t19096 = c*t19086*(4.0/9.0);
                double t19097 = EcP_3*c*t19066*t19086*(2.0/9.0);
                double t19098 = c*c;
                double t19099 = 1.0/pow(t19058,8.0/3.0);
                double t19100 = 1.0/pow(t19060,3.0/2.0);
                double t19145 = EcP_3*t19100*t19098*t19099*(1.0/3.6E1);
                double t19101 = -t19145+t19096+t19097;
                double t19102 = t19068*t19068;
                double t19103 = 1.0/(t19064*t19064*t19064);
                double t19104 = EcP_2*4.0;
                double t19105 = EcP_3*2.0;
                double t19106 = t19104+t19105;
                double t19107 = 1.0/(t19073*t19073*t19073);
                double t19108 = 1.0/(t19073*t19073*t19073*t19073*t19073);
                double t19109 = 1.0/(t19079*t19079);
                double t19110 = EcF_3*t19062;
                double t19111 = EcF_4+t19110+t19060;
                double t19112 = EcF_3*c*t19061*t19066*(1.0/6.0);
                double t19113 = t19112+t19065;
                double t19114 = 1.0/t19111;
                double t19115 = c*t19114*t19061*(1.0/3.0);
                double t19116 = 1.0/(t19111*t19111);
                double t19171 = c*t19113*t19116*t19059;
                double t19117 = t19115-t19171;
                double t19118 = 1.0/pow(t19058,2.0/3.0);
                double t19119 = EcF_2-t19062;
                double t19120 = 1.0/(t19119*t19119);
                double t19121 = t19119*t19119;
                double t19122 = EcF_3*c*t19066*t19086*(2.0/9.0);
                double t19123 = t19122+t19096-EcF_3*t19100*t19098*t19099*(1.0/3.6E1);
                double t19124 = t19113*t19113;
                double t19125 = 1.0/(t19111*t19111*t19111);
                double t19126 = EcF_3+t19072;
                double t19127 = EcF_2*4.0;
                double t19128 = EcF_3*2.0;
                double t19129 = t19127+t19128;
                double t19130 = 1.0/(t19126*t19126);
                double t19131 = EcF_4*4.0;
                double t19132 = EcF_3*EcF_3;
                double t19133 = t19131-t19132;
                double t19134 = t19130*t19133;
                double t19135 = t19134+1.0;
                double t19136 = 1.0/t19135;
                double t19137 = t19121*t19113*t19116;
                double t19138 = c*t19114*t19061*t19119*t19066*(1.0/3.0);
                double t19139 = t19137+t19138;
                double t19140 = 1.0/(t19126*t19126*t19126);
                double t19141 = 1.0/(t19126*t19126*t19126*t19126*t19126);
                double t19142 = 1.0/(t19135*t19135);
                double t19143 = t19081*t19083*t19084*t19068;
                double t19144 = c*t19071*t19086*(4.0/9.0);
                double t19146 = c*t19102*t19103*t19059*2.0;
                double t19147 = t19144+t19146-c*t19101*t19070*t19059-c*t19061*t19070*t19068*(2.0/3.0);
                double t19148 = t19081*t19064*t19084*t19147;
                double t19149 = t19094*t19068*t19095;
                double t19150 = c*t19071*t19086*(1.0/1.8E1);
                double t19151 = t19102*t19103*t19091*2.0;
                double t19152 = t19100*t19071*t19069*t19098*t19099*(1.0/1.8E1);
                double t19153 = c*t19061*t19070*t19066*t19068*t19069*(2.0/3.0);
                double t19154 = t19150+t19151+t19152+t19153-t19101*t19070*t19091-c*t19071*t19066*t19086*t19069*(4.0/9.0);
                double t19155 = c*t19106*t19080*t19074*t19066*t19086*(4.0/9.0);
                double t19156 = 1.0/(t19069*t19069*t19069);
                double t19157 = c*t19061*t19064*t19066*t19156*t19094*(1.0/3.0);
                double t19158 = c*t19106*t19108*t19109*t19077*t19086*(2.0/9.0);
                double t19159 = t19155+t19157+t19149+t19158-t19064*t19154*t19095-c*t19106*t19080*t19107*t19086*(2.0/9.0)-t19100*t19106*t19080*t19074*t19098*t19099*(1.0/1.8E1);
                double t19160 = EcP_2*EcP_3*t19090*t19159;
                double t19161 = EcP_3*c*t19080*t19107*t19086*(4.0/9.0);
                double t19162 = EcP_3*t19100*t19080*t19074*t19098*t19099*(1.0/9.0);
                double t19163 = t19160+t19143+t19161+t19162+t19148-t19081*t19064*t19118*t19083*(1.0/3.0)-EcP_3*c*t19080*t19074*t19066*t19086*(8.0/9.0)-EcP_3*c*t19108*t19109*t19077*t19086*(4.0/9.0);
                double t19164 = EcP_1*t19163;
                double t19165 = pow(2.0,1.0/3.0);
                double t19166 = t19165*2.0;
                double t19167 = t19166-2.0;
                double t19168 = two_13*2.0;
                double t19169 = t19168-2.0;
                double t19170 = 1.0/t19169;
                double t19172 = EcF_2*EcF_2;
                double t19173 = EcF_2*EcF_3;
                double t19174 = EcF_4+t19172+t19173;
                double t19175 = 1.0/t19174;
                double t19176 = t19081*t19064*t19083*t19084;
                double t19177 = t19064*t19094*t19095;
                double t19178 = c*t19061*t19106*t19080*t19074*t19066*(1.0/3.0);
                double t19179 = t19177+t19178;
                double t19180 = EcP_2*EcP_3*t19090*t19179;
                double t19181 = t19180+t19176-EcP_3*c*t19061*t19080*t19074*t19066*(2.0/3.0);
                v_rho_b_rho_b[Q] += scale * EcP_1*t19181*-2.0+t19058*(t19164-t19170*t19167*(t19164-EcF_1*(t19111*t19081*t19084*(c*t19114*t19086*(4.0/9.0)-c*t19113*t19061*t19116*(2.0/3.0)-c*t19123*t19116*t19059+c*t19124*t19125*t19059*2.0)-t19111*t19081*t19117*t19118*(1.0/3.0)+t19113*t19081*t19117*t19084+EcF_2*EcF_3*t19175*(-t19111*t19120*(c*t19114*t19086*(1.0/1.8E1)-t19121*t19123*t19116+t19121*t19124*t19125*2.0-c*t19114*t19119*t19066*t19086*(4.0/9.0)+t19100*t19114*t19119*t19098*t19099*(1.0/1.8E1)+c*t19113*t19061*t19116*t19119*t19066*(2.0/3.0))+t19120*t19113*t19139-c*t19140*t19136*t19129*t19086*(2.0/9.0)+c*t19141*t19133*t19142*t19129*t19086*(2.0/9.0)+c*t19130*t19136*t19066*t19129*t19086*(4.0/9.0)-t19100*t19130*t19136*t19129*t19098*t19099*(1.0/1.8E1)+c*t19111*t19061*1.0/(t19119*t19119*t19119)*t19066*t19139*(1.0/3.0))+EcF_3*c*t19140*t19136*t19086*(4.0/9.0)-EcF_3*c*t19141*t19133*t19142*t19086*(4.0/9.0)-EcF_3*c*t19130*t19136*t19066*t19086*(8.0/9.0)+EcF_3*t19100*t19130*t19136*t19098*t19099*(1.0/9.0))))+t19170*t19167*(EcP_1*t19181-EcF_1*(t19111*t19081*t19117*t19084+EcF_2*EcF_3*t19175*(t19111*t19120*t19139+c*t19130*t19061*t19136*t19066*t19129*(1.0/3.0))-EcF_3*c*t19130*t19061*t19136*t19066*(2.0/3.0)))*2.0;
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t19208 = rho_a+rho_b;
                double t19209 = 1.0/pow(t19208,1.0/3.0);
                double t19210 = c*t19209;
                double t19211 = sqrt(t19210);
                double t19212 = EcP_4*4.0;
                double t19213 = EcP_3*EcP_3;
                double t19214 = t19212-t19213;
                double t19215 = EcP_2-t19211;
                double t19216 = EcP_3*t19211;
                double t19217 = EcP_4+t19210+t19216;
                double t19218 = 1.0/t19217;
                double t19219 = sqrt(t19214);
                double t19220 = t19211*2.0;
                double t19221 = EcP_3+t19220;
                double t19222 = 1.0/t19221;
                double t19223 = t19222*t19219;
                double t19224 = atan(t19223);
                double t19225 = 1.0/sqrt(t19214);
                double t19226 = EcF_4*4.0;
                double t19227 = EcF_3*EcF_3;
                double t19228 = t19226-t19227;
                double t19229 = EcF_2-t19211;
                double t19230 = EcF_3*t19211;
                double t19231 = EcF_4+t19210+t19230;
                double t19232 = 1.0/t19231;
                double t19233 = sqrt(t19228);
                double t19234 = EcF_3+t19220;
                double t19235 = 1.0/t19234;
                double t19236 = t19233*t19235;
                double t19237 = atan(t19236);
                double t19238 = 1.0/sqrt(t19228);
                double t19239 = c*t19209*t19218;
                double t19240 = log(t19239);
                double t19241 = EcP_3*t19224*t19225*2.0;
                double t19242 = t19215*t19215;
                double t19243 = t19242*t19218;
                double t19244 = log(t19243);
                double t19245 = EcP_2*4.0;
                double t19246 = EcP_3*2.0;
                double t19247 = t19245+t19246;
                double t19248 = t19224*t19225*t19247;
                double t19249 = t19244+t19248;
                double t19250 = EcP_2*EcP_2;
                double t19251 = EcP_2*EcP_3;
                double t19252 = EcP_4+t19250+t19251;
                double t19253 = 1.0/t19252;
                double t19254 = t19240+t19241-EcP_2*EcP_3*t19253*t19249;
                double t19255 = EcP_1*t19254;
                v[Q] += scale * t19208*(t19255-((pow(2.0,1.0/3.0)*2.0-2.0)*(t19255-EcF_1*(log(c*t19232*t19209)+EcF_3*t19237*t19238*2.0-(EcF_2*EcF_3*(log(t19232*(t19229*t19229))+t19237*t19238*(EcF_2*4.0+EcF_3*2.0)))/(EcF_4+EcF_2*EcF_2+EcF_2*EcF_3))))/(two_13*2.0-2.0));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t19257 = rho_a+rho_b;
                double t19258 = 1.0/pow(t19257,1.0/3.0);
                double t19259 = c*t19258;
                double t19260 = sqrt(t19259);
                double t19261 = EcP_4*4.0;
                double t19262 = EcP_3*EcP_3;
                double t19263 = t19261-t19262;
                double t19264 = EcP_2-t19260;
                double t19265 = EcP_3*t19260;
                double t19266 = EcP_4+t19265+t19259;
                double t19267 = 1.0/t19266;
                double t19268 = sqrt(t19263);
                double t19269 = t19260*2.0;
                double t19270 = EcP_3+t19269;
                double t19271 = 1.0/t19270;
                double t19272 = t19271*t19268;
                double t19273 = atan(t19272);
                double t19274 = 1.0/sqrt(t19263);
                double t19275 = 1.0/pow(t19257,4.0/3.0);
                double t19276 = c*t19275*(1.0/3.0);
                double t19277 = 1.0/sqrt(t19259);
                double t19278 = EcP_3*c*t19275*t19277*(1.0/6.0);
                double t19279 = t19276+t19278;
                double t19280 = t19264*t19264;
                double t19281 = 1.0/(t19266*t19266);
                double t19282 = EcP_2*4.0;
                double t19283 = EcP_3*2.0;
                double t19284 = t19282+t19283;
                double t19285 = 1.0/(t19270*t19270);
                double t19286 = EcP_2*EcP_2;
                double t19287 = EcP_2*EcP_3;
                double t19288 = EcP_4+t19286+t19287;
                double t19289 = 1.0/t19288;
                double t19290 = t19263*t19285;
                double t19291 = t19290+1.0;
                double t19292 = 1.0/t19291;
                double t19293 = 1.0/c;
                double t19294 = EcF_3*t19260;
                double t19295 = EcF_4+t19294+t19259;
                double t19296 = pow(t19257,1.0/3.0);
                double t19297 = EcF_3*c*t19275*t19277*(1.0/6.0);
                double t19298 = t19276+t19297;
                double t19299 = EcF_2-t19260;
                double t19300 = 1.0/(t19295*t19295);
                double t19301 = 1.0/t19295;
                double t19302 = EcF_3+t19269;
                double t19303 = 1.0/(t19302*t19302);
                double t19304 = EcF_4*4.0;
                double t19305 = EcF_3*EcF_3;
                double t19306 = t19304-t19305;
                double t19307 = t19303*t19306;
                double t19308 = t19307+1.0;
                double t19309 = 1.0/t19308;
                double t19310 = c*t19275*t19267*(1.0/3.0);
                double t19311 = t19310-c*t19281*t19258*t19279;
                double t19312 = t19311*t19266*t19293*t19296;
                double t19313 = t19280*t19281*t19279;
                double t19314 = c*t19264*t19275*t19267*t19277*(1.0/3.0);
                double t19315 = t19313+t19314;
                double t19316 = 1.0/(t19264*t19264);
                double t19317 = t19315*t19316*t19266;
                double t19318 = c*t19292*t19275*t19284*t19285*t19277*(1.0/3.0);
                double t19319 = t19317+t19318;
                double t19320 = EcP_2*EcP_3*t19319*t19289;
                double t19321 = t19320+t19312-EcP_3*c*t19292*t19275*t19285*t19277*(2.0/3.0);
                double t19322 = EcP_1*t19321;
                double t19323 = pow(2.0,1.0/3.0);
                double t19324 = t19323*2.0;
                double t19325 = t19324-2.0;
                double t19326 = two_13*2.0;
                double t19327 = t19326-2.0;
                double t19328 = 1.0/t19327;
                double t19329 = t19299*t19299;
                double t19330 = sqrt(t19306);
                double t19331 = 1.0/t19302;
                double t19332 = t19330*t19331;
                double t19333 = atan(t19332);
                double t19334 = 1.0/sqrt(t19306);
                double t19335 = EcF_2*4.0;
                double t19336 = EcF_3*2.0;
                double t19337 = t19335+t19336;
                double t19338 = EcF_2*EcF_2;
                double t19339 = EcF_2*EcF_3;
                double t19340 = EcF_4+t19338+t19339;
                double t19341 = 1.0/t19340;
                double t19342 = c*t19258*t19267;
                double t19343 = log(t19342);
                double t19344 = EcP_3*t19273*t19274*2.0;
                double t19345 = t19280*t19267;
                double t19346 = log(t19345);
                double t19347 = t19273*t19274*t19284;
                double t19348 = t19346+t19347;
                double t19349 = t19343+t19344-EcP_2*EcP_3*t19348*t19289;
                double t19350 = EcP_1*t19349;
                v_rho_a[Q] += scale * t19350-t19257*(t19322-t19325*t19328*(t19322-EcF_1*(EcF_2*EcF_3*t19341*(t19295*1.0/(t19299*t19299)*(t19300*t19329*t19298+c*t19301*t19275*t19277*t19299*(1.0/3.0))+c*t19303*t19309*t19337*t19275*t19277*(1.0/3.0))+t19293*t19295*t19296*(c*t19301*t19275*(1.0/3.0)-c*t19300*t19258*t19298)-EcF_3*c*t19303*t19309*t19275*t19277*(2.0/3.0))))-t19325*t19328*(t19350-EcF_1*(log(c*t19301*t19258)+EcF_3*t19333*t19334*2.0-EcF_2*EcF_3*t19341*(log(t19301*t19329)+t19333*t19334*t19337)));
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t19352 = rho_a+rho_b;
                double t19353 = 1.0/pow(t19352,1.0/3.0);
                double t19354 = c*t19353;
                double t19355 = sqrt(t19354);
                double t19356 = EcP_4*4.0;
                double t19357 = EcP_3*EcP_3;
                double t19358 = t19356-t19357;
                double t19359 = EcP_2-t19355;
                double t19360 = EcP_3*t19355;
                double t19361 = EcP_4+t19360+t19354;
                double t19362 = 1.0/t19361;
                double t19363 = sqrt(t19358);
                double t19364 = t19355*2.0;
                double t19365 = EcP_3+t19364;
                double t19366 = 1.0/t19365;
                double t19367 = t19363*t19366;
                double t19368 = atan(t19367);
                double t19369 = 1.0/sqrt(t19358);
                double t19370 = 1.0/pow(t19352,4.0/3.0);
                double t19371 = c*t19370*(1.0/3.0);
                double t19372 = 1.0/sqrt(t19354);
                double t19373 = EcP_3*c*t19370*t19372*(1.0/6.0);
                double t19374 = t19371+t19373;
                double t19375 = t19359*t19359;
                double t19376 = 1.0/(t19361*t19361);
                double t19377 = EcP_2*4.0;
                double t19378 = EcP_3*2.0;
                double t19379 = t19377+t19378;
                double t19380 = 1.0/(t19365*t19365);
                double t19381 = EcP_2*EcP_2;
                double t19382 = EcP_2*EcP_3;
                double t19383 = EcP_4+t19381+t19382;
                double t19384 = 1.0/t19383;
                double t19385 = t19380*t19358;
                double t19386 = t19385+1.0;
                double t19387 = 1.0/t19386;
                double t19388 = 1.0/c;
                double t19389 = EcF_3*t19355;
                double t19390 = EcF_4+t19354+t19389;
                double t19391 = pow(t19352,1.0/3.0);
                double t19392 = EcF_3*c*t19370*t19372*(1.0/6.0);
                double t19393 = t19371+t19392;
                double t19394 = EcF_2-t19355;
                double t19395 = 1.0/(t19390*t19390);
                double t19396 = 1.0/t19390;
                double t19397 = EcF_3+t19364;
                double t19398 = 1.0/(t19397*t19397);
                double t19399 = EcF_4*4.0;
                double t19400 = EcF_3*EcF_3;
                double t19401 = t19400-t19399;
                double t19402 = t19401*t19398;
                double t19403 = t19402-1.0;
                double t19404 = 1.0/t19403;
                double t19405 = c*t19370*t19362*(1.0/3.0);
                double t19406 = t19405-c*t19353*t19374*t19376;
                double t19407 = t19361*t19406*t19391*t19388;
                double t19408 = t19374*t19375*t19376;
                double t19409 = c*t19370*t19362*t19372*t19359*(1.0/3.0);
                double t19410 = t19408+t19409;
                double t19411 = 1.0/(t19359*t19359);
                double t19412 = t19410*t19411*t19361;
                double t19413 = c*t19370*t19380*t19372*t19387*t19379*(1.0/3.0);
                double t19414 = t19412+t19413;
                double t19415 = EcP_2*EcP_3*t19414*t19384;
                double t19416 = t19415+t19407-EcP_3*c*t19370*t19380*t19372*t19387*(2.0/3.0);
                double t19417 = EcP_1*t19416;
                double t19418 = pow(2.0,1.0/3.0);
                double t19419 = t19418*2.0;
                double t19420 = t19419-2.0;
                double t19421 = two_13*2.0;
                double t19422 = t19421-2.0;
                double t19423 = 1.0/t19422;
                double t19424 = -t19400+t19399;
                double t19425 = t19394*t19394;
                double t19426 = sqrt(t19424);
                double t19427 = 1.0/t19397;
                double t19428 = t19426*t19427;
                double t19429 = atan(t19428);
                double t19430 = 1.0/sqrt(t19424);
                double t19431 = EcF_2*4.0;
                double t19432 = EcF_3*2.0;
                double t19433 = t19431+t19432;
                double t19434 = EcF_2*EcF_2;
                double t19435 = EcF_2*EcF_3;
                double t19436 = EcF_4+t19434+t19435;
                double t19437 = 1.0/t19436;
                double t19438 = c*t19353*t19362;
                double t19439 = log(t19438);
                double t19440 = EcP_3*t19368*t19369*2.0;
                double t19441 = t19362*t19375;
                double t19442 = log(t19441);
                double t19443 = t19368*t19369*t19379;
                double t19444 = t19442+t19443;
                double t19445 = t19440+t19439-EcP_2*EcP_3*t19444*t19384;
                double t19446 = EcP_1*t19445;
                v_rho_b[Q] += scale * t19446-t19352*(t19417-t19420*t19423*(t19417-EcF_1*(EcF_2*EcF_3*t19437*(t19390*1.0/(t19394*t19394)*(t19425*t19393*t19395+c*t19370*t19372*t19394*t19396*(1.0/3.0))-c*t19404*t19370*t19433*t19372*t19398*(1.0/3.0))+t19390*t19391*t19388*(c*t19370*t19396*(1.0/3.0)-c*t19353*t19393*t19395)+EcF_3*c*t19404*t19370*t19372*t19398*(2.0/3.0))))-t19420*t19423*(t19446-EcF_1*(log(c*t19353*t19396)+EcF_3*t19430*t19429*2.0-EcF_2*EcF_3*t19437*(log(t19425*t19396)+t19430*t19433*t19429)));
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t19453 = rho_a+rho_b;
                double t19454 = 1.0/pow(t19453,1.0/3.0);
                double t19455 = c*t19454;
                double t19456 = 1.0/pow(t19453,4.0/3.0);
                double t19457 = sqrt(t19455);
                double t19458 = EcP_3*t19457;
                double t19459 = EcP_4+t19455+t19458;
                double t19460 = c*t19456*(1.0/3.0);
                double t19461 = 1.0/sqrt(t19455);
                double t19462 = EcP_3*c*t19461*t19456*(1.0/6.0);
                double t19463 = t19460+t19462;
                double t19464 = EcP_2-t19457;
                double t19465 = 1.0/(t19459*t19459);
                double t19466 = 1.0/t19459;
                double t19467 = t19457*2.0;
                double t19468 = EcP_3+t19467;
                double t19469 = 1.0/(t19468*t19468);
                double t19470 = EcP_4*4.0;
                double t19471 = EcP_3*EcP_3;
                double t19472 = t19470-t19471;
                double t19473 = t19472*t19469;
                double t19474 = t19473+1.0;
                double t19475 = 1.0/t19474;
                double t19476 = 1.0/c;
                double t19477 = c*t19456*t19466*(1.0/3.0);
                double t19480 = c*t19454*t19463*t19465;
                double t19478 = -t19480+t19477;
                double t19479 = pow(t19453,1.0/3.0);
                double t19481 = 1.0/pow(t19453,7.0/3.0);
                double t19482 = EcP_2*EcP_2;
                double t19483 = EcP_2*EcP_3;
                double t19484 = EcP_4+t19482+t19483;
                double t19485 = 1.0/t19484;
                double t19486 = t19464*t19464;
                double t19487 = t19463*t19465*t19486;
                double t19488 = c*t19461*t19464*t19456*t19466*(1.0/3.0);
                double t19489 = t19487+t19488;
                double t19490 = 1.0/(t19464*t19464);
                double t19491 = c*t19481*(4.0/9.0);
                double t19492 = EcP_3*c*t19461*t19481*(2.0/9.0);
                double t19493 = c*c;
                double t19494 = 1.0/pow(t19453,8.0/3.0);
                double t19495 = 1.0/pow(t19455,3.0/2.0);
                double t19540 = EcP_3*t19493*t19494*t19495*(1.0/3.6E1);
                double t19496 = -t19540+t19491+t19492;
                double t19497 = t19463*t19463;
                double t19498 = 1.0/(t19459*t19459*t19459);
                double t19499 = EcP_2*4.0;
                double t19500 = EcP_3*2.0;
                double t19501 = t19500+t19499;
                double t19502 = 1.0/(t19468*t19468*t19468);
                double t19503 = 1.0/(t19468*t19468*t19468*t19468*t19468);
                double t19504 = 1.0/(t19474*t19474);
                double t19505 = EcF_3*t19457;
                double t19506 = EcF_4+t19505+t19455;
                double t19507 = EcF_3*c*t19461*t19456*(1.0/6.0);
                double t19508 = t19460+t19507;
                double t19509 = 1.0/t19506;
                double t19510 = c*t19509*t19456*(1.0/3.0);
                double t19511 = 1.0/(t19506*t19506);
                double t19566 = c*t19511*t19454*t19508;
                double t19512 = t19510-t19566;
                double t19513 = 1.0/pow(t19453,2.0/3.0);
                double t19514 = EcF_2-t19457;
                double t19515 = 1.0/(t19514*t19514);
                double t19516 = t19514*t19514;
                double t19517 = EcF_3*c*t19461*t19481*(2.0/9.0);
                double t19518 = t19517+t19491-EcF_3*t19493*t19494*t19495*(1.0/3.6E1);
                double t19519 = t19508*t19508;
                double t19520 = 1.0/(t19506*t19506*t19506);
                double t19521 = EcF_3+t19467;
                double t19522 = EcF_2*4.0;
                double t19523 = EcF_3*2.0;
                double t19524 = t19522+t19523;
                double t19525 = 1.0/(t19521*t19521);
                double t19526 = EcF_4*4.0;
                double t19527 = EcF_3*EcF_3;
                double t19528 = t19526-t19527;
                double t19529 = t19525*t19528;
                double t19530 = t19529+1.0;
                double t19531 = 1.0/t19530;
                double t19532 = t19511*t19516*t19508;
                double t19533 = c*t19514*t19461*t19509*t19456*(1.0/3.0);
                double t19534 = t19532+t19533;
                double t19535 = 1.0/(t19521*t19521*t19521);
                double t19536 = 1.0/(t19521*t19521*t19521*t19521*t19521);
                double t19537 = 1.0/(t19530*t19530);
                double t19538 = t19463*t19476*t19478*t19479;
                double t19539 = c*t19481*t19466*(4.0/9.0);
                double t19541 = c*t19454*t19497*t19498*2.0;
                double t19542 = t19541+t19539-c*t19463*t19456*t19465*(2.0/3.0)-c*t19454*t19465*t19496;
                double t19543 = t19542*t19476*t19459*t19479;
                double t19544 = t19463*t19490*t19489;
                double t19545 = c*t19481*t19466*(1.0/1.8E1);
                double t19546 = t19486*t19497*t19498*2.0;
                double t19547 = t19464*t19466*t19493*t19494*t19495*(1.0/1.8E1);
                double t19548 = c*t19461*t19463*t19464*t19456*t19465*(2.0/3.0);
                double t19549 = t19545+t19546+t19547+t19548-t19465*t19486*t19496-c*t19461*t19481*t19464*t19466*(4.0/9.0);
                double t19550 = c*t19501*t19461*t19481*t19475*t19469*(4.0/9.0);
                double t19551 = 1.0/(t19464*t19464*t19464);
                double t19552 = c*t19461*t19551*t19456*t19459*t19489*(1.0/3.0);
                double t19553 = c*t19501*t19503*t19504*t19472*t19481*(2.0/9.0);
                double t19554 = t19550+t19552+t19544+t19553-t19490*t19459*t19549-c*t19501*t19502*t19481*t19475*(2.0/9.0)-t19501*t19475*t19493*t19494*t19495*t19469*(1.0/1.8E1);
                double t19555 = EcP_2*EcP_3*t19554*t19485;
                double t19556 = EcP_3*c*t19502*t19481*t19475*(4.0/9.0);
                double t19557 = EcP_3*t19475*t19493*t19494*t19495*t19469*(1.0/9.0);
                double t19558 = t19543+t19555+t19538+t19556+t19557-t19513*t19476*t19459*t19478*(1.0/3.0)-EcP_3*c*t19503*t19504*t19472*t19481*(4.0/9.0)-EcP_3*c*t19461*t19481*t19475*t19469*(8.0/9.0);
                double t19559 = EcP_1*t19558;
                double t19560 = pow(2.0,1.0/3.0);
                double t19561 = t19560*2.0;
                double t19562 = t19561-2.0;
                double t19563 = two_13*2.0;
                double t19564 = t19563-2.0;
                double t19565 = 1.0/t19564;
                double t19567 = EcF_2*EcF_2;
                double t19568 = EcF_2*EcF_3;
                double t19569 = EcF_4+t19567+t19568;
                double t19570 = 1.0/t19569;
                double t19571 = t19476*t19459*t19478*t19479;
                double t19572 = t19490*t19459*t19489;
                double t19573 = c*t19501*t19461*t19456*t19475*t19469*(1.0/3.0);
                double t19574 = t19572+t19573;
                double t19575 = EcP_2*EcP_3*t19574*t19485;
                double t19576 = t19571+t19575-EcP_3*c*t19461*t19456*t19475*t19469*(2.0/3.0);
                v_rho_a_rho_a[Q] += scale * EcP_1*t19576*-2.0+t19453*(t19559-t19562*t19565*(t19559-EcF_1*(t19506*t19476*t19479*(c*t19481*t19509*(4.0/9.0)-c*t19511*t19454*t19518-c*t19511*t19508*t19456*(2.0/3.0)+c*t19520*t19454*t19519*2.0)-t19512*t19513*t19506*t19476*(1.0/3.0)+t19512*t19508*t19476*t19479+EcF_2*EcF_3*t19570*(-t19506*t19515*(c*t19481*t19509*(1.0/1.8E1)-t19511*t19516*t19518+t19520*t19516*t19519*2.0-c*t19514*t19461*t19481*t19509*(4.0/9.0)+t19514*t19509*t19493*t19494*t19495*(1.0/1.8E1)+c*t19511*t19514*t19461*t19508*t19456*(2.0/3.0))+t19515*t19534*t19508-c*t19531*t19524*t19481*t19535*(2.0/9.0)+c*t19531*t19461*t19524*t19525*t19481*(4.0/9.0)+c*t19524*t19481*t19536*t19528*t19537*(2.0/9.0)-t19531*t19524*t19525*t19493*t19494*t19495*(1.0/1.8E1)+c*1.0/(t19514*t19514*t19514)*t19461*t19506*t19534*t19456*(1.0/3.0))+EcF_3*c*t19531*t19481*t19535*(4.0/9.0)-EcF_3*c*t19531*t19461*t19525*t19481*(8.0/9.0)-EcF_3*c*t19481*t19536*t19528*t19537*(4.0/9.0)+EcF_3*t19531*t19525*t19493*t19494*t19495*(1.0/9.0))))+t19562*t19565*(EcP_1*t19576-EcF_1*(t19512*t19506*t19476*t19479+EcF_2*EcF_3*t19570*(t19506*t19515*t19534+c*t19531*t19461*t19524*t19525*t19456*(1.0/3.0))-EcF_3*c*t19531*t19461*t19525*t19456*(2.0/3.0)))*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t19578 = rho_a+rho_b;
                double t19579 = 1.0/pow(t19578,1.0/3.0);
                double t19580 = c*t19579;
                double t19581 = 1.0/pow(t19578,4.0/3.0);
                double t19582 = sqrt(t19580);
                double t19583 = EcP_3*t19582;
                double t19584 = EcP_4+t19580+t19583;
                double t19585 = c*t19581*(1.0/3.0);
                double t19586 = 1.0/sqrt(t19580);
                double t19587 = EcP_3*c*t19581*t19586*(1.0/6.0);
                double t19588 = t19585+t19587;
                double t19589 = EcP_2-t19582;
                double t19590 = 1.0/(t19584*t19584);
                double t19591 = 1.0/t19584;
                double t19592 = t19582*2.0;
                double t19593 = EcP_3+t19592;
                double t19594 = 1.0/(t19593*t19593);
                double t19595 = EcP_4*4.0;
                double t19596 = EcP_3*EcP_3;
                double t19597 = t19595-t19596;
                double t19598 = t19594*t19597;
                double t19599 = t19598+1.0;
                double t19600 = 1.0/t19599;
                double t19601 = 1.0/c;
                double t19602 = c*t19581*t19591*(1.0/3.0);
                double t19605 = c*t19590*t19579*t19588;
                double t19603 = t19602-t19605;
                double t19604 = pow(t19578,1.0/3.0);
                double t19606 = 1.0/pow(t19578,7.0/3.0);
                double t19607 = EcP_2*EcP_2;
                double t19608 = EcP_2*EcP_3;
                double t19609 = EcP_4+t19607+t19608;
                double t19610 = 1.0/t19609;
                double t19611 = t19589*t19589;
                double t19612 = t19611*t19590*t19588;
                double t19613 = c*t19581*t19591*t19586*t19589*(1.0/3.0);
                double t19614 = t19612+t19613;
                double t19615 = 1.0/(t19589*t19589);
                double t19616 = c*t19606*(4.0/9.0);
                double t19617 = EcP_3*c*t19606*t19586*(2.0/9.0);
                double t19618 = c*c;
                double t19619 = 1.0/pow(t19578,8.0/3.0);
                double t19620 = 1.0/pow(t19580,3.0/2.0);
                double t19665 = EcP_3*t19620*t19618*t19619*(1.0/3.6E1);
                double t19621 = t19616+t19617-t19665;
                double t19622 = t19588*t19588;
                double t19623 = 1.0/(t19584*t19584*t19584);
                double t19624 = EcP_2*4.0;
                double t19625 = EcP_3*2.0;
                double t19626 = t19624+t19625;
                double t19627 = 1.0/(t19593*t19593*t19593);
                double t19628 = 1.0/(t19593*t19593*t19593*t19593*t19593);
                double t19629 = 1.0/(t19599*t19599);
                double t19630 = EcF_3*t19582;
                double t19631 = EcF_4+t19630+t19580;
                double t19632 = EcF_3*c*t19581*t19586*(1.0/6.0);
                double t19633 = t19632+t19585;
                double t19634 = 1.0/t19631;
                double t19635 = c*t19634*t19581*(1.0/3.0);
                double t19636 = 1.0/(t19631*t19631);
                double t19691 = c*t19633*t19636*t19579;
                double t19637 = t19635-t19691;
                double t19638 = 1.0/pow(t19578,2.0/3.0);
                double t19639 = EcF_2-t19582;
                double t19640 = 1.0/(t19639*t19639);
                double t19641 = t19639*t19639;
                double t19642 = EcF_3*c*t19606*t19586*(2.0/9.0);
                double t19643 = t19642+t19616-EcF_3*t19620*t19618*t19619*(1.0/3.6E1);
                double t19644 = t19633*t19633;
                double t19645 = 1.0/(t19631*t19631*t19631);
                double t19646 = EcF_3+t19592;
                double t19647 = EcF_2*4.0;
                double t19648 = EcF_3*2.0;
                double t19649 = t19647+t19648;
                double t19650 = 1.0/(t19646*t19646);
                double t19651 = EcF_4*4.0;
                double t19652 = EcF_3*EcF_3;
                double t19653 = t19651-t19652;
                double t19654 = t19650*t19653;
                double t19655 = t19654+1.0;
                double t19656 = 1.0/t19655;
                double t19657 = t19641*t19633*t19636;
                double t19658 = c*t19634*t19581*t19639*t19586*(1.0/3.0);
                double t19659 = t19657+t19658;
                double t19660 = 1.0/(t19646*t19646*t19646);
                double t19661 = 1.0/(t19646*t19646*t19646*t19646*t19646);
                double t19662 = 1.0/(t19655*t19655);
                double t19663 = t19601*t19603*t19604*t19588;
                double t19664 = c*t19606*t19591*(4.0/9.0);
                double t19666 = c*t19622*t19623*t19579*2.0;
                double t19667 = t19664+t19666-c*t19621*t19590*t19579-c*t19581*t19590*t19588*(2.0/3.0);
                double t19668 = t19601*t19604*t19584*t19667;
                double t19669 = t19614*t19615*t19588;
                double t19670 = c*t19606*t19591*(1.0/1.8E1);
                double t19671 = t19611*t19622*t19623*2.0;
                double t19672 = t19620*t19591*t19618*t19619*t19589*(1.0/1.8E1);
                double t19673 = c*t19581*t19590*t19586*t19588*t19589*(2.0/3.0);
                double t19674 = t19670+t19671+t19672+t19673-t19611*t19621*t19590-c*t19606*t19591*t19586*t19589*(4.0/9.0);
                double t19675 = c*t19600*t19606*t19626*t19594*t19586*(4.0/9.0);
                double t19676 = 1.0/(t19589*t19589*t19589);
                double t19677 = c*t19614*t19581*t19584*t19586*t19676*(1.0/3.0);
                double t19678 = c*t19606*t19626*t19628*t19629*t19597*(2.0/9.0);
                double t19679 = t19675+t19677+t19669+t19678-t19615*t19584*t19674-c*t19600*t19606*t19626*t19627*(2.0/9.0)-t19600*t19620*t19626*t19618*t19619*t19594*(1.0/1.8E1);
                double t19680 = EcP_2*EcP_3*t19610*t19679;
                double t19681 = EcP_3*c*t19600*t19606*t19627*(4.0/9.0);
                double t19682 = EcP_3*t19600*t19620*t19618*t19619*t19594*(1.0/9.0);
                double t19683 = t19680+t19663+t19681+t19682+t19668-t19601*t19603*t19584*t19638*(1.0/3.0)-EcP_3*c*t19600*t19606*t19594*t19586*(8.0/9.0)-EcP_3*c*t19606*t19628*t19629*t19597*(4.0/9.0);
                double t19684 = EcP_1*t19683;
                double t19685 = pow(2.0,1.0/3.0);
                double t19686 = t19685*2.0;
                double t19687 = t19686-2.0;
                double t19688 = two_13*2.0;
                double t19689 = t19688-2.0;
                double t19690 = 1.0/t19689;
                double t19692 = EcF_2*EcF_2;
                double t19693 = EcF_2*EcF_3;
                double t19694 = EcF_4+t19692+t19693;
                double t19695 = 1.0/t19694;
                double t19696 = t19601*t19603*t19604*t19584;
                double t19697 = t19614*t19615*t19584;
                double t19698 = c*t19600*t19581*t19626*t19594*t19586*(1.0/3.0);
                double t19699 = t19697+t19698;
                double t19700 = EcP_2*EcP_3*t19610*t19699;
                double t19701 = t19700+t19696-EcP_3*c*t19600*t19581*t19594*t19586*(2.0/3.0);
                v_rho_a_rho_b[Q] += scale * EcP_1*t19701*-2.0+t19578*(t19684-t19690*t19687*(t19684-EcF_1*(t19601*t19604*t19631*(c*t19606*t19634*(4.0/9.0)-c*t19633*t19581*t19636*(2.0/3.0)-c*t19643*t19636*t19579+c*t19644*t19645*t19579*2.0)+t19601*t19604*t19633*t19637-t19601*t19631*t19637*t19638*(1.0/3.0)+EcF_2*EcF_3*t19695*(-t19631*t19640*(c*t19606*t19634*(1.0/1.8E1)-t19641*t19643*t19636+t19641*t19644*t19645*2.0-c*t19606*t19634*t19639*t19586*(4.0/9.0)+t19620*t19634*t19618*t19619*t19639*(1.0/1.8E1)+c*t19633*t19581*t19636*t19639*t19586*(2.0/3.0))+t19640*t19633*t19659-c*t19606*t19660*t19656*t19649*(2.0/9.0)+c*t19606*t19661*t19653*t19662*t19649*(2.0/9.0)+c*t19650*t19606*t19656*t19586*t19649*(4.0/9.0)-t19620*t19650*t19618*t19619*t19656*t19649*(1.0/1.8E1)+c*t19631*t19581*1.0/(t19639*t19639*t19639)*t19586*t19659*(1.0/3.0))+EcF_3*c*t19606*t19660*t19656*(4.0/9.0)-EcF_3*c*t19606*t19661*t19653*t19662*(4.0/9.0)-EcF_3*c*t19650*t19606*t19656*t19586*(8.0/9.0)+EcF_3*t19620*t19650*t19618*t19619*t19656*(1.0/9.0))))+t19690*t19687*(EcP_1*t19701-EcF_1*(t19601*t19604*t19631*t19637+EcF_2*EcF_3*t19695*(t19631*t19640*t19659+c*t19650*t19581*t19656*t19586*t19649*(1.0/3.0))-EcF_3*c*t19650*t19581*t19656*t19586*(2.0/3.0)))*2.0;
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t19703 = rho_a+rho_b;
                double t19704 = 1.0/pow(t19703,1.0/3.0);
                double t19705 = c*t19704;
                double t19706 = 1.0/pow(t19703,4.0/3.0);
                double t19707 = sqrt(t19705);
                double t19708 = EcP_3*t19707;
                double t19709 = EcP_4+t19705+t19708;
                double t19710 = c*t19706*(1.0/3.0);
                double t19711 = 1.0/sqrt(t19705);
                double t19712 = EcP_3*c*t19711*t19706*(1.0/6.0);
                double t19713 = t19710+t19712;
                double t19714 = EcP_2-t19707;
                double t19715 = 1.0/(t19709*t19709);
                double t19716 = 1.0/t19709;
                double t19717 = t19707*2.0;
                double t19718 = EcP_3+t19717;
                double t19719 = 1.0/(t19718*t19718);
                double t19720 = EcP_4*4.0;
                double t19721 = EcP_3*EcP_3;
                double t19722 = t19720-t19721;
                double t19723 = t19722*t19719;
                double t19724 = t19723+1.0;
                double t19725 = 1.0/t19724;
                double t19726 = 1.0/c;
                double t19727 = c*t19706*t19716*(1.0/3.0);
                double t19730 = c*t19704*t19713*t19715;
                double t19728 = -t19730+t19727;
                double t19729 = pow(t19703,1.0/3.0);
                double t19731 = 1.0/pow(t19703,7.0/3.0);
                double t19732 = EcP_2*EcP_2;
                double t19733 = EcP_2*EcP_3;
                double t19734 = EcP_4+t19732+t19733;
                double t19735 = 1.0/t19734;
                double t19736 = t19714*t19714;
                double t19737 = t19713*t19715*t19736;
                double t19738 = c*t19711*t19714*t19706*t19716*(1.0/3.0);
                double t19739 = t19737+t19738;
                double t19740 = 1.0/(t19714*t19714);
                double t19741 = c*t19731*(4.0/9.0);
                double t19742 = EcP_3*c*t19711*t19731*(2.0/9.0);
                double t19743 = c*c;
                double t19744 = 1.0/pow(t19703,8.0/3.0);
                double t19745 = 1.0/pow(t19705,3.0/2.0);
                double t19790 = EcP_3*t19743*t19744*t19745*(1.0/3.6E1);
                double t19746 = t19741+t19742-t19790;
                double t19747 = t19713*t19713;
                double t19748 = 1.0/(t19709*t19709*t19709);
                double t19749 = EcP_2*4.0;
                double t19750 = EcP_3*2.0;
                double t19751 = t19750+t19749;
                double t19752 = 1.0/(t19718*t19718*t19718);
                double t19753 = 1.0/(t19718*t19718*t19718*t19718*t19718);
                double t19754 = 1.0/(t19724*t19724);
                double t19755 = EcF_3*t19707;
                double t19756 = EcF_4+t19705+t19755;
                double t19757 = EcF_3*c*t19711*t19706*(1.0/6.0);
                double t19758 = t19710+t19757;
                double t19759 = 1.0/t19756;
                double t19760 = c*t19706*t19759*(1.0/3.0);
                double t19761 = 1.0/(t19756*t19756);
                double t19816 = c*t19704*t19761*t19758;
                double t19762 = t19760-t19816;
                double t19763 = 1.0/pow(t19703,2.0/3.0);
                double t19764 = EcF_2-t19707;
                double t19765 = 1.0/(t19764*t19764);
                double t19766 = t19764*t19764;
                double t19767 = EcF_3*c*t19711*t19731*(2.0/9.0);
                double t19768 = t19741+t19767-EcF_3*t19743*t19744*t19745*(1.0/3.6E1);
                double t19769 = t19758*t19758;
                double t19770 = 1.0/(t19756*t19756*t19756);
                double t19771 = EcF_3+t19717;
                double t19772 = EcF_2*4.0;
                double t19773 = EcF_3*2.0;
                double t19774 = t19772+t19773;
                double t19775 = 1.0/(t19771*t19771);
                double t19776 = EcF_4*4.0;
                double t19777 = EcF_3*EcF_3;
                double t19778 = t19776-t19777;
                double t19779 = t19775*t19778;
                double t19780 = t19779+1.0;
                double t19781 = 1.0/t19780;
                double t19782 = t19761*t19766*t19758;
                double t19783 = c*t19711*t19706*t19764*t19759*(1.0/3.0);
                double t19784 = t19782+t19783;
                double t19785 = 1.0/(t19771*t19771*t19771);
                double t19786 = 1.0/(t19771*t19771*t19771*t19771*t19771);
                double t19787 = 1.0/(t19780*t19780);
                double t19788 = t19713*t19726*t19728*t19729;
                double t19789 = c*t19731*t19716*(4.0/9.0);
                double t19791 = c*t19704*t19747*t19748*2.0;
                double t19792 = t19791+t19789-c*t19713*t19706*t19715*(2.0/3.0)-c*t19704*t19715*t19746;
                double t19793 = t19726*t19709*t19729*t19792;
                double t19794 = t19713*t19740*t19739;
                double t19795 = c*t19731*t19716*(1.0/1.8E1);
                double t19796 = t19736*t19747*t19748*2.0;
                double t19797 = t19714*t19716*t19743*t19744*t19745*(1.0/1.8E1);
                double t19798 = c*t19711*t19713*t19714*t19706*t19715*(2.0/3.0);
                double t19799 = t19795+t19796+t19797+t19798-t19715*t19736*t19746-c*t19711*t19731*t19714*t19716*(4.0/9.0);
                double t19800 = c*t19711*t19731*t19751*t19725*t19719*(4.0/9.0);
                double t19801 = 1.0/(t19714*t19714*t19714);
                double t19802 = c*t19711*t19801*t19706*t19709*t19739*(1.0/3.0);
                double t19803 = c*t19722*t19731*t19751*t19753*t19754*(2.0/9.0);
                double t19804 = t19800+t19802+t19803+t19794-t19740*t19709*t19799-c*t19731*t19751*t19725*t19752*(2.0/9.0)-t19751*t19725*t19743*t19744*t19745*t19719*(1.0/1.8E1);
                double t19805 = EcP_2*EcP_3*t19804*t19735;
                double t19806 = EcP_3*c*t19731*t19725*t19752*(4.0/9.0);
                double t19807 = EcP_3*t19725*t19743*t19744*t19745*t19719*(1.0/9.0);
                double t19808 = t19805+t19806+t19807+t19793+t19788-t19726*t19709*t19763*t19728*(1.0/3.0)-EcP_3*c*t19711*t19731*t19725*t19719*(8.0/9.0)-EcP_3*c*t19722*t19731*t19753*t19754*(4.0/9.0);
                double t19809 = EcP_1*t19808;
                double t19810 = pow(2.0,1.0/3.0);
                double t19811 = t19810*2.0;
                double t19812 = t19811-2.0;
                double t19813 = two_13*2.0;
                double t19814 = t19813-2.0;
                double t19815 = 1.0/t19814;
                double t19817 = EcF_2*EcF_2;
                double t19818 = EcF_2*EcF_3;
                double t19819 = EcF_4+t19817+t19818;
                double t19820 = 1.0/t19819;
                double t19821 = t19726*t19709*t19728*t19729;
                double t19822 = t19740*t19709*t19739;
                double t19823 = c*t19711*t19706*t19751*t19725*t19719*(1.0/3.0);
                double t19824 = t19822+t19823;
                double t19825 = EcP_2*EcP_3*t19824*t19735;
                double t19826 = t19821+t19825-EcP_3*c*t19711*t19706*t19725*t19719*(2.0/3.0);
                v_rho_b_rho_b[Q] += scale * EcP_1*t19826*-2.0+t19703*(t19809-t19812*t19815*(t19809-EcF_1*(t19726*t19729*t19756*(c*t19731*t19759*(4.0/9.0)-c*t19704*t19761*t19768+c*t19704*t19770*t19769*2.0-c*t19706*t19761*t19758*(2.0/3.0))-t19726*t19762*t19763*t19756*(1.0/3.0)+t19726*t19762*t19729*t19758+EcF_2*EcF_3*t19820*(-t19756*t19765*(c*t19731*t19759*(1.0/1.8E1)-t19761*t19766*t19768+t19770*t19766*t19769*2.0-c*t19711*t19731*t19764*t19759*(4.0/9.0)+t19743*t19744*t19745*t19764*t19759*(1.0/1.8E1)+c*t19711*t19706*t19761*t19764*t19758*(2.0/3.0))+t19765*t19784*t19758-c*t19731*t19781*t19774*t19785*(2.0/9.0)+c*t19711*t19731*t19781*t19774*t19775*(4.0/9.0)+c*t19731*t19774*t19786*t19778*t19787*(2.0/9.0)-t19743*t19744*t19745*t19781*t19774*t19775*(1.0/1.8E1)+c*t19711*t19706*1.0/(t19764*t19764*t19764)*t19756*t19784*(1.0/3.0))+EcF_3*c*t19731*t19781*t19785*(4.0/9.0)-EcF_3*c*t19711*t19731*t19781*t19775*(8.0/9.0)-EcF_3*c*t19731*t19786*t19778*t19787*(4.0/9.0)+EcF_3*t19743*t19744*t19745*t19781*t19775*(1.0/9.0))))+t19812*t19815*(EcP_1*t19826-EcF_1*(t19726*t19762*t19729*t19756+EcF_2*EcF_3*t19820*(t19756*t19765*t19784+c*t19711*t19706*t19781*t19774*t19775*(1.0/3.0))-EcF_3*c*t19711*t19706*t19781*t19775*(2.0/3.0)))*2.0;
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t17257 = rho_a+rho_b;
                double t17258 = 1.0/pow(t17257,1.0/3.0);
                double t17259 = c*t17258;
                double t17260 = sqrt(t17259);
                double t17261 = EcP_4*4.0;
                double t17262 = EcP_3*EcP_3;
                double t17263 = t17261-t17262;
                double t17264 = EcP_2-t17260;
                double t17265 = EcP_3*t17260;
                double t17266 = EcP_4+t17265+t17259;
                double t17267 = 1.0/t17266;
                double t17268 = sqrt(t17263);
                double t17269 = t17260*2.0;
                double t17270 = EcP_3+t17269;
                double t17271 = 1.0/t17270;
                double t17272 = t17271*t17268;
                double t17273 = atan(t17272);
                double t17274 = 1.0/sqrt(t17263);
                double t17275 = rho_a-rho_b;
                double t17276 = t17275*t17275;
                double t17277 = EcF_4*4.0;
                double t17278 = EcF_3*EcF_3;
                double t17279 = t17277-t17278;
                double t17280 = EcF_2-t17260;
                double t17281 = EcF_3*t17260;
                double t17282 = EcF_4+t17281+t17259;
                double t17283 = 1.0/t17282;
                double t17284 = sqrt(t17279);
                double t17285 = EcF_3+t17269;
                double t17286 = 1.0/t17285;
                double t17287 = t17284*t17286;
                double t17288 = atan(t17287);
                double t17289 = 1.0/sqrt(t17279);
                double t17290 = c*t17258*t17267;
                double t17291 = log(t17290);
                double t17292 = EcP_3*t17273*t17274*2.0;
                double t17293 = t17264*t17264;
                double t17294 = t17293*t17267;
                double t17295 = log(t17294);
                double t17296 = EcP_2*4.0;
                double t17297 = EcP_3*2.0;
                double t17298 = t17296+t17297;
                double t17299 = t17273*t17274*t17298;
                double t17300 = t17295+t17299;
                double t17301 = EcP_2*EcP_2;
                double t17302 = EcP_2*EcP_3;
                double t17303 = EcP_4+t17301+t17302;
                double t17304 = 1.0/t17303;
                double t17305 = t17291+t17292-EcP_2*EcP_3*t17300*t17304;
                double t17306 = EcP_1*t17305;
                double t17307 = Ac_4*4.0;
                double t17308 = Ac_3*Ac_3;
                double t17309 = t17307-t17308;
                double t17310 = Ac_2-t17260;
                double t17311 = Ac_3*t17260;
                double t17312 = Ac_4+t17311+t17259;
                double t17313 = 1.0/t17312;
                double t17314 = sqrt(t17309);
                double t17315 = Ac_3+t17269;
                double t17316 = 1.0/t17315;
                double t17317 = t17314*t17316;
                double t17318 = atan(t17317);
                double t17319 = 1.0/sqrt(t17309);
                double t17320 = 1.0/t17257;
                double t17321 = t17320*t17275;
                double t17322 = c*t17313*t17258;
                double t17323 = log(t17322);
                double t17324 = Ac_3*t17318*t17319*2.0;
                double t17325 = t17310*t17310;
                double t17326 = t17313*t17325;
                double t17327 = log(t17326);
                double t17328 = Ac_2*4.0;
                double t17329 = Ac_3*2.0;
                double t17330 = t17328+t17329;
                double t17331 = t17330*t17318*t17319;
                double t17332 = t17331+t17327;
                double t17333 = Ac_2*Ac_2;
                double t17334 = Ac_2*Ac_3;
                double t17335 = Ac_4+t17333+t17334;
                double t17336 = 1.0/t17335;
                double t17337 = t17323+t17324-Ac_2*Ac_3*t17332*t17336;
                v[Q] += scale * t17257*(t17306-(Ac_1*t17337*(1.0/(t17257*t17257*t17257*t17257)*(t17276*t17276)*((d2fz0*(t17306-EcF_1*(log(c*t17283*t17258)+EcF_3*t17288*t17289*2.0-(EcF_2*EcF_3*(log((t17280*t17280)*t17283)+t17288*t17289*(EcF_2*4.0+EcF_3*2.0)))/(EcF_4+EcF_2*EcF_2+EcF_2*EcF_3))))/(Ac_1*t17337)+1.0)-1.0)*(pow(t17321+1.0,4.0/3.0)+pow(-t17321+1.0,4.0/3.0)-2.0))/(d2fz0*(two_13*2.0-2.0)));
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t17339 = rho_a+rho_b;
                double t17340 = 1.0/pow(t17339,1.0/3.0);
                double t17341 = c*t17340;
                double t17342 = sqrt(t17341);
                double t17343 = EcP_4*4.0;
                double t17344 = EcP_3*EcP_3;
                double t17345 = t17343-t17344;
                double t17346 = EcP_2-t17342;
                double t17347 = EcP_3*t17342;
                double t17348 = EcP_4+t17341+t17347;
                double t17349 = 1.0/t17348;
                double t17350 = sqrt(t17345);
                double t17351 = t17342*2.0;
                double t17352 = EcP_3+t17351;
                double t17353 = 1.0/t17352;
                double t17354 = t17350*t17353;
                double t17355 = atan(t17354);
                double t17356 = 1.0/sqrt(t17345);
                double t17357 = 1.0/pow(t17339,4.0/3.0);
                double t17358 = c*t17357*(1.0/3.0);
                double t17359 = 1.0/sqrt(t17341);
                double t17360 = EcP_3*c*t17357*t17359*(1.0/6.0);
                double t17361 = t17360+t17358;
                double t17362 = t17346*t17346;
                double t17363 = 1.0/(t17348*t17348);
                double t17364 = EcP_2*4.0;
                double t17365 = EcP_3*2.0;
                double t17366 = t17364+t17365;
                double t17367 = 1.0/(t17352*t17352);
                double t17368 = EcP_2*EcP_2;
                double t17369 = EcP_2*EcP_3;
                double t17370 = EcP_4+t17368+t17369;
                double t17371 = 1.0/t17370;
                double t17372 = t17345*t17367;
                double t17373 = t17372+1.0;
                double t17374 = 1.0/t17373;
                double t17375 = 1.0/t17339;
                double t17376 = rho_a-rho_b;
                double t17377 = t17375*t17376;
                double t17378 = Ac_4*4.0;
                double t17379 = Ac_3*Ac_3;
                double t17380 = t17378-t17379;
                double t17381 = Ac_2-t17342;
                double t17382 = Ac_3*t17342;
                double t17383 = Ac_4+t17341+t17382;
                double t17384 = 1.0/t17383;
                double t17385 = sqrt(t17380);
                double t17386 = Ac_3+t17351;
                double t17387 = 1.0/t17386;
                double t17388 = t17385*t17387;
                double t17389 = atan(t17388);
                double t17390 = 1.0/sqrt(t17380);
                double t17391 = 1.0/c;
                double t17392 = EcF_3*t17342;
                double t17393 = EcF_4+t17341+t17392;
                double t17394 = pow(t17339,1.0/3.0);
                double t17395 = EcF_3*c*t17357*t17359*(1.0/6.0);
                double t17396 = t17358+t17395;
                double t17397 = EcF_2-t17342;
                double t17398 = 1.0/(t17393*t17393);
                double t17399 = 1.0/t17393;
                double t17400 = EcF_3+t17351;
                double t17401 = 1.0/(t17400*t17400);
                double t17402 = EcF_4*4.0;
                double t17403 = EcF_3*EcF_3;
                double t17404 = t17402-t17403;
                double t17405 = t17401*t17404;
                double t17406 = t17405+1.0;
                double t17407 = 1.0/t17406;
                double t17408 = c*t17357*t17349*(1.0/3.0);
                double t17409 = t17408-c*t17340*t17361*t17363;
                double t17410 = t17391*t17409*t17348*t17394;
                double t17411 = t17361*t17362*t17363;
                double t17412 = c*t17346*t17357*t17349*t17359*(1.0/3.0);
                double t17413 = t17411+t17412;
                double t17414 = 1.0/(t17346*t17346);
                double t17415 = t17413*t17414*t17348;
                double t17416 = c*t17374*t17357*t17366*t17367*t17359*(1.0/3.0);
                double t17417 = t17415+t17416;
                double t17418 = EcP_2*EcP_3*t17371*t17417;
                double t17419 = t17410+t17418-EcP_3*c*t17374*t17357*t17367*t17359*(2.0/3.0);
                double t17420 = EcP_1*t17419;
                double t17421 = c*t17340*t17384;
                double t17422 = log(t17421);
                double t17423 = Ac_3*t17390*t17389*2.0;
                double t17424 = t17381*t17381;
                double t17425 = t17424*t17384;
                double t17426 = log(t17425);
                double t17427 = Ac_2*4.0;
                double t17428 = Ac_3*2.0;
                double t17429 = t17427+t17428;
                double t17430 = t17390*t17429*t17389;
                double t17431 = t17430+t17426;
                double t17432 = Ac_2*Ac_2;
                double t17433 = Ac_2*Ac_3;
                double t17434 = Ac_4+t17432+t17433;
                double t17435 = 1.0/t17434;
                double t17460 = Ac_2*Ac_3*t17431*t17435;
                double t17436 = t17422+t17423-t17460;
                double t17437 = 1.0/Ac_1;
                double t17438 = t17397*t17397;
                double t17439 = sqrt(t17404);
                double t17440 = 1.0/t17400;
                double t17441 = t17440*t17439;
                double t17442 = atan(t17441);
                double t17443 = 1.0/sqrt(t17404);
                double t17444 = EcF_2*4.0;
                double t17445 = EcF_3*2.0;
                double t17446 = t17444+t17445;
                double t17447 = EcF_2*EcF_2;
                double t17448 = EcF_2*EcF_3;
                double t17449 = EcF_4+t17447+t17448;
                double t17450 = 1.0/t17449;
                double t17451 = c*t17340*t17349;
                double t17452 = log(t17451);
                double t17453 = EcP_3*t17355*t17356*2.0;
                double t17454 = t17362*t17349;
                double t17455 = log(t17454);
                double t17456 = t17355*t17356*t17366;
                double t17457 = t17455+t17456;
                double t17478 = EcP_2*EcP_3*t17371*t17457;
                double t17458 = t17452+t17453-t17478;
                double t17459 = EcP_1*t17458;
                double t17461 = Ac_3*c*t17357*t17359*(1.0/6.0);
                double t17462 = t17461+t17358;
                double t17463 = 1.0/(t17383*t17383);
                double t17464 = 1.0/(t17386*t17386);
                double t17465 = t17380*t17464;
                double t17466 = t17465+1.0;
                double t17467 = 1.0/t17466;
                double t17468 = t17376*t17376;
                double t17469 = 1.0/(t17339*t17339*t17339*t17339);
                double t17470 = c*t17340*t17399;
                double t17471 = log(t17470);
                double t17472 = EcF_3*t17442*t17443*2.0;
                double t17473 = t17438*t17399;
                double t17474 = log(t17473);
                double t17475 = t17442*t17443*t17446;
                double t17476 = t17474+t17475;
                double t17482 = EcF_2*EcF_3*t17450*t17476;
                double t17477 = t17471+t17472-t17482;
                double t17479 = 1.0/t17436;
                double t17483 = EcF_1*t17477;
                double t17480 = -t17483+t17459;
                double t17481 = t17468*t17468;
                double t17484 = 1.0/d2fz0;
                double t17485 = two_13*2.0;
                double t17486 = t17485-2.0;
                double t17487 = 1.0/t17486;
                double t17488 = t17483-t17459;
                double t17489 = d2fz0*t17437*t17479*t17488;
                double t17490 = t17489-1.0;
                double t17491 = t17377+1.0;
                double t17492 = pow(t17491,4.0/3.0);
                double t17493 = -t17377+1.0;
                double t17494 = pow(t17493,4.0/3.0);
                double t17495 = t17492+t17494-2.0;
                double t17496 = c*t17357*t17384*(1.0/3.0);
                double t17497 = t17496-c*t17340*t17462*t17463;
                double t17498 = t17391*t17383*t17394*t17497;
                double t17499 = t17424*t17462*t17463;
                double t17500 = c*t17381*t17357*t17384*t17359*(1.0/3.0);
                double t17501 = t17500+t17499;
                double t17502 = 1.0/(t17381*t17381);
                double t17503 = t17501*t17502*t17383;
                double t17504 = c*t17464*t17357*t17429*t17359*t17467*(1.0/3.0);
                double t17505 = t17503+t17504;
                double t17506 = Ac_2*Ac_3*t17505*t17435;
                double t17507 = t17506+t17498-Ac_3*c*t17464*t17357*t17359*t17467*(2.0/3.0);
                double t17508 = 1.0/(t17339*t17339);
                double t17509 = t17375-t17508*t17376;
                double t17510 = t17481*t17490*t17469;
                double t17511 = t17510+1.0;
                v_rho_a[Q] += scale * t17459-t17339*(t17420-Ac_1*t17511*t17436*t17484*t17487*(pow(t17491,1.0/3.0)*t17509*(4.0/3.0)-t17509*pow(t17493,1.0/3.0)*(4.0/3.0))+Ac_1*t17436*t17484*t17495*t17487*(t17481*t17490*1.0/(t17339*t17339*t17339*t17339*t17339)*4.0-t17481*t17469*(d2fz0*t17437*t17479*(t17420-EcF_1*(EcF_2*EcF_3*t17450*(t17393*1.0/(t17397*t17397)*(t17438*t17396*t17398+c*t17357*t17359*t17397*t17399*(1.0/3.0))+c*t17401*t17407*t17446*t17357*t17359*(1.0/3.0))+t17391*t17393*t17394*(c*t17357*t17399*(1.0/3.0)-c*t17340*t17396*t17398)-EcF_3*c*t17401*t17407*t17357*t17359*(2.0/3.0)))-d2fz0*t17480*t17507*1.0/(t17436*t17436)*t17437)+t17376*t17468*t17469*(d2fz0*t17480*t17437*t17479+1.0)*4.0)+Ac_1*t17511*t17507*t17484*t17495*t17487)+Ac_1*t17511*t17436*t17484*t17495*t17487;
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t17513 = rho_a+rho_b;
                double t17514 = 1.0/pow(t17513,1.0/3.0);
                double t17515 = c*t17514;
                double t17516 = sqrt(t17515);
                double t17517 = EcP_4*4.0;
                double t17518 = EcP_3*EcP_3;
                double t17519 = t17517-t17518;
                double t17520 = EcP_2-t17516;
                double t17521 = EcP_3*t17516;
                double t17522 = EcP_4+t17521+t17515;
                double t17523 = 1.0/t17522;
                double t17524 = sqrt(t17519);
                double t17525 = t17516*2.0;
                double t17526 = EcP_3+t17525;
                double t17527 = 1.0/t17526;
                double t17528 = t17524*t17527;
                double t17529 = atan(t17528);
                double t17530 = 1.0/sqrt(t17519);
                double t17531 = 1.0/pow(t17513,4.0/3.0);
                double t17532 = c*t17531*(1.0/3.0);
                double t17533 = 1.0/sqrt(t17515);
                double t17534 = EcP_3*c*t17531*t17533*(1.0/6.0);
                double t17535 = t17532+t17534;
                double t17536 = t17520*t17520;
                double t17537 = 1.0/(t17522*t17522);
                double t17538 = EcP_2*4.0;
                double t17539 = EcP_3*2.0;
                double t17540 = t17538+t17539;
                double t17541 = 1.0/(t17526*t17526);
                double t17542 = EcP_2*EcP_2;
                double t17543 = EcP_2*EcP_3;
                double t17544 = EcP_4+t17542+t17543;
                double t17545 = 1.0/t17544;
                double t17546 = t17541*t17519;
                double t17547 = t17546+1.0;
                double t17548 = 1.0/t17547;
                double t17549 = 1.0/t17513;
                double t17550 = rho_a-rho_b;
                double t17551 = t17550*t17549;
                double t17552 = Ac_4*4.0;
                double t17553 = Ac_3*Ac_3;
                double t17554 = t17552-t17553;
                double t17555 = Ac_2-t17516;
                double t17556 = Ac_3*t17516;
                double t17557 = Ac_4+t17515+t17556;
                double t17558 = 1.0/t17557;
                double t17559 = sqrt(t17554);
                double t17560 = Ac_3+t17525;
                double t17561 = 1.0/t17560;
                double t17562 = t17561*t17559;
                double t17563 = atan(t17562);
                double t17564 = 1.0/sqrt(t17554);
                double t17565 = 1.0/c;
                double t17566 = EcF_3*t17516;
                double t17567 = EcF_4+t17515+t17566;
                double t17568 = pow(t17513,1.0/3.0);
                double t17569 = EcF_3*c*t17531*t17533*(1.0/6.0);
                double t17570 = t17532+t17569;
                double t17571 = EcF_2-t17516;
                double t17572 = 1.0/(t17567*t17567);
                double t17573 = 1.0/t17567;
                double t17574 = EcF_3+t17525;
                double t17575 = 1.0/(t17574*t17574);
                double t17576 = EcF_4*4.0;
                double t17577 = EcF_3*EcF_3;
                double t17578 = t17576-t17577;
                double t17579 = t17575*t17578;
                double t17580 = t17579+1.0;
                double t17581 = 1.0/t17580;
                double t17582 = c*t17531*t17523*(1.0/3.0);
                double t17583 = t17582-c*t17514*t17535*t17537;
                double t17584 = t17522*t17565*t17583*t17568;
                double t17585 = t17535*t17536*t17537;
                double t17586 = c*t17520*t17531*t17523*t17533*(1.0/3.0);
                double t17587 = t17585+t17586;
                double t17588 = 1.0/(t17520*t17520);
                double t17589 = t17522*t17587*t17588;
                double t17590 = c*t17531*t17540*t17541*t17533*t17548*(1.0/3.0);
                double t17591 = t17590+t17589;
                double t17592 = EcP_2*EcP_3*t17545*t17591;
                double t17593 = t17592+t17584-EcP_3*c*t17531*t17541*t17533*t17548*(2.0/3.0);
                double t17594 = EcP_1*t17593;
                double t17595 = c*t17514*t17558;
                double t17596 = log(t17595);
                double t17597 = Ac_3*t17563*t17564*2.0;
                double t17598 = t17555*t17555;
                double t17599 = t17558*t17598;
                double t17600 = log(t17599);
                double t17601 = Ac_2*4.0;
                double t17602 = Ac_3*2.0;
                double t17603 = t17601+t17602;
                double t17604 = t17603*t17563*t17564;
                double t17605 = t17600+t17604;
                double t17606 = Ac_2*Ac_2;
                double t17607 = Ac_2*Ac_3;
                double t17608 = Ac_4+t17606+t17607;
                double t17609 = 1.0/t17608;
                double t17634 = Ac_2*Ac_3*t17605*t17609;
                double t17610 = -t17634+t17596+t17597;
                double t17611 = 1.0/Ac_1;
                double t17612 = t17571*t17571;
                double t17613 = sqrt(t17578);
                double t17614 = 1.0/t17574;
                double t17615 = t17613*t17614;
                double t17616 = atan(t17615);
                double t17617 = 1.0/sqrt(t17578);
                double t17618 = EcF_2*4.0;
                double t17619 = EcF_3*2.0;
                double t17620 = t17618+t17619;
                double t17621 = EcF_2*EcF_2;
                double t17622 = EcF_2*EcF_3;
                double t17623 = EcF_4+t17621+t17622;
                double t17624 = 1.0/t17623;
                double t17625 = c*t17514*t17523;
                double t17626 = log(t17625);
                double t17627 = EcP_3*t17530*t17529*2.0;
                double t17628 = t17523*t17536;
                double t17629 = log(t17628);
                double t17630 = t17530*t17540*t17529;
                double t17631 = t17630+t17629;
                double t17652 = EcP_2*EcP_3*t17631*t17545;
                double t17632 = -t17652+t17626+t17627;
                double t17633 = EcP_1*t17632;
                double t17635 = Ac_3*c*t17531*t17533*(1.0/6.0);
                double t17636 = t17532+t17635;
                double t17637 = 1.0/(t17557*t17557);
                double t17638 = 1.0/(t17560*t17560);
                double t17639 = t17554*t17638;
                double t17640 = t17639+1.0;
                double t17641 = 1.0/t17640;
                double t17642 = t17550*t17550;
                double t17643 = 1.0/(t17513*t17513*t17513*t17513);
                double t17644 = c*t17514*t17573;
                double t17645 = log(t17644);
                double t17646 = EcF_3*t17616*t17617*2.0;
                double t17647 = t17612*t17573;
                double t17648 = log(t17647);
                double t17649 = t17620*t17616*t17617;
                double t17650 = t17648+t17649;
                double t17656 = EcF_2*EcF_3*t17650*t17624;
                double t17651 = t17645+t17646-t17656;
                double t17653 = 1.0/t17610;
                double t17657 = EcF_1*t17651;
                double t17654 = t17633-t17657;
                double t17655 = t17642*t17642;
                double t17658 = d2fz0*t17611*t17653*t17654;
                double t17659 = t17658+1.0;
                double t17660 = 1.0/d2fz0;
                double t17661 = two_13*2.0;
                double t17662 = t17661-2.0;
                double t17663 = 1.0/t17662;
                double t17664 = t17551+1.0;
                double t17665 = pow(t17664,4.0/3.0);
                double t17666 = -t17551+1.0;
                double t17667 = pow(t17666,4.0/3.0);
                double t17668 = t17665+t17667-2.0;
                double t17669 = c*t17531*t17558*(1.0/3.0);
                double t17670 = t17669-c*t17514*t17636*t17637;
                double t17671 = t17670*t17565*t17557*t17568;
                double t17672 = t17636*t17637*t17598;
                double t17673 = c*t17531*t17533*t17555*t17558*(1.0/3.0);
                double t17674 = t17672+t17673;
                double t17675 = 1.0/(t17555*t17555);
                double t17676 = t17557*t17674*t17675;
                double t17677 = c*t17531*t17603*t17533*t17641*t17638*(1.0/3.0);
                double t17678 = t17676+t17677;
                double t17679 = Ac_2*Ac_3*t17609*t17678;
                double t17680 = t17671+t17679-Ac_3*c*t17531*t17533*t17641*t17638*(2.0/3.0);
                double t17681 = 1.0/(t17513*t17513);
                double t17682 = t17550*t17681;
                double t17683 = t17682+t17549;
                double t17684 = t17643*t17655*t17659;
                double t17685 = t17684-1.0;
                v_rho_b[Q] += scale * t17633+t17513*(-t17594+Ac_1*t17610*t17660*t17663*t17668*(1.0/(t17513*t17513*t17513*t17513*t17513)*t17655*t17659*4.0+t17643*t17655*(d2fz0*t17611*t17653*(t17594-EcF_1*(EcF_2*EcF_3*t17624*(1.0/(t17571*t17571)*t17567*(t17612*t17570*t17572+c*t17531*t17533*t17571*t17573*(1.0/3.0))+c*t17620*t17531*t17533*t17581*t17575*(1.0/3.0))+t17565*t17567*t17568*(c*t17531*t17573*(1.0/3.0)-c*t17514*t17570*t17572)-EcF_3*c*t17531*t17533*t17581*t17575*(2.0/3.0)))-d2fz0*1.0/(t17610*t17610)*t17611*t17680*t17654)+t17550*t17642*t17643*t17659*4.0)+Ac_1*t17610*t17660*t17663*t17685*(pow(t17664,1.0/3.0)*t17683*(4.0/3.0)-t17683*pow(t17666,1.0/3.0)*(4.0/3.0))+Ac_1*t17660*t17680*t17663*t17685*t17668)-Ac_1*t17610*t17660*t17663*t17685*t17668;
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t17692 = rho_a+rho_b;
                double t17693 = 1.0/pow(t17692,1.0/3.0);
                double t17694 = c*t17693;
                double t17695 = 1.0/pow(t17692,4.0/3.0);
                double t17696 = sqrt(t17694);
                double t17697 = EcP_3*t17696;
                double t17698 = EcP_4+t17694+t17697;
                double t17699 = c*t17695*(1.0/3.0);
                double t17700 = 1.0/sqrt(t17694);
                double t17701 = EcP_3*c*t17700*t17695*(1.0/6.0);
                double t17702 = t17701+t17699;
                double t17703 = 1.0/c;
                double t17704 = 1.0/t17698;
                double t17705 = c*t17704*t17695*(1.0/3.0);
                double t17706 = 1.0/(t17698*t17698);
                double t17840 = c*t17702*t17706*t17693;
                double t17707 = t17705-t17840;
                double t17708 = pow(t17692,1.0/3.0);
                double t17709 = 1.0/pow(t17692,7.0/3.0);
                double t17710 = EcP_2-t17696;
                double t17711 = 1.0/(t17710*t17710);
                double t17712 = t17710*t17710;
                double t17713 = c*t17709*(4.0/9.0);
                double t17714 = EcP_3*c*t17700*t17709*(2.0/9.0);
                double t17715 = c*c;
                double t17716 = 1.0/pow(t17692,8.0/3.0);
                double t17717 = 1.0/pow(t17694,3.0/2.0);
                double t17843 = EcP_3*t17715*t17716*t17717*(1.0/3.6E1);
                double t17718 = t17713+t17714-t17843;
                double t17719 = t17702*t17702;
                double t17720 = 1.0/(t17698*t17698*t17698);
                double t17721 = t17696*2.0;
                double t17722 = EcP_3+t17721;
                double t17723 = EcP_2*4.0;
                double t17724 = EcP_3*2.0;
                double t17725 = t17723+t17724;
                double t17726 = 1.0/(t17722*t17722);
                double t17727 = EcP_4*4.0;
                double t17728 = EcP_3*EcP_3;
                double t17729 = t17727-t17728;
                double t17730 = t17726*t17729;
                double t17731 = t17730+1.0;
                double t17732 = 1.0/t17731;
                double t17733 = t17702*t17712*t17706;
                double t17734 = c*t17700*t17710*t17704*t17695*(1.0/3.0);
                double t17735 = t17733+t17734;
                double t17736 = 1.0/(t17722*t17722*t17722);
                double t17737 = 1.0/(t17722*t17722*t17722*t17722*t17722);
                double t17738 = 1.0/(t17731*t17731);
                double t17739 = rho_a-rho_b;
                double t17740 = t17739*t17739;
                double t17741 = EcF_4*4.0;
                double t17742 = EcF_3*EcF_3;
                double t17743 = t17741-t17742;
                double t17744 = EcF_2-t17696;
                double t17745 = EcF_3*t17696;
                double t17746 = EcF_4+t17745+t17694;
                double t17747 = 1.0/t17746;
                double t17748 = sqrt(t17743);
                double t17749 = EcF_3+t17721;
                double t17750 = 1.0/t17749;
                double t17751 = t17750*t17748;
                double t17752 = atan(t17751);
                double t17753 = 1.0/sqrt(t17743);
                double t17754 = sqrt(t17729);
                double t17755 = 1.0/t17722;
                double t17756 = t17754*t17755;
                double t17757 = atan(t17756);
                double t17758 = 1.0/sqrt(t17729);
                double t17759 = EcP_2*EcP_2;
                double t17760 = EcP_2*EcP_3;
                double t17761 = EcP_4+t17760+t17759;
                double t17762 = 1.0/t17761;
                double t17763 = Ac_4*4.0;
                double t17764 = Ac_3*Ac_3;
                double t17765 = t17763-t17764;
                double t17766 = Ac_2-t17696;
                double t17767 = Ac_3*t17696;
                double t17768 = Ac_4+t17694+t17767;
                double t17769 = 1.0/t17768;
                double t17770 = sqrt(t17765);
                double t17771 = Ac_3+t17721;
                double t17772 = 1.0/t17771;
                double t17773 = t17770*t17772;
                double t17774 = atan(t17773);
                double t17775 = 1.0/sqrt(t17765);
                double t17776 = c*t17693*t17769;
                double t17777 = log(t17776);
                double t17778 = Ac_3*t17774*t17775*2.0;
                double t17779 = t17766*t17766;
                double t17780 = t17769*t17779;
                double t17781 = log(t17780);
                double t17782 = Ac_2*4.0;
                double t17783 = Ac_3*2.0;
                double t17784 = t17782+t17783;
                double t17785 = t17774*t17775*t17784;
                double t17786 = t17781+t17785;
                double t17787 = Ac_2*Ac_2;
                double t17788 = Ac_2*Ac_3;
                double t17789 = Ac_4+t17787+t17788;
                double t17790 = 1.0/t17789;
                double t17807 = Ac_2*Ac_3*t17790*t17786;
                double t17791 = -t17807+t17777+t17778;
                double t17792 = 1.0/t17692;
                double t17793 = t17792*t17739;
                double t17794 = 1.0/(t17692*t17692);
                double t17795 = t17794*2.0;
                double t17796 = 1.0/(t17692*t17692*t17692);
                double t17797 = t17795-t17739*t17796*2.0;
                double t17798 = t17793+1.0;
                double t17801 = t17739*t17794;
                double t17799 = -t17801+t17792;
                double t17800 = -t17793+1.0;
                double t17802 = t17799*t17799;
                double t17803 = 1.0/d2fz0;
                double t17804 = two_13*2.0;
                double t17805 = t17804-2.0;
                double t17806 = 1.0/t17805;
                double t17808 = 1.0/(t17692*t17692*t17692*t17692);
                double t17809 = t17740*t17740;
                double t17810 = 1.0/Ac_1;
                double t17811 = EcF_3*c*t17700*t17695*(1.0/6.0);
                double t17812 = t17811+t17699;
                double t17813 = c*t17747*t17695*(1.0/3.0);
                double t17814 = 1.0/(t17746*t17746);
                double t17864 = c*t17812*t17814*t17693;
                double t17815 = t17813-t17864;
                double t17816 = 1.0/pow(t17692,2.0/3.0);
                double t17817 = EcF_2*EcF_2;
                double t17818 = EcF_2*EcF_3;
                double t17819 = EcF_4+t17817+t17818;
                double t17820 = 1.0/t17819;
                double t17821 = t17744*t17744;
                double t17822 = 1.0/(t17744*t17744);
                double t17823 = EcF_3*c*t17700*t17709*(2.0/9.0);
                double t17824 = t17713+t17823-EcF_3*t17715*t17716*t17717*(1.0/3.6E1);
                double t17825 = t17812*t17812;
                double t17826 = 1.0/(t17746*t17746*t17746);
                double t17827 = EcF_2*4.0;
                double t17828 = EcF_3*2.0;
                double t17829 = t17827+t17828;
                double t17830 = 1.0/(t17749*t17749);
                double t17831 = t17830*t17743;
                double t17832 = t17831+1.0;
                double t17833 = 1.0/t17832;
                double t17834 = t17812*t17821*t17814;
                double t17835 = c*t17700*t17744*t17747*t17695*(1.0/3.0);
                double t17836 = t17834+t17835;
                double t17837 = 1.0/(t17749*t17749*t17749);
                double t17838 = 1.0/(t17749*t17749*t17749*t17749*t17749);
                double t17839 = 1.0/(t17832*t17832);
                double t17841 = t17702*t17703*t17707*t17708;
                double t17842 = c*t17704*t17709*(4.0/9.0);
                double t17844 = c*t17720*t17719*t17693*2.0;
                double t17845 = t17842+t17844-c*t17702*t17706*t17695*(2.0/3.0)-c*t17706*t17718*t17693;
                double t17846 = t17703*t17708*t17845*t17698;
                double t17847 = t17702*t17711*t17735;
                double t17848 = c*t17704*t17709*(1.0/1.8E1);
                double t17849 = t17720*t17712*t17719*2.0;
                double t17850 = t17710*t17704*t17715*t17716*t17717*(1.0/1.8E1);
                double t17851 = c*t17700*t17710*t17702*t17706*t17695*(2.0/3.0);
                double t17852 = t17850+t17851+t17848+t17849-t17712*t17706*t17718-c*t17700*t17710*t17704*t17709*(4.0/9.0);
                double t17853 = c*t17700*t17732*t17725*t17726*t17709*(4.0/9.0);
                double t17854 = 1.0/(t17710*t17710*t17710);
                double t17855 = c*t17700*t17735*t17854*t17695*t17698*(1.0/3.0);
                double t17856 = c*t17725*t17709*t17737*t17729*t17738*(2.0/9.0);
                double t17857 = t17853+t17855+t17847+t17856-t17711*t17852*t17698-c*t17732*t17725*t17709*t17736*(2.0/9.0)-t17732*t17715*t17716*t17725*t17717*t17726*(1.0/1.8E1);
                double t17858 = EcP_2*EcP_3*t17762*t17857;
                double t17859 = EcP_3*c*t17732*t17709*t17736*(4.0/9.0);
                double t17860 = EcP_3*t17732*t17715*t17716*t17717*t17726*(1.0/9.0);
                double t17861 = t17841+t17860+t17846+t17858+t17859-t17703*t17707*t17816*t17698*(1.0/3.0)-EcP_3*c*t17700*t17732*t17726*t17709*(8.0/9.0)-EcP_3*c*t17709*t17737*t17729*t17738*(4.0/9.0);
                double t17862 = EcP_1*t17861;
                double t17863 = 1.0/t17791;
                double t17865 = Ac_3*c*t17700*t17695*(1.0/6.0);
                double t17866 = t17865+t17699;
                double t17867 = 1.0/(t17768*t17768);
                double t17868 = 1.0/(t17771*t17771);
                double t17869 = t17765*t17868;
                double t17870 = t17869+1.0;
                double t17871 = 1.0/t17870;
                double t17872 = c*t17693*t17747;
                double t17873 = log(t17872);
                double t17874 = EcF_3*t17752*t17753*2.0;
                double t17875 = t17821*t17747;
                double t17876 = log(t17875);
                double t17877 = t17752*t17753*t17829;
                double t17878 = t17876+t17877;
                double t17902 = EcF_2*EcF_3*t17820*t17878;
                double t17879 = -t17902+t17873+t17874;
                double t17880 = EcF_1*t17879;
                double t17881 = c*t17704*t17693;
                double t17882 = log(t17881);
                double t17883 = EcP_3*t17757*t17758*2.0;
                double t17884 = t17712*t17704;
                double t17885 = log(t17884);
                double t17886 = t17725*t17757*t17758;
                double t17887 = t17885+t17886;
                double t17903 = EcP_2*EcP_3*t17762*t17887;
                double t17888 = -t17903+t17882+t17883;
                double t17904 = EcP_1*t17888;
                double t17889 = -t17904+t17880;
                double t17890 = c*t17695*t17769*(1.0/3.0);
                double t17906 = c*t17693*t17866*t17867;
                double t17891 = -t17906+t17890;
                double t17892 = t17703*t17708*t17891*t17768;
                double t17893 = t17866*t17867*t17779;
                double t17894 = c*t17700*t17766*t17695*t17769*(1.0/3.0);
                double t17895 = t17893+t17894;
                double t17896 = 1.0/(t17766*t17766);
                double t17897 = t17768*t17895*t17896;
                double t17898 = c*t17700*t17871*t17784*t17695*t17868*(1.0/3.0);
                double t17899 = t17897+t17898;
                double t17900 = Ac_2*Ac_3*t17790*t17899;
                double t17928 = Ac_3*c*t17700*t17871*t17695*t17868*(2.0/3.0);
                double t17901 = t17900+t17892-t17928;
                double t17905 = 1.0/(t17791*t17791);
                double t17907 = Ac_3*c*t17700*t17709*(2.0/9.0);
                double t17951 = Ac_3*t17715*t17716*t17717*(1.0/3.6E1);
                double t17908 = t17713-t17951+t17907;
                double t17909 = t17866*t17866;
                double t17910 = 1.0/(t17768*t17768*t17768);
                double t17911 = 1.0/(t17771*t17771*t17771);
                double t17912 = 1.0/(t17771*t17771*t17771*t17771*t17771);
                double t17913 = 1.0/(t17870*t17870);
                double t17914 = t17703*t17815*t17708*t17746;
                double t17915 = t17822*t17746*t17836;
                double t17916 = c*t17700*t17830*t17833*t17829*t17695*(1.0/3.0);
                double t17917 = t17915+t17916;
                double t17918 = EcF_2*EcF_3*t17820*t17917;
                double t17929 = EcF_3*c*t17700*t17830*t17833*t17695*(2.0/3.0);
                double t17919 = t17914+t17918-t17929;
                double t17920 = EcF_1*t17919;
                double t17921 = t17703*t17707*t17708*t17698;
                double t17922 = t17711*t17735*t17698;
                double t17923 = c*t17700*t17732*t17725*t17726*t17695*(1.0/3.0);
                double t17924 = t17922+t17923;
                double t17925 = EcP_2*EcP_3*t17762*t17924;
                double t17930 = EcP_3*c*t17700*t17732*t17726*t17695*(2.0/3.0);
                double t17926 = t17921-t17930+t17925;
                double t17931 = EcP_1*t17926;
                double t17927 = t17920-t17931;
                double t17932 = d2fz0*t17810*t17863*t17927;
                double t17939 = d2fz0*t17810*t17901*t17905*t17889;
                double t17933 = t17932-t17939;
                double t17934 = d2fz0*t17810*t17863*t17889;
                double t17935 = t17934-1.0;
                double t17936 = 1.0/(t17692*t17692*t17692*t17692*t17692);
                double t17937 = pow(t17798,1.0/3.0);
                double t17938 = pow(t17800,1.0/3.0);
                double t17940 = t17937*t17799*(4.0/3.0);
                double t17972 = t17938*t17799*(4.0/3.0);
                double t17941 = t17940-t17972;
                double t17942 = t17808*t17809*t17935;
                double t17943 = t17942+1.0;
                double t17944 = pow(t17798,4.0/3.0);
                double t17945 = pow(t17800,4.0/3.0);
                double t17946 = t17944+t17945-2.0;
                double t17947 = t17933*t17808*t17809;
                double t17948 = t17809*t17935*t17936*4.0;
                double t17971 = t17740*t17808*t17935*t17739*4.0;
                double t17949 = -t17971+t17947+t17948;
                double t17950 = c*t17709*t17769*(4.0/9.0);
                double t17952 = c*t17910*t17693*t17909*2.0;
                double t17953 = t17950+t17952-c*t17908*t17693*t17867-c*t17695*t17866*t17867*(2.0/3.0);
                double t17954 = t17703*t17708*t17953*t17768;
                double t17955 = t17866*t17895*t17896;
                double t17956 = c*t17709*t17769*(1.0/1.8E1);
                double t17957 = t17910*t17909*t17779*2.0;
                double t17958 = t17715*t17716*t17717*t17766*t17769*(1.0/1.8E1);
                double t17959 = c*t17700*t17766*t17695*t17866*t17867*(2.0/3.0);
                double t17960 = t17956+t17957+t17958+t17959-t17908*t17867*t17779-c*t17700*t17709*t17766*t17769*(4.0/9.0);
                double t17961 = c*t17700*t17709*t17871*t17784*t17868*(4.0/9.0);
                double t17962 = 1.0/(t17766*t17766*t17766);
                double t17963 = c*t17700*t17962*t17695*t17768*t17895*(1.0/3.0);
                double t17964 = c*t17912*t17913*t17709*t17765*t17784*(2.0/9.0);
                double t17965 = t17961+t17963+t17955+t17964-t17960*t17768*t17896-c*t17911*t17709*t17871*t17784*(2.0/9.0)-t17715*t17716*t17717*t17871*t17784*t17868*(1.0/1.8E1);
                double t17966 = Ac_2*Ac_3*t17790*t17965;
                double t17967 = t17703*t17708*t17891*t17866;
                double t17968 = Ac_3*c*t17911*t17709*t17871*(4.0/9.0);
                double t17969 = Ac_3*t17715*t17716*t17717*t17871*t17868*(1.0/9.0);
                double t17970 = t17954+t17966+t17967+t17968+t17969-t17703*t17816*t17891*t17768*(1.0/3.0)-Ac_3*c*t17912*t17913*t17709*t17765*(4.0/9.0)-Ac_3*c*t17700*t17709*t17871*t17868*(8.0/9.0);
                v_rho_a_rho_a[Q] += scale * EcP_1*t17926*-2.0+t17692*(t17862+Ac_1*t17803*t17806*t17791*t17946*(1.0/(t17692*t17692*t17692*t17692*t17692*t17692)*t17809*t17935*2.0E1+t17740*t17808*t17935*1.2E1+t17933*t17809*t17936*8.0-t17808*t17809*(d2fz0*t17810*t17863*(t17862-EcF_1*(t17703*t17708*t17746*(c*t17709*t17747*(4.0/9.0)-c*t17812*t17814*t17695*(2.0/3.0)-c*t17814*t17824*t17693+c*t17825*t17826*t17693*2.0)+t17703*t17812*t17815*t17708-t17703*t17815*t17816*t17746*(1.0/3.0)+EcF_2*EcF_3*t17820*(-t17822*t17746*(c*t17709*t17747*(1.0/1.8E1)-t17821*t17814*t17824+t17821*t17825*t17826*2.0-c*t17700*t17744*t17709*t17747*(4.0/9.0)+t17715*t17716*t17717*t17744*t17747*(1.0/1.8E1)+c*t17700*t17812*t17814*t17744*t17695*(2.0/3.0))+t17812*t17822*t17836-c*t17833*t17709*t17837*t17829*(2.0/9.0)+c*t17700*t17830*t17833*t17709*t17829*(4.0/9.0)+c*t17743*t17709*t17829*t17838*t17839*(2.0/9.0)-t17830*t17715*t17716*t17833*t17717*t17829*(1.0/1.8E1)+c*t17700*1.0/(t17744*t17744*t17744)*t17746*t17836*t17695*(1.0/3.0))+EcF_3*c*t17833*t17709*t17837*(4.0/9.0)-EcF_3*c*t17700*t17830*t17833*t17709*(8.0/9.0)-EcF_3*c*t17743*t17709*t17838*t17839*(4.0/9.0)+EcF_3*t17830*t17715*t17716*t17833*t17717*(1.0/9.0)))-d2fz0*t17810*(t17901*t17901)*1.0/(t17791*t17791*t17791)*t17889*2.0+d2fz0*t17810*t17901*t17905*t17927*2.0+d2fz0*t17810*t17905*t17970*t17889)-t17740*t17933*t17808*t17739*8.0-t17740*t17935*t17936*t17739*3.2E1)+Ac_1*t17803*t17806*t17943*t17791*(t17937*t17797*(-4.0/3.0)+t17938*t17797*(4.0/3.0)+1.0/pow(t17800,2.0/3.0)*t17802*(4.0/9.0)+t17802*1.0/pow(t17798,2.0/3.0)*(4.0/9.0))-Ac_1*t17901*t17803*t17806*t17941*t17943*2.0+Ac_1*t17901*t17803*t17806*t17946*t17949*2.0+Ac_1*t17803*t17806*t17943*t17970*t17946-Ac_1*t17803*t17806*t17941*t17791*t17949*2.0)-Ac_1*t17901*t17803*t17806*t17943*t17946*2.0+Ac_1*t17803*t17806*t17941*t17943*t17791*2.0-Ac_1*t17803*t17806*t17791*t17946*t17949*2.0;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t17974 = rho_a+rho_b;
                double t17975 = 1.0/pow(t17974,1.0/3.0);
                double t17976 = c*t17975;
                double t17977 = 1.0/pow(t17974,4.0/3.0);
                double t17978 = sqrt(t17976);
                double t17979 = EcP_3*t17978;
                double t17980 = EcP_4+t17976+t17979;
                double t17981 = c*t17977*(1.0/3.0);
                double t17982 = 1.0/sqrt(t17976);
                double t17983 = EcP_3*c*t17982*t17977*(1.0/6.0);
                double t17984 = t17981+t17983;
                double t17985 = EcP_2-t17978;
                double t17986 = 1.0/(t17980*t17980);
                double t17987 = 1.0/t17980;
                double t17988 = t17978*2.0;
                double t17989 = EcP_3+t17988;
                double t17990 = 1.0/(t17989*t17989);
                double t17991 = EcP_4*4.0;
                double t17992 = EcP_3*EcP_3;
                double t17993 = t17991-t17992;
                double t17994 = t17990*t17993;
                double t17995 = t17994+1.0;
                double t17996 = 1.0/t17995;
                double t17997 = 1.0/c;
                double t17998 = c*t17977*t17987*(1.0/3.0);
                double t18001 = c*t17975*t17984*t17986;
                double t17999 = t17998-t18001;
                double t18000 = pow(t17974,1.0/3.0);
                double t18002 = 1.0/pow(t17974,7.0/3.0);
                double t18003 = EcP_2*EcP_2;
                double t18004 = EcP_2*EcP_3;
                double t18005 = EcP_4+t18003+t18004;
                double t18006 = 1.0/t18005;
                double t18007 = t17985*t17985;
                double t18008 = t17984*t17986*t18007;
                double t18009 = c*t17982*t17985*t17977*t17987*(1.0/3.0);
                double t18010 = t18008+t18009;
                double t18011 = 1.0/(t17985*t17985);
                double t18012 = c*t18002*(4.0/9.0);
                double t18013 = EcP_3*c*t17982*t18002*(2.0/9.0);
                double t18014 = c*c;
                double t18015 = 1.0/pow(t17974,8.0/3.0);
                double t18016 = 1.0/pow(t17976,3.0/2.0);
                double t18205 = EcP_3*t18014*t18015*t18016*(1.0/3.6E1);
                double t18017 = t18012+t18013-t18205;
                double t18018 = t17984*t17984;
                double t18019 = 1.0/(t17980*t17980*t17980);
                double t18020 = EcP_2*4.0;
                double t18021 = EcP_3*2.0;
                double t18022 = t18020+t18021;
                double t18023 = 1.0/(t17989*t17989*t17989);
                double t18024 = 1.0/(t17989*t17989*t17989*t17989*t17989);
                double t18025 = 1.0/(t17995*t17995);
                double t18026 = rho_a-rho_b;
                double t18027 = t18026*t18026;
                double t18028 = EcF_4*4.0;
                double t18029 = EcF_3*EcF_3;
                double t18030 = t18028-t18029;
                double t18031 = EcF_2-t17978;
                double t18032 = EcF_3*t17978;
                double t18033 = EcF_4+t17976+t18032;
                double t18034 = 1.0/t18033;
                double t18035 = sqrt(t18030);
                double t18036 = EcF_3+t17988;
                double t18037 = 1.0/t18036;
                double t18038 = t18035*t18037;
                double t18039 = atan(t18038);
                double t18040 = 1.0/sqrt(t18030);
                double t18041 = sqrt(t17993);
                double t18042 = 1.0/t17989;
                double t18043 = t18041*t18042;
                double t18044 = atan(t18043);
                double t18045 = 1.0/sqrt(t17993);
                double t18046 = Ac_4*4.0;
                double t18047 = Ac_3*Ac_3;
                double t18048 = t18046-t18047;
                double t18049 = Ac_2-t17978;
                double t18050 = Ac_3*t17978;
                double t18051 = Ac_4+t17976+t18050;
                double t18052 = 1.0/t18051;
                double t18053 = sqrt(t18048);
                double t18054 = Ac_3+t17988;
                double t18055 = 1.0/t18054;
                double t18056 = t18053*t18055;
                double t18057 = atan(t18056);
                double t18058 = 1.0/sqrt(t18048);
                double t18059 = c*t17975*t18052;
                double t18060 = log(t18059);
                double t18061 = Ac_3*t18057*t18058*2.0;
                double t18062 = t18049*t18049;
                double t18063 = t18052*t18062;
                double t18064 = log(t18063);
                double t18065 = Ac_2*4.0;
                double t18066 = Ac_3*2.0;
                double t18067 = t18065+t18066;
                double t18068 = t18057*t18058*t18067;
                double t18069 = t18064+t18068;
                double t18070 = Ac_2*Ac_2;
                double t18071 = Ac_2*Ac_3;
                double t18072 = Ac_4+t18070+t18071;
                double t18073 = 1.0/t18072;
                double t18090 = Ac_2*Ac_3*t18073*t18069;
                double t18074 = t18060+t18061-t18090;
                double t18075 = 1.0/t17974;
                double t18076 = t18026*t18075;
                double t18077 = 1.0/(t17974*t17974*t17974);
                double t18078 = t18076+1.0;
                double t18079 = 1.0/(t17974*t17974);
                double t18080 = t18026*t18079;
                double t18081 = -t18076+1.0;
                double t18082 = t18080+t18075;
                double t18083 = t18080-t18075;
                double t18084 = 1.0/d2fz0;
                double t18085 = two_13*2.0;
                double t18086 = t18085-2.0;
                double t18087 = 1.0/t18086;
                double t18088 = pow(t18078,1.0/3.0);
                double t18089 = pow(t18081,1.0/3.0);
                double t18091 = 1.0/(t17974*t17974*t17974*t17974);
                double t18092 = 1.0/Ac_1;
                double t18093 = EcF_3*c*t17982*t17977*(1.0/6.0);
                double t18094 = t17981+t18093;
                double t18095 = t18031*t18031;
                double t18096 = 1.0/(t18033*t18033);
                double t18097 = EcF_2*4.0;
                double t18098 = EcF_3*2.0;
                double t18099 = t18097+t18098;
                double t18100 = 1.0/(t18036*t18036);
                double t18101 = EcF_2*EcF_2;
                double t18102 = EcF_2*EcF_3;
                double t18103 = EcF_4+t18101+t18102;
                double t18104 = 1.0/t18103;
                double t18105 = t18100*t18030;
                double t18106 = t18105+1.0;
                double t18107 = 1.0/t18106;
                double t18108 = t17980*t17997*t17999*t18000;
                double t18109 = t17980*t18010*t18011;
                double t18110 = c*t17990*t17982*t17977*t17996*t18022*(1.0/3.0);
                double t18111 = t18110+t18109;
                double t18112 = EcP_2*EcP_3*t18111*t18006;
                double t18159 = EcP_3*c*t17990*t17982*t17977*t17996*(2.0/3.0);
                double t18113 = t18112+t18108-t18159;
                double t18114 = 1.0/t18074;
                double t18115 = c*t17975*t18034;
                double t18116 = log(t18115);
                double t18117 = EcF_3*t18040*t18039*2.0;
                double t18118 = t18034*t18095;
                double t18119 = log(t18118);
                double t18120 = t18040*t18039*t18099;
                double t18121 = t18120+t18119;
                double t18141 = EcF_2*EcF_3*t18121*t18104;
                double t18122 = -t18141+t18116+t18117;
                double t18123 = EcF_1*t18122;
                double t18124 = c*t17975*t17987;
                double t18125 = log(t18124);
                double t18126 = EcP_3*t18044*t18045*2.0;
                double t18127 = t17987*t18007;
                double t18128 = log(t18127);
                double t18129 = t18022*t18044*t18045;
                double t18130 = t18128+t18129;
                double t18142 = EcP_2*EcP_3*t18130*t18006;
                double t18131 = -t18142+t18125+t18126;
                double t18143 = EcP_1*t18131;
                double t18132 = t18123-t18143;
                double t18133 = Ac_3*c*t17982*t17977*(1.0/6.0);
                double t18134 = t17981+t18133;
                double t18135 = 1.0/(t18051*t18051);
                double t18136 = 1.0/(t18054*t18054);
                double t18137 = t18136*t18048;
                double t18138 = t18137+1.0;
                double t18139 = 1.0/t18138;
                double t18140 = t18027*t18027;
                double t18144 = d2fz0*t18114*t18132*t18092;
                double t18145 = t18144-1.0;
                double t18146 = c*t17977*t18034*(1.0/3.0);
                double t18186 = c*t17975*t18094*t18096;
                double t18147 = t18146-t18186;
                double t18148 = t17997*t18000*t18033*t18147;
                double t18149 = t18094*t18095*t18096;
                double t18150 = c*t17982*t17977*t18031*t18034*(1.0/3.0);
                double t18151 = t18150+t18149;
                double t18152 = 1.0/(t18031*t18031);
                double t18153 = t18033*t18151*t18152;
                double t18154 = c*t17982*t17977*t18100*t18107*t18099*(1.0/3.0);
                double t18155 = t18153+t18154;
                double t18156 = EcF_2*EcF_3*t18104*t18155;
                double t18187 = EcF_3*c*t17982*t17977*t18100*t18107*(2.0/3.0);
                double t18157 = t18156+t18148-t18187;
                double t18158 = EcF_1*t18157;
                double t18188 = EcP_1*t18113;
                double t18160 = t18158-t18188;
                double t18161 = d2fz0*t18114*t18160*t18092;
                double t18162 = 1.0/(t18074*t18074);
                double t18163 = c*t17977*t18052*(1.0/3.0);
                double t18183 = c*t17975*t18134*t18135;
                double t18164 = t18163-t18183;
                double t18165 = t17997*t18000*t18051*t18164;
                double t18166 = t18062*t18134*t18135;
                double t18167 = c*t17982*t17977*t18052*t18049*(1.0/3.0);
                double t18168 = t18166+t18167;
                double t18169 = 1.0/(t18049*t18049);
                double t18170 = t18051*t18168*t18169;
                double t18171 = c*t17982*t17977*t18136*t18067*t18139*(1.0/3.0);
                double t18172 = t18170+t18171;
                double t18173 = Ac_2*Ac_3*t18073*t18172;
                double t18184 = Ac_3*c*t17982*t17977*t18136*t18139*(2.0/3.0);
                double t18174 = t18173+t18165-t18184;
                double t18189 = d2fz0*t18132*t18162*t18092*t18174;
                double t18175 = t18161-t18189;
                double t18176 = t18140*t18091*t18175;
                double t18177 = 1.0/(t17974*t17974*t17974*t17974*t17974);
                double t18178 = t18140*t18145*t18177*4.0;
                double t18179 = t18082*t18088*(4.0/3.0);
                double t18254 = t18082*t18089*(4.0/3.0);
                double t18180 = -t18254+t18179;
                double t18181 = t18140*t18091*t18145;
                double t18182 = t18181+1.0;
                double t18185 = t18083*t18088*(4.0/3.0);
                double t18190 = t18026*t18027*t18091*t18145*4.0;
                double t18191 = pow(t18078,4.0/3.0);
                double t18192 = pow(t18081,4.0/3.0);
                double t18193 = t18191+t18192-2.0;
                double t18194 = t18190+t18176+t18178;
                double t18195 = 1.0/pow(t17974,2.0/3.0);
                double t18196 = EcF_3*c*t17982*t18002*(2.0/9.0);
                double t18197 = t18012+t18196-EcF_3*t18014*t18015*t18016*(1.0/3.6E1);
                double t18198 = t18094*t18094;
                double t18199 = 1.0/(t18033*t18033*t18033);
                double t18200 = 1.0/(t18036*t18036*t18036);
                double t18201 = 1.0/(t18036*t18036*t18036*t18036*t18036);
                double t18202 = 1.0/(t18106*t18106);
                double t18203 = t17984*t17997*t17999*t18000;
                double t18204 = c*t17987*t18002*(4.0/9.0);
                double t18206 = c*t17975*t18018*t18019*2.0;
                double t18207 = t18204+t18206-c*t17984*t17977*t17986*(2.0/3.0)-c*t17975*t17986*t18017;
                double t18208 = t17980*t17997*t18000*t18207;
                double t18209 = t17984*t18010*t18011;
                double t18210 = c*t17987*t18002*(1.0/1.8E1);
                double t18211 = t18007*t18018*t18019*2.0;
                double t18212 = t17985*t17987*t18014*t18015*t18016*(1.0/1.8E1);
                double t18213 = c*t17982*t17984*t17985*t17977*t17986*(2.0/3.0);
                double t18214 = t18210+t18211+t18212+t18213-t17986*t18007*t18017-c*t17982*t17985*t17987*t18002*(4.0/9.0);
                double t18215 = c*t17990*t17982*t17996*t18002*t18022*(4.0/9.0);
                double t18216 = 1.0/(t17985*t17985*t17985);
                double t18217 = c*t17980*t17982*t17977*t18010*t18216*(1.0/3.0);
                double t18218 = c*t17993*t18002*t18022*t18024*t18025*(2.0/9.0);
                double t18219 = t18215+t18217+t18209+t18218-t17980*t18011*t18214-c*t17996*t18002*t18022*t18023*(2.0/9.0)-t17990*t17996*t18022*t18014*t18015*t18016*(1.0/1.8E1);
                double t18220 = EcP_2*EcP_3*t18006*t18219;
                double t18221 = EcP_3*c*t17996*t18002*t18023*(4.0/9.0);
                double t18222 = EcP_3*t17990*t17996*t18014*t18015*t18016*(1.0/9.0);
                double t18223 = t18220+t18203+t18221+t18222+t18208-t17980*t17997*t17999*t18195*(1.0/3.0)-EcP_3*c*t17990*t17982*t17996*t18002*(8.0/9.0)-EcP_3*c*t17993*t18002*t18024*t18025*(4.0/9.0);
                double t18224 = EcP_1*t18223;
                double t18225 = Ac_3*c*t17982*t18002*(2.0/9.0);
                double t18233 = Ac_3*t18014*t18015*t18016*(1.0/3.6E1);
                double t18226 = t18012-t18233+t18225;
                double t18227 = t18134*t18134;
                double t18228 = 1.0/(t18051*t18051*t18051);
                double t18229 = 1.0/(t18054*t18054*t18054);
                double t18230 = 1.0/(t18054*t18054*t18054*t18054*t18054);
                double t18231 = 1.0/(t18138*t18138);
                double t18232 = c*t18002*t18052*(4.0/9.0);
                double t18234 = c*t17975*t18227*t18228*2.0;
                double t18235 = t18232+t18234-c*t17975*t18135*t18226-c*t17977*t18134*t18135*(2.0/3.0);
                double t18236 = t17997*t18000*t18051*t18235;
                double t18237 = t18134*t18168*t18169;
                double t18238 = c*t18002*t18052*(1.0/1.8E1);
                double t18239 = t18062*t18227*t18228*2.0;
                double t18240 = t18014*t18015*t18016*t18052*t18049*(1.0/1.8E1);
                double t18241 = c*t17982*t17977*t18134*t18135*t18049*(2.0/3.0);
                double t18242 = t18240+t18241+t18238+t18239-t18062*t18135*t18226-c*t17982*t18002*t18052*t18049*(4.0/9.0);
                double t18243 = c*t17982*t18002*t18136*t18067*t18139*(4.0/9.0);
                double t18244 = 1.0/(t18049*t18049*t18049);
                double t18245 = c*t17982*t17977*t18051*t18244*t18168*(1.0/3.0);
                double t18246 = c*t18002*t18230*t18231*t18048*t18067*(2.0/9.0);
                double t18247 = t18243+t18245+t18237+t18246-t18051*t18242*t18169-c*t18002*t18067*t18139*t18229*(2.0/9.0)-t18014*t18015*t18016*t18136*t18067*t18139*(1.0/1.8E1);
                double t18248 = Ac_2*Ac_3*t18073*t18247;
                double t18249 = t17997*t18000*t18134*t18164;
                double t18250 = Ac_3*c*t18002*t18139*t18229*(4.0/9.0);
                double t18251 = Ac_3*t18014*t18015*t18016*t18136*t18139*(1.0/9.0);
                double t18252 = t18250+t18251+t18236+t18248+t18249-t17997*t18051*t18164*t18195*(1.0/3.0)-Ac_3*c*t17982*t18002*t18136*t18139*(8.0/9.0)-Ac_3*c*t18002*t18230*t18231*t18048*(4.0/9.0);
                double t18253 = -t18190+t18176+t18178;
                v_rho_a_rho_b[Q] += scale * EcP_1*t18113*-2.0+t17974*(t18224+Ac_1*t18074*t18084*t18193*t18087*(1.0/(t17974*t17974*t17974*t17974*t17974*t17974)*t18140*t18145*2.0E1-t18027*t18091*t18145*1.2E1+t18140*t18175*t18177*8.0-t18140*t18091*(d2fz0*t18114*t18092*(t18224-EcF_1*(t17997*t18000*t18033*(c*t18002*t18034*(4.0/9.0)-c*t17977*t18094*t18096*(2.0/3.0)-c*t17975*t18096*t18197+c*t17975*t18198*t18199*2.0)+t17997*t18000*t18147*t18094-t17997*t18033*t18147*t18195*(1.0/3.0)+EcF_2*EcF_3*t18104*(-t18033*t18152*(c*t18002*t18034*(1.0/1.8E1)-t18095*t18096*t18197+t18095*t18198*t18199*2.0-c*t17982*t18002*t18031*t18034*(4.0/9.0)+t18031*t18014*t18015*t18016*t18034*(1.0/1.8E1)+c*t17982*t17977*t18031*t18094*t18096*(2.0/3.0))+t18151*t18152*t18094-c*t18002*t18200*t18107*t18099*(2.0/9.0)+c*t17982*t18100*t18002*t18107*t18099*(4.0/9.0)+c*t18002*t18030*t18201*t18202*t18099*(2.0/9.0)-t18100*t18014*t18015*t18016*t18107*t18099*(1.0/1.8E1)+c*t17982*t17977*1.0/(t18031*t18031*t18031)*t18033*t18151*(1.0/3.0))+EcF_3*c*t18002*t18200*t18107*(4.0/9.0)-EcF_3*c*t17982*t18100*t18002*t18107*(8.0/9.0)-EcF_3*c*t18002*t18030*t18201*t18202*(4.0/9.0)+EcF_3*t18100*t18014*t18015*t18016*t18107*(1.0/9.0)))-d2fz0*t18132*1.0/(t18074*t18074*t18074)*t18092*(t18174*t18174)*2.0+d2fz0*t18132*t18162*t18252*t18092+d2fz0*t18160*t18162*t18092*t18174*2.0))+Ac_1*t18074*t18182*t18084*t18087*(1.0/pow(t18081,2.0/3.0)*t18082*t18083*(4.0/9.0)+t18082*t18083*1.0/pow(t18078,2.0/3.0)*(4.0/9.0)+t18026*t18077*t18088*(8.0/3.0)-t18026*t18077*t18089*(8.0/3.0))+Ac_1*t18182*t18084*t18174*t18087*(t18185-t18089*(t18080-t18075)*(4.0/3.0))+Ac_1*t18074*t18084*t18194*t18087*(t18185-t18089*(t18080-t18075)*(4.0/3.0))+Ac_1*t18180*t18182*t18084*t18174*t18087+Ac_1*t18252*t18182*t18084*t18193*t18087+Ac_1*t18253*t18084*t18174*t18193*t18087+Ac_1*t18084*t18174*t18193*t18194*t18087+Ac_1*t18180*t18074*t18084*t18087*(t18176+t18178-t18026*t18027*t18091*t18145*4.0))-Ac_1*t18074*t18182*t18084*t18087*(t18185-t18083*t18089*(4.0/3.0))-Ac_1*t18180*t18074*t18182*t18084*t18087-Ac_1*t18253*t18074*t18084*t18193*t18087-Ac_1*t18182*t18084*t18174*t18193*t18087*2.0-Ac_1*t18074*t18084*t18193*t18194*t18087;
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t18256 = rho_a+rho_b;
                double t18257 = 1.0/pow(t18256,1.0/3.0);
                double t18258 = c*t18257;
                double t18259 = 1.0/pow(t18256,4.0/3.0);
                double t18260 = sqrt(t18258);
                double t18261 = EcP_3*t18260;
                double t18262 = EcP_4+t18261+t18258;
                double t18263 = c*t18259*(1.0/3.0);
                double t18264 = 1.0/sqrt(t18258);
                double t18265 = EcP_3*c*t18264*t18259*(1.0/6.0);
                double t18266 = t18263+t18265;
                double t18267 = 1.0/c;
                double t18268 = 1.0/t18262;
                double t18269 = c*t18259*t18268*(1.0/3.0);
                double t18270 = 1.0/(t18262*t18262);
                double t18405 = c*t18270*t18257*t18266;
                double t18271 = -t18405+t18269;
                double t18272 = pow(t18256,1.0/3.0);
                double t18273 = 1.0/pow(t18256,7.0/3.0);
                double t18274 = EcP_2-t18260;
                double t18275 = 1.0/(t18274*t18274);
                double t18276 = t18274*t18274;
                double t18277 = c*t18273*(4.0/9.0);
                double t18278 = EcP_3*c*t18264*t18273*(2.0/9.0);
                double t18279 = c*c;
                double t18280 = 1.0/pow(t18256,8.0/3.0);
                double t18281 = 1.0/pow(t18258,3.0/2.0);
                double t18408 = EcP_3*t18280*t18281*t18279*(1.0/3.6E1);
                double t18282 = -t18408+t18277+t18278;
                double t18283 = t18266*t18266;
                double t18284 = 1.0/(t18262*t18262*t18262);
                double t18285 = t18260*2.0;
                double t18286 = EcP_3+t18285;
                double t18287 = EcP_2*4.0;
                double t18288 = EcP_3*2.0;
                double t18289 = t18287+t18288;
                double t18290 = 1.0/(t18286*t18286);
                double t18291 = EcP_4*4.0;
                double t18292 = EcP_3*EcP_3;
                double t18293 = t18291-t18292;
                double t18294 = t18290*t18293;
                double t18295 = t18294+1.0;
                double t18296 = 1.0/t18295;
                double t18297 = t18270*t18266*t18276;
                double t18298 = c*t18264*t18274*t18259*t18268*(1.0/3.0);
                double t18299 = t18297+t18298;
                double t18300 = 1.0/(t18286*t18286*t18286);
                double t18301 = 1.0/(t18286*t18286*t18286*t18286*t18286);
                double t18302 = 1.0/(t18295*t18295);
                double t18303 = rho_a-rho_b;
                double t18304 = t18303*t18303;
                double t18305 = EcF_4*4.0;
                double t18306 = EcF_3*EcF_3;
                double t18307 = t18305-t18306;
                double t18308 = EcF_2-t18260;
                double t18309 = EcF_3*t18260;
                double t18310 = EcF_4+t18309+t18258;
                double t18311 = 1.0/t18310;
                double t18312 = sqrt(t18307);
                double t18313 = EcF_3+t18285;
                double t18314 = 1.0/t18313;
                double t18315 = t18312*t18314;
                double t18316 = atan(t18315);
                double t18317 = 1.0/sqrt(t18307);
                double t18318 = sqrt(t18293);
                double t18319 = 1.0/t18286;
                double t18320 = t18318*t18319;
                double t18321 = atan(t18320);
                double t18322 = 1.0/sqrt(t18293);
                double t18323 = EcP_2*EcP_2;
                double t18324 = EcP_2*EcP_3;
                double t18325 = EcP_4+t18323+t18324;
                double t18326 = 1.0/t18325;
                double t18327 = Ac_4*4.0;
                double t18328 = Ac_3*Ac_3;
                double t18329 = t18327-t18328;
                double t18330 = Ac_2-t18260;
                double t18331 = Ac_3*t18260;
                double t18332 = Ac_4+t18331+t18258;
                double t18333 = 1.0/t18332;
                double t18334 = sqrt(t18329);
                double t18335 = Ac_3+t18285;
                double t18336 = 1.0/t18335;
                double t18337 = t18334*t18336;
                double t18338 = atan(t18337);
                double t18339 = 1.0/sqrt(t18329);
                double t18340 = c*t18333*t18257;
                double t18341 = log(t18340);
                double t18342 = Ac_3*t18338*t18339*2.0;
                double t18343 = t18330*t18330;
                double t18344 = t18333*t18343;
                double t18345 = log(t18344);
                double t18346 = Ac_2*4.0;
                double t18347 = Ac_3*2.0;
                double t18348 = t18346+t18347;
                double t18349 = t18338*t18339*t18348;
                double t18350 = t18345+t18349;
                double t18351 = Ac_2*Ac_2;
                double t18352 = Ac_2*Ac_3;
                double t18353 = Ac_4+t18351+t18352;
                double t18354 = 1.0/t18353;
                double t18372 = Ac_2*Ac_3*t18350*t18354;
                double t18355 = t18341+t18342-t18372;
                double t18356 = 1.0/t18256;
                double t18357 = t18303*t18356;
                double t18358 = 1.0/(t18256*t18256);
                double t18359 = t18358*2.0;
                double t18360 = 1.0/(t18256*t18256*t18256);
                double t18361 = t18303*t18360*2.0;
                double t18362 = t18361+t18359;
                double t18363 = t18357+1.0;
                double t18366 = t18303*t18358;
                double t18364 = t18356+t18366;
                double t18365 = -t18357+1.0;
                double t18367 = t18364*t18364;
                double t18368 = 1.0/d2fz0;
                double t18369 = two_13*2.0;
                double t18370 = t18369-2.0;
                double t18371 = 1.0/t18370;
                double t18373 = 1.0/(t18256*t18256*t18256*t18256);
                double t18374 = t18304*t18304;
                double t18375 = 1.0/Ac_1;
                double t18376 = EcF_3*c*t18264*t18259*(1.0/6.0);
                double t18377 = t18263+t18376;
                double t18378 = c*t18311*t18259*(1.0/3.0);
                double t18379 = 1.0/(t18310*t18310);
                double t18429 = c*t18257*t18377*t18379;
                double t18380 = -t18429+t18378;
                double t18381 = 1.0/pow(t18256,2.0/3.0);
                double t18382 = EcF_2*EcF_2;
                double t18383 = EcF_2*EcF_3;
                double t18384 = EcF_4+t18382+t18383;
                double t18385 = 1.0/t18384;
                double t18386 = t18308*t18308;
                double t18387 = 1.0/(t18308*t18308);
                double t18388 = EcF_3*c*t18264*t18273*(2.0/9.0);
                double t18389 = t18277+t18388-EcF_3*t18280*t18281*t18279*(1.0/3.6E1);
                double t18390 = t18377*t18377;
                double t18391 = 1.0/(t18310*t18310*t18310);
                double t18392 = EcF_2*4.0;
                double t18393 = EcF_3*2.0;
                double t18394 = t18392+t18393;
                double t18395 = 1.0/(t18313*t18313);
                double t18396 = t18307*t18395;
                double t18397 = t18396+1.0;
                double t18398 = 1.0/t18397;
                double t18399 = t18377*t18386*t18379;
                double t18400 = c*t18311*t18308*t18264*t18259*(1.0/3.0);
                double t18401 = t18400+t18399;
                double t18402 = 1.0/(t18313*t18313*t18313);
                double t18403 = 1.0/(t18313*t18313*t18313*t18313*t18313);
                double t18404 = 1.0/(t18397*t18397);
                double t18406 = t18271*t18272*t18266*t18267;
                double t18407 = c*t18273*t18268*(4.0/9.0);
                double t18409 = c*t18283*t18257*t18284*2.0;
                double t18410 = t18407+t18409-c*t18270*t18282*t18257-c*t18270*t18266*t18259*(2.0/3.0);
                double t18411 = t18410*t18262*t18272*t18267;
                double t18412 = t18266*t18275*t18299;
                double t18413 = c*t18273*t18268*(1.0/1.8E1);
                double t18414 = t18283*t18284*t18276*2.0;
                double t18415 = t18280*t18281*t18274*t18268*t18279*(1.0/1.8E1);
                double t18416 = c*t18270*t18264*t18274*t18266*t18259*(2.0/3.0);
                double t18417 = t18413+t18414+t18415+t18416-t18270*t18282*t18276-c*t18264*t18273*t18274*t18268*(4.0/9.0);
                double t18418 = c*t18290*t18264*t18273*t18296*t18289*(4.0/9.0);
                double t18419 = 1.0/(t18274*t18274*t18274);
                double t18420 = c*t18262*t18264*t18419*t18259*t18299*(1.0/3.0);
                double t18421 = c*t18301*t18302*t18273*t18293*t18289*(2.0/9.0);
                double t18422 = t18420+t18412+t18421+t18418-t18262*t18417*t18275-c*t18300*t18273*t18296*t18289*(2.0/9.0)-t18280*t18281*t18290*t18296*t18279*t18289*(1.0/1.8E1);
                double t18423 = EcP_2*EcP_3*t18422*t18326;
                double t18424 = EcP_3*c*t18300*t18273*t18296*(4.0/9.0);
                double t18425 = EcP_3*t18280*t18281*t18290*t18296*t18279*(1.0/9.0);
                double t18426 = t18411+t18423+t18406+t18424+t18425-t18262*t18271*t18381*t18267*(1.0/3.0)-EcP_3*c*t18301*t18302*t18273*t18293*(4.0/9.0)-EcP_3*c*t18290*t18264*t18273*t18296*(8.0/9.0);
                double t18427 = EcP_1*t18426;
                double t18428 = 1.0/t18355;
                double t18430 = Ac_3*c*t18264*t18259*(1.0/6.0);
                double t18431 = t18430+t18263;
                double t18432 = 1.0/(t18332*t18332);
                double t18433 = 1.0/(t18335*t18335);
                double t18434 = t18433*t18329;
                double t18435 = t18434+1.0;
                double t18436 = 1.0/t18435;
                double t18437 = c*t18311*t18257;
                double t18438 = log(t18437);
                double t18439 = EcF_3*t18316*t18317*2.0;
                double t18440 = t18311*t18386;
                double t18441 = log(t18440);
                double t18442 = t18316*t18317*t18394;
                double t18443 = t18441+t18442;
                double t18467 = EcF_2*EcF_3*t18443*t18385;
                double t18444 = t18438+t18439-t18467;
                double t18445 = EcF_1*t18444;
                double t18446 = c*t18257*t18268;
                double t18447 = log(t18446);
                double t18448 = EcP_3*t18321*t18322*2.0;
                double t18449 = t18276*t18268;
                double t18450 = log(t18449);
                double t18451 = t18321*t18322*t18289;
                double t18452 = t18450+t18451;
                double t18468 = EcP_2*EcP_3*t18326*t18452;
                double t18453 = t18447+t18448-t18468;
                double t18469 = EcP_1*t18453;
                double t18454 = t18445-t18469;
                double t18455 = c*t18333*t18259*(1.0/3.0);
                double t18471 = c*t18431*t18432*t18257;
                double t18456 = -t18471+t18455;
                double t18457 = t18332*t18272*t18267*t18456;
                double t18458 = t18431*t18432*t18343;
                double t18459 = c*t18330*t18333*t18264*t18259*(1.0/3.0);
                double t18460 = t18458+t18459;
                double t18461 = 1.0/(t18330*t18330);
                double t18462 = t18332*t18460*t18461;
                double t18463 = c*t18433*t18264*t18436*t18348*t18259*(1.0/3.0);
                double t18464 = t18462+t18463;
                double t18465 = Ac_2*Ac_3*t18354*t18464;
                double t18493 = Ac_3*c*t18433*t18264*t18436*t18259*(2.0/3.0);
                double t18466 = t18465+t18457-t18493;
                double t18470 = 1.0/(t18355*t18355);
                double t18472 = Ac_3*c*t18264*t18273*(2.0/9.0);
                double t18517 = Ac_3*t18280*t18281*t18279*(1.0/3.6E1);
                double t18473 = t18472-t18517+t18277;
                double t18474 = t18431*t18431;
                double t18475 = 1.0/(t18332*t18332*t18332);
                double t18476 = 1.0/(t18335*t18335*t18335);
                double t18477 = 1.0/(t18335*t18335*t18335*t18335*t18335);
                double t18478 = 1.0/(t18435*t18435);
                double t18479 = t18310*t18272*t18380*t18267;
                double t18480 = t18310*t18401*t18387;
                double t18481 = c*t18264*t18259*t18394*t18395*t18398*(1.0/3.0);
                double t18482 = t18480+t18481;
                double t18483 = EcF_2*EcF_3*t18482*t18385;
                double t18494 = EcF_3*c*t18264*t18259*t18395*t18398*(2.0/3.0);
                double t18484 = t18483-t18494+t18479;
                double t18485 = EcF_1*t18484;
                double t18486 = t18262*t18271*t18272*t18267;
                double t18487 = t18262*t18275*t18299;
                double t18488 = c*t18290*t18264*t18259*t18296*t18289*(1.0/3.0);
                double t18489 = t18487+t18488;
                double t18490 = EcP_2*EcP_3*t18326*t18489;
                double t18495 = EcP_3*c*t18290*t18264*t18259*t18296*(2.0/3.0);
                double t18491 = t18490+t18486-t18495;
                double t18496 = EcP_1*t18491;
                double t18492 = t18485-t18496;
                double t18497 = d2fz0*t18428*t18375*t18492;
                double t18504 = d2fz0*t18470*t18454*t18375*t18466;
                double t18498 = -t18504+t18497;
                double t18499 = d2fz0*t18454*t18428*t18375;
                double t18500 = t18499-1.0;
                double t18501 = 1.0/(t18256*t18256*t18256*t18256*t18256);
                double t18502 = pow(t18363,1.0/3.0);
                double t18503 = pow(t18365,1.0/3.0);
                double t18505 = t18502*t18364*(4.0/3.0);
                double t18537 = t18503*t18364*(4.0/3.0);
                double t18506 = t18505-t18537;
                double t18507 = t18500*t18373*t18374;
                double t18508 = t18507+1.0;
                double t18509 = pow(t18363,4.0/3.0);
                double t18510 = pow(t18365,4.0/3.0);
                double t18511 = t18510+t18509-2.0;
                double t18512 = t18373*t18374*t18498;
                double t18513 = t18500*t18303*t18304*t18373*4.0;
                double t18514 = t18500*t18501*t18374*4.0;
                double t18515 = t18512+t18513+t18514;
                double t18516 = c*t18333*t18273*(4.0/9.0);
                double t18518 = c*t18257*t18474*t18475*2.0;
                double t18519 = t18516+t18518-c*t18431*t18432*t18259*(2.0/3.0)-c*t18432*t18257*t18473;
                double t18520 = t18332*t18272*t18267*t18519;
                double t18521 = t18431*t18460*t18461;
                double t18522 = c*t18333*t18273*(1.0/1.8E1);
                double t18523 = t18343*t18474*t18475*2.0;
                double t18524 = t18330*t18333*t18280*t18281*t18279*(1.0/1.8E1);
                double t18525 = c*t18330*t18431*t18432*t18264*t18259*(2.0/3.0);
                double t18526 = t18522+t18523+t18524+t18525-t18432*t18343*t18473-c*t18330*t18333*t18264*t18273*(4.0/9.0);
                double t18527 = c*t18433*t18264*t18273*t18436*t18348*(4.0/9.0);
                double t18528 = 1.0/(t18330*t18330*t18330);
                double t18529 = c*t18332*t18460*t18264*t18528*t18259*(1.0/3.0);
                double t18530 = c*t18273*t18329*t18348*t18477*t18478*(2.0/9.0);
                double t18531 = t18521+t18530+t18527+t18529-t18332*t18461*t18526-c*t18273*t18436*t18348*t18476*(2.0/9.0)-t18280*t18433*t18281*t18436*t18348*t18279*(1.0/1.8E1);
                double t18532 = Ac_2*Ac_3*t18531*t18354;
                double t18533 = t18431*t18272*t18267*t18456;
                double t18534 = Ac_3*c*t18273*t18436*t18476*(4.0/9.0);
                double t18535 = Ac_3*t18280*t18433*t18281*t18436*t18279*(1.0/9.0);
                double t18536 = t18520+t18532+t18533+t18534+t18535-t18332*t18381*t18267*t18456*(1.0/3.0)-Ac_3*c*t18433*t18264*t18273*t18436*(8.0/9.0)-Ac_3*c*t18273*t18329*t18477*t18478*(4.0/9.0);
                v_rho_b_rho_b[Q] += scale * EcP_1*t18491*-2.0+t18256*(t18427+Ac_1*t18511*t18371*t18355*t18368*(t18500*1.0/(t18256*t18256*t18256*t18256*t18256*t18256)*t18374*2.0E1+t18500*t18304*t18373*1.2E1+t18501*t18374*t18498*8.0-t18373*t18374*(d2fz0*t18428*t18375*(t18427-EcF_1*(t18310*t18272*t18267*(c*t18311*t18273*(4.0/9.0)+c*t18390*t18391*t18257*2.0-c*t18259*t18377*t18379*(2.0/3.0)-c*t18257*t18379*t18389)-t18310*t18380*t18381*t18267*(1.0/3.0)+t18272*t18380*t18267*t18377+EcF_2*EcF_3*t18385*(-t18310*t18387*(c*t18311*t18273*(1.0/1.8E1)+t18390*t18391*t18386*2.0-t18386*t18379*t18389-c*t18311*t18308*t18264*t18273*(4.0/9.0)+t18311*t18280*t18281*t18308*t18279*(1.0/1.8E1)+c*t18308*t18264*t18259*t18377*t18379*(2.0/3.0))+t18401*t18377*t18387-c*t18402*t18273*t18394*t18398*(2.0/9.0)+c*t18403*t18404*t18307*t18273*t18394*(2.0/9.0)+c*t18264*t18273*t18394*t18395*t18398*(4.0/9.0)-t18280*t18281*t18394*t18395*t18279*t18398*(1.0/1.8E1)+c*t18310*t18401*1.0/(t18308*t18308*t18308)*t18264*t18259*(1.0/3.0))+EcF_3*c*t18402*t18273*t18398*(4.0/9.0)-EcF_3*c*t18403*t18404*t18307*t18273*(4.0/9.0)-EcF_3*c*t18264*t18273*t18395*t18398*(8.0/9.0)+EcF_3*t18280*t18281*t18395*t18279*t18398*(1.0/9.0)))-d2fz0*1.0/(t18355*t18355*t18355)*t18454*t18375*(t18466*t18466)*2.0+d2fz0*t18470*t18454*t18536*t18375+d2fz0*t18470*t18375*t18492*t18466*2.0)+t18500*t18303*t18501*t18304*3.2E1+t18303*t18304*t18373*t18498*8.0)+Ac_1*t18371*t18355*t18508*t18368*(t18502*t18362*(4.0/3.0)-t18503*t18362*(4.0/3.0)+1.0/pow(t18363,2.0/3.0)*t18367*(4.0/9.0)+1.0/pow(t18365,2.0/3.0)*t18367*(4.0/9.0))+Ac_1*t18511*t18371*t18515*t18466*t18368*2.0+Ac_1*t18511*t18371*t18508*t18536*t18368+Ac_1*t18371*t18506*t18515*t18355*t18368*2.0+Ac_1*t18371*t18506*t18508*t18466*t18368*2.0)-Ac_1*t18511*t18371*t18515*t18355*t18368*2.0-Ac_1*t18511*t18371*t18508*t18466*t18368*2.0-Ac_1*t18371*t18506*t18355*t18508*t18368*2.0;
            }
            
        }
    }
}

}
