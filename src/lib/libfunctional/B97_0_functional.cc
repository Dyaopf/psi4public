/**********************************************************
* B97_0_functional.cc: definitions for B97_0_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 27-Oct-2010
*
***********************************************************/
#include <libmints/properties.h>
#include <libciomr/libciomr.h>
#include "B97_0_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

B97_0_Functional::B97_0_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{
    
    name_ = "B97_0";
    description_ = "B97-0 Power Series GGA";
    citation_ = "A.D. Becke, J. Chem. Phys., 107(20), 8554-8560, 1997";
    
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 9.4540000000000002E-01;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 7.4709999999999999E-01;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -4.5960999999999999E+00;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccaa0 = 1.7369999999999999E-01;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = 2.3487000000000000E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = -2.4868000000000001E+00;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double cx0 = 8.0940000000000001E-01;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = 5.0729999999999997E-01;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = 7.4809999999999999E-01;
    params_.push_back(make_pair("cx2",cx2));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
B97_0_Functional::~B97_0_Functional()
{
}
void B97_0_Functional::computeRKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* gamma_aa;
    double* tau_a;

    rho_a = prop->getRhoA();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccaa0 = params_[28].second;
    double ccaa1 = params_[29].second;
    double ccaa2 = params_[30].second;
    double cx0 = params_[31].second;
    double cx1 = params_[32].second;
    double cx2 = params_[33].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t32238 = 1/pow(rho_a[index],1.0/3.0);
            double t32239 = c*t32238;
            double t32240 = sqrt(t32239);
            double t32241 = pow(t32239,3.0/2.0);
            double t32242 = c*c;
            double t32243 = 1/pow(rho_a[index],2.0/3.0);
            double t32244 = 1/c0p;
            double t32245 = b1p*t32240;
            double t32246 = b3p*t32241;
            double t32247 = b4p*t32242*t32243;
            double t32248 = b2p*c*t32238;
            double t32249 = t32245+t32246+t32247+t32248;
            double t32250 = 1/t32249;
            double t32251 = t32250*t32244*(1.0/2.0);
            double t32252 = t32251+1.0;
            double t32253 = log(t32252);
            double t32254 = a1p*c*t32238;
            double t32255 = t32254+1.0;
            double t32256 = rho_a[index]*2.0;
            double t32257 = 1/pow(t32256,1.0/3.0);
            double t32258 = c*t32257;
            double t32259 = 1/pow(rho_a[index],8.0/3.0);
            double t32260 = gamma_aa[index]*gamma_aa[index];
            double t32261 = gcab*gcab;
            double t32262 = 1/pow(rho_a[index],1.6E1/3.0);
            double t32263 = gx*gx;
            double t32264 = pow(2.0,1.0/3.0);
            double t32265 = t32264*2.0;
            double t32266 = t32265-2.0;
            double t32267 = two_13*2.0;
            double t32268 = t32267-2.0;
            double t32269 = 1/t32268;
            double t32270 = 1/c0f;
            double t32271 = b1f*t32240;
            double t32272 = b3f*t32241;
            double t32273 = b4f*t32242*t32243;
            double t32274 = b2f*c*t32238;
            double t32275 = t32271+t32272+t32273+t32274;
            double t32276 = 1/t32275;
            double t32277 = t32270*t32276*(1.0/2.0);
            double t32278 = t32277+1.0;
            double t32279 = log(t32278);
            double t32280 = a1f*c*t32238;
            double t32281 = t32280+1.0;
            double t32282 = c0f*t32281*t32279*2.0;
            double t32283 = c0p*t32253*t32255*2.0;
            double t32284 = gcaa*gcaa;
            functional_[index] = (rho_a[index]*(t32283+t32266*t32269*(t32282-c0p*t32253*t32255*2.0))*2.0-c0p* \
               rho_a[index]*log((t32244*(1.0/2.0))/(b1p*sqrt(t32258)+b3p*pow(t32258,3.0/2.0)+b4p*t32242*1/pow(t32256,2.0/ \
               3.0)+b2p*c*t32257)+1.0)*(a1p*c*t32257+1.0)*4.0)*(ccab0+(ccab2*t32260*t32261*t32262)/(gamma_aa[index]* \
               gcab*t32259*2.0+t32260*t32261*t32262+1.0)+(ccab1*gamma_aa[index]*gcab*t32259)/(gamma_aa[index]*gcab* \
               t32259+1.0))-rho_a[index]*(t32283+t32266*t32269*(t32282-t32283))*(ccaa0+(ccaa2*t32260*t32262*t32284) \
               /(gamma_aa[index]*gcaa*t32259*2.0+t32260*t32262*t32284+1.0)+(ccaa1*gamma_aa[index]*gcaa*t32259)/(gamma_aa[index]* \
               gcaa*t32259+1.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t32260*t32262*t32263)/(gamma_aa[index]* \
               gx*t32259*2.0+t32260*t32262*t32263+1.0)+(cx1*gamma_aa[index]*gx*t32259)/(gamma_aa[index]*gx*t32259+ \
               1.0))*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {
        
        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t32286 = 1/pow(rho_a[index],1.0/3.0);
            double t32287 = c*t32286;
            double t32288 = sqrt(t32287);
            double t32289 = pow(t32287,3.0/2.0);
            double t32290 = c*c;
            double t32291 = 1/pow(rho_a[index],2.0/3.0);
            double t32292 = 1/c0p;
            double t32293 = b1p*t32288;
            double t32294 = b3p*t32289;
            double t32295 = b4p*t32290*t32291;
            double t32296 = b2p*c*t32286;
            double t32297 = t32293+t32294+t32295+t32296;
            double t32298 = 1/t32297;
            double t32299 = t32292*t32298*(1.0/2.0);
            double t32300 = t32299+1.0;
            double t32301 = log(t32300);
            double t32302 = a1p*c*t32286;
            double t32303 = t32302+1.0;
            double t32304 = 1/pow(rho_a[index],8.0/3.0);
            double t32305 = gamma_aa[index]*gamma_aa[index];
            double t32306 = gcaa*gcaa;
            double t32307 = 1/pow(rho_a[index],1.6E1/3.0);
            double t32308 = pow(2.0,1.0/3.0);
            double t32309 = t32308*2.0;
            double t32310 = t32309-2.0;
            double t32311 = two_13*2.0;
            double t32312 = t32311-2.0;
            double t32313 = 1/t32312;
            double t32314 = 1/c0f;
            double t32315 = b1f*t32288;
            double t32316 = b3f*t32289;
            double t32317 = b4f*t32290*t32291;
            double t32318 = b2f*c*t32286;
            double t32319 = t32315+t32316+t32317+t32318;
            double t32320 = 1/t32319;
            double t32321 = t32320*t32314*(1.0/2.0);
            double t32322 = t32321+1.0;
            double t32323 = log(t32322);
            double t32324 = a1f*c*t32286;
            double t32325 = t32324+1.0;
            double t32326 = c0f*t32323*t32325*2.0;
            double t32327 = c0p*t32301*t32303*2.0;
            double t32328 = rho_a[index]*2.0;
            double t32329 = 1/pow(t32328,1.0/3.0);
            double t32330 = c*t32329;
            double t32331 = gcab*gcab;
            double t32332 = 1/pow(rho_a[index],1.9E1/3.0);
            double t32333 = gamma_aa[index]*gcab*t32304;
            double t32334 = t32333+1.0;
            double t32335 = 1/pow(rho_a[index],1.1E1/3.0);
            double t32336 = gamma_aa[index]*gcab*t32304*2.0;
            double t32337 = t32331*t32305*t32307;
            double t32338 = t32336+t32337+1.0;
            double t32339 = 1/t32334;
            double t32340 = 1/t32338;
            double t32341 = sqrt(t32330);
            double t32342 = b1p*t32341;
            double t32343 = pow(t32330,3.0/2.0);
            double t32344 = b3p*t32343;
            double t32345 = b2p*c*t32329;
            double t32346 = 1/pow(t32328,2.0/3.0);
            double t32347 = b4p*t32290*t32346;
            double t32348 = t32342+t32344+t32345+t32347;
            double t32349 = 1/t32348;
            double t32350 = t32292*t32349*(1.0/2.0);
            double t32351 = t32350+1.0;
            double t32352 = a1p*c*t32329;
            double t32353 = t32352+1.0;
            double t32354 = 1/pow(t32328,4.0/3.0);
            double t32355 = log(t32351);
            double t32356 = 1/pow(rho_a[index],4.0/3.0);
            double t32357 = 1/pow(rho_a[index],5.0/3.0);
            double t32358 = 1/sqrt(t32287);
            double t32359 = 1/t32300;
            double t32360 = 1/(t32297*t32297);
            double t32361 = b4p*t32290*t32357*(2.0/3.0);
            double t32362 = b2p*c*t32356*(1.0/3.0);
            double t32363 = b1p*c*t32356*t32358*(1.0/6.0);
            double t32364 = b3p*c*t32356*t32288*(1.0/2.0);
            double t32365 = t32361+t32362+t32363+t32364;
            double t32366 = t32303*t32360*t32365*t32359;
            double t32367 = t32326-t32327;
            double t32368 = t32310*t32313*t32367;
            double t32369 = gx*gx;
            double t32370 = gamma_aa[index]*gx*t32304;
            double t32371 = t32370+1.0;
            double t32372 = 1/t32371;
            double t32373 = gamma_aa[index]*gx*t32304*2.0;
            double t32374 = t32305*t32307*t32369;
            double t32375 = t32373+t32374+1.0;
            double t32376 = 1/t32375;
            double t32377 = 1/t32322;
            double t32378 = 1/(t32319*t32319);
            double t32379 = b4f*t32290*t32357*(2.0/3.0);
            double t32380 = b2f*c*t32356*(1.0/3.0);
            double t32381 = b1f*c*t32356*t32358*(1.0/6.0);
            double t32382 = b3f*c*t32356*t32288*(1.0/2.0);
            double t32383 = t32380+t32381+t32382+t32379;
            double t32384 = a1f*c*c0f*t32323*t32356*(2.0/3.0);
            double t32385 = a1p*c*c0p*t32301*t32356*(2.0/3.0);
            double t32386 = gamma_aa[index]*gcaa*t32304;
            double t32387 = t32386+1.0;
            double t32388 = 1/t32387;
            double t32389 = ccaa1*gamma_aa[index]*gcaa*t32304*t32388;
            double t32390 = gamma_aa[index]*gcaa*t32304*2.0;
            double t32391 = t32305*t32306*t32307;
            double t32392 = t32390+t32391+1.0;
            double t32393 = 1/t32392;
            double t32394 = ccaa2*t32305*t32306*t32307*t32393;
            double t32395 = ccaa0+t32394+t32389;
            double t32396 = t32327+t32368;
            v_rho_a_[index] = -(ccab0+ccab1*gamma_aa[index]*gcab*t32304*t32339+ccab2*t32331*t32340*t32305*t32307) \
               *(-t32327-t32368+rho_a[index]*((t32353*1/(t32348*t32348)*(b4p*t32290*1/pow(t32328,5.0/3.0)*(2.0/3.0) \
               +b2p*c*t32354*(1.0/3.0)+b3p*c*t32341*t32354*(1.0/2.0)+b1p*c*1/sqrt(t32330)*t32354*(1.0/6.0)))/t32351- \
               a1p*c*c0p*t32354*t32355*(2.0/3.0))*2.0+rho_a[index]*(-t32366+t32385+t32310*t32313*(t32366+t32384-t32325* \
               t32383*t32377*t32378-a1p*c*c0p*t32301*t32356*(2.0/3.0)))+c0p*t32353*t32355*2.0)-(rho_a[index]*t32396* \
               2.0-c0p*rho_a[index]*t32353*t32355*4.0)*(ccab1*gamma_aa[index]*gcab*t32335*t32339*(4.0/3.0)+ccab2* \
               t32331*t32340*t32305*t32332*(8.0/3.0)-ccab1*t32331*t32305*t32332*1/(t32334*t32334)*(4.0/3.0)-ccab2* \
               t32331*t32305*t32307*1/(t32338*t32338)*(gamma_aa[index]*gcab*t32335*(8.0/3.0)+t32331*t32305*t32332* \
               (8.0/3.0)))-t32395*(t32327+t32310*t32313*(t32326-c0p*t32301*t32303*2.0))+rho_a[index]*t32396*(ccaa1* \
               gamma_aa[index]*gcaa*t32335*t32388*(8.0/3.0)+ccaa2*t32305*t32332*t32306*t32393*(1.6E1/3.0)-ccaa1*t32305* \
               t32332*t32306*1/(t32387*t32387)*(8.0/3.0)-ccaa2*t32305*t32306*t32307*1/(t32392*t32392)*(gamma_aa[index]* \
               gcaa*t32335*(1.6E1/3.0)+t32305*t32332*t32306*(1.6E1/3.0)))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]* \
               gx*t32304*t32372+cx2*t32305*t32307*t32376*t32369)*(4.0/3.0)+rho_a[index]*t32395*(-t32366+t32385+t32310* \
               t32313*(t32366+t32384-t32385-t32325*t32383*t32377*t32378))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]* \
               gx*t32335*t32372*(8.0/3.0)+cx2*t32305*t32332*t32376*t32369*(1.6E1/3.0)-cx1*t32305*t32332*1/(t32371* \
               t32371)*t32369*(8.0/3.0)-cx2*t32305*t32307*1/(t32375*t32375)*t32369*(gamma_aa[index]*gx*t32335*(1.6E1/ \
               3.0)+t32305*t32332*t32369*(1.6E1/3.0)));
        } else {
            v_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
            
            if (rho_a[index] > cutoff_) {
                double t32398 = 1/pow(rho_a[index],1.0/3.0);
                double t32399 = c*t32398;
                double t32400 = sqrt(t32399);
                double t32401 = pow(t32399,3.0/2.0);
                double t32402 = c*c;
                double t32403 = 1/pow(rho_a[index],2.0/3.0);
                double t32404 = 1/c0p;
                double t32405 = b1p*t32400;
                double t32406 = b3p*t32401;
                double t32407 = b4p*t32402*t32403;
                double t32408 = b2p*c*t32398;
                double t32409 = t32405+t32406+t32407+t32408;
                double t32410 = 1/t32409;
                double t32411 = t32410*t32404*(1.0/2.0);
                double t32412 = t32411+1.0;
                double t32413 = log(t32412);
                double t32414 = a1p*c*t32398;
                double t32415 = t32414+1.0;
                double t32416 = rho_a[index]*2.0;
                double t32417 = 1/pow(t32416,1.0/3.0);
                double t32418 = c*t32417;
                double t32419 = 1/pow(rho_a[index],8.0/3.0);
                double t32420 = gcab*gcab;
                double t32421 = 1/pow(rho_a[index],1.6E1/3.0);
                double t32422 = gamma_aa[index]*gcab*t32419;
                double t32423 = t32422+1.0;
                double t32424 = gamma_aa[index]*gamma_aa[index];
                double t32425 = gamma_aa[index]*gcab*t32419*2.0;
                double t32426 = t32420*t32421*t32424;
                double t32427 = t32425+t32426+1.0;
                double t32428 = gx*gx;
                double t32429 = gamma_aa[index]*gx*t32419;
                double t32430 = t32429+1.0;
                double t32431 = gamma_aa[index]*gx*t32419*2.0;
                double t32432 = t32421*t32424*t32428;
                double t32433 = t32431+t32432+1.0;
                double t32434 = pow(2.0,1.0/3.0);
                double t32435 = t32434*2.0;
                double t32436 = t32435-2.0;
                double t32437 = two_13*2.0;
                double t32438 = t32437-2.0;
                double t32439 = 1/t32438;
                double t32440 = 1/c0f;
                double t32441 = b1f*t32400;
                double t32442 = b3f*t32401;
                double t32443 = b4f*t32402*t32403;
                double t32444 = b2f*c*t32398;
                double t32445 = t32441+t32442+t32443+t32444;
                double t32446 = 1/t32445;
                double t32447 = t32440*t32446*(1.0/2.0);
                double t32448 = t32447+1.0;
                double t32449 = log(t32448);
                double t32450 = a1f*c*t32398;
                double t32451 = t32450+1.0;
                double t32452 = c0f*t32451*t32449*2.0;
                double t32453 = c0p*t32413*t32415*2.0;
                double t32454 = gcaa*gcaa;
                double t32455 = gamma_aa[index]*gcaa*t32419;
                double t32456 = t32455+1.0;
                double t32457 = gamma_aa[index]*gcaa*t32419*2.0;
                double t32458 = t32421*t32424*t32454;
                double t32459 = t32457+t32458+1.0;
                v_gamma_aa_[index] = (rho_a[index]*(t32453+t32436*t32439*(t32452-c0p*t32413*t32415*2.0))*2.0-c0p* \
                   rho_a[index]*log((t32404*(1.0/2.0))/(b1p*sqrt(t32418)+b3p*pow(t32418,3.0/2.0)+b4p*t32402*1/pow(t32416,2.0/ \
                   3.0)+b2p*c*t32417)+1.0)*(a1p*c*t32417+1.0)*4.0)*((ccab1*gcab*t32419*(1.0/2.0))/t32423-ccab1*gamma_aa[index]* \
                   t32420*t32421*1/(t32423*t32423)*(1.0/2.0)+(ccab2*gamma_aa[index]*t32420*t32421)/t32427-ccab2*t32420* \
                   t32421*t32424*1/(t32427*t32427)*(gcab*t32419+gamma_aa[index]*t32420*t32421))*2.0-rho_a[index]*(t32453+ \
                   t32436*t32439*(t32452-t32453))*((ccaa1*gcaa*t32419)/t32456-ccaa1*gamma_aa[index]*t32421*t32454*1/(t32456* \
                   t32456)+(ccaa2*gamma_aa[index]*t32421*t32454*2.0)/t32459-ccaa2*t32421*t32424*t32454*1/(t32459*t32459) \
                   *(gcaa*t32419*2.0+gamma_aa[index]*t32421*t32454*2.0))*2.0+c0*pow(rho_a[index],4.0/3.0)*((cx1*gx*t32419) \
                   /t32430-cx1*gamma_aa[index]*t32421*1/(t32430*t32430)*t32428+(cx2*gamma_aa[index]*t32421*t32428*2.0) \
                   /t32433-cx2*t32421*t32424*1/(t32433*t32433)*t32428*(gx*t32419*2.0+gamma_aa[index]*t32421*t32428*2.0) \
                   )*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 
        
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {
        
        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t32462 = 1/pow(rho_a[index],1.0/3.0);
            double t32463 = c*t32462;
            double t32464 = sqrt(t32463);
            double t32465 = pow(t32463,3.0/2.0);
            double t32466 = c*c;
            double t32467 = 1/pow(rho_a[index],2.0/3.0);
            double t32468 = 1/c0p;
            double t32469 = b1p*t32464;
            double t32470 = b3p*t32465;
            double t32471 = b4p*t32466*t32467;
            double t32472 = b2p*c*t32462;
            double t32473 = t32470+t32471+t32472+t32469;
            double t32474 = 1/t32473;
            double t32475 = t32474*t32468*(1.0/2.0);
            double t32476 = t32475+1.0;
            double t32477 = log(t32476);
            double t32478 = a1p*c*t32462;
            double t32479 = t32478+1.0;
            double t32480 = rho_a[index]*2.0;
            double t32481 = 1/pow(t32480,1.0/3.0);
            double t32482 = c*t32481;
            double t32483 = 1/pow(rho_a[index],8.0/3.0);
            double t32484 = gamma_aa[index]*gamma_aa[index];
            double t32485 = gcab*gcab;
            double t32486 = gamma_aa[index]*gcab*t32483;
            double t32487 = t32486+1.0;
            double t32488 = 1/pow(rho_a[index],2.2E1/3.0);
            double t32489 = 1/pow(rho_a[index],1.6E1/3.0);
            double t32494 = 1/pow(rho_a[index],1.9E1/3.0);
            double t32495 = 1/pow(rho_a[index],1.1E1/3.0);
            double t32496 = gamma_aa[index]*gcab*t32495*(8.0/3.0);
            double t32497 = t32484*t32485*t32494*(8.0/3.0);
            double t32490 = t32496+t32497;
            double t32491 = gamma_aa[index]*gcab*t32483*2.0;
            double t32492 = t32484*t32485*t32489;
            double t32493 = t32491+t32492+1.0;
            double t32498 = 1/pow(rho_a[index],1.4E1/3.0);
            double t32499 = 1/(t32493*t32493);
            double t32500 = 1/t32487;
            double t32501 = 1/t32493;
            double t32502 = sqrt(t32482);
            double t32503 = b1p*t32502;
            double t32504 = pow(t32482,3.0/2.0);
            double t32505 = b3p*t32504;
            double t32506 = b2p*c*t32481;
            double t32507 = 1/pow(t32480,2.0/3.0);
            double t32508 = b4p*t32507*t32466;
            double t32509 = t32503+t32505+t32506+t32508;
            double t32510 = 1/t32509;
            double t32511 = t32510*t32468*(1.0/2.0);
            double t32512 = t32511+1.0;
            double t32513 = a1p*c*t32481;
            double t32514 = t32513+1.0;
            double t32515 = 1/pow(t32480,8.0/3.0);
            double t32516 = 1/pow(t32480,7.0/3.0);
            double t32517 = 1/sqrt(t32482);
            double t32518 = 1/t32512;
            double t32519 = 1/pow(t32480,4.0/3.0);
            double t32522 = b2p*c*t32519*(1.0/3.0);
            double t32523 = 1/pow(t32480,5.0/3.0);
            double t32524 = b4p*t32523*t32466*(2.0/3.0);
            double t32525 = b1p*c*t32517*t32519*(1.0/6.0);
            double t32526 = b3p*c*t32502*t32519*(1.0/2.0);
            double t32520 = t32522+t32524+t32525+t32526;
            double t32521 = log(t32512);
            double t32527 = t32520*t32520;
            double t32528 = two_13*2.0;
            double t32529 = t32528-2.0;
            double t32530 = 1/t32529;
            double t32531 = 1/(t32509*t32509);
            double t32532 = pow(2.0,1.0/3.0);
            double t32533 = t32532*2.0;
            double t32534 = t32533-2.0;
            double t32535 = a1f*c*t32462;
            double t32536 = t32535+1.0;
            double t32537 = 1/c0f;
            double t32538 = b1f*t32464;
            double t32539 = b3f*t32465;
            double t32540 = b4f*t32466*t32467;
            double t32541 = b2f*c*t32462;
            double t32542 = t32540+t32541+t32538+t32539;
            double t32543 = 1/t32542;
            double t32544 = t32543*t32537*(1.0/2.0);
            double t32545 = t32544+1.0;
            double t32546 = 1/pow(rho_a[index],4.0/3.0);
            double t32548 = 1/pow(rho_a[index],5.0/3.0);
            double t32549 = 1/sqrt(t32463);
            double t32555 = b4f*t32466*t32548*(2.0/3.0);
            double t32556 = b2f*c*t32546*(1.0/3.0);
            double t32557 = b1f*c*t32546*t32549*(1.0/6.0);
            double t32558 = b3f*c*t32464*t32546*(1.0/2.0);
            double t32547 = t32555+t32556+t32557+t32558;
            double t32560 = b4p*t32466*t32548*(2.0/3.0);
            double t32561 = b2p*c*t32546*(1.0/3.0);
            double t32562 = b1p*c*t32546*t32549*(1.0/6.0);
            double t32563 = b3p*c*t32464*t32546*(1.0/2.0);
            double t32550 = t32560+t32561+t32562+t32563;
            double t32551 = 1/t32545;
            double t32552 = 1/pow(rho_a[index],7.0/3.0);
            double t32553 = 1/t32476;
            double t32554 = 1/pow(t32463,3.0/2.0);
            double t32559 = t32547*t32547;
            double t32564 = t32550*t32550;
            double t32565 = log(t32545);
            double t32566 = 1/(t32542*t32542);
            double t32567 = 1/(t32473*t32473);
            double t32568 = 1/(t32473*t32473*t32473);
            double t32569 = t32553*t32564*t32568*t32479*2.0;
            double t32570 = b4p*t32483*t32466*(1.0E1/9.0);
            double t32571 = b2p*c*t32552*(4.0/9.0);
            double t32572 = b3p*t32483*t32466*t32549*(1.0/1.2E1);
            double t32573 = b1p*c*t32552*t32549*(2.0/9.0);
            double t32574 = b3p*c*t32552*t32464*(2.0/3.0);
            double t32662 = b1p*t32554*t32483*t32466*(1.0/3.6E1);
            double t32575 = t32570+t32571+t32572-t32662+t32573+t32574;
            double t32576 = 1/(t32476*t32476);
            double t32577 = 1/(t32473*t32473*t32473*t32473);
            double t32578 = a1p*c*c0p*t32552*t32477*(8.0/9.0);
            double t32579 = c0f*t32536*t32565*2.0;
            double t32580 = c0p*t32477*t32479*2.0;
            double t32581 = gcaa*gcaa;
            double t32582 = gamma_aa[index]*gcaa*t32483;
            double t32583 = t32582+1.0;
            double t32584 = gamma_aa[index]*gcaa*t32483*2.0;
            double t32585 = t32581*t32484*t32489;
            double t32586 = t32584+t32585+1.0;
            double t32587 = ccab1*gamma_aa[index]*gcab*t32500*t32483;
            double t32588 = ccab2*t32501*t32484*t32485*t32489;
            double t32589 = ccab0+t32587+t32588;
            double t32590 = b2p*c*t32516*(4.0/9.0);
            double t32591 = b4p*t32515*t32466*(1.0E1/9.0);
            double t32592 = 1/pow(t32482,3.0/2.0);
            double t32593 = b3p*t32515*t32517*t32466*(1.0/1.2E1);
            double t32594 = b1p*c*t32516*t32517*(2.0/9.0);
            double t32595 = b3p*c*t32502*t32516*(2.0/3.0);
            double t32596 = t32590+t32591+t32593+t32594+t32595-b1p*t32515*t32466*t32592*(1.0/3.6E1);
            double t32597 = t32531*t32514*t32518*t32596;
            double t32598 = 1/(t32509*t32509*t32509);
            double t32599 = 1/(t32512*t32512);
            double t32600 = 1/(t32509*t32509*t32509*t32509);
            double t32601 = t32600*t32514*t32527*t32468*t32599*(1.0/2.0);
            double t32602 = 1/d2fz0;
            double t32603 = 1/(rho_a[index]*rho_a[index]);
            double t32604 = 1/Aa;
            double t32605 = b1a*t32502;
            double t32606 = b3a*t32504;
            double t32607 = b2a*c*t32481;
            double t32608 = b4a*t32507*t32466;
            double t32609 = t32605+t32606+t32607+t32608;
            double t32610 = 1/t32609;
            double t32611 = t32610*t32604*(1.0/2.0);
            double t32612 = t32611+1.0;
            double t32613 = log(t32612);
            double t32614 = a1a*c*t32481;
            double t32615 = t32614+1.0;
            double t32616 = Aa*t32530*t32602*t32603*t32613*t32615*(4.0/9.0);
            double t32617 = a1p*c*t32520*t32531*t32518*t32519*(2.0/3.0);
            double t32618 = a1p*c*c0p*t32521*t32519*(4.0/3.0);
            double t32619 = t32580-t32579;
            double t32637 = t32530*t32534*t32619;
            double t32620 = t32580-t32637;
            double t32621 = 1/pow(rho_a[index],1.0E1);
            double t32622 = 1/(t32487*t32487*t32487);
            double t32623 = ccab1*gamma_aa[index]*gcab*t32621*t32622*t32484*t32485*(3.2E1/9.0);
            double t32624 = 1/(t32487*t32487);
            double t32625 = t32490*t32490;
            double t32626 = 1/(t32493*t32493*t32493);
            double t32627 = ccab2*t32625*t32626*t32484*t32485*t32489*2.0;
            double t32628 = t32551*t32536*t32547*t32566;
            double t32629 = a1p*c*c0p*t32546*t32477*(2.0/3.0);
            double t32631 = t32550*t32553*t32567*t32479;
            double t32634 = a1f*c*c0f*t32546*t32565*(2.0/3.0);
            double t32630 = -t32631-t32634+t32628+t32629;
            double t32632 = 1/t32583;
            double t32633 = 1/t32586;
            double t32635 = t32530*t32630*t32534;
            double t32636 = t32631+t32635-t32629;
            double t32638 = gx*gx;
            double t32639 = gamma_aa[index]*gx*t32483;
            double t32640 = t32639+1.0;
            double t32645 = gamma_aa[index]*gx*t32495*(1.6E1/3.0);
            double t32646 = t32484*t32494*t32638*(1.6E1/3.0);
            double t32641 = t32645+t32646;
            double t32642 = gamma_aa[index]*gx*t32483*2.0;
            double t32643 = t32484*t32638*t32489;
            double t32644 = t32642+t32643+1.0;
            double t32647 = 1/(t32644*t32644);
            double t32648 = 1/t32640;
            double t32649 = 1/t32644;
            double t32650 = 1/(t32640*t32640);
            double t32651 = ccaa1*gamma_aa[index]*gcaa*t32632*t32483;
            double t32652 = ccaa2*t32633*t32581*t32484*t32489;
            double t32653 = ccaa0+t32651+t32652;
            double t32654 = 1/(t32542*t32542*t32542);
            double t32655 = b4f*t32483*t32466*(1.0E1/9.0);
            double t32656 = b2f*c*t32552*(4.0/9.0);
            double t32657 = b3f*t32483*t32466*t32549*(1.0/1.2E1);
            double t32658 = b1f*c*t32552*t32549*(2.0/9.0);
            double t32659 = b3f*c*t32552*t32464*(2.0/3.0);
            double t32660 = t32655+t32656+t32657+t32658+t32659-b1f*t32554*t32483*t32466*(1.0/3.6E1);
            double t32661 = t32551*t32660*t32536*t32566;
            double t32663 = t32553*t32575*t32567*t32479;
            double t32664 = 1/(t32545*t32545);
            double t32665 = 1/(t32542*t32542*t32542*t32542);
            double t32666 = t32536*t32537*t32664*t32665*t32559*(1.0/2.0);
            double t32667 = t32564*t32468*t32576*t32577*t32479*(1.0/2.0);
            double t32668 = a1f*c*t32551*t32546*t32547*t32566*(2.0/3.0);
            double t32669 = a1p*c*t32550*t32553*t32546*t32567*(2.0/3.0);
            double t32670 = 1/(t32583*t32583);
            double t32671 = gamma_aa[index]*gcaa*t32495*(1.6E1/3.0);
            double t32672 = t32581*t32484*t32494*(1.6E1/3.0);
            double t32673 = t32671+t32672;
            double t32674 = 1/(t32586*t32586);
            double t32675 = ccaa1*gamma_aa[index]*gcaa*t32632*t32495*(8.0/3.0);
            double t32676 = ccaa2*t32633*t32581*t32484*t32494*(1.6E1/3.0);
            double t32677 = t32675+t32676-ccaa1*t32670*t32581*t32484*t32494*(8.0/3.0)-ccaa2*t32581*t32484*t32673* \
               t32674*t32489;
            v_rho_a_rho_a_[index] = t32620*t32677*2.0-t32653*t32636*2.0+(rho_a[index]*t32620*2.0-c0p*rho_a[index]* \
               t32521*t32514*4.0)*(t32623+t32627+ccab2*t32501*t32484*t32485*t32488*(3.2E1/9.0)-ccab1*t32624*t32484* \
               t32485*t32488*(3.2E1/9.0)-ccab2*1/pow(rho_a[index],3.8E1/3.0)*(t32484*t32484)*(t32485*t32485)*t32499* \
               (3.2E1/9.0)-ccab2*t32490*t32484*t32485*t32494*t32499*(1.6E1/3.0))+t32589*(t32618-rho_a[index]*(t32663+ \
               t32667-t32569-t32578+t32669+t32530*t32534*(t32661+t32666+t32569+t32578+t32668-t32551*t32536*t32654* \
               t32559*2.0-t32553*t32575*t32567*t32479-a1f*c*c0f*t32552*t32565*(8.0/9.0)-t32564*t32468*t32576*t32577* \
               t32479*(1.0/2.0)-a1p*c*t32550*t32553*t32546*t32567*(2.0/3.0)))+rho_a[index]*(t32601+t32616+t32617+ \
               t32597-t32514*t32518*t32527*t32598*2.0-a1p*c*c0p*t32521*t32516*(8.0/9.0))*2.0+t32530*t32630*t32534* \
               2.0-t32520*t32531*t32514*t32518*2.0+t32550*t32553*t32567*t32479*2.0-a1p*c*c0p*t32546*t32477*(4.0/3.0) \
               )+(rho_a[index]*(t32580+t32530*t32534*(t32579-c0p*t32477*t32479*2.0))*2.0-c0p*rho_a[index]*t32521* \
               t32514*4.0)*(t32623+t32627+ccab1*gamma_aa[index]*gcab*t32500*t32498*(4.4E1/9.0)+ccab2*t32501*t32484* \
               t32485*t32488*(4.0E1/3.0)-ccab1*t32624*t32484*t32485*t32488*(7.6E1/9.0)-ccab2*t32490*t32484*t32485* \
               t32494*t32499*(1.6E1/3.0)-ccab2*t32484*t32485*t32489*t32499*(gamma_aa[index]*gcab*t32498*(8.8E1/9.0) \
               +t32484*t32485*t32488*(4.0E1/3.0)))+(ccab1*gamma_aa[index]*gcab*t32500*t32495*(4.0/3.0)+ccab2*t32501* \
               t32484*t32485*t32494*(8.0/3.0)-ccab1*t32624*t32484*t32485*t32494*(4.0/3.0)-ccab2*t32490*t32484*t32485* \
               t32489*t32499)*(-t32580+t32637-rho_a[index]*t32636+rho_a[index]*(t32520*t32531*t32514*t32518-a1p*c* \
               c0p*t32521*t32519*(2.0/3.0))*2.0+c0p*t32521*t32514*2.0)*4.0+t32589*(t32618+rho_a[index]*(t32601-t32616+ \
               t32617+t32597-t32514*t32518*t32527*t32598*2.0-a1p*c*c0p*t32521*t32516*(8.0/9.0))*2.0-t32520*t32531* \
               t32514*t32518*2.0)+c0*t32467*(cx0+cx1*gamma_aa[index]*gx*t32483*t32648+cx2*t32484*t32638*t32649*t32489) \
               *(4.0/9.0)-rho_a[index]*t32620*(ccaa1*gamma_aa[index]*gcaa*t32632*t32498*(8.8E1/9.0)-ccaa1*t32670* \
               t32581*t32484*t32488*2.4E1+ccaa2*t32633*t32581*t32484*t32488*(3.04E2/9.0)-ccaa2*t32581*t32484*t32673* \
               t32494*t32674*(3.2E1/3.0)-ccaa2*t32581*t32484*t32674*t32489*(gamma_aa[index]*gcaa*t32498*(1.76E2/9.0) \
               +t32581*t32484*t32488*(3.04E2/9.0))+ccaa2*t32581*t32484*(t32673*t32673)*1/(t32586*t32586*t32586)*t32489* \
               2.0+ccaa1*gamma_aa[index]*gcaa*t32621*t32581*t32484*1/(t32583*t32583*t32583)*(1.28E2/9.0))+c0*pow(rho_a[index],4.0/ \
               3.0)*(cx1*gamma_aa[index]*gx*t32648*t32498*(8.8E1/9.0)-cx1*t32650*t32484*t32638*t32488*2.4E1+cx2*t32484* \
               t32638*t32649*t32488*(3.04E2/9.0)-cx2*t32641*t32484*t32494*t32638*t32647*(3.2E1/3.0)-cx2*t32484*t32638* \
               t32647*t32489*(gamma_aa[index]*gx*t32498*(1.76E2/9.0)+t32484*t32638*t32488*(3.04E2/9.0))+cx2*(t32641* \
               t32641)*1/(t32644*t32644*t32644)*t32484*t32638*t32489*2.0+cx1*gamma_aa[index]*gx*t32621*1/(t32640* \
               t32640*t32640)*t32484*t32638*(1.28E2/9.0))-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t32495* \
               t32648*(8.0/3.0)-cx1*t32650*t32484*t32494*t32638*(8.0/3.0)+cx2*t32484*t32494*t32638*t32649*(1.6E1/ \
               3.0)-cx2*t32641*t32484*t32638*t32647*t32489)*(8.0/3.0)+rho_a[index]*t32653*(t32663+t32667-t32569-t32578+ \
               t32669+t32530*t32534*(t32661-t32663+t32666-t32667+t32569+t32578+t32668-t32669-t32551*t32536*t32654* \
               t32559*2.0-a1f*c*c0f*t32552*t32565*(8.0/9.0)))+rho_a[index]*t32636*t32677*2.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 
        
        if (is_gga_) {
        
            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t32679 = 1/pow(rho_a[index],8.0/3.0);
                double t32680 = gcab*gcab;
                double t32681 = 1/pow(rho_a[index],1.6E1/3.0);
                double t32682 = gamma_aa[index]*gcab*t32679;
                double t32683 = t32682+1.0;
                double t32684 = gamma_aa[index]*gamma_aa[index];
                double t32685 = gamma_aa[index]*gcab*t32679*2.0;
                double t32686 = t32680*t32681*t32684;
                double t32687 = t32685+t32686+1.0;
                double t32688 = rho_a[index]*2.0;
                double t32689 = 1/pow(t32688,1.0/3.0);
                double t32690 = c*t32689;
                double t32691 = sqrt(t32690);
                double t32692 = b1p*t32691;
                double t32693 = pow(t32690,3.0/2.0);
                double t32694 = b3p*t32693;
                double t32695 = b2p*c*t32689;
                double t32696 = c*c;
                double t32697 = 1/pow(t32688,2.0/3.0);
                double t32698 = b4p*t32696*t32697;
                double t32699 = t32692+t32694+t32695+t32698;
                double t32700 = 1/pow(t32688,4.0/3.0);
                double t32701 = 1/c0p;
                double t32702 = 1/t32699;
                double t32703 = t32701*t32702*(1.0/2.0);
                double t32704 = t32703+1.0;
                double t32705 = 1/pow(rho_a[index],1.0/3.0);
                double t32706 = c*t32705;
                double t32707 = sqrt(t32706);
                double t32708 = b1f*t32707;
                double t32709 = pow(t32706,3.0/2.0);
                double t32710 = b3f*t32709;
                double t32711 = 1/pow(rho_a[index],2.0/3.0);
                double t32712 = b4f*t32711*t32696;
                double t32713 = b2f*c*t32705;
                double t32714 = t32710+t32712+t32713+t32708;
                double t32715 = 1/pow(rho_a[index],4.0/3.0);
                double t32716 = b1p*t32707;
                double t32717 = b3p*t32709;
                double t32718 = b4p*t32711*t32696;
                double t32719 = b2p*c*t32705;
                double t32720 = t32716+t32717+t32718+t32719;
                double t32721 = 1/pow(rho_a[index],5.0/3.0);
                double t32722 = 1/sqrt(t32706);
                double t32723 = 1/c0f;
                double t32724 = 1/t32714;
                double t32725 = t32723*t32724*(1.0/2.0);
                double t32726 = t32725+1.0;
                double t32727 = 1/t32720;
                double t32728 = t32701*t32727*(1.0/2.0);
                double t32729 = t32728+1.0;
                double t32730 = a1p*c*t32705;
                double t32731 = t32730+1.0;
                double t32732 = 1/t32729;
                double t32733 = 1/(t32720*t32720);
                double t32734 = b4p*t32721*t32696*(2.0/3.0);
                double t32735 = b2p*c*t32715*(1.0/3.0);
                double t32736 = b1p*c*t32722*t32715*(1.0/6.0);
                double t32737 = b3p*c*t32715*t32707*(1.0/2.0);
                double t32738 = t32734+t32735+t32736+t32737;
                double t32739 = t32731*t32732*t32733*t32738;
                double t32740 = log(t32729);
                double t32741 = log(t32704);
                double t32742 = a1p*c*t32689;
                double t32743 = t32742+1.0;
                double t32744 = pow(2.0,1.0/3.0);
                double t32745 = t32744*2.0;
                double t32746 = t32745-2.0;
                double t32747 = two_13*2.0;
                double t32748 = t32747-2.0;
                double t32749 = 1/t32748;
                double t32750 = log(t32726);
                double t32751 = a1f*c*t32705;
                double t32752 = t32751+1.0;
                double t32753 = c0f*t32750*t32752*2.0;
                double t32755 = c0p*t32731*t32740*2.0;
                double t32754 = t32753-t32755;
                double t32756 = gcaa*gcaa;
                double t32757 = gamma_aa[index]*gcaa*t32679;
                double t32758 = t32757+1.0;
                double t32759 = gamma_aa[index]*gcaa*t32679*2.0;
                double t32760 = t32681*t32684*t32756;
                double t32761 = t32760+t32759+1.0;
                double t32762 = t32754*t32746*t32749;
                double t32763 = t32762+t32755;
                double t32764 = 1/t32687;
                double t32765 = 1/pow(rho_a[index],1.9E1/3.0);
                double t32766 = 1/(t32683*t32683);
                double t32767 = 1/(t32687*t32687);
                double t32768 = gcab*t32679;
                double t32769 = gamma_aa[index]*t32680*t32681;
                double t32770 = t32768+t32769;
                double t32771 = 1/pow(rho_a[index],1.1E1/3.0);
                double t32772 = gamma_aa[index]*gcab*t32771*(8.0/3.0);
                double t32773 = t32680*t32684*t32765*(8.0/3.0);
                double t32774 = t32772+t32773;
                double t32775 = rho_a[index]*t32763*2.0;
                double t32776 = t32775-c0p*rho_a[index]*t32741*t32743*4.0;
                double t32777 = 1/t32683;
                double t32778 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t32779 = 1/(t32683*t32683*t32683);
                double t32780 = ccab2*gamma_aa[index]*t32680*t32681*t32774*t32767;
                double t32781 = ccab2*t32680*t32770*t32684*t32765*t32767*(8.0/3.0);
                double t32782 = 1/(t32687*t32687*t32687);
                double t32783 = 1/t32758;
                double t32784 = 1/t32761;
                double t32785 = 1/(t32758*t32758);
                double t32786 = 1/(t32761*t32761);
                double t32787 = gcaa*t32679*2.0;
                double t32788 = gamma_aa[index]*t32681*t32756*2.0;
                double t32789 = t32787+t32788;
                double t32790 = gamma_aa[index]*gcaa*t32771*(1.6E1/3.0);
                double t32791 = t32684*t32756*t32765*(1.6E1/3.0);
                double t32792 = t32790+t32791;
                double t32793 = gx*gx;
                double t32794 = gamma_aa[index]*gx*t32679;
                double t32795 = t32794+1.0;
                double t32796 = gamma_aa[index]*gx*t32679*2.0;
                double t32797 = t32681*t32684*t32793;
                double t32798 = t32796+t32797+1.0;
                double t32799 = 1/t32726;
                double t32800 = 1/(t32714*t32714);
                double t32801 = b4f*t32721*t32696*(2.0/3.0);
                double t32802 = b2f*c*t32715*(1.0/3.0);
                double t32803 = b1f*c*t32722*t32715*(1.0/6.0);
                double t32804 = b3f*c*t32715*t32707*(1.0/2.0);
                double t32805 = t32801+t32802+t32803+t32804;
                double t32806 = a1f*c*c0f*t32750*t32715*(2.0/3.0);
                double t32807 = a1p*c*c0p*t32740*t32715*(2.0/3.0);
                double t32808 = ccaa1*gcaa*t32783*t32679;
                double t32809 = ccaa2*gamma_aa[index]*t32681*t32756*t32784*2.0;
                double t32810 = t32808+t32809-ccaa1*gamma_aa[index]*t32681*t32756*t32785-ccaa2*t32681*t32684*t32756* \
                   t32786*t32789;
                double t32811 = 1/t32795;
                double t32812 = 1/t32798;
                double t32813 = 1/(t32795*t32795);
                double t32814 = 1/(t32798*t32798);
                double t32815 = gx*t32679*2.0;
                double t32816 = gamma_aa[index]*t32681*t32793*2.0;
                double t32817 = t32815+t32816;
                double t32818 = gamma_aa[index]*gx*t32771*(1.6E1/3.0);
                double t32819 = t32684*t32765*t32793*(1.6E1/3.0);
                double t32820 = t32818+t32819;
                v_rho_a_gamma_aa_[index] = -t32810*t32763+t32776*(t32780+t32781-ccab2*gamma_aa[index]*t32680*t32764* \
                   t32765*(4.0/3.0)+ccab1*gamma_aa[index]*t32680*t32765*t32766*(4.0/3.0)+ccab2*gamma_aa[index]*1/pow(rho_a[index],3.5E1/ \
                   3.0)*(t32680*t32680)*t32684*t32767*(4.0/3.0)-ccab1*gcab*t32680*t32684*t32778*t32779*(4.0/3.0)-ccab2* \
                   t32680*t32770*t32681*t32782*t32684*t32774*2.0)+t32776*(t32780+t32781-ccab1*gcab*t32771*t32777*(4.0/ \
                   3.0)-ccab2*gamma_aa[index]*t32680*t32764*t32765*4.0+ccab1*gamma_aa[index]*t32680*t32765*t32766*(8.0/ \
                   3.0)+ccab2*t32680*t32681*t32684*t32767*(gcab*t32771*(8.0/3.0)+gamma_aa[index]*t32680*t32765*4.0)-ccab1* \
                   gcab*t32680*t32684*t32778*t32779*(4.0/3.0)-ccab2*t32680*t32770*t32681*t32782*t32684*t32774*2.0)-(ccab1* \
                   gcab*t32777*t32679*(1.0/2.0)+ccab2*gamma_aa[index]*t32680*t32681*t32764-ccab1*gamma_aa[index]*t32680* \
                   t32681*t32766*(1.0/2.0)-ccab2*t32680*t32770*t32681*t32684*t32767)*(rho_a[index]*((t32743*1/(t32699* \
                   t32699)*(b4p*t32696*1/pow(t32688,5.0/3.0)*(2.0/3.0)+b2p*c*t32700*(1.0/3.0)+b3p*c*t32700*t32691*(1.0/ \
                   2.0)+b1p*c*t32700*1/sqrt(t32690)*(1.0/6.0)))/t32704-a1p*c*c0p*t32700*t32741*(2.0/3.0))*2.0+rho_a[index]* \
                   (t32807-t32739+t32746*t32749*(t32806+t32739-t32800*t32805*t32752*t32799-a1p*c*c0p*t32740*t32715*(2.0/ \
                   3.0)))-c0p*t32731*t32740*2.0+c0p*t32741*t32743*2.0-t32754*t32746*t32749)*2.0+c0*pow(rho_a[index],1.0/ \
                   3.0)*(cx1*gx*t32811*t32679-cx1*gamma_aa[index]*t32813*t32681*t32793+cx2*gamma_aa[index]*t32812*t32681* \
                   t32793*2.0-cx2*t32814*t32681*t32817*t32684*t32793)*(4.0/3.0)-c0*pow(rho_a[index],4.0/3.0)*(cx1*gx* \
                   t32811*t32771*(8.0/3.0)-cx1*gamma_aa[index]*t32813*t32765*t32793*8.0+cx2*gamma_aa[index]*t32812*t32765* \
                   t32793*(3.2E1/3.0)-cx2*t32814*t32817*t32684*t32765*t32793*(1.6E1/3.0)+cx1*gx*t32684*t32793*1/(t32795* \
                   t32795*t32795)*t32778*(1.6E1/3.0)-cx2*t32814*t32681*t32684*t32793*(gx*t32771*(1.6E1/3.0)+gamma_aa[index]* \
                   t32765*t32793*(3.2E1/3.0))-cx2*gamma_aa[index]*t32820*t32814*t32681*t32793*2.0+cx2*t32820*t32681*t32817* \
                   t32684*t32793*1/(t32798*t32798*t32798)*2.0)+rho_a[index]*t32810*(t32807-t32739+t32746*t32749*(t32806- \
                   t32807+t32739-t32800*t32805*t32752*t32799))+rho_a[index]*t32763*(ccaa1*gcaa*t32771*t32783*(8.0/3.0) \
                   -ccaa1*gamma_aa[index]*t32756*t32765*t32785*8.0+ccaa2*gamma_aa[index]*t32756*t32765*t32784*(3.2E1/ \
                   3.0)-ccaa2*t32684*t32756*t32765*t32786*t32789*(1.6E1/3.0)+ccaa1*gcaa*t32684*t32756*1/(t32758*t32758* \
                   t32758)*t32778*(1.6E1/3.0)-ccaa2*t32681*t32684*t32756*t32786*(gcaa*t32771*(1.6E1/3.0)+gamma_aa[index]* \
                   t32756*t32765*(3.2E1/3.0))-ccaa2*gamma_aa[index]*t32681*t32756*t32792*t32786*2.0+ccaa2*1/(t32761*t32761* \
                   t32761)*t32681*t32684*t32756*t32792*t32789*2.0);
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 
        
            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t32822 = 1/pow(rho_a[index],1.0/3.0);
                double t32823 = c*t32822;
                double t32824 = sqrt(t32823);
                double t32825 = pow(t32823,3.0/2.0);
                double t32826 = c*c;
                double t32827 = 1/pow(rho_a[index],2.0/3.0);
                double t32828 = 1/c0p;
                double t32829 = b1p*t32824;
                double t32830 = b3p*t32825;
                double t32831 = b4p*t32826*t32827;
                double t32832 = b2p*c*t32822;
                double t32833 = t32830+t32831+t32832+t32829;
                double t32834 = 1/t32833;
                double t32835 = t32834*t32828*(1.0/2.0);
                double t32836 = t32835+1.0;
                double t32837 = log(t32836);
                double t32838 = a1p*c*t32822;
                double t32839 = t32838+1.0;
                double t32840 = rho_a[index]*2.0;
                double t32841 = 1/pow(t32840,1.0/3.0);
                double t32842 = c*t32841;
                double t32843 = gcab*gcab;
                double t32844 = 1/pow(rho_a[index],1.6E1/3.0);
                double t32845 = 1/pow(rho_a[index],8.0/3.0);
                double t32846 = gamma_aa[index]*gcab*t32845;
                double t32847 = t32846+1.0;
                double t32848 = gamma_aa[index]*gamma_aa[index];
                double t32849 = gamma_aa[index]*gcab*t32845*2.0;
                double t32850 = t32843*t32844*t32848;
                double t32851 = t32850+t32849+1.0;
                double t32853 = gcab*t32845;
                double t32854 = gamma_aa[index]*t32843*t32844;
                double t32852 = t32853+t32854;
                double t32855 = 1/(t32851*t32851);
                double t32856 = pow(2.0,1.0/3.0);
                double t32857 = t32856*2.0;
                double t32858 = t32857-2.0;
                double t32859 = two_13*2.0;
                double t32860 = t32859-2.0;
                double t32861 = 1/t32860;
                double t32862 = 1/c0f;
                double t32863 = b1f*t32824;
                double t32864 = b3f*t32825;
                double t32865 = b4f*t32826*t32827;
                double t32866 = b2f*c*t32822;
                double t32867 = t32863+t32864+t32865+t32866;
                double t32868 = 1/t32867;
                double t32869 = t32862*t32868*(1.0/2.0);
                double t32870 = t32869+1.0;
                double t32871 = log(t32870);
                double t32872 = a1f*c*t32822;
                double t32873 = t32872+1.0;
                double t32874 = c0f*t32871*t32873*2.0;
                double t32875 = c0p*t32837*t32839*2.0;
                double t32876 = gcaa*gcaa;
                double t32877 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t32878 = gamma_aa[index]*gcaa*t32845;
                double t32879 = t32878+1.0;
                double t32880 = 1/pow(rho_a[index],3.2E1/3.0);
                double t32881 = gamma_aa[index]*gcaa*t32845*2.0;
                double t32882 = t32844*t32848*t32876;
                double t32883 = t32881+t32882+1.0;
                double t32885 = gcaa*t32845*2.0;
                double t32886 = gamma_aa[index]*t32844*t32876*2.0;
                double t32884 = t32885+t32886;
                double t32887 = 1/(t32883*t32883);
                double t32888 = gx*gx;
                double t32889 = gamma_aa[index]*gx*t32845;
                double t32890 = t32889+1.0;
                double t32891 = gamma_aa[index]*gx*t32845*2.0;
                double t32892 = t32844*t32848*t32888;
                double t32893 = t32891+t32892+1.0;
                double t32895 = gx*t32845*2.0;
                double t32896 = gamma_aa[index]*t32844*t32888*2.0;
                double t32894 = t32895+t32896;
                double t32897 = 1/(t32893*t32893);
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t32875+t32861*t32858*(t32874-c0p*t32837*t32839*2.0)) \
                   *2.0-c0p*rho_a[index]*log((t32828*(1.0/2.0))/(b1p*sqrt(t32842)+b3p*pow(t32842,3.0/2.0)+b4p*1/pow(t32840,2.0/ \
                   3.0)*t32826+b2p*c*t32841)+1.0)*(a1p*c*t32841+1.0)*4.0)*((ccab2*t32843*t32844*(1.0/2.0))/t32851-ccab1* \
                   t32843*t32844*1/(t32847*t32847)*(1.0/2.0)-ccab2*(t32843*t32843)*t32880*t32855*t32848*(1.0/2.0)+ccab1* \
                   gamma_aa[index]*gcab*t32843*1/(t32847*t32847*t32847)*t32877*(1.0/2.0)+ccab2*1/(t32851*t32851*t32851) \
                   *t32843*(t32852*t32852)*t32844*t32848*2.0-ccab2*gamma_aa[index]*t32843*t32852*t32844*t32855*2.0)*4.0- \
                   rho_a[index]*(t32875+t32861*t32858*(t32874-t32875))*((ccaa2*t32844*t32876*2.0)/t32883-ccaa1*t32844* \
                   t32876*1/(t32879*t32879)*2.0-ccaa2*t32880*t32848*(t32876*t32876)*t32887*2.0+ccaa1*gamma_aa[index]* \
                   gcaa*t32876*t32877*1/(t32879*t32879*t32879)*2.0+ccaa2*t32844*1/(t32883*t32883*t32883)*t32848*(t32884* \
                   t32884)*t32876*2.0-ccaa2*gamma_aa[index]*t32844*t32884*t32876*t32887*4.0)*2.0-c0*pow(rho_a[index],4.0/ \
                   3.0)*(cx1*t32844*1/(t32890*t32890)*t32888*2.0-(cx2*t32844*t32888*2.0)/t32893+cx2*t32880*t32848*(t32888* \
                   t32888)*t32897*2.0-cx1*gamma_aa[index]*gx*1/(t32890*t32890*t32890)*t32877*t32888*2.0-cx2*t32844*t32848* \
                   1/(t32893*t32893*t32893)*(t32894*t32894)*t32888*2.0+cx2*gamma_aa[index]*t32844*t32894*t32888*t32897* \
                   4.0)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 
        
        }
        if (is_meta_) {
        
            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 
        
            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 
       
            if (is_gga_) {
        
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
       
            }
        }
    }
}
void B97_0_Functional::computeUKSFunctional(shared_ptr<Properties> prop)
{
    int ntrue = prop->getTrueSize();

    double* rho_a;
    double* rho_b;
    double* gamma_aa;
    double* gamma_ab;
    double* gamma_bb;
    double* tau_a;
    double* tau_b;

    rho_a = prop->getRhoA();
    rho_b = prop->getRhoB();
    if (is_gga_) {
        gamma_aa = prop->getGammaAA();
        gamma_ab = prop->getGammaAB();
        gamma_bb = prop->getGammaBB();
    }
    if (is_meta_) {
        tau_a = prop->getTauA();
        tau_b = prop->getTauB();
    }

    double c0 = params_[0].second;
    double two_13 = params_[1].second;
    double d2fz0 = params_[2].second;
    double c = params_[3].second;
    double Aa = params_[4].second;
    double a1a = params_[5].second;
    double b1a = params_[6].second;
    double b2a = params_[7].second;
    double b3a = params_[8].second;
    double b4a = params_[9].second;
    double c0p = params_[10].second;
    double a1p = params_[11].second;
    double b1p = params_[12].second;
    double b2p = params_[13].second;
    double b3p = params_[14].second;
    double b4p = params_[15].second;
    double c0f = params_[16].second;
    double a1f = params_[17].second;
    double b1f = params_[18].second;
    double b2f = params_[19].second;
    double b3f = params_[20].second;
    double b4f = params_[21].second;
    double gcab = params_[22].second;
    double gcaa = params_[23].second;
    double gx = params_[24].second;
    double ccab0 = params_[25].second;
    double ccab1 = params_[26].second;
    double ccab2 = params_[27].second;
    double ccaa0 = params_[28].second;
    double ccaa1 = params_[29].second;
    double ccaa2 = params_[30].second;
    double cx0 = params_[31].second;
    double cx1 = params_[32].second;
    double cx2 = params_[33].second;
    
    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t28669 = 1/pow(rho_a[index],8.0/3.0);
            double t28670 = gamma_aa[index]*t28669*(1.0/2.0);
            double t28671 = 1/pow(rho_b[index],8.0/3.0);
            double t28672 = gamma_bb[index]*t28671*(1.0/2.0);
            double t28667 = t28670+t28672;
            double t28668 = gcab*gcab;
            double t28673 = t28667*t28667;
            double t28674 = 1/pow(rho_a[index],1.0/3.0);
            double t28675 = c*t28674;
            double t28676 = sqrt(t28675);
            double t28677 = pow(t28675,3.0/2.0);
            double t28678 = c*c;
            double t28679 = 1/pow(rho_a[index],2.0/3.0);
            double t28680 = 1/c0p;
            double t28681 = b1p*t28676;
            double t28682 = b3p*t28677;
            double t28683 = b4p*t28678*t28679;
            double t28684 = b2p*c*t28674;
            double t28685 = t28681+t28682+t28683+t28684;
            double t28686 = 1/t28685;
            double t28687 = t28680*t28686*(1.0/2.0);
            double t28688 = t28687+1.0;
            double t28689 = log(t28688);
            double t28690 = a1p*c*t28674;
            double t28691 = t28690+1.0;
            double t28692 = pow(2.0,1.0/3.0);
            double t28693 = t28692*2.0;
            double t28694 = t28693-2.0;
            double t28695 = two_13*2.0;
            double t28696 = t28695-2.0;
            double t28697 = 1/t28696;
            double t28698 = 1/c0f;
            double t28699 = 1/pow(rho_b[index],1.0/3.0);
            double t28700 = c*t28699;
            double t28701 = sqrt(t28700);
            double t28702 = pow(t28700,3.0/2.0);
            double t28703 = 1/pow(rho_b[index],2.0/3.0);
            double t28704 = b1p*t28701;
            double t28705 = b3p*t28702;
            double t28706 = b4p*t28703*t28678;
            double t28707 = b2p*c*t28699;
            double t28708 = t28704+t28705+t28706+t28707;
            double t28709 = 1/t28708;
            double t28710 = t28680*t28709*(1.0/2.0);
            double t28711 = t28710+1.0;
            double t28712 = log(t28711);
            double t28713 = a1p*c*t28699;
            double t28714 = t28713+1.0;
            double t28715 = c0p*t28712*t28714*2.0;
            double t28716 = rho_a[index]+rho_b[index];
            double t28717 = 1/pow(t28716,1.0/3.0);
            double t28718 = c*t28717;
            double t28719 = sqrt(t28718);
            double t28720 = pow(t28718,3.0/2.0);
            double t28721 = 1/pow(t28716,2.0/3.0);
            double t28722 = b1p*t28719;
            double t28723 = b3p*t28720;
            double t28724 = b4p*t28721*t28678;
            double t28725 = b2p*c*t28717;
            double t28726 = t28722+t28723+t28724+t28725;
            double t28727 = 1/t28726;
            double t28728 = t28680*t28727*(1.0/2.0);
            double t28729 = t28728+1.0;
            double t28730 = log(t28729);
            double t28731 = a1p*c*t28717;
            double t28732 = t28731+1.0;
            double t28733 = c0p*t28730*t28732*2.0;
            double t28734 = rho_a[index]-rho_b[index];
            double t28735 = t28734*t28734;
            double t28736 = 1/t28716;
            double t28737 = t28734*t28736;
            double t28738 = 1/(t28716*t28716*t28716*t28716);
            double t28739 = t28735*t28735;
            double t28740 = t28737+1.0;
            double t28741 = pow(t28740,4.0/3.0);
            double t28742 = -t28737+1.0;
            double t28743 = pow(t28742,4.0/3.0);
            double t28744 = t28741+t28743-2.0;
            double t28745 = c0p*t28691*t28689*2.0;
            double t28746 = gamma_aa[index]*gamma_aa[index];
            double t28747 = gx*gx;
            double t28748 = 1/pow(rho_a[index],1.6E1/3.0);
            double t28749 = gamma_bb[index]*gamma_bb[index];
            double t28750 = 1/pow(rho_b[index],1.6E1/3.0);
            double t28751 = b1f*t28676;
            double t28752 = b3f*t28677;
            double t28753 = b4f*t28678*t28679;
            double t28754 = b2f*c*t28674;
            double t28755 = t28751+t28752+t28753+t28754;
            double t28756 = 1/t28755;
            double t28757 = t28756*t28698*(1.0/2.0);
            double t28758 = t28757+1.0;
            double t28759 = log(t28758);
            double t28760 = a1f*c*t28674;
            double t28761 = t28760+1.0;
            double t28762 = t28745-c0f*t28761*t28759*2.0;
            double t28763 = t28745-t28762*t28694*t28697;
            double t28764 = gcaa*gcaa;
            double t28765 = b1f*t28701;
            double t28766 = b3f*t28702;
            double t28767 = b4f*t28703*t28678;
            double t28768 = b2f*c*t28699;
            double t28769 = t28765+t28766+t28767+t28768;
            double t28770 = 1/t28769;
            double t28771 = t28770*t28698*(1.0/2.0);
            double t28772 = t28771+1.0;
            double t28773 = log(t28772);
            double t28774 = a1f*c*t28699;
            double t28775 = t28774+1.0;
            double t28776 = t28715-c0f*t28773*t28775*2.0;
            double t28777 = t28715-t28694*t28776*t28697;
            functional_[index] = (ccab0+(ccab1*gcab*t28667)/(gcab*t28667+1.0)+(ccab2*t28673*t28668)/(gcab*t28667* \
               2.0+t28673*t28668+1.0))*(rho_a[index]*t28763+rho_b[index]*t28777-t28716*(t28733-t28744*t28738*t28739* \
               t28697*(t28733-c0f*log((t28698*(1.0/2.0))/(b1f*t28719+b3f*t28720+b2f*c*t28717+b4f*t28721*t28678)+1.0) \
               *(a1f*c*t28717+1.0)*2.0)+(Aa*t28744*t28697*log((1.0/2.0)/(Aa*(b1a*t28719+b3a*t28720+b2a*c*t28717+b4a* \
               t28721*t28678))+1.0)*(t28738*t28739-1.0)*(a1a*c*t28717+1.0)*2.0)/d2fz0))-rho_b[index]*t28777*(ccaa0+ \
               (ccaa2*t28750*t28764*t28749)/(gamma_bb[index]*gcaa*t28671*2.0+t28750*t28764*t28749+1.0)+(ccaa1*gamma_bb[index]* \
               gcaa*t28671)/(gamma_bb[index]*gcaa*t28671+1.0))-rho_a[index]*t28763*(ccaa0+(ccaa2*t28746*t28764*t28748) \
               /(gamma_aa[index]*gcaa*t28669*2.0+t28746*t28764*t28748+1.0)+(ccaa1*gamma_aa[index]*gcaa*t28669)/(gamma_aa[index]* \
               gcaa*t28669+1.0))+c0*pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t28750*t28747*t28749)/(gamma_bb[index]*gx* \
               t28671*2.0+t28750*t28747*t28749+1.0)+(cx1*gamma_bb[index]*gx*t28671)/(gamma_bb[index]*gx*t28671+1.0) \
               )+c0*pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t28746*t28747*t28748)/(gamma_aa[index]*gx*t28669*2.0+t28746* \
               t28747*t28748+1.0)+(cx1*gamma_aa[index]*gx*t28669)/(gamma_aa[index]*gx*t28669+1.0));
        } else if (rho_a[index] > cutoff_) {
            double t31791 = 1/pow(rho_a[index],8.0/3.0);
            double t31792 = gamma_aa[index]*gamma_aa[index];
            double t31793 = gx*gx;
            double t31794 = 1/pow(rho_a[index],1.6E1/3.0);
            double t31795 = 1/pow(rho_a[index],1.0/3.0);
            double t31796 = c*t31795;
            double t31797 = sqrt(t31796);
            double t31798 = pow(t31796,3.0/2.0);
            double t31799 = c*c;
            double t31800 = 1/pow(rho_a[index],2.0/3.0);
            double t31801 = 1/c0p;
            double t31802 = b1p*t31797;
            double t31803 = b3p*t31798;
            double t31804 = b4p*t31800*t31799;
            double t31805 = b2p*c*t31795;
            double t31806 = t31802+t31803+t31804+t31805;
            double t31807 = 1/t31806;
            double t31808 = t31801*t31807*(1.0/2.0);
            double t31809 = t31808+1.0;
            double t31810 = log(t31809);
            double t31811 = a1p*c*t31795;
            double t31812 = t31811+1.0;
            double t31813 = gcaa*gcaa;
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t31797+ \
               b3f*t31798+b2f*c*t31795+b4f*t31800*t31799))+1.0)*(a1f*c*t31795+1.0)*2.0-c0p*t31810*t31812*2.0))/(two_13* \
               2.0-2.0)+c0p*t31810*t31812*2.0)*(ccaa0+(ccaa2*t31813*t31792*t31794)/(gamma_aa[index]*gcaa*t31791*2.0+ \
               t31813*t31792*t31794+1.0)+(ccaa1*gamma_aa[index]*gcaa*t31791)/(gamma_aa[index]*gcaa*t31791+1.0))+c0* \
               pow(rho_a[index],4.0/3.0)*(cx0+(cx2*t31792*t31793*t31794)/(gamma_aa[index]*gx*t31791*2.0+t31792*t31793* \
               t31794+1.0)+(cx1*gamma_aa[index]*gx*t31791)/(gamma_aa[index]*gx*t31791+1.0));
        } else if (rho_b[index] > cutoff_) {
            double t31380 = 1/pow(rho_b[index],8.0/3.0);
            double t31381 = gamma_bb[index]*gamma_bb[index];
            double t31382 = gx*gx;
            double t31383 = 1/pow(rho_b[index],1.6E1/3.0);
            double t31384 = 1/pow(rho_b[index],1.0/3.0);
            double t31385 = c*t31384;
            double t31386 = sqrt(t31385);
            double t31387 = pow(t31385,3.0/2.0);
            double t31388 = c*c;
            double t31389 = 1/pow(rho_b[index],2.0/3.0);
            double t31390 = 1/c0p;
            double t31391 = b1p*t31386;
            double t31392 = b3p*t31387;
            double t31393 = b4p*t31388*t31389;
            double t31394 = b2p*c*t31384;
            double t31395 = t31391+t31392+t31393+t31394;
            double t31396 = 1/t31395;
            double t31397 = t31390*t31396*(1.0/2.0);
            double t31398 = t31397+1.0;
            double t31399 = log(t31398);
            double t31400 = a1p*c*t31384;
            double t31401 = t31400+1.0;
            double t31402 = gcaa*gcaa;
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t31386+ \
               b3f*t31387+b2f*c*t31384+b4f*t31388*t31389))+1.0)*(a1f*c*t31384+1.0)*2.0-c0p*t31401*t31399*2.0))/(two_13* \
               2.0-2.0)+c0p*t31401*t31399*2.0)*(ccaa0+(ccaa2*t31402*t31381*t31383)/(gamma_bb[index]*gcaa*t31380*2.0+ \
               t31402*t31381*t31383+1.0)+(ccaa1*gamma_bb[index]*gcaa*t31380)/(gamma_bb[index]*gcaa*t31380+1.0))+c0* \
               pow(rho_b[index],4.0/3.0)*(cx0+(cx2*t31381*t31382*t31383)/(gamma_bb[index]*gx*t31380*2.0+t31381*t31382* \
               t31383+1.0)+(cx1*gamma_bb[index]*gx*t31380)/(gamma_bb[index]*gx*t31380+1.0));
        } else {
            functional_[index] = 0.0;
        } 
   
    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t28779 = 1/pow(rho_a[index],1.0/3.0);
            double t28780 = c*t28779;
            double t28781 = sqrt(t28780);
            double t28782 = pow(t28780,3.0/2.0);
            double t28783 = c*c;
            double t28784 = 1/pow(rho_a[index],2.0/3.0);
            double t28785 = 1/c0p;
            double t28786 = b1p*t28781;
            double t28787 = b3p*t28782;
            double t28788 = b4p*t28783*t28784;
            double t28789 = b2p*c*t28779;
            double t28790 = t28786+t28787+t28788+t28789;
            double t28791 = 1/t28790;
            double t28792 = t28791*t28785*(1.0/2.0);
            double t28793 = t28792+1.0;
            double t28794 = log(t28793);
            double t28795 = a1p*c*t28779;
            double t28796 = t28795+1.0;
            double t28797 = 1/pow(rho_a[index],8.0/3.0);
            double t28798 = gamma_aa[index]*gamma_aa[index];
            double t28799 = gcaa*gcaa;
            double t28800 = 1/pow(rho_a[index],1.6E1/3.0);
            double t28803 = gamma_aa[index]*t28797*(1.0/2.0);
            double t28804 = 1/pow(rho_b[index],8.0/3.0);
            double t28805 = gamma_bb[index]*t28804*(1.0/2.0);
            double t28801 = t28803+t28805;
            double t28802 = gcab*gcab;
            double t28806 = t28801*t28801;
            double t28807 = rho_a[index]+rho_b[index];
            double t28808 = 1/pow(t28807,1.0/3.0);
            double t28809 = c*t28808;
            double t28810 = sqrt(t28809);
            double t28811 = b1p*t28810;
            double t28812 = pow(t28809,3.0/2.0);
            double t28813 = b3p*t28812;
            double t28814 = 1/pow(t28807,2.0/3.0);
            double t28815 = b4p*t28814*t28783;
            double t28816 = b2p*c*t28808;
            double t28817 = t28811+t28813+t28815+t28816;
            double t28818 = 1/pow(t28807,4.0/3.0);
            double t28819 = two_13*2.0;
            double t28820 = t28819-2.0;
            double t28821 = 1/t28820;
            double t28822 = 1/c0f;
            double t28823 = 1/t28817;
            double t28824 = t28823*t28785*(1.0/2.0);
            double t28825 = t28824+1.0;
            double t28826 = a1p*c*t28808;
            double t28827 = t28826+1.0;
            double t28828 = rho_a[index]-rho_b[index];
            double t28829 = t28828*t28828;
            double t28830 = 1/t28807;
            double t28831 = t28830*t28828;
            double t28832 = b1f*t28810;
            double t28833 = b3f*t28812;
            double t28834 = b4f*t28814*t28783;
            double t28835 = b2f*c*t28808;
            double t28836 = t28832+t28833+t28834+t28835;
            double t28837 = 1/t28836;
            double t28838 = t28822*t28837*(1.0/2.0);
            double t28839 = t28838+1.0;
            double t28840 = log(t28839);
            double t28841 = a1f*c*t28808;
            double t28842 = t28841+1.0;
            double t28843 = log(t28825);
            double t28853 = c0f*t28840*t28842*2.0;
            double t28854 = c0p*t28843*t28827*2.0;
            double t28844 = t28853-t28854;
            double t28845 = t28831+1.0;
            double t28846 = pow(t28845,4.0/3.0);
            double t28847 = -t28831+1.0;
            double t28848 = pow(t28847,4.0/3.0);
            double t28849 = t28846+t28848-2.0;
            double t28850 = 1/(t28807*t28807);
            double t28881 = t28850*t28828;
            double t28851 = t28830-t28881;
            double t28852 = 1/(t28807*t28807*t28807*t28807);
            double t28855 = t28829*t28829;
            double t28856 = 1/pow(t28807,5.0/3.0);
            double t28857 = 1/sqrt(t28809);
            double t28858 = 1/t28825;
            double t28859 = 1/(t28817*t28817);
            double t28860 = b4p*t28783*t28856*(2.0/3.0);
            double t28861 = b2p*c*t28818*(1.0/3.0);
            double t28862 = b1p*c*t28818*t28857*(1.0/6.0);
            double t28863 = b3p*c*t28810*t28818*(1.0/2.0);
            double t28864 = t28860+t28861+t28862+t28863;
            double t28865 = t28827*t28864*t28858*t28859;
            double t28866 = 1/(t28807*t28807*t28807*t28807*t28807);
            double t28867 = 1/d2fz0;
            double t28868 = 1/Aa;
            double t28869 = b1a*t28810;
            double t28870 = b3a*t28812;
            double t28871 = b4a*t28814*t28783;
            double t28872 = b2a*c*t28808;
            double t28873 = t28870+t28871+t28872+t28869;
            double t28874 = 1/t28873;
            double t28875 = t28874*t28868*(1.0/2.0);
            double t28876 = t28875+1.0;
            double t28877 = log(t28876);
            double t28878 = a1a*c*t28808;
            double t28879 = t28878+1.0;
            double t28880 = pow(t28845,1.0/3.0);
            double t28882 = t28851*t28880*(4.0/3.0);
            double t28883 = pow(t28847,1.0/3.0);
            double t28884 = t28882-t28851*t28883*(4.0/3.0);
            double t28885 = t28852*t28855;
            double t28886 = t28885-1.0;
            double t28887 = pow(2.0,1.0/3.0);
            double t28888 = t28887*2.0;
            double t28889 = t28888-2.0;
            double t28890 = a1f*c*t28779;
            double t28891 = t28890+1.0;
            double t28892 = b1f*t28781;
            double t28893 = b3f*t28782;
            double t28894 = b4f*t28783*t28784;
            double t28895 = b2f*c*t28779;
            double t28896 = t28892+t28893+t28894+t28895;
            double t28897 = 1/t28896;
            double t28898 = t28822*t28897*(1.0/2.0);
            double t28899 = t28898+1.0;
            double t28900 = 1/pow(rho_a[index],4.0/3.0);
            double t28901 = 1/pow(rho_a[index],5.0/3.0);
            double t28902 = 1/sqrt(t28780);
            double t28903 = log(t28899);
            double t28904 = 1/t28793;
            double t28905 = 1/(t28790*t28790);
            double t28906 = b4p*t28901*t28783*(2.0/3.0);
            double t28907 = b2p*c*t28900*(1.0/3.0);
            double t28908 = b1p*c*t28900*t28902*(1.0/6.0);
            double t28909 = b3p*c*t28900*t28781*(1.0/2.0);
            double t28910 = t28906+t28907+t28908+t28909;
            double t28911 = t28910*t28904*t28905*t28796;
            double t28912 = c0f*t28903*t28891*2.0;
            double t28913 = c0p*t28794*t28796*2.0;
            double t28914 = t28912-t28913;
            double t28915 = 1/pow(rho_b[index],1.0/3.0);
            double t28916 = c*t28915;
            double t28917 = sqrt(t28916);
            double t28918 = pow(t28916,3.0/2.0);
            double t28919 = 1/pow(rho_b[index],2.0/3.0);
            double t28920 = b1p*t28917;
            double t28921 = b3p*t28918;
            double t28922 = b4p*t28783*t28919;
            double t28923 = b2p*c*t28915;
            double t28924 = t28920+t28921+t28922+t28923;
            double t28925 = 1/t28924;
            double t28926 = t28925*t28785*(1.0/2.0);
            double t28927 = t28926+1.0;
            double t28928 = log(t28927);
            double t28929 = a1p*c*t28915;
            double t28930 = t28929+1.0;
            double t28931 = c0p*t28930*t28928*2.0;
            double t28932 = t28821*t28852*t28844*t28855*t28849;
            double t28933 = Aa*t28821*t28849*t28867*t28877*t28886*t28879*2.0;
            double t28934 = gcab*t28801;
            double t28935 = t28934+1.0;
            double t28936 = 1/t28935;
            double t28937 = 1/pow(rho_a[index],1.1E1/3.0);
            double t28938 = t28802*t28806;
            double t28939 = gcab*t28801*2.0;
            double t28940 = t28938+t28939+1.0;
            double t28941 = 1/t28940;
            double t28942 = gx*gx;
            double t28943 = gamma_aa[index]*gx*t28797;
            double t28944 = t28943+1.0;
            double t28945 = 1/t28944;
            double t28946 = gamma_aa[index]*gx*t28797*2.0;
            double t28947 = t28800*t28942*t28798;
            double t28948 = t28946+t28947+1.0;
            double t28949 = 1/t28948;
            double t28950 = 1/pow(rho_a[index],1.9E1/3.0);
            double t28951 = 1/t28899;
            double t28952 = 1/(t28896*t28896);
            double t28953 = b4f*t28901*t28783*(2.0/3.0);
            double t28954 = b2f*c*t28900*(1.0/3.0);
            double t28955 = b1f*c*t28900*t28902*(1.0/6.0);
            double t28956 = b3f*c*t28900*t28781*(1.0/2.0);
            double t28957 = t28953+t28954+t28955+t28956;
            double t28958 = a1f*c*c0f*t28900*t28903*(2.0/3.0);
            double t28959 = a1p*c*c0p*t28900*t28794*(2.0/3.0);
            double t28960 = gamma_aa[index]*gcaa*t28797;
            double t28961 = t28960+1.0;
            double t28962 = 1/t28961;
            double t28963 = ccaa1*gamma_aa[index]*gcaa*t28962*t28797;
            double t28964 = gamma_aa[index]*gcaa*t28797*2.0;
            double t28965 = t28800*t28798*t28799;
            double t28966 = t28964+t28965+1.0;
            double t28967 = 1/t28966;
            double t28968 = ccaa2*t28800*t28967*t28798*t28799;
            double t28969 = ccaa0+t28963+t28968;
            double t28970 = t28821*t28914*t28889;
            double t28971 = t28913+t28970;
            v_rho_a_[index] = -t28969*(t28913+t28821*t28889*(t28912-c0p*t28794*t28796*2.0))-(ccab0+ccab1*gcab* \
               t28801*t28936+ccab2*t28802*t28806*t28941)*(-t28913+t28932+t28933+t28854+t28807*(t28865-t28821*t28852* \
               t28855*t28849*(t28865-(t28842*1/(t28836*t28836)*(b2f*c*t28818*(1.0/3.0)+b4f*t28783*t28856*(2.0/3.0) \
               +b1f*c*t28818*t28857*(1.0/6.0)+b3f*c*t28810*t28818*(1.0/2.0)))/t28839+a1f*c*c0f*t28840*t28818*(2.0/ \
               3.0)-a1p*c*c0p*t28843*t28818*(2.0/3.0))-a1p*c*c0p*t28843*t28818*(2.0/3.0)+t28821*t28852*t28844*t28855* \
               t28884-t28821*t28844*t28855*t28866*t28849*4.0+t28821*t28852*t28844*t28828*t28829*t28849*4.0-Aa*t28821* \
               t28849*t28867*t28877*t28879*(t28855*t28866*4.0-t28852*t28828*t28829*4.0)*2.0+Aa*t28821*t28884*t28867* \
               t28877*t28886*t28879*2.0+(t28821*1/(t28873*t28873)*t28849*t28867*t28886*t28879*(b2a*c*t28818*(1.0/ \
               3.0)+b4a*t28783*t28856*(2.0/3.0)+b1a*c*t28818*t28857*(1.0/6.0)+b3a*c*t28810*t28818*(1.0/2.0)))/t28876- \
               Aa*a1a*c*t28821*t28818*t28849*t28867*t28877*t28886*(2.0/3.0))+rho_a[index]*(-t28911+t28959+t28821* \
               t28889*(t28911+t28958-t28951*t28952*t28891*t28957-a1p*c*c0p*t28900*t28794*(2.0/3.0)))-t28821*t28914* \
               t28889)-(rho_a[index]*t28971+rho_b[index]*(t28931-t28821*t28889*(t28931-c0f*log((t28822*(1.0/2.0)) \
               /(b1f*t28917+b3f*t28918+b2f*c*t28915+b4f*t28783*t28919)+1.0)*(a1f*c*t28915+1.0)*2.0))-t28807*(t28932+ \
               t28933+t28854))*(ccab1*gamma_aa[index]*gcab*t28936*t28937*(4.0/3.0)-ccab2*t28802*1/(t28940*t28940) \
               *t28806*(gamma_aa[index]*gcab*t28937*(8.0/3.0)+gamma_aa[index]*t28801*t28802*t28937*(8.0/3.0))-ccab1* \
               gamma_aa[index]*t28801*t28802*1/(t28935*t28935)*t28937*(4.0/3.0)+ccab2*gamma_aa[index]*t28801*t28802* \
               t28941*t28937*(8.0/3.0))+rho_a[index]*t28971*(ccaa1*gamma_aa[index]*gcaa*t28962*t28937*(8.0/3.0)+ccaa2* \
               t28950*t28967*t28798*t28799*(1.6E1/3.0)-ccaa1*t28950*1/(t28961*t28961)*t28798*t28799*(8.0/3.0)-ccaa2* \
               t28800*1/(t28966*t28966)*t28798*t28799*(gamma_aa[index]*gcaa*t28937*(1.6E1/3.0)+t28950*t28798*t28799* \
               (1.6E1/3.0)))+c0*pow(rho_a[index],1.0/3.0)*(cx0+cx1*gamma_aa[index]*gx*t28945*t28797+cx2*t28800*t28942* \
               t28949*t28798)*(4.0/3.0)+rho_a[index]*t28969*(-t28911+t28959+t28821*t28889*(t28911+t28958-t28959-t28951* \
               t28952*t28891*t28957))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t28945*t28937*(8.0/3.0) \
               +cx2*t28950*t28942*t28949*t28798*(1.6E1/3.0)-cx1*t28950*t28942*1/(t28944*t28944)*t28798*(8.0/3.0)- \
               cx2*t28800*t28942*1/(t28948*t28948)*t28798*(gamma_aa[index]*gx*t28937*(1.6E1/3.0)+t28950*t28942*t28798* \
               (1.6E1/3.0)));
        } else if (rho_a[index] > cutoff_) {
            double t31815 = 1/pow(rho_a[index],1.0/3.0);
            double t31816 = c*t31815;
            double t31817 = sqrt(t31816);
            double t31818 = pow(t31816,3.0/2.0);
            double t31819 = c*c;
            double t31820 = 1/pow(rho_a[index],2.0/3.0);
            double t31821 = 1/c0p;
            double t31822 = b1p*t31817;
            double t31823 = b3p*t31818;
            double t31824 = b4p*t31820*t31819;
            double t31825 = b2p*c*t31815;
            double t31826 = t31822+t31823+t31824+t31825;
            double t31827 = 1/t31826;
            double t31828 = t31821*t31827*(1.0/2.0);
            double t31829 = t31828+1.0;
            double t31830 = log(t31829);
            double t31831 = a1p*c*t31815;
            double t31832 = t31831+1.0;
            double t31833 = 1/pow(rho_a[index],8.0/3.0);
            double t31834 = gamma_aa[index]*gamma_aa[index];
            double t31835 = gcaa*gcaa;
            double t31836 = 1/pow(rho_a[index],1.6E1/3.0);
            double t31837 = gx*gx;
            double t31838 = gamma_aa[index]*gx*t31833;
            double t31839 = t31838+1.0;
            double t31840 = 1/t31839;
            double t31841 = gamma_aa[index]*gx*t31833*2.0;
            double t31842 = t31834*t31836*t31837;
            double t31843 = t31841+t31842+1.0;
            double t31844 = 1/t31843;
            double t31845 = 1/pow(rho_a[index],1.9E1/3.0);
            double t31846 = 1/pow(rho_a[index],1.1E1/3.0);
            double t31847 = pow(2.0,1.0/3.0);
            double t31848 = t31847*2.0;
            double t31849 = t31848-2.0;
            double t31850 = two_13*2.0;
            double t31851 = t31850-2.0;
            double t31852 = 1/t31851;
            double t31853 = a1f*c*t31815;
            double t31854 = t31853+1.0;
            double t31855 = 1/c0f;
            double t31856 = b1f*t31817;
            double t31857 = b3f*t31818;
            double t31858 = b4f*t31820*t31819;
            double t31859 = b2f*c*t31815;
            double t31860 = t31856+t31857+t31858+t31859;
            double t31861 = 1/t31860;
            double t31862 = t31861*t31855*(1.0/2.0);
            double t31863 = t31862+1.0;
            double t31864 = 1/pow(rho_a[index],4.0/3.0);
            double t31865 = 1/pow(rho_a[index],5.0/3.0);
            double t31866 = 1/sqrt(t31816);
            double t31867 = log(t31863);
            double t31868 = 1/t31829;
            double t31869 = 1/(t31826*t31826);
            double t31870 = b4p*t31819*t31865*(2.0/3.0);
            double t31871 = b2p*c*t31864*(1.0/3.0);
            double t31872 = b1p*c*t31864*t31866*(1.0/6.0);
            double t31873 = b3p*c*t31817*t31864*(1.0/2.0);
            double t31874 = t31870+t31871+t31872+t31873;
            double t31875 = t31832*t31874*t31868*t31869;
            double t31876 = gamma_aa[index]*gcaa*t31833;
            double t31877 = t31876+1.0;
            double t31878 = 1/t31877;
            double t31879 = ccaa1*gamma_aa[index]*gcaa*t31833*t31878;
            double t31880 = gamma_aa[index]*gcaa*t31833*2.0;
            double t31881 = t31834*t31835*t31836;
            double t31882 = t31880+t31881+1.0;
            double t31883 = 1/t31882;
            double t31884 = ccaa2*t31834*t31835*t31836*t31883;
            double t31885 = ccaa0+t31884+t31879;
            double t31886 = c0f*t31854*t31867*2.0;
            double t31887 = c0p*t31830*t31832*2.0;
            v_rho_a_[index] = -t31885*(t31887+t31852*t31849*(t31886-c0p*t31830*t31832*2.0))+rho_a[index]*t31885* \
               (-t31875+t31852*t31849*(t31875-(1/(t31860*t31860)*t31854*(b2f*c*t31864*(1.0/3.0)+b4f*t31819*t31865* \
               (2.0/3.0)+b1f*c*t31864*t31866*(1.0/6.0)+b3f*c*t31817*t31864*(1.0/2.0)))/t31863+a1f*c*c0f*t31864*t31867* \
               (2.0/3.0)-a1p*c*c0p*t31830*t31864*(2.0/3.0))+a1p*c*c0p*t31830*t31864*(2.0/3.0))+c0*pow(rho_a[index],1.0/ \
               3.0)*(cx0+cx1*gamma_aa[index]*gx*t31840*t31833+cx2*t31834*t31844*t31836*t31837)*(4.0/3.0)+rho_a[index]* \
               (t31887+t31852*t31849*(t31886-t31887))*(ccaa1*gamma_aa[index]*gcaa*t31846*t31878*(8.0/3.0)+ccaa2*t31834* \
               t31835*t31845*t31883*(1.6E1/3.0)-ccaa1*t31834*t31835*t31845*1/(t31877*t31877)*(8.0/3.0)-ccaa2*t31834* \
               t31835*t31836*1/(t31882*t31882)*(gamma_aa[index]*gcaa*t31846*(1.6E1/3.0)+t31834*t31835*t31845*(1.6E1/ \
               3.0)))-c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t31840*t31846*(8.0/3.0)+cx2*t31834*t31844* \
               t31845*t31837*(1.6E1/3.0)-cx1*t31834*t31845*t31837*1/(t31839*t31839)*(8.0/3.0)-cx2*t31834*1/(t31843* \
               t31843)*t31836*t31837*(gamma_aa[index]*gx*t31846*(1.6E1/3.0)+t31834*t31845*t31837*(1.6E1/3.0)));
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t28973 = 1/pow(rho_b[index],1.0/3.0);
            double t28974 = c*t28973;
            double t28975 = sqrt(t28974);
            double t28976 = pow(t28974,3.0/2.0);
            double t28977 = c*c;
            double t28978 = 1/pow(rho_b[index],2.0/3.0);
            double t28979 = 1/c0p;
            double t28980 = b1p*t28975;
            double t28981 = b3p*t28976;
            double t28982 = b4p*t28977*t28978;
            double t28983 = b2p*c*t28973;
            double t28984 = t28980+t28981+t28982+t28983;
            double t28985 = 1/t28984;
            double t28986 = t28985*t28979*(1.0/2.0);
            double t28987 = t28986+1.0;
            double t28988 = log(t28987);
            double t28989 = a1p*c*t28973;
            double t28990 = t28989+1.0;
            double t28991 = 1/pow(rho_b[index],8.0/3.0);
            double t28992 = gamma_bb[index]*gamma_bb[index];
            double t28993 = gcaa*gcaa;
            double t28994 = 1/pow(rho_b[index],1.6E1/3.0);
            double t28997 = 1/pow(rho_a[index],8.0/3.0);
            double t28998 = gamma_aa[index]*t28997*(1.0/2.0);
            double t28999 = gamma_bb[index]*t28991*(1.0/2.0);
            double t28995 = t28998+t28999;
            double t28996 = gcab*gcab;
            double t29000 = t28995*t28995;
            double t29001 = rho_a[index]+rho_b[index];
            double t29002 = 1/pow(t29001,1.0/3.0);
            double t29003 = c*t29002;
            double t29004 = sqrt(t29003);
            double t29005 = b1p*t29004;
            double t29006 = pow(t29003,3.0/2.0);
            double t29007 = b3p*t29006;
            double t29008 = 1/pow(t29001,2.0/3.0);
            double t29009 = b4p*t28977*t29008;
            double t29010 = b2p*c*t29002;
            double t29011 = t29010+t29005+t29007+t29009;
            double t29012 = 1/pow(t29001,4.0/3.0);
            double t29013 = two_13*2.0;
            double t29014 = t29013-2.0;
            double t29015 = 1/t29014;
            double t29016 = 1/c0f;
            double t29017 = 1/t29011;
            double t29018 = t28979*t29017*(1.0/2.0);
            double t29019 = t29018+1.0;
            double t29020 = a1p*c*t29002;
            double t29021 = t29020+1.0;
            double t29022 = rho_a[index]-rho_b[index];
            double t29023 = t29022*t29022;
            double t29024 = 1/t29001;
            double t29025 = t29022*t29024;
            double t29026 = b1f*t29004;
            double t29027 = b3f*t29006;
            double t29028 = b4f*t28977*t29008;
            double t29029 = b2f*c*t29002;
            double t29030 = t29026+t29027+t29028+t29029;
            double t29031 = 1/t29030;
            double t29032 = t29031*t29016*(1.0/2.0);
            double t29033 = t29032+1.0;
            double t29034 = log(t29033);
            double t29035 = a1f*c*t29002;
            double t29036 = t29035+1.0;
            double t29037 = log(t29019);
            double t29048 = c0f*t29034*t29036*2.0;
            double t29049 = c0p*t29021*t29037*2.0;
            double t29038 = t29048-t29049;
            double t29039 = t29025+1.0;
            double t29040 = pow(t29039,4.0/3.0);
            double t29041 = -t29025+1.0;
            double t29042 = pow(t29041,4.0/3.0);
            double t29043 = t29040+t29042-2.0;
            double t29044 = 1/(t29001*t29001);
            double t29045 = t29022*t29044;
            double t29046 = t29024+t29045;
            double t29047 = 1/(t29001*t29001*t29001*t29001);
            double t29050 = t29023*t29023;
            double t29051 = 1/pow(t29001,5.0/3.0);
            double t29052 = 1/sqrt(t29003);
            double t29053 = 1/t29019;
            double t29054 = 1/(t29011*t29011);
            double t29055 = b4p*t28977*t29051*(2.0/3.0);
            double t29056 = b2p*c*t29012*(1.0/3.0);
            double t29057 = b1p*c*t29012*t29052*(1.0/6.0);
            double t29058 = b3p*c*t29012*t29004*(1.0/2.0);
            double t29059 = t29055+t29056+t29057+t29058;
            double t29060 = 1/(t29001*t29001*t29001*t29001*t29001);
            double t29061 = 1/d2fz0;
            double t29062 = 1/Aa;
            double t29063 = b1a*t29004;
            double t29064 = b3a*t29006;
            double t29065 = b4a*t28977*t29008;
            double t29066 = b2a*c*t29002;
            double t29067 = t29063+t29064+t29065+t29066;
            double t29068 = 1/t29067;
            double t29069 = t29062*t29068*(1.0/2.0);
            double t29070 = t29069+1.0;
            double t29071 = log(t29070);
            double t29072 = a1a*c*t29002;
            double t29073 = t29072+1.0;
            double t29074 = pow(t29039,1.0/3.0);
            double t29075 = t29046*t29074*(4.0/3.0);
            double t29076 = pow(t29041,1.0/3.0);
            double t29077 = t29075-t29046*t29076*(4.0/3.0);
            double t29078 = t29050*t29047;
            double t29079 = t29078-1.0;
            double t29080 = pow(2.0,1.0/3.0);
            double t29081 = t29080*2.0;
            double t29082 = t29081-2.0;
            double t29083 = a1f*c*t28973;
            double t29084 = t29083+1.0;
            double t29085 = b1f*t28975;
            double t29086 = b3f*t28976;
            double t29087 = b4f*t28977*t28978;
            double t29088 = b2f*c*t28973;
            double t29089 = t29085+t29086+t29087+t29088;
            double t29090 = 1/t29089;
            double t29091 = t29016*t29090*(1.0/2.0);
            double t29092 = t29091+1.0;
            double t29093 = 1/pow(rho_b[index],4.0/3.0);
            double t29094 = 1/pow(rho_b[index],5.0/3.0);
            double t29095 = 1/sqrt(t28974);
            double t29096 = log(t29092);
            double t29097 = 1/t28987;
            double t29098 = 1/(t28984*t28984);
            double t29099 = b4p*t28977*t29094*(2.0/3.0);
            double t29100 = b2p*c*t29093*(1.0/3.0);
            double t29101 = b1p*c*t29093*t29095*(1.0/6.0);
            double t29102 = b3p*c*t28975*t29093*(1.0/2.0);
            double t29103 = t29100+t29101+t29102+t29099;
            double t29104 = t28990*t29103*t29097*t29098;
            double t29105 = c0f*t29084*t29096*2.0;
            double t29106 = c0p*t28990*t28988*2.0;
            double t29107 = a1p*c*c0p*t29012*t29037*(2.0/3.0);
            double t29108 = 1/pow(rho_a[index],1.0/3.0);
            double t29109 = c*t29108;
            double t29110 = sqrt(t29109);
            double t29111 = pow(t29109,3.0/2.0);
            double t29112 = 1/pow(rho_a[index],2.0/3.0);
            double t29113 = b1p*t29110;
            double t29114 = b3p*t29111;
            double t29115 = b4p*t28977*t29112;
            double t29116 = b2p*c*t29108;
            double t29117 = t29113+t29114+t29115+t29116;
            double t29118 = 1/t29117;
            double t29119 = t28979*t29118*(1.0/2.0);
            double t29120 = t29119+1.0;
            double t29121 = log(t29120);
            double t29122 = a1p*c*t29108;
            double t29123 = t29122+1.0;
            double t29124 = c0p*t29121*t29123*2.0;
            double t29125 = t29105-t29106;
            double t29126 = t29050*t29015*t29043*t29038*t29047;
            double t29127 = Aa*t29015*t29043*t29061*t29071*t29073*t29079*2.0;
            double t29128 = gcab*t28995;
            double t29129 = t29128+1.0;
            double t29130 = 1/t29129;
            double t29131 = 1/pow(rho_b[index],1.1E1/3.0);
            double t29132 = t28996*t29000;
            double t29133 = gcab*t28995*2.0;
            double t29134 = t29132+t29133+1.0;
            double t29135 = 1/t29134;
            double t29136 = gx*gx;
            double t29137 = gamma_bb[index]*gx*t28991;
            double t29138 = t29137+1.0;
            double t29139 = 1/t29138;
            double t29140 = gamma_bb[index]*gx*t28991*2.0;
            double t29141 = t28992*t28994*t29136;
            double t29142 = t29140+t29141+1.0;
            double t29143 = 1/t29142;
            double t29144 = 1/pow(rho_b[index],1.9E1/3.0);
            double t29145 = 1/t29092;
            double t29146 = 1/(t29089*t29089);
            double t29147 = b4f*t28977*t29094*(2.0/3.0);
            double t29148 = b2f*c*t29093*(1.0/3.0);
            double t29149 = b1f*c*t29093*t29095*(1.0/6.0);
            double t29150 = b3f*c*t28975*t29093*(1.0/2.0);
            double t29151 = t29150+t29147+t29148+t29149;
            double t29152 = a1f*c*c0f*t29093*t29096*(2.0/3.0);
            double t29153 = a1p*c*c0p*t28988*t29093*(2.0/3.0);
            double t29154 = gamma_bb[index]*gcaa*t28991;
            double t29155 = t29154+1.0;
            double t29156 = 1/t29155;
            double t29157 = ccaa1*gamma_bb[index]*gcaa*t28991*t29156;
            double t29158 = gamma_bb[index]*gcaa*t28991*2.0;
            double t29159 = t28992*t28993*t28994;
            double t29160 = t29158+t29159+1.0;
            double t29161 = 1/t29160;
            double t29162 = ccaa2*t28992*t28993*t28994*t29161;
            double t29163 = ccaa0+t29162+t29157;
            double t29164 = t29015*t29125*t29082;
            double t29165 = t29106+t29164;
            v_rho_b_[index] = -(ccab0+ccab1*gcab*t28995*t29130+ccab2*t28996*t29000*t29135)*(-t29106+t29126+t29127+ \
               t29049+rho_b[index]*(-t29104+t29153+t29015*t29082*(t29104+t29152-t29151*t29145*t29146*t29084-a1p*c* \
               c0p*t28988*t29093*(2.0/3.0)))-t29001*(t29107-t29021*t29053*t29054*t29059+t29050*t29015*t29060*t29043* \
               t29038*4.0+t29050*t29015*t29038*t29047*t29077-t29050*t29015*t29043*t29047*(t29107-t29021*t29053*t29054* \
               t29059+(1/(t29030*t29030)*t29036*(b2f*c*t29012*(1.0/3.0)+b4f*t28977*t29051*(2.0/3.0)+b1f*c*t29012* \
               t29052*(1.0/6.0)+b3f*c*t29012*t29004*(1.0/2.0)))/t29033-a1f*c*c0f*t29012*t29034*(2.0/3.0))+t29022* \
               t29023*t29015*t29043*t29038*t29047*4.0+Aa*t29015*t29043*t29061*t29071*t29073*(t29050*t29060*4.0+t29022* \
               t29023*t29047*4.0)*2.0+Aa*t29015*t29061*t29071*t29073*t29077*t29079*2.0-(t29015*t29043*t29061*t29073* \
               1/(t29067*t29067)*t29079*(b2a*c*t29012*(1.0/3.0)+b4a*t28977*t29051*(2.0/3.0)+b1a*c*t29012*t29052*(1.0/ \
               6.0)+b3a*c*t29012*t29004*(1.0/2.0)))/t29070+Aa*a1a*c*t29012*t29015*t29043*t29061*t29071*t29079*(2.0/ \
               3.0))-t29015*t29125*t29082)-t29163*(t29106+t29015*t29082*(t29105-c0p*t28990*t28988*2.0))-(rho_b[index]* \
               t29165+rho_a[index]*(t29124-t29015*t29082*(t29124-c0f*log((t29016*(1.0/2.0))/(b1f*t29110+b3f*t29111+ \
               b2f*c*t29108+b4f*t28977*t29112)+1.0)*(a1f*c*t29108+1.0)*2.0))-t29001*(t29126+t29127+t29049))*(ccab1* \
               gamma_bb[index]*gcab*t29130*t29131*(4.0/3.0)-ccab2*t28996*t29000*1/(t29134*t29134)*(gamma_bb[index]* \
               gcab*t29131*(8.0/3.0)+gamma_bb[index]*t28995*t28996*t29131*(8.0/3.0))-ccab1*gamma_bb[index]*t28995* \
               t28996*t29131*1/(t29129*t29129)*(4.0/3.0)+ccab2*gamma_bb[index]*t28995*t28996*t29131*t29135*(8.0/3.0) \
               )+rho_b[index]*t29165*(ccaa1*gamma_bb[index]*gcaa*t29131*t29156*(8.0/3.0)+ccaa2*t28992*t28993*t29161* \
               t29144*(1.6E1/3.0)-ccaa1*t28992*t28993*t29144*1/(t29155*t29155)*(8.0/3.0)-ccaa2*t28992*t28993*t28994* \
               1/(t29160*t29160)*(gamma_bb[index]*gcaa*t29131*(1.6E1/3.0)+t28992*t28993*t29144*(1.6E1/3.0)))+c0*pow(rho_b[index],1.0/ \
               3.0)*(cx0+cx1*gamma_bb[index]*gx*t28991*t29139+cx2*t28992*t28994*t29143*t29136)*(4.0/3.0)+rho_b[index]* \
               t29163*(-t29104+t29153+t29015*t29082*(t29104+t29152-t29153-t29151*t29145*t29146*t29084))-c0*pow(rho_b[index],4.0/ \
               3.0)*(cx1*gamma_bb[index]*gx*t29131*t29139*(8.0/3.0)+cx2*t28992*t29143*t29144*t29136*(1.6E1/3.0)-cx1* \
               t28992*t29144*t29136*1/(t29138*t29138)*(8.0/3.0)-cx2*t28992*t28994*1/(t29142*t29142)*t29136*(gamma_bb[index]* \
               gx*t29131*(1.6E1/3.0)+t28992*t29144*t29136*(1.6E1/3.0)));
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t31405 = 1/pow(rho_b[index],1.0/3.0);
            double t31406 = c*t31405;
            double t31407 = sqrt(t31406);
            double t31408 = pow(t31406,3.0/2.0);
            double t31409 = c*c;
            double t31410 = 1/pow(rho_b[index],2.0/3.0);
            double t31411 = 1/c0p;
            double t31412 = b1p*t31407;
            double t31413 = b3p*t31408;
            double t31414 = b4p*t31410*t31409;
            double t31415 = b2p*c*t31405;
            double t31416 = t31412+t31413+t31414+t31415;
            double t31417 = 1/t31416;
            double t31418 = t31411*t31417*(1.0/2.0);
            double t31419 = t31418+1.0;
            double t31420 = log(t31419);
            double t31421 = a1p*c*t31405;
            double t31422 = t31421+1.0;
            double t31423 = 1/pow(rho_b[index],8.0/3.0);
            double t31424 = gamma_bb[index]*gamma_bb[index];
            double t31425 = gcaa*gcaa;
            double t31426 = 1/pow(rho_b[index],1.6E1/3.0);
            double t31427 = gx*gx;
            double t31428 = gamma_bb[index]*gx*t31423;
            double t31429 = t31428+1.0;
            double t31430 = 1/t31429;
            double t31431 = gamma_bb[index]*gx*t31423*2.0;
            double t31432 = t31424*t31426*t31427;
            double t31433 = t31431+t31432+1.0;
            double t31434 = 1/t31433;
            double t31435 = 1/pow(rho_b[index],1.9E1/3.0);
            double t31436 = 1/pow(rho_b[index],1.1E1/3.0);
            double t31437 = pow(2.0,1.0/3.0);
            double t31438 = t31437*2.0;
            double t31439 = t31438-2.0;
            double t31440 = two_13*2.0;
            double t31441 = t31440-2.0;
            double t31442 = 1/t31441;
            double t31443 = a1f*c*t31405;
            double t31444 = t31443+1.0;
            double t31445 = 1/c0f;
            double t31446 = b1f*t31407;
            double t31447 = b3f*t31408;
            double t31448 = b4f*t31410*t31409;
            double t31449 = b2f*c*t31405;
            double t31450 = t31446+t31447+t31448+t31449;
            double t31451 = 1/t31450;
            double t31452 = t31451*t31445*(1.0/2.0);
            double t31453 = t31452+1.0;
            double t31454 = 1/pow(rho_b[index],4.0/3.0);
            double t31455 = 1/pow(rho_b[index],5.0/3.0);
            double t31456 = 1/sqrt(t31406);
            double t31457 = log(t31453);
            double t31458 = 1/t31419;
            double t31459 = 1/(t31416*t31416);
            double t31460 = b4p*t31409*t31455*(2.0/3.0);
            double t31461 = b2p*c*t31454*(1.0/3.0);
            double t31462 = b1p*c*t31454*t31456*(1.0/6.0);
            double t31463 = b3p*c*t31407*t31454*(1.0/2.0);
            double t31464 = t31460+t31461+t31462+t31463;
            double t31465 = t31422*t31464*t31458*t31459;
            double t31466 = gamma_bb[index]*gcaa*t31423;
            double t31467 = t31466+1.0;
            double t31468 = 1/t31467;
            double t31469 = ccaa1*gamma_bb[index]*gcaa*t31423*t31468;
            double t31470 = gamma_bb[index]*gcaa*t31423*2.0;
            double t31471 = t31424*t31425*t31426;
            double t31472 = t31470+t31471+1.0;
            double t31473 = 1/t31472;
            double t31474 = ccaa2*t31424*t31425*t31426*t31473;
            double t31475 = ccaa0+t31474+t31469;
            double t31476 = c0f*t31444*t31457*2.0;
            double t31477 = c0p*t31420*t31422*2.0;
            v_rho_b_[index] = -t31475*(t31477+t31442*t31439*(t31476-c0p*t31420*t31422*2.0))+rho_b[index]*t31475* \
               (-t31465+t31442*t31439*(t31465-(1/(t31450*t31450)*t31444*(b2f*c*t31454*(1.0/3.0)+b4f*t31409*t31455* \
               (2.0/3.0)+b1f*c*t31454*t31456*(1.0/6.0)+b3f*c*t31407*t31454*(1.0/2.0)))/t31453+a1f*c*c0f*t31454*t31457* \
               (2.0/3.0)-a1p*c*c0p*t31420*t31454*(2.0/3.0))+a1p*c*c0p*t31420*t31454*(2.0/3.0))+c0*pow(rho_b[index],1.0/ \
               3.0)*(cx0+cx1*gamma_bb[index]*gx*t31430*t31423+cx2*t31424*t31434*t31426*t31427)*(4.0/3.0)+rho_b[index]* \
               (t31477+t31442*t31439*(t31476-t31477))*(ccaa1*gamma_bb[index]*gcaa*t31436*t31468*(8.0/3.0)+ccaa2*t31424* \
               t31425*t31435*t31473*(1.6E1/3.0)-ccaa1*t31424*t31425*t31435*1/(t31467*t31467)*(8.0/3.0)-ccaa2*t31424* \
               t31425*t31426*1/(t31472*t31472)*(gamma_bb[index]*gcaa*t31436*(1.6E1/3.0)+t31424*t31425*t31435*(1.6E1/ \
               3.0)))-c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t31430*t31436*(8.0/3.0)+cx2*t31424*t31434* \
               t31435*t31427*(1.6E1/3.0)-cx1*t31424*t31435*t31427*1/(t31429*t31429)*(8.0/3.0)-cx2*t31424*1/(t31433* \
               t31433)*t31426*t31427*(gamma_bb[index]*gx*t31436*(1.6E1/3.0)+t31424*t31435*t31427*(1.6E1/3.0)));
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t29167 = 1/pow(rho_a[index],1.0/3.0);
                double t29168 = c*t29167;
                double t29169 = sqrt(t29168);
                double t29170 = pow(t29168,3.0/2.0);
                double t29171 = c*c;
                double t29172 = 1/pow(rho_a[index],2.0/3.0);
                double t29173 = 1/c0p;
                double t29174 = b1p*t29169;
                double t29175 = b3p*t29170;
                double t29176 = b4p*t29171*t29172;
                double t29177 = b2p*c*t29167;
                double t29178 = t29174+t29175+t29176+t29177;
                double t29179 = 1/t29178;
                double t29180 = t29173*t29179*(1.0/2.0);
                double t29181 = t29180+1.0;
                double t29182 = log(t29181);
                double t29183 = a1p*c*t29167;
                double t29184 = t29183+1.0;
                double t29185 = pow(2.0,1.0/3.0);
                double t29186 = t29185*2.0;
                double t29187 = t29186-2.0;
                double t29188 = two_13*2.0;
                double t29189 = t29188-2.0;
                double t29190 = 1/t29189;
                double t29191 = 1/c0f;
                double t29192 = 1/pow(rho_b[index],1.0/3.0);
                double t29193 = c*t29192;
                double t29194 = sqrt(t29193);
                double t29195 = pow(t29193,3.0/2.0);
                double t29196 = 1/pow(rho_b[index],2.0/3.0);
                double t29197 = b1p*t29194;
                double t29198 = b3p*t29195;
                double t29199 = b4p*t29171*t29196;
                double t29200 = b2p*c*t29192;
                double t29201 = t29200+t29197+t29198+t29199;
                double t29202 = 1/t29201;
                double t29203 = t29202*t29173*(1.0/2.0);
                double t29204 = t29203+1.0;
                double t29205 = log(t29204);
                double t29206 = a1p*c*t29192;
                double t29207 = t29206+1.0;
                double t29208 = c0p*t29205*t29207*2.0;
                double t29209 = rho_a[index]+rho_b[index];
                double t29210 = 1/pow(t29209,1.0/3.0);
                double t29211 = c*t29210;
                double t29212 = sqrt(t29211);
                double t29213 = pow(t29211,3.0/2.0);
                double t29214 = 1/pow(t29209,2.0/3.0);
                double t29215 = b1p*t29212;
                double t29216 = b3p*t29213;
                double t29217 = b4p*t29214*t29171;
                double t29218 = b2p*c*t29210;
                double t29219 = t29215+t29216+t29217+t29218;
                double t29220 = 1/t29219;
                double t29221 = t29220*t29173*(1.0/2.0);
                double t29222 = t29221+1.0;
                double t29223 = log(t29222);
                double t29224 = a1p*c*t29210;
                double t29225 = t29224+1.0;
                double t29226 = c0p*t29223*t29225*2.0;
                double t29227 = rho_a[index]-rho_b[index];
                double t29228 = t29227*t29227;
                double t29229 = 1/t29209;
                double t29230 = t29227*t29229;
                double t29231 = 1/(t29209*t29209*t29209*t29209);
                double t29232 = t29228*t29228;
                double t29233 = t29230+1.0;
                double t29234 = pow(t29233,4.0/3.0);
                double t29235 = -t29230+1.0;
                double t29236 = pow(t29235,4.0/3.0);
                double t29237 = t29234+t29236-2.0;
                double t29238 = 1/pow(rho_a[index],8.0/3.0);
                double t29239 = gamma_aa[index]*t29238*(1.0/2.0);
                double t29240 = 1/pow(rho_b[index],8.0/3.0);
                double t29241 = gamma_bb[index]*t29240*(1.0/2.0);
                double t29242 = t29241+t29239;
                double t29243 = gcab*t29242;
                double t29244 = t29243+1.0;
                double t29245 = gcab*gcab;
                double t29246 = t29242*t29242;
                double t29247 = t29245*t29246;
                double t29248 = gcab*t29242*2.0;
                double t29249 = t29247+t29248+1.0;
                double t29250 = c0p*t29182*t29184*2.0;
                double t29251 = gx*gx;
                double t29252 = 1/pow(rho_a[index],1.6E1/3.0);
                double t29253 = gamma_aa[index]*gx*t29238;
                double t29254 = t29253+1.0;
                double t29255 = gamma_aa[index]*gamma_aa[index];
                double t29256 = gamma_aa[index]*gx*t29238*2.0;
                double t29257 = t29251*t29252*t29255;
                double t29258 = t29256+t29257+1.0;
                double t29259 = b1f*t29169;
                double t29260 = b3f*t29170;
                double t29261 = b4f*t29171*t29172;
                double t29262 = b2f*c*t29167;
                double t29263 = t29260+t29261+t29262+t29259;
                double t29264 = 1/t29263;
                double t29265 = t29191*t29264*(1.0/2.0);
                double t29266 = t29265+1.0;
                double t29267 = log(t29266);
                double t29268 = a1f*c*t29167;
                double t29269 = t29268+1.0;
                double t29270 = t29250-c0f*t29267*t29269*2.0;
                double t29271 = t29250-t29270*t29190*t29187;
                double t29272 = gcaa*gcaa;
                double t29273 = gamma_aa[index]*gcaa*t29238;
                double t29274 = t29273+1.0;
                double t29275 = gamma_aa[index]*gcaa*t29238*2.0;
                double t29276 = t29252*t29272*t29255;
                double t29277 = t29275+t29276+1.0;
                v_gamma_aa_[index] = (rho_a[index]*t29271+rho_b[index]*(t29208-t29190*t29187*(t29208-c0f*log((t29191* \
                   (1.0/2.0))/(b1f*t29194+b3f*t29195+b2f*c*t29192+b4f*t29171*t29196)+1.0)*(a1f*c*t29192+1.0)*2.0))-t29209* \
                   (t29226-t29231*t29232*t29190*t29237*(t29226-c0f*log((t29191*(1.0/2.0))/(b1f*t29212+b3f*t29213+b2f* \
                   c*t29210+b4f*t29214*t29171)+1.0)*(a1f*c*t29210+1.0)*2.0)+(Aa*t29190*t29237*log((1.0/2.0)/(Aa*(b1a* \
                   t29212+b3a*t29213+b2a*c*t29210+b4a*t29214*t29171))+1.0)*(t29231*t29232-1.0)*(a1a*c*t29210+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t29238*(1.0/2.0))/t29244-ccab2*t29245*t29246*1/(t29249*t29249)*(gcab*t29238+ \
                   t29242*t29245*t29238)-ccab1*t29242*1/(t29244*t29244)*t29245*t29238*(1.0/2.0)+(ccab2*t29242*t29245* \
                   t29238)/t29249)-rho_a[index]*t29271*((ccaa1*gcaa*t29238)/t29274-ccaa1*gamma_aa[index]*t29252*t29272* \
                   1/(t29274*t29274)+(ccaa2*gamma_aa[index]*t29252*t29272*2.0)/t29277-ccaa2*t29252*t29272*t29255*1/(t29277* \
                   t29277)*(gcaa*t29238*2.0+gamma_aa[index]*t29252*t29272*2.0))+c0*pow(rho_a[index],4.0/3.0)*((cx1*gx* \
                   t29238)/t29254-cx1*gamma_aa[index]*t29251*t29252*1/(t29254*t29254)+(cx2*gamma_aa[index]*t29251*t29252* \
                   2.0)/t29258-cx2*t29251*t29252*t29255*1/(t29258*t29258)*(gx*t29238*2.0+gamma_aa[index]*t29251*t29252* \
                   2.0));
            } else if (rho_a[index] > cutoff_) {
                double t31890 = 1/pow(rho_a[index],8.0/3.0);
                double t31891 = gx*gx;
                double t31892 = 1/pow(rho_a[index],1.6E1/3.0);
                double t31893 = gamma_aa[index]*gx*t31890;
                double t31894 = t31893+1.0;
                double t31895 = gamma_aa[index]*gamma_aa[index];
                double t31896 = gamma_aa[index]*gx*t31890*2.0;
                double t31897 = t31891*t31892*t31895;
                double t31898 = t31896+t31897+1.0;
                double t31899 = 1/pow(rho_a[index],1.0/3.0);
                double t31900 = c*t31899;
                double t31901 = sqrt(t31900);
                double t31902 = pow(t31900,3.0/2.0);
                double t31903 = c*c;
                double t31904 = 1/pow(rho_a[index],2.0/3.0);
                double t31905 = 1/c0p;
                double t31906 = b1p*t31901;
                double t31907 = b3p*t31902;
                double t31908 = b4p*t31903*t31904;
                double t31909 = b2p*c*t31899;
                double t31910 = t31906+t31907+t31908+t31909;
                double t31911 = 1/t31910;
                double t31912 = t31911*t31905*(1.0/2.0);
                double t31913 = t31912+1.0;
                double t31914 = log(t31913);
                double t31915 = a1p*c*t31899;
                double t31916 = t31915+1.0;
                double t31917 = gcaa*gcaa;
                double t31918 = gamma_aa[index]*gcaa*t31890;
                double t31919 = t31918+1.0;
                double t31920 = gamma_aa[index]*gcaa*t31890*2.0;
                double t31921 = t31917*t31892*t31895;
                double t31922 = t31920+t31921+1.0;
                v_gamma_aa_[index] = c0*pow(rho_a[index],4.0/3.0)*((cx1*gx*t31890)/t31894-cx1*gamma_aa[index]*t31891* \
                   t31892*1/(t31894*t31894)+(cx2*gamma_aa[index]*t31891*t31892*2.0)/t31898-cx2*t31891*t31892*t31895*1/ \
                   (t31898*t31898)*(gx*t31890*2.0+gamma_aa[index]*t31891*t31892*2.0))-rho_a[index]*(((pow(2.0,1.0/3.0) \
                   *2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t31901+b3f*t31902+b2f*c*t31899+b4f*t31903*t31904))+1.0)*(a1f* \
                   c*t31899+1.0)*2.0-c0p*t31914*t31916*2.0))/(two_13*2.0-2.0)+c0p*t31914*t31916*2.0)*((ccaa1*gcaa*t31890) \
                   /t31919+(ccaa2*gamma_aa[index]*t31917*t31892*2.0)/t31922-ccaa1*gamma_aa[index]*t31917*t31892*1/(t31919* \
                   t31919)-ccaa2*1/(t31922*t31922)*t31917*t31892*t31895*(gcaa*t31890*2.0+gamma_aa[index]*t31917*t31892* \
                   2.0));
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t29280 = 1/pow(rho_a[index],1.0/3.0);
                double t29281 = c*t29280;
                double t29282 = sqrt(t29281);
                double t29283 = pow(t29281,3.0/2.0);
                double t29284 = c*c;
                double t29285 = 1/pow(rho_a[index],2.0/3.0);
                double t29286 = 1/c0p;
                double t29287 = b1p*t29282;
                double t29288 = b3p*t29283;
                double t29289 = b4p*t29284*t29285;
                double t29290 = b2p*c*t29280;
                double t29291 = t29290+t29287+t29288+t29289;
                double t29292 = 1/t29291;
                double t29293 = t29292*t29286*(1.0/2.0);
                double t29294 = t29293+1.0;
                double t29295 = log(t29294);
                double t29296 = a1p*c*t29280;
                double t29297 = t29296+1.0;
                double t29298 = pow(2.0,1.0/3.0);
                double t29299 = t29298*2.0;
                double t29300 = t29299-2.0;
                double t29301 = two_13*2.0;
                double t29302 = t29301-2.0;
                double t29303 = 1/t29302;
                double t29304 = 1/c0f;
                double t29305 = 1/pow(rho_b[index],1.0/3.0);
                double t29306 = c*t29305;
                double t29307 = sqrt(t29306);
                double t29308 = pow(t29306,3.0/2.0);
                double t29309 = 1/pow(rho_b[index],2.0/3.0);
                double t29310 = b1p*t29307;
                double t29311 = b3p*t29308;
                double t29312 = b4p*t29309*t29284;
                double t29313 = b2p*c*t29305;
                double t29314 = t29310+t29311+t29312+t29313;
                double t29315 = 1/t29314;
                double t29316 = t29315*t29286*(1.0/2.0);
                double t29317 = t29316+1.0;
                double t29318 = log(t29317);
                double t29319 = a1p*c*t29305;
                double t29320 = t29319+1.0;
                double t29321 = c0p*t29320*t29318*2.0;
                double t29322 = rho_a[index]+rho_b[index];
                double t29323 = 1/pow(t29322,1.0/3.0);
                double t29324 = c*t29323;
                double t29325 = sqrt(t29324);
                double t29326 = pow(t29324,3.0/2.0);
                double t29327 = 1/pow(t29322,2.0/3.0);
                double t29328 = b1p*t29325;
                double t29329 = b3p*t29326;
                double t29330 = b4p*t29327*t29284;
                double t29331 = b2p*c*t29323;
                double t29332 = t29330+t29331+t29328+t29329;
                double t29333 = 1/t29332;
                double t29334 = t29333*t29286*(1.0/2.0);
                double t29335 = t29334+1.0;
                double t29336 = log(t29335);
                double t29337 = a1p*c*t29323;
                double t29338 = t29337+1.0;
                double t29339 = c0p*t29336*t29338*2.0;
                double t29340 = rho_a[index]-rho_b[index];
                double t29341 = t29340*t29340;
                double t29342 = 1/t29322;
                double t29343 = t29340*t29342;
                double t29344 = 1/(t29322*t29322*t29322*t29322);
                double t29345 = t29341*t29341;
                double t29346 = t29343+1.0;
                double t29347 = pow(t29346,4.0/3.0);
                double t29348 = -t29343+1.0;
                double t29349 = pow(t29348,4.0/3.0);
                double t29350 = t29347+t29349-2.0;
                double t29351 = 1/pow(rho_b[index],8.0/3.0);
                double t29352 = 1/pow(rho_a[index],8.0/3.0);
                double t29353 = gamma_aa[index]*t29352*(1.0/2.0);
                double t29354 = gamma_bb[index]*t29351*(1.0/2.0);
                double t29355 = t29353+t29354;
                double t29356 = gcab*t29355;
                double t29357 = t29356+1.0;
                double t29358 = gcab*gcab;
                double t29359 = t29355*t29355;
                double t29360 = t29358*t29359;
                double t29361 = gcab*t29355*2.0;
                double t29362 = t29360+t29361+1.0;
                double t29363 = c0p*t29295*t29297*2.0;
                double t29364 = gx*gx;
                double t29365 = 1/pow(rho_b[index],1.6E1/3.0);
                double t29366 = gamma_bb[index]*gx*t29351;
                double t29367 = t29366+1.0;
                double t29368 = gamma_bb[index]*gamma_bb[index];
                double t29369 = gamma_bb[index]*gx*t29351*2.0;
                double t29370 = t29364*t29365*t29368;
                double t29371 = t29370+t29369+1.0;
                double t29372 = b1f*t29307;
                double t29373 = b3f*t29308;
                double t29374 = b4f*t29309*t29284;
                double t29375 = b2f*c*t29305;
                double t29376 = t29372+t29373+t29374+t29375;
                double t29377 = 1/t29376;
                double t29378 = t29304*t29377*(1.0/2.0);
                double t29379 = t29378+1.0;
                double t29380 = log(t29379);
                double t29381 = a1f*c*t29305;
                double t29382 = t29381+1.0;
                double t29383 = t29321-c0f*t29380*t29382*2.0;
                double t29384 = t29321-t29300*t29303*t29383;
                double t29385 = gcaa*gcaa;
                double t29386 = gamma_bb[index]*gcaa*t29351;
                double t29387 = t29386+1.0;
                double t29388 = gamma_bb[index]*gcaa*t29351*2.0;
                double t29389 = t29365*t29385*t29368;
                double t29390 = t29388+t29389+1.0;
                v_gamma_bb_[index] = (rho_b[index]*t29384+rho_a[index]*(t29363-t29300*t29303*(t29363-c0f*log((t29304* \
                   (1.0/2.0))/(b1f*t29282+b3f*t29283+b2f*c*t29280+b4f*t29284*t29285)+1.0)*(a1f*c*t29280+1.0)*2.0))-t29322* \
                   (t29339-t29303*t29350*t29344*t29345*(t29339-c0f*log((t29304*(1.0/2.0))/(b1f*t29325+b3f*t29326+b2f* \
                   c*t29323+b4f*t29327*t29284)+1.0)*(a1f*c*t29323+1.0)*2.0)+(Aa*t29303*t29350*log((1.0/2.0)/(Aa*(b1a* \
                   t29325+b3a*t29326+b2a*c*t29323+b4a*t29327*t29284))+1.0)*(t29344*t29345-1.0)*(a1a*c*t29323+1.0)*2.0) \
                   /d2fz0))*((ccab1*gcab*t29351*(1.0/2.0))/t29357-ccab2*1/(t29362*t29362)*t29358*t29359*(gcab*t29351+ \
                   t29351*t29355*t29358)+(ccab2*t29351*t29355*t29358)/t29362-ccab1*t29351*t29355*1/(t29357*t29357)*t29358* \
                   (1.0/2.0))-rho_b[index]*t29384*((ccaa1*gcaa*t29351)/t29387+(ccaa2*gamma_bb[index]*t29365*t29385*2.0) \
                   /t29390-ccaa1*gamma_bb[index]*t29365*t29385*1/(t29387*t29387)-ccaa2*1/(t29390*t29390)*t29365*t29385* \
                   t29368*(gcaa*t29351*2.0+gamma_bb[index]*t29365*t29385*2.0))+c0*pow(rho_b[index],4.0/3.0)*((cx1*gx* \
                   t29351)/t29367-cx1*gamma_bb[index]*t29364*t29365*1/(t29367*t29367)+(cx2*gamma_bb[index]*t29364*t29365* \
                   2.0)/t29371-cx2*1/(t29371*t29371)*t29364*t29365*t29368*(gx*t29351*2.0+gamma_bb[index]*t29364*t29365* \
                   2.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t31481 = 1/pow(rho_b[index],8.0/3.0);
                double t31482 = gx*gx;
                double t31483 = 1/pow(rho_b[index],1.6E1/3.0);
                double t31484 = gamma_bb[index]*gx*t31481;
                double t31485 = t31484+1.0;
                double t31486 = gamma_bb[index]*gamma_bb[index];
                double t31487 = gamma_bb[index]*gx*t31481*2.0;
                double t31488 = t31482*t31483*t31486;
                double t31489 = t31487+t31488+1.0;
                double t31490 = 1/pow(rho_b[index],1.0/3.0);
                double t31491 = c*t31490;
                double t31492 = sqrt(t31491);
                double t31493 = pow(t31491,3.0/2.0);
                double t31494 = c*c;
                double t31495 = 1/pow(rho_b[index],2.0/3.0);
                double t31496 = 1/c0p;
                double t31497 = b1p*t31492;
                double t31498 = b3p*t31493;
                double t31499 = b4p*t31494*t31495;
                double t31500 = b2p*c*t31490;
                double t31501 = t31500+t31497+t31498+t31499;
                double t31502 = 1/t31501;
                double t31503 = t31502*t31496*(1.0/2.0);
                double t31504 = t31503+1.0;
                double t31505 = log(t31504);
                double t31506 = a1p*c*t31490;
                double t31507 = t31506+1.0;
                double t31508 = gcaa*gcaa;
                double t31509 = gamma_bb[index]*gcaa*t31481;
                double t31510 = t31509+1.0;
                double t31511 = gamma_bb[index]*gcaa*t31481*2.0;
                double t31512 = t31508*t31483*t31486;
                double t31513 = t31511+t31512+1.0;
                v_gamma_bb_[index] = c0*pow(rho_b[index],4.0/3.0)*((cx1*gx*t31481)/t31485-cx1*gamma_bb[index]*t31482* \
                   t31483*1/(t31485*t31485)+(cx2*gamma_bb[index]*t31482*t31483*2.0)/t31489-cx2*t31482*t31483*t31486*1/ \
                   (t31489*t31489)*(gx*t31481*2.0+gamma_bb[index]*t31482*t31483*2.0))-rho_b[index]*(((pow(2.0,1.0/3.0) \
                   *2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t31492+b3f*t31493+b2f*c*t31490+b4f*t31494*t31495))+1.0)*(a1f* \
                   c*t31490+1.0)*2.0-c0p*t31505*t31507*2.0))/(two_13*2.0-2.0)+c0p*t31505*t31507*2.0)*((ccaa1*gcaa*t31481) \
                   /t31510-ccaa1*gamma_bb[index]*1/(t31510*t31510)*t31508*t31483+(ccaa2*gamma_bb[index]*t31508*t31483* \
                   2.0)/t31513-ccaa2*1/(t31513*t31513)*t31508*t31483*t31486*(gcaa*t31481*2.0+gamma_bb[index]*t31508*t31483* \
                   2.0));
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t29394 = 1/pow(rho_a[index],1.0/3.0);
            double t29395 = c*t29394;
            double t29396 = sqrt(t29395);
            double t29397 = pow(t29395,3.0/2.0);
            double t29398 = c*c;
            double t29399 = 1/pow(rho_a[index],2.0/3.0);
            double t29400 = 1/c0p;
            double t29401 = b1p*t29396;
            double t29402 = b3p*t29397;
            double t29403 = b4p*t29398*t29399;
            double t29404 = b2p*c*t29394;
            double t29405 = t29401+t29402+t29403+t29404;
            double t29406 = 1/t29405;
            double t29407 = t29400*t29406*(1.0/2.0);
            double t29408 = t29407+1.0;
            double t29409 = log(t29408);
            double t29410 = a1p*c*t29394;
            double t29411 = t29410+1.0;
            double t29412 = 1/pow(rho_a[index],8.0/3.0);
            double t29413 = gamma_aa[index]*gamma_aa[index];
            double t29414 = gcaa*gcaa;
            double t29415 = 1/pow(rho_a[index],1.9E1/3.0);
            double t29416 = gamma_aa[index]*gcaa*t29412;
            double t29417 = t29416+1.0;
            double t29418 = 1/pow(rho_a[index],1.6E1/3.0);
            double t29419 = 1/pow(rho_a[index],1.1E1/3.0);
            double t29420 = gamma_aa[index]*gcaa*t29412*2.0;
            double t29421 = t29413*t29414*t29418;
            double t29422 = t29420+t29421+1.0;
            double t29425 = gamma_aa[index]*t29412*(1.0/2.0);
            double t29426 = 1/pow(rho_b[index],8.0/3.0);
            double t29427 = gamma_bb[index]*t29426*(1.0/2.0);
            double t29423 = t29425+t29427;
            double t29424 = gcab*gcab;
            double t29428 = t29423*t29423;
            double t29429 = rho_a[index]+rho_b[index];
            double t29430 = 1/pow(t29429,1.0/3.0);
            double t29431 = c*t29430;
            double t29432 = sqrt(t29431);
            double t29433 = b1p*t29432;
            double t29434 = pow(t29431,3.0/2.0);
            double t29435 = b3p*t29434;
            double t29436 = 1/pow(t29429,2.0/3.0);
            double t29437 = b4p*t29436*t29398;
            double t29438 = b2p*c*t29430;
            double t29439 = t29433+t29435+t29437+t29438;
            double t29440 = 1/pow(t29429,7.0/3.0);
            double t29441 = 1/pow(t29429,8.0/3.0);
            double t29442 = 1/sqrt(t29431);
            double t29443 = a1p*c*t29430;
            double t29444 = t29443+1.0;
            double t29445 = 1/t29439;
            double t29446 = t29400*t29445*(1.0/2.0);
            double t29447 = t29446+1.0;
            double t29448 = 1/t29447;
            double t29449 = 1/pow(t29429,4.0/3.0);
            double t29489 = 1/pow(t29429,5.0/3.0);
            double t29491 = b4p*t29398*t29489*(2.0/3.0);
            double t29492 = b2p*c*t29449*(1.0/3.0);
            double t29493 = b1p*c*t29442*t29449*(1.0/6.0);
            double t29494 = b3p*c*t29432*t29449*(1.0/2.0);
            double t29450 = t29491+t29492+t29493+t29494;
            double t29451 = two_13*2.0;
            double t29452 = t29451-2.0;
            double t29453 = 1/t29452;
            double t29454 = 1/c0f;
            double t29455 = rho_a[index]-rho_b[index];
            double t29456 = 1/t29429;
            double t29457 = t29455*t29456;
            double t29458 = b1f*t29432;
            double t29459 = b3f*t29434;
            double t29460 = b4f*t29436*t29398;
            double t29461 = b2f*c*t29430;
            double t29462 = t29460+t29461+t29458+t29459;
            double t29463 = 1/t29462;
            double t29464 = t29454*t29463*(1.0/2.0);
            double t29465 = t29464+1.0;
            double t29466 = log(t29465);
            double t29467 = a1f*c*t29430;
            double t29468 = t29467+1.0;
            double t29469 = log(t29447);
            double t29477 = c0f*t29466*t29468*2.0;
            double t29478 = c0p*t29444*t29469*2.0;
            double t29470 = t29477-t29478;
            double t29471 = t29455*t29455;
            double t29472 = t29457+1.0;
            double t29473 = pow(t29472,4.0/3.0);
            double t29474 = -t29457+1.0;
            double t29475 = pow(t29474,4.0/3.0);
            double t29476 = t29473+t29475-2.0;
            double t29479 = 1/(t29429*t29429);
            double t29483 = t29455*t29479;
            double t29480 = t29456-t29483;
            double t29481 = 1/(t29429*t29429*t29429*t29429);
            double t29482 = pow(t29472,1.0/3.0);
            double t29484 = t29480*t29482*(4.0/3.0);
            double t29485 = pow(t29474,1.0/3.0);
            double t29517 = t29480*t29485*(4.0/3.0);
            double t29486 = -t29517+t29484;
            double t29487 = 1/(t29429*t29429*t29429*t29429*t29429);
            double t29488 = t29471*t29471;
            double t29490 = 1/(t29439*t29439);
            double t29495 = 1/t29465;
            double t29496 = 1/(t29462*t29462);
            double t29497 = b4f*t29398*t29489*(2.0/3.0);
            double t29498 = b2f*c*t29449*(1.0/3.0);
            double t29499 = b1f*c*t29442*t29449*(1.0/6.0);
            double t29500 = b3f*c*t29432*t29449*(1.0/2.0);
            double t29501 = t29500+t29497+t29498+t29499;
            double t29502 = t29450*t29444*t29490*t29448;
            double t29503 = a1f*c*c0f*t29466*t29449*(2.0/3.0);
            double t29504 = t29450*t29450;
            double t29505 = 1/pow(t29431,3.0/2.0);
            double t29506 = b4p*t29441*t29398*(1.0E1/9.0);
            double t29507 = b2p*c*t29440*(4.0/9.0);
            double t29508 = b1p*c*t29440*t29442*(2.0/9.0);
            double t29509 = b3p*c*t29440*t29432*(2.0/3.0);
            double t29510 = b3p*t29441*t29442*t29398*(1.0/1.2E1);
            double t29511 = t29510+t29506+t29507+t29508+t29509-b1p*t29441*t29505*t29398*(1.0/3.6E1);
            double t29512 = 1/(t29439*t29439*t29439);
            double t29513 = t29512*t29504*t29444*t29448*2.0;
            double t29514 = t29501*t29501;
            double t29515 = 1/(t29447*t29447);
            double t29516 = 1/(t29439*t29439*t29439*t29439);
            double t29605 = t29501*t29468*t29495*t29496;
            double t29606 = a1p*c*c0p*t29449*t29469*(2.0/3.0);
            double t29518 = t29502+t29503-t29605-t29606;
            double t29519 = t29479*2.0;
            double t29520 = 1/(t29429*t29429*t29429);
            double t29538 = t29520*t29455*2.0;
            double t29521 = t29519-t29538;
            double t29522 = t29480*t29480;
            double t29523 = a1p*c*c0p*t29440*t29469*(8.0/9.0);
            double t29524 = 1/(t29429*t29429*t29429*t29429*t29429*t29429);
            double t29525 = 1/d2fz0;
            double t29526 = 1/Aa;
            double t29527 = b1a*t29432;
            double t29528 = b3a*t29434;
            double t29529 = b4a*t29436*t29398;
            double t29530 = b2a*c*t29430;
            double t29531 = t29530+t29527+t29528+t29529;
            double t29532 = 1/t29531;
            double t29533 = t29532*t29526*(1.0/2.0);
            double t29534 = t29533+1.0;
            double t29535 = log(t29534);
            double t29536 = a1a*c*t29430;
            double t29537 = t29536+1.0;
            double t29539 = t29521*t29485*(4.0/3.0);
            double t29540 = 1/pow(t29472,2.0/3.0);
            double t29541 = t29522*t29540*(4.0/9.0);
            double t29542 = 1/pow(t29474,2.0/3.0);
            double t29543 = t29522*t29542*(4.0/9.0);
            double t29544 = t29541+t29543+t29539-t29521*t29482*(4.0/3.0);
            double t29545 = t29487*t29488*4.0;
            double t29557 = t29471*t29481*t29455*4.0;
            double t29546 = t29545-t29557;
            double t29547 = 1/t29534;
            double t29548 = t29481*t29488;
            double t29549 = t29548-1.0;
            double t29550 = 1/(t29531*t29531);
            double t29551 = b4a*t29398*t29489*(2.0/3.0);
            double t29552 = b2a*c*t29449*(1.0/3.0);
            double t29553 = b1a*c*t29442*t29449*(1.0/6.0);
            double t29554 = b3a*c*t29432*t29449*(1.0/2.0);
            double t29555 = t29551+t29552+t29553+t29554;
            double t29556 = t29555*t29555;
            double t29558 = t29511*t29444*t29490*t29448;
            double t29559 = pow(2.0,1.0/3.0);
            double t29560 = t29559*2.0;
            double t29561 = t29560-2.0;
            double t29562 = a1f*c*t29394;
            double t29563 = t29562+1.0;
            double t29564 = b1f*t29396;
            double t29565 = b3f*t29397;
            double t29566 = b4f*t29398*t29399;
            double t29567 = b2f*c*t29394;
            double t29568 = t29564+t29565+t29566+t29567;
            double t29569 = 1/t29568;
            double t29570 = t29454*t29569*(1.0/2.0);
            double t29571 = t29570+1.0;
            double t29572 = 1/pow(rho_a[index],4.0/3.0);
            double t29574 = 1/pow(rho_a[index],5.0/3.0);
            double t29575 = 1/sqrt(t29395);
            double t29581 = b4f*t29574*t29398*(2.0/3.0);
            double t29582 = b2f*c*t29572*(1.0/3.0);
            double t29583 = b1f*c*t29572*t29575*(1.0/6.0);
            double t29584 = b3f*c*t29572*t29396*(1.0/2.0);
            double t29573 = t29581+t29582+t29583+t29584;
            double t29586 = b4p*t29574*t29398*(2.0/3.0);
            double t29587 = b2p*c*t29572*(1.0/3.0);
            double t29588 = b1p*c*t29572*t29575*(1.0/6.0);
            double t29589 = b3p*c*t29572*t29396*(1.0/2.0);
            double t29576 = t29586+t29587+t29588+t29589;
            double t29577 = 1/t29571;
            double t29578 = 1/pow(rho_a[index],7.0/3.0);
            double t29579 = 1/t29408;
            double t29580 = 1/pow(t29395,3.0/2.0);
            double t29585 = t29573*t29573;
            double t29590 = t29576*t29576;
            double t29591 = log(t29571);
            double t29592 = 1/(t29568*t29568);
            double t29593 = 1/(t29405*t29405);
            double t29594 = 1/(t29405*t29405*t29405);
            double t29595 = t29411*t29590*t29594*t29579*2.0;
            double t29596 = b4p*t29412*t29398*(1.0E1/9.0);
            double t29597 = b2p*c*t29578*(4.0/9.0);
            double t29598 = b3p*t29412*t29575*t29398*(1.0/1.2E1);
            double t29599 = b1p*c*t29575*t29578*(2.0/9.0);
            double t29600 = b3p*c*t29396*t29578*(2.0/3.0);
            double t29676 = b1p*t29412*t29580*t29398*(1.0/3.6E1);
            double t29601 = t29600-t29676+t29596+t29597+t29598+t29599;
            double t29602 = 1/(t29408*t29408);
            double t29603 = 1/(t29405*t29405*t29405*t29405);
            double t29604 = a1p*c*c0p*t29409*t29578*(8.0/9.0);
            double t29607 = t29400*t29504*t29515*t29444*t29516*(1.0/2.0);
            double t29608 = gcab*t29423;
            double t29609 = t29608+1.0;
            double t29610 = 1/t29609;
            double t29611 = t29424*t29428;
            double t29612 = gcab*t29423*2.0;
            double t29613 = t29611+t29612+1.0;
            double t29614 = 1/t29613;
            double t29615 = t29411*t29593*t29576*t29579;
            double t29616 = a1f*c*c0f*t29572*t29591*(2.0/3.0);
            double t29618 = a1p*c*c0p*t29409*t29572*(2.0/3.0);
            double t29621 = t29563*t29573*t29592*t29577;
            double t29617 = -t29621+t29615+t29616-t29618;
            double t29619 = c0f*t29563*t29591*2.0;
            double t29620 = c0p*t29411*t29409*2.0;
            double t29622 = 1/t29417;
            double t29623 = 1/t29422;
            double t29624 = t29620-t29619;
            double t29625 = t29453*t29561*t29624;
            double t29626 = 1/pow(rho_b[index],1.0/3.0);
            double t29627 = c*t29626;
            double t29628 = sqrt(t29627);
            double t29629 = pow(t29627,3.0/2.0);
            double t29630 = 1/pow(rho_b[index],2.0/3.0);
            double t29631 = b1p*t29628;
            double t29632 = b3p*t29629;
            double t29633 = b4p*t29630*t29398;
            double t29634 = b2p*c*t29626;
            double t29635 = t29631+t29632+t29633+t29634;
            double t29636 = 1/t29635;
            double t29637 = t29400*t29636*(1.0/2.0);
            double t29638 = t29637+1.0;
            double t29639 = log(t29638);
            double t29640 = a1p*c*t29626;
            double t29641 = t29640+1.0;
            double t29642 = c0p*t29641*t29639*2.0;
            double t29643 = t29470*t29453*t29481*t29476*t29488;
            double t29644 = Aa*t29453*t29525*t29535*t29537*t29476*t29549*2.0;
            double t29645 = 1/(t29609*t29609);
            double t29646 = 1/pow(rho_a[index],2.2E1/3.0);
            double t29647 = gamma_aa[index]*gcab*t29419*(8.0/3.0);
            double t29648 = gamma_aa[index]*t29423*t29424*t29419*(8.0/3.0);
            double t29649 = t29647+t29648;
            double t29650 = 1/pow(rho_a[index],1.4E1/3.0);
            double t29651 = 1/(t29613*t29613);
            double t29652 = gx*gx;
            double t29653 = gamma_aa[index]*gx*t29412;
            double t29654 = t29653+1.0;
            double t29659 = gamma_aa[index]*gx*t29419*(1.6E1/3.0);
            double t29660 = t29413*t29415*t29652*(1.6E1/3.0);
            double t29655 = t29660+t29659;
            double t29656 = gamma_aa[index]*gx*t29412*2.0;
            double t29657 = t29413*t29418*t29652;
            double t29658 = t29656+t29657+1.0;
            double t29661 = 1/(t29658*t29658);
            double t29662 = 1/t29654;
            double t29663 = 1/t29658;
            double t29664 = 1/(t29654*t29654);
            double t29665 = ccaa1*gamma_aa[index]*gcaa*t29412*t29622;
            double t29666 = ccaa2*t29413*t29414*t29623*t29418;
            double t29667 = ccaa0+t29665+t29666;
            double t29668 = 1/(t29568*t29568*t29568);
            double t29669 = b4f*t29412*t29398*(1.0E1/9.0);
            double t29670 = b2f*c*t29578*(4.0/9.0);
            double t29671 = b3f*t29412*t29575*t29398*(1.0/1.2E1);
            double t29672 = b1f*c*t29575*t29578*(2.0/9.0);
            double t29673 = b3f*c*t29396*t29578*(2.0/3.0);
            double t29674 = t29670+t29671+t29672+t29673+t29669-b1f*t29412*t29580*t29398*(1.0/3.6E1);
            double t29675 = t29563*t29592*t29674*t29577;
            double t29677 = t29411*t29601*t29593*t29579;
            double t29678 = 1/(t29571*t29571);
            double t29679 = 1/(t29568*t29568*t29568*t29568);
            double t29680 = t29454*t29563*t29585*t29678*t29679*(1.0/2.0);
            double t29681 = t29400*t29411*t29602*t29603*t29590*(1.0/2.0);
            double t29682 = a1f*c*t29572*t29573*t29592*t29577*(2.0/3.0);
            double t29683 = a1p*c*t29572*t29593*t29576*t29579*(2.0/3.0);
            double t29684 = t29620-t29625;
            double t29685 = 1/pow(rho_a[index],1.0E1);
            double t29686 = 1/(t29417*t29417);
            double t29687 = gamma_aa[index]*gcaa*t29419*(1.6E1/3.0);
            double t29688 = t29413*t29414*t29415*(1.6E1/3.0);
            double t29689 = t29687+t29688;
            double t29690 = 1/(t29422*t29422);
            double t29691 = t29621-t29615-t29616+t29618;
            double t29692 = t29453*t29561*t29691;
            double t29693 = t29615-t29618+t29692;
            double t29694 = ccaa1*gamma_aa[index]*gcaa*t29622*t29419*(8.0/3.0);
            double t29695 = ccaa2*t29413*t29414*t29415*t29623*(1.6E1/3.0);
            double t29696 = t29694+t29695-ccaa1*t29413*t29414*t29415*t29686*(8.0/3.0)-ccaa2*t29413*t29414*t29418* \
               t29690*t29689;
            v_rho_a_rho_a_[index] = t29693*t29667*-2.0+(ccab1*gamma_aa[index]*gcab*t29610*t29419*(4.0/3.0)-ccab2* \
               t29424*t29651*t29428*t29649+ccab2*gamma_aa[index]*t29423*t29424*t29614*t29419*(8.0/3.0)-ccab1*gamma_aa[index]* \
               t29423*t29424*t29419*t29645*(4.0/3.0))*(-t29620+t29625+t29643+t29644+t29478+rho_a[index]*(-t29615+ \
               t29618+t29453*t29561*t29617)+t29429*(t29502-t29606+t29470*t29453*t29481*t29486*t29488-t29453*t29481* \
               t29518*t29476*t29488-t29470*t29453*t29476*t29487*t29488*4.0+t29470*t29453*t29471*t29481*t29455*t29476* \
               4.0-Aa*t29453*t29525*t29535*t29537*t29546*t29476*2.0+Aa*t29453*t29525*t29535*t29537*t29486*t29549* \
               2.0+t29550*t29453*t29525*t29537*t29555*t29547*t29476*t29549-Aa*a1a*c*t29453*t29525*t29535*t29449*t29476* \
               t29549*(2.0/3.0)))*2.0+t29696*(t29620+t29453*t29561*(t29619-c0p*t29411*t29409*2.0))*2.0-(ccab0+ccab1* \
               gcab*t29610*t29423+ccab2*t29424*t29614*t29428)*(-t29429*(-t29513-t29523+t29607+t29558+t29453*t29481* \
               t29476*t29488*(t29513+t29523-t29607-t29558-t29514*1/(t29462*t29462*t29462)*t29468*t29495*2.0+t29468* \
               t29495*t29496*(b2f*c*t29440*(4.0/9.0)+b4f*t29441*t29398*(1.0E1/9.0)+b1f*c*t29440*t29442*(2.0/9.0)+ \
               b3f*c*t29440*t29432*(2.0/3.0)-b1f*t29441*t29505*t29398*(1.0/3.6E1)+b3f*t29441*t29442*t29398*(1.0/1.2E1) \
               )+t29514*1/(t29462*t29462*t29462*t29462)*t29454*1/(t29465*t29465)*t29468*(1.0/2.0)-a1f*c*c0f*t29440* \
               t29466*(8.0/9.0)+a1f*c*t29501*t29449*t29495*t29496*(2.0/3.0)-a1p*c*t29450*t29490*t29448*t29449*(2.0/ \
               3.0))-t29470*t29453*t29471*t29481*t29476*1.2E1-t29470*t29453*t29481*t29544*t29488-t29470*t29524*t29453* \
               t29476*t29488*2.0E1+t29453*t29481*t29518*t29486*t29488*2.0+t29470*t29453*t29486*t29487*t29488*8.0- \
               t29453*t29518*t29476*t29487*t29488*8.0-t29470*t29453*t29471*t29481*t29455*t29486*8.0+t29453*t29471* \
               t29481*t29455*t29518*t29476*8.0+t29470*t29453*t29471*t29455*t29476*t29487*3.2E1+a1p*c*t29450*t29490* \
               t29448*t29449*(2.0/3.0)-Aa*t29453*t29525*t29535*t29544*t29537*t29549*2.0+Aa*t29453*t29525*t29535*t29537* \
               t29546*t29486*4.0-Aa*t29453*t29525*t29535*t29537*t29476*(t29471*t29481*1.2E1+t29524*t29488*2.0E1-t29471* \
               t29455*t29487*3.2E1)*2.0+t29550*t29453*t29525*t29537*t29546*t29555*t29547*t29476*2.0-t29550*t29453* \
               t29525*t29537*t29555*t29547*t29486*t29549*2.0-1/(t29531*t29531*t29531)*t29453*t29525*t29537*t29547* \
               t29556*t29476*t29549*2.0+t29550*t29453*t29525*t29537*t29547*t29476*t29549*(b2a*c*t29440*(4.0/9.0)+ \
               b4a*t29441*t29398*(1.0E1/9.0)+b1a*c*t29440*t29442*(2.0/9.0)+b3a*c*t29440*t29432*(2.0/3.0)-b1a*t29441* \
               t29505*t29398*(1.0/3.6E1)+b3a*t29441*t29442*t29398*(1.0/1.2E1))-Aa*a1a*c*t29440*t29453*t29525*t29535* \
               t29476*t29549*(8.0/9.0)-Aa*a1a*c*t29453*t29525*t29535*t29546*t29449*t29476*(4.0/3.0)+Aa*a1a*c*t29453* \
               t29525*t29535*t29449*t29486*t29549*(4.0/3.0)+1/(t29531*t29531*t29531*t29531)*t29453*t29525*1/(t29534* \
               t29534)*t29526*t29537*t29556*t29476*t29549*(1.0/2.0)+a1a*c*t29550*t29453*t29525*t29555*t29547*t29449* \
               t29476*t29549*(2.0/3.0))+rho_a[index]*(-t29604+t29681+t29683-t29595+t29677+t29453*t29561*(t29604+t29680+ \
               t29682+t29675+t29595-t29411*t29601*t29593*t29579-t29563*t29585*t29577*t29668*2.0-a1f*c*c0f*t29591* \
               t29578*(8.0/9.0)-t29400*t29411*t29602*t29603*t29590*(1.0/2.0)-a1p*c*t29572*t29593*t29576*t29579*(2.0/ \
               3.0)))+t29453*t29561*t29617*2.0+t29450*t29444*t29490*t29448*2.0-t29411*t29593*t29576*t29579*2.0+a1p* \
               c*c0p*t29409*t29572*(4.0/3.0)-a1p*c*c0p*t29449*t29469*(4.0/3.0)+t29470*t29453*t29481*t29486*t29488* \
               2.0-t29453*t29481*t29518*t29476*t29488*2.0-t29470*t29453*t29476*t29487*t29488*8.0+t29470*t29453*t29471* \
               t29481*t29455*t29476*8.0-Aa*t29453*t29525*t29535*t29537*t29546*t29476*4.0+Aa*t29453*t29525*t29535* \
               t29537*t29486*t29549*4.0+t29550*t29453*t29525*t29537*t29555*t29547*t29476*t29549*2.0-Aa*a1a*c*t29453* \
               t29525*t29535*t29449*t29476*t29549*(4.0/3.0))+(rho_a[index]*t29684+rho_b[index]*(t29642-t29453*t29561* \
               (t29642-c0f*log((t29454*(1.0/2.0))/(b1f*t29628+b3f*t29629+b2f*c*t29626+b4f*t29630*t29398)+1.0)*(a1f* \
               c*t29626+1.0)*2.0))-t29429*(t29643+t29644+t29478))*(-ccab2*t29424*t29651*t29428*(gamma_aa[index]*gcab* \
               t29650*(8.8E1/9.0)+t29413*t29424*t29646*(3.2E1/9.0)+gamma_aa[index]*t29423*t29424*t29650*(8.8E1/9.0) \
               )+ccab2*t29424*1/(t29613*t29613*t29613)*t29428*(t29649*t29649)*2.0+ccab1*gamma_aa[index]*gcab*t29610* \
               t29650*(4.4E1/9.0)+ccab2*t29413*t29424*t29614*t29646*(3.2E1/9.0)-ccab1*t29413*t29424*t29645*t29646* \
               (3.2E1/9.0)+ccab2*gamma_aa[index]*t29423*t29424*t29614*t29650*(8.8E1/9.0)-ccab1*gamma_aa[index]*t29423* \
               t29424*t29650*t29645*(4.4E1/9.0)-ccab2*gamma_aa[index]*t29423*t29424*t29651*t29419*t29649*(1.6E1/3.0) \
               +ccab1*gcab*t29413*t29423*t29424*1/(t29609*t29609*t29609)*t29646*(3.2E1/9.0))+c0*t29399*(cx0+cx1*gamma_aa[index]* \
               gx*t29412*t29662+cx2*t29413*t29418*t29652*t29663)*(4.0/9.0)-rho_a[index]*t29684*(ccaa1*gamma_aa[index]* \
               gcaa*t29622*t29650*(8.8E1/9.0)+ccaa2*t29413*t29414*t29623*t29646*(3.04E2/9.0)-ccaa1*t29413*t29414* \
               t29646*t29686*2.4E1-ccaa2*t29413*t29414*t29415*t29690*t29689*(3.2E1/3.0)-ccaa2*t29413*t29414*t29418* \
               t29690*(gamma_aa[index]*gcaa*t29650*(1.76E2/9.0)+t29413*t29414*t29646*(3.04E2/9.0))+ccaa2*t29413*1/ \
               (t29422*t29422*t29422)*t29414*t29418*(t29689*t29689)*2.0+ccaa1*gamma_aa[index]*gcaa*t29413*t29414* \
               1/(t29417*t29417*t29417)*t29685*(1.28E2/9.0))+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx* \
               t29650*t29662*(8.8E1/9.0)-cx1*t29413*t29652*t29646*t29664*2.4E1+cx2*t29413*t29652*t29663*t29646*(3.04E2/ \
               9.0)-cx2*t29413*t29415*t29652*t29661*t29655*(3.2E1/3.0)-cx2*t29413*t29418*t29652*t29661*(gamma_aa[index]* \
               gx*t29650*(1.76E2/9.0)+t29413*t29652*t29646*(3.04E2/9.0))+cx2*t29413*t29418*t29652*(t29655*t29655) \
               *1/(t29658*t29658*t29658)*2.0+cx1*gamma_aa[index]*gx*t29413*t29652*1/(t29654*t29654*t29654)*t29685* \
               (1.28E2/9.0))-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t29419*t29662*(8.0/3.0)-cx1*t29413* \
               t29415*t29652*t29664*(8.0/3.0)+cx2*t29413*t29415*t29652*t29663*(1.6E1/3.0)-cx2*t29413*t29418*t29652* \
               t29661*t29655)*(8.0/3.0)+rho_a[index]*t29667*(-t29604+t29681+t29683-t29595+t29677+t29453*t29561*(t29604+ \
               t29680-t29681+t29682-t29683+t29675+t29595-t29677-t29563*t29585*t29577*t29668*2.0-a1f*c*c0f*t29591* \
               t29578*(8.0/9.0)))+rho_a[index]*t29693*t29696*2.0;
        } else if (rho_a[index] > cutoff_) {
            double t31928 = 1/pow(rho_a[index],1.0/3.0);
            double t31929 = c*t31928;
            double t31930 = sqrt(t31929);
            double t31931 = pow(t31929,3.0/2.0);
            double t31932 = c*c;
            double t31933 = 1/pow(rho_a[index],2.0/3.0);
            double t31934 = 1/c0p;
            double t31935 = b1p*t31930;
            double t31936 = b3p*t31931;
            double t31937 = b4p*t31932*t31933;
            double t31938 = b2p*c*t31928;
            double t31939 = t31935+t31936+t31937+t31938;
            double t31940 = 1/t31939;
            double t31941 = t31940*t31934*(1.0/2.0);
            double t31942 = t31941+1.0;
            double t31943 = log(t31942);
            double t31944 = a1p*c*t31928;
            double t31945 = t31944+1.0;
            double t31946 = 1/pow(rho_a[index],8.0/3.0);
            double t31947 = gamma_aa[index]*gamma_aa[index];
            double t31948 = gcaa*gcaa;
            double t31949 = 1/pow(rho_a[index],1.9E1/3.0);
            double t31950 = gamma_aa[index]*gcaa*t31946;
            double t31951 = t31950+1.0;
            double t31952 = 1/pow(rho_a[index],1.6E1/3.0);
            double t31953 = 1/pow(rho_a[index],1.1E1/3.0);
            double t31954 = gamma_aa[index]*gcaa*t31946*2.0;
            double t31955 = t31952*t31947*t31948;
            double t31956 = t31954+t31955+1.0;
            double t31957 = pow(2.0,1.0/3.0);
            double t31958 = t31957*2.0;
            double t31959 = t31958-2.0;
            double t31960 = two_13*2.0;
            double t31961 = t31960-2.0;
            double t31962 = 1/t31961;
            double t31963 = a1f*c*t31928;
            double t31964 = t31963+1.0;
            double t31965 = 1/c0f;
            double t31966 = b1f*t31930;
            double t31967 = b3f*t31931;
            double t31968 = b4f*t31932*t31933;
            double t31969 = b2f*c*t31928;
            double t31970 = t31966+t31967+t31968+t31969;
            double t31971 = 1/t31970;
            double t31972 = t31971*t31965*(1.0/2.0);
            double t31973 = t31972+1.0;
            double t31974 = 1/pow(rho_a[index],4.0/3.0);
            double t31975 = 1/pow(rho_a[index],5.0/3.0);
            double t31976 = 1/sqrt(t31929);
            double t31977 = log(t31973);
            double t31978 = 1/t31942;
            double t31979 = 1/(t31939*t31939);
            double t31980 = b4p*t31932*t31975*(2.0/3.0);
            double t31981 = b2p*c*t31974*(1.0/3.0);
            double t31982 = b1p*c*t31974*t31976*(1.0/6.0);
            double t31983 = b3p*c*t31930*t31974*(1.0/2.0);
            double t31984 = t31980+t31981+t31982+t31983;
            double t31985 = t31945*t31984*t31978*t31979;
            double t31986 = 1/t31951;
            double t31987 = 1/t31956;
            double t31988 = gx*gx;
            double t31989 = gamma_aa[index]*gx*t31946;
            double t31990 = t31989+1.0;
            double t31991 = 1/pow(rho_a[index],2.2E1/3.0);
            double t31996 = gamma_aa[index]*gx*t31953*(1.6E1/3.0);
            double t31997 = t31947*t31949*t31988*(1.6E1/3.0);
            double t31992 = t31996+t31997;
            double t31993 = gamma_aa[index]*gx*t31946*2.0;
            double t31994 = t31952*t31947*t31988;
            double t31995 = t31993+t31994+1.0;
            double t31998 = 1/pow(rho_a[index],1.4E1/3.0);
            double t31999 = 1/(t31995*t31995);
            double t32000 = 1/t31990;
            double t32001 = 1/t31995;
            double t32002 = 1/(t31990*t31990);
            double t32003 = ccaa1*gamma_aa[index]*gcaa*t31946*t31986;
            double t32004 = ccaa2*t31952*t31947*t31948*t31987;
            double t32005 = ccaa0+t32003+t32004;
            double t32006 = 1/t31973;
            double t32007 = b4f*t31932*t31975*(2.0/3.0);
            double t32008 = b2f*c*t31974*(1.0/3.0);
            double t32009 = b1f*c*t31974*t31976*(1.0/6.0);
            double t32010 = b3f*c*t31930*t31974*(1.0/2.0);
            double t32011 = t32010+t32007+t32008+t32009;
            double t32012 = 1/(t31970*t31970);
            double t32013 = 1/pow(rho_a[index],7.0/3.0);
            double t32014 = 1/pow(t31929,3.0/2.0);
            double t32015 = t32011*t32011;
            double t32016 = t31984*t31984;
            double t32017 = 1/(t31939*t31939*t31939);
            double t32018 = t31945*t31978*t32016*t32017*2.0;
            double t32019 = b4p*t31932*t31946*(1.0E1/9.0);
            double t32020 = b2p*c*t32013*(4.0/9.0);
            double t32021 = b3p*t31932*t31946*t31976*(1.0/1.2E1);
            double t32022 = b1p*c*t31976*t32013*(2.0/9.0);
            double t32023 = b3p*c*t31930*t32013*(2.0/3.0);
            double t32024 = t32020+t32021+t32022+t32023+t32019-b1p*t31932*t31946*t32014*(1.0/3.6E1);
            double t32025 = 1/(t31942*t31942);
            double t32026 = 1/(t31939*t31939*t31939*t31939);
            double t32027 = a1p*c*c0p*t31943*t32013*(8.0/9.0);
            double t32028 = c0f*t31964*t31977*2.0;
            double t32029 = c0p*t31943*t31945*2.0;
            double t32030 = 1/pow(rho_a[index],1.0E1);
            double t32031 = 1/(t31951*t31951);
            double t32032 = gamma_aa[index]*gcaa*t31953*(1.6E1/3.0);
            double t32033 = t31947*t31948*t31949*(1.6E1/3.0);
            double t32034 = t32032+t32033;
            double t32035 = 1/(t31956*t31956);
            double t32036 = a1f*c*c0f*t31974*t31977*(2.0/3.0);
            double t32037 = a1p*c*c0p*t31943*t31974*(2.0/3.0);
            double t32038 = ccaa1*gamma_aa[index]*gcaa*t31953*t31986*(8.0/3.0);
            double t32039 = ccaa2*t31947*t31948*t31949*t31987*(1.6E1/3.0);
            double t32040 = t32038+t32039-ccaa1*t31947*t31948*t31949*t32031*(8.0/3.0)-ccaa2*t31952*t31947*t31948* \
               t32034*t32035;
            v_rho_a_rho_a_[index] = t32040*(t32029+t31962*t31959*(t32028-c0p*t31943*t31945*2.0))*2.0+t32005*(- \
               t31985+t32037+t31962*t31959*(t31985+t32036-t31964*t32011*t32012*t32006-a1p*c*c0p*t31943*t31974*(2.0/ \
               3.0)))*2.0+c0*t31933*(cx0+cx1*gamma_aa[index]*gx*t31946*t32000+cx2*t31952*t31947*t31988*t32001)*(4.0/ \
               9.0)-rho_a[index]*(t32029+t31962*t31959*(t32028-t32029))*(ccaa1*gamma_aa[index]*gcaa*t31986*t31998* \
               (8.8E1/9.0)+ccaa2*t31991*t31947*t31948*t31987*(3.04E2/9.0)-ccaa1*t31991*t31947*t31948*t32031*2.4E1- \
               ccaa2*t31947*t31948*t31949*t32034*t32035*(3.2E1/3.0)-ccaa2*t31952*t31947*t31948*t32035*(gamma_aa[index]* \
               gcaa*t31998*(1.76E2/9.0)+t31991*t31947*t31948*(3.04E2/9.0))+ccaa2*t31952*t31947*1/(t31956*t31956*t31956) \
               *t31948*(t32034*t32034)*2.0+ccaa1*gamma_aa[index]*gcaa*1/(t31951*t31951*t31951)*t31947*t31948*t32030* \
               (1.28E2/9.0))+c0*pow(rho_a[index],4.0/3.0)*(cx1*gamma_aa[index]*gx*t31998*t32000*(8.8E1/9.0)-cx1*t31991* \
               t31947*t31988*t32002*2.4E1+cx2*t31991*t31947*t31988*t32001*(3.04E2/9.0)-cx2*t31947*t31992*t31949*t31988* \
               t31999*(3.2E1/3.0)-cx2*t31952*t31947*t31988*t31999*(gamma_aa[index]*gx*t31998*(1.76E2/9.0)+t31991* \
               t31947*t31988*(3.04E2/9.0))+cx2*t31952*t31947*(t31992*t31992)*1/(t31995*t31995*t31995)*t31988*2.0+ \
               cx1*gamma_aa[index]*gx*1/(t31990*t31990*t31990)*t31947*t31988*t32030*(1.28E2/9.0))+rho_a[index]*t32005* \
               (-t32018-t32027+t31962*t31959*(t32018+t32027-t31945*t31978*t31979*t32024-1/(t31970*t31970*t31970)* \
               t31964*t32006*t32015*2.0+t31964*t32012*t32006*(b2f*c*t32013*(4.0/9.0)+b4f*t31932*t31946*(1.0E1/9.0) \
               +b1f*c*t31976*t32013*(2.0/9.0)+b3f*c*t31930*t32013*(2.0/3.0)-b1f*t31932*t31946*t32014*(1.0/3.6E1)+ \
               b3f*t31932*t31946*t31976*(1.0/1.2E1))+1/(t31970*t31970*t31970*t31970)*t31964*1/(t31973*t31973)*t31965* \
               t32015*(1.0/2.0)-a1f*c*c0f*t31977*t32013*(8.0/9.0)-t31934*t31945*t32016*t32025*t32026*(1.0/2.0)+a1f* \
               c*t31974*t32011*t32012*t32006*(2.0/3.0)-a1p*c*t31974*t31984*t31978*t31979*(2.0/3.0))+t31945*t31978* \
               t31979*t32024+t31934*t31945*t32016*t32025*t32026*(1.0/2.0)+a1p*c*t31974*t31984*t31978*t31979*(2.0/ \
               3.0))-rho_a[index]*t32040*(-t31985+t32037+t31962*t31959*(t31985+t32036-t32037-t31964*t32011*t32012* \
               t32006))*2.0-c0*pow(rho_a[index],1.0/3.0)*(cx1*gamma_aa[index]*gx*t31953*t32000*(8.0/3.0)-cx1*t31947* \
               t31949*t31988*t32002*(8.0/3.0)+cx2*t31947*t31949*t31988*t32001*(1.6E1/3.0)-cx2*t31952*t31947*t31992* \
               t31988*t31999)*(8.0/3.0);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t29698 = 1/pow(rho_a[index],1.0/3.0);
            double t29699 = c*t29698;
            double t29700 = sqrt(t29699);
            double t29701 = pow(t29699,3.0/2.0);
            double t29702 = c*c;
            double t29703 = 1/pow(rho_a[index],2.0/3.0);
            double t29704 = 1/c0p;
            double t29705 = b1p*t29700;
            double t29706 = b3p*t29701;
            double t29707 = b4p*t29702*t29703;
            double t29708 = b2p*c*t29698;
            double t29709 = t29705+t29706+t29707+t29708;
            double t29710 = 1/t29709;
            double t29711 = t29710*t29704*(1.0/2.0);
            double t29712 = t29711+1.0;
            double t29713 = log(t29712);
            double t29714 = a1p*c*t29698;
            double t29715 = t29714+1.0;
            double t29716 = pow(2.0,1.0/3.0);
            double t29717 = t29716*2.0;
            double t29718 = t29717-2.0;
            double t29719 = two_13*2.0;
            double t29720 = t29719-2.0;
            double t29721 = 1/t29720;
            double t29722 = 1/c0f;
            double t29723 = 1/pow(rho_b[index],1.0/3.0);
            double t29724 = c*t29723;
            double t29725 = sqrt(t29724);
            double t29726 = pow(t29724,3.0/2.0);
            double t29727 = 1/pow(rho_b[index],2.0/3.0);
            double t29728 = b1p*t29725;
            double t29729 = b3p*t29726;
            double t29730 = b4p*t29702*t29727;
            double t29731 = b2p*c*t29723;
            double t29732 = t29730+t29731+t29728+t29729;
            double t29733 = 1/t29732;
            double t29734 = t29704*t29733*(1.0/2.0);
            double t29735 = t29734+1.0;
            double t29736 = log(t29735);
            double t29737 = a1p*c*t29723;
            double t29738 = t29737+1.0;
            double t29739 = c0p*t29736*t29738*2.0;
            double t29740 = rho_a[index]+rho_b[index];
            double t29741 = 1/pow(t29740,1.0/3.0);
            double t29742 = c*t29741;
            double t29743 = sqrt(t29742);
            double t29744 = pow(t29742,3.0/2.0);
            double t29745 = 1/pow(t29740,2.0/3.0);
            double t29746 = b1p*t29743;
            double t29747 = b3p*t29744;
            double t29748 = b4p*t29702*t29745;
            double t29749 = b2p*c*t29741;
            double t29750 = t29746+t29747+t29748+t29749;
            double t29751 = 1/t29750;
            double t29752 = t29704*t29751*(1.0/2.0);
            double t29753 = t29752+1.0;
            double t29754 = log(t29753);
            double t29755 = a1p*c*t29741;
            double t29756 = t29755+1.0;
            double t29757 = c0p*t29754*t29756*2.0;
            double t29758 = rho_a[index]-rho_b[index];
            double t29759 = t29758*t29758;
            double t29760 = 1/t29740;
            double t29761 = t29760*t29758;
            double t29762 = 1/(t29740*t29740*t29740*t29740);
            double t29763 = t29759*t29759;
            double t29764 = t29761+1.0;
            double t29765 = pow(t29764,4.0/3.0);
            double t29766 = -t29761+1.0;
            double t29767 = pow(t29766,4.0/3.0);
            double t29768 = t29765+t29767-2.0;
            double t29769 = gcab*gcab;
            double t29770 = 1/pow(rho_a[index],1.1E1/3.0);
            double t29771 = 1/pow(rho_b[index],1.1E1/3.0);
            double t29772 = 1/pow(rho_a[index],8.0/3.0);
            double t29773 = gamma_aa[index]*t29772*(1.0/2.0);
            double t29774 = 1/pow(rho_b[index],8.0/3.0);
            double t29775 = gamma_bb[index]*t29774*(1.0/2.0);
            double t29776 = t29773+t29775;
            double t29777 = t29776*t29776;
            double t29778 = t29777*t29769;
            double t29779 = gcab*t29776*2.0;
            double t29780 = t29778+t29779+1.0;
            double t29781 = gamma_aa[index]*gcab*t29770*(8.0/3.0);
            double t29782 = gamma_aa[index]*t29770*t29776*t29769*(8.0/3.0);
            double t29783 = t29781+t29782;
            double t29784 = gamma_bb[index]*gcab*t29771*(8.0/3.0);
            double t29785 = gamma_bb[index]*t29771*t29776*t29769*(8.0/3.0);
            double t29786 = t29784+t29785;
            double t29787 = 1/(t29780*t29780);
            double t29788 = gcab*t29776;
            double t29789 = t29788+1.0;
            double t29790 = 1/(t29789*t29789);
            double t29791 = 1/t29780;
            double t29792 = 1/pow(t29740,4.0/3.0);
            double t29793 = b1f*t29743;
            double t29794 = b3f*t29744;
            double t29795 = b4f*t29702*t29745;
            double t29796 = b2f*c*t29741;
            double t29797 = t29793+t29794+t29795+t29796;
            double t29798 = 1/t29797;
            double t29799 = t29722*t29798*(1.0/2.0);
            double t29800 = t29799+1.0;
            double t29801 = log(t29800);
            double t29802 = a1f*c*t29741;
            double t29803 = t29802+1.0;
            double t29805 = c0f*t29801*t29803*2.0;
            double t29804 = -t29805+t29757;
            double t29806 = 1/(t29740*t29740);
            double t29834 = t29806*t29758;
            double t29807 = t29760-t29834;
            double t29808 = t29805-t29757;
            double t29809 = 1/pow(t29740,5.0/3.0);
            double t29810 = 1/sqrt(t29742);
            double t29811 = 1/t29753;
            double t29812 = 1/(t29750*t29750);
            double t29813 = b4p*t29702*t29809*(2.0/3.0);
            double t29814 = b2p*c*t29792*(1.0/3.0);
            double t29815 = b1p*c*t29810*t29792*(1.0/6.0);
            double t29816 = b3p*c*t29743*t29792*(1.0/2.0);
            double t29817 = t29813+t29814+t29815+t29816;
            double t29818 = t29811*t29812*t29817*t29756;
            double t29819 = 1/d2fz0;
            double t29820 = 1/Aa;
            double t29821 = b1a*t29743;
            double t29822 = b3a*t29744;
            double t29823 = b4a*t29702*t29745;
            double t29824 = b2a*c*t29741;
            double t29825 = t29821+t29822+t29823+t29824;
            double t29826 = 1/t29825;
            double t29827 = t29820*t29826*(1.0/2.0);
            double t29828 = t29827+1.0;
            double t29829 = log(t29828);
            double t29830 = a1a*c*t29741;
            double t29831 = t29830+1.0;
            double t29832 = 1/(t29740*t29740*t29740*t29740*t29740);
            double t29833 = pow(t29764,1.0/3.0);
            double t29835 = t29833*t29807*(4.0/3.0);
            double t29836 = pow(t29766,1.0/3.0);
            double t29915 = t29807*t29836*(4.0/3.0);
            double t29837 = -t29915+t29835;
            double t29838 = t29762*t29763;
            double t29839 = t29838-1.0;
            double t29840 = a1f*c*t29698;
            double t29841 = t29840+1.0;
            double t29842 = b1f*t29700;
            double t29843 = b3f*t29701;
            double t29844 = b4f*t29702*t29703;
            double t29845 = b2f*c*t29698;
            double t29846 = t29842+t29843+t29844+t29845;
            double t29847 = 1/t29846;
            double t29848 = t29722*t29847*(1.0/2.0);
            double t29849 = t29848+1.0;
            double t29850 = 1/pow(rho_a[index],4.0/3.0);
            double t29851 = 1/pow(rho_a[index],5.0/3.0);
            double t29852 = 1/sqrt(t29699);
            double t29853 = log(t29849);
            double t29854 = 1/t29712;
            double t29855 = 1/(t29709*t29709);
            double t29856 = b4p*t29702*t29851*(2.0/3.0);
            double t29857 = b2p*c*t29850*(1.0/3.0);
            double t29858 = b1p*c*t29850*t29852*(1.0/6.0);
            double t29859 = b3p*c*t29700*t29850*(1.0/2.0);
            double t29860 = t29856+t29857+t29858+t29859;
            double t29861 = t29715*t29860*t29854*t29855;
            double t29862 = c0f*t29841*t29853*2.0;
            double t29863 = c0p*t29713*t29715*2.0;
            double t29864 = Aa*t29721*t29831*t29819*t29829*t29839*t29768*2.0;
            double t29865 = 1/t29789;
            double t29866 = t29721*t29832*t29763*t29808*t29768*4.0;
            double t29867 = t29760+t29834;
            double t29868 = 1/t29800;
            double t29869 = 1/(t29797*t29797);
            double t29870 = b4f*t29702*t29809*(2.0/3.0);
            double t29871 = b2f*c*t29792*(1.0/3.0);
            double t29872 = b1f*c*t29810*t29792*(1.0/6.0);
            double t29873 = b3f*c*t29743*t29792*(1.0/2.0);
            double t29874 = t29870+t29871+t29872+t29873;
            double t29875 = a1f*c*c0f*t29801*t29792*(2.0/3.0);
            double t29876 = a1p*c*c0p*t29754*t29792*(2.0/3.0);
            double t29877 = t29832*t29763*4.0;
            double t29878 = t29833*t29867*(4.0/3.0);
            double t29914 = t29836*t29867*(4.0/3.0);
            double t29879 = -t29914+t29878;
            double t29880 = 1/t29828;
            double t29881 = 1/(t29825*t29825);
            double t29882 = b4a*t29702*t29809*(2.0/3.0);
            double t29883 = b2a*c*t29792*(1.0/3.0);
            double t29884 = b1a*c*t29810*t29792*(1.0/6.0);
            double t29885 = b3a*c*t29743*t29792*(1.0/2.0);
            double t29886 = t29882+t29883+t29884+t29885;
            double t29887 = Aa*a1a*c*t29721*t29792*t29819*t29829*t29839*t29768*(2.0/3.0);
            double t29888 = a1f*c*t29723;
            double t29889 = t29888+1.0;
            double t29890 = b1f*t29725;
            double t29891 = b3f*t29726;
            double t29892 = b4f*t29702*t29727;
            double t29893 = b2f*c*t29723;
            double t29894 = t29890+t29891+t29892+t29893;
            double t29895 = 1/t29894;
            double t29896 = t29722*t29895*(1.0/2.0);
            double t29897 = t29896+1.0;
            double t29898 = 1/pow(rho_b[index],4.0/3.0);
            double t29899 = 1/pow(rho_b[index],5.0/3.0);
            double t29900 = 1/sqrt(t29724);
            double t29901 = log(t29897);
            double t29902 = 1/t29735;
            double t29903 = 1/(t29732*t29732);
            double t29904 = b4p*t29702*t29899*(2.0/3.0);
            double t29905 = b2p*c*t29898*(1.0/3.0);
            double t29906 = b1p*c*t29900*t29898*(1.0/6.0);
            double t29907 = b3p*c*t29725*t29898*(1.0/2.0);
            double t29908 = t29904+t29905+t29906+t29907;
            double t29909 = t29902*t29903*t29908*t29738;
            double t29910 = t29739-c0f*t29901*t29889*2.0;
            double t29911 = t29721*t29762*t29763*t29808*t29768;
            double t29912 = 1/pow(t29740,7.0/3.0);
            double t29913 = 1/pow(t29740,8.0/3.0);
            double t29931 = t29803*t29874*t29868*t29869;
            double t29916 = -t29931+t29818+t29875-t29876;
            double t29917 = t29817*t29817;
            double t29918 = 1/pow(t29742,3.0/2.0);
            double t29919 = b4p*t29702*t29913*(1.0E1/9.0);
            double t29920 = b2p*c*t29912*(4.0/9.0);
            double t29921 = b1p*c*t29810*t29912*(2.0/9.0);
            double t29922 = b3p*c*t29912*t29743*(2.0/3.0);
            double t29923 = b3p*t29702*t29810*t29913*(1.0/1.2E1);
            double t29924 = t29920+t29921+t29922+t29923+t29919-b1p*t29702*t29913*t29918*(1.0/3.6E1);
            double t29925 = t29811*t29812*t29924*t29756;
            double t29926 = 1/(t29750*t29750*t29750);
            double t29927 = t29874*t29874;
            double t29928 = 1/(t29753*t29753);
            double t29929 = 1/(t29750*t29750*t29750*t29750);
            double t29930 = t29704*t29917*t29756*t29928*t29929*(1.0/2.0);
            double t29932 = t29931-t29818-t29875+t29876;
            double t29933 = 1/(t29740*t29740*t29740);
            double t29934 = a1p*c*t29811*t29812*t29817*t29792*(2.0/3.0);
            double t29935 = 1/(t29740*t29740*t29740*t29740*t29740*t29740);
            double t29936 = t29762*t29758*t29759*4.0;
            double t29937 = t29936+t29877;
            double t29938 = t29933*t29836*t29758*(8.0/3.0);
            double t29939 = 1/pow(t29764,2.0/3.0);
            double t29940 = t29807*t29867*t29939*(4.0/9.0);
            double t29941 = 1/pow(t29766,2.0/3.0);
            double t29942 = t29941*t29807*t29867*(4.0/9.0);
            double t29943 = t29940+t29942+t29938-t29833*t29933*t29758*(8.0/3.0);
            double t29944 = t29936-t29877;
            double t29945 = t29886*t29886;
            double t29946 = t29721*t29762*t29763*t29808*t29879;
            double t29947 = Aa*t29721*t29831*t29819*t29829*t29937*t29768*2.0;
            double t29948 = Aa*t29721*t29831*t29819*t29829*t29839*t29879*2.0;
            v_rho_a_rho_b_[index] = (ccab1*gamma_aa[index]*gcab*t29770*t29865*(4.0/3.0)-ccab2*t29783*t29777*t29769* \
               t29787-ccab1*gamma_aa[index]*t29770*t29790*t29776*t29769*(4.0/3.0)+ccab2*gamma_aa[index]*t29770*t29791* \
               t29776*t29769*(8.0/3.0))*(t29911+t29864-t29739+t29757-t29740*(-t29818+t29946+t29866+t29947+t29876+ \
               t29948+t29887+t29721*t29762*t29763*t29916*t29768+t29721*t29762*t29808*t29758*t29759*t29768*4.0-t29721* \
               t29831*t29880*t29881*t29819*t29839*t29768*t29886)+rho_b[index]*(-t29909+t29721*t29718*(t29909-(1/(t29894* \
               t29894)*t29889*(b2f*c*t29898*(1.0/3.0)+b4f*t29702*t29899*(2.0/3.0)+b1f*c*t29900*t29898*(1.0/6.0)+b3f* \
               c*t29725*t29898*(1.0/2.0)))/t29897+a1f*c*c0f*t29901*t29898*(2.0/3.0)-a1p*c*c0p*t29736*t29898*(2.0/ \
               3.0))+a1p*c*c0p*t29736*t29898*(2.0/3.0))+t29721*t29910*t29718)-(rho_b[index]*(t29739-t29721*t29910* \
               t29718)+rho_a[index]*(t29863+t29721*t29718*(t29862-c0p*t29713*t29715*2.0))-t29740*(t29864+t29757-t29721* \
               t29804*t29762*t29763*t29768))*(ccab2*1/(t29780*t29780*t29780)*t29783*t29777*t29786*t29769*-2.0+ccab1* \
               gamma_aa[index]*gamma_bb[index]*t29770*t29771*t29790*t29769*(3.2E1/9.0)-ccab2*gamma_aa[index]*gamma_bb[index]* \
               t29770*t29771*t29791*t29769*(3.2E1/9.0)+ccab2*gamma_aa[index]*t29770*t29776*t29786*t29769*t29787*(8.0/ \
               3.0)+ccab2*gamma_bb[index]*t29771*t29783*t29776*t29769*t29787*(8.0/3.0)+ccab2*gamma_aa[index]*gamma_bb[index]* \
               t29770*t29771*t29777*(t29769*t29769)*t29787*(3.2E1/9.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab* \
               t29770*t29771*t29776*t29769*1/(t29789*t29789*t29789)*(3.2E1/9.0))+(ccab0+ccab1*gcab*t29865*t29776+ \
               ccab2*t29791*t29777*t29769)*(t29946+t29947+t29948+t29740*(t29930+t29925+t29934-t29811*t29917*t29926* \
               t29756*2.0-a1p*c*c0p*t29912*t29754*(8.0/9.0)-t29721*t29762*t29763*t29768*(t29930+t29925+t29934-t29811* \
               t29917*t29926*t29756*2.0+t29803*t29927*t29868*1/(t29797*t29797*t29797)*2.0-t29803*t29868*t29869*(b2f* \
               c*t29912*(4.0/9.0)+b4f*t29702*t29913*(1.0E1/9.0)+b1f*c*t29810*t29912*(2.0/9.0)+b3f*c*t29912*t29743* \
               (2.0/3.0)-b1f*t29702*t29913*t29918*(1.0/3.6E1)+b3f*t29702*t29810*t29913*(1.0/1.2E1))-1/(t29800*t29800) \
               *t29722*t29803*t29927*1/(t29797*t29797*t29797*t29797)*(1.0/2.0)+a1f*c*c0f*t29801*t29912*(8.0/9.0)- \
               a1p*c*c0p*t29912*t29754*(8.0/9.0)-a1f*c*t29792*t29874*t29868*t29869*(2.0/3.0))+t29721*t29832*t29763* \
               t29808*t29837*4.0-t29721*t29932*t29762*t29763*t29837+t29721*t29762*t29763*t29808*t29943-t29721*t29832* \
               t29763*t29916*t29768*8.0-t29721*t29832*t29763*t29808*t29879*4.0+t29721*t29932*t29762*t29763*t29879- \
               t29721*t29763*t29808*t29935*t29768*2.0E1+t29721*t29762*t29808*t29759*t29768*1.2E1+t29721*t29762*t29808* \
               t29837*t29758*t29759*4.0+t29721*t29762*t29808*t29758*t29759*t29879*4.0+Aa*t29721*t29831*t29943*t29819* \
               t29829*t29839*2.0+Aa*t29721*t29831*t29819*t29837*t29829*t29937*2.0+Aa*t29721*t29831*t29944*t29819* \
               t29829*t29879*2.0-Aa*t29721*t29831*t29819*t29829*t29768*(t29763*t29935*2.0E1-t29762*t29759*1.2E1)* \
               2.0-t29721*t29831*t29880*t29881*t29944*t29819*t29768*t29886-t29721*t29831*t29880*t29881*t29819*t29837* \
               t29839*t29886+t29721*t29831*t29880*t29881*t29819*t29937*t29768*t29886+t29721*t29831*t29880*t29881* \
               t29819*t29839*t29886*t29879-t29721*t29831*1/(t29825*t29825*t29825)*t29880*t29819*t29945*t29839*t29768* \
               2.0+t29721*t29831*t29880*t29881*t29819*t29839*t29768*(b2a*c*t29912*(4.0/9.0)+b4a*t29702*t29913*(1.0E1/ \
               9.0)+b1a*c*t29810*t29912*(2.0/9.0)+b3a*c*t29912*t29743*(2.0/3.0)-b1a*t29702*t29913*t29918*(1.0/3.6E1) \
               +b3a*t29702*t29810*t29913*(1.0/1.2E1))-Aa*a1a*c*t29721*t29912*t29819*t29829*t29839*t29768*(8.0/9.0) \
               +Aa*a1a*c*t29721*t29944*t29792*t29819*t29829*t29768*(2.0/3.0)+Aa*a1a*c*t29721*t29792*t29819*t29837* \
               t29829*t29839*(2.0/3.0)-Aa*a1a*c*t29721*t29792*t29819*t29829*t29937*t29768*(2.0/3.0)-Aa*a1a*c*t29721* \
               t29792*t29819*t29829*t29839*t29879*(2.0/3.0)+t29721*t29820*t29831*1/(t29825*t29825*t29825*t29825)* \
               t29819*1/(t29828*t29828)*t29945*t29839*t29768*(1.0/2.0)+a1a*c*t29721*t29880*t29881*t29792*t29819*t29839* \
               t29768*t29886*(2.0/3.0))-t29811*t29812*t29817*t29756*2.0+a1p*c*c0p*t29754*t29792*(4.0/3.0)-t29721* \
               t29762*t29763*t29808*t29837+t29721*t29832*t29763*t29808*t29768*8.0-t29721*t29932*t29762*t29763*t29768* \
               2.0-Aa*t29721*t29831*t29944*t29819*t29829*t29768*2.0-Aa*t29721*t29831*t29819*t29837*t29829*t29839* \
               2.0-t29721*t29831*t29880*t29881*t29819*t29839*t29768*t29886*2.0+Aa*a1a*c*t29721*t29792*t29819*t29829* \
               t29839*t29768*(4.0/3.0))+(ccab1*gamma_bb[index]*gcab*t29771*t29865*(4.0/3.0)-ccab2*t29777*t29786*t29769* \
               t29787-ccab1*gamma_bb[index]*t29771*t29790*t29776*t29769*(4.0/3.0)+ccab2*gamma_bb[index]*t29771*t29791* \
               t29776*t29769*(8.0/3.0))*(t29911-t29863+t29864+t29757-t29740*(-t29818+t29866+t29876+t29887+t29721* \
               t29762*t29763*t29768*(t29818+t29875-t29803*t29874*t29868*t29869-a1p*c*c0p*t29754*t29792*(2.0/3.0)) \
               -t29721*t29762*t29763*t29808*t29837+t29721*t29804*t29762*t29758*t29759*t29768*4.0-Aa*t29721*t29831* \
               t29819*t29837*t29829*t29839*2.0+Aa*t29721*t29831*t29819*t29829*t29768*(t29877-t29762*t29758*t29759* \
               4.0)*2.0-t29721*t29831*t29880*t29881*t29819*t29839*t29768*t29886)+rho_a[index]*(-t29861+t29721*t29718* \
               (t29861-(t29841*1/(t29846*t29846)*(b2f*c*t29850*(1.0/3.0)+b4f*t29702*t29851*(2.0/3.0)+b1f*c*t29850* \
               t29852*(1.0/6.0)+b3f*c*t29700*t29850*(1.0/2.0)))/t29849+a1f*c*c0f*t29850*t29853*(2.0/3.0)-a1p*c*c0p* \
               t29713*t29850*(2.0/3.0))+a1p*c*c0p*t29713*t29850*(2.0/3.0))-t29721*t29718*(t29862-t29863));
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t29950 = 1/pow(rho_b[index],1.0/3.0);
            double t29951 = c*t29950;
            double t29952 = sqrt(t29951);
            double t29953 = pow(t29951,3.0/2.0);
            double t29954 = c*c;
            double t29955 = 1/pow(rho_b[index],2.0/3.0);
            double t29956 = 1/c0p;
            double t29957 = b1p*t29952;
            double t29958 = b3p*t29953;
            double t29959 = b4p*t29954*t29955;
            double t29960 = b2p*c*t29950;
            double t29961 = t29960+t29957+t29958+t29959;
            double t29962 = 1/t29961;
            double t29963 = t29962*t29956*(1.0/2.0);
            double t29964 = t29963+1.0;
            double t29965 = log(t29964);
            double t29966 = a1p*c*t29950;
            double t29967 = t29966+1.0;
            double t29968 = 1/pow(rho_b[index],8.0/3.0);
            double t29969 = gamma_bb[index]*gamma_bb[index];
            double t29970 = gcaa*gcaa;
            double t29971 = 1/pow(rho_b[index],1.9E1/3.0);
            double t29972 = gamma_bb[index]*gcaa*t29968;
            double t29973 = t29972+1.0;
            double t29974 = 1/pow(rho_b[index],1.6E1/3.0);
            double t29975 = 1/pow(rho_b[index],1.1E1/3.0);
            double t29976 = gamma_bb[index]*gcaa*t29968*2.0;
            double t29977 = t29970*t29974*t29969;
            double t29978 = t29976+t29977+1.0;
            double t29981 = 1/pow(rho_a[index],8.0/3.0);
            double t29982 = gamma_aa[index]*t29981*(1.0/2.0);
            double t29983 = gamma_bb[index]*t29968*(1.0/2.0);
            double t29979 = t29982+t29983;
            double t29980 = gcab*gcab;
            double t29984 = t29979*t29979;
            double t29985 = rho_a[index]+rho_b[index];
            double t29986 = 1/pow(t29985,1.0/3.0);
            double t29987 = c*t29986;
            double t29988 = sqrt(t29987);
            double t29989 = b1p*t29988;
            double t29990 = pow(t29987,3.0/2.0);
            double t29991 = b3p*t29990;
            double t29992 = 1/pow(t29985,2.0/3.0);
            double t29993 = b4p*t29954*t29992;
            double t29994 = b2p*c*t29986;
            double t29995 = t29991+t29993+t29994+t29989;
            double t29996 = 1/pow(t29985,7.0/3.0);
            double t29997 = 1/pow(t29985,8.0/3.0);
            double t29998 = 1/sqrt(t29987);
            double t29999 = a1p*c*t29986;
            double t30000 = t29999+1.0;
            double t30001 = 1/t29995;
            double t30002 = t29956*t30001*(1.0/2.0);
            double t30003 = t30002+1.0;
            double t30004 = 1/t30003;
            double t30005 = 1/pow(t29985,4.0/3.0);
            double t30045 = 1/pow(t29985,5.0/3.0);
            double t30047 = b4p*t29954*t30045*(2.0/3.0);
            double t30048 = b2p*c*t30005*(1.0/3.0);
            double t30049 = b1p*c*t29998*t30005*(1.0/6.0);
            double t30050 = b3p*c*t29988*t30005*(1.0/2.0);
            double t30006 = t30050+t30047+t30048+t30049;
            double t30007 = two_13*2.0;
            double t30008 = t30007-2.0;
            double t30009 = 1/t30008;
            double t30010 = 1/c0f;
            double t30011 = rho_a[index]-rho_b[index];
            double t30012 = 1/t29985;
            double t30013 = t30011*t30012;
            double t30014 = b1f*t29988;
            double t30015 = b3f*t29990;
            double t30016 = b4f*t29954*t29992;
            double t30017 = b2f*c*t29986;
            double t30018 = t30014+t30015+t30016+t30017;
            double t30019 = 1/t30018;
            double t30020 = t30010*t30019*(1.0/2.0);
            double t30021 = t30020+1.0;
            double t30022 = log(t30021);
            double t30023 = a1f*c*t29986;
            double t30024 = t30023+1.0;
            double t30025 = log(t30003);
            double t30033 = c0f*t30022*t30024*2.0;
            double t30034 = c0p*t30000*t30025*2.0;
            double t30026 = t30033-t30034;
            double t30027 = t30011*t30011;
            double t30028 = t30013+1.0;
            double t30029 = pow(t30028,4.0/3.0);
            double t30030 = -t30013+1.0;
            double t30031 = pow(t30030,4.0/3.0);
            double t30032 = t30031+t30029-2.0;
            double t30035 = 1/(t29985*t29985);
            double t30036 = t30011*t30035;
            double t30037 = t30012+t30036;
            double t30038 = 1/(t29985*t29985*t29985*t29985);
            double t30039 = pow(t30028,1.0/3.0);
            double t30040 = t30037*t30039*(4.0/3.0);
            double t30041 = pow(t30030,1.0/3.0);
            double t30073 = t30041*t30037*(4.0/3.0);
            double t30042 = t30040-t30073;
            double t30043 = 1/(t29985*t29985*t29985*t29985*t29985);
            double t30044 = t30027*t30027;
            double t30046 = 1/(t29995*t29995);
            double t30051 = 1/t30021;
            double t30052 = 1/(t30018*t30018);
            double t30053 = b4f*t29954*t30045*(2.0/3.0);
            double t30054 = b2f*c*t30005*(1.0/3.0);
            double t30055 = b1f*c*t29998*t30005*(1.0/6.0);
            double t30056 = b3f*c*t29988*t30005*(1.0/2.0);
            double t30057 = t30053+t30054+t30055+t30056;
            double t30058 = t30000*t30004*t30006*t30046;
            double t30059 = a1f*c*c0f*t30022*t30005*(2.0/3.0);
            double t30060 = t30006*t30006;
            double t30061 = 1/pow(t29987,3.0/2.0);
            double t30062 = b4p*t29954*t29997*(1.0E1/9.0);
            double t30063 = b2p*c*t29996*(4.0/9.0);
            double t30064 = b1p*c*t29996*t29998*(2.0/9.0);
            double t30065 = b3p*c*t29996*t29988*(2.0/3.0);
            double t30066 = b3p*t29954*t29997*t29998*(1.0/1.2E1);
            double t30067 = t30062+t30063+t30064+t30065+t30066-b1p*t29954*t29997*t30061*(1.0/3.6E1);
            double t30068 = 1/(t29995*t29995*t29995);
            double t30069 = t30000*t30004*t30060*t30068*2.0;
            double t30070 = t30057*t30057;
            double t30071 = 1/(t30003*t30003);
            double t30072 = 1/(t29995*t29995*t29995*t29995);
            double t30074 = t30035*2.0;
            double t30075 = 1/(t29985*t29985*t29985);
            double t30076 = t30011*t30075*2.0;
            double t30077 = t30074+t30076;
            double t30078 = t30037*t30037;
            double t30079 = a1p*c*c0p*t29996*t30025*(8.0/9.0);
            double t30080 = 1/(t29985*t29985*t29985*t29985*t29985*t29985);
            double t30081 = 1/d2fz0;
            double t30082 = 1/Aa;
            double t30083 = b1a*t29988;
            double t30084 = b3a*t29990;
            double t30085 = b4a*t29954*t29992;
            double t30086 = b2a*c*t29986;
            double t30087 = t30083+t30084+t30085+t30086;
            double t30088 = 1/t30087;
            double t30089 = t30082*t30088*(1.0/2.0);
            double t30090 = t30089+1.0;
            double t30091 = log(t30090);
            double t30092 = a1a*c*t29986;
            double t30093 = t30092+1.0;
            double t30094 = t30039*t30077*(4.0/3.0);
            double t30095 = 1/pow(t30028,2.0/3.0);
            double t30096 = t30095*t30078*(4.0/9.0);
            double t30097 = 1/pow(t30030,2.0/3.0);
            double t30098 = t30078*t30097*(4.0/9.0);
            double t30099 = t30094+t30096+t30098-t30041*t30077*(4.0/3.0);
            double t30100 = t30011*t30027*t30038*4.0;
            double t30101 = t30043*t30044*4.0;
            double t30102 = t30100+t30101;
            double t30103 = 1/t30090;
            double t30104 = t30044*t30038;
            double t30105 = t30104-1.0;
            double t30106 = 1/(t30087*t30087);
            double t30107 = b4a*t29954*t30045*(2.0/3.0);
            double t30108 = b2a*c*t30005*(1.0/3.0);
            double t30109 = b1a*c*t29998*t30005*(1.0/6.0);
            double t30110 = b3a*c*t29988*t30005*(1.0/2.0);
            double t30111 = t30110+t30107+t30108+t30109;
            double t30112 = t30111*t30111;
            double t30114 = t30024*t30051*t30052*t30057;
            double t30115 = a1p*c*c0p*t30005*t30025*(2.0/3.0);
            double t30113 = -t30114-t30115+t30058+t30059;
            double t30116 = pow(2.0,1.0/3.0);
            double t30117 = t30116*2.0;
            double t30118 = t30117-2.0;
            double t30119 = a1f*c*t29950;
            double t30120 = t30119+1.0;
            double t30121 = b1f*t29952;
            double t30122 = b3f*t29953;
            double t30123 = b4f*t29954*t29955;
            double t30124 = b2f*c*t29950;
            double t30125 = t30121+t30122+t30123+t30124;
            double t30126 = 1/t30125;
            double t30127 = t30010*t30126*(1.0/2.0);
            double t30128 = t30127+1.0;
            double t30129 = 1/pow(rho_b[index],4.0/3.0);
            double t30131 = 1/pow(rho_b[index],5.0/3.0);
            double t30132 = 1/sqrt(t29951);
            double t30138 = b4f*t29954*t30131*(2.0/3.0);
            double t30139 = b2f*c*t30129*(1.0/3.0);
            double t30140 = b1f*c*t30132*t30129*(1.0/6.0);
            double t30141 = b3f*c*t29952*t30129*(1.0/2.0);
            double t30130 = t30140+t30141+t30138+t30139;
            double t30143 = b4p*t29954*t30131*(2.0/3.0);
            double t30144 = b2p*c*t30129*(1.0/3.0);
            double t30145 = b1p*c*t30132*t30129*(1.0/6.0);
            double t30146 = b3p*c*t29952*t30129*(1.0/2.0);
            double t30133 = t30143+t30144+t30145+t30146;
            double t30134 = 1/t30128;
            double t30135 = 1/pow(rho_b[index],7.0/3.0);
            double t30136 = 1/t29964;
            double t30137 = 1/pow(t29951,3.0/2.0);
            double t30142 = t30130*t30130;
            double t30147 = t30133*t30133;
            double t30148 = log(t30128);
            double t30149 = 1/(t30125*t30125);
            double t30150 = 1/(t29961*t29961);
            double t30151 = 1/(t29961*t29961*t29961);
            double t30152 = t29967*t30151*t30136*t30147*2.0;
            double t30153 = b4p*t29954*t29968*(1.0E1/9.0);
            double t30154 = b2p*c*t30135*(4.0/9.0);
            double t30155 = b3p*t29954*t29968*t30132*(1.0/1.2E1);
            double t30156 = b1p*c*t30132*t30135*(2.0/9.0);
            double t30157 = b3p*c*t29952*t30135*(2.0/3.0);
            double t30232 = b1p*t29954*t29968*t30137*(1.0/3.6E1);
            double t30158 = -t30232+t30153+t30154+t30155+t30156+t30157;
            double t30159 = 1/(t29964*t29964);
            double t30160 = 1/(t29961*t29961*t29961*t29961);
            double t30161 = a1p*c*c0p*t29965*t30135*(8.0/9.0);
            double t30162 = gcab*t29979;
            double t30163 = t30162+1.0;
            double t30164 = 1/t30163;
            double t30165 = t29980*t29984;
            double t30166 = gcab*t29979*2.0;
            double t30167 = t30165+t30166+1.0;
            double t30168 = 1/t30167;
            double t30169 = t30114+t30115-t30058-t30059;
            double t30170 = t29967*t30150*t30133*t30136;
            double t30171 = a1f*c*c0f*t30129*t30148*(2.0/3.0);
            double t30173 = a1p*c*c0p*t29965*t30129*(2.0/3.0);
            double t30176 = t30120*t30130*t30134*t30149;
            double t30172 = t30170+t30171-t30173-t30176;
            double t30174 = c0p*t29965*t29967*2.0;
            double t30197 = c0f*t30120*t30148*2.0;
            double t30175 = t30174-t30197;
            double t30177 = t30009*t30118*t30172;
            double t30178 = 1/t29973;
            double t30179 = 1/t29978;
            double t30180 = 1/pow(rho_a[index],1.0/3.0);
            double t30181 = c*t30180;
            double t30182 = sqrt(t30181);
            double t30183 = pow(t30181,3.0/2.0);
            double t30184 = 1/pow(rho_a[index],2.0/3.0);
            double t30185 = b1p*t30182;
            double t30186 = b3p*t30183;
            double t30187 = b4p*t29954*t30184;
            double t30188 = b2p*c*t30180;
            double t30189 = t30185+t30186+t30187+t30188;
            double t30190 = 1/t30189;
            double t30191 = t29956*t30190*(1.0/2.0);
            double t30192 = t30191+1.0;
            double t30193 = log(t30192);
            double t30194 = a1p*c*t30180;
            double t30195 = t30194+1.0;
            double t30196 = c0p*t30193*t30195*2.0;
            double t30198 = t30009*t30118*t30175;
            double t30199 = t30032*t30026*t30044*t30009*t30038;
            double t30200 = Aa*t30032*t30105*t30009*t30081*t30091*t30093*2.0;
            double t30201 = 1/(t30163*t30163);
            double t30202 = 1/pow(rho_b[index],2.2E1/3.0);
            double t30203 = gamma_bb[index]*gcab*t29975*(8.0/3.0);
            double t30204 = gamma_bb[index]*t29980*t29975*t29979*(8.0/3.0);
            double t30205 = t30203+t30204;
            double t30206 = 1/pow(rho_b[index],1.4E1/3.0);
            double t30207 = 1/(t30167*t30167);
            double t30208 = gx*gx;
            double t30209 = gamma_bb[index]*gx*t29968;
            double t30210 = t30209+1.0;
            double t30215 = gamma_bb[index]*gx*t29975*(1.6E1/3.0);
            double t30216 = t29971*t29969*t30208*(1.6E1/3.0);
            double t30211 = t30215+t30216;
            double t30212 = gamma_bb[index]*gx*t29968*2.0;
            double t30213 = t29974*t29969*t30208;
            double t30214 = t30212+t30213+1.0;
            double t30217 = 1/(t30214*t30214);
            double t30218 = 1/t30210;
            double t30219 = 1/t30214;
            double t30220 = 1/(t30210*t30210);
            double t30221 = ccaa1*gamma_bb[index]*gcaa*t29968*t30178;
            double t30222 = ccaa2*t29970*t29974*t29969*t30179;
            double t30223 = ccaa0+t30221+t30222;
            double t30224 = 1/(t30125*t30125*t30125);
            double t30225 = b4f*t29954*t29968*(1.0E1/9.0);
            double t30226 = b2f*c*t30135*(4.0/9.0);
            double t30227 = b3f*t29954*t29968*t30132*(1.0/1.2E1);
            double t30228 = b1f*c*t30132*t30135*(2.0/9.0);
            double t30229 = b3f*c*t29952*t30135*(2.0/3.0);
            double t30230 = t30225+t30226+t30227+t30228+t30229-b1f*t29954*t29968*t30137*(1.0/3.6E1);
            double t30231 = t30120*t30230*t30134*t30149;
            double t30233 = t29967*t30150*t30136*t30158;
            double t30234 = 1/(t30128*t30128);
            double t30235 = 1/(t30125*t30125*t30125*t30125);
            double t30236 = t30010*t30120*t30142*t30234*t30235*(1.0/2.0);
            double t30237 = t29956*t29967*t30160*t30147*t30159*(1.0/2.0);
            double t30238 = a1f*c*t30130*t30134*t30129*t30149*(2.0/3.0);
            double t30239 = a1p*c*t30150*t30133*t30136*t30129*(2.0/3.0);
            double t30240 = t30174-t30198;
            double t30241 = 1/pow(rho_b[index],1.0E1);
            double t30242 = 1/(t29973*t29973);
            double t30243 = gamma_bb[index]*gcaa*t29975*(1.6E1/3.0);
            double t30244 = t29970*t29971*t29969*(1.6E1/3.0);
            double t30245 = t30243+t30244;
            double t30246 = 1/(t29978*t29978);
            double t30247 = ccaa1*gamma_bb[index]*gcaa*t29975*t30178*(8.0/3.0);
            double t30248 = ccaa2*t29970*t29971*t29969*t30179*(1.6E1/3.0);
            double t30249 = t30247+t30248-ccaa1*t29970*t29971*t29969*t30242*(8.0/3.0)-ccaa2*t29970*t29974*t29969* \
               t30245*t30246;
            double t30250 = -t30170+t30173+t30177;
            v_rho_b_rho_b_[index] = t30223*t30250*2.0+(ccab1*gamma_bb[index]*gcab*t29975*t30164*(4.0/3.0)-ccab2* \
               t29980*t29984*t30205*t30207-ccab1*gamma_bb[index]*t29980*t29975*t29979*t30201*(4.0/3.0)+ccab2*gamma_bb[index]* \
               t29980*t29975*t29979*t30168*(8.0/3.0))*(t30200+t30034-t30174+t30198+t30199+rho_b[index]*t30250-t29985* \
               (t30115-t30058+t30032*t30043*t30026*t30044*t30009*4.0+t30042*t30026*t30044*t30009*t30038-t30032*t30044* \
               t30009*t30038*t30169+t30011*t30032*t30026*t30009*t30027*t30038*4.0+Aa*t30102*t30032*t30009*t30081* \
               t30091*t30093*2.0+Aa*t30042*t30105*t30009*t30081*t30091*t30093*2.0-t30111*t30103*t30032*t30105*t30106* \
               t30009*t30081*t30093+Aa*a1a*c*t30005*t30032*t30105*t30009*t30081*t30091*(2.0/3.0)))*2.0+t30249*(t30174- \
               t30009*t30118*t30175)*2.0+(rho_b[index]*t30240+rho_a[index]*(t30196-t30009*t30118*(t30196-c0f*log((t30010* \
               (1.0/2.0))/(b1f*t30182+b3f*t30183+b2f*c*t30180+b4f*t29954*t30184)+1.0)*(a1f*c*t30180+1.0)*2.0))-t29985* \
               (t30200+t30034+t30199))*(-ccab2*t29980*t29984*t30207*(gamma_bb[index]*gcab*t30206*(8.8E1/9.0)+t29980* \
               t29969*t30202*(3.2E1/9.0)+gamma_bb[index]*t29980*t29979*t30206*(8.8E1/9.0))+ccab2*t29980*t29984*(t30205* \
               t30205)*1/(t30167*t30167*t30167)*2.0+ccab1*gamma_bb[index]*gcab*t30206*t30164*(4.4E1/9.0)-ccab1*t29980* \
               t29969*t30201*t30202*(3.2E1/9.0)+ccab2*t29980*t29969*t30202*t30168*(3.2E1/9.0)-ccab1*gamma_bb[index]* \
               t29980*t29979*t30201*t30206*(4.4E1/9.0)+ccab2*gamma_bb[index]*t29980*t29979*t30206*t30168*(8.8E1/9.0) \
               -ccab2*gamma_bb[index]*t29980*t29975*t29979*t30205*t30207*(1.6E1/3.0)+ccab1*gcab*t29980*t29969*t29979* \
               t30202*1/(t30163*t30163*t30163)*(3.2E1/9.0))+(ccab0+ccab1*gcab*t29979*t30164+ccab2*t29980*t29984*t30168) \
               *(-rho_b[index]*(-t30152-t30161+t30233+t30237+t30239+t30009*t30118*(t30231+t30152+t30161+t30236+t30238- \
               t29967*t30150*t30136*t30158-t30120*t30142*t30134*t30224*2.0-a1f*c*c0f*t30135*t30148*(8.0/9.0)-t29956* \
               t29967*t30160*t30147*t30159*(1.0/2.0)-a1p*c*t30150*t30133*t30136*t30129*(2.0/3.0)))-t29985*(t30069+ \
               t30079-t30000*t30004*t30046*t30067-t30032*t30044*t30009*t30038*(t30069+t30079-t30000*t30004*t30046* \
               t30067-t30024*t30051*t30070*1/(t30018*t30018*t30018)*2.0+t30024*t30051*t30052*(b2f*c*t29996*(4.0/9.0) \
               +b4f*t29954*t29997*(1.0E1/9.0)+b1f*c*t29996*t29998*(2.0/9.0)+b3f*c*t29996*t29988*(2.0/3.0)-b1f*t29954* \
               t29997*t30061*(1.0/3.6E1)+b3f*t29954*t29997*t29998*(1.0/1.2E1))+t30010*1/(t30021*t30021)*t30024*t30070* \
               1/(t30018*t30018*t30018*t30018)*(1.0/2.0)-a1f*c*c0f*t29996*t30022*(8.0/9.0)-t29956*t30000*t30060*t30071* \
               t30072*(1.0/2.0)+a1f*c*t30005*t30051*t30052*t30057*(2.0/3.0)-a1p*c*t30004*t30005*t30006*t30046*(2.0/ \
               3.0))-t29956*t30000*t30060*t30071*t30072*(1.0/2.0)+t30032*t30113*t30043*t30044*t30009*8.0+t30032*t30026* \
               t30044*t30080*t30009*2.0E1+t30042*t30043*t30026*t30044*t30009*8.0+t30113*t30042*t30044*t30009*t30038* \
               2.0+t30032*t30026*t30009*t30027*t30038*1.2E1+t30026*t30044*t30009*t30038*t30099+t30011*t30032*t30043* \
               t30026*t30009*t30027*3.2E1+t30011*t30032*t30113*t30009*t30027*t30038*8.0+t30011*t30042*t30026*t30009* \
               t30027*t30038*8.0-a1p*c*t30004*t30005*t30006*t30046*(2.0/3.0)+Aa*t30102*t30042*t30009*t30081*t30091* \
               t30093*4.0+Aa*t30105*t30009*t30081*t30091*t30093*t30099*2.0+Aa*t30032*t30009*t30081*t30091*t30093* \
               (t30044*t30080*2.0E1+t30027*t30038*1.2E1+t30011*t30043*t30027*3.2E1)*2.0-t30102*t30111*t30103*t30032* \
               t30106*t30009*t30081*t30093*2.0-t30111*t30103*t30042*t30105*t30106*t30009*t30081*t30093*2.0+t30103* \
               t30112*t30032*t30105*t30009*t30081*t30093*1/(t30087*t30087*t30087)*2.0-t30103*t30032*t30105*t30106* \
               t30009*t30081*t30093*(b2a*c*t29996*(4.0/9.0)+b4a*t29954*t29997*(1.0E1/9.0)+b1a*c*t29996*t29998*(2.0/ \
               9.0)+b3a*c*t29996*t29988*(2.0/3.0)-b1a*t29954*t29997*t30061*(1.0/3.6E1)+b3a*t29954*t29997*t29998*(1.0/ \
               1.2E1))+Aa*a1a*c*t29996*t30032*t30105*t30009*t30081*t30091*(8.0/9.0)+Aa*a1a*c*t30102*t30005*t30032* \
               t30009*t30081*t30091*(4.0/3.0)+Aa*a1a*c*t30005*t30042*t30105*t30009*t30081*t30091*(4.0/3.0)-t30112* \
               t30032*t30105*t30009*t30081*1/(t30090*t30090)*t30082*t30093*1/(t30087*t30087*t30087*t30087)*(1.0/2.0) \
               -a1a*c*t30111*t30103*t30005*t30032*t30105*t30106*t30009*t30081*(2.0/3.0))-t30009*t30118*t30172*2.0+ \
               t29967*t30150*t30133*t30136*2.0-t30000*t30004*t30006*t30046*2.0-a1p*c*c0p*t29965*t30129*(4.0/3.0)+ \
               a1p*c*c0p*t30005*t30025*(4.0/3.0)+t30032*t30043*t30026*t30044*t30009*8.0+t30042*t30026*t30044*t30009* \
               t30038*2.0-t30032*t30044*t30009*t30038*t30169*2.0+t30011*t30032*t30026*t30009*t30027*t30038*8.0+Aa* \
               t30102*t30032*t30009*t30081*t30091*t30093*4.0+Aa*t30042*t30105*t30009*t30081*t30091*t30093*4.0-t30111* \
               t30103*t30032*t30105*t30106*t30009*t30081*t30093*2.0+Aa*a1a*c*t30005*t30032*t30105*t30009*t30081*t30091* \
               (4.0/3.0))+c0*t29955*(cx0+cx1*gamma_bb[index]*gx*t29968*t30218+cx2*t29974*t29969*t30208*t30219)*(4.0/ \
               9.0)-rho_b[index]*t30240*(ccaa1*gamma_bb[index]*gcaa*t30206*t30178*(8.8E1/9.0)-ccaa1*t29970*t29969* \
               t30202*t30242*2.4E1+ccaa2*t29970*t29969*t30202*t30179*(3.04E2/9.0)-ccaa2*t29970*t29971*t29969*t30245* \
               t30246*(3.2E1/3.0)-ccaa2*t29970*t29974*t29969*t30246*(gamma_bb[index]*gcaa*t30206*(1.76E2/9.0)+t29970* \
               t29969*t30202*(3.04E2/9.0))+ccaa2*t29970*t29974*t29969*1/(t29978*t29978*t29978)*(t30245*t30245)*2.0+ \
               ccaa1*gamma_bb[index]*gcaa*t29970*1/(t29973*t29973*t29973)*t29969*t30241*(1.28E2/9.0))+c0*pow(rho_b[index],4.0/ \
               3.0)*(cx1*gamma_bb[index]*gx*t30206*t30218*(8.8E1/9.0)-cx1*t29969*t30202*t30220*t30208*2.4E1+cx2*t29969* \
               t30202*t30208*t30219*(3.04E2/9.0)-cx2*t29971*t29969*t30211*t30208*t30217*(3.2E1/3.0)-cx2*t29974*t29969* \
               t30208*t30217*(gamma_bb[index]*gx*t30206*(1.76E2/9.0)+t29969*t30202*t30208*(3.04E2/9.0))+cx2*t29974* \
               t29969*(t30211*t30211)*1/(t30214*t30214*t30214)*t30208*2.0+cx1*gamma_bb[index]*gx*t29969*1/(t30210* \
               t30210*t30210)*t30241*t30208*(1.28E2/9.0))-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]*gx*t29975* \
               t30218*(8.0/3.0)-cx1*t29971*t29969*t30220*t30208*(8.0/3.0)+cx2*t29971*t29969*t30208*t30219*(1.6E1/ \
               3.0)-cx2*t29974*t29969*t30211*t30208*t30217)*(8.0/3.0)+rho_b[index]*t30223*(-t30152-t30161+t30233+ \
               t30237+t30239+t30009*t30118*(t30231+t30152+t30161-t30233+t30236-t30237+t30238-t30239-t30120*t30142* \
               t30134*t30224*2.0-a1f*c*c0f*t30135*t30148*(8.0/9.0)))-rho_b[index]*t30250*t30249*2.0;
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t31519 = 1/pow(rho_b[index],1.0/3.0);
            double t31520 = c*t31519;
            double t31521 = sqrt(t31520);
            double t31522 = pow(t31520,3.0/2.0);
            double t31523 = c*c;
            double t31524 = 1/pow(rho_b[index],2.0/3.0);
            double t31525 = 1/c0p;
            double t31526 = b1p*t31521;
            double t31527 = b3p*t31522;
            double t31528 = b4p*t31523*t31524;
            double t31529 = b2p*c*t31519;
            double t31530 = t31526+t31527+t31528+t31529;
            double t31531 = 1/t31530;
            double t31532 = t31531*t31525*(1.0/2.0);
            double t31533 = t31532+1.0;
            double t31534 = log(t31533);
            double t31535 = a1p*c*t31519;
            double t31536 = t31535+1.0;
            double t31537 = 1/pow(rho_b[index],8.0/3.0);
            double t31538 = gamma_bb[index]*gamma_bb[index];
            double t31539 = gcaa*gcaa;
            double t31540 = 1/pow(rho_b[index],1.9E1/3.0);
            double t31541 = gamma_bb[index]*gcaa*t31537;
            double t31542 = t31541+1.0;
            double t31543 = 1/pow(rho_b[index],1.6E1/3.0);
            double t31544 = 1/pow(rho_b[index],1.1E1/3.0);
            double t31545 = gamma_bb[index]*gcaa*t31537*2.0;
            double t31546 = t31543*t31538*t31539;
            double t31547 = t31545+t31546+1.0;
            double t31548 = pow(2.0,1.0/3.0);
            double t31549 = t31548*2.0;
            double t31550 = t31549-2.0;
            double t31551 = two_13*2.0;
            double t31552 = t31551-2.0;
            double t31553 = 1/t31552;
            double t31554 = a1f*c*t31519;
            double t31555 = t31554+1.0;
            double t31556 = 1/c0f;
            double t31557 = b1f*t31521;
            double t31558 = b3f*t31522;
            double t31559 = b4f*t31523*t31524;
            double t31560 = b2f*c*t31519;
            double t31561 = t31560+t31557+t31558+t31559;
            double t31562 = 1/t31561;
            double t31563 = t31562*t31556*(1.0/2.0);
            double t31564 = t31563+1.0;
            double t31565 = 1/pow(rho_b[index],4.0/3.0);
            double t31566 = 1/pow(rho_b[index],5.0/3.0);
            double t31567 = 1/sqrt(t31520);
            double t31568 = log(t31564);
            double t31569 = 1/t31533;
            double t31570 = 1/(t31530*t31530);
            double t31571 = b4p*t31523*t31566*(2.0/3.0);
            double t31572 = b2p*c*t31565*(1.0/3.0);
            double t31573 = b1p*c*t31565*t31567*(1.0/6.0);
            double t31574 = b3p*c*t31521*t31565*(1.0/2.0);
            double t31575 = t31571+t31572+t31573+t31574;
            double t31576 = t31570*t31536*t31575*t31569;
            double t31577 = 1/t31542;
            double t31578 = 1/t31547;
            double t31579 = gx*gx;
            double t31580 = gamma_bb[index]*gx*t31537;
            double t31581 = t31580+1.0;
            double t31582 = 1/pow(rho_b[index],2.2E1/3.0);
            double t31587 = gamma_bb[index]*gx*t31544*(1.6E1/3.0);
            double t31588 = t31540*t31538*t31579*(1.6E1/3.0);
            double t31583 = t31587+t31588;
            double t31584 = gamma_bb[index]*gx*t31537*2.0;
            double t31585 = t31543*t31538*t31579;
            double t31586 = t31584+t31585+1.0;
            double t31589 = 1/pow(rho_b[index],1.4E1/3.0);
            double t31590 = 1/(t31586*t31586);
            double t31591 = 1/t31581;
            double t31592 = 1/t31586;
            double t31593 = 1/(t31581*t31581);
            double t31594 = ccaa1*gamma_bb[index]*gcaa*t31537*t31577;
            double t31595 = ccaa2*t31543*t31538*t31539*t31578;
            double t31596 = ccaa0+t31594+t31595;
            double t31597 = 1/t31564;
            double t31598 = b4f*t31523*t31566*(2.0/3.0);
            double t31599 = b2f*c*t31565*(1.0/3.0);
            double t31600 = b1f*c*t31565*t31567*(1.0/6.0);
            double t31601 = b3f*c*t31521*t31565*(1.0/2.0);
            double t31602 = t31600+t31601+t31598+t31599;
            double t31603 = 1/(t31561*t31561);
            double t31604 = 1/pow(rho_b[index],7.0/3.0);
            double t31605 = 1/pow(t31520,3.0/2.0);
            double t31606 = t31602*t31602;
            double t31607 = t31575*t31575;
            double t31608 = 1/(t31530*t31530*t31530);
            double t31609 = t31607*t31536*t31608*t31569*2.0;
            double t31610 = b4p*t31523*t31537*(1.0E1/9.0);
            double t31611 = b2p*c*t31604*(4.0/9.0);
            double t31612 = b3p*t31523*t31537*t31567*(1.0/1.2E1);
            double t31613 = b1p*c*t31604*t31567*(2.0/9.0);
            double t31614 = b3p*c*t31521*t31604*(2.0/3.0);
            double t31615 = t31610+t31611+t31612+t31613+t31614-b1p*t31523*t31605*t31537*(1.0/3.6E1);
            double t31616 = 1/(t31533*t31533);
            double t31617 = 1/(t31530*t31530*t31530*t31530);
            double t31618 = a1p*c*c0p*t31604*t31534*(8.0/9.0);
            double t31619 = c0f*t31555*t31568*2.0;
            double t31620 = c0p*t31534*t31536*2.0;
            double t31621 = 1/pow(rho_b[index],1.0E1);
            double t31622 = 1/(t31542*t31542);
            double t31623 = gamma_bb[index]*gcaa*t31544*(1.6E1/3.0);
            double t31624 = t31540*t31538*t31539*(1.6E1/3.0);
            double t31625 = t31623+t31624;
            double t31626 = 1/(t31547*t31547);
            double t31627 = a1f*c*c0f*t31565*t31568*(2.0/3.0);
            double t31628 = a1p*c*c0p*t31534*t31565*(2.0/3.0);
            double t31629 = ccaa1*gamma_bb[index]*gcaa*t31544*t31577*(8.0/3.0);
            double t31630 = ccaa2*t31540*t31538*t31539*t31578*(1.6E1/3.0);
            double t31631 = t31630+t31629-ccaa1*t31540*t31622*t31538*t31539*(8.0/3.0)-ccaa2*t31543*t31625*t31626* \
               t31538*t31539;
            v_rho_b_rho_b_[index] = t31631*(t31620+t31550*t31553*(t31619-c0p*t31534*t31536*2.0))*2.0+t31596*(t31628- \
               t31576+t31550*t31553*(t31627+t31576-t31602*t31603*t31555*t31597-a1p*c*c0p*t31534*t31565*(2.0/3.0)) \
               )*2.0+c0*t31524*(cx0+cx1*gamma_bb[index]*gx*t31537*t31591+cx2*t31543*t31538*t31592*t31579)*(4.0/9.0) \
               -rho_b[index]*(t31620-t31550*t31553*(t31620-t31619))*(ccaa1*gamma_bb[index]*gcaa*t31577*t31589*(8.8E1/ \
               9.0)-ccaa1*t31622*t31582*t31538*t31539*2.4E1+ccaa2*t31582*t31538*t31539*t31578*(3.04E2/9.0)-ccaa2* \
               t31540*t31625*t31626*t31538*t31539*(3.2E1/3.0)-ccaa2*t31543*t31626*t31538*t31539*(gamma_bb[index]* \
               gcaa*t31589*(1.76E2/9.0)+t31582*t31538*t31539*(3.04E2/9.0))+ccaa2*t31543*(t31625*t31625)*t31538*1/ \
               (t31547*t31547*t31547)*t31539*2.0+ccaa1*gamma_bb[index]*gcaa*t31621*1/(t31542*t31542*t31542)*t31538* \
               t31539*(1.28E2/9.0))+c0*pow(rho_b[index],4.0/3.0)*(cx1*gamma_bb[index]*gx*t31591*t31589*(8.8E1/9.0) \
               -cx1*t31582*t31538*t31593*t31579*2.4E1+cx2*t31582*t31538*t31592*t31579*(3.04E2/9.0)-cx2*t31540*t31590* \
               t31538*t31583*t31579*(3.2E1/3.0)-cx2*t31543*t31590*t31538*t31579*(gamma_bb[index]*gx*t31589*(1.76E2/ \
               9.0)+t31582*t31538*t31579*(3.04E2/9.0))+cx2*t31543*t31538*(t31583*t31583)*1/(t31586*t31586*t31586) \
               *t31579*2.0+cx1*gamma_bb[index]*gx*t31621*1/(t31581*t31581*t31581)*t31538*t31579*(1.28E2/9.0))+rho_b[index]* \
               t31596*(-t31609-t31618+t31550*t31553*(t31609+t31618-t31570*t31615*t31536*t31569-1/(t31561*t31561*t31561) \
               *t31606*t31555*t31597*2.0+t31603*t31555*t31597*(b2f*c*t31604*(4.0/9.0)+b4f*t31523*t31537*(1.0E1/9.0) \
               +b1f*c*t31604*t31567*(2.0/9.0)+b3f*c*t31521*t31604*(2.0/3.0)-b1f*t31523*t31605*t31537*(1.0/3.6E1)+ \
               b3f*t31523*t31537*t31567*(1.0/1.2E1))+1/(t31561*t31561*t31561*t31561)*t31606*t31555*1/(t31564*t31564) \
               *t31556*(1.0/2.0)-a1f*c*c0f*t31604*t31568*(8.0/9.0)-t31525*t31607*t31616*t31536*t31617*(1.0/2.0)+a1f* \
               c*t31602*t31603*t31565*t31597*(2.0/3.0)-a1p*c*t31570*t31565*t31575*t31569*(2.0/3.0))+t31570*t31615* \
               t31536*t31569+t31525*t31607*t31616*t31536*t31617*(1.0/2.0)+a1p*c*t31570*t31565*t31575*t31569*(2.0/ \
               3.0))-rho_b[index]*t31631*(t31628-t31576+t31550*t31553*(t31627-t31628+t31576-t31602*t31603*t31555* \
               t31597))*2.0-c0*pow(rho_b[index],1.0/3.0)*(cx1*gamma_bb[index]*gx*t31544*t31591*(8.0/3.0)-cx1*t31540* \
               t31538*t31593*t31579*(8.0/3.0)+cx2*t31540*t31538*t31592*t31579*(1.6E1/3.0)-cx2*t31543*t31590*t31538* \
               t31583*t31579)*(8.0/3.0);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t30252 = 1/pow(rho_a[index],1.0/3.0);
                double t30253 = c*t30252;
                double t30254 = sqrt(t30253);
                double t30255 = pow(t30253,3.0/2.0);
                double t30256 = c*c;
                double t30257 = 1/pow(rho_a[index],2.0/3.0);
                double t30258 = 1/c0p;
                double t30259 = b1p*t30254;
                double t30260 = b3p*t30255;
                double t30261 = b4p*t30256*t30257;
                double t30262 = b2p*c*t30252;
                double t30263 = t30260+t30261+t30262+t30259;
                double t30264 = 1/t30263;
                double t30265 = t30264*t30258*(1.0/2.0);
                double t30266 = t30265+1.0;
                double t30267 = log(t30266);
                double t30268 = a1p*c*t30252;
                double t30269 = t30268+1.0;
                double t30270 = pow(2.0,1.0/3.0);
                double t30271 = t30270*2.0;
                double t30272 = t30271-2.0;
                double t30273 = two_13*2.0;
                double t30274 = t30273-2.0;
                double t30275 = 1/t30274;
                double t30276 = 1/c0f;
                double t30277 = 1/pow(rho_b[index],1.0/3.0);
                double t30278 = c*t30277;
                double t30279 = sqrt(t30278);
                double t30280 = pow(t30278,3.0/2.0);
                double t30281 = 1/pow(rho_b[index],2.0/3.0);
                double t30282 = b1p*t30279;
                double t30283 = b3p*t30280;
                double t30284 = b4p*t30281*t30256;
                double t30285 = b2p*c*t30277;
                double t30286 = t30282+t30283+t30284+t30285;
                double t30287 = 1/t30286;
                double t30288 = t30258*t30287*(1.0/2.0);
                double t30289 = t30288+1.0;
                double t30290 = log(t30289);
                double t30291 = a1p*c*t30277;
                double t30292 = t30291+1.0;
                double t30293 = c0p*t30290*t30292*2.0;
                double t30294 = rho_a[index]+rho_b[index];
                double t30295 = 1/pow(t30294,1.0/3.0);
                double t30296 = c*t30295;
                double t30297 = sqrt(t30296);
                double t30298 = pow(t30296,3.0/2.0);
                double t30299 = 1/pow(t30294,2.0/3.0);
                double t30300 = b1p*t30297;
                double t30301 = b3p*t30298;
                double t30302 = b4p*t30256*t30299;
                double t30303 = b2p*c*t30295;
                double t30304 = t30300+t30301+t30302+t30303;
                double t30305 = 1/t30304;
                double t30306 = t30305*t30258*(1.0/2.0);
                double t30307 = t30306+1.0;
                double t30308 = log(t30307);
                double t30309 = a1p*c*t30295;
                double t30310 = t30309+1.0;
                double t30311 = c0p*t30310*t30308*2.0;
                double t30312 = rho_a[index]-rho_b[index];
                double t30313 = t30312*t30312;
                double t30314 = 1/t30294;
                double t30315 = t30312*t30314;
                double t30316 = 1/(t30294*t30294*t30294*t30294);
                double t30317 = t30313*t30313;
                double t30318 = t30315+1.0;
                double t30319 = pow(t30318,4.0/3.0);
                double t30320 = -t30315+1.0;
                double t30321 = pow(t30320,4.0/3.0);
                double t30322 = t30321+t30319-2.0;
                double t30323 = 1/pow(rho_a[index],1.1E1/3.0);
                double t30324 = 1/pow(rho_a[index],8.0/3.0);
                double t30325 = gamma_aa[index]*t30324*(1.0/2.0);
                double t30326 = 1/pow(rho_b[index],8.0/3.0);
                double t30327 = gamma_bb[index]*t30326*(1.0/2.0);
                double t30328 = t30325+t30327;
                double t30329 = gcab*t30328;
                double t30330 = t30329+1.0;
                double t30331 = gcab*gcab;
                double t30332 = t30328*t30328;
                double t30333 = t30331*t30332;
                double t30334 = gcab*t30328*2.0;
                double t30335 = t30333+t30334+1.0;
                double t30336 = 1/pow(rho_a[index],1.9E1/3.0);
                double t30337 = 1/(t30330*t30330);
                double t30338 = 1/t30335;
                double t30339 = 1/(t30335*t30335);
                double t30340 = gamma_aa[index]*gcab*t30323*(8.0/3.0);
                double t30341 = gamma_aa[index]*t30331*t30323*t30328*(8.0/3.0);
                double t30342 = t30340+t30341;
                double t30343 = gcab*t30324;
                double t30344 = t30331*t30324*t30328;
                double t30345 = t30343+t30344;
                double t30346 = b1f*t30254;
                double t30347 = b3f*t30255;
                double t30348 = b4f*t30256*t30257;
                double t30349 = b2f*c*t30252;
                double t30350 = t30346+t30347+t30348+t30349;
                double t30351 = 1/t30350;
                double t30352 = t30351*t30276*(1.0/2.0);
                double t30353 = t30352+1.0;
                double t30354 = log(t30353);
                double t30355 = a1f*c*t30252;
                double t30356 = t30355+1.0;
                double t30357 = c0f*t30354*t30356*2.0;
                double t30358 = c0p*t30267*t30269*2.0;
                double t30359 = gcaa*gcaa;
                double t30360 = 1/pow(rho_a[index],1.6E1/3.0);
                double t30361 = gamma_aa[index]*gcaa*t30324;
                double t30362 = t30361+1.0;
                double t30363 = gamma_aa[index]*gamma_aa[index];
                double t30364 = gamma_aa[index]*gcaa*t30324*2.0;
                double t30365 = t30360*t30363*t30359;
                double t30366 = t30364+t30365+1.0;
                double t30367 = 1/t30330;
                double t30368 = 1/pow(t30294,4.0/3.0);
                double t30369 = b1f*t30297;
                double t30370 = b3f*t30298;
                double t30371 = b4f*t30256*t30299;
                double t30372 = b2f*c*t30295;
                double t30373 = t30370+t30371+t30372+t30369;
                double t30374 = 1/t30373;
                double t30375 = t30374*t30276*(1.0/2.0);
                double t30376 = t30375+1.0;
                double t30377 = log(t30376);
                double t30378 = a1f*c*t30295;
                double t30379 = t30378+1.0;
                double t30381 = c0f*t30377*t30379*2.0;
                double t30380 = t30311-t30381;
                double t30382 = 1/(t30294*t30294);
                double t30409 = t30312*t30382;
                double t30383 = t30314-t30409;
                double t30384 = 1/pow(t30294,5.0/3.0);
                double t30385 = 1/sqrt(t30296);
                double t30386 = 1/t30307;
                double t30387 = 1/(t30304*t30304);
                double t30388 = b4p*t30256*t30384*(2.0/3.0);
                double t30389 = b2p*c*t30368*(1.0/3.0);
                double t30390 = b1p*c*t30385*t30368*(1.0/6.0);
                double t30391 = b3p*c*t30368*t30297*(1.0/2.0);
                double t30392 = t30390+t30391+t30388+t30389;
                double t30393 = t30310*t30392*t30386*t30387;
                double t30394 = 1/d2fz0;
                double t30395 = 1/Aa;
                double t30396 = b1a*t30297;
                double t30397 = b3a*t30298;
                double t30398 = b4a*t30256*t30299;
                double t30399 = b2a*c*t30295;
                double t30400 = t30396+t30397+t30398+t30399;
                double t30401 = 1/t30400;
                double t30402 = t30401*t30395*(1.0/2.0);
                double t30403 = t30402+1.0;
                double t30404 = log(t30403);
                double t30405 = a1a*c*t30295;
                double t30406 = t30405+1.0;
                double t30407 = 1/(t30294*t30294*t30294*t30294*t30294);
                double t30408 = pow(t30318,1.0/3.0);
                double t30410 = t30408*t30383*(4.0/3.0);
                double t30411 = pow(t30320,1.0/3.0);
                double t30412 = t30410-t30411*t30383*(4.0/3.0);
                double t30413 = t30316*t30317;
                double t30414 = t30413-1.0;
                double t30415 = 1/pow(rho_a[index],4.0/3.0);
                double t30416 = 1/pow(rho_a[index],5.0/3.0);
                double t30417 = 1/sqrt(t30253);
                double t30418 = 1/t30266;
                double t30419 = 1/(t30263*t30263);
                double t30420 = b4p*t30416*t30256*(2.0/3.0);
                double t30421 = b2p*c*t30415*(1.0/3.0);
                double t30422 = b1p*c*t30415*t30417*(1.0/6.0);
                double t30423 = b3p*c*t30415*t30254*(1.0/2.0);
                double t30424 = t30420+t30421+t30422+t30423;
                double t30425 = t30424*t30418*t30419*t30269;
                double t30426 = t30357-t30358;
                double t30427 = t30272*t30426*t30275;
                double t30428 = Aa*t30322*t30404*t30414*t30406*t30275*t30394*2.0;
                double t30429 = t30427+t30358;
                double t30430 = 1/t30362;
                double t30431 = 1/t30366;
                double t30432 = 1/(t30362*t30362);
                double t30433 = 1/(t30366*t30366);
                double t30434 = gcaa*t30324*2.0;
                double t30435 = gamma_aa[index]*t30360*t30359*2.0;
                double t30436 = t30434+t30435;
                double t30437 = gamma_aa[index]*gcaa*t30323*(1.6E1/3.0);
                double t30438 = t30336*t30363*t30359*(1.6E1/3.0);
                double t30439 = t30437+t30438;
                double t30440 = gx*gx;
                double t30441 = gamma_aa[index]*gx*t30324;
                double t30442 = t30441+1.0;
                double t30443 = gamma_aa[index]*gx*t30324*2.0;
                double t30444 = t30440*t30360*t30363;
                double t30445 = t30443+t30444+1.0;
                double t30446 = 1/t30353;
                double t30447 = 1/(t30350*t30350);
                double t30448 = b4f*t30416*t30256*(2.0/3.0);
                double t30449 = b2f*c*t30415*(1.0/3.0);
                double t30450 = b1f*c*t30415*t30417*(1.0/6.0);
                double t30451 = b3f*c*t30415*t30254*(1.0/2.0);
                double t30452 = t30450+t30451+t30448+t30449;
                double t30453 = a1f*c*c0f*t30415*t30354*(2.0/3.0);
                double t30454 = a1p*c*c0p*t30415*t30267*(2.0/3.0);
                double t30455 = ccaa1*gcaa*t30430*t30324;
                double t30456 = ccaa2*gamma_aa[index]*t30431*t30360*t30359*2.0;
                double t30457 = t30455+t30456-ccaa1*gamma_aa[index]*t30360*t30432*t30359-ccaa2*t30360*t30433*t30363* \
                   t30436*t30359;
                double t30458 = 1/t30442;
                double t30459 = 1/t30445;
                double t30460 = 1/(t30442*t30442);
                double t30461 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t30462 = 1/(t30445*t30445);
                double t30463 = gx*t30324*2.0;
                double t30464 = gamma_aa[index]*t30440*t30360*2.0;
                double t30465 = t30463+t30464;
                double t30466 = gamma_aa[index]*gx*t30323*(1.6E1/3.0);
                double t30467 = t30440*t30336*t30363*(1.6E1/3.0);
                double t30468 = t30466+t30467;
                v_rho_a_gamma_aa_[index] = -t30429*t30457+(ccab1*gcab*t30324*t30367*(1.0/2.0)-ccab1*t30331*t30324* \
                   t30328*t30337*(1.0/2.0)-ccab2*t30331*t30332*t30345*t30339+ccab2*t30331*t30324*t30328*t30338)*(-t30311+ \
                   t30427-t30428+t30358-rho_a[index]*(-t30425+t30454+t30272*t30275*(t30425+t30453-t30452*t30356*t30446* \
                   t30447-a1p*c*c0p*t30415*t30267*(2.0/3.0)))+t30294*(-t30393+t30322*t30316*t30317*t30275*(t30393-(1/ \
                   (t30373*t30373)*t30379*(b2f*c*t30368*(1.0/3.0)+b4f*t30256*t30384*(2.0/3.0)+b1f*c*t30385*t30368*(1.0/ \
                   6.0)+b3f*c*t30368*t30297*(1.0/2.0)))/t30376+a1f*c*c0f*t30368*t30377*(2.0/3.0)-a1p*c*c0p*t30308*t30368* \
                   (2.0/3.0))+a1p*c*c0p*t30308*t30368*(2.0/3.0)+t30412*t30316*t30317*t30380*t30275-t30322*t30317*t30380* \
                   t30407*t30275*4.0+t30312*t30313*t30322*t30316*t30380*t30275*4.0+Aa*t30322*t30404*t30406*t30275*t30394* \
                   (t30317*t30407*4.0-t30312*t30313*t30316*4.0)*2.0-Aa*t30412*t30404*t30414*t30406*t30275*t30394*2.0- \
                   (1/(t30400*t30400)*t30322*t30414*t30406*t30275*t30394*(b2a*c*t30368*(1.0/3.0)+b4a*t30256*t30384*(2.0/ \
                   3.0)+b1a*c*t30385*t30368*(1.0/6.0)+b3a*c*t30368*t30297*(1.0/2.0)))/t30403+Aa*a1a*c*t30322*t30404*t30414* \
                   t30275*t30394*t30368*(2.0/3.0))+t30322*t30316*t30317*t30380*t30275)-(rho_a[index]*(t30358+t30272*t30275* \
                   (t30357-c0p*t30267*t30269*2.0))+rho_b[index]*(t30293-t30272*t30275*(t30293-c0f*log((t30276*(1.0/2.0) \
                   )/(b1f*t30279+b3f*t30280+b2f*c*t30277+b4f*t30281*t30256)+1.0)*(a1f*c*t30277+1.0)*2.0))-t30294*(t30311+ \
                   t30428-t30322*t30316*t30317*t30380*t30275))*(ccab1*gcab*t30323*t30367*(4.0/3.0)-ccab2*t30331*t30332* \
                   t30339*(gcab*t30323*(8.0/3.0)+gamma_aa[index]*t30331*t30336*(4.0/3.0)+t30331*t30323*t30328*(8.0/3.0) \
                   )-ccab1*gamma_aa[index]*t30331*t30336*t30337*(4.0/3.0)+ccab2*gamma_aa[index]*t30331*t30336*t30338* \
                   (4.0/3.0)-ccab1*t30331*t30323*t30328*t30337*(4.0/3.0)+ccab2*t30331*t30323*t30328*t30338*(8.0/3.0)- \
                   ccab2*t30331*t30324*t30342*t30328*t30339+ccab2*t30331*t30332*t30342*1/(t30335*t30335*t30335)*t30345* \
                   2.0-ccab2*gamma_aa[index]*t30331*t30323*t30345*t30328*t30339*(8.0/3.0)+ccab1*gamma_aa[index]*gcab* \
                   1/(t30330*t30330*t30330)*t30331*t30336*t30328*(4.0/3.0))+c0*pow(rho_a[index],1.0/3.0)*(cx1*gx*t30324* \
                   t30458-cx1*gamma_aa[index]*t30440*t30360*t30460+cx2*gamma_aa[index]*t30440*t30360*t30459*2.0-cx2*t30440* \
                   t30360*t30363*t30462*t30465)*(4.0/3.0)-c0*pow(rho_a[index],4.0/3.0)*(cx1*gx*t30323*t30458*(8.0/3.0) \
                   -cx1*gamma_aa[index]*t30440*t30460*t30336*8.0+cx2*gamma_aa[index]*t30440*t30336*t30459*(3.2E1/3.0) \
                   -cx2*t30440*t30336*t30363*t30462*t30465*(1.6E1/3.0)+cx1*gx*t30440*1/(t30442*t30442*t30442)*t30461* \
                   t30363*(1.6E1/3.0)-cx2*t30440*t30360*t30363*t30462*(gx*t30323*(1.6E1/3.0)+gamma_aa[index]*t30440*t30336* \
                   (3.2E1/3.0))-cx2*gamma_aa[index]*t30440*t30360*t30462*t30468*2.0+cx2*t30440*t30360*t30363*1/(t30445* \
                   t30445*t30445)*t30465*t30468*2.0)+rho_a[index]*t30457*(-t30425+t30454+t30272*t30275*(t30425+t30453- \
                   t30454-t30452*t30356*t30446*t30447))+rho_a[index]*t30429*(ccaa1*gcaa*t30430*t30323*(8.0/3.0)-ccaa1* \
                   gamma_aa[index]*t30432*t30336*t30359*8.0+ccaa2*gamma_aa[index]*t30431*t30336*t30359*(3.2E1/3.0)-ccaa2* \
                   t30433*t30336*t30363*t30436*t30359*(1.6E1/3.0)+ccaa1*gcaa*1/(t30362*t30362*t30362)*t30461*t30363*t30359* \
                   (1.6E1/3.0)-ccaa2*t30360*t30433*t30363*t30359*(gcaa*t30323*(1.6E1/3.0)+gamma_aa[index]*t30336*t30359* \
                   (3.2E1/3.0))-ccaa2*gamma_aa[index]*t30360*t30433*t30439*t30359*2.0+ccaa2*t30360*t30363*t30436*1/(t30366* \
                   t30366*t30366)*t30439*t30359*2.0);
            } else if (rho_a[index] > cutoff_) {
                double t32044 = 1/pow(rho_a[index],1.0/3.0);
                double t32045 = c*t32044;
                double t32046 = sqrt(t32045);
                double t32047 = pow(t32045,3.0/2.0);
                double t32048 = c*c;
                double t32049 = 1/pow(rho_a[index],2.0/3.0);
                double t32050 = 1/c0p;
                double t32051 = b1p*t32046;
                double t32052 = b3p*t32047;
                double t32053 = b4p*t32048*t32049;
                double t32054 = b2p*c*t32044;
                double t32055 = t32051+t32052+t32053+t32054;
                double t32056 = 1/t32055;
                double t32057 = t32050*t32056*(1.0/2.0);
                double t32058 = t32057+1.0;
                double t32059 = log(t32058);
                double t32060 = a1p*c*t32044;
                double t32061 = t32060+1.0;
                double t32062 = 1/pow(rho_a[index],8.0/3.0);
                double t32063 = gcaa*gcaa;
                double t32064 = 1/pow(rho_a[index],1.6E1/3.0);
                double t32065 = gamma_aa[index]*gcaa*t32062;
                double t32066 = t32065+1.0;
                double t32067 = gamma_aa[index]*gamma_aa[index];
                double t32068 = gamma_aa[index]*gcaa*t32062*2.0;
                double t32069 = t32063*t32064*t32067;
                double t32070 = t32068+t32069+1.0;
                double t32071 = pow(2.0,1.0/3.0);
                double t32072 = t32071*2.0;
                double t32073 = t32072-2.0;
                double t32074 = two_13*2.0;
                double t32075 = t32074-2.0;
                double t32076 = 1/t32075;
                double t32077 = 1/c0f;
                double t32078 = b1f*t32046;
                double t32079 = b3f*t32047;
                double t32080 = b4f*t32048*t32049;
                double t32081 = b2f*c*t32044;
                double t32082 = t32080+t32081+t32078+t32079;
                double t32083 = 1/t32082;
                double t32084 = t32083*t32077*(1.0/2.0);
                double t32085 = t32084+1.0;
                double t32086 = log(t32085);
                double t32087 = a1f*c*t32044;
                double t32088 = t32087+1.0;
                double t32089 = c0f*t32086*t32088*2.0;
                double t32090 = c0p*t32061*t32059*2.0;
                double t32091 = 1/t32066;
                double t32092 = 1/t32070;
                double t32093 = 1/pow(rho_a[index],1.9E1/3.0);
                double t32094 = 1/(t32066*t32066);
                double t32095 = 1/pow(rho_a[index],1.1E1/3.0);
                double t32096 = 1/(t32070*t32070);
                double t32097 = gcaa*t32062*2.0;
                double t32098 = gamma_aa[index]*t32063*t32064*2.0;
                double t32099 = t32097+t32098;
                double t32100 = gamma_aa[index]*gcaa*t32095*(1.6E1/3.0);
                double t32101 = t32063*t32093*t32067*(1.6E1/3.0);
                double t32102 = t32100+t32101;
                double t32103 = gx*gx;
                double t32104 = gamma_aa[index]*gx*t32062;
                double t32105 = t32104+1.0;
                double t32106 = gamma_aa[index]*gx*t32062*2.0;
                double t32107 = t32103*t32064*t32067;
                double t32108 = t32106+t32107+1.0;
                double t32109 = 1/pow(rho_a[index],4.0/3.0);
                double t32110 = 1/pow(rho_a[index],5.0/3.0);
                double t32111 = 1/sqrt(t32045);
                double t32112 = 1/t32058;
                double t32113 = 1/(t32055*t32055);
                double t32114 = b4p*t32110*t32048*(2.0/3.0);
                double t32115 = b2p*c*t32109*(1.0/3.0);
                double t32116 = b1p*c*t32111*t32109*(1.0/6.0);
                double t32117 = b3p*c*t32046*t32109*(1.0/2.0);
                double t32118 = t32114+t32115+t32116+t32117;
                double t32119 = t32112*t32113*t32061*t32118;
                double t32120 = ccaa1*gcaa*t32062*t32091;
                double t32121 = ccaa2*gamma_aa[index]*t32063*t32064*t32092*2.0;
                double t32122 = t32120+t32121-ccaa1*gamma_aa[index]*t32063*t32064*t32094-ccaa2*t32063*t32064*t32067* \
                   t32096*t32099;
                double t32123 = 1/t32105;
                double t32124 = 1/t32108;
                double t32125 = 1/(t32105*t32105);
                double t32126 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t32127 = 1/(t32108*t32108);
                double t32128 = gx*t32062*2.0;
                double t32129 = gamma_aa[index]*t32103*t32064*2.0;
                double t32130 = t32128+t32129;
                double t32131 = gamma_aa[index]*gx*t32095*(1.6E1/3.0);
                double t32132 = t32103*t32093*t32067*(1.6E1/3.0);
                double t32133 = t32131+t32132;
                v_rho_a_gamma_aa_[index] = -t32122*(t32090+t32073*t32076*(t32089-c0p*t32061*t32059*2.0))+rho_a[index]* \
                   t32122*(-t32119+t32073*t32076*(t32119-(1/(t32082*t32082)*t32088*(b2f*c*t32109*(1.0/3.0)+b4f*t32110* \
                   t32048*(2.0/3.0)+b1f*c*t32111*t32109*(1.0/6.0)+b3f*c*t32046*t32109*(1.0/2.0)))/t32085+a1f*c*c0f*t32109* \
                   t32086*(2.0/3.0)-a1p*c*c0p*t32109*t32059*(2.0/3.0))+a1p*c*c0p*t32109*t32059*(2.0/3.0))+c0*pow(rho_a[index],1.0/ \
                   3.0)*(cx1*gx*t32123*t32062-cx1*gamma_aa[index]*t32103*t32125*t32064+cx2*gamma_aa[index]*t32103*t32124* \
                   t32064*2.0-cx2*t32103*t32130*t32064*t32127*t32067)*(4.0/3.0)+rho_a[index]*(t32090-t32073*t32076*(t32090- \
                   t32089))*(ccaa1*gcaa*t32091*t32095*(8.0/3.0)+ccaa2*gamma_aa[index]*t32063*t32092*t32093*(3.2E1/3.0) \
                   -ccaa1*gamma_aa[index]*t32063*t32093*t32094*8.0-ccaa2*t32063*t32093*t32067*t32096*t32099*(1.6E1/3.0) \
                   +ccaa1*gcaa*t32063*t32126*1/(t32066*t32066*t32066)*t32067*(1.6E1/3.0)-ccaa2*t32063*t32064*t32067*t32096* \
                   (gcaa*t32095*(1.6E1/3.0)+gamma_aa[index]*t32063*t32093*(3.2E1/3.0))-ccaa2*gamma_aa[index]*t32102*t32063* \
                   t32064*t32096*2.0+ccaa2*t32102*1/(t32070*t32070*t32070)*t32063*t32064*t32067*t32099*2.0)-c0*pow(rho_a[index],4.0/ \
                   3.0)*(cx1*gx*t32123*t32095*(8.0/3.0)-cx1*gamma_aa[index]*t32103*t32125*t32093*8.0+cx2*gamma_aa[index]* \
                   t32103*t32124*t32093*(3.2E1/3.0)-cx2*t32103*t32130*t32127*t32093*t32067*(1.6E1/3.0)+cx1*gx*t32103* \
                   1/(t32105*t32105*t32105)*t32126*t32067*(1.6E1/3.0)-cx2*t32103*t32064*t32127*t32067*(gx*t32095*(1.6E1/ \
                   3.0)+gamma_aa[index]*t32103*t32093*(3.2E1/3.0))-cx2*gamma_aa[index]*t32103*t32133*t32064*t32127*2.0+ \
                   cx2*t32103*t32130*t32133*1/(t32108*t32108*t32108)*t32064*t32067*2.0);
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t30471 = 1/pow(rho_a[index],1.0/3.0);
                double t30472 = c*t30471;
                double t30473 = sqrt(t30472);
                double t30474 = pow(t30472,3.0/2.0);
                double t30475 = c*c;
                double t30476 = 1/pow(rho_a[index],2.0/3.0);
                double t30477 = 1/c0p;
                double t30478 = b1p*t30473;
                double t30479 = b3p*t30474;
                double t30480 = b4p*t30475*t30476;
                double t30481 = b2p*c*t30471;
                double t30482 = t30480+t30481+t30478+t30479;
                double t30483 = 1/t30482;
                double t30484 = t30483*t30477*(1.0/2.0);
                double t30485 = t30484+1.0;
                double t30486 = log(t30485);
                double t30487 = a1p*c*t30471;
                double t30488 = t30487+1.0;
                double t30489 = pow(2.0,1.0/3.0);
                double t30490 = t30489*2.0;
                double t30491 = t30490-2.0;
                double t30492 = two_13*2.0;
                double t30493 = t30492-2.0;
                double t30494 = 1/t30493;
                double t30495 = 1/c0f;
                double t30496 = 1/pow(rho_b[index],1.0/3.0);
                double t30497 = c*t30496;
                double t30498 = sqrt(t30497);
                double t30499 = pow(t30497,3.0/2.0);
                double t30500 = 1/pow(rho_b[index],2.0/3.0);
                double t30501 = b1p*t30498;
                double t30502 = b3p*t30499;
                double t30503 = b4p*t30500*t30475;
                double t30504 = b2p*c*t30496;
                double t30505 = t30501+t30502+t30503+t30504;
                double t30506 = 1/t30505;
                double t30507 = t30506*t30477*(1.0/2.0);
                double t30508 = t30507+1.0;
                double t30509 = log(t30508);
                double t30510 = a1p*c*t30496;
                double t30511 = t30510+1.0;
                double t30512 = c0p*t30511*t30509*2.0;
                double t30513 = rho_a[index]+rho_b[index];
                double t30514 = 1/pow(t30513,1.0/3.0);
                double t30515 = c*t30514;
                double t30516 = sqrt(t30515);
                double t30517 = pow(t30515,3.0/2.0);
                double t30518 = 1/pow(t30513,2.0/3.0);
                double t30519 = b1p*t30516;
                double t30520 = b3p*t30517;
                double t30521 = b4p*t30518*t30475;
                double t30522 = b2p*c*t30514;
                double t30523 = t30520+t30521+t30522+t30519;
                double t30524 = 1/t30523;
                double t30525 = t30524*t30477*(1.0/2.0);
                double t30526 = t30525+1.0;
                double t30527 = log(t30526);
                double t30528 = a1p*c*t30514;
                double t30529 = t30528+1.0;
                double t30530 = c0p*t30527*t30529*2.0;
                double t30531 = rho_a[index]-rho_b[index];
                double t30532 = t30531*t30531;
                double t30533 = 1/t30513;
                double t30534 = t30531*t30533;
                double t30535 = 1/(t30513*t30513*t30513*t30513);
                double t30536 = t30532*t30532;
                double t30537 = t30534+1.0;
                double t30538 = pow(t30537,4.0/3.0);
                double t30539 = -t30534+1.0;
                double t30540 = pow(t30539,4.0/3.0);
                double t30541 = t30540+t30538-2.0;
                double t30542 = gcab*gcab;
                double t30543 = 1/pow(rho_a[index],1.1E1/3.0);
                double t30544 = 1/pow(rho_b[index],8.0/3.0);
                double t30545 = 1/pow(rho_a[index],8.0/3.0);
                double t30546 = gamma_aa[index]*t30545*(1.0/2.0);
                double t30547 = gamma_bb[index]*t30544*(1.0/2.0);
                double t30548 = t30546+t30547;
                double t30549 = gamma_aa[index]*gcab*t30543*(8.0/3.0);
                double t30550 = gamma_aa[index]*t30542*t30543*t30548*(8.0/3.0);
                double t30551 = t30550+t30549;
                double t30552 = t30548*t30548;
                double t30553 = t30542*t30552;
                double t30554 = gcab*t30548*2.0;
                double t30555 = t30553+t30554+1.0;
                double t30556 = gcab*t30544;
                double t30557 = t30542*t30544*t30548;
                double t30558 = t30556+t30557;
                double t30559 = 1/(t30555*t30555);
                double t30560 = gcab*t30548;
                double t30561 = t30560+1.0;
                double t30562 = c0p*t30486*t30488*2.0;
                double t30563 = 1/(t30561*t30561);
                double t30564 = 1/t30555;
                double t30565 = 1/pow(t30513,4.0/3.0);
                double t30566 = b1f*t30516;
                double t30567 = b3f*t30517;
                double t30568 = b4f*t30518*t30475;
                double t30569 = b2f*c*t30514;
                double t30570 = t30566+t30567+t30568+t30569;
                double t30571 = 1/t30570;
                double t30572 = t30571*t30495*(1.0/2.0);
                double t30573 = t30572+1.0;
                double t30574 = log(t30573);
                double t30575 = a1f*c*t30514;
                double t30576 = t30575+1.0;
                double t30578 = c0f*t30574*t30576*2.0;
                double t30577 = t30530-t30578;
                double t30579 = 1/(t30513*t30513);
                double t30606 = t30531*t30579;
                double t30580 = t30533-t30606;
                double t30581 = 1/pow(t30513,5.0/3.0);
                double t30582 = 1/sqrt(t30515);
                double t30583 = 1/t30526;
                double t30584 = 1/(t30523*t30523);
                double t30585 = b4p*t30581*t30475*(2.0/3.0);
                double t30586 = b2p*c*t30565*(1.0/3.0);
                double t30587 = b1p*c*t30582*t30565*(1.0/6.0);
                double t30588 = b3p*c*t30516*t30565*(1.0/2.0);
                double t30589 = t30585+t30586+t30587+t30588;
                double t30590 = t30529*t30583*t30584*t30589;
                double t30591 = 1/d2fz0;
                double t30592 = 1/Aa;
                double t30593 = b1a*t30516;
                double t30594 = b3a*t30517;
                double t30595 = b4a*t30518*t30475;
                double t30596 = b2a*c*t30514;
                double t30597 = t30593+t30594+t30595+t30596;
                double t30598 = 1/t30597;
                double t30599 = t30592*t30598*(1.0/2.0);
                double t30600 = t30599+1.0;
                double t30601 = log(t30600);
                double t30602 = a1a*c*t30514;
                double t30603 = t30602+1.0;
                double t30604 = 1/(t30513*t30513*t30513*t30513*t30513);
                double t30605 = pow(t30537,1.0/3.0);
                double t30607 = t30605*t30580*(4.0/3.0);
                double t30608 = pow(t30539,1.0/3.0);
                double t30609 = t30607-t30580*t30608*(4.0/3.0);
                double t30610 = t30535*t30536;
                double t30611 = t30610-1.0;
                double t30612 = a1f*c*t30471;
                double t30613 = t30612+1.0;
                double t30614 = b1f*t30473;
                double t30615 = b3f*t30474;
                double t30616 = b4f*t30475*t30476;
                double t30617 = b2f*c*t30471;
                double t30618 = t30614+t30615+t30616+t30617;
                double t30619 = 1/t30618;
                double t30620 = t30619*t30495*(1.0/2.0);
                double t30621 = t30620+1.0;
                double t30622 = 1/pow(rho_a[index],4.0/3.0);
                double t30623 = 1/pow(rho_a[index],5.0/3.0);
                double t30624 = 1/sqrt(t30472);
                double t30625 = log(t30621);
                double t30626 = 1/t30485;
                double t30627 = 1/(t30482*t30482);
                double t30628 = b4p*t30623*t30475*(2.0/3.0);
                double t30629 = b2p*c*t30622*(1.0/3.0);
                double t30630 = b1p*c*t30622*t30624*(1.0/6.0);
                double t30631 = b3p*c*t30622*t30473*(1.0/2.0);
                double t30632 = t30630+t30631+t30628+t30629;
                double t30633 = t30632*t30626*t30627*t30488;
                double t30634 = Aa*t30601*t30611*t30603*t30541*t30591*t30494*2.0;
                double t30635 = t30562-c0f*t30613*t30625*2.0;
                v_rho_a_gamma_bb_[index] = (rho_a[index]*(t30562-t30491*t30635*t30494)+rho_b[index]*(t30512-t30491* \
                   t30494*(t30512-c0f*log((t30495*(1.0/2.0))/(b1f*t30498+b3f*t30499+b2f*c*t30496+b4f*t30500*t30475)+1.0) \
                   *(a1f*c*t30496+1.0)*2.0))-t30513*(t30530+t30634-t30541*t30535*t30536*t30494*t30577))*(ccab2*t30542* \
                   t30551*t30544*t30548*t30559-ccab2*t30542*t30551*t30552*1/(t30555*t30555*t30555)*t30558*2.0+ccab1*gamma_aa[index]* \
                   t30542*t30543*t30544*t30563*(4.0/3.0)-ccab2*gamma_aa[index]*t30542*t30543*t30544*t30564*(4.0/3.0)+ \
                   ccab2*gamma_aa[index]*t30542*t30543*t30548*t30558*t30559*(8.0/3.0)+ccab2*gamma_aa[index]*(t30542*t30542) \
                   *t30543*t30552*t30544*t30559*(4.0/3.0)-ccab1*gamma_aa[index]*gcab*t30542*t30543*1/(t30561*t30561*t30561) \
                   *t30544*t30548*(4.0/3.0))-((ccab1*gcab*t30544*(1.0/2.0))/t30561-ccab1*t30542*t30544*t30563*t30548* \
                   (1.0/2.0)+ccab2*t30542*t30544*t30564*t30548-ccab2*t30542*t30552*t30558*t30559)*(t30530-t30562+t30634+ \
                   rho_a[index]*(-t30633+t30491*t30494*(t30633-(t30613*1/(t30618*t30618)*(b2f*c*t30622*(1.0/3.0)+b4f* \
                   t30623*t30475*(2.0/3.0)+b1f*c*t30622*t30624*(1.0/6.0)+b3f*c*t30622*t30473*(1.0/2.0)))/t30621+a1f*c* \
                   c0f*t30622*t30625*(2.0/3.0)-a1p*c*c0p*t30622*t30486*(2.0/3.0))+a1p*c*c0p*t30622*t30486*(2.0/3.0))- \
                   t30513*(-t30590+t30541*t30535*t30536*t30494*(t30590-(1/(t30570*t30570)*t30576*(b2f*c*t30565*(1.0/3.0) \
                   +b4f*t30581*t30475*(2.0/3.0)+b1f*c*t30582*t30565*(1.0/6.0)+b3f*c*t30516*t30565*(1.0/2.0)))/t30573+ \
                   a1f*c*c0f*t30565*t30574*(2.0/3.0)-a1p*c*c0p*t30527*t30565*(2.0/3.0))+a1p*c*c0p*t30527*t30565*(2.0/ \
                   3.0)-t30541*t30604*t30536*t30494*t30577*4.0+t30535*t30536*t30609*t30494*t30577+t30531*t30532*t30541* \
                   t30535*t30494*t30577*4.0+Aa*t30601*t30603*t30541*t30591*t30494*(t30604*t30536*4.0-t30531*t30532*t30535* \
                   4.0)*2.0-Aa*t30601*t30611*t30603*t30591*t30609*t30494*2.0-(t30611*t30603*t30541*t30591*t30494*1/(t30597* \
                   t30597)*(b2a*c*t30565*(1.0/3.0)+b4a*t30581*t30475*(2.0/3.0)+b1a*c*t30582*t30565*(1.0/6.0)+b3a*c*t30516* \
                   t30565*(1.0/2.0)))/t30600+Aa*a1a*c*t30601*t30611*t30541*t30591*t30565*t30494*(2.0/3.0))+t30491*t30635* \
                   t30494-t30541*t30535*t30536*t30494*t30577);
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t30637 = 1/pow(rho_a[index],1.0/3.0);
                double t30638 = c*t30637;
                double t30639 = sqrt(t30638);
                double t30640 = pow(t30638,3.0/2.0);
                double t30641 = c*c;
                double t30642 = 1/pow(rho_a[index],2.0/3.0);
                double t30643 = 1/c0p;
                double t30644 = b1p*t30639;
                double t30645 = b3p*t30640;
                double t30646 = b4p*t30641*t30642;
                double t30647 = b2p*c*t30637;
                double t30648 = t30644+t30645+t30646+t30647;
                double t30649 = 1/t30648;
                double t30650 = t30643*t30649*(1.0/2.0);
                double t30651 = t30650+1.0;
                double t30652 = log(t30651);
                double t30653 = a1p*c*t30637;
                double t30654 = t30653+1.0;
                double t30655 = pow(2.0,1.0/3.0);
                double t30656 = t30655*2.0;
                double t30657 = t30656-2.0;
                double t30658 = two_13*2.0;
                double t30659 = t30658-2.0;
                double t30660 = 1/t30659;
                double t30661 = 1/c0f;
                double t30662 = 1/pow(rho_b[index],1.0/3.0);
                double t30663 = c*t30662;
                double t30664 = sqrt(t30663);
                double t30665 = pow(t30663,3.0/2.0);
                double t30666 = 1/pow(rho_b[index],2.0/3.0);
                double t30667 = b1p*t30664;
                double t30668 = b3p*t30665;
                double t30669 = b4p*t30641*t30666;
                double t30670 = b2p*c*t30662;
                double t30671 = t30670+t30667+t30668+t30669;
                double t30672 = 1/t30671;
                double t30673 = t30643*t30672*(1.0/2.0);
                double t30674 = t30673+1.0;
                double t30675 = log(t30674);
                double t30676 = a1p*c*t30662;
                double t30677 = t30676+1.0;
                double t30678 = c0p*t30675*t30677*2.0;
                double t30679 = rho_a[index]+rho_b[index];
                double t30680 = 1/pow(t30679,1.0/3.0);
                double t30681 = c*t30680;
                double t30682 = sqrt(t30681);
                double t30683 = pow(t30681,3.0/2.0);
                double t30684 = 1/pow(t30679,2.0/3.0);
                double t30685 = b1p*t30682;
                double t30686 = b3p*t30683;
                double t30687 = b4p*t30641*t30684;
                double t30688 = b2p*c*t30680;
                double t30689 = t30685+t30686+t30687+t30688;
                double t30690 = 1/t30689;
                double t30691 = t30643*t30690*(1.0/2.0);
                double t30692 = t30691+1.0;
                double t30693 = log(t30692);
                double t30694 = a1p*c*t30680;
                double t30695 = t30694+1.0;
                double t30696 = c0p*t30693*t30695*2.0;
                double t30697 = rho_a[index]-rho_b[index];
                double t30698 = t30697*t30697;
                double t30699 = 1/t30679;
                double t30700 = t30697*t30699;
                double t30701 = 1/(t30679*t30679*t30679*t30679);
                double t30702 = t30698*t30698;
                double t30703 = t30700+1.0;
                double t30704 = pow(t30703,4.0/3.0);
                double t30705 = -t30700+1.0;
                double t30706 = pow(t30705,4.0/3.0);
                double t30707 = t30704+t30706-2.0;
                double t30708 = gcab*gcab;
                double t30709 = 1/pow(rho_b[index],1.1E1/3.0);
                double t30710 = 1/pow(rho_a[index],8.0/3.0);
                double t30711 = gamma_aa[index]*t30710*(1.0/2.0);
                double t30712 = 1/pow(rho_b[index],8.0/3.0);
                double t30713 = gamma_bb[index]*t30712*(1.0/2.0);
                double t30714 = t30711+t30713;
                double t30715 = gamma_bb[index]*gcab*t30709*(8.0/3.0);
                double t30716 = gamma_bb[index]*t30714*t30708*t30709*(8.0/3.0);
                double t30717 = t30715+t30716;
                double t30718 = t30714*t30714;
                double t30719 = t30708*t30718;
                double t30720 = gcab*t30714*2.0;
                double t30721 = t30720+t30719+1.0;
                double t30722 = gcab*t30710;
                double t30723 = t30710*t30714*t30708;
                double t30724 = t30722+t30723;
                double t30725 = 1/(t30721*t30721);
                double t30726 = gcab*t30714;
                double t30727 = t30726+1.0;
                double t30728 = c0p*t30652*t30654*2.0;
                double t30729 = 1/(t30727*t30727);
                double t30730 = 1/t30721;
                double t30731 = 1/pow(t30679,4.0/3.0);
                double t30732 = b1f*t30682;
                double t30733 = b3f*t30683;
                double t30734 = b4f*t30641*t30684;
                double t30735 = b2f*c*t30680;
                double t30736 = t30732+t30733+t30734+t30735;
                double t30737 = 1/t30736;
                double t30738 = t30661*t30737*(1.0/2.0);
                double t30739 = t30738+1.0;
                double t30740 = log(t30739);
                double t30741 = a1f*c*t30680;
                double t30742 = t30741+1.0;
                double t30744 = c0f*t30740*t30742*2.0;
                double t30743 = -t30744+t30696;
                double t30745 = 1/(t30679*t30679);
                double t30746 = t30745*t30697;
                double t30747 = t30746+t30699;
                double t30748 = t30744-t30696;
                double t30749 = 1/pow(t30679,5.0/3.0);
                double t30750 = 1/sqrt(t30681);
                double t30751 = 1/t30692;
                double t30752 = 1/(t30689*t30689);
                double t30753 = b4p*t30641*t30749*(2.0/3.0);
                double t30754 = b2p*c*t30731*(1.0/3.0);
                double t30755 = b1p*c*t30731*t30750*(1.0/6.0);
                double t30756 = b3p*c*t30731*t30682*(1.0/2.0);
                double t30757 = t30753+t30754+t30755+t30756;
                double t30758 = 1/d2fz0;
                double t30759 = 1/Aa;
                double t30760 = b1a*t30682;
                double t30761 = b3a*t30683;
                double t30762 = b4a*t30641*t30684;
                double t30763 = b2a*c*t30680;
                double t30764 = t30760+t30761+t30762+t30763;
                double t30765 = 1/t30764;
                double t30766 = t30765*t30759*(1.0/2.0);
                double t30767 = t30766+1.0;
                double t30768 = log(t30767);
                double t30769 = a1a*c*t30680;
                double t30770 = t30769+1.0;
                double t30771 = 1/(t30679*t30679*t30679*t30679*t30679);
                double t30772 = pow(t30703,1.0/3.0);
                double t30773 = t30772*t30747*(4.0/3.0);
                double t30774 = pow(t30705,1.0/3.0);
                double t30775 = t30773-t30747*t30774*(4.0/3.0);
                double t30776 = t30701*t30702;
                double t30777 = t30776-1.0;
                double t30778 = a1f*c*t30662;
                double t30779 = t30778+1.0;
                double t30780 = b1f*t30664;
                double t30781 = b3f*t30665;
                double t30782 = b4f*t30641*t30666;
                double t30783 = b2f*c*t30662;
                double t30784 = t30780+t30781+t30782+t30783;
                double t30785 = 1/t30784;
                double t30786 = t30661*t30785*(1.0/2.0);
                double t30787 = t30786+1.0;
                double t30788 = 1/pow(rho_b[index],4.0/3.0);
                double t30789 = 1/pow(rho_b[index],5.0/3.0);
                double t30790 = 1/sqrt(t30663);
                double t30791 = log(t30787);
                double t30792 = 1/t30674;
                double t30793 = 1/(t30671*t30671);
                double t30794 = b4p*t30641*t30789*(2.0/3.0);
                double t30795 = b2p*c*t30788*(1.0/3.0);
                double t30796 = b1p*c*t30790*t30788*(1.0/6.0);
                double t30797 = b3p*c*t30664*t30788*(1.0/2.0);
                double t30798 = t30794+t30795+t30796+t30797;
                double t30799 = t30792*t30793*t30677*t30798;
                double t30800 = t30678-c0f*t30791*t30779*2.0;
                double t30801 = Aa*t30660*t30707*t30770*t30758*t30768*t30777*2.0;
                double t30802 = a1p*c*c0p*t30731*t30693*(2.0/3.0);
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t30678-t30800*t30660*t30657)+rho_a[index]*(t30728-t30660* \
                   t30657*(t30728-c0f*log((t30661*(1.0/2.0))/(b1f*t30639+b3f*t30640+b2f*c*t30637+b4f*t30641*t30642)+1.0) \
                   *(a1f*c*t30637+1.0)*2.0))-t30679*(t30801+t30696-t30701*t30702*t30660*t30707*t30743))*(ccab2*t30710* \
                   t30714*t30725*t30708*t30717-ccab2*1/(t30721*t30721*t30721)*t30724*t30708*t30717*t30718*2.0-ccab2*gamma_bb[index]* \
                   t30710*t30730*t30708*t30709*(4.0/3.0)+ccab1*gamma_bb[index]*t30710*t30708*t30709*t30729*(4.0/3.0)+ \
                   ccab2*gamma_bb[index]*t30714*t30724*t30725*t30708*t30709*(8.0/3.0)+ccab2*gamma_bb[index]*t30710*t30725* \
                   (t30708*t30708)*t30709*t30718*(4.0/3.0)-ccab1*gamma_bb[index]*gcab*t30710*t30714*t30708*t30709*1/(t30727* \
                   t30727*t30727)*(4.0/3.0))-((ccab1*gcab*t30710*(1.0/2.0))/t30727+ccab2*t30710*t30730*t30714*t30708- \
                   ccab1*t30710*t30714*t30708*t30729*(1.0/2.0)-ccab2*t30724*t30725*t30708*t30718)*(t30801-t30678+t30696+ \
                   rho_b[index]*(-t30799+t30660*t30657*(t30799-(1/(t30784*t30784)*t30779*(b2f*c*t30788*(1.0/3.0)+b4f* \
                   t30641*t30789*(2.0/3.0)+b1f*c*t30790*t30788*(1.0/6.0)+b3f*c*t30664*t30788*(1.0/2.0)))/t30787+a1f*c* \
                   c0f*t30791*t30788*(2.0/3.0)-a1p*c*c0p*t30675*t30788*(2.0/3.0))+a1p*c*c0p*t30675*t30788*(2.0/3.0))- \
                   t30679*(t30802-t30751*t30752*t30757*t30695+t30701*t30702*t30660*t30748*t30775+t30702*t30660*t30707* \
                   t30771*t30748*4.0-t30701*t30702*t30660*t30707*(t30802-t30751*t30752*t30757*t30695+(t30742*1/(t30736* \
                   t30736)*(b2f*c*t30731*(1.0/3.0)+b4f*t30641*t30749*(2.0/3.0)+b1f*c*t30731*t30750*(1.0/6.0)+b3f*c*t30731* \
                   t30682*(1.0/2.0)))/t30739-a1f*c*c0f*t30731*t30740*(2.0/3.0))-t30701*t30660*t30707*t30743*t30697*t30698* \
                   4.0+Aa*t30660*t30707*t30770*t30758*t30768*(t30702*t30771*4.0+t30701*t30697*t30698*4.0)*2.0+Aa*t30660* \
                   t30770*t30775*t30758*t30768*t30777*2.0-(t30660*t30707*t30770*1/(t30764*t30764)*t30758*t30777*(b2a* \
                   c*t30731*(1.0/3.0)+b4a*t30641*t30749*(2.0/3.0)+b1a*c*t30731*t30750*(1.0/6.0)+b3a*c*t30731*t30682*(1.0/ \
                   2.0)))/t30767+Aa*a1a*c*t30731*t30660*t30707*t30758*t30768*t30777*(2.0/3.0))+t30800*t30660*t30657+t30701* \
                   t30702*t30660*t30707*t30748);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t30805 = 1/pow(rho_a[index],1.0/3.0);
                double t30806 = c*t30805;
                double t30807 = sqrt(t30806);
                double t30808 = pow(t30806,3.0/2.0);
                double t30809 = c*c;
                double t30810 = 1/pow(rho_a[index],2.0/3.0);
                double t30811 = 1/c0p;
                double t30812 = b1p*t30807;
                double t30813 = b3p*t30808;
                double t30814 = b4p*t30810*t30809;
                double t30815 = b2p*c*t30805;
                double t30816 = t30812+t30813+t30814+t30815;
                double t30817 = 1/t30816;
                double t30818 = t30811*t30817*(1.0/2.0);
                double t30819 = t30818+1.0;
                double t30820 = log(t30819);
                double t30821 = a1p*c*t30805;
                double t30822 = t30821+1.0;
                double t30823 = pow(2.0,1.0/3.0);
                double t30824 = t30823*2.0;
                double t30825 = t30824-2.0;
                double t30826 = two_13*2.0;
                double t30827 = t30826-2.0;
                double t30828 = 1/t30827;
                double t30829 = 1/c0f;
                double t30830 = 1/pow(rho_b[index],1.0/3.0);
                double t30831 = c*t30830;
                double t30832 = sqrt(t30831);
                double t30833 = pow(t30831,3.0/2.0);
                double t30834 = 1/pow(rho_b[index],2.0/3.0);
                double t30835 = b1p*t30832;
                double t30836 = b3p*t30833;
                double t30837 = b4p*t30834*t30809;
                double t30838 = b2p*c*t30830;
                double t30839 = t30835+t30836+t30837+t30838;
                double t30840 = 1/t30839;
                double t30841 = t30811*t30840*(1.0/2.0);
                double t30842 = t30841+1.0;
                double t30843 = log(t30842);
                double t30844 = a1p*c*t30830;
                double t30845 = t30844+1.0;
                double t30846 = c0p*t30843*t30845*2.0;
                double t30847 = rho_a[index]+rho_b[index];
                double t30848 = 1/pow(t30847,1.0/3.0);
                double t30849 = c*t30848;
                double t30850 = sqrt(t30849);
                double t30851 = pow(t30849,3.0/2.0);
                double t30852 = 1/pow(t30847,2.0/3.0);
                double t30853 = b1p*t30850;
                double t30854 = b3p*t30851;
                double t30855 = b4p*t30852*t30809;
                double t30856 = b2p*c*t30848;
                double t30857 = t30853+t30854+t30855+t30856;
                double t30858 = 1/t30857;
                double t30859 = t30811*t30858*(1.0/2.0);
                double t30860 = t30859+1.0;
                double t30861 = log(t30860);
                double t30862 = a1p*c*t30848;
                double t30863 = t30862+1.0;
                double t30864 = c0p*t30861*t30863*2.0;
                double t30865 = rho_a[index]-rho_b[index];
                double t30866 = t30865*t30865;
                double t30867 = 1/t30847;
                double t30868 = t30865*t30867;
                double t30869 = 1/(t30847*t30847*t30847*t30847);
                double t30870 = t30866*t30866;
                double t30871 = t30868+1.0;
                double t30872 = pow(t30871,4.0/3.0);
                double t30873 = -t30868+1.0;
                double t30874 = pow(t30873,4.0/3.0);
                double t30875 = t30872+t30874-2.0;
                double t30876 = 1/pow(rho_b[index],1.1E1/3.0);
                double t30877 = 1/pow(rho_a[index],8.0/3.0);
                double t30878 = gamma_aa[index]*t30877*(1.0/2.0);
                double t30879 = 1/pow(rho_b[index],8.0/3.0);
                double t30880 = gamma_bb[index]*t30879*(1.0/2.0);
                double t30881 = t30880+t30878;
                double t30882 = gcab*t30881;
                double t30883 = t30882+1.0;
                double t30884 = gcab*gcab;
                double t30885 = t30881*t30881;
                double t30886 = t30884*t30885;
                double t30887 = gcab*t30881*2.0;
                double t30888 = t30886+t30887+1.0;
                double t30889 = 1/pow(rho_b[index],1.9E1/3.0);
                double t30890 = 1/(t30883*t30883);
                double t30891 = 1/t30888;
                double t30892 = 1/(t30888*t30888);
                double t30893 = gamma_bb[index]*gcab*t30876*(8.0/3.0);
                double t30894 = gamma_bb[index]*t30881*t30884*t30876*(8.0/3.0);
                double t30895 = t30893+t30894;
                double t30896 = gcab*t30879;
                double t30897 = t30881*t30884*t30879;
                double t30898 = t30896+t30897;
                double t30899 = b1f*t30832;
                double t30900 = b3f*t30833;
                double t30901 = b4f*t30834*t30809;
                double t30902 = b2f*c*t30830;
                double t30903 = t30900+t30901+t30902+t30899;
                double t30904 = 1/t30903;
                double t30905 = t30904*t30829*(1.0/2.0);
                double t30906 = t30905+1.0;
                double t30907 = log(t30906);
                double t30908 = a1f*c*t30830;
                double t30909 = t30908+1.0;
                double t30979 = c0f*t30907*t30909*2.0;
                double t30910 = t30846-t30979;
                double t30980 = t30910*t30825*t30828;
                double t30911 = -t30980+t30846;
                double t30912 = gcaa*gcaa;
                double t30913 = 1/pow(rho_b[index],1.6E1/3.0);
                double t30914 = gamma_bb[index]*gcaa*t30879;
                double t30915 = t30914+1.0;
                double t30916 = gamma_bb[index]*gamma_bb[index];
                double t30917 = gamma_bb[index]*gcaa*t30879*2.0;
                double t30918 = t30912*t30913*t30916;
                double t30919 = t30917+t30918+1.0;
                double t30920 = 1/t30883;
                double t30921 = 1/pow(t30847,4.0/3.0);
                double t30922 = b1f*t30850;
                double t30923 = b3f*t30851;
                double t30924 = b4f*t30852*t30809;
                double t30925 = b2f*c*t30848;
                double t30926 = t30922+t30923+t30924+t30925;
                double t30927 = 1/t30926;
                double t30928 = t30927*t30829*(1.0/2.0);
                double t30929 = t30928+1.0;
                double t30930 = log(t30929);
                double t30931 = a1f*c*t30848;
                double t30932 = t30931+1.0;
                double t30934 = c0f*t30930*t30932*2.0;
                double t30933 = -t30934+t30864;
                double t30935 = 1/(t30847*t30847);
                double t30936 = t30935*t30865;
                double t30937 = t30936+t30867;
                double t30938 = t30934-t30864;
                double t30939 = 1/pow(t30847,5.0/3.0);
                double t30940 = 1/sqrt(t30849);
                double t30941 = 1/t30860;
                double t30942 = 1/(t30857*t30857);
                double t30943 = b4p*t30809*t30939*(2.0/3.0);
                double t30944 = b2p*c*t30921*(1.0/3.0);
                double t30945 = b1p*c*t30921*t30940*(1.0/6.0);
                double t30946 = b3p*c*t30921*t30850*(1.0/2.0);
                double t30947 = t30943+t30944+t30945+t30946;
                double t30948 = 1/d2fz0;
                double t30949 = 1/Aa;
                double t30950 = b1a*t30850;
                double t30951 = b3a*t30851;
                double t30952 = b4a*t30852*t30809;
                double t30953 = b2a*c*t30848;
                double t30954 = t30950+t30951+t30952+t30953;
                double t30955 = 1/t30954;
                double t30956 = t30955*t30949*(1.0/2.0);
                double t30957 = t30956+1.0;
                double t30958 = log(t30957);
                double t30959 = a1a*c*t30848;
                double t30960 = t30959+1.0;
                double t30961 = 1/(t30847*t30847*t30847*t30847*t30847);
                double t30962 = pow(t30871,1.0/3.0);
                double t30963 = t30962*t30937*(4.0/3.0);
                double t30964 = pow(t30873,1.0/3.0);
                double t30965 = t30963-t30937*t30964*(4.0/3.0);
                double t30966 = t30870*t30869;
                double t30967 = t30966-1.0;
                double t30968 = 1/pow(rho_b[index],4.0/3.0);
                double t30969 = 1/pow(rho_b[index],5.0/3.0);
                double t30970 = 1/sqrt(t30831);
                double t30971 = 1/t30842;
                double t30972 = 1/(t30839*t30839);
                double t30973 = b4p*t30809*t30969*(2.0/3.0);
                double t30974 = b2p*c*t30968*(1.0/3.0);
                double t30975 = b1p*c*t30970*t30968*(1.0/6.0);
                double t30976 = b3p*c*t30832*t30968*(1.0/2.0);
                double t30977 = t30973+t30974+t30975+t30976;
                double t30978 = t30845*t30971*t30972*t30977;
                double t30981 = Aa*t30960*t30828*t30875*t30948*t30958*t30967*2.0;
                double t30982 = a1p*c*c0p*t30921*t30861*(2.0/3.0);
                double t30983 = 1/t30915;
                double t30984 = 1/t30919;
                double t30985 = 1/(t30915*t30915);
                double t30986 = 1/(t30919*t30919);
                double t30987 = gcaa*t30879*2.0;
                double t30988 = gamma_bb[index]*t30912*t30913*2.0;
                double t30989 = t30987+t30988;
                double t30990 = gamma_bb[index]*gcaa*t30876*(1.6E1/3.0);
                double t30991 = t30912*t30916*t30889*(1.6E1/3.0);
                double t30992 = t30990+t30991;
                double t30993 = gx*gx;
                double t30994 = gamma_bb[index]*gx*t30879;
                double t30995 = t30994+1.0;
                double t30996 = gamma_bb[index]*gx*t30879*2.0;
                double t30997 = t30913*t30916*t30993;
                double t30998 = t30996+t30997+1.0;
                double t30999 = 1/t30906;
                double t31000 = 1/(t30903*t30903);
                double t31001 = b4f*t30809*t30969*(2.0/3.0);
                double t31002 = b2f*c*t30968*(1.0/3.0);
                double t31003 = b1f*c*t30970*t30968*(1.0/6.0);
                double t31004 = b3f*c*t30832*t30968*(1.0/2.0);
                double t31005 = t31001+t31002+t31003+t31004;
                double t31006 = a1f*c*c0f*t30907*t30968*(2.0/3.0);
                double t31007 = a1p*c*c0p*t30843*t30968*(2.0/3.0);
                double t31008 = ccaa1*gcaa*t30983*t30879;
                double t31009 = ccaa2*gamma_bb[index]*t30912*t30913*t30984*2.0;
                double t31010 = t31008+t31009-ccaa1*gamma_bb[index]*t30912*t30913*t30985-ccaa2*t30912*t30913*t30916* \
                   t30986*t30989;
                double t31011 = 1/t30995;
                double t31012 = 1/t30998;
                double t31013 = 1/(t30995*t30995);
                double t31014 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t31015 = 1/(t30998*t30998);
                double t31016 = gx*t30879*2.0;
                double t31017 = gamma_bb[index]*t30913*t30993*2.0;
                double t31018 = t31016+t31017;
                double t31019 = gamma_bb[index]*gx*t30876*(1.6E1/3.0);
                double t31020 = t30916*t30993*t30889*(1.6E1/3.0);
                double t31021 = t31020+t31019;
                v_rho_b_gamma_bb_[index] = (-rho_b[index]*t30911+t30847*(t30864+t30981-t30870*t30933*t30828*t30875* \
                   t30869)+rho_a[index]*(t30825*t30828*(c0p*t30820*t30822*2.0-c0f*log((t30829*(1.0/2.0))/(b1f*t30807+ \
                   b3f*t30808+b2f*c*t30805+b4f*t30810*t30809)+1.0)*(a1f*c*t30805+1.0)*2.0)-c0p*t30820*t30822*2.0))*(ccab1* \
                   gcab*t30920*t30876*(4.0/3.0)-ccab2*t30892*t30884*t30885*(gcab*t30876*(8.0/3.0)+gamma_bb[index]*t30884* \
                   t30889*(4.0/3.0)+t30881*t30884*t30876*(8.0/3.0))-ccab1*gamma_bb[index]*t30890*t30884*t30889*(4.0/3.0) \
                   +ccab2*gamma_bb[index]*t30891*t30884*t30889*(4.0/3.0)-ccab1*t30881*t30890*t30884*t30876*(4.0/3.0)+ \
                   ccab2*t30881*t30891*t30884*t30876*(8.0/3.0)-ccab2*t30881*t30892*t30884*t30895*t30879+ccab2*t30884* \
                   t30885*t30895*1/(t30888*t30888*t30888)*t30898*2.0-ccab2*gamma_bb[index]*t30881*t30892*t30884*t30876* \
                   t30898*(8.0/3.0)+ccab1*gamma_bb[index]*gcab*t30881*1/(t30883*t30883*t30883)*t30884*t30889*(4.0/3.0) \
                   )-(ccab1*gcab*t30920*t30879*(1.0/2.0)-ccab1*t30881*t30890*t30884*t30879*(1.0/2.0)+ccab2*t30881*t30891* \
                   t30884*t30879-ccab2*t30892*t30884*t30885*t30898)*(t30980-t30846+t30864+t30981+rho_b[index]*(-t30978+ \
                   t31007+t30825*t30828*(t30978+t31006-t30909*t30999*t31000*t31005-a1p*c*c0p*t30843*t30968*(2.0/3.0)) \
                   )-t30847*(t30982-t30941*t30942*t30863*t30947+t30870*t30961*t30828*t30875*t30938*4.0+t30870*t30828* \
                   t30938*t30965*t30869-t30870*t30828*t30875*t30869*(t30982-t30941*t30942*t30863*t30947+(t30932*1/(t30926* \
                   t30926)*(b2f*c*t30921*(1.0/3.0)+b4f*t30809*t30939*(2.0/3.0)+b1f*c*t30921*t30940*(1.0/6.0)+b3f*c*t30921* \
                   t30850*(1.0/2.0)))/t30929-a1f*c*c0f*t30921*t30930*(2.0/3.0))-t30933*t30828*t30865*t30866*t30875*t30869* \
                   4.0+Aa*t30960*t30828*t30875*t30948*t30958*(t30870*t30961*4.0+t30865*t30866*t30869*4.0)*2.0+Aa*t30960* \
                   t30828*t30965*t30948*t30958*t30967*2.0-(t30960*t30828*1/(t30954*t30954)*t30875*t30948*t30967*(b2a* \
                   c*t30921*(1.0/3.0)+b4a*t30809*t30939*(2.0/3.0)+b1a*c*t30921*t30940*(1.0/6.0)+b3a*c*t30921*t30850*(1.0/ \
                   2.0)))/t30957+Aa*a1a*c*t30921*t30828*t30875*t30948*t30958*t30967*(2.0/3.0))+t30870*t30828*t30875*t30938* \
                   t30869)-t30911*t31010+c0*pow(rho_b[index],1.0/3.0)*(cx1*gx*t30879*t31011-cx1*gamma_bb[index]*t30913* \
                   t30993*t31013+cx2*gamma_bb[index]*t30913*t30993*t31012*2.0-cx2*t30913*t30916*t30993*t31015*t31018) \
                   *(4.0/3.0)-c0*pow(rho_b[index],4.0/3.0)*(cx1*gx*t30876*t31011*(8.0/3.0)-cx1*gamma_bb[index]*t30993* \
                   t30889*t31013*8.0+cx2*gamma_bb[index]*t30993*t30889*t31012*(3.2E1/3.0)-cx2*t30916*t30993*t30889*t31015* \
                   t31018*(1.6E1/3.0)+cx1*gx*t30916*t30993*1/(t30995*t30995*t30995)*t31014*(1.6E1/3.0)-cx2*t30913*t30916* \
                   t30993*t31015*(gx*t30876*(1.6E1/3.0)+gamma_bb[index]*t30993*t30889*(3.2E1/3.0))-cx2*gamma_bb[index]* \
                   t30913*t30993*t31021*t31015*2.0+cx2*t30913*t30916*t30993*1/(t30998*t30998*t30998)*t31021*t31018*2.0) \
                   +rho_b[index]*t31010*(-t30978+t31007+t30825*t30828*(t30978+t31006-t31007-t30909*t30999*t31000*t31005) \
                   )+rho_b[index]*t30911*(ccaa1*gcaa*t30983*t30876*(8.0/3.0)-ccaa1*gamma_bb[index]*t30912*t30985*t30889* \
                   8.0+ccaa2*gamma_bb[index]*t30912*t30984*t30889*(3.2E1/3.0)-ccaa2*t30912*t30916*t30986*t30889*t30989* \
                   (1.6E1/3.0)+ccaa1*gcaa*t30912*1/(t30915*t30915*t30915)*t30916*t31014*(1.6E1/3.0)-ccaa2*t30912*t30913* \
                   t30916*t30986*(gcaa*t30876*(1.6E1/3.0)+gamma_bb[index]*t30912*t30889*(3.2E1/3.0))-ccaa2*gamma_bb[index]* \
                   t30912*t30913*t30992*t30986*2.0+ccaa2*t30912*t30913*t30916*1/(t30919*t30919*t30919)*t30992*t30989* \
                   2.0);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t31638 = 1/pow(rho_b[index],1.0/3.0);
                double t31639 = c*t31638;
                double t31640 = sqrt(t31639);
                double t31641 = pow(t31639,3.0/2.0);
                double t31642 = c*c;
                double t31643 = 1/pow(rho_b[index],2.0/3.0);
                double t31644 = 1/c0p;
                double t31645 = b1p*t31640;
                double t31646 = b3p*t31641;
                double t31647 = b4p*t31642*t31643;
                double t31648 = b2p*c*t31638;
                double t31649 = t31645+t31646+t31647+t31648;
                double t31650 = 1/t31649;
                double t31651 = t31650*t31644*(1.0/2.0);
                double t31652 = t31651+1.0;
                double t31653 = log(t31652);
                double t31654 = a1p*c*t31638;
                double t31655 = t31654+1.0;
                double t31656 = 1/pow(rho_b[index],8.0/3.0);
                double t31657 = gcaa*gcaa;
                double t31658 = 1/pow(rho_b[index],1.6E1/3.0);
                double t31659 = gamma_bb[index]*gcaa*t31656;
                double t31660 = t31659+1.0;
                double t31661 = gamma_bb[index]*gamma_bb[index];
                double t31662 = gamma_bb[index]*gcaa*t31656*2.0;
                double t31663 = t31661*t31657*t31658;
                double t31664 = t31662+t31663+1.0;
                double t31665 = pow(2.0,1.0/3.0);
                double t31666 = t31665*2.0;
                double t31667 = t31666-2.0;
                double t31668 = two_13*2.0;
                double t31669 = t31668-2.0;
                double t31670 = 1/t31669;
                double t31671 = 1/c0f;
                double t31672 = b1f*t31640;
                double t31673 = b3f*t31641;
                double t31674 = b4f*t31642*t31643;
                double t31675 = b2f*c*t31638;
                double t31676 = t31672+t31673+t31674+t31675;
                double t31677 = 1/t31676;
                double t31678 = t31671*t31677*(1.0/2.0);
                double t31679 = t31678+1.0;
                double t31680 = log(t31679);
                double t31681 = a1f*c*t31638;
                double t31682 = t31681+1.0;
                double t31683 = c0f*t31680*t31682*2.0;
                double t31684 = c0p*t31653*t31655*2.0;
                double t31685 = 1/t31660;
                double t31686 = 1/t31664;
                double t31687 = 1/pow(rho_b[index],1.9E1/3.0);
                double t31688 = 1/(t31660*t31660);
                double t31689 = 1/pow(rho_b[index],1.1E1/3.0);
                double t31690 = 1/(t31664*t31664);
                double t31691 = gcaa*t31656*2.0;
                double t31692 = gamma_bb[index]*t31657*t31658*2.0;
                double t31693 = t31691+t31692;
                double t31694 = gamma_bb[index]*gcaa*t31689*(1.6E1/3.0);
                double t31695 = t31661*t31657*t31687*(1.6E1/3.0);
                double t31696 = t31694+t31695;
                double t31697 = gx*gx;
                double t31698 = gamma_bb[index]*gx*t31656;
                double t31699 = t31698+1.0;
                double t31700 = gamma_bb[index]*gx*t31656*2.0;
                double t31701 = t31661*t31658*t31697;
                double t31702 = t31700+t31701+1.0;
                double t31703 = 1/pow(rho_b[index],4.0/3.0);
                double t31704 = 1/pow(rho_b[index],5.0/3.0);
                double t31705 = 1/sqrt(t31639);
                double t31706 = 1/t31652;
                double t31707 = 1/(t31649*t31649);
                double t31708 = b4p*t31704*t31642*(2.0/3.0);
                double t31709 = b2p*c*t31703*(1.0/3.0);
                double t31710 = b1p*c*t31703*t31705*(1.0/6.0);
                double t31711 = b3p*c*t31640*t31703*(1.0/2.0);
                double t31712 = t31710+t31711+t31708+t31709;
                double t31713 = t31712*t31706*t31707*t31655;
                double t31714 = ccaa1*gcaa*t31656*t31685;
                double t31715 = ccaa2*gamma_bb[index]*t31657*t31658*t31686*2.0;
                double t31716 = t31714+t31715-ccaa1*gamma_bb[index]*t31657*t31658*t31688-ccaa2*t31661*t31690*t31657* \
                   t31693*t31658;
                double t31717 = 1/t31699;
                double t31718 = 1/t31702;
                double t31719 = 1/(t31699*t31699);
                double t31720 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t31721 = 1/(t31702*t31702);
                double t31722 = gx*t31656*2.0;
                double t31723 = gamma_bb[index]*t31658*t31697*2.0;
                double t31724 = t31722+t31723;
                double t31725 = gamma_bb[index]*gx*t31689*(1.6E1/3.0);
                double t31726 = t31661*t31687*t31697*(1.6E1/3.0);
                double t31727 = t31725+t31726;
                v_rho_b_gamma_bb_[index] = -t31716*(t31684+t31670*t31667*(t31683-c0p*t31653*t31655*2.0))+rho_b[index]* \
                   t31716*(-t31713+t31670*t31667*(t31713-(t31682*1/(t31676*t31676)*(b2f*c*t31703*(1.0/3.0)+b4f*t31704* \
                   t31642*(2.0/3.0)+b1f*c*t31703*t31705*(1.0/6.0)+b3f*c*t31640*t31703*(1.0/2.0)))/t31679+a1f*c*c0f*t31703* \
                   t31680*(2.0/3.0)-a1p*c*c0p*t31703*t31653*(2.0/3.0))+a1p*c*c0p*t31703*t31653*(2.0/3.0))+c0*pow(rho_b[index],1.0/ \
                   3.0)*(cx1*gx*t31717*t31656-cx1*gamma_bb[index]*t31719*t31658*t31697+cx2*gamma_bb[index]*t31718*t31658* \
                   t31697*2.0-cx2*t31721*t31661*t31724*t31658*t31697)*(4.0/3.0)+rho_b[index]*(t31684+t31670*t31667*(t31683- \
                   t31684))*(ccaa1*gcaa*t31685*t31689*(8.0/3.0)+ccaa2*gamma_bb[index]*t31657*t31686*t31687*(3.2E1/3.0) \
                   -ccaa1*gamma_bb[index]*t31657*t31687*t31688*8.0-ccaa2*t31661*t31690*t31657*t31693*t31687*(1.6E1/3.0) \
                   +ccaa1*gcaa*t31720*1/(t31660*t31660*t31660)*t31661*t31657*(1.6E1/3.0)-ccaa2*t31661*t31690*t31657*t31658* \
                   (gcaa*t31689*(1.6E1/3.0)+gamma_bb[index]*t31657*t31687*(3.2E1/3.0))-ccaa2*gamma_bb[index]*t31690*t31657* \
                   t31658*t31696*2.0+ccaa2*t31661*1/(t31664*t31664*t31664)*t31657*t31693*t31658*t31696*2.0)-c0*pow(rho_b[index],4.0/ \
                   3.0)*(cx1*gx*t31717*t31689*(8.0/3.0)-cx1*gamma_bb[index]*t31719*t31687*t31697*8.0+cx2*gamma_bb[index]* \
                   t31718*t31687*t31697*(3.2E1/3.0)-cx2*t31721*t31661*t31724*t31687*t31697*(1.6E1/3.0)+cx1*gx*t31720* \
                   t31661*t31697*1/(t31699*t31699*t31699)*(1.6E1/3.0)-cx2*t31721*t31661*t31658*t31697*(gx*t31689*(1.6E1/ \
                   3.0)+gamma_bb[index]*t31687*t31697*(3.2E1/3.0))-cx2*gamma_bb[index]*t31721*t31727*t31658*t31697*2.0+ \
                   cx2*1/(t31702*t31702*t31702)*t31661*t31724*t31727*t31658*t31697*2.0);
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t31023 = 1/pow(rho_a[index],1.0/3.0);
                double t31024 = c*t31023;
                double t31025 = sqrt(t31024);
                double t31026 = pow(t31024,3.0/2.0);
                double t31027 = c*c;
                double t31028 = 1/pow(rho_a[index],2.0/3.0);
                double t31029 = 1/c0p;
                double t31030 = b1p*t31025;
                double t31031 = b3p*t31026;
                double t31032 = b4p*t31027*t31028;
                double t31033 = b2p*c*t31023;
                double t31034 = t31030+t31031+t31032+t31033;
                double t31035 = 1/t31034;
                double t31036 = t31035*t31029*(1.0/2.0);
                double t31037 = t31036+1.0;
                double t31038 = log(t31037);
                double t31039 = a1p*c*t31023;
                double t31040 = t31039+1.0;
                double t31041 = pow(2.0,1.0/3.0);
                double t31042 = t31041*2.0;
                double t31043 = t31042-2.0;
                double t31044 = two_13*2.0;
                double t31045 = t31044-2.0;
                double t31046 = 1/t31045;
                double t31047 = 1/c0f;
                double t31048 = 1/pow(rho_b[index],1.0/3.0);
                double t31049 = c*t31048;
                double t31050 = sqrt(t31049);
                double t31051 = pow(t31049,3.0/2.0);
                double t31052 = 1/pow(rho_b[index],2.0/3.0);
                double t31053 = b1p*t31050;
                double t31054 = b3p*t31051;
                double t31055 = b4p*t31052*t31027;
                double t31056 = b2p*c*t31048;
                double t31057 = t31053+t31054+t31055+t31056;
                double t31058 = 1/t31057;
                double t31059 = t31029*t31058*(1.0/2.0);
                double t31060 = t31059+1.0;
                double t31061 = log(t31060);
                double t31062 = a1p*c*t31048;
                double t31063 = t31062+1.0;
                double t31064 = c0p*t31061*t31063*2.0;
                double t31065 = rho_a[index]+rho_b[index];
                double t31066 = 1/pow(t31065,1.0/3.0);
                double t31067 = c*t31066;
                double t31068 = sqrt(t31067);
                double t31069 = pow(t31067,3.0/2.0);
                double t31070 = 1/pow(t31065,2.0/3.0);
                double t31071 = b1p*t31068;
                double t31072 = b3p*t31069;
                double t31073 = b4p*t31070*t31027;
                double t31074 = b2p*c*t31066;
                double t31075 = t31071+t31072+t31073+t31074;
                double t31076 = 1/t31075;
                double t31077 = t31029*t31076*(1.0/2.0);
                double t31078 = t31077+1.0;
                double t31079 = log(t31078);
                double t31080 = a1p*c*t31066;
                double t31081 = t31080+1.0;
                double t31082 = c0p*t31081*t31079*2.0;
                double t31083 = rho_a[index]-rho_b[index];
                double t31084 = t31083*t31083;
                double t31085 = 1/t31065;
                double t31086 = t31083*t31085;
                double t31087 = 1/(t31065*t31065*t31065*t31065);
                double t31088 = t31084*t31084;
                double t31089 = t31086+1.0;
                double t31090 = pow(t31089,4.0/3.0);
                double t31091 = -t31086+1.0;
                double t31092 = pow(t31091,4.0/3.0);
                double t31093 = t31090+t31092-2.0;
                double t31094 = gcab*gcab;
                double t31095 = 1/pow(rho_a[index],1.6E1/3.0);
                double t31096 = 1/pow(rho_a[index],8.0/3.0);
                double t31097 = gamma_aa[index]*t31096*(1.0/2.0);
                double t31098 = 1/pow(rho_b[index],8.0/3.0);
                double t31099 = gamma_bb[index]*t31098*(1.0/2.0);
                double t31100 = t31097+t31099;
                double t31101 = gcab*t31100;
                double t31102 = t31101+1.0;
                double t31103 = t31100*t31100;
                double t31104 = t31103*t31094;
                double t31105 = gcab*t31100*2.0;
                double t31106 = t31104+t31105+1.0;
                double t31108 = gcab*t31096;
                double t31109 = t31100*t31094*t31096;
                double t31107 = t31108+t31109;
                double t31110 = 1/(t31106*t31106);
                double t31111 = b1f*t31025;
                double t31112 = b3f*t31026;
                double t31113 = b4f*t31027*t31028;
                double t31114 = b2f*c*t31023;
                double t31115 = t31111+t31112+t31113+t31114;
                double t31116 = 1/t31115;
                double t31117 = t31116*t31047*(1.0/2.0);
                double t31118 = t31117+1.0;
                double t31119 = log(t31118);
                double t31120 = a1f*c*t31023;
                double t31121 = t31120+1.0;
                double t31122 = c0f*t31121*t31119*2.0;
                double t31123 = c0p*t31040*t31038*2.0;
                double t31124 = gcaa*gcaa;
                double t31125 = gamma_aa[index]*gcaa*t31096;
                double t31126 = t31125+1.0;
                double t31127 = gamma_aa[index]*gamma_aa[index];
                double t31128 = gamma_aa[index]*gcaa*t31096*2.0;
                double t31129 = t31124*t31127*t31095;
                double t31130 = t31128+t31129+1.0;
                double t31132 = gcaa*t31096*2.0;
                double t31133 = gamma_aa[index]*t31124*t31095*2.0;
                double t31131 = t31132+t31133;
                double t31134 = 1/(t31130*t31130);
                double t31135 = gx*gx;
                double t31136 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t31137 = gamma_aa[index]*gx*t31096;
                double t31138 = t31137+1.0;
                double t31139 = 1/pow(rho_a[index],3.2E1/3.0);
                double t31140 = gamma_aa[index]*gx*t31096*2.0;
                double t31141 = t31135*t31127*t31095;
                double t31142 = t31140+t31141+1.0;
                double t31144 = gx*t31096*2.0;
                double t31145 = gamma_aa[index]*t31135*t31095*2.0;
                double t31143 = t31144+t31145;
                double t31146 = 1/(t31142*t31142);
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t31123+t31043*t31046*(t31122-c0p*t31040*t31038*2.0) \
                   )+rho_b[index]*(t31064-t31043*t31046*(t31064-c0f*log((t31047*(1.0/2.0))/(b1f*t31050+b3f*t31051+b2f* \
                   c*t31048+b4f*t31052*t31027)+1.0)*(a1f*c*t31048+1.0)*2.0))-t31065*(t31082-t31046*t31093*t31087*t31088* \
                   (t31082-c0f*log((t31047*(1.0/2.0))/(b1f*t31068+b3f*t31069+b2f*c*t31066+b4f*t31070*t31027)+1.0)*(a1f* \
                   c*t31066+1.0)*2.0)+(Aa*t31046*t31093*log((1.0/2.0)/(Aa*(b1a*t31068+b3a*t31069+b2a*c*t31066+b4a*t31070* \
                   t31027))+1.0)*(t31087*t31088-1.0)*(a1a*c*t31066+1.0)*2.0)/d2fz0))*(ccab1*1/(t31102*t31102)*t31094* \
                   t31095*(1.0/2.0)-(ccab2*t31094*t31095*(1.0/2.0))/t31106-ccab2*t31103*1/(t31106*t31106*t31106)*(t31107* \
                   t31107)*t31094*2.0+ccab2*t31110*t31103*(t31094*t31094)*t31095*(1.0/2.0)+ccab2*t31100*t31110*t31107* \
                   t31094*t31096*2.0-ccab1*gcab*t31100*1/(t31102*t31102*t31102)*t31094*t31095*(1.0/2.0))-rho_a[index]* \
                   (t31123+t31043*t31046*(t31122-t31123))*((ccaa2*t31124*t31095*2.0)/t31130-ccaa1*t31124*1/(t31126*t31126) \
                   *t31095*2.0-ccaa2*(t31124*t31124)*t31134*t31127*t31139*2.0+ccaa1*gamma_aa[index]*gcaa*t31124*1/(t31126* \
                   t31126*t31126)*t31136*2.0+ccaa2*1/(t31130*t31130*t31130)*(t31131*t31131)*t31124*t31127*t31095*2.0- \
                   ccaa2*gamma_aa[index]*t31131*t31124*t31134*t31095*4.0)-c0*pow(rho_a[index],4.0/3.0)*(cx1*t31135*1/ \
                   (t31138*t31138)*t31095*2.0-(cx2*t31135*t31095*2.0)/t31142+cx2*(t31135*t31135)*t31127*t31146*t31139* \
                   2.0-cx1*gamma_aa[index]*gx*t31135*t31136*1/(t31138*t31138*t31138)*2.0-cx2*1/(t31142*t31142*t31142) \
                   *(t31143*t31143)*t31135*t31127*t31095*2.0+cx2*gamma_aa[index]*t31143*t31135*t31146*t31095*4.0);
            } else if (rho_a[index] > cutoff_) {
                double t32140 = 1/pow(rho_a[index],1.0/3.0);
                double t32141 = c*t32140;
                double t32142 = sqrt(t32141);
                double t32143 = pow(t32141,3.0/2.0);
                double t32144 = c*c;
                double t32145 = 1/pow(rho_a[index],2.0/3.0);
                double t32146 = 1/c0p;
                double t32147 = b1p*t32142;
                double t32148 = b3p*t32143;
                double t32149 = b4p*t32144*t32145;
                double t32150 = b2p*c*t32140;
                double t32151 = t32150+t32147+t32148+t32149;
                double t32152 = 1/t32151;
                double t32153 = t32152*t32146*(1.0/2.0);
                double t32154 = t32153+1.0;
                double t32155 = log(t32154);
                double t32156 = a1p*c*t32140;
                double t32157 = t32156+1.0;
                double t32158 = gcaa*gcaa;
                double t32159 = 1/pow(rho_a[index],1.6E1/3.0);
                double t32160 = 1/pow(rho_a[index],8.0/3.0);
                double t32161 = gamma_aa[index]*gcaa*t32160;
                double t32162 = t32161+1.0;
                double t32163 = gamma_aa[index]*gamma_aa[index];
                double t32164 = gamma_aa[index]*gcaa*t32160*2.0;
                double t32165 = t32163*t32158*t32159;
                double t32166 = t32164+t32165+1.0;
                double t32168 = gcaa*t32160*2.0;
                double t32169 = gamma_aa[index]*t32158*t32159*2.0;
                double t32167 = t32168+t32169;
                double t32170 = 1/(t32166*t32166);
                double t32171 = gx*gx;
                double t32172 = 1/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t32173 = gamma_aa[index]*gx*t32160;
                double t32174 = t32173+1.0;
                double t32175 = 1/pow(rho_a[index],3.2E1/3.0);
                double t32176 = gamma_aa[index]*gx*t32160*2.0;
                double t32177 = t32171*t32163*t32159;
                double t32178 = t32176+t32177+1.0;
                double t32180 = gx*t32160*2.0;
                double t32181 = gamma_aa[index]*t32171*t32159*2.0;
                double t32179 = t32180+t32181;
                double t32182 = 1/(t32178*t32178);
                v_gamma_aa_gamma_aa_[index] = rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t32142+b3f*t32143+b2f*c*t32140+b4f*t32144*t32145))+1.0)*(a1f*c*t32140+1.0)*2.0-c0p*t32155*t32157*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t32155*t32157*2.0)*(ccaa1*1/(t32162*t32162)*t32158*t32159*2.0-(ccaa2*t32158* \
                   t32159*2.0)/t32166+ccaa2*t32170*t32163*t32175*(t32158*t32158)*2.0-ccaa1*gamma_aa[index]*gcaa*1/(t32162* \
                   t32162*t32162)*t32172*t32158*2.0-ccaa2*t32163*1/(t32166*t32166*t32166)*t32158*(t32167*t32167)*t32159* \
                   2.0+ccaa2*gamma_aa[index]*t32170*t32158*t32167*t32159*4.0)-c0*pow(rho_a[index],4.0/3.0)*(cx1*t32171* \
                   1/(t32174*t32174)*t32159*2.0-(cx2*t32171*t32159*2.0)/t32178+cx2*(t32171*t32171)*t32163*t32182*t32175* \
                   2.0-cx1*gamma_aa[index]*gx*t32171*t32172*1/(t32174*t32174*t32174)*2.0-cx2*t32171*t32163*t32159*1/(t32178* \
                   t32178*t32178)*(t32179*t32179)*2.0+cx2*gamma_aa[index]*t32171*t32182*t32159*t32179*4.0);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t31149 = 1/pow(rho_a[index],1.0/3.0);
                double t31150 = c*t31149;
                double t31151 = sqrt(t31150);
                double t31152 = pow(t31150,3.0/2.0);
                double t31153 = c*c;
                double t31154 = 1/pow(rho_a[index],2.0/3.0);
                double t31155 = 1/c0p;
                double t31156 = b1p*t31151;
                double t31157 = b3p*t31152;
                double t31158 = b4p*t31153*t31154;
                double t31159 = b2p*c*t31149;
                double t31160 = t31156+t31157+t31158+t31159;
                double t31161 = 1/t31160;
                double t31162 = t31161*t31155*(1.0/2.0);
                double t31163 = t31162+1.0;
                double t31164 = log(t31163);
                double t31165 = a1p*c*t31149;
                double t31166 = t31165+1.0;
                double t31167 = pow(2.0,1.0/3.0);
                double t31168 = t31167*2.0;
                double t31169 = t31168-2.0;
                double t31170 = two_13*2.0;
                double t31171 = t31170-2.0;
                double t31172 = 1/t31171;
                double t31173 = 1/c0f;
                double t31174 = 1/pow(rho_b[index],1.0/3.0);
                double t31175 = c*t31174;
                double t31176 = sqrt(t31175);
                double t31177 = pow(t31175,3.0/2.0);
                double t31178 = 1/pow(rho_b[index],2.0/3.0);
                double t31179 = b1p*t31176;
                double t31180 = b3p*t31177;
                double t31181 = b4p*t31153*t31178;
                double t31182 = b2p*c*t31174;
                double t31183 = t31180+t31181+t31182+t31179;
                double t31184 = 1/t31183;
                double t31185 = t31155*t31184*(1.0/2.0);
                double t31186 = t31185+1.0;
                double t31187 = log(t31186);
                double t31188 = a1p*c*t31174;
                double t31189 = t31188+1.0;
                double t31190 = c0p*t31187*t31189*2.0;
                double t31191 = rho_a[index]+rho_b[index];
                double t31192 = 1/pow(t31191,1.0/3.0);
                double t31193 = c*t31192;
                double t31194 = sqrt(t31193);
                double t31195 = pow(t31193,3.0/2.0);
                double t31196 = 1/pow(t31191,2.0/3.0);
                double t31197 = b1p*t31194;
                double t31198 = b3p*t31195;
                double t31199 = b4p*t31153*t31196;
                double t31200 = b2p*c*t31192;
                double t31201 = t31200+t31197+t31198+t31199;
                double t31202 = 1/t31201;
                double t31203 = t31202*t31155*(1.0/2.0);
                double t31204 = t31203+1.0;
                double t31205 = log(t31204);
                double t31206 = a1p*c*t31192;
                double t31207 = t31206+1.0;
                double t31208 = c0p*t31205*t31207*2.0;
                double t31209 = rho_a[index]-rho_b[index];
                double t31210 = t31209*t31209;
                double t31211 = 1/t31191;
                double t31212 = t31211*t31209;
                double t31213 = 1/(t31191*t31191*t31191*t31191);
                double t31214 = t31210*t31210;
                double t31215 = t31212+1.0;
                double t31216 = pow(t31215,4.0/3.0);
                double t31217 = -t31212+1.0;
                double t31218 = pow(t31217,4.0/3.0);
                double t31219 = t31216+t31218-2.0;
                double t31220 = 1/pow(rho_a[index],8.0/3.0);
                double t31221 = 1/pow(rho_b[index],8.0/3.0);
                double t31222 = gcab*gcab;
                double t31223 = gamma_aa[index]*t31220*(1.0/2.0);
                double t31224 = gamma_bb[index]*t31221*(1.0/2.0);
                double t31225 = t31223+t31224;
                double t31226 = t31225*t31225;
                double t31227 = t31222*t31226;
                double t31228 = gcab*t31225*2.0;
                double t31229 = t31227+t31228+1.0;
                double t31230 = 1/(t31229*t31229);
                double t31231 = gcab*t31220;
                double t31232 = t31220*t31222*t31225;
                double t31233 = t31231+t31232;
                double t31234 = gcab*t31221;
                double t31235 = t31221*t31222*t31225;
                double t31236 = t31234+t31235;
                double t31237 = gcab*t31225;
                double t31238 = t31237+1.0;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t31190-t31172*t31169*(t31190-c0f*log((t31173*(1.0/2.0) \
                   )/(b1f*t31176+b3f*t31177+b2f*c*t31174+b4f*t31153*t31178)+1.0)*(a1f*c*t31174+1.0)*2.0))+t31191*(t31208- \
                   t31213*t31214*t31172*t31219*(t31208-c0f*log((t31173*(1.0/2.0))/(b1f*t31194+b3f*t31195+b2f*c*t31192+ \
                   b4f*t31153*t31196)+1.0)*(a1f*c*t31192+1.0)*2.0)+(Aa*t31172*t31219*log((1.0/2.0)/(Aa*(b1a*t31194+b3a* \
                   t31195+b2a*c*t31192+b4a*t31153*t31196))+1.0)*(t31213*t31214-1.0)*(a1a*c*t31192+1.0)*2.0)/d2fz0)+rho_a[index]* \
                   (t31172*t31169*(c0p*t31164*t31166*2.0-c0f*log((t31173*(1.0/2.0))/(b1f*t31151+b3f*t31152+b2f*c*t31149+ \
                   b4f*t31153*t31154)+1.0)*(a1f*c*t31149+1.0)*2.0)-c0p*t31164*t31166*2.0))*(ccab1*t31220*t31221*t31222* \
                   1/(t31238*t31238)*(1.0/2.0)-(ccab2*t31220*t31221*t31222*(1.0/2.0))/t31229+ccab2*t31221*t31230*t31222* \
                   t31233*t31225+ccab2*t31220*t31230*t31222*t31225*t31236+ccab2*t31220*t31221*t31230*(t31222*t31222)* \
                   t31226*(1.0/2.0)-ccab2*t31222*t31233*t31226*t31236*1/(t31229*t31229*t31229)*2.0-ccab1*gcab*t31220* \
                   t31221*t31222*t31225*1/(t31238*t31238*t31238)*(1.0/2.0));
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t31242 = 1/pow(rho_a[index],1.0/3.0);
                double t31243 = c*t31242;
                double t31244 = sqrt(t31243);
                double t31245 = pow(t31243,3.0/2.0);
                double t31246 = c*c;
                double t31247 = 1/pow(rho_a[index],2.0/3.0);
                double t31248 = 1/c0p;
                double t31249 = b1p*t31244;
                double t31250 = b3p*t31245;
                double t31251 = b4p*t31246*t31247;
                double t31252 = b2p*c*t31242;
                double t31253 = t31250+t31251+t31252+t31249;
                double t31254 = 1/t31253;
                double t31255 = t31254*t31248*(1.0/2.0);
                double t31256 = t31255+1.0;
                double t31257 = log(t31256);
                double t31258 = a1p*c*t31242;
                double t31259 = t31258+1.0;
                double t31260 = pow(2.0,1.0/3.0);
                double t31261 = t31260*2.0;
                double t31262 = t31261-2.0;
                double t31263 = two_13*2.0;
                double t31264 = t31263-2.0;
                double t31265 = 1/t31264;
                double t31266 = 1/c0f;
                double t31267 = 1/pow(rho_b[index],1.0/3.0);
                double t31268 = c*t31267;
                double t31269 = sqrt(t31268);
                double t31270 = pow(t31268,3.0/2.0);
                double t31271 = 1/pow(rho_b[index],2.0/3.0);
                double t31272 = b1p*t31269;
                double t31273 = b3p*t31270;
                double t31274 = b4p*t31271*t31246;
                double t31275 = b2p*c*t31267;
                double t31276 = t31272+t31273+t31274+t31275;
                double t31277 = 1/t31276;
                double t31278 = t31248*t31277*(1.0/2.0);
                double t31279 = t31278+1.0;
                double t31280 = log(t31279);
                double t31281 = a1p*c*t31267;
                double t31282 = t31281+1.0;
                double t31283 = c0p*t31280*t31282*2.0;
                double t31284 = rho_a[index]+rho_b[index];
                double t31285 = 1/pow(t31284,1.0/3.0);
                double t31286 = c*t31285;
                double t31287 = sqrt(t31286);
                double t31288 = pow(t31286,3.0/2.0);
                double t31289 = 1/pow(t31284,2.0/3.0);
                double t31290 = b1p*t31287;
                double t31291 = b3p*t31288;
                double t31292 = b4p*t31246*t31289;
                double t31293 = b2p*c*t31285;
                double t31294 = t31290+t31291+t31292+t31293;
                double t31295 = 1/t31294;
                double t31296 = t31248*t31295*(1.0/2.0);
                double t31297 = t31296+1.0;
                double t31298 = log(t31297);
                double t31299 = a1p*c*t31285;
                double t31300 = t31299+1.0;
                double t31301 = c0p*t31300*t31298*2.0;
                double t31302 = rho_a[index]-rho_b[index];
                double t31303 = t31302*t31302;
                double t31304 = 1/t31284;
                double t31305 = t31302*t31304;
                double t31306 = 1/(t31284*t31284*t31284*t31284);
                double t31307 = t31303*t31303;
                double t31308 = t31305+1.0;
                double t31309 = pow(t31308,4.0/3.0);
                double t31310 = -t31305+1.0;
                double t31311 = pow(t31310,4.0/3.0);
                double t31312 = t31311+t31309-2.0;
                double t31313 = gcab*gcab;
                double t31314 = 1/pow(rho_b[index],1.6E1/3.0);
                double t31315 = 1/pow(rho_a[index],8.0/3.0);
                double t31316 = gamma_aa[index]*t31315*(1.0/2.0);
                double t31317 = 1/pow(rho_b[index],8.0/3.0);
                double t31318 = gamma_bb[index]*t31317*(1.0/2.0);
                double t31319 = t31316+t31318;
                double t31320 = gcab*t31319;
                double t31321 = t31320+1.0;
                double t31322 = t31319*t31319;
                double t31323 = t31313*t31322;
                double t31324 = gcab*t31319*2.0;
                double t31325 = t31323+t31324+1.0;
                double t31327 = gcab*t31317;
                double t31328 = t31313*t31317*t31319;
                double t31326 = t31327+t31328;
                double t31329 = 1/(t31325*t31325);
                double t31330 = b1f*t31269;
                double t31331 = b3f*t31270;
                double t31332 = b4f*t31271*t31246;
                double t31333 = b2f*c*t31267;
                double t31334 = t31330+t31331+t31332+t31333;
                double t31335 = 1/t31334;
                double t31336 = t31335*t31266*(1.0/2.0);
                double t31337 = t31336+1.0;
                double t31338 = log(t31337);
                double t31339 = a1f*c*t31267;
                double t31340 = t31339+1.0;
                double t31341 = t31283-c0f*t31340*t31338*2.0;
                double t31342 = t31283-t31341*t31262*t31265;
                double t31343 = gcaa*gcaa;
                double t31344 = gamma_bb[index]*gcaa*t31317;
                double t31345 = t31344+1.0;
                double t31346 = gamma_bb[index]*gamma_bb[index];
                double t31347 = gamma_bb[index]*gcaa*t31317*2.0;
                double t31348 = t31314*t31343*t31346;
                double t31349 = t31347+t31348+1.0;
                double t31351 = gcaa*t31317*2.0;
                double t31352 = gamma_bb[index]*t31314*t31343*2.0;
                double t31350 = t31351+t31352;
                double t31353 = 1/(t31349*t31349);
                double t31354 = gx*gx;
                double t31355 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t31356 = gamma_bb[index]*gx*t31317;
                double t31357 = t31356+1.0;
                double t31358 = 1/pow(rho_b[index],3.2E1/3.0);
                double t31359 = gamma_bb[index]*gx*t31317*2.0;
                double t31360 = t31314*t31354*t31346;
                double t31361 = t31360+t31359+1.0;
                double t31363 = gx*t31317*2.0;
                double t31364 = gamma_bb[index]*t31314*t31354*2.0;
                double t31362 = t31363+t31364;
                double t31365 = 1/(t31361*t31361);
                v_gamma_bb_gamma_bb_[index] = (-rho_b[index]*t31342+t31284*(t31301-t31312*t31306*t31307*t31265*(t31301- \
                   c0f*log((t31266*(1.0/2.0))/(b1f*t31287+b3f*t31288+b2f*c*t31285+b4f*t31246*t31289)+1.0)*(a1f*c*t31285+ \
                   1.0)*2.0)+(Aa*t31312*t31265*log((1.0/2.0)/(Aa*(b1a*t31287+b3a*t31288+b2a*c*t31285+b4a*t31246*t31289) \
                   )+1.0)*(t31306*t31307-1.0)*(a1a*c*t31285+1.0)*2.0)/d2fz0)+rho_a[index]*(t31262*t31265*(c0p*t31257* \
                   t31259*2.0-c0f*log((t31266*(1.0/2.0))/(b1f*t31244+b3f*t31245+b2f*c*t31242+b4f*t31246*t31247)+1.0)* \
                   (a1f*c*t31242+1.0)*2.0)-c0p*t31257*t31259*2.0))*(ccab1*1/(t31321*t31321)*t31313*t31314*(1.0/2.0)-(ccab2* \
                   t31313*t31314*(1.0/2.0))/t31325-ccab2*t31313*t31322*1/(t31325*t31325*t31325)*(t31326*t31326)*2.0+ccab2* \
                   (t31313*t31313)*t31322*t31314*t31329*(1.0/2.0)+ccab2*t31313*t31317*t31326*t31319*t31329*2.0-ccab1* \
                   gcab*1/(t31321*t31321*t31321)*t31313*t31314*t31319*(1.0/2.0))+rho_b[index]*t31342*(ccaa1*t31314*t31343* \
                   1/(t31345*t31345)*2.0-(ccaa2*t31314*t31343*2.0)/t31349+ccaa2*(t31343*t31343)*t31353*t31346*t31358* \
                   2.0-ccaa1*gamma_bb[index]*gcaa*t31343*1/(t31345*t31345*t31345)*t31355*2.0-ccaa2*t31314*(t31350*t31350) \
                   *t31343*t31346*1/(t31349*t31349*t31349)*2.0+ccaa2*gamma_bb[index]*t31314*t31350*t31343*t31353*4.0) \
                   -c0*pow(rho_b[index],4.0/3.0)*(cx1*t31314*t31354*1/(t31357*t31357)*2.0-(cx2*t31314*t31354*2.0)/t31361+ \
                   cx2*(t31354*t31354)*t31346*t31365*t31358*2.0-cx1*gamma_bb[index]*gx*t31354*t31355*1/(t31357*t31357* \
                   t31357)*2.0-cx2*t31314*1/(t31361*t31361*t31361)*(t31362*t31362)*t31354*t31346*2.0+cx2*gamma_bb[index]* \
                   t31314*t31362*t31354*t31365*4.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t31734 = 1/pow(rho_b[index],1.0/3.0);
                double t31735 = c*t31734;
                double t31736 = sqrt(t31735);
                double t31737 = pow(t31735,3.0/2.0);
                double t31738 = c*c;
                double t31739 = 1/pow(rho_b[index],2.0/3.0);
                double t31740 = 1/c0p;
                double t31741 = b1p*t31736;
                double t31742 = b3p*t31737;
                double t31743 = b4p*t31738*t31739;
                double t31744 = b2p*c*t31734;
                double t31745 = t31741+t31742+t31743+t31744;
                double t31746 = 1/t31745;
                double t31747 = t31740*t31746*(1.0/2.0);
                double t31748 = t31747+1.0;
                double t31749 = log(t31748);
                double t31750 = a1p*c*t31734;
                double t31751 = t31750+1.0;
                double t31752 = gcaa*gcaa;
                double t31753 = 1/pow(rho_b[index],1.6E1/3.0);
                double t31754 = 1/pow(rho_b[index],8.0/3.0);
                double t31755 = gamma_bb[index]*gcaa*t31754;
                double t31756 = t31755+1.0;
                double t31757 = gamma_bb[index]*gamma_bb[index];
                double t31758 = gamma_bb[index]*gcaa*t31754*2.0;
                double t31759 = t31752*t31753*t31757;
                double t31760 = t31758+t31759+1.0;
                double t31762 = gcaa*t31754*2.0;
                double t31763 = gamma_bb[index]*t31752*t31753*2.0;
                double t31761 = t31762+t31763;
                double t31764 = 1/(t31760*t31760);
                double t31765 = gx*gx;
                double t31766 = 1/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t31767 = gamma_bb[index]*gx*t31754;
                double t31768 = t31767+1.0;
                double t31769 = 1/pow(rho_b[index],3.2E1/3.0);
                double t31770 = gamma_bb[index]*gx*t31754*2.0;
                double t31771 = t31753*t31765*t31757;
                double t31772 = t31770+t31771+1.0;
                double t31774 = gx*t31754*2.0;
                double t31775 = gamma_bb[index]*t31753*t31765*2.0;
                double t31773 = t31774+t31775;
                double t31776 = 1/(t31772*t31772);
                v_gamma_bb_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f* \
                   (b1f*t31736+b3f*t31737+b2f*c*t31734+b4f*t31738*t31739))+1.0)*(a1f*c*t31734+1.0)*2.0-c0p*t31751*t31749* \
                   2.0))/(two_13*2.0-2.0)+c0p*t31751*t31749*2.0)*((ccaa2*t31752*t31753*2.0)/t31760-ccaa1*t31752*t31753* \
                   1/(t31756*t31756)*2.0-ccaa2*(t31752*t31752)*t31764*t31757*t31769*2.0+ccaa1*gamma_bb[index]*gcaa*t31752* \
                   1/(t31756*t31756*t31756)*t31766*2.0+ccaa2*1/(t31760*t31760*t31760)*t31752*(t31761*t31761)*t31753*t31757* \
                   2.0-ccaa2*gamma_bb[index]*t31752*t31761*t31753*t31764*4.0)-c0*pow(rho_b[index],4.0/3.0)*(cx1*t31753* \
                   t31765*1/(t31768*t31768)*2.0-(cx2*t31753*t31765*2.0)/t31772+cx2*(t31765*t31765)*t31757*t31776*t31769* \
                   2.0-cx1*gamma_bb[index]*gx*t31765*t31766*1/(t31768*t31768*t31768)*2.0-cx2*t31753*1/(t31772*t31772* \
                   t31772)*(t31773*t31773)*t31765*t31757*2.0+cx2*gamma_bb[index]*t31753*t31773*t31765*t31776*4.0);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }                       
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {
            	
                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 
            	
                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 
          
            }  
        }
    }
}

}}

