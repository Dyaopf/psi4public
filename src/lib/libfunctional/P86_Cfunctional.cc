#include <libmints/vector.h>
#include "P86_Cfunctional.h"
#include "utility.h"
#include <cmath>

using namespace psi;

namespace psi {

P86_CFunctional::P86_CFunctional()
{
    name_ = "P86_C";
    description_ = "    P86 Correlation (PZ81 LSDA + P86 GGA)\n";
    citation_ = "    J.P. Perdew, Phys. Rev. B., 33, 8822-8824, 1986\n";
    alpha_ = 1.0;
    omega_ = 0.0;
    lrc_ = false;
    gga_ = true;
    meta_ = false;
    parameters_["c"] =   6.2035049089939986E-01;
    parameters_["two_13"] =   1.2599210498948732E+00;
    parameters_["EcPld_1"] =  -1.4230000000000001E-01;
    parameters_["EcPld_2"] =   1.0528999999999999E+00;
    parameters_["EcPld_3"] =   3.3339999999999997E-01;
    parameters_["EcFld_1"] =  -8.4300000000000000E-02;
    parameters_["EcFld_2"] =   1.3980999999999999E+00;
    parameters_["EcFld_3"] =   2.6110000000000000E-01;
    parameters_["EcPhd_1"] =   3.1099999999999999E-02;
    parameters_["EcPhd_2"] =  -4.8000000000000001E-02;
    parameters_["EcPhd_3"] =   2.0000000000000000E-03;
    parameters_["EcPhd_4"] =  -1.1599999999999999E-02;
    parameters_["EcFhd_1"] =   1.5550000000000000E-02;
    parameters_["EcFhd_2"] =  -2.6900000000000000E-02;
    parameters_["EcFhd_3"] =   6.9999999999999999E-04;
    parameters_["EcFhd_4"] =  -4.7999999999999996E-03;
    parameters_["Fg"] =   1.1000000000000000E-01;
    parameters_["Bg"] =   7.3889999999999999E-06;
    parameters_["Cx"] =   1.6670000000000001E-03;
    parameters_["Cinf"] =   4.2350000000000000E-03;
    parameters_["Cg_1"] =   2.5680000000000000E-03;
    parameters_["Cg_2"] =   2.3265999999999998E-02;
    parameters_["Cg_3"] =   8.7230000000000008E+00;
    parameters_["Cg_4"] =   4.7199999999999998E-01;
    parameters_["Pg_1"] =   1.7450000000000001E+00;
}
P86_CFunctional::~P86_CFunctional()
{
}
void P86_CFunctional::compute_functional(const std::map<std::string,SharedVector>& in, const std::map<std::string,SharedVector>& out, int npoints, int deriv, double alpha)
{
    double c = parameters_["c"];
    double two_13 = parameters_["two_13"];
    double EcPld_1 = parameters_["EcPld_1"];
    double EcPld_2 = parameters_["EcPld_2"];
    double EcPld_3 = parameters_["EcPld_3"];
    double EcFld_1 = parameters_["EcFld_1"];
    double EcFld_2 = parameters_["EcFld_2"];
    double EcFld_3 = parameters_["EcFld_3"];
    double EcPhd_1 = parameters_["EcPhd_1"];
    double EcPhd_2 = parameters_["EcPhd_2"];
    double EcPhd_3 = parameters_["EcPhd_3"];
    double EcPhd_4 = parameters_["EcPhd_4"];
    double EcFhd_1 = parameters_["EcFhd_1"];
    double EcFhd_2 = parameters_["EcFhd_2"];
    double EcFhd_3 = parameters_["EcFhd_3"];
    double EcFhd_4 = parameters_["EcFhd_4"];
    double Fg = parameters_["Fg"];
    double Bg = parameters_["Bg"];
    double Cx = parameters_["Cx"];
    double Cinf = parameters_["Cinf"];
    double Cg_1 = parameters_["Cg_1"];
    double Cg_2 = parameters_["Cg_2"];
    double Cg_3 = parameters_["Cg_3"];
    double Cg_4 = parameters_["Cg_4"];
    double Pg_1 = parameters_["Pg_1"];

    // Overall scale factor
    double scale = alpha_ * alpha;

    // => Input variables <= //

    double* rho_ap = NULL;
    double* rho_bp = NULL;
    double* gamma_aap = NULL;
    double* gamma_abp = NULL;
    double* gamma_bbp = NULL;
    double* tau_ap = NULL;
    double* tau_bp = NULL;

    if (true) {
        rho_ap = in.find("RHO_A")->second->pointer();
        rho_bp = in.find("RHO_B")->second->pointer();
    }
    if (gga_) {  
        gamma_aap = in.find("GAMMA_AA")->second->pointer();
        gamma_abp = in.find("GAMMA_AB")->second->pointer();
        gamma_bbp = in.find("GAMMA_BB")->second->pointer();
    } 
    if (meta_)  {
        tau_ap = in.find("TAU_A")->second->pointer();
        tau_bp = in.find("TAU_B")->second->pointer();
    }

    // => Outut variables <= //

    double* v = NULL;

    double* v_rho_a = NULL;
    double* v_rho_b = NULL;
    double* v_gamma_aa = NULL;
    double* v_gamma_ab = NULL;
    double* v_gamma_bb = NULL;
    double* v_tau_a = NULL;
    double* v_tau_b = NULL;
     
    double* v_rho_a_rho_a = NULL;
    double* v_rho_a_rho_b = NULL;
    double* v_rho_b_rho_b = NULL;
    double* v_gamma_aa_gamma_aa = NULL;
    double* v_gamma_aa_gamma_ab = NULL;
    double* v_gamma_aa_gamma_bb = NULL;
    double* v_gamma_ab_gamma_ab = NULL;
    double* v_gamma_ab_gamma_bb = NULL;
    double* v_gamma_bb_gamma_bb = NULL;
    double* v_tau_a_tau_a = NULL;
    double* v_tau_a_tau_b = NULL;
    double* v_tau_b_tau_b = NULL;
    double* v_rho_a_gamma_aa = NULL;
    double* v_rho_a_gamma_ab = NULL;
    double* v_rho_a_gamma_bb = NULL;
    double* v_rho_b_gamma_aa = NULL;
    double* v_rho_b_gamma_ab = NULL;
    double* v_rho_b_gamma_bb = NULL;
    double* v_rho_a_tau_a = NULL;
    double* v_rho_a_tau_b = NULL;
    double* v_rho_b_tau_a = NULL;
    double* v_rho_b_tau_b = NULL;
    double* v_gamma_aa_tau_a = NULL;
    double* v_gamma_aa_tau_b = NULL;
    double* v_gamma_ab_tau_a = NULL;
    double* v_gamma_ab_tau_b = NULL;
    double* v_gamma_bb_tau_a = NULL;
    double* v_gamma_bb_tau_b = NULL;

    if (deriv >= 0) {
        v = out.find("V")->second->pointer();
    } 
    if (deriv >= 1) {
        if (true) {
            v_rho_a = out.find("V_RHO_A")->second->pointer();
            v_rho_b = out.find("V_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa = out.find("V_GAMMA_AA")->second->pointer();
            v_gamma_ab = out.find("V_GAMMA_AB")->second->pointer();
            v_gamma_bb = out.find("V_GAMMA_BB")->second->pointer();
        }
        if (meta_) {    
            v_tau_a = out.find("V_TAU_A")->second->pointer();
            v_tau_b = out.find("V_TAU_B")->second->pointer();
        }
    }
    if (deriv >= 2) {
        if (true) {
            v_rho_a_rho_a = out.find("V_RHO_A_RHO_A")->second->pointer();
            v_rho_a_rho_b = out.find("V_RHO_A_RHO_B")->second->pointer();
            v_rho_b_rho_b = out.find("V_RHO_B_RHO_B")->second->pointer();
        }
        if (gga_) {
            v_gamma_aa_gamma_aa = out.find("V_GAMMA_AA_GAMMA_AA")->second->pointer();
            v_gamma_aa_gamma_ab = out.find("V_GAMMA_AA_GAMMA_AB")->second->pointer();
            v_gamma_aa_gamma_bb = out.find("V_GAMMA_AA_GAMMA_BB")->second->pointer();
            v_gamma_ab_gamma_ab = out.find("V_GAMMA_AB_GAMMA_AB")->second->pointer();
            v_gamma_ab_gamma_bb = out.find("V_GAMMA_AB_GAMMA_BB")->second->pointer();
            v_gamma_bb_gamma_bb = out.find("V_GAMMA_BB_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_tau_a_tau_a = out.find("V_TAU_A_TAU_A")->second->pointer();
            v_tau_a_tau_b = out.find("V_TAU_A_TAU_B")->second->pointer();
            v_tau_b_tau_b = out.find("V_TAU_B_TAU_B")->second->pointer();
        }
        if (gga_) {
            v_rho_a_gamma_aa = out.find("V_RHO_A_GAMMA_AA")->second->pointer();
            v_rho_a_gamma_ab = out.find("V_RHO_A_GAMMA_AB")->second->pointer();
            v_rho_a_gamma_bb = out.find("V_RHO_A_GAMMA_BB")->second->pointer();
            v_rho_b_gamma_aa = out.find("V_RHO_B_GAMMA_AA")->second->pointer();
            v_rho_b_gamma_ab = out.find("V_RHO_B_GAMMA_AB")->second->pointer();
            v_rho_b_gamma_bb = out.find("V_RHO_B_GAMMA_BB")->second->pointer();
        }
        if (meta_) {
            v_rho_a_tau_a = out.find("V_RHO_A_TAU_A")->second->pointer();
            v_rho_a_tau_b = out.find("V_RHO_A_TAU_B")->second->pointer();
            v_rho_b_tau_a = out.find("V_RHO_B_TAU_A")->second->pointer();
            v_rho_b_tau_b = out.find("V_RHO_B_TAU_B")->second->pointer();
        }
        if (gga_ && meta_) {
            v_gamma_aa_tau_a = out.find("V_GAMMA_AA_TAU_A")->second->pointer();
            v_gamma_aa_tau_b = out.find("V_GAMMA_AA_TAU_B")->second->pointer();
            v_gamma_ab_tau_a = out.find("V_GAMMA_AB_TAU_A")->second->pointer();
            v_gamma_ab_tau_b = out.find("V_GAMMA_AB_TAU_B")->second->pointer();
            v_gamma_bb_tau_a = out.find("V_GAMMA_BB_TAU_A")->second->pointer();
            v_gamma_bb_tau_b = out.find("V_GAMMA_BB_TAU_B")->second->pointer();
        }
    }

    // => Loop over points <= //

    for (int Q = 0; Q < npoints; Q++) {

        // Input variables 
        double rho_a;
        double rho_b;
        double gamma_aa;
        double gamma_ab;
        double gamma_bb;
        double tau_a;
        double tau_b;

        if (true) {
            rho_a = rho_ap[Q];
            rho_b = rho_bp[Q];
        }        
        if (gga_) {
            gamma_aa = gamma_aap[Q];
            gamma_ab = gamma_abp[Q];
            gamma_bb = gamma_bbp[Q];
        }        
        if (meta_) {
            tau_a = tau_ap[Q];
            tau_b = tau_bp[Q];
        }        

        // Definitions (asymptotics to prevent numerical problems)
        if (rho_a < lsda_cutoff_ && rho_b < lsda_cutoff_) {
            continue;
        } else if (rho_a < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t15162 = rho_a+rho_b;
                double t15163 = 1.0/pow(t15162,1.0/3.0);
                double t15164 = c*t15163;
                double t15165 = log(t15164);
                double t15166 = EcPhd_1*t15165;
                double t15167 = pow(2.0,1.0/3.0);
                double t15168 = t15167*2.0;
                double t15169 = t15168-2.0;
                double t15170 = two_13*2.0;
                double t15171 = t15170-2.0;
                double t15172 = 1.0/t15171;
                double t15173 = sqrt(t15164);
                double t15174 = EcPld_2*t15173;
                double t15175 = EcPld_3*c*t15163;
                double t15176 = t15174+t15175+1.0;
                double t15177 = 1.0/t15176;
                double t15178 = EcPld_1*t15177;
                double t15179 = c*c;
                double t15180 = 1.0/pow(t15162,2.0/3.0);
                double t15181 = Bg*t15180*t15179;
                double t15182 = Cg_2*c*t15163;
                double t15183 = Cg_1+t15181+t15182;
                double t15184 = 1.0/t15162;
                double t15185 = Bg*c*t15184*t15179*1.0E4;
                double t15186 = Cg_4*t15180*t15179;
                double t15187 = Cg_3*c*t15163;
                double t15188 = t15185+t15186+t15187+1.0;
                double t15189 = 1.0/t15188;
                double t15190 = t15183*t15189;
                double t15191 = Cx+t15190;
                double t15192 = gamma_ab*2.0;
                double t15193 = gamma_aa+gamma_bb+t15192;
                v[Q] += scale * t15162*(heaviside(-c*t15163+1.0)*(EcPhd_2+t15166+t15172*t15169*(EcFhd_2-EcPhd_2-t15166+EcFhd_1*t15165+EcFhd_4*c*t15163-EcPhd_4*c*t15163+EcFhd_3*c*t15163*t15165-EcPhd_3*c*t15163*t15165)+EcPhd_4*c*t15163+EcPhd_3*c*t15163*t15165)+heaviside(t15164-1.0)*(t15178-t15172*t15169*(t15178-EcFld_1/(EcFld_2*t15173+EcFld_3*c*t15163+1.0))))+(1.0/pow(t15162,4.0/3.0)*t15191*t15193*exp(-(Cinf*Fg*Pg_1*1.0/pow(t15162,7.0/6.0)*sqrt(t15193))/t15191))/two_13;
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t15195 = rho_a+rho_b;
                double t15196 = 1.0/pow(t15195,4.0/3.0);
                double t15197 = 1.0/pow(t15195,1.0/3.0);
                double t15198 = c*t15197;
                double t15199 = 1.0/sqrt(t15198);
                double t15200 = sqrt(t15198);
                double t15201 = EcPld_3*c*t15196*(1.0/3.0);
                double t15202 = EcPld_2*c*t15196*t15199*(1.0/6.0);
                double t15203 = t15201+t15202;
                double t15204 = EcPld_2*t15200;
                double t15205 = EcPld_3*c*t15197;
                double t15206 = t15204+t15205+1.0;
                double t15207 = 1.0/(t15206*t15206);
                double t15208 = EcPld_1*t15203*t15207;
                double t15209 = pow(2.0,1.0/3.0);
                double t15210 = t15209*2.0;
                double t15211 = t15210-2.0;
                double t15212 = two_13*2.0;
                double t15213 = t15212-2.0;
                double t15214 = 1.0/t15213;
                double t15215 = 1.0/t15195;
                double t15216 = EcPhd_1*t15215*(1.0/3.0);
                double t15217 = log(t15198);
                double t15218 = EcPhd_3*c*t15196*(1.0/3.0);
                double t15219 = EcPhd_4*c*t15196*(1.0/3.0);
                double t15220 = EcPhd_3*c*t15217*t15196*(1.0/3.0);
                double t15221 = t15198-1.0;
                double t15222 = EcPhd_1*t15217;
                double t15223 = dirac(t15221);
                double t15224 = EcFld_2*t15200;
                double t15225 = EcFld_3*c*t15197;
                double t15226 = t15224+t15225+1.0;
                double t15227 = 1.0/t15206;
                double t15228 = EcPld_1*t15227;
                double t15229 = -t15198+1.0;
                double t15230 = heaviside(t15229);
                double t15231 = EcFhd_1*t15217;
                double t15232 = EcFhd_4*c*t15197;
                double t15233 = EcPhd_4*c*t15197;
                double t15234 = EcFhd_3*c*t15217*t15197;
                double t15235 = EcPhd_3*c*t15217*t15197;
                double t15236 = heaviside(t15221);
                double t15237 = 1.0/t15226;
                double t15238 = t15228-EcFld_1*t15237;
                double t15239 = t15228-t15211*t15214*t15238;
                double t15240 = c*c;
                double t15241 = 1.0/pow(t15195,2.0/3.0);
                double t15242 = Bg*c*t15240*t15215*1.0E4;
                double t15243 = Cg_4*t15240*t15241;
                double t15244 = Cg_3*c*t15197;
                double t15245 = t15242+t15243+t15244+1.0;
                double t15246 = 1.0/t15245;
                double t15247 = 1.0/pow(t15195,5.0/3.0);
                double t15248 = Bg*t15240*t15241;
                double t15249 = Cg_2*c*t15197;
                double t15250 = Cg_1+t15248+t15249;
                double t15251 = gamma_ab*2.0;
                double t15252 = gamma_aa+gamma_bb+t15251;
                double t15253 = 1.0/two_13;
                double t15254 = 1.0/pow(t15195,7.0/6.0);
                double t15255 = t15250*t15246;
                double t15256 = Cx+t15255;
                double t15257 = 1.0/t15256;
                double t15258 = sqrt(t15252);
                double t15260 = Cinf*Fg*Pg_1*t15254*t15257*t15258;
                double t15259 = exp(-t15260);
                double t15261 = Bg*t15240*t15247*(2.0/3.0);
                double t15262 = Cg_2*c*t15196*(1.0/3.0);
                double t15263 = t15261+t15262;
                double t15264 = t15263*t15246;
                double t15265 = 1.0/(t15195*t15195);
                double t15266 = Bg*c*t15240*t15265*1.0E4;
                double t15267 = Cg_4*t15240*t15247*(2.0/3.0);
                double t15268 = Cg_3*c*t15196*(1.0/3.0);
                double t15269 = t15266+t15267+t15268;
                double t15270 = 1.0/(t15245*t15245);
                double t15271 = t15264-t15250*t15270*t15269;
                v_rho_a[Q] += scale * t15230*(EcPhd_2+t15222+t15233+t15235+t15211*t15214*(EcFhd_2-EcPhd_2-t15222+t15231+t15232-t15233+t15234-t15235))+t15236*t15239+t15195*(t15236*(t15208-t15211*t15214*(t15208-EcFld_1*1.0/(t15226*t15226)*(EcFld_3*c*t15196*(1.0/3.0)+EcFld_2*c*t15196*t15199*(1.0/6.0))))-t15230*(t15220+t15216+t15218+t15219-t15211*t15214*(t15220+t15216+t15218+t15219-EcFhd_1*t15215*(1.0/3.0)-EcFhd_3*c*t15196*(1.0/3.0)-EcFhd_4*c*t15196*(1.0/3.0)-EcFhd_3*c*t15217*t15196*(1.0/3.0)))-c*t15223*t15239*t15196*(1.0/3.0)+c*t15223*t15196*(EcPhd_2+t15222+t15233+t15235+t15211*t15214*(EcFhd_2-EcPhd_2-t15222+t15231+t15232+t15234-EcPhd_4*c*t15197-EcPhd_3*c*t15217*t15197))*(1.0/3.0))-t15252*t15253*t15256*1.0/pow(t15195,7.0/3.0)*t15259*(4.0/3.0)-t15252*t15253*t15271*t15196*t15259+t15252*t15253*t15256*t15196*t15259*(Cinf*Fg*Pg_1*t15257*1.0/pow(t15195,1.3E1/6.0)*t15258*(7.0/6.0)-Cinf*Fg*Pg_1*t15271*t15254*1.0/(t15256*t15256)*t15258);
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t15273 = rho_a+rho_b;
                double t15274 = 1.0/pow(t15273,4.0/3.0);
                double t15275 = 1.0/pow(t15273,1.0/3.0);
                double t15276 = c*t15275;
                double t15277 = 1.0/sqrt(t15276);
                double t15278 = sqrt(t15276);
                double t15279 = EcPld_3*c*t15274*(1.0/3.0);
                double t15280 = EcPld_2*c*t15274*t15277*(1.0/6.0);
                double t15281 = t15280+t15279;
                double t15282 = EcPld_2*t15278;
                double t15283 = EcPld_3*c*t15275;
                double t15284 = t15282+t15283+1.0;
                double t15285 = 1.0/(t15284*t15284);
                double t15286 = EcPld_1*t15281*t15285;
                double t15287 = pow(2.0,1.0/3.0);
                double t15288 = t15287*2.0;
                double t15289 = t15288-2.0;
                double t15290 = two_13*2.0;
                double t15291 = t15290-2.0;
                double t15292 = 1.0/t15291;
                double t15293 = 1.0/t15273;
                double t15294 = EcPhd_1*t15293*(1.0/3.0);
                double t15295 = log(t15276);
                double t15296 = EcPhd_3*c*t15274*(1.0/3.0);
                double t15297 = EcPhd_4*c*t15274*(1.0/3.0);
                double t15298 = EcPhd_3*c*t15274*t15295*(1.0/3.0);
                double t15299 = t15276-1.0;
                double t15300 = EcPhd_1*t15295;
                double t15301 = dirac(t15299);
                double t15302 = EcFld_2*t15278;
                double t15303 = EcFld_3*c*t15275;
                double t15304 = t15302+t15303+1.0;
                double t15305 = 1.0/t15284;
                double t15306 = EcPld_1*t15305;
                double t15307 = -t15276+1.0;
                double t15308 = heaviside(t15307);
                double t15309 = EcFhd_1*t15295;
                double t15310 = EcFhd_4*c*t15275;
                double t15311 = EcPhd_4*c*t15275;
                double t15312 = EcFhd_3*c*t15275*t15295;
                double t15313 = EcPhd_3*c*t15275*t15295;
                double t15314 = heaviside(t15299);
                double t15315 = 1.0/t15304;
                double t15316 = t15306-EcFld_1*t15315;
                double t15317 = t15306-t15316*t15292*t15289;
                double t15318 = c*c;
                double t15319 = 1.0/pow(t15273,2.0/3.0);
                double t15320 = Bg*c*t15318*t15293*1.0E4;
                double t15321 = Cg_4*t15318*t15319;
                double t15322 = Cg_3*c*t15275;
                double t15323 = t15320+t15321+t15322+1.0;
                double t15324 = 1.0/t15323;
                double t15325 = 1.0/pow(t15273,5.0/3.0);
                double t15326 = Bg*t15318*t15319;
                double t15327 = Cg_2*c*t15275;
                double t15328 = Cg_1+t15326+t15327;
                double t15329 = gamma_ab*2.0;
                double t15330 = gamma_aa+gamma_bb+t15329;
                double t15331 = 1.0/two_13;
                double t15332 = 1.0/pow(t15273,7.0/6.0);
                double t15333 = t15324*t15328;
                double t15334 = Cx+t15333;
                double t15335 = 1.0/t15334;
                double t15336 = sqrt(t15330);
                double t15338 = Cinf*Fg*Pg_1*t15332*t15335*t15336;
                double t15337 = exp(-t15338);
                double t15339 = Bg*t15325*t15318*(2.0/3.0);
                double t15340 = Cg_2*c*t15274*(1.0/3.0);
                double t15341 = t15340+t15339;
                double t15342 = t15341*t15324;
                double t15343 = 1.0/(t15273*t15273);
                double t15344 = Bg*c*t15343*t15318*1.0E4;
                double t15345 = Cg_4*t15325*t15318*(2.0/3.0);
                double t15346 = Cg_3*c*t15274*(1.0/3.0);
                double t15347 = t15344+t15345+t15346;
                double t15348 = 1.0/(t15323*t15323);
                double t15349 = t15342-t15328*t15347*t15348;
                v_rho_b[Q] += scale * t15308*(EcPhd_2+t15300+t15311+t15313+t15292*t15289*(EcFhd_2-EcPhd_2-t15300+t15310-t15311+t15312-t15313+t15309))+t15314*t15317+t15273*(t15314*(t15286-t15292*t15289*(t15286-EcFld_1*1.0/(t15304*t15304)*(EcFld_3*c*t15274*(1.0/3.0)+EcFld_2*c*t15274*t15277*(1.0/6.0))))-t15308*(t15294+t15296+t15297+t15298-t15292*t15289*(t15294+t15296+t15297+t15298-EcFhd_1*t15293*(1.0/3.0)-EcFhd_3*c*t15274*(1.0/3.0)-EcFhd_4*c*t15274*(1.0/3.0)-EcFhd_3*c*t15274*t15295*(1.0/3.0)))-c*t15301*t15317*t15274*(1.0/3.0)+c*t15301*t15274*(EcPhd_2+t15300+t15311+t15313+t15292*t15289*(EcFhd_2-EcPhd_2-t15300+t15310+t15312+t15309-EcPhd_4*c*t15275-EcPhd_3*c*t15275*t15295))*(1.0/3.0))-t15330*t15331*t15334*1.0/pow(t15273,7.0/3.0)*t15337*(4.0/3.0)-t15330*t15331*t15274*t15337*t15349+t15330*t15331*t15334*t15274*t15337*(Cinf*Fg*Pg_1*t15335*1.0/pow(t15273,1.3E1/6.0)*t15336*(7.0/6.0)-Cinf*Fg*Pg_1*t15332*1.0/(t15334*t15334)*t15336*t15349);
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t15351 = rho_a+rho_b;
                double t15352 = c*c;
                double t15353 = 1.0/pow(t15351,2.0/3.0);
                double t15354 = 1.0/pow(t15351,1.0/3.0);
                double t15355 = Bg*t15352*t15353;
                double t15356 = Cg_2*c*t15354;
                double t15357 = Cg_1+t15355+t15356;
                double t15358 = 1.0/t15351;
                double t15359 = Bg*c*t15352*t15358*1.0E4;
                double t15360 = Cg_4*t15352*t15353;
                double t15361 = Cg_3*c*t15354;
                double t15362 = t15360+t15361+t15359+1.0;
                double t15363 = 1.0/t15362;
                double t15364 = t15363*t15357;
                double t15365 = Cx+t15364;
                double t15366 = 1.0/two_13;
                double t15367 = 1.0/pow(t15351,7.0/6.0);
                double t15368 = 1.0/t15365;
                double t15369 = gamma_ab*2.0;
                double t15370 = gamma_aa+gamma_bb+t15369;
                double t15371 = sqrt(t15370);
                double t15372 = exp(-Cinf*Fg*Pg_1*t15371*t15367*t15368);
                v_gamma_aa[Q] += scale * 1.0/pow(t15351,4.0/3.0)*t15372*t15365*t15366-Cinf*Fg*Pg_1*1.0/pow(t15351,5.0/2.0)*t15371*t15372*t15366*(1.0/2.0);
            }
            
            // v_gamma_ab
            if (deriv >= 1) {
                double t15374 = rho_a+rho_b;
                double t15375 = c*c;
                double t15376 = 1.0/pow(t15374,2.0/3.0);
                double t15377 = 1.0/pow(t15374,1.0/3.0);
                double t15378 = Bg*t15375*t15376;
                double t15379 = Cg_2*c*t15377;
                double t15380 = Cg_1+t15378+t15379;
                double t15381 = 1.0/t15374;
                double t15382 = Bg*c*t15381*t15375*1.0E4;
                double t15383 = Cg_4*t15375*t15376;
                double t15384 = Cg_3*c*t15377;
                double t15385 = t15382+t15383+t15384+1.0;
                double t15386 = 1.0/t15385;
                double t15387 = t15380*t15386;
                double t15388 = Cx+t15387;
                double t15389 = 1.0/two_13;
                double t15390 = 1.0/pow(t15374,7.0/6.0);
                double t15391 = 1.0/t15388;
                double t15392 = gamma_ab*2.0;
                double t15393 = gamma_aa+gamma_bb+t15392;
                double t15394 = sqrt(t15393);
                double t15395 = exp(-Cinf*Fg*Pg_1*t15390*t15391*t15394);
                v_gamma_ab[Q] += scale * 1.0/pow(t15374,4.0/3.0)*t15395*t15388*t15389*2.0-Cinf*Fg*Pg_1*1.0/pow(t15374,5.0/2.0)*t15394*t15395*t15389;
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t15397 = rho_a+rho_b;
                double t15398 = c*c;
                double t15399 = 1.0/pow(t15397,2.0/3.0);
                double t15400 = 1.0/pow(t15397,1.0/3.0);
                double t15401 = Bg*t15398*t15399;
                double t15402 = Cg_2*c*t15400;
                double t15403 = Cg_1+t15401+t15402;
                double t15404 = 1.0/t15397;
                double t15405 = Bg*c*t15404*t15398*1.0E4;
                double t15406 = Cg_4*t15398*t15399;
                double t15407 = Cg_3*c*t15400;
                double t15408 = t15405+t15406+t15407+1.0;
                double t15409 = 1.0/t15408;
                double t15410 = t15403*t15409;
                double t15411 = Cx+t15410;
                double t15412 = 1.0/two_13;
                double t15413 = 1.0/pow(t15397,7.0/6.0);
                double t15414 = 1.0/t15411;
                double t15415 = gamma_ab*2.0;
                double t15416 = gamma_aa+gamma_bb+t15415;
                double t15417 = sqrt(t15416);
                double t15418 = exp(-Cinf*Fg*Pg_1*t15413*t15414*t15417);
                v_gamma_bb[Q] += scale * t15411*t15412*t15418*1.0/pow(t15397,4.0/3.0)-Cinf*Fg*Pg_1*t15412*t15417*t15418*1.0/pow(t15397,5.0/2.0)*(1.0/2.0);
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t15422 = rho_a+rho_b;
                double t15423 = 1.0/pow(t15422,4.0/3.0);
                double t15424 = 1.0/pow(t15422,1.0/3.0);
                double t15425 = c*t15424;
                double t15426 = 1.0/sqrt(t15425);
                double t15427 = sqrt(t15425);
                double t15428 = EcPld_3*c*t15423*(1.0/3.0);
                double t15429 = EcPld_2*c*t15423*t15426*(1.0/6.0);
                double t15430 = t15428+t15429;
                double t15431 = EcPld_2*t15427;
                double t15432 = EcPld_3*c*t15424;
                double t15433 = t15431+t15432+1.0;
                double t15434 = 1.0/(t15433*t15433);
                double t15435 = EcPld_1*t15430*t15434;
                double t15436 = t15425-1.0;
                double t15437 = heaviside(t15436);
                double t15438 = pow(2.0,1.0/3.0);
                double t15439 = t15438*2.0;
                double t15440 = t15439-2.0;
                double t15441 = two_13*2.0;
                double t15442 = t15441-2.0;
                double t15443 = 1.0/t15442;
                double t15444 = EcFld_3*c*t15423*(1.0/3.0);
                double t15445 = EcFld_2*c*t15423*t15426*(1.0/6.0);
                double t15446 = t15444+t15445;
                double t15447 = EcFld_2*t15427;
                double t15448 = EcFld_3*c*t15424;
                double t15449 = t15447+t15448+1.0;
                double t15450 = t15430*t15430;
                double t15451 = 1.0/(t15433*t15433*t15433);
                double t15452 = EcPld_1*t15450*t15451*2.0;
                double t15453 = 1.0/pow(t15422,7.0/3.0);
                double t15454 = 1.0/(t15449*t15449);
                double t15455 = c*c;
                double t15456 = 1.0/pow(t15422,8.0/3.0);
                double t15457 = 1.0/pow(t15425,3.0/2.0);
                double t15458 = EcPld_3*c*t15453*(4.0/9.0);
                double t15459 = EcPld_2*c*t15426*t15453*(2.0/9.0);
                double t15460 = t15458+t15459-EcPld_2*t15455*t15456*t15457*(1.0/3.6E1);
                double t15461 = EcPld_1*t15460*t15434;
                double t15462 = 1.0/(t15422*t15422);
                double t15463 = EcPhd_1*t15462*(1.0/3.0);
                double t15464 = log(t15425);
                double t15465 = EcPhd_3*c*t15453*(5.0/9.0);
                double t15466 = EcPhd_4*c*t15453*(4.0/9.0);
                double t15467 = EcPhd_3*c*t15453*t15464*(4.0/9.0);
                double t15468 = 1.0/t15433;
                double t15469 = EcPld_1*t15468;
                double t15470 = t15435-EcFld_1*t15454*t15446;
                double t15471 = t15435-t15440*t15443*t15470;
                double t15472 = dirac(t15436);
                double t15473 = EcPhd_1*t15464;
                double t15474 = 1.0/t15422;
                double t15475 = EcPhd_1*t15474*(1.0/3.0);
                double t15476 = EcPhd_3*c*t15423*(1.0/3.0);
                double t15477 = EcPhd_4*c*t15423*(1.0/3.0);
                double t15478 = EcPhd_3*c*t15423*t15464*(1.0/3.0);
                double t15479 = 1.0/t15449;
                double t15495 = EcFld_1*t15479;
                double t15480 = -t15495+t15469;
                double t15481 = t15469-t15440*t15443*t15480;
                double t15482 = dirac(t15436,1.0);
                double t15483 = EcFhd_1*t15464;
                double t15484 = EcFhd_4*c*t15424;
                double t15485 = EcPhd_4*c*t15424;
                double t15486 = EcFhd_3*c*t15424*t15464;
                double t15487 = EcPhd_3*c*t15424*t15464;
                double t15488 = EcFhd_2-EcPhd_2-t15473+t15483+t15484-t15485+t15486-t15487;
                double t15489 = t15440*t15443*t15488;
                double t15490 = EcPhd_2+t15473+t15485+t15487+t15489;
                double t15491 = -t15425+1.0;
                double t15492 = heaviside(t15491);
                double t15493 = t15475+t15476+t15477+t15478-EcFhd_1*t15474*(1.0/3.0)-EcFhd_3*c*t15423*(1.0/3.0)-EcFhd_4*c*t15423*(1.0/3.0)-EcFhd_3*c*t15423*t15464*(1.0/3.0);
                double t15494 = t15475+t15476+t15477+t15478-t15440*t15443*t15493;
                double t15496 = 1.0/pow(t15422,2.0/3.0);
                double t15497 = Bg*c*t15455*t15474*1.0E4;
                double t15498 = Cg_4*t15455*t15496;
                double t15499 = Cg_3*c*t15424;
                double t15500 = t15497+t15498+t15499+1.0;
                double t15501 = 1.0/t15500;
                double t15502 = 1.0/pow(t15422,5.0/3.0);
                double t15503 = Bg*t15455*t15496;
                double t15504 = Cg_2*c*t15424;
                double t15505 = Cg_1+t15503+t15504;
                double t15506 = gamma_ab*2.0;
                double t15507 = gamma_aa+gamma_bb+t15506;
                double t15508 = 1.0/two_13;
                double t15509 = 1.0/pow(t15422,7.0/6.0);
                double t15510 = t15501*t15505;
                double t15511 = Cx+t15510;
                double t15512 = 1.0/t15511;
                double t15513 = sqrt(t15507);
                double t15515 = Cinf*Fg*Pg_1*t15512*t15513*t15509;
                double t15514 = exp(-t15515);
                double t15516 = Bg*t15502*t15455*(2.0/3.0);
                double t15517 = Cg_2*c*t15423*(1.0/3.0);
                double t15518 = t15516+t15517;
                double t15519 = Bg*c*t15462*t15455*1.0E4;
                double t15520 = Cg_4*t15502*t15455*(2.0/3.0);
                double t15521 = Cg_3*c*t15423*(1.0/3.0);
                double t15522 = t15520+t15521+t15519;
                double t15523 = 1.0/(t15500*t15500);
                double t15524 = t15501*t15518;
                double t15539 = t15522*t15505*t15523;
                double t15525 = t15524-t15539;
                double t15526 = Bg*t15455*t15456*(1.0E1/9.0);
                double t15527 = Cg_2*c*t15453*(4.0/9.0);
                double t15528 = t15526+t15527;
                double t15529 = t15501*t15528;
                double t15530 = 1.0/(t15422*t15422*t15422);
                double t15531 = Bg*c*t15530*t15455*2.0E4;
                double t15532 = Cg_4*t15455*t15456*(1.0E1/9.0);
                double t15533 = Cg_3*c*t15453*(4.0/9.0);
                double t15534 = t15531+t15532+t15533;
                double t15535 = t15522*t15522;
                double t15536 = 1.0/(t15500*t15500*t15500);
                double t15537 = t15505*t15535*t15536*2.0;
                double t15538 = t15537+t15529-t15505*t15523*t15534-t15522*t15523*t15518*2.0;
                double t15540 = 1.0/(t15511*t15511);
                double t15541 = 1.0/pow(t15422,1.3E1/6.0);
                double t15542 = Cinf*Fg*Pg_1*t15512*t15513*t15541*(7.0/6.0);
                double t15544 = Cinf*Fg*Pg_1*t15513*t15540*t15525*t15509;
                double t15543 = t15542-t15544;
                v_rho_a_rho_a[Q] += scale * -t15422*(-t15492*(t15463+t15465+t15466+t15467-t15440*t15443*(t15463+t15465+t15466+t15467-EcFhd_1*t15462*(1.0/3.0)-EcFhd_3*c*t15453*(5.0/9.0)-EcFhd_4*c*t15453*(4.0/9.0)-EcFhd_3*c*t15453*t15464*(4.0/9.0)))+t15437*(-t15452+t15461+t15440*t15443*(t15452-t15461-EcFld_1*(t15446*t15446)*1.0/(t15449*t15449*t15449)*2.0+EcFld_1*t15454*(EcFld_3*c*t15453*(4.0/9.0)-EcFld_2*t15455*t15456*t15457*(1.0/3.6E1)+EcFld_2*c*t15426*t15453*(2.0/9.0))))+c*t15423*t15471*t15472*(2.0/3.0)-c*t15453*t15472*t15481*(4.0/9.0)+c*t15453*t15472*t15490*(4.0/9.0)+c*t15423*t15472*t15494*(2.0/3.0)-t15481*t15455*t15482*t15456*(1.0/9.0)+t15490*t15455*t15482*t15456*(1.0/9.0))+t15471*t15437*2.0-t15492*t15494*2.0+c*t15423*t15472*t15490*(2.0/3.0)-c*t15423*t15472*(t15469+t15440*t15443*(t15495-t15469))*(2.0/3.0)+t15511*1.0/pow(t15422,1.0E1/3.0)*t15514*t15507*t15508*(2.8E1/9.0)+t15514*t15453*t15507*t15525*t15508*(8.0/3.0)+t15423*t15514*t15507*t15508*t15538-t15511*t15514*t15453*t15507*t15543*t15508*(8.0/3.0)-t15423*t15514*t15507*t15525*t15543*t15508*2.0+t15511*t15423*t15514*t15507*(t15543*t15543)*t15508-t15511*t15423*t15514*t15507*t15508*(Cinf*Fg*Pg_1*1.0/pow(t15422,1.9E1/6.0)*t15512*t15513*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t15513*t15540*t15541*t15525*(7.0/3.0)-Cinf*Fg*Pg_1*t15513*t15540*t15509*t15538+Cinf*Fg*Pg_1*1.0/(t15511*t15511*t15511)*t15513*(t15525*t15525)*t15509*2.0);
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t15546 = rho_a+rho_b;
                double t15547 = 1.0/pow(t15546,4.0/3.0);
                double t15548 = 1.0/pow(t15546,1.0/3.0);
                double t15549 = c*t15548;
                double t15550 = 1.0/sqrt(t15549);
                double t15551 = sqrt(t15549);
                double t15552 = EcPld_3*c*t15547*(1.0/3.0);
                double t15553 = EcPld_2*c*t15550*t15547*(1.0/6.0);
                double t15554 = t15552+t15553;
                double t15555 = EcPld_2*t15551;
                double t15556 = EcPld_3*c*t15548;
                double t15557 = t15555+t15556+1.0;
                double t15558 = 1.0/(t15557*t15557);
                double t15559 = EcPld_1*t15554*t15558;
                double t15560 = t15549-1.0;
                double t15561 = heaviside(t15560);
                double t15562 = pow(2.0,1.0/3.0);
                double t15563 = t15562*2.0;
                double t15564 = t15563-2.0;
                double t15565 = two_13*2.0;
                double t15566 = t15565-2.0;
                double t15567 = 1.0/t15566;
                double t15568 = EcFld_3*c*t15547*(1.0/3.0);
                double t15569 = EcFld_2*c*t15550*t15547*(1.0/6.0);
                double t15570 = t15568+t15569;
                double t15571 = EcFld_2*t15551;
                double t15572 = EcFld_3*c*t15548;
                double t15573 = t15571+t15572+1.0;
                double t15574 = t15554*t15554;
                double t15575 = 1.0/(t15557*t15557*t15557);
                double t15576 = EcPld_1*t15574*t15575*2.0;
                double t15577 = 1.0/pow(t15546,7.0/3.0);
                double t15578 = 1.0/(t15573*t15573);
                double t15579 = c*c;
                double t15580 = 1.0/pow(t15546,8.0/3.0);
                double t15581 = 1.0/pow(t15549,3.0/2.0);
                double t15582 = EcPld_3*c*t15577*(4.0/9.0);
                double t15583 = EcPld_2*c*t15550*t15577*(2.0/9.0);
                double t15584 = t15582+t15583-EcPld_2*t15580*t15581*t15579*(1.0/3.6E1);
                double t15585 = EcPld_1*t15584*t15558;
                double t15586 = 1.0/(t15546*t15546);
                double t15587 = EcPhd_1*t15586*(1.0/3.0);
                double t15588 = log(t15549);
                double t15589 = EcPhd_3*c*t15577*(5.0/9.0);
                double t15590 = EcPhd_4*c*t15577*(4.0/9.0);
                double t15591 = EcPhd_3*c*t15577*t15588*(4.0/9.0);
                double t15592 = 1.0/t15557;
                double t15593 = EcPld_1*t15592;
                double t15594 = t15559-EcFld_1*t15570*t15578;
                double t15595 = t15559-t15564*t15567*t15594;
                double t15596 = dirac(t15560);
                double t15597 = EcPhd_1*t15588;
                double t15598 = 1.0/t15546;
                double t15599 = EcPhd_1*t15598*(1.0/3.0);
                double t15600 = EcPhd_3*c*t15547*(1.0/3.0);
                double t15601 = EcPhd_4*c*t15547*(1.0/3.0);
                double t15602 = EcPhd_3*c*t15547*t15588*(1.0/3.0);
                double t15603 = 1.0/t15573;
                double t15619 = EcFld_1*t15603;
                double t15604 = -t15619+t15593;
                double t15605 = t15593-t15604*t15564*t15567;
                double t15606 = dirac(t15560,1.0);
                double t15607 = EcFhd_1*t15588;
                double t15608 = EcFhd_4*c*t15548;
                double t15609 = EcPhd_4*c*t15548;
                double t15610 = EcFhd_3*c*t15548*t15588;
                double t15611 = EcPhd_3*c*t15548*t15588;
                double t15612 = EcFhd_2-EcPhd_2+t15610-t15611+t15607+t15608-t15609-t15597;
                double t15613 = t15612*t15564*t15567;
                double t15614 = EcPhd_2+t15611+t15613+t15609+t15597;
                double t15615 = -t15549+1.0;
                double t15616 = heaviside(t15615);
                double t15617 = t15600+t15601+t15602+t15599-EcFhd_1*t15598*(1.0/3.0)-EcFhd_3*c*t15547*(1.0/3.0)-EcFhd_4*c*t15547*(1.0/3.0)-EcFhd_3*c*t15547*t15588*(1.0/3.0);
                double t15618 = t15600+t15601+t15602+t15599-t15617*t15564*t15567;
                double t15620 = 1.0/pow(t15546,2.0/3.0);
                double t15621 = Bg*c*t15579*t15598*1.0E4;
                double t15622 = Cg_4*t15620*t15579;
                double t15623 = Cg_3*c*t15548;
                double t15624 = t15621+t15622+t15623+1.0;
                double t15625 = 1.0/t15624;
                double t15626 = 1.0/pow(t15546,5.0/3.0);
                double t15627 = Bg*t15620*t15579;
                double t15628 = Cg_2*c*t15548;
                double t15629 = Cg_1+t15627+t15628;
                double t15630 = gamma_ab*2.0;
                double t15631 = gamma_aa+gamma_bb+t15630;
                double t15632 = 1.0/two_13;
                double t15633 = 1.0/pow(t15546,7.0/6.0);
                double t15634 = t15625*t15629;
                double t15635 = Cx+t15634;
                double t15636 = 1.0/t15635;
                double t15637 = sqrt(t15631);
                double t15639 = Cinf*Fg*Pg_1*t15633*t15636*t15637;
                double t15638 = exp(-t15639);
                double t15640 = Bg*t15626*t15579*(2.0/3.0);
                double t15641 = Cg_2*c*t15547*(1.0/3.0);
                double t15642 = t15640+t15641;
                double t15643 = Bg*c*t15586*t15579*1.0E4;
                double t15644 = Cg_4*t15626*t15579*(2.0/3.0);
                double t15645 = Cg_3*c*t15547*(1.0/3.0);
                double t15646 = t15643+t15644+t15645;
                double t15647 = 1.0/(t15624*t15624);
                double t15648 = t15642*t15625;
                double t15663 = t15646*t15629*t15647;
                double t15649 = -t15663+t15648;
                double t15650 = Bg*t15580*t15579*(1.0E1/9.0);
                double t15651 = Cg_2*c*t15577*(4.0/9.0);
                double t15652 = t15650+t15651;
                double t15653 = t15625*t15652;
                double t15654 = 1.0/(t15546*t15546*t15546);
                double t15655 = Bg*c*t15654*t15579*2.0E4;
                double t15656 = Cg_4*t15580*t15579*(1.0E1/9.0);
                double t15657 = Cg_3*c*t15577*(4.0/9.0);
                double t15658 = t15655+t15656+t15657;
                double t15659 = t15646*t15646;
                double t15660 = 1.0/(t15624*t15624*t15624);
                double t15661 = t15660*t15629*t15659*2.0;
                double t15662 = t15661+t15653-t15642*t15646*t15647*2.0-t15629*t15647*t15658;
                double t15664 = 1.0/(t15635*t15635);
                double t15665 = 1.0/pow(t15546,1.3E1/6.0);
                double t15666 = Cinf*Fg*Pg_1*t15636*t15637*t15665*(7.0/6.0);
                double t15668 = Cinf*Fg*Pg_1*t15633*t15637*t15664*t15649;
                double t15667 = t15666-t15668;
                v_rho_a_rho_b[Q] += scale * -t15546*(-t15616*(t15590+t15591+t15587+t15589-t15564*t15567*(t15590+t15591+t15587+t15589-EcFhd_1*t15586*(1.0/3.0)-EcFhd_3*c*t15577*(5.0/9.0)-EcFhd_4*c*t15577*(4.0/9.0)-EcFhd_3*c*t15577*t15588*(4.0/9.0)))+t15561*(-t15576+t15585+t15564*t15567*(t15576-t15585-EcFld_1*(t15570*t15570)*1.0/(t15573*t15573*t15573)*2.0+EcFld_1*t15578*(EcFld_3*c*t15577*(4.0/9.0)-EcFld_2*t15580*t15581*t15579*(1.0/3.6E1)+EcFld_2*c*t15550*t15577*(2.0/9.0))))-c*t15605*t15577*t15596*(4.0/9.0)+c*t15614*t15577*t15596*(4.0/9.0)+c*t15618*t15547*t15596*(2.0/3.0)+c*t15547*t15595*t15596*(2.0/3.0)-t15605*t15606*t15580*t15579*(1.0/9.0)+t15614*t15606*t15580*t15579*(1.0/9.0))-t15616*t15618*2.0+t15561*t15595*2.0+c*t15614*t15547*t15596*(2.0/3.0)-c*t15547*t15596*(t15593+t15564*t15567*(t15619-t15593))*(2.0/3.0)+t15631*t15632*t15635*1.0/pow(t15546,1.0E1/3.0)*t15638*(2.8E1/9.0)+t15631*t15632*t15662*t15547*t15638+t15631*t15632*t15638*t15577*t15649*(8.0/3.0)-t15631*t15632*t15635*t15638*t15577*t15667*(8.0/3.0)-t15631*t15632*t15547*t15638*t15649*t15667*2.0+t15631*t15632*t15635*t15547*t15638*(t15667*t15667)-t15631*t15632*t15635*t15547*t15638*(Cinf*Fg*Pg_1*1.0/pow(t15546,1.9E1/6.0)*t15636*t15637*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t15633*t15662*t15637*t15664-Cinf*Fg*Pg_1*t15637*t15664*t15665*t15649*(7.0/3.0)+Cinf*Fg*Pg_1*t15633*1.0/(t15635*t15635*t15635)*t15637*(t15649*t15649)*2.0);
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t15670 = rho_a+rho_b;
                double t15671 = 1.0/pow(t15670,4.0/3.0);
                double t15672 = 1.0/pow(t15670,1.0/3.0);
                double t15673 = c*t15672;
                double t15674 = 1.0/sqrt(t15673);
                double t15675 = sqrt(t15673);
                double t15676 = EcPld_3*c*t15671*(1.0/3.0);
                double t15677 = EcPld_2*c*t15671*t15674*(1.0/6.0);
                double t15678 = t15676+t15677;
                double t15679 = EcPld_2*t15675;
                double t15680 = EcPld_3*c*t15672;
                double t15681 = t15680+t15679+1.0;
                double t15682 = 1.0/(t15681*t15681);
                double t15683 = EcPld_1*t15682*t15678;
                double t15684 = t15673-1.0;
                double t15685 = heaviside(t15684);
                double t15686 = pow(2.0,1.0/3.0);
                double t15687 = t15686*2.0;
                double t15688 = t15687-2.0;
                double t15689 = two_13*2.0;
                double t15690 = t15689-2.0;
                double t15691 = 1.0/t15690;
                double t15692 = EcFld_3*c*t15671*(1.0/3.0);
                double t15693 = EcFld_2*c*t15671*t15674*(1.0/6.0);
                double t15694 = t15692+t15693;
                double t15695 = EcFld_2*t15675;
                double t15696 = EcFld_3*c*t15672;
                double t15697 = t15695+t15696+1.0;
                double t15698 = t15678*t15678;
                double t15699 = 1.0/(t15681*t15681*t15681);
                double t15700 = EcPld_1*t15698*t15699*2.0;
                double t15701 = 1.0/pow(t15670,7.0/3.0);
                double t15702 = 1.0/(t15697*t15697);
                double t15703 = c*c;
                double t15704 = 1.0/pow(t15670,8.0/3.0);
                double t15705 = 1.0/pow(t15673,3.0/2.0);
                double t15706 = EcPld_3*c*t15701*(4.0/9.0);
                double t15707 = EcPld_2*c*t15701*t15674*(2.0/9.0);
                double t15708 = t15706+t15707-EcPld_2*t15703*t15704*t15705*(1.0/3.6E1);
                double t15709 = EcPld_1*t15708*t15682;
                double t15710 = 1.0/(t15670*t15670);
                double t15711 = EcPhd_1*t15710*(1.0/3.0);
                double t15712 = log(t15673);
                double t15713 = EcPhd_3*c*t15701*(5.0/9.0);
                double t15714 = EcPhd_4*c*t15701*(4.0/9.0);
                double t15715 = EcPhd_3*c*t15701*t15712*(4.0/9.0);
                double t15716 = 1.0/t15681;
                double t15717 = EcPld_1*t15716;
                double t15718 = t15683-EcFld_1*t15702*t15694;
                double t15719 = t15683-t15691*t15718*t15688;
                double t15720 = dirac(t15684);
                double t15721 = EcPhd_1*t15712;
                double t15722 = 1.0/t15670;
                double t15723 = EcPhd_1*t15722*(1.0/3.0);
                double t15724 = EcPhd_3*c*t15671*(1.0/3.0);
                double t15725 = EcPhd_4*c*t15671*(1.0/3.0);
                double t15726 = EcPhd_3*c*t15712*t15671*(1.0/3.0);
                double t15727 = 1.0/t15697;
                double t15743 = EcFld_1*t15727;
                double t15728 = -t15743+t15717;
                double t15729 = t15717-t15691*t15728*t15688;
                double t15730 = dirac(t15684,1.0);
                double t15731 = EcFhd_1*t15712;
                double t15732 = EcFhd_4*c*t15672;
                double t15733 = EcPhd_4*c*t15672;
                double t15734 = EcFhd_3*c*t15712*t15672;
                double t15735 = EcPhd_3*c*t15712*t15672;
                double t15736 = EcFhd_2-EcPhd_2-t15721+t15731+t15732-t15733+t15734-t15735;
                double t15737 = t15691*t15736*t15688;
                double t15738 = EcPhd_2+t15721+t15733+t15735+t15737;
                double t15739 = -t15673+1.0;
                double t15740 = heaviside(t15739);
                double t15741 = t15723+t15724+t15725+t15726-EcFhd_1*t15722*(1.0/3.0)-EcFhd_3*c*t15671*(1.0/3.0)-EcFhd_4*c*t15671*(1.0/3.0)-EcFhd_3*c*t15712*t15671*(1.0/3.0);
                double t15742 = t15723+t15724+t15725+t15726-t15741*t15691*t15688;
                double t15744 = 1.0/pow(t15670,2.0/3.0);
                double t15745 = Bg*c*t15703*t15722*1.0E4;
                double t15746 = Cg_4*t15703*t15744;
                double t15747 = Cg_3*c*t15672;
                double t15748 = t15745+t15746+t15747+1.0;
                double t15749 = 1.0/t15748;
                double t15750 = 1.0/pow(t15670,5.0/3.0);
                double t15751 = Bg*t15703*t15744;
                double t15752 = Cg_2*c*t15672;
                double t15753 = Cg_1+t15751+t15752;
                double t15754 = gamma_ab*2.0;
                double t15755 = gamma_aa+gamma_bb+t15754;
                double t15756 = 1.0/two_13;
                double t15757 = 1.0/pow(t15670,7.0/6.0);
                double t15758 = t15753*t15749;
                double t15759 = Cx+t15758;
                double t15760 = 1.0/t15759;
                double t15761 = sqrt(t15755);
                double t15763 = Cinf*Fg*Pg_1*t15760*t15761*t15757;
                double t15762 = exp(-t15763);
                double t15764 = Bg*t15703*t15750*(2.0/3.0);
                double t15765 = Cg_2*c*t15671*(1.0/3.0);
                double t15766 = t15764+t15765;
                double t15767 = Bg*c*t15710*t15703*1.0E4;
                double t15768 = Cg_4*t15703*t15750*(2.0/3.0);
                double t15769 = Cg_3*c*t15671*(1.0/3.0);
                double t15770 = t15767+t15768+t15769;
                double t15771 = 1.0/(t15748*t15748);
                double t15772 = t15766*t15749;
                double t15787 = t15770*t15753*t15771;
                double t15773 = t15772-t15787;
                double t15774 = Bg*t15703*t15704*(1.0E1/9.0);
                double t15775 = Cg_2*c*t15701*(4.0/9.0);
                double t15776 = t15774+t15775;
                double t15777 = t15749*t15776;
                double t15778 = 1.0/(t15670*t15670*t15670);
                double t15779 = Bg*c*t15703*t15778*2.0E4;
                double t15780 = Cg_4*t15703*t15704*(1.0E1/9.0);
                double t15781 = Cg_3*c*t15701*(4.0/9.0);
                double t15782 = t15780+t15781+t15779;
                double t15783 = t15770*t15770;
                double t15784 = 1.0/(t15748*t15748*t15748);
                double t15785 = t15753*t15783*t15784*2.0;
                double t15786 = t15785+t15777-t15753*t15771*t15782-t15770*t15771*t15766*2.0;
                double t15788 = 1.0/(t15759*t15759);
                double t15789 = 1.0/pow(t15670,1.3E1/6.0);
                double t15790 = Cinf*Fg*Pg_1*t15760*t15761*t15789*(7.0/6.0);
                double t15792 = Cinf*Fg*Pg_1*t15761*t15773*t15757*t15788;
                double t15791 = t15790-t15792;
                v_rho_b_rho_b[Q] += scale * -t15670*(-t15740*(t15711+t15713+t15714+t15715-t15691*t15688*(t15711+t15713+t15714+t15715-EcFhd_1*t15710*(1.0/3.0)-EcFhd_3*c*t15701*(5.0/9.0)-EcFhd_4*c*t15701*(4.0/9.0)-EcFhd_3*c*t15701*t15712*(4.0/9.0)))+t15685*(-t15700+t15709+t15691*t15688*(t15700-t15709-EcFld_1*(t15694*t15694)*1.0/(t15697*t15697*t15697)*2.0+EcFld_1*t15702*(EcFld_3*c*t15701*(4.0/9.0)-EcFld_2*t15703*t15704*t15705*(1.0/3.6E1)+EcFld_2*c*t15701*t15674*(2.0/9.0))))-c*t15701*t15720*t15729*(4.0/9.0)+c*t15701*t15720*t15738*(4.0/9.0)+c*t15720*t15742*t15671*(2.0/3.0)+c*t15720*t15671*t15719*(2.0/3.0)-t15703*t15730*t15704*t15729*(1.0/9.0)+t15703*t15730*t15704*t15738*(1.0/9.0))-t15740*t15742*2.0+t15719*t15685*2.0+c*t15720*t15671*t15738*(2.0/3.0)-c*t15720*t15671*(t15717+t15691*t15688*(t15743-t15717))*(2.0/3.0)+1.0/pow(t15670,1.0E1/3.0)*t15762*t15755*t15756*t15759*(2.8E1/9.0)+t15701*t15762*t15755*t15773*t15756*(8.0/3.0)+t15671*t15762*t15755*t15756*t15786-t15701*t15762*t15755*t15791*t15756*t15759*(8.0/3.0)-t15671*t15762*t15755*t15773*t15791*t15756*2.0+t15671*t15762*t15755*(t15791*t15791)*t15756*t15759-t15671*t15762*t15755*t15756*t15759*(Cinf*Fg*Pg_1*1.0/pow(t15670,1.9E1/6.0)*t15760*t15761*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t15761*t15757*t15786*t15788-Cinf*Fg*Pg_1*t15761*t15773*t15788*t15789*(7.0/3.0)+Cinf*Fg*Pg_1*t15761*(t15773*t15773)*t15757*1.0/(t15759*t15759*t15759)*2.0);
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t16058 = rho_a+rho_b;
                double t16059 = c*c;
                double t16060 = 1.0/pow(t16058,2.0/3.0);
                double t16061 = 1.0/pow(t16058,1.0/3.0);
                double t16062 = Bg*t16060*t16059;
                double t16063 = Cg_2*c*t16061;
                double t16064 = Cg_1+t16062+t16063;
                double t16065 = 1.0/t16058;
                double t16066 = Bg*c*t16065*t16059*1.0E4;
                double t16067 = Cg_4*t16060*t16059;
                double t16068 = Cg_3*c*t16061;
                double t16069 = t16066+t16067+t16068+1.0;
                double t16070 = 1.0/t16069;
                double t16071 = t16070*t16064;
                double t16072 = Cx+t16071;
                double t16073 = 1.0/t16072;
                double t16074 = 1.0/two_13;
                double t16075 = 1.0/pow(t16058,7.0/6.0);
                double t16076 = gamma_ab*2.0;
                double t16077 = gamma_aa+gamma_bb+t16076;
                double t16078 = sqrt(t16077);
                double t16079 = exp(-Cinf*Fg*Pg_1*t16073*t16075*t16078);
                v_gamma_aa_gamma_aa[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t16073*t16074*1.0/pow(t16058,1.1E1/3.0)*t16079*(1.0/4.0)-Cinf*Fg*Pg_1*t16074*1.0/pow(t16058,5.0/2.0)*1.0/sqrt(t16077)*t16079*(3.0/4.0);
            }
            
            // v_gamma_aa_gamma_ab
            if (deriv >= 2) {
                double t16081 = rho_a+rho_b;
                double t16082 = c*c;
                double t16083 = 1.0/pow(t16081,2.0/3.0);
                double t16084 = 1.0/pow(t16081,1.0/3.0);
                double t16085 = Bg*t16082*t16083;
                double t16086 = Cg_2*c*t16084;
                double t16087 = Cg_1+t16085+t16086;
                double t16088 = 1.0/t16081;
                double t16089 = Bg*c*t16082*t16088*1.0E4;
                double t16090 = Cg_4*t16082*t16083;
                double t16091 = Cg_3*c*t16084;
                double t16092 = t16090+t16091+t16089+1.0;
                double t16093 = 1.0/t16092;
                double t16094 = t16093*t16087;
                double t16095 = Cx+t16094;
                double t16096 = 1.0/t16095;
                double t16097 = 1.0/two_13;
                double t16098 = 1.0/pow(t16081,7.0/6.0);
                double t16099 = gamma_ab*2.0;
                double t16100 = gamma_aa+gamma_bb+t16099;
                double t16101 = sqrt(t16100);
                double t16102 = exp(-Cinf*Fg*Pg_1*t16101*t16096*t16098);
                v_gamma_aa_gamma_ab[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t16102*1.0/pow(t16081,1.1E1/3.0)*t16096*t16097*(1.0/2.0)-Cinf*Fg*Pg_1*1.0/sqrt(t16100)*t16102*1.0/pow(t16081,5.0/2.0)*t16097*(3.0/2.0);
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t16104 = rho_a+rho_b;
                double t16105 = c*c;
                double t16106 = 1.0/pow(t16104,2.0/3.0);
                double t16107 = 1.0/pow(t16104,1.0/3.0);
                double t16108 = Bg*t16105*t16106;
                double t16109 = Cg_2*c*t16107;
                double t16110 = Cg_1+t16108+t16109;
                double t16111 = 1.0/t16104;
                double t16112 = Bg*c*t16111*t16105*1.0E4;
                double t16113 = Cg_4*t16105*t16106;
                double t16114 = Cg_3*c*t16107;
                double t16115 = t16112+t16113+t16114+1.0;
                double t16116 = 1.0/t16115;
                double t16117 = t16110*t16116;
                double t16118 = Cx+t16117;
                double t16119 = 1.0/t16118;
                double t16120 = 1.0/two_13;
                double t16121 = 1.0/pow(t16104,7.0/6.0);
                double t16122 = gamma_ab*2.0;
                double t16123 = gamma_aa+gamma_bb+t16122;
                double t16124 = sqrt(t16123);
                double t16125 = exp(-Cinf*Fg*Pg_1*t16121*t16124*t16119);
                v_gamma_aa_gamma_bb[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t16120*1.0/pow(t16104,1.1E1/3.0)*t16125*t16119*(1.0/4.0)-Cinf*Fg*Pg_1*t16120*1.0/pow(t16104,5.0/2.0)*1.0/sqrt(t16123)*t16125*(3.0/4.0);
            }
            
            // v_gamma_ab_gamma_ab
            if (deriv >= 2) {
                double t16127 = rho_a+rho_b;
                double t16128 = c*c;
                double t16129 = 1.0/pow(t16127,2.0/3.0);
                double t16130 = 1.0/pow(t16127,1.0/3.0);
                double t16131 = Bg*t16128*t16129;
                double t16132 = Cg_2*c*t16130;
                double t16133 = Cg_1+t16131+t16132;
                double t16134 = 1.0/t16127;
                double t16135 = Bg*c*t16134*t16128*1.0E4;
                double t16136 = Cg_4*t16128*t16129;
                double t16137 = Cg_3*c*t16130;
                double t16138 = t16135+t16136+t16137+1.0;
                double t16139 = 1.0/t16138;
                double t16140 = t16133*t16139;
                double t16141 = Cx+t16140;
                double t16142 = 1.0/t16141;
                double t16143 = 1.0/two_13;
                double t16144 = 1.0/pow(t16127,7.0/6.0);
                double t16145 = gamma_ab*2.0;
                double t16146 = gamma_aa+gamma_bb+t16145;
                double t16147 = sqrt(t16146);
                double t16148 = exp(-Cinf*Fg*Pg_1*t16142*t16144*t16147);
                v_gamma_ab_gamma_ab[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t16142*t16143*1.0/pow(t16127,1.1E1/3.0)*t16148-Cinf*Fg*Pg_1*t16143*1.0/pow(t16127,5.0/2.0)*1.0/sqrt(t16146)*t16148*3.0;
            }
            
            // v_gamma_ab_gamma_bb
            if (deriv >= 2) {
                double t16150 = rho_a+rho_b;
                double t16151 = c*c;
                double t16152 = 1.0/pow(t16150,2.0/3.0);
                double t16153 = 1.0/pow(t16150,1.0/3.0);
                double t16154 = Bg*t16151*t16152;
                double t16155 = Cg_2*c*t16153;
                double t16156 = Cg_1+t16154+t16155;
                double t16157 = 1.0/t16150;
                double t16158 = Bg*c*t16151*t16157*1.0E4;
                double t16159 = Cg_4*t16151*t16152;
                double t16160 = Cg_3*c*t16153;
                double t16161 = t16160+t16158+t16159+1.0;
                double t16162 = 1.0/t16161;
                double t16163 = t16162*t16156;
                double t16164 = Cx+t16163;
                double t16165 = 1.0/t16164;
                double t16166 = 1.0/two_13;
                double t16167 = 1.0/pow(t16150,7.0/6.0);
                double t16168 = gamma_ab*2.0;
                double t16169 = gamma_aa+gamma_bb+t16168;
                double t16170 = sqrt(t16169);
                double t16171 = exp(-Cinf*Fg*Pg_1*t16170*t16165*t16167);
                v_gamma_ab_gamma_bb[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*1.0/pow(t16150,1.1E1/3.0)*t16171*t16165*t16166*(1.0/2.0)-Cinf*Fg*Pg_1*1.0/pow(t16150,5.0/2.0)*t16171*t16166*1.0/sqrt(t16169)*(3.0/2.0);
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t16173 = rho_a+rho_b;
                double t16174 = c*c;
                double t16175 = 1.0/pow(t16173,2.0/3.0);
                double t16176 = 1.0/pow(t16173,1.0/3.0);
                double t16177 = Bg*t16174*t16175;
                double t16178 = Cg_2*c*t16176;
                double t16179 = Cg_1+t16177+t16178;
                double t16180 = 1.0/t16173;
                double t16181 = Bg*c*t16180*t16174*1.0E4;
                double t16182 = Cg_4*t16174*t16175;
                double t16183 = Cg_3*c*t16176;
                double t16184 = t16181+t16182+t16183+1.0;
                double t16185 = 1.0/t16184;
                double t16186 = t16185*t16179;
                double t16187 = Cx+t16186;
                double t16188 = 1.0/t16187;
                double t16189 = 1.0/two_13;
                double t16190 = 1.0/pow(t16173,7.0/6.0);
                double t16191 = gamma_ab*2.0;
                double t16192 = gamma_aa+gamma_bb+t16191;
                double t16193 = sqrt(t16192);
                double t16194 = exp(-Cinf*Fg*Pg_1*t16190*t16193*t16188);
                v_gamma_bb_gamma_bb[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*1.0/pow(t16173,1.1E1/3.0)*t16194*t16188*t16189*(1.0/4.0)-Cinf*Fg*Pg_1*1.0/pow(t16173,5.0/2.0)*1.0/sqrt(t16192)*t16194*t16189*(3.0/4.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t15794 = rho_a+rho_b;
                double t15795 = c*c;
                double t15796 = 1.0/pow(t15794,2.0/3.0);
                double t15797 = 1.0/pow(t15794,1.0/3.0);
                double t15798 = 1.0/pow(t15794,4.0/3.0);
                double t15799 = 1.0/t15794;
                double t15800 = Bg*c*t15795*t15799*1.0E4;
                double t15801 = Cg_4*t15795*t15796;
                double t15802 = Cg_3*c*t15797;
                double t15803 = t15800+t15801+t15802+1.0;
                double t15804 = 1.0/t15803;
                double t15805 = 1.0/pow(t15794,5.0/3.0);
                double t15806 = Bg*t15795*t15796;
                double t15807 = Cg_2*c*t15797;
                double t15808 = Cg_1+t15806+t15807;
                double t15809 = 1.0/two_13;
                double t15810 = 1.0/pow(t15794,7.0/6.0);
                double t15811 = t15804*t15808;
                double t15812 = Cx+t15811;
                double t15813 = 1.0/t15812;
                double t15814 = gamma_ab*2.0;
                double t15815 = gamma_aa+gamma_bb+t15814;
                double t15816 = sqrt(t15815);
                double t15818 = Cinf*Fg*Pg_1*t15810*t15813*t15816;
                double t15817 = exp(-t15818);
                double t15819 = Bg*t15805*t15795*(2.0/3.0);
                double t15820 = Cg_2*c*t15798*(1.0/3.0);
                double t15821 = t15820+t15819;
                double t15822 = t15821*t15804;
                double t15823 = 1.0/(t15794*t15794);
                double t15824 = Bg*c*t15823*t15795*1.0E4;
                double t15825 = Cg_4*t15805*t15795*(2.0/3.0);
                double t15826 = Cg_3*c*t15798*(1.0/3.0);
                double t15827 = t15824+t15825+t15826;
                double t15828 = 1.0/(t15803*t15803);
                double t15831 = t15808*t15827*t15828;
                double t15829 = t15822-t15831;
                double t15830 = 1.0/pow(t15794,1.3E1/6.0);
                double t15832 = 1.0/(t15812*t15812);
                double t15833 = 1.0/sqrt(t15815);
                double t15834 = Cinf*Fg*Pg_1*t15830*t15813*t15816*(7.0/6.0);
                double t15835 = t15834-Cinf*Fg*Pg_1*t15810*t15832*t15816*t15829;
                double t15836 = 1.0/pow(t15794,5.0/2.0);
                v_rho_a_gamma_aa[Q] += scale * -t15817*t15809*t15829*t15798-t15812*t15817*t15809*1.0/pow(t15794,7.0/3.0)*(4.0/3.0)+t15812*t15817*t15835*t15809*t15798+t15812*t15815*t15817*t15809*t15798*(Cinf*Fg*Pg_1*t15830*t15813*t15833*(7.0/1.2E1)-Cinf*Fg*Pg_1*t15810*t15832*t15833*t15829*(1.0/2.0))+Cinf*Fg*Pg_1*t15816*t15817*t15809*1.0/pow(t15794,7.0/2.0)*(2.0/3.0)-Cinf*Fg*Pg_1*t15816*t15817*t15835*t15809*t15836*(1.0/2.0)+Cinf*Fg*Pg_1*t15813*t15816*t15817*t15809*t15836*t15829*(1.0/2.0);
            }
            
            // v_rho_a_gamma_ab
            if (deriv >= 2) {
                double t15838 = rho_a+rho_b;
                double t15839 = c*c;
                double t15840 = 1.0/pow(t15838,2.0/3.0);
                double t15841 = 1.0/pow(t15838,1.0/3.0);
                double t15842 = 1.0/pow(t15838,4.0/3.0);
                double t15843 = 1.0/t15838;
                double t15844 = Bg*c*t15843*t15839*1.0E4;
                double t15845 = Cg_4*t15840*t15839;
                double t15846 = Cg_3*c*t15841;
                double t15847 = t15844+t15845+t15846+1.0;
                double t15848 = 1.0/t15847;
                double t15849 = 1.0/pow(t15838,5.0/3.0);
                double t15850 = Bg*t15840*t15839;
                double t15851 = Cg_2*c*t15841;
                double t15852 = Cg_1+t15850+t15851;
                double t15853 = 1.0/two_13;
                double t15854 = 1.0/pow(t15838,7.0/6.0);
                double t15855 = t15852*t15848;
                double t15856 = Cx+t15855;
                double t15857 = 1.0/t15856;
                double t15858 = gamma_ab*2.0;
                double t15859 = gamma_aa+gamma_bb+t15858;
                double t15860 = sqrt(t15859);
                double t15862 = Cinf*Fg*Pg_1*t15860*t15854*t15857;
                double t15861 = exp(-t15862);
                double t15863 = Bg*t15839*t15849*(2.0/3.0);
                double t15864 = Cg_2*c*t15842*(1.0/3.0);
                double t15865 = t15863+t15864;
                double t15866 = t15865*t15848;
                double t15867 = 1.0/(t15838*t15838);
                double t15868 = Bg*c*t15839*t15867*1.0E4;
                double t15869 = Cg_4*t15839*t15849*(2.0/3.0);
                double t15870 = Cg_3*c*t15842*(1.0/3.0);
                double t15871 = t15870+t15868+t15869;
                double t15872 = 1.0/(t15847*t15847);
                double t15875 = t15852*t15871*t15872;
                double t15873 = t15866-t15875;
                double t15874 = 1.0/pow(t15838,1.3E1/6.0);
                double t15876 = 1.0/(t15856*t15856);
                double t15877 = 1.0/sqrt(t15859);
                double t15878 = Cinf*Fg*Pg_1*t15860*t15874*t15857*(7.0/6.0);
                double t15879 = t15878-Cinf*Fg*Pg_1*t15860*t15854*t15873*t15876;
                double t15880 = 1.0/pow(t15838,5.0/2.0);
                v_rho_a_gamma_ab[Q] += scale * t15842*t15861*t15853*t15873*-2.0-t15861*t15853*1.0/pow(t15838,7.0/3.0)*t15856*(8.0/3.0)+t15842*t15861*t15853*t15856*t15879*2.0+t15842*t15861*t15853*t15856*t15859*(Cinf*Fg*Pg_1*t15874*t15857*t15877*(7.0/6.0)-Cinf*Fg*Pg_1*t15854*t15873*t15876*t15877)+Cinf*Fg*Pg_1*t15860*t15861*t15853*1.0/pow(t15838,7.0/2.0)*(4.0/3.0)-Cinf*Fg*Pg_1*t15860*t15861*t15853*t15880*t15879+Cinf*Fg*Pg_1*t15860*t15861*t15853*t15880*t15873*t15857;
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t15882 = rho_a+rho_b;
                double t15883 = c*c;
                double t15884 = 1.0/pow(t15882,2.0/3.0);
                double t15885 = 1.0/pow(t15882,1.0/3.0);
                double t15886 = 1.0/pow(t15882,4.0/3.0);
                double t15887 = 1.0/t15882;
                double t15888 = Bg*c*t15883*t15887*1.0E4;
                double t15889 = Cg_4*t15883*t15884;
                double t15890 = Cg_3*c*t15885;
                double t15891 = t15890+t15888+t15889+1.0;
                double t15892 = 1.0/t15891;
                double t15893 = 1.0/pow(t15882,5.0/3.0);
                double t15894 = Bg*t15883*t15884;
                double t15895 = Cg_2*c*t15885;
                double t15896 = Cg_1+t15894+t15895;
                double t15897 = 1.0/two_13;
                double t15898 = 1.0/pow(t15882,7.0/6.0);
                double t15899 = t15892*t15896;
                double t15900 = Cx+t15899;
                double t15901 = 1.0/t15900;
                double t15902 = gamma_ab*2.0;
                double t15903 = gamma_aa+gamma_bb+t15902;
                double t15904 = sqrt(t15903);
                double t15906 = Cinf*Fg*Pg_1*t15901*t15904*t15898;
                double t15905 = exp(-t15906);
                double t15907 = Bg*t15883*t15893*(2.0/3.0);
                double t15908 = Cg_2*c*t15886*(1.0/3.0);
                double t15909 = t15907+t15908;
                double t15910 = t15909*t15892;
                double t15911 = 1.0/(t15882*t15882);
                double t15912 = Bg*c*t15911*t15883*1.0E4;
                double t15913 = Cg_4*t15883*t15893*(2.0/3.0);
                double t15914 = Cg_3*c*t15886*(1.0/3.0);
                double t15915 = t15912+t15913+t15914;
                double t15916 = 1.0/(t15891*t15891);
                double t15919 = t15915*t15916*t15896;
                double t15917 = t15910-t15919;
                double t15918 = 1.0/pow(t15882,1.3E1/6.0);
                double t15920 = 1.0/(t15900*t15900);
                double t15921 = 1.0/sqrt(t15903);
                double t15922 = Cinf*Fg*Pg_1*t15901*t15904*t15918*(7.0/6.0);
                double t15923 = t15922-Cinf*Fg*Pg_1*t15920*t15904*t15917*t15898;
                double t15924 = 1.0/pow(t15882,5.0/2.0);
                v_rho_a_gamma_bb[Q] += scale * -t15905*t15917*t15886*t15897-t15900*t15905*1.0/pow(t15882,7.0/3.0)*t15897*(4.0/3.0)+t15900*t15905*t15923*t15886*t15897+t15900*t15903*t15905*t15886*t15897*(Cinf*Fg*Pg_1*t15901*t15921*t15918*(7.0/1.2E1)-Cinf*Fg*Pg_1*t15920*t15921*t15917*t15898*(1.0/2.0))+Cinf*Fg*Pg_1*t15904*t15905*1.0/pow(t15882,7.0/2.0)*t15897*(2.0/3.0)-Cinf*Fg*Pg_1*t15904*t15905*t15923*t15924*t15897*(1.0/2.0)+Cinf*Fg*Pg_1*t15901*t15904*t15905*t15924*t15917*t15897*(1.0/2.0);
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t15926 = rho_a+rho_b;
                double t15927 = c*c;
                double t15928 = 1.0/pow(t15926,2.0/3.0);
                double t15929 = 1.0/pow(t15926,1.0/3.0);
                double t15930 = 1.0/pow(t15926,4.0/3.0);
                double t15931 = 1.0/t15926;
                double t15932 = Bg*c*t15931*t15927*1.0E4;
                double t15933 = Cg_4*t15927*t15928;
                double t15934 = Cg_3*c*t15929;
                double t15935 = t15932+t15933+t15934+1.0;
                double t15936 = 1.0/t15935;
                double t15937 = 1.0/pow(t15926,5.0/3.0);
                double t15938 = Bg*t15927*t15928;
                double t15939 = Cg_2*c*t15929;
                double t15940 = Cg_1+t15938+t15939;
                double t15941 = 1.0/two_13;
                double t15942 = 1.0/pow(t15926,7.0/6.0);
                double t15943 = t15940*t15936;
                double t15944 = Cx+t15943;
                double t15945 = 1.0/t15944;
                double t15946 = gamma_ab*2.0;
                double t15947 = gamma_aa+gamma_bb+t15946;
                double t15948 = sqrt(t15947);
                double t15950 = Cinf*Fg*Pg_1*t15942*t15945*t15948;
                double t15949 = exp(-t15950);
                double t15951 = Bg*t15927*t15937*(2.0/3.0);
                double t15952 = Cg_2*c*t15930*(1.0/3.0);
                double t15953 = t15951+t15952;
                double t15954 = t15953*t15936;
                double t15955 = 1.0/(t15926*t15926);
                double t15956 = Bg*c*t15927*t15955*1.0E4;
                double t15957 = Cg_4*t15927*t15937*(2.0/3.0);
                double t15958 = Cg_3*c*t15930*(1.0/3.0);
                double t15959 = t15956+t15957+t15958;
                double t15960 = 1.0/(t15935*t15935);
                double t15963 = t15940*t15960*t15959;
                double t15961 = t15954-t15963;
                double t15962 = 1.0/pow(t15926,1.3E1/6.0);
                double t15964 = 1.0/(t15944*t15944);
                double t15965 = 1.0/sqrt(t15947);
                double t15966 = Cinf*Fg*Pg_1*t15962*t15945*t15948*(7.0/6.0);
                double t15967 = t15966-Cinf*Fg*Pg_1*t15942*t15961*t15964*t15948;
                double t15968 = 1.0/pow(t15926,5.0/2.0);
                v_rho_b_gamma_aa[Q] += scale * -t15930*t15941*t15961*t15949-t15941*1.0/pow(t15926,7.0/3.0)*t15944*t15949*(4.0/3.0)+t15930*t15941*t15944*t15949*t15967+t15930*t15941*t15944*t15947*t15949*(Cinf*Fg*Pg_1*t15962*t15945*t15965*(7.0/1.2E1)-Cinf*Fg*Pg_1*t15942*t15961*t15964*t15965*(1.0/2.0))+Cinf*Fg*Pg_1*t15941*1.0/pow(t15926,7.0/2.0)*t15948*t15949*(2.0/3.0)-Cinf*Fg*Pg_1*t15941*t15948*t15949*t15967*t15968*(1.0/2.0)+Cinf*Fg*Pg_1*t15941*t15961*t15945*t15948*t15949*t15968*(1.0/2.0);
            }
            
            // v_rho_b_gamma_ab
            if (deriv >= 2) {
                double t15970 = rho_a+rho_b;
                double t15971 = c*c;
                double t15972 = 1.0/pow(t15970,2.0/3.0);
                double t15973 = 1.0/pow(t15970,1.0/3.0);
                double t15974 = 1.0/pow(t15970,4.0/3.0);
                double t15975 = 1.0/t15970;
                double t15976 = Bg*c*t15971*t15975*1.0E4;
                double t15977 = Cg_4*t15971*t15972;
                double t15978 = Cg_3*c*t15973;
                double t15979 = t15976+t15977+t15978+1.0;
                double t15980 = 1.0/t15979;
                double t15981 = 1.0/pow(t15970,5.0/3.0);
                double t15982 = Bg*t15971*t15972;
                double t15983 = Cg_2*c*t15973;
                double t15984 = Cg_1+t15982+t15983;
                double t15985 = 1.0/two_13;
                double t15986 = 1.0/pow(t15970,7.0/6.0);
                double t15987 = t15980*t15984;
                double t15988 = Cx+t15987;
                double t15989 = 1.0/t15988;
                double t15990 = gamma_ab*2.0;
                double t15991 = gamma_aa+gamma_bb+t15990;
                double t15992 = sqrt(t15991);
                double t15994 = Cinf*Fg*Pg_1*t15992*t15986*t15989;
                double t15993 = exp(-t15994);
                double t15995 = Bg*t15971*t15981*(2.0/3.0);
                double t15996 = Cg_2*c*t15974*(1.0/3.0);
                double t15997 = t15995+t15996;
                double t15998 = t15980*t15997;
                double t15999 = 1.0/(t15970*t15970);
                double t16000 = Bg*c*t15971*t15999*1.0E4;
                double t16001 = Cg_4*t15971*t15981*(2.0/3.0);
                double t16002 = Cg_3*c*t15974*(1.0/3.0);
                double t16003 = t16000+t16001+t16002;
                double t16004 = 1.0/(t15979*t15979);
                double t16007 = t15984*t16003*t16004;
                double t16005 = t15998-t16007;
                double t16006 = 1.0/pow(t15970,1.3E1/6.0);
                double t16008 = 1.0/(t15988*t15988);
                double t16009 = 1.0/sqrt(t15991);
                double t16010 = Cinf*Fg*Pg_1*t15992*t15989*t16006*(7.0/6.0);
                double t16011 = t16010-Cinf*Fg*Pg_1*t15992*t15986*t16005*t16008;
                double t16012 = 1.0/pow(t15970,5.0/2.0);
                v_rho_b_gamma_ab[Q] += scale * t15974*t15993*t15985*t16005*-2.0-1.0/pow(t15970,7.0/3.0)*t15993*t15985*t15988*(8.0/3.0)+t15974*t15993*t15985*t15988*t16011*2.0+t15991*t15974*t15993*t15985*t15988*(Cinf*Fg*Pg_1*t15989*t16006*t16009*(7.0/6.0)-Cinf*Fg*Pg_1*t15986*t16005*t16008*t16009)+Cinf*Fg*Pg_1*1.0/pow(t15970,7.0/2.0)*t15992*t15993*t15985*(4.0/3.0)-Cinf*Fg*Pg_1*t15992*t15993*t15985*t16011*t16012+Cinf*Fg*Pg_1*t15992*t15993*t15985*t15989*t16012*t16005;
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t16014 = rho_a+rho_b;
                double t16015 = c*c;
                double t16016 = 1.0/pow(t16014,2.0/3.0);
                double t16017 = 1.0/pow(t16014,1.0/3.0);
                double t16018 = 1.0/pow(t16014,4.0/3.0);
                double t16019 = 1.0/t16014;
                double t16020 = Bg*c*t16015*t16019*1.0E4;
                double t16021 = Cg_4*t16015*t16016;
                double t16022 = Cg_3*c*t16017;
                double t16023 = t16020+t16021+t16022+1.0;
                double t16024 = 1.0/t16023;
                double t16025 = 1.0/pow(t16014,5.0/3.0);
                double t16026 = Bg*t16015*t16016;
                double t16027 = Cg_2*c*t16017;
                double t16028 = Cg_1+t16026+t16027;
                double t16029 = 1.0/two_13;
                double t16030 = 1.0/pow(t16014,7.0/6.0);
                double t16031 = t16024*t16028;
                double t16032 = Cx+t16031;
                double t16033 = 1.0/t16032;
                double t16034 = gamma_ab*2.0;
                double t16035 = gamma_aa+gamma_bb+t16034;
                double t16036 = sqrt(t16035);
                double t16038 = Cinf*Fg*Pg_1*t16030*t16033*t16036;
                double t16037 = exp(-t16038);
                double t16039 = Bg*t16015*t16025*(2.0/3.0);
                double t16040 = Cg_2*c*t16018*(1.0/3.0);
                double t16041 = t16040+t16039;
                double t16042 = t16041*t16024;
                double t16043 = 1.0/(t16014*t16014);
                double t16044 = Bg*c*t16015*t16043*1.0E4;
                double t16045 = Cg_4*t16015*t16025*(2.0/3.0);
                double t16046 = Cg_3*c*t16018*(1.0/3.0);
                double t16047 = t16044+t16045+t16046;
                double t16048 = 1.0/(t16023*t16023);
                double t16051 = t16028*t16047*t16048;
                double t16049 = t16042-t16051;
                double t16050 = 1.0/pow(t16014,1.3E1/6.0);
                double t16052 = 1.0/(t16032*t16032);
                double t16053 = 1.0/sqrt(t16035);
                double t16054 = Cinf*Fg*Pg_1*t16050*t16033*t16036*(7.0/6.0);
                double t16055 = t16054-Cinf*Fg*Pg_1*t16030*t16052*t16036*t16049;
                double t16056 = 1.0/pow(t16014,5.0/2.0);
                v_rho_b_gamma_bb[Q] += scale * -t16018*t16037*t16029*t16049-1.0/pow(t16014,7.0/3.0)*t16032*t16037*t16029*(4.0/3.0)+t16032*t16018*t16037*t16055*t16029+t16032*t16035*t16018*t16037*t16029*(Cinf*Fg*Pg_1*t16050*t16033*t16053*(7.0/1.2E1)-Cinf*Fg*Pg_1*t16030*t16052*t16053*t16049*(1.0/2.0))+Cinf*Fg*Pg_1*1.0/pow(t16014,7.0/2.0)*t16036*t16037*t16029*(2.0/3.0)-Cinf*Fg*Pg_1*t16036*t16037*t16055*t16029*t16056*(1.0/2.0)+Cinf*Fg*Pg_1*t16033*t16036*t16037*t16029*t16056*t16049*(1.0/2.0);
            }
            
        } else if (rho_b < lsda_cutoff_) {
            // v
            if (deriv >= 0) {
                double t16209 = rho_a+rho_b;
                double t16210 = 1.0/pow(t16209,1.0/3.0);
                double t16211 = c*t16210;
                double t16212 = log(t16211);
                double t16213 = EcPhd_1*t16212;
                double t16214 = pow(2.0,1.0/3.0);
                double t16215 = t16214*2.0;
                double t16216 = t16215-2.0;
                double t16217 = two_13*2.0;
                double t16218 = t16217-2.0;
                double t16219 = 1.0/t16218;
                double t16220 = sqrt(t16211);
                double t16221 = EcPld_2*t16220;
                double t16222 = EcPld_3*c*t16210;
                double t16223 = t16221+t16222+1.0;
                double t16224 = 1.0/t16223;
                double t16225 = EcPld_1*t16224;
                double t16226 = c*c;
                double t16227 = 1.0/pow(t16209,2.0/3.0);
                double t16228 = Bg*t16226*t16227;
                double t16229 = Cg_2*c*t16210;
                double t16230 = Cg_1+t16228+t16229;
                double t16231 = 1.0/t16209;
                double t16232 = Bg*c*t16231*t16226*1.0E4;
                double t16233 = Cg_4*t16226*t16227;
                double t16234 = Cg_3*c*t16210;
                double t16235 = t16232+t16233+t16234+1.0;
                double t16236 = 1.0/t16235;
                double t16237 = t16230*t16236;
                double t16238 = Cx+t16237;
                double t16239 = gamma_ab*2.0;
                double t16240 = gamma_aa+gamma_bb+t16239;
                v[Q] += scale * t16209*(heaviside(-c*t16210+1.0)*(EcPhd_2+t16213+t16216*t16219*(EcFhd_2-EcPhd_2-t16213+EcFhd_1*t16212+EcFhd_4*c*t16210-EcPhd_4*c*t16210+EcFhd_3*c*t16210*t16212-EcPhd_3*c*t16210*t16212)+EcPhd_4*c*t16210+EcPhd_3*c*t16210*t16212)+heaviside(t16211-1.0)*(t16225-t16216*t16219*(t16225-EcFld_1/(EcFld_2*t16220+EcFld_3*c*t16210+1.0))))+(t16240*1.0/pow(t16209,4.0/3.0)*t16238*exp(-(Cinf*Fg*Pg_1*sqrt(t16240)*1.0/pow(t16209,7.0/6.0))/t16238))/two_13;
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t16242 = rho_a+rho_b;
                double t16243 = 1.0/pow(t16242,4.0/3.0);
                double t16244 = 1.0/pow(t16242,1.0/3.0);
                double t16245 = c*t16244;
                double t16246 = 1.0/sqrt(t16245);
                double t16247 = sqrt(t16245);
                double t16248 = EcPld_3*c*t16243*(1.0/3.0);
                double t16249 = EcPld_2*c*t16243*t16246*(1.0/6.0);
                double t16250 = t16248+t16249;
                double t16251 = EcPld_2*t16247;
                double t16252 = EcPld_3*c*t16244;
                double t16253 = t16251+t16252+1.0;
                double t16254 = 1.0/(t16253*t16253);
                double t16255 = EcPld_1*t16250*t16254;
                double t16256 = pow(2.0,1.0/3.0);
                double t16257 = t16256*2.0;
                double t16258 = t16257-2.0;
                double t16259 = two_13*2.0;
                double t16260 = t16259-2.0;
                double t16261 = 1.0/t16260;
                double t16262 = 1.0/t16242;
                double t16263 = EcPhd_1*t16262*(1.0/3.0);
                double t16264 = log(t16245);
                double t16265 = EcPhd_3*c*t16243*(1.0/3.0);
                double t16266 = EcPhd_4*c*t16243*(1.0/3.0);
                double t16267 = EcPhd_3*c*t16243*t16264*(1.0/3.0);
                double t16268 = t16245-1.0;
                double t16269 = EcPhd_1*t16264;
                double t16270 = dirac(t16268);
                double t16271 = EcFld_2*t16247;
                double t16272 = EcFld_3*c*t16244;
                double t16273 = t16271+t16272+1.0;
                double t16274 = 1.0/t16253;
                double t16275 = EcPld_1*t16274;
                double t16276 = -t16245+1.0;
                double t16277 = heaviside(t16276);
                double t16278 = EcFhd_1*t16264;
                double t16279 = EcFhd_4*c*t16244;
                double t16280 = EcPhd_4*c*t16244;
                double t16281 = EcFhd_3*c*t16244*t16264;
                double t16282 = EcPhd_3*c*t16244*t16264;
                double t16283 = heaviside(t16268);
                double t16284 = 1.0/t16273;
                double t16285 = t16275-EcFld_1*t16284;
                double t16286 = t16275-t16261*t16258*t16285;
                double t16287 = c*c;
                double t16288 = 1.0/pow(t16242,2.0/3.0);
                double t16289 = Bg*c*t16262*t16287*1.0E4;
                double t16290 = Cg_4*t16287*t16288;
                double t16291 = Cg_3*c*t16244;
                double t16292 = t16290+t16291+t16289+1.0;
                double t16293 = 1.0/t16292;
                double t16294 = 1.0/pow(t16242,5.0/3.0);
                double t16295 = Bg*t16287*t16288;
                double t16296 = Cg_2*c*t16244;
                double t16297 = Cg_1+t16295+t16296;
                double t16298 = gamma_ab*2.0;
                double t16299 = gamma_aa+gamma_bb+t16298;
                double t16300 = 1.0/two_13;
                double t16301 = 1.0/pow(t16242,7.0/6.0);
                double t16302 = t16293*t16297;
                double t16303 = Cx+t16302;
                double t16304 = 1.0/t16303;
                double t16305 = sqrt(t16299);
                double t16307 = Cinf*Fg*Pg_1*t16301*t16304*t16305;
                double t16306 = exp(-t16307);
                double t16308 = Bg*t16294*t16287*(2.0/3.0);
                double t16309 = Cg_2*c*t16243*(1.0/3.0);
                double t16310 = t16308+t16309;
                double t16311 = t16310*t16293;
                double t16312 = 1.0/(t16242*t16242);
                double t16313 = Bg*c*t16312*t16287*1.0E4;
                double t16314 = Cg_4*t16294*t16287*(2.0/3.0);
                double t16315 = Cg_3*c*t16243*(1.0/3.0);
                double t16316 = t16313+t16314+t16315;
                double t16317 = 1.0/(t16292*t16292);
                double t16318 = t16311-t16316*t16317*t16297;
                v_rho_a[Q] += scale * t16277*(EcPhd_2+t16280+t16282+t16269+t16261*t16258*(EcFhd_2-EcPhd_2-t16280+t16281-t16282-t16269+t16278+t16279))+t16283*t16286+t16242*(t16283*(t16255-t16261*t16258*(t16255-EcFld_1*1.0/(t16273*t16273)*(EcFld_3*c*t16243*(1.0/3.0)+EcFld_2*c*t16243*t16246*(1.0/6.0))))-t16277*(t16263+t16265+t16266+t16267-t16261*t16258*(t16263+t16265+t16266+t16267-EcFhd_1*t16262*(1.0/3.0)-EcFhd_3*c*t16243*(1.0/3.0)-EcFhd_4*c*t16243*(1.0/3.0)-EcFhd_3*c*t16243*t16264*(1.0/3.0)))-c*t16243*t16270*t16286*(1.0/3.0)+c*t16243*t16270*(EcPhd_2+t16280+t16282+t16269+t16261*t16258*(EcFhd_2-EcPhd_2+t16281-t16269+t16278+t16279-EcPhd_4*c*t16244-EcPhd_3*c*t16244*t16264))*(1.0/3.0))-t16300*t16303*1.0/pow(t16242,7.0/3.0)*t16306*t16299*(4.0/3.0)-t16300*t16243*t16306*t16318*t16299+t16300*t16303*t16243*t16306*t16299*(Cinf*Fg*Pg_1*t16304*1.0/pow(t16242,1.3E1/6.0)*t16305*(7.0/6.0)-Cinf*Fg*Pg_1*t16301*1.0/(t16303*t16303)*t16305*t16318);
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t16320 = rho_a+rho_b;
                double t16321 = 1.0/pow(t16320,4.0/3.0);
                double t16322 = 1.0/pow(t16320,1.0/3.0);
                double t16323 = c*t16322;
                double t16324 = 1.0/sqrt(t16323);
                double t16325 = sqrt(t16323);
                double t16326 = EcPld_3*c*t16321*(1.0/3.0);
                double t16327 = EcPld_2*c*t16321*t16324*(1.0/6.0);
                double t16328 = t16326+t16327;
                double t16329 = EcPld_2*t16325;
                double t16330 = EcPld_3*c*t16322;
                double t16331 = t16330+t16329+1.0;
                double t16332 = 1.0/(t16331*t16331);
                double t16333 = EcPld_1*t16332*t16328;
                double t16334 = pow(2.0,1.0/3.0);
                double t16335 = t16334*2.0;
                double t16336 = t16335-2.0;
                double t16337 = two_13*2.0;
                double t16338 = t16337-2.0;
                double t16339 = 1.0/t16338;
                double t16340 = 1.0/t16320;
                double t16341 = EcPhd_1*t16340*(1.0/3.0);
                double t16342 = log(t16323);
                double t16343 = EcPhd_3*c*t16321*(1.0/3.0);
                double t16344 = EcPhd_4*c*t16321*(1.0/3.0);
                double t16345 = EcPhd_3*c*t16321*t16342*(1.0/3.0);
                double t16346 = t16323-1.0;
                double t16347 = EcPhd_1*t16342;
                double t16348 = dirac(t16346);
                double t16349 = EcFld_2*t16325;
                double t16350 = EcFld_3*c*t16322;
                double t16351 = t16350+t16349+1.0;
                double t16352 = 1.0/t16331;
                double t16353 = EcPld_1*t16352;
                double t16354 = -t16323+1.0;
                double t16355 = heaviside(t16354);
                double t16356 = EcFhd_1*t16342;
                double t16357 = EcFhd_4*c*t16322;
                double t16358 = EcPhd_4*c*t16322;
                double t16359 = EcFhd_3*c*t16322*t16342;
                double t16360 = EcPhd_3*c*t16322*t16342;
                double t16361 = heaviside(t16346);
                double t16362 = 1.0/t16351;
                double t16363 = t16353-EcFld_1*t16362;
                double t16364 = t16353-t16336*t16363*t16339;
                double t16365 = c*c;
                double t16366 = 1.0/pow(t16320,2.0/3.0);
                double t16367 = Bg*c*t16340*t16365*1.0E4;
                double t16368 = Cg_4*t16365*t16366;
                double t16369 = Cg_3*c*t16322;
                double t16370 = t16367+t16368+t16369+1.0;
                double t16371 = 1.0/t16370;
                double t16372 = 1.0/pow(t16320,5.0/3.0);
                double t16373 = Bg*t16365*t16366;
                double t16374 = Cg_2*c*t16322;
                double t16375 = Cg_1+t16373+t16374;
                double t16376 = gamma_ab*2.0;
                double t16377 = gamma_aa+gamma_bb+t16376;
                double t16378 = 1.0/two_13;
                double t16379 = 1.0/pow(t16320,7.0/6.0);
                double t16380 = t16371*t16375;
                double t16381 = Cx+t16380;
                double t16382 = 1.0/t16381;
                double t16383 = sqrt(t16377);
                double t16385 = Cinf*Fg*Pg_1*t16382*t16383*t16379;
                double t16384 = exp(-t16385);
                double t16386 = Bg*t16372*t16365*(2.0/3.0);
                double t16387 = Cg_2*c*t16321*(1.0/3.0);
                double t16388 = t16386+t16387;
                double t16389 = t16371*t16388;
                double t16390 = 1.0/(t16320*t16320);
                double t16391 = Bg*c*t16390*t16365*1.0E4;
                double t16392 = Cg_4*t16372*t16365*(2.0/3.0);
                double t16393 = Cg_3*c*t16321*(1.0/3.0);
                double t16394 = t16391+t16392+t16393;
                double t16395 = 1.0/(t16370*t16370);
                double t16396 = t16389-t16375*t16394*t16395;
                v_rho_b[Q] += scale * t16355*(EcPhd_2+t16360+t16347+t16358+t16336*t16339*(EcFhd_2-EcPhd_2-t16360-t16347+t16356+t16357-t16358+t16359))+t16361*t16364+t16320*(t16361*(t16333-t16336*t16339*(t16333-EcFld_1*1.0/(t16351*t16351)*(EcFld_3*c*t16321*(1.0/3.0)+EcFld_2*c*t16321*t16324*(1.0/6.0))))-t16355*(t16341+t16343+t16344+t16345-t16336*t16339*(t16341+t16343+t16344+t16345-EcFhd_1*t16340*(1.0/3.0)-EcFhd_3*c*t16321*(1.0/3.0)-EcFhd_4*c*t16321*(1.0/3.0)-EcFhd_3*c*t16321*t16342*(1.0/3.0)))-c*t16321*t16364*t16348*(1.0/3.0)+c*t16321*t16348*(EcPhd_2+t16360+t16347+t16358+t16336*t16339*(EcFhd_2-EcPhd_2-t16347+t16356+t16357+t16359-EcPhd_4*c*t16322-EcPhd_3*c*t16322*t16342))*(1.0/3.0))-1.0/pow(t16320,7.0/3.0)*t16381*t16384*t16377*t16378*(4.0/3.0)-t16321*t16384*t16377*t16378*t16396+t16321*t16381*t16384*t16377*t16378*(Cinf*Fg*Pg_1*1.0/pow(t16320,1.3E1/6.0)*t16382*t16383*(7.0/6.0)-Cinf*Fg*Pg_1*1.0/(t16381*t16381)*t16383*t16396*t16379);
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t16398 = rho_a+rho_b;
                double t16399 = c*c;
                double t16400 = 1.0/pow(t16398,2.0/3.0);
                double t16401 = 1.0/pow(t16398,1.0/3.0);
                double t16402 = Bg*t16400*t16399;
                double t16403 = Cg_2*c*t16401;
                double t16404 = Cg_1+t16402+t16403;
                double t16405 = 1.0/t16398;
                double t16406 = Bg*c*t16405*t16399*1.0E4;
                double t16407 = Cg_4*t16400*t16399;
                double t16408 = Cg_3*c*t16401;
                double t16409 = t16406+t16407+t16408+1.0;
                double t16410 = 1.0/t16409;
                double t16411 = t16410*t16404;
                double t16412 = Cx+t16411;
                double t16413 = 1.0/two_13;
                double t16414 = 1.0/pow(t16398,7.0/6.0);
                double t16415 = 1.0/t16412;
                double t16416 = gamma_ab*2.0;
                double t16417 = gamma_aa+gamma_bb+t16416;
                double t16418 = sqrt(t16417);
                double t16419 = exp(-Cinf*Fg*Pg_1*t16414*t16415*t16418);
                v_gamma_aa[Q] += scale * t16412*t16413*t16419*1.0/pow(t16398,4.0/3.0)-Cinf*Fg*Pg_1*t16413*t16418*t16419*1.0/pow(t16398,5.0/2.0)*(1.0/2.0);
            }
            
            // v_gamma_ab
            if (deriv >= 1) {
                double t16421 = rho_a+rho_b;
                double t16422 = c*c;
                double t16423 = 1.0/pow(t16421,2.0/3.0);
                double t16424 = 1.0/pow(t16421,1.0/3.0);
                double t16425 = Bg*t16422*t16423;
                double t16426 = Cg_2*c*t16424;
                double t16427 = Cg_1+t16425+t16426;
                double t16428 = 1.0/t16421;
                double t16429 = Bg*c*t16422*t16428*1.0E4;
                double t16430 = Cg_4*t16422*t16423;
                double t16431 = Cg_3*c*t16424;
                double t16432 = t16430+t16431+t16429+1.0;
                double t16433 = 1.0/t16432;
                double t16434 = t16433*t16427;
                double t16435 = Cx+t16434;
                double t16436 = 1.0/two_13;
                double t16437 = 1.0/pow(t16421,7.0/6.0);
                double t16438 = 1.0/t16435;
                double t16439 = gamma_ab*2.0;
                double t16440 = gamma_aa+gamma_bb+t16439;
                double t16441 = sqrt(t16440);
                double t16442 = exp(-Cinf*Fg*Pg_1*t16441*t16437*t16438);
                v_gamma_ab[Q] += scale * 1.0/pow(t16421,4.0/3.0)*t16442*t16435*t16436*2.0-Cinf*Fg*Pg_1*1.0/pow(t16421,5.0/2.0)*t16441*t16442*t16436;
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t16444 = rho_a+rho_b;
                double t16445 = c*c;
                double t16446 = 1.0/pow(t16444,2.0/3.0);
                double t16447 = 1.0/pow(t16444,1.0/3.0);
                double t16448 = Bg*t16445*t16446;
                double t16449 = Cg_2*c*t16447;
                double t16450 = Cg_1+t16448+t16449;
                double t16451 = 1.0/t16444;
                double t16452 = Bg*c*t16451*t16445*1.0E4;
                double t16453 = Cg_4*t16445*t16446;
                double t16454 = Cg_3*c*t16447;
                double t16455 = t16452+t16453+t16454+1.0;
                double t16456 = 1.0/t16455;
                double t16457 = t16450*t16456;
                double t16458 = Cx+t16457;
                double t16459 = 1.0/two_13;
                double t16460 = 1.0/pow(t16444,7.0/6.0);
                double t16461 = 1.0/t16458;
                double t16462 = gamma_ab*2.0;
                double t16463 = gamma_aa+gamma_bb+t16462;
                double t16464 = sqrt(t16463);
                double t16465 = exp(-Cinf*Fg*Pg_1*t16460*t16461*t16464);
                v_gamma_bb[Q] += scale * 1.0/pow(t16444,4.0/3.0)*t16465*t16458*t16459-Cinf*Fg*Pg_1*1.0/pow(t16444,5.0/2.0)*t16464*t16465*t16459*(1.0/2.0);
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t16469 = rho_a+rho_b;
                double t16470 = 1.0/pow(t16469,4.0/3.0);
                double t16471 = 1.0/pow(t16469,1.0/3.0);
                double t16472 = c*t16471;
                double t16473 = 1.0/sqrt(t16472);
                double t16474 = sqrt(t16472);
                double t16475 = EcPld_3*c*t16470*(1.0/3.0);
                double t16476 = EcPld_2*c*t16470*t16473*(1.0/6.0);
                double t16477 = t16475+t16476;
                double t16478 = EcPld_2*t16474;
                double t16479 = EcPld_3*c*t16471;
                double t16480 = t16478+t16479+1.0;
                double t16481 = 1.0/(t16480*t16480);
                double t16482 = EcPld_1*t16481*t16477;
                double t16483 = t16472-1.0;
                double t16484 = heaviside(t16483);
                double t16485 = pow(2.0,1.0/3.0);
                double t16486 = t16485*2.0;
                double t16487 = t16486-2.0;
                double t16488 = two_13*2.0;
                double t16489 = t16488-2.0;
                double t16490 = 1.0/t16489;
                double t16491 = EcFld_3*c*t16470*(1.0/3.0);
                double t16492 = EcFld_2*c*t16470*t16473*(1.0/6.0);
                double t16493 = t16491+t16492;
                double t16494 = EcFld_2*t16474;
                double t16495 = EcFld_3*c*t16471;
                double t16496 = t16494+t16495+1.0;
                double t16497 = t16477*t16477;
                double t16498 = 1.0/(t16480*t16480*t16480);
                double t16499 = EcPld_1*t16497*t16498*2.0;
                double t16500 = 1.0/pow(t16469,7.0/3.0);
                double t16501 = 1.0/(t16496*t16496);
                double t16502 = c*c;
                double t16503 = 1.0/pow(t16469,8.0/3.0);
                double t16504 = 1.0/pow(t16472,3.0/2.0);
                double t16505 = EcPld_3*c*t16500*(4.0/9.0);
                double t16506 = EcPld_2*c*t16500*t16473*(2.0/9.0);
                double t16507 = t16505+t16506-EcPld_2*t16502*t16503*t16504*(1.0/3.6E1);
                double t16508 = EcPld_1*t16507*t16481;
                double t16509 = 1.0/(t16469*t16469);
                double t16510 = EcPhd_1*t16509*(1.0/3.0);
                double t16511 = log(t16472);
                double t16512 = EcPhd_3*c*t16500*(5.0/9.0);
                double t16513 = EcPhd_4*c*t16500*(4.0/9.0);
                double t16514 = EcPhd_3*c*t16500*t16511*(4.0/9.0);
                double t16515 = 1.0/t16480;
                double t16516 = EcPld_1*t16515;
                double t16517 = t16482-EcFld_1*t16501*t16493;
                double t16518 = t16482-t16490*t16517*t16487;
                double t16519 = dirac(t16483);
                double t16520 = EcPhd_1*t16511;
                double t16521 = 1.0/t16469;
                double t16522 = EcPhd_1*t16521*(1.0/3.0);
                double t16523 = EcPhd_3*c*t16470*(1.0/3.0);
                double t16524 = EcPhd_4*c*t16470*(1.0/3.0);
                double t16525 = EcPhd_3*c*t16511*t16470*(1.0/3.0);
                double t16526 = 1.0/t16496;
                double t16542 = EcFld_1*t16526;
                double t16527 = -t16542+t16516;
                double t16528 = t16516-t16490*t16527*t16487;
                double t16529 = dirac(t16483,1.0);
                double t16530 = EcFhd_1*t16511;
                double t16531 = EcFhd_4*c*t16471;
                double t16532 = EcPhd_4*c*t16471;
                double t16533 = EcFhd_3*c*t16511*t16471;
                double t16534 = EcPhd_3*c*t16511*t16471;
                double t16535 = -t16472+1.0;
                double t16536 = heaviside(t16535);
                double t16537 = t16522+t16523+t16524+t16525-EcFhd_1*t16521*(1.0/3.0)-EcFhd_3*c*t16470*(1.0/3.0)-EcFhd_4*c*t16470*(1.0/3.0)-EcFhd_3*c*t16511*t16470*(1.0/3.0);
                double t16538 = t16522+t16523+t16524+t16525-t16490*t16537*t16487;
                double t16539 = EcFhd_2-EcPhd_2-t16520+t16530+t16531-t16532+t16533-t16534;
                double t16540 = t16490*t16539*t16487;
                double t16541 = EcPhd_2+t16520+t16540+t16532+t16534;
                double t16543 = 1.0/pow(t16469,2.0/3.0);
                double t16544 = Bg*c*t16502*t16521*1.0E4;
                double t16545 = Cg_4*t16502*t16543;
                double t16546 = Cg_3*c*t16471;
                double t16547 = t16544+t16545+t16546+1.0;
                double t16548 = 1.0/t16547;
                double t16549 = 1.0/pow(t16469,5.0/3.0);
                double t16550 = Bg*t16502*t16543;
                double t16551 = Cg_2*c*t16471;
                double t16552 = Cg_1+t16550+t16551;
                double t16553 = gamma_ab*2.0;
                double t16554 = gamma_aa+gamma_bb+t16553;
                double t16555 = 1.0/two_13;
                double t16556 = 1.0/pow(t16469,7.0/6.0);
                double t16557 = t16552*t16548;
                double t16558 = Cx+t16557;
                double t16559 = 1.0/t16558;
                double t16560 = sqrt(t16554);
                double t16562 = Cinf*Fg*Pg_1*t16560*t16556*t16559;
                double t16561 = exp(-t16562);
                double t16563 = Bg*t16502*t16549*(2.0/3.0);
                double t16564 = Cg_2*c*t16470*(1.0/3.0);
                double t16565 = t16563+t16564;
                double t16566 = Bg*c*t16502*t16509*1.0E4;
                double t16567 = Cg_4*t16502*t16549*(2.0/3.0);
                double t16568 = Cg_3*c*t16470*(1.0/3.0);
                double t16569 = t16566+t16567+t16568;
                double t16570 = 1.0/(t16547*t16547);
                double t16571 = t16565*t16548;
                double t16586 = t16552*t16570*t16569;
                double t16572 = t16571-t16586;
                double t16573 = Bg*t16502*t16503*(1.0E1/9.0);
                double t16574 = Cg_2*c*t16500*(4.0/9.0);
                double t16575 = t16573+t16574;
                double t16576 = t16548*t16575;
                double t16577 = 1.0/(t16469*t16469*t16469);
                double t16578 = Bg*c*t16502*t16577*2.0E4;
                double t16579 = Cg_4*t16502*t16503*(1.0E1/9.0);
                double t16580 = Cg_3*c*t16500*(4.0/9.0);
                double t16581 = t16580+t16578+t16579;
                double t16582 = t16569*t16569;
                double t16583 = 1.0/(t16547*t16547*t16547);
                double t16584 = t16552*t16582*t16583*2.0;
                double t16585 = t16584+t16576-t16552*t16570*t16581-t16570*t16565*t16569*2.0;
                double t16587 = 1.0/(t16558*t16558);
                double t16588 = 1.0/pow(t16469,1.3E1/6.0);
                double t16589 = Cinf*Fg*Pg_1*t16560*t16559*t16588*(7.0/6.0);
                double t16591 = Cinf*Fg*Pg_1*t16560*t16572*t16556*t16587;
                double t16590 = -t16591+t16589;
                v_rho_a_rho_a[Q] += scale * t16518*t16484*2.0-t16536*t16538*2.0+t16469*(t16536*(t16510+t16512+t16513+t16514-t16490*t16487*(t16510+t16512+t16513+t16514-EcFhd_1*t16509*(1.0/3.0)-EcFhd_3*c*t16500*(5.0/9.0)-EcFhd_4*c*t16500*(4.0/9.0)-EcFhd_3*c*t16500*t16511*(4.0/9.0)))+t16484*(-t16508+t16499+t16490*t16487*(t16508-t16499+EcFld_1*(t16493*t16493)*1.0/(t16496*t16496*t16496)*2.0-EcFld_1*t16501*(EcFld_3*c*t16500*(4.0/9.0)-EcFld_2*t16502*t16503*t16504*(1.0/3.6E1)+EcFld_2*c*t16500*t16473*(2.0/9.0))))+c*t16500*t16519*t16528*(4.0/9.0)-c*t16470*t16518*t16519*(2.0/3.0)-c*t16470*t16519*t16538*(2.0/3.0)-t16502*t16503*t16541*t16529*(1.0/9.0)+t16502*t16503*t16528*t16529*(1.0/9.0)-c*t16500*t16519*(EcPhd_2+t16520+t16532+t16534+t16490*t16487*(EcFhd_2-EcPhd_2-t16520+t16530+t16531+t16533-EcPhd_4*c*t16471-EcPhd_3*c*t16511*t16471))*(4.0/9.0))+c*t16541*t16470*t16519*(2.0/3.0)-c*t16470*t16519*(t16516+t16490*t16487*(t16542-t16516))*(2.0/3.0)+t16561*t16554*t16555*t16558*1.0/pow(t16469,1.0E1/3.0)*(2.8E1/9.0)+t16500*t16561*t16554*t16572*t16555*(8.0/3.0)+t16470*t16561*t16554*t16555*t16585-t16500*t16561*t16554*t16590*t16555*t16558*(8.0/3.0)-t16470*t16561*t16554*t16572*t16590*t16555*2.0+t16470*t16561*t16554*(t16590*t16590)*t16555*t16558-t16470*t16561*t16554*t16555*t16558*(Cinf*Fg*Pg_1*t16560*1.0/pow(t16469,1.9E1/6.0)*t16559*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t16560*t16556*t16585*t16587-Cinf*Fg*Pg_1*t16560*t16572*t16587*t16588*(7.0/3.0)+Cinf*Fg*Pg_1*t16560*(t16572*t16572)*t16556*1.0/(t16558*t16558*t16558)*2.0);
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t16593 = rho_a+rho_b;
                double t16594 = 1.0/pow(t16593,4.0/3.0);
                double t16595 = 1.0/pow(t16593,1.0/3.0);
                double t16596 = c*t16595;
                double t16597 = 1.0/sqrt(t16596);
                double t16598 = sqrt(t16596);
                double t16599 = EcPld_3*c*t16594*(1.0/3.0);
                double t16600 = EcPld_2*c*t16594*t16597*(1.0/6.0);
                double t16601 = t16600+t16599;
                double t16602 = EcPld_2*t16598;
                double t16603 = EcPld_3*c*t16595;
                double t16604 = t16602+t16603+1.0;
                double t16605 = 1.0/(t16604*t16604);
                double t16606 = EcPld_1*t16601*t16605;
                double t16607 = t16596-1.0;
                double t16608 = heaviside(t16607);
                double t16609 = pow(2.0,1.0/3.0);
                double t16610 = t16609*2.0;
                double t16611 = t16610-2.0;
                double t16612 = two_13*2.0;
                double t16613 = t16612-2.0;
                double t16614 = 1.0/t16613;
                double t16615 = EcFld_3*c*t16594*(1.0/3.0);
                double t16616 = EcFld_2*c*t16594*t16597*(1.0/6.0);
                double t16617 = t16615+t16616;
                double t16618 = EcFld_2*t16598;
                double t16619 = EcFld_3*c*t16595;
                double t16620 = t16618+t16619+1.0;
                double t16621 = t16601*t16601;
                double t16622 = 1.0/(t16604*t16604*t16604);
                double t16623 = EcPld_1*t16621*t16622*2.0;
                double t16624 = 1.0/pow(t16593,7.0/3.0);
                double t16625 = 1.0/(t16620*t16620);
                double t16626 = c*c;
                double t16627 = 1.0/pow(t16593,8.0/3.0);
                double t16628 = 1.0/pow(t16596,3.0/2.0);
                double t16629 = EcPld_3*c*t16624*(4.0/9.0);
                double t16630 = EcPld_2*c*t16624*t16597*(2.0/9.0);
                double t16631 = t16630+t16629-EcPld_2*t16626*t16627*t16628*(1.0/3.6E1);
                double t16632 = EcPld_1*t16631*t16605;
                double t16633 = 1.0/(t16593*t16593);
                double t16634 = EcPhd_1*t16633*(1.0/3.0);
                double t16635 = log(t16596);
                double t16636 = EcPhd_3*c*t16624*(5.0/9.0);
                double t16637 = EcPhd_4*c*t16624*(4.0/9.0);
                double t16638 = EcPhd_3*c*t16624*t16635*(4.0/9.0);
                double t16639 = 1.0/t16604;
                double t16640 = EcPld_1*t16639;
                double t16641 = t16606-EcFld_1*t16625*t16617;
                double t16642 = t16606-t16611*t16614*t16641;
                double t16643 = dirac(t16607);
                double t16644 = EcPhd_1*t16635;
                double t16645 = 1.0/t16593;
                double t16646 = EcPhd_1*t16645*(1.0/3.0);
                double t16647 = EcPhd_3*c*t16594*(1.0/3.0);
                double t16648 = EcPhd_4*c*t16594*(1.0/3.0);
                double t16649 = EcPhd_3*c*t16635*t16594*(1.0/3.0);
                double t16650 = 1.0/t16620;
                double t16666 = EcFld_1*t16650;
                double t16651 = t16640-t16666;
                double t16667 = t16611*t16614*t16651;
                double t16652 = t16640-t16667;
                double t16653 = dirac(t16607,1.0);
                double t16654 = EcFhd_1*t16635;
                double t16655 = EcFhd_4*c*t16595;
                double t16656 = EcPhd_4*c*t16595;
                double t16657 = EcFhd_3*c*t16635*t16595;
                double t16658 = EcPhd_3*c*t16635*t16595;
                double t16659 = EcFhd_2-EcPhd_2-t16644+t16654+t16655-t16656+t16657-t16658;
                double t16660 = t16611*t16614*t16659;
                double t16661 = EcPhd_2+t16660+t16644+t16656+t16658;
                double t16662 = -t16596+1.0;
                double t16663 = heaviside(t16662);
                double t16664 = t16646+t16647+t16648+t16649-EcFhd_1*t16645*(1.0/3.0)-EcFhd_3*c*t16594*(1.0/3.0)-EcFhd_4*c*t16594*(1.0/3.0)-EcFhd_3*c*t16635*t16594*(1.0/3.0);
                double t16665 = t16646+t16647+t16648+t16649-t16611*t16614*t16664;
                double t16668 = 1.0/pow(t16593,2.0/3.0);
                double t16669 = Bg*c*t16626*t16645*1.0E4;
                double t16670 = Cg_4*t16626*t16668;
                double t16671 = Cg_3*c*t16595;
                double t16672 = t16670+t16671+t16669+1.0;
                double t16673 = 1.0/t16672;
                double t16674 = 1.0/pow(t16593,5.0/3.0);
                double t16675 = Bg*t16626*t16668;
                double t16676 = Cg_2*c*t16595;
                double t16677 = Cg_1+t16675+t16676;
                double t16678 = gamma_ab*2.0;
                double t16679 = gamma_aa+gamma_bb+t16678;
                double t16680 = 1.0/two_13;
                double t16681 = 1.0/pow(t16593,7.0/6.0);
                double t16682 = t16673*t16677;
                double t16683 = Cx+t16682;
                double t16684 = 1.0/t16683;
                double t16685 = sqrt(t16679);
                double t16687 = Cinf*Fg*Pg_1*t16681*t16684*t16685;
                double t16686 = exp(-t16687);
                double t16688 = Bg*t16626*t16674*(2.0/3.0);
                double t16689 = Cg_2*c*t16594*(1.0/3.0);
                double t16690 = t16688+t16689;
                double t16691 = Bg*c*t16633*t16626*1.0E4;
                double t16692 = Cg_4*t16626*t16674*(2.0/3.0);
                double t16693 = Cg_3*c*t16594*(1.0/3.0);
                double t16694 = t16691+t16692+t16693;
                double t16695 = 1.0/(t16672*t16672);
                double t16696 = t16690*t16673;
                double t16711 = t16694*t16677*t16695;
                double t16697 = -t16711+t16696;
                double t16698 = Bg*t16626*t16627*(1.0E1/9.0);
                double t16699 = Cg_2*c*t16624*(4.0/9.0);
                double t16700 = t16698+t16699;
                double t16701 = t16700*t16673;
                double t16702 = 1.0/(t16593*t16593*t16593);
                double t16703 = Bg*c*t16702*t16626*2.0E4;
                double t16704 = Cg_4*t16626*t16627*(1.0E1/9.0);
                double t16705 = Cg_3*c*t16624*(4.0/9.0);
                double t16706 = t16703+t16704+t16705;
                double t16707 = t16694*t16694;
                double t16708 = 1.0/(t16672*t16672*t16672);
                double t16709 = t16707*t16708*t16677*2.0;
                double t16710 = t16701+t16709-t16706*t16677*t16695-t16690*t16694*t16695*2.0;
                double t16712 = 1.0/(t16683*t16683);
                double t16713 = 1.0/pow(t16593,1.3E1/6.0);
                double t16714 = Cinf*Fg*Pg_1*t16713*t16684*t16685*(7.0/6.0);
                double t16716 = Cinf*Fg*Pg_1*t16712*t16681*t16685*t16697;
                double t16715 = t16714-t16716;
                v_rho_a_rho_b[Q] += scale * -t16593*(-t16663*(t16634+t16636+t16637+t16638-t16611*t16614*(t16634+t16636+t16637+t16638-EcFhd_1*t16633*(1.0/3.0)-EcFhd_3*c*t16624*(5.0/9.0)-EcFhd_4*c*t16624*(4.0/9.0)-EcFhd_3*c*t16624*t16635*(4.0/9.0)))+t16608*(-t16623+t16632+t16611*t16614*(t16623-t16632-EcFld_1*1.0/(t16620*t16620*t16620)*(t16617*t16617)*2.0+EcFld_1*t16625*(EcFld_3*c*t16624*(4.0/9.0)-EcFld_2*t16626*t16627*t16628*(1.0/3.6E1)+EcFld_2*c*t16624*t16597*(2.0/9.0))))-c*t16624*t16643*t16652*(4.0/9.0)+c*t16624*t16643*t16661*(4.0/9.0)+c*t16642*t16643*t16594*(2.0/3.0)+c*t16643*t16665*t16594*(2.0/3.0)-t16652*t16626*t16653*t16627*(1.0/9.0)+t16661*t16626*t16653*t16627*(1.0/9.0))+t16642*t16608*2.0-t16663*t16665*2.0-c*t16643*t16652*t16594*(2.0/3.0)+c*t16643*t16661*t16594*(2.0/3.0)+t16680*1.0/pow(t16593,1.0E1/3.0)*t16683*t16686*t16679*(2.8E1/9.0)+t16710*t16680*t16594*t16686*t16679+t16624*t16680*t16686*t16679*t16697*(8.0/3.0)-t16624*t16715*t16680*t16683*t16686*t16679*(8.0/3.0)-t16715*t16680*t16594*t16686*t16679*t16697*2.0+(t16715*t16715)*t16680*t16683*t16594*t16686*t16679-t16680*t16683*t16594*t16686*t16679*(Cinf*Fg*Pg_1*1.0/pow(t16593,1.9E1/6.0)*t16684*t16685*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t16710*t16712*t16681*t16685-Cinf*Fg*Pg_1*t16712*t16713*t16685*t16697*(7.0/3.0)+Cinf*Fg*Pg_1*t16681*1.0/(t16683*t16683*t16683)*t16685*(t16697*t16697)*2.0);
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t16718 = rho_a+rho_b;
                double t16719 = 1.0/pow(t16718,4.0/3.0);
                double t16720 = 1.0/pow(t16718,1.0/3.0);
                double t16721 = c*t16720;
                double t16722 = 1.0/sqrt(t16721);
                double t16723 = sqrt(t16721);
                double t16724 = EcPld_3*c*t16719*(1.0/3.0);
                double t16725 = EcPld_2*c*t16722*t16719*(1.0/6.0);
                double t16726 = t16724+t16725;
                double t16727 = EcPld_2*t16723;
                double t16728 = EcPld_3*c*t16720;
                double t16729 = t16727+t16728+1.0;
                double t16730 = 1.0/(t16729*t16729);
                double t16731 = EcPld_1*t16730*t16726;
                double t16732 = t16721-1.0;
                double t16733 = heaviside(t16732);
                double t16734 = pow(2.0,1.0/3.0);
                double t16735 = t16734*2.0;
                double t16736 = t16735-2.0;
                double t16737 = two_13*2.0;
                double t16738 = t16737-2.0;
                double t16739 = 1.0/t16738;
                double t16740 = EcFld_3*c*t16719*(1.0/3.0);
                double t16741 = EcFld_2*c*t16722*t16719*(1.0/6.0);
                double t16742 = t16740+t16741;
                double t16743 = EcFld_2*t16723;
                double t16744 = EcFld_3*c*t16720;
                double t16745 = t16743+t16744+1.0;
                double t16746 = t16726*t16726;
                double t16747 = 1.0/(t16729*t16729*t16729);
                double t16748 = EcPld_1*t16746*t16747*2.0;
                double t16749 = 1.0/pow(t16718,7.0/3.0);
                double t16750 = 1.0/(t16745*t16745);
                double t16751 = c*c;
                double t16752 = 1.0/pow(t16718,8.0/3.0);
                double t16753 = 1.0/pow(t16721,3.0/2.0);
                double t16754 = EcPld_3*c*t16749*(4.0/9.0);
                double t16755 = EcPld_2*c*t16722*t16749*(2.0/9.0);
                double t16756 = t16754+t16755-EcPld_2*t16751*t16752*t16753*(1.0/3.6E1);
                double t16757 = EcPld_1*t16730*t16756;
                double t16758 = 1.0/(t16718*t16718);
                double t16759 = EcPhd_1*t16758*(1.0/3.0);
                double t16760 = log(t16721);
                double t16761 = EcPhd_3*c*t16749*(5.0/9.0);
                double t16762 = EcPhd_4*c*t16749*(4.0/9.0);
                double t16763 = EcPhd_3*c*t16760*t16749*(4.0/9.0);
                double t16764 = 1.0/t16729;
                double t16765 = EcPld_1*t16764;
                double t16766 = t16731-EcFld_1*t16750*t16742;
                double t16767 = t16731-t16736*t16739*t16766;
                double t16768 = dirac(t16732);
                double t16769 = EcPhd_1*t16760;
                double t16770 = 1.0/t16718;
                double t16771 = EcPhd_1*t16770*(1.0/3.0);
                double t16772 = EcPhd_3*c*t16719*(1.0/3.0);
                double t16773 = EcPhd_4*c*t16719*(1.0/3.0);
                double t16774 = EcPhd_3*c*t16760*t16719*(1.0/3.0);
                double t16775 = 1.0/t16745;
                double t16791 = EcFld_1*t16775;
                double t16776 = -t16791+t16765;
                double t16777 = t16765-t16736*t16739*t16776;
                double t16778 = dirac(t16732,1.0);
                double t16779 = EcFhd_1*t16760;
                double t16780 = EcFhd_4*c*t16720;
                double t16781 = EcPhd_4*c*t16720;
                double t16782 = EcFhd_3*c*t16720*t16760;
                double t16783 = EcPhd_3*c*t16720*t16760;
                double t16784 = EcFhd_2-EcPhd_2+t16780-t16781+t16782-t16783-t16769+t16779;
                double t16785 = t16736*t16739*t16784;
                double t16786 = EcPhd_2+t16781+t16783+t16785+t16769;
                double t16787 = -t16721+1.0;
                double t16788 = heaviside(t16787);
                double t16789 = t16771+t16772+t16773+t16774-EcFhd_1*t16770*(1.0/3.0)-EcFhd_3*c*t16719*(1.0/3.0)-EcFhd_4*c*t16719*(1.0/3.0)-EcFhd_3*c*t16760*t16719*(1.0/3.0);
                double t16790 = t16771+t16772+t16773+t16774-t16736*t16739*t16789;
                double t16792 = 1.0/pow(t16718,2.0/3.0);
                double t16793 = Bg*c*t16751*t16770*1.0E4;
                double t16794 = Cg_4*t16751*t16792;
                double t16795 = Cg_3*c*t16720;
                double t16796 = t16793+t16794+t16795+1.0;
                double t16797 = 1.0/t16796;
                double t16798 = 1.0/pow(t16718,5.0/3.0);
                double t16799 = Bg*t16751*t16792;
                double t16800 = Cg_2*c*t16720;
                double t16801 = Cg_1+t16800+t16799;
                double t16802 = gamma_ab*2.0;
                double t16803 = gamma_aa+gamma_bb+t16802;
                double t16804 = 1.0/two_13;
                double t16805 = 1.0/pow(t16718,7.0/6.0);
                double t16806 = t16801*t16797;
                double t16807 = Cx+t16806;
                double t16808 = 1.0/t16807;
                double t16809 = sqrt(t16803);
                double t16811 = Cinf*Fg*Pg_1*t16805*t16808*t16809;
                double t16810 = exp(-t16811);
                double t16812 = Bg*t16751*t16798*(2.0/3.0);
                double t16813 = Cg_2*c*t16719*(1.0/3.0);
                double t16814 = t16812+t16813;
                double t16815 = Bg*c*t16751*t16758*1.0E4;
                double t16816 = Cg_4*t16751*t16798*(2.0/3.0);
                double t16817 = Cg_3*c*t16719*(1.0/3.0);
                double t16818 = t16815+t16816+t16817;
                double t16819 = 1.0/(t16796*t16796);
                double t16820 = t16814*t16797;
                double t16835 = t16801*t16818*t16819;
                double t16821 = t16820-t16835;
                double t16822 = Bg*t16751*t16752*(1.0E1/9.0);
                double t16823 = Cg_2*c*t16749*(4.0/9.0);
                double t16824 = t16822+t16823;
                double t16825 = t16824*t16797;
                double t16826 = 1.0/(t16718*t16718*t16718);
                double t16827 = Bg*c*t16751*t16826*2.0E4;
                double t16828 = Cg_4*t16751*t16752*(1.0E1/9.0);
                double t16829 = Cg_3*c*t16749*(4.0/9.0);
                double t16830 = t16827+t16828+t16829;
                double t16831 = t16818*t16818;
                double t16832 = 1.0/(t16796*t16796*t16796);
                double t16833 = t16801*t16831*t16832*2.0;
                double t16834 = t16833+t16825-t16801*t16830*t16819-t16814*t16818*t16819*2.0;
                double t16836 = 1.0/(t16807*t16807);
                double t16837 = 1.0/pow(t16718,1.3E1/6.0);
                double t16838 = Cinf*Fg*Pg_1*t16808*t16809*t16837*(7.0/6.0);
                double t16840 = Cinf*Fg*Pg_1*t16821*t16805*t16809*t16836;
                double t16839 = -t16840+t16838;
                v_rho_b_rho_b[Q] += scale * -t16718*(-t16788*(t16761+t16762+t16763+t16759-t16736*t16739*(t16761+t16762+t16763+t16759-EcFhd_1*t16758*(1.0/3.0)-EcFhd_3*c*t16749*(5.0/9.0)-EcFhd_4*c*t16749*(4.0/9.0)-EcFhd_3*c*t16760*t16749*(4.0/9.0)))+t16733*(-t16748+t16757+t16736*t16739*(t16748-t16757-EcFld_1*(t16742*t16742)*1.0/(t16745*t16745*t16745)*2.0+EcFld_1*t16750*(EcFld_3*c*t16749*(4.0/9.0)-EcFld_2*t16751*t16752*t16753*(1.0/3.6E1)+EcFld_2*c*t16722*t16749*(2.0/9.0))))+c*t16790*t16719*t16768*(2.0/3.0)+c*t16719*t16767*t16768*(2.0/3.0)-c*t16749*t16768*t16777*(4.0/9.0)+c*t16749*t16768*t16786*(4.0/9.0)-t16751*t16752*t16777*t16778*(1.0/9.0)+t16751*t16752*t16786*t16778*(1.0/9.0))+t16733*t16767*2.0-t16790*t16788*2.0+c*t16719*t16768*t16786*(2.0/3.0)-c*t16719*t16768*(t16765+t16736*t16739*(t16791-t16765))*(2.0/3.0)+t16810*t16803*t16804*t16807*1.0/pow(t16718,1.0E1/3.0)*(2.8E1/9.0)+t16810*t16803*t16821*t16804*t16749*(8.0/3.0)+t16810*t16803*t16804*t16834*t16719-t16810*t16803*t16821*t16804*t16719*t16839*2.0-t16810*t16803*t16804*t16807*t16749*t16839*(8.0/3.0)+t16810*t16803*t16804*t16807*t16719*(t16839*t16839)-t16810*t16803*t16804*t16807*t16719*(Cinf*Fg*Pg_1*1.0/pow(t16718,1.9E1/6.0)*t16808*t16809*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t16805*t16834*t16809*t16836-Cinf*Fg*Pg_1*t16821*t16809*t16836*t16837*(7.0/3.0)+Cinf*Fg*Pg_1*(t16821*t16821)*t16805*1.0/(t16807*t16807*t16807)*t16809*2.0);
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t17106 = rho_a+rho_b;
                double t17107 = c*c;
                double t17108 = 1.0/pow(t17106,2.0/3.0);
                double t17109 = 1.0/pow(t17106,1.0/3.0);
                double t17110 = Bg*t17107*t17108;
                double t17111 = Cg_2*c*t17109;
                double t17112 = Cg_1+t17110+t17111;
                double t17113 = 1.0/t17106;
                double t17114 = Bg*c*t17113*t17107*1.0E4;
                double t17115 = Cg_4*t17107*t17108;
                double t17116 = Cg_3*c*t17109;
                double t17117 = t17114+t17115+t17116+1.0;
                double t17118 = 1.0/t17117;
                double t17119 = t17112*t17118;
                double t17120 = Cx+t17119;
                double t17121 = 1.0/t17120;
                double t17122 = 1.0/two_13;
                double t17123 = 1.0/pow(t17106,7.0/6.0);
                double t17124 = gamma_ab*2.0;
                double t17125 = gamma_aa+gamma_bb+t17124;
                double t17126 = sqrt(t17125);
                double t17127 = exp(-Cinf*Fg*Pg_1*t17121*t17123*t17126);
                v_gamma_aa_gamma_aa[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t17121*t17122*1.0/pow(t17106,1.1E1/3.0)*t17127*(1.0/4.0)-Cinf*Fg*Pg_1*t17122*1.0/pow(t17106,5.0/2.0)*1.0/sqrt(t17125)*t17127*(3.0/4.0);
            }
            
            // v_gamma_aa_gamma_ab
            if (deriv >= 2) {
                double t17129 = rho_a+rho_b;
                double t17130 = c*c;
                double t17131 = 1.0/pow(t17129,2.0/3.0);
                double t17132 = 1.0/pow(t17129,1.0/3.0);
                double t17133 = Bg*t17130*t17131;
                double t17134 = Cg_2*c*t17132;
                double t17135 = Cg_1+t17133+t17134;
                double t17136 = 1.0/t17129;
                double t17137 = Bg*c*t17130*t17136*1.0E4;
                double t17138 = Cg_4*t17130*t17131;
                double t17139 = Cg_3*c*t17132;
                double t17140 = t17137+t17138+t17139+1.0;
                double t17141 = 1.0/t17140;
                double t17142 = t17141*t17135;
                double t17143 = Cx+t17142;
                double t17144 = 1.0/t17143;
                double t17145 = 1.0/two_13;
                double t17146 = 1.0/pow(t17129,7.0/6.0);
                double t17147 = gamma_ab*2.0;
                double t17148 = gamma_aa+gamma_bb+t17147;
                double t17149 = sqrt(t17148);
                double t17150 = exp(-Cinf*Fg*Pg_1*t17144*t17146*t17149);
                v_gamma_aa_gamma_ab[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t17150*t17144*t17145*1.0/pow(t17129,1.1E1/3.0)*(1.0/2.0)-Cinf*Fg*Pg_1*t17150*t17145*1.0/pow(t17129,5.0/2.0)*1.0/sqrt(t17148)*(3.0/2.0);
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t17152 = rho_a+rho_b;
                double t17153 = c*c;
                double t17154 = 1.0/pow(t17152,2.0/3.0);
                double t17155 = 1.0/pow(t17152,1.0/3.0);
                double t17156 = Bg*t17153*t17154;
                double t17157 = Cg_2*c*t17155;
                double t17158 = Cg_1+t17156+t17157;
                double t17159 = 1.0/t17152;
                double t17160 = Bg*c*t17153*t17159*1.0E4;
                double t17161 = Cg_4*t17153*t17154;
                double t17162 = Cg_3*c*t17155;
                double t17163 = t17160+t17161+t17162+1.0;
                double t17164 = 1.0/t17163;
                double t17165 = t17164*t17158;
                double t17166 = Cx+t17165;
                double t17167 = 1.0/t17166;
                double t17168 = 1.0/two_13;
                double t17169 = 1.0/pow(t17152,7.0/6.0);
                double t17170 = gamma_ab*2.0;
                double t17171 = gamma_aa+gamma_bb+t17170;
                double t17172 = sqrt(t17171);
                double t17173 = exp(-Cinf*Fg*Pg_1*t17172*t17167*t17169);
                v_gamma_aa_gamma_bb[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*1.0/pow(t17152,1.1E1/3.0)*t17173*t17167*t17168*(1.0/4.0)-Cinf*Fg*Pg_1*1.0/pow(t17152,5.0/2.0)*1.0/sqrt(t17171)*t17173*t17168*(3.0/4.0);
            }
            
            // v_gamma_ab_gamma_ab
            if (deriv >= 2) {
                double t17175 = rho_a+rho_b;
                double t17176 = c*c;
                double t17177 = 1.0/pow(t17175,2.0/3.0);
                double t17178 = 1.0/pow(t17175,1.0/3.0);
                double t17179 = Bg*t17176*t17177;
                double t17180 = Cg_2*c*t17178;
                double t17181 = Cg_1+t17180+t17179;
                double t17182 = 1.0/t17175;
                double t17183 = Bg*c*t17182*t17176*1.0E4;
                double t17184 = Cg_4*t17176*t17177;
                double t17185 = Cg_3*c*t17178;
                double t17186 = t17183+t17184+t17185+1.0;
                double t17187 = 1.0/t17186;
                double t17188 = t17181*t17187;
                double t17189 = Cx+t17188;
                double t17190 = 1.0/t17189;
                double t17191 = 1.0/two_13;
                double t17192 = 1.0/pow(t17175,7.0/6.0);
                double t17193 = gamma_ab*2.0;
                double t17194 = gamma_aa+gamma_bb+t17193;
                double t17195 = sqrt(t17194);
                double t17196 = exp(-Cinf*Fg*Pg_1*t17190*t17192*t17195);
                v_gamma_ab_gamma_ab[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t17190*t17191*1.0/pow(t17175,1.1E1/3.0)*t17196-Cinf*Fg*Pg_1*t17191*1.0/pow(t17175,5.0/2.0)*1.0/sqrt(t17194)*t17196*3.0;
            }
            
            // v_gamma_ab_gamma_bb
            if (deriv >= 2) {
                double t17198 = rho_a+rho_b;
                double t17199 = c*c;
                double t17200 = 1.0/pow(t17198,2.0/3.0);
                double t17201 = 1.0/pow(t17198,1.0/3.0);
                double t17202 = Bg*t17200*t17199;
                double t17203 = Cg_2*c*t17201;
                double t17204 = Cg_1+t17202+t17203;
                double t17205 = 1.0/t17198;
                double t17206 = Bg*c*t17205*t17199*1.0E4;
                double t17207 = Cg_4*t17200*t17199;
                double t17208 = Cg_3*c*t17201;
                double t17209 = t17206+t17207+t17208+1.0;
                double t17210 = 1.0/t17209;
                double t17211 = t17210*t17204;
                double t17212 = Cx+t17211;
                double t17213 = 1.0/t17212;
                double t17214 = 1.0/two_13;
                double t17215 = 1.0/pow(t17198,7.0/6.0);
                double t17216 = gamma_ab*2.0;
                double t17217 = gamma_aa+gamma_bb+t17216;
                double t17218 = sqrt(t17217);
                double t17219 = exp(-Cinf*Fg*Pg_1*t17213*t17215*t17218);
                v_gamma_ab_gamma_bb[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t17213*t17214*t17219*1.0/pow(t17198,1.1E1/3.0)*(1.0/2.0)-Cinf*Fg*Pg_1*t17214*1.0/sqrt(t17217)*t17219*1.0/pow(t17198,5.0/2.0)*(3.0/2.0);
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t17221 = rho_a+rho_b;
                double t17222 = c*c;
                double t17223 = 1.0/pow(t17221,2.0/3.0);
                double t17224 = 1.0/pow(t17221,1.0/3.0);
                double t17225 = Bg*t17222*t17223;
                double t17226 = Cg_2*c*t17224;
                double t17227 = Cg_1+t17225+t17226;
                double t17228 = 1.0/t17221;
                double t17229 = Bg*c*t17222*t17228*1.0E4;
                double t17230 = Cg_4*t17222*t17223;
                double t17231 = Cg_3*c*t17224;
                double t17232 = t17230+t17231+t17229+1.0;
                double t17233 = 1.0/t17232;
                double t17234 = t17233*t17227;
                double t17235 = Cx+t17234;
                double t17236 = 1.0/t17235;
                double t17237 = 1.0/two_13;
                double t17238 = 1.0/pow(t17221,7.0/6.0);
                double t17239 = gamma_ab*2.0;
                double t17240 = gamma_aa+gamma_bb+t17239;
                double t17241 = sqrt(t17240);
                double t17242 = exp(-Cinf*Fg*Pg_1*t17241*t17236*t17238);
                v_gamma_bb_gamma_bb[Q] += scale * (Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*1.0/pow(t17221,1.1E1/3.0)*t17242*t17236*t17237*(1.0/4.0)-Cinf*Fg*Pg_1*1.0/pow(t17221,5.0/2.0)*1.0/sqrt(t17240)*t17242*t17237*(3.0/4.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t16842 = rho_a+rho_b;
                double t16843 = c*c;
                double t16844 = 1.0/pow(t16842,2.0/3.0);
                double t16845 = 1.0/pow(t16842,1.0/3.0);
                double t16846 = 1.0/pow(t16842,4.0/3.0);
                double t16847 = 1.0/t16842;
                double t16848 = Bg*c*t16843*t16847*1.0E4;
                double t16849 = Cg_4*t16843*t16844;
                double t16850 = Cg_3*c*t16845;
                double t16851 = t16850+t16848+t16849+1.0;
                double t16852 = 1.0/t16851;
                double t16853 = 1.0/pow(t16842,5.0/3.0);
                double t16854 = Bg*t16843*t16844;
                double t16855 = Cg_2*c*t16845;
                double t16856 = Cg_1+t16854+t16855;
                double t16857 = 1.0/two_13;
                double t16858 = 1.0/pow(t16842,7.0/6.0);
                double t16859 = t16852*t16856;
                double t16860 = Cx+t16859;
                double t16861 = 1.0/t16860;
                double t16862 = gamma_ab*2.0;
                double t16863 = gamma_aa+gamma_bb+t16862;
                double t16864 = sqrt(t16863);
                double t16866 = Cinf*Fg*Pg_1*t16861*t16864*t16858;
                double t16865 = exp(-t16866);
                double t16867 = Bg*t16843*t16853*(2.0/3.0);
                double t16868 = Cg_2*c*t16846*(1.0/3.0);
                double t16869 = t16867+t16868;
                double t16870 = t16852*t16869;
                double t16871 = 1.0/(t16842*t16842);
                double t16872 = Bg*c*t16843*t16871*1.0E4;
                double t16873 = Cg_4*t16843*t16853*(2.0/3.0);
                double t16874 = Cg_3*c*t16846*(1.0/3.0);
                double t16875 = t16872+t16873+t16874;
                double t16876 = 1.0/(t16851*t16851);
                double t16879 = t16856*t16875*t16876;
                double t16877 = t16870-t16879;
                double t16878 = 1.0/pow(t16842,1.3E1/6.0);
                double t16880 = 1.0/(t16860*t16860);
                double t16881 = 1.0/sqrt(t16863);
                double t16882 = Cinf*Fg*Pg_1*t16861*t16864*t16878*(7.0/6.0);
                double t16883 = t16882-Cinf*Fg*Pg_1*t16880*t16864*t16858*t16877;
                double t16884 = 1.0/pow(t16842,5.0/2.0);
                v_rho_a_gamma_aa[Q] += scale * -t16846*t16865*t16857*t16877-1.0/pow(t16842,7.0/3.0)*t16860*t16865*t16857*(4.0/3.0)+t16860*t16846*t16865*t16883*t16857+t16860*t16863*t16846*t16865*t16857*(Cinf*Fg*Pg_1*t16861*t16881*t16878*(7.0/1.2E1)-Cinf*Fg*Pg_1*t16880*t16881*t16858*t16877*(1.0/2.0))+Cinf*Fg*Pg_1*1.0/pow(t16842,7.0/2.0)*t16864*t16865*t16857*(2.0/3.0)-Cinf*Fg*Pg_1*t16864*t16865*t16883*t16857*t16884*(1.0/2.0)+Cinf*Fg*Pg_1*t16861*t16864*t16865*t16857*t16884*t16877*(1.0/2.0);
            }
            
            // v_rho_a_gamma_ab
            if (deriv >= 2) {
                double t16886 = rho_a+rho_b;
                double t16887 = c*c;
                double t16888 = 1.0/pow(t16886,2.0/3.0);
                double t16889 = 1.0/pow(t16886,1.0/3.0);
                double t16890 = 1.0/pow(t16886,4.0/3.0);
                double t16891 = 1.0/t16886;
                double t16892 = Bg*c*t16891*t16887*1.0E4;
                double t16893 = Cg_4*t16887*t16888;
                double t16894 = Cg_3*c*t16889;
                double t16895 = t16892+t16893+t16894+1.0;
                double t16896 = 1.0/t16895;
                double t16897 = 1.0/pow(t16886,5.0/3.0);
                double t16898 = Bg*t16887*t16888;
                double t16899 = Cg_2*c*t16889;
                double t16900 = Cg_1+t16898+t16899;
                double t16901 = 1.0/two_13;
                double t16902 = 1.0/pow(t16886,7.0/6.0);
                double t16903 = t16900*t16896;
                double t16904 = Cx+t16903;
                double t16905 = 1.0/t16904;
                double t16906 = gamma_ab*2.0;
                double t16907 = gamma_aa+gamma_bb+t16906;
                double t16908 = sqrt(t16907);
                double t16910 = Cinf*Fg*Pg_1*t16902*t16905*t16908;
                double t16909 = exp(-t16910);
                double t16911 = Bg*t16887*t16897*(2.0/3.0);
                double t16912 = Cg_2*c*t16890*(1.0/3.0);
                double t16913 = t16911+t16912;
                double t16914 = t16913*t16896;
                double t16915 = 1.0/(t16886*t16886);
                double t16916 = Bg*c*t16915*t16887*1.0E4;
                double t16917 = Cg_4*t16887*t16897*(2.0/3.0);
                double t16918 = Cg_3*c*t16890*(1.0/3.0);
                double t16919 = t16916+t16917+t16918;
                double t16920 = 1.0/(t16895*t16895);
                double t16923 = t16900*t16920*t16919;
                double t16921 = t16914-t16923;
                double t16922 = 1.0/pow(t16886,1.3E1/6.0);
                double t16924 = 1.0/(t16904*t16904);
                double t16925 = 1.0/sqrt(t16907);
                double t16926 = Cinf*Fg*Pg_1*t16922*t16905*t16908*(7.0/6.0);
                double t16927 = t16926-Cinf*Fg*Pg_1*t16902*t16921*t16924*t16908;
                double t16928 = 1.0/pow(t16886,5.0/2.0);
                v_rho_a_gamma_ab[Q] += scale * t16901*t16921*t16890*t16909*-2.0-t16901*t16904*t16909*1.0/pow(t16886,7.0/3.0)*(8.0/3.0)+t16901*t16904*t16890*t16909*t16927*2.0+t16901*t16904*t16907*t16890*t16909*(Cinf*Fg*Pg_1*t16922*t16905*t16925*(7.0/6.0)-Cinf*Fg*Pg_1*t16902*t16921*t16924*t16925)+Cinf*Fg*Pg_1*t16901*t16908*t16909*1.0/pow(t16886,7.0/2.0)*(4.0/3.0)-Cinf*Fg*Pg_1*t16901*t16908*t16909*t16927*t16928+Cinf*Fg*Pg_1*t16901*t16921*t16905*t16908*t16909*t16928;
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t16930 = rho_a+rho_b;
                double t16931 = c*c;
                double t16932 = 1.0/pow(t16930,2.0/3.0);
                double t16933 = 1.0/pow(t16930,1.0/3.0);
                double t16934 = 1.0/pow(t16930,4.0/3.0);
                double t16935 = 1.0/t16930;
                double t16936 = Bg*c*t16931*t16935*1.0E4;
                double t16937 = Cg_4*t16931*t16932;
                double t16938 = Cg_3*c*t16933;
                double t16939 = t16936+t16937+t16938+1.0;
                double t16940 = 1.0/t16939;
                double t16941 = 1.0/pow(t16930,5.0/3.0);
                double t16942 = Bg*t16931*t16932;
                double t16943 = Cg_2*c*t16933;
                double t16944 = Cg_1+t16942+t16943;
                double t16945 = 1.0/two_13;
                double t16946 = 1.0/pow(t16930,7.0/6.0);
                double t16947 = t16940*t16944;
                double t16948 = Cx+t16947;
                double t16949 = 1.0/t16948;
                double t16950 = gamma_ab*2.0;
                double t16951 = gamma_aa+gamma_bb+t16950;
                double t16952 = sqrt(t16951);
                double t16954 = Cinf*Fg*Pg_1*t16952*t16946*t16949;
                double t16953 = exp(-t16954);
                double t16955 = Bg*t16931*t16941*(2.0/3.0);
                double t16956 = Cg_2*c*t16934*(1.0/3.0);
                double t16957 = t16955+t16956;
                double t16958 = t16940*t16957;
                double t16959 = 1.0/(t16930*t16930);
                double t16960 = Bg*c*t16931*t16959*1.0E4;
                double t16961 = Cg_4*t16931*t16941*(2.0/3.0);
                double t16962 = Cg_3*c*t16934*(1.0/3.0);
                double t16963 = t16960+t16961+t16962;
                double t16964 = 1.0/(t16939*t16939);
                double t16967 = t16944*t16963*t16964;
                double t16965 = t16958-t16967;
                double t16966 = 1.0/pow(t16930,1.3E1/6.0);
                double t16968 = 1.0/(t16948*t16948);
                double t16969 = 1.0/sqrt(t16951);
                double t16970 = Cinf*Fg*Pg_1*t16952*t16966*t16949*(7.0/6.0);
                double t16971 = t16970-Cinf*Fg*Pg_1*t16952*t16946*t16965*t16968;
                double t16972 = 1.0/pow(t16930,5.0/2.0);
                v_rho_a_gamma_bb[Q] += scale * -t16934*t16953*t16945*t16965-1.0/pow(t16930,7.0/3.0)*t16953*t16945*t16948*(4.0/3.0)+t16934*t16953*t16971*t16945*t16948+t16951*t16934*t16953*t16945*t16948*(Cinf*Fg*Pg_1*t16966*t16949*t16969*(7.0/1.2E1)-Cinf*Fg*Pg_1*t16946*t16965*t16968*t16969*(1.0/2.0))+Cinf*Fg*Pg_1*1.0/pow(t16930,7.0/2.0)*t16952*t16953*t16945*(2.0/3.0)-Cinf*Fg*Pg_1*t16952*t16953*t16971*t16945*t16972*(1.0/2.0)+Cinf*Fg*Pg_1*t16952*t16953*t16945*t16972*t16965*t16949*(1.0/2.0);
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t16974 = rho_a+rho_b;
                double t16975 = c*c;
                double t16976 = 1.0/pow(t16974,2.0/3.0);
                double t16977 = 1.0/pow(t16974,1.0/3.0);
                double t16978 = 1.0/pow(t16974,4.0/3.0);
                double t16979 = 1.0/t16974;
                double t16980 = Bg*c*t16975*t16979*1.0E4;
                double t16981 = Cg_4*t16975*t16976;
                double t16982 = Cg_3*c*t16977;
                double t16983 = t16980+t16981+t16982+1.0;
                double t16984 = 1.0/t16983;
                double t16985 = 1.0/pow(t16974,5.0/3.0);
                double t16986 = Bg*t16975*t16976;
                double t16987 = Cg_2*c*t16977;
                double t16988 = Cg_1+t16986+t16987;
                double t16989 = 1.0/two_13;
                double t16990 = 1.0/pow(t16974,7.0/6.0);
                double t16991 = t16984*t16988;
                double t16992 = Cx+t16991;
                double t16993 = 1.0/t16992;
                double t16994 = gamma_ab*2.0;
                double t16995 = gamma_aa+gamma_bb+t16994;
                double t16996 = sqrt(t16995);
                double t16998 = Cinf*Fg*Pg_1*t16990*t16993*t16996;
                double t16997 = exp(-t16998);
                double t16999 = Bg*t16975*t16985*(2.0/3.0);
                double t17000 = Cg_2*c*t16978*(1.0/3.0);
                double t17001 = t16999+t17000;
                double t17002 = t16984*t17001;
                double t17003 = 1.0/(t16974*t16974);
                double t17004 = Bg*c*t16975*t17003*1.0E4;
                double t17005 = Cg_4*t16975*t16985*(2.0/3.0);
                double t17006 = Cg_3*c*t16978*(1.0/3.0);
                double t17007 = t17004+t17005+t17006;
                double t17008 = 1.0/(t16983*t16983);
                double t17011 = t16988*t17007*t17008;
                double t17009 = t17002-t17011;
                double t17010 = 1.0/pow(t16974,1.3E1/6.0);
                double t17012 = 1.0/(t16992*t16992);
                double t17013 = 1.0/sqrt(t16995);
                double t17014 = Cinf*Fg*Pg_1*t16993*t16996*t17010*(7.0/6.0);
                double t17015 = t17014-Cinf*Fg*Pg_1*t16990*t16996*t17012*t17009;
                double t17016 = 1.0/pow(t16974,5.0/2.0);
                v_rho_b_gamma_aa[Q] += scale * -t16978*t16997*t16989*t17009-1.0/pow(t16974,7.0/3.0)*t16992*t16997*t16989*(4.0/3.0)+t16992*t16978*t16997*t16989*t17015+t16992*t16995*t16978*t16997*t16989*(Cinf*Fg*Pg_1*t16993*t17010*t17013*(7.0/1.2E1)-Cinf*Fg*Pg_1*t16990*t17012*t17013*t17009*(1.0/2.0))+Cinf*Fg*Pg_1*1.0/pow(t16974,7.0/2.0)*t16996*t16997*t16989*(2.0/3.0)-Cinf*Fg*Pg_1*t16996*t16997*t16989*t17015*t17016*(1.0/2.0)+Cinf*Fg*Pg_1*t16993*t16996*t16997*t16989*t17016*t17009*(1.0/2.0);
            }
            
            // v_rho_b_gamma_ab
            if (deriv >= 2) {
                double t17018 = rho_a+rho_b;
                double t17019 = c*c;
                double t17020 = 1.0/pow(t17018,2.0/3.0);
                double t17021 = 1.0/pow(t17018,1.0/3.0);
                double t17022 = 1.0/pow(t17018,4.0/3.0);
                double t17023 = 1.0/t17018;
                double t17024 = Bg*c*t17023*t17019*1.0E4;
                double t17025 = Cg_4*t17020*t17019;
                double t17026 = Cg_3*c*t17021;
                double t17027 = t17024+t17025+t17026+1.0;
                double t17028 = 1.0/t17027;
                double t17029 = 1.0/pow(t17018,5.0/3.0);
                double t17030 = Bg*t17020*t17019;
                double t17031 = Cg_2*c*t17021;
                double t17032 = Cg_1+t17030+t17031;
                double t17033 = 1.0/two_13;
                double t17034 = 1.0/pow(t17018,7.0/6.0);
                double t17035 = t17032*t17028;
                double t17036 = Cx+t17035;
                double t17037 = 1.0/t17036;
                double t17038 = gamma_ab*2.0;
                double t17039 = gamma_aa+gamma_bb+t17038;
                double t17040 = sqrt(t17039);
                double t17042 = Cinf*Fg*Pg_1*t17040*t17034*t17037;
                double t17041 = exp(-t17042);
                double t17043 = Bg*t17019*t17029*(2.0/3.0);
                double t17044 = Cg_2*c*t17022*(1.0/3.0);
                double t17045 = t17043+t17044;
                double t17046 = t17045*t17028;
                double t17047 = 1.0/(t17018*t17018);
                double t17048 = Bg*c*t17019*t17047*1.0E4;
                double t17049 = Cg_4*t17019*t17029*(2.0/3.0);
                double t17050 = Cg_3*c*t17022*(1.0/3.0);
                double t17051 = t17050+t17048+t17049;
                double t17052 = 1.0/(t17027*t17027);
                double t17055 = t17032*t17051*t17052;
                double t17053 = t17046-t17055;
                double t17054 = 1.0/pow(t17018,1.3E1/6.0);
                double t17056 = 1.0/(t17036*t17036);
                double t17057 = 1.0/sqrt(t17039);
                double t17058 = Cinf*Fg*Pg_1*t17040*t17054*t17037*(7.0/6.0);
                double t17059 = t17058-Cinf*Fg*Pg_1*t17040*t17034*t17053*t17056;
                double t17060 = 1.0/pow(t17018,5.0/2.0);
                v_rho_b_gamma_ab[Q] += scale * t17022*t17041*t17033*t17053*-2.0-t17041*t17033*1.0/pow(t17018,7.0/3.0)*t17036*(8.0/3.0)+t17022*t17041*t17033*t17036*t17059*2.0+t17022*t17041*t17033*t17036*t17039*(Cinf*Fg*Pg_1*t17054*t17037*t17057*(7.0/6.0)-Cinf*Fg*Pg_1*t17034*t17053*t17056*t17057)+Cinf*Fg*Pg_1*t17040*t17041*t17033*1.0/pow(t17018,7.0/2.0)*(4.0/3.0)-Cinf*Fg*Pg_1*t17040*t17041*t17033*t17060*t17059+Cinf*Fg*Pg_1*t17040*t17041*t17033*t17060*t17053*t17037;
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t17062 = rho_a+rho_b;
                double t17063 = c*c;
                double t17064 = 1.0/pow(t17062,2.0/3.0);
                double t17065 = 1.0/pow(t17062,1.0/3.0);
                double t17066 = 1.0/pow(t17062,4.0/3.0);
                double t17067 = 1.0/t17062;
                double t17068 = Bg*c*t17063*t17067*1.0E4;
                double t17069 = Cg_4*t17063*t17064;
                double t17070 = Cg_3*c*t17065;
                double t17071 = t17070+t17068+t17069+1.0;
                double t17072 = 1.0/t17071;
                double t17073 = 1.0/pow(t17062,5.0/3.0);
                double t17074 = Bg*t17063*t17064;
                double t17075 = Cg_2*c*t17065;
                double t17076 = Cg_1+t17074+t17075;
                double t17077 = 1.0/two_13;
                double t17078 = 1.0/pow(t17062,7.0/6.0);
                double t17079 = t17072*t17076;
                double t17080 = Cx+t17079;
                double t17081 = 1.0/t17080;
                double t17082 = gamma_ab*2.0;
                double t17083 = gamma_aa+gamma_bb+t17082;
                double t17084 = sqrt(t17083);
                double t17086 = Cinf*Fg*Pg_1*t17081*t17084*t17078;
                double t17085 = exp(-t17086);
                double t17087 = Bg*t17063*t17073*(2.0/3.0);
                double t17088 = Cg_2*c*t17066*(1.0/3.0);
                double t17089 = t17087+t17088;
                double t17090 = t17072*t17089;
                double t17091 = 1.0/(t17062*t17062);
                double t17092 = Bg*c*t17063*t17091*1.0E4;
                double t17093 = Cg_4*t17063*t17073*(2.0/3.0);
                double t17094 = Cg_3*c*t17066*(1.0/3.0);
                double t17095 = t17092+t17093+t17094;
                double t17096 = 1.0/(t17071*t17071);
                double t17099 = t17076*t17095*t17096;
                double t17097 = t17090-t17099;
                double t17098 = 1.0/pow(t17062,1.3E1/6.0);
                double t17100 = 1.0/(t17080*t17080);
                double t17101 = 1.0/sqrt(t17083);
                double t17102 = Cinf*Fg*Pg_1*t17081*t17084*t17098*(7.0/6.0);
                double t17103 = t17102-Cinf*Fg*Pg_1*t17100*t17084*t17078*t17097;
                double t17104 = 1.0/pow(t17062,5.0/2.0);
                v_rho_b_gamma_bb[Q] += scale * -t17066*t17085*t17077*t17097-1.0/pow(t17062,7.0/3.0)*t17080*t17085*t17077*(4.0/3.0)+t17103*t17080*t17066*t17085*t17077+t17080*t17083*t17066*t17085*t17077*(Cinf*Fg*Pg_1*t17101*t17081*t17098*(7.0/1.2E1)-Cinf*Fg*Pg_1*t17100*t17101*t17078*t17097*(1.0/2.0))+Cinf*Fg*Pg_1*1.0/pow(t17062,7.0/2.0)*t17084*t17085*t17077*(2.0/3.0)-Cinf*Fg*Pg_1*t17103*t17104*t17084*t17085*t17077*(1.0/2.0)+Cinf*Fg*Pg_1*t17104*t17081*t17084*t17085*t17077*t17097*(1.0/2.0);
            }
            
        } else {
            // v
            if (deriv >= 0) {
                double t13797 = rho_a+rho_b;
                double t13798 = 1.0/pow(t13797,1.0/3.0);
                double t13799 = 1.0/t13797;
                double t13800 = rho_a-rho_b;
                double t13801 = t13800*t13799;
                double t13802 = c*t13798;
                double t13803 = log(t13802);
                double t13804 = EcPhd_1*t13803;
                double t13805 = two_13*2.0;
                double t13806 = t13805-2.0;
                double t13807 = 1.0/t13806;
                double t13808 = sqrt(t13802);
                double t13809 = EcPld_2*t13808;
                double t13810 = EcPld_3*c*t13798;
                double t13811 = t13810+t13809+1.0;
                double t13812 = 1.0/t13811;
                double t13813 = EcPld_1*t13812;
                double t13814 = t13801+1.0;
                double t13815 = pow(t13814,4.0/3.0);
                double t13816 = -t13801+1.0;
                double t13817 = pow(t13816,4.0/3.0);
                double t13818 = t13815+t13817-2.0;
                double t13819 = c*c;
                double t13820 = 1.0/pow(t13797,2.0/3.0);
                double t13821 = Bg*t13820*t13819;
                double t13822 = Cg_2*c*t13798;
                double t13823 = Cg_1+t13821+t13822;
                double t13824 = Bg*c*t13819*t13799*1.0E4;
                double t13825 = Cg_4*t13820*t13819;
                double t13826 = Cg_3*c*t13798;
                double t13827 = t13824+t13825+t13826+1.0;
                double t13828 = 1.0/t13827;
                double t13829 = t13823*t13828;
                double t13830 = Cx+t13829;
                double t13831 = gamma_ab*2.0;
                double t13832 = gamma_aa+gamma_bb+t13831;
                v[Q] += scale * t13797*(heaviside(-c*t13798+1.0)*(EcPhd_2+t13804+t13807*t13818*(EcFhd_2-EcPhd_2-t13804+EcFhd_1*t13803+EcFhd_4*c*t13798-EcPhd_4*c*t13798+EcFhd_3*c*t13803*t13798-EcPhd_3*c*t13803*t13798)+EcPhd_4*c*t13798+EcPhd_3*c*t13803*t13798)+heaviside(t13802-1.0)*(t13813-t13807*t13818*(t13813-EcFld_1/(EcFld_2*t13808+EcFld_3*c*t13798+1.0))))+(t13830*t13832*1.0/pow(t13797,4.0/3.0)*exp(-(Cinf*Fg*Pg_1*sqrt(t13832)*1.0/pow(t13797,7.0/6.0))/t13830)*1.0/sqrt(pow(t13800*t13799*(-1.0/2.0)+1.0/2.0,5.0/3.0)+pow(t13800*t13799*(1.0/2.0)+1.0/2.0,5.0/3.0)))/two_13;
            }
            
            // v_rho_a
            if (deriv >= 1) {
                double t13834 = rho_a+rho_b;
                double t13835 = 1.0/pow(t13834,1.0/3.0);
                double t13836 = 1.0/t13834;
                double t13837 = rho_a-rho_b;
                double t13838 = t13836*t13837;
                double t13839 = c*t13835;
                double t13840 = log(t13839);
                double t13841 = EcPhd_1*t13840;
                double t13842 = 1.0/pow(t13834,4.0/3.0);
                double t13843 = two_13*2.0;
                double t13844 = t13843-2.0;
                double t13845 = 1.0/t13844;
                double t13846 = t13838+1.0;
                double t13847 = pow(t13846,4.0/3.0);
                double t13848 = -t13838+1.0;
                double t13849 = pow(t13848,4.0/3.0);
                double t13850 = t13847+t13849-2.0;
                double t13851 = EcPhd_1*t13836*(1.0/3.0);
                double t13852 = EcPhd_3*c*t13842*(1.0/3.0);
                double t13853 = EcPhd_4*c*t13842*(1.0/3.0);
                double t13854 = 1.0/(t13834*t13834);
                double t13865 = t13854*t13837;
                double t13855 = t13836-t13865;
                double t13856 = EcFhd_1*t13840;
                double t13857 = EcFhd_4*c*t13835;
                double t13858 = EcPhd_4*c*t13835;
                double t13859 = EcFhd_3*c*t13840*t13835;
                double t13860 = EcPhd_3*c*t13840*t13835;
                double t13861 = EcPhd_3*c*t13840*t13842*(1.0/3.0);
                double t13862 = 1.0/sqrt(t13839);
                double t13863 = sqrt(t13839);
                double t13864 = pow(t13846,1.0/3.0);
                double t13866 = t13855*t13864*(4.0/3.0);
                double t13867 = pow(t13848,1.0/3.0);
                double t13868 = t13866-t13855*t13867*(4.0/3.0);
                double t13869 = EcFld_2*t13863;
                double t13870 = EcFld_3*c*t13835;
                double t13871 = t13870+t13869+1.0;
                double t13872 = EcPld_2*t13863;
                double t13873 = EcPld_3*c*t13835;
                double t13874 = t13872+t13873+1.0;
                double t13875 = EcPld_3*c*t13842*(1.0/3.0);
                double t13876 = EcPld_2*c*t13842*t13862*(1.0/6.0);
                double t13877 = t13875+t13876;
                double t13878 = 1.0/(t13874*t13874);
                double t13879 = t13839-1.0;
                double t13880 = EcFhd_2-EcPhd_2-t13841-t13860+t13856+t13857-t13858+t13859;
                double t13881 = dirac(t13879);
                double t13882 = 1.0/t13874;
                double t13883 = EcPld_1*t13882;
                double t13884 = 1.0/t13871;
                double t13887 = EcFld_1*t13884;
                double t13885 = t13883-t13887;
                double t13886 = heaviside(t13879);
                double t13888 = t13883-t13850*t13845*t13885;
                double t13889 = c*c;
                double t13890 = 1.0/pow(t13834,2.0/3.0);
                double t13891 = Bg*c*t13836*t13889*1.0E4;
                double t13892 = Cg_4*t13890*t13889;
                double t13893 = Cg_3*c*t13835;
                double t13894 = t13891+t13892+t13893+1.0;
                double t13895 = 1.0/t13894;
                double t13896 = 1.0/pow(t13834,5.0/3.0);
                double t13897 = Bg*t13890*t13889;
                double t13898 = Cg_2*c*t13835;
                double t13899 = Cg_1+t13897+t13898;
                double t13900 = gamma_ab*2.0;
                double t13901 = gamma_aa+gamma_bb+t13900;
                double t13902 = 1.0/two_13;
                double t13903 = 1.0/pow(t13834,7.0/6.0);
                double t13904 = t13895*t13899;
                double t13905 = Cx+t13904;
                double t13906 = 1.0/t13905;
                double t13907 = sqrt(t13901);
                double t13912 = Cinf*Fg*Pg_1*t13903*t13906*t13907;
                double t13908 = exp(-t13912);
                double t13909 = t13836*t13837*(1.0/2.0);
                double t13910 = t13909+1.0/2.0;
                double t13911 = pow(t13910,5.0/3.0);
                double t13913 = -t13909+1.0/2.0;
                double t13914 = pow(t13913,5.0/3.0);
                double t13915 = t13911+t13914;
                double t13916 = 1.0/sqrt(t13915);
                double t13917 = Bg*t13896*t13889*(2.0/3.0);
                double t13918 = Cg_2*c*t13842*(1.0/3.0);
                double t13919 = t13917+t13918;
                double t13920 = t13919*t13895;
                double t13921 = Bg*c*t13854*t13889*1.0E4;
                double t13922 = Cg_4*t13896*t13889*(2.0/3.0);
                double t13923 = Cg_3*c*t13842*(1.0/3.0);
                double t13924 = t13921+t13922+t13923;
                double t13925 = 1.0/(t13894*t13894);
                double t13926 = t13920-t13924*t13925*t13899;
                double t13927 = t13836*(1.0/2.0);
                double t13928 = t13927-t13854*t13837*(1.0/2.0);
                v_rho_a[Q] += scale * -t13834*(heaviside(-t13839+1.0)*(t13851+t13852+t13861+t13853-t13850*t13845*(t13851+t13852+t13861+t13853-EcFhd_1*t13836*(1.0/3.0)-EcFhd_3*c*t13842*(1.0/3.0)-EcFhd_4*c*t13842*(1.0/3.0)-EcFhd_3*c*t13840*t13842*(1.0/3.0))-t13880*t13845*t13868)-t13886*(t13850*t13845*(EcFld_1*1.0/(t13871*t13871)*(EcFld_3*c*t13842*(1.0/3.0)+EcFld_2*c*t13842*t13862*(1.0/6.0))-EcPld_1*t13877*t13878)+EcPld_1*t13877*t13878-t13845*t13885*t13868)+c*t13842*t13881*t13888*(1.0/3.0)-c*t13842*t13881*(EcPhd_2+t13841+t13860+t13858+t13850*t13880*t13845)*(1.0/3.0))+t13886*t13888+heaviside(-c*t13835+1.0)*(EcPhd_2+t13841+t13860+t13858+t13850*t13845*(EcFhd_2-EcPhd_2-t13841+t13856+t13857+t13859-EcPhd_4*c*t13835-EcPhd_3*c*t13840*t13835))-t13901*t13902*t13905*1.0/pow(t13834,7.0/3.0)*t13916*t13908*(4.0/3.0)-t13901*t13902*t13842*t13908*t13926*1.0/sqrt(t13911+pow(t13836*t13837*(-1.0/2.0)+1.0/2.0,5.0/3.0))-t13901*t13902*t13842*t13905*1.0/pow(t13915,3.0/2.0)*t13908*(pow(t13910,2.0/3.0)*t13928*(5.0/3.0)-pow(t13913,2.0/3.0)*t13928*(5.0/3.0))*(1.0/2.0)+t13901*t13902*t13842*t13905*t13916*t13908*(Cinf*Fg*Pg_1*1.0/pow(t13834,1.3E1/6.0)*t13906*t13907*(7.0/6.0)-Cinf*Fg*Pg_1*t13903*1.0/(t13905*t13905)*t13907*t13926);
            }
            
            // v_rho_b
            if (deriv >= 1) {
                double t13930 = rho_a+rho_b;
                double t13931 = 1.0/pow(t13930,1.0/3.0);
                double t13932 = 1.0/t13930;
                double t13933 = rho_a-rho_b;
                double t13934 = t13932*t13933;
                double t13935 = c*t13931;
                double t13936 = log(t13935);
                double t13937 = EcPhd_1*t13936;
                double t13938 = 1.0/pow(t13930,4.0/3.0);
                double t13939 = two_13*2.0;
                double t13940 = t13939-2.0;
                double t13941 = 1.0/t13940;
                double t13942 = t13934+1.0;
                double t13943 = pow(t13942,4.0/3.0);
                double t13944 = -t13934+1.0;
                double t13945 = pow(t13944,4.0/3.0);
                double t13946 = t13943+t13945-2.0;
                double t13947 = EcPhd_1*t13932*(1.0/3.0);
                double t13948 = EcPhd_3*c*t13938*(1.0/3.0);
                double t13949 = EcPhd_4*c*t13938*(1.0/3.0);
                double t13950 = 1.0/(t13930*t13930);
                double t13951 = t13950*t13933;
                double t13952 = t13932+t13951;
                double t13953 = EcFhd_1*t13936;
                double t13954 = EcFhd_4*c*t13931;
                double t13955 = EcPhd_4*c*t13931;
                double t13956 = EcFhd_3*c*t13931*t13936;
                double t13957 = EcPhd_3*c*t13931*t13936;
                double t13958 = EcPhd_3*c*t13936*t13938*(1.0/3.0);
                double t13959 = 1.0/sqrt(t13935);
                double t13960 = sqrt(t13935);
                double t13961 = pow(t13942,1.0/3.0);
                double t13962 = t13952*t13961*(4.0/3.0);
                double t13963 = pow(t13944,1.0/3.0);
                double t13964 = t13962-t13952*t13963*(4.0/3.0);
                double t13965 = EcFld_2*t13960;
                double t13966 = EcFld_3*c*t13931;
                double t13967 = t13965+t13966+1.0;
                double t13968 = EcPld_2*t13960;
                double t13969 = EcPld_3*c*t13931;
                double t13970 = t13968+t13969+1.0;
                double t13971 = EcPld_3*c*t13938*(1.0/3.0);
                double t13972 = EcPld_2*c*t13938*t13959*(1.0/6.0);
                double t13973 = t13971+t13972;
                double t13974 = 1.0/(t13970*t13970);
                double t13975 = t13935-1.0;
                double t13976 = EcFhd_2-EcPhd_2+t13953+t13954-t13937-t13955+t13956-t13957;
                double t13977 = dirac(t13975);
                double t13978 = 1.0/t13970;
                double t13979 = EcPld_1*t13978;
                double t13980 = 1.0/t13967;
                double t13983 = EcFld_1*t13980;
                double t13981 = -t13983+t13979;
                double t13982 = heaviside(t13975);
                double t13984 = c*c;
                double t13985 = 1.0/pow(t13930,2.0/3.0);
                double t13986 = Bg*c*t13932*t13984*1.0E4;
                double t13987 = Cg_4*t13984*t13985;
                double t13988 = Cg_3*c*t13931;
                double t13989 = t13986+t13987+t13988+1.0;
                double t13990 = 1.0/t13989;
                double t13991 = 1.0/pow(t13930,5.0/3.0);
                double t13992 = Bg*t13984*t13985;
                double t13993 = Cg_2*c*t13931;
                double t13994 = Cg_1+t13992+t13993;
                double t13995 = gamma_ab*2.0;
                double t13996 = gamma_aa+gamma_bb+t13995;
                double t13997 = 1.0/two_13;
                double t13998 = 1.0/pow(t13930,7.0/6.0);
                double t13999 = t13990*t13994;
                double t14000 = Cx+t13999;
                double t14001 = 1.0/t14000;
                double t14002 = sqrt(t13996);
                double t14007 = Cinf*Fg*Pg_1*t13998*t14001*t14002;
                double t14003 = exp(-t14007);
                double t14004 = t13932*t13933*(1.0/2.0);
                double t14005 = t14004+1.0/2.0;
                double t14006 = pow(t14005,5.0/3.0);
                double t14008 = -t14004+1.0/2.0;
                double t14009 = pow(t14008,5.0/3.0);
                double t14010 = t14006+t14009;
                double t14011 = 1.0/sqrt(t14010);
                double t14012 = Bg*t13991*t13984*(2.0/3.0);
                double t14013 = Cg_2*c*t13938*(1.0/3.0);
                double t14014 = t14012+t14013;
                double t14015 = t13990*t14014;
                double t14016 = Bg*c*t13950*t13984*1.0E4;
                double t14017 = Cg_4*t13991*t13984*(2.0/3.0);
                double t14018 = Cg_3*c*t13938*(1.0/3.0);
                double t14019 = t14016+t14017+t14018;
                double t14020 = 1.0/(t13989*t13989);
                double t14021 = t14015-t13994*t14020*t14019;
                double t14022 = t13932*(1.0/2.0);
                double t14023 = t13950*t13933*(1.0/2.0);
                double t14024 = t14022+t14023;
                v_rho_b[Q] += scale * -t13930*(heaviside(-t13935+1.0)*(t13947+t13948+t13949+t13958-t13941*t13946*(t13947+t13948+t13949+t13958-EcFhd_1*t13932*(1.0/3.0)-EcFhd_3*c*t13938*(1.0/3.0)-EcFhd_4*c*t13938*(1.0/3.0)-EcFhd_3*c*t13936*t13938*(1.0/3.0))+t13941*t13964*t13976)-t13982*(t13941*t13946*(EcFld_1*1.0/(t13967*t13967)*(EcFld_3*c*t13938*(1.0/3.0)+EcFld_2*c*t13938*t13959*(1.0/6.0))-EcPld_1*t13973*t13974)+EcPld_1*t13973*t13974+t13941*t13981*t13964)+c*t13938*t13977*(t13979-t13941*t13981*t13946)*(1.0/3.0)-c*t13938*t13977*(EcPhd_2+t13937+t13955+t13957+t13941*t13946*t13976)*(1.0/3.0))+heaviside(-c*t13931+1.0)*(EcPhd_2+t13937+t13955+t13957+t13941*t13946*(EcFhd_2-EcPhd_2+t13953+t13954-t13937+t13956-EcPhd_4*c*t13931-EcPhd_3*c*t13931*t13936))+t13982*(t13979+t13941*t13946*(t13983-t13979))-1.0/pow(t13930,7.0/3.0)*t13996*t13997*t14000*t14011*t14003*(4.0/3.0)-t13938*t13996*t13997*t14003*t14021*1.0/sqrt(t14006+pow(t13932*t13933*(-1.0/2.0)+1.0/2.0,5.0/3.0))+t13938*t13996*t13997*t14000*1.0/pow(t14010,3.0/2.0)*t14003*(pow(t14005,2.0/3.0)*t14024*(5.0/3.0)-t14024*pow(t14008,2.0/3.0)*(5.0/3.0))*(1.0/2.0)+t13938*t13996*t13997*t14000*t14011*t14003*(Cinf*Fg*Pg_1*1.0/pow(t13930,1.3E1/6.0)*t14001*t14002*(7.0/6.0)-Cinf*Fg*Pg_1*t13998*1.0/(t14000*t14000)*t14002*t14021);
            }
            
            // v_gamma_aa
            if (deriv >= 1) {
                double t14026 = rho_a+rho_b;
                double t14027 = c*c;
                double t14028 = 1.0/pow(t14026,2.0/3.0);
                double t14029 = 1.0/pow(t14026,1.0/3.0);
                double t14030 = 1.0/t14026;
                double t14031 = rho_a-rho_b;
                double t14032 = Bg*t14027*t14028;
                double t14033 = Cg_2*c*t14029;
                double t14034 = Cg_1+t14032+t14033;
                double t14035 = Bg*c*t14030*t14027*1.0E4;
                double t14036 = Cg_4*t14027*t14028;
                double t14037 = Cg_3*c*t14029;
                double t14038 = t14035+t14036+t14037+1.0;
                double t14039 = 1.0/t14038;
                double t14040 = t14034*t14039;
                double t14041 = Cx+t14040;
                double t14042 = 1.0/two_13;
                double t14043 = 1.0/pow(t14026,7.0/6.0);
                double t14044 = 1.0/t14041;
                double t14045 = gamma_ab*2.0;
                double t14046 = gamma_aa+gamma_bb+t14045;
                double t14047 = sqrt(t14046);
                double t14048 = exp(-Cinf*Fg*Pg_1*t14043*t14044*t14047);
                double t14049 = t14030*t14031*(1.0/2.0);
                double t14050 = t14049+1.0/2.0;
                double t14051 = pow(t14050,5.0/3.0);
                v_gamma_aa[Q] += scale * t14041*t14042*1.0/pow(t14026,4.0/3.0)*t14048*1.0/sqrt(t14051+pow(t14030*t14031*(-1.0/2.0)+1.0/2.0,5.0/3.0))-Cinf*Fg*Pg_1*t14042*1.0/pow(t14026,5.0/2.0)*t14047*t14048*1.0/sqrt(t14051+pow(-t14049+1.0/2.0,5.0/3.0))*(1.0/2.0);
            }
            
            // v_gamma_ab
            if (deriv >= 1) {
                double t14053 = rho_a+rho_b;
                double t14054 = c*c;
                double t14055 = 1.0/pow(t14053,2.0/3.0);
                double t14056 = 1.0/pow(t14053,1.0/3.0);
                double t14057 = 1.0/t14053;
                double t14058 = rho_a-rho_b;
                double t14059 = Bg*t14054*t14055;
                double t14060 = Cg_2*c*t14056;
                double t14061 = Cg_1+t14060+t14059;
                double t14062 = Bg*c*t14054*t14057*1.0E4;
                double t14063 = Cg_4*t14054*t14055;
                double t14064 = Cg_3*c*t14056;
                double t14065 = t14062+t14063+t14064+1.0;
                double t14066 = 1.0/t14065;
                double t14067 = t14061*t14066;
                double t14068 = Cx+t14067;
                double t14069 = 1.0/two_13;
                double t14070 = 1.0/pow(t14053,7.0/6.0);
                double t14071 = 1.0/t14068;
                double t14072 = gamma_ab*2.0;
                double t14073 = gamma_aa+gamma_bb+t14072;
                double t14074 = sqrt(t14073);
                double t14075 = exp(-Cinf*Fg*Pg_1*t14070*t14071*t14074);
                double t14076 = t14057*t14058*(1.0/2.0);
                double t14077 = t14076+1.0/2.0;
                double t14078 = pow(t14077,5.0/3.0);
                v_gamma_ab[Q] += scale * 1.0/pow(t14053,4.0/3.0)*t14075*t14068*t14069*1.0/sqrt(t14078+pow(t14057*t14058*(-1.0/2.0)+1.0/2.0,5.0/3.0))*2.0-Cinf*Fg*Pg_1*1.0/pow(t14053,5.0/2.0)*t14074*t14075*t14069*1.0/sqrt(t14078+pow(-t14076+1.0/2.0,5.0/3.0));
            }
            
            // v_gamma_bb
            if (deriv >= 1) {
                double t14080 = rho_a+rho_b;
                double t14081 = c*c;
                double t14082 = 1.0/pow(t14080,2.0/3.0);
                double t14083 = 1.0/pow(t14080,1.0/3.0);
                double t14084 = 1.0/t14080;
                double t14085 = rho_a-rho_b;
                double t14086 = Bg*t14081*t14082;
                double t14087 = Cg_2*c*t14083;
                double t14088 = Cg_1+t14086+t14087;
                double t14089 = Bg*c*t14081*t14084*1.0E4;
                double t14090 = Cg_4*t14081*t14082;
                double t14091 = Cg_3*c*t14083;
                double t14092 = t14090+t14091+t14089+1.0;
                double t14093 = 1.0/t14092;
                double t14094 = t14093*t14088;
                double t14095 = Cx+t14094;
                double t14096 = 1.0/two_13;
                double t14097 = 1.0/pow(t14080,7.0/6.0);
                double t14098 = 1.0/t14095;
                double t14099 = gamma_ab*2.0;
                double t14100 = gamma_aa+gamma_bb+t14099;
                double t14101 = sqrt(t14100);
                double t14102 = exp(-Cinf*Fg*Pg_1*t14101*t14097*t14098);
                double t14103 = t14084*t14085*(1.0/2.0);
                double t14104 = t14103+1.0/2.0;
                double t14105 = pow(t14104,5.0/3.0);
                v_gamma_bb[Q] += scale * t14102*1.0/pow(t14080,4.0/3.0)*t14095*t14096*1.0/sqrt(t14105+pow(t14084*t14085*(-1.0/2.0)+1.0/2.0,5.0/3.0))-Cinf*Fg*Pg_1*t14101*t14102*1.0/pow(t14080,5.0/2.0)*t14096*1.0/sqrt(t14105+pow(-t14103+1.0/2.0,5.0/3.0))*(1.0/2.0);
            }
            
            // v_rho_a_rho_a
            if (deriv >= 2) {
                double t14109 = rho_a+rho_b;
                double t14110 = 1.0/pow(t14109,4.0/3.0);
                double t14111 = 1.0/pow(t14109,1.0/3.0);
                double t14112 = c*t14111;
                double t14119 = 1.0/sqrt(t14112);
                double t14121 = EcPld_3*c*t14110*(1.0/3.0);
                double t14122 = EcPld_2*c*t14110*t14119*(1.0/6.0);
                double t14113 = t14121+t14122;
                double t14114 = 1.0/t14109;
                double t14115 = rho_a-rho_b;
                double t14116 = t14114*t14115;
                double t14117 = 1.0/(t14109*t14109);
                double t14154 = t14115*t14117;
                double t14118 = t14114-t14154;
                double t14120 = sqrt(t14112);
                double t14123 = EcPld_2*t14120;
                double t14124 = EcPld_3*c*t14111;
                double t14125 = t14123+t14124+1.0;
                double t14126 = two_13*2.0;
                double t14127 = t14126-2.0;
                double t14128 = 1.0/t14127;
                double t14129 = t14116+1.0;
                double t14130 = -t14116+1.0;
                double t14131 = EcFld_3*c*t14110*(1.0/3.0);
                double t14132 = EcFld_2*c*t14110*t14119*(1.0/6.0);
                double t14133 = t14131+t14132;
                double t14134 = EcFld_2*t14120;
                double t14135 = EcFld_3*c*t14111;
                double t14136 = t14134+t14135+1.0;
                double t14137 = t14113*t14113;
                double t14138 = 1.0/(t14125*t14125*t14125);
                double t14139 = EcPld_1*t14137*t14138*2.0;
                double t14140 = 1.0/pow(t14109,7.0/3.0);
                double t14141 = 1.0/(t14136*t14136);
                double t14142 = c*c;
                double t14143 = 1.0/pow(t14109,8.0/3.0);
                double t14144 = 1.0/pow(t14112,3.0/2.0);
                double t14145 = 1.0/(t14125*t14125);
                double t14146 = EcPld_3*c*t14140*(4.0/9.0);
                double t14147 = EcPld_2*c*t14140*t14119*(2.0/9.0);
                double t14148 = t14146+t14147-EcPld_2*t14142*t14143*t14144*(1.0/3.6E1);
                double t14149 = pow(t14129,1.0/3.0);
                double t14150 = pow(t14130,1.0/3.0);
                double t14151 = t14117*2.0;
                double t14152 = 1.0/(t14109*t14109*t14109);
                double t14156 = t14115*t14152*2.0;
                double t14153 = t14151-t14156;
                double t14155 = t14118*t14118;
                double t14157 = t14150*t14153*(4.0/3.0);
                double t14158 = 1.0/pow(t14129,2.0/3.0);
                double t14159 = t14155*t14158*(4.0/9.0);
                double t14160 = 1.0/pow(t14130,2.0/3.0);
                double t14161 = t14160*t14155*(4.0/9.0);
                double t14162 = t14161+t14157+t14159-t14153*t14149*(4.0/3.0);
                double t14163 = log(t14112);
                double t14164 = pow(t14129,4.0/3.0);
                double t14165 = pow(t14130,4.0/3.0);
                double t14166 = t14164+t14165-2.0;
                double t14167 = EcPhd_1*t14117*(1.0/3.0);
                double t14168 = EcPhd_3*c*t14140*(5.0/9.0);
                double t14169 = EcPhd_4*c*t14140*(4.0/9.0);
                double t14170 = t14150*t14118*(4.0/3.0);
                double t14171 = EcPhd_3*c*t14140*t14163*(4.0/9.0);
                double t14172 = t14112-1.0;
                double t14173 = 1.0/t14125;
                double t14174 = EcPld_1*t14173;
                double t14175 = 1.0/t14136;
                double t14195 = EcFld_1*t14175;
                double t14176 = t14174-t14195;
                double t14177 = EcFhd_1*t14163;
                double t14178 = EcPhd_1*t14163;
                double t14179 = EcFhd_4*c*t14111;
                double t14180 = EcFhd_3*c*t14111*t14163;
                double t14181 = dirac(t14172);
                double t14182 = EcFhd_1*t14114*(1.0/3.0);
                double t14183 = EcPhd_1*t14114*(1.0/3.0);
                double t14184 = EcFhd_3*c*t14110*(1.0/3.0);
                double t14185 = EcFhd_4*c*t14110*(1.0/3.0);
                double t14186 = EcPhd_3*c*t14110*(1.0/3.0);
                double t14187 = EcPhd_4*c*t14110*(1.0/3.0);
                double t14188 = EcFhd_3*c*t14110*t14163*(1.0/3.0);
                double t14189 = EcPhd_4*c*t14111;
                double t14190 = EcPhd_3*c*t14111*t14163;
                double t14194 = t14118*t14149*(4.0/3.0);
                double t14191 = t14170-t14194;
                double t14192 = EcFld_1*t14141*t14133;
                double t14196 = EcPld_1*t14113*t14145;
                double t14193 = t14192-t14196;
                double t14212 = t14128*t14166*t14176;
                double t14197 = -t14212+t14174;
                double t14198 = dirac(t14172,1.0);
                double t14199 = EcFhd_2-EcPhd_2+t14180-t14190+t14177-t14178+t14179-t14189;
                double t14200 = EcPld_1*t14145*t14148;
                double t14201 = t14128*t14166*t14199;
                double t14202 = EcPhd_2+t14201+t14190+t14178+t14189;
                double t14204 = EcPhd_3*c*t14110*t14163*(1.0/3.0);
                double t14203 = -t14204+t14182-t14183+t14184+t14185-t14186-t14187+t14188;
                double t14205 = -t14112+1.0;
                double t14206 = heaviside(t14205);
                double t14207 = t14203*t14128*t14166;
                double t14208 = t14128*t14191*t14199;
                double t14209 = t14204+t14207+t14208+t14183+t14186+t14187;
                double t14210 = heaviside(t14172);
                double t14211 = t14128*t14166*t14193;
                double t14213 = 1.0/pow(t14109,2.0/3.0);
                double t14214 = gamma_ab*2.0;
                double t14215 = gamma_aa+gamma_bb+t14214;
                double t14216 = Bg*c*t14114*t14142*1.0E4;
                double t14217 = Cg_4*t14213*t14142;
                double t14218 = Cg_3*c*t14111;
                double t14219 = t14216+t14217+t14218+1.0;
                double t14220 = 1.0/t14219;
                double t14221 = 1.0/pow(t14109,5.0/3.0);
                double t14222 = Bg*t14213*t14142;
                double t14223 = Cg_2*c*t14111;
                double t14224 = Cg_1+t14222+t14223;
                double t14225 = 1.0/(t14219*t14219);
                double t14226 = Bg*c*t14142*t14117*1.0E4;
                double t14227 = Cg_4*t14221*t14142*(2.0/3.0);
                double t14228 = Cg_3*c*t14110*(1.0/3.0);
                double t14229 = t14226+t14227+t14228;
                double t14230 = 1.0/two_13;
                double t14231 = 1.0/pow(t14109,7.0/6.0);
                double t14232 = t14220*t14224;
                double t14233 = Cx+t14232;
                double t14234 = 1.0/t14233;
                double t14235 = sqrt(t14215);
                double t14243 = Cinf*Fg*Pg_1*t14231*t14234*t14235;
                double t14236 = exp(-t14243);
                double t14237 = t14114*t14115*(1.0/2.0);
                double t14238 = t14237+1.0/2.0;
                double t14239 = pow(t14238,5.0/3.0);
                double t14240 = Bg*t14221*t14142*(2.0/3.0);
                double t14241 = Cg_2*c*t14110*(1.0/3.0);
                double t14242 = t14240+t14241;
                double t14244 = -t14237+1.0/2.0;
                double t14245 = pow(t14244,5.0/3.0);
                double t14246 = t14245+t14239;
                double t14247 = 1.0/sqrt(t14246);
                double t14248 = t14114*(1.0/2.0);
                double t14254 = t14115*t14117*(1.0/2.0);
                double t14249 = -t14254+t14248;
                double t14256 = pow(t14244,2.0/3.0);
                double t14257 = pow(t14238,2.0/3.0);
                double t14276 = t14256*t14249*(5.0/3.0);
                double t14277 = t14257*t14249*(5.0/3.0);
                double t14250 = t14276-t14277;
                double t14251 = t14220*t14242;
                double t14253 = t14224*t14225*t14229;
                double t14252 = t14251-t14253;
                double t14255 = t14249*t14249;
                double t14258 = t14117-t14115*t14152;
                double t14259 = 1.0/(t14233*t14233);
                double t14260 = Bg*t14142*t14143*(1.0E1/9.0);
                double t14261 = Cg_2*c*t14140*(4.0/9.0);
                double t14262 = t14260+t14261;
                double t14263 = t14220*t14262;
                double t14264 = Bg*c*t14142*t14152*2.0E4;
                double t14265 = Cg_4*t14142*t14143*(1.0E1/9.0);
                double t14266 = Cg_3*c*t14140*(4.0/9.0);
                double t14267 = t14264+t14265+t14266;
                double t14268 = t14229*t14229;
                double t14269 = 1.0/(t14219*t14219*t14219);
                double t14270 = t14224*t14268*t14269*2.0;
                double t14271 = t14270+t14263-t14242*t14225*t14229*2.0-t14224*t14225*t14267;
                double t14272 = 1.0/pow(t14109,1.3E1/6.0);
                double t14273 = Cinf*Fg*Pg_1*t14234*t14235*t14272*(7.0/6.0);
                double t14278 = Cinf*Fg*Pg_1*t14231*t14252*t14235*t14259;
                double t14274 = t14273-t14278;
                double t14275 = 1.0/pow(t14246,3.0/2.0);
                v_rho_a_rho_a[Q] += scale * t14210*(t14211+t14196+t14128*(t14170-t14194)*(t14174-t14195))*2.0-t14206*t14209*2.0-t14109*(t14210*(t14200-t14139-t14128*t14166*(t14200-t14139+EcFld_1*(t14133*t14133)*1.0/(t14136*t14136*t14136)*2.0-EcFld_1*t14141*(EcFld_3*c*t14140*(4.0/9.0)-EcFld_2*t14142*t14143*t14144*(1.0/3.6E1)+EcFld_2*c*t14140*t14119*(2.0/9.0)))+t14162*t14128*t14176+t14128*t14191*t14193*2.0)-t14206*(t14171+t14167+t14168+t14169-t14128*t14166*(t14171+t14167+t14168+t14169-EcFhd_1*t14117*(1.0/3.0)-EcFhd_3*c*t14140*(5.0/9.0)-EcFhd_4*c*t14140*(4.0/9.0)-EcFhd_3*c*t14140*t14163*(4.0/9.0))+t14203*t14128*t14191*2.0+t14162*t14128*t14199)+c*t14202*t14140*t14181*(4.0/9.0)+c*t14110*t14181*t14209*(2.0/3.0)-c*t14140*t14181*t14197*(4.0/9.0)+t14202*t14142*t14143*t14198*(1.0/9.0)-t14142*t14143*t14197*t14198*(1.0/9.0)+c*t14110*t14181*(t14211+t14196+t14128*t14191*t14176)*(2.0/3.0))+c*t14110*t14202*t14181*(2.0/3.0)-c*t14110*t14181*t14197*(2.0/3.0)+t14140*t14230*t14215*t14252*t14236*t14247*(8.0/3.0)+t14230*t14215*t14233*1.0/pow(t14109,1.0E1/3.0)*t14236*t14247*(2.8E1/9.0)+t14110*t14230*t14215*t14271*t14236*1.0/sqrt(t14239+pow(t14114*t14115*(-1.0/2.0)+1.0/2.0,5.0/3.0))+t14110*t14230*(t14250*t14250)*t14215*t14233*t14236*1.0/pow(t14246,5.0/2.0)*(3.0/4.0)-t14110*t14230*t14215*t14233*t14236*t14247*(Cinf*Fg*Pg_1*t14234*1.0/pow(t14109,1.9E1/6.0)*t14235*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t14231*t14235*t14271*t14259-Cinf*Fg*Pg_1*t14252*t14235*t14272*t14259*(7.0/3.0)+Cinf*Fg*Pg_1*t14231*1.0/(t14233*t14233*t14233)*(t14252*t14252)*t14235*2.0)-t14110*t14230*t14215*t14233*t14236*t14275*(t14256*t14258*(5.0/3.0)-t14257*t14258*(5.0/3.0)+1.0/pow(t14244,1.0/3.0)*t14255*(1.0E1/9.0)+t14255*1.0/pow(t14238,1.0/3.0)*(1.0E1/9.0))*(1.0/2.0)-t14110*t14230*t14250*t14215*t14252*t14236*t14275-t14140*t14230*t14250*t14215*t14233*t14236*t14275*(4.0/3.0)-t14110*t14230*t14215*t14252*t14236*t14247*t14274*2.0-t14140*t14230*t14215*t14233*t14236*t14247*t14274*(8.0/3.0)+t14110*t14230*t14215*t14233*t14236*t14247*(t14274*t14274)+t14110*t14230*t14250*t14215*t14233*t14236*t14274*t14275;
            }
            
            // v_rho_a_rho_b
            if (deriv >= 2) {
                double t14280 = rho_a+rho_b;
                double t14281 = rho_a-rho_b;
                double t14282 = 1.0/t14280;
                double t14283 = t14281*t14282;
                double t14284 = 1.0/(t14280*t14280*t14280);
                double t14285 = t14283+1.0;
                double t14286 = 1.0/(t14280*t14280);
                double t14287 = t14281*t14286;
                double t14288 = -t14283+1.0;
                double t14289 = t14282+t14287;
                double t14290 = t14282-t14287;
                double t14291 = 1.0/pow(t14280,1.0/3.0);
                double t14292 = c*t14291;
                double t14293 = log(t14292);
                double t14294 = 1.0/pow(t14280,7.0/3.0);
                double t14295 = two_13*2.0;
                double t14296 = t14295-2.0;
                double t14297 = 1.0/t14296;
                double t14298 = EcPhd_1*t14286*(1.0/3.0);
                double t14299 = EcPhd_3*c*t14294*(5.0/9.0);
                double t14300 = EcPhd_4*c*t14294*(4.0/9.0);
                double t14301 = pow(t14285,1.0/3.0);
                double t14302 = pow(t14288,1.0/3.0);
                double t14303 = 1.0/pow(t14280,4.0/3.0);
                double t14304 = EcFhd_1*t14282*(1.0/3.0);
                double t14305 = EcFhd_3*c*t14303*(1.0/3.0);
                double t14306 = EcFhd_4*c*t14303*(1.0/3.0);
                double t14307 = EcFhd_3*c*t14303*t14293*(1.0/3.0);
                double t14360 = EcPhd_1*t14282*(1.0/3.0);
                double t14361 = EcPhd_3*c*t14303*(1.0/3.0);
                double t14362 = EcPhd_4*c*t14303*(1.0/3.0);
                double t14363 = EcPhd_3*c*t14303*t14293*(1.0/3.0);
                double t14308 = t14304+t14305+t14306-t14360+t14307-t14361-t14362-t14363;
                double t14309 = EcPhd_3*c*t14293*t14294*(4.0/9.0);
                double t14313 = 1.0/sqrt(t14292);
                double t14315 = EcPld_3*c*t14303*(1.0/3.0);
                double t14316 = EcPld_2*c*t14303*t14313*(1.0/6.0);
                double t14310 = t14315+t14316;
                double t14311 = t14301*t14289*(4.0/3.0);
                double t14364 = t14302*t14289*(4.0/3.0);
                double t14312 = t14311-t14364;
                double t14314 = sqrt(t14292);
                double t14317 = EcPld_2*t14314;
                double t14318 = EcPld_3*c*t14291;
                double t14319 = t14317+t14318+1.0;
                double t14320 = t14301*t14290*(4.0/3.0);
                double t14368 = t14302*t14290*(4.0/3.0);
                double t14321 = t14320-t14368;
                double t14322 = EcFld_3*c*t14303*(1.0/3.0);
                double t14323 = EcFld_2*c*t14303*t14313*(1.0/6.0);
                double t14324 = t14322+t14323;
                double t14325 = EcFld_2*t14314;
                double t14326 = EcFld_3*c*t14291;
                double t14327 = t14325+t14326+1.0;
                double t14328 = 1.0/(t14327*t14327);
                double t14329 = EcFld_1*t14324*t14328;
                double t14330 = 1.0/(t14319*t14319);
                double t14370 = EcPld_1*t14310*t14330;
                double t14331 = -t14370+t14329;
                double t14332 = pow(t14285,4.0/3.0);
                double t14333 = pow(t14288,4.0/3.0);
                double t14334 = t14332+t14333-2.0;
                double t14335 = t14310*t14310;
                double t14336 = 1.0/(t14319*t14319*t14319);
                double t14337 = EcPld_1*t14335*t14336*2.0;
                double t14338 = c*c;
                double t14339 = 1.0/pow(t14280,8.0/3.0);
                double t14340 = 1.0/pow(t14292,3.0/2.0);
                double t14341 = EcPld_3*c*t14294*(4.0/9.0);
                double t14342 = EcPld_2*c*t14313*t14294*(2.0/9.0);
                double t14343 = t14341+t14342-EcPld_2*t14340*t14338*t14339*(1.0/3.6E1);
                double t14344 = t14302*t14281*t14284*(8.0/3.0);
                double t14345 = 1.0/pow(t14285,2.0/3.0);
                double t14346 = t14290*t14345*t14289*(4.0/9.0);
                double t14347 = 1.0/pow(t14288,2.0/3.0);
                double t14348 = t14290*t14347*t14289*(4.0/9.0);
                double t14349 = t14344+t14346+t14348-t14301*t14281*t14284*(8.0/3.0);
                double t14350 = t14292-1.0;
                double t14351 = 1.0/t14319;
                double t14352 = EcPld_1*t14351;
                double t14353 = 1.0/t14327;
                double t14371 = EcFld_1*t14353;
                double t14354 = t14352-t14371;
                double t14355 = EcFhd_1*t14293;
                double t14356 = EcPhd_1*t14293;
                double t14357 = EcFhd_4*c*t14291;
                double t14358 = EcFhd_3*c*t14291*t14293;
                double t14359 = dirac(t14350);
                double t14365 = EcPhd_4*c*t14291;
                double t14366 = EcPhd_3*c*t14291*t14293;
                double t14367 = t14334*t14308*t14297;
                double t14369 = EcFhd_2-EcPhd_2+t14355-t14356-t14365+t14357-t14366+t14358;
                double t14372 = t14331*t14334*t14297;
                double t14384 = t14334*t14354*t14297;
                double t14373 = t14352-t14384;
                double t14374 = dirac(t14350,1.0);
                double t14375 = t14334*t14297*t14369;
                double t14376 = EcPhd_2+t14356+t14365+t14366+t14375;
                double t14377 = -t14292+1.0;
                double t14378 = heaviside(t14377);
                double t14379 = t14312*t14297*t14369;
                double t14380 = t14360+t14361+t14362+t14363+t14367+t14379;
                double t14381 = t14360+t14361+t14362+t14363+t14367-t14321*t14297*t14369;
                double t14382 = heaviside(t14350);
                double t14383 = t14370+t14372-t14321*t14354*t14297;
                double t14385 = 1.0/pow(t14280,2.0/3.0);
                double t14386 = gamma_ab*2.0;
                double t14387 = gamma_aa+gamma_bb+t14386;
                double t14388 = Bg*c*t14282*t14338*1.0E4;
                double t14389 = Cg_4*t14338*t14385;
                double t14390 = Cg_3*c*t14291;
                double t14391 = t14390+t14388+t14389+1.0;
                double t14392 = 1.0/t14391;
                double t14393 = 1.0/pow(t14280,5.0/3.0);
                double t14394 = Bg*t14338*t14385;
                double t14395 = Cg_2*c*t14291;
                double t14396 = Cg_1+t14394+t14395;
                double t14397 = 1.0/(t14391*t14391);
                double t14398 = Bg*c*t14338*t14286*1.0E4;
                double t14399 = Cg_4*t14338*t14393*(2.0/3.0);
                double t14400 = Cg_3*c*t14303*(1.0/3.0);
                double t14401 = t14400+t14398+t14399;
                double t14402 = 1.0/two_13;
                double t14403 = 1.0/pow(t14280,7.0/6.0);
                double t14404 = t14392*t14396;
                double t14405 = Cx+t14404;
                double t14406 = 1.0/t14405;
                double t14407 = sqrt(t14387);
                double t14415 = Cinf*Fg*Pg_1*t14403*t14406*t14407;
                double t14408 = exp(-t14415);
                double t14409 = t14281*t14282*(1.0/2.0);
                double t14410 = t14409+1.0/2.0;
                double t14411 = pow(t14410,5.0/3.0);
                double t14412 = Bg*t14338*t14393*(2.0/3.0);
                double t14413 = Cg_2*c*t14303*(1.0/3.0);
                double t14414 = t14412+t14413;
                double t14416 = -t14409+1.0/2.0;
                double t14417 = pow(t14416,5.0/3.0);
                double t14418 = t14411+t14417;
                double t14419 = 1.0/sqrt(t14418);
                double t14420 = t14282*(1.0/2.0);
                double t14421 = t14281*t14286*(1.0/2.0);
                double t14422 = t14420+t14421;
                double t14423 = t14414*t14392;
                double t14425 = t14401*t14396*t14397;
                double t14424 = t14423-t14425;
                double t14426 = 1.0/(t14405*t14405);
                double t14427 = Bg*t14338*t14339*(1.0E1/9.0);
                double t14428 = Cg_2*c*t14294*(4.0/9.0);
                double t14429 = t14427+t14428;
                double t14430 = t14392*t14429;
                double t14431 = Bg*c*t14284*t14338*2.0E4;
                double t14432 = Cg_4*t14338*t14339*(1.0E1/9.0);
                double t14433 = Cg_3*c*t14294*(4.0/9.0);
                double t14434 = t14431+t14432+t14433;
                double t14435 = t14401*t14401;
                double t14436 = 1.0/(t14391*t14391*t14391);
                double t14437 = t14435*t14436*t14396*2.0;
                double t14438 = t14430+t14437-t14401*t14414*t14397*2.0-t14434*t14396*t14397;
                double t14439 = 1.0/pow(t14280,1.3E1/6.0);
                double t14440 = Cinf*Fg*Pg_1*t14406*t14407*t14439*(7.0/6.0);
                double t14450 = Cinf*Fg*Pg_1*t14403*t14424*t14407*t14426;
                double t14441 = t14440-t14450;
                double t14442 = 1.0/pow(t14418,3.0/2.0);
                double t14443 = pow(t14416,2.0/3.0);
                double t14444 = t14420-t14421;
                double t14445 = pow(t14410,2.0/3.0);
                double t14446 = t14443*t14444*(5.0/3.0);
                double t14451 = t14444*t14445*(5.0/3.0);
                double t14447 = -t14451+t14446;
                double t14448 = t14422*t14443*(5.0/3.0);
                double t14452 = t14422*t14445*(5.0/3.0);
                double t14449 = -t14452+t14448;
                v_rho_a_rho_b[Q] += scale * t14382*(t14370+t14372+t14312*t14297*(t14352-t14371))+t14382*t14383-t14380*t14378-t14381*t14378-t14280*(-t14382*(t14337-EcPld_1*t14330*t14343-t14312*t14331*t14297+t14321*t14331*t14297+t14354*t14349*t14297-t14334*t14297*(t14337-EcFld_1*(t14324*t14324)*1.0/(t14327*t14327*t14327)*2.0-EcPld_1*t14330*t14343+EcFld_1*t14328*(EcFld_3*c*t14294*(4.0/9.0)-EcFld_2*t14340*t14338*t14339*(1.0/3.6E1)+EcFld_2*c*t14313*t14294*(2.0/9.0))))-t14378*(t14300+t14309+t14298+t14299-t14334*t14297*(t14300+t14309+t14298+t14299-EcFhd_1*t14286*(1.0/3.0)-EcFhd_3*c*t14294*(5.0/9.0)-EcFhd_4*c*t14294*(4.0/9.0)-EcFhd_3*c*t14293*t14294*(4.0/9.0))+t14312*t14308*t14297-t14321*t14308*t14297-t14349*t14297*t14369)+c*t14303*t14380*t14359*(1.0/3.0)+c*t14303*t14381*t14359*(1.0/3.0)+c*t14303*t14383*t14359*(1.0/3.0)-c*t14373*t14294*t14359*(4.0/9.0)+c*t14294*t14376*t14359*(4.0/9.0)-t14373*t14338*t14374*t14339*(1.0/9.0)+t14338*t14374*t14339*t14376*(1.0/9.0)+c*t14303*t14359*(t14370+t14372+t14312*t14354*t14297)*(1.0/3.0))-c*t14303*t14373*t14359*(2.0/3.0)+c*t14303*t14376*t14359*(2.0/3.0)+t14402*t14424*t14408*t14419*t14294*t14387*(8.0/3.0)+t14402*t14405*1.0/pow(t14280,1.0E1/3.0)*t14408*t14419*t14387*(2.8E1/9.0)+t14303*t14402*t14408*t14438*t14387*1.0/sqrt(t14411+pow(t14281*t14282*(-1.0/2.0)+1.0/2.0,5.0/3.0))-t14303*t14402*t14405*t14408*t14419*t14387*(Cinf*Fg*Pg_1*1.0/pow(t14280,1.9E1/6.0)*t14406*t14407*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t14403*t14407*t14426*t14438-Cinf*Fg*Pg_1*t14424*t14407*t14426*t14439*(7.0/3.0)+Cinf*Fg*Pg_1*t14403*1.0/(t14405*t14405*t14405)*(t14424*t14424)*t14407*2.0)-t14303*t14402*t14441*t14424*t14408*t14419*t14387*2.0-t14303*t14402*t14424*t14442*t14408*t14447*t14387*(1.0/2.0)+t14303*t14402*t14424*t14442*t14408*t14449*t14387*(1.0/2.0)-t14402*t14405*t14441*t14408*t14419*t14294*t14387*(8.0/3.0)-t14402*t14405*t14442*t14408*t14294*t14447*t14387*(2.0/3.0)+t14402*t14405*t14442*t14408*t14294*t14449*t14387*(2.0/3.0)+t14303*t14402*t14405*t14442*t14408*t14387*(1.0/pow(t14410,1.0/3.0)*t14422*t14444*(1.0E1/9.0)+t14281*t14443*t14284*(5.0/3.0)-t14281*t14445*t14284*(5.0/3.0)+t14422*1.0/pow(t14416,1.0/3.0)*(t14420-t14281*t14286*(1.0/2.0))*(1.0E1/9.0))*(1.0/2.0)+t14303*t14402*t14405*(t14441*t14441)*t14408*t14419*t14387+t14303*t14402*t14405*t14441*t14442*t14408*t14447*t14387*(1.0/2.0)-t14303*t14402*t14405*t14441*t14442*t14408*t14449*t14387*(1.0/2.0)-t14303*t14402*t14405*t14408*1.0/pow(t14418,5.0/2.0)*t14447*t14449*t14387*(3.0/4.0);
            }
            
            // v_rho_b_rho_b
            if (deriv >= 2) {
                double t14454 = rho_a+rho_b;
                double t14455 = 1.0/pow(t14454,4.0/3.0);
                double t14456 = 1.0/pow(t14454,1.0/3.0);
                double t14457 = c*t14456;
                double t14465 = 1.0/sqrt(t14457);
                double t14467 = EcPld_3*c*t14455*(1.0/3.0);
                double t14468 = EcPld_2*c*t14455*t14465*(1.0/6.0);
                double t14458 = t14467+t14468;
                double t14459 = 1.0/t14454;
                double t14460 = rho_a-rho_b;
                double t14461 = t14460*t14459;
                double t14462 = 1.0/(t14454*t14454);
                double t14463 = t14460*t14462;
                double t14464 = t14463+t14459;
                double t14466 = sqrt(t14457);
                double t14469 = EcPld_2*t14466;
                double t14470 = EcPld_3*c*t14456;
                double t14471 = t14470+t14469+1.0;
                double t14472 = two_13*2.0;
                double t14473 = t14472-2.0;
                double t14474 = 1.0/t14473;
                double t14475 = t14461+1.0;
                double t14476 = -t14461+1.0;
                double t14477 = EcFld_3*c*t14455*(1.0/3.0);
                double t14478 = EcFld_2*c*t14455*t14465*(1.0/6.0);
                double t14479 = t14477+t14478;
                double t14480 = EcFld_2*t14466;
                double t14481 = EcFld_3*c*t14456;
                double t14482 = t14480+t14481+1.0;
                double t14483 = t14458*t14458;
                double t14484 = 1.0/(t14471*t14471*t14471);
                double t14485 = EcPld_1*t14483*t14484*2.0;
                double t14486 = 1.0/pow(t14454,7.0/3.0);
                double t14487 = 1.0/(t14482*t14482);
                double t14488 = c*c;
                double t14489 = 1.0/pow(t14454,8.0/3.0);
                double t14490 = 1.0/pow(t14457,3.0/2.0);
                double t14491 = 1.0/(t14471*t14471);
                double t14492 = EcPld_3*c*t14486*(4.0/9.0);
                double t14493 = EcPld_2*c*t14465*t14486*(2.0/9.0);
                double t14494 = t14492+t14493-EcPld_2*t14490*t14488*t14489*(1.0/3.6E1);
                double t14495 = pow(t14475,1.0/3.0);
                double t14496 = pow(t14476,1.0/3.0);
                double t14497 = t14462*2.0;
                double t14498 = 1.0/(t14454*t14454*t14454);
                double t14499 = t14460*t14498*2.0;
                double t14500 = t14497+t14499;
                double t14501 = t14464*t14464;
                double t14502 = t14500*t14495*(4.0/3.0);
                double t14503 = 1.0/pow(t14475,2.0/3.0);
                double t14504 = t14501*t14503*(4.0/9.0);
                double t14505 = 1.0/pow(t14476,2.0/3.0);
                double t14506 = t14501*t14505*(4.0/9.0);
                double t14507 = t14502+t14504+t14506-t14500*t14496*(4.0/3.0);
                double t14508 = log(t14457);
                double t14509 = pow(t14475,4.0/3.0);
                double t14510 = pow(t14476,4.0/3.0);
                double t14511 = t14510+t14509-2.0;
                double t14512 = EcPhd_1*t14462*(1.0/3.0);
                double t14513 = EcPhd_3*c*t14486*(5.0/9.0);
                double t14514 = EcPhd_4*c*t14486*(4.0/9.0);
                double t14515 = t14464*t14495*(4.0/3.0);
                double t14535 = t14464*t14496*(4.0/3.0);
                double t14516 = t14515-t14535;
                double t14517 = EcPhd_3*c*t14508*t14486*(4.0/9.0);
                double t14518 = t14457-1.0;
                double t14519 = 1.0/t14471;
                double t14520 = EcPld_1*t14519;
                double t14521 = 1.0/t14482;
                double t14540 = EcFld_1*t14521;
                double t14522 = t14520-t14540;
                double t14523 = EcFhd_1*t14508;
                double t14524 = EcPhd_1*t14508;
                double t14525 = EcFhd_4*c*t14456;
                double t14526 = EcFhd_3*c*t14508*t14456;
                double t14527 = dirac(t14518);
                double t14528 = EcFhd_1*t14459*(1.0/3.0);
                double t14529 = EcPhd_1*t14459*(1.0/3.0);
                double t14530 = EcFhd_3*c*t14455*(1.0/3.0);
                double t14531 = EcFhd_4*c*t14455*(1.0/3.0);
                double t14532 = EcPhd_3*c*t14455*(1.0/3.0);
                double t14533 = EcPhd_4*c*t14455*(1.0/3.0);
                double t14534 = EcFhd_3*c*t14508*t14455*(1.0/3.0);
                double t14536 = EcPhd_4*c*t14456;
                double t14537 = EcPhd_3*c*t14508*t14456;
                double t14538 = EcFld_1*t14487*t14479;
                double t14541 = EcPld_1*t14491*t14458;
                double t14539 = -t14541+t14538;
                double t14557 = t14511*t14522*t14474;
                double t14542 = t14520-t14557;
                double t14543 = dirac(t14518,1.0);
                double t14544 = EcFhd_2-EcPhd_2+t14523-t14524+t14525+t14526-t14536-t14537;
                double t14545 = EcPld_1*t14491*t14494;
                double t14546 = t14511*t14544*t14474;
                double t14547 = EcPhd_2+t14524+t14536+t14537+t14546;
                double t14549 = EcPhd_3*c*t14508*t14455*(1.0/3.0);
                double t14548 = t14530+t14531-t14532-t14533+t14534+t14528-t14529-t14549;
                double t14550 = -t14457+1.0;
                double t14551 = heaviside(t14550);
                double t14552 = t14511*t14474*t14548;
                double t14553 = t14516*t14544*t14474;
                double t14554 = t14532+t14533+t14552+t14553+t14529+t14549;
                double t14555 = heaviside(t14518);
                double t14556 = t14511*t14474*t14539;
                double t14558 = 1.0/pow(t14454,2.0/3.0);
                double t14559 = gamma_ab*2.0;
                double t14560 = gamma_aa+gamma_bb+t14559;
                double t14561 = Bg*c*t14459*t14488*1.0E4;
                double t14562 = Cg_4*t14558*t14488;
                double t14563 = Cg_3*c*t14456;
                double t14564 = t14561+t14562+t14563+1.0;
                double t14565 = 1.0/t14564;
                double t14566 = 1.0/pow(t14454,5.0/3.0);
                double t14567 = Bg*t14558*t14488;
                double t14568 = Cg_2*c*t14456;
                double t14569 = Cg_1+t14567+t14568;
                double t14570 = 1.0/(t14564*t14564);
                double t14571 = Bg*c*t14462*t14488*1.0E4;
                double t14572 = Cg_4*t14566*t14488*(2.0/3.0);
                double t14573 = Cg_3*c*t14455*(1.0/3.0);
                double t14574 = t14571+t14572+t14573;
                double t14575 = 1.0/two_13;
                double t14576 = 1.0/pow(t14454,7.0/6.0);
                double t14577 = t14565*t14569;
                double t14578 = Cx+t14577;
                double t14579 = 1.0/t14578;
                double t14580 = sqrt(t14560);
                double t14588 = Cinf*Fg*Pg_1*t14580*t14576*t14579;
                double t14581 = exp(-t14588);
                double t14582 = t14460*t14459*(1.0/2.0);
                double t14583 = t14582+1.0/2.0;
                double t14584 = pow(t14583,5.0/3.0);
                double t14585 = Bg*t14566*t14488*(2.0/3.0);
                double t14586 = Cg_2*c*t14455*(1.0/3.0);
                double t14587 = t14585+t14586;
                double t14589 = -t14582+1.0/2.0;
                double t14590 = pow(t14589,5.0/3.0);
                double t14591 = t14590+t14584;
                double t14592 = 1.0/sqrt(t14591);
                double t14593 = t14459*(1.0/2.0);
                double t14594 = t14460*t14462*(1.0/2.0);
                double t14595 = t14593+t14594;
                double t14601 = pow(t14589,2.0/3.0);
                double t14602 = pow(t14583,2.0/3.0);
                double t14622 = t14601*t14595*(5.0/3.0);
                double t14623 = t14602*t14595*(5.0/3.0);
                double t14596 = -t14622+t14623;
                double t14597 = t14565*t14587;
                double t14599 = t14570*t14574*t14569;
                double t14598 = t14597-t14599;
                double t14600 = t14595*t14595;
                double t14603 = t14460*t14498;
                double t14604 = t14603+t14462;
                double t14605 = 1.0/(t14578*t14578);
                double t14606 = Bg*t14488*t14489*(1.0E1/9.0);
                double t14607 = Cg_2*c*t14486*(4.0/9.0);
                double t14608 = t14606+t14607;
                double t14609 = t14608*t14565;
                double t14610 = Bg*c*t14488*t14498*2.0E4;
                double t14611 = Cg_4*t14488*t14489*(1.0E1/9.0);
                double t14612 = Cg_3*c*t14486*(4.0/9.0);
                double t14613 = t14610+t14611+t14612;
                double t14614 = t14574*t14574;
                double t14615 = 1.0/(t14564*t14564*t14564);
                double t14616 = t14614*t14615*t14569*2.0;
                double t14617 = t14616+t14609-t14613*t14570*t14569-t14570*t14574*t14587*2.0;
                double t14618 = 1.0/pow(t14454,1.3E1/6.0);
                double t14619 = Cinf*Fg*Pg_1*t14580*t14618*t14579*(7.0/6.0);
                double t14625 = Cinf*Fg*Pg_1*t14605*t14580*t14576*t14598;
                double t14620 = -t14625+t14619;
                double t14621 = 1.0/pow(t14591,3.0/2.0);
                double t14624 = t14622-t14623;
                v_rho_b_rho_b[Q] += scale * t14555*(t14541+t14556+t14516*t14474*(t14520-t14540))*2.0-t14551*t14554*2.0-t14454*(t14555*(t14545-t14485-t14511*t14474*(t14545-t14485+EcFld_1*1.0/(t14482*t14482*t14482)*(t14479*t14479)*2.0-EcFld_1*t14487*(EcFld_3*c*t14486*(4.0/9.0)-EcFld_2*t14490*t14488*t14489*(1.0/3.6E1)+EcFld_2*c*t14465*t14486*(2.0/9.0)))+t14522*t14507*t14474+t14516*t14474*t14539*2.0)-t14551*(t14512+t14513+t14514+t14517-t14511*t14474*(t14512+t14513+t14514+t14517-EcFhd_1*t14462*(1.0/3.0)-EcFhd_3*c*t14486*(5.0/9.0)-EcFhd_4*c*t14486*(4.0/9.0)-EcFhd_3*c*t14508*t14486*(4.0/9.0))+t14507*t14544*t14474+t14516*t14474*t14548*2.0)+c*t14455*t14527*t14554*(2.0/3.0)-c*t14542*t14527*t14486*(4.0/9.0)+c*t14527*t14547*t14486*(4.0/9.0)-t14542*t14543*t14488*t14489*(1.0/9.0)+t14543*t14547*t14488*t14489*(1.0/9.0)+c*t14455*t14527*(t14541+t14556+t14522*t14516*t14474)*(2.0/3.0))-c*t14542*t14455*t14527*(2.0/3.0)+c*t14455*t14527*t14547*(2.0/3.0)+t14560*t14581*t14592*t14575*t14486*t14598*(8.0/3.0)+t14560*1.0/pow(t14454,1.0E1/3.0)*t14581*t14592*t14575*t14578*(2.8E1/9.0)+t14560*t14455*t14581*t14617*t14575*1.0/sqrt(t14584+pow(t14460*t14459*(-1.0/2.0)+1.0/2.0,5.0/3.0))+t14560*t14455*t14581*1.0/pow(t14591,5.0/2.0)*t14575*t14578*(t14596*t14596)*(3.0/4.0)-t14560*t14455*t14581*t14592*t14575*t14578*(Cinf*Fg*Pg_1*1.0/pow(t14454,1.9E1/6.0)*t14580*t14579*(9.1E1/3.6E1)-Cinf*Fg*Pg_1*t14605*t14580*t14617*t14576-Cinf*Fg*Pg_1*t14605*t14580*t14618*t14598*(7.0/3.0)+Cinf*Fg*Pg_1*t14580*t14576*1.0/(t14578*t14578*t14578)*(t14598*t14598)*2.0)-t14621*t14560*t14455*t14581*t14575*t14578*(t14601*t14604*(-5.0/3.0)+t14602*t14604*(5.0/3.0)+t14600*1.0/pow(t14583,1.0/3.0)*(1.0E1/9.0)+t14600*1.0/pow(t14589,1.0/3.0)*(1.0E1/9.0))*(1.0/2.0)+t14621*t14560*t14624*t14455*t14581*t14575*t14598+t14621*t14560*t14624*t14581*t14575*t14486*t14578*(4.0/3.0)-t14620*t14560*t14455*t14581*t14592*t14575*t14598*2.0-t14620*t14560*t14581*t14592*t14575*t14486*t14578*(8.0/3.0)+(t14620*t14620)*t14560*t14455*t14581*t14592*t14575*t14578-t14620*t14621*t14560*t14624*t14455*t14581*t14575*t14578;
            }
            
            // v_gamma_aa_gamma_aa
            if (deriv >= 2) {
                double t14987 = rho_a+rho_b;
                double t14988 = c*c;
                double t14989 = 1.0/pow(t14987,2.0/3.0);
                double t14990 = 1.0/pow(t14987,1.0/3.0);
                double t14991 = 1.0/t14987;
                double t14992 = rho_a-rho_b;
                double t14993 = Bg*t14988*t14989;
                double t14994 = Cg_2*c*t14990;
                double t14995 = Cg_1+t14993+t14994;
                double t14996 = Bg*c*t14991*t14988*1.0E4;
                double t14997 = Cg_4*t14988*t14989;
                double t14998 = Cg_3*c*t14990;
                double t14999 = t14996+t14997+t14998+1.0;
                double t15000 = 1.0/t14999;
                double t15001 = t14995*t15000;
                double t15002 = Cx+t15001;
                double t15003 = 1.0/t15002;
                double t15004 = 1.0/two_13;
                double t15005 = 1.0/pow(t14987,7.0/6.0);
                double t15006 = gamma_ab*2.0;
                double t15007 = gamma_aa+gamma_bb+t15006;
                double t15008 = sqrt(t15007);
                double t15009 = exp(-Cinf*Fg*Pg_1*t15003*t15005*t15008);
                double t15010 = t14991*t14992*(1.0/2.0);
                double t15011 = t15010+1.0/2.0;
                double t15012 = pow(t15011,5.0/3.0);
                v_gamma_aa_gamma_aa[Q] += scale * Cinf*Fg*Pg_1*1.0/pow(t14987,5.0/2.0)*t15004*1.0/sqrt(t15007)*t15009*1.0/sqrt(t15012+pow(-t15010+1.0/2.0,5.0/3.0))*(-3.0/4.0)+(Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*1.0/pow(t14987,1.1E1/3.0)*t15003*t15004*t15009*1.0/sqrt(t15012+pow(t14991*t14992*(-1.0/2.0)+1.0/2.0,5.0/3.0))*(1.0/4.0);
            }
            
            // v_gamma_aa_gamma_ab
            if (deriv >= 2) {
                double t15014 = rho_a+rho_b;
                double t15015 = c*c;
                double t15016 = 1.0/pow(t15014,2.0/3.0);
                double t15017 = 1.0/pow(t15014,1.0/3.0);
                double t15018 = 1.0/t15014;
                double t15019 = rho_a-rho_b;
                double t15020 = Bg*t15015*t15016;
                double t15021 = Cg_2*c*t15017;
                double t15022 = Cg_1+t15020+t15021;
                double t15023 = Bg*c*t15015*t15018*1.0E4;
                double t15024 = Cg_4*t15015*t15016;
                double t15025 = Cg_3*c*t15017;
                double t15026 = t15023+t15024+t15025+1.0;
                double t15027 = 1.0/t15026;
                double t15028 = t15022*t15027;
                double t15029 = Cx+t15028;
                double t15030 = 1.0/t15029;
                double t15031 = 1.0/two_13;
                double t15032 = 1.0/pow(t15014,7.0/6.0);
                double t15033 = gamma_ab*2.0;
                double t15034 = gamma_aa+gamma_bb+t15033;
                double t15035 = sqrt(t15034);
                double t15036 = exp(-Cinf*Fg*Pg_1*t15030*t15032*t15035);
                double t15037 = t15018*t15019*(1.0/2.0);
                double t15038 = t15037+1.0/2.0;
                double t15039 = pow(t15038,5.0/3.0);
                v_gamma_aa_gamma_ab[Q] += scale * Cinf*Fg*Pg_1*t15031*1.0/pow(t15014,5.0/2.0)*1.0/sqrt(t15034)*t15036*1.0/sqrt(t15039+pow(-t15037+1.0/2.0,5.0/3.0))*(-3.0/2.0)+(Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t15030*t15031*1.0/pow(t15014,1.1E1/3.0)*t15036*1.0/sqrt(t15039+pow(t15018*t15019*(-1.0/2.0)+1.0/2.0,5.0/3.0))*(1.0/2.0);
            }
            
            // v_gamma_aa_gamma_bb
            if (deriv >= 2) {
                double t15041 = rho_a+rho_b;
                double t15042 = c*c;
                double t15043 = 1.0/pow(t15041,2.0/3.0);
                double t15044 = 1.0/pow(t15041,1.0/3.0);
                double t15045 = 1.0/t15041;
                double t15046 = rho_a-rho_b;
                double t15047 = Bg*t15042*t15043;
                double t15048 = Cg_2*c*t15044;
                double t15049 = Cg_1+t15047+t15048;
                double t15050 = Bg*c*t15042*t15045*1.0E4;
                double t15051 = Cg_4*t15042*t15043;
                double t15052 = Cg_3*c*t15044;
                double t15053 = t15050+t15051+t15052+1.0;
                double t15054 = 1.0/t15053;
                double t15055 = t15054*t15049;
                double t15056 = Cx+t15055;
                double t15057 = 1.0/t15056;
                double t15058 = 1.0/two_13;
                double t15059 = 1.0/pow(t15041,7.0/6.0);
                double t15060 = gamma_ab*2.0;
                double t15061 = gamma_aa+gamma_bb+t15060;
                double t15062 = sqrt(t15061);
                double t15063 = exp(-Cinf*Fg*Pg_1*t15062*t15057*t15059);
                double t15064 = t15045*t15046*(1.0/2.0);
                double t15065 = t15064+1.0/2.0;
                double t15066 = pow(t15065,5.0/3.0);
                v_gamma_aa_gamma_bb[Q] += scale * Cinf*Fg*Pg_1*1.0/pow(t15041,5.0/2.0)*1.0/sqrt(t15061)*t15063*t15058*1.0/sqrt(t15066+pow(-t15064+1.0/2.0,5.0/3.0))*(-3.0/4.0)+(Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*1.0/pow(t15041,1.1E1/3.0)*t15063*t15057*t15058*1.0/sqrt(t15066+pow(t15045*t15046*(-1.0/2.0)+1.0/2.0,5.0/3.0))*(1.0/4.0);
            }
            
            // v_gamma_ab_gamma_ab
            if (deriv >= 2) {
                double t15068 = rho_a+rho_b;
                double t15069 = c*c;
                double t15070 = 1.0/pow(t15068,2.0/3.0);
                double t15071 = 1.0/pow(t15068,1.0/3.0);
                double t15072 = 1.0/t15068;
                double t15073 = rho_a-rho_b;
                double t15074 = Bg*t15070*t15069;
                double t15075 = Cg_2*c*t15071;
                double t15076 = Cg_1+t15074+t15075;
                double t15077 = Bg*c*t15072*t15069*1.0E4;
                double t15078 = Cg_4*t15070*t15069;
                double t15079 = Cg_3*c*t15071;
                double t15080 = t15077+t15078+t15079+1.0;
                double t15081 = 1.0/t15080;
                double t15082 = t15081*t15076;
                double t15083 = Cx+t15082;
                double t15084 = 1.0/t15083;
                double t15085 = 1.0/two_13;
                double t15086 = 1.0/pow(t15068,7.0/6.0);
                double t15087 = gamma_ab*2.0;
                double t15088 = gamma_aa+gamma_bb+t15087;
                double t15089 = sqrt(t15088);
                double t15090 = exp(-Cinf*Fg*Pg_1*t15084*t15086*t15089);
                double t15091 = t15072*t15073*(1.0/2.0);
                double t15092 = t15091+1.0/2.0;
                double t15093 = pow(t15092,5.0/3.0);
                v_gamma_ab_gamma_ab[Q] += scale * Cinf*Fg*Pg_1*t15090*t15085*1.0/pow(t15068,5.0/2.0)*1.0/sqrt(t15088)*1.0/sqrt(t15093+pow(-t15091+1.0/2.0,5.0/3.0))*-3.0+(Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t15090*t15084*t15085*1.0/pow(t15068,1.1E1/3.0)*1.0/sqrt(t15093+pow(t15072*t15073*(-1.0/2.0)+1.0/2.0,5.0/3.0));
            }
            
            // v_gamma_ab_gamma_bb
            if (deriv >= 2) {
                double t15095 = rho_a+rho_b;
                double t15096 = c*c;
                double t15097 = 1.0/pow(t15095,2.0/3.0);
                double t15098 = 1.0/pow(t15095,1.0/3.0);
                double t15099 = 1.0/t15095;
                double t15100 = rho_a-rho_b;
                double t15101 = Bg*t15096*t15097;
                double t15102 = Cg_2*c*t15098;
                double t15103 = Cg_1+t15101+t15102;
                double t15104 = Bg*c*t15096*t15099*1.0E4;
                double t15105 = Cg_4*t15096*t15097;
                double t15106 = Cg_3*c*t15098;
                double t15107 = t15104+t15105+t15106+1.0;
                double t15108 = 1.0/t15107;
                double t15109 = t15103*t15108;
                double t15110 = Cx+t15109;
                double t15111 = 1.0/t15110;
                double t15112 = 1.0/two_13;
                double t15113 = 1.0/pow(t15095,7.0/6.0);
                double t15114 = gamma_ab*2.0;
                double t15115 = gamma_aa+gamma_bb+t15114;
                double t15116 = sqrt(t15115);
                double t15117 = exp(-Cinf*Fg*Pg_1*t15111*t15113*t15116);
                double t15118 = t15100*t15099*(1.0/2.0);
                double t15119 = t15118+1.0/2.0;
                double t15120 = pow(t15119,5.0/3.0);
                v_gamma_ab_gamma_bb[Q] += scale * Cinf*Fg*Pg_1*t15112*1.0/sqrt(t15115)*t15117*1.0/pow(t15095,5.0/2.0)*1.0/sqrt(t15120+pow(-t15118+1.0/2.0,5.0/3.0))*(-3.0/2.0)+(Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*t15111*t15112*t15117*1.0/pow(t15095,1.1E1/3.0)*1.0/sqrt(t15120+pow(t15100*t15099*(-1.0/2.0)+1.0/2.0,5.0/3.0))*(1.0/2.0);
            }
            
            // v_gamma_bb_gamma_bb
            if (deriv >= 2) {
                double t15122 = rho_a+rho_b;
                double t15123 = c*c;
                double t15124 = 1.0/pow(t15122,2.0/3.0);
                double t15125 = 1.0/pow(t15122,1.0/3.0);
                double t15126 = 1.0/t15122;
                double t15127 = rho_a-rho_b;
                double t15128 = Bg*t15123*t15124;
                double t15129 = Cg_2*c*t15125;
                double t15130 = Cg_1+t15128+t15129;
                double t15131 = Bg*c*t15123*t15126*1.0E4;
                double t15132 = Cg_4*t15123*t15124;
                double t15133 = Cg_3*c*t15125;
                double t15134 = t15131+t15132+t15133+1.0;
                double t15135 = 1.0/t15134;
                double t15136 = t15130*t15135;
                double t15137 = Cx+t15136;
                double t15138 = 1.0/t15137;
                double t15139 = 1.0/two_13;
                double t15140 = 1.0/pow(t15122,7.0/6.0);
                double t15141 = gamma_ab*2.0;
                double t15142 = gamma_aa+gamma_bb+t15141;
                double t15143 = sqrt(t15142);
                double t15144 = exp(-Cinf*Fg*Pg_1*t15140*t15143*t15138);
                double t15145 = t15126*t15127*(1.0/2.0);
                double t15146 = t15145+1.0/2.0;
                double t15147 = pow(t15146,5.0/3.0);
                v_gamma_bb_gamma_bb[Q] += scale * Cinf*Fg*Pg_1*1.0/pow(t15122,5.0/2.0)*1.0/sqrt(t15142)*t15144*t15139*1.0/sqrt(t15147+pow(-t15145+1.0/2.0,5.0/3.0))*(-3.0/4.0)+(Cinf*Cinf)*(Fg*Fg)*(Pg_1*Pg_1)*1.0/pow(t15122,1.1E1/3.0)*t15144*t15138*t15139*1.0/sqrt(t15147+pow(t15126*t15127*(-1.0/2.0)+1.0/2.0,5.0/3.0))*(1.0/4.0);
            }
            
            // v_rho_a_gamma_aa
            if (deriv >= 2) {
                double t14627 = rho_a+rho_b;
                double t14628 = c*c;
                double t14629 = 1.0/pow(t14627,2.0/3.0);
                double t14630 = 1.0/pow(t14627,1.0/3.0);
                double t14631 = 1.0/t14627;
                double t14632 = rho_a-rho_b;
                double t14633 = 1.0/pow(t14627,4.0/3.0);
                double t14634 = Bg*c*t14631*t14628*1.0E4;
                double t14635 = Cg_4*t14628*t14629;
                double t14636 = Cg_3*c*t14630;
                double t14637 = t14634+t14635+t14636+1.0;
                double t14638 = 1.0/t14637;
                double t14639 = 1.0/pow(t14627,5.0/3.0);
                double t14640 = Bg*t14628*t14629;
                double t14641 = Cg_2*c*t14630;
                double t14642 = Cg_1+t14640+t14641;
                double t14643 = 1.0/two_13;
                double t14644 = 1.0/pow(t14627,7.0/6.0);
                double t14645 = t14642*t14638;
                double t14646 = Cx+t14645;
                double t14647 = 1.0/t14646;
                double t14648 = gamma_ab*2.0;
                double t14649 = gamma_aa+gamma_bb+t14648;
                double t14650 = sqrt(t14649);
                double t14655 = Cinf*Fg*Pg_1*t14650*t14644*t14647;
                double t14651 = exp(-t14655);
                double t14652 = t14631*t14632*(1.0/2.0);
                double t14653 = t14652+1.0/2.0;
                double t14654 = pow(t14653,5.0/3.0);
                double t14656 = -t14652+1.0/2.0;
                double t14657 = pow(t14656,5.0/3.0);
                double t14658 = t14654+t14657;
                double t14659 = 1.0/sqrt(t14658);
                double t14660 = Bg*t14628*t14639*(2.0/3.0);
                double t14661 = Cg_2*c*t14633*(1.0/3.0);
                double t14662 = t14660+t14661;
                double t14663 = t14662*t14638;
                double t14664 = 1.0/(t14627*t14627);
                double t14665 = Bg*c*t14628*t14664*1.0E4;
                double t14666 = Cg_4*t14628*t14639*(2.0/3.0);
                double t14667 = Cg_3*c*t14633*(1.0/3.0);
                double t14668 = t14665+t14666+t14667;
                double t14669 = 1.0/(t14637*t14637);
                double t14674 = t14642*t14668*t14669;
                double t14670 = t14663-t14674;
                double t14671 = t14631*(1.0/2.0);
                double t14682 = t14632*t14664*(1.0/2.0);
                double t14672 = t14671-t14682;
                double t14673 = 1.0/pow(t14627,1.3E1/6.0);
                double t14675 = 1.0/(t14646*t14646);
                double t14676 = 1.0/sqrt(t14649);
                double t14677 = Cinf*Fg*Pg_1*t14650*t14673*t14647*(7.0/6.0);
                double t14678 = t14677-Cinf*Fg*Pg_1*t14650*t14670*t14644*t14675;
                double t14679 = 1.0/pow(t14658,3.0/2.0);
                double t14680 = 1.0/pow(t14627,5.0/2.0);
                double t14681 = pow(t14656,2.0/3.0);
                double t14683 = t14672*t14681*(5.0/3.0);
                double t14684 = pow(t14653,2.0/3.0);
                double t14685 = t14683-t14672*t14684*(5.0/3.0);
                v_rho_a_gamma_aa[Q] += scale * t14651*t14643*1.0/pow(t14627,7.0/3.0)*t14646*t14659*(-4.0/3.0)-t14633*t14651*t14643*t14670*1.0/sqrt(t14654+pow(t14631*t14632*(-1.0/2.0)+1.0/2.0,5.0/3.0))+t14633*t14651*t14643*t14646*t14685*t14679*(1.0/2.0)+t14633*t14651*t14643*t14646*t14659*t14678+t14633*t14651*t14643*t14646*t14649*t14659*(Cinf*Fg*Pg_1*t14673*t14647*t14676*(7.0/1.2E1)-Cinf*Fg*Pg_1*t14670*t14644*t14675*t14676*(1.0/2.0))+Cinf*Fg*Pg_1*t14650*t14651*t14643*1.0/pow(t14627,7.0/2.0)*t14659*(2.0/3.0)-Cinf*Fg*Pg_1*t14650*t14651*t14643*t14680*t14685*t14679*(1.0/4.0)-Cinf*Fg*Pg_1*t14650*t14651*t14643*t14680*t14659*t14678*(1.0/2.0)+Cinf*Fg*Pg_1*t14650*t14651*t14643*t14670*t14680*t14647*t14659*(1.0/2.0);
            }
            
            // v_rho_a_gamma_ab
            if (deriv >= 2) {
                double t14687 = rho_a+rho_b;
                double t14688 = c*c;
                double t14689 = 1.0/pow(t14687,2.0/3.0);
                double t14690 = 1.0/pow(t14687,1.0/3.0);
                double t14691 = 1.0/t14687;
                double t14692 = rho_a-rho_b;
                double t14693 = 1.0/pow(t14687,4.0/3.0);
                double t14694 = Bg*c*t14691*t14688*1.0E4;
                double t14695 = Cg_4*t14688*t14689;
                double t14696 = Cg_3*c*t14690;
                double t14697 = t14694+t14695+t14696+1.0;
                double t14698 = 1.0/t14697;
                double t14699 = 1.0/pow(t14687,5.0/3.0);
                double t14700 = Bg*t14688*t14689;
                double t14701 = Cg_2*c*t14690;
                double t14702 = Cg_1+t14700+t14701;
                double t14703 = 1.0/two_13;
                double t14704 = 1.0/pow(t14687,7.0/6.0);
                double t14705 = t14702*t14698;
                double t14706 = Cx+t14705;
                double t14707 = 1.0/t14706;
                double t14708 = gamma_ab*2.0;
                double t14709 = gamma_aa+gamma_bb+t14708;
                double t14710 = sqrt(t14709);
                double t14715 = Cinf*Fg*Pg_1*t14710*t14704*t14707;
                double t14711 = exp(-t14715);
                double t14712 = t14691*t14692*(1.0/2.0);
                double t14713 = t14712+1.0/2.0;
                double t14714 = pow(t14713,5.0/3.0);
                double t14716 = -t14712+1.0/2.0;
                double t14717 = pow(t14716,5.0/3.0);
                double t14718 = t14714+t14717;
                double t14719 = 1.0/sqrt(t14718);
                double t14720 = Bg*t14688*t14699*(2.0/3.0);
                double t14721 = Cg_2*c*t14693*(1.0/3.0);
                double t14722 = t14720+t14721;
                double t14723 = t14722*t14698;
                double t14724 = 1.0/(t14687*t14687);
                double t14725 = Bg*c*t14724*t14688*1.0E4;
                double t14726 = Cg_4*t14688*t14699*(2.0/3.0);
                double t14727 = Cg_3*c*t14693*(1.0/3.0);
                double t14728 = t14725+t14726+t14727;
                double t14729 = 1.0/(t14697*t14697);
                double t14734 = t14702*t14728*t14729;
                double t14730 = t14723-t14734;
                double t14731 = t14691*(1.0/2.0);
                double t14742 = t14724*t14692*(1.0/2.0);
                double t14732 = t14731-t14742;
                double t14733 = 1.0/pow(t14687,1.3E1/6.0);
                double t14735 = 1.0/(t14706*t14706);
                double t14736 = 1.0/sqrt(t14709);
                double t14737 = Cinf*Fg*Pg_1*t14710*t14733*t14707*(7.0/6.0);
                double t14738 = t14737-Cinf*Fg*Pg_1*t14710*t14730*t14704*t14735;
                double t14739 = 1.0/pow(t14718,3.0/2.0);
                double t14740 = 1.0/pow(t14687,5.0/2.0);
                double t14741 = pow(t14716,2.0/3.0);
                double t14743 = t14732*t14741*(5.0/3.0);
                double t14744 = pow(t14713,2.0/3.0);
                double t14745 = t14743-t14732*t14744*(5.0/3.0);
                v_rho_a_gamma_ab[Q] += scale * t14711*t14703*t14706*t14719*1.0/pow(t14687,7.0/3.0)*(-8.0/3.0)-t14711*t14703*t14730*t14693*1.0/sqrt(t14714+pow(t14691*t14692*(-1.0/2.0)+1.0/2.0,5.0/3.0))*2.0+t14711*t14703*t14706*t14745*t14693*t14739+t14711*t14703*t14706*t14719*t14693*t14738*2.0+t14711*t14703*t14706*t14709*t14719*t14693*(Cinf*Fg*Pg_1*t14733*t14707*t14736*(7.0/6.0)-Cinf*Fg*Pg_1*t14730*t14704*t14735*t14736)+Cinf*Fg*Pg_1*t14710*t14711*t14703*t14719*1.0/pow(t14687,7.0/2.0)*(4.0/3.0)-Cinf*Fg*Pg_1*t14710*t14711*t14703*t14740*t14745*t14739*(1.0/2.0)-Cinf*Fg*Pg_1*t14710*t14711*t14703*t14740*t14719*t14738+Cinf*Fg*Pg_1*t14710*t14711*t14703*t14730*t14740*t14707*t14719;
            }
            
            // v_rho_a_gamma_bb
            if (deriv >= 2) {
                double t14747 = rho_a+rho_b;
                double t14748 = c*c;
                double t14749 = 1.0/pow(t14747,2.0/3.0);
                double t14750 = 1.0/pow(t14747,1.0/3.0);
                double t14751 = 1.0/t14747;
                double t14752 = rho_a-rho_b;
                double t14753 = 1.0/pow(t14747,4.0/3.0);
                double t14754 = Bg*c*t14751*t14748*1.0E4;
                double t14755 = Cg_4*t14748*t14749;
                double t14756 = Cg_3*c*t14750;
                double t14757 = t14754+t14755+t14756+1.0;
                double t14758 = 1.0/t14757;
                double t14759 = 1.0/pow(t14747,5.0/3.0);
                double t14760 = Bg*t14748*t14749;
                double t14761 = Cg_2*c*t14750;
                double t14762 = Cg_1+t14760+t14761;
                double t14763 = 1.0/two_13;
                double t14764 = 1.0/pow(t14747,7.0/6.0);
                double t14765 = t14762*t14758;
                double t14766 = Cx+t14765;
                double t14767 = 1.0/t14766;
                double t14768 = gamma_ab*2.0;
                double t14769 = gamma_aa+gamma_bb+t14768;
                double t14770 = sqrt(t14769);
                double t14775 = Cinf*Fg*Pg_1*t14770*t14764*t14767;
                double t14771 = exp(-t14775);
                double t14772 = t14751*t14752*(1.0/2.0);
                double t14773 = t14772+1.0/2.0;
                double t14774 = pow(t14773,5.0/3.0);
                double t14776 = -t14772+1.0/2.0;
                double t14777 = pow(t14776,5.0/3.0);
                double t14778 = t14774+t14777;
                double t14779 = 1.0/sqrt(t14778);
                double t14780 = Bg*t14748*t14759*(2.0/3.0);
                double t14781 = Cg_2*c*t14753*(1.0/3.0);
                double t14782 = t14780+t14781;
                double t14783 = t14782*t14758;
                double t14784 = 1.0/(t14747*t14747);
                double t14785 = Bg*c*t14748*t14784*1.0E4;
                double t14786 = Cg_4*t14748*t14759*(2.0/3.0);
                double t14787 = Cg_3*c*t14753*(1.0/3.0);
                double t14788 = t14785+t14786+t14787;
                double t14789 = 1.0/(t14757*t14757);
                double t14794 = t14762*t14788*t14789;
                double t14790 = t14783-t14794;
                double t14791 = t14751*(1.0/2.0);
                double t14802 = t14752*t14784*(1.0/2.0);
                double t14792 = -t14802+t14791;
                double t14793 = 1.0/pow(t14747,1.3E1/6.0);
                double t14795 = 1.0/(t14766*t14766);
                double t14796 = 1.0/sqrt(t14769);
                double t14797 = Cinf*Fg*Pg_1*t14770*t14793*t14767*(7.0/6.0);
                double t14798 = t14797-Cinf*Fg*Pg_1*t14770*t14790*t14764*t14795;
                double t14799 = 1.0/pow(t14778,3.0/2.0);
                double t14800 = 1.0/pow(t14747,5.0/2.0);
                double t14801 = pow(t14776,2.0/3.0);
                double t14803 = t14801*t14792*(5.0/3.0);
                double t14804 = pow(t14773,2.0/3.0);
                double t14805 = t14803-t14804*t14792*(5.0/3.0);
                v_rho_a_gamma_bb[Q] += scale * t14771*t14763*1.0/pow(t14747,7.0/3.0)*t14766*t14779*(-4.0/3.0)-t14753*t14771*t14763*t14790*1.0/sqrt(t14774+pow(t14751*t14752*(-1.0/2.0)+1.0/2.0,5.0/3.0))+t14805*t14753*t14771*t14763*t14766*t14799*(1.0/2.0)+t14753*t14771*t14763*t14766*t14779*t14798+t14753*t14771*t14763*t14766*t14769*t14779*(Cinf*Fg*Pg_1*t14793*t14767*t14796*(7.0/1.2E1)-Cinf*Fg*Pg_1*t14790*t14764*t14795*t14796*(1.0/2.0))+Cinf*Fg*Pg_1*t14770*t14771*t14763*1.0/pow(t14747,7.0/2.0)*t14779*(2.0/3.0)-Cinf*Fg*Pg_1*t14800*t14805*t14770*t14771*t14763*t14799*(1.0/4.0)-Cinf*Fg*Pg_1*t14800*t14770*t14771*t14763*t14779*t14798*(1.0/2.0)+Cinf*Fg*Pg_1*t14800*t14770*t14771*t14763*t14790*t14767*t14779*(1.0/2.0);
            }
            
            // v_rho_b_gamma_aa
            if (deriv >= 2) {
                double t14807 = rho_a+rho_b;
                double t14808 = c*c;
                double t14809 = 1.0/pow(t14807,2.0/3.0);
                double t14810 = 1.0/pow(t14807,1.0/3.0);
                double t14811 = 1.0/t14807;
                double t14812 = rho_a-rho_b;
                double t14813 = 1.0/pow(t14807,4.0/3.0);
                double t14814 = Bg*c*t14811*t14808*1.0E4;
                double t14815 = Cg_4*t14808*t14809;
                double t14816 = Cg_3*c*t14810;
                double t14817 = t14814+t14815+t14816+1.0;
                double t14818 = 1.0/t14817;
                double t14819 = 1.0/pow(t14807,5.0/3.0);
                double t14820 = Bg*t14808*t14809;
                double t14821 = Cg_2*c*t14810;
                double t14822 = Cg_1+t14820+t14821;
                double t14823 = 1.0/two_13;
                double t14824 = 1.0/pow(t14807,7.0/6.0);
                double t14825 = t14822*t14818;
                double t14826 = Cx+t14825;
                double t14827 = 1.0/t14826;
                double t14828 = gamma_ab*2.0;
                double t14829 = gamma_aa+gamma_bb+t14828;
                double t14830 = sqrt(t14829);
                double t14835 = Cinf*Fg*Pg_1*t14830*t14824*t14827;
                double t14831 = exp(-t14835);
                double t14832 = t14811*t14812*(1.0/2.0);
                double t14833 = t14832+1.0/2.0;
                double t14834 = pow(t14833,5.0/3.0);
                double t14836 = -t14832+1.0/2.0;
                double t14837 = pow(t14836,5.0/3.0);
                double t14838 = t14834+t14837;
                double t14839 = 1.0/sqrt(t14838);
                double t14840 = Bg*t14808*t14819*(2.0/3.0);
                double t14841 = Cg_2*c*t14813*(1.0/3.0);
                double t14842 = t14840+t14841;
                double t14843 = t14842*t14818;
                double t14844 = 1.0/(t14807*t14807);
                double t14845 = Bg*c*t14808*t14844*1.0E4;
                double t14846 = Cg_4*t14808*t14819*(2.0/3.0);
                double t14847 = Cg_3*c*t14813*(1.0/3.0);
                double t14848 = t14845+t14846+t14847;
                double t14849 = 1.0/(t14817*t14817);
                double t14855 = t14822*t14848*t14849;
                double t14850 = t14843-t14855;
                double t14851 = t14811*(1.0/2.0);
                double t14852 = t14812*t14844*(1.0/2.0);
                double t14853 = t14851+t14852;
                double t14854 = 1.0/pow(t14807,1.3E1/6.0);
                double t14856 = 1.0/(t14826*t14826);
                double t14857 = 1.0/sqrt(t14829);
                double t14858 = Cinf*Fg*Pg_1*t14830*t14827*t14854*(7.0/6.0);
                double t14859 = t14858-Cinf*Fg*Pg_1*t14830*t14850*t14824*t14856;
                double t14860 = 1.0/pow(t14838,3.0/2.0);
                double t14861 = 1.0/pow(t14807,5.0/2.0);
                double t14862 = pow(t14836,2.0/3.0);
                double t14863 = t14853*t14862*(5.0/3.0);
                double t14864 = pow(t14833,2.0/3.0);
                double t14865 = t14863-t14853*t14864*(5.0/3.0);
                v_rho_b_gamma_aa[Q] += scale * t14831*t14823*1.0/pow(t14807,7.0/3.0)*t14826*t14839*(-4.0/3.0)-t14813*t14831*t14823*t14850*1.0/sqrt(t14834+pow(t14811*t14812*(-1.0/2.0)+1.0/2.0,5.0/3.0))-t14813*t14831*t14823*t14860*t14826*t14865*(1.0/2.0)+t14813*t14831*t14823*t14826*t14839*t14859+t14813*t14831*t14823*t14826*t14829*t14839*(Cinf*Fg*Pg_1*t14827*t14854*t14857*(7.0/1.2E1)-Cinf*Fg*Pg_1*t14850*t14824*t14856*t14857*(1.0/2.0))+Cinf*Fg*Pg_1*t14830*t14831*t14823*1.0/pow(t14807,7.0/2.0)*t14839*(2.0/3.0)+Cinf*Fg*Pg_1*t14830*t14831*t14823*t14860*t14861*t14865*(1.0/4.0)-Cinf*Fg*Pg_1*t14830*t14831*t14823*t14861*t14839*t14859*(1.0/2.0)+Cinf*Fg*Pg_1*t14830*t14831*t14823*t14850*t14861*t14827*t14839*(1.0/2.0);
            }
            
            // v_rho_b_gamma_ab
            if (deriv >= 2) {
                double t14867 = rho_a+rho_b;
                double t14868 = c*c;
                double t14869 = 1.0/pow(t14867,2.0/3.0);
                double t14870 = 1.0/pow(t14867,1.0/3.0);
                double t14871 = 1.0/t14867;
                double t14872 = rho_a-rho_b;
                double t14873 = 1.0/pow(t14867,4.0/3.0);
                double t14874 = Bg*c*t14871*t14868*1.0E4;
                double t14875 = Cg_4*t14868*t14869;
                double t14876 = Cg_3*c*t14870;
                double t14877 = t14874+t14875+t14876+1.0;
                double t14878 = 1.0/t14877;
                double t14879 = 1.0/pow(t14867,5.0/3.0);
                double t14880 = Bg*t14868*t14869;
                double t14881 = Cg_2*c*t14870;
                double t14882 = Cg_1+t14880+t14881;
                double t14883 = 1.0/two_13;
                double t14884 = 1.0/pow(t14867,7.0/6.0);
                double t14885 = t14882*t14878;
                double t14886 = Cx+t14885;
                double t14887 = 1.0/t14886;
                double t14888 = gamma_ab*2.0;
                double t14889 = gamma_aa+gamma_bb+t14888;
                double t14890 = sqrt(t14889);
                double t14895 = Cinf*Fg*Pg_1*t14890*t14884*t14887;
                double t14891 = exp(-t14895);
                double t14892 = t14871*t14872*(1.0/2.0);
                double t14893 = t14892+1.0/2.0;
                double t14894 = pow(t14893,5.0/3.0);
                double t14896 = -t14892+1.0/2.0;
                double t14897 = pow(t14896,5.0/3.0);
                double t14898 = t14894+t14897;
                double t14899 = 1.0/sqrt(t14898);
                double t14900 = Bg*t14868*t14879*(2.0/3.0);
                double t14901 = Cg_2*c*t14873*(1.0/3.0);
                double t14902 = t14900+t14901;
                double t14903 = t14902*t14878;
                double t14904 = 1.0/(t14867*t14867);
                double t14905 = Bg*c*t14904*t14868*1.0E4;
                double t14906 = Cg_4*t14868*t14879*(2.0/3.0);
                double t14907 = Cg_3*c*t14873*(1.0/3.0);
                double t14908 = t14905+t14906+t14907;
                double t14909 = 1.0/(t14877*t14877);
                double t14915 = t14908*t14882*t14909;
                double t14910 = t14903-t14915;
                double t14911 = t14871*(1.0/2.0);
                double t14912 = t14904*t14872*(1.0/2.0);
                double t14913 = t14911+t14912;
                double t14914 = 1.0/pow(t14867,1.3E1/6.0);
                double t14916 = 1.0/(t14886*t14886);
                double t14917 = 1.0/sqrt(t14889);
                double t14918 = Cinf*Fg*Pg_1*t14914*t14890*t14887*(7.0/6.0);
                double t14919 = t14918-Cinf*Fg*Pg_1*t14910*t14916*t14890*t14884;
                double t14920 = 1.0/pow(t14898,3.0/2.0);
                double t14921 = 1.0/pow(t14867,5.0/2.0);
                double t14922 = pow(t14896,2.0/3.0);
                double t14923 = t14913*t14922*(5.0/3.0);
                double t14924 = pow(t14893,2.0/3.0);
                double t14925 = t14923-t14913*t14924*(5.0/3.0);
                v_rho_b_gamma_ab[Q] += scale * t14891*t14883*1.0/pow(t14867,7.0/3.0)*t14886*t14899*(-8.0/3.0)-t14910*t14873*t14891*t14883*1.0/sqrt(t14894+pow(t14871*t14872*(-1.0/2.0)+1.0/2.0,5.0/3.0))*2.0-t14920*t14925*t14873*t14891*t14883*t14886+t14873*t14891*t14883*t14919*t14886*t14899*2.0+t14873*t14891*t14883*t14886*t14889*t14899*(Cinf*Fg*Pg_1*t14914*t14917*t14887*(7.0/6.0)-Cinf*Fg*Pg_1*t14910*t14916*t14917*t14884)+Cinf*Fg*Pg_1*t14890*t14891*t14883*1.0/pow(t14867,7.0/2.0)*t14899*(4.0/3.0)+Cinf*Fg*Pg_1*t14920*t14921*t14925*t14890*t14891*t14883*(1.0/2.0)-Cinf*Fg*Pg_1*t14921*t14890*t14891*t14883*t14919*t14899+Cinf*Fg*Pg_1*t14910*t14921*t14890*t14891*t14883*t14887*t14899;
            }
            
            // v_rho_b_gamma_bb
            if (deriv >= 2) {
                double t14927 = rho_a+rho_b;
                double t14928 = c*c;
                double t14929 = 1.0/pow(t14927,2.0/3.0);
                double t14930 = 1.0/pow(t14927,1.0/3.0);
                double t14931 = 1.0/t14927;
                double t14932 = rho_a-rho_b;
                double t14933 = 1.0/pow(t14927,4.0/3.0);
                double t14934 = Bg*c*t14931*t14928*1.0E4;
                double t14935 = Cg_4*t14928*t14929;
                double t14936 = Cg_3*c*t14930;
                double t14937 = t14934+t14935+t14936+1.0;
                double t14938 = 1.0/t14937;
                double t14939 = 1.0/pow(t14927,5.0/3.0);
                double t14940 = Bg*t14928*t14929;
                double t14941 = Cg_2*c*t14930;
                double t14942 = Cg_1+t14940+t14941;
                double t14943 = 1.0/two_13;
                double t14944 = 1.0/pow(t14927,7.0/6.0);
                double t14945 = t14942*t14938;
                double t14946 = Cx+t14945;
                double t14947 = 1.0/t14946;
                double t14948 = gamma_ab*2.0;
                double t14949 = gamma_aa+gamma_bb+t14948;
                double t14950 = sqrt(t14949);
                double t14955 = Cinf*Fg*Pg_1*t14950*t14944*t14947;
                double t14951 = exp(-t14955);
                double t14952 = t14931*t14932*(1.0/2.0);
                double t14953 = t14952+1.0/2.0;
                double t14954 = pow(t14953,5.0/3.0);
                double t14956 = -t14952+1.0/2.0;
                double t14957 = pow(t14956,5.0/3.0);
                double t14958 = t14954+t14957;
                double t14959 = 1.0/sqrt(t14958);
                double t14960 = Bg*t14928*t14939*(2.0/3.0);
                double t14961 = Cg_2*c*t14933*(1.0/3.0);
                double t14962 = t14960+t14961;
                double t14963 = t14962*t14938;
                double t14964 = 1.0/(t14927*t14927);
                double t14965 = Bg*c*t14928*t14964*1.0E4;
                double t14966 = Cg_4*t14928*t14939*(2.0/3.0);
                double t14967 = Cg_3*c*t14933*(1.0/3.0);
                double t14968 = t14965+t14966+t14967;
                double t14969 = 1.0/(t14937*t14937);
                double t14975 = t14942*t14968*t14969;
                double t14970 = t14963-t14975;
                double t14971 = t14931*(1.0/2.0);
                double t14972 = t14932*t14964*(1.0/2.0);
                double t14973 = t14971+t14972;
                double t14974 = 1.0/pow(t14927,1.3E1/6.0);
                double t14976 = 1.0/(t14946*t14946);
                double t14977 = 1.0/sqrt(t14949);
                double t14978 = Cinf*Fg*Pg_1*t14950*t14947*t14974*(7.0/6.0);
                double t14979 = t14978-Cinf*Fg*Pg_1*t14950*t14970*t14944*t14976;
                double t14980 = 1.0/pow(t14958,3.0/2.0);
                double t14981 = 1.0/pow(t14927,5.0/2.0);
                double t14982 = pow(t14956,2.0/3.0);
                double t14983 = t14973*t14982*(5.0/3.0);
                double t14984 = pow(t14953,2.0/3.0);
                double t14985 = t14983-t14973*t14984*(5.0/3.0);
                v_rho_b_gamma_bb[Q] += scale * t14951*t14943*1.0/pow(t14927,7.0/3.0)*t14946*t14959*(-4.0/3.0)-t14933*t14951*t14943*t14970*1.0/sqrt(t14954+pow(t14931*t14932*(-1.0/2.0)+1.0/2.0,5.0/3.0))-t14933*t14951*t14943*t14980*t14946*t14985*(1.0/2.0)+t14933*t14951*t14943*t14946*t14959*t14979+t14933*t14951*t14943*t14946*t14949*t14959*(Cinf*Fg*Pg_1*t14947*t14974*t14977*(7.0/1.2E1)-Cinf*Fg*Pg_1*t14970*t14944*t14976*t14977*(1.0/2.0))+Cinf*Fg*Pg_1*t14950*t14951*t14943*1.0/pow(t14927,7.0/2.0)*t14959*(2.0/3.0)+Cinf*Fg*Pg_1*t14950*t14951*t14943*t14980*t14981*t14985*(1.0/4.0)-Cinf*Fg*Pg_1*t14950*t14951*t14943*t14981*t14959*t14979*(1.0/2.0)+Cinf*Fg*Pg_1*t14950*t14951*t14943*t14970*t14981*t14947*t14959*(1.0/2.0);
            }
            
        }
    }
}

}
