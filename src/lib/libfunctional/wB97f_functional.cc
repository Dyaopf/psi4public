/**********************************************************
* wB97f_functional.cc: definitions for wB97f_functional for KS-DFT
* Robert Parrish, robparrish@gmail.com
* Autogenerated by MATLAB Script on 07-Mar-2012
*
***********************************************************/
#include <libmints/mints.h>
#include <libfock/points.h>
#include "wB97f_functional.h"
#include <stdlib.h>
#include <cmath>
#include <string>
#include <string>
#include <vector>

using namespace psi;
using namespace boost;
using namespace std;

namespace psi { namespace functional {

wB97f_Functional::wB97f_Functional(int npoints, int deriv) : Functional(npoints, deriv)
{

    name_ = "wB97f";
    description_ = "wB97 Range-Corrected Power Series GGA (adjusted k)";
    citation_ = "J. Chai and M. Head-Gordon, J. Chem. Phys., 128, pp. 084106, 2008";

    double omega = 4.0000000000000002E-01;
    params_.push_back(make_pair("omega",omega));
    double c0 = -9.3052573634909974E-01;
    params_.push_back(make_pair("c0",c0));
    double two_13 = 1.2599210498948732E+00;
    params_.push_back(make_pair("two_13",two_13));
    double d2fz0 = 1.7099210000000000E+00;
    params_.push_back(make_pair("d2fz0",d2fz0));
    double c = 6.2035049089939986E-01;
    params_.push_back(make_pair("c",c));
    double Aa = 1.6886999999999999E-02;
    params_.push_back(make_pair("Aa",Aa));
    double a1a = 1.1125000000000000E-01;
    params_.push_back(make_pair("a1a",a1a));
    double b1a = 1.0356999999999999E+01;
    params_.push_back(make_pair("b1a",b1a));
    double b2a = 3.6231000000000000E+00;
    params_.push_back(make_pair("b2a",b2a));
    double b3a = 8.8026000000000004E-01;
    params_.push_back(make_pair("b3a",b3a));
    double b4a = 4.9670999999999998E-01;
    params_.push_back(make_pair("b4a",b4a));
    double c0p = 3.1091000000000001E-02;
    params_.push_back(make_pair("c0p",c0p));
    double a1p = 2.1370000000000000E-01;
    params_.push_back(make_pair("a1p",a1p));
    double b1p = 7.5956999999999999E+00;
    params_.push_back(make_pair("b1p",b1p));
    double b2p = 3.5876000000000001E+00;
    params_.push_back(make_pair("b2p",b2p));
    double b3p = 1.6382000000000001E+00;
    params_.push_back(make_pair("b3p",b3p));
    double b4p = 4.9293999999999999E-01;
    params_.push_back(make_pair("b4p",b4p));
    double c0f = 1.5545000000000000E-02;
    params_.push_back(make_pair("c0f",c0f));
    double a1f = 2.0548000000000000E-01;
    params_.push_back(make_pair("a1f",a1f));
    double b1f = 1.4118900000000000E+01;
    params_.push_back(make_pair("b1f",b1f));
    double b2f = 6.1977000000000002E+00;
    params_.push_back(make_pair("b2f",b2f));
    double b3f = 3.3662000000000001E+00;
    params_.push_back(make_pair("b3f",b3f));
    double b4f = 6.2517000000000000E-01;
    params_.push_back(make_pair("b4f",b4f));
    double gcab = 6.0000000000000001E-03;
    params_.push_back(make_pair("gcab",gcab));
    double gcaa = 2.0000000000000001E-01;
    params_.push_back(make_pair("gcaa",gcaa));
    double gx = 4.0000000000000001E-03;
    params_.push_back(make_pair("gx",gx));
    double ccab0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccab0",ccab0));
    double ccab1 = 3.9905100000000000E+00;
    params_.push_back(make_pair("ccab1",ccab1));
    double ccab2 = -1.7006599999999999E+01;
    params_.push_back(make_pair("ccab2",ccab2));
    double ccab3 = 1.0729200000000001E+00;
    params_.push_back(make_pair("ccab3",ccab3));
    double ccab4 = 8.8821100000000008E+00;
    params_.push_back(make_pair("ccab4",ccab4));
    double ccaa0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("ccaa0",ccaa0));
    double ccaa1 = -2.5535199999999998E+00;
    params_.push_back(make_pair("ccaa1",ccaa1));
    double ccaa2 = 1.1892600000000000E+01;
    params_.push_back(make_pair("ccaa2",ccaa2));
    double ccaa3 = -2.6945200000000000E+01;
    params_.push_back(make_pair("ccaa3",ccaa3));
    double ccaa4 = 1.7092700000000001E+01;
    params_.push_back(make_pair("ccaa4",ccaa4));
    double cx0 = 1.0000000000000000E+00;
    params_.push_back(make_pair("cx0",cx0));
    double cx1 = 1.1311599999999999E+00;
    params_.push_back(make_pair("cx1",cx1));
    double cx2 = -2.7491500000000002E+00;
    params_.push_back(make_pair("cx2",cx2));
    double cx3 = 1.2090000000000000E+01;
    params_.push_back(make_pair("cx3",cx3));
    double cx4 = -5.7164200000000003E+00;
    params_.push_back(make_pair("cx4",cx4));

    is_gga_ = true;
    is_meta_ = false;

    //Required allocateion
    allocate();
}
wB97f_Functional::~wB97f_Functional()
{
}
void wB97f_Functional::computeRKSFunctional(boost::shared_ptr<RKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict gamma_aa;
    const double* restrict tau_a;

    rho_a = prop->property_value("RHO_A")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_) {
            double t175800 = 1.0/pow(rho_a[index],1.0/3.0);
            double t175801 = c*t175800;
            double t175802 = sqrt(t175801);
            double t175803 = pow(t175801,3.0/2.0);
            double t175804 = c*c;
            double t175805 = 1.0/pow(rho_a[index],2.0/3.0);
            double t175806 = 1.0/c0p;
            double t175807 = b1p*t175802;
            double t175808 = b3p*t175803;
            double t175809 = b4p*t175804*t175805;
            double t175810 = b2p*c*t175800;
            double t175811 = t175810+t175807+t175808+t175809;
            double t175812 = 1.0/t175811;
            double t175813 = t175812*t175806*(1.0/2.0);
            double t175814 = t175813+1.0;
            double t175815 = log(t175814);
            double t175816 = a1p*c*t175800;
            double t175817 = t175816+1.0;
            double t175818 = rho_a[index]*2.0;
            double t175819 = 1.0/pow(t175818,1.0/3.0);
            double t175820 = c*t175819;
            double t175821 = gamma_aa[index]*gamma_aa[index];
            double t175822 = gcab*gcab;
            double t175823 = t175821*t175821;
            double t175824 = t175822*t175822;
            double t175825 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t175826 = 1.0/pow(rho_a[index],8.0/3.0);
            double t175827 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t175828 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t175829 = pow(2.0,1.0/3.0);
            double t175830 = t175829*2.0;
            double t175831 = t175830-2.0;
            double t175832 = two_13*2.0;
            double t175833 = t175832-2.0;
            double t175834 = 1.0/t175833;
            double t175835 = 1.0/c0f;
            double t175836 = b1f*t175802;
            double t175837 = b3f*t175803;
            double t175838 = b4f*t175804*t175805;
            double t175839 = b2f*c*t175800;
            double t175840 = t175836+t175837+t175838+t175839;
            double t175841 = 1.0/t175840;
            double t175842 = t175841*t175835*(1.0/2.0);
            double t175843 = t175842+1.0;
            double t175844 = log(t175843);
            double t175845 = a1f*c*t175800;
            double t175846 = t175845+1.0;
            double t175847 = c0f*t175844*t175846*2.0;
            double t175848 = c0p*t175815*t175817*2.0;
            double t175849 = gcaa*gcaa;
            double t175850 = t175849*t175849;
            double t175851 = gx*gx;
            double t175852 = t175851*t175851;
            double t175853 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t175854 = gamma_aa[index]*gx*t175826*4.0;
            double t175855 = gamma_aa[index]*gx*t175821*t175851*t175827*4.0;
            double t175856 = t175821*t175851*t175828*6.0;
            double t175857 = t175823*t175825*t175852;
            double t175858 = t175854+t175855+t175856+t175857+1.0;
            double t175859 = 1.0/t175858;
            double t175860 = cx4*t175823*t175825*t175852*t175859*(4.190715359480463E15/2.251799813685248E15);
            double t175861 = gamma_aa[index]*gx*t175826;
            double t175862 = t175861+1.0;
            double t175863 = 1.0/t175862;
            double t175864 = cx1*gamma_aa[index]*gx*t175826*t175863*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175865 = gamma_aa[index]*gx*t175826*3.0;
            double t175866 = gamma_aa[index]*gx*t175821*t175851*t175827;
            double t175867 = t175821*t175851*t175828*3.0;
            double t175868 = t175865+t175866+t175867+1.0;
            double t175869 = 1.0/t175868;
            double t175870 = cx3*gamma_aa[index]*gx*t175821*t175851*t175827*t175869*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175871 = gamma_aa[index]*gx*t175826*2.0;
            double t175872 = t175821*t175851*t175828;
            double t175873 = t175871+t175872+1.0;
            double t175874 = 1.0/t175873;
            double t175875 = cx2*t175821*t175851*t175828*t175874*(4.190715359480463E15/2.251799813685248E15);
            double t175876 = t175860+t175870+t175853+t175864+t175875;
            double t175877 = 1.0/(omega*omega);
            double t175878 = pow(rho_a[index],2.0/3.0);
            double t175879 = 1.0/t175876;
            double t175880 = exp(t175877*t175878*t175879*(-1.4000771998813E29/4.951760157141521E27));
            double t175881 = sqrt(t175876);
            functional_[index] = (rho_a[index]*(t175848+t175831*t175834*(t175847-c0p*t175815*t175817*2.0))*2.0- \
               c0p*rho_a[index]*log((t175806*(1.0/2.0))/(b1p*sqrt(t175820)+b3p*pow(t175820,3.0/2.0)+b4p*t175804*1.0/ \
               pow(t175818,2.0/3.0)+b2p*c*t175819)+1.0)*(a1p*c*t175819+1.0)*4.0)*(ccab0+(ccab2*t175821*t175822*t175828) \
               /(gamma_aa[index]*gcab*t175826*2.0+t175821*t175822*t175828+1.0)+(ccab1*gamma_aa[index]*gcab*t175826) \
               /(gamma_aa[index]*gcab*t175826+1.0)+(ccab4*t175823*t175824*t175825)/(gamma_aa[index]*gcab*t175826* \
               4.0+t175821*t175822*t175828*6.0+t175823*t175824*t175825+gamma_aa[index]*gcab*t175821*t175822*t175827* \
               4.0+1.0)+(ccab3*gamma_aa[index]*gcab*t175821*t175822*t175827)/(gamma_aa[index]*gcab*t175826*3.0+t175821* \
               t175822*t175828*3.0+gamma_aa[index]*gcab*t175821*t175822*t175827+1.0))-rho_a[index]*(t175848+t175831* \
               t175834*(t175847-t175848))*(ccaa0+(ccaa2*t175821*t175828*t175849)/(gamma_aa[index]*gcaa*t175826*2.0+ \
               t175821*t175828*t175849+1.0)+(ccaa1*gamma_aa[index]*gcaa*t175826)/(gamma_aa[index]*gcaa*t175826+1.0) \
               +(ccaa4*t175823*t175850*t175825)/(gamma_aa[index]*gcaa*t175826*4.0+t175823*t175850*t175825+t175821* \
               t175828*t175849*6.0+gamma_aa[index]*gcaa*t175821*t175827*t175849*4.0+1.0)+(ccaa3*gamma_aa[index]*gcaa* \
               t175821*t175827*t175849)/(gamma_aa[index]*gcaa*t175826*3.0+t175821*t175828*t175849*3.0+gamma_aa[index]* \
               gcaa*t175821*t175827*t175849+1.0))*2.0-c0*pow(rho_a[index],4.0/3.0)*(omega*t175800*t175881*(erf((pow(rho_a[index],1.0/ \
               3.0)*1.0/sqrt(t175876)*(3.74176054803257E14/7.0368744177664E13))/omega)*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t175800*t175881*(-t175880+(omega*omega)*t175805*t175876*(t175880-1.0)*(2.475880078570761E27/ \
               1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               -1.0)*(cx0+cx1*gamma_aa[index]*gx*t175826*t175863+cx2*t175821*t175851*t175828*t175874+cx4*t175823* \
               t175825*t175852*t175859+cx3*gamma_aa[index]*gx*t175821*t175851*t175827*t175869)*2.0;
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_) {
            double t175883 = gamma_aa[index]*gamma_aa[index];
            double t175884 = gcab*gcab;
            double t175885 = t175883*t175883;
            double t175886 = t175884*t175884;
            double t175887 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t175888 = 1.0/pow(rho_a[index],8.0/3.0);
            double t175889 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t175890 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t175891 = rho_a[index]*2.0;
            double t175892 = 1.0/pow(t175891,1.0/3.0);
            double t175893 = c*t175892;
            double t175894 = sqrt(t175893);
            double t175895 = b1p*t175894;
            double t175896 = pow(t175893,3.0/2.0);
            double t175897 = b3p*t175896;
            double t175898 = b2p*c*t175892;
            double t175899 = c*c;
            double t175900 = 1.0/pow(t175891,2.0/3.0);
            double t175901 = b4p*t175900*t175899;
            double t175902 = t175901+t175895+t175897+t175898;
            double t175903 = 1.0/pow(t175891,4.0/3.0);
            double t175904 = 1.0/c0p;
            double t175905 = 1.0/t175902;
            double t175906 = t175904*t175905*(1.0/2.0);
            double t175907 = t175906+1.0;
            double t175908 = 1.0/pow(rho_a[index],1.0/3.0);
            double t175909 = c*t175908;
            double t175910 = sqrt(t175909);
            double t175911 = b1f*t175910;
            double t175912 = pow(t175909,3.0/2.0);
            double t175913 = b3f*t175912;
            double t175914 = 1.0/pow(rho_a[index],2.0/3.0);
            double t175915 = b4f*t175914*t175899;
            double t175916 = b2f*c*t175908;
            double t175917 = t175911+t175913+t175915+t175916;
            double t175918 = 1.0/pow(rho_a[index],4.0/3.0);
            double t175919 = b1p*t175910;
            double t175920 = b3p*t175912;
            double t175921 = b4p*t175914*t175899;
            double t175922 = b2p*c*t175908;
            double t175923 = t175920+t175921+t175922+t175919;
            double t175924 = 1.0/pow(rho_a[index],5.0/3.0);
            double t175925 = 1.0/sqrt(t175909);
            double t175926 = 1.0/c0f;
            double t175927 = 1.0/t175917;
            double t175928 = t175926*t175927*(1.0/2.0);
            double t175929 = t175928+1.0;
            double t175930 = 1.0/t175923;
            double t175931 = t175930*t175904*(1.0/2.0);
            double t175932 = t175931+1.0;
            double t175933 = a1p*c*t175908;
            double t175934 = t175933+1.0;
            double t175935 = 1.0/t175932;
            double t175936 = 1.0/(t175923*t175923);
            double t175937 = b4p*t175924*t175899*(2.0/3.0);
            double t175938 = b2p*c*t175918*(1.0/3.0);
            double t175939 = b1p*c*t175925*t175918*(1.0/6.0);
            double t175940 = b3p*c*t175910*t175918*(1.0/2.0);
            double t175941 = t175940+t175937+t175938+t175939;
            double t175942 = t175941*t175934*t175935*t175936;
            double t175943 = log(t175932);
            double t175944 = log(t175907);
            double t175945 = a1p*c*t175892;
            double t175946 = t175945+1.0;
            double t175947 = pow(2.0,1.0/3.0);
            double t175948 = t175947*2.0;
            double t175949 = t175948-2.0;
            double t175950 = two_13*2.0;
            double t175951 = t175950-2.0;
            double t175952 = 1.0/t175951;
            double t175953 = log(t175929);
            double t175954 = a1f*c*t175908;
            double t175955 = t175954+1.0;
            double t175956 = c0f*t175953*t175955*2.0;
            double t175958 = c0p*t175934*t175943*2.0;
            double t175957 = t175956-t175958;
            double t175959 = gcaa*gcaa;
            double t175960 = t175959*t175959;
            double t175961 = t175952*t175957*t175949;
            double t175962 = t175961+t175958;
            double t175963 = gamma_aa[index]*gcab*t175888*4.0;
            double t175964 = gamma_aa[index]*gcab*t175883*t175884*t175889*4.0;
            double t175965 = t175890*t175883*t175884*6.0;
            double t175966 = t175885*t175886*t175887;
            double t175967 = t175963+t175964+t175965+t175966+1.0;
            double t175968 = 1.0/t175967;
            double t175969 = gamma_aa[index]*gcab*t175888;
            double t175970 = t175969+1.0;
            double t175971 = 1.0/t175970;
            double t175972 = gamma_aa[index]*gcab*t175888*3.0;
            double t175973 = gamma_aa[index]*gcab*t175883*t175884*t175889;
            double t175974 = t175890*t175883*t175884*3.0;
            double t175975 = t175972+t175973+t175974+1.0;
            double t175976 = 1.0/t175975;
            double t175977 = gamma_aa[index]*gcab*t175888*2.0;
            double t175978 = t175890*t175883*t175884;
            double t175979 = t175977+t175978+1.0;
            double t175980 = 1.0/t175979;
            double t175981 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t175982 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t175983 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t175984 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t175985 = gamma_aa[index]*gcaa*t175888*4.0;
            double t175986 = gamma_aa[index]*gcaa*t175883*t175959*t175889*4.0;
            double t175987 = t175890*t175883*t175959*6.0;
            double t175988 = t175960*t175885*t175887;
            double t175989 = t175985+t175986+t175987+t175988+1.0;
            double t175990 = 1.0/t175989;
            double t175991 = gamma_aa[index]*gcaa*t175888;
            double t175992 = t175991+1.0;
            double t175993 = 1.0/t175992;
            double t175994 = gamma_aa[index]*gcaa*t175888*3.0;
            double t175995 = gamma_aa[index]*gcaa*t175883*t175959*t175889;
            double t175996 = t175890*t175883*t175959*3.0;
            double t175997 = t175994+t175995+t175996+1.0;
            double t175998 = 1.0/t175997;
            double t175999 = gamma_aa[index]*gcaa*t175888*2.0;
            double t176000 = t175890*t175883*t175959;
            double t176001 = t176000+t175999+1.0;
            double t176002 = 1.0/t176001;
            double t176003 = 1.0/t175929;
            double t176004 = 1.0/(t175917*t175917);
            double t176005 = b4f*t175924*t175899*(2.0/3.0);
            double t176006 = b2f*c*t175918*(1.0/3.0);
            double t176007 = b1f*c*t175925*t175918*(1.0/6.0);
            double t176008 = b3f*c*t175910*t175918*(1.0/2.0);
            double t176009 = t176005+t176006+t176007+t176008;
            double t176010 = a1f*c*c0f*t175953*t175918*(2.0/3.0);
            double t176011 = a1p*c*c0p*t175943*t175918*(2.0/3.0);
            double t176012 = ccaa4*t175960*t175990*t175885*t175887;
            double t176013 = ccaa1*gamma_aa[index]*gcaa*t175993*t175888;
            double t176014 = ccaa3*gamma_aa[index]*gcaa*t175883*t175959*t175889*t175998;
            double t176015 = ccaa2*t176002*t175890*t175883*t175959;
            double t176016 = ccaa0+t176012+t176013+t176014+t176015;
            double t176017 = gx*gx;
            double t176018 = t176017*t176017;
            double t176019 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t176020 = gamma_aa[index]*gx*t175888*4.0;
            double t176021 = gamma_aa[index]*gx*t176017*t175883*t175889*4.0;
            double t176022 = t176017*t175890*t175883*6.0;
            double t176023 = t176018*t175885*t175887;
            double t176024 = t176020+t176021+t176022+t176023+1.0;
            double t176025 = 1.0/t176024;
            double t176026 = cx4*t176025*t176018*t175885*t175887*(4.190715359480463E15/2.251799813685248E15);
            double t176027 = gamma_aa[index]*gx*t175888;
            double t176028 = t176027+1.0;
            double t176029 = 1.0/t176028;
            double t176030 = cx1*gamma_aa[index]*gx*t176029*t175888*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176031 = gamma_aa[index]*gx*t175888*3.0;
            double t176032 = gamma_aa[index]*gx*t176017*t175883*t175889;
            double t176033 = t176017*t175890*t175883*3.0;
            double t176034 = t176031+t176032+t176033+1.0;
            double t176035 = 1.0/t176034;
            double t176036 = cx3*gamma_aa[index]*gx*t176017*t176035*t175883*t175889*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176037 = gamma_aa[index]*gx*t175888*2.0;
            double t176038 = t176017*t175890*t175883;
            double t176039 = t176037+t176038+1.0;
            double t176040 = 1.0/t176039;
            double t176041 = cx2*t176040*t176017*t175890*t175883*(4.190715359480463E15/2.251799813685248E15);
            double t176042 = t176030+t176041+t176026+t176036+t176019;
            double t176043 = 1.0/omega;
            double t176044 = 1.0/(omega*omega);
            double t176045 = pow(rho_a[index],2.0/3.0);
            double t176046 = 1.0/t176042;
            double t176048 = t176044*t176045*t176046*(1.4000771998813E29/4.951760157141521E27);
            double t176047 = exp(-t176048);
            double t176049 = cx4*t176025*t176018*t175885*t175984*(1.396905119826821E15/7.0368744177664E13);
            double t176050 = cx1*gamma_aa[index]*gx*t176029*t175982*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t176051 = cx3*gamma_aa[index]*gx*t176017*t176035*t175883*t175983*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t176052 = cx2*t176040*t176017*t175981*t175883*(1.396905119826821E15/1.40737488355328E14);
            double t176053 = 1.0/(t176028*t176028);
            double t176054 = gamma_aa[index]*gx*t175982*8.0;
            double t176055 = gamma_aa[index]*gx*t176017*t175883*t175983*8.0;
            double t176056 = t176017*t175981*t175883*1.6E1;
            double t176057 = t176054+t176055+t176056;
            double t176058 = 1.0/(t176034*t176034);
            double t176059 = gamma_aa[index]*gx*t175982*(3.2E1/3.0);
            double t176060 = gamma_aa[index]*gx*t176017*t175883*t175983*3.2E1;
            double t176061 = t176017*t175981*t175883*3.2E1;
            double t176062 = t176018*t175885*t175984*(3.2E1/3.0);
            double t176063 = t176060+t176061+t176062+t176059;
            double t176064 = 1.0/(t176024*t176024);
            double t176065 = gamma_aa[index]*gx*t175982*(1.6E1/3.0);
            double t176066 = t176017*t175981*t175883*(1.6E1/3.0);
            double t176067 = t176065+t176066;
            double t176068 = 1.0/(t176039*t176039);
            double t176072 = cx1*t176017*t176053*t175981*t175883*(1.396905119826821E15/2.81474976710656E14);
            double t176073 = cx3*gamma_aa[index]*gx*t176017*t176057*t176058*t175883*t175889*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t176074 = cx4*t176018*t176063*t176064*t175885*t175887*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176075 = cx2*t176017*t176067*t176068*t175890*t175883*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176069 = t176050+t176051+t176052-t176072-t176073-t176074-t176075+t176049;
            double t176070 = omega*omega;
            double t176071 = t176047-1.0;
            double t176076 = t176044*t176046*t175908*(1.4000771998813E29/7.427640235712282E27);
            double t176077 = 1.0/(t176042*t176042);
            double t176078 = t176044*t176045*t176077*t176069*(1.4000771998813E29/4.951760157141521E27);
            double t176079 = t176076+t176078;
            double t176080 = sqrt(t176042);
            double t176081 = t176042*t176070*t176071*t175914*(2.475880078570761E27/1.4000771998813E29);
            double t176082 = t176081-t176047+3.0/2.0;
            double t176083 = 1.0/sqrt(t176042);
            double t176084 = pow(rho_a[index],1.0/3.0);
            double t176085 = t176043*t176083*t176084*(3.74176054803257E14/7.0368744177664E13);
            double t176086 = erf(t176085);
            double t176087 = t176086*(3.991211251234741E15/2.251799813685248E15);
            double t176089 = omega*t176080*t176082*t175908*(7.0368744177664E13/3.74176054803257E14);
            double t176088 = t176087-t176089;
            double t176090 = cx4*t176025*t176018*t175885*t175887;
            double t176091 = cx1*gamma_aa[index]*gx*t176029*t175888;
            double t176092 = cx3*gamma_aa[index]*gx*t176017*t176035*t175883*t175889;
            double t176093 = cx2*t176040*t176017*t175890*t175883;
            double t176094 = cx0+t176090+t176091+t176092+t176093;
            double t176095 = pow(rho_a[index],4.0/3.0);
            double t176096 = omega*t176080*t175908*t176088*(2.81474976710656E14/1.122528164409771E15);
            double t176097 = t176096-1.0;
            v_rho_a_[index] = -(rho_a[index]*t175962*2.0-c0p*rho_a[index]*t175944*t175946*4.0)*(ccab1*gamma_aa[index]* \
               gcab*t175971*t175982*(4.0/3.0)+ccab2*t175980*t175981*t175883*t175884*(8.0/3.0)+ccab4*t175885*t175984* \
               t175886*t175968*(1.6E1/3.0)-ccab1*1.0/(t175970*t175970)*t175981*t175883*t175884*(4.0/3.0)-ccab2*t175890* \
               t175883*t175884*1.0/(t175979*t175979)*(gamma_aa[index]*gcab*t175982*(8.0/3.0)+t175981*t175883*t175884* \
               (8.0/3.0))-ccab4*t175885*t175886*1.0/(t175967*t175967)*t175887*(gamma_aa[index]*gcab*t175982*(1.6E1/ \
               3.0)+t175981*t175883*t175884*1.6E1+t175885*t175984*t175886*(1.6E1/3.0)+gamma_aa[index]*gcab*t175883* \
               t175884*t175983*1.6E1)+ccab3*gamma_aa[index]*gcab*t175883*t175884*t175983*t175976*4.0-ccab3*gamma_aa[index]* \
               gcab*t175883*t175884*1.0/(t175975*t175975)*t175889*(gamma_aa[index]*gcab*t175982*4.0+t175981*t175883* \
               t175884*8.0+gamma_aa[index]*gcab*t175883*t175884*t175983*4.0))-t176016*t175962-(rho_a[index]*((1.0/ \
               (t175902*t175902)*t175946*(b4p*1.0/pow(t175891,5.0/3.0)*t175899*(2.0/3.0)+b2p*c*t175903*(1.0/3.0)+ \
               b3p*c*t175903*t175894*(1.0/2.0)+b1p*c*t175903*1.0/sqrt(t175893)*(1.0/6.0)))/t175907-a1p*c*c0p*t175903* \
               t175944*(2.0/3.0))*2.0+rho_a[index]*(t176011-t175942+t175952*t175949*(t176010+t175942-t176003*t176004* \
               t176009*t175955-a1p*c*c0p*t175943*t175918*(2.0/3.0)))-c0p*t175934*t175943*2.0+c0p*t175944*t175946* \
               2.0-t175952*t175957*t175949)*(ccab0+ccab1*gamma_aa[index]*gcab*t175971*t175888+ccab2*t175890*t175980* \
               t175883*t175884+ccab4*t175885*t175886*t175887*t175968+ccab3*gamma_aa[index]*gcab*t175883*t175884*t175976* \
               t175889)+rho_a[index]*t175962*(ccaa1*gamma_aa[index]*gcaa*t175982*t175993*(8.0/3.0)+ccaa2*t176002* \
               t175981*t175883*t175959*(1.6E1/3.0)+ccaa4*t175960*t175990*t175885*t175984*(3.2E1/3.0)-ccaa1*t175981* \
               t175883*1.0/(t175992*t175992)*t175959*(8.0/3.0)-ccaa2*1.0/(t176001*t176001)*t175890*t175883*t175959* \
               (gamma_aa[index]*gcaa*t175982*(1.6E1/3.0)+t175981*t175883*t175959*(1.6E1/3.0))-ccaa4*t175960*t175885* \
               t175887*1.0/(t175989*t175989)*(gamma_aa[index]*gcaa*t175982*(3.2E1/3.0)+t175960*t175885*t175984*(3.2E1/ \
               3.0)+t175981*t175883*t175959*3.2E1+gamma_aa[index]*gcaa*t175883*t175983*t175959*3.2E1)+ccaa3*gamma_aa[index]* \
               gcaa*t175883*t175983*t175959*t175998*8.0-ccaa3*gamma_aa[index]*gcaa*t175883*t175959*t175889*1.0/(t175997* \
               t175997)*(gamma_aa[index]*gcaa*t175982*8.0+t175981*t175883*t175959*1.6E1+gamma_aa[index]*gcaa*t175883* \
               t175983*t175959*8.0))+rho_a[index]*t176016*(t176011-t175942+t175952*t175949*(t176010-t176011+t175942- \
               t176003*t176004*t176009*t175955))+c0*t176094*t176095*(omega*t176080*t176088*t175918*(2.81474976710656E14/ \
               3.367584493229313E15)-omega*t176080*t175908*(1.0/sqrt(3.141592653589793)*t176047*(t176043*t176083* \
               t175914*(3.74176054803257E14/2.11106232532992E14)+1.0/pow(t176042,3.0/2.0)*t176043*t176084*t176069* \
               (3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15)+omega*t176080* \
               t176082*t175918*(7.0368744177664E13/1.122528164409771E15)+omega*t176080*t175908*(-t176047*t176079+ \
               t176042*t176070*t176071*t175924*(4.951760157141521E27/4.2002315996439E29)+t176070*t176071*t175914* \
               t176069*(2.475880078570761E27/1.4000771998813E29)+t176042*t176070*t176047*t175914*t176079*(2.475880078570761E27/ \
               1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t176082*t176083*t176069*t175908* \
               (3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)+omega*t176083* \
               t176069*t175908*t176088*(1.40737488355328E14/1.122528164409771E15))-c0*t176084*t176094*t176097*(4.0/ \
               3.0)+c0*t176095*t176097*(cx1*gamma_aa[index]*gx*t176029*t175982*(8.0/3.0)-cx1*t176017*t176053*t175981* \
               t175883*(8.0/3.0)+cx2*t176040*t176017*t175981*t175883*(1.6E1/3.0)+cx4*t176025*t176018*t175885*t175984* \
               (3.2E1/3.0)-cx2*t176017*t176067*t176068*t175890*t175883-cx4*t176018*t176063*t176064*t175885*t175887+ \
               cx3*gamma_aa[index]*gx*t176017*t176035*t175883*t175983*8.0-cx3*gamma_aa[index]*gx*t176017*t176057* \
               t176058*t175883*t175889);
        } else {
            v_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            if (rho_a[index] > cutoff_) {
                double t176099 = 1.0/pow(rho_a[index],1.0/3.0);
                double t176100 = c*t176099;
                double t176101 = sqrt(t176100);
                double t176102 = pow(t176100,3.0/2.0);
                double t176103 = c*c;
                double t176104 = 1.0/pow(rho_a[index],2.0/3.0);
                double t176105 = 1.0/c0p;
                double t176106 = b1p*t176101;
                double t176107 = b3p*t176102;
                double t176108 = b4p*t176103*t176104;
                double t176109 = b2p*c*t176099;
                double t176110 = t176106+t176107+t176108+t176109;
                double t176111 = 1.0/t176110;
                double t176112 = t176111*t176105*(1.0/2.0);
                double t176113 = t176112+1.0;
                double t176114 = log(t176113);
                double t176115 = a1p*c*t176099;
                double t176116 = t176115+1.0;
                double t176117 = rho_a[index]*2.0;
                double t176118 = 1.0/pow(t176117,1.0/3.0);
                double t176119 = c*t176118;
                double t176120 = 1.0/pow(rho_a[index],8.0/3.0);
                double t176121 = gamma_aa[index]*gamma_aa[index];
                double t176122 = gcab*gcab;
                double t176123 = t176122*t176122;
                double t176124 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t176125 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t176126 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t176127 = gamma_aa[index]*gcab*t176120;
                double t176128 = t176127+1.0;
                double t176129 = gamma_aa[index]*gcab*t176120*3.0;
                double t176130 = gamma_aa[index]*gcab*t176121*t176122*t176126;
                double t176131 = t176121*t176122*t176125*3.0;
                double t176132 = t176130+t176131+t176129+1.0;
                double t176133 = t176121*t176121;
                double t176134 = gamma_aa[index]*gcab*t176120*4.0;
                double t176135 = gamma_aa[index]*gcab*t176121*t176122*t176126*4.0;
                double t176136 = t176121*t176122*t176125*6.0;
                double t176137 = t176123*t176124*t176133;
                double t176138 = t176134+t176135+t176136+t176137+1.0;
                double t176139 = gamma_aa[index]*gcab*t176120*2.0;
                double t176140 = t176121*t176122*t176125;
                double t176141 = t176140+t176139+1.0;
                double t176142 = pow(2.0,1.0/3.0);
                double t176143 = t176142*2.0;
                double t176144 = t176143-2.0;
                double t176145 = two_13*2.0;
                double t176146 = t176145-2.0;
                double t176147 = 1.0/t176146;
                double t176148 = 1.0/c0f;
                double t176149 = b1f*t176101;
                double t176150 = b3f*t176102;
                double t176151 = b4f*t176103*t176104;
                double t176152 = b2f*c*t176099;
                double t176153 = t176150+t176151+t176152+t176149;
                double t176154 = 1.0/t176153;
                double t176155 = t176154*t176148*(1.0/2.0);
                double t176156 = t176155+1.0;
                double t176157 = log(t176156);
                double t176158 = a1f*c*t176099;
                double t176159 = t176158+1.0;
                double t176160 = c0f*t176157*t176159*2.0;
                double t176161 = c0p*t176114*t176116*2.0;
                double t176162 = gcaa*gcaa;
                double t176163 = t176162*t176162;
                double t176164 = gamma_aa[index]*gcaa*t176120;
                double t176165 = t176164+1.0;
                double t176166 = gamma_aa[index]*gcaa*t176120*3.0;
                double t176167 = gamma_aa[index]*gcaa*t176121*t176126*t176162;
                double t176168 = t176121*t176125*t176162*3.0;
                double t176169 = t176166+t176167+t176168+1.0;
                double t176170 = gamma_aa[index]*gcaa*t176120*4.0;
                double t176171 = gamma_aa[index]*gcaa*t176121*t176126*t176162*4.0;
                double t176172 = t176121*t176125*t176162*6.0;
                double t176173 = t176124*t176133*t176163;
                double t176174 = t176170+t176171+t176172+t176173+1.0;
                double t176175 = gamma_aa[index]*gcaa*t176120*2.0;
                double t176176 = t176121*t176125*t176162;
                double t176177 = t176175+t176176+1.0;
                double t176178 = gx*gx;
                double t176179 = t176178*t176178;
                double t176180 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t176181 = gamma_aa[index]*gx*t176120*4.0;
                double t176182 = gamma_aa[index]*gx*t176121*t176126*t176178*4.0;
                double t176183 = t176121*t176125*t176178*6.0;
                double t176184 = t176124*t176133*t176179;
                double t176185 = t176181+t176182+t176183+t176184+1.0;
                double t176186 = 1.0/t176185;
                double t176187 = cx4*t176124*t176133*t176186*t176179*(4.190715359480463E15/2.251799813685248E15);
                double t176188 = gamma_aa[index]*gx*t176120;
                double t176189 = t176188+1.0;
                double t176190 = 1.0/t176189;
                double t176191 = cx1*gamma_aa[index]*gx*t176120*t176190*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176192 = gamma_aa[index]*gx*t176120*3.0;
                double t176193 = gamma_aa[index]*gx*t176121*t176126*t176178;
                double t176194 = t176121*t176125*t176178*3.0;
                double t176195 = t176192+t176193+t176194+1.0;
                double t176196 = 1.0/t176195;
                double t176197 = cx3*gamma_aa[index]*gx*t176121*t176126*t176178*t176196*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176198 = gamma_aa[index]*gx*t176120*2.0;
                double t176199 = t176121*t176125*t176178;
                double t176200 = t176198+t176199+1.0;
                double t176201 = 1.0/t176200;
                double t176202 = cx2*t176201*t176121*t176125*t176178*(4.190715359480463E15/2.251799813685248E15);
                double t176203 = t176202+t176180+t176191+t176187+t176197;
                double t176204 = 1.0/(omega*omega);
                double t176205 = pow(rho_a[index],2.0/3.0);
                double t176206 = 1.0/t176203;
                double t176210 = t176204*t176205*t176206*(1.4000771998813E29/4.951760157141521E27);
                double t176207 = exp(-t176210);
                double t176208 = sqrt(t176203);
                double t176209 = pow(rho_a[index],4.0/3.0);
                double t176211 = 1.0/(t176189*t176189);
                double t176212 = gx*t176120*3.0;
                double t176213 = gamma_aa[index]*t176125*t176178*6.0;
                double t176214 = gx*t176121*t176126*t176178*3.0;
                double t176215 = t176212+t176213+t176214;
                double t176216 = 1.0/(t176195*t176195);
                double t176217 = gx*t176120*4.0;
                double t176218 = gamma_aa[index]*t176125*t176178*1.2E1;
                double t176219 = gx*t176121*t176126*t176178*1.2E1;
                double t176220 = gamma_aa[index]*t176121*t176124*t176179*4.0;
                double t176221 = t176220+t176217+t176218+t176219;
                double t176222 = 1.0/(t176185*t176185);
                double t176223 = gx*t176120*2.0;
                double t176224 = gamma_aa[index]*t176125*t176178*2.0;
                double t176225 = t176223+t176224;
                double t176226 = 1.0/(t176200*t176200);
                double t176227 = omega*omega;
                double t176228 = t176207-1.0;
                double t176229 = cx1*gx*t176120*t176190*(4.190715359480463E15/2.251799813685248E15);
                double t176230 = cx4*gamma_aa[index]*t176121*t176124*t176186*t176179*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t176231 = cx2*gamma_aa[index]*t176201*t176125*t176178*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t176232 = cx3*gx*t176121*t176126*t176178*t176196*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t176234 = cx1*gamma_aa[index]*t176211*t176125*t176178*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176235 = cx3*gamma_aa[index]*gx*t176121*t176215*t176126*t176216*t176178*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t176236 = cx4*t176221*t176222*t176124*t176133*t176179*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176237 = cx2*t176121*t176125*t176225*t176226*t176178*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176233 = t176230+t176231+t176232-t176234-t176235-t176236-t176237+t176229;
                double t176238 = t176104*t176203*t176227*t176228*(2.475880078570761E27/1.4000771998813E29);
                double t176239 = -t176207+t176238+3.0/2.0;
                double t176240 = 1.0/sqrt(t176203);
                double t176241 = 1.0/omega;
                double t176242 = pow(rho_a[index],1.0/3.0);
                double t176243 = t176240*t176241*t176242*(3.74176054803257E14/7.0368744177664E13);
                double t176244 = erf(t176243);
                double t176245 = t176244*(3.991211251234741E15/2.251799813685248E15);
                double t176246 = t176245-omega*t176208*t176239*t176099*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_aa_[index] = (rho_a[index]*(t176161+t176144*t176147*(t176160-c0p*t176114*t176116*2.0))*2.0- \
                   c0p*rho_a[index]*log((t176105*(1.0/2.0))/(b1p*sqrt(t176119)+b3p*pow(t176119,3.0/2.0)+b4p*t176103*1.0/ \
                   pow(t176117,2.0/3.0)+b2p*c*t176118)+1.0)*(a1p*c*t176118+1.0)*4.0)*((ccab1*gcab*t176120*(1.0/2.0))/ \
                   t176128+(ccab2*gamma_aa[index]*t176122*t176125)/t176141-ccab1*gamma_aa[index]*t176122*t176125*1.0/ \
                   (t176128*t176128)*(1.0/2.0)-ccab2*t176121*t176122*1.0/(t176141*t176141)*t176125*(gcab*t176120+gamma_aa[index]* \
                   t176122*t176125)+(ccab4*gamma_aa[index]*t176121*t176123*t176124*2.0)/t176138+(ccab3*gcab*t176121*t176122* \
                   t176126*(3.0/2.0))/t176132-ccab4*t176123*t176124*t176133*1.0/(t176138*t176138)*(gcab*t176120*2.0+gamma_aa[index]* \
                   t176122*t176125*6.0+gamma_aa[index]*t176121*t176123*t176124*2.0+gcab*t176121*t176122*t176126*6.0)- \
                   ccab3*gamma_aa[index]*gcab*t176121*t176122*1.0/(t176132*t176132)*t176126*(gcab*t176120*(3.0/2.0)+gamma_aa[index]* \
                   t176122*t176125*3.0+gcab*t176121*t176122*t176126*(3.0/2.0)))*2.0-rho_a[index]*(t176161+t176144*t176147* \
                   (t176160-t176161))*((ccaa1*gcaa*t176120)/t176165-ccaa1*gamma_aa[index]*t176125*t176162*1.0/(t176165* \
                   t176165)+(ccaa2*gamma_aa[index]*t176125*t176162*2.0)/t176177-ccaa2*t176121*t176125*t176162*1.0/(t176177* \
                   t176177)*(gcaa*t176120*2.0+gamma_aa[index]*t176125*t176162*2.0)+(ccaa4*gamma_aa[index]*t176121*t176124* \
                   t176163*4.0)/t176174+(ccaa3*gcaa*t176121*t176126*t176162*3.0)/t176169-ccaa4*t176124*t176133*t176163* \
                   1.0/(t176174*t176174)*(gcaa*t176120*4.0+gamma_aa[index]*t176125*t176162*1.2E1+gamma_aa[index]*t176121* \
                   t176124*t176163*4.0+gcaa*t176121*t176126*t176162*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t176121*t176126* \
                   t176162*1.0/(t176169*t176169)*(gcaa*t176120*3.0+gamma_aa[index]*t176125*t176162*6.0+gcaa*t176121*t176126* \
                   t176162*3.0))*2.0-c0*t176209*(omega*t176208*t176246*t176099*(2.81474976710656E14/1.122528164409771E15) \
                   -1.0)*(cx1*gx*t176120*t176190-cx1*gamma_aa[index]*t176211*t176125*t176178+cx2*gamma_aa[index]*t176201* \
                   t176125*t176178*2.0-cx2*t176121*t176125*t176225*t176226*t176178-cx4*t176221*t176222*t176124*t176133* \
                   t176179+cx4*gamma_aa[index]*t176121*t176124*t176186*t176179*4.0+cx3*gx*t176121*t176126*t176178*t176196* \
                   3.0-cx3*gamma_aa[index]*gx*t176121*t176215*t176126*t176216*t176178)*2.0+c0*t176209*(omega*t176208* \
                   t176099*(omega*t176208*t176099*(t176206*t176233*t176207*(1.0/2.0)+t176104*t176233*t176227*t176228* \
                   (2.475880078570761E27/1.4000771998813E29)-1.0/(t176203*t176203)*t176204*t176205*t176233*t176207*(1.4000771998813E29/ \
                   4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14)+omega*t176240*t176233*t176239*t176099* \
                   (3.5184372088832E13/3.74176054803257E14)+1.0/sqrt(3.141592653589793)*1.0/pow(t176203,3.0/2.0)*t176241* \
                   t176233*t176242*t176207*(1.493415679873386E30/1.584563250285287E29))*(2.81474976710656E14/1.122528164409771E15) \
                   -omega*t176240*t176233*t176246*t176099*(1.40737488355328E14/1.122528164409771E15))*(cx0+cx1*gamma_aa[index]* \
                   gx*t176120*t176190+cx2*t176201*t176121*t176125*t176178+cx4*t176124*t176133*t176186*t176179+cx3*gamma_aa[index]* \
                   gx*t176121*t176126*t176178*t176196)*2.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_) {
            double t176249 = rho_a[index]*2.0;
            double t176250 = 1.0/pow(t176249,1.0/3.0);
            double t176251 = c*t176250;
            double t176252 = sqrt(t176251);
            double t176253 = b1p*t176252;
            double t176254 = pow(t176251,3.0/2.0);
            double t176255 = b3p*t176254;
            double t176256 = b2p*c*t176250;
            double t176257 = c*c;
            double t176258 = 1.0/pow(t176249,2.0/3.0);
            double t176259 = b4p*t176257*t176258;
            double t176260 = t176253+t176255+t176256+t176259;
            double t176261 = 1.0/pow(t176249,8.0/3.0);
            double t176262 = 1.0/pow(t176249,7.0/3.0);
            double t176263 = 1.0/sqrt(t176251);
            double t176264 = 1.0/c0p;
            double t176265 = 1.0/t176260;
            double t176266 = t176264*t176265*(1.0/2.0);
            double t176267 = t176266+1.0;
            double t176268 = 1.0/t176267;
            double t176269 = a1p*c*t176250;
            double t176270 = t176269+1.0;
            double t176271 = 1.0/pow(t176249,4.0/3.0);
            double t176273 = b2p*c*t176271*(1.0/3.0);
            double t176274 = 1.0/pow(t176249,5.0/3.0);
            double t176275 = b4p*t176274*t176257*(2.0/3.0);
            double t176276 = b1p*c*t176271*t176263*(1.0/6.0);
            double t176277 = b3p*c*t176252*t176271*(1.0/2.0);
            double t176272 = t176273+t176275+t176276+t176277;
            double t176278 = t176272*t176272;
            double t176279 = 1.0/(t176260*t176260);
            double t176280 = log(t176267);
            double t176281 = gamma_aa[index]*gamma_aa[index];
            double t176282 = gcab*gcab;
            double t176283 = t176281*t176281;
            double t176284 = t176282*t176282;
            double t176285 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t176286 = 1.0/pow(rho_a[index],8.0/3.0);
            double t176287 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t176288 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t176289 = two_13*2.0;
            double t176290 = t176289-2.0;
            double t176291 = 1.0/t176290;
            double t176292 = 1.0/pow(rho_a[index],1.0/3.0);
            double t176293 = c*t176292;
            double t176294 = sqrt(t176293);
            double t176295 = pow(t176293,3.0/2.0);
            double t176296 = 1.0/pow(rho_a[index],2.0/3.0);
            double t176297 = b1p*t176294;
            double t176298 = b3p*t176295;
            double t176299 = b4p*t176257*t176296;
            double t176300 = b2p*c*t176292;
            double t176301 = t176300+t176297+t176298+t176299;
            double t176302 = 1.0/t176301;
            double t176303 = t176302*t176264*(1.0/2.0);
            double t176304 = t176303+1.0;
            double t176305 = log(t176304);
            double t176306 = a1p*c*t176292;
            double t176307 = t176306+1.0;
            double t176308 = gamma_aa[index]*gcab*t176286*4.0;
            double t176309 = gamma_aa[index]*gcab*t176281*t176282*t176287*4.0;
            double t176310 = t176281*t176282*t176288*6.0;
            double t176311 = t176283*t176284*t176285;
            double t176312 = t176310+t176311+t176308+t176309+1.0;
            double t176313 = 1.0/t176312;
            double t176314 = gamma_aa[index]*gcab*t176286;
            double t176315 = t176314+1.0;
            double t176316 = 1.0/t176315;
            double t176317 = gamma_aa[index]*gcab*t176286*3.0;
            double t176318 = gamma_aa[index]*gcab*t176281*t176282*t176287;
            double t176319 = t176281*t176282*t176288*3.0;
            double t176320 = t176317+t176318+t176319+1.0;
            double t176321 = 1.0/t176320;
            double t176322 = gamma_aa[index]*gcab*t176286*2.0;
            double t176323 = t176281*t176282*t176288;
            double t176324 = t176322+t176323+1.0;
            double t176325 = 1.0/t176324;
            double t176326 = 1.0/pow(rho_a[index],1.0E1);
            double t176327 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t176329 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t176330 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t176332 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t176339 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t176340 = gamma_aa[index]*gcab*t176329*(1.6E1/3.0);
            double t176341 = gamma_aa[index]*gcab*t176332*t176281*t176282*1.6E1;
            double t176342 = t176330*t176281*t176282*1.6E1;
            double t176343 = t176283*t176284*t176339*(1.6E1/3.0);
            double t176328 = t176340+t176341+t176342+t176343;
            double t176346 = gamma_aa[index]*gcab*t176329*(8.0/3.0);
            double t176347 = t176330*t176281*t176282*(8.0/3.0);
            double t176331 = t176346+t176347;
            double t176333 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t176334 = 1.0/(t176320*t176320);
            double t176335 = gamma_aa[index]*gcab*t176329*4.0;
            double t176336 = gamma_aa[index]*gcab*t176332*t176281*t176282*4.0;
            double t176337 = t176330*t176281*t176282*8.0;
            double t176338 = t176335+t176336+t176337;
            double t176344 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t176345 = 1.0/(t176312*t176312);
            double t176348 = 1.0/(t176324*t176324);
            double t176349 = pow(2.0,1.0/3.0);
            double t176350 = t176349*2.0;
            double t176351 = t176350-2.0;
            double t176352 = a1f*c*t176292;
            double t176353 = t176352+1.0;
            double t176354 = 1.0/c0f;
            double t176355 = b1f*t176294;
            double t176356 = b3f*t176295;
            double t176357 = b4f*t176257*t176296;
            double t176358 = b2f*c*t176292;
            double t176359 = t176355+t176356+t176357+t176358;
            double t176360 = 1.0/t176359;
            double t176361 = t176360*t176354*(1.0/2.0);
            double t176362 = t176361+1.0;
            double t176363 = 1.0/pow(rho_a[index],4.0/3.0);
            double t176364 = 1.0/pow(rho_a[index],5.0/3.0);
            double t176365 = 1.0/sqrt(t176293);
            double t176366 = log(t176362);
            double t176367 = 1.0/t176304;
            double t176368 = 1.0/(t176301*t176301);
            double t176369 = b4p*t176364*t176257*(2.0/3.0);
            double t176370 = b2p*c*t176363*(1.0/3.0);
            double t176371 = b1p*c*t176363*t176365*(1.0/6.0);
            double t176372 = b3p*c*t176363*t176294*(1.0/2.0);
            double t176373 = t176370+t176371+t176372+t176369;
            double t176374 = t176307*t176373*t176367*t176368;
            double t176375 = gcaa*gcaa;
            double t176376 = t176375*t176375;
            double t176377 = 1.0/t176362;
            double t176378 = 1.0/(t176359*t176359);
            double t176379 = b4f*t176364*t176257*(2.0/3.0);
            double t176380 = b2f*c*t176363*(1.0/3.0);
            double t176381 = b1f*c*t176363*t176365*(1.0/6.0);
            double t176382 = b3f*c*t176363*t176294*(1.0/2.0);
            double t176383 = t176380+t176381+t176382+t176379;
            double t176384 = a1f*c*c0f*t176363*t176366*(2.0/3.0);
            double t176385 = a1p*c*c0p*t176305*t176363*(2.0/3.0);
            double t176386 = c0f*t176353*t176366*2.0;
            double t176387 = c0p*t176305*t176307*2.0;
            double t176388 = 1.0/(t176315*t176315);
            double t176389 = ccab4*t176313*t176283*t176284*t176285;
            double t176390 = ccab1*gamma_aa[index]*gcab*t176316*t176286;
            double t176391 = ccab3*gamma_aa[index]*gcab*t176321*t176281*t176282*t176287;
            double t176392 = ccab2*t176325*t176281*t176282*t176288;
            double t176393 = ccab0+t176390+t176391+t176392+t176389;
            double t176394 = b2p*c*t176262*(4.0/9.0);
            double t176395 = b4p*t176261*t176257*(1.0E1/9.0);
            double t176396 = 1.0/pow(t176251,3.0/2.0);
            double t176397 = b3p*t176261*t176263*t176257*(1.0/1.2E1);
            double t176398 = b1p*c*t176262*t176263*(2.0/9.0);
            double t176399 = b3p*c*t176252*t176262*(2.0/3.0);
            double t176400 = t176394+t176395+t176397+t176398+t176399-b1p*t176261*t176257*t176396*(1.0/3.6E1);
            double t176401 = t176400*t176270*t176268*t176279;
            double t176402 = 1.0/(t176260*t176260*t176260);
            double t176403 = 1.0/(t176267*t176267);
            double t176404 = 1.0/(t176260*t176260*t176260*t176260);
            double t176405 = t176403*t176404*t176270*t176264*t176278*(1.0/2.0);
            double t176406 = 1.0/d2fz0;
            double t176407 = 1.0/(rho_a[index]*rho_a[index]);
            double t176408 = 1.0/Aa;
            double t176409 = b1a*t176252;
            double t176410 = b3a*t176254;
            double t176411 = b2a*c*t176250;
            double t176412 = b4a*t176257*t176258;
            double t176413 = t176410+t176411+t176412+t176409;
            double t176414 = 1.0/t176413;
            double t176415 = t176414*t176408*(1.0/2.0);
            double t176416 = t176415+1.0;
            double t176417 = log(t176416);
            double t176418 = a1a*c*t176250;
            double t176419 = t176418+1.0;
            double t176420 = a1p*c*t176271*t176272*t176268*t176279*(2.0/3.0);
            double t176421 = 1.0/pow(rho_a[index],7.0/3.0);
            double t176422 = 1.0/pow(t176293,3.0/2.0);
            double t176423 = t176383*t176383;
            double t176424 = t176373*t176373;
            double t176425 = 1.0/(t176301*t176301*t176301);
            double t176426 = t176307*t176424*t176425*t176367*2.0;
            double t176427 = b4p*t176257*t176286*(1.0E1/9.0);
            double t176428 = b2p*c*t176421*(4.0/9.0);
            double t176429 = b3p*t176257*t176365*t176286*(1.0/1.2E1);
            double t176430 = b1p*c*t176421*t176365*(2.0/9.0);
            double t176431 = b3p*c*t176421*t176294*(2.0/3.0);
            double t176505 = b1p*t176422*t176257*t176286*(1.0/3.6E1);
            double t176432 = t176430+t176431-t176505+t176427+t176428+t176429;
            double t176433 = 1.0/(t176304*t176304);
            double t176434 = 1.0/(t176301*t176301*t176301*t176301);
            double t176435 = a1p*c*c0p*t176421*t176305*(8.0/9.0);
            double t176470 = t176353*t176383*t176377*t176378;
            double t176436 = -t176470+t176374+t176384-t176385;
            double t176437 = a1p*c*c0p*t176271*t176280*(4.0/3.0);
            double t176438 = t176386-t176387;
            double t176439 = gamma_aa[index]*gcaa*t176286*4.0;
            double t176440 = gamma_aa[index]*gcaa*t176281*t176375*t176287*4.0;
            double t176441 = t176281*t176375*t176288*6.0;
            double t176442 = t176283*t176285*t176376;
            double t176443 = t176440+t176441+t176442+t176439+1.0;
            double t176444 = 1.0/t176443;
            double t176445 = gamma_aa[index]*gcaa*t176286;
            double t176446 = t176445+1.0;
            double t176447 = 1.0/t176446;
            double t176448 = gamma_aa[index]*gcaa*t176286*3.0;
            double t176449 = gamma_aa[index]*gcaa*t176281*t176375*t176287;
            double t176450 = t176281*t176375*t176288*3.0;
            double t176451 = t176450+t176448+t176449+1.0;
            double t176452 = 1.0/t176451;
            double t176453 = gamma_aa[index]*gcaa*t176286*2.0;
            double t176454 = t176281*t176375*t176288;
            double t176455 = t176453+t176454+1.0;
            double t176456 = 1.0/t176455;
            double t176457 = t176351*t176291*t176438;
            double t176458 = t176457+t176387;
            double t176459 = 1.0/(t176315*t176315*t176315);
            double t176460 = ccab1*gamma_aa[index]*gcab*t176281*t176326*t176282*t176459*(3.2E1/9.0);
            double t176461 = t176328*t176328;
            double t176462 = 1.0/(t176312*t176312*t176312);
            double t176463 = ccab4*t176461*t176462*t176283*t176284*t176285*2.0;
            double t176464 = t176331*t176331;
            double t176465 = 1.0/(t176324*t176324*t176324);
            double t176466 = ccab2*t176281*t176282*t176464*t176465*t176288*2.0;
            double t176467 = t176338*t176338;
            double t176468 = 1.0/(t176320*t176320*t176320);
            double t176469 = ccab3*gamma_aa[index]*gcab*t176281*t176282*t176287*t176467*t176468*2.0;
            double t176471 = ccaa4*t176444*t176283*t176339*t176376*(3.2E1/3.0);
            double t176472 = ccaa1*gamma_aa[index]*gcaa*t176329*t176447*(8.0/3.0);
            double t176473 = ccaa3*gamma_aa[index]*gcaa*t176332*t176281*t176452*t176375*8.0;
            double t176474 = ccaa2*t176330*t176281*t176375*t176456*(1.6E1/3.0);
            double t176475 = 1.0/(t176446*t176446);
            double t176476 = gamma_aa[index]*gcaa*t176329*8.0;
            double t176477 = gamma_aa[index]*gcaa*t176332*t176281*t176375*8.0;
            double t176478 = t176330*t176281*t176375*1.6E1;
            double t176479 = t176476+t176477+t176478;
            double t176480 = 1.0/(t176451*t176451);
            double t176481 = gamma_aa[index]*gcaa*t176329*(3.2E1/3.0);
            double t176482 = gamma_aa[index]*gcaa*t176332*t176281*t176375*3.2E1;
            double t176483 = t176330*t176281*t176375*3.2E1;
            double t176484 = t176283*t176339*t176376*(3.2E1/3.0);
            double t176485 = t176481+t176482+t176483+t176484;
            double t176486 = 1.0/(t176443*t176443);
            double t176487 = gamma_aa[index]*gcaa*t176329*(1.6E1/3.0);
            double t176488 = t176330*t176281*t176375*(1.6E1/3.0);
            double t176489 = t176487+t176488;
            double t176490 = 1.0/(t176455*t176455);
            double t176491 = t176471+t176472+t176473+t176474-ccaa1*t176330*t176281*t176375*t176475*(8.0/3.0)- \
               ccaa2*t176281*t176490*t176375*t176288*t176489-ccaa4*t176283*t176285*t176376*t176485*t176486-ccaa3* \
               gamma_aa[index]*gcaa*t176281*t176480*t176375*t176287*t176479;
            double t176492 = ccaa4*t176444*t176283*t176285*t176376;
            double t176493 = ccaa1*gamma_aa[index]*gcaa*t176447*t176286;
            double t176494 = ccaa3*gamma_aa[index]*gcaa*t176281*t176452*t176375*t176287;
            double t176495 = ccaa2*t176281*t176375*t176456*t176288;
            double t176496 = ccaa0+t176492+t176493+t176494+t176495;
            double t176497 = 1.0/(t176359*t176359*t176359);
            double t176498 = b4f*t176257*t176286*(1.0E1/9.0);
            double t176499 = b2f*c*t176421*(4.0/9.0);
            double t176500 = b3f*t176257*t176365*t176286*(1.0/1.2E1);
            double t176501 = b1f*c*t176421*t176365*(2.0/9.0);
            double t176502 = b3f*c*t176421*t176294*(2.0/3.0);
            double t176503 = t176500+t176501+t176502+t176498+t176499-b1f*t176422*t176257*t176286*(1.0/3.6E1);
            double t176504 = t176503*t176353*t176377*t176378;
            double t176506 = t176432*t176307*t176367*t176368;
            double t176507 = 1.0/(t176362*t176362);
            double t176508 = 1.0/(t176359*t176359*t176359*t176359);
            double t176509 = t176423*t176353*t176354*t176507*t176508*(1.0/2.0);
            double t176510 = t176307*t176424*t176433*t176434*t176264*(1.0/2.0);
            double t176511 = a1f*c*t176363*t176383*t176377*t176378*(2.0/3.0);
            double t176512 = a1p*c*t176363*t176373*t176367*t176368*(2.0/3.0);
            double t176513 = gx*gx;
            double t176514 = t176513*t176513;
            double t176515 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t176516 = gamma_aa[index]*gx*t176286*4.0;
            double t176517 = gamma_aa[index]*gx*t176513*t176281*t176287*4.0;
            double t176518 = t176513*t176281*t176288*6.0;
            double t176519 = t176514*t176283*t176285;
            double t176520 = t176516+t176517+t176518+t176519+1.0;
            double t176521 = 1.0/t176520;
            double t176522 = cx4*t176521*t176514*t176283*t176285*(4.190715359480463E15/2.251799813685248E15);
            double t176523 = gamma_aa[index]*gx*t176286;
            double t176524 = t176523+1.0;
            double t176525 = 1.0/t176524;
            double t176526 = cx1*gamma_aa[index]*gx*t176525*t176286*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176527 = gamma_aa[index]*gx*t176286*3.0;
            double t176528 = gamma_aa[index]*gx*t176513*t176281*t176287;
            double t176529 = t176513*t176281*t176288*3.0;
            double t176530 = t176527+t176528+t176529+1.0;
            double t176531 = 1.0/t176530;
            double t176532 = cx3*gamma_aa[index]*gx*t176513*t176531*t176281*t176287*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176533 = gamma_aa[index]*gx*t176286*2.0;
            double t176534 = t176513*t176281*t176288;
            double t176535 = t176533+t176534+1.0;
            double t176536 = 1.0/t176535;
            double t176537 = cx2*t176513*t176281*t176536*t176288*(4.190715359480463E15/2.251799813685248E15);
            double t176538 = t176522+t176532+t176515+t176526+t176537;
            double t176539 = 1.0/(omega*omega);
            double t176540 = pow(rho_a[index],2.0/3.0);
            double t176541 = 1.0/t176538;
            double t176560 = t176540*t176541*t176539*(1.4000771998813E29/4.951760157141521E27);
            double t176542 = exp(-t176560);
            double t176543 = sqrt(t176538);
            double t176551 = gamma_aa[index]*gx*t176329*(3.2E1/3.0);
            double t176552 = gamma_aa[index]*gx*t176332*t176513*t176281*3.2E1;
            double t176553 = t176330*t176513*t176281*3.2E1;
            double t176554 = t176514*t176283*t176339*(3.2E1/3.0);
            double t176544 = t176551+t176552+t176553+t176554;
            double t176556 = gamma_aa[index]*gx*t176329*(1.6E1/3.0);
            double t176557 = t176330*t176513*t176281*(1.6E1/3.0);
            double t176545 = t176556+t176557;
            double t176546 = 1.0/(t176530*t176530);
            double t176547 = gamma_aa[index]*gx*t176329*8.0;
            double t176548 = gamma_aa[index]*gx*t176332*t176513*t176281*8.0;
            double t176549 = t176330*t176513*t176281*1.6E1;
            double t176550 = t176547+t176548+t176549;
            double t176555 = 1.0/(t176520*t176520);
            double t176558 = 1.0/(t176535*t176535);
            double t176559 = pow(rho_a[index],1.0/3.0);
            double t176561 = 1.0/omega;
            double t176562 = 1.0/sqrt(t176538);
            double t176563 = 1.0/(t176524*t176524);
            double t176564 = omega*omega;
            double t176565 = t176542-1.0;
            double t176566 = t176564*t176538*t176565*t176296*(2.475880078570761E27/1.4000771998813E29);
            double t176567 = -t176542+t176566+3.0/2.0;
            double t176568 = cx4*t176521*t176514*t176283*t176339*(1.396905119826821E15/7.0368744177664E13);
            double t176569 = cx1*gamma_aa[index]*gx*t176525*t176329*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t176570 = cx3*gamma_aa[index]*gx*t176332*t176513*t176531*t176281*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t176571 = cx2*t176330*t176513*t176281*t176536*(1.396905119826821E15/1.40737488355328E14);
            double t176573 = cx1*t176330*t176513*t176281*t176563*(1.396905119826821E15/2.81474976710656E14);
            double t176574 = cx3*gamma_aa[index]*gx*t176513*t176550*t176281*t176546*t176287*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t176575 = cx4*t176514*t176283*t176544*t176285*t176555*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176576 = cx2*t176513*t176281*t176545*t176288*t176558*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176572 = t176570+t176571-t176573-t176574-t176575-t176576+t176568+t176569;
            double t176577 = t176541*t176292*t176539*(1.4000771998813E29/7.427640235712282E27);
            double t176578 = 1.0/(t176538*t176538);
            double t176579 = t176540*t176572*t176539*t176578*(1.4000771998813E29/4.951760157141521E27);
            double t176580 = t176577+t176579;
            double t176581 = t176561*t176562*t176559*(3.74176054803257E14/7.0368744177664E13);
            double t176582 = erf(t176581);
            double t176583 = t176582*(3.991211251234741E15/2.251799813685248E15);
            double t176585 = omega*t176543*t176292*t176567*(7.0368744177664E13/3.74176054803257E14);
            double t176584 = t176583-t176585;
            double t176586 = omega*t176543*t176292*t176584*(2.81474976710656E14/1.122528164409771E15);
            double t176587 = t176586-1.0;
            double t176588 = cx4*t176521*t176514*t176283*t176285;
            double t176589 = cx1*gamma_aa[index]*gx*t176525*t176286;
            double t176590 = cx3*gamma_aa[index]*gx*t176513*t176531*t176281*t176287;
            double t176591 = cx2*t176513*t176281*t176536*t176288;
            double t176592 = cx0+t176590+t176591+t176588+t176589;
            double t176593 = pow(rho_a[index],4.0/3.0);
            double t176594 = 1.0/sqrt(3.141592653589793);
            double t176595 = t176561*t176562*t176296*(3.74176054803257E14/2.11106232532992E14);
            double t176596 = 1.0/pow(t176538,3.0/2.0);
            double t176597 = t176561*t176572*t176559*t176596*(3.74176054803257E14/1.40737488355328E14);
            double t176598 = t176595+t176597;
            double t176599 = t176542*t176594*t176598*(3.991211251234741E15/1.125899906842624E15);
            double t176600 = omega*t176363*t176543*t176567*(7.0368744177664E13/1.122528164409771E15);
            double t176601 = t176364*t176564*t176538*t176565*(4.951760157141521E27/4.2002315996439E29);
            double t176602 = t176572*t176564*t176565*t176296*(2.475880078570761E27/1.4000771998813E29);
            double t176603 = t176542*t176580*t176564*t176538*t176296*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t176627 = t176542*t176580;
            double t176604 = t176601+t176602+t176603-t176627;
            double t176605 = omega*t176604*t176543*t176292*(7.0368744177664E13/3.74176054803257E14);
            double t176606 = omega*t176292*t176562*t176572*t176567*(3.5184372088832E13/3.74176054803257E14);
            double t176607 = t176600+t176605+t176606+t176599;
            double t176608 = 1.0/(t176524*t176524*t176524);
            double t176609 = t176544*t176544;
            double t176610 = 1.0/(t176520*t176520*t176520);
            double t176611 = t176545*t176545;
            double t176612 = 1.0/(t176535*t176535*t176535);
            double t176613 = gamma_aa[index]*gx*t176333*(8.8E1/3.0);
            double t176614 = gamma_aa[index]*gx*t176513*t176281*t176326*7.2E1;
            double t176615 = t176513*t176281*t176327*(3.04E2/3.0);
            double t176616 = t176613+t176614+t176615;
            double t176617 = t176550*t176550;
            double t176618 = 1.0/(t176530*t176530*t176530);
            double t176619 = gamma_aa[index]*gx*t176333*(3.52E2/9.0);
            double t176620 = gamma_aa[index]*gx*t176513*t176281*t176326*2.88E2;
            double t176621 = t176513*t176281*t176327*(6.08E2/3.0);
            double t176622 = t176514*t176344*t176283*(1.12E3/9.0);
            double t176623 = t176620+t176621+t176622+t176619;
            double t176624 = gamma_aa[index]*gx*t176333*(1.76E2/9.0);
            double t176625 = t176513*t176281*t176327*(3.04E2/9.0);
            double t176626 = t176624+t176625;
            double t176628 = t176572*t176572;
            double t176629 = cx4*t176521*t176514*t176344*t176283*(4.889167919393874E16/2.11106232532992E14);
            double t176630 = cx1*gamma_aa[index]*gx*t176333*t176525*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t176631 = cx3*gamma_aa[index]*gx*t176513*t176531*t176281*t176326*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t176632 = cx2*t176513*t176281*t176327*t176536*(2.65411972767096E16/4.22212465065984E14);
            double t176633 = cx1*gamma_aa[index]*gx*t176513*t176281*t176326*t176608*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t176634 = cx4*t176610*t176514*t176283*t176285*t176609*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t176635 = cx2*t176611*t176513*t176612*t176281*t176288*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t176636 = cx3*gamma_aa[index]*gx*t176513*t176281*t176617*t176618*t176287*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t176638 = cx1*t176513*t176281*t176327*t176563*(1.257214607844139E16/2.81474976710656E14);
            double t176639 = cx3*gamma_aa[index]*gx*t176332*t176513*t176550*t176281*t176546*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t176640 = cx3*gamma_aa[index]*gx*t176513*t176281*t176616*t176546*t176287*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t176641 = cx4*t176514*t176283*t176544*t176339*t176555*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t176642 = cx4*t176514*t176623*t176283*t176285*t176555*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176643 = cx2*t176330*t176513*t176281*t176545*t176558*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t176644 = cx2*t176513*t176281*t176626*t176288*t176558*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t176637 = t176630+t176631-t176640+t176632-t176641+t176633-t176642+t176634-t176643+t176635- \
               t176644+t176636+t176629-t176638-t176639;
            double t176645 = t176541*t176363*t176539*(1.4000771998813E29/2.228292070713684E28);
            double t176646 = 1.0/(t176538*t176538*t176538);
            double t176647 = t176540*t176637*t176539*t176578*(1.4000771998813E29/4.951760157141521E27);
            double t176648 = t176645+t176647-t176540*t176628*t176646*t176539*(1.4000771998813E29/2.475880078570761E27) \
               -t176292*t176572*t176539*t176578*(1.4000771998813E29/3.713820117856141E27);
            double t176649 = t176580*t176580;
            double t176650 = omega*t176363*t176543*t176584*(2.81474976710656E14/3.367584493229313E15);
            double t176651 = omega*t176292*t176562*t176572*t176584*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t176652 = t176650+t176651-omega*t176543*t176292*t176607*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t176653 = cx4*t176521*t176514*t176283*t176339*(3.2E1/3.0);
            double t176654 = cx1*gamma_aa[index]*gx*t176525*t176329*(8.0/3.0);
            double t176655 = cx3*gamma_aa[index]*gx*t176332*t176513*t176531*t176281*8.0;
            double t176656 = cx2*t176330*t176513*t176281*t176536*(1.6E1/3.0);
            double t176657 = t176653+t176654+t176655+t176656-cx1*t176330*t176513*t176281*t176563*(8.0/3.0)-cx2* \
               t176513*t176281*t176545*t176288*t176558-cx4*t176514*t176283*t176544*t176285*t176555-cx3*gamma_aa[index]* \
               gx*t176513*t176550*t176281*t176546*t176287;
            v_rho_a_rho_a_[index] = -t176393*(-t176437-rho_a[index]*(t176401+t176420+t176405-t176402*t176270* \
               t176268*t176278*2.0-a1p*c*c0p*t176262*t176280*(8.0/9.0)+Aa*t176406*t176407*t176291*t176417*t176419* \
               (4.0/9.0))*2.0+rho_a[index]*(t176510+t176512+t176506-t176426-t176435+t176351*t176291*(t176511+t176504+ \
               t176426+t176435+t176509-t176432*t176307*t176367*t176368-t176423*t176353*t176377*t176497*2.0-a1f*c* \
               c0f*t176421*t176366*(8.0/9.0)-t176307*t176424*t176433*t176434*t176264*(1.0/2.0)-a1p*c*t176363*t176373* \
               t176367*t176368*(2.0/3.0)))+t176351*t176291*t176436*2.0+t176270*t176272*t176268*t176279*2.0-t176307* \
               t176373*t176367*t176368*2.0+a1p*c*c0p*t176305*t176363*(4.0/3.0))+t176491*t176458*2.0+(rho_a[index]* \
               (t176387+t176351*t176291*(t176386-c0p*t176305*t176307*2.0))*2.0-c0p*rho_a[index]*t176270*t176280*4.0) \
               *(t176460+t176463+t176466+t176469+ccab1*gamma_aa[index]*gcab*t176333*t176316*(4.4E1/9.0)+ccab2*t176325* \
               t176281*t176282*t176327*(4.0E1/3.0)+ccab4*t176313*t176344*t176283*t176284*(3.68E2/9.0)-ccab1*t176281* \
               t176282*t176327*t176388*(7.6E1/9.0)-ccab2*t176330*t176331*t176281*t176282*t176348*(1.6E1/3.0)-ccab4* \
               t176345*t176283*t176328*t176284*t176339*(3.2E1/3.0)-ccab2*t176281*t176282*t176348*t176288*(gamma_aa[index]* \
               gcab*t176333*(8.8E1/9.0)+t176281*t176282*t176327*(4.0E1/3.0))-ccab4*t176345*t176283*t176284*t176285* \
               (gamma_aa[index]*gcab*t176333*(1.76E2/9.0)+t176281*t176282*t176327*8.0E1+t176344*t176283*t176284*(3.68E2/ \
               9.0)+gamma_aa[index]*gcab*t176281*t176326*t176282*(3.04E2/3.0))+ccab3*gamma_aa[index]*gcab*t176321* \
               t176281*t176326*t176282*(7.6E1/3.0)-ccab3*gamma_aa[index]*gcab*t176334*t176281*t176282*t176287*(gamma_aa[index]* \
               gcab*t176333*(4.4E1/3.0)+t176281*t176282*t176327*4.0E1+gamma_aa[index]*gcab*t176281*t176326*t176282* \
               (7.6E1/3.0))-ccab3*gamma_aa[index]*gcab*t176332*t176334*t176281*t176282*t176338*8.0)+t176496*(-t176374+ \
               t176385+t176351*t176291*(t176374+t176384-t176353*t176383*t176377*t176378-a1p*c*c0p*t176305*t176363* \
               (2.0/3.0)))*2.0+(-t176387+rho_a[index]*(-t176374+t176385+t176351*t176291*t176436)+rho_a[index]*(t176270* \
               t176272*t176268*t176279-a1p*c*c0p*t176271*t176280*(2.0/3.0))*2.0+c0p*t176270*t176280*2.0-t176351*t176291* \
               t176438)*(ccab1*gamma_aa[index]*gcab*t176316*t176329*(4.0/3.0)+ccab2*t176330*t176325*t176281*t176282* \
               (8.0/3.0)-ccab1*t176330*t176281*t176282*t176388*(4.0/3.0)+ccab4*t176313*t176283*t176284*t176339*(1.6E1/ \
               3.0)-ccab2*t176331*t176281*t176282*t176348*t176288-ccab4*t176345*t176283*t176328*t176284*t176285+ccab3* \
               gamma_aa[index]*gcab*t176321*t176332*t176281*t176282*4.0-ccab3*gamma_aa[index]*gcab*t176334*t176281* \
               t176282*t176338*t176287)*4.0+(rho_a[index]*t176458*2.0-c0p*rho_a[index]*t176270*t176280*4.0)*(t176460+ \
               t176463+t176466+t176469+ccab2*t176325*t176281*t176282*t176327*(3.2E1/9.0)+ccab4*t176313*t176344*t176283* \
               t176284*(6.4E1/3.0)-ccab1*t176281*t176282*t176327*t176388*(3.2E1/9.0)-ccab2*t176344*t176283*t176284* \
               t176348*(3.2E1/9.0)-ccab2*t176330*t176331*t176281*t176282*t176348*(1.6E1/3.0)-ccab4*t176345*t176283* \
               t176328*t176284*t176339*(3.2E1/3.0)-ccab4*t176345*t176283*t176284*t176285*(t176281*t176282*t176327* \
               (6.4E1/3.0)+t176344*t176283*t176284*(6.4E1/3.0)+gamma_aa[index]*gcab*t176281*t176326*t176282*(1.28E2/ \
               3.0))+ccab3*gamma_aa[index]*gcab*t176321*t176281*t176326*t176282*(3.2E1/3.0)-ccab3*gamma_aa[index]* \
               gcab*t176334*t176281*t176282*t176287*(t176281*t176282*t176327*(3.2E1/3.0)+gamma_aa[index]*gcab*t176281* \
               t176326*t176282*(3.2E1/3.0))-ccab3*gamma_aa[index]*gcab*t176332*t176334*t176281*t176282*t176338*8.0) \
               +t176393*(t176437+rho_a[index]*(t176401+t176420+t176405-t176402*t176270*t176268*t176278*2.0-a1p*c* \
               c0p*t176262*t176280*(8.0/9.0)-Aa*t176406*t176407*t176291*t176417*t176419*(4.0/9.0))*2.0-t176270*t176272* \
               t176268*t176279*2.0)+rho_a[index]*t176491*(t176374-t176385+t176351*t176291*(t176470-t176374-t176384+ \
               t176385))*2.0+rho_a[index]*t176496*(t176510+t176512+t176506-t176426-t176435-t176351*t176291*(t176510- \
               t176511+t176512-t176504+t176506-t176426-t176435-t176509+t176423*t176353*t176377*t176497*2.0+a1f*c* \
               c0f*t176421*t176366*(8.0/9.0)))-rho_a[index]*t176458*(ccaa1*gamma_aa[index]*gcaa*t176333*t176447*(8.8E1/ \
               9.0)-ccaa1*t176281*t176327*t176375*t176475*2.4E1+ccaa2*t176281*t176327*t176375*t176456*(3.04E2/9.0) \
               +ccaa4*t176344*t176444*t176283*t176376*(1.12E3/9.0)-ccaa2*t176330*t176281*t176490*t176375*t176489* \
               (3.2E1/3.0)-ccaa4*t176283*t176339*t176376*t176485*t176486*(6.4E1/3.0)-ccaa2*t176281*t176490*t176375* \
               t176288*(gamma_aa[index]*gcaa*t176333*(1.76E2/9.0)+t176281*t176327*t176375*(3.04E2/9.0))-ccaa4*t176283* \
               t176285*t176376*t176486*(gamma_aa[index]*gcaa*t176333*(3.52E2/9.0)+t176281*t176327*t176375*(6.08E2/ \
               3.0)+t176344*t176283*t176376*(1.12E3/9.0)+gamma_aa[index]*gcaa*t176281*t176326*t176375*2.88E2)+ccaa4* \
               1.0/(t176443*t176443*t176443)*t176283*t176285*t176376*(t176485*t176485)*2.0+ccaa2*t176281*1.0/(t176455* \
               t176455*t176455)*t176375*t176288*(t176489*t176489)*2.0+ccaa3*gamma_aa[index]*gcaa*t176281*t176326* \
               t176452*t176375*7.2E1+ccaa1*gamma_aa[index]*gcaa*t176281*t176326*1.0/(t176446*t176446*t176446)*t176375* \
               (1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*1.0/(t176451*t176451*t176451)*t176281*t176375*t176287*(t176479* \
               t176479)*2.0-ccaa3*gamma_aa[index]*gcaa*t176281*t176480*t176375*t176287*(gamma_aa[index]*gcaa*t176333* \
               (8.8E1/3.0)+t176281*t176327*t176375*(3.04E2/3.0)+gamma_aa[index]*gcaa*t176281*t176326*t176375*7.2E1) \
               -ccaa3*gamma_aa[index]*gcaa*t176332*t176281*t176480*t176375*t176479*1.6E1)+c0*t176652*t176592*t176559* \
               (8.0/3.0)-c0*t176652*t176593*t176657*2.0-c0*t176592*t176296*t176587*(4.0/9.0)+c0*t176657*t176559*t176587* \
               (8.0/3.0)+c0*t176592*t176593*(omega*t176421*t176543*t176584*(-1.125899906842624E15/1.010275347968794E16) \
               +omega*t176363*t176543*t176607*(5.62949953421312E14/3.367584493229313E15)+omega*t176543*t176292*(t176542* \
               t176594*(t176561*t176364*t176562*(3.74176054803257E14/3.16659348799488E14)-t176561*t176572*t176296* \
               t176596*(3.74176054803257E14/2.11106232532992E14)+t176561*t176637*t176559*t176596*(3.74176054803257E14/ \
               1.40737488355328E14)-t176561*1.0/pow(t176538,5.0/2.0)*t176628*t176559*(1.122528164409771E15/2.81474976710656E14) \
               )*(3.991211251234741E15/1.125899906842624E15)+omega*t176604*t176363*t176543*(1.40737488355328E14/1.122528164409771E15) \
               +omega*t176421*t176543*t176567*(2.81474976710656E14/3.367584493229313E15)+t176542*t176580*t176594* \
               t176598*(3.991211251234741E15/1.125899906842624E15)+omega*t176543*t176292*(-t176542*t176648-t176542* \
               t176649+t176364*t176572*t176564*t176565*(9.903520314283042E27/4.2002315996439E29)+t176564*t176286* \
               t176538*t176565*(2.475880078570761E28/1.26006947989317E30)+t176564*t176565*t176637*t176296*(2.475880078570761E27/ \
               1.4000771998813E29)+t176542*t176364*t176580*t176564*t176538*(9.903520314283042E27/4.2002315996439E29) \
               +t176542*t176580*t176572*t176564*t176296*(4.951760157141521E27/1.4000771998813E29)+t176542*t176564* \
               t176538*t176296*t176648*(2.475880078570761E27/1.4000771998813E29)+t176542*t176564*t176538*t176296* \
               t176649*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega* \
               t176604*t176292*t176562*t176572*(7.0368744177664E13/3.74176054803257E14)+omega*t176363*t176562*t176572* \
               t176567*(7.0368744177664E13/1.122528164409771E15)+omega*t176292*t176562*t176637*t176567*(3.5184372088832E13/ \
               3.74176054803257E14)-omega*t176292*t176628*t176567*t176596*(1.7592186044416E13/3.74176054803257E14) \
               )*(2.81474976710656E14/1.122528164409771E15)+omega*t176292*t176562*t176607*t176572*(2.81474976710656E14/ \
               1.122528164409771E15)-omega*t176363*t176562*t176572*t176584*(2.81474976710656E14/3.367584493229313E15) \
               -omega*t176292*t176562*t176637*t176584*(1.40737488355328E14/1.122528164409771E15)+omega*t176292*t176628* \
               t176584*t176596*(7.0368744177664E13/1.122528164409771E15))-c0*t176593*t176587*(cx1*gamma_aa[index]* \
               gx*t176333*t176525*(8.8E1/9.0)-cx1*t176513*t176281*t176327*t176563*2.4E1+cx2*t176513*t176281*t176327* \
               t176536*(3.04E2/9.0)+cx4*t176521*t176514*t176344*t176283*(1.12E3/9.0)+cx2*t176611*t176513*t176612* \
               t176281*t176288*2.0-cx2*t176330*t176513*t176281*t176545*t176558*(3.2E1/3.0)-cx2*t176513*t176281*t176626* \
               t176288*t176558+cx4*t176610*t176514*t176283*t176285*t176609*2.0-cx4*t176514*t176623*t176283*t176285* \
               t176555-cx4*t176514*t176283*t176544*t176339*t176555*(6.4E1/3.0)+cx1*gamma_aa[index]*gx*t176513*t176281* \
               t176326*t176608*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t176513*t176531*t176281*t176326*7.2E1-cx3*gamma_aa[index]* \
               gx*t176332*t176513*t176550*t176281*t176546*1.6E1-cx3*gamma_aa[index]*gx*t176513*t176281*t176616*t176546* \
               t176287+cx3*gamma_aa[index]*gx*t176513*t176281*t176617*t176618*t176287*2.0);
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t176659 = 1.0/pow(rho_a[index],1.0/3.0);
                double t176660 = c*t176659;
                double t176661 = sqrt(t176660);
                double t176662 = pow(t176660,3.0/2.0);
                double t176663 = c*c;
                double t176664 = 1.0/pow(rho_a[index],2.0/3.0);
                double t176665 = 1.0/c0p;
                double t176666 = b1p*t176661;
                double t176667 = b3p*t176662;
                double t176668 = b4p*t176663*t176664;
                double t176669 = b2p*c*t176659;
                double t176670 = t176666+t176667+t176668+t176669;
                double t176671 = 1.0/t176670;
                double t176672 = t176671*t176665*(1.0/2.0);
                double t176673 = t176672+1.0;
                double t176674 = log(t176673);
                double t176675 = a1p*c*t176659;
                double t176676 = t176675+1.0;
                double t176677 = 1.0/pow(rho_a[index],8.0/3.0);
                double t176678 = gamma_aa[index]*gamma_aa[index];
                double t176679 = gcaa*gcaa;
                double t176680 = t176679*t176679;
                double t176681 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t176682 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t176683 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t176684 = gamma_aa[index]*gcaa*t176677;
                double t176685 = t176684+1.0;
                double t176686 = gamma_aa[index]*gcaa*t176677*3.0;
                double t176687 = gamma_aa[index]*gcaa*t176683*t176678*t176679;
                double t176688 = t176682*t176678*t176679*3.0;
                double t176689 = t176686+t176687+t176688+1.0;
                double t176690 = t176678*t176678;
                double t176691 = gamma_aa[index]*gcaa*t176677*4.0;
                double t176692 = gamma_aa[index]*gcaa*t176683*t176678*t176679*4.0;
                double t176693 = t176682*t176678*t176679*6.0;
                double t176694 = t176680*t176681*t176690;
                double t176695 = t176691+t176692+t176693+t176694+1.0;
                double t176696 = gamma_aa[index]*gcaa*t176677*2.0;
                double t176697 = t176682*t176678*t176679;
                double t176698 = t176696+t176697+1.0;
                double t176699 = pow(2.0,1.0/3.0);
                double t176700 = t176699*2.0;
                double t176701 = t176700-2.0;
                double t176702 = two_13*2.0;
                double t176703 = t176702-2.0;
                double t176704 = 1.0/t176703;
                double t176705 = 1.0/c0f;
                double t176706 = b1f*t176661;
                double t176707 = b3f*t176662;
                double t176708 = b4f*t176663*t176664;
                double t176709 = b2f*c*t176659;
                double t176710 = t176706+t176707+t176708+t176709;
                double t176711 = 1.0/t176710;
                double t176712 = t176711*t176705*(1.0/2.0);
                double t176713 = t176712+1.0;
                double t176714 = log(t176713);
                double t176715 = a1f*c*t176659;
                double t176716 = t176715+1.0;
                double t176717 = c0f*t176714*t176716*2.0;
                double t176718 = c0p*t176674*t176676*2.0;
                double t176719 = rho_a[index]*2.0;
                double t176720 = 1.0/pow(t176719,1.0/3.0);
                double t176721 = c*t176720;
                double t176722 = gcab*gcab;
                double t176723 = t176722*t176722;
                double t176724 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t176725 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t176726 = gamma_aa[index]*gcab*t176677*2.0;
                double t176727 = t176722*t176682*t176678;
                double t176728 = t176726+t176727+1.0;
                double t176729 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t176730 = gamma_aa[index]*gcab*t176677;
                double t176731 = t176730+1.0;
                double t176732 = gamma_aa[index]*gcab*t176677*3.0;
                double t176733 = gamma_aa[index]*gcab*t176722*t176683*t176678;
                double t176734 = t176722*t176682*t176678*3.0;
                double t176735 = t176732+t176733+t176734+1.0;
                double t176736 = gamma_aa[index]*gcab*t176677*4.0;
                double t176737 = gamma_aa[index]*gcab*t176722*t176683*t176678*4.0;
                double t176738 = t176722*t176682*t176678*6.0;
                double t176739 = t176723*t176681*t176690;
                double t176740 = t176736+t176737+t176738+t176739+1.0;
                double t176741 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t176742 = 1.0/(t176728*t176728);
                double t176743 = 1.0/(t176735*t176735);
                double t176744 = 1.0/(t176740*t176740);
                double t176745 = gamma_aa[index]*gcab*t176741*(8.0/3.0);
                double t176746 = t176722*t176724*t176678*(8.0/3.0);
                double t176747 = t176745+t176746;
                double t176748 = gcab*t176677;
                double t176749 = gamma_aa[index]*t176722*t176682;
                double t176750 = t176748+t176749;
                double t176751 = gcab*t176677*(3.0/2.0);
                double t176752 = gamma_aa[index]*t176722*t176682*3.0;
                double t176753 = gcab*t176722*t176683*t176678*(3.0/2.0);
                double t176754 = t176751+t176752+t176753;
                double t176755 = gamma_aa[index]*gcab*t176741*4.0;
                double t176756 = gamma_aa[index]*gcab*t176722*t176729*t176678*4.0;
                double t176757 = t176722*t176724*t176678*8.0;
                double t176758 = t176755+t176756+t176757;
                double t176759 = gamma_aa[index]*gcab*t176741*(1.6E1/3.0);
                double t176760 = gamma_aa[index]*gcab*t176722*t176729*t176678*1.6E1;
                double t176761 = t176722*t176724*t176678*1.6E1;
                double t176762 = t176723*t176725*t176690*(1.6E1/3.0);
                double t176763 = t176760+t176761+t176762+t176759;
                double t176764 = gcab*t176677*2.0;
                double t176765 = gamma_aa[index]*t176722*t176682*6.0;
                double t176766 = gcab*t176722*t176683*t176678*6.0;
                double t176767 = gamma_aa[index]*t176723*t176681*t176678*2.0;
                double t176768 = t176764+t176765+t176766+t176767;
                double t176769 = t176717-t176718;
                double t176770 = t176701*t176704*t176769;
                double t176771 = t176770+t176718;
                double t176772 = rho_a[index]*t176771*2.0;
                double t176773 = sqrt(t176721);
                double t176774 = b1p*t176773;
                double t176775 = pow(t176721,3.0/2.0);
                double t176776 = b3p*t176775;
                double t176777 = b2p*c*t176720;
                double t176778 = 1.0/pow(t176719,2.0/3.0);
                double t176779 = b4p*t176663*t176778;
                double t176780 = t176774+t176776+t176777+t176779;
                double t176781 = 1.0/t176780;
                double t176782 = t176781*t176665*(1.0/2.0);
                double t176783 = t176782+1.0;
                double t176784 = log(t176783);
                double t176785 = a1p*c*t176720;
                double t176786 = t176785+1.0;
                double t176787 = t176772-c0p*rho_a[index]*t176784*t176786*4.0;
                double t176788 = 1.0/t176740;
                double t176789 = 1.0/t176728;
                double t176790 = 1.0/t176735;
                double t176791 = 1.0/(t176731*t176731);
                double t176792 = 1.0/(t176731*t176731*t176731);
                double t176793 = ccab3*gcab*t176722*t176743*t176683*t176758*t176678*(3.0/2.0);
                double t176794 = ccab2*gamma_aa[index]*t176722*t176742*t176682*t176747;
                double t176795 = ccab3*gamma_aa[index]*gcab*t176722*t176743*t176754*t176729*t176678*4.0;
                double t176796 = ccab4*gamma_aa[index]*t176723*t176681*t176744*t176763*t176678*2.0;
                double t176797 = ccab4*t176723*t176725*t176690*t176744*t176768*(1.6E1/3.0);
                double t176798 = ccab2*t176722*t176750*t176724*t176742*t176678*(8.0/3.0);
                double t176799 = gamma_aa[index]*t176722*t176724*4.0;
                double t176800 = 1.0/(t176728*t176728*t176728);
                double t176801 = 1.0/(t176735*t176735*t176735);
                double t176802 = 1.0/(t176740*t176740*t176740);
                double t176803 = 1.0/pow(t176719,4.0/3.0);
                double t176804 = 1.0/pow(rho_a[index],4.0/3.0);
                double t176805 = 1.0/pow(rho_a[index],5.0/3.0);
                double t176806 = 1.0/sqrt(t176660);
                double t176807 = 1.0/t176673;
                double t176808 = 1.0/(t176670*t176670);
                double t176809 = b4p*t176805*t176663*(2.0/3.0);
                double t176810 = b2p*c*t176804*(1.0/3.0);
                double t176811 = b1p*c*t176804*t176806*(1.0/6.0);
                double t176812 = b3p*c*t176804*t176661*(1.0/2.0);
                double t176813 = t176810+t176811+t176812+t176809;
                double t176814 = t176813*t176807*t176808*t176676;
                double t176815 = 1.0/t176731;
                double t176816 = 1.0/t176685;
                double t176817 = 1.0/t176695;
                double t176818 = 1.0/t176698;
                double t176819 = 1.0/t176689;
                double t176820 = 1.0/(t176685*t176685);
                double t176821 = 1.0/(t176689*t176689);
                double t176822 = 1.0/(t176698*t176698);
                double t176823 = gcaa*t176677*3.0;
                double t176824 = gamma_aa[index]*t176682*t176679*6.0;
                double t176825 = gcaa*t176683*t176678*t176679*3.0;
                double t176826 = t176823+t176824+t176825;
                double t176827 = 1.0/(t176695*t176695);
                double t176828 = gcaa*t176677*4.0;
                double t176829 = gamma_aa[index]*t176682*t176679*1.2E1;
                double t176830 = gcaa*t176683*t176678*t176679*1.2E1;
                double t176831 = gamma_aa[index]*t176680*t176681*t176678*4.0;
                double t176832 = t176830+t176831+t176828+t176829;
                double t176833 = gcaa*t176677*2.0;
                double t176834 = gamma_aa[index]*t176682*t176679*2.0;
                double t176835 = t176833+t176834;
                double t176836 = gamma_aa[index]*gcaa*t176741*(1.6E1/3.0);
                double t176837 = t176724*t176678*t176679*(1.6E1/3.0);
                double t176838 = t176836+t176837;
                double t176839 = gamma_aa[index]*gcaa*t176741*8.0;
                double t176840 = gamma_aa[index]*gcaa*t176729*t176678*t176679*8.0;
                double t176841 = t176724*t176678*t176679*1.6E1;
                double t176842 = t176840+t176841+t176839;
                double t176843 = gamma_aa[index]*gcaa*t176741*(3.2E1/3.0);
                double t176844 = gamma_aa[index]*gcaa*t176729*t176678*t176679*3.2E1;
                double t176845 = t176724*t176678*t176679*3.2E1;
                double t176846 = t176680*t176725*t176690*(3.2E1/3.0);
                double t176847 = t176843+t176844+t176845+t176846;
                double t176848 = 1.0/t176713;
                double t176849 = 1.0/(t176710*t176710);
                double t176850 = b4f*t176805*t176663*(2.0/3.0);
                double t176851 = b2f*c*t176804*(1.0/3.0);
                double t176852 = b1f*c*t176804*t176806*(1.0/6.0);
                double t176853 = b3f*c*t176804*t176661*(1.0/2.0);
                double t176854 = t176850+t176851+t176852+t176853;
                double t176855 = a1f*c*c0f*t176714*t176804*(2.0/3.0);
                double t176856 = a1p*c*c0p*t176804*t176674*(2.0/3.0);
                double t176857 = ccaa1*gcaa*t176816*t176677;
                double t176858 = ccaa4*gamma_aa[index]*t176680*t176681*t176817*t176678*4.0;
                double t176859 = ccaa2*gamma_aa[index]*t176682*t176818*t176679*2.0;
                double t176860 = ccaa3*gcaa*t176683*t176819*t176678*t176679*3.0;
                double t176861 = t176860+t176857+t176858+t176859-ccaa1*gamma_aa[index]*t176820*t176682*t176679-ccaa4* \
                   t176832*t176680*t176681*t176690*t176827-ccaa2*t176822*t176682*t176835*t176678*t176679-ccaa3*gamma_aa[index]* \
                   gcaa*t176821*t176826*t176683*t176678*t176679;
                double t176862 = gx*gx;
                double t176863 = t176862*t176862;
                double t176864 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t176865 = gamma_aa[index]*gx*t176677*4.0;
                double t176866 = gamma_aa[index]*gx*t176862*t176683*t176678*4.0;
                double t176867 = t176682*t176862*t176678*6.0;
                double t176868 = t176681*t176690*t176863;
                double t176869 = t176865+t176866+t176867+t176868+1.0;
                double t176870 = 1.0/t176869;
                double t176871 = cx4*t176681*t176690*t176870*t176863*(4.190715359480463E15/2.251799813685248E15);
                double t176872 = gamma_aa[index]*gx*t176677;
                double t176873 = t176872+1.0;
                double t176874 = 1.0/t176873;
                double t176875 = cx1*gamma_aa[index]*gx*t176874*t176677*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176876 = gamma_aa[index]*gx*t176677*3.0;
                double t176877 = gamma_aa[index]*gx*t176862*t176683*t176678;
                double t176878 = t176682*t176862*t176678*3.0;
                double t176879 = t176876+t176877+t176878+1.0;
                double t176880 = 1.0/t176879;
                double t176881 = cx3*gamma_aa[index]*gx*t176862*t176880*t176683*t176678*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176882 = gamma_aa[index]*gx*t176677*2.0;
                double t176883 = t176682*t176862*t176678;
                double t176884 = t176882+t176883+1.0;
                double t176885 = 1.0/t176884;
                double t176886 = cx2*t176682*t176862*t176678*t176885*(4.190715359480463E15/2.251799813685248E15);
                double t176887 = t176871+t176881+t176864+t176875+t176886;
                double t176888 = 1.0/omega;
                double t176889 = 1.0/(omega*omega);
                double t176890 = pow(rho_a[index],2.0/3.0);
                double t176891 = 1.0/t176887;
                double t176893 = t176890*t176891*t176889*(1.4000771998813E29/4.951760157141521E27);
                double t176892 = exp(-t176893);
                double t176894 = cx4*t176725*t176690*t176870*t176863*(1.396905119826821E15/7.0368744177664E13);
                double t176895 = cx1*gamma_aa[index]*gx*t176741*t176874*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t176896 = cx3*gamma_aa[index]*gx*t176862*t176880*t176729*t176678*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t176897 = cx2*t176724*t176862*t176678*t176885*(1.396905119826821E15/1.40737488355328E14);
                double t176898 = 1.0/(t176873*t176873);
                double t176899 = gamma_aa[index]*gx*t176741*8.0;
                double t176900 = gamma_aa[index]*gx*t176862*t176729*t176678*8.0;
                double t176901 = t176724*t176862*t176678*1.6E1;
                double t176902 = t176900+t176901+t176899;
                double t176903 = 1.0/(t176879*t176879);
                double t176904 = gamma_aa[index]*gx*t176741*(3.2E1/3.0);
                double t176905 = gamma_aa[index]*gx*t176862*t176729*t176678*3.2E1;
                double t176906 = t176724*t176862*t176678*3.2E1;
                double t176907 = t176725*t176690*t176863*(3.2E1/3.0);
                double t176908 = t176904+t176905+t176906+t176907;
                double t176909 = 1.0/(t176869*t176869);
                double t176910 = gamma_aa[index]*gx*t176741*(1.6E1/3.0);
                double t176911 = t176724*t176862*t176678*(1.6E1/3.0);
                double t176912 = t176910+t176911;
                double t176913 = 1.0/(t176884*t176884);
                double t176917 = cx1*t176724*t176862*t176678*t176898*(1.396905119826821E15/2.81474976710656E14);
                double t176918 = cx3*gamma_aa[index]*gx*t176902*t176903*t176862*t176683*t176678*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t176919 = cx4*t176681*t176690*t176863*t176908*t176909*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176920 = cx2*t176912*t176913*t176682*t176862*t176678*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176914 = -t176920-t176917-t176918-t176919+t176894+t176895+t176896+t176897;
                double t176915 = omega*omega;
                double t176916 = t176892-1.0;
                double t176921 = t176891*t176659*t176889*(1.4000771998813E29/7.427640235712282E27);
                double t176922 = 1.0/(t176887*t176887);
                double t176923 = t176922*t176914*t176890*t176889*(1.4000771998813E29/4.951760157141521E27);
                double t176924 = t176921+t176923;
                double t176925 = sqrt(t176887);
                double t176926 = t176915*t176664*t176916*t176887*(2.475880078570761E27/1.4000771998813E29);
                double t176927 = t176926-t176892+3.0/2.0;
                double t176928 = 1.0/sqrt(t176887);
                double t176929 = pow(rho_a[index],1.0/3.0);
                double t176930 = t176928*t176929*t176888*(3.74176054803257E14/7.0368744177664E13);
                double t176931 = erf(t176930);
                double t176932 = t176931*(3.991211251234741E15/2.251799813685248E15);
                double t176934 = omega*t176925*t176927*t176659*(7.0368744177664E13/3.74176054803257E14);
                double t176933 = t176932-t176934;
                double t176935 = cx1*gx*t176874*t176677;
                double t176936 = cx4*gamma_aa[index]*t176681*t176870*t176863*t176678*4.0;
                double t176937 = cx2*gamma_aa[index]*t176682*t176862*t176885*2.0;
                double t176938 = cx3*gx*t176862*t176880*t176683*t176678*3.0;
                double t176939 = gx*t176677*3.0;
                double t176940 = gamma_aa[index]*t176682*t176862*6.0;
                double t176941 = gx*t176862*t176683*t176678*3.0;
                double t176942 = t176940+t176941+t176939;
                double t176943 = gx*t176677*4.0;
                double t176944 = gamma_aa[index]*t176682*t176862*1.2E1;
                double t176945 = gx*t176862*t176683*t176678*1.2E1;
                double t176946 = gamma_aa[index]*t176681*t176863*t176678*4.0;
                double t176947 = t176943+t176944+t176945+t176946;
                double t176948 = gx*t176677*2.0;
                double t176949 = gamma_aa[index]*t176682*t176862*2.0;
                double t176950 = t176948+t176949;
                double t176951 = t176935+t176936+t176937+t176938-cx1*gamma_aa[index]*t176682*t176862*t176898-cx2* \
                   t176913*t176950*t176682*t176862*t176678-cx4*t176681*t176690*t176863*t176909*t176947-cx3*gamma_aa[index]* \
                   gx*t176903*t176942*t176862*t176683*t176678;
                double t176952 = pow(rho_a[index],4.0/3.0);
                double t176953 = 1.0/sqrt(3.141592653589793);
                double t176954 = 1.0/pow(t176887,3.0/2.0);
                double t176955 = cx1*gx*t176874*t176677*(4.190715359480463E15/2.251799813685248E15);
                double t176956 = cx4*gamma_aa[index]*t176681*t176870*t176863*t176678*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t176957 = cx2*gamma_aa[index]*t176682*t176862*t176885*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t176958 = cx3*gx*t176862*t176880*t176683*t176678*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t176960 = cx1*gamma_aa[index]*t176682*t176862*t176898*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176961 = cx3*gamma_aa[index]*gx*t176903*t176942*t176862*t176683*t176678*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t176962 = cx4*t176681*t176690*t176863*t176909*t176947*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176963 = cx2*t176913*t176950*t176682*t176862*t176678*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176959 = -t176960-t176961-t176962-t176963+t176955+t176956+t176957+t176958;
                double t176964 = cx1*gamma_aa[index]*t176724*t176862*t176898*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t176965 = 1.0/(t176873*t176873*t176873);
                double t176966 = cx3*gx*t176902*t176903*t176862*t176683*t176678*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t176967 = cx2*gamma_aa[index]*t176912*t176913*t176682*t176862*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t176968 = cx3*gamma_aa[index]*gx*t176903*t176942*t176862*t176729*t176678*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t176969 = gx*t176741*8.0;
                double t176970 = gamma_aa[index]*t176724*t176862*3.2E1;
                double t176971 = gx*t176862*t176729*t176678*2.4E1;
                double t176972 = t176970+t176971+t176969;
                double t176973 = cx3*gamma_aa[index]*gx*t176903*t176862*t176683*t176972*t176678*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t176974 = cx4*gamma_aa[index]*t176681*t176863*t176908*t176909*t176678*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t176975 = cx4*t176725*t176690*t176863*t176909*t176947*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t176976 = gx*t176741*(3.2E1/3.0);
                double t176977 = gamma_aa[index]*t176724*t176862*6.4E1;
                double t176978 = gx*t176862*t176729*t176678*9.6E1;
                double t176979 = gamma_aa[index]*t176725*t176863*t176678*(1.28E2/3.0);
                double t176980 = t176976+t176977+t176978+t176979;
                double t176981 = cx4*t176681*t176690*t176863*t176980*t176909*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176982 = cx2*t176724*t176913*t176950*t176862*t176678*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t176983 = gx*t176741*(1.6E1/3.0);
                double t176984 = gamma_aa[index]*t176724*t176862*(3.2E1/3.0);
                double t176985 = t176983+t176984;
                double t176986 = cx2*t176913*t176682*t176862*t176678*t176985*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t176987 = 1.0/(t176884*t176884*t176884);
                double t176988 = 1.0/(t176879*t176879*t176879);
                double t176989 = 1.0/(t176869*t176869*t176869);
                double t176991 = cx1*gx*t176741*t176874*(1.396905119826821E15/2.81474976710656E14);
                double t176992 = cx4*gamma_aa[index]*t176725*t176870*t176863*t176678*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t176993 = cx2*gamma_aa[index]*t176724*t176862*t176885*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t176994 = cx3*gx*t176862*t176880*t176729*t176678*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t176995 = cx1*gx*t176862*t176729*t176965*t176678*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t176996 = cx2*t176912*t176950*t176682*t176862*t176678*t176987*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t176997 = cx3*gamma_aa[index]*gx*t176902*t176942*t176862*t176683*t176678*t176988*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t176998 = cx4*t176681*t176690*t176863*t176908*t176947*t176989*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t176990 = t176981+t176964+t176973+t176982-t176991+t176974-t176992+t176966+t176975-t176993+ \
                   t176967-t176994+t176968+t176986-t176995-t176996-t176997-t176998;
                double t176999 = t176922*t176890*t176990*t176889*(1.4000771998813E29/4.951760157141521E27);
                double t177000 = t176922*t176659*t176959*t176889*(1.4000771998813E29/7.427640235712282E27);
                double t177001 = 1.0/(t176887*t176887*t176887);
                double t177002 = t177001*t176914*t176890*t176959*t176889*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t177003 = t177000+t177002+t176999;
                double t177004 = t176891*t176892*t176959*(1.0/2.0);
                double t177005 = t176915*t176664*t176916*t176959*(2.475880078570761E27/1.4000771998813E29);
                double t177014 = t176922*t176890*t176892*t176959*t176889*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t177006 = t177004+t177005-t177014;
                double t177007 = t176805*t176915*t176916*t176887*(4.951760157141521E27/4.2002315996439E29);
                double t177008 = t176914*t176915*t176664*t176916*(2.475880078570761E27/1.4000771998813E29);
                double t177009 = t176915*t176924*t176664*t176892*t176887*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t177021 = t176924*t176892;
                double t177010 = -t177021+t177007+t177008+t177009;
                double t177011 = t176664*t176928*t176888*(3.74176054803257E14/2.11106232532992E14);
                double t177012 = t176914*t176954*t176929*t176888*(3.74176054803257E14/1.40737488355328E14);
                double t177013 = t177011+t177012;
                double t177015 = omega*t177006*t176925*t176659*(7.0368744177664E13/3.74176054803257E14);
                double t177016 = omega*t176927*t176928*t176659*t176959*(3.5184372088832E13/3.74176054803257E14);
                double t177017 = t176953*t176954*t176892*t176929*t176959*t176888*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t177018 = t177015+t177016+t177017;
                double t177019 = t177013*t176953*t176892*(3.991211251234741E15/1.125899906842624E15);
                double t177020 = omega*t176804*t176925*t176927*(7.0368744177664E13/1.122528164409771E15);
                double t177022 = omega*t177010*t176925*t176659*(7.0368744177664E13/3.74176054803257E14);
                double t177023 = omega*t176914*t176927*t176928*t176659*(3.5184372088832E13/3.74176054803257E14);
                double t177024 = t177020+t177022+t177023+t177019;
                double t177025 = cx4*t176681*t176690*t176870*t176863;
                double t177026 = cx1*gamma_aa[index]*gx*t176874*t176677;
                double t177027 = cx3*gamma_aa[index]*gx*t176862*t176880*t176683*t176678;
                double t177028 = cx2*t176682*t176862*t176678*t176885;
                double t177029 = cx0+t177025+t177026+t177027+t177028;
                double t177030 = omega*t177018*t176925*t176659*(2.81474976710656E14/1.122528164409771E15);
                double t177031 = t177030-omega*t176933*t176928*t176659*t176959*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t177032 = omega*t176933*t176925*t176659*(2.81474976710656E14/1.122528164409771E15);
                double t177033 = t177032-1.0;
                v_rho_a_gamma_aa_[index] = t176787*(t176793+t176794+t176795+t176796+t176797+t176798+ccab1*gamma_aa[index]* \
                   t176722*t176724*t176791*(4.0/3.0)-ccab2*gamma_aa[index]*t176722*t176724*t176789*(4.0/3.0)+ccab4*t176723* \
                   t176681*t176690*t176744*(gamma_aa[index]*t176722*t176724*8.0+gamma_aa[index]*t176723*t176725*t176678* \
                   8.0+gcab*t176722*t176729*t176678*1.6E1)+ccab2*gamma_aa[index]*t176723*t176742*t176725*t176678*(4.0/ \
                   3.0)-ccab4*gamma_aa[index]*t176723*t176725*t176678*t176788*8.0-ccab1*gcab*t176722*t176729*t176792* \
                   t176678*(4.0/3.0)-ccab3*gcab*t176722*t176790*t176729*t176678*4.0-ccab2*t176800*t176722*t176750*t176682* \
                   t176747*t176678*2.0-ccab4*t176802*t176723*t176681*t176690*t176763*t176768*2.0+ccab3*gamma_aa[index]* \
                   gcab*t176722*t176743*t176683*t176678*(t176799+gcab*t176722*t176729*t176678*4.0)-ccab3*gamma_aa[index]* \
                   gcab*t176801*t176722*t176754*t176683*t176758*t176678*2.0)-t176861*(t176718+t176701*t176704*(t176717- \
                   c0p*t176674*t176676*2.0))-(-t176770-t176718+rho_a[index]*((1.0/(t176780*t176780)*t176786*(b4p*t176663* \
                   1.0/pow(t176719,5.0/3.0)*(2.0/3.0)+b2p*c*t176803*(1.0/3.0)+b3p*c*t176803*t176773*(1.0/2.0)+b1p*c*1.0/ \
                   sqrt(t176721)*t176803*(1.0/6.0)))/t176783-a1p*c*c0p*t176803*t176784*(2.0/3.0))*2.0+rho_a[index]*(- \
                   t176814+t176856+t176701*t176704*(t176814+t176855-t176716*t176854*t176848*t176849-a1p*c*c0p*t176804* \
                   t176674*(2.0/3.0)))+c0p*t176784*t176786*2.0)*(ccab1*gcab*t176815*t176677*(1.0/2.0)-ccab1*gamma_aa[index]* \
                   t176722*t176682*t176791*(1.0/2.0)+ccab2*gamma_aa[index]*t176722*t176682*t176789-ccab2*t176722*t176750* \
                   t176742*t176682*t176678-ccab4*t176723*t176681*t176690*t176744*t176768+ccab4*gamma_aa[index]*t176723* \
                   t176681*t176678*t176788*2.0+ccab3*gcab*t176722*t176790*t176683*t176678*(3.0/2.0)-ccab3*gamma_aa[index]* \
                   gcab*t176722*t176743*t176754*t176683*t176678)*2.0+t176787*(t176793+t176794+t176795+t176796+t176797+ \
                   t176798-ccab1*gcab*t176741*t176815*(4.0/3.0)+ccab1*gamma_aa[index]*t176722*t176724*t176791*(8.0/3.0) \
                   -ccab2*gamma_aa[index]*t176722*t176724*t176789*4.0+ccab4*t176723*t176681*t176690*t176744*(gcab*t176741* \
                   (1.6E1/3.0)+gamma_aa[index]*t176722*t176724*2.4E1+gamma_aa[index]*t176723*t176725*t176678*(4.0E1/3.0) \
                   +gcab*t176722*t176729*t176678*3.2E1)+ccab2*t176722*t176742*t176682*t176678*(t176799+gcab*t176741*(8.0/ \
                   3.0))-ccab4*gamma_aa[index]*t176723*t176725*t176678*t176788*(4.0E1/3.0)-ccab1*gcab*t176722*t176729* \
                   t176792*t176678*(4.0/3.0)-ccab3*gcab*t176722*t176790*t176729*t176678*8.0-ccab2*t176800*t176722*t176750* \
                   t176682*t176747*t176678*2.0-ccab4*t176802*t176723*t176681*t176690*t176763*t176768*2.0+ccab3*gamma_aa[index]* \
                   gcab*t176722*t176743*t176683*t176678*(gcab*t176741*4.0+gamma_aa[index]*t176722*t176724*1.2E1+gcab* \
                   t176722*t176729*t176678*8.0)-ccab3*gamma_aa[index]*gcab*t176801*t176722*t176754*t176683*t176758*t176678* \
                   2.0)-rho_a[index]*t176771*(ccaa1*gcaa*t176741*t176816*(-8.0/3.0)+ccaa1*gamma_aa[index]*t176820*t176724* \
                   t176679*8.0-ccaa2*gamma_aa[index]*t176724*t176818*t176679*(3.2E1/3.0)+ccaa4*t176832*t176680*t176725* \
                   t176690*t176827*(3.2E1/3.0)+ccaa2*t176822*t176724*t176835*t176678*t176679*(1.6E1/3.0)+ccaa4*t176680* \
                   t176681*t176690*t176827*(gcaa*t176741*(3.2E1/3.0)+gamma_aa[index]*t176724*t176679*6.4E1+gamma_aa[index]* \
                   t176680*t176725*t176678*(1.28E2/3.0)+gcaa*t176729*t176678*t176679*9.6E1)-ccaa1*gcaa*t176729*1.0/(t176685* \
                   t176685*t176685)*t176678*t176679*(1.6E1/3.0)+ccaa2*t176822*t176682*t176678*t176679*(gcaa*t176741*(1.6E1/ \
                   3.0)+gamma_aa[index]*t176724*t176679*(3.2E1/3.0))-ccaa4*gamma_aa[index]*t176680*t176725*t176817*t176678* \
                   (1.28E2/3.0)+ccaa2*gamma_aa[index]*t176822*t176682*t176838*t176679*2.0-ccaa3*gcaa*t176729*t176819* \
                   t176678*t176679*2.4E1+ccaa4*gamma_aa[index]*t176680*t176681*t176827*t176847*t176678*4.0+ccaa3*gcaa* \
                   t176821*t176842*t176683*t176678*t176679*3.0-ccaa4*t176832*t176680*t176681*t176690*t176847*1.0/(t176695* \
                   t176695*t176695)*2.0-ccaa2*t176682*t176835*t176838*t176678*t176679*1.0/(t176698*t176698*t176698)*2.0+ \
                   ccaa3*gamma_aa[index]*gcaa*t176821*t176683*t176678*t176679*(gcaa*t176741*8.0+gamma_aa[index]*t176724* \
                   t176679*3.2E1+gcaa*t176729*t176678*t176679*2.4E1)+ccaa3*gamma_aa[index]*gcaa*t176821*t176826*t176729* \
                   t176678*t176679*8.0-ccaa3*gamma_aa[index]*gcaa*t176842*t176826*t176683*t176678*t176679*1.0/(t176689* \
                   t176689*t176689)*2.0)+rho_a[index]*t176861*(-t176814+t176856+t176701*t176704*(t176814+t176855-t176856- \
                   t176716*t176854*t176848*t176849))-c0*t177033*t176952*(cx1*gx*t176741*t176874*(-8.0/3.0)+cx1*gamma_aa[index]* \
                   t176724*t176862*t176898*8.0-cx2*gamma_aa[index]*t176724*t176862*t176885*(3.2E1/3.0)+cx2*t176724*t176913* \
                   t176950*t176862*t176678*(1.6E1/3.0)+cx2*t176913*t176682*t176862*t176678*t176985+cx4*t176681*t176690* \
                   t176863*t176980*t176909+cx4*t176725*t176690*t176863*t176909*t176947*(3.2E1/3.0)+cx2*gamma_aa[index]* \
                   t176912*t176913*t176682*t176862*2.0-cx4*gamma_aa[index]*t176725*t176870*t176863*t176678*(1.28E2/3.0) \
                   -cx1*gx*t176862*t176729*t176965*t176678*(1.6E1/3.0)-cx3*gx*t176862*t176880*t176729*t176678*2.4E1+cx4* \
                   gamma_aa[index]*t176681*t176863*t176908*t176909*t176678*4.0+cx3*gx*t176902*t176903*t176862*t176683* \
                   t176678*3.0-cx2*t176912*t176950*t176682*t176862*t176678*t176987*2.0-cx4*t176681*t176690*t176863*t176908* \
                   t176947*t176989*2.0+cx3*gamma_aa[index]*gx*t176903*t176942*t176862*t176729*t176678*8.0+cx3*gamma_aa[index]* \
                   gx*t176903*t176862*t176683*t176972*t176678-cx3*gamma_aa[index]*gx*t176902*t176942*t176862*t176683* \
                   t176678*t176988*2.0)+c0*t177031*t177029*t176929*(4.0/3.0)-c0*t177033*t176951*t176929*(4.0/3.0)-c0* \
                   t177029*t176952*(omega*t176925*t176659*(t176953*t176892*(t176954*t176990*t176929*t176888*(3.74176054803257E14/ \
                   1.40737488355328E14)+t176664*t176954*t176959*t176888*(3.74176054803257E14/4.22212465065984E14)+t176914* \
                   t176929*1.0/pow(t176887,5.0/2.0)*t176959*t176888*(1.122528164409771E15/2.81474976710656E14))*(-3.991211251234741E15/ \
                   1.125899906842624E15)+omega*t177006*t176804*t176925*(7.0368744177664E13/1.122528164409771E15)+omega* \
                   t176925*t176659*(t177003*t176892-t176915*t176664*t176916*t176990*(2.475880078570761E27/1.4000771998813E29) \
                   +t176805*t176915*t176916*t176959*(4.951760157141521E27/4.2002315996439E29)+t176922*t176914*t176892* \
                   t176959*(1.0/2.0)+t176924*t176891*t176892*t176959*(1.0/2.0)+(t176891*t176892*t176959*(1.0/3.0))/rho_a[index]- \
                   t177003*t176915*t176664*t176892*t176887*(2.475880078570761E27/1.4000771998813E29)+t176915*t176924* \
                   t176664*t176892*t176959*(2.475880078570761E27/1.4000771998813E29)-t176922*t176924*t176890*t176892* \
                   t176959*t176889*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t177006*t176914*t176928*t176659*(3.5184372088832E13/3.74176054803257E14)+omega*t177010*t176928* \
                   t176659*t176959*(3.5184372088832E13/3.74176054803257E14)+omega*t176804*t176927*t176928*t176959*(3.5184372088832E13/ \
                   1.122528164409771E15)-omega*t176927*t176990*t176928*t176659*(3.5184372088832E13/3.74176054803257E14) \
                   -omega*t176914*t176927*t176954*t176659*t176959*(1.7592186044416E13/3.74176054803257E14)+t177013*t176922* \
                   t176890*t176953*t176892*t176959*t176889*(5.588003872763475E44/5.575186299632656E42))*(2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t177018*t176804*t176925*(2.81474976710656E14/3.367584493229313E15)+omega* \
                   t177018*t176914*t176928*t176659*(1.40737488355328E14/1.122528164409771E15)+omega*t177024*t176928*t176659* \
                   t176959*(1.40737488355328E14/1.122528164409771E15)-omega*t176804*t176933*t176928*t176959*(1.40737488355328E14/ \
                   3.367584493229313E15)+omega*t176933*t176990*t176928*t176659*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t176914*t176933*t176954*t176659*t176959*(7.0368744177664E13/1.122528164409771E15))-c0*t177031* \
                   t176952*(cx1*gamma_aa[index]*gx*t176741*t176874*(8.0/3.0)-cx1*t176724*t176862*t176678*t176898*(8.0/ \
                   3.0)+cx2*t176724*t176862*t176678*t176885*(1.6E1/3.0)+cx4*t176725*t176690*t176870*t176863*(3.2E1/3.0) \
                   -cx2*t176912*t176913*t176682*t176862*t176678-cx4*t176681*t176690*t176863*t176908*t176909+cx3*gamma_aa[index]* \
                   gx*t176862*t176880*t176729*t176678*8.0-cx3*gamma_aa[index]*gx*t176902*t176903*t176862*t176683*t176678) \
                   +c0*t176951*t176952*(omega*t177024*t176925*t176659*(-2.81474976710656E14/1.122528164409771E15)+omega* \
                   t176804*t176933*t176925*(2.81474976710656E14/3.367584493229313E15)+omega*t176914*t176933*t176928*t176659* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_) {
                double t177035 = 1.0/pow(rho_a[index],1.0/3.0);
                double t177036 = c*t177035;
                double t177037 = sqrt(t177036);
                double t177038 = pow(t177036,3.0/2.0);
                double t177039 = c*c;
                double t177040 = 1.0/pow(rho_a[index],2.0/3.0);
                double t177041 = 1.0/c0p;
                double t177042 = b1p*t177037;
                double t177043 = b3p*t177038;
                double t177044 = b4p*t177040*t177039;
                double t177045 = b2p*c*t177035;
                double t177046 = t177042+t177043+t177044+t177045;
                double t177047 = 1.0/t177046;
                double t177048 = t177041*t177047*(1.0/2.0);
                double t177049 = t177048+1.0;
                double t177050 = log(t177049);
                double t177051 = a1p*c*t177035;
                double t177052 = t177051+1.0;
                double t177053 = rho_a[index]*2.0;
                double t177054 = 1.0/pow(t177053,1.0/3.0);
                double t177055 = c*t177054;
                double t177056 = gcab*gcab;
                double t177057 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t177058 = 1.0/pow(rho_a[index],8.0/3.0);
                double t177059 = gamma_aa[index]*gamma_aa[index];
                double t177060 = t177056*t177056;
                double t177061 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t177062 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t177063 = gamma_aa[index]*gcab*t177058;
                double t177064 = t177063+1.0;
                double t177065 = gamma_aa[index]*gcab*t177058*2.0;
                double t177066 = t177056*t177057*t177059;
                double t177067 = t177065+t177066+1.0;
                double t177068 = gamma_aa[index]*gcab*t177058*3.0;
                double t177069 = gamma_aa[index]*gcab*t177062*t177056*t177059;
                double t177070 = t177056*t177057*t177059*3.0;
                double t177071 = t177070+t177068+t177069+1.0;
                double t177072 = t177059*t177059;
                double t177088 = gcab*t177058*2.0;
                double t177089 = gamma_aa[index]*t177056*t177057*6.0;
                double t177090 = gcab*t177062*t177056*t177059*6.0;
                double t177091 = gamma_aa[index]*t177060*t177061*t177059*2.0;
                double t177073 = t177090+t177091+t177088+t177089;
                double t177074 = gamma_aa[index]*gcab*t177058*4.0;
                double t177075 = gamma_aa[index]*gcab*t177062*t177056*t177059*4.0;
                double t177076 = t177056*t177057*t177059*6.0;
                double t177077 = t177060*t177061*t177072;
                double t177078 = t177074+t177075+t177076+t177077+1.0;
                double t177081 = gcab*t177058;
                double t177082 = gamma_aa[index]*t177056*t177057;
                double t177079 = t177081+t177082;
                double t177080 = 1.0/(t177071*t177071);
                double t177083 = 1.0/(t177067*t177067);
                double t177084 = gcab*t177058*(3.0/2.0);
                double t177085 = gamma_aa[index]*t177056*t177057*3.0;
                double t177086 = gcab*t177062*t177056*t177059*(3.0/2.0);
                double t177087 = t177084+t177085+t177086;
                double t177092 = 1.0/(t177078*t177078);
                double t177093 = pow(2.0,1.0/3.0);
                double t177094 = t177093*2.0;
                double t177095 = t177094-2.0;
                double t177096 = two_13*2.0;
                double t177097 = t177096-2.0;
                double t177098 = 1.0/t177097;
                double t177099 = 1.0/c0f;
                double t177100 = b1f*t177037;
                double t177101 = b3f*t177038;
                double t177102 = b4f*t177040*t177039;
                double t177103 = b2f*c*t177035;
                double t177104 = t177100+t177101+t177102+t177103;
                double t177105 = 1.0/t177104;
                double t177106 = t177105*t177099*(1.0/2.0);
                double t177107 = t177106+1.0;
                double t177108 = log(t177107);
                double t177109 = a1f*c*t177035;
                double t177110 = t177109+1.0;
                double t177111 = c0f*t177110*t177108*2.0;
                double t177112 = c0p*t177050*t177052*2.0;
                double t177113 = gcaa*gcaa;
                double t177114 = t177113*t177113;
                double t177115 = gamma_aa[index]*gcaa*t177058;
                double t177116 = t177115+1.0;
                double t177117 = gamma_aa[index]*gcaa*t177058*2.0;
                double t177118 = t177113*t177057*t177059;
                double t177119 = t177117+t177118+1.0;
                double t177120 = gamma_aa[index]*gcaa*t177058*3.0;
                double t177121 = gamma_aa[index]*gcaa*t177113*t177062*t177059;
                double t177122 = t177113*t177057*t177059*3.0;
                double t177123 = t177120+t177121+t177122+1.0;
                double t177139 = gcaa*t177058*4.0;
                double t177140 = gamma_aa[index]*t177113*t177057*1.2E1;
                double t177141 = gcaa*t177113*t177062*t177059*1.2E1;
                double t177142 = gamma_aa[index]*t177114*t177061*t177059*4.0;
                double t177124 = t177140+t177141+t177142+t177139;
                double t177125 = gamma_aa[index]*gcaa*t177058*4.0;
                double t177126 = gamma_aa[index]*gcaa*t177113*t177062*t177059*4.0;
                double t177127 = t177113*t177057*t177059*6.0;
                double t177128 = t177114*t177061*t177072;
                double t177129 = t177125+t177126+t177127+t177128+1.0;
                double t177132 = gcaa*t177058*2.0;
                double t177133 = gamma_aa[index]*t177113*t177057*2.0;
                double t177130 = t177132+t177133;
                double t177131 = 1.0/(t177123*t177123);
                double t177134 = 1.0/(t177119*t177119);
                double t177135 = gcaa*t177058*3.0;
                double t177136 = gamma_aa[index]*t177113*t177057*6.0;
                double t177137 = gcaa*t177113*t177062*t177059*3.0;
                double t177138 = t177135+t177136+t177137;
                double t177143 = 1.0/(t177129*t177129);
                double t177144 = gx*gx;
                double t177145 = t177144*t177144;
                double t177146 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t177147 = gamma_aa[index]*gx*t177058*4.0;
                double t177148 = gamma_aa[index]*gx*t177062*t177144*t177059*4.0;
                double t177149 = t177144*t177057*t177059*6.0;
                double t177150 = t177061*t177072*t177145;
                double t177151 = t177150+t177147+t177148+t177149+1.0;
                double t177152 = 1.0/t177151;
                double t177153 = cx4*t177061*t177152*t177072*t177145*(4.190715359480463E15/2.251799813685248E15);
                double t177154 = gamma_aa[index]*gx*t177058;
                double t177155 = t177154+1.0;
                double t177156 = 1.0/t177155;
                double t177157 = cx1*gamma_aa[index]*gx*t177156*t177058*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t177158 = gamma_aa[index]*gx*t177058*3.0;
                double t177159 = gamma_aa[index]*gx*t177062*t177144*t177059;
                double t177160 = t177144*t177057*t177059*3.0;
                double t177161 = t177160+t177158+t177159+1.0;
                double t177162 = 1.0/t177161;
                double t177163 = cx3*gamma_aa[index]*gx*t177062*t177144*t177162*t177059*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t177164 = gamma_aa[index]*gx*t177058*2.0;
                double t177165 = t177144*t177057*t177059;
                double t177166 = t177164+t177165+1.0;
                double t177167 = 1.0/t177166;
                double t177168 = cx2*t177144*t177057*t177059*t177167*(4.190715359480463E15/2.251799813685248E15);
                double t177169 = t177153+t177163+t177146+t177157+t177168;
                double t177170 = 1.0/t177169;
                double t177171 = 1.0/(omega*omega);
                double t177172 = pow(rho_a[index],2.0/3.0);
                double t177195 = t177170*t177171*t177172*(1.4000771998813E29/4.951760157141521E27);
                double t177173 = exp(-t177195);
                double t177174 = cx1*gx*t177156*t177058*(4.190715359480463E15/2.251799813685248E15);
                double t177175 = cx4*gamma_aa[index]*t177061*t177152*t177145*t177059*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t177176 = cx2*gamma_aa[index]*t177144*t177057*t177167*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t177177 = cx3*gx*t177062*t177144*t177162*t177059*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t177178 = 1.0/(t177155*t177155);
                double t177179 = gx*t177058*3.0;
                double t177180 = gamma_aa[index]*t177144*t177057*6.0;
                double t177181 = gx*t177062*t177144*t177059*3.0;
                double t177182 = t177180+t177181+t177179;
                double t177183 = 1.0/(t177161*t177161);
                double t177184 = gx*t177058*4.0;
                double t177185 = gamma_aa[index]*t177144*t177057*1.2E1;
                double t177186 = gx*t177062*t177144*t177059*1.2E1;
                double t177187 = gamma_aa[index]*t177061*t177145*t177059*4.0;
                double t177188 = t177184+t177185+t177186+t177187;
                double t177189 = 1.0/(t177151*t177151);
                double t177190 = gx*t177058*2.0;
                double t177191 = gamma_aa[index]*t177144*t177057*2.0;
                double t177192 = t177190+t177191;
                double t177193 = 1.0/(t177166*t177166);
                double t177196 = cx1*gamma_aa[index]*t177144*t177057*t177178*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t177197 = cx3*gamma_aa[index]*gx*t177062*t177144*t177182*t177183*t177059*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t177198 = cx4*t177061*t177072*t177145*t177188*t177189*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t177199 = cx2*t177144*t177057*t177192*t177193*t177059*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t177194 = t177174+t177175+t177176+t177177-t177196-t177197-t177198-t177199;
                double t177200 = omega*omega;
                double t177201 = t177173-1.0;
                double t177202 = sqrt(t177169);
                double t177203 = 1.0/omega;
                double t177204 = pow(rho_a[index],1.0/3.0);
                double t177205 = 1.0/sqrt(t177169);
                double t177206 = t177200*t177201*t177040*t177169*(2.475880078570761E27/1.4000771998813E29);
                double t177207 = t177206-t177173+3.0/2.0;
                double t177208 = pow(rho_a[index],4.0/3.0);
                double t177209 = t177203*t177204*t177205*(3.74176054803257E14/7.0368744177664E13);
                double t177210 = erf(t177209);
                double t177211 = t177210*(3.991211251234741E15/2.251799813685248E15);
                double t177254 = omega*t177202*t177035*t177207*(7.0368744177664E13/3.74176054803257E14);
                double t177212 = t177211-t177254;
                double t177213 = 1.0/(t177155*t177155*t177155);
                double t177214 = t177144*t177057*6.0;
                double t177215 = gamma_aa[index]*gx*t177062*t177144*6.0;
                double t177216 = t177214+t177215;
                double t177217 = t177188*t177188;
                double t177218 = 1.0/(t177151*t177151*t177151);
                double t177219 = t177192*t177192;
                double t177220 = 1.0/(t177166*t177166*t177166);
                double t177221 = t177144*t177057*1.2E1;
                double t177222 = gamma_aa[index]*gx*t177062*t177144*2.4E1;
                double t177223 = t177061*t177145*t177059*1.2E1;
                double t177224 = t177221+t177222+t177223;
                double t177225 = t177182*t177182;
                double t177226 = 1.0/(t177161*t177161*t177161);
                double t177227 = cx1*t177144*t177057*t177178*(4.190715359480463E15/1.125899906842624E15);
                double t177228 = cx2*t177061*t177145*t177193*t177059*(4.190715359480463E15/1.125899906842624E15);
                double t177229 = cx3*gamma_aa[index]*gx*t177062*t177144*t177216*t177183*t177059*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t177230 = cx3*gx*t177062*t177144*t177182*t177183*t177059*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t177231 = cx4*t177061*t177224*t177072*t177145*t177189*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t177232 = cx2*gamma_aa[index]*t177144*t177057*t177192*t177193*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t177233 = cx4*gamma_aa[index]*t177061*t177145*t177059*t177188*t177189*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t177237 = cx2*t177144*t177057*t177167*(4.190715359480463E15/1.125899906842624E15);
                double t177238 = cx3*gamma_aa[index]*gx*t177062*t177144*t177162*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t177239 = cx4*t177061*t177152*t177145*t177059*(1.257214607844139E16/5.62949953421312E14);
                double t177240 = cx1*gamma_aa[index]*gx*t177213*t177062*t177144*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t177241 = cx4*t177061*t177072*t177145*t177217*t177218*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t177242 = cx2*t177220*t177144*t177057*t177219*t177059*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t177243 = cx3*gamma_aa[index]*gx*t177062*t177144*t177225*t177226*t177059*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t177234 = t177230+t177231-t177240+t177232-t177241+t177233-t177242-t177243+t177227+t177228- \
                   t177237+t177229-t177238-t177239;
                double t177235 = t177194*t177194;
                double t177236 = 1.0/(t177169*t177169);
                double t177244 = t177170*t177173*t177194*(1.0/2.0);
                double t177245 = t177200*t177201*t177040*t177194*(2.475880078570761E27/1.4000771998813E29);
                double t177249 = t177171*t177172*t177173*t177236*t177194*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t177246 = t177244+t177245-t177249;
                double t177247 = 1.0/pow(t177169,3.0/2.0);
                double t177248 = 1.0/sqrt(3.141592653589793);
                double t177250 = omega*t177202*t177035*t177246*(7.0368744177664E13/3.74176054803257E14);
                double t177251 = omega*t177205*t177035*t177207*t177194*(3.5184372088832E13/3.74176054803257E14);
                double t177252 = t177203*t177204*t177173*t177247*t177194*t177248*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t177253 = t177250+t177251+t177252;
                v_gamma_aa_gamma_aa_[index] = (rho_a[index]*(t177112+t177095*t177098*(t177111-c0p*t177050*t177052* \
                   2.0))*2.0-c0p*rho_a[index]*log((t177041*(1.0/2.0))/(b1p*sqrt(t177055)+b3p*pow(t177055,3.0/2.0)+b4p* \
                   1.0/pow(t177053,2.0/3.0)*t177039+b2p*c*t177054)+1.0)*(a1p*c*t177054+1.0)*4.0)*(ccab1*1.0/(t177064* \
                   t177064)*t177056*t177057*(1.0/2.0)-(ccab2*t177056*t177057*(1.0/2.0))/t177067+ccab2*t177060*t177061* \
                   t177083*t177059*(1.0/2.0)-(ccab4*t177060*t177061*t177059*3.0)/t177078+ccab4*t177060*t177061*t177072* \
                   t177092*(t177056*t177057*3.0+t177060*t177061*t177059*3.0+gamma_aa[index]*gcab*t177062*t177056*6.0) \
                   -(ccab3*gamma_aa[index]*gcab*t177062*t177056*(3.0/2.0))/t177071-ccab1*gamma_aa[index]*gcab*t177062* \
                   1.0/(t177064*t177064*t177064)*t177056*(1.0/2.0)-ccab4*t177060*t177061*t177072*(t177073*t177073)*1.0/ \
                   (t177078*t177078*t177078)*2.0-ccab2*t177056*t177057*1.0/(t177067*t177067*t177067)*t177059*(t177079* \
                   t177079)*2.0+ccab2*gamma_aa[index]*t177056*t177083*t177057*t177079*2.0+ccab4*gamma_aa[index]*t177060* \
                   t177061*t177073*t177092*t177059*4.0+ccab3*gcab*t177062*t177080*t177056*t177059*t177087*3.0+ccab3*gamma_aa[index]* \
                   gcab*t177062*t177080*t177056*t177059*(t177056*t177057*(3.0/2.0)+gamma_aa[index]*gcab*t177062*t177056* \
                   (3.0/2.0))-ccab3*gamma_aa[index]*gcab*t177062*1.0/(t177071*t177071*t177071)*t177056*t177059*(t177087* \
                   t177087)*2.0)*-4.0+rho_a[index]*(t177112+t177095*t177098*(t177111-t177112))*(ccaa1*t177113*1.0/(t177116* \
                   t177116)*t177057*2.0-(ccaa2*t177113*t177057*2.0)/t177119+ccaa2*t177114*t177061*t177134*t177059*2.0- \
                   (ccaa4*t177114*t177061*t177059*1.2E1)/t177129+ccaa4*t177114*t177061*t177143*t177072*(t177113*t177057* \
                   1.2E1+t177114*t177061*t177059*1.2E1+gamma_aa[index]*gcaa*t177113*t177062*2.4E1)-(ccaa3*gamma_aa[index]* \
                   gcaa*t177113*t177062*6.0)/t177123-ccaa1*gamma_aa[index]*gcaa*t177113*t177062*1.0/(t177116*t177116* \
                   t177116)*2.0-ccaa4*t177114*t177061*(t177124*t177124)*t177072*1.0/(t177129*t177129*t177129)*2.0-ccaa2* \
                   (t177130*t177130)*t177113*1.0/(t177119*t177119*t177119)*t177057*t177059*2.0+ccaa2*gamma_aa[index]* \
                   t177130*t177113*t177134*t177057*4.0+ccaa4*gamma_aa[index]*t177114*t177061*t177124*t177143*t177059* \
                   8.0+ccaa3*gcaa*t177113*t177131*t177062*t177138*t177059*6.0+ccaa3*gamma_aa[index]*gcaa*t177113*t177131* \
                   t177062*t177059*(t177113*t177057*6.0+gamma_aa[index]*gcaa*t177113*t177062*6.0)-ccaa3*gamma_aa[index]* \
                   gcaa*t177113*1.0/(t177123*t177123*t177123)*t177062*(t177138*t177138)*t177059*2.0)*2.0+c0*t177208*(omega* \
                   t177202*t177035*(omega*t177202*t177035*(t177170*t177234*t177173*(1.0/2.0)+t177200*t177201*t177040* \
                   t177234*(2.475880078570761E27/1.4000771998813E29)-t177171*t177172*t177235*t177173*1.0/(t177169*t177169* \
                   t177169)*(7.000385999406499E29/9.903520314283042E27)+1.0/(omega*omega*omega*omega)*t177208*t177235* \
                   t177173*1.0/(t177169*t177169*t177169*t177169)*(1.960216165627461E58/2.451992865385422E55)-t177171* \
                   t177234*t177172*t177173*t177236*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t177205*t177035*t177207*t177234*(3.5184372088832E13/3.74176054803257E14)+omega*t177035*t177207* \
                   t177235*t177247*(1.7592186044416E13/3.74176054803257E14)-omega*t177205*t177035*t177246*t177194*(7.0368744177664E13/ \
                   3.74176054803257E14)+t177203*t177204*t177234*t177173*t177247*t177248*(1.493415679873386E30/1.584563250285287E29) \
                   +t177203*t177204*t177235*t177173*t177248*1.0/pow(t177169,5.0/2.0)*(4.480247039620159E30/3.169126500570574E29) \
                   -1.0/(omega*omega*omega)*rho_a[index]*t177235*t177173*t177248*1.0/pow(t177169,7.0/2.0)*(2.090897243335959E59/ \
                   7.846377169233351E56))*(-2.81474976710656E14/1.122528164409771E15)+omega*t177212*t177205*t177035*t177234* \
                   (1.40737488355328E14/1.122528164409771E15)+omega*t177212*t177035*t177235*t177247*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t177205*t177035*t177253*t177194*(2.81474976710656E14/1.122528164409771E15) \
                   )*(cx0+cx1*gamma_aa[index]*gx*t177156*t177058+cx2*t177144*t177057*t177059*t177167+cx4*t177061*t177152* \
                   t177072*t177145+cx3*gamma_aa[index]*gx*t177062*t177144*t177162*t177059)*2.0+c0*t177208*(omega*t177202* \
                   t177035*t177253*(2.81474976710656E14/1.122528164409771E15)-omega*t177212*t177205*t177035*t177194*(1.40737488355328E14/ \
                   1.122528164409771E15))*(cx1*gx*t177156*t177058-cx1*gamma_aa[index]*t177144*t177057*t177178+cx2*gamma_aa[index]* \
                   t177144*t177057*t177167*2.0-cx2*t177144*t177057*t177192*t177193*t177059-cx4*t177061*t177072*t177145* \
                   t177188*t177189+cx4*gamma_aa[index]*t177061*t177152*t177145*t177059*4.0+cx3*gx*t177062*t177144*t177162* \
                   t177059*3.0-cx3*gamma_aa[index]*gx*t177062*t177144*t177182*t177183*t177059)*4.0+c0*t177208*(omega* \
                   t177202*t177212*t177035*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*t177144*t177057*t177178* \
                   2.0-cx2*t177144*t177057*t177167*2.0+cx2*t177061*t177145*t177193*t177059*2.0-cx4*t177061*t177152*t177145* \
                   t177059*1.2E1-cx2*t177220*t177144*t177057*t177219*t177059*2.0-cx4*t177061*t177072*t177145*t177217* \
                   t177218*2.0+cx4*t177061*t177224*t177072*t177145*t177189-cx1*gamma_aa[index]*gx*t177213*t177062*t177144* \
                   2.0-cx3*gamma_aa[index]*gx*t177062*t177144*t177162*6.0+cx2*gamma_aa[index]*t177144*t177057*t177192* \
                   t177193*4.0+cx4*gamma_aa[index]*t177061*t177145*t177059*t177188*t177189*8.0+cx3*gx*t177062*t177144* \
                   t177182*t177183*t177059*6.0-cx3*gamma_aa[index]*gx*t177062*t177144*t177225*t177226*t177059*2.0+cx3* \
                   gamma_aa[index]*gx*t177062*t177144*t177216*t177183*t177059)*2.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

            }
        }
    }
}
void wB97f_Functional::computeUKSFunctional(boost::shared_ptr<UKSFunctions> prop)
{
    int ntrue = prop->npoints();

    const double* restrict rho_a;
    const double* restrict rho_b;
    const double* restrict gamma_aa;
    const double* restrict gamma_ab;
    const double* restrict gamma_bb;
    const double* restrict tau_a;
    const double* restrict tau_b;

    rho_a = prop->property_value("RHO_A")->pointer();
    rho_b = prop->property_value("RHO_B")->pointer();
    if (is_gga_) {
        gamma_aa = prop->property_value("GAMMA_AA")->pointer();
        gamma_ab = prop->property_value("GAMMA_AB")->pointer();
        gamma_bb = prop->property_value("GAMMA_BB")->pointer();
    }
    if (is_meta_) {
        tau_a = prop->property_value("TAU_A")->pointer();
        tau_b = prop->property_value("TAU_B")->pointer();
    }

    double omega = params_[0].second;
    double c0 = params_[1].second;
    double two_13 = params_[2].second;
    double d2fz0 = params_[3].second;
    double c = params_[4].second;
    double Aa = params_[5].second;
    double a1a = params_[6].second;
    double b1a = params_[7].second;
    double b2a = params_[8].second;
    double b3a = params_[9].second;
    double b4a = params_[10].second;
    double c0p = params_[11].second;
    double a1p = params_[12].second;
    double b1p = params_[13].second;
    double b2p = params_[14].second;
    double b3p = params_[15].second;
    double b4p = params_[16].second;
    double c0f = params_[17].second;
    double a1f = params_[18].second;
    double b1f = params_[19].second;
    double b2f = params_[20].second;
    double b3f = params_[21].second;
    double b4f = params_[22].second;
    double gcab = params_[23].second;
    double gcaa = params_[24].second;
    double gx = params_[25].second;
    double ccab0 = params_[26].second;
    double ccab1 = params_[27].second;
    double ccab2 = params_[28].second;
    double ccab3 = params_[29].second;
    double ccab4 = params_[30].second;
    double ccaa0 = params_[31].second;
    double ccaa1 = params_[32].second;
    double ccaa2 = params_[33].second;
    double ccaa3 = params_[34].second;
    double ccaa4 = params_[35].second;
    double cx0 = params_[36].second;
    double cx1 = params_[37].second;
    double cx2 = params_[38].second;
    double cx3 = params_[39].second;
    double cx4 = params_[40].second;

    //Functional
    for (int index = 0; index < ntrue; index++) {

        //Functional Value
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t169154 = 1.0/pow(rho_a[index],1.0/3.0);
            double t169155 = c*t169154;
            double t169156 = sqrt(t169155);
            double t169157 = pow(t169155,3.0/2.0);
            double t169158 = c*c;
            double t169159 = 1.0/pow(rho_a[index],2.0/3.0);
            double t169160 = 1.0/c0p;
            double t169161 = b1p*t169156;
            double t169162 = b3p*t169157;
            double t169163 = b4p*t169158*t169159;
            double t169164 = b2p*c*t169154;
            double t169165 = t169161+t169162+t169163+t169164;
            double t169166 = 1.0/t169165;
            double t169167 = t169160*t169166*(1.0/2.0);
            double t169168 = t169167+1.0;
            double t169169 = log(t169168);
            double t169170 = a1p*c*t169154;
            double t169171 = t169170+1.0;
            double t169172 = pow(2.0,1.0/3.0);
            double t169173 = t169172*2.0;
            double t169174 = t169173-2.0;
            double t169175 = two_13*2.0;
            double t169176 = t169175-2.0;
            double t169177 = 1.0/t169176;
            double t169178 = 1.0/c0f;
            double t169179 = 1.0/pow(rho_b[index],1.0/3.0);
            double t169180 = c*t169179;
            double t169181 = sqrt(t169180);
            double t169182 = pow(t169180,3.0/2.0);
            double t169183 = 1.0/pow(rho_b[index],2.0/3.0);
            double t169184 = b1p*t169181;
            double t169185 = b3p*t169182;
            double t169186 = b4p*t169183*t169158;
            double t169187 = b2p*c*t169179;
            double t169188 = t169184+t169185+t169186+t169187;
            double t169189 = 1.0/t169188;
            double t169190 = t169160*t169189*(1.0/2.0);
            double t169191 = t169190+1.0;
            double t169192 = log(t169191);
            double t169193 = a1p*c*t169179;
            double t169194 = t169193+1.0;
            double t169195 = c0p*t169192*t169194*2.0;
            double t169196 = rho_a[index]+rho_b[index];
            double t169197 = 1.0/pow(t169196,1.0/3.0);
            double t169198 = c*t169197;
            double t169199 = sqrt(t169198);
            double t169200 = pow(t169198,3.0/2.0);
            double t169201 = 1.0/pow(t169196,2.0/3.0);
            double t169202 = b1p*t169199;
            double t169203 = b3p*t169200;
            double t169204 = b4p*t169201*t169158;
            double t169205 = b2p*c*t169197;
            double t169206 = t169202+t169203+t169204+t169205;
            double t169207 = 1.0/t169206;
            double t169208 = t169160*t169207*(1.0/2.0);
            double t169209 = t169208+1.0;
            double t169210 = log(t169209);
            double t169211 = a1p*c*t169197;
            double t169212 = t169211+1.0;
            double t169213 = c0p*t169210*t169212*2.0;
            double t169214 = rho_a[index]-rho_b[index];
            double t169215 = t169214*t169214;
            double t169216 = 1.0/t169196;
            double t169217 = t169214*t169216;
            double t169218 = 1.0/(t169196*t169196*t169196*t169196);
            double t169219 = t169215*t169215;
            double t169220 = t169217+1.0;
            double t169221 = pow(t169220,4.0/3.0);
            double t169222 = -t169217+1.0;
            double t169223 = pow(t169222,4.0/3.0);
            double t169224 = t169221+t169223-2.0;
            double t169227 = 1.0/pow(rho_a[index],8.0/3.0);
            double t169228 = gamma_aa[index]*t169227*(1.0/2.0);
            double t169229 = 1.0/pow(rho_b[index],8.0/3.0);
            double t169230 = gamma_bb[index]*t169229*(1.0/2.0);
            double t169225 = t169230+t169228;
            double t169226 = gcab*gcab;
            double t169231 = t169225*t169225;
            double t169232 = t169226*t169226;
            double t169233 = t169231*t169231;
            double t169234 = c0p*t169171*t169169*2.0;
            double t169235 = b1f*t169156;
            double t169236 = b3f*t169157;
            double t169237 = b4f*t169158*t169159;
            double t169238 = b2f*c*t169154;
            double t169239 = t169235+t169236+t169237+t169238;
            double t169240 = 1.0/t169239;
            double t169241 = t169240*t169178*(1.0/2.0);
            double t169242 = t169241+1.0;
            double t169243 = log(t169242);
            double t169244 = a1f*c*t169154;
            double t169245 = t169244+1.0;
            double t169246 = t169234-c0f*t169243*t169245*2.0;
            double t169247 = t169234-t169174*t169246*t169177;
            double t169248 = gamma_aa[index]*gamma_aa[index];
            double t169249 = gcaa*gcaa;
            double t169250 = t169248*t169248;
            double t169251 = t169249*t169249;
            double t169252 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t169253 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t169254 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t169255 = b1f*t169181;
            double t169256 = b3f*t169182;
            double t169257 = b4f*t169183*t169158;
            double t169258 = b2f*c*t169179;
            double t169259 = t169255+t169256+t169257+t169258;
            double t169260 = 1.0/t169259;
            double t169261 = t169260*t169178*(1.0/2.0);
            double t169262 = t169261+1.0;
            double t169263 = log(t169262);
            double t169264 = a1f*c*t169179;
            double t169265 = t169264+1.0;
            double t169266 = t169195-c0f*t169263*t169265*2.0;
            double t169267 = t169195-t169174*t169266*t169177;
            double t169268 = gamma_bb[index]*gamma_bb[index];
            double t169269 = t169268*t169268;
            double t169270 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t169271 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t169272 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t169273 = gx*gx;
            double t169274 = t169273*t169273;
            double t169275 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t169276 = gamma_aa[index]*gx*t169227*4.0;
            double t169277 = gamma_aa[index]*gx*t169253*t169273*t169248*4.0;
            double t169278 = t169254*t169273*t169248*6.0;
            double t169279 = t169250*t169252*t169274;
            double t169280 = t169276+t169277+t169278+t169279+1.0;
            double t169281 = 1.0/t169280;
            double t169282 = cx4*t169250*t169252*t169281*t169274*(4.190715359480463E15/2.251799813685248E15);
            double t169283 = gamma_aa[index]*gx*t169227;
            double t169284 = t169283+1.0;
            double t169285 = 1.0/t169284;
            double t169286 = cx1*gamma_aa[index]*gx*t169227*t169285*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169287 = gamma_aa[index]*gx*t169227*3.0;
            double t169288 = gamma_aa[index]*gx*t169253*t169273*t169248;
            double t169289 = t169254*t169273*t169248*3.0;
            double t169290 = t169287+t169288+t169289+1.0;
            double t169291 = 1.0/t169290;
            double t169292 = cx3*gamma_aa[index]*gx*t169253*t169273*t169291*t169248*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169293 = gamma_aa[index]*gx*t169227*2.0;
            double t169294 = t169254*t169273*t169248;
            double t169295 = t169293+t169294+1.0;
            double t169296 = 1.0/t169295;
            double t169297 = cx2*t169254*t169273*t169248*t169296*(4.190715359480463E15/2.251799813685248E15);
            double t169298 = t169282+t169292+t169275+t169286+t169297;
            double t169299 = 1.0/(omega*omega);
            double t169300 = pow(rho_a[index],2.0/3.0);
            double t169301 = 1.0/t169298;
            double t169302 = exp(t169300*t169301*t169299*(-1.4000771998813E29/4.951760157141521E27));
            double t169303 = sqrt(t169298);
            double t169304 = 1.0/omega;
            double t169305 = gamma_bb[index]*gx*t169229*4.0;
            double t169306 = gamma_bb[index]*gx*t169271*t169273*t169268*4.0;
            double t169307 = t169272*t169273*t169268*6.0;
            double t169308 = t169270*t169274*t169269;
            double t169309 = t169305+t169306+t169307+t169308+1.0;
            double t169310 = 1.0/t169309;
            double t169311 = cx4*t169310*t169270*t169274*t169269*(4.190715359480463E15/2.251799813685248E15);
            double t169312 = gamma_bb[index]*gx*t169229;
            double t169313 = t169312+1.0;
            double t169314 = 1.0/t169313;
            double t169315 = cx1*gamma_bb[index]*gx*t169314*t169229*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169316 = gamma_bb[index]*gx*t169229*3.0;
            double t169317 = gamma_bb[index]*gx*t169271*t169273*t169268;
            double t169318 = t169272*t169273*t169268*3.0;
            double t169319 = t169316+t169317+t169318+1.0;
            double t169320 = 1.0/t169319;
            double t169321 = cx3*gamma_bb[index]*gx*t169320*t169271*t169273*t169268*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169322 = gamma_bb[index]*gx*t169229*2.0;
            double t169323 = t169272*t169273*t169268;
            double t169324 = t169322+t169323+1.0;
            double t169325 = 1.0/t169324;
            double t169326 = cx2*t169325*t169272*t169273*t169268*(4.190715359480463E15/2.251799813685248E15);
            double t169327 = t169311+t169321+t169315+t169326+t169275;
            double t169328 = omega*omega;
            double t169329 = pow(rho_b[index],2.0/3.0);
            double t169330 = 1.0/t169327;
            double t169331 = exp(t169330*t169329*t169299*(-1.4000771998813E29/4.951760157141521E27));
            double t169332 = sqrt(t169327);
            functional_[index] = (rho_a[index]*t169247+rho_b[index]*t169267-t169196*(t169213-t169224*t169218* \
               t169219*t169177*(t169213-c0f*log((t169178*(1.0/2.0))/(b1f*t169199+b3f*t169200+b2f*c*t169197+b4f*t169201* \
               t169158)+1.0)*(a1f*c*t169197+1.0)*2.0)+(Aa*t169224*t169177*log((1.0/2.0)/(Aa*(b1a*t169199+b3a*t169200+ \
               b2a*c*t169197+b4a*t169201*t169158))+1.0)*(t169218*t169219-1.0)*(a1a*c*t169197+1.0)*2.0)/d2fz0))*(ccab0+ \
               (ccab4*t169232*t169233)/(gcab*t169225*4.0+t169232*t169233+t169231*t169226*6.0+gcab*t169231*t169225* \
               t169226*4.0+1.0)+(ccab1*gcab*t169225)/(gcab*t169225+1.0)+(ccab2*t169231*t169226)/(gcab*t169225*2.0+ \
               t169231*t169226+1.0)+(ccab3*gcab*t169231*t169225*t169226)/(gcab*t169225*3.0+t169231*t169226*3.0+gcab* \
               t169231*t169225*t169226+1.0))-rho_a[index]*t169247*(ccaa0+(ccaa2*t169254*t169248*t169249)/(gamma_aa[index]* \
               gcaa*t169227*2.0+t169254*t169248*t169249+1.0)+(ccaa1*gamma_aa[index]*gcaa*t169227)/(gamma_aa[index]* \
               gcaa*t169227+1.0)+(ccaa4*t169250*t169251*t169252)/(gamma_aa[index]*gcaa*t169227*4.0+t169250*t169251* \
               t169252+t169254*t169248*t169249*6.0+gamma_aa[index]*gcaa*t169253*t169248*t169249*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t169253*t169248*t169249)/(gamma_aa[index]*gcaa*t169227*3.0+t169254*t169248*t169249*3.0+gamma_aa[index]* \
               gcaa*t169253*t169248*t169249+1.0))-rho_b[index]*t169267*(ccaa0+(ccaa2*t169272*t169249*t169268)/(gamma_bb[index]* \
               gcaa*t169229*2.0+t169272*t169249*t169268+1.0)+(ccaa1*gamma_bb[index]*gcaa*t169229)/(gamma_bb[index]* \
               gcaa*t169229+1.0)+(ccaa4*t169251*t169270*t169269)/(gamma_bb[index]*gcaa*t169229*4.0+t169251*t169270* \
               t169269+t169272*t169249*t169268*6.0+gamma_bb[index]*gcaa*t169271*t169249*t169268*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t169271*t169249*t169268)/(gamma_bb[index]*gcaa*t169229*3.0+t169272*t169249*t169268*3.0+gamma_bb[index]* \
               gcaa*t169271*t169249*t169268+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t169332*t169179*(erf(pow(rho_b[index],1.0/ \
               3.0)*t169304*1.0/sqrt(t169327)*(3.74176054803257E14/7.0368744177664E13))*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t169332*t169179*(-t169331+t169183*t169327*t169328*(t169331-1.0)*(2.475880078570761E27/1.4000771998813E29) \
               +3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)-1.0) \
               *(cx0+cx1*gamma_bb[index]*gx*t169314*t169229+cx2*t169325*t169272*t169273*t169268+cx4*t169310*t169270* \
               t169274*t169269+cx3*gamma_bb[index]*gx*t169320*t169271*t169273*t169268)-c0*pow(rho_a[index],4.0/3.0) \
               *(omega*t169303*t169154*(erf(pow(rho_a[index],1.0/3.0)*t169304*1.0/sqrt(t169298)*(3.74176054803257E14/ \
               7.0368744177664E13))*(3.991211251234741E15/2.251799813685248E15)-omega*t169303*t169154*(-t169302+t169328* \
               t169159*t169298*(t169302-1.0)*(2.475880078570761E27/1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/ \
               3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx0+cx1*gamma_aa[index]*gx* \
               t169227*t169285+cx2*t169254*t169273*t169248*t169296+cx4*t169250*t169252*t169281*t169274+cx3*gamma_aa[index]* \
               gx*t169253*t169273*t169291*t169248);
        } else if (rho_a[index] > cutoff_) {
            double t174669 = 1.0/pow(rho_a[index],1.0/3.0);
            double t174670 = c*t174669;
            double t174671 = sqrt(t174670);
            double t174672 = pow(t174670,3.0/2.0);
            double t174673 = c*c;
            double t174674 = 1.0/pow(rho_a[index],2.0/3.0);
            double t174675 = 1.0/c0p;
            double t174676 = b1p*t174671;
            double t174677 = b3p*t174672;
            double t174678 = b4p*t174673*t174674;
            double t174679 = b2p*c*t174669;
            double t174680 = t174676+t174677+t174678+t174679;
            double t174681 = 1.0/t174680;
            double t174682 = t174681*t174675*(1.0/2.0);
            double t174683 = t174682+1.0;
            double t174684 = log(t174683);
            double t174685 = a1p*c*t174669;
            double t174686 = t174685+1.0;
            double t174687 = gamma_aa[index]*gamma_aa[index];
            double t174688 = gcaa*gcaa;
            double t174689 = t174687*t174687;
            double t174690 = t174688*t174688;
            double t174691 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t174692 = 1.0/pow(rho_a[index],8.0/3.0);
            double t174693 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t174694 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t174695 = gx*gx;
            double t174696 = t174695*t174695;
            double t174697 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t174698 = gamma_aa[index]*gx*t174692*4.0;
            double t174699 = gamma_aa[index]*gx*t174693*t174695*t174687*4.0;
            double t174700 = t174694*t174695*t174687*6.0;
            double t174701 = t174691*t174696*t174689;
            double t174702 = t174700+t174701+t174698+t174699+1.0;
            double t174703 = 1.0/t174702;
            double t174704 = cx4*t174703*t174691*t174696*t174689*(4.190715359480463E15/2.251799813685248E15);
            double t174705 = gamma_aa[index]*gx*t174692;
            double t174706 = t174705+1.0;
            double t174707 = 1.0/t174706;
            double t174708 = cx1*gamma_aa[index]*gx*t174707*t174692*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174709 = gamma_aa[index]*gx*t174692*3.0;
            double t174710 = gamma_aa[index]*gx*t174693*t174695*t174687;
            double t174711 = t174694*t174695*t174687*3.0;
            double t174712 = t174710+t174711+t174709+1.0;
            double t174713 = 1.0/t174712;
            double t174714 = cx3*gamma_aa[index]*gx*t174713*t174693*t174695*t174687*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174715 = gamma_aa[index]*gx*t174692*2.0;
            double t174716 = t174694*t174695*t174687;
            double t174717 = t174715+t174716+1.0;
            double t174718 = 1.0/t174717;
            double t174719 = cx2*t174718*t174694*t174695*t174687*(4.190715359480463E15/2.251799813685248E15);
            double t174720 = t174704+t174714+t174708+t174719+t174697;
            double t174721 = 1.0/(omega*omega);
            double t174722 = pow(rho_a[index],2.0/3.0);
            double t174723 = 1.0/t174720;
            double t174724 = exp(t174721*t174722*t174723*(-1.4000771998813E29/4.951760157141521E27));
            double t174725 = sqrt(t174720);
            functional_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t174671+ \
               b3f*t174672+b2f*c*t174669+b4f*t174673*t174674))+1.0)*(a1f*c*t174669+1.0)*2.0-c0p*t174684*t174686*2.0) \
               )/(two_13*2.0-2.0)+c0p*t174684*t174686*2.0)*(ccaa0+(ccaa2*t174694*t174687*t174688)/(gamma_aa[index]* \
               gcaa*t174692*2.0+t174694*t174687*t174688+1.0)+(ccaa1*gamma_aa[index]*gcaa*t174692)/(gamma_aa[index]* \
               gcaa*t174692+1.0)+(ccaa4*t174690*t174691*t174689)/(gamma_aa[index]*gcaa*t174692*4.0+t174690*t174691* \
               t174689+t174694*t174687*t174688*6.0+gamma_aa[index]*gcaa*t174693*t174687*t174688*4.0+1.0)+(ccaa3*gamma_aa[index]* \
               gcaa*t174693*t174687*t174688)/(gamma_aa[index]*gcaa*t174692*3.0+t174694*t174687*t174688*3.0+gamma_aa[index]* \
               gcaa*t174693*t174687*t174688+1.0))-c0*pow(rho_a[index],4.0/3.0)*(omega*t174725*t174669*(erf((pow(rho_a[index],1.0/ \
               3.0)*1.0/sqrt(t174720)*(3.74176054803257E14/7.0368744177664E13))/omega)*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t174725*t174669*(-t174724+(omega*omega)*t174720*t174674*(t174724-1.0)*(2.475880078570761E27/ \
               1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               -1.0)*(cx0+cx1*gamma_aa[index]*gx*t174707*t174692+cx2*t174718*t174694*t174695*t174687+cx4*t174703* \
               t174691*t174696*t174689+cx3*gamma_aa[index]*gx*t174713*t174693*t174695*t174687);
        } else if (rho_b[index] > cutoff_) {
            double t173574 = 1.0/pow(rho_b[index],1.0/3.0);
            double t173575 = c*t173574;
            double t173576 = sqrt(t173575);
            double t173577 = pow(t173575,3.0/2.0);
            double t173578 = c*c;
            double t173579 = 1.0/pow(rho_b[index],2.0/3.0);
            double t173580 = 1.0/c0p;
            double t173581 = b1p*t173576;
            double t173582 = b3p*t173577;
            double t173583 = b4p*t173578*t173579;
            double t173584 = b2p*c*t173574;
            double t173585 = t173581+t173582+t173583+t173584;
            double t173586 = 1.0/t173585;
            double t173587 = t173580*t173586*(1.0/2.0);
            double t173588 = t173587+1.0;
            double t173589 = log(t173588);
            double t173590 = a1p*c*t173574;
            double t173591 = t173590+1.0;
            double t173592 = gamma_bb[index]*gamma_bb[index];
            double t173593 = gcaa*gcaa;
            double t173594 = t173592*t173592;
            double t173595 = t173593*t173593;
            double t173596 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t173597 = 1.0/pow(rho_b[index],8.0/3.0);
            double t173598 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t173599 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t173600 = gx*gx;
            double t173601 = t173600*t173600;
            double t173602 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t173603 = gamma_bb[index]*gx*t173597*4.0;
            double t173604 = gamma_bb[index]*gx*t173600*t173592*t173598*4.0;
            double t173605 = t173600*t173592*t173599*6.0;
            double t173606 = t173601*t173594*t173596;
            double t173607 = t173603+t173604+t173605+t173606+1.0;
            double t173608 = 1.0/t173607;
            double t173609 = cx4*t173601*t173608*t173594*t173596*(4.190715359480463E15/2.251799813685248E15);
            double t173610 = gamma_bb[index]*gx*t173597;
            double t173611 = t173610+1.0;
            double t173612 = 1.0/t173611;
            double t173613 = cx1*gamma_bb[index]*gx*t173612*t173597*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t173614 = gamma_bb[index]*gx*t173597*3.0;
            double t173615 = gamma_bb[index]*gx*t173600*t173592*t173598;
            double t173616 = t173600*t173592*t173599*3.0;
            double t173617 = t173614+t173615+t173616+1.0;
            double t173618 = 1.0/t173617;
            double t173619 = cx3*gamma_bb[index]*gx*t173600*t173618*t173592*t173598*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t173620 = gamma_bb[index]*gx*t173597*2.0;
            double t173621 = t173600*t173592*t173599;
            double t173622 = t173620+t173621+1.0;
            double t173623 = 1.0/t173622;
            double t173624 = cx2*t173600*t173623*t173592*t173599*(4.190715359480463E15/2.251799813685248E15);
            double t173625 = t173602+t173613+t173624+t173609+t173619;
            double t173626 = 1.0/(omega*omega);
            double t173627 = pow(rho_b[index],2.0/3.0);
            double t173628 = 1.0/t173625;
            double t173629 = exp(t173626*t173627*t173628*(-1.4000771998813E29/4.951760157141521E27));
            double t173630 = sqrt(t173625);
            functional_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t173576+ \
               b3f*t173577+b2f*c*t173574+b4f*t173578*t173579))+1.0)*(a1f*c*t173574+1.0)*2.0-c0p*t173591*t173589*2.0) \
               )/(two_13*2.0-2.0)+c0p*t173591*t173589*2.0)*(ccaa0+(ccaa2*t173592*t173593*t173599)/(gamma_bb[index]* \
               gcaa*t173597*2.0+t173592*t173593*t173599+1.0)+(ccaa1*gamma_bb[index]*gcaa*t173597)/(gamma_bb[index]* \
               gcaa*t173597+1.0)+(ccaa4*t173594*t173595*t173596)/(gamma_bb[index]*gcaa*t173597*4.0+t173592*t173593* \
               t173599*6.0+t173594*t173595*t173596+gamma_bb[index]*gcaa*t173592*t173593*t173598*4.0+1.0)+(ccaa3*gamma_bb[index]* \
               gcaa*t173592*t173593*t173598)/(gamma_bb[index]*gcaa*t173597*3.0+t173592*t173593*t173599*3.0+gamma_bb[index]* \
               gcaa*t173592*t173593*t173598+1.0))-c0*pow(rho_b[index],4.0/3.0)*(omega*t173630*t173574*(erf((pow(rho_b[index],1.0/ \
               3.0)*1.0/sqrt(t173625)*(3.74176054803257E14/7.0368744177664E13))/omega)*(3.991211251234741E15/2.251799813685248E15) \
               -omega*t173630*t173574*(-t173629+(omega*omega)*t173625*t173579*(t173629-1.0)*(2.475880078570761E27/ \
               1.4000771998813E29)+3.0/2.0)*(7.0368744177664E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               -1.0)*(cx0+cx1*gamma_bb[index]*gx*t173612*t173597+cx2*t173600*t173623*t173592*t173599+cx4*t173601* \
               t173608*t173594*t173596+cx3*gamma_bb[index]*gx*t173600*t173618*t173592*t173598);
        } else {
            functional_[index] = 0.0;
        } 

    }
    //First Partials
    for (int index = 0; index < ntrue && deriv_ >= 1; index++) {

        //V_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t169334 = 1.0/pow(rho_a[index],1.0/3.0);
            double t169335 = c*t169334;
            double t169336 = sqrt(t169335);
            double t169337 = pow(t169335,3.0/2.0);
            double t169338 = c*c;
            double t169339 = 1.0/pow(rho_a[index],2.0/3.0);
            double t169340 = 1.0/c0p;
            double t169341 = b1p*t169336;
            double t169342 = b3p*t169337;
            double t169343 = b4p*t169338*t169339;
            double t169344 = b2p*c*t169334;
            double t169345 = t169341+t169342+t169343+t169344;
            double t169346 = 1.0/t169345;
            double t169347 = t169340*t169346*(1.0/2.0);
            double t169348 = t169347+1.0;
            double t169349 = log(t169348);
            double t169350 = a1p*c*t169334;
            double t169351 = t169350+1.0;
            double t169352 = gamma_aa[index]*gamma_aa[index];
            double t169353 = gcaa*gcaa;
            double t169354 = t169352*t169352;
            double t169355 = t169353*t169353;
            double t169356 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t169357 = 1.0/pow(rho_a[index],8.0/3.0);
            double t169358 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t169359 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t169360 = pow(2.0,1.0/3.0);
            double t169361 = t169360*2.0;
            double t169362 = t169361-2.0;
            double t169363 = two_13*2.0;
            double t169364 = t169363-2.0;
            double t169365 = 1.0/t169364;
            double t169366 = 1.0/c0f;
            double t169367 = b1f*t169336;
            double t169368 = b3f*t169337;
            double t169369 = b4f*t169338*t169339;
            double t169370 = b2f*c*t169334;
            double t169371 = t169370+t169367+t169368+t169369;
            double t169372 = 1.0/t169371;
            double t169373 = t169372*t169366*(1.0/2.0);
            double t169374 = t169373+1.0;
            double t169375 = log(t169374);
            double t169376 = a1f*c*t169334;
            double t169377 = t169376+1.0;
            double t169378 = c0f*t169375*t169377*2.0;
            double t169379 = c0p*t169351*t169349*2.0;
            double t169380 = 1.0/pow(rho_b[index],1.0/3.0);
            double t169381 = c*t169380;
            double t169382 = sqrt(t169381);
            double t169383 = pow(t169381,3.0/2.0);
            double t169384 = 1.0/pow(rho_b[index],2.0/3.0);
            double t169385 = b1p*t169382;
            double t169386 = b3p*t169383;
            double t169387 = b4p*t169338*t169384;
            double t169388 = b2p*c*t169380;
            double t169389 = t169385+t169386+t169387+t169388;
            double t169390 = 1.0/t169389;
            double t169391 = t169340*t169390*(1.0/2.0);
            double t169392 = t169391+1.0;
            double t169393 = log(t169392);
            double t169394 = a1p*c*t169380;
            double t169395 = t169394+1.0;
            double t169396 = c0p*t169393*t169395*2.0;
            double t169397 = rho_a[index]+rho_b[index];
            double t169398 = 1.0/pow(t169397,1.0/3.0);
            double t169399 = c*t169398;
            double t169400 = sqrt(t169399);
            double t169401 = pow(t169399,3.0/2.0);
            double t169402 = 1.0/pow(t169397,2.0/3.0);
            double t169403 = b1p*t169400;
            double t169404 = b3p*t169401;
            double t169405 = b4p*t169402*t169338;
            double t169406 = b2p*c*t169398;
            double t169407 = t169403+t169404+t169405+t169406;
            double t169408 = 1.0/t169407;
            double t169409 = t169340*t169408*(1.0/2.0);
            double t169410 = t169409+1.0;
            double t169411 = log(t169410);
            double t169412 = a1p*c*t169398;
            double t169413 = t169412+1.0;
            double t169414 = c0p*t169411*t169413*2.0;
            double t169415 = rho_a[index]-rho_b[index];
            double t169416 = t169415*t169415;
            double t169417 = 1.0/t169397;
            double t169418 = t169415*t169417;
            double t169419 = 1.0/(t169397*t169397*t169397*t169397);
            double t169420 = t169416*t169416;
            double t169421 = t169418+1.0;
            double t169422 = pow(t169421,4.0/3.0);
            double t169423 = -t169418+1.0;
            double t169424 = pow(t169423,4.0/3.0);
            double t169425 = t169422+t169424-2.0;
            double t169426 = gcab*gcab;
            double t169430 = gamma_aa[index]*t169357*(1.0/2.0);
            double t169431 = 1.0/pow(rho_b[index],8.0/3.0);
            double t169432 = gamma_bb[index]*t169431*(1.0/2.0);
            double t169427 = t169430+t169432;
            double t169428 = t169427*t169427;
            double t169429 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t169433 = t169426*t169426;
            double t169434 = t169428*t169428;
            double t169435 = t169426*t169428*6.0;
            double t169436 = gcab*t169426*t169427*t169428*4.0;
            double t169437 = t169433*t169434;
            double t169438 = gcab*t169427*4.0;
            double t169439 = t169435+t169436+t169437+t169438+1.0;
            double t169440 = gcab*t169427;
            double t169441 = t169440+1.0;
            double t169442 = t169426*t169428;
            double t169443 = gcab*t169427*2.0;
            double t169444 = t169442+t169443+1.0;
            double t169445 = t169426*t169428*3.0;
            double t169446 = gcab*t169426*t169427*t169428;
            double t169447 = gcab*t169427*3.0;
            double t169448 = t169445+t169446+t169447+1.0;
            double t169449 = 1.0/t169444;
            double t169450 = 1.0/t169448;
            double t169451 = 1.0/t169441;
            double t169452 = 1.0/t169439;
            double t169453 = 1.0/pow(t169397,4.0/3.0);
            double t169454 = b1f*t169400;
            double t169455 = b3f*t169401;
            double t169456 = b4f*t169402*t169338;
            double t169457 = b2f*c*t169398;
            double t169458 = t169454+t169455+t169456+t169457;
            double t169459 = 1.0/t169458;
            double t169460 = t169366*t169459*(1.0/2.0);
            double t169461 = t169460+1.0;
            double t169462 = log(t169461);
            double t169463 = a1f*c*t169398;
            double t169464 = t169463+1.0;
            double t169466 = c0f*t169462*t169464*2.0;
            double t169465 = t169414-t169466;
            double t169467 = 1.0/(t169397*t169397);
            double t169494 = t169415*t169467;
            double t169468 = t169417-t169494;
            double t169469 = 1.0/pow(t169397,5.0/3.0);
            double t169470 = 1.0/sqrt(t169399);
            double t169471 = 1.0/t169410;
            double t169472 = 1.0/(t169407*t169407);
            double t169473 = b4p*t169338*t169469*(2.0/3.0);
            double t169474 = b2p*c*t169453*(1.0/3.0);
            double t169475 = b1p*c*t169470*t169453*(1.0/6.0);
            double t169476 = b3p*c*t169400*t169453*(1.0/2.0);
            double t169477 = t169473+t169474+t169475+t169476;
            double t169478 = t169413*t169471*t169472*t169477;
            double t169479 = 1.0/d2fz0;
            double t169480 = 1.0/Aa;
            double t169481 = b1a*t169400;
            double t169482 = b3a*t169401;
            double t169483 = b4a*t169402*t169338;
            double t169484 = b2a*c*t169398;
            double t169485 = t169481+t169482+t169483+t169484;
            double t169486 = 1.0/t169485;
            double t169487 = t169480*t169486*(1.0/2.0);
            double t169488 = t169487+1.0;
            double t169489 = log(t169488);
            double t169490 = a1a*c*t169398;
            double t169491 = t169490+1.0;
            double t169492 = 1.0/(t169397*t169397*t169397*t169397*t169397);
            double t169493 = pow(t169421,1.0/3.0);
            double t169495 = t169493*t169468*(4.0/3.0);
            double t169496 = pow(t169423,1.0/3.0);
            double t169497 = t169495-t169468*t169496*(4.0/3.0);
            double t169498 = t169420*t169419;
            double t169499 = t169498-1.0;
            double t169500 = 1.0/pow(rho_a[index],4.0/3.0);
            double t169501 = 1.0/pow(rho_a[index],5.0/3.0);
            double t169502 = 1.0/sqrt(t169335);
            double t169503 = 1.0/t169348;
            double t169504 = 1.0/(t169345*t169345);
            double t169505 = b4p*t169501*t169338*(2.0/3.0);
            double t169506 = b2p*c*t169500*(1.0/3.0);
            double t169507 = b1p*c*t169500*t169502*(1.0/6.0);
            double t169508 = b3p*c*t169500*t169336*(1.0/2.0);
            double t169509 = t169505+t169506+t169507+t169508;
            double t169510 = t169503*t169351*t169504*t169509;
            double t169511 = t169378-t169379;
            double t169512 = t169511*t169362*t169365;
            double t169513 = Aa*t169425*t169365*t169491*t169479*t169489*t169499*2.0;
            double t169514 = t169512+t169379;
            double t169515 = gamma_aa[index]*gcaa*t169357*4.0;
            double t169516 = gamma_aa[index]*gcaa*t169352*t169353*t169358*4.0;
            double t169517 = t169352*t169353*t169359*6.0;
            double t169518 = t169354*t169355*t169356;
            double t169519 = t169515+t169516+t169517+t169518+1.0;
            double t169520 = 1.0/t169519;
            double t169521 = gamma_aa[index]*gcaa*t169357;
            double t169522 = t169521+1.0;
            double t169523 = 1.0/t169522;
            double t169524 = gamma_aa[index]*gcaa*t169357*3.0;
            double t169525 = gamma_aa[index]*gcaa*t169352*t169353*t169358;
            double t169526 = t169352*t169353*t169359*3.0;
            double t169527 = t169524+t169525+t169526+1.0;
            double t169528 = 1.0/t169527;
            double t169529 = gamma_aa[index]*gcaa*t169357*2.0;
            double t169530 = t169352*t169353*t169359;
            double t169531 = t169530+t169529+1.0;
            double t169532 = 1.0/t169531;
            double t169533 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t169534 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t169535 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t169536 = 1.0/t169374;
            double t169537 = 1.0/(t169371*t169371);
            double t169538 = b4f*t169501*t169338*(2.0/3.0);
            double t169539 = b2f*c*t169500*(1.0/3.0);
            double t169540 = b1f*c*t169500*t169502*(1.0/6.0);
            double t169541 = b3f*c*t169500*t169336*(1.0/2.0);
            double t169542 = t169540+t169541+t169538+t169539;
            double t169543 = a1f*c*c0f*t169500*t169375*(2.0/3.0);
            double t169544 = a1p*c*c0p*t169500*t169349*(2.0/3.0);
            double t169545 = ccaa4*t169520*t169354*t169355*t169356;
            double t169546 = ccaa1*gamma_aa[index]*gcaa*t169523*t169357;
            double t169547 = ccaa3*gamma_aa[index]*gcaa*t169352*t169353*t169528*t169358;
            double t169548 = ccaa2*t169352*t169532*t169353*t169359;
            double t169549 = ccaa0+t169545+t169546+t169547+t169548;
            double t169550 = gx*gx;
            double t169551 = t169550*t169550;
            double t169552 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t169553 = gamma_aa[index]*gx*t169357*4.0;
            double t169554 = gamma_aa[index]*gx*t169352*t169550*t169358*4.0;
            double t169555 = t169352*t169550*t169359*6.0;
            double t169556 = t169551*t169354*t169356;
            double t169557 = t169553+t169554+t169555+t169556+1.0;
            double t169558 = 1.0/t169557;
            double t169559 = cx4*t169551*t169354*t169356*t169558*(4.190715359480463E15/2.251799813685248E15);
            double t169560 = gamma_aa[index]*gx*t169357;
            double t169561 = t169560+1.0;
            double t169562 = 1.0/t169561;
            double t169563 = cx1*gamma_aa[index]*gx*t169562*t169357*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169564 = gamma_aa[index]*gx*t169357*3.0;
            double t169565 = gamma_aa[index]*gx*t169352*t169550*t169358;
            double t169566 = t169352*t169550*t169359*3.0;
            double t169567 = t169564+t169565+t169566+1.0;
            double t169568 = 1.0/t169567;
            double t169569 = cx3*gamma_aa[index]*gx*t169352*t169550*t169358*t169568*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169570 = gamma_aa[index]*gx*t169357*2.0;
            double t169571 = t169352*t169550*t169359;
            double t169572 = t169570+t169571+1.0;
            double t169573 = 1.0/t169572;
            double t169574 = cx2*t169352*t169550*t169573*t169359*(4.190715359480463E15/2.251799813685248E15);
            double t169575 = t169552+t169563+t169574+t169559+t169569;
            double t169576 = 1.0/omega;
            double t169577 = 1.0/(omega*omega);
            double t169578 = pow(rho_a[index],2.0/3.0);
            double t169579 = 1.0/t169575;
            double t169581 = t169577*t169578*t169579*(1.4000771998813E29/4.951760157141521E27);
            double t169580 = exp(-t169581);
            double t169582 = cx4*t169551*t169354*t169535*t169558*(1.396905119826821E15/7.0368744177664E13);
            double t169583 = cx1*gamma_aa[index]*gx*t169562*t169429*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t169584 = cx3*gamma_aa[index]*gx*t169352*t169550*t169534*t169568*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t169585 = cx2*t169352*t169550*t169533*t169573*(1.396905119826821E15/1.40737488355328E14);
            double t169586 = 1.0/(t169561*t169561);
            double t169587 = gamma_aa[index]*gx*t169429*8.0;
            double t169588 = gamma_aa[index]*gx*t169352*t169550*t169534*8.0;
            double t169589 = t169352*t169550*t169533*1.6E1;
            double t169590 = t169587+t169588+t169589;
            double t169591 = 1.0/(t169567*t169567);
            double t169592 = gamma_aa[index]*gx*t169429*(3.2E1/3.0);
            double t169593 = gamma_aa[index]*gx*t169352*t169550*t169534*3.2E1;
            double t169594 = t169352*t169550*t169533*3.2E1;
            double t169595 = t169551*t169354*t169535*(3.2E1/3.0);
            double t169596 = t169592+t169593+t169594+t169595;
            double t169597 = 1.0/(t169557*t169557);
            double t169598 = gamma_aa[index]*gx*t169429*(1.6E1/3.0);
            double t169599 = t169352*t169550*t169533*(1.6E1/3.0);
            double t169600 = t169598+t169599;
            double t169601 = 1.0/(t169572*t169572);
            double t169605 = cx1*t169352*t169550*t169533*t169586*(1.396905119826821E15/2.81474976710656E14);
            double t169606 = cx3*gamma_aa[index]*gx*t169352*t169550*t169590*t169591*t169358*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t169607 = cx4*t169551*t169354*t169356*t169596*t169597*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169608 = cx2*t169600*t169601*t169352*t169550*t169359*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169602 = -t169605-t169606-t169607-t169608+t169582+t169583+t169584+t169585;
            double t169603 = omega*omega;
            double t169604 = t169580-1.0;
            double t169609 = t169334*t169577*t169579*(1.4000771998813E29/7.427640235712282E27);
            double t169610 = 1.0/(t169575*t169575);
            double t169611 = t169610*t169602*t169577*t169578*(1.4000771998813E29/4.951760157141521E27);
            double t169612 = t169611+t169609;
            double t169613 = sqrt(t169575);
            double t169614 = t169603*t169604*t169339*t169575*(2.475880078570761E27/1.4000771998813E29);
            double t169615 = t169614-t169580+3.0/2.0;
            double t169616 = 1.0/sqrt(t169575);
            double t169617 = pow(rho_a[index],1.0/3.0);
            double t169618 = t169616*t169617*t169576*(3.74176054803257E14/7.0368744177664E13);
            double t169619 = erf(t169618);
            double t169620 = t169619*(3.991211251234741E15/2.251799813685248E15);
            double t169622 = omega*t169334*t169613*t169615*(7.0368744177664E13/3.74176054803257E14);
            double t169621 = t169620-t169622;
            double t169623 = cx4*t169551*t169354*t169356*t169558;
            double t169624 = cx1*gamma_aa[index]*gx*t169562*t169357;
            double t169625 = cx3*gamma_aa[index]*gx*t169352*t169550*t169358*t169568;
            double t169626 = cx2*t169352*t169550*t169573*t169359;
            double t169627 = cx0+t169623+t169624+t169625+t169626;
            double t169628 = pow(rho_a[index],4.0/3.0);
            double t169629 = omega*t169621*t169334*t169613*(2.81474976710656E14/1.122528164409771E15);
            double t169630 = t169629-1.0;
            v_rho_a_[index] = (ccab0+ccab1*gcab*t169451*t169427+ccab4*t169433*t169434*t169452+ccab2*t169426*t169428* \
               t169449+ccab3*gcab*t169450*t169426*t169427*t169428)*(t169512-t169414-t169513+t169379-rho_a[index]* \
               (-t169510+t169544+t169362*t169365*(t169510+t169543-t169542*t169536*t169537*t169377-a1p*c*c0p*t169500* \
               t169349*(2.0/3.0)))+t169397*(-t169478+t169420*t169425*t169365*t169419*(t169478-(t169464*1.0/(t169458* \
               t169458)*(b2f*c*t169453*(1.0/3.0)+b4f*t169338*t169469*(2.0/3.0)+b1f*c*t169470*t169453*(1.0/6.0)+b3f* \
               c*t169400*t169453*(1.0/2.0)))/t169461+a1f*c*c0f*t169453*t169462*(2.0/3.0)-a1p*c*c0p*t169411*t169453* \
               (2.0/3.0))+a1p*c*c0p*t169411*t169453*(2.0/3.0)-t169420*t169425*t169365*t169465*t169492*4.0+t169420* \
               t169365*t169419*t169465*t169497+t169415*t169416*t169425*t169365*t169419*t169465*4.0+Aa*t169425*t169365* \
               t169491*t169479*t169489*(t169420*t169492*4.0-t169415*t169416*t169419*4.0)*2.0-Aa*t169365*t169491*t169479* \
               t169497*t169489*t169499*2.0-(t169425*t169365*t169491*1.0/(t169485*t169485)*t169479*t169499*(b2a*c* \
               t169453*(1.0/3.0)+b4a*t169338*t169469*(2.0/3.0)+b1a*c*t169470*t169453*(1.0/6.0)+b3a*c*t169400*t169453* \
               (1.0/2.0)))/t169488+Aa*a1a*c*t169425*t169453*t169365*t169479*t169489*t169499*(2.0/3.0))+t169420*t169425* \
               t169365*t169419*t169465)-t169549*(t169379+t169362*t169365*(t169378-c0p*t169351*t169349*2.0))-(rho_a[index]* \
               t169514+rho_b[index]*(t169396-t169362*t169365*(t169396-c0f*log((t169366*(1.0/2.0))/(b1f*t169382+b3f* \
               t169383+b2f*c*t169380+b4f*t169338*t169384)+1.0)*(a1f*c*t169380+1.0)*2.0))-t169397*(t169414+t169513- \
               t169420*t169425*t169365*t169419*t169465))*(ccab1*gamma_aa[index]*gcab*t169451*t169429*(4.0/3.0)-ccab2* \
               t169426*1.0/(t169444*t169444)*t169428*(gamma_aa[index]*gcab*t169429*(8.0/3.0)+gamma_aa[index]*t169426* \
               t169427*t169429*(8.0/3.0))-ccab4*t169433*t169434*1.0/(t169439*t169439)*(gamma_aa[index]*gcab*t169429* \
               (1.6E1/3.0)+gamma_aa[index]*t169426*t169427*t169429*1.6E1+gamma_aa[index]*gcab*t169426*t169428*t169429* \
               1.6E1+gamma_aa[index]*t169433*t169427*t169428*t169429*(1.6E1/3.0))-ccab1*gamma_aa[index]*1.0/(t169441* \
               t169441)*t169426*t169427*t169429*(4.0/3.0)+ccab2*gamma_aa[index]*t169426*t169427*t169429*t169449*(8.0/ \
               3.0)-ccab3*gcab*t169426*t169427*t169428*1.0/(t169448*t169448)*(gamma_aa[index]*gcab*t169429*4.0+gamma_aa[index]* \
               t169426*t169427*t169429*8.0+gamma_aa[index]*gcab*t169426*t169428*t169429*4.0)+ccab3*gamma_aa[index]* \
               gcab*t169450*t169426*t169428*t169429*4.0+ccab4*gamma_aa[index]*t169433*t169452*t169427*t169428*t169429* \
               (1.6E1/3.0))+rho_a[index]*t169514*(ccaa1*gamma_aa[index]*gcaa*t169523*t169429*(8.0/3.0)+ccaa2*t169352* \
               t169532*t169353*t169533*(1.6E1/3.0)+ccaa4*t169520*t169354*t169355*t169535*(3.2E1/3.0)-ccaa1*1.0/(t169522* \
               t169522)*t169352*t169353*t169533*(8.0/3.0)-ccaa2*1.0/(t169531*t169531)*t169352*t169353*t169359*(gamma_aa[index]* \
               gcaa*t169429*(1.6E1/3.0)+t169352*t169353*t169533*(1.6E1/3.0))-ccaa4*t169354*t169355*t169356*1.0/(t169519* \
               t169519)*(gamma_aa[index]*gcaa*t169429*(3.2E1/3.0)+t169352*t169353*t169533*3.2E1+t169354*t169355*t169535* \
               (3.2E1/3.0)+gamma_aa[index]*gcaa*t169352*t169353*t169534*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t169352* \
               t169353*t169534*t169528*8.0-ccaa3*gamma_aa[index]*gcaa*t169352*t169353*1.0/(t169527*t169527)*t169358* \
               (gamma_aa[index]*gcaa*t169429*8.0+t169352*t169353*t169533*1.6E1+gamma_aa[index]*gcaa*t169352*t169353* \
               t169534*8.0))+rho_a[index]*t169549*(-t169510+t169544+t169362*t169365*(t169510+t169543-t169544-t169542* \
               t169536*t169537*t169377))+c0*t169627*t169628*(omega*t169500*t169621*t169613*(2.81474976710656E14/3.367584493229313E15) \
               -omega*t169334*t169613*(1.0/sqrt(3.141592653589793)*t169580*(t169616*t169339*t169576*(3.74176054803257E14/ \
               2.11106232532992E14)+t169602*t169617*1.0/pow(t169575,3.0/2.0)*t169576*(3.74176054803257E14/1.40737488355328E14) \
               )*(3.991211251234741E15/1.125899906842624E15)+omega*t169500*t169613*t169615*(7.0368744177664E13/1.122528164409771E15) \
               +omega*t169334*t169613*(-t169612*t169580+t169501*t169603*t169604*t169575*(4.951760157141521E27/4.2002315996439E29) \
               +t169602*t169603*t169604*t169339*(2.475880078570761E27/1.4000771998813E29)+t169603*t169612*t169580* \
               t169339*t169575*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14) \
               +omega*t169602*t169334*t169615*t169616*(3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/ \
               1.122528164409771E15)+omega*t169602*t169621*t169334*t169616*(1.40737488355328E14/1.122528164409771E15) \
               )-c0*t169630*t169617*t169627*(4.0/3.0)+c0*t169630*t169628*(cx1*gamma_aa[index]*gx*t169562*t169429* \
               (8.0/3.0)-cx1*t169352*t169550*t169533*t169586*(8.0/3.0)+cx2*t169352*t169550*t169533*t169573*(1.6E1/ \
               3.0)+cx4*t169551*t169354*t169535*t169558*(3.2E1/3.0)-cx2*t169600*t169601*t169352*t169550*t169359-cx4* \
               t169551*t169354*t169356*t169596*t169597+cx3*gamma_aa[index]*gx*t169352*t169550*t169534*t169568*8.0- \
               cx3*gamma_aa[index]*gx*t169352*t169550*t169590*t169591*t169358);
        } else if (rho_a[index] > cutoff_) {
            double t174727 = 1.0/pow(rho_a[index],1.0/3.0);
            double t174728 = c*t174727;
            double t174729 = sqrt(t174728);
            double t174730 = pow(t174728,3.0/2.0);
            double t174731 = c*c;
            double t174732 = 1.0/pow(rho_a[index],2.0/3.0);
            double t174733 = 1.0/c0p;
            double t174734 = b1p*t174729;
            double t174735 = b3p*t174730;
            double t174736 = b4p*t174731*t174732;
            double t174737 = b2p*c*t174727;
            double t174738 = t174734+t174735+t174736+t174737;
            double t174739 = 1.0/t174738;
            double t174740 = t174733*t174739*(1.0/2.0);
            double t174741 = t174740+1.0;
            double t174742 = log(t174741);
            double t174743 = a1p*c*t174727;
            double t174744 = t174743+1.0;
            double t174745 = gamma_aa[index]*gamma_aa[index];
            double t174746 = gcaa*gcaa;
            double t174747 = t174745*t174745;
            double t174748 = t174746*t174746;
            double t174749 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t174750 = 1.0/pow(rho_a[index],8.0/3.0);
            double t174751 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t174752 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t174753 = pow(2.0,1.0/3.0);
            double t174754 = t174753*2.0;
            double t174755 = t174754-2.0;
            double t174756 = two_13*2.0;
            double t174757 = t174756-2.0;
            double t174758 = 1.0/t174757;
            double t174759 = 1.0/c0f;
            double t174760 = b1f*t174729;
            double t174761 = b3f*t174730;
            double t174762 = b4f*t174731*t174732;
            double t174763 = b2f*c*t174727;
            double t174764 = t174760+t174761+t174762+t174763;
            double t174765 = 1.0/t174764;
            double t174766 = t174765*t174759*(1.0/2.0);
            double t174767 = t174766+1.0;
            double t174768 = log(t174767);
            double t174769 = a1f*c*t174727;
            double t174770 = t174769+1.0;
            double t174771 = c0f*t174770*t174768*2.0;
            double t174772 = c0p*t174742*t174744*2.0;
            double t174773 = gamma_aa[index]*gcaa*t174750*4.0;
            double t174774 = gamma_aa[index]*gcaa*t174751*t174745*t174746*4.0;
            double t174775 = t174752*t174745*t174746*6.0;
            double t174776 = t174747*t174748*t174749;
            double t174777 = t174773+t174774+t174775+t174776+1.0;
            double t174778 = 1.0/t174777;
            double t174779 = gamma_aa[index]*gcaa*t174750;
            double t174780 = t174779+1.0;
            double t174781 = 1.0/t174780;
            double t174782 = gamma_aa[index]*gcaa*t174750*3.0;
            double t174783 = gamma_aa[index]*gcaa*t174751*t174745*t174746;
            double t174784 = t174752*t174745*t174746*3.0;
            double t174785 = t174782+t174783+t174784+1.0;
            double t174786 = 1.0/t174785;
            double t174787 = gamma_aa[index]*gcaa*t174750*2.0;
            double t174788 = t174752*t174745*t174746;
            double t174789 = t174787+t174788+1.0;
            double t174790 = 1.0/t174789;
            double t174791 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t174792 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t174793 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t174794 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t174795 = 1.0/pow(rho_a[index],4.0/3.0);
            double t174796 = 1.0/pow(rho_a[index],5.0/3.0);
            double t174797 = 1.0/sqrt(t174728);
            double t174798 = 1.0/t174741;
            double t174799 = 1.0/(t174738*t174738);
            double t174800 = b4p*t174731*t174796*(2.0/3.0);
            double t174801 = b2p*c*t174795*(1.0/3.0);
            double t174802 = b1p*c*t174795*t174797*(1.0/6.0);
            double t174803 = b3p*c*t174729*t174795*(1.0/2.0);
            double t174804 = t174800+t174801+t174802+t174803;
            double t174805 = t174804*t174744*t174798*t174799;
            double t174806 = ccaa4*t174747*t174748*t174749*t174778;
            double t174807 = ccaa1*gamma_aa[index]*gcaa*t174750*t174781;
            double t174808 = ccaa3*gamma_aa[index]*gcaa*t174751*t174745*t174746*t174786;
            double t174809 = ccaa2*t174752*t174745*t174790*t174746;
            double t174810 = ccaa0+t174806+t174807+t174808+t174809;
            double t174811 = gx*gx;
            double t174812 = t174811*t174811;
            double t174813 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t174814 = gamma_aa[index]*gx*t174750*4.0;
            double t174815 = gamma_aa[index]*gx*t174811*t174751*t174745*4.0;
            double t174816 = t174811*t174752*t174745*6.0;
            double t174817 = t174812*t174747*t174749;
            double t174818 = t174814+t174815+t174816+t174817+1.0;
            double t174819 = 1.0/t174818;
            double t174820 = cx4*t174812*t174747*t174819*t174749*(4.190715359480463E15/2.251799813685248E15);
            double t174821 = gamma_aa[index]*gx*t174750;
            double t174822 = t174821+1.0;
            double t174823 = 1.0/t174822;
            double t174824 = cx1*gamma_aa[index]*gx*t174750*t174823*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174825 = gamma_aa[index]*gx*t174750*3.0;
            double t174826 = gamma_aa[index]*gx*t174811*t174751*t174745;
            double t174827 = t174811*t174752*t174745*3.0;
            double t174828 = t174825+t174826+t174827+1.0;
            double t174829 = 1.0/t174828;
            double t174830 = cx3*gamma_aa[index]*gx*t174811*t174751*t174745*t174829*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174831 = gamma_aa[index]*gx*t174750*2.0;
            double t174832 = t174811*t174752*t174745;
            double t174833 = t174831+t174832+1.0;
            double t174834 = 1.0/t174833;
            double t174835 = cx2*t174811*t174752*t174834*t174745*(4.190715359480463E15/2.251799813685248E15);
            double t174836 = t174820+t174830+t174813+t174824+t174835;
            double t174837 = 1.0/omega;
            double t174838 = 1.0/(omega*omega);
            double t174839 = pow(rho_a[index],2.0/3.0);
            double t174840 = 1.0/t174836;
            double t174842 = t174840*t174838*t174839*(1.4000771998813E29/4.951760157141521E27);
            double t174841 = exp(-t174842);
            double t174843 = cx4*t174812*t174747*t174819*t174794*(1.396905119826821E15/7.0368744177664E13);
            double t174844 = cx1*gamma_aa[index]*gx*t174823*t174792*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t174845 = cx3*gamma_aa[index]*gx*t174811*t174745*t174793*t174829*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t174846 = cx2*t174811*t174834*t174745*t174791*(1.396905119826821E15/1.40737488355328E14);
            double t174847 = 1.0/(t174822*t174822);
            double t174848 = gamma_aa[index]*gx*t174792*8.0;
            double t174849 = gamma_aa[index]*gx*t174811*t174745*t174793*8.0;
            double t174850 = t174811*t174745*t174791*1.6E1;
            double t174851 = t174850+t174848+t174849;
            double t174852 = 1.0/(t174828*t174828);
            double t174853 = gamma_aa[index]*gx*t174792*(3.2E1/3.0);
            double t174854 = gamma_aa[index]*gx*t174811*t174745*t174793*3.2E1;
            double t174855 = t174811*t174745*t174791*3.2E1;
            double t174856 = t174812*t174747*t174794*(3.2E1/3.0);
            double t174857 = t174853+t174854+t174855+t174856;
            double t174858 = 1.0/(t174818*t174818);
            double t174859 = gamma_aa[index]*gx*t174792*(1.6E1/3.0);
            double t174860 = t174811*t174745*t174791*(1.6E1/3.0);
            double t174861 = t174860+t174859;
            double t174862 = 1.0/(t174833*t174833);
            double t174866 = cx1*t174811*t174745*t174791*t174847*(1.396905119826821E15/2.81474976710656E14);
            double t174867 = cx3*gamma_aa[index]*gx*t174811*t174751*t174851*t174852*t174745*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t174868 = cx4*t174812*t174747*t174749*t174857*t174858*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174869 = cx2*t174811*t174752*t174861*t174745*t174862*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174863 = t174843+t174844+t174845+t174846-t174866-t174867-t174868-t174869;
            double t174864 = omega*omega;
            double t174865 = t174841-1.0;
            double t174870 = t174840*t174727*t174838*(1.4000771998813E29/7.427640235712282E27);
            double t174871 = 1.0/(t174836*t174836);
            double t174872 = t174871*t174863*t174838*t174839*(1.4000771998813E29/4.951760157141521E27);
            double t174873 = t174870+t174872;
            double t174874 = sqrt(t174836);
            double t174875 = t174732*t174836*t174864*t174865*(2.475880078570761E27/1.4000771998813E29);
            double t174876 = -t174841+t174875+3.0/2.0;
            double t174877 = 1.0/sqrt(t174836);
            double t174878 = pow(rho_a[index],1.0/3.0);
            double t174879 = t174837*t174877*t174878*(3.74176054803257E14/7.0368744177664E13);
            double t174880 = erf(t174879);
            double t174881 = t174880*(3.991211251234741E15/2.251799813685248E15);
            double t174883 = omega*t174727*t174874*t174876*(7.0368744177664E13/3.74176054803257E14);
            double t174882 = t174881-t174883;
            double t174884 = cx4*t174812*t174747*t174819*t174749;
            double t174885 = cx1*gamma_aa[index]*gx*t174750*t174823;
            double t174886 = cx3*gamma_aa[index]*gx*t174811*t174751*t174745*t174829;
            double t174887 = cx2*t174811*t174752*t174834*t174745;
            double t174888 = cx0+t174884+t174885+t174886+t174887;
            double t174889 = pow(rho_a[index],4.0/3.0);
            double t174890 = omega*t174727*t174882*t174874*(2.81474976710656E14/1.122528164409771E15);
            double t174891 = t174890-1.0;
            v_rho_a_[index] = -t174810*(t174772+t174755*t174758*(t174771-c0p*t174742*t174744*2.0))+rho_a[index]* \
               t174810*(-t174805+t174755*t174758*(t174805-(t174770*1.0/(t174764*t174764)*(b2f*c*t174795*(1.0/3.0) \
               +b4f*t174731*t174796*(2.0/3.0)+b1f*c*t174795*t174797*(1.0/6.0)+b3f*c*t174729*t174795*(1.0/2.0)))/t174767+ \
               a1f*c*c0f*t174768*t174795*(2.0/3.0)-a1p*c*c0p*t174742*t174795*(2.0/3.0))+a1p*c*c0p*t174742*t174795* \
               (2.0/3.0))+rho_a[index]*(t174772+t174755*t174758*(t174771-t174772))*(ccaa1*gamma_aa[index]*gcaa*t174781* \
               t174792*(8.0/3.0)+ccaa2*t174745*t174790*t174746*t174791*(1.6E1/3.0)+ccaa4*t174747*t174748*t174794* \
               t174778*(3.2E1/3.0)-ccaa1*1.0/(t174780*t174780)*t174745*t174746*t174791*(8.0/3.0)-ccaa2*t174752*t174745* \
               t174746*1.0/(t174789*t174789)*(gamma_aa[index]*gcaa*t174792*(1.6E1/3.0)+t174745*t174746*t174791*(1.6E1/ \
               3.0))-ccaa4*t174747*t174748*t174749*1.0/(t174777*t174777)*(gamma_aa[index]*gcaa*t174792*(3.2E1/3.0) \
               +t174745*t174746*t174791*3.2E1+t174747*t174748*t174794*(3.2E1/3.0)+gamma_aa[index]*gcaa*t174745*t174746* \
               t174793*3.2E1)+ccaa3*gamma_aa[index]*gcaa*t174745*t174746*t174793*t174786*8.0-ccaa3*gamma_aa[index]* \
               gcaa*t174751*t174745*t174746*1.0/(t174785*t174785)*(gamma_aa[index]*gcaa*t174792*8.0+t174745*t174746* \
               t174791*1.6E1+gamma_aa[index]*gcaa*t174745*t174746*t174793*8.0))+c0*t174888*t174889*(omega*t174882* \
               t174874*t174795*(2.81474976710656E14/3.367584493229313E15)-omega*t174727*t174874*(1.0/sqrt(3.141592653589793) \
               *t174841*(t174732*t174837*t174877*(3.74176054803257E14/2.11106232532992E14)+1.0/pow(t174836,3.0/2.0) \
               *t174863*t174837*t174878*(3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t174874*t174795*t174876*(7.0368744177664E13/1.122528164409771E15)+omega*t174727*t174874*(-t174841* \
               t174873+t174732*t174863*t174864*t174865*(2.475880078570761E27/1.4000771998813E29)+t174836*t174864* \
               t174865*t174796*(4.951760157141521E27/4.2002315996439E29)+t174732*t174841*t174836*t174864*t174873* \
               (2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t174727* \
               t174863*t174876*t174877*(3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               +omega*t174727*t174863*t174882*t174877*(1.40737488355328E14/1.122528164409771E15))-c0*t174891*t174878* \
               t174888*(4.0/3.0)+c0*t174891*t174889*(cx1*gamma_aa[index]*gx*t174823*t174792*(8.0/3.0)-cx1*t174811* \
               t174745*t174791*t174847*(8.0/3.0)+cx2*t174811*t174834*t174745*t174791*(1.6E1/3.0)+cx4*t174812*t174747* \
               t174819*t174794*(3.2E1/3.0)-cx2*t174811*t174752*t174861*t174745*t174862-cx4*t174812*t174747*t174749* \
               t174857*t174858+cx3*gamma_aa[index]*gx*t174811*t174745*t174793*t174829*8.0-cx3*gamma_aa[index]*gx* \
               t174811*t174751*t174851*t174852*t174745);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_[index] = 0.0;
        } else {
            v_rho_a_[index] = 0.0;
        } 

        //V_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t169632 = 1.0/pow(rho_b[index],1.0/3.0);
            double t169633 = c*t169632;
            double t169634 = sqrt(t169633);
            double t169635 = pow(t169633,3.0/2.0);
            double t169636 = c*c;
            double t169637 = 1.0/pow(rho_b[index],2.0/3.0);
            double t169638 = 1.0/c0p;
            double t169639 = b1p*t169634;
            double t169640 = b3p*t169635;
            double t169641 = b4p*t169636*t169637;
            double t169642 = b2p*c*t169632;
            double t169643 = t169640+t169641+t169642+t169639;
            double t169644 = 1.0/t169643;
            double t169645 = t169644*t169638*(1.0/2.0);
            double t169646 = t169645+1.0;
            double t169647 = log(t169646);
            double t169648 = a1p*c*t169632;
            double t169649 = t169648+1.0;
            double t169650 = gamma_bb[index]*gamma_bb[index];
            double t169651 = gcaa*gcaa;
            double t169652 = t169650*t169650;
            double t169653 = t169651*t169651;
            double t169654 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t169655 = 1.0/pow(rho_b[index],8.0/3.0);
            double t169656 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t169657 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t169658 = pow(2.0,1.0/3.0);
            double t169659 = t169658*2.0;
            double t169660 = t169659-2.0;
            double t169661 = two_13*2.0;
            double t169662 = t169661-2.0;
            double t169663 = 1.0/t169662;
            double t169664 = 1.0/c0f;
            double t169665 = 1.0/pow(rho_a[index],1.0/3.0);
            double t169666 = c*t169665;
            double t169667 = sqrt(t169666);
            double t169668 = pow(t169666,3.0/2.0);
            double t169669 = 1.0/pow(rho_a[index],2.0/3.0);
            double t169670 = b1p*t169667;
            double t169671 = b3p*t169668;
            double t169672 = b4p*t169636*t169669;
            double t169673 = b2p*c*t169665;
            double t169674 = t169670+t169671+t169672+t169673;
            double t169675 = 1.0/t169674;
            double t169676 = t169638*t169675*(1.0/2.0);
            double t169677 = t169676+1.0;
            double t169678 = log(t169677);
            double t169679 = a1p*c*t169665;
            double t169680 = t169679+1.0;
            double t169681 = c0p*t169680*t169678*2.0;
            double t169682 = b1f*t169634;
            double t169683 = b3f*t169635;
            double t169684 = b4f*t169636*t169637;
            double t169685 = b2f*c*t169632;
            double t169686 = t169682+t169683+t169684+t169685;
            double t169687 = 1.0/t169686;
            double t169688 = t169664*t169687*(1.0/2.0);
            double t169689 = t169688+1.0;
            double t169690 = log(t169689);
            double t169691 = a1f*c*t169632;
            double t169692 = t169691+1.0;
            double t169693 = c0f*t169690*t169692*2.0;
            double t169694 = c0p*t169647*t169649*2.0;
            double t169695 = rho_a[index]+rho_b[index];
            double t169696 = 1.0/pow(t169695,1.0/3.0);
            double t169697 = c*t169696;
            double t169698 = sqrt(t169697);
            double t169699 = pow(t169697,3.0/2.0);
            double t169700 = 1.0/pow(t169695,2.0/3.0);
            double t169701 = b1p*t169698;
            double t169702 = b3p*t169699;
            double t169703 = b4p*t169700*t169636;
            double t169704 = b2p*c*t169696;
            double t169705 = t169701+t169702+t169703+t169704;
            double t169706 = 1.0/t169705;
            double t169707 = t169706*t169638*(1.0/2.0);
            double t169708 = t169707+1.0;
            double t169709 = log(t169708);
            double t169710 = a1p*c*t169696;
            double t169711 = t169710+1.0;
            double t169712 = c0p*t169711*t169709*2.0;
            double t169713 = rho_a[index]-rho_b[index];
            double t169714 = t169713*t169713;
            double t169715 = 1.0/t169695;
            double t169716 = t169713*t169715;
            double t169717 = 1.0/(t169695*t169695*t169695*t169695);
            double t169718 = t169714*t169714;
            double t169719 = t169716+1.0;
            double t169720 = pow(t169719,4.0/3.0);
            double t169721 = -t169716+1.0;
            double t169722 = pow(t169721,4.0/3.0);
            double t169723 = t169720+t169722-2.0;
            double t169724 = gcab*gcab;
            double t169728 = 1.0/pow(rho_a[index],8.0/3.0);
            double t169729 = gamma_aa[index]*t169728*(1.0/2.0);
            double t169730 = gamma_bb[index]*t169655*(1.0/2.0);
            double t169725 = t169730+t169729;
            double t169726 = t169725*t169725;
            double t169727 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t169731 = t169724*t169724;
            double t169732 = t169726*t169726;
            double t169733 = t169724*t169726*6.0;
            double t169734 = gcab*t169724*t169725*t169726*4.0;
            double t169735 = t169731*t169732;
            double t169736 = gcab*t169725*4.0;
            double t169737 = t169733+t169734+t169735+t169736+1.0;
            double t169738 = gcab*t169725;
            double t169739 = t169738+1.0;
            double t169740 = t169724*t169726;
            double t169741 = gcab*t169725*2.0;
            double t169742 = t169740+t169741+1.0;
            double t169743 = t169724*t169726*3.0;
            double t169744 = gcab*t169724*t169725*t169726;
            double t169745 = gcab*t169725*3.0;
            double t169746 = t169743+t169744+t169745+1.0;
            double t169747 = 1.0/t169742;
            double t169748 = 1.0/t169746;
            double t169749 = 1.0/t169739;
            double t169750 = 1.0/t169737;
            double t169751 = 1.0/pow(t169695,4.0/3.0);
            double t169752 = b1f*t169698;
            double t169753 = b3f*t169699;
            double t169754 = b4f*t169700*t169636;
            double t169755 = b2f*c*t169696;
            double t169756 = t169752+t169753+t169754+t169755;
            double t169757 = 1.0/t169756;
            double t169758 = t169664*t169757*(1.0/2.0);
            double t169759 = t169758+1.0;
            double t169760 = log(t169759);
            double t169761 = a1f*c*t169696;
            double t169762 = t169761+1.0;
            double t169764 = c0f*t169760*t169762*2.0;
            double t169763 = t169712-t169764;
            double t169765 = 1.0/(t169695*t169695);
            double t169766 = t169713*t169765;
            double t169767 = t169715+t169766;
            double t169768 = 1.0/pow(t169695,5.0/3.0);
            double t169769 = 1.0/sqrt(t169697);
            double t169770 = 1.0/t169708;
            double t169771 = 1.0/(t169705*t169705);
            double t169772 = b4p*t169636*t169768*(2.0/3.0);
            double t169773 = b2p*c*t169751*(1.0/3.0);
            double t169774 = b1p*c*t169751*t169769*(1.0/6.0);
            double t169775 = b3p*c*t169751*t169698*(1.0/2.0);
            double t169776 = t169772+t169773+t169774+t169775;
            double t169777 = 1.0/d2fz0;
            double t169778 = 1.0/Aa;
            double t169779 = b1a*t169698;
            double t169780 = b3a*t169699;
            double t169781 = b4a*t169700*t169636;
            double t169782 = b2a*c*t169696;
            double t169783 = t169780+t169781+t169782+t169779;
            double t169784 = 1.0/t169783;
            double t169785 = t169784*t169778*(1.0/2.0);
            double t169786 = t169785+1.0;
            double t169787 = log(t169786);
            double t169788 = a1a*c*t169696;
            double t169789 = t169788+1.0;
            double t169790 = 1.0/(t169695*t169695*t169695*t169695*t169695);
            double t169791 = pow(t169719,1.0/3.0);
            double t169792 = t169791*t169767*(4.0/3.0);
            double t169793 = pow(t169721,1.0/3.0);
            double t169794 = t169792-t169793*t169767*(4.0/3.0);
            double t169795 = t169717*t169718;
            double t169796 = t169795-1.0;
            double t169797 = t169711*t169770*t169771*t169776;
            double t169798 = 1.0/pow(rho_b[index],4.0/3.0);
            double t169799 = 1.0/pow(rho_b[index],5.0/3.0);
            double t169800 = 1.0/sqrt(t169633);
            double t169801 = 1.0/t169646;
            double t169802 = 1.0/(t169643*t169643);
            double t169803 = b4p*t169636*t169799*(2.0/3.0);
            double t169804 = b2p*c*t169798*(1.0/3.0);
            double t169805 = b1p*c*t169800*t169798*(1.0/6.0);
            double t169806 = b3p*c*t169634*t169798*(1.0/2.0);
            double t169807 = t169803+t169804+t169805+t169806;
            double t169808 = t169801*t169802*t169807*t169649;
            double t169809 = t169693-t169694;
            double t169810 = t169660*t169663*t169809;
            double t169811 = Aa*t169723*t169663*t169777*t169787*t169796*t169789*2.0;
            double t169812 = t169810+t169694;
            double t169813 = gamma_bb[index]*gcaa*t169655*4.0;
            double t169814 = gamma_bb[index]*gcaa*t169650*t169651*t169656*4.0;
            double t169815 = t169650*t169651*t169657*6.0;
            double t169816 = t169652*t169653*t169654;
            double t169817 = t169813+t169814+t169815+t169816+1.0;
            double t169818 = 1.0/t169817;
            double t169819 = gamma_bb[index]*gcaa*t169655;
            double t169820 = t169819+1.0;
            double t169821 = 1.0/t169820;
            double t169822 = gamma_bb[index]*gcaa*t169655*3.0;
            double t169823 = gamma_bb[index]*gcaa*t169650*t169651*t169656;
            double t169824 = t169650*t169651*t169657*3.0;
            double t169825 = t169822+t169823+t169824+1.0;
            double t169826 = 1.0/t169825;
            double t169827 = gamma_bb[index]*gcaa*t169655*2.0;
            double t169828 = t169650*t169651*t169657;
            double t169829 = t169827+t169828+1.0;
            double t169830 = 1.0/t169829;
            double t169831 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t169832 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t169833 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t169834 = 1.0/t169689;
            double t169835 = 1.0/(t169686*t169686);
            double t169836 = b4f*t169636*t169799*(2.0/3.0);
            double t169837 = b2f*c*t169798*(1.0/3.0);
            double t169838 = b1f*c*t169800*t169798*(1.0/6.0);
            double t169839 = b3f*c*t169634*t169798*(1.0/2.0);
            double t169840 = t169836+t169837+t169838+t169839;
            double t169841 = a1f*c*c0f*t169690*t169798*(2.0/3.0);
            double t169842 = a1p*c*c0p*t169647*t169798*(2.0/3.0);
            double t169843 = ccaa4*t169652*t169653*t169654*t169818;
            double t169844 = ccaa1*gamma_bb[index]*gcaa*t169821*t169655;
            double t169845 = ccaa3*gamma_bb[index]*gcaa*t169650*t169651*t169826*t169656;
            double t169846 = ccaa2*t169650*t169830*t169651*t169657;
            double t169847 = ccaa0+t169843+t169844+t169845+t169846;
            double t169848 = gx*gx;
            double t169849 = t169848*t169848;
            double t169850 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t169851 = gamma_bb[index]*gx*t169655*4.0;
            double t169852 = gamma_bb[index]*gx*t169650*t169656*t169848*4.0;
            double t169853 = t169650*t169657*t169848*6.0;
            double t169854 = t169652*t169654*t169849;
            double t169855 = t169851+t169852+t169853+t169854+1.0;
            double t169856 = 1.0/t169855;
            double t169857 = cx4*t169652*t169654*t169856*t169849*(4.190715359480463E15/2.251799813685248E15);
            double t169858 = gamma_bb[index]*gx*t169655;
            double t169859 = t169858+1.0;
            double t169860 = 1.0/t169859;
            double t169861 = cx1*gamma_bb[index]*gx*t169860*t169655*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169862 = gamma_bb[index]*gx*t169655*3.0;
            double t169863 = gamma_bb[index]*gx*t169650*t169656*t169848;
            double t169864 = t169650*t169657*t169848*3.0;
            double t169865 = t169862+t169863+t169864+1.0;
            double t169866 = 1.0/t169865;
            double t169867 = cx3*gamma_bb[index]*gx*t169650*t169656*t169848*t169866*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169868 = gamma_bb[index]*gx*t169655*2.0;
            double t169869 = t169650*t169657*t169848;
            double t169870 = t169868+t169869+1.0;
            double t169871 = 1.0/t169870;
            double t169872 = cx2*t169650*t169871*t169657*t169848*(4.190715359480463E15/2.251799813685248E15);
            double t169873 = t169850+t169861+t169872+t169857+t169867;
            double t169874 = 1.0/omega;
            double t169875 = 1.0/(omega*omega);
            double t169876 = pow(rho_b[index],2.0/3.0);
            double t169877 = 1.0/t169873;
            double t169879 = t169875*t169876*t169877*(1.4000771998813E29/4.951760157141521E27);
            double t169878 = exp(-t169879);
            double t169880 = cx4*t169652*t169833*t169856*t169849*(1.396905119826821E15/7.0368744177664E13);
            double t169881 = cx1*gamma_bb[index]*gx*t169860*t169727*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t169882 = cx3*gamma_bb[index]*gx*t169650*t169832*t169848*t169866*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t169883 = cx2*t169650*t169831*t169871*t169848*(1.396905119826821E15/1.40737488355328E14);
            double t169884 = 1.0/(t169859*t169859);
            double t169885 = gamma_bb[index]*gx*t169727*8.0;
            double t169886 = gamma_bb[index]*gx*t169650*t169832*t169848*8.0;
            double t169887 = t169650*t169831*t169848*1.6E1;
            double t169888 = t169885+t169886+t169887;
            double t169889 = 1.0/(t169865*t169865);
            double t169890 = gamma_bb[index]*gx*t169727*(3.2E1/3.0);
            double t169891 = gamma_bb[index]*gx*t169650*t169832*t169848*3.2E1;
            double t169892 = t169650*t169831*t169848*3.2E1;
            double t169893 = t169652*t169833*t169849*(3.2E1/3.0);
            double t169894 = t169890+t169891+t169892+t169893;
            double t169895 = 1.0/(t169855*t169855);
            double t169896 = gamma_bb[index]*gx*t169727*(1.6E1/3.0);
            double t169897 = t169650*t169831*t169848*(1.6E1/3.0);
            double t169898 = t169896+t169897;
            double t169899 = 1.0/(t169870*t169870);
            double t169903 = cx1*t169650*t169831*t169848*t169884*(1.396905119826821E15/2.81474976710656E14);
            double t169904 = cx3*gamma_bb[index]*gx*t169650*t169656*t169848*t169888*t169889*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t169905 = cx4*t169652*t169654*t169849*t169894*t169895*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169906 = cx2*t169650*t169657*t169848*t169898*t169899*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t169900 = -t169903-t169904-t169905-t169906+t169880+t169881+t169882+t169883;
            double t169901 = omega*omega;
            double t169902 = t169878-1.0;
            double t169907 = t169632*t169875*t169877*(1.4000771998813E29/7.427640235712282E27);
            double t169908 = 1.0/(t169873*t169873);
            double t169909 = t169900*t169908*t169875*t169876*(1.4000771998813E29/4.951760157141521E27);
            double t169910 = t169907+t169909;
            double t169911 = sqrt(t169873);
            double t169912 = t169901*t169902*t169637*t169873*(2.475880078570761E27/1.4000771998813E29);
            double t169913 = t169912-t169878+3.0/2.0;
            double t169914 = 1.0/sqrt(t169873);
            double t169915 = pow(rho_b[index],1.0/3.0);
            double t169916 = t169914*t169915*t169874*(3.74176054803257E14/7.0368744177664E13);
            double t169917 = erf(t169916);
            double t169918 = t169917*(3.991211251234741E15/2.251799813685248E15);
            double t169920 = omega*t169632*t169911*t169913*(7.0368744177664E13/3.74176054803257E14);
            double t169919 = -t169920+t169918;
            double t169921 = cx4*t169652*t169654*t169856*t169849;
            double t169922 = cx1*gamma_bb[index]*gx*t169860*t169655;
            double t169923 = cx3*gamma_bb[index]*gx*t169650*t169656*t169848*t169866;
            double t169924 = cx2*t169650*t169871*t169657*t169848;
            double t169925 = cx0+t169921+t169922+t169923+t169924;
            double t169926 = pow(rho_b[index],4.0/3.0);
            double t169927 = omega*t169632*t169911*t169919*(2.81474976710656E14/1.122528164409771E15);
            double t169928 = t169927-1.0;
            v_rho_b_[index] = -(ccab0+ccab1*gcab*t169725*t169749+ccab4*t169731*t169732*t169750+ccab2*t169724* \
               t169726*t169747+ccab3*gcab*t169724*t169725*t169726*t169748)*(-t169810+t169712+t169811-t169694+t169695* \
               (t169797-t169723*t169663*t169717*t169718*(t169797-(t169762*1.0/(t169756*t169756)*(b2f*c*t169751*(1.0/ \
               3.0)+b4f*t169636*t169768*(2.0/3.0)+b1f*c*t169751*t169769*(1.0/6.0)+b3f*c*t169751*t169698*(1.0/2.0) \
               ))/t169759+a1f*c*c0f*t169751*t169760*(2.0/3.0)-a1p*c*c0p*t169751*t169709*(2.0/3.0))-a1p*c*c0p*t169751* \
               t169709*(2.0/3.0)+t169723*t169663*t169718*t169763*t169790*4.0+t169663*t169717*t169718*t169763*t169794+ \
               t169713*t169714*t169723*t169663*t169717*t169763*4.0-Aa*t169723*t169663*t169777*t169787*t169789*(t169718* \
               t169790*4.0+t169713*t169714*t169717*4.0)*2.0-Aa*t169663*t169794*t169777*t169787*t169796*t169789*2.0+ \
               (t169723*t169663*1.0/(t169783*t169783)*t169777*t169796*t169789*(b2a*c*t169751*(1.0/3.0)+b4a*t169636* \
               t169768*(2.0/3.0)+b1a*c*t169751*t169769*(1.0/6.0)+b3a*c*t169751*t169698*(1.0/2.0)))/t169786-Aa*a1a* \
               c*t169723*t169751*t169663*t169777*t169787*t169796*(2.0/3.0))+rho_b[index]*(t169842-t169808+t169660* \
               t169663*(t169841+t169808-t169840*t169834*t169835*t169692-a1p*c*c0p*t169647*t169798*(2.0/3.0)))-t169723* \
               t169663*t169717*t169718*t169763)-t169847*(t169694+t169660*t169663*(t169693-c0p*t169647*t169649*2.0) \
               )-(rho_b[index]*t169812+rho_a[index]*(t169681-t169660*t169663*(t169681-c0f*log((t169664*(1.0/2.0)) \
               /(b1f*t169667+b3f*t169668+b2f*c*t169665+b4f*t169636*t169669)+1.0)*(a1f*c*t169665+1.0)*2.0))-t169695* \
               (t169712+t169811-t169723*t169663*t169717*t169718*t169763))*(ccab1*gamma_bb[index]*gcab*t169727*t169749* \
               (4.0/3.0)-ccab2*t169724*1.0/(t169742*t169742)*t169726*(gamma_bb[index]*gcab*t169727*(8.0/3.0)+gamma_bb[index]* \
               t169724*t169725*t169727*(8.0/3.0))-ccab4*t169731*t169732*1.0/(t169737*t169737)*(gamma_bb[index]*gcab* \
               t169727*(1.6E1/3.0)+gamma_bb[index]*t169724*t169725*t169727*1.6E1+gamma_bb[index]*gcab*t169724*t169726* \
               t169727*1.6E1+gamma_bb[index]*t169731*t169725*t169726*t169727*(1.6E1/3.0))-ccab1*gamma_bb[index]*t169724* \
               t169725*t169727*1.0/(t169739*t169739)*(4.0/3.0)+ccab2*gamma_bb[index]*t169724*t169725*t169727*t169747* \
               (8.0/3.0)-ccab3*gcab*t169724*t169725*t169726*1.0/(t169746*t169746)*(gamma_bb[index]*gcab*t169727*4.0+ \
               gamma_bb[index]*t169724*t169725*t169727*8.0+gamma_bb[index]*gcab*t169724*t169726*t169727*4.0)+ccab3* \
               gamma_bb[index]*gcab*t169724*t169726*t169727*t169748*4.0+ccab4*gamma_bb[index]*t169731*t169750*t169725* \
               t169726*t169727*(1.6E1/3.0))+rho_b[index]*t169812*(ccaa1*gamma_bb[index]*gcaa*t169821*t169727*(8.0/ \
               3.0)+ccaa2*t169650*t169830*t169651*t169831*(1.6E1/3.0)+ccaa4*t169652*t169653*t169833*t169818*(3.2E1/ \
               3.0)-ccaa1*1.0/(t169820*t169820)*t169650*t169651*t169831*(8.0/3.0)-ccaa2*t169650*t169651*t169657*1.0/ \
               (t169829*t169829)*(gamma_bb[index]*gcaa*t169727*(1.6E1/3.0)+t169650*t169651*t169831*(1.6E1/3.0))-ccaa4* \
               t169652*t169653*t169654*1.0/(t169817*t169817)*(gamma_bb[index]*gcaa*t169727*(3.2E1/3.0)+t169650*t169651* \
               t169831*3.2E1+t169652*t169653*t169833*(3.2E1/3.0)+gamma_bb[index]*gcaa*t169650*t169651*t169832*3.2E1) \
               +ccaa3*gamma_bb[index]*gcaa*t169650*t169651*t169832*t169826*8.0-ccaa3*gamma_bb[index]*gcaa*t169650* \
               t169651*1.0/(t169825*t169825)*t169656*(gamma_bb[index]*gcaa*t169727*8.0+t169650*t169651*t169831*1.6E1+ \
               gamma_bb[index]*gcaa*t169650*t169651*t169832*8.0))+rho_b[index]*t169847*(t169842-t169808+t169660*t169663* \
               (t169841-t169842+t169808-t169840*t169834*t169835*t169692))+c0*t169925*t169926*(omega*t169911*t169919* \
               t169798*(2.81474976710656E14/3.367584493229313E15)-omega*t169632*t169911*(1.0/sqrt(3.141592653589793) \
               *t169878*(t169914*t169637*t169874*(3.74176054803257E14/2.11106232532992E14)+t169900*t169915*1.0/pow(t169873,3.0/ \
               2.0)*t169874*(3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t169911*t169913*t169798*(7.0368744177664E13/1.122528164409771E15)+omega*t169632*t169911*(-t169910* \
               t169878+t169900*t169901*t169902*t169637*(2.475880078570761E27/1.4000771998813E29)+t169901*t169902* \
               t169873*t169799*(4.951760157141521E27/4.2002315996439E29)+t169901*t169910*t169637*t169873*t169878* \
               (2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t169900* \
               t169632*t169913*t169914*(3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               +omega*t169900*t169632*t169914*t169919*(1.40737488355328E14/1.122528164409771E15))-c0*t169915*t169925* \
               t169928*(4.0/3.0)+c0*t169926*t169928*(cx1*gamma_bb[index]*gx*t169860*t169727*(8.0/3.0)-cx1*t169650* \
               t169831*t169848*t169884*(8.0/3.0)+cx2*t169650*t169831*t169871*t169848*(1.6E1/3.0)+cx4*t169652*t169833* \
               t169856*t169849*(3.2E1/3.0)-cx2*t169650*t169657*t169848*t169898*t169899-cx4*t169652*t169654*t169849* \
               t169894*t169895+cx3*gamma_bb[index]*gx*t169650*t169832*t169848*t169866*8.0-cx3*gamma_bb[index]*gx* \
               t169650*t169656*t169848*t169888*t169889);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t173633 = 1.0/pow(rho_b[index],1.0/3.0);
            double t173634 = c*t173633;
            double t173635 = sqrt(t173634);
            double t173636 = pow(t173634,3.0/2.0);
            double t173637 = c*c;
            double t173638 = 1.0/pow(rho_b[index],2.0/3.0);
            double t173639 = 1.0/c0p;
            double t173640 = b1p*t173635;
            double t173641 = b3p*t173636;
            double t173642 = b4p*t173637*t173638;
            double t173643 = b2p*c*t173633;
            double t173644 = t173640+t173641+t173642+t173643;
            double t173645 = 1.0/t173644;
            double t173646 = t173645*t173639*(1.0/2.0);
            double t173647 = t173646+1.0;
            double t173648 = log(t173647);
            double t173649 = a1p*c*t173633;
            double t173650 = t173649+1.0;
            double t173651 = gamma_bb[index]*gamma_bb[index];
            double t173652 = gcaa*gcaa;
            double t173653 = t173651*t173651;
            double t173654 = t173652*t173652;
            double t173655 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t173656 = 1.0/pow(rho_b[index],8.0/3.0);
            double t173657 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t173658 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t173659 = pow(2.0,1.0/3.0);
            double t173660 = t173659*2.0;
            double t173661 = t173660-2.0;
            double t173662 = two_13*2.0;
            double t173663 = t173662-2.0;
            double t173664 = 1.0/t173663;
            double t173665 = 1.0/c0f;
            double t173666 = b1f*t173635;
            double t173667 = b3f*t173636;
            double t173668 = b4f*t173637*t173638;
            double t173669 = b2f*c*t173633;
            double t173670 = t173666+t173667+t173668+t173669;
            double t173671 = 1.0/t173670;
            double t173672 = t173671*t173665*(1.0/2.0);
            double t173673 = t173672+1.0;
            double t173674 = log(t173673);
            double t173675 = a1f*c*t173633;
            double t173676 = t173675+1.0;
            double t173677 = c0f*t173674*t173676*2.0;
            double t173678 = c0p*t173650*t173648*2.0;
            double t173679 = gamma_bb[index]*gcaa*t173656*4.0;
            double t173680 = gamma_bb[index]*gcaa*t173651*t173652*t173657*4.0;
            double t173681 = t173651*t173652*t173658*6.0;
            double t173682 = t173653*t173654*t173655;
            double t173683 = t173680+t173681+t173682+t173679+1.0;
            double t173684 = 1.0/t173683;
            double t173685 = gamma_bb[index]*gcaa*t173656;
            double t173686 = t173685+1.0;
            double t173687 = 1.0/t173686;
            double t173688 = gamma_bb[index]*gcaa*t173656*3.0;
            double t173689 = gamma_bb[index]*gcaa*t173651*t173652*t173657;
            double t173690 = t173651*t173652*t173658*3.0;
            double t173691 = t173690+t173688+t173689+1.0;
            double t173692 = 1.0/t173691;
            double t173693 = gamma_bb[index]*gcaa*t173656*2.0;
            double t173694 = t173651*t173652*t173658;
            double t173695 = t173693+t173694+1.0;
            double t173696 = 1.0/t173695;
            double t173697 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t173698 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t173699 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t173700 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t173701 = 1.0/pow(rho_b[index],4.0/3.0);
            double t173702 = 1.0/pow(rho_b[index],5.0/3.0);
            double t173703 = 1.0/sqrt(t173634);
            double t173704 = 1.0/t173647;
            double t173705 = 1.0/(t173644*t173644);
            double t173706 = b4p*t173702*t173637*(2.0/3.0);
            double t173707 = b2p*c*t173701*(1.0/3.0);
            double t173708 = b1p*c*t173701*t173703*(1.0/6.0);
            double t173709 = b3p*c*t173701*t173635*(1.0/2.0);
            double t173710 = t173706+t173707+t173708+t173709;
            double t173711 = t173710*t173650*t173704*t173705;
            double t173712 = ccaa4*t173653*t173654*t173655*t173684;
            double t173713 = ccaa1*gamma_bb[index]*gcaa*t173656*t173687;
            double t173714 = ccaa3*gamma_bb[index]*gcaa*t173651*t173652*t173692*t173657;
            double t173715 = ccaa2*t173651*t173652*t173658*t173696;
            double t173716 = ccaa0+t173712+t173713+t173714+t173715;
            double t173717 = gx*gx;
            double t173718 = t173717*t173717;
            double t173719 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t173720 = gamma_bb[index]*gx*t173656*4.0;
            double t173721 = gamma_bb[index]*gx*t173651*t173717*t173657*4.0;
            double t173722 = t173651*t173717*t173658*6.0;
            double t173723 = t173653*t173655*t173718;
            double t173724 = t173720+t173721+t173722+t173723+1.0;
            double t173725 = 1.0/t173724;
            double t173726 = cx4*t173653*t173725*t173655*t173718*(4.190715359480463E15/2.251799813685248E15);
            double t173727 = gamma_bb[index]*gx*t173656;
            double t173728 = t173727+1.0;
            double t173729 = 1.0/t173728;
            double t173730 = cx1*gamma_bb[index]*gx*t173656*t173729*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t173731 = gamma_bb[index]*gx*t173656*3.0;
            double t173732 = gamma_bb[index]*gx*t173651*t173717*t173657;
            double t173733 = t173651*t173717*t173658*3.0;
            double t173734 = t173731+t173732+t173733+1.0;
            double t173735 = 1.0/t173734;
            double t173736 = cx3*gamma_bb[index]*gx*t173651*t173717*t173735*t173657*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t173737 = gamma_bb[index]*gx*t173656*2.0;
            double t173738 = t173651*t173717*t173658;
            double t173739 = t173737+t173738+1.0;
            double t173740 = 1.0/t173739;
            double t173741 = cx2*t173740*t173651*t173717*t173658*(4.190715359480463E15/2.251799813685248E15);
            double t173742 = t173730+t173741+t173726+t173736+t173719;
            double t173743 = 1.0/omega;
            double t173744 = 1.0/(omega*omega);
            double t173745 = pow(rho_b[index],2.0/3.0);
            double t173746 = 1.0/t173742;
            double t173748 = t173744*t173745*t173746*(1.4000771998813E29/4.951760157141521E27);
            double t173747 = exp(-t173748);
            double t173749 = cx4*t173700*t173653*t173725*t173718*(1.396905119826821E15/7.0368744177664E13);
            double t173750 = cx1*gamma_bb[index]*gx*t173729*t173698*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t173751 = cx3*gamma_bb[index]*gx*t173651*t173717*t173735*t173699*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t173752 = cx2*t173740*t173651*t173717*t173697*(1.396905119826821E15/1.40737488355328E14);
            double t173753 = 1.0/(t173728*t173728);
            double t173754 = gamma_bb[index]*gx*t173698*8.0;
            double t173755 = gamma_bb[index]*gx*t173651*t173717*t173699*8.0;
            double t173756 = t173651*t173717*t173697*1.6E1;
            double t173757 = t173754+t173755+t173756;
            double t173758 = 1.0/(t173734*t173734);
            double t173759 = gamma_bb[index]*gx*t173698*(3.2E1/3.0);
            double t173760 = gamma_bb[index]*gx*t173651*t173717*t173699*3.2E1;
            double t173761 = t173651*t173717*t173697*3.2E1;
            double t173762 = t173700*t173653*t173718*(3.2E1/3.0);
            double t173763 = t173760+t173761+t173762+t173759;
            double t173764 = 1.0/(t173724*t173724);
            double t173765 = gamma_bb[index]*gx*t173698*(1.6E1/3.0);
            double t173766 = t173651*t173717*t173697*(1.6E1/3.0);
            double t173767 = t173765+t173766;
            double t173768 = 1.0/(t173739*t173739);
            double t173772 = cx1*t173651*t173717*t173753*t173697*(1.396905119826821E15/2.81474976710656E14);
            double t173773 = cx3*gamma_bb[index]*gx*t173651*t173717*t173657*t173757*t173758*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t173774 = cx4*t173653*t173655*t173718*t173763*t173764*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t173775 = cx2*t173651*t173717*t173658*t173767*t173768*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t173769 = t173750+t173751+t173752-t173772-t173773-t173774-t173775+t173749;
            double t173770 = omega*omega;
            double t173771 = t173747-1.0;
            double t173776 = t173633*t173744*t173746*(1.4000771998813E29/7.427640235712282E27);
            double t173777 = 1.0/(t173742*t173742);
            double t173778 = t173744*t173745*t173777*t173769*(1.4000771998813E29/4.951760157141521E27);
            double t173779 = t173776+t173778;
            double t173780 = sqrt(t173742);
            double t173781 = t173742*t173770*t173771*t173638*(2.475880078570761E27/1.4000771998813E29);
            double t173782 = t173781-t173747+3.0/2.0;
            double t173783 = 1.0/sqrt(t173742);
            double t173784 = pow(rho_b[index],1.0/3.0);
            double t173785 = t173743*t173783*t173784*(3.74176054803257E14/7.0368744177664E13);
            double t173786 = erf(t173785);
            double t173787 = t173786*(3.991211251234741E15/2.251799813685248E15);
            double t173789 = omega*t173633*t173780*t173782*(7.0368744177664E13/3.74176054803257E14);
            double t173788 = t173787-t173789;
            double t173790 = cx4*t173653*t173725*t173655*t173718;
            double t173791 = cx1*gamma_bb[index]*gx*t173656*t173729;
            double t173792 = cx3*gamma_bb[index]*gx*t173651*t173717*t173735*t173657;
            double t173793 = cx2*t173740*t173651*t173717*t173658;
            double t173794 = cx0+t173790+t173791+t173792+t173793;
            double t173795 = pow(rho_b[index],4.0/3.0);
            double t173796 = omega*t173633*t173780*t173788*(2.81474976710656E14/1.122528164409771E15);
            double t173797 = t173796-1.0;
            v_rho_b_[index] = -t173716*(t173678+t173661*t173664*(t173677-c0p*t173650*t173648*2.0))+rho_b[index]* \
               t173716*(-t173711+t173661*t173664*(t173711-(1.0/(t173670*t173670)*t173676*(b2f*c*t173701*(1.0/3.0) \
               +b4f*t173702*t173637*(2.0/3.0)+b1f*c*t173701*t173703*(1.0/6.0)+b3f*c*t173701*t173635*(1.0/2.0)))/t173673+ \
               a1f*c*c0f*t173701*t173674*(2.0/3.0)-a1p*c*c0p*t173701*t173648*(2.0/3.0))+a1p*c*c0p*t173701*t173648* \
               (2.0/3.0))+rho_b[index]*(t173678+t173661*t173664*(t173677-t173678))*(ccaa1*gamma_bb[index]*gcaa*t173687* \
               t173698*(8.0/3.0)+ccaa4*t173700*t173653*t173654*t173684*(3.2E1/3.0)+ccaa2*t173651*t173652*t173696* \
               t173697*(1.6E1/3.0)-ccaa1*t173651*t173652*1.0/(t173686*t173686)*t173697*(8.0/3.0)-ccaa2*t173651*t173652* \
               t173658*1.0/(t173695*t173695)*(gamma_bb[index]*gcaa*t173698*(1.6E1/3.0)+t173651*t173652*t173697*(1.6E1/ \
               3.0))-ccaa4*t173653*t173654*t173655*1.0/(t173683*t173683)*(gamma_bb[index]*gcaa*t173698*(3.2E1/3.0) \
               +t173700*t173653*t173654*(3.2E1/3.0)+t173651*t173652*t173697*3.2E1+gamma_bb[index]*gcaa*t173651*t173652* \
               t173699*3.2E1)+ccaa3*gamma_bb[index]*gcaa*t173651*t173652*t173692*t173699*8.0-ccaa3*gamma_bb[index]* \
               gcaa*t173651*t173652*1.0/(t173691*t173691)*t173657*(gamma_bb[index]*gcaa*t173698*8.0+t173651*t173652* \
               t173697*1.6E1+gamma_bb[index]*gcaa*t173651*t173652*t173699*8.0))+c0*t173794*t173795*(omega*t173701* \
               t173780*t173788*(2.81474976710656E14/3.367584493229313E15)-omega*t173633*t173780*(1.0/sqrt(3.141592653589793) \
               *t173747*(t173743*t173638*t173783*(3.74176054803257E14/2.11106232532992E14)+1.0/pow(t173742,3.0/2.0) \
               *t173743*t173784*t173769*(3.74176054803257E14/1.40737488355328E14))*(3.991211251234741E15/1.125899906842624E15) \
               +omega*t173701*t173780*t173782*(7.0368744177664E13/1.122528164409771E15)+omega*t173633*t173780*(-t173747* \
               t173779+t173702*t173742*t173770*t173771*(4.951760157141521E27/4.2002315996439E29)+t173770*t173771* \
               t173638*t173769*(2.475880078570761E27/1.4000771998813E29)+t173742*t173770*t173638*t173747*t173779* \
               (2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega*t173633* \
               t173782*t173783*t173769*(3.5184372088832E13/3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15) \
               +omega*t173633*t173783*t173769*t173788*(1.40737488355328E14/1.122528164409771E15))-c0*t173784*t173794* \
               t173797*(4.0/3.0)+c0*t173795*t173797*(cx1*gamma_bb[index]*gx*t173729*t173698*(8.0/3.0)-cx1*t173651* \
               t173717*t173753*t173697*(8.0/3.0)+cx2*t173740*t173651*t173717*t173697*(1.6E1/3.0)+cx4*t173700*t173653* \
               t173725*t173718*(3.2E1/3.0)-cx2*t173651*t173717*t173658*t173767*t173768-cx4*t173653*t173655*t173718* \
               t173763*t173764+cx3*gamma_bb[index]*gx*t173651*t173717*t173735*t173699*8.0-cx3*gamma_bb[index]*gx* \
               t173651*t173717*t173657*t173757*t173758);
        } else {
            v_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t169930 = 1.0/pow(rho_a[index],1.0/3.0);
                double t169931 = c*t169930;
                double t169932 = sqrt(t169931);
                double t169933 = pow(t169931,3.0/2.0);
                double t169934 = c*c;
                double t169935 = 1.0/pow(rho_a[index],2.0/3.0);
                double t169936 = 1.0/c0p;
                double t169937 = b1p*t169932;
                double t169938 = b3p*t169933;
                double t169939 = b4p*t169934*t169935;
                double t169940 = b2p*c*t169930;
                double t169941 = t169940+t169937+t169938+t169939;
                double t169942 = 1.0/t169941;
                double t169943 = t169942*t169936*(1.0/2.0);
                double t169944 = t169943+1.0;
                double t169945 = log(t169944);
                double t169946 = a1p*c*t169930;
                double t169947 = t169946+1.0;
                double t169948 = pow(2.0,1.0/3.0);
                double t169949 = t169948*2.0;
                double t169950 = t169949-2.0;
                double t169951 = two_13*2.0;
                double t169952 = t169951-2.0;
                double t169953 = 1.0/t169952;
                double t169954 = 1.0/c0f;
                double t169955 = 1.0/pow(rho_b[index],1.0/3.0);
                double t169956 = c*t169955;
                double t169957 = sqrt(t169956);
                double t169958 = pow(t169956,3.0/2.0);
                double t169959 = 1.0/pow(rho_b[index],2.0/3.0);
                double t169960 = b1p*t169957;
                double t169961 = b3p*t169958;
                double t169962 = b4p*t169934*t169959;
                double t169963 = b2p*c*t169955;
                double t169964 = t169960+t169961+t169962+t169963;
                double t169965 = 1.0/t169964;
                double t169966 = t169936*t169965*(1.0/2.0);
                double t169967 = t169966+1.0;
                double t169968 = log(t169967);
                double t169969 = a1p*c*t169955;
                double t169970 = t169969+1.0;
                double t169971 = c0p*t169970*t169968*2.0;
                double t169972 = rho_a[index]+rho_b[index];
                double t169973 = 1.0/pow(t169972,1.0/3.0);
                double t169974 = c*t169973;
                double t169975 = sqrt(t169974);
                double t169976 = pow(t169974,3.0/2.0);
                double t169977 = 1.0/pow(t169972,2.0/3.0);
                double t169978 = b1p*t169975;
                double t169979 = b3p*t169976;
                double t169980 = b4p*t169934*t169977;
                double t169981 = b2p*c*t169973;
                double t169982 = t169980+t169981+t169978+t169979;
                double t169983 = 1.0/t169982;
                double t169984 = t169936*t169983*(1.0/2.0);
                double t169985 = t169984+1.0;
                double t169986 = log(t169985);
                double t169987 = a1p*c*t169973;
                double t169988 = t169987+1.0;
                double t169989 = c0p*t169986*t169988*2.0;
                double t169990 = rho_a[index]-rho_b[index];
                double t169991 = t169990*t169990;
                double t169992 = 1.0/t169972;
                double t169993 = t169990*t169992;
                double t169994 = 1.0/(t169972*t169972*t169972*t169972);
                double t169995 = t169991*t169991;
                double t169996 = t169993+1.0;
                double t169997 = pow(t169996,4.0/3.0);
                double t169998 = -t169993+1.0;
                double t169999 = pow(t169998,4.0/3.0);
                double t170000 = t169997+t169999-2.0;
                double t170001 = 1.0/pow(rho_a[index],8.0/3.0);
                double t170002 = gamma_aa[index]*t170001*(1.0/2.0);
                double t170003 = 1.0/pow(rho_b[index],8.0/3.0);
                double t170004 = gamma_bb[index]*t170003*(1.0/2.0);
                double t170005 = t170002+t170004;
                double t170006 = gcab*t170005;
                double t170007 = t170006+1.0;
                double t170008 = gcab*gcab;
                double t170009 = t170005*t170005;
                double t170010 = t170008*t170008;
                double t170011 = t170009*t170009;
                double t170012 = t170008*t170009;
                double t170013 = gcab*t170005*2.0;
                double t170014 = t170012+t170013+1.0;
                double t170015 = t170008*t170009*3.0;
                double t170016 = gcab*t170005*t170008*t170009;
                double t170017 = gcab*t170005*3.0;
                double t170018 = t170015+t170016+t170017+1.0;
                double t170019 = t170008*t170009*6.0;
                double t170020 = gcab*t170005*t170008*t170009*4.0;
                double t170021 = t170010*t170011;
                double t170022 = gcab*t170005*4.0;
                double t170023 = t170020+t170021+t170022+t170019+1.0;
                double t170024 = c0p*t169945*t169947*2.0;
                double t170025 = b1f*t169932;
                double t170026 = b3f*t169933;
                double t170027 = b4f*t169934*t169935;
                double t170028 = b2f*c*t169930;
                double t170029 = t170025+t170026+t170027+t170028;
                double t170030 = 1.0/t170029;
                double t170031 = t169954*t170030*(1.0/2.0);
                double t170032 = t170031+1.0;
                double t170033 = log(t170032);
                double t170034 = a1f*c*t169930;
                double t170035 = t170034+1.0;
                double t170036 = t170024-c0f*t170033*t170035*2.0;
                double t170037 = t170024-t169950*t169953*t170036;
                double t170038 = gamma_aa[index]*gamma_aa[index];
                double t170039 = gcaa*gcaa;
                double t170040 = t170039*t170039;
                double t170041 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t170042 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t170043 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t170044 = gamma_aa[index]*gcaa*t170001;
                double t170045 = t170044+1.0;
                double t170046 = gamma_aa[index]*gcaa*t170001*3.0;
                double t170047 = gamma_aa[index]*gcaa*t170043*t170038*t170039;
                double t170048 = t170042*t170038*t170039*3.0;
                double t170049 = t170046+t170047+t170048+1.0;
                double t170050 = t170038*t170038;
                double t170051 = gamma_aa[index]*gcaa*t170001*4.0;
                double t170052 = gamma_aa[index]*gcaa*t170043*t170038*t170039*4.0;
                double t170053 = t170042*t170038*t170039*6.0;
                double t170054 = t170040*t170041*t170050;
                double t170055 = t170051+t170052+t170053+t170054+1.0;
                double t170056 = gamma_aa[index]*gcaa*t170001*2.0;
                double t170057 = t170042*t170038*t170039;
                double t170058 = t170056+t170057+1.0;
                double t170059 = gx*gx;
                double t170060 = t170059*t170059;
                double t170061 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t170062 = gamma_aa[index]*gx*t170001*4.0;
                double t170063 = gamma_aa[index]*gx*t170043*t170038*t170059*4.0;
                double t170064 = t170042*t170038*t170059*6.0;
                double t170065 = t170041*t170050*t170060;
                double t170066 = t170062+t170063+t170064+t170065+1.0;
                double t170067 = 1.0/t170066;
                double t170068 = cx4*t170041*t170050*t170060*t170067*(4.190715359480463E15/2.251799813685248E15);
                double t170069 = gamma_aa[index]*gx*t170001;
                double t170070 = t170069+1.0;
                double t170071 = 1.0/t170070;
                double t170072 = cx1*gamma_aa[index]*gx*t170001*t170071*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170073 = gamma_aa[index]*gx*t170001*3.0;
                double t170074 = gamma_aa[index]*gx*t170043*t170038*t170059;
                double t170075 = t170042*t170038*t170059*3.0;
                double t170076 = t170073+t170074+t170075+1.0;
                double t170077 = 1.0/t170076;
                double t170078 = cx3*gamma_aa[index]*gx*t170043*t170038*t170059*t170077*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170079 = gamma_aa[index]*gx*t170001*2.0;
                double t170080 = t170042*t170038*t170059;
                double t170081 = t170080+t170079+1.0;
                double t170082 = 1.0/t170081;
                double t170083 = cx2*t170042*t170082*t170038*t170059*(4.190715359480463E15/2.251799813685248E15);
                double t170084 = t170061+t170072+t170083+t170068+t170078;
                double t170085 = 1.0/(omega*omega);
                double t170086 = pow(rho_a[index],2.0/3.0);
                double t170087 = 1.0/t170084;
                double t170091 = t170085*t170086*t170087*(1.4000771998813E29/4.951760157141521E27);
                double t170088 = exp(-t170091);
                double t170089 = sqrt(t170084);
                double t170090 = pow(rho_a[index],4.0/3.0);
                double t170092 = 1.0/(t170070*t170070);
                double t170093 = gx*t170001*3.0;
                double t170094 = gamma_aa[index]*t170042*t170059*6.0;
                double t170095 = gx*t170043*t170038*t170059*3.0;
                double t170096 = t170093+t170094+t170095;
                double t170097 = 1.0/(t170076*t170076);
                double t170098 = gx*t170001*4.0;
                double t170099 = gamma_aa[index]*t170042*t170059*1.2E1;
                double t170100 = gx*t170043*t170038*t170059*1.2E1;
                double t170101 = gamma_aa[index]*t170041*t170060*t170038*4.0;
                double t170102 = t170100+t170101+t170098+t170099;
                double t170103 = 1.0/(t170066*t170066);
                double t170104 = gx*t170001*2.0;
                double t170105 = gamma_aa[index]*t170042*t170059*2.0;
                double t170106 = t170104+t170105;
                double t170107 = 1.0/(t170081*t170081);
                double t170108 = omega*omega;
                double t170109 = t170088-1.0;
                double t170110 = cx1*gx*t170001*t170071*(4.190715359480463E15/2.251799813685248E15);
                double t170111 = cx4*gamma_aa[index]*t170041*t170060*t170038*t170067*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t170112 = cx2*gamma_aa[index]*t170042*t170082*t170059*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t170113 = cx3*gx*t170043*t170038*t170059*t170077*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t170115 = cx1*gamma_aa[index]*t170042*t170092*t170059*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170116 = cx3*gamma_aa[index]*gx*t170043*t170038*t170059*t170096*t170097*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t170117 = cx4*t170102*t170103*t170041*t170050*t170060*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170118 = cx2*t170042*t170106*t170107*t170038*t170059*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170114 = t170110+t170111+t170112+t170113-t170115-t170116-t170117-t170118;
                double t170119 = t169935*t170108*t170109*t170084*(2.475880078570761E27/1.4000771998813E29);
                double t170120 = t170119-t170088+3.0/2.0;
                double t170121 = 1.0/sqrt(t170084);
                double t170122 = 1.0/omega;
                double t170123 = pow(rho_a[index],1.0/3.0);
                double t170124 = t170121*t170122*t170123*(3.74176054803257E14/7.0368744177664E13);
                double t170125 = erf(t170124);
                double t170126 = t170125*(3.991211251234741E15/2.251799813685248E15);
                double t170127 = t170126-omega*t169930*t170120*t170089*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_aa_[index] = (rho_a[index]*t170037+rho_b[index]*(t169971-t169950*t169953*(t169971-c0f*log((t169954* \
                   (1.0/2.0))/(b1f*t169957+b3f*t169958+b2f*c*t169955+b4f*t169934*t169959)+1.0)*(a1f*c*t169955+1.0)*2.0) \
                   )-t169972*(t169989-t169953*t169994*t169995*t170000*(t169989-c0f*log((t169954*(1.0/2.0))/(b1f*t169975+ \
                   b3f*t169976+b2f*c*t169973+b4f*t169934*t169977)+1.0)*(a1f*c*t169973+1.0)*2.0)+(Aa*t169953*t170000*log((1.0/ \
                   2.0)/(Aa*(b1a*t169975+b3a*t169976+b2a*c*t169973+b4a*t169934*t169977))+1.0)*(t169994*t169995-1.0)*(a1a* \
                   c*t169973+1.0)*2.0)/d2fz0))*((ccab1*gcab*t170001*(1.0/2.0))/t170007-ccab4*t170010*t170011*1.0/(t170023* \
                   t170023)*(gcab*t170001*2.0+t170001*t170005*t170008*6.0+gcab*t170001*t170008*t170009*6.0+t170001*t170010* \
                   t170005*t170009*2.0)-ccab2*1.0/(t170014*t170014)*t170008*t170009*(gcab*t170001+t170001*t170005*t170008) \
                   +(ccab2*t170001*t170005*t170008)/t170014-ccab1*t170001*t170005*1.0/(t170007*t170007)*t170008*(1.0/ \
                   2.0)+(ccab3*gcab*t170001*t170008*t170009*(3.0/2.0))/t170018+(ccab4*t170001*t170010*t170005*t170009* \
                   2.0)/t170023-ccab3*gcab*t170005*t170008*t170009*1.0/(t170018*t170018)*(gcab*t170001*(3.0/2.0)+t170001* \
                   t170005*t170008*3.0+gcab*t170001*t170008*t170009*(3.0/2.0)))-rho_a[index]*t170037*((ccaa1*gcaa*t170001) \
                   /t170045-ccaa1*gamma_aa[index]*t170042*1.0/(t170045*t170045)*t170039+(ccaa2*gamma_aa[index]*t170042* \
                   t170039*2.0)/t170058-ccaa2*t170042*t170038*t170039*1.0/(t170058*t170058)*(gcaa*t170001*2.0+gamma_aa[index]* \
                   t170042*t170039*2.0)+(ccaa4*gamma_aa[index]*t170040*t170041*t170038*4.0)/t170055+(ccaa3*gcaa*t170043* \
                   t170038*t170039*3.0)/t170049-ccaa4*t170040*t170041*t170050*1.0/(t170055*t170055)*(gcaa*t170001*4.0+ \
                   gamma_aa[index]*t170042*t170039*1.2E1+gamma_aa[index]*t170040*t170041*t170038*4.0+gcaa*t170043*t170038* \
                   t170039*1.2E1)-ccaa3*gamma_aa[index]*gcaa*t170043*t170038*t170039*1.0/(t170049*t170049)*(gcaa*t170001* \
                   3.0+gamma_aa[index]*t170042*t170039*6.0+gcaa*t170043*t170038*t170039*3.0))-c0*t170090*(omega*t169930* \
                   t170127*t170089*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*gx*t170001*t170071-cx1*gamma_aa[index]* \
                   t170042*t170092*t170059+cx2*gamma_aa[index]*t170042*t170082*t170059*2.0-cx2*t170042*t170106*t170107* \
                   t170038*t170059-cx4*t170102*t170103*t170041*t170050*t170060+cx4*gamma_aa[index]*t170041*t170060*t170038* \
                   t170067*4.0+cx3*gx*t170043*t170038*t170059*t170077*3.0-cx3*gamma_aa[index]*gx*t170043*t170038*t170059* \
                   t170096*t170097)+c0*t170090*(omega*t169930*t170089*(omega*t169930*t170089*(t170114*t170087*t170088* \
                   (1.0/2.0)+t169935*t170114*t170108*t170109*(2.475880078570761E27/1.4000771998813E29)-t170114*1.0/(t170084* \
                   t170084)*t170085*t170086*t170088*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t169930*t170120*t170121*t170114*(3.5184372088832E13/3.74176054803257E14)+1.0/sqrt(3.141592653589793) \
                   *t170122*t170114*t170123*1.0/pow(t170084,3.0/2.0)*t170088*(1.493415679873386E30/1.584563250285287E29) \
                   )*(2.81474976710656E14/1.122528164409771E15)-omega*t169930*t170121*t170114*t170127*(1.40737488355328E14/ \
                   1.122528164409771E15))*(cx0+cx1*gamma_aa[index]*gx*t170001*t170071+cx2*t170042*t170082*t170038*t170059+ \
                   cx4*t170041*t170050*t170060*t170067+cx3*gamma_aa[index]*gx*t170043*t170038*t170059*t170077);
            } else if (rho_a[index] > cutoff_) {
                double t174894 = 1.0/pow(rho_a[index],1.0/3.0);
                double t174895 = c*t174894;
                double t174896 = sqrt(t174895);
                double t174897 = pow(t174895,3.0/2.0);
                double t174898 = c*c;
                double t174899 = 1.0/pow(rho_a[index],2.0/3.0);
                double t174900 = 1.0/c0p;
                double t174901 = b1p*t174896;
                double t174902 = b3p*t174897;
                double t174903 = b4p*t174898*t174899;
                double t174904 = b2p*c*t174894;
                double t174905 = t174901+t174902+t174903+t174904;
                double t174906 = 1.0/t174905;
                double t174907 = t174900*t174906*(1.0/2.0);
                double t174908 = t174907+1.0;
                double t174909 = log(t174908);
                double t174910 = a1p*c*t174894;
                double t174911 = t174910+1.0;
                double t174912 = 1.0/pow(rho_a[index],8.0/3.0);
                double t174913 = gamma_aa[index]*gamma_aa[index];
                double t174914 = gcaa*gcaa;
                double t174915 = t174914*t174914;
                double t174916 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t174917 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t174918 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t174919 = gamma_aa[index]*gcaa*t174912;
                double t174920 = t174919+1.0;
                double t174921 = gamma_aa[index]*gcaa*t174912*3.0;
                double t174922 = gamma_aa[index]*gcaa*t174913*t174914*t174918;
                double t174923 = t174913*t174914*t174917*3.0;
                double t174924 = t174921+t174922+t174923+1.0;
                double t174925 = t174913*t174913;
                double t174926 = gamma_aa[index]*gcaa*t174912*4.0;
                double t174927 = gamma_aa[index]*gcaa*t174913*t174914*t174918*4.0;
                double t174928 = t174913*t174914*t174917*6.0;
                double t174929 = t174915*t174916*t174925;
                double t174930 = t174926+t174927+t174928+t174929+1.0;
                double t174931 = gamma_aa[index]*gcaa*t174912*2.0;
                double t174932 = t174913*t174914*t174917;
                double t174933 = t174931+t174932+1.0;
                double t174934 = gx*gx;
                double t174935 = t174934*t174934;
                double t174936 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t174937 = gamma_aa[index]*gx*t174912*4.0;
                double t174938 = gamma_aa[index]*gx*t174913*t174934*t174918*4.0;
                double t174939 = t174913*t174934*t174917*6.0;
                double t174940 = t174916*t174925*t174935;
                double t174941 = t174940+t174937+t174938+t174939+1.0;
                double t174942 = 1.0/t174941;
                double t174943 = cx4*t174942*t174916*t174925*t174935*(4.190715359480463E15/2.251799813685248E15);
                double t174944 = gamma_aa[index]*gx*t174912;
                double t174945 = t174944+1.0;
                double t174946 = 1.0/t174945;
                double t174947 = cx1*gamma_aa[index]*gx*t174912*t174946*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174948 = gamma_aa[index]*gx*t174912*3.0;
                double t174949 = gamma_aa[index]*gx*t174913*t174934*t174918;
                double t174950 = t174913*t174934*t174917*3.0;
                double t174951 = t174950+t174948+t174949+1.0;
                double t174952 = 1.0/t174951;
                double t174953 = cx3*gamma_aa[index]*gx*t174913*t174934*t174952*t174918*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174954 = gamma_aa[index]*gx*t174912*2.0;
                double t174955 = t174913*t174934*t174917;
                double t174956 = t174954+t174955+1.0;
                double t174957 = 1.0/t174956;
                double t174958 = cx2*t174913*t174934*t174917*t174957*(4.190715359480463E15/2.251799813685248E15);
                double t174959 = t174943+t174953+t174936+t174947+t174958;
                double t174960 = 1.0/(omega*omega);
                double t174961 = pow(rho_a[index],2.0/3.0);
                double t174962 = 1.0/t174959;
                double t174966 = t174960*t174961*t174962*(1.4000771998813E29/4.951760157141521E27);
                double t174963 = exp(-t174966);
                double t174964 = sqrt(t174959);
                double t174965 = pow(rho_a[index],4.0/3.0);
                double t174967 = 1.0/(t174945*t174945);
                double t174968 = gx*t174912*3.0;
                double t174969 = gamma_aa[index]*t174934*t174917*6.0;
                double t174970 = gx*t174913*t174934*t174918*3.0;
                double t174971 = t174970+t174968+t174969;
                double t174972 = 1.0/(t174951*t174951);
                double t174973 = gx*t174912*4.0;
                double t174974 = gamma_aa[index]*t174934*t174917*1.2E1;
                double t174975 = gx*t174913*t174934*t174918*1.2E1;
                double t174976 = gamma_aa[index]*t174913*t174916*t174935*4.0;
                double t174977 = t174973+t174974+t174975+t174976;
                double t174978 = 1.0/(t174941*t174941);
                double t174979 = gx*t174912*2.0;
                double t174980 = gamma_aa[index]*t174934*t174917*2.0;
                double t174981 = t174980+t174979;
                double t174982 = 1.0/(t174956*t174956);
                double t174983 = omega*omega;
                double t174984 = t174963-1.0;
                double t174985 = cx1*gx*t174912*t174946*(4.190715359480463E15/2.251799813685248E15);
                double t174986 = cx4*gamma_aa[index]*t174913*t174942*t174916*t174935*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t174987 = cx2*gamma_aa[index]*t174934*t174917*t174957*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174988 = cx3*gx*t174913*t174934*t174952*t174918*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t174990 = cx1*gamma_aa[index]*t174934*t174917*t174967*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174991 = cx3*gamma_aa[index]*gx*t174913*t174934*t174971*t174918*t174972*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t174992 = cx4*t174916*t174925*t174935*t174977*t174978*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174993 = cx2*t174913*t174934*t174917*t174981*t174982*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174989 = -t174990-t174991-t174992-t174993+t174985+t174986+t174987+t174988;
                double t174994 = t174983*t174984*t174959*t174899*(2.475880078570761E27/1.4000771998813E29);
                double t174995 = -t174963+t174994+3.0/2.0;
                double t174996 = 1.0/sqrt(t174959);
                double t174997 = 1.0/omega;
                double t174998 = pow(rho_a[index],1.0/3.0);
                double t174999 = t174996*t174997*t174998*(3.74176054803257E14/7.0368744177664E13);
                double t175000 = erf(t174999);
                double t175001 = t175000*(3.991211251234741E15/2.251799813685248E15);
                double t175002 = t175001-omega*t174964*t174894*t174995*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_aa_[index] = -rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t174896+ \
                   b3f*t174897+b2f*c*t174894+b4f*t174898*t174899))+1.0)*(a1f*c*t174894+1.0)*2.0-c0p*t174911*t174909*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t174911*t174909*2.0)*((ccaa1*gcaa*t174912)/t174920-ccaa1*gamma_aa[index]*1.0/ \
                   (t174920*t174920)*t174914*t174917+(ccaa2*gamma_aa[index]*t174914*t174917*2.0)/t174933-ccaa2*t174913* \
                   t174914*1.0/(t174933*t174933)*t174917*(gcaa*t174912*2.0+gamma_aa[index]*t174914*t174917*2.0)+(ccaa4* \
                   gamma_aa[index]*t174913*t174915*t174916*4.0)/t174930+(ccaa3*gcaa*t174913*t174914*t174918*3.0)/t174924- \
                   ccaa4*1.0/(t174930*t174930)*t174915*t174916*t174925*(gcaa*t174912*4.0+gamma_aa[index]*t174914*t174917* \
                   1.2E1+gamma_aa[index]*t174913*t174915*t174916*4.0+gcaa*t174913*t174914*t174918*1.2E1)-ccaa3*gamma_aa[index]* \
                   gcaa*t174913*t174914*1.0/(t174924*t174924)*t174918*(gcaa*t174912*3.0+gamma_aa[index]*t174914*t174917* \
                   6.0+gcaa*t174913*t174914*t174918*3.0))-c0*t174965*(omega*t175002*t174964*t174894*(2.81474976710656E14/ \
                   1.122528164409771E15)-1.0)*(cx1*gx*t174912*t174946-cx1*gamma_aa[index]*t174934*t174917*t174967+cx2* \
                   gamma_aa[index]*t174934*t174917*t174957*2.0-cx2*t174913*t174934*t174917*t174981*t174982-cx4*t174916* \
                   t174925*t174935*t174977*t174978+cx4*gamma_aa[index]*t174913*t174942*t174916*t174935*4.0+cx3*gx*t174913* \
                   t174934*t174952*t174918*3.0-cx3*gamma_aa[index]*gx*t174913*t174934*t174971*t174918*t174972)+c0*t174965* \
                   (omega*t174964*t174894*(omega*t174964*t174894*(t174962*t174963*t174989*(1.0/2.0)+t174983*t174984*t174899* \
                   t174989*(2.475880078570761E27/1.4000771998813E29)-t174960*t174961*t174963*1.0/(t174959*t174959)*t174989* \
                   (1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14)+omega*t174894* \
                   t174995*t174996*t174989*(3.5184372088832E13/3.74176054803257E14)+1.0/sqrt(3.141592653589793)*t174963* \
                   1.0/pow(t174959,3.0/2.0)*t174997*t174989*t174998*(1.493415679873386E30/1.584563250285287E29))*(2.81474976710656E14/ \
                   1.122528164409771E15)-omega*t175002*t174894*t174996*t174989*(1.40737488355328E14/1.122528164409771E15) \
                   )*(cx0+cx1*gamma_aa[index]*gx*t174912*t174946+cx2*t174913*t174934*t174917*t174957+cx4*t174942*t174916* \
                   t174925*t174935+cx3*gamma_aa[index]*gx*t174913*t174934*t174952*t174918);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t170130 = 1.0/pow(rho_a[index],1.0/3.0);
                double t170131 = c*t170130;
                double t170132 = sqrt(t170131);
                double t170133 = pow(t170131,3.0/2.0);
                double t170134 = c*c;
                double t170135 = 1.0/pow(rho_a[index],2.0/3.0);
                double t170136 = 1.0/c0p;
                double t170137 = b1p*t170132;
                double t170138 = b3p*t170133;
                double t170139 = b4p*t170134*t170135;
                double t170140 = b2p*c*t170130;
                double t170141 = t170140+t170137+t170138+t170139;
                double t170142 = 1.0/t170141;
                double t170143 = t170142*t170136*(1.0/2.0);
                double t170144 = t170143+1.0;
                double t170145 = log(t170144);
                double t170146 = a1p*c*t170130;
                double t170147 = t170146+1.0;
                double t170148 = pow(2.0,1.0/3.0);
                double t170149 = t170148*2.0;
                double t170150 = t170149-2.0;
                double t170151 = two_13*2.0;
                double t170152 = t170151-2.0;
                double t170153 = 1.0/t170152;
                double t170154 = 1.0/c0f;
                double t170155 = 1.0/pow(rho_b[index],1.0/3.0);
                double t170156 = c*t170155;
                double t170157 = sqrt(t170156);
                double t170158 = pow(t170156,3.0/2.0);
                double t170159 = 1.0/pow(rho_b[index],2.0/3.0);
                double t170160 = b1p*t170157;
                double t170161 = b3p*t170158;
                double t170162 = b4p*t170134*t170159;
                double t170163 = b2p*c*t170155;
                double t170164 = t170160+t170161+t170162+t170163;
                double t170165 = 1.0/t170164;
                double t170166 = t170136*t170165*(1.0/2.0);
                double t170167 = t170166+1.0;
                double t170168 = log(t170167);
                double t170169 = a1p*c*t170155;
                double t170170 = t170169+1.0;
                double t170171 = c0p*t170170*t170168*2.0;
                double t170172 = rho_a[index]+rho_b[index];
                double t170173 = 1.0/pow(t170172,1.0/3.0);
                double t170174 = c*t170173;
                double t170175 = sqrt(t170174);
                double t170176 = pow(t170174,3.0/2.0);
                double t170177 = 1.0/pow(t170172,2.0/3.0);
                double t170178 = b1p*t170175;
                double t170179 = b3p*t170176;
                double t170180 = b4p*t170134*t170177;
                double t170181 = b2p*c*t170173;
                double t170182 = t170180+t170181+t170178+t170179;
                double t170183 = 1.0/t170182;
                double t170184 = t170136*t170183*(1.0/2.0);
                double t170185 = t170184+1.0;
                double t170186 = log(t170185);
                double t170187 = a1p*c*t170173;
                double t170188 = t170187+1.0;
                double t170189 = c0p*t170186*t170188*2.0;
                double t170190 = rho_a[index]-rho_b[index];
                double t170191 = t170190*t170190;
                double t170192 = 1.0/t170172;
                double t170193 = t170190*t170192;
                double t170194 = 1.0/(t170172*t170172*t170172*t170172);
                double t170195 = t170191*t170191;
                double t170196 = t170193+1.0;
                double t170197 = pow(t170196,4.0/3.0);
                double t170198 = -t170193+1.0;
                double t170199 = pow(t170198,4.0/3.0);
                double t170200 = t170197+t170199-2.0;
                double t170201 = 1.0/pow(rho_b[index],8.0/3.0);
                double t170202 = 1.0/pow(rho_a[index],8.0/3.0);
                double t170203 = gamma_aa[index]*t170202*(1.0/2.0);
                double t170204 = gamma_bb[index]*t170201*(1.0/2.0);
                double t170205 = t170203+t170204;
                double t170206 = gcab*t170205;
                double t170207 = t170206+1.0;
                double t170208 = gcab*gcab;
                double t170209 = t170205*t170205;
                double t170210 = t170208*t170208;
                double t170211 = t170209*t170209;
                double t170212 = t170208*t170209;
                double t170213 = gcab*t170205*2.0;
                double t170214 = t170212+t170213+1.0;
                double t170215 = t170208*t170209*3.0;
                double t170216 = gcab*t170205*t170208*t170209;
                double t170217 = gcab*t170205*3.0;
                double t170218 = t170215+t170216+t170217+1.0;
                double t170219 = t170208*t170209*6.0;
                double t170220 = gcab*t170205*t170208*t170209*4.0;
                double t170221 = t170210*t170211;
                double t170222 = gcab*t170205*4.0;
                double t170223 = t170220+t170221+t170222+t170219+1.0;
                double t170224 = c0p*t170145*t170147*2.0;
                double t170225 = b1f*t170157;
                double t170226 = b3f*t170158;
                double t170227 = b4f*t170134*t170159;
                double t170228 = b2f*c*t170155;
                double t170229 = t170225+t170226+t170227+t170228;
                double t170230 = 1.0/t170229;
                double t170231 = t170230*t170154*(1.0/2.0);
                double t170232 = t170231+1.0;
                double t170233 = log(t170232);
                double t170234 = a1f*c*t170155;
                double t170235 = t170234+1.0;
                double t170236 = t170171-c0f*t170233*t170235*2.0;
                double t170237 = t170171-t170150*t170153*t170236;
                double t170238 = gamma_bb[index]*gamma_bb[index];
                double t170239 = gcaa*gcaa;
                double t170240 = t170239*t170239;
                double t170241 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t170242 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t170243 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t170244 = gamma_bb[index]*gcaa*t170201;
                double t170245 = t170244+1.0;
                double t170246 = gamma_bb[index]*gcaa*t170201*3.0;
                double t170247 = gamma_bb[index]*gcaa*t170243*t170238*t170239;
                double t170248 = t170242*t170238*t170239*3.0;
                double t170249 = t170246+t170247+t170248+1.0;
                double t170250 = t170238*t170238;
                double t170251 = gamma_bb[index]*gcaa*t170201*4.0;
                double t170252 = gamma_bb[index]*gcaa*t170243*t170238*t170239*4.0;
                double t170253 = t170242*t170238*t170239*6.0;
                double t170254 = t170240*t170241*t170250;
                double t170255 = t170251+t170252+t170253+t170254+1.0;
                double t170256 = gamma_bb[index]*gcaa*t170201*2.0;
                double t170257 = t170242*t170238*t170239;
                double t170258 = t170256+t170257+1.0;
                double t170259 = gx*gx;
                double t170260 = t170259*t170259;
                double t170261 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t170262 = gamma_bb[index]*gx*t170201*4.0;
                double t170263 = gamma_bb[index]*gx*t170243*t170238*t170259*4.0;
                double t170264 = t170242*t170238*t170259*6.0;
                double t170265 = t170241*t170250*t170260;
                double t170266 = t170262+t170263+t170264+t170265+1.0;
                double t170267 = 1.0/t170266;
                double t170268 = cx4*t170241*t170250*t170260*t170267*(4.190715359480463E15/2.251799813685248E15);
                double t170269 = gamma_bb[index]*gx*t170201;
                double t170270 = t170269+1.0;
                double t170271 = 1.0/t170270;
                double t170272 = cx1*gamma_bb[index]*gx*t170201*t170271*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170273 = gamma_bb[index]*gx*t170201*3.0;
                double t170274 = gamma_bb[index]*gx*t170243*t170238*t170259;
                double t170275 = t170242*t170238*t170259*3.0;
                double t170276 = t170273+t170274+t170275+1.0;
                double t170277 = 1.0/t170276;
                double t170278 = cx3*gamma_bb[index]*gx*t170243*t170238*t170259*t170277*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170279 = gamma_bb[index]*gx*t170201*2.0;
                double t170280 = t170242*t170238*t170259;
                double t170281 = t170280+t170279+1.0;
                double t170282 = 1.0/t170281;
                double t170283 = cx2*t170242*t170282*t170238*t170259*(4.190715359480463E15/2.251799813685248E15);
                double t170284 = t170261+t170272+t170283+t170268+t170278;
                double t170285 = 1.0/(omega*omega);
                double t170286 = pow(rho_b[index],2.0/3.0);
                double t170287 = 1.0/t170284;
                double t170291 = t170285*t170286*t170287*(1.4000771998813E29/4.951760157141521E27);
                double t170288 = exp(-t170291);
                double t170289 = sqrt(t170284);
                double t170290 = pow(rho_b[index],4.0/3.0);
                double t170292 = 1.0/(t170270*t170270);
                double t170293 = gx*t170201*3.0;
                double t170294 = gamma_bb[index]*t170242*t170259*6.0;
                double t170295 = gx*t170243*t170238*t170259*3.0;
                double t170296 = t170293+t170294+t170295;
                double t170297 = 1.0/(t170276*t170276);
                double t170298 = gx*t170201*4.0;
                double t170299 = gamma_bb[index]*t170242*t170259*1.2E1;
                double t170300 = gx*t170243*t170238*t170259*1.2E1;
                double t170301 = gamma_bb[index]*t170241*t170260*t170238*4.0;
                double t170302 = t170300+t170301+t170298+t170299;
                double t170303 = 1.0/(t170266*t170266);
                double t170304 = gx*t170201*2.0;
                double t170305 = gamma_bb[index]*t170242*t170259*2.0;
                double t170306 = t170304+t170305;
                double t170307 = 1.0/(t170281*t170281);
                double t170308 = omega*omega;
                double t170309 = t170288-1.0;
                double t170310 = cx1*gx*t170201*t170271*(4.190715359480463E15/2.251799813685248E15);
                double t170311 = cx4*gamma_bb[index]*t170241*t170260*t170238*t170267*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t170312 = cx2*gamma_bb[index]*t170242*t170282*t170259*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t170313 = cx3*gx*t170243*t170238*t170259*t170277*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t170315 = cx1*gamma_bb[index]*t170242*t170292*t170259*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170316 = cx3*gamma_bb[index]*gx*t170243*t170238*t170259*t170296*t170297*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t170317 = cx4*t170302*t170303*t170241*t170250*t170260*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170318 = cx2*t170242*t170306*t170307*t170238*t170259*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t170314 = t170310+t170311+t170312+t170313-t170315-t170316-t170317-t170318;
                double t170319 = t170308*t170309*t170284*t170159*(2.475880078570761E27/1.4000771998813E29);
                double t170320 = t170319-t170288+3.0/2.0;
                double t170321 = 1.0/sqrt(t170284);
                double t170322 = 1.0/omega;
                double t170323 = pow(rho_b[index],1.0/3.0);
                double t170324 = t170321*t170322*t170323*(3.74176054803257E14/7.0368744177664E13);
                double t170325 = erf(t170324);
                double t170326 = t170325*(3.991211251234741E15/2.251799813685248E15);
                double t170327 = t170326-omega*t170320*t170155*t170289*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_bb_[index] = (rho_b[index]*t170237+rho_a[index]*(t170224-t170150*t170153*(t170224-c0f*log((t170154* \
                   (1.0/2.0))/(b1f*t170132+b3f*t170133+b2f*c*t170130+b4f*t170134*t170135)+1.0)*(a1f*c*t170130+1.0)*2.0) \
                   )-t170172*(t170189-t170200*t170153*t170194*t170195*(t170189-c0f*log((t170154*(1.0/2.0))/(b1f*t170175+ \
                   b3f*t170176+b2f*c*t170173+b4f*t170134*t170177)+1.0)*(a1f*c*t170173+1.0)*2.0)+(Aa*t170200*t170153*log((1.0/ \
                   2.0)/(Aa*(b1a*t170175+b3a*t170176+b2a*c*t170173+b4a*t170134*t170177))+1.0)*(t170194*t170195-1.0)*(a1a* \
                   c*t170173+1.0)*2.0)/d2fz0))*((ccab1*gcab*t170201*(1.0/2.0))/t170207-ccab4*t170210*t170211*1.0/(t170223* \
                   t170223)*(gcab*t170201*2.0+t170201*t170205*t170208*6.0+gcab*t170201*t170208*t170209*6.0+t170201*t170210* \
                   t170205*t170209*2.0)-ccab2*1.0/(t170214*t170214)*t170208*t170209*(gcab*t170201+t170201*t170205*t170208) \
                   +(ccab2*t170201*t170205*t170208)/t170214-ccab1*t170201*t170205*1.0/(t170207*t170207)*t170208*(1.0/ \
                   2.0)+(ccab3*gcab*t170201*t170208*t170209*(3.0/2.0))/t170218+(ccab4*t170201*t170210*t170205*t170209* \
                   2.0)/t170223-ccab3*gcab*t170205*t170208*t170209*1.0/(t170218*t170218)*(gcab*t170201*(3.0/2.0)+t170201* \
                   t170205*t170208*3.0+gcab*t170201*t170208*t170209*(3.0/2.0)))-rho_b[index]*t170237*((ccaa1*gcaa*t170201) \
                   /t170245-ccaa1*gamma_bb[index]*t170242*1.0/(t170245*t170245)*t170239+(ccaa2*gamma_bb[index]*t170242* \
                   t170239*2.0)/t170258-ccaa2*t170242*t170238*t170239*1.0/(t170258*t170258)*(gcaa*t170201*2.0+gamma_bb[index]* \
                   t170242*t170239*2.0)+(ccaa4*gamma_bb[index]*t170240*t170241*t170238*4.0)/t170255+(ccaa3*gcaa*t170243* \
                   t170238*t170239*3.0)/t170249-ccaa4*t170240*t170241*t170250*1.0/(t170255*t170255)*(gcaa*t170201*4.0+ \
                   gamma_bb[index]*t170242*t170239*1.2E1+gamma_bb[index]*t170240*t170241*t170238*4.0+gcaa*t170243*t170238* \
                   t170239*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t170243*t170238*t170239*1.0/(t170249*t170249)*(gcaa*t170201* \
                   3.0+gamma_bb[index]*t170242*t170239*6.0+gcaa*t170243*t170238*t170239*3.0))-c0*t170290*(omega*t170155* \
                   t170327*t170289*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*gx*t170201*t170271-cx1*gamma_bb[index]* \
                   t170242*t170292*t170259+cx2*gamma_bb[index]*t170242*t170282*t170259*2.0-cx2*t170242*t170306*t170307* \
                   t170238*t170259-cx4*t170302*t170303*t170241*t170250*t170260+cx4*gamma_bb[index]*t170241*t170260*t170238* \
                   t170267*4.0+cx3*gx*t170243*t170238*t170259*t170277*3.0-cx3*gamma_bb[index]*gx*t170243*t170238*t170259* \
                   t170296*t170297)+c0*t170290*(omega*t170155*t170289*(omega*t170155*t170289*(t170314*t170287*t170288* \
                   (1.0/2.0)+t170314*t170308*t170309*t170159*(2.475880078570761E27/1.4000771998813E29)-t170314*1.0/(t170284* \
                   t170284)*t170285*t170286*t170288*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t170320*t170321*t170314*t170155*(3.5184372088832E13/3.74176054803257E14)+1.0/sqrt(3.141592653589793) \
                   *t170322*t170314*t170323*1.0/pow(t170284,3.0/2.0)*t170288*(1.493415679873386E30/1.584563250285287E29) \
                   )*(2.81474976710656E14/1.122528164409771E15)-omega*t170321*t170314*t170155*t170327*(1.40737488355328E14/ \
                   1.122528164409771E15))*(cx0+cx1*gamma_bb[index]*gx*t170201*t170271+cx2*t170242*t170282*t170238*t170259+ \
                   cx4*t170241*t170250*t170260*t170267+cx3*gamma_bb[index]*gx*t170243*t170238*t170259*t170277);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t173801 = 1.0/pow(rho_b[index],1.0/3.0);
                double t173802 = c*t173801;
                double t173803 = sqrt(t173802);
                double t173804 = pow(t173802,3.0/2.0);
                double t173805 = c*c;
                double t173806 = 1.0/pow(rho_b[index],2.0/3.0);
                double t173807 = 1.0/c0p;
                double t173808 = b1p*t173803;
                double t173809 = b3p*t173804;
                double t173810 = b4p*t173805*t173806;
                double t173811 = b2p*c*t173801;
                double t173812 = t173810+t173811+t173808+t173809;
                double t173813 = 1.0/t173812;
                double t173814 = t173813*t173807*(1.0/2.0);
                double t173815 = t173814+1.0;
                double t173816 = log(t173815);
                double t173817 = a1p*c*t173801;
                double t173818 = t173817+1.0;
                double t173819 = 1.0/pow(rho_b[index],8.0/3.0);
                double t173820 = gamma_bb[index]*gamma_bb[index];
                double t173821 = gcaa*gcaa;
                double t173822 = t173821*t173821;
                double t173823 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t173824 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t173825 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t173826 = gamma_bb[index]*gcaa*t173819;
                double t173827 = t173826+1.0;
                double t173828 = gamma_bb[index]*gcaa*t173819*3.0;
                double t173829 = gamma_bb[index]*gcaa*t173820*t173821*t173825;
                double t173830 = t173820*t173821*t173824*3.0;
                double t173831 = t173830+t173828+t173829+1.0;
                double t173832 = t173820*t173820;
                double t173833 = gamma_bb[index]*gcaa*t173819*4.0;
                double t173834 = gamma_bb[index]*gcaa*t173820*t173821*t173825*4.0;
                double t173835 = t173820*t173821*t173824*6.0;
                double t173836 = t173822*t173823*t173832;
                double t173837 = t173833+t173834+t173835+t173836+1.0;
                double t173838 = gamma_bb[index]*gcaa*t173819*2.0;
                double t173839 = t173820*t173821*t173824;
                double t173840 = t173838+t173839+1.0;
                double t173841 = gx*gx;
                double t173842 = t173841*t173841;
                double t173843 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t173844 = gamma_bb[index]*gx*t173819*4.0;
                double t173845 = gamma_bb[index]*gx*t173820*t173841*t173825*4.0;
                double t173846 = t173820*t173841*t173824*6.0;
                double t173847 = t173823*t173832*t173842;
                double t173848 = t173844+t173845+t173846+t173847+1.0;
                double t173849 = 1.0/t173848;
                double t173850 = cx4*t173823*t173832*t173842*t173849*(4.190715359480463E15/2.251799813685248E15);
                double t173851 = gamma_bb[index]*gx*t173819;
                double t173852 = t173851+1.0;
                double t173853 = 1.0/t173852;
                double t173854 = cx1*gamma_bb[index]*gx*t173853*t173819*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173855 = gamma_bb[index]*gx*t173819*3.0;
                double t173856 = gamma_bb[index]*gx*t173820*t173841*t173825;
                double t173857 = t173820*t173841*t173824*3.0;
                double t173858 = t173855+t173856+t173857+1.0;
                double t173859 = 1.0/t173858;
                double t173860 = cx3*gamma_bb[index]*gx*t173820*t173841*t173825*t173859*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173861 = gamma_bb[index]*gx*t173819*2.0;
                double t173862 = t173820*t173841*t173824;
                double t173863 = t173861+t173862+1.0;
                double t173864 = 1.0/t173863;
                double t173865 = cx2*t173820*t173841*t173824*t173864*(4.190715359480463E15/2.251799813685248E15);
                double t173866 = t173850+t173860+t173843+t173854+t173865;
                double t173867 = 1.0/(omega*omega);
                double t173868 = pow(rho_b[index],2.0/3.0);
                double t173869 = 1.0/t173866;
                double t173873 = t173867*t173868*t173869*(1.4000771998813E29/4.951760157141521E27);
                double t173870 = exp(-t173873);
                double t173871 = sqrt(t173866);
                double t173872 = pow(rho_b[index],4.0/3.0);
                double t173874 = 1.0/(t173852*t173852);
                double t173875 = gx*t173819*3.0;
                double t173876 = gamma_bb[index]*t173841*t173824*6.0;
                double t173877 = gx*t173820*t173841*t173825*3.0;
                double t173878 = t173875+t173876+t173877;
                double t173879 = 1.0/(t173858*t173858);
                double t173880 = gx*t173819*4.0;
                double t173881 = gamma_bb[index]*t173841*t173824*1.2E1;
                double t173882 = gx*t173820*t173841*t173825*1.2E1;
                double t173883 = gamma_bb[index]*t173820*t173823*t173842*4.0;
                double t173884 = t173880+t173881+t173882+t173883;
                double t173885 = 1.0/(t173848*t173848);
                double t173886 = gx*t173819*2.0;
                double t173887 = gamma_bb[index]*t173841*t173824*2.0;
                double t173888 = t173886+t173887;
                double t173889 = 1.0/(t173863*t173863);
                double t173890 = omega*omega;
                double t173891 = t173870-1.0;
                double t173892 = cx1*gx*t173853*t173819*(4.190715359480463E15/2.251799813685248E15);
                double t173893 = cx4*gamma_bb[index]*t173820*t173823*t173842*t173849*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t173894 = cx2*gamma_bb[index]*t173841*t173824*t173864*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173895 = cx3*gx*t173820*t173841*t173825*t173859*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t173897 = cx1*gamma_bb[index]*t173841*t173824*t173874*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173898 = cx3*gamma_bb[index]*gx*t173820*t173841*t173825*t173878*t173879*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t173899 = cx4*t173823*t173832*t173842*t173884*t173885*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173900 = cx2*t173820*t173841*t173824*t173888*t173889*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173896 = -t173900+t173892+t173893+t173894+t173895-t173897-t173898-t173899;
                double t173901 = t173806*t173890*t173891*t173866*(2.475880078570761E27/1.4000771998813E29);
                double t173902 = t173901-t173870+3.0/2.0;
                double t173903 = 1.0/sqrt(t173866);
                double t173904 = 1.0/omega;
                double t173905 = pow(rho_b[index],1.0/3.0);
                double t173906 = t173903*t173904*t173905*(3.74176054803257E14/7.0368744177664E13);
                double t173907 = erf(t173906);
                double t173908 = t173907*(3.991211251234741E15/2.251799813685248E15);
                double t173909 = t173908-omega*t173801*t173902*t173871*(7.0368744177664E13/3.74176054803257E14);
                v_gamma_bb_[index] = -rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f*t173803+ \
                   b3f*t173804+b2f*c*t173801+b4f*t173805*t173806))+1.0)*(a1f*c*t173801+1.0)*2.0-c0p*t173816*t173818*2.0) \
                   )/(two_13*2.0-2.0)+c0p*t173816*t173818*2.0)*((ccaa1*gcaa*t173819)/t173827+(ccaa2*gamma_bb[index]*t173821* \
                   t173824*2.0)/t173840-ccaa1*gamma_bb[index]*t173821*t173824*1.0/(t173827*t173827)-ccaa2*t173820*t173821* \
                   1.0/(t173840*t173840)*t173824*(gcaa*t173819*2.0+gamma_bb[index]*t173821*t173824*2.0)+(ccaa4*gamma_bb[index]* \
                   t173820*t173822*t173823*4.0)/t173837+(ccaa3*gcaa*t173820*t173821*t173825*3.0)/t173831-ccaa4*t173822* \
                   t173823*t173832*1.0/(t173837*t173837)*(gcaa*t173819*4.0+gamma_bb[index]*t173821*t173824*1.2E1+gamma_bb[index]* \
                   t173820*t173822*t173823*4.0+gcaa*t173820*t173821*t173825*1.2E1)-ccaa3*gamma_bb[index]*gcaa*t173820* \
                   t173821*1.0/(t173831*t173831)*t173825*(gcaa*t173819*3.0+gamma_bb[index]*t173821*t173824*6.0+gcaa*t173820* \
                   t173821*t173825*3.0))-c0*t173872*(omega*t173801*t173871*t173909*(2.81474976710656E14/1.122528164409771E15) \
                   -1.0)*(cx1*gx*t173853*t173819-cx1*gamma_bb[index]*t173841*t173824*t173874+cx2*gamma_bb[index]*t173841* \
                   t173824*t173864*2.0-cx2*t173820*t173841*t173824*t173888*t173889-cx4*t173823*t173832*t173842*t173884* \
                   t173885+cx4*gamma_bb[index]*t173820*t173823*t173842*t173849*4.0+cx3*gx*t173820*t173841*t173825*t173859* \
                   3.0-cx3*gamma_bb[index]*gx*t173820*t173841*t173825*t173878*t173879)+c0*t173872*(omega*t173801*t173871* \
                   (omega*t173801*t173871*(t173870*t173869*t173896*(1.0/2.0)+t173806*t173890*t173891*t173896*(2.475880078570761E27/ \
                   1.4000771998813E29)-t173870*1.0/(t173866*t173866)*t173867*t173868*t173896*(1.4000771998813E29/4.951760157141521E27) \
                   )*(7.0368744177664E13/3.74176054803257E14)+omega*t173801*t173902*t173903*t173896*(3.5184372088832E13/ \
                   3.74176054803257E14)+1.0/sqrt(3.141592653589793)*t173904*t173905*t173870*1.0/pow(t173866,3.0/2.0)* \
                   t173896*(1.493415679873386E30/1.584563250285287E29))*(2.81474976710656E14/1.122528164409771E15)-omega* \
                   t173801*t173903*t173909*t173896*(1.40737488355328E14/1.122528164409771E15))*(cx0+cx1*gamma_bb[index]* \
                   gx*t173853*t173819+cx2*t173820*t173841*t173824*t173864+cx4*t173823*t173832*t173842*t173849+cx3*gamma_bb[index]* \
                   gx*t173820*t173841*t173825*t173859);
            } else {
                v_gamma_bb_[index] = 0.0;
            } 
        }
        if (is_meta_) {

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_[index] = 0.0;
            } else {
                v_tau_a_[index] = 0.0;
            } 

            //V_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_[index] = 0.0;
            } else {
                v_tau_b_[index] = 0.0;
            } 
        }
    }
    //Second Partials
    for (int index = 0; index < ntrue && deriv_ >= 2; index++) {

        //V_rho_a_rho_a
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t170331 = rho_a[index]+rho_b[index];
            double t170332 = 1.0/pow(t170331,1.0/3.0);
            double t170333 = c*t170332;
            double t170334 = sqrt(t170333);
            double t170335 = b1p*t170334;
            double t170336 = pow(t170333,3.0/2.0);
            double t170337 = b3p*t170336;
            double t170338 = c*c;
            double t170339 = 1.0/pow(t170331,2.0/3.0);
            double t170340 = b4p*t170338*t170339;
            double t170341 = b2p*c*t170332;
            double t170342 = t170340+t170341+t170335+t170337;
            double t170343 = 1.0/pow(t170331,4.0/3.0);
            double t170344 = 1.0/c0p;
            double t170345 = 1.0/t170342;
            double t170346 = t170344*t170345*(1.0/2.0);
            double t170347 = t170346+1.0;
            double t170348 = a1p*c*t170332;
            double t170349 = t170348+1.0;
            double t170350 = rho_a[index]-rho_b[index];
            double t170351 = t170350*t170350;
            double t170352 = 1.0/t170331;
            double t170353 = t170350*t170352;
            double t170354 = two_13*2.0;
            double t170355 = t170354-2.0;
            double t170356 = 1.0/t170355;
            double t170357 = 1.0/c0f;
            double t170358 = b1f*t170334;
            double t170359 = b3f*t170336;
            double t170360 = b4f*t170338*t170339;
            double t170361 = b2f*c*t170332;
            double t170362 = t170360+t170361+t170358+t170359;
            double t170363 = 1.0/t170362;
            double t170364 = t170363*t170357*(1.0/2.0);
            double t170365 = t170364+1.0;
            double t170366 = log(t170365);
            double t170367 = a1f*c*t170332;
            double t170368 = t170367+1.0;
            double t170369 = log(t170347);
            double t170379 = c0f*t170366*t170368*2.0;
            double t170380 = c0p*t170349*t170369*2.0;
            double t170370 = -t170380+t170379;
            double t170371 = t170353+1.0;
            double t170372 = pow(t170371,4.0/3.0);
            double t170373 = -t170353+1.0;
            double t170374 = pow(t170373,4.0/3.0);
            double t170375 = t170372+t170374-2.0;
            double t170376 = 1.0/(t170331*t170331);
            double t170407 = t170350*t170376;
            double t170377 = t170352-t170407;
            double t170378 = 1.0/(t170331*t170331*t170331*t170331);
            double t170381 = t170351*t170351;
            double t170382 = 1.0/pow(t170331,5.0/3.0);
            double t170383 = 1.0/sqrt(t170333);
            double t170384 = 1.0/t170347;
            double t170385 = 1.0/(t170342*t170342);
            double t170386 = b4p*t170382*t170338*(2.0/3.0);
            double t170387 = b2p*c*t170343*(1.0/3.0);
            double t170388 = b1p*c*t170343*t170383*(1.0/6.0);
            double t170389 = b3p*c*t170334*t170343*(1.0/2.0);
            double t170390 = t170386+t170387+t170388+t170389;
            double t170391 = t170390*t170384*t170349*t170385;
            double t170392 = 1.0/(t170331*t170331*t170331*t170331*t170331);
            double t170393 = 1.0/d2fz0;
            double t170394 = 1.0/Aa;
            double t170395 = b1a*t170334;
            double t170396 = b3a*t170336;
            double t170397 = b4a*t170338*t170339;
            double t170398 = b2a*c*t170332;
            double t170399 = t170395+t170396+t170397+t170398;
            double t170400 = 1.0/t170399;
            double t170401 = t170400*t170394*(1.0/2.0);
            double t170402 = t170401+1.0;
            double t170403 = log(t170402);
            double t170404 = a1a*c*t170332;
            double t170405 = t170404+1.0;
            double t170406 = pow(t170371,1.0/3.0);
            double t170408 = t170406*t170377*(4.0/3.0);
            double t170409 = pow(t170373,1.0/3.0);
            double t170484 = t170409*t170377*(4.0/3.0);
            double t170410 = t170408-t170484;
            double t170411 = t170381*t170378;
            double t170412 = t170411-1.0;
            double t170413 = 1.0/pow(rho_a[index],1.0/3.0);
            double t170414 = c*t170413;
            double t170415 = sqrt(t170414);
            double t170416 = b1f*t170415;
            double t170417 = pow(t170414,3.0/2.0);
            double t170418 = b3f*t170417;
            double t170419 = 1.0/pow(rho_a[index],2.0/3.0);
            double t170420 = b4f*t170338*t170419;
            double t170421 = b2f*c*t170413;
            double t170422 = t170420+t170421+t170416+t170418;
            double t170423 = 1.0/pow(rho_a[index],4.0/3.0);
            double t170424 = b1p*t170415;
            double t170425 = b3p*t170417;
            double t170426 = b4p*t170338*t170419;
            double t170427 = b2p*c*t170413;
            double t170428 = t170424+t170425+t170426+t170427;
            double t170429 = 1.0/pow(rho_a[index],5.0/3.0);
            double t170430 = 1.0/sqrt(t170414);
            double t170431 = 1.0/t170422;
            double t170432 = t170431*t170357*(1.0/2.0);
            double t170433 = t170432+1.0;
            double t170434 = 1.0/t170428;
            double t170435 = t170344*t170434*(1.0/2.0);
            double t170436 = t170435+1.0;
            double t170437 = a1p*c*t170413;
            double t170438 = t170437+1.0;
            double t170439 = 1.0/t170436;
            double t170440 = 1.0/(t170428*t170428);
            double t170441 = b4p*t170338*t170429*(2.0/3.0);
            double t170442 = b2p*c*t170423*(1.0/3.0);
            double t170443 = b1p*c*t170430*t170423*(1.0/6.0);
            double t170444 = b3p*c*t170423*t170415*(1.0/2.0);
            double t170445 = t170441+t170442+t170443+t170444;
            double t170446 = t170440*t170445*t170438*t170439;
            double t170447 = log(t170436);
            double t170448 = pow(2.0,1.0/3.0);
            double t170449 = t170448*2.0;
            double t170450 = t170449-2.0;
            double t170451 = log(t170433);
            double t170452 = a1f*c*t170413;
            double t170453 = t170452+1.0;
            double t170454 = gcab*gcab;
            double t170458 = 1.0/pow(rho_a[index],8.0/3.0);
            double t170459 = gamma_aa[index]*t170458*(1.0/2.0);
            double t170460 = 1.0/pow(rho_b[index],8.0/3.0);
            double t170461 = gamma_bb[index]*t170460*(1.0/2.0);
            double t170455 = t170461+t170459;
            double t170456 = t170455*t170455;
            double t170457 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t170462 = t170454*t170454;
            double t170463 = t170456*t170456;
            double t170464 = t170454*t170456*6.0;
            double t170465 = gcab*t170454*t170455*t170456*4.0;
            double t170466 = t170462*t170463;
            double t170467 = gcab*t170455*4.0;
            double t170468 = t170464+t170465+t170466+t170467+1.0;
            double t170469 = gcab*t170455;
            double t170470 = t170469+1.0;
            double t170471 = t170454*t170456;
            double t170472 = gcab*t170455*2.0;
            double t170473 = t170471+t170472+1.0;
            double t170474 = t170454*t170456*3.0;
            double t170475 = gcab*t170454*t170455*t170456;
            double t170476 = gcab*t170455*3.0;
            double t170477 = t170474+t170475+t170476+1.0;
            double t170478 = 1.0/t170473;
            double t170479 = 1.0/t170477;
            double t170480 = 1.0/t170470;
            double t170481 = 1.0/t170468;
            double t170482 = 1.0/pow(t170331,7.0/3.0);
            double t170483 = 1.0/pow(t170331,8.0/3.0);
            double t170485 = 1.0/t170365;
            double t170486 = 1.0/(t170362*t170362);
            double t170487 = b4f*t170382*t170338*(2.0/3.0);
            double t170488 = b2f*c*t170343*(1.0/3.0);
            double t170489 = b1f*c*t170343*t170383*(1.0/6.0);
            double t170490 = b3f*c*t170334*t170343*(1.0/2.0);
            double t170491 = t170490+t170487+t170488+t170489;
            double t170492 = a1f*c*c0f*t170343*t170366*(2.0/3.0);
            double t170494 = t170491*t170368*t170485*t170486;
            double t170495 = a1p*c*c0p*t170343*t170369*(2.0/3.0);
            double t170493 = t170391+t170492-t170494-t170495;
            double t170496 = t170390*t170390;
            double t170497 = 1.0/pow(t170333,3.0/2.0);
            double t170498 = b4p*t170338*t170483*(1.0E1/9.0);
            double t170499 = b2p*c*t170482*(4.0/9.0);
            double t170500 = b1p*c*t170383*t170482*(2.0/9.0);
            double t170501 = b3p*c*t170334*t170482*(2.0/3.0);
            double t170502 = b3p*t170338*t170383*t170483*(1.0/1.2E1);
            double t170503 = t170500+t170501+t170502+t170498+t170499-b1p*t170338*t170483*t170497*(1.0/3.6E1);
            double t170504 = 1.0/(t170342*t170342*t170342);
            double t170505 = t170504*t170384*t170349*t170496*2.0;
            double t170506 = t170491*t170491;
            double t170507 = 1.0/(t170347*t170347);
            double t170508 = 1.0/(t170342*t170342*t170342*t170342);
            double t170509 = t170376*2.0;
            double t170510 = 1.0/(t170331*t170331*t170331);
            double t170517 = t170510*t170350*2.0;
            double t170511 = -t170517+t170509;
            double t170512 = t170377*t170377;
            double t170513 = a1p*c*c0p*t170482*t170369*(8.0/9.0);
            double t170514 = 1.0/(t170331*t170331*t170331*t170331*t170331*t170331);
            double t170515 = t170381*t170392*4.0;
            double t170525 = t170350*t170351*t170378*4.0;
            double t170516 = t170515-t170525;
            double t170518 = t170511*t170409*(4.0/3.0);
            double t170519 = 1.0/pow(t170371,2.0/3.0);
            double t170520 = t170512*t170519*(4.0/9.0);
            double t170521 = 1.0/pow(t170373,2.0/3.0);
            double t170522 = t170512*t170521*(4.0/9.0);
            double t170523 = t170520+t170522+t170518-t170511*t170406*(4.0/3.0);
            double t170524 = 1.0/t170402;
            double t170526 = 1.0/(t170399*t170399);
            double t170527 = b4a*t170382*t170338*(2.0/3.0);
            double t170528 = b2a*c*t170343*(1.0/3.0);
            double t170529 = b1a*c*t170343*t170383*(1.0/6.0);
            double t170530 = b3a*c*t170334*t170343*(1.0/2.0);
            double t170531 = t170530+t170527+t170528+t170529;
            double t170532 = t170531*t170531;
            double t170533 = t170503*t170384*t170349*t170385;
            double t170534 = 1.0/t170433;
            double t170535 = b4f*t170338*t170429*(2.0/3.0);
            double t170536 = b2f*c*t170423*(1.0/3.0);
            double t170537 = b1f*c*t170430*t170423*(1.0/6.0);
            double t170538 = b3f*c*t170423*t170415*(1.0/2.0);
            double t170539 = t170535+t170536+t170537+t170538;
            double t170540 = 1.0/(t170422*t170422);
            double t170541 = 1.0/pow(rho_a[index],7.0/3.0);
            double t170542 = 1.0/pow(t170414,3.0/2.0);
            double t170543 = t170539*t170539;
            double t170544 = t170445*t170445;
            double t170545 = 1.0/(t170428*t170428*t170428);
            double t170546 = t170544*t170545*t170438*t170439*2.0;
            double t170547 = b4p*t170338*t170458*(1.0E1/9.0);
            double t170548 = b2p*c*t170541*(4.0/9.0);
            double t170549 = b3p*t170430*t170338*t170458*(1.0/1.2E1);
            double t170550 = b1p*c*t170430*t170541*(2.0/9.0);
            double t170551 = b3p*c*t170415*t170541*(2.0/3.0);
            double t170667 = b1p*t170542*t170338*t170458*(1.0/3.6E1);
            double t170552 = t170550+t170551+t170547+t170548+t170549-t170667;
            double t170553 = 1.0/(t170436*t170436);
            double t170554 = 1.0/(t170428*t170428*t170428*t170428);
            double t170555 = a1p*c*c0p*t170541*t170447*(8.0/9.0);
            double t170556 = a1f*c*c0f*t170423*t170451*(2.0/3.0);
            double t170557 = a1p*c*c0p*t170423*t170447*(2.0/3.0);
            double t170558 = t170344*t170507*t170508*t170349*t170496*(1.0/2.0);
            double t170630 = t170540*t170453*t170534*t170539;
            double t170559 = -t170630+t170446+t170556-t170557;
            double t170560 = gamma_aa[index]*gamma_aa[index];
            double t170561 = gcaa*gcaa;
            double t170562 = t170560*t170560;
            double t170563 = t170561*t170561;
            double t170564 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t170565 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t170566 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t170567 = c0f*t170451*t170453*2.0;
            double t170569 = c0p*t170438*t170447*2.0;
            double t170568 = t170567-t170569;
            double t170570 = 1.0/pow(rho_b[index],1.0/3.0);
            double t170571 = c*t170570;
            double t170572 = sqrt(t170571);
            double t170573 = pow(t170571,3.0/2.0);
            double t170574 = 1.0/pow(rho_b[index],2.0/3.0);
            double t170575 = b1p*t170572;
            double t170576 = b3p*t170573;
            double t170577 = b4p*t170338*t170574;
            double t170578 = b2p*c*t170570;
            double t170579 = t170575+t170576+t170577+t170578;
            double t170580 = 1.0/t170579;
            double t170581 = t170344*t170580*(1.0/2.0);
            double t170582 = t170581+1.0;
            double t170583 = log(t170582);
            double t170584 = a1p*c*t170570;
            double t170585 = t170584+1.0;
            double t170586 = c0p*t170583*t170585*2.0;
            double t170587 = t170370*t170381*t170356*t170375*t170378;
            double t170588 = Aa*t170403*t170412*t170405*t170356*t170375*t170393*2.0;
            double t170589 = gamma_aa[index]*gcab*t170457*(1.6E1/3.0);
            double t170590 = gamma_aa[index]*gcab*t170454*t170456*t170457*1.6E1;
            double t170591 = gamma_aa[index]*t170462*t170455*t170456*t170457*(1.6E1/3.0);
            double t170592 = gamma_aa[index]*t170454*t170455*t170457*1.6E1;
            double t170593 = t170590+t170591+t170592+t170589;
            double t170594 = 1.0/(t170470*t170470);
            double t170595 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t170596 = gamma_aa[index]*gcab*t170457*(8.0/3.0);
            double t170597 = gamma_aa[index]*t170454*t170455*t170457*(8.0/3.0);
            double t170598 = t170596+t170597;
            double t170599 = 1.0/(t170477*t170477);
            double t170600 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t170601 = 1.0/(t170468*t170468);
            double t170602 = 1.0/(t170473*t170473);
            double t170603 = gamma_aa[index]*gcab*t170457*4.0;
            double t170604 = gamma_aa[index]*gcab*t170454*t170456*t170457*4.0;
            double t170605 = gamma_aa[index]*t170454*t170455*t170457*8.0;
            double t170606 = t170603+t170604+t170605;
            double t170607 = t170450*t170356*t170568;
            double t170608 = t170607+t170569;
            double t170609 = gamma_aa[index]*gcaa*t170458*4.0;
            double t170610 = gamma_aa[index]*gcaa*t170560*t170561*t170565*4.0;
            double t170611 = t170560*t170561*t170566*6.0;
            double t170612 = t170562*t170563*t170564;
            double t170613 = t170610+t170611+t170612+t170609+1.0;
            double t170614 = 1.0/t170613;
            double t170615 = gamma_aa[index]*gcaa*t170458;
            double t170616 = t170615+1.0;
            double t170617 = 1.0/t170616;
            double t170618 = gamma_aa[index]*gcaa*t170458*3.0;
            double t170619 = gamma_aa[index]*gcaa*t170560*t170561*t170565;
            double t170620 = t170560*t170561*t170566*3.0;
            double t170621 = t170620+t170618+t170619+1.0;
            double t170622 = 1.0/t170621;
            double t170623 = gamma_aa[index]*gcaa*t170458*2.0;
            double t170624 = t170560*t170561*t170566;
            double t170625 = t170623+t170624+1.0;
            double t170626 = 1.0/t170625;
            double t170627 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t170628 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t170629 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t170631 = ccaa4*t170614*t170562*t170563*t170629*(3.2E1/3.0);
            double t170632 = ccaa1*gamma_aa[index]*gcaa*t170617*t170457*(8.0/3.0);
            double t170633 = ccaa3*gamma_aa[index]*gcaa*t170622*t170560*t170561*t170628*8.0;
            double t170634 = ccaa2*t170560*t170561*t170626*t170627*(1.6E1/3.0);
            double t170635 = 1.0/(t170616*t170616);
            double t170636 = gamma_aa[index]*gcaa*t170457*8.0;
            double t170637 = gamma_aa[index]*gcaa*t170560*t170561*t170628*8.0;
            double t170638 = t170560*t170561*t170627*1.6E1;
            double t170639 = t170636+t170637+t170638;
            double t170640 = 1.0/(t170621*t170621);
            double t170641 = gamma_aa[index]*gcaa*t170457*(3.2E1/3.0);
            double t170642 = gamma_aa[index]*gcaa*t170560*t170561*t170628*3.2E1;
            double t170643 = t170560*t170561*t170627*3.2E1;
            double t170644 = t170562*t170563*t170629*(3.2E1/3.0);
            double t170645 = t170641+t170642+t170643+t170644;
            double t170646 = 1.0/(t170613*t170613);
            double t170647 = gamma_aa[index]*gcaa*t170457*(1.6E1/3.0);
            double t170648 = t170560*t170561*t170627*(1.6E1/3.0);
            double t170649 = t170647+t170648;
            double t170650 = 1.0/(t170625*t170625);
            double t170651 = t170631+t170632+t170633+t170634-ccaa1*t170560*t170561*t170635*t170627*(8.0/3.0)- \
               ccaa2*t170560*t170650*t170561*t170566*t170649-ccaa4*t170562*t170563*t170564*t170645*t170646-ccaa3* \
               gamma_aa[index]*gcaa*t170640*t170560*t170561*t170565*t170639;
            double t170652 = 1.0/pow(rho_a[index],1.0E1);
            double t170653 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t170654 = ccaa4*t170614*t170562*t170563*t170564;
            double t170655 = ccaa1*gamma_aa[index]*gcaa*t170617*t170458;
            double t170656 = ccaa3*gamma_aa[index]*gcaa*t170622*t170560*t170561*t170565;
            double t170657 = ccaa2*t170560*t170561*t170626*t170566;
            double t170658 = ccaa0+t170654+t170655+t170656+t170657;
            double t170659 = 1.0/(t170422*t170422*t170422);
            double t170660 = b4f*t170338*t170458*(1.0E1/9.0);
            double t170661 = b2f*c*t170541*(4.0/9.0);
            double t170662 = b3f*t170430*t170338*t170458*(1.0/1.2E1);
            double t170663 = b1f*c*t170430*t170541*(2.0/9.0);
            double t170664 = b3f*c*t170415*t170541*(2.0/3.0);
            double t170665 = t170660+t170661+t170662+t170663+t170664-b1f*t170542*t170338*t170458*(1.0/3.6E1);
            double t170666 = t170540*t170453*t170534*t170665;
            double t170668 = t170440*t170552*t170438*t170439;
            double t170669 = 1.0/(t170433*t170433);
            double t170670 = 1.0/(t170422*t170422*t170422*t170422);
            double t170671 = t170453*t170543*t170670*t170357*t170669*(1.0/2.0);
            double t170672 = t170344*t170544*t170553*t170554*t170438*(1.0/2.0);
            double t170673 = a1f*c*t170423*t170540*t170534*t170539*(2.0/3.0);
            double t170674 = a1p*c*t170440*t170423*t170445*t170439*(2.0/3.0);
            double t170675 = gx*gx;
            double t170676 = t170675*t170675;
            double t170677 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t170678 = gamma_aa[index]*gx*t170458*4.0;
            double t170679 = gamma_aa[index]*gx*t170560*t170565*t170675*4.0;
            double t170680 = t170560*t170566*t170675*6.0;
            double t170681 = t170562*t170564*t170676;
            double t170682 = t170680+t170681+t170678+t170679+1.0;
            double t170683 = 1.0/t170682;
            double t170684 = cx4*t170562*t170564*t170683*t170676*(4.190715359480463E15/2.251799813685248E15);
            double t170685 = gamma_aa[index]*gx*t170458;
            double t170686 = t170685+1.0;
            double t170687 = 1.0/t170686;
            double t170688 = cx1*gamma_aa[index]*gx*t170458*t170687*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t170689 = gamma_aa[index]*gx*t170458*3.0;
            double t170690 = gamma_aa[index]*gx*t170560*t170565*t170675;
            double t170691 = t170560*t170566*t170675*3.0;
            double t170692 = t170690+t170691+t170689+1.0;
            double t170693 = 1.0/t170692;
            double t170694 = cx3*gamma_aa[index]*gx*t170560*t170565*t170675*t170693*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t170695 = gamma_aa[index]*gx*t170458*2.0;
            double t170696 = t170560*t170566*t170675;
            double t170697 = t170695+t170696+1.0;
            double t170698 = 1.0/t170697;
            double t170699 = cx2*t170560*t170566*t170675*t170698*(4.190715359480463E15/2.251799813685248E15);
            double t170700 = t170684+t170694+t170677+t170688+t170699;
            double t170701 = 1.0/(omega*omega);
            double t170702 = pow(rho_a[index],2.0/3.0);
            double t170703 = 1.0/t170700;
            double t170722 = t170701*t170702*t170703*(1.4000771998813E29/4.951760157141521E27);
            double t170704 = exp(-t170722);
            double t170705 = sqrt(t170700);
            double t170713 = gamma_aa[index]*gx*t170457*(3.2E1/3.0);
            double t170714 = gamma_aa[index]*gx*t170560*t170628*t170675*3.2E1;
            double t170715 = t170560*t170627*t170675*3.2E1;
            double t170716 = t170562*t170629*t170676*(3.2E1/3.0);
            double t170706 = t170713+t170714+t170715+t170716;
            double t170718 = gamma_aa[index]*gx*t170457*(1.6E1/3.0);
            double t170719 = t170560*t170627*t170675*(1.6E1/3.0);
            double t170707 = t170718+t170719;
            double t170708 = 1.0/(t170692*t170692);
            double t170709 = gamma_aa[index]*gx*t170457*8.0;
            double t170710 = gamma_aa[index]*gx*t170560*t170628*t170675*8.0;
            double t170711 = t170560*t170627*t170675*1.6E1;
            double t170712 = t170710+t170711+t170709;
            double t170717 = 1.0/(t170682*t170682);
            double t170720 = 1.0/(t170697*t170697);
            double t170721 = pow(rho_a[index],1.0/3.0);
            double t170723 = 1.0/omega;
            double t170724 = 1.0/sqrt(t170700);
            double t170725 = 1.0/(t170686*t170686);
            double t170726 = omega*omega;
            double t170727 = t170704-1.0;
            double t170728 = t170700*t170419*t170726*t170727*(2.475880078570761E27/1.4000771998813E29);
            double t170729 = -t170704+t170728+3.0/2.0;
            double t170730 = cx4*t170562*t170629*t170683*t170676*(1.396905119826821E15/7.0368744177664E13);
            double t170731 = cx1*gamma_aa[index]*gx*t170457*t170687*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t170732 = cx3*gamma_aa[index]*gx*t170560*t170628*t170675*t170693*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t170733 = cx2*t170560*t170627*t170675*t170698*(1.396905119826821E15/1.40737488355328E14);
            double t170735 = cx1*t170560*t170725*t170627*t170675*(1.396905119826821E15/2.81474976710656E14);
            double t170736 = cx3*gamma_aa[index]*gx*t170712*t170560*t170708*t170565*t170675*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t170737 = cx4*t170562*t170706*t170564*t170717*t170676*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t170738 = cx2*t170720*t170560*t170707*t170566*t170675*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t170734 = t170730+t170731+t170732+t170733-t170735-t170736-t170737-t170738;
            double t170739 = t170413*t170701*t170703*(1.4000771998813E29/7.427640235712282E27);
            double t170740 = 1.0/(t170700*t170700);
            double t170741 = t170701*t170702*t170740*t170734*(1.4000771998813E29/4.951760157141521E27);
            double t170742 = t170741+t170739;
            double t170743 = t170721*t170723*t170724*(3.74176054803257E14/7.0368744177664E13);
            double t170744 = erf(t170743);
            double t170745 = t170744*(3.991211251234741E15/2.251799813685248E15);
            double t170747 = omega*t170413*t170705*t170729*(7.0368744177664E13/3.74176054803257E14);
            double t170746 = t170745-t170747;
            double t170748 = omega*t170413*t170705*t170746*(2.81474976710656E14/1.122528164409771E15);
            double t170749 = t170748-1.0;
            double t170750 = cx4*t170562*t170564*t170683*t170676;
            double t170751 = cx1*gamma_aa[index]*gx*t170458*t170687;
            double t170752 = cx3*gamma_aa[index]*gx*t170560*t170565*t170675*t170693;
            double t170753 = cx2*t170560*t170566*t170675*t170698;
            double t170754 = cx0+t170750+t170751+t170752+t170753;
            double t170755 = pow(rho_a[index],4.0/3.0);
            double t170756 = 1.0/sqrt(3.141592653589793);
            double t170757 = t170723*t170724*t170419*(3.74176054803257E14/2.11106232532992E14);
            double t170758 = 1.0/pow(t170700,3.0/2.0);
            double t170759 = t170721*t170723*t170734*t170758*(3.74176054803257E14/1.40737488355328E14);
            double t170760 = t170757+t170759;
            double t170761 = t170704*t170760*t170756*(3.991211251234741E15/1.125899906842624E15);
            double t170762 = omega*t170423*t170705*t170729*(7.0368744177664E13/1.122528164409771E15);
            double t170763 = t170700*t170429*t170726*t170727*(4.951760157141521E27/4.2002315996439E29);
            double t170764 = t170419*t170734*t170726*t170727*(2.475880078570761E27/1.4000771998813E29);
            double t170765 = t170700*t170704*t170742*t170419*t170726*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t170789 = t170704*t170742;
            double t170766 = t170763+t170764+t170765-t170789;
            double t170767 = omega*t170413*t170705*t170766*(7.0368744177664E13/3.74176054803257E14);
            double t170768 = omega*t170413*t170724*t170734*t170729*(3.5184372088832E13/3.74176054803257E14);
            double t170769 = t170761+t170762+t170767+t170768;
            double t170770 = 1.0/(t170686*t170686*t170686);
            double t170771 = t170706*t170706;
            double t170772 = 1.0/(t170682*t170682*t170682);
            double t170773 = t170707*t170707;
            double t170774 = 1.0/(t170697*t170697*t170697);
            double t170775 = gamma_aa[index]*gx*t170600*(8.8E1/3.0);
            double t170776 = gamma_aa[index]*gx*t170560*t170652*t170675*7.2E1;
            double t170777 = t170560*t170675*t170595*(3.04E2/3.0);
            double t170778 = t170775+t170776+t170777;
            double t170779 = t170712*t170712;
            double t170780 = 1.0/(t170692*t170692*t170692);
            double t170781 = gamma_aa[index]*gx*t170600*(3.52E2/9.0);
            double t170782 = gamma_aa[index]*gx*t170560*t170652*t170675*2.88E2;
            double t170783 = t170560*t170675*t170595*(6.08E2/3.0);
            double t170784 = t170562*t170653*t170676*(1.12E3/9.0);
            double t170785 = t170781+t170782+t170783+t170784;
            double t170786 = gamma_aa[index]*gx*t170600*(1.76E2/9.0);
            double t170787 = t170560*t170675*t170595*(3.04E2/9.0);
            double t170788 = t170786+t170787;
            double t170790 = t170734*t170734;
            double t170791 = cx4*t170562*t170653*t170683*t170676*(4.889167919393874E16/2.11106232532992E14);
            double t170792 = cx1*gamma_aa[index]*gx*t170600*t170687*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t170793 = cx3*gamma_aa[index]*gx*t170560*t170652*t170675*t170693*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t170794 = cx2*t170560*t170675*t170595*t170698*(2.65411972767096E16/4.22212465065984E14);
            double t170795 = cx1*gamma_aa[index]*gx*t170560*t170652*t170770*t170675*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t170796 = cx4*t170562*t170564*t170771*t170772*t170676*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t170797 = cx2*t170560*t170566*t170773*t170675*t170774*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t170798 = cx3*gamma_aa[index]*gx*t170560*t170780*t170565*t170675*t170779*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t170800 = cx1*t170560*t170725*t170675*t170595*(1.257214607844139E16/2.81474976710656E14);
            double t170801 = cx3*gamma_aa[index]*gx*t170712*t170560*t170708*t170628*t170675*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t170802 = cx3*gamma_aa[index]*gx*t170560*t170708*t170565*t170675*t170778*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t170803 = cx4*t170562*t170706*t170717*t170629*t170676*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t170804 = cx4*t170562*t170564*t170717*t170676*t170785*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t170805 = cx2*t170720*t170560*t170707*t170627*t170675*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t170806 = cx2*t170720*t170560*t170566*t170675*t170788*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t170799 = -t170800-t170801-t170802-t170803-t170804-t170805-t170806+t170791+t170792+t170793+ \
               t170794+t170795+t170796+t170797+t170798;
            double t170807 = t170701*t170423*t170703*(1.4000771998813E29/2.228292070713684E28);
            double t170808 = 1.0/(t170700*t170700*t170700);
            double t170809 = t170701*t170702*t170740*t170799*(1.4000771998813E29/4.951760157141521E27);
            double t170810 = t170807+t170809-t170413*t170701*t170740*t170734*(1.4000771998813E29/3.713820117856141E27) \
               -t170701*t170702*t170790*t170808*(1.4000771998813E29/2.475880078570761E27);
            double t170811 = t170742*t170742;
            double t170812 = omega*t170423*t170705*t170746*(2.81474976710656E14/3.367584493229313E15);
            double t170813 = omega*t170413*t170724*t170734*t170746*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t170814 = t170812+t170813-omega*t170413*t170705*t170769*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t170815 = cx4*t170562*t170629*t170683*t170676*(3.2E1/3.0);
            double t170816 = cx1*gamma_aa[index]*gx*t170457*t170687*(8.0/3.0);
            double t170817 = cx3*gamma_aa[index]*gx*t170560*t170628*t170675*t170693*8.0;
            double t170818 = cx2*t170560*t170627*t170675*t170698*(1.6E1/3.0);
            double t170819 = t170815+t170816+t170817+t170818-cx1*t170560*t170725*t170627*t170675*(8.0/3.0)-cx2* \
               t170720*t170560*t170707*t170566*t170675-cx4*t170562*t170706*t170564*t170717*t170676-cx3*gamma_aa[index]* \
               gx*t170712*t170560*t170708*t170565*t170675;
            v_rho_a_rho_a_[index] = (rho_a[index]*t170608+rho_b[index]*(t170586-t170450*t170356*(t170586-c0f* \
               log((t170357*(1.0/2.0))/(b1f*t170572+b3f*t170573+b2f*c*t170570+b4f*t170338*t170574)+1.0)*(a1f*c*t170570+ \
               1.0)*2.0))-t170331*(t170380+t170587+t170588))*(-ccab2*t170602*t170454*t170456*(gamma_aa[index]*gcab* \
               t170600*(8.8E1/9.0)+t170560*t170454*t170595*(3.2E1/9.0)+gamma_aa[index]*t170600*t170454*t170455*(8.8E1/ \
               9.0))+ccab4*t170462*t170463*(t170593*t170593)*1.0/(t170468*t170468*t170468)*2.0+ccab2*t170454*1.0/ \
               (t170473*t170473*t170473)*t170456*(t170598*t170598)*2.0+ccab1*gamma_aa[index]*gcab*t170600*t170480* \
               (4.4E1/9.0)-ccab1*t170560*t170454*t170594*t170595*(3.2E1/9.0)+ccab2*t170560*t170454*t170478*t170595* \
               (3.2E1/9.0)-ccab4*t170601*t170462*t170463*(gamma_aa[index]*gcab*t170600*(1.76E2/9.0)+t170560*t170454* \
               t170595*(6.4E1/3.0)+gamma_aa[index]*t170600*t170454*t170455*(1.76E2/3.0)+t170560*t170462*t170456*t170595* \
               (6.4E1/3.0)+gamma_aa[index]*gcab*t170600*t170454*t170456*(1.76E2/3.0)+gamma_aa[index]*t170600*t170462* \
               t170455*t170456*(1.76E2/9.0)+gcab*t170560*t170454*t170455*t170595*(1.28E2/3.0))+ccab4*t170560*t170462* \
               t170481*t170456*t170595*(6.4E1/3.0)-ccab1*gamma_aa[index]*t170600*t170454*t170455*t170594*(4.4E1/9.0) \
               +ccab2*gamma_aa[index]*t170600*t170454*t170455*t170478*(8.8E1/9.0)+ccab3*gcab*(t170606*t170606)*t170454* \
               t170455*t170456*1.0/(t170477*t170477*t170477)*2.0+ccab3*gamma_aa[index]*gcab*t170600*t170454*t170456* \
               t170479*(4.4E1/3.0)+ccab4*gamma_aa[index]*t170600*t170462*t170481*t170455*t170456*(1.76E2/9.0)-ccab2* \
               gamma_aa[index]*t170602*t170454*t170455*t170457*t170598*(1.6E1/3.0)+ccab3*gcab*t170560*t170454*t170455* \
               t170595*t170479*(3.2E1/3.0)+ccab1*gcab*1.0/(t170470*t170470*t170470)*t170560*t170454*t170455*t170595* \
               (3.2E1/9.0)-ccab3*gcab*t170454*t170455*t170456*t170599*(gamma_aa[index]*gcab*t170600*(4.4E1/3.0)+t170560* \
               t170454*t170595*(3.2E1/3.0)+gamma_aa[index]*t170600*t170454*t170455*(8.8E1/3.0)+gamma_aa[index]*gcab* \
               t170600*t170454*t170456*(4.4E1/3.0)+gcab*t170560*t170454*t170455*t170595*(3.2E1/3.0))-ccab3*gamma_aa[index]* \
               gcab*t170606*t170454*t170456*t170457*t170599*8.0-ccab4*gamma_aa[index]*t170601*t170462*t170455*t170456* \
               t170457*t170593*(3.2E1/3.0))+t170658*(-t170446+t170557+t170450*t170356*t170559)*2.0+t170651*t170608* \
               2.0+(t170380+t170587+t170588+rho_a[index]*(-t170446+t170557+t170450*t170356*(t170446+t170556-t170540* \
               t170453*t170534*t170539-a1p*c*c0p*t170423*t170447*(2.0/3.0)))+t170331*(t170391-a1p*c*c0p*t170343*t170369* \
               (2.0/3.0)+t170410*t170370*t170381*t170356*t170378-t170370*t170381*t170356*t170392*t170375*4.0-t170381* \
               t170356*t170375*t170493*t170378+t170350*t170351*t170370*t170356*t170375*t170378*4.0+Aa*t170410*t170403* \
               t170412*t170405*t170356*t170393*2.0-Aa*t170403*t170405*t170516*t170356*t170375*t170393*2.0+t170412* \
               t170405*t170531*t170524*t170526*t170356*t170375*t170393-Aa*a1a*c*t170403*t170412*t170343*t170356*t170375* \
               t170393*(2.0/3.0))-c0p*t170438*t170447*2.0-t170450*t170356*t170568)*(ccab1*gamma_aa[index]*gcab*t170480* \
               t170457*(4.0/3.0)-ccab4*t170601*t170462*t170463*t170593-ccab2*t170602*t170454*t170456*t170598-ccab1* \
               gamma_aa[index]*t170454*t170455*t170457*t170594*(4.0/3.0)+ccab2*gamma_aa[index]*t170454*t170455*t170457* \
               t170478*(8.0/3.0)+ccab3*gamma_aa[index]*gcab*t170454*t170456*t170457*t170479*4.0+ccab4*gamma_aa[index]* \
               t170462*t170481*t170455*t170456*t170457*(1.6E1/3.0)-ccab3*gcab*t170606*t170454*t170455*t170456*t170599) \
               *2.0-(ccab0+ccab1*gcab*t170480*t170455+ccab4*t170462*t170463*t170481+ccab2*t170454*t170456*t170478+ \
               ccab3*gcab*t170454*t170455*t170456*t170479)*(-t170331*(-t170513-t170505+t170533+t170558+t170381*t170356* \
               t170375*t170378*(t170513+t170505-t170533-t170558-1.0/(t170362*t170362*t170362)*t170506*t170368*t170485* \
               2.0+t170368*t170485*t170486*(b2f*c*t170482*(4.0/9.0)+b4f*t170338*t170483*(1.0E1/9.0)+b1f*c*t170383* \
               t170482*(2.0/9.0)+b3f*c*t170334*t170482*(2.0/3.0)-b1f*t170338*t170483*t170497*(1.0/3.6E1)+b3f*t170338* \
               t170383*t170483*(1.0/1.2E1))+1.0/(t170362*t170362*t170362*t170362)*t170506*1.0/(t170365*t170365)*t170357* \
               t170368*(1.0/2.0)-a1f*c*c0f*t170482*t170366*(8.0/9.0)+a1f*c*t170343*t170491*t170485*t170486*(2.0/3.0) \
               -a1p*c*t170343*t170390*t170384*t170385*(2.0/3.0))+t170410*t170370*t170381*t170356*t170392*8.0-t170370* \
               t170514*t170381*t170356*t170375*2.0E1-t170370*t170523*t170381*t170356*t170378+t170410*t170381*t170356* \
               t170493*t170378*2.0-t170351*t170370*t170356*t170375*t170378*1.2E1-t170381*t170356*t170392*t170375* \
               t170493*8.0-t170410*t170350*t170351*t170370*t170356*t170378*8.0+t170350*t170351*t170370*t170356*t170392* \
               t170375*3.2E1+t170350*t170351*t170356*t170375*t170493*t170378*8.0+a1p*c*t170343*t170390*t170384*t170385* \
               (2.0/3.0)+Aa*t170410*t170403*t170405*t170516*t170356*t170393*4.0-Aa*t170403*t170412*t170405*t170523* \
               t170356*t170393*2.0-Aa*t170403*t170405*t170356*t170375*t170393*(t170514*t170381*2.0E1+t170351*t170378* \
               1.2E1-t170350*t170351*t170392*3.2E1)*2.0-t170410*t170412*t170405*t170531*t170524*t170526*t170356*t170393* \
               2.0+t170405*t170531*t170524*t170516*t170526*t170356*t170375*t170393*2.0-t170412*t170405*t170532*t170524* \
               t170356*t170375*t170393*1.0/(t170399*t170399*t170399)*2.0+t170412*t170405*t170524*t170526*t170356* \
               t170375*t170393*(b2a*c*t170482*(4.0/9.0)+b4a*t170338*t170483*(1.0E1/9.0)+b1a*c*t170383*t170482*(2.0/ \
               9.0)+b3a*c*t170334*t170482*(2.0/3.0)-b1a*t170338*t170483*t170497*(1.0/3.6E1)+b3a*t170338*t170383*t170483* \
               (1.0/1.2E1))+Aa*a1a*c*t170410*t170403*t170412*t170343*t170356*t170393*(4.0/3.0)-Aa*a1a*c*t170403*t170412* \
               t170356*t170482*t170375*t170393*(8.0/9.0)-Aa*a1a*c*t170403*t170343*t170516*t170356*t170375*t170393* \
               (4.0/3.0)+1.0/(t170402*t170402)*t170412*t170405*t170532*t170356*t170375*t170393*t170394*1.0/(t170399* \
               t170399*t170399*t170399)*(1.0/2.0)+a1a*c*t170412*t170531*t170343*t170524*t170526*t170356*t170375*t170393* \
               (2.0/3.0))+rho_a[index]*(-t170546-t170555+t170672+t170674+t170668+t170450*t170356*(t170671+t170546+ \
               t170555+t170673+t170666-t170440*t170552*t170438*t170439-t170453*t170534*t170543*t170659*2.0-a1f*c* \
               c0f*t170451*t170541*(8.0/9.0)-t170344*t170544*t170553*t170554*t170438*(1.0/2.0)-a1p*c*t170440*t170423* \
               t170445*t170439*(2.0/3.0)))+t170450*t170356*t170559*2.0-t170440*t170445*t170438*t170439*2.0+t170390* \
               t170384*t170349*t170385*2.0+a1p*c*c0p*t170423*t170447*(4.0/3.0)-a1p*c*c0p*t170343*t170369*(4.0/3.0) \
               +t170410*t170370*t170381*t170356*t170378*2.0-t170370*t170381*t170356*t170392*t170375*8.0-t170381*t170356* \
               t170375*t170493*t170378*2.0+t170350*t170351*t170370*t170356*t170375*t170378*8.0+Aa*t170410*t170403* \
               t170412*t170405*t170356*t170393*4.0-Aa*t170403*t170405*t170516*t170356*t170375*t170393*4.0+t170412* \
               t170405*t170531*t170524*t170526*t170356*t170375*t170393*2.0-Aa*a1a*c*t170403*t170412*t170343*t170356* \
               t170375*t170393*(4.0/3.0))+rho_a[index]*t170651*(t170446-t170557+t170450*t170356*(t170630-t170446- \
               t170556+t170557))*2.0-rho_a[index]*t170608*(ccaa1*gamma_aa[index]*gcaa*t170600*t170617*(8.8E1/9.0) \
               +ccaa4*t170614*t170562*t170563*t170653*(1.12E3/9.0)-ccaa1*t170560*t170561*t170635*t170595*2.4E1+ccaa2* \
               t170560*t170561*t170626*t170595*(3.04E2/9.0)-ccaa2*t170560*t170650*t170561*t170627*t170649*(3.2E1/ \
               3.0)-ccaa4*t170562*t170563*t170645*t170646*t170629*(6.4E1/3.0)-ccaa2*t170560*t170650*t170561*t170566* \
               (gamma_aa[index]*gcaa*t170600*(1.76E2/9.0)+t170560*t170561*t170595*(3.04E2/9.0))-ccaa4*t170562*t170563* \
               t170564*t170646*(gamma_aa[index]*gcaa*t170600*(3.52E2/9.0)+t170562*t170563*t170653*(1.12E3/9.0)+t170560* \
               t170561*t170595*(6.08E2/3.0)+gamma_aa[index]*gcaa*t170560*t170561*t170652*2.88E2)+ccaa4*1.0/(t170613* \
               t170613*t170613)*t170562*t170563*t170564*(t170645*t170645)*2.0+ccaa2*t170560*t170561*1.0/(t170625* \
               t170625*t170625)*t170566*(t170649*t170649)*2.0+ccaa3*gamma_aa[index]*gcaa*t170622*t170560*t170561* \
               t170652*7.2E1+ccaa1*gamma_aa[index]*gcaa*t170560*t170561*1.0/(t170616*t170616*t170616)*t170652*(1.28E2/ \
               9.0)+ccaa3*gamma_aa[index]*gcaa*1.0/(t170621*t170621*t170621)*t170560*t170561*t170565*(t170639*t170639) \
               *2.0-ccaa3*gamma_aa[index]*gcaa*t170640*t170560*t170561*t170565*(gamma_aa[index]*gcaa*t170600*(8.8E1/ \
               3.0)+t170560*t170561*t170595*(3.04E2/3.0)+gamma_aa[index]*gcaa*t170560*t170561*t170652*7.2E1)-ccaa3* \
               gamma_aa[index]*gcaa*t170640*t170560*t170561*t170628*t170639*1.6E1)+rho_a[index]*t170658*(-t170546- \
               t170555+t170672+t170674+t170668+t170450*t170356*(t170671+t170546+t170555-t170672+t170673-t170674+t170666- \
               t170668-t170453*t170534*t170543*t170659*2.0-a1f*c*c0f*t170451*t170541*(8.0/9.0)))+c0*t170721*t170814* \
               t170754*(8.0/3.0)+c0*t170721*t170819*t170749*(8.0/3.0)-c0*t170814*t170755*t170819*2.0-c0*t170419*t170754* \
               t170749*(4.0/9.0)+c0*t170754*t170755*(omega*t170541*t170705*t170746*(-1.125899906842624E15/1.010275347968794E16) \
               +omega*t170423*t170705*t170769*(5.62949953421312E14/3.367584493229313E15)+omega*t170413*t170705*(t170704* \
               t170756*(t170723*t170724*t170429*(3.74176054803257E14/3.16659348799488E14)-t170723*t170419*t170734* \
               t170758*(3.74176054803257E14/2.11106232532992E14)+t170721*t170723*t170758*t170799*(3.74176054803257E14/ \
               1.40737488355328E14)-1.0/pow(t170700,5.0/2.0)*t170721*t170723*t170790*(1.122528164409771E15/2.81474976710656E14) \
               )*(3.991211251234741E15/1.125899906842624E15)+omega*t170423*t170705*t170766*(1.40737488355328E14/1.122528164409771E15) \
               +omega*t170541*t170705*t170729*(2.81474976710656E14/3.367584493229313E15)+t170704*t170742*t170760* \
               t170756*(3.991211251234741E15/1.125899906842624E15)+omega*t170413*t170705*(-t170810*t170704-t170811* \
               t170704+t170700*t170726*t170727*t170458*(2.475880078570761E28/1.26006947989317E30)+t170734*t170429* \
               t170726*t170727*(9.903520314283042E27/4.2002315996439E29)+t170419*t170726*t170727*t170799*(2.475880078570761E27/ \
               1.4000771998813E29)+t170700*t170810*t170704*t170419*t170726*(2.475880078570761E27/1.4000771998813E29) \
               +t170700*t170811*t170704*t170419*t170726*(2.475880078570761E27/1.4000771998813E29)+t170700*t170704* \
               t170742*t170429*t170726*(9.903520314283042E27/4.2002315996439E29)+t170704*t170742*t170419*t170734* \
               t170726*(4.951760157141521E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega* \
               t170413*t170724*t170734*t170766*(7.0368744177664E13/3.74176054803257E14)+omega*t170423*t170724*t170734* \
               t170729*(7.0368744177664E13/1.122528164409771E15)-omega*t170413*t170790*t170729*t170758*(1.7592186044416E13/ \
               3.74176054803257E14)+omega*t170413*t170724*t170729*t170799*(3.5184372088832E13/3.74176054803257E14) \
               )*(2.81474976710656E14/1.122528164409771E15)-omega*t170423*t170724*t170734*t170746*(2.81474976710656E14/ \
               3.367584493229313E15)+omega*t170413*t170724*t170734*t170769*(2.81474976710656E14/1.122528164409771E15) \
               +omega*t170413*t170790*t170746*t170758*(7.0368744177664E13/1.122528164409771E15)-omega*t170413*t170724* \
               t170746*t170799*(1.40737488355328E14/1.122528164409771E15))-c0*t170755*t170749*(cx1*gamma_aa[index]* \
               gx*t170600*t170687*(8.8E1/9.0)-cx1*t170560*t170725*t170675*t170595*2.4E1+cx2*t170560*t170675*t170595* \
               t170698*(3.04E2/9.0)+cx4*t170562*t170653*t170683*t170676*(1.12E3/9.0)-cx2*t170720*t170560*t170707* \
               t170627*t170675*(3.2E1/3.0)-cx2*t170720*t170560*t170566*t170675*t170788+cx2*t170560*t170566*t170773* \
               t170675*t170774*2.0-cx4*t170562*t170706*t170717*t170629*t170676*(6.4E1/3.0)+cx4*t170562*t170564*t170771* \
               t170772*t170676*2.0-cx4*t170562*t170564*t170717*t170676*t170785+cx1*gamma_aa[index]*gx*t170560*t170652* \
               t170770*t170675*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t170560*t170652*t170675*t170693*7.2E1-cx3*gamma_aa[index]* \
               gx*t170712*t170560*t170708*t170628*t170675*1.6E1-cx3*gamma_aa[index]*gx*t170560*t170708*t170565*t170675* \
               t170778+cx3*gamma_aa[index]*gx*t170560*t170780*t170565*t170675*t170779*2.0);
        } else if (rho_a[index] > cutoff_) {
            double t175008 = 1.0/pow(rho_a[index],1.0/3.0);
            double t175009 = c*t175008;
            double t175010 = sqrt(t175009);
            double t175011 = b1f*t175010;
            double t175012 = pow(t175009,3.0/2.0);
            double t175013 = b3f*t175012;
            double t175014 = c*c;
            double t175015 = 1.0/pow(rho_a[index],2.0/3.0);
            double t175016 = b4f*t175014*t175015;
            double t175017 = b2f*c*t175008;
            double t175018 = t175011+t175013+t175016+t175017;
            double t175019 = 1.0/pow(rho_a[index],4.0/3.0);
            double t175020 = b1p*t175010;
            double t175021 = b3p*t175012;
            double t175022 = b4p*t175014*t175015;
            double t175023 = b2p*c*t175008;
            double t175024 = t175020+t175021+t175022+t175023;
            double t175025 = 1.0/pow(rho_a[index],5.0/3.0);
            double t175026 = 1.0/sqrt(t175009);
            double t175027 = 1.0/c0f;
            double t175028 = 1.0/t175018;
            double t175029 = t175027*t175028*(1.0/2.0);
            double t175030 = t175029+1.0;
            double t175031 = 1.0/c0p;
            double t175032 = 1.0/t175024;
            double t175033 = t175031*t175032*(1.0/2.0);
            double t175034 = t175033+1.0;
            double t175035 = a1p*c*t175008;
            double t175036 = t175035+1.0;
            double t175037 = 1.0/t175034;
            double t175038 = 1.0/(t175024*t175024);
            double t175039 = b4p*t175014*t175025*(2.0/3.0);
            double t175040 = b2p*c*t175019*(1.0/3.0);
            double t175041 = b1p*c*t175026*t175019*(1.0/6.0);
            double t175042 = b3p*c*t175010*t175019*(1.0/2.0);
            double t175043 = t175040+t175041+t175042+t175039;
            double t175044 = t175043*t175036*t175037*t175038;
            double t175045 = log(t175034);
            double t175046 = gamma_aa[index]*gamma_aa[index];
            double t175047 = gcaa*gcaa;
            double t175048 = t175046*t175046;
            double t175049 = t175047*t175047;
            double t175050 = 1.0/pow(rho_a[index],3.2E1/3.0);
            double t175051 = 1.0/pow(rho_a[index],8.0/3.0);
            double t175052 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]);
            double t175053 = 1.0/pow(rho_a[index],1.6E1/3.0);
            double t175054 = pow(2.0,1.0/3.0);
            double t175055 = t175054*2.0;
            double t175056 = t175055-2.0;
            double t175057 = two_13*2.0;
            double t175058 = t175057-2.0;
            double t175059 = 1.0/t175058;
            double t175060 = log(t175030);
            double t175061 = a1f*c*t175008;
            double t175062 = t175061+1.0;
            double t175063 = gamma_aa[index]*gcaa*t175051*4.0;
            double t175064 = gamma_aa[index]*gcaa*t175052*t175046*t175047*4.0;
            double t175065 = t175053*t175046*t175047*6.0;
            double t175066 = t175050*t175048*t175049;
            double t175067 = t175063+t175064+t175065+t175066+1.0;
            double t175068 = 1.0/t175067;
            double t175069 = gamma_aa[index]*gcaa*t175051;
            double t175070 = t175069+1.0;
            double t175071 = 1.0/t175070;
            double t175072 = gamma_aa[index]*gcaa*t175051*3.0;
            double t175073 = gamma_aa[index]*gcaa*t175052*t175046*t175047;
            double t175074 = t175053*t175046*t175047*3.0;
            double t175075 = t175072+t175073+t175074+1.0;
            double t175076 = 1.0/t175075;
            double t175077 = gamma_aa[index]*gcaa*t175051*2.0;
            double t175078 = t175053*t175046*t175047;
            double t175079 = t175077+t175078+1.0;
            double t175080 = 1.0/t175079;
            double t175081 = 1.0/pow(rho_a[index],1.9E1/3.0);
            double t175082 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t175083 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
               rho_a[index]*rho_a[index]*rho_a[index]);
            double t175084 = 1.0/pow(rho_a[index],3.5E1/3.0);
            double t175085 = 1.0/t175030;
            double t175086 = 1.0/(t175018*t175018);
            double t175087 = b4f*t175014*t175025*(2.0/3.0);
            double t175088 = b2f*c*t175019*(1.0/3.0);
            double t175089 = b1f*c*t175026*t175019*(1.0/6.0);
            double t175090 = b3f*c*t175010*t175019*(1.0/2.0);
            double t175091 = t175090+t175087+t175088+t175089;
            double t175092 = a1f*c*c0f*t175060*t175019*(2.0/3.0);
            double t175093 = a1p*c*c0p*t175045*t175019*(2.0/3.0);
            double t175094 = ccaa4*t175048*t175084*t175049*t175068*(3.2E1/3.0);
            double t175095 = ccaa1*gamma_aa[index]*gcaa*t175071*t175082*(8.0/3.0);
            double t175096 = ccaa3*gamma_aa[index]*gcaa*t175046*t175047*t175083*t175076*8.0;
            double t175097 = ccaa2*t175080*t175081*t175046*t175047*(1.6E1/3.0);
            double t175098 = 1.0/(t175070*t175070);
            double t175099 = gamma_aa[index]*gcaa*t175082*8.0;
            double t175100 = gamma_aa[index]*gcaa*t175046*t175047*t175083*8.0;
            double t175101 = t175081*t175046*t175047*1.6E1;
            double t175102 = t175100+t175101+t175099;
            double t175103 = 1.0/(t175075*t175075);
            double t175104 = gamma_aa[index]*gcaa*t175082*(3.2E1/3.0);
            double t175105 = gamma_aa[index]*gcaa*t175046*t175047*t175083*3.2E1;
            double t175106 = t175081*t175046*t175047*3.2E1;
            double t175107 = t175048*t175084*t175049*(3.2E1/3.0);
            double t175108 = t175104+t175105+t175106+t175107;
            double t175109 = 1.0/(t175067*t175067);
            double t175110 = gamma_aa[index]*gcaa*t175082*(1.6E1/3.0);
            double t175111 = t175081*t175046*t175047*(1.6E1/3.0);
            double t175112 = t175110+t175111;
            double t175113 = 1.0/(t175079*t175079);
            double t175114 = t175094+t175095+t175096+t175097-ccaa1*t175081*t175046*t175047*t175098*(8.0/3.0)- \
               ccaa2*t175112*t175113*t175053*t175046*t175047-ccaa4*t175050*t175108*t175109*t175048*t175049-ccaa3* \
               gamma_aa[index]*gcaa*t175102*t175103*t175052*t175046*t175047;
            double t175115 = c0f*t175060*t175062*2.0;
            double t175116 = c0p*t175036*t175045*2.0;
            double t175117 = 1.0/pow(rho_a[index],1.0E1);
            double t175118 = 1.0/pow(rho_a[index],2.2E1/3.0);
            double t175119 = 1.0/pow(rho_a[index],1.4E1/3.0);
            double t175120 = 1.0/pow(rho_a[index],3.8E1/3.0);
            double t175121 = ccaa4*t175050*t175048*t175049*t175068;
            double t175122 = ccaa1*gamma_aa[index]*gcaa*t175051*t175071;
            double t175123 = ccaa3*gamma_aa[index]*gcaa*t175052*t175046*t175047*t175076;
            double t175124 = ccaa2*t175053*t175080*t175046*t175047;
            double t175125 = ccaa0+t175121+t175122+t175123+t175124;
            double t175126 = 1.0/pow(rho_a[index],7.0/3.0);
            double t175127 = 1.0/pow(t175009,3.0/2.0);
            double t175128 = t175091*t175091;
            double t175129 = t175043*t175043;
            double t175130 = 1.0/(t175024*t175024*t175024);
            double t175131 = t175130*t175036*t175037*t175129*2.0;
            double t175132 = b4p*t175014*t175051*(1.0E1/9.0);
            double t175133 = b2p*c*t175126*(4.0/9.0);
            double t175134 = b3p*t175014*t175051*t175026*(1.0/1.2E1);
            double t175135 = b1p*c*t175026*t175126*(2.0/9.0);
            double t175136 = b3p*c*t175010*t175126*(2.0/3.0);
            double t175137 = t175132+t175133+t175134+t175135+t175136-b1p*t175014*t175051*t175127*(1.0/3.6E1);
            double t175138 = 1.0/(t175034*t175034);
            double t175139 = 1.0/(t175024*t175024*t175024*t175024);
            double t175140 = a1p*c*c0p*t175045*t175126*(8.0/9.0);
            double t175141 = gx*gx;
            double t175142 = t175141*t175141;
            double t175143 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t175144 = gamma_aa[index]*gx*t175051*4.0;
            double t175145 = gamma_aa[index]*gx*t175141*t175052*t175046*4.0;
            double t175146 = t175141*t175053*t175046*6.0;
            double t175147 = t175050*t175142*t175048;
            double t175148 = t175144+t175145+t175146+t175147+1.0;
            double t175149 = 1.0/t175148;
            double t175150 = cx4*t175050*t175142*t175048*t175149*(4.190715359480463E15/2.251799813685248E15);
            double t175151 = gamma_aa[index]*gx*t175051;
            double t175152 = t175151+1.0;
            double t175153 = 1.0/t175152;
            double t175154 = cx1*gamma_aa[index]*gx*t175051*t175153*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175155 = gamma_aa[index]*gx*t175051*3.0;
            double t175156 = gamma_aa[index]*gx*t175141*t175052*t175046;
            double t175157 = t175141*t175053*t175046*3.0;
            double t175158 = t175155+t175156+t175157+1.0;
            double t175159 = 1.0/t175158;
            double t175160 = cx3*gamma_aa[index]*gx*t175141*t175052*t175046*t175159*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175161 = gamma_aa[index]*gx*t175051*2.0;
            double t175162 = t175141*t175053*t175046;
            double t175163 = t175161+t175162+1.0;
            double t175164 = 1.0/t175163;
            double t175165 = cx2*t175141*t175053*t175046*t175164*(4.190715359480463E15/2.251799813685248E15);
            double t175166 = t175150+t175160+t175143+t175154+t175165;
            double t175167 = 1.0/(omega*omega);
            double t175168 = pow(rho_a[index],2.0/3.0);
            double t175169 = 1.0/t175166;
            double t175188 = t175167*t175168*t175169*(1.4000771998813E29/4.951760157141521E27);
            double t175170 = exp(-t175188);
            double t175171 = sqrt(t175166);
            double t175179 = gamma_aa[index]*gx*t175082*(3.2E1/3.0);
            double t175180 = gamma_aa[index]*gx*t175141*t175046*t175083*3.2E1;
            double t175181 = t175141*t175081*t175046*3.2E1;
            double t175182 = t175142*t175048*t175084*(3.2E1/3.0);
            double t175172 = t175180+t175181+t175182+t175179;
            double t175184 = gamma_aa[index]*gx*t175082*(1.6E1/3.0);
            double t175185 = t175141*t175081*t175046*(1.6E1/3.0);
            double t175173 = t175184+t175185;
            double t175174 = 1.0/(t175158*t175158);
            double t175175 = gamma_aa[index]*gx*t175082*8.0;
            double t175176 = gamma_aa[index]*gx*t175141*t175046*t175083*8.0;
            double t175177 = t175141*t175081*t175046*1.6E1;
            double t175178 = t175175+t175176+t175177;
            double t175183 = 1.0/(t175148*t175148);
            double t175186 = 1.0/(t175163*t175163);
            double t175187 = pow(rho_a[index],1.0/3.0);
            double t175189 = 1.0/omega;
            double t175190 = 1.0/sqrt(t175166);
            double t175191 = 1.0/(t175152*t175152);
            double t175192 = omega*omega;
            double t175193 = t175170-1.0;
            double t175194 = t175015*t175192*t175166*t175193*(2.475880078570761E27/1.4000771998813E29);
            double t175195 = -t175170+t175194+3.0/2.0;
            double t175196 = cx4*t175142*t175048*t175084*t175149*(1.396905119826821E15/7.0368744177664E13);
            double t175197 = cx1*gamma_aa[index]*gx*t175153*t175082*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t175198 = cx3*gamma_aa[index]*gx*t175141*t175046*t175083*t175159*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t175199 = cx2*t175141*t175081*t175046*t175164*(1.396905119826821E15/1.40737488355328E14);
            double t175201 = cx1*t175141*t175081*t175046*t175191*(1.396905119826821E15/2.81474976710656E14);
            double t175202 = cx3*gamma_aa[index]*gx*t175141*t175052*t175046*t175174*t175178*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t175203 = cx4*t175050*t175142*t175172*t175048*t175183*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175204 = cx2*t175141*t175053*t175046*t175173*t175186*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175200 = -t175201-t175202-t175203-t175204+t175196+t175197+t175198+t175199;
            double t175205 = t175008*t175167*t175169*(1.4000771998813E29/7.427640235712282E27);
            double t175206 = 1.0/(t175166*t175166);
            double t175207 = t175200*t175206*t175167*t175168*(1.4000771998813E29/4.951760157141521E27);
            double t175208 = t175205+t175207;
            double t175209 = t175190*t175187*t175189*(3.74176054803257E14/7.0368744177664E13);
            double t175210 = erf(t175209);
            double t175211 = t175210*(3.991211251234741E15/2.251799813685248E15);
            double t175213 = omega*t175008*t175171*t175195*(7.0368744177664E13/3.74176054803257E14);
            double t175212 = t175211-t175213;
            double t175214 = omega*t175212*t175008*t175171*(2.81474976710656E14/1.122528164409771E15);
            double t175215 = t175214-1.0;
            double t175216 = cx4*t175050*t175142*t175048*t175149;
            double t175217 = cx1*gamma_aa[index]*gx*t175051*t175153;
            double t175218 = cx3*gamma_aa[index]*gx*t175141*t175052*t175046*t175159;
            double t175219 = cx2*t175141*t175053*t175046*t175164;
            double t175220 = cx0+t175216+t175217+t175218+t175219;
            double t175221 = pow(rho_a[index],4.0/3.0);
            double t175222 = 1.0/sqrt(3.141592653589793);
            double t175223 = t175015*t175190*t175189*(3.74176054803257E14/2.11106232532992E14);
            double t175224 = 1.0/pow(t175166,3.0/2.0);
            double t175225 = t175200*t175224*t175187*t175189*(3.74176054803257E14/1.40737488355328E14);
            double t175226 = t175223+t175225;
            double t175227 = t175222*t175170*t175226*(3.991211251234741E15/1.125899906842624E15);
            double t175228 = omega*t175171*t175019*t175195*(7.0368744177664E13/1.122528164409771E15);
            double t175229 = t175025*t175192*t175166*t175193*(4.951760157141521E27/4.2002315996439E29);
            double t175230 = t175200*t175015*t175192*t175193*(2.475880078570761E27/1.4000771998813E29);
            double t175231 = t175015*t175170*t175208*t175192*t175166*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t175255 = t175170*t175208;
            double t175232 = t175230+t175231-t175255+t175229;
            double t175233 = omega*t175232*t175008*t175171*(7.0368744177664E13/3.74176054803257E14);
            double t175234 = omega*t175200*t175008*t175190*t175195*(3.5184372088832E13/3.74176054803257E14);
            double t175235 = t175233+t175234+t175227+t175228;
            double t175236 = 1.0/(t175152*t175152*t175152);
            double t175237 = t175172*t175172;
            double t175238 = 1.0/(t175148*t175148*t175148);
            double t175239 = t175173*t175173;
            double t175240 = 1.0/(t175163*t175163*t175163);
            double t175241 = gamma_aa[index]*gx*t175119*(8.8E1/3.0);
            double t175242 = gamma_aa[index]*gx*t175141*t175117*t175046*7.2E1;
            double t175243 = t175141*t175046*t175118*(3.04E2/3.0);
            double t175244 = t175241+t175242+t175243;
            double t175245 = t175178*t175178;
            double t175246 = 1.0/(t175158*t175158*t175158);
            double t175247 = gamma_aa[index]*gx*t175119*(3.52E2/9.0);
            double t175248 = gamma_aa[index]*gx*t175141*t175117*t175046*2.88E2;
            double t175249 = t175141*t175046*t175118*(6.08E2/3.0);
            double t175250 = t175120*t175142*t175048*(1.12E3/9.0);
            double t175251 = t175250+t175247+t175248+t175249;
            double t175252 = gamma_aa[index]*gx*t175119*(1.76E2/9.0);
            double t175253 = t175141*t175046*t175118*(3.04E2/9.0);
            double t175254 = t175252+t175253;
            double t175256 = t175200*t175200;
            double t175257 = cx4*t175120*t175142*t175048*t175149*(4.889167919393874E16/2.11106232532992E14);
            double t175258 = cx1*gamma_aa[index]*gx*t175153*t175119*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t175259 = cx3*gamma_aa[index]*gx*t175141*t175117*t175046*t175159*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t175260 = cx2*t175141*t175046*t175118*t175164*(2.65411972767096E16/4.22212465065984E14);
            double t175261 = cx1*gamma_aa[index]*gx*t175141*t175117*t175046*t175236*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t175262 = cx4*t175050*t175142*t175048*t175237*t175238*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t175263 = cx2*t175141*t175240*t175053*t175046*t175239*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t175264 = cx3*gamma_aa[index]*gx*t175141*t175052*t175046*t175245*t175246*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t175266 = cx1*t175141*t175046*t175118*t175191*(1.257214607844139E16/2.81474976710656E14);
            double t175267 = cx3*gamma_aa[index]*gx*t175141*t175046*t175083*t175174*t175178*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t175268 = cx3*gamma_aa[index]*gx*t175141*t175052*t175046*t175244*t175174*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t175269 = cx4*t175142*t175172*t175048*t175084*t175183*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t175270 = cx4*t175050*t175142*t175251*t175048*t175183*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175271 = cx2*t175141*t175081*t175046*t175173*t175186*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t175272 = cx2*t175141*t175053*t175046*t175254*t175186*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t175265 = t175260+t175261-t175270+t175262-t175271+t175263-t175272+t175264+t175257-t175266+ \
               t175258-t175267+t175259-t175268-t175269;
            double t175273 = t175019*t175167*t175169*(1.4000771998813E29/2.228292070713684E28);
            double t175274 = 1.0/(t175166*t175166*t175166);
            double t175275 = t175206*t175265*t175167*t175168*(1.4000771998813E29/4.951760157141521E27);
            double t175276 = t175273+t175275-t175200*t175008*t175206*t175167*(1.4000771998813E29/3.713820117856141E27) \
               -t175256*t175274*t175167*t175168*(1.4000771998813E29/2.475880078570761E27);
            double t175277 = t175208*t175208;
            double t175278 = omega*t175212*t175171*t175019*(2.81474976710656E14/3.367584493229313E15);
            double t175279 = omega*t175200*t175212*t175008*t175190*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t175280 = t175278+t175279-omega*t175008*t175171*t175235*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t175281 = cx4*t175142*t175048*t175084*t175149*(3.2E1/3.0);
            double t175282 = cx1*gamma_aa[index]*gx*t175153*t175082*(8.0/3.0);
            double t175283 = cx3*gamma_aa[index]*gx*t175141*t175046*t175083*t175159*8.0;
            double t175284 = cx2*t175141*t175081*t175046*t175164*(1.6E1/3.0);
            double t175285 = t175281+t175282+t175283+t175284-cx1*t175141*t175081*t175046*t175191*(8.0/3.0)-cx2* \
               t175141*t175053*t175046*t175173*t175186-cx4*t175050*t175142*t175172*t175048*t175183-cx3*gamma_aa[index]* \
               gx*t175141*t175052*t175046*t175174*t175178;
            v_rho_a_rho_a_[index] = t175114*(t175116+t175056*t175059*(t175115-c0p*t175036*t175045*2.0))*2.0+t175125* \
               (-t175044+t175093+t175056*t175059*(t175044+t175092-t175062*t175091*t175085*t175086-a1p*c*c0p*t175045* \
               t175019*(2.0/3.0)))*2.0+rho_a[index]*t175125*(-t175131-t175140+t175056*t175059*(t175131+t175140-t175036* \
               t175037*t175038*t175137-t175062*1.0/(t175018*t175018*t175018)*t175128*t175085*2.0+t175062*t175085* \
               t175086*(b2f*c*t175126*(4.0/9.0)+b4f*t175014*t175051*(1.0E1/9.0)+b1f*c*t175026*t175126*(2.0/9.0)+b3f* \
               c*t175010*t175126*(2.0/3.0)-b1f*t175014*t175051*t175127*(1.0/3.6E1)+b3f*t175014*t175051*t175026*(1.0/ \
               1.2E1))+1.0/(t175030*t175030)*t175062*1.0/(t175018*t175018*t175018*t175018)*t175027*t175128*(1.0/2.0) \
               -a1f*c*c0f*t175060*t175126*(8.0/9.0)-t175031*t175036*t175129*t175138*t175139*(1.0/2.0)+a1f*c*t175019* \
               t175091*t175085*t175086*(2.0/3.0)-a1p*c*t175043*t175019*t175037*t175038*(2.0/3.0))+t175036*t175037* \
               t175038*t175137+t175031*t175036*t175129*t175138*t175139*(1.0/2.0)+a1p*c*t175043*t175019*t175037*t175038* \
               (2.0/3.0))-rho_a[index]*t175114*(-t175044+t175093+t175056*t175059*(t175044+t175092-t175093-t175062* \
               t175091*t175085*t175086))*2.0-rho_a[index]*(t175116+t175056*t175059*(t175115-t175116))*(ccaa1*gamma_aa[index]* \
               gcaa*t175071*t175119*(8.8E1/9.0)+ccaa2*t175080*t175046*t175118*t175047*(3.04E2/9.0)+ccaa4*t175120* \
               t175048*t175049*t175068*(1.12E3/9.0)-ccaa1*t175046*t175118*t175047*t175098*2.4E1-ccaa2*t175112*t175113* \
               t175081*t175046*t175047*(3.2E1/3.0)-ccaa4*t175108*t175109*t175048*t175084*t175049*(6.4E1/3.0)-ccaa2* \
               t175113*t175053*t175046*t175047*(gamma_aa[index]*gcaa*t175119*(1.76E2/9.0)+t175046*t175118*t175047* \
               (3.04E2/9.0))-ccaa4*t175050*t175109*t175048*t175049*(gamma_aa[index]*gcaa*t175119*(3.52E2/9.0)+t175120* \
               t175048*t175049*(1.12E3/9.0)+t175046*t175118*t175047*(6.08E2/3.0)+gamma_aa[index]*gcaa*t175117*t175046* \
               t175047*2.88E2)+ccaa2*(t175112*t175112)*t175053*t175046*t175047*1.0/(t175079*t175079*t175079)*2.0+ \
               ccaa4*t175050*(t175108*t175108)*t175048*t175049*1.0/(t175067*t175067*t175067)*2.0+ccaa3*gamma_aa[index]* \
               gcaa*t175117*t175046*t175047*t175076*7.2E1+ccaa1*gamma_aa[index]*gcaa*1.0/(t175070*t175070*t175070) \
               *t175117*t175046*t175047*(1.28E2/9.0)+ccaa3*gamma_aa[index]*gcaa*(t175102*t175102)*t175052*t175046* \
               t175047*1.0/(t175075*t175075*t175075)*2.0-ccaa3*gamma_aa[index]*gcaa*t175103*t175052*t175046*t175047* \
               (gamma_aa[index]*gcaa*t175119*(8.8E1/3.0)+t175046*t175118*t175047*(3.04E2/3.0)+gamma_aa[index]*gcaa* \
               t175117*t175046*t175047*7.2E1)-ccaa3*gamma_aa[index]*gcaa*t175102*t175103*t175046*t175047*t175083* \
               1.6E1)-c0*t175220*t175015*t175215*(4.0/9.0)+c0*t175220*t175280*t175187*(8.0/3.0)-c0*t175221*t175280* \
               t175285*2.0+c0*t175215*t175285*t175187*(8.0/3.0)+c0*t175220*t175221*(omega*t175212*t175126*t175171* \
               (-1.125899906842624E15/1.010275347968794E16)+omega*t175171*t175019*t175235*(5.62949953421312E14/3.367584493229313E15) \
               +omega*t175008*t175171*(t175222*t175170*(t175025*t175190*t175189*(3.74176054803257E14/3.16659348799488E14) \
               -t175200*t175015*t175224*t175189*(3.74176054803257E14/2.11106232532992E14)+t175224*t175265*t175187* \
               t175189*(3.74176054803257E14/1.40737488355328E14)-1.0/pow(t175166,5.0/2.0)*t175256*t175187*t175189* \
               (1.122528164409771E15/2.81474976710656E14))*(3.991211251234741E15/1.125899906842624E15)+omega*t175232* \
               t175171*t175019*(1.40737488355328E14/1.122528164409771E15)+omega*t175126*t175171*t175195*(2.81474976710656E14/ \
               3.367584493229313E15)+t175222*t175170*t175208*t175226*(3.991211251234741E15/1.125899906842624E15)+ \
               omega*t175008*t175171*(-t175170*t175276-t175170*t175277+t175200*t175025*t175192*t175193*(9.903520314283042E27/ \
               4.2002315996439E29)+t175015*t175192*t175193*t175265*(2.475880078570761E27/1.4000771998813E29)+t175051* \
               t175192*t175166*t175193*(2.475880078570761E28/1.26006947989317E30)+t175200*t175015*t175170*t175208* \
               t175192*(4.951760157141521E27/1.4000771998813E29)+t175025*t175170*t175208*t175192*t175166*(9.903520314283042E27/ \
               4.2002315996439E29)+t175015*t175170*t175192*t175166*t175276*(2.475880078570761E27/1.4000771998813E29) \
               +t175015*t175170*t175192*t175166*t175277*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/ \
               3.74176054803257E14)+omega*t175200*t175232*t175008*t175190*(7.0368744177664E13/3.74176054803257E14) \
               +omega*t175200*t175019*t175190*t175195*(7.0368744177664E13/1.122528164409771E15)-omega*t175008*t175224* \
               t175256*t175195*(1.7592186044416E13/3.74176054803257E14)+omega*t175008*t175190*t175265*t175195*(3.5184372088832E13/ \
               3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)-omega*t175200*t175212*t175019*t175190* \
               (2.81474976710656E14/3.367584493229313E15)+omega*t175200*t175008*t175190*t175235*(2.81474976710656E14/ \
               1.122528164409771E15)+omega*t175212*t175008*t175224*t175256*(7.0368744177664E13/1.122528164409771E15) \
               -omega*t175212*t175008*t175190*t175265*(1.40737488355328E14/1.122528164409771E15))-c0*t175221*t175215* \
               (cx1*gamma_aa[index]*gx*t175153*t175119*(8.8E1/9.0)-cx1*t175141*t175046*t175118*t175191*2.4E1+cx2* \
               t175141*t175046*t175118*t175164*(3.04E2/9.0)+cx4*t175120*t175142*t175048*t175149*(1.12E3/9.0)+cx2* \
               t175141*t175240*t175053*t175046*t175239*2.0-cx2*t175141*t175053*t175046*t175254*t175186-cx2*t175141* \
               t175081*t175046*t175173*t175186*(3.2E1/3.0)-cx4*t175050*t175142*t175251*t175048*t175183+cx4*t175050* \
               t175142*t175048*t175237*t175238*2.0-cx4*t175142*t175172*t175048*t175084*t175183*(6.4E1/3.0)+cx1*gamma_aa[index]* \
               gx*t175141*t175117*t175046*t175236*(1.28E2/9.0)+cx3*gamma_aa[index]*gx*t175141*t175117*t175046*t175159* \
               7.2E1-cx3*gamma_aa[index]*gx*t175141*t175052*t175046*t175244*t175174+cx3*gamma_aa[index]*gx*t175141* \
               t175052*t175046*t175245*t175246*2.0-cx3*gamma_aa[index]*gx*t175141*t175046*t175083*t175174*t175178* \
               1.6E1);
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_a_[index] = 0.0;
        } else {
            v_rho_a_rho_a_[index] = 0.0;
        } 

        //V_rho_a_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t170821 = rho_a[index]+rho_b[index];
            double t170822 = 1.0/pow(t170821,1.0/3.0);
            double t170823 = c*t170822;
            double t170824 = sqrt(t170823);
            double t170825 = b1p*t170824;
            double t170826 = pow(t170823,3.0/2.0);
            double t170827 = b3p*t170826;
            double t170828 = c*c;
            double t170829 = 1.0/pow(t170821,2.0/3.0);
            double t170830 = b4p*t170828*t170829;
            double t170831 = b2p*c*t170822;
            double t170832 = t170830+t170831+t170825+t170827;
            double t170833 = 1.0/pow(t170821,4.0/3.0);
            double t170834 = 1.0/c0p;
            double t170835 = 1.0/t170832;
            double t170836 = t170834*t170835*(1.0/2.0);
            double t170837 = t170836+1.0;
            double t170838 = a1p*c*t170822;
            double t170839 = t170838+1.0;
            double t170840 = rho_a[index]-rho_b[index];
            double t170841 = t170840*t170840;
            double t170842 = 1.0/t170821;
            double t170843 = t170840*t170842;
            double t170844 = two_13*2.0;
            double t170845 = t170844-2.0;
            double t170846 = 1.0/t170845;
            double t170847 = 1.0/c0f;
            double t170848 = b1f*t170824;
            double t170849 = b3f*t170826;
            double t170850 = b4f*t170828*t170829;
            double t170851 = b2f*c*t170822;
            double t170852 = t170850+t170851+t170848+t170849;
            double t170853 = 1.0/t170852;
            double t170854 = t170853*t170847*(1.0/2.0);
            double t170855 = t170854+1.0;
            double t170856 = log(t170855);
            double t170857 = a1f*c*t170822;
            double t170858 = t170857+1.0;
            double t170859 = log(t170837);
            double t170869 = c0f*t170856*t170858*2.0;
            double t170870 = c0p*t170839*t170859*2.0;
            double t170860 = -t170870+t170869;
            double t170861 = t170843+1.0;
            double t170862 = pow(t170861,4.0/3.0);
            double t170863 = -t170843+1.0;
            double t170864 = pow(t170863,4.0/3.0);
            double t170865 = t170862+t170864-2.0;
            double t170866 = 1.0/(t170821*t170821);
            double t170897 = t170840*t170866;
            double t170867 = t170842-t170897;
            double t170868 = 1.0/(t170821*t170821*t170821*t170821);
            double t170871 = t170841*t170841;
            double t170872 = 1.0/pow(t170821,5.0/3.0);
            double t170873 = 1.0/sqrt(t170823);
            double t170874 = 1.0/t170837;
            double t170875 = 1.0/(t170832*t170832);
            double t170876 = b4p*t170872*t170828*(2.0/3.0);
            double t170877 = b2p*c*t170833*(1.0/3.0);
            double t170878 = b1p*c*t170833*t170873*(1.0/6.0);
            double t170879 = b3p*c*t170824*t170833*(1.0/2.0);
            double t170880 = t170876+t170877+t170878+t170879;
            double t170881 = t170880*t170874*t170839*t170875;
            double t170882 = 1.0/(t170821*t170821*t170821*t170821*t170821);
            double t170883 = 1.0/d2fz0;
            double t170884 = 1.0/Aa;
            double t170885 = b1a*t170824;
            double t170886 = b3a*t170826;
            double t170887 = b4a*t170828*t170829;
            double t170888 = b2a*c*t170822;
            double t170889 = t170885+t170886+t170887+t170888;
            double t170890 = 1.0/t170889;
            double t170891 = t170890*t170884*(1.0/2.0);
            double t170892 = t170891+1.0;
            double t170893 = log(t170892);
            double t170894 = a1a*c*t170822;
            double t170895 = t170894+1.0;
            double t170896 = pow(t170861,1.0/3.0);
            double t170898 = t170867*t170896*(4.0/3.0);
            double t170899 = pow(t170863,1.0/3.0);
            double t171043 = t170867*t170899*(4.0/3.0);
            double t170900 = -t171043+t170898;
            double t170901 = t170871*t170868;
            double t170902 = t170901-1.0;
            double t170903 = 1.0/pow(rho_a[index],1.0/3.0);
            double t170904 = c*t170903;
            double t170905 = sqrt(t170904);
            double t170906 = b1f*t170905;
            double t170907 = pow(t170904,3.0/2.0);
            double t170908 = b3f*t170907;
            double t170909 = 1.0/pow(rho_a[index],2.0/3.0);
            double t170910 = b4f*t170828*t170909;
            double t170911 = b2f*c*t170903;
            double t170912 = t170910+t170911+t170906+t170908;
            double t170913 = 1.0/pow(rho_a[index],4.0/3.0);
            double t170914 = b1p*t170905;
            double t170915 = b3p*t170907;
            double t170916 = b4p*t170828*t170909;
            double t170917 = b2p*c*t170903;
            double t170918 = t170914+t170915+t170916+t170917;
            double t170919 = 1.0/pow(rho_a[index],5.0/3.0);
            double t170920 = 1.0/sqrt(t170904);
            double t170921 = 1.0/t170912;
            double t170922 = t170921*t170847*(1.0/2.0);
            double t170923 = t170922+1.0;
            double t170924 = 1.0/t170918;
            double t170925 = t170834*t170924*(1.0/2.0);
            double t170926 = t170925+1.0;
            double t170927 = a1p*c*t170903;
            double t170928 = t170927+1.0;
            double t170929 = 1.0/t170926;
            double t170930 = 1.0/(t170918*t170918);
            double t170931 = b4p*t170828*t170919*(2.0/3.0);
            double t170932 = b2p*c*t170913*(1.0/3.0);
            double t170933 = b1p*c*t170920*t170913*(1.0/6.0);
            double t170934 = b3p*c*t170913*t170905*(1.0/2.0);
            double t170935 = t170931+t170932+t170933+t170934;
            double t170936 = t170930*t170935*t170928*t170929;
            double t170937 = log(t170926);
            double t170938 = pow(2.0,1.0/3.0);
            double t170939 = t170938*2.0;
            double t170940 = t170939-2.0;
            double t170941 = log(t170923);
            double t170942 = a1f*c*t170903;
            double t170943 = t170942+1.0;
            double t170944 = gcab*gcab;
            double t170948 = 1.0/pow(rho_a[index],8.0/3.0);
            double t170949 = gamma_aa[index]*t170948*(1.0/2.0);
            double t170950 = 1.0/pow(rho_b[index],8.0/3.0);
            double t170951 = gamma_bb[index]*t170950*(1.0/2.0);
            double t170945 = t170951+t170949;
            double t170946 = t170945*t170945;
            double t170947 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t170952 = t170944*t170944;
            double t170953 = t170946*t170946;
            double t170954 = t170944*t170946*6.0;
            double t170955 = gcab*t170944*t170945*t170946*4.0;
            double t170956 = t170952*t170953;
            double t170957 = gcab*t170945*4.0;
            double t170958 = t170954+t170955+t170956+t170957+1.0;
            double t170959 = gcab*t170945;
            double t170960 = t170959+1.0;
            double t170961 = t170944*t170946;
            double t170962 = gcab*t170945*2.0;
            double t170963 = t170961+t170962+1.0;
            double t170964 = t170944*t170946*3.0;
            double t170965 = gcab*t170944*t170945*t170946;
            double t170966 = gcab*t170945*3.0;
            double t170967 = t170964+t170965+t170966+1.0;
            double t170968 = t170840*t170841*t170860*t170846*t170865*t170868*4.0;
            double t170969 = t170842+t170897;
            double t170970 = 1.0/t170855;
            double t170971 = 1.0/(t170852*t170852);
            double t170972 = b4f*t170872*t170828*(2.0/3.0);
            double t170973 = b2f*c*t170833*(1.0/3.0);
            double t170974 = b1f*c*t170833*t170873*(1.0/6.0);
            double t170975 = b3f*c*t170824*t170833*(1.0/2.0);
            double t170976 = t170972+t170973+t170974+t170975;
            double t170977 = a1f*c*c0f*t170833*t170856*(2.0/3.0);
            double t170978 = t170871*t170882*4.0;
            double t170979 = t170896*t170969*(4.0/3.0);
            double t171042 = t170969*t170899*(4.0/3.0);
            double t170980 = -t171042+t170979;
            double t170981 = 1.0/t170892;
            double t170982 = 1.0/(t170889*t170889);
            double t170983 = b4a*t170872*t170828*(2.0/3.0);
            double t170984 = b2a*c*t170833*(1.0/3.0);
            double t170985 = b1a*c*t170833*t170873*(1.0/6.0);
            double t170986 = b3a*c*t170824*t170833*(1.0/2.0);
            double t170987 = t170983+t170984+t170985+t170986;
            double t170988 = t170902*t170846*t170981*t170865*t170883*t170982*t170895*t170987;
            double t170989 = 1.0/pow(rho_b[index],1.0/3.0);
            double t170990 = c*t170989;
            double t170991 = sqrt(t170990);
            double t170992 = b1f*t170991;
            double t170993 = pow(t170990,3.0/2.0);
            double t170994 = b3f*t170993;
            double t170995 = 1.0/pow(rho_b[index],2.0/3.0);
            double t170996 = b4f*t170828*t170995;
            double t170997 = b2f*c*t170989;
            double t170998 = t170992+t170994+t170996+t170997;
            double t170999 = 1.0/pow(rho_b[index],4.0/3.0);
            double t171000 = b1p*t170991;
            double t171001 = b3p*t170993;
            double t171002 = b4p*t170828*t170995;
            double t171003 = b2p*c*t170989;
            double t171004 = t171000+t171001+t171002+t171003;
            double t171005 = 1.0/pow(rho_b[index],5.0/3.0);
            double t171006 = 1.0/sqrt(t170990);
            double t171007 = 1.0/t170998;
            double t171008 = t171007*t170847*(1.0/2.0);
            double t171009 = t171008+1.0;
            double t171010 = 1.0/t171004;
            double t171011 = t171010*t170834*(1.0/2.0);
            double t171012 = t171011+1.0;
            double t171013 = a1p*c*t170989;
            double t171014 = t171013+1.0;
            double t171015 = 1.0/t171012;
            double t171016 = 1.0/(t171004*t171004);
            double t171017 = b4p*t171005*t170828*(2.0/3.0);
            double t171018 = b2p*c*t170999*(1.0/3.0);
            double t171019 = b1p*c*t171006*t170999*(1.0/6.0);
            double t171020 = b3p*c*t170991*t170999*(1.0/2.0);
            double t171021 = t171020+t171017+t171018+t171019;
            double t171022 = t171021*t171014*t171015*t171016;
            double t171023 = log(t171012);
            double t171024 = log(t171009);
            double t171025 = a1f*c*t170989;
            double t171026 = t171025+1.0;
            double t171027 = t170860*t170871*t170846*t170865*t170868;
            double t171028 = Aa*t170902*t170846*t170865*t170883*t170893*t170895*2.0;
            double t171029 = 1.0/pow(rho_a[index],1.1E1/3.0);
            double t171030 = 1.0/(t170967*t170967);
            double t171031 = 1.0/t170960;
            double t171032 = 1.0/(t170958*t170958);
            double t171033 = 1.0/(t170963*t170963);
            double t171034 = 1.0/t170958;
            double t171035 = 1.0/(t170960*t170960);
            double t171036 = 1.0/t170963;
            double t171037 = 1.0/t170967;
            double t171039 = a1p*c*c0p*t170833*t170859*(2.0/3.0);
            double t171044 = t170970*t170971*t170858*t170976;
            double t171038 = -t171044-t171039+t170881+t170977;
            double t171040 = 1.0/pow(t170821,7.0/3.0);
            double t171041 = 1.0/pow(t170821,8.0/3.0);
            double t171045 = t170880*t170880;
            double t171046 = 1.0/pow(t170823,3.0/2.0);
            double t171047 = b4p*t171041*t170828*(1.0E1/9.0);
            double t171048 = b2p*c*t171040*(4.0/9.0);
            double t171049 = b1p*c*t171040*t170873*(2.0/9.0);
            double t171050 = b3p*c*t171040*t170824*(2.0/3.0);
            double t171051 = b3p*t171041*t170828*t170873*(1.0/1.2E1);
            double t171052 = t171050+t171051+t171047+t171048+t171049-b1p*t171041*t171046*t170828*(1.0/3.6E1);
            double t171053 = t171052*t170874*t170839*t170875;
            double t171054 = 1.0/(t170832*t170832*t170832);
            double t171055 = t170976*t170976;
            double t171056 = 1.0/(t170837*t170837);
            double t171057 = 1.0/(t170832*t170832*t170832*t170832);
            double t171058 = t171045*t171056*t171057*t170834*t170839*(1.0/2.0);
            double t171059 = t171044+t171039-t170881-t170977;
            double t171060 = 1.0/(t170821*t170821*t170821);
            double t171061 = a1p*c*t170833*t170880*t170874*t170875*(2.0/3.0);
            double t171062 = 1.0/(t170821*t170821*t170821*t170821*t170821*t170821);
            double t171063 = t170840*t170841*t170868*4.0;
            double t171064 = t171063+t170978;
            double t171065 = t171060*t170840*t170899*(8.0/3.0);
            double t171066 = 1.0/pow(t170861,2.0/3.0);
            double t171067 = t171066*t170867*t170969*(4.0/9.0);
            double t171068 = 1.0/pow(t170863,2.0/3.0);
            double t171069 = t171068*t170867*t170969*(4.0/9.0);
            double t171070 = t171065+t171067+t171069-t171060*t170840*t170896*(8.0/3.0);
            double t171071 = t171063-t170978;
            double t171072 = t170987*t170987;
            double t171073 = t170860*t170871*t170980*t170846*t170868;
            double t171074 = t170900*t170860*t170871*t170846*t170868;
            double t171075 = Aa*t171064*t170846*t170865*t170883*t170893*t170895*2.0;
            double t171076 = Aa*t170902*t170980*t170846*t170883*t170893*t170895*2.0;
            double t171077 = Aa*t170900*t170902*t170846*t170883*t170893*t170895*2.0;
            double t171078 = c0f*t170941*t170943*2.0;
            double t171080 = c0p*t170928*t170937*2.0;
            double t171079 = -t171080+t171078;
            double t171081 = c0f*t171024*t171026*2.0;
            double t171083 = c0p*t171014*t171023*2.0;
            double t171082 = t171081-t171083;
            double t171084 = gamma_aa[index]*gcab*t171029*(8.0/3.0);
            double t171085 = gamma_aa[index]*t171029*t170944*t170945*(8.0/3.0);
            double t171086 = t171084+t171085;
            double t171087 = gamma_bb[index]*gcab*t170947*(8.0/3.0);
            double t171088 = gamma_bb[index]*t170944*t170945*t170947*(8.0/3.0);
            double t171089 = t171087+t171088;
            double t171090 = gamma_aa[index]*gcab*t171029*(1.6E1/3.0);
            double t171091 = gamma_aa[index]*gcab*t171029*t170944*t170946*1.6E1;
            double t171092 = gamma_aa[index]*t171029*t170952*t170945*t170946*(1.6E1/3.0);
            double t171093 = gamma_aa[index]*t171029*t170944*t170945*1.6E1;
            double t171094 = t171090+t171091+t171092+t171093;
            double t171095 = gamma_bb[index]*gcab*t170947*(1.6E1/3.0);
            double t171096 = gamma_bb[index]*gcab*t170944*t170946*t170947*1.6E1;
            double t171097 = gamma_bb[index]*t170952*t170945*t170946*t170947*(1.6E1/3.0);
            double t171098 = gamma_bb[index]*t170944*t170945*t170947*1.6E1;
            double t171099 = t171095+t171096+t171097+t171098;
            double t171100 = gamma_aa[index]*gcab*t171029*4.0;
            double t171101 = gamma_aa[index]*gcab*t171029*t170944*t170946*4.0;
            double t171102 = gamma_aa[index]*t171029*t170944*t170945*8.0;
            double t171103 = t171100+t171101+t171102;
            double t171104 = gamma_bb[index]*gcab*t170947*4.0;
            double t171105 = gamma_bb[index]*gcab*t170944*t170946*t170947*4.0;
            double t171106 = gamma_bb[index]*t170944*t170945*t170947*8.0;
            double t171107 = t171104+t171105+t171106;
            v_rho_a_rho_b_[index] = (t171027+t171028+t170870+rho_a[index]*(-t170936+t170940*t170846*(t170936- \
               (1.0/(t170912*t170912)*t170943*(b2f*c*t170913*(1.0/3.0)+b4f*t170828*t170919*(2.0/3.0)+b1f*c*t170920* \
               t170913*(1.0/6.0)+b3f*c*t170913*t170905*(1.0/2.0)))/t170923+a1f*c*c0f*t170913*t170941*(2.0/3.0)-a1p* \
               c*c0p*t170913*t170937*(2.0/3.0))+a1p*c*c0p*t170913*t170937*(2.0/3.0))+t170821*(t171074+t171077+t170881+ \
               t170968+t170988-a1p*c*c0p*t170833*t170859*(2.0/3.0)-t170860*t170871*t170846*t170882*t170865*4.0-t171038* \
               t170871*t170846*t170865*t170868-Aa*t170846*t170865*t170883*t170893*t170895*(t170978-t170840*t170841* \
               t170868*4.0)*2.0-Aa*a1a*c*t170902*t170833*t170846*t170865*t170883*t170893*(2.0/3.0))-c0p*t170928*t170937* \
               2.0-t170940*t171079*t170846)*(ccab1*gamma_bb[index]*gcab*t171031*t170947*(4.0/3.0)-ccab4*t171032*t170952* \
               t170953*t171099-ccab2*t171033*t170944*t171089*t170946-ccab1*gamma_bb[index]*t171035*t170944*t170945* \
               t170947*(4.0/3.0)+ccab2*gamma_bb[index]*t171036*t170944*t170945*t170947*(8.0/3.0)+ccab3*gamma_bb[index]* \
               gcab*t171037*t170944*t170946*t170947*4.0+ccab4*gamma_bb[index]*t171034*t170952*t170945*t170946*t170947* \
               (1.6E1/3.0)-ccab3*gcab*t171030*t171107*t170944*t170945*t170946)+(ccab0+ccab1*gcab*t171031*t170945+ \
               ccab4*t171034*t170952*t170953+ccab2*t171036*t170944*t170946+ccab3*gcab*t171037*t170944*t170945*t170946) \
               *(t171073-t171074+t171075+t171076-t171077+t170821*(t171061+t171053+t171058-t171045*t171054*t170874* \
               t170839*2.0-a1p*c*c0p*t171040*t170859*(8.0/9.0)-t170871*t170846*t170865*t170868*(t171061+t171053+t171058- \
               t171045*t171054*t170874*t170839*2.0+t171055*1.0/(t170852*t170852*t170852)*t170970*t170858*2.0-t170970* \
               t170971*t170858*(b2f*c*t171040*(4.0/9.0)+b4f*t171041*t170828*(1.0E1/9.0)+b1f*c*t171040*t170873*(2.0/ \
               9.0)+b3f*c*t171040*t170824*(2.0/3.0)-b1f*t171041*t171046*t170828*(1.0/3.6E1)+b3f*t171041*t170828*t170873* \
               (1.0/1.2E1))-t171055*1.0/(t170852*t170852*t170852*t170852)*1.0/(t170855*t170855)*t170847*t170858*(1.0/ \
               2.0)+a1f*c*c0f*t171040*t170856*(8.0/9.0)-a1p*c*c0p*t171040*t170859*(8.0/9.0)-a1f*c*t170833*t170970* \
               t170971*t170976*(2.0/3.0))+t170900*t170860*t170871*t170846*t170882*4.0-t171062*t170860*t170871*t170846* \
               t170865*2.0E1+t171070*t170860*t170871*t170846*t170868-t170900*t171059*t170871*t170846*t170868-t170860* \
               t170871*t170980*t170846*t170882*4.0+t170841*t170860*t170846*t170865*t170868*1.2E1+t171059*t170871* \
               t170846*t170882*t170865*8.0+t171059*t170871*t170980*t170846*t170868+t170900*t170840*t170841*t170860* \
               t170846*t170868*4.0+t170840*t170841*t170860*t170980*t170846*t170868*4.0+Aa*t171070*t170902*t170846* \
               t170883*t170893*t170895*2.0+Aa*t170900*t171064*t170846*t170883*t170893*t170895*2.0+Aa*t171071*t170980* \
               t170846*t170883*t170893*t170895*2.0-Aa*t170846*t170865*t170883*t170893*t170895*(t171062*t170871*2.0E1- \
               t170841*t170868*1.2E1)*2.0-t170900*t170902*t170846*t170981*t170883*t170982*t170895*t170987-t171071* \
               t170846*t170981*t170865*t170883*t170982*t170895*t170987+t170902*t170980*t170846*t170981*t170883*t170982* \
               t170895*t170987+t171064*t170846*t170981*t170865*t170883*t170982*t170895*t170987-t171072*t170902*t170846* \
               t170981*t170865*t170883*t170895*1.0/(t170889*t170889*t170889)*2.0+t170902*t170846*t170981*t170865* \
               t170883*t170982*t170895*(b2a*c*t171040*(4.0/9.0)+b4a*t171041*t170828*(1.0E1/9.0)+b1a*c*t171040*t170873* \
               (2.0/9.0)+b3a*c*t171040*t170824*(2.0/3.0)-b1a*t171041*t171046*t170828*(1.0/3.6E1)+b3a*t171041*t170828* \
               t170873*(1.0/1.2E1))+Aa*a1a*c*t170900*t170902*t170833*t170846*t170883*t170893*(2.0/3.0)-Aa*a1a*c*t171040* \
               t170902*t170846*t170865*t170883*t170893*(8.0/9.0)+Aa*a1a*c*t171071*t170833*t170846*t170865*t170883* \
               t170893*(2.0/3.0)-Aa*a1a*c*t170902*t170833*t170980*t170846*t170883*t170893*(2.0/3.0)-Aa*a1a*c*t171064* \
               t170833*t170846*t170865*t170883*t170893*(2.0/3.0)+t171072*t170902*t170846*t170865*t170883*1.0/(t170892* \
               t170892)*t170884*t170895*1.0/(t170889*t170889*t170889*t170889)*(1.0/2.0)+a1a*c*t170902*t170833*t170846* \
               t170981*t170865*t170883*t170982*t170987*(2.0/3.0))-t170880*t170874*t170839*t170875*2.0+a1p*c*c0p*t170833* \
               t170859*(4.0/3.0)+t170860*t170871*t170846*t170882*t170865*8.0-t171059*t170871*t170846*t170865*t170868* \
               2.0-Aa*t171071*t170846*t170865*t170883*t170893*t170895*2.0-t170902*t170846*t170981*t170865*t170883* \
               t170982*t170895*t170987*2.0+Aa*a1a*c*t170902*t170833*t170846*t170865*t170883*t170893*(4.0/3.0))-(rho_b[index]* \
               (t171083+t171082*t170940*t170846)+rho_a[index]*(t171080+t170940*t171079*t170846)-t170821*(t171027+ \
               t171028+t170870))*(ccab4*t171032*t170952*t170953*(gamma_aa[index]*gamma_bb[index]*t171029*t170944* \
               t170947*(6.4E1/3.0)+gamma_aa[index]*gamma_bb[index]*t171029*t170952*t170946*t170947*(6.4E1/3.0)+gamma_aa[index]* \
               gamma_bb[index]*gcab*t171029*t170944*t170945*t170947*(1.28E2/3.0))-ccab2*t171086*t170944*1.0/(t170963* \
               t170963*t170963)*t171089*t170946*2.0-ccab4*t171094*t170952*t170953*t171099*1.0/(t170958*t170958*t170958) \
               *2.0+ccab3*gcab*t171030*t170944*t170945*t170946*(gamma_aa[index]*gamma_bb[index]*t171029*t170944*t170947* \
               (3.2E1/3.0)+gamma_aa[index]*gamma_bb[index]*gcab*t171029*t170944*t170945*t170947*(3.2E1/3.0))+ccab1* \
               gamma_aa[index]*gamma_bb[index]*t171035*t171029*t170944*t170947*(3.2E1/9.0)-ccab2*gamma_aa[index]* \
               gamma_bb[index]*t171036*t171029*t170944*t170947*(3.2E1/9.0)+ccab2*gamma_aa[index]*t171033*t171029* \
               t170944*t170945*t171089*(8.0/3.0)+ccab2*gamma_bb[index]*t171033*t171086*t170944*t170945*t170947*(8.0/ \
               3.0)-ccab3*gcab*t171103*t171107*t170944*t170945*t170946*1.0/(t170967*t170967*t170967)*2.0+ccab2*gamma_aa[index]* \
               gamma_bb[index]*t171033*t171029*t170952*t170946*t170947*(3.2E1/9.0)-ccab4*gamma_aa[index]*gamma_bb[index]* \
               t171034*t171029*t170952*t170946*t170947*(6.4E1/3.0)+ccab3*gamma_aa[index]*gcab*t171030*t171107*t171029* \
               t170944*t170946*4.0+ccab3*gamma_bb[index]*gcab*t171030*t171103*t170944*t170946*t170947*4.0+ccab4*gamma_aa[index]* \
               t171032*t171029*t170952*t170945*t170946*t171099*(1.6E1/3.0)+ccab4*gamma_bb[index]*t171032*t171094* \
               t170952*t170945*t170946*t170947*(1.6E1/3.0)-ccab3*gamma_aa[index]*gamma_bb[index]*gcab*t171037*t171029* \
               t170944*t170945*t170947*(3.2E1/3.0)-ccab1*gamma_aa[index]*gamma_bb[index]*gcab*t171029*1.0/(t170960* \
               t170960*t170960)*t170944*t170945*t170947*(3.2E1/9.0))+(t171027+t171028+t170870-t170821*(t171073+t171039+ \
               t171075+t171076-t170881+t170968-t170988+t170860*t170871*t170846*t170882*t170865*4.0+t171038*t170871* \
               t170846*t170865*t170868+Aa*a1a*c*t170902*t170833*t170846*t170865*t170883*t170893*(2.0/3.0))+rho_b[index]* \
               (-t171022+t170940*t170846*(t171022-(t171026*1.0/(t170998*t170998)*(b2f*c*t170999*(1.0/3.0)+b4f*t171005* \
               t170828*(2.0/3.0)+b1f*c*t171006*t170999*(1.0/6.0)+b3f*c*t170991*t170999*(1.0/2.0)))/t171009+a1f*c* \
               c0f*t171024*t170999*(2.0/3.0)-a1p*c*c0p*t171023*t170999*(2.0/3.0))+a1p*c*c0p*t171023*t170999*(2.0/ \
               3.0))-c0p*t171014*t171023*2.0-t171082*t170940*t170846)*(ccab1*gamma_aa[index]*gcab*t171031*t171029* \
               (4.0/3.0)-ccab4*t171032*t171094*t170952*t170953-ccab2*t171033*t171086*t170944*t170946-ccab1*gamma_aa[index]* \
               t171035*t171029*t170944*t170945*(4.0/3.0)+ccab2*gamma_aa[index]*t171036*t171029*t170944*t170945*(8.0/ \
               3.0)+ccab3*gamma_aa[index]*gcab*t171037*t171029*t170944*t170946*4.0+ccab4*gamma_aa[index]*t171034* \
               t171029*t170952*t170945*t170946*(1.6E1/3.0)-ccab3*gcab*t171030*t171103*t170944*t170945*t170946);
        } else if (rho_a[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            v_rho_a_rho_b_[index] = 0.0;
        } else {
            v_rho_a_rho_b_[index] = 0.0;
        } 

        //V_rho_b_rho_b
        if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
            double t171109 = rho_a[index]+rho_b[index];
            double t171110 = 1.0/pow(t171109,1.0/3.0);
            double t171111 = c*t171110;
            double t171112 = sqrt(t171111);
            double t171113 = b1p*t171112;
            double t171114 = pow(t171111,3.0/2.0);
            double t171115 = b3p*t171114;
            double t171116 = c*c;
            double t171117 = 1.0/pow(t171109,2.0/3.0);
            double t171118 = b4p*t171116*t171117;
            double t171119 = b2p*c*t171110;
            double t171120 = t171113+t171115+t171118+t171119;
            double t171121 = 1.0/pow(t171109,4.0/3.0);
            double t171122 = 1.0/c0p;
            double t171123 = 1.0/t171120;
            double t171124 = t171122*t171123*(1.0/2.0);
            double t171125 = t171124+1.0;
            double t171126 = a1p*c*t171110;
            double t171127 = t171126+1.0;
            double t171128 = rho_a[index]-rho_b[index];
            double t171129 = t171128*t171128;
            double t171130 = 1.0/t171109;
            double t171131 = t171130*t171128;
            double t171132 = two_13*2.0;
            double t171133 = t171132-2.0;
            double t171134 = 1.0/t171133;
            double t171135 = 1.0/c0f;
            double t171136 = b1f*t171112;
            double t171137 = b3f*t171114;
            double t171138 = b4f*t171116*t171117;
            double t171139 = b2f*c*t171110;
            double t171140 = t171136+t171137+t171138+t171139;
            double t171141 = 1.0/t171140;
            double t171142 = t171141*t171135*(1.0/2.0);
            double t171143 = t171142+1.0;
            double t171144 = log(t171143);
            double t171145 = a1f*c*t171110;
            double t171146 = t171145+1.0;
            double t171147 = log(t171125);
            double t171158 = c0f*t171144*t171146*2.0;
            double t171159 = c0p*t171127*t171147*2.0;
            double t171148 = t171158-t171159;
            double t171149 = t171131+1.0;
            double t171150 = pow(t171149,4.0/3.0);
            double t171151 = -t171131+1.0;
            double t171152 = pow(t171151,4.0/3.0);
            double t171153 = t171150+t171152-2.0;
            double t171154 = 1.0/(t171109*t171109);
            double t171155 = t171154*t171128;
            double t171156 = t171130+t171155;
            double t171157 = 1.0/(t171109*t171109*t171109*t171109);
            double t171160 = t171129*t171129;
            double t171161 = 1.0/pow(t171109,5.0/3.0);
            double t171162 = 1.0/sqrt(t171111);
            double t171163 = 1.0/t171125;
            double t171164 = 1.0/(t171120*t171120);
            double t171165 = b4p*t171116*t171161*(2.0/3.0);
            double t171166 = b2p*c*t171121*(1.0/3.0);
            double t171167 = b1p*c*t171121*t171162*(1.0/6.0);
            double t171168 = b3p*c*t171112*t171121*(1.0/2.0);
            double t171169 = t171165+t171166+t171167+t171168;
            double t171170 = 1.0/(t171109*t171109*t171109*t171109*t171109);
            double t171171 = 1.0/d2fz0;
            double t171172 = 1.0/Aa;
            double t171173 = b1a*t171112;
            double t171174 = b3a*t171114;
            double t171175 = b4a*t171116*t171117;
            double t171176 = b2a*c*t171110;
            double t171177 = t171173+t171174+t171175+t171176;
            double t171178 = 1.0/t171177;
            double t171179 = t171172*t171178*(1.0/2.0);
            double t171180 = t171179+1.0;
            double t171181 = log(t171180);
            double t171182 = a1a*c*t171110;
            double t171183 = t171182+1.0;
            double t171184 = pow(t171149,1.0/3.0);
            double t171185 = t171156*t171184*(4.0/3.0);
            double t171186 = pow(t171151,1.0/3.0);
            double t171262 = t171156*t171186*(4.0/3.0);
            double t171187 = -t171262+t171185;
            double t171188 = t171160*t171157;
            double t171189 = t171188-1.0;
            double t171190 = 1.0/pow(rho_b[index],1.0/3.0);
            double t171191 = c*t171190;
            double t171192 = sqrt(t171191);
            double t171193 = b1f*t171192;
            double t171194 = pow(t171191,3.0/2.0);
            double t171195 = b3f*t171194;
            double t171196 = 1.0/pow(rho_b[index],2.0/3.0);
            double t171197 = b4f*t171116*t171196;
            double t171198 = b2f*c*t171190;
            double t171199 = t171193+t171195+t171197+t171198;
            double t171200 = 1.0/pow(rho_b[index],4.0/3.0);
            double t171201 = b1p*t171192;
            double t171202 = b3p*t171194;
            double t171203 = b4p*t171116*t171196;
            double t171204 = b2p*c*t171190;
            double t171205 = t171201+t171202+t171203+t171204;
            double t171206 = 1.0/pow(rho_b[index],5.0/3.0);
            double t171207 = 1.0/sqrt(t171191);
            double t171208 = 1.0/t171199;
            double t171209 = t171135*t171208*(1.0/2.0);
            double t171210 = t171209+1.0;
            double t171211 = 1.0/t171205;
            double t171212 = t171211*t171122*(1.0/2.0);
            double t171213 = t171212+1.0;
            double t171214 = a1p*c*t171190;
            double t171215 = t171214+1.0;
            double t171216 = 1.0/t171213;
            double t171217 = 1.0/(t171205*t171205);
            double t171218 = b4p*t171116*t171206*(2.0/3.0);
            double t171219 = b2p*c*t171200*(1.0/3.0);
            double t171220 = b1p*c*t171200*t171207*(1.0/6.0);
            double t171221 = b3p*c*t171200*t171192*(1.0/2.0);
            double t171222 = t171220+t171221+t171218+t171219;
            double t171223 = t171222*t171215*t171216*t171217;
            double t171224 = log(t171213);
            double t171225 = pow(2.0,1.0/3.0);
            double t171226 = t171225*2.0;
            double t171227 = t171226-2.0;
            double t171228 = log(t171210);
            double t171229 = a1f*c*t171190;
            double t171230 = t171229+1.0;
            double t171231 = gcab*gcab;
            double t171235 = 1.0/pow(rho_a[index],8.0/3.0);
            double t171236 = gamma_aa[index]*t171235*(1.0/2.0);
            double t171237 = 1.0/pow(rho_b[index],8.0/3.0);
            double t171238 = gamma_bb[index]*t171237*(1.0/2.0);
            double t171232 = t171236+t171238;
            double t171233 = t171232*t171232;
            double t171234 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t171239 = t171231*t171231;
            double t171240 = t171233*t171233;
            double t171241 = t171231*t171233*6.0;
            double t171242 = gcab*t171231*t171232*t171233*4.0;
            double t171243 = t171240*t171239;
            double t171244 = gcab*t171232*4.0;
            double t171245 = t171241+t171242+t171243+t171244+1.0;
            double t171246 = gcab*t171232;
            double t171247 = t171246+1.0;
            double t171248 = t171231*t171233;
            double t171249 = gcab*t171232*2.0;
            double t171250 = t171248+t171249+1.0;
            double t171251 = t171231*t171233*3.0;
            double t171252 = gcab*t171231*t171232*t171233;
            double t171253 = gcab*t171232*3.0;
            double t171254 = t171251+t171252+t171253+1.0;
            double t171255 = a1p*c*c0p*t171121*t171147*(2.0/3.0);
            double t171256 = 1.0/t171250;
            double t171257 = 1.0/t171254;
            double t171258 = 1.0/t171247;
            double t171259 = 1.0/t171245;
            double t171260 = 1.0/pow(t171109,7.0/3.0);
            double t171261 = 1.0/pow(t171109,8.0/3.0);
            double t171263 = 1.0/t171143;
            double t171264 = 1.0/(t171140*t171140);
            double t171265 = b4f*t171116*t171161*(2.0/3.0);
            double t171266 = b2f*c*t171121*(1.0/3.0);
            double t171267 = b1f*c*t171121*t171162*(1.0/6.0);
            double t171268 = b3f*c*t171112*t171121*(1.0/2.0);
            double t171269 = t171265+t171266+t171267+t171268;
            double t171270 = t171146*t171263*t171264*t171269;
            double t171272 = t171127*t171163*t171164*t171169;
            double t171273 = a1f*c*c0f*t171121*t171144*(2.0/3.0);
            double t171271 = t171270-t171272+t171255-t171273;
            double t171274 = t171169*t171169;
            double t171275 = 1.0/pow(t171111,3.0/2.0);
            double t171276 = b4p*t171116*t171261*(1.0E1/9.0);
            double t171277 = b2p*c*t171260*(4.0/9.0);
            double t171278 = b1p*c*t171260*t171162*(2.0/9.0);
            double t171279 = b3p*c*t171112*t171260*(2.0/3.0);
            double t171280 = b3p*t171116*t171162*t171261*(1.0/1.2E1);
            double t171281 = t171280+t171276+t171277+t171278+t171279-b1p*t171116*t171261*t171275*(1.0/3.6E1);
            double t171282 = 1.0/(t171120*t171120*t171120);
            double t171283 = t171127*t171163*t171282*t171274*2.0;
            double t171284 = t171269*t171269;
            double t171285 = 1.0/(t171125*t171125);
            double t171286 = 1.0/(t171120*t171120*t171120*t171120);
            double t171287 = t171154*2.0;
            double t171288 = 1.0/(t171109*t171109*t171109);
            double t171289 = t171128*t171288*2.0;
            double t171290 = t171287+t171289;
            double t171291 = t171156*t171156;
            double t171292 = a1p*c*c0p*t171260*t171147*(8.0/9.0);
            double t171293 = 1.0/(t171109*t171109*t171109*t171109*t171109*t171109);
            double t171294 = t171128*t171129*t171157*4.0;
            double t171295 = t171160*t171170*4.0;
            double t171296 = t171294+t171295;
            double t171297 = t171290*t171184*(4.0/3.0);
            double t171298 = 1.0/pow(t171149,2.0/3.0);
            double t171299 = t171291*t171298*(4.0/9.0);
            double t171300 = 1.0/pow(t171151,2.0/3.0);
            double t171301 = t171300*t171291*(4.0/9.0);
            double t171302 = t171301+t171297+t171299-t171290*t171186*(4.0/3.0);
            double t171303 = 1.0/t171180;
            double t171304 = 1.0/(t171177*t171177);
            double t171305 = b4a*t171116*t171161*(2.0/3.0);
            double t171306 = b2a*c*t171121*(1.0/3.0);
            double t171307 = b1a*c*t171121*t171162*(1.0/6.0);
            double t171308 = b3a*c*t171112*t171121*(1.0/2.0);
            double t171309 = t171305+t171306+t171307+t171308;
            double t171310 = t171309*t171309;
            double t171311 = 1.0/t171210;
            double t171312 = b4f*t171116*t171206*(2.0/3.0);
            double t171313 = b2f*c*t171200*(1.0/3.0);
            double t171314 = b1f*c*t171200*t171207*(1.0/6.0);
            double t171315 = b3f*c*t171200*t171192*(1.0/2.0);
            double t171316 = t171312+t171313+t171314+t171315;
            double t171317 = 1.0/(t171199*t171199);
            double t171318 = 1.0/pow(rho_b[index],7.0/3.0);
            double t171319 = 1.0/pow(t171191,3.0/2.0);
            double t171320 = t171316*t171316;
            double t171321 = t171222*t171222;
            double t171322 = 1.0/(t171205*t171205*t171205);
            double t171323 = t171321*t171322*t171215*t171216*2.0;
            double t171324 = b4p*t171116*t171237*(1.0E1/9.0);
            double t171325 = b2p*c*t171318*(4.0/9.0);
            double t171326 = b3p*t171116*t171207*t171237*(1.0/1.2E1);
            double t171327 = b1p*c*t171207*t171318*(2.0/9.0);
            double t171328 = b3p*c*t171192*t171318*(2.0/3.0);
            double t171445 = b1p*t171116*t171237*t171319*(1.0/3.6E1);
            double t171329 = t171324+t171325+t171326+t171327+t171328-t171445;
            double t171330 = 1.0/(t171213*t171213);
            double t171331 = 1.0/(t171205*t171205*t171205*t171205);
            double t171332 = a1p*c*c0p*t171224*t171318*(8.0/9.0);
            double t171333 = a1f*c*c0f*t171200*t171228*(2.0/3.0);
            double t171334 = a1p*c*c0p*t171200*t171224*(2.0/3.0);
            double t171406 = t171230*t171311*t171316*t171317;
            double t171335 = t171223+t171333-t171334-t171406;
            double t171336 = gamma_bb[index]*gamma_bb[index];
            double t171337 = gcaa*gcaa;
            double t171338 = t171336*t171336;
            double t171339 = t171337*t171337;
            double t171340 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t171341 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t171342 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t171343 = 1.0/pow(rho_a[index],1.0/3.0);
            double t171344 = c*t171343;
            double t171345 = sqrt(t171344);
            double t171346 = pow(t171344,3.0/2.0);
            double t171347 = 1.0/pow(rho_a[index],2.0/3.0);
            double t171348 = b1p*t171345;
            double t171349 = b3p*t171346;
            double t171350 = b4p*t171116*t171347;
            double t171351 = b2p*c*t171343;
            double t171352 = t171350+t171351+t171348+t171349;
            double t171353 = 1.0/t171352;
            double t171354 = t171122*t171353*(1.0/2.0);
            double t171355 = t171354+1.0;
            double t171356 = log(t171355);
            double t171357 = a1p*c*t171343;
            double t171358 = t171357+1.0;
            double t171359 = c0p*t171356*t171358*2.0;
            double t171360 = c0f*t171230*t171228*2.0;
            double t171362 = c0p*t171215*t171224*2.0;
            double t171361 = t171360-t171362;
            double t171363 = t171160*t171134*t171153*t171148*t171157;
            double t171364 = Aa*t171134*t171153*t171171*t171181*t171183*t171189*2.0;
            double t171365 = gamma_bb[index]*gcab*t171234*(1.6E1/3.0);
            double t171366 = gamma_bb[index]*gcab*t171231*t171233*t171234*1.6E1;
            double t171367 = gamma_bb[index]*t171232*t171233*t171234*t171239*(1.6E1/3.0);
            double t171368 = gamma_bb[index]*t171231*t171232*t171234*1.6E1;
            double t171369 = t171365+t171366+t171367+t171368;
            double t171370 = 1.0/(t171247*t171247);
            double t171371 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t171372 = gamma_bb[index]*gcab*t171234*(8.0/3.0);
            double t171373 = gamma_bb[index]*t171231*t171232*t171234*(8.0/3.0);
            double t171374 = t171372+t171373;
            double t171375 = 1.0/(t171254*t171254);
            double t171376 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t171377 = 1.0/(t171245*t171245);
            double t171378 = 1.0/(t171250*t171250);
            double t171379 = gamma_bb[index]*gcab*t171234*4.0;
            double t171380 = gamma_bb[index]*gcab*t171231*t171233*t171234*4.0;
            double t171381 = gamma_bb[index]*t171231*t171232*t171234*8.0;
            double t171382 = t171380+t171381+t171379;
            double t171383 = t171134*t171361*t171227;
            double t171384 = t171362+t171383;
            double t171385 = gamma_bb[index]*gcaa*t171237*4.0;
            double t171386 = gamma_bb[index]*gcaa*t171341*t171336*t171337*4.0;
            double t171387 = t171342*t171336*t171337*6.0;
            double t171388 = t171340*t171338*t171339;
            double t171389 = t171385+t171386+t171387+t171388+1.0;
            double t171390 = 1.0/t171389;
            double t171391 = gamma_bb[index]*gcaa*t171237;
            double t171392 = t171391+1.0;
            double t171393 = 1.0/t171392;
            double t171394 = gamma_bb[index]*gcaa*t171237*3.0;
            double t171395 = gamma_bb[index]*gcaa*t171341*t171336*t171337;
            double t171396 = t171342*t171336*t171337*3.0;
            double t171397 = t171394+t171395+t171396+1.0;
            double t171398 = 1.0/t171397;
            double t171399 = gamma_bb[index]*gcaa*t171237*2.0;
            double t171400 = t171342*t171336*t171337;
            double t171401 = t171400+t171399+1.0;
            double t171402 = 1.0/t171401;
            double t171403 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t171404 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t171405 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t171407 = t171134*t171227*t171335;
            double t171408 = ccaa4*t171405*t171390*t171338*t171339*(3.2E1/3.0);
            double t171409 = ccaa1*gamma_bb[index]*gcaa*t171234*t171393*(8.0/3.0);
            double t171410 = ccaa3*gamma_bb[index]*gcaa*t171404*t171336*t171337*t171398*8.0;
            double t171411 = ccaa2*t171402*t171403*t171336*t171337*(1.6E1/3.0);
            double t171412 = 1.0/(t171392*t171392);
            double t171413 = gamma_bb[index]*gcaa*t171234*8.0;
            double t171414 = gamma_bb[index]*gcaa*t171404*t171336*t171337*8.0;
            double t171415 = t171403*t171336*t171337*1.6E1;
            double t171416 = t171413+t171414+t171415;
            double t171417 = 1.0/(t171397*t171397);
            double t171418 = gamma_bb[index]*gcaa*t171234*(3.2E1/3.0);
            double t171419 = gamma_bb[index]*gcaa*t171404*t171336*t171337*3.2E1;
            double t171420 = t171403*t171336*t171337*3.2E1;
            double t171421 = t171405*t171338*t171339*(3.2E1/3.0);
            double t171422 = t171420+t171421+t171418+t171419;
            double t171423 = 1.0/(t171389*t171389);
            double t171424 = gamma_bb[index]*gcaa*t171234*(1.6E1/3.0);
            double t171425 = t171403*t171336*t171337*(1.6E1/3.0);
            double t171426 = t171424+t171425;
            double t171427 = 1.0/(t171401*t171401);
            double t171428 = t171410+t171411+t171408+t171409-ccaa1*t171403*t171412*t171336*t171337*(8.0/3.0)- \
               ccaa4*t171340*t171422*t171423*t171338*t171339-ccaa2*t171342*t171336*t171426*t171337*t171427-ccaa3* \
               gamma_bb[index]*gcaa*t171341*t171416*t171336*t171417*t171337;
            double t171429 = -t171223+t171334+t171407;
            double t171430 = 1.0/pow(rho_b[index],1.0E1);
            double t171431 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t171432 = ccaa4*t171340*t171390*t171338*t171339;
            double t171433 = ccaa1*gamma_bb[index]*gcaa*t171237*t171393;
            double t171434 = ccaa3*gamma_bb[index]*gcaa*t171341*t171336*t171337*t171398;
            double t171435 = ccaa2*t171402*t171342*t171336*t171337;
            double t171436 = ccaa0+t171432+t171433+t171434+t171435;
            double t171437 = 1.0/(t171199*t171199*t171199);
            double t171438 = b4f*t171116*t171237*(1.0E1/9.0);
            double t171439 = b2f*c*t171318*(4.0/9.0);
            double t171440 = b3f*t171116*t171207*t171237*(1.0/1.2E1);
            double t171441 = b1f*c*t171207*t171318*(2.0/9.0);
            double t171442 = b3f*c*t171192*t171318*(2.0/3.0);
            double t171443 = t171440+t171441+t171442+t171438+t171439-b1f*t171116*t171237*t171319*(1.0/3.6E1);
            double t171444 = t171230*t171311*t171317*t171443;
            double t171446 = t171215*t171216*t171217*t171329;
            double t171447 = 1.0/(t171210*t171210);
            double t171448 = 1.0/(t171199*t171199*t171199*t171199);
            double t171449 = t171230*t171320*t171135*t171447*t171448*(1.0/2.0);
            double t171450 = t171122*t171321*t171330*t171331*t171215*(1.0/2.0);
            double t171451 = a1f*c*t171200*t171311*t171316*t171317*(2.0/3.0);
            double t171452 = a1p*c*t171200*t171222*t171216*t171217*(2.0/3.0);
            double t171453 = gx*gx;
            double t171454 = t171453*t171453;
            double t171455 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t171456 = gamma_bb[index]*gx*t171237*4.0;
            double t171457 = gamma_bb[index]*gx*t171341*t171336*t171453*4.0;
            double t171458 = t171342*t171336*t171453*6.0;
            double t171459 = t171340*t171454*t171338;
            double t171460 = t171456+t171457+t171458+t171459+1.0;
            double t171461 = 1.0/t171460;
            double t171462 = cx4*t171340*t171461*t171454*t171338*(4.190715359480463E15/2.251799813685248E15);
            double t171463 = gamma_bb[index]*gx*t171237;
            double t171464 = t171463+1.0;
            double t171465 = 1.0/t171464;
            double t171466 = cx1*gamma_bb[index]*gx*t171237*t171465*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t171467 = gamma_bb[index]*gx*t171237*3.0;
            double t171468 = gamma_bb[index]*gx*t171341*t171336*t171453;
            double t171469 = t171342*t171336*t171453*3.0;
            double t171470 = t171467+t171468+t171469+1.0;
            double t171471 = 1.0/t171470;
            double t171472 = cx3*gamma_bb[index]*gx*t171341*t171336*t171453*t171471*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t171473 = gamma_bb[index]*gx*t171237*2.0;
            double t171474 = t171342*t171336*t171453;
            double t171475 = t171473+t171474+1.0;
            double t171476 = 1.0/t171475;
            double t171477 = cx2*t171342*t171336*t171453*t171476*(4.190715359480463E15/2.251799813685248E15);
            double t171478 = t171462+t171472+t171455+t171466+t171477;
            double t171479 = 1.0/(omega*omega);
            double t171480 = pow(rho_b[index],2.0/3.0);
            double t171481 = 1.0/t171478;
            double t171500 = t171480*t171481*t171479*(1.4000771998813E29/4.951760157141521E27);
            double t171482 = exp(-t171500);
            double t171483 = sqrt(t171478);
            double t171491 = gamma_bb[index]*gx*t171234*(3.2E1/3.0);
            double t171492 = gamma_bb[index]*gx*t171404*t171336*t171453*3.2E1;
            double t171493 = t171403*t171336*t171453*3.2E1;
            double t171494 = t171405*t171454*t171338*(3.2E1/3.0);
            double t171484 = t171491+t171492+t171493+t171494;
            double t171496 = gamma_bb[index]*gx*t171234*(1.6E1/3.0);
            double t171497 = t171403*t171336*t171453*(1.6E1/3.0);
            double t171485 = t171496+t171497;
            double t171486 = 1.0/(t171470*t171470);
            double t171487 = gamma_bb[index]*gx*t171234*8.0;
            double t171488 = gamma_bb[index]*gx*t171404*t171336*t171453*8.0;
            double t171489 = t171403*t171336*t171453*1.6E1;
            double t171490 = t171487+t171488+t171489;
            double t171495 = 1.0/(t171460*t171460);
            double t171498 = 1.0/(t171475*t171475);
            double t171499 = pow(rho_b[index],1.0/3.0);
            double t171501 = 1.0/omega;
            double t171502 = 1.0/sqrt(t171478);
            double t171503 = 1.0/(t171464*t171464);
            double t171504 = omega*omega;
            double t171505 = t171482-1.0;
            double t171506 = t171504*t171505*t171196*t171478*(2.475880078570761E27/1.4000771998813E29);
            double t171507 = t171506-t171482+3.0/2.0;
            double t171508 = cx4*t171405*t171461*t171454*t171338*(1.396905119826821E15/7.0368744177664E13);
            double t171509 = cx1*gamma_bb[index]*gx*t171234*t171465*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t171510 = cx3*gamma_bb[index]*gx*t171404*t171336*t171453*t171471*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t171511 = cx2*t171403*t171336*t171453*t171476*(1.396905119826821E15/1.40737488355328E14);
            double t171513 = cx1*t171403*t171503*t171336*t171453*(1.396905119826821E15/2.81474976710656E14);
            double t171514 = cx3*gamma_bb[index]*gx*t171341*t171336*t171453*t171490*t171486*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t171515 = cx4*t171340*t171454*t171338*t171484*t171495*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t171516 = cx2*t171342*t171336*t171453*t171485*t171498*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t171512 = t171510+t171511-t171513-t171514-t171515-t171516+t171508+t171509;
            double t171517 = t171190*t171481*t171479*(1.4000771998813E29/7.427640235712282E27);
            double t171518 = 1.0/(t171478*t171478);
            double t171519 = t171512*t171480*t171518*t171479*(1.4000771998813E29/4.951760157141521E27);
            double t171520 = t171517+t171519;
            double t171521 = t171501*t171502*t171499*(3.74176054803257E14/7.0368744177664E13);
            double t171522 = erf(t171521);
            double t171523 = t171522*(3.991211251234741E15/2.251799813685248E15);
            double t171525 = omega*t171190*t171507*t171483*(7.0368744177664E13/3.74176054803257E14);
            double t171524 = t171523-t171525;
            double t171526 = omega*t171190*t171524*t171483*(2.81474976710656E14/1.122528164409771E15);
            double t171527 = t171526-1.0;
            double t171528 = cx4*t171340*t171461*t171454*t171338;
            double t171529 = cx1*gamma_bb[index]*gx*t171237*t171465;
            double t171530 = cx3*gamma_bb[index]*gx*t171341*t171336*t171453*t171471;
            double t171531 = cx2*t171342*t171336*t171453*t171476;
            double t171532 = cx0+t171530+t171531+t171528+t171529;
            double t171533 = pow(rho_b[index],4.0/3.0);
            double t171534 = 1.0/sqrt(3.141592653589793);
            double t171535 = t171501*t171502*t171196*(3.74176054803257E14/2.11106232532992E14);
            double t171536 = 1.0/pow(t171478,3.0/2.0);
            double t171537 = t171501*t171512*t171536*t171499*(3.74176054803257E14/1.40737488355328E14);
            double t171538 = t171535+t171537;
            double t171539 = t171534*t171482*t171538*(3.991211251234741E15/1.125899906842624E15);
            double t171540 = omega*t171200*t171507*t171483*(7.0368744177664E13/1.122528164409771E15);
            double t171541 = t171206*t171504*t171505*t171478*(4.951760157141521E27/4.2002315996439E29);
            double t171542 = t171512*t171504*t171505*t171196*(2.475880078570761E27/1.4000771998813E29);
            double t171543 = t171520*t171504*t171482*t171196*t171478*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t171567 = t171520*t171482;
            double t171544 = t171541+t171542+t171543-t171567;
            double t171545 = omega*t171190*t171544*t171483*(7.0368744177664E13/3.74176054803257E14);
            double t171546 = omega*t171502*t171512*t171190*t171507*(3.5184372088832E13/3.74176054803257E14);
            double t171547 = t171540+t171545+t171546+t171539;
            double t171548 = 1.0/(t171464*t171464*t171464);
            double t171549 = t171484*t171484;
            double t171550 = 1.0/(t171460*t171460*t171460);
            double t171551 = t171485*t171485;
            double t171552 = 1.0/(t171475*t171475*t171475);
            double t171553 = gamma_bb[index]*gx*t171376*(8.8E1/3.0);
            double t171554 = gamma_bb[index]*gx*t171430*t171336*t171453*7.2E1;
            double t171555 = t171371*t171336*t171453*(3.04E2/3.0);
            double t171556 = t171553+t171554+t171555;
            double t171557 = t171490*t171490;
            double t171558 = 1.0/(t171470*t171470*t171470);
            double t171559 = gamma_bb[index]*gx*t171376*(3.52E2/9.0);
            double t171560 = gamma_bb[index]*gx*t171430*t171336*t171453*2.88E2;
            double t171561 = t171371*t171336*t171453*(6.08E2/3.0);
            double t171562 = t171431*t171454*t171338*(1.12E3/9.0);
            double t171563 = t171560+t171561+t171562+t171559;
            double t171564 = gamma_bb[index]*gx*t171376*(1.76E2/9.0);
            double t171565 = t171371*t171336*t171453*(3.04E2/9.0);
            double t171566 = t171564+t171565;
            double t171568 = t171512*t171512;
            double t171569 = cx4*t171431*t171461*t171454*t171338*(4.889167919393874E16/2.11106232532992E14);
            double t171570 = cx1*gamma_bb[index]*gx*t171465*t171376*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t171571 = cx3*gamma_bb[index]*gx*t171430*t171336*t171453*t171471*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t171572 = cx2*t171371*t171336*t171453*t171476*(2.65411972767096E16/4.22212465065984E14);
            double t171573 = cx1*gamma_bb[index]*gx*t171430*t171336*t171453*t171548*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t171574 = cx4*t171340*t171550*t171454*t171338*t171549*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t171575 = cx2*t171342*t171551*t171336*t171453*t171552*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t171576 = cx3*gamma_bb[index]*gx*t171341*t171336*t171453*t171557*t171558*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t171578 = cx1*t171503*t171371*t171336*t171453*(1.257214607844139E16/2.81474976710656E14);
            double t171579 = cx3*gamma_bb[index]*gx*t171404*t171336*t171453*t171490*t171486*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t171580 = cx3*gamma_bb[index]*gx*t171341*t171336*t171453*t171556*t171486*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t171581 = cx4*t171405*t171454*t171338*t171484*t171495*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t171582 = cx4*t171340*t171454*t171338*t171563*t171495*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t171583 = cx2*t171403*t171336*t171453*t171485*t171498*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t171584 = cx2*t171342*t171336*t171453*t171566*t171498*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t171577 = t171570+t171571-t171580+t171572-t171581+t171573-t171582+t171574-t171583+t171575- \
               t171584+t171576+t171569-t171578-t171579;
            double t171585 = t171200*t171481*t171479*(1.4000771998813E29/2.228292070713684E28);
            double t171586 = 1.0/(t171478*t171478*t171478);
            double t171587 = t171480*t171518*t171577*t171479*(1.4000771998813E29/4.951760157141521E27);
            double t171588 = t171585+t171587-t171512*t171190*t171518*t171479*(1.4000771998813E29/3.713820117856141E27) \
               -t171480*t171568*t171586*t171479*(1.4000771998813E29/2.475880078570761E27);
            double t171589 = t171520*t171520;
            double t171590 = omega*t171200*t171524*t171483*(2.81474976710656E14/3.367584493229313E15);
            double t171591 = omega*t171502*t171512*t171190*t171524*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t171592 = t171590+t171591-omega*t171190*t171483*t171547*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t171593 = cx4*t171405*t171461*t171454*t171338*(3.2E1/3.0);
            double t171594 = cx1*gamma_bb[index]*gx*t171234*t171465*(8.0/3.0);
            double t171595 = cx3*gamma_bb[index]*gx*t171404*t171336*t171453*t171471*8.0;
            double t171596 = cx2*t171403*t171336*t171453*t171476*(1.6E1/3.0);
            double t171597 = t171593+t171594+t171595+t171596-cx1*t171403*t171503*t171336*t171453*(8.0/3.0)-cx2* \
               t171342*t171336*t171453*t171485*t171498-cx4*t171340*t171454*t171338*t171484*t171495-cx3*gamma_bb[index]* \
               gx*t171341*t171336*t171453*t171490*t171486;
            v_rho_b_rho_b_[index] = (ccab0+ccab1*gcab*t171232*t171258+ccab2*t171231*t171233*t171256+ccab4*t171240* \
               t171239*t171259+ccab3*gcab*t171231*t171232*t171233*t171257)*(-rho_b[index]*(-t171323-t171332+t171450+ \
               t171452+t171446+t171134*t171227*(t171323+t171332+t171451+t171444+t171449-t171230*t171311*t171320*t171437* \
               2.0-t171215*t171216*t171217*t171329-a1f*c*c0f*t171228*t171318*(8.0/9.0)-t171122*t171321*t171330*t171331* \
               t171215*(1.0/2.0)-a1p*c*t171200*t171222*t171216*t171217*(2.0/3.0)))-t171109*(t171283+t171292-t171127* \
               t171163*t171164*t171281-t171160*t171134*t171153*t171157*(t171283+t171292-t171127*t171163*t171164*t171281- \
               1.0/(t171140*t171140*t171140)*t171146*t171263*t171284*2.0+t171146*t171263*t171264*(b2f*c*t171260*(4.0/ \
               9.0)+b4f*t171116*t171261*(1.0E1/9.0)+b1f*c*t171260*t171162*(2.0/9.0)+b3f*c*t171112*t171260*(2.0/3.0) \
               -b1f*t171116*t171261*t171275*(1.0/3.6E1)+b3f*t171116*t171162*t171261*(1.0/1.2E1))+1.0/(t171140*t171140* \
               t171140*t171140)*1.0/(t171143*t171143)*t171135*t171146*t171284*(1.0/2.0)-a1f*c*c0f*t171260*t171144* \
               (8.0/9.0)-t171122*t171127*t171274*t171285*t171286*(1.0/2.0)+a1f*c*t171121*t171263*t171264*t171269* \
               (2.0/3.0)-a1p*c*t171121*t171163*t171164*t171169*(2.0/3.0))-t171160*t171134*t171170*t171153*t171271* \
               8.0+t171302*t171160*t171134*t171148*t171157+t171160*t171134*t171153*t171148*t171293*2.0E1+t171160* \
               t171134*t171170*t171148*t171187*8.0-t171160*t171134*t171271*t171157*t171187*2.0+t171134*t171153*t171129* \
               t171148*t171157*1.2E1-t171122*t171127*t171274*t171285*t171286*(1.0/2.0)+t171134*t171170*t171153*t171128* \
               t171129*t171148*3.2E1-t171134*t171153*t171271*t171128*t171129*t171157*8.0+t171134*t171128*t171129* \
               t171148*t171157*t171187*8.0-a1p*c*t171121*t171163*t171164*t171169*(2.0/3.0)+Aa*t171302*t171134*t171171* \
               t171181*t171183*t171189*2.0+Aa*t171134*t171171*t171181*t171183*t171187*t171296*4.0+Aa*t171134*t171153* \
               t171171*t171181*t171183*(t171160*t171293*2.0E1+t171129*t171157*1.2E1+t171170*t171128*t171129*3.2E1) \
               *2.0-t171303*t171304*t171134*t171153*t171171*t171183*t171309*t171296*2.0-t171303*t171304*t171134*t171171* \
               t171183*t171309*t171187*t171189*2.0+t171310*t171303*t171134*t171153*t171171*t171183*1.0/(t171177*t171177* \
               t171177)*t171189*2.0-t171303*t171304*t171134*t171153*t171171*t171183*t171189*(b2a*c*t171260*(4.0/9.0) \
               +b4a*t171116*t171261*(1.0E1/9.0)+b1a*c*t171260*t171162*(2.0/9.0)+b3a*c*t171112*t171260*(2.0/3.0)-b1a* \
               t171116*t171261*t171275*(1.0/3.6E1)+b3a*t171116*t171162*t171261*(1.0/1.2E1))+Aa*a1a*c*t171121*t171134* \
               t171153*t171171*t171181*t171296*(4.0/3.0)+Aa*a1a*c*t171134*t171260*t171153*t171171*t171181*t171189* \
               (8.0/9.0)+Aa*a1a*c*t171121*t171134*t171171*t171181*t171187*t171189*(4.0/3.0)-t171310*t171134*t171153* \
               t171171*1.0/(t171180*t171180)*t171172*t171183*1.0/(t171177*t171177*t171177*t171177)*t171189*(1.0/2.0) \
               -a1a*c*t171121*t171303*t171304*t171134*t171153*t171171*t171309*t171189*(2.0/3.0))-t171134*t171227* \
               t171335*2.0+t171222*t171215*t171216*t171217*2.0-t171127*t171163*t171164*t171169*2.0-a1p*c*c0p*t171200* \
               t171224*(4.0/3.0)+a1p*c*c0p*t171121*t171147*(4.0/3.0)+t171160*t171134*t171170*t171153*t171148*8.0- \
               t171160*t171134*t171153*t171271*t171157*2.0+t171160*t171134*t171148*t171157*t171187*2.0+t171134*t171153* \
               t171128*t171129*t171148*t171157*8.0+Aa*t171134*t171153*t171171*t171181*t171183*t171296*4.0+Aa*t171134* \
               t171171*t171181*t171183*t171187*t171189*4.0-t171303*t171304*t171134*t171153*t171171*t171183*t171309* \
               t171189*2.0+Aa*a1a*c*t171121*t171134*t171153*t171171*t171181*t171189*(4.0/3.0))+(rho_b[index]*t171384+ \
               rho_a[index]*(t171359-t171134*t171227*(t171359-c0f*log((t171135*(1.0/2.0))/(b1f*t171345+b3f*t171346+ \
               b2f*c*t171343+b4f*t171116*t171347)+1.0)*(a1f*c*t171343+1.0)*2.0))-t171109*(t171363+t171364+t171159) \
               )*(-ccab2*t171231*t171233*t171378*(gamma_bb[index]*gcab*t171376*(8.8E1/9.0)+t171231*t171371*t171336* \
               (3.2E1/9.0)+gamma_bb[index]*t171231*t171232*t171376*(8.8E1/9.0))+ccab2*t171231*1.0/(t171250*t171250* \
               t171250)*t171233*(t171374*t171374)*2.0+ccab4*t171240*1.0/(t171245*t171245*t171245)*t171239*(t171369* \
               t171369)*2.0+ccab1*gamma_bb[index]*gcab*t171258*t171376*(4.4E1/9.0)-ccab1*t171231*t171370*t171371* \
               t171336*(3.2E1/9.0)+ccab2*t171231*t171371*t171336*t171256*(3.2E1/9.0)-ccab4*t171240*t171239*t171377* \
               (gamma_bb[index]*gcab*t171376*(1.76E2/9.0)+t171231*t171371*t171336*(6.4E1/3.0)+gamma_bb[index]*t171231* \
               t171232*t171376*(1.76E2/3.0)+t171233*t171371*t171336*t171239*(6.4E1/3.0)+gamma_bb[index]*gcab*t171231* \
               t171233*t171376*(1.76E2/3.0)+gamma_bb[index]*t171232*t171233*t171239*t171376*(1.76E2/9.0)+gcab*t171231* \
               t171232*t171371*t171336*(1.28E2/3.0))+ccab4*t171233*t171371*t171336*t171239*t171259*(6.4E1/3.0)-ccab1* \
               gamma_bb[index]*t171231*t171232*t171370*t171376*(4.4E1/9.0)+ccab2*gamma_bb[index]*t171231*t171232* \
               t171256*t171376*(8.8E1/9.0)+ccab3*gcab*t171231*t171232*t171233*1.0/(t171254*t171254*t171254)*(t171382* \
               t171382)*2.0+ccab3*gamma_bb[index]*gcab*t171231*t171233*t171257*t171376*(4.4E1/3.0)-ccab2*gamma_bb[index]* \
               t171231*t171232*t171234*t171374*t171378*(1.6E1/3.0)+ccab4*gamma_bb[index]*t171232*t171233*t171239* \
               t171259*t171376*(1.76E2/9.0)+ccab3*gcab*t171231*t171232*t171371*t171336*t171257*(3.2E1/3.0)+ccab1* \
               gcab*t171231*t171232*t171371*t171336*1.0/(t171247*t171247*t171247)*(3.2E1/9.0)-ccab3*gcab*t171231* \
               t171232*t171233*t171375*(gamma_bb[index]*gcab*t171376*(4.4E1/3.0)+t171231*t171371*t171336*(3.2E1/3.0) \
               +gamma_bb[index]*t171231*t171232*t171376*(8.8E1/3.0)+gamma_bb[index]*gcab*t171231*t171233*t171376* \
               (4.4E1/3.0)+gcab*t171231*t171232*t171371*t171336*(3.2E1/3.0))-ccab3*gamma_bb[index]*gcab*t171231*t171233* \
               t171234*t171382*t171375*8.0-ccab4*gamma_bb[index]*t171232*t171233*t171234*t171239*t171377*t171369* \
               (3.2E1/3.0))+(t171363+t171364+t171159+rho_b[index]*(-t171223+t171334+t171134*t171227*(t171223+t171333- \
               t171230*t171311*t171316*t171317-a1p*c*c0p*t171200*t171224*(2.0/3.0)))-t171109*(t171255-t171127*t171163* \
               t171164*t171169+t171160*t171134*t171170*t171153*t171148*4.0-t171160*t171134*t171153*t171271*t171157+ \
               t171160*t171134*t171148*t171157*t171187+t171134*t171153*t171128*t171129*t171148*t171157*4.0+Aa*t171134* \
               t171153*t171171*t171181*t171183*t171296*2.0+Aa*t171134*t171171*t171181*t171183*t171187*t171189*2.0- \
               t171303*t171304*t171134*t171153*t171171*t171183*t171309*t171189+Aa*a1a*c*t171121*t171134*t171153*t171171* \
               t171181*t171189*(2.0/3.0))-c0p*t171215*t171224*2.0-t171134*t171361*t171227)*(ccab1*gamma_bb[index]* \
               gcab*t171234*t171258*(4.0/3.0)-ccab2*t171231*t171233*t171374*t171378-ccab4*t171240*t171239*t171377* \
               t171369-ccab1*gamma_bb[index]*t171231*t171232*t171234*t171370*(4.0/3.0)+ccab2*gamma_bb[index]*t171231* \
               t171232*t171234*t171256*(8.0/3.0)+ccab3*gamma_bb[index]*gcab*t171231*t171233*t171234*t171257*4.0+ccab4* \
               gamma_bb[index]*t171232*t171233*t171234*t171239*t171259*(1.6E1/3.0)-ccab3*gcab*t171231*t171232*t171233* \
               t171382*t171375)*2.0+t171436*t171429*2.0+t171428*t171384*2.0-rho_b[index]*t171384*(ccaa1*gamma_bb[index]* \
               gcaa*t171393*t171376*(8.8E1/9.0)-ccaa1*t171412*t171371*t171336*t171337*2.4E1+ccaa2*t171402*t171371* \
               t171336*t171337*(3.04E2/9.0)+ccaa4*t171431*t171390*t171338*t171339*(1.12E3/9.0)-ccaa2*t171403*t171336* \
               t171426*t171337*t171427*(3.2E1/3.0)-ccaa4*t171422*t171405*t171423*t171338*t171339*(6.4E1/3.0)-ccaa2* \
               t171342*t171336*t171337*t171427*(gamma_bb[index]*gcaa*t171376*(1.76E2/9.0)+t171371*t171336*t171337* \
               (3.04E2/9.0))-ccaa4*t171340*t171423*t171338*t171339*(gamma_bb[index]*gcaa*t171376*(3.52E2/9.0)+t171371* \
               t171336*t171337*(6.08E2/3.0)+t171431*t171338*t171339*(1.12E3/9.0)+gamma_bb[index]*gcaa*t171430*t171336* \
               t171337*2.88E2)+ccaa2*1.0/(t171401*t171401*t171401)*t171342*t171336*(t171426*t171426)*t171337*2.0+ \
               ccaa4*t171340*(t171422*t171422)*t171338*t171339*1.0/(t171389*t171389*t171389)*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t171430*t171336*t171337*t171398*7.2E1+ccaa1*gamma_bb[index]*gcaa*t171430*t171336*t171337*1.0/ \
               (t171392*t171392*t171392)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*t171341*(t171416*t171416)*t171336* \
               t171337*1.0/(t171397*t171397*t171397)*2.0-ccaa3*gamma_bb[index]*gcaa*t171341*t171336*t171417*t171337* \
               (gamma_bb[index]*gcaa*t171376*(8.8E1/3.0)+t171371*t171336*t171337*(3.04E2/3.0)+gamma_bb[index]*gcaa* \
               t171430*t171336*t171337*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t171404*t171416*t171336*t171417*t171337* \
               1.6E1)+rho_b[index]*t171436*(-t171323-t171332+t171450+t171452+t171446+t171134*t171227*(t171323+t171332- \
               t171450+t171451-t171452+t171444-t171446+t171449-t171230*t171311*t171320*t171437*2.0-a1f*c*c0f*t171228* \
               t171318*(8.0/9.0)))-rho_b[index]*t171428*t171429*2.0-c0*t171532*t171527*t171196*(4.0/9.0)+c0*t171532* \
               t171592*t171499*(8.0/3.0)-c0*t171533*t171592*t171597*2.0+c0*t171527*t171597*t171499*(8.0/3.0)+c0*t171532* \
               t171533*(omega*t171200*t171483*t171547*(5.62949953421312E14/3.367584493229313E15)-omega*t171524*t171318* \
               t171483*(1.125899906842624E15/1.010275347968794E16)+omega*t171190*t171483*(t171534*t171482*(t171501* \
               t171502*t171206*(3.74176054803257E14/3.16659348799488E14)-t171501*t171512*t171536*t171196*(3.74176054803257E14/ \
               2.11106232532992E14)+t171501*t171536*t171577*t171499*(3.74176054803257E14/1.40737488355328E14)-t171501* \
               1.0/pow(t171478,5.0/2.0)*t171568*t171499*(1.122528164409771E15/2.81474976710656E14))*(3.991211251234741E15/ \
               1.125899906842624E15)+omega*t171200*t171544*t171483*(1.40737488355328E14/1.122528164409771E15)+omega* \
               t171318*t171507*t171483*(2.81474976710656E14/3.367584493229313E15)+t171520*t171534*t171482*t171538* \
               (3.991211251234741E15/1.125899906842624E15)+omega*t171190*t171483*(-t171482*t171588-t171482*t171589+ \
               t171206*t171512*t171504*t171505*(9.903520314283042E27/4.2002315996439E29)+t171504*t171505*t171237* \
               t171478*(2.475880078570761E28/1.26006947989317E30)+t171504*t171505*t171196*t171577*(2.475880078570761E27/ \
               1.4000771998813E29)+t171520*t171512*t171504*t171482*t171196*(4.951760157141521E27/1.4000771998813E29) \
               +t171520*t171206*t171504*t171482*t171478*(9.903520314283042E27/4.2002315996439E29)+t171504*t171482* \
               t171196*t171478*t171588*(2.475880078570761E27/1.4000771998813E29)+t171504*t171482*t171196*t171478* \
               t171589*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/3.74176054803257E14)+omega* \
               t171200*t171502*t171512*t171507*(7.0368744177664E13/1.122528164409771E15)+omega*t171502*t171512*t171190* \
               t171544*(7.0368744177664E13/3.74176054803257E14)+omega*t171502*t171190*t171507*t171577*(3.5184372088832E13/ \
               3.74176054803257E14)-omega*t171190*t171507*t171536*t171568*(1.7592186044416E13/3.74176054803257E14) \
               )*(2.81474976710656E14/1.122528164409771E15)-omega*t171200*t171502*t171512*t171524*(2.81474976710656E14/ \
               3.367584493229313E15)+omega*t171502*t171512*t171190*t171547*(2.81474976710656E14/1.122528164409771E15) \
               -omega*t171502*t171190*t171524*t171577*(1.40737488355328E14/1.122528164409771E15)+omega*t171190*t171524* \
               t171536*t171568*(7.0368744177664E13/1.122528164409771E15))-c0*t171533*t171527*(cx1*gamma_bb[index]* \
               gx*t171465*t171376*(8.8E1/9.0)-cx1*t171503*t171371*t171336*t171453*2.4E1+cx2*t171371*t171336*t171453* \
               t171476*(3.04E2/9.0)+cx4*t171431*t171461*t171454*t171338*(1.12E3/9.0)+cx2*t171342*t171551*t171336* \
               t171453*t171552*2.0-cx2*t171403*t171336*t171453*t171485*t171498*(3.2E1/3.0)-cx2*t171342*t171336*t171453* \
               t171566*t171498+cx4*t171340*t171550*t171454*t171338*t171549*2.0-cx4*t171340*t171454*t171338*t171563* \
               t171495-cx4*t171405*t171454*t171338*t171484*t171495*(6.4E1/3.0)+cx1*gamma_bb[index]*gx*t171430*t171336* \
               t171453*t171548*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t171430*t171336*t171453*t171471*7.2E1-cx3*gamma_bb[index]* \
               gx*t171404*t171336*t171453*t171490*t171486*1.6E1-cx3*gamma_bb[index]*gx*t171341*t171336*t171453*t171556* \
               t171486+cx3*gamma_bb[index]*gx*t171341*t171336*t171453*t171557*t171558*2.0);
        } else if (rho_a[index] > cutoff_) {
            v_rho_b_rho_b_[index] = 0.0;
        } else if (rho_b[index] > cutoff_) {
            double t173915 = 1.0/pow(rho_b[index],1.0/3.0);
            double t173916 = c*t173915;
            double t173917 = sqrt(t173916);
            double t173918 = b1f*t173917;
            double t173919 = pow(t173916,3.0/2.0);
            double t173920 = b3f*t173919;
            double t173921 = c*c;
            double t173922 = 1.0/pow(rho_b[index],2.0/3.0);
            double t173923 = b4f*t173921*t173922;
            double t173924 = b2f*c*t173915;
            double t173925 = t173920+t173923+t173924+t173918;
            double t173926 = 1.0/pow(rho_b[index],4.0/3.0);
            double t173927 = b1p*t173917;
            double t173928 = b3p*t173919;
            double t173929 = b4p*t173921*t173922;
            double t173930 = b2p*c*t173915;
            double t173931 = t173930+t173927+t173928+t173929;
            double t173932 = 1.0/pow(rho_b[index],5.0/3.0);
            double t173933 = 1.0/sqrt(t173916);
            double t173934 = 1.0/c0f;
            double t173935 = 1.0/t173925;
            double t173936 = t173934*t173935*(1.0/2.0);
            double t173937 = t173936+1.0;
            double t173938 = 1.0/c0p;
            double t173939 = 1.0/t173931;
            double t173940 = t173938*t173939*(1.0/2.0);
            double t173941 = t173940+1.0;
            double t173942 = a1p*c*t173915;
            double t173943 = t173942+1.0;
            double t173944 = 1.0/t173941;
            double t173945 = 1.0/(t173931*t173931);
            double t173946 = b4p*t173921*t173932*(2.0/3.0);
            double t173947 = b2p*c*t173926*(1.0/3.0);
            double t173948 = b1p*c*t173933*t173926*(1.0/6.0);
            double t173949 = b3p*c*t173917*t173926*(1.0/2.0);
            double t173950 = t173946+t173947+t173948+t173949;
            double t173951 = t173950*t173943*t173944*t173945;
            double t173952 = log(t173941);
            double t173953 = gamma_bb[index]*gamma_bb[index];
            double t173954 = gcaa*gcaa;
            double t173955 = t173953*t173953;
            double t173956 = t173954*t173954;
            double t173957 = 1.0/pow(rho_b[index],3.2E1/3.0);
            double t173958 = 1.0/pow(rho_b[index],8.0/3.0);
            double t173959 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]);
            double t173960 = 1.0/pow(rho_b[index],1.6E1/3.0);
            double t173961 = pow(2.0,1.0/3.0);
            double t173962 = t173961*2.0;
            double t173963 = t173962-2.0;
            double t173964 = two_13*2.0;
            double t173965 = t173964-2.0;
            double t173966 = 1.0/t173965;
            double t173967 = log(t173937);
            double t173968 = a1f*c*t173915;
            double t173969 = t173968+1.0;
            double t173970 = gamma_bb[index]*gcaa*t173958*4.0;
            double t173971 = gamma_bb[index]*gcaa*t173953*t173954*t173959*4.0;
            double t173972 = t173960*t173953*t173954*6.0;
            double t173973 = t173955*t173956*t173957;
            double t173974 = t173970+t173971+t173972+t173973+1.0;
            double t173975 = 1.0/t173974;
            double t173976 = gamma_bb[index]*gcaa*t173958;
            double t173977 = t173976+1.0;
            double t173978 = 1.0/t173977;
            double t173979 = gamma_bb[index]*gcaa*t173958*3.0;
            double t173980 = gamma_bb[index]*gcaa*t173953*t173954*t173959;
            double t173981 = t173960*t173953*t173954*3.0;
            double t173982 = t173980+t173981+t173979+1.0;
            double t173983 = 1.0/t173982;
            double t173984 = gamma_bb[index]*gcaa*t173958*2.0;
            double t173985 = t173960*t173953*t173954;
            double t173986 = t173984+t173985+1.0;
            double t173987 = 1.0/t173986;
            double t173988 = 1.0/pow(rho_b[index],1.9E1/3.0);
            double t173989 = 1.0/pow(rho_b[index],1.1E1/3.0);
            double t173990 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
               rho_b[index]*rho_b[index]*rho_b[index]);
            double t173991 = 1.0/pow(rho_b[index],3.5E1/3.0);
            double t173992 = 1.0/t173937;
            double t173993 = 1.0/(t173925*t173925);
            double t173994 = b4f*t173921*t173932*(2.0/3.0);
            double t173995 = b2f*c*t173926*(1.0/3.0);
            double t173996 = b1f*c*t173933*t173926*(1.0/6.0);
            double t173997 = b3f*c*t173917*t173926*(1.0/2.0);
            double t173998 = t173994+t173995+t173996+t173997;
            double t173999 = a1f*c*c0f*t173926*t173967*(2.0/3.0);
            double t174000 = a1p*c*c0p*t173952*t173926*(2.0/3.0);
            double t174001 = ccaa4*t173955*t173991*t173956*t173975*(3.2E1/3.0);
            double t174002 = ccaa1*gamma_bb[index]*gcaa*t173978*t173989*(8.0/3.0);
            double t174003 = ccaa3*gamma_bb[index]*gcaa*t173953*t173954*t173990*t173983*8.0;
            double t174004 = ccaa2*t173953*t173954*t173987*t173988*(1.6E1/3.0);
            double t174005 = 1.0/(t173977*t173977);
            double t174006 = gamma_bb[index]*gcaa*t173989*8.0;
            double t174007 = gamma_bb[index]*gcaa*t173953*t173954*t173990*8.0;
            double t174008 = t173953*t173954*t173988*1.6E1;
            double t174009 = t174006+t174007+t174008;
            double t174010 = 1.0/(t173982*t173982);
            double t174011 = gamma_bb[index]*gcaa*t173989*(3.2E1/3.0);
            double t174012 = gamma_bb[index]*gcaa*t173953*t173954*t173990*3.2E1;
            double t174013 = t173953*t173954*t173988*3.2E1;
            double t174014 = t173955*t173991*t173956*(3.2E1/3.0);
            double t174015 = t174011+t174012+t174013+t174014;
            double t174016 = 1.0/(t173974*t173974);
            double t174017 = gamma_bb[index]*gcaa*t173989*(1.6E1/3.0);
            double t174018 = t173953*t173954*t173988*(1.6E1/3.0);
            double t174019 = t174017+t174018;
            double t174020 = 1.0/(t173986*t173986);
            double t174021 = t174001+t174002+t174003+t174004-ccaa1*t174005*t173953*t173954*t173988*(8.0/3.0)- \
               ccaa2*t174020*t174019*t173960*t173953*t173954-ccaa4*t174015*t174016*t173955*t173956*t173957-ccaa3* \
               gamma_bb[index]*gcaa*t174010*t174009*t173953*t173954*t173959;
            double t174022 = c0f*t173967*t173969*2.0;
            double t174023 = c0p*t173943*t173952*2.0;
            double t174024 = 1.0/pow(rho_b[index],1.0E1);
            double t174025 = 1.0/pow(rho_b[index],2.2E1/3.0);
            double t174026 = 1.0/pow(rho_b[index],1.4E1/3.0);
            double t174027 = 1.0/pow(rho_b[index],3.8E1/3.0);
            double t174028 = ccaa4*t173955*t173956*t173957*t173975;
            double t174029 = ccaa1*gamma_bb[index]*gcaa*t173958*t173978;
            double t174030 = ccaa3*gamma_bb[index]*gcaa*t173953*t173954*t173983*t173959;
            double t174031 = ccaa2*t173960*t173953*t173954*t173987;
            double t174032 = ccaa0+t174030+t174031+t174028+t174029;
            double t174033 = 1.0/pow(rho_b[index],7.0/3.0);
            double t174034 = 1.0/pow(t173916,3.0/2.0);
            double t174035 = t173998*t173998;
            double t174036 = t173950*t173950;
            double t174037 = 1.0/(t173931*t173931*t173931);
            double t174038 = t174036*t174037*t173943*t173944*2.0;
            double t174039 = b4p*t173921*t173958*(1.0E1/9.0);
            double t174040 = b2p*c*t174033*(4.0/9.0);
            double t174041 = b3p*t173921*t173933*t173958*(1.0/1.2E1);
            double t174042 = b1p*c*t174033*t173933*(2.0/9.0);
            double t174043 = b3p*c*t174033*t173917*(2.0/3.0);
            double t174044 = t174040+t174041+t174042+t174043+t174039-b1p*t174034*t173921*t173958*(1.0/3.6E1);
            double t174045 = 1.0/(t173941*t173941);
            double t174046 = 1.0/(t173931*t173931*t173931*t173931);
            double t174047 = a1p*c*c0p*t174033*t173952*(8.0/9.0);
            double t174048 = gx*gx;
            double t174049 = t174048*t174048;
            double t174050 = cx0*(4.190715359480463E15/2.251799813685248E15);
            double t174051 = gamma_bb[index]*gx*t173958*4.0;
            double t174052 = gamma_bb[index]*gx*t174048*t173953*t173959*4.0;
            double t174053 = t174048*t173960*t173953*6.0;
            double t174054 = t174049*t173955*t173957;
            double t174055 = t174051+t174052+t174053+t174054+1.0;
            double t174056 = 1.0/t174055;
            double t174057 = cx4*t174056*t174049*t173955*t173957*(4.190715359480463E15/2.251799813685248E15);
            double t174058 = gamma_bb[index]*gx*t173958;
            double t174059 = t174058+1.0;
            double t174060 = 1.0/t174059;
            double t174061 = cx1*gamma_bb[index]*gx*t174060*t173958*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174062 = gamma_bb[index]*gx*t173958*3.0;
            double t174063 = gamma_bb[index]*gx*t174048*t173953*t173959;
            double t174064 = t174048*t173960*t173953*3.0;
            double t174065 = t174062+t174063+t174064+1.0;
            double t174066 = 1.0/t174065;
            double t174067 = cx3*gamma_bb[index]*gx*t174048*t174066*t173953*t173959*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174068 = gamma_bb[index]*gx*t173958*2.0;
            double t174069 = t174048*t173960*t173953;
            double t174070 = t174068+t174069+1.0;
            double t174071 = 1.0/t174070;
            double t174072 = cx2*t174071*t174048*t173960*t173953*(4.190715359480463E15/2.251799813685248E15);
            double t174073 = t174050+t174061+t174072+t174057+t174067;
            double t174074 = 1.0/(omega*omega);
            double t174075 = pow(rho_b[index],2.0/3.0);
            double t174076 = 1.0/t174073;
            double t174095 = t174074*t174075*t174076*(1.4000771998813E29/4.951760157141521E27);
            double t174077 = exp(-t174095);
            double t174078 = sqrt(t174073);
            double t174086 = gamma_bb[index]*gx*t173989*(3.2E1/3.0);
            double t174087 = gamma_bb[index]*gx*t174048*t173953*t173990*3.2E1;
            double t174088 = t174048*t173953*t173988*3.2E1;
            double t174089 = t174049*t173955*t173991*(3.2E1/3.0);
            double t174079 = t174086+t174087+t174088+t174089;
            double t174091 = gamma_bb[index]*gx*t173989*(1.6E1/3.0);
            double t174092 = t174048*t173953*t173988*(1.6E1/3.0);
            double t174080 = t174091+t174092;
            double t174081 = 1.0/(t174065*t174065);
            double t174082 = gamma_bb[index]*gx*t173989*8.0;
            double t174083 = gamma_bb[index]*gx*t174048*t173953*t173990*8.0;
            double t174084 = t174048*t173953*t173988*1.6E1;
            double t174085 = t174082+t174083+t174084;
            double t174090 = 1.0/(t174055*t174055);
            double t174093 = 1.0/(t174070*t174070);
            double t174094 = pow(rho_b[index],1.0/3.0);
            double t174096 = 1.0/omega;
            double t174097 = 1.0/sqrt(t174073);
            double t174098 = 1.0/(t174059*t174059);
            double t174099 = omega*omega;
            double t174100 = t174077-1.0;
            double t174101 = t174100*t174073*t173922*t174099*(2.475880078570761E27/1.4000771998813E29);
            double t174102 = t174101-t174077+3.0/2.0;
            double t174103 = cx4*t174056*t174049*t173955*t173991*(1.396905119826821E15/7.0368744177664E13);
            double t174104 = cx1*gamma_bb[index]*gx*t174060*t173989*(1.396905119826821E15/2.81474976710656E14) \
               ;
            double t174105 = cx3*gamma_bb[index]*gx*t174048*t174066*t173953*t173990*(4.190715359480463E15/2.81474976710656E14) \
               ;
            double t174106 = cx2*t174071*t174048*t173953*t173988*(1.396905119826821E15/1.40737488355328E14);
            double t174108 = cx1*t174048*t173953*t174098*t173988*(1.396905119826821E15/2.81474976710656E14);
            double t174109 = cx3*gamma_bb[index]*gx*t174081*t174048*t174085*t173953*t173959*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t174110 = cx4*t174090*t174049*t174079*t173955*t173957*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174111 = cx2*t174080*t174048*t174093*t173960*t173953*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174107 = -t174110-t174111+t174103+t174104+t174105+t174106-t174108-t174109;
            double t174112 = t174074*t174076*t173915*(1.4000771998813E29/7.427640235712282E27);
            double t174113 = 1.0/(t174073*t174073);
            double t174114 = t174113*t174107*t174074*t174075*(1.4000771998813E29/4.951760157141521E27);
            double t174115 = t174112+t174114;
            double t174116 = t174094*t174096*t174097*(3.74176054803257E14/7.0368744177664E13);
            double t174117 = erf(t174116);
            double t174118 = t174117*(3.991211251234741E15/2.251799813685248E15);
            double t174120 = omega*t174102*t173915*t174078*(7.0368744177664E13/3.74176054803257E14);
            double t174119 = -t174120+t174118;
            double t174121 = omega*t174119*t173915*t174078*(2.81474976710656E14/1.122528164409771E15);
            double t174122 = t174121-1.0;
            double t174123 = cx4*t174056*t174049*t173955*t173957;
            double t174124 = cx1*gamma_bb[index]*gx*t174060*t173958;
            double t174125 = cx3*gamma_bb[index]*gx*t174048*t174066*t173953*t173959;
            double t174126 = cx2*t174071*t174048*t173960*t173953;
            double t174127 = cx0+t174123+t174124+t174125+t174126;
            double t174128 = pow(rho_b[index],4.0/3.0);
            double t174129 = 1.0/sqrt(3.141592653589793);
            double t174130 = t173922*t174096*t174097*(3.74176054803257E14/2.11106232532992E14);
            double t174131 = 1.0/pow(t174073,3.0/2.0);
            double t174132 = t174131*t174107*t174094*t174096*(3.74176054803257E14/1.40737488355328E14);
            double t174133 = t174130+t174132;
            double t174134 = t174133*t174129*t174077*(3.991211251234741E15/1.125899906842624E15);
            double t174135 = omega*t174102*t174078*t173926*(7.0368744177664E13/1.122528164409771E15);
            double t174136 = t174100*t174073*t173932*t174099*(4.951760157141521E27/4.2002315996439E29);
            double t174137 = t174100*t174107*t173922*t174099*(2.475880078570761E27/1.4000771998813E29);
            double t174138 = t174115*t174073*t173922*t174077*t174099*(2.475880078570761E27/1.4000771998813E29) \
               ;
            double t174162 = t174115*t174077;
            double t174139 = -t174162+t174136+t174137+t174138;
            double t174140 = omega*t174139*t173915*t174078*(7.0368744177664E13/3.74176054803257E14);
            double t174141 = omega*t174102*t174107*t173915*t174097*(3.5184372088832E13/3.74176054803257E14);
            double t174142 = t174140+t174141+t174134+t174135;
            double t174143 = 1.0/(t174059*t174059*t174059);
            double t174144 = t174079*t174079;
            double t174145 = 1.0/(t174055*t174055*t174055);
            double t174146 = t174080*t174080;
            double t174147 = 1.0/(t174070*t174070*t174070);
            double t174148 = gamma_bb[index]*gx*t174026*(8.8E1/3.0);
            double t174149 = gamma_bb[index]*gx*t174024*t174048*t173953*7.2E1;
            double t174150 = t174025*t174048*t173953*(3.04E2/3.0);
            double t174151 = t174150+t174148+t174149;
            double t174152 = t174085*t174085;
            double t174153 = 1.0/(t174065*t174065*t174065);
            double t174154 = gamma_bb[index]*gx*t174026*(3.52E2/9.0);
            double t174155 = gamma_bb[index]*gx*t174024*t174048*t173953*2.88E2;
            double t174156 = t174025*t174048*t173953*(6.08E2/3.0);
            double t174157 = t174027*t174049*t173955*(1.12E3/9.0);
            double t174158 = t174154+t174155+t174156+t174157;
            double t174159 = gamma_bb[index]*gx*t174026*(1.76E2/9.0);
            double t174160 = t174025*t174048*t173953*(3.04E2/9.0);
            double t174161 = t174160+t174159;
            double t174163 = t174107*t174107;
            double t174164 = cx4*t174027*t174056*t174049*t173955*(4.889167919393874E16/2.11106232532992E14);
            double t174165 = cx1*gamma_bb[index]*gx*t174060*t174026*(1.536595631809503E16/8.44424930131968E14) \
               ;
            double t174166 = cx3*gamma_bb[index]*gx*t174024*t174048*t174066*t173953*(3.771643823532417E16/2.81474976710656E14) \
               ;
            double t174167 = cx2*t174025*t174071*t174048*t173953*(2.65411972767096E16/4.22212465065984E14);
            double t174168 = cx1*gamma_bb[index]*gx*t174024*t174143*t174048*t173953*(1.396905119826821E15/5.2776558133248E13) \
               ;
            double t174169 = cx4*t174144*t174145*t174049*t173955*t173957*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t174170 = cx2*t174146*t174048*t174147*t173960*t173953*(4.190715359480463E15/1.125899906842624E15) \
               ;
            double t174171 = cx3*gamma_bb[index]*gx*t174152*t174153*t174048*t173953*t173959*(4.190715359480463E15/ \
               1.125899906842624E15);
            double t174173 = cx1*t174025*t174048*t173953*t174098*(1.257214607844139E16/2.81474976710656E14);
            double t174174 = cx3*gamma_bb[index]*gx*t174081*t174048*t174085*t173953*t173990*(4.190715359480463E15/ \
               1.40737488355328E14);
            double t174175 = cx3*gamma_bb[index]*gx*t174151*t174081*t174048*t173953*t173959*(4.190715359480463E15/ \
               2.251799813685248E15);
            double t174176 = cx4*t174090*t174049*t174079*t173955*t173991*(1.396905119826821E15/3.5184372088832E13) \
               ;
            double t174177 = cx4*t174090*t174049*t174158*t173955*t173957*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174178 = cx2*t174080*t174048*t174093*t173953*t173988*(1.396905119826821E15/7.0368744177664E13) \
               ;
            double t174179 = cx2*t174161*t174048*t174093*t173960*t173953*(4.190715359480463E15/2.251799813685248E15) \
               ;
            double t174172 = t174170+t174171+t174164-t174173+t174165-t174174+t174166-t174175+t174167-t174176+ \
               t174168-t174177+t174169-t174178-t174179;
            double t174180 = t174074*t174076*t173926*(1.4000771998813E29/2.228292070713684E28);
            double t174181 = 1.0/(t174073*t174073*t174073);
            double t174182 = t174113*t174172*t174074*t174075*(1.4000771998813E29/4.951760157141521E27);
            double t174183 = t174180+t174182-t174113*t174107*t174074*t173915*(1.4000771998813E29/3.713820117856141E27) \
               -t174163*t174181*t174074*t174075*(1.4000771998813E29/2.475880078570761E27);
            double t174184 = t174115*t174115;
            double t174185 = omega*t174119*t174078*t173926*(2.81474976710656E14/3.367584493229313E15);
            double t174186 = omega*t174107*t174119*t173915*t174097*(1.40737488355328E14/1.122528164409771E15) \
               ;
            double t174187 = t174185+t174186-omega*t174142*t173915*t174078*(2.81474976710656E14/1.122528164409771E15) \
               ;
            double t174188 = cx4*t174056*t174049*t173955*t173991*(3.2E1/3.0);
            double t174189 = cx1*gamma_bb[index]*gx*t174060*t173989*(8.0/3.0);
            double t174190 = cx3*gamma_bb[index]*gx*t174048*t174066*t173953*t173990*8.0;
            double t174191 = cx2*t174071*t174048*t173953*t173988*(1.6E1/3.0);
            double t174192 = t174190+t174191+t174188+t174189-cx1*t174048*t173953*t174098*t173988*(8.0/3.0)-cx2* \
               t174080*t174048*t174093*t173960*t173953-cx4*t174090*t174049*t174079*t173955*t173957-cx3*gamma_bb[index]* \
               gx*t174081*t174048*t174085*t173953*t173959;
            v_rho_b_rho_b_[index] = t174021*(t174023+t173963*t173966*(t174022-c0p*t173943*t173952*2.0))*2.0+t174032* \
               (t174000-t173951+t173963*t173966*(t173951+t173999-t173992*t173993*t173969*t173998-a1p*c*c0p*t173952* \
               t173926*(2.0/3.0)))*2.0+rho_b[index]*t174032*(-t174038-t174047+t173963*t173966*(t174038+t174047-t174044* \
               t173943*t173944*t173945-t174035*1.0/(t173925*t173925*t173925)*t173992*t173969*2.0+t173992*t173993* \
               t173969*(b2f*c*t174033*(4.0/9.0)+b4f*t173921*t173958*(1.0E1/9.0)+b1f*c*t174033*t173933*(2.0/9.0)+b3f* \
               c*t174033*t173917*(2.0/3.0)-b1f*t174034*t173921*t173958*(1.0/3.6E1)+b3f*t173921*t173933*t173958*(1.0/ \
               1.2E1))+t174035*1.0/(t173925*t173925*t173925*t173925)*t173934*1.0/(t173937*t173937)*t173969*(1.0/2.0) \
               -a1f*c*c0f*t174033*t173967*(8.0/9.0)-t174036*t174045*t174046*t173943*t173938*(1.0/2.0)+a1f*c*t173926* \
               t173992*t173993*t173998*(2.0/3.0)-a1p*c*t173950*t173926*t173944*t173945*(2.0/3.0))+t174044*t173943* \
               t173944*t173945+t174036*t174045*t174046*t173943*t173938*(1.0/2.0)+a1p*c*t173950*t173926*t173944*t173945* \
               (2.0/3.0))+rho_b[index]*t174021*(-t174000+t173951+t173963*t173966*(t174000-t173951-t173999+t173992* \
               t173993*t173969*t173998))*2.0-rho_b[index]*(t174023+t173963*t173966*(t174022-t174023))*(ccaa1*gamma_bb[index]* \
               gcaa*t174026*t173978*(8.8E1/9.0)-ccaa1*t174005*t174025*t173953*t173954*2.4E1+ccaa2*t174025*t173953* \
               t173954*t173987*(3.04E2/9.0)+ccaa4*t174027*t173955*t173956*t173975*(1.12E3/9.0)-ccaa2*t174020*t174019* \
               t173953*t173954*t173988*(3.2E1/3.0)-ccaa4*t174015*t174016*t173955*t173991*t173956*(6.4E1/3.0)-ccaa2* \
               t174020*t173960*t173953*t173954*(gamma_bb[index]*gcaa*t174026*(1.76E2/9.0)+t174025*t173953*t173954* \
               (3.04E2/9.0))-ccaa4*t174016*t173955*t173956*t173957*(gamma_bb[index]*gcaa*t174026*(3.52E2/9.0)+t174025* \
               t173953*t173954*(6.08E2/3.0)+t174027*t173955*t173956*(1.12E3/9.0)+gamma_bb[index]*gcaa*t174024*t173953* \
               t173954*2.88E2)+ccaa2*(t174019*t174019)*t173960*t173953*t173954*1.0/(t173986*t173986*t173986)*2.0+ \
               ccaa4*(t174015*t174015)*t173955*t173956*1.0/(t173974*t173974*t173974)*t173957*2.0+ccaa3*gamma_bb[index]* \
               gcaa*t174024*t173953*t173954*t173983*7.2E1+ccaa1*gamma_bb[index]*gcaa*t174024*t173953*t173954*1.0/ \
               (t173977*t173977*t173977)*(1.28E2/9.0)+ccaa3*gamma_bb[index]*gcaa*(t174009*t174009)*t173953*t173954* \
               1.0/(t173982*t173982*t173982)*t173959*2.0-ccaa3*gamma_bb[index]*gcaa*t174010*t173953*t173954*t173959* \
               (gamma_bb[index]*gcaa*t174026*(8.8E1/3.0)+t174025*t173953*t173954*(3.04E2/3.0)+gamma_bb[index]*gcaa* \
               t174024*t173953*t173954*7.2E1)-ccaa3*gamma_bb[index]*gcaa*t174010*t174009*t173953*t173954*t173990* \
               1.6E1)-c0*t174122*t174127*t173922*(4.0/9.0)+c0*t174122*t174192*t174094*(8.0/3.0)+c0*t174127*t174094* \
               t174187*(8.0/3.0)-c0*t174128*t174192*t174187*2.0+c0*t174127*t174128*(omega*t174033*t174119*t174078* \
               (-1.125899906842624E15/1.010275347968794E16)+omega*t174142*t174078*t173926*(5.62949953421312E14/3.367584493229313E15) \
               +omega*t173915*t174078*(t174129*t174077*(t173932*t174096*t174097*(3.74176054803257E14/3.16659348799488E14) \
               -t174131*t174107*t173922*t174096*(3.74176054803257E14/2.11106232532992E14)+t174131*t174172*t174094* \
               t174096*(3.74176054803257E14/1.40737488355328E14)-1.0/pow(t174073,5.0/2.0)*t174163*t174094*t174096* \
               (1.122528164409771E15/2.81474976710656E14))*(3.991211251234741E15/1.125899906842624E15)+omega*t174102* \
               t174033*t174078*(2.81474976710656E14/3.367584493229313E15)+omega*t174139*t174078*t173926*(1.40737488355328E14/ \
               1.122528164409771E15)+t174115*t174133*t174129*t174077*(3.991211251234741E15/1.125899906842624E15)+ \
               omega*t173915*t174078*(-t174183*t174077-t174184*t174077+t174100*t174107*t173932*t174099*(9.903520314283042E27/ \
               4.2002315996439E29)+t174100*t174172*t173922*t174099*(2.475880078570761E27/1.4000771998813E29)+t174100* \
               t174073*t174099*t173958*(2.475880078570761E28/1.26006947989317E30)+t174115*t174107*t173922*t174077* \
               t174099*(4.951760157141521E27/1.4000771998813E29)+t174115*t174073*t173932*t174077*t174099*(9.903520314283042E27/ \
               4.2002315996439E29)+t174073*t173922*t174183*t174077*t174099*(2.475880078570761E27/1.4000771998813E29) \
               +t174073*t173922*t174184*t174077*t174099*(2.475880078570761E27/1.4000771998813E29))*(7.0368744177664E13/ \
               3.74176054803257E14)-omega*t174102*t174131*t174163*t173915*(1.7592186044416E13/3.74176054803257E14) \
               +omega*t174102*t174107*t173926*t174097*(7.0368744177664E13/1.122528164409771E15)+omega*t174102*t174172* \
               t173915*t174097*(3.5184372088832E13/3.74176054803257E14)+omega*t174107*t174139*t173915*t174097*(7.0368744177664E13/ \
               3.74176054803257E14))*(2.81474976710656E14/1.122528164409771E15)+omega*t174131*t174163*t174119*t173915* \
               (7.0368744177664E13/1.122528164409771E15)+omega*t174142*t174107*t173915*t174097*(2.81474976710656E14/ \
               1.122528164409771E15)-omega*t174107*t174119*t173926*t174097*(2.81474976710656E14/3.367584493229313E15) \
               -omega*t174172*t174119*t173915*t174097*(1.40737488355328E14/1.122528164409771E15))-c0*t174122*t174128* \
               (cx1*gamma_bb[index]*gx*t174060*t174026*(8.8E1/9.0)-cx1*t174025*t174048*t173953*t174098*2.4E1+cx2* \
               t174025*t174071*t174048*t173953*(3.04E2/9.0)+cx4*t174027*t174056*t174049*t173955*(1.12E3/9.0)-cx2* \
               t174161*t174048*t174093*t173960*t173953+cx2*t174146*t174048*t174147*t173960*t173953*2.0-cx2*t174080* \
               t174048*t174093*t173953*t173988*(3.2E1/3.0)+cx4*t174144*t174145*t174049*t173955*t173957*2.0-cx4*t174090* \
               t174049*t174158*t173955*t173957-cx4*t174090*t174049*t174079*t173955*t173991*(6.4E1/3.0)+cx1*gamma_bb[index]* \
               gx*t174024*t174143*t174048*t173953*(1.28E2/9.0)+cx3*gamma_bb[index]*gx*t174024*t174048*t174066*t173953* \
               7.2E1-cx3*gamma_bb[index]*gx*t174151*t174081*t174048*t173953*t173959+cx3*gamma_bb[index]*gx*t174152* \
               t174153*t174048*t173953*t173959*2.0-cx3*gamma_bb[index]*gx*t174081*t174048*t174085*t173953*t173990* \
               1.6E1);
        } else {
            v_rho_b_rho_b_[index] = 0.0;
        } 

        if (is_gga_) {

            //V_rho_a_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t171599 = 1.0/pow(rho_a[index],1.0/3.0);
                double t171600 = c*t171599;
                double t171601 = sqrt(t171600);
                double t171602 = pow(t171600,3.0/2.0);
                double t171603 = c*c;
                double t171604 = 1.0/pow(rho_a[index],2.0/3.0);
                double t171605 = 1.0/c0p;
                double t171606 = b1p*t171601;
                double t171607 = b3p*t171602;
                double t171608 = b4p*t171603*t171604;
                double t171609 = b2p*c*t171599;
                double t171610 = t171606+t171607+t171608+t171609;
                double t171611 = 1.0/t171610;
                double t171612 = t171611*t171605*(1.0/2.0);
                double t171613 = t171612+1.0;
                double t171614 = log(t171613);
                double t171615 = a1p*c*t171599;
                double t171616 = t171615+1.0;
                double t171617 = 1.0/pow(rho_a[index],8.0/3.0);
                double t171618 = gamma_aa[index]*gamma_aa[index];
                double t171619 = gcaa*gcaa;
                double t171620 = t171619*t171619;
                double t171621 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t171622 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t171623 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t171624 = gamma_aa[index]*gcaa*t171617;
                double t171625 = t171624+1.0;
                double t171626 = gamma_aa[index]*gcaa*t171617*3.0;
                double t171627 = gamma_aa[index]*gcaa*t171623*t171618*t171619;
                double t171628 = t171622*t171618*t171619*3.0;
                double t171629 = t171626+t171627+t171628+1.0;
                double t171630 = t171618*t171618;
                double t171631 = gamma_aa[index]*gcaa*t171617*4.0;
                double t171632 = gamma_aa[index]*gcaa*t171623*t171618*t171619*4.0;
                double t171633 = t171622*t171618*t171619*6.0;
                double t171634 = t171620*t171621*t171630;
                double t171635 = t171631+t171632+t171633+t171634+1.0;
                double t171636 = gamma_aa[index]*gcaa*t171617*2.0;
                double t171637 = t171622*t171618*t171619;
                double t171638 = t171636+t171637+1.0;
                double t171639 = rho_a[index]+rho_b[index];
                double t171640 = 1.0/pow(t171639,1.0/3.0);
                double t171641 = c*t171640;
                double t171642 = sqrt(t171641);
                double t171643 = b1p*t171642;
                double t171644 = pow(t171641,3.0/2.0);
                double t171645 = b3p*t171644;
                double t171646 = 1.0/pow(t171639,2.0/3.0);
                double t171647 = b4p*t171603*t171646;
                double t171648 = b2p*c*t171640;
                double t171649 = t171643+t171645+t171647+t171648;
                double t171650 = 1.0/pow(t171639,4.0/3.0);
                double t171651 = two_13*2.0;
                double t171652 = t171651-2.0;
                double t171653 = 1.0/t171652;
                double t171654 = 1.0/c0f;
                double t171655 = 1.0/t171649;
                double t171656 = t171605*t171655*(1.0/2.0);
                double t171657 = t171656+1.0;
                double t171658 = a1p*c*t171640;
                double t171659 = t171658+1.0;
                double t171660 = rho_a[index]-rho_b[index];
                double t171661 = t171660*t171660;
                double t171662 = 1.0/t171639;
                double t171663 = t171660*t171662;
                double t171664 = b1f*t171642;
                double t171665 = b3f*t171644;
                double t171666 = b4f*t171603*t171646;
                double t171667 = b2f*c*t171640;
                double t171668 = t171664+t171665+t171666+t171667;
                double t171669 = 1.0/t171668;
                double t171670 = t171654*t171669*(1.0/2.0);
                double t171671 = t171670+1.0;
                double t171672 = log(t171671);
                double t171673 = a1f*c*t171640;
                double t171674 = t171673+1.0;
                double t171675 = log(t171657);
                double t171685 = c0f*t171672*t171674*2.0;
                double t171686 = c0p*t171675*t171659*2.0;
                double t171676 = t171685-t171686;
                double t171677 = t171663+1.0;
                double t171678 = pow(t171677,4.0/3.0);
                double t171679 = -t171663+1.0;
                double t171680 = pow(t171679,4.0/3.0);
                double t171681 = t171680+t171678-2.0;
                double t171682 = 1.0/(t171639*t171639);
                double t171713 = t171660*t171682;
                double t171683 = -t171713+t171662;
                double t171684 = 1.0/(t171639*t171639*t171639*t171639);
                double t171687 = t171661*t171661;
                double t171688 = 1.0/pow(t171639,5.0/3.0);
                double t171689 = 1.0/sqrt(t171641);
                double t171690 = 1.0/t171657;
                double t171691 = 1.0/(t171649*t171649);
                double t171692 = b4p*t171603*t171688*(2.0/3.0);
                double t171693 = b2p*c*t171650*(1.0/3.0);
                double t171694 = b1p*c*t171650*t171689*(1.0/6.0);
                double t171695 = b3p*c*t171650*t171642*(1.0/2.0);
                double t171696 = t171692+t171693+t171694+t171695;
                double t171697 = t171690*t171691*t171659*t171696;
                double t171698 = 1.0/(t171639*t171639*t171639*t171639*t171639);
                double t171699 = 1.0/d2fz0;
                double t171700 = 1.0/Aa;
                double t171701 = b1a*t171642;
                double t171702 = b3a*t171644;
                double t171703 = b4a*t171603*t171646;
                double t171704 = b2a*c*t171640;
                double t171705 = t171701+t171702+t171703+t171704;
                double t171706 = 1.0/t171705;
                double t171707 = t171700*t171706*(1.0/2.0);
                double t171708 = t171707+1.0;
                double t171709 = log(t171708);
                double t171710 = a1a*c*t171640;
                double t171711 = t171710+1.0;
                double t171712 = pow(t171677,1.0/3.0);
                double t171714 = t171712*t171683*(4.0/3.0);
                double t171715 = pow(t171679,1.0/3.0);
                double t171716 = t171714-t171715*t171683*(4.0/3.0);
                double t171717 = t171684*t171687;
                double t171718 = t171717-1.0;
                double t171719 = pow(2.0,1.0/3.0);
                double t171720 = t171719*2.0;
                double t171721 = t171720-2.0;
                double t171722 = a1f*c*t171599;
                double t171723 = t171722+1.0;
                double t171724 = b1f*t171601;
                double t171725 = b3f*t171602;
                double t171726 = b4f*t171603*t171604;
                double t171727 = b2f*c*t171599;
                double t171728 = t171724+t171725+t171726+t171727;
                double t171729 = 1.0/t171728;
                double t171730 = t171654*t171729*(1.0/2.0);
                double t171731 = t171730+1.0;
                double t171732 = 1.0/pow(rho_a[index],4.0/3.0);
                double t171733 = 1.0/pow(rho_a[index],5.0/3.0);
                double t171734 = 1.0/sqrt(t171600);
                double t171735 = log(t171731);
                double t171736 = 1.0/t171613;
                double t171737 = 1.0/(t171610*t171610);
                double t171738 = b4p*t171603*t171733*(2.0/3.0);
                double t171739 = b2p*c*t171732*(1.0/3.0);
                double t171740 = b1p*c*t171732*t171734*(1.0/6.0);
                double t171741 = b3p*c*t171601*t171732*(1.0/2.0);
                double t171742 = t171740+t171741+t171738+t171739;
                double t171743 = t171616*t171742*t171736*t171737;
                double t171744 = c0f*t171723*t171735*2.0;
                double t171745 = c0p*t171614*t171616*2.0;
                double t171746 = gamma_aa[index]*t171617*(1.0/2.0);
                double t171747 = 1.0/pow(rho_b[index],8.0/3.0);
                double t171748 = gamma_bb[index]*t171747*(1.0/2.0);
                double t171749 = t171746+t171748;
                double t171750 = gcab*t171749;
                double t171751 = t171750+1.0;
                double t171752 = gcab*gcab;
                double t171753 = t171749*t171749;
                double t171754 = t171752*t171752;
                double t171755 = t171753*t171753;
                double t171756 = t171752*t171753;
                double t171757 = gcab*t171749*2.0;
                double t171758 = t171756+t171757+1.0;
                double t171759 = t171752*t171753*3.0;
                double t171760 = gcab*t171752*t171753*t171749;
                double t171761 = gcab*t171749*3.0;
                double t171762 = t171760+t171761+t171759+1.0;
                double t171763 = t171752*t171753*6.0;
                double t171764 = gcab*t171752*t171753*t171749*4.0;
                double t171765 = t171754*t171755;
                double t171766 = gcab*t171749*4.0;
                double t171767 = t171763+t171764+t171765+t171766+1.0;
                double t171768 = t171744-t171745;
                double t171769 = 1.0/pow(rho_b[index],1.0/3.0);
                double t171770 = c*t171769;
                double t171771 = sqrt(t171770);
                double t171772 = pow(t171770,3.0/2.0);
                double t171773 = 1.0/pow(rho_b[index],2.0/3.0);
                double t171774 = b1p*t171771;
                double t171775 = b3p*t171772;
                double t171776 = b4p*t171603*t171773;
                double t171777 = b2p*c*t171769;
                double t171778 = t171774+t171775+t171776+t171777;
                double t171779 = 1.0/t171778;
                double t171780 = t171605*t171779*(1.0/2.0);
                double t171781 = t171780+1.0;
                double t171782 = log(t171781);
                double t171783 = a1p*c*t171769;
                double t171784 = t171783+1.0;
                double t171785 = c0p*t171782*t171784*2.0;
                double t171786 = t171653*t171681*t171684*t171676*t171687;
                double t171787 = Aa*t171711*t171653*t171681*t171709*t171718*t171699*2.0;
                double t171788 = 1.0/t171751;
                double t171789 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t171790 = 1.0/(t171751*t171751);
                double t171791 = 1.0/t171758;
                double t171792 = 1.0/(t171762*t171762);
                double t171793 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t171794 = 1.0/(t171758*t171758);
                double t171795 = 1.0/t171762;
                double t171796 = 1.0/t171767;
                double t171797 = 1.0/(t171767*t171767);
                double t171798 = gcab*t171617*2.0;
                double t171799 = t171617*t171752*t171749*6.0;
                double t171800 = gcab*t171617*t171752*t171753*6.0;
                double t171801 = t171617*t171753*t171754*t171749*2.0;
                double t171802 = t171800+t171801+t171798+t171799;
                double t171803 = gamma_aa[index]*gcab*t171789*(8.0/3.0);
                double t171804 = gamma_aa[index]*t171752*t171749*t171789*(8.0/3.0);
                double t171805 = t171803+t171804;
                double t171806 = gcab*t171617;
                double t171807 = t171617*t171752*t171749;
                double t171808 = t171806+t171807;
                double t171809 = gamma_aa[index]*gcab*t171789*(1.6E1/3.0);
                double t171810 = gamma_aa[index]*gcab*t171752*t171753*t171789*1.6E1;
                double t171811 = gamma_aa[index]*t171753*t171754*t171749*t171789*(1.6E1/3.0);
                double t171812 = gamma_aa[index]*t171752*t171749*t171789*1.6E1;
                double t171813 = t171810+t171811+t171812+t171809;
                double t171814 = gcab*t171617*(3.0/2.0);
                double t171815 = t171617*t171752*t171749*3.0;
                double t171816 = gcab*t171617*t171752*t171753*(3.0/2.0);
                double t171817 = t171814+t171815+t171816;
                double t171818 = gamma_aa[index]*gcab*t171789*4.0;
                double t171819 = gamma_aa[index]*gcab*t171752*t171753*t171789*4.0;
                double t171820 = gamma_aa[index]*t171752*t171749*t171789*8.0;
                double t171821 = t171820+t171818+t171819;
                double t171822 = t171721*t171653*t171768;
                double t171823 = t171822+t171745;
                double t171824 = 1.0/t171625;
                double t171825 = 1.0/t171635;
                double t171826 = 1.0/t171638;
                double t171827 = 1.0/t171629;
                double t171828 = 1.0/(t171625*t171625);
                double t171829 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t171830 = 1.0/(t171629*t171629);
                double t171831 = 1.0/(t171638*t171638);
                double t171832 = gcaa*t171617*3.0;
                double t171833 = gamma_aa[index]*t171622*t171619*6.0;
                double t171834 = gcaa*t171623*t171618*t171619*3.0;
                double t171835 = t171832+t171833+t171834;
                double t171836 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t171837 = 1.0/(t171635*t171635);
                double t171838 = gcaa*t171617*4.0;
                double t171839 = gamma_aa[index]*t171622*t171619*1.2E1;
                double t171840 = gcaa*t171623*t171618*t171619*1.2E1;
                double t171841 = gamma_aa[index]*t171620*t171621*t171618*4.0;
                double t171842 = t171840+t171841+t171838+t171839;
                double t171843 = gcaa*t171617*2.0;
                double t171844 = gamma_aa[index]*t171622*t171619*2.0;
                double t171845 = t171843+t171844;
                double t171846 = gamma_aa[index]*gcaa*t171789*(1.6E1/3.0);
                double t171847 = t171618*t171619*t171793*(1.6E1/3.0);
                double t171848 = t171846+t171847;
                double t171849 = gamma_aa[index]*gcaa*t171789*8.0;
                double t171850 = gamma_aa[index]*gcaa*t171618*t171619*t171829*8.0;
                double t171851 = t171618*t171619*t171793*1.6E1;
                double t171852 = t171850+t171851+t171849;
                double t171853 = gamma_aa[index]*gcaa*t171789*(3.2E1/3.0);
                double t171854 = gamma_aa[index]*gcaa*t171618*t171619*t171829*3.2E1;
                double t171855 = t171618*t171619*t171793*3.2E1;
                double t171856 = t171620*t171630*t171836*(3.2E1/3.0);
                double t171857 = t171853+t171854+t171855+t171856;
                double t171858 = 1.0/t171731;
                double t171859 = 1.0/(t171728*t171728);
                double t171860 = b4f*t171603*t171733*(2.0/3.0);
                double t171861 = b2f*c*t171732*(1.0/3.0);
                double t171862 = b1f*c*t171732*t171734*(1.0/6.0);
                double t171863 = b3f*c*t171601*t171732*(1.0/2.0);
                double t171864 = t171860+t171861+t171862+t171863;
                double t171865 = a1f*c*c0f*t171732*t171735*(2.0/3.0);
                double t171866 = a1p*c*c0p*t171614*t171732*(2.0/3.0);
                double t171867 = ccaa1*gcaa*t171617*t171824;
                double t171868 = ccaa4*gamma_aa[index]*t171620*t171621*t171618*t171825*4.0;
                double t171869 = ccaa2*gamma_aa[index]*t171622*t171619*t171826*2.0;
                double t171870 = ccaa3*gcaa*t171623*t171618*t171619*t171827*3.0;
                double t171871 = t171870+t171867+t171868+t171869-ccaa1*gamma_aa[index]*t171622*t171619*t171828-ccaa4* \
                   t171620*t171621*t171630*t171842*t171837-ccaa2*t171622*t171831*t171618*t171619*t171845-ccaa3*gamma_aa[index]* \
                   gcaa*t171623*t171830*t171618*t171619*t171835;
                double t171872 = gx*gx;
                double t171873 = t171872*t171872;
                double t171874 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t171875 = gamma_aa[index]*gx*t171617*4.0;
                double t171876 = gamma_aa[index]*gx*t171623*t171618*t171872*4.0;
                double t171877 = t171622*t171618*t171872*6.0;
                double t171878 = t171621*t171630*t171873;
                double t171879 = t171875+t171876+t171877+t171878+1.0;
                double t171880 = 1.0/t171879;
                double t171881 = cx4*t171621*t171630*t171880*t171873*(4.190715359480463E15/2.251799813685248E15);
                double t171882 = gamma_aa[index]*gx*t171617;
                double t171883 = t171882+1.0;
                double t171884 = 1.0/t171883;
                double t171885 = cx1*gamma_aa[index]*gx*t171617*t171884*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171886 = gamma_aa[index]*gx*t171617*3.0;
                double t171887 = gamma_aa[index]*gx*t171623*t171618*t171872;
                double t171888 = t171622*t171618*t171872*3.0;
                double t171889 = t171886+t171887+t171888+1.0;
                double t171890 = 1.0/t171889;
                double t171891 = cx3*gamma_aa[index]*gx*t171623*t171618*t171872*t171890*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171892 = gamma_aa[index]*gx*t171617*2.0;
                double t171893 = t171622*t171618*t171872;
                double t171894 = t171892+t171893+1.0;
                double t171895 = 1.0/t171894;
                double t171896 = cx2*t171622*t171618*t171872*t171895*(4.190715359480463E15/2.251799813685248E15);
                double t171897 = t171881+t171891+t171874+t171885+t171896;
                double t171898 = 1.0/omega;
                double t171899 = 1.0/(omega*omega);
                double t171900 = pow(rho_a[index],2.0/3.0);
                double t171901 = 1.0/t171897;
                double t171903 = t171900*t171901*t171899*(1.4000771998813E29/4.951760157141521E27);
                double t171902 = exp(-t171903);
                double t171904 = cx4*t171630*t171880*t171836*t171873*(1.396905119826821E15/7.0368744177664E13);
                double t171905 = cx1*gamma_aa[index]*gx*t171884*t171789*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t171906 = cx3*gamma_aa[index]*gx*t171618*t171872*t171890*t171829*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t171907 = cx2*t171618*t171872*t171793*t171895*(1.396905119826821E15/1.40737488355328E14);
                double t171908 = 1.0/(t171883*t171883);
                double t171909 = gamma_aa[index]*gx*t171789*8.0;
                double t171910 = gamma_aa[index]*gx*t171618*t171872*t171829*8.0;
                double t171911 = t171618*t171872*t171793*1.6E1;
                double t171912 = t171910+t171911+t171909;
                double t171913 = 1.0/(t171889*t171889);
                double t171914 = gamma_aa[index]*gx*t171789*(3.2E1/3.0);
                double t171915 = gamma_aa[index]*gx*t171618*t171872*t171829*3.2E1;
                double t171916 = t171618*t171872*t171793*3.2E1;
                double t171917 = t171630*t171836*t171873*(3.2E1/3.0);
                double t171918 = t171914+t171915+t171916+t171917;
                double t171919 = 1.0/(t171879*t171879);
                double t171920 = gamma_aa[index]*gx*t171789*(1.6E1/3.0);
                double t171921 = t171618*t171872*t171793*(1.6E1/3.0);
                double t171922 = t171920+t171921;
                double t171923 = 1.0/(t171894*t171894);
                double t171927 = cx1*t171618*t171872*t171908*t171793*(1.396905119826821E15/2.81474976710656E14);
                double t171928 = cx3*gamma_aa[index]*gx*t171623*t171912*t171913*t171618*t171872*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t171929 = cx4*t171621*t171630*t171873*t171918*t171919*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171930 = cx2*t171622*t171922*t171923*t171618*t171872*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171924 = -t171930+t171904+t171905+t171906+t171907-t171927-t171928-t171929;
                double t171925 = omega*omega;
                double t171926 = t171902-1.0;
                double t171931 = t171901*t171599*t171899*(1.4000771998813E29/7.427640235712282E27);
                double t171932 = 1.0/(t171897*t171897);
                double t171933 = t171900*t171932*t171924*t171899*(1.4000771998813E29/4.951760157141521E27);
                double t171934 = t171931+t171933;
                double t171935 = sqrt(t171897);
                double t171936 = t171604*t171925*t171926*t171897*(2.475880078570761E27/1.4000771998813E29);
                double t171937 = -t171902+t171936+3.0/2.0;
                double t171938 = 1.0/sqrt(t171897);
                double t171939 = pow(rho_a[index],1.0/3.0);
                double t171940 = t171938*t171939*t171898*(3.74176054803257E14/7.0368744177664E13);
                double t171941 = erf(t171940);
                double t171942 = t171941*(3.991211251234741E15/2.251799813685248E15);
                double t171944 = omega*t171935*t171937*t171599*(7.0368744177664E13/3.74176054803257E14);
                double t171943 = t171942-t171944;
                double t171945 = cx1*gx*t171617*t171884;
                double t171946 = cx4*gamma_aa[index]*t171621*t171618*t171880*t171873*4.0;
                double t171947 = cx2*gamma_aa[index]*t171622*t171872*t171895*2.0;
                double t171948 = cx3*gx*t171623*t171618*t171872*t171890*3.0;
                double t171949 = gx*t171617*3.0;
                double t171950 = gamma_aa[index]*t171622*t171872*6.0;
                double t171951 = gx*t171623*t171618*t171872*3.0;
                double t171952 = t171950+t171951+t171949;
                double t171953 = gx*t171617*4.0;
                double t171954 = gamma_aa[index]*t171622*t171872*1.2E1;
                double t171955 = gx*t171623*t171618*t171872*1.2E1;
                double t171956 = gamma_aa[index]*t171621*t171618*t171873*4.0;
                double t171957 = t171953+t171954+t171955+t171956;
                double t171958 = gx*t171617*2.0;
                double t171959 = gamma_aa[index]*t171622*t171872*2.0;
                double t171960 = t171958+t171959;
                double t171961 = t171945+t171946+t171947+t171948-cx1*gamma_aa[index]*t171622*t171872*t171908-cx2* \
                   t171622*t171923*t171618*t171960*t171872-cx4*t171621*t171630*t171873*t171919*t171957-cx3*gamma_aa[index]* \
                   gx*t171623*t171913*t171618*t171952*t171872;
                double t171962 = pow(rho_a[index],4.0/3.0);
                double t171963 = 1.0/sqrt(3.141592653589793);
                double t171964 = 1.0/pow(t171897,3.0/2.0);
                double t171965 = cx1*gx*t171617*t171884*(4.190715359480463E15/2.251799813685248E15);
                double t171966 = cx4*gamma_aa[index]*t171621*t171618*t171880*t171873*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t171967 = cx2*gamma_aa[index]*t171622*t171872*t171895*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t171968 = cx3*gx*t171623*t171618*t171872*t171890*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t171970 = cx1*gamma_aa[index]*t171622*t171872*t171908*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171971 = cx3*gamma_aa[index]*gx*t171623*t171913*t171618*t171952*t171872*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t171972 = cx4*t171621*t171630*t171873*t171919*t171957*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171973 = cx2*t171622*t171923*t171618*t171960*t171872*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171969 = -t171970-t171971-t171972-t171973+t171965+t171966+t171967+t171968;
                double t171974 = cx1*gamma_aa[index]*t171872*t171908*t171793*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t171975 = 1.0/(t171883*t171883*t171883);
                double t171976 = cx3*gx*t171623*t171912*t171913*t171618*t171872*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t171977 = cx2*gamma_aa[index]*t171622*t171922*t171923*t171872*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t171978 = cx3*gamma_aa[index]*gx*t171913*t171618*t171952*t171872*t171829*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t171979 = gx*t171789*8.0;
                double t171980 = gamma_aa[index]*t171872*t171793*3.2E1;
                double t171981 = gx*t171618*t171872*t171829*2.4E1;
                double t171982 = t171980+t171981+t171979;
                double t171983 = cx3*gamma_aa[index]*gx*t171623*t171913*t171618*t171872*t171982*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t171984 = cx4*gamma_aa[index]*t171621*t171618*t171873*t171918*t171919*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t171985 = cx4*t171630*t171836*t171873*t171919*t171957*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t171986 = gx*t171789*(3.2E1/3.0);
                double t171987 = gamma_aa[index]*t171872*t171793*6.4E1;
                double t171988 = gx*t171618*t171872*t171829*9.6E1;
                double t171989 = gamma_aa[index]*t171618*t171836*t171873*(1.28E2/3.0);
                double t171990 = t171986+t171987+t171988+t171989;
                double t171991 = cx4*t171621*t171630*t171873*t171990*t171919*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171992 = cx2*t171923*t171618*t171960*t171872*t171793*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t171993 = gx*t171789*(1.6E1/3.0);
                double t171994 = gamma_aa[index]*t171872*t171793*(3.2E1/3.0);
                double t171995 = t171993+t171994;
                double t171996 = cx2*t171622*t171923*t171618*t171872*t171995*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t171997 = 1.0/(t171894*t171894*t171894);
                double t171998 = 1.0/(t171889*t171889*t171889);
                double t171999 = 1.0/(t171879*t171879*t171879);
                double t172001 = cx1*gx*t171884*t171789*(1.396905119826821E15/2.81474976710656E14);
                double t172002 = cx4*gamma_aa[index]*t171618*t171880*t171836*t171873*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t172003 = cx2*gamma_aa[index]*t171872*t171793*t171895*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t172004 = cx3*gx*t171618*t171872*t171890*t171829*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t172005 = cx1*gx*t171618*t171872*t171829*t171975*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t172006 = cx2*t171622*t171922*t171618*t171960*t171872*t171997*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t172007 = cx3*gamma_aa[index]*gx*t171623*t171912*t171618*t171952*t171872*t171998*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t172008 = cx4*t171621*t171630*t171873*t171918*t171957*t171999*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t172000 = -t172001-t172002-t172003-t172004-t172005-t172006-t172007-t172008+t171991+t171974+ \
                   t171983+t171992+t171984+t171976+t171985+t171977+t171978+t171996;
                double t172009 = t172000*t171900*t171932*t171899*(1.4000771998813E29/4.951760157141521E27);
                double t172010 = t171932*t171599*t171969*t171899*(1.4000771998813E29/7.427640235712282E27);
                double t172011 = 1.0/(t171897*t171897*t171897);
                double t172012 = t172011*t171900*t171924*t171969*t171899*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t172013 = t172010+t172012+t172009;
                double t172014 = t171901*t171902*t171969*(1.0/2.0);
                double t172015 = t171604*t171925*t171926*t171969*(2.475880078570761E27/1.4000771998813E29);
                double t172024 = t171900*t171902*t171932*t171969*t171899*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t172016 = t172014+t172015-t172024;
                double t172017 = t171733*t171925*t171926*t171897*(4.951760157141521E27/4.2002315996439E29);
                double t172018 = t171604*t171924*t171925*t171926*(2.475880078570761E27/1.4000771998813E29);
                double t172019 = t171604*t171902*t171925*t171934*t171897*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t172031 = t171902*t171934;
                double t172020 = -t172031+t172017+t172018+t172019;
                double t172021 = t171604*t171938*t171898*(3.74176054803257E14/2.11106232532992E14);
                double t172022 = t171924*t171964*t171939*t171898*(3.74176054803257E14/1.40737488355328E14);
                double t172023 = t172021+t172022;
                double t172025 = omega*t172016*t171935*t171599*(7.0368744177664E13/3.74176054803257E14);
                double t172026 = omega*t171937*t171938*t171599*t171969*(3.5184372088832E13/3.74176054803257E14);
                double t172027 = t171902*t171963*t171964*t171939*t171969*t171898*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t172028 = t172025+t172026+t172027;
                double t172029 = t172023*t171902*t171963*(3.991211251234741E15/1.125899906842624E15);
                double t172030 = omega*t171732*t171935*t171937*(7.0368744177664E13/1.122528164409771E15);
                double t172032 = omega*t172020*t171935*t171599*(7.0368744177664E13/3.74176054803257E14);
                double t172033 = omega*t171924*t171937*t171938*t171599*(3.5184372088832E13/3.74176054803257E14);
                double t172034 = t172030+t172032+t172033+t172029;
                double t172035 = cx4*t171621*t171630*t171880*t171873;
                double t172036 = cx1*gamma_aa[index]*gx*t171617*t171884;
                double t172037 = cx3*gamma_aa[index]*gx*t171623*t171618*t171872*t171890;
                double t172038 = cx2*t171622*t171618*t171872*t171895;
                double t172039 = cx0+t172035+t172036+t172037+t172038;
                double t172040 = omega*t172028*t171935*t171599*(2.81474976710656E14/1.122528164409771E15);
                double t172041 = t172040-omega*t171943*t171938*t171599*t171969*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t172042 = omega*t171943*t171935*t171599*(2.81474976710656E14/1.122528164409771E15);
                double t172043 = t172042-1.0;
                v_rho_a_gamma_aa_[index] = -(rho_a[index]*t171823+rho_b[index]*(t171785-t171721*t171653*(t171785- \
                   c0f*log((t171654*(1.0/2.0))/(b1f*t171771+b3f*t171772+b2f*c*t171769+b4f*t171603*t171773)+1.0)*(a1f* \
                   c*t171769+1.0)*2.0))-t171639*(t171686+t171786+t171787))*(ccab1*gcab*t171788*t171789*(4.0/3.0)-ccab2* \
                   t171752*t171753*t171794*(gcab*t171789*(8.0/3.0)+gamma_aa[index]*t171752*t171793*(4.0/3.0)+t171752* \
                   t171749*t171789*(8.0/3.0))-ccab4*t171754*t171755*t171797*(gcab*t171789*(1.6E1/3.0)+gamma_aa[index]* \
                   t171752*t171793*8.0+t171752*t171749*t171789*1.6E1+gamma_aa[index]*t171753*t171754*t171793*8.0+gcab* \
                   t171752*t171753*t171789*1.6E1+t171753*t171754*t171749*t171789*(1.6E1/3.0)+gamma_aa[index]*gcab*t171752* \
                   t171793*t171749*1.6E1)-ccab1*gamma_aa[index]*t171752*t171790*t171793*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t171752*t171791*t171793*(4.0/3.0)-ccab1*t171752*t171790*t171749*t171789*(4.0/3.0)+ccab2*t171752*t171791* \
                   t171749*t171789*(8.0/3.0)-ccab2*t171805*t171617*t171752*t171749*t171794+ccab4*t171753*t171754*t171749* \
                   t171796*t171789*(1.6E1/3.0)+ccab4*t171802*t171813*t171754*t171755*1.0/(t171767*t171767*t171767)*2.0+ \
                   ccab2*t171805*t171752*t171753*t171808*1.0/(t171758*t171758*t171758)*2.0+ccab4*gamma_aa[index]*t171753* \
                   t171754*t171793*t171796*8.0+ccab3*gcab*t171752*t171753*t171795*t171789*4.0+ccab3*gamma_aa[index]*gcab* \
                   t171752*t171793*t171749*t171795*4.0-ccab2*gamma_aa[index]*t171752*t171808*t171749*t171794*t171789* \
                   (8.0/3.0)-ccab3*gcab*t171821*t171617*t171752*t171753*t171792*(3.0/2.0)-ccab4*t171813*t171617*t171753* \
                   t171754*t171749*t171797*2.0-ccab3*gcab*t171752*t171753*t171792*t171749*(gcab*t171789*4.0+gamma_aa[index]* \
                   t171752*t171793*4.0+t171752*t171749*t171789*8.0+gcab*t171752*t171753*t171789*4.0+gamma_aa[index]*gcab* \
                   t171752*t171793*t171749*4.0)+ccab1*gamma_aa[index]*gcab*1.0/(t171751*t171751*t171751)*t171752*t171793* \
                   t171749*(4.0/3.0)+ccab3*gcab*t171821*t171752*t171753*1.0/(t171762*t171762*t171762)*t171817*t171749* \
                   2.0-ccab3*gamma_aa[index]*gcab*t171752*t171753*t171817*t171792*t171789*4.0-ccab4*gamma_aa[index]*t171802* \
                   t171753*t171754*t171749*t171797*t171789*(1.6E1/3.0))-t171871*(t171745+t171721*t171653*(t171744-c0p* \
                   t171614*t171616*2.0))-(-t171745+t171686+t171786+t171787+t171639*(t171697-t171653*t171681*t171684*t171687* \
                   (t171697-(t171674*1.0/(t171668*t171668)*(b2f*c*t171650*(1.0/3.0)+b4f*t171603*t171688*(2.0/3.0)+b1f* \
                   c*t171650*t171689*(1.0/6.0)+b3f*c*t171650*t171642*(1.0/2.0)))/t171671+a1f*c*c0f*t171650*t171672*(2.0/ \
                   3.0)-a1p*c*c0p*t171650*t171675*(2.0/3.0))-a1p*c*c0p*t171650*t171675*(2.0/3.0)+t171653*t171716*t171684* \
                   t171676*t171687-t171653*t171681*t171676*t171687*t171698*4.0+t171660*t171661*t171653*t171681*t171684* \
                   t171676*4.0-Aa*t171711*t171653*t171681*t171709*t171699*(t171687*t171698*4.0-t171660*t171661*t171684* \
                   4.0)*2.0+Aa*t171711*t171653*t171716*t171709*t171718*t171699*2.0+(t171711*1.0/(t171705*t171705)*t171653* \
                   t171681*t171718*t171699*(b2a*c*t171650*(1.0/3.0)+b4a*t171603*t171688*(2.0/3.0)+b1a*c*t171650*t171689* \
                   (1.0/6.0)+b3a*c*t171650*t171642*(1.0/2.0)))/t171708-Aa*a1a*c*t171650*t171653*t171681*t171709*t171718* \
                   t171699*(2.0/3.0))+rho_a[index]*(-t171743+t171866+t171721*t171653*(t171743+t171865-t171723*t171864* \
                   t171858*t171859-a1p*c*c0p*t171614*t171732*(2.0/3.0)))-t171721*t171653*t171768)*(ccab1*gcab*t171617* \
                   t171788*(1.0/2.0)-ccab1*t171617*t171752*t171790*t171749*(1.0/2.0)+ccab2*t171617*t171752*t171791*t171749- \
                   ccab2*t171752*t171753*t171808*t171794-ccab4*t171802*t171754*t171755*t171797+ccab4*t171617*t171753* \
                   t171754*t171749*t171796*2.0+ccab3*gcab*t171617*t171752*t171753*t171795*(3.0/2.0)-ccab3*gcab*t171752* \
                   t171753*t171817*t171792*t171749)-rho_a[index]*t171823*(ccaa1*gcaa*t171824*t171789*(-8.0/3.0)-ccaa2* \
                   gamma_aa[index]*t171619*t171826*t171793*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t171619*t171828*t171793* \
                   8.0+ccaa4*t171620*t171630*t171842*t171836*t171837*(3.2E1/3.0)+ccaa2*t171831*t171618*t171619*t171845* \
                   t171793*(1.6E1/3.0)+ccaa4*t171620*t171621*t171630*t171837*(gcaa*t171789*(3.2E1/3.0)+gamma_aa[index]* \
                   t171619*t171793*6.4E1+gamma_aa[index]*t171620*t171618*t171836*(1.28E2/3.0)+gcaa*t171618*t171619*t171829* \
                   9.6E1)-ccaa1*gcaa*1.0/(t171625*t171625*t171625)*t171618*t171619*t171829*(1.6E1/3.0)+ccaa2*t171622* \
                   t171831*t171618*t171619*(gcaa*t171789*(1.6E1/3.0)+gamma_aa[index]*t171619*t171793*(3.2E1/3.0))-ccaa4* \
                   gamma_aa[index]*t171620*t171618*t171825*t171836*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t171622*t171831* \
                   t171619*t171848*2.0-ccaa3*gcaa*t171618*t171619*t171827*t171829*2.4E1+ccaa4*gamma_aa[index]*t171620* \
                   t171621*t171618*t171837*t171857*4.0+ccaa3*gcaa*t171623*t171830*t171618*t171852*t171619*3.0-ccaa4*t171620* \
                   t171621*t171630*1.0/(t171635*t171635*t171635)*t171842*t171857*2.0-ccaa2*t171622*t171618*t171619*1.0/ \
                   (t171638*t171638*t171638)*t171845*t171848*2.0+ccaa3*gamma_aa[index]*gcaa*t171623*t171830*t171618*t171619* \
                   (gcaa*t171789*8.0+gamma_aa[index]*t171619*t171793*3.2E1+gcaa*t171618*t171619*t171829*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t171830*t171618*t171619*t171835*t171829*8.0-ccaa3*gamma_aa[index]*gcaa*t171623* \
                   t171618*t171852*t171619*t171835*1.0/(t171629*t171629*t171629)*2.0)+rho_a[index]*t171871*(-t171743+ \
                   t171866+t171721*t171653*(t171743+t171865-t171866-t171723*t171864*t171858*t171859))-c0*t172043*t171962* \
                   (cx1*gx*t171884*t171789*(-8.0/3.0)+cx1*gamma_aa[index]*t171872*t171908*t171793*8.0-cx2*gamma_aa[index]* \
                   t171872*t171793*t171895*(3.2E1/3.0)+cx2*t171622*t171923*t171618*t171872*t171995+cx2*t171923*t171618* \
                   t171960*t171872*t171793*(1.6E1/3.0)+cx4*t171621*t171630*t171873*t171990*t171919+cx4*t171630*t171836* \
                   t171873*t171919*t171957*(3.2E1/3.0)+cx2*gamma_aa[index]*t171622*t171922*t171923*t171872*2.0-cx4*gamma_aa[index]* \
                   t171618*t171880*t171836*t171873*(1.28E2/3.0)-cx1*gx*t171618*t171872*t171829*t171975*(1.6E1/3.0)-cx3* \
                   gx*t171618*t171872*t171890*t171829*2.4E1+cx4*gamma_aa[index]*t171621*t171618*t171873*t171918*t171919* \
                   4.0+cx3*gx*t171623*t171912*t171913*t171618*t171872*3.0-cx2*t171622*t171922*t171618*t171960*t171872* \
                   t171997*2.0-cx4*t171621*t171630*t171873*t171918*t171957*t171999*2.0+cx3*gamma_aa[index]*gx*t171623* \
                   t171913*t171618*t171872*t171982+cx3*gamma_aa[index]*gx*t171913*t171618*t171952*t171872*t171829*8.0- \
                   cx3*gamma_aa[index]*gx*t171623*t171912*t171618*t171952*t171872*t171998*2.0)+c0*t172041*t172039*t171939* \
                   (4.0/3.0)-c0*t172043*t171961*t171939*(4.0/3.0)-c0*t172039*t171962*(omega*t171935*t171599*(t171902* \
                   t171963*(t172000*t171964*t171939*t171898*(3.74176054803257E14/1.40737488355328E14)+t171604*t171964* \
                   t171969*t171898*(3.74176054803257E14/4.22212465065984E14)+t171924*t171939*1.0/pow(t171897,5.0/2.0) \
                   *t171969*t171898*(1.122528164409771E15/2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15) \
                   +omega*t172016*t171732*t171935*(7.0368744177664E13/1.122528164409771E15)+omega*t171935*t171599*(t172013* \
                   t171902-t172000*t171604*t171925*t171926*(2.475880078570761E27/1.4000771998813E29)+t171901*t171902* \
                   t171934*t171969*(1.0/2.0)+t171902*t171932*t171924*t171969*(1.0/2.0)+t171733*t171925*t171926*t171969* \
                   (4.951760157141521E27/4.2002315996439E29)+(t171901*t171902*t171969*(1.0/3.0))/rho_a[index]-t172013* \
                   t171604*t171902*t171925*t171897*(2.475880078570761E27/1.4000771998813E29)+t171604*t171902*t171925* \
                   t171934*t171969*(2.475880078570761E27/1.4000771998813E29)-t171900*t171902*t171932*t171934*t171969* \
                   t171899*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/3.74176054803257E14)-omega* \
                   t172000*t171937*t171938*t171599*(3.5184372088832E13/3.74176054803257E14)+omega*t172016*t171924*t171938* \
                   t171599*(3.5184372088832E13/3.74176054803257E14)+omega*t172020*t171938*t171599*t171969*(3.5184372088832E13/ \
                   3.74176054803257E14)+omega*t171732*t171937*t171938*t171969*(3.5184372088832E13/1.122528164409771E15) \
                   -omega*t171924*t171937*t171964*t171599*t171969*(1.7592186044416E13/3.74176054803257E14)+t172023*t171900* \
                   t171902*t171932*t171963*t171969*t171899*(5.588003872763475E44/5.575186299632656E42))*(2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t172028*t171732*t171935*(2.81474976710656E14/3.367584493229313E15)+omega* \
                   t172000*t171943*t171938*t171599*(1.40737488355328E14/1.122528164409771E15)+omega*t172028*t171924*t171938* \
                   t171599*(1.40737488355328E14/1.122528164409771E15)-omega*t171732*t171943*t171938*t171969*(1.40737488355328E14/ \
                   3.367584493229313E15)+omega*t172034*t171938*t171599*t171969*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t171924*t171943*t171964*t171599*t171969*(7.0368744177664E13/1.122528164409771E15))-c0*t172041* \
                   t171962*(cx1*gamma_aa[index]*gx*t171884*t171789*(8.0/3.0)-cx1*t171618*t171872*t171908*t171793*(8.0/ \
                   3.0)+cx2*t171618*t171872*t171793*t171895*(1.6E1/3.0)+cx4*t171630*t171880*t171836*t171873*(3.2E1/3.0) \
                   -cx2*t171622*t171922*t171923*t171618*t171872-cx4*t171621*t171630*t171873*t171918*t171919+cx3*gamma_aa[index]* \
                   gx*t171618*t171872*t171890*t171829*8.0-cx3*gamma_aa[index]*gx*t171623*t171912*t171913*t171618*t171872) \
                   +c0*t171961*t171962*(omega*t171732*t171943*t171935*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t172034*t171935*t171599*(2.81474976710656E14/1.122528164409771E15)+omega*t171924*t171943*t171938*t171599* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else if (rho_a[index] > cutoff_) {
                double t175289 = 1.0/pow(rho_a[index],1.0/3.0);
                double t175290 = c*t175289;
                double t175291 = sqrt(t175290);
                double t175292 = pow(t175290,3.0/2.0);
                double t175293 = c*c;
                double t175294 = 1.0/pow(rho_a[index],2.0/3.0);
                double t175295 = 1.0/c0p;
                double t175296 = b1p*t175291;
                double t175297 = b3p*t175292;
                double t175298 = b4p*t175293*t175294;
                double t175299 = b2p*c*t175289;
                double t175300 = t175296+t175297+t175298+t175299;
                double t175301 = 1.0/t175300;
                double t175302 = t175301*t175295*(1.0/2.0);
                double t175303 = t175302+1.0;
                double t175304 = log(t175303);
                double t175305 = a1p*c*t175289;
                double t175306 = t175305+1.0;
                double t175307 = 1.0/pow(rho_a[index],8.0/3.0);
                double t175308 = gamma_aa[index]*gamma_aa[index];
                double t175309 = gcaa*gcaa;
                double t175310 = t175309*t175309;
                double t175311 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t175312 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t175313 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t175314 = gamma_aa[index]*gcaa*t175307;
                double t175315 = t175314+1.0;
                double t175316 = gamma_aa[index]*gcaa*t175307*3.0;
                double t175317 = gamma_aa[index]*gcaa*t175313*t175308*t175309;
                double t175318 = t175312*t175308*t175309*3.0;
                double t175319 = t175316+t175317+t175318+1.0;
                double t175320 = t175308*t175308;
                double t175321 = gamma_aa[index]*gcaa*t175307*4.0;
                double t175322 = gamma_aa[index]*gcaa*t175313*t175308*t175309*4.0;
                double t175323 = t175312*t175308*t175309*6.0;
                double t175324 = t175310*t175311*t175320;
                double t175325 = t175321+t175322+t175323+t175324+1.0;
                double t175326 = gamma_aa[index]*gcaa*t175307*2.0;
                double t175327 = t175312*t175308*t175309;
                double t175328 = t175326+t175327+1.0;
                double t175329 = pow(2.0,1.0/3.0);
                double t175330 = t175329*2.0;
                double t175331 = t175330-2.0;
                double t175332 = two_13*2.0;
                double t175333 = t175332-2.0;
                double t175334 = 1.0/t175333;
                double t175335 = 1.0/c0f;
                double t175336 = b1f*t175291;
                double t175337 = b3f*t175292;
                double t175338 = b4f*t175293*t175294;
                double t175339 = b2f*c*t175289;
                double t175340 = t175336+t175337+t175338+t175339;
                double t175341 = 1.0/t175340;
                double t175342 = t175341*t175335*(1.0/2.0);
                double t175343 = t175342+1.0;
                double t175344 = log(t175343);
                double t175345 = a1f*c*t175289;
                double t175346 = t175345+1.0;
                double t175347 = c0f*t175344*t175346*2.0;
                double t175348 = c0p*t175304*t175306*2.0;
                double t175349 = 1.0/t175315;
                double t175350 = 1.0/t175325;
                double t175351 = 1.0/t175328;
                double t175352 = 1.0/t175319;
                double t175353 = 1.0/pow(rho_a[index],1.9E1/3.0);
                double t175354 = 1.0/(t175315*t175315);
                double t175355 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]*rho_a[index]);
                double t175356 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t175357 = 1.0/(t175319*t175319);
                double t175358 = 1.0/(t175328*t175328);
                double t175359 = gcaa*t175307*3.0;
                double t175360 = gamma_aa[index]*t175312*t175309*6.0;
                double t175361 = gcaa*t175313*t175308*t175309*3.0;
                double t175362 = t175360+t175361+t175359;
                double t175363 = 1.0/pow(rho_a[index],3.5E1/3.0);
                double t175364 = 1.0/(t175325*t175325);
                double t175365 = gcaa*t175307*4.0;
                double t175366 = gamma_aa[index]*t175312*t175309*1.2E1;
                double t175367 = gcaa*t175313*t175308*t175309*1.2E1;
                double t175368 = gamma_aa[index]*t175310*t175311*t175308*4.0;
                double t175369 = t175365+t175366+t175367+t175368;
                double t175370 = gcaa*t175307*2.0;
                double t175371 = gamma_aa[index]*t175312*t175309*2.0;
                double t175372 = t175370+t175371;
                double t175373 = gamma_aa[index]*gcaa*t175356*(1.6E1/3.0);
                double t175374 = t175308*t175353*t175309*(1.6E1/3.0);
                double t175375 = t175373+t175374;
                double t175376 = gamma_aa[index]*gcaa*t175356*8.0;
                double t175377 = gamma_aa[index]*gcaa*t175308*t175309*t175355*8.0;
                double t175378 = t175308*t175353*t175309*1.6E1;
                double t175379 = t175376+t175377+t175378;
                double t175380 = gamma_aa[index]*gcaa*t175356*(3.2E1/3.0);
                double t175381 = gamma_aa[index]*gcaa*t175308*t175309*t175355*3.2E1;
                double t175382 = t175308*t175353*t175309*3.2E1;
                double t175383 = t175310*t175320*t175363*(3.2E1/3.0);
                double t175384 = t175380+t175381+t175382+t175383;
                double t175385 = 1.0/pow(rho_a[index],4.0/3.0);
                double t175386 = 1.0/pow(rho_a[index],5.0/3.0);
                double t175387 = 1.0/sqrt(t175290);
                double t175388 = 1.0/t175303;
                double t175389 = 1.0/(t175300*t175300);
                double t175390 = b4p*t175293*t175386*(2.0/3.0);
                double t175391 = b2p*c*t175385*(1.0/3.0);
                double t175392 = b1p*c*t175385*t175387*(1.0/6.0);
                double t175393 = b3p*c*t175291*t175385*(1.0/2.0);
                double t175394 = t175390+t175391+t175392+t175393;
                double t175395 = t175306*t175394*t175388*t175389;
                double t175396 = ccaa1*gcaa*t175307*t175349;
                double t175397 = ccaa4*gamma_aa[index]*t175310*t175311*t175350*t175308*4.0;
                double t175398 = ccaa2*gamma_aa[index]*t175312*t175351*t175309*2.0;
                double t175399 = ccaa3*gcaa*t175313*t175352*t175308*t175309*3.0;
                double t175400 = t175396+t175397+t175398+t175399-ccaa1*gamma_aa[index]*t175312*t175309*t175354-ccaa4* \
                   t175310*t175311*t175320*t175364*t175369-ccaa2*t175312*t175308*t175309*t175372*t175358-ccaa3*gamma_aa[index]* \
                   gcaa*t175313*t175308*t175362*t175309*t175357;
                double t175401 = gx*gx;
                double t175402 = t175401*t175401;
                double t175403 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t175404 = gamma_aa[index]*gx*t175307*4.0;
                double t175405 = gamma_aa[index]*gx*t175401*t175313*t175308*4.0;
                double t175406 = t175401*t175312*t175308*6.0;
                double t175407 = t175311*t175320*t175402;
                double t175408 = t175404+t175405+t175406+t175407+1.0;
                double t175409 = 1.0/t175408;
                double t175410 = cx4*t175311*t175320*t175402*t175409*(4.190715359480463E15/2.251799813685248E15);
                double t175411 = gamma_aa[index]*gx*t175307;
                double t175412 = t175411+1.0;
                double t175413 = 1.0/t175412;
                double t175414 = cx1*gamma_aa[index]*gx*t175413*t175307*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175415 = gamma_aa[index]*gx*t175307*3.0;
                double t175416 = gamma_aa[index]*gx*t175401*t175313*t175308;
                double t175417 = t175401*t175312*t175308*3.0;
                double t175418 = t175415+t175416+t175417+1.0;
                double t175419 = 1.0/t175418;
                double t175420 = cx3*gamma_aa[index]*gx*t175401*t175313*t175308*t175419*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175421 = gamma_aa[index]*gx*t175307*2.0;
                double t175422 = t175401*t175312*t175308;
                double t175423 = t175421+t175422+1.0;
                double t175424 = 1.0/t175423;
                double t175425 = cx2*t175401*t175312*t175424*t175308*(4.190715359480463E15/2.251799813685248E15);
                double t175426 = t175410+t175420+t175403+t175414+t175425;
                double t175427 = 1.0/omega;
                double t175428 = 1.0/(omega*omega);
                double t175429 = pow(rho_a[index],2.0/3.0);
                double t175430 = 1.0/t175426;
                double t175432 = t175430*t175428*t175429*(1.4000771998813E29/4.951760157141521E27);
                double t175431 = exp(-t175432);
                double t175433 = cx4*t175320*t175402*t175363*t175409*(1.396905119826821E15/7.0368744177664E13);
                double t175434 = cx1*gamma_aa[index]*gx*t175413*t175356*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t175435 = cx3*gamma_aa[index]*gx*t175401*t175308*t175355*t175419*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t175436 = cx2*t175401*t175424*t175308*t175353*(1.396905119826821E15/1.40737488355328E14);
                double t175437 = 1.0/(t175412*t175412);
                double t175438 = gamma_aa[index]*gx*t175356*8.0;
                double t175439 = gamma_aa[index]*gx*t175401*t175308*t175355*8.0;
                double t175440 = t175401*t175308*t175353*1.6E1;
                double t175441 = t175440+t175438+t175439;
                double t175442 = 1.0/(t175418*t175418);
                double t175443 = gamma_aa[index]*gx*t175356*(3.2E1/3.0);
                double t175444 = gamma_aa[index]*gx*t175401*t175308*t175355*3.2E1;
                double t175445 = t175401*t175308*t175353*3.2E1;
                double t175446 = t175320*t175402*t175363*(3.2E1/3.0);
                double t175447 = t175443+t175444+t175445+t175446;
                double t175448 = 1.0/(t175408*t175408);
                double t175449 = gamma_aa[index]*gx*t175356*(1.6E1/3.0);
                double t175450 = t175401*t175308*t175353*(1.6E1/3.0);
                double t175451 = t175450+t175449;
                double t175452 = 1.0/(t175423*t175423);
                double t175456 = cx1*t175401*t175308*t175353*t175437*(1.396905119826821E15/2.81474976710656E14);
                double t175457 = cx3*gamma_aa[index]*gx*t175401*t175313*t175441*t175442*t175308*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t175458 = cx4*t175311*t175320*t175402*t175447*t175448*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175459 = cx2*t175401*t175312*t175451*t175308*t175452*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175453 = t175433+t175434+t175435+t175436-t175456-t175457-t175458-t175459;
                double t175454 = omega*omega;
                double t175455 = t175431-1.0;
                double t175460 = t175430*t175428*t175289*(1.4000771998813E29/7.427640235712282E27);
                double t175461 = 1.0/(t175426*t175426);
                double t175462 = t175461*t175453*t175428*t175429*(1.4000771998813E29/4.951760157141521E27);
                double t175463 = t175460+t175462;
                double t175464 = sqrt(t175426);
                double t175465 = t175426*t175454*t175455*t175294*(2.475880078570761E27/1.4000771998813E29);
                double t175466 = -t175431+t175465+3.0/2.0;
                double t175467 = 1.0/sqrt(t175426);
                double t175468 = pow(rho_a[index],1.0/3.0);
                double t175469 = t175427*t175467*t175468*(3.74176054803257E14/7.0368744177664E13);
                double t175470 = erf(t175469);
                double t175471 = t175470*(3.991211251234741E15/2.251799813685248E15);
                double t175473 = omega*t175464*t175466*t175289*(7.0368744177664E13/3.74176054803257E14);
                double t175472 = t175471-t175473;
                double t175474 = cx1*gx*t175413*t175307;
                double t175475 = cx4*gamma_aa[index]*t175311*t175402*t175308*t175409*4.0;
                double t175476 = cx2*gamma_aa[index]*t175401*t175312*t175424*2.0;
                double t175477 = cx3*gx*t175401*t175313*t175308*t175419*3.0;
                double t175478 = gx*t175307*3.0;
                double t175479 = gamma_aa[index]*t175401*t175312*6.0;
                double t175480 = gx*t175401*t175313*t175308*3.0;
                double t175481 = t175480+t175478+t175479;
                double t175482 = gx*t175307*4.0;
                double t175483 = gamma_aa[index]*t175401*t175312*1.2E1;
                double t175484 = gx*t175401*t175313*t175308*1.2E1;
                double t175485 = gamma_aa[index]*t175311*t175402*t175308*4.0;
                double t175486 = t175482+t175483+t175484+t175485;
                double t175487 = gx*t175307*2.0;
                double t175488 = gamma_aa[index]*t175401*t175312*2.0;
                double t175489 = t175487+t175488;
                double t175490 = t175474+t175475+t175476+t175477-cx1*gamma_aa[index]*t175401*t175312*t175437-cx2* \
                   t175401*t175312*t175308*t175452*t175489-cx4*t175311*t175320*t175402*t175448*t175486-cx3*gamma_aa[index]* \
                   gx*t175401*t175313*t175442*t175308*t175481;
                double t175491 = pow(rho_a[index],4.0/3.0);
                double t175492 = 1.0/sqrt(3.141592653589793);
                double t175493 = 1.0/pow(t175426,3.0/2.0);
                double t175494 = cx1*gx*t175413*t175307*(4.190715359480463E15/2.251799813685248E15);
                double t175495 = cx4*gamma_aa[index]*t175311*t175402*t175308*t175409*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t175496 = cx2*gamma_aa[index]*t175401*t175312*t175424*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175497 = cx3*gx*t175401*t175313*t175308*t175419*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t175499 = cx1*gamma_aa[index]*t175401*t175312*t175437*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175500 = cx3*gamma_aa[index]*gx*t175401*t175313*t175442*t175308*t175481*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t175501 = cx4*t175311*t175320*t175402*t175448*t175486*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175502 = cx2*t175401*t175312*t175308*t175452*t175489*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175498 = -t175500-t175501-t175502+t175494+t175495+t175496+t175497-t175499;
                double t175503 = cx1*gamma_aa[index]*t175401*t175353*t175437*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t175504 = 1.0/(t175412*t175412*t175412);
                double t175505 = cx3*gx*t175401*t175313*t175441*t175442*t175308*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t175506 = cx2*gamma_aa[index]*t175401*t175312*t175451*t175452*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175507 = cx3*gamma_aa[index]*gx*t175401*t175442*t175308*t175355*t175481*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t175508 = gx*t175356*8.0;
                double t175509 = gamma_aa[index]*t175401*t175353*3.2E1;
                double t175510 = gx*t175401*t175308*t175355*2.4E1;
                double t175511 = t175510+t175508+t175509;
                double t175512 = cx3*gamma_aa[index]*gx*t175401*t175313*t175511*t175442*t175308*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t175513 = cx4*gamma_aa[index]*t175311*t175402*t175308*t175447*t175448*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t175514 = cx4*t175320*t175402*t175363*t175448*t175486*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t175515 = gx*t175356*(3.2E1/3.0);
                double t175516 = gamma_aa[index]*t175401*t175353*6.4E1;
                double t175517 = gx*t175401*t175308*t175355*9.6E1;
                double t175518 = gamma_aa[index]*t175402*t175308*t175363*(1.28E2/3.0);
                double t175519 = t175515+t175516+t175517+t175518;
                double t175520 = cx4*t175311*t175320*t175402*t175519*t175448*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175521 = cx2*t175401*t175308*t175353*t175452*t175489*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t175522 = gx*t175356*(1.6E1/3.0);
                double t175523 = gamma_aa[index]*t175401*t175353*(3.2E1/3.0);
                double t175524 = t175522+t175523;
                double t175525 = cx2*t175401*t175312*t175308*t175452*t175524*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175526 = 1.0/(t175423*t175423*t175423);
                double t175527 = 1.0/(t175418*t175418*t175418);
                double t175528 = 1.0/(t175408*t175408*t175408);
                double t175530 = cx1*gx*t175413*t175356*(1.396905119826821E15/2.81474976710656E14);
                double t175531 = cx4*gamma_aa[index]*t175402*t175308*t175363*t175409*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t175532 = cx2*gamma_aa[index]*t175401*t175424*t175353*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t175533 = cx3*gx*t175401*t175308*t175355*t175419*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t175534 = cx1*gx*t175401*t175504*t175308*t175355*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t175535 = cx2*t175401*t175312*t175451*t175308*t175526*t175489*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175536 = cx3*gamma_aa[index]*gx*t175401*t175313*t175441*t175308*t175481*t175527*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t175537 = cx4*t175311*t175320*t175402*t175447*t175528*t175486*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175529 = t175520+t175503+t175512+t175521-t175530+t175513-t175531+t175505+t175514-t175532+ \
                   t175506-t175533+t175507+t175525-t175534-t175535-t175536-t175537;
                double t175538 = t175461*t175428*t175429*t175529*(1.4000771998813E29/4.951760157141521E27);
                double t175539 = t175461*t175428*t175289*t175498*(1.4000771998813E29/7.427640235712282E27);
                double t175540 = 1.0/(t175426*t175426*t175426);
                double t175541 = t175540*t175453*t175428*t175429*t175498*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t175542 = t175541+t175538+t175539;
                double t175543 = t175430*t175431*t175498*(1.0/2.0);
                double t175544 = t175454*t175455*t175294*t175498*(2.475880078570761E27/1.4000771998813E29);
                double t175553 = t175431*t175461*t175428*t175429*t175498*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t175545 = t175543+t175544-t175553;
                double t175546 = t175426*t175454*t175455*t175386*(4.951760157141521E27/4.2002315996439E29);
                double t175547 = t175453*t175454*t175455*t175294*(2.475880078570761E27/1.4000771998813E29);
                double t175548 = t175431*t175426*t175454*t175463*t175294*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t175560 = t175431*t175463;
                double t175549 = -t175560+t175546+t175547+t175548;
                double t175550 = t175427*t175294*t175467*(3.74176054803257E14/2.11106232532992E14);
                double t175551 = t175453*t175427*t175493*t175468*(3.74176054803257E14/1.40737488355328E14);
                double t175552 = t175550+t175551;
                double t175554 = omega*t175464*t175545*t175289*(7.0368744177664E13/3.74176054803257E14);
                double t175555 = omega*t175466*t175467*t175289*t175498*(3.5184372088832E13/3.74176054803257E14);
                double t175556 = t175431*t175427*t175492*t175493*t175468*t175498*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t175557 = t175554+t175555+t175556;
                double t175558 = t175431*t175552*t175492*(3.991211251234741E15/1.125899906842624E15);
                double t175559 = omega*t175464*t175385*t175466*(7.0368744177664E13/1.122528164409771E15);
                double t175561 = omega*t175464*t175549*t175289*(7.0368744177664E13/3.74176054803257E14);
                double t175562 = omega*t175453*t175466*t175467*t175289*(3.5184372088832E13/3.74176054803257E14);
                double t175563 = t175561+t175562+t175558+t175559;
                double t175564 = cx4*t175311*t175320*t175402*t175409;
                double t175565 = cx1*gamma_aa[index]*gx*t175413*t175307;
                double t175566 = cx3*gamma_aa[index]*gx*t175401*t175313*t175308*t175419;
                double t175567 = cx2*t175401*t175312*t175424*t175308;
                double t175568 = cx0+t175564+t175565+t175566+t175567;
                double t175569 = omega*t175464*t175557*t175289*(2.81474976710656E14/1.122528164409771E15);
                double t175570 = t175569-omega*t175472*t175467*t175289*t175498*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t175571 = omega*t175472*t175464*t175289*(2.81474976710656E14/1.122528164409771E15);
                double t175572 = t175571-1.0;
                v_rho_a_gamma_aa_[index] = -t175400*(t175348+t175331*t175334*(t175347-c0p*t175304*t175306*2.0))+rho_a[index]* \
                   t175400*(-t175395+t175331*t175334*(t175395-(1.0/(t175340*t175340)*t175346*(b2f*c*t175385*(1.0/3.0) \
                   +b4f*t175293*t175386*(2.0/3.0)+b1f*c*t175385*t175387*(1.0/6.0)+b3f*c*t175291*t175385*(1.0/2.0)))/t175343+ \
                   a1f*c*c0f*t175344*t175385*(2.0/3.0)-a1p*c*c0p*t175304*t175385*(2.0/3.0))+a1p*c*c0p*t175304*t175385* \
                   (2.0/3.0))-rho_a[index]*(t175348+t175331*t175334*(t175347-t175348))*(ccaa1*gcaa*t175356*t175349*(- \
                   8.0/3.0)-ccaa2*gamma_aa[index]*t175351*t175353*t175309*(3.2E1/3.0)+ccaa1*gamma_aa[index]*t175353*t175309* \
                   t175354*8.0+ccaa4*t175310*t175320*t175363*t175364*t175369*(3.2E1/3.0)+ccaa2*t175308*t175353*t175309* \
                   t175372*t175358*(1.6E1/3.0)+ccaa4*t175310*t175311*t175320*t175364*(gcaa*t175356*(3.2E1/3.0)+gamma_aa[index]* \
                   t175353*t175309*6.4E1+gamma_aa[index]*t175310*t175308*t175363*(1.28E2/3.0)+gcaa*t175308*t175309*t175355* \
                   9.6E1)-ccaa1*gcaa*1.0/(t175315*t175315*t175315)*t175308*t175309*t175355*(1.6E1/3.0)+ccaa2*t175312* \
                   t175308*t175309*t175358*(gcaa*t175356*(1.6E1/3.0)+gamma_aa[index]*t175353*t175309*(3.2E1/3.0))-ccaa4* \
                   gamma_aa[index]*t175310*t175350*t175308*t175363*(1.28E2/3.0)+ccaa2*gamma_aa[index]*t175312*t175309* \
                   t175375*t175358*2.0-ccaa3*gcaa*t175352*t175308*t175309*t175355*2.4E1+ccaa4*gamma_aa[index]*t175310* \
                   t175311*t175308*t175364*t175384*4.0+ccaa3*gcaa*t175313*t175308*t175309*t175357*t175379*3.0-ccaa4*t175310* \
                   t175311*t175320*1.0/(t175325*t175325*t175325)*t175384*t175369*2.0-ccaa2*t175312*t175308*t175309*t175372* \
                   1.0/(t175328*t175328*t175328)*t175375*2.0+ccaa3*gamma_aa[index]*gcaa*t175313*t175308*t175309*t175357* \
                   (gcaa*t175356*8.0+gamma_aa[index]*t175353*t175309*3.2E1+gcaa*t175308*t175309*t175355*2.4E1)+ccaa3* \
                   gamma_aa[index]*gcaa*t175308*t175362*t175309*t175355*t175357*8.0-ccaa3*gamma_aa[index]*gcaa*t175313* \
                   t175308*t175362*t175309*1.0/(t175319*t175319*t175319)*t175379*2.0)-c0*t175491*t175572*(cx1*gx*t175413* \
                   t175356*(-8.0/3.0)+cx1*gamma_aa[index]*t175401*t175353*t175437*8.0-cx2*gamma_aa[index]*t175401*t175424* \
                   t175353*(3.2E1/3.0)+cx2*t175401*t175312*t175308*t175452*t175524+cx2*t175401*t175308*t175353*t175452* \
                   t175489*(1.6E1/3.0)+cx4*t175311*t175320*t175402*t175519*t175448+cx4*t175320*t175402*t175363*t175448* \
                   t175486*(3.2E1/3.0)+cx2*gamma_aa[index]*t175401*t175312*t175451*t175452*2.0-cx4*gamma_aa[index]*t175402* \
                   t175308*t175363*t175409*(1.28E2/3.0)-cx1*gx*t175401*t175504*t175308*t175355*(1.6E1/3.0)-cx3*gx*t175401* \
                   t175308*t175355*t175419*2.4E1+cx4*gamma_aa[index]*t175311*t175402*t175308*t175447*t175448*4.0+cx3* \
                   gx*t175401*t175313*t175441*t175442*t175308*3.0-cx2*t175401*t175312*t175451*t175308*t175526*t175489* \
                   2.0-cx4*t175311*t175320*t175402*t175447*t175528*t175486*2.0+cx3*gamma_aa[index]*gx*t175401*t175313* \
                   t175511*t175442*t175308+cx3*gamma_aa[index]*gx*t175401*t175442*t175308*t175355*t175481*8.0-cx3*gamma_aa[index]* \
                   gx*t175401*t175313*t175441*t175308*t175481*t175527*2.0)-c0*t175490*t175572*t175468*(4.0/3.0)+c0*t175570* \
                   t175468*t175568*(4.0/3.0)-c0*t175491*t175568*(omega*t175464*t175289*(t175431*t175492*(t175427*t175493* \
                   t175529*t175468*(3.74176054803257E14/1.40737488355328E14)+t175427*t175294*t175493*t175498*(3.74176054803257E14/ \
                   4.22212465065984E14)+1.0/pow(t175426,5.0/2.0)*t175453*t175427*t175468*t175498*(1.122528164409771E15/ \
                   2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15)+omega*t175464*t175545*t175385*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t175464*t175289*(t175431*t175542+t175430*t175431*t175463*t175498*(1.0/ \
                   2.0)+t175431*t175461*t175453*t175498*(1.0/2.0)-t175454*t175455*t175294*t175529*(2.475880078570761E27/ \
                   1.4000771998813E29)+t175454*t175455*t175386*t175498*(4.951760157141521E27/4.2002315996439E29)+(t175430* \
                   t175431*t175498*(1.0/3.0))/rho_a[index]-t175431*t175542*t175426*t175454*t175294*(2.475880078570761E27/ \
                   1.4000771998813E29)+t175431*t175454*t175463*t175294*t175498*(2.475880078570761E27/1.4000771998813E29) \
                   -t175431*t175461*t175463*t175428*t175429*t175498*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)+omega*t175453*t175545*t175467*t175289*(3.5184372088832E13/3.74176054803257E14) \
                   -omega*t175466*t175529*t175467*t175289*(3.5184372088832E13/3.74176054803257E14)+omega*t175385*t175466* \
                   t175467*t175498*(3.5184372088832E13/1.122528164409771E15)+omega*t175467*t175549*t175289*t175498*(3.5184372088832E13/ \
                   3.74176054803257E14)-omega*t175453*t175466*t175493*t175289*t175498*(1.7592186044416E13/3.74176054803257E14) \
                   +t175431*t175461*t175552*t175428*t175429*t175492*t175498*(5.588003872763475E44/5.575186299632656E42) \
                   )*(2.81474976710656E14/1.122528164409771E15)+omega*t175464*t175385*t175557*(2.81474976710656E14/3.367584493229313E15) \
                   +omega*t175453*t175467*t175557*t175289*(1.40737488355328E14/1.122528164409771E15)+omega*t175472*t175529* \
                   t175467*t175289*(1.40737488355328E14/1.122528164409771E15)-omega*t175472*t175385*t175467*t175498*(1.40737488355328E14/ \
                   3.367584493229313E15)+omega*t175563*t175467*t175289*t175498*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t175453*t175472*t175493*t175289*t175498*(7.0368744177664E13/1.122528164409771E15))-c0*t175570* \
                   t175491*(cx1*gamma_aa[index]*gx*t175413*t175356*(8.0/3.0)-cx1*t175401*t175308*t175353*t175437*(8.0/ \
                   3.0)+cx2*t175401*t175424*t175308*t175353*(1.6E1/3.0)+cx4*t175320*t175402*t175363*t175409*(3.2E1/3.0) \
                   -cx2*t175401*t175312*t175451*t175308*t175452-cx4*t175311*t175320*t175402*t175447*t175448+cx3*gamma_aa[index]* \
                   gx*t175401*t175308*t175355*t175419*8.0-cx3*gamma_aa[index]*gx*t175401*t175313*t175441*t175442*t175308) \
                   +c0*t175490*t175491*(omega*t175472*t175464*t175385*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t175464*t175563*t175289*(2.81474976710656E14/1.122528164409771E15)+omega*t175453*t175472*t175467*t175289* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_aa_[index] = 0.0;
            } else {
                v_rho_a_gamma_aa_[index] = 0.0;
            } 

            //V_rho_a_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_ab_[index] = 0.0;
            } else {
                v_rho_a_gamma_ab_[index] = 0.0;
            } 

            //V_rho_a_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t172046 = rho_a[index]+rho_b[index];
                double t172047 = 1.0/pow(t172046,1.0/3.0);
                double t172048 = c*t172047;
                double t172049 = sqrt(t172048);
                double t172050 = b1p*t172049;
                double t172051 = pow(t172048,3.0/2.0);
                double t172052 = b3p*t172051;
                double t172053 = c*c;
                double t172054 = 1.0/pow(t172046,2.0/3.0);
                double t172055 = b4p*t172053*t172054;
                double t172056 = b2p*c*t172047;
                double t172057 = t172050+t172052+t172055+t172056;
                double t172058 = 1.0/pow(t172046,4.0/3.0);
                double t172059 = 1.0/c0p;
                double t172060 = 1.0/t172057;
                double t172061 = t172060*t172059*(1.0/2.0);
                double t172062 = t172061+1.0;
                double t172063 = a1p*c*t172047;
                double t172064 = t172063+1.0;
                double t172065 = rho_a[index]-rho_b[index];
                double t172066 = t172065*t172065;
                double t172067 = 1.0/t172046;
                double t172068 = t172065*t172067;
                double t172069 = two_13*2.0;
                double t172070 = t172069-2.0;
                double t172071 = 1.0/t172070;
                double t172072 = 1.0/c0f;
                double t172073 = b1f*t172049;
                double t172074 = b3f*t172051;
                double t172075 = b4f*t172053*t172054;
                double t172076 = b2f*c*t172047;
                double t172077 = t172073+t172074+t172075+t172076;
                double t172078 = 1.0/t172077;
                double t172079 = t172072*t172078*(1.0/2.0);
                double t172080 = t172079+1.0;
                double t172081 = log(t172080);
                double t172082 = a1f*c*t172047;
                double t172083 = t172082+1.0;
                double t172084 = log(t172062);
                double t172094 = c0f*t172081*t172083*2.0;
                double t172095 = c0p*t172064*t172084*2.0;
                double t172085 = t172094-t172095;
                double t172086 = t172068+1.0;
                double t172087 = pow(t172086,4.0/3.0);
                double t172088 = -t172068+1.0;
                double t172089 = pow(t172088,4.0/3.0);
                double t172090 = t172087+t172089-2.0;
                double t172091 = 1.0/(t172046*t172046);
                double t172122 = t172091*t172065;
                double t172092 = -t172122+t172067;
                double t172093 = 1.0/(t172046*t172046*t172046*t172046);
                double t172096 = t172066*t172066;
                double t172097 = 1.0/pow(t172046,5.0/3.0);
                double t172098 = 1.0/sqrt(t172048);
                double t172099 = 1.0/t172062;
                double t172100 = 1.0/(t172057*t172057);
                double t172101 = b4p*t172053*t172097*(2.0/3.0);
                double t172102 = b2p*c*t172058*(1.0/3.0);
                double t172103 = b1p*c*t172058*t172098*(1.0/6.0);
                double t172104 = b3p*c*t172049*t172058*(1.0/2.0);
                double t172105 = t172101+t172102+t172103+t172104;
                double t172106 = t172100*t172105*t172064*t172099;
                double t172107 = 1.0/(t172046*t172046*t172046*t172046*t172046);
                double t172108 = 1.0/d2fz0;
                double t172109 = 1.0/Aa;
                double t172110 = b1a*t172049;
                double t172111 = b3a*t172051;
                double t172112 = b4a*t172053*t172054;
                double t172113 = b2a*c*t172047;
                double t172114 = t172110+t172111+t172112+t172113;
                double t172115 = 1.0/t172114;
                double t172116 = t172115*t172109*(1.0/2.0);
                double t172117 = t172116+1.0;
                double t172118 = log(t172117);
                double t172119 = a1a*c*t172047;
                double t172120 = t172119+1.0;
                double t172121 = pow(t172086,1.0/3.0);
                double t172123 = t172121*t172092*(4.0/3.0);
                double t172124 = pow(t172088,1.0/3.0);
                double t172125 = t172123-t172124*t172092*(4.0/3.0);
                double t172126 = t172093*t172096;
                double t172127 = t172126-1.0;
                double t172128 = 1.0/pow(rho_a[index],1.0/3.0);
                double t172129 = c*t172128;
                double t172130 = sqrt(t172129);
                double t172131 = b1f*t172130;
                double t172132 = pow(t172129,3.0/2.0);
                double t172133 = b3f*t172132;
                double t172134 = 1.0/pow(rho_a[index],2.0/3.0);
                double t172135 = b4f*t172053*t172134;
                double t172136 = b2f*c*t172128;
                double t172137 = t172131+t172133+t172135+t172136;
                double t172138 = 1.0/pow(rho_a[index],4.0/3.0);
                double t172139 = b1p*t172130;
                double t172140 = b3p*t172132;
                double t172141 = b4p*t172053*t172134;
                double t172142 = b2p*c*t172128;
                double t172143 = t172140+t172141+t172142+t172139;
                double t172144 = 1.0/pow(rho_a[index],5.0/3.0);
                double t172145 = 1.0/sqrt(t172129);
                double t172146 = 1.0/t172137;
                double t172147 = t172072*t172146*(1.0/2.0);
                double t172148 = t172147+1.0;
                double t172149 = 1.0/t172143;
                double t172150 = t172059*t172149*(1.0/2.0);
                double t172151 = t172150+1.0;
                double t172152 = a1p*c*t172128;
                double t172153 = t172152+1.0;
                double t172154 = 1.0/t172151;
                double t172155 = 1.0/(t172143*t172143);
                double t172156 = b4p*t172053*t172144*(2.0/3.0);
                double t172157 = b2p*c*t172138*(1.0/3.0);
                double t172158 = b1p*c*t172145*t172138*(1.0/6.0);
                double t172159 = b3p*c*t172130*t172138*(1.0/2.0);
                double t172160 = t172156+t172157+t172158+t172159;
                double t172161 = t172160*t172153*t172154*t172155;
                double t172162 = log(t172151);
                double t172163 = pow(2.0,1.0/3.0);
                double t172164 = t172163*2.0;
                double t172165 = t172164-2.0;
                double t172166 = log(t172148);
                double t172167 = a1f*c*t172128;
                double t172168 = t172167+1.0;
                double t172169 = 1.0/pow(rho_b[index],8.0/3.0);
                double t172170 = 1.0/pow(rho_a[index],8.0/3.0);
                double t172171 = gamma_aa[index]*t172170*(1.0/2.0);
                double t172172 = gamma_bb[index]*t172169*(1.0/2.0);
                double t172173 = t172171+t172172;
                double t172174 = gcab*t172173;
                double t172175 = t172174+1.0;
                double t172176 = gcab*gcab;
                double t172177 = t172173*t172173;
                double t172178 = t172176*t172176;
                double t172179 = t172177*t172177;
                double t172180 = t172176*t172177;
                double t172181 = gcab*t172173*2.0;
                double t172182 = t172180+t172181+1.0;
                double t172183 = t172176*t172177*3.0;
                double t172184 = gcab*t172173*t172176*t172177;
                double t172185 = gcab*t172173*3.0;
                double t172186 = t172183+t172184+t172185+1.0;
                double t172187 = t172176*t172177*6.0;
                double t172188 = gcab*t172173*t172176*t172177*4.0;
                double t172189 = t172178*t172179;
                double t172190 = gcab*t172173*4.0;
                double t172191 = t172190+t172187+t172188+t172189+1.0;
                double t172192 = c0f*t172166*t172168*2.0;
                double t172194 = c0p*t172153*t172162*2.0;
                double t172193 = t172192-t172194;
                double t172195 = 1.0/pow(rho_b[index],1.0/3.0);
                double t172196 = c*t172195;
                double t172197 = sqrt(t172196);
                double t172198 = pow(t172196,3.0/2.0);
                double t172199 = 1.0/pow(rho_b[index],2.0/3.0);
                double t172200 = b1p*t172197;
                double t172201 = b3p*t172198;
                double t172202 = b4p*t172053*t172199;
                double t172203 = b2p*c*t172195;
                double t172204 = t172200+t172201+t172202+t172203;
                double t172205 = 1.0/t172204;
                double t172206 = t172205*t172059*(1.0/2.0);
                double t172207 = t172206+1.0;
                double t172208 = log(t172207);
                double t172209 = a1p*c*t172195;
                double t172210 = t172209+1.0;
                double t172211 = c0p*t172210*t172208*2.0;
                double t172212 = t172071*t172090*t172093*t172085*t172096;
                double t172213 = Aa*t172120*t172071*t172090*t172108*t172118*t172127*2.0;
                double t172214 = 1.0/pow(rho_a[index],1.1E1/3.0);
                double t172215 = 1.0/(t172186*t172186);
                double t172216 = 1.0/(t172191*t172191);
                double t172217 = gcab*t172169*2.0;
                double t172218 = t172173*t172176*t172169*6.0;
                double t172219 = gcab*t172176*t172177*t172169*6.0;
                double t172220 = t172173*t172177*t172169*t172178*2.0;
                double t172221 = t172220+t172217+t172218+t172219;
                double t172222 = 1.0/(t172182*t172182);
                double t172223 = gamma_aa[index]*gcab*t172214*(8.0/3.0);
                double t172224 = gamma_aa[index]*t172214*t172173*t172176*(8.0/3.0);
                double t172225 = t172223+t172224;
                double t172226 = gcab*t172169;
                double t172227 = t172173*t172176*t172169;
                double t172228 = t172226+t172227;
                double t172229 = gamma_aa[index]*gcab*t172214*(1.6E1/3.0);
                double t172230 = gamma_aa[index]*gcab*t172214*t172176*t172177*1.6E1;
                double t172231 = gamma_aa[index]*t172214*t172173*t172177*t172178*(1.6E1/3.0);
                double t172232 = gamma_aa[index]*t172214*t172173*t172176*1.6E1;
                double t172233 = t172230+t172231+t172232+t172229;
                double t172234 = 1.0/(t172175*t172175);
                double t172235 = 1.0/t172182;
                double t172236 = gcab*t172169*(3.0/2.0);
                double t172237 = t172173*t172176*t172169*3.0;
                double t172238 = gcab*t172176*t172177*t172169*(3.0/2.0);
                double t172239 = t172236+t172237+t172238;
                double t172240 = gamma_aa[index]*gcab*t172214*4.0;
                double t172241 = gamma_aa[index]*gcab*t172214*t172176*t172177*4.0;
                double t172242 = gamma_aa[index]*t172214*t172173*t172176*8.0;
                double t172243 = t172240+t172241+t172242;
                double t172244 = 1.0/t172186;
                double t172245 = 1.0/t172191;
                v_rho_a_gamma_bb_[index] = -(t172212+t172213+t172095+t172046*(t172106-t172071*t172090*t172093*t172096* \
                   (t172106-(t172083*1.0/(t172077*t172077)*(b2f*c*t172058*(1.0/3.0)+b4f*t172053*t172097*(2.0/3.0)+b1f* \
                   c*t172058*t172098*(1.0/6.0)+b3f*c*t172049*t172058*(1.0/2.0)))/t172080+a1f*c*c0f*t172081*t172058*(2.0/ \
                   3.0)-a1p*c*c0p*t172084*t172058*(2.0/3.0))-a1p*c*c0p*t172084*t172058*(2.0/3.0)-t172071*t172107*t172090* \
                   t172085*t172096*4.0+t172071*t172125*t172093*t172085*t172096+t172071*t172090*t172065*t172066*t172093* \
                   t172085*4.0-Aa*t172120*t172071*t172090*t172108*t172118*(t172107*t172096*4.0-t172065*t172066*t172093* \
                   4.0)*2.0+Aa*t172120*t172071*t172125*t172108*t172118*t172127*2.0+(t172120*1.0/(t172114*t172114)*t172071* \
                   t172090*t172108*t172127*(b2a*c*t172058*(1.0/3.0)+b4a*t172053*t172097*(2.0/3.0)+b1a*c*t172058*t172098* \
                   (1.0/6.0)+b3a*c*t172049*t172058*(1.0/2.0)))/t172117-Aa*a1a*c*t172071*t172090*t172108*t172118*t172127* \
                   t172058*(2.0/3.0))+rho_a[index]*(-t172161+t172071*t172165*(t172161-(1.0/(t172137*t172137)*t172168* \
                   (b2f*c*t172138*(1.0/3.0)+b4f*t172053*t172144*(2.0/3.0)+b1f*c*t172145*t172138*(1.0/6.0)+b3f*c*t172130* \
                   t172138*(1.0/2.0)))/t172148+a1f*c*c0f*t172138*t172166*(2.0/3.0)-a1p*c*c0p*t172162*t172138*(2.0/3.0) \
                   )+a1p*c*c0p*t172162*t172138*(2.0/3.0))-c0p*t172153*t172162*2.0-t172071*t172165*t172193)*((ccab1*gcab* \
                   t172169*(1.0/2.0))/t172175-ccab2*t172222*t172228*t172176*t172177-ccab1*t172234*t172173*t172176*t172169* \
                   (1.0/2.0)-ccab4*t172221*t172216*t172178*t172179+ccab2*t172235*t172173*t172176*t172169+ccab4*t172173* \
                   t172245*t172177*t172169*t172178*2.0+ccab3*gcab*t172244*t172176*t172177*t172169*(3.0/2.0)-ccab3*gcab* \
                   t172215*t172173*t172176*t172239*t172177)+(rho_a[index]*(t172194+t172071*t172165*t172193)+rho_b[index]* \
                   (t172211-t172071*t172165*(t172211-c0f*log((t172072*(1.0/2.0))/(b1f*t172197+b3f*t172198+b2f*c*t172195+ \
                   b4f*t172053*t172199)+1.0)*(a1f*c*t172195+1.0)*2.0))-t172046*(t172212+t172213+t172095))*(ccab4*t172216* \
                   t172178*t172179*(gamma_aa[index]*t172214*t172176*t172169*8.0+gamma_aa[index]*t172214*t172177*t172169* \
                   t172178*8.0+gamma_aa[index]*gcab*t172214*t172173*t172176*t172169*1.6E1)+ccab2*t172222*t172225*t172173* \
                   t172176*t172169-ccab4*t172221*t172233*1.0/(t172191*t172191*t172191)*t172178*t172179*2.0-ccab2*t172225* \
                   1.0/(t172182*t172182*t172182)*t172228*t172176*t172177*2.0+ccab1*gamma_aa[index]*t172214*t172234*t172176* \
                   t172169*(4.0/3.0)-ccab2*gamma_aa[index]*t172214*t172235*t172176*t172169*(4.0/3.0)+ccab2*gamma_aa[index]* \
                   t172222*t172214*t172173*t172228*t172176*(8.0/3.0)+ccab2*gamma_aa[index]*t172222*t172214*t172177*t172169* \
                   t172178*(4.0/3.0)-ccab4*gamma_aa[index]*t172214*t172245*t172177*t172169*t172178*8.0+ccab3*gcab*t172215* \
                   t172243*t172176*t172177*t172169*(3.0/2.0)+ccab4*t172233*t172216*t172173*t172177*t172169*t172178*2.0+ \
                   ccab3*gcab*t172215*t172173*t172176*t172177*(gamma_aa[index]*t172214*t172176*t172169*4.0+gamma_aa[index]* \
                   gcab*t172214*t172173*t172176*t172169*4.0)-ccab1*gamma_aa[index]*gcab*t172214*t172173*1.0/(t172175* \
                   t172175*t172175)*t172176*t172169*(4.0/3.0)-ccab3*gcab*t172243*t172173*t172176*t172239*t172177*1.0/ \
                   (t172186*t172186*t172186)*2.0+ccab3*gamma_aa[index]*gcab*t172214*t172215*t172176*t172239*t172177*4.0- \
                   ccab3*gamma_aa[index]*gcab*t172214*t172244*t172173*t172176*t172169*4.0+ccab4*gamma_aa[index]*t172221* \
                   t172214*t172216*t172173*t172177*t172178*(1.6E1/3.0));
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_gamma_bb_[index] = 0.0;
            } else {
                v_rho_a_gamma_bb_[index] = 0.0;
            } 

            //V_rho_b_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t172247 = rho_a[index]+rho_b[index];
                double t172248 = 1.0/pow(t172247,1.0/3.0);
                double t172249 = c*t172248;
                double t172250 = sqrt(t172249);
                double t172251 = b1p*t172250;
                double t172252 = pow(t172249,3.0/2.0);
                double t172253 = b3p*t172252;
                double t172254 = c*c;
                double t172255 = 1.0/pow(t172247,2.0/3.0);
                double t172256 = b4p*t172254*t172255;
                double t172257 = b2p*c*t172248;
                double t172258 = t172251+t172253+t172256+t172257;
                double t172259 = 1.0/pow(t172247,4.0/3.0);
                double t172260 = 1.0/c0p;
                double t172261 = 1.0/t172258;
                double t172262 = t172260*t172261*(1.0/2.0);
                double t172263 = t172262+1.0;
                double t172264 = a1p*c*t172248;
                double t172265 = t172264+1.0;
                double t172266 = rho_a[index]-rho_b[index];
                double t172267 = t172266*t172266;
                double t172268 = 1.0/t172247;
                double t172269 = t172266*t172268;
                double t172270 = two_13*2.0;
                double t172271 = t172270-2.0;
                double t172272 = 1.0/t172271;
                double t172273 = 1.0/c0f;
                double t172274 = b1f*t172250;
                double t172275 = b3f*t172252;
                double t172276 = b4f*t172254*t172255;
                double t172277 = b2f*c*t172248;
                double t172278 = t172274+t172275+t172276+t172277;
                double t172279 = 1.0/t172278;
                double t172280 = t172273*t172279*(1.0/2.0);
                double t172281 = t172280+1.0;
                double t172282 = log(t172281);
                double t172283 = a1f*c*t172248;
                double t172284 = t172283+1.0;
                double t172285 = log(t172263);
                double t172296 = c0f*t172282*t172284*2.0;
                double t172297 = c0p*t172265*t172285*2.0;
                double t172286 = t172296-t172297;
                double t172287 = t172269+1.0;
                double t172288 = pow(t172287,4.0/3.0);
                double t172289 = -t172269+1.0;
                double t172290 = pow(t172289,4.0/3.0);
                double t172291 = t172290+t172288-2.0;
                double t172292 = 1.0/(t172247*t172247);
                double t172293 = t172292*t172266;
                double t172294 = t172293+t172268;
                double t172295 = 1.0/(t172247*t172247*t172247*t172247);
                double t172298 = t172267*t172267;
                double t172299 = 1.0/pow(t172247,5.0/3.0);
                double t172300 = 1.0/sqrt(t172249);
                double t172301 = 1.0/t172263;
                double t172302 = 1.0/(t172258*t172258);
                double t172303 = b4p*t172254*t172299*(2.0/3.0);
                double t172304 = b2p*c*t172259*(1.0/3.0);
                double t172305 = b1p*c*t172300*t172259*(1.0/6.0);
                double t172306 = b3p*c*t172250*t172259*(1.0/2.0);
                double t172307 = t172303+t172304+t172305+t172306;
                double t172308 = 1.0/(t172247*t172247*t172247*t172247*t172247);
                double t172309 = 1.0/d2fz0;
                double t172310 = 1.0/Aa;
                double t172311 = b1a*t172250;
                double t172312 = b3a*t172252;
                double t172313 = b4a*t172254*t172255;
                double t172314 = b2a*c*t172248;
                double t172315 = t172311+t172312+t172313+t172314;
                double t172316 = 1.0/t172315;
                double t172317 = t172310*t172316*(1.0/2.0);
                double t172318 = t172317+1.0;
                double t172319 = log(t172318);
                double t172320 = a1a*c*t172248;
                double t172321 = t172320+1.0;
                double t172322 = pow(t172287,1.0/3.0);
                double t172323 = t172322*t172294*(4.0/3.0);
                double t172324 = pow(t172289,1.0/3.0);
                double t172325 = t172323-t172324*t172294*(4.0/3.0);
                double t172326 = t172295*t172298;
                double t172327 = t172326-1.0;
                double t172328 = 1.0/pow(rho_b[index],1.0/3.0);
                double t172329 = c*t172328;
                double t172330 = sqrt(t172329);
                double t172331 = b1f*t172330;
                double t172332 = pow(t172329,3.0/2.0);
                double t172333 = b3f*t172332;
                double t172334 = 1.0/pow(rho_b[index],2.0/3.0);
                double t172335 = b4f*t172334*t172254;
                double t172336 = b2f*c*t172328;
                double t172337 = t172331+t172333+t172335+t172336;
                double t172338 = 1.0/pow(rho_b[index],4.0/3.0);
                double t172339 = b1p*t172330;
                double t172340 = b3p*t172332;
                double t172341 = b4p*t172334*t172254;
                double t172342 = b2p*c*t172328;
                double t172343 = t172340+t172341+t172342+t172339;
                double t172344 = 1.0/pow(rho_b[index],5.0/3.0);
                double t172345 = 1.0/sqrt(t172329);
                double t172346 = 1.0/t172337;
                double t172347 = t172273*t172346*(1.0/2.0);
                double t172348 = t172347+1.0;
                double t172349 = 1.0/t172343;
                double t172350 = t172260*t172349*(1.0/2.0);
                double t172351 = t172350+1.0;
                double t172352 = a1p*c*t172328;
                double t172353 = t172352+1.0;
                double t172354 = 1.0/t172351;
                double t172355 = 1.0/(t172343*t172343);
                double t172356 = b4p*t172254*t172344*(2.0/3.0);
                double t172357 = b2p*c*t172338*(1.0/3.0);
                double t172358 = b1p*c*t172345*t172338*(1.0/6.0);
                double t172359 = b3p*c*t172330*t172338*(1.0/2.0);
                double t172360 = t172356+t172357+t172358+t172359;
                double t172361 = t172360*t172353*t172354*t172355;
                double t172362 = log(t172351);
                double t172363 = pow(2.0,1.0/3.0);
                double t172364 = t172363*2.0;
                double t172365 = t172364-2.0;
                double t172366 = log(t172348);
                double t172367 = a1f*c*t172328;
                double t172368 = t172367+1.0;
                double t172369 = 1.0/pow(rho_a[index],8.0/3.0);
                double t172370 = gamma_aa[index]*t172369*(1.0/2.0);
                double t172371 = 1.0/pow(rho_b[index],8.0/3.0);
                double t172372 = gamma_bb[index]*t172371*(1.0/2.0);
                double t172373 = t172370+t172372;
                double t172374 = gcab*t172373;
                double t172375 = t172374+1.0;
                double t172376 = gcab*gcab;
                double t172377 = t172373*t172373;
                double t172378 = t172376*t172376;
                double t172379 = t172377*t172377;
                double t172380 = t172376*t172377;
                double t172381 = gcab*t172373*2.0;
                double t172382 = t172380+t172381+1.0;
                double t172383 = t172376*t172377*3.0;
                double t172384 = gcab*t172373*t172376*t172377;
                double t172385 = gcab*t172373*3.0;
                double t172386 = t172383+t172384+t172385+1.0;
                double t172387 = t172376*t172377*6.0;
                double t172388 = gcab*t172373*t172376*t172377*4.0;
                double t172389 = t172378*t172379;
                double t172390 = gcab*t172373*4.0;
                double t172391 = t172390+t172387+t172388+t172389+1.0;
                double t172392 = a1p*c*c0p*t172285*t172259*(2.0/3.0);
                double t172393 = 1.0/pow(rho_a[index],1.0/3.0);
                double t172394 = c*t172393;
                double t172395 = sqrt(t172394);
                double t172396 = pow(t172394,3.0/2.0);
                double t172397 = 1.0/pow(rho_a[index],2.0/3.0);
                double t172398 = b1p*t172395;
                double t172399 = b3p*t172396;
                double t172400 = b4p*t172254*t172397;
                double t172401 = b2p*c*t172393;
                double t172402 = t172400+t172401+t172398+t172399;
                double t172403 = 1.0/t172402;
                double t172404 = t172403*t172260*(1.0/2.0);
                double t172405 = t172404+1.0;
                double t172406 = log(t172405);
                double t172407 = a1p*c*t172393;
                double t172408 = t172407+1.0;
                double t172409 = c0p*t172406*t172408*2.0;
                double t172410 = c0f*t172366*t172368*2.0;
                double t172412 = c0p*t172353*t172362*2.0;
                double t172411 = t172410-t172412;
                double t172413 = t172272*t172291*t172286*t172295*t172298;
                double t172414 = Aa*t172321*t172272*t172291*t172309*t172327*t172319*2.0;
                double t172415 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t172416 = 1.0/(t172386*t172386);
                double t172417 = 1.0/(t172391*t172391);
                double t172418 = gcab*t172369*2.0;
                double t172419 = t172373*t172376*t172369*6.0;
                double t172420 = gcab*t172376*t172377*t172369*6.0;
                double t172421 = t172373*t172377*t172369*t172378*2.0;
                double t172422 = t172420+t172421+t172418+t172419;
                double t172423 = 1.0/(t172382*t172382);
                double t172424 = gamma_bb[index]*gcab*t172415*(8.0/3.0);
                double t172425 = gamma_bb[index]*t172415*t172373*t172376*(8.0/3.0);
                double t172426 = t172424+t172425;
                double t172427 = gcab*t172369;
                double t172428 = t172373*t172376*t172369;
                double t172429 = t172427+t172428;
                double t172430 = gamma_bb[index]*gcab*t172415*(1.6E1/3.0);
                double t172431 = gamma_bb[index]*gcab*t172415*t172376*t172377*1.6E1;
                double t172432 = gamma_bb[index]*t172415*t172373*t172377*t172378*(1.6E1/3.0);
                double t172433 = gamma_bb[index]*t172415*t172373*t172376*1.6E1;
                double t172434 = t172430+t172431+t172432+t172433;
                double t172435 = 1.0/(t172375*t172375);
                double t172436 = 1.0/t172382;
                double t172437 = gcab*t172369*(3.0/2.0);
                double t172438 = t172373*t172376*t172369*3.0;
                double t172439 = gcab*t172376*t172377*t172369*(3.0/2.0);
                double t172440 = t172437+t172438+t172439;
                double t172441 = gamma_bb[index]*gcab*t172415*4.0;
                double t172442 = gamma_bb[index]*gcab*t172415*t172376*t172377*4.0;
                double t172443 = gamma_bb[index]*t172415*t172373*t172376*8.0;
                double t172444 = t172441+t172442+t172443;
                double t172445 = 1.0/t172386;
                double t172446 = 1.0/t172391;
                v_rho_b_gamma_aa_[index] = (rho_b[index]*(t172412+t172411*t172272*t172365)+rho_a[index]*(t172409- \
                   t172272*t172365*(t172409-c0f*log((t172273*(1.0/2.0))/(b1f*t172395+b3f*t172396+b2f*c*t172393+b4f*t172254* \
                   t172397)+1.0)*(a1f*c*t172393+1.0)*2.0))-t172247*(t172413+t172414+t172297))*(ccab4*t172417*t172378* \
                   t172379*(gamma_bb[index]*t172415*t172376*t172369*8.0+gamma_bb[index]*t172415*t172377*t172369*t172378* \
                   8.0+gamma_bb[index]*gcab*t172415*t172373*t172376*t172369*1.6E1)+ccab2*t172423*t172426*t172373*t172376* \
                   t172369-ccab4*t172422*t172434*1.0/(t172391*t172391*t172391)*t172378*t172379*2.0-ccab2*t172426*1.0/ \
                   (t172382*t172382*t172382)*t172429*t172376*t172377*2.0+ccab1*gamma_bb[index]*t172415*t172435*t172376* \
                   t172369*(4.0/3.0)-ccab2*gamma_bb[index]*t172415*t172436*t172376*t172369*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t172423*t172415*t172373*t172429*t172376*(8.0/3.0)+ccab2*gamma_bb[index]*t172423*t172415*t172377*t172369* \
                   t172378*(4.0/3.0)-ccab4*gamma_bb[index]*t172415*t172446*t172377*t172369*t172378*8.0+ccab3*gcab*t172416* \
                   t172444*t172376*t172377*t172369*(3.0/2.0)+ccab4*t172434*t172417*t172373*t172377*t172369*t172378*2.0+ \
                   ccab3*gcab*t172416*t172373*t172376*t172377*(gamma_bb[index]*t172415*t172376*t172369*4.0+gamma_bb[index]* \
                   gcab*t172415*t172373*t172376*t172369*4.0)-ccab1*gamma_bb[index]*gcab*t172415*t172373*1.0/(t172375* \
                   t172375*t172375)*t172376*t172369*(4.0/3.0)-ccab3*gcab*t172440*t172444*t172373*t172376*t172377*1.0/ \
                   (t172386*t172386*t172386)*2.0+ccab3*gamma_bb[index]*gcab*t172440*t172415*t172416*t172376*t172377*4.0- \
                   ccab3*gamma_bb[index]*gcab*t172415*t172373*t172445*t172376*t172369*4.0+ccab4*gamma_bb[index]*t172422* \
                   t172415*t172417*t172373*t172377*t172378*(1.6E1/3.0))-(t172413+t172414+t172297+rho_b[index]*(-t172361+ \
                   t172272*t172365*(t172361-(1.0/(t172337*t172337)*t172368*(b2f*c*t172338*(1.0/3.0)+b4f*t172254*t172344* \
                   (2.0/3.0)+b1f*c*t172345*t172338*(1.0/6.0)+b3f*c*t172330*t172338*(1.0/2.0)))/t172348+a1f*c*c0f*t172338* \
                   t172366*(2.0/3.0)-a1p*c*c0p*t172362*t172338*(2.0/3.0))+a1p*c*c0p*t172362*t172338*(2.0/3.0))-t172247* \
                   (t172392-t172301*t172302*t172307*t172265+t172272*t172308*t172291*t172286*t172298*4.0+t172325*t172272* \
                   t172286*t172295*t172298-t172272*t172291*t172295*t172298*(t172392-t172301*t172302*t172307*t172265+(t172284* \
                   1.0/(t172278*t172278)*(b2f*c*t172259*(1.0/3.0)+b4f*t172254*t172299*(2.0/3.0)+b1f*c*t172300*t172259* \
                   (1.0/6.0)+b3f*c*t172250*t172259*(1.0/2.0)))/t172281-a1f*c*c0f*t172282*t172259*(2.0/3.0))+t172272*t172291* \
                   t172266*t172267*t172286*t172295*4.0+Aa*t172321*t172272*t172291*t172309*t172319*(t172308*t172298*4.0+ \
                   t172266*t172267*t172295*4.0)*2.0+Aa*t172321*t172325*t172272*t172309*t172327*t172319*2.0-(t172321*1.0/ \
                   (t172315*t172315)*t172272*t172291*t172309*t172327*(b2a*c*t172259*(1.0/3.0)+b4a*t172254*t172299*(2.0/ \
                   3.0)+b1a*c*t172300*t172259*(1.0/6.0)+b3a*c*t172250*t172259*(1.0/2.0)))/t172318+Aa*a1a*c*t172272*t172291* \
                   t172309*t172327*t172319*t172259*(2.0/3.0))-c0p*t172353*t172362*2.0-t172411*t172272*t172365)*((ccab1* \
                   gcab*t172369*(1.0/2.0))/t172375-ccab2*t172423*t172429*t172376*t172377-ccab1*t172435*t172373*t172376* \
                   t172369*(1.0/2.0)-ccab4*t172422*t172417*t172378*t172379+ccab2*t172373*t172436*t172376*t172369+ccab4* \
                   t172373*t172446*t172377*t172369*t172378*2.0+ccab3*gcab*t172445*t172376*t172377*t172369*(3.0/2.0)-ccab3* \
                   gcab*t172440*t172416*t172373*t172376*t172377);
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_aa_[index] = 0.0;
            } else {
                v_rho_b_gamma_aa_[index] = 0.0;
            } 

            //V_rho_b_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_gamma_ab_[index] = 0.0;
            } else {
                v_rho_b_gamma_ab_[index] = 0.0;
            } 

            //V_rho_b_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t172449 = 1.0/pow(rho_b[index],1.0/3.0);
                double t172450 = c*t172449;
                double t172451 = sqrt(t172450);
                double t172452 = pow(t172450,3.0/2.0);
                double t172453 = c*c;
                double t172454 = 1.0/pow(rho_b[index],2.0/3.0);
                double t172455 = 1.0/c0p;
                double t172456 = b1p*t172451;
                double t172457 = b3p*t172452;
                double t172458 = b4p*t172453*t172454;
                double t172459 = b2p*c*t172449;
                double t172460 = t172456+t172457+t172458+t172459;
                double t172461 = 1.0/t172460;
                double t172462 = t172461*t172455*(1.0/2.0);
                double t172463 = t172462+1.0;
                double t172464 = log(t172463);
                double t172465 = a1p*c*t172449;
                double t172466 = t172465+1.0;
                double t172467 = 1.0/pow(rho_b[index],8.0/3.0);
                double t172468 = gamma_bb[index]*gamma_bb[index];
                double t172469 = gcaa*gcaa;
                double t172470 = t172469*t172469;
                double t172471 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t172472 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t172473 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t172474 = gamma_bb[index]*gcaa*t172467;
                double t172475 = t172474+1.0;
                double t172476 = gamma_bb[index]*gcaa*t172467*3.0;
                double t172477 = gamma_bb[index]*gcaa*t172473*t172468*t172469;
                double t172478 = t172472*t172468*t172469*3.0;
                double t172479 = t172476+t172477+t172478+1.0;
                double t172480 = t172468*t172468;
                double t172481 = gamma_bb[index]*gcaa*t172467*4.0;
                double t172482 = gamma_bb[index]*gcaa*t172473*t172468*t172469*4.0;
                double t172483 = t172472*t172468*t172469*6.0;
                double t172484 = t172470*t172471*t172480;
                double t172485 = t172481+t172482+t172483+t172484+1.0;
                double t172486 = gamma_bb[index]*gcaa*t172467*2.0;
                double t172487 = t172472*t172468*t172469;
                double t172488 = t172486+t172487+1.0;
                double t172489 = rho_a[index]+rho_b[index];
                double t172490 = 1.0/pow(t172489,1.0/3.0);
                double t172491 = c*t172490;
                double t172492 = sqrt(t172491);
                double t172493 = b1p*t172492;
                double t172494 = pow(t172491,3.0/2.0);
                double t172495 = b3p*t172494;
                double t172496 = 1.0/pow(t172489,2.0/3.0);
                double t172497 = b4p*t172453*t172496;
                double t172498 = b2p*c*t172490;
                double t172499 = t172493+t172495+t172497+t172498;
                double t172500 = 1.0/pow(t172489,4.0/3.0);
                double t172501 = two_13*2.0;
                double t172502 = t172501-2.0;
                double t172503 = 1.0/t172502;
                double t172504 = 1.0/c0f;
                double t172505 = 1.0/t172499;
                double t172506 = t172505*t172455*(1.0/2.0);
                double t172507 = t172506+1.0;
                double t172508 = a1p*c*t172490;
                double t172509 = t172508+1.0;
                double t172510 = rho_a[index]-rho_b[index];
                double t172511 = t172510*t172510;
                double t172512 = 1.0/t172489;
                double t172513 = t172510*t172512;
                double t172514 = b1f*t172492;
                double t172515 = b3f*t172494;
                double t172516 = b4f*t172453*t172496;
                double t172517 = b2f*c*t172490;
                double t172518 = t172514+t172515+t172516+t172517;
                double t172519 = 1.0/t172518;
                double t172520 = t172504*t172519*(1.0/2.0);
                double t172521 = t172520+1.0;
                double t172522 = log(t172521);
                double t172523 = a1f*c*t172490;
                double t172524 = t172523+1.0;
                double t172525 = log(t172507);
                double t172536 = c0f*t172522*t172524*2.0;
                double t172537 = c0p*t172525*t172509*2.0;
                double t172526 = t172536-t172537;
                double t172527 = t172513+1.0;
                double t172528 = pow(t172527,4.0/3.0);
                double t172529 = -t172513+1.0;
                double t172530 = pow(t172529,4.0/3.0);
                double t172531 = t172530+t172528-2.0;
                double t172532 = 1.0/(t172489*t172489);
                double t172533 = t172510*t172532;
                double t172534 = t172512+t172533;
                double t172535 = 1.0/(t172489*t172489*t172489*t172489);
                double t172538 = t172511*t172511;
                double t172539 = 1.0/pow(t172489,5.0/3.0);
                double t172540 = 1.0/sqrt(t172491);
                double t172541 = 1.0/t172507;
                double t172542 = 1.0/(t172499*t172499);
                double t172543 = b4p*t172453*t172539*(2.0/3.0);
                double t172544 = b2p*c*t172500*(1.0/3.0);
                double t172545 = b1p*c*t172500*t172540*(1.0/6.0);
                double t172546 = b3p*c*t172500*t172492*(1.0/2.0);
                double t172547 = t172543+t172544+t172545+t172546;
                double t172548 = 1.0/(t172489*t172489*t172489*t172489*t172489);
                double t172549 = 1.0/d2fz0;
                double t172550 = 1.0/Aa;
                double t172551 = b1a*t172492;
                double t172552 = b3a*t172494;
                double t172553 = b4a*t172453*t172496;
                double t172554 = b2a*c*t172490;
                double t172555 = t172551+t172552+t172553+t172554;
                double t172556 = 1.0/t172555;
                double t172557 = t172550*t172556*(1.0/2.0);
                double t172558 = t172557+1.0;
                double t172559 = log(t172558);
                double t172560 = a1a*c*t172490;
                double t172561 = t172560+1.0;
                double t172562 = pow(t172527,1.0/3.0);
                double t172563 = t172534*t172562*(4.0/3.0);
                double t172564 = pow(t172529,1.0/3.0);
                double t172565 = t172563-t172534*t172564*(4.0/3.0);
                double t172566 = t172535*t172538;
                double t172567 = t172566-1.0;
                double t172568 = pow(2.0,1.0/3.0);
                double t172569 = t172568*2.0;
                double t172570 = t172569-2.0;
                double t172571 = a1f*c*t172449;
                double t172572 = t172571+1.0;
                double t172573 = b1f*t172451;
                double t172574 = b3f*t172452;
                double t172575 = b4f*t172453*t172454;
                double t172576 = b2f*c*t172449;
                double t172577 = t172573+t172574+t172575+t172576;
                double t172578 = 1.0/t172577;
                double t172579 = t172504*t172578*(1.0/2.0);
                double t172580 = t172579+1.0;
                double t172581 = 1.0/pow(rho_b[index],4.0/3.0);
                double t172582 = 1.0/pow(rho_b[index],5.0/3.0);
                double t172583 = 1.0/sqrt(t172450);
                double t172584 = log(t172580);
                double t172585 = 1.0/t172463;
                double t172586 = 1.0/(t172460*t172460);
                double t172587 = b4p*t172453*t172582*(2.0/3.0);
                double t172588 = b2p*c*t172581*(1.0/3.0);
                double t172589 = b1p*c*t172581*t172583*(1.0/6.0);
                double t172590 = b3p*c*t172451*t172581*(1.0/2.0);
                double t172591 = t172590+t172587+t172588+t172589;
                double t172592 = t172591*t172466*t172585*t172586;
                double t172593 = c0f*t172572*t172584*2.0;
                double t172594 = c0p*t172464*t172466*2.0;
                double t172595 = 1.0/pow(rho_a[index],8.0/3.0);
                double t172596 = gamma_aa[index]*t172595*(1.0/2.0);
                double t172597 = gamma_bb[index]*t172467*(1.0/2.0);
                double t172598 = t172596+t172597;
                double t172599 = gcab*t172598;
                double t172600 = t172599+1.0;
                double t172601 = gcab*gcab;
                double t172602 = t172598*t172598;
                double t172603 = t172601*t172601;
                double t172604 = t172602*t172602;
                double t172605 = t172601*t172602;
                double t172606 = gcab*t172598*2.0;
                double t172607 = t172605+t172606+1.0;
                double t172608 = t172601*t172602*3.0;
                double t172609 = gcab*t172601*t172602*t172598;
                double t172610 = gcab*t172598*3.0;
                double t172611 = t172610+t172608+t172609+1.0;
                double t172612 = t172601*t172602*6.0;
                double t172613 = gcab*t172601*t172602*t172598*4.0;
                double t172614 = t172603*t172604;
                double t172615 = gcab*t172598*4.0;
                double t172616 = t172612+t172613+t172614+t172615+1.0;
                double t172617 = a1p*c*c0p*t172500*t172525*(2.0/3.0);
                double t172618 = 1.0/pow(rho_a[index],1.0/3.0);
                double t172619 = c*t172618;
                double t172620 = sqrt(t172619);
                double t172621 = pow(t172619,3.0/2.0);
                double t172622 = 1.0/pow(rho_a[index],2.0/3.0);
                double t172623 = b1p*t172620;
                double t172624 = b3p*t172621;
                double t172625 = b4p*t172622*t172453;
                double t172626 = b2p*c*t172618;
                double t172627 = t172623+t172624+t172625+t172626;
                double t172628 = 1.0/t172627;
                double t172629 = t172455*t172628*(1.0/2.0);
                double t172630 = t172629+1.0;
                double t172631 = log(t172630);
                double t172632 = a1p*c*t172618;
                double t172633 = t172632+1.0;
                double t172634 = c0p*t172631*t172633*2.0;
                double t172635 = t172593-t172594;
                double t172636 = t172503*t172531*t172526*t172535*t172538;
                double t172637 = Aa*t172503*t172531*t172561*t172549*t172567*t172559*2.0;
                double t172638 = 1.0/t172600;
                double t172639 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t172640 = 1.0/(t172600*t172600);
                double t172641 = 1.0/t172607;
                double t172642 = 1.0/(t172611*t172611);
                double t172643 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t172644 = 1.0/(t172607*t172607);
                double t172645 = 1.0/t172611;
                double t172646 = 1.0/t172616;
                double t172647 = 1.0/(t172616*t172616);
                double t172648 = gcab*t172467*2.0;
                double t172649 = t172601*t172467*t172598*6.0;
                double t172650 = gcab*t172601*t172602*t172467*6.0;
                double t172651 = t172602*t172603*t172467*t172598*2.0;
                double t172652 = t172650+t172651+t172648+t172649;
                double t172653 = gamma_bb[index]*gcab*t172639*(8.0/3.0);
                double t172654 = gamma_bb[index]*t172601*t172639*t172598*(8.0/3.0);
                double t172655 = t172653+t172654;
                double t172656 = gcab*t172467;
                double t172657 = t172601*t172467*t172598;
                double t172658 = t172656+t172657;
                double t172659 = gamma_bb[index]*gcab*t172639*(1.6E1/3.0);
                double t172660 = gamma_bb[index]*gcab*t172601*t172602*t172639*1.6E1;
                double t172661 = gamma_bb[index]*t172602*t172603*t172639*t172598*(1.6E1/3.0);
                double t172662 = gamma_bb[index]*t172601*t172639*t172598*1.6E1;
                double t172663 = t172660+t172661+t172662+t172659;
                double t172664 = gcab*t172467*(3.0/2.0);
                double t172665 = t172601*t172467*t172598*3.0;
                double t172666 = gcab*t172601*t172602*t172467*(3.0/2.0);
                double t172667 = t172664+t172665+t172666;
                double t172668 = gamma_bb[index]*gcab*t172639*4.0;
                double t172669 = gamma_bb[index]*gcab*t172601*t172602*t172639*4.0;
                double t172670 = gamma_bb[index]*t172601*t172639*t172598*8.0;
                double t172671 = t172670+t172668+t172669;
                double t172672 = t172503*t172570*t172635;
                double t172673 = t172672+t172594;
                double t172674 = 1.0/t172475;
                double t172675 = 1.0/t172485;
                double t172676 = 1.0/t172488;
                double t172677 = 1.0/t172479;
                double t172678 = 1.0/(t172475*t172475);
                double t172679 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t172680 = 1.0/(t172479*t172479);
                double t172681 = 1.0/(t172488*t172488);
                double t172682 = gcaa*t172467*3.0;
                double t172683 = gamma_bb[index]*t172472*t172469*6.0;
                double t172684 = gcaa*t172473*t172468*t172469*3.0;
                double t172685 = t172682+t172683+t172684;
                double t172686 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t172687 = 1.0/(t172485*t172485);
                double t172688 = gcaa*t172467*4.0;
                double t172689 = gamma_bb[index]*t172472*t172469*1.2E1;
                double t172690 = gcaa*t172473*t172468*t172469*1.2E1;
                double t172691 = gamma_bb[index]*t172470*t172471*t172468*4.0;
                double t172692 = t172690+t172691+t172688+t172689;
                double t172693 = gcaa*t172467*2.0;
                double t172694 = gamma_bb[index]*t172472*t172469*2.0;
                double t172695 = t172693+t172694;
                double t172696 = gamma_bb[index]*gcaa*t172639*(1.6E1/3.0);
                double t172697 = t172643*t172468*t172469*(1.6E1/3.0);
                double t172698 = t172696+t172697;
                double t172699 = gamma_bb[index]*gcaa*t172639*8.0;
                double t172700 = gamma_bb[index]*gcaa*t172468*t172469*t172679*8.0;
                double t172701 = t172643*t172468*t172469*1.6E1;
                double t172702 = t172700+t172701+t172699;
                double t172703 = gamma_bb[index]*gcaa*t172639*(3.2E1/3.0);
                double t172704 = gamma_bb[index]*gcaa*t172468*t172469*t172679*3.2E1;
                double t172705 = t172643*t172468*t172469*3.2E1;
                double t172706 = t172470*t172480*t172686*(3.2E1/3.0);
                double t172707 = t172703+t172704+t172705+t172706;
                double t172708 = 1.0/t172580;
                double t172709 = 1.0/(t172577*t172577);
                double t172710 = b4f*t172453*t172582*(2.0/3.0);
                double t172711 = b2f*c*t172581*(1.0/3.0);
                double t172712 = b1f*c*t172581*t172583*(1.0/6.0);
                double t172713 = b3f*c*t172451*t172581*(1.0/2.0);
                double t172714 = t172710+t172711+t172712+t172713;
                double t172715 = a1f*c*c0f*t172581*t172584*(2.0/3.0);
                double t172716 = a1p*c*c0p*t172464*t172581*(2.0/3.0);
                double t172717 = ccaa1*gcaa*t172467*t172674;
                double t172718 = ccaa4*gamma_bb[index]*t172470*t172471*t172468*t172675*4.0;
                double t172719 = ccaa2*gamma_bb[index]*t172472*t172469*t172676*2.0;
                double t172720 = ccaa3*gcaa*t172473*t172468*t172469*t172677*3.0;
                double t172721 = t172720+t172717+t172718+t172719-ccaa1*gamma_bb[index]*t172472*t172469*t172678-ccaa4* \
                   t172470*t172471*t172480*t172692*t172687-ccaa2*t172472*t172681*t172468*t172469*t172695-ccaa3*gamma_bb[index]* \
                   gcaa*t172473*t172680*t172468*t172469*t172685;
                double t172722 = gx*gx;
                double t172723 = t172722*t172722;
                double t172724 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t172725 = gamma_bb[index]*gx*t172467*4.0;
                double t172726 = gamma_bb[index]*gx*t172722*t172473*t172468*4.0;
                double t172727 = t172722*t172472*t172468*6.0;
                double t172728 = t172471*t172480*t172723;
                double t172729 = t172725+t172726+t172727+t172728+1.0;
                double t172730 = 1.0/t172729;
                double t172731 = cx4*t172730*t172471*t172480*t172723*(4.190715359480463E15/2.251799813685248E15);
                double t172732 = gamma_bb[index]*gx*t172467;
                double t172733 = t172732+1.0;
                double t172734 = 1.0/t172733;
                double t172735 = cx1*gamma_bb[index]*gx*t172734*t172467*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172736 = gamma_bb[index]*gx*t172467*3.0;
                double t172737 = gamma_bb[index]*gx*t172722*t172473*t172468;
                double t172738 = t172722*t172472*t172468*3.0;
                double t172739 = t172736+t172737+t172738+1.0;
                double t172740 = 1.0/t172739;
                double t172741 = cx3*gamma_bb[index]*gx*t172722*t172740*t172473*t172468*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172742 = gamma_bb[index]*gx*t172467*2.0;
                double t172743 = t172722*t172472*t172468;
                double t172744 = t172742+t172743+1.0;
                double t172745 = 1.0/t172744;
                double t172746 = cx2*t172722*t172472*t172745*t172468*(4.190715359480463E15/2.251799813685248E15);
                double t172747 = t172731+t172741+t172724+t172735+t172746;
                double t172748 = 1.0/omega;
                double t172749 = 1.0/(omega*omega);
                double t172750 = pow(rho_b[index],2.0/3.0);
                double t172751 = 1.0/t172747;
                double t172753 = t172750*t172751*t172749*(1.4000771998813E29/4.951760157141521E27);
                double t172752 = exp(-t172753);
                double t172754 = cx4*t172730*t172480*t172723*t172686*(1.396905119826821E15/7.0368744177664E13);
                double t172755 = cx1*gamma_bb[index]*gx*t172734*t172639*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t172756 = cx3*gamma_bb[index]*gx*t172722*t172740*t172468*t172679*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t172757 = cx2*t172722*t172643*t172745*t172468*(1.396905119826821E15/1.40737488355328E14);
                double t172758 = 1.0/(t172733*t172733);
                double t172759 = gamma_bb[index]*gx*t172639*8.0;
                double t172760 = gamma_bb[index]*gx*t172722*t172468*t172679*8.0;
                double t172761 = t172722*t172643*t172468*1.6E1;
                double t172762 = t172760+t172761+t172759;
                double t172763 = 1.0/(t172739*t172739);
                double t172764 = gamma_bb[index]*gx*t172639*(3.2E1/3.0);
                double t172765 = gamma_bb[index]*gx*t172722*t172468*t172679*3.2E1;
                double t172766 = t172722*t172643*t172468*3.2E1;
                double t172767 = t172480*t172723*t172686*(3.2E1/3.0);
                double t172768 = t172764+t172765+t172766+t172767;
                double t172769 = 1.0/(t172729*t172729);
                double t172770 = gamma_bb[index]*gx*t172639*(1.6E1/3.0);
                double t172771 = t172722*t172643*t172468*(1.6E1/3.0);
                double t172772 = t172770+t172771;
                double t172773 = 1.0/(t172744*t172744);
                double t172777 = cx1*t172722*t172643*t172468*t172758*(1.396905119826821E15/2.81474976710656E14);
                double t172778 = cx3*gamma_bb[index]*gx*t172722*t172473*t172762*t172763*t172468*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t172779 = cx4*t172471*t172480*t172723*t172768*t172769*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172780 = cx2*t172722*t172472*t172772*t172773*t172468*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172774 = -t172780+t172754+t172755+t172756+t172757-t172777-t172778-t172779;
                double t172775 = omega*omega;
                double t172776 = t172752-1.0;
                double t172781 = t172751*t172449*t172749*(1.4000771998813E29/7.427640235712282E27);
                double t172782 = 1.0/(t172747*t172747);
                double t172783 = t172750*t172782*t172774*t172749*(1.4000771998813E29/4.951760157141521E27);
                double t172784 = t172781+t172783;
                double t172785 = sqrt(t172747);
                double t172786 = t172454*t172747*t172775*t172776*(2.475880078570761E27/1.4000771998813E29);
                double t172787 = -t172752+t172786+3.0/2.0;
                double t172788 = 1.0/sqrt(t172747);
                double t172789 = pow(rho_b[index],1.0/3.0);
                double t172790 = t172748*t172788*t172789*(3.74176054803257E14/7.0368744177664E13);
                double t172791 = erf(t172790);
                double t172792 = t172791*(3.991211251234741E15/2.251799813685248E15);
                double t172794 = omega*t172449*t172785*t172787*(7.0368744177664E13/3.74176054803257E14);
                double t172793 = t172792-t172794;
                double t172795 = cx1*gx*t172734*t172467;
                double t172796 = cx4*gamma_bb[index]*t172730*t172471*t172723*t172468*4.0;
                double t172797 = cx2*gamma_bb[index]*t172722*t172472*t172745*2.0;
                double t172798 = cx3*gx*t172722*t172740*t172473*t172468*3.0;
                double t172799 = gx*t172467*3.0;
                double t172800 = gamma_bb[index]*t172722*t172472*6.0;
                double t172801 = gx*t172722*t172473*t172468*3.0;
                double t172802 = t172800+t172801+t172799;
                double t172803 = gx*t172467*4.0;
                double t172804 = gamma_bb[index]*t172722*t172472*1.2E1;
                double t172805 = gx*t172722*t172473*t172468*1.2E1;
                double t172806 = gamma_bb[index]*t172471*t172723*t172468*4.0;
                double t172807 = t172803+t172804+t172805+t172806;
                double t172808 = gx*t172467*2.0;
                double t172809 = gamma_bb[index]*t172722*t172472*2.0;
                double t172810 = t172808+t172809;
                double t172811 = t172795+t172796+t172797+t172798-cx1*gamma_bb[index]*t172722*t172472*t172758-cx2* \
                   t172810*t172722*t172472*t172773*t172468-cx4*t172471*t172480*t172723*t172807*t172769-cx3*gamma_bb[index]* \
                   gx*t172802*t172722*t172473*t172763*t172468;
                double t172812 = pow(rho_b[index],4.0/3.0);
                double t172813 = 1.0/sqrt(3.141592653589793);
                double t172814 = 1.0/pow(t172747,3.0/2.0);
                double t172815 = cx1*gx*t172734*t172467*(4.190715359480463E15/2.251799813685248E15);
                double t172816 = cx4*gamma_bb[index]*t172730*t172471*t172723*t172468*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t172817 = cx2*gamma_bb[index]*t172722*t172472*t172745*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t172818 = cx3*gx*t172722*t172740*t172473*t172468*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t172820 = cx1*gamma_bb[index]*t172722*t172472*t172758*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172821 = cx3*gamma_bb[index]*gx*t172802*t172722*t172473*t172763*t172468*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t172822 = cx4*t172471*t172480*t172723*t172807*t172769*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172823 = cx2*t172810*t172722*t172472*t172773*t172468*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172819 = -t172820-t172821-t172822-t172823+t172815+t172816+t172817+t172818;
                double t172824 = cx1*gamma_bb[index]*t172722*t172643*t172758*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t172825 = 1.0/(t172733*t172733*t172733);
                double t172826 = cx3*gx*t172722*t172473*t172762*t172763*t172468*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t172827 = cx2*gamma_bb[index]*t172722*t172472*t172772*t172773*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t172828 = cx3*gamma_bb[index]*gx*t172802*t172722*t172763*t172468*t172679*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t172829 = gx*t172639*8.0;
                double t172830 = gamma_bb[index]*t172722*t172643*3.2E1;
                double t172831 = gx*t172722*t172468*t172679*2.4E1;
                double t172832 = t172830+t172831+t172829;
                double t172833 = cx3*gamma_bb[index]*gx*t172722*t172832*t172473*t172763*t172468*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t172834 = cx4*gamma_bb[index]*t172471*t172723*t172468*t172768*t172769*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t172835 = cx4*t172480*t172723*t172807*t172686*t172769*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t172836 = gx*t172639*(3.2E1/3.0);
                double t172837 = gamma_bb[index]*t172722*t172643*6.4E1;
                double t172838 = gx*t172722*t172468*t172679*9.6E1;
                double t172839 = gamma_bb[index]*t172723*t172468*t172686*(1.28E2/3.0);
                double t172840 = t172836+t172837+t172838+t172839;
                double t172841 = cx4*t172471*t172480*t172723*t172840*t172769*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172842 = cx2*t172810*t172722*t172643*t172773*t172468*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t172843 = gx*t172639*(1.6E1/3.0);
                double t172844 = gamma_bb[index]*t172722*t172643*(3.2E1/3.0);
                double t172845 = t172843+t172844;
                double t172846 = cx2*t172722*t172472*t172773*t172845*t172468*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t172847 = 1.0/(t172744*t172744*t172744);
                double t172848 = 1.0/(t172739*t172739*t172739);
                double t172849 = 1.0/(t172729*t172729*t172729);
                double t172851 = cx1*gx*t172734*t172639*(1.396905119826821E15/2.81474976710656E14);
                double t172852 = cx4*gamma_bb[index]*t172730*t172723*t172468*t172686*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t172853 = cx2*gamma_bb[index]*t172722*t172643*t172745*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t172854 = cx3*gx*t172722*t172740*t172468*t172679*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t172855 = cx1*gx*t172722*t172825*t172468*t172679*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t172856 = cx2*t172810*t172722*t172472*t172772*t172468*t172847*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t172857 = cx3*gamma_bb[index]*gx*t172802*t172722*t172473*t172762*t172468*t172848*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t172858 = cx4*t172471*t172480*t172723*t172807*t172768*t172849*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t172850 = t172841+t172824+t172833+t172842-t172851+t172834-t172852+t172826+t172835-t172853+ \
                   t172827-t172854+t172828+t172846-t172855-t172856-t172857-t172858;
                double t172859 = t172750*t172850*t172782*t172749*(1.4000771998813E29/4.951760157141521E27);
                double t172860 = t172449*t172782*t172819*t172749*(1.4000771998813E29/7.427640235712282E27);
                double t172861 = 1.0/(t172747*t172747*t172747);
                double t172862 = t172750*t172861*t172774*t172819*t172749*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t172863 = t172860+t172862+t172859;
                double t172864 = t172751*t172752*t172819*(1.0/2.0);
                double t172865 = t172454*t172819*t172775*t172776*(2.475880078570761E27/1.4000771998813E29);
                double t172874 = t172750*t172752*t172782*t172819*t172749*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t172866 = t172864+t172865-t172874;
                double t172867 = t172582*t172747*t172775*t172776*(4.951760157141521E27/4.2002315996439E29);
                double t172868 = t172454*t172774*t172775*t172776*(2.475880078570761E27/1.4000771998813E29);
                double t172869 = t172454*t172752*t172747*t172775*t172784*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t172881 = t172752*t172784;
                double t172870 = -t172881+t172867+t172868+t172869;
                double t172871 = t172454*t172748*t172788*(3.74176054803257E14/2.11106232532992E14);
                double t172872 = t172814*t172774*t172748*t172789*(3.74176054803257E14/1.40737488355328E14);
                double t172873 = t172871+t172872;
                double t172875 = omega*t172449*t172785*t172866*(7.0368744177664E13/3.74176054803257E14);
                double t172876 = omega*t172449*t172819*t172787*t172788*(3.5184372088832E13/3.74176054803257E14);
                double t172877 = t172813*t172814*t172752*t172819*t172748*t172789*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t172878 = t172875+t172876+t172877;
                double t172879 = t172813*t172752*t172873*(3.991211251234741E15/1.125899906842624E15);
                double t172880 = omega*t172581*t172785*t172787*(7.0368744177664E13/1.122528164409771E15);
                double t172882 = omega*t172870*t172449*t172785*(7.0368744177664E13/3.74176054803257E14);
                double t172883 = omega*t172449*t172774*t172787*t172788*(3.5184372088832E13/3.74176054803257E14);
                double t172884 = t172880+t172882+t172883+t172879;
                double t172885 = cx4*t172730*t172471*t172480*t172723;
                double t172886 = cx1*gamma_bb[index]*gx*t172734*t172467;
                double t172887 = cx3*gamma_bb[index]*gx*t172722*t172740*t172473*t172468;
                double t172888 = cx2*t172722*t172472*t172745*t172468;
                double t172889 = cx0+t172885+t172886+t172887+t172888;
                double t172890 = omega*t172449*t172785*t172878*(2.81474976710656E14/1.122528164409771E15);
                double t172891 = t172890-omega*t172449*t172819*t172793*t172788*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t172892 = omega*t172449*t172793*t172785*(2.81474976710656E14/1.122528164409771E15);
                double t172893 = t172892-1.0;
                v_rho_b_gamma_bb_[index] = -(rho_b[index]*t172673+rho_a[index]*(t172634-t172503*t172570*(t172634- \
                   c0f*log((t172504*(1.0/2.0))/(b1f*t172620+b3f*t172621+b2f*c*t172618+b4f*t172622*t172453)+1.0)*(a1f* \
                   c*t172618+1.0)*2.0))-t172489*(t172537+t172636+t172637))*(ccab1*gcab*t172638*t172639*(4.0/3.0)-ccab2* \
                   t172601*t172602*t172644*(gcab*t172639*(8.0/3.0)+gamma_bb[index]*t172601*t172643*(4.0/3.0)+t172601* \
                   t172639*t172598*(8.0/3.0))-ccab4*t172603*t172604*t172647*(gcab*t172639*(1.6E1/3.0)+gamma_bb[index]* \
                   t172601*t172643*8.0+t172601*t172639*t172598*1.6E1+gamma_bb[index]*t172602*t172603*t172643*8.0+gcab* \
                   t172601*t172602*t172639*1.6E1+t172602*t172603*t172639*t172598*(1.6E1/3.0)+gamma_bb[index]*gcab*t172601* \
                   t172643*t172598*1.6E1)-ccab1*gamma_bb[index]*t172601*t172640*t172643*(4.0/3.0)+ccab2*gamma_bb[index]* \
                   t172601*t172641*t172643*(4.0/3.0)-ccab1*t172601*t172640*t172639*t172598*(4.0/3.0)+ccab2*t172601*t172641* \
                   t172639*t172598*(8.0/3.0)+ccab4*t172602*t172603*t172646*t172639*t172598*(1.6E1/3.0)-ccab2*t172601* \
                   t172644*t172655*t172467*t172598+ccab4*t172603*t172604*1.0/(t172616*t172616*t172616)*t172652*t172663* \
                   2.0+ccab2*t172601*t172602*1.0/(t172607*t172607*t172607)*t172655*t172658*2.0+ccab4*gamma_bb[index]* \
                   t172602*t172603*t172643*t172646*8.0+ccab3*gcab*t172601*t172602*t172645*t172639*4.0+ccab3*gamma_bb[index]* \
                   gcab*t172601*t172643*t172645*t172598*4.0-ccab2*gamma_bb[index]*t172601*t172644*t172639*t172658*t172598* \
                   (8.0/3.0)-ccab3*gcab*t172601*t172602*t172642*t172671*t172467*(3.0/2.0)-ccab4*t172602*t172603*t172663* \
                   t172467*t172647*t172598*2.0-ccab3*gcab*t172601*t172602*t172642*t172598*(gcab*t172639*4.0+gamma_bb[index]* \
                   t172601*t172643*4.0+t172601*t172639*t172598*8.0+gcab*t172601*t172602*t172639*4.0+gamma_bb[index]*gcab* \
                   t172601*t172643*t172598*4.0)+ccab1*gamma_bb[index]*gcab*1.0/(t172600*t172600*t172600)*t172601*t172643* \
                   t172598*(4.0/3.0)+ccab3*gcab*t172601*t172602*1.0/(t172611*t172611*t172611)*t172671*t172667*t172598* \
                   2.0-ccab3*gamma_bb[index]*gcab*t172601*t172602*t172642*t172639*t172667*4.0-ccab4*gamma_bb[index]*t172602* \
                   t172603*t172652*t172647*t172639*t172598*(1.6E1/3.0))-(t172537+t172636+t172637-t172594+rho_b[index]* \
                   (t172716-t172592+t172503*t172570*(t172715+t172592-t172714*t172572*t172708*t172709-a1p*c*c0p*t172464* \
                   t172581*(2.0/3.0)))-t172489*(t172617-t172541*t172542*t172509*t172547+t172503*t172531*t172526*t172538* \
                   t172548*4.0+t172503*t172526*t172535*t172538*t172565-t172503*t172531*t172535*t172538*(t172617-t172541* \
                   t172542*t172509*t172547+(t172524*1.0/(t172518*t172518)*(b2f*c*t172500*(1.0/3.0)+b4f*t172453*t172539* \
                   (2.0/3.0)+b1f*c*t172500*t172540*(1.0/6.0)+b3f*c*t172500*t172492*(1.0/2.0)))/t172521-a1f*c*c0f*t172500* \
                   t172522*(2.0/3.0))+t172510*t172511*t172503*t172531*t172526*t172535*4.0+Aa*t172503*t172531*t172561* \
                   t172549*t172559*(t172538*t172548*4.0+t172510*t172511*t172535*4.0)*2.0+Aa*t172503*t172561*t172565*t172549* \
                   t172567*t172559*2.0-(t172503*t172531*t172561*1.0/(t172555*t172555)*t172549*t172567*(b2a*c*t172500* \
                   (1.0/3.0)+b4a*t172453*t172539*(2.0/3.0)+b1a*c*t172500*t172540*(1.0/6.0)+b3a*c*t172500*t172492*(1.0/ \
                   2.0)))/t172558+Aa*a1a*c*t172500*t172503*t172531*t172549*t172567*t172559*(2.0/3.0))-t172503*t172570* \
                   t172635)*(ccab1*gcab*t172467*t172638*(1.0/2.0)-ccab2*t172601*t172602*t172644*t172658-ccab4*t172603* \
                   t172604*t172652*t172647-ccab1*t172601*t172640*t172467*t172598*(1.0/2.0)+ccab2*t172601*t172641*t172467* \
                   t172598+ccab4*t172602*t172603*t172646*t172467*t172598*2.0+ccab3*gcab*t172601*t172602*t172645*t172467* \
                   (3.0/2.0)-ccab3*gcab*t172601*t172602*t172642*t172667*t172598)-t172721*(t172594+t172503*t172570*(t172593- \
                   c0p*t172464*t172466*2.0))-rho_b[index]*t172673*(ccaa1*gcaa*t172674*t172639*(-8.0/3.0)-ccaa2*gamma_bb[index]* \
                   t172643*t172469*t172676*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t172643*t172469*t172678*8.0+ccaa4*t172470* \
                   t172480*t172692*t172686*t172687*(3.2E1/3.0)+ccaa2*t172643*t172681*t172468*t172469*t172695*(1.6E1/3.0) \
                   +ccaa4*t172470*t172471*t172480*t172687*(gcaa*t172639*(3.2E1/3.0)+gamma_bb[index]*t172643*t172469*6.4E1+ \
                   gamma_bb[index]*t172470*t172468*t172686*(1.28E2/3.0)+gcaa*t172468*t172469*t172679*9.6E1)-ccaa1*gcaa* \
                   1.0/(t172475*t172475*t172475)*t172468*t172469*t172679*(1.6E1/3.0)+ccaa2*t172472*t172681*t172468*t172469* \
                   (gcaa*t172639*(1.6E1/3.0)+gamma_bb[index]*t172643*t172469*(3.2E1/3.0))-ccaa4*gamma_bb[index]*t172470* \
                   t172468*t172675*t172686*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t172472*t172681*t172469*t172698*2.0-ccaa3* \
                   gcaa*t172468*t172469*t172677*t172679*2.4E1+ccaa4*gamma_bb[index]*t172470*t172471*t172707*t172468*t172687* \
                   4.0+ccaa3*gcaa*t172702*t172473*t172680*t172468*t172469*3.0-ccaa4*t172470*t172471*t172480*t172707*1.0/ \
                   (t172485*t172485*t172485)*t172692*2.0-ccaa2*t172472*t172468*t172469*1.0/(t172488*t172488*t172488)* \
                   t172695*t172698*2.0+ccaa3*gamma_bb[index]*gcaa*t172473*t172680*t172468*t172469*(gcaa*t172639*8.0+gamma_bb[index]* \
                   t172643*t172469*3.2E1+gcaa*t172468*t172469*t172679*2.4E1)+ccaa3*gamma_bb[index]*gcaa*t172680*t172468* \
                   t172469*t172685*t172679*8.0-ccaa3*gamma_bb[index]*gcaa*t172702*t172473*t172468*t172469*t172685*1.0/ \
                   (t172479*t172479*t172479)*2.0)+rho_b[index]*t172721*(t172716-t172592+t172503*t172570*(t172715-t172716+ \
                   t172592-t172714*t172572*t172708*t172709))-c0*t172812*t172893*(cx1*gx*t172734*t172639*(-8.0/3.0)+cx1* \
                   gamma_bb[index]*t172722*t172643*t172758*8.0-cx2*gamma_bb[index]*t172722*t172643*t172745*(3.2E1/3.0) \
                   +cx2*t172810*t172722*t172643*t172773*t172468*(1.6E1/3.0)+cx2*t172722*t172472*t172773*t172845*t172468+ \
                   cx4*t172471*t172480*t172723*t172840*t172769+cx4*t172480*t172723*t172807*t172686*t172769*(3.2E1/3.0) \
                   +cx2*gamma_bb[index]*t172722*t172472*t172772*t172773*2.0-cx4*gamma_bb[index]*t172730*t172723*t172468* \
                   t172686*(1.28E2/3.0)-cx1*gx*t172722*t172825*t172468*t172679*(1.6E1/3.0)-cx3*gx*t172722*t172740*t172468* \
                   t172679*2.4E1+cx4*gamma_bb[index]*t172471*t172723*t172468*t172768*t172769*4.0+cx3*gx*t172722*t172473* \
                   t172762*t172763*t172468*3.0-cx2*t172810*t172722*t172472*t172772*t172468*t172847*2.0-cx4*t172471*t172480* \
                   t172723*t172807*t172768*t172849*2.0+cx3*gamma_bb[index]*gx*t172722*t172832*t172473*t172763*t172468+ \
                   cx3*gamma_bb[index]*gx*t172802*t172722*t172763*t172468*t172679*8.0-cx3*gamma_bb[index]*gx*t172802* \
                   t172722*t172473*t172762*t172468*t172848*2.0)-c0*t172811*t172893*t172789*(4.0/3.0)+c0*t172891*t172789* \
                   t172889*(4.0/3.0)-c0*t172812*t172889*(omega*t172449*t172785*(t172813*t172752*(t172454*t172814*t172819* \
                   t172748*(3.74176054803257E14/4.22212465065984E14)+t172814*t172850*t172748*t172789*(3.74176054803257E14/ \
                   1.40737488355328E14)+1.0/pow(t172747,5.0/2.0)*t172774*t172819*t172748*t172789*(1.122528164409771E15/ \
                   2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15)+omega*t172581*t172785*t172866*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t172449*t172785*(t172752*t172863+t172751*t172752*t172819*t172784*(1.0/ \
                   2.0)-t172454*t172850*t172775*t172776*(2.475880078570761E27/1.4000771998813E29)+t172752*t172782*t172774* \
                   t172819*(1.0/2.0)+t172582*t172819*t172775*t172776*(4.951760157141521E27/4.2002315996439E29)+(t172751* \
                   t172752*t172819*(1.0/3.0))/rho_b[index]-t172454*t172752*t172863*t172747*t172775*(2.475880078570761E27/ \
                   1.4000771998813E29)+t172454*t172752*t172819*t172775*t172784*(2.475880078570761E27/1.4000771998813E29) \
                   -t172750*t172752*t172782*t172819*t172784*t172749*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)+omega*t172870*t172449*t172819*t172788*(3.5184372088832E13/3.74176054803257E14) \
                   -omega*t172850*t172449*t172787*t172788*(3.5184372088832E13/3.74176054803257E14)+omega*t172581*t172819* \
                   t172787*t172788*(3.5184372088832E13/1.122528164409771E15)+omega*t172449*t172774*t172866*t172788*(3.5184372088832E13/ \
                   3.74176054803257E14)-omega*t172814*t172449*t172774*t172819*t172787*(1.7592186044416E13/3.74176054803257E14) \
                   +t172750*t172813*t172752*t172782*t172819*t172873*t172749*(5.588003872763475E44/5.575186299632656E42) \
                   )*(2.81474976710656E14/1.122528164409771E15)+omega*t172581*t172785*t172878*(2.81474976710656E14/3.367584493229313E15) \
                   +omega*t172850*t172449*t172793*t172788*(1.40737488355328E14/1.122528164409771E15)-omega*t172581*t172819* \
                   t172793*t172788*(1.40737488355328E14/3.367584493229313E15)+omega*t172449*t172819*t172884*t172788*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t172449*t172774*t172788*t172878*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t172814*t172449*t172774*t172819*t172793*(7.0368744177664E13/1.122528164409771E15))-c0*t172812* \
                   t172891*(cx1*gamma_bb[index]*gx*t172734*t172639*(8.0/3.0)-cx1*t172722*t172643*t172468*t172758*(8.0/ \
                   3.0)+cx2*t172722*t172643*t172745*t172468*(1.6E1/3.0)+cx4*t172730*t172480*t172723*t172686*(3.2E1/3.0) \
                   -cx2*t172722*t172472*t172772*t172773*t172468-cx4*t172471*t172480*t172723*t172768*t172769+cx3*gamma_bb[index]* \
                   gx*t172722*t172740*t172468*t172679*8.0-cx3*gamma_bb[index]*gx*t172722*t172473*t172762*t172763*t172468) \
                   +c0*t172811*t172812*(omega*t172581*t172793*t172785*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t172449*t172785*t172884*(2.81474976710656E14/1.122528164409771E15)+omega*t172449*t172774*t172793*t172788* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t174199 = 1.0/pow(rho_b[index],1.0/3.0);
                double t174200 = c*t174199;
                double t174201 = sqrt(t174200);
                double t174202 = pow(t174200,3.0/2.0);
                double t174203 = c*c;
                double t174204 = 1.0/pow(rho_b[index],2.0/3.0);
                double t174205 = 1.0/c0p;
                double t174206 = b1p*t174201;
                double t174207 = b3p*t174202;
                double t174208 = b4p*t174203*t174204;
                double t174209 = b2p*c*t174199;
                double t174210 = t174206+t174207+t174208+t174209;
                double t174211 = 1.0/t174210;
                double t174212 = t174211*t174205*(1.0/2.0);
                double t174213 = t174212+1.0;
                double t174214 = log(t174213);
                double t174215 = a1p*c*t174199;
                double t174216 = t174215+1.0;
                double t174217 = 1.0/pow(rho_b[index],8.0/3.0);
                double t174218 = gamma_bb[index]*gamma_bb[index];
                double t174219 = gcaa*gcaa;
                double t174220 = t174219*t174219;
                double t174221 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t174222 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t174223 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t174224 = gamma_bb[index]*gcaa*t174217;
                double t174225 = t174224+1.0;
                double t174226 = gamma_bb[index]*gcaa*t174217*3.0;
                double t174227 = gamma_bb[index]*gcaa*t174223*t174218*t174219;
                double t174228 = t174222*t174218*t174219*3.0;
                double t174229 = t174226+t174227+t174228+1.0;
                double t174230 = t174218*t174218;
                double t174231 = gamma_bb[index]*gcaa*t174217*4.0;
                double t174232 = gamma_bb[index]*gcaa*t174223*t174218*t174219*4.0;
                double t174233 = t174222*t174218*t174219*6.0;
                double t174234 = t174220*t174221*t174230;
                double t174235 = t174231+t174232+t174233+t174234+1.0;
                double t174236 = gamma_bb[index]*gcaa*t174217*2.0;
                double t174237 = t174222*t174218*t174219;
                double t174238 = t174236+t174237+1.0;
                double t174239 = pow(2.0,1.0/3.0);
                double t174240 = t174239*2.0;
                double t174241 = t174240-2.0;
                double t174242 = two_13*2.0;
                double t174243 = t174242-2.0;
                double t174244 = 1.0/t174243;
                double t174245 = 1.0/c0f;
                double t174246 = b1f*t174201;
                double t174247 = b3f*t174202;
                double t174248 = b4f*t174203*t174204;
                double t174249 = b2f*c*t174199;
                double t174250 = t174246+t174247+t174248+t174249;
                double t174251 = 1.0/t174250;
                double t174252 = t174251*t174245*(1.0/2.0);
                double t174253 = t174252+1.0;
                double t174254 = log(t174253);
                double t174255 = a1f*c*t174199;
                double t174256 = t174255+1.0;
                double t174257 = c0f*t174254*t174256*2.0;
                double t174258 = c0p*t174214*t174216*2.0;
                double t174259 = 1.0/t174225;
                double t174260 = 1.0/t174235;
                double t174261 = 1.0/t174238;
                double t174262 = 1.0/t174229;
                double t174263 = 1.0/pow(rho_b[index],1.9E1/3.0);
                double t174264 = 1.0/(t174225*t174225);
                double t174265 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]*rho_b[index]);
                double t174266 = 1.0/pow(rho_b[index],1.1E1/3.0);
                double t174267 = 1.0/(t174229*t174229);
                double t174268 = 1.0/(t174238*t174238);
                double t174269 = gcaa*t174217*3.0;
                double t174270 = gamma_bb[index]*t174222*t174219*6.0;
                double t174271 = gcaa*t174223*t174218*t174219*3.0;
                double t174272 = t174270+t174271+t174269;
                double t174273 = 1.0/pow(rho_b[index],3.5E1/3.0);
                double t174274 = 1.0/(t174235*t174235);
                double t174275 = gcaa*t174217*4.0;
                double t174276 = gamma_bb[index]*t174222*t174219*1.2E1;
                double t174277 = gcaa*t174223*t174218*t174219*1.2E1;
                double t174278 = gamma_bb[index]*t174220*t174221*t174218*4.0;
                double t174279 = t174275+t174276+t174277+t174278;
                double t174280 = gcaa*t174217*2.0;
                double t174281 = gamma_bb[index]*t174222*t174219*2.0;
                double t174282 = t174280+t174281;
                double t174283 = gamma_bb[index]*gcaa*t174266*(1.6E1/3.0);
                double t174284 = t174218*t174263*t174219*(1.6E1/3.0);
                double t174285 = t174283+t174284;
                double t174286 = gamma_bb[index]*gcaa*t174266*8.0;
                double t174287 = gamma_bb[index]*gcaa*t174218*t174219*t174265*8.0;
                double t174288 = t174218*t174263*t174219*1.6E1;
                double t174289 = t174286+t174287+t174288;
                double t174290 = gamma_bb[index]*gcaa*t174266*(3.2E1/3.0);
                double t174291 = gamma_bb[index]*gcaa*t174218*t174219*t174265*3.2E1;
                double t174292 = t174218*t174263*t174219*3.2E1;
                double t174293 = t174220*t174230*t174273*(3.2E1/3.0);
                double t174294 = t174290+t174291+t174292+t174293;
                double t174295 = 1.0/pow(rho_b[index],4.0/3.0);
                double t174296 = 1.0/pow(rho_b[index],5.0/3.0);
                double t174297 = 1.0/sqrt(t174200);
                double t174298 = 1.0/t174213;
                double t174299 = 1.0/(t174210*t174210);
                double t174300 = b4p*t174203*t174296*(2.0/3.0);
                double t174301 = b2p*c*t174295*(1.0/3.0);
                double t174302 = b1p*c*t174295*t174297*(1.0/6.0);
                double t174303 = b3p*c*t174201*t174295*(1.0/2.0);
                double t174304 = t174300+t174301+t174302+t174303;
                double t174305 = t174304*t174216*t174298*t174299;
                double t174306 = ccaa1*gcaa*t174217*t174259;
                double t174307 = ccaa4*gamma_bb[index]*t174220*t174221*t174260*t174218*4.0;
                double t174308 = ccaa2*gamma_bb[index]*t174222*t174261*t174219*2.0;
                double t174309 = ccaa3*gcaa*t174223*t174262*t174218*t174219*3.0;
                double t174310 = t174306+t174307+t174308+t174309-ccaa1*gamma_bb[index]*t174222*t174219*t174264-ccaa4* \
                   t174220*t174221*t174230*t174274*t174279-ccaa2*t174222*t174218*t174219*t174282*t174268-ccaa3*gamma_bb[index]* \
                   gcaa*t174223*t174218*t174272*t174219*t174267;
                double t174311 = gx*gx;
                double t174312 = t174311*t174311;
                double t174313 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t174314 = gamma_bb[index]*gx*t174217*4.0;
                double t174315 = gamma_bb[index]*gx*t174311*t174223*t174218*4.0;
                double t174316 = t174311*t174222*t174218*6.0;
                double t174317 = t174221*t174230*t174312;
                double t174318 = t174314+t174315+t174316+t174317+1.0;
                double t174319 = 1.0/t174318;
                double t174320 = cx4*t174221*t174230*t174312*t174319*(4.190715359480463E15/2.251799813685248E15);
                double t174321 = gamma_bb[index]*gx*t174217;
                double t174322 = t174321+1.0;
                double t174323 = 1.0/t174322;
                double t174324 = cx1*gamma_bb[index]*gx*t174323*t174217*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174325 = gamma_bb[index]*gx*t174217*3.0;
                double t174326 = gamma_bb[index]*gx*t174311*t174223*t174218;
                double t174327 = t174311*t174222*t174218*3.0;
                double t174328 = t174325+t174326+t174327+1.0;
                double t174329 = 1.0/t174328;
                double t174330 = cx3*gamma_bb[index]*gx*t174311*t174223*t174218*t174329*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174331 = gamma_bb[index]*gx*t174217*2.0;
                double t174332 = t174311*t174222*t174218;
                double t174333 = t174331+t174332+1.0;
                double t174334 = 1.0/t174333;
                double t174335 = cx2*t174311*t174222*t174334*t174218*(4.190715359480463E15/2.251799813685248E15);
                double t174336 = t174320+t174330+t174313+t174324+t174335;
                double t174337 = 1.0/omega;
                double t174338 = 1.0/(omega*omega);
                double t174339 = pow(rho_b[index],2.0/3.0);
                double t174340 = 1.0/t174336;
                double t174342 = t174340*t174338*t174339*(1.4000771998813E29/4.951760157141521E27);
                double t174341 = exp(-t174342);
                double t174343 = cx4*t174230*t174312*t174273*t174319*(1.396905119826821E15/7.0368744177664E13);
                double t174344 = cx1*gamma_bb[index]*gx*t174323*t174266*(1.396905119826821E15/2.81474976710656E14) \
                   ;
                double t174345 = cx3*gamma_bb[index]*gx*t174311*t174218*t174265*t174329*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t174346 = cx2*t174311*t174334*t174218*t174263*(1.396905119826821E15/1.40737488355328E14);
                double t174347 = 1.0/(t174322*t174322);
                double t174348 = gamma_bb[index]*gx*t174266*8.0;
                double t174349 = gamma_bb[index]*gx*t174311*t174218*t174265*8.0;
                double t174350 = t174311*t174218*t174263*1.6E1;
                double t174351 = t174350+t174348+t174349;
                double t174352 = 1.0/(t174328*t174328);
                double t174353 = gamma_bb[index]*gx*t174266*(3.2E1/3.0);
                double t174354 = gamma_bb[index]*gx*t174311*t174218*t174265*3.2E1;
                double t174355 = t174311*t174218*t174263*3.2E1;
                double t174356 = t174230*t174312*t174273*(3.2E1/3.0);
                double t174357 = t174353+t174354+t174355+t174356;
                double t174358 = 1.0/(t174318*t174318);
                double t174359 = gamma_bb[index]*gx*t174266*(1.6E1/3.0);
                double t174360 = t174311*t174218*t174263*(1.6E1/3.0);
                double t174361 = t174360+t174359;
                double t174362 = 1.0/(t174333*t174333);
                double t174366 = cx1*t174311*t174218*t174263*t174347*(1.396905119826821E15/2.81474976710656E14);
                double t174367 = cx3*gamma_bb[index]*gx*t174311*t174223*t174351*t174352*t174218*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t174368 = cx4*t174221*t174230*t174312*t174357*t174358*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174369 = cx2*t174311*t174222*t174361*t174218*t174362*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174363 = t174343+t174344+t174345+t174346-t174366-t174367-t174368-t174369;
                double t174364 = omega*omega;
                double t174365 = t174341-1.0;
                double t174370 = t174340*t174338*t174199*(1.4000771998813E29/7.427640235712282E27);
                double t174371 = 1.0/(t174336*t174336);
                double t174372 = t174371*t174363*t174338*t174339*(1.4000771998813E29/4.951760157141521E27);
                double t174373 = t174370+t174372;
                double t174374 = sqrt(t174336);
                double t174375 = t174204*t174336*t174364*t174365*(2.475880078570761E27/1.4000771998813E29);
                double t174376 = -t174341+t174375+3.0/2.0;
                double t174377 = 1.0/sqrt(t174336);
                double t174378 = pow(rho_b[index],1.0/3.0);
                double t174379 = t174337*t174377*t174378*(3.74176054803257E14/7.0368744177664E13);
                double t174380 = erf(t174379);
                double t174381 = t174380*(3.991211251234741E15/2.251799813685248E15);
                double t174383 = omega*t174374*t174376*t174199*(7.0368744177664E13/3.74176054803257E14);
                double t174382 = t174381-t174383;
                double t174384 = cx1*gx*t174323*t174217;
                double t174385 = cx4*gamma_bb[index]*t174221*t174312*t174218*t174319*4.0;
                double t174386 = cx2*gamma_bb[index]*t174311*t174222*t174334*2.0;
                double t174387 = cx3*gx*t174311*t174223*t174218*t174329*3.0;
                double t174388 = gx*t174217*3.0;
                double t174389 = gamma_bb[index]*t174311*t174222*6.0;
                double t174390 = gx*t174311*t174223*t174218*3.0;
                double t174391 = t174390+t174388+t174389;
                double t174392 = gx*t174217*4.0;
                double t174393 = gamma_bb[index]*t174311*t174222*1.2E1;
                double t174394 = gx*t174311*t174223*t174218*1.2E1;
                double t174395 = gamma_bb[index]*t174221*t174312*t174218*4.0;
                double t174396 = t174392+t174393+t174394+t174395;
                double t174397 = gx*t174217*2.0;
                double t174398 = gamma_bb[index]*t174311*t174222*2.0;
                double t174399 = t174397+t174398;
                double t174400 = t174384+t174385+t174386+t174387-cx1*gamma_bb[index]*t174311*t174222*t174347-cx2* \
                   t174311*t174222*t174218*t174362*t174399-cx4*t174221*t174230*t174312*t174358*t174396-cx3*gamma_bb[index]* \
                   gx*t174311*t174223*t174352*t174218*t174391;
                double t174401 = pow(rho_b[index],4.0/3.0);
                double t174402 = 1.0/sqrt(3.141592653589793);
                double t174403 = 1.0/pow(t174336,3.0/2.0);
                double t174404 = cx1*gx*t174323*t174217*(4.190715359480463E15/2.251799813685248E15);
                double t174405 = cx4*gamma_bb[index]*t174221*t174312*t174218*t174319*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t174406 = cx2*gamma_bb[index]*t174311*t174222*t174334*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174407 = cx3*gx*t174311*t174223*t174218*t174329*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t174409 = cx1*gamma_bb[index]*t174311*t174222*t174347*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174410 = cx3*gamma_bb[index]*gx*t174311*t174223*t174352*t174218*t174391*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t174411 = cx4*t174221*t174230*t174312*t174358*t174396*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174412 = cx2*t174311*t174222*t174218*t174362*t174399*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174408 = -t174410-t174411-t174412+t174404+t174405+t174406+t174407-t174409;
                double t174413 = cx1*gamma_bb[index]*t174311*t174263*t174347*(4.190715359480463E15/2.81474976710656E14) \
                   ;
                double t174414 = 1.0/(t174322*t174322*t174322);
                double t174415 = cx3*gx*t174311*t174223*t174351*t174352*t174218*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t174416 = cx2*gamma_bb[index]*t174311*t174222*t174361*t174362*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174417 = cx3*gamma_bb[index]*gx*t174311*t174352*t174218*t174265*t174391*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t174418 = gx*t174266*8.0;
                double t174419 = gamma_bb[index]*t174311*t174263*3.2E1;
                double t174420 = gx*t174311*t174218*t174265*2.4E1;
                double t174421 = t174420+t174418+t174419;
                double t174422 = cx3*gamma_bb[index]*gx*t174311*t174223*t174421*t174352*t174218*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t174423 = cx4*gamma_bb[index]*t174221*t174312*t174218*t174357*t174358*(4.190715359480463E15/ \
                   5.62949953421312E14);
                double t174424 = cx4*t174230*t174312*t174273*t174358*t174396*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t174425 = gx*t174266*(3.2E1/3.0);
                double t174426 = gamma_bb[index]*t174311*t174263*6.4E1;
                double t174427 = gx*t174311*t174218*t174265*9.6E1;
                double t174428 = gamma_bb[index]*t174312*t174218*t174273*(1.28E2/3.0);
                double t174429 = t174425+t174426+t174427+t174428;
                double t174430 = cx4*t174221*t174230*t174312*t174429*t174358*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174431 = cx2*t174311*t174218*t174263*t174362*t174399*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t174432 = gx*t174266*(1.6E1/3.0);
                double t174433 = gamma_bb[index]*t174311*t174263*(3.2E1/3.0);
                double t174434 = t174432+t174433;
                double t174435 = cx2*t174311*t174222*t174218*t174362*t174434*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174436 = 1.0/(t174333*t174333*t174333);
                double t174437 = 1.0/(t174328*t174328*t174328);
                double t174438 = 1.0/(t174318*t174318*t174318);
                double t174440 = cx1*gx*t174323*t174266*(1.396905119826821E15/2.81474976710656E14);
                double t174441 = cx4*gamma_bb[index]*t174312*t174218*t174273*t174319*(1.396905119826821E15/1.7592186044416E13) \
                   ;
                double t174442 = cx2*gamma_bb[index]*t174311*t174334*t174263*(1.396905119826821E15/7.0368744177664E13) \
                   ;
                double t174443 = cx3*gx*t174311*t174218*t174265*t174329*(1.257214607844139E16/2.81474976710656E14) \
                   ;
                double t174444 = cx1*gx*t174311*t174414*t174218*t174265*(1.396905119826821E15/1.40737488355328E14) \
                   ;
                double t174445 = cx2*t174311*t174222*t174361*t174218*t174436*t174399*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174446 = cx3*gamma_bb[index]*gx*t174311*t174223*t174351*t174218*t174391*t174437*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t174447 = cx4*t174221*t174230*t174312*t174357*t174438*t174396*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174439 = t174430+t174413+t174422+t174431-t174440+t174423-t174441+t174415+t174424-t174442+ \
                   t174416-t174443+t174417+t174435-t174444-t174445-t174446-t174447;
                double t174448 = t174371*t174338*t174339*t174439*(1.4000771998813E29/4.951760157141521E27);
                double t174449 = t174371*t174408*t174338*t174199*(1.4000771998813E29/7.427640235712282E27);
                double t174450 = 1.0/(t174336*t174336*t174336);
                double t174451 = t174450*t174363*t174408*t174338*t174339*(1.4000771998813E29/2.475880078570761E27) \
                   ;
                double t174452 = t174451+t174448+t174449;
                double t174453 = t174340*t174341*t174408*(1.0/2.0);
                double t174454 = t174204*t174408*t174364*t174365*(2.475880078570761E27/1.4000771998813E29);
                double t174463 = t174341*t174371*t174408*t174338*t174339*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t174455 = t174453+t174454-t174463;
                double t174456 = t174336*t174364*t174365*t174296*(4.951760157141521E27/4.2002315996439E29);
                double t174457 = t174204*t174363*t174364*t174365*(2.475880078570761E27/1.4000771998813E29);
                double t174458 = t174204*t174341*t174336*t174364*t174373*(2.475880078570761E27/1.4000771998813E29) \
                   ;
                double t174470 = t174341*t174373;
                double t174459 = -t174470+t174456+t174457+t174458;
                double t174460 = t174204*t174337*t174377*(3.74176054803257E14/2.11106232532992E14);
                double t174461 = t174403*t174363*t174337*t174378*(3.74176054803257E14/1.40737488355328E14);
                double t174462 = t174460+t174461;
                double t174464 = omega*t174374*t174455*t174199*(7.0368744177664E13/3.74176054803257E14);
                double t174465 = omega*t174408*t174376*t174377*t174199*(3.5184372088832E13/3.74176054803257E14);
                double t174466 = t174402*t174403*t174341*t174408*t174337*t174378*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t174467 = t174464+t174465+t174466;
                double t174468 = t174402*t174341*t174462*(3.991211251234741E15/1.125899906842624E15);
                double t174469 = omega*t174374*t174295*t174376*(7.0368744177664E13/1.122528164409771E15);
                double t174471 = omega*t174374*t174459*t174199*(7.0368744177664E13/3.74176054803257E14);
                double t174472 = omega*t174363*t174376*t174377*t174199*(3.5184372088832E13/3.74176054803257E14);
                double t174473 = t174471+t174472+t174468+t174469;
                double t174474 = cx4*t174221*t174230*t174312*t174319;
                double t174475 = cx1*gamma_bb[index]*gx*t174323*t174217;
                double t174476 = cx3*gamma_bb[index]*gx*t174311*t174223*t174218*t174329;
                double t174477 = cx2*t174311*t174222*t174334*t174218;
                double t174478 = cx0+t174474+t174475+t174476+t174477;
                double t174479 = omega*t174374*t174467*t174199*(2.81474976710656E14/1.122528164409771E15);
                double t174480 = t174479-omega*t174408*t174382*t174377*t174199*(1.40737488355328E14/1.122528164409771E15) \
                   ;
                double t174481 = omega*t174382*t174374*t174199*(2.81474976710656E14/1.122528164409771E15);
                double t174482 = t174481-1.0;
                v_rho_b_gamma_bb_[index] = -t174310*(t174258+t174241*t174244*(t174257-c0p*t174214*t174216*2.0))+rho_b[index]* \
                   t174310*(-t174305+t174241*t174244*(t174305-(1.0/(t174250*t174250)*t174256*(b2f*c*t174295*(1.0/3.0) \
                   +b4f*t174203*t174296*(2.0/3.0)+b1f*c*t174295*t174297*(1.0/6.0)+b3f*c*t174201*t174295*(1.0/2.0)))/t174253+ \
                   a1f*c*c0f*t174254*t174295*(2.0/3.0)-a1p*c*c0p*t174214*t174295*(2.0/3.0))+a1p*c*c0p*t174214*t174295* \
                   (2.0/3.0))-rho_b[index]*(t174258+t174241*t174244*(t174257-t174258))*(ccaa1*gcaa*t174266*t174259*(- \
                   8.0/3.0)-ccaa2*gamma_bb[index]*t174261*t174263*t174219*(3.2E1/3.0)+ccaa1*gamma_bb[index]*t174263*t174219* \
                   t174264*8.0+ccaa4*t174220*t174230*t174273*t174274*t174279*(3.2E1/3.0)+ccaa2*t174218*t174263*t174219* \
                   t174282*t174268*(1.6E1/3.0)+ccaa4*t174220*t174221*t174230*t174274*(gcaa*t174266*(3.2E1/3.0)+gamma_bb[index]* \
                   t174263*t174219*6.4E1+gamma_bb[index]*t174220*t174218*t174273*(1.28E2/3.0)+gcaa*t174218*t174219*t174265* \
                   9.6E1)-ccaa1*gcaa*1.0/(t174225*t174225*t174225)*t174218*t174219*t174265*(1.6E1/3.0)+ccaa2*t174222* \
                   t174218*t174219*t174268*(gcaa*t174266*(1.6E1/3.0)+gamma_bb[index]*t174263*t174219*(3.2E1/3.0))-ccaa4* \
                   gamma_bb[index]*t174220*t174260*t174218*t174273*(1.28E2/3.0)+ccaa2*gamma_bb[index]*t174222*t174219* \
                   t174285*t174268*2.0-ccaa3*gcaa*t174262*t174218*t174219*t174265*2.4E1+ccaa4*gamma_bb[index]*t174220* \
                   t174221*t174218*t174274*t174294*4.0+ccaa3*gcaa*t174223*t174218*t174219*t174267*t174289*3.0-ccaa4*t174220* \
                   t174221*t174230*1.0/(t174235*t174235*t174235)*t174294*t174279*2.0-ccaa2*t174222*t174218*t174219*t174282* \
                   1.0/(t174238*t174238*t174238)*t174285*2.0+ccaa3*gamma_bb[index]*gcaa*t174223*t174218*t174219*t174267* \
                   (gcaa*t174266*8.0+gamma_bb[index]*t174263*t174219*3.2E1+gcaa*t174218*t174219*t174265*2.4E1)+ccaa3* \
                   gamma_bb[index]*gcaa*t174218*t174272*t174219*t174265*t174267*8.0-ccaa3*gamma_bb[index]*gcaa*t174223* \
                   t174218*t174272*t174219*1.0/(t174229*t174229*t174229)*t174289*2.0)-c0*t174401*t174482*(cx1*gx*t174323* \
                   t174266*(-8.0/3.0)+cx1*gamma_bb[index]*t174311*t174263*t174347*8.0-cx2*gamma_bb[index]*t174311*t174334* \
                   t174263*(3.2E1/3.0)+cx2*t174311*t174222*t174218*t174362*t174434+cx2*t174311*t174218*t174263*t174362* \
                   t174399*(1.6E1/3.0)+cx4*t174221*t174230*t174312*t174429*t174358+cx4*t174230*t174312*t174273*t174358* \
                   t174396*(3.2E1/3.0)+cx2*gamma_bb[index]*t174311*t174222*t174361*t174362*2.0-cx4*gamma_bb[index]*t174312* \
                   t174218*t174273*t174319*(1.28E2/3.0)-cx1*gx*t174311*t174414*t174218*t174265*(1.6E1/3.0)-cx3*gx*t174311* \
                   t174218*t174265*t174329*2.4E1+cx4*gamma_bb[index]*t174221*t174312*t174218*t174357*t174358*4.0+cx3* \
                   gx*t174311*t174223*t174351*t174352*t174218*3.0-cx2*t174311*t174222*t174361*t174218*t174436*t174399* \
                   2.0-cx4*t174221*t174230*t174312*t174357*t174438*t174396*2.0+cx3*gamma_bb[index]*gx*t174311*t174223* \
                   t174421*t174352*t174218+cx3*gamma_bb[index]*gx*t174311*t174352*t174218*t174265*t174391*8.0-cx3*gamma_bb[index]* \
                   gx*t174311*t174223*t174351*t174218*t174391*t174437*2.0)-c0*t174400*t174482*t174378*(4.0/3.0)+c0*t174480* \
                   t174378*t174478*(4.0/3.0)-c0*t174401*t174478*(omega*t174374*t174199*(t174402*t174341*(t174204*t174403* \
                   t174408*t174337*(3.74176054803257E14/4.22212465065984E14)+t174403*t174337*t174439*t174378*(3.74176054803257E14/ \
                   1.40737488355328E14)+1.0/pow(t174336,5.0/2.0)*t174363*t174408*t174337*t174378*(1.122528164409771E15/ \
                   2.81474976710656E14))*(-3.991211251234741E15/1.125899906842624E15)+omega*t174374*t174455*t174295*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t174374*t174199*(t174341*t174452+t174340*t174341*t174408*t174373*(1.0/ \
                   2.0)+t174341*t174371*t174363*t174408*(1.0/2.0)-t174204*t174364*t174365*t174439*(2.475880078570761E27/ \
                   1.4000771998813E29)+t174408*t174364*t174365*t174296*(4.951760157141521E27/4.2002315996439E29)+(t174340* \
                   t174341*t174408*(1.0/3.0))/rho_b[index]-t174204*t174341*t174452*t174336*t174364*(2.475880078570761E27/ \
                   1.4000771998813E29)+t174204*t174341*t174408*t174364*t174373*(2.475880078570761E27/1.4000771998813E29) \
                   -t174341*t174371*t174408*t174373*t174338*t174339*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)+omega*t174408*t174295*t174376*t174377*(3.5184372088832E13/1.122528164409771E15) \
                   +omega*t174363*t174455*t174377*t174199*(3.5184372088832E13/3.74176054803257E14)+omega*t174408*t174377* \
                   t174459*t174199*(3.5184372088832E13/3.74176054803257E14)-omega*t174376*t174439*t174377*t174199*(3.5184372088832E13/ \
                   3.74176054803257E14)-omega*t174403*t174363*t174408*t174376*t174199*(1.7592186044416E13/3.74176054803257E14) \
                   +t174402*t174341*t174371*t174408*t174462*t174338*t174339*(5.588003872763475E44/5.575186299632656E42) \
                   )*(2.81474976710656E14/1.122528164409771E15)+omega*t174374*t174295*t174467*(2.81474976710656E14/3.367584493229313E15) \
                   -omega*t174408*t174382*t174295*t174377*(1.40737488355328E14/3.367584493229313E15)+omega*t174408*t174473* \
                   t174377*t174199*(1.40737488355328E14/1.122528164409771E15)+omega*t174363*t174377*t174467*t174199*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t174382*t174439*t174377*t174199*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t174403*t174363*t174408*t174382*t174199*(7.0368744177664E13/1.122528164409771E15))-c0*t174401* \
                   t174480*(cx1*gamma_bb[index]*gx*t174323*t174266*(8.0/3.0)-cx1*t174311*t174218*t174263*t174347*(8.0/ \
                   3.0)+cx2*t174311*t174334*t174218*t174263*(1.6E1/3.0)+cx4*t174230*t174312*t174273*t174319*(3.2E1/3.0) \
                   -cx2*t174311*t174222*t174361*t174218*t174362-cx4*t174221*t174230*t174312*t174357*t174358+cx3*gamma_bb[index]* \
                   gx*t174311*t174218*t174265*t174329*8.0-cx3*gamma_bb[index]*gx*t174311*t174223*t174351*t174352*t174218) \
                   +c0*t174400*t174401*(omega*t174382*t174374*t174295*(2.81474976710656E14/3.367584493229313E15)-omega* \
                   t174374*t174473*t174199*(2.81474976710656E14/1.122528164409771E15)+omega*t174363*t174382*t174377*t174199* \
                   (1.40737488355328E14/1.122528164409771E15));
            } else {
                v_rho_b_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_aa
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t172895 = 1.0/pow(rho_a[index],1.0/3.0);
                double t172896 = c*t172895;
                double t172897 = sqrt(t172896);
                double t172898 = pow(t172896,3.0/2.0);
                double t172899 = c*c;
                double t172900 = 1.0/pow(rho_a[index],2.0/3.0);
                double t172901 = 1.0/c0p;
                double t172902 = b1p*t172897;
                double t172903 = b3p*t172898;
                double t172904 = b4p*t172900*t172899;
                double t172905 = b2p*c*t172895;
                double t172906 = t172902+t172903+t172904+t172905;
                double t172907 = 1.0/t172906;
                double t172908 = t172901*t172907*(1.0/2.0);
                double t172909 = t172908+1.0;
                double t172910 = log(t172909);
                double t172911 = a1p*c*t172895;
                double t172912 = t172911+1.0;
                double t172913 = pow(2.0,1.0/3.0);
                double t172914 = t172913*2.0;
                double t172915 = t172914-2.0;
                double t172916 = two_13*2.0;
                double t172917 = t172916-2.0;
                double t172918 = 1.0/t172917;
                double t172919 = 1.0/c0f;
                double t172920 = 1.0/pow(rho_b[index],1.0/3.0);
                double t172921 = c*t172920;
                double t172922 = sqrt(t172921);
                double t172923 = pow(t172921,3.0/2.0);
                double t172924 = 1.0/pow(rho_b[index],2.0/3.0);
                double t172925 = b1p*t172922;
                double t172926 = b3p*t172923;
                double t172927 = b4p*t172924*t172899;
                double t172928 = b2p*c*t172920;
                double t172929 = t172925+t172926+t172927+t172928;
                double t172930 = 1.0/t172929;
                double t172931 = t172901*t172930*(1.0/2.0);
                double t172932 = t172931+1.0;
                double t172933 = log(t172932);
                double t172934 = a1p*c*t172920;
                double t172935 = t172934+1.0;
                double t172936 = c0p*t172933*t172935*2.0;
                double t172937 = rho_a[index]+rho_b[index];
                double t172938 = 1.0/pow(t172937,1.0/3.0);
                double t172939 = c*t172938;
                double t172940 = sqrt(t172939);
                double t172941 = pow(t172939,3.0/2.0);
                double t172942 = 1.0/pow(t172937,2.0/3.0);
                double t172943 = b1p*t172940;
                double t172944 = b3p*t172941;
                double t172945 = b4p*t172942*t172899;
                double t172946 = b2p*c*t172938;
                double t172947 = t172943+t172944+t172945+t172946;
                double t172948 = 1.0/t172947;
                double t172949 = t172901*t172948*(1.0/2.0);
                double t172950 = t172949+1.0;
                double t172951 = log(t172950);
                double t172952 = a1p*c*t172938;
                double t172953 = t172952+1.0;
                double t172954 = c0p*t172951*t172953*2.0;
                double t172955 = rho_a[index]-rho_b[index];
                double t172956 = t172955*t172955;
                double t172957 = 1.0/t172937;
                double t172958 = t172955*t172957;
                double t172959 = 1.0/(t172937*t172937*t172937*t172937);
                double t172960 = t172956*t172956;
                double t172961 = t172958+1.0;
                double t172962 = pow(t172961,4.0/3.0);
                double t172963 = -t172958+1.0;
                double t172964 = pow(t172963,4.0/3.0);
                double t172965 = t172962+t172964-2.0;
                double t172966 = gcab*gcab;
                double t172967 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t172968 = 1.0/pow(rho_a[index],8.0/3.0);
                double t172969 = gamma_aa[index]*t172968*(1.0/2.0);
                double t172970 = 1.0/pow(rho_b[index],8.0/3.0);
                double t172971 = gamma_bb[index]*t172970*(1.0/2.0);
                double t172972 = t172971+t172969;
                double t172973 = gcab*t172972;
                double t172974 = t172973+1.0;
                double t172975 = t172972*t172972;
                double t172976 = t172966*t172975;
                double t172977 = gcab*t172972*2.0;
                double t172978 = t172976+t172977+1.0;
                double t172979 = t172966*t172966;
                double t172996 = gcab*t172968*2.0;
                double t172997 = t172972*t172966*t172968*6.0;
                double t172998 = gcab*t172966*t172975*t172968*6.0;
                double t172999 = t172972*t172975*t172968*t172979*2.0;
                double t172980 = t172996+t172997+t172998+t172999;
                double t172981 = t172975*t172975;
                double t173001 = gcab*t172968*(3.0/2.0);
                double t173002 = t172972*t172966*t172968*3.0;
                double t173003 = gcab*t172966*t172975*t172968*(3.0/2.0);
                double t172982 = t173001+t173002+t173003;
                double t172983 = t172966*t172975*3.0;
                double t172984 = gcab*t172972*t172966*t172975;
                double t172985 = gcab*t172972*3.0;
                double t172986 = t172983+t172984+t172985+1.0;
                double t172993 = gcab*t172968;
                double t172994 = t172972*t172966*t172968;
                double t172987 = t172993+t172994;
                double t172988 = t172966*t172975*6.0;
                double t172989 = gcab*t172972*t172966*t172975*4.0;
                double t172990 = t172981*t172979;
                double t172991 = gcab*t172972*4.0;
                double t172992 = t172990+t172991+t172988+t172989+1.0;
                double t172995 = 1.0/(t172978*t172978);
                double t173000 = 1.0/(t172992*t172992);
                double t173004 = 1.0/(t172986*t172986);
                double t173005 = b1f*t172897;
                double t173006 = b3f*t172898;
                double t173007 = b4f*t172900*t172899;
                double t173008 = b2f*c*t172895;
                double t173009 = t173005+t173006+t173007+t173008;
                double t173010 = 1.0/t173009;
                double t173011 = t173010*t172919*(1.0/2.0);
                double t173012 = t173011+1.0;
                double t173013 = log(t173012);
                double t173014 = a1f*c*t172895;
                double t173015 = t173014+1.0;
                double t173016 = c0f*t173013*t173015*2.0;
                double t173017 = c0p*t172910*t172912*2.0;
                double t173018 = gcaa*gcaa;
                double t173019 = gamma_aa[index]*gamma_aa[index];
                double t173020 = t173018*t173018;
                double t173021 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t173022 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t173023 = gamma_aa[index]*gcaa*t172968;
                double t173024 = t173023+1.0;
                double t173025 = gamma_aa[index]*gcaa*t172968*2.0;
                double t173026 = t173018*t173019*t172967;
                double t173027 = t173025+t173026+1.0;
                double t173028 = gamma_aa[index]*gcaa*t172968*3.0;
                double t173029 = gamma_aa[index]*gcaa*t173022*t173018*t173019;
                double t173030 = t173018*t173019*t172967*3.0;
                double t173031 = t173030+t173028+t173029+1.0;
                double t173032 = t173019*t173019;
                double t173048 = gcaa*t172968*4.0;
                double t173049 = gamma_aa[index]*t173018*t172967*1.2E1;
                double t173050 = gcaa*t173022*t173018*t173019*1.2E1;
                double t173051 = gamma_aa[index]*t173020*t173021*t173019*4.0;
                double t173033 = t173050+t173051+t173048+t173049;
                double t173034 = gamma_aa[index]*gcaa*t172968*4.0;
                double t173035 = gamma_aa[index]*gcaa*t173022*t173018*t173019*4.0;
                double t173036 = t173018*t173019*t172967*6.0;
                double t173037 = t173020*t173021*t173032;
                double t173038 = t173034+t173035+t173036+t173037+1.0;
                double t173041 = gcaa*t172968*2.0;
                double t173042 = gamma_aa[index]*t173018*t172967*2.0;
                double t173039 = t173041+t173042;
                double t173040 = 1.0/(t173031*t173031);
                double t173043 = 1.0/(t173027*t173027);
                double t173044 = gcaa*t172968*3.0;
                double t173045 = gamma_aa[index]*t173018*t172967*6.0;
                double t173046 = gcaa*t173022*t173018*t173019*3.0;
                double t173047 = t173044+t173045+t173046;
                double t173052 = 1.0/(t173038*t173038);
                double t173053 = gx*gx;
                double t173054 = t173053*t173053;
                double t173055 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t173056 = gamma_aa[index]*gx*t172968*4.0;
                double t173057 = gamma_aa[index]*gx*t173022*t173053*t173019*4.0;
                double t173058 = t173053*t173019*t172967*6.0;
                double t173059 = t173021*t173032*t173054;
                double t173060 = t173056+t173057+t173058+t173059+1.0;
                double t173061 = 1.0/t173060;
                double t173062 = cx4*t173021*t173032*t173061*t173054*(4.190715359480463E15/2.251799813685248E15);
                double t173063 = gamma_aa[index]*gx*t172968;
                double t173064 = t173063+1.0;
                double t173065 = 1.0/t173064;
                double t173066 = cx1*gamma_aa[index]*gx*t173065*t172968*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173067 = gamma_aa[index]*gx*t172968*3.0;
                double t173068 = gamma_aa[index]*gx*t173022*t173053*t173019;
                double t173069 = t173053*t173019*t172967*3.0;
                double t173070 = t173067+t173068+t173069+1.0;
                double t173071 = 1.0/t173070;
                double t173072 = cx3*gamma_aa[index]*gx*t173022*t173053*t173071*t173019*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173073 = gamma_aa[index]*gx*t172968*2.0;
                double t173074 = t173053*t173019*t172967;
                double t173075 = t173073+t173074+1.0;
                double t173076 = 1.0/t173075;
                double t173077 = cx2*t173053*t173019*t173076*t172967*(4.190715359480463E15/2.251799813685248E15);
                double t173078 = t173062+t173072+t173055+t173066+t173077;
                double t173079 = 1.0/t173078;
                double t173080 = 1.0/(omega*omega);
                double t173081 = pow(rho_a[index],2.0/3.0);
                double t173104 = t173080*t173081*t173079*(1.4000771998813E29/4.951760157141521E27);
                double t173082 = exp(-t173104);
                double t173083 = cx1*gx*t173065*t172968*(4.190715359480463E15/2.251799813685248E15);
                double t173084 = cx4*gamma_aa[index]*t173021*t173061*t173054*t173019*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t173085 = cx2*gamma_aa[index]*t173053*t173076*t172967*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173086 = cx3*gx*t173022*t173053*t173071*t173019*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t173087 = 1.0/(t173064*t173064);
                double t173088 = gx*t172968*3.0;
                double t173089 = gamma_aa[index]*t173053*t172967*6.0;
                double t173090 = gx*t173022*t173053*t173019*3.0;
                double t173091 = t173090+t173088+t173089;
                double t173092 = 1.0/(t173070*t173070);
                double t173093 = gx*t172968*4.0;
                double t173094 = gamma_aa[index]*t173053*t172967*1.2E1;
                double t173095 = gx*t173022*t173053*t173019*1.2E1;
                double t173096 = gamma_aa[index]*t173021*t173054*t173019*4.0;
                double t173097 = t173093+t173094+t173095+t173096;
                double t173098 = 1.0/(t173060*t173060);
                double t173099 = gx*t172968*2.0;
                double t173100 = gamma_aa[index]*t173053*t172967*2.0;
                double t173101 = t173100+t173099;
                double t173102 = 1.0/(t173075*t173075);
                double t173105 = cx1*gamma_aa[index]*t173053*t173087*t172967*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173106 = cx3*gamma_aa[index]*gx*t173022*t173053*t173019*t173091*t173092*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t173107 = cx4*t173021*t173032*t173054*t173097*t173098*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173108 = cx2*t173101*t173102*t173053*t173019*t172967*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173103 = -t173105-t173106-t173107-t173108+t173083+t173084+t173085+t173086;
                double t173109 = omega*omega;
                double t173110 = t173082-1.0;
                double t173111 = sqrt(t173078);
                double t173112 = 1.0/omega;
                double t173113 = pow(rho_a[index],1.0/3.0);
                double t173114 = 1.0/sqrt(t173078);
                double t173115 = t173110*t172900*t173109*t173078*(2.475880078570761E27/1.4000771998813E29);
                double t173116 = t173115-t173082+3.0/2.0;
                double t173117 = pow(rho_a[index],4.0/3.0);
                double t173118 = t173112*t173113*t173114*(3.74176054803257E14/7.0368744177664E13);
                double t173119 = erf(t173118);
                double t173120 = t173119*(3.991211251234741E15/2.251799813685248E15);
                double t173163 = omega*t173111*t173116*t172895*(7.0368744177664E13/3.74176054803257E14);
                double t173121 = t173120-t173163;
                double t173122 = 1.0/(t173064*t173064*t173064);
                double t173123 = t173053*t172967*6.0;
                double t173124 = gamma_aa[index]*gx*t173022*t173053*6.0;
                double t173125 = t173123+t173124;
                double t173126 = t173097*t173097;
                double t173127 = 1.0/(t173060*t173060*t173060);
                double t173128 = t173101*t173101;
                double t173129 = 1.0/(t173075*t173075*t173075);
                double t173130 = t173053*t172967*1.2E1;
                double t173131 = gamma_aa[index]*gx*t173022*t173053*2.4E1;
                double t173132 = t173021*t173054*t173019*1.2E1;
                double t173133 = t173130+t173131+t173132;
                double t173134 = t173091*t173091;
                double t173135 = 1.0/(t173070*t173070*t173070);
                double t173136 = cx1*t173053*t173087*t172967*(4.190715359480463E15/1.125899906842624E15);
                double t173137 = cx2*t173021*t173102*t173054*t173019*(4.190715359480463E15/1.125899906842624E15);
                double t173138 = cx3*gamma_aa[index]*gx*t173022*t173053*t173125*t173019*t173092*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t173139 = cx3*gx*t173022*t173053*t173019*t173091*t173092*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t173140 = cx4*t173021*t173032*t173133*t173054*t173098*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173141 = cx2*gamma_aa[index]*t173101*t173102*t173053*t172967*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t173142 = cx4*gamma_aa[index]*t173021*t173054*t173019*t173097*t173098*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t173146 = cx2*t173053*t173076*t172967*(4.190715359480463E15/1.125899906842624E15);
                double t173147 = cx3*gamma_aa[index]*gx*t173022*t173053*t173071*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t173148 = cx4*t173021*t173061*t173054*t173019*(1.257214607844139E16/5.62949953421312E14);
                double t173149 = cx1*gamma_aa[index]*gx*t173022*t173122*t173053*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173150 = cx4*t173021*t173032*t173054*t173126*t173127*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173151 = cx2*t173053*t173019*t173128*t173129*t172967*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173152 = cx3*gamma_aa[index]*gx*t173022*t173053*t173134*t173135*t173019*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t173143 = t173140+t173141-t173150+t173142-t173151-t173152+t173136+t173137-t173146+t173138- \
                   t173147+t173139-t173148-t173149;
                double t173144 = t173103*t173103;
                double t173145 = 1.0/(t173078*t173078);
                double t173153 = t173103*t173082*t173079*(1.0/2.0);
                double t173154 = t173110*t173103*t172900*t173109*(2.475880078570761E27/1.4000771998813E29);
                double t173158 = t173103*t173080*t173081*t173082*t173145*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t173155 = t173153+t173154-t173158;
                double t173156 = 1.0/pow(t173078,3.0/2.0);
                double t173157 = 1.0/sqrt(3.141592653589793);
                double t173159 = omega*t173111*t173155*t172895*(7.0368744177664E13/3.74176054803257E14);
                double t173160 = omega*t173103*t173114*t173116*t172895*(3.5184372088832E13/3.74176054803257E14);
                double t173161 = t173103*t173112*t173113*t173082*t173156*t173157*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t173162 = t173160+t173161+t173159;
                v_gamma_aa_gamma_aa_[index] = -(rho_a[index]*(t173017+t172915*t172918*(t173016-c0p*t172910*t172912* \
                   2.0))+rho_b[index]*(t172936-t172915*t172918*(t172936-c0f*log((t172919*(1.0/2.0))/(b1f*t172922+b3f* \
                   t172923+b2f*c*t172920+b4f*t172924*t172899)+1.0)*(a1f*c*t172920+1.0)*2.0))-t172937*(t172954-t172960* \
                   t172918*t172965*t172959*(t172954-c0f*log((t172919*(1.0/2.0))/(b1f*t172940+b3f*t172941+b2f*c*t172938+ \
                   b4f*t172942*t172899)+1.0)*(a1f*c*t172938+1.0)*2.0)+(Aa*t172918*t172965*log((1.0/2.0)/(Aa*(b1a*t172940+ \
                   b3a*t172941+b2a*c*t172938+b4a*t172942*t172899))+1.0)*(t172960*t172959-1.0)*(a1a*c*t172938+1.0)*2.0) \
                   /d2fz0))*(ccab1*1.0/(t172974*t172974)*t172966*t172967*(1.0/2.0)-(ccab2*t172966*t172967*(1.0/2.0))/ \
                   t172978-ccab4*(t172980*t172980)*t172981*1.0/(t172992*t172992*t172992)*t172979*2.0-ccab2*t172966*t172975* \
                   1.0/(t172978*t172978*t172978)*(t172987*t172987)*2.0+ccab2*t172975*t172967*t172995*t172979*(1.0/2.0) \
                   +ccab4*t173000*t172981*t172979*(t172966*t172967*3.0+t172975*t172967*t172979*3.0+gcab*t172972*t172966* \
                   t172967*6.0)-(ccab4*t172975*t172967*t172979*3.0)/t172992+ccab2*t172972*t172966*t172968*t172995*t172987* \
                   2.0-ccab1*gcab*t172972*1.0/(t172974*t172974*t172974)*t172966*t172967*(1.0/2.0)-(ccab3*gcab*t172972* \
                   t172966*t172967*(3.0/2.0))/t172986-ccab3*gcab*t172972*(t172982*t172982)*t172966*t172975*1.0/(t172986* \
                   t172986*t172986)*2.0+ccab3*gcab*t173004*t172982*t172966*t172975*t172968*3.0+ccab4*t173000*t172980* \
                   t172972*t172975*t172968*t172979*4.0+ccab3*gcab*t173004*t172972*t172966*t172975*(t172966*t172967*(3.0/ \
                   2.0)+gcab*t172972*t172966*t172967*(3.0/2.0)))+rho_a[index]*(t173017+t172915*t172918*(t173016-t173017) \
                   )*(ccaa1*1.0/(t173024*t173024)*t173018*t172967*2.0-(ccaa2*t173018*t172967*2.0)/t173027+ccaa2*t173020* \
                   t173021*t173043*t173019*2.0-(ccaa4*t173020*t173021*t173019*1.2E1)/t173038+ccaa4*t173020*t173021*t173032* \
                   t173052*(t173018*t172967*1.2E1+t173020*t173021*t173019*1.2E1+gamma_aa[index]*gcaa*t173022*t173018* \
                   2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t173022*t173018*6.0)/t173031-ccaa1*gamma_aa[index]*gcaa*t173022* \
                   1.0/(t173024*t173024*t173024)*t173018*2.0-ccaa4*t173020*t173021*t173032*(t173033*t173033)*1.0/(t173038* \
                   t173038*t173038)*2.0-ccaa2*t173018*1.0/(t173027*t173027*t173027)*t173019*(t173039*t173039)*t172967* \
                   2.0+ccaa2*gamma_aa[index]*t173043*t173018*t173039*t172967*4.0+ccaa4*gamma_aa[index]*t173020*t173021* \
                   t173033*t173052*t173019*8.0+ccaa3*gcaa*t173022*t173040*t173018*t173019*t173047*6.0+ccaa3*gamma_aa[index]* \
                   gcaa*t173022*t173040*t173018*t173019*(t173018*t172967*6.0+gamma_aa[index]*gcaa*t173022*t173018*6.0) \
                   -ccaa3*gamma_aa[index]*gcaa*t173022*1.0/(t173031*t173031*t173031)*t173018*t173019*(t173047*t173047) \
                   *2.0)+c0*t173117*(omega*t173111*t172895*(omega*t173111*t172895*(t173143*t173082*t173079*(1.0/2.0)+ \
                   t173110*t172900*t173143*t173109*(2.475880078570761E27/1.4000771998813E29)-t173080*t173081*t173144* \
                   t173082*1.0/(t173078*t173078*t173078)*(7.000385999406499E29/9.903520314283042E27)+1.0/(omega*omega* \
                   omega*omega)*t173117*t173144*t173082*1.0/(t173078*t173078*t173078*t173078)*(1.960216165627461E58/2.451992865385422E55) \
                   -t173080*t173143*t173081*t173082*t173145*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)-omega*t173103*t173114*t173155*t172895*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t173114*t173116*t173143*t172895*(3.5184372088832E13/3.74176054803257E14)+omega*t173116*t173144* \
                   t173156*t172895*(1.7592186044416E13/3.74176054803257E14)+t173112*t173113*t173143*t173082*t173156*t173157* \
                   (1.493415679873386E30/1.584563250285287E29)+t173112*t173113*t173144*t173082*t173157*1.0/pow(t173078,5.0/ \
                   2.0)*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega)*rho_a[index]*t173144*t173082* \
                   t173157*1.0/pow(t173078,7.0/2.0)*(2.090897243335959E59/7.846377169233351E56))*(-2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t173121*t173114*t173143*t172895*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t173103*t173114*t173162*t172895*(2.81474976710656E14/1.122528164409771E15)+omega*t173121*t173144* \
                   t173156*t172895*(7.0368744177664E13/1.122528164409771E15))*(cx0+cx1*gamma_aa[index]*gx*t173065*t172968+ \
                   cx2*t173053*t173019*t173076*t172967+cx4*t173021*t173032*t173061*t173054+cx3*gamma_aa[index]*gx*t173022* \
                   t173053*t173071*t173019)+c0*t173117*(omega*t173111*t173162*t172895*(2.81474976710656E14/1.122528164409771E15) \
                   -omega*t173103*t173121*t173114*t172895*(1.40737488355328E14/1.122528164409771E15))*(cx1*gx*t173065* \
                   t172968-cx1*gamma_aa[index]*t173053*t173087*t172967+cx2*gamma_aa[index]*t173053*t173076*t172967*2.0- \
                   cx2*t173101*t173102*t173053*t173019*t172967-cx4*t173021*t173032*t173054*t173097*t173098+cx4*gamma_aa[index]* \
                   t173021*t173061*t173054*t173019*4.0+cx3*gx*t173022*t173053*t173071*t173019*3.0-cx3*gamma_aa[index]* \
                   gx*t173022*t173053*t173019*t173091*t173092)*2.0+c0*t173117*(omega*t173111*t173121*t172895*(2.81474976710656E14/ \
                   1.122528164409771E15)-1.0)*(cx1*t173053*t173087*t172967*2.0-cx2*t173053*t173076*t172967*2.0+cx2*t173021* \
                   t173102*t173054*t173019*2.0-cx4*t173021*t173061*t173054*t173019*1.2E1-cx2*t173053*t173019*t173128* \
                   t173129*t172967*2.0-cx4*t173021*t173032*t173054*t173126*t173127*2.0+cx4*t173021*t173032*t173133*t173054* \
                   t173098-cx1*gamma_aa[index]*gx*t173022*t173122*t173053*2.0-cx3*gamma_aa[index]*gx*t173022*t173053* \
                   t173071*6.0+cx2*gamma_aa[index]*t173101*t173102*t173053*t172967*4.0+cx4*gamma_aa[index]*t173021*t173054* \
                   t173019*t173097*t173098*8.0+cx3*gx*t173022*t173053*t173019*t173091*t173092*6.0-cx3*gamma_aa[index]* \
                   gx*t173022*t173053*t173134*t173135*t173019*2.0+cx3*gamma_aa[index]*gx*t173022*t173053*t173125*t173019* \
                   t173092);
            } else if (rho_a[index] > cutoff_) {
                double t175579 = 1.0/pow(rho_a[index],1.0/3.0);
                double t175580 = c*t175579;
                double t175581 = sqrt(t175580);
                double t175582 = pow(t175580,3.0/2.0);
                double t175583 = c*c;
                double t175584 = 1.0/pow(rho_a[index],2.0/3.0);
                double t175585 = 1.0/c0p;
                double t175586 = b1p*t175581;
                double t175587 = b3p*t175582;
                double t175588 = b4p*t175583*t175584;
                double t175589 = b2p*c*t175579;
                double t175590 = t175586+t175587+t175588+t175589;
                double t175591 = 1.0/t175590;
                double t175592 = t175591*t175585*(1.0/2.0);
                double t175593 = t175592+1.0;
                double t175594 = log(t175593);
                double t175595 = a1p*c*t175579;
                double t175596 = t175595+1.0;
                double t175597 = gcaa*gcaa;
                double t175598 = 1.0/pow(rho_a[index],1.6E1/3.0);
                double t175599 = 1.0/pow(rho_a[index],8.0/3.0);
                double t175600 = gamma_aa[index]*gamma_aa[index];
                double t175601 = t175597*t175597;
                double t175602 = 1.0/pow(rho_a[index],3.2E1/3.0);
                double t175603 = 1.0/(rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]*rho_a[index]* \
                   rho_a[index]*rho_a[index]);
                double t175604 = gamma_aa[index]*gcaa*t175599;
                double t175605 = t175604+1.0;
                double t175606 = gamma_aa[index]*gcaa*t175599*2.0;
                double t175607 = t175600*t175597*t175598;
                double t175608 = t175606+t175607+1.0;
                double t175609 = gamma_aa[index]*gcaa*t175599*3.0;
                double t175610 = gamma_aa[index]*gcaa*t175600*t175603*t175597;
                double t175611 = t175600*t175597*t175598*3.0;
                double t175612 = t175610+t175611+t175609+1.0;
                double t175613 = t175600*t175600;
                double t175629 = gcaa*t175599*4.0;
                double t175630 = gamma_aa[index]*t175597*t175598*1.2E1;
                double t175631 = gcaa*t175600*t175603*t175597*1.2E1;
                double t175632 = gamma_aa[index]*t175600*t175601*t175602*4.0;
                double t175614 = t175630+t175631+t175632+t175629;
                double t175615 = gamma_aa[index]*gcaa*t175599*4.0;
                double t175616 = gamma_aa[index]*gcaa*t175600*t175603*t175597*4.0;
                double t175617 = t175600*t175597*t175598*6.0;
                double t175618 = t175601*t175602*t175613;
                double t175619 = t175615+t175616+t175617+t175618+1.0;
                double t175622 = gcaa*t175599*2.0;
                double t175623 = gamma_aa[index]*t175597*t175598*2.0;
                double t175620 = t175622+t175623;
                double t175621 = 1.0/(t175612*t175612);
                double t175624 = 1.0/(t175608*t175608);
                double t175625 = gcaa*t175599*3.0;
                double t175626 = gamma_aa[index]*t175597*t175598*6.0;
                double t175627 = gcaa*t175600*t175603*t175597*3.0;
                double t175628 = t175625+t175626+t175627;
                double t175633 = 1.0/(t175619*t175619);
                double t175634 = gx*gx;
                double t175635 = t175634*t175634;
                double t175636 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t175637 = gamma_aa[index]*gx*t175599*4.0;
                double t175638 = gamma_aa[index]*gx*t175600*t175603*t175634*4.0;
                double t175639 = t175600*t175634*t175598*6.0;
                double t175640 = t175602*t175613*t175635;
                double t175641 = t175640+t175637+t175638+t175639+1.0;
                double t175642 = 1.0/t175641;
                double t175643 = cx4*t175602*t175613*t175642*t175635*(4.190715359480463E15/2.251799813685248E15);
                double t175644 = gamma_aa[index]*gx*t175599;
                double t175645 = t175644+1.0;
                double t175646 = 1.0/t175645;
                double t175647 = cx1*gamma_aa[index]*gx*t175646*t175599*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175648 = gamma_aa[index]*gx*t175599*3.0;
                double t175649 = gamma_aa[index]*gx*t175600*t175603*t175634;
                double t175650 = t175600*t175634*t175598*3.0;
                double t175651 = t175650+t175648+t175649+1.0;
                double t175652 = 1.0/t175651;
                double t175653 = cx3*gamma_aa[index]*gx*t175600*t175603*t175634*t175652*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175654 = gamma_aa[index]*gx*t175599*2.0;
                double t175655 = t175600*t175634*t175598;
                double t175656 = t175654+t175655+1.0;
                double t175657 = 1.0/t175656;
                double t175658 = cx2*t175600*t175634*t175657*t175598*(4.190715359480463E15/2.251799813685248E15);
                double t175659 = t175643+t175653+t175636+t175647+t175658;
                double t175660 = 1.0/t175659;
                double t175661 = 1.0/(omega*omega);
                double t175662 = pow(rho_a[index],2.0/3.0);
                double t175685 = t175660*t175661*t175662*(1.4000771998813E29/4.951760157141521E27);
                double t175663 = exp(-t175685);
                double t175664 = cx1*gx*t175646*t175599*(4.190715359480463E15/2.251799813685248E15);
                double t175665 = cx4*gamma_aa[index]*t175600*t175602*t175642*t175635*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t175666 = cx2*gamma_aa[index]*t175634*t175657*t175598*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175667 = cx3*gx*t175600*t175603*t175634*t175652*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t175668 = 1.0/(t175645*t175645);
                double t175669 = gx*t175599*3.0;
                double t175670 = gamma_aa[index]*t175634*t175598*6.0;
                double t175671 = gx*t175600*t175603*t175634*3.0;
                double t175672 = t175670+t175671+t175669;
                double t175673 = 1.0/(t175651*t175651);
                double t175674 = gx*t175599*4.0;
                double t175675 = gamma_aa[index]*t175634*t175598*1.2E1;
                double t175676 = gx*t175600*t175603*t175634*1.2E1;
                double t175677 = gamma_aa[index]*t175600*t175602*t175635*4.0;
                double t175678 = t175674+t175675+t175676+t175677;
                double t175679 = 1.0/(t175641*t175641);
                double t175680 = gx*t175599*2.0;
                double t175681 = gamma_aa[index]*t175634*t175598*2.0;
                double t175682 = t175680+t175681;
                double t175683 = 1.0/(t175656*t175656);
                double t175686 = cx1*gamma_aa[index]*t175634*t175668*t175598*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175687 = cx3*gamma_aa[index]*gx*t175600*t175603*t175634*t175672*t175673*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t175688 = cx4*t175602*t175613*t175635*t175678*t175679*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175689 = cx2*t175600*t175634*t175682*t175683*t175598*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175684 = t175664+t175665+t175666+t175667-t175686-t175687-t175688-t175689;
                double t175690 = omega*omega;
                double t175691 = t175663-1.0;
                double t175692 = sqrt(t175659);
                double t175693 = 1.0/omega;
                double t175694 = pow(rho_a[index],1.0/3.0);
                double t175695 = 1.0/sqrt(t175659);
                double t175696 = t175690*t175691*t175584*t175659*(2.475880078570761E27/1.4000771998813E29);
                double t175697 = -t175663+t175696+3.0/2.0;
                double t175698 = pow(rho_a[index],4.0/3.0);
                double t175699 = t175693*t175694*t175695*(3.74176054803257E14/7.0368744177664E13);
                double t175700 = erf(t175699);
                double t175701 = t175700*(3.991211251234741E15/2.251799813685248E15);
                double t175744 = omega*t175692*t175579*t175697*(7.0368744177664E13/3.74176054803257E14);
                double t175702 = t175701-t175744;
                double t175703 = 1.0/(t175645*t175645*t175645);
                double t175704 = t175634*t175598*6.0;
                double t175705 = gamma_aa[index]*gx*t175603*t175634*6.0;
                double t175706 = t175704+t175705;
                double t175707 = t175678*t175678;
                double t175708 = 1.0/(t175641*t175641*t175641);
                double t175709 = t175682*t175682;
                double t175710 = 1.0/(t175656*t175656*t175656);
                double t175711 = t175634*t175598*1.2E1;
                double t175712 = gamma_aa[index]*gx*t175603*t175634*2.4E1;
                double t175713 = t175600*t175602*t175635*1.2E1;
                double t175714 = t175711+t175712+t175713;
                double t175715 = t175672*t175672;
                double t175716 = 1.0/(t175651*t175651*t175651);
                double t175717 = cx1*t175634*t175668*t175598*(4.190715359480463E15/1.125899906842624E15);
                double t175718 = cx2*t175600*t175602*t175635*t175683*(4.190715359480463E15/1.125899906842624E15);
                double t175719 = cx3*gamma_aa[index]*gx*t175600*t175603*t175634*t175706*t175673*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t175720 = cx3*gx*t175600*t175603*t175634*t175672*t175673*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t175721 = cx4*t175602*t175613*t175714*t175635*t175679*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t175722 = cx2*gamma_aa[index]*t175634*t175682*t175683*t175598*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t175723 = cx4*gamma_aa[index]*t175600*t175602*t175635*t175678*t175679*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t175727 = cx2*t175634*t175657*t175598*(4.190715359480463E15/1.125899906842624E15);
                double t175728 = cx3*gamma_aa[index]*gx*t175603*t175634*t175652*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t175729 = cx4*t175600*t175602*t175642*t175635*(1.257214607844139E16/5.62949953421312E14);
                double t175730 = cx1*gamma_aa[index]*gx*t175603*t175703*t175634*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175731 = cx4*t175602*t175613*t175635*t175707*t175708*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175732 = cx2*t175600*t175710*t175634*t175709*t175598*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t175733 = cx3*gamma_aa[index]*gx*t175600*t175603*t175634*t175715*t175716*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t175724 = t175720+t175721-t175730+t175722-t175731+t175723-t175732-t175733+t175717+t175718- \
                   t175727+t175719-t175728-t175729;
                double t175725 = t175684*t175684;
                double t175726 = 1.0/(t175659*t175659);
                double t175734 = t175660*t175663*t175684*(1.0/2.0);
                double t175735 = t175690*t175691*t175584*t175684*(2.475880078570761E27/1.4000771998813E29);
                double t175739 = t175661*t175662*t175663*t175726*t175684*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t175736 = t175734+t175735-t175739;
                double t175737 = 1.0/pow(t175659,3.0/2.0);
                double t175738 = 1.0/sqrt(3.141592653589793);
                double t175740 = omega*t175736*t175692*t175579*(7.0368744177664E13/3.74176054803257E14);
                double t175741 = omega*t175684*t175695*t175579*t175697*(3.5184372088832E13/3.74176054803257E14);
                double t175742 = t175663*t175737*t175684*t175693*t175738*t175694*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t175743 = t175740+t175741+t175742;
                v_gamma_aa_gamma_aa_[index] = rho_a[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t175581+b3f*t175582+b2f*c*t175579+b4f*t175583*t175584))+1.0)*(a1f*c*t175579+1.0)*2.0-c0p*t175594*t175596* \
                   2.0))/(two_13*2.0-2.0)+c0p*t175594*t175596*2.0)*(ccaa1*1.0/(t175605*t175605)*t175597*t175598*2.0-(ccaa2* \
                   t175597*t175598*2.0)/t175608+ccaa2*t175600*t175601*t175602*t175624*2.0-(ccaa4*t175600*t175601*t175602* \
                   1.2E1)/t175619+ccaa4*t175601*t175602*t175613*t175633*(t175597*t175598*1.2E1+t175600*t175601*t175602* \
                   1.2E1+gamma_aa[index]*gcaa*t175603*t175597*2.4E1)-(ccaa3*gamma_aa[index]*gcaa*t175603*t175597*6.0) \
                   /t175612-ccaa1*gamma_aa[index]*gcaa*t175603*1.0/(t175605*t175605*t175605)*t175597*2.0-ccaa4*t175601* \
                   t175602*t175613*(t175614*t175614)*1.0/(t175619*t175619*t175619)*2.0-ccaa2*t175600*(t175620*t175620) \
                   *1.0/(t175608*t175608*t175608)*t175597*t175598*2.0+ccaa2*gamma_aa[index]*t175620*t175624*t175597*t175598* \
                   4.0+ccaa4*gamma_aa[index]*t175600*t175601*t175602*t175614*t175633*8.0+ccaa3*gcaa*t175600*t175603*t175621* \
                   t175628*t175597*6.0+ccaa3*gamma_aa[index]*gcaa*t175600*t175603*t175621*t175597*(t175597*t175598*6.0+ \
                   gamma_aa[index]*gcaa*t175603*t175597*6.0)-ccaa3*gamma_aa[index]*gcaa*t175600*t175603*1.0/(t175612* \
                   t175612*t175612)*(t175628*t175628)*t175597*2.0)+c0*t175698*(omega*t175692*t175579*(omega*t175692*t175579* \
                   (t175660*t175724*t175663*(1.0/2.0)+t175724*t175690*t175691*t175584*(2.475880078570761E27/1.4000771998813E29) \
                   -t175661*t175662*t175725*t175663*1.0/(t175659*t175659*t175659)*(7.000385999406499E29/9.903520314283042E27) \
                   +1.0/(omega*omega*omega*omega)*t175725*t175663*1.0/(t175659*t175659*t175659*t175659)*t175698*(1.960216165627461E58/ \
                   2.451992865385422E55)-t175661*t175724*t175662*t175663*t175726*(1.4000771998813E29/4.951760157141521E27) \
                   )*(7.0368744177664E13/3.74176054803257E14)+omega*t175725*t175737*t175579*t175697*(1.7592186044416E13/ \
                   3.74176054803257E14)-omega*t175736*t175684*t175695*t175579*(7.0368744177664E13/3.74176054803257E14) \
                   +omega*t175724*t175695*t175579*t175697*(3.5184372088832E13/3.74176054803257E14)+t175724*t175663*t175737* \
                   t175693*t175738*t175694*(1.493415679873386E30/1.584563250285287E29)+t175725*t175663*t175693*t175738* \
                   t175694*1.0/pow(t175659,5.0/2.0)*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega) \
                   *rho_a[index]*t175725*t175663*t175738*1.0/pow(t175659,7.0/2.0)*(2.090897243335959E59/7.846377169233351E56) \
                   )*(-2.81474976710656E14/1.122528164409771E15)+omega*t175702*t175725*t175737*t175579*(7.0368744177664E13/ \
                   1.122528164409771E15)+omega*t175702*t175724*t175695*t175579*(1.40737488355328E14/1.122528164409771E15) \
                   +omega*t175743*t175684*t175695*t175579*(2.81474976710656E14/1.122528164409771E15))*(cx0+cx1*gamma_aa[index]* \
                   gx*t175646*t175599+cx2*t175600*t175634*t175657*t175598+cx4*t175602*t175613*t175642*t175635+cx3*gamma_aa[index]* \
                   gx*t175600*t175603*t175634*t175652)+c0*t175698*(omega*t175743*t175692*t175579*(2.81474976710656E14/ \
                   1.122528164409771E15)-omega*t175702*t175684*t175695*t175579*(1.40737488355328E14/1.122528164409771E15) \
                   )*(cx1*gx*t175646*t175599-cx1*gamma_aa[index]*t175634*t175668*t175598+cx2*gamma_aa[index]*t175634* \
                   t175657*t175598*2.0-cx2*t175600*t175634*t175682*t175683*t175598-cx4*t175602*t175613*t175635*t175678* \
                   t175679+cx4*gamma_aa[index]*t175600*t175602*t175642*t175635*4.0+cx3*gx*t175600*t175603*t175634*t175652* \
                   3.0-cx3*gamma_aa[index]*gx*t175600*t175603*t175634*t175672*t175673)*2.0+c0*t175698*(omega*t175702* \
                   t175692*t175579*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*t175634*t175668*t175598*2.0-cx2* \
                   t175634*t175657*t175598*2.0+cx2*t175600*t175602*t175635*t175683*2.0-cx4*t175600*t175602*t175642*t175635* \
                   1.2E1-cx2*t175600*t175710*t175634*t175709*t175598*2.0-cx4*t175602*t175613*t175635*t175707*t175708* \
                   2.0+cx4*t175602*t175613*t175714*t175635*t175679-cx1*gamma_aa[index]*gx*t175603*t175703*t175634*2.0- \
                   cx3*gamma_aa[index]*gx*t175603*t175634*t175652*6.0+cx2*gamma_aa[index]*t175634*t175682*t175683*t175598* \
                   4.0+cx4*gamma_aa[index]*t175600*t175602*t175635*t175678*t175679*8.0+cx3*gx*t175600*t175603*t175634* \
                   t175672*t175673*6.0-cx3*gamma_aa[index]*gx*t175600*t175603*t175634*t175715*t175716*2.0+cx3*gamma_aa[index]* \
                   gx*t175600*t175603*t175634*t175706*t175673);
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_aa_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_aa_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t173166 = 1.0/pow(rho_a[index],1.0/3.0);
                double t173167 = c*t173166;
                double t173168 = sqrt(t173167);
                double t173169 = pow(t173167,3.0/2.0);
                double t173170 = c*c;
                double t173171 = 1.0/pow(rho_a[index],2.0/3.0);
                double t173172 = 1.0/c0p;
                double t173173 = b1p*t173168;
                double t173174 = b3p*t173169;
                double t173175 = b4p*t173170*t173171;
                double t173176 = b2p*c*t173166;
                double t173177 = t173173+t173174+t173175+t173176;
                double t173178 = 1.0/t173177;
                double t173179 = t173172*t173178*(1.0/2.0);
                double t173180 = t173179+1.0;
                double t173181 = log(t173180);
                double t173182 = a1p*c*t173166;
                double t173183 = t173182+1.0;
                double t173184 = pow(2.0,1.0/3.0);
                double t173185 = t173184*2.0;
                double t173186 = t173185-2.0;
                double t173187 = two_13*2.0;
                double t173188 = t173187-2.0;
                double t173189 = 1.0/t173188;
                double t173190 = 1.0/c0f;
                double t173191 = 1.0/pow(rho_b[index],1.0/3.0);
                double t173192 = c*t173191;
                double t173193 = sqrt(t173192);
                double t173194 = pow(t173192,3.0/2.0);
                double t173195 = 1.0/pow(rho_b[index],2.0/3.0);
                double t173196 = b1p*t173193;
                double t173197 = b3p*t173194;
                double t173198 = b4p*t173170*t173195;
                double t173199 = b2p*c*t173191;
                double t173200 = t173196+t173197+t173198+t173199;
                double t173201 = 1.0/t173200;
                double t173202 = t173201*t173172*(1.0/2.0);
                double t173203 = t173202+1.0;
                double t173204 = log(t173203);
                double t173205 = a1p*c*t173191;
                double t173206 = t173205+1.0;
                double t173207 = c0p*t173204*t173206*2.0;
                double t173208 = rho_a[index]+rho_b[index];
                double t173209 = 1.0/pow(t173208,1.0/3.0);
                double t173210 = c*t173209;
                double t173211 = sqrt(t173210);
                double t173212 = pow(t173210,3.0/2.0);
                double t173213 = 1.0/pow(t173208,2.0/3.0);
                double t173214 = b1p*t173211;
                double t173215 = b3p*t173212;
                double t173216 = b4p*t173213*t173170;
                double t173217 = b2p*c*t173209;
                double t173218 = t173214+t173215+t173216+t173217;
                double t173219 = 1.0/t173218;
                double t173220 = t173172*t173219*(1.0/2.0);
                double t173221 = t173220+1.0;
                double t173222 = log(t173221);
                double t173223 = a1p*c*t173209;
                double t173224 = t173223+1.0;
                double t173225 = c0p*t173222*t173224*2.0;
                double t173226 = rho_a[index]-rho_b[index];
                double t173227 = t173226*t173226;
                double t173228 = 1.0/t173208;
                double t173229 = t173226*t173228;
                double t173230 = 1.0/(t173208*t173208*t173208*t173208);
                double t173231 = t173227*t173227;
                double t173232 = t173229+1.0;
                double t173233 = pow(t173232,4.0/3.0);
                double t173234 = -t173229+1.0;
                double t173235 = pow(t173234,4.0/3.0);
                double t173236 = t173233+t173235-2.0;
                double t173237 = gcab*gcab;
                double t173240 = 1.0/pow(rho_a[index],8.0/3.0);
                double t173241 = 1.0/pow(rho_b[index],8.0/3.0);
                double t173242 = gamma_aa[index]*t173240*(1.0/2.0);
                double t173243 = gamma_bb[index]*t173241*(1.0/2.0);
                double t173238 = t173242+t173243;
                double t173239 = t173238*t173238;
                double t173244 = t173237*t173237;
                double t173245 = t173239*t173239;
                double t173246 = t173237*t173239*3.0;
                double t173247 = gcab*t173237*t173238*t173239;
                double t173248 = gcab*t173238*3.0;
                double t173249 = t173246+t173247+t173248+1.0;
                double t173250 = t173237*t173239;
                double t173251 = gcab*t173238*2.0;
                double t173252 = t173250+t173251+1.0;
                double t173253 = t173237*t173239*6.0;
                double t173254 = gcab*t173237*t173238*t173239*4.0;
                double t173255 = t173244*t173245;
                double t173256 = gcab*t173238*4.0;
                double t173257 = t173253+t173254+t173255+t173256+1.0;
                double t173258 = 1.0/(t173252*t173252);
                double t173259 = gcab*t173240;
                double t173260 = t173240*t173237*t173238;
                double t173261 = t173260+t173259;
                double t173262 = gcab*t173241;
                double t173263 = t173241*t173237*t173238;
                double t173264 = t173262+t173263;
                double t173265 = gcab*t173238;
                double t173266 = t173265+1.0;
                double t173267 = gcab*t173240*2.0;
                double t173268 = t173240*t173237*t173238*6.0;
                double t173269 = gcab*t173240*t173237*t173239*6.0;
                double t173270 = t173240*t173244*t173238*t173239*2.0;
                double t173271 = t173270+t173267+t173268+t173269;
                double t173272 = 1.0/(t173257*t173257);
                double t173273 = gcab*t173241*2.0;
                double t173274 = t173241*t173237*t173238*6.0;
                double t173275 = gcab*t173241*t173237*t173239*6.0;
                double t173276 = t173241*t173244*t173238*t173239*2.0;
                double t173277 = t173273+t173274+t173275+t173276;
                double t173278 = gcab*t173240*(3.0/2.0);
                double t173279 = t173240*t173237*t173238*3.0;
                double t173280 = gcab*t173240*t173237*t173239*(3.0/2.0);
                double t173281 = t173280+t173278+t173279;
                double t173282 = 1.0/(t173249*t173249);
                double t173283 = gcab*t173241*(3.0/2.0);
                double t173284 = t173241*t173237*t173238*3.0;
                double t173285 = gcab*t173241*t173237*t173239*(3.0/2.0);
                double t173286 = t173283+t173284+t173285;
                v_gamma_aa_gamma_bb_[index] = (-rho_b[index]*(t173207-t173186*t173189*(t173207-c0f*log((t173190*(1.0/ \
                   2.0))/(b1f*t173193+b3f*t173194+b2f*c*t173191+b4f*t173170*t173195)+1.0)*(a1f*c*t173191+1.0)*2.0))+t173208* \
                   (t173225-t173230*t173231*t173236*t173189*(t173225-c0f*log((t173190*(1.0/2.0))/(b1f*t173211+b3f*t173212+ \
                   b2f*c*t173209+b4f*t173213*t173170)+1.0)*(a1f*c*t173209+1.0)*2.0)+(Aa*t173236*t173189*log((1.0/2.0) \
                   /(Aa*(b1a*t173211+b3a*t173212+b2a*c*t173209+b4a*t173213*t173170))+1.0)*(t173230*t173231-1.0)*(a1a* \
                   c*t173209+1.0)*2.0)/d2fz0)+rho_a[index]*(t173186*t173189*(c0p*t173181*t173183*2.0-c0f*log((t173190* \
                   (1.0/2.0))/(b1f*t173168+b3f*t173169+b2f*c*t173166+b4f*t173170*t173171)+1.0)*(a1f*c*t173166+1.0)*2.0) \
                   -c0p*t173181*t173183*2.0))*(ccab4*t173244*t173245*t173272*(t173240*t173241*t173237*3.0+t173240*t173241* \
                   t173244*t173239*3.0+gcab*t173240*t173241*t173237*t173238*6.0)-(ccab2*t173240*t173241*t173237*(1.0/ \
                   2.0))/t173252+ccab1*t173240*t173241*t173237*1.0/(t173266*t173266)*(1.0/2.0)+ccab2*t173240*t173241* \
                   t173244*t173239*t173258*(1.0/2.0)+ccab2*t173241*t173261*t173237*t173238*t173258+ccab2*t173240*t173237* \
                   t173264*t173238*t173258-(ccab4*t173240*t173241*t173244*t173239*3.0)/t173257-ccab2*1.0/(t173252*t173252* \
                   t173252)*t173261*t173237*t173264*t173239*2.0-ccab4*t173244*t173271*t173245*1.0/(t173257*t173257*t173257) \
                   *t173277*2.0+ccab3*gcab*t173241*t173281*t173237*t173282*t173239*(3.0/2.0)+ccab3*gcab*t173240*t173237* \
                   t173282*t173239*t173286*(3.0/2.0)+ccab4*t173241*t173244*t173271*t173272*t173238*t173239*2.0+ccab4* \
                   t173240*t173244*t173272*t173238*t173239*t173277*2.0+ccab3*gcab*t173237*t173282*t173238*t173239*(t173240* \
                   t173241*t173237*(3.0/2.0)+gcab*t173240*t173241*t173237*t173238*(3.0/2.0))-ccab1*gcab*t173240*t173241* \
                   t173237*t173238*1.0/(t173266*t173266*t173266)*(1.0/2.0)-(ccab3*gcab*t173240*t173241*t173237*t173238* \
                   (3.0/2.0))/t173249-ccab3*gcab*t173281*t173237*t173238*t173239*1.0/(t173249*t173249*t173249)*t173286* \
                   2.0);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_aa_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_ab
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_ab_[index] = 0.0;
            } 

            //V_gamma_ab_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } else {
                v_gamma_ab_gamma_bb_[index] = 0.0;
            } 

            //V_gamma_bb_gamma_bb
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                double t173290 = 1.0/pow(rho_a[index],1.0/3.0);
                double t173291 = c*t173290;
                double t173292 = sqrt(t173291);
                double t173293 = pow(t173291,3.0/2.0);
                double t173294 = c*c;
                double t173295 = 1.0/pow(rho_a[index],2.0/3.0);
                double t173296 = 1.0/c0p;
                double t173297 = b1p*t173292;
                double t173298 = b3p*t173293;
                double t173299 = b4p*t173294*t173295;
                double t173300 = b2p*c*t173290;
                double t173301 = t173300+t173297+t173298+t173299;
                double t173302 = 1.0/t173301;
                double t173303 = t173302*t173296*(1.0/2.0);
                double t173304 = t173303+1.0;
                double t173305 = log(t173304);
                double t173306 = a1p*c*t173290;
                double t173307 = t173306+1.0;
                double t173308 = pow(2.0,1.0/3.0);
                double t173309 = t173308*2.0;
                double t173310 = t173309-2.0;
                double t173311 = two_13*2.0;
                double t173312 = t173311-2.0;
                double t173313 = 1.0/t173312;
                double t173314 = 1.0/c0f;
                double t173315 = 1.0/pow(rho_b[index],1.0/3.0);
                double t173316 = c*t173315;
                double t173317 = sqrt(t173316);
                double t173318 = pow(t173316,3.0/2.0);
                double t173319 = 1.0/pow(rho_b[index],2.0/3.0);
                double t173320 = b1p*t173317;
                double t173321 = b3p*t173318;
                double t173322 = b4p*t173319*t173294;
                double t173323 = b2p*c*t173315;
                double t173324 = t173320+t173321+t173322+t173323;
                double t173325 = 1.0/t173324;
                double t173326 = t173325*t173296*(1.0/2.0);
                double t173327 = t173326+1.0;
                double t173328 = log(t173327);
                double t173329 = a1p*c*t173315;
                double t173330 = t173329+1.0;
                double t173331 = c0p*t173330*t173328*2.0;
                double t173332 = rho_a[index]+rho_b[index];
                double t173333 = 1.0/pow(t173332,1.0/3.0);
                double t173334 = c*t173333;
                double t173335 = sqrt(t173334);
                double t173336 = pow(t173334,3.0/2.0);
                double t173337 = 1.0/pow(t173332,2.0/3.0);
                double t173338 = b1p*t173335;
                double t173339 = b3p*t173336;
                double t173340 = b4p*t173337*t173294;
                double t173341 = b2p*c*t173333;
                double t173342 = t173340+t173341+t173338+t173339;
                double t173343 = 1.0/t173342;
                double t173344 = t173343*t173296*(1.0/2.0);
                double t173345 = t173344+1.0;
                double t173346 = log(t173345);
                double t173347 = a1p*c*t173333;
                double t173348 = t173347+1.0;
                double t173349 = c0p*t173346*t173348*2.0;
                double t173350 = rho_a[index]-rho_b[index];
                double t173351 = t173350*t173350;
                double t173352 = 1.0/t173332;
                double t173353 = t173350*t173352;
                double t173354 = 1.0/(t173332*t173332*t173332*t173332);
                double t173355 = t173351*t173351;
                double t173356 = t173353+1.0;
                double t173357 = pow(t173356,4.0/3.0);
                double t173358 = -t173353+1.0;
                double t173359 = pow(t173358,4.0/3.0);
                double t173360 = t173357+t173359-2.0;
                double t173361 = gcab*gcab;
                double t173362 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t173363 = 1.0/pow(rho_a[index],8.0/3.0);
                double t173364 = gamma_aa[index]*t173363*(1.0/2.0);
                double t173365 = 1.0/pow(rho_b[index],8.0/3.0);
                double t173366 = gamma_bb[index]*t173365*(1.0/2.0);
                double t173367 = t173364+t173366;
                double t173368 = gcab*t173367;
                double t173369 = t173368+1.0;
                double t173370 = t173367*t173367;
                double t173371 = t173361*t173370;
                double t173372 = gcab*t173367*2.0;
                double t173373 = t173371+t173372+1.0;
                double t173374 = t173361*t173361;
                double t173391 = gcab*t173365*2.0;
                double t173392 = t173361*t173365*t173367*6.0;
                double t173393 = gcab*t173361*t173370*t173365*6.0;
                double t173394 = t173370*t173365*t173374*t173367*2.0;
                double t173375 = t173391+t173392+t173393+t173394;
                double t173376 = t173370*t173370;
                double t173396 = gcab*t173365*(3.0/2.0);
                double t173397 = t173361*t173365*t173367*3.0;
                double t173398 = gcab*t173361*t173370*t173365*(3.0/2.0);
                double t173377 = t173396+t173397+t173398;
                double t173378 = t173361*t173370*3.0;
                double t173379 = gcab*t173361*t173370*t173367;
                double t173380 = gcab*t173367*3.0;
                double t173381 = t173380+t173378+t173379+1.0;
                double t173388 = gcab*t173365;
                double t173389 = t173361*t173365*t173367;
                double t173382 = t173388+t173389;
                double t173383 = t173361*t173370*6.0;
                double t173384 = gcab*t173361*t173370*t173367*4.0;
                double t173385 = t173374*t173376;
                double t173386 = gcab*t173367*4.0;
                double t173387 = t173383+t173384+t173385+t173386+1.0;
                double t173390 = 1.0/(t173373*t173373);
                double t173395 = 1.0/(t173387*t173387);
                double t173399 = 1.0/(t173381*t173381);
                double t173400 = c0p*t173305*t173307*2.0;
                double t173401 = b1f*t173317;
                double t173402 = b3f*t173318;
                double t173403 = b4f*t173319*t173294;
                double t173404 = b2f*c*t173315;
                double t173405 = t173401+t173402+t173403+t173404;
                double t173406 = 1.0/t173405;
                double t173407 = t173314*t173406*(1.0/2.0);
                double t173408 = t173407+1.0;
                double t173409 = log(t173408);
                double t173410 = a1f*c*t173315;
                double t173411 = t173410+1.0;
                double t173412 = t173331-c0f*t173411*t173409*2.0;
                double t173413 = t173331-t173310*t173313*t173412;
                double t173414 = gcaa*gcaa;
                double t173415 = gamma_bb[index]*gamma_bb[index];
                double t173416 = t173414*t173414;
                double t173417 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t173418 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t173419 = gamma_bb[index]*gcaa*t173365;
                double t173420 = t173419+1.0;
                double t173421 = gamma_bb[index]*gcaa*t173365*2.0;
                double t173422 = t173414*t173415*t173362;
                double t173423 = t173421+t173422+1.0;
                double t173424 = gamma_bb[index]*gcaa*t173365*3.0;
                double t173425 = gamma_bb[index]*gcaa*t173414*t173415*t173418;
                double t173426 = t173414*t173415*t173362*3.0;
                double t173427 = t173424+t173425+t173426+1.0;
                double t173428 = t173415*t173415;
                double t173444 = gcaa*t173365*4.0;
                double t173445 = gamma_bb[index]*t173414*t173362*1.2E1;
                double t173446 = gcaa*t173414*t173415*t173418*1.2E1;
                double t173447 = gamma_bb[index]*t173415*t173416*t173417*4.0;
                double t173429 = t173444+t173445+t173446+t173447;
                double t173430 = gamma_bb[index]*gcaa*t173365*4.0;
                double t173431 = gamma_bb[index]*gcaa*t173414*t173415*t173418*4.0;
                double t173432 = t173414*t173415*t173362*6.0;
                double t173433 = t173416*t173417*t173428;
                double t173434 = t173430+t173431+t173432+t173433+1.0;
                double t173437 = gcaa*t173365*2.0;
                double t173438 = gamma_bb[index]*t173414*t173362*2.0;
                double t173435 = t173437+t173438;
                double t173436 = 1.0/(t173427*t173427);
                double t173439 = 1.0/(t173423*t173423);
                double t173440 = gcaa*t173365*3.0;
                double t173441 = gamma_bb[index]*t173414*t173362*6.0;
                double t173442 = gcaa*t173414*t173415*t173418*3.0;
                double t173443 = t173440+t173441+t173442;
                double t173448 = 1.0/(t173434*t173434);
                double t173449 = gx*gx;
                double t173450 = t173449*t173449;
                double t173451 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t173452 = gamma_bb[index]*gx*t173365*4.0;
                double t173453 = gamma_bb[index]*gx*t173415*t173418*t173449*4.0;
                double t173454 = t173415*t173362*t173449*6.0;
                double t173455 = t173450*t173417*t173428;
                double t173456 = t173452+t173453+t173454+t173455+1.0;
                double t173457 = 1.0/t173456;
                double t173458 = cx4*t173450*t173417*t173428*t173457*(4.190715359480463E15/2.251799813685248E15);
                double t173459 = gamma_bb[index]*gx*t173365;
                double t173460 = t173459+1.0;
                double t173461 = 1.0/t173460;
                double t173462 = cx1*gamma_bb[index]*gx*t173461*t173365*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173463 = gamma_bb[index]*gx*t173365*3.0;
                double t173464 = gamma_bb[index]*gx*t173415*t173418*t173449;
                double t173465 = t173415*t173362*t173449*3.0;
                double t173466 = t173463+t173464+t173465+1.0;
                double t173467 = 1.0/t173466;
                double t173468 = cx3*gamma_bb[index]*gx*t173415*t173418*t173449*t173467*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173469 = gamma_bb[index]*gx*t173365*2.0;
                double t173470 = t173415*t173362*t173449;
                double t173471 = t173470+t173469+1.0;
                double t173472 = 1.0/t173471;
                double t173473 = cx2*t173415*t173362*t173472*t173449*(4.190715359480463E15/2.251799813685248E15);
                double t173474 = t173451+t173462+t173473+t173458+t173468;
                double t173475 = 1.0/t173474;
                double t173476 = 1.0/(omega*omega);
                double t173477 = pow(rho_b[index],2.0/3.0);
                double t173500 = t173475*t173476*t173477*(1.4000771998813E29/4.951760157141521E27);
                double t173478 = exp(-t173500);
                double t173479 = cx1*gx*t173461*t173365*(4.190715359480463E15/2.251799813685248E15);
                double t173480 = cx4*gamma_bb[index]*t173450*t173415*t173417*t173457*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t173481 = cx2*gamma_bb[index]*t173362*t173472*t173449*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173482 = cx3*gx*t173415*t173418*t173449*t173467*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t173483 = 1.0/(t173460*t173460);
                double t173484 = gx*t173365*3.0;
                double t173485 = gamma_bb[index]*t173362*t173449*6.0;
                double t173486 = gx*t173415*t173418*t173449*3.0;
                double t173487 = t173484+t173485+t173486;
                double t173488 = 1.0/(t173466*t173466);
                double t173489 = gx*t173365*4.0;
                double t173490 = gamma_bb[index]*t173362*t173449*1.2E1;
                double t173491 = gx*t173415*t173418*t173449*1.2E1;
                double t173492 = gamma_bb[index]*t173450*t173415*t173417*4.0;
                double t173493 = t173490+t173491+t173492+t173489;
                double t173494 = 1.0/(t173456*t173456);
                double t173495 = gx*t173365*2.0;
                double t173496 = gamma_bb[index]*t173362*t173449*2.0;
                double t173497 = t173495+t173496;
                double t173498 = 1.0/(t173471*t173471);
                double t173501 = cx1*gamma_bb[index]*t173362*t173483*t173449*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173502 = cx3*gamma_bb[index]*gx*t173415*t173418*t173449*t173487*t173488*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t173503 = cx4*t173450*t173417*t173428*t173493*t173494*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173504 = cx2*t173415*t173362*t173449*t173497*t173498*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173499 = -t173501-t173502-t173503-t173504+t173480+t173481+t173482+t173479;
                double t173505 = omega*omega;
                double t173506 = t173478-1.0;
                double t173507 = sqrt(t173474);
                double t173508 = 1.0/omega;
                double t173509 = pow(rho_b[index],1.0/3.0);
                double t173510 = 1.0/sqrt(t173474);
                double t173511 = t173505*t173506*t173319*t173474*(2.475880078570761E27/1.4000771998813E29);
                double t173512 = t173511-t173478+3.0/2.0;
                double t173513 = pow(rho_b[index],4.0/3.0);
                double t173514 = t173510*t173508*t173509*(3.74176054803257E14/7.0368744177664E13);
                double t173515 = erf(t173514);
                double t173516 = t173515*(3.991211251234741E15/2.251799813685248E15);
                double t173559 = omega*t173512*t173315*t173507*(7.0368744177664E13/3.74176054803257E14);
                double t173517 = t173516-t173559;
                double t173518 = 1.0/(t173460*t173460*t173460);
                double t173519 = t173362*t173449*6.0;
                double t173520 = gamma_bb[index]*gx*t173418*t173449*6.0;
                double t173521 = t173520+t173519;
                double t173522 = t173493*t173493;
                double t173523 = 1.0/(t173456*t173456*t173456);
                double t173524 = t173497*t173497;
                double t173525 = 1.0/(t173471*t173471*t173471);
                double t173526 = t173362*t173449*1.2E1;
                double t173527 = gamma_bb[index]*gx*t173418*t173449*2.4E1;
                double t173528 = t173450*t173415*t173417*1.2E1;
                double t173529 = t173526+t173527+t173528;
                double t173530 = t173487*t173487;
                double t173531 = 1.0/(t173466*t173466*t173466);
                double t173532 = cx1*t173362*t173483*t173449*(4.190715359480463E15/1.125899906842624E15);
                double t173533 = cx2*t173450*t173415*t173417*t173498*(4.190715359480463E15/1.125899906842624E15);
                double t173534 = cx3*gamma_bb[index]*gx*t173521*t173415*t173418*t173449*t173488*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t173535 = cx3*gx*t173415*t173418*t173449*t173487*t173488*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t173536 = cx4*t173450*t173417*t173428*t173529*t173494*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t173537 = cx2*gamma_bb[index]*t173362*t173449*t173497*t173498*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t173538 = cx4*gamma_bb[index]*t173450*t173415*t173417*t173493*t173494*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t173542 = cx2*t173362*t173472*t173449*(4.190715359480463E15/1.125899906842624E15);
                double t173543 = cx3*gamma_bb[index]*gx*t173418*t173449*t173467*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t173544 = cx4*t173450*t173415*t173417*t173457*(1.257214607844139E16/5.62949953421312E14);
                double t173545 = cx1*gamma_bb[index]*gx*t173418*t173518*t173449*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173546 = cx4*t173450*t173522*t173523*t173417*t173428*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173547 = cx2*t173415*t173362*t173524*t173525*t173449*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t173548 = cx3*gamma_bb[index]*gx*t173530*t173531*t173415*t173418*t173449*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t173539 = t173532+t173533-t173542+t173534-t173543+t173535-t173544+t173536-t173545+t173537- \
                   t173546+t173538-t173547-t173548;
                double t173540 = t173499*t173499;
                double t173541 = 1.0/(t173474*t173474);
                double t173549 = t173475*t173478*t173499*(1.0/2.0);
                double t173550 = t173505*t173506*t173319*t173499*(2.475880078570761E27/1.4000771998813E29);
                double t173554 = t173541*t173476*t173477*t173478*t173499*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t173551 = t173550-t173554+t173549;
                double t173552 = 1.0/pow(t173474,3.0/2.0);
                double t173553 = 1.0/sqrt(3.141592653589793);
                double t173555 = omega*t173315*t173551*t173507*(7.0368744177664E13/3.74176054803257E14);
                double t173556 = omega*t173510*t173512*t173315*t173499*(3.5184372088832E13/3.74176054803257E14);
                double t173557 = t173552*t173508*t173553*t173509*t173478*t173499*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t173558 = t173555+t173556+t173557;
                v_gamma_bb_gamma_bb_[index] = (rho_b[index]*t173413+rho_a[index]*(t173400-t173310*t173313*(t173400- \
                   c0f*log((t173314*(1.0/2.0))/(b1f*t173292+b3f*t173293+b2f*c*t173290+b4f*t173294*t173295)+1.0)*(a1f* \
                   c*t173290+1.0)*2.0))-t173332*(t173349-t173313*t173360*t173354*t173355*(t173349-c0f*log((t173314*(1.0/ \
                   2.0))/(b1f*t173335+b3f*t173336+b2f*c*t173333+b4f*t173337*t173294)+1.0)*(a1f*c*t173333+1.0)*2.0)+(Aa* \
                   t173313*t173360*log((1.0/2.0)/(Aa*(b1a*t173335+b3a*t173336+b2a*c*t173333+b4a*t173337*t173294))+1.0) \
                   *(t173354*t173355-1.0)*(a1a*c*t173333+1.0)*2.0)/d2fz0))*((ccab2*t173361*t173362*(1.0/2.0))/t173373- \
                   ccab1*t173361*t173362*1.0/(t173369*t173369)*(1.0/2.0)+ccab2*t173361*t173370*1.0/(t173373*t173373*t173373) \
                   *(t173382*t173382)*2.0+ccab4*t173374*(t173375*t173375)*t173376*1.0/(t173387*t173387*t173387)*2.0-ccab2* \
                   t173370*t173362*t173390*t173374*(1.0/2.0)-ccab4*t173374*t173376*t173395*(t173361*t173362*3.0+t173370* \
                   t173362*t173374*3.0+gcab*t173361*t173362*t173367*6.0)+(ccab4*t173370*t173362*t173374*3.0)/t173387- \
                   ccab2*t173361*t173390*t173382*t173365*t173367*2.0+(ccab3*gcab*t173361*t173362*t173367*(3.0/2.0))/t173381+ \
                   ccab1*gcab*t173361*t173362*t173367*1.0/(t173369*t173369*t173369)*(1.0/2.0)+ccab3*gcab*t173361*t173370* \
                   1.0/(t173381*t173381*t173381)*t173367*(t173377*t173377)*2.0-ccab3*gcab*t173361*t173370*t173365*t173377* \
                   t173399*3.0-ccab4*t173370*t173365*t173374*t173375*t173367*t173395*4.0-ccab3*gcab*t173361*t173370*t173367* \
                   t173399*(t173361*t173362*(3.0/2.0)+gcab*t173361*t173362*t173367*(3.0/2.0)))+rho_b[index]*t173413*(ccaa1* \
                   1.0/(t173420*t173420)*t173414*t173362*2.0-(ccaa2*t173414*t173362*2.0)/t173423+ccaa2*t173415*t173416* \
                   t173417*t173439*2.0-(ccaa4*t173415*t173416*t173417*1.2E1)/t173434+ccaa4*t173416*t173417*t173428*t173448* \
                   (t173414*t173362*1.2E1+t173415*t173416*t173417*1.2E1+gamma_bb[index]*gcaa*t173414*t173418*2.4E1)-ccaa1* \
                   gamma_bb[index]*gcaa*1.0/(t173420*t173420*t173420)*t173414*t173418*2.0-(ccaa3*gamma_bb[index]*gcaa* \
                   t173414*t173418*6.0)/t173427-ccaa2*t173414*1.0/(t173423*t173423*t173423)*t173415*t173362*(t173435* \
                   t173435)*2.0-ccaa4*t173416*1.0/(t173434*t173434*t173434)*t173417*t173428*(t173429*t173429)*2.0+ccaa2* \
                   gamma_bb[index]*t173414*t173362*t173435*t173439*4.0+ccaa4*gamma_bb[index]*t173415*t173416*t173417* \
                   t173429*t173448*8.0+ccaa3*gcaa*t173414*t173415*t173443*t173418*t173436*6.0+ccaa3*gamma_bb[index]*gcaa* \
                   t173414*t173415*t173418*t173436*(t173414*t173362*6.0+gamma_bb[index]*gcaa*t173414*t173418*6.0)-ccaa3* \
                   gamma_bb[index]*gcaa*t173414*t173415*(t173443*t173443)*t173418*1.0/(t173427*t173427*t173427)*2.0)+ \
                   c0*t173513*(omega*t173315*t173507*(omega*t173315*t173507*(t173475*t173539*t173478*(1.0/2.0)+t173505* \
                   t173506*t173319*t173539*(2.475880078570761E27/1.4000771998813E29)-t173540*1.0/(t173474*t173474*t173474) \
                   *t173476*t173477*t173478*(7.000385999406499E29/9.903520314283042E27)+1.0/(omega*omega*omega*omega) \
                   *t173513*t173540*1.0/(t173474*t173474*t173474*t173474)*t173478*(1.960216165627461E58/2.451992865385422E55) \
                   -t173541*t173476*t173539*t173477*t173478*(1.4000771998813E29/4.951760157141521E27))*(7.0368744177664E13/ \
                   3.74176054803257E14)+omega*t173512*t173315*t173540*t173552*(1.7592186044416E13/3.74176054803257E14) \
                   +omega*t173510*t173512*t173315*t173539*(3.5184372088832E13/3.74176054803257E14)-omega*t173510*t173315* \
                   t173551*t173499*(7.0368744177664E13/3.74176054803257E14)+t173552*t173508*t173553*t173509*t173539*t173478* \
                   (1.493415679873386E30/1.584563250285287E29)+t173540*t173508*t173553*t173509*1.0/pow(t173474,5.0/2.0) \
                   *t173478*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega)*rho_b[index]*t173540* \
                   t173553*1.0/pow(t173474,7.0/2.0)*t173478*(2.090897243335959E59/7.846377169233351E56))*(-2.81474976710656E14/ \
                   1.122528164409771E15)+omega*t173315*t173540*t173552*t173517*(7.0368744177664E13/1.122528164409771E15) \
                   +omega*t173510*t173315*t173517*t173539*(1.40737488355328E14/1.122528164409771E15)+omega*t173510*t173315* \
                   t173558*t173499*(2.81474976710656E14/1.122528164409771E15))*(cx0+cx1*gamma_bb[index]*gx*t173461*t173365+ \
                   cx2*t173415*t173362*t173472*t173449+cx4*t173450*t173417*t173428*t173457+cx3*gamma_bb[index]*gx*t173415* \
                   t173418*t173449*t173467)+c0*t173513*(omega*t173315*t173507*t173558*(2.81474976710656E14/1.122528164409771E15) \
                   -omega*t173510*t173315*t173517*t173499*(1.40737488355328E14/1.122528164409771E15))*(cx1*gx*t173461* \
                   t173365-cx1*gamma_bb[index]*t173362*t173483*t173449+cx2*gamma_bb[index]*t173362*t173472*t173449*2.0- \
                   cx2*t173415*t173362*t173449*t173497*t173498-cx4*t173450*t173417*t173428*t173493*t173494+cx4*gamma_bb[index]* \
                   t173450*t173415*t173417*t173457*4.0+cx3*gx*t173415*t173418*t173449*t173467*3.0-cx3*gamma_bb[index]* \
                   gx*t173415*t173418*t173449*t173487*t173488)*2.0+c0*t173513*(omega*t173315*t173507*t173517*(2.81474976710656E14/ \
                   1.122528164409771E15)-1.0)*(cx1*t173362*t173483*t173449*2.0-cx2*t173362*t173472*t173449*2.0+cx2*t173450* \
                   t173415*t173417*t173498*2.0-cx4*t173450*t173415*t173417*t173457*1.2E1-cx2*t173415*t173362*t173524* \
                   t173525*t173449*2.0-cx4*t173450*t173522*t173523*t173417*t173428*2.0+cx4*t173450*t173417*t173428*t173529* \
                   t173494-cx1*gamma_bb[index]*gx*t173418*t173518*t173449*2.0-cx3*gamma_bb[index]*gx*t173418*t173449* \
                   t173467*6.0+cx2*gamma_bb[index]*t173362*t173449*t173497*t173498*4.0+cx4*gamma_bb[index]*t173450*t173415* \
                   t173417*t173493*t173494*8.0+cx3*gx*t173415*t173418*t173449*t173487*t173488*6.0-cx3*gamma_bb[index]* \
                   gx*t173530*t173531*t173415*t173418*t173449*2.0+cx3*gamma_bb[index]*gx*t173521*t173415*t173418*t173449* \
                   t173488);
            } else if (rho_a[index] > cutoff_) {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                double t174489 = 1.0/pow(rho_b[index],1.0/3.0);
                double t174490 = c*t174489;
                double t174491 = sqrt(t174490);
                double t174492 = pow(t174490,3.0/2.0);
                double t174493 = c*c;
                double t174494 = 1.0/pow(rho_b[index],2.0/3.0);
                double t174495 = 1.0/c0p;
                double t174496 = b1p*t174491;
                double t174497 = b3p*t174492;
                double t174498 = b4p*t174493*t174494;
                double t174499 = b2p*c*t174489;
                double t174500 = t174496+t174497+t174498+t174499;
                double t174501 = 1.0/t174500;
                double t174502 = t174501*t174495*(1.0/2.0);
                double t174503 = t174502+1.0;
                double t174504 = log(t174503);
                double t174505 = a1p*c*t174489;
                double t174506 = t174505+1.0;
                double t174507 = gcaa*gcaa;
                double t174508 = 1.0/pow(rho_b[index],1.6E1/3.0);
                double t174509 = 1.0/pow(rho_b[index],8.0/3.0);
                double t174510 = gamma_bb[index]*gamma_bb[index];
                double t174511 = t174507*t174507;
                double t174512 = 1.0/pow(rho_b[index],3.2E1/3.0);
                double t174513 = 1.0/(rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]*rho_b[index]* \
                   rho_b[index]*rho_b[index]);
                double t174514 = gamma_bb[index]*gcaa*t174509;
                double t174515 = t174514+1.0;
                double t174516 = gamma_bb[index]*gcaa*t174509*2.0;
                double t174517 = t174510*t174507*t174508;
                double t174518 = t174516+t174517+1.0;
                double t174519 = gamma_bb[index]*gcaa*t174509*3.0;
                double t174520 = gamma_bb[index]*gcaa*t174510*t174513*t174507;
                double t174521 = t174510*t174507*t174508*3.0;
                double t174522 = t174520+t174521+t174519+1.0;
                double t174523 = t174510*t174510;
                double t174539 = gcaa*t174509*4.0;
                double t174540 = gamma_bb[index]*t174507*t174508*1.2E1;
                double t174541 = gcaa*t174510*t174513*t174507*1.2E1;
                double t174542 = gamma_bb[index]*t174510*t174511*t174512*4.0;
                double t174524 = t174540+t174541+t174542+t174539;
                double t174525 = gamma_bb[index]*gcaa*t174509*4.0;
                double t174526 = gamma_bb[index]*gcaa*t174510*t174513*t174507*4.0;
                double t174527 = t174510*t174507*t174508*6.0;
                double t174528 = t174511*t174512*t174523;
                double t174529 = t174525+t174526+t174527+t174528+1.0;
                double t174532 = gcaa*t174509*2.0;
                double t174533 = gamma_bb[index]*t174507*t174508*2.0;
                double t174530 = t174532+t174533;
                double t174531 = 1.0/(t174522*t174522);
                double t174534 = 1.0/(t174518*t174518);
                double t174535 = gcaa*t174509*3.0;
                double t174536 = gamma_bb[index]*t174507*t174508*6.0;
                double t174537 = gcaa*t174510*t174513*t174507*3.0;
                double t174538 = t174535+t174536+t174537;
                double t174543 = 1.0/(t174529*t174529);
                double t174544 = gx*gx;
                double t174545 = t174544*t174544;
                double t174546 = cx0*(4.190715359480463E15/2.251799813685248E15);
                double t174547 = gamma_bb[index]*gx*t174509*4.0;
                double t174548 = gamma_bb[index]*gx*t174510*t174513*t174544*4.0;
                double t174549 = t174510*t174508*t174544*6.0;
                double t174550 = t174512*t174523*t174545;
                double t174551 = t174550+t174547+t174548+t174549+1.0;
                double t174552 = 1.0/t174551;
                double t174553 = cx4*t174512*t174523*t174552*t174545*(4.190715359480463E15/2.251799813685248E15);
                double t174554 = gamma_bb[index]*gx*t174509;
                double t174555 = t174554+1.0;
                double t174556 = 1.0/t174555;
                double t174557 = cx1*gamma_bb[index]*gx*t174509*t174556*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174558 = gamma_bb[index]*gx*t174509*3.0;
                double t174559 = gamma_bb[index]*gx*t174510*t174513*t174544;
                double t174560 = t174510*t174508*t174544*3.0;
                double t174561 = t174560+t174558+t174559+1.0;
                double t174562 = 1.0/t174561;
                double t174563 = cx3*gamma_bb[index]*gx*t174510*t174513*t174544*t174562*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174564 = gamma_bb[index]*gx*t174509*2.0;
                double t174565 = t174510*t174508*t174544;
                double t174566 = t174564+t174565+1.0;
                double t174567 = 1.0/t174566;
                double t174568 = cx2*t174510*t174508*t174544*t174567*(4.190715359480463E15/2.251799813685248E15);
                double t174569 = t174553+t174563+t174546+t174557+t174568;
                double t174570 = 1.0/t174569;
                double t174571 = 1.0/(omega*omega);
                double t174572 = pow(rho_b[index],2.0/3.0);
                double t174595 = t174570*t174571*t174572*(1.4000771998813E29/4.951760157141521E27);
                double t174573 = exp(-t174595);
                double t174574 = cx1*gx*t174509*t174556*(4.190715359480463E15/2.251799813685248E15);
                double t174575 = cx4*gamma_bb[index]*t174510*t174512*t174552*t174545*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t174576 = cx2*gamma_bb[index]*t174508*t174544*t174567*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174577 = cx3*gx*t174510*t174513*t174544*t174562*(1.257214607844139E16/2.251799813685248E15) \
                   ;
                double t174578 = 1.0/(t174555*t174555);
                double t174579 = gx*t174509*3.0;
                double t174580 = gamma_bb[index]*t174508*t174544*6.0;
                double t174581 = gx*t174510*t174513*t174544*3.0;
                double t174582 = t174580+t174581+t174579;
                double t174583 = 1.0/(t174561*t174561);
                double t174584 = gx*t174509*4.0;
                double t174585 = gamma_bb[index]*t174508*t174544*1.2E1;
                double t174586 = gx*t174510*t174513*t174544*1.2E1;
                double t174587 = gamma_bb[index]*t174510*t174512*t174545*4.0;
                double t174588 = t174584+t174585+t174586+t174587;
                double t174589 = 1.0/(t174551*t174551);
                double t174590 = gx*t174509*2.0;
                double t174591 = gamma_bb[index]*t174508*t174544*2.0;
                double t174592 = t174590+t174591;
                double t174593 = 1.0/(t174566*t174566);
                double t174596 = cx1*gamma_bb[index]*t174508*t174544*t174578*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174597 = cx3*gamma_bb[index]*gx*t174510*t174513*t174544*t174582*t174583*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t174598 = cx4*t174512*t174523*t174545*t174588*t174589*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174599 = cx2*t174510*t174508*t174544*t174592*t174593*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174594 = t174574+t174575+t174576+t174577-t174596-t174597-t174598-t174599;
                double t174600 = omega*omega;
                double t174601 = t174573-1.0;
                double t174602 = sqrt(t174569);
                double t174603 = 1.0/omega;
                double t174604 = pow(rho_b[index],1.0/3.0);
                double t174605 = 1.0/sqrt(t174569);
                double t174606 = t174600*t174601*t174494*t174569*(2.475880078570761E27/1.4000771998813E29);
                double t174607 = t174606-t174573+3.0/2.0;
                double t174608 = pow(rho_b[index],4.0/3.0);
                double t174609 = t174603*t174604*t174605*(3.74176054803257E14/7.0368744177664E13);
                double t174610 = erf(t174609);
                double t174611 = t174610*(3.991211251234741E15/2.251799813685248E15);
                double t174654 = omega*t174602*t174607*t174489*(7.0368744177664E13/3.74176054803257E14);
                double t174612 = t174611-t174654;
                double t174613 = 1.0/(t174555*t174555*t174555);
                double t174614 = t174508*t174544*6.0;
                double t174615 = gamma_bb[index]*gx*t174513*t174544*6.0;
                double t174616 = t174614+t174615;
                double t174617 = t174588*t174588;
                double t174618 = 1.0/(t174551*t174551*t174551);
                double t174619 = t174592*t174592;
                double t174620 = 1.0/(t174566*t174566*t174566);
                double t174621 = t174508*t174544*1.2E1;
                double t174622 = gamma_bb[index]*gx*t174513*t174544*2.4E1;
                double t174623 = t174510*t174512*t174545*1.2E1;
                double t174624 = t174621+t174622+t174623;
                double t174625 = t174582*t174582;
                double t174626 = 1.0/(t174561*t174561*t174561);
                double t174627 = cx1*t174508*t174544*t174578*(4.190715359480463E15/1.125899906842624E15);
                double t174628 = cx2*t174510*t174512*t174545*t174593*(4.190715359480463E15/1.125899906842624E15);
                double t174629 = cx3*gamma_bb[index]*gx*t174510*t174513*t174544*t174616*t174583*(4.190715359480463E15/ \
                   2.251799813685248E15);
                double t174630 = cx3*gx*t174510*t174513*t174544*t174582*t174583*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t174631 = cx4*t174512*t174523*t174624*t174545*t174589*(4.190715359480463E15/2.251799813685248E15) \
                   ;
                double t174632 = cx2*gamma_bb[index]*t174508*t174544*t174592*t174593*(4.190715359480463E15/5.62949953421312E14) \
                   ;
                double t174633 = cx4*gamma_bb[index]*t174510*t174512*t174545*t174588*t174589*(4.190715359480463E15/ \
                   2.81474976710656E14);
                double t174637 = cx2*t174508*t174544*t174567*(4.190715359480463E15/1.125899906842624E15);
                double t174638 = cx3*gamma_bb[index]*gx*t174513*t174544*t174562*(1.257214607844139E16/1.125899906842624E15) \
                   ;
                double t174639 = cx4*t174510*t174512*t174552*t174545*(1.257214607844139E16/5.62949953421312E14);
                double t174640 = cx1*gamma_bb[index]*gx*t174513*t174613*t174544*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174641 = cx4*t174512*t174523*t174545*t174617*t174618*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174642 = cx2*t174510*t174620*t174508*t174544*t174619*(4.190715359480463E15/1.125899906842624E15) \
                   ;
                double t174643 = cx3*gamma_bb[index]*gx*t174510*t174513*t174544*t174625*t174626*(4.190715359480463E15/ \
                   1.125899906842624E15);
                double t174634 = t174630+t174631-t174640+t174632-t174641+t174633-t174642-t174643+t174627+t174628- \
                   t174637+t174629-t174638-t174639;
                double t174635 = t174594*t174594;
                double t174636 = 1.0/(t174569*t174569);
                double t174644 = t174570*t174573*t174594*(1.0/2.0);
                double t174645 = t174600*t174601*t174494*t174594*(2.475880078570761E27/1.4000771998813E29);
                double t174649 = t174571*t174572*t174573*t174636*t174594*(1.4000771998813E29/4.951760157141521E27) \
                   ;
                double t174646 = t174644+t174645-t174649;
                double t174647 = 1.0/pow(t174569,3.0/2.0);
                double t174648 = 1.0/sqrt(3.141592653589793);
                double t174650 = omega*t174602*t174646*t174489*(7.0368744177664E13/3.74176054803257E14);
                double t174651 = omega*t174605*t174607*t174594*t174489*(3.5184372088832E13/3.74176054803257E14);
                double t174652 = t174603*t174604*t174573*t174647*t174594*t174648*(1.493415679873386E30/1.584563250285287E29) \
                   ;
                double t174653 = t174650+t174651+t174652;
                v_gamma_bb_gamma_bb_[index] = rho_b[index]*(((pow(2.0,1.0/3.0)*2.0-2.0)*(c0f*log((1.0/2.0)/(c0f*(b1f* \
                   t174491+b3f*t174492+b2f*c*t174489+b4f*t174493*t174494))+1.0)*(a1f*c*t174489+1.0)*2.0-c0p*t174504*t174506* \
                   2.0))/(two_13*2.0-2.0)+c0p*t174504*t174506*2.0)*(ccaa1*1.0/(t174515*t174515)*t174507*t174508*2.0-(ccaa2* \
                   t174507*t174508*2.0)/t174518+ccaa2*t174510*t174511*t174512*t174534*2.0-(ccaa4*t174510*t174511*t174512* \
                   1.2E1)/t174529+ccaa4*t174511*t174512*t174523*t174543*(t174507*t174508*1.2E1+t174510*t174511*t174512* \
                   1.2E1+gamma_bb[index]*gcaa*t174513*t174507*2.4E1)-(ccaa3*gamma_bb[index]*gcaa*t174513*t174507*6.0) \
                   /t174522-ccaa1*gamma_bb[index]*gcaa*t174513*1.0/(t174515*t174515*t174515)*t174507*2.0-ccaa2*t174510* \
                   (t174530*t174530)*t174507*t174508*1.0/(t174518*t174518*t174518)*2.0-ccaa4*t174511*t174512*t174523* \
                   (t174524*t174524)*1.0/(t174529*t174529*t174529)*2.0+ccaa2*gamma_bb[index]*t174530*t174507*t174534* \
                   t174508*4.0+ccaa4*gamma_bb[index]*t174510*t174511*t174512*t174524*t174543*8.0+ccaa3*gcaa*t174510*t174513* \
                   t174531*t174507*t174538*6.0+ccaa3*gamma_bb[index]*gcaa*t174510*t174513*t174531*t174507*(t174507*t174508* \
                   6.0+gamma_bb[index]*gcaa*t174513*t174507*6.0)-ccaa3*gamma_bb[index]*gcaa*t174510*t174513*1.0/(t174522* \
                   t174522*t174522)*t174507*(t174538*t174538)*2.0)+c0*t174608*(omega*t174602*t174489*(omega*t174602*t174489* \
                   (t174570*t174634*t174573*(1.0/2.0)+t174600*t174601*t174634*t174494*(2.475880078570761E27/1.4000771998813E29) \
                   -t174571*t174572*t174635*t174573*1.0/(t174569*t174569*t174569)*(7.000385999406499E29/9.903520314283042E27) \
                   +1.0/(omega*omega*omega*omega)*t174608*t174635*t174573*1.0/(t174569*t174569*t174569*t174569)*(1.960216165627461E58/ \
                   2.451992865385422E55)-t174571*t174634*t174572*t174573*t174636*(1.4000771998813E29/4.951760157141521E27) \
                   )*(7.0368744177664E13/3.74176054803257E14)+omega*t174605*t174607*t174634*t174489*(3.5184372088832E13/ \
                   3.74176054803257E14)+omega*t174607*t174635*t174647*t174489*(1.7592186044416E13/3.74176054803257E14) \
                   -omega*t174605*t174646*t174594*t174489*(7.0368744177664E13/3.74176054803257E14)+t174603*t174604*t174634* \
                   t174573*t174647*t174648*(1.493415679873386E30/1.584563250285287E29)+t174603*t174604*t174635*t174573* \
                   t174648*1.0/pow(t174569,5.0/2.0)*(4.480247039620159E30/3.169126500570574E29)-1.0/(omega*omega*omega) \
                   *rho_b[index]*t174635*t174573*t174648*1.0/pow(t174569,7.0/2.0)*(2.090897243335959E59/7.846377169233351E56) \
                   )*(-2.81474976710656E14/1.122528164409771E15)+omega*t174612*t174605*t174634*t174489*(1.40737488355328E14/ \
                   1.122528164409771E15)+omega*t174612*t174635*t174647*t174489*(7.0368744177664E13/1.122528164409771E15) \
                   +omega*t174605*t174653*t174594*t174489*(2.81474976710656E14/1.122528164409771E15))*(cx0+cx1*gamma_bb[index]* \
                   gx*t174509*t174556+cx2*t174510*t174508*t174544*t174567+cx4*t174512*t174523*t174552*t174545+cx3*gamma_bb[index]* \
                   gx*t174510*t174513*t174544*t174562)+c0*t174608*(omega*t174602*t174653*t174489*(2.81474976710656E14/ \
                   1.122528164409771E15)-omega*t174612*t174605*t174594*t174489*(1.40737488355328E14/1.122528164409771E15) \
                   )*(cx1*gx*t174509*t174556-cx1*gamma_bb[index]*t174508*t174544*t174578+cx2*gamma_bb[index]*t174508* \
                   t174544*t174567*2.0-cx2*t174510*t174508*t174544*t174592*t174593-cx4*t174512*t174523*t174545*t174588* \
                   t174589+cx4*gamma_bb[index]*t174510*t174512*t174552*t174545*4.0+cx3*gx*t174510*t174513*t174544*t174562* \
                   3.0-cx3*gamma_bb[index]*gx*t174510*t174513*t174544*t174582*t174583)*2.0+c0*t174608*(omega*t174602* \
                   t174612*t174489*(2.81474976710656E14/1.122528164409771E15)-1.0)*(cx1*t174508*t174544*t174578*2.0-cx2* \
                   t174508*t174544*t174567*2.0+cx2*t174510*t174512*t174545*t174593*2.0-cx4*t174510*t174512*t174552*t174545* \
                   1.2E1-cx2*t174510*t174620*t174508*t174544*t174619*2.0-cx4*t174512*t174523*t174545*t174617*t174618* \
                   2.0+cx4*t174512*t174523*t174624*t174545*t174589-cx1*gamma_bb[index]*gx*t174513*t174613*t174544*2.0- \
                   cx3*gamma_bb[index]*gx*t174513*t174544*t174562*6.0+cx2*gamma_bb[index]*t174508*t174544*t174592*t174593* \
                   4.0+cx4*gamma_bb[index]*t174510*t174512*t174545*t174588*t174589*8.0+cx3*gx*t174510*t174513*t174544* \
                   t174582*t174583*6.0-cx3*gamma_bb[index]*gx*t174510*t174513*t174544*t174625*t174626*2.0+cx3*gamma_bb[index]* \
                   gx*t174510*t174513*t174544*t174616*t174583);
            } else {
                v_gamma_bb_gamma_bb_[index] = 0.0;
            } 

        }
        if (is_meta_) {

            //V_rho_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_a_[index] = 0.0;
            } else {
                v_rho_a_tau_a_[index] = 0.0;
            } 

            //V_rho_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_a_tau_b_[index] = 0.0;
            } else {
                v_rho_a_tau_b_[index] = 0.0;
            } 

            //V_rho_b_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_a_[index] = 0.0;
            } else {
                v_rho_b_tau_a_[index] = 0.0;
            } 

            //V_rho_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_rho_b_tau_b_[index] = 0.0;
            } else {
                v_rho_b_tau_b_[index] = 0.0;
            } 

            //V_tau_a_tau_a
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_a_[index] = 0.0;
            } else {
                v_tau_a_tau_a_[index] = 0.0;
            } 

            //V_tau_a_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_a_tau_b_[index] = 0.0;
            } else {
                v_tau_a_tau_b_[index] = 0.0;
            } 

            //V_tau_b_tau_b
            if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_a[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else if (rho_b[index] > cutoff_) {
                v_tau_b_tau_b_[index] = 0.0;
            } else {
                v_tau_b_tau_b_[index] = 0.0;
            } 

            if (is_gga_) {

                //V_gamma_aa_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_a_[index] = 0.0;
                } 

                //V_gamma_aa_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } else {
                    v_gamma_aa_tau_b_[index] = 0.0;
                } 

                //V_gamma_ab_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_a_[index] = 0.0;
                } 

                //V_gamma_ab_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } else {
                    v_gamma_ab_tau_b_[index] = 0.0;
                } 

                //V_gamma_bb_tau_a
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_a_[index] = 0.0;
                } 

                //V_gamma_bb_tau_b
                if (rho_a[index] > cutoff_ && rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_a[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else if (rho_b[index] > cutoff_) {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } else {
                    v_gamma_bb_tau_b_[index] = 0.0;
                } 

            }
        }
    }
}

}}

